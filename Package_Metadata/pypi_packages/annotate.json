{"info": {"author": "Adam Karpierz", "author_email": "adam@karpierz.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: zlib/libpng License", "Natural Language :: Polish", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: IronPython", "Programming Language :: Python :: Implementation :: Jython", "Programming Language :: Python :: Implementation :: PyPy", "Programming Language :: Python :: Implementation :: Stackless", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "annotate\n========\n\nFunction annotations for Python2.\n\nFeatures\n========\n\n**@annotate**\n\n| Decorator to set a function's __annotations__ like Py3.\n| http://www.python.org/dev/peps/pep-3107/\n\nOverview\n========\n\nTODO...\n\nExamples\n========\n\n.. code:: python\n\n  from typing   import Optional, Tuple, Union, Sequence\n  from annotate import annotate\n\n  from .lib import cached\n  from .    import jni\n\n  from .jobjectbase import JObjectBase\n  from .jclass      import JClass\n  from .jobject     import JObject\n\n\n  class JArray(JObjectBase):\n\n      \"\"\"Java Array\"\"\"\n\n      @classmethod\n      @annotate('JArray', size=Union[int, long])\n      def newBooleanArray(cls, size):\n          ...\n      ...\n      @classmethod\n      @annotate('JArray', size=Union[int, long])\n      def newDoubleArray(cls, size):\n          ...\n      @classmethod\n      @annotate('JArray', size=Union[int, long])\n      def newStringArray(cls, size):\n          ...\n      @classmethod\n      @annotate('JArray', size=Union[int, long], component_class=JClass)\n      def newObjectArray(cls, size, component_class):\n          ...\n\n      @annotate(jenv=jni.JNIEnv, jarr=jni.jarray, borrowed=bool)\n      def __init__(self, jenv, jarr, borrowed=False):\n          ...\n\n      def __hash__(self):\n          return super(JArray, self).__hash__()\n\n      def __len__(self):\n          return self.getLength()\n\n      @annotate(JObject, borrowed=bool)\n      def asObject(self, borrowed=False):\n          ...\n\n      @cached\n      @annotate(int)\n      def getLength(self):\n          ...\n\n      @annotate(bool, idx=int)\n      def getBoolean(self, idx):\n          ...\n      ...\n      @annotate(float, idx=int)\n      def getDouble(self, idx):\n          ...\n      @annotate(Optional[str], idx=int)\n      def getString(self, idx):\n          ...\n      @annotate(Optional[JObject], idx=int)\n      def getObject(self, idx):\n          ...\n\n      @annotate(idx=int, val=bool)\n      def setBoolean(self, idx, val):\n          ...\n      @annotate(idx=int, val=str)\n      def setChar(self, idx, val):\n          ...\n      ...\n      @annotate(idx=int, val=Union[int, long])\n      def setLong(self, idx, val):\n          ...\n      @annotate(idx=int, val=float)\n      def setDouble(self, idx, val):\n          ...\n      @annotate(idx=int, val=Optional[str])\n      def setString(self, idx, val):\n          ...\n      @annotate(idx=int, val=Optional[JObject])\n      def setObject(self, idx, val):\n          ...\n\n      @annotate('JArray', start=int, stop=int, step=int)\n      def getBooleanSlice(self, start, stop, step):\n          ...\n      ...\n      @annotate('JArray', start=int, stop=int, step=int)\n      def getDoubleSlice(self, start, stop, step):\n          ...\n      @annotate('JArray', start=int, stop=int, step=int)\n      def getStringSlice(self, start, stop, step):\n          ...\n      @annotate('JArray', start=int, stop=int, step=int)\n      def getObjectSlice(self, start, stop, step):\n          ...\n\n      @annotate(start=int, stop=int, step=int, val=Sequence[bool])\n      def setBooleanSlice(self, start, stop, step, val):\n          ...\n      @annotate(start=int, stop=int, step=int, val=Union[Sequence[str], str])\n      def setCharSlice(self, start, stop, step, val):\n          ...\n      @annotate(start=int, stop=int, step=int,\n                val=Union[Sequence[Union[int,bytes]], (bytes, bytearray)])\n      def setByteSlice(self, start, stop, step, val):\n          ...\n      ...\n      @annotate(start=int, stop=int, step=int, val=Sequence[float])\n      def setDoubleSlice(self, start, stop, step, val):\n          ...\n      @annotate(start=int, stop=int, step=int, val=Sequence[Optional[str]])\n      def setStringSlice(self, start, stop, step, val):\n          ...\n      @annotate(start=int, stop=int, step=int, val=Sequence[Optional[JObject]])\n      def setObjectSlice(self, start, stop, step, val):\n          ...\n\n      @annotate(Tuple)\n      def getBooleanBuffer(self):\n          with self.jvm as (jvm, jenv):\n              is_copy = jni.jboolean()\n              return jenv.GetBooleanArrayElements(self._jobj, is_copy), jni.sizeof(jni.jboolean), b\"B\", is_copy\n      ...\n      @annotate(Tuple)\n      def getDoubleBuffer(self):\n          with self.jvm as (jvm, jenv):\n              is_copy = jni.jboolean()\n              return jenv.GetDoubleArrayElements(self._jobj, is_copy), jni.sizeof(jni.jdouble), b\"d\", is_copy\n\n      @annotate(buf=object)\n      def releaseBooleanBuffer(self, buf):\n          with self.jvm as (jvm, jenv):\n              jenv.ReleaseBooleanArrayElements(self._jobj, jni.cast(buf, jni.POINTER(jni.jboolean)))\n      ...\n      @annotate(buf=object)\n      def releaseDoubleBuffer(self, buf):\n          with self.jvm as (jvm, jenv):\n              jenv.ReleaseDoubleArrayElements(self._jobj, jni.cast(buf, jni.POINTER(jni.jdouble)))\n\nInstallation\n============\n\nPrerequisites:\n\n+ Python 2.7 or Python 3.4 or later\n\n  * http://www.python.org/\n  * 2.7 and 3.7 are primary test environments.\n\n+ pip and setuptools\n\n  * http://pypi.org/project/pip/\n  * http://pypi.org/project/setuptools/\n\nTo install run::\n\n    python -m pip install --upgrade annotate\n\nDevelopment\n===========\n\nVisit `development page <https://github.com/karpierz/annotate>`__\n\nInstallation from sources:\n\nClone the `sources <https://github.com/karpierz/annotate>`__ and run::\n\n    python -m pip install ./annotate\n\nor on development mode::\n\n    python -m pip install --editable ./annotate\n\nPrerequisites:\n\n+ Development is strictly based on *tox*. To install it run::\n\n    python -m pip install tox\n\nLicense\n=======\n\n  | Copyright (c) 2012-2019 Adam Karpierz\n  |\n  | Licensed under the zlib/libpng License\n  | http://opensource.org/licenses/zlib/\n  | Please refer to the accompanying LICENSE file.\n\nAuthors\n=======\n\n* Adam Karpierz <adam@karpierz.net>\n\n.. _`development page`: https://github.com/karpierz/annotate/\n\nChangelog\n=========\n\n1.0.8 (2019-05-21)\n------------------\n- Update required setuptools version.\n- Setup update and improvements.\n\n1.0.7 (2018-11-08)\n------------------\n- Drop support for Python 2.6 and 3.0-3.3\n- Update required setuptools version.\n\n1.0.6 (2018-05-08)\n------------------\n- Update required setuptools version.\n- Improve and simplify setup and packaging.\n\n1.0.5 (2018-02-26)\n------------------\n- Improve and simplify setup and packaging.\n\n1.0.4 (2018-01-28)\n------------------\n- Fix a bug and inconsistencies in tox.ini\n- Update of README.rst.\n\n1.0.1 (2018-01-24)\n------------------\n- Update required Sphinx version.\n- Update doc Sphinx configuration files.\n\n1.0.0 (2017-11-18)\n------------------\n- Setup improvements.\n- Other minor improvements.\n\n0.7.4 (2017-01-05)\n------------------\n- Minor setup improvements.\n\n0.7.3 (2016-09-25)\n------------------\n- Fix bug in setup.py\n\n0.7.1 (2016-09-25)\n------------------\n- More PEP8 compliant\n\n0.6.7 (2016-09-24)\n------------------\n- Minor description suplement\n\n0.6.4 (2016-09-23)\n------------------\n- Simplify package structure.\n\n0.6.3 (2016-06-19)\n------------------\n- | Fix incompatibility for older versions of setuptools.\n  | Add example.\n\n0.6.0 (2015-08-17)\n------------------\n- Python3 support.\n\n0.5.1 (2015-02-27)\n------------------\n- | Remove 'returns' as keyword argument for declare return type.\n  | For now, the type of returned value should be declared by the\n  | first positional argument.\n\n0.3.3 (2014-09-15)\n------------------\n- Add wheels.\n\n0.3.2 (2014-09-13)\n------------------\n- Standarize package.\n\n0.3.0 (2014-09-06)\n------------------\n- Standarize package.\n- Cosmetic changes.\n\n0.2.6 (2014-06-10)\n------------------\n- Portable setup.py.\n\n0.2.5 (2014-06-10)\n------------------\n- Cosmetic changes.\n\n0.2.3 (2012-10-13)\n------------------\n- Initial release.", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.org/project/annotate/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.org/project/annotate/", "keywords": "annotate,typing,decorator", "license": "zlib/libpng License ; http://opensource.org/licenses/zlib/", "maintainer": "Adam Karpierz", "maintainer_email": "adam@karpierz.net", "name": "annotate", "package_url": "https://pypi.org/project/annotate/", "platform": "any", "project_url": "https://pypi.org/project/annotate/", "project_urls": {"Download": "http://pypi.org/project/annotate/", "Homepage": "http://pypi.org/project/annotate/"}, "release_url": "https://pypi.org/project/annotate/1.0.8/", "requires_dist": null, "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "summary": "Decorator to set a function's __annotations__ like Py3", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"annotate\">\n<h2>annotate</h2>\n<p>Function annotations for Python2.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p><strong>@annotate</strong></p>\n<div>\n<div>Decorator to set a function\u2019s __annotations__ like Py3.</div>\n<div><a href=\"http://www.python.org/dev/peps/pep-3107/\" rel=\"nofollow\">http://www.python.org/dev/peps/pep-3107/</a></div>\n</div>\n</div>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>TODO\u2026</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span>   <span class=\"kn\">import</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">Tuple</span><span class=\"p\">,</span> <span class=\"n\">Union</span><span class=\"p\">,</span> <span class=\"n\">Sequence</span>\n<span class=\"kn\">from</span> <span class=\"nn\">annotate</span> <span class=\"kn\">import</span> <span class=\"n\">annotate</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.lib</span> <span class=\"kn\">import</span> <span class=\"n\">cached</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.</span>    <span class=\"kn\">import</span> <span class=\"n\">jni</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.jobjectbase</span> <span class=\"kn\">import</span> <span class=\"n\">JObjectBase</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.jclass</span>      <span class=\"kn\">import</span> <span class=\"n\">JClass</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.jobject</span>     <span class=\"kn\">import</span> <span class=\"n\">JObject</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">JArray</span><span class=\"p\">(</span><span class=\"n\">JObjectBase</span><span class=\"p\">):</span>\n\n    <span class=\"sd\">\"\"\"Java Array\"\"\"</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">newBooleanArray</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">newDoubleArray</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">newStringArray</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">],</span> <span class=\"n\">component_class</span><span class=\"o\">=</span><span class=\"n\">JClass</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">newObjectArray</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">component_class</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">jenv</span><span class=\"o\">=</span><span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">JNIEnv</span><span class=\"p\">,</span> <span class=\"n\">jarr</span><span class=\"o\">=</span><span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jarray</span><span class=\"p\">,</span> <span class=\"n\">borrowed</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">jenv</span><span class=\"p\">,</span> <span class=\"n\">jarr</span><span class=\"p\">,</span> <span class=\"n\">borrowed</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__hash__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">JArray</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__hash__</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__len__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">getLength</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">JObject</span><span class=\"p\">,</span> <span class=\"n\">borrowed</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">asObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">borrowed</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@cached</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getLength</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"nb\">bool</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getBoolean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getDouble</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getString</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">JObject</span><span class=\"p\">],</span> <span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"nb\">bool</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setBoolean</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setChar</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">long</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setLong</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setDouble</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setString</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">idx</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">JObject</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setObject</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">idx</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getBooleanSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getDoubleSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getStringSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"s1\">'JArray'</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getObjectSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">bool</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setBooleanSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">],</span> <span class=\"nb\">str</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setCharSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span>\n              <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Union</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">,</span><span class=\"nb\">bytes</span><span class=\"p\">]],</span> <span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">,</span> <span class=\"nb\">bytearray</span><span class=\"p\">)])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setByteSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"nb\">float</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setDoubleSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">str</span><span class=\"p\">]])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setStringSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"o\">=</span><span class=\"n\">Sequence</span><span class=\"p\">[</span><span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">JObject</span><span class=\"p\">]])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">setObjectSlice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">stop</span><span class=\"p\">,</span> <span class=\"n\">step</span><span class=\"p\">,</span> <span class=\"n\">val</span><span class=\"p\">):</span>\n        <span class=\"o\">...</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">Tuple</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getBooleanBuffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">jvm</span> <span class=\"k\">as</span> <span class=\"p\">(</span><span class=\"n\">jvm</span><span class=\"p\">,</span> <span class=\"n\">jenv</span><span class=\"p\">):</span>\n            <span class=\"n\">is_copy</span> <span class=\"o\">=</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jboolean</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"n\">jenv</span><span class=\"o\">.</span><span class=\"n\">GetBooleanArrayElements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_jobj</span><span class=\"p\">,</span> <span class=\"n\">is_copy</span><span class=\"p\">),</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">sizeof</span><span class=\"p\">(</span><span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jboolean</span><span class=\"p\">),</span> <span class=\"sa\">b</span><span class=\"s2\">\"B\"</span><span class=\"p\">,</span> <span class=\"n\">is_copy</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">Tuple</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">getDoubleBuffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">jvm</span> <span class=\"k\">as</span> <span class=\"p\">(</span><span class=\"n\">jvm</span><span class=\"p\">,</span> <span class=\"n\">jenv</span><span class=\"p\">):</span>\n            <span class=\"n\">is_copy</span> <span class=\"o\">=</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jboolean</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"n\">jenv</span><span class=\"o\">.</span><span class=\"n\">GetDoubleArrayElements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_jobj</span><span class=\"p\">,</span> <span class=\"n\">is_copy</span><span class=\"p\">),</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">sizeof</span><span class=\"p\">(</span><span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jdouble</span><span class=\"p\">),</span> <span class=\"sa\">b</span><span class=\"s2\">\"d\"</span><span class=\"p\">,</span> <span class=\"n\">is_copy</span>\n\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"o\">=</span><span class=\"nb\">object</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">releaseBooleanBuffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">buf</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">jvm</span> <span class=\"k\">as</span> <span class=\"p\">(</span><span class=\"n\">jvm</span><span class=\"p\">,</span> <span class=\"n\">jenv</span><span class=\"p\">):</span>\n            <span class=\"n\">jenv</span><span class=\"o\">.</span><span class=\"n\">ReleaseBooleanArrayElements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_jobj</span><span class=\"p\">,</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">POINTER</span><span class=\"p\">(</span><span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jboolean</span><span class=\"p\">)))</span>\n    <span class=\"o\">...</span>\n    <span class=\"nd\">@annotate</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"o\">=</span><span class=\"nb\">object</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">releaseDoubleBuffer</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">buf</span><span class=\"p\">):</span>\n        <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">jvm</span> <span class=\"k\">as</span> <span class=\"p\">(</span><span class=\"n\">jvm</span><span class=\"p\">,</span> <span class=\"n\">jenv</span><span class=\"p\">):</span>\n            <span class=\"n\">jenv</span><span class=\"o\">.</span><span class=\"n\">ReleaseDoubleArrayElements</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_jobj</span><span class=\"p\">,</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">cast</span><span class=\"p\">(</span><span class=\"n\">buf</span><span class=\"p\">,</span> <span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">POINTER</span><span class=\"p\">(</span><span class=\"n\">jni</span><span class=\"o\">.</span><span class=\"n\">jdouble</span><span class=\"p\">)))</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Prerequisites:</p>\n<ul>\n<li>Python 2.7 or Python 3.4 or later<ul>\n<li><a href=\"http://www.python.org/\" rel=\"nofollow\">http://www.python.org/</a></li>\n<li>2.7 and 3.7 are primary test environments.</li>\n</ul>\n</li>\n<li>pip and setuptools<ul>\n<li><a href=\"http://pypi.org/project/pip/\" rel=\"nofollow\">http://pypi.org/project/pip/</a></li>\n<li><a href=\"http://pypi.org/project/setuptools/\" rel=\"nofollow\">http://pypi.org/project/setuptools/</a></li>\n</ul>\n</li>\n</ul>\n<p>To install run:</p>\n<pre>python -m pip install --upgrade annotate\n</pre>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>Visit <a href=\"https://github.com/karpierz/annotate\" rel=\"nofollow\">development page</a></p>\n<p>Installation from sources:</p>\n<p>Clone the <a href=\"https://github.com/karpierz/annotate\" rel=\"nofollow\">sources</a> and run:</p>\n<pre>python -m pip install ./annotate\n</pre>\n<p>or on development mode:</p>\n<pre>python -m pip install --editable ./annotate\n</pre>\n<p>Prerequisites:</p>\n<ul>\n<li><p>Development is strictly based on <em>tox</em>. To install it run:</p>\n<pre>python -m pip install tox\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<blockquote>\n<div>\n<div>Copyright (c) 2012-2019 Adam Karpierz</div>\n<div><br></div>\n<div>Licensed under the zlib/libpng License</div>\n<div><a href=\"http://opensource.org/licenses/zlib/\" rel=\"nofollow\">http://opensource.org/licenses/zlib/</a></div>\n<div>Please refer to the accompanying LICENSE file.</div>\n</div>\n</blockquote>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Adam Karpierz &lt;<a href=\"mailto:adam%40karpierz.net\">adam<span>@</span>karpierz<span>.</span>net</a>&gt;</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.0.8 (2019-05-21)</h3>\n<ul>\n<li>Update required setuptools version.</li>\n<li>Setup update and improvements.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.7 (2018-11-08)</h3>\n<ul>\n<li>Drop support for Python 2.6 and 3.0-3.3</li>\n<li>Update required setuptools version.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.6 (2018-05-08)</h3>\n<ul>\n<li>Update required setuptools version.</li>\n<li>Improve and simplify setup and packaging.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.5 (2018-02-26)</h3>\n<ul>\n<li>Improve and simplify setup and packaging.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0.4 (2018-01-28)</h3>\n<ul>\n<li>Fix a bug and inconsistencies in tox.ini</li>\n<li>Update of README.rst.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.0.1 (2018-01-24)</h3>\n<ul>\n<li>Update required Sphinx version.</li>\n<li>Update doc Sphinx configuration files.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0.0 (2017-11-18)</h3>\n<ul>\n<li>Setup improvements.</li>\n<li>Other minor improvements.</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.7.4 (2017-01-05)</h3>\n<ul>\n<li>Minor setup improvements.</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.7.3 (2016-09-25)</h3>\n<ul>\n<li>Fix bug in setup.py</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.7.1 (2016-09-25)</h3>\n<ul>\n<li>More PEP8 compliant</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.6.7 (2016-09-24)</h3>\n<ul>\n<li>Minor description suplement</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.6.4 (2016-09-23)</h3>\n<ul>\n<li>Simplify package structure.</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.6.3 (2016-06-19)</h3>\n<ul>\n<li><div>\n<div>Fix incompatibility for older versions of setuptools.</div>\n<div>Add example.</div>\n</div>\n</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.6.0 (2015-08-17)</h3>\n<ul>\n<li>Python3 support.</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.5.1 (2015-02-27)</h3>\n<ul>\n<li><div>\n<div>Remove \u2018returns\u2019 as keyword argument for declare return type.</div>\n<div>For now, the type of returned value should be declared by the</div>\n<div>first positional argument.</div>\n</div>\n</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.3.3 (2014-09-15)</h3>\n<ul>\n<li>Add wheels.</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h3>0.3.2 (2014-09-13)</h3>\n<ul>\n<li>Standarize package.</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h3>0.3.0 (2014-09-06)</h3>\n<ul>\n<li>Standarize package.</li>\n<li>Cosmetic changes.</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h3>0.2.6 (2014-06-10)</h3>\n<ul>\n<li>Portable setup.py.</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h3>0.2.5 (2014-06-10)</h3>\n<ul>\n<li>Cosmetic changes.</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h3>0.2.3 (2012-10-13)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5853215, "releases": {"1.0.7": [{"comment_text": "", "digests": {"md5": "73a24c3b295c0479891ba7abb2a132b0", "sha256": "d05f0078fe3ae6e8c67eb579108bdd074e161adaa8ea18fc08fa6d361fb2d6bd"}, "downloads": -1, "filename": "annotate-1.0.7.zip", "has_sig": false, "md5_digest": "73a24c3b295c0479891ba7abb2a132b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13194, "upload_time": "2018-11-08T20:47:23", "upload_time_iso_8601": "2018-11-08T20:47:23.781189Z", "url": "https://files.pythonhosted.org/packages/63/5b/9b6557a1bf9356ba9630229bdb16da2f61ed1a0e9b805210b86248ccf015/annotate-1.0.7.zip", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "b3379c1dd1847df1a070b1c2f76bc548", "sha256": "09b375a06d596ab2cbe7b6cc6a1eb7acebbba26f6c19bee8694681777ba484a2"}, "downloads": -1, "filename": "annotate-1.0.8.zip", "has_sig": false, "md5_digest": "b3379c1dd1847df1a070b1c2f76bc548", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 17214, "upload_time": "2019-05-21T22:13:58", "upload_time_iso_8601": "2019-05-21T22:13:58.985069Z", "url": "https://files.pythonhosted.org/packages/2b/64/e59ed3850d50908b11691300fb12c4db42822b186c9a85e160df5702c606/annotate-1.0.8.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b3379c1dd1847df1a070b1c2f76bc548", "sha256": "09b375a06d596ab2cbe7b6cc6a1eb7acebbba26f6c19bee8694681777ba484a2"}, "downloads": -1, "filename": "annotate-1.0.8.zip", "has_sig": false, "md5_digest": "b3379c1dd1847df1a070b1c2f76bc548", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.0,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*", "size": 17214, "upload_time": "2019-05-21T22:13:58", "upload_time_iso_8601": "2019-05-21T22:13:58.985069Z", "url": "https://files.pythonhosted.org/packages/2b/64/e59ed3850d50908b11691300fb12c4db42822b186c9a85e160df5702c606/annotate-1.0.8.zip", "yanked": false}], "timestamp": "Thu May  7 18:18:08 2020"}