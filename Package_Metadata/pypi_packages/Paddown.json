{"info": {"author": "EPAD", "author_email": "epadctf@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Paddown\nPaddown is an AES CBC PKCS7 [Padding Oracle Attack](https://en.wikipedia.org/wiki/Padding_oracle_attack)  engine. It simplifies performing [Padding Oracle Attack](https://en.wikipedia.org/wiki/Padding_oracle_attack) on a vulnerable encryption service. This is useful for both CTF and real-world attacks, where you are in possession of a ciphertext, and have a so called Padding Oracle available.\n\n## Usage\n* Using Paddown is as easy as subclassing the `Paddown` class overwriting the ``hasValidPadding(...)`` method retuning a `bool`. As argument it takes ciphertext to test against the Padding Oracle. Have your implementation return ``True`` if you receive no padding error and ``False`` otherwise.\n\n* Now you are ready to call `.decrypt()` on your class and start decrypting your ciphertext.\n\nExamples can be found in the `./examples` directory.\n\n## Development\n\nThe project can be setup with\n```bash\npython3 -m venv .venv\n.venv/bin/activate\npip install -r requirements/dev.txt\npre-commit install\n```\n\n### Pull requests\nWe are open to pull requests.\n\nWe use [black](https://github.com/psf/black), [flake8](https://flake8.pycqa.org/en/latest/) and [isort](https://github.com/timothycrosley/isort) for linting, and implement unit testing using [pytest](https://docs.pytest.org/en/latest/). A [pre-commit](https://pre-commit.com/) configuration file has been added, for checking against these linters before comitting.\n\nPlease squash all commits when merging a pull request.\n\n### Testing\nTo run the unittests, simply run `pytest`.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/epadctf/Paddown", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Paddown", "package_url": "https://pypi.org/project/Paddown/", "platform": "", "project_url": "https://pypi.org/project/Paddown/", "project_urls": {"Homepage": "https://github.com/epadctf/Paddown"}, "release_url": "https://pypi.org/project/Paddown/0.1.0/", "requires_dist": ["pycryptodome (==3.9.0)"], "requires_python": ">=3.7", "summary": "CBC PKCS7 Padding Oracle Attack engine", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Paddown</h1>\n<p>Paddown is an AES CBC PKCS7 <a href=\"https://en.wikipedia.org/wiki/Padding_oracle_attack\" rel=\"nofollow\">Padding Oracle Attack</a>  engine. It simplifies performing <a href=\"https://en.wikipedia.org/wiki/Padding_oracle_attack\" rel=\"nofollow\">Padding Oracle Attack</a> on a vulnerable encryption service. This is useful for both CTF and real-world attacks, where you are in possession of a ciphertext, and have a so called Padding Oracle available.</p>\n<h2>Usage</h2>\n<ul>\n<li>\n<p>Using Paddown is as easy as subclassing the <code>Paddown</code> class overwriting the <code>hasValidPadding(...)</code> method retuning a <code>bool</code>. As argument it takes ciphertext to test against the Padding Oracle. Have your implementation return <code>True</code> if you receive no padding error and <code>False</code> otherwise.</p>\n</li>\n<li>\n<p>Now you are ready to call <code>.decrypt()</code> on your class and start decrypting your ciphertext.</p>\n</li>\n</ul>\n<p>Examples can be found in the <code>./examples</code> directory.</p>\n<h2>Development</h2>\n<p>The project can be setup with</p>\n<pre>python3 -m venv .venv\n.venv/bin/activate\npip install -r requirements/dev.txt\npre-commit install\n</pre>\n<h3>Pull requests</h3>\n<p>We are open to pull requests.</p>\n<p>We use <a href=\"https://github.com/psf/black\" rel=\"nofollow\">black</a>, <a href=\"https://flake8.pycqa.org/en/latest/\" rel=\"nofollow\">flake8</a> and <a href=\"https://github.com/timothycrosley/isort\" rel=\"nofollow\">isort</a> for linting, and implement unit testing using <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a>. A <a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit</a> configuration file has been added, for checking against these linters before comitting.</p>\n<p>Please squash all commits when merging a pull request.</p>\n<h3>Testing</h3>\n<p>To run the unittests, simply run <code>pytest</code>.</p>\n\n          </div>"}, "last_serial": 6728396, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f0d7d2e3a656bc6f814efee9f4898aa1", "sha256": "727be922c4407237abaaf2d9c9332f9d8f671a3918510d2bced3e2b48cb2ef2c"}, "downloads": -1, "filename": "Paddown-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f0d7d2e3a656bc6f814efee9f4898aa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4094, "upload_time": "2020-03-01T13:36:24", "upload_time_iso_8601": "2020-03-01T13:36:24.232430Z", "url": "https://files.pythonhosted.org/packages/f1/ec/b8a2b19f5967c49ab56dbcc94762237c58c0f645275a649f148e1075d696/Paddown-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bb5712a5b6e283488b22681504b32d1", "sha256": "125e72dfcb541d766457f679427e5016bbdeb0c88861426795b784ab788d7ea2"}, "downloads": -1, "filename": "Paddown-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5bb5712a5b6e283488b22681504b32d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3186, "upload_time": "2020-03-01T13:36:26", "upload_time_iso_8601": "2020-03-01T13:36:26.204338Z", "url": "https://files.pythonhosted.org/packages/f0/86/d8fd436cf237b2b46aaa6286277905f616440879a1d557516b7736b7a9f1/Paddown-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f0d7d2e3a656bc6f814efee9f4898aa1", "sha256": "727be922c4407237abaaf2d9c9332f9d8f671a3918510d2bced3e2b48cb2ef2c"}, "downloads": -1, "filename": "Paddown-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f0d7d2e3a656bc6f814efee9f4898aa1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4094, "upload_time": "2020-03-01T13:36:24", "upload_time_iso_8601": "2020-03-01T13:36:24.232430Z", "url": "https://files.pythonhosted.org/packages/f1/ec/b8a2b19f5967c49ab56dbcc94762237c58c0f645275a649f148e1075d696/Paddown-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bb5712a5b6e283488b22681504b32d1", "sha256": "125e72dfcb541d766457f679427e5016bbdeb0c88861426795b784ab788d7ea2"}, "downloads": -1, "filename": "Paddown-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5bb5712a5b6e283488b22681504b32d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3186, "upload_time": "2020-03-01T13:36:26", "upload_time_iso_8601": "2020-03-01T13:36:26.204338Z", "url": "https://files.pythonhosted.org/packages/f0/86/d8fd436cf237b2b46aaa6286277905f616440879a1d557516b7736b7a9f1/Paddown-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:57 2020"}