{"info": {"author": "James Chambers", "author_email": "jameschambers2@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "etao\n====\n.. image:: https://badge.fury.io/py/etao.svg\n    :target: https://badge.fury.io/py/etao\n.. image:: https://travis-ci.org/jamchamb/etao.svg?branch=master\n    :target: https://travis-ci.org/jamchamb/etao\n.. image:: https://img.shields.io/codecov/c/github/jamchamb/etao.svg?maxAge=2592000\n   :target: https://codecov.io/github/jamchamb/etao\n\netao is a simple Python library that assists in the creation\nof cryptanalysis tools. It takes care of common low-level tasks\nsuch as converting letters to numeric values or splitting a buffer\ninto a bit stream or series of fixed-size blocks, as well as higher-level\nthings like frequency analysis.\n\nInstallation\n------------\nInstall with pip::\n\n    pip install etao\n\nAs of version 1.0.0 this library switched from Python 2 to Python 3; for\nPython 2 use version 0.6.0.\n\nExample Application\n-------------------\nThe following is a Caesar cipher solving tool that uses etao's frequency\nanalysis functions and built-in ciphers.\n\n.. code:: python\n\n #!/usr/bin/env python\n # Caesar cipher solver\n import argparse\n from etao import CaesarCipher, NgramFrequencyScorer\n from etao.freq import ENGLISH_DIGRAMS\n\n\n def main():\n     parser = argparse.ArgumentParser(description=\"Caesar cipher solver\")\n     parser.add_argument('ciphertext', type=str, help='text to decipher')\n     args = parser.parse_args()\n\n     scorer = NgramFrequencyScorer(freq=ENGLISH_DIGRAMS)\n\n     # Get every Caesar shift of the ciphertext\n     shifts = [CaesarCipher(n).decrypt(args.ciphertext) for n in range(26)]\n\n     # Score each shift according to English character frequency.\n     # Get tuples that pair the score with the text.\n     scored_shifts = [(scorer.score(shift), shift) for shift in shifts]\n\n     # Sort by score, descending order\n     scored_shifts.sort(reverse=True)\n\n     # Print the top 3 results\n     for result in scored_shifts[0:3]:\n         print('\"%s\" (%02d%%)' % (result[1], int(result[0] * 100)))\n\n\n if __name__ == \"__main__\":\n     main()\n\nHere's what it looks like in action:\n\n.. code-block:: console\n\n    $ ./caesar_solver.py \"O GQFSOAWBU QCASG OQFCGG HVS GYM. WH VOG VODDSBSR PSTCFS, PIH HVSFS WG BCHVWBU HC QCADOFS WH HC BCK.\"\n    \"A SCREAMING COMES ACROSS THE SKY. IT HAS HAPPENED BEFORE, BUT THERE IS NOTHING TO COMPARE IT TO NOW.\" (75%)\n    \"U MWLYUGCHA WIGYM UWLIMM NBY MES. CN BUM BUJJYHYX VYZILY, VON NBYLY CM HINBCHA NI WIGJULY CN NI HIQ.\" (36%)\n    \"P HRGTPBXCV RDBTH PRGDHH IWT HZN. XI WPH WPEETCTS QTUDGT, QJI IWTGT XH CDIWXCV ID RDBEPGT XI ID CDL.\" (35%)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jamchamb/etao", "keywords": "cryptography,cryptanalysis,ciphers", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "etao", "package_url": "https://pypi.org/project/etao/", "platform": "", "project_url": "https://pypi.org/project/etao/", "project_urls": {"Homepage": "https://github.com/jamchamb/etao"}, "release_url": "https://pypi.org/project/etao/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Simple cryptanalysis library", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/etao\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/etao.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b40fae719b0808e4b7250539478a98529282e257/68747470733a2f2f62616467652e667572792e696f2f70792f6574616f2e737667\"></a>\n<a href=\"https://travis-ci.org/jamchamb/etao\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jamchamb/etao.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc5c785ce2fd99c044c1f8e817c5a062e5c50cf8/68747470733a2f2f7472617669732d63692e6f72672f6a616d6368616d622f6574616f2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/jamchamb/etao\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/github/jamchamb/etao.svg?maxAge=2592000\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03566909601d6ded974b2f391632ef1d51b0adb4/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6a616d6368616d622f6574616f2e7376673f6d61784167653d32353932303030\"></a>\n<p>etao is a simple Python library that assists in the creation\nof cryptanalysis tools. It takes care of common low-level tasks\nsuch as converting letters to numeric values or splitting a buffer\ninto a bit stream or series of fixed-size blocks, as well as higher-level\nthings like frequency analysis.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with pip:</p>\n<pre>pip install etao\n</pre>\n<p>As of version 1.0.0 this library switched from Python 2 to Python 3; for\nPython 2 use version 0.6.0.</p>\n</div>\n<div id=\"example-application\">\n<h2>Example Application</h2>\n<p>The following is a Caesar cipher solving tool that uses etao\u2019s frequency\nanalysis functions and built-in ciphers.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n<span class=\"c1\"># Caesar cipher solver</span>\n<span class=\"kn\">import</span> <span class=\"nn\">argparse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">etao</span> <span class=\"kn\">import</span> <span class=\"n\">CaesarCipher</span><span class=\"p\">,</span> <span class=\"n\">NgramFrequencyScorer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">etao.freq</span> <span class=\"kn\">import</span> <span class=\"n\">ENGLISH_DIGRAMS</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">parser</span> <span class=\"o\">=</span> <span class=\"n\">argparse</span><span class=\"o\">.</span><span class=\"n\">ArgumentParser</span><span class=\"p\">(</span><span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s2\">\"Caesar cipher solver\"</span><span class=\"p\">)</span>\n    <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">add_argument</span><span class=\"p\">(</span><span class=\"s1\">'ciphertext'</span><span class=\"p\">,</span> <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">help</span><span class=\"o\">=</span><span class=\"s1\">'text to decipher'</span><span class=\"p\">)</span>\n    <span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse_args</span><span class=\"p\">()</span>\n\n    <span class=\"n\">scorer</span> <span class=\"o\">=</span> <span class=\"n\">NgramFrequencyScorer</span><span class=\"p\">(</span><span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"n\">ENGLISH_DIGRAMS</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Get every Caesar shift of the ciphertext</span>\n    <span class=\"n\">shifts</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">CaesarCipher</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">decrypt</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"o\">.</span><span class=\"n\">ciphertext</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">26</span><span class=\"p\">)]</span>\n\n    <span class=\"c1\"># Score each shift according to English character frequency.</span>\n    <span class=\"c1\"># Get tuples that pair the score with the text.</span>\n    <span class=\"n\">scored_shifts</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">scorer</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">shift</span><span class=\"p\">),</span> <span class=\"n\">shift</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">shift</span> <span class=\"ow\">in</span> <span class=\"n\">shifts</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># Sort by score, descending order</span>\n    <span class=\"n\">scored_shifts</span><span class=\"o\">.</span><span class=\"n\">sort</span><span class=\"p\">(</span><span class=\"n\">reverse</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Print the top 3 results</span>\n    <span class=\"k\">for</span> <span class=\"n\">result</span> <span class=\"ow\">in</span> <span class=\"n\">scored_shifts</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">3</span><span class=\"p\">]:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'\"</span><span class=\"si\">%s</span><span class=\"s1\">\" (</span><span class=\"si\">%02d%%</span><span class=\"s1\">)'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">*</span> <span class=\"mi\">100</span><span class=\"p\">)))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>Here\u2019s what it looks like in action:</p>\n<pre><span class=\"gp\">$</span> ./caesar_solver.py <span class=\"s2\">\"O GQFSOAWBU QCASG OQFCGG HVS GYM. WH VOG VODDSBSR PSTCFS, PIH HVSFS WG BCHVWBU HC QCADOFS WH HC BCK.\"</span>\n<span class=\"go\">\"A SCREAMING COMES ACROSS THE SKY. IT HAS HAPPENED BEFORE, BUT THERE IS NOTHING TO COMPARE IT TO NOW.\" (75%)\n\"U MWLYUGCHA WIGYM UWLIMM NBY MES. CN BUM BUJJYHYX VYZILY, VON NBYLY CM HINBCHA NI WIGJULY CN NI HIQ.\" (36%)\n\"P HRGTPBXCV RDBTH PRGDHH IWT HZN. XI WPH WPEETCTS QTUDGT, QJI IWTGT XH CDIWXCV ID RDBEPGT XI ID CDL.\" (35%)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 7081938, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "0c599706e23919f2da031b6aacbcf3e0", "sha256": "3ed1995694ae46967f071a3e73f85607b35be88a64aab3d9bb28f44edd001653"}, "downloads": -1, "filename": "etao-0.0.0.tar.gz", "has_sig": false, "md5_digest": "0c599706e23919f2da031b6aacbcf3e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2094, "upload_time": "2016-02-09T05:59:44", "upload_time_iso_8601": "2016-02-09T05:59:44.302811Z", "url": "https://files.pythonhosted.org/packages/71/24/d1f0c08e9b988c43066253b0442bc03dd8f4faa4d22e4177f5df33fd37d5/etao-0.0.0.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7beb968e4597491348332277d8fa0ccd", "sha256": "5a4dd93abe8bf24769c5e9fa371b5c743e9dfcd27dedb13621781e178e333dfa"}, "downloads": -1, "filename": "etao-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7beb968e4597491348332277d8fa0ccd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15636, "upload_time": "2016-03-01T04:44:35", "upload_time_iso_8601": "2016-03-01T04:44:35.496892Z", "url": "https://files.pythonhosted.org/packages/bd/42/9a529ab538611a7d6056eb6c2907ecef5bdb379743b3f6959a6638d0387d/etao-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d39872d963ec9dc14775f749eba76532", "sha256": "1183909994ddb2004582b035b1a93c622f9c4cff819309e7f0272bab0a67a5b5"}, "downloads": -1, "filename": "etao-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d39872d963ec9dc14775f749eba76532", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16198, "upload_time": "2016-03-01T17:37:48", "upload_time_iso_8601": "2016-03-01T17:37:48.786176Z", "url": "https://files.pythonhosted.org/packages/fb/fa/27aca6daf44c5310f4a9f1aed44f8589d1afe4d958981d7a06e21fa3c469/etao-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fb5d6825af5ae30b4b690e78a0d646ac", "sha256": "37cddddb6b3fbfc8e7162afdfcac2a3fbc5025324e2f55df13e9cde76b4704d8"}, "downloads": -1, "filename": "etao-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fb5d6825af5ae30b4b690e78a0d646ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20243, "upload_time": "2016-03-07T07:12:50", "upload_time_iso_8601": "2016-03-07T07:12:50.661329Z", "url": "https://files.pythonhosted.org/packages/92/72/10332a69114bec35e5aa8dcc3b2ea450150f8189178660b0a9efc5e4fea6/etao-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "538885092b24eaab1ef8b8cc97969fcf", "sha256": "eeca843ee307647f5f9530ee16beb7242cc6bf81eb9f6d6accbdd02e8b39de39"}, "downloads": -1, "filename": "etao-0.4.0.tar.gz", "has_sig": false, "md5_digest": "538885092b24eaab1ef8b8cc97969fcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20356, "upload_time": "2016-04-21T05:06:42", "upload_time_iso_8601": "2016-04-21T05:06:42.356787Z", "url": "https://files.pythonhosted.org/packages/a3/c2/1621b1092a1f95e6e6b0093468a103e4842869839931a1527d0f9d13df3a/etao-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "5a00505baf6bf96fcf4a39293284ad9f", "sha256": "2063fd7122a6d5ea63f8c9fd09f8ef0a2a283bf52260de31e30b4ba3245264cc"}, "downloads": -1, "filename": "etao-0.5.0.tar.gz", "has_sig": false, "md5_digest": "5a00505baf6bf96fcf4a39293284ad9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21667, "upload_time": "2016-09-23T02:23:32", "upload_time_iso_8601": "2016-09-23T02:23:32.865790Z", "url": "https://files.pythonhosted.org/packages/72/a6/7158cedccf5e63b3f5d7368bb8f7a93e0841546d3fa2588b4b0c2188c84a/etao-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "11d8f288096236355cb48c589ad4d1f3", "sha256": "3b1c5f7baa2df0d504538e0cb262bdb38adc0831c0c672acda5b431bd2bc3b97"}, "downloads": -1, "filename": "etao-0.6.0.tar.gz", "has_sig": false, "md5_digest": "11d8f288096236355cb48c589ad4d1f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23427, "upload_time": "2017-02-15T06:05:32", "upload_time_iso_8601": "2017-02-15T06:05:32.985159Z", "url": "https://files.pythonhosted.org/packages/a4/ee/129bd826e75ea4b94b009a07e8f5cc8518eb9bcdcfd87755eedcab4977bb/etao-0.6.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7636c3c3944e0419569d5abf04f281a8", "sha256": "532b8e980fbd2f9d5f63a0ca928e0ff3be2ed2ed3b4fa12a0e310f96de7a99ac"}, "downloads": -1, "filename": "etao-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "7636c3c3944e0419569d5abf04f281a8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21882, "upload_time": "2020-04-23T05:54:46", "upload_time_iso_8601": "2020-04-23T05:54:46.723286Z", "url": "https://files.pythonhosted.org/packages/07/0c/d2dd1802fa909866a1ea3dfb1b00cb106a1145c32a02c536720e23aa63a8/etao-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9091f0bebaa33dc965366d9e7122ec7", "sha256": "497c2500af464805e21dccc3fe7affa4572fc3613c9ee249ac96d3ee7afaa85b"}, "downloads": -1, "filename": "etao-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a9091f0bebaa33dc965366d9e7122ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24332, "upload_time": "2020-04-23T05:54:47", "upload_time_iso_8601": "2020-04-23T05:54:47.745275Z", "url": "https://files.pythonhosted.org/packages/22/13/ea2e6784d8383366adef8fb552c0b2a175073616da958938c523d9edc60f/etao-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7636c3c3944e0419569d5abf04f281a8", "sha256": "532b8e980fbd2f9d5f63a0ca928e0ff3be2ed2ed3b4fa12a0e310f96de7a99ac"}, "downloads": -1, "filename": "etao-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "7636c3c3944e0419569d5abf04f281a8", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 21882, "upload_time": "2020-04-23T05:54:46", "upload_time_iso_8601": "2020-04-23T05:54:46.723286Z", "url": "https://files.pythonhosted.org/packages/07/0c/d2dd1802fa909866a1ea3dfb1b00cb106a1145c32a02c536720e23aa63a8/etao-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9091f0bebaa33dc965366d9e7122ec7", "sha256": "497c2500af464805e21dccc3fe7affa4572fc3613c9ee249ac96d3ee7afaa85b"}, "downloads": -1, "filename": "etao-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a9091f0bebaa33dc965366d9e7122ec7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24332, "upload_time": "2020-04-23T05:54:47", "upload_time_iso_8601": "2020-04-23T05:54:47.745275Z", "url": "https://files.pythonhosted.org/packages/22/13/ea2e6784d8383366adef8fb552c0b2a175073616da958938c523d9edc60f/etao-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:32 2020"}