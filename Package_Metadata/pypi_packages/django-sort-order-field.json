{"info": {"author": "Dylan McCall", "author_email": "dylan@dylanmccall.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "================\nSort Order Field\n================\n\nSort Order Field provides a Django model field for controlling sort order.\nThe field provides an admin widget which makes it easy to arrange related\nmodels in an inline form.\n\nThis is a very naive sort field, with no awareness of the model's ordering\nproperty and very specific admin support. However, it provides a simple and\naccessible user interface which could be useful for certain situations.\n\n.. figure:: https://raw.githubusercontent.com/dylanmccall/django-sort-order-field/1.0/docs/images/sort-buttons.gif\n   :alt: screencast showing sort buttons in action\n\n   Easy to use sort buttons.\n\n.. figure:: https://raw.githubusercontent.com/dylanmccall/django-sort-order-field/1.0/docs/images/keyboard-navigation.gif\n   :alt: screencast showing sort buttons in action\n\n   Accessible keyboard navigation and non-sequential sort indexes.\n\n\n\nInstallation\n------------\n\nAdd \"sort_order_field\" to your INSTALLED_APPS setting::\n\n    INSTALLED_APPS = [\n        ...\n        'sort_order_field',\n    ]\n\nBasic usage\n-----------\n\nAdd a SortOrderField to one of your models::\n\n    from django.db import models\n    from sort_order_field import SortOrderField\n\n    class Poll(models.Model):\n        question = models.CharField(max_length=100)\n\n    class PollOption(models.Model):\n        class Meta:\n            ordering = ('sort_order',)\n\n        poll = models.ForeignKey('Poll', on_delete=models.CASCADE)\n        sort_order = SortOrderField(_(\"Sort\"))\n        label = models.CharField(max_length=100)\n\nAdd the sortable model to an inline model admin for your parent model::\n\n    from django.contrib import admin\n    from . import models\n\n    class PollOptionInline(admin.TabularInline):\n        model = models.PollOption\n        fields = ('sort_order', 'label',)\n\n    @admin.register(models.Poll)\n    class PollAdmin(admin.ModelAdmin):\n        fields = ('question',)\n        inlines = (PollOptionInline,)\n\nThe sort order field will be rendered as a text field with JavaScript\nenhancements. When the user enters a new sort order, the inline forms will be\nreorganized according to that change. The sort order fields will also be bound\nby their initial values, in order to avoid conflicts if the same objects\nappear in different inlines.\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dylanmccall/django-sort-order-field", "keywords": "django sort field", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-sort-order-field", "package_url": "https://pypi.org/project/django-sort-order-field/", "platform": "", "project_url": "https://pypi.org/project/django-sort-order-field/", "project_urls": {"Homepage": "https://github.com/dylanmccall/django-sort-order-field"}, "release_url": "https://pypi.org/project/django-sort-order-field/1.0/", "requires_dist": null, "requires_python": "", "summary": "A Django model field for controlling sort order.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Sort Order Field provides a Django model field for controlling sort order.\nThe field provides an admin widget which makes it easy to arrange related\nmodels in an inline form.</p>\n<p>This is a very naive sort field, with no awareness of the model\u2019s ordering\nproperty and very specific admin support. However, it provides a simple and\naccessible user interface which could be useful for certain situations.</p>\n<div>\n<img alt=\"screencast showing sort buttons in action\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a375817dbdfb16fa5a4ef93c5c858c9d979be36/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64796c616e6d6363616c6c2f646a616e676f2d736f72742d6f726465722d6669656c642f312e302f646f63732f696d616765732f736f72742d627574746f6e732e676966\">\n<p>Easy to use sort buttons.</p>\n</div>\n<div>\n<img alt=\"screencast showing sort buttons in action\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1a2d458ec0b0ea94ef707cd46065b11f69a8257/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f64796c616e6d6363616c6c2f646a616e676f2d736f72742d6f726465722d6669656c642f312e302f646f63732f696d616765732f6b6579626f6172642d6e617669676174696f6e2e676966\">\n<p>Accessible keyboard navigation and non-sequential sort indexes.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Add \u201csort_order_field\u201d to your INSTALLED_APPS setting:</p>\n<pre>INSTALLED_APPS = [\n    ...\n    'sort_order_field',\n]\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>Add a SortOrderField to one of your models:</p>\n<pre>from django.db import models\nfrom sort_order_field import SortOrderField\n\nclass Poll(models.Model):\n    question = models.CharField(max_length=100)\n\nclass PollOption(models.Model):\n    class Meta:\n        ordering = ('sort_order',)\n\n    poll = models.ForeignKey('Poll', on_delete=models.CASCADE)\n    sort_order = SortOrderField(_(\"Sort\"))\n    label = models.CharField(max_length=100)\n</pre>\n<p>Add the sortable model to an inline model admin for your parent model:</p>\n<pre>from django.contrib import admin\nfrom . import models\n\nclass PollOptionInline(admin.TabularInline):\n    model = models.PollOption\n    fields = ('sort_order', 'label',)\n\n@admin.register(models.Poll)\nclass PollAdmin(admin.ModelAdmin):\n    fields = ('question',)\n    inlines = (PollOptionInline,)\n</pre>\n<p>The sort order field will be rendered as a text field with JavaScript\nenhancements. When the user enters a new sort order, the inline forms will be\nreorganized according to that change. The sort order fields will also be bound\nby their initial values, in order to avoid conflicts if the same objects\nappear in different inlines.</p>\n</div>\n\n          </div>"}, "last_serial": 4744477, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "a6b68e9ebb5f11671d95d742b06564cf", "sha256": "cd334d393e6e82386b0ad18a70621cfe2950ea99afe664df24fd4703ac051d51"}, "downloads": -1, "filename": "django_sort_order_field-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6b68e9ebb5f11671d95d742b06564cf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8427, "upload_time": "2019-01-26T20:40:28", "upload_time_iso_8601": "2019-01-26T20:40:28.528178Z", "url": "https://files.pythonhosted.org/packages/b6/13/10d69abbb4ed4146a32fcc6576b1b56453f08d7d550e99a59e1a80497b30/django_sort_order_field-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "597cd32835ad0a4c58b4eafb25a94221", "sha256": "b3a1bebd4dc059e9046599359ef8a9ae113ead3f7a4c3bbad2256933de2a1004"}, "downloads": -1, "filename": "django-sort-order-field-1.0.tar.gz", "has_sig": false, "md5_digest": "597cd32835ad0a4c58b4eafb25a94221", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6081, "upload_time": "2019-01-26T20:40:30", "upload_time_iso_8601": "2019-01-26T20:40:30.642156Z", "url": "https://files.pythonhosted.org/packages/4c/aa/83b2f21c40a05d1de9b4a44127c63d7e73fe3ae1b80dd6ef3f3fe3eb2fc3/django-sort-order-field-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a6b68e9ebb5f11671d95d742b06564cf", "sha256": "cd334d393e6e82386b0ad18a70621cfe2950ea99afe664df24fd4703ac051d51"}, "downloads": -1, "filename": "django_sort_order_field-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a6b68e9ebb5f11671d95d742b06564cf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8427, "upload_time": "2019-01-26T20:40:28", "upload_time_iso_8601": "2019-01-26T20:40:28.528178Z", "url": "https://files.pythonhosted.org/packages/b6/13/10d69abbb4ed4146a32fcc6576b1b56453f08d7d550e99a59e1a80497b30/django_sort_order_field-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "597cd32835ad0a4c58b4eafb25a94221", "sha256": "b3a1bebd4dc059e9046599359ef8a9ae113ead3f7a4c3bbad2256933de2a1004"}, "downloads": -1, "filename": "django-sort-order-field-1.0.tar.gz", "has_sig": false, "md5_digest": "597cd32835ad0a4c58b4eafb25a94221", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6081, "upload_time": "2019-01-26T20:40:30", "upload_time_iso_8601": "2019-01-26T20:40:30.642156Z", "url": "https://files.pythonhosted.org/packages/4c/aa/83b2f21c40a05d1de9b4a44127c63d7e73fe3ae1b80dd6ef3f3fe3eb2fc3/django-sort-order-field-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}