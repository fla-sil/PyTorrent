{"info": {"author": "Coumes Quentin", "author_email": "coumes.quentin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Python package](https://github.com/qcoumes/sandbox-api/workflows/Python%20package/badge.svg)](https://github.com/qcoumes/sandbox-api/actions/)\n[![codecov](https://codecov.io/gh/qcoumes/sandbox-api/branch/master/graph/badge.svg)](https://codecov.io/gh/qcoumes/sandbox-api)\n[![CodeFactor](https://www.codefactor.io/repository/github/qcoumes/sandbox-api/badge)](https://www.codefactor.io/repository/github/qcoumes/sandbox-api)\n[![PyPI Version](https://badge.fury.io/py/sandbox-api.svg)](https://badge.fury.io/py/sandbox-api)\n[![Python 3.7+](https://img.shields.io/badge/python-3.5+-brightgreen.svg)](#)\n[![License MIT](https://img.shields.io/badge/license-MIT-brightgreen.svg)](https://github.com/qcoumes/sandbox-api/blob/master/LICENSE)\n\n# Python API for WIMS' adm/raw module\n\nA Python 3 interface to communicate with a [sandbox](https://github.com/PremierLangage/sandbox)\n\n\n## Installation\n\nThe latest stable version is available on [PyPI](https://pypi.org/project/sandbox-api/) :\n\n```bash\npip install sandbox-api\n```\n\nor from the sources:\n\n```bash\ngit clone https://github.com/qcoumes/sandbox-api\ncd sandbox-api\npython3 setup.py install\n```\n \n \n ## Usage\n \n Sandbox-api is pretty straightforward to use, you just need to import Sandbox and create\n an instance with the url of the server :\n \n ```python\nfrom sandbox_api import Sandbox\n\ns = Sandbox(\"http://www.my-sandbox.com\")\n```\n\n### Specifications and libraries\n\nThe specs of the sandbox and the libraries installed are available as attributes:\n\n```python\ns.cpu\n{'count': 1, 'period': 1000, 'shares': 1024, 'quota': 0, 'name': 'Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz'}\n\ns.containers\n{'total': 5, 'running': 0, 'available': 5}\n\ns.python3\n'3.7.3'\n\ns.python2\n'2.7.16'\n```\n\nAttribute other than 'url' are retrieved from the sandbox at first access, attribute are\nseparated in two categories, specifications and libraries. Every attribute of one category are\nretrieved the first time an attribute of the corresponding category is accessed.\n\nThese attributes are fetch through HTTP requests, this can take some times (should be no more\nthan 2 seconds), especially for the libraries category.\n\nNote that attributes are cached (except for 'containers'), and subsequent access to one category\nare instantaneous.\n\nAvailable attributes are:\n\n* Specifications\n    *   sandbox_version (str): Version of the sandbox formatted as 'MAJOR.MINOR.PATCH'.\n    *   docker_version (str): Version of docker used by the sandbox formatted as 'MAJOR.MINOR.PATCH'\n    *   containers (dict): Dict containing the status of the containers running on the sandbox.\n    *   memory (dict): Memory limits for each containers on the sandbox.\n    *   cpu (dict): CPU information for each containers on the sandbox.\n    *   environ (dict): Environments variables use in the containers.\n    *   execute_timeout (Union[int, float]): Time in seconds before an 'execute/' request timeout.\n    *   expiration (int): Time in before an environment expire on the sandbox.\n* Libraries\n    *   python3 (str): Version of python3 used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.\n    *   python2 (str): Version of python2 used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.\n    *   java (str): Version of java used by the sandbox formatted as 'JDK MAJOR.MINOR'.\n    *   gcc (str): Version of gcc used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.\n    *   gpp (str): Version of g++ used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.\n    *   perl (str): Version of perl used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.\n    *   postgres (str): Version of postgres used by the sandbox formatted as 'MAJOR.MINOR'.\n    *   libraries (dict): Dict containing :\n        *   system (dict): The installed packages (dpkg).\n        *   c (dict): The installed libraries and their version.\n        *   python (dict): The installed python modules.\n        *   perl (dict): The installed perl modules.\n    *   bin (dict): Every command available in PATH on the sandbox\n\n\n### Sandbox current load\n\nIt is possible to obtain the current load of the sandbox with the `usage()` method.\nIt returns a float between 0 and 1, indicating the current charge on the sandbox, 0 means that the\nsandbox is currently unused, 1 means that it is used a full capacity and an 'execute/' request will\nprobably be delayed.\n\n```python\ns.usage()\n0.2\n```\n\n\n### Downloading environments and files\n\nYou can download files or environments through the `download(uuid, path=None)` method. `uuid`\ncorrespond to the ID of the environment on the sandbox.\n\nIf only uuid is provided the whole environment will be downloading, if path is also provided, only\nthe file corresponding to path inside the environment will be downloaded.\n\nThe downloaded object is returned as a `io.BytesIO`.\n\n\n### Executing commands\n\nUse the `execute(config, environ=None)` method to execute commands on the sandbox. Config\nmust be a dictionary corresponding to a valid config as defined\n[here](https://documenter.getpostman.com/view/7955851/S1a915EG?version=latest#872b604c-9cce-42e2-8888-9a0311f3a724),\nenviron, if provided, must be a binary object implementing the `.read()` (I.G. `file object` or\n`io.BytesIO`) at position 0 corresponding to a valid environment (again, more information\n[here](https://documenter.getpostman.com/view/7955851/S1a915EG?version=latest#872b604c-9cce-42e2-8888-9a0311f3a724)).\n\nThe returned value is a dictionary corresponding to the response's json :\n\nYou can check a config dictionnary by calling `sandbox_api.utils.validate(config)`.\n\n```python\ns.execute({\n     \"commands\": [\n             \"echo $((2+2))\"\n     ]\n})\n\n{\n    'status': 0,\n    'execution': [\n        {\n            'command': 'echo $((2+2))',\n            'exit_code': 0,\n            'stdout': '4',\n            'stderr': '',\n            'time': 0.28589797019958496\n        }\n    ],\n    'total_time': 0.2871053218841553\n}\n```\n\n## Exceptions\n\nSince sandbox-api rely on HTTP, any response with a status code greater or equal to 300 will raise\na corresponding exception `Sanbox{STATUS}` the response (a `requests.Response` object) received is\navailable in the `response` attribute of the exception.\n\nAll of these exceptions inherit `SandboxError`.\n\n```python\nfrom sandbox_api import SandboxError, Sandbox404\n\ntry:\n    file = s.download(\"872b604c-9cce-42e2-8888-9a0311f3a724\", \"unknown\")\nexcept Sandbox404:\n    print(\"'unknown' does not exists in environment '872b604c-9cce-42e2-8888-9a0311f3a724'\")\nexcept SandboxError as e:\n    print(\"Sandbox responded with a '%d' status code\" % e.response.status_code)\n```\n\n\n______\n\n# Changelog\n\n\n#### 0.0.7\n\n* Now use Github Action for testing and deployment to PyPI\n\n#### 0.0.6\n\n* Added method `Sandbox451`\n* Added python 3.8 tp test matrix\n\n#### 0.0.5\n\n* Added method `check()` to `Sandbox` to check if an environment/file exists on the sandbox.\n\n\n#### 0.0.4\n\n* Added function `validate()` to check a config dict in `sandbox_api.utils`.\n\n\n#### 0.0.3\n\n* Added missing type hints `cpu` for `Sandbox`\n\n\n#### 0.0.2\n\n* Added type hints for `Sandbox`'s attributes.\n\n\n#### 0.0.1\n\n* Initial release", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/qcoumes/sandbox-api", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sandbox-api", "package_url": "https://pypi.org/project/sandbox-api/", "platform": "", "project_url": "https://pypi.org/project/sandbox-api/", "project_urls": {"Homepage": "https://github.com/qcoumes/sandbox-api"}, "release_url": "https://pypi.org/project/sandbox-api/0.0.7/", "requires_dist": null, "requires_python": "", "summary": "Provide a Python 3 interface to communicate with a sandbox (https://github.com/PremierLangage/sandbox)", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/qcoumes/sandbox-api/actions/\" rel=\"nofollow\"><img alt=\"Python package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae48b203198eefdc14a53e477af571c8513a2bab/68747470733a2f2f6769746875622e636f6d2f71636f756d65732f73616e64626f782d6170692f776f726b666c6f77732f507974686f6e2532307061636b6167652f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/qcoumes/sandbox-api\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/368b2ce550d15fa8f32d6bb470e5f2b6af69f91c/68747470733a2f2f636f6465636f762e696f2f67682f71636f756d65732f73616e64626f782d6170692f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.codefactor.io/repository/github/qcoumes/sandbox-api\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/806b80c1ae965a9180dbd52454b228a93d43d899/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f71636f756d65732f73616e64626f782d6170692f6261646765\"></a>\n<a href=\"https://badge.fury.io/py/sandbox-api\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9fe0e6e2a6c3842814c368a1887154c83d5c211f/68747470733a2f2f62616467652e667572792e696f2f70792f73616e64626f782d6170692e737667\"></a>\n<a href=\"#\" rel=\"nofollow\"><img alt=\"Python 3.7+\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e694343bbecd597c260d7098bf5aa57cd76b885/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352b2d627269676874677265656e2e737667\"></a>\n<a href=\"https://github.com/qcoumes/sandbox-api/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28c5b39bdf2da9ce3c367dcfe49e46905cf7d242/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667\"></a></p>\n<h1>Python API for WIMS' adm/raw module</h1>\n<p>A Python 3 interface to communicate with a <a href=\"https://github.com/PremierLangage/sandbox\" rel=\"nofollow\">sandbox</a></p>\n<h2>Installation</h2>\n<p>The latest stable version is available on <a href=\"https://pypi.org/project/sandbox-api/\" rel=\"nofollow\">PyPI</a> :</p>\n<pre>pip install sandbox-api\n</pre>\n<p>or from the sources:</p>\n<pre>git clone https://github.com/qcoumes/sandbox-api\n<span class=\"nb\">cd</span> sandbox-api\npython3 setup.py install\n</pre>\n<h2>Usage</h2>\n<p>Sandbox-api is pretty straightforward to use, you just need to import Sandbox and create\nan instance with the url of the server :</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sandbox_api</span> <span class=\"kn\">import</span> <span class=\"n\">Sandbox</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Sandbox</span><span class=\"p\">(</span><span class=\"s2\">\"http://www.my-sandbox.com\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Specifications and libraries</h3>\n<p>The specs of the sandbox and the libraries installed are available as attributes:</p>\n<pre><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">cpu</span>\n<span class=\"p\">{</span><span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'period'</span><span class=\"p\">:</span> <span class=\"mi\">1000</span><span class=\"p\">,</span> <span class=\"s1\">'shares'</span><span class=\"p\">:</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"s1\">'quota'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Intel(R) Core(TM) i7-8700K CPU @ 3.70GHz'</span><span class=\"p\">}</span>\n\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">containers</span>\n<span class=\"p\">{</span><span class=\"s1\">'total'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'running'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'available'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">}</span>\n\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">python3</span>\n<span class=\"s1\">'3.7.3'</span>\n\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">python2</span>\n<span class=\"s1\">'2.7.16'</span>\n</pre>\n<p>Attribute other than 'url' are retrieved from the sandbox at first access, attribute are\nseparated in two categories, specifications and libraries. Every attribute of one category are\nretrieved the first time an attribute of the corresponding category is accessed.</p>\n<p>These attributes are fetch through HTTP requests, this can take some times (should be no more\nthan 2 seconds), especially for the libraries category.</p>\n<p>Note that attributes are cached (except for 'containers'), and subsequent access to one category\nare instantaneous.</p>\n<p>Available attributes are:</p>\n<ul>\n<li>Specifications\n<ul>\n<li>sandbox_version (str): Version of the sandbox formatted as 'MAJOR.MINOR.PATCH'.</li>\n<li>docker_version (str): Version of docker used by the sandbox formatted as 'MAJOR.MINOR.PATCH'</li>\n<li>containers (dict): Dict containing the status of the containers running on the sandbox.</li>\n<li>memory (dict): Memory limits for each containers on the sandbox.</li>\n<li>cpu (dict): CPU information for each containers on the sandbox.</li>\n<li>environ (dict): Environments variables use in the containers.</li>\n<li>execute_timeout (Union[int, float]): Time in seconds before an 'execute/' request timeout.</li>\n<li>expiration (int): Time in before an environment expire on the sandbox.</li>\n</ul>\n</li>\n<li>Libraries\n<ul>\n<li>python3 (str): Version of python3 used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.</li>\n<li>python2 (str): Version of python2 used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.</li>\n<li>java (str): Version of java used by the sandbox formatted as 'JDK MAJOR.MINOR'.</li>\n<li>gcc (str): Version of gcc used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.</li>\n<li>gpp (str): Version of g++ used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.</li>\n<li>perl (str): Version of perl used by the sandbox formatted as 'MAJOR.MINOR.PATCH'.</li>\n<li>postgres (str): Version of postgres used by the sandbox formatted as 'MAJOR.MINOR'.</li>\n<li>libraries (dict): Dict containing :\n<ul>\n<li>system (dict): The installed packages (dpkg).</li>\n<li>c (dict): The installed libraries and their version.</li>\n<li>python (dict): The installed python modules.</li>\n<li>perl (dict): The installed perl modules.</li>\n</ul>\n</li>\n<li>bin (dict): Every command available in PATH on the sandbox</li>\n</ul>\n</li>\n</ul>\n<h3>Sandbox current load</h3>\n<p>It is possible to obtain the current load of the sandbox with the <code>usage()</code> method.\nIt returns a float between 0 and 1, indicating the current charge on the sandbox, 0 means that the\nsandbox is currently unused, 1 means that it is used a full capacity and an 'execute/' request will\nprobably be delayed.</p>\n<pre><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">usage</span><span class=\"p\">()</span>\n<span class=\"mf\">0.2</span>\n</pre>\n<h3>Downloading environments and files</h3>\n<p>You can download files or environments through the <code>download(uuid, path=None)</code> method. <code>uuid</code>\ncorrespond to the ID of the environment on the sandbox.</p>\n<p>If only uuid is provided the whole environment will be downloading, if path is also provided, only\nthe file corresponding to path inside the environment will be downloaded.</p>\n<p>The downloaded object is returned as a <code>io.BytesIO</code>.</p>\n<h3>Executing commands</h3>\n<p>Use the <code>execute(config, environ=None)</code> method to execute commands on the sandbox. Config\nmust be a dictionary corresponding to a valid config as defined\n<a href=\"https://documenter.getpostman.com/view/7955851/S1a915EG?version=latest#872b604c-9cce-42e2-8888-9a0311f3a724\" rel=\"nofollow\">here</a>,\nenviron, if provided, must be a binary object implementing the <code>.read()</code> (I.G. <code>file object</code> or\n<code>io.BytesIO</code>) at position 0 corresponding to a valid environment (again, more information\n<a href=\"https://documenter.getpostman.com/view/7955851/S1a915EG?version=latest#872b604c-9cce-42e2-8888-9a0311f3a724\" rel=\"nofollow\">here</a>).</p>\n<p>The returned value is a dictionary corresponding to the response's json :</p>\n<p>You can check a config dictionnary by calling <code>sandbox_api.utils.validate(config)</code>.</p>\n<pre><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">({</span>\n     <span class=\"s2\">\"commands\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n             <span class=\"s2\">\"echo $((2+2))\"</span>\n     <span class=\"p\">]</span>\n<span class=\"p\">})</span>\n\n<span class=\"p\">{</span>\n    <span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'execution'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'command'</span><span class=\"p\">:</span> <span class=\"s1\">'echo $((2+2))'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'exit_code'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n            <span class=\"s1\">'stdout'</span><span class=\"p\">:</span> <span class=\"s1\">'4'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'stderr'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n            <span class=\"s1\">'time'</span><span class=\"p\">:</span> <span class=\"mf\">0.28589797019958496</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"s1\">'total_time'</span><span class=\"p\">:</span> <span class=\"mf\">0.2871053218841553</span>\n<span class=\"p\">}</span>\n</pre>\n<h2>Exceptions</h2>\n<p>Since sandbox-api rely on HTTP, any response with a status code greater or equal to 300 will raise\na corresponding exception <code>Sanbox{STATUS}</code> the response (a <code>requests.Response</code> object) received is\navailable in the <code>response</code> attribute of the exception.</p>\n<p>All of these exceptions inherit <code>SandboxError</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sandbox_api</span> <span class=\"kn\">import</span> <span class=\"n\">SandboxError</span><span class=\"p\">,</span> <span class=\"n\">Sandbox404</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">file</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">download</span><span class=\"p\">(</span><span class=\"s2\">\"872b604c-9cce-42e2-8888-9a0311f3a724\"</span><span class=\"p\">,</span> <span class=\"s2\">\"unknown\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">Sandbox404</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"'unknown' does not exists in environment '872b604c-9cce-42e2-8888-9a0311f3a724'\"</span><span class=\"p\">)</span>\n<span class=\"k\">except</span> <span class=\"n\">SandboxError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Sandbox responded with a '</span><span class=\"si\">%d</span><span class=\"s2\">' status code\"</span> <span class=\"o\">%</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h1>Changelog</h1>\n<h4>0.0.7</h4>\n<ul>\n<li>Now use Github Action for testing and deployment to PyPI</li>\n</ul>\n<h4>0.0.6</h4>\n<ul>\n<li>Added method <code>Sandbox451</code></li>\n<li>Added python 3.8 tp test matrix</li>\n</ul>\n<h4>0.0.5</h4>\n<ul>\n<li>Added method <code>check()</code> to <code>Sandbox</code> to check if an environment/file exists on the sandbox.</li>\n</ul>\n<h4>0.0.4</h4>\n<ul>\n<li>Added function <code>validate()</code> to check a config dict in <code>sandbox_api.utils</code>.</li>\n</ul>\n<h4>0.0.3</h4>\n<ul>\n<li>Added missing type hints <code>cpu</code> for <code>Sandbox</code></li>\n</ul>\n<h4>0.0.2</h4>\n<ul>\n<li>Added type hints for <code>Sandbox</code>'s attributes.</li>\n</ul>\n<h4>0.0.1</h4>\n<ul>\n<li>Initial release</li>\n</ul>\n\n          </div>"}, "last_serial": 7163886, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "078b9b7c0094b32e0b7d49bfe1b042b6", "sha256": "b5d8c6d070e88560d0f3bb71ab3302a2dca5a3c67bdb52336d054e97ac317351"}, "downloads": -1, "filename": "sandbox-api-0.0.1.tar.gz", "has_sig": false, "md5_digest": "078b9b7c0094b32e0b7d49bfe1b042b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6657, "upload_time": "2019-08-21T21:25:58", "upload_time_iso_8601": "2019-08-21T21:25:58.121842Z", "url": "https://files.pythonhosted.org/packages/e3/81/fba574bc548eefa9a52c3e520ec90ca5a673388005ef54dfeba6ee283cb6/sandbox-api-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "1d557621e22ba806dfd3eb8870fe2a9f", "sha256": "c8ab3a037ea42eb7b5f071d6a5d880db65d17da7754ad70a8530b8239f847629"}, "downloads": -1, "filename": "sandbox-api-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1d557621e22ba806dfd3eb8870fe2a9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6822, "upload_time": "2019-09-05T08:19:11", "upload_time_iso_8601": "2019-09-05T08:19:11.567935Z", "url": "https://files.pythonhosted.org/packages/a0/27/713a1908f56b437095d75e4450fc90f6378dca148404e4c0d8e040b5ef34/sandbox-api-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "59059b429b4bb57e10cad7a50b0c517a", "sha256": "1e5466321ab1cec58f53632169a138912db52777ec06b8f7286da61b4dc594e8"}, "downloads": -1, "filename": "sandbox-api-0.0.3.tar.gz", "has_sig": false, "md5_digest": "59059b429b4bb57e10cad7a50b0c517a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6871, "upload_time": "2019-09-05T11:41:42", "upload_time_iso_8601": "2019-09-05T11:41:42.141650Z", "url": "https://files.pythonhosted.org/packages/0c/e4/ede7eba60c5b75dcc449f3cbf0695454d57c7a4e874d27e4ccbc7afdd77d/sandbox-api-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "89f8b6492371d7f1cd8687a3812e019b", "sha256": "1091f6b569c7d62e7364d466b3d0420ce44d440f84f0a28df3679709ef358780"}, "downloads": -1, "filename": "sandbox-api-0.0.4.tar.gz", "has_sig": false, "md5_digest": "89f8b6492371d7f1cd8687a3812e019b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8387, "upload_time": "2019-09-11T16:40:01", "upload_time_iso_8601": "2019-09-11T16:40:01.670698Z", "url": "https://files.pythonhosted.org/packages/9d/8b/0ba92a1846c301236cce694b570a0ade1f417cb98fb7e6b6de51d5494c7d/sandbox-api-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "8d06a8c68b34724707d6060575504f2b", "sha256": "47981c844d44d5374175fe57bd132574737a1d0c4fed7b95174bff16e87ddadd"}, "downloads": -1, "filename": "sandbox-api-0.0.5.tar.gz", "has_sig": false, "md5_digest": "8d06a8c68b34724707d6060575504f2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8628, "upload_time": "2019-09-23T09:57:23", "upload_time_iso_8601": "2019-09-23T09:57:23.171001Z", "url": "https://files.pythonhosted.org/packages/f4/8d/1965a57c155a2382aaadee325db32a87f7231baee164c63534c62287253b/sandbox-api-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "924225e63a8585eaf5e054ab6fccdad8", "sha256": "4cf90310d51476df6dc367bb74ff4806471d6f837445f78826a60038f6e04532"}, "downloads": -1, "filename": "sandbox-api-0.0.6.tar.gz", "has_sig": false, "md5_digest": "924225e63a8585eaf5e054ab6fccdad8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8708, "upload_time": "2020-05-04T09:12:39", "upload_time_iso_8601": "2020-05-04T09:12:39.565059Z", "url": "https://files.pythonhosted.org/packages/37/65/d8f89f43f6a00eb6495db55d5a96fd0b867610f45fe87b46022a764e6b62/sandbox-api-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "06a7ecb23e7042517ceba9304a0d5ce0", "sha256": "2c327bc7fc95bed78bb11149d8b88b531262d7d020743acbe1f3a6dc2b170cc7"}, "downloads": -1, "filename": "sandbox-api-0.0.7.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "06a7ecb23e7042517ceba9304a0d5ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11876, "upload_time": "2020-05-04T12:09:37", "upload_time_iso_8601": "2020-05-04T12:09:37.149506Z", "url": "https://files.pythonhosted.org/packages/cc/5f/68fc0f2d645da549a39f111fe6b2968073b09d1e7919d3856dbe8c2bd680/sandbox-api-0.0.7.linux-x86_64.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "06a7ecb23e7042517ceba9304a0d5ce0", "sha256": "2c327bc7fc95bed78bb11149d8b88b531262d7d020743acbe1f3a6dc2b170cc7"}, "downloads": -1, "filename": "sandbox-api-0.0.7.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "06a7ecb23e7042517ceba9304a0d5ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11876, "upload_time": "2020-05-04T12:09:37", "upload_time_iso_8601": "2020-05-04T12:09:37.149506Z", "url": "https://files.pythonhosted.org/packages/cc/5f/68fc0f2d645da549a39f111fe6b2968073b09d1e7919d3856dbe8c2bd680/sandbox-api-0.0.7.linux-x86_64.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:51 2020"}