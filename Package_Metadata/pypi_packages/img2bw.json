{"info": {"author": "Salva Carri\u00f3n", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# img2bw\n\n**img2bw** is a simple command-line application to binarize images.\n\n![](https://raw.githubusercontent.com/salvacarrion/img2bw/master/data/readme/montaje_small.jpg)\n\n\n## Requirements\n\n- Python3.7 or more\n\n\n## Installation\n\n```\npip install img2bw\n```\n\n\n## Usage\n\n\nTo binarize a single image, type:\n\n```\nimg2bw image.jpg --method otsu\n```\n\nTo binarize all the images in a directory, type:\n\n```\nimg2bw input_dir/ --output output_dir/\n```\n\n> If no method is specified, `otsu` will be used.\n>\n> You can try all the methods using `--method try-all`\n\n\n## Thresholding algorithms\n\nThese are the available algorithms along with common names and their corresponding papers.\nYou can use them with the option: `--method (name)`\n\n- **Global thresholding:**\n    - `otsu`: Otsu's method\n        - *Otsu, Nobuyuki. \"A threshold selection method from gray-level histograms.\" IEEE transactions on systems, man, and cybernetics 9.1 (1979): 62-66.*\n    - `p-tile`: p-tile threshold algorithm\n        - *Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley & Sons. (p-tile)*\n    - `two-peaks`: Selects two peaks from the histogram and return the index of the minimum value between them.\n        - *Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley & Sons. (Two peaks)*\n    - `multiotsu`: Generates `classes - 1` threshold values to divide gray levels \n        - *Liao, P-S., Chen, T-S. and Chung, P-C., \"A fast algorithm for multilevel thresholding\", Journal of Information Science and  Engineering 17 (5): 713-727, 2001.*\n    - `isodata`: Histogram-based threshold, Ridler-Calvard method or inter-means\n        - *Ridler, TW & Calvard, S (1978), \"Picture thresholding using an iterative selection method\" IEEE Transactions on Systems, Man and Cybernetics 8: 630-632, :DOI:10.1109/TSMC.1978.4310039*\n    - `min-error`: Minimum error thresholding algorithm.\n        - *Kittler, J. and J. Illingworth. \u2018\u2018On Threshold Selection Using Clustering Criteria,\u2019\u2019 IEEE Transactions on Systems, Man, and Cybernetics 15, no. 5 (1985): 652\u2013655.*\n    - `minimum`: Minimum method. The histogram of the input image is computed and smoothed until there are only two maxima.\n        - *C. A. Glasbey, \"An analysis of histogram-based thresholding algorithms,\" CVGIP: Graphical Models and Image Processing, vol. 55, pp. 532-537, 1993.*\n    - `triangle`: Threshold value based on the triangle algorithm\n        - *Zack, G. W., Rogers, W. E. and Latt, S. A., 1977, Automatic Measurement of Sister Chromatid Exchange Frequency,  Journal of Histochemistry and Cytochemistry 25 (7), pp. 741-753 :DOI:10.1177/25.7.70454*\n    - `yen`: Yen's method\n        - *Yen J.C., Chang F.J., and Chang S. (1995) \"A New Criterion for Automatic Multilevel Thresholding\" IEEE Trans. on Image Processing, 4(3): 370-378. :DOI:10.1109/83.366472*\n    - `mean`: Threshold value based on the mean of grayscale values.\n        - *C. A. Glasbey, \"An analysis of histogram-based thresholding algorithms,\" CVGIP: Graphical Models and Image Processing,vol. 55, pp. 532-537, 1993. :DOI:10.1006/cgip.1993.1040*\n\n- **Entropy thresholding:**\n    - `pun`: Pun's threshold algorithm.\n        - *Pun, T. \"A New Method for Grey-Level Picture Thresholding Using the Entropy of the Histogram,\"\" Signal Processing 2, no. 3 (1980): 223\u2013237.*\n    - `kapur`: Kapur's threshold algorithm\n        - *Kapur, J. N., P. K. Sahoo, and A. K. C.Wong. \"A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram,\"\" Computer Vision, Graphics, and Image Processing 29, no. 3 (1985): 273\u2013285.*\n    - `johannsen`: Johannsen's threshold algorithm.\n        - *Johannsen, G., and J. Bille \"A Threshold Selection Method Using Information Measures,\"\" Proceedings of the Sixth International Conference on Pattern Recognition, Munich, Germany (1982): 140\u2013143.*\n    - `li`: Li's iterative Minimum Cross Entropy method\n        - *Li C.H. and Lee C.K. (1993) \"Minimum Cross Entropy Thresholding\" Pattern Recognition, 26(4): 617-625 :DOI:10.1016/0031-3203(93)90115-D*\n\n- **Local thresholding:**\n    - `bradley-roth`: Bradley-Roth thresholding algorithm\n        - *Bradley, D., & Roth, G. (2007). Adaptive thresholding using the integral image. Journal of Graphics Tools, 12(2), 13-21.*\n    - `bernsen`: Bernsen thresholding algorithm\n        - *Bernsen, J (1986), \"Dynamic Thresholding of Grey-Level Images\", Proc. of the 8th Int. Conf. on Pattern Recognition*\n    - `contrast`: Contrast thresholding algorithm\n        - *Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley & Sons. (Contrast thresholding)*\n    - `feng`: Feng's thresholding algorithm\n        - *Meng-Ling Feng and Yap-Peng Tan, \"Contrast adaptive thresholding of low quality document images\u201d, IEICE Electron. Express, Vol. 1, No. 16, pp.501-506, (2004).*\n    - `local-mean`: Adaptive or dynamic thresholding. The threshold value is the mean of the neighbourhood area minus the constant C\n        - *Source: [https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold](https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold)*\n    - `local-median`: Adaptive or dynamic thresholding. The threshold value is the median of the neighbourhood area minus the constant C\n        - *Source: [https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold](https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold)*\n    - `local-gaussian`: Adaptive or dynamic thresholding. The threshold value is a gaussian-weighted sum of the neighbourhood values minus the constant\n        - *Source: [https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold](https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold)*\n    - `niblack`: Niblack local threshold\n        - *Niblack, W.: \"An introduction to digital image processing\" (Prentice- Hall, Englewood Cliffs, NJ, 1986), pp. 115\u2013116*\n    - `sauvola`: Sauvola local threshold\n        - *Sauvola, J., Seppanen, T., Haapakoski, S., and Pietikainen, M.: \"Adaptive document thresholding\". Proc. 4th Int. Conf. on Document Analysis and Recognition, Ulm Germany, 1997, pp. 147\u2013152.*\n    - `wolf`: Wolf's thresholding algorithm.\n        - *C. Wolf, J-M. Jolion, \"Extraction and Recognition of Artificial Text in Multimedia Documents\", Pattern Analysis and Applications, 6(4):309-326, (2003).*\n    - `nick`: NICK thresholding algorithm.\n        - *Khurshid, K., Siddiqi, I., Faure, C., & Vincent, N. (2009, January). Comparison of Niblack inspired Binarization methods for ancient documents. In IS&T/SPIE Electronic Imaging (pp. 72470U-72470U). International Society for Optics and Photonics.*\n    - `singh`: Singh thresholding algorithm\n        - *Singh, O. I., Sinam, T., James, O., & Singh, T. R. (2012). Local contrast and mean based thresholding technique in image binarization. International Journal of Computer Applications, 51, 5-10.*\n\n\n## More options\n\nTo view all the available options, type `img2bw --help` in the terminal:\n\n```\nusage: img2bw [-h] [-o OUTPUT] [-e {jpg,jpeg,jfif,png,tiff,bmp,pnm}]\n              [-m {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}]\n              [-b BLOCK_SIZE] [-c NUM_CLASSES]\n              input\n\npositional arguments:\n  input                 Input file or directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        Output directory\n  -e {jpg,jpeg,jfif,png,tiff,bmp,pnm}, --output-ext {jpg,jpeg,jfif,png,tiff,bmp,pnm}\n                        Output file extension\n  -m {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}, --method {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}\n                        Method used to perform the binarization\n  -b BLOCK_SIZE, --block-size BLOCK_SIZE\n                        Odd size of pixel neighborhood which is used to\n                        calculate the threshold value (local threshold)\n  -c NUM_CLASSES, --num-classes NUM_CLASSES\n                        Number of classes to be thresholded (multiotsu)\n\n```\n\n\n## Additional information\n\nThis package is simply wrapper to easily apply multiple threshold algorithms to an image (or the images in a directory).\nI didn't code the algorithms so I send a big thank you to all the authors of libraries that made this wrapper possible:\n\n- [scikit-image](https://scikit-image.org/docs/dev/auto_examples/segmentation/plot_thresholding.html)\n- [pythreshold](https://github.com/manuelaguadomtz/pythreshold)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/salvacarrion/img2bw", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "img2bw", "package_url": "https://pypi.org/project/img2bw/", "platform": "any", "project_url": "https://pypi.org/project/img2bw/", "project_urls": {"Homepage": "https://github.com/salvacarrion/img2bw"}, "release_url": "https://pypi.org/project/img2bw/0.2.1/", "requires_dist": ["scikit-image (>=0.16.2)", "pythreshold (>=0.2.1)"], "requires_python": "", "summary": "Command-line application to binarize images", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>img2bw</h1>\n<p><strong>img2bw</strong> is a simple command-line application to binarize images.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17503f1e5629d09ebf1d147dd1b9dba8f309a97a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f73616c766163617272696f6e2f696d673262772f6d61737465722f646174612f726561646d652f6d6f6e74616a655f736d616c6c2e6a7067\"></p>\n<h2>Requirements</h2>\n<ul>\n<li>Python3.7 or more</li>\n</ul>\n<h2>Installation</h2>\n<pre><code>pip install img2bw\n</code></pre>\n<h2>Usage</h2>\n<p>To binarize a single image, type:</p>\n<pre><code>img2bw image.jpg --method otsu\n</code></pre>\n<p>To binarize all the images in a directory, type:</p>\n<pre><code>img2bw input_dir/ --output output_dir/\n</code></pre>\n<blockquote>\n<p>If no method is specified, <code>otsu</code> will be used.</p>\n<p>You can try all the methods using <code>--method try-all</code></p>\n</blockquote>\n<h2>Thresholding algorithms</h2>\n<p>These are the available algorithms along with common names and their corresponding papers.\nYou can use them with the option: <code>--method (name)</code></p>\n<ul>\n<li>\n<p><strong>Global thresholding:</strong></p>\n<ul>\n<li><code>otsu</code>: Otsu's method\n<ul>\n<li><em>Otsu, Nobuyuki. \"A threshold selection method from gray-level histograms.\" IEEE transactions on systems, man, and cybernetics 9.1 (1979): 62-66.</em></li>\n</ul>\n</li>\n<li><code>p-tile</code>: p-tile threshold algorithm\n<ul>\n<li><em>Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley &amp; Sons. (p-tile)</em></li>\n</ul>\n</li>\n<li><code>two-peaks</code>: Selects two peaks from the histogram and return the index of the minimum value between them.\n<ul>\n<li><em>Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley &amp; Sons. (Two peaks)</em></li>\n</ul>\n</li>\n<li><code>multiotsu</code>: Generates <code>classes - 1</code> threshold values to divide gray levels\n<ul>\n<li><em>Liao, P-S., Chen, T-S. and Chung, P-C., \"A fast algorithm for multilevel thresholding\", Journal of Information Science and  Engineering 17 (5): 713-727, 2001.</em></li>\n</ul>\n</li>\n<li><code>isodata</code>: Histogram-based threshold, Ridler-Calvard method or inter-means\n<ul>\n<li><em>Ridler, TW &amp; Calvard, S (1978), \"Picture thresholding using an iterative selection method\" IEEE Transactions on Systems, Man and Cybernetics 8: 630-632, :DOI:10.1109/TSMC.1978.4310039</em></li>\n</ul>\n</li>\n<li><code>min-error</code>: Minimum error thresholding algorithm.\n<ul>\n<li><em>Kittler, J. and J. Illingworth. \u2018\u2018On Threshold Selection Using Clustering Criteria,\u2019\u2019 IEEE Transactions on Systems, Man, and Cybernetics 15, no. 5 (1985): 652\u2013655.</em></li>\n</ul>\n</li>\n<li><code>minimum</code>: Minimum method. The histogram of the input image is computed and smoothed until there are only two maxima.\n<ul>\n<li><em>C. A. Glasbey, \"An analysis of histogram-based thresholding algorithms,\" CVGIP: Graphical Models and Image Processing, vol. 55, pp. 532-537, 1993.</em></li>\n</ul>\n</li>\n<li><code>triangle</code>: Threshold value based on the triangle algorithm\n<ul>\n<li><em>Zack, G. W., Rogers, W. E. and Latt, S. A., 1977, Automatic Measurement of Sister Chromatid Exchange Frequency,  Journal of Histochemistry and Cytochemistry 25 (7), pp. 741-753 :DOI:10.1177/25.7.70454</em></li>\n</ul>\n</li>\n<li><code>yen</code>: Yen's method\n<ul>\n<li><em>Yen J.C., Chang F.J., and Chang S. (1995) \"A New Criterion for Automatic Multilevel Thresholding\" IEEE Trans. on Image Processing, 4(3): 370-378. :DOI:10.1109/83.366472</em></li>\n</ul>\n</li>\n<li><code>mean</code>: Threshold value based on the mean of grayscale values.\n<ul>\n<li><em>C. A. Glasbey, \"An analysis of histogram-based thresholding algorithms,\" CVGIP: Graphical Models and Image Processing,vol. 55, pp. 532-537, 1993. :DOI:10.1006/cgip.1993.1040</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Entropy thresholding:</strong></p>\n<ul>\n<li><code>pun</code>: Pun's threshold algorithm.\n<ul>\n<li><em>Pun, T. \"A New Method for Grey-Level Picture Thresholding Using the Entropy of the Histogram,\"\" Signal Processing 2, no. 3 (1980): 223\u2013237.</em></li>\n</ul>\n</li>\n<li><code>kapur</code>: Kapur's threshold algorithm\n<ul>\n<li><em>Kapur, J. N., P. K. Sahoo, and A. K. C.Wong. \"A New Method for Gray-Level Picture Thresholding Using the Entropy of the Histogram,\"\" Computer Vision, Graphics, and Image Processing 29, no. 3 (1985): 273\u2013285.</em></li>\n</ul>\n</li>\n<li><code>johannsen</code>: Johannsen's threshold algorithm.\n<ul>\n<li><em>Johannsen, G., and J. Bille \"A Threshold Selection Method Using Information Measures,\"\" Proceedings of the Sixth International Conference on Pattern Recognition, Munich, Germany (1982): 140\u2013143.</em></li>\n</ul>\n</li>\n<li><code>li</code>: Li's iterative Minimum Cross Entropy method\n<ul>\n<li><em>Li C.H. and Lee C.K. (1993) \"Minimum Cross Entropy Thresholding\" Pattern Recognition, 26(4): 617-625 :DOI:10.1016/0031-3203(93)90115-D</em></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<p><strong>Local thresholding:</strong></p>\n<ul>\n<li><code>bradley-roth</code>: Bradley-Roth thresholding algorithm\n<ul>\n<li><em>Bradley, D., &amp; Roth, G. (2007). Adaptive thresholding using the integral image. Journal of Graphics Tools, 12(2), 13-21.</em></li>\n</ul>\n</li>\n<li><code>bernsen</code>: Bernsen thresholding algorithm\n<ul>\n<li><em>Bernsen, J (1986), \"Dynamic Thresholding of Grey-Level Images\", Proc. of the 8th Int. Conf. on Pattern Recognition</em></li>\n</ul>\n</li>\n<li><code>contrast</code>: Contrast thresholding algorithm\n<ul>\n<li><em>Parker, J. R. (2010). Algorithms for image processing and computer vision. John Wiley &amp; Sons. (Contrast thresholding)</em></li>\n</ul>\n</li>\n<li><code>feng</code>: Feng's thresholding algorithm\n<ul>\n<li><em>Meng-Ling Feng and Yap-Peng Tan, \"Contrast adaptive thresholding of low quality document images\u201d, IEICE Electron. Express, Vol. 1, No. 16, pp.501-506, (2004).</em></li>\n</ul>\n</li>\n<li><code>local-mean</code>: Adaptive or dynamic thresholding. The threshold value is the mean of the neighbourhood area minus the constant C\n<ul>\n<li><em>Source: <a href=\"https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold\" rel=\"nofollow\">https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold</a></em></li>\n</ul>\n</li>\n<li><code>local-median</code>: Adaptive or dynamic thresholding. The threshold value is the median of the neighbourhood area minus the constant C\n<ul>\n<li><em>Source: <a href=\"https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold\" rel=\"nofollow\">https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold</a></em></li>\n</ul>\n</li>\n<li><code>local-gaussian</code>: Adaptive or dynamic thresholding. The threshold value is a gaussian-weighted sum of the neighbourhood values minus the constant\n<ul>\n<li><em>Source: <a href=\"https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold\" rel=\"nofollow\">https://docs.opencv.org/modules/imgproc/doc/miscellaneous_transformations.html?highlight=threshold#adaptivethreshold</a></em></li>\n</ul>\n</li>\n<li><code>niblack</code>: Niblack local threshold\n<ul>\n<li><em>Niblack, W.: \"An introduction to digital image processing\" (Prentice- Hall, Englewood Cliffs, NJ, 1986), pp. 115\u2013116</em></li>\n</ul>\n</li>\n<li><code>sauvola</code>: Sauvola local threshold\n<ul>\n<li><em>Sauvola, J., Seppanen, T., Haapakoski, S., and Pietikainen, M.: \"Adaptive document thresholding\". Proc. 4th Int. Conf. on Document Analysis and Recognition, Ulm Germany, 1997, pp. 147\u2013152.</em></li>\n</ul>\n</li>\n<li><code>wolf</code>: Wolf's thresholding algorithm.\n<ul>\n<li><em>C. Wolf, J-M. Jolion, \"Extraction and Recognition of Artificial Text in Multimedia Documents\", Pattern Analysis and Applications, 6(4):309-326, (2003).</em></li>\n</ul>\n</li>\n<li><code>nick</code>: NICK thresholding algorithm.\n<ul>\n<li><em>Khurshid, K., Siddiqi, I., Faure, C., &amp; Vincent, N. (2009, January). Comparison of Niblack inspired Binarization methods for ancient documents. In IS&amp;T/SPIE Electronic Imaging (pp. 72470U-72470U). International Society for Optics and Photonics.</em></li>\n</ul>\n</li>\n<li><code>singh</code>: Singh thresholding algorithm\n<ul>\n<li><em>Singh, O. I., Sinam, T., James, O., &amp; Singh, T. R. (2012). Local contrast and mean based thresholding technique in image binarization. International Journal of Computer Applications, 51, 5-10.</em></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>More options</h2>\n<p>To view all the available options, type <code>img2bw --help</code> in the terminal:</p>\n<pre><code>usage: img2bw [-h] [-o OUTPUT] [-e {jpg,jpeg,jfif,png,tiff,bmp,pnm}]\n              [-m {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}]\n              [-b BLOCK_SIZE] [-c NUM_CLASSES]\n              input\n\npositional arguments:\n  input                 Input file or directory\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT, --output OUTPUT\n                        Output directory\n  -e {jpg,jpeg,jfif,png,tiff,bmp,pnm}, --output-ext {jpg,jpeg,jfif,png,tiff,bmp,pnm}\n                        Output file extension\n  -m {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}, --method {otsu,isodata,li,local,mean,minimum,multiotsu,niblack,sauvola,triangle,yen,p-tile,two-peaks,min-error,pun,kapur,johannsen,wolf,nick,bradley-roth,bernsen,contrast,singh,feng,try-all}\n                        Method used to perform the binarization\n  -b BLOCK_SIZE, --block-size BLOCK_SIZE\n                        Odd size of pixel neighborhood which is used to\n                        calculate the threshold value (local threshold)\n  -c NUM_CLASSES, --num-classes NUM_CLASSES\n                        Number of classes to be thresholded (multiotsu)\n\n</code></pre>\n<h2>Additional information</h2>\n<p>This package is simply wrapper to easily apply multiple threshold algorithms to an image (or the images in a directory).\nI didn't code the algorithms so I send a big thank you to all the authors of libraries that made this wrapper possible:</p>\n<ul>\n<li><a href=\"https://scikit-image.org/docs/dev/auto_examples/segmentation/plot_thresholding.html\" rel=\"nofollow\">scikit-image</a></li>\n<li><a href=\"https://github.com/manuelaguadomtz/pythreshold\" rel=\"nofollow\">pythreshold</a></li>\n</ul>\n\n          </div>"}, "last_serial": 7064858, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "d2fa7b85b19e2c1e1d95a52937859c61", "sha256": "656ed70b2027e4e3d18a2df75a78f26f7c143375a285ee15b88c5c1890c7896a"}, "downloads": -1, "filename": "img2bw-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d2fa7b85b19e2c1e1d95a52937859c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4651, "upload_time": "2020-04-20T21:58:58", "upload_time_iso_8601": "2020-04-20T21:58:58.612612Z", "url": "https://files.pythonhosted.org/packages/20/73/b5567dd5bbe734e790b9a39b08d26d890f422492e7237c2aefa41b6cc47d/img2bw-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "ca5a062d1913176f88c2af40de634aa0", "sha256": "f6a0c85bbb0be3a57ef9d936e585d85e31157f8a586e320c48d1562336af7dc2"}, "downloads": -1, "filename": "img2bw-0.1.5.tar.gz", "has_sig": false, "md5_digest": "ca5a062d1913176f88c2af40de634aa0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4523, "upload_time": "2020-04-20T22:23:44", "upload_time_iso_8601": "2020-04-20T22:23:44.641526Z", "url": "https://files.pythonhosted.org/packages/f8/3e/ac70dad96a9127ad4d440fec035b7426343b753ed54019cd07b0cd0c9dec/img2bw-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "63ba39cf46b1db2d7a5653887d4d387f", "sha256": "768ea2db8b7f8bb53d6a089424887df70ee5294aba755a9dbe1e4082a13a206d"}, "downloads": -1, "filename": "img2bw-0.1.6.tar.gz", "has_sig": false, "md5_digest": "63ba39cf46b1db2d7a5653887d4d387f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4776, "upload_time": "2020-04-20T22:50:07", "upload_time_iso_8601": "2020-04-20T22:50:07.544162Z", "url": "https://files.pythonhosted.org/packages/42/37/c325174a94edd1d228c61d6629a749ae178686525d4c18c8f3dd2a1cbdd6/img2bw-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c31481427c47e20c88e44933f362f7c7", "sha256": "2d72993be81837995b86e38310c87c27618e6191f2c576feabd1a503d87709fc"}, "downloads": -1, "filename": "img2bw-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c31481427c47e20c88e44933f362f7c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8554, "upload_time": "2020-04-21T01:54:59", "upload_time_iso_8601": "2020-04-21T01:54:59.141120Z", "url": "https://files.pythonhosted.org/packages/91/e0/f383a0b5d1794a465c6659eeeb34e884e798300340c489e80c90817b76cf/img2bw-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71c8974ba4bb87f5a44342f9bdf4ef8e", "sha256": "89ddf9cd204ba6e2862d31b6a8222c2025c9d4b62f3a4a26e2bdb22c477d9082"}, "downloads": -1, "filename": "img2bw-0.2.0.tar.gz", "has_sig": false, "md5_digest": "71c8974ba4bb87f5a44342f9bdf4ef8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7286, "upload_time": "2020-04-21T01:55:00", "upload_time_iso_8601": "2020-04-21T01:55:00.225117Z", "url": "https://files.pythonhosted.org/packages/34/be/5a201e953b35b03210bc321fcc39eedf7af16167f46d30366ff4cb6a5ede/img2bw-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "42d426ed123c5584c950cb41c87e61b2", "sha256": "425b5f892c85eb8af60150eeb781d8b837e205a3a834be0b65ef33948ad86543"}, "downloads": -1, "filename": "img2bw-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "42d426ed123c5584c950cb41c87e61b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9152, "upload_time": "2020-04-21T02:41:30", "upload_time_iso_8601": "2020-04-21T02:41:30.203916Z", "url": "https://files.pythonhosted.org/packages/d9/56/4c3ad5ba7f16290bf36d6740f12fa88d83c75d8a84a0f929ae75228449c9/img2bw-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dd311fea380bb68e06d01bbd400f5cb", "sha256": "5cd3e7d871a1ce8e96874bb5905a1345e2ce3b5071b7e493e827262fc930fa76"}, "downloads": -1, "filename": "img2bw-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9dd311fea380bb68e06d01bbd400f5cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8529, "upload_time": "2020-04-21T02:41:31", "upload_time_iso_8601": "2020-04-21T02:41:31.592222Z", "url": "https://files.pythonhosted.org/packages/0a/c0/f486e4505e804695ad06d60d46d272652de02b78335fcd32a0744bcec2b3/img2bw-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "42d426ed123c5584c950cb41c87e61b2", "sha256": "425b5f892c85eb8af60150eeb781d8b837e205a3a834be0b65ef33948ad86543"}, "downloads": -1, "filename": "img2bw-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "42d426ed123c5584c950cb41c87e61b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9152, "upload_time": "2020-04-21T02:41:30", "upload_time_iso_8601": "2020-04-21T02:41:30.203916Z", "url": "https://files.pythonhosted.org/packages/d9/56/4c3ad5ba7f16290bf36d6740f12fa88d83c75d8a84a0f929ae75228449c9/img2bw-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dd311fea380bb68e06d01bbd400f5cb", "sha256": "5cd3e7d871a1ce8e96874bb5905a1345e2ce3b5071b7e493e827262fc930fa76"}, "downloads": -1, "filename": "img2bw-0.2.1.tar.gz", "has_sig": false, "md5_digest": "9dd311fea380bb68e06d01bbd400f5cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8529, "upload_time": "2020-04-21T02:41:31", "upload_time_iso_8601": "2020-04-21T02:41:31.592222Z", "url": "https://files.pythonhosted.org/packages/0a/c0/f486e4505e804695ad06d60d46d272652de02b78335fcd32a0744bcec2b3/img2bw-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:44 2020"}