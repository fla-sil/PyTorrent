{"info": {"author": "Marc Abramowitz", "author_email": "marc@marc-abramowitz.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "requests-unixsocket\n===================\n\n.. image:: https://badge.fury.io/py/requests-unixsocket.svg\n    :target: https://badge.fury.io/py/requests-unixsocket\n    :alt: Latest Version on PyPI\n\n.. image:: https://travis-ci.org/msabramo/requests-unixsocket.svg?branch=master\n    :target: https://travis-ci.org/msabramo/requests-unixsocket\n\nUse `requests <http://docs.python-requests.org/>`_ to talk HTTP via a UNIX domain socket\n\nUsage\n-----\n\nExplicit\n++++++++\n\nYou can use it by instantiating a special ``Session`` object:\n\n.. code-block:: python\n\n    import json\n\n    import requests_unixsocket\n\n    session = requests_unixsocket.Session()\n\n    r = session.get('http+unix://%2Fvar%2Frun%2Fdocker.sock/info')\n    registry_config = r.json()['RegistryConfig']\n    print(json.dumps(registry_config, indent=4))\n\n\nImplicit (monkeypatching)\n+++++++++++++++++++++++++\n\nMonkeypatching allows you to use the functionality in this module, while making\nminimal changes to your code. Note that in the above example we had to\ninstantiate a special ``requests_unixsocket.Session`` object and call the\n``get`` method on that object. Calling ``requests.get(url)`` (the easiest way\nto use requests and probably very common), would not work. But we can make it\nwork by doing monkeypatching.\n\nYou can monkeypatch globally:\n\n.. code-block:: python\n\n    import requests_unixsocket\n\n    requests_unixsocket.monkeypatch()\n\n    r = requests.get('http+unix://%2Fvar%2Frun%2Fdocker.sock/info')\n    assert r.status_code == 200\n\nor you can do it temporarily using a context manager:\n\n.. code-block:: python\n\n    import requests_unixsocket\n\n    with requests_unixsocket.monkeypatch():\n        r = requests.get('http+unix://%2Fvar%2Frun%2Fdocker.sock/info')\n        assert r.status_code == 200\n\n\nAbstract namespace sockets\n++++++++++++++++++++++++++\n\nTo connect to an `abstract namespace\nsocket <https://utcc.utoronto.ca/~cks/space/blog/python/AbstractUnixSocketsAndPeercred>`_\n(Linux only), prefix the name with a NULL byte (i.e.: `\\0`) - e.g.:\n\n.. code-block:: python\n\n    import requests_unixsocket\n\n    session = requests_unixsocket.Session()\n    res = session.get('http+unix://\\0test_socket/get')\n    print(res.text)\n\nFor an example program that illustrates this, see\n``examples/abstract_namespace.py`` in the git repo. Since abstract namespace\nsockets are specific to Linux, the program will only work on Linux.\n\n\nSee also\n--------\n\n- https://github.com/httpie/httpie-unixsocket - a plugin for `HTTPie <https://httpie.org/>`_ that allows you to interact with UNIX domain sockets\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/msabramo/requests-unixsocket", "keywords": "", "license": "Apache-2", "maintainer": "", "maintainer_email": "", "name": "requests-unixsocket", "package_url": "https://pypi.org/project/requests-unixsocket/", "platform": "", "project_url": "https://pypi.org/project/requests-unixsocket/", "project_urls": {"Homepage": "https://github.com/msabramo/requests-unixsocket"}, "release_url": "https://pypi.org/project/requests-unixsocket/0.2.0/", "requires_dist": ["requests (>=1.1)", "urllib3 (>=1.8)"], "requires_python": "", "summary": "Use requests to talk HTTP via a UNIX domain socket", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/requests-unixsocket\" rel=\"nofollow\"><img alt=\"Latest Version on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/518aebd3fe6327fa9e215a8393fe2838007e7839/68747470733a2f2f62616467652e667572792e696f2f70792f72657175657374732d756e6978736f636b65742e737667\"></a>\n<a href=\"https://travis-ci.org/msabramo/requests-unixsocket\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/msabramo/requests-unixsocket.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/186585d33866980746f913fba0daf1cfe27c735e/68747470733a2f2f7472617669732d63692e6f72672f6d73616272616d6f2f72657175657374732d756e6978736f636b65742e7376673f6272616e63683d6d6173746572\"></a>\n<p>Use <a href=\"http://docs.python-requests.org/\" rel=\"nofollow\">requests</a> to talk HTTP via a UNIX domain socket</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"explicit\">\n<h3>Explicit</h3>\n<p>You can use it by instantiating a special <tt>Session</tt> object:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">requests_unixsocket</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">requests_unixsocket</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http+unix://</span><span class=\"si\">%2F</span><span class=\"s1\">var</span><span class=\"si\">%2F</span><span class=\"s1\">run</span><span class=\"si\">%2F</span><span class=\"s1\">docker.sock/info'</span><span class=\"p\">)</span>\n<span class=\"n\">registry_config</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">()[</span><span class=\"s1\">'RegistryConfig'</span><span class=\"p\">]</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">registry_config</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">))</span>\n</pre>\n</div>\n<div id=\"implicit-monkeypatching\">\n<h3>Implicit (monkeypatching)</h3>\n<p>Monkeypatching allows you to use the functionality in this module, while making\nminimal changes to your code. Note that in the above example we had to\ninstantiate a special <tt>requests_unixsocket.Session</tt> object and call the\n<tt>get</tt> method on that object. Calling <tt>requests.get(url)</tt> (the easiest way\nto use requests and probably very common), would not work. But we can make it\nwork by doing monkeypatching.</p>\n<p>You can monkeypatch globally:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests_unixsocket</span>\n\n<span class=\"n\">requests_unixsocket</span><span class=\"o\">.</span><span class=\"n\">monkeypatch</span><span class=\"p\">()</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http+unix://</span><span class=\"si\">%2F</span><span class=\"s1\">var</span><span class=\"si\">%2F</span><span class=\"s1\">run</span><span class=\"si\">%2F</span><span class=\"s1\">docker.sock/info'</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n<p>or you can do it temporarily using a context manager:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests_unixsocket</span>\n\n<span class=\"k\">with</span> <span class=\"n\">requests_unixsocket</span><span class=\"o\">.</span><span class=\"n\">monkeypatch</span><span class=\"p\">():</span>\n    <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">requests</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http+unix://</span><span class=\"si\">%2F</span><span class=\"s1\">var</span><span class=\"si\">%2F</span><span class=\"s1\">run</span><span class=\"si\">%2F</span><span class=\"s1\">docker.sock/info'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">status_code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n</div>\n<div id=\"abstract-namespace-sockets\">\n<h3>Abstract namespace sockets</h3>\n<p>To connect to an <a href=\"https://utcc.utoronto.ca/~cks/space/blog/python/AbstractUnixSocketsAndPeercred\" rel=\"nofollow\">abstract namespace\nsocket</a>\n(Linux only), prefix the name with a NULL byte (i.e.: <cite>0</cite>) - e.g.:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">requests_unixsocket</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">requests_unixsocket</span><span class=\"o\">.</span><span class=\"n\">Session</span><span class=\"p\">()</span>\n<span class=\"n\">res</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http+unix://</span><span class=\"se\">\\0</span><span class=\"s1\">test_socket/get'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">res</span><span class=\"o\">.</span><span class=\"n\">text</span><span class=\"p\">)</span>\n</pre>\n<p>For an example program that illustrates this, see\n<tt>examples/abstract_namespace.py</tt> in the git repo. Since abstract namespace\nsockets are specific to Linux, the program will only work on Linux.</p>\n</div>\n</div>\n<div id=\"see-also\">\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://github.com/httpie/httpie-unixsocket\" rel=\"nofollow\">https://github.com/httpie/httpie-unixsocket</a> - a plugin for <a href=\"https://httpie.org/\" rel=\"nofollow\">HTTPie</a> that allows you to interact with UNIX domain sockets</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5684694, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f4718d70f0b4e2303459693a252bf871", "sha256": "aa2d4772e188b93da5d9b8f25c3bd92a8ed85afefb9bd8083f87580e2233def7"}, "downloads": -1, "filename": "requests-unixsocket-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f4718d70f0b4e2303459693a252bf871", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9162, "upload_time": "2014-11-28T07:45:02", "upload_time_iso_8601": "2014-11-28T07:45:02.387296Z", "url": "https://files.pythonhosted.org/packages/af/0b/66d2c7cfd63f2b7032fc31fe1cf00785ad7f4ade55c853b7fe6abfe4fb33/requests-unixsocket-0.1.0.tar.gz", "yanked": false}], "0.1.0.1.g46ab6a7": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "2484eb694d146befd47f2561794c194f", "sha256": "6d9dbd358e6ebe8df283abccd41f12185e170eedb0543265eeb3e70fbe6b22fa"}, "downloads": -1, "filename": "requests-unixsocket-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2484eb694d146befd47f2561794c194f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9183, "upload_time": "2014-11-28T07:50:26", "upload_time_iso_8601": "2014-11-28T07:50:26.941935Z", "url": "https://files.pythonhosted.org/packages/7c/b8/3789c2cc817d16ef1bd0441e26cbc3c3a49afe50d396d93cbf20b64b05f3/requests-unixsocket-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "39a78bf4a76d2fc020323fdd44fd1b9c", "sha256": "05744a17d59d9dd3632bc5ce342315a4df83d79e4c3fffa5214cd7df01046315"}, "downloads": -1, "filename": "requests-unixsocket-0.1.2.tar.gz", "has_sig": false, "md5_digest": "39a78bf4a76d2fc020323fdd44fd1b9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9457, "upload_time": "2014-11-28T17:51:41", "upload_time_iso_8601": "2014-11-28T17:51:41.704711Z", "url": "https://files.pythonhosted.org/packages/0f/08/3f84dff1ff841ac5ea86af00c31dd08a877b14881a38dd7d3905c21898a0/requests-unixsocket-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e8a751a314844e889a8d212f768748cf", "sha256": "9a0f52c39b7df8e004b70077f3efd54062077e21063c9303e400a2d7ca6f1619"}, "downloads": -1, "filename": "requests-unixsocket-0.1.3.tar.gz", "has_sig": false, "md5_digest": "e8a751a314844e889a8d212f768748cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9673, "upload_time": "2015-02-03T23:41:32", "upload_time_iso_8601": "2015-02-03T23:41:32.882161Z", "url": "https://files.pythonhosted.org/packages/83/dd/c8b731e0458ee311976cca9a64f32ddf20a4647e596e7b397f2ddf234325/requests-unixsocket-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "7b3cbacb44480d9b186a9abb7c841790", "sha256": "ba2c86a7e993ee8495f922a31d0cab6bc69f1ee33c5cca58e2ae85c2a6234368"}, "downloads": -1, "filename": "requests-unixsocket-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7b3cbacb44480d9b186a9abb7c841790", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9775, "upload_time": "2015-02-04T17:48:43", "upload_time_iso_8601": "2015-02-04T17:48:43.545977Z", "url": "https://files.pythonhosted.org/packages/c4/0f/449d2d43016596ae3a30199b1d9b0373a30afb8d1a29d56a2a788c263ff7/requests-unixsocket-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "08453c8ef7dc03863ff4a30b901e7c20", "sha256": "a91bc0138f61fb3396de6358fa81e2cd069a150ade5111f869df01d8bc9d294c"}, "downloads": -1, "filename": "requests-unixsocket-0.1.5.tar.gz", "has_sig": false, "md5_digest": "08453c8ef7dc03863ff4a30b901e7c20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10499, "upload_time": "2016-01-20T15:09:53", "upload_time_iso_8601": "2016-01-20T15:09:53.336647Z", "url": "https://files.pythonhosted.org/packages/f3/94/67d781fb32afbee0fffa0ad9e16ad0491f1a9c303e14790ae4e18f11be19/requests-unixsocket-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "8dbf7eec6d88d5e6981052ab9d735878", "sha256": "014d07bfb66dc805a011a8b4b306cf4ec96d2eddb589f6b2b5765e626f0dc0cc"}, "downloads": -1, "filename": "requests_unixsocket-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8dbf7eec6d88d5e6981052ab9d735878", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11736, "upload_time": "2019-08-15T22:52:33", "upload_time_iso_8601": "2019-08-15T22:52:33.821855Z", "url": "https://files.pythonhosted.org/packages/d0/63/97662a6f7175c08381447a09f6bc35464075f0ea6549cf6daf2668b51f04/requests_unixsocket-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca405eabee3505e6d557752ba0d0db5e", "sha256": "9e5c1a20afc3cf786197ae59c79bcdb0e7565f218f27df5f891307ee8817c1ea"}, "downloads": -1, "filename": "requests-unixsocket-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ca405eabee3505e6d557752ba0d0db5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13303, "upload_time": "2019-08-15T22:52:35", "upload_time_iso_8601": "2019-08-15T22:52:35.729866Z", "url": "https://files.pythonhosted.org/packages/4d/ce/78b651fe0adbd4227578fa432d1bde03b4f4945a70c81e252a2b6a2d895f/requests-unixsocket-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8dbf7eec6d88d5e6981052ab9d735878", "sha256": "014d07bfb66dc805a011a8b4b306cf4ec96d2eddb589f6b2b5765e626f0dc0cc"}, "downloads": -1, "filename": "requests_unixsocket-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8dbf7eec6d88d5e6981052ab9d735878", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11736, "upload_time": "2019-08-15T22:52:33", "upload_time_iso_8601": "2019-08-15T22:52:33.821855Z", "url": "https://files.pythonhosted.org/packages/d0/63/97662a6f7175c08381447a09f6bc35464075f0ea6549cf6daf2668b51f04/requests_unixsocket-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca405eabee3505e6d557752ba0d0db5e", "sha256": "9e5c1a20afc3cf786197ae59c79bcdb0e7565f218f27df5f891307ee8817c1ea"}, "downloads": -1, "filename": "requests-unixsocket-0.2.0.tar.gz", "has_sig": false, "md5_digest": "ca405eabee3505e6d557752ba0d0db5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13303, "upload_time": "2019-08-15T22:52:35", "upload_time_iso_8601": "2019-08-15T22:52:35.729866Z", "url": "https://files.pythonhosted.org/packages/4d/ce/78b651fe0adbd4227578fa432d1bde03b4f4945a70c81e252a2b6a2d895f/requests-unixsocket-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:00 2020"}