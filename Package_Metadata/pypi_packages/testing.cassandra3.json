{"info": {"author": "Corentin Chary", "author_email": "corentin.chary@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Software Development", "Topic :: Software Development :: Testing"], "description": "``testing.cassandra3`` automatically setups a cassandra instance in a temporary directory, and destroys it after testing\n\n.. image:: https://travis-ci.org/criteo-forks/testing.cassandra.svg?branch=master\n   :target: https://travis-ci.org/criteo-forks/testing.cassandra\n\n.. image:: https://coveralls.io/repos/criteo-forks/testing.cassandra/badge.png?branch=master\n   :target: https://coveralls.io/r/criteo-forks/testing.cassandra?branch=master\n\n.. image:: https://codeclimate.com/github/criteo-forks/testing.cassandra/badges/gpa.svg\n   :target: https://codeclimate.com/github/criteo-forks/testing.cassandra\n\nThis is a fork of https://github.com/tk0miya/testing.cassandra.\n\nInstall\n=======\nUse easy_install (or pip)::\n\n   $ easy_install testing.cassandra3\n\nAnd ``testing.cassandra3`` requires Cassandra server.\n\n\nUsage\n=====\nCreate Cassandra instance using ``testing.cassandra3.Cassandra``::\n\n  import cassandra\n  import testing.cassandra3\n\n  # Launch new Cassandra server\n  with testing.cassandra3.Cassandra as cassandra:\n      conn = cassandra.cluster.Cluster(**cassandra.connection_params())\n      #\n      # do any tests using Cassandra...\n      #\n\n  # Cassandra server is terminated here\n\n\n``testing.cassandra3`` automatically searchs for cassandra files in ``/usr/local/``.\nIf you install cassandra to other directory, set ``cassandra_home`` keyword::\n\n  # uses a copy of specified data directory of Cassandra.\n  cassandra = testing.cassandra3.Cassandra(copy_data_from='/path/to/your/database')\n\n\n``testing.cassandra3.Cassandra`` executes ``cassandra`` on instantiation.\nOn deleting Cassandra object, it terminates Cassandra instance and removes temporary directory.\n\nIf you want a database including column families and any fixtures for your apps,\nuse ``copy_data_from`` keyword::\n\n  # uses a copy of specified data directory of Cassandra.\n  cassandra = testing.cassandra3.Cassandra(copy_data_from='/path/to/your/database')\n\n\nYou can specify parameters for Cassandra with ``cassandra_yaml`` keyword::\n\n  # boot Cassandra server listens on 12345 port\n  cassandra = testing.cassandra3.Cassandra(cassandra_yaml={'rpc_port': 12345})\n\n\nFor example, you can setup new Cassandra server for each testcases on setUp() method::\n\n  import unittest\n  import testing.cassandra3\n\n  class MyTestCase(unittest.TestCase):\n      def setUp(self):\n          self.cassandra = testing.cassandra3.Cassandra()\n\n      def tearDown(self):\n          self.cassandra.stop()\n\n\nRequirements\n============\n* Cassandra 3.11.1\n* Python 2.7, 3.5, 3.6\n* cassandra-driver\n* PyYAML\n\n\nLicense\n=======\nApache License 2.0\n\n\nHistory\n=======\n\n1.3.0 (2017-12-10)\n------------------\n* Fork testing.cassandra\n* Drop support for Cassandra 2.x and Python 2.6\n* Add support for Cassandra 3.x and Python 3\n\n1.2.0 (2016-02-03)\n-------------------\n* Add timeout to server invoker\n* Support Homebrew\n* Support Cassandra 2.x\n* Refer $CASSANDRA_HOME for search cassandra home directory\n* Depend on ``testing.common.database`` package\n\n1.1.4 (2015-04-06)\n-------------------\n* Fix bugs:\n\n  - Do not call os.getpid() on destructor (if not needed)\n  - Use absolute path for which command\n\n1.1.3 (2014-06-19)\n-------------------\n* Add timeout on terminating cassandra\n* Fix bugs\n\n1.1.2 (2014-06-11)\n-------------------\n* Fix ImportError if caught SIGINT on py3\n\n1.1.1 (2013-12-06)\n-------------------\n* Suport Cassandra 2.0.x\n* Fix Cassandra#stop() causes OSError (at destructing object)\n\n1.1.0 (2013-12-06)\n-------------------\n* Support Cassandra 1.2.x\n* Support python 2.6\n* Add cassandra.skipIfNotInstalled decorator\n* Change behavior: Cassandra#stop() cleans workdir\n* Fix workdir does not removed if cassandra does not started\n\n1.0.0 (2013-10-17)\n-------------------\n* First release\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/criteo-forks/testing.cassandra", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "testing.cassandra3", "package_url": "https://pypi.org/project/testing.cassandra3/", "platform": "", "project_url": "https://pypi.org/project/testing.cassandra3/", "project_urls": {"Homepage": "https://github.com/criteo-forks/testing.cassandra"}, "release_url": "https://pypi.org/project/testing.cassandra3/1.3.0/", "requires_dist": null, "requires_python": "", "summary": "automatically setups a cassandra instance in a temporary directory, and destroys it after testing", "version": "1.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>testing.cassandra3</tt> automatically setups a cassandra instance in a temporary directory, and destroys it after testing</p>\n<a href=\"https://travis-ci.org/criteo-forks/testing.cassandra\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/criteo-forks/testing.cassandra.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdf0923d77ef2d97aa628c3e84f60b1613a543e9/68747470733a2f2f7472617669732d63692e6f72672f63726974656f2d666f726b732f74657374696e672e63617373616e6472612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/criteo-forks/testing.cassandra?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/criteo-forks/testing.cassandra/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36c862ff053b2e0450990825ce72c0045598893a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f63726974656f2d666f726b732f74657374696e672e63617373616e6472612f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codeclimate.com/github/criteo-forks/testing.cassandra\" rel=\"nofollow\"><img alt=\"https://codeclimate.com/github/criteo-forks/testing.cassandra/badges/gpa.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6684eef84685563a80781b920e40b1a10178c91/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f63726974656f2d666f726b732f74657374696e672e63617373616e6472612f6261646765732f6770612e737667\"></a>\n<p>This is a fork of <a href=\"https://github.com/tk0miya/testing.cassandra\" rel=\"nofollow\">https://github.com/tk0miya/testing.cassandra</a>.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Use easy_install (or pip):</p>\n<pre>$ easy_install testing.cassandra3\n</pre>\n<p>And <tt>testing.cassandra3</tt> requires Cassandra server.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create Cassandra instance using <tt>testing.cassandra3.Cassandra</tt>:</p>\n<pre>import cassandra\nimport testing.cassandra3\n\n# Launch new Cassandra server\nwith testing.cassandra3.Cassandra as cassandra:\n    conn = cassandra.cluster.Cluster(**cassandra.connection_params())\n    #\n    # do any tests using Cassandra...\n    #\n\n# Cassandra server is terminated here\n</pre>\n<p><tt>testing.cassandra3</tt> automatically searchs for cassandra files in <tt>/usr/local/</tt>.\nIf you install cassandra to other directory, set <tt>cassandra_home</tt> keyword:</p>\n<pre># uses a copy of specified data directory of Cassandra.\ncassandra = testing.cassandra3.Cassandra(copy_data_from='/path/to/your/database')\n</pre>\n<p><tt>testing.cassandra3.Cassandra</tt> executes <tt>cassandra</tt> on instantiation.\nOn deleting Cassandra object, it terminates Cassandra instance and removes temporary directory.</p>\n<p>If you want a database including column families and any fixtures for your apps,\nuse <tt>copy_data_from</tt> keyword:</p>\n<pre># uses a copy of specified data directory of Cassandra.\ncassandra = testing.cassandra3.Cassandra(copy_data_from='/path/to/your/database')\n</pre>\n<p>You can specify parameters for Cassandra with <tt>cassandra_yaml</tt> keyword:</p>\n<pre># boot Cassandra server listens on 12345 port\ncassandra = testing.cassandra3.Cassandra(cassandra_yaml={'rpc_port': 12345})\n</pre>\n<p>For example, you can setup new Cassandra server for each testcases on setUp() method:</p>\n<pre>import unittest\nimport testing.cassandra3\n\nclass MyTestCase(unittest.TestCase):\n    def setUp(self):\n        self.cassandra = testing.cassandra3.Cassandra()\n\n    def tearDown(self):\n        self.cassandra.stop()\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Cassandra 3.11.1</li>\n<li>Python 2.7, 3.5, 3.6</li>\n<li>cassandra-driver</li>\n<li>PyYAML</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Apache License 2.0</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.3.0 (2017-12-10)</h3>\n<ul>\n<li>Fork testing.cassandra</li>\n<li>Drop support for Cassandra 2.x and Python 2.6</li>\n<li>Add support for Cassandra 3.x and Python 3</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.2.0 (2016-02-03)</h3>\n<ul>\n<li>Add timeout to server invoker</li>\n<li>Support Homebrew</li>\n<li>Support Cassandra 2.x</li>\n<li>Refer $CASSANDRA_HOME for search cassandra home directory</li>\n<li>Depend on <tt>testing.common.database</tt> package</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.1.4 (2015-04-06)</h3>\n<ul>\n<li>Fix bugs:<ul>\n<li>Do not call os.getpid() on destructor (if not needed)</li>\n<li>Use absolute path for which command</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.1.3 (2014-06-19)</h3>\n<ul>\n<li>Add timeout on terminating cassandra</li>\n<li>Fix bugs</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.1.2 (2014-06-11)</h3>\n<ul>\n<li>Fix ImportError if caught SIGINT on py3</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.1.1 (2013-12-06)</h3>\n<ul>\n<li>Suport Cassandra 2.0.x</li>\n<li>Fix Cassandra#stop() causes OSError (at destructing object)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.1.0 (2013-12-06)</h3>\n<ul>\n<li>Support Cassandra 1.2.x</li>\n<li>Support python 2.6</li>\n<li>Add cassandra.skipIfNotInstalled decorator</li>\n<li>Change behavior: Cassandra#stop() cleans workdir</li>\n<li>Fix workdir does not removed if cassandra does not started</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.0.0 (2013-10-17)</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4188234, "releases": {"1.3.0": [{"comment_text": "", "digests": {"md5": "6d59d1592786503fc1b4c3c81191e80c", "sha256": "a5020934bd40d675ee8ea75ec049f2a2d2120fd4660873a36347426f298ee010"}, "downloads": -1, "filename": "testing.cassandra3-1.3.0.tar.gz", "has_sig": false, "md5_digest": "6d59d1592786503fc1b4c3c81191e80c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9480, "upload_time": "2017-12-14T15:32:10", "upload_time_iso_8601": "2017-12-14T15:32:10.463144Z", "url": "https://files.pythonhosted.org/packages/5e/d0/1d30295bfe82959c46a934856427ebb48642a3db5060aaff365bd1a716bf/testing.cassandra3-1.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6d59d1592786503fc1b4c3c81191e80c", "sha256": "a5020934bd40d675ee8ea75ec049f2a2d2120fd4660873a36347426f298ee010"}, "downloads": -1, "filename": "testing.cassandra3-1.3.0.tar.gz", "has_sig": false, "md5_digest": "6d59d1592786503fc1b4c3c81191e80c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9480, "upload_time": "2017-12-14T15:32:10", "upload_time_iso_8601": "2017-12-14T15:32:10.463144Z", "url": "https://files.pythonhosted.org/packages/5e/d0/1d30295bfe82959c46a934856427ebb48642a3db5060aaff365bd1a716bf/testing.cassandra3-1.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:32 2020"}