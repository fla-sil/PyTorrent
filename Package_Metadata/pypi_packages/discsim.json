{"info": {"author": "Jerome Kelleher", "author_email": "jerome.kelleher@ed.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: POSIX", "Programming Language :: C", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "===================================================\nEfficient coalescent simulation in continuous space\n===================================================\n\nSimulates the coalescent for populations evolving in a spatial \ncontinuum under the extinction/recolonisation model. This \npackage is a specialisation of the `ercs <https://pypi.python.org/pypi/ercs>`_\npackage, and provides a much more efficient method of \nsimulating the spatial coalescent for the disc model. \nA very similar (but not identical) interface to ``ercs``\nis provided.\n\n\nThe simulations \nsupport:\n        \n- A sample of ``n`` individuals with ``m`` loci at arbitrary locations on a \n  torus of diameter ``L``.\n- A fixed recombination rate between pairs of adjacent loci. \n- An arbitrary number of classes of event occuring at fixed\n  rates. \n- Simulations in one and two dimensions.\n- Access to the locations of ancestors at any time in the past.\n- Simulations of the locations of all pedigree ancestors, as well \n  as the genetic ancestors.\n\nThe ``discsim`` module supports Python 2 and 3.\n\n-------------\nDocumentation\n-------------\n\nHere's a quick example for the impatient::\n\n        import ercs\n        import discsim\n        sim = discsim.Simulator(10)\n        sim.sample = [None, (3, 2), (6, 4), (7, 0)]\n        sim.event_classes = [ercs.DiscEventClass(u=0.5, r=1)]\n        sim.run()\n        pi, tau = sim.get_history()\n\n\nFull documentation for ``discsim`` is available at \n`<http://pythonhosted.org/discsim>`_.\n\n------------\nInstallation\n------------\n\n*******************************\nQuick install for Debian/Ubuntu\n*******************************\n\nIf you are running Debian or Ubuntu, this should get you up and running quickly::\n\n        $ sudo apt-get install python-dev libgsl0-dev \n        $ sudo pip install ercs discsim\n\nFor Python 3, use ``python3-dev`` and ``pip3``.\n\n********************\nGeneral instructions\n********************\n\nThe ``discsim`` module \ndepends on the `GNU Scientific Library <http://www.gnu.org/software/gsl/>`_,\nwhich must be installed before it can be built.\nFortunately, this is straightforward on most platforms. For example, \non Debian or Ubuntu use::\n\n        $ sudo apt-get install libgsl0-dev\n\nor on Fedora::\n\n        $ sudo yum install gsl-devel\n\nGSL is available on most packaging systems; if it is not available on your\nplatform, it can be installed from source.\n\nThe ``discsim`` module also depends on the \n`ercs <https://pypi.python.org/pypi/ercs>`_\nPython module, which \nmust also be installed, using the same methods as outlined below.\n\nOnce GSL has been installed we can build the ``discsim`` module using the \nstandard Python `methods <http://docs.python.org/install/index.html>`_. For \nexample, using pip we have ::\n        \n        $ sudo pip install discsim\n\nOr, we can manually download the package, unpack it and then run::\n        \n        $ python setup.py build\n        $ sudo python setup.py install\n\nMost of the time this will compile and install the module without difficulty.\n\nIt is also possible to download the latest development version of \n``discsim`` from `github <https://github.com/jeromekelleher/discsim>`_. \n\n******************\nPotential problems\n******************\n\nOn platforms that GSL is not available as part of the native packaging \nsystem (or GSL was installed locally because of non-root access)\nthere can be issues with finding the correct headers and libraries\nwhen compiling ``ercs`` and ``discsim``. For example, on FreeBSD we get something \nlike this::\n\n        $ python setup.py build\n        ... [Messages cut for brevity] ...\n        _discsimmodule.c:515: error: 'sim_t' has no member named 'time'\n        _discsimmodule.c: In function 'Simulator_get_num_reproduction_events':\n        _discsimmodule.c:529: error: 'sim_t' has no member named 'num_reproduction_events'\n        _discsimmodule.c: In function 'Simulator_get_history':\n        _discsimmodule.c:743: error: 'sim_t' has no member named 'pi'\n        _discsimmodule.c:748: error: 'sim_t' has no member named 'tau'\n        _discsimmodule.c: In function 'Simulator_run':\n        _discsimmodule.c:789: error: 'sim_t' has no member named 'time'\n        error: command 'cc' failed with exit status 1\n        \nThis can be remedied by using the ``gsl-config`` program to set the \nthe ``LDFLAGS`` and ``CFLAGS`` environment variables to \ntheir correct values::\n        \n         $ CFLAGS=`gsl-config --cflags` LDFLAGS=`gsl-config --libs` python setup.py build\n\n*****\nTests\n*****\n\n``discsim`` provides some test cases to ensure that the installation has gone smoothly.\nIt is a good idea to run these immediately after installation::\n\n        $ python tests.py\n\n\n****************\nTested platforms\n****************\n\nDiscsim has been successfully built and tested on the following platforms:\n\n================        ========        ======          ========\nOperating system        Platform        Python          Compiler\n================        ========        ======          ========\nDebian wheezy           x86_64          2.7.3           gcc 4.7.2\t\nDebian wheezy           x86_64          3.2.3           gcc 4.7.2\t\nDebian wheezy           x86             2.7.3           gcc 4.7.2\t\nDebian squeeze          ppc64           2.6.6           gcc 4.4.5\t\nDebian squeeze          ppc64           3.1.3           gcc 4.4.5\t\nDebian squeeze          x86_64          2.6.6           gcc 4.4.5\t\nDebian squeeze          x86_64          3.1.3           gcc 4.4.5\t\nFreeBSD 9.2             x86_64          2.7.5           gcc 4.2.1\nFreeBSD 9.2             x86_64          3.3.2           gcc 4.2.1\nFedora 19               x86_64          2.7.5           gcc 4.8.1\nFedora 19               x86_64          3.3.2           gcc 4.8.1\nSunOS 5.10              SPARC           3.3.2           gcc 4.8.0 \n================        ========        ======          ========", "description_content_type": null, "docs_url": "https://pythonhosted.org/discsim/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/discsim", "keywords": "Coalescent simulation,Continuous space", "license": "GNU GPLv3", "maintainer": null, "maintainer_email": null, "name": "discsim", "package_url": "https://pypi.org/project/discsim/", "platform": "POSIX", "project_url": "https://pypi.org/project/discsim/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/discsim"}, "release_url": "https://pypi.org/project/discsim/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Efficient coalescent simulation in continuous space", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simulates the coalescent for populations evolving in a spatial\ncontinuum under the extinction/recolonisation model. This\npackage is a specialisation of the <a href=\"https://pypi.python.org/pypi/ercs\" rel=\"nofollow\">ercs</a>\npackage, and provides a much more efficient method of\nsimulating the spatial coalescent for the disc model.\nA very similar (but not identical) interface to <tt>ercs</tt>\nis provided.</p>\n<p>The simulations\nsupport:</p>\n<ul>\n<li>A sample of <tt>n</tt> individuals with <tt>m</tt> loci at arbitrary locations on a\ntorus of diameter <tt>L</tt>.</li>\n<li>A fixed recombination rate between pairs of adjacent loci.</li>\n<li>An arbitrary number of classes of event occuring at fixed\nrates.</li>\n<li>Simulations in one and two dimensions.</li>\n<li>Access to the locations of ancestors at any time in the past.</li>\n<li>Simulations of the locations of all pedigree ancestors, as well\nas the genetic ancestors.</li>\n</ul>\n<p>The <tt>discsim</tt> module supports Python 2 and 3.</p>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Here\u2019s a quick example for the impatient:</p>\n<pre>import ercs\nimport discsim\nsim = discsim.Simulator(10)\nsim.sample = [None, (3, 2), (6, 4), (7, 0)]\nsim.event_classes = [ercs.DiscEventClass(u=0.5, r=1)]\nsim.run()\npi, tau = sim.get_history()\n</pre>\n<p>Full documentation for <tt>discsim</tt> is available at\n<a href=\"http://pythonhosted.org/discsim\" rel=\"nofollow\">http://pythonhosted.org/discsim</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"quick-install-for-debian-ubuntu\">\n<h3>Quick install for Debian/Ubuntu</h3>\n<p>If you are running Debian or Ubuntu, this should get you up and running quickly:</p>\n<pre>$ sudo apt-get install python-dev libgsl0-dev\n$ sudo pip install ercs discsim\n</pre>\n<p>For Python 3, use <tt><span class=\"pre\">python3-dev</span></tt> and <tt>pip3</tt>.</p>\n</div>\n<div id=\"general-instructions\">\n<h3>General instructions</h3>\n<p>The <tt>discsim</tt> module\ndepends on the <a href=\"http://www.gnu.org/software/gsl/\" rel=\"nofollow\">GNU Scientific Library</a>,\nwhich must be installed before it can be built.\nFortunately, this is straightforward on most platforms. For example,\non Debian or Ubuntu use:</p>\n<pre>$ sudo apt-get install libgsl0-dev\n</pre>\n<p>or on Fedora:</p>\n<pre>$ sudo yum install gsl-devel\n</pre>\n<p>GSL is available on most packaging systems; if it is not available on your\nplatform, it can be installed from source.</p>\n<p>The <tt>discsim</tt> module also depends on the\n<a href=\"https://pypi.python.org/pypi/ercs\" rel=\"nofollow\">ercs</a>\nPython module, which\nmust also be installed, using the same methods as outlined below.</p>\n<p>Once GSL has been installed we can build the <tt>discsim</tt> module using the\nstandard Python <a href=\"http://docs.python.org/install/index.html\" rel=\"nofollow\">methods</a>. For\nexample, using pip we have</p>\n<pre>$ sudo pip install discsim\n</pre>\n<p>Or, we can manually download the package, unpack it and then run:</p>\n<pre>$ python setup.py build\n$ sudo python setup.py install\n</pre>\n<p>Most of the time this will compile and install the module without difficulty.</p>\n<p>It is also possible to download the latest development version of\n<tt>discsim</tt> from <a href=\"https://github.com/jeromekelleher/discsim\" rel=\"nofollow\">github</a>.</p>\n</div>\n<div id=\"potential-problems\">\n<h3>Potential problems</h3>\n<p>On platforms that GSL is not available as part of the native packaging\nsystem (or GSL was installed locally because of non-root access)\nthere can be issues with finding the correct headers and libraries\nwhen compiling <tt>ercs</tt> and <tt>discsim</tt>. For example, on FreeBSD we get something\nlike this:</p>\n<pre>$ python setup.py build\n... [Messages cut for brevity] ...\n_discsimmodule.c:515: error: 'sim_t' has no member named 'time'\n_discsimmodule.c: In function 'Simulator_get_num_reproduction_events':\n_discsimmodule.c:529: error: 'sim_t' has no member named 'num_reproduction_events'\n_discsimmodule.c: In function 'Simulator_get_history':\n_discsimmodule.c:743: error: 'sim_t' has no member named 'pi'\n_discsimmodule.c:748: error: 'sim_t' has no member named 'tau'\n_discsimmodule.c: In function 'Simulator_run':\n_discsimmodule.c:789: error: 'sim_t' has no member named 'time'\nerror: command 'cc' failed with exit status 1\n</pre>\n<p>This can be remedied by using the <tt><span class=\"pre\">gsl-config</span></tt> program to set the\nthe <tt>LDFLAGS</tt> and <tt>CFLAGS</tt> environment variables to\ntheir correct values:</p>\n<pre>$ CFLAGS=`gsl-config --cflags` LDFLAGS=`gsl-config --libs` python setup.py build\n</pre>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<p><tt>discsim</tt> provides some test cases to ensure that the installation has gone smoothly.\nIt is a good idea to run these immediately after installation:</p>\n<pre>$ python tests.py\n</pre>\n</div>\n<div id=\"tested-platforms\">\n<h3>Tested platforms</h3>\n<p>Discsim has been successfully built and tested on the following platforms:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Operating system</th>\n<th>Platform</th>\n<th>Python</th>\n<th>Compiler</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Debian wheezy</td>\n<td>x86_64</td>\n<td>2.7.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>Debian wheezy</td>\n<td>x86_64</td>\n<td>3.2.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>Debian wheezy</td>\n<td>x86</td>\n<td>2.7.3</td>\n<td>gcc 4.7.2</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>ppc64</td>\n<td>2.6.6</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>ppc64</td>\n<td>3.1.3</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>x86_64</td>\n<td>2.6.6</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>Debian squeeze</td>\n<td>x86_64</td>\n<td>3.1.3</td>\n<td>gcc 4.4.5</td>\n</tr>\n<tr><td>FreeBSD 9.2</td>\n<td>x86_64</td>\n<td>2.7.5</td>\n<td>gcc 4.2.1</td>\n</tr>\n<tr><td>FreeBSD 9.2</td>\n<td>x86_64</td>\n<td>3.3.2</td>\n<td>gcc 4.2.1</td>\n</tr>\n<tr><td>Fedora 19</td>\n<td>x86_64</td>\n<td>2.7.5</td>\n<td>gcc 4.8.1</td>\n</tr>\n<tr><td>Fedora 19</td>\n<td>x86_64</td>\n<td>3.3.2</td>\n<td>gcc 4.8.1</td>\n</tr>\n<tr><td>SunOS 5.10</td>\n<td>SPARC</td>\n<td>3.3.2</td>\n<td>gcc 4.8.0</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1367986, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7caace9ce911612d0f854b36d3269010", "sha256": "02e5edcba94c4484964bfe4fab1b28f30464bbbd03579ec8e33cf567be031a3b"}, "downloads": -1, "filename": "discsim-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7caace9ce911612d0f854b36d3269010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35956, "upload_time": "2015-01-02T09:28:28", "upload_time_iso_8601": "2015-01-02T09:28:28.398623Z", "url": "https://files.pythonhosted.org/packages/18/af/e711db75ca1bb7b5658b78285cad65e7fb7dd89a94ddddb91239847aa355/discsim-1.0.0.tar.gz", "yanked": false}], "1.0.0a1": [{"comment_text": "", "digests": {"md5": "baee62ba20ea9cc31da19dc1dfbbb1db", "sha256": "4aeab1205e37d08f6686bd8ba9f6c88b1a6b3f8706779c8d0a9210ab7995fa2d"}, "downloads": -1, "filename": "discsim-1.0.0a1.tar.gz", "has_sig": false, "md5_digest": "baee62ba20ea9cc31da19dc1dfbbb1db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35434, "upload_time": "2013-10-16T14:46:44", "upload_time_iso_8601": "2013-10-16T14:46:44.667132Z", "url": "https://files.pythonhosted.org/packages/38/d0/d06c4e16382240c85d9789f23fa8065b599784a8bae750fec91654538edf/discsim-1.0.0a1.tar.gz", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "94fb22e5084933667e6ac44b07948039", "sha256": "c71013098262f2970898c37cab546db3c299e67b3e29b4165d07251d346337e0"}, "downloads": -1, "filename": "discsim-1.0.0b1.tar.gz", "has_sig": false, "md5_digest": "94fb22e5084933667e6ac44b07948039", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36115, "upload_time": "2013-10-22T11:42:18", "upload_time_iso_8601": "2013-10-22T11:42:18.901022Z", "url": "https://files.pythonhosted.org/packages/1e/3a/a12ee58882c11292997676dccb7c2894acdf6a71bd50f9f816238c30dd1e/discsim-1.0.0b1.tar.gz", "yanked": false}], "1.0.0b2": [{"comment_text": "", "digests": {"md5": "96d59f077f6f00651c229e90026c682c", "sha256": "4e63e5238b37c32836394d9a4bee75dcf8b63a0f4dfce9e2d509ef405dd628fb"}, "downloads": -1, "filename": "discsim-1.0.0b2.tar.gz", "has_sig": false, "md5_digest": "96d59f077f6f00651c229e90026c682c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36728, "upload_time": "2014-01-30T18:23:26", "upload_time_iso_8601": "2014-01-30T18:23:26.356267Z", "url": "https://files.pythonhosted.org/packages/06/0d/e115a5abbe4350e97514cd09242d4ee9b6205da764cb3e95278f5d3a47fe/discsim-1.0.0b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7caace9ce911612d0f854b36d3269010", "sha256": "02e5edcba94c4484964bfe4fab1b28f30464bbbd03579ec8e33cf567be031a3b"}, "downloads": -1, "filename": "discsim-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7caace9ce911612d0f854b36d3269010", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35956, "upload_time": "2015-01-02T09:28:28", "upload_time_iso_8601": "2015-01-02T09:28:28.398623Z", "url": "https://files.pythonhosted.org/packages/18/af/e711db75ca1bb7b5658b78285cad65e7fb7dd89a94ddddb91239847aa355/discsim-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:09 2020"}