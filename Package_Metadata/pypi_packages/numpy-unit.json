{"info": {"author": "Politinsa", "author_email": "", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# numpy-unit\n\n[![Build Status](https://travis-ci.org/politinsa/numpy-unit.svg?branch=master)](https://travis-ci.org/politinsa/numpy-unit)\n[![Documentation Status](https://readthedocs.org/projects/numpy-unit/badge/?version=latest)](https://numpy-unit.readthedocs.io/en/latest/?badge=latest)\n[![codecov](https://codecov.io/gh/politinsa/numpy-unit/branch/master/graph/badge.svg)](https://codecov.io/gh/politinsa/numpy-unit)\n[![license](https://img.shields.io/badge/license-Unlicense-blue)](https://github.com/politinsa/numpy-unit/blob/master/LICENSE)\n\n\nThis package provides a tool for scientific computing by keeping track of the unit when performing classical operations on a multi-dimensionnal array with (almost) no extra-cost comparing to the standard numpy array.  \nThe `ArrayUnit` class supports every operation a numpy.ndarray can handle (because it is a derived class of numpy.ndarray) but the operators are overloaded in order to perform transformations on the `Unit` contained in every `ArrayUnit`.\n\n## Install\n\n    pip install numpy-unit\n\n## Examples\n\n```python\n>>> import numpy as np\n>>> from numpy_unit import Unit, ArrayUnit\n>>> \n>>> m = Unit('m')\n>>> sm2 = Unit('s', -2)\n>>> complex_unit = Unit({'my_unit': 0.5, '\u20ac': 1, 'capita': 2}) * (sm2**0.5) / m\n>>> print(complex_unit)\n\u20ac\u00b7capita\u00b2\u00b7my_unit^0.5\u00b7m\u207b\u00b9\u00b7s\u207b\u00b9\n>>>\n>>> arr = np.linspace(1,10,10, dtype=float)\n>>> a = ArrayUnit(arr, m)\n>>> b = ArrayUnit(arr**2, sm2)\n>>> print(a, '\\\\n+\\\\n', 1, '\\\\n=\\\\n', a + 1)\n[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.] m\n+\n1 \n=\n[ 2.  3.  4.  5.  6.  7.  8.  9. 10. 11.] m\n>>> print(a, '\\\\n*\\\\n', b, '\\\\n=\\\\n', a * b)\n[ 1.  2.  3.  4.  5.  6.  7.  8.  9. 10.] m\n*\n[  1.   4.   9.  16.  25.  36.  49.  64.  81. 100.] s\u207b\u00b2\n=\n[   1.    8.   27.   64.  125.  216.  343.  512.  729. 1000.] m\u00b7s\u207b\u00b2\n```\n\nThe following rules applied (where {op} is one of the following: [``+``, ``-``, ``*``, ``/``, ``//``, ``%``]):  \n\n* ArrayUnit {op} Object returns an ArrayUnit with the same unit as the ArrayUnit\n* Object {op} ArrayUnit returns an ArrayUnit with the same unit as the ArrayUnit\n* ArrayUnit {op} ArrayUnit returns an ArrayUnit combining the Unit of the 2 ArrayUnit or an Error\n* An Error might be raised only when two ArrayUnit are conflicting and that ArrayUnit.is_strict is set to True. Otherwise, it would print a warning.\n* An ArrayUnit is equal to a numpy.ndarray if and only if their underlying arrays are equal (np.array_equal) and the Unit of the ArrayUnit is empty.\n\n## Development\nDoc of the master branch on [readthedocs.io](https://numpy-unit.readthedocs.io/en/latest/).\n\n## Features\n- [x] Basic unit system handling multiplication, division, modulo and power\n- [x] ArrayUnit wrapper for unit + ndarray\n- [x] Operators on ArrayUnit (and their variants __r{op}__ and __i{op}__)\n     - [x] eq, ne\n     - [x] add\n     - [x] sub\n     - [x] mul\n     - [x] truediv, floordiv\n     - [x] mod\n     - [x] pow (but not __rpow__)\n- [ ] Basic ndarray function\n     - [ ] mean\n     - [ ] std\n     - [ ] ...\n- [ ] conda release\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/politinsa/numpy-unit", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "numpy-unit", "package_url": "https://pypi.org/project/numpy-unit/", "platform": "", "project_url": "https://pypi.org/project/numpy-unit/", "project_urls": {"Homepage": "https://github.com/politinsa/numpy-unit"}, "release_url": "https://pypi.org/project/numpy-unit/0.1.1/", "requires_dist": ["numpy"], "requires_python": ">=3.6", "summary": "A package providing an unit system for numpy multidimensionnal arrays.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>numpy-unit</h1>\n<p><a href=\"https://travis-ci.org/politinsa/numpy-unit\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/58baa69d7372a8cc95e84586d68add0a2bfbffd4/68747470733a2f2f7472617669732d63692e6f72672f706f6c6974696e73612f6e756d70792d756e69742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://numpy-unit.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e7645dd9f7664290cdd969763ac6dddac8e2467/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6e756d70792d756e69742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/politinsa/numpy-unit\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52b0dd93cff2904eebfce1f33beb9122b7ed428f/68747470733a2f2f636f6465636f762e696f2f67682f706f6c6974696e73612f6e756d70792d756e69742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://github.com/politinsa/numpy-unit/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/91adcdb978fc539c516073e129b041998690fbd2/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d556e6c6963656e73652d626c7565\"></a></p>\n<p>This package provides a tool for scientific computing by keeping track of the unit when performing classical operations on a multi-dimensionnal array with (almost) no extra-cost comparing to the standard numpy array.<br>\nThe <code>ArrayUnit</code> class supports every operation a numpy.ndarray can handle (because it is a derived class of numpy.ndarray) but the operators are overloaded in order to perform transformations on the <code>Unit</code> contained in every <code>ArrayUnit</code>.</p>\n<h2>Install</h2>\n<pre><code>pip install numpy-unit\n</code></pre>\n<h2>Examples</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">numpy_unit</span> <span class=\"kn\">import</span> <span class=\"n\">Unit</span><span class=\"p\">,</span> <span class=\"n\">ArrayUnit</span>\n<span class=\"o\">&gt;&gt;&gt;</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'m'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sm2</span> <span class=\"o\">=</span> <span class=\"n\">Unit</span><span class=\"p\">(</span><span class=\"s1\">'s'</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">complex_unit</span> <span class=\"o\">=</span> <span class=\"n\">Unit</span><span class=\"p\">({</span><span class=\"s1\">'my_unit'</span><span class=\"p\">:</span> <span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"s1\">'\u20ac'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'capita'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">sm2</span><span class=\"o\">**</span><span class=\"mf\">0.5</span><span class=\"p\">)</span> <span class=\"o\">/</span> <span class=\"n\">m</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">complex_unit</span><span class=\"p\">)</span>\n<span class=\"err\">\u20ac\u00b7</span><span class=\"n\">capita</span><span class=\"err\">\u00b2\u00b7</span><span class=\"n\">my_unit</span><span class=\"o\">^</span><span class=\"mf\">0.5</span><span class=\"err\">\u00b7</span><span class=\"n\">m</span><span class=\"err\">\u207b\u00b9\u00b7</span><span class=\"n\">s</span><span class=\"err\">\u207b\u00b9</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">ArrayUnit</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">m</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">ArrayUnit</span><span class=\"p\">(</span><span class=\"n\">arr</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sm2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">n+</span><span class=\"se\">\\\\</span><span class=\"s1\">n'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">n=</span><span class=\"se\">\\\\</span><span class=\"s1\">n'</span><span class=\"p\">,</span> <span class=\"n\">a</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">[</span> <span class=\"mf\">1.</span>  <span class=\"mf\">2.</span>  <span class=\"mf\">3.</span>  <span class=\"mf\">4.</span>  <span class=\"mf\">5.</span>  <span class=\"mf\">6.</span>  <span class=\"mf\">7.</span>  <span class=\"mf\">8.</span>  <span class=\"mf\">9.</span> <span class=\"mf\">10.</span><span class=\"p\">]</span> <span class=\"n\">m</span>\n<span class=\"o\">+</span>\n<span class=\"mi\">1</span> \n<span class=\"o\">=</span>\n<span class=\"p\">[</span> <span class=\"mf\">2.</span>  <span class=\"mf\">3.</span>  <span class=\"mf\">4.</span>  <span class=\"mf\">5.</span>  <span class=\"mf\">6.</span>  <span class=\"mf\">7.</span>  <span class=\"mf\">8.</span>  <span class=\"mf\">9.</span> <span class=\"mf\">10.</span> <span class=\"mf\">11.</span><span class=\"p\">]</span> <span class=\"n\">m</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">n*</span><span class=\"se\">\\\\</span><span class=\"s1\">n'</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\\\</span><span class=\"s1\">n=</span><span class=\"se\">\\\\</span><span class=\"s1\">n'</span><span class=\"p\">,</span> <span class=\"n\">a</span> <span class=\"o\">*</span> <span class=\"n\">b</span><span class=\"p\">)</span>\n<span class=\"p\">[</span> <span class=\"mf\">1.</span>  <span class=\"mf\">2.</span>  <span class=\"mf\">3.</span>  <span class=\"mf\">4.</span>  <span class=\"mf\">5.</span>  <span class=\"mf\">6.</span>  <span class=\"mf\">7.</span>  <span class=\"mf\">8.</span>  <span class=\"mf\">9.</span> <span class=\"mf\">10.</span><span class=\"p\">]</span> <span class=\"n\">m</span>\n<span class=\"o\">*</span>\n<span class=\"p\">[</span>  <span class=\"mf\">1.</span>   <span class=\"mf\">4.</span>   <span class=\"mf\">9.</span>  <span class=\"mf\">16.</span>  <span class=\"mf\">25.</span>  <span class=\"mf\">36.</span>  <span class=\"mf\">49.</span>  <span class=\"mf\">64.</span>  <span class=\"mf\">81.</span> <span class=\"mf\">100.</span><span class=\"p\">]</span> <span class=\"n\">s</span><span class=\"err\">\u207b\u00b2</span>\n<span class=\"o\">=</span>\n<span class=\"p\">[</span>   <span class=\"mf\">1.</span>    <span class=\"mf\">8.</span>   <span class=\"mf\">27.</span>   <span class=\"mf\">64.</span>  <span class=\"mf\">125.</span>  <span class=\"mf\">216.</span>  <span class=\"mf\">343.</span>  <span class=\"mf\">512.</span>  <span class=\"mf\">729.</span> <span class=\"mf\">1000.</span><span class=\"p\">]</span> <span class=\"n\">m\u00b7s</span><span class=\"err\">\u207b\u00b2</span>\n</pre>\n<p>The following rules applied (where {op} is one of the following: [<code>+</code>, <code>-</code>, <code>*</code>, <code>/</code>, <code>//</code>, <code>%</code>]):</p>\n<ul>\n<li>ArrayUnit {op} Object returns an ArrayUnit with the same unit as the ArrayUnit</li>\n<li>Object {op} ArrayUnit returns an ArrayUnit with the same unit as the ArrayUnit</li>\n<li>ArrayUnit {op} ArrayUnit returns an ArrayUnit combining the Unit of the 2 ArrayUnit or an Error</li>\n<li>An Error might be raised only when two ArrayUnit are conflicting and that ArrayUnit.is_strict is set to True. Otherwise, it would print a warning.</li>\n<li>An ArrayUnit is equal to a numpy.ndarray if and only if their underlying arrays are equal (np.array_equal) and the Unit of the ArrayUnit is empty.</li>\n</ul>\n<h2>Development</h2>\n<p>Doc of the master branch on <a href=\"https://numpy-unit.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs.io</a>.</p>\n<h2>Features</h2>\n<ul>\n<li>[x] Basic unit system handling multiplication, division, modulo and power</li>\n<li>[x] ArrayUnit wrapper for unit + ndarray</li>\n<li>[x] Operators on ArrayUnit (and their variants <strong>r{op}</strong> and <strong>i{op}</strong>)\n<ul>\n<li>[x] eq, ne</li>\n<li>[x] add</li>\n<li>[x] sub</li>\n<li>[x] mul</li>\n<li>[x] truediv, floordiv</li>\n<li>[x] mod</li>\n<li>[x] pow (but not <strong>rpow</strong>)</li>\n</ul>\n</li>\n<li>[ ] Basic ndarray function\n<ul>\n<li>[ ] mean</li>\n<li>[ ] std</li>\n<li>[ ] ...</li>\n</ul>\n</li>\n<li>[ ] conda release</li>\n</ul>\n\n          </div>"}, "last_serial": 6496609, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2abc50818db4bf73390fff3e9b442647", "sha256": "289c4315f924ff5d20a3780bf9eb2f478a461eb8e8080c333060392511324647"}, "downloads": -1, "filename": "numpy_unit-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2abc50818db4bf73390fff3e9b442647", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8969, "upload_time": "2020-01-21T18:39:07", "upload_time_iso_8601": "2020-01-21T18:39:07.934239Z", "url": "https://files.pythonhosted.org/packages/80/90/1ed28d0ffc31d9fc486b697aee4ac540bbb7ec9f8fccde84d0b47a06d695/numpy_unit-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f49e9a3276f540522ffc41de650f588", "sha256": "ca57b0e52324aaddc4a8622862d9c25fc6d2b1cb2c1dc7d33bf0c43773709e95"}, "downloads": -1, "filename": "numpy_unit-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1f49e9a3276f540522ffc41de650f588", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7485, "upload_time": "2020-01-21T18:39:10", "upload_time_iso_8601": "2020-01-21T18:39:10.313769Z", "url": "https://files.pythonhosted.org/packages/a2/ff/78848e5b6e2680ad27956e5203de4f4236c3c4ef8f0ec231cbfc77820cc6/numpy_unit-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2469512c960cfd50b2af130f1797c761", "sha256": "4ca911cc5b17d79c4f1a30aa128703a836c3149939279449ef2342da1dbfd184"}, "downloads": -1, "filename": "numpy_unit-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2469512c960cfd50b2af130f1797c761", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9172, "upload_time": "2020-01-21T21:58:33", "upload_time_iso_8601": "2020-01-21T21:58:33.298215Z", "url": "https://files.pythonhosted.org/packages/a6/96/26bfcd76332d4357d812bba047ad757640a1f6db2e922282199a2eac2923/numpy_unit-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45953556df41a7ff73f2767700e3699a", "sha256": "07935585dfeee8dddcada9ab8ea4209b74e52a1d104f6122ef61583bebaf1b96"}, "downloads": -1, "filename": "numpy_unit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "45953556df41a7ff73f2767700e3699a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7857, "upload_time": "2020-01-21T21:58:34", "upload_time_iso_8601": "2020-01-21T21:58:34.906334Z", "url": "https://files.pythonhosted.org/packages/2e/63/d5c740c83218f67d19635f7056c5b33a5624154434d330f6d4d310939e1e/numpy_unit-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2469512c960cfd50b2af130f1797c761", "sha256": "4ca911cc5b17d79c4f1a30aa128703a836c3149939279449ef2342da1dbfd184"}, "downloads": -1, "filename": "numpy_unit-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2469512c960cfd50b2af130f1797c761", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9172, "upload_time": "2020-01-21T21:58:33", "upload_time_iso_8601": "2020-01-21T21:58:33.298215Z", "url": "https://files.pythonhosted.org/packages/a6/96/26bfcd76332d4357d812bba047ad757640a1f6db2e922282199a2eac2923/numpy_unit-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45953556df41a7ff73f2767700e3699a", "sha256": "07935585dfeee8dddcada9ab8ea4209b74e52a1d104f6122ef61583bebaf1b96"}, "downloads": -1, "filename": "numpy_unit-0.1.1.tar.gz", "has_sig": false, "md5_digest": "45953556df41a7ff73f2767700e3699a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7857, "upload_time": "2020-01-21T21:58:34", "upload_time_iso_8601": "2020-01-21T21:58:34.906334Z", "url": "https://files.pythonhosted.org/packages/2e/63/d5c740c83218f67d19635f7056c5b33a5624154434d330f6d4d310939e1e/numpy_unit-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:09 2020"}