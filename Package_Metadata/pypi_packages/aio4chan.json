{"info": {"author": "Exahilosys", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Topic :: Internet", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "## Contents\n\n- 4chan API reader.\n\n## Installing\n\n```\npython3 -m pip install aio4chan\n```\n\n## Usage\n\n```py\nimport asyncio\nimport aiohttp\nimport aio4chan\n\nloop = asyncio.get_event_loop()\n\nsession = aiohttp.ClientSession(loop = loop)\n\nclient = aio4chan.Client(session = session, loop = loop)\n\nasync def execute():\n\n    \"\"\"\n    Traverse 4chan.\n    \"\"\"\n\n    boards = await client.get_boards()\n\n    # short names\n    board_ids = (board.board for board in boards)\n\n    for board_id in board_ids:\n\n        pages = await client.get_threads(board_id)\n\n        # list of pages, each containing threads\n        thread_ids = (thread.no for page in pages for thread in page.threads)\n\n        for thread_id in thread_ids:\n\n            # need both board_id and thread_id\n            thread = await client.get_thread(board_id, thread_id)\n\n            for post in thread:\n\n                try:\n\n                    # might not exist\n                    comment = post.com\n\n                except AttributeError:\n\n                    continue\n\n                # print where we got it, and the comment\n                print(board_id, '>', thread_id, '>', post.no, '\\n', post.com)\n\ntry:\n\n    loop.run_until_complete(execute())\n\nexcept KeyboardInterrupt:\n\n    pass\n\nfinally:\n\n    loop.run_until_complete(session.close())\n\n    loop.close()\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/Exahilosys/aio4chan/archive/v0.0.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Exahilosys/aio4chan", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aio4chan", "package_url": "https://pypi.org/project/aio4chan/", "platform": "", "project_url": "https://pypi.org/project/aio4chan/", "project_urls": {"Download": "https://github.com/Exahilosys/aio4chan/archive/v0.0.0.tar.gz", "Homepage": "https://github.com/Exahilosys/aio4chan"}, "release_url": "https://pypi.org/project/aio4chan/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "API wrapper for 4chan.", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Contents</h2>\n<ul>\n<li>4chan API reader.</li>\n</ul>\n<h2>Installing</h2>\n<pre><code>python3 -m pip install aio4chan\n</code></pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aio4chan</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n<span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">(</span><span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"p\">)</span>\n\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">aio4chan</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">execute</span><span class=\"p\">():</span>\n\n    <span class=\"sd\">\"\"\"</span>\n<span class=\"sd\">    Traverse 4chan.</span>\n<span class=\"sd\">    \"\"\"</span>\n\n    <span class=\"n\">boards</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_boards</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># short names</span>\n    <span class=\"n\">board_ids</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">board</span><span class=\"o\">.</span><span class=\"n\">board</span> <span class=\"k\">for</span> <span class=\"n\">board</span> <span class=\"ow\">in</span> <span class=\"n\">boards</span><span class=\"p\">)</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">board_id</span> <span class=\"ow\">in</span> <span class=\"n\">board_ids</span><span class=\"p\">:</span>\n\n        <span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_threads</span><span class=\"p\">(</span><span class=\"n\">board_id</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># list of pages, each containing threads</span>\n        <span class=\"n\">thread_ids</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">thread</span><span class=\"o\">.</span><span class=\"n\">no</span> <span class=\"k\">for</span> <span class=\"n\">page</span> <span class=\"ow\">in</span> <span class=\"n\">pages</span> <span class=\"k\">for</span> <span class=\"n\">thread</span> <span class=\"ow\">in</span> <span class=\"n\">page</span><span class=\"o\">.</span><span class=\"n\">threads</span><span class=\"p\">)</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">thread_id</span> <span class=\"ow\">in</span> <span class=\"n\">thread_ids</span><span class=\"p\">:</span>\n\n            <span class=\"c1\"># need both board_id and thread_id</span>\n            <span class=\"n\">thread</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_thread</span><span class=\"p\">(</span><span class=\"n\">board_id</span><span class=\"p\">,</span> <span class=\"n\">thread_id</span><span class=\"p\">)</span>\n\n            <span class=\"k\">for</span> <span class=\"n\">post</span> <span class=\"ow\">in</span> <span class=\"n\">thread</span><span class=\"p\">:</span>\n\n                <span class=\"k\">try</span><span class=\"p\">:</span>\n\n                    <span class=\"c1\"># might not exist</span>\n                    <span class=\"n\">comment</span> <span class=\"o\">=</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">com</span>\n\n                <span class=\"k\">except</span> <span class=\"ne\">AttributeError</span><span class=\"p\">:</span>\n\n                    <span class=\"k\">continue</span>\n\n                <span class=\"c1\"># print where we got it, and the comment</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">board_id</span><span class=\"p\">,</span> <span class=\"s1\">'&gt;'</span><span class=\"p\">,</span> <span class=\"n\">thread_id</span><span class=\"p\">,</span> <span class=\"s1\">'&gt;'</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">no</span><span class=\"p\">,</span> <span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">execute</span><span class=\"p\">())</span>\n\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n\n    <span class=\"k\">pass</span>\n\n<span class=\"k\">finally</span><span class=\"p\">:</span>\n\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">())</span>\n\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 4564916, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "3b7bd67017f2a26727373df410aa9455", "sha256": "0a9c6c01c41537782db44d0abf8ead9fc423207f6364712365b48ed56b320866"}, "downloads": -1, "filename": "aio4chan-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3b7bd67017f2a26727373df410aa9455", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4239, "upload_time": "2018-12-05T18:12:06", "upload_time_iso_8601": "2018-12-05T18:12:06.442508Z", "url": "https://files.pythonhosted.org/packages/f3/c5/bd14b7ad300dc0da6bf75f24b97ea589496d3adde786b85c47e57226eff5/aio4chan-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a9c7ec75c092a989a16437767359b66", "sha256": "cec2f933a27753b0f06e77fe2a12df337bfc61e75c4380ac13ecb5ac3f2e5697"}, "downloads": -1, "filename": "aio4chan-0.0.0.tar.gz", "has_sig": false, "md5_digest": "5a9c7ec75c092a989a16437767359b66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3359, "upload_time": "2018-11-28T06:06:09", "upload_time_iso_8601": "2018-11-28T06:06:09.887725Z", "url": "https://files.pythonhosted.org/packages/e0/b1/f71e42148d495fc114ac82afcd1e7b55dc0c5a844a176100e704e2e2c632/aio4chan-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b7bd67017f2a26727373df410aa9455", "sha256": "0a9c6c01c41537782db44d0abf8ead9fc423207f6364712365b48ed56b320866"}, "downloads": -1, "filename": "aio4chan-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3b7bd67017f2a26727373df410aa9455", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4239, "upload_time": "2018-12-05T18:12:06", "upload_time_iso_8601": "2018-12-05T18:12:06.442508Z", "url": "https://files.pythonhosted.org/packages/f3/c5/bd14b7ad300dc0da6bf75f24b97ea589496d3adde786b85c47e57226eff5/aio4chan-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a9c7ec75c092a989a16437767359b66", "sha256": "cec2f933a27753b0f06e77fe2a12df337bfc61e75c4380ac13ecb5ac3f2e5697"}, "downloads": -1, "filename": "aio4chan-0.0.0.tar.gz", "has_sig": false, "md5_digest": "5a9c7ec75c092a989a16437767359b66", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3359, "upload_time": "2018-11-28T06:06:09", "upload_time_iso_8601": "2018-11-28T06:06:09.887725Z", "url": "https://files.pythonhosted.org/packages/e0/b1/f71e42148d495fc114ac82afcd1e7b55dc0c5a844a176100e704e2e2c632/aio4chan-0.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:51 2020"}