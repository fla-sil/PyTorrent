{"info": {"author": "Yury Yurevich", "author_email": "yyurevich@jellycrystal.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-explain-commands\n        =======================\n        \n        Are you tired to find where each command coming from? django-explain-commands\n        helps you to find which Django application provides each command.\n        \n        Installation\n        ------------\n        \n         1. pip install django-explain-commands\n        \n         2. Add `explain_commands` to `INSTALLED_APPS`.\n        \n        Usage\n        -----\n         \n        Run `python manage.py explain_commands` and enjoy.\n        \n        Sample output:\n        \n            $ python manage.py explain_commands\n            django.contrib.auth =>\n                changepassword -- Change a user's password for django.contrib.auth.\n                createsuperuser -- Used to create a superuser.\n            django.core =>\n                cleanup -- Can be run as a cronjob or directly to clean ou...\n                compilemessages -- Compiles .po files to .mo files for use with bu...\n                createcachetable -- Creates the table needed to use the SQL cache b...\n                dbshell -- Runs the command-line client for specified data...\n                diffsettings -- Displays differences between the current settin...\n                dumpdata -- Output the contents of the database as a fixtur...\n                flush -- Executes ``sqlflush`` on the current database.\n                inspectdb -- Introspects the database tables in the given da...\n                loaddata -- Installs the named fixture(s) in the database.\n                makemessages -- Runs over the entire source tree of the current...\n                reset -- Executes ``sqlreset`` for the given app(s) in t...\n                runfcgi -- Runs this project as a FastCGI application. Req...\n                runserver -- Starts a lightweight Web server for development.\n                shell -- Runs a Python interactive interpreter. Tries to...\n                sql -- Prints the CREATE TABLE SQL statements for the ...\n                sqlall -- Prints the CREATE TABLE, custom SQL and CREATE ...\n                sqlclear -- Prints the DROP TABLE SQL statements for the gi...\n                sqlcustom -- Prints the custom table modifying SQL statement...\n                sqlflush -- Returns a list of the SQL statements required t...\n                sqlindexes -- Prints the CREATE INDEX SQL statements for the ...\n                sqlinitialdata -- RENAMED: see 'sqlcustom'\n                sqlreset -- Prints the DROP TABLE SQL, then the CREATE TABL...\n                sqlsequencereset -- Prints the SQL statements for resetting sequenc...\n                startapp -- Creates a Django app directory structure for th...\n                validate -- Validates all installed models.\n            explain_commands =>\n                explain_commands -- Explain where each command is coming from.\n            south =>\n                convert_to_south -- Quickly converts the named application to use S...\n                datamigration -- Creates a new template data migration for the g...\n                graphmigrations -- Outputs a GraphViz dot file of all migration de...\n                migrate -- Runs migrations for all apps.\n                schemamigration -- Creates a new template schema migration for the...\n                startmigration -- Depereciated command\n                syncdb -- Create the database tables for all apps in INST...\n                test -- Runs the test suite for the specified applicati...\n                testserver -- Runs a development server with data from the gi...", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jellycrystal/django-explain-commands", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-explain-commands", "package_url": "https://pypi.org/project/django-explain-commands/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-explain-commands/", "project_urls": {"Homepage": "https://github.com/jellycrystal/django-explain-commands"}, "release_url": "https://pypi.org/project/django-explain-commands/0.2/", "requires_dist": null, "requires_python": null, "summary": "Django app for explaining where commands are coming from.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-explain-commands<br>        =======================<br>        <br>        Are you tired to find where each command coming from? django-explain-commands<br>        helps you to find which Django application provides each command.<br>        <br>        Installation<br>        ------------<br>        <br>         1. pip install django-explain-commands<br>        <br>         2. Add `explain_commands` to `INSTALLED_APPS`.<br>        <br>        Usage<br>        -----<br>         <br>        Run `python manage.py explain_commands` and enjoy.<br>        <br>        Sample output:<br>        <br>            $ python manage.py explain_commands<br>            django.contrib.auth =&gt;<br>                changepassword -- Change a user's password for django.contrib.auth.<br>                createsuperuser -- Used to create a superuser.<br>            django.core =&gt;<br>                cleanup -- Can be run as a cronjob or directly to clean ou...<br>                compilemessages -- Compiles .po files to .mo files for use with bu...<br>                createcachetable -- Creates the table needed to use the SQL cache b...<br>                dbshell -- Runs the command-line client for specified data...<br>                diffsettings -- Displays differences between the current settin...<br>                dumpdata -- Output the contents of the database as a fixtur...<br>                flush -- Executes ``sqlflush`` on the current database.<br>                inspectdb -- Introspects the database tables in the given da...<br>                loaddata -- Installs the named fixture(s) in the database.<br>                makemessages -- Runs over the entire source tree of the current...<br>                reset -- Executes ``sqlreset`` for the given app(s) in t...<br>                runfcgi -- Runs this project as a FastCGI application. Req...<br>                runserver -- Starts a lightweight Web server for development.<br>                shell -- Runs a Python interactive interpreter. Tries to...<br>                sql -- Prints the CREATE TABLE SQL statements for the ...<br>                sqlall -- Prints the CREATE TABLE, custom SQL and CREATE ...<br>                sqlclear -- Prints the DROP TABLE SQL statements for the gi...<br>                sqlcustom -- Prints the custom table modifying SQL statement...<br>                sqlflush -- Returns a list of the SQL statements required t...<br>                sqlindexes -- Prints the CREATE INDEX SQL statements for the ...<br>                sqlinitialdata -- RENAMED: see 'sqlcustom'<br>                sqlreset -- Prints the DROP TABLE SQL, then the CREATE TABL...<br>                sqlsequencereset -- Prints the SQL statements for resetting sequenc...<br>                startapp -- Creates a Django app directory structure for th...<br>                validate -- Validates all installed models.<br>            explain_commands =&gt;<br>                explain_commands -- Explain where each command is coming from.<br>            south =&gt;<br>                convert_to_south -- Quickly converts the named application to use S...<br>                datamigration -- Creates a new template data migration for the g...<br>                graphmigrations -- Outputs a GraphViz dot file of all migration de...<br>                migrate -- Runs migrations for all apps.<br>                schemamigration -- Creates a new template schema migration for the...<br>                startmigration -- Depereciated command<br>                syncdb -- Create the database tables for all apps in INST...<br>                test -- Runs the test suite for the specified applicati...<br>                testserver -- Runs a development server with data from the gi...\n          </div>"}, "last_serial": 789585, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "4bdc685429e81149907effd01c2d73c5", "sha256": "77b6cf0bbe8138857a07ec380e675e85304e22916ed081d9e2cd37fa000aa9b6"}, "downloads": -1, "filename": "django-explain-commands-0.2.tar.gz", "has_sig": false, "md5_digest": "4bdc685429e81149907effd01c2d73c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3190, "upload_time": "2010-08-14T06:46:12", "upload_time_iso_8601": "2010-08-14T06:46:12.196188Z", "url": "https://files.pythonhosted.org/packages/75/51/acb5d3208a4e5407f94ca2f12d4e249a6c7cbf4eba58faaf5dea25b944a2/django-explain-commands-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bdc685429e81149907effd01c2d73c5", "sha256": "77b6cf0bbe8138857a07ec380e675e85304e22916ed081d9e2cd37fa000aa9b6"}, "downloads": -1, "filename": "django-explain-commands-0.2.tar.gz", "has_sig": false, "md5_digest": "4bdc685429e81149907effd01c2d73c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3190, "upload_time": "2010-08-14T06:46:12", "upload_time_iso_8601": "2010-08-14T06:46:12.196188Z", "url": "https://files.pythonhosted.org/packages/75/51/acb5d3208a4e5407f94ca2f12d4e249a6c7cbf4eba58faaf5dea25b944a2/django-explain-commands-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:16 2020"}