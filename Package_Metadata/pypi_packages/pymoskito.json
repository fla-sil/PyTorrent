{"info": {"author": "Stefan Ecklebe", "author_email": "stefan.ecklebe@tu-dresden.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\nPyMoskito\n=========\n\n.. image:: https://img.shields.io/travis/cklb/pymoskito.svg\n    :target: https://travis-ci.org/cklb/pymoskito\n    :alt: Status of continuous integration\n\n.. image:: https://img.shields.io/pypi/v/pymoskito.svg\n    :target: https://pypi.python.org/pypi/pymoskito\n    :alt: Link to PyPi\n\n.. image:: https://readthedocs.org/projects/pymoskito/badge/?version=stable\n    :target: http://pymoskito.readthedocs.io/en/stable/\n    :alt: Documentation Status\n\n.. image:: https://zenodo.org/badge/49145679.svg\n   :target: https://zenodo.org/badge/latestdoi/49145679\n   :alt: DOI index 49145679\n\nPyMoskito stands for *Python based modular simulation & postprocessing kickass\ntoolbox* and is **Free software** (GPLv3)\n\nPyMoskito is targeted at students and researchers working in control\nengineering. It takes care of all structure related programming a let's you\nfocus on the important things in life: **control design**\nIt features a modular control loop structure that already contains most of the\nneeded blocks a control engineer needs. Basically you implement your systems\ndynamics as well as a fancy control law and you are ready to go.\nOn top PyMoskito also contains a GUI which let's you easily fine-tune the\nparameters of your simulation.\n\n**Go ahead and give it a try!**\n\nDocumentation can be found at https://pymoskito.readthedocs.org.\n\nPyMoskito at work:\n------------------\nThe main application simulating the **Ball and Beam** system:\n\n.. image:: ./docs/pictures/pm_2.png\n\nThe postprocessing application:\n\n.. image:: ./docs/pictures/pm_3.png\n\nAnother example a **Double Pendulum**:\n\n.. image:: ./docs/pictures/pm_4.png\n\nwith custom prostprocessors:\n\n.. image:: ./docs/pictures/pm_5.png\n\nStill here? So PyMoskito features:\n----------------------------------\n* quick setup due to lightweight dependencies\n* modular control loop structure allowing easy configuration\n* easy integration of own system models through open interface\n* automatic simulation of simulation regimes (i.e. for parameter ranges)\n* export of simulation results for dedicated post processing\n* VTK based 3D visualization interface\n* playback functions for 3D visualization\n* ready-to-go graphs for all simulation signals\n\n\n.. include:: AUTHORS.rst\n\n\n\n\n=======\nHistory\n=======\n\n0.3.0 (2018-10-01)\n------------------\n\n* Added a new plot system\n* Added a last simulation list\n* Added more log messages \n* Removed latex as an requirement for the main GUI, only required for the Postprocessor\n\n0.2.3 (2018-05-14)\n------------------\n\n* Added sensible examples for Post- and Meta processors in the Ball and Beam\n  example\n* Fixed Issue regarding the Disturbance Block\n* Removed error-prone pseudo post processing\n* Fixed problems due to changes in trajectory generators\n\n0.2.2 (2018-03-28)\n------------------\n\n* Added extensive beginners guide (thanks to Jonas) and tutorial section\n* Added extended documentation for examples (again, thanks to Jonas)\n\n0.2.1 (2017-09-07)\n------------------\n\n* Fixed issue when installing via pip\n* Fixed issue with metaprocessors and added example metaprocessor for ballbeam\n* Downgraded requirements\n\n0.2.0 (2017-08-18)\n------------------\n\n* Second minor release with lots of new features.\n* Completely overhauled graphical user interface with menus and shortcuts.\n* PyMoskito now comes with three full-fledged examples from the world of\n  control theory, featuring the Ball and Beam- and a Tandem-Pendulum system.\n* The main application now has a logger window which makes it easier to see what\n  is going on in the simulation circuit.\n* Several bugs concerning encoding issues have been fixed\n* Unittest have been added and the development now uses travis-ci\n* Version change from PyQt4 to Pyt5\n* Version change form Python 2.7 to 3.5+\n* Changed version to GPLv3 and added appropriate references for the used images.\n* Improved the export of simulation results\n* Introduced persistent settings that make opening files less painful.\n* Made vtk an optional dependency and added matplotlib based visualizers.\n* Large improvements concerning the sphinx-build documentation\n* Fixed issue concerning possible data types for simulation module properties\n* Introduced new generic modules that directly work on scipy StateSpace objects.\n\n0.1.0 (2015-01-11)\n------------------\n\n* First release on PyPI.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cklb/pymoskito", "keywords": "pymoskito control simulation feedback feedforward", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "pymoskito", "package_url": "https://pypi.org/project/pymoskito/", "platform": "", "project_url": "https://pypi.org/project/pymoskito/", "project_urls": {"Homepage": "https://github.com/cklb/pymoskito"}, "release_url": "https://pypi.org/project/pymoskito/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Python based modular simulation & postprocessing kickass toolbox", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            =========<br>PyMoskito<br>=========<br><br>.. image:: https://img.shields.io/travis/cklb/pymoskito.svg<br>    :target: https://travis-ci.org/cklb/pymoskito<br>    :alt: Status of continuous integration<br><br>.. image:: https://img.shields.io/pypi/v/pymoskito.svg<br>    :target: https://pypi.python.org/pypi/pymoskito<br>    :alt: Link to PyPi<br><br>.. image:: https://readthedocs.org/projects/pymoskito/badge/?version=stable<br>    :target: http://pymoskito.readthedocs.io/en/stable/<br>    :alt: Documentation Status<br><br>.. image:: https://zenodo.org/badge/49145679.svg<br>   :target: https://zenodo.org/badge/latestdoi/49145679<br>   :alt: DOI index 49145679<br><br>PyMoskito stands for *Python based modular simulation &amp; postprocessing kickass<br>toolbox* and is **Free software** (GPLv3)<br><br>PyMoskito is targeted at students and researchers working in control<br>engineering. It takes care of all structure related programming a let's you<br>focus on the important things in life: **control design**<br>It features a modular control loop structure that already contains most of the<br>needed blocks a control engineer needs. Basically you implement your systems<br>dynamics as well as a fancy control law and you are ready to go.<br>On top PyMoskito also contains a GUI which let's you easily fine-tune the<br>parameters of your simulation.<br><br>**Go ahead and give it a try!**<br><br>Documentation can be found at https://pymoskito.readthedocs.org.<br><br>PyMoskito at work:<br>------------------<br>The main application simulating the **Ball and Beam** system:<br><br>.. image:: ./docs/pictures/pm_2.png<br><br>The postprocessing application:<br><br>.. image:: ./docs/pictures/pm_3.png<br><br>Another example a **Double Pendulum**:<br><br>.. image:: ./docs/pictures/pm_4.png<br><br>with custom prostprocessors:<br><br>.. image:: ./docs/pictures/pm_5.png<br><br>Still here? So PyMoskito features:<br>----------------------------------<br>* quick setup due to lightweight dependencies<br>* modular control loop structure allowing easy configuration<br>* easy integration of own system models through open interface<br>* automatic simulation of simulation regimes (i.e. for parameter ranges)<br>* export of simulation results for dedicated post processing<br>* VTK based 3D visualization interface<br>* playback functions for 3D visualization<br>* ready-to-go graphs for all simulation signals<br><br><br>.. include:: AUTHORS.rst<br><br><br><br><br>=======<br>History<br>=======<br><br>0.3.0 (2018-10-01)<br>------------------<br><br>* Added a new plot system<br>* Added a last simulation list<br>* Added more log messages <br>* Removed latex as an requirement for the main GUI, only required for the Postprocessor<br><br>0.2.3 (2018-05-14)<br>------------------<br><br>* Added sensible examples for Post- and Meta processors in the Ball and Beam<br>  example<br>* Fixed Issue regarding the Disturbance Block<br>* Removed error-prone pseudo post processing<br>* Fixed problems due to changes in trajectory generators<br><br>0.2.2 (2018-03-28)<br>------------------<br><br>* Added extensive beginners guide (thanks to Jonas) and tutorial section<br>* Added extended documentation for examples (again, thanks to Jonas)<br><br>0.2.1 (2017-09-07)<br>------------------<br><br>* Fixed issue when installing via pip<br>* Fixed issue with metaprocessors and added example metaprocessor for ballbeam<br>* Downgraded requirements<br><br>0.2.0 (2017-08-18)<br>------------------<br><br>* Second minor release with lots of new features.<br>* Completely overhauled graphical user interface with menus and shortcuts.<br>* PyMoskito now comes with three full-fledged examples from the world of<br>  control theory, featuring the Ball and Beam- and a Tandem-Pendulum system.<br>* The main application now has a logger window which makes it easier to see what<br>  is going on in the simulation circuit.<br>* Several bugs concerning encoding issues have been fixed<br>* Unittest have been added and the development now uses travis-ci<br>* Version change from PyQt4 to Pyt5<br>* Version change form Python 2.7 to 3.5+<br>* Changed version to GPLv3 and added appropriate references for the used images.<br>* Improved the export of simulation results<br>* Introduced persistent settings that make opening files less painful.<br>* Made vtk an optional dependency and added matplotlib based visualizers.<br>* Large improvements concerning the sphinx-build documentation<br>* Fixed issue concerning possible data types for simulation module properties<br>* Introduced new generic modules that directly work on scipy StateSpace objects.<br><br>0.1.0 (2015-01-11)<br>------------------<br><br>* First release on PyPI.\n          </div>"}, "last_serial": 4341000, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "513d77687e842e712ce20e3c56631c76", "sha256": "a25ba572766294855e2521248b8b8eb0d97eb2f3ad226ccca574061824ee3efa"}, "downloads": -1, "filename": "pymoskito-0.2.0.tar.gz", "has_sig": false, "md5_digest": "513d77687e842e712ce20e3c56631c76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167215, "upload_time": "2017-08-21T07:38:28", "upload_time_iso_8601": "2017-08-21T07:38:28.581452Z", "url": "https://files.pythonhosted.org/packages/6c/fe/abc17bd72245c45a1d6ff00c162b88ed031d22cb9be5bd68cf0196381ac6/pymoskito-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "f31ace35627d59e2bd73151a0730dd1f", "sha256": "55537abc6bcd5c68aba92a97ab02e53df2f049d752ba2ff9ff37cbff9d616f42"}, "downloads": -1, "filename": "pymoskito-0.2.1.tar.gz", "has_sig": false, "md5_digest": "f31ace35627d59e2bd73151a0730dd1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167632, "upload_time": "2017-09-07T13:05:24", "upload_time_iso_8601": "2017-09-07T13:05:24.450066Z", "url": "https://files.pythonhosted.org/packages/82/3b/c184942c505ca67daf12130844c65ddb42b79b0d4252b58f585ea45a93d9/pymoskito-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "a6607d041e34668668084bdab0429f22", "sha256": "bd3b2e3fcf4366abb74ff2eb7944eb2ca24cad1e786071f35daea4b97003bd5c"}, "downloads": -1, "filename": "pymoskito-0.2.2.tar.gz", "has_sig": false, "md5_digest": "a6607d041e34668668084bdab0429f22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 185482, "upload_time": "2018-03-29T13:10:35", "upload_time_iso_8601": "2018-03-29T13:10:35.866049Z", "url": "https://files.pythonhosted.org/packages/8d/2d/357b56eab9d269a9754d76d5ffc586d31dc1875296cfb996897174cf4684/pymoskito-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "fd34b6b7c0465a2b4330e8da34d001a6", "sha256": "889bdefe5b13b5d5cd0cf76748cc24068bd130f5ef9a1f6b7a5ae200a077f093"}, "downloads": -1, "filename": "pymoskito-0.2.3.tar.gz", "has_sig": false, "md5_digest": "fd34b6b7c0465a2b4330e8da34d001a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 186380, "upload_time": "2018-05-14T16:41:42", "upload_time_iso_8601": "2018-05-14T16:41:42.127026Z", "url": "https://files.pythonhosted.org/packages/50/46/b15209b0c95f1d10928b7616e31b9bf462adc18ddb55cd50a7771d3fb1cb/pymoskito-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "8f92ec7819c6d46af6af4de15c798975", "sha256": "70549130ed9b4dd14bdc0d7157d5d76a1acc2add8ec7e40fe0b82efcb24f6a75"}, "downloads": -1, "filename": "pymoskito-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8f92ec7819c6d46af6af4de15c798975", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 191475, "upload_time": "2018-10-04T16:30:55", "upload_time_iso_8601": "2018-10-04T16:30:55.468712Z", "url": "https://files.pythonhosted.org/packages/6b/f0/b195e87f1af23a75d5c81249fc3ab30872f572f628c175df9a1d1c335c53/pymoskito-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8f92ec7819c6d46af6af4de15c798975", "sha256": "70549130ed9b4dd14bdc0d7157d5d76a1acc2add8ec7e40fe0b82efcb24f6a75"}, "downloads": -1, "filename": "pymoskito-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8f92ec7819c6d46af6af4de15c798975", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 191475, "upload_time": "2018-10-04T16:30:55", "upload_time_iso_8601": "2018-10-04T16:30:55.468712Z", "url": "https://files.pythonhosted.org/packages/6b/f0/b195e87f1af23a75d5c81249fc3ab30872f572f628c175df9a1d1c335c53/pymoskito-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:42 2020"}