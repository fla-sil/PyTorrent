{"info": {"author": "Peng Xiong", "author_email": "xiongpengnus@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Python Exercise Package\n\n## An example of using <code>exbook</code>\n\nThe package <code>exbook</code> contains a number of coding exercise questions for you to practice. It can check your solution via a series of tests. You may follow the following steps to use <code>exbook</code>.\n1. Install the package via running <b>pip install exbook</b>.\n\n2. Import the package by the following code.\n\n\n```python\nfrom exbook import book as eb  # Import the exercise book from the exbook package\n```\n\n3. After importing the exercise book, we can use <code>eb[i]</code> to access each question in the exercise book. For example, the following code print the description of the first question <code>eb[0]</code>.\n\n\n```python\neb[0]\n```\n\n    Example(s):\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Input1</th>\n      <th>Input2</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>3.5</td>\n      <td>2.7</td>\n      <td>6.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n\n    Define a function with two strings to be the input arguments. The output is the summation of the numerical values of the input strings. For example, if the inputs are \"3.5\" and \"2.7\", then the output is 6.2.\n    \u001b[1mLevel:\u001b[0;0m easy\n\n\n\n4. You need to write a function according to the question description. \n\n\n```python\n\"\"\"Solution to the question\"\"\"\ndef sum_str(a, b):              # The function as the solution\n    return float(a) + float(b)  # Return the summation of numerical values\n```\n\n5. The last step is to run the method <code>check</code> of the question <code>eb[0]</code>, then <code>exbook</code> would use a number of tests to check if your function is the correct solution to the exercise question.\n\n\n```python\n# Check if the function \"sum_str\" is a correct solution \n\neb[0].check(sum_str)            \n```\n\n    You passed 3 of the 3 tests. \n    The solution is correct\n\n\nIf you cannot figure out the correct answer, you may set the argument <code>cheat</code> of the function <code>check</code> to be <code>True</code>, to display the information on why your solution is wrong.\n\n\n```python\n# Check the function \"sum_str\" and display the correct solutions\n\neb[0].check(sum_str, cheat=True)   \n```\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Input1</th>\n      <th>Input2</th>\n      <th>Your output</th>\n      <th>Correct output</th>\n      <th>Correct</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>3.5</td>\n      <td>2.7</td>\n      <td>6.2</td>\n      <td>6.2</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1.2</td>\n      <td>5</td>\n      <td>6.2</td>\n      <td>6.2</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6.0</td>\n      <td>6</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n    You passed 3 of the 3 tests. \n    The solution is correct\n\n\nThere are totally 30 questions with different levels of difficulties in the module. You may now work on the other questions.\n\n\n```python\nlen(eb)\n\neb[1]\n```\n\n    Example(s):\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n    .dataframe thead th {\n        text-align: right;\n    }\n</style>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>Input1</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>151</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>-5</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n\n\n\n\n\n    Write a function to determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward. For example, 121 is a palindrome so the output is True, 10 is not a palindrome so the output is False.\n    \u001b[1mLevel:\u001b[0;0m easy\n\n\n\n\n```python\nlen(eb)\n```\n\n\n\n\n    30\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/XiongPengNUS/exbook", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "exbook", "package_url": "https://pypi.org/project/exbook/", "platform": "", "project_url": "https://pypi.org/project/exbook/", "project_urls": {"Homepage": "https://github.com/XiongPengNUS/exbook"}, "release_url": "https://pypi.org/project/exbook/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Exercises for Python coding", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Python Exercise Package</h1>\n<h2>An example of using <code>exbook</code></h2>\n<p>The package <code>exbook</code> contains a number of coding exercise questions for you to practice. It can check your solution via a series of tests. You may follow the following steps to use <code>exbook</code>.</p>\n<ol>\n<li>\n<p>Install the package via running <b>pip install exbook</b>.</p>\n</li>\n<li>\n<p>Import the package by the following code.</p>\n</li>\n</ol>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">exbook</span> <span class=\"kn\">import</span> <span class=\"n\">book</span> <span class=\"k\">as</span> <span class=\"n\">eb</span>  <span class=\"c1\"># Import the exercise book from the exbook package</span>\n</pre>\n<ol>\n<li>After importing the exercise book, we can use <code>eb[i]</code> to access each question in the exercise book. For example, the following code print the description of the first question <code>eb[0]</code>.</li>\n</ol>\n<pre><span class=\"n\">eb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<pre><code>Example(s):\n</code></pre>\n<div>\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n&lt;/style&gt;\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Input1</th>\n      <th>Input2</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>3.5</td>\n      <td>2.7</td>\n      <td>6.2</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<pre><code>Define a function with two strings to be the input arguments. The output is the summation of the numerical values of the input strings. For example, if the inputs are \"3.5\" and \"2.7\", then the output is 6.2.\n?[1mLevel:?[0;0m easy\n</code></pre>\n<ol>\n<li>You need to write a function according to the question description.</li>\n</ol>\n<pre><span class=\"sd\">\"\"\"Solution to the question\"\"\"</span>\n<span class=\"k\">def</span> <span class=\"nf\">sum_str</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">):</span>              <span class=\"c1\"># The function as the solution</span>\n    <span class=\"k\">return</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"nb\">float</span><span class=\"p\">(</span><span class=\"n\">b</span><span class=\"p\">)</span>  <span class=\"c1\"># Return the summation of numerical values</span>\n</pre>\n<ol>\n<li>The last step is to run the method <code>check</code> of the question <code>eb[0]</code>, then <code>exbook</code> would use a number of tests to check if your function is the correct solution to the exercise question.</li>\n</ol>\n<pre><span class=\"c1\"># Check if the function \"sum_str\" is a correct solution </span>\n\n<span class=\"n\">eb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">sum_str</span><span class=\"p\">)</span>            \n</pre>\n<pre><code>You passed 3 of the 3 tests. \nThe solution is correct\n</code></pre>\n<p>If you cannot figure out the correct answer, you may set the argument <code>cheat</code> of the function <code>check</code> to be <code>True</code>, to display the information on why your solution is wrong.</p>\n<pre><span class=\"c1\"># Check the function \"sum_str\" and display the correct solutions</span>\n\n<span class=\"n\">eb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">sum_str</span><span class=\"p\">,</span> <span class=\"n\">cheat</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>   \n</pre>\n<div>\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n&lt;/style&gt;\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Input1</th>\n      <th>Input2</th>\n      <th>Your output</th>\n      <th>Correct output</th>\n      <th>Correct</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>3.5</td>\n      <td>2.7</td>\n      <td>6.2</td>\n      <td>6.2</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>1.2</td>\n      <td>5</td>\n      <td>6.2</td>\n      <td>6.2</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>2</td>\n      <td>4</td>\n      <td>6.0</td>\n      <td>6</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<pre><code>You passed 3 of the 3 tests. \nThe solution is correct\n</code></pre>\n<p>There are totally 30 questions with different levels of difficulties in the module. You may now work on the other questions.</p>\n<pre><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">eb</span><span class=\"p\">)</span>\n\n<span class=\"n\">eb</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<pre><code>Example(s):\n</code></pre>\n<div>\n&lt;style scoped&gt;\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n<pre><code>.dataframe tbody tr th {\n    vertical-align: top;\n}\n\n.dataframe thead th {\n    text-align: right;\n}\n</code></pre>\n&lt;/style&gt;\n<table>\n  <thead>\n    <tr>\n      <th></th>\n      <th>Input1</th>\n      <th>Output</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>151</td>\n      <td>True</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>-5</td>\n      <td>True</td>\n    </tr>\n  </tbody>\n</table>\n</div>\n<pre><code>Write a function to determine whether an integer is a palindrome. An integer is a palindrome when it reads the same backward as forward. For example, 121 is a palindrome so the output is True, 10 is not a palindrome so the output is False.\n?[1mLevel:?[0;0m easy\n</code></pre>\n<pre><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">eb</span><span class=\"p\">)</span>\n</pre>\n<pre><code>30\n</code></pre>\n\n          </div>"}, "last_serial": 6586210, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "30b0270e92be63da51d57e8d56960d8d", "sha256": "02e4dd250fc5db012310e32f12b768d4ce7ed047c0d275922f78fe90393835a4"}, "downloads": -1, "filename": "exbook-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30b0270e92be63da51d57e8d56960d8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10292, "upload_time": "2020-02-07T03:48:22", "upload_time_iso_8601": "2020-02-07T03:48:22.193863Z", "url": "https://files.pythonhosted.org/packages/eb/5e/4d7b679a1eef8ad077b94f26fbe6565df9aa7609dc2669aadf01a2fe37fe/exbook-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8506c554643d22979c305ab64ff1204", "sha256": "92de8f4a8504643c4d88cacffe3978e0334d5f853d2194e338b8633c101ca6a0"}, "downloads": -1, "filename": "exbook-0.0.0.tar.gz", "has_sig": false, "md5_digest": "c8506c554643d22979c305ab64ff1204", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9908, "upload_time": "2020-02-07T03:48:25", "upload_time_iso_8601": "2020-02-07T03:48:25.296737Z", "url": "https://files.pythonhosted.org/packages/70/6e/beb157a7d4c91e85111e8c36a4c7dcdc15ff7efafe05a09314a5e438870b/exbook-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "30b0270e92be63da51d57e8d56960d8d", "sha256": "02e4dd250fc5db012310e32f12b768d4ce7ed047c0d275922f78fe90393835a4"}, "downloads": -1, "filename": "exbook-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "30b0270e92be63da51d57e8d56960d8d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10292, "upload_time": "2020-02-07T03:48:22", "upload_time_iso_8601": "2020-02-07T03:48:22.193863Z", "url": "https://files.pythonhosted.org/packages/eb/5e/4d7b679a1eef8ad077b94f26fbe6565df9aa7609dc2669aadf01a2fe37fe/exbook-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8506c554643d22979c305ab64ff1204", "sha256": "92de8f4a8504643c4d88cacffe3978e0334d5f853d2194e338b8633c101ca6a0"}, "downloads": -1, "filename": "exbook-0.0.0.tar.gz", "has_sig": false, "md5_digest": "c8506c554643d22979c305ab64ff1204", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9908, "upload_time": "2020-02-07T03:48:25", "upload_time_iso_8601": "2020-02-07T03:48:25.296737Z", "url": "https://files.pythonhosted.org/packages/70/6e/beb157a7d4c91e85111e8c36a4c7dcdc15ff7efafe05a09314a5e438870b/exbook-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}