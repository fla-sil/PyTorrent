{"info": {"author": "Edward Wells", "author_email": "git@edward.sh", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5"], "description": "========\nFBParser\n========\n\n\nCLI tool/library to parse, organize and export your Facebook message archives.\n\nFacebook data can be downloaded via the link at the bottom of\nyour settings page: https://www.facebook.com/settings\n\nThis library makes use of the *messages.htm* file located in the *html/*\ndirectory inside your archive.\n\nWhy?\n----\n\nFacebook exports your messages as one gigantic HTML file. Messages are grouped\ninto individual threads, though chats with a single person are broken up\nthroughout the file, which reads oldest-to-newest. That's annoying. This\nfixes that.\n\nInstallation\n------------\nTo install via *pip*, just run:\n\n.. code-block:: bash\n\n  $ pip install fbparser\n\nTo install locally, from the same directory as *setup.py*, run:\n\n.. code-block:: bash\n\n  $ python setup.py install\n\n\nExample use\n-----------\nTo export your threads to CSV, from the directory containing\n*messages.htm*, run this command:\n\n.. code-block:: bash\n\n    $ fbparser --csv messages.htm\n\nThis will create a directory named *fbparser_out/* in your current directory\ncontaining your CSV exports. Exports can also be made in JSON or plaintext\nformats (with ``--json`` and ```--text``), or printed to the console\nwith ``--stdout``\n\nTo specify your Facebook name (to remove from filenames), use the ``--name``\nflag. If you specify your Facebook UID with ``--uid``, that UID will be\nreplaced with the name you specified. For example:\n\n.. code-block:: bash\n\n  $ fbparser --csv --name=\"John Smith\" --uid=\"12345@facebook.com\" messages.htm\n\nEverywhere ``12345@facebook.com`` is found, it will be replaced with\n*John Smith*, which will also be removed from export filenames for clarity.\n\nReplacing names/UIDs\n^^^^^^^^^^^^^^^^^^^^\nFacebook's archives are littered with UIDs and people that have changed\ntheir display names multiple times. To substitute certain names, feed in a\nfile with ``--replace=file_name.txt``\n\nExample::\n\n  J Smith=John Smith\n  12345@facebook.com=John Smith\n  John H Smith=John Smith\n\nEach line should be formatted like ``Name to replace=New name``\n\nFBParser merges threads containing the same users, so if you see numerous\nthreads for the same person with different display names (or UIDs), this\nwill correct those names prior to merging the threads.\n\nExample:\n\n.. code-block:: bash\n\n  $ fbparser --csv --uid=\"12345@facebook.com\" --name=\"John Smith\" --replace=\"replace.txt\" messages.htm\n\nParsing errors\n^^^^^^^^^^^^^^\nIf you encounter errors trying to parse an archive, use the ``--sanitize`` flag.\nThis creates a backup as *messages.htm.bak* and writes the new version to\nthe original filename before attempting to parse the file.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arcward/fbparser", "keywords": "facebook fb message messages archive parser parsing export", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fbparser", "package_url": "https://pypi.org/project/fbparser/", "platform": "", "project_url": "https://pypi.org/project/fbparser/", "project_urls": {"Homepage": "https://github.com/arcward/fbparser"}, "release_url": "https://pypi.org/project/fbparser/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Library/CLI utility to parse, organize and export messages in Facebook archives", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>CLI tool/library to parse, organize and export your Facebook message archives.</p>\n<p>Facebook data can be downloaded via the link at the bottom of\nyour settings page: <a href=\"https://www.facebook.com/settings\" rel=\"nofollow\">https://www.facebook.com/settings</a></p>\n<p>This library makes use of the <em>messages.htm</em> file located in the <em>html/</em>\ndirectory inside your archive.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Facebook exports your messages as one gigantic HTML file. Messages are grouped\ninto individual threads, though chats with a single person are broken up\nthroughout the file, which reads oldest-to-newest. That\u2019s annoying. This\nfixes that.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install via <em>pip</em>, just run:</p>\n<pre>$ pip install fbparser\n</pre>\n<p>To install locally, from the same directory as <em>setup.py</em>, run:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"example-use\">\n<h2>Example use</h2>\n<p>To export your threads to CSV, from the directory containing\n<em>messages.htm</em>, run this command:</p>\n<pre>$ fbparser --csv messages.htm\n</pre>\n<p>This will create a directory named <em>fbparser_out/</em> in your current directory\ncontaining your CSV exports. Exports can also be made in JSON or plaintext\nformats (with <tt><span class=\"pre\">--json</span></tt> and <tt><span class=\"pre\">`--text</span></tt>), or printed to the console\nwith <tt><span class=\"pre\">--stdout</span></tt></p>\n<p>To specify your Facebook name (to remove from filenames), use the <tt><span class=\"pre\">--name</span></tt>\nflag. If you specify your Facebook UID with <tt><span class=\"pre\">--uid</span></tt>, that UID will be\nreplaced with the name you specified. For example:</p>\n<pre>$ fbparser --csv --name<span class=\"o\">=</span><span class=\"s2\">\"John Smith\"</span> --uid<span class=\"o\">=</span><span class=\"s2\">\"12345@facebook.com\"</span> messages.htm\n</pre>\n<p>Everywhere <tt>12345@facebook.com</tt> is found, it will be replaced with\n<em>John Smith</em>, which will also be removed from export filenames for clarity.</p>\n<div id=\"replacing-names-uids\">\n<h3>Replacing names/UIDs</h3>\n<p>Facebook\u2019s archives are littered with UIDs and people that have changed\ntheir display names multiple times. To substitute certain names, feed in a\nfile with <tt><span class=\"pre\">--replace=file_name.txt</span></tt></p>\n<p>Example:</p>\n<pre>J Smith=John Smith\n12345@facebook.com=John Smith\nJohn H Smith=John Smith\n</pre>\n<p>Each line should be formatted like <tt>Name to replace=New name</tt></p>\n<p>FBParser merges threads containing the same users, so if you see numerous\nthreads for the same person with different display names (or UIDs), this\nwill correct those names prior to merging the threads.</p>\n<p>Example:</p>\n<pre>$ fbparser --csv --uid<span class=\"o\">=</span><span class=\"s2\">\"12345@facebook.com\"</span> --name<span class=\"o\">=</span><span class=\"s2\">\"John Smith\"</span> --replace<span class=\"o\">=</span><span class=\"s2\">\"replace.txt\"</span> messages.htm\n</pre>\n</div>\n<div id=\"parsing-errors\">\n<h3>Parsing errors</h3>\n<p>If you encounter errors trying to parse an archive, use the <tt><span class=\"pre\">--sanitize</span></tt> flag.\nThis creates a backup as <em>messages.htm.bak</em> and writes the new version to\nthe original filename before attempting to parse the file.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2765201, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8830e905ca0c45864f81b29c23b06f1a", "sha256": "4a4972163dd62ded9126f2aaa1f07bf225c9c3eb8442d2e8aa5e8447bfcc4c13"}, "downloads": -1, "filename": "fbparser-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8830e905ca0c45864f81b29c23b06f1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12006, "upload_time": "2017-04-10T06:08:49", "upload_time_iso_8601": "2017-04-10T06:08:49.099632Z", "url": "https://files.pythonhosted.org/packages/a0/dd/5c2d22d6057fad8c2d8adec816c522330af34111f375391c36e461925c11/fbparser-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39a9cddbcc9577731d9dff201983f609", "sha256": "299606b5b8f8af9d9969cb844ad54d57851234a65530086a31daa56fbaa51d81"}, "downloads": -1, "filename": "fbparser-1.0.0.zip", "has_sig": false, "md5_digest": "39a9cddbcc9577731d9dff201983f609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13765, "upload_time": "2017-04-10T06:08:30", "upload_time_iso_8601": "2017-04-10T06:08:30.974667Z", "url": "https://files.pythonhosted.org/packages/a3/9b/69262e61a69756ef4fbcc50261cd124f0ec797481b61844f3c233eb8cd98/fbparser-1.0.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8830e905ca0c45864f81b29c23b06f1a", "sha256": "4a4972163dd62ded9126f2aaa1f07bf225c9c3eb8442d2e8aa5e8447bfcc4c13"}, "downloads": -1, "filename": "fbparser-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8830e905ca0c45864f81b29c23b06f1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12006, "upload_time": "2017-04-10T06:08:49", "upload_time_iso_8601": "2017-04-10T06:08:49.099632Z", "url": "https://files.pythonhosted.org/packages/a0/dd/5c2d22d6057fad8c2d8adec816c522330af34111f375391c36e461925c11/fbparser-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39a9cddbcc9577731d9dff201983f609", "sha256": "299606b5b8f8af9d9969cb844ad54d57851234a65530086a31daa56fbaa51d81"}, "downloads": -1, "filename": "fbparser-1.0.0.zip", "has_sig": false, "md5_digest": "39a9cddbcc9577731d9dff201983f609", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13765, "upload_time": "2017-04-10T06:08:30", "upload_time_iso_8601": "2017-04-10T06:08:30.974667Z", "url": "https://files.pythonhosted.org/packages/a3/9b/69262e61a69756ef4fbcc50261cd124f0ec797481b61844f3c233eb8cd98/fbparser-1.0.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:43:15 2020"}