{"info": {"author": "Benjamin Pillot <benjamin.pillot@ird.fr>, Dominique Lyszczarz <observatoire@causses-et-cevennes.fr>, Claire Teillet, <teillet.claire@hotmail.com>, Pierre Couteron <pierre.couteron@ird.fr>, Nicolas Barbier <nicolas.barbier@ird.fr>, Philippe Verley <philippe.verley@ird.fr>, Marc Lang <marc.lang@irstea.fr>, Thibault Catry <thibault.catry@ird.fr>, Laurent Demagistri <laurent.demagistri@ird.fr>, Nadine Dessay <nadine.dessay@ird.fr>", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Fourier Transform Textural Ordination in Python\n\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n[![PyPI version](https://badge.fury.io/py/fototex.svg)](https://badge.fury.io/py/fototex)\n\nFreely adapted from https://github.com/CaussesCevennes/FOTO.py\n\n## List of authors\n* Benjamin Pillot <benjamin.pillot@ird.fr>\n* Dominique Lyszczarz <observatoire@causses-et-cevennes.fr>\n* Claire Teillet <teillet.claire@hotmail.com>\n* Pierre Couteron <pierre.couteron@ird.fr>\n* Nicolas Barbier <nicolas.barbier@ird.fr>\n* Philippe Verley <philippe.verley@ird.fr>\n* Marc Lang <marc.lang@irstea.fr>\n* Thibault Catry <thibault.catry@ird.fr>\n* Laurent Demagistri <laurent.demagistri@ird.fr>\n* Nadine Dessay <nadine.dessay@ird.fr>\n\n## Tutorial\nSee [here](https://nbviewer.jupyter.org/urls/framagit.org/benjaminpillot/fototex/-/raw/master/tutorial.ipynb)\n\n\n## Description\nFOTO (Fourier Textural Ordination) is an algorithm allowing texture\ncharacterization and comparison, and is fully\ndescribed in _Textural ordination based on Fourier spectral \ndecomposition: a method to analyze and compare landscape patterns_\n(Pierre Couteron, Nicolas Barbier and Denis Gautier, 2006)\n\n\n## Installation\nUse `pip` in a terminal to install fototex:\n```shell script\n$ pip install fototex\n```\n\n### Note on GDAL\nInstalling GDAL through `pip` might be tricky as it only gets\nthe bindings, so be sure the library is already installed on \nyour machine, and that the headers are located in the right\nfolder. Another solution may to install it through a third-party\ndistribution such as `conda`.\n\n\n## Usage\n\n### In memory against HDF5\n\n* Regarding computation performances, in case you have a strong machine\nwith extended memory, or if you have small images to treat, you can\nimplement the algorithm \"in memory\":\n```python\nfrom fototex.foto import Foto\nfoto = Foto(\"path/to/your/image\", method='block', band=1, in_memory=True)\nfoto.run(window_size=11)\n```\n\n* Otherwise, in case of large images or a limited machine, it is possible\nto implement the algorithm with HDF5 data storage. In that case, Foto \nruns an incremental PCA, that you may customize, assisted with HDF5 \nstorage:\n```python\nfrom fototex.foto import Foto\nfoto = Foto(\"path/to/your/image\", method=\"moving_window\", in_memory=False, data_chunk_size=40000)\nfoto.run(window_size=11)\n```\n\nThe argument ``data_chunk_size`` gives information on the reading/writing \nrate to h5 files.\n\n### DC component\nWhen computing the R-spectra, you may keep the DC \ncomponent of the FFT, such as:\n```python\nfrom fototex.foto import Foto\nfoto = Foto(\"path/to/your/image\", method=\"moving_window\", in_memory=False, data_chunk_size=40000)\nfoto.run(window_size=11, nb_sample=5, keep_dc_component=True)\n```\nIn that case, it is important to keep in mind that R will\nrange from 0 to nb_sample - 1 (in the example, \nR=0, 1, 2, 3, 4). Otherwise, it will range from 1 to \nnb_sample (here, R=1, 2, 3, 4, 5).\n\n### Standardize\nIf you want to standardize the values of the power spectrum \nover the image (dividing by the variance of each given window),\nyou may add the option (False by default):\n```python\nfrom fototex.foto import Foto\nfoto = Foto(\"path/to/your/image\", method=\"moving_window\", in_memory=False, data_chunk_size=40000)\nfoto.run(window_size=11, standardize=True)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://framagit.org/benjaminpillot/fototex", "keywords": "", "license": "The MIT Licence", "maintainer": "", "maintainer_email": "", "name": "fototex", "package_url": "https://pypi.org/project/fototex/", "platform": "", "project_url": "https://pypi.org/project/fototex/", "project_urls": {"Homepage": "https://framagit.org/benjaminpillot/fototex"}, "release_url": "https://pypi.org/project/fototex/1.21/", "requires_dist": null, "requires_python": ">=3", "summary": "Fourier Transform Textural Ordination", "version": "1.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Fourier Transform Textural Ordination in Python</h1>\n<p><a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a>\n<a href=\"https://badge.fury.io/py/fototex\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4469628c43ddb22c4e65a02853fad43980fe21e2/68747470733a2f2f62616467652e667572792e696f2f70792f666f746f7465782e737667\"></a></p>\n<p>Freely adapted from <a href=\"https://github.com/CaussesCevennes/FOTO.py\" rel=\"nofollow\">https://github.com/CaussesCevennes/FOTO.py</a></p>\n<h2>List of authors</h2>\n<ul>\n<li>Benjamin Pillot <a href=\"mailto:benjamin.pillot@ird.fr\">benjamin.pillot@ird.fr</a></li>\n<li>Dominique Lyszczarz <a href=\"mailto:observatoire@causses-et-cevennes.fr\">observatoire@causses-et-cevennes.fr</a></li>\n<li>Claire Teillet <a href=\"mailto:teillet.claire@hotmail.com\">teillet.claire@hotmail.com</a></li>\n<li>Pierre Couteron <a href=\"mailto:pierre.couteron@ird.fr\">pierre.couteron@ird.fr</a></li>\n<li>Nicolas Barbier <a href=\"mailto:nicolas.barbier@ird.fr\">nicolas.barbier@ird.fr</a></li>\n<li>Philippe Verley <a href=\"mailto:philippe.verley@ird.fr\">philippe.verley@ird.fr</a></li>\n<li>Marc Lang <a href=\"mailto:marc.lang@irstea.fr\">marc.lang@irstea.fr</a></li>\n<li>Thibault Catry <a href=\"mailto:thibault.catry@ird.fr\">thibault.catry@ird.fr</a></li>\n<li>Laurent Demagistri <a href=\"mailto:laurent.demagistri@ird.fr\">laurent.demagistri@ird.fr</a></li>\n<li>Nadine Dessay <a href=\"mailto:nadine.dessay@ird.fr\">nadine.dessay@ird.fr</a></li>\n</ul>\n<h2>Tutorial</h2>\n<p>See <a href=\"https://nbviewer.jupyter.org/urls/framagit.org/benjaminpillot/fototex/-/raw/master/tutorial.ipynb\" rel=\"nofollow\">here</a></p>\n<h2>Description</h2>\n<p>FOTO (Fourier Textural Ordination) is an algorithm allowing texture\ncharacterization and comparison, and is fully\ndescribed in <em>Textural ordination based on Fourier spectral\ndecomposition: a method to analyze and compare landscape patterns</em>\n(Pierre Couteron, Nicolas Barbier and Denis Gautier, 2006)</p>\n<h2>Installation</h2>\n<p>Use <code>pip</code> in a terminal to install fototex:</p>\n<pre>$ pip install fototex\n</pre>\n<h3>Note on GDAL</h3>\n<p>Installing GDAL through <code>pip</code> might be tricky as it only gets\nthe bindings, so be sure the library is already installed on\nyour machine, and that the headers are located in the right\nfolder. Another solution may to install it through a third-party\ndistribution such as <code>conda</code>.</p>\n<h2>Usage</h2>\n<h3>In memory against HDF5</h3>\n<ul>\n<li>Regarding computation performances, in case you have a strong machine\nwith extended memory, or if you have small images to treat, you can\nimplement the algorithm \"in memory\":</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fototex.foto</span> <span class=\"kn\">import</span> <span class=\"n\">Foto</span>\n<span class=\"n\">foto</span> <span class=\"o\">=</span> <span class=\"n\">Foto</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/your/image\"</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'block'</span><span class=\"p\">,</span> <span class=\"n\">band</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">in_memory</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">foto</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>Otherwise, in case of large images or a limited machine, it is possible\nto implement the algorithm with HDF5 data storage. In that case, Foto\nruns an incremental PCA, that you may customize, assisted with HDF5\nstorage:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fototex.foto</span> <span class=\"kn\">import</span> <span class=\"n\">Foto</span>\n<span class=\"n\">foto</span> <span class=\"o\">=</span> <span class=\"n\">Foto</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/your/image\"</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"moving_window\"</span><span class=\"p\">,</span> <span class=\"n\">in_memory</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">data_chunk_size</span><span class=\"o\">=</span><span class=\"mi\">40000</span><span class=\"p\">)</span>\n<span class=\"n\">foto</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">)</span>\n</pre>\n<p>The argument <code>data_chunk_size</code> gives information on the reading/writing\nrate to h5 files.</p>\n<h3>DC component</h3>\n<p>When computing the R-spectra, you may keep the DC\ncomponent of the FFT, such as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fototex.foto</span> <span class=\"kn\">import</span> <span class=\"n\">Foto</span>\n<span class=\"n\">foto</span> <span class=\"o\">=</span> <span class=\"n\">Foto</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/your/image\"</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"moving_window\"</span><span class=\"p\">,</span> <span class=\"n\">in_memory</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">data_chunk_size</span><span class=\"o\">=</span><span class=\"mi\">40000</span><span class=\"p\">)</span>\n<span class=\"n\">foto</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">nb_sample</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">keep_dc_component</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>In that case, it is important to keep in mind that R will\nrange from 0 to nb_sample - 1 (in the example,\nR=0, 1, 2, 3, 4). Otherwise, it will range from 1 to\nnb_sample (here, R=1, 2, 3, 4, 5).</p>\n<h3>Standardize</h3>\n<p>If you want to standardize the values of the power spectrum\nover the image (dividing by the variance of each given window),\nyou may add the option (False by default):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fototex.foto</span> <span class=\"kn\">import</span> <span class=\"n\">Foto</span>\n<span class=\"n\">foto</span> <span class=\"o\">=</span> <span class=\"n\">Foto</span><span class=\"p\">(</span><span class=\"s2\">\"path/to/your/image\"</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"moving_window\"</span><span class=\"p\">,</span> <span class=\"n\">in_memory</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">data_chunk_size</span><span class=\"o\">=</span><span class=\"mi\">40000</span><span class=\"p\">)</span>\n<span class=\"n\">foto</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">window_size</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">standardize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7171765, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "569321db20b2d95c7b0746cdc0d1ba46", "sha256": "14f16bb1b02e58c2df95b98a7953d19919ca6734b236ad5d9040215b66a3d43a"}, "downloads": -1, "filename": "fototex-1.0.tar.gz", "has_sig": false, "md5_digest": "569321db20b2d95c7b0746cdc0d1ba46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 15520, "upload_time": "2020-04-24T15:40:18", "upload_time_iso_8601": "2020-04-24T15:40:18.804294Z", "url": "https://files.pythonhosted.org/packages/4c/e1/282217c1cd9a9312cb5ab80a82e93d54f22a36b46e1b9f6537265c8378e1/fototex-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "077b6f1bf8ea7c86ea5249be63f814c9", "sha256": "aa60569926a52956cb312e4351171d425131905c65fa131179b7b12e2bd5ef28"}, "downloads": -1, "filename": "fototex-1.1.tar.gz", "has_sig": false, "md5_digest": "077b6f1bf8ea7c86ea5249be63f814c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16495, "upload_time": "2020-05-02T20:07:06", "upload_time_iso_8601": "2020-05-02T20:07:06.589794Z", "url": "https://files.pythonhosted.org/packages/2b/3b/ec8de2c663241b6cdb8c28065e08f79ba4ec0639f3f92af0de7a5c382fd4/fototex-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "2f3465d6a59924977fedcfbb415382cb", "sha256": "96a8b83027b2a27e1cf8134ada6228af4db04278c84cb0b0667b77adabdd4cd6"}, "downloads": -1, "filename": "fototex-1.2.tar.gz", "has_sig": false, "md5_digest": "2f3465d6a59924977fedcfbb415382cb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 16937, "upload_time": "2020-05-04T10:39:28", "upload_time_iso_8601": "2020-05-04T10:39:28.232213Z", "url": "https://files.pythonhosted.org/packages/3b/39/0827741cf9cfb8e63139ac2c6f93a237f1e4a04064d18d984d4ef03c5724/fototex-1.2.tar.gz", "yanked": false}], "1.21": [{"comment_text": "", "digests": {"md5": "f5846131f2f8f025b65f0700bf2e821a", "sha256": "964837e52fe292d9e22c28b02f9a3d591156439710627201d66fb723e9de50c6"}, "downloads": -1, "filename": "fototex-1.21.tar.gz", "has_sig": false, "md5_digest": "f5846131f2f8f025b65f0700bf2e821a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17554, "upload_time": "2020-05-05T12:52:52", "upload_time_iso_8601": "2020-05-05T12:52:52.956528Z", "url": "https://files.pythonhosted.org/packages/12/37/66e35ed9116bd5bbf0b9c0f194ef4058acf8d555ffb523441717c8ba4bed/fototex-1.21.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f5846131f2f8f025b65f0700bf2e821a", "sha256": "964837e52fe292d9e22c28b02f9a3d591156439710627201d66fb723e9de50c6"}, "downloads": -1, "filename": "fototex-1.21.tar.gz", "has_sig": false, "md5_digest": "f5846131f2f8f025b65f0700bf2e821a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 17554, "upload_time": "2020-05-05T12:52:52", "upload_time_iso_8601": "2020-05-05T12:52:52.956528Z", "url": "https://files.pythonhosted.org/packages/12/37/66e35ed9116bd5bbf0b9c0f194ef4058acf8d555ffb523441717c8ba4bed/fototex-1.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:41 2020"}