{"info": {"author": "aswinzz", "author_email": "aswinvb.aswin6@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\nEvents\n=====\n\ndjango-events is a package for the process of scheduling events using Django Rest Framework. Events can be scheduled in a daily,monthly and in few other ways which can be easily integrated with full calendar.\nUse this package with postgres database.\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"events\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'events',\n    ]\n\n2. Include the polls URLconf in your project urls.py like this::\n\n    path('events/', include('events.urls')),\n\n3. Run `python manage.py migrate` to create the events models.\n\n4. Start the development server , http://127.0.0.1:8000/events/event`\n   is the endpoint for creating and viewing the events.\n\n5. GET request needs to be of the form `http://127.0.0.1:8000/events/event?start=\"start date goes here\"&end=\"end date goes here\"`.\n\n6 POST request (URL:`http://127.0.0.1:8000/events/event`) should contain :\n    * title : Some name for the event\n    * start_date : Starting date of the event\n    * start_time : Starting time of the event\n    * end_time : ending time of the event\n    * end_recurring_date : if the event is reccurring then this date will be used as a limiting end_recurring_date\n    * repeats : 0 -  if the event occurs only once , 1 if the event is reccurring\n    * repeat_frequenct : 0 - if the event occurs only once, 1 if for daily ,2 for weekly ,3 for monthly\n    * dow : days of week in which the event occurs ( only for weekly and monthly )\n    * week_type : only for monthly ( 0:first week of the month ,1:second week of the month ...)\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://aswinzz.github.io/", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-events-rest-framework", "package_url": "https://pypi.org/project/django-events-rest-framework/", "platform": "", "project_url": "https://pypi.org/project/django-events-rest-framework/", "project_urls": {"Homepage": "https://aswinzz.github.io/"}, "release_url": "https://pypi.org/project/django-events-rest-framework/0.1/", "requires_dist": null, "requires_python": "", "summary": "A package to easily schedule events with full calendar in Django Rest Framework.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>Events<br>=====<br><br>django-events is a package for the process of scheduling events using Django Rest Framework. Events can be scheduled in a daily,monthly and in few other ways which can be easily integrated with full calendar.<br>Use this package with postgres database.<br>Detailed documentation is in the \"docs\" directory.<br><br>Quick start<br>-----------<br><br>1. Add \"events\" to your INSTALLED_APPS setting like this::<br><br>    INSTALLED_APPS = [<br>        ...<br>        'events',<br>    ]<br><br>2. Include the polls URLconf in your project urls.py like this::<br><br>    path('events/', include('events.urls')),<br><br>3. Run `python manage.py migrate` to create the events models.<br><br>4. Start the development server , http://127.0.0.1:8000/events/event`<br>   is the endpoint for creating and viewing the events.<br><br>5. GET request needs to be of the form `http://127.0.0.1:8000/events/event?start=\"start date goes here\"&amp;end=\"end date goes here\"`.<br><br>6 POST request (URL:`http://127.0.0.1:8000/events/event`) should contain :<br>    * title : Some name for the event<br>    * start_date : Starting date of the event<br>    * start_time : Starting time of the event<br>    * end_time : ending time of the event<br>    * end_recurring_date : if the event is reccurring then this date will be used as a limiting end_recurring_date<br>    * repeats : 0 -  if the event occurs only once , 1 if the event is reccurring<br>    * repeat_frequenct : 0 - if the event occurs only once, 1 if for daily ,2 for weekly ,3 for monthly<br>    * dow : days of week in which the event occurs ( only for weekly and monthly )<br>    * week_type : only for monthly ( 0:first week of the month ,1:second week of the month ...)<br><br>\n          </div>"}, "last_serial": 4414393, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1f534ae7450bcf58e4f98bedaac1e163", "sha256": "8e2ef3038f635cef7e82166dfc1ed3c2f2a057a9889ea90de7f692db235adfb6"}, "downloads": -1, "filename": "django_events_rest_framework-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1f534ae7450bcf58e4f98bedaac1e163", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8497, "upload_time": "2018-10-25T09:15:20", "upload_time_iso_8601": "2018-10-25T09:15:20.940617Z", "url": "https://files.pythonhosted.org/packages/fe/c9/6a4e3c4ef7eb72a635b83b31fca0480deca4af2359642dcd78bbc338b48c/django_events_rest_framework-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3d01c99a8c4418ef7e8ba6c9ca2ea26", "sha256": "d472f613c90c4f21752b25e435976fd09b4ca2a0a47ebb07ec12a6086f7aa0f4"}, "downloads": -1, "filename": "django-events-rest-framework-0.1.tar.gz", "has_sig": false, "md5_digest": "a3d01c99a8c4418ef7e8ba6c9ca2ea26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5543, "upload_time": "2018-10-25T09:15:22", "upload_time_iso_8601": "2018-10-25T09:15:22.579128Z", "url": "https://files.pythonhosted.org/packages/ee/6a/b52397e28964a5df68b1ca5f3a979a73a12c04ac77771e5d8bc2fff8df31/django-events-rest-framework-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1f534ae7450bcf58e4f98bedaac1e163", "sha256": "8e2ef3038f635cef7e82166dfc1ed3c2f2a057a9889ea90de7f692db235adfb6"}, "downloads": -1, "filename": "django_events_rest_framework-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1f534ae7450bcf58e4f98bedaac1e163", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8497, "upload_time": "2018-10-25T09:15:20", "upload_time_iso_8601": "2018-10-25T09:15:20.940617Z", "url": "https://files.pythonhosted.org/packages/fe/c9/6a4e3c4ef7eb72a635b83b31fca0480deca4af2359642dcd78bbc338b48c/django_events_rest_framework-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3d01c99a8c4418ef7e8ba6c9ca2ea26", "sha256": "d472f613c90c4f21752b25e435976fd09b4ca2a0a47ebb07ec12a6086f7aa0f4"}, "downloads": -1, "filename": "django-events-rest-framework-0.1.tar.gz", "has_sig": false, "md5_digest": "a3d01c99a8c4418ef7e8ba6c9ca2ea26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5543, "upload_time": "2018-10-25T09:15:22", "upload_time_iso_8601": "2018-10-25T09:15:22.579128Z", "url": "https://files.pythonhosted.org/packages/ee/6a/b52397e28964a5df68b1ca5f3a979a73a12c04ac77771e5d8bc2fff8df31/django-events-rest-framework-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:18 2020"}