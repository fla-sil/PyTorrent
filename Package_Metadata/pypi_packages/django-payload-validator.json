{"info": {"author": "Gladson V Manuel", "author_email": "gladsonvm@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Application Frameworks"], "description": "# Django payload validator\nThis package can validate data provided as payload in request body. This is similar to django forms, but only difference being this works on json data provided throuogh body of a request rather than HTML forms.\n\n### installation\n\n- #### from pypi\n   - ```pip install django-payload-validator```\n- #### from this github repo\n   - ```pip install -e git+https://github.com/gladsonvm/django_payload_validator.git#egg=django_payload_validator```\n\n### Usage\n\n```\nclass TeamCreateView(BaseValidatorView):\n    model = <model>\n    validation_rule = <validation_rule>\n```\n\n### Example\n\n```\nclass TeamCreateView(BaseValidatorView):\n    model = Team\n    validation_rule = create_team\n```\n\n### Concepts:\n\n- ##### validation_rule\n   - A validation rule defines all fields those are meant to be validated.\n   - Validation rule is a dictionary which defines \n      * fields\n        * all fields those are meant to be validated as a dict. Each fields must define its `type`. If a field is mandatory, then set `required` param to true in field declaration. \n      * auto populated fields\n        * Fields those are not obtained from request data and must be updated in database.\n      * excluded fields\n        * Fields that should not be displayed in response. \n      \n   example:\n   ```\n   create_team = {\n    'fields': {\n        'name': {'type': str, 'required': True},\n        'description': {'type': str, 'required': True},\n        'team_type': {'type': str, 'required': True, 'allowed_values': ['tech', 'management', 'business', 'marketing']},\n        'members': {'type': list}\n        },\n    'auto_populate_fields': {'created_by': 'request.user', 'last_updated_by': 'request.user'},\n    'excluded_fields': ['members']\n    }\n   ```", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gladsonvm/django_payload_validator", "keywords": "django payload validator intended audience is dev", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-payload-validator", "package_url": "https://pypi.org/project/django-payload-validator/", "platform": "", "project_url": "https://pypi.org/project/django-payload-validator/", "project_urls": {"Homepage": "https://github.com/gladsonvm/django_payload_validator"}, "release_url": "https://pypi.org/project/django-payload-validator/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "validator for django payload", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Django payload validator<br>This package can validate data provided as payload in request body. This is similar to django forms, but only difference being this works on json data provided throuogh body of a request rather than HTML forms.<br><br>### installation<br><br>- #### from pypi<br>   - ```pip install django-payload-validator```<br>- #### from this github repo<br>   - ```pip install -e git+https://github.com/gladsonvm/django_payload_validator.git#egg=django_payload_validator```<br><br>### Usage<br><br>```<br>class TeamCreateView(BaseValidatorView):<br>    model = &lt;model&gt;<br>    validation_rule = &lt;validation_rule&gt;<br>```<br><br>### Example<br><br>```<br>class TeamCreateView(BaseValidatorView):<br>    model = Team<br>    validation_rule = create_team<br>```<br><br>### Concepts:<br><br>- ##### validation_rule<br>   - A validation rule defines all fields those are meant to be validated.<br>   - Validation rule is a dictionary which defines <br>      * fields<br>        * all fields those are meant to be validated as a dict. Each fields must define its `type`. If a field is mandatory, then set `required` param to true in field declaration. <br>      * auto populated fields<br>        * Fields those are not obtained from request data and must be updated in database.<br>      * excluded fields<br>        * Fields that should not be displayed in response. <br>      <br>   example:<br>   ```<br>   create_team = {<br>    'fields': {<br>        'name': {'type': str, 'required': True},<br>        'description': {'type': str, 'required': True},<br>        'team_type': {'type': str, 'required': True, 'allowed_values': ['tech', 'management', 'business', 'marketing']},<br>        'members': {'type': list}<br>        },<br>    'auto_populate_fields': {'created_by': 'request.user', 'last_updated_by': 'request.user'},<br>    'excluded_fields': ['members']<br>    }<br>   ```\n          </div>"}, "last_serial": 3602104, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d0d9663b2324b809f3bac4bb9b392b43", "sha256": "b2338fdd47268de17772effedcdd8d13024e93c6fcc8c8409276a5da8d73e80b"}, "downloads": -1, "filename": "django_payload_validator-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "d0d9663b2324b809f3bac4bb9b392b43", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 13615, "upload_time": "2018-02-21T12:19:17", "upload_time_iso_8601": "2018-02-21T12:19:17.744308Z", "url": "https://files.pythonhosted.org/packages/cc/c3/6ec0cbb20f1c507dea8b8ab4d736aa68f91953a43df65ad5e6f896acd09f/django_payload_validator-1.0.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7faa23183f96481974bc70e1b965abca", "sha256": "0c4193d96b893af709b32fa91601c2da53ef7868297587da2124d76645fcb3ac"}, "downloads": -1, "filename": "django_payload_validator-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7faa23183f96481974bc70e1b965abca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4907, "upload_time": "2018-02-21T13:06:40", "upload_time_iso_8601": "2018-02-21T13:06:40.635313Z", "url": "https://files.pythonhosted.org/packages/97/7d/6005847932500febcc62b9ea3f8b620f12f83e3474262d68820e029e59b8/django_payload_validator-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "63ac5d02f4b02987e80655355ef47e0e", "sha256": "e86b824a087c685911e448275b38b39ab3e3dcf264fb768ad05fbafc200a39ec"}, "downloads": -1, "filename": "django_payload_validator-1.0.1-py3.6.egg", "has_sig": false, "md5_digest": "63ac5d02f4b02987e80655355ef47e0e", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 13615, "upload_time": "2018-02-21T13:18:40", "upload_time_iso_8601": "2018-02-21T13:18:40.613847Z", "url": "https://files.pythonhosted.org/packages/6e/18/38af851a3632b983726009076eea9749298423eac55e7e72fdcea8d65e9e/django_payload_validator-1.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "03465cfb810896ad2d1e7f7bead16349", "sha256": "4dcd487019c9ee06e43264ee1e0fed805f1d50632e998a2dad9ef00d7273e83c"}, "downloads": -1, "filename": "django_payload_validator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "03465cfb810896ad2d1e7f7bead16349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4903, "upload_time": "2018-02-21T13:18:52", "upload_time_iso_8601": "2018-02-21T13:18:52.430463Z", "url": "https://files.pythonhosted.org/packages/73/c7/17b0d15d01be81e163b249054b27fffb29c404ffcec9b135481824641fbe/django_payload_validator-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63ac5d02f4b02987e80655355ef47e0e", "sha256": "e86b824a087c685911e448275b38b39ab3e3dcf264fb768ad05fbafc200a39ec"}, "downloads": -1, "filename": "django_payload_validator-1.0.1-py3.6.egg", "has_sig": false, "md5_digest": "63ac5d02f4b02987e80655355ef47e0e", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 13615, "upload_time": "2018-02-21T13:18:40", "upload_time_iso_8601": "2018-02-21T13:18:40.613847Z", "url": "https://files.pythonhosted.org/packages/6e/18/38af851a3632b983726009076eea9749298423eac55e7e72fdcea8d65e9e/django_payload_validator-1.0.1-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "03465cfb810896ad2d1e7f7bead16349", "sha256": "4dcd487019c9ee06e43264ee1e0fed805f1d50632e998a2dad9ef00d7273e83c"}, "downloads": -1, "filename": "django_payload_validator-1.0.1.tar.gz", "has_sig": false, "md5_digest": "03465cfb810896ad2d1e7f7bead16349", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4903, "upload_time": "2018-02-21T13:18:52", "upload_time_iso_8601": "2018-02-21T13:18:52.430463Z", "url": "https://files.pythonhosted.org/packages/73/c7/17b0d15d01be81e163b249054b27fffb29c404ffcec9b135481824641fbe/django_payload_validator-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:12 2020"}