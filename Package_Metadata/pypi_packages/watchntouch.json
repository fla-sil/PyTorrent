{"info": {"author": "Ruy Asan", "author_email": "ruyasan@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "This is essentially a horrible hacky solution to the fact that CIFS mounts cannot forward file-system event to inotify on linux. This in turn makes it so any number of \"on-demand\" compilers (e.g. compass, coffee-script) stop working when applied to mounted shares (among other things).\n\nThe idea is to use the watchdog library to monitor a given directory using shitty-old polling, and then poke at the local filesystem so that inotify (and hopefully your apps/tools) pick up the changes. It is almost certainly a very bad idea to run this on a large file structure and/or over a slow network.\n\nAlso note that only modification events can sanely be simulated this way. If you absolutely need some form of rm or mv event simlation, you may enable a less-then-sane behavior for such things using `--simulate-rm` and `--simulate-mv` respectively.\n\nWith that in mind, simply run `watchntouch` in the directory you'd like to watch, or see `watchntouch -h` for more options.\n\nInstallation on most platforms should be available via `pip install watchntouch`.\n\nGood luck!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rubyruy/watchntouch", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "watchntouch", "package_url": "https://pypi.org/project/watchntouch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/watchntouch/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/rubyruy/watchntouch"}, "release_url": "https://pypi.org/project/watchntouch/1.0/", "requires_dist": null, "requires_python": null, "summary": "Poll a directory for changes and re-touch changed paths so that inotify- incapable mounts (like CIFS) receive inotify events anyway.", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is essentially a horrible hacky solution to the fact that CIFS mounts cannot forward file-system event to inotify on linux. This in turn makes it so any number of \u201con-demand\u201d compilers (e.g. compass, coffee-script) stop working when applied to mounted shares (among other things).</p>\n<p>The idea is to use the watchdog library to monitor a given directory using shitty-old polling, and then poke at the local filesystem so that inotify (and hopefully your apps/tools) pick up the changes. It is almost certainly a very bad idea to run this on a large file structure and/or over a slow network.</p>\n<p>Also note that only modification events can sanely be simulated this way. If you absolutely need some form of rm or mv event simlation, you may enable a less-then-sane behavior for such things using <cite>\u2013simulate-rm</cite> and <cite>\u2013simulate-mv</cite> respectively.</p>\n<p>With that in mind, simply run <cite>watchntouch</cite> in the directory you\u2019d like to watch, or see <cite>watchntouch -h</cite> for more options.</p>\n<p>Installation on most platforms should be available via <cite>pip install watchntouch</cite>.</p>\n<p>Good luck!</p>\n\n          </div>"}, "last_serial": 989115, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "c2fc831b4c88c687e1b92cb9545268a2", "sha256": "d7d00fc99b12f6e20e90539c37585c00df1a007af28d628253860740acda79c0"}, "downloads": -1, "filename": "watchntouch-1.0.tar.gz", "has_sig": false, "md5_digest": "c2fc831b4c88c687e1b92cb9545268a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3101, "upload_time": "2014-02-03T07:17:24", "upload_time_iso_8601": "2014-02-03T07:17:24.113712Z", "url": "https://files.pythonhosted.org/packages/4d/4a/4c519a8c94f142a9c4d0f73d32f80e3364d1c75baf6055d1102375e2bfb1/watchntouch-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c2fc831b4c88c687e1b92cb9545268a2", "sha256": "d7d00fc99b12f6e20e90539c37585c00df1a007af28d628253860740acda79c0"}, "downloads": -1, "filename": "watchntouch-1.0.tar.gz", "has_sig": false, "md5_digest": "c2fc831b4c88c687e1b92cb9545268a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3101, "upload_time": "2014-02-03T07:17:24", "upload_time_iso_8601": "2014-02-03T07:17:24.113712Z", "url": "https://files.pythonhosted.org/packages/4d/4a/4c519a8c94f142a9c4d0f73d32f80e3364d1c75baf6055d1102375e2bfb1/watchntouch-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:09 2020"}