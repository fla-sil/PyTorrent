{"info": {"author": "Caroline Simpson", "author_email": "csimpson@cigionline.org", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-ga-puller\n================\n\nDjango app used to pull daily Google Analytics data into your django database. It provides abstract models which you should\ninherit from in your app.\n\nTo Use\n------\n\nAdd the app to your settings.py file:\n\n    INSTALLED_APPS = [...\n                      'ga_puller',\n                      ...]\n                      \nIn your app,\n\nCreate models that inherit from the abstract classes provided.  Here is a sample of a basic implementation:\n\n    from ga_puller.models import AnalyticsPage, DailyEventTrackingBase, DailyPageTrackingBase\n\n    class Page(AnalyticsPage):\n\n        def __unicode__(self):\n            return \"%s\" % self.page_path\n\n\n    class DailyEventData(DailyEventTrackingBase):\n    \n        page = models.ForeignKey('Page')\n        \n        @classmethod\n        def get_page_class(cls):\n            return Page\n\n\n    class DailyPageTrackingData(DailyPageTrackingBase):\n    \n        page = models.ForeignKey('Page')\n        \n        @classmethod\n        def get_page_class(cls):\n            return Page\n\n\nAdd a list named analytics_import_models defining the data models to the __init__.py of your app module:\n\n    from models import DailyPageTrackingData, DailyEventData\n    analytics_import_models = [DailyPageTrackingData, DailyEventData]\n    \n\nCreate a 'private' python package at the root level of your django project (at the same level as the manage.py file).\n\nThe application requires a service account for authentication with Google.  These can be configured by logging into your account at https://cloud.google.com.\n\nCopy your Google API private key file to the private directory (name it privatekey.pem). \n\nCreate a python file named 'accounts.py' in the private directory with the following code (update with your account data):\n \n    service_account = 'xxxxxx@developer.gserviceaccount.com'\n    view_ids = {'app_name': '#########', ...}\n\n\nThis package uses [Google APIs Client Library for Python](https://developers.google.com/api-client-library/python/) which should automatically be installed through setup.\n\n\nRelease Notes:\n\n0.1.0: Initial Release\n0.1.1: Updated to support importing from separate views in google analytics.\n0.1.2: Increased the size of the label and page_path fields.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CIGIHub/django-ga-puller/", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-ga-puller", "package_url": "https://pypi.org/project/django-ga-puller/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-ga-puller/", "project_urls": {"Homepage": "https://github.com/CIGIHub/django-ga-puller/"}, "release_url": "https://pypi.org/project/django-ga-puller/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Django app used to pull daily Google Analytics data into your django database.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            django-ga-puller<br>================<br><br>Django app used to pull daily Google Analytics data into your django database. It provides abstract models which you should<br>inherit from in your app.<br><br>To Use<br>------<br><br>Add the app to your settings.py file:<br><br>    INSTALLED_APPS = [...<br>                      'ga_puller',<br>                      ...]<br>                      <br>In your app,<br><br>Create models that inherit from the abstract classes provided.  Here is a sample of a basic implementation:<br><br>    from ga_puller.models import AnalyticsPage, DailyEventTrackingBase, DailyPageTrackingBase<br><br>    class Page(AnalyticsPage):<br><br>        def __unicode__(self):<br>            return \"%s\" % self.page_path<br><br><br>    class DailyEventData(DailyEventTrackingBase):<br>    <br>        page = models.ForeignKey('Page')<br>        <br>        @classmethod<br>        def get_page_class(cls):<br>            return Page<br><br><br>    class DailyPageTrackingData(DailyPageTrackingBase):<br>    <br>        page = models.ForeignKey('Page')<br>        <br>        @classmethod<br>        def get_page_class(cls):<br>            return Page<br><br><br>Add a list named analytics_import_models defining the data models to the __init__.py of your app module:<br><br>    from models import DailyPageTrackingData, DailyEventData<br>    analytics_import_models = [DailyPageTrackingData, DailyEventData]<br>    <br><br>Create a 'private' python package at the root level of your django project (at the same level as the manage.py file).<br><br>The application requires a service account for authentication with Google.  These can be configured by logging into your account at https://cloud.google.com.<br><br>Copy your Google API private key file to the private directory (name it privatekey.pem). <br><br>Create a python file named 'accounts.py' in the private directory with the following code (update with your account data):<br> <br>    service_account = 'xxxxxx@developer.gserviceaccount.com'<br>    view_ids = {'app_name': '#########', ...}<br><br><br>This package uses [Google APIs Client Library for Python](https://developers.google.com/api-client-library/python/) which should automatically be installed through setup.<br><br><br>Release Notes:<br><br>0.1.0: Initial Release<br>0.1.1: Updated to support importing from separate views in google analytics.<br>0.1.2: Increased the size of the label and page_path fields.\n          </div>"}, "last_serial": 1409768, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "a93aed087d48a2f79f772637be323a3e", "sha256": "8591f8aece891d92c9bc73ca951224000aa3ed1616809c278f5e3806b87072ff"}, "downloads": -1, "filename": "django-ga-puller-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a93aed087d48a2f79f772637be323a3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7731, "upload_time": "2013-11-20T21:42:41", "upload_time_iso_8601": "2013-11-20T21:42:41.743696Z", "url": "https://files.pythonhosted.org/packages/45/7c/440f153229503825fdf15fe05e29d021087c50ddae947ac86da02c14f8e3/django-ga-puller-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e615a633d3857d3bb1f24a87bed210de", "sha256": "9f2c9d1316d718b8cbf695361135fc91c5fb655a4f00740fe5ce5f2a6be10229"}, "downloads": -1, "filename": "django-ga-puller-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e615a633d3857d3bb1f24a87bed210de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7980, "upload_time": "2013-11-21T20:16:39", "upload_time_iso_8601": "2013-11-21T20:16:39.344486Z", "url": "https://files.pythonhosted.org/packages/98/70/3d0467f625495021520708433ec39a9deb6ac20bec6778373467d037ff77/django-ga-puller-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "21e6eb5a8ac7c9d5cddf3bbe05c816c1", "sha256": "7190f12cd8e707ba27283af19ec034884267c4e317c0732ad13cd7b5d4137eaa"}, "downloads": -1, "filename": "django-ga-puller-0.1.2.tar.gz", "has_sig": false, "md5_digest": "21e6eb5a8ac7c9d5cddf3bbe05c816c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7988, "upload_time": "2014-01-29T15:27:53", "upload_time_iso_8601": "2014-01-29T15:27:53.300287Z", "url": "https://files.pythonhosted.org/packages/e4/64/b7069cecd809ccc7f18e3dbdc6e66288c8af7c55e22195c0b10ba2e44ed5/django-ga-puller-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "d8c3d35e3da547b018431182b58cfd2a", "sha256": "47473d74d0801fc664223f07c3708cf843eb1100ddbcdae4556035bcf3f1971c"}, "downloads": -1, "filename": "django-ga-puller-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d8c3d35e3da547b018431182b58cfd2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2015-02-04T16:00:23", "upload_time_iso_8601": "2015-02-04T16:00:23.302905Z", "url": "https://files.pythonhosted.org/packages/9a/ba/e33cb8c185e923e1e3b638ce20d3d581be4e19f167ca96cdf97f885b23c6/django-ga-puller-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1e898ede2941dbe9d0d9c2aedd32697d", "sha256": "ca1246513b71d11f1138206ce0ab8425e7ba4f7ee31c971bb8203ddf6d869bda"}, "downloads": -1, "filename": "django-ga-puller-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1e898ede2941dbe9d0d9c2aedd32697d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5286, "upload_time": "2015-02-04T18:51:59", "upload_time_iso_8601": "2015-02-04T18:51:59.134303Z", "url": "https://files.pythonhosted.org/packages/c5/c8/02e250eca254c9539cf5a02c189feec072ecf348acd64c3d1ef51fd825a4/django-ga-puller-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1e898ede2941dbe9d0d9c2aedd32697d", "sha256": "ca1246513b71d11f1138206ce0ab8425e7ba4f7ee31c971bb8203ddf6d869bda"}, "downloads": -1, "filename": "django-ga-puller-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1e898ede2941dbe9d0d9c2aedd32697d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5286, "upload_time": "2015-02-04T18:51:59", "upload_time_iso_8601": "2015-02-04T18:51:59.134303Z", "url": "https://files.pythonhosted.org/packages/c5/c8/02e250eca254c9539cf5a02c189feec072ecf348acd64c3d1ef51fd825a4/django-ga-puller-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:56 2020"}