{"info": {"author": "Thane Thomson", "author_email": "connect@thanethomson.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Utilities"], "description": "httpwatcher\n===========\n\nOverview\n--------\n\n``httpwatcher`` is both a library and command-line utility for firing up\na simple HTTP server to serve static files from a specific root path.\nLive reloading is triggered via web sockets.\n\n**Note** that ``httpwatcher`` is intended for developers during testing\nof their static web sites, and is not at all intended as a production\nweb server.\n\nRequirements\n------------\n\nIn order to install ``httpwatcher``, you will need:\n\n-  Python 2.7+ or Python 3.5+\n-  ``pip`` or ``easy_install``\n\nInstallation\n------------\n\nWith your `virtual\nenvironment <https://virtualenv.pypa.io/en/stable/>`__ active, run the\nfollowing:\n\n.. code:: bash\n\n    > pip install httpwatcher\n\nTo upgrade to the latest version of ``httpwatcher``, simply:\n\n.. code:: bash\n\n    > pip install -U httpwatcher\n\nUsage\n-----\n\n``httpwatcher`` can either be used from the command line, or as a\ndrop-in library within your own Python application.\n\nCommand-Line Usage\n~~~~~~~~~~~~~~~~~~\n\nThe quickest way to get up and running is to watch the current folder\nand serve your content from ``http://localhost:5555`` as follows:\n\n.. code:: bash\n\n    # Also opens your web browser at http://localhost:5555\n    > httpwatcher\n\n    # To get more help\n    > httpwatcher --help\n\nWith all possible options:\n\n.. code:: bash\n\n    > httpwatcher --root /path/to/html \\      # static root from which to serve files\n                  --watch \"/path1,/path2\" \\   # comma-separated list of paths to watch (defaults to the static root)\n                  --host 127.0.0.1 \\          # bind to 127.0.0.1\n                  --port 5556 \\               # bind to port 5556\n                  --base-path /blog/ \\        # serve static content from http://127.0.0.1:5556/blog/\n                  --verbose \\                 # enable verbose debug logging\n                  --no-browser                # causes httpwatcher to not attempt to open your web browser automatically\n\nLibrary Usage\n~~~~~~~~~~~~~\n\nMake sure ``httpwatcher`` is installed as a dependency for your Python\nproject, and then:\n\n.. code:: python\n\n    import httpwatcher\n\n    # Just watch /path/to/html, and serve from that same path\n    httpwatcher.watch(\"/path/to/html\")\n\n**Note** that, unlike ``HttpWatcherServer``, the ``httpwatcher.watch``\nfunction automatically assumes that you want to open your default web\nbrowser at the base URL of the served site. To avoid this, do the\nfollowing:\n\n.. code:: python\n\n    import httpwatcher\n\n    httpwatcher.watch(\"/path/to/html\", open_browser=False)\n\nTo use the watcher server directly and have more control over the I/O\nloop:\n\n.. code:: python\n\n    from httpwatcher import HttpWatcherServer\n    from tornado.ioloop import IOLoop\n\n    def custom_callback():\n        print(\"Web server reloading!\")\n\n    server = HttpWatcherServer(\n        \"/path/to/html\",                      # serve files from the folder /path/to/html\n        watch_paths=[\"/path1\", \"/path2\"],     # watch these paths for changes\n        on_reload=custom_callback,            # optionally specify a custom callback to be called just before the server reloads\n        host=\"127.0.0.1\",                     # bind to host 127.0.0.1\n        port=5556,                            # bind to port 5556\n        server_base_path=\"/blog/\",            # serve static content from http://127.0.0.1:5556/blog/\n        watcher_interval=1.0,                 # maximum reload frequency (seconds)\n        recursive=True,                       # watch for changes in /path/to/html recursively\n        open_browser=True                     # automatically attempt to open a web browser (default: False for HttpWatcherServer)\n    )\n    server.listen()\n\n    try:\n        # will keep serving until someone hits Ctrl+C\n        IOLoop.current().start()\n    except KeyboardInterrupt:\n        server.shutdown()\n\n``httpwatcher.watch`` takes mostly the same parameters as the\nconstructor parameters for ``HttpWatcherServer`` (except, as mentioned\nearlier, for the ``open_browser`` parameter). It's just a convenience\nmethod provided to instantiate and run a simple ``HttpWatcherServer``.\n\nInner Workings\n--------------\n\n``httpwatcher`` makes extensive use of the\n`Tornado <http://www.tornadoweb.org>`__ asynchronous web framework to\nfacilitate a combined asynchronous HTTP and WebSocket server. All HTML\ncontent served that contains a closing ``</body>`` tag will\nautomatically have two ``<script>`` tags injected to facilitate the\nWebSockets connection back to the server.\n\nThe WebSockets endpoint is located at\n``http://localhost:5555/httpwatcher`` by default, and the JavaScript\nfile that facilitates the reloading is located at\n``http://localhost:5555/httpwatcher.min.js`` by default (depending on\nyour host and port settings).\n\nBackground\n----------\n\nThe library came out of a need for a simple web server, capable of\nserving static files with live reload capabilities, but also with the\nability to serve content from non-standard base paths (for example, from\n``http://somesite.com/blog/`` as opposed to always just\n``http://somesite.com``). More specifically, this was to be used in\n`Statik <https://github.com/thanethomson/statik>`__ - the static web\nsite generator.\n\nThe `livereload <https://github.com/lepture/python-livereload>`__\nlibrary was great for a while, until the real need came up for modifying\nit, where the wheels came off the bus. More functional unit tests were\nneeded to validate the basic functionality, and more flexibility was\nneeded in some respects, so ``httpwatcher`` was built.\n\nContributing\n------------\n\nFeel free to contribute! Fork the repository, make your changes in a\nfeature branch, and then submit a pull request.\n\nLicense\n-------\n\n**The MIT License (MIT)**\n\nCopyright (c) 2017 Thane Thomson\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thanethomson/httpwatcher", "keywords": "livereload hotreload web server live reload hot reload", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "httpwatcher", "package_url": "https://pypi.org/project/httpwatcher/", "platform": "", "project_url": "https://pypi.org/project/httpwatcher/", "project_urls": {"Homepage": "https://github.com/thanethomson/httpwatcher"}, "release_url": "https://pypi.org/project/httpwatcher/0.5.2/", "requires_dist": ["tornado (<5)", "watchdog", "future"], "requires_python": "", "summary": "Web server library and command-line utility for serving static files with live reload functionality", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p><tt>httpwatcher</tt> is both a library and command-line utility for firing up\na simple HTTP server to serve static files from a specific root path.\nLive reloading is triggered via web sockets.</p>\n<p><strong>Note</strong> that <tt>httpwatcher</tt> is intended for developers during testing\nof their static web sites, and is not at all intended as a production\nweb server.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>In order to install <tt>httpwatcher</tt>, you will need:</p>\n<ul>\n<li>Python 2.7+ or Python 3.5+</li>\n<li><tt>pip</tt> or <tt>easy_install</tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>With your <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtual\nenvironment</a> active, run the\nfollowing:</p>\n<pre>&gt; pip install httpwatcher\n</pre>\n<p>To upgrade to the latest version of <tt>httpwatcher</tt>, simply:</p>\n<pre>&gt; pip install -U httpwatcher\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><tt>httpwatcher</tt> can either be used from the command line, or as a\ndrop-in library within your own Python application.</p>\n<div id=\"command-line-usage\">\n<h3>Command-Line Usage</h3>\n<p>The quickest way to get up and running is to watch the current folder\nand serve your content from <tt><span class=\"pre\">http://localhost:5555</span></tt> as follows:</p>\n<pre><span class=\"c1\"># Also opens your web browser at http://localhost:5555\n</span>&gt; httpwatcher\n\n<span class=\"c1\"># To get more help\n</span>&gt; httpwatcher --help\n</pre>\n<p>With all possible options:</p>\n<pre>&gt; httpwatcher --root /path/to/html <span class=\"se\">\\ </span>     <span class=\"c1\"># static root from which to serve files\n</span>              --watch <span class=\"s2\">\"/path1,/path2\"</span> <span class=\"se\">\\ </span>  <span class=\"c1\"># comma-separated list of paths to watch (defaults to the static root)\n</span>              --host <span class=\"m\">127</span>.0.0.1 <span class=\"se\">\\ </span>         <span class=\"c1\"># bind to 127.0.0.1\n</span>              --port <span class=\"m\">5556</span> <span class=\"se\">\\ </span>              <span class=\"c1\"># bind to port 5556\n</span>              --base-path /blog/ <span class=\"se\">\\ </span>       <span class=\"c1\"># serve static content from http://127.0.0.1:5556/blog/\n</span>              --verbose <span class=\"se\">\\ </span>                <span class=\"c1\"># enable verbose debug logging\n</span>              --no-browser                <span class=\"c1\"># causes httpwatcher to not attempt to open your web browser automatically</span>\n</pre>\n</div>\n<div id=\"library-usage\">\n<h3>Library Usage</h3>\n<p>Make sure <tt>httpwatcher</tt> is installed as a dependency for your Python\nproject, and then:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">httpwatcher</span>\n\n<span class=\"c1\"># Just watch /path/to/html, and serve from that same path</span>\n<span class=\"n\">httpwatcher</span><span class=\"o\">.</span><span class=\"n\">watch</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/html\"</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Note</strong> that, unlike <tt>HttpWatcherServer</tt>, the <tt>httpwatcher.watch</tt>\nfunction automatically assumes that you want to open your default web\nbrowser at the base URL of the served site. To avoid this, do the\nfollowing:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">httpwatcher</span>\n\n<span class=\"n\">httpwatcher</span><span class=\"o\">.</span><span class=\"n\">watch</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/html\"</span><span class=\"p\">,</span> <span class=\"n\">open_browser</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>To use the watcher server directly and have more control over the I/O\nloop:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">httpwatcher</span> <span class=\"kn\">import</span> <span class=\"n\">HttpWatcherServer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tornado.ioloop</span> <span class=\"kn\">import</span> <span class=\"n\">IOLoop</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">custom_callback</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Web server reloading!\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">HttpWatcherServer</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"/path/to/html\"</span><span class=\"p\">,</span>                      <span class=\"c1\"># serve files from the folder /path/to/html</span>\n    <span class=\"n\">watch_paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"/path1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"/path2\"</span><span class=\"p\">],</span>     <span class=\"c1\"># watch these paths for changes</span>\n    <span class=\"n\">on_reload</span><span class=\"o\">=</span><span class=\"n\">custom_callback</span><span class=\"p\">,</span>            <span class=\"c1\"># optionally specify a custom callback to be called just before the server reloads</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"127.0.0.1\"</span><span class=\"p\">,</span>                     <span class=\"c1\"># bind to host 127.0.0.1</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5556</span><span class=\"p\">,</span>                            <span class=\"c1\"># bind to port 5556</span>\n    <span class=\"n\">server_base_path</span><span class=\"o\">=</span><span class=\"s2\">\"/blog/\"</span><span class=\"p\">,</span>            <span class=\"c1\"># serve static content from http://127.0.0.1:5556/blog/</span>\n    <span class=\"n\">watcher_interval</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">,</span>                 <span class=\"c1\"># maximum reload frequency (seconds)</span>\n    <span class=\"n\">recursive</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>                       <span class=\"c1\"># watch for changes in /path/to/html recursively</span>\n    <span class=\"n\">open_browser</span><span class=\"o\">=</span><span class=\"kc\">True</span>                     <span class=\"c1\"># automatically attempt to open a web browser (default: False for HttpWatcherServer)</span>\n<span class=\"p\">)</span>\n<span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">()</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"c1\"># will keep serving until someone hits Ctrl+C</span>\n    <span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">current</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">shutdown</span><span class=\"p\">()</span>\n</pre>\n<p><tt>httpwatcher.watch</tt> takes mostly the same parameters as the\nconstructor parameters for <tt>HttpWatcherServer</tt> (except, as mentioned\nearlier, for the <tt>open_browser</tt> parameter). It\u2019s just a convenience\nmethod provided to instantiate and run a simple <tt>HttpWatcherServer</tt>.</p>\n</div>\n</div>\n<div id=\"inner-workings\">\n<h2>Inner Workings</h2>\n<p><tt>httpwatcher</tt> makes extensive use of the\n<a href=\"http://www.tornadoweb.org\" rel=\"nofollow\">Tornado</a> asynchronous web framework to\nfacilitate a combined asynchronous HTTP and WebSocket server. All HTML\ncontent served that contains a closing <tt>&lt;/body&gt;</tt> tag will\nautomatically have two <tt>&lt;script&gt;</tt> tags injected to facilitate the\nWebSockets connection back to the server.</p>\n<p>The WebSockets endpoint is located at\n<tt><span class=\"pre\">http://localhost:5555/httpwatcher</span></tt> by default, and the JavaScript\nfile that facilitates the reloading is located at\n<tt><span class=\"pre\">http://localhost:5555/httpwatcher.min.js</span></tt> by default (depending on\nyour host and port settings).</p>\n</div>\n<div id=\"background\">\n<h2>Background</h2>\n<p>The library came out of a need for a simple web server, capable of\nserving static files with live reload capabilities, but also with the\nability to serve content from non-standard base paths (for example, from\n<tt><span class=\"pre\">http://somesite.com/blog/</span></tt> as opposed to always just\n<tt><span class=\"pre\">http://somesite.com</span></tt>). More specifically, this was to be used in\n<a href=\"https://github.com/thanethomson/statik\" rel=\"nofollow\">Statik</a> - the static web\nsite generator.</p>\n<p>The <a href=\"https://github.com/lepture/python-livereload\" rel=\"nofollow\">livereload</a>\nlibrary was great for a while, until the real need came up for modifying\nit, where the wheels came off the bus. More functional unit tests were\nneeded to validate the basic functionality, and more flexibility was\nneeded in some respects, so <tt>httpwatcher</tt> was built.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Feel free to contribute! Fork the repository, make your changes in a\nfeature branch, and then submit a pull request.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><strong>The MIT License (MIT)</strong></p>\n<p>Copyright (c) 2017 Thane Thomson</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\u201cSoftware\u201d), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 4486635, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "53b4ad4284396e98fd5cc309a9c26d1d", "sha256": "7735935da76ecdc258313d8e65a70b4e01bb915a2baefb92d7e07fb67eda9a84"}, "downloads": -1, "filename": "httpwatcher-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "53b4ad4284396e98fd5cc309a9c26d1d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9127, "upload_time": "2017-01-17T16:33:48", "upload_time_iso_8601": "2017-01-17T16:33:48.385710Z", "url": "https://files.pythonhosted.org/packages/74/bb/a85059dcdb560387cd7c7f8f6f3b2ed3ce1d64c84838aeacbf9982b640ea/httpwatcher-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3d705e57ec6eec2279a8d6374742638", "sha256": "cd8dbc0950c3ac3767e8d8e2cdec598ef4486295490e28b26602f93b3597e1b9"}, "downloads": -1, "filename": "httpwatcher-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a3d705e57ec6eec2279a8d6374742638", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7340, "upload_time": "2017-01-17T16:33:37", "upload_time_iso_8601": "2017-01-17T16:33:37.944107Z", "url": "https://files.pythonhosted.org/packages/40/fd/2697029314c4a5ee4328aa6e86e9f8e8a16ed7a0f6439232e870501fceea/httpwatcher-0.1.0.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "bd7af4337df154d709192e316004d177", "sha256": "522c8bddbafbaf9280535952cd0e61f6f1d6b38875788f7e1b8ba91fabd13379"}, "downloads": -1, "filename": "httpwatcher-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bd7af4337df154d709192e316004d177", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13578, "upload_time": "2017-01-17T17:38:26", "upload_time_iso_8601": "2017-01-17T17:38:26.870043Z", "url": "https://files.pythonhosted.org/packages/eb/0d/fe8387af898bebd6299e352a9c1995b0b2838c19a6f0a9a0e0a95a84ad96/httpwatcher-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "108ae74758918a7d2404abe9f2c5c537", "sha256": "51c6a89264da22f17779bd03fe5ab58f097d664f56df476bb7e97e4adb2d0ade"}, "downloads": -1, "filename": "httpwatcher-0.1.3.tar.gz", "has_sig": false, "md5_digest": "108ae74758918a7d2404abe9f2c5c537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9518, "upload_time": "2017-01-17T17:38:14", "upload_time_iso_8601": "2017-01-17T17:38:14.643723Z", "url": "https://files.pythonhosted.org/packages/f4/9f/97fb27f5f7a624d8ab554301eba5c6695c3d1f619c72ff7326349fe72904/httpwatcher-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "63fda1245e1244c88e9cda7253af131c", "sha256": "8790c3531d9e0a3f966cc51e42b10f9ba7269cc83edc10bb83fc61803422bfdd"}, "downloads": -1, "filename": "httpwatcher-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "63fda1245e1244c88e9cda7253af131c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13510, "upload_time": "2017-01-17T17:57:51", "upload_time_iso_8601": "2017-01-17T17:57:51.798578Z", "url": "https://files.pythonhosted.org/packages/05/c8/296722958167f15ee1d92d8d39146c4bdfa9244ff62cb86d5935406f4348/httpwatcher-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27dd1d2a43ef99fabfe7eed93ab45566", "sha256": "0dd6e25451b7dbe62906d5df7515aff00dd6d9ed850af5e1139985043e270ee6"}, "downloads": -1, "filename": "httpwatcher-0.1.4.tar.gz", "has_sig": false, "md5_digest": "27dd1d2a43ef99fabfe7eed93ab45566", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9391, "upload_time": "2017-01-17T17:57:40", "upload_time_iso_8601": "2017-01-17T17:57:40.520564Z", "url": "https://files.pythonhosted.org/packages/1a/82/bbc145244fb4930d3e1b77fd482939e7a8aa753080995d44d51fb4bfaf98/httpwatcher-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1ac55e9b5b3ebb29cc0901e8458e21a5", "sha256": "ba760de295f7784d38d502212b055eb8ec7f554057e28e089d4b00e825649d01"}, "downloads": -1, "filename": "httpwatcher-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1ac55e9b5b3ebb29cc0901e8458e21a5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14514, "upload_time": "2017-01-18T10:39:09", "upload_time_iso_8601": "2017-01-18T10:39:09.891358Z", "url": "https://files.pythonhosted.org/packages/aa/55/e858975c19ad086c8cacf9fde1092c659e22f9a748a8af2c7b1b47b759d3/httpwatcher-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a9db9549c158efa34466fd54235e4f1", "sha256": "b8ff3eb8cafe4b461a2d2840bf9c299ff38207a0f0395f249f69a6a256b1cde9"}, "downloads": -1, "filename": "httpwatcher-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1a9db9549c158efa34466fd54235e4f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9929, "upload_time": "2017-01-18T10:38:52", "upload_time_iso_8601": "2017-01-18T10:38:52.719653Z", "url": "https://files.pythonhosted.org/packages/bd/0d/9c013a225e98c8f11f7bf54a688532db03687085fc385c028f1856c85a58/httpwatcher-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b249a43123ccd6a202baa435219575ac", "sha256": "56c100ddc92a8b7a978d8ebabbe0ec7340bdfd1281221230d0ed07d333848dd0"}, "downloads": -1, "filename": "httpwatcher-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b249a43123ccd6a202baa435219575ac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15189, "upload_time": "2017-01-18T14:09:38", "upload_time_iso_8601": "2017-01-18T14:09:38.967001Z", "url": "https://files.pythonhosted.org/packages/f9/ac/07a8d0a55c2f3662ce7e9962a108adee6a5f8a4ca6d427469050d2fc0a45/httpwatcher-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "442e62696139efdb4d62bd92d629c995", "sha256": "a66a4917c62421acf0fe11b32347034f0b785e12c95839116faa7ad6b4b816f1"}, "downloads": -1, "filename": "httpwatcher-0.3.0.tar.gz", "has_sig": false, "md5_digest": "442e62696139efdb4d62bd92d629c995", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10350, "upload_time": "2017-01-18T14:09:21", "upload_time_iso_8601": "2017-01-18T14:09:21.935346Z", "url": "https://files.pythonhosted.org/packages/a6/c6/c3587500a1131cf150fe645f3d931f9e55adc00b0669576ba633d820ab00/httpwatcher-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "4cda678da380bc62b0f98840a3501862", "sha256": "0d142deebf983521057f97e2373c13a21474c8371f97069dd4cb35b27d829f17"}, "downloads": -1, "filename": "httpwatcher-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4cda678da380bc62b0f98840a3501862", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15998, "upload_time": "2017-01-18T15:07:24", "upload_time_iso_8601": "2017-01-18T15:07:24.034860Z", "url": "https://files.pythonhosted.org/packages/57/92/123628bcf1e22efc370d0363e0e75d2b7293275df91e6c80b8e7e57d10bf/httpwatcher-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "376737df0fd0c4c043854550a0188bc4", "sha256": "2f84c93a3766a11a69f2d339f143889558bd5eccee77574593c39111a3202645"}, "downloads": -1, "filename": "httpwatcher-0.4.0.tar.gz", "has_sig": false, "md5_digest": "376737df0fd0c4c043854550a0188bc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10883, "upload_time": "2017-01-18T15:07:26", "upload_time_iso_8601": "2017-01-18T15:07:26.207394Z", "url": "https://files.pythonhosted.org/packages/02/97/055185c6a54e470ef943556b613bc56975e82da3f456bdd08f036cf7cae8/httpwatcher-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "0ea8a8aa5df5d88584210f8686dcb1a1", "sha256": "1455cb0f35707d3a77a68a47f2c4eb4f7af2386ef771290b5e578a61c2e57368"}, "downloads": -1, "filename": "httpwatcher-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ea8a8aa5df5d88584210f8686dcb1a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22765, "upload_time": "2017-01-20T13:14:33", "upload_time_iso_8601": "2017-01-20T13:14:33.867932Z", "url": "https://files.pythonhosted.org/packages/1b/bb/01be9e934b41906c6d1adffd6a23409c9b695c0c110178a3467564ec2dbc/httpwatcher-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5e0aa3b79fefe3531477d0f4bfab354", "sha256": "b0f5a125b0e3561be9a950698fdec0ecbff6cca86d5ccaa4897de5ab826fcdcb"}, "downloads": -1, "filename": "httpwatcher-0.5.0.tar.gz", "has_sig": false, "md5_digest": "c5e0aa3b79fefe3531477d0f4bfab354", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17488, "upload_time": "2017-01-20T13:14:36", "upload_time_iso_8601": "2017-01-20T13:14:36.541137Z", "url": "https://files.pythonhosted.org/packages/6b/c1/887863463b5edd61afa31ac39705e083684e98b80e0401ab23daaee46571/httpwatcher-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "ee28ffc795c73141bcb11f5485d1ab25", "sha256": "02c685c1298922e233f1a1e9d7a6c8341cc5976812cc12c453638657c26ec9ef"}, "downloads": -1, "filename": "httpwatcher-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ee28ffc795c73141bcb11f5485d1ab25", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22892, "upload_time": "2017-12-26T10:12:18", "upload_time_iso_8601": "2017-12-26T10:12:18.089600Z", "url": "https://files.pythonhosted.org/packages/fc/ae/9d5143e86ee9df7999005c5a31710ec0edbadddc6a9803c96c563af21fa3/httpwatcher-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4245fc90a7793d35e2a9e8aa4e4c7e6f", "sha256": "3fb38823009c3b9c4e9197a7645b8ede849d71fdfac9caecf21a645e5db6f450"}, "downloads": -1, "filename": "httpwatcher-0.5.1.tar.gz", "has_sig": false, "md5_digest": "4245fc90a7793d35e2a9e8aa4e4c7e6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19729, "upload_time": "2017-12-26T10:12:20", "upload_time_iso_8601": "2017-12-26T10:12:20.547541Z", "url": "https://files.pythonhosted.org/packages/a9/ac/98c3666efd917d628df995ff636dbe161e2f143bc086229829f85ed6f43f/httpwatcher-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "cd9c033d61ab2a7a4bdbb4ef14a5833e", "sha256": "20ee2f608701b4d466e0210fdb30dc8e675d14e7a587876658f8d360610cfa61"}, "downloads": -1, "filename": "httpwatcher-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd9c033d61ab2a7a4bdbb4ef14a5833e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20614, "upload_time": "2018-11-14T18:41:50", "upload_time_iso_8601": "2018-11-14T18:41:50.351232Z", "url": "https://files.pythonhosted.org/packages/19/58/0c8d13e4d3a40384e64e5644ad5dd700d61079eeff753ca5f3c88913314e/httpwatcher-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b45f20921c6b4fbf9a5089545fba85db", "sha256": "01270464600fa22d420c615b7b90eedd8545bd084fd5c3f62f9a5243c68550e0"}, "downloads": -1, "filename": "httpwatcher-0.5.2.tar.gz", "has_sig": false, "md5_digest": "b45f20921c6b4fbf9a5089545fba85db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19816, "upload_time": "2018-11-14T18:41:56", "upload_time_iso_8601": "2018-11-14T18:41:56.524082Z", "url": "https://files.pythonhosted.org/packages/4b/4f/5051625911fef4f15c10e2b8a58af94c1d117d68b03dc01981658b999a02/httpwatcher-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd9c033d61ab2a7a4bdbb4ef14a5833e", "sha256": "20ee2f608701b4d466e0210fdb30dc8e675d14e7a587876658f8d360610cfa61"}, "downloads": -1, "filename": "httpwatcher-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cd9c033d61ab2a7a4bdbb4ef14a5833e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20614, "upload_time": "2018-11-14T18:41:50", "upload_time_iso_8601": "2018-11-14T18:41:50.351232Z", "url": "https://files.pythonhosted.org/packages/19/58/0c8d13e4d3a40384e64e5644ad5dd700d61079eeff753ca5f3c88913314e/httpwatcher-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b45f20921c6b4fbf9a5089545fba85db", "sha256": "01270464600fa22d420c615b7b90eedd8545bd084fd5c3f62f9a5243c68550e0"}, "downloads": -1, "filename": "httpwatcher-0.5.2.tar.gz", "has_sig": false, "md5_digest": "b45f20921c6b4fbf9a5089545fba85db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19816, "upload_time": "2018-11-14T18:41:56", "upload_time_iso_8601": "2018-11-14T18:41:56.524082Z", "url": "https://files.pythonhosted.org/packages/4b/4f/5051625911fef4f15c10e2b8a58af94c1d117d68b03dc01981658b999a02/httpwatcher-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:01 2020"}