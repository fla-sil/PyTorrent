{"info": {"author": "Dan Loewenherz", "author_email": "dan@lionheartsw.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: CGI Tools/Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "|image0| |image1|\n\n|CI Status| |Version| |Versions|\n\nPinboard.py is an easy-to-use and fully-functional Python wrapper and\n`command-line utility <https://github.com/lionheart/pinboard.py#command-line>`__ for the Pinboard.in API.\n\nInstallation\n------------\n\nPinboard.py is available for download through the Python Package Index\n(PyPi). You can install it right away using pip or easy_install.\n\nIf you\u2019re using Python 3 or above:\n\n.. code:: bash\n\n    pip install \"pinboard>=2.0\"\n\nFor Python 2.7:\n\n.. code:: bash\n\n    pip install \"pinboard>=1.0,<2.0\"\n\nUsage\n-----\n\nTo get started, you\u2019re going to need to get your Pinboard API token from\nthe `password page <https://pinboard.in/settings/password>`__ on the\nPinboard website. Once you\u2019ve got that, you\u2019re ready to go.\n\n.. code:: pycon\n\n    >>> import pinboard\n    >>> pb = pinboard.Pinboard(api_token)\n\nOnce you\u2019ve done this, you can now use the ``pb`` object to make calls\nto the Pinboard API. Here are some examples:\n\nUpdate\n~~~~~~\n\nReturns the most recent time a bookmark was added, updated or deleted.\n\n.. code:: pycon\n\n    >>> pb.posts.update()\n    datetime.datetime(2014, 7, 27, 18, 11, 29)\n\nPosts\n~~~~~\n\nAdd a bookmark:\n\n.. code:: pycon\n\n    >>> pb.posts.add(url=\"http://google.com/\", description=\"A Great Search Engine\", \\\n            extended=\"This is a description!\", tags=[\"search\", \"tools\"], shared=True, \\\n            toread=False)\n    True\n\nUpdate a bookmark:\n\n.. code:: pycon\n\n    # First, retrieve the bookmark you'd like to edit\n    >>> bookmark = pb.posts.get(url='http://google.com/')['posts'][0]\n    >>> bookmark\n    <Bookmark description=\"A Great Search Engine\" url=\"google.com\">\n\n    # You can now change description, extended, shared, toread, tags, or time directly with the bookmark object.\n    >>> bookmark.description = \"Google is pretty awesome\"\n    >>> bookmark.tags = [\"search\", \"searching\"]\n    >>> bookmark.save()\n    True\n\n    # If you want to update the bookmark creation date as well, you'll need to pass in `update_time=True` to the save method\n    >>> import datetime\n    >>> bookmark.time = datetime.datetime.now() - datetime.timedelta(days=5)\n    >>> bookmark.save(update_time=True)\n\nDelete a bookmark:\n\n.. code:: pycon\n\n    >>> pb.posts.delete(url=\"http://google.com/\")\n    True\n\nGet one or more posts on a single day matching the parameters:\n\n.. code:: pycon\n\n    >>> pb.posts.get(url=\"http://google.com/\")\n    {u'date': datetime.datetime(2014, 7, 25, 16, 35, 25),\n     u'posts': [<Bookmark description=\"A Great Search Engine\" url=\"google.com\">],\n     u'user': u'dlo'}\n\n    >>> import datetime\n    >>> pb.posts.get(dt=datetime.date.today())\n    {u'date': datetime.datetime(2014, 7, 25, 16, 35, 25),\n     u'posts': [<Bookmark description=\"A Great Search Engine\" url=\"google.com\">,\n      <Bookmark description=\"Smooth Scrolling | CSS-Tricks\" url=\"css-tricks.com\">,\n      <Bookmark description=\"Apple \"Frustrated\" that \"People Don't Want to Pay Anything\" on Mobile, Says 'The Banner Saga' Developer | Touch Arcade\" url=\"toucharcade.com\">],\n     u'user': u'dlo'}\n\nReturn all recent bookmarks (optionally filtering by tag):\n\n.. code:: pycon\n\n    >>> pb.posts.recent(tag=[\"programming\", \"python\"])\n    {u'date': datetime.datetime(2014, 4, 28, 2, 7, 58),\n     u'posts': [<Bookmark description=\"itunesfs 1.0.0.7 : Python Package Index\" url=\"pypi.python.org\">,\n      <Bookmark description=\"mincss \"Clears the junk out of your CSS\" - Peterbe.com\" url=\"www.peterbe.com\">,\n      <Bookmark description=\"Braintree Test Credit Card Account Numbers\" url=\"www.braintreepayments.com\">,\n      <Bookmark description=\"Valued Lessons: Monads in Python (with nice syntax!)\" url=\"www.valuedlessons.com\">,\n      <Bookmark description=\"Paste #EGY1XPQxQ2UPuT91SH83 at spacepaste\" url=\"bpaste.net\">,\n      <Bookmark description=\"40 Random Letters and Numbers\" url=\"gist.github.com\">,\n      <Bookmark description=\"PEP 3156 -- Asynchronous IO Support Rebooted\" url=\"www.python.org\">,\n      <Bookmark description=\"Brython\" url=\"www.brython.info\">,\n      <Bookmark description=\"Django REST framework\" url=\"django-rest-framework.org\">,\n      <Bookmark description=\"mypy - A New Python Variant with Dynamic and Static Typing\" url=\"www.mypy-lang.org\">,\n      <Bookmark description=\"Julython 2012\" url=\"www.julython.org\">,\n      <Bookmark description=\"Stripe Blog: Exploring Python Using GDB\" url=\"stripe.com\">,\n      <Bookmark description=\"Python FAQ: Descriptors - fuzzy notepad\" url=\"me.veekun.com\">,\n      <Bookmark description=\"A Guide to Python's Magic Methods \u00ab rafekettler.com\" url=\"www.rafekettler.com\">,\n      <Bookmark description=\"Melopy\" url=\"prezjordan.github.com\">,\n      <Bookmark description=\"litl/rauth\" url=\"github.com\">],\n     u'user': u'dlo'}\n\nReturn a list of dates with the number of posts at each date:\n\n.. code:: pycon\n\n    >>> pb.posts.dates(tag=[\"programming\", \"python\"])\n    {u'dates': {datetime.date(2008, 12, 5): 1,\n      datetime.date(2008, 12, 6): 1,\n      ...\n      datetime.date(2014, 7, 24): 6,\n      datetime.date(2014, 7, 25): 4},\n     u'tag': u'programming+python',\n     u'user': u'dlo'}\n\nGet all bookmarks in your account:\n\n.. code:: pycon\n\n    >>> pb.posts.all()\n    [<Bookmark description=\"Of Princesses and Dragons\" url=\"medium.com\">\n     <Bookmark description=\"A Great Search Engine\" url=\"google.com\">,\n     ...\n     <Bookmark description=\"Runner Econ 101 - StimHa\" url=\"stimhack.com\">,\n     <Bookmark description=\"\uc11c\uc778\uad6d, \ud0c4\ud0c4 \uadfc\uc721+ \ud0dc\ud3c9\uc591 \uc5b4\uae68\u2026\uc5b4\ubd80\ubc14 \ubd80\ub978\ub2e4 : \ub124\uc774\" url=\"news.naver.com\">]\n\nYou can also filter by tag, start, results, fromdt, or todt.\n\n.. code:: pycon\n\n    >>> import datetime\n    >>> five_days_ago = datetime.datetime.now() - datetime.timedelta(days=5)\n    >>> pb.posts.all(tag=[\"programming\"], start=10, results=100, fromdt=five_days_ago)\n    [<Bookmark description=\"Of Princesses and Dragons\" url=\"medium.com\">\n     <Bookmark description=\"A Great Search Engine\" url=\"google.com\">,\n     ...\n     <Bookmark description=\"Runner Econ 101 - StimHa\" url=\"stimhack.com\">,\n     <Bookmark description=\"\uc11c\uc778\uad6d, \ud0c4\ud0c4 \uadfc\uc721+ \ud0dc\ud3c9\uc591 \uc5b4\uae68\u2026\uc5b4\ubd80\ubc14 \ubd80\ub978\ub2e4 : \ub124\uc774\" url=\"news.naver.com\">]\n\nTags\n~~~~\n\nSuggest tags for a given URL:\n\n.. code:: pycon\n\n    >>> pb.posts.suggest(url=\"https://pinboard.in\")\n    [{u'popular': [u'pinboard']},\n     {u'recommended': [u'bookmark',\n       u'bookmarks',\n       u'\\uc815\\ubcf4\\ud1b5\\uc2e0',\n       u'pinboard',\n       u'Unread',\n       u'webservice']}]\n\nReturn all tags in your account along with the number of times they were\nused:\n\n.. code:: pycon\n\n    >>> pb.tags.get()\n    [<Tag name=\"absurd\" count=1>,\n    <Tag name=\"accessibility\" count=2>,\n    <Tag name=\"accounting\" count=3>,\n    <Tag name=\"zen\" count=1>,\n    <Tag name=\"zsh\" count=1>,\n    <Tag name=\"zynga\" count=1>]\n\nDelete a tag:\n\n.. code:: pycon\n\n    >>> pb.tags.delete(tag=\"zynga\")\n    True\n\nRename a tag:\n\n.. code:: pycon\n\n    >>> pb.tags.rename(old='ppython', new='python')\n    True\n\nMiscellaneous\n~~~~~~~~~~~~~\n\nBy default, pinboard.py will return parsed JSON objects. If you\u2019d like\nthe raw response object for a request, just pass in\n``parse_response=False``.\n\n.. code:: pycon\n\n    >>> response = pb.tags.get(parse_response=False)\n    >>> response\n    <addinfourl at 4396047680 whose fp = <socket._fileobject object at 0x105f79850>>\n    >>> response.read()\n    ... your tags ...\n\nPinboard.py maps 1-1 to the Pinboard API (e.g., pb.one.two.three() will\nsend a request to \u201chttps://api.pinboard.in/v1/one/two/three\u201d). For more\ninformation on other methods and usage, please read the `Pinboard API\ndocumentation <https://pinboard.in/api/>`__.\n\nOne more note\u2013you might have noticed that there is no \u201ctitle\u201d attribute\nfor bookmarks. This has been done since the Pinboard API calls titles\n\u201cdescriptions\u201d and descriptions \u201cextended\u201d (and this was done to stay\nconsistent with the Delicious API, way back in the day). In order to\nkeep things minimally confusing, this library sticks to how Pinboard\nnames these fields. Just remember\u2013\u201cdescription\u201d means \u201ctitle\u201d and\n\u201cextended\u201d means \u201cdescription\u201d.\n\nCommand Line\n------------\n\nIn addition to providing full Python-level support for the Pinboard API,\npinboard.py also comes bundled with a handy command-line utility called\n\u201cpinboard\u201d. Just type \u201cpinboard -h\u201d for a full list of supported\ncommands. Your API token needs to be available to pinboard.py, and can\nbe entered in several ways. Firstly pinboard.py will try to read the\n~/.pinboardrc configuration file. If not present then it will try to\nread an environment variable called ``PINBOARD_TOKEN``. Lastly it will\nshow a shell prompt for the user to enter their token (you can\nimmediately force the latter behavior by typing ``pinboard login``).\n\nAll of the commands pre-process and indent the JSON output. If you would\nlike to shoot the raw response data to stdout, just pass \u201c\u2013raw\u201d before\nthe subcommand (e.g., \u201cpinboard \u2013raw bookmarks\u201d).\n\nExamples:\n\n.. code:: sh\n\n    $ pinboard login\n    Enter your Pinboard API token: username:XXXXX\n    Saved Pinboard credentials to ~/.pinboardrc\n    $ pinboard suggest-tags --url http://pymotw.com/2/argparse/\n    [\n        {\n            \"popular\": [\n                \"python\"\n            ]\n        },\n        {\n            \"recommended\": [\n                \"python\",\n                \"argument\",\n                \"parsing\"\n            ]\n        }\n    ]\n    $ pinboard get --date 7-13-2014\n    {\n        \"date\": \"2014-07-13T03:03:58Z\",\n        \"posts\": [\n            {\n                \"extended\": \"\",\n                \"hash\": \"e2311835eb0de6bff2595a9b1525bb98\",\n                \"description\": \"Python 2.7.x and Python 3.x key differences\",\n                \"tags\": \"python\",\n                \"href\": \"http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html\",\n                \"meta\": \"561d1f53791a8c50109393411f0301fc\",\n                \"time\": \"2014-07-13T03:03:58Z\",\n                \"shared\": \"yes\",\n                \"toread\": \"no\"\n            },\n            {\n                \"extended\": \"\",\n                \"hash\": \"4abe28f70154bd35f84be73cec0c53ef\",\n                \"description\": \"Miami, the great world city, is drowning while the powers that be look away | World news | The Observer\",\n                \"tags\": \"\",\n                \"href\": \"http://www.theguardian.com/world/2014/jul/11/miami-drowning-climate-change-deniers-sea-levels-rising\",\n                \"meta\": \"2ca547789553ba9d3202a5cd3d367685\",\n                \"time\": \"2014-07-13T02:53:54Z\",\n                \"shared\": \"yes\",\n                \"toread\": \"yes\"\n            }\n        ],\n        \"user\": \"dlo\"\n    }\n    $ pinboard --raw get --date 7/13/2014\n    {\"date\":\"2014-07-13T03:03:58Z\",\"user\":\"dlo\",\"posts\":[{\"href\":\"http:\\/\\/sebastianraschka.com\\/Articles\\/2014_python_2_3_key_diff.html\",\"description\":\"Python 2.7.x and Python 3.x key differences\",\"extended\":\"\",\"meta\":\"561d1f53791a8c50109393411f0301fc\",\"hash\":\"e2311835eb0de6bff2595a9b1525bb98\",\"time\":\"2014-07-13T03:03:58Z\",\"shared\":\"yes\",\"toread\":\"no\",\"tags\":\"python\"},{\"href\":\"http:\\/\\/www.theguardian.com\\/world\\/2014\\/jul\\/11\\/miami-drowning-climate-change-deniers-sea-levels-rising\",\"description\":\"Miami, the great world city, is drowning while the powers that be look away | World news | The Observer\",\"extended\":\"\",\"meta\":\"2ca547789553ba9d3202a5cd3d367685\",\"hash\":\"4abe28f70154bd35f84be73cec0c53ef\",\"time\":\"2014-07-13T02:53:54Z\",\"shared\":\"yes\",\"toread\":\"yes\",\"tags\":\"\"}]}\n\nYou can print a full list of pinboard commands by passing the \u201c-h\u201d flag.\n\n.. code:: sh\n\n    $ pinboard -h\n    usage: pinboard [-h] [--raw]\n\n                    {login,last-update,add,delete,get,recent,dates,bookmarks,suggest-tags,tags,delete-tag,rename-tag,notes,note,rss-key,api-token}\n                    ...\n\n    positional arguments:\n      {login,last-update,add,delete,get,recent,dates,bookmarks,suggest-tags,tags,delete-tag,rename-tag,notes,note,rss-key,api-token}\n        add                 posts/add\n        delete              posts/delete\n        get                 posts/get\n        recent              posts/recent\n        dates               posts/dates\n        bookmarks           posts/all\n        suggest-tags        posts/suggest\n        tags                tags/get\n        delete-tag          tags/delete\n        rename-tag          tags/rename\n        notes               notes/list\n        note                notes/ID\n        rss-key             user/secret\n        api-token           user/api_token\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --raw                 Print the raw data from the Pinboard API without any\n                            formatting.\n\n\u2026or help for a specific subcommand by passing the subcommand and then\nthe \u201c-h\u201d flag.\n\n.. code:: sh\n\n    $ pinboard bookmarks -h\n    usage: pinboard bookmarks [-h] [--from_date FROM_DATE] [--to_date TO_DATE]\n                              [--tags TAGS [TAGS ...]] [--count COUNT]\n                              [--offset OFFSET]\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --from_date FROM_DATE\n      --to_date TO_DATE\n      --tags TAGS [TAGS ...]\n      --count COUNT\n      --offset OFFSET\n\nUsing the CLI in Docker\n~~~~~~~~~~~~~~~~~~~~~~~\n\nTo build the CLI in Docker:\n\n.. code:: sh\n\n    $ cd <https://github.com/lionheart/pinboard.py/blob/master/path_to_pinboard>/bin\n    $ docker build -t pinboard .\n\nTo run the CLI in Docker after building:\n\n.. code:: sh\n\n    $ export PINBOARD_TOKEN=<https://github.com/lionheart/pinboard.py/blob/master/your_pinboard_token>\n    $ docker run -ti -e PINBOARD_TOKEN pinboard bookmarks --count 10\n\nSupport\n-------\n\nIf you like this library, you might want to check out `Pushpin for\nPinboard <https://itunes.apple.com/us/app/pushpin-for-pinboard/id548052590?mt=8&uo=4&at=1l3vbEC>`__.\n\n.. _license-licenselicense-imagelicense-url:\n\nLicense |License|\n-----------------\n\nApache License, Version 2.0. See `LICENSE <https://github.com/lionheart/pinboard.py/blob/master/LICENSE>`__ for details.\n\n.. raw:: html\n\n   <!-- https://circleci.com/gh/lionheart/pinboard.py/tree/master.png?circle-token=d50700e1c75836063a7951f80ab1913cf6447acf -->\n\n.. |image0| image:: meta/repo-banner.png\n.. |image1| image:: meta/repo-banner-bottom.png\n   :target: https://github.com/lionheart/pinboard.py/blob/master/https://lionheartsw.com/\n.. |CI Status| image:: http://img.shields.io/travis/lionheart/pinboard.py.svg?style=flat\n   :target: https://github.com/lionheart/pinboard.py/blob/master/https://travis-ci.org/lionheart/pinboard.py\n.. |Version| image:: http://img.shields.io/pypi/v/pinboard.svg?style=flat\n   :target: https://github.com/lionheart/pinboard.py/blob/master/https://pypi.python.org/pypi/pinboard\n.. |Versions| image:: https://img.shields.io/pypi/pyversions/pinboard.svg?style=flat\n   :target: https://github.com/lionheart/pinboard.py/blob/master/https://pypi.python.org/pypi/pinboard\n.. |License| image:: http://img.shields.io/pypi/l/pinboard.py.svg?style=flat\n   :target: https://github.com/lionheart/pinboard.py/blob/master/LICENSE\n\n\n", "description_content_type": "", "docs_url": "https://pythonhosted.org/pinboard/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/lionheart/pinboard.py", "keywords": "pinboard", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "pinboard", "package_url": "https://pypi.org/project/pinboard/", "platform": "", "project_url": "https://pypi.org/project/pinboard/", "project_urls": {"Homepage": "http://github.com/lionheart/pinboard.py"}, "release_url": "https://pypi.org/project/pinboard/2.1.8/", "requires_dist": null, "requires_python": "", "summary": "A Python wrapper for Pinboard.in", "version": "2.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            |image0| |image1|<br><br>|CI Status| |Version| |Versions|<br><br>Pinboard.py is an easy-to-use and fully-functional Python wrapper and<br>`command-line utility &lt;https://github.com/lionheart/pinboard.py#command-line&gt;`__ for the Pinboard.in API.<br><br>Installation<br>------------<br><br>Pinboard.py is available for download through the Python Package Index<br>(PyPi). You can install it right away using pip or easy_install.<br><br>If you\u2019re using Python 3 or above:<br><br>.. code:: bash<br><br>    pip install \"pinboard&gt;=2.0\"<br><br>For Python 2.7:<br><br>.. code:: bash<br><br>    pip install \"pinboard&gt;=1.0,&lt;2.0\"<br><br>Usage<br>-----<br><br>To get started, you\u2019re going to need to get your Pinboard API token from<br>the `password page &lt;https://pinboard.in/settings/password&gt;`__ on the<br>Pinboard website. Once you\u2019ve got that, you\u2019re ready to go.<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; import pinboard<br>    &gt;&gt;&gt; pb = pinboard.Pinboard(api_token)<br><br>Once you\u2019ve done this, you can now use the ``pb`` object to make calls<br>to the Pinboard API. Here are some examples:<br><br>Update<br>~~~~~~<br><br>Returns the most recent time a bookmark was added, updated or deleted.<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.update()<br>    datetime.datetime(2014, 7, 27, 18, 11, 29)<br><br>Posts<br>~~~~~<br><br>Add a bookmark:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.add(url=\"http://google.com/\", description=\"A Great Search Engine\", \\<br>            extended=\"This is a description!\", tags=[\"search\", \"tools\"], shared=True, \\<br>            toread=False)<br>    True<br><br>Update a bookmark:<br><br>.. code:: pycon<br><br>    # First, retrieve the bookmark you'd like to edit<br>    &gt;&gt;&gt; bookmark = pb.posts.get(url='http://google.com/')['posts'][0]<br>    &gt;&gt;&gt; bookmark<br>    &lt;Bookmark description=\"A Great Search Engine\" url=\"google.com\"&gt;<br><br>    # You can now change description, extended, shared, toread, tags, or time directly with the bookmark object.<br>    &gt;&gt;&gt; bookmark.description = \"Google is pretty awesome\"<br>    &gt;&gt;&gt; bookmark.tags = [\"search\", \"searching\"]<br>    &gt;&gt;&gt; bookmark.save()<br>    True<br><br>    # If you want to update the bookmark creation date as well, you'll need to pass in `update_time=True` to the save method<br>    &gt;&gt;&gt; import datetime<br>    &gt;&gt;&gt; bookmark.time = datetime.datetime.now() - datetime.timedelta(days=5)<br>    &gt;&gt;&gt; bookmark.save(update_time=True)<br><br>Delete a bookmark:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.delete(url=\"http://google.com/\")<br>    True<br><br>Get one or more posts on a single day matching the parameters:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.get(url=\"http://google.com/\")<br>    {u'date': datetime.datetime(2014, 7, 25, 16, 35, 25),<br>     u'posts': [&lt;Bookmark description=\"A Great Search Engine\" url=\"google.com\"&gt;],<br>     u'user': u'dlo'}<br><br>    &gt;&gt;&gt; import datetime<br>    &gt;&gt;&gt; pb.posts.get(dt=datetime.date.today())<br>    {u'date': datetime.datetime(2014, 7, 25, 16, 35, 25),<br>     u'posts': [&lt;Bookmark description=\"A Great Search Engine\" url=\"google.com\"&gt;,<br>      &lt;Bookmark description=\"Smooth Scrolling | CSS-Tricks\" url=\"css-tricks.com\"&gt;,<br>      &lt;Bookmark description=\"Apple \"Frustrated\" that \"People Don't Want to Pay Anything\" on Mobile, Says 'The Banner Saga' Developer | Touch Arcade\" url=\"toucharcade.com\"&gt;],<br>     u'user': u'dlo'}<br><br>Return all recent bookmarks (optionally filtering by tag):<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.recent(tag=[\"programming\", \"python\"])<br>    {u'date': datetime.datetime(2014, 4, 28, 2, 7, 58),<br>     u'posts': [&lt;Bookmark description=\"itunesfs 1.0.0.7 : Python Package Index\" url=\"pypi.python.org\"&gt;,<br>      &lt;Bookmark description=\"mincss \"Clears the junk out of your CSS\" - Peterbe.com\" url=\"www.peterbe.com\"&gt;,<br>      &lt;Bookmark description=\"Braintree Test Credit Card Account Numbers\" url=\"www.braintreepayments.com\"&gt;,<br>      &lt;Bookmark description=\"Valued Lessons: Monads in Python (with nice syntax!)\" url=\"www.valuedlessons.com\"&gt;,<br>      &lt;Bookmark description=\"Paste #EGY1XPQxQ2UPuT91SH83 at spacepaste\" url=\"bpaste.net\"&gt;,<br>      &lt;Bookmark description=\"40 Random Letters and Numbers\" url=\"gist.github.com\"&gt;,<br>      &lt;Bookmark description=\"PEP 3156 -- Asynchronous IO Support Rebooted\" url=\"www.python.org\"&gt;,<br>      &lt;Bookmark description=\"Brython\" url=\"www.brython.info\"&gt;,<br>      &lt;Bookmark description=\"Django REST framework\" url=\"django-rest-framework.org\"&gt;,<br>      &lt;Bookmark description=\"mypy - A New Python Variant with Dynamic and Static Typing\" url=\"www.mypy-lang.org\"&gt;,<br>      &lt;Bookmark description=\"Julython 2012\" url=\"www.julython.org\"&gt;,<br>      &lt;Bookmark description=\"Stripe Blog: Exploring Python Using GDB\" url=\"stripe.com\"&gt;,<br>      &lt;Bookmark description=\"Python FAQ: Descriptors - fuzzy notepad\" url=\"me.veekun.com\"&gt;,<br>      &lt;Bookmark description=\"A Guide to Python's Magic Methods \u00ab rafekettler.com\" url=\"www.rafekettler.com\"&gt;,<br>      &lt;Bookmark description=\"Melopy\" url=\"prezjordan.github.com\"&gt;,<br>      &lt;Bookmark description=\"litl/rauth\" url=\"github.com\"&gt;],<br>     u'user': u'dlo'}<br><br>Return a list of dates with the number of posts at each date:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.dates(tag=[\"programming\", \"python\"])<br>    {u'dates': {datetime.date(2008, 12, 5): 1,<br>      datetime.date(2008, 12, 6): 1,<br>      ...<br>      datetime.date(2014, 7, 24): 6,<br>      datetime.date(2014, 7, 25): 4},<br>     u'tag': u'programming+python',<br>     u'user': u'dlo'}<br><br>Get all bookmarks in your account:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.all()<br>    [&lt;Bookmark description=\"Of Princesses and Dragons\" url=\"medium.com\"&gt;<br>     &lt;Bookmark description=\"A Great Search Engine\" url=\"google.com\"&gt;,<br>     ...<br>     &lt;Bookmark description=\"Runner Econ 101 - StimHa\" url=\"stimhack.com\"&gt;,<br>     &lt;Bookmark description=\"\uc11c\uc778\uad6d, \ud0c4\ud0c4 \uadfc\uc721+ \ud0dc\ud3c9\uc591 \uc5b4\uae68\u2026\uc5b4\ubd80\ubc14 \ubd80\ub978\ub2e4 : \ub124\uc774\" url=\"news.naver.com\"&gt;]<br><br>You can also filter by tag, start, results, fromdt, or todt.<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; import datetime<br>    &gt;&gt;&gt; five_days_ago = datetime.datetime.now() - datetime.timedelta(days=5)<br>    &gt;&gt;&gt; pb.posts.all(tag=[\"programming\"], start=10, results=100, fromdt=five_days_ago)<br>    [&lt;Bookmark description=\"Of Princesses and Dragons\" url=\"medium.com\"&gt;<br>     &lt;Bookmark description=\"A Great Search Engine\" url=\"google.com\"&gt;,<br>     ...<br>     &lt;Bookmark description=\"Runner Econ 101 - StimHa\" url=\"stimhack.com\"&gt;,<br>     &lt;Bookmark description=\"\uc11c\uc778\uad6d, \ud0c4\ud0c4 \uadfc\uc721+ \ud0dc\ud3c9\uc591 \uc5b4\uae68\u2026\uc5b4\ubd80\ubc14 \ubd80\ub978\ub2e4 : \ub124\uc774\" url=\"news.naver.com\"&gt;]<br><br>Tags<br>~~~~<br><br>Suggest tags for a given URL:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.posts.suggest(url=\"https://pinboard.in\")<br>    [{u'popular': [u'pinboard']},<br>     {u'recommended': [u'bookmark',<br>       u'bookmarks',<br>       u'\\uc815\\ubcf4\\ud1b5\\uc2e0',<br>       u'pinboard',<br>       u'Unread',<br>       u'webservice']}]<br><br>Return all tags in your account along with the number of times they were<br>used:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.tags.get()<br>    [&lt;Tag name=\"absurd\" count=1&gt;,<br>    &lt;Tag name=\"accessibility\" count=2&gt;,<br>    &lt;Tag name=\"accounting\" count=3&gt;,<br>    &lt;Tag name=\"zen\" count=1&gt;,<br>    &lt;Tag name=\"zsh\" count=1&gt;,<br>    &lt;Tag name=\"zynga\" count=1&gt;]<br><br>Delete a tag:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.tags.delete(tag=\"zynga\")<br>    True<br><br>Rename a tag:<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; pb.tags.rename(old='ppython', new='python')<br>    True<br><br>Miscellaneous<br>~~~~~~~~~~~~~<br><br>By default, pinboard.py will return parsed JSON objects. If you\u2019d like<br>the raw response object for a request, just pass in<br>``parse_response=False``.<br><br>.. code:: pycon<br><br>    &gt;&gt;&gt; response = pb.tags.get(parse_response=False)<br>    &gt;&gt;&gt; response<br>    &lt;addinfourl at 4396047680 whose fp = &lt;socket._fileobject object at 0x105f79850&gt;&gt;<br>    &gt;&gt;&gt; response.read()<br>    ... your tags ...<br><br>Pinboard.py maps 1-1 to the Pinboard API (e.g., pb.one.two.three() will<br>send a request to \u201chttps://api.pinboard.in/v1/one/two/three\u201d). For more<br>information on other methods and usage, please read the `Pinboard API<br>documentation &lt;https://pinboard.in/api/&gt;`__.<br><br>One more note\u2013you might have noticed that there is no \u201ctitle\u201d attribute<br>for bookmarks. This has been done since the Pinboard API calls titles<br>\u201cdescriptions\u201d and descriptions \u201cextended\u201d (and this was done to stay<br>consistent with the Delicious API, way back in the day). In order to<br>keep things minimally confusing, this library sticks to how Pinboard<br>names these fields. Just remember\u2013\u201cdescription\u201d means \u201ctitle\u201d and<br>\u201cextended\u201d means \u201cdescription\u201d.<br><br>Command Line<br>------------<br><br>In addition to providing full Python-level support for the Pinboard API,<br>pinboard.py also comes bundled with a handy command-line utility called<br>\u201cpinboard\u201d. Just type \u201cpinboard -h\u201d for a full list of supported<br>commands. Your API token needs to be available to pinboard.py, and can<br>be entered in several ways. Firstly pinboard.py will try to read the<br>~/.pinboardrc configuration file. If not present then it will try to<br>read an environment variable called ``PINBOARD_TOKEN``. Lastly it will<br>show a shell prompt for the user to enter their token (you can<br>immediately force the latter behavior by typing ``pinboard login``).<br><br>All of the commands pre-process and indent the JSON output. If you would<br>like to shoot the raw response data to stdout, just pass \u201c\u2013raw\u201d before<br>the subcommand (e.g., \u201cpinboard \u2013raw bookmarks\u201d).<br><br>Examples:<br><br>.. code:: sh<br><br>    $ pinboard login<br>    Enter your Pinboard API token: username:XXXXX<br>    Saved Pinboard credentials to ~/.pinboardrc<br>    $ pinboard suggest-tags --url http://pymotw.com/2/argparse/<br>    [<br>        {<br>            \"popular\": [<br>                \"python\"<br>            ]<br>        },<br>        {<br>            \"recommended\": [<br>                \"python\",<br>                \"argument\",<br>                \"parsing\"<br>            ]<br>        }<br>    ]<br>    $ pinboard get --date 7-13-2014<br>    {<br>        \"date\": \"2014-07-13T03:03:58Z\",<br>        \"posts\": [<br>            {<br>                \"extended\": \"\",<br>                \"hash\": \"e2311835eb0de6bff2595a9b1525bb98\",<br>                \"description\": \"Python 2.7.x and Python 3.x key differences\",<br>                \"tags\": \"python\",<br>                \"href\": \"http://sebastianraschka.com/Articles/2014_python_2_3_key_diff.html\",<br>                \"meta\": \"561d1f53791a8c50109393411f0301fc\",<br>                \"time\": \"2014-07-13T03:03:58Z\",<br>                \"shared\": \"yes\",<br>                \"toread\": \"no\"<br>            },<br>            {<br>                \"extended\": \"\",<br>                \"hash\": \"4abe28f70154bd35f84be73cec0c53ef\",<br>                \"description\": \"Miami, the great world city, is drowning while the powers that be look away | World news | The Observer\",<br>                \"tags\": \"\",<br>                \"href\": \"http://www.theguardian.com/world/2014/jul/11/miami-drowning-climate-change-deniers-sea-levels-rising\",<br>                \"meta\": \"2ca547789553ba9d3202a5cd3d367685\",<br>                \"time\": \"2014-07-13T02:53:54Z\",<br>                \"shared\": \"yes\",<br>                \"toread\": \"yes\"<br>            }<br>        ],<br>        \"user\": \"dlo\"<br>    }<br>    $ pinboard --raw get --date 7/13/2014<br>    {\"date\":\"2014-07-13T03:03:58Z\",\"user\":\"dlo\",\"posts\":[{\"href\":\"http:\\/\\/sebastianraschka.com\\/Articles\\/2014_python_2_3_key_diff.html\",\"description\":\"Python 2.7.x and Python 3.x key differences\",\"extended\":\"\",\"meta\":\"561d1f53791a8c50109393411f0301fc\",\"hash\":\"e2311835eb0de6bff2595a9b1525bb98\",\"time\":\"2014-07-13T03:03:58Z\",\"shared\":\"yes\",\"toread\":\"no\",\"tags\":\"python\"},{\"href\":\"http:\\/\\/www.theguardian.com\\/world\\/2014\\/jul\\/11\\/miami-drowning-climate-change-deniers-sea-levels-rising\",\"description\":\"Miami, the great world city, is drowning while the powers that be look away | World news | The Observer\",\"extended\":\"\",\"meta\":\"2ca547789553ba9d3202a5cd3d367685\",\"hash\":\"4abe28f70154bd35f84be73cec0c53ef\",\"time\":\"2014-07-13T02:53:54Z\",\"shared\":\"yes\",\"toread\":\"yes\",\"tags\":\"\"}]}<br><br>You can print a full list of pinboard commands by passing the \u201c-h\u201d flag.<br><br>.. code:: sh<br><br>    $ pinboard -h<br>    usage: pinboard [-h] [--raw]<br><br>                    {login,last-update,add,delete,get,recent,dates,bookmarks,suggest-tags,tags,delete-tag,rename-tag,notes,note,rss-key,api-token}<br>                    ...<br><br>    positional arguments:<br>      {login,last-update,add,delete,get,recent,dates,bookmarks,suggest-tags,tags,delete-tag,rename-tag,notes,note,rss-key,api-token}<br>        add                 posts/add<br>        delete              posts/delete<br>        get                 posts/get<br>        recent              posts/recent<br>        dates               posts/dates<br>        bookmarks           posts/all<br>        suggest-tags        posts/suggest<br>        tags                tags/get<br>        delete-tag          tags/delete<br>        rename-tag          tags/rename<br>        notes               notes/list<br>        note                notes/ID<br>        rss-key             user/secret<br>        api-token           user/api_token<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      --raw                 Print the raw data from the Pinboard API without any<br>                            formatting.<br><br>\u2026or help for a specific subcommand by passing the subcommand and then<br>the \u201c-h\u201d flag.<br><br>.. code:: sh<br><br>    $ pinboard bookmarks -h<br>    usage: pinboard bookmarks [-h] [--from_date FROM_DATE] [--to_date TO_DATE]<br>                              [--tags TAGS [TAGS ...]] [--count COUNT]<br>                              [--offset OFFSET]<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      --from_date FROM_DATE<br>      --to_date TO_DATE<br>      --tags TAGS [TAGS ...]<br>      --count COUNT<br>      --offset OFFSET<br><br>Using the CLI in Docker<br>~~~~~~~~~~~~~~~~~~~~~~~<br><br>To build the CLI in Docker:<br><br>.. code:: sh<br><br>    $ cd &lt;https://github.com/lionheart/pinboard.py/blob/master/path_to_pinboard&gt;/bin<br>    $ docker build -t pinboard .<br><br>To run the CLI in Docker after building:<br><br>.. code:: sh<br><br>    $ export PINBOARD_TOKEN=&lt;https://github.com/lionheart/pinboard.py/blob/master/your_pinboard_token&gt;<br>    $ docker run -ti -e PINBOARD_TOKEN pinboard bookmarks --count 10<br><br>Support<br>-------<br><br>If you like this library, you might want to check out `Pushpin for<br>Pinboard &lt;https://itunes.apple.com/us/app/pushpin-for-pinboard/id548052590?mt=8&amp;uo=4&amp;at=1l3vbEC&gt;`__.<br><br>.. _license-licenselicense-imagelicense-url:<br><br>License |License|<br>-----------------<br><br>Apache License, Version 2.0. See `LICENSE &lt;https://github.com/lionheart/pinboard.py/blob/master/LICENSE&gt;`__ for details.<br><br>.. raw:: html<br><br>   &lt;!-- https://circleci.com/gh/lionheart/pinboard.py/tree/master.png?circle-token=d50700e1c75836063a7951f80ab1913cf6447acf --&gt;<br><br>.. |image0| image:: meta/repo-banner.png<br>.. |image1| image:: meta/repo-banner-bottom.png<br>   :target: https://github.com/lionheart/pinboard.py/blob/master/https://lionheartsw.com/<br>.. |CI Status| image:: http://img.shields.io/travis/lionheart/pinboard.py.svg?style=flat<br>   :target: https://github.com/lionheart/pinboard.py/blob/master/https://travis-ci.org/lionheart/pinboard.py<br>.. |Version| image:: http://img.shields.io/pypi/v/pinboard.svg?style=flat<br>   :target: https://github.com/lionheart/pinboard.py/blob/master/https://pypi.python.org/pypi/pinboard<br>.. |Versions| image:: https://img.shields.io/pypi/pyversions/pinboard.svg?style=flat<br>   :target: https://github.com/lionheart/pinboard.py/blob/master/https://pypi.python.org/pypi/pinboard<br>.. |License| image:: http://img.shields.io/pypi/l/pinboard.py.svg?style=flat<br>   :target: https://github.com/lionheart/pinboard.py/blob/master/LICENSE<br><br><br>\n          </div>"}, "last_serial": 4366586, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "d4723161295439b9e364c37fb371d831", "sha256": "2c4da61b570c16cc7ba071e0c0973661806c3fda0c66fae8f918b1dfca089d5c"}, "downloads": -1, "filename": "pinboard-0.1.tar.gz", "has_sig": true, "md5_digest": "d4723161295439b9e364c37fb371d831", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3673, "upload_time": "2014-07-24T20:47:06", "upload_time_iso_8601": "2014-07-24T20:47:06.500803Z", "url": "https://files.pythonhosted.org/packages/57/fc/c637ff40acf67100c2bb3f0f9d0f284e0bb1685ef4f07e2a7ddaf64050de/pinboard-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c7bf6fbb66cd3212ee8ab26950ddb0a9", "sha256": "5bf875815d5af61795409e0eb28ac3bc8ae5a35090b5874ce46f4cdd6de5fa44"}, "downloads": -1, "filename": "pinboard-0.2.tar.gz", "has_sig": true, "md5_digest": "c7bf6fbb66cd3212ee8ab26950ddb0a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4051, "upload_time": "2014-07-24T21:48:11", "upload_time_iso_8601": "2014-07-24T21:48:11.856779Z", "url": "https://files.pythonhosted.org/packages/01/1e/1bdce1fece4f376435fea11f2d9050d00af419a6225ec7d96a78e64c6d26/pinboard-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5d9bbff9577c6e049734d4235b3f2454", "sha256": "c16db757e0d9321dc9a99a7f73c3a564067d0b8afeee001678272b883023f729"}, "downloads": -1, "filename": "pinboard-0.3.tar.gz", "has_sig": true, "md5_digest": "5d9bbff9577c6e049734d4235b3f2454", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6482, "upload_time": "2014-07-25T17:30:49", "upload_time_iso_8601": "2014-07-25T17:30:49.917027Z", "url": "https://files.pythonhosted.org/packages/f0/c7/0170739637672ffbb60284dacabbfd368fdb37eb109a672c7d1a57577dbe/pinboard-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "22134f6e6995ac7032efcb02064f8f3d", "sha256": "23ddc4ff25c5079398a9d81e2c78ebdf44fd941564d3487e42d396914eab9ea6"}, "downloads": -1, "filename": "pinboard-0.3.1.tar.gz", "has_sig": true, "md5_digest": "22134f6e6995ac7032efcb02064f8f3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6477, "upload_time": "2014-07-25T19:36:38", "upload_time_iso_8601": "2014-07-25T19:36:38.243901Z", "url": "https://files.pythonhosted.org/packages/36/c5/5575cb360f996ab7abdb18ad10196a4478cf3ce567f03bf2e39c6d361ec4/pinboard-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "ca7cdc2b9cf9a3415fba2d0411902bdc", "sha256": "b9f6e9fd3728c4c9a25c271e0cc0fd6b3591b14552b1c7823f5ec58602efd620"}, "downloads": -1, "filename": "pinboard-0.4.tar.gz", "has_sig": true, "md5_digest": "ca7cdc2b9cf9a3415fba2d0411902bdc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9238, "upload_time": "2014-07-26T22:32:47", "upload_time_iso_8601": "2014-07-26T22:32:47.017629Z", "url": "https://files.pythonhosted.org/packages/5d/5a/f9b129ba5c2eb28c404614230387fc914af16640af358b152279fa280890/pinboard-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "af2ee3b8b6a058d47b6886925ac81d8d", "sha256": "5976646dc3b87e942c414822ace48e63bce72ca4239030b061790607a06c2432"}, "downloads": -1, "filename": "pinboard-0.4.1.tar.gz", "has_sig": true, "md5_digest": "af2ee3b8b6a058d47b6886925ac81d8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9243, "upload_time": "2014-07-26T22:34:21", "upload_time_iso_8601": "2014-07-26T22:34:21.500639Z", "url": "https://files.pythonhosted.org/packages/4f/98/1af4d222e6d244d1506529f77ca12d73948797ec396fdafe7e4817e4ae8f/pinboard-0.4.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "8110d4118a025c50c313eb0085032b80", "sha256": "79a101199d8a35fdd1faf9f005e446534807322a724924519916c7e7d36ad041"}, "downloads": -1, "filename": "pinboard-0.5.tar.gz", "has_sig": true, "md5_digest": "8110d4118a025c50c313eb0085032b80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10741, "upload_time": "2014-07-27T14:21:09", "upload_time_iso_8601": "2014-07-27T14:21:09.280047Z", "url": "https://files.pythonhosted.org/packages/0b/c5/20e57d38a9a5bf9775bcde999e4acd8e2ccb543f2626ec571fc93c9d0d3e/pinboard-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8070a11a8672ed6484d87a96eb9b58f7", "sha256": "629de3d63079d4cbb0a969e5ab50dcb2fcc977662f427d0ac19e43edd405fcf4"}, "downloads": -1, "filename": "pinboard-0.5.1.tar.gz", "has_sig": true, "md5_digest": "8070a11a8672ed6484d87a96eb9b58f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10921, "upload_time": "2014-07-27T14:25:28", "upload_time_iso_8601": "2014-07-27T14:25:28.295910Z", "url": "https://files.pythonhosted.org/packages/df/e6/c7475de71982a62bfc07696d64c8256fb348d94d30651f0e61bd8c7007c2/pinboard-0.5.1.tar.gz", "yanked": false}], "0.5.10": [{"comment_text": "", "digests": {"md5": "8502a6af7cda7d1a479e938fa83f35b7", "sha256": "4effa1aca254caa5a4c82ed4aa30740e6c0d33fd78f151570ccaabf4cbe30487"}, "downloads": -1, "filename": "pinboard-0.5.10.tar.gz", "has_sig": true, "md5_digest": "8502a6af7cda7d1a479e938fa83f35b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11922, "upload_time": "2015-06-25T14:55:17", "upload_time_iso_8601": "2015-06-25T14:55:17.770816Z", "url": "https://files.pythonhosted.org/packages/3c/e2/6c7c7e1d88e32b1c84cd166d14fd5d9d7e650409a951b8a2f19ee12d4b6b/pinboard-0.5.10.tar.gz", "yanked": false}], "0.5.11": [{"comment_text": "", "digests": {"md5": "5cc51bac9b862212c766a475f19eeead", "sha256": "17791c1de7697e9485d4fdd67ab698c932398fa4f356c4adf9852c6d5b8d2d49"}, "downloads": -1, "filename": "pinboard-0.5.11.tar.gz", "has_sig": true, "md5_digest": "5cc51bac9b862212c766a475f19eeead", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11928, "upload_time": "2016-11-01T16:07:53", "upload_time_iso_8601": "2016-11-01T16:07:53.338395Z", "url": "https://files.pythonhosted.org/packages/ce/24/7ce4084919695c5d4649821097a6653961bc917dbe145446cf895accc31a/pinboard-0.5.11.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "ced4231805f4dbbb9acd3cc28be80918", "sha256": "fd837e263c8455a25dff58c2feb5545c7e1c94744ea3937f10751f7c3f603128"}, "downloads": -1, "filename": "pinboard-0.5.2.tar.gz", "has_sig": true, "md5_digest": "ced4231805f4dbbb9acd3cc28be80918", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10960, "upload_time": "2014-07-27T14:38:04", "upload_time_iso_8601": "2014-07-27T14:38:04.219637Z", "url": "https://files.pythonhosted.org/packages/79/dd/609e6912a1963ac2c39fd4f2ea74c84cdf27e57413802d4b21347b0bc7f7/pinboard-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "b1e6c0ee60ae57395d477f6ab940428a", "sha256": "11d615485089f2feba9ce865d0f9aec67290c1d521d5e5e52552cf49b79611eb"}, "downloads": -1, "filename": "pinboard-0.5.3.tar.gz", "has_sig": true, "md5_digest": "b1e6c0ee60ae57395d477f6ab940428a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11180, "upload_time": "2014-07-27T17:10:09", "upload_time_iso_8601": "2014-07-27T17:10:09.073525Z", "url": "https://files.pythonhosted.org/packages/fe/ad/31791da9847e54880f5666f73241b57876155b28ee59b4ecee0f202de557/pinboard-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "726090e4ae1461bf630abadc4126f918", "sha256": "c66c4c7d8106c01edaf290a57c517f7fafd6471cfa5eaf8fcdd4dc7a6165754c"}, "downloads": -1, "filename": "pinboard-0.5.4.tar.gz", "has_sig": true, "md5_digest": "726090e4ae1461bf630abadc4126f918", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11465, "upload_time": "2014-07-27T18:25:35", "upload_time_iso_8601": "2014-07-27T18:25:35.119131Z", "url": "https://files.pythonhosted.org/packages/66/4f/4659694713040589f94d1cb4417a0a3445172c782c23d401b8ea2a566a6a/pinboard-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "5e823a449ebb1ae7b225fa99b132d1db", "sha256": "2fe852eb18f016d8e885af95e427c2a1a920775c5e999e845cca0e2a44f286c6"}, "downloads": -1, "filename": "pinboard-0.5.5.tar.gz", "has_sig": true, "md5_digest": "5e823a449ebb1ae7b225fa99b132d1db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11740, "upload_time": "2014-07-27T19:17:35", "upload_time_iso_8601": "2014-07-27T19:17:35.919987Z", "url": "https://files.pythonhosted.org/packages/47/c9/e5ebd33c191df46d00eb4382ff45b428474cafce19e9cc0cf2012feb7dc3/pinboard-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "e5e9244cb14b2a5f06a61901537ed01e", "sha256": "bcbc0edd557f938eeaace6a2d9eb0111d54c54a7ebfc5a00766538c7b915dfa7"}, "downloads": -1, "filename": "pinboard-0.5.6.tar.gz", "has_sig": true, "md5_digest": "e5e9244cb14b2a5f06a61901537ed01e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11747, "upload_time": "2014-07-28T15:31:55", "upload_time_iso_8601": "2014-07-28T15:31:55.030039Z", "url": "https://files.pythonhosted.org/packages/ee/58/76b82adb5851cde7313c762a9dda45b1c16653358af404018716b8f949a6/pinboard-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "816e543d60c587977b072d82df4a89ab", "sha256": "21a99cf8391990ed42332d133c055e0560eaa5d17b30ec39e999fcb022a04f46"}, "downloads": -1, "filename": "pinboard-0.5.7.tar.gz", "has_sig": true, "md5_digest": "816e543d60c587977b072d82df4a89ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11902, "upload_time": "2014-10-09T15:51:09", "upload_time_iso_8601": "2014-10-09T15:51:09.230647Z", "url": "https://files.pythonhosted.org/packages/85/96/823ae05d8d9e2d3384e3a962e386fe09e0b0cf599425862e986f6b86d885/pinboard-0.5.7.tar.gz", "yanked": false}], "0.5.8": [{"comment_text": "", "digests": {"md5": "0e4945962f95cf21c65c280cad2d68fb", "sha256": "10d95adf050e55706e10ab7fd498f3a3037e01611bb4054f7a4f0b4dd5f06bbc"}, "downloads": -1, "filename": "pinboard-0.5.8.tar.gz", "has_sig": true, "md5_digest": "0e4945962f95cf21c65c280cad2d68fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11878, "upload_time": "2015-03-13T22:09:01", "upload_time_iso_8601": "2015-03-13T22:09:01.035472Z", "url": "https://files.pythonhosted.org/packages/e3/55/99fb9fb6a869130615a265c8361f4308c855d3887ab99cc19837826d3d27/pinboard-0.5.8.tar.gz", "yanked": false}], "0.5.9": [{"comment_text": "", "digests": {"md5": "203a54dacb5fe288cf4b195c1a556cf6", "sha256": "11146c3eab72b42a74bbf290ef459b8d2d659d4538634330396cf4fe351d9f0e"}, "downloads": -1, "filename": "pinboard-0.5.9.tar.gz", "has_sig": true, "md5_digest": "203a54dacb5fe288cf4b195c1a556cf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11893, "upload_time": "2015-03-25T19:15:00", "upload_time_iso_8601": "2015-03-25T19:15:00.164702Z", "url": "https://files.pythonhosted.org/packages/67/4c/a2cbe761f4993ac4e42945668816705e046b9b6ce1b1a449b5b1292eae4a/pinboard-0.5.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "34fc23df87aac5d746af80e7132df0d2", "sha256": "1acb7a9404a768bda0ad477136466f7dd5b0f00a76f3965f48a688d41f9cc101"}, "downloads": -1, "filename": "pinboard-1.0.0.tar.gz", "has_sig": true, "md5_digest": "34fc23df87aac5d746af80e7132df0d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11927, "upload_time": "2016-11-01T16:21:40", "upload_time_iso_8601": "2016-11-01T16:21:40.445450Z", "url": "https://files.pythonhosted.org/packages/c5/98/608ad900d430b35bbef1e7e3aab50907059a6e866fc7b4a040d889f0d4ce/pinboard-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "6e726a91754fcbdb6d59502be8acb165", "sha256": "e5689ac585eb5124449f37590045871bacb39b04d281d8ccc885d664a6a7b53f"}, "downloads": -1, "filename": "pinboard-2.0.0.tar.gz", "has_sig": true, "md5_digest": "6e726a91754fcbdb6d59502be8acb165", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12522, "upload_time": "2017-08-12T23:19:00", "upload_time_iso_8601": "2017-08-12T23:19:00.186080Z", "url": "https://files.pythonhosted.org/packages/e6/ce/e259a57ad7f9df6bd0f2441a0f570b3149919ffd6428f71c1ee93cf6928c/pinboard-2.0.0.tar.gz", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "a2397c9365cb59fa909b25e405dabe78", "sha256": "eef5b8266c9e6a25119c3d98a5ab991e355799f6af0f2d44e671dc24c5390ba9"}, "downloads": -1, "filename": "pinboard-2.0.1.tar.gz", "has_sig": true, "md5_digest": "a2397c9365cb59fa909b25e405dabe78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12564, "upload_time": "2017-08-12T23:28:09", "upload_time_iso_8601": "2017-08-12T23:28:09.203961Z", "url": "https://files.pythonhosted.org/packages/19/e2/46f9bd934bf7a2dc88f0224b5bf332f3d728e7c91092a54ff19b05782d58/pinboard-2.0.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "bf347247b0106610fd3d6872e251afe6", "sha256": "6ce5ecc76256a81caa68c746fd38abc6563e225e0326970d5b34bb63680f0e36"}, "downloads": -1, "filename": "pinboard-2.0.2.tar.gz", "has_sig": true, "md5_digest": "bf347247b0106610fd3d6872e251afe6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12563, "upload_time": "2017-08-12T23:31:16", "upload_time_iso_8601": "2017-08-12T23:31:16.877806Z", "url": "https://files.pythonhosted.org/packages/08/bb/baba79f535db687ba23c0b490cec9030b40890ccbe6a7d08a04b0ba8858b/pinboard-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "a3a3f6178672a4e838f66b890db15345", "sha256": "23d0d03b96c55fa6e7403047b032ab68d5d68d83e17fcde1b8335e816c73280d"}, "downloads": -1, "filename": "pinboard-2.0.3.tar.gz", "has_sig": true, "md5_digest": "a3a3f6178672a4e838f66b890db15345", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12562, "upload_time": "2017-08-12T23:35:10", "upload_time_iso_8601": "2017-08-12T23:35:10.245424Z", "url": "https://files.pythonhosted.org/packages/cb/85/17ba3ce26a7cdeeba5deb5c8a6a5e4c90b9b2bcc761535361483cda5bcc8/pinboard-2.0.3.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "75ec263d015eb451767b04744231467c", "sha256": "c208c725280e3cf0ac781bad2e87f3884929975db095d6d85a15a2c8ccc94f10"}, "downloads": -1, "filename": "pinboard-2.1.0.tar.gz", "has_sig": true, "md5_digest": "75ec263d015eb451767b04744231467c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17286, "upload_time": "2017-10-16T00:17:06", "upload_time_iso_8601": "2017-10-16T00:17:06.853379Z", "url": "https://files.pythonhosted.org/packages/4f/63/31dc07d192b93ff828f7653dd9f550d9bbd1cad7c0315303120dc7a89d86/pinboard-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "a8ed06aeb1a5284d1fed009c7d0e8bea", "sha256": "593a49f230a53b121197a0ce27cba1c6dccfc6ac07bd293cac50582cab16fff7"}, "downloads": -1, "filename": "pinboard-2.1.1-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "a8ed06aeb1a5284d1fed009c7d0e8bea", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19385, "upload_time": "2018-03-02T16:30:33", "upload_time_iso_8601": "2018-03-02T16:30:33.986944Z", "url": "https://files.pythonhosted.org/packages/26/85/a9c02adf561718f0dd28d9f82682a14a8f9dde2c64cd7a656b74e121e4ab/pinboard-2.1.1-py2.py3-none-any.whl", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "ce01756343726d92c8ee0ed1509025ab", "sha256": "f9ebdd00de8d40231d36261ea66411ad52442c51af71629c0b77d132b276b58c"}, "downloads": -1, "filename": "pinboard-2.1.2-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "ce01756343726d92c8ee0ed1509025ab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19394, "upload_time": "2018-03-03T22:15:33", "upload_time_iso_8601": "2018-03-03T22:15:33.501420Z", "url": "https://files.pythonhosted.org/packages/6d/bd/17fc61058708da28b5d8db70e9b567a0f6cfd14003e9b618a9e538842e83/pinboard-2.1.2-py2.py3-none-any.whl", "yanked": false}], "2.1.3": [{"comment_text": "", "digests": {"md5": "1f894cc8585d65b66d62b5ffab0d414e", "sha256": "4f983e4bc1dee23a0a68c85492e605e837a4abb999b06dc92151b79363b67fbf"}, "downloads": -1, "filename": "pinboard-2.1.3-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "1f894cc8585d65b66d62b5ffab0d414e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19394, "upload_time": "2018-03-18T00:46:34", "upload_time_iso_8601": "2018-03-18T00:46:34.644898Z", "url": "https://files.pythonhosted.org/packages/99/e8/1b44d0b010c402a445375f62e26266a50bf5c8d49582b64249ff79cdc851/pinboard-2.1.3-py2.py3-none-any.whl", "yanked": false}], "2.1.4": [{"comment_text": "", "digests": {"md5": "563da809e1aa1d98b0627966bee5f7b4", "sha256": "3db2cdf69ea3b5343a51776487178096a9044d5090fef710e4568826cd63d82d"}, "downloads": -1, "filename": "pinboard-2.1.4-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "563da809e1aa1d98b0627966bee5f7b4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19655, "upload_time": "2018-04-26T19:09:10", "upload_time_iso_8601": "2018-04-26T19:09:10.551632Z", "url": "https://files.pythonhosted.org/packages/26/b3/644601bca35d23899664bb6cd18af2c818c421a82213c2ef57ba01346144/pinboard-2.1.4-py2.py3-none-any.whl", "yanked": false}], "2.1.5": [{"comment_text": "", "digests": {"md5": "d144a8806687c1ffdb494494898dfc87", "sha256": "4b1fc2dee2e357fc3b9995f1db9fa0e3ffceb6dc4b15a2d6a4865c1eb1543761"}, "downloads": -1, "filename": "pinboard-2.1.5-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "d144a8806687c1ffdb494494898dfc87", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13620, "upload_time": "2018-09-17T00:55:05", "upload_time_iso_8601": "2018-09-17T00:55:05.728871Z", "url": "https://files.pythonhosted.org/packages/66/57/2d2cdff0f2c212b90e4dbdf29a4040439b313a70b303f08832ecfbd5a332/pinboard-2.1.5-py2.py3-none-any.whl", "yanked": false}], "2.1.6": [{"comment_text": "", "digests": {"md5": "65a0c29b6efa250d1a5fd8d47252f66b", "sha256": "34dd6ea06ef96c0d13e3501688ae745542b819f766625d1dcab8f288beae8c75"}, "downloads": -1, "filename": "pinboard-2.1.6-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "65a0c29b6efa250d1a5fd8d47252f66b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13623, "upload_time": "2018-09-17T00:57:49", "upload_time_iso_8601": "2018-09-17T00:57:49.684815Z", "url": "https://files.pythonhosted.org/packages/7e/56/db528628ca3c56cdfba66d855836e3082ea80355fd4703f373578cebae01/pinboard-2.1.6-py2.py3-none-any.whl", "yanked": false}], "2.1.7": [{"comment_text": "", "digests": {"md5": "db029d41d8ebc5111390d53b79347159", "sha256": "41148d3f279e993e1d8b77d96db683731f26b1cc5073eeb37b2179d582fafc9c"}, "downloads": -1, "filename": "pinboard-2.1.7-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "db029d41d8ebc5111390d53b79347159", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14011, "upload_time": "2018-10-12T00:59:43", "upload_time_iso_8601": "2018-10-12T00:59:43.743095Z", "url": "https://files.pythonhosted.org/packages/fb/27/f38c4c0f795f63b7209964557ed912af0fdcfe4606abc9c7370de76e1668/pinboard-2.1.7-py2.py3-none-any.whl", "yanked": false}], "2.1.8": [{"comment_text": "", "digests": {"md5": "645c31751a6fc3b83402d5ac9e6ec5b1", "sha256": "82d87bf08e0c00faa339568b0053b49d3afb09f47e389b346389236f4de12f42"}, "downloads": -1, "filename": "pinboard-2.1.8-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "645c31751a6fc3b83402d5ac9e6ec5b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14010, "upload_time": "2018-10-12T01:13:51", "upload_time_iso_8601": "2018-10-12T01:13:51.782315Z", "url": "https://files.pythonhosted.org/packages/10/69/90e9fd6b3f1fec662b06e6c4ac8d074d7f03d44b4e1dfb3c0222d42b6fad/pinboard-2.1.8-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "645c31751a6fc3b83402d5ac9e6ec5b1", "sha256": "82d87bf08e0c00faa339568b0053b49d3afb09f47e389b346389236f4de12f42"}, "downloads": -1, "filename": "pinboard-2.1.8-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "645c31751a6fc3b83402d5ac9e6ec5b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14010, "upload_time": "2018-10-12T01:13:51", "upload_time_iso_8601": "2018-10-12T01:13:51.782315Z", "url": "https://files.pythonhosted.org/packages/10/69/90e9fd6b3f1fec662b06e6c4ac8d074d7f03d44b4e1dfb3c0222d42b6fad/pinboard-2.1.8-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:54:34 2020"}