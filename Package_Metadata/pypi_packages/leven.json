{"info": {"author": "Lars Buitinck", "author_email": "l.j.buitinck@esciencecenter.nl", "bugtrack_url": null, "classifiers": [], "description": "Leven\n=====\n\nLevenshtein edit distance library for Python, Apache-licensed.\nWritten by Lars Buitinck, Netherlands eScience Center, with contributions\nfrom Isaac Sijaranamual, University of Amsterdam.\n\nPerforms distance computations on either byte strings or Unicode codepoints.\n\nInstallation\n------------\n\nMake sure you have Cython and a C++ compiler installed::\n\n    pip install cython\n\nInstalling a C++ compiler is so platform-dependent that I won't show\ninstructions. Consult your package manager.\n\nThen::\n\n    python setup.py install\n\nTo run the tests, but not to actually use leven, you need six and Nose.\n\nUsage\n-----\n\n    >>> from leven import levenshtein\n    >>> levenshtein(\"hello, world!\", \"goodbye, cruel world!\")\n    13\n\nAbout the implementation\n------------------------\n\nThe core algorithms have been implemented in C++. I used this instead of C\nto get templates, easier memory management and a better standard library,\nso the C++ code probably looks C-ish.\n\nTodo\n----\n\n* Implement Ukkonen's algorithm for bounded Levenshtein distance\n* Implement Levenshtein automata for fast neighbor search in string spaces\n* Implement weighted Levenshtein distance\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/semanticize/leven", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "leven", "package_url": "https://pypi.org/project/leven/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/leven/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/semanticize/leven"}, "release_url": "https://pypi.org/project/leven/1.0.4/", "requires_dist": null, "requires_python": null, "summary": "Levenshtein edit distance library", "version": "1.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Levenshtein edit distance library for Python, Apache-licensed.\nWritten by Lars Buitinck, Netherlands eScience Center, with contributions\nfrom Isaac Sijaranamual, University of Amsterdam.</p>\n<p>Performs distance computations on either byte strings or Unicode codepoints.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Make sure you have Cython and a C++ compiler installed:</p>\n<pre>pip install cython\n</pre>\n<p>Installing a C++ compiler is so platform-dependent that I won\u2019t show\ninstructions. Consult your package manager.</p>\n<p>Then:</p>\n<pre>python setup.py install\n</pre>\n<p>To run the tests, but not to actually use leven, you need six and Nose.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; from leven import levenshtein\n&gt;&gt;&gt; levenshtein(\"hello, world!\", \"goodbye, cruel world!\")\n13\n</pre>\n</blockquote>\n</div>\n<div id=\"about-the-implementation\">\n<h2>About the implementation</h2>\n<p>The core algorithms have been implemented in C++. I used this instead of C\nto get templates, easier memory management and a better standard library,\nso the C++ code probably looks C-ish.</p>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Implement Ukkonen\u2019s algorithm for bounded Levenshtein distance</li>\n<li>Implement Levenshtein automata for fast neighbor search in string spaces</li>\n<li>Implement weighted Levenshtein distance</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 926697, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "65bcec29cec3ccd8a053c97bd2a711e3", "sha256": "732474a3b9e94003aab61fd57eb2cbdaf0ed32f9a85b63073bcc4fa1ed5d0aff"}, "downloads": -1, "filename": "leven-1.0.4.tar.gz", "has_sig": false, "md5_digest": "65bcec29cec3ccd8a053c97bd2a711e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20164, "upload_time": "2013-11-22T16:22:01", "upload_time_iso_8601": "2013-11-22T16:22:01.103669Z", "url": "https://files.pythonhosted.org/packages/73/02/37084115516cfd595ee2f9a873fffe8b85c6b1538523ff6a8b8dd7ff7d46/leven-1.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65bcec29cec3ccd8a053c97bd2a711e3", "sha256": "732474a3b9e94003aab61fd57eb2cbdaf0ed32f9a85b63073bcc4fa1ed5d0aff"}, "downloads": -1, "filename": "leven-1.0.4.tar.gz", "has_sig": false, "md5_digest": "65bcec29cec3ccd8a053c97bd2a711e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20164, "upload_time": "2013-11-22T16:22:01", "upload_time_iso_8601": "2013-11-22T16:22:01.103669Z", "url": "https://files.pythonhosted.org/packages/73/02/37084115516cfd595ee2f9a873fffe8b85c6b1538523ff6a8b8dd7ff7d46/leven-1.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:52 2020"}