{"info": {"author": "Florian Berger", "author_email": "fberger@florian-berger.de", "bugtrack_url": null, "classifiers": [], "description": "About\n-----\n\nbikesrv is a server to measure the output of an exercising bike and make\nit available via a web API.\n\nWait, what?\n-----------\n\nOk, you know exercising bikes. That thing that looks like a bike, but\ndoesn't move. You use it when you want to get in shape.\n\nSome of these bikes have an output signal that is fed to a small\ncomputer with a large display across a cable and a mini-jack. The\ndisplay then shows your speed, virtual distance etc.\n\nTurns out that this mini-jack just fits into the audio in of a stock\ncomputer. This is where bikesrv comes into play. It analyses the signal\nfrom the bike and computes the bike's speed.\n\nThe final step is a built-in web server in bikesrv. It makes the current\nspeed is available through a simple HTTP API.\n\nOk, but why?\n------------\n\nYou could do all sorts of analysing and feedback that an ordinary bike\ncomputer does.\n\nBut it is much more fun to turn the exercising bike into a game\ncontroller.\n\nWhat is the HTTP API?\n---------------------\n\nThe server will listen on port 1805. If you call\n\n::\n\n    http://HOST:1805/bikefreq\n\nyou will receive a ``text/plain`` response that contains the current\nnumber of revolutions per second.\n\nPrerequisites\n-------------\n\nPython 2.x http://www.python.org\n\npyo https://code.google.com/p/pyo/issues/list\n\nInstallation\n------------\n\nUnzip the file, then at the command line run\n\n::\n\n    python setup.py install\n\nUsage\n-----\n\nOn the command line, run\n\npython2 bikesrv.py [options]\n\nOptions:\n\n::\n\n    --version             show program's version number and exit\n\n    -h, --help            show this help message and exit\n\n    -v, --verbose         Display debugging information while analysing.\n\n    -r RATE, --rate=RATE  The number of measurements per second. Default: 500\n\n    -d DROPOUTS, --dropouts=DROPOUTS\n                          The number of signal breaks per full wheel turn.\n                          Default: 3\n\nDocumentation\n-------------\n\nTo read the API documentation, open a shell / DOS window, navigate to\nthe bikesrv directory, and run\n\n::\n\n    pydoc bikesrv\n\nYou can create a HTML version using\n\n::\n\n    pydoc -w bikesrv\n\nLicense\n-------\n\nbikesrv is licensed under the GPL. See the file COPYING for details.\n\nAuthor\n------\n\nFlorian Berger", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://florian-berger.de/en/software/bikesrv/", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "bikesrv", "package_url": "https://pypi.org/project/bikesrv/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bikesrv/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://florian-berger.de/en/software/bikesrv/"}, "release_url": "https://pypi.org/project/bikesrv/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "bikesrv - A server to measure the output of an exercising bike and make it available via an API.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p>bikesrv is a server to measure the output of an exercising bike and make\nit available via a web API.</p>\n</div>\n<div id=\"wait-what\">\n<h2>Wait, what?</h2>\n<p>Ok, you know exercising bikes. That thing that looks like a bike, but\ndoesn\u2019t move. You use it when you want to get in shape.</p>\n<p>Some of these bikes have an output signal that is fed to a small\ncomputer with a large display across a cable and a mini-jack. The\ndisplay then shows your speed, virtual distance etc.</p>\n<p>Turns out that this mini-jack just fits into the audio in of a stock\ncomputer. This is where bikesrv comes into play. It analyses the signal\nfrom the bike and computes the bike\u2019s speed.</p>\n<p>The final step is a built-in web server in bikesrv. It makes the current\nspeed is available through a simple HTTP API.</p>\n</div>\n<div id=\"ok-but-why\">\n<h2>Ok, but why?</h2>\n<p>You could do all sorts of analysing and feedback that an ordinary bike\ncomputer does.</p>\n<p>But it is much more fun to turn the exercising bike into a game\ncontroller.</p>\n</div>\n<div id=\"what-is-the-http-api\">\n<h2>What is the HTTP API?</h2>\n<p>The server will listen on port 1805. If you call</p>\n<pre>http://HOST:1805/bikefreq\n</pre>\n<p>you will receive a <tt>text/plain</tt> response that contains the current\nnumber of revolutions per second.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>Python 2.x <a href=\"http://www.python.org\" rel=\"nofollow\">http://www.python.org</a></p>\n<p>pyo <a href=\"https://code.google.com/p/pyo/issues/list\" rel=\"nofollow\">https://code.google.com/p/pyo/issues/list</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Unzip the file, then at the command line run</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>On the command line, run</p>\n<p>python2 bikesrv.py [options]</p>\n<p>Options:</p>\n<pre>--version             show program's version number and exit\n\n-h, --help            show this help message and exit\n\n-v, --verbose         Display debugging information while analysing.\n\n-r RATE, --rate=RATE  The number of measurements per second. Default: 500\n\n-d DROPOUTS, --dropouts=DROPOUTS\n                      The number of signal breaks per full wheel turn.\n                      Default: 3\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>To read the API documentation, open a shell / DOS window, navigate to\nthe bikesrv directory, and run</p>\n<pre>pydoc bikesrv\n</pre>\n<p>You can create a HTML version using</p>\n<pre>pydoc -w bikesrv\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>bikesrv is licensed under the GPL. See the file COPYING for details.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Florian Berger</p>\n</div>\n\n          </div>"}, "last_serial": 422183, "releases": {"0.1.0": [], "0.2.0": []}, "urls": [], "timestamp": "Thu May  7 22:37:32 2020"}