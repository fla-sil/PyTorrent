{"info": {"author": "takahasi", "author_email": "3263ta@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "install\n-------\n::\n  $ sudo pip install rtmdocker\n\nusage\n-----\n::\n  $ rtmdocker [-h] [-v] [-n] [-t TAGNAME] [-r] [-d DEVICE]\n                 [-e RUN_COMPONENT] [-c COMPILE_COMPONENT] [-x] [-U]\n                 [--proxy PROXY] [--dryrun]\n                 command\n\npositional arguments\n--------------------\n::\n  command               openrtp             : start OpenRTP\n                        Controller          : start C++ ControllerComp\n                        Motor               : start C++ MotorComp\n                        ConsoleIn           : start C++ ConsoleInComp\n                        ConsoleOut          : start C++ ConsoleOutComp\n                        ConfigSample        : start C++ ConfigSampleComp\n                        SeqIn               : start C++ SeqInComp\n                        SeqOut              : start C++ SeqOutComp\n                        MyServiceConsumer   : start C++ MyServiceConsumerComp\n                        MyServiceProvider   : start C++ MyServiceProviderComp\n                        ConsoleInPy         : start Python ConsoleIn.py\n                        ConsoleOutPy        : start Python ConsoleOut.py\n                        ConfigSamplePy      : start Python ConfigSampleComp\n                        SeqInPy             : start Python SeqIn.py\n                        SeqOutPy            : start Python SeqOut.py\n                        MyServiceConsumerPy : start Python MyServiceConsumerComp\n                        MyServiceProviderPy : start Python MyServiceProviderComp\n                        TkJoyStick          : start Python TkJoyStickComp.py\n                        TkLRFViewer         : start Python TkLRFViewer.py\n                        Affine              : start OpenCV AffineComp\n                        BackGroundSubtractionSimple : start OpenCV BackGroundSubtractionSimpleComp\n                        Binarization        : start OpenCV BinarizationComp\n                        CameraViewer        : start OpenCV CameraViewerComp\n                        Chromakey           : start OpenCV ChromakeyComp\n                        DilationErosion     : start OpenCV DilationErotionComp\n                        Edge                : start OpenCV EdgeComp\n                        Findcontour         : start OpenCV FindcontourComp\n                        Flip                : start OpenCV FlipComp\n                        Histogram           : start OpenCV HistogramComp\n                        Hough               : start OpenCV HoughComp\n                        ImageCalibration    : start OpenCV ImageCalibrationComp\n                        ImageSubstraction   : start OpenCV ImageSubstractionComp\n                        ObjectTracking      : start OpenCV ObjectTrackingComp\n                        OpenCVCamera        : start OpenCV OpenCVCameraComp\n                        Perspective         : start OpenCV PerspectiveComp\n                        RockPaperScissors   : start OpenCV RockPaperScissorsComp\n                        Rotate              : start OpenCV RotateComp\n                        Scale               : start OpenCV ScaleComp\n                        Sepia               : start OpenCV SepiaComp\n                        SubstractCaptureImage : start OpenCV SubstractCaptureImageComp\n                        Template            : start OpenCV TemplateComp\n                        Translate           : start OpenCV TranslateComp\n                        bash                : start bash\n\noptional arguments\n------------------\n::\n  -h, --help            show this help message and exit\n  -v, --version         show program's version number and exit\n  -n, --nameserver      run command with starting nameserver\n  -t TAGNAME, --tag TAGNAME\n                        tag name of image\n  -r, --rdp             run command with start RDP server\n  -d DEVICE, --device DEVICE\n                        allow access to device from inside of container\n  -e RUN_COMPONENT, --execute RUN_COMPONENT\n                        run your C++ component\n  -c COMPILE_COMPONENT, --compile COMPILE_COMPONENT\n                        compile your C++ component\n  -x, --xforward        enable X forwarding\n  -U, --upgrade         upgrade target image before startup\n  --proxy PROXY         set proxy server address\n  --dryrun              dry run for debug\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/takahasi/docker-openrtm-tools", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rtmdocker", "package_url": "https://pypi.org/project/rtmdocker/", "platform": "", "project_url": "https://pypi.org/project/rtmdocker/", "project_urls": {"Homepage": "https://github.com/takahasi/docker-openrtm-tools"}, "release_url": "https://pypi.org/project/rtmdocker/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Utility tool for docker container of OpenRTM-aist(OpenRTM on Docker)", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install\">\n<h2>install</h2>\n<dl>\n<dt>::</dt>\n<dd>$ sudo pip install rtmdocker</dd>\n</dl>\n</div>\n<div id=\"usage\">\n<h2>usage</h2>\n<dl>\n<dt>::</dt>\n<dd><dl>\n<dt>$ rtmdocker [-h] [-v] [-n] [-t TAGNAME] [-r] [-d DEVICE]</dt>\n<dd>[-e RUN_COMPONENT] [-c COMPILE_COMPONENT] [-x] [-U]\n[\u2013proxy PROXY] [\u2013dryrun]\ncommand</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"positional-arguments\">\n<h2>positional arguments</h2>\n<dl>\n<dt>::</dt>\n<dd><dl>\n<dt>command               openrtp <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\">start OpenRTP</span></dt>\n<dd>Controller          : start C++ ControllerComp\nMotor               : start C++ MotorComp\nConsoleIn           : start C++ ConsoleInComp\nConsoleOut          : start C++ ConsoleOutComp\nConfigSample        : start C++ ConfigSampleComp\nSeqIn               : start C++ SeqInComp\nSeqOut              : start C++ SeqOutComp\nMyServiceConsumer   : start C++ MyServiceConsumerComp\nMyServiceProvider   : start C++ MyServiceProviderComp\nConsoleInPy         : start Python ConsoleIn.py\nConsoleOutPy        : start Python ConsoleOut.py\nConfigSamplePy      : start Python ConfigSampleComp\nSeqInPy             : start Python SeqIn.py\nSeqOutPy            : start Python SeqOut.py\nMyServiceConsumerPy : start Python MyServiceConsumerComp\nMyServiceProviderPy : start Python MyServiceProviderComp\nTkJoyStick          : start Python TkJoyStickComp.py\nTkLRFViewer         : start Python TkLRFViewer.py\nAffine              : start OpenCV AffineComp\nBackGroundSubtractionSimple : start OpenCV BackGroundSubtractionSimpleComp\nBinarization        : start OpenCV BinarizationComp\nCameraViewer        : start OpenCV CameraViewerComp\nChromakey           : start OpenCV ChromakeyComp\nDilationErosion     : start OpenCV DilationErotionComp\nEdge                : start OpenCV EdgeComp\nFindcontour         : start OpenCV FindcontourComp\nFlip                : start OpenCV FlipComp\nHistogram           : start OpenCV HistogramComp\nHough               : start OpenCV HoughComp\nImageCalibration    : start OpenCV ImageCalibrationComp\nImageSubstraction   : start OpenCV ImageSubstractionComp\nObjectTracking      : start OpenCV ObjectTrackingComp\nOpenCVCamera        : start OpenCV OpenCVCameraComp\nPerspective         : start OpenCV PerspectiveComp\nRockPaperScissors   : start OpenCV RockPaperScissorsComp\nRotate              : start OpenCV RotateComp\nScale               : start OpenCV ScaleComp\nSepia               : start OpenCV SepiaComp\nSubstractCaptureImage : start OpenCV SubstractCaptureImageComp\nTemplate            : start OpenCV TemplateComp\nTranslate           : start OpenCV TranslateComp\nbash                : start bash</dd>\n</dl>\n</dd>\n</dl>\n</div>\n<div id=\"optional-arguments\">\n<h2>optional arguments</h2>\n<dl>\n<dt>::</dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-v</span>, <span class=\"option\">--version</span></kbd></td>\n<td>show program\u2019s version number and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-n</span>, <span class=\"option\">--nameserver</span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>run command with starting nameserver</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-t <var>TAGNAME</var></span>, <span class=\"option\">--tag <var>TAGNAME</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>tag name of image</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-r</span>, <span class=\"option\">--rdp</span></kbd></td>\n<td>run command with start RDP server</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-d <var>DEVICE</var></span>, <span class=\"option\">--device <var>DEVICE</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>allow access to device from inside of container</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-e <var>RUN_COMPONENT</var></span>, <span class=\"option\">--execute <var>RUN_COMPONENT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>run your C++ component</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-c <var>COMPILE_COMPONENT</var></span>, <span class=\"option\">--compile <var>COMPILE_COMPONENT</var></span></kbd></td>\n</tr>\n<tr><td>\u00a0</td><td>compile your C++ component</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-x</span>, <span class=\"option\">--xforward</span></kbd></td>\n<td>enable X forwarding</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-U</span>, <span class=\"option\">--upgrade</span></kbd></td>\n<td>upgrade target image before startup</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--proxy <var>PROXY</var></span></kbd></td>\n<td>set proxy server address</td></tr>\n<tr><td>\n<kbd><span class=\"option\">--dryrun</span></kbd></td>\n<td>dry run for debug</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 3446646, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "a87c1575ab173abda474bd6766ec0590", "sha256": "17e7ba6af9b424b9eaa4292f8b6b5f409299a42dd32d17e3b7d6da98587df05a"}, "downloads": -1, "filename": "rtmdocker-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a87c1575ab173abda474bd6766ec0590", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4656, "upload_time": "2017-12-28T04:54:19", "upload_time_iso_8601": "2017-12-28T04:54:19.532930Z", "url": "https://files.pythonhosted.org/packages/2f/96/e7b49b9646e24e0226c2d9a38d8dbd6cee99b97c560a948f0379e6e5235d/rtmdocker-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "fe3ae0c4936735a59884c4a3195de7b5", "sha256": "cc08d679963b3d4bfdb5d6f9f089ee2bbea89d74d831798af35105e7bb19b2fe"}, "downloads": -1, "filename": "rtmdocker-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fe3ae0c4936735a59884c4a3195de7b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2350, "upload_time": "2017-12-28T05:06:38", "upload_time_iso_8601": "2017-12-28T05:06:38.084577Z", "url": "https://files.pythonhosted.org/packages/ef/fc/2ed9ebc7170b013ec661847e7ef0b4bc72c93de6bb83d2334fa2d2221713/rtmdocker-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe3ae0c4936735a59884c4a3195de7b5", "sha256": "cc08d679963b3d4bfdb5d6f9f089ee2bbea89d74d831798af35105e7bb19b2fe"}, "downloads": -1, "filename": "rtmdocker-1.0.1.tar.gz", "has_sig": false, "md5_digest": "fe3ae0c4936735a59884c4a3195de7b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2350, "upload_time": "2017-12-28T05:06:38", "upload_time_iso_8601": "2017-12-28T05:06:38.084577Z", "url": "https://files.pythonhosted.org/packages/ef/fc/2ed9ebc7170b013ec661847e7ef0b4bc72c93de6bb83d2334fa2d2221713/rtmdocker-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:26 2020"}