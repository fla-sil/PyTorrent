{"info": {"author": "Daniele Varrazzo", "author_email": "daniele.varrazzo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: Software Development", "Topic :: Software Development :: Testing", "Topic :: System :: Archiving :: Backup", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "This tool allows to extract data from a PostgreSQL_ database with greater\nflexibility that tools like pg_dump_ allow.\n\n``pg_seldump`` reads one of more dump definitions from YAML files and selects\nwhat tables or other database objects to save. It is possible to extract only\ncertain columns of the tables, only certain records, or to replace certain\nvalues with a different expression, for instance to anonymize data.\n\nThe output of the program is a text file which can be used by psql_ to\nrestore data into a database with a complete schema but with no data (or at\nleast no conflicting data), e.g. using::\n\n    $ pg_seldump --dsn=\"dbname=sourcedb\" datadump.yaml > dump.sql\n    ...\n    $ psql -1X --set ON_ERROR_STOP=1 -f dump.sql \"dbname=targetdb\"\n\n.. _PostgreSQL: https://www.postgresql.org/\n.. _pg_dump: https://www.postgresql.org/docs/current/app-pgdump.html\n.. _psql: https://www.postgresql.org/docs/current/app-psql.html\n\n\nProgram usage\n-------------\n\nUsage::\n\n    pg_seldump [-h] [--version] [--dsn DSN] [--outfile OUTFILE] [--test]\n               [-q | -v]\n               config [config ...]\n\n    Create a selective dump of a PostgreSQL database.\n\n    positional arguments:\n      config                yaml file describing the data to dump\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      --version             show program's version number and exit\n      --dsn DSN             database connection string [default: '']\n      --outfile OUTFILE, -o OUTFILE\n                            the file where to save the dump [default: stdout]\n      --test                test the configuration to verify it works as expected\n      -q, --quiet           talk less\n      -v, --verbose         talk more\n\nThe ``config`` files must be YAML_ files containing a ``db_objects`` list of\nentries. Each entry may have:\n\n.. _YAML: https://yaml.org/\n\nSelectors (all the specified ones must match):\n\n- ``name``: name of the db object to dump\n- ``names``: list of names or regex of db objects to dump\n- ``schema``: schema name of the db object to dump\n- ``schemas``: list of schema names or regexp to match schema names of the\n  db object to dump\n- ``kind``: kind of object to match. Can be:\n\n  - ``table``\n  - ``sequence``\n  - ``paritioned table``\n  - ``materialized view``\n\n- ``kinds``: list of kind of objects to match (like for ``kind``)\n- ``adjust_score``: adjustment for the match score to break rules ties\n\n.. note::\n    Sequences are selected automatically if they are used in default values by\n    dumped tables.\n\nData modifiers:\n\n- ``action``: what to do with the matched object:\n\n  - ``dump``: dump the object in the output (default)\n  - ``skip``: don't dump the object\n  - ``error``: raise an error in case of match (useful to create strict\n    descriptions where all the db objects must be mentioned explicitly)\n\n- ``no_columns``: list of columns names to omit\n- ``filter``: WHERE condition to include only a subset of the records in the dump\n- ``replace``: mapping from column names to SQL expressions to replace values\n  into the dump with somethings else\n\nThe objects in the database are matched to the rules in the config files.\nEvery match will have a score according to how specific was the selector\nmatched the object.\n\n- ``name`` or ``names`` list: 1000\n- ``names`` regexp: 500\n- ``schema`` or ``schemas`` list: 100\n- ``schemas`` regexp: 50\n- ``kind`` or ``kinds``: 10\n\nThe rule with the highest score will apply. If two rules have exactly the same\nscore the program will report an error: you can use ``adjust_score`` to break\nthe tie.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dvarrazzo/pg_seldump", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pg-seldump", "package_url": "https://pypi.org/project/pg-seldump/", "platform": "", "project_url": "https://pypi.org/project/pg-seldump/", "project_urls": {"Homepage": "https://github.com/dvarrazzo/pg_seldump"}, "release_url": "https://pypi.org/project/pg-seldump/0.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "PostgreSQL selective data dump", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This tool allows to extract data from a <a href=\"https://www.postgresql.org/\" rel=\"nofollow\">PostgreSQL</a> database with greater\nflexibility that tools like <a href=\"https://www.postgresql.org/docs/current/app-pgdump.html\" rel=\"nofollow\">pg_dump</a> allow.</p>\n<p><tt>pg_seldump</tt> reads one of more dump definitions from YAML files and selects\nwhat tables or other database objects to save. It is possible to extract only\ncertain columns of the tables, only certain records, or to replace certain\nvalues with a different expression, for instance to anonymize data.</p>\n<p>The output of the program is a text file which can be used by <a href=\"https://www.postgresql.org/docs/current/app-psql.html\" rel=\"nofollow\">psql</a> to\nrestore data into a database with a complete schema but with no data (or at\nleast no conflicting data), e.g. using:</p>\n<pre>$ pg_seldump --dsn=\"dbname=sourcedb\" datadump.yaml &gt; dump.sql\n...\n$ psql -1X --set ON_ERROR_STOP=1 -f dump.sql \"dbname=targetdb\"\n</pre>\n<div id=\"program-usage\">\n<h2>Program usage</h2>\n<p>Usage:</p>\n<pre>pg_seldump [-h] [--version] [--dsn DSN] [--outfile OUTFILE] [--test]\n           [-q | -v]\n           config [config ...]\n\nCreate a selective dump of a PostgreSQL database.\n\npositional arguments:\n  config                yaml file describing the data to dump\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --version             show program's version number and exit\n  --dsn DSN             database connection string [default: '']\n  --outfile OUTFILE, -o OUTFILE\n                        the file where to save the dump [default: stdout]\n  --test                test the configuration to verify it works as expected\n  -q, --quiet           talk less\n  -v, --verbose         talk more\n</pre>\n<p>The <tt>config</tt> files must be <a href=\"https://yaml.org/\" rel=\"nofollow\">YAML</a> files containing a <tt>db_objects</tt> list of\nentries. Each entry may have:</p>\n<p>Selectors (all the specified ones must match):</p>\n<ul>\n<li><tt>name</tt>: name of the db object to dump</li>\n<li><tt>names</tt>: list of names or regex of db objects to dump</li>\n<li><tt>schema</tt>: schema name of the db object to dump</li>\n<li><tt>schemas</tt>: list of schema names or regexp to match schema names of the\ndb object to dump</li>\n<li><tt>kind</tt>: kind of object to match. Can be:<ul>\n<li><tt>table</tt></li>\n<li><tt>sequence</tt></li>\n<li><tt>paritioned table</tt></li>\n<li><tt>materialized view</tt></li>\n</ul>\n</li>\n<li><tt>kinds</tt>: list of kind of objects to match (like for <tt>kind</tt>)</li>\n<li><tt>adjust_score</tt>: adjustment for the match score to break rules ties</li>\n</ul>\n<div>\n<p>Note</p>\n<p>Sequences are selected automatically if they are used in default values by\ndumped tables.</p>\n</div>\n<p>Data modifiers:</p>\n<ul>\n<li><tt>action</tt>: what to do with the matched object:<ul>\n<li><tt>dump</tt>: dump the object in the output (default)</li>\n<li><tt>skip</tt>: don\u2019t dump the object</li>\n<li><tt>error</tt>: raise an error in case of match (useful to create strict\ndescriptions where all the db objects must be mentioned explicitly)</li>\n</ul>\n</li>\n<li><tt>no_columns</tt>: list of columns names to omit</li>\n<li><tt>filter</tt>: WHERE condition to include only a subset of the records in the dump</li>\n<li><tt>replace</tt>: mapping from column names to SQL expressions to replace values\ninto the dump with somethings else</li>\n</ul>\n<p>The objects in the database are matched to the rules in the config files.\nEvery match will have a score according to how specific was the selector\nmatched the object.</p>\n<ul>\n<li><tt>name</tt> or <tt>names</tt> list: 1000</li>\n<li><tt>names</tt> regexp: 500</li>\n<li><tt>schema</tt> or <tt>schemas</tt> list: 100</li>\n<li><tt>schemas</tt> regexp: 50</li>\n<li><tt>kind</tt> or <tt>kinds</tt>: 10</li>\n</ul>\n<p>The rule with the highest score will apply. If two rules have exactly the same\nscore the program will report an error: you can use <tt>adjust_score</tt> to break\nthe tie.</p>\n</div>\n\n          </div>"}, "last_serial": 6670261, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7ceaf5e81295b2aa393f33d265c477b0", "sha256": "553e7136fa97ed635f109bde946b0d2ecb798a206c27577c9efb7c2fb63667e1"}, "downloads": -1, "filename": "pg_seldump-0.1.tar.gz", "has_sig": false, "md5_digest": "7ceaf5e81295b2aa393f33d265c477b0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 12785, "upload_time": "2020-02-01T13:08:01", "upload_time_iso_8601": "2020-02-01T13:08:01.954811Z", "url": "https://files.pythonhosted.org/packages/cb/26/cdfd8f4210d1085edc547b88e3d7dfd570dc2c298f805064189f268bbe55/pg_seldump-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "7cf81434930ca4ac5c4bf7af3a52af5d", "sha256": "008e282bef6b0c3d5ac64b065c78be2c333aab1021ef97dfe92addba1379b8e0"}, "downloads": -1, "filename": "pg_seldump-0.2.tar.gz", "has_sig": false, "md5_digest": "7cf81434930ca4ac5c4bf7af3a52af5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13534, "upload_time": "2020-02-20T19:57:54", "upload_time_iso_8601": "2020-02-20T19:57:54.316623Z", "url": "https://files.pythonhosted.org/packages/a3/1f/be14c1982af09560d8db397469452c3d5b8c211b57bd84337ce4dda33eb1/pg_seldump-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7cf81434930ca4ac5c4bf7af3a52af5d", "sha256": "008e282bef6b0c3d5ac64b065c78be2c333aab1021ef97dfe92addba1379b8e0"}, "downloads": -1, "filename": "pg_seldump-0.2.tar.gz", "has_sig": false, "md5_digest": "7cf81434930ca4ac5c4bf7af3a52af5d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 13534, "upload_time": "2020-02-20T19:57:54", "upload_time_iso_8601": "2020-02-20T19:57:54.316623Z", "url": "https://files.pythonhosted.org/packages/a3/1f/be14c1982af09560d8db397469452c3d5b8c211b57bd84337ce4dda33eb1/pg_seldump-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:42 2020"}