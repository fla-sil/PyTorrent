{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "Requires python 3.5 or greater\n\nEvery directory can have a .template.html. there is a small template preprocessor\nreference files: like this %%{path-relative-to-current-file}%%\n\nPut content into template like this: %%{%%}%% if you don't specify where the content should go,\nthe content is placed below the template content\n\n.template.html files are applied to all files on the same level or below in the directory structure\n\nhow to set title of page? maybe in the templates we can overwrite it\n\n## Building\n`build.py` compiles the file in the source directory into a distribution directory.\n\nyou can use it like this:\n\n```\npython3 build.py\n```\n\nthis will compile all files\n\nor you can specify particular files that you want to compile:\n\n```\npython3 build.py index.html src/javascript_tutorial/index.html\n```\n\nall filepaths are relative to the source directory\n\nthe default source directory is `./src` and the default distribution directory is `./dist`\n\nyou can change these via command line:\n\n```\npython3 build.py index.html --dist /var/www/html/mysite --src /home/user/website_files\n```\n\nyou can also give build.py a mix of directories and files. if you give it directories,\nit will compile all files who are siblings or children (it is recursive).\n\n## Watching\nYou can use `watch.py` to scan the filesystem on a certain interval for changes, and compile\nthe files that have changed (and only those files)\n\nthis can be more efficient than having to compile the whole site\n\nthe interface is similar to `build.py`\n\n```\npython3 watch.py\n```\n\nthis will watch all files in the source directory, if files are added/deleted/modified, those files\nwill be recompiled\n\n```\npython3 watch.py src/javascript_tutorial\n```\n\nthis will watch all files in the src/javascript_tutorial folder\n\nyou can specify the source and distribution directories too with the `--src` and `--dist` flags\n\nyou can also specify the interval that the scan is run with the `--interval` flag\n\n\n## TODO\n- make some way of specifying title from child pages", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "GPL3", "maintainer": "", "maintainer_email": "", "name": "webgull", "package_url": "https://pypi.org/project/webgull/", "platform": "", "project_url": "https://pypi.org/project/webgull/", "project_urls": null, "release_url": "https://pypi.org/project/webgull/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Requires python 3.5 or greater</p>\n<p>Every directory can have a .template.html. there is a small template preprocessor\nreference files: like this %%{path-relative-to-current-file}%%</p>\n<p>Put content into template like this: %%{%%}%% if you don't specify where the content should go,\nthe content is placed below the template content</p>\n<p>.template.html files are applied to all files on the same level or below in the directory structure</p>\n<p>how to set title of page? maybe in the templates we can overwrite it</p>\n<h2>Building</h2>\n<p><code>build.py</code> compiles the file in the source directory into a distribution directory.</p>\n<p>you can use it like this:</p>\n<pre><code>python3 build.py\n</code></pre>\n<p>this will compile all files</p>\n<p>or you can specify particular files that you want to compile:</p>\n<pre><code>python3 build.py index.html src/javascript_tutorial/index.html\n</code></pre>\n<p>all filepaths are relative to the source directory</p>\n<p>the default source directory is <code>./src</code> and the default distribution directory is <code>./dist</code></p>\n<p>you can change these via command line:</p>\n<pre><code>python3 build.py index.html --dist /var/www/html/mysite --src /home/user/website_files\n</code></pre>\n<p>you can also give build.py a mix of directories and files. if you give it directories,\nit will compile all files who are siblings or children (it is recursive).</p>\n<h2>Watching</h2>\n<p>You can use <code>watch.py</code> to scan the filesystem on a certain interval for changes, and compile\nthe files that have changed (and only those files)</p>\n<p>this can be more efficient than having to compile the whole site</p>\n<p>the interface is similar to <code>build.py</code></p>\n<pre><code>python3 watch.py\n</code></pre>\n<p>this will watch all files in the source directory, if files are added/deleted/modified, those files\nwill be recompiled</p>\n<pre><code>python3 watch.py src/javascript_tutorial\n</code></pre>\n<p>this will watch all files in the src/javascript_tutorial folder</p>\n<p>you can specify the source and distribution directories too with the <code>--src</code> and <code>--dist</code> flags</p>\n<p>you can also specify the interval that the scan is run with the <code>--interval</code> flag</p>\n<h2>TODO</h2>\n<ul>\n<li>make some way of specifying title from child pages</li>\n</ul>\n\n          </div>"}, "last_serial": 6764784, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f80e74977faae2a0bcccb982f2e5386a", "sha256": "7aa0d3533b52d1532703f3089fea08fadc7262695b46fc18e855468754b78caf"}, "downloads": -1, "filename": "webgull-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "f80e74977faae2a0bcccb982f2e5386a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4910, "upload_time": "2019-05-03T23:02:43", "upload_time_iso_8601": "2019-05-03T23:02:43.600619Z", "url": "https://files.pythonhosted.org/packages/6e/7d/817d64883f8f401a5364b57dcce563e59b2ccff95d406a4984fb2cbe2840/webgull-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5508b10fbb9de5d662fb2c4fa0846f7", "sha256": "6ceb4c8bc00b3df4fbc5b36c7a3ac05421669f880a0e8ae56fdddf3efbac8d0f"}, "downloads": -1, "filename": "webgull-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b5508b10fbb9de5d662fb2c4fa0846f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4442, "upload_time": "2019-05-03T23:02:45", "upload_time_iso_8601": "2019-05-03T23:02:45.513324Z", "url": "https://files.pythonhosted.org/packages/96/b3/856c1473a4d0e3a58e59783b6b29022869cc62b4562152803a70e3ede81a/webgull-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "ba2593a27677b9176473475877560da6", "sha256": "61a2f42977209810ed9c40705a92d96f8faf532b37ba9ad67c7ffeec5bf3f266"}, "downloads": -1, "filename": "webgull-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ba2593a27677b9176473475877560da6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5380, "upload_time": "2020-03-06T21:26:48", "upload_time_iso_8601": "2020-03-06T21:26:48.430858Z", "url": "https://files.pythonhosted.org/packages/3f/64/f4eaba277bf5e5e7d7063ceb23928aa6872cd6ccbd5ea6b8aac733c2765b/webgull-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba2593a27677b9176473475877560da6", "sha256": "61a2f42977209810ed9c40705a92d96f8faf532b37ba9ad67c7ffeec5bf3f266"}, "downloads": -1, "filename": "webgull-1.1.0.tar.gz", "has_sig": false, "md5_digest": "ba2593a27677b9176473475877560da6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5380, "upload_time": "2020-03-06T21:26:48", "upload_time_iso_8601": "2020-03-06T21:26:48.430858Z", "url": "https://files.pythonhosted.org/packages/3f/64/f4eaba277bf5e5e7d7063ceb23928aa6872cd6ccbd5ea6b8aac733c2765b/webgull-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:06 2020"}