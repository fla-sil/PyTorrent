{"info": {"author": "Jacek B. Budzynski", "author_email": "jacek.b.budzynski@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: Polish", "Natural Language :: Spanish", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only"], "description": "[![PyPI](https://img.shields.io/pypi/v/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Django Version](https://img.shields.io/pypi/djversions/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n[![PyPI - Downloads](https://img.shields.io/pypi/dm/django-sass-compiler)](https://pypi.org/project/django-sass-compiler/) \n\ndjango-sass-compiler\n===========\n\nSimplify the use of [Sass](https://sass-lang.com/) in Django\n\nUsing `libsass`, compile all `.scss` files found in the paths defined in `settings.STATICFILES_FINDERS`\n\n----------\n\nQuickstart\n------------\n\n1.- It's available on [PyPI](https://pypi.org/project/django-sass-compiler/), so you can install it using `pip`\n\n```\npip install django-sass-compiler\n```\n\n2.- Add `django_sass_compiler` to your `INSTALLED_APPS`\n\n```python\nINSTALLED_APPS = [\n    ...,\n    'django_sass_compiler',\n]\n```\n\n3.- Run `sass-compiler`\n\n```\npython manage.py sass-compiler\n```\nor combine with `runserver` command, useful with `--watch` argument. \n```\npython manage.py runserver & python manage.py sass-compiler --watch\n```\n\nArguments:\n------------------\nAll arguments are optional and combinable\n\n* `-s, --style` \n\n  Coding style of the compiled result. choose one of: `'nested'`, `'expanded'` (default), `'compact'`, `'compressed'`\n\n\n* `-p, --precision` \n\n  Sets the number of digits of precision. 8 by default.\n\n * `-nb, --no-build` \n\n    Don't create `build` folder.\n\n    ```\n    app/\n      |- static/\n         |- app/\n            |- scss/\n               |- style.scss\n            |- css/\n               |- style.css\n     ```\n\n    instead\n\n    ```\n    app/\n      |- static/\n         |- app/\n            |- scss/\n               |- style.scss\n            |- build/\n               |- css/\n                  |- style.css\n    ```\n\n\n* `-m, --map` \n\n   Build a source map.\n\n* `-c, --clean`\n\n  Remove old files before new compilation. \n\n  NOTE: This action will only take effect on current destination folder (`--no-build`).\n\n* `-w, --watch` \n\n   Watch and compile files when `.scss` files are changed.\n\n* `-i, --ignore` \n\n   Ignore files or directories matching this glob-style pattern. \n   Use multiple times to ignore more. \n\n   You can also define list paths to ignore in `settings.SASS_COMPILER_IGNORE_PATTERNS` environment variable.\n\n   ```\n   SASS_COMPILER_IGNORE_PATTERNS = [\n      'app/scss/style.scss',\n      'app/scss/test/*'\n   ]\n   ```\n\n   NOTE: All patterns will applied in the path since the `static` folder to the file name. \n\n   Example: \n\n   To ignore `apps/app/static/app/scss/style.scss` the longest path would be:\n\n   `python manage.py sass-compiler --ignore=app/scss/style.scss` or\n\n   `python manage.py sass-compiler -i=**/**/style.scss` \n\n   or some other glob-style pattern.\n\n@import\n-------\nTo @import `.scss` files you must use absolute paths unless the files are at the same or less level, in that case you can use relative paths\n\n```\nsome-app/\n  |- static/\n     |- some-app/\n        |- scss/\n            |- pages\n                |- _timeline.scss\n            |- _colors.scss\n            |- style.scss\nother-app/\n  |- static/\n     |- other-app/\n        |- scss/\n            |- _variables.scss\n```\n\n***some-app/style.scss***\n```scss\n@import 'other-app/scss/variables';\n@import 'pages/timeline';\n@import 'colors'\n```\n\n```scss\n### WRONG ###\n@import '../../variables'; \n```\n\nOutputs\n---------\n##### Standard output:\n```\n$ python manage.py sass-compiler \n```\n```\napp/\n  |- static/\n     |- app/\n        |- scss/\n           |- _colors.scss\n           |- style.scss\n        |- build/\n           |- css/\n              |- style.css\n```\n\n##### With some argument output:\n\n```\npython manage.py sass-compiler --style=compressed --no-build --map\n```\n\n```\napp/\n  |- static/\n     |- app/\n        |- scss/\n           |- _colors.scss\n           |- style.scss\n        |- css/\n           |- style.min.css\n           |- style.css.map\n```\nLicensing\n---------\n\nThe project is licensed under the [BSD License](LICENSE).\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jaberbu/django-sass-compiler", "keywords": "", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "django-sass-compiler", "package_url": "https://pypi.org/project/django-sass-compiler/", "platform": "", "project_url": "https://pypi.org/project/django-sass-compiler/", "project_urls": {"Homepage": "https://github.com/jaberbu/django-sass-compiler"}, "release_url": "https://pypi.org/project/django-sass-compiler/1.0.1/", "requires_dist": ["django", "libsass"], "requires_python": "", "summary": "Using libsass, compile all .scss files found in the paths defined in settings.STATICFILES_FINDERS.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/django-sass-compiler/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/037c1f9c56c5d41d92ffa8c1f691d7470580df0d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f2d736173732d636f6d70696c6572\"></a>\n<a href=\"https://pypi.org/project/django-sass-compiler/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61b350b4301fca690f606a74140af7b332b0e164/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d736173732d636f6d70696c6572\"></a>\n<a href=\"https://pypi.org/project/django-sass-compiler/\" rel=\"nofollow\"><img alt=\"PyPI - Django Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae7a4c85bd91a9041bf54028c09d084bcc2814e6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a616e676f2d736173732d636f6d70696c6572\"></a>\n<a href=\"https://pypi.org/project/django-sass-compiler/\" rel=\"nofollow\"><img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27e322453c526c3b40c096cfac1963e0702f55cc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f646a616e676f2d736173732d636f6d70696c6572\"></a>\n<a href=\"https://pypi.org/project/django-sass-compiler/\" rel=\"nofollow\"><img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8433bc8d2b2feb93f4af0eacda097a15d55ba52f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f646a616e676f2d736173732d636f6d70696c6572\"></a></p>\n<h1>django-sass-compiler</h1>\n<p>Simplify the use of <a href=\"https://sass-lang.com/\" rel=\"nofollow\">Sass</a> in Django</p>\n<p>Using <code>libsass</code>, compile all <code>.scss</code> files found in the paths defined in <code>settings.STATICFILES_FINDERS</code></p>\n<hr>\n<h2>Quickstart</h2>\n<p>1.- It's available on <a href=\"https://pypi.org/project/django-sass-compiler/\" rel=\"nofollow\">PyPI</a>, so you can install it using <code>pip</code></p>\n<pre><code>pip install django-sass-compiler\n</code></pre>\n<p>2.- Add <code>django_sass_compiler</code> to your <code>INSTALLED_APPS</code></p>\n<pre><span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span><span class=\"p\">,</span>\n    <span class=\"s1\">'django_sass_compiler'</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p>3.- Run <code>sass-compiler</code></p>\n<pre><code>python manage.py sass-compiler\n</code></pre>\n<p>or combine with <code>runserver</code> command, useful with <code>--watch</code> argument.</p>\n<pre><code>python manage.py runserver &amp; python manage.py sass-compiler --watch\n</code></pre>\n<h2>Arguments:</h2>\n<p>All arguments are optional and combinable</p>\n<ul>\n<li>\n<p><code>-s, --style</code></p>\n<p>Coding style of the compiled result. choose one of: <code>'nested'</code>, <code>'expanded'</code> (default), <code>'compact'</code>, <code>'compressed'</code></p>\n</li>\n<li>\n<p><code>-p, --precision</code></p>\n<p>Sets the number of digits of precision. 8 by default.</p>\n</li>\n<li>\n<p><code>-nb, --no-build</code></p>\n<p>Don't create <code>build</code> folder.</p>\n<pre><code>app/\n  |- static/\n     |- app/\n        |- scss/\n           |- style.scss\n        |- css/\n           |- style.css\n</code></pre>\n<p>instead</p>\n<pre><code>app/\n  |- static/\n     |- app/\n        |- scss/\n           |- style.scss\n        |- build/\n           |- css/\n              |- style.css\n</code></pre>\n</li>\n<li>\n<p><code>-m, --map</code></p>\n<p>Build a source map.</p>\n</li>\n<li>\n<p><code>-c, --clean</code></p>\n<p>Remove old files before new compilation.</p>\n<p>NOTE: This action will only take effect on current destination folder (<code>--no-build</code>).</p>\n</li>\n<li>\n<p><code>-w, --watch</code></p>\n<p>Watch and compile files when <code>.scss</code> files are changed.</p>\n</li>\n<li>\n<p><code>-i, --ignore</code></p>\n<p>Ignore files or directories matching this glob-style pattern.\nUse multiple times to ignore more.</p>\n<p>You can also define list paths to ignore in <code>settings.SASS_COMPILER_IGNORE_PATTERNS</code> environment variable.</p>\n<pre><code>SASS_COMPILER_IGNORE_PATTERNS = [\n   'app/scss/style.scss',\n   'app/scss/test/*'\n]\n</code></pre>\n<p>NOTE: All patterns will applied in the path since the <code>static</code> folder to the file name.</p>\n<p>Example:</p>\n<p>To ignore <code>apps/app/static/app/scss/style.scss</code> the longest path would be:</p>\n<p><code>python manage.py sass-compiler --ignore=app/scss/style.scss</code> or</p>\n<p><code>python manage.py sass-compiler -i=**/**/style.scss</code></p>\n<p>or some other glob-style pattern.</p>\n</li>\n</ul>\n<h2>@import</h2>\n<p>To @import <code>.scss</code> files you must use absolute paths unless the files are at the same or less level, in that case you can use relative paths</p>\n<pre><code>some-app/\n  |- static/\n     |- some-app/\n        |- scss/\n            |- pages\n                |- _timeline.scss\n            |- _colors.scss\n            |- style.scss\nother-app/\n  |- static/\n     |- other-app/\n        |- scss/\n            |- _variables.scss\n</code></pre>\n<p><em><strong>some-app/style.scss</strong></em></p>\n<pre><span class=\"k\">@import</span> <span class=\"s1\">'other-app/scss/variables'</span><span class=\"p\">;</span>\n<span class=\"k\">@import</span> <span class=\"s1\">'pages/timeline'</span><span class=\"p\">;</span>\n<span class=\"k\">@import</span> <span class=\"s1\">'colors'</span>\n</pre>\n<pre><span class=\"nn\">###</span> <span class=\"nt\">WRONG</span> <span class=\"nn\">###</span>\n<span class=\"o\">@</span><span class=\"nt\">import</span> <span class=\"s1\">'../../variables'</span><span class=\"o\">;</span> \n</pre>\n<h2>Outputs</h2>\n<h5>Standard output:</h5>\n<pre><code>$ python manage.py sass-compiler \n</code></pre>\n<pre><code>app/\n  |- static/\n     |- app/\n        |- scss/\n           |- _colors.scss\n           |- style.scss\n        |- build/\n           |- css/\n              |- style.css\n</code></pre>\n<h5>With some argument output:</h5>\n<pre><code>python manage.py sass-compiler --style=compressed --no-build --map\n</code></pre>\n<pre><code>app/\n  |- static/\n     |- app/\n        |- scss/\n           |- _colors.scss\n           |- style.scss\n        |- css/\n           |- style.min.css\n           |- style.css.map\n</code></pre>\n<h2>Licensing</h2>\n<p>The project is licensed under the <a href=\"LICENSE\" rel=\"nofollow\">BSD License</a>.</p>\n\n          </div>"}, "last_serial": 7186208, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "c985e337cea652960082dd4e54020201", "sha256": "963d54b83f61a757549c8c0aed1e003b5183102813c72e089d53ac642deebc66"}, "downloads": -1, "filename": "django_sass_compiler-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c985e337cea652960082dd4e54020201", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7790, "upload_time": "2020-04-27T20:47:05", "upload_time_iso_8601": "2020-04-27T20:47:05.443727Z", "url": "https://files.pythonhosted.org/packages/ee/14/edf9d2d7123c27ee860e614d819670450f8c1703ee54057d7862ac204906/django_sass_compiler-0.1.1-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d099f2162f8744d6d38eb75236d28281", "sha256": "d36bbdfb353d8f2e8086852e554c32bf016881be0c6f0350fb55b05c469e6839"}, "downloads": -1, "filename": "django_sass_compiler-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d099f2162f8744d6d38eb75236d28281", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8501, "upload_time": "2020-04-29T20:20:49", "upload_time_iso_8601": "2020-04-29T20:20:49.390371Z", "url": "https://files.pythonhosted.org/packages/ff/91/f3d26a89c901f1a010f60b0b7b68dd939f9f615931dbb5185c4edb844f06/django_sass_compiler-0.2.0-py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a57bffdb99291adfe572692e3c671d7a", "sha256": "bbf9ca2c76037b861c8c00c4f98907646c145c2e56379b059cb2e6cf1b2191fb"}, "downloads": -1, "filename": "django_sass_compiler-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a57bffdb99291adfe572692e3c671d7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8581, "upload_time": "2020-04-29T20:34:15", "upload_time_iso_8601": "2020-04-29T20:34:15.340770Z", "url": "https://files.pythonhosted.org/packages/2d/6a/d38f079cc9150f94d77bf064e781a9869ff60ea59e7af6fc6c31ab2d3fc7/django_sass_compiler-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1719f2b62ddacff40056dd2a4d01c9c0", "sha256": "8517338eb788792d3340c1ce8e0a906b06da191d819672ce4acbaba29564fd42"}, "downloads": -1, "filename": "django_sass_compiler-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1719f2b62ddacff40056dd2a4d01c9c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8605, "upload_time": "2020-05-07T07:44:13", "upload_time_iso_8601": "2020-05-07T07:44:13.502731Z", "url": "https://files.pythonhosted.org/packages/28/32/13fa1cb8ecf7cb9a9e7ac39e6fd6b5a1dc7ac53714bffc79c04740cd594d/django_sass_compiler-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1719f2b62ddacff40056dd2a4d01c9c0", "sha256": "8517338eb788792d3340c1ce8e0a906b06da191d819672ce4acbaba29564fd42"}, "downloads": -1, "filename": "django_sass_compiler-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1719f2b62ddacff40056dd2a4d01c9c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8605, "upload_time": "2020-05-07T07:44:13", "upload_time_iso_8601": "2020-05-07T07:44:13.502731Z", "url": "https://files.pythonhosted.org/packages/28/32/13fa1cb8ecf7cb9a9e7ac39e6fd6b5a1dc7ac53714bffc79c04740cd594d/django_sass_compiler-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:53:46 2020"}