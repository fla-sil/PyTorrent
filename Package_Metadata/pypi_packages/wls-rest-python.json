{"info": {"author": "Magnus Watn", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: System :: Systems Administration"], "description": "wls-rest-python\n===============\n\n.. image:: https://travis-ci.org/magnuswatn/wls-rest-python.svg?branch=master\n    :target: https://travis-ci.org/magnuswatn/wls-rest-python\n\n.. image:: https://codecov.io/gh/magnuswatn/wls-rest-python/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/magnuswatn/wls-rest-python\n\n.. image:: https://badge.fury.io/py/wls-rest-python.svg\n    :target: https://badge.fury.io/py/wls-rest-python\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n\nThis is a Python client for Weblogics RESTful Management Services.\nIt takes care of some of the quirks with the API, without being so closely\nlinked that it becomes limiting.\n\nIt creates Python objects dynamically based on the response from the server,\nso that it's easy to quickly write useful and Pythonic scripts.\n\nIt's tested against 12.2.1.3, but should work fine with all 12c R2 releases.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pipenv install wls-rest-python\n\n\n\nExample usage\n-------------\n\nExplore the API, change properties and undeploy applications:\n\n.. code-block:: python\n\n    >>> from wls_rest_python import WLS\n    >>> \n    >>> wls = WLS('https://wls.example.com:7001', 'weblogic', 'welcome1')\n    >>> \n    >>> dir(wls.edit.batchConfig)\n    ['canonical', 'dynamicallyCreated', 'id', 'identity', 'name', 'notes','parent',\n    'schemaName', 'self', 'tags', 'type']\n    >>> \n    >>> wls.edit.servers.myServer.nativeIOEnabled\n    True\n    >>> wls.edit.servers.myServer.update(nativeIOEnabled=False)\n    >>> wls.edit.servers.myServer.nativeIOEnabled\n    False\n    >>> wls.domainRuntime.deploymentManager.appDeploymentRuntimes.myApp.getState(\n    ... target='myServer')\n    {'return': 'STATE_ACTIVE'}\n    >>> \n    >>> wls.domainRuntime.deploymentManager.appDeploymentRuntimes.myApp.undeploy()\n    >>> \n\n\nStart all managed servers asynchronously:\n\n.. code-block:: python\n\n    from wls_rest_python import WLS\n\n    wls = WLS('https://wls.example.com:7001', 'weblogic', 'welcome1')\n\n    admin_server_name = wls.edit.adminServerName\n\n    running_jobs = []\n    for server in wls.domainRuntime.serverLifeCycleRuntimes:\n        if server.name != admin_server_name:\n            running_jobs.append(server.start(prefer_async=True))\n\n    while running_jobs:\n        for job in running_jobs:\n            if job.completed:\n                running_jobs.remove(job)\n        time.sleep(10)\n\n\nUndeploy all applications and deploy a new one:\n\n.. code-block:: python\n\n    import json\n    from wls_rest_python import WLS\n\n    wls = WLS('https://wls.example.com:7001', 'weblogic', 'welcome1')\n\n    for deployment in wls.edit.appDeployments:\n        deployment.delete()\n\n    deployment_model = {\n        'name': 'myWebApp',\n        'targets': [\n            {'identity': [\n                'servers',\n                'myServer'\n                ]\n            }\n        ]\n    }\n\n    deployment_info = {\n        'model': (None, json.dumps(deployment_model)),\n        'sourcePath': open('/u01/wars/myWebApp.war', 'rb'),\n        'planPath': open('/u01/wars/myWebAppPlan.xml', 'rb')\n    }\n    wls.edit.appDeployments.create(files=deployment_info)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/magnuswatn/wls-rest-python", "keywords": "weblogic wls rest administration automation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "wls-rest-python", "package_url": "https://pypi.org/project/wls-rest-python/", "platform": "", "project_url": "https://pypi.org/project/wls-rest-python/", "project_urls": {"Homepage": "https://github.com/magnuswatn/wls-rest-python"}, "release_url": "https://pypi.org/project/wls-rest-python/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "A Python client for the Weblogic REST API", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/magnuswatn/wls-rest-python\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/magnuswatn/wls-rest-python.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e88245a93f32b7b8c6086f0d9ae0d04c745d7949/68747470733a2f2f7472617669732d63692e6f72672f6d61676e75737761746e2f776c732d726573742d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/magnuswatn/wls-rest-python\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/magnuswatn/wls-rest-python/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d9a46e742384697a8340333d46c56a0d55fa2e7b/68747470733a2f2f636f6465636f762e696f2f67682f6d61676e75737761746e2f776c732d726573742d707974686f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://badge.fury.io/py/wls-rest-python\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/wls-rest-python.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c628ebc9682e03b86e227bc1f4e5f3bcc54d1c5/68747470733a2f2f62616467652e667572792e696f2f70792f776c732d726573742d707974686f6e2e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/code%20style-black-000000.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>This is a Python client for Weblogics RESTful Management Services.\nIt takes care of some of the quirks with the API, without being so closely\nlinked that it becomes limiting.</p>\n<p>It creates Python objects dynamically based on the response from the server,\nso that it\u2019s easy to quickly write useful and Pythonic scripts.</p>\n<p>It\u2019s tested against 12.2.1.3, but should work fine with all 12c R2 releases.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pipenv install wls-rest-python\n</pre>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>Explore the API, change properties and undeploy applications:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">wls_rest_python</span> <span class=\"kn\">import</span> <span class=\"n\">WLS</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wls</span> <span class=\"o\">=</span> <span class=\"n\">WLS</span><span class=\"p\">(</span><span class=\"s1\">'https://wls.example.com:7001'</span><span class=\"p\">,</span> <span class=\"s1\">'weblogic'</span><span class=\"p\">,</span> <span class=\"s1\">'welcome1'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">dir</span><span class=\"p\">(</span><span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">batchConfig</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'canonical'</span><span class=\"p\">,</span> <span class=\"s1\">'dynamicallyCreated'</span><span class=\"p\">,</span> <span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'identity'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">,</span> <span class=\"s1\">'notes'</span><span class=\"p\">,</span><span class=\"s1\">'parent'</span><span class=\"p\">,</span>\n<span class=\"s1\">'schemaName'</span><span class=\"p\">,</span> <span class=\"s1\">'self'</span><span class=\"p\">,</span> <span class=\"s1\">'tags'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">servers</span><span class=\"o\">.</span><span class=\"n\">myServer</span><span class=\"o\">.</span><span class=\"n\">nativeIOEnabled</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">servers</span><span class=\"o\">.</span><span class=\"n\">myServer</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">nativeIOEnabled</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">servers</span><span class=\"o\">.</span><span class=\"n\">myServer</span><span class=\"o\">.</span><span class=\"n\">nativeIOEnabled</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">domainRuntime</span><span class=\"o\">.</span><span class=\"n\">deploymentManager</span><span class=\"o\">.</span><span class=\"n\">appDeploymentRuntimes</span><span class=\"o\">.</span><span class=\"n\">myApp</span><span class=\"o\">.</span><span class=\"n\">getState</span><span class=\"p\">(</span>\n<span class=\"o\">...</span> <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s1\">'myServer'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'return'</span><span class=\"p\">:</span> <span class=\"s1\">'STATE_ACTIVE'</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">domainRuntime</span><span class=\"o\">.</span><span class=\"n\">deploymentManager</span><span class=\"o\">.</span><span class=\"n\">appDeploymentRuntimes</span><span class=\"o\">.</span><span class=\"n\">myApp</span><span class=\"o\">.</span><span class=\"n\">undeploy</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n</pre>\n<p>Start all managed servers asynchronously:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">wls_rest_python</span> <span class=\"kn\">import</span> <span class=\"n\">WLS</span>\n\n<span class=\"n\">wls</span> <span class=\"o\">=</span> <span class=\"n\">WLS</span><span class=\"p\">(</span><span class=\"s1\">'https://wls.example.com:7001'</span><span class=\"p\">,</span> <span class=\"s1\">'weblogic'</span><span class=\"p\">,</span> <span class=\"s1\">'welcome1'</span><span class=\"p\">)</span>\n\n<span class=\"n\">admin_server_name</span> <span class=\"o\">=</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">adminServerName</span>\n\n<span class=\"n\">running_jobs</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"k\">for</span> <span class=\"n\">server</span> <span class=\"ow\">in</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">domainRuntime</span><span class=\"o\">.</span><span class=\"n\">serverLifeCycleRuntimes</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">!=</span> <span class=\"n\">admin_server_name</span><span class=\"p\">:</span>\n        <span class=\"n\">running_jobs</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"n\">prefer_async</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n<span class=\"k\">while</span> <span class=\"n\">running_jobs</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">job</span> <span class=\"ow\">in</span> <span class=\"n\">running_jobs</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">completed</span><span class=\"p\">:</span>\n            <span class=\"n\">running_jobs</span><span class=\"o\">.</span><span class=\"n\">remove</span><span class=\"p\">(</span><span class=\"n\">job</span><span class=\"p\">)</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Undeploy all applications and deploy a new one:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wls_rest_python</span> <span class=\"kn\">import</span> <span class=\"n\">WLS</span>\n\n<span class=\"n\">wls</span> <span class=\"o\">=</span> <span class=\"n\">WLS</span><span class=\"p\">(</span><span class=\"s1\">'https://wls.example.com:7001'</span><span class=\"p\">,</span> <span class=\"s1\">'weblogic'</span><span class=\"p\">,</span> <span class=\"s1\">'welcome1'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">deployment</span> <span class=\"ow\">in</span> <span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">appDeployments</span><span class=\"p\">:</span>\n    <span class=\"n\">deployment</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n\n<span class=\"n\">deployment_model</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'myWebApp'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'targets'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s1\">'identity'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"s1\">'servers'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'myServer'</span>\n            <span class=\"p\">]</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">deployment_info</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'model'</span><span class=\"p\">:</span> <span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">deployment_model</span><span class=\"p\">)),</span>\n    <span class=\"s1\">'sourcePath'</span><span class=\"p\">:</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/u01/wars/myWebApp.war'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">),</span>\n    <span class=\"s1\">'planPath'</span><span class=\"p\">:</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/u01/wars/myWebAppPlan.xml'</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">wls</span><span class=\"o\">.</span><span class=\"n\">edit</span><span class=\"o\">.</span><span class=\"n\">appDeployments</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">files</span><span class=\"o\">=</span><span class=\"n\">deployment_info</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5599684, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "25323f6abcb31305cbc56171bb63fe7b", "sha256": "e17de9e64fdb77f106c88e5f2b36b3cfa6c9fdbb4a5f5134481b3fb047fb3c3e"}, "downloads": -1, "filename": "wls-rest-python-0.1.0.tar.gz", "has_sig": false, "md5_digest": "25323f6abcb31305cbc56171bb63fe7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5941, "upload_time": "2018-03-18T14:11:04", "upload_time_iso_8601": "2018-03-18T14:11:04.843137Z", "url": "https://files.pythonhosted.org/packages/c1/ab/9c074d0233e2453693fb0e3f319102d39168dfdd4dad82a359fe93d9cea5/wls-rest-python-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "f659b7210f3cb94d5f9e2b9450f371bd", "sha256": "a8531384adcc91a9df9d29ef146a5a3aa13f8bc56665d58c9c6cdba810d96ebb"}, "downloads": -1, "filename": "wls-rest-python-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f659b7210f3cb94d5f9e2b9450f371bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5961, "upload_time": "2018-03-19T16:22:27", "upload_time_iso_8601": "2018-03-19T16:22:27.955590Z", "url": "https://files.pythonhosted.org/packages/5c/4b/6b338656578446b950063afd3c778c0c220f6402f7f03f24e7497a1d4c11/wls-rest-python-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eb4c9a32223fc5d9f670706ce77c0d76", "sha256": "c40c2d1d0338ad728c346a3f446441bd82a869a057dbb55a651f30b27c6f5096"}, "downloads": -1, "filename": "wls-rest-python-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eb4c9a32223fc5d9f670706ce77c0d76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6077, "upload_time": "2018-05-27T16:11:50", "upload_time_iso_8601": "2018-05-27T16:11:50.059822Z", "url": "https://files.pythonhosted.org/packages/89/50/158dc1f8340a57f67128a3e67a0a90af63240b43e4dab5f7becd3aa468b3/wls-rest-python-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b6b310cb2b6b1f31a88d39c82f71c4a4", "sha256": "3f3aab344d1f0a199f4568dd5a7c9a125b4021615d136ab02bd5ca5627d8e57a"}, "downloads": -1, "filename": "wls-rest-python-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b6b310cb2b6b1f31a88d39c82f71c4a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6111, "upload_time": "2018-08-28T14:10:40", "upload_time_iso_8601": "2018-08-28T14:10:40.704597Z", "url": "https://files.pythonhosted.org/packages/2e/b1/98351154a8391c0ef5b7e196ebdd41cd314566570577eddbc7a054e28172/wls-rest-python-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "d57e2c853c6837cc92670023ab96c220", "sha256": "d3384b1bf1896cfd4a40b46d6eaea557ad92c80cffaf00ba13d0c5eccd3fbac0"}, "downloads": -1, "filename": "wls-rest-python-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d57e2c853c6837cc92670023ab96c220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6144, "upload_time": "2018-10-07T11:40:09", "upload_time_iso_8601": "2018-10-07T11:40:09.217238Z", "url": "https://files.pythonhosted.org/packages/dc/24/e08dc112de098e22d86586a81db89d27f82a406b7ff73847adcfee4e6598/wls-rest-python-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "11ccd94c3ff0fc86ca34ccb7bf78d294", "sha256": "a26df32737acf99b995e0fae13ac2ef25310e598e1904c181682632f2869d531"}, "downloads": -1, "filename": "wls-rest-python-0.1.5.tar.gz", "has_sig": false, "md5_digest": "11ccd94c3ff0fc86ca34ccb7bf78d294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6289, "upload_time": "2019-07-29T14:03:27", "upload_time_iso_8601": "2019-07-29T14:03:27.377301Z", "url": "https://files.pythonhosted.org/packages/19/ff/a0023e299d04884adb98396fd961ae242f72e98ea59c985b5d43a957b138/wls-rest-python-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11ccd94c3ff0fc86ca34ccb7bf78d294", "sha256": "a26df32737acf99b995e0fae13ac2ef25310e598e1904c181682632f2869d531"}, "downloads": -1, "filename": "wls-rest-python-0.1.5.tar.gz", "has_sig": false, "md5_digest": "11ccd94c3ff0fc86ca34ccb7bf78d294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6289, "upload_time": "2019-07-29T14:03:27", "upload_time_iso_8601": "2019-07-29T14:03:27.377301Z", "url": "https://files.pythonhosted.org/packages/19/ff/a0023e299d04884adb98396fd961ae242f72e98ea59c985b5d43a957b138/wls-rest-python-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:28:24 2020"}