{"info": {"author": "Maximilian Ernst", "author_email": "mernst32@yahoo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Py-SCSO-Compare\nThis is neither an official Searchcode nor an official Stackoverflow application!\n## dsc_cli.py\n```\nusage: dsc_cli.py [-h] [-i] [-r REPO] Q\n\nDownload Java Code from searchcode, that contain the given searchquery.\n\npositional arguments:\n  Q                     the searchquery.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --info            only get the number of results.\n  -r REPO, --repo REPO  specify the repo to search by giving the repo_id.\n```\n\n## exlf_cli.py\n```\nusage: exlf_cli.py [-h] [-r] [-o OUTPUT_FILE] [-c] [-v] F Q\n\nScans Java files for a given query and returns the lines containing said query\nstarting from the first occurrence.\n\npositional arguments:\n  F                     file to be scanned.\n  Q                     the searchquery.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --recursive       scan a directory recursively.\n  -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        save output in given output file.\n  -c, --copy-line       copy first line of the scanned file(s), removing\n                        comment characters like \"//\"\n  -v, --verbose         gives a more detailed output\n```\n\n## dso_cli.py\n```\nusage: dso_cli.py [-h] [-q] [-b] [-a] [-o OUTPUT_FILE] [-i] [-v] I\n\nDownload code snippets from StackOverflow\n\npositional arguments:\n  I                     The id of the entity, either an answer or a question,\n                        from which the code snippet(s) will be downloaded.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -q, --question        Get the code snippet(s) from a question body instead.\n  -b, --best-answer     When the question option is used, this option tells\n                        the program to get the highest rated answer of the\n                        specified question.\n  -a, --accepted-answer\n                        When the question option is used, this option tells\n                        the program to get the accepted answer of the\n                        specified question. If there is no accepted answer the\n                        highest rated answer is used instead.\n  -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        Saves extracted code snippet to file with the\n                        specified name, or if there are more than one to a\n                        folder of the same name.\n  -i, --input-file      Parses data from CSV file and uses them to get code\n                        snippets. REQUIRED HEADERS: Stackoverflow_Links,\n                        SC_Filepath. OPTIONAL HEADER: Download.\n  -v, --verbose         gives a more detailed output\n```\n\n## moss_cli_client.py\n```\nusage: moss_cli_client.py [-h] U F\n\nMOSS CLI client for submitting java files to the service and downloading the\nreport from the service locally. Will go through the sub folders of the given\nfolder and submit the java files for plagiarism checks and download the\nreports locally, creating a linking file in the process\n\npositional arguments:\n  U           Your user-id for the MOSS service.\n  F           The folder whose contents you want to submit.\n\noptional arguments:\n  -h, --help  show this help message and exit\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mernst32/Py-SCSO-Compare", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Py-SCSO-Compare", "package_url": "https://pypi.org/project/Py-SCSO-Compare/", "platform": "", "project_url": "https://pypi.org/project/Py-SCSO-Compare/", "project_urls": {"Homepage": "https://github.com/mernst32/Py-SCSO-Compare"}, "release_url": "https://pypi.org/project/Py-SCSO-Compare/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Search and download Java files that contain StackOverflow links from Searchcode, and compare them with code snippets from StackOverflow questions or answers.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Py-SCSO-Compare</h1>\n<p>This is neither an official Searchcode nor an official Stackoverflow application!</p>\n<h2>dsc_cli.py</h2>\n<pre><code>usage: dsc_cli.py [-h] [-i] [-r REPO] Q\n\nDownload Java Code from searchcode, that contain the given searchquery.\n\npositional arguments:\n  Q                     the searchquery.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i, --info            only get the number of results.\n  -r REPO, --repo REPO  specify the repo to search by giving the repo_id.\n</code></pre>\n<h2>exlf_cli.py</h2>\n<pre><code>usage: exlf_cli.py [-h] [-r] [-o OUTPUT_FILE] [-c] [-v] F Q\n\nScans Java files for a given query and returns the lines containing said query\nstarting from the first occurrence.\n\npositional arguments:\n  F                     file to be scanned.\n  Q                     the searchquery.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -r, --recursive       scan a directory recursively.\n  -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        save output in given output file.\n  -c, --copy-line       copy first line of the scanned file(s), removing\n                        comment characters like \"//\"\n  -v, --verbose         gives a more detailed output\n</code></pre>\n<h2>dso_cli.py</h2>\n<pre><code>usage: dso_cli.py [-h] [-q] [-b] [-a] [-o OUTPUT_FILE] [-i] [-v] I\n\nDownload code snippets from StackOverflow\n\npositional arguments:\n  I                     The id of the entity, either an answer or a question,\n                        from which the code snippet(s) will be downloaded.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -q, --question        Get the code snippet(s) from a question body instead.\n  -b, --best-answer     When the question option is used, this option tells\n                        the program to get the highest rated answer of the\n                        specified question.\n  -a, --accepted-answer\n                        When the question option is used, this option tells\n                        the program to get the accepted answer of the\n                        specified question. If there is no accepted answer the\n                        highest rated answer is used instead.\n  -o OUTPUT_FILE, --output-file OUTPUT_FILE\n                        Saves extracted code snippet to file with the\n                        specified name, or if there are more than one to a\n                        folder of the same name.\n  -i, --input-file      Parses data from CSV file and uses them to get code\n                        snippets. REQUIRED HEADERS: Stackoverflow_Links,\n                        SC_Filepath. OPTIONAL HEADER: Download.\n  -v, --verbose         gives a more detailed output\n</code></pre>\n<h2>moss_cli_client.py</h2>\n<pre><code>usage: moss_cli_client.py [-h] U F\n\nMOSS CLI client for submitting java files to the service and downloading the\nreport from the service locally. Will go through the sub folders of the given\nfolder and submit the java files for plagiarism checks and download the\nreports locally, creating a linking file in the process\n\npositional arguments:\n  U           Your user-id for the MOSS service.\n  F           The folder whose contents you want to submit.\n\noptional arguments:\n  -h, --help  show this help message and exit\n</code></pre>\n\n          </div>"}, "last_serial": 7010478, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ba6f25f73b8394e6fbf8271784e94ac8", "sha256": "ed2a768d3dab28be4e8bcbfea854fb598fa6ea6566533f5c6a7f95c00919421f"}, "downloads": -1, "filename": "Py_SCSO_Compare-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba6f25f73b8394e6fbf8271784e94ac8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13410, "upload_time": "2020-04-13T15:07:01", "upload_time_iso_8601": "2020-04-13T15:07:01.924274Z", "url": "https://files.pythonhosted.org/packages/32/5d/25ffe68e1f8d2b5ed632eede82f696488df007438cef0a71ae49003f720b/Py_SCSO_Compare-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b079bbd4db6d22e2c26cca97945db49f", "sha256": "31a2676479018a3b920288d49ce710f7b5c10b70c39d30c2d4ea4a24f6b322cf"}, "downloads": -1, "filename": "Py-SCSO-Compare-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b079bbd4db6d22e2c26cca97945db49f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10093, "upload_time": "2020-04-13T15:07:06", "upload_time_iso_8601": "2020-04-13T15:07:06.756028Z", "url": "https://files.pythonhosted.org/packages/74/07/b30b12e0177c9598c83fe4a7204fa22476908536192fa4fe7230cb806a59/Py-SCSO-Compare-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ba6f25f73b8394e6fbf8271784e94ac8", "sha256": "ed2a768d3dab28be4e8bcbfea854fb598fa6ea6566533f5c6a7f95c00919421f"}, "downloads": -1, "filename": "Py_SCSO_Compare-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ba6f25f73b8394e6fbf8271784e94ac8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13410, "upload_time": "2020-04-13T15:07:01", "upload_time_iso_8601": "2020-04-13T15:07:01.924274Z", "url": "https://files.pythonhosted.org/packages/32/5d/25ffe68e1f8d2b5ed632eede82f696488df007438cef0a71ae49003f720b/Py_SCSO_Compare-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b079bbd4db6d22e2c26cca97945db49f", "sha256": "31a2676479018a3b920288d49ce710f7b5c10b70c39d30c2d4ea4a24f6b322cf"}, "downloads": -1, "filename": "Py-SCSO-Compare-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b079bbd4db6d22e2c26cca97945db49f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10093, "upload_time": "2020-04-13T15:07:06", "upload_time_iso_8601": "2020-04-13T15:07:06.756028Z", "url": "https://files.pythonhosted.org/packages/74/07/b30b12e0177c9598c83fe4a7204fa22476908536192fa4fe7230cb806a59/Py-SCSO-Compare-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:13 2020"}