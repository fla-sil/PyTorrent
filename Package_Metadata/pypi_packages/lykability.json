{"info": {"author": "John Keck", "author_email": "robertjkeck2@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "==========\r\nlikability\r\n==========\r\n\r\nUsing empythy to score likability based on sentiment analysis of recent tweets about a given person\r\n\r\nPurpose\r\n======= \r\n\r\nTo piggyback off of the empythy natural languare classifier package to analyze average sentiment of tweets related to a particular person to calculate a \u2018likability score\u2019 for that person. Useful in tracking sentiment changes across a certain period of time, i.e. the likability score of a celebrity before and after a concert.\r\n\r\nInstructions \r\n============\r\n\r\n- Open terminal. Make sure you have `python3` and `pip` downloaded. \r\n- pip install likability \r\n- Create a csv file with the names of the people you\u2019d like to analyze for likability. Name this file name.csv in the current directory.\r\n- Determine how many recent tweets you\u2019d like to query for each person. This will be used in the script below as `num_tweets`.\r\n- Make sure you have Twitter API keys and access tokens. If you do not, go to [Twitter Apps](https://apps.twitter.com/), create an app, and find the required keys and tokens under Applications Settings -> Consumer Key (API Key) -> manage keys and access tokens.\r\n- Run Python 3 by typing `python` into the terminal. \r\n- Enter script below to run the LikabilityAnalyzer module. \r\n\r\n- ``from likability import LikabilityAnalyzer``\r\n- ``filepath = 'name.csv'``\r\n- ``num_tweets = 100`` \r\n- ``sentimentScore = LikabilityAnalyzer.analyzer(filepath,num_tweets)``\r\n\r\n- When prompted, enter in your Twitter API keys. This will allow likability to access the Twitter API to query the tweets needed to complete the sentiment analysis. \r\n- Wait for script to run to completion. Please note, due to Twitter API Rate Limiting, querying more than 15 names will lead to longer wait times. Please allow 1 minute per name for lists greater than 15 names.\r\n- Upon completion, open the newly created Sentiment.csv in the current directory to access the likability scores for each person.\r\n\r\nPossible Usage\r\n==============\r\n\r\n- Score top fantasy football players to see what the Twittersphere thinks about each player pre-draft\r\n- Instead of names of people, use product names to track customer sentiment in real-time \r\n- Solve the question: who is more likable, Justin Timberlake or Jimmy Fallon", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/robertjkeck2/lykability", "keywords": "machine learning,data science,NLP,natural language processing,sentiment,sentiment analysis,sentiment prediction,twitter corpus,twitter,tweets corpus,movie reviews corpus,NLTK,automated machine learning", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lykability", "package_url": "https://pypi.org/project/lykability/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lykability/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/robertjkeck2/lykability"}, "release_url": "https://pypi.org/project/lykability/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Using empythy to score likability based on sentiment analysis of recent tweets about a given person", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Using empythy to score likability based on sentiment analysis of recent tweets about a given person</p>\n<div id=\"purpose\">\n<h2>Purpose</h2>\n<p>To piggyback off of the empythy natural languare classifier package to analyze average sentiment of tweets related to a particular person to calculate a \u2018likability score\u2019 for that person. Useful in tracking sentiment changes across a certain period of time, i.e. the likability score of a celebrity before and after a concert.</p>\n</div>\n<div id=\"instructions\">\n<h2>Instructions</h2>\n<ul>\n<li>Open terminal. Make sure you have <cite>python3</cite> and <cite>pip</cite> downloaded.</li>\n<li>pip install likability</li>\n<li>Create a csv file with the names of the people you\u2019d like to analyze for likability. Name this file name.csv in the current directory.</li>\n<li>Determine how many recent tweets you\u2019d like to query for each person. This will be used in the script below as <cite>num_tweets</cite>.</li>\n<li>Make sure you have Twitter API keys and access tokens. If you do not, go to [Twitter Apps](<a href=\"https://apps.twitter.com/\" rel=\"nofollow\">https://apps.twitter.com/</a>), create an app, and find the required keys and tokens under Applications Settings -&gt; Consumer Key (API Key) -&gt; manage keys and access tokens.</li>\n<li>Run Python 3 by typing <cite>python</cite> into the terminal.</li>\n<li>Enter script below to run the LikabilityAnalyzer module.</li>\n<li><tt>from likability import LikabilityAnalyzer</tt></li>\n<li><tt>filepath = 'name.csv'</tt></li>\n<li><tt>num_tweets = 100</tt></li>\n<li><tt>sentimentScore = LikabilityAnalyzer.analyzer(filepath,num_tweets)</tt></li>\n<li>When prompted, enter in your Twitter API keys. This will allow likability to access the Twitter API to query the tweets needed to complete the sentiment analysis.</li>\n<li>Wait for script to run to completion. Please note, due to Twitter API Rate Limiting, querying more than 15 names will lead to longer wait times. Please allow 1 minute per name for lists greater than 15 names.</li>\n<li>Upon completion, open the newly created Sentiment.csv in the current directory to access the likability scores for each person.</li>\n</ul>\n</div>\n<div id=\"possible-usage\">\n<h2>Possible Usage</h2>\n<ul>\n<li>Score top fantasy football players to see what the Twittersphere thinks about each player pre-draft</li>\n<li>Instead of names of people, use product names to track customer sentiment in real-time</li>\n<li>Solve the question: who is more likable, Justin Timberlake or Jimmy Fallon</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2312594, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9d5a225776f2de9478d16d645eeb787f", "sha256": "5f3402deb36b370c2b9bf4b08673c340f8e6b1774167a5c4cb6a0e8bc9962873"}, "downloads": -1, "filename": "lykability-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d5a225776f2de9478d16d645eeb787f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11221, "upload_time": "2016-08-30T04:39:26", "upload_time_iso_8601": "2016-08-30T04:39:26.358171Z", "url": "https://files.pythonhosted.org/packages/a6/91/42d6fa164eaf0423f47f0f4ae7f62ea44fd4e1bd7b9352bb6451bdf6e073/lykability-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2730d8214861be7a3c78c761944927b4", "sha256": "38ac19a4a21732d22c8e9fe76e98b9c4ffc48862e6dbb88083e0cde8be69ba08"}, "downloads": -1, "filename": "lykability-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2730d8214861be7a3c78c761944927b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6551, "upload_time": "2016-08-30T04:39:28", "upload_time_iso_8601": "2016-08-30T04:39:28.574223Z", "url": "https://files.pythonhosted.org/packages/d4/e4/46c1fd7b51962f4aa2aa663d54d23d314dfbb01f865a2bdbddab6fdca0e0/lykability-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9d5a225776f2de9478d16d645eeb787f", "sha256": "5f3402deb36b370c2b9bf4b08673c340f8e6b1774167a5c4cb6a0e8bc9962873"}, "downloads": -1, "filename": "lykability-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9d5a225776f2de9478d16d645eeb787f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11221, "upload_time": "2016-08-30T04:39:26", "upload_time_iso_8601": "2016-08-30T04:39:26.358171Z", "url": "https://files.pythonhosted.org/packages/a6/91/42d6fa164eaf0423f47f0f4ae7f62ea44fd4e1bd7b9352bb6451bdf6e073/lykability-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2730d8214861be7a3c78c761944927b4", "sha256": "38ac19a4a21732d22c8e9fe76e98b9c4ffc48862e6dbb88083e0cde8be69ba08"}, "downloads": -1, "filename": "lykability-1.0.0.tar.gz", "has_sig": false, "md5_digest": "2730d8214861be7a3c78c761944927b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6551, "upload_time": "2016-08-30T04:39:28", "upload_time_iso_8601": "2016-08-30T04:39:28.574223Z", "url": "https://files.pythonhosted.org/packages/d4/e4/46c1fd7b51962f4aa2aa663d54d23d314dfbb01f865a2bdbddab6fdca0e0/lykability-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:45 2020"}