{"info": {"author": "Craig Lurey", "author_email": "craig@keepersecurity.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.4", "Topic :: Security"], "description": "\ufeff![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/commander_logo_250x100.png)\n\n----\n\nJump to:\n* [Overview](#password-management-sdk-for-it-admins--developers)\n* [Use Cases](#use-cases)\n* [Installation](#python-installation---linux-and-mac)\n* [Developer Setup](#developer-mode)\n* [Command-line Usage](#command-line-usage)\n* [Interactive Shell](#interactive-shell)\n* [Keeper Command Reference](#keeper-command-reference)\n* [Importing Data](#importing-records-into-keeper)\n* [Exporting Data](#exporting-records-from-keeper)\n* [Event Reporting](#ad-hoc-event-reporting)\n* [SIEM integration](#event-logging-to-siem)\n* [Advanced Configuration](#advanced-configuration-file)\n* [Batch Mode](#batch-mode)\n* [Enterprise SSO Login](#enterprise-sso-login)\n* [Pushing Records to Users and Teams](#pushing-records-to-users-and-teams)\n* [Creating and Pre-Populating Vaults](#creating-and-pre-populating-vaults)\n* [Password Retrieval API](#password-retrieval-api)\n* [Jenkins CI Integration](#jenkins-ci-integration)\n* [Launching and Connecting to Remote Servers](#launching-and-connecting-to-remote-servers)\n* [Environmental Variables](#environmental-variables)\n* [Password Rotation](#targeted-password-rotations--plugins)\n* [About Keeper](#about-our-security)\n* [Enterprise Resources](#enterprise-resources)\n\n### Password Management SDK for IT Admins & Developers\n\nKeeper Security develops the world's most downloaded password manager and encrypted digital vault with millions of individual customers and thousands of enterprise customers worldwide.  Keeper is a zero-knowledge, native and cloud-based solution available on every mobile and desktop device platform. <a href=\"#about-keeper\">Read more</a> about Keeper or visit the [Keeper Security](https://keepersecurity.com) website.\n\nKeeper Commander is a command-line and SDK interface to [Keeper&reg; Password Manager](https://keepersecurity.com). Commander can be used to access and control your Keeper vault, perform administrative functions (such as end-user onboarding and data import/export), launch remote sessions, rotate passwords, eliminate hardcoded passwords and more. Keeper Commander is an open source project with contributions from Keeper's engineering team and partners. \n\nIf you need any assistance or require specific functionality not supported in Commander yet, please contact us at commander@keepersecurity.com.\n\n### Use Cases\n\n* Access your Keeper vault through a command-line interface\n* Perform bulk import and export of vault records \n* Manage records, folders and shared folders\n* Customize integration into your backend systems\n* Provision new Enterprise user accounts and shared folders\n* Manage nodes, roles, teams and users\n* Rotate passwords on service accounts or other targets\n* Integrate Keeper into your existing backend systems\n* Schedule and automate commands\n* Initiate remote connections (such as SSH and RDP) \n\n### Python Installation - Linux and Mac\n\n1. Get Python 3 from [python.org](https://www.python.org).\n2. Install Keeper Commander with pip3:\n\n```bash\n$ pip3 install keepercommander\n```\n\nImportant: Restart your terminal session after installation\n\n### Python Installation - Windows \n\n1. Download and install [WinPython](https://winpython.github.io/)\n2. From the install folder of WinPython, run the \"WinPython Command Prompt\" \n2. Install Keeper Commander with pip3:\n\n```bash\n$ pip3 install keepercommander\n```\n\n### Upgrading to Latest Python Code\n\n```bash\n$ pip3 install --upgrade keepercommander\n```\n\nPlease do not upgrade a production system without validation in your test environment as commands and functionality is under rapid development.\n\n### .Net SDK\n\nWe are in active development of a .Net SDK that covers the core use cases of accessing and updating vault records.  See the [.Net SDK](https://github.com/Keeper-Security/Commander/tree/master/dotnet-keeper-sdk) for source code and sample Commander project of the latest version.\n\n### Developer Mode\n\nIf you are a developer and you want to modify the Python source code then follow these steps:\n\n1. Clone/Download the Commander repository \n2. Install Python3 from python.org\n3. Install virtualenv:\n```bash\n$ sudo pip3 install virtualenv\n```\n4. Create and activate the virtual environment for your keeper project:\n\n```bash\n$ cd /path/to/Commander\n$ virtualenv -p python3 venv\n$ source venv/bin/activate\n$ pip install -r requirements.txt\n$ pip install -e .\n```\n\nKeeper supports plugins for various 3rd party systems for password reset integration. Depending on the plugin, you will need to also install the modules required by that plugin. For example, our MySQL plugin requires the PyMySQL module.\n\nSee the [custom](https://github.com/Keeper-Security/Commander/tree/master/keepercommander/custom) folder for examples on creating your own custom scripts.\n\n### Command-line Usage\n\nCommander's command-line interface and interactive shell is a powerful and convenient way to access and control your Keeper vault and perform many administrative operations. To see all available commands, just type:\n\n```\n$ keeper\n\nusage: keeper [--server SERVER] [--user USER] [--password PASSWORD]\n              [--version] [--config CONFIG] [--debug]\n              [command] [options [options ...]]\n\npositional arguments:\n  command               Command\n  options               Options\n\noptional arguments:\n  --server SERVER, -ks SERVER\n                        Keeper Host address.\n  --user USER, -ku USER\n                        Email address for the account.\n  --password PASSWORD, -kp PASSWORD\n                        Master password for the account.\n  --version             Display version\n  --config CONFIG       Config file to use\n  --debug               Turn on debug mode\n```\n\n### Interactive Shell\nTo run a series of commands and stay logged in, you will enjoy using Commander's interactive shell.\n\n```\n$ keeper shell\n\n  _  __\n | |/ /___ ___ _ __  ___ _ _\n | ' </ -_) -_) '_ \\/ -_) '_|\n |_|\\_\\___\\___| .__/\\___|_|\n              |_|\n\n password manager & digital vault\n\nLogging in...\nSyncing...\nDecrypted [400] Records\n\nMy Vault> search amazon                                                                                                                 \n\n  #  Record UID              Title                        Login              URL\n---  ----------------------  ---------------------------  -----------------  ----------------------\n  1  8Q_NiK10JWKppngL5R4IvQ  Amazon AWS Demo              admin@company.com  https://aws.amazon.com\n  2  Pe8N7Ii0rDd64XVDOnlS4g  Business Account             me@company.com     https://aws.amazon.com\n\nMy Vault> get Pe8N7Ii0rDd64XVDOnlS4g                                                                                                    \n\n                 UID: Pe8N7Ii0rDd64XVDOnlS4g\n              Folder: Amazon AWS          \n               Title: Business Account    \n               Login: me@company.com      \n            Password: BmW2NKqfaV@2O%DT!Qg0emOJQf\n                 URL: https://aws.amazon.com\n Account ID or alias: mycompanyname\n       Access Key ID: BLklAomJ9NvGWtupv3QZmc0#m@\n          Secret Key: 0MZenvr0x4rzK$8qLHwzS42i8r7fsdjh4DKJASHd34\n               Notes: These are some notes \n        Shared Users: craig@acme-demo.com (Owner) self\n      Shared Folders: Amazon AWS          \n\nMy Vault>                                                                                                                               \n\n```\n\nType ```h``` to display all commands and help information.\n\n### Keeper Command Reference\n\nWhether using the interactive shell, CLI or JSON config file, Keeper supports the following features specified by ```command```.  Each command supports additional parameters and options.  \n\nTo get help on a particular command, run:\n\n ```help <command>```\n\n**Basic Vault Commands**\n\n_Note:_ Some commands accept record or shared folder UID parameter. UID values may start with dash character (**-**) that is interpreted by command parser as an option. To pass a parameter starting with dash separate this parameter with two dashes (**--**). For example: `rmdir -- -Gd9l4daPw-fMd`\n\n* ```login``` Login to Keeper\n\n* ```whoami``` Information about logged in user\n\n* ```logout``` Logout from Keeper\n\n* ```help``` Display help docs on a particular command\n\n* ```shell``` Use Keeper interactive shell\n\n* ```sync-down``` or ```d``` Download, sync and decrypt vault\n\n* ```list``` or ```l``` List all records or search with a regular expression.\n\n* ```search``` or ```s``` Search all records with a regular expression.\n\n* ```ls``` List folder contents (try ```ls -l``` as well)\n\n* ```tree``` Display entire folder structure as a tree\n\n* ```cd``` Change current folder\n\n* ```get``` Retrieve and display specified Keeper Record/Folder/Team in printable or JSON format.\n\n* ```find-password``` or ```clipboard-copy``` Copy the specified Keeper Record password field to the system output or clipboard \n  accordingly. Command accepts record UID or record path. If record is not found then command matches records by title.\n\n    Parameters:   \n    - ```--username``` Matches records by login/username field in addition to matching by title. Can be used if matching by record title returns more than one record.\n\n* ```record-history``` Display the record version history or a specific version of a record.\n\n    Parameters:\n    - ```--action=list``` Display the revision number, modified by user, time of modification.\n    - ```--action=diff``` Display revision, field changed and old/new values. \n    - ```--action=show``` Provided the revision number, display the record for that specific revision and record. \n    - ```--action=restore``` Restore the current version to the specified record UID and version.\n    - ```--revision``` Get a specific revision \n\n* ```totp``` Display the Two-Factor Code (TOTP) attached to a vault record. If no record UID is provided, a list of available records that contain Two-Factor Codes will be displayed. If a record UID is provided, the code is displayed with a countdown timer.\n\n* ```download-attachment``` Download all file attachments in specified record\n\n* ```upload-attachment``` Upload file attachments to the specified record\n\n* ```delete-attachment``` Delete a file attachment from the specified record.  Specify Record UID and Filename (or Attachment ID)\n\n* ```list-sf``` or ```lsf``` Display all shared folders\n\n* ```create-user``` Create Keeper vault account.\nNote: If executed by an admin, the user will be provisioned to the Enterprise license. - [See Details](#creating-and-pre-populating-vaults)\n\n* ```list-team``` or ```lt``` Display all teams\n\n**Record Management Commands**\n\n* ```add``` Add a record to the vault\n\n* ```edit``` Edit a record in the vault\n\n* ```rm``` Remove record\n\n* ```append-notes``` or ```an``` Append notes to existing record\n\n**Folder Management Commands**\n\n* ```mkdir``` Create folder\n\n* ```rmdir``` Remove folder and its content\n\n* ```mv``` Move record or folder\n\n* ```ln``` Create a link between record or folder\n\n* ```set``` Set environmental variables that can be used for substitution within other commands/arguments. \n\n* ```echo``` Display environmental variables\n\n**Remote Connection Commands**\n\n* ```connect``` Connect to external server using SSH, RDP or any other protocol.\n\n**Password Rotation Commands**\n\n* ```rotate``` or ```r``` Rotate password in record\n\n**Import and Export Commands**\n\n* ```import``` Import data from local file to Keeper. JSON, CSV, Keepass, LastPass formats accepted. Keepass import includes all file attachments.\n\n* ```export``` Export data from Keeper to local file or stdout. JSON, CSV, Keepass file formats supported.  Keepass exports include all file attachments.\n\n**Folder and Record Sharing Commands**\n\n* ```share-record``` or ```sr``` Grant or revoke record's user access\n\n* ```share-folder``` or ```sf``` Grant or revoke shared folder's user access or record permission\n\n* ```record-permission``` Changes record permissions inside the folder or folder tree. \n\n    Parameters:\n    - ```--action``` Grant or revoke requested permissions\n    - ```--share-record``` Modify direct record share permissions only\n    - ```--share-folder``` Modify record permissions on shared folders\n    - ```--recursive``` Apply permissions to all records in folder tree\n    - ```--can-share``` Permission to share the record\n    - ```--can-edit``` Permission to edit the record\n    - ```--dry-run``` Do not modify but display permissions that are about to be changed by this command \n\n**Enterprise Console Management Commands**\n\n* ```enterprise-info``` or ```ei```   Display enterprise information\n\n    Parameters:\n    - ```--nodes``` Show node structure in a tree form\n    - ```--users``` Show users in a list view\n    - ```--roles``` Show all roles in a list view\n    - ```--teams``` Show all teams in a list view\n    - ```--node``` Specify a single node to limit view\n    - ```--v``` Verbose mode \n\n* ```enterprise-user <email>``` or ```eu <email>```   Enterprise user management\n\n    Parameters:\n    - ```--expire``` Expire the Master Password for the user\n    - ```--extend``` Extend vault transfer consent by 7 days \n    - ```--lock``` Unlock the user account\n    - ```--unlock``` Lock the user account \n    - ```--disable-2fa``` Disable 2FA for a user\n    - ```--add``` Invite a new user to join the enterprise\n    - ```--delete``` Delete the user and all stored vault records (use with caution)\n    - ```--name``` Rename a user's display name\n    - ```--node``` Move user into a node \n    - ```--add-role``` Add a user to a role\n    - ```--remove-role``` Remove a user from a role\n    - ```--add-team``` Add a user to a team\n    - ```--remove-team``` Remove a user from a team\n    - If no parameters are provided, displays information about specified email\n\n* ```enterprise-role <Role ID>``` or ```er <Role ID>```   Enterprise role management\n\n    Parameters:\n    - ```--add-user``` Add a user to a specified role\n    - ```--remove-user``` Remove a user from a specified role\n    - If no parameters are provided, displays information about specified role\n\n* ```enterprise-team <Team ID>``` or ```et <Team ID>```   Enterprise team management\n\n    Parameters:\n    - ```--add``` Create a new team in the root node\n    - ```--node``` Move a team into the specified node\n    - ```--add-user``` Add a user to a team\n    - ```--remove-user``` Remove a user from a team\n    - ```--name``` Change the Team name\n    - ```--delete``` Delete a team\n    - ```--restrict-edit``` Restrict record edit on the team\n    - ```--restrict-share``` Restrict record re-sharing on the team\n    - ```--restrict-view``` Restrict record viewing on the team \n    - If no parameters are provided, displays information about specified team\n\n* ```team-approve``` Approve queued teams and users that have been provisioned by SCIM or Active Directory Bridge \n\n    Parameters:\n    - ```--team``` Approve teams only\n    - ```--user``` Approve team users only\n    - ```--restrict-edit {on,off}``` disable record edits\n    - ```--restrict-share {on,off}``` disable record re-shares\n    - ```--restrict-view {on,off}``` disable view/copy passwords\n\n* ```enterprise-push <Record Template File Name>```   Populate user and team vaults with default records - [See Details](#pushing-records-to-users-and-teams)\n\n    Parameters:\n    - ```--syntax-help``` Displays information of record template file format\n    - ```--team TEAM_NAME or TEAM UID``` Populate all team users' vaults\n    - ```--email USER_EMAIL``` Populate user's vault\n    - ```file``` JSON file name containing template records\n\n* ```audit-log``` Export audit and event logs to SIEM - [See Details](#event-logging-to-siem)\n    - ```--target=splunk``` Export events to Splunk HTTP Event Collector \n    - ```--target=sumo``` Export events to Sumo Logic HTTP Event Collector\n    - ```--target=syslog``` Export events to a local file in syslog format\n    - ```--target=syslog-port``` Export events in syslog format to TCP port. Both plain and SSL connections are supported\n    - ```--target=azure-la``` Export events to Azure Log Analytics to custom log named Keeper_CL\n    - ```--target=json``` Export events to a local file in JSON format\n\n* ```audit-report``` Generate ad-hoc customized audit event reports in raw and summarized formats - [See Details](#ad-hoc-event-reporting)\n\n    Parameters:\n    - ```--report-type``` {raw,dim,hour,day,week,month,span}\n    - ```--report-format``` {message,fields} output format (raw reports only)\n    - ```--columns COLUMNS```     Can be repeated. (ignored for raw reports)\n    - ```--aggregate``` {occurrences,first_created,last_created} aggregated value. Can be repeated. (ignored for raw reports)\n    - ```--timezone TIMEZONE```   return results for specific timezone\n    - ```--limit LIMIT```         maximum number of returned rows\n    - ```--order``` {desc,asc}    sort order\n    - ```--created CREATED```  Filter: Created date. Predefined filters: today, yesterday, last_7_days, last_30_days, month_to_date, last_month, year_to_date, last_year\n    - ```--event-type EVENT_TYPE``` Filter: Audit Event Type\n    - ```--username USERNAME``` Filter: Username of event originator\n    - ```--to-username TO_USERNAME``` Filter: Username of event target\n    - ```--record-uid RECORD_UID``` Filter: Record UID\n    - ```--shared-folder-uid SHARED_FOLDER_UID``` Filter: Shared Folder UID\n\n* ```user-report``` Generate ad-hoc user status report\n\n    Parameters:\n    - ```--format``` {table,json,csv}\n    - ```--output``` output to the given filename\n    - ```--days``` {number of days} number of days to look back for last login date\n\n* ```share-report``` Generate ad-hoc sharing permission report that displays users and team permissions for all records in the vault\n\n    Parameters:\n    - ```--record``` View share permissions on specific record \n    - ```--email``` View share permissions with specific account. User email or team name\n    - ```--owner``` Include the owner information for each record \n    - ```--verbose``` Include the record title and permission settings for each record \n\n### Importing Records into Keeper\n\nTo import records into your vault, use the ```import``` command.  Supported import formats:\n\n* JSON\n* CSV \n* Keepass (see additional [install instructions](keepercommander/importer/keepass/README.md))\n* LastPass (see additional [install instructions](keepercommander/importer/lastpass/README.md))\n\nJSON import files can contain records, folders, subfolders, shared folders, default folder permissions  and user/team permissions.\nCSV import files contain records, folders, subfolders, shared folders and default shared folder permissions.\nKeepass files will transfer records, file attachments, folders and subfolders. Option exists to make all folders as shared folders. File attachments are supported in both import and export with Keepass however they are limited to 1MB for each file based on keepass' structure.\nLastPass import will transfer the vault passwords directly to Keeper retaining the folder structure.\n\n**JSON Record Import**\n\nBelow is a JSON import file with 2 records. The first record is added to a folder called \"My Servers\". The second record is added to \"My Servers\" and also added to a shared folder called \"Shared Servers\". \n\nThe import file example below is an array of record objects which can import into private folders and shared folders:\n\n```bash\n[{\n    \"title\":\"Dev Server\",\n    \"folders\": [\n      {\n        \"folder\": \"My Servers\"\n      }\n    ],\n    \"login\": \"root\",\n    \"password\": \"lk4j139sk4j\",\n    \"login_url\": \"https://myserver.com\",\n    \"notes\": \"These are some notes.\",\n    \"custom_fields\": {\"Security Group\":\"Private\"}\n},\n{\n    \"title\":\"Prod Server\",\n    \"folders\": [\n      {\n        \"folder\": \"My Servers\"\n      },\n      {\n       \"shared_folder\": \"Shared Servers\",\n       \"can_edit\": true,\n       \"can_share\": true\n      }\n    ],\n    \"login\": \"root\",\n    \"password\": \"kj424094fsdjhfs4jf7h\",\n    \"login_url\": \"https://myprodserver.com\",\n    \"notes\": \"These are some notes.\",\n    \"custom_fields\": {\"Security Group\":\"Public\",\"IP Address\":\"12.45.67.8\"}\n}]\n```\n\nAnother example below first creates shared folders that are shared to users and teams, then imports records into the shared folders.  The format of the file is slightly different and allows you to separate the creation of shared folder objects and records:\n\n\n```\n{\n  \"shared_folders\": [\n    {\n      \"path\": \"My Customer 1\",\n      \"manage_users\": true,\n      \"manage_records\": true,\n      \"can_edit\": true,\n      \"can_share\": true,\n      \"permissions\": [\n        {\n          \"uid\": \"kVM96KGEoGxhskZoSTd_jw\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        },\n        {\n          \"name\": \"user@mycompany.com\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        }\n      ]\n    },\n    {\n      \"path\": \"Testing\\\\My Customer 2\",\n      \"manage_users\": true,\n      \"manage_records\": true,\n      \"can_edit\": true,\n      \"can_share\": true,\n      \"permissions\": [\n        {\n          \"uid\": \"ih1CggiQ-3ENXcn4G0sl-g\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        },\n        {\n          \"name\": \"user@mycompany.com\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        }\n      ]\n    }\n  ],\n  \"records\": [\n    {\n      \"title\": \"Bank Account 1\",\n      \"login\": \"customer1234\",\n      \"password\": \"4813fJDHF4239fdk\",\n      \"login_url\": \"https://chase.com\",\n      \"notes\": \"These are some notes.\",\n      \"custom_fields\": {\n        \"Account Number\": \"123-456-789\"\n      },\n      \"folders\": [\n        {\n          \"folder\": \"Optional Private Folder 1\"\n        }\n      ]\n    },\n    {\n      \"title\": \"Bank Account 2\",\n      \"login\": \"mybankusername\",\n      \"password\": \"w4k4k193f$^&@#*%2\",\n      \"login_url\": \"https://amex.com\",\n      \"notes\": \"Some great information here.\",\n      \"custom_fields\": {\n        \"Security Group\": \"Public\",\n        \"IP Address\": \"12.45.67.8\"\n      },\n      \"folders\": [\n        {\n          \"folder\": \"Optional Private Folder 1\"\n        },\n        {\n          \"shared_folder\": \"My Customer 1\",\n          \"can_edit\": true,\n          \"can_share\": true\n        }\n      ]\n    }\n  ]\n}\n```\n\nThe format must be strict JSON or it will fail parsing. To import this file:\n\n```bash\n$ keeper import --format=json import.json\n```\n\nThere are more complex import file examples that supports shared folders, folder permissions, user permissions and team permissions located in the sample_data/ folder. To import the sample JSON file into your vault, type this command:\n\n* Example 1: [import.json.txt](sample_data/import.json.txt)\n* Example 2: [import_records_existing_folders.json.txt](sample_data/import_records_existing_folders.json.txt)\n* Example 3: [import_records_into_folders.json.txt](sample_data/import_records_into_folders.json.txt)\n* Example 4: [import_shared_folders.json.txt](sample_data/import_shared_folders.json.txt)\n* Example 5: [import_shared_folders_and_records.json.txt](sample_data/import_shared_folders_and_records.json.txt)\n\n```bash\n$ keeper import --format=json sample_data/import.json.txt\n```\n\nThe sample file contains \"permissions\" objects that contain email address or team names.  If the email or team name exists in your Keeper enterprise account, they will be added to the shared folder, otherwise the information is ignored. \n\n\n**CSV Record Import**\n\nKeeper supports .csv text file import using comma delimited fields.\n\nFile Format:\nFolder,Title,Login,Password,Website Address,Notes,Shared Folder,Custom Fields\n\n* To specify subfolders, use backslash \"\\\\\" between folder names\n* To set shared folder permission on the record, use the #edit or #reshare tags as seen below \n* Enclose fields in quotes for multi-line or special characters\n* Ensure files are UTF-8 encoded for support of international or double-byte characters \n\nBelow is an example csv file that showcases several import features including personal folders, shared folders, subfolders, special characters and multi-line fields.\n\n```\nBusiness,Twitter,marketing@company.com,\"a bad password\",https://twitter.com,Some interesting notes!,,API Key,\"131939-AAAEKJLE-491231$##%!\",Date Created,2018-04-02\nSubfolder1,Twitter,craig@gmail.com,xwVnk0hfJmd2M$2l4shGF#p,https://twitter.com,,Social Media\\Customer1#edit#reshare\nSubfolder2,Facebook,craig@gmail.com,TycWyxodkQw4IrX9VFxj8F8,https://facebook.com,,Social Media\\Customer2#edit#reshare\n,Google Dev Account,mydevaccount@gmail.com,\"8123,9fKJRefa$!@#4912fkk!--3\",https://accounts.google.com,\"Google Cloud ID 448812771239122\nAccount Number 449128\nThis is multi-line\",Shared Accounts#edit#reshare,2FA Phone Number,+19165551212\n```\n\nTo import this file:\n```bash\n$ keeper import --format=csv test.csv\n4 records imported successfully\n```\n\nThe resulting vault will look like [this image](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/csv_import.png)\n\n**Keepass Import**\n\nKeeper supports importing the record and folder structure directly from an encrypted Keepass file. File attachments are also supported.  Make sure to first follow [these instructions](keepercommander/importer/keepass/README.md) to install the necessary keepass modules.\n\n```bash\n$ keeper import --format=keepass test.kdbx\n```\n\nYou can optionally make all top level folders as shared folder object with default permissions.\n\n```bash\n$ keeper import --format=keepass --shared --permissions=URES test.kdbx\n```\n\nFor more options, see the help screen:\n```bash\n$ keeper help import\n```\n\n**LastPass Import**\n\nKeeper supports automatic import of your LastPass vault by providing your LastPass email, Master Password and 2FA code. Make sure to first follow [these instructions](keepercommander/importer/lastpass/README.md) to install the necessary LastPass modules.\n\n```bash\n$ keeper import --format=lastpass craig@acme-demo.com \nProcessing... please wait.\n...             LastPass Password: *******\nPress <Enter> if account is not protected with Multifactor Authentication\n...          Multifactor Password: ******\n13 records imported successfully\nMy Vault>\n```\n\nYou can optionally make all top level folders as shared folder object with default permissions.\n\n```bash\n$ keeper import --format=lastpass --shared --permissions=URES craig@acme-demo.com \n```\n\nFor more options, see the help screen:\n```bash\n$ keeper help import\n```\n\n### Exporting Records from Keeper\n\nTo export records from your vault, use the ```export``` command.  Supported export formats:\n\n* JSON\n* CSV\n* Keepass (see additional [install instructions](keepercommander/importer/keepass/README.md))\n\nJSON export files contain records, folders, subfolders, shared folders, default folder permissions and user/team permissions.\nCSV import files contain records, folders, subfolders, shared folders and default shared folder permissions.\nKeepass files contain records, file attachments, folders and subfolders.\n\n### Ad-Hoc Event Reporting \n\nBusiness customers can now generate advanced ad-hoc event reports with over 100 different event types and custom filters. For help with the syntax of the report, use the below command:\n\n```\nMy Vault> audit-report --syntax-help                                                                                                                                                                        \n``` \n\nThe list of over 100 event types is documented in our Enterprise Guide:\n\n[https://docs.keeper.io/enterprise-guide/event-reporting](https://docs.keeper.io/enterprise-guide/event-reporting)\n\n```\nAudit Report Command Syntax Description:\n\nEvent properties\n  id                event ID\n  created           event time\n  username          user that created audit event\n  to_username       user that is audit event target\n  from_username     user that is audit event source\n  ip_address        IP address\n  geo_location      location\n  audit_event_type  audit event type\n  keeper_version    Keeper application\n  channel           2FA channel\n  status            Keeper API result_code\n  record_uid        Record UID\n  shared_folder_uid Shared Folder UID\n  node_id           Node ID (enterprise events only)\n  team_uid          Team UID (enterprise events only)\n\n--report-type:\n            raw     Returns individual events. All event properties are returned.\n                    Valid parameters: filters. Ignored parameters: columns, aggregates\n\n  span hour day\t    Aggregates audit event by created date. Span drops date aggregation\n     week month     Valid parameters: filters, columns, aggregates\n\n            dim     Returns event property description (audit_event_type, keeper_version) or distinct values.\n                    Valid parameters: columns. Ignored parameters: filters, aggregates\n\n--columns:          Defines break down report properties.\n                    can be any event property except: id, created\n\n--aggregates:       Defines the aggregate value:\n     occurrences    number of events. COUNT(*)\n   first_created    starting date. MIN(created)\n    last_created    ending date. MAX(created)\n\n--limit:            Limits the number of returned records\n\n--order:            \"desc\" or \"asc\"\n                    raw report type: created\n                    aggregate reports: first aggregate\n\nFilters             Supported: '=', '>', '<', '>=', '<=', 'IN(<>,<>,<>)'. Default '='\n--created           Predefined ranges: today, yesterday, last_7_days, last_30_days, month_to_date, last_month, year_to_date, last_year\n                    Range 'BETWEEN <> AND <>'\n                    where value is UTC date or epoch time in seconds\n--event-type        Audit Event Type.  Value is event id or event name\n--username          Email\n--to-username\n--record-uid\t    Record UID\n--shared-folder-uid Shared Folder UID\n```\n\nFor example, to see all record deletions that occurred in the last 7 days:\n```\nMy Vault> audit-report --report-type=raw --event-type record_delete --created last_7_days\n```\n\nAnother example, to see all event history for a particular record UID:\n```\nMy Vault> audit-report --report-type=raw --record-uid cQxq0MZ1ZmB-s9JE8CZpdA\n```\n\nTo see certain events (in this case, login_failure) today:\n```\nMy Vault> audit-report --report-type=raw --event-type=login_failure --created=today\n```\n\nTo list all possible event types:\n```\nMy Vault> audit-report --report-type=dim --column=audit_event_type \n```\n\nThere are hundreds of possible report variations possible. If you have any questions, please contact us at commander@keepersecurity.com and we'll help you construct the perfect report syntax.\n\n### Event Logging to SIEM\n\nCommander supports integration with popular SIEM solutions such as Splunk, Sumo and general Syslog format.  For more general reporting of events, we recommend using the ```audit-report``` command.  For pushes of event data into on-prem SIEM, the ```audit-log``` command is a good choice because it automatically tracks the last event exported and only sends incremental updates.  The list of over 100 event types is documented in our Enterprise Guide:\n\n[https://docs.keeper.io/enterprise-guide/event-reporting](https://docs.keeper.io/enterprise-guide/event-reporting)\n\nUsing Commander for SIEM integration works well in an on-prem environment where the HTTP event collector is only available within your network.  The Keeper Admin Console versino 13.3+ is capable of integrating our backend event data into your SIEM solution but it requires that you are utilizing a cloud-based SIEM solution. If you need assistance in integrating Keeper into your SIEM solution without Commander, please contact our business support team at business.support@keepersecurity.com. \n\n**Export of Event Logs in Syslog Format**\n\nCommander can export all event logs to a local file in syslog format, or export data in incremental files.  A Keeper record in your vault\nis used to store a reference to the last event  \n\n```bash\n$ keeper shell\n```\n\nTo export all events and start tracking the last event time exported:\n\n```\nMy Vault> audit-log --target=syslog\nDo you want to create a Keeper record to store audit log settings? [y/n]: y\nChoose the title for audit log record [Default: Audit Log: Syslog]: \nEnter filename for syslog messages.\n...              Syslog file name: all_events.log\n...          Gzip messages? (y/N): n\nExported 3952 audit events\nMy Vault>\n```\n\nThis creates a record in your vault (titled \"Audit Log: Syslog\" in this example) which tracks the timestamp of the last exported event and the output filename.\nThen the event data is exported to the file in either text or gzip format.\n\nEach subsequent audit log export can be performed with this command:\n\n```bash\n$ keeper audit-log --format=syslog --record=<your record UID>\n```\nor from the shell:\n\n```\nMy Vault> audit-log --target=syslog --record=<your record UID>\n```\n\nTo automate the syslog event export every 5 minutes, create a JSON configuration file such as this:\n\n```bash\n{\n    \"server\":\"https://keepersecurity.com/api/v2/\",\n    \"user\":\"craig@company.com\",\n    \"password\":\"your_password_here\",\n    \"mfa_token\":\"filled_in_by_commander\",\n    \"mfa_type\":\"device_token\",\n    \"debug\":false,\n    \"plugins\":[],\n    \"commands\":[\"sync-down\",\"audit-log --target=syslog\"],\n    \"timedelay\":600,\n}\n```\n\nThen run Commander using the config parameter. For example:\n\n```bash\n$ keeper --config=my_config_file.json\n```\n\n\n**Splunk HTTP Event Collector Push**\n\nKeeper can post event logs directly to your on-prem or cloud Splunk instance. Please follow the below steps:\n\n* Login to Splunk enterprise \n* Go to Settings -> Data Inputs -> HTTP Event Collector\n* Click on \"New Token\" then type in a name, select an index and finish.\n* At the last step, copy the \"Token Value\" and save it for the next step.\n* Login to Keeper Commander shell\n\n```bash\n$ keeper shell\n```\n\nNext set up the Splunk integration with Commander. Commander will create a record in your vault that stores the provided token and Splunk HTTP Event Collector. This will be used to also track the last event captured so that subsequent execution will pick up where it left off.  Note that the default port for HEC is 8088.\n\n```\n$ keeper audit-log --format=splunk\n\nDo you want to create a Keeper record to store audit log settings? [y/n]: y\nChoose the title for audit log record [Default: Audit Log: Splunk]: <enter> \n\nEnter HTTP Event Collector (HEC) endpoint in format [host:port].\nExample: splunk.company.com:8088\n...           Splunk HEC endpoint: 192.168.51.41:8088\nTesting 'https://192.168.51.41:8088/services/collector' ...Found.\n...                  Splunk Token: e2449233-4hfe-4449-912c-4923kjf599de\n```\nYou can find the record UID of the Splunk record for subsequent audit log exports:\n\n```\nMy Vault> search splunk\n\n  #  Record UID              Title              Login    URL\n---  ----------------------  -----------------  -------  -----\n  1  schQd2fOWwNchuSsDEXfEg  Audit Log: Splunk\n```\n\nEach subsequent audit log export can be performed with this command:\n\n```bash\n$ keeper audit-log --format=splunk --record=<your record UID>\n```\nor from the shell:\n\n```\nMy Vault> audit-log --target=splunk --record=<your record UID>\n```\n\nTo automate the push of Splunk events every 5 minutes, create a JSON configuration file such as this:\n\n```bash\n{\n    \"server\":\"https://keepersecurity.com/api/v2/\",\n    \"user\":\"craig@company.com\",\n    \"password\":\"your_password_here\",\n    \"mfa_token\":\"filled_in_by_commander\",\n    \"mfa_type\":\"device_token\",\n    \"debug\":false,\n    \"plugins\":[],\n    \"commands\":[\"sync-down\",\"audit-log --target=splunk\"],\n    \"timedelay\":600,\n}\n```\n\nThen run Commander using the config parameter. For example:\n\n```bash\n$ keeper --config=my_config_file.json\n```\n\n\n**Sumo Logic HTTP Event Collector Push**\n\nKeeper can post event logs directly to your Sumo Logic account. Please follow the below steps:\n\n* Login to Sumo Logic\n* Go to Manage Data -> Collection \n* Click on Add Collector -> Hosted Collector then Add Source -> HTTP Logs & Metrics \n* Name the collector and Save. Any other fields are default.\n* Note the HTTP Source Address which is the collector URL  \n* Login to Keeper Commander shell\n\n```bash\n$ keeper shell\n```\n\nNext set up the Sumo Logic integration with Commander. Commander will create a record in your vault that stores the HTTP Collector information. This will be used to also track the last event captured so that subsequent execution will pick up where it left off.\n\n```\n$ keeper audit-log --format=sumo\n```\n\nWhen asked for \u201cHTTP Collector URL:\u201d paste the URL captured from the Sumo interface above.\n\nAfter this step, there will be a record in your vault used for tracking the event data integration.\nYou can find the record UID of the Sumo record for subsequent audit log exports:\n\n```\nMy Vault> search sumo\n\n  #  Record UID              Title              Login    URL\n---  ----------------------  -----------------  -------  -----\n  1  schQd2fOWwNchuSsDEXfEg  Audit Log: Sumo\n```\n\nEach subsequent audit log export can be performed with this command:\n\n```bash\n$ keeper audit-log --format=sumo --record=<your record UID>\n```\nor from the shell:\n\n```\nMy Vault> audit-log --target=sumo --record=<your record UID>\n```\n\nTo automate the push of Sumo Logic events every 5 minutes, create a JSON configuration file such as this:\n\n```bash\n{\n    \"server\":\"https://keepersecurity.com/api/v2/\",\n    \"user\":\"craig@company.com\",\n    \"password\":\"your_password_here\",\n    \"mfa_token\":\"filled_in_by_commander\",\n    \"mfa_type\":\"device_token\",\n    \"debug\":false,\n    \"plugins\":[],\n    \"commands\":[\"sync-down\",\"audit-log --target=sumo\"],\n    \"timedelay\":600,\n}\n```\n\nThen run Commander using the config parameter. For example:\n\n```bash\n$ keeper --config=my_config_file.json\n```\n\n\n**Export of Event Logs in JSON Format**\n\nCommander can export all event logs to a local file in JSON format. The local file is overwritten with every run of Commander. \nThis kind of export can be used with conjunction with other application that process the file. \nA Keeper record in your vault is used to store a reference to the last event.\n\n```bash\n$ keeper shell\n```\n\nTo export all events and start tracking the last event time exported:\n\n```\nMy Vault> audit-log --target=json\nDo you want to create a Keeper record to store audit log settings? [y/n]: y\nChoose the title for audit log record [Default: Audit Log: JSON]:\nJSON file name: all_events.json\nExported 3952 audit events\nMy Vault>\n```\n\nThis creates a record in your vault (titled \"Audit Log: JSON\" in this example) which tracks the timestamp of the last exported event and the output filename.\nThen the event data is exported to the file.\n\nEach subsequent audit log export can be performed with this command:\n\n```bash\n$ keeper audit-log --format=json --record=<your record UID>\n```\nor from the shell:\n\n```\nMy Vault> audit-log --target=json --record=<your record UID>\n```\n\nTo automate the JSON event export every 5 minutes, create a JSON configuration file such as this:\n\n```bash\n{\n    \"server\":\"https://keepersecurity.com/api/v2/\",\n    \"user\":\"craig@company.com\",\n    \"password\":\"your_password_here\",\n    \"mfa_token\":\"filled_in_by_commander\",\n    \"mfa_type\":\"device_token\",\n    \"debug\":false,\n    \"plugins\":[],\n    \"commands\":[\"sync-down\",\"audit-log --target=json\"],\n    \"timedelay\":600,\n}\n```\n\nThen run Commander using the config parameter. For example:\n\n```bash\n$ keeper --config=my_config_file.json\n```\n\n**Azure Log Analytics**\n\nKeeper can post event logs directly to your Azure Log Analytics workspace. Please follow the below steps:\n\n* Login to Azure Portal and open Log Analytics workspace\n* Go to Settings -> Advanced settings\n* Note the Workspace ID and Primary or Secondary key\n* Login to Keeper Commander shell\n\n```bash\n$ keeper shell\n```\n\nNext set up the Log Analytics integration with Commander. Commander will create a record in your vault that stores the Log Analytics access information. This will be used to also track the last event captured so that subsequent execution will pick up where it left off.\n\n```\n$ keeper audit-log --format=azure-la\n```\n\nWhen asked for \u201cWorkspace ID:\u201d paste Workspace ID captured from the Advanced settings interface above.\nWhen asked for \u201cKey:\u201d paste Primary or Secondary key captured from the Advanced settings interface above.\n\nAfter this step, there will be a record in your vault used for tracking the event data integration.\nYou can find the record UID of the Log Analytics record for subsequent audit log exports:\n\n```\nMy Vault> search analytics\n\n  #  Record UID              Title                           Login                                 URL\n---  ----------------------  ------------------------------  ------------------------------------  -----\n  1  schQd2fOWwNchuSsDEXfEg  Audit Log: Azure Log Analytics  <WORKSPACE GUID>\n```\n\nEach subsequent audit log export can be performed with this command:\n\n```bash\n$ keeper audit-log --format=azure-la --record=<your record UID>\n```\nor from the shell:\n\n```\nMy Vault> audit-log --target=azure-la --record=<your record UID>\n```\n\nTo automate the push of events to Azure Log Analytics every 5 minutes, create a JSON configuration file such as this:\n\n```bash\n{\n    \"server\":\"https://keepersecurity.com/api/v2/\",\n    \"user\":\"craig@company.com\",\n    \"password\":\"your_password_here\",\n    \"mfa_token\":\"filled_in_by_commander\",\n    \"mfa_type\":\"device_token\",\n    \"debug\":false,\n    \"plugins\":[],\n    \"commands\":[\"sync-down\",\"audit-log --target=azure-la\"],\n    \"timedelay\":600,\n}\n```\n\nThen run Commander using the config parameter. For example:\n\n```bash\n$ keeper --config=my_config_file.json\n```\n\n\n### Advanced Configuration File\n\nBy default, Keeper will look for a file called ```config.json``` in the current working directory and it will use this file for reading and writing session parameters. For example, if you login with two factor authentication, the device token is written to this file. The configuration file loaded can also be customized through the ```config``` parameter. The config file can also be used to automate and schedule commands.\n\nBelow is a fully loaded config file. \n\n```bash\n{\n    \"server\":\"https://keepersecurity.com/api/v2/\",\n    \"user\":\"craig@company.com\",\n    \"password\":\"your_password_here\",\n    \"mfa_token\":\"filled_in_by_commander\",\n    \"mfa_type\":\"device_token\",\n    \"debug\":false,\n    \"plugins\":[],\n    \"commands\":[],\n    \"timedelay\":0,\n}\n```\n\nNotes:\n\n* ```server``` can be left blank and defaults to the United States data center. If your account is in the European data center then change the server domain from ```.com``` to ```.eu```.\n\n* ```mfa_token``` will be set by Commander automatically after successful two-factor authentication.\n\n* ```debug``` parameter can be set to ```true``` or ```false``` to enable detailed crypto and network logging.\n\n* ```plugins``` parameter determines which password rotation plugin will be loaded. [Learn more](https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins) about password rotation plugins for Commander.\n\n* ```commands``` parameter is a comma-separated list of Keeper commands to run.  For example:\n```\"commands\":[\"sync-down\", \"upload-attachment --file=\\\"/Users/craig/something.zip\\\" \\\"3PMqasi9hohmyLWJkgxCWg\\\"\",\"share-record --email=\\\"somebody@gmail.com\\\" --write \\\"3PMqasi9hohmyLWJkgxCWg\\\"\"]``` will sync your vault, upload a file and then share the record with another user.\n\n* ```timedelay``` parameter can be used to automatically run the specified commands every X seconds. For example:\n```\"timedelay\":600``` will run the commands every 10 minutes.\n\n* ```logout_timer``` parameter can be used to logout automatically in shell mode after inactivity period. Time period in minutes\n\nTo configure Yubikey device authentication, follow the [setup instructions](https://github.com/Keeper-Security/Commander/tree/master/keepercommander/yubikey).  In this mode, you will use a challenge phrase to authenticate instead of a Master Password.\n\n* ```device_token_expiration``` can be set to ```true``` to expire 2FA device tokens after 30 days. By default, the 2FA device token will never expire. To manually force a 2FA token to expire, login to your Keeper vault (on desktop app, Web Vault or mobile app) and disable then re-enable your Two-Factor Authentication settings. This will invalidate all previously saved tokens across all devices.\n\n### Batch Mode \n\nYou can batch execute a series of commands and pipe the file to STDIN of Commander.  For example, create a text file called ```test.cmd``` with the following lines:\n\n```\nadd --login=blah@gmail.com --pass=somemasterpass --url=https://google.com --force \"Some Record Title\"\nupload-attachment --file=\"/path/to/some/file.txt\" \"Some Record Title\"\nshare-record --email=\"user@company.com\" --write \"Some Record Title\"\n```\n\nTo run this file in a batch mode:\n```bash\ncat test.cmd | keeper --batch-mode shell\n```\nor \n```bash\ncat test.cmd | keeper -\n```\n\nThe batch execution is aborted if some command returns failure. \nUse `@` in front of the command to suppress the possible command error. \n```\nadd --login=blah@gmail.com --pass=somemasterpass --url=https://google.com --force \"Some Record Title\"\n@upload-attachment --file=\"/path/to/some/file.txt\" \"Some Record Title\"\nshare-record --email=\"user@company.com\" --write \"Some Record Title\"\n```\n\n### Enterprise SSO Login\n\nCustomers who normally login to their Keeper Vault using Enterprise SSO Login (SAML 2.0) can also login to Keeper Commander using a Master Password.  To make use of this capability, it must be enabled by the Keeper Administrator and then configured by the user.  The steps are below:\n\n1. Login to the Admin Console\n[https://keepersecurity.com/console](https://keepersecurity.com/console)\n\n2. For the User/Role who will be accessing Keeper Commander, open the Role Enforcement Policy setting screen.\n\n3. Enable the option \"Allow users who login with SSO to create a Master Password\"\n\n4. Login to the End-User Vault using SSO at [https://keepersecurity.com/vault](https://keepersecurity.com/vault) \n\n5. Visit the Settings > General screen and setup a Master Password\n\nAfter the Master Password is created, you are now able to login to Keeper Commander.\n\n### Pushing Records to Users and Teams\n\nThe Keeper Admin can push vault records automatically to any user or team vault in their organization using the \"enterprise-push\" command.\n\nExamples:\n\n```\nenterprise-push --team \"Engineering Admins\" push.json\n```\n\n```\nenterprise-push --email user@company.com push.json\n```\n\nThe \"push.json\" file is structured an an array of password objects.  For example:\n\n```json\n[\n    {\n        \"title\": \"Google\",\n        \"login\": \"${user_email}\",\n        \"password\": \"${generate_password}\",\n        \"login_url\": \"https://google.com\",\n        \"notes\": \"\",\n        \"custom_fields\": {\n            \"Name 1\": \"Value 1\",\n            \"Name 2\": \"Value 2\"\n        }\n    },\n    {\n        \"title\": \"Admin Tool\",\n        \"login\": \"${user_email}\",\n        \"password\": \"\",\n        \"login_url\": \"https://192.168.1.1\",\n        \"notes\": \"\",\n        \"custom_fields\": {\n        }\n    }\n]\n```\n\nSupported template parameters:\n\n```\n${user_email}          User email address\n${generate_password}   Generate random password\n${user_name}           User full name\n```\n\n### Creating and Pre-Populating Vaults\n\nA Keeper Admin can create a user vault and pre-populate it with records. This can all be accomplished with a single command.\n\nFor example:\n\n```\ncreate-user --generate --name=\"Test User\" --expire --records=\"push.json\" user@company.com\n\nCreated account: user@company.com\nGenerated password: <displayed on the screen>\n```\n\nThis command performs the following streamlined operations:\n1. Creates a new user account for \"Test User\" with the email address user@company.com\n2. The account is automatically provisioned to the Enterprise license and receives the default role policy\n3. The records stored in push.json are pushed to the user's vault\n\nAfter command completion, the \"Generated Password\" displayed to the admin is the temporary Master Password set for the user account. You can provide this Master Password to the user via a separate channel. \n\nUpon first logging in, the user will be prompted to set a new Master Password according to the password complexity requirements set by the role enforcement policy in the Keeper Admin Console.  If Two-Factor Authentication is required, the user will also be prompted to activate 2FA prior to accessing vault data.\n\nThe \"push.json\" file is structured an an array of password objects.  For example:\n\n```\n[\n    {\n        \"title\": \"Google For ${user_name}\",\n        \"login\": \"${user_email}\",\n        \"password\": \"${generate_password}\",\n        \"login_url\": \"https://google.com\",\n        \"notes\": \"\",\n        \"custom_fields\": {\n            \"2FA Phone\": \"916-555-1212\"\n        }\n    },\n    {\n        \"title\": \"Development Server\",\n        \"login\": \"${user_email}\",\n        \"password\": \"${generate_password}\",\n        \"login_url\": \"\",\n        \"notes\": \"Here are some\\nMulti-line\\nNotes\",\n        \"custom_fields\": {\n        }\n    }\n]\n```\n\nSupported template parameters:\n\n```\n${user_email}          User email address\n${generate_password}   Generate random password\n${user_name}           User full name\n```\n\n### Password Retrieval API\n\nA common use case for Commander is pulling credentials from the vault to replace hard-coded passwords, and to automate processes within CI/CD pipelines.  The recommended architecture is to isolate vault access to specific \"service account\" vaults in order to limit access.  Follow the process below:\n\n1. Create a separate \"service account\" vault for each set of records that the service needs access to.\n\n2. Set a strong Master Password, 2FA and role enforcement policy on each vault.\n\n3. Share records (either direct share or shared folder) from the source vault to the service account vault.\n\nOnce configured, you can simply authenticate to Commander using the service accounts. By isolating the vaults to only contain a set of shared records, you will be limiting the exposure if the process or server becomes compromised.  Note that a unique and valid email address must be used for each service account.\n\n#### Command-line Password Retrieval\n\nThe `get` command allows you to query a stored Keeper password by record UID.  For example:\n\n```bash\n$ keeper --user=<Keeper Email> get --format=password <Record UID>\n```\nThe password retrieved is written to standard output. \n\nIn this case, you will be asked for the Keeper Master Password. There are a few ways to provide Commander with the Master Password. All of these methods make the Keeper Master Password accessible on the filesystem and should be used with caution:\n\n1. `--password` parameter. i.e. `keeper --user=<Keeper Email> --password=<Keeper Password>`. \n\n2. `KEEPER_PASSWORD` environment variable. i.e. `KEEPER_PASSWORD=<Keeper Password> keeper --user<Keeper Email>`. This method is demonstrated in the Jenkins script explained below.\n\n3. Stored to `config.json` file. Commander searches for file named `config.json` in the current working directory and uses the ```password``` parameter.\n\n```json\n{\n  \"user\": \"<Keeper Email>\",\n  \"password\": \"<Keeper Master Password>\"\n}\n``` \n\n### Jenkins CI Integration\n\nThis example demonstrates retrieving a password in Keeper for use in the Jenkins CI environment.\n\n1. Create a Python virtual environment in the jenkins user home directory and install keepercommander package with pip:\n\n```sh\njenkins@jenkins:~$ python3 -m venv keeper\njenkins@jenkins:~/$ cd keeper\njenkins@jenkins:~/$ . bin/activate\n(keeper)jenkins@jenkins:~/keeper$ pip install keepercommander\n```\n\n2. Login to Commander with the account you are planning to use with Jenkins. Authenticate with Keeper Commander on the command-line in order to provide a two-factor code if the account has 2FA protection enabled.\n\n```sh\n(keeper)jenkins@jenkins:~/keeper$ keeper --user=jenkins@mycompany.com -- shell\nMy Vault> q\n```\n\n3. Add the Keeper user account to Jenkins Credentials configuration:\n\n- Credential Kind: Username with password\n- Username: `jenkins@mycompany.com`\n- Password: [Password]\n- ID: `Keeper`\n\n```groovy\nnode {\n    environment {\n        PASSWORD=''     // define environment variable\n    }\n   stage('Load') {\n       // change working directory to keeper venv\n       dir(\"/var/jenkins_home/keeper\") {      \n           // load Keeper credentials into environmenmt variables. Commander uses KEEPER_PASSWORD variable if set \n           withCredentials([usernamePassword(credentialsId: 'Keeper', usernameVariable: 'KEEPER_USERNAME', passwordVariable: 'KEEPER_PASSWORD')]) {\n                    // retrieve the password \n                   env.PASSWORD = sh(script: \". bin/activate; keeper --user=${KEEPER_USERNAME} get --format=password <Record UID>\", returnStdout: true).trim()\n            }\n       }\n   }\n   stage('Run') {\n       echo \"${env.PASSWORD}\"\n   }\n}\n```\n\nIn this example, replace the Record UID with the actual UID from the Keeper vault. To locate the Record UID see [this section](#locating-the-record-uid-and-other-identifiers).\n\n\n### Launching and Connecting to Remote Servers \n\nUsing the ```connect``` command, Keeper Commander can launch SSH, RDP or other external connections utilizing content and metadata stored in the Keeper vault record.  Command-line parameters are supplied through custom fields and file attachments. This command is very flexible and can be totally customized to use any 3rd party application or utility for performing the remote connections.\n\nThe ```connect``` command reads the record's custom fields with names starting with \"connect:\".\n\nBelow is a simple example of SSH to a remote server via SSH tunnel gateway.\n\n#### SSH Launcher Example: SSH to a server via Gateway\n\nIn this example, we are showing how to connect to a server through a SSH gateway. The following fields are set:\n\nCustom Field Name       | Custom Field Value             \n----------------------- | ------------------------------\nconnect:xxx:description | Production Server via Gateway \nconnect:xxx             | ssh -o \"ProxyCommand ssh -i ${file:gateway.pem} ec2-user@gateway -W %h:%p\" -i ${file:server.pem} ec2-user@server \nFile Attachment         | gateway.pem\nFile Attachment         | server.pem\n\n```xxx``` refers to the friendly name which can be referenced when connecting on the command line. In this example we have \"my_server\".\n\nHere's a screenshot of the Keeper Vault record for this example:\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/connect_ssh_screenshot.png)\n\nTo connect to this server, simply run the below command:\n\n```\nMy Vault> connect my_server\nConnecting to my_server...\n\nLast login: Sat Sep 28 00:25:34 2019 from 12.23.34.5\nec2-user@my_server:~$ \nec2-user@my_server:~$ logout\nConnection to my_server closed.\nMy Vault>                                                                                           \n```\n\nIf the SSH private key is encrypted with a passphrase, you will be prompted every time to type in the passphrase.  To avoid this, we recommend using the SSH Agent variation described in the next section.\n\n#### SSH connection using SSH Agent capabilities\n\nCommander can integrate with the local SSH agent to register RSA private keys. This eliminates the need for you to type in the SSH passphrase every time you connect to the remote system. Commander uses the `SSH_AUTH_SOCK` environment variable on Mac OS / Linux systems. The PowerShell OpenSSH implementation is supported on Windows systems.\n\nTo enable integration with ssh-agent ensure that `SSH_AUTH_SOCK` environment variable is set on Posix compatible systems. For Microsoft Windows, ensure the `SSH Agent` system service is running. Keeper's ```connect``` command uses SSH Agent to temporarily store the private key used in the connection session.  After the session disconnects, the private key is removed.\n\nTo utilize SSH Agent for connecting to a remote system, simply add one additional custom field to the Vault record:\n\nCustom Field Name       | Custom Field Value             \n----------------------- | ------------------------------\nconnect:xxx:ssh-key:yyy | ${<custom field name with private key>} ${password}\n\nor\n\nCustom Field Name       | Custom Field Value             \n----------------------- | ------------------------------\nconnect:xxx:ssh-key:yyy | {<custom field with private key>} ${password}\n\nHere, ```xxx``` is the friendly name of the connection.  ```yyy``` is an optional key name used with the SSH agent.\n\nIn this example, the first parameter references the private key, the second parameter references the passphase used to encrypt the private key.\n\n```${password}``` references the value stored in the record's Password field \n\nHere's a screenshot of a Keeper Vault record where the private key is stored in a custom field:\n\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/connect_ssh_screenshot2.png)\n\nHere's a screenshot of a Keeper Vault record where the private key is stored in a file attachment:\n\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/connect_ssh_screenshot3.png)\n\nConnecting to the remote system using an encrypted passphrase is easy. In our example, to connect to the server called \"example2\":\n\n```\nMy Vault> connect example2\nConnecting to example2...\n\nLast login: Sat Sep 28 00:25:34 2019 from 12.23.34.5\ncraig@example2:~$ \ncraig@example2:~$ logout\nConnection to example2 closed.\nMy Vault>                                                                                           \n```\n\n#### Postgres connection using environment variables capabilities\n\nCommander can set environment variables for the `connect` application.\n\nCustom Field Name          | Custom Field Value             \n-------------------------- | ------------------------------\nconnect:xxx:env:PGPASSWORD | ${password}\n\nHere, ```xxx``` is the friendly name of the connection.  \n\n```${password}``` references the value stored in the record's Password field \n\nHere's a screenshot of a Keeper Vault record:\n\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/connect_postgres_screenshot.png)\n\n\n#### Combining SSH Key Rotation with Connection\n\nUtilizing the sshkey rotation plugin, Commander can also rotate the SSH private/public key pair.\n\nThe same vault record can be created that provides connection capability as well as SSH key rotation.  Here's a screenshot of a vault record that is configured for both connection and key rotation:\n\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/connect_ssh_screenshot5.png)\n\nTo rotate the password from the Commander interface, simply use the 'rotate' command:\n\n```\nMy Vault> rotate example2                                                                  \nRotating with plugin sshkey\nUpdate record successful for record_uid=2TlvQqNe7YSF9idGQ\nRotation successful for record_uid=2TlvQqNe7YSF9idGQ\n\nMy Vault>                                                                                           \n```\n\nNote: The 'rotate' command accepts either Record UID or friendly name (specified with the ```cmdr:plugin:xxx``` custom field where xxx is the friendly name)\n\nBelow is a summary of the fields required to perform connection and rotation:\n\nName                  | Field         | Comments\n--------------------- | ------------- | ------------\nLogin                 | Login         | Set to the username, e.g. **'ec2-user'** in the **'Login'** field. \nPassword              | Password      | Set to the passphrase to encrypt the SSH key in the **'Password'** field\ncmdr:plugin:xxx       | Custom        | ```sshkey``` \"xxx\" is the friendly name which can be referenced in command line 'rotate' and 'connect' calls.\ncmdr:host             | Custom        | (Optional, Multiple) Set to hostname or IP address of target server\ncmdr:rules            | Custom        | (Optional) [passphrase complexity rules](https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins/password_rules.md)\nconnect:xxx:ssh-key   | Custom        | ```${cmdr:private_key} ${password}``` where \"xxx\" is the friendly name\nconnect:xxx           | Custom        | ```ssh ${login}@${cmdr:host}``` for a basic SSH connection but can be customized\ncmdr:ssh_public_key   | Custom        | Public key in SSH format. This key is uploaded to the target system.\ncmdr:rsa_public_key   | Custom        | Public key in RSA format.\ncmdr:private_key      | Custom        | Private key encrypted with the passkey stored in the **'Password'** field.\n\nImportant: Please read the [SSH Key Rotation Doc](https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins/sshkey) on how to perform the initial setup of SSH keys in the vault record. Once set up the first time, all connection and rotations will be seamless.\n\n#### Remote Desktop (RDP) Launcher Example\n\nTo connect seamlessly to a remote windows server using the standard Microsoft Remote Desktop application, Keeper executes a command pre-login, login, and post-login via system calls.  In this example, the \"pre-login\" command stores the password temporarily in the Windows credential manager for the current user.  The \"login\" command initiates the connection using an RDP template file and the stored credentials (the RDP template file is optional).  Upon session termination, the \"post login\" command is executed that deletes the password from the credential manager.\n\nVault Record Fields:\n\nCustom Field Name                  | Custom Field Value\n---------------------------------- | ----------------------------------\nconnect:rdp_demo:description       | Remote connection to Demo Server \nconnect:rdp_demo:pre               | cmdkey /generic:12.34.56.78 /user:${login} /pass:${password} > NUL \nconnect:rdp_demo                   | mstsc ${file:Default.rdp} \nconnect:rdp_demo:post              | cmdkey /delete:12.34.56.78 > NUL\nFile Attachment                    | Default.rdp\n\nScreenshot of Keeper Vault record:\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/connect_rdp_screenshot.png)\n\nNote: The Default.rdp file is saved from Remote Desktop Connection with your desired configuration.\n\n#### Supported parameter substitutions\n\nYou can customize the commands with parameter substitutions described below:\n\n```\n${user_email}: Email address of Keeper user \n${login}: Record login field\n${password}: Record password field\n${text:<name>}: Custom per-user variable, prompted for value, not shared \n${mask:<name>}: Custom per-user variable, prompted for value, not shared \n${file:<attachment_name>}: Stored in temp file during use and deleted after connection close,\n${body:<attachment_name>}: Raw content of the attachment file.\n```\n\n#### Listing all available connections\n\nTo get a list of available connections, type:\n\n```\nMy Vault> connect\n```\n\n#### Initiating connections\n\nTo initiate a connection (using the SSH/RDP examples) from Commander simply type:\n\n```\nMy Vault> connect my_server\n```\n\nor\n\n```\nMy Vault> connect rdp_demo\n```\n\nAlternatively, you can execute the connection from the terminal without the interactive shell:\n\n```\n$ keeper connect my_server\n```\n\nNotes:\n\n- A single vault record can contain any number of connection references, or the connections can be separated one per record.\n- If a system command requires user interaction (e.g. if a passphrase is included on an SSH key file), Commander will prompt for input.\n- Just like any other Keeper vault record, a connection record can be shared among a team, shared to another Keeper user or remain private.\n\n\n### Environmental Variables \n\nCustom environmental variables can be created on the command line and through batch script files in order to perform data substitutions.\n\nA few default variables can be used:\n\n```\n${last_folder_uid} - This contains the last added Folder UID\n${last_record_uid} - This contains the last added Record UID\n${last_shared_folder_uid} - This contains the last added Shared Folder UID\n```\n\nTo add a new environmental variable, use the \"set\" command:\n\n```\nMy Vault> set my_test foo\n```\n\nTo use this variable, use ${my_test} \n\nThe below example will add a record and then share the record with a user:\n\n```\nMy Vault> add --login \"testing123\" --pass \"12345\" --url \"https://google.com\" \"Test from Commander\" -f\nMy Vault> share-record -e another_user@company.com -a grant -w ${last_record_uid}\n```\n\n### Targeted Password Rotations & Plugins \n\nKeeper Commander can communicate to internal and external systems for the purpose of rotating a password and synchronizing the change to your Keeper Vault.  We accomplish this by associating a Keeper record with a physical system through the use of custom fields.  For example, you might want to rotate your MySQL password, Active Directory password and local Administrator password automatically.  To support a plugin, simply add a set of **custom field** values to the Keeper record. The custom field values tell Commander which plugin to use, and what system to communicate with when rotating the password.  To modify your Keeper record to include custom fields, login to Keeper on the [Web Vault](https://keepersecurity.com/vault) or [Keeper Desktop](https://keepersecurity.com/download.html) app.  \n\nExample custom fields for MySQL password rotation:\n\nCustom Field Name     | Custom Field Value\n----------------------| ----------------------------------\ncmdr:plugin           | mysql\ncmdr:host             | 192.168.1.55\ncmdr:db               | testing\n\nWhen a plugin is specified in a record, Commander will search in the plugins/ folder to load the module based on the name provided (e.g. mysql.py) then it will use the values of the Keeper record to connect, rotate the password and save the resulting data.\n\nCheck out the [plugins folder](https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins) for all of the available plugins.  Keeper's team adds new plugins on an ongoing basis. If you need a particular plugin created, send us an email to commander@keepersecurity.com.\n\n### Locating the Record UID and other Identifiers \n\nThe Record UID and Shared Folder UID can be found either through the \"get\", \"list\", \"ls -l\" or \"search\" commands, or through the Web Vault user interface.\n\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/record_uid.png)\n\n![](https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/shared_folder_uid.png)\n\n### Deep linking to records (Web Vault Hyperlink)\n\nThe Record UID that is displayed on password record output can be used for deep linking directly into the Keeper Web Vault only for privileged users. This Vault link can be stored and sent over unsecure channels because it only provides a reference to the record within your vault -- it does not provide access to the actual record content.  To access the content, you must still authenticate into the vault and decrypt the data.  The link is in the format `https://keepersecurity.com/vault#detail/XXXXXX` and you simply replace XXXXXX with the Record UID. Providing this link to another user does NOT initiate sharing.  To share a vault record, you must authenticate to your vault, open the record and click the \"Share\" feature.\n\n### About Our Security\n\nKeeper is a zero-knowledge platform.  This means that the server does not have access to your Keeper Master Password or the crypto keys used to encrypt and decrypt your data.  The cryptography is performed on the *client device* (e.g. iPhone, Android, Desktop, Commander).\n\nWhen you create a Keeper account from our [web app](https://keepersecurity.com/vault) or [mobile/desktop app](https://keepersecurity.com/download), you are asked to create a Master Password and a security question.  The Keeper app creates your crypto keys, RSA keys and encryption parameters (iv, salt, iterations).  Your RSA private key is encrypted with your data key, and your data key is encrypted with your Master Password.  The encrypted version of your data key is stored in Keeper's Cloud Security Vault and provided to you after successful device authentication.\n\nWhen you login to Keeper on any device (or on Commander), your Master Password is used to derive a 256-bit PBKDF2 key.  This key is used to decrypt your data key.  The data key is used to decrypt individual record keys, shared folder keys and team keys.  Record keys, shared folder keys and team keys are then used to decrypt each individual record in the vault.\n\nWhen storing information to your vault, Keeper stores and synchronizes the encrypted data.\n\nWe strongly recommend that you enable Two-Factor Authentication on your Keeper account via the [web app](https://keepersecurity.com/vault) settings screen.  This can also be enforced at the Keeper Enterprise level. When logging into Commander with Two-Factor Authentication turned on, you will be asked for a one-time passcode.  After successful authentication, Commander receives a device token that can be used for subsequent requests without another two-factor auth request.\n\nFor more details on Keeper's security architecture, certifications and implementation details, visit the [Security Disclosure](https://keepersecurity.com/security.html) page of our website. If you have any specific questions related to security, email security@keepersecurity.com.\n\n### Vulnerability Disclosure Program\n\nKeeper has partnered with Bugcrowd to manage our vulnerability disclosure program. Please submit reports through https://bugcrowd.com/keepersecurity or send an email to security@keepersecurity.com.\n\n### About Keeper\n\nKeeper is the world's most downloaded password keeper and secure digital vault for protecting and managing your passwords and other secret information.  Millions of people and companies use Keeper to protect their most sensitive and private information.\n\nKeeper's Features &amp; Benefits\n\n* Manages all your passwords and secret info\n* Protects you against hackers\n* Encrypts everything in your vault \n* High-strength password generator\n* Login to websites with one click\n* Store private files, photos and videos\n* Take private photos inside vault \n* Share records with other Keeper users\n* Access on all your devices and computers\n* Keeper DNA&trade; multi-factor authentication\n* Login with Fingerprint or Touch ID\n* Auto logout timer for theft prevention\n* Unlimited backups\n* Self-destruct protection\n* Customizable fields\n* Background themes\n* Integrated Apple Watch App\n* Instant syncing between devices\n* AES-256 encryption\n* Zero-Knowledge security architecture\n* SOC-2 and ISO 27001 Certified\n* GDPR Compliant \n\n### Keeper Website\n[https://keepersecurity.com](https://keepersecurity.com)\n\n### Pricing\nKeeper is free for local password management on your device.  Premium subscriptions provides cloud-based capabilites including multi-device sync, shared folders, teams, SSO integration and encrypted file storage. More info about our enterprise pricing plans can be found [here](https://keepersecurity.com/pricing.html?tab=business).\n\n### Mobile Apps\n\n[iOS - iPhone, iPad, iPod](https://itunes.apple.com/us/app/keeper-password-manager-digital/id287170072?mt=8)\n\n[Android - Google Play](https://play.google.com/store/apps/details?id=com.callpod.android_apps.keeper&hl=en)\n\n[Kindle and Amazon App Store](http://amzn.com/B00NUK3F6S)\n\n### Cross-Platform Desktop App\n\n[Windows PC, 64-bit and 32-bit Recommended Installer](https://www.keepersecurity.com/desktop_electron/packages/KeeperPasswordManager.appinstaller)\n\n[Windows PC, 32-bit](https://keepersecurity.com/desktop_electron/Win32/KeeperSetup32.zip)\n\n[Windows PC, 64-bit](https://keepersecurity.com/desktop_electron/Win64/KeeperSetup64.zip)\n\n[Windows PC, 32-bit MSI Installer](https://keepersecurity.com/desktop_electron/Win32/KeeperSetup32.msi)\n\n[Mac](https://keepersecurity.com/desktop_electron/Darwin/KeeperSetup.dmg)\n\n[Linux](https://keepersecurity.com/download.html)\n\n### Web Vault and Browser Extensions\n\n[Web App - Online Vault](https://keepersecurity.com/vault)\n\n[KeeperFill for Chrome](https://chrome.google.com/webstore/detail/keeper-browser-extension/bfogiafebfohielmmehodmfbbebbbpei)\n\n[KeeperFill for Firefox](https://addons.mozilla.org/en-US/firefox/addon/keeper-password-manager-digita/)\n\n[KeeperFill for Safari](https://keepersecurity.com/download.html)\n\n[KeeperFill for Edge](https://www.microsoft.com/en-us/store/p/keeper-password-manager-digital-vault/9n0mnnslfz1t)\n\n[Enterprise Admin Console](https://keepersecurity.com/console)\n\n### Sales & Support \n\n[Enterprise Guide](https://docs.keeper.io/enterprise-guide/)\n\n[White Papers & Data Sheets](https://keepersecurity.com/enterprise-resources.html)\n\n[Contact Sales or Support](https://keepersecurity.com/contact.html)\n\nWe're here to help.  If you need help integrating Keeper into your environment, contact us at commander@keepersecurity.com.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Keeper-Security/Commander", "keywords": "security password", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "keepercommander", "package_url": "https://pypi.org/project/keepercommander/", "platform": "", "project_url": "https://pypi.org/project/keepercommander/", "project_urls": {"Homepage": "https://github.com/Keeper-Security/Commander"}, "release_url": "https://pypi.org/project/keepercommander/4.31/", "requires_dist": ["colorama", "pycryptodomex (>=3.7.2)", "libkeepass", "requests", "tabulate", "prompt-toolkit (>=2.0.4)", "asciitree", "protobuf (>=3.6.0)", "pyperclip"], "requires_python": ">=3.4", "summary": "Keeper Commander for Python 3", "version": "4.31", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f697b98804e568e22d1e81af2e4cd903f1042e5b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6d6d616e6465725f6c6f676f5f323530783130302e706e67\"></p>\n<hr>\n<p>Jump to:</p>\n<ul>\n<li><a href=\"#password-management-sdk-for-it-admins--developers\" rel=\"nofollow\">Overview</a></li>\n<li><a href=\"#use-cases\" rel=\"nofollow\">Use Cases</a></li>\n<li><a href=\"#python-installation---linux-and-mac\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#developer-mode\" rel=\"nofollow\">Developer Setup</a></li>\n<li><a href=\"#command-line-usage\" rel=\"nofollow\">Command-line Usage</a></li>\n<li><a href=\"#interactive-shell\" rel=\"nofollow\">Interactive Shell</a></li>\n<li><a href=\"#keeper-command-reference\" rel=\"nofollow\">Keeper Command Reference</a></li>\n<li><a href=\"#importing-records-into-keeper\" rel=\"nofollow\">Importing Data</a></li>\n<li><a href=\"#exporting-records-from-keeper\" rel=\"nofollow\">Exporting Data</a></li>\n<li><a href=\"#ad-hoc-event-reporting\" rel=\"nofollow\">Event Reporting</a></li>\n<li><a href=\"#event-logging-to-siem\" rel=\"nofollow\">SIEM integration</a></li>\n<li><a href=\"#advanced-configuration-file\" rel=\"nofollow\">Advanced Configuration</a></li>\n<li><a href=\"#batch-mode\" rel=\"nofollow\">Batch Mode</a></li>\n<li><a href=\"#enterprise-sso-login\" rel=\"nofollow\">Enterprise SSO Login</a></li>\n<li><a href=\"#pushing-records-to-users-and-teams\" rel=\"nofollow\">Pushing Records to Users and Teams</a></li>\n<li><a href=\"#creating-and-pre-populating-vaults\" rel=\"nofollow\">Creating and Pre-Populating Vaults</a></li>\n<li><a href=\"#password-retrieval-api\" rel=\"nofollow\">Password Retrieval API</a></li>\n<li><a href=\"#jenkins-ci-integration\" rel=\"nofollow\">Jenkins CI Integration</a></li>\n<li><a href=\"#launching-and-connecting-to-remote-servers\" rel=\"nofollow\">Launching and Connecting to Remote Servers</a></li>\n<li><a href=\"#environmental-variables\" rel=\"nofollow\">Environmental Variables</a></li>\n<li><a href=\"#targeted-password-rotations--plugins\" rel=\"nofollow\">Password Rotation</a></li>\n<li><a href=\"#about-our-security\" rel=\"nofollow\">About Keeper</a></li>\n<li><a href=\"#enterprise-resources\" rel=\"nofollow\">Enterprise Resources</a></li>\n</ul>\n<h3>Password Management SDK for IT Admins &amp; Developers</h3>\n<p>Keeper Security develops the world's most downloaded password manager and encrypted digital vault with millions of individual customers and thousands of enterprise customers worldwide.  Keeper is a zero-knowledge, native and cloud-based solution available on every mobile and desktop device platform. <a href=\"#about-keeper\" rel=\"nofollow\">Read more</a> about Keeper or visit the <a href=\"https://keepersecurity.com\" rel=\"nofollow\">Keeper Security</a> website.</p>\n<p>Keeper Commander is a command-line and SDK interface to <a href=\"https://keepersecurity.com\" rel=\"nofollow\">Keeper\u00ae Password Manager</a>. Commander can be used to access and control your Keeper vault, perform administrative functions (such as end-user onboarding and data import/export), launch remote sessions, rotate passwords, eliminate hardcoded passwords and more. Keeper Commander is an open source project with contributions from Keeper's engineering team and partners.</p>\n<p>If you need any assistance or require specific functionality not supported in Commander yet, please contact us at <a href=\"mailto:commander@keepersecurity.com\">commander@keepersecurity.com</a>.</p>\n<h3>Use Cases</h3>\n<ul>\n<li>Access your Keeper vault through a command-line interface</li>\n<li>Perform bulk import and export of vault records</li>\n<li>Manage records, folders and shared folders</li>\n<li>Customize integration into your backend systems</li>\n<li>Provision new Enterprise user accounts and shared folders</li>\n<li>Manage nodes, roles, teams and users</li>\n<li>Rotate passwords on service accounts or other targets</li>\n<li>Integrate Keeper into your existing backend systems</li>\n<li>Schedule and automate commands</li>\n<li>Initiate remote connections (such as SSH and RDP)</li>\n</ul>\n<h3>Python Installation - Linux and Mac</h3>\n<ol>\n<li>Get Python 3 from <a href=\"https://www.python.org\" rel=\"nofollow\">python.org</a>.</li>\n<li>Install Keeper Commander with pip3:</li>\n</ol>\n<pre>$ pip3 install keepercommander\n</pre>\n<p>Important: Restart your terminal session after installation</p>\n<h3>Python Installation - Windows</h3>\n<ol>\n<li>Download and install <a href=\"https://winpython.github.io/\" rel=\"nofollow\">WinPython</a></li>\n<li>From the install folder of WinPython, run the \"WinPython Command Prompt\"</li>\n<li>Install Keeper Commander with pip3:</li>\n</ol>\n<pre>$ pip3 install keepercommander\n</pre>\n<h3>Upgrading to Latest Python Code</h3>\n<pre>$ pip3 install --upgrade keepercommander\n</pre>\n<p>Please do not upgrade a production system without validation in your test environment as commands and functionality is under rapid development.</p>\n<h3>.Net SDK</h3>\n<p>We are in active development of a .Net SDK that covers the core use cases of accessing and updating vault records.  See the <a href=\"https://github.com/Keeper-Security/Commander/tree/master/dotnet-keeper-sdk\" rel=\"nofollow\">.Net SDK</a> for source code and sample Commander project of the latest version.</p>\n<h3>Developer Mode</h3>\n<p>If you are a developer and you want to modify the Python source code then follow these steps:</p>\n<ol>\n<li>Clone/Download the Commander repository</li>\n<li>Install Python3 from python.org</li>\n<li>Install virtualenv:</li>\n</ol>\n<pre>$ sudo pip3 install virtualenv\n</pre>\n<ol>\n<li>Create and activate the virtual environment for your keeper project:</li>\n</ol>\n<pre>$ <span class=\"nb\">cd</span> /path/to/Commander\n$ virtualenv -p python3 venv\n$ <span class=\"nb\">source</span> venv/bin/activate\n$ pip install -r requirements.txt\n$ pip install -e .\n</pre>\n<p>Keeper supports plugins for various 3rd party systems for password reset integration. Depending on the plugin, you will need to also install the modules required by that plugin. For example, our MySQL plugin requires the PyMySQL module.</p>\n<p>See the <a href=\"https://github.com/Keeper-Security/Commander/tree/master/keepercommander/custom\" rel=\"nofollow\">custom</a> folder for examples on creating your own custom scripts.</p>\n<h3>Command-line Usage</h3>\n<p>Commander's command-line interface and interactive shell is a powerful and convenient way to access and control your Keeper vault and perform many administrative operations. To see all available commands, just type:</p>\n<pre><code>$ keeper\n\nusage: keeper [--server SERVER] [--user USER] [--password PASSWORD]\n              [--version] [--config CONFIG] [--debug]\n              [command] [options [options ...]]\n\npositional arguments:\n  command               Command\n  options               Options\n\noptional arguments:\n  --server SERVER, -ks SERVER\n                        Keeper Host address.\n  --user USER, -ku USER\n                        Email address for the account.\n  --password PASSWORD, -kp PASSWORD\n                        Master password for the account.\n  --version             Display version\n  --config CONFIG       Config file to use\n  --debug               Turn on debug mode\n</code></pre>\n<h3>Interactive Shell</h3>\n<p>To run a series of commands and stay logged in, you will enjoy using Commander's interactive shell.</p>\n<pre><code>$ keeper shell\n\n  _  __\n | |/ /___ ___ _ __  ___ _ _\n | ' &lt;/ -_) -_) '_ \\/ -_) '_|\n |_|\\_\\___\\___| .__/\\___|_|\n              |_|\n\n password manager &amp; digital vault\n\nLogging in...\nSyncing...\nDecrypted [400] Records\n\nMy Vault&gt; search amazon                                                                                                                 \n\n  #  Record UID              Title                        Login              URL\n---  ----------------------  ---------------------------  -----------------  ----------------------\n  1  8Q_NiK10JWKppngL5R4IvQ  Amazon AWS Demo              admin@company.com  https://aws.amazon.com\n  2  Pe8N7Ii0rDd64XVDOnlS4g  Business Account             me@company.com     https://aws.amazon.com\n\nMy Vault&gt; get Pe8N7Ii0rDd64XVDOnlS4g                                                                                                    \n\n                 UID: Pe8N7Ii0rDd64XVDOnlS4g\n              Folder: Amazon AWS          \n               Title: Business Account    \n               Login: me@company.com      \n            Password: BmW2NKqfaV@2O%DT!Qg0emOJQf\n                 URL: https://aws.amazon.com\n Account ID or alias: mycompanyname\n       Access Key ID: BLklAomJ9NvGWtupv3QZmc0#m@\n          Secret Key: 0MZenvr0x4rzK$8qLHwzS42i8r7fsdjh4DKJASHd34\n               Notes: These are some notes \n        Shared Users: craig@acme-demo.com (Owner) self\n      Shared Folders: Amazon AWS          \n\nMy Vault&gt;                                                                                                                               \n\n</code></pre>\n<p>Type <code>h</code> to display all commands and help information.</p>\n<h3>Keeper Command Reference</h3>\n<p>Whether using the interactive shell, CLI or JSON config file, Keeper supports the following features specified by <code>command</code>.  Each command supports additional parameters and options.</p>\n<p>To get help on a particular command, run:</p>\n<p><code>help &lt;command&gt;</code></p>\n<p><strong>Basic Vault Commands</strong></p>\n<p><em>Note:</em> Some commands accept record or shared folder UID parameter. UID values may start with dash character (<strong>-</strong>) that is interpreted by command parser as an option. To pass a parameter starting with dash separate this parameter with two dashes (<strong>--</strong>). For example: <code>rmdir -- -Gd9l4daPw-fMd</code></p>\n<ul>\n<li>\n<p><code>login</code> Login to Keeper</p>\n</li>\n<li>\n<p><code>whoami</code> Information about logged in user</p>\n</li>\n<li>\n<p><code>logout</code> Logout from Keeper</p>\n</li>\n<li>\n<p><code>help</code> Display help docs on a particular command</p>\n</li>\n<li>\n<p><code>shell</code> Use Keeper interactive shell</p>\n</li>\n<li>\n<p><code>sync-down</code> or <code>d</code> Download, sync and decrypt vault</p>\n</li>\n<li>\n<p><code>list</code> or <code>l</code> List all records or search with a regular expression.</p>\n</li>\n<li>\n<p><code>search</code> or <code>s</code> Search all records with a regular expression.</p>\n</li>\n<li>\n<p><code>ls</code> List folder contents (try <code>ls -l</code> as well)</p>\n</li>\n<li>\n<p><code>tree</code> Display entire folder structure as a tree</p>\n</li>\n<li>\n<p><code>cd</code> Change current folder</p>\n</li>\n<li>\n<p><code>get</code> Retrieve and display specified Keeper Record/Folder/Team in printable or JSON format.</p>\n</li>\n<li>\n<p><code>find-password</code> or <code>clipboard-copy</code> Copy the specified Keeper Record password field to the system output or clipboard\naccordingly. Command accepts record UID or record path. If record is not found then command matches records by title.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--username</code> Matches records by login/username field in addition to matching by title. Can be used if matching by record title returns more than one record.</li>\n</ul>\n</li>\n<li>\n<p><code>record-history</code> Display the record version history or a specific version of a record.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--action=list</code> Display the revision number, modified by user, time of modification.</li>\n<li><code>--action=diff</code> Display revision, field changed and old/new values.</li>\n<li><code>--action=show</code> Provided the revision number, display the record for that specific revision and record.</li>\n<li><code>--action=restore</code> Restore the current version to the specified record UID and version.</li>\n<li><code>--revision</code> Get a specific revision</li>\n</ul>\n</li>\n<li>\n<p><code>totp</code> Display the Two-Factor Code (TOTP) attached to a vault record. If no record UID is provided, a list of available records that contain Two-Factor Codes will be displayed. If a record UID is provided, the code is displayed with a countdown timer.</p>\n</li>\n<li>\n<p><code>download-attachment</code> Download all file attachments in specified record</p>\n</li>\n<li>\n<p><code>upload-attachment</code> Upload file attachments to the specified record</p>\n</li>\n<li>\n<p><code>delete-attachment</code> Delete a file attachment from the specified record.  Specify Record UID and Filename (or Attachment ID)</p>\n</li>\n<li>\n<p><code>list-sf</code> or <code>lsf</code> Display all shared folders</p>\n</li>\n<li>\n<p><code>create-user</code> Create Keeper vault account.\nNote: If executed by an admin, the user will be provisioned to the Enterprise license. - <a href=\"#creating-and-pre-populating-vaults\" rel=\"nofollow\">See Details</a></p>\n</li>\n<li>\n<p><code>list-team</code> or <code>lt</code> Display all teams</p>\n</li>\n</ul>\n<p><strong>Record Management Commands</strong></p>\n<ul>\n<li>\n<p><code>add</code> Add a record to the vault</p>\n</li>\n<li>\n<p><code>edit</code> Edit a record in the vault</p>\n</li>\n<li>\n<p><code>rm</code> Remove record</p>\n</li>\n<li>\n<p><code>append-notes</code> or <code>an</code> Append notes to existing record</p>\n</li>\n</ul>\n<p><strong>Folder Management Commands</strong></p>\n<ul>\n<li>\n<p><code>mkdir</code> Create folder</p>\n</li>\n<li>\n<p><code>rmdir</code> Remove folder and its content</p>\n</li>\n<li>\n<p><code>mv</code> Move record or folder</p>\n</li>\n<li>\n<p><code>ln</code> Create a link between record or folder</p>\n</li>\n<li>\n<p><code>set</code> Set environmental variables that can be used for substitution within other commands/arguments.</p>\n</li>\n<li>\n<p><code>echo</code> Display environmental variables</p>\n</li>\n</ul>\n<p><strong>Remote Connection Commands</strong></p>\n<ul>\n<li><code>connect</code> Connect to external server using SSH, RDP or any other protocol.</li>\n</ul>\n<p><strong>Password Rotation Commands</strong></p>\n<ul>\n<li><code>rotate</code> or <code>r</code> Rotate password in record</li>\n</ul>\n<p><strong>Import and Export Commands</strong></p>\n<ul>\n<li>\n<p><code>import</code> Import data from local file to Keeper. JSON, CSV, Keepass, LastPass formats accepted. Keepass import includes all file attachments.</p>\n</li>\n<li>\n<p><code>export</code> Export data from Keeper to local file or stdout. JSON, CSV, Keepass file formats supported.  Keepass exports include all file attachments.</p>\n</li>\n</ul>\n<p><strong>Folder and Record Sharing Commands</strong></p>\n<ul>\n<li>\n<p><code>share-record</code> or <code>sr</code> Grant or revoke record's user access</p>\n</li>\n<li>\n<p><code>share-folder</code> or <code>sf</code> Grant or revoke shared folder's user access or record permission</p>\n</li>\n<li>\n<p><code>record-permission</code> Changes record permissions inside the folder or folder tree.</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--action</code> Grant or revoke requested permissions</li>\n<li><code>--share-record</code> Modify direct record share permissions only</li>\n<li><code>--share-folder</code> Modify record permissions on shared folders</li>\n<li><code>--recursive</code> Apply permissions to all records in folder tree</li>\n<li><code>--can-share</code> Permission to share the record</li>\n<li><code>--can-edit</code> Permission to edit the record</li>\n<li><code>--dry-run</code> Do not modify but display permissions that are about to be changed by this command</li>\n</ul>\n</li>\n</ul>\n<p><strong>Enterprise Console Management Commands</strong></p>\n<ul>\n<li>\n<p><code>enterprise-info</code> or <code>ei</code>   Display enterprise information</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--nodes</code> Show node structure in a tree form</li>\n<li><code>--users</code> Show users in a list view</li>\n<li><code>--roles</code> Show all roles in a list view</li>\n<li><code>--teams</code> Show all teams in a list view</li>\n<li><code>--node</code> Specify a single node to limit view</li>\n<li><code>--v</code> Verbose mode</li>\n</ul>\n</li>\n<li>\n<p><code>enterprise-user &lt;email&gt;</code> or <code>eu &lt;email&gt;</code>   Enterprise user management</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--expire</code> Expire the Master Password for the user</li>\n<li><code>--extend</code> Extend vault transfer consent by 7 days</li>\n<li><code>--lock</code> Unlock the user account</li>\n<li><code>--unlock</code> Lock the user account</li>\n<li><code>--disable-2fa</code> Disable 2FA for a user</li>\n<li><code>--add</code> Invite a new user to join the enterprise</li>\n<li><code>--delete</code> Delete the user and all stored vault records (use with caution)</li>\n<li><code>--name</code> Rename a user's display name</li>\n<li><code>--node</code> Move user into a node</li>\n<li><code>--add-role</code> Add a user to a role</li>\n<li><code>--remove-role</code> Remove a user from a role</li>\n<li><code>--add-team</code> Add a user to a team</li>\n<li><code>--remove-team</code> Remove a user from a team</li>\n<li>If no parameters are provided, displays information about specified email</li>\n</ul>\n</li>\n<li>\n<p><code>enterprise-role &lt;Role ID&gt;</code> or <code>er &lt;Role ID&gt;</code>   Enterprise role management</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--add-user</code> Add a user to a specified role</li>\n<li><code>--remove-user</code> Remove a user from a specified role</li>\n<li>If no parameters are provided, displays information about specified role</li>\n</ul>\n</li>\n<li>\n<p><code>enterprise-team &lt;Team ID&gt;</code> or <code>et &lt;Team ID&gt;</code>   Enterprise team management</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--add</code> Create a new team in the root node</li>\n<li><code>--node</code> Move a team into the specified node</li>\n<li><code>--add-user</code> Add a user to a team</li>\n<li><code>--remove-user</code> Remove a user from a team</li>\n<li><code>--name</code> Change the Team name</li>\n<li><code>--delete</code> Delete a team</li>\n<li><code>--restrict-edit</code> Restrict record edit on the team</li>\n<li><code>--restrict-share</code> Restrict record re-sharing on the team</li>\n<li><code>--restrict-view</code> Restrict record viewing on the team</li>\n<li>If no parameters are provided, displays information about specified team</li>\n</ul>\n</li>\n<li>\n<p><code>team-approve</code> Approve queued teams and users that have been provisioned by SCIM or Active Directory Bridge</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--team</code> Approve teams only</li>\n<li><code>--user</code> Approve team users only</li>\n<li><code>--restrict-edit {on,off}</code> disable record edits</li>\n<li><code>--restrict-share {on,off}</code> disable record re-shares</li>\n<li><code>--restrict-view {on,off}</code> disable view/copy passwords</li>\n</ul>\n</li>\n<li>\n<p><code>enterprise-push &lt;Record Template File Name&gt;</code>   Populate user and team vaults with default records - <a href=\"#pushing-records-to-users-and-teams\" rel=\"nofollow\">See Details</a></p>\n<p>Parameters:</p>\n<ul>\n<li><code>--syntax-help</code> Displays information of record template file format</li>\n<li><code>--team TEAM_NAME or TEAM UID</code> Populate all team users' vaults</li>\n<li><code>--email USER_EMAIL</code> Populate user's vault</li>\n<li><code>file</code> JSON file name containing template records</li>\n</ul>\n</li>\n<li>\n<p><code>audit-log</code> Export audit and event logs to SIEM - <a href=\"#event-logging-to-siem\" rel=\"nofollow\">See Details</a></p>\n<ul>\n<li><code>--target=splunk</code> Export events to Splunk HTTP Event Collector</li>\n<li><code>--target=sumo</code> Export events to Sumo Logic HTTP Event Collector</li>\n<li><code>--target=syslog</code> Export events to a local file in syslog format</li>\n<li><code>--target=syslog-port</code> Export events in syslog format to TCP port. Both plain and SSL connections are supported</li>\n<li><code>--target=azure-la</code> Export events to Azure Log Analytics to custom log named Keeper_CL</li>\n<li><code>--target=json</code> Export events to a local file in JSON format</li>\n</ul>\n</li>\n<li>\n<p><code>audit-report</code> Generate ad-hoc customized audit event reports in raw and summarized formats - <a href=\"#ad-hoc-event-reporting\" rel=\"nofollow\">See Details</a></p>\n<p>Parameters:</p>\n<ul>\n<li><code>--report-type</code> {raw,dim,hour,day,week,month,span}</li>\n<li><code>--report-format</code> {message,fields} output format (raw reports only)</li>\n<li><code>--columns COLUMNS</code>     Can be repeated. (ignored for raw reports)</li>\n<li><code>--aggregate</code> {occurrences,first_created,last_created} aggregated value. Can be repeated. (ignored for raw reports)</li>\n<li><code>--timezone TIMEZONE</code>   return results for specific timezone</li>\n<li><code>--limit LIMIT</code>         maximum number of returned rows</li>\n<li><code>--order</code> {desc,asc}    sort order</li>\n<li><code>--created CREATED</code>  Filter: Created date. Predefined filters: today, yesterday, last_7_days, last_30_days, month_to_date, last_month, year_to_date, last_year</li>\n<li><code>--event-type EVENT_TYPE</code> Filter: Audit Event Type</li>\n<li><code>--username USERNAME</code> Filter: Username of event originator</li>\n<li><code>--to-username TO_USERNAME</code> Filter: Username of event target</li>\n<li><code>--record-uid RECORD_UID</code> Filter: Record UID</li>\n<li><code>--shared-folder-uid SHARED_FOLDER_UID</code> Filter: Shared Folder UID</li>\n</ul>\n</li>\n<li>\n<p><code>user-report</code> Generate ad-hoc user status report</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--format</code> {table,json,csv}</li>\n<li><code>--output</code> output to the given filename</li>\n<li><code>--days</code> {number of days} number of days to look back for last login date</li>\n</ul>\n</li>\n<li>\n<p><code>share-report</code> Generate ad-hoc sharing permission report that displays users and team permissions for all records in the vault</p>\n<p>Parameters:</p>\n<ul>\n<li><code>--record</code> View share permissions on specific record</li>\n<li><code>--email</code> View share permissions with specific account. User email or team name</li>\n<li><code>--owner</code> Include the owner information for each record</li>\n<li><code>--verbose</code> Include the record title and permission settings for each record</li>\n</ul>\n</li>\n</ul>\n<h3>Importing Records into Keeper</h3>\n<p>To import records into your vault, use the <code>import</code> command.  Supported import formats:</p>\n<ul>\n<li>JSON</li>\n<li>CSV</li>\n<li>Keepass (see additional <a href=\"keepercommander/importer/keepass/README.md\" rel=\"nofollow\">install instructions</a>)</li>\n<li>LastPass (see additional <a href=\"keepercommander/importer/lastpass/README.md\" rel=\"nofollow\">install instructions</a>)</li>\n</ul>\n<p>JSON import files can contain records, folders, subfolders, shared folders, default folder permissions  and user/team permissions.\nCSV import files contain records, folders, subfolders, shared folders and default shared folder permissions.\nKeepass files will transfer records, file attachments, folders and subfolders. Option exists to make all folders as shared folders. File attachments are supported in both import and export with Keepass however they are limited to 1MB for each file based on keepass' structure.\nLastPass import will transfer the vault passwords directly to Keeper retaining the folder structure.</p>\n<p><strong>JSON Record Import</strong></p>\n<p>Below is a JSON import file with 2 records. The first record is added to a folder called \"My Servers\". The second record is added to \"My Servers\" and also added to a shared folder called \"Shared Servers\".</p>\n<p>The import file example below is an array of record objects which can import into private folders and shared folders:</p>\n<pre><span class=\"o\">[{</span>\n    <span class=\"s2\">\"title\"</span>:<span class=\"s2\">\"Dev Server\"</span>,\n    <span class=\"s2\">\"folders\"</span>: <span class=\"o\">[</span>\n      <span class=\"o\">{</span>\n        <span class=\"s2\">\"folder\"</span>: <span class=\"s2\">\"My Servers\"</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"login\"</span>: <span class=\"s2\">\"root\"</span>,\n    <span class=\"s2\">\"password\"</span>: <span class=\"s2\">\"lk4j139sk4j\"</span>,\n    <span class=\"s2\">\"login_url\"</span>: <span class=\"s2\">\"https://myserver.com\"</span>,\n    <span class=\"s2\">\"notes\"</span>: <span class=\"s2\">\"These are some notes.\"</span>,\n    <span class=\"s2\">\"custom_fields\"</span>: <span class=\"o\">{</span><span class=\"s2\">\"Security Group\"</span>:<span class=\"s2\">\"Private\"</span><span class=\"o\">}</span>\n<span class=\"o\">}</span>,\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"title\"</span>:<span class=\"s2\">\"Prod Server\"</span>,\n    <span class=\"s2\">\"folders\"</span>: <span class=\"o\">[</span>\n      <span class=\"o\">{</span>\n        <span class=\"s2\">\"folder\"</span>: <span class=\"s2\">\"My Servers\"</span>\n      <span class=\"o\">}</span>,\n      <span class=\"o\">{</span>\n       <span class=\"s2\">\"shared_folder\"</span>: <span class=\"s2\">\"Shared Servers\"</span>,\n       <span class=\"s2\">\"can_edit\"</span>: true,\n       <span class=\"s2\">\"can_share\"</span>: <span class=\"nb\">true</span>\n      <span class=\"o\">}</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"login\"</span>: <span class=\"s2\">\"root\"</span>,\n    <span class=\"s2\">\"password\"</span>: <span class=\"s2\">\"kj424094fsdjhfs4jf7h\"</span>,\n    <span class=\"s2\">\"login_url\"</span>: <span class=\"s2\">\"https://myprodserver.com\"</span>,\n    <span class=\"s2\">\"notes\"</span>: <span class=\"s2\">\"These are some notes.\"</span>,\n    <span class=\"s2\">\"custom_fields\"</span>: <span class=\"o\">{</span><span class=\"s2\">\"Security Group\"</span>:<span class=\"s2\">\"Public\"</span>,<span class=\"s2\">\"IP Address\"</span>:<span class=\"s2\">\"12.45.67.8\"</span><span class=\"o\">}</span>\n<span class=\"o\">}]</span>\n</pre>\n<p>Another example below first creates shared folders that are shared to users and teams, then imports records into the shared folders.  The format of the file is slightly different and allows you to separate the creation of shared folder objects and records:</p>\n<pre><code>{\n  \"shared_folders\": [\n    {\n      \"path\": \"My Customer 1\",\n      \"manage_users\": true,\n      \"manage_records\": true,\n      \"can_edit\": true,\n      \"can_share\": true,\n      \"permissions\": [\n        {\n          \"uid\": \"kVM96KGEoGxhskZoSTd_jw\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        },\n        {\n          \"name\": \"user@mycompany.com\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        }\n      ]\n    },\n    {\n      \"path\": \"Testing\\\\My Customer 2\",\n      \"manage_users\": true,\n      \"manage_records\": true,\n      \"can_edit\": true,\n      \"can_share\": true,\n      \"permissions\": [\n        {\n          \"uid\": \"ih1CggiQ-3ENXcn4G0sl-g\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        },\n        {\n          \"name\": \"user@mycompany.com\",\n          \"manage_users\": true,\n          \"manage_records\": true\n        }\n      ]\n    }\n  ],\n  \"records\": [\n    {\n      \"title\": \"Bank Account 1\",\n      \"login\": \"customer1234\",\n      \"password\": \"4813fJDHF4239fdk\",\n      \"login_url\": \"https://chase.com\",\n      \"notes\": \"These are some notes.\",\n      \"custom_fields\": {\n        \"Account Number\": \"123-456-789\"\n      },\n      \"folders\": [\n        {\n          \"folder\": \"Optional Private Folder 1\"\n        }\n      ]\n    },\n    {\n      \"title\": \"Bank Account 2\",\n      \"login\": \"mybankusername\",\n      \"password\": \"w4k4k193f$^&amp;@#*%2\",\n      \"login_url\": \"https://amex.com\",\n      \"notes\": \"Some great information here.\",\n      \"custom_fields\": {\n        \"Security Group\": \"Public\",\n        \"IP Address\": \"12.45.67.8\"\n      },\n      \"folders\": [\n        {\n          \"folder\": \"Optional Private Folder 1\"\n        },\n        {\n          \"shared_folder\": \"My Customer 1\",\n          \"can_edit\": true,\n          \"can_share\": true\n        }\n      ]\n    }\n  ]\n}\n</code></pre>\n<p>The format must be strict JSON or it will fail parsing. To import this file:</p>\n<pre>$ keeper import --format<span class=\"o\">=</span>json import.json\n</pre>\n<p>There are more complex import file examples that supports shared folders, folder permissions, user permissions and team permissions located in the sample_data/ folder. To import the sample JSON file into your vault, type this command:</p>\n<ul>\n<li>Example 1: <a href=\"sample_data/import.json.txt\" rel=\"nofollow\">import.json.txt</a></li>\n<li>Example 2: <a href=\"sample_data/import_records_existing_folders.json.txt\" rel=\"nofollow\">import_records_existing_folders.json.txt</a></li>\n<li>Example 3: <a href=\"sample_data/import_records_into_folders.json.txt\" rel=\"nofollow\">import_records_into_folders.json.txt</a></li>\n<li>Example 4: <a href=\"sample_data/import_shared_folders.json.txt\" rel=\"nofollow\">import_shared_folders.json.txt</a></li>\n<li>Example 5: <a href=\"sample_data/import_shared_folders_and_records.json.txt\" rel=\"nofollow\">import_shared_folders_and_records.json.txt</a></li>\n</ul>\n<pre>$ keeper import --format<span class=\"o\">=</span>json sample_data/import.json.txt\n</pre>\n<p>The sample file contains \"permissions\" objects that contain email address or team names.  If the email or team name exists in your Keeper enterprise account, they will be added to the shared folder, otherwise the information is ignored.</p>\n<p><strong>CSV Record Import</strong></p>\n<p>Keeper supports .csv text file import using comma delimited fields.</p>\n<p>File Format:\nFolder,Title,Login,Password,Website Address,Notes,Shared Folder,Custom Fields</p>\n<ul>\n<li>To specify subfolders, use backslash \"\\\" between folder names</li>\n<li>To set shared folder permission on the record, use the #edit or #reshare tags as seen below</li>\n<li>Enclose fields in quotes for multi-line or special characters</li>\n<li>Ensure files are UTF-8 encoded for support of international or double-byte characters</li>\n</ul>\n<p>Below is an example csv file that showcases several import features including personal folders, shared folders, subfolders, special characters and multi-line fields.</p>\n<pre><code>Business,Twitter,marketing@company.com,\"a bad password\",https://twitter.com,Some interesting notes!,,API Key,\"131939-AAAEKJLE-491231$##%!\",Date Created,2018-04-02\nSubfolder1,Twitter,craig@gmail.com,xwVnk0hfJmd2M$2l4shGF#p,https://twitter.com,,Social Media\\Customer1#edit#reshare\nSubfolder2,Facebook,craig@gmail.com,TycWyxodkQw4IrX9VFxj8F8,https://facebook.com,,Social Media\\Customer2#edit#reshare\n,Google Dev Account,mydevaccount@gmail.com,\"8123,9fKJRefa$!@#4912fkk!--3\",https://accounts.google.com,\"Google Cloud ID 448812771239122\nAccount Number 449128\nThis is multi-line\",Shared Accounts#edit#reshare,2FA Phone Number,+19165551212\n</code></pre>\n<p>To import this file:</p>\n<pre>$ keeper import --format<span class=\"o\">=</span>csv test.csv\n<span class=\"m\">4</span> records imported successfully\n</pre>\n<p>The resulting vault will look like <a href=\"https://raw.githubusercontent.com/Keeper-Security/Commander/master/keepercommander/images/csv_import.png\" rel=\"nofollow\">this image</a></p>\n<p><strong>Keepass Import</strong></p>\n<p>Keeper supports importing the record and folder structure directly from an encrypted Keepass file. File attachments are also supported.  Make sure to first follow <a href=\"keepercommander/importer/keepass/README.md\" rel=\"nofollow\">these instructions</a> to install the necessary keepass modules.</p>\n<pre>$ keeper import --format<span class=\"o\">=</span>keepass test.kdbx\n</pre>\n<p>You can optionally make all top level folders as shared folder object with default permissions.</p>\n<pre>$ keeper import --format<span class=\"o\">=</span>keepass --shared --permissions<span class=\"o\">=</span>URES test.kdbx\n</pre>\n<p>For more options, see the help screen:</p>\n<pre>$ keeper <span class=\"nb\">help</span> import\n</pre>\n<p><strong>LastPass Import</strong></p>\n<p>Keeper supports automatic import of your LastPass vault by providing your LastPass email, Master Password and 2FA code. Make sure to first follow <a href=\"keepercommander/importer/lastpass/README.md\" rel=\"nofollow\">these instructions</a> to install the necessary LastPass modules.</p>\n<pre>$ keeper import --format<span class=\"o\">=</span>lastpass craig@acme-demo.com \nProcessing... please wait.\n...             LastPass Password: *******\nPress &lt;Enter&gt; <span class=\"k\">if</span> account is not protected with Multifactor Authentication\n...          Multifactor Password: ******\n<span class=\"m\">13</span> records imported successfully\nMy Vault&gt;\n</pre>\n<p>You can optionally make all top level folders as shared folder object with default permissions.</p>\n<pre>$ keeper import --format<span class=\"o\">=</span>lastpass --shared --permissions<span class=\"o\">=</span>URES craig@acme-demo.com \n</pre>\n<p>For more options, see the help screen:</p>\n<pre>$ keeper <span class=\"nb\">help</span> import\n</pre>\n<h3>Exporting Records from Keeper</h3>\n<p>To export records from your vault, use the <code>export</code> command.  Supported export formats:</p>\n<ul>\n<li>JSON</li>\n<li>CSV</li>\n<li>Keepass (see additional <a href=\"keepercommander/importer/keepass/README.md\" rel=\"nofollow\">install instructions</a>)</li>\n</ul>\n<p>JSON export files contain records, folders, subfolders, shared folders, default folder permissions and user/team permissions.\nCSV import files contain records, folders, subfolders, shared folders and default shared folder permissions.\nKeepass files contain records, file attachments, folders and subfolders.</p>\n<h3>Ad-Hoc Event Reporting</h3>\n<p>Business customers can now generate advanced ad-hoc event reports with over 100 different event types and custom filters. For help with the syntax of the report, use the below command:</p>\n<pre><code>My Vault&gt; audit-report --syntax-help                                                                                                                                                                        \n</code></pre>\n<p>The list of over 100 event types is documented in our Enterprise Guide:</p>\n<p><a href=\"https://docs.keeper.io/enterprise-guide/event-reporting\" rel=\"nofollow\">https://docs.keeper.io/enterprise-guide/event-reporting</a></p>\n<pre><code>Audit Report Command Syntax Description:\n\nEvent properties\n  id                event ID\n  created           event time\n  username          user that created audit event\n  to_username       user that is audit event target\n  from_username     user that is audit event source\n  ip_address        IP address\n  geo_location      location\n  audit_event_type  audit event type\n  keeper_version    Keeper application\n  channel           2FA channel\n  status            Keeper API result_code\n  record_uid        Record UID\n  shared_folder_uid Shared Folder UID\n  node_id           Node ID (enterprise events only)\n  team_uid          Team UID (enterprise events only)\n\n--report-type:\n            raw     Returns individual events. All event properties are returned.\n                    Valid parameters: filters. Ignored parameters: columns, aggregates\n\n  span hour day\t    Aggregates audit event by created date. Span drops date aggregation\n     week month     Valid parameters: filters, columns, aggregates\n\n            dim     Returns event property description (audit_event_type, keeper_version) or distinct values.\n                    Valid parameters: columns. Ignored parameters: filters, aggregates\n\n--columns:          Defines break down report properties.\n                    can be any event property except: id, created\n\n--aggregates:       Defines the aggregate value:\n     occurrences    number of events. COUNT(*)\n   first_created    starting date. MIN(created)\n    last_created    ending date. MAX(created)\n\n--limit:            Limits the number of returned records\n\n--order:            \"desc\" or \"asc\"\n                    raw report type: created\n                    aggregate reports: first aggregate\n\nFilters             Supported: '=', '&gt;', '&lt;', '&gt;=', '&lt;=', 'IN(&lt;&gt;,&lt;&gt;,&lt;&gt;)'. Default '='\n--created           Predefined ranges: today, yesterday, last_7_days, last_30_days, month_to_date, last_month, year_to_date, last_year\n                    Range 'BETWEEN &lt;&gt; AND &lt;&gt;'\n                    where value is UTC date or epoch time in seconds\n--event-type        Audit Event Type.  Value is event id or event name\n--username          Email\n--to-username\n--record-uid\t    Record UID\n--shared-folder-uid Shared Folder UID\n</code></pre>\n<p>For example, to see all record deletions that occurred in the last 7 days:</p>\n<pre><code>My Vault&gt; audit-report --report-type=raw --event-type record_delete --created last_7_days\n</code></pre>\n<p>Another example, to see all event history for a particular record UID:</p>\n<pre><code>My Vault&gt; audit-report --report-type=raw --record-uid cQxq0MZ1ZmB-s9JE8CZpdA\n</code></pre>\n<p>To see certain events (in this case, login_failure) today:</p>\n<pre><code>My Vault&gt; audit-report --report-type=raw --event-type=login_failure --created=today\n</code></pre>\n<p>To list all possible event types:</p>\n<pre><code>My Vault&gt; audit-report --report-type=dim --column=audit_event_type \n</code></pre>\n<p>There are hundreds of possible report variations possible. If you have any questions, please contact us at <a href=\"mailto:commander@keepersecurity.com\">commander@keepersecurity.com</a> and we'll help you construct the perfect report syntax.</p>\n<h3>Event Logging to SIEM</h3>\n<p>Commander supports integration with popular SIEM solutions such as Splunk, Sumo and general Syslog format.  For more general reporting of events, we recommend using the <code>audit-report</code> command.  For pushes of event data into on-prem SIEM, the <code>audit-log</code> command is a good choice because it automatically tracks the last event exported and only sends incremental updates.  The list of over 100 event types is documented in our Enterprise Guide:</p>\n<p><a href=\"https://docs.keeper.io/enterprise-guide/event-reporting\" rel=\"nofollow\">https://docs.keeper.io/enterprise-guide/event-reporting</a></p>\n<p>Using Commander for SIEM integration works well in an on-prem environment where the HTTP event collector is only available within your network.  The Keeper Admin Console versino 13.3+ is capable of integrating our backend event data into your SIEM solution but it requires that you are utilizing a cloud-based SIEM solution. If you need assistance in integrating Keeper into your SIEM solution without Commander, please contact our business support team at <a href=\"mailto:business.support@keepersecurity.com\">business.support@keepersecurity.com</a>.</p>\n<p><strong>Export of Event Logs in Syslog Format</strong></p>\n<p>Commander can export all event logs to a local file in syslog format, or export data in incremental files.  A Keeper record in your vault\nis used to store a reference to the last event</p>\n<pre>$ keeper shell\n</pre>\n<p>To export all events and start tracking the last event time exported:</p>\n<pre><code>My Vault&gt; audit-log --target=syslog\nDo you want to create a Keeper record to store audit log settings? [y/n]: y\nChoose the title for audit log record [Default: Audit Log: Syslog]: \nEnter filename for syslog messages.\n...              Syslog file name: all_events.log\n...          Gzip messages? (y/N): n\nExported 3952 audit events\nMy Vault&gt;\n</code></pre>\n<p>This creates a record in your vault (titled \"Audit Log: Syslog\" in this example) which tracks the timestamp of the last exported event and the output filename.\nThen the event data is exported to the file in either text or gzip format.</p>\n<p>Each subsequent audit log export can be performed with this command:</p>\n<pre>$ keeper audit-log --format<span class=\"o\">=</span>syslog --record<span class=\"o\">=</span>&lt;your record UID&gt;\n</pre>\n<p>or from the shell:</p>\n<pre><code>My Vault&gt; audit-log --target=syslog --record=&lt;your record UID&gt;\n</code></pre>\n<p>To automate the syslog event export every 5 minutes, create a JSON configuration file such as this:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"server\"</span>:<span class=\"s2\">\"https://keepersecurity.com/api/v2/\"</span>,\n    <span class=\"s2\">\"user\"</span>:<span class=\"s2\">\"craig@company.com\"</span>,\n    <span class=\"s2\">\"password\"</span>:<span class=\"s2\">\"your_password_here\"</span>,\n    <span class=\"s2\">\"mfa_token\"</span>:<span class=\"s2\">\"filled_in_by_commander\"</span>,\n    <span class=\"s2\">\"mfa_type\"</span>:<span class=\"s2\">\"device_token\"</span>,\n    <span class=\"s2\">\"debug\"</span>:false,\n    <span class=\"s2\">\"plugins\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"commands\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"sync-down\"</span>,<span class=\"s2\">\"audit-log --target=syslog\"</span><span class=\"o\">]</span>,\n    <span class=\"s2\">\"timedelay\"</span>:600,\n<span class=\"o\">}</span>\n</pre>\n<p>Then run Commander using the config parameter. For example:</p>\n<pre>$ keeper --config<span class=\"o\">=</span>my_config_file.json\n</pre>\n<p><strong>Splunk HTTP Event Collector Push</strong></p>\n<p>Keeper can post event logs directly to your on-prem or cloud Splunk instance. Please follow the below steps:</p>\n<ul>\n<li>Login to Splunk enterprise</li>\n<li>Go to Settings -&gt; Data Inputs -&gt; HTTP Event Collector</li>\n<li>Click on \"New Token\" then type in a name, select an index and finish.</li>\n<li>At the last step, copy the \"Token Value\" and save it for the next step.</li>\n<li>Login to Keeper Commander shell</li>\n</ul>\n<pre>$ keeper shell\n</pre>\n<p>Next set up the Splunk integration with Commander. Commander will create a record in your vault that stores the provided token and Splunk HTTP Event Collector. This will be used to also track the last event captured so that subsequent execution will pick up where it left off.  Note that the default port for HEC is 8088.</p>\n<pre><code>$ keeper audit-log --format=splunk\n\nDo you want to create a Keeper record to store audit log settings? [y/n]: y\nChoose the title for audit log record [Default: Audit Log: Splunk]: &lt;enter&gt; \n\nEnter HTTP Event Collector (HEC) endpoint in format [host:port].\nExample: splunk.company.com:8088\n...           Splunk HEC endpoint: 192.168.51.41:8088\nTesting 'https://192.168.51.41:8088/services/collector' ...Found.\n...                  Splunk Token: e2449233-4hfe-4449-912c-4923kjf599de\n</code></pre>\n<p>You can find the record UID of the Splunk record for subsequent audit log exports:</p>\n<pre><code>My Vault&gt; search splunk\n\n  #  Record UID              Title              Login    URL\n---  ----------------------  -----------------  -------  -----\n  1  schQd2fOWwNchuSsDEXfEg  Audit Log: Splunk\n</code></pre>\n<p>Each subsequent audit log export can be performed with this command:</p>\n<pre>$ keeper audit-log --format<span class=\"o\">=</span>splunk --record<span class=\"o\">=</span>&lt;your record UID&gt;\n</pre>\n<p>or from the shell:</p>\n<pre><code>My Vault&gt; audit-log --target=splunk --record=&lt;your record UID&gt;\n</code></pre>\n<p>To automate the push of Splunk events every 5 minutes, create a JSON configuration file such as this:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"server\"</span>:<span class=\"s2\">\"https://keepersecurity.com/api/v2/\"</span>,\n    <span class=\"s2\">\"user\"</span>:<span class=\"s2\">\"craig@company.com\"</span>,\n    <span class=\"s2\">\"password\"</span>:<span class=\"s2\">\"your_password_here\"</span>,\n    <span class=\"s2\">\"mfa_token\"</span>:<span class=\"s2\">\"filled_in_by_commander\"</span>,\n    <span class=\"s2\">\"mfa_type\"</span>:<span class=\"s2\">\"device_token\"</span>,\n    <span class=\"s2\">\"debug\"</span>:false,\n    <span class=\"s2\">\"plugins\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"commands\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"sync-down\"</span>,<span class=\"s2\">\"audit-log --target=splunk\"</span><span class=\"o\">]</span>,\n    <span class=\"s2\">\"timedelay\"</span>:600,\n<span class=\"o\">}</span>\n</pre>\n<p>Then run Commander using the config parameter. For example:</p>\n<pre>$ keeper --config<span class=\"o\">=</span>my_config_file.json\n</pre>\n<p><strong>Sumo Logic HTTP Event Collector Push</strong></p>\n<p>Keeper can post event logs directly to your Sumo Logic account. Please follow the below steps:</p>\n<ul>\n<li>Login to Sumo Logic</li>\n<li>Go to Manage Data -&gt; Collection</li>\n<li>Click on Add Collector -&gt; Hosted Collector then Add Source -&gt; HTTP Logs &amp; Metrics</li>\n<li>Name the collector and Save. Any other fields are default.</li>\n<li>Note the HTTP Source Address which is the collector URL</li>\n<li>Login to Keeper Commander shell</li>\n</ul>\n<pre>$ keeper shell\n</pre>\n<p>Next set up the Sumo Logic integration with Commander. Commander will create a record in your vault that stores the HTTP Collector information. This will be used to also track the last event captured so that subsequent execution will pick up where it left off.</p>\n<pre><code>$ keeper audit-log --format=sumo\n</code></pre>\n<p>When asked for \u201cHTTP Collector URL:\u201d paste the URL captured from the Sumo interface above.</p>\n<p>After this step, there will be a record in your vault used for tracking the event data integration.\nYou can find the record UID of the Sumo record for subsequent audit log exports:</p>\n<pre><code>My Vault&gt; search sumo\n\n  #  Record UID              Title              Login    URL\n---  ----------------------  -----------------  -------  -----\n  1  schQd2fOWwNchuSsDEXfEg  Audit Log: Sumo\n</code></pre>\n<p>Each subsequent audit log export can be performed with this command:</p>\n<pre>$ keeper audit-log --format<span class=\"o\">=</span>sumo --record<span class=\"o\">=</span>&lt;your record UID&gt;\n</pre>\n<p>or from the shell:</p>\n<pre><code>My Vault&gt; audit-log --target=sumo --record=&lt;your record UID&gt;\n</code></pre>\n<p>To automate the push of Sumo Logic events every 5 minutes, create a JSON configuration file such as this:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"server\"</span>:<span class=\"s2\">\"https://keepersecurity.com/api/v2/\"</span>,\n    <span class=\"s2\">\"user\"</span>:<span class=\"s2\">\"craig@company.com\"</span>,\n    <span class=\"s2\">\"password\"</span>:<span class=\"s2\">\"your_password_here\"</span>,\n    <span class=\"s2\">\"mfa_token\"</span>:<span class=\"s2\">\"filled_in_by_commander\"</span>,\n    <span class=\"s2\">\"mfa_type\"</span>:<span class=\"s2\">\"device_token\"</span>,\n    <span class=\"s2\">\"debug\"</span>:false,\n    <span class=\"s2\">\"plugins\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"commands\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"sync-down\"</span>,<span class=\"s2\">\"audit-log --target=sumo\"</span><span class=\"o\">]</span>,\n    <span class=\"s2\">\"timedelay\"</span>:600,\n<span class=\"o\">}</span>\n</pre>\n<p>Then run Commander using the config parameter. For example:</p>\n<pre>$ keeper --config<span class=\"o\">=</span>my_config_file.json\n</pre>\n<p><strong>Export of Event Logs in JSON Format</strong></p>\n<p>Commander can export all event logs to a local file in JSON format. The local file is overwritten with every run of Commander.\nThis kind of export can be used with conjunction with other application that process the file.\nA Keeper record in your vault is used to store a reference to the last event.</p>\n<pre>$ keeper shell\n</pre>\n<p>To export all events and start tracking the last event time exported:</p>\n<pre><code>My Vault&gt; audit-log --target=json\nDo you want to create a Keeper record to store audit log settings? [y/n]: y\nChoose the title for audit log record [Default: Audit Log: JSON]:\nJSON file name: all_events.json\nExported 3952 audit events\nMy Vault&gt;\n</code></pre>\n<p>This creates a record in your vault (titled \"Audit Log: JSON\" in this example) which tracks the timestamp of the last exported event and the output filename.\nThen the event data is exported to the file.</p>\n<p>Each subsequent audit log export can be performed with this command:</p>\n<pre>$ keeper audit-log --format<span class=\"o\">=</span>json --record<span class=\"o\">=</span>&lt;your record UID&gt;\n</pre>\n<p>or from the shell:</p>\n<pre><code>My Vault&gt; audit-log --target=json --record=&lt;your record UID&gt;\n</code></pre>\n<p>To automate the JSON event export every 5 minutes, create a JSON configuration file such as this:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"server\"</span>:<span class=\"s2\">\"https://keepersecurity.com/api/v2/\"</span>,\n    <span class=\"s2\">\"user\"</span>:<span class=\"s2\">\"craig@company.com\"</span>,\n    <span class=\"s2\">\"password\"</span>:<span class=\"s2\">\"your_password_here\"</span>,\n    <span class=\"s2\">\"mfa_token\"</span>:<span class=\"s2\">\"filled_in_by_commander\"</span>,\n    <span class=\"s2\">\"mfa_type\"</span>:<span class=\"s2\">\"device_token\"</span>,\n    <span class=\"s2\">\"debug\"</span>:false,\n    <span class=\"s2\">\"plugins\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"commands\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"sync-down\"</span>,<span class=\"s2\">\"audit-log --target=json\"</span><span class=\"o\">]</span>,\n    <span class=\"s2\">\"timedelay\"</span>:600,\n<span class=\"o\">}</span>\n</pre>\n<p>Then run Commander using the config parameter. For example:</p>\n<pre>$ keeper --config<span class=\"o\">=</span>my_config_file.json\n</pre>\n<p><strong>Azure Log Analytics</strong></p>\n<p>Keeper can post event logs directly to your Azure Log Analytics workspace. Please follow the below steps:</p>\n<ul>\n<li>Login to Azure Portal and open Log Analytics workspace</li>\n<li>Go to Settings -&gt; Advanced settings</li>\n<li>Note the Workspace ID and Primary or Secondary key</li>\n<li>Login to Keeper Commander shell</li>\n</ul>\n<pre>$ keeper shell\n</pre>\n<p>Next set up the Log Analytics integration with Commander. Commander will create a record in your vault that stores the Log Analytics access information. This will be used to also track the last event captured so that subsequent execution will pick up where it left off.</p>\n<pre><code>$ keeper audit-log --format=azure-la\n</code></pre>\n<p>When asked for \u201cWorkspace ID:\u201d paste Workspace ID captured from the Advanced settings interface above.\nWhen asked for \u201cKey:\u201d paste Primary or Secondary key captured from the Advanced settings interface above.</p>\n<p>After this step, there will be a record in your vault used for tracking the event data integration.\nYou can find the record UID of the Log Analytics record for subsequent audit log exports:</p>\n<pre><code>My Vault&gt; search analytics\n\n  #  Record UID              Title                           Login                                 URL\n---  ----------------------  ------------------------------  ------------------------------------  -----\n  1  schQd2fOWwNchuSsDEXfEg  Audit Log: Azure Log Analytics  &lt;WORKSPACE GUID&gt;\n</code></pre>\n<p>Each subsequent audit log export can be performed with this command:</p>\n<pre>$ keeper audit-log --format<span class=\"o\">=</span>azure-la --record<span class=\"o\">=</span>&lt;your record UID&gt;\n</pre>\n<p>or from the shell:</p>\n<pre><code>My Vault&gt; audit-log --target=azure-la --record=&lt;your record UID&gt;\n</code></pre>\n<p>To automate the push of events to Azure Log Analytics every 5 minutes, create a JSON configuration file such as this:</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"server\"</span>:<span class=\"s2\">\"https://keepersecurity.com/api/v2/\"</span>,\n    <span class=\"s2\">\"user\"</span>:<span class=\"s2\">\"craig@company.com\"</span>,\n    <span class=\"s2\">\"password\"</span>:<span class=\"s2\">\"your_password_here\"</span>,\n    <span class=\"s2\">\"mfa_token\"</span>:<span class=\"s2\">\"filled_in_by_commander\"</span>,\n    <span class=\"s2\">\"mfa_type\"</span>:<span class=\"s2\">\"device_token\"</span>,\n    <span class=\"s2\">\"debug\"</span>:false,\n    <span class=\"s2\">\"plugins\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"commands\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"sync-down\"</span>,<span class=\"s2\">\"audit-log --target=azure-la\"</span><span class=\"o\">]</span>,\n    <span class=\"s2\">\"timedelay\"</span>:600,\n<span class=\"o\">}</span>\n</pre>\n<p>Then run Commander using the config parameter. For example:</p>\n<pre>$ keeper --config<span class=\"o\">=</span>my_config_file.json\n</pre>\n<h3>Advanced Configuration File</h3>\n<p>By default, Keeper will look for a file called <code>config.json</code> in the current working directory and it will use this file for reading and writing session parameters. For example, if you login with two factor authentication, the device token is written to this file. The configuration file loaded can also be customized through the <code>config</code> parameter. The config file can also be used to automate and schedule commands.</p>\n<p>Below is a fully loaded config file.</p>\n<pre><span class=\"o\">{</span>\n    <span class=\"s2\">\"server\"</span>:<span class=\"s2\">\"https://keepersecurity.com/api/v2/\"</span>,\n    <span class=\"s2\">\"user\"</span>:<span class=\"s2\">\"craig@company.com\"</span>,\n    <span class=\"s2\">\"password\"</span>:<span class=\"s2\">\"your_password_here\"</span>,\n    <span class=\"s2\">\"mfa_token\"</span>:<span class=\"s2\">\"filled_in_by_commander\"</span>,\n    <span class=\"s2\">\"mfa_type\"</span>:<span class=\"s2\">\"device_token\"</span>,\n    <span class=\"s2\">\"debug\"</span>:false,\n    <span class=\"s2\">\"plugins\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"commands\"</span>:<span class=\"o\">[]</span>,\n    <span class=\"s2\">\"timedelay\"</span>:0,\n<span class=\"o\">}</span>\n</pre>\n<p>Notes:</p>\n<ul>\n<li>\n<p><code>server</code> can be left blank and defaults to the United States data center. If your account is in the European data center then change the server domain from <code>.com</code> to <code>.eu</code>.</p>\n</li>\n<li>\n<p><code>mfa_token</code> will be set by Commander automatically after successful two-factor authentication.</p>\n</li>\n<li>\n<p><code>debug</code> parameter can be set to <code>true</code> or <code>false</code> to enable detailed crypto and network logging.</p>\n</li>\n<li>\n<p><code>plugins</code> parameter determines which password rotation plugin will be loaded. <a href=\"https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins\" rel=\"nofollow\">Learn more</a> about password rotation plugins for Commander.</p>\n</li>\n<li>\n<p><code>commands</code> parameter is a comma-separated list of Keeper commands to run.  For example:\n<code>\"commands\":[\"sync-down\", \"upload-attachment --file=\\\"/Users/craig/something.zip\\\" \\\"3PMqasi9hohmyLWJkgxCWg\\\"\",\"share-record --email=\\\"somebody@gmail.com\\\" --write \\\"3PMqasi9hohmyLWJkgxCWg\\\"\"]</code> will sync your vault, upload a file and then share the record with another user.</p>\n</li>\n<li>\n<p><code>timedelay</code> parameter can be used to automatically run the specified commands every X seconds. For example:\n<code>\"timedelay\":600</code> will run the commands every 10 minutes.</p>\n</li>\n<li>\n<p><code>logout_timer</code> parameter can be used to logout automatically in shell mode after inactivity period. Time period in minutes</p>\n</li>\n</ul>\n<p>To configure Yubikey device authentication, follow the <a href=\"https://github.com/Keeper-Security/Commander/tree/master/keepercommander/yubikey\" rel=\"nofollow\">setup instructions</a>.  In this mode, you will use a challenge phrase to authenticate instead of a Master Password.</p>\n<ul>\n<li><code>device_token_expiration</code> can be set to <code>true</code> to expire 2FA device tokens after 30 days. By default, the 2FA device token will never expire. To manually force a 2FA token to expire, login to your Keeper vault (on desktop app, Web Vault or mobile app) and disable then re-enable your Two-Factor Authentication settings. This will invalidate all previously saved tokens across all devices.</li>\n</ul>\n<h3>Batch Mode</h3>\n<p>You can batch execute a series of commands and pipe the file to STDIN of Commander.  For example, create a text file called <code>test.cmd</code> with the following lines:</p>\n<pre><code>add --login=blah@gmail.com --pass=somemasterpass --url=https://google.com --force \"Some Record Title\"\nupload-attachment --file=\"/path/to/some/file.txt\" \"Some Record Title\"\nshare-record --email=\"user@company.com\" --write \"Some Record Title\"\n</code></pre>\n<p>To run this file in a batch mode:</p>\n<pre>cat test.cmd <span class=\"p\">|</span> keeper --batch-mode shell\n</pre>\n<p>or</p>\n<pre>cat test.cmd <span class=\"p\">|</span> keeper -\n</pre>\n<p>The batch execution is aborted if some command returns failure.\nUse <code>@</code> in front of the command to suppress the possible command error.</p>\n<pre><code>add --login=blah@gmail.com --pass=somemasterpass --url=https://google.com --force \"Some Record Title\"\n@upload-attachment --file=\"/path/to/some/file.txt\" \"Some Record Title\"\nshare-record --email=\"user@company.com\" --write \"Some Record Title\"\n</code></pre>\n<h3>Enterprise SSO Login</h3>\n<p>Customers who normally login to their Keeper Vault using Enterprise SSO Login (SAML 2.0) can also login to Keeper Commander using a Master Password.  To make use of this capability, it must be enabled by the Keeper Administrator and then configured by the user.  The steps are below:</p>\n<ol>\n<li>\n<p>Login to the Admin Console\n<a href=\"https://keepersecurity.com/console\" rel=\"nofollow\">https://keepersecurity.com/console</a></p>\n</li>\n<li>\n<p>For the User/Role who will be accessing Keeper Commander, open the Role Enforcement Policy setting screen.</p>\n</li>\n<li>\n<p>Enable the option \"Allow users who login with SSO to create a Master Password\"</p>\n</li>\n<li>\n<p>Login to the End-User Vault using SSO at <a href=\"https://keepersecurity.com/vault\" rel=\"nofollow\">https://keepersecurity.com/vault</a></p>\n</li>\n<li>\n<p>Visit the Settings &gt; General screen and setup a Master Password</p>\n</li>\n</ol>\n<p>After the Master Password is created, you are now able to login to Keeper Commander.</p>\n<h3>Pushing Records to Users and Teams</h3>\n<p>The Keeper Admin can push vault records automatically to any user or team vault in their organization using the \"enterprise-push\" command.</p>\n<p>Examples:</p>\n<pre><code>enterprise-push --team \"Engineering Admins\" push.json\n</code></pre>\n<pre><code>enterprise-push --email user@company.com push.json\n</code></pre>\n<p>The \"push.json\" file is structured an an array of password objects.  For example:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Google\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"login\"</span><span class=\"p\">:</span> <span class=\"s2\">\"${user_email}\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"${generate_password}\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"login_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://google.com\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"notes\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"custom_fields\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"nt\">\"Name 1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Value 1\"</span><span class=\"p\">,</span>\n            <span class=\"nt\">\"Name 2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Value 2\"</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"nt\">\"title\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Admin Tool\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"login\"</span><span class=\"p\">:</span> <span class=\"s2\">\"${user_email}\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"login_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://192.168.1.1\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"notes\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"custom_fields\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Supported template parameters:</p>\n<pre><code>${user_email}          User email address\n${generate_password}   Generate random password\n${user_name}           User full name\n</code></pre>\n<h3>Creating and Pre-Populating Vaults</h3>\n<p>A Keeper Admin can create a user vault and pre-populate it with records. This can all be accomplished with a single command.</p>\n<p>For example:</p>\n<pre><code>create-user --generate --name=\"Test User\" --expire --records=\"push.json\" user@company.com\n\nCreated account: user@company.com\nGenerated password: &lt;displayed on the screen&gt;\n</code></pre>\n<p>This command performs the following streamlined operations:</p>\n<ol>\n<li>Creates a new user account for \"Test User\" with the email address <a href=\"mailto:user@company.com\">user@company.com</a></li>\n<li>The account is automatically provisioned to the Enterprise license and receives the default role policy</li>\n<li>The records stored in push.json are pushed to the user's vault</li>\n</ol>\n<p>After command completion, the \"Generated Password\" displayed to the admin is the temporary Master Password set for the user account. You can provide this Master Password to the user via a separate channel.</p>\n<p>Upon first logging in, the user will be prompted to set a new Master Password according to the password complexity requirements set by the role enforcement policy in the Keeper Admin Console.  If Two-Factor Authentication is required, the user will also be prompted to activate 2FA prior to accessing vault data.</p>\n<p>The \"push.json\" file is structured an an array of password objects.  For example:</p>\n<pre><code>[\n    {\n        \"title\": \"Google For ${user_name}\",\n        \"login\": \"${user_email}\",\n        \"password\": \"${generate_password}\",\n        \"login_url\": \"https://google.com\",\n        \"notes\": \"\",\n        \"custom_fields\": {\n            \"2FA Phone\": \"916-555-1212\"\n        }\n    },\n    {\n        \"title\": \"Development Server\",\n        \"login\": \"${user_email}\",\n        \"password\": \"${generate_password}\",\n        \"login_url\": \"\",\n        \"notes\": \"Here are some\\nMulti-line\\nNotes\",\n        \"custom_fields\": {\n        }\n    }\n]\n</code></pre>\n<p>Supported template parameters:</p>\n<pre><code>${user_email}          User email address\n${generate_password}   Generate random password\n${user_name}           User full name\n</code></pre>\n<h3>Password Retrieval API</h3>\n<p>A common use case for Commander is pulling credentials from the vault to replace hard-coded passwords, and to automate processes within CI/CD pipelines.  The recommended architecture is to isolate vault access to specific \"service account\" vaults in order to limit access.  Follow the process below:</p>\n<ol>\n<li>\n<p>Create a separate \"service account\" vault for each set of records that the service needs access to.</p>\n</li>\n<li>\n<p>Set a strong Master Password, 2FA and role enforcement policy on each vault.</p>\n</li>\n<li>\n<p>Share records (either direct share or shared folder) from the source vault to the service account vault.</p>\n</li>\n</ol>\n<p>Once configured, you can simply authenticate to Commander using the service accounts. By isolating the vaults to only contain a set of shared records, you will be limiting the exposure if the process or server becomes compromised.  Note that a unique and valid email address must be used for each service account.</p>\n<h4>Command-line Password Retrieval</h4>\n<p>The <code>get</code> command allows you to query a stored Keeper password by record UID.  For example:</p>\n<pre>$ keeper --user<span class=\"o\">=</span>&lt;Keeper Email&gt; get --format<span class=\"o\">=</span>password &lt;Record UID&gt;\n</pre>\n<p>The password retrieved is written to standard output.</p>\n<p>In this case, you will be asked for the Keeper Master Password. There are a few ways to provide Commander with the Master Password. All of these methods make the Keeper Master Password accessible on the filesystem and should be used with caution:</p>\n<ol>\n<li>\n<p><code>--password</code> parameter. i.e. <code>keeper --user=&lt;Keeper Email&gt; --password=&lt;Keeper Password&gt;</code>.</p>\n</li>\n<li>\n<p><code>KEEPER_PASSWORD</code> environment variable. i.e. <code>KEEPER_PASSWORD=&lt;Keeper Password&gt; keeper --user&lt;Keeper Email&gt;</code>. This method is demonstrated in the Jenkins script explained below.</p>\n</li>\n<li>\n<p>Stored to <code>config.json</code> file. Commander searches for file named <code>config.json</code> in the current working directory and uses the <code>password</code> parameter.</p>\n</li>\n</ol>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"user\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Keeper Email&gt;\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;Keeper Master Password&gt;\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Jenkins CI Integration</h3>\n<p>This example demonstrates retrieving a password in Keeper for use in the Jenkins CI environment.</p>\n<ol>\n<li>Create a Python virtual environment in the jenkins user home directory and install keepercommander package with pip:</li>\n</ol>\n<pre>jenkins@jenkins:~$ python3 -m venv keeper\njenkins@jenkins:~/$ <span class=\"nb\">cd</span> keeper\njenkins@jenkins:~/$ . bin/activate\n<span class=\"o\">(</span>keeper<span class=\"o\">)</span>jenkins@jenkins:~/keeper$ pip install keepercommander\n</pre>\n<ol>\n<li>Login to Commander with the account you are planning to use with Jenkins. Authenticate with Keeper Commander on the command-line in order to provide a two-factor code if the account has 2FA protection enabled.</li>\n</ol>\n<pre><span class=\"o\">(</span>keeper<span class=\"o\">)</span>jenkins@jenkins:~/keeper$ keeper --user<span class=\"o\">=</span>jenkins@mycompany.com -- shell\nMy Vault&gt; q\n</pre>\n<ol>\n<li>Add the Keeper user account to Jenkins Credentials configuration:</li>\n</ol>\n<ul>\n<li>Credential Kind: Username with password</li>\n<li>Username: <code>jenkins@mycompany.com</code></li>\n<li>Password: [Password]</li>\n<li>ID: <code>Keeper</code></li>\n</ul>\n<pre><span class=\"n\">node</span> <span class=\"o\">{</span>\n    <span class=\"n\">environment</span> <span class=\"o\">{</span>\n        <span class=\"n\">PASSWORD</span><span class=\"o\">=</span><span class=\"s1\">''</span>     <span class=\"c1\">// define environment variable</span>\n    <span class=\"o\">}</span>\n   <span class=\"n\">stage</span><span class=\"o\">(</span><span class=\"s1\">'Load'</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n       <span class=\"c1\">// change working directory to keeper venv</span>\n       <span class=\"n\">dir</span><span class=\"o\">(</span><span class=\"s2\">\"/var/jenkins_home/keeper\"</span><span class=\"o\">)</span> <span class=\"o\">{</span>      \n           <span class=\"c1\">// load Keeper credentials into environmenmt variables. Commander uses KEEPER_PASSWORD variable if set </span>\n           <span class=\"n\">withCredentials</span><span class=\"o\">([</span><span class=\"n\">usernamePassword</span><span class=\"o\">(</span><span class=\"nl\">credentialsId:</span> <span class=\"s1\">'Keeper'</span><span class=\"o\">,</span> <span class=\"nl\">usernameVariable:</span> <span class=\"s1\">'KEEPER_USERNAME'</span><span class=\"o\">,</span> <span class=\"nl\">passwordVariable:</span> <span class=\"s1\">'KEEPER_PASSWORD'</span><span class=\"o\">)])</span> <span class=\"o\">{</span>\n                    <span class=\"c1\">// retrieve the password </span>\n                   <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"na\">PASSWORD</span> <span class=\"o\">=</span> <span class=\"n\">sh</span><span class=\"o\">(</span><span class=\"nl\">script:</span> <span class=\"s2\">\". bin/activate; keeper --user=${KEEPER_USERNAME} get --format=password &lt;Record UID&gt;\"</span><span class=\"o\">,</span> <span class=\"nl\">returnStdout:</span> <span class=\"kc\">true</span><span class=\"o\">).</span><span class=\"na\">trim</span><span class=\"o\">()</span>\n            <span class=\"o\">}</span>\n       <span class=\"o\">}</span>\n   <span class=\"o\">}</span>\n   <span class=\"n\">stage</span><span class=\"o\">(</span><span class=\"s1\">'Run'</span><span class=\"o\">)</span> <span class=\"o\">{</span>\n       <span class=\"n\">echo</span> <span class=\"s2\">\"${env.PASSWORD}\"</span>\n   <span class=\"o\">}</span>\n<span class=\"o\">}</span>\n</pre>\n<p>In this example, replace the Record UID with the actual UID from the Keeper vault. To locate the Record UID see <a href=\"#locating-the-record-uid-and-other-identifiers\" rel=\"nofollow\">this section</a>.</p>\n<h3>Launching and Connecting to Remote Servers</h3>\n<p>Using the <code>connect</code> command, Keeper Commander can launch SSH, RDP or other external connections utilizing content and metadata stored in the Keeper vault record.  Command-line parameters are supplied through custom fields and file attachments. This command is very flexible and can be totally customized to use any 3rd party application or utility for performing the remote connections.</p>\n<p>The <code>connect</code> command reads the record's custom fields with names starting with \"connect:\".</p>\n<p>Below is a simple example of SSH to a remote server via SSH tunnel gateway.</p>\n<h4>SSH Launcher Example: SSH to a server via Gateway</h4>\n<p>In this example, we are showing how to connect to a server through a SSH gateway. The following fields are set:</p>\n<table>\n<thead>\n<tr>\n<th>Custom Field Name</th>\n<th>Custom Field Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>connect:xxx:description</td>\n<td>Production Server via Gateway</td>\n</tr>\n<tr>\n<td>connect:xxx</td>\n<td>ssh -o \"ProxyCommand ssh -i ${file:gateway.pem} ec2-user@gateway -W %h:%p\" -i ${file:server.pem} ec2-user@server</td>\n</tr>\n<tr>\n<td>File Attachment</td>\n<td>gateway.pem</td>\n</tr>\n<tr>\n<td>File Attachment</td>\n<td>server.pem</td>\n</tr></tbody></table>\n<p><code>xxx</code> refers to the friendly name which can be referenced when connecting on the command line. In this example we have \"my_server\".</p>\n<p>Here's a screenshot of the Keeper Vault record for this example:\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fc48f23e7099a655e457e34ea81986571ab23d8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6e6e6563745f7373685f73637265656e73686f742e706e67\"></p>\n<p>To connect to this server, simply run the below command:</p>\n<pre><code>My Vault&gt; connect my_server\nConnecting to my_server...\n\nLast login: Sat Sep 28 00:25:34 2019 from 12.23.34.5\nec2-user@my_server:~$ \nec2-user@my_server:~$ logout\nConnection to my_server closed.\nMy Vault&gt;                                                                                           \n</code></pre>\n<p>If the SSH private key is encrypted with a passphrase, you will be prompted every time to type in the passphrase.  To avoid this, we recommend using the SSH Agent variation described in the next section.</p>\n<h4>SSH connection using SSH Agent capabilities</h4>\n<p>Commander can integrate with the local SSH agent to register RSA private keys. This eliminates the need for you to type in the SSH passphrase every time you connect to the remote system. Commander uses the <code>SSH_AUTH_SOCK</code> environment variable on Mac OS / Linux systems. The PowerShell OpenSSH implementation is supported on Windows systems.</p>\n<p>To enable integration with ssh-agent ensure that <code>SSH_AUTH_SOCK</code> environment variable is set on Posix compatible systems. For Microsoft Windows, ensure the <code>SSH Agent</code> system service is running. Keeper's <code>connect</code> command uses SSH Agent to temporarily store the private key used in the connection session.  After the session disconnects, the private key is removed.</p>\n<p>To utilize SSH Agent for connecting to a remote system, simply add one additional custom field to the Vault record:</p>\n<table>\n<thead>\n<tr>\n<th>Custom Field Name</th>\n<th>Custom Field Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>connect:xxx:ssh-key:yyy</td>\n<td>${&lt;custom field name with private key&gt;} ${password}</td>\n</tr></tbody></table>\n<p>or</p>\n<table>\n<thead>\n<tr>\n<th>Custom Field Name</th>\n<th>Custom Field Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>connect:xxx:ssh-key:yyy</td>\n<td>{&lt;custom field with private key&gt;} ${password}</td>\n</tr></tbody></table>\n<p>Here, <code>xxx</code> is the friendly name of the connection.  <code>yyy</code> is an optional key name used with the SSH agent.</p>\n<p>In this example, the first parameter references the private key, the second parameter references the passphase used to encrypt the private key.</p>\n<p><code>${password}</code> references the value stored in the record's Password field</p>\n<p>Here's a screenshot of a Keeper Vault record where the private key is stored in a custom field:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/28bd8c32638d071ab6f5a41c9b1c010a37492297/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6e6e6563745f7373685f73637265656e73686f74322e706e67\"></p>\n<p>Here's a screenshot of a Keeper Vault record where the private key is stored in a file attachment:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a5578c1e709473d510613d1408e616b8d027b8b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6e6e6563745f7373685f73637265656e73686f74332e706e67\"></p>\n<p>Connecting to the remote system using an encrypted passphrase is easy. In our example, to connect to the server called \"example2\":</p>\n<pre><code>My Vault&gt; connect example2\nConnecting to example2...\n\nLast login: Sat Sep 28 00:25:34 2019 from 12.23.34.5\ncraig@example2:~$ \ncraig@example2:~$ logout\nConnection to example2 closed.\nMy Vault&gt;                                                                                           \n</code></pre>\n<h4>Postgres connection using environment variables capabilities</h4>\n<p>Commander can set environment variables for the <code>connect</code> application.</p>\n<table>\n<thead>\n<tr>\n<th>Custom Field Name</th>\n<th>Custom Field Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>connect:xxx:env:PGPASSWORD</td>\n<td>${password}</td>\n</tr></tbody></table>\n<p>Here, <code>xxx</code> is the friendly name of the connection.</p>\n<p><code>${password}</code> references the value stored in the record's Password field</p>\n<p>Here's a screenshot of a Keeper Vault record:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8eb81d59cacf5c0d4e93c394d3813a62df54fb9a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6e6e6563745f706f7374677265735f73637265656e73686f742e706e67\"></p>\n<h4>Combining SSH Key Rotation with Connection</h4>\n<p>Utilizing the sshkey rotation plugin, Commander can also rotate the SSH private/public key pair.</p>\n<p>The same vault record can be created that provides connection capability as well as SSH key rotation.  Here's a screenshot of a vault record that is configured for both connection and key rotation:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e180f887b0b96fe552cc944167a11ef1a38a3676/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6e6e6563745f7373685f73637265656e73686f74352e706e67\"></p>\n<p>To rotate the password from the Commander interface, simply use the 'rotate' command:</p>\n<pre><code>My Vault&gt; rotate example2                                                                  \nRotating with plugin sshkey\nUpdate record successful for record_uid=2TlvQqNe7YSF9idGQ\nRotation successful for record_uid=2TlvQqNe7YSF9idGQ\n\nMy Vault&gt;                                                                                           \n</code></pre>\n<p>Note: The 'rotate' command accepts either Record UID or friendly name (specified with the <code>cmdr:plugin:xxx</code> custom field where xxx is the friendly name)</p>\n<p>Below is a summary of the fields required to perform connection and rotation:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Field</th>\n<th>Comments</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Login</td>\n<td>Login</td>\n<td>Set to the username, e.g. <strong>'ec2-user'</strong> in the <strong>'Login'</strong> field.</td>\n</tr>\n<tr>\n<td>Password</td>\n<td>Password</td>\n<td>Set to the passphrase to encrypt the SSH key in the <strong>'Password'</strong> field</td>\n</tr>\n<tr>\n<td>cmdr:plugin:xxx</td>\n<td>Custom</td>\n<td><code>sshkey</code> \"xxx\" is the friendly name which can be referenced in command line 'rotate' and 'connect' calls.</td>\n</tr>\n<tr>\n<td>cmdr:host</td>\n<td>Custom</td>\n<td>(Optional, Multiple) Set to hostname or IP address of target server</td>\n</tr>\n<tr>\n<td>cmdr:rules</td>\n<td>Custom</td>\n<td>(Optional) <a href=\"https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins/password_rules.md\" rel=\"nofollow\">passphrase complexity rules</a></td>\n</tr>\n<tr>\n<td>connect:xxx:ssh-key</td>\n<td>Custom</td>\n<td><code>${cmdr:private_key} ${password}</code> where \"xxx\" is the friendly name</td>\n</tr>\n<tr>\n<td>connect:xxx</td>\n<td>Custom</td>\n<td><code>ssh ${login}@${cmdr:host}</code> for a basic SSH connection but can be customized</td>\n</tr>\n<tr>\n<td>cmdr:ssh_public_key</td>\n<td>Custom</td>\n<td>Public key in SSH format. This key is uploaded to the target system.</td>\n</tr>\n<tr>\n<td>cmdr:rsa_public_key</td>\n<td>Custom</td>\n<td>Public key in RSA format.</td>\n</tr>\n<tr>\n<td>cmdr:private_key</td>\n<td>Custom</td>\n<td>Private key encrypted with the passkey stored in the <strong>'Password'</strong> field.</td>\n</tr></tbody></table>\n<p>Important: Please read the <a href=\"https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins/sshkey\" rel=\"nofollow\">SSH Key Rotation Doc</a> on how to perform the initial setup of SSH keys in the vault record. Once set up the first time, all connection and rotations will be seamless.</p>\n<h4>Remote Desktop (RDP) Launcher Example</h4>\n<p>To connect seamlessly to a remote windows server using the standard Microsoft Remote Desktop application, Keeper executes a command pre-login, login, and post-login via system calls.  In this example, the \"pre-login\" command stores the password temporarily in the Windows credential manager for the current user.  The \"login\" command initiates the connection using an RDP template file and the stored credentials (the RDP template file is optional).  Upon session termination, the \"post login\" command is executed that deletes the password from the credential manager.</p>\n<p>Vault Record Fields:</p>\n<table>\n<thead>\n<tr>\n<th>Custom Field Name</th>\n<th>Custom Field Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>connect:rdp_demo:description</td>\n<td>Remote connection to Demo Server</td>\n</tr>\n<tr>\n<td>connect:rdp_demo:pre</td>\n<td>cmdkey /generic:12.34.56.78 /user:${login} /pass:${password} &gt; NUL</td>\n</tr>\n<tr>\n<td>connect:rdp_demo</td>\n<td>mstsc ${file:Default.rdp}</td>\n</tr>\n<tr>\n<td>connect:rdp_demo:post</td>\n<td>cmdkey /delete:12.34.56.78 &gt; NUL</td>\n</tr>\n<tr>\n<td>File Attachment</td>\n<td>Default.rdp</td>\n</tr></tbody></table>\n<p>Screenshot of Keeper Vault record:\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6201197de5700452af46656bc6dbb85d2b9a7791/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f636f6e6e6563745f7264705f73637265656e73686f742e706e67\"></p>\n<p>Note: The Default.rdp file is saved from Remote Desktop Connection with your desired configuration.</p>\n<h4>Supported parameter substitutions</h4>\n<p>You can customize the commands with parameter substitutions described below:</p>\n<pre><code>${user_email}: Email address of Keeper user \n${login}: Record login field\n${password}: Record password field\n${text:&lt;name&gt;}: Custom per-user variable, prompted for value, not shared \n${mask:&lt;name&gt;}: Custom per-user variable, prompted for value, not shared \n${file:&lt;attachment_name&gt;}: Stored in temp file during use and deleted after connection close,\n${body:&lt;attachment_name&gt;}: Raw content of the attachment file.\n</code></pre>\n<h4>Listing all available connections</h4>\n<p>To get a list of available connections, type:</p>\n<pre><code>My Vault&gt; connect\n</code></pre>\n<h4>Initiating connections</h4>\n<p>To initiate a connection (using the SSH/RDP examples) from Commander simply type:</p>\n<pre><code>My Vault&gt; connect my_server\n</code></pre>\n<p>or</p>\n<pre><code>My Vault&gt; connect rdp_demo\n</code></pre>\n<p>Alternatively, you can execute the connection from the terminal without the interactive shell:</p>\n<pre><code>$ keeper connect my_server\n</code></pre>\n<p>Notes:</p>\n<ul>\n<li>A single vault record can contain any number of connection references, or the connections can be separated one per record.</li>\n<li>If a system command requires user interaction (e.g. if a passphrase is included on an SSH key file), Commander will prompt for input.</li>\n<li>Just like any other Keeper vault record, a connection record can be shared among a team, shared to another Keeper user or remain private.</li>\n</ul>\n<h3>Environmental Variables</h3>\n<p>Custom environmental variables can be created on the command line and through batch script files in order to perform data substitutions.</p>\n<p>A few default variables can be used:</p>\n<pre><code>${last_folder_uid} - This contains the last added Folder UID\n${last_record_uid} - This contains the last added Record UID\n${last_shared_folder_uid} - This contains the last added Shared Folder UID\n</code></pre>\n<p>To add a new environmental variable, use the \"set\" command:</p>\n<pre><code>My Vault&gt; set my_test foo\n</code></pre>\n<p>To use this variable, use ${my_test}</p>\n<p>The below example will add a record and then share the record with a user:</p>\n<pre><code>My Vault&gt; add --login \"testing123\" --pass \"12345\" --url \"https://google.com\" \"Test from Commander\" -f\nMy Vault&gt; share-record -e another_user@company.com -a grant -w ${last_record_uid}\n</code></pre>\n<h3>Targeted Password Rotations &amp; Plugins</h3>\n<p>Keeper Commander can communicate to internal and external systems for the purpose of rotating a password and synchronizing the change to your Keeper Vault.  We accomplish this by associating a Keeper record with a physical system through the use of custom fields.  For example, you might want to rotate your MySQL password, Active Directory password and local Administrator password automatically.  To support a plugin, simply add a set of <strong>custom field</strong> values to the Keeper record. The custom field values tell Commander which plugin to use, and what system to communicate with when rotating the password.  To modify your Keeper record to include custom fields, login to Keeper on the <a href=\"https://keepersecurity.com/vault\" rel=\"nofollow\">Web Vault</a> or <a href=\"https://keepersecurity.com/download.html\" rel=\"nofollow\">Keeper Desktop</a> app.</p>\n<p>Example custom fields for MySQL password rotation:</p>\n<table>\n<thead>\n<tr>\n<th>Custom Field Name</th>\n<th>Custom Field Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>cmdr:plugin</td>\n<td>mysql</td>\n</tr>\n<tr>\n<td>cmdr:host</td>\n<td>192.168.1.55</td>\n</tr>\n<tr>\n<td>cmdr:db</td>\n<td>testing</td>\n</tr></tbody></table>\n<p>When a plugin is specified in a record, Commander will search in the plugins/ folder to load the module based on the name provided (e.g. mysql.py) then it will use the values of the Keeper record to connect, rotate the password and save the resulting data.</p>\n<p>Check out the <a href=\"https://github.com/Keeper-Security/Commander/tree/master/keepercommander/plugins\" rel=\"nofollow\">plugins folder</a> for all of the available plugins.  Keeper's team adds new plugins on an ongoing basis. If you need a particular plugin created, send us an email to <a href=\"mailto:commander@keepersecurity.com\">commander@keepersecurity.com</a>.</p>\n<h3>Locating the Record UID and other Identifiers</h3>\n<p>The Record UID and Shared Folder UID can be found either through the \"get\", \"list\", \"ls -l\" or \"search\" commands, or through the Web Vault user interface.</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3492476360f9dc5152bcf8e2691aa48f94b786f5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f7265636f72645f7569642e706e67\"></p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df18fc49ec217bf4026aacb8fb9e5c0fb05658cb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4b65657065722d53656375726974792f436f6d6d616e6465722f6d61737465722f6b6565706572636f6d6d616e6465722f696d616765732f7368617265645f666f6c6465725f7569642e706e67\"></p>\n<h3>Deep linking to records (Web Vault Hyperlink)</h3>\n<p>The Record UID that is displayed on password record output can be used for deep linking directly into the Keeper Web Vault only for privileged users. This Vault link can be stored and sent over unsecure channels because it only provides a reference to the record within your vault -- it does not provide access to the actual record content.  To access the content, you must still authenticate into the vault and decrypt the data.  The link is in the format <code>https://keepersecurity.com/vault#detail/XXXXXX</code> and you simply replace XXXXXX with the Record UID. Providing this link to another user does NOT initiate sharing.  To share a vault record, you must authenticate to your vault, open the record and click the \"Share\" feature.</p>\n<h3>About Our Security</h3>\n<p>Keeper is a zero-knowledge platform.  This means that the server does not have access to your Keeper Master Password or the crypto keys used to encrypt and decrypt your data.  The cryptography is performed on the <em>client device</em> (e.g. iPhone, Android, Desktop, Commander).</p>\n<p>When you create a Keeper account from our <a href=\"https://keepersecurity.com/vault\" rel=\"nofollow\">web app</a> or <a href=\"https://keepersecurity.com/download\" rel=\"nofollow\">mobile/desktop app</a>, you are asked to create a Master Password and a security question.  The Keeper app creates your crypto keys, RSA keys and encryption parameters (iv, salt, iterations).  Your RSA private key is encrypted with your data key, and your data key is encrypted with your Master Password.  The encrypted version of your data key is stored in Keeper's Cloud Security Vault and provided to you after successful device authentication.</p>\n<p>When you login to Keeper on any device (or on Commander), your Master Password is used to derive a 256-bit PBKDF2 key.  This key is used to decrypt your data key.  The data key is used to decrypt individual record keys, shared folder keys and team keys.  Record keys, shared folder keys and team keys are then used to decrypt each individual record in the vault.</p>\n<p>When storing information to your vault, Keeper stores and synchronizes the encrypted data.</p>\n<p>We strongly recommend that you enable Two-Factor Authentication on your Keeper account via the <a href=\"https://keepersecurity.com/vault\" rel=\"nofollow\">web app</a> settings screen.  This can also be enforced at the Keeper Enterprise level. When logging into Commander with Two-Factor Authentication turned on, you will be asked for a one-time passcode.  After successful authentication, Commander receives a device token that can be used for subsequent requests without another two-factor auth request.</p>\n<p>For more details on Keeper's security architecture, certifications and implementation details, visit the <a href=\"https://keepersecurity.com/security.html\" rel=\"nofollow\">Security Disclosure</a> page of our website. If you have any specific questions related to security, email <a href=\"mailto:security@keepersecurity.com\">security@keepersecurity.com</a>.</p>\n<h3>Vulnerability Disclosure Program</h3>\n<p>Keeper has partnered with Bugcrowd to manage our vulnerability disclosure program. Please submit reports through <a href=\"https://bugcrowd.com/keepersecurity\" rel=\"nofollow\">https://bugcrowd.com/keepersecurity</a> or send an email to <a href=\"mailto:security@keepersecurity.com\">security@keepersecurity.com</a>.</p>\n<h3>About Keeper</h3>\n<p>Keeper is the world's most downloaded password keeper and secure digital vault for protecting and managing your passwords and other secret information.  Millions of people and companies use Keeper to protect their most sensitive and private information.</p>\n<p>Keeper's Features &amp; Benefits</p>\n<ul>\n<li>Manages all your passwords and secret info</li>\n<li>Protects you against hackers</li>\n<li>Encrypts everything in your vault</li>\n<li>High-strength password generator</li>\n<li>Login to websites with one click</li>\n<li>Store private files, photos and videos</li>\n<li>Take private photos inside vault</li>\n<li>Share records with other Keeper users</li>\n<li>Access on all your devices and computers</li>\n<li>Keeper DNA\u2122 multi-factor authentication</li>\n<li>Login with Fingerprint or Touch ID</li>\n<li>Auto logout timer for theft prevention</li>\n<li>Unlimited backups</li>\n<li>Self-destruct protection</li>\n<li>Customizable fields</li>\n<li>Background themes</li>\n<li>Integrated Apple Watch App</li>\n<li>Instant syncing between devices</li>\n<li>AES-256 encryption</li>\n<li>Zero-Knowledge security architecture</li>\n<li>SOC-2 and ISO 27001 Certified</li>\n<li>GDPR Compliant</li>\n</ul>\n<h3>Keeper Website</h3>\n<p><a href=\"https://keepersecurity.com\" rel=\"nofollow\">https://keepersecurity.com</a></p>\n<h3>Pricing</h3>\n<p>Keeper is free for local password management on your device.  Premium subscriptions provides cloud-based capabilites including multi-device sync, shared folders, teams, SSO integration and encrypted file storage. More info about our enterprise pricing plans can be found <a href=\"https://keepersecurity.com/pricing.html?tab=business\" rel=\"nofollow\">here</a>.</p>\n<h3>Mobile Apps</h3>\n<p><a href=\"https://itunes.apple.com/us/app/keeper-password-manager-digital/id287170072?mt=8\" rel=\"nofollow\">iOS - iPhone, iPad, iPod</a></p>\n<p><a href=\"https://play.google.com/store/apps/details?id=com.callpod.android_apps.keeper&amp;hl=en\" rel=\"nofollow\">Android - Google Play</a></p>\n<p><a href=\"http://amzn.com/B00NUK3F6S\" rel=\"nofollow\">Kindle and Amazon App Store</a></p>\n<h3>Cross-Platform Desktop App</h3>\n<p><a href=\"https://www.keepersecurity.com/desktop_electron/packages/KeeperPasswordManager.appinstaller\" rel=\"nofollow\">Windows PC, 64-bit and 32-bit Recommended Installer</a></p>\n<p><a href=\"https://keepersecurity.com/desktop_electron/Win32/KeeperSetup32.zip\" rel=\"nofollow\">Windows PC, 32-bit</a></p>\n<p><a href=\"https://keepersecurity.com/desktop_electron/Win64/KeeperSetup64.zip\" rel=\"nofollow\">Windows PC, 64-bit</a></p>\n<p><a href=\"https://keepersecurity.com/desktop_electron/Win32/KeeperSetup32.msi\" rel=\"nofollow\">Windows PC, 32-bit MSI Installer</a></p>\n<p><a href=\"https://keepersecurity.com/desktop_electron/Darwin/KeeperSetup.dmg\" rel=\"nofollow\">Mac</a></p>\n<p><a href=\"https://keepersecurity.com/download.html\" rel=\"nofollow\">Linux</a></p>\n<h3>Web Vault and Browser Extensions</h3>\n<p><a href=\"https://keepersecurity.com/vault\" rel=\"nofollow\">Web App - Online Vault</a></p>\n<p><a href=\"https://chrome.google.com/webstore/detail/keeper-browser-extension/bfogiafebfohielmmehodmfbbebbbpei\" rel=\"nofollow\">KeeperFill for Chrome</a></p>\n<p><a href=\"https://addons.mozilla.org/en-US/firefox/addon/keeper-password-manager-digita/\" rel=\"nofollow\">KeeperFill for Firefox</a></p>\n<p><a href=\"https://keepersecurity.com/download.html\" rel=\"nofollow\">KeeperFill for Safari</a></p>\n<p><a href=\"https://www.microsoft.com/en-us/store/p/keeper-password-manager-digital-vault/9n0mnnslfz1t\" rel=\"nofollow\">KeeperFill for Edge</a></p>\n<p><a href=\"https://keepersecurity.com/console\" rel=\"nofollow\">Enterprise Admin Console</a></p>\n<h3>Sales &amp; Support</h3>\n<p><a href=\"https://docs.keeper.io/enterprise-guide/\" rel=\"nofollow\">Enterprise Guide</a></p>\n<p><a href=\"https://keepersecurity.com/enterprise-resources.html\" rel=\"nofollow\">White Papers &amp; Data Sheets</a></p>\n<p><a href=\"https://keepersecurity.com/contact.html\" rel=\"nofollow\">Contact Sales or Support</a></p>\n<p>We're here to help.  If you need help integrating Keeper into your environment, contact us at <a href=\"mailto:commander@keepersecurity.com\">commander@keepersecurity.com</a>.</p>\n\n          </div>"}, "last_serial": 6878492, "releases": {"0.2.10": [{"comment_text": "", "digests": {"md5": "5910c70ff8986cac1184159e1c967125", "sha256": "5edfabe8f0a1a551534bbe35646868fa881f63acfb6b2687e4d793f986b1fce3"}, "downloads": -1, "filename": "keepercommander-0.2.10-py3-none-any.whl", "has_sig": true, "md5_digest": "5910c70ff8986cac1184159e1c967125", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28071, "upload_time": "2015-11-20T22:08:08", "upload_time_iso_8601": "2015-11-20T22:08:08.867859Z", "url": "https://files.pythonhosted.org/packages/99/90/f4c9cc379006893918c4eee2bff801eb2a9756568af6bafe82e7fac4b769/keepercommander-0.2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a05aa8156271fe7433b36f67b6c7d760", "sha256": "49991395e19f5dfcfce11633cd0e4d1d05aef27ab1bee63901cc20cb2802a1d0"}, "downloads": -1, "filename": "keepercommander-0.2.10.tar.gz", "has_sig": true, "md5_digest": "a05aa8156271fe7433b36f67b6c7d760", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20175, "upload_time": "2015-11-20T22:08:19", "upload_time_iso_8601": "2015-11-20T22:08:19.695222Z", "url": "https://files.pythonhosted.org/packages/b3/26/936e97f00063782f9e218b795002a83d02d722ad0a2d71e1ecc43794c674/keepercommander-0.2.10.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "1c65a4eeb427459a998476194cd890ba", "sha256": "9bf378801ee8bfac85b218bdbdf4a2403bc811c705c8c50cde2bdd485b831fa2"}, "downloads": -1, "filename": "keepercommander-0.2.5-py3-none-any.whl", "has_sig": true, "md5_digest": "1c65a4eeb427459a998476194cd890ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29160, "upload_time": "2015-11-17T01:39:26", "upload_time_iso_8601": "2015-11-17T01:39:26.409085Z", "url": "https://files.pythonhosted.org/packages/e3/3a/f19e1ea866d1f5604f521efd65cc06d6937d1aaf69d0e13754b3d0e57aa2/keepercommander-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d80b719100f3d2d8bb37dc7ccb738ed", "sha256": "ca306bafa64357738ff1f46f93ed764d37fcae7d9b4de9877d1e739ef2fac538"}, "downloads": -1, "filename": "keepercommander-0.2.5.tar.gz", "has_sig": true, "md5_digest": "7d80b719100f3d2d8bb37dc7ccb738ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19368, "upload_time": "2015-11-17T01:39:58", "upload_time_iso_8601": "2015-11-17T01:39:58.931143Z", "url": "https://files.pythonhosted.org/packages/06/ec/7c33003b7553ce305b0b7f7690bd7665c2752288c9c5484c08686fe18e8b/keepercommander-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "27079754a368067b547e6c365ec788bf", "sha256": "45fc4a05eaae3a409de98d92fd3e2e2ef96f41c9fedf90fd163d9819da430fc7"}, "downloads": -1, "filename": "keepercommander-0.2.6-py3-none-any.whl", "has_sig": true, "md5_digest": "27079754a368067b547e6c365ec788bf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29191, "upload_time": "2015-11-19T23:06:01", "upload_time_iso_8601": "2015-11-19T23:06:01.204690Z", "url": "https://files.pythonhosted.org/packages/5e/c0/2052fd04c2243cca2d2586c3962311885da5ae6f31dc876321a60c3d3ed7/keepercommander-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d80ae2307943434040f671f4a2482c59", "sha256": "8acaa395c3ecc51116fbd96913ac8dbe1daf8ee45c01270449fb5530bdc311ee"}, "downloads": -1, "filename": "keepercommander-0.2.6.tar.gz", "has_sig": true, "md5_digest": "d80ae2307943434040f671f4a2482c59", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19434, "upload_time": "2015-11-19T23:07:22", "upload_time_iso_8601": "2015-11-19T23:07:22.419670Z", "url": "https://files.pythonhosted.org/packages/5d/1f/6e8c21dce2a9afb97d1465aba11eca7732fa839d7bca7a93ea18b53cd389/keepercommander-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "6403177b3eac83b365e3d001a3b37de7", "sha256": "3fd35fe150291fad88c841c376b0569695221585ddfafa2f799143e93e8fea09"}, "downloads": -1, "filename": "keepercommander-0.2.7-py3-none-any.whl", "has_sig": true, "md5_digest": "6403177b3eac83b365e3d001a3b37de7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29751, "upload_time": "2015-11-20T00:25:32", "upload_time_iso_8601": "2015-11-20T00:25:32.588788Z", "url": "https://files.pythonhosted.org/packages/5e/65/c1cfaab7e4d2e0dae791ce9a7526a4028c3ad3462fae6a1db676ce76c13a/keepercommander-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de476d4fd4a12dc1a75822d79c880c12", "sha256": "0df5931210deadd41c69fd1be8daf384ff109e05ee98855d179c6950be64632b"}, "downloads": -1, "filename": "keepercommander-0.2.7.tar.gz", "has_sig": true, "md5_digest": "de476d4fd4a12dc1a75822d79c880c12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19776, "upload_time": "2015-11-20T00:26:47", "upload_time_iso_8601": "2015-11-20T00:26:47.763589Z", "url": "https://files.pythonhosted.org/packages/86/55/013ca5f98b80ff51071f16a392ee26b12c5c6e5f46d246b103fd8f381c9c/keepercommander-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "ac5eb1e1ab45503b655f45fea8fbb18b", "sha256": "d2f6a7cbd6b8288f1691529f5c5748e56ced129d292b9e8609e8910d5c63c3b3"}, "downloads": -1, "filename": "keepercommander-0.2.8-py3-none-any.whl", "has_sig": true, "md5_digest": "ac5eb1e1ab45503b655f45fea8fbb18b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 29751, "upload_time": "2015-11-20T00:41:33", "upload_time_iso_8601": "2015-11-20T00:41:33.797901Z", "url": "https://files.pythonhosted.org/packages/18/19/f57f97d71191f9e370a729b7805bd369a931fb0c9309805b8fb47c3d1767/keepercommander-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c153a1c3557d054c1e2014249d3aa0c6", "sha256": "94ce626dc2d6980ae0ee252f501bea1073be51b195b34c63592c7a35ff79cc35"}, "downloads": -1, "filename": "keepercommander-0.2.8.tar.gz", "has_sig": true, "md5_digest": "c153a1c3557d054c1e2014249d3aa0c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19772, "upload_time": "2015-11-20T00:41:42", "upload_time_iso_8601": "2015-11-20T00:41:42.507811Z", "url": "https://files.pythonhosted.org/packages/c5/0e/9cca62123ac41c0ed8e4ebf3613465a02bda773a64b9c1cec3bfa18d2fd0/keepercommander-0.2.8.tar.gz", "yanked": false}], "0.2.9": [], "0.3.0": [{"comment_text": "", "digests": {"md5": "a5ec51f0c1003885b203ec35405102f2", "sha256": "b9507ca73ee38e528f8b1de079282e8f092153ae5f208c1d5b492c2092ed5704"}, "downloads": -1, "filename": "keepercommander-0.3.0-py3-none-any.whl", "has_sig": true, "md5_digest": "a5ec51f0c1003885b203ec35405102f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 28069, "upload_time": "2015-11-20T22:42:39", "upload_time_iso_8601": "2015-11-20T22:42:39.014193Z", "url": "https://files.pythonhosted.org/packages/fa/95/0012d2be78265495f2018eceba60be274d70a4225b1ff716122f2c3a995e/keepercommander-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c31a255009026bbceb2eff5208c673e", "sha256": "328cd916e7ad7d265190602eb18abe1f75f024256eb9f5674d020a6b43374c14"}, "downloads": -1, "filename": "keepercommander-0.3.0.tar.gz", "has_sig": true, "md5_digest": "6c31a255009026bbceb2eff5208c673e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18989, "upload_time": "2015-11-20T22:42:47", "upload_time_iso_8601": "2015-11-20T22:42:47.889669Z", "url": "https://files.pythonhosted.org/packages/bd/59/28257c327551c4a6eb1e1101f89f5311e1b770a6819e5ce25a3ac5f6be26/keepercommander-0.3.0.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "a18a1081df818eb0056b052685465436", "sha256": "e13f2ef9658cbdd7fc49b31caefeb509d9c255d22b327398b56a047958244c0c"}, "downloads": -1, "filename": "keepercommander-0.3.2-py3-none-any.whl", "has_sig": true, "md5_digest": "a18a1081df818eb0056b052685465436", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30513, "upload_time": "2015-12-03T18:02:56", "upload_time_iso_8601": "2015-12-03T18:02:56.223610Z", "url": "https://files.pythonhosted.org/packages/15/63/6d6f012e65dc7ece62a553e6c15ea10ea19b7a0f77a1ed8bd7bf32335109/keepercommander-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8f67eb40333cf89fd8594d3562b3ed8", "sha256": "8d09264f37a969f7dea4819a411842c2d9cde1e690eec04b23cb2282414959ad"}, "downloads": -1, "filename": "keepercommander-0.3.2.tar.gz", "has_sig": true, "md5_digest": "f8f67eb40333cf89fd8594d3562b3ed8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20749, "upload_time": "2015-12-03T18:03:07", "upload_time_iso_8601": "2015-12-03T18:03:07.515511Z", "url": "https://files.pythonhosted.org/packages/6b/4f/60fc6c04cad7aeedccddaba593fd55a67b061c1be5cbcb79bdc812c2debd/keepercommander-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "68705be51c6a10bd64f8ca0648585b0a", "sha256": "565f8f7373b365128cd5615e005878bde77e119bc9ae5586f788800d434d25ee"}, "downloads": -1, "filename": "keepercommander-0.3.3-py3-none-any.whl", "has_sig": true, "md5_digest": "68705be51c6a10bd64f8ca0648585b0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39404, "upload_time": "2015-12-04T22:34:03", "upload_time_iso_8601": "2015-12-04T22:34:03.075900Z", "url": "https://files.pythonhosted.org/packages/e1/68/ed62a6047a5166062dad64fd577179bb15917a8606919374d17b5da19d22/keepercommander-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c5a2d103e4293f0d568b9d711de5852", "sha256": "85fb5abab339cc41198b3e822caeb67e2d392ced0b7757340195a9ef7c8e04f2"}, "downloads": -1, "filename": "keepercommander-0.3.3.tar.gz", "has_sig": true, "md5_digest": "8c5a2d103e4293f0d568b9d711de5852", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23596, "upload_time": "2015-12-04T22:34:15", "upload_time_iso_8601": "2015-12-04T22:34:15.534640Z", "url": "https://files.pythonhosted.org/packages/66/2e/c20c3fcfd7beddea7f2d2cb373e3624f301246b7f843a2290250800f7a98/keepercommander-0.3.3.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "2a6b5530c0a2e1887433902ec56c7473", "sha256": "6422c23857c4f7a02ea30c3b6cd6bd52dcf04ff3c28e9203842e9e43e6f47dba"}, "downloads": -1, "filename": "keepercommander-0.3.6-py3-none-any.whl", "has_sig": true, "md5_digest": "2a6b5530c0a2e1887433902ec56c7473", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39787, "upload_time": "2015-12-08T22:50:38", "upload_time_iso_8601": "2015-12-08T22:50:38.875659Z", "url": "https://files.pythonhosted.org/packages/ba/2c/74be508244f4231337de82e96058024984431e613b1ddf626406d58ee4db/keepercommander-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "86b6fa099a2427cb4741d8f1a5fb6955", "sha256": "5b733c3f3c067a3119c1722684be1503d9fd885907b049242901bf8fcd96713d"}, "downloads": -1, "filename": "keepercommander-0.3.6.tar.gz", "has_sig": true, "md5_digest": "86b6fa099a2427cb4741d8f1a5fb6955", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23820, "upload_time": "2015-12-08T22:50:53", "upload_time_iso_8601": "2015-12-08T22:50:53.304145Z", "url": "https://files.pythonhosted.org/packages/9a/a3/9e60f5c87b856b190a8014ac234078f87fc7598b668638d81d551fda3ca8/keepercommander-0.3.6.tar.gz", "yanked": false}], "0.3.7": [{"comment_text": "", "digests": {"md5": "b6a59567bde54f0bc67879c4f1d4eed1", "sha256": "29bcbbb42bd5ccd51eec536ed4f6809c74fac324eafb051643c4234cce904099"}, "downloads": -1, "filename": "keepercommander-0.3.7-py3-none-any.whl", "has_sig": true, "md5_digest": "b6a59567bde54f0bc67879c4f1d4eed1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40722, "upload_time": "2015-12-30T06:04:56", "upload_time_iso_8601": "2015-12-30T06:04:56.990541Z", "url": "https://files.pythonhosted.org/packages/6b/ce/179298b70176836959b8307eb5e6c63b8406c90e13a2925acd38defec0a0/keepercommander-0.3.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3654b9a5366ec97b0ae05354fa0eedf6", "sha256": "97de4035bd02d0b84d7a968e1d4b3ed457d05c49a7ced571cb0f7df6aaa66dc5"}, "downloads": -1, "filename": "keepercommander-0.3.7.tar.gz", "has_sig": true, "md5_digest": "3654b9a5366ec97b0ae05354fa0eedf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24464, "upload_time": "2015-12-30T06:05:08", "upload_time_iso_8601": "2015-12-30T06:05:08.657646Z", "url": "https://files.pythonhosted.org/packages/e9/63/29ec99503542dd08ac4af6d5e24123c3a2b290ca0a5d0f9b457d6c3a0a3d/keepercommander-0.3.7.tar.gz", "yanked": false}], "0.3.8": [{"comment_text": "", "digests": {"md5": "fc79873827c29dac0acbf1d2f027e92c", "sha256": "c49a0fcb43d26db1c9bbf1ef0295d208a7adb82bf701a15d0cb4e0b450fb1612"}, "downloads": -1, "filename": "keepercommander-0.3.8-py3-none-any.whl", "has_sig": true, "md5_digest": "fc79873827c29dac0acbf1d2f027e92c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48192, "upload_time": "2016-04-28T15:51:20", "upload_time_iso_8601": "2016-04-28T15:51:20.875694Z", "url": "https://files.pythonhosted.org/packages/0f/0e/2c8a3b442957fcaba71f15dc6fd08c301e842324e613ab52fee1b504f296/keepercommander-0.3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6566a636fbd6d8e6d1e9975ce376aff", "sha256": "59c7c86373719b55fa4dd12459ee9176766ce07fc491f92794ce911555641988"}, "downloads": -1, "filename": "keepercommander-0.3.8.tar.gz", "has_sig": true, "md5_digest": "f6566a636fbd6d8e6d1e9975ce376aff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28537, "upload_time": "2016-04-28T15:51:40", "upload_time_iso_8601": "2016-04-28T15:51:40.044555Z", "url": "https://files.pythonhosted.org/packages/af/1e/44caf81b914bc36e8e08c3f16af1140e16329b632d47570882231139fa45/keepercommander-0.3.8.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "641116d5280209c0939968eae4bc4e6b", "sha256": "35964359320c9bac77984e3f1c93714228020bce7550cfca603195a7d2dbe17d"}, "downloads": -1, "filename": "keepercommander-0.3.9-py3-none-any.whl", "has_sig": true, "md5_digest": "641116d5280209c0939968eae4bc4e6b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48199, "upload_time": "2016-04-28T17:17:48", "upload_time_iso_8601": "2016-04-28T17:17:48.977607Z", "url": "https://files.pythonhosted.org/packages/6c/c3/44fa63ae5a5405dc32f69ec8659d140d54c7107072a93f00af305f045944/keepercommander-0.3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "861b57e9ab4a03b534f4b31c44d552c6", "sha256": "0e8798862afc0a2a4d22d5b0f80d2c2ab9121f8bbb438c97fabcfd5d1d907d9b"}, "downloads": -1, "filename": "keepercommander-0.3.9.tar.gz", "has_sig": true, "md5_digest": "861b57e9ab4a03b534f4b31c44d552c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28558, "upload_time": "2016-04-28T17:18:00", "upload_time_iso_8601": "2016-04-28T17:18:00.850255Z", "url": "https://files.pythonhosted.org/packages/d1/57/f71dca2a507757e3422c22504d966874ccdd4a449242dc29b43924ae1cb4/keepercommander-0.3.9.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "12cc0c5c0f720693083e38e9f3e07ade", "sha256": "c6cd185f0d6d77e2c1836db9aed011a327059e8ba87ca0b6bcf0f18305c23acd"}, "downloads": -1, "filename": "keepercommander-0.4.0-py3-none-any.whl", "has_sig": true, "md5_digest": "12cc0c5c0f720693083e38e9f3e07ade", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48212, "upload_time": "2016-04-28T17:46:20", "upload_time_iso_8601": "2016-04-28T17:46:20.721416Z", "url": "https://files.pythonhosted.org/packages/07/87/e400dc0c8745c5921b8af197482e2d452cd28864a5057bdbee82e7ea4e97/keepercommander-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "59ead5fd940b8d8cbefeb6792ff1e3d8", "sha256": "6675760498a03fb9a9711b21a4641de5400bfa24e918f8f1811a2a84af728c28"}, "downloads": -1, "filename": "keepercommander-0.4.0.tar.gz", "has_sig": true, "md5_digest": "59ead5fd940b8d8cbefeb6792ff1e3d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28556, "upload_time": "2016-04-28T17:46:47", "upload_time_iso_8601": "2016-04-28T17:46:47.718571Z", "url": "https://files.pythonhosted.org/packages/76/3b/40145022dd940cec4f2f92a0aa5105d64dd4646c8791b01bac8cba0c88a9/keepercommander-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "0fd2ae95a0d0e3bf7e50c080d4d4c941", "sha256": "aca68f4e5519f4d7e573c6560b7be86550a01df5ade5cd4758808746ec4d5357"}, "downloads": -1, "filename": "keepercommander-0.5.0-py3-none-any.whl", "has_sig": true, "md5_digest": "0fd2ae95a0d0e3bf7e50c080d4d4c941", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 48398, "upload_time": "2016-08-24T17:19:52", "upload_time_iso_8601": "2016-08-24T17:19:52.374768Z", "url": "https://files.pythonhosted.org/packages/79/cb/ca1b50e8cfa6e28da8584ef545e2b9d92ef188a40a3a96c958276ed1333e/keepercommander-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8094bac73844ca4c65ff59f135396107", "sha256": "094c7592d7cfacd71fdf7ab91cf84cd3d5b47c72fc830e5ff6a8b0853a1d7496"}, "downloads": -1, "filename": "keepercommander-0.5.0.tar.gz", "has_sig": true, "md5_digest": "8094bac73844ca4c65ff59f135396107", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28780, "upload_time": "2016-08-24T17:19:58", "upload_time_iso_8601": "2016-08-24T17:19:58.575455Z", "url": "https://files.pythonhosted.org/packages/34/d1/d06ceeb7308d3419b118fa99b323e57fbc16f53cff6aac907f2f5ca6bb29/keepercommander-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "dab37afe5c2dfaa289fa766bf94b54e7", "sha256": "3b2bd91f1d53c69c83b4a2404435ac5961b272a2e1d87d07988618c915776ec3"}, "downloads": -1, "filename": "keepercommander-0.6.0-py3-none-any.whl", "has_sig": true, "md5_digest": "dab37afe5c2dfaa289fa766bf94b54e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49647, "upload_time": "2016-09-03T00:17:08", "upload_time_iso_8601": "2016-09-03T00:17:08.115412Z", "url": "https://files.pythonhosted.org/packages/d2/da/21b0880f6ce60fb39ebfb2f4fd940bdb11c16aae06a25c171c26079abbde/keepercommander-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27c78498d0a942f084c744f54f5ed815", "sha256": "e18d526c78d581bcb65d8cf001d114cfef24f23e5536ca2959aa4b01e5135df8"}, "downloads": -1, "filename": "keepercommander-0.6.0.tar.gz", "has_sig": true, "md5_digest": "27c78498d0a942f084c744f54f5ed815", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30051, "upload_time": "2016-09-03T00:17:20", "upload_time_iso_8601": "2016-09-03T00:17:20.830046Z", "url": "https://files.pythonhosted.org/packages/7c/cb/70cf4d3d0dde7b1372381ad5726adf1a8f192fce2ad475a2d7ac1b6031b1/keepercommander-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "5e39922ede26cb67a4f4d74f2c8c763d", "sha256": "2acc930974e7dbe8b0189dbf6de6a43980b049f6bc0564835688db2452c13ced"}, "downloads": -1, "filename": "keepercommander-0.6.1-py3-none-any.whl", "has_sig": true, "md5_digest": "5e39922ede26cb67a4f4d74f2c8c763d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49693, "upload_time": "2016-09-06T19:16:27", "upload_time_iso_8601": "2016-09-06T19:16:27.058361Z", "url": "https://files.pythonhosted.org/packages/5e/b4/675748918394cc3ee3ff1eee3a8be59e73a2b9ed8ea832dab0c81564a63b/keepercommander-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e00543696a0ff002d889391173224d", "sha256": "6a20694bf42ccfdbc9e4bfbb9bcbadcaa6300e5aff0b7d884aac17847b6b26be"}, "downloads": -1, "filename": "keepercommander-0.6.1.tar.gz", "has_sig": true, "md5_digest": "03e00543696a0ff002d889391173224d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30111, "upload_time": "2016-09-06T19:16:33", "upload_time_iso_8601": "2016-09-06T19:16:33.231784Z", "url": "https://files.pythonhosted.org/packages/dc/bc/8ef36d8a0aa113b7211e33218500de39fa82d3691cae9547ef44fb095431/keepercommander-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "eec4a43ea1fa6677b80cd3490ab957dd", "sha256": "b94a3d223c9ed701a9638ea05facbfd8b5978ae29e26da6ec68b103de7e6928b"}, "downloads": -1, "filename": "keepercommander-0.6.2-py3-none-any.whl", "has_sig": true, "md5_digest": "eec4a43ea1fa6677b80cd3490ab957dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49924, "upload_time": "2016-11-15T17:00:22", "upload_time_iso_8601": "2016-11-15T17:00:22.103402Z", "url": "https://files.pythonhosted.org/packages/fc/e0/acbeec64f542bf2649bb07f5b032ec03c446e4c8f94383a6a63437d04aa0/keepercommander-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "55f425298aecb4b4091e5a775ef3e41d", "sha256": "2f4261c622c43da74c985d94cb597523844e2390ad35c34f549fbf3e03a5565b"}, "downloads": -1, "filename": "keepercommander-0.6.2.tar.gz", "has_sig": true, "md5_digest": "55f425298aecb4b4091e5a775ef3e41d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30273, "upload_time": "2016-11-15T17:00:29", "upload_time_iso_8601": "2016-11-15T17:00:29.024852Z", "url": "https://files.pythonhosted.org/packages/a6/7d/aa4e3185b58e508220755a3ae578576e17c38f118a23160dd3fe5fbb3f16/keepercommander-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "027b508ea75147659716c629a836fe28", "sha256": "b6fad98d44cc0e8781d6e87997d405fc628d19688d68927feff4c59e1d8c0465"}, "downloads": -1, "filename": "keepercommander-0.6.3-py3-none-any.whl", "has_sig": true, "md5_digest": "027b508ea75147659716c629a836fe28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 50150, "upload_time": "2016-11-16T21:26:42", "upload_time_iso_8601": "2016-11-16T21:26:42.992394Z", "url": "https://files.pythonhosted.org/packages/e8/57/bef11cd5ad14db7ee1cf2318456ec431e9c7b3e55f5db2b91c52aaef7462/keepercommander-0.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d6a55550174ed4a74f4734a94399de7", "sha256": "2a5bbfaa00d4240b50fbbf34a0ed54cec7cdb2585937846145fa42fb261c5804"}, "downloads": -1, "filename": "keepercommander-0.6.3.tar.gz", "has_sig": true, "md5_digest": "4d6a55550174ed4a74f4734a94399de7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30420, "upload_time": "2016-11-16T21:26:49", "upload_time_iso_8601": "2016-11-16T21:26:49.474785Z", "url": "https://files.pythonhosted.org/packages/5f/c7/5d1c48ea7c8df7e3551805dc7e185fe3f1eec41bf6d7c641905179439665/keepercommander-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "2b337e4a3be49a47b8d0362701fefcd7", "sha256": "ba7935e555dc4a890f63b8a8b9fd137ae3f6b11cfc8d3d21cd5d4b00e6e1013e"}, "downloads": -1, "filename": "keepercommander-0.6.4-py3-none-any.whl", "has_sig": true, "md5_digest": "2b337e4a3be49a47b8d0362701fefcd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35203, "upload_time": "2017-02-24T17:54:28", "upload_time_iso_8601": "2017-02-24T17:54:28.229896Z", "url": "https://files.pythonhosted.org/packages/04/99/1c93ad4c7b96c5acf7b1d35361dafe0cf101062a91bbaa56fd662d8b7b40/keepercommander-0.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1c1ee68c7b0b75919c745f893d91a7c", "sha256": "4ccd5decd43d3f335ec01522e8983d748cee1349ce51e98194e5361eee59e2c1"}, "downloads": -1, "filename": "keepercommander-0.6.4.tar.gz", "has_sig": true, "md5_digest": "f1c1ee68c7b0b75919c745f893d91a7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37176, "upload_time": "2017-02-24T17:54:30", "upload_time_iso_8601": "2017-02-24T17:54:30.879215Z", "url": "https://files.pythonhosted.org/packages/96/89/12bce890b347dfe02a3377cdef89f64cd8ec04ad2a9cf2b247d3397bf890/keepercommander-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "58c8e555bf045ae455cd9914565247e9", "sha256": "47e16521ad0ecb1bd2dd439d74c4c6a66218143ba5a8d6c1420544ee030edc4c"}, "downloads": -1, "filename": "keepercommander-0.6.5-py3-none-any.whl", "has_sig": true, "md5_digest": "58c8e555bf045ae455cd9914565247e9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51533, "upload_time": "2017-04-24T21:10:21", "upload_time_iso_8601": "2017-04-24T21:10:21.751865Z", "url": "https://files.pythonhosted.org/packages/c8/38/efa4b73876b214be71726d52fa1f47ce9a7ec1a442e0b0281d98cd26e82c/keepercommander-0.6.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9bab3286592fd9c0e5e777cbc89effb8", "sha256": "ef4982043363d3e9db8bb8843bb244993f5c3981b3da495f24d5d2e39b0c38f4"}, "downloads": -1, "filename": "keepercommander-0.6.5.tar.gz", "has_sig": true, "md5_digest": "9bab3286592fd9c0e5e777cbc89effb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31245, "upload_time": "2017-04-24T21:10:23", "upload_time_iso_8601": "2017-04-24T21:10:23.544271Z", "url": "https://files.pythonhosted.org/packages/3b/39/c9cf9f2f9b2ad12061cafeacba2ada2af91f0f75996e892fa575a02ce8ae/keepercommander-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "9212ffa2e7a4ec4a062e3c6cc130274d", "sha256": "fd96ef00d570f24025145c40af9f7c914090ceae0a40520c1f8df97cb8921c88"}, "downloads": -1, "filename": "keepercommander-0.6.6-py3-none-any.whl", "has_sig": true, "md5_digest": "9212ffa2e7a4ec4a062e3c6cc130274d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 54281, "upload_time": "2017-09-17T22:25:27", "upload_time_iso_8601": "2017-09-17T22:25:27.634401Z", "url": "https://files.pythonhosted.org/packages/4f/e1/df9324804f638d5a647e5b4e594676927166e39e2340546d7a1af0809bf5/keepercommander-0.6.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a277e65c02a13c96509642b1ee898be", "sha256": "680aa36e24631a07d3d2c34a93257f0c2c93ca96350a90e2d74eccfd3dd3ac6e"}, "downloads": -1, "filename": "keepercommander-0.6.6.tar.gz", "has_sig": true, "md5_digest": "0a277e65c02a13c96509642b1ee898be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41053, "upload_time": "2017-09-17T22:25:29", "upload_time_iso_8601": "2017-09-17T22:25:29.589569Z", "url": "https://files.pythonhosted.org/packages/1b/ee/44d1e2209e70df5183d3f07f6bac7d7fdc70b0a55fb4be3ea45fb17dce7d/keepercommander-0.6.6.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "1f6b1c65a92f8538f78f5d8a72b07162", "sha256": "0955373d076f3fe806a4c7079ba02ffe89c039502c7cdbe952327a043f665a65"}, "downloads": -1, "filename": "keepercommander-0.7.1-py3-none-any.whl", "has_sig": true, "md5_digest": "1f6b1c65a92f8538f78f5d8a72b07162", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58659, "upload_time": "2018-02-01T14:56:27", "upload_time_iso_8601": "2018-02-01T14:56:27.503613Z", "url": "https://files.pythonhosted.org/packages/03/19/0558b0c964430d1599e5cfed2d44685368ebdf0af4ecb766e6d65f2c3d60/keepercommander-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "320f26a1d8ced9d48cf9429f1c74a246", "sha256": "3f8e68d881b71d941781c9b4677b85092c29a6ac4524449f18fce56f0ce5d046"}, "downloads": -1, "filename": "keepercommander-0.7.1.tar.gz", "has_sig": true, "md5_digest": "320f26a1d8ced9d48cf9429f1c74a246", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45227, "upload_time": "2018-02-01T14:56:30", "upload_time_iso_8601": "2018-02-01T14:56:30.939456Z", "url": "https://files.pythonhosted.org/packages/9d/f7/e96b99045f1ccf11c21693ed65c10d221f77fc54ae72b074abdb6f66c349/keepercommander-0.7.1.tar.gz", "yanked": false}], "0.7.10": [{"comment_text": "", "digests": {"md5": "39dce59bb14d010b02879b60c3cbb524", "sha256": "caf868caa5a7f8b8d0e4a7f39c10d19e29491866693a61d5e1a66e826485e4ab"}, "downloads": -1, "filename": "keepercommander-0.7.10-py3-none-any.whl", "has_sig": true, "md5_digest": "39dce59bb14d010b02879b60c3cbb524", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60073, "upload_time": "2018-05-17T18:49:50", "upload_time_iso_8601": "2018-05-17T18:49:50.436593Z", "url": "https://files.pythonhosted.org/packages/b9/20/9d2eb3d47ec030d515326e6152bee04824231a62e4a785101f1fc19129a8/keepercommander-0.7.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71513fa3ed95487cd37de526cfbb3253", "sha256": "17215ce412f6e1ca51e9b7a36fa439b3824d01239d4d46c534c4e8d428b35281"}, "downloads": -1, "filename": "keepercommander-0.7.10.tar.gz", "has_sig": true, "md5_digest": "71513fa3ed95487cd37de526cfbb3253", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45925, "upload_time": "2018-05-17T18:49:51", "upload_time_iso_8601": "2018-05-17T18:49:51.993056Z", "url": "https://files.pythonhosted.org/packages/da/16/65dbfcfc72da234cedddde4916f0fc7228e523b4e2aa4fb405df88f05540/keepercommander-0.7.10.tar.gz", "yanked": false}], "0.7.11": [{"comment_text": "", "digests": {"md5": "4a3b0f4bd0ae60d094ba21b500ab24a1", "sha256": "e480bce5900a5df7baf43df37f2092be3cba6f9aa925cdcda25d737a9a8b04ab"}, "downloads": -1, "filename": "keepercommander-0.7.11-py3-none-any.whl", "has_sig": true, "md5_digest": "4a3b0f4bd0ae60d094ba21b500ab24a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60491, "upload_time": "2018-05-31T11:46:05", "upload_time_iso_8601": "2018-05-31T11:46:05.881194Z", "url": "https://files.pythonhosted.org/packages/72/12/64b14e83749b9fe061ff23af6a4bb8548b7e9827e1db2baeb90d69b7d425/keepercommander-0.7.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d39bd40ba080b6a41c742c2562ad7034", "sha256": "83b95038a4af3f53849d5922c8be98cd60422fb47a19741d70bcc4ef4410acdb"}, "downloads": -1, "filename": "keepercommander-0.7.11.tar.gz", "has_sig": true, "md5_digest": "d39bd40ba080b6a41c742c2562ad7034", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46311, "upload_time": "2018-05-31T11:46:08", "upload_time_iso_8601": "2018-05-31T11:46:08.360116Z", "url": "https://files.pythonhosted.org/packages/8b/9e/49b793a63e7302456789c518af844287292c48d9731519237489244913b7/keepercommander-0.7.11.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "dcbe9c66a94dec79ef7e7bb9db6ddbc8", "sha256": "3c8ca64b2ce358563434988fc0ae296b25967d7616bae9de5ea0be5d44c743bc"}, "downloads": -1, "filename": "keepercommander-0.7.2-py3-none-any.whl", "has_sig": true, "md5_digest": "dcbe9c66a94dec79ef7e7bb9db6ddbc8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59601, "upload_time": "2018-02-08T00:14:39", "upload_time_iso_8601": "2018-02-08T00:14:39.833454Z", "url": "https://files.pythonhosted.org/packages/e7/87/9b45b2673dab0e2e99fc9a317409801730c27c82c31d76e7fa3f0f28435f/keepercommander-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19b4790b4787e87e54bbc506ae8e391a", "sha256": "d62cb7b27b68d7342877dcf599c82f66859e10972f7418daba7646de014a1f05"}, "downloads": -1, "filename": "keepercommander-0.7.2.tar.gz", "has_sig": true, "md5_digest": "19b4790b4787e87e54bbc506ae8e391a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45429, "upload_time": "2018-02-08T00:14:41", "upload_time_iso_8601": "2018-02-08T00:14:41.659569Z", "url": "https://files.pythonhosted.org/packages/7b/3f/0236d5746eb1a2396678f744dafaf175bd65b123da1ddc3c8bf7d590efff/keepercommander-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "6d7399cfb10d71b7c752e67b76300728", "sha256": "181a3b0108db47706ebe956afd017b241d0a0bd697f16ffdb3db90ad3ad85158"}, "downloads": -1, "filename": "keepercommander-0.7.3-py3-none-any.whl", "has_sig": true, "md5_digest": "6d7399cfb10d71b7c752e67b76300728", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60026, "upload_time": "2018-02-09T04:33:16", "upload_time_iso_8601": "2018-02-09T04:33:16.996474Z", "url": "https://files.pythonhosted.org/packages/d7/d0/3a73cfa9e78ed260ec77aff2aa74bd447ed33264126c7bdf50e060c5edde/keepercommander-0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "915266afe39e05cbf131cba512a6f69c", "sha256": "bf4fb1f2d98caf64e6f6310ed0478da3f98e7d1eb8ae7a7cb2cd7abd505b16e9"}, "downloads": -1, "filename": "keepercommander-0.7.3.tar.gz", "has_sig": true, "md5_digest": "915266afe39e05cbf131cba512a6f69c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45894, "upload_time": "2018-02-09T04:33:19", "upload_time_iso_8601": "2018-02-09T04:33:19.018091Z", "url": "https://files.pythonhosted.org/packages/6c/2c/d729df75f9be75bf18fbfa407d119f3ddb1173e5bd377b9922b0bcdc3200/keepercommander-0.7.3.tar.gz", "yanked": false}], "0.7.7": [{"comment_text": "", "digests": {"md5": "4aadd086a3f9794fe3bbe8136d5d8415", "sha256": "1ec8398013be2b687d77c69d0ff7ff3937f87152a31424b725af0a3661056446"}, "downloads": -1, "filename": "keepercommander-0.7.7-py3-none-any.whl", "has_sig": true, "md5_digest": "4aadd086a3f9794fe3bbe8136d5d8415", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59812, "upload_time": "2018-02-13T00:49:04", "upload_time_iso_8601": "2018-02-13T00:49:04.688174Z", "url": "https://files.pythonhosted.org/packages/b7/1a/72fa0392d8f5cf3ea292ad7a5f876121f16c5e158375568cb8389d109ab0/keepercommander-0.7.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aeef879d121d5ab462e459a2caed22d", "sha256": "8814ed50cb399f860c10ca97f86810caf37a8ac2d9366842820f4b7e32f1e4bf"}, "downloads": -1, "filename": "keepercommander-0.7.7.tar.gz", "has_sig": true, "md5_digest": "3aeef879d121d5ab462e459a2caed22d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45658, "upload_time": "2018-02-13T00:49:06", "upload_time_iso_8601": "2018-02-13T00:49:06.495589Z", "url": "https://files.pythonhosted.org/packages/9a/22/72cee01108929ff6249cfb1a047c7366ff6b3c1c2060819e59d64d4376b2/keepercommander-0.7.7.tar.gz", "yanked": false}], "0.7.8": [{"comment_text": "", "digests": {"md5": "74fe0f79210aee8232ad6737c55c49a6", "sha256": "0452886dd3ddb4088f3e27f262aeb118b26982cc7a026c770fd3e7abc714b0b5"}, "downloads": -1, "filename": "keepercommander-0.7.8-py3-none-any.whl", "has_sig": true, "md5_digest": "74fe0f79210aee8232ad6737c55c49a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 59831, "upload_time": "2018-02-21T06:04:04", "upload_time_iso_8601": "2018-02-21T06:04:04.161874Z", "url": "https://files.pythonhosted.org/packages/4c/84/fa6577897d1b314c595a394253ca340547a681b141b104a5e7e3ab165ed9/keepercommander-0.7.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc71f6037da5eec93ba002934a07161f", "sha256": "bc6b26f4bb6bb488367e025e9104852bdd8bf78725c04ffa8c9e19f38cc7fd1a"}, "downloads": -1, "filename": "keepercommander-0.7.8.tar.gz", "has_sig": true, "md5_digest": "fc71f6037da5eec93ba002934a07161f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45690, "upload_time": "2018-02-21T06:04:06", "upload_time_iso_8601": "2018-02-21T06:04:06.619542Z", "url": "https://files.pythonhosted.org/packages/c6/19/9d6c6673b0e989b19dc67c2881267307c86dfccb9b42e2e6f06756be3817/keepercommander-0.7.8.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "473abdb3bc47dfcf38d50fe9504482e5", "sha256": "b999edcadbc95c6318cbd02139fb61d7ba0b00d40a1ca8c93529beb1ca410e39"}, "downloads": -1, "filename": "keepercommander-0.7.9-py3-none-any.whl", "has_sig": true, "md5_digest": "473abdb3bc47dfcf38d50fe9504482e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 60035, "upload_time": "2018-03-30T16:33:45", "upload_time_iso_8601": "2018-03-30T16:33:45.346326Z", "url": "https://files.pythonhosted.org/packages/05/e0/e73cf990099c4bad3cf7a9e4120853b789880de12f55cd7c417cc41644e5/keepercommander-0.7.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a379dba990688fa8edcd2cc8fe9a4baa", "sha256": "af4770b342d3d1edd2ef2b697d8e45feaa2248e86c8d06ca0bcf9ed07a85a8af"}, "downloads": -1, "filename": "keepercommander-0.7.9.tar.gz", "has_sig": true, "md5_digest": "a379dba990688fa8edcd2cc8fe9a4baa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45918, "upload_time": "2018-03-30T16:33:47", "upload_time_iso_8601": "2018-03-30T16:33:47.161407Z", "url": "https://files.pythonhosted.org/packages/0c/3c/f12b088f15a7b26ed3869fb7f76d9dd47d9eddc651cee0eb9f785215dab3/keepercommander-0.7.9.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "cd5b7d0520f2dc7c3827e01d57ce684b", "sha256": "a0cdbb7dde49fe101e599cd76fcd8544521437dc02472bb104e5e510dd7eb12e"}, "downloads": -1, "filename": "keepercommander-0.8-py3-none-any.whl", "has_sig": true, "md5_digest": "cd5b7d0520f2dc7c3827e01d57ce684b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 87802, "upload_time": "2018-07-17T01:27:06", "upload_time_iso_8601": "2018-07-17T01:27:06.480120Z", "url": "https://files.pythonhosted.org/packages/d1/27/39ffcee4cc0f659809e7055c9a15f5ff4fff7b955bf1a7fad7ea9844e1ac/keepercommander-0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b78edec42a83d290df90aeb9d4df439f", "sha256": "785dc7f71659d5727961362d04f20559615f425f55ae77cf333f0b7e84023cde"}, "downloads": -1, "filename": "keepercommander-0.8.tar.gz", "has_sig": true, "md5_digest": "b78edec42a83d290df90aeb9d4df439f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57692, "upload_time": "2018-07-17T01:27:08", "upload_time_iso_8601": "2018-07-17T01:27:08.442829Z", "url": "https://files.pythonhosted.org/packages/43/68/7473a7af49e003d48ecf91d41149803446e59b67b8637327b74d14bc700c/keepercommander-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "f2d68938111d4c43be347502eaba9d5d", "sha256": "596ca78fc619a4c5b6269bd05bd1f6bf91fd7b76c4fab3698063e0cbacccaa14"}, "downloads": -1, "filename": "keepercommander-0.9-py3-none-any.whl", "has_sig": true, "md5_digest": "f2d68938111d4c43be347502eaba9d5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 93218, "upload_time": "2018-07-24T02:46:32", "upload_time_iso_8601": "2018-07-24T02:46:32.566436Z", "url": "https://files.pythonhosted.org/packages/1c/80/44a3beb0e9a2fae98f775363ecfbd70bf2dd9511b56bf261067edc7c46cd/keepercommander-0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00aa11e2445b48313ee5840a65c22c21", "sha256": "e73dfeffd319bea22306f51cab6ac50d348a74195094e6186566691b37d72c25"}, "downloads": -1, "filename": "keepercommander-0.9.tar.gz", "has_sig": true, "md5_digest": "00aa11e2445b48313ee5840a65c22c21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65193, "upload_time": "2018-07-24T02:46:33", "upload_time_iso_8601": "2018-07-24T02:46:33.981232Z", "url": "https://files.pythonhosted.org/packages/4d/dc/19914aa79eb227d9da9893371c63352317d5a4028646e4cfbd0558aad563/keepercommander-0.9.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "0ab4383cd3429b5099bb4da85aaac5eb", "sha256": "1cf941dd2ab1192fd8ec05027f72661a513d367024b54ceaeb49c10698e4b482"}, "downloads": -1, "filename": "keepercommander-1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "0ab4383cd3429b5099bb4da85aaac5eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 97266, "upload_time": "2018-07-27T02:11:29", "upload_time_iso_8601": "2018-07-27T02:11:29.257327Z", "url": "https://files.pythonhosted.org/packages/8c/c2/3cd4e425d0f3bbd85e40f8a34420cac0d36b5982ea9b41e4a5fcfc7c8881/keepercommander-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c057a0213e6acdfc3a29453bab0a3f9", "sha256": "fff9300aa03cbab38d0ba1c553d42c74ea075a5206ac775797da200872c9f5dc"}, "downloads": -1, "filename": "keepercommander-1.0.tar.gz", "has_sig": true, "md5_digest": "7c057a0213e6acdfc3a29453bab0a3f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68691, "upload_time": "2018-07-27T02:11:31", "upload_time_iso_8601": "2018-07-27T02:11:31.725282Z", "url": "https://files.pythonhosted.org/packages/7c/42/a344d65b990f9cb6883da97fbd9da687c00b1ef0c10e0528bf0edba59148/keepercommander-1.0.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "b59f9c3a0d4873cbad107a7c2c62c25b", "sha256": "6beb557d97e567e64fe5ff17c4c0b046ede5029dd4e52fafdeb3a4818dd7935c"}, "downloads": -1, "filename": "keepercommander-1.2-py3-none-any.whl", "has_sig": true, "md5_digest": "b59f9c3a0d4873cbad107a7c2c62c25b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 108914, "upload_time": "2018-08-07T20:47:02", "upload_time_iso_8601": "2018-08-07T20:47:02.853554Z", "url": "https://files.pythonhosted.org/packages/dc/a5/938938d1fa85b4b00c2cba7afea9eab414bc9b64e9182341abf8fb46b1dd/keepercommander-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e289650239b8d28efb366c22628f97c8", "sha256": "27b515d6cb03eae950b06ddc312252814ec01cad9471dbd8e8130f4dac80cc86"}, "downloads": -1, "filename": "keepercommander-1.2.tar.gz", "has_sig": true, "md5_digest": "e289650239b8d28efb366c22628f97c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 79646, "upload_time": "2018-08-07T20:47:04", "upload_time_iso_8601": "2018-08-07T20:47:04.895480Z", "url": "https://files.pythonhosted.org/packages/44/43/724e5513cfc89e867128edb6ffee29cff210ca20c7d7c596aff7d3e42d6d/keepercommander-1.2.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "42c4782a073ca2574a783a8d80011ebf", "sha256": "035080c588da63e68d7059c9aa0e06b46c455fdaa8eb8402815c715997a2f2c7"}, "downloads": -1, "filename": "keepercommander-1.4-py3-none-any.whl", "has_sig": true, "md5_digest": "42c4782a073ca2574a783a8d80011ebf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 115305, "upload_time": "2018-08-21T07:10:41", "upload_time_iso_8601": "2018-08-21T07:10:41.463376Z", "url": "https://files.pythonhosted.org/packages/9c/bd/b9f942480b25d4d414750de1b984afdab32b43bde20d43a0d036abb53861/keepercommander-1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc1e7914dcf94e810424de19c7d4886f", "sha256": "b20d3e1ceb0a79e08ecba5de06492303fe4bf33358621b8af64df4f3ae9a3be8"}, "downloads": -1, "filename": "keepercommander-1.4.tar.gz", "has_sig": true, "md5_digest": "bc1e7914dcf94e810424de19c7d4886f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93574, "upload_time": "2018-08-21T07:10:43", "upload_time_iso_8601": "2018-08-21T07:10:43.810233Z", "url": "https://files.pythonhosted.org/packages/98/53/c75c5f795c3e86e2d022383da20dac62fe3cdc7c763d8b7c774912f4c74e/keepercommander-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "24f72c85dd4737649ece39cfcf237e6e", "sha256": "e33e37030e2a1b6e6c2e8b7c7901e0b3e32da7dad74740692d56f3f626fdacce"}, "downloads": -1, "filename": "keepercommander-1.5-py3-none-any.whl", "has_sig": true, "md5_digest": "24f72c85dd4737649ece39cfcf237e6e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 115718, "upload_time": "2018-08-29T01:28:35", "upload_time_iso_8601": "2018-08-29T01:28:35.439872Z", "url": "https://files.pythonhosted.org/packages/3b/1c/2b568f1e2a438396a2959cb424fd86a1cf446eef5406c5866aa451e17e2a/keepercommander-1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df60819c21648997423fd792b4495c9c", "sha256": "639f46dff614bbb603ff24dca4ce26f19d793509e89dabe77f019a1e02d6493b"}, "downloads": -1, "filename": "keepercommander-1.5.tar.gz", "has_sig": true, "md5_digest": "df60819c21648997423fd792b4495c9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94048, "upload_time": "2018-08-29T01:28:37", "upload_time_iso_8601": "2018-08-29T01:28:37.810606Z", "url": "https://files.pythonhosted.org/packages/31/35/0ed938875e7158ae8d4e1c0108c4f75c308bcc19ef2556e41392e52d29a7/keepercommander-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "9129da8ce8437f0fb6e19d2b2551bc9e", "sha256": "a4a1a2c157074b58b40c82b5d58aab9299a847de55f44e8dc98135949d6d32de"}, "downloads": -1, "filename": "keepercommander-1.6-py3-none-any.whl", "has_sig": true, "md5_digest": "9129da8ce8437f0fb6e19d2b2551bc9e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 115833, "upload_time": "2018-09-07T14:47:57", "upload_time_iso_8601": "2018-09-07T14:47:57.340825Z", "url": "https://files.pythonhosted.org/packages/9a/42/59e98305c6919736850f2fffa5077f9c001589e8d3ba25e3a476be38b1ef/keepercommander-1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4afa1b46e3b648b468ca7b51846c6d2d", "sha256": "539c9eb11bed0077af71a6e677a94528ff5640033d559c998e80985d18eff3d1"}, "downloads": -1, "filename": "keepercommander-1.6.tar.gz", "has_sig": true, "md5_digest": "4afa1b46e3b648b468ca7b51846c6d2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94177, "upload_time": "2018-09-07T14:47:59", "upload_time_iso_8601": "2018-09-07T14:47:59.764359Z", "url": "https://files.pythonhosted.org/packages/ad/03/0c78517cb7c699806d80a78b3df20da0fca2e708651707aafbde19a4ddaf/keepercommander-1.6.tar.gz", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "c7927c83b3f3658025f700c5bb0acc13", "sha256": "bd2efa8fd8d7670ee9ca5ecfdaaa96440f56007f444a10fc482eb35e22097269"}, "downloads": -1, "filename": "keepercommander-1.8-py3-none-any.whl", "has_sig": true, "md5_digest": "c7927c83b3f3658025f700c5bb0acc13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 116719, "upload_time": "2018-09-11T15:13:10", "upload_time_iso_8601": "2018-09-11T15:13:10.932383Z", "url": "https://files.pythonhosted.org/packages/d6/74/3267dc656a9f8fa484f34fbe09779fcbb6f211d6675aed381593e883bb91/keepercommander-1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e96f0a3da78a59c0b6c79ed17d10a161", "sha256": "dae17a0ab052403ecd3684b216e1a4e413489e3393bc88610854d8f35c5d8e95"}, "downloads": -1, "filename": "keepercommander-1.8.tar.gz", "has_sig": true, "md5_digest": "e96f0a3da78a59c0b6c79ed17d10a161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 94985, "upload_time": "2018-09-11T15:13:13", "upload_time_iso_8601": "2018-09-11T15:13:13.201158Z", "url": "https://files.pythonhosted.org/packages/f0/46/971a69027b86747a1054c5fdb30b7893141ab8a06a46c94add99ad7ea42e/keepercommander-1.8.tar.gz", "yanked": false}], "1.9": [{"comment_text": "", "digests": {"md5": "c95b79a000b719d84591d750b47247c7", "sha256": "89c475b7c77026eef2d3d76b1d3d237bdf0bc31b28b7b94246f6c949b6683a6f"}, "downloads": -1, "filename": "keepercommander-1.9-py3-none-any.whl", "has_sig": true, "md5_digest": "c95b79a000b719d84591d750b47247c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 118125, "upload_time": "2018-09-19T16:36:58", "upload_time_iso_8601": "2018-09-19T16:36:58.365125Z", "url": "https://files.pythonhosted.org/packages/a5/86/d073286f3c74ddd00c11073b0359381e8d4f6302b60c01a6c4d9e96b058c/keepercommander-1.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "53dba1684459c23ee251038fc8719f17", "sha256": "020232cfff31c02cfee9ca050a7f60aed1b0fd090487811b1883b53e3cdf9574"}, "downloads": -1, "filename": "keepercommander-1.9.tar.gz", "has_sig": true, "md5_digest": "53dba1684459c23ee251038fc8719f17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96528, "upload_time": "2018-09-19T16:37:00", "upload_time_iso_8601": "2018-09-19T16:37:00.729526Z", "url": "https://files.pythonhosted.org/packages/8c/05/37d3dea1fe01db492f5d91a4a3a8c37208c02489105670e124f76811d677/keepercommander-1.9.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "3ce92e8c72355189fd99ab559bfec27c", "sha256": "d6fd616f9cfc6aed1c4bb0e10e3239db6c45f9b0f170dadab2245c8cd1d63c46"}, "downloads": -1, "filename": "keepercommander-2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "3ce92e8c72355189fd99ab559bfec27c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 118121, "upload_time": "2018-09-20T03:37:41", "upload_time_iso_8601": "2018-09-20T03:37:41.324440Z", "url": "https://files.pythonhosted.org/packages/fb/05/cfb1206da88cf45355d4998bbaaacc253ce875d9518ff5c85a5af7475d34/keepercommander-2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a70cfb8ec540ab587416e692a830676", "sha256": "1c74504864af7cd48b9b641bc4bc293158ab43d13ebbc7dd5d7c07102d104d60"}, "downloads": -1, "filename": "keepercommander-2.0.tar.gz", "has_sig": true, "md5_digest": "5a70cfb8ec540ab587416e692a830676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96545, "upload_time": "2018-09-20T03:37:43", "upload_time_iso_8601": "2018-09-20T03:37:43.390195Z", "url": "https://files.pythonhosted.org/packages/35/2f/58a0a0ec64a2209e78ecba8ffeebe471928a25da639da4a10d2998502ccd/keepercommander-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "4bc2ace026d211d7010054358bf34dfe", "sha256": "02e11ea826d8d688f93cd4d7d28608c7567fd85e6577e3ac0b0114b43a8de760"}, "downloads": -1, "filename": "keepercommander-2.1-py3-none-any.whl", "has_sig": true, "md5_digest": "4bc2ace026d211d7010054358bf34dfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 118420, "upload_time": "2018-09-26T21:36:14", "upload_time_iso_8601": "2018-09-26T21:36:14.253820Z", "url": "https://files.pythonhosted.org/packages/94/d5/4d3d3926f84446a456a203d9a48f609b0b3ac22036cb979322573ff37448/keepercommander-2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04b9c91f530e35990cf5eaa08949c31b", "sha256": "08177c387a3d59827c2cd383bd619155d83a5bcb48894f290d1fc07f8a2f6a76"}, "downloads": -1, "filename": "keepercommander-2.1.tar.gz", "has_sig": true, "md5_digest": "04b9c91f530e35990cf5eaa08949c31b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96883, "upload_time": "2018-09-26T21:36:16", "upload_time_iso_8601": "2018-09-26T21:36:16.499500Z", "url": "https://files.pythonhosted.org/packages/0a/92/ed26ca6719030b34137143aa31f9aff9dce5a6bb1d61d1ae1853e455aec9/keepercommander-2.1.tar.gz", "yanked": false}], "2.10": [{"comment_text": "", "digests": {"md5": "7d2adcd85c5fb2c6943954d1b620706a", "sha256": "1a61ecf378095076ef480fadf0bcac4d284b38b78b7110d578a96a0291a0c32f"}, "downloads": -1, "filename": "keepercommander-2.10-py3-none-any.whl", "has_sig": true, "md5_digest": "7d2adcd85c5fb2c6943954d1b620706a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 120983, "upload_time": "2018-12-14T18:49:18", "upload_time_iso_8601": "2018-12-14T18:49:18.475274Z", "url": "https://files.pythonhosted.org/packages/74/27/4bfa7940ac3b2fc11932336a179285c6c812d7f5ed6b14c8a55b02fe6324/keepercommander-2.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99990bc63f0c1535fa4fdff77172bc22", "sha256": "0e4d28a6a1ba027fb5acb0fa3be215764b7c8291c91b407c178a55e221319b43"}, "downloads": -1, "filename": "keepercommander-2.10.tar.gz", "has_sig": true, "md5_digest": "99990bc63f0c1535fa4fdff77172bc22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99776, "upload_time": "2018-12-14T18:49:31", "upload_time_iso_8601": "2018-12-14T18:49:31.176912Z", "url": "https://files.pythonhosted.org/packages/32/9d/63788e66fa4c76c3d6763706f8f0b7afd62e7966f10242f05489fc1379dd/keepercommander-2.10.tar.gz", "yanked": false}], "2.11": [{"comment_text": "", "digests": {"md5": "073caa55097f4a25ee1bb46e650569c2", "sha256": "572556317d594d0284b02c7b7818067510b47585eeee93e8eee40faa4281cd98"}, "downloads": -1, "filename": "keepercommander-2.11-py3-none-any.whl", "has_sig": true, "md5_digest": "073caa55097f4a25ee1bb46e650569c2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 121784, "upload_time": "2018-12-19T01:39:34", "upload_time_iso_8601": "2018-12-19T01:39:34.699751Z", "url": "https://files.pythonhosted.org/packages/ca/eb/225dfa6b2c44369bfac8604879ec0850ec6784dcadd20ac04c49009bd06f/keepercommander-2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e2e511ffa069c07af89862db52ec4f9", "sha256": "364f56e02236630b7aadf6c9da3a7f4fa6e8d53f550504f09eb90fb24d32f3f2"}, "downloads": -1, "filename": "keepercommander-2.11.tar.gz", "has_sig": true, "md5_digest": "8e2e511ffa069c07af89862db52ec4f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100669, "upload_time": "2018-12-19T01:39:38", "upload_time_iso_8601": "2018-12-19T01:39:38.159004Z", "url": "https://files.pythonhosted.org/packages/9c/bf/2d8572784c3f21d53eb004b6fb9ba8cb35b49c255898797c153190c62c91/keepercommander-2.11.tar.gz", "yanked": false}], "2.12": [{"comment_text": "", "digests": {"md5": "aed73e117bd47629bb4267b343bd082e", "sha256": "39e1fd852f01f645e8641952dcc57eef95aabd0f968b8221fd55861b7478c02a"}, "downloads": -1, "filename": "keepercommander-2.12-py3-none-any.whl", "has_sig": true, "md5_digest": "aed73e117bd47629bb4267b343bd082e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 111465, "upload_time": "2019-01-03T23:09:10", "upload_time_iso_8601": "2019-01-03T23:09:10.592124Z", "url": "https://files.pythonhosted.org/packages/a9/38/02da031ddf3bcb28615e4e47feb53e8e6b974f9c37fe2befa789732549d1/keepercommander-2.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63a99edada076bbfb4d9ce3cd5ac4ab3", "sha256": "8d6dbebd3e9767fa4ecb0f359d8942bfdacde829536309bfd9ce2842bbef1c1c"}, "downloads": -1, "filename": "keepercommander-2.12.tar.gz", "has_sig": true, "md5_digest": "63a99edada076bbfb4d9ce3cd5ac4ab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112282, "upload_time": "2019-01-03T23:09:12", "upload_time_iso_8601": "2019-01-03T23:09:12.980077Z", "url": "https://files.pythonhosted.org/packages/a2/2f/59d266c0425e004b002bab471c16ded1d58f2ff277920c73507066766b23/keepercommander-2.12.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "5356cbef7fb7b3e1fdfc87cf0e146a40", "sha256": "5bfc0e6202c0773ab661d380c865736a95c6133b86f0278f041d344718140eaf"}, "downloads": -1, "filename": "keepercommander-2.2-py3-none-any.whl", "has_sig": true, "md5_digest": "5356cbef7fb7b3e1fdfc87cf0e146a40", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 118502, "upload_time": "2018-10-25T01:51:16", "upload_time_iso_8601": "2018-10-25T01:51:16.280047Z", "url": "https://files.pythonhosted.org/packages/2f/74/141631a947871df023dbadb885c500215bd26d48f8724f9b3849cbf87704/keepercommander-2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4de68bf2e9992835622d8cb5c65175c5", "sha256": "7cfc997b9174d74e56b10f0d124b0261bdf225a8e883ca5c765334be0cc4f8e8"}, "downloads": -1, "filename": "keepercommander-2.2.tar.gz", "has_sig": true, "md5_digest": "4de68bf2e9992835622d8cb5c65175c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 96985, "upload_time": "2018-10-25T01:51:18", "upload_time_iso_8601": "2018-10-25T01:51:18.847868Z", "url": "https://files.pythonhosted.org/packages/2d/11/b66e907f87744338910b63269574e080d029a9ccd0db8659115eff041139/keepercommander-2.2.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "31644f44ca15ac050123ba2283a7c1c0", "sha256": "d70501e9121d13d76786b2883e785768c2abdac3e3254e25018a99386b2864d5"}, "downloads": -1, "filename": "keepercommander-2.3-py3-none-any.whl", "has_sig": true, "md5_digest": "31644f44ca15ac050123ba2283a7c1c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 118940, "upload_time": "2018-10-25T23:56:13", "upload_time_iso_8601": "2018-10-25T23:56:13.773966Z", "url": "https://files.pythonhosted.org/packages/48/a2/7a27a779c5de92d1909b751c62d05e2431a893eb680707757e6871dd2913/keepercommander-2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2734dfadfb0c515c5f58566141de74d", "sha256": "457c87dcd59828cc6c3bbdc9c7ee6330436d3a8fd5fab2a260f60999fc17d66a"}, "downloads": -1, "filename": "keepercommander-2.3.tar.gz", "has_sig": true, "md5_digest": "c2734dfadfb0c515c5f58566141de74d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 97388, "upload_time": "2018-10-25T23:56:16", "upload_time_iso_8601": "2018-10-25T23:56:16.168293Z", "url": "https://files.pythonhosted.org/packages/6d/0a/fed854e716d538b61d3c80b0db7069f3beeafb7750a256c6fc78ec1aa3c1/keepercommander-2.3.tar.gz", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "910d36943435f01f35d2141e2d09ddaf", "sha256": "22f32fb92c07c13682a3bc754525f53d477b2151b92bb16d1b616a884fabb206"}, "downloads": -1, "filename": "keepercommander-2.4-py3-none-any.whl", "has_sig": true, "md5_digest": "910d36943435f01f35d2141e2d09ddaf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 108590, "upload_time": "2018-10-26T20:46:19", "upload_time_iso_8601": "2018-10-26T20:46:19.317789Z", "url": "https://files.pythonhosted.org/packages/71/a5/d865e520ccfb1d9e6c3a86a3240d735f24c884fcf109b5ca132c7737979c/keepercommander-2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cfc57ee2390c261edeb44a88ea0b272a", "sha256": "c903fb6b2f8facbc5cc77ecf24d4d384962d26d9c259069b85d3b772faba51c2"}, "downloads": -1, "filename": "keepercommander-2.4.tar.gz", "has_sig": true, "md5_digest": "cfc57ee2390c261edeb44a88ea0b272a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108212, "upload_time": "2018-10-26T20:46:21", "upload_time_iso_8601": "2018-10-26T20:46:21.090746Z", "url": "https://files.pythonhosted.org/packages/b2/6c/488c1f0a11566a3abd3735f3809177d1ee290cdd0a404f6bdaa98dc2bae7/keepercommander-2.4.tar.gz", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "45282470091d556da0360e3d90403b23", "sha256": "a80046fe32e477e3dcd690db425aa36609d294f45de7f315ce03e8edbfa6cfc0"}, "downloads": -1, "filename": "keepercommander-2.5-py3-none-any.whl", "has_sig": true, "md5_digest": "45282470091d556da0360e3d90403b23", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 108960, "upload_time": "2018-10-31T01:34:49", "upload_time_iso_8601": "2018-10-31T01:34:49.520606Z", "url": "https://files.pythonhosted.org/packages/4c/ba/bbd6c26c099a50472a78cadc766627865466377c17e068a4a22f83d97bc1/keepercommander-2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e7d720c69e9e494abe63277f806158d", "sha256": "576e529c52f69860bbdbce6a8e9823f7d2ae77af00fd514a2e6e958bebc45b01"}, "downloads": -1, "filename": "keepercommander-2.5.tar.gz", "has_sig": true, "md5_digest": "7e7d720c69e9e494abe63277f806158d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108766, "upload_time": "2018-10-31T01:34:51", "upload_time_iso_8601": "2018-10-31T01:34:51.832634Z", "url": "https://files.pythonhosted.org/packages/f4/b3/affd8058912ebc5185cd8e4d918899f73b78ca3bca19d416a71a8ac39c6b/keepercommander-2.5.tar.gz", "yanked": false}], "2.6": [{"comment_text": "", "digests": {"md5": "7c7f265ea272f715ebd20beb79184b48", "sha256": "f48cf5722bbef8043c288e5876cb76e9ec581ba81f9b9bfc799080f52bbe78ca"}, "downloads": -1, "filename": "keepercommander-2.6-py3-none-any.whl", "has_sig": true, "md5_digest": "7c7f265ea272f715ebd20beb79184b48", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 109572, "upload_time": "2018-11-26T22:51:39", "upload_time_iso_8601": "2018-11-26T22:51:39.725144Z", "url": "https://files.pythonhosted.org/packages/77/c2/a36e0b9fd8f8b44da85763d35883f94547d486deb797a0730c8b7280c59a/keepercommander-2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcc8bb0c8075af639ff6aa3e090d12b5", "sha256": "22f82489b8fa4b158577b323294e92ba4f8b40b811f90a56fb692288540258a4"}, "downloads": -1, "filename": "keepercommander-2.6.tar.gz", "has_sig": true, "md5_digest": "fcc8bb0c8075af639ff6aa3e090d12b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 108790, "upload_time": "2018-11-26T22:51:42", "upload_time_iso_8601": "2018-11-26T22:51:42.130199Z", "url": "https://files.pythonhosted.org/packages/d9/77/cd5f32f46895eac5b078b426f2733e5e1557002f5755f38cf010c0cbdf43/keepercommander-2.6.tar.gz", "yanked": false}], "2.7": [{"comment_text": "", "digests": {"md5": "75c67bfd7ed8c414ed6b54e315e34011", "sha256": "b10d070365887d96bccab07d0a85000d9bc3729171f25c18c108c36f961a4d6b"}, "downloads": -1, "filename": "keepercommander-2.7-py3-none-any.whl", "has_sig": true, "md5_digest": "75c67bfd7ed8c414ed6b54e315e34011", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 110680, "upload_time": "2018-12-05T20:43:22", "upload_time_iso_8601": "2018-12-05T20:43:22.087153Z", "url": "https://files.pythonhosted.org/packages/6f/71/5ba252205df21a5def84996c686755fc1e4a88d1661d09a76e56b34fb15f/keepercommander-2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b36806d58c6f31957184e3901586b0ff", "sha256": "4e300a511f39922e300d98256f3310d9f9b637b0e9a83d9d3ecf9b15cdb9dd90"}, "downloads": -1, "filename": "keepercommander-2.7.tar.gz", "has_sig": true, "md5_digest": "b36806d58c6f31957184e3901586b0ff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110660, "upload_time": "2018-12-05T20:43:24", "upload_time_iso_8601": "2018-12-05T20:43:24.586897Z", "url": "https://files.pythonhosted.org/packages/b9/53/42748f1a701b12a22c3a729c70dc8469250329b42d79db6d3b847f7da221/keepercommander-2.7.tar.gz", "yanked": false}], "2.8": [{"comment_text": "", "digests": {"md5": "df3964ff84f8d274cb4b38fb92d81c84", "sha256": "f79d155650a859d71864ab631121652a32563468fddd70d3b6c515ebc7ab2dfc"}, "downloads": -1, "filename": "keepercommander-2.8-py3-none-any.whl", "has_sig": true, "md5_digest": "df3964ff84f8d274cb4b38fb92d81c84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 110682, "upload_time": "2018-12-05T21:21:11", "upload_time_iso_8601": "2018-12-05T21:21:11.078288Z", "url": "https://files.pythonhosted.org/packages/a9/28/760ebb8087e5a65f6771311daaa38886ce5bb58b09894ee5bf42f25d7d51/keepercommander-2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "679c028ab034f861caeb006662055398", "sha256": "aeb22e09c2124749e83962903bfd0ed28e91d8042e1d9157f8a76ff3a2a3dc3a"}, "downloads": -1, "filename": "keepercommander-2.8.tar.gz", "has_sig": true, "md5_digest": "679c028ab034f861caeb006662055398", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110667, "upload_time": "2018-12-05T21:21:13", "upload_time_iso_8601": "2018-12-05T21:21:13.078785Z", "url": "https://files.pythonhosted.org/packages/a2/11/2f853c74d0a8706497aa10f40ba1101b00d6e3f9725d91ff8c197ad1d971/keepercommander-2.8.tar.gz", "yanked": false}], "2.9": [{"comment_text": "", "digests": {"md5": "15c48ac1d3a0731c16aea31f15432eb6", "sha256": "275996c636fedbaecb6829e37ce57a09ce6a6e96f24346cd5830ca31c71d3e44"}, "downloads": -1, "filename": "keepercommander-2.9-py3-none-any.whl", "has_sig": true, "md5_digest": "15c48ac1d3a0731c16aea31f15432eb6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 120906, "upload_time": "2018-12-11T04:50:11", "upload_time_iso_8601": "2018-12-11T04:50:11.572201Z", "url": "https://files.pythonhosted.org/packages/5f/92/5b806796c3b9ef5c1ccd5ba085f57333935547f72071f7864be70cc939a4/keepercommander-2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a41c57027c92df7bd569aea37926edbe", "sha256": "167285ed1b8e28ef239b9cec253d31b1a2a0758d98bc2ec3b166adf02e6d8854"}, "downloads": -1, "filename": "keepercommander-2.9.tar.gz", "has_sig": true, "md5_digest": "a41c57027c92df7bd569aea37926edbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 99711, "upload_time": "2018-12-11T04:50:14", "upload_time_iso_8601": "2018-12-11T04:50:14.306842Z", "url": "https://files.pythonhosted.org/packages/4a/45/ac02bf0b4d30e8b434cb9526e4a3b2267db8c4c4a3ef2c033bb52f353d85/keepercommander-2.9.tar.gz", "yanked": false}], "3.0": [{"comment_text": "", "digests": {"md5": "586d8284775ed85eae3b6564f63e62b7", "sha256": "c618e572d084de7630a635b8fd08c7c27ef041218b37ff51712fdd133bc5b283"}, "downloads": -1, "filename": "keepercommander-3.0-py3-none-any.whl", "has_sig": true, "md5_digest": "586d8284775ed85eae3b6564f63e62b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 124892, "upload_time": "2019-02-03T20:30:18", "upload_time_iso_8601": "2019-02-03T20:30:18.557865Z", "url": "https://files.pythonhosted.org/packages/8f/71/c2ab9b17dd5edae3d9e83ed99cfa268347c359da93ac8cba1e5fc7b7ada5/keepercommander-3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41cd1b7cf6455f605392f57b92fdcd6d", "sha256": "6d8efac35eb12b17a6f83169b45b03f4cb41985acef1100278747a1565c46b61"}, "downloads": -1, "filename": "keepercommander-3.0.tar.gz", "has_sig": true, "md5_digest": "41cd1b7cf6455f605392f57b92fdcd6d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103565, "upload_time": "2019-02-03T20:30:21", "upload_time_iso_8601": "2019-02-03T20:30:21.367551Z", "url": "https://files.pythonhosted.org/packages/e6/1e/ec8d4e6ee4e9f553eaaf73b5c93aabed6d004ade0e3c88038920aceb28f4/keepercommander-3.0.tar.gz", "yanked": false}], "3.1": [{"comment_text": "", "digests": {"md5": "8885f98df2e9ce09ed64c563303e6eec", "sha256": "e8cc34339762a26ab3e40d052e97a57c1f3d4005a309ddda2f18e231910e74b1"}, "downloads": -1, "filename": "keepercommander-3.1-py3-none-any.whl", "has_sig": true, "md5_digest": "8885f98df2e9ce09ed64c563303e6eec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 115230, "upload_time": "2019-02-14T02:26:29", "upload_time_iso_8601": "2019-02-14T02:26:29.239754Z", "url": "https://files.pythonhosted.org/packages/92/e4/7b9c2a6a9d3546ab00e77eb27f0589fe92e7a759b47656006e28172330e4/keepercommander-3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1103fa9bd2bf1243b18c64c0bf13e37", "sha256": "a053749c91ba73f8973d893ec870821a02ecda9bb9caeb7be2a143d8264034cf"}, "downloads": -1, "filename": "keepercommander-3.1.tar.gz", "has_sig": true, "md5_digest": "c1103fa9bd2bf1243b18c64c0bf13e37", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119645, "upload_time": "2019-02-14T02:26:31", "upload_time_iso_8601": "2019-02-14T02:26:31.344570Z", "url": "https://files.pythonhosted.org/packages/1d/2f/48ec1e0475cd4e1b67d9e16e01d8a6e8352efc1389ac9df7914cf722ad01/keepercommander-3.1.tar.gz", "yanked": false}], "3.2": [{"comment_text": "", "digests": {"md5": "1bff0f1f297682f0abe7af7b89f34907", "sha256": "baeacc42699861f85fc7680874005d993f0973606a5c401cec6e07e11948530c"}, "downloads": -1, "filename": "keepercommander-3.2-py3-none-any.whl", "has_sig": true, "md5_digest": "1bff0f1f297682f0abe7af7b89f34907", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 127421, "upload_time": "2019-02-14T04:40:32", "upload_time_iso_8601": "2019-02-14T04:40:32.936759Z", "url": "https://files.pythonhosted.org/packages/35/85/f514e2ca23cf80929e9c8adc04f0892e23c066a391e9d1b0389b168c4662/keepercommander-3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dca8c9e396ac1a33169e985da0e9a515", "sha256": "5a69e2dcdbffbc8bc3ca0282886d53607c7536b08eeea5a81f5d921583082b77"}, "downloads": -1, "filename": "keepercommander-3.2.tar.gz", "has_sig": true, "md5_digest": "dca8c9e396ac1a33169e985da0e9a515", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 106208, "upload_time": "2019-02-14T04:40:35", "upload_time_iso_8601": "2019-02-14T04:40:35.186762Z", "url": "https://files.pythonhosted.org/packages/1c/d5/8b5ec44c8a0fa2c7556307c1ed0af811dee7f9a36eb4b19819ad4d1c70ac/keepercommander-3.2.tar.gz", "yanked": false}], "3.4": [{"comment_text": "", "digests": {"md5": "fd26e20b60e4a9fefc8409526a585845", "sha256": "46c77ee46cd59e1c5f78b5b66406c74d25faefccdc3984ce161d8e64f5940333"}, "downloads": -1, "filename": "keepercommander-3.4-py3-none-any.whl", "has_sig": true, "md5_digest": "fd26e20b60e4a9fefc8409526a585845", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 115622, "upload_time": "2019-02-16T02:03:03", "upload_time_iso_8601": "2019-02-16T02:03:03.394122Z", "url": "https://files.pythonhosted.org/packages/d4/3e/46806ff6ae8ab860a038a9975f6dc85312ec3ba1f0d78d277e0d7bbc9a93/keepercommander-3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2857ca9579298f05d2cff27d3742f847", "sha256": "73dbf199071d491c557057bf5544bdc0b22bc1f9224ce453e3a218f0d335867c"}, "downloads": -1, "filename": "keepercommander-3.4.tar.gz", "has_sig": true, "md5_digest": "2857ca9579298f05d2cff27d3742f847", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120446, "upload_time": "2019-02-16T02:03:05", "upload_time_iso_8601": "2019-02-16T02:03:05.567479Z", "url": "https://files.pythonhosted.org/packages/b8/43/627b26c48aece808924fb1629c4fe4fc733d587a432352f7d892159134e0/keepercommander-3.4.tar.gz", "yanked": false}], "3.5": [{"comment_text": "", "digests": {"md5": "b6f4e7504bd8561098134369da4ded52", "sha256": "f56294c8ae60680c74b6a6afb1deae8fd6f9754df5699c13c6fcabd220c706fe"}, "downloads": -1, "filename": "keepercommander-3.5-py3-none-any.whl", "has_sig": true, "md5_digest": "b6f4e7504bd8561098134369da4ded52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 115624, "upload_time": "2019-02-22T20:29:27", "upload_time_iso_8601": "2019-02-22T20:29:27.467473Z", "url": "https://files.pythonhosted.org/packages/e9/6c/487f70a3c463aa9892d0e385c14d2144a0da3c4ce046f3c1f536b640099b/keepercommander-3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb2a01e7b02c036fe84b48d3481f6465", "sha256": "4f8540ca3df33dd19a64d2a4a79eb4f6e295831d40515e345a8fb439897dcb0d"}, "downloads": -1, "filename": "keepercommander-3.5.tar.gz", "has_sig": true, "md5_digest": "bb2a01e7b02c036fe84b48d3481f6465", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 120467, "upload_time": "2019-02-22T20:29:30", "upload_time_iso_8601": "2019-02-22T20:29:30.029861Z", "url": "https://files.pythonhosted.org/packages/be/37/cbf91614fbf9bc73090548529c62b17193cb3d7423aa24d022e92730065d/keepercommander-3.5.tar.gz", "yanked": false}], "3.6": [{"comment_text": "", "digests": {"md5": "8b72b5edb52b53b4aa6662b15f328849", "sha256": "66c9efe027bb40115551a9d0eec7514402245d2ca0edd85b7f53d511befdd652"}, "downloads": -1, "filename": "keepercommander-3.6-py3-none-any.whl", "has_sig": true, "md5_digest": "8b72b5edb52b53b4aa6662b15f328849", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 128489, "upload_time": "2019-02-28T18:44:15", "upload_time_iso_8601": "2019-02-28T18:44:15.804005Z", "url": "https://files.pythonhosted.org/packages/97/e1/2ed5a4c05ea9d4fd5f6ab6c732ede9f6048fa0c4b2cc6a6152cbe25627a3/keepercommander-3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb82bdd0ae3e5bdede8a900a7a932a0c", "sha256": "da3c843c9bb2edb2a34b38b4775c00e27d02b128cc77883e27eff8d7950a818d"}, "downloads": -1, "filename": "keepercommander-3.6.tar.gz", "has_sig": true, "md5_digest": "cb82bdd0ae3e5bdede8a900a7a932a0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107681, "upload_time": "2019-02-28T18:44:24", "upload_time_iso_8601": "2019-02-28T18:44:24.930187Z", "url": "https://files.pythonhosted.org/packages/04/3c/5e6692a494fe5623b2d3cc59cc42b8962d14ea3c24e774252867f4a29180/keepercommander-3.6.tar.gz", "yanked": false}], "3.7": [{"comment_text": "", "digests": {"md5": "5b6c023b721cb94e91edaf057354fe31", "sha256": "648f571550deacfda7ed8d5985cb97ce63c75f192764fc8ef1cb234124beaaff"}, "downloads": -1, "filename": "keepercommander-3.7-py3-none-any.whl", "has_sig": true, "md5_digest": "5b6c023b721cb94e91edaf057354fe31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 128664, "upload_time": "2019-03-05T23:51:21", "upload_time_iso_8601": "2019-03-05T23:51:21.130708Z", "url": "https://files.pythonhosted.org/packages/df/de/ffbec1566513689e016c514384bc767acb16d3a5d8a780e380386a4e2174/keepercommander-3.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f6e6499ec9f5dfd75e9ba63c2652f9c", "sha256": "531f4b37cdb0c140a0ddc5869c403977b27c381a98267c39180aa8c35ece74f1"}, "downloads": -1, "filename": "keepercommander-3.7.tar.gz", "has_sig": true, "md5_digest": "9f6e6499ec9f5dfd75e9ba63c2652f9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 107859, "upload_time": "2019-03-05T23:51:25", "upload_time_iso_8601": "2019-03-05T23:51:25.385241Z", "url": "https://files.pythonhosted.org/packages/cb/1e/8d54b1a1118df58617ef22e19cfa75cfb19894de26aaef0d0d34a6fcf4c1/keepercommander-3.7.tar.gz", "yanked": false}], "3.8": [{"comment_text": "", "digests": {"md5": "cff7f616fe6e54e67f8d39f00b96c01a", "sha256": "2dc73172b8b088ded3201309e2bb5588a49a87c643d64aad47636b8a3db98277"}, "downloads": -1, "filename": "keepercommander-3.8-py3-none-any.whl", "has_sig": true, "md5_digest": "cff7f616fe6e54e67f8d39f00b96c01a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 136514, "upload_time": "2019-03-22T22:40:56", "upload_time_iso_8601": "2019-03-22T22:40:56.287427Z", "url": "https://files.pythonhosted.org/packages/29/8c/5950f3b883dccce3cee7a13d15b5827e178d65412e6e4954768902afb7ee/keepercommander-3.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b29fa7405e0e729fb8f394cd51487338", "sha256": "84725e0de37d6048a70c71abd74fffd52db66f792c50ec4bc34b6d8e0101b29d"}, "downloads": -1, "filename": "keepercommander-3.8.tar.gz", "has_sig": true, "md5_digest": "b29fa7405e0e729fb8f394cd51487338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133031, "upload_time": "2019-03-22T22:40:58", "upload_time_iso_8601": "2019-03-22T22:40:58.498880Z", "url": "https://files.pythonhosted.org/packages/4d/67/79c46d41e89c804c7627e3f82d31eef1ad76ed6499d2add9ba4aa3b92878/keepercommander-3.8.tar.gz", "yanked": false}], "3.9": [{"comment_text": "", "digests": {"md5": "83cb2880aa4e09523aa2948e1434cd43", "sha256": "2cd906af2ac4c71a922dd7a1d304600a68c792e7ceb287e8a44148607c555965"}, "downloads": -1, "filename": "keepercommander-3.9-py3-none-any.whl", "has_sig": true, "md5_digest": "83cb2880aa4e09523aa2948e1434cd43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 135987, "upload_time": "2019-03-29T00:54:00", "upload_time_iso_8601": "2019-03-29T00:54:00.800401Z", "url": "https://files.pythonhosted.org/packages/af/de/2ee0a822bf722ce9c12a0d880f66c5f295fddf2433c60cd40803722c2852/keepercommander-3.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c27b203031c426590da2c2798d23b11", "sha256": "f9bc4d41776076417d32975dbc8d474f6069f1a755632ac413ffe3eb1ad2ec1d"}, "downloads": -1, "filename": "keepercommander-3.9.tar.gz", "has_sig": true, "md5_digest": "7c27b203031c426590da2c2798d23b11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133033, "upload_time": "2019-03-29T00:54:03", "upload_time_iso_8601": "2019-03-29T00:54:03.018242Z", "url": "https://files.pythonhosted.org/packages/3a/ff/957141dcbd5b6b193332ede5dde87f0d0076e04b8361ae886f51a6f2c42f/keepercommander-3.9.tar.gz", "yanked": false}], "4.0": [{"comment_text": "", "digests": {"md5": "64129433e0a26514e102197f14d09d96", "sha256": "cc662c689605045088ca16985a4f317691eba6dd7afe4f5084480ade5588bb43"}, "downloads": -1, "filename": "keepercommander-4.0-py3-none-any.whl", "has_sig": true, "md5_digest": "64129433e0a26514e102197f14d09d96", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 152945, "upload_time": "2019-05-01T02:18:56", "upload_time_iso_8601": "2019-05-01T02:18:56.714994Z", "url": "https://files.pythonhosted.org/packages/2b/52/2e3f9c6f84647856d4f7883fdde53c0ef37c3dc3f4e595dcf2a63f2668dc/keepercommander-4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22f0e196f264ed2b7eee62dc8691f810", "sha256": "691d06d741ba777ac0991a17ecd762bb8e6db49f99bcf65f00a1a9551dafab14"}, "downloads": -1, "filename": "keepercommander-4.0.tar.gz", "has_sig": true, "md5_digest": "22f0e196f264ed2b7eee62dc8691f810", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122276, "upload_time": "2019-05-01T02:19:00", "upload_time_iso_8601": "2019-05-01T02:19:00.134865Z", "url": "https://files.pythonhosted.org/packages/8c/21/02e240cf476600d3c49924d0d7d7131e2f620e36768edaf9655b0f13b4fd/keepercommander-4.0.tar.gz", "yanked": false}], "4.1": [{"comment_text": "", "digests": {"md5": "d368c5b6d1c147ed61da44cc77033bb2", "sha256": "feebdd76d17d234367f0d642f920a07601fe752f358c05020de7b2b91d7affa9"}, "downloads": -1, "filename": "keepercommander-4.1-py3-none-any.whl", "has_sig": true, "md5_digest": "d368c5b6d1c147ed61da44cc77033bb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 140204, "upload_time": "2019-05-02T22:15:55", "upload_time_iso_8601": "2019-05-02T22:15:55.951086Z", "url": "https://files.pythonhosted.org/packages/47/bc/d91810b4affd44cf305d0192113d50293d692e27b283c481b5f8e5f19dfd/keepercommander-4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fe01fe56bd19f311318fb62f5c49af21", "sha256": "419186090f9551dba42bb3a56c05fcba9a2437c03d1e7c75eb26cbcf8bd35264"}, "downloads": -1, "filename": "keepercommander-4.1.tar.gz", "has_sig": true, "md5_digest": "fe01fe56bd19f311318fb62f5c49af21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 138175, "upload_time": "2019-05-02T22:15:58", "upload_time_iso_8601": "2019-05-02T22:15:58.014205Z", "url": "https://files.pythonhosted.org/packages/6c/6a/31c14ca3e8ed0a2877bd8370895aa0de2db284e378a73dc17c036fd32230/keepercommander-4.1.tar.gz", "yanked": false}], "4.10": [{"comment_text": "", "digests": {"md5": "5267a80c48d912a9822befcd0402d8fd", "sha256": "40036b6c40c087373fb11af2644bb44cf5d31c66a72905d1cf62c30844f0d0b0"}, "downloads": -1, "filename": "keepercommander-4.10-py3-none-any.whl", "has_sig": true, "md5_digest": "5267a80c48d912a9822befcd0402d8fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 159282, "upload_time": "2019-08-02T23:02:45", "upload_time_iso_8601": "2019-08-02T23:02:45.737962Z", "url": "https://files.pythonhosted.org/packages/bb/af/ccca35a2c235480d2c3480668b390328fc79e4a07717aca651b1ec85724c/keepercommander-4.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13cf089ba85d8cbafccc2a6d8fa34bb9", "sha256": "9ef87881f93489835611b8ca2448a5806b2a4e76bd65860133bd36d9eaf0e3b4"}, "downloads": -1, "filename": "keepercommander-4.10.tar.gz", "has_sig": true, "md5_digest": "13cf089ba85d8cbafccc2a6d8fa34bb9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 159980, "upload_time": "2019-08-02T23:02:48", "upload_time_iso_8601": "2019-08-02T23:02:48.158789Z", "url": "https://files.pythonhosted.org/packages/b4/47/34e388c865da05504ab71d2fce4e4f6a7f45867801d52e24be714ca91c72/keepercommander-4.10.tar.gz", "yanked": false}], "4.11": [{"comment_text": "", "digests": {"md5": "4d0a88b0085da91cbb986e8b2ba60b7a", "sha256": "313522bb8407e0a37dad77c53fffef27909340fb7b392851ca55afa7c3bf56a6"}, "downloads": -1, "filename": "keepercommander-4.11-py3-none-any.whl", "has_sig": true, "md5_digest": "4d0a88b0085da91cbb986e8b2ba60b7a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 159862, "upload_time": "2019-08-14T16:54:54", "upload_time_iso_8601": "2019-08-14T16:54:54.662494Z", "url": "https://files.pythonhosted.org/packages/54/b6/a964b866a0e8390bc074f681f9d40d36a520d2b891e0295f3600f53a0c74/keepercommander-4.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94bde2a15032f59996760921724324e7", "sha256": "77f42b52cb2b8d475179cd01631323ddba0e5bb7c92279d3d974fad0ff2d940d"}, "downloads": -1, "filename": "keepercommander-4.11.tar.gz", "has_sig": true, "md5_digest": "94bde2a15032f59996760921724324e7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 160852, "upload_time": "2019-08-14T16:54:57", "upload_time_iso_8601": "2019-08-14T16:54:57.405443Z", "url": "https://files.pythonhosted.org/packages/2d/8b/7b24721b7317207a5755f02e684bf77bf897e2ace2823c7fc413c8fb59c6/keepercommander-4.11.tar.gz", "yanked": false}], "4.12": [{"comment_text": "", "digests": {"md5": "f4b832dca1ac664c32f51ec0dd53c2c1", "sha256": "3aefbb62d5eed159b5ea3ff98a45e8fcaaaa1507c4ef9ea235aab7981f085118"}, "downloads": -1, "filename": "keepercommander-4.12-py3-none-any.whl", "has_sig": true, "md5_digest": "f4b832dca1ac664c32f51ec0dd53c2c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 152222, "upload_time": "2019-08-24T00:04:54", "upload_time_iso_8601": "2019-08-24T00:04:54.629699Z", "url": "https://files.pythonhosted.org/packages/8c/58/8cbbe71ce23a1fecf61a2f32c15e36a79bc49cfdbcce47ddf29e35028a06/keepercommander-4.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd522b7a02c52a99232791647547b9af", "sha256": "bcdecb990bf272e3694565d4888c78b534e8c8a6aeb91e5968f55da9855fa36c"}, "downloads": -1, "filename": "keepercommander-4.12.tar.gz", "has_sig": true, "md5_digest": "fd522b7a02c52a99232791647547b9af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 161335, "upload_time": "2019-08-24T00:04:59", "upload_time_iso_8601": "2019-08-24T00:04:59.356613Z", "url": "https://files.pythonhosted.org/packages/79/97/30176c70087e6635ddf12612194426d4c423e2045a43e9f17b57f31f5cf5/keepercommander-4.12.tar.gz", "yanked": false}], "4.13": [{"comment_text": "", "digests": {"md5": "97930747129d46adcb18d2c98986dad8", "sha256": "4f95fcdfed3051173fe7696a7fccebc468a12fe213c3816fe1d08b9c97b7445c"}, "downloads": -1, "filename": "keepercommander-4.13-py3-none-any.whl", "has_sig": true, "md5_digest": "97930747129d46adcb18d2c98986dad8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 152280, "upload_time": "2019-09-11T13:31:02", "upload_time_iso_8601": "2019-09-11T13:31:02.874863Z", "url": "https://files.pythonhosted.org/packages/61/44/a3168636d43df95438858412d73a8eb90fd0577c58edcff3f9aadd49bc69/keepercommander-4.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9425a568ca502adbd665e4d082a13af", "sha256": "671214586fdde813e06b88bdd89b0bcc8e6cd819a73aeb724751f242708ff3d8"}, "downloads": -1, "filename": "keepercommander-4.13.tar.gz", "has_sig": true, "md5_digest": "a9425a568ca502adbd665e4d082a13af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 161431, "upload_time": "2019-09-11T13:31:05", "upload_time_iso_8601": "2019-09-11T13:31:05.738880Z", "url": "https://files.pythonhosted.org/packages/34/68/208a1ae3154d07eb2198f6688f8e8ebff956d3fd54e2ddda70a7c697e0a4/keepercommander-4.13.tar.gz", "yanked": false}], "4.14": [{"comment_text": "", "digests": {"md5": "0f45b3301e1987db95efd01639ae0b00", "sha256": "49a41c2ce0961b895878629e9fbe29b9774ebb85899c5359e319c27c40fe2177"}, "downloads": -1, "filename": "keepercommander-4.14-py3-none-any.whl", "has_sig": true, "md5_digest": "0f45b3301e1987db95efd01639ae0b00", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 152316, "upload_time": "2019-09-24T03:58:41", "upload_time_iso_8601": "2019-09-24T03:58:41.730793Z", "url": "https://files.pythonhosted.org/packages/a2/00/732be3c2a8c6a8621aa55931700b9c5ec6dd0d6e273c280e92e7a46d6e24/keepercommander-4.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34740de21af6dd885253405bd85b8068", "sha256": "17d90e9aae1f6a7f81d2e920ad89ec7d7e93acb6ae9adb271169c03ec815480d"}, "downloads": -1, "filename": "keepercommander-4.14.tar.gz", "has_sig": true, "md5_digest": "34740de21af6dd885253405bd85b8068", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 161486, "upload_time": "2019-09-24T03:58:46", "upload_time_iso_8601": "2019-09-24T03:58:46.630779Z", "url": "https://files.pythonhosted.org/packages/f0/0b/f596f7f0eb9b1bc2eb01fcd1ed22352e27ba73b953e0f4c193dcaa89d2b5/keepercommander-4.14.tar.gz", "yanked": false}], "4.15": [{"comment_text": "", "digests": {"md5": "54fc99f23563996f18c9260deed19df0", "sha256": "eca3541bdf4852a1eebb7778054c99a09e9b9a98d6a8ce59e568af3ccd92e9d9"}, "downloads": -1, "filename": "keepercommander-4.15-py3-none-any.whl", "has_sig": true, "md5_digest": "54fc99f23563996f18c9260deed19df0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 155167, "upload_time": "2019-09-28T00:54:31", "upload_time_iso_8601": "2019-09-28T00:54:31.717371Z", "url": "https://files.pythonhosted.org/packages/9c/68/ac51ffc546a768289ee4f1ce5e28d9437d8d70fbaffa5a47f49afa2f06d8/keepercommander-4.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71b8d89713e9a1f241d39157fb378072", "sha256": "1325625e6aab0802fc87218e3f104915f6a70b0defa0785c0a3acc6e39223caa"}, "downloads": -1, "filename": "keepercommander-4.15.tar.gz", "has_sig": true, "md5_digest": "71b8d89713e9a1f241d39157fb378072", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 166630, "upload_time": "2019-09-28T00:54:34", "upload_time_iso_8601": "2019-09-28T00:54:34.670232Z", "url": "https://files.pythonhosted.org/packages/f4/fc/d5e3ebff90f9f002105096f7460784b4303ff2f0a01154573cd596dcacec/keepercommander-4.15.tar.gz", "yanked": false}], "4.17": [{"comment_text": "", "digests": {"md5": "cc59ced2a333fc258eb6d6d074ff2357", "sha256": "fc037472983bbabe2139486c1e9165e21f7f58011aa551ed63074ae8ca4605cb"}, "downloads": -1, "filename": "keepercommander-4.17-py3-none-any.whl", "has_sig": true, "md5_digest": "cc59ced2a333fc258eb6d6d074ff2357", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 166203, "upload_time": "2019-10-07T16:52:47", "upload_time_iso_8601": "2019-10-07T16:52:47.598650Z", "url": "https://files.pythonhosted.org/packages/27/04/a3604fed7b2e2c241627bc0902f15cd264e0ab5a66d52d82a12c461ed4b5/keepercommander-4.17-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dc5cf0a3a90e3ba00e1567b7e1c17977", "sha256": "94c89d8675f8da46418fa22bd9898e435037b0d2514588399aafdbfc7007aa1b"}, "downloads": -1, "filename": "keepercommander-4.17.tar.gz", "has_sig": true, "md5_digest": "dc5cf0a3a90e3ba00e1567b7e1c17977", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 170920, "upload_time": "2019-10-07T16:52:50", "upload_time_iso_8601": "2019-10-07T16:52:50.898776Z", "url": "https://files.pythonhosted.org/packages/38/40/650a633e8a8a4552c142a2afc01c5f3cd03a6b3211767b3c78461f8d773b/keepercommander-4.17.tar.gz", "yanked": false}], "4.18": [{"comment_text": "", "digests": {"md5": "d8bc4c7a23fdc215c3aa4ee4be218006", "sha256": "1a172a7a52c9fde845d0f558a6392eba10b88e130a0b2347520e6f442af301f8"}, "downloads": -1, "filename": "keepercommander-4.18-py3-none-any.whl", "has_sig": true, "md5_digest": "d8bc4c7a23fdc215c3aa4ee4be218006", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 163367, "upload_time": "2019-10-12T00:09:45", "upload_time_iso_8601": "2019-10-12T00:09:45.355202Z", "url": "https://files.pythonhosted.org/packages/27/45/1e671f482a5bf7c6205093997dc6763253d7d10d86c1934000aec90e3547/keepercommander-4.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e393f317796e51b3b5cd9dcf621ca37", "sha256": "d54458b186292b747be0885c2241e41d03f8fc182f2281fbf6b64ff43dee90cd"}, "downloads": -1, "filename": "keepercommander-4.18.tar.gz", "has_sig": true, "md5_digest": "8e393f317796e51b3b5cd9dcf621ca37", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 178730, "upload_time": "2019-10-12T00:09:49", "upload_time_iso_8601": "2019-10-12T00:09:49.578568Z", "url": "https://files.pythonhosted.org/packages/ac/a4/84ec598fea4dead9261b46292ef7284f6db80009d6646a887579a647846f/keepercommander-4.18.tar.gz", "yanked": false}], "4.19": [{"comment_text": "", "digests": {"md5": "0ccc665fe0ea00c17085d03eaadbb40e", "sha256": "a54c96e875d94c617751a047092c5ea4d656d3339e4ee55792afab551a430448"}, "downloads": -1, "filename": "keepercommander-4.19-py3-none-any.whl", "has_sig": true, "md5_digest": "0ccc665fe0ea00c17085d03eaadbb40e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 163948, "upload_time": "2019-10-30T20:53:46", "upload_time_iso_8601": "2019-10-30T20:53:46.947957Z", "url": "https://files.pythonhosted.org/packages/cd/5c/dfc4bd3c114b2c0718b0253eb139a70725323dcf3724e781a6ebfd0b3b83/keepercommander-4.19-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8647d4738ee8b82e690499fff7636eb", "sha256": "ef7f1e5cb5bfdf51812242278e47fee2f87e95926ec5f3908147529fb3050b29"}, "downloads": -1, "filename": "keepercommander-4.19.tar.gz", "has_sig": true, "md5_digest": "f8647d4738ee8b82e690499fff7636eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 179303, "upload_time": "2019-10-30T20:53:50", "upload_time_iso_8601": "2019-10-30T20:53:50.876756Z", "url": "https://files.pythonhosted.org/packages/36/82/5e8166f0d0c4e49cf4a8efe84b3807c6906ab25931a3fe300a244828fe4e/keepercommander-4.19.tar.gz", "yanked": false}], "4.2": [{"comment_text": "", "digests": {"md5": "34f4f0d46231595c9dc42ac06d89ae7e", "sha256": "19b24b3a9e1f677709e4c45c904e733bf0ccf40940474e00ddcdb642b41e4792"}, "downloads": -1, "filename": "keepercommander-4.2-py3-none-any.whl", "has_sig": true, "md5_digest": "34f4f0d46231595c9dc42ac06d89ae7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 144824, "upload_time": "2019-05-10T01:07:45", "upload_time_iso_8601": "2019-05-10T01:07:45.710873Z", "url": "https://files.pythonhosted.org/packages/8a/01/8f9d46e1f97016a86ba758768de3dbea6716787d053c73ecea3c36c06d10/keepercommander-4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b538f08a61b5fa41db25841547b7575", "sha256": "9e27cf5f03ad0555a2e37070f7358a3ebd7e49076a01f8a9a60159bc839f96a4"}, "downloads": -1, "filename": "keepercommander-4.2.tar.gz", "has_sig": true, "md5_digest": "6b538f08a61b5fa41db25841547b7575", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 139725, "upload_time": "2019-05-10T01:07:47", "upload_time_iso_8601": "2019-05-10T01:07:47.797883Z", "url": "https://files.pythonhosted.org/packages/90/83/463eb61c1adee88273ffca3bbd8f7ab0b2d04cfb8c96251f2e92f7c5f9c4/keepercommander-4.2.tar.gz", "yanked": false}], "4.20": [{"comment_text": "", "digests": {"md5": "633b77d769649ccc2c5ab56e1456f39e", "sha256": "d4f013b5ff8bd60576676dc23290defcdbb20ca28832373e57e36408848ae5b3"}, "downloads": -1, "filename": "keepercommander-4.20-py3-none-any.whl", "has_sig": true, "md5_digest": "633b77d769649ccc2c5ab56e1456f39e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 165076, "upload_time": "2019-11-14T20:20:52", "upload_time_iso_8601": "2019-11-14T20:20:52.427746Z", "url": "https://files.pythonhosted.org/packages/e9/2e/531c444bc495eb5a0e48daee75340589d1a82e06db45e6fc262fd4e2acdb/keepercommander-4.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33e59fcd97fbf283a4a44d51351b8554", "sha256": "752a2095e0ee985361920cfa499821682e990515630f40844f5a2a3edd3f5e1e"}, "downloads": -1, "filename": "keepercommander-4.20.tar.gz", "has_sig": true, "md5_digest": "33e59fcd97fbf283a4a44d51351b8554", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 180652, "upload_time": "2019-11-14T20:20:55", "upload_time_iso_8601": "2019-11-14T20:20:55.382776Z", "url": "https://files.pythonhosted.org/packages/a9/b4/8232263b07d6c27a53b1d2378af2c07837ce462269d550dcf32fbbeb5dbd/keepercommander-4.20.tar.gz", "yanked": false}], "4.21": [{"comment_text": "", "digests": {"md5": "0e38818b97044ce1006aa3e1f8cecc0f", "sha256": "45aab82d438365257326a7bcada1ddd49496ee1604bb44d2de9a8d01b74d6675"}, "downloads": -1, "filename": "keepercommander-4.21-py3-none-any.whl", "has_sig": true, "md5_digest": "0e38818b97044ce1006aa3e1f8cecc0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 165214, "upload_time": "2019-11-22T05:53:24", "upload_time_iso_8601": "2019-11-22T05:53:24.030517Z", "url": "https://files.pythonhosted.org/packages/f5/14/f8ae1ed0f6628cfc2540c7fc5fa228577e4d7290bc1203dca3d69824bf9a/keepercommander-4.21-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52569f6745da9a92f61fc63dd4da7675", "sha256": "9ec3acff59d40ee116ed12ca56233e45e0cd394217b5aeda4e165500f1864a02"}, "downloads": -1, "filename": "keepercommander-4.21.tar.gz", "has_sig": true, "md5_digest": "52569f6745da9a92f61fc63dd4da7675", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 180768, "upload_time": "2019-11-22T05:53:27", "upload_time_iso_8601": "2019-11-22T05:53:27.001760Z", "url": "https://files.pythonhosted.org/packages/8e/d1/6498afaee7271b62cd06c6399e73d881a6f482e87f2ea11f9e325f678db4/keepercommander-4.21.tar.gz", "yanked": false}], "4.22": [{"comment_text": "", "digests": {"md5": "c5f41f54bcf09a80ee6d447f7f86e281", "sha256": "0bc02b28427750d9de70165fdb8addef68bd2dc25324435600e117043cb11b7d"}, "downloads": -1, "filename": "keepercommander-4.22-py3-none-any.whl", "has_sig": true, "md5_digest": "c5f41f54bcf09a80ee6d447f7f86e281", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 173709, "upload_time": "2019-12-13T20:04:19", "upload_time_iso_8601": "2019-12-13T20:04:19.341533Z", "url": "https://files.pythonhosted.org/packages/8c/88/5d8ea00f086f50e743698a7c931c54ec1456ba4c6e9ff649485bb52680fe/keepercommander-4.22-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3f9155f4c2ee0a91407ddc8cb1516f5", "sha256": "71c715dc5158e0937d1d30defa28e08ab8658cdc19cce6d9790f9cd05e8be2f3"}, "downloads": -1, "filename": "keepercommander-4.22.tar.gz", "has_sig": true, "md5_digest": "f3f9155f4c2ee0a91407ddc8cb1516f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 181545, "upload_time": "2019-12-13T20:04:21", "upload_time_iso_8601": "2019-12-13T20:04:21.990296Z", "url": "https://files.pythonhosted.org/packages/05/09/cb02c8192951370a9b889153e1523b45a9712191962e45728d4a8bd271b6/keepercommander-4.22.tar.gz", "yanked": false}], "4.23": [{"comment_text": "", "digests": {"md5": "5d50ff8f10a5049645a07b6359ce6f64", "sha256": "98c5db1ee5ec0b5fa002948982528ad40648c86bfcc47536a895690e2ae069c7"}, "downloads": -1, "filename": "keepercommander-4.23-py3-none-any.whl", "has_sig": true, "md5_digest": "5d50ff8f10a5049645a07b6359ce6f64", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 174418, "upload_time": "2019-12-20T22:53:35", "upload_time_iso_8601": "2019-12-20T22:53:35.461438Z", "url": "https://files.pythonhosted.org/packages/db/82/32038715764868725306950c9733ef170f248510aa2fa2f567e16f0902de/keepercommander-4.23-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "161160f9a702d6401e1608bf48bb96fb", "sha256": "c1a3e09b8e717d74ce18e96f66d5d6388803cb997b34f9b9311c70110597a8d4"}, "downloads": -1, "filename": "keepercommander-4.23.tar.gz", "has_sig": true, "md5_digest": "161160f9a702d6401e1608bf48bb96fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 182806, "upload_time": "2019-12-20T22:53:37", "upload_time_iso_8601": "2019-12-20T22:53:37.998210Z", "url": "https://files.pythonhosted.org/packages/89/61/e70e57172845b861666357d44de001a2a7d39e470c2297c9e18d007a3b4a/keepercommander-4.23.tar.gz", "yanked": false}], "4.24": [{"comment_text": "", "digests": {"md5": "a19d9ba7eea785939371ca24931f2ddb", "sha256": "8a09ec966608cf32c72d2f06b528572230fca3ee8bafd6ac55fbaad9f8f01215"}, "downloads": -1, "filename": "keepercommander-4.24-py3-none-any.whl", "has_sig": true, "md5_digest": "a19d9ba7eea785939371ca24931f2ddb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 169070, "upload_time": "2019-12-25T02:39:20", "upload_time_iso_8601": "2019-12-25T02:39:20.303716Z", "url": "https://files.pythonhosted.org/packages/54/54/db317bab06b414081057e725c669b776402462b41d4b6be48fe65396709f/keepercommander-4.24-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fcad1b6a728fb231a0b3e5dfabc2986b", "sha256": "6bb4bd510107fc3589ae1c437abfe4aca1770523eb3d1a953ff3f7dbc16579d8"}, "downloads": -1, "filename": "keepercommander-4.24.tar.gz", "has_sig": true, "md5_digest": "fcad1b6a728fb231a0b3e5dfabc2986b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 185625, "upload_time": "2019-12-25T02:39:23", "upload_time_iso_8601": "2019-12-25T02:39:23.279191Z", "url": "https://files.pythonhosted.org/packages/63/2e/fe2a78c6b126c143bdf87c7008d0253f59893a2b044a05ffed9ff9bca9d3/keepercommander-4.24.tar.gz", "yanked": false}], "4.25": [{"comment_text": "", "digests": {"md5": "193f8dc088137e18ce5d31f8985787be", "sha256": "833a5fd97e80e1e0fea0904ce762c5ff63a14b0988e6f5e2a8edadbf6153aae0"}, "downloads": -1, "filename": "keepercommander-4.25-py3-none-any.whl", "has_sig": true, "md5_digest": "193f8dc088137e18ce5d31f8985787be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 177707, "upload_time": "2020-01-06T20:47:26", "upload_time_iso_8601": "2020-01-06T20:47:26.089911Z", "url": "https://files.pythonhosted.org/packages/ff/d8/a9e4ca78f27dc39ac130c6f4f31e3990963dacf6d7d2bb7a8e4848dff6d5/keepercommander-4.25-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "68123972a82accabd13df4b7d8e99548", "sha256": "a171a3e622908d880c56109bcc746a8474dd2a147da2c71cf491692adec13846"}, "downloads": -1, "filename": "keepercommander-4.25.tar.gz", "has_sig": true, "md5_digest": "68123972a82accabd13df4b7d8e99548", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 186081, "upload_time": "2020-01-06T20:47:29", "upload_time_iso_8601": "2020-01-06T20:47:29.037160Z", "url": "https://files.pythonhosted.org/packages/ce/f1/43094c70284167b8ba85aff28f2ae7ff78469dc9234f2ea7b2efc0b55d55/keepercommander-4.25.tar.gz", "yanked": false}], "4.26": [{"comment_text": "", "digests": {"md5": "a5caec042e2c17b57851ad64c9464459", "sha256": "0c593aa7ded1fe6890e03d26f9002c43539b3b76f6fdc77c8b89a540e11773dc"}, "downloads": -1, "filename": "keepercommander-4.26-py3-none-any.whl", "has_sig": true, "md5_digest": "a5caec042e2c17b57851ad64c9464459", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 177980, "upload_time": "2020-01-10T04:40:55", "upload_time_iso_8601": "2020-01-10T04:40:55.170547Z", "url": "https://files.pythonhosted.org/packages/f9/a0/cd958e1c89f1c4ce53a4f55bdee15518ceb45a9dc910f2cfda932dbd50e2/keepercommander-4.26-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f98da78a7f5c8a2d8fc6af195fe13c83", "sha256": "4703abb927075d01815d4924c993532fe8396022e2bca6a68b2f067a2939ea22"}, "downloads": -1, "filename": "keepercommander-4.26.tar.gz", "has_sig": true, "md5_digest": "f98da78a7f5c8a2d8fc6af195fe13c83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 186430, "upload_time": "2020-01-10T04:40:58", "upload_time_iso_8601": "2020-01-10T04:40:58.446237Z", "url": "https://files.pythonhosted.org/packages/0a/88/d0e450b72de6f322e0ed676a082711c9efce8441308e2b3577c69606aed6/keepercommander-4.26.tar.gz", "yanked": false}], "4.27": [{"comment_text": "", "digests": {"md5": "88511f487e915414167f50773fe9894b", "sha256": "e27a8ef139bdeb3c22a9eec8ca043b6c22c0e5fb3babe82799814969852fab6e"}, "downloads": -1, "filename": "keepercommander-4.27-py3-none-any.whl", "has_sig": true, "md5_digest": "88511f487e915414167f50773fe9894b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 170634, "upload_time": "2020-01-28T12:36:10", "upload_time_iso_8601": "2020-01-28T12:36:10.370971Z", "url": "https://files.pythonhosted.org/packages/de/57/6dd7c9dd2d800337040cfe611c7f6edc3aac6af936f8e8e8e26a4022939d/keepercommander-4.27-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ddbe657ad0a9d9abac9dead969da3459", "sha256": "663812cdaa50bb3fb7bcb0b2ca406191485650b6848cc88dbf41a8ad68f18308"}, "downloads": -1, "filename": "keepercommander-4.27.tar.gz", "has_sig": true, "md5_digest": "ddbe657ad0a9d9abac9dead969da3459", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 187294, "upload_time": "2020-01-28T12:36:13", "upload_time_iso_8601": "2020-01-28T12:36:13.140667Z", "url": "https://files.pythonhosted.org/packages/85/d8/114d04a703d5191efb179d951a802e0936055ee56469c7c665fd2a8220d1/keepercommander-4.27.tar.gz", "yanked": false}], "4.28": [{"comment_text": "", "digests": {"md5": "da7b1dc2a1d3ed45b954ac0b3fdaf1f5", "sha256": "ae22d06845ec80bc165b9c3e60f8f9a297818ff14359f4f0bd5f0ab491a6fc9d"}, "downloads": -1, "filename": "keepercommander-4.28-py3-none-any.whl", "has_sig": true, "md5_digest": "da7b1dc2a1d3ed45b954ac0b3fdaf1f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 183256, "upload_time": "2020-02-07T22:17:47", "upload_time_iso_8601": "2020-02-07T22:17:47.101589Z", "url": "https://files.pythonhosted.org/packages/83/71/ece80939bb90fce6ec2890f81d09f1ca5366a00c7ada62a339f73fc0ae41/keepercommander-4.28-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99ed1d1b570f0aec5cb3d3580345b604", "sha256": "074d386b77eea97674a3e06faee5f3b744aac63ac68bf6bbc29af7908080d399"}, "downloads": -1, "filename": "keepercommander-4.28.tar.gz", "has_sig": true, "md5_digest": "99ed1d1b570f0aec5cb3d3580345b604", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 192069, "upload_time": "2020-02-07T22:17:49", "upload_time_iso_8601": "2020-02-07T22:17:49.390453Z", "url": "https://files.pythonhosted.org/packages/59/25/dc1895f707159b24daa512ed00d02655ec8b3f69ff496a48a90f9e506a86/keepercommander-4.28.tar.gz", "yanked": false}], "4.29": [{"comment_text": "", "digests": {"md5": "ef956019a2f7fe255b917b30bab1cacd", "sha256": "c39e8a08ef6a0d4e330598aa4546882e6ceddf97b0f7f02ee084239b67cbad4a"}, "downloads": -1, "filename": "keepercommander-4.29-py3-none-any.whl", "has_sig": true, "md5_digest": "ef956019a2f7fe255b917b30bab1cacd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 184311, "upload_time": "2020-02-28T23:30:29", "upload_time_iso_8601": "2020-02-28T23:30:29.279764Z", "url": "https://files.pythonhosted.org/packages/9e/34/e0d322625562d69878f72a5b06ea3a47365a66347e1320d4c012ffc44fd6/keepercommander-4.29-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "11c4a761e0cc4bcadc2666f260f065f3", "sha256": "95cf0afea9cdf726f1c54830d027538eef4d66b149d0725ed59aa1e81a1a5e52"}, "downloads": -1, "filename": "keepercommander-4.29.tar.gz", "has_sig": true, "md5_digest": "11c4a761e0cc4bcadc2666f260f065f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 193416, "upload_time": "2020-02-28T23:30:32", "upload_time_iso_8601": "2020-02-28T23:30:32.234435Z", "url": "https://files.pythonhosted.org/packages/ac/b1/c104d9fb8add09e96f152a32e1be87987db8c0ab93c6f58e69835c9ae8c4/keepercommander-4.29.tar.gz", "yanked": false}], "4.3": [{"comment_text": "", "digests": {"md5": "38fffdcfb1b635fc54f06f217836a06a", "sha256": "6ba2740c603422f634cd059b068793900e81f2f318a20757f1ff1f61ea8a66ab"}, "downloads": -1, "filename": "keepercommander-4.3-py3-none-any.whl", "has_sig": true, "md5_digest": "38fffdcfb1b635fc54f06f217836a06a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 146491, "upload_time": "2019-05-11T01:16:55", "upload_time_iso_8601": "2019-05-11T01:16:55.751446Z", "url": "https://files.pythonhosted.org/packages/0e/88/b6fb80c3364ce64a92f23df95c6dbec925ed1b1037e0c74597bff7e67ba4/keepercommander-4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ee23bac9e5d57b01a1d9ccc2e3dac01", "sha256": "b8b74f29de2b5ea20c6bf421ce23f0d826d8b74a002723e07c095f31364152df"}, "downloads": -1, "filename": "keepercommander-4.3.tar.gz", "has_sig": true, "md5_digest": "5ee23bac9e5d57b01a1d9ccc2e3dac01", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 139737, "upload_time": "2019-05-11T01:16:57", "upload_time_iso_8601": "2019-05-11T01:16:57.824864Z", "url": "https://files.pythonhosted.org/packages/81/e8/58956133b0c794730751a8539233a4b1ba96cc6fe1aadd1fa7bb3938ccf7/keepercommander-4.3.tar.gz", "yanked": false}], "4.30": [{"comment_text": "", "digests": {"md5": "59c40f8d92ac016decae321f30292eac", "sha256": "82a9b1d1d3a870615ea949332df6d176d64430e3fbcaf03525b133c671930a36"}, "downloads": -1, "filename": "keepercommander-4.30-py3-none-any.whl", "has_sig": true, "md5_digest": "59c40f8d92ac016decae321f30292eac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 187184, "upload_time": "2020-03-19T22:41:31", "upload_time_iso_8601": "2020-03-19T22:41:31.557116Z", "url": "https://files.pythonhosted.org/packages/0d/9a/06e725aafe4e75b9b6233aecd325e3923dc9ac548f8b4001480e1b0825f0/keepercommander-4.30-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dcc666a1d91feb43d241de1dce4536a4", "sha256": "82b319b7d77c63ba9386c5dcbb3a2a1521f01dd1f5aa06019ec403fc31293522"}, "downloads": -1, "filename": "keepercommander-4.30.tar.gz", "has_sig": true, "md5_digest": "dcc666a1d91feb43d241de1dce4536a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 196407, "upload_time": "2020-03-19T22:41:34", "upload_time_iso_8601": "2020-03-19T22:41:34.145842Z", "url": "https://files.pythonhosted.org/packages/35/a0/bb42aada8cea04c3c89b27f00f225c98b17a72ccea94082a166c09f7a55a/keepercommander-4.30.tar.gz", "yanked": false}], "4.31": [{"comment_text": "", "digests": {"md5": "fd07d7652442b25e3327ed4ec255a5ad", "sha256": "0f728cbeb4bbe69b5d3c1acd1c98e16b9c88ff4a8f46b23fc945c0481795d67b"}, "downloads": -1, "filename": "keepercommander-4.31-py3-none-any.whl", "has_sig": true, "md5_digest": "fd07d7652442b25e3327ed4ec255a5ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 188431, "upload_time": "2020-03-25T05:30:55", "upload_time_iso_8601": "2020-03-25T05:30:55.187683Z", "url": "https://files.pythonhosted.org/packages/67/ee/cccd861dcc1dc679ab3d94e541e143bd39e28c732046ac5605ce4b3c8325/keepercommander-4.31-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34cc4e9ddb942d56164897968f94b134", "sha256": "ecb089ff81e55cbe5caaf1743e4418e0cf8f51110a4bbee61f3152c8b41ad24f"}, "downloads": -1, "filename": "keepercommander-4.31.tar.gz", "has_sig": true, "md5_digest": "34cc4e9ddb942d56164897968f94b134", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 197734, "upload_time": "2020-03-25T05:30:58", "upload_time_iso_8601": "2020-03-25T05:30:58.080824Z", "url": "https://files.pythonhosted.org/packages/e3/66/713d45e3dc52ea868bbb58bad08919234d2def9338acf414d3e66b3550b2/keepercommander-4.31.tar.gz", "yanked": false}], "4.4": [{"comment_text": "", "digests": {"md5": "a27880f89b75e5ed4dfd4f09aee395cd", "sha256": "7105d7f8f285cc5d1a7c8122600fa075c09cd4ca4ae739e69c3e33312bdceb69"}, "downloads": -1, "filename": "keepercommander-4.4-py3-none-any.whl", "has_sig": true, "md5_digest": "a27880f89b75e5ed4dfd4f09aee395cd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 140039, "upload_time": "2019-05-29T02:56:41", "upload_time_iso_8601": "2019-05-29T02:56:41.507903Z", "url": "https://files.pythonhosted.org/packages/e0/7b/2021d229e11e57409f33b169098fa6aba55e4399f4830a58f7f4bc9ea9fa/keepercommander-4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b4d91d94eedd4cc7215b71c793749eb", "sha256": "9e57f53c6aa87e838510fe421039ae146ff7ddfb87fa2677e5aa3c14a376135d"}, "downloads": -1, "filename": "keepercommander-4.4.tar.gz", "has_sig": true, "md5_digest": "9b4d91d94eedd4cc7215b71c793749eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 147048, "upload_time": "2019-05-29T02:56:45", "upload_time_iso_8601": "2019-05-29T02:56:45.733008Z", "url": "https://files.pythonhosted.org/packages/18/ab/6e7843b78fe622692189660b93451ee227fe0659bfc551000886200fa902/keepercommander-4.4.tar.gz", "yanked": false}], "4.5": [{"comment_text": "", "digests": {"md5": "4b2474af3e22be80501c560bfa97424d", "sha256": "afb01396f730a05e7b1bc6861ed6bfc35c3d6271fac351d1e3176a98b9968273"}, "downloads": -1, "filename": "keepercommander-4.5-py3-none-any.whl", "has_sig": true, "md5_digest": "4b2474af3e22be80501c560bfa97424d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 140020, "upload_time": "2019-05-30T18:31:35", "upload_time_iso_8601": "2019-05-30T18:31:35.495870Z", "url": "https://files.pythonhosted.org/packages/bc/b3/a51d48a86f685531b7032ea9b4417400ecaeb96e38f29a5f237186f8e7b8/keepercommander-4.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4c67d2617dc9f647ea1f25e0b58be29", "sha256": "c8277717ec1c7afc8307f80cc072090b6b9f2ea25ff1532c8be097a9d0a17ec5"}, "downloads": -1, "filename": "keepercommander-4.5.tar.gz", "has_sig": true, "md5_digest": "d4c67d2617dc9f647ea1f25e0b58be29", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 146998, "upload_time": "2019-05-30T18:31:41", "upload_time_iso_8601": "2019-05-30T18:31:41.694975Z", "url": "https://files.pythonhosted.org/packages/bd/53/06a71e8f0c16a8e75abda36431f88552a3be3b4422fd7e3a475284020a7f/keepercommander-4.5.tar.gz", "yanked": false}], "4.6": [{"comment_text": "", "digests": {"md5": "3c5b2174539ff2c8aea03eff94592294", "sha256": "8fd88ea8220a45fa8e4ad14c9413dcbac7eec0d4b2649e98983e68321635b5b8"}, "downloads": -1, "filename": "keepercommander-4.6-py3-none-any.whl", "has_sig": true, "md5_digest": "3c5b2174539ff2c8aea03eff94592294", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 150150, "upload_time": "2019-06-05T19:44:19", "upload_time_iso_8601": "2019-06-05T19:44:19.150243Z", "url": "https://files.pythonhosted.org/packages/e4/40/ca0f83506a1f298e0b1e32849a712b65116e821eb6bcb93d02c7c47fe43b/keepercommander-4.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce9d664a4e71a00b74a392c4c7fd0c58", "sha256": "156db25a812af26bf06f378a8253cf59f8b936961e6a9a71f84d86f0e6379caf"}, "downloads": -1, "filename": "keepercommander-4.6.tar.gz", "has_sig": true, "md5_digest": "ce9d664a4e71a00b74a392c4c7fd0c58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 149629, "upload_time": "2019-06-05T19:44:21", "upload_time_iso_8601": "2019-06-05T19:44:21.858149Z", "url": "https://files.pythonhosted.org/packages/c9/bc/bd885ab114ce2afb3fba4e0bc276a8ce49e35b8b539ed93052f7e6a2e306/keepercommander-4.6.tar.gz", "yanked": false}], "4.7": [{"comment_text": "", "digests": {"md5": "0fce9a8d51d02a6575a876d4a4ff6bbd", "sha256": "84b0f6862ed41be257edf914a1d66b401ae8c5c2a2b659ebf3071e2c56f65445"}, "downloads": -1, "filename": "keepercommander-4.7-py3-none-any.whl", "has_sig": true, "md5_digest": "0fce9a8d51d02a6575a876d4a4ff6bbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 151357, "upload_time": "2019-06-14T19:48:46", "upload_time_iso_8601": "2019-06-14T19:48:46.405407Z", "url": "https://files.pythonhosted.org/packages/b7/79/e84b7e974f1127c92b17f0ec29d39464deba4a5e9c23a300d2703689629a/keepercommander-4.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8992f1615f545867291d5942d48c4ed0", "sha256": "d114792a6e1a30e8bf3abb7b94984b4d17f08606e6e7a2223af2d3b2ec61ae31"}, "downloads": -1, "filename": "keepercommander-4.7.tar.gz", "has_sig": true, "md5_digest": "8992f1615f545867291d5942d48c4ed0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 150892, "upload_time": "2019-06-14T19:48:49", "upload_time_iso_8601": "2019-06-14T19:48:49.091370Z", "url": "https://files.pythonhosted.org/packages/4b/71/98d8e85d7f0c45846d5aeaf5aeafd610be8610d16aaccbfad295d9be91fd/keepercommander-4.7.tar.gz", "yanked": false}], "4.8": [{"comment_text": "", "digests": {"md5": "15c0390bec62a19566b87f26544cabec", "sha256": "3ad7890a2b900695ff68ddfea6494ffc8d5d36491b70c3fc24bfc214dc682b6b"}, "downloads": -1, "filename": "keepercommander-4.8-py3-none-any.whl", "has_sig": true, "md5_digest": "15c0390bec62a19566b87f26544cabec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 143991, "upload_time": "2019-07-20T00:39:49", "upload_time_iso_8601": "2019-07-20T00:39:49.149751Z", "url": "https://files.pythonhosted.org/packages/10/c9/8a337eaf0738145691050a6c8e0e5ac6815831bed0b80152b50df80f89f6/keepercommander-4.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "90363b6bc0bc90b3ab0acc52fd51d9fe", "sha256": "26806b88b625fccc4452aaefd9f7a9b30fde2955f58fefb2b0d1017845b03991"}, "downloads": -1, "filename": "keepercommander-4.8.tar.gz", "has_sig": true, "md5_digest": "90363b6bc0bc90b3ab0acc52fd51d9fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 152742, "upload_time": "2019-07-20T00:39:57", "upload_time_iso_8601": "2019-07-20T00:39:57.132053Z", "url": "https://files.pythonhosted.org/packages/d3/a2/5a78e4cc84280e9c33f7423c903ee95df802488999a298b2e019c9fa626a/keepercommander-4.8.tar.gz", "yanked": false}], "4.9": [{"comment_text": "", "digests": {"md5": "88dccc7354da5a170ba4af12089c68b2", "sha256": "c20831a0b11c3b1dad9e8569a072e8bb0704a7bf8008b615581dcc84a3354ada"}, "downloads": -1, "filename": "keepercommander-4.9-py3-none-any.whl", "has_sig": true, "md5_digest": "88dccc7354da5a170ba4af12089c68b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 145816, "upload_time": "2019-07-27T14:25:37", "upload_time_iso_8601": "2019-07-27T14:25:37.833484Z", "url": "https://files.pythonhosted.org/packages/8e/e1/885871d2deecda6c8958812ab217ec90d9a69b07f0c9c504646a4f447123/keepercommander-4.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "463da64f04ce1fba10d95e442220f835", "sha256": "cc33ce74b36f8202c9c25b8ced74076a49ccf067b4018ab38a5d56cf2dd361ab"}, "downloads": -1, "filename": "keepercommander-4.9.tar.gz", "has_sig": true, "md5_digest": "463da64f04ce1fba10d95e442220f835", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 154547, "upload_time": "2019-07-27T14:25:40", "upload_time_iso_8601": "2019-07-27T14:25:40.998783Z", "url": "https://files.pythonhosted.org/packages/81/36/49b1c4234938830448040dbce4a33041541130d80e9ff959c80a7863be75/keepercommander-4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd07d7652442b25e3327ed4ec255a5ad", "sha256": "0f728cbeb4bbe69b5d3c1acd1c98e16b9c88ff4a8f46b23fc945c0481795d67b"}, "downloads": -1, "filename": "keepercommander-4.31-py3-none-any.whl", "has_sig": true, "md5_digest": "fd07d7652442b25e3327ed4ec255a5ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 188431, "upload_time": "2020-03-25T05:30:55", "upload_time_iso_8601": "2020-03-25T05:30:55.187683Z", "url": "https://files.pythonhosted.org/packages/67/ee/cccd861dcc1dc679ab3d94e541e143bd39e28c732046ac5605ce4b3c8325/keepercommander-4.31-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "34cc4e9ddb942d56164897968f94b134", "sha256": "ecb089ff81e55cbe5caaf1743e4418e0cf8f51110a4bbee61f3152c8b41ad24f"}, "downloads": -1, "filename": "keepercommander-4.31.tar.gz", "has_sig": true, "md5_digest": "34cc4e9ddb942d56164897968f94b134", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 197734, "upload_time": "2020-03-25T05:30:58", "upload_time_iso_8601": "2020-03-25T05:30:58.080824Z", "url": "https://files.pythonhosted.org/packages/e3/66/713d45e3dc52ea868bbb58bad08919234d2def9338acf414d3e66b3550b2/keepercommander-4.31.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:21 2020"}