{"info": {"author": "Carlos Pais", "author_email": "freemind@lavabit.com", "bugtrack_url": null, "classifiers": [], "description": ".. -*- rst -*-\n\n==========\nWatchVideo\n==========\n\n:Project page: http://savannah.nongnu.org/projects/watchvideo\n:Homepage: http://www.nongnu.org/watchvideo/\n:License: GNU Affero General Public License v3+\n:Version: 2.2.1\n\nWatchVideo is an application to download or watch videos from many popular Flash\nbased sites using an external player or built-in VLC.\n\nRequirements\n============\n\nFor both GUI and CLI interface:\n\n* Python 2.6, 2.7, 3.1 or later\n* GetMediumURL 0.0a2 or later\n* Distribute (``python-setuptools``)\n\nThe installation script will automatically install GetMediumURL if it\nis not available.  It requires ``lxml`` which should be installed from\ndistribution package before (in Debian-based GNU/Linux distributions\nit is named ``python-lxml``).\n\nFor GUI only:\n\n* PyQt4 (``python-qt4``) or PySide\n* VLC version 1.1 (optional, required for built-in player)\n* ``python-notify`` (optional): uses the system's default mechanism to\n  show notification messages\n* FFmpeg (optional): needed for all operations related with video\n  conversion, ripping or the built-in player.\n* FFmpeg2theora (optional): needed to convert videos to Ogg Vorbis or\n  Theora, but not for ripping audio\n\nIf you downloaded through Subversion:\n\n* ``pyqt4-dev-tools`` (``pylupdate4``, ``pyrcc4``, ``pyuic4``)\n* ``libqt4-dev`` (``lrelease``)\n* Inkscape\n* OptiPNG (optional)\n* docutils\n\nPyQt4 is used by default.  When it is not found, PySide is used but\nthere are known bugs when using it.  Set the environment variable\n``WATCHVIDEO_QT`` to a space-separated sequence of package names tried to\nuse a different package (e.g. ``WATCHVIDEO_QT=PySide`` to use PySide on\nsystems where PyQt4 is installed).\n\n\nInstallation using ``easy_install``\n===================================\n\n.. note::\n\n    This method doesn't install the desktop file nor the icon.\n    \n    Optional dependencies should be installed separately.\n\nTo install the newest version of WatchVideo using easy_install use the following command (as **root**):\n\n``easy_install -U WatchVideo`` \n\n\n\nInstallation from source\n========================\n\nOpen a terminal in the extracted source folder and type ``sudo make install``.\n\nThese options (specified after ``make``) can be used to change the\ninstallation directory:\n\n  ``prefix``\n    default is ``/usr/local``\n  ``datarootdir``\n    default is ``$prefix/share``\n\nUnless the prefix is changed, root priviledges are needed for\ninstallation.\n\nTo use different Python interpreter than the one found by the ``python``\ncommand, specify it as the ``PYTHON`` variable.\n\nYou can instead call ``python setup.py install`` with options described\nby ``python setup.py --help install`` and optionally install menu entry\nand icon by ``make install-data``.\n\nInstallation of additional data (Optional)\n======================================================\nIn case you don't have the **desktop file** and/or the **icon**, you can install them with the following command (as **root**):\n\n``wget -O /usr/share/applications/watchvideo.desktop http://mirrors.fe.up.pt/pub/nongnu/watchvideo/watchvideo.desktop && wget -O /usr/share/pixmaps/watchvideo.svg http://mirrors.fe.up.pt/pub/nongnu/watchvideo/watchvideo.svg``\n\nUsing\n=====\n\nIf installed\n------------\n\nIf you installed the desktop file and icon there should be an entry in your menu under the Audio and Video section.\n\n\nYou can also call the app with the command::\n\n  qtwatchvideo [OPTIONS] URL1 URL2 ...\n\nor simply::\n\n  qtwatchvideo\n\nRun ``qtwatchvideo --help`` to see all options of the GUI version.\n\nIf you want to use the CLI version::\n\n  watchvideo [OPTIONS] URL1 URL2 ...\n\nRun ``watchvideo --help`` to see all options of the CLI version.\n\nIf not installed\n----------------\n\n.. note::\n\n   If you downloaded through Subversion, first you need to do ``make``\n   to generate the necessary files.\n\nRunning ``python setup.py develop --user`` with put scripts needed to\nrun WatchVideo in ``$HOME/.local/bin``, and use other file from the\ndirectory where the source is located.  You might use the programs as\n``~/.local/bin/qtwatchvideo`` and similarly ``watchvideo``, or write\n\n::\n\n  export PATH=$HOME/.local/bin:$PATH\n\nbefore to use them like when installed.\n\nUpdating plugins\n================\n\nWatchVideo uses a package called GetMediumURL to get the information\nfrom the video-sharing websites.  Some of these sites often change\ntheir interfaces, when this happens it won't find the video.  In this case try to\nupdate GetMediumURL, by doing the following in a terminal:\n``easy_install -U GetMediumURL`` or using your distribution packages for\nit.\n\nTranslating\n===========\n\nIf you wish to translate this application, do the following:\n\n1. Open a terminal in the source distribution directory.\n2. Do ``make check-dependencies`` to see if you have the necessary\n   dependencies.\n3. Add a reference for your language to ``L10N`` in the Makefile.\n4. Do ``make`` to generate the necessary files.\n5. Translate the ``.ts`` file generated in the ``po``\n   subdirectory. You can use Qt Linguist or any text editor of your\n   choice.\n6. When you're ready to test your translation, do ``make`` again.", "description_content_type": null, "docs_url": null, "download_url": "http://download.savannah.gnu.org/releases/watchvideo/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://qt-apps.org/content/show.php/WatchVideo?content=128368", "keywords": null, "license": "GNU Affero General Public License v3 or later", "maintainer": null, "maintainer_email": null, "name": "WatchVideo", "package_url": "https://pypi.org/project/WatchVideo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/WatchVideo/", "project_urls": {"Download": "http://download.savannah.gnu.org/releases/watchvideo/", "Homepage": "http://qt-apps.org/content/show.php/WatchVideo?content=128368"}, "release_url": "https://pypi.org/project/WatchVideo/2.2.1/", "requires_dist": null, "requires_python": null, "summary": "A small application to play or download videos from various YouTube-like sites.", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Project page:</th><td><a href=\"http://savannah.nongnu.org/projects/watchvideo\" rel=\"nofollow\">http://savannah.nongnu.org/projects/watchvideo</a></td>\n</tr>\n<tr><th>Homepage:</th><td><a href=\"http://www.nongnu.org/watchvideo/\" rel=\"nofollow\">http://www.nongnu.org/watchvideo/</a></td>\n</tr>\n<tr><th>License:</th><td>GNU Affero General Public License v3+</td>\n</tr>\n<tr><th>Version:</th>\n<td>2.2.1</td></tr>\n</tbody>\n</table>\n<p>WatchVideo is an application to download or watch videos from many popular Flash\nbased sites using an external player or built-in VLC.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>For both GUI and CLI interface:</p>\n<ul>\n<li>Python 2.6, 2.7, 3.1 or later</li>\n<li>GetMediumURL 0.0a2 or later</li>\n<li>Distribute (<tt><span class=\"pre\">python-setuptools</span></tt>)</li>\n</ul>\n<p>The installation script will automatically install GetMediumURL if it\nis not available.  It requires <tt>lxml</tt> which should be installed from\ndistribution package before (in Debian-based GNU/Linux distributions\nit is named <tt><span class=\"pre\">python-lxml</span></tt>).</p>\n<p>For GUI only:</p>\n<ul>\n<li>PyQt4 (<tt><span class=\"pre\">python-qt4</span></tt>) or PySide</li>\n<li>VLC version 1.1 (optional, required for built-in player)</li>\n<li><tt><span class=\"pre\">python-notify</span></tt> (optional): uses the system\u2019s default mechanism to\nshow notification messages</li>\n<li>FFmpeg (optional): needed for all operations related with video\nconversion, ripping or the built-in player.</li>\n<li>FFmpeg2theora (optional): needed to convert videos to Ogg Vorbis or\nTheora, but not for ripping audio</li>\n</ul>\n<p>If you downloaded through Subversion:</p>\n<ul>\n<li><tt><span class=\"pre\">pyqt4-dev-tools</span></tt> (<tt>pylupdate4</tt>, <tt>pyrcc4</tt>, <tt>pyuic4</tt>)</li>\n<li><tt><span class=\"pre\">libqt4-dev</span></tt> (<tt>lrelease</tt>)</li>\n<li>Inkscape</li>\n<li>OptiPNG (optional)</li>\n<li>docutils</li>\n</ul>\n<p>PyQt4 is used by default.  When it is not found, PySide is used but\nthere are known bugs when using it.  Set the environment variable\n<tt>WATCHVIDEO_QT</tt> to a space-separated sequence of package names tried to\nuse a different package (e.g. <tt>WATCHVIDEO_QT=PySide</tt> to use PySide on\nsystems where PyQt4 is installed).</p>\n</div>\n<div id=\"installation-using-easy-install\">\n<h2>Installation using <tt>easy_install</tt></h2>\n<div>\n<p>Note</p>\n<p>This method doesn\u2019t install the desktop file nor the icon.</p>\n<p>Optional dependencies should be installed separately.</p>\n</div>\n<p>To install the newest version of WatchVideo using easy_install use the following command (as <strong>root</strong>):</p>\n<p><tt>easy_install <span class=\"pre\">-U</span> WatchVideo</tt></p>\n</div>\n<div id=\"installation-from-source\">\n<h2>Installation from source</h2>\n<p>Open a terminal in the extracted source folder and type <tt>sudo make install</tt>.</p>\n<p>These options (specified after <tt>make</tt>) can be used to change the\ninstallation directory:</p>\n<blockquote>\n<dl>\n<dt><tt>prefix</tt></dt>\n<dd>default is <tt>/usr/local</tt></dd>\n<dt><tt>datarootdir</tt></dt>\n<dd>default is <tt>$prefix/share</tt></dd>\n</dl>\n</blockquote>\n<p>Unless the prefix is changed, root priviledges are needed for\ninstallation.</p>\n<p>To use different Python interpreter than the one found by the <tt>python</tt>\ncommand, specify it as the <tt>PYTHON</tt> variable.</p>\n<p>You can instead call <tt>python setup.py install</tt> with options described\nby <tt>python setup.py <span class=\"pre\">--help</span> install</tt> and optionally install menu entry\nand icon by <tt>make <span class=\"pre\">install-data</span></tt>.</p>\n</div>\n<div id=\"installation-of-additional-data-optional\">\n<h2>Installation of additional data (Optional)</h2>\n<p>In case you don\u2019t have the <strong>desktop file</strong> and/or the <strong>icon</strong>, you can install them with the following command (as <strong>root</strong>):</p>\n<p><tt>wget <span class=\"pre\">-O</span> /usr/share/applications/watchvideo.desktop <span class=\"pre\">http://mirrors.fe.up.pt/pub/nongnu/watchvideo/watchvideo.desktop</span> &amp;&amp; wget <span class=\"pre\">-O</span> /usr/share/pixmaps/watchvideo.svg <span class=\"pre\">http://mirrors.fe.up.pt/pub/nongnu/watchvideo/watchvideo.svg</span></tt></p>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<div id=\"if-installed\">\n<h3>If installed</h3>\n<p>If you installed the desktop file and icon there should be an entry in your menu under the Audio and Video section.</p>\n<p>You can also call the app with the command:</p>\n<pre>qtwatchvideo [OPTIONS] URL1 URL2 ...\n</pre>\n<p>or simply:</p>\n<pre>qtwatchvideo\n</pre>\n<p>Run <tt>qtwatchvideo <span class=\"pre\">--help</span></tt> to see all options of the GUI version.</p>\n<p>If you want to use the CLI version:</p>\n<pre>watchvideo [OPTIONS] URL1 URL2 ...\n</pre>\n<p>Run <tt>watchvideo <span class=\"pre\">--help</span></tt> to see all options of the CLI version.</p>\n</div>\n<div id=\"if-not-installed\">\n<h3>If not installed</h3>\n<div>\n<p>Note</p>\n<p>If you downloaded through Subversion, first you need to do <tt>make</tt>\nto generate the necessary files.</p>\n</div>\n<p>Running <tt>python setup.py develop <span class=\"pre\">--user</span></tt> with put scripts needed to\nrun WatchVideo in <tt><span class=\"pre\">$HOME/.local/bin</span></tt>, and use other file from the\ndirectory where the source is located.  You might use the programs as\n<tt><span class=\"pre\">~/.local/bin/qtwatchvideo</span></tt> and similarly <tt>watchvideo</tt>, or write</p>\n<pre>export PATH=$HOME/.local/bin:$PATH\n</pre>\n<p>before to use them like when installed.</p>\n</div>\n</div>\n<div id=\"updating-plugins\">\n<h2>Updating plugins</h2>\n<p>WatchVideo uses a package called GetMediumURL to get the information\nfrom the video-sharing websites.  Some of these sites often change\ntheir interfaces, when this happens it won\u2019t find the video.  In this case try to\nupdate GetMediumURL, by doing the following in a terminal:\n<tt>easy_install <span class=\"pre\">-U</span> GetMediumURL</tt> or using your distribution packages for\nit.</p>\n</div>\n<div id=\"translating\">\n<h2>Translating</h2>\n<p>If you wish to translate this application, do the following:</p>\n<ol>\n<li>Open a terminal in the source distribution directory.</li>\n<li>Do <tt>make <span class=\"pre\">check-dependencies</span></tt> to see if you have the necessary\ndependencies.</li>\n<li>Add a reference for your language to <tt>L10N</tt> in the Makefile.</li>\n<li>Do <tt>make</tt> to generate the necessary files.</li>\n<li>Translate the <tt>.ts</tt> file generated in the <tt>po</tt>\nsubdirectory. You can use Qt Linguist or any text editor of your\nchoice.</li>\n<li>When you\u2019re ready to test your translation, do <tt>make</tt> again.</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 332520, "releases": {"2.1": [{"comment_text": "", "digests": {"md5": "245ef7349473ea2460b7597b43daa93e", "sha256": "ffada5946455ec4050cfbe9811f88c1f15ce8e6a495e329af8dce4c6c86a0367"}, "downloads": -1, "filename": "WatchVideo-2.1.tar.gz", "has_sig": false, "md5_digest": "245ef7349473ea2460b7597b43daa93e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544386, "upload_time": "2011-03-10T23:23:02", "upload_time_iso_8601": "2011-03-10T23:23:02.878883Z", "url": "https://files.pythonhosted.org/packages/4a/83/8d724dda95f7795a2ed7692b0930ceebe9e76c2135eabe84e80cd84542f0/WatchVideo-2.1.tar.gz", "yanked": false}], "2.2": [{"comment_text": "", "digests": {"md5": "e6009c5f85c560f4cc5a938bc0b202b8", "sha256": "e44a59e4336693b3042201d6c1eeddafeeeb7f63ad3505cef19777d5a8c4425d"}, "downloads": -1, "filename": "WatchVideo-2.2.tar.gz", "has_sig": false, "md5_digest": "e6009c5f85c560f4cc5a938bc0b202b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 568576, "upload_time": "2011-05-26T21:08:05", "upload_time_iso_8601": "2011-05-26T21:08:05.501773Z", "url": "https://files.pythonhosted.org/packages/06/58/e59965b9a6f8b2e6ab6b7fce6ed677773c49ad76f3a266d06bb55a98c0c2/WatchVideo-2.2.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "f8bea1dab1534cb01f5c3f268536e0d3", "sha256": "102f65de2267808749ce53befe26fad4846ccd0656cf7ffc8110cc38b28f3084"}, "downloads": -1, "filename": "WatchVideo-2.2.1.tar.gz", "has_sig": false, "md5_digest": "f8bea1dab1534cb01f5c3f268536e0d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 570093, "upload_time": "2011-07-12T19:55:25", "upload_time_iso_8601": "2011-07-12T19:55:25.813715Z", "url": "https://files.pythonhosted.org/packages/51/6e/eb46fe94e1913169497d0663c22237954ee35b84b54540173739e03477c9/WatchVideo-2.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8bea1dab1534cb01f5c3f268536e0d3", "sha256": "102f65de2267808749ce53befe26fad4846ccd0656cf7ffc8110cc38b28f3084"}, "downloads": -1, "filename": "WatchVideo-2.2.1.tar.gz", "has_sig": false, "md5_digest": "f8bea1dab1534cb01f5c3f268536e0d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 570093, "upload_time": "2011-07-12T19:55:25", "upload_time_iso_8601": "2011-07-12T19:55:25.813715Z", "url": "https://files.pythonhosted.org/packages/51/6e/eb46fe94e1913169497d0663c22237954ee35b84b54540173739e03477c9/WatchVideo-2.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:32:08 2020"}