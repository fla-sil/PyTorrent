{"info": {"author": "Saranraj Nambusubramaniyan", "author_email": "saran_nns@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "## Self-Organizing Recurrent Neural Networks \n\nSORN is a class of neuro-inspired artificial network build based on plasticity mechanisms in biological brain and mimic neocortical circuits ability of learning and adaptation through neuroplasticity mechanisms.\n\nFor ease of maintanance, example use cases and the API(under developement) are moved to https://github.com/Saran-nns/PySORN_0.1 \n\n[![Build Status](https://travis-ci.org/Saran-nns/sorn.svg?branch=master)](https://travis-ci.org/Saran-nns/sorn)\n[![codecov](https://codecov.io/gh/Saran-nns/sorn/branch/master/graph/badge.svg)](https://codecov.io/gh/Saran-nns/sorn)\n[![Join the chat at https://gitter.im/Self-Organizing-Recurrent-Neural-Networks](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Self-Organizing-Recurrent-Neural-Networks?utm_source=badge&utm_medium=badge&utm_content=badge)\n[![PyPI version](https://badge.fury.io/py/sorn.svg)](https://badge.fury.io/py/sorn)\n![PyPI - Downloads](https://img.shields.io/pypi/dw/sorn.svg)\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.2593681.svg)](https://doi.org/10.5281/zenodo.2593681)\n[![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](https://opensource.org/licenses/Apache-2.0)\n\n<h4 align=\"Left\">SORN Reservoir and the evolution of synaptic efficacies</h4> \n<a href=\"url\"><img src=\"https://github.com/Saran-nns/PySORN_0.1/blob/master/v0.1.0/doc/images/SORN1.png\" height=\"320\" width=\"430\" ></a> <a href=\"url\"><img src=\"https://github.com/Saran-nns/PySORN_0.1/blob/master/v0.1.0/doc/images/weights.png\" height=\"375\" width=\"425\" ></a>\t\n\n<h4 align=\"center\">Neural Connectome</h4> \n<p align=\"center\">\n<a href=\"url\"><img src=\"https://github.com/Saran-nns/PySORN_0.1/blob/master/v0.1.0/doc/images/neuralcorrelationall.png\" height=\"450\" width=\"450\" ></a>\n</p>\n\n#### To install the latest release:\n\n```python\npip install sorn\n```\n\nThe library is still in alpha stage, so you may also want to install the latest version from the development branch:\n\n```python\npip install git+https://github.com/Saran-nns/sorn\n```\n\n#### Dependencies\nSORN supports Python 3.5+ ONLY. For older Python versions please use the official Python client\n\n\n#### Usage:\n\n##### Update Network configurations\n\nNavigate to home/conda/envs/ENVNAME/Lib/site-packages/sorn\n\nor if you are unsure about the directory of sorn\n\nRun\n\n```python\nimport sorn\n\nsorn.__file__\n```\nto find the location of the sorn package\n\nThen, update/edit the configuration.ini\n\n\n##### Plasticity Phase\n\n```Python\n# Import \nfrom sorn.sorn import RunSorn\n\n# Sample input \ninputs = [0.]\n\n# To simulate the network; \nmatrices_dict, Exc_activity, Inh_activity, Rec_activity, num_active_connections = RunSorn(phase='Plasticity', matrices=None,\n                                                                          time_steps=100).run_sorn(inputs)\n\n# To resume the simulation, load the matrices_dict from previous simulation;\nmatrices_dict, Exc_activity, Inh_activity, Rec_activity, num_active_connections = RunSorn(phase='Plasticity', matrices=matrices_dict,\n                                                                          time_steps=100).run_sorn(inputs)\n```\n\n##### Training phase:\n\n```Python\nmatrices_dict, Exc_activity, Inh_activity, Rec_activity, num_active_connections = RunSorn(phase='Training', matrices=matrices_dict,\n                                                                          time_steps=100).run_sorn(inputs)\n```\n\n#### Network Output Descriptions:\n    matrices_dict  - Dictionary of connection weights ('Wee','Wei','Wie') , Excitatory network activity ('X'), Inhibitory network activities('Y'), Threshold values ('Te','Ti')\n\n    Exc_activity - Collection of Excitatory network activity of entire simulation period\n\n    Inh_activitsy - Collection of Inhibitory network activity of entire simulation period\n\n    Rec_activity - Collection of Recurrent network activity of entire simulation period\n\n    num_active_connections - List of number of active connections in the Excitatory pool at each time step \n\n\n#### Sample use with OpenAI gym :\n##### Cartpole balance problem\n```python\n# Imports\n\nimport utils.InitHelper as initializer\nfrom sorn.sorn import Sorn, Plasticity, TrainSorn, TrainSornPlasticity\nimport gym\n\n# Load the simulated network matrices\n# Note these matrices are obtained after the network achieved convergence under random inputs and noise\n\nwith open('simulation_matrices.pkl','rb') as f:  \n    sim_matrices,excit_states,inhib_states,recur_states,num_reservoir_conn = pickle.load(f)\n\n\n# Training parameters\n\nNUM_EPISODES = 2e6\nNUM_PLASTICITY_EPISODES = 20000\n\nenv = gym.make('CartPole-v0')\n\nfor EPISODE in range(NUM_EPISODES):\n\n    # Environment observation\n    state = env.reset()[None,:]\n\n    # Play the episode\n\n    while True:\n\n      if EPISODE < NUM_PLASTICITY_EPISODE:\n\n        # Plasticity phase\n        sim_matrices,excit_states,inhib_states,recur_states,num_reservoir_conn = TrainSornPlasticity.train_sorn(phase = 'Plasticity',\n                                                                                                            matrices = sim_matrices,\n                                                                                                            inputs = state)\n\n      else:\n        # Training phase with frozen reservoir connectivity\n        sim_matrices,excit_states,inhib_states,recur_states,num_reservoir_conn = TrainSorn.train_sorn(phase = 'Training',\n                                                                                                            matrices = sim_matrices,\n                                                                                                            inputs = state)\n\n      # Feed excit_states as input states to your RL algorithm, below goes for simple policy gradient algorithm\n      # Sample policy w.r.t excitatory states and take action in the environment\n\n      probs = policy(np.asarray(excit_states),output_layer_weights))\n      action = np.random.choice(action_space,probs)\n      state,reward,done,_ = env.step(action) \n\n      if done:\n        break\n```\n\n\n#### Sample Plotting functions \n\n```Python\nfrom sorn.utils import Plotter\n# Plot weight distribution in the network\nPlotter.weight_distribution(weights= matrices_dict['Wee'], bin_size = 5, savefig = False)\n\n# Plot Spike train of all neurons in the network\nPlotter.scatter_plot(spike_train = np.asarray(Exc_activity), savefig=False)\n\n\nPlotter.raster_plot(spike_train = np.asarray(Exc_activity), savefig=False)\n```\n\n#### Sample Statistical analysis functions\n\n```Python\nfrom sorn.utils import Statistics\n#t-lagged auto correlation between neural activity\nStatistics.autocorr(firing_rates = [1,1,5,6,3,7],t= 2)\n\n# Fano factor: To verify poissonian process in spike generation of neuron 10\nStatistics.fanofactor(spike_train= np.asarray(Exc_activity),neuron = 10,window_size = 10)\n```\n\n#### The network is inspired by folowing articles:\n\nLazar, A. (2009). SORN: a Self-organizing Recurrent Neural Network. Frontiers in Computational Neuroscience, 3. https://doi.org/10.3389/neuro.10.023.2009\n\nHartmann, C., Lazar, A., Nessler, B., & Triesch, J. (2015). Where\u00e2\u20ac\u2122s the Noise? Key Features of Spontaneous Activity and Neural Variability Arise through Learning in a Deterministic Network. PLoS Computational Biology, 11(12). https://doi.org/10.1371/journal.pcbi.1004640 \n\nDel Papa, B., Priesemann, V., & Triesch, J. (2017). Criticality meets learning: Criticality signatures in a self-organizing recurrent neural network. PLoS ONE, 12(5). https://doi.org/10.1371/journal.pone.0178683 \n\nZheng, P., Dimitrakakis, C., & Triesch, J. (2013). Network Self-Organization Explains the Statistics and Dynamics of Synaptic Connection Strengths in Cortex. PLoS Computational Biology, 9(1). https://doi.org/10.1371/journal.pcbi.1002848  \n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Saran-nns/sorn", "keywords": "Brain-Inspired Computing,Artificial Neural Networks,Neuro Informatics,Spiking Cortical Networks,Neural Connectomics,Neuroscience,Artificial General Intelligence,Neural Information Processing", "license": "OSI Approved :: MIT License", "maintainer": "", "maintainer_email": "", "name": "sorn", "package_url": "https://pypi.org/project/sorn/", "platform": "", "project_url": "https://pypi.org/project/sorn/", "project_urls": {"Homepage": "https://github.com/Saran-nns/sorn"}, "release_url": "https://pypi.org/project/sorn/0.2.7/", "requires_dist": ["numpy", "configparser", "tqdm", "scipy", "seaborn"], "requires_python": "", "summary": "Self-Organizing Recurrent Neural Networks", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Self-Organizing Recurrent Neural Networks</h2>\n<p>SORN is a class of neuro-inspired artificial network build based on plasticity mechanisms in biological brain and mimic neocortical circuits ability of learning and adaptation through neuroplasticity mechanisms.</p>\n<p>For ease of maintanance, example use cases and the API(under developement) are moved to <a href=\"https://github.com/Saran-nns/PySORN_0.1\" rel=\"nofollow\">https://github.com/Saran-nns/PySORN_0.1</a></p>\n<p><a href=\"https://travis-ci.org/Saran-nns/sorn\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b983fa61861c506c0728915fce59e5abac566d2f/68747470733a2f2f7472617669732d63692e6f72672f536172616e2d6e6e732f736f726e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/Saran-nns/sorn\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61b9fd55f8372b2de7f7f32716f6031d1ae71c6b/68747470733a2f2f636f6465636f762e696f2f67682f536172616e2d6e6e732f736f726e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://gitter.im/Self-Organizing-Recurrent-Neural-Networks?utm_source=badge&amp;utm_medium=badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/Self-Organizing-Recurrent-Neural-Networks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a>\n<a href=\"https://badge.fury.io/py/sorn\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6d4e68860e25526d943fef4c508a0884b76d769/68747470733a2f2f62616467652e667572792e696f2f70792f736f726e2e737667\"></a>\n<img alt=\"PyPI - Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ee80a3d9e6c936a31a1ac760657931c84c9f949/68747470733a2f2f696d672e736869656c64732e696f2f707970692f64772f736f726e2e737667\">\n<a href=\"https://doi.org/10.5281/zenodo.2593681\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fefd27537ae99264afc0cdc2482f263fc6e2f5e7/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e323539333638312e737667\"></a>\n<a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<h4>SORN Reservoir and the evolution of synaptic efficacies</h4> \n<a href=\"url\" rel=\"nofollow\"><img height=\"320\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f585ae949d5974a1d99061712b3685c4d2f6a60/68747470733a2f2f6769746875622e636f6d2f536172616e2d6e6e732f5079534f524e5f302e312f626c6f622f6d61737465722f76302e312e302f646f632f696d616765732f534f524e312e706e67\" width=\"430\"></a> <a href=\"url\" rel=\"nofollow\"><img height=\"375\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/46c792819ceca100c2ef3a70249e5f9650f729b1/68747470733a2f2f6769746875622e636f6d2f536172616e2d6e6e732f5079534f524e5f302e312f626c6f622f6d61737465722f76302e312e302f646f632f696d616765732f776569676874732e706e67\" width=\"425\"></a>\t\n<h4>Neural Connectome</h4> \n<p align=\"center\">\n<a href=\"url\" rel=\"nofollow\"><img height=\"450\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24683b1f5a972471498699fd1402db2eed1a3348/68747470733a2f2f6769746875622e636f6d2f536172616e2d6e6e732f5079534f524e5f302e312f626c6f622f6d61737465722f76302e312e302f646f632f696d616765732f6e657572616c636f7272656c6174696f6e616c6c2e706e67\" width=\"450\"></a>\n</p>\n<h4>To install the latest release:</h4>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">sorn</span>\n</pre>\n<p>The library is still in alpha stage, so you may also want to install the latest version from the development branch:</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">git</span><span class=\"o\">+</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">github</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">Saran</span><span class=\"o\">-</span><span class=\"n\">nns</span><span class=\"o\">/</span><span class=\"n\">sorn</span>\n</pre>\n<h4>Dependencies</h4>\n<p>SORN supports Python 3.5+ ONLY. For older Python versions please use the official Python client</p>\n<h4>Usage:</h4>\n<h5>Update Network configurations</h5>\n<p>Navigate to home/conda/envs/ENVNAME/Lib/site-packages/sorn</p>\n<p>or if you are unsure about the directory of sorn</p>\n<p>Run</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sorn</span>\n\n<span class=\"n\">sorn</span><span class=\"o\">.</span><span class=\"vm\">__file__</span>\n</pre>\n<p>to find the location of the sorn package</p>\n<p>Then, update/edit the configuration.ini</p>\n<h5>Plasticity Phase</h5>\n<pre><span class=\"c1\"># Import </span>\n<span class=\"kn\">from</span> <span class=\"nn\">sorn.sorn</span> <span class=\"kn\">import</span> <span class=\"n\">RunSorn</span>\n\n<span class=\"c1\"># Sample input </span>\n<span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mf\">0.</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># To simulate the network; </span>\n<span class=\"n\">matrices_dict</span><span class=\"p\">,</span> <span class=\"n\">Exc_activity</span><span class=\"p\">,</span> <span class=\"n\">Inh_activity</span><span class=\"p\">,</span> <span class=\"n\">Rec_activity</span><span class=\"p\">,</span> <span class=\"n\">num_active_connections</span> <span class=\"o\">=</span> <span class=\"n\">RunSorn</span><span class=\"p\">(</span><span class=\"n\">phase</span><span class=\"o\">=</span><span class=\"s1\">'Plasticity'</span><span class=\"p\">,</span> <span class=\"n\">matrices</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n                                                                          <span class=\"n\">time_steps</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run_sorn</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># To resume the simulation, load the matrices_dict from previous simulation;</span>\n<span class=\"n\">matrices_dict</span><span class=\"p\">,</span> <span class=\"n\">Exc_activity</span><span class=\"p\">,</span> <span class=\"n\">Inh_activity</span><span class=\"p\">,</span> <span class=\"n\">Rec_activity</span><span class=\"p\">,</span> <span class=\"n\">num_active_connections</span> <span class=\"o\">=</span> <span class=\"n\">RunSorn</span><span class=\"p\">(</span><span class=\"n\">phase</span><span class=\"o\">=</span><span class=\"s1\">'Plasticity'</span><span class=\"p\">,</span> <span class=\"n\">matrices</span><span class=\"o\">=</span><span class=\"n\">matrices_dict</span><span class=\"p\">,</span>\n                                                                          <span class=\"n\">time_steps</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run_sorn</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n</pre>\n<h5>Training phase:</h5>\n<pre><span class=\"n\">matrices_dict</span><span class=\"p\">,</span> <span class=\"n\">Exc_activity</span><span class=\"p\">,</span> <span class=\"n\">Inh_activity</span><span class=\"p\">,</span> <span class=\"n\">Rec_activity</span><span class=\"p\">,</span> <span class=\"n\">num_active_connections</span> <span class=\"o\">=</span> <span class=\"n\">RunSorn</span><span class=\"p\">(</span><span class=\"n\">phase</span><span class=\"o\">=</span><span class=\"s1\">'Training'</span><span class=\"p\">,</span> <span class=\"n\">matrices</span><span class=\"o\">=</span><span class=\"n\">matrices_dict</span><span class=\"p\">,</span>\n                                                                          <span class=\"n\">time_steps</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">run_sorn</span><span class=\"p\">(</span><span class=\"n\">inputs</span><span class=\"p\">)</span>\n</pre>\n<h4>Network Output Descriptions:</h4>\n<pre><code>matrices_dict  - Dictionary of connection weights ('Wee','Wei','Wie') , Excitatory network activity ('X'), Inhibitory network activities('Y'), Threshold values ('Te','Ti')\n\nExc_activity - Collection of Excitatory network activity of entire simulation period\n\nInh_activitsy - Collection of Inhibitory network activity of entire simulation period\n\nRec_activity - Collection of Recurrent network activity of entire simulation period\n\nnum_active_connections - List of number of active connections in the Excitatory pool at each time step \n</code></pre>\n<h4>Sample use with OpenAI gym :</h4>\n<h5>Cartpole balance problem</h5>\n<pre><span class=\"c1\"># Imports</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">utils.InitHelper</span> <span class=\"k\">as</span> <span class=\"nn\">initializer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sorn.sorn</span> <span class=\"kn\">import</span> <span class=\"n\">Sorn</span><span class=\"p\">,</span> <span class=\"n\">Plasticity</span><span class=\"p\">,</span> <span class=\"n\">TrainSorn</span><span class=\"p\">,</span> <span class=\"n\">TrainSornPlasticity</span>\n<span class=\"kn\">import</span> <span class=\"nn\">gym</span>\n\n<span class=\"c1\"># Load the simulated network matrices</span>\n<span class=\"c1\"># Note these matrices are obtained after the network achieved convergence under random inputs and noise</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'simulation_matrices.pkl'</span><span class=\"p\">,</span><span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>  \n    <span class=\"n\">sim_matrices</span><span class=\"p\">,</span><span class=\"n\">excit_states</span><span class=\"p\">,</span><span class=\"n\">inhib_states</span><span class=\"p\">,</span><span class=\"n\">recur_states</span><span class=\"p\">,</span><span class=\"n\">num_reservoir_conn</span> <span class=\"o\">=</span> <span class=\"n\">pickle</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Training parameters</span>\n\n<span class=\"n\">NUM_EPISODES</span> <span class=\"o\">=</span> <span class=\"mf\">2e6</span>\n<span class=\"n\">NUM_PLASTICITY_EPISODES</span> <span class=\"o\">=</span> <span class=\"mi\">20000</span>\n\n<span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">gym</span><span class=\"o\">.</span><span class=\"n\">make</span><span class=\"p\">(</span><span class=\"s1\">'CartPole-v0'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">EPISODE</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">NUM_EPISODES</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># Environment observation</span>\n    <span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()[</span><span class=\"kc\">None</span><span class=\"p\">,:]</span>\n\n    <span class=\"c1\"># Play the episode</span>\n\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\n      <span class=\"k\">if</span> <span class=\"n\">EPISODE</span> <span class=\"o\">&lt;</span> <span class=\"n\">NUM_PLASTICITY_EPISODE</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># Plasticity phase</span>\n        <span class=\"n\">sim_matrices</span><span class=\"p\">,</span><span class=\"n\">excit_states</span><span class=\"p\">,</span><span class=\"n\">inhib_states</span><span class=\"p\">,</span><span class=\"n\">recur_states</span><span class=\"p\">,</span><span class=\"n\">num_reservoir_conn</span> <span class=\"o\">=</span> <span class=\"n\">TrainSornPlasticity</span><span class=\"o\">.</span><span class=\"n\">train_sorn</span><span class=\"p\">(</span><span class=\"n\">phase</span> <span class=\"o\">=</span> <span class=\"s1\">'Plasticity'</span><span class=\"p\">,</span>\n                                                                                                            <span class=\"n\">matrices</span> <span class=\"o\">=</span> <span class=\"n\">sim_matrices</span><span class=\"p\">,</span>\n                                                                                                            <span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"n\">state</span><span class=\"p\">)</span>\n\n      <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Training phase with frozen reservoir connectivity</span>\n        <span class=\"n\">sim_matrices</span><span class=\"p\">,</span><span class=\"n\">excit_states</span><span class=\"p\">,</span><span class=\"n\">inhib_states</span><span class=\"p\">,</span><span class=\"n\">recur_states</span><span class=\"p\">,</span><span class=\"n\">num_reservoir_conn</span> <span class=\"o\">=</span> <span class=\"n\">TrainSorn</span><span class=\"o\">.</span><span class=\"n\">train_sorn</span><span class=\"p\">(</span><span class=\"n\">phase</span> <span class=\"o\">=</span> <span class=\"s1\">'Training'</span><span class=\"p\">,</span>\n                                                                                                            <span class=\"n\">matrices</span> <span class=\"o\">=</span> <span class=\"n\">sim_matrices</span><span class=\"p\">,</span>\n                                                                                                            <span class=\"n\">inputs</span> <span class=\"o\">=</span> <span class=\"n\">state</span><span class=\"p\">)</span>\n\n      <span class=\"c1\"># Feed excit_states as input states to your RL algorithm, below goes for simple policy gradient algorithm</span>\n      <span class=\"c1\"># Sample policy w.r.t excitatory states and take action in the environment</span>\n\n      <span class=\"n\">probs</span> <span class=\"o\">=</span> <span class=\"n\">policy</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">excit_states</span><span class=\"p\">),</span><span class=\"n\">output_layer_weights</span><span class=\"p\">))</span>\n      <span class=\"n\">action</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"n\">action_space</span><span class=\"p\">,</span><span class=\"n\">probs</span><span class=\"p\">)</span>\n      <span class=\"n\">state</span><span class=\"p\">,</span><span class=\"n\">reward</span><span class=\"p\">,</span><span class=\"n\">done</span><span class=\"p\">,</span><span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">env</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">action</span><span class=\"p\">)</span> \n\n      <span class=\"k\">if</span> <span class=\"n\">done</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n</pre>\n<h4>Sample Plotting functions</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sorn.utils</span> <span class=\"kn\">import</span> <span class=\"n\">Plotter</span>\n<span class=\"c1\"># Plot weight distribution in the network</span>\n<span class=\"n\">Plotter</span><span class=\"o\">.</span><span class=\"n\">weight_distribution</span><span class=\"p\">(</span><span class=\"n\">weights</span><span class=\"o\">=</span> <span class=\"n\">matrices_dict</span><span class=\"p\">[</span><span class=\"s1\">'Wee'</span><span class=\"p\">],</span> <span class=\"n\">bin_size</span> <span class=\"o\">=</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">savefig</span> <span class=\"o\">=</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot Spike train of all neurons in the network</span>\n<span class=\"n\">Plotter</span><span class=\"o\">.</span><span class=\"n\">scatter_plot</span><span class=\"p\">(</span><span class=\"n\">spike_train</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">Exc_activity</span><span class=\"p\">),</span> <span class=\"n\">savefig</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">Plotter</span><span class=\"o\">.</span><span class=\"n\">raster_plot</span><span class=\"p\">(</span><span class=\"n\">spike_train</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">Exc_activity</span><span class=\"p\">),</span> <span class=\"n\">savefig</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<h4>Sample Statistical analysis functions</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sorn.utils</span> <span class=\"kn\">import</span> <span class=\"n\">Statistics</span>\n<span class=\"c1\">#t-lagged auto correlation between neural activity</span>\n<span class=\"n\">Statistics</span><span class=\"o\">.</span><span class=\"n\">autocorr</span><span class=\"p\">(</span><span class=\"n\">firing_rates</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],</span><span class=\"n\">t</span><span class=\"o\">=</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Fano factor: To verify poissonian process in spike generation of neuron 10</span>\n<span class=\"n\">Statistics</span><span class=\"o\">.</span><span class=\"n\">fanofactor</span><span class=\"p\">(</span><span class=\"n\">spike_train</span><span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">asarray</span><span class=\"p\">(</span><span class=\"n\">Exc_activity</span><span class=\"p\">),</span><span class=\"n\">neuron</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"n\">window_size</span> <span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<h4>The network is inspired by folowing articles:</h4>\n<p>Lazar, A. (2009). SORN: a Self-organizing Recurrent Neural Network. Frontiers in Computational Neuroscience, 3. <a href=\"https://doi.org/10.3389/neuro.10.023.2009\" rel=\"nofollow\">https://doi.org/10.3389/neuro.10.023.2009</a></p>\n<p>Hartmann, C., Lazar, A., Nessler, B., &amp; Triesch, J. (2015). Where\u00e2\u20ac\u2122s the Noise? Key Features of Spontaneous Activity and Neural Variability Arise through Learning in a Deterministic Network. PLoS Computational Biology, 11(12). <a href=\"https://doi.org/10.1371/journal.pcbi.1004640\" rel=\"nofollow\">https://doi.org/10.1371/journal.pcbi.1004640</a></p>\n<p>Del Papa, B., Priesemann, V., &amp; Triesch, J. (2017). Criticality meets learning: Criticality signatures in a self-organizing recurrent neural network. PLoS ONE, 12(5). <a href=\"https://doi.org/10.1371/journal.pone.0178683\" rel=\"nofollow\">https://doi.org/10.1371/journal.pone.0178683</a></p>\n<p>Zheng, P., Dimitrakakis, C., &amp; Triesch, J. (2013). Network Self-Organization Explains the Statistics and Dynamics of Synaptic Connection Strengths in Cortex. PLoS Computational Biology, 9(1). <a href=\"https://doi.org/10.1371/journal.pcbi.1002848\" rel=\"nofollow\">https://doi.org/10.1371/journal.pcbi.1002848</a></p>\n\n          </div>"}, "last_serial": 6670802, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "4a8c68f60ac16de8e4aa4a3a105c18da", "sha256": "2e6ade21f91c66def72c57355377a742e9e1db514408fd62b3b37ae457026796"}, "downloads": -1, "filename": "sorn-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4a8c68f60ac16de8e4aa4a3a105c18da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15751, "upload_time": "2019-03-10T01:19:03", "upload_time_iso_8601": "2019-03-10T01:19:03.146309Z", "url": "https://files.pythonhosted.org/packages/9f/ff/2c7b682e14d3a7dccd761642afee517bf455ab85706a4600ebb64d1e0438/sorn-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bb1f1aa13408cb3904bfe443279739b", "sha256": "1c18b035cde7315fc85a23ccd2d37f47c5db5a26250eefe00ad8d9c16b84bde3"}, "downloads": -1, "filename": "sorn-0.0.4.tar.gz", "has_sig": false, "md5_digest": "1bb1f1aa13408cb3904bfe443279739b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15962, "upload_time": "2019-03-10T01:19:05", "upload_time_iso_8601": "2019-03-10T01:19:05.407476Z", "url": "https://files.pythonhosted.org/packages/0e/6a/7951508e3931aea395a496f649bfd17940b5dc838019f98cfd2b6b03440e/sorn-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "2d4dbdb1410becd13bffdef76708a0b4", "sha256": "f9d554fdf0f4edb7fe2f7b760e5104b89e423b6cdd2767204721ca09a1176db5"}, "downloads": -1, "filename": "sorn-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "2d4dbdb1410becd13bffdef76708a0b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15841, "upload_time": "2019-03-10T01:41:51", "upload_time_iso_8601": "2019-03-10T01:41:51.923659Z", "url": "https://files.pythonhosted.org/packages/c9/46/83b559bff25977ae92f35c436d989afe26eff4de0ed3278407f83a42cc50/sorn-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f340c3bfb0b728aefcdae293ae115b4", "sha256": "16a72b8650caa6ab853579871dde811cbac96c4b7bad38f99d1548ea27d86c2c"}, "downloads": -1, "filename": "sorn-0.0.5.tar.gz", "has_sig": false, "md5_digest": "0f340c3bfb0b728aefcdae293ae115b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16151, "upload_time": "2019-03-10T01:41:55", "upload_time_iso_8601": "2019-03-10T01:41:55.078466Z", "url": "https://files.pythonhosted.org/packages/8a/62/e73aebcf77074f9ce86dca8fa3b115dc9d87441c8f10f648eeca7ccde916/sorn-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "43ac8d876e8c48e3a204c2fe4afadc01", "sha256": "b7f9d9202e815ccd30a41bdef527e49d45400504d7519e08e0503f21be73e441"}, "downloads": -1, "filename": "sorn-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "43ac8d876e8c48e3a204c2fe4afadc01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15842, "upload_time": "2019-03-10T01:41:53", "upload_time_iso_8601": "2019-03-10T01:41:53.295764Z", "url": "https://files.pythonhosted.org/packages/d9/22/e15a4e1d9310a661a5819e3793a685303816c0df5a4914a3295c3ae6d7a2/sorn-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b66c251a190b7e7a67b7c82e227f4cb", "sha256": "a82e7efa6297dcb9aded4c8a8f8ebbbeb44a5db937c6ac94f809faea3b747f53"}, "downloads": -1, "filename": "sorn-0.0.6.tar.gz", "has_sig": false, "md5_digest": "5b66c251a190b7e7a67b7c82e227f4cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16146, "upload_time": "2019-03-10T01:41:56", "upload_time_iso_8601": "2019-03-10T01:41:56.393165Z", "url": "https://files.pythonhosted.org/packages/d0/a5/e8548860c3464dfbd0b24f05362cbfc7c73fa5eebec758acddf42c649f05/sorn-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "26f6b0063669ab7bd31a46b4bcb4c839", "sha256": "e522a8b2e7f9518b9871d3ca534b2094ff49cb5ac6eca9e704d183db359b0ac1"}, "downloads": -1, "filename": "sorn-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "26f6b0063669ab7bd31a46b4bcb4c839", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15878, "upload_time": "2019-03-10T01:46:28", "upload_time_iso_8601": "2019-03-10T01:46:28.550162Z", "url": "https://files.pythonhosted.org/packages/b9/81/d1565bc7c47f7c3cdcb16eba7dde49c5f93c94c6bd05ba62d1e0690af471/sorn-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a8eb5d98257bb1cb4a4e98810914523", "sha256": "bffee0c9e519e4cc836d550e155401467133938fac9b0ef2925648e45aa02914"}, "downloads": -1, "filename": "sorn-0.0.7.tar.gz", "has_sig": false, "md5_digest": "8a8eb5d98257bb1cb4a4e98810914523", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16220, "upload_time": "2019-03-10T01:46:31", "upload_time_iso_8601": "2019-03-10T01:46:31.760776Z", "url": "https://files.pythonhosted.org/packages/34/09/e19b42d077c1da18d7cf14b28c0a12898775ac9ce7ccbd92027779061540/sorn-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "fa61f12df13361cff5eb616f2cedc782", "sha256": "2d46fc346cd77d446ae974a16440cf16013f5191770f4d721f342eb113a778d6"}, "downloads": -1, "filename": "sorn-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "fa61f12df13361cff5eb616f2cedc782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17142, "upload_time": "2019-03-10T13:24:42", "upload_time_iso_8601": "2019-03-10T13:24:42.034081Z", "url": "https://files.pythonhosted.org/packages/90/bb/61ef076906b3b62b7ca86b7d32fd1dded06c99005a17598a5b1668bd1d88/sorn-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d6747a81a7695c31cebfc209287c8688", "sha256": "1ee3c270a0d554d1e1f719b1e1331eed1fcd768633489315f7b2dff103c2ccf4"}, "downloads": -1, "filename": "sorn-0.0.8.tar.gz", "has_sig": false, "md5_digest": "d6747a81a7695c31cebfc209287c8688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16941, "upload_time": "2019-03-10T13:24:43", "upload_time_iso_8601": "2019-03-10T13:24:43.398462Z", "url": "https://files.pythonhosted.org/packages/91/f0/7d0e123bade148da4af614b5534ff229f278fa101097d4fa7455e1a90589/sorn-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "2c01dd65ddb1279eb2a7007d7a3a75ee", "sha256": "fa9a00e3c0e2123877f2bfa59cd58b2d0611bbc6e71f98033777d7dd6bb12601"}, "downloads": -1, "filename": "sorn-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "2c01dd65ddb1279eb2a7007d7a3a75ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17220, "upload_time": "2019-03-10T14:57:27", "upload_time_iso_8601": "2019-03-10T14:57:27.164617Z", "url": "https://files.pythonhosted.org/packages/87/fd/e44705c2ae0e21d9a728b48ef79d69df2317c1fc5ad114214661e45f9f27/sorn-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b61bc34d347cdbf220d7e65203fa2e0d", "sha256": "6f223730c565d932999270ad33df37f68fc270f3f30a383f07d4304f07268e4d"}, "downloads": -1, "filename": "sorn-0.0.9.tar.gz", "has_sig": false, "md5_digest": "b61bc34d347cdbf220d7e65203fa2e0d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17039, "upload_time": "2019-03-10T14:57:29", "upload_time_iso_8601": "2019-03-10T14:57:29.068396Z", "url": "https://files.pythonhosted.org/packages/a0/4c/a8027b54cc5d482b680e2f4cfb58c1541d0c59eaa6848a4878506a54aa26/sorn-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7ca09a2d926bace76c0fe0bd06396f7b", "sha256": "52f531f279a8273cb812685c89baa4c456dc633c650d892d6580a6f3d1b5028f"}, "downloads": -1, "filename": "sorn-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7ca09a2d926bace76c0fe0bd06396f7b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17218, "upload_time": "2019-03-10T15:14:34", "upload_time_iso_8601": "2019-03-10T15:14:34.641577Z", "url": "https://files.pythonhosted.org/packages/cc/83/d5d73aba89a98d92cb72d51d5d9e99b16c0106fa5facb3eaebe719098f93/sorn-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a228b2ca5c6269fea5a94149da7ab8f", "sha256": "a3e04fa8b8b62e99e75b54550cb972e2eafa610c55800e73de051217dfd70b16"}, "downloads": -1, "filename": "sorn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8a228b2ca5c6269fea5a94149da7ab8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17026, "upload_time": "2019-03-10T15:14:37", "upload_time_iso_8601": "2019-03-10T15:14:37.273416Z", "url": "https://files.pythonhosted.org/packages/18/cb/d5c9f0a2b3be65ddf282b65816cc57ad1bad5e109f274790f4d11af7b103/sorn-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "133d7ee4fe3844b71fe2ad79e27b4d72", "sha256": "f6f29a29f0e70b6b80eeabadebf8691351a26bd00f268c9ff3cfbb09bb67e3d2"}, "downloads": -1, "filename": "sorn-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "133d7ee4fe3844b71fe2ad79e27b4d72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17309, "upload_time": "2019-03-10T15:36:00", "upload_time_iso_8601": "2019-03-10T15:36:00.536883Z", "url": "https://files.pythonhosted.org/packages/db/51/365358c2ed4c0fc98eb530621341a171ae258cf13eb63facc48a812f7625/sorn-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9b9fdd01c1ffa98978a6e8f2849485d", "sha256": "f3c7ad11a41651d89fa91aa541dcbb28ae532bbb3c6402d1c55757b4533fc295"}, "downloads": -1, "filename": "sorn-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e9b9fdd01c1ffa98978a6e8f2849485d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17096, "upload_time": "2019-03-10T15:36:04", "upload_time_iso_8601": "2019-03-10T15:36:04.047496Z", "url": "https://files.pythonhosted.org/packages/72/1f/3b759d859d8a4db1a37970e75307559a3fa7fe0d9496b084f7d43438c49a/sorn-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "809f8bca5a7bb6aee360f99566e7b2e1", "sha256": "c012a4d12048a1ec58f7dcfe3fc95e028845698c1943a8c5ab747c66c9977f93"}, "downloads": -1, "filename": "sorn-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "809f8bca5a7bb6aee360f99566e7b2e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17307, "upload_time": "2019-03-10T19:09:58", "upload_time_iso_8601": "2019-03-10T19:09:58.134246Z", "url": "https://files.pythonhosted.org/packages/d7/64/36ace919507107cfbc6e653c2862f34f4919cd704fa61571ee274f82473d/sorn-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee37675c0e9ee1ce89db700b65566a8a", "sha256": "ae39da62296267fa043e6a9ac67172b33793c6457391cae8926f5bca477cdf0c"}, "downloads": -1, "filename": "sorn-0.1.3.tar.gz", "has_sig": false, "md5_digest": "ee37675c0e9ee1ce89db700b65566a8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17096, "upload_time": "2019-03-10T19:09:59", "upload_time_iso_8601": "2019-03-10T19:09:59.463317Z", "url": "https://files.pythonhosted.org/packages/18/31/638cbfa91038918caa22e86c4469d1a38688976af819b878cdb500a42ab4/sorn-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "3b1818bd24a70bbef57e8503b0bb5d73", "sha256": "334c3e8b6f2ab7da41cb15739c6c60ba5b7e45d4d1d591f2451ea449f56b822a"}, "downloads": -1, "filename": "sorn-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3b1818bd24a70bbef57e8503b0bb5d73", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17400, "upload_time": "2019-03-11T10:58:45", "upload_time_iso_8601": "2019-03-11T10:58:45.989430Z", "url": "https://files.pythonhosted.org/packages/25/7e/fe98e107abbcdef8b6f438f22109c26432fea33944758c7647b2480fa0d9/sorn-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f247e496493722d425cfbb982c7f839", "sha256": "4f6bef3b02ea48cf8964815077b39e335f566123b42ba239d1f3b2f2544dc4f3"}, "downloads": -1, "filename": "sorn-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1f247e496493722d425cfbb982c7f839", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17311, "upload_time": "2019-03-11T10:58:48", "upload_time_iso_8601": "2019-03-11T10:58:48.341952Z", "url": "https://files.pythonhosted.org/packages/bf/02/b81f964d219f522259551b6b79e7784bc68cc4673cd9a400d72386624f07/sorn-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "880e8b7a610817b7b016f4b4d7d3e0da", "sha256": "328e0eeea4805bc394564cea4f8925a7177d015e7c87eb1f33bd7744f92285f2"}, "downloads": -1, "filename": "sorn-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "880e8b7a610817b7b016f4b4d7d3e0da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17402, "upload_time": "2019-03-11T17:16:36", "upload_time_iso_8601": "2019-03-11T17:16:36.105466Z", "url": "https://files.pythonhosted.org/packages/b1/e2/6a0760ff8c8ea30a373b31ccfdc45ddd683d21a1c85b4c680ddee55532c5/sorn-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6d313ae57c743819dec0ecbb060fda24", "sha256": "20920bd9b4587142c9be6240e57c7426b28bddbb78e38bbba28909a27616ec45"}, "downloads": -1, "filename": "sorn-0.1.5.tar.gz", "has_sig": false, "md5_digest": "6d313ae57c743819dec0ecbb060fda24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17316, "upload_time": "2019-03-11T17:16:38", "upload_time_iso_8601": "2019-03-11T17:16:38.933739Z", "url": "https://files.pythonhosted.org/packages/a2/e9/a0477716ca4b2e5bde69320581fc0660f54b26a1adc8af6f455f0b2b1ce5/sorn-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "04a785a35a1949a1caa4742aa8152874", "sha256": "150a398c4dcb1b29a56d6f397a8bd732e27dd3fa189dd2fb9a58cfa98562306e"}, "downloads": -1, "filename": "sorn-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "04a785a35a1949a1caa4742aa8152874", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18388, "upload_time": "2019-03-12T15:19:08", "upload_time_iso_8601": "2019-03-12T15:19:08.882627Z", "url": "https://files.pythonhosted.org/packages/b2/fc/97a796917f140b869b2a5c0081aff0dc803a7dfd1010fbd86d86b40f049f/sorn-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76d06286447d5316457d998d4dc2c503", "sha256": "d73f5c63155afd09e9da3cff0295241920b43b6a1040f040e23aee76eb0c736c"}, "downloads": -1, "filename": "sorn-0.2.0.tar.gz", "has_sig": false, "md5_digest": "76d06286447d5316457d998d4dc2c503", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19532, "upload_time": "2019-03-12T15:19:15", "upload_time_iso_8601": "2019-03-12T15:19:15.744908Z", "url": "https://files.pythonhosted.org/packages/36/7e/ceaa8ac147c51e3d269b348027d973a8198a096f8a99aa21bfc67385277b/sorn-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ae365ee483e6b32854dac5c2d4f13957", "sha256": "b34fbdb699d1ab3e8524a07c435893d46a6a5970c19d96bb29871f9841570a72"}, "downloads": -1, "filename": "sorn-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ae365ee483e6b32854dac5c2d4f13957", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 18203, "upload_time": "2019-03-12T15:21:30", "upload_time_iso_8601": "2019-03-12T15:21:30.984760Z", "url": "https://files.pythonhosted.org/packages/e6/31/4bded051e96dcfa05ae9274eb914a53b24310c84e208036d131d69fda394/sorn-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "287a8148ada18907aed7c70ee0b65cb4", "sha256": "2efe65511944e093b587fa1c979e2e4efda1cf977be137de855e1399d8ba86e6"}, "downloads": -1, "filename": "sorn-0.2.1.tar.gz", "has_sig": false, "md5_digest": "287a8148ada18907aed7c70ee0b65cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19146, "upload_time": "2019-03-12T15:21:37", "upload_time_iso_8601": "2019-03-12T15:21:37.976738Z", "url": "https://files.pythonhosted.org/packages/0b/90/1f198f6720ece5733c8514e7f2b16dfdf435a465038dd3f4352598407e69/sorn-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f586106928e29bf7ed74c3b5f8a940b2", "sha256": "b5ecba1448683269551e383d1f04111d416150ca8ebf7d856d29ed83b127f1df"}, "downloads": -1, "filename": "sorn-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f586106928e29bf7ed74c3b5f8a940b2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20013, "upload_time": "2019-06-07T16:06:23", "upload_time_iso_8601": "2019-06-07T16:06:23.825976Z", "url": "https://files.pythonhosted.org/packages/ee/58/b6d8493d11b70f29afd7fd7bedb9303f6aaa18e686887c9531eb923fdfdf/sorn-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9cf5755d782718132d9dcd13f3ef20ef", "sha256": "a1c62aebb02afb194f8308dda47da89157d3a353b27f9dd959dfd7c2803a3ae1"}, "downloads": -1, "filename": "sorn-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9cf5755d782718132d9dcd13f3ef20ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19193, "upload_time": "2019-06-07T16:06:25", "upload_time_iso_8601": "2019-06-07T16:06:25.589583Z", "url": "https://files.pythonhosted.org/packages/d2/0c/52587e6a3dee2fa16a2f8976003cd45375228f471e848af3408453953cc5/sorn-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "f06292f87a6b9d1275c8c52419ec7f68", "sha256": "362b62d9ee9f8a03e4c0cea7c78329f4161987873a08024e729250c9d1bd8d35"}, "downloads": -1, "filename": "sorn-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f06292f87a6b9d1275c8c52419ec7f68", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20410, "upload_time": "2019-06-07T16:23:39", "upload_time_iso_8601": "2019-06-07T16:23:39.313603Z", "url": "https://files.pythonhosted.org/packages/98/24/9218d87bd4fe9024e8a6419f2551e0d17260e93afa2df8f663643373e2cd/sorn-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8b61032b02fe6c651e1e3608bc68b5f", "sha256": "58e63a01a33689a5096f1966f1b4bc90b01306809ac07165299d50c6ebb0489a"}, "downloads": -1, "filename": "sorn-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f8b61032b02fe6c651e1e3608bc68b5f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20158, "upload_time": "2019-06-07T16:23:41", "upload_time_iso_8601": "2019-06-07T16:23:41.020339Z", "url": "https://files.pythonhosted.org/packages/db/d1/d86965985f550bfa787984f2161549850b024e88865327aca99161027031/sorn-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "691b25eac9d35a56ac9932aa67a8ccf6", "sha256": "ec9a70e45a4810132130b4861c037154ccbd260fad9662f51801fd23abb8cddd"}, "downloads": -1, "filename": "sorn-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "691b25eac9d35a56ac9932aa67a8ccf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20221, "upload_time": "2019-06-07T16:27:16", "upload_time_iso_8601": "2019-06-07T16:27:16.085170Z", "url": "https://files.pythonhosted.org/packages/d6/c3/9f7a4c62d2814267e41790c1e31c26836830e1bf6b70a1470ecaa5aff85c/sorn-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7eb9b11497f4a501b077b24606a8a16", "sha256": "61720d1911eed0f985aabb80c061706caee0abdc726674b0f9ef113de2737701"}, "downloads": -1, "filename": "sorn-0.2.4.tar.gz", "has_sig": false, "md5_digest": "d7eb9b11497f4a501b077b24606a8a16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19766, "upload_time": "2019-06-07T16:27:17", "upload_time_iso_8601": "2019-06-07T16:27:17.758231Z", "url": "https://files.pythonhosted.org/packages/ef/ad/ab2f1862a28378c10d495d82f1092f40453ce29d94427450c8038adb5877/sorn-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "8f35b070a8b7f841af031b0829159a25", "sha256": "bd1183eb298cd51ae099668e6ea306924e5d5de429847f36c3e83dc4717dbb68"}, "downloads": -1, "filename": "sorn-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8f35b070a8b7f841af031b0829159a25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20782, "upload_time": "2020-02-18T21:02:30", "upload_time_iso_8601": "2020-02-18T21:02:30.514460Z", "url": "https://files.pythonhosted.org/packages/28/84/8b70987a5366ba91cebbf018150b44cb8f46460d446db03ba8469bba2a7a/sorn-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2636ab4abc9be0822000ea7616885afd", "sha256": "3cae01a5751ffe5981e0a900ab60849f3b5a7811dba4cb81adb21d9ea41a6fc8"}, "downloads": -1, "filename": "sorn-0.2.5.tar.gz", "has_sig": false, "md5_digest": "2636ab4abc9be0822000ea7616885afd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20687, "upload_time": "2020-02-18T21:02:32", "upload_time_iso_8601": "2020-02-18T21:02:32.718541Z", "url": "https://files.pythonhosted.org/packages/bf/eb/055282b008d7bb53470c6fcf2defeccecd2ea7026ddbfe1e598943d7b2c6/sorn-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "ea1c203965acf8c4e3e5bd7a1787c981", "sha256": "e6ac69a13b560f8687a4a9a3091badd34b3d5433aaa7989a57ab77e023c8ae4b"}, "downloads": -1, "filename": "sorn-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "ea1c203965acf8c4e3e5bd7a1787c981", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20327, "upload_time": "2020-02-18T21:40:02", "upload_time_iso_8601": "2020-02-18T21:40:02.770102Z", "url": "https://files.pythonhosted.org/packages/4a/41/d90dd84c43a0d722229b0a3e3554c963eb76eea1c33d8ef574b78092713d/sorn-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4035b8a11924a881cd4e2ed29e1f8e75", "sha256": "09f5c5c4b035b838e117c599a0e3c9c01f1222aafe69355d03be2fb4e64200ed"}, "downloads": -1, "filename": "sorn-0.2.6.tar.gz", "has_sig": false, "md5_digest": "4035b8a11924a881cd4e2ed29e1f8e75", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20645, "upload_time": "2020-02-18T21:40:05", "upload_time_iso_8601": "2020-02-18T21:40:05.574932Z", "url": "https://files.pythonhosted.org/packages/ec/d6/94eca94bb05e4ce6c0eff5fbf6e055dbad6b5654544d4b614372e4838059/sorn-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "78b0ac06fefb67d361de3919e9526ad4", "sha256": "217cb47c0536d64dc224d507ca110a4af03d8f4694949a99588364f7fb225070"}, "downloads": -1, "filename": "sorn-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "78b0ac06fefb67d361de3919e9526ad4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20350, "upload_time": "2020-02-20T21:36:07", "upload_time_iso_8601": "2020-02-20T21:36:07.427111Z", "url": "https://files.pythonhosted.org/packages/a7/5d/70eface88ba8a05d77c154c5b1d523eed9f7a4070f318457537e38ba6a9d/sorn-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f6c635a26884089f30cf4d8d9ad579", "sha256": "64a1a4f86e5e9a95259a8d051137adbfe7ac3cb0cef0214a177dbfce24f2f036"}, "downloads": -1, "filename": "sorn-0.2.7.tar.gz", "has_sig": false, "md5_digest": "95f6c635a26884089f30cf4d8d9ad579", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20832, "upload_time": "2020-02-20T21:36:09", "upload_time_iso_8601": "2020-02-20T21:36:09.257350Z", "url": "https://files.pythonhosted.org/packages/8c/ae/c1aad4c5e8e8b6d3ec405ff9e552a32ceee090c97c7e8727738e47afc1d6/sorn-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "78b0ac06fefb67d361de3919e9526ad4", "sha256": "217cb47c0536d64dc224d507ca110a4af03d8f4694949a99588364f7fb225070"}, "downloads": -1, "filename": "sorn-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "78b0ac06fefb67d361de3919e9526ad4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20350, "upload_time": "2020-02-20T21:36:07", "upload_time_iso_8601": "2020-02-20T21:36:07.427111Z", "url": "https://files.pythonhosted.org/packages/a7/5d/70eface88ba8a05d77c154c5b1d523eed9f7a4070f318457537e38ba6a9d/sorn-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95f6c635a26884089f30cf4d8d9ad579", "sha256": "64a1a4f86e5e9a95259a8d051137adbfe7ac3cb0cef0214a177dbfce24f2f036"}, "downloads": -1, "filename": "sorn-0.2.7.tar.gz", "has_sig": false, "md5_digest": "95f6c635a26884089f30cf4d8d9ad579", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20832, "upload_time": "2020-02-20T21:36:09", "upload_time_iso_8601": "2020-02-20T21:36:09.257350Z", "url": "https://files.pythonhosted.org/packages/8c/ae/c1aad4c5e8e8b6d3ec405ff9e552a32ceee090c97c7e8727738e47afc1d6/sorn-0.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:31 2020"}