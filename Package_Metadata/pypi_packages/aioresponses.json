{"info": {"author": "Pawel Nuckowski", "author_email": "p.nuckowski@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Testing"], "description": "===============================\naioresponses\n===============================\n\n.. image:: https://travis-ci.org/pnuckowski/aioresponses.svg?branch=master\n        :target: https://travis-ci.org/pnuckowski/aioresponses\n\n.. image:: https://coveralls.io/repos/github/pnuckowski/aioresponses/badge.svg?branch=master\n        :target: https://coveralls.io/github/pnuckowski/aioresponses?branch=master\n\n.. image:: https://landscape.io/github/pnuckowski/aioresponses/master/landscape.svg?style=flat\n        :target: https://landscape.io/github/pnuckowski/aioresponses/master\n        :alt: Code Health\n\n.. image:: https://pyup.io/repos/github/pnuckowski/aioresponses/shield.svg\n        :target: https://pyup.io/repos/github/pnuckowski/aioresponses/\n        :alt: Updates\n\n.. image:: https://img.shields.io/pypi/v/aioresponses.svg\n        :target: https://pypi.python.org/pypi/aioresponses\n\n.. image:: https://readthedocs.org/projects/aioresponses/badge/?version=latest\n        :target: https://aioresponses.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n\nAioresponses is a helper to mock/fake web requests in python aiohttp package.\n\nFor *requests* module there are a lot of packages that help us with testing (eg. *httpretty*, *responses*, *requests-mock*).\n\nWhen it comes to testing asynchronous HTTP requests it is a bit harder (at least at the beginning).\nThe purpose of this package is to provide an easy way to test asynchronous HTTP requests.\n\nInstalling\n----------\n\n.. code:: bash\n\n    $ pip install aioresponses\n\nSupported versions\n------------------\n- Python 3.5.3+\n- aiohttp>=2.0.0,<4.0.0\n\nUsage\n--------\n\nTo mock out HTTP request use *aioresponses* as a method decorator or as a context manager.\n\nResponse *status* code, *body*, *payload* (for json response) and *headers* can be mocked.\n\nSupported HTTP methods: **GET**, **POST**, **PUT**, **PATCH**, **DELETE** and **OPTIONS**.\n\n.. code:: python\n\n    import aiohttp\n    import asyncio\n    from aioresponses import aioresponses\n\n    @aioresponses()\n    def test_request(mocked):\n        loop = asyncio.get_event_loop()\n        mocked.get('http://example.com', status=200, body='test')\n        session = aiohttp.ClientSession()\n        resp = loop.run_until_complete(session.get('http://example.com'))\n\n        assert resp.status == 200\n\n\nfor convenience use *payload* argument to mock out json response. Example below.\n\n**as a context manager**\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    from aioresponses import aioresponses\n\n    def test_ctx():\n        loop = asyncio.get_event_loop()\n        session = aiohttp.ClientSession()\n        with aioresponses() as m:\n            m.get('http://test.example.com', payload=dict(foo='bar'))\n\n            resp = loop.run_until_complete(session.get('http://test.example.com'))\n            data = loop.run_until_complete(resp.json())\n\n            assert dict(foo='bar') == data\n\n**aioresponses allows to mock out any HTTP headers**\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    from aioresponses import aioresponses\n\n    @aioresponses()\n    def test_http_headers(m):\n        loop = asyncio.get_event_loop()\n        session = aiohttp.ClientSession()\n        m.post(\n            'http://example.com',\n            payload=dict(),\n            headers=dict(connection='keep-alive'),\n        )\n\n        resp = loop.run_until_complete(session.post('http://example.com'))\n\n        # note that we pass 'connection' but get 'Connection' (capitalized)\n        # under the neath `multidict` is used to work with HTTP headers\n        assert resp.headers['Connection'] == 'keep-alive'\n\n**allows to register different responses for the same url**\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    from aioresponses import aioresponses\n\n    @aioresponses()\n    def test_multiple_responses(m):\n        loop = asyncio.get_event_loop()\n        session = aiohttp.ClientSession()\n        m.get('http://example.com', status=500)\n        m.get('http://example.com', status=200)\n\n        resp1 = loop.run_until_complete(session.get('http://example.com'))\n        resp2 = loop.run_until_complete(session.get('http://example.com'))\n\n        assert resp1.status == 500\n        assert resp2.status == 200\n\n\n**match URLs with regular expressions**\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    import re\n    from aioresponses import aioresponses\n\n    @aioresponses()\n    def test_regexp_example(m):\n        loop = asyncio.get_event_loop()\n        session = aiohttp.ClientSession()\n        pattern = re.compile(r'^http://example\\.com/api\\?foo=.*$')\n        m.get(pattern, status=200)\n\n        resp = loop.run_until_complete(session.get('http://example.com/api?foo=bar'))\n\n        assert resp.status == 200\n\n\n**allows to passthrough to a specified list of servers**\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    from aioresponses import aioresponses\n\n    @aioresponses(passthrough=['http://backend'])\n    def test_passthrough(m, test_client):\n        session = aiohttp.ClientSession()\n        # this will actually perform a request\n        resp = loop.run_until_complete(session.get('http://backend/api'))\n\n\n**aioresponses allows to throw an exception**\n\n.. code:: python\n\n    import asyncio\n    from aiohttp import ClientSession\n    from aiohttp.http_exceptions import HttpProcessingError\n    from aioresponses import aioresponses\n\n    @aioresponses()\n    def test_how_to_throw_an_exception(m, test_client):\n        loop = asyncio.get_event_loop()\n        session = ClientSession()\n        m.get('http://example.com/api', exception=HttpProcessingError('test'))\n\n        # calling\n        # loop.run_until_complete(session.get('http://example.com/api'))\n        # will throw an exception.\n\n\n**aioresponses allows to use callbacks to provide dynamic responses**\n\n.. code:: python\n\n    import asyncio\n    import aiohttp\n    from aioresponses import CallbackResult, aioresponses\n\n    def callback(url, **kwargs):\n        return CallbackResult(status=418)\n\n    @aioresponses()\n    def test_callback(m, test_client):\n        loop = asyncio.get_event_loop()\n        session = ClientSession()\n        m.get('http://example.com', callback=callback)\n\n        resp = loop.run_until_complete(session.get('http://example.com'))\n\n        assert resp.status == 418\n\n\n**aioresponses can be used in a pytest fixture**\n\n.. code:: python\n\n    import pytest\n    from aioresponses import aioresponses\n\n    @pytest.fixture\n    def mock_aioresponse():\n        with aioresponses() as m:\n            yield m\n\n\nFeatures\n--------\n* Easy to mock out HTTP requests made by *aiohttp.ClientSession*\n\n\nLicense\n-------\n* Free software: MIT license\n\nCredits\n-------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pnuckowski/aioresponses", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aioresponses", "package_url": "https://pypi.org/project/aioresponses/", "platform": "", "project_url": "https://pypi.org/project/aioresponses/", "project_urls": {"Homepage": "https://github.com/pnuckowski/aioresponses"}, "release_url": "https://pypi.org/project/aioresponses/0.6.3/", "requires_dist": ["aiohttp (<4.0.0,>=2.0.0)"], "requires_python": "", "summary": "Mock out requests made by ClientSession from aiohttp package", "version": "0.6.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/pnuckowski/aioresponses\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/pnuckowski/aioresponses.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9147b78f439e6b093560c9cf04340c2be76f5219/68747470733a2f2f7472617669732d63692e6f72672f706e75636b6f77736b692f61696f726573706f6e7365732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/pnuckowski/aioresponses?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/pnuckowski/aioresponses/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c3bc47eb356e60c6fd265bf38af660cd5753c4f/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706e75636b6f77736b692f61696f726573706f6e7365732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://landscape.io/github/pnuckowski/aioresponses/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f1c2447f91d57e703dcabc81fb277cb602c8065c/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f706e75636b6f77736b692f61696f726573706f6e7365732f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://pyup.io/repos/github/pnuckowski/aioresponses/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9350c3e12965baf791854354344489afd3aca0c2/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f706e75636b6f77736b692f61696f726573706f6e7365732f736869656c642e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aioresponses\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/aioresponses.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0bbafa4cce8a4f5ed92f815d8a493af7d31a054d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f726573706f6e7365732e737667\"></a>\n<a href=\"https://aioresponses.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fc4a6bf417aeffcd1e627062f770abca9258219/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61696f726573706f6e7365732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>Aioresponses is a helper to mock/fake web requests in python aiohttp package.</p>\n<p>For <em>requests</em> module there are a lot of packages that help us with testing (eg. <em>httpretty</em>, <em>responses</em>, <em>requests-mock</em>).</p>\n<p>When it comes to testing asynchronous HTTP requests it is a bit harder (at least at the beginning).\nThe purpose of this package is to provide an easy way to test asynchronous HTTP requests.</p>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre>$ pip install aioresponses\n</pre>\n</div>\n<div id=\"supported-versions\">\n<h2>Supported versions</h2>\n<ul>\n<li>Python 3.5.3+</li>\n<li>aiohttp&gt;=2.0.0,&lt;4.0.0</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To mock out HTTP request use <em>aioresponses</em> as a method decorator or as a context manager.</p>\n<p>Response <em>status</em> code, <em>body</em>, <em>payload</em> (for json response) and <em>headers</em> can be mocked.</p>\n<p>Supported HTTP methods: <strong>GET</strong>, <strong>POST</strong>, <strong>PUT</strong>, <strong>PATCH</strong>, <strong>DELETE</strong> and <strong>OPTIONS</strong>.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_request</span><span class=\"p\">(</span><span class=\"n\">mocked</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">mocked</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"o\">=</span><span class=\"s1\">'test'</span><span class=\"p\">)</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">))</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n<p>for convenience use <em>payload</em> argument to mock out json response. Example below.</p>\n<p><strong>as a context manager</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_ctx</span><span class=\"p\">():</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"k\">with</span> <span class=\"n\">aioresponses</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n        <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://test.example.com'</span><span class=\"p\">,</span> <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">))</span>\n\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://test.example.com'</span><span class=\"p\">))</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">json</span><span class=\"p\">())</span>\n\n        <span class=\"k\">assert</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"o\">=</span><span class=\"s1\">'bar'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">data</span>\n</pre>\n<p><strong>aioresponses allows to mock out any HTTP headers</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_http_headers</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span>\n        <span class=\"s1\">'http://example.com'</span><span class=\"p\">,</span>\n        <span class=\"n\">payload</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(),</span>\n        <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"o\">=</span><span class=\"s1\">'keep-alive'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># note that we pass 'connection' but get 'Connection' (capitalized)</span>\n    <span class=\"c1\"># under the neath `multidict` is used to work with HTTP headers</span>\n    <span class=\"k\">assert</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Connection'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'keep-alive'</span>\n</pre>\n<p><strong>allows to register different responses for the same url</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_multiple_responses</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n\n    <span class=\"n\">resp1</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">))</span>\n    <span class=\"n\">resp2</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">))</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">resp1</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">500</span>\n    <span class=\"k\">assert</span> <span class=\"n\">resp2</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n<p><strong>match URLs with regular expressions</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_regexp_example</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^http://example\\.com/api\\?foo=.*$'</span><span class=\"p\">)</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com/api?foo=bar'</span><span class=\"p\">))</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n<p><strong>allows to passthrough to a specified list of servers</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">(</span><span class=\"n\">passthrough</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'http://backend'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_passthrough</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">test_client</span><span class=\"p\">):</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"c1\"># this will actually perform a request</span>\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://backend/api'</span><span class=\"p\">))</span>\n</pre>\n<p><strong>aioresponses allows to throw an exception</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp.http_exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">HttpProcessingError</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_how_to_throw_an_exception</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">test_client</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com/api'</span><span class=\"p\">,</span> <span class=\"n\">exception</span><span class=\"o\">=</span><span class=\"n\">HttpProcessingError</span><span class=\"p\">(</span><span class=\"s1\">'test'</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># calling</span>\n    <span class=\"c1\"># loop.run_until_complete(session.get('http://example.com/api'))</span>\n    <span class=\"c1\"># will throw an exception.</span>\n</pre>\n<p><strong>aioresponses allows to use callbacks to provide dynamic responses</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">CallbackResult</span><span class=\"p\">,</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">callback</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">CallbackResult</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">418</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@aioresponses</span><span class=\"p\">()</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_callback</span><span class=\"p\">(</span><span class=\"n\">m</span><span class=\"p\">,</span> <span class=\"n\">test_client</span><span class=\"p\">):</span>\n    <span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n    <span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span>\n    <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">,</span> <span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">callback</span><span class=\"p\">)</span>\n\n    <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'http://example.com'</span><span class=\"p\">))</span>\n\n    <span class=\"k\">assert</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"mi\">418</span>\n</pre>\n<p><strong>aioresponses can be used in a pytest fixture</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aioresponses</span> <span class=\"kn\">import</span> <span class=\"n\">aioresponses</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span>\n<span class=\"k\">def</span> <span class=\"nf\">mock_aioresponse</span><span class=\"p\">():</span>\n    <span class=\"k\">with</span> <span class=\"n\">aioresponses</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">m</span><span class=\"p\">:</span>\n        <span class=\"k\">yield</span> <span class=\"n\">m</span>\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Easy to mock out HTTP requests made by <em>aiohttp.ClientSession</em></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n</div>\n\n          </div>"}, "last_serial": 6612380, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "88135dd4f8116457b3b5c50c55298ec3", "sha256": "f7cefa9d310bb09ef67d4b03c64b641c3c24ba88834951e0a0df91ed6970e947"}, "downloads": -1, "filename": "aioresponses-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "88135dd4f8116457b3b5c50c55298ec3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7141, "upload_time": "2016-11-03T21:49:08", "upload_time_iso_8601": "2016-11-03T21:49:08.724233Z", "url": "https://files.pythonhosted.org/packages/e7/97/35e8063420e688129df5f6fe1bd4f0061ef949315a48843a787212082097/aioresponses-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8dbfe3f011f2e2c3cf8858935ab7b8ef", "sha256": "6feaba4370f4389336886cdf5d3723e6b69278d7d9b3af806c7bec4a67fcd89f"}, "downloads": -1, "filename": "aioresponses-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8dbfe3f011f2e2c3cf8858935ab7b8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26721, "upload_time": "2016-11-03T21:49:11", "upload_time_iso_8601": "2016-11-03T21:49:11.387844Z", "url": "https://files.pythonhosted.org/packages/d2/12/c6fb3bb2851b05cbd20a9f4284ef68debe83655edb0e63f157f3bda969a6/aioresponses-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "5263be05cd0d5e331cd16d7f30cc945a", "sha256": "7fc0bce24ba9421dc06d7947cd77aee1b308b6c94274811e97990af82fff8577"}, "downloads": -1, "filename": "aioresponses-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5263be05cd0d5e331cd16d7f30cc945a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7143, "upload_time": "2017-01-03T23:15:56", "upload_time_iso_8601": "2017-01-03T23:15:56.018846Z", "url": "https://files.pythonhosted.org/packages/8f/5e/5ecce703e726d086754ead408f227486ff4d59cf943f014328c801e557a2/aioresponses-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c6587741544bbe3b5ccb652427f1ae8", "sha256": "79e43849f135db109271f50c81cb29bfbfb44422dd59d0e73896e8b8fe83c70f"}, "downloads": -1, "filename": "aioresponses-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9c6587741544bbe3b5ccb652427f1ae8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26893, "upload_time": "2017-01-03T23:15:58", "upload_time_iso_8601": "2017-01-03T23:15:58.236154Z", "url": "https://files.pythonhosted.org/packages/b4/74/3cb54b0fc60d10a43c7d62c5c0505d1d717c46a9cea5d2566bd46165524d/aioresponses-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "881a333d308409f19ce27eb9605dbb73", "sha256": "bc8ad6b30afb7eae38f266b5af78104c1dcf47a638443cb253403c8f54eb5e27"}, "downloads": -1, "filename": "aioresponses-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "881a333d308409f19ce27eb9605dbb73", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8011, "upload_time": "2017-02-15T18:35:58", "upload_time_iso_8601": "2017-02-15T18:35:58.394245Z", "url": "https://files.pythonhosted.org/packages/d8/25/d053db202d81224749f9d8154c4e1c168f733391234ca90cd42d1c7c5e56/aioresponses-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5616de05035cbd0f8c4e418f0fdc2e69", "sha256": "44833b6bddf6e498ad3e0b2548a2d77b2eddcf63009a2eeb7bcf78277fd3d0b8"}, "downloads": -1, "filename": "aioresponses-0.1.4.tar.gz", "has_sig": false, "md5_digest": "5616de05035cbd0f8c4e418f0fdc2e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28160, "upload_time": "2017-02-15T18:36:00", "upload_time_iso_8601": "2017-02-15T18:36:00.512282Z", "url": "https://files.pythonhosted.org/packages/27/29/87c7222967d03b72a5709c438417b2ef6330400b94ac645c6d92e852b076/aioresponses-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "26065ed3d1075873bb785cc76719701a", "sha256": "f804676bfa13cfe21a77f1d5c16d9da908fe5d5a18876e7d3623307507b07dd5"}, "downloads": -1, "filename": "aioresponses-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "26065ed3d1075873bb785cc76719701a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8060, "upload_time": "2017-07-02T21:27:52", "upload_time_iso_8601": "2017-07-02T21:27:52.185742Z", "url": "https://files.pythonhosted.org/packages/8e/15/4c3c4c74792499bcc0186600cd7874f4e8748d9799b974fdcb9b9f2bd192/aioresponses-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c329201ebccbf2b8975a9b5a596072f0", "sha256": "ab6e7db8c6c39050c3c7cfecf99af5adcfedfdbf42ffc307d94c035db9b8beed"}, "downloads": -1, "filename": "aioresponses-0.1.5.tar.gz", "has_sig": false, "md5_digest": "c329201ebccbf2b8975a9b5a596072f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28584, "upload_time": "2017-07-02T21:27:54", "upload_time_iso_8601": "2017-07-02T21:27:54.329083Z", "url": "https://files.pythonhosted.org/packages/12/da/b998d9fe62f11186d5b2c79ea667b2b1bfe74f6acd7de77bb4153dc129e2/aioresponses-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "717196f3a869106364e08dec46381f4d", "sha256": "4118b2bafc0e622dd00414e968b4c872ff49c6a98ffad0284418cc98ff0e4fd7"}, "downloads": -1, "filename": "aioresponses-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "717196f3a869106364e08dec46381f4d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8136, "upload_time": "2017-08-10T07:12:25", "upload_time_iso_8601": "2017-08-10T07:12:25.465563Z", "url": "https://files.pythonhosted.org/packages/07/84/7f5ced67743279379c5b95fa5e359f9037a1d4556fedf99764bf9d5859a3/aioresponses-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8687e40d7ea84200d0f396d7a21385d", "sha256": "7d13e824d638e84be82a10899fc5e843d0590367ffca7fc22a19433b36a77e94"}, "downloads": -1, "filename": "aioresponses-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b8687e40d7ea84200d0f396d7a21385d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28862, "upload_time": "2017-08-10T07:12:27", "upload_time_iso_8601": "2017-08-10T07:12:27.655595Z", "url": "https://files.pythonhosted.org/packages/24/99/ded33a73175887330d7283a45037878e5d7551b48a63e36377d76d7feae5/aioresponses-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "47e1e720083ab870d4d7e25dde248b55", "sha256": "5f29cc1b02f9e62ad84bc7841096a9346ac405084fb6dc619338d96afb130af9"}, "downloads": -1, "filename": "aioresponses-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "47e1e720083ab870d4d7e25dde248b55", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8294, "upload_time": "2017-09-27T19:00:45", "upload_time_iso_8601": "2017-09-27T19:00:45.259817Z", "url": "https://files.pythonhosted.org/packages/99/10/e1f3399794852682e33296d4ed6130e2b2cb9586f529b0807c5c9f2193f4/aioresponses-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45013b9e6b197ae675d6b18e9825e918", "sha256": "6078c9cc6cb7f48a91f7a1bfba1a16eb957d943e537472f554d2918e1411a59b"}, "downloads": -1, "filename": "aioresponses-0.3.0.tar.gz", "has_sig": false, "md5_digest": "45013b9e6b197ae675d6b18e9825e918", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29275, "upload_time": "2017-09-27T19:00:49", "upload_time_iso_8601": "2017-09-27T19:00:49.359014Z", "url": "https://files.pythonhosted.org/packages/bc/b4/3d3feb71cafedacc0fa2f512e4ef2c0c9b0e027e5ab25afb3af8db3ff255/aioresponses-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "35cdf7c353c68612dbbaa3726b5b8550", "sha256": "b5d94353b50c90e270d590523ff4926238cbe2e93bb77120a369a6563989e165"}, "downloads": -1, "filename": "aioresponses-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "35cdf7c353c68612dbbaa3726b5b8550", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8767, "upload_time": "2017-12-19T12:37:51", "upload_time_iso_8601": "2017-12-19T12:37:51.886708Z", "url": "https://files.pythonhosted.org/packages/8d/d2/7794a5742e014c1309686ee9eb6afe87df5040ae2f330a92a78d89f151e9/aioresponses-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c07f8f80adf5d048438c38214c48ece4", "sha256": "22792d494e4a0977cf215a721089b920ee266ab4e4b9fe0b93db610defa684b7"}, "downloads": -1, "filename": "aioresponses-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c07f8f80adf5d048438c38214c48ece4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29923, "upload_time": "2017-12-19T12:37:52", "upload_time_iso_8601": "2017-12-19T12:37:52.963842Z", "url": "https://files.pythonhosted.org/packages/92/20/633c0dd5cc323134b0bcf0f546236e66f6a104a56b666aba984ebe13b13a/aioresponses-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "ff3a5c7dc9118d055b2f5eaae3cc522f", "sha256": "5fa2297030073952a27694c9459c27b23bf0c7393d1ca0f0469334ed234ab5ca"}, "downloads": -1, "filename": "aioresponses-0.3.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ff3a5c7dc9118d055b2f5eaae3cc522f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8759, "upload_time": "2018-02-07T14:36:24", "upload_time_iso_8601": "2018-02-07T14:36:24.059520Z", "url": "https://files.pythonhosted.org/packages/35/ca/ef074795417a84dccdd6c4b766e2787a77867cf83a6e15d5771385f8a29a/aioresponses-0.3.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a4f547b6c9f4447745d9e4588dd6a68", "sha256": "5f7884290d7fd13cc3f18e06fd1eef1499697a55bf098be049215f35d05b7e8a"}, "downloads": -1, "filename": "aioresponses-0.3.2.tar.gz", "has_sig": false, "md5_digest": "2a4f547b6c9f4447745d9e4588dd6a68", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29975, "upload_time": "2018-02-07T14:36:25", "upload_time_iso_8601": "2018-02-07T14:36:25.143579Z", "url": "https://files.pythonhosted.org/packages/ab/76/e29338373455d342628415950b345c6a1f4bc7b9ebf991dc79d9adbcc4d0/aioresponses-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0f55d3c6a925980ba90ed29fa08fa69d", "sha256": "b901daac9f14165a9b42377a82dd92eb9a9687bb24c956ed545a2cf14a2a8b32"}, "downloads": -1, "filename": "aioresponses-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f55d3c6a925980ba90ed29fa08fa69d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8978, "upload_time": "2018-02-17T10:04:39", "upload_time_iso_8601": "2018-02-17T10:04:39.581533Z", "url": "https://files.pythonhosted.org/packages/ab/8c/31b74920e48d7fb72d015e8449b677fb155626c4b19ded8e150b299f18ce/aioresponses-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea4701b40d2adc2923c0f5ffaa98d713", "sha256": "bdb5316e90522472258a8ba679708d30d1d8886ceec34ac192ba537a4672a7f3"}, "downloads": -1, "filename": "aioresponses-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ea4701b40d2adc2923c0f5ffaa98d713", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30337, "upload_time": "2018-02-17T10:04:41", "upload_time_iso_8601": "2018-02-17T10:04:41.612344Z", "url": "https://files.pythonhosted.org/packages/50/fd/3f3e232e8b59abb689b417d63da9fb6304e86b6d04e985a8e29711733174/aioresponses-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6aca96f3720a59debd07a5f310b60d97", "sha256": "2de01d289bacb3da18440754ebb50690b96c77f15cb546d7f78dafae9af30b50"}, "downloads": -1, "filename": "aioresponses-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6aca96f3720a59debd07a5f310b60d97", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9123, "upload_time": "2018-03-27T20:26:43", "upload_time_iso_8601": "2018-03-27T20:26:43.994652Z", "url": "https://files.pythonhosted.org/packages/e9/7c/ae062db6147f2d51eee96867e6f398ec98334ce7bbce54d91252700bfcaf/aioresponses-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fbbb28f5cbf6e9d498b9e7d4802188b", "sha256": "6c468badfdf71bd9bb9a49c724a176c95cc7bff38d6b0d4fc11abae1af0b8055"}, "downloads": -1, "filename": "aioresponses-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6fbbb28f5cbf6e9d498b9e7d4802188b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30562, "upload_time": "2018-03-27T20:26:45", "upload_time_iso_8601": "2018-03-27T20:26:45.108696Z", "url": "https://files.pythonhosted.org/packages/ab/c6/8a02175dc4760f1a73100c3a5e2aa21e2e8a371a18feb25035fc9fe8ffc0/aioresponses-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "e91c8ea8c67bac34438ca9ec6c6f050c", "sha256": "c3b3c4679579f021356431998a44f0eeaf889a21db1087e290f8d8f44bdef0d2"}, "downloads": -1, "filename": "aioresponses-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e91c8ea8c67bac34438ca9ec6c6f050c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6604, "upload_time": "2018-06-06T07:53:08", "upload_time_iso_8601": "2018-06-06T07:53:08.941779Z", "url": "https://files.pythonhosted.org/packages/57/52/0e9661cb85de0994afb8f33b2d74f7a466c61634474adb28158c7793b652/aioresponses-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b72f0a65baa2eed3a5b49989abcefbb0", "sha256": "41d0452fd24256742dc45564a37001c74ec63fe4d4c7a55f365f7fc825c8c56e"}, "downloads": -1, "filename": "aioresponses-0.4.2.tar.gz", "has_sig": false, "md5_digest": "b72f0a65baa2eed3a5b49989abcefbb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30750, "upload_time": "2018-06-06T07:53:10", "upload_time_iso_8601": "2018-06-06T07:53:10.400835Z", "url": "https://files.pythonhosted.org/packages/b0/d3/7340a0df260a26c25b31838d5f7dec2fe39b8123d1f3bc44c805592f6b43/aioresponses-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "1eee8d2304808933203b5a9bb02a16aa", "sha256": "33772517911eb662ca85f2adb055d17ef20fda06b949fdd5c35c963ff1818f4d"}, "downloads": -1, "filename": "aioresponses-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1eee8d2304808933203b5a9bb02a16aa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6771, "upload_time": "2018-10-29T20:38:15", "upload_time_iso_8601": "2018-10-29T20:38:15.518972Z", "url": "https://files.pythonhosted.org/packages/6f/f4/6d2b29a25e1c472fc0a69315691ae2fc2baa9c086eace2d33432656a8d12/aioresponses-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6d112469c42097aca338d6e79a8fc20", "sha256": "95d92cbdb2d172d2591fd53a68f43c4b3a44e99a5c0778d15df7fa279ee25006"}, "downloads": -1, "filename": "aioresponses-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e6d112469c42097aca338d6e79a8fc20", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31432, "upload_time": "2018-10-29T20:38:17", "upload_time_iso_8601": "2018-10-29T20:38:17.049179Z", "url": "https://files.pythonhosted.org/packages/90/df/60e94f435f52b552c9e1eaf779cb423c886cdd17b421c1b69da26f17907c/aioresponses-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "dc5917e70e511b30753b6eab2594b939", "sha256": "1107270fa258cf1f24bee1697f53977488644dfedc9069e375154b3984cf6b68"}, "downloads": -1, "filename": "aioresponses-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dc5917e70e511b30753b6eab2594b939", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6816, "upload_time": "2019-01-08T11:34:19", "upload_time_iso_8601": "2019-01-08T11:34:19.601870Z", "url": "https://files.pythonhosted.org/packages/df/da/60ee7a2a855f14a643fcf75ddcd9bfd1be08f0346d56f211210d080db078/aioresponses-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aa1a0be6c9de585e1f858cd65727a73e", "sha256": "585d93eb0c8bb17e82c5e7f4958a57c50990aebb0ecf037048f10c7d24d3a613"}, "downloads": -1, "filename": "aioresponses-0.5.1.tar.gz", "has_sig": false, "md5_digest": "aa1a0be6c9de585e1f858cd65727a73e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31542, "upload_time": "2019-01-08T11:34:21", "upload_time_iso_8601": "2019-01-08T11:34:21.202921Z", "url": "https://files.pythonhosted.org/packages/a4/09/536ec979162c269315bf0399f39cd8e6a68d12b5dea4418c34549ddd7cbb/aioresponses-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "8f8fcb536dbf655fa267399e419e3413", "sha256": "38d9bef90acb0f4e49cde2f635f142e8bf6199dba1a7e09ba32bfc467de85c8c"}, "downloads": -1, "filename": "aioresponses-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8f8fcb536dbf655fa267399e419e3413", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6913, "upload_time": "2019-01-16T08:30:28", "upload_time_iso_8601": "2019-01-16T08:30:28.777632Z", "url": "https://files.pythonhosted.org/packages/19/16/ac309c4dadee44f3943088bcdcda5ba7dc088ab895b1a21f1b7c3c4c928e/aioresponses-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f8afbadf8e615b6236756b9b5990021", "sha256": "53e8cb51a4aeccbdf3780a6a5b2b2772594af3871bd6e89c73f6f8cbff64f2ff"}, "downloads": -1, "filename": "aioresponses-0.5.2.tar.gz", "has_sig": false, "md5_digest": "1f8afbadf8e615b6236756b9b5990021", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31775, "upload_time": "2019-01-16T08:30:30", "upload_time_iso_8601": "2019-01-16T08:30:30.579130Z", "url": "https://files.pythonhosted.org/packages/8b/22/b65bb1a99a60d6e9e6010d284d233a0736cb4a74e46c8487cbd0f7428d08/aioresponses-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "4d94f7c0abbd7968f6ada218cfd316fc", "sha256": "ecc90e59d11cdef8b45753b87bd0a673e5556772fd593707bec78c4b06144f9e"}, "downloads": -1, "filename": "aioresponses-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d94f7c0abbd7968f6ada218cfd316fc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7282, "upload_time": "2019-01-21T21:05:33", "upload_time_iso_8601": "2019-01-21T21:05:33.954767Z", "url": "https://files.pythonhosted.org/packages/fd/7a/44f3dacfec5d2aba6e045273f38977c558ba1afb2f2892d83f70362e3931/aioresponses-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c1c446092741299cdbd33f29a678ecf", "sha256": "46ef0568e0bd9a603665649ae0ee42347525ebb1f8078519f24261b478942146"}, "downloads": -1, "filename": "aioresponses-0.6.0.tar.gz", "has_sig": false, "md5_digest": "4c1c446092741299cdbd33f29a678ecf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32397, "upload_time": "2019-01-21T21:05:36", "upload_time_iso_8601": "2019-01-21T21:05:36.522647Z", "url": "https://files.pythonhosted.org/packages/0a/2d/161ba2fa169beb01a1bb9f978a9c7139977aeb94d206c152ec9d32fd3c71/aioresponses-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "c078041302f6a3266e26043c022b46b8", "sha256": "152a7c979dc275a3a96b2a4616eda00b5ad5729f8bb0b36cce7c545509d48247"}, "downloads": -1, "filename": "aioresponses-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c078041302f6a3266e26043c022b46b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7678, "upload_time": "2019-10-01T22:03:29", "upload_time_iso_8601": "2019-10-01T22:03:29.360158Z", "url": "https://files.pythonhosted.org/packages/f1/8f/6a37a410144444de6c7982858cc318beee0c420da02d063fca183cd0a696/aioresponses-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c7ff579ecf0019fb40632450f967cff", "sha256": "fab9607d11a2e05050ef766006b8fdd9424e7122c2bd6f34a5376be4c728e242"}, "downloads": -1, "filename": "aioresponses-0.6.1.tar.gz", "has_sig": false, "md5_digest": "0c7ff579ecf0019fb40632450f967cff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24846, "upload_time": "2019-10-01T22:03:32", "upload_time_iso_8601": "2019-10-01T22:03:32.021261Z", "url": "https://files.pythonhosted.org/packages/bb/28/40423fb3988c032a7f8a131585c35419481875a8c971573b41ae9a6794fb/aioresponses-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "f848d32390440fca076bff3a9484206a", "sha256": "57354fdec291f07ae50f89da71504966542a57363d6a1ad3a6222520a7d1bd84"}, "downloads": -1, "filename": "aioresponses-0.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f848d32390440fca076bff3a9484206a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9580, "upload_time": "2020-01-09T18:12:09", "upload_time_iso_8601": "2020-01-09T18:12:09.448754Z", "url": "https://files.pythonhosted.org/packages/c9/6d/abde45d1231337c011d770acdea8084f27b73cce7d5850b798bcf06f07d9/aioresponses-0.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "70e6f57fc7bd120b0419a197a66c0e17", "sha256": "4606becb52dd8ea7f0aebdbfb8e24b1efb0ed22a3698d0708b233ad77b5f386b"}, "downloads": -1, "filename": "aioresponses-0.6.2.tar.gz", "has_sig": false, "md5_digest": "70e6f57fc7bd120b0419a197a66c0e17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25742, "upload_time": "2020-01-09T18:12:12", "upload_time_iso_8601": "2020-01-09T18:12:12.514126Z", "url": "https://files.pythonhosted.org/packages/6e/87/2a496280c16ba48c73f1eb3777030b20e2037923baf5418342a451ed71f1/aioresponses-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "6988ef12aa6531e26555047a965eff15", "sha256": "6ccc18d766adb0f3c814f674c50e48f73fb291d29a66a60a9fa088c3e8087d8e"}, "downloads": -1, "filename": "aioresponses-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6988ef12aa6531e26555047a965eff15", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9923, "upload_time": "2020-02-11T21:58:45", "upload_time_iso_8601": "2020-02-11T21:58:45.620767Z", "url": "https://files.pythonhosted.org/packages/07/2e/7290c8a0d480ec3dfd35c5215fc88053fbc7c3c18789a814b42ddc7595de/aioresponses-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7939f9adab29d9838f5ec30be9118780", "sha256": "7b636f2148444cf46b19c2a1ae077a6fdfd93f65cde13f6130481f907d2c811b"}, "downloads": -1, "filename": "aioresponses-0.6.3.tar.gz", "has_sig": false, "md5_digest": "7939f9adab29d9838f5ec30be9118780", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26936, "upload_time": "2020-02-11T21:58:47", "upload_time_iso_8601": "2020-02-11T21:58:47.592916Z", "url": "https://files.pythonhosted.org/packages/2e/95/3412b27d3dac8e551a063bd116cfbfc23ce86d69e67ef279770b86ac5c27/aioresponses-0.6.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6988ef12aa6531e26555047a965eff15", "sha256": "6ccc18d766adb0f3c814f674c50e48f73fb291d29a66a60a9fa088c3e8087d8e"}, "downloads": -1, "filename": "aioresponses-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6988ef12aa6531e26555047a965eff15", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9923, "upload_time": "2020-02-11T21:58:45", "upload_time_iso_8601": "2020-02-11T21:58:45.620767Z", "url": "https://files.pythonhosted.org/packages/07/2e/7290c8a0d480ec3dfd35c5215fc88053fbc7c3c18789a814b42ddc7595de/aioresponses-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7939f9adab29d9838f5ec30be9118780", "sha256": "7b636f2148444cf46b19c2a1ae077a6fdfd93f65cde13f6130481f907d2c811b"}, "downloads": -1, "filename": "aioresponses-0.6.3.tar.gz", "has_sig": false, "md5_digest": "7939f9adab29d9838f5ec30be9118780", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26936, "upload_time": "2020-02-11T21:58:47", "upload_time_iso_8601": "2020-02-11T21:58:47.592916Z", "url": "https://files.pythonhosted.org/packages/2e/95/3412b27d3dac8e551a063bd116cfbfc23ce86d69e67ef279770b86ac5c27/aioresponses-0.6.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:52 2020"}