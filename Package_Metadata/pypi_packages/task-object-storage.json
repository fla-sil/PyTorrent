{"info": {"author": "Siili Solutions Oyj, Intelligent Automation", "author_email": "henrik.vesterinen@siili.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Task Object Storage\n===================\n\nTransaction management for Robot Framework RPA using MongoDB.\n\nIncluded are two packages: ``tos`` and ``TOSLibrary``.\nThe former is the actual task object storage implementation written in\npure Python, without any Robot Framework dependencies. ``TOSLibrary`` is\na Robot Framework keyword library built on top of ``tos``. It is built as a\nlightweight dynamic proxy library, so all the changes in ``tos`` are immediately\navailable in ``TOSLibrary`` keywords.\n\n\nFor full documentation see https://intelligent_automation.gitlab-siili.io/tos\n\n\nQuickstart guide\n----------------\n\nRequirements\n............\n\n* MongoDB (version >4)\n* Python (version >3.6)\n\nInstallation\n............\n\nTest PyPi:\n\n.. code-block:: bash\n\n  pip install --extra-index https://test.pypi.org/simple task-object-storage\n\nUsage\n.....\n\nYou can import ``TOSLibrary`` into your Robot Framework suite with\n\n.. code-block:: robotframework\n\n  *** Settings ***\n  Library  TOSLibrary  ${db_server}:${db_port}  ${db_name}\n\n\nIf you are using authentication in MongoDB, you can pass credentials:\n\n.. code-block:: robotframework\n\n  *** Settings ***\n  Library  TOSLibrary  ${db_server}:${db_port}  ${db_name}  ${db_user}  ${db_passw}\n\n\nNow the keywords are callable from Robot Framework.\n\nThis library instance can also be accessed inside Python keywords with\n\n.. code-block:: python\n\n  from robot.libraries.BuiltIn import BuiltIn\n\n  BuiltIn().get_library_instance(\"TOSLibrary\")\n\nThe keywords can be also called with:\n\n.. code-block:: python\n\n  BuiltIn().run_keyword(\"<keyword name>\")\n\n\nTo use task object storage in Python without any Robot Framework dependencies\nyou should use ``tos`` package directly:\n\n.. code-block:: python\n\n  from tos.task_object_storage import TaskObjectStorage\n\n  tos = TaskObjectStorage(\n          db_server=server,\n          db_name=db_name,\n          db_user=db_user,\n          db_passw=db_passw,\n  )\n\n\nIf ``db_user`` and ``db_passw`` are empty strings, ``TaskObjectStorage`` will default\nto using no authentication.\n\nAvailable keywords\n------------------\nSee the full API documentation.\n\n\nBuilding a distribution package from source\n...........................................\n\nCreate a pip wheel package using\n\n.. code-block:: bash\n\n  scripts/build.sh\n\n\nor\n\n.. code-block:: bash\n\n  python setup.py bdist_wheel\n\n\nand distribute the `whl` package found in the `dist` directory.\n\nThis local package can be installed with\n\n.. code-block:: bash\n\n  pip install <package-name>.whl\n\nTo upload to PyPi:\n\n.. code-block:: bash\n\n  twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.siilicloud.com/intelligent_automation/tos", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "task-object-storage", "package_url": "https://pypi.org/project/task-object-storage/", "platform": "", "project_url": "https://pypi.org/project/task-object-storage/", "project_urls": {"Homepage": "https://gitlab.siilicloud.com/intelligent_automation/tos"}, "release_url": "https://pypi.org/project/task-object-storage/0.2.1/", "requires_dist": ["dnspython", "Pillow", "pymongo (>=3.7.2)", "robotframework (>=3.1)", "wheel"], "requires_python": "", "summary": "Task Object Storage package.", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Transaction management for Robot Framework RPA using MongoDB.</p>\n<p>Included are two packages: <tt>tos</tt> and <tt>TOSLibrary</tt>.\nThe former is the actual task object storage implementation written in\npure Python, without any Robot Framework dependencies. <tt>TOSLibrary</tt> is\na Robot Framework keyword library built on top of <tt>tos</tt>. It is built as a\nlightweight dynamic proxy library, so all the changes in <tt>tos</tt> are immediately\navailable in <tt>TOSLibrary</tt> keywords.</p>\n<p>For full documentation see <a href=\"https://intelligent_automation.gitlab-siili.io/tos\" rel=\"nofollow\">https://intelligent_automation.gitlab-siili.io/tos</a></p>\n<div id=\"quickstart-guide\">\n<h2>Quickstart guide</h2>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>MongoDB (version &gt;4)</li>\n<li>Python (version &gt;3.6)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Test PyPi:</p>\n<pre>pip install --extra-index https://test.pypi.org/simple task-object-storage\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>You can import <tt>TOSLibrary</tt> into your Robot Framework suite with</p>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">  </span><span class=\"nn\">TOSLibrary</span><span class=\"p\">  ${</span><span class=\"nv\">db_server</span><span class=\"p\">}</span><span class=\"s\">:</span><span class=\"p\">${</span><span class=\"nv\">db_port</span><span class=\"p\">}  ${</span><span class=\"nv\">db_name</span><span class=\"p\">}</span>\n</pre>\n<p>If you are using authentication in MongoDB, you can pass credentials:</p>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\">\n</span><span class=\"kn\">Library</span><span class=\"p\">  </span><span class=\"nn\">TOSLibrary</span><span class=\"p\">  ${</span><span class=\"nv\">db_server</span><span class=\"p\">}</span><span class=\"s\">:</span><span class=\"p\">${</span><span class=\"nv\">db_port</span><span class=\"p\">}  ${</span><span class=\"nv\">db_name</span><span class=\"p\">}  ${</span><span class=\"nv\">db_user</span><span class=\"p\">}  ${</span><span class=\"nv\">db_passw</span><span class=\"p\">}</span>\n</pre>\n<p>Now the keywords are callable from Robot Framework.</p>\n<p>This library instance can also be accessed inside Python keywords with</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">robot.libraries.BuiltIn</span> <span class=\"kn\">import</span> <span class=\"n\">BuiltIn</span>\n\n<span class=\"n\">BuiltIn</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_library_instance</span><span class=\"p\">(</span><span class=\"s2\">\"TOSLibrary\"</span><span class=\"p\">)</span>\n</pre>\n<p>The keywords can be also called with:</p>\n<pre><span class=\"n\">BuiltIn</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_keyword</span><span class=\"p\">(</span><span class=\"s2\">\"&lt;keyword name&gt;\"</span><span class=\"p\">)</span>\n</pre>\n<p>To use task object storage in Python without any Robot Framework dependencies\nyou should use <tt>tos</tt> package directly:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tos.task_object_storage</span> <span class=\"kn\">import</span> <span class=\"n\">TaskObjectStorage</span>\n\n<span class=\"n\">tos</span> <span class=\"o\">=</span> <span class=\"n\">TaskObjectStorage</span><span class=\"p\">(</span>\n        <span class=\"n\">db_server</span><span class=\"o\">=</span><span class=\"n\">server</span><span class=\"p\">,</span>\n        <span class=\"n\">db_name</span><span class=\"o\">=</span><span class=\"n\">db_name</span><span class=\"p\">,</span>\n        <span class=\"n\">db_user</span><span class=\"o\">=</span><span class=\"n\">db_user</span><span class=\"p\">,</span>\n        <span class=\"n\">db_passw</span><span class=\"o\">=</span><span class=\"n\">db_passw</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n</pre>\n<p>If <tt>db_user</tt> and <tt>db_passw</tt> are empty strings, <tt>TaskObjectStorage</tt> will default\nto using no authentication.</p>\n</div>\n</div>\n<div id=\"available-keywords\">\n<h2>Available keywords</h2>\n<p>See the full API documentation.</p>\n<div id=\"building-a-distribution-package-from-source\">\n<h3>Building a distribution package from source</h3>\n<p>Create a pip wheel package using</p>\n<pre>scripts/build.sh\n</pre>\n<p>or</p>\n<pre>python setup.py bdist_wheel\n</pre>\n<p>and distribute the <cite>whl</cite> package found in the <cite>dist</cite> directory.</p>\n<p>This local package can be installed with</p>\n<pre>pip install &lt;package-name&gt;.whl\n</pre>\n<p>To upload to PyPi:</p>\n<pre>twine upload --repository-url https://test.pypi.org/legacy/ dist/* --verbose\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6985219, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "55df87513ac66a1d135c356e14f13770", "sha256": "98233bcec3ca240e0b14d7097e7e7d6f9392367de8ca8e92b467ef62e8517a0f"}, "downloads": -1, "filename": "task_object_storage-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "55df87513ac66a1d135c356e14f13770", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33985, "upload_time": "2019-05-20T11:37:23", "upload_time_iso_8601": "2019-05-20T11:37:23.278775Z", "url": "https://files.pythonhosted.org/packages/ca/37/7b64f978e3a3f989d96cec7b28499ac3bf44f7e6245f346f1f73053bb953/task_object_storage-0.2.0-py3-none-any.whl", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2b99f3f71d0e92baf20128f104b48486", "sha256": "2ca9a61dbcf543fcc771ca9f6ba33a93e785cc92018c6bf568d040bef14ead19"}, "downloads": -1, "filename": "task_object_storage-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b99f3f71d0e92baf20128f104b48486", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33980, "upload_time": "2019-05-20T12:02:14", "upload_time_iso_8601": "2019-05-20T12:02:14.928441Z", "url": "https://files.pythonhosted.org/packages/cb/b9/aef07c6dce6092642ed5ff710879a312f5ac93bc9e5971e716b0e4f36309/task_object_storage-0.2.1-py3-none-any.whl", "yanked": false}], "0.3.0a2": [{"comment_text": "", "digests": {"md5": "e0b3c7c38e63420d5d2cc9603ebea50e", "sha256": "ebadaf5d6f2e737bbd2ff3067aa28f25c1501756cc6b7e2b6ebfd6caa60e1497"}, "downloads": -1, "filename": "task_object_storage-0.3.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "e0b3c7c38e63420d5d2cc9603ebea50e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 57368, "upload_time": "2019-11-11T09:05:59", "upload_time_iso_8601": "2019-11-11T09:05:59.553572Z", "url": "https://files.pythonhosted.org/packages/6c/43/c5118a6a655a51f916425c7254bd3d4dc19dc78fc5c5d615bf79ead9f61e/task_object_storage-0.3.0a2-py3-none-any.whl", "yanked": false}], "0.3.0a6": [{"comment_text": "", "digests": {"md5": "44c3210449e995ad565ba6a3b4abfae4", "sha256": "b891c7d4ec4f1a0441315e0219abefbcb34523c8f6a5797ebb694b1cbcf58bb9"}, "downloads": -1, "filename": "task_object_storage-0.3.0a6-py3-none-any.whl", "has_sig": false, "md5_digest": "44c3210449e995ad565ba6a3b4abfae4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 58231, "upload_time": "2020-04-09T11:39:38", "upload_time_iso_8601": "2020-04-09T11:39:38.308784Z", "url": "https://files.pythonhosted.org/packages/a8/d7/6ad4d61053651f002c6c51bea08fcb276347c8c0e3e5c65feaba517728ae/task_object_storage-0.3.0a6-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b99f3f71d0e92baf20128f104b48486", "sha256": "2ca9a61dbcf543fcc771ca9f6ba33a93e785cc92018c6bf568d040bef14ead19"}, "downloads": -1, "filename": "task_object_storage-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2b99f3f71d0e92baf20128f104b48486", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 33980, "upload_time": "2019-05-20T12:02:14", "upload_time_iso_8601": "2019-05-20T12:02:14.928441Z", "url": "https://files.pythonhosted.org/packages/cb/b9/aef07c6dce6092642ed5ff710879a312f5ac93bc9e5971e716b0e4f36309/task_object_storage-0.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:57:45 2020"}