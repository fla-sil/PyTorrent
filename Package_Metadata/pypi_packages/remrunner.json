{"info": {"author": "Jeff Leary", "author_email": "sillymonkeysoftware@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "Remote Runner\n=============\nTransfer a local script file to a remote host and execute it.\n\n\nRequirements\n============\n- Python 2.7 and Python 3 are supported.\n- Paramiko 1.10+.\n\n\nInstall\n=======\n::\n\n    pip install remrunner\n\n\nSynopsis\n========\n::\n\n    from remrunner import runner\n    r = runner.Runner(host, username)\n    \n    rval, stdout, stderr = r.run('/path/to/local/script.py')\n    if rval:\n        print(stderr)\n    else:\n        print(stdout)\n \n    r.close()\n  \n\nUses\n====\n- Great when using scripts to collect information from a large number of remote hosts. \n- No need to maintain scripts across multiple systems. Only the script versions on the local host need to be maintained.\n  \n\nDetails\n=======\nNamed files are copied to a temp location (./.remrunner/[PID]/) on the remote \nhost, permissions are set to 0700, and script is then executed.\n\nOn cleanup, the [PID] directory and all contents are removed before closing\nthe connections.\n\n \nAPI\n===\n\nClass Runner\n------------\n\ninit(host, user, kwargs)\n  *host* : Required. IP Address or FQDN\n  \n  *user* : Optional. Defaults to current running user on local machine.\n  \n  keyword-args:\n  *auto_add* : (Boolean) Defaults to True. Set Paramiko Client.AutoAddPolicy.\n  \n  \nrun(script, sudo, timeout, opts)\n  Run the named local script on remote host.\n  \n  *script* : Path to script on local machine\n  \n  *sudo* : (Boolean) Defaults to False. When true, the execution command on \n  remote machine will be prefaced with \"sudo \"\n  \n  *timeout* : (seconds, optional) Defaults to 10\n  \n  *opts* : optional command-line arguments that will be passed to remote script.\n  \n\nclose()      \n  Clean up temporary directories on remote host and close SSH and SFTP sessions.\n  \n \nExamples\n========\n\n- Run remote script with sudo::\n\n    r.run(script, True)\n    \n- Run remote script and specify a 60 second timeout::\n\n    r.run(script, False, 60)\n     \n- Run remote script with timeout and optional arguments::\n\n    r.run(script, False, 15, \"--verbose --interval=4\")\n\n\nKnown Issues\n============\nCurrently, as this is intended to be used for automation, *remrunner* assumes \nthat SSH keys to allow password-less logins are already in place. \nThere is no option to prompt for password or ssh passphrase. \nMaybe in a future release.\n\n\nTo Do\n=====\nCould use better exception handling in a few places.\nNeeds a tests.\nProbably needs sanitizing/de-tainting of optional user arguments.\n\n  \nAuthor\n======\nJeff Leary (sillymonkeysoftware -at- gmail -dot- com)", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/jeffleary00/remrunner/tarball/0.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jeffleary00/remrunner", "keywords": "automation,ssh,command,paramiko", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "remrunner", "package_url": "https://pypi.org/project/remrunner/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/remrunner/", "project_urls": {"Download": "https://github.com/jeffleary00/remrunner/tarball/0.5", "Homepage": "https://github.com/jeffleary00/remrunner"}, "release_url": "https://pypi.org/project/remrunner/0.5/", "requires_dist": null, "requires_python": null, "summary": "Transfer a local script file to a remote host and execute it.", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"remote-runner\">\n<h2>Remote Runner</h2>\n<p>Transfer a local script file to a remote host and execute it.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7 and Python 3 are supported.</li>\n<li>Paramiko 1.10+.</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install remrunner\n</pre>\n</div>\n<div id=\"synopsis\">\n<h2>Synopsis</h2>\n<pre>from remrunner import runner\nr = runner.Runner(host, username)\n\nrval, stdout, stderr = r.run('/path/to/local/script.py')\nif rval:\n    print(stderr)\nelse:\n    print(stdout)\n\nr.close()\n</pre>\n</div>\n<div id=\"uses\">\n<h2>Uses</h2>\n<ul>\n<li>Great when using scripts to collect information from a large number of remote hosts.</li>\n<li>No need to maintain scripts across multiple systems. Only the script versions on the local host need to be maintained.</li>\n</ul>\n</div>\n<div id=\"details\">\n<h2>Details</h2>\n<p>Named files are copied to a temp location (./.remrunner/[PID]/) on the remote\nhost, permissions are set to 0700, and script is then executed.</p>\n<p>On cleanup, the [PID] directory and all contents are removed before closing\nthe connections.</p>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<h2 id=\"class-runner\"><span class=\"section-subtitle\">Class Runner</span></h2>\n<dl>\n<dt>init(host, user, kwargs)</dt>\n<dd><p><em>host</em> : Required. IP Address or FQDN</p>\n<p><em>user</em> : Optional. Defaults to current running user on local machine.</p>\n<p>keyword-args:\n<em>auto_add</em> : (Boolean) Defaults to True. Set Paramiko Client.AutoAddPolicy.</p>\n</dd>\n<dt>run(script, sudo, timeout, opts)</dt>\n<dd><p>Run the named local script on remote host.</p>\n<p><em>script</em> : Path to script on local machine</p>\n<p><em>sudo</em> : (Boolean) Defaults to False. When true, the execution command on\nremote machine will be prefaced with \u201csudo \u201c</p>\n<p><em>timeout</em> : (seconds, optional) Defaults to 10</p>\n<p><em>opts</em> : optional command-line arguments that will be passed to remote script.</p>\n</dd>\n<dt>close()</dt>\n<dd>Clean up temporary directories on remote host and close SSH and SFTP sessions.</dd>\n</dl>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<ul>\n<li><p>Run remote script with sudo:</p>\n<pre>r.run(script, True)\n</pre>\n</li>\n<li><p>Run remote script and specify a 60 second timeout:</p>\n<pre>r.run(script, False, 60)\n</pre>\n</li>\n<li><p>Run remote script with timeout and optional arguments:</p>\n<pre>r.run(script, False, 15, \"--verbose --interval=4\")\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"known-issues\">\n<h2>Known Issues</h2>\n<p>Currently, as this is intended to be used for automation, <em>remrunner</em> assumes\nthat SSH keys to allow password-less logins are already in place.\nThere is no option to prompt for password or ssh passphrase.\nMaybe in a future release.</p>\n</div>\n<div id=\"to-do\">\n<h2>To Do</h2>\n<p>Could use better exception handling in a few places.\nNeeds a tests.\nProbably needs sanitizing/de-tainting of optional user arguments.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>Jeff Leary (sillymonkeysoftware -at- gmail -dot- com)</p>\n</div>\n\n          </div>"}, "last_serial": 2553692, "releases": {"0.3": [{"comment_text": "", "digests": {"md5": "5b6a56a4cf8ccf90bdaccd66e6e7f608", "sha256": "e62a75e3297cf14ac5a892592017903d81c394d50c91995ccadc89a7f7729f93"}, "downloads": -1, "filename": "remrunner-0.3.tar.gz", "has_sig": false, "md5_digest": "5b6a56a4cf8ccf90bdaccd66e6e7f608", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2968, "upload_time": "2016-12-12T21:32:30", "upload_time_iso_8601": "2016-12-12T21:32:30.631129Z", "url": "https://files.pythonhosted.org/packages/5a/b3/f4d254797b4eb05bf04b36109197a2acaf90f626e1a62ac7242778fe414b/remrunner-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "9cea8fa26ffa5b4e40f4a8ace1397ba8", "sha256": "f0098853a1e23bd0c6df2adc61a769702e43bc2805a952e9700f50058ce7611e"}, "downloads": -1, "filename": "remrunner-0.4.tar.gz", "has_sig": false, "md5_digest": "9cea8fa26ffa5b4e40f4a8ace1397ba8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3971, "upload_time": "2016-12-15T02:22:26", "upload_time_iso_8601": "2016-12-15T02:22:26.777479Z", "url": "https://files.pythonhosted.org/packages/fb/f4/8e6458af795af7b3b4d813c172713aecc755cc387ee9b3651c0e90b7363a/remrunner-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "44e6e617858d503836b5f553ca937aeb", "sha256": "5e21129d92ce2d07e642b35aa550ae3143c83aae26471f8a367d532075af7b16"}, "downloads": -1, "filename": "remrunner-0.5.tar.gz", "has_sig": false, "md5_digest": "44e6e617858d503836b5f553ca937aeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3945, "upload_time": "2017-01-04T14:27:03", "upload_time_iso_8601": "2017-01-04T14:27:03.180399Z", "url": "https://files.pythonhosted.org/packages/b8/da/24ef49bb1ac63a94a2218e72280f04ac92528f9a7c805a0cdc5b4557a5d0/remrunner-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44e6e617858d503836b5f553ca937aeb", "sha256": "5e21129d92ce2d07e642b35aa550ae3143c83aae26471f8a367d532075af7b16"}, "downloads": -1, "filename": "remrunner-0.5.tar.gz", "has_sig": false, "md5_digest": "44e6e617858d503836b5f553ca937aeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3945, "upload_time": "2017-01-04T14:27:03", "upload_time_iso_8601": "2017-01-04T14:27:03.180399Z", "url": "https://files.pythonhosted.org/packages/b8/da/24ef49bb1ac63a94a2218e72280f04ac92528f9a7c805a0cdc5b4557a5d0/remrunner-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:49 2020"}