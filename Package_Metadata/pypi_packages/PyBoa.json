{"info": {"author": "Pythux", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# PyBoa\n\n[![Latest Version](https://img.shields.io/pypi/v/PyBoa.svg)](https://pypi.python.org/pypi/PyBoa/)\n[![Supported Python versions](https://img.shields.io/pypi/pyversions/PyBoa.svg)](https://pypi.python.org/pypi/PyBoa/)\n\n\nSubclass of list and dict, recursively, giving attribute access and helper functions\n\n\n### import boa\n```python\n>>> from boa import boa\n```\n\n```python\n# recursively transforme the data into boa\n>>> a = boa({'b': {'c': [2, 3]}})\n\n# make it accessible by key or attribute\n>>> a['b']['c']\n[2, 3]\n>>> a.b.c\n[2, 3]\n```\n\n\n\n## Do what you usually do\n\n``boa`` return a subclass of ``dict`` and ``list``, letting you do everything you use to do\n\n\n## everything in [doc: list, dict](https://docs.python.org/3/tutorial/datastructures.html) can still be done\n\n### with the exception of overided methodes:\n\n##### list.reverse\n```py\n>>> li = boa([1, 2])\n>>> li.reverse()\n[2, 1]\n>>> li # no change in the original list\n[1, 2]\n\n# behaviour of list.reverse:\n>>> li.reverse(side_effect=True)\n>>> li\n[2, 1]\n# or use list.reverse directly\n>>> li = boa([1, 2])\n>>> list.reverse(li)\n>>> li\n[2, 1]\n```\n\n##### list.copy\n```py\n>>> b = boa([1, {'d': 3}])\n>>> c = b.copy()\n>>> b[0] = 100\n\n# c is a copy of b, and still a boa object:\n>>> c[0]\n1\n>>> c[1].d\n3\n```\n\n## improvement:\n##### list.index\n```py\n>>> li = boa([1, 2])\n>>> li.index(4)  # same behaviour as the original\nValueError: 4 is not in list\n\n>>> li.index(4, raise_exception=False)  # improvement\nNone\n```\n\n## transforme inserted data too:\n```py\n>>> a = boa({})\n>>> a.x = {'y': {'z': 3}}\n>>> a.x.y.z\n3\n>>> a.li = []\n>>> a.li.append({'b': 2})\n>>> a.li[0].b\n2\n>>> a['b'] = [{'li': [1, 2]}]\n>>> a.b[0].li.map(lambda x: x+1)\n[2, 3]\n```\n\n## Add some usefull functions\n### on list:\n#### .map & .filter\n```python\n>>> li = boa([1, 2])\n>>> li.map(lambda x: x+1)\n[2, 3]\n\n>>> li = boa([x for x in range(10)])\n>>> li.filter(lambda x: 1 < x <= 4)\n[2, 3, 4]\n\n# .filter & .map return boa list\n>>> li = boa([{'x': x} for x in range(10)])\n>>> li.filter(lambda obj: obj.x < 2).map(lambda obj: obj.x)\n[0, 1]\n```\n\n#### .reduce\n```py\n>>> li = boa([2, 3])\n>>> li.reduce(lambda acc, x: acc*x)\n6\n```\n\n#### random with .shuffle & .randomChoice\n```py\n>>> arr = boa([x for x in range(10)])\n>>> arr.shuffle()\n[3, 1, 5, 8, 6, 2, 0, 7, 9, 4]\n\n>>> arr.randomChoice()\n4\n# ``one of the element at random``\n```\n\n#### returning back to normal dict and list:\n```py\n>>> a = boa({'li': [1, 2, {'k': 'v'}]})\n>>> b = a.toPython()\n\n>>> b.li\nAttributeError: 'dict' object has no attribute 'li'\n>>> b['li'].map()\nAttributeError: 'list' object has no attribute 'map'\n>>> b['li'][2].k\nAttributeError: 'dict' object has no attribute 'k'\n```\n\n## Overide attribute:\n```py\n# can overide dictionary attributes, if you really want it:\n>>> d = boa({'items': 1})\n>>> d.keys = 2\n>>> d.values()\ndict_values([1, 2])\n```\n\n## A wraps function\n```py\n>>> @boa\n>>> def fun(x):\n>>>     return x\n\n>>> fun({'a': 1}).a\n1\n```\n### wraps objet ?\n\n```py\nclass A:\n    \"\"\"simple doc\"\"\"\n    d = {'key': 'value'}\n\n    def fun(self, data):\n        return data\n```\n\n```py\n>>> obj = boa(A())\n# keep the class name and doc informations:\n>>> obj.__class__.__name__\n'A'\n>>> obj.__doc__\n'simple doc'\n>>> obj.fun({'a': {'b': 4}}).a.b\n4\n>>> obj.d.key\n'value'\n\n# no side effect on class A:\n>>> obj_2 = A()\n>>> obj_2.fun({'b': 2}).b\nAttributeError: 'dict' object has no attribute 'b'\n>>> obj_2.d.key\nAttributeError: 'dict' object has no attribute 'key'\n```\n\n#### to the moon !\n```py\nclass B:\n    def get_a(self):\n        return A()\n\n    def get_b(self):\n        return B()\n```\n\n```py\n>>> b = boa(B())\n>>> b.get_a().d.key\n'value'\n>>> b.get_b().get_b().get_a().d.key\n'value'\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Pythux/PyBoa", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "PyBoa", "package_url": "https://pypi.org/project/PyBoa/", "platform": "", "project_url": "https://pypi.org/project/PyBoa/", "project_urls": {"Homepage": "https://github.com/Pythux/PyBoa"}, "release_url": "https://pypi.org/project/PyBoa/1.3.4/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Subclass of list and dict, recursively, giving attribute access and helper functions", "version": "1.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyBoa</h1>\n<p><a href=\"https://pypi.python.org/pypi/PyBoa/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd4dc025bc22b279ab9d8416a62f7d15c632c1c4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f5079426f612e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/PyBoa/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0204bc2dee3ab6aa5144fa11b0f3e04622f11752/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f5079426f612e737667\"></a></p>\n<p>Subclass of list and dict, recursively, giving attribute access and helper functions</p>\n<h3>import boa</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">boa</span> <span class=\"kn\">import</span> <span class=\"n\">boa</span>\n</pre>\n<pre><span class=\"c1\"># recursively transforme the data into boa</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">({</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'c'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]}})</span>\n\n<span class=\"c1\"># make it accessible by key or attribute</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s1\">'b'</span><span class=\"p\">][</span><span class=\"s1\">'c'</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">c</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n</pre>\n<h2>Do what you usually do</h2>\n<p><code>boa</code> return a subclass of <code>dict</code> and <code>list</code>, letting you do everything you use to do</p>\n<h2>everything in <a href=\"https://docs.python.org/3/tutorial/datastructures.html\" rel=\"nofollow\">doc: list, dict</a> can still be done</h2>\n<h3>with the exception of overided methodes:</h3>\n<h5>list.reverse</h5>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"c1\"># no change in the original list</span>\n<span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># behaviour of list.reverse:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"n\">side_effect</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"c1\"># or use list.reverse directly</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">list</span><span class=\"o\">.</span><span class=\"n\">reverse</span><span class=\"p\">(</span><span class=\"n\">li</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<h5>list.copy</h5>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'d'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">copy</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n\n<span class=\"c1\"># c is a copy of b, and still a boa object:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">d</span>\n<span class=\"mi\">3</span>\n</pre>\n<h2>improvement:</h2>\n<h5>list.index</h5>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>  <span class=\"c1\"># same behaviour as the original</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"mi\">4</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"nb\">list</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">raise_exception</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>  <span class=\"c1\"># improvement</span>\n<span class=\"kc\">None</span>\n</pre>\n<h2>transforme inserted data too:</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">({})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'y'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'z'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">z</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">li</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">b</span>\n<span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"p\">[</span><span class=\"s1\">'b'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[{</span><span class=\"s1\">'li'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">]}]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">b</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n</pre>\n<h2>Add some usefull functions</h2>\n<h3>on list:</h3>\n<h4>.map &amp; .filter</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">+</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">1</span> <span class=\"o\">&lt;</span> <span class=\"n\">x</span> <span class=\"o\">&lt;=</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># .filter &amp; .map return boa list</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">}</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"o\">&lt;</span> <span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">obj</span><span class=\"p\">:</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">]</span>\n</pre>\n<h4>.reduce</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">li</span><span class=\"o\">.</span><span class=\"n\">reduce</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">acc</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">acc</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"mi\">6</span>\n</pre>\n<h4>random with .shuffle &amp; .randomChoice</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">([</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">shuffle</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span><span class=\"o\">.</span><span class=\"n\">randomChoice</span><span class=\"p\">()</span>\n<span class=\"mi\">4</span>\n<span class=\"c1\"># ``one of the element at random``</span>\n</pre>\n<h4>returning back to normal dict and list:</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">({</span><span class=\"s1\">'li'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'k'</span><span class=\"p\">:</span> <span class=\"s1\">'v'</span><span class=\"p\">}]})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">toPython</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">li</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">'dict'</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">'li'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"s1\">'li'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">()</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">'list'</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">'map'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"p\">[</span><span class=\"s1\">'li'</span><span class=\"p\">][</span><span class=\"mi\">2</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">k</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">'dict'</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">'k'</span>\n</pre>\n<h2>Overide attribute:</h2>\n<pre><span class=\"c1\"># can overide dictionary attributes, if you really want it:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">({</span><span class=\"s1\">'items'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">keys</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">()</span>\n<span class=\"n\">dict_values</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n</pre>\n<h2>A wraps function</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@boa</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">return</span> <span class=\"n\">x</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fun</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">a</span>\n<span class=\"mi\">1</span>\n</pre>\n<h3>wraps objet ?</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"simple doc\"\"\"</span>\n    <span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'key'</span><span class=\"p\">:</span> <span class=\"s1\">'value'</span><span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">fun</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">data</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">(</span><span class=\"n\">A</span><span class=\"p\">())</span>\n<span class=\"c1\"># keep the class name and doc informations:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"vm\">__class__</span><span class=\"o\">.</span><span class=\"vm\">__name__</span>\n<span class=\"s1\">'A'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"vm\">__doc__</span>\n<span class=\"s1\">'simple doc'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">fun</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}})</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">b</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">key</span>\n<span class=\"s1\">'value'</span>\n\n<span class=\"c1\"># no side effect on class A:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj_2</span> <span class=\"o\">=</span> <span class=\"n\">A</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj_2</span><span class=\"o\">.</span><span class=\"n\">fun</span><span class=\"p\">({</span><span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">b</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">'dict'</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">'b'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">obj_2</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">key</span>\n<span class=\"ne\">AttributeError</span><span class=\"p\">:</span> <span class=\"s1\">'dict'</span> <span class=\"nb\">object</span> <span class=\"n\">has</span> <span class=\"n\">no</span> <span class=\"n\">attribute</span> <span class=\"s1\">'key'</span>\n</pre>\n<h4>to the moon !</h4>\n<pre><span class=\"k\">class</span> <span class=\"nc\">B</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">A</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">B</span><span class=\"p\">()</span>\n</pre>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">boa</span><span class=\"p\">(</span><span class=\"n\">B</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">get_a</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">key</span>\n<span class=\"s1\">'value'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">b</span><span class=\"o\">.</span><span class=\"n\">get_b</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_b</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_a</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">d</span><span class=\"o\">.</span><span class=\"n\">key</span>\n<span class=\"s1\">'value'</span>\n</pre>\n\n          </div>"}, "last_serial": 6793290, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ad69f050785e6d7a5d6a18deb20def47", "sha256": "9f6221fb37565be54ce4cdd21f8bb1e32fffd26def7af915979ddd3c9fcd1b3d"}, "downloads": -1, "filename": "PyBoa-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ad69f050785e6d7a5d6a18deb20def47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3755, "upload_time": "2020-02-25T20:54:36", "upload_time_iso_8601": "2020-02-25T20:54:36.616152Z", "url": "https://files.pythonhosted.org/packages/71/fd/f43f96c50e93ee2ad7588ede3b6463af69593844ff84cdca244ddcda8b42/PyBoa-0.1-py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "9c985c630ab8523f74830b4b0b389301", "sha256": "faad2696ca7d39b5fdd66068bafe35b138dae52dc55fc72dbe3ec5c3938ae7df"}, "downloads": -1, "filename": "PyBoa-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9c985c630ab8523f74830b4b0b389301", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5114, "upload_time": "2020-02-26T20:38:56", "upload_time_iso_8601": "2020-02-26T20:38:56.835503Z", "url": "https://files.pythonhosted.org/packages/59/af/21f752e77230e25f907a554059be9a9d060bcd34f6b5ec52cba0f946d4c1/PyBoa-1.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "b31f555bdf7504359bd5e18ab3ccc18a", "sha256": "b4376decfd08cb3b5e20966bd00c640383c4773d66da710ab5eede0f2591d508"}, "downloads": -1, "filename": "PyBoa-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b31f555bdf7504359bd5e18ab3ccc18a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5148, "upload_time": "2020-02-26T20:56:34", "upload_time_iso_8601": "2020-02-26T20:56:34.838767Z", "url": "https://files.pythonhosted.org/packages/ca/ae/5c19bcff02aa6ca1ce02116884291249534bfc4ed212359c114d2b1e1491/PyBoa-1.0.1-py3-none-any.whl", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "cebe6caa2483db37c68296619121293d", "sha256": "b3ba987b234dc98879ff1a46332ae42f913bcaa4a2d60864d0a4c14fa8be5b4f"}, "downloads": -1, "filename": "PyBoa-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cebe6caa2483db37c68296619121293d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5676, "upload_time": "2020-02-27T12:17:13", "upload_time_iso_8601": "2020-02-27T12:17:13.096138Z", "url": "https://files.pythonhosted.org/packages/29/a8/c1a275362a68737909d638d8051108b11ac5889962c6d0e7a281bc30ed94/PyBoa-1.1-py3-none-any.whl", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "24740d32c053362202fe84edc9db12c9", "sha256": "ef92079b20c3dbee3ef02a84f0bdbd25373172357afafe701392fe4bf3108d7f"}, "downloads": -1, "filename": "PyBoa-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "24740d32c053362202fe84edc9db12c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5807, "upload_time": "2020-02-28T16:21:37", "upload_time_iso_8601": "2020-02-28T16:21:37.836782Z", "url": "https://files.pythonhosted.org/packages/02/0f/1e91248ac09d4d6a000c6dcb118baf8b66cfbb63dc2e633bfca2ba12e2ca/PyBoa-1.2-py3-none-any.whl", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "19e7fbf21a552a82ee01c4dcbff5bb9c", "sha256": "ee4bf4649fb059542b2cfd51b3ebeda7734c333706242d8b5d436c775c5500c6"}, "downloads": -1, "filename": "PyBoa-1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "19e7fbf21a552a82ee01c4dcbff5bb9c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5779, "upload_time": "2020-02-29T16:47:42", "upload_time_iso_8601": "2020-02-29T16:47:42.658180Z", "url": "https://files.pythonhosted.org/packages/9a/2b/95876b23b6524167afd678ddd176bd876c3163a28fdc64b434bd962814a0/PyBoa-1.3-py3-none-any.whl", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "da6209c379b78283a0c6f79b375110c1", "sha256": "1ee485911946996658bf31407364134671e7fc1c0b7232455ff84314e9f6ec2f"}, "downloads": -1, "filename": "PyBoa-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "da6209c379b78283a0c6f79b375110c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5895, "upload_time": "2020-02-29T19:26:42", "upload_time_iso_8601": "2020-02-29T19:26:42.911966Z", "url": "https://files.pythonhosted.org/packages/19/bb/f755b28a76e166a2ed11f0b64986f1744636b541e2c0b55a062141e690bf/PyBoa-1.3.1-py3-none-any.whl", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "5a641e927e926cdec878694b7e208da0", "sha256": "0e5967c368fe3498f4419f0ceb512e0d661a5588cff3274059bad33cc5a884d1"}, "downloads": -1, "filename": "PyBoa-1.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5a641e927e926cdec878694b7e208da0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5931, "upload_time": "2020-03-02T14:50:59", "upload_time_iso_8601": "2020-03-02T14:50:59.064642Z", "url": "https://files.pythonhosted.org/packages/4c/bf/99370a619331eaaaa754374d2241e918601fa6cc6f9ffa4fd289be7aa14f/PyBoa-1.3.2-py3-none-any.whl", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "9fa71c87ea7a79e90b7c888daf1ab963", "sha256": "4436a9db85a73858c445e9f0ca5aae0816e56d5b9c7ea43254c41d6beb746afb"}, "downloads": -1, "filename": "PyBoa-1.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9fa71c87ea7a79e90b7c888daf1ab963", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5917, "upload_time": "2020-03-11T15:59:09", "upload_time_iso_8601": "2020-03-11T15:59:09.444616Z", "url": "https://files.pythonhosted.org/packages/8f/34/119bde9e71507ea80f2ce638b16f99fe5dddb5451eccb759198a6886dac6/PyBoa-1.3.4-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9fa71c87ea7a79e90b7c888daf1ab963", "sha256": "4436a9db85a73858c445e9f0ca5aae0816e56d5b9c7ea43254c41d6beb746afb"}, "downloads": -1, "filename": "PyBoa-1.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9fa71c87ea7a79e90b7c888daf1ab963", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5917, "upload_time": "2020-03-11T15:59:09", "upload_time_iso_8601": "2020-03-11T15:59:09.444616Z", "url": "https://files.pythonhosted.org/packages/8f/34/119bde9e71507ea80f2ce638b16f99fe5dddb5451eccb759198a6886dac6/PyBoa-1.3.4-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:09:06 2020"}