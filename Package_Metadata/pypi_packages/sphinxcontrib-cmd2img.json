{"info": {"author": "Yongping Guo", "author_email": "guoyoooping@163.com", "bugtrack_url": null, "classifiers": [], "description": "sphinxcontrib-cmd2img\n*********************\n\nA sphinx extension to render the image/figure generated by the command body.\n\n:author: \"Yongping Guo\"<guoyoooping@163.com>\n\n1. Installing and setup\n=======================\n\npip install sphinxcontrib-cmd2img\n\nAnd just add ``sphinxcontrib.cmd2img`` to the list of extensions in the\n``conf.py`` file. For example::\n\n    extensions = ['sphinxcontrib.cmd2img']\n\n2. Introduction and examples\n============================\n\nIn rst we we use `image`_ and `figure`_ directive to render image/figure in\nthe target html document, which give us much convenience. In fact we could\nrending more things than that.\n\n.. _image: http://docutils.sourceforge.net/docs/ref/rst/directives.html#image\n.. _figure: http://docutils.sourceforge.net/docs/ref/rst/directives.html#figure\n\nSometime some command would convert or generate a image, we would like to\nrender it efficiently and directly, for example:\n\nditaa_ is a small command-line utility that can convert diagrams drawn\nusing ascii art ('drawings' that contain characters that resemble lines\nlike | / - ), into proper bitmap graphics. We could use the following\ndirective to render the image generated by ditaa::\n\n    .. cmd2img:: ditaa\n\n          +--------+   +-------+    +-------+\n          |        | --+ ditaa +--> |       |\n          |  Text  |   +-------+    |diagram|\n          |Document|   |!magic!|    |       |\n          |     {d}|   |       |    |       |\n          +---+----+   +-------+    +-------+\n              :                         ^\n              |       Lots of work      |\n              +-------------------------+\n\nOr use the following directive to render it as a figure, for a figure, we can\nadd a caption, to render it as .svg file, we add --svg in the command line::\n\n    .. cmd2fig:: ditaa --svg\n       :caption: figure 1. An example to use ditaa to render a figure\n\n          +--------+   +-------+    +-------+\n          |        | --+ ditaa +--> |       |\n          |  Text  |   +-------+    |diagram|\n          |Document|   |!magic!|    |       |\n          |     {d}|   |       |    |       |\n          +---+----+   +-------+    +-------+\n              :                         ^\n              |       Lots of work      |\n              +-------------------------+\n\nAnother example is gnuplot::\n\n    .. cmd2img:: gnuplot\n        :image: gnuplot_test.png\n\n        set output 'gnuplot_test.png'\n        set terminal pngcairo\n        set y2tics -100, 10\n        set ytics nomirror\n        plot sin(1/x) axis x1y1, 100*cos(x) axis x1y2\n\nAnother example is python::\n\n    .. cmd2img:: python3\n       :image: test.png\n       :caption: \u4f8b\u5b50\n\n       import numpy as np\n       import matplotlib.pyplot as plt\n\n       theta = np.linspace(0, 2 * np.pi, 200)\n       r = 20\n       x = r*np.cos(theta)\n       y = r*np.sin(theta)\n\n       plt.figure(figsize=(6, 6), dpi=300)\n       plt.text(3.14, 1, r\"$\\int_a^b f(x)\\mathrm{d}x$\", horizontalalignment='center', fontsize=20)\n       plt.plot(x, y)\n       plt.xlabel(r'$\\varepsilon$',fontsize=20)\n       plt.ylabel(r'$\\alpha$',fontsize=20)\n       plt.title(\"A simple plot\")\n       plt.savefig(\"test.png\", dpi=120)\n\nAnother example is convert, it will be rendered as a gif in the target::\n\n    .. cmd2img:: convert rose: -duplicate 29 -virtual-pixel Gray -distort SRT '%[fx:360.0*t/n]' -set delay '%[fx:t == 0 ? 240 : 10]' -loop 0 rose.gif\n\nAnother example::\n\n    .. cmd2img:: dot -T png\n\n        digraph example {\n            a [label=\"sphinx\", href=\"http://www.sphinx-doc.org/en/master/usage/extensions/index.html\", target=\"_top\"];\n            b [label=\"other\"];\n            a -> b;\n        }\n\n3 Options\n-----------\n\nsphinxcontrib-cmd2img provide some options for easy use.\n\n3.1 command options\n-------------------\n\nFor command options, you should add it right after the command, for example::\n\n    .. cmd2fig:: ditaa --no-antialias\n       :caption: figure 2. illustration for command option.\n\n        +--------+   +-------+    +-------+\n        |        | --+ ditaa +--> |       |\n        |  Text  |   +-------+    |diagram|\n        |Document|   |!magic!|    |       |\n        |     {d}|   |       |    |       |\n        +---+----+   +-------+    +-------+\n            :                         ^\n            |       Lots of work      |\n            +-------------------------+\n\n3.2 sphinxcontrib-cmd2img options\n---------------------------------\n\n    * :image: For those command whose the output name is embeded in the body, Users should copy the name here.\n    * :show_source: for text generated iamge, if the source code is shown. \n    * :watermark: Add water mark in the image\n    * :gravity: watermark gravity, see detail imagematick command convert -draw\n    * :location: watermark location, see detail imagematick command convert -draw\n    * :fill: watermark contention, see detail imagematick command convert -draw\n    * :pointsize: watermark pointsize, see detail imagematick command convert -draw\n    * :font: watermark font, see detail imagematick command convert -draw\n\nFor example::\n\n    .. cmd2fig:: gnuplot\n        :caption: \u5728plot \u547d\u4ee4\u91cc\u6307\u5b9a\u8303\u56f4\n        :image: gnuplot_test.png\n        :width: 600\n\n        set output 'gnuplot_test.png'\n        set terminal pngcairo\n        plot [-5:5] (sin(1/x) - cos(x))*erfc(x)\n\n5. License\n==========\n\nGPLv3\n\n.. _ditaa: http://ditaa.sourceforge.net/\n.. _Sphinx: http://sphinx.pocoo.org/\n\n6. Changelog\n============\n\n0.1 Initial upload.\n0.2 Correct minor typo", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stathissideris/sphinxcontrib-cmd2img", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "sphinxcontrib-cmd2img", "package_url": "https://pypi.org/project/sphinxcontrib-cmd2img/", "platform": "any", "project_url": "https://pypi.org/project/sphinxcontrib-cmd2img/", "project_urls": {"Homepage": "https://github.com/stathissideris/sphinxcontrib-cmd2img"}, "release_url": "https://pypi.org/project/sphinxcontrib-cmd2img/0.6/", "requires_dist": null, "requires_python": "", "summary": "Sphinx extension to render the image by script or command", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A sphinx extension to render the image/figure generated by the command body.</p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>author:</th><td>\u201cYongping Guo\u201d&lt;<a href=\"mailto:guoyoooping%40163.com\">guoyoooping<span>@</span>163<span>.</span>com</a>&gt;</td>\n</tr>\n</tbody>\n</table>\n<div id=\"installing-and-setup\">\n<h2>1. Installing and setup</h2>\n<p>pip install sphinxcontrib-cmd2img</p>\n<p>And just add <tt>sphinxcontrib.cmd2img</tt> to the list of extensions in the\n<tt>conf.py</tt> file. For example:</p>\n<pre>extensions = ['sphinxcontrib.cmd2img']\n</pre>\n</div>\n<div id=\"introduction-and-examples\">\n<h2>2. Introduction and examples</h2>\n<p>In rst we we use <a href=\"http://docutils.sourceforge.net/docs/ref/rst/directives.html#image\" rel=\"nofollow\">image</a> and <a href=\"http://docutils.sourceforge.net/docs/ref/rst/directives.html#figure\" rel=\"nofollow\">figure</a> directive to render image/figure in\nthe target html document, which give us much convenience. In fact we could\nrending more things than that.</p>\n<p>Sometime some command would convert or generate a image, we would like to\nrender it efficiently and directly, for example:</p>\n<p><a href=\"http://ditaa.sourceforge.net/\" rel=\"nofollow\">ditaa</a> is a small command-line utility that can convert diagrams drawn\nusing ascii art (\u2018drawings\u2019 that contain characters that resemble lines\nlike | / - ), into proper bitmap graphics. We could use the following\ndirective to render the image generated by ditaa:</p>\n<pre>.. cmd2img:: ditaa\n\n      +--------+   +-------+    +-------+\n      |        | --+ ditaa +--&gt; |       |\n      |  Text  |   +-------+    |diagram|\n      |Document|   |!magic!|    |       |\n      |     {d}|   |       |    |       |\n      +---+----+   +-------+    +-------+\n          :                         ^\n          |       Lots of work      |\n          +-------------------------+\n</pre>\n<p>Or use the following directive to render it as a figure, for a figure, we can\nadd a caption, to render it as .svg file, we add \u2013svg in the command line:</p>\n<pre>.. cmd2fig:: ditaa --svg\n   :caption: figure 1. An example to use ditaa to render a figure\n\n      +--------+   +-------+    +-------+\n      |        | --+ ditaa +--&gt; |       |\n      |  Text  |   +-------+    |diagram|\n      |Document|   |!magic!|    |       |\n      |     {d}|   |       |    |       |\n      +---+----+   +-------+    +-------+\n          :                         ^\n          |       Lots of work      |\n          +-------------------------+\n</pre>\n<p>Another example is gnuplot:</p>\n<pre>.. cmd2img:: gnuplot\n    :image: gnuplot_test.png\n\n    set output 'gnuplot_test.png'\n    set terminal pngcairo\n    set y2tics -100, 10\n    set ytics nomirror\n    plot sin(1/x) axis x1y1, 100*cos(x) axis x1y2\n</pre>\n<p>Another example is python:</p>\n<pre>.. cmd2img:: python3\n   :image: test.png\n   :caption: \u4f8b\u5b50\n\n   import numpy as np\n   import matplotlib.pyplot as plt\n\n   theta = np.linspace(0, 2 * np.pi, 200)\n   r = 20\n   x = r*np.cos(theta)\n   y = r*np.sin(theta)\n\n   plt.figure(figsize=(6, 6), dpi=300)\n   plt.text(3.14, 1, r\"$\\int_a^b f(x)\\mathrm{d}x$\", horizontalalignment='center', fontsize=20)\n   plt.plot(x, y)\n   plt.xlabel(r'$\\varepsilon$',fontsize=20)\n   plt.ylabel(r'$\\alpha$',fontsize=20)\n   plt.title(\"A simple plot\")\n   plt.savefig(\"test.png\", dpi=120)\n</pre>\n<p>Another example is convert, it will be rendered as a gif in the target:</p>\n<pre>.. cmd2img:: convert rose: -duplicate 29 -virtual-pixel Gray -distort SRT '%[fx:360.0*t/n]' -set delay '%[fx:t == 0 ? 240 : 10]' -loop 0 rose.gif\n</pre>\n<p>Another example:</p>\n<pre>.. cmd2img:: dot -T png\n\n    digraph example {\n        a [label=\"sphinx\", href=\"http://www.sphinx-doc.org/en/master/usage/extensions/index.html\", target=\"_top\"];\n        b [label=\"other\"];\n        a -&gt; b;\n    }\n</pre>\n<div id=\"options\">\n<h3>3 Options</h3>\n<p>sphinxcontrib-cmd2img provide some options for easy use.</p>\n</div>\n<div id=\"command-options\">\n<h3>3.1 command options</h3>\n<p>For command options, you should add it right after the command, for example:</p>\n<pre>.. cmd2fig:: ditaa --no-antialias\n   :caption: figure 2. illustration for command option.\n\n    +--------+   +-------+    +-------+\n    |        | --+ ditaa +--&gt; |       |\n    |  Text  |   +-------+    |diagram|\n    |Document|   |!magic!|    |       |\n    |     {d}|   |       |    |       |\n    +---+----+   +-------+    +-------+\n        :                         ^\n        |       Lots of work      |\n        +-------------------------+\n</pre>\n</div>\n<div id=\"sphinxcontrib-cmd2img-options\">\n<h3>3.2 sphinxcontrib-cmd2img options</h3>\n<blockquote>\n<ul>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>image:</th><td>For those command whose the output name is embeded in the body, Users should copy the name here.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>show_source:</th><td>for text generated iamge, if the source code is shown.</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>watermark:</th><td>Add water mark in the image</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>gravity:</th><td>watermark gravity, see detail imagematick command convert -draw</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>location:</th><td>watermark location, see detail imagematick command convert -draw</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>fill:</th><td>watermark contention, see detail imagematick command convert -draw</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>pointsize:</th><td>watermark pointsize, see detail imagematick command convert -draw</td>\n</tr>\n</tbody>\n</table>\n</li>\n<li><table>\n<col>\n<col>\n<tbody>\n<tr><th>font:</th><td>watermark font, see detail imagematick command convert -draw</td>\n</tr>\n</tbody>\n</table>\n</li>\n</ul>\n</blockquote>\n<p>For example:</p>\n<pre>.. cmd2fig:: gnuplot\n    :caption: \u5728plot \u547d\u4ee4\u91cc\u6307\u5b9a\u8303\u56f4\n    :image: gnuplot_test.png\n    :width: 600\n\n    set output 'gnuplot_test.png'\n    set terminal pngcairo\n    plot [-5:5] (sin(1/x) - cos(x))*erfc(x)\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>5. License</h2>\n<p>GPLv3</p>\n</div>\n<div id=\"changelog\">\n<h2>6. Changelog</h2>\n<p>0.1 Initial upload.\n0.2 Correct minor typo</p>\n</div>\n\n          </div>"}, "last_serial": 6364509, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b58a0fd294e02b3d312593f11d5a3ef4", "sha256": "2bc85614d39916bdc51505190e1bba1f4f2aab285bf0e9351f99432e1d7b9cea"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.1.tar.gz", "has_sig": false, "md5_digest": "b58a0fd294e02b3d312593f11d5a3ef4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7039, "upload_time": "2019-08-15T08:22:19", "upload_time_iso_8601": "2019-08-15T08:22:19.968894Z", "url": "https://files.pythonhosted.org/packages/70/a4/89b0f34738073fcef5df249b2726db1637fd250468171eca61dd17cf5822/sphinxcontrib-cmd2img-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5975feb37ecc5cb5db223337b7dbda8e", "sha256": "00e0e11dbeb2d8e7a61fdee94a7223309375eb89d8053cfa7b8d8c8040e43a2b"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.2.tar.gz", "has_sig": false, "md5_digest": "5975feb37ecc5cb5db223337b7dbda8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7062, "upload_time": "2019-08-21T08:42:17", "upload_time_iso_8601": "2019-08-21T08:42:17.889045Z", "url": "https://files.pythonhosted.org/packages/93/f6/7fbe0d3fbb13489a9c592bf6491f77614f50497fd61f88a20067ddfbebb2/sphinxcontrib-cmd2img-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4003c88492f9d9fd7ad76152a9f455e2", "sha256": "9b87c72537faa359a647a5f88d43cbbb2010dfb45f22d51a604b7035fe97e900"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.3.tar.gz", "has_sig": false, "md5_digest": "4003c88492f9d9fd7ad76152a9f455e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7078, "upload_time": "2019-12-22T10:55:23", "upload_time_iso_8601": "2019-12-22T10:55:23.134389Z", "url": "https://files.pythonhosted.org/packages/3f/07/c1e7f4933912a77bf456b2c51dd1dd6cea3b0664975df34c5158ce019f3c/sphinxcontrib-cmd2img-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "7c4fc52406cc7428557ab85c62be737d", "sha256": "b2573516b9749f448d7c821aeb4cf135c0de060c3c72795cee7b2d058011f9d7"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.4.tar.gz", "has_sig": false, "md5_digest": "7c4fc52406cc7428557ab85c62be737d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7120, "upload_time": "2019-12-22T11:07:34", "upload_time_iso_8601": "2019-12-22T11:07:34.695450Z", "url": "https://files.pythonhosted.org/packages/f6/61/7a7f6dabab6ca4d28f157aedcd737a8f4e67798781e1347ca4df1841063d/sphinxcontrib-cmd2img-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "b2988f9521d2f3df324cefda9b9a4330", "sha256": "cb8b429f9674fb1c9d2f734305febf2ad8c63ec2a08242b6faca779ea444cea3"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.5.tar.gz", "has_sig": false, "md5_digest": "b2988f9521d2f3df324cefda9b9a4330", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7116, "upload_time": "2019-12-22T11:16:18", "upload_time_iso_8601": "2019-12-22T11:16:18.491896Z", "url": "https://files.pythonhosted.org/packages/3c/a4/a11536d93a6a38885de72298b86079864f44f8f2375f62113fb619186dc4/sphinxcontrib-cmd2img-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "a4812bcf0b9c7bd870b44e49bb7586f2", "sha256": "cea7a57329ee08661f2c62955180671a3ad5bf7794b2327e968b920bc0e5afec"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.6.tar.gz", "has_sig": false, "md5_digest": "a4812bcf0b9c7bd870b44e49bb7586f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7636, "upload_time": "2019-12-27T08:40:12", "upload_time_iso_8601": "2019-12-27T08:40:12.224260Z", "url": "https://files.pythonhosted.org/packages/98/80/7b30122a171816902e89558ed1d4bcda08b918db01e9b4c41e39dd22e2a5/sphinxcontrib-cmd2img-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a4812bcf0b9c7bd870b44e49bb7586f2", "sha256": "cea7a57329ee08661f2c62955180671a3ad5bf7794b2327e968b920bc0e5afec"}, "downloads": -1, "filename": "sphinxcontrib-cmd2img-0.6.tar.gz", "has_sig": false, "md5_digest": "a4812bcf0b9c7bd870b44e49bb7586f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7636, "upload_time": "2019-12-27T08:40:12", "upload_time_iso_8601": "2019-12-27T08:40:12.224260Z", "url": "https://files.pythonhosted.org/packages/98/80/7b30122a171816902e89558ed1d4bcda08b918db01e9b4c41e39dd22e2a5/sphinxcontrib-cmd2img-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:19 2020"}