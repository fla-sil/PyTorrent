{"info": {"author": "Ryan Parman", "author_email": "ryan@ryanparman.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: PyPy"], "description": ".. _demo-of-the-game-of-\"set\":\n\nDemo of the game of \"Set\"\n=========================\n\n|Source| |Downloads| |Release| |Pypi Release| |Open Issues| |Build\nStatus| |Implementation| |Python Versions| |Package Format| |Stability|\n|Coverage Status| |Code Climate| |Code Quality| |License| |Author|\n\n\"Set\" is a card game where a group of players try to identify a *Set* of\ncards from those placed face-up on a table.\n\nThis project uses `Semantic Versioning <http://semver.org>`__ for\nmanaging backwards-compatibility.\n\n-  `API Reference <https://skyzyx.github.io/set-game-demo/>`__\n\nThe Game\n--------\n\nCore Concepts\n~~~~~~~~~~~~~\n\n-  Each *Card* has 4 *Properties*: color, shape, shading, and number.\n-  The *Deck* is a collection of all of the *Cards*.\n-  The *Board* is a subset of the *Deck*, containing only the cards that\n   are currently in-play.\n-  A *Set* is a collection of 3 cards which meet certain criteria\n   (discussed below). When a *Set* is found in-play on the *Board*, the\n   *Set* is removed from play and logged as such.\n-  The *Game* encapsulates all of these concepts and keeps track of\n   them.\n\nGame Rules\n~~~~~~~~~~\n\nEach *Card* has an image on it with 4 orthogonal attributes:\n\n-  Color (red, green, or purple)\n-  Shape (diamond, squiggle, or oval)\n-  Shading (solid, empty, or striped)\n-  Number (one, two, or three)\n\nThree *Cards* are a part of a *Set* if, for each *Property*, the values\nare all the same or all different.\n\nFor example:\n\n-  The *Cards* \"two red solid squiggles\", \"one green solid diamond\",\n   \"three purple solid ovals\" would make up a *Set*. (number, shape, and\n   color are different, shading is the same)\n-  The *Cards* \"two red solid squiggles\", \"one green solid squiggles\",\n   \"three purple solid ovals\" would not make up a *Set*, because shape\n   is the same on two *Cards*, but different on the third.\n-  A *Game* of \"Set\" starts by dealing 12 *Cards*, face-up. When a\n   player sees three *Cards* that make up a *Set*, they yell \"Set!\" and\n   grab the *Cards*. New *Cards* are dealt from the *Deck* to replace\n   them.\n-  If no player can find a *Set*, three more *Cards* are dealt (to make\n   15, then 18, then 21...)\n-  The *Game* is over when there are no *Cards* left in the *Deck*, and\n   no *Sets* left on the table. The player with the most *Sets* wins.\n\nGame Requirements\n~~~~~~~~~~~~~~~~~\n\nYour task is to model the *Game* in code, and implement the following\nmethods:\n\n-  A method that takes three *Cards*, and determines whether the three\n   *Cards* make a *Set*.\n-  A method that given a *Board* of *Cards*, will either find a *Set*,\n   or determine that there are no *Sets* on the table.\n-  A method that will play an entire *Game* of \"Set\", from beginning to\n   end, and return a list of each valid *Sets* you removed from the\n   *Board*.\n\nFor this last method, there will be multiple correct solutions, but any\nvalid list of *Sets* is fine.\n\nAssumptions\n~~~~~~~~~~~\n\n   *\u201cThree cards are a part of a set if, for each property, the values\n   are all the same or all different.\u201d*\n\nThis is phrased ambiguously, and the examples given lead me to believe\nthat the following is a more specific description of the rules.\n\n-  Take 3 cards and look at each of their properties one-by-one.\n-  If all cards have a different value for that property OR all cards\n   have the same value for that property, then it *may* be a set.\n-  If *any* properties of step 2 fail the test, then the group is not a\n   set.\n\nProblem Parameters\n~~~~~~~~~~~~~~~~~~\n\n-  This problem uses mathematical *combinations* (as opposed to\n   *permutations*). This results in 81 combinations (``3^4``).\n-  Any failure of being a *Set* means that the group is not a set, so\n   fail as early as possible and move-on.\n\nLogic\n~~~~~\n\n(Whereas \u201c\\ *Combination*\\ \u201d refers to the `mathematical\nconcept <https://en.wikipedia.org/wiki/Combination>`__.)\n\n1. Create the deck of available cards by ensuring that every card is\n   unique, and that all *Combinations* of properties are represented.\n   Also, shuffle the deck by default.\n2. Deal 12 cards to the *Board*.\n3. Calculate all possible *Combinations* of the cards on the *Board*, in\n   groups of 3.\n4. Iterate over each *Combination*, applying logic to determine whether\n   or not this *Combination* represents a *Set*.\n5. Collect the *Sets* by removing the *Cards* which are determined to be\n   part of a *Set*.\n6. When no more *Sets* can be found, deal another 3 *Cards* from the\n   *Deck*.\n7. Repeat steps 3\u20136 until the *Deck* is empty.\n\nRequirements\n------------\n\n-  Python 2.7, 3.3+, Pypy\n-  Pip\n-  VirtualEnv is recommended, but not required\n\nInstallation\n------------\n\n.. code:: bash\n\n   # Install from Pypi\n   pip install skyzyx-set-game-demo\n\n   # Install from local code\n   pip install -e .\n\nAnd either include it in your scripts:\n\n.. code:: python\n\n   from set_game_demo import SetGame\n\n\u2026or run it from the command line.\n\n.. code:: bash\n\n   # Application help\n   set-game-demo -h\n\n.. _usage/examples:\n\nUsage/Examples\n--------------\n\nFrom the Python REPL or a Python script\u2026\n\n.. code:: python\n\n   from __future__ import print_function\n   from set_game_demo import SetGame\n\n   # Initialize the game.\n   game = SetGame()\n\n   # Chatty, interactive version of the game.\n   game.play()\n\n   # Quiet version of the game. Good for code.\n   discovered, sets = game.play_quiet()\n   print(\"Sets discovered: {}\".format(discovered))\n   for set in sets:\n       game.display_cards(set)\n\nFrom the Terminal\u2026\n\n.. code:: bash\n\n   # Chatty, interactive version of the game.\n   set-game-demo\n\n   # Quiet version of the game.\n   set-game-demo --quiet\n\nKnown Issues\n------------\n\n-  In a final release, it would be wise to update the\n   ``requirements.txt`` to allow for ranges of known-good versions\n   instead of locking to one specific version.\n\n   -  Conversely, if this is the sole project running in this virtual\n      environment, locking to a specific known-good version ensures\n      fewer version-compatibility issues.\n\nFuture Improvements\n-------------------\n\n-  Update the ``test_deal`` unit test to verify that we do not attempt\n   to deal a larger number of cards than the deck contains (couldn't\n   quite figure out the right way to call ``assertRaises()`` from the\n   ``unittest`` package through the ``nose2`` interface).\n-  Support multiple *Players* who can collect sets and compete for\n   scores.\n\nDevelopment\n-----------\n\n-  You can develop in any supported version of Python.\n\n-  Using `pyenv <https://github.com/yyuu/pyenv>`__ to manage your\n   Pythons is *highly-recommended*. Testing locally **depends** on it.\n\n-  Install `VirtualEnv <https://virtualenv.pypa.io/en/stable/>`__ for\n   your development environment, and *activate* the environment.\n\n   .. code:: bash\n\n      pip install virtualenv\n      virtualenv .vendor\n      source .vendor/bin/activate\n\n-  Install the ``requirements.txt``.\n\n   .. code:: bash\n\n      pip install -r requirements.txt\n\n-  When you make changes, make sure that you run the linter and fix\n   anything that's broken.\n\n   .. code:: bash\n\n      make lint\n\nTesting\n-------\n\nWe use `tox <https://tox.readthedocs.io>`__ to handle local testing\nacross multiple versions of Python. We install multiple versions of\nPython at a time with `pyenv <https://github.com/yyuu/pyenv>`__.\n\nTesting occurs against the following versions:\n\n-  Python 2.7\n-  Python 3.3\n-  Python 3.4\n-  Python 3.5\n-  Python 3.6\n-  Python 3.7\n-  Pypy\n-  Pypy3\n\nTo begin\u2026\n\n1. Install `pyenv <https://github.com/yyuu/pyenv>`__ on your own before\n   running tests.\n\n2. You need to install all of the supported versions of Python. (This\n   will take a while.) If you would prefer to install your own copies of\n   the supported Python versions (listed above), feel free to manage\n   them yourself.\n\n   .. code:: bash\n\n      pyenv install 3.7.1 && \\\n      pyenv install 3.6.7 && \\\n      pyenv install 3.5.6 && \\\n      pyenv install 3.4.9 && \\\n      pyenv install 3.3.7 && \\\n      pyenv install 2.7.15 && \\\n      pyenv install pypy-5.7.1 && \\\n      pyenv install pypy3.5-6.0.0 && \\\n      pyenv rehash && \\\n      eval \"$(pyenv init -)\" && \\\n      pyenv global system 2.7.15 3.3.7 3.4.9 3.5.6 3.6.7 3.7.1 pypy-5.7.1 pypy3.5-6.0.0\n\n   To verify that the installation and configuration were successful,\n   you can run ``pyenv versions``. You should see a ``*`` character in\n   front of every version that we just installed.\n\n   .. code:: bash\n\n      $ pyenv versions\n      * system (set by ~/.pyenv/version)\n      * 2.7.12 (set by ~/.pyenv/version)\n      * 3.3.6 (set by ~/.pyenv/version)\n      * 3.4.5 (set by ~/.pyenv/version)\n      * 3.5.2 (set by ~/.pyenv/version)\n      * 3.6.0b1 (set by ~/.pyenv/version)\n      * pypy-5.3.1 (set by ~/.pyenv/version)\n      * pypy3-2.4.0 (set by ~/.pyenv/version)\n\n3. The following command will package-up your module and install it\n   locally, then run ``nose2`` to execute the tests in the *default\n   system Python*.\n\n   .. code:: bash\n\n      make test\n\n4. After you've run that, you can then execute the tests in all\n   supported versions of Python with the following:\n\n   .. code:: bash\n\n      tox\n\nAPI Reference\n-------------\n\nBuilding local docs\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n   make docs\n   open docs/set_game_demo/index.html\n\nBuilding and pushing docs\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n   make pushdocs\n\nDocs can be viewed at\n`https://skyzyx.github.io/set-game-demo/ <https://skyzyx.github.io/set-game-demo/>`__.\n\nDeploying\n---------\n\n1. The ``Makefile`` (yes, ``Makefile``) has a series of commands to\n   simplify the development and deployment process.\n2. Also install `Chag <https://github.com/mtdowling/chag>`__. This is\n   used for managing the ``CHANGELOG`` and annotating the Git release\n   correctly.\n\nUpdating the CHANGELOG\n~~~~~~~~~~~~~~~~~~~~~~\n\nMake sure that the ``CHANGELOG.md`` is human-friendly. See\n`http://keepachangelog.com <http://keepachangelog.com>`__ if you don\u2019t\nknow how.\n\n``make``\n~~~~~~~~\n\nRunning ``make`` by itself will show you a list of available\nsub-commands.\n\n.. code:: bash\n\n   $ make\n   all\n   buildpip\n   clean\n   docs\n   lint\n   pushdocs\n   pushpip\n   readme\n   tag\n   test\n   version\n\n``make readme``\n~~~~~~~~~~~~~~~\n\nIf you make changes to ``README.md``, then this will use\n`Pandoc <http://pandoc.org>`__ to output a ``README.rst`` file in the\n`reStructuredText <http://docutils.sourceforge.net/rst.html>`__ format\nused by\n`distutils <https://docs.python.org/3/library/distutils.html>`__,\n`Sphinx <http://www.sphinx-doc.org>`__ and most of the Python community.\n\nYou must have `Pandoc <http://pandoc.org>`__ installed on your local\nsystem.\n\n   **NOTE:** Initial install via ``brew install pandoc`` takes about\n   8\u201310 hours. Updates are much faster. `Using the\n   installer <https://github.com/jgm/pandoc/releases>`__ is **much**\n   faster for initial installation, but updates are entirely manual.\n\n``make version``\n~~~~~~~~~~~~~~~~\n\nSets the version number that will be used by other ``make`` tasks\nrelated to packaging and bundling.\n\n``make tag``\n~~~~~~~~~~~~\n\nThis will make sure that the ``CHANGELOG.md`` is properly datestamped,\nadd the CHANGELOG contents to the Git commit message, commit them, then\ncreate a Git commit which can be pushed upstream.\n\n``make buildpip``\n~~~~~~~~~~~~~~~~~\n\nThis will bundle-up your package in preparation for uploading to\n`Pypi <https://pypi.python.org/pypi>`__.\n\n``make pushpip``\n~~~~~~~~~~~~~~~~\n\nThis will take your bundled package and upload it securely to\n`Pypi <https://pypi.python.org/pypi>`__ using the ``twine`` package.\n\nDrafting a GitHub release\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Go to\n   `https://github.com/skyzyx/set-game-demo/tags <https://github.com/skyzyx/set-game-demo/tags>`__\n2. Find the new tag that you just pushed. Click the ellipsis (``\u2026``) to\n   see the commit notes. Copy these.\n3. To the right, choose *Add release notes*. Your *Tag version* should\n   be pre-filled.\n4. The *Release title* should match your *Tag version*.\n5. Inside *Describe this release*, paste the notes that you copied on\n   the previous page.\n6. Choose *Publish release*.\n7. Your release should now be the latest.\n   `https://github.com/skyzyx/set-game-demo/releases/latest <https://github.com/skyzyx/set-game-demo/releases/latest>`__\n\nContributing\n------------\n\nHere's the process for contributing:\n\n1. Fork this project to your GitHub account.\n2. Clone your GitHub copy of the repository into your local workspace.\n3. Write code, fix bugs, and add tests with 100% code coverage.\n4. Commit your changes to your local workspace and push them up to your\n   GitHub copy.\n5. You submit a GitHub pull request with a description of what the\n   change is.\n6. The contribution is reviewed. Maybe there will be some banter\n   back-and-forth in the comments.\n7. If all goes well, your pull request will be accepted and your changes\n   are merged in.\n\n.. _authors,-copyright-&-licensing:\n\nAuthors, Copyright & Licensing\n------------------------------\n\n-  Copyright (c) 2016 `Ryan Parman <http://github.com/skyzyx>`__\n\nSee also the list of\n`contributors <https://github.com/skyzyx/set-game-demo/graphs/contributors>`__\nwho participated in this project.\n\nLicensed for use under the terms of the `Apache\n2.0 <http://opensource.org/licenses/Apache-2.0>`__ license.\n\n.. |Source| image:: https://img.shields.io/badge/source-skyzyx/set\u2013game\u2013demo-blue.svg?style=flat-square\n   :target: https://github.com/skyzyx/set-game-demo\n.. |Downloads| image:: https://img.shields.io/pypi/dm/skyzyx-set-game-demo.svg?style=flat-square\n   :target: https://github.com/skyzyx/set-game-demo/releases\n.. |Release| image:: https://img.shields.io/github/release/skyzyx/set-game-demo.svg?style=flat-square\n   :target: https://github.com/skyzyx/set-game-demo/releases\n.. |Pypi Release| image:: https://img.shields.io/pypi/v/skyzyx-set-game-demo.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/skyzyx-set-game-demo\n.. |Open Issues| image:: http://img.shields.io/github/issues/skyzyx/set-game-demo.svg?style=flat-square\n   :target: https://github.com/skyzyx/set-game-demo/issues\n.. |Build Status| image:: http://img.shields.io/travis/skyzyx/set-game-demo/master.svg?style=flat-square\n   :target: https://travis-ci.org/skyzyx/set-game-demo\n.. |Implementation| image:: https://img.shields.io/pypi/implementation/skyzyx-set-game-demo.svg?style=flat-square\n   :target: https://python.org\n.. |Python Versions| image:: https://img.shields.io/pypi/pyversions/skyzyx-set-game-demo.svg?style=flat-square\n   :target: https://python.org\n.. |Package Format| image:: https://img.shields.io/pypi/format/skyzyx-set-game-demo.svg?style=flat-square\n   :target: http://pythonwheels.com\n.. |Stability| image:: https://img.shields.io/pypi/status/skyzyx-set-game-demo.svg?style=flat-square\n   :target: https://pypi.python.org/pypi/skyzyx-set-game-demo\n.. |Coverage Status| image:: http://img.shields.io/coveralls/skyzyx/set-game-demo/master.svg?style=flat-square\n   :target: https://coveralls.io/r/skyzyx/set-game-demo?branch=master\n.. |Code Climate| image:: http://img.shields.io/codeclimate/github/skyzyx/set-game-demo.svg?style=flat-square\n   :target: https://codeclimate.com/github/skyzyx/set-game-demo\n.. |Code Quality| image:: http://img.shields.io/scrutinizer/g/skyzyx/set-game-demo.svg?style=flat-square\n   :target: https://scrutinizer-ci.com/g/skyzyx/set-game-demo\n.. |License| image:: https://img.shields.io/github/license/skyzyx/set-game-demo.svg?style=flat-square\n   :target: https://github.com/skyzyx/set-game-demo/blob/master/LICENSE.md\n.. |Author| image:: http://img.shields.io/badge/author-@skyzyx-blue.svg?style=flat-square\n   :target: https://github.com/skyzyx\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/skyzyx/set-game-demo", "keywords": "set demo game", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "skyzyx-set-game-demo", "package_url": "https://pypi.org/project/skyzyx-set-game-demo/", "platform": "", "project_url": "https://pypi.org/project/skyzyx-set-game-demo/", "project_urls": {"Homepage": "https://github.com/skyzyx/set-game-demo"}, "release_url": "https://pypi.org/project/skyzyx-set-game-demo/1.0.1/", "requires_dist": ["autoflake (<1.0,>=0.6.6)", "autopep8 (<2.0,>=1.2.4)", "prettytable (<1.0,>=0.7.2)", "pylint (<2.0,>=1.6.4)", "six (<2.0,>=1.10.0)"], "requires_python": "", "summary": "Simple demo of the game of Set.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://github.com/skyzyx/set-game-demo\" rel=\"nofollow\"><img alt=\"Source\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09381744047bcf435d9bc82b4b40c1378262fee3/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f736f757263652d736b797a79782f736574e2809367616d65e2809364656d6f2d626c75652e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/skyzyx/set-game-demo/releases\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/659b3e9f1939d5fc1aa24659f405e4dca013276f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f736b797a79782d7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/skyzyx/set-game-demo/releases\" rel=\"nofollow\"><img alt=\"Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/442b15871e1c90319e82757dac561e1b9c865ce8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f736b797a79782f7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/skyzyx-set-game-demo\" rel=\"nofollow\"><img alt=\"Pypi Release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d96c549959a0a2f9a6a8a2ce1efc892b3feec0fe/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736b797a79782d7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/skyzyx/set-game-demo/issues\" rel=\"nofollow\"><img alt=\"Open Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f6788fa41aa870f504318d4cb6e93a3360bd64a/687474703a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f736b797a79782f7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/skyzyx/set-game-demo\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c147f651d3681febe344c547f398c9dcb9b926e/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f736b797a79782f7365742d67616d652d64656d6f2f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://python.org\" rel=\"nofollow\"><img alt=\"Implementation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/810a7ac3481c4da3242bf6d0fbcd2107520cc6e0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f696d706c656d656e746174696f6e2f736b797a79782d7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://python.org\" rel=\"nofollow\"><img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0139481b82c35ae5c83a738557b69a74653dd58/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736b797a79782d7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"http://pythonwheels.com\" rel=\"nofollow\"><img alt=\"Package Format\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ef2a694ed8adf26ea9b558659837cb7bb7d2105/68747470733a2f2f696d672e736869656c64732e696f2f707970692f666f726d61742f736b797a79782d7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/skyzyx-set-game-demo\" rel=\"nofollow\"><img alt=\"Stability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/009706b50961c6afbd55840db091c6322ce84450/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f736b797a79782d7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://coveralls.io/r/skyzyx/set-game-demo?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3ef172049084562a46ceff98d24cfc9c95f5a1cb/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f736b797a79782f7365742d67616d652d64656d6f2f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://codeclimate.com/github/skyzyx/set-game-demo\" rel=\"nofollow\"><img alt=\"Code Climate\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e62377c7b5766e4bf79d2d9de0bb4c4847193a2/687474703a2f2f696d672e736869656c64732e696f2f636f6465636c696d6174652f6769746875622f736b797a79782f7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://scrutinizer-ci.com/g/skyzyx/set-game-demo\" rel=\"nofollow\"><img alt=\"Code Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/643f655ac2e0fca9e3c984d4422146e3ef4b385b/687474703a2f2f696d672e736869656c64732e696f2f7363727574696e697a65722f672f736b797a79782f7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/skyzyx/set-game-demo/blob/master/LICENSE.md\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/468252629c1f16cf83d2a2e8d2dc96bbd6ab73fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f736b797a79782f7365742d67616d652d64656d6f2e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://github.com/skyzyx\" rel=\"nofollow\"><img alt=\"Author\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4ddb4f311e362ea7b535b8fb2f7002d12c6e250/687474703a2f2f696d672e736869656c64732e696f2f62616467652f617574686f722d40736b797a79782d626c75652e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>\u201cSet\u201d is a card game where a group of players try to identify a <em>Set</em> of\ncards from those placed face-up on a table.</p>\n<p>This project uses <a href=\"http://semver.org\" rel=\"nofollow\">Semantic Versioning</a> for\nmanaging backwards-compatibility.</p>\n<ul>\n<li><a href=\"https://skyzyx.github.io/set-game-demo/\" rel=\"nofollow\">API Reference</a></li>\n</ul>\n<div id=\"the-game\">\n<h2>The Game</h2>\n<div id=\"core-concepts\">\n<h3>Core Concepts</h3>\n<ul>\n<li>Each <em>Card</em> has 4 <em>Properties</em>: color, shape, shading, and number.</li>\n<li>The <em>Deck</em> is a collection of all of the <em>Cards</em>.</li>\n<li>The <em>Board</em> is a subset of the <em>Deck</em>, containing only the cards that\nare currently in-play.</li>\n<li>A <em>Set</em> is a collection of 3 cards which meet certain criteria\n(discussed below). When a <em>Set</em> is found in-play on the <em>Board</em>, the\n<em>Set</em> is removed from play and logged as such.</li>\n<li>The <em>Game</em> encapsulates all of these concepts and keeps track of\nthem.</li>\n</ul>\n</div>\n<div id=\"game-rules\">\n<h3>Game Rules</h3>\n<p>Each <em>Card</em> has an image on it with 4 orthogonal attributes:</p>\n<ul>\n<li>Color (red, green, or purple)</li>\n<li>Shape (diamond, squiggle, or oval)</li>\n<li>Shading (solid, empty, or striped)</li>\n<li>Number (one, two, or three)</li>\n</ul>\n<p>Three <em>Cards</em> are a part of a <em>Set</em> if, for each <em>Property</em>, the values\nare all the same or all different.</p>\n<p>For example:</p>\n<ul>\n<li>The <em>Cards</em> \u201ctwo red solid squiggles\u201d, \u201cone green solid diamond\u201d,\n\u201cthree purple solid ovals\u201d would make up a <em>Set</em>. (number, shape, and\ncolor are different, shading is the same)</li>\n<li>The <em>Cards</em> \u201ctwo red solid squiggles\u201d, \u201cone green solid squiggles\u201d,\n\u201cthree purple solid ovals\u201d would not make up a <em>Set</em>, because shape\nis the same on two <em>Cards</em>, but different on the third.</li>\n<li>A <em>Game</em> of \u201cSet\u201d starts by dealing 12 <em>Cards</em>, face-up. When a\nplayer sees three <em>Cards</em> that make up a <em>Set</em>, they yell \u201cSet!\u201d and\ngrab the <em>Cards</em>. New <em>Cards</em> are dealt from the <em>Deck</em> to replace\nthem.</li>\n<li>If no player can find a <em>Set</em>, three more <em>Cards</em> are dealt (to make\n15, then 18, then 21\u2026)</li>\n<li>The <em>Game</em> is over when there are no <em>Cards</em> left in the <em>Deck</em>, and\nno <em>Sets</em> left on the table. The player with the most <em>Sets</em> wins.</li>\n</ul>\n</div>\n<div id=\"game-requirements\">\n<h3>Game Requirements</h3>\n<p>Your task is to model the <em>Game</em> in code, and implement the following\nmethods:</p>\n<ul>\n<li>A method that takes three <em>Cards</em>, and determines whether the three\n<em>Cards</em> make a <em>Set</em>.</li>\n<li>A method that given a <em>Board</em> of <em>Cards</em>, will either find a <em>Set</em>,\nor determine that there are no <em>Sets</em> on the table.</li>\n<li>A method that will play an entire <em>Game</em> of \u201cSet\u201d, from beginning to\nend, and return a list of each valid <em>Sets</em> you removed from the\n<em>Board</em>.</li>\n</ul>\n<p>For this last method, there will be multiple correct solutions, but any\nvalid list of <em>Sets</em> is fine.</p>\n</div>\n<div id=\"assumptions\">\n<h3>Assumptions</h3>\n<blockquote>\n<em>\u201cThree cards are a part of a set if, for each property, the values\nare all the same or all different.\u201d</em></blockquote>\n<p>This is phrased ambiguously, and the examples given lead me to believe\nthat the following is a more specific description of the rules.</p>\n<ul>\n<li>Take 3 cards and look at each of their properties one-by-one.</li>\n<li>If all cards have a different value for that property OR all cards\nhave the same value for that property, then it <em>may</em> be a set.</li>\n<li>If <em>any</em> properties of step 2 fail the test, then the group is not a\nset.</li>\n</ul>\n</div>\n<div id=\"problem-parameters\">\n<h3>Problem Parameters</h3>\n<ul>\n<li>This problem uses mathematical <em>combinations</em> (as opposed to\n<em>permutations</em>). This results in 81 combinations (<tt>3^4</tt>).</li>\n<li>Any failure of being a <em>Set</em> means that the group is not a set, so\nfail as early as possible and move-on.</li>\n</ul>\n</div>\n<div id=\"logic\">\n<h3>Logic</h3>\n<p>(Whereas \u201c<em>Combination</em>\u201d refers to the <a href=\"https://en.wikipedia.org/wiki/Combination\" rel=\"nofollow\">mathematical\nconcept</a>.)</p>\n<ol>\n<li>Create the deck of available cards by ensuring that every card is\nunique, and that all <em>Combinations</em> of properties are represented.\nAlso, shuffle the deck by default.</li>\n<li>Deal 12 cards to the <em>Board</em>.</li>\n<li>Calculate all possible <em>Combinations</em> of the cards on the <em>Board</em>, in\ngroups of 3.</li>\n<li>Iterate over each <em>Combination</em>, applying logic to determine whether\nor not this <em>Combination</em> represents a <em>Set</em>.</li>\n<li>Collect the <em>Sets</em> by removing the <em>Cards</em> which are determined to be\npart of a <em>Set</em>.</li>\n<li>When no more <em>Sets</em> can be found, deal another 3 <em>Cards</em> from the\n<em>Deck</em>.</li>\n<li>Repeat steps 3\u20136 until the <em>Deck</em> is empty.</li>\n</ol>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7, 3.3+, Pypy</li>\n<li>Pip</li>\n<li>VirtualEnv is recommended, but not required</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre><span class=\"c1\"># Install from Pypi\n</span>pip install skyzyx-set-game-demo\n\n<span class=\"c1\"># Install from local code\n</span>pip install -e .\n</pre>\n<p>And either include it in your scripts:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">set_game_demo</span> <span class=\"kn\">import</span> <span class=\"n\">SetGame</span>\n</pre>\n<p>\u2026or run it from the command line.</p>\n<pre><span class=\"c1\"># Application help\n</span>set-game-demo -h\n</pre>\n</div>\n<div id=\"id2\">\n<span id=\"usage-examples\"></span><h2>Usage/Examples</h2>\n<p>From the Python REPL or a Python script\u2026</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">set_game_demo</span> <span class=\"kn\">import</span> <span class=\"n\">SetGame</span>\n\n<span class=\"c1\"># Initialize the game.</span>\n<span class=\"n\">game</span> <span class=\"o\">=</span> <span class=\"n\">SetGame</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Chatty, interactive version of the game.</span>\n<span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Quiet version of the game. Good for code.</span>\n<span class=\"n\">discovered</span><span class=\"p\">,</span> <span class=\"n\">sets</span> <span class=\"o\">=</span> <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">play_quiet</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Sets discovered: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">discovered</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"nb\">set</span> <span class=\"ow\">in</span> <span class=\"n\">sets</span><span class=\"p\">:</span>\n    <span class=\"n\">game</span><span class=\"o\">.</span><span class=\"n\">display_cards</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">)</span>\n</pre>\n<p>From the Terminal\u2026</p>\n<pre><span class=\"c1\"># Chatty, interactive version of the game.\n</span>set-game-demo\n\n<span class=\"c1\"># Quiet version of the game.\n</span>set-game-demo --quiet\n</pre>\n</div>\n<div id=\"known-issues\">\n<h2>Known Issues</h2>\n<ul>\n<li>In a final release, it would be wise to update the\n<tt>requirements.txt</tt> to allow for ranges of known-good versions\ninstead of locking to one specific version.<ul>\n<li>Conversely, if this is the sole project running in this virtual\nenvironment, locking to a specific known-good version ensures\nfewer version-compatibility issues.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"future-improvements\">\n<h2>Future Improvements</h2>\n<ul>\n<li>Update the <tt>test_deal</tt> unit test to verify that we do not attempt\nto deal a larger number of cards than the deck contains (couldn\u2019t\nquite figure out the right way to call <tt>assertRaises()</tt> from the\n<tt>unittest</tt> package through the <tt>nose2</tt> interface).</li>\n<li>Support multiple <em>Players</em> who can collect sets and compete for\nscores.</li>\n</ul>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<ul>\n<li><p>You can develop in any supported version of Python.</p>\n</li>\n<li><p>Using <a href=\"https://github.com/yyuu/pyenv\" rel=\"nofollow\">pyenv</a> to manage your\nPythons is <em>highly-recommended</em>. Testing locally <strong>depends</strong> on it.</p>\n</li>\n<li><p>Install <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">VirtualEnv</a> for\nyour development environment, and <em>activate</em> the environment.</p>\n<pre>pip install virtualenv\nvirtualenv .vendor\n<span class=\"nb\">source</span> .vendor/bin/activate\n</pre>\n</li>\n<li><p>Install the <tt>requirements.txt</tt>.</p>\n<pre>pip install -r requirements.txt\n</pre>\n</li>\n<li><p>When you make changes, make sure that you run the linter and fix\nanything that\u2019s broken.</p>\n<pre>make lint\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>We use <a href=\"https://tox.readthedocs.io\" rel=\"nofollow\">tox</a> to handle local testing\nacross multiple versions of Python. We install multiple versions of\nPython at a time with <a href=\"https://github.com/yyuu/pyenv\" rel=\"nofollow\">pyenv</a>.</p>\n<p>Testing occurs against the following versions:</p>\n<ul>\n<li>Python 2.7</li>\n<li>Python 3.3</li>\n<li>Python 3.4</li>\n<li>Python 3.5</li>\n<li>Python 3.6</li>\n<li>Python 3.7</li>\n<li>Pypy</li>\n<li>Pypy3</li>\n</ul>\n<p>To begin\u2026</p>\n<ol>\n<li><p>Install <a href=\"https://github.com/yyuu/pyenv\" rel=\"nofollow\">pyenv</a> on your own before\nrunning tests.</p>\n</li>\n<li><p>You need to install all of the supported versions of Python. (This\nwill take a while.) If you would prefer to install your own copies of\nthe supported Python versions (listed above), feel free to manage\nthem yourself.</p>\n<pre>pyenv install <span class=\"m\">3</span>.7.1 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install <span class=\"m\">3</span>.6.7 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install <span class=\"m\">3</span>.5.6 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install <span class=\"m\">3</span>.4.9 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install <span class=\"m\">3</span>.3.7 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install <span class=\"m\">2</span>.7.15 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install pypy-5.7.1 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv install pypy3.5-6.0.0 <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv rehash <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span><span class=\"nb\">eval</span> <span class=\"s2\">\"</span><span class=\"k\">$(</span>pyenv init -<span class=\"k\">)</span><span class=\"s2\">\"</span> <span class=\"o\">&amp;&amp;</span> <span class=\"se\">\\\n</span>pyenv global system <span class=\"m\">2</span>.7.15 <span class=\"m\">3</span>.3.7 <span class=\"m\">3</span>.4.9 <span class=\"m\">3</span>.5.6 <span class=\"m\">3</span>.6.7 <span class=\"m\">3</span>.7.1 pypy-5.7.1 pypy3.5-6.0.0\n</pre>\n<p>To verify that the installation and configuration were successful,\nyou can run <tt>pyenv versions</tt>. You should see a <tt>*</tt> character in\nfront of every version that we just installed.</p>\n<pre>$ pyenv versions\n* system <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* <span class=\"m\">2</span>.7.12 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* <span class=\"m\">3</span>.3.6 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* <span class=\"m\">3</span>.4.5 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* <span class=\"m\">3</span>.5.2 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* <span class=\"m\">3</span>.6.0b1 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* pypy-5.3.1 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n* pypy3-2.4.0 <span class=\"o\">(</span><span class=\"nb\">set</span> by ~/.pyenv/version<span class=\"o\">)</span>\n</pre>\n</li>\n<li><p>The following command will package-up your module and install it\nlocally, then run <tt>nose2</tt> to execute the tests in the <em>default\nsystem Python</em>.</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n</li>\n<li><p>After you\u2019ve run that, you can then execute the tests in all\nsupported versions of Python with the following:</p>\n<pre>tox\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"api-reference\">\n<h2>API Reference</h2>\n<div id=\"building-local-docs\">\n<h3>Building local docs</h3>\n<pre>make docs\nopen docs/set_game_demo/index.html\n</pre>\n</div>\n<div id=\"building-and-pushing-docs\">\n<h3>Building and pushing docs</h3>\n<pre>make pushdocs\n</pre>\n<p>Docs can be viewed at\n<a href=\"https://skyzyx.github.io/set-game-demo/\" rel=\"nofollow\">https://skyzyx.github.io/set-game-demo/</a>.</p>\n</div>\n</div>\n<div id=\"deploying\">\n<h2>Deploying</h2>\n<ol>\n<li>The <tt>Makefile</tt> (yes, <tt>Makefile</tt>) has a series of commands to\nsimplify the development and deployment process.</li>\n<li>Also install <a href=\"https://github.com/mtdowling/chag\" rel=\"nofollow\">Chag</a>. This is\nused for managing the <tt>CHANGELOG</tt> and annotating the Git release\ncorrectly.</li>\n</ol>\n<div id=\"updating-the-changelog\">\n<h3>Updating the CHANGELOG</h3>\n<p>Make sure that the <tt>CHANGELOG.md</tt> is human-friendly. See\n<a href=\"http://keepachangelog.com\" rel=\"nofollow\">http://keepachangelog.com</a> if you don\u2019t\nknow how.</p>\n</div>\n<div id=\"make\">\n<h3><tt>make</tt></h3>\n<p>Running <tt>make</tt> by itself will show you a list of available\nsub-commands.</p>\n<pre>$ make\nall\nbuildpip\nclean\ndocs\nlint\npushdocs\npushpip\nreadme\ntag\n<span class=\"nb\">test</span>\nversion\n</pre>\n</div>\n<div id=\"make-readme\">\n<h3><tt>make readme</tt></h3>\n<p>If you make changes to <tt>README.md</tt>, then this will use\n<a href=\"http://pandoc.org\" rel=\"nofollow\">Pandoc</a> to output a <tt>README.rst</tt> file in the\n<a href=\"http://docutils.sourceforge.net/rst.html\" rel=\"nofollow\">reStructuredText</a> format\nused by\n<a href=\"https://docs.python.org/3/library/distutils.html\" rel=\"nofollow\">distutils</a>,\n<a href=\"http://www.sphinx-doc.org\" rel=\"nofollow\">Sphinx</a> and most of the Python community.</p>\n<p>You must have <a href=\"http://pandoc.org\" rel=\"nofollow\">Pandoc</a> installed on your local\nsystem.</p>\n<blockquote>\n<strong>NOTE:</strong> Initial install via <tt>brew install pandoc</tt> takes about\n8\u201310 hours. Updates are much faster. <a href=\"https://github.com/jgm/pandoc/releases\" rel=\"nofollow\">Using the\ninstaller</a> is <strong>much</strong>\nfaster for initial installation, but updates are entirely manual.</blockquote>\n</div>\n<div id=\"make-version\">\n<h3><tt>make version</tt></h3>\n<p>Sets the version number that will be used by other <tt>make</tt> tasks\nrelated to packaging and bundling.</p>\n</div>\n<div id=\"make-tag\">\n<h3><tt>make tag</tt></h3>\n<p>This will make sure that the <tt>CHANGELOG.md</tt> is properly datestamped,\nadd the CHANGELOG contents to the Git commit message, commit them, then\ncreate a Git commit which can be pushed upstream.</p>\n</div>\n<div id=\"make-buildpip\">\n<h3><tt>make buildpip</tt></h3>\n<p>This will bundle-up your package in preparation for uploading to\n<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">Pypi</a>.</p>\n</div>\n<div id=\"make-pushpip\">\n<h3><tt>make pushpip</tt></h3>\n<p>This will take your bundled package and upload it securely to\n<a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">Pypi</a> using the <tt>twine</tt> package.</p>\n</div>\n<div id=\"drafting-a-github-release\">\n<h3>Drafting a GitHub release</h3>\n<ol>\n<li>Go to\n<a href=\"https://github.com/skyzyx/set-game-demo/tags\" rel=\"nofollow\">https://github.com/skyzyx/set-game-demo/tags</a></li>\n<li>Find the new tag that you just pushed. Click the ellipsis (<tt>\u2026</tt>) to\nsee the commit notes. Copy these.</li>\n<li>To the right, choose <em>Add release notes</em>. Your <em>Tag version</em> should\nbe pre-filled.</li>\n<li>The <em>Release title</em> should match your <em>Tag version</em>.</li>\n<li>Inside <em>Describe this release</em>, paste the notes that you copied on\nthe previous page.</li>\n<li>Choose <em>Publish release</em>.</li>\n<li>Your release should now be the latest.\n<a href=\"https://github.com/skyzyx/set-game-demo/releases/latest\" rel=\"nofollow\">https://github.com/skyzyx/set-game-demo/releases/latest</a></li>\n</ol>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Here\u2019s the process for contributing:</p>\n<ol>\n<li>Fork this project to your GitHub account.</li>\n<li>Clone your GitHub copy of the repository into your local workspace.</li>\n<li>Write code, fix bugs, and add tests with 100% code coverage.</li>\n<li>Commit your changes to your local workspace and push them up to your\nGitHub copy.</li>\n<li>You submit a GitHub pull request with a description of what the\nchange is.</li>\n<li>The contribution is reviewed. Maybe there will be some banter\nback-and-forth in the comments.</li>\n<li>If all goes well, your pull request will be accepted and your changes\nare merged in.</li>\n</ol>\n</div>\n<div id=\"id3\">\n<span id=\"authors-copyright-licensing\"></span><h2>Authors, Copyright &amp; Licensing</h2>\n<ul>\n<li>Copyright (c) 2016 <a href=\"http://github.com/skyzyx\" rel=\"nofollow\">Ryan Parman</a></li>\n</ul>\n<p>See also the list of\n<a href=\"https://github.com/skyzyx/set-game-demo/graphs/contributors\" rel=\"nofollow\">contributors</a>\nwho participated in this project.</p>\n<p>Licensed for use under the terms of the <a href=\"http://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\">Apache\n2.0</a> license.</p>\n</div>\n\n          </div>"}, "last_serial": 4514274, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "141c7ec5a657e1c05e39dabdba87ea1e", "sha256": "a7dede805c0597e38f898e63e633d19451ad3ddb110d1ad8e617a3f38388ce45"}, "downloads": -1, "filename": "skyzyx_set_game_demo-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "141c7ec5a657e1c05e39dabdba87ea1e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17761, "upload_time": "2016-09-26T08:46:28", "upload_time_iso_8601": "2016-09-26T08:46:28.009871Z", "url": "https://files.pythonhosted.org/packages/5f/c5/b639b11189ab4c393d86c6cc20b0e3553b1079f75181c685a48da01f4439/skyzyx_set_game_demo-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cfef1575c7506cf13a6d61daea4bcd7", "sha256": "b94ddd1928275d4755d86007e207966fa7d754f5c4bfee5acd27e709ab4bed07"}, "downloads": -1, "filename": "skyzyx-set-game-demo-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1cfef1575c7506cf13a6d61daea4bcd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20859, "upload_time": "2016-09-26T08:46:30", "upload_time_iso_8601": "2016-09-26T08:46:30.200678Z", "url": "https://files.pythonhosted.org/packages/49/11/d94ec82dae2f7bcc2c481ba85b0232d37704bfefd8bdfc2f0c7b7c53c14f/skyzyx-set-game-demo-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7bc33786e264df7970071126b7cc7f1a", "sha256": "12b248a804d4410992633bb4baf7aed68d7cb8ffd1a23330db6e268b21609bf8"}, "downloads": -1, "filename": "skyzyx_set_game_demo-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7bc33786e264df7970071126b7cc7f1a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14953, "upload_time": "2018-11-21T21:09:29", "upload_time_iso_8601": "2018-11-21T21:09:29.440208Z", "url": "https://files.pythonhosted.org/packages/af/af/a01862be49fcad875db4b87d377eb7e3f78aab4671331699eb3b075987c9/skyzyx_set_game_demo-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea0605c5dbc58f6860ae524c0cc3dad2", "sha256": "3c5aa823a9b9a72904608a744239838731be9ddae8d8271106685591aa3e614b"}, "downloads": -1, "filename": "skyzyx-set-game-demo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ea0605c5dbc58f6860ae524c0cc3dad2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25028, "upload_time": "2018-11-21T21:09:31", "upload_time_iso_8601": "2018-11-21T21:09:31.272114Z", "url": "https://files.pythonhosted.org/packages/3e/21/a281beb149ff5c6d19487370dc17caac8f13605d46b9ea1a9ab69fb2ab79/skyzyx-set-game-demo-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7bc33786e264df7970071126b7cc7f1a", "sha256": "12b248a804d4410992633bb4baf7aed68d7cb8ffd1a23330db6e268b21609bf8"}, "downloads": -1, "filename": "skyzyx_set_game_demo-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7bc33786e264df7970071126b7cc7f1a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14953, "upload_time": "2018-11-21T21:09:29", "upload_time_iso_8601": "2018-11-21T21:09:29.440208Z", "url": "https://files.pythonhosted.org/packages/af/af/a01862be49fcad875db4b87d377eb7e3f78aab4671331699eb3b075987c9/skyzyx_set_game_demo-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea0605c5dbc58f6860ae524c0cc3dad2", "sha256": "3c5aa823a9b9a72904608a744239838731be9ddae8d8271106685591aa3e614b"}, "downloads": -1, "filename": "skyzyx-set-game-demo-1.0.1.tar.gz", "has_sig": false, "md5_digest": "ea0605c5dbc58f6860ae524c0cc3dad2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25028, "upload_time": "2018-11-21T21:09:31", "upload_time_iso_8601": "2018-11-21T21:09:31.272114Z", "url": "https://files.pythonhosted.org/packages/3e/21/a281beb149ff5c6d19487370dc17caac8f13605d46b9ea1a9ab69fb2ab79/skyzyx-set-game-demo-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:45 2020"}