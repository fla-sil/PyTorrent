{"info": {"author": "Andrew Starr-Bochicchio", "author_email": "a.starr.b@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "===================\nfabric-digitalocean\n===================\n\n.. image:: https://travis-ci.org/andrewsomething/fabric-digitalocean.svg?branch=master\n    :target: https://travis-ci.org/andrewsomething/fabric-digitalocean\n\nfabric-digitalocean is a collection of tools aiming to make it easy to use\n`Fabric`_ and `DigitalOcean`_ together.\n\nIt was inspired by `fabric-aws`_\n\nInstallation\n------------\n\n.. code-block::\n\n    pip install fabric-digitalocean\n\n\nUsage\n-----\n\nWith fabric-digitalocean, you can decorate Fabric tasks to run on a set of\nDigitalOcean Droplet. The `@droplets` decorator can take a list of Droplet IDs,\na tag, or a region as an argument. If you use a tag or region, it will be\nexpanded to a list of all Droplets with that tag applied or in that region.\nThey can also be used together.\n\nThe environmental variable `FABRIC_DIGITALOCEAN_TOKEN` must contain a\nDigitalOcean API token.\n\nSee below for an example:\n\n.. code-block:: python\n\n    from fabric.api import task, run\n    from fabric_digitalocean.decorators import droplets\n\n\n    @task\n    @droplets(ids=[8043964, 7997777])\n    def task_by_ids():\n        run('hostname')\n        run('uptime')\n\n\n    @task\n    @droplets(tag='demo')\n    def task_by_tag():\n        run('hostname')\n        run('uptime')\n\n\n    @task\n    @droplets(region='nyc3')\n    def task_by_region():\n        run('hostname')\n        run('uptime')\n\n\n    @task\n    @droplets(region='nyc2', tag='demo')\n    def task_by_both():\n        run('hostname')\n        run('uptime')\n\n\nTesting\n-------\n\nTo run the test suite, use:\n\n.. code-block::\n\n    nosetests -v --with-coverage --cover-package=fabric_digitalocean\n\n\n.. _Fabric: http://www.fabfile.org/\n.. _DigitalOcean: https://www.digitalocean.com\n.. _fabric-aws: https://github.com/EverythingMe/fabric-aws", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/andrewsomething/fabric-digitalocean/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andrewsomething/fabric-digitalocean", "keywords": "", "license": "BSD-2-Clause", "maintainer": "", "maintainer_email": "", "name": "fabric-digitalocean", "package_url": "https://pypi.org/project/fabric-digitalocean/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fabric-digitalocean/", "project_urls": {"Download": "https://github.com/andrewsomething/fabric-digitalocean/releases", "Homepage": "https://github.com/andrewsomething/fabric-digitalocean"}, "release_url": "https://pypi.org/project/fabric-digitalocean/0.1/", "requires_dist": ["fabric", "python-digitalocean", "coverage; extra == 'test'", "nose; extra == 'test'", "responses; extra == 'test'"], "requires_python": "", "summary": "A collection of fabric tools for working with DigitalOcean", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/andrewsomething/fabric-digitalocean\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/andrewsomething/fabric-digitalocean.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fe26789c40b7874b033d29c1695a4316345e7c9/68747470733a2f2f7472617669732d63692e6f72672f616e64726577736f6d657468696e672f6661627269632d6469676974616c6f6365616e2e7376673f6272616e63683d6d6173746572\"></a>\n<p>fabric-digitalocean is a collection of tools aiming to make it easy to use\n<a href=\"http://www.fabfile.org/\" rel=\"nofollow\">Fabric</a> and <a href=\"https://www.digitalocean.com\" rel=\"nofollow\">DigitalOcean</a> together.</p>\n<p>It was inspired by <a href=\"https://github.com/EverythingMe/fabric-aws\" rel=\"nofollow\">fabric-aws</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install fabric-digitalocean\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>With fabric-digitalocean, you can decorate Fabric tasks to run on a set of\nDigitalOcean Droplet. The <cite>@droplets</cite> decorator can take a list of Droplet IDs,\na tag, or a region as an argument. If you use a tag or region, it will be\nexpanded to a list of all Droplets with that tag applied or in that region.\nThey can also be used together.</p>\n<p>The environmental variable <cite>FABRIC_DIGITALOCEAN_TOKEN</cite> must contain a\nDigitalOcean API token.</p>\n<p>See below for an example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">fabric.api</span> <span class=\"kn\">import</span> <span class=\"n\">task</span><span class=\"p\">,</span> <span class=\"n\">run</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fabric_digitalocean.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">droplets</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"nd\">@droplets</span><span class=\"p\">(</span><span class=\"n\">ids</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">8043964</span><span class=\"p\">,</span> <span class=\"mi\">7997777</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">task_by_ids</span><span class=\"p\">():</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'hostname'</span><span class=\"p\">)</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'uptime'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"nd\">@droplets</span><span class=\"p\">(</span><span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">'demo'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">task_by_tag</span><span class=\"p\">():</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'hostname'</span><span class=\"p\">)</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'uptime'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"nd\">@droplets</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s1\">'nyc3'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">task_by_region</span><span class=\"p\">():</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'hostname'</span><span class=\"p\">)</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'uptime'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@task</span>\n<span class=\"nd\">@droplets</span><span class=\"p\">(</span><span class=\"n\">region</span><span class=\"o\">=</span><span class=\"s1\">'nyc2'</span><span class=\"p\">,</span> <span class=\"n\">tag</span><span class=\"o\">=</span><span class=\"s1\">'demo'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">task_by_both</span><span class=\"p\">():</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'hostname'</span><span class=\"p\">)</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'uptime'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>To run the test suite, use:</p>\n<pre>nosetests -v --with-coverage --cover-package=fabric_digitalocean\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2512625, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a3a97e2b9a34e95820181d0b9b10363e", "sha256": "aab50abd06a05e6f052b5ad2da2de283570bbff985c9c1960e4e9d0ae3f776c9"}, "downloads": -1, "filename": "fabric_digitalocean-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a3a97e2b9a34e95820181d0b9b10363e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6031, "upload_time": "2016-12-12T03:54:41", "upload_time_iso_8601": "2016-12-12T03:54:41.397466Z", "url": "https://files.pythonhosted.org/packages/55/6f/5ffb1dd66ea695fe806b1f0199129503df876041d7c2f3997c7bfc64c7d8/fabric_digitalocean-0.1-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a3a97e2b9a34e95820181d0b9b10363e", "sha256": "aab50abd06a05e6f052b5ad2da2de283570bbff985c9c1960e4e9d0ae3f776c9"}, "downloads": -1, "filename": "fabric_digitalocean-0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a3a97e2b9a34e95820181d0b9b10363e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6031, "upload_time": "2016-12-12T03:54:41", "upload_time_iso_8601": "2016-12-12T03:54:41.397466Z", "url": "https://files.pythonhosted.org/packages/55/6f/5ffb1dd66ea695fe806b1f0199129503df876041d7c2f3997c7bfc64c7d8/fabric_digitalocean-0.1-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:44:12 2020"}