{"info": {"author": "Thomas Kluyver", "author_email": "thomas@kluyver.me.uk", "bugtrack_url": null, "classifiers": ["Framework :: Jupyter", "License :: OSI Approved :: MIT License"], "description": "This is a tool to run notebooks with input values. When you write the notebook,\nthese are defined in the first code cell, with regular assignments like this:\n\n.. code-block:: python\n\n    stock = 'YHOO'\n    days_back = 600\n\nNbparameterise handles finding and extracting these parameters, and replacing\nthem with input values. You can then run the notebook with the new values.\nThis can be used for:\n\n- Batch processing: run the same code on a list of different inputs. See\n  ``examples/batch.py``.\n- Simple user interfaces: build an input form based on the parameters, and run\n  the notebook when the user submits the form. See ``examples/webapp.py`` for\n  an implementation of this with an HTML form.\n\nExtra information about the parameters, such as names to display in a user\ninterface, can be stored in notebook metadata.\n\nNbparameterise is written in Python 3, but it can handle notebooks that use\nPython 2.\n\nUsage:\n\n.. code-block:: python\n\n    import nbformat\n    from nbparameterise import (\n        extract_parameters, replace_definitions, parameter_values\n    )\n\n    with open(\"Stock display.ipynb\") as f:\n        nb = nbformat.read(f, as_version=4)\n\n    # Get a list of Parameter objects\n    orig_parameters = extract_parameters(nb)\n\n    # Update one or more parameters\n    params = parameter_values(orig_parameters, stock='GOOG')\n\n    # Make a notebook object with these definitions, and execute it.\n    new_nb = replace_definitions(nb, params)\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/takluyver/nbparameterise", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nbparameterise", "package_url": "https://pypi.org/project/nbparameterise/", "platform": "", "project_url": "https://pypi.org/project/nbparameterise/", "project_urls": {"Homepage": "https://github.com/takluyver/nbparameterise"}, "release_url": "https://pypi.org/project/nbparameterise/0.3/", "requires_dist": ["nbconvert", "astsearch"], "requires_python": ">=3.4", "summary": "Re-run a notebook substituting input parameters in the first cell.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a tool to run notebooks with input values. When you write the notebook,\nthese are defined in the first code cell, with regular assignments like this:</p>\n<pre><span class=\"n\">stock</span> <span class=\"o\">=</span> <span class=\"s1\">'YHOO'</span>\n<span class=\"n\">days_back</span> <span class=\"o\">=</span> <span class=\"mi\">600</span>\n</pre>\n<p>Nbparameterise handles finding and extracting these parameters, and replacing\nthem with input values. You can then run the notebook with the new values.\nThis can be used for:</p>\n<ul>\n<li>Batch processing: run the same code on a list of different inputs. See\n<tt>examples/batch.py</tt>.</li>\n<li>Simple user interfaces: build an input form based on the parameters, and run\nthe notebook when the user submits the form. See <tt>examples/webapp.py</tt> for\nan implementation of this with an HTML form.</li>\n</ul>\n<p>Extra information about the parameters, such as names to display in a user\ninterface, can be stored in notebook metadata.</p>\n<p>Nbparameterise is written in Python 3, but it can handle notebooks that use\nPython 2.</p>\n<p>Usage:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">nbformat</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nbparameterise</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">extract_parameters</span><span class=\"p\">,</span> <span class=\"n\">replace_definitions</span><span class=\"p\">,</span> <span class=\"n\">parameter_values</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"Stock display.ipynb\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">nb</span> <span class=\"o\">=</span> <span class=\"n\">nbformat</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">as_version</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Get a list of Parameter objects</span>\n<span class=\"n\">orig_parameters</span> <span class=\"o\">=</span> <span class=\"n\">extract_parameters</span><span class=\"p\">(</span><span class=\"n\">nb</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Update one or more parameters</span>\n<span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"n\">parameter_values</span><span class=\"p\">(</span><span class=\"n\">orig_parameters</span><span class=\"p\">,</span> <span class=\"n\">stock</span><span class=\"o\">=</span><span class=\"s1\">'GOOG'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Make a notebook object with these definitions, and execute it.</span>\n<span class=\"n\">new_nb</span> <span class=\"o\">=</span> <span class=\"n\">replace_definitions</span><span class=\"p\">(</span><span class=\"n\">nb</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 3775939, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "95946d1eb513485cd8ddbff24d86937c", "sha256": "2d7c36f804b352302f0427fdc52463a94946e519f6a9df3dc321cd1e8e206928"}, "downloads": -1, "filename": "nbparameterise-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "95946d1eb513485cd8ddbff24d86937c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "3", "size": 4124, "upload_time": "2016-01-20T16:28:08", "upload_time_iso_8601": "2016-01-20T16:28:08.467613Z", "url": "https://files.pythonhosted.org/packages/6f/7a/7fcfcd5a93ca8339600db9714331cad24d24346a46389c15f0f66baf4337/nbparameterise-0.1-py3-none-any.whl", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "db16056a032f190329cb26e2ea42d144", "sha256": "171a51b097826903df0e899806f8f39d36e3b5cf492b31e1247791b555c4f2d8"}, "downloads": -1, "filename": "nbparameterise-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "db16056a032f190329cb26e2ea42d144", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 8217, "upload_time": "2017-12-08T10:34:18", "upload_time_iso_8601": "2017-12-08T10:34:18.054677Z", "url": "https://files.pythonhosted.org/packages/79/a7/66f69ccf7cf8c75f3a02db472122a502149f9858661f39373a583320a4f1/nbparameterise-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04f87714e9f4534fdda7dcbb7e3dc81b", "sha256": "02b046d2a0df7b08b9a2db9bc2ac3b08c4ef472307ad8d6949f7c9f98fad9242"}, "downloads": -1, "filename": "nbparameterise-0.2.tar.gz", "has_sig": false, "md5_digest": "04f87714e9f4534fdda7dcbb7e3dc81b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 7895, "upload_time": "2017-12-08T10:34:19", "upload_time_iso_8601": "2017-12-08T10:34:19.844706Z", "url": "https://files.pythonhosted.org/packages/fd/0e/cf0b054da24c9ef4df578fe5556b6b1057f5dffc0c4e2611cb0214727cfb/nbparameterise-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "70c0ed4892d16be642e313ecfa6cb349", "sha256": "041f41f1fcc40d1032c92cdadd4fec8779417239be7a1d13971ddcabb520f4e3"}, "downloads": -1, "filename": "nbparameterise-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "70c0ed4892d16be642e313ecfa6cb349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 8349, "upload_time": "2018-04-18T07:32:31", "upload_time_iso_8601": "2018-04-18T07:32:31.027138Z", "url": "https://files.pythonhosted.org/packages/1b/00/cd588e2fbf2fd7ef516eea35250995c9d9b7a4a25213534eb6ebc9a6c677/nbparameterise-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da6b459ffd5099dffd832f11e62ddfc9", "sha256": "e098a18bf231de99c290df3fa439f11e6872914f48f331ea521c94b588e99959"}, "downloads": -1, "filename": "nbparameterise-0.3.tar.gz", "has_sig": false, "md5_digest": "da6b459ffd5099dffd832f11e62ddfc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8536, "upload_time": "2018-04-18T07:32:32", "upload_time_iso_8601": "2018-04-18T07:32:32.471732Z", "url": "https://files.pythonhosted.org/packages/21/75/54a2f927351eed9cc7ac0afbeec4e8db55f6a2fd929500771bbcf91c47d3/nbparameterise-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "70c0ed4892d16be642e313ecfa6cb349", "sha256": "041f41f1fcc40d1032c92cdadd4fec8779417239be7a1d13971ddcabb520f4e3"}, "downloads": -1, "filename": "nbparameterise-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "70c0ed4892d16be642e313ecfa6cb349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 8349, "upload_time": "2018-04-18T07:32:31", "upload_time_iso_8601": "2018-04-18T07:32:31.027138Z", "url": "https://files.pythonhosted.org/packages/1b/00/cd588e2fbf2fd7ef516eea35250995c9d9b7a4a25213534eb6ebc9a6c677/nbparameterise-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da6b459ffd5099dffd832f11e62ddfc9", "sha256": "e098a18bf231de99c290df3fa439f11e6872914f48f331ea521c94b588e99959"}, "downloads": -1, "filename": "nbparameterise-0.3.tar.gz", "has_sig": false, "md5_digest": "da6b459ffd5099dffd832f11e62ddfc9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 8536, "upload_time": "2018-04-18T07:32:32", "upload_time_iso_8601": "2018-04-18T07:32:32.471732Z", "url": "https://files.pythonhosted.org/packages/21/75/54a2f927351eed9cc7ac0afbeec4e8db55f6a2fd929500771bbcf91c47d3/nbparameterise-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:54 2020"}