{"info": {"author": "Juan L. Mateo", "author_email": "mateojuan@uniovi.es", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License"], "description": "**CCTop** is a tool to determine suitable CRISPR/Cas9 target sites in a given query\nsequence(s) and predict its potential off-target sites. The online version of\n**CCTop** is available at http://crispr.cos.uni-heidelberg.de/\n\nThis is a command line version of **CCTop** that is designed mainly to allow search\nof large volume of sequences and higher flexibility.\n\nIf you use this tool for your scientific work, please cite it as:\n\tStemmer, M., Thumberger, T., del Sol Keyer, M., Wittbrodt, J. and Mateo, J.L.\n\t*CCTop: an intuitive, flexible and reliable CRISPR/Cas9 target prediction tool.*\n\t**PLOS ONE (2015)**.\n\t[doi:10.1371/journal.pone.0124633](http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0124633)\n\nIf you use the CRISPRater score to select your target sites, please cite as well this work:\n\tLabuhn, M., Adams, F. F., Ng, M., Knoess, S., Schambach, A., Charpentier, E. M., ... Heckl, D.\n\t*Refined sgRNA efficacy prediction improves large- and small-scale CRISPR\u2013Cas9 applications.*\n\t**Nucleic Acids Research (2017)**.\n\t[doi: 10.1093/nar/gkx1268](https://academic.oup.com/nar/advance-article/doi/10.1093/nar/gkx1268/4754467)\n\n# Requirements\n\n**CCTop** is implemented in Python and it requires a version 3.5 or above.\n\nIn addition we relay on the short read aligner Bowtie 1 to identify the\noff-target sites. Bowtie can be downloaded from this site\nhttp://bowtie-bio.sourceforge.net/index.shtml in binary format for the main\nplatforms.\nYou need to create an indexed version of the genome sequence of your\ntarget species. This can be done with the tool bowtie-build included in the\nBowtie installation. For that you simply need a fasta file containing the genome\nsequence. To get the index you can do something like:\n```\n$ bowtie-build -r -f <your-fasta-file> <index-name>\n```\n\nThe previous command will create the index files in the current folder.\n\nTo handle gene and exon annotations we use the python library\n[bx-python](https://bitbucket.org/james_taylor/bx-python/). This library is\nonly required if you want to associate off-target sites with the closest\nexon/gene, otherwise you don't need to install it.\n\nThe exon and gene files contain basically the coordinates of those elements in\n[bed format](http://genome.ucsc.edu/FAQ/FAQformat#format1), which are the first\nthree columns of the file. The exon file can contain two more columns with the\nID and name of the corresponding gene.\nYou can generate easily such kind of files for you target organism using the\nscript `gff2bedFiles` included in this package. As the name\nof this script suggests, you only need a GFF file with the annotation.\nAdditionally, you can also use [Ensembl Biomart](http://www.ensembl.org/biomart),\nif your species is available there, to generate files complying with these\nrequirements.\n\nIn case of difficulties with these files contact us and we can provide you the\nfiles you need or help to generate them on your own.\n# Install\n\nPlease, refer to the file `INSTALL.md`.\n\n# Usage\n\nAfter a successful installation you should have the main **CCTop** executable,\ntogether with the scripts to generate the gene/exons files, ready to be used.\nYou can run **CCTop** with the -h flag to get a detailed list of the available\nparameters. For instance:\n```\n$ cctop -h\n```\n\nAt minimum it is necessary to specify the input (multi)fasta file (--input) and\nthe Bowtie index (--index). In this case **CCTop** assumes that the Bowtie\nexecutable can be found in the `PATH` system variable, there are not gene and\nexon files to use and the rest of parameters will take default values.\nNotice that the index parameter to specify here refers to the name of the\nindex, without any file extension, together with the path, if necessary.\n\nA command for a typical run will look something like this:\n```\n$ cctop --input <query.fasta> --index <path/index-name> --output <output-folder>\n```\nThe result of the run will be three files for each sequence in the input query\nfile. These files will have extension .fasta, .bed and .xls, containing,\nrespectively, the sequence of the target sites, their coordinates and their\ndetailed information as in the online version of CCTop. The name of the output\nfile(s) will be taken from the name of the sequences in the input fasta file.\n\n## Generating Exon/Gene files\nFor any species you have to work with it is very likely that there is an\nannotation file in GFF format. From any of these files you can generate\nthe files that **CCTop** needs to annotate the off-target sites.\nThe script `gff2bedFiles` expects as first argument the input file in\n[GFF version 3](https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md)\nformat.\nFiles in this format can be usually found with their corresponding assemblies\nin the web sites NCBI or Ensembl.\nWith the input file downloaded, it doesn't need to be uncompressed if it is in\ngz format, specify it as first argument to the script followed by\nthe prefix you prefer for the output files.\n```\n$ gff2bedFiles <input-gff> <prefix>\n```\nThe result will be two files named `<prefix>_exons.bed.gz` and\n`<prefix>_genes.bed.gz`.\nThese files are compressed, to save space, and can be passed directly to\n**CCTop**.\n\n# Docker image\n**CCTop** is also available as a Docker image at https://hub.docker.com/r/juanlmateo/cctop\nThis image contains everything ready to use **CCTop**.\nSimply download the image with this command\n```\ndocker pull juanlmateo/cctop:latest\n```\nWith this image you can run the commands `cctop` and `gff2bedFiles`, but also\nyou can run Bowtie to create the index of your target species.\n\nBelow you have an example that shows how to get CRISPR/Cas candidates for a\nsequence using the yeast as target species. This example shows all the steps,\nfrom creating the Bowtie index, the exon and gene files to the generation of\nthe final output.\n```\n# downloading the genome of the target species in fasta forma\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz\n# building the bowtie index from the fasta file\ndocker run -v `pwd`:/data/ cctop bowtie-build -r -f Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz saccharomyces_cerevisiae\n# downloading the annotation of this assembly in GFF format\nwget ftp://ftp.ensembl.org/pub/release-99/gff3/saccharomyces_cerevisiae/Saccharomyces_cerevisiae.R64-1-1.99.gff3.gz\n# generating the exon and gene files\ndocker run -v `pwd`:/data/ cctop gff2bedFiles Saccharomyces_cerevisiae.R64-1-1.99.gff3.gz saccharomyces_cerevisiae\n# defining the input sequence(s)\necho -e \">YDL194W\\nATGGATCCTAATAGTAACAGTTCTAGCGAAACATTACGCCAAGAGAAACAGGGTTTCCTA\" > test.fa\n# running CCTop\ndocker run -v `pwd`:/data/ cctop cctop --input test.fa --index saccharomyces_cerevisiae --exons saccharomyces_cerevisiae_exons.bed.gz --genes saccharomyces_cerevisiae_genes.bed.gz\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/juanlmateo/cctop_standalone", "keywords": "CRISPR", "license": "", "maintainer": "", "maintainer_email": "", "name": "CCTop", "package_url": "https://pypi.org/project/CCTop/", "platform": "", "project_url": "https://pypi.org/project/CCTop/", "project_urls": {"Homepage": "https://bitbucket.org/juanlmateo/cctop_standalone"}, "release_url": "https://pypi.org/project/CCTop/1.0.0/", "requires_dist": ["bx-python ; extra == 'bx'"], "requires_python": ">=3.5", "summary": "CRISPR/Cas Target online predictor", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>CCTop</strong> is a tool to determine suitable CRISPR/Cas9 target sites in a given query\nsequence(s) and predict its potential off-target sites. The online version of\n<strong>CCTop</strong> is available at <a href=\"http://crispr.cos.uni-heidelberg.de/\" rel=\"nofollow\">http://crispr.cos.uni-heidelberg.de/</a></p>\n<p>This is a command line version of <strong>CCTop</strong> that is designed mainly to allow search\nof large volume of sequences and higher flexibility.</p>\n<p>If you use this tool for your scientific work, please cite it as:\nStemmer, M., Thumberger, T., del Sol Keyer, M., Wittbrodt, J. and Mateo, J.L.\n<em>CCTop: an intuitive, flexible and reliable CRISPR/Cas9 target prediction tool.</em>\n<strong>PLOS ONE (2015)</strong>.\n<a href=\"http://journals.plos.org/plosone/article?id=10.1371/journal.pone.0124633\" rel=\"nofollow\">doi:10.1371/journal.pone.0124633</a></p>\n<p>If you use the CRISPRater score to select your target sites, please cite as well this work:\nLabuhn, M., Adams, F. F., Ng, M., Knoess, S., Schambach, A., Charpentier, E. M., ... Heckl, D.\n<em>Refined sgRNA efficacy prediction improves large- and small-scale CRISPR\u2013Cas9 applications.</em>\n<strong>Nucleic Acids Research (2017)</strong>.\n<a href=\"https://academic.oup.com/nar/advance-article/doi/10.1093/nar/gkx1268/4754467\" rel=\"nofollow\">doi: 10.1093/nar/gkx1268</a></p>\n<h1>Requirements</h1>\n<p><strong>CCTop</strong> is implemented in Python and it requires a version 3.5 or above.</p>\n<p>In addition we relay on the short read aligner Bowtie 1 to identify the\noff-target sites. Bowtie can be downloaded from this site\n<a href=\"http://bowtie-bio.sourceforge.net/index.shtml\" rel=\"nofollow\">http://bowtie-bio.sourceforge.net/index.shtml</a> in binary format for the main\nplatforms.\nYou need to create an indexed version of the genome sequence of your\ntarget species. This can be done with the tool bowtie-build included in the\nBowtie installation. For that you simply need a fasta file containing the genome\nsequence. To get the index you can do something like:</p>\n<pre><code>$ bowtie-build -r -f &lt;your-fasta-file&gt; &lt;index-name&gt;\n</code></pre>\n<p>The previous command will create the index files in the current folder.</p>\n<p>To handle gene and exon annotations we use the python library\n<a href=\"https://bitbucket.org/james_taylor/bx-python/\" rel=\"nofollow\">bx-python</a>. This library is\nonly required if you want to associate off-target sites with the closest\nexon/gene, otherwise you don't need to install it.</p>\n<p>The exon and gene files contain basically the coordinates of those elements in\n<a href=\"http://genome.ucsc.edu/FAQ/FAQformat#format1\" rel=\"nofollow\">bed format</a>, which are the first\nthree columns of the file. The exon file can contain two more columns with the\nID and name of the corresponding gene.\nYou can generate easily such kind of files for you target organism using the\nscript <code>gff2bedFiles</code> included in this package. As the name\nof this script suggests, you only need a GFF file with the annotation.\nAdditionally, you can also use <a href=\"http://www.ensembl.org/biomart\" rel=\"nofollow\">Ensembl Biomart</a>,\nif your species is available there, to generate files complying with these\nrequirements.</p>\n<p>In case of difficulties with these files contact us and we can provide you the\nfiles you need or help to generate them on your own.</p>\n<h1>Install</h1>\n<p>Please, refer to the file <code>INSTALL.md</code>.</p>\n<h1>Usage</h1>\n<p>After a successful installation you should have the main <strong>CCTop</strong> executable,\ntogether with the scripts to generate the gene/exons files, ready to be used.\nYou can run <strong>CCTop</strong> with the -h flag to get a detailed list of the available\nparameters. For instance:</p>\n<pre><code>$ cctop -h\n</code></pre>\n<p>At minimum it is necessary to specify the input (multi)fasta file (--input) and\nthe Bowtie index (--index). In this case <strong>CCTop</strong> assumes that the Bowtie\nexecutable can be found in the <code>PATH</code> system variable, there are not gene and\nexon files to use and the rest of parameters will take default values.\nNotice that the index parameter to specify here refers to the name of the\nindex, without any file extension, together with the path, if necessary.</p>\n<p>A command for a typical run will look something like this:</p>\n<pre><code>$ cctop --input &lt;query.fasta&gt; --index &lt;path/index-name&gt; --output &lt;output-folder&gt;\n</code></pre>\n<p>The result of the run will be three files for each sequence in the input query\nfile. These files will have extension .fasta, .bed and .xls, containing,\nrespectively, the sequence of the target sites, their coordinates and their\ndetailed information as in the online version of CCTop. The name of the output\nfile(s) will be taken from the name of the sequences in the input fasta file.</p>\n<h2>Generating Exon/Gene files</h2>\n<p>For any species you have to work with it is very likely that there is an\nannotation file in GFF format. From any of these files you can generate\nthe files that <strong>CCTop</strong> needs to annotate the off-target sites.\nThe script <code>gff2bedFiles</code> expects as first argument the input file in\n<a href=\"https://github.com/The-Sequence-Ontology/Specifications/blob/master/gff3.md\" rel=\"nofollow\">GFF version 3</a>\nformat.\nFiles in this format can be usually found with their corresponding assemblies\nin the web sites NCBI or Ensembl.\nWith the input file downloaded, it doesn't need to be uncompressed if it is in\ngz format, specify it as first argument to the script followed by\nthe prefix you prefer for the output files.</p>\n<pre><code>$ gff2bedFiles &lt;input-gff&gt; &lt;prefix&gt;\n</code></pre>\n<p>The result will be two files named <code>&lt;prefix&gt;_exons.bed.gz</code> and\n<code>&lt;prefix&gt;_genes.bed.gz</code>.\nThese files are compressed, to save space, and can be passed directly to\n<strong>CCTop</strong>.</p>\n<h1>Docker image</h1>\n<p><strong>CCTop</strong> is also available as a Docker image at <a href=\"https://hub.docker.com/r/juanlmateo/cctop\" rel=\"nofollow\">https://hub.docker.com/r/juanlmateo/cctop</a>\nThis image contains everything ready to use <strong>CCTop</strong>.\nSimply download the image with this command</p>\n<pre><code>docker pull juanlmateo/cctop:latest\n</code></pre>\n<p>With this image you can run the commands <code>cctop</code> and <code>gff2bedFiles</code>, but also\nyou can run Bowtie to create the index of your target species.</p>\n<p>Below you have an example that shows how to get CRISPR/Cas candidates for a\nsequence using the yeast as target species. This example shows all the steps,\nfrom creating the Bowtie index, the exon and gene files to the generation of\nthe final output.</p>\n<pre><code># downloading the genome of the target species in fasta forma\nwget ftp://ftp.ensembl.org/pub/release-99/fasta/saccharomyces_cerevisiae/dna/Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz\n# building the bowtie index from the fasta file\ndocker run -v `pwd`:/data/ cctop bowtie-build -r -f Saccharomyces_cerevisiae.R64-1-1.dna.toplevel.fa.gz saccharomyces_cerevisiae\n# downloading the annotation of this assembly in GFF format\nwget ftp://ftp.ensembl.org/pub/release-99/gff3/saccharomyces_cerevisiae/Saccharomyces_cerevisiae.R64-1-1.99.gff3.gz\n# generating the exon and gene files\ndocker run -v `pwd`:/data/ cctop gff2bedFiles Saccharomyces_cerevisiae.R64-1-1.99.gff3.gz saccharomyces_cerevisiae\n# defining the input sequence(s)\necho -e \"&gt;YDL194W\\nATGGATCCTAATAGTAACAGTTCTAGCGAAACATTACGCCAAGAGAAACAGGGTTTCCTA\" &gt; test.fa\n# running CCTop\ndocker run -v `pwd`:/data/ cctop cctop --input test.fa --index saccharomyces_cerevisiae --exons saccharomyces_cerevisiae_exons.bed.gz --genes saccharomyces_cerevisiae_genes.bed.gz\n</code></pre>\n\n          </div>"}, "last_serial": 7023017, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e128932ccc4fd1d66c0f9c06a0e24ad5", "sha256": "ae986f18b730d4fadf264a5929fd8fce8b508816d9ca0eab678bd1eda0ccef2d"}, "downloads": -1, "filename": "CCTop-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e128932ccc4fd1d66c0f9c06a0e24ad5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18997, "upload_time": "2020-04-15T08:21:55", "upload_time_iso_8601": "2020-04-15T08:21:55.736083Z", "url": "https://files.pythonhosted.org/packages/0b/6a/b9a334f33f0192aabd49413e9d72688c9f2f26b42c2e4d4a37faf2034e87/CCTop-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35b3ab6e249652ecac82f9f742f503af", "sha256": "ab3dfdddb5f54acabc7834c297377d67aab3790c2b281b146e50be65f2d60751"}, "downloads": -1, "filename": "CCTop-1.0.0.tar.gz", "has_sig": false, "md5_digest": "35b3ab6e249652ecac82f9f742f503af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24501, "upload_time": "2020-04-15T08:21:57", "upload_time_iso_8601": "2020-04-15T08:21:57.802571Z", "url": "https://files.pythonhosted.org/packages/22/35/f7ed7991bfb70f801fbe035a5114bd946a418f53b3af209dfb8099bf45f6/CCTop-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e128932ccc4fd1d66c0f9c06a0e24ad5", "sha256": "ae986f18b730d4fadf264a5929fd8fce8b508816d9ca0eab678bd1eda0ccef2d"}, "downloads": -1, "filename": "CCTop-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e128932ccc4fd1d66c0f9c06a0e24ad5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 18997, "upload_time": "2020-04-15T08:21:55", "upload_time_iso_8601": "2020-04-15T08:21:55.736083Z", "url": "https://files.pythonhosted.org/packages/0b/6a/b9a334f33f0192aabd49413e9d72688c9f2f26b42c2e4d4a37faf2034e87/CCTop-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35b3ab6e249652ecac82f9f742f503af", "sha256": "ab3dfdddb5f54acabc7834c297377d67aab3790c2b281b146e50be65f2d60751"}, "downloads": -1, "filename": "CCTop-1.0.0.tar.gz", "has_sig": false, "md5_digest": "35b3ab6e249652ecac82f9f742f503af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 24501, "upload_time": "2020-04-15T08:21:57", "upload_time_iso_8601": "2020-04-15T08:21:57.802571Z", "url": "https://files.pythonhosted.org/packages/22/35/f7ed7991bfb70f801fbe035a5114bd946a418f53b3af209dfb8099bf45f6/CCTop-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:05 2020"}