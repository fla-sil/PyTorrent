{"info": {"author": "Plone Foundation", "author_email": "plone-developers@lists.sourceforge.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 5.2", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "plone.staticresources\n=====================\n\nThis add-on contains all static JavaScript and CSS resources used by Plone.\n\n\nTarget audience\n---------------\n\nThis documentation aims at:\n\n- **Theme Authors:** who want to change the look and feel of a Plone site and need to:\n\n  - understand how to correctly bundle changes made into existing or new frontend code.\n\n- **Integrators and Developers:** who want to customize or maintain the front end of a Plone site for their customers:\n\n  - upgrade existing versions or install new ``npm`` packages.\n\n  - integrate new JavaScript/CSS behavior, eventually wrapped in a ``pattern`` for optimal integration and reuse within Plone front end ecosystem.\n\n- **Plone Core Developers:** who want to fix Plone bugs or enhance this add-on.\n\n\nHow to upgrade the resources in this package\n--------------------------------------------\n\n.. note::\n  Changes to JavaScript functionality must be done outside this package.\n  If you want to fix something or add functionality in Mockup you have to do it there.\n  This package is only to deliver the generated bundles as well as the npm dependencies so that building bundles is possible.\n\n1. Increase npm package versions in ``package.json``, in sections ``dependencies`` or ``devDependencies``.\n\n2. Run ``yarn upgrade`` (important: cannot be ``npm``)\n\n3. Run ``./bin/plone-compile-resources -b plone`` or ``./bin/plone-compile-resources -b plone-logged-in`` (whichever bundle you need to re-build).\n\n4. Increase the ``last_compilation`` date in ``src/plone/staticresources/profiles/default/registry/bundles.xml``.\n\n5. Create an upgrade step in ``plone.staticresources`` (most probably increasing ``last_compilation`` date).\n\n6. Submit a Pull Request and run the tests on Jenkins.\n\n\nWhat has changed\n----------------\n\nBetween Plone 5.0 and 5.1 these resources were located in ``static/`` directory of ``Products.CMFPlone`` package.\nStarting with Plone 5.2 they are distributed in this independent package due to the specific tooling and workflows used to build frontend resources and also the different maintenance and release needs of ``Products.CMFPlone``.\nFor a complete list of reasons, read `PLIP 1653 <https://github.com/plone/Products.CMFPlone/issues/1653>`_.\n\n.. note::\n  A note on Yarn: we require the use of Yarn because it supports installing packages in a custom named directory, which Npm does not (even using ``--prefix``, ``node_modules`` is hardcoded).\n  Our package directory is located at: ``src/plone/staticresources/static/components``.\n\nChanges since Plone 5.1.x\n^^^^^^^^^^^^^^^^^^^^^^^^^\n\n- The ``toolbar`` pattern from ``Products.CMFPlone.static.toolbar`` has been moved to ``mockup`` package.\n- ``mockup`` package now uses Npm's registry and Yarn instead of Bower.\n\nBesides the following has been moved in here:\n\n- All static Resources from ``Products.CMFPlone.static``: bundle resources, compiled bundles, external packages\n- Bundle and Resource registrations from ``Products.CMFPlone``'s ``dependencies`` profile\n- ``plone-compile-resources`` script\n- ``thememapper`` bundle from ``plone.app.theming``\n- ``plone.resourceeditor`` bundle from ``plone.resourceeditor``\n\n\nCompiling Bundles\n-----------------\n\nThe front end resources in this package should be updated with the script called ``plone-compile-resources``, available in the ``bin`` directory of a default Plone buildout installation.\nThis script compiles the final CSS and JS resources that will be served to end users.\n\nBuilding the ``plone`` bundle::\n\n  ./bin/plone-compile-resources -b plone\n\nBuilding the ``plone-logged-in`` bundle::\n\n  ./bin/plone-compile-resources -b plone-logged-in\n\n.. note::\n  You can see all the options of this executable by running ``./bin/plone-compile-resources --help``.\n\n\nResources, Bundles, Patterns and the Resource Registry\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nThe ``plone-compile-resources`` script collects Resources from source packages (e.g. ``mockup``) and compiles them in ``plone/staticresources/static/`` into minified versions with source maps and, for JavaScript only, also into an un-minified version.\nThe output directory is configurable by using ``csscompilation`` and ``jscompilation`` attributes of the bundle registration.\n\nBundles are groups of resources. By default Plone comes configured to serve two main bundles:\n\n- ``plone``: containing JS and CSS used for anonymous visitors\n- ``plone-logged-in``: with additional resources for authenticated visitors, e.g. for editor and management user interfaces\n\nFinally Plone encapsulates most of its CSS and JS into units called Patterns that live in the ``mockup`` package.\nAlthough Patterns provide their own registered Resources, those are not registered to Plone main bundles.\nInstead, they are imported through native LESS and Require JS \"entry points\" that live in ``plone.staticresource``:\n\n- `plone/staticresources/static/plone.js\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.js>`_\n- `plone/staticresources/static/plone.less\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.less>`_\n- `plone/staticresources/static/plone-logged-in.js\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.js>`_\n- `plone/staticresources/static/plone-logged-in.less\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.less>`_\n\nWhen editing a pattern (e.g. in ``mockup`` package), it is important to know for which bundle it is registered, which can be done by checking where it is imported in the entry points above.\nThe bundle name will be useful as parameter for ``plone-compile-resources`` script.\n\n.. note::\n  Patterns are also available as independent resources in `Resource Registries` control panel but they are not registered to default Plone bundles, which instead use the entry point approach.\n  Pattern's resources may be useful if needed to be injected in specific views.\n\nIn production mode (``./bin/instance start``), since version 5.1, Plone is configured to serve Aggregate Bundles, single files to minimize network requests (`aggregate bundles <https://docs.plone.org/adapt-and-extend/theming/resourceregistry.html#resource-bundle-aggregation>`_).\nIn that case final production resource URLs will be similar to:\n\n- http://localhost:8080//++plone++production/++unique++TIMESTAMP/default.js\n- http://localhost:8080//++plone++production/++unique++TIMESTAMP/default.css\n\nIf you enable `Development Mode` for JavaScript and CSS in `Resource Registries` control panel, Plone will omit timestamp from path and serve fresh copies of the resources of the selected bundle(s).\nThose are compiled in-browser, on the fly for each page load and requested by XHR requests to URLs like:\n\n- http://localhost:8080/++resource++plone.js\n- http://localhost:8080/++plone++static/plone.less\n- http://localhost:8080/++resource++plone-logged-in.js\n- http://localhost:8080/++plone++static/plone-logged-in.less\n\nThese entry points will then cause Patterns themselves to be loaded through in-browser XHR requests to URLs like:\n\n- http://localhost:8080/Plone/++resource++mockup/livesearch/pattern.js\n- http://localhost:8080/Plone/++resource++mockup/livesearch/pattern.livesearch.less\n\nIf you do enable Development Mode, and yet do not select any bundles, Plone serves static resources in URLs similar to:\n\n- http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-compiled.min.js\n- http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-compiled.css\n- http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-logged-in-compiled.min.js\n- http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-logged-in-compiled.css\n\n\nDevelopment tips\n^^^^^^^^^^^^^^^^\n\nWhen fixing Plone bugs or improving functionality:\n\n- Dependencies upgrades (e.g. ``moment.js``) should be done in ``mockup`` and after the PR is merged, propagated here (i.e. static resources needs to be recompiled)\n- Likewise, CSS and JS should be developed not in ``plone.staticresources`` but in their own package's source (for instance, in ``mockup``)\n- To see the new changes in the browser, enable `Development Mode` in `Resource Registries` control panel.\n  Next the desired bundle (that contains the modified files) must be set to either \"Develop JavaScript\", \"Develop CSS\" or both.\n  This causes each of the bundle resources to be served individually, easing development.\n  In this case, bundle resources are served from the source package (e.g. ``mockup``) instead of ``plone.staticresources``.\n- To identify which bundle contains the modified resource, see section \"Entry Points\" below.\n  Keep in mind the more bundles selected for development mode the slower are page reloads, so it is recommended to select only what is being developed.\n- Alternatively you may run ``./bin/plone-compile-resources`` between changes and avoid `Development Mode`'s in-browser compilation (fastest browser loading time).\n\n\nEntry Points\n^^^^^^^^^^^^\n\nThe current list of registered patterns for each entry point is available in:\n\n- `plone/staticresources/static/plone.js\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.js>`_\n- `plone/staticresources/static/plone.less\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.less>`_\n- `plone/staticresources/static/plone-logged-in.js\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.js>`_\n- `plone/staticresources/static/plone-logged-in.less\n  <https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.less>`_\n\nHere's a snapshot:\n\nFor anonymous users\n~~~~~~~~~~~~~~~~~~~\n\n+---------------------------------------+------------------------------------+\n| JS                                    | LESS                               |\n+=======================================+====================================+\n| - jquery                              | - mockup-patterns-autotoc          |\n| - pat-registry                        | - mockup-patterns-livesearch       |\n| - mockup-patterns-base                | - mockup-patterns-markspeciallinks |\n| - mockup-patterns-autotoc             | - mockup-patterns-modal            |\n| - mockup-patterns-contentloader       | - mockup-patterns-pickadate        |\n| - mockup-patterns-cookietrigger       | - mockup-patterns-select2          |\n| - mockup-patterns-formautofocus       |                                    |\n| - mockup-patterns-formunloadalert     |                                    |\n| - mockup-patterns-livesearch          |                                    |\n| - mockup-patterns-markspeciallinks    |                                    |\n| - mockup-patterns-modal               |                                    |\n| - mockup-patterns-moment              |                                    |\n| - mockup-patterns-pickadate           |                                    |\n| - mockup-patterns-navigationmarker    |                                    |\n| - mockup-patterns-preventdoublesubmit |                                    |\n| - mockup-patterns-select2             |                                    |\n| - bootstrap-collapse                  |                                    |\n| - bootstrap-dropdown                  |                                    |\n| - bootstrap-tooltip                   |                                    |\n+---------------------------------------+------------------------------------+\n\nFor logged-in users\n~~~~~~~~~~~~~~~~~~~\n\n+--------------------------------------------+--------------------------------+\n| JS                                         | LESS                           |\n+============================================+================================+\n| - mockup-patterns-inlinevalidation         | - mockup-patterns-querystring  |\n| - mockup-patterns-querystring              | - mockup-patterns-recurrence   |\n| - mockup-patterns-recurrence               | - mockup-patterns-relateditems |\n| - mockup-patterns-relateditems             | - mockup-patterns-structure    |\n| - mockup-patterns-structure                | - mockup-patterns-tinymce      |\n| - mockup-patterns-structureupdater         | - mockup-patterns-upload       |\n| - mockup-patterns-textareamimetypeselector | - plone-patterns-toolbar       |\n| - mockup-patterns-tinymce                  |                                |\n| - plone-patterns-portletmanager            |                                |\n| - plone-patterns-toolbar                   |                                |\n+--------------------------------------------+--------------------------------+\n\nDeveloping patterns\n-------------------\n\nAll JavaScript code in this package is downloaded via ``yarn`` into ``src/plone/staticresources/static/components``.\nNothing in that directory should be manually edited.\nIf you need to fix something, do it in the original repository and eventually upgrade its version (next section).\n\nFor Mockup, the original repository is: https://github.com/plone/mockup/\n\nFor Patternslib, visit: http://github.com/patternslib/Patterns\n\n\nGenerating the ``plone-compile-resources`` script\n-------------------------------------------------\n\nThe ``plone-compile-resources`` script can be used to compile bundles from the command line.\nIn short, the script starts up a Plone instance, reads the resources and bundles configured in the registry and compiles a JS/CSS bundle based on that configuration.\nSee ``plone-compile-resources --help`` for more information.\n\nWhen using buildout, ``plone-compile-resources`` script is automatically generated.\nIf you use a custom buildout, you might need to add something similar to:\n\n.. code-block:: ini\n\n  [buildout]\n  parts =\n    # ...\n    zopepy\n  # ...\n  [instance]\n  # ...\n\n  [zopepy]\n  recipe = zc.recipe.egg\n  eggs =\n      ${instance:eggs}\n  interpreter = zopepy\n  scripts =\n      zopepy\n      plone-compile-resources\n\n\nMore on the Resource Registry and its modes\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nHave a look on how ``plone.staticresources`` and ``mockup`` register their resources:\n\nIn ZCML:\n\n- https://github.com/plone/mockup/blob/master/mockup/configure.zcml\n- https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/configure.zcml\n\nIn the resource registry:\n\n- https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/bundles.xml\n- https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/resources.xml\n\nFor more information on the Plone resource registry see the documentation at:\n\n- https://docs.plone.org/adapt-and-extend/theming/resourceregistry.html\n\n\nLicense\n-------\n\nThe project is licensed under the GPLv2.\n\n\nChangelog\n=========\n\n.. You should *NOT* be adding new change log entries to this file.\n   You should create a file in the news directory instead.\n   For helpful instructions, please see:\n   https://github.com/plone/plone.releaser/blob/master/ADD-A-NEWS-ITEM.rst\n\n.. towncrier release notes start\n\n1.2.1 (2020-01-12)\n------------------\n\nBug fixes:\n\n\n- Fixed drag problem on click on sortable items in folder contents. (#56)\n- Fix problem with TTW compilation of bundles. (#58)\n\n\n1.2.0 (2019-11-14)\n------------------\n\nNew features:\n\n\n- Update jQuery from version 1.11.3 to 1.12.4\n  [davilima6] (#34)\n- Recompile 'plone' bundle after updating jQuery-related packages (#40)\n- Update all components and recompile bundles. (#44)\n- Split up bundles for more flexibility and optimized resource loading.\n  Move select2 and datepicker to logged-in bundle.\n  Move toolbar, portletmanager, querystring and structure pattern to editor bundle.\n  Move tinymce to it's own bundle.\n  Single out moment.js to reduce plone bundle size and allow async loading.\n  Add optional datatables bundle.\n  [agitator] (#46)\n\n\nBug fixes:\n\n\n- Fix autotoc pattern: activate the element link with active class during initialization\n  [mamico] (#37)\n- Fix Tinymce pattern: Link popup looses tab selection on active linktype\n  [mamico] (#37)\n- build js/css for mockup changes plone/mockup#922\n  [mamico] (#37)\n- When compiling a bundle and including a resource from a request, open the\n  temporary file in binary mode.\n  [frapell] (#38)\n- Bring fix for https://github.com/plone/mockup/issues/923\n  [frapell] (#41)\n- Fix \"TTW Bundle compilation broken\".\n  Refs: https://github.com/plone/Products.CMFPlone/issues/2969\n  [thet] (#43)\n\n\n1.1.0 (2019-06-22)\n------------------\n\nNew features:\n\n- Add support for asynchronous loading of javascript resources.\n  A new plone-base bundle is added with the minimum required scripts from plone bundle.\n  Import the extra profile to enable experimental async loading.\n  [agitator] (#27)\n\nBug fixes:\n\n- Fixes plone/mockup#895 again. (#24)\n- Fixed plone/Products.CMFPlone#2490 conflict in z-index between main toolbar and structure pattern toolbar (#25)\n- Integrate https://github.com/plone/mockup/pull/906 which fixes wrong in-path marking for similar pathnames. #26\n  [agitator] (#26)\n\n\n1.0.2 (2019-03-21)\n------------------\n\nBug fixes:\n\n- Fix highlight of current item in nav for image and file.\n  [agitator] (#18)\n- Fix less building error.\n  [vangheem] (#19)\n- Update resources after alignment fix in Select2-based widgets\n  [davilima6] (#21)\n\n\n1.0.1 (2019-03-12)\n------------------\n\nBug fixes:\n\n- Fix highlight of current item in nav for image and file.\n  [agitator] (#18)\n- Update resources after alignment fix in Select2-based widgets\n  [davilima6] (#21)\n\n\n1.0.0 (2019-03-04)\n------------------\n\nNew features:\n\n- Ship moment.js without locales, which are now lazily loaded in 'mockup' package\n  [davilima6] (#10)\n\nBug fixes:\n\n- Customize select2 to work better with relateditems pattern, update compiled resources: plone, logged-in\n  [MrTango] (#16)\n\n\n1.0a1 (2019-02-13)\n------------------\n\nNew features:\n\n- Put together all Plone assets in a single package. [thet] (#1)\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/plone/plone.staticresources", "keywords": "Python Plone", "license": "GPL version 2", "maintainer": "", "maintainer_email": "", "name": "plone.staticresources", "package_url": "https://pypi.org/project/plone.staticresources/", "platform": "", "project_url": "https://pypi.org/project/plone.staticresources/", "project_urls": {"Homepage": "https://github.com/plone/plone.staticresources"}, "release_url": "https://pypi.org/project/plone.staticresources/1.2.1/", "requires_dist": ["Products.GenericSetup", "setuptools", "plone.resource", "plone.app.testing ; extra == 'test'", "plone.testing ; extra == 'test'"], "requires_python": "", "summary": "Static resources for Plone", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"plone-staticresources\">\n<h2>plone.staticresources</h2>\n<p>This add-on contains all static JavaScript and CSS resources used by Plone.</p>\n<div id=\"target-audience\">\n<h3>Target audience</h3>\n<p>This documentation aims at:</p>\n<ul>\n<li><strong>Theme Authors:</strong> who want to change the look and feel of a Plone site and need to:<ul>\n<li>understand how to correctly bundle changes made into existing or new frontend code.</li>\n</ul>\n</li>\n<li><strong>Integrators and Developers:</strong> who want to customize or maintain the front end of a Plone site for their customers:<ul>\n<li>upgrade existing versions or install new <tt>npm</tt> packages.</li>\n<li>integrate new JavaScript/CSS behavior, eventually wrapped in a <tt>pattern</tt> for optimal integration and reuse within Plone front end ecosystem.</li>\n</ul>\n</li>\n<li><strong>Plone Core Developers:</strong> who want to fix Plone bugs or enhance this add-on.</li>\n</ul>\n</div>\n<div id=\"how-to-upgrade-the-resources-in-this-package\">\n<h3>How to upgrade the resources in this package</h3>\n<div>\n<p>Note</p>\n<p>Changes to JavaScript functionality must be done outside this package.\nIf you want to fix something or add functionality in Mockup you have to do it there.\nThis package is only to deliver the generated bundles as well as the npm dependencies so that building bundles is possible.</p>\n</div>\n<ol>\n<li>Increase npm package versions in <tt>package.json</tt>, in sections <tt>dependencies</tt> or <tt>devDependencies</tt>.</li>\n<li>Run <tt>yarn upgrade</tt> (important: cannot be <tt>npm</tt>)</li>\n<li>Run <tt><span class=\"pre\">./bin/plone-compile-resources</span> <span class=\"pre\">-b</span> plone</tt> or <tt><span class=\"pre\">./bin/plone-compile-resources</span> <span class=\"pre\">-b</span> <span class=\"pre\">plone-logged-in</span></tt> (whichever bundle you need to re-build).</li>\n<li>Increase the <tt>last_compilation</tt> date in <tt>src/plone/staticresources/profiles/default/registry/bundles.xml</tt>.</li>\n<li>Create an upgrade step in <tt>plone.staticresources</tt> (most probably increasing <tt>last_compilation</tt> date).</li>\n<li>Submit a Pull Request and run the tests on Jenkins.</li>\n</ol>\n</div>\n<div id=\"what-has-changed\">\n<h3>What has changed</h3>\n<p>Between Plone 5.0 and 5.1 these resources were located in <tt>static/</tt> directory of <tt>Products.CMFPlone</tt> package.\nStarting with Plone 5.2 they are distributed in this independent package due to the specific tooling and workflows used to build frontend resources and also the different maintenance and release needs of <tt>Products.CMFPlone</tt>.\nFor a complete list of reasons, read <a href=\"https://github.com/plone/Products.CMFPlone/issues/1653\" rel=\"nofollow\">PLIP 1653</a>.</p>\n<div>\n<p>Note</p>\n<p>A note on Yarn: we require the use of Yarn because it supports installing packages in a custom named directory, which Npm does not (even using <tt><span class=\"pre\">--prefix</span></tt>, <tt>node_modules</tt> is hardcoded).\nOur package directory is located at: <tt>src/plone/staticresources/static/components</tt>.</p>\n</div>\n<div id=\"changes-since-plone-5-1-x\">\n<h4>Changes since Plone 5.1.x</h4>\n<ul>\n<li>The <tt>toolbar</tt> pattern from <tt>Products.CMFPlone.static.toolbar</tt> has been moved to <tt>mockup</tt> package.</li>\n<li><tt>mockup</tt> package now uses Npm\u2019s registry and Yarn instead of Bower.</li>\n</ul>\n<p>Besides the following has been moved in here:</p>\n<ul>\n<li>All static Resources from <tt>Products.CMFPlone.static</tt>: bundle resources, compiled bundles, external packages</li>\n<li>Bundle and Resource registrations from <tt>Products.CMFPlone</tt>\u2019s <tt>dependencies</tt> profile</li>\n<li><tt><span class=\"pre\">plone-compile-resources</span></tt> script</li>\n<li><tt>thememapper</tt> bundle from <tt>plone.app.theming</tt></li>\n<li><tt>plone.resourceeditor</tt> bundle from <tt>plone.resourceeditor</tt></li>\n</ul>\n</div>\n</div>\n<div id=\"compiling-bundles\">\n<h3>Compiling Bundles</h3>\n<p>The front end resources in this package should be updated with the script called <tt><span class=\"pre\">plone-compile-resources</span></tt>, available in the <tt>bin</tt> directory of a default Plone buildout installation.\nThis script compiles the final CSS and JS resources that will be served to end users.</p>\n<p>Building the <tt>plone</tt> bundle:</p>\n<pre>./bin/plone-compile-resources -b plone\n</pre>\n<p>Building the <tt><span class=\"pre\">plone-logged-in</span></tt> bundle:</p>\n<pre>./bin/plone-compile-resources -b plone-logged-in\n</pre>\n<div>\n<p>Note</p>\n<p>You can see all the options of this executable by running <tt><span class=\"pre\">./bin/plone-compile-resources</span> <span class=\"pre\">--help</span></tt>.</p>\n</div>\n<div id=\"resources-bundles-patterns-and-the-resource-registry\">\n<h4>Resources, Bundles, Patterns and the Resource Registry</h4>\n<p>The <tt><span class=\"pre\">plone-compile-resources</span></tt> script collects Resources from source packages (e.g. <tt>mockup</tt>) and compiles them in <tt>plone/staticresources/static/</tt> into minified versions with source maps and, for JavaScript only, also into an un-minified version.\nThe output directory is configurable by using <tt>csscompilation</tt> and <tt>jscompilation</tt> attributes of the bundle registration.</p>\n<p>Bundles are groups of resources. By default Plone comes configured to serve two main bundles:</p>\n<ul>\n<li><tt>plone</tt>: containing JS and CSS used for anonymous visitors</li>\n<li><tt><span class=\"pre\">plone-logged-in</span></tt>: with additional resources for authenticated visitors, e.g. for editor and management user interfaces</li>\n</ul>\n<p>Finally Plone encapsulates most of its CSS and JS into units called Patterns that live in the <tt>mockup</tt> package.\nAlthough Patterns provide their own registered Resources, those are not registered to Plone main bundles.\nInstead, they are imported through native LESS and Require JS \u201centry points\u201d that live in <tt>plone.staticresource</tt>:</p>\n<ul>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.js\" rel=\"nofollow\">plone/staticresources/static/plone.js</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.less\" rel=\"nofollow\">plone/staticresources/static/plone.less</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.js\" rel=\"nofollow\">plone/staticresources/static/plone-logged-in.js</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.less\" rel=\"nofollow\">plone/staticresources/static/plone-logged-in.less</a></li>\n</ul>\n<p>When editing a pattern (e.g. in <tt>mockup</tt> package), it is important to know for which bundle it is registered, which can be done by checking where it is imported in the entry points above.\nThe bundle name will be useful as parameter for <tt><span class=\"pre\">plone-compile-resources</span></tt> script.</p>\n<div>\n<p>Note</p>\n<p>Patterns are also available as independent resources in <cite>Resource Registries</cite> control panel but they are not registered to default Plone bundles, which instead use the entry point approach.\nPattern\u2019s resources may be useful if needed to be injected in specific views.</p>\n</div>\n<p>In production mode (<tt>./bin/instance start</tt>), since version 5.1, Plone is configured to serve Aggregate Bundles, single files to minimize network requests (<a href=\"https://docs.plone.org/adapt-and-extend/theming/resourceregistry.html#resource-bundle-aggregation\" rel=\"nofollow\">aggregate bundles</a>).\nIn that case final production resource URLs will be similar to:</p>\n<ul>\n<li><a href=\"http://localhost:8080//++plone++production/++unique++TIMESTAMP/default.js\" rel=\"nofollow\">http://localhost:8080//++plone++production/++unique++TIMESTAMP/default.js</a></li>\n<li><a href=\"http://localhost:8080//++plone++production/++unique++TIMESTAMP/default.css\" rel=\"nofollow\">http://localhost:8080//++plone++production/++unique++TIMESTAMP/default.css</a></li>\n</ul>\n<p>If you enable <cite>Development Mode</cite> for JavaScript and CSS in <cite>Resource Registries</cite> control panel, Plone will omit timestamp from path and serve fresh copies of the resources of the selected bundle(s).\nThose are compiled in-browser, on the fly for each page load and requested by XHR requests to URLs like:</p>\n<ul>\n<li><a href=\"http://localhost:8080/++resource++plone.js\" rel=\"nofollow\">http://localhost:8080/++resource++plone.js</a></li>\n<li><a href=\"http://localhost:8080/++plone++static/plone.less\" rel=\"nofollow\">http://localhost:8080/++plone++static/plone.less</a></li>\n<li><a href=\"http://localhost:8080/++resource++plone-logged-in.js\" rel=\"nofollow\">http://localhost:8080/++resource++plone-logged-in.js</a></li>\n<li><a href=\"http://localhost:8080/++plone++static/plone-logged-in.less\" rel=\"nofollow\">http://localhost:8080/++plone++static/plone-logged-in.less</a></li>\n</ul>\n<p>These entry points will then cause Patterns themselves to be loaded through in-browser XHR requests to URLs like:</p>\n<ul>\n<li><a href=\"http://localhost:8080/Plone/++resource++mockup/livesearch/pattern.js\" rel=\"nofollow\">http://localhost:8080/Plone/++resource++mockup/livesearch/pattern.js</a></li>\n<li><a href=\"http://localhost:8080/Plone/++resource++mockup/livesearch/pattern.livesearch.less\" rel=\"nofollow\">http://localhost:8080/Plone/++resource++mockup/livesearch/pattern.livesearch.less</a></li>\n</ul>\n<p>If you do enable Development Mode, and yet do not select any bundles, Plone serves static resources in URLs similar to:</p>\n<ul>\n<li><a href=\"http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-compiled.min.js\" rel=\"nofollow\">http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-compiled.min.js</a></li>\n<li><a href=\"http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-compiled.css\" rel=\"nofollow\">http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-compiled.css</a></li>\n<li><a href=\"http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-logged-in-compiled.min.js\" rel=\"nofollow\">http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-logged-in-compiled.min.js</a></li>\n<li><a href=\"http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-logged-in-compiled.css\" rel=\"nofollow\">http://localhost:8080/++plone++static/++unique++TIMESTAMP/plone-logged-in-compiled.css</a></li>\n</ul>\n</div>\n<div id=\"development-tips\">\n<h4>Development tips</h4>\n<p>When fixing Plone bugs or improving functionality:</p>\n<ul>\n<li>Dependencies upgrades (e.g. <tt>moment.js</tt>) should be done in <tt>mockup</tt> and after the PR is merged, propagated here (i.e. static resources needs to be recompiled)</li>\n<li>Likewise, CSS and JS should be developed not in <tt>plone.staticresources</tt> but in their own package\u2019s source (for instance, in <tt>mockup</tt>)</li>\n<li>To see the new changes in the browser, enable <cite>Development Mode</cite> in <cite>Resource Registries</cite> control panel.\nNext the desired bundle (that contains the modified files) must be set to either \u201cDevelop JavaScript\u201d, \u201cDevelop CSS\u201d or both.\nThis causes each of the bundle resources to be served individually, easing development.\nIn this case, bundle resources are served from the source package (e.g. <tt>mockup</tt>) instead of <tt>plone.staticresources</tt>.</li>\n<li>To identify which bundle contains the modified resource, see section \u201cEntry Points\u201d below.\nKeep in mind the more bundles selected for development mode the slower are page reloads, so it is recommended to select only what is being developed.</li>\n<li>Alternatively you may run <tt><span class=\"pre\">./bin/plone-compile-resources</span></tt> between changes and avoid <cite>Development Mode</cite>\u2019s in-browser compilation (fastest browser loading time).</li>\n</ul>\n</div>\n<div id=\"entry-points\">\n<h4>Entry Points</h4>\n<p>The current list of registered patterns for each entry point is available in:</p>\n<ul>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.js\" rel=\"nofollow\">plone/staticresources/static/plone.js</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone.less\" rel=\"nofollow\">plone/staticresources/static/plone.less</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.js\" rel=\"nofollow\">plone/staticresources/static/plone-logged-in.js</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/static/plone-logged-in.less\" rel=\"nofollow\">plone/staticresources/static/plone-logged-in.less</a></li>\n</ul>\n<p>Here\u2019s a snapshot:</p>\n<div id=\"for-anonymous-users\">\n<h5>For anonymous users</h5>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>JS</th>\n<th>LESS</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><ul>\n<li>jquery</li>\n<li>pat-registry</li>\n<li>mockup-patterns-base</li>\n<li>mockup-patterns-autotoc</li>\n<li>mockup-patterns-contentloader</li>\n<li>mockup-patterns-cookietrigger</li>\n<li>mockup-patterns-formautofocus</li>\n<li>mockup-patterns-formunloadalert</li>\n<li>mockup-patterns-livesearch</li>\n<li>mockup-patterns-markspeciallinks</li>\n<li>mockup-patterns-modal</li>\n<li>mockup-patterns-moment</li>\n<li>mockup-patterns-pickadate</li>\n<li>mockup-patterns-navigationmarker</li>\n<li>mockup-patterns-preventdoublesubmit</li>\n<li>mockup-patterns-select2</li>\n<li>bootstrap-collapse</li>\n<li>bootstrap-dropdown</li>\n<li>bootstrap-tooltip</li>\n</ul>\n</td>\n<td><ul>\n<li>mockup-patterns-autotoc</li>\n<li>mockup-patterns-livesearch</li>\n<li>mockup-patterns-markspeciallinks</li>\n<li>mockup-patterns-modal</li>\n<li>mockup-patterns-pickadate</li>\n<li>mockup-patterns-select2</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"for-logged-in-users\">\n<h5>For logged-in users</h5>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>JS</th>\n<th>LESS</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><ul>\n<li>mockup-patterns-inlinevalidation</li>\n<li>mockup-patterns-querystring</li>\n<li>mockup-patterns-recurrence</li>\n<li>mockup-patterns-relateditems</li>\n<li>mockup-patterns-structure</li>\n<li>mockup-patterns-structureupdater</li>\n<li>mockup-patterns-textareamimetypeselector</li>\n<li>mockup-patterns-tinymce</li>\n<li>plone-patterns-portletmanager</li>\n<li>plone-patterns-toolbar</li>\n</ul>\n</td>\n<td><ul>\n<li>mockup-patterns-querystring</li>\n<li>mockup-patterns-recurrence</li>\n<li>mockup-patterns-relateditems</li>\n<li>mockup-patterns-structure</li>\n<li>mockup-patterns-tinymce</li>\n<li>mockup-patterns-upload</li>\n<li>plone-patterns-toolbar</li>\n</ul>\n</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n</div>\n<div id=\"developing-patterns\">\n<h3>Developing patterns</h3>\n<p>All JavaScript code in this package is downloaded via <tt>yarn</tt> into <tt>src/plone/staticresources/static/components</tt>.\nNothing in that directory should be manually edited.\nIf you need to fix something, do it in the original repository and eventually upgrade its version (next section).</p>\n<p>For Mockup, the original repository is: <a href=\"https://github.com/plone/mockup/\" rel=\"nofollow\">https://github.com/plone/mockup/</a></p>\n<p>For Patternslib, visit: <a href=\"http://github.com/patternslib/Patterns\" rel=\"nofollow\">http://github.com/patternslib/Patterns</a></p>\n</div>\n<div id=\"generating-the-plone-compile-resources-script\">\n<h3>Generating the <tt><span class=\"pre\">plone-compile-resources</span></tt> script</h3>\n<p>The <tt><span class=\"pre\">plone-compile-resources</span></tt> script can be used to compile bundles from the command line.\nIn short, the script starts up a Plone instance, reads the resources and bundles configured in the registry and compiles a JS/CSS bundle based on that configuration.\nSee <tt><span class=\"pre\">plone-compile-resources</span> <span class=\"pre\">--help</span></tt> for more information.</p>\n<p>When using buildout, <tt><span class=\"pre\">plone-compile-resources</span></tt> script is automatically generated.\nIf you use a custom buildout, you might need to add something similar to:</p>\n<pre><span class=\"k\">[buildout]</span>\n<span class=\"na\">parts</span> <span class=\"o\">=</span><span class=\"s\">\n  # ...\n  zopepy</span>\n<span class=\"c1\"># ...</span>\n<span class=\"k\">[instance]</span>\n<span class=\"c1\"># ...</span>\n\n<span class=\"k\">[zopepy]</span>\n<span class=\"na\">recipe</span> <span class=\"o\">=</span> <span class=\"s\">zc.recipe.egg</span>\n<span class=\"na\">eggs</span> <span class=\"o\">=</span><span class=\"s\">\n    ${instance:eggs}</span>\n<span class=\"na\">interpreter</span> <span class=\"o\">=</span> <span class=\"s\">zopepy</span>\n<span class=\"na\">scripts</span> <span class=\"o\">=</span><span class=\"s\">\n    zopepy\n    plone-compile-resources</span>\n</pre>\n<div id=\"more-on-the-resource-registry-and-its-modes\">\n<h4>More on the Resource Registry and its modes</h4>\n<p>Have a look on how <tt>plone.staticresources</tt> and <tt>mockup</tt> register their resources:</p>\n<p>In ZCML:</p>\n<ul>\n<li><a href=\"https://github.com/plone/mockup/blob/master/mockup/configure.zcml\" rel=\"nofollow\">https://github.com/plone/mockup/blob/master/mockup/configure.zcml</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/configure.zcml\" rel=\"nofollow\">https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/configure.zcml</a></li>\n</ul>\n<p>In the resource registry:</p>\n<ul>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/bundles.xml\" rel=\"nofollow\">https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/bundles.xml</a></li>\n<li><a href=\"https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/resources.xml\" rel=\"nofollow\">https://github.com/plone/plone.staticresources/blob/master/src/plone/staticresources/profiles/default/registry/resources.xml</a></li>\n</ul>\n<p>For more information on the Plone resource registry see the documentation at:</p>\n<ul>\n<li><a href=\"https://docs.plone.org/adapt-and-extend/theming/resourceregistry.html\" rel=\"nofollow\">https://docs.plone.org/adapt-and-extend/theming/resourceregistry.html</a></li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>The project is licensed under the GPLv2.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id5\">\n<h3>1.2.1 (2020-01-12)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fixed drag problem on click on sortable items in folder contents. (#56)</li>\n<li>Fix problem with TTW compilation of bundles. (#58)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.2.0 (2019-11-14)</h3>\n<p>New features:</p>\n<ul>\n<li>Update jQuery from version 1.11.3 to 1.12.4\n[davilima6] (#34)</li>\n<li>Recompile \u2018plone\u2019 bundle after updating jQuery-related packages (#40)</li>\n<li>Update all components and recompile bundles. (#44)</li>\n<li>Split up bundles for more flexibility and optimized resource loading.\nMove select2 and datepicker to logged-in bundle.\nMove toolbar, portletmanager, querystring and structure pattern to editor bundle.\nMove tinymce to it\u2019s own bundle.\nSingle out moment.js to reduce plone bundle size and allow async loading.\nAdd optional datatables bundle.\n[agitator] (#46)</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix autotoc pattern: activate the element link with active class during initialization\n[mamico] (#37)</li>\n<li>Fix Tinymce pattern: Link popup looses tab selection on active linktype\n[mamico] (#37)</li>\n<li>build js/css for mockup changes plone/mockup#922\n[mamico] (#37)</li>\n<li>When compiling a bundle and including a resource from a request, open the\ntemporary file in binary mode.\n[frapell] (#38)</li>\n<li>Bring fix for <a href=\"https://github.com/plone/mockup/issues/923\" rel=\"nofollow\">https://github.com/plone/mockup/issues/923</a>\n[frapell] (#41)</li>\n<li>Fix \u201cTTW Bundle compilation broken\u201d.\nRefs: <a href=\"https://github.com/plone/Products.CMFPlone/issues/2969\" rel=\"nofollow\">https://github.com/plone/Products.CMFPlone/issues/2969</a>\n[thet] (#43)</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.1.0 (2019-06-22)</h3>\n<p>New features:</p>\n<ul>\n<li>Add support for asynchronous loading of javascript resources.\nA new plone-base bundle is added with the minimum required scripts from plone bundle.\nImport the extra profile to enable experimental async loading.\n[agitator] (#27)</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Fixes plone/mockup#895 again. (#24)</li>\n<li>Fixed plone/Products.CMFPlone#2490 conflict in z-index between main toolbar and structure pattern toolbar (#25)</li>\n<li>Integrate <a href=\"https://github.com/plone/mockup/pull/906\" rel=\"nofollow\">https://github.com/plone/mockup/pull/906</a> which fixes wrong in-path marking for similar pathnames. #26\n[agitator] (#26)</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.0.2 (2019-03-21)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix highlight of current item in nav for image and file.\n[agitator] (#18)</li>\n<li>Fix less building error.\n[vangheem] (#19)</li>\n<li>Update resources after alignment fix in Select2-based widgets\n[davilima6] (#21)</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.0.1 (2019-03-12)</h3>\n<p>Bug fixes:</p>\n<ul>\n<li>Fix highlight of current item in nav for image and file.\n[agitator] (#18)</li>\n<li>Update resources after alignment fix in Select2-based widgets\n[davilima6] (#21)</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.0.0 (2019-03-04)</h3>\n<p>New features:</p>\n<ul>\n<li>Ship moment.js without locales, which are now lazily loaded in \u2018mockup\u2019 package\n[davilima6] (#10)</li>\n</ul>\n<p>Bug fixes:</p>\n<ul>\n<li>Customize select2 to work better with relateditems pattern, update compiled resources: plone, logged-in\n[MrTango] (#16)</li>\n</ul>\n</div>\n<div id=\"a1-2019-02-13\">\n<h3>1.0a1 (2019-02-13)</h3>\n<p>New features:</p>\n<ul>\n<li>Put together all Plone assets in a single package. [thet] (#1)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6442118, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e8c6efa8494da20647e29726a09f6b13", "sha256": "5b0ef3975e777db6c2a9d20d43d82d2d334a4fd816652c7bb464a3c9a41ef1c5"}, "downloads": -1, "filename": "plone.staticresources-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e8c6efa8494da20647e29726a09f6b13", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39731142, "upload_time": "2019-03-04T15:56:07", "upload_time_iso_8601": "2019-03-04T15:56:07.511569Z", "url": "https://files.pythonhosted.org/packages/44/38/82951829357e6984edd9656478b1ab1f8a7cfa89b5ea0bb48a41d3d7a7e5/plone.staticresources-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4a012ec6f542faf9c5ec813b41742398", "sha256": "3e7bab0808a6be8c04a2c1522aeb40dd6f2d978d0155b83918bbb56fb35ff779"}, "downloads": -1, "filename": "plone.staticresources-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4a012ec6f542faf9c5ec813b41742398", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39731265, "upload_time": "2019-03-13T00:43:20", "upload_time_iso_8601": "2019-03-13T00:43:20.157999Z", "url": "https://files.pythonhosted.org/packages/d1/bc/a47275483c7b460a58fd8a33e0c1b15b9487b19dceee518691eb1fcbf15d/plone.staticresources-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "01cf77913a032624d8fe46a5e15db5e6", "sha256": "5c75f7e8f46746ad020d17767dcaceaddd7a1a08abbac28e05a0c0dc87b0a37b"}, "downloads": -1, "filename": "plone.staticresources-1.0.2.tar.gz", "has_sig": false, "md5_digest": "01cf77913a032624d8fe46a5e15db5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39730651, "upload_time": "2019-03-22T02:59:02", "upload_time_iso_8601": "2019-03-22T02:59:02.056632Z", "url": "https://files.pythonhosted.org/packages/de/48/41d595972dac4094f2547a13a0cc5a8c536c48450fc315ca96f48e68187d/plone.staticresources-1.0.2.tar.gz", "yanked": false}], "1.0a1": [{"comment_text": "", "digests": {"md5": "46d1dcf129040b162875805e6176519b", "sha256": "16b124c9013f406812d1ea53524c6d061749f6f53256bdc292f954b6f0c3ca8f"}, "downloads": -1, "filename": "plone.staticresources-1.0a1.tar.gz", "has_sig": false, "md5_digest": "46d1dcf129040b162875805e6176519b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39852468, "upload_time": "2019-02-14T00:56:24", "upload_time_iso_8601": "2019-02-14T00:56:24.460622Z", "url": "https://files.pythonhosted.org/packages/f6/27/84040be717558c61dcf50cd9e8c8822685fa157cb6914ae2274b2d5324bf/plone.staticresources-1.0a1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "fa514be9de3ef4be314aa68455953a01", "sha256": "da943d54d3c270ef41754f685e8b5b9c0909ed565d5d2c0bd9ca6e64f03979e1"}, "downloads": -1, "filename": "plone.staticresources-1.1.0.tar.gz", "has_sig": false, "md5_digest": "fa514be9de3ef4be314aa68455953a01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39652587, "upload_time": "2019-06-23T01:11:08", "upload_time_iso_8601": "2019-06-23T01:11:08.453612Z", "url": "https://files.pythonhosted.org/packages/61/27/c9e122f8eec2f39be5ad9102c0499d50eb10aa04b525e4a716f4252587e0/plone.staticresources-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "e0db190b4e6e2c0b02e89e8050d25702", "sha256": "d7819bf31499f64d0a7cf29a7ec20e4373e645710e3029a74bf10b8d1e998123"}, "downloads": -1, "filename": "plone.staticresources-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0db190b4e6e2c0b02e89e8050d25702", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45696494, "upload_time": "2019-11-14T14:09:35", "upload_time_iso_8601": "2019-11-14T14:09:35.425268Z", "url": "https://files.pythonhosted.org/packages/5c/09/00dac1a8015b7df99149da9f138d97bcbc356558c904721b6941b6ba4199/plone.staticresources-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8687fa03eadd1d7deb13151777bfc2f4", "sha256": "42f5186fdcd10459d80085e53734712b447513b7f781805c78e8574b73cf0598"}, "downloads": -1, "filename": "plone.staticresources-1.2.0.tar.gz", "has_sig": false, "md5_digest": "8687fa03eadd1d7deb13151777bfc2f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42915738, "upload_time": "2019-11-14T14:09:58", "upload_time_iso_8601": "2019-11-14T14:09:58.791275Z", "url": "https://files.pythonhosted.org/packages/98/37/5f216af0d7f880d4bfb9c1aca4e9472258c980944ded7f02a62abddf6e46/plone.staticresources-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "cf89bc41951bfc9e53efdb1984ba971c", "sha256": "d3c72e30a5bc426062c400421d460059687416b7a3e29e817b1191553a6a6edd"}, "downloads": -1, "filename": "plone.staticresources-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf89bc41951bfc9e53efdb1984ba971c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45991949, "upload_time": "2020-01-13T02:42:26", "upload_time_iso_8601": "2020-01-13T02:42:26.174121Z", "url": "https://files.pythonhosted.org/packages/1d/a4/081dcfd720428fed0bc9685f06a7dbc45895881112174131703daf102cf8/plone.staticresources-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6eca32eed8c900bb8db2034d127d0e76", "sha256": "ffda71f582310645a923d193f58e5115b719b623d06352385e03263229508112"}, "downloads": -1, "filename": "plone.staticresources-1.2.1.tar.gz", "has_sig": false, "md5_digest": "6eca32eed8c900bb8db2034d127d0e76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43051642, "upload_time": "2020-01-13T02:43:38", "upload_time_iso_8601": "2020-01-13T02:43:38.896098Z", "url": "https://files.pythonhosted.org/packages/6b/5b/7c9ac5ca248b0047c91abc82eb3ba7fc3a387c235597b859832c86a974ee/plone.staticresources-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cf89bc41951bfc9e53efdb1984ba971c", "sha256": "d3c72e30a5bc426062c400421d460059687416b7a3e29e817b1191553a6a6edd"}, "downloads": -1, "filename": "plone.staticresources-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf89bc41951bfc9e53efdb1984ba971c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45991949, "upload_time": "2020-01-13T02:42:26", "upload_time_iso_8601": "2020-01-13T02:42:26.174121Z", "url": "https://files.pythonhosted.org/packages/1d/a4/081dcfd720428fed0bc9685f06a7dbc45895881112174131703daf102cf8/plone.staticresources-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6eca32eed8c900bb8db2034d127d0e76", "sha256": "ffda71f582310645a923d193f58e5115b719b623d06352385e03263229508112"}, "downloads": -1, "filename": "plone.staticresources-1.2.1.tar.gz", "has_sig": false, "md5_digest": "6eca32eed8c900bb8db2034d127d0e76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43051642, "upload_time": "2020-01-13T02:43:38", "upload_time_iso_8601": "2020-01-13T02:43:38.896098Z", "url": "https://files.pythonhosted.org/packages/6b/5b/7c9ac5ca248b0047c91abc82eb3ba7fc3a387c235597b859832c86a974ee/plone.staticresources-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:46 2020"}