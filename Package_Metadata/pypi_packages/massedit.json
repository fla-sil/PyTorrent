{"info": {"author": "J\u00e9r\u00f4me Lecomte", "author_email": "elmotec@gmx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development", "Topic :: Software Development :: Code Generators", "Topic :: Text Editors :: Text Processing", "Topic :: Text Processing :: Filters", "Topic :: Utilities"], "description": ".. image:: https://img.shields.io/pypi/v/massedit.svg\n    :target: https://pypi.python.org/pypi/massedit/\n    :alt: PyPi version\n\n.. image:: https://img.shields.io/pypi/pyversions/massedit.svg\n    :target: https://pypi.python.org/pypi/massedit/\n    :alt: Python compatibility\n\n.. image:: https://img.shields.io/travis/elmotec/massedit.svg?label=Travis\n    :target: https://travis-ci.org/elmotec/massedit\n    :alt: Travis status\n\n.. image:: https://img.shields.io/appveyor/ci/elmotec/massedit.svg?label=AppVeyor\n    :target: https://ci.appveyor.com/project/elmotec/massedit\n    :alt: AppVeyor status\n\n.. image:: https://img.shields.io/pypi/dm/massedit.svg\n    :alt: PyPi\n    :target: https://pypi.python.org/pypi/massedit\n\n.. image:: https://img.shields.io/librariesio/release/pypi/massedit.svg?label=libraries.io\n    :alt: Libraries.io dependency status for latest release\n    :target: https://libraries.io/pypi/massedit\n\n.. image:: https://coveralls.io/repos/elmotec/massedit/badge.svg\n    :target: https://coveralls.io/r/elmotec/massedit\n    :alt: Coverage\n\n.. image:: https://img.shields.io/codacy/grade/474b0af6853a4c5f8f9214d3220571f9.svg\n    :target: https://www.codacy.com/app/elmotec/massedit/dashboard\n    :alt: Codacy\n\n\n========\nmassedit\n========\n\n*formerly known as Python Mass Editor*\n\nImplements a python mass editor to process text files using Python\ncode. The modification(s) is (are) shown on stdout as a diff output. One\ncan then modify the target file(s) in place with the -w/--write option.\nThis is very similar to 2to3 tool that ships with Python 3.\n\n\n+--------------------------------------------------------------------------+\n| **WARNING**: A word of caution about the usage of ``eval()``             |\n+--------------------------------------------------------------------------+\n| This tool is useful as far as it goes but it does rely on the python     |\n| ``eval()`` function and does not check the code being executed.          |\n| **It is a major security risk** and one should not use this tool in a    |\n| production environment.                                                  |\n|                                                                          |\n| See `Ned Batchelder's article`_ for a thorough discussion of the dangers |\n| linked to ``eval()`` and ways to circumvent them. Note that None of the  |\n| counter-measure suggested in the article are implemented at this time.   |\n+--------------------------------------------------------------------------+\n\nUsage\n-----\n\nYou probably will need to know the basics of the `Python re module`_ (regular\nexpressions).\n\n::\n\n    usage: massedit.py [-h] [-V] [-w] [-v] [-e EXPRESSIONS] [-f FUNCTIONS]\n                       [-x EXECUTABLES] [-s START_DIRS] [-m MAX_DEPTH] [-o FILE]\n                       [-g FILE] [--encoding ENCODING] [--newline NEWLINE]\n                       [file pattern [file pattern ...]]\n\n    Python mass editor\n\n    positional arguments:\n      file pattern          shell-like file name patterns to process or - to read\n                            from stdin.\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -V, --version         show program's version number and exit\n      -w, --write           modify target file(s) in place. Shows diff otherwise.\n      -v, --verbose         increases log verbosity (can be specified multiple\n                            times)\n      -e EXPRESSIONS, --expression EXPRESSIONS\n                            Python expressions applied to target files. Use the\n                            line variable to reference the current line.\n      -f FUNCTIONS, --function FUNCTIONS\n                            Python function to apply to target file. Takes file\n                            content as input and yield lines. Specify function as\n                            [module]:?<function name>.\n      -x EXECUTABLES, --executable EXECUTABLES\n                            Python executable to apply to target file.\n      -s START_DIRS, --start START_DIRS\n                            Directory(ies) from which to look for targets.\n      -m MAX_DEPTH, --max-depth-level MAX_DEPTH\n                            Maximum depth when walking subdirectories.\n      -o FILE, --output FILE\n                            redirect output to a file\n      -g FILE, --generate FILE\n                            generate stub file suitable for -f option\n      --encoding ENCODING   Encoding of input and output files\n      --newline NEWLINE     Newline character for output files\n\n    Examples:\n    # Simple string substitution (-e). Will show a diff. No changes applied.\n    massedit.py -e \"re.sub('failIf', 'assertFalse', line)\" *.py\n\n    # File level modifications (-f). Overwrites the files in place (-w).\n    massedit.py -w -f fixer:fixit *.py\n\n    # Will change all test*.py in subdirectories of tests.\n    massedit.py -e \"re.sub('failIf', 'assertFalse', line)\" -s tests test*.py\n\n    # Will transform virtual methods (almost) to MOCK_METHOD suitable for gmock (see https://github.com/google/googletest).\n    massedit.py -e \"re.sub(r'\\s*virtual\\s+([\\w:<>,\\s&*]+)\\s+(\\w+)(\\([^\\)]*\\))\\s*((\\w+)*)(=\\s*0)?;', 'MOCK_METHOD(\\g<1>, \\g<2>, \\g<3>, (\\g<4>, override));', line)\" gmock_test.cpp\n\n\nIf massedit is installed as a package (from pypi for instance), one can interact with it as a command line tool:\n\n::\n\n  python -m massedit -e \"re.sub('assertEquals', 'assertEqual', line)\" test.py\n\n\nOr as a library (command line option above to be passed as kewyord arguments):\n\n::\n\n  >>> import massedit\n  >>> filenames = ['massedit.py']\n  >>> massedit.edit_files(filenames, [\"re.sub('Jerome', 'J.', line)\"])\n\n\nLastly, there is a convenient ``massedit.bat`` wrapper for Windows included in\nthe distribution.\n\n\nInstallation\n------------\n\nDownload ``massedit.py`` from ``http://github.com/elmotec/massedit`` or :\n\n::\n\n  pip install massedit\n\n\nPoor man source-to-source manipulation\n--------------------------------------\n\nI find myself using massedit mostly for source to source modification of\nlarge code bases like this:\n\nFirst create a ``fixer.py`` python module with the function that will\nprocess your source code. For instance, to add a header:\n\n::\n\n  def add_header(lines, file_name):\n      yield '// This is my header'  # will be the first line of the file.\n      for line in lines:\n          yield line\n\n\nAdds the location of ``fixer.py`` to your ``$PYTHONPATH``, then simply\ncall ``massedit.py`` like this:\n\n::\n\n  massedit.py -f fixer:add_header *.h\n\n\nYou can add the ``-s .`` option to process all the ``.h`` files reccursively.\n\n\nPlans\n-----\n\n- Add support for 3rd party tool (e.g. `autopep8`_) to process the files.\n- Add support for a file of expressions as an argument to allow multiple\n  modification at once.\n- Find a satisfactory way (ie. easy to use) to handle multiline regex as the\n  current version works on a line by line basis.\n\n\nRationale\n---------\n\n- I have a hard time practicing more than a few dialects of regular\n  expressions.\n- I need something portable to Windows without being bothered by eol.\n- I believe Python is the ideal tool to build something more powerful than\n  simple regex based substitutions.\n\n\nBackground\n----------\n\nI have been using runsed and checksed (from Unix Power Tools) for years and\ndid not find a good substitute under Windows until I came across Graham\nFawcett python recipe 437932_ on ActiveState. It inspired me to write the\nmassedit.\n\nThe core was fleshed up a little, and here we are. If you find it useful and\nenhance it please, do not forget to submit patches. Thanks!\n\nIf you are more interested in awk-like tool, you probably will find pyp_ a\nbetter alternative.\n\n\nLicense\n-------\n\nLicensed under the term of `MIT License`_. See attached file LICENSE.txt.\n\n\nChanges\n-------\n\n0.68.6 (2019-12-02)\n  Added support for Python 3.8, stdin input via - argument. Documented\n  regex to turn base classes into googlemock MOCK_METHOD.\n\n0.68.5 (2019-04-13)\n  Added --newline option to force newline output. Thanks @ALFNeT!\n\n0.68.4 (2017-10-24)\n  Fixed bug that would cause changes to be missed when the -w option is\n  ommited. Thanks @tgoodlet!\n\n0.68.3 (2017-09-20)\n  Added --generate option to quickly generate a fixer.py template file\n  to be modified to be used with -f fixer.fixit option. Added official\n  support for Python 3.6\n\n0.68.1 (2016-06-04)\n  Fixed encoding issues when processing non-ascii files.\n  Added --encoding option to force the value of the encoding if need be.\n  Listed support for Python 3.5\n\n0.67.1 (2015-06-28)\n  Documentation fixes.\n\n0.67 (2015-06-23)\n  Added file_name argument to processing functions.\n  Fixed incorrect closing of sys.stdout/stderr.\n  Improved diagnostic when the processing function does not take 2 arguments.\n  Swapped -v and -V option to be consistent with Python.\n  Pylint fixes.\n  Added support for Python 3.4.\n  Dropped support for Python 3.2.\n\n0.66 (2013-07-14)\n  Fixed lost executable bit with -f option (thanks myint).\n\n0.65 (2013-07-12)\n  Added -f option to execute code in a separate file/module. Added Travis continuous integration (thanks myint). Fixed python 2.7 support (thanks myint).\n\n0.64 (2013-06-01)\n  Fixed setup.py so that massedit installs as a script. Fixed eol issues (thanks myint).\n\n0.63 (2013-05-27)\n  Renamed to massedit. Previous version are still known as Python-Mass-Editor.\n\n0.62 (2013-04-11)\n  Fixed bug that caused an EditorError to be raised when the result of the\n  expression is an empty string.\n\n0.61 (2012-07-06)\n  Added massedit.edit_files function to ease usage as library instead of as\n  a command line tool (suggested by Maxim Veksler).\n\n0.60 (2012-07-04)\n  Treats arguments as patterns rather than files to ease processing of\n  multiple files in multiple subdirectories.  Added -s (start directory)\n  and -m (max depth) options.\n\n0.52 (2012-06-05)\n  Upgraded for python 3. Still compatible with python 2.7.\n\n0.51 (2012-05)\n  Initial release (Beta).\n\n\nContributor acknowledgement\n---------------------------\n\nhttps://github.com/myint, \nhttps://github.com/tgoodlet, \nhttps://github.com/ALFNeT\n\n\n\n.. _437932: http://code.activestate.com/recipes/437932-pyline-a-grep-like-sed-like-command-line-tool/\n.. _Python re module: http://docs.python.org/library/re.html\n.. _Pyp: http://code.google.com/p/pyp/\n.. _MIT License: http://en.wikipedia.org/wiki/MIT_License\n.. _autopep8: http://pypi.python.org/pypi/autopep8\n.. _Ned Batchelder's article: http://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/elmotec/massedit", "keywords": "sed editor stream python edit mass", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "massedit", "package_url": "https://pypi.org/project/massedit/", "platform": "", "project_url": "https://pypi.org/project/massedit/", "project_urls": {"Homepage": "http://github.com/elmotec/massedit"}, "release_url": "https://pypi.org/project/massedit/0.68.6/", "requires_dist": null, "requires_python": "", "summary": "Edit multiple files using Python text processing modules", "version": "0.68.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/massedit/\" rel=\"nofollow\"><img alt=\"PyPi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71694668c9b53dc49a3f9243a41ad3499a29dfe9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d617373656469742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/massedit/\" rel=\"nofollow\"><img alt=\"Python compatibility\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b14e2225f3f84dbcf4f2704a99450bcaa7a3b23/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d617373656469742e737667\"></a>\n<a href=\"https://travis-ci.org/elmotec/massedit\" rel=\"nofollow\"><img alt=\"Travis status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f18acc60ab7eb866e3a079352d244f7b89028811/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f656c6d6f7465632f6d617373656469742e7376673f6c6162656c3d547261766973\"></a>\n<a href=\"https://ci.appveyor.com/project/elmotec/massedit\" rel=\"nofollow\"><img alt=\"AppVeyor status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25acb923f952cc7bc65ed3232e65d40daf25db01/68747470733a2f2f696d672e736869656c64732e696f2f6170707665796f722f63692f656c6d6f7465632f6d617373656469742e7376673f6c6162656c3d4170705665796f72\"></a>\n<a href=\"https://pypi.python.org/pypi/massedit\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/166a003b4697814757044008c96c581f0cbdb0de/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f6d617373656469742e737667\"></a>\n<a href=\"https://libraries.io/pypi/massedit\" rel=\"nofollow\"><img alt=\"Libraries.io dependency status for latest release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d23c94c9a9220adb51707efd2638120fce9f13f0/68747470733a2f2f696d672e736869656c64732e696f2f6c6962726172696573696f2f72656c656173652f707970692f6d617373656469742e7376673f6c6162656c3d6c69627261726965732e696f\"></a>\n<a href=\"https://coveralls.io/r/elmotec/massedit\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/44a428da5ad65035f112681624cdd5989f020d1b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f656c6d6f7465632f6d617373656469742f62616467652e737667\"></a>\n<a href=\"https://www.codacy.com/app/elmotec/massedit/dashboard\" rel=\"nofollow\"><img alt=\"Codacy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ff5b81cede06fde7a8f42a6c16bff649ee43bd3c/68747470733a2f2f696d672e736869656c64732e696f2f636f646163792f67726164652f34373462306166363835336134633566386639323134643332323035373166392e737667\"></a>\n<div id=\"massedit\">\n<h2>massedit</h2>\n<p><em>formerly known as Python Mass Editor</em></p>\n<p>Implements a python mass editor to process text files using Python\ncode. The modification(s) is (are) shown on stdout as a diff output. One\ncan then modify the target file(s) in place with the -w/\u2013write option.\nThis is very similar to 2to3 tool that ships with Python 3.</p>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<tbody>\n<tr><td><strong>WARNING</strong>: A word of caution about the usage of <tt>eval()</tt></td>\n</tr>\n<tr><td><p>This tool is useful as far as it goes but it does rely on the python\n<tt>eval()</tt> function and does not check the code being executed.\n<strong>It is a major security risk</strong> and one should not use this tool in a\nproduction environment.</p>\n<p>See <a href=\"http://nedbatchelder.com/blog/201206/eval_really_is_dangerous.html\" rel=\"nofollow\">Ned Batchelder\u2019s article</a> for a thorough discussion of the dangers\nlinked to <tt>eval()</tt> and ways to circumvent them. Note that None of the\ncounter-measure suggested in the article are implemented at this time.</p>\n</td>\n</tr>\n</tbody>\n</table>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>You probably will need to know the basics of the <a href=\"http://docs.python.org/library/re.html\" rel=\"nofollow\">Python re module</a> (regular\nexpressions).</p>\n<pre>usage: massedit.py [-h] [-V] [-w] [-v] [-e EXPRESSIONS] [-f FUNCTIONS]\n                   [-x EXECUTABLES] [-s START_DIRS] [-m MAX_DEPTH] [-o FILE]\n                   [-g FILE] [--encoding ENCODING] [--newline NEWLINE]\n                   [file pattern [file pattern ...]]\n\nPython mass editor\n\npositional arguments:\n  file pattern          shell-like file name patterns to process or - to read\n                        from stdin.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -V, --version         show program's version number and exit\n  -w, --write           modify target file(s) in place. Shows diff otherwise.\n  -v, --verbose         increases log verbosity (can be specified multiple\n                        times)\n  -e EXPRESSIONS, --expression EXPRESSIONS\n                        Python expressions applied to target files. Use the\n                        line variable to reference the current line.\n  -f FUNCTIONS, --function FUNCTIONS\n                        Python function to apply to target file. Takes file\n                        content as input and yield lines. Specify function as\n                        [module]:?&lt;function name&gt;.\n  -x EXECUTABLES, --executable EXECUTABLES\n                        Python executable to apply to target file.\n  -s START_DIRS, --start START_DIRS\n                        Directory(ies) from which to look for targets.\n  -m MAX_DEPTH, --max-depth-level MAX_DEPTH\n                        Maximum depth when walking subdirectories.\n  -o FILE, --output FILE\n                        redirect output to a file\n  -g FILE, --generate FILE\n                        generate stub file suitable for -f option\n  --encoding ENCODING   Encoding of input and output files\n  --newline NEWLINE     Newline character for output files\n\nExamples:\n# Simple string substitution (-e). Will show a diff. No changes applied.\nmassedit.py -e \"re.sub('failIf', 'assertFalse', line)\" *.py\n\n# File level modifications (-f). Overwrites the files in place (-w).\nmassedit.py -w -f fixer:fixit *.py\n\n# Will change all test*.py in subdirectories of tests.\nmassedit.py -e \"re.sub('failIf', 'assertFalse', line)\" -s tests test*.py\n\n# Will transform virtual methods (almost) to MOCK_METHOD suitable for gmock (see https://github.com/google/googletest).\nmassedit.py -e \"re.sub(r'\\s*virtual\\s+([\\w:&lt;&gt;,\\s&amp;*]+)\\s+(\\w+)(\\([^\\)]*\\))\\s*((\\w+)*)(=\\s*0)?;', 'MOCK_METHOD(\\g&lt;1&gt;, \\g&lt;2&gt;, \\g&lt;3&gt;, (\\g&lt;4&gt;, override));', line)\" gmock_test.cpp\n</pre>\n<p>If massedit is installed as a package (from pypi for instance), one can interact with it as a command line tool:</p>\n<pre>python -m massedit -e \"re.sub('assertEquals', 'assertEqual', line)\" test.py\n</pre>\n<p>Or as a library (command line option above to be passed as kewyord arguments):</p>\n<pre>&gt;&gt;&gt; import massedit\n&gt;&gt;&gt; filenames = ['massedit.py']\n&gt;&gt;&gt; massedit.edit_files(filenames, [\"re.sub('Jerome', 'J.', line)\"])\n</pre>\n<p>Lastly, there is a convenient <tt>massedit.bat</tt> wrapper for Windows included in\nthe distribution.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>Download <tt>massedit.py</tt> from <tt><span class=\"pre\">http://github.com/elmotec/massedit</span></tt> or :</p>\n<pre>pip install massedit\n</pre>\n</div>\n<div id=\"poor-man-source-to-source-manipulation\">\n<h3>Poor man source-to-source manipulation</h3>\n<p>I find myself using massedit mostly for source to source modification of\nlarge code bases like this:</p>\n<p>First create a <tt>fixer.py</tt> python module with the function that will\nprocess your source code. For instance, to add a header:</p>\n<pre>def add_header(lines, file_name):\n    yield '// This is my header'  # will be the first line of the file.\n    for line in lines:\n        yield line\n</pre>\n<p>Adds the location of <tt>fixer.py</tt> to your <tt>$PYTHONPATH</tt>, then simply\ncall <tt>massedit.py</tt> like this:</p>\n<pre>massedit.py -f fixer:add_header *.h\n</pre>\n<p>You can add the <tt><span class=\"pre\">-s</span> .</tt> option to process all the <tt>.h</tt> files reccursively.</p>\n</div>\n<div id=\"plans\">\n<h3>Plans</h3>\n<ul>\n<li>Add support for 3rd party tool (e.g. <a href=\"http://pypi.python.org/pypi/autopep8\" rel=\"nofollow\">autopep8</a>) to process the files.</li>\n<li>Add support for a file of expressions as an argument to allow multiple\nmodification at once.</li>\n<li>Find a satisfactory way (ie. easy to use) to handle multiline regex as the\ncurrent version works on a line by line basis.</li>\n</ul>\n</div>\n<div id=\"rationale\">\n<h3>Rationale</h3>\n<ul>\n<li>I have a hard time practicing more than a few dialects of regular\nexpressions.</li>\n<li>I need something portable to Windows without being bothered by eol.</li>\n<li>I believe Python is the ideal tool to build something more powerful than\nsimple regex based substitutions.</li>\n</ul>\n</div>\n<div id=\"background\">\n<h3>Background</h3>\n<p>I have been using runsed and checksed (from Unix Power Tools) for years and\ndid not find a good substitute under Windows until I came across Graham\nFawcett python recipe <a href=\"http://code.activestate.com/recipes/437932-pyline-a-grep-like-sed-like-command-line-tool/\" rel=\"nofollow\">437932</a> on ActiveState. It inspired me to write the\nmassedit.</p>\n<p>The core was fleshed up a little, and here we are. If you find it useful and\nenhance it please, do not forget to submit patches. Thanks!</p>\n<p>If you are more interested in awk-like tool, you probably will find <a href=\"http://code.google.com/p/pyp/\" rel=\"nofollow\">pyp</a> a\nbetter alternative.</p>\n</div>\n<div id=\"license\">\n<h3>License</h3>\n<p>Licensed under the term of <a href=\"http://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT License</a>. See attached file LICENSE.txt.</p>\n</div>\n<div id=\"changes\">\n<h3>Changes</h3>\n<dl>\n<dt>0.68.6 (2019-12-02)</dt>\n<dd>Added support for Python 3.8, stdin input via - argument. Documented\nregex to turn base classes into googlemock MOCK_METHOD.</dd>\n<dt>0.68.5 (2019-04-13)</dt>\n<dd>Added \u2013newline option to force newline output. Thanks @ALFNeT!</dd>\n<dt>0.68.4 (2017-10-24)</dt>\n<dd>Fixed bug that would cause changes to be missed when the -w option is\nommited. Thanks @tgoodlet!</dd>\n<dt>0.68.3 (2017-09-20)</dt>\n<dd>Added \u2013generate option to quickly generate a fixer.py template file\nto be modified to be used with -f fixer.fixit option. Added official\nsupport for Python 3.6</dd>\n<dt>0.68.1 (2016-06-04)</dt>\n<dd>Fixed encoding issues when processing non-ascii files.\nAdded \u2013encoding option to force the value of the encoding if need be.\nListed support for Python 3.5</dd>\n<dt>0.67.1 (2015-06-28)</dt>\n<dd>Documentation fixes.</dd>\n<dt>0.67 (2015-06-23)</dt>\n<dd>Added file_name argument to processing functions.\nFixed incorrect closing of sys.stdout/stderr.\nImproved diagnostic when the processing function does not take 2 arguments.\nSwapped -v and -V option to be consistent with Python.\nPylint fixes.\nAdded support for Python 3.4.\nDropped support for Python 3.2.</dd>\n<dt>0.66 (2013-07-14)</dt>\n<dd>Fixed lost executable bit with -f option (thanks myint).</dd>\n<dt>0.65 (2013-07-12)</dt>\n<dd>Added -f option to execute code in a separate file/module. Added Travis continuous integration (thanks myint). Fixed python 2.7 support (thanks myint).</dd>\n<dt>0.64 (2013-06-01)</dt>\n<dd>Fixed setup.py so that massedit installs as a script. Fixed eol issues (thanks myint).</dd>\n<dt>0.63 (2013-05-27)</dt>\n<dd>Renamed to massedit. Previous version are still known as Python-Mass-Editor.</dd>\n<dt>0.62 (2013-04-11)</dt>\n<dd>Fixed bug that caused an EditorError to be raised when the result of the\nexpression is an empty string.</dd>\n<dt>0.61 (2012-07-06)</dt>\n<dd>Added massedit.edit_files function to ease usage as library instead of as\na command line tool (suggested by Maxim Veksler).</dd>\n<dt>0.60 (2012-07-04)</dt>\n<dd>Treats arguments as patterns rather than files to ease processing of\nmultiple files in multiple subdirectories.  Added -s (start directory)\nand -m (max depth) options.</dd>\n<dt>0.52 (2012-06-05)</dt>\n<dd>Upgraded for python 3. Still compatible with python 2.7.</dd>\n<dt>0.51 (2012-05)</dt>\n<dd>Initial release (Beta).</dd>\n</dl>\n</div>\n<div id=\"contributor-acknowledgement\">\n<h3>Contributor acknowledgement</h3>\n<p><a href=\"https://github.com/myint\" rel=\"nofollow\">https://github.com/myint</a>,\n<a href=\"https://github.com/tgoodlet\" rel=\"nofollow\">https://github.com/tgoodlet</a>,\n<a href=\"https://github.com/ALFNeT\" rel=\"nofollow\">https://github.com/ALFNeT</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6232558, "releases": {"0.63": [{"comment_text": "", "digests": {"md5": "a897e3aa3652dc4772ad86ff1dfc94ea", "sha256": "e30a051aec19c40cc3bab58e78de20226f007931e9899d5f0756c84dcf1f6dca"}, "downloads": -1, "filename": "massedit-0.63.zip", "has_sig": false, "md5_digest": "a897e3aa3652dc4772ad86ff1dfc94ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10190, "upload_time": "2013-05-28T01:39:05", "upload_time_iso_8601": "2013-05-28T01:39:05.604212Z", "url": "https://files.pythonhosted.org/packages/c2/a9/7f3541ae1c92e09775faf079dc3cec4607053c9ec533228481b1468da97c/massedit-0.63.zip", "yanked": false}], "0.64": [{"comment_text": "", "digests": {"md5": "2c4106b55199e8d6707338e49a5cfb79", "sha256": "c0f4ec75401486e221915e0d920196d972c77ca67f53e334f79e46911a430e84"}, "downloads": -1, "filename": "massedit-0.64.zip", "has_sig": false, "md5_digest": "2c4106b55199e8d6707338e49a5cfb79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14758, "upload_time": "2013-06-01T14:36:17", "upload_time_iso_8601": "2013-06-01T14:36:17.585026Z", "url": "https://files.pythonhosted.org/packages/8a/43/0c05350e42372e4a42a764e6f021422da96fc450727d8e9bb5dfb65e1ff6/massedit-0.64.zip", "yanked": false}], "0.65": [{"comment_text": "", "digests": {"md5": "396cfd75e94039a0f3926323b927dc0f", "sha256": "597b954aada7610b3423e64debe518dfbebe2056617fe57f789b27418c4b5d73"}, "downloads": -1, "filename": "massedit-0.65.zip", "has_sig": false, "md5_digest": "396cfd75e94039a0f3926323b927dc0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22653, "upload_time": "2013-07-13T02:33:28", "upload_time_iso_8601": "2013-07-13T02:33:28.491980Z", "url": "https://files.pythonhosted.org/packages/00/c6/ecbbe8d887487291e1786e4a93e5e9bbc6dc98011e59ea593f20ff157318/massedit-0.65.zip", "yanked": false}], "0.66": [{"comment_text": "", "digests": {"md5": "d096eb2442184a98bf576c99fa60d471", "sha256": "382a93953911851a9df073a229ba40d27c23983a147c268efc86d093eb0a39a1"}, "downloads": -1, "filename": "massedit-0.66.zip", "has_sig": false, "md5_digest": "d096eb2442184a98bf576c99fa60d471", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23010, "upload_time": "2013-07-14T23:14:38", "upload_time_iso_8601": "2013-07-14T23:14:38.544659Z", "url": "https://files.pythonhosted.org/packages/49/48/14abbfd87d89f1f61f579000d79ef9bac94498b2ae42ddef65a6702217ae/massedit-0.66.zip", "yanked": false}], "0.67": [{"comment_text": "", "digests": {"md5": "331d7d3fdc2666aaaf235e33bc066b50", "sha256": "4cccf3f5a5198924c009c0d52fc16d7390b2515330a0db2b07154a269251372a"}, "downloads": -1, "filename": "massedit-0.67.win-amd64.exe", "has_sig": false, "md5_digest": "331d7d3fdc2666aaaf235e33bc066b50", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 280622, "upload_time": "2015-06-24T01:23:23", "upload_time_iso_8601": "2015-06-24T01:23:23.635638Z", "url": "https://files.pythonhosted.org/packages/db/49/b1bea63ce1f3ab5231d4935e463aed54108c14ff0bbea3dcd015d967ed20/massedit-0.67.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d3bd3a177e0733f6d4f415101321615", "sha256": "6612a3427fe9dd49f931c9699d58308614fb8ac952b2d3d678e902ab3a8f371b"}, "downloads": -1, "filename": "massedit-0.67.zip", "has_sig": false, "md5_digest": "8d3bd3a177e0733f6d4f415101321615", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25015, "upload_time": "2015-06-24T01:23:19", "upload_time_iso_8601": "2015-06-24T01:23:19.468023Z", "url": "https://files.pythonhosted.org/packages/0b/47/51a705941158fabb78761f38ba2c7f336659faa03bc18414fcfdc6e100cf/massedit-0.67.zip", "yanked": false}], "0.67.1": [{"comment_text": "", "digests": {"md5": "442c8ebafe2554e64af557a66422b133", "sha256": "831afab36d2e7b63792d3f7519506088a917a517754f372506e8e6db0ff4bc50"}, "downloads": -1, "filename": "massedit-0.67.1.win-amd64.exe", "has_sig": false, "md5_digest": "442c8ebafe2554e64af557a66422b133", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 281825, "upload_time": "2015-06-29T02:31:07", "upload_time_iso_8601": "2015-06-29T02:31:07.359761Z", "url": "https://files.pythonhosted.org/packages/11/c5/8279b059acbba14cb4b24f1dca8a543314a54a83a292290a69d5bd7bf8a3/massedit-0.67.1.win-amd64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d6f65651bc1e6e647830b56d01ee869", "sha256": "d055ad595c27c58d9d4352ee52f16e1a68340e731976bbe0f6036dddd5be1d3a"}, "downloads": -1, "filename": "massedit-0.67.1.zip", "has_sig": false, "md5_digest": "2d6f65651bc1e6e647830b56d01ee869", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25731, "upload_time": "2015-06-29T02:31:03", "upload_time_iso_8601": "2015-06-29T02:31:03.305193Z", "url": "https://files.pythonhosted.org/packages/1d/00/9b79214ab12bf17c62ddde5b66f75b91d52f4fa2891c8ea09558a50bb491/massedit-0.67.1.zip", "yanked": false}], "0.68.1": [{"comment_text": "", "digests": {"md5": "50c455244136e6750e2f5d5d4949a658", "sha256": "61351560f009038a9de9d6b69c64d500ce3666893a216b8c45f151478e2e08fd"}, "downloads": -1, "filename": "massedit-0.68.1.zip", "has_sig": false, "md5_digest": "50c455244136e6750e2f5d5d4949a658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27902, "upload_time": "2016-06-05T00:25:46", "upload_time_iso_8601": "2016-06-05T00:25:46.545394Z", "url": "https://files.pythonhosted.org/packages/7b/84/96a8b87a4f240b986ebceda59a5ee3fae55bd7c4cd9da8ffdf58daa3122e/massedit-0.68.1.zip", "yanked": false}], "0.68.2": [{"comment_text": "", "digests": {"md5": "2c66b3c46a35663a31321f4c0fd4ece4", "sha256": "19d6a2831b726cb476c20e7e632fe8a7f409b5981096bacdc057b08645ded59b"}, "downloads": -1, "filename": "massedit-0.68.2.tar.gz", "has_sig": false, "md5_digest": "2c66b3c46a35663a31321f4c0fd4ece4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21687, "upload_time": "2017-09-20T23:21:52", "upload_time_iso_8601": "2017-09-20T23:21:52.959485Z", "url": "https://files.pythonhosted.org/packages/e2/fc/5b870c39799026732e14caf48543dba1dec9e5061f995fed04f486d805f7/massedit-0.68.2.tar.gz", "yanked": false}], "0.68.3": [{"comment_text": "", "digests": {"md5": "4a7f008b9a1e9c54ab4c89a72d441425", "sha256": "6ad0f3bb84d5f311c8bddb9a7c691382364be3a3927e15ee4305f47c88287e45"}, "downloads": -1, "filename": "massedit-0.68.3.tar.gz", "has_sig": false, "md5_digest": "4a7f008b9a1e9c54ab4c89a72d441425", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21734, "upload_time": "2017-09-20T23:36:55", "upload_time_iso_8601": "2017-09-20T23:36:55.952367Z", "url": "https://files.pythonhosted.org/packages/54/e0/3573d5fcd2fa2c98ea5bfff17439513526c0be3e38e1f0c2f73018ebe5a9/massedit-0.68.3.tar.gz", "yanked": false}], "0.68.4": [{"comment_text": "", "digests": {"md5": "032939fab3a89720f61a9ca89392b1d0", "sha256": "0b7c146b8fee2328969d42dcdc7132c78df2d15878d9173c1fc59bcadfbbfd6e"}, "downloads": -1, "filename": "massedit-0.68.4.tar.gz", "has_sig": false, "md5_digest": "032939fab3a89720f61a9ca89392b1d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22250, "upload_time": "2017-10-25T02:10:27", "upload_time_iso_8601": "2017-10-25T02:10:27.937038Z", "url": "https://files.pythonhosted.org/packages/bb/9e/db1c72d178fd9b9bf3252deac63b9822423f8a4390e697d20173311891dc/massedit-0.68.4.tar.gz", "yanked": false}], "0.68.5": [{"comment_text": "", "digests": {"md5": "b957cfa79470dad5be967ec369d3b28a", "sha256": "5957d820d009f8d147ea658dfc7ed737cc372d66e1dba9f3290a620f401eca57"}, "downloads": -1, "filename": "massedit-0.68.5.tar.gz", "has_sig": false, "md5_digest": "b957cfa79470dad5be967ec369d3b28a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18781, "upload_time": "2019-04-13T13:08:51", "upload_time_iso_8601": "2019-04-13T13:08:51.375376Z", "url": "https://files.pythonhosted.org/packages/99/33/9743b63e1937ada6381c17a96f914d26aae0935411b4020916e05f5aa423/massedit-0.68.5.tar.gz", "yanked": false}], "0.68.6": [{"comment_text": "", "digests": {"md5": "1a8b17de58566da96d3d810e9171bb44", "sha256": "897c747d67689ec273333b8f0911b5b82eb1e6bf0fd40ee7450fd8058f52d1a7"}, "downloads": -1, "filename": "massedit-0.68.6.tar.gz", "has_sig": false, "md5_digest": "1a8b17de58566da96d3d810e9171bb44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19490, "upload_time": "2019-12-03T02:51:23", "upload_time_iso_8601": "2019-12-03T02:51:23.295785Z", "url": "https://files.pythonhosted.org/packages/b8/32/7c6f64bedfd9394e7d07e89f2645a626ae980c8422c811fc4b20f2fb90ca/massedit-0.68.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1a8b17de58566da96d3d810e9171bb44", "sha256": "897c747d67689ec273333b8f0911b5b82eb1e6bf0fd40ee7450fd8058f52d1a7"}, "downloads": -1, "filename": "massedit-0.68.6.tar.gz", "has_sig": false, "md5_digest": "1a8b17de58566da96d3d810e9171bb44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19490, "upload_time": "2019-12-03T02:51:23", "upload_time_iso_8601": "2019-12-03T02:51:23.295785Z", "url": "https://files.pythonhosted.org/packages/b8/32/7c6f64bedfd9394e7d07e89f2645a626ae980c8422c811fc4b20f2fb90ca/massedit-0.68.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:29 2020"}