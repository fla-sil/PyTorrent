{"info": {"author": "Zope Corporation and contributors", "author_email": "zope-dev@zope.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Topic :: System :: Monitoring"], "description": ".. contents::\n\nIntroduction\n============\n\nThis package enable to monitoring of Zope 2 instance from the command line. It plugs zc.monitor (http://pypi.python.org/pypi/zc.monitor) and zc.z3monitor (http://pypi.python.org/pypi/zc.z3monitor) in Zope 2.\nzc.monitor use zc.ngi server and define another thread to handle monitoring. This way you should still be able to monitor your application even if the\nHTTPServer is hanging.\n\nZope config\n===========\n\nAdd this to your ``zope.conf`` to enable the zc.ngi server on the loopback interface on port 8888::\n\n    <product-config five.z2monitor>\n        bind 127.0.0.1:8888\n    </product-config>\n\n\nProbes\n======\n\nThis package has been tested with probes coming from different packages:\n\n  - zc.z3monitor\n  - Products.ZNagios\n  - zc.monitorcache\n  - zc.monitorlogstats\n  - ztfy.monitor\n\nTo register your own probe, just define a new utility providing the ``zc.z3monitor.interfaces.IZ3MonitorPlugin`` interface. Like this::\n\n  <utility\n     component=\".zc_uptime\"\n     provides=\"zc.z3monitor.interfaces.IZ3MonitorPlugin\"\n     name=\"uptime\" />\n\nand the component should look like this::\n\n  def zc_uptime(connection, database='main'):\n      \"\"\"uptime of the zope instance in seconds\"\"\"\n      app = App()\n      elapsed = time.time() - app.Control_Panel.process_start\n      print >> connection, elapsed\n      app._p_jar.close()\n\nZODB connection is always the first parameter. You can add your own parameters after.\n\nOnce you start your instance you should see something like::\n\n  INFO zc.ngi.async.server listening on ('127.0.0.1', 8888)\n\nThe ngi server is started and you can look up values with netcat for example::\n\n  echo 'uptime' | nc -i 1 localhost 8888\n\nplone.recipe.zope2instance\n==========================\n\nIf you configure your zope instance using buildout and the plone.recipe.zope2instance recipe (http://pypi.python.org/pypi/plone.recipe.zope2instance).\nTo define the zc.z2monitor host and port use the ``zope-conf-additional`` option like this::\n\n  [client1]\n  recipe = plone.recipe.zope2instance\n  http-address = 8080\n  user = admin:admin\n  eggs =\n    ${buildout:eggs}\n  zcml =\n    ${buildout:zcml}\n  zope-conf-additional =\n    <product-config five.z2monitor>\n      bind 127.0.0.1:8888\n    </product-config>\n\n\nOnce the instance is running, you will be able to ask the available probes from the\ncommand line using::\n\n  bin/instance monitor dbinfo main\n\nwhich is the equivalent to::\n\n  echo 'dbinfo main' | nc -i 1 <zc.monitor host> <zc.monitor port>\n\nTo know the registered probes, Use this command::\n\n  bin/instance monitor help\n\nChangelog\n=========\n\n0.2 (2012-11-05)\n----------------\n\n- Add entry point for plone.recipe.zope2instance\n\n- More documentation\n\n\n0.1 (2012-11-05)\n----------------\n\n- Initial implementation", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/five.monitor", "keywords": "Zope zc.monitor monitoring", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "five.z2monitor", "package_url": "https://pypi.org/project/five.z2monitor/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/five.z2monitor/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/five.monitor"}, "release_url": "https://pypi.org/project/five.z2monitor/0.2/", "requires_dist": null, "requires_python": null, "summary": "Enable zc.monitor with Zope 2", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id3\" rel=\"nofollow\">Introduction</a></li>\n<li><a href=\"#zope-config\" id=\"id4\" rel=\"nofollow\">Zope config</a></li>\n<li><a href=\"#probes\" id=\"id5\" rel=\"nofollow\">Probes</a></li>\n<li><a href=\"#plone-recipe-zope2instance\" id=\"id6\" rel=\"nofollow\">plone.recipe.zope2instance</a></li>\n<li><a href=\"#changelog\" id=\"id7\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id8\" rel=\"nofollow\">0.2 (2012-11-05)</a></li>\n<li><a href=\"#id2\" id=\"id9\" rel=\"nofollow\">0.1 (2012-11-05)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Introduction</a></h2>\n<p>This package enable to monitoring of Zope 2 instance from the command line. It plugs zc.monitor (<a href=\"http://pypi.python.org/pypi/zc.monitor\" rel=\"nofollow\">http://pypi.python.org/pypi/zc.monitor</a>) and zc.z3monitor (<a href=\"http://pypi.python.org/pypi/zc.z3monitor\" rel=\"nofollow\">http://pypi.python.org/pypi/zc.z3monitor</a>) in Zope 2.\nzc.monitor use zc.ngi server and define another thread to handle monitoring. This way you should still be able to monitor your application even if the\nHTTPServer is hanging.</p>\n</div>\n<div id=\"zope-config\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Zope config</a></h2>\n<p>Add this to your <tt>zope.conf</tt> to enable the zc.ngi server on the loopback interface on port 8888:</p>\n<pre>&lt;product-config five.z2monitor&gt;\n    bind 127.0.0.1:8888\n&lt;/product-config&gt;\n</pre>\n</div>\n<div id=\"probes\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Probes</a></h2>\n<p>This package has been tested with probes coming from different packages:</p>\n<blockquote>\n<ul>\n<li>zc.z3monitor</li>\n<li>Products.ZNagios</li>\n<li>zc.monitorcache</li>\n<li>zc.monitorlogstats</li>\n<li>ztfy.monitor</li>\n</ul>\n</blockquote>\n<p>To register your own probe, just define a new utility providing the <tt>zc.z3monitor.interfaces.IZ3MonitorPlugin</tt> interface. Like this:</p>\n<pre>&lt;utility\n   component=\".zc_uptime\"\n   provides=\"zc.z3monitor.interfaces.IZ3MonitorPlugin\"\n   name=\"uptime\" /&gt;\n</pre>\n<p>and the component should look like this:</p>\n<pre>def zc_uptime(connection, database='main'):\n    \"\"\"uptime of the zope instance in seconds\"\"\"\n    app = App()\n    elapsed = time.time() - app.Control_Panel.process_start\n    print &gt;&gt; connection, elapsed\n    app._p_jar.close()\n</pre>\n<p>ZODB connection is always the first parameter. You can add your own parameters after.</p>\n<p>Once you start your instance you should see something like:</p>\n<pre>INFO zc.ngi.async.server listening on ('127.0.0.1', 8888)\n</pre>\n<p>The ngi server is started and you can look up values with netcat for example:</p>\n<pre>echo 'uptime' | nc -i 1 localhost 8888\n</pre>\n</div>\n<div id=\"plone-recipe-zope2instance\">\n<h2><a href=\"#id6\" rel=\"nofollow\">plone.recipe.zope2instance</a></h2>\n<p>If you configure your zope instance using buildout and the plone.recipe.zope2instance recipe (<a href=\"http://pypi.python.org/pypi/plone.recipe.zope2instance\" rel=\"nofollow\">http://pypi.python.org/pypi/plone.recipe.zope2instance</a>).\nTo define the zc.z2monitor host and port use the <tt><span class=\"pre\">zope-conf-additional</span></tt> option like this:</p>\n<pre>[client1]\nrecipe = plone.recipe.zope2instance\nhttp-address = 8080\nuser = admin:admin\neggs =\n  ${buildout:eggs}\nzcml =\n  ${buildout:zcml}\nzope-conf-additional =\n  &lt;product-config five.z2monitor&gt;\n    bind 127.0.0.1:8888\n  &lt;/product-config&gt;\n</pre>\n<p>Once the instance is running, you will be able to ask the available probes from the\ncommand line using:</p>\n<pre>bin/instance monitor dbinfo main\n</pre>\n<p>which is the equivalent to:</p>\n<pre>echo 'dbinfo main' | nc -i 1 &lt;zc.monitor host&gt; &lt;zc.monitor port&gt;\n</pre>\n<p>To know the registered probes, Use this command:</p>\n<pre>bin/instance monitor help\n</pre>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id8\" rel=\"nofollow\">0.2 (2012-11-05)</a></h3>\n<ul>\n<li>Add entry point for plone.recipe.zope2instance</li>\n<li>More documentation</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id9\" rel=\"nofollow\">0.1 (2012-11-05)</a></h3>\n<ul>\n<li>Initial implementation</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 792009, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5f2a47afb04e4fe6dd4cd3e008392b48", "sha256": "c1b0b2ef8602d189167ae9c76ace566ebf8445bbb02fcd69b6cadcccf2e171b6"}, "downloads": -1, "filename": "five.z2monitor-0.1.tar.gz", "has_sig": false, "md5_digest": "5f2a47afb04e4fe6dd4cd3e008392b48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3138, "upload_time": "2012-11-05T16:15:20", "upload_time_iso_8601": "2012-11-05T16:15:20.462234Z", "url": "https://files.pythonhosted.org/packages/3d/7a/75556ab9e83cf0a2f54849d68acb84c6e69d53acbc3695fb6f588237cfb2/five.z2monitor-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "41dac2e37e2c69ff5439aaf03bbe5e99", "sha256": "48db4bbd685e39ee1531dd318421989ae0e83600d246a799608f55164ce76e2b"}, "downloads": -1, "filename": "five.z2monitor-0.2.tar.gz", "has_sig": false, "md5_digest": "41dac2e37e2c69ff5439aaf03bbe5e99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5308, "upload_time": "2012-11-05T17:26:10", "upload_time_iso_8601": "2012-11-05T17:26:10.410453Z", "url": "https://files.pythonhosted.org/packages/3b/93/1505e8b8fac9c787439d79c04a49715f3821f2a158f9d91d8bad71374417/five.z2monitor-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "41dac2e37e2c69ff5439aaf03bbe5e99", "sha256": "48db4bbd685e39ee1531dd318421989ae0e83600d246a799608f55164ce76e2b"}, "downloads": -1, "filename": "five.z2monitor-0.2.tar.gz", "has_sig": false, "md5_digest": "41dac2e37e2c69ff5439aaf03bbe5e99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5308, "upload_time": "2012-11-05T17:26:10", "upload_time_iso_8601": "2012-11-05T17:26:10.410453Z", "url": "https://files.pythonhosted.org/packages/3b/93/1505e8b8fac9c787439d79c04a49715f3821f2a158f9d91d8bad71374417/five.z2monitor-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:04 2020"}