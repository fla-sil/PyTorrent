{"info": {"author": "Noah Kantrowitz", "author_email": "noah@coderanger.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Win32 (MS Windows)", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Flask-Zen\n=========\n\nFlask-Zen is an extension to `Flask`_ that allows you to use `PyZen`_ via\n`Flask-Script`_ commands. Both a simple test runner command and the standard\nPyZen auto-runner are provided. You can install the requirements from PyPI\nwith `easy_install` or `pip` or download them by hand.\n\nInstallation\n------------\n\nInstall the extension with one of the following commands::\n\n    $ easy_install Flask-Zen\n\nor alternatively if you have `pip` installed::\n\n    $ pip install Flask-Zen\n\n.. _Flask: http://flask.pocoo.org/\n.. _PyZen: http://pypi.python.org/pypi/PyZen/\n.. _Flask-Script: http://pypi.python.org/pypi/Flask-Script\n\nConfiguration\n-------------\nPyZen exposes two Flask-Script commands: ``Test`` and ``ZenTest``. To\nconfigure both::\n    \n    from flaskext.script import Manager\n    from flaskext.zen import Test, ZenTest\n    \n    manager = Manager(app)\n    \n    manager.add_command('test', Test())\n    manager.add_command('zen', ZenTest())\n    \n    if __name__ == '__main__':\n        manager.run()\n    \n\nAny of the command-line options below can be overridden using a keyword\nargument to the ``Test`` or ``ZenTest`` constructor::\n    \n    manager.add_command('zen', ZenTest(nocolor=True, ui='none'))\n    \n\nUsage\n-----\nThe ``Test`` command will run a single test run and exit. The ``ZenTest``\ncommand will run the normal PyZen continuous tester.\n\n``-s``, ``--start-dir`` : *default: location of manage.py*\n    Base directory for test discovery.\n    \n``-p``, ``--pattern`` : *default: \\*/tests/\\*.py;\\*/tests.py*\n    Semicolon separated file globs to use for loading tests.\n\n``-v``, ``--verbosity`` : *default: 1*\n    Test runner verbosity.\n\n``--nocolor`` : *flag, default: False*\n    Disable colored output.\n\n``-u``, ``--ui`` : *only for ZenTest, default: autodetect*\n    Force the use of a specific UI module. Available options are ``win32``,\n    ``osx``, ``linux``, and ``none``.", "description_content_type": null, "docs_url": "https://pythonhosted.org/Flask-Zen/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/coderanger/flask-zen", "keywords": "test unittest continuous flask", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "Flask-Zen", "package_url": "https://pypi.org/project/Flask-Zen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Flask-Zen/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/coderanger/flask-zen"}, "release_url": "https://pypi.org/project/Flask-Zen/0.2/", "requires_dist": null, "requires_python": null, "summary": "Flask-Script commands to integrate with PyZen.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Flask-Zen is an extension to <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a> that allows you to use <a href=\"http://pypi.python.org/pypi/PyZen/\" rel=\"nofollow\">PyZen</a> via\n<a href=\"http://pypi.python.org/pypi/Flask-Script\" rel=\"nofollow\">Flask-Script</a> commands. Both a simple test runner command and the standard\nPyZen auto-runner are provided. You can install the requirements from PyPI\nwith <cite>easy_install</cite> or <cite>pip</cite> or download them by hand.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install the extension with one of the following commands:</p>\n<pre>$ easy_install Flask-Zen\n</pre>\n<p>or alternatively if you have <cite>pip</cite> installed:</p>\n<pre>$ pip install Flask-Zen\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>PyZen exposes two Flask-Script commands: <tt>Test</tt> and <tt>ZenTest</tt>. To\nconfigure both:</p>\n<pre>from flaskext.script import Manager\nfrom flaskext.zen import Test, ZenTest\n\nmanager = Manager(app)\n\nmanager.add_command('test', Test())\nmanager.add_command('zen', ZenTest())\n\nif __name__ == '__main__':\n    manager.run()\n</pre>\n<p>Any of the command-line options below can be overridden using a keyword\nargument to the <tt>Test</tt> or <tt>ZenTest</tt> constructor:</p>\n<pre>manager.add_command('zen', ZenTest(nocolor=True, ui='none'))\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The <tt>Test</tt> command will run a single test run and exit. The <tt>ZenTest</tt>\ncommand will run the normal PyZen continuous tester.</p>\n<dl>\n<dt><tt><span class=\"pre\">-s</span></tt>, <tt><span class=\"pre\">--start-dir</span></tt> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\"><em>default: location of manage.py</em></span></dt>\n<dd>Base directory for test discovery.</dd>\n<dt><tt><span class=\"pre\">-p</span></tt>, <tt><span class=\"pre\">--pattern</span></tt> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\"><em>default: */tests/*.py;*/tests.py</em></span></dt>\n<dd>Semicolon separated file globs to use for loading tests.</dd>\n<dt><tt><span class=\"pre\">-v</span></tt>, <tt><span class=\"pre\">--verbosity</span></tt> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\"><em>default: 1</em></span></dt>\n<dd>Test runner verbosity.</dd>\n<dt><tt><span class=\"pre\">--nocolor</span></tt> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\"><em>flag, default: False</em></span></dt>\n<dd>Disable colored output.</dd>\n<dt><tt><span class=\"pre\">-u</span></tt>, <tt><span class=\"pre\">--ui</span></tt> <span class=\"classifier-delimiter\">:</span> <span class=\"classifier\"><em>only for ZenTest, default: autodetect</em></span></dt>\n<dd>Force the use of a specific UI module. Available options are <tt>win32</tt>,\n<tt>osx</tt>, <tt>linux</tt>, and <tt>none</tt>.</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 784356, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "2f1eda45269318b54d3da3f50d432748", "sha256": "dc21db2412d712c7483f5ce6a327dbc40a81358243b3f4ea5834fa041ad75e12"}, "downloads": -1, "filename": "Flask-Zen-0.1.tar.gz", "has_sig": false, "md5_digest": "2f1eda45269318b54d3da3f50d432748", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48788, "upload_time": "2010-08-15T02:01:43", "upload_time_iso_8601": "2010-08-15T02:01:43.269573Z", "url": "https://files.pythonhosted.org/packages/b0/5c/6278f8511bbc8e84312d602a49d1892255d8751810852ffe2aadf717855e/Flask-Zen-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1daf3a576cad14da8e0e638c82675f80", "sha256": "84dfaaad6b23e3192ca24f1afde6f25d0a1476495938032d41b0701dadf1477e"}, "downloads": -1, "filename": "Flask-Zen-0.2.tar.gz", "has_sig": false, "md5_digest": "1daf3a576cad14da8e0e638c82675f80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49188, "upload_time": "2010-08-16T00:25:17", "upload_time_iso_8601": "2010-08-16T00:25:17.408979Z", "url": "https://files.pythonhosted.org/packages/a1/21/9080f2c2f3a26a4ea90a9dd8dc78a7da3ecae5ddba76dbf6422b35d7f27d/Flask-Zen-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1daf3a576cad14da8e0e638c82675f80", "sha256": "84dfaaad6b23e3192ca24f1afde6f25d0a1476495938032d41b0701dadf1477e"}, "downloads": -1, "filename": "Flask-Zen-0.2.tar.gz", "has_sig": false, "md5_digest": "1daf3a576cad14da8e0e638c82675f80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49188, "upload_time": "2010-08-16T00:25:17", "upload_time_iso_8601": "2010-08-16T00:25:17.408979Z", "url": "https://files.pythonhosted.org/packages/a1/21/9080f2c2f3a26a4ea90a9dd8dc78a7da3ecae5ddba76dbf6422b35d7f27d/Flask-Zen-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:05 2020"}