{"info": {"author": "Arcensoth", "author_email": "arcensoth@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# Minecraft Command Query\nMinecraft command query program. Inspired by the in-game help command, with added features like multiple version support and expandable regex search.\n\n[![package-badge]](https://pypi.python.org/pypi/mccq/)\n[![version-badge]](https://pypi.python.org/pypi/mccq/)\n\n## Installation\nRequires Python 3.6+, recommended with [virtualenv](https://virtualenv.pypa.io/en/stable/) or the like. Just install with `pip`:\n\n```\npip install mccq\n```\n\n## Database setup\nMCCQ requires access to generated server files (namely `commands.json`), and so is compatible with [Minecraft snapshot 18w01a](https://minecraft.net/en-us/article/minecraft-snapshot-18w01a) and up.\n\nEach version directory must remain as generated by the server, and all version directories should be in the same root database directory:\n\n```\ndatabase_root/\n  18w01a/\n    generated/\n      reports/\n        commands.json\n  18w02a/\n    generated/\n      reports/\n        commands.json\n```\n\nThese files can be loaded either from the local filesystem or [the internet](https://github.com/Arcensoth/mcdata).\n\n## Basic usage\nEnter the CLI (command line interface) by providing it a default version `-s` to query and a database location `-d` where version directories are located:\n```bash\npython -m mccq -s 18w01a -d \"https://raw.githubusercontent.com/Arcensoth/mcdata\"\n```\n\nStart with a basic command:\n```bash\n> say\n```\n\nThis produces some output:\n```bash\n# 18w01a\nsay <message>\n```\nWhich will generally outline all possible variations of the command for the specified version(s).\n\nTry something a little more involved:\n```bash\n> effect\n# 18w01a\neffect clear|give ...\n```\nThe command is rolled out until a choice can be made, which saves on vertical space and is often more readable than assigning a separate line to each possibility.\n\n## Program options\nVarious flags and options can be written **before the command query** to augment behaviour.\n\nNormally several subcommands/arguments are condensed to one line, but `-e` can be used to forcibly expand the command:\n```bash\n> -e effect\n# 18w01a\neffect clear <targets>\neffect clear <targets> <effect>\neffect give <targets> <effect>\neffect give <targets> <effect> <seconds>\neffect give <targets> <effect> <seconds> <amplifier>\neffect give <targets> <effect> <seconds> <amplifier> <hideParticles>\n```\nBe warned that this can cause a large amount of output for commands with many subcommands/arguments.\n\nSearch for specific subcommands/arguments:\n```bash\n> tag targets add\n# 18w01a\ntag <targets> add <name>\n```\nNotice how arguments are shown between `<>` but can be searched by name just like subcommands.\n\nSpeaking of arguments, use `-t` to render their types:\n```bash\n> -t tag targets add\n# 18w01a\ntag <targets: entity> add <name: string>\n```\n\nUse `-v VERSION` to query a particular version:\n```bash\n> -v 18w02a execute\n# 18w02a\nexecute align|anchored|as|at|facing|if|in|positioned|rotated|run|store|unless ...\n```\n\nRepeat `-v VERSION` to query several versions at once:\n```bash\n> -v 18w01a -v 18w02a execute\n# 18w01a\nexecute align|as|at|if|offset|run|store|unless ...\n# 18w02a\nexecute align|anchored|as|at|facing|if|in|positioned|rotated|run|store|unless ...\n```\n\nFor more precise control than `-e` can offer, provide `-c CAPACITY` to define a threshold for expansion:\n```bash\n> -c 5 time set\n# 18w01a\ntime set day\ntime set midnight\ntime set night\ntime set noon\ntime set <time>\n> -c 4 time set\n# 18w01a\ntime set day|midnight|night|noon|<time>\n```\nThis allows a command to expand so long as the total number of subcommands/arguments it contains does not exceed the given threshold.\n\n## Dynamic search\nEach whitespace-separated search term of the provided query is treated as a regex pattern:\n```bash\n> execute a.*\n# 18w01a\nexecute align <axes> -> execute\nexecute as <targets> -> execute\nexecute at <targets> -> execute\n```\n\nAnd so any combination of subcommands/arguments can be flexibly queried:\n```bash\n> t.* targets\n# 18w01a\ntag <targets> add <name>\ntag <targets> list\ntag <targets> remove <name>\nteleport <targets> <destination>|<location> ...\ntellraw <targets> <message>\ntitle <targets> actionbar|clear|reset|subtitle|times|title ...\n```\n\nSearch terms are case-insensitive:\n```bash\n> gamerule .*mob.*\n# 18w01a\ngamerule doMobLoot\ngamerule doMobLoot <value>\ngamerule doMobSpawning\ngamerule doMobSpawning <value>\ngamerule mobGriefing\ngamerule mobGriefing <value>\n```\n\nSpecial case: a single `.` is treated as a wildcard and will match any term:\n```bash\n> clone . . . masked\n# 18w01a\nclone <begin> <end> <destination> masked\nclone <begin> <end> <destination> masked force|move|normal\n```\nWhich is a convenient way of quickly diving into the command.\n\n[package-badge]: https://img.shields.io/pypi/v/mccq.svg\n[version-badge]: https://img.shields.io/pypi/pyversions/mccq.svg\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Arcensoth/mccq", "keywords": "minecraft command query help utility", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "mccq", "package_url": "https://pypi.org/project/mccq/", "platform": "", "project_url": "https://pypi.org/project/mccq/", "project_urls": {"Homepage": "https://github.com/Arcensoth/mccq"}, "release_url": "https://pypi.org/project/mccq/1.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Minecraft command query program. Inspired by the in-game help command, with added features like multiple version support and expandable regex search.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Minecraft Command Query</h1>\n<p>Minecraft command query program. Inspired by the in-game help command, with added features like multiple version support and expandable regex search.</p>\n<p><a href=\"https://pypi.python.org/pypi/mccq/\" rel=\"nofollow\"><img alt=\"package-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fc20ef6e26f61a42d5bc0003430c027378e513b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6363712e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/mccq/\" rel=\"nofollow\"><img alt=\"version-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f124e646a23e354c4594adbc186705c447d55f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6d6363712e737667\"></a></p>\n<h2>Installation</h2>\n<p>Requires Python 3.6+, recommended with <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a> or the like. Just install with <code>pip</code>:</p>\n<pre><code>pip install mccq\n</code></pre>\n<h2>Database setup</h2>\n<p>MCCQ requires access to generated server files (namely <code>commands.json</code>), and so is compatible with <a href=\"https://minecraft.net/en-us/article/minecraft-snapshot-18w01a\" rel=\"nofollow\">Minecraft snapshot 18w01a</a> and up.</p>\n<p>Each version directory must remain as generated by the server, and all version directories should be in the same root database directory:</p>\n<pre><code>database_root/\n  18w01a/\n    generated/\n      reports/\n        commands.json\n  18w02a/\n    generated/\n      reports/\n        commands.json\n</code></pre>\n<p>These files can be loaded either from the local filesystem or <a href=\"https://github.com/Arcensoth/mcdata\" rel=\"nofollow\">the internet</a>.</p>\n<h2>Basic usage</h2>\n<p>Enter the CLI (command line interface) by providing it a default version <code>-s</code> to query and a database location <code>-d</code> where version directories are located:</p>\n<pre>python -m mccq -s 18w01a -d <span class=\"s2\">\"https://raw.githubusercontent.com/Arcensoth/mcdata\"</span>\n</pre>\n<p>Start with a basic command:</p>\n<pre>&gt; say\n</pre>\n<p>This produces some output:</p>\n<pre><span class=\"c1\"># 18w01a</span>\nsay &lt;message&gt;\n</pre>\n<p>Which will generally outline all possible variations of the command for the specified version(s).</p>\n<p>Try something a little more involved:</p>\n<pre>&gt; effect\n<span class=\"c1\"># 18w01a</span>\neffect clear<span class=\"p\">|</span>give ...\n</pre>\n<p>The command is rolled out until a choice can be made, which saves on vertical space and is often more readable than assigning a separate line to each possibility.</p>\n<h2>Program options</h2>\n<p>Various flags and options can be written <strong>before the command query</strong> to augment behaviour.</p>\n<p>Normally several subcommands/arguments are condensed to one line, but <code>-e</code> can be used to forcibly expand the command:</p>\n<pre>&gt; -e effect\n<span class=\"c1\"># 18w01a</span>\neffect clear &lt;targets&gt;\neffect clear &lt;targets&gt; &lt;effect&gt;\neffect give &lt;targets&gt; &lt;effect&gt;\neffect give &lt;targets&gt; &lt;effect&gt; &lt;seconds&gt;\neffect give &lt;targets&gt; &lt;effect&gt; &lt;seconds&gt; &lt;amplifier&gt;\neffect give &lt;targets&gt; &lt;effect&gt; &lt;seconds&gt; &lt;amplifier&gt; &lt;hideParticles&gt;\n</pre>\n<p>Be warned that this can cause a large amount of output for commands with many subcommands/arguments.</p>\n<p>Search for specific subcommands/arguments:</p>\n<pre>&gt; tag targets add\n<span class=\"c1\"># 18w01a</span>\ntag &lt;targets&gt; add &lt;name&gt;\n</pre>\n<p>Notice how arguments are shown between <code>&lt;&gt;</code> but can be searched by name just like subcommands.</p>\n<p>Speaking of arguments, use <code>-t</code> to render their types:</p>\n<pre>&gt; -t tag targets add\n<span class=\"c1\"># 18w01a</span>\ntag &lt;targets: entity&gt; add &lt;name: string&gt;\n</pre>\n<p>Use <code>-v VERSION</code> to query a particular version:</p>\n<pre>&gt; -v 18w02a execute\n<span class=\"c1\"># 18w02a</span>\nexecute align<span class=\"p\">|</span>anchored<span class=\"p\">|</span>as<span class=\"p\">|</span>at<span class=\"p\">|</span>facing<span class=\"p\">|</span><span class=\"k\">if</span><span class=\"p\">|</span>in<span class=\"p\">|</span>positioned<span class=\"p\">|</span>rotated<span class=\"p\">|</span>run<span class=\"p\">|</span>store<span class=\"p\">|</span>unless ...\n</pre>\n<p>Repeat <code>-v VERSION</code> to query several versions at once:</p>\n<pre>&gt; -v 18w01a -v 18w02a execute\n<span class=\"c1\"># 18w01a</span>\nexecute align<span class=\"p\">|</span>as<span class=\"p\">|</span>at<span class=\"p\">|</span><span class=\"k\">if</span><span class=\"p\">|</span>offset<span class=\"p\">|</span>run<span class=\"p\">|</span>store<span class=\"p\">|</span>unless ...\n<span class=\"c1\"># 18w02a</span>\nexecute align<span class=\"p\">|</span>anchored<span class=\"p\">|</span>as<span class=\"p\">|</span>at<span class=\"p\">|</span>facing<span class=\"p\">|</span><span class=\"k\">if</span><span class=\"p\">|</span>in<span class=\"p\">|</span>positioned<span class=\"p\">|</span>rotated<span class=\"p\">|</span>run<span class=\"p\">|</span>store<span class=\"p\">|</span>unless ...\n</pre>\n<p>For more precise control than <code>-e</code> can offer, provide <code>-c CAPACITY</code> to define a threshold for expansion:</p>\n<pre>&gt; -c <span class=\"m\">5</span> <span class=\"nb\">time</span> <span class=\"nb\">set</span>\n<span class=\"c1\"># 18w01a</span>\n<span class=\"nb\">time</span> <span class=\"nb\">set</span> day\n<span class=\"nb\">time</span> <span class=\"nb\">set</span> midnight\n<span class=\"nb\">time</span> <span class=\"nb\">set</span> night\n<span class=\"nb\">time</span> <span class=\"nb\">set</span> noon\n<span class=\"nb\">time</span> <span class=\"nb\">set</span> &lt;time&gt;\n&gt; -c <span class=\"m\">4</span> <span class=\"nb\">time</span> <span class=\"nb\">set</span>\n<span class=\"c1\"># 18w01a</span>\n<span class=\"nb\">time</span> <span class=\"nb\">set</span> day<span class=\"p\">|</span>midnight<span class=\"p\">|</span>night<span class=\"p\">|</span>noon<span class=\"p\">|</span>&lt;time&gt;\n</pre>\n<p>This allows a command to expand so long as the total number of subcommands/arguments it contains does not exceed the given threshold.</p>\n<h2>Dynamic search</h2>\n<p>Each whitespace-separated search term of the provided query is treated as a regex pattern:</p>\n<pre>&gt; execute a.*\n<span class=\"c1\"># 18w01a</span>\nexecute align &lt;axes&gt; -&gt; execute\nexecute as &lt;targets&gt; -&gt; execute\nexecute at &lt;targets&gt; -&gt; execute\n</pre>\n<p>And so any combination of subcommands/arguments can be flexibly queried:</p>\n<pre>&gt; t.* targets\n<span class=\"c1\"># 18w01a</span>\ntag &lt;targets&gt; add &lt;name&gt;\ntag &lt;targets&gt; list\ntag &lt;targets&gt; remove &lt;name&gt;\nteleport &lt;targets&gt; &lt;destination&gt;<span class=\"p\">|</span>&lt;location&gt; ...\ntellraw &lt;targets&gt; &lt;message&gt;\ntitle &lt;targets&gt; actionbar<span class=\"p\">|</span>clear<span class=\"p\">|</span>reset<span class=\"p\">|</span>subtitle<span class=\"p\">|</span>times<span class=\"p\">|</span>title ...\n</pre>\n<p>Search terms are case-insensitive:</p>\n<pre>&gt; gamerule .*mob.*\n<span class=\"c1\"># 18w01a</span>\ngamerule doMobLoot\ngamerule doMobLoot &lt;value&gt;\ngamerule doMobSpawning\ngamerule doMobSpawning &lt;value&gt;\ngamerule mobGriefing\ngamerule mobGriefing &lt;value&gt;\n</pre>\n<p>Special case: a single <code>.</code> is treated as a wildcard and will match any term:</p>\n<pre>&gt; clone . . . masked\n<span class=\"c1\"># 18w01a</span>\nclone &lt;begin&gt; &lt;end&gt; &lt;destination&gt; masked\nclone &lt;begin&gt; &lt;end&gt; &lt;destination&gt; masked force<span class=\"p\">|</span>move<span class=\"p\">|</span>normal\n</pre>\n<p>Which is a convenient way of quickly diving into the command.</p>\n\n          </div>"}, "last_serial": 4513075, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9b83c25b9642524b6690ad249b8bc57e", "sha256": "ff98b8f3f2acca065564a8f97d4ce1ba792598a7da1a2c078916307e7e9e6c89"}, "downloads": -1, "filename": "mccq-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9b83c25b9642524b6690ad249b8bc57e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17239, "upload_time": "2018-07-13T02:36:10", "upload_time_iso_8601": "2018-07-13T02:36:10.696113Z", "url": "https://files.pythonhosted.org/packages/45/41/9635a91716affbd5a4bbd146f88374daf21f7ce0b5f0c40034c3167cf92c/mccq-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5e96d55395a306a0b80e0a82de6e4f2", "sha256": "e58e091b7e534e0f56613d1da790356951eaa723a9e3b775ae624c4d1ca1dcf0"}, "downloads": -1, "filename": "mccq-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f5e96d55395a306a0b80e0a82de6e4f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 11822, "upload_time": "2018-07-13T02:36:11", "upload_time_iso_8601": "2018-07-13T02:36:11.726877Z", "url": "https://files.pythonhosted.org/packages/54/d2/c6a27bacb210d3d83e7f58a0e3070bd5ce5314a17c19df6b89c75d5aeac3/mccq-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "f5ab9440491749a8701293dc8e1f29c8", "sha256": "ab1197aa36dccee3045bfdb600b1f07c493384b3f5263fa0bc2837b3b71e0d17"}, "downloads": -1, "filename": "mccq-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "f5ab9440491749a8701293dc8e1f29c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17396, "upload_time": "2018-07-13T03:09:46", "upload_time_iso_8601": "2018-07-13T03:09:46.163023Z", "url": "https://files.pythonhosted.org/packages/6a/0f/ba53b9409b998e7282c6df65e75863bbad5117d399c47d6597fb45b18794/mccq-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10d740aae982bd6e4b805fb8d0d71f5c", "sha256": "bbb1cb05057e098837da07dd1b0e1f51d78b919fcea0bb33c4f5665e1e2f4252"}, "downloads": -1, "filename": "mccq-1.0.1.tar.gz", "has_sig": false, "md5_digest": "10d740aae982bd6e4b805fb8d0d71f5c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12063, "upload_time": "2018-07-13T03:09:47", "upload_time_iso_8601": "2018-07-13T03:09:47.333603Z", "url": "https://files.pythonhosted.org/packages/0b/a0/c3a02e6f7bb37fc0398f29427aa44f0af0f8aa19bbb231ade92b5c28bb09/mccq-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "071147cf1ef12e21c62989c03064db33", "sha256": "abfad271f10b3a77149276024de35f82b56732df280f206335a15a539f3f5c54"}, "downloads": -1, "filename": "mccq-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "071147cf1ef12e21c62989c03064db33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17400, "upload_time": "2018-11-21T15:29:41", "upload_time_iso_8601": "2018-11-21T15:29:41.966376Z", "url": "https://files.pythonhosted.org/packages/f9/6b/f517a39126424af1e9fea52536b063268afcac07e2d00ff487b4adc8d537/mccq-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ba658800cf9990b51adf5ef48cdd0df", "sha256": "13c29a494f0c467fe6cbd0d3be02e2dfdc9bcf9d1edeb5c1bb259cb742c44db3"}, "downloads": -1, "filename": "mccq-1.0.2.tar.gz", "has_sig": false, "md5_digest": "1ba658800cf9990b51adf5ef48cdd0df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12074, "upload_time": "2018-11-21T15:29:43", "upload_time_iso_8601": "2018-11-21T15:29:43.581580Z", "url": "https://files.pythonhosted.org/packages/67/f5/bc206c34e413a6359643cee0a54668ef29bcd12e61b4cace0c3d97802258/mccq-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "071147cf1ef12e21c62989c03064db33", "sha256": "abfad271f10b3a77149276024de35f82b56732df280f206335a15a539f3f5c54"}, "downloads": -1, "filename": "mccq-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "071147cf1ef12e21c62989c03064db33", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17400, "upload_time": "2018-11-21T15:29:41", "upload_time_iso_8601": "2018-11-21T15:29:41.966376Z", "url": "https://files.pythonhosted.org/packages/f9/6b/f517a39126424af1e9fea52536b063268afcac07e2d00ff487b4adc8d537/mccq-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ba658800cf9990b51adf5ef48cdd0df", "sha256": "13c29a494f0c467fe6cbd0d3be02e2dfdc9bcf9d1edeb5c1bb259cb742c44db3"}, "downloads": -1, "filename": "mccq-1.0.2.tar.gz", "has_sig": false, "md5_digest": "1ba658800cf9990b51adf5ef48cdd0df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12074, "upload_time": "2018-11-21T15:29:43", "upload_time_iso_8601": "2018-11-21T15:29:43.581580Z", "url": "https://files.pythonhosted.org/packages/67/f5/bc206c34e413a6359643cee0a54668ef29bcd12e61b4cace0c3d97802258/mccq-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:59 2020"}