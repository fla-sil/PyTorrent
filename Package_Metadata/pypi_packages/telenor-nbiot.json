{"info": {"author": "Exploratory Engineering", "author_email": "ee@telenordigital.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# nbiot-python\n[![Travis-CI](https://api.travis-ci.com/telenordigital/nbiot-python.svg)](https://travis-ci.com/telenordigital/nbiot-python)\n\nNBIoT-Python provides a Python client for the REST API for Telenor NB-IoT.\n\n## Configuration\n\nThe configuration file is located at `${HOME}/.telenor-nbiot`. The file is a simple\nlist of key/value pairs. Additional values are ignored. Comments must start\nwith a `#`:\n\n    #\n    # This is the URL of the Telenor NB-IoT REST API. The default value is\n    # https://api.nbiot.telenor.io and can usually be omitted.\n    address=https://api.nbiot.telenor.io\n\n    #\n    # This is the API token. Create new token by logging in to the Telenor NB-IoT\n    # front-end at https://nbiot.engineering and create a new token there.\n    token=<your api token goes here>\n\n\nThe configuration file settings can be overridden by setting the environment\nvariables `TELENOR_NBIOT_ADDRESS` and `TELENOR_NBIOT_TOKEN`. If you only use environment variables\nthe configuration file can be ignored.  Finally, there is a Client constructor that\naccepts the address and token directly.\n\n## Updating resources\n\nThe various `Client.update*` methods work via HTTP PATCH, which means they will only modify or set fields, not delete them.  There are special `Client.delete*tag` methods for deleting tags.\n\n# Sample code\n\n```python\nfrom nbiot import nbiot\n\nclient = nbiot.Client()\nstream = await client.collection_output_stream('<YOUR_COLLECTION_ID>')\nwhile True:\n\ttry:\n\t\tmsg = await stream.recv()\n\texcept nbiot.OutputStreamClosed:\n\t\tbreak\n\tprint(msg.payload)\n```\n\n# Development\n\nDevelopment is done using [Pipenv](https://docs.pipenv.org/).  Run `pipenv sync --dev` to install all dependencies.\n\nBecause Python has not properly solved dependency management yet, dependencies must be be repeated in [setup.py](setup.py) under the `install_requires` entry.\n\n## Testing\n\nTests are written using [pytest](https://pytest.org/).  Run `pipenv run pytest` to run all the tests.\n\n## Deployment\n\nTo build and upload a new version to PyPI, make sure that you are using Python 3 and run\n\n```bash\npython setup.py sdist\npython setup.py bdist_wheel\ntwine upload dist/*          # `pip install twine` to get this tool\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://nbiot.engineering/", "keywords": "nbiot iot", "license": "", "maintainer": "", "maintainer_email": "", "name": "telenor-nbiot", "package_url": "https://pypi.org/project/telenor-nbiot/", "platform": "", "project_url": "https://pypi.org/project/telenor-nbiot/", "project_urls": {"Homepage": "https://nbiot.engineering/", "Source": "https://github.com/telenordigital/nbiot-python/"}, "release_url": "https://pypi.org/project/telenor-nbiot/0.3/", "requires_dist": ["requests (>=2.20.0)", "websockets"], "requires_python": ">=3.7", "summary": "Telenor NB-IoT client", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # nbiot-python<br>[![Travis-CI](https://api.travis-ci.com/telenordigital/nbiot-python.svg)](https://travis-ci.com/telenordigital/nbiot-python)<br><br>NBIoT-Python provides a Python client for the REST API for Telenor NB-IoT.<br><br>## Configuration<br><br>The configuration file is located at `${HOME}/.telenor-nbiot`. The file is a simple<br>list of key/value pairs. Additional values are ignored. Comments must start<br>with a `#`:<br><br>    #<br>    # This is the URL of the Telenor NB-IoT REST API. The default value is<br>    # https://api.nbiot.telenor.io and can usually be omitted.<br>    address=https://api.nbiot.telenor.io<br><br>    #<br>    # This is the API token. Create new token by logging in to the Telenor NB-IoT<br>    # front-end at https://nbiot.engineering and create a new token there.<br>    token=&lt;your api token goes here&gt;<br><br><br>The configuration file settings can be overridden by setting the environment<br>variables `TELENOR_NBIOT_ADDRESS` and `TELENOR_NBIOT_TOKEN`. If you only use environment variables<br>the configuration file can be ignored.  Finally, there is a Client constructor that<br>accepts the address and token directly.<br><br>## Updating resources<br><br>The various `Client.update*` methods work via HTTP PATCH, which means they will only modify or set fields, not delete them.  There are special `Client.delete*tag` methods for deleting tags.<br><br># Sample code<br><br>```python<br>from nbiot import nbiot<br><br>client = nbiot.Client()<br>stream = await client.collection_output_stream('&lt;YOUR_COLLECTION_ID&gt;')<br>while True:<br>\ttry:<br>\t\tmsg = await stream.recv()<br>\texcept nbiot.OutputStreamClosed:<br>\t\tbreak<br>\tprint(msg.payload)<br>```<br><br># Development<br><br>Development is done using [Pipenv](https://docs.pipenv.org/).  Run `pipenv sync --dev` to install all dependencies.<br><br>Because Python has not properly solved dependency management yet, dependencies must be be repeated in [setup.py](setup.py) under the `install_requires` entry.<br><br>## Testing<br><br>Tests are written using [pytest](https://pytest.org/).  Run `pipenv run pytest` to run all the tests.<br><br>## Deployment<br><br>To build and upload a new version to PyPI, make sure that you are using Python 3 and run<br><br>```bash<br>python setup.py sdist<br>python setup.py bdist_wheel<br>twine upload dist/*          # `pip install twine` to get this tool<br>```<br><br><br>\n          </div>"}, "last_serial": 5207494, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "76699385fc7c94e7625d953fb022d74d", "sha256": "b70340c8094a7f0965088f647cc10f9855188fb72d985ca0a76f564a9aee14d3"}, "downloads": -1, "filename": "telenor_nbiot-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "76699385fc7c94e7625d953fb022d74d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10491, "upload_time": "2019-01-09T16:21:50", "upload_time_iso_8601": "2019-01-09T16:21:50.627077Z", "url": "https://files.pythonhosted.org/packages/93/ed/922c367d79de80ba2ed9997a1266c40f2355abef95a8eef713f3f8ba3d60/telenor_nbiot-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "119ad846dc2a8f2566cee02fac42af06", "sha256": "dc71b1540a89ef0894817968ec2a84d7d9e857016d5daa766cbaacfbcf2f85b8"}, "downloads": -1, "filename": "telenor-nbiot-0.2.tar.gz", "has_sig": false, "md5_digest": "119ad846dc2a8f2566cee02fac42af06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 8474, "upload_time": "2019-01-09T16:21:51", "upload_time_iso_8601": "2019-01-09T16:21:51.914556Z", "url": "https://files.pythonhosted.org/packages/8a/4e/bbe6e4e3be7eef2e8d617dbf9bf775da9aaf3afc706cd057cc91129531ec/telenor-nbiot-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "2188275bb4ea5328eaac2e88c6dd6e99", "sha256": "783617d71fd5b770fa58be7efcb0a2c83cfca1b71bdae566a90a0ac6bbc3317f"}, "downloads": -1, "filename": "telenor_nbiot-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2188275bb4ea5328eaac2e88c6dd6e99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10198, "upload_time": "2019-04-30T09:58:47", "upload_time_iso_8601": "2019-04-30T09:58:47.974784Z", "url": "https://files.pythonhosted.org/packages/66/80/a03d6d677a6d7410f78530ed970d9950b2f836c57a9c80f815d3eced4e5e/telenor_nbiot-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71d5d327fafbf8136965dc9c4b5c7b89", "sha256": "618498a1b381cd7703e519970ff66ac9512f02b9cf8c002a2fa3cd1d22090ab3"}, "downloads": -1, "filename": "telenor-nbiot-0.3.tar.gz", "has_sig": false, "md5_digest": "71d5d327fafbf8136965dc9c4b5c7b89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11082, "upload_time": "2019-04-30T09:58:57", "upload_time_iso_8601": "2019-04-30T09:58:57.162785Z", "url": "https://files.pythonhosted.org/packages/af/f7/f6311b5acecf54ccb1873aa87d7a5c0a72d0ed9771325bb38641b6323849/telenor-nbiot-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2188275bb4ea5328eaac2e88c6dd6e99", "sha256": "783617d71fd5b770fa58be7efcb0a2c83cfca1b71bdae566a90a0ac6bbc3317f"}, "downloads": -1, "filename": "telenor_nbiot-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2188275bb4ea5328eaac2e88c6dd6e99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 10198, "upload_time": "2019-04-30T09:58:47", "upload_time_iso_8601": "2019-04-30T09:58:47.974784Z", "url": "https://files.pythonhosted.org/packages/66/80/a03d6d677a6d7410f78530ed970d9950b2f836c57a9c80f815d3eced4e5e/telenor_nbiot-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71d5d327fafbf8136965dc9c4b5c7b89", "sha256": "618498a1b381cd7703e519970ff66ac9512f02b9cf8c002a2fa3cd1d22090ab3"}, "downloads": -1, "filename": "telenor-nbiot-0.3.tar.gz", "has_sig": false, "md5_digest": "71d5d327fafbf8136965dc9c4b5c7b89", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11082, "upload_time": "2019-04-30T09:58:57", "upload_time_iso_8601": "2019-04-30T09:58:57.162785Z", "url": "https://files.pythonhosted.org/packages/af/f7/f6311b5acecf54ccb1873aa87d7a5c0a72d0ed9771325bb38641b6323849/telenor-nbiot-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:52 2020"}