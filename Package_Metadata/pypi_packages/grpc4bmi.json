{"info": {"author": "Gijs van den Oord", "author_email": "g.vandenoord@esciencecenter.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Utilities"], "description": "[![DOI](https://zenodo.org/badge/130237165.svg)](https://zenodo.org/badge/latestdoi/130237165)\n[![Build Status](https://travis-ci.org/eWaterCycle/grpc4bmi.svg?branch=master)](https://travis-ci.org/eWaterCycle/grpc4bmi)\n[![Documentation Status](https://readthedocs.org/projects/grpc4bmi/badge/?version=latest)](https://grpc4bmi.readthedocs.io/en/latest/?badge=latest)\n[![Quality Gate Status](https://sonarcloud.io/api/project_badges/measure?project=grpc4bmi&metric=alert_status)](https://sonarcloud.io/dashboard?id=grpc4bmi)\n[![Coverage](https://sonarcloud.io/api/project_badges/measure?project=grpc4bmi&metric=coverage)](https://sonarcloud.io/dashboard?id=grpc4bmi)\n\n# grpc4bmi\n\n## Purpose\n\nThis software allows you to wrap your BMI implementation (https://github.com/csdms/bmi) in a server process and communicate with it via the included python client. The communication is serialized to protocol buffers by GRPC (https://grpc.io/) and occurs over network ports.\n\n## Installation\n\nOptionally, create your virtual environment and activate it, Then, run\n```\npip install grpc4bmi\n```\non the client (python) side. If your server model is implemented in Python, do the same in the server environment (e.g. docker container). If the model is implemented in R, run instead\n```bash\npip install grpc4bmi[R]\n```\nin the server environment. For bleeding edge version from GitHub use\n```bash\npip install git+https://github.com/eWaterCycle/grpc4bmi.git#egg=grpc4bmi\n```\nFinally if the model is implemented in C or C++, clone this git repo and run\n```bash\nmake ; make install\n```\nin the cpp folder.\n\n## Usage\n\n### Model written in Python\nFor inspiration look at the example in the test directory. To start a server process that allows calls to your BMI implementation, type\n```bash\nrun-bmi-server --name <PACKAGE>.<MODULE>.<CLASS> --port <PORT> --path <PATH>\n```\nwhere ```<PACKAGE>, <MODULE>``` are the python package and module containing your implementation, ```<CLASS>``` is your \nbmi model class name, ```<PORT>``` is any available port on the host system, and optionally ```<PATH>``` denotes an \nadditional path that should be added to the system path to make your implementation work. The name option above is \noptional, and if not provided the script will look at the environment variables ```BMI_PACKAGE```, ```BMI_MODULE``` and \n```BMI_CLASS```. Similarly, the port can be defined by the environment variable ```BMI_PORT```.\nThis software assumes that your implementation constructor has no parameters.\n\n### Model written in C/C++ (beta)\nCreate an executable along the lines of cpp/run-bmi-server.cc. You can copy the file and replace the function\n```C++\nBmi* create_model_instance()\n{\n    /* Return your new BMI instance pointer here... */\n}\n```\nwith the instantiation of your model BMI. The model needs to implement the csdms BMI for C, but you may also implement our more object-oriented C++ interface [BmiCppExtension](https://github.com/eWaterCycle/grpc4bmi/blob/master/cpp/bmi_cpp_extension.h).\n\n### Model written in R\nThe grpc4bmi Python package can also run BMI models written in R if the model is a subclass of [AbstractBmi](https://github.com/eWaterCycle/bmi-r/blob/master/R/abstract-bmi.R#L9)\nSee https://github.com/eWaterCycle/bmi-r for instruction on R and Docker.\n\nRun the R model a server with\n```bash\nrun-bmi-server --lang R [--path <R file with BMI model>] --name [<PACKAGE>::]<CLASS> --port <PORT>\n```\n\nFor example with [WALRUS](https://github.com/eWaterCycle/grpc4bmi-examples/tree/master/walrus) use\n```bash\nrun-bmi-server --lang R --path ~/git/eWaterCycle/grpc4bmi-examples/walrus/walrus-bmi.r --name WalrusBmi --port 55555\n```\n\n### The client side\nThe client side has only a Python implementation. The default BMI client assumes a running server process on a given port.\n```python\nfrom grpc4bmi.bmi_grpc_client import BmiClient\nimport grpc\nmymodel = BmiClient(grpc.insecure_channel(\"localhost:<PORT>\"))\nprint mymodel.get_component_name()\nmymodel.initialize(<FILEPATH>)\n...further BMI calls...\n```\n\nThe package contains also client implementation that own the server process, either as a python subprocess or a docker \nimage or a singularity image running the ```run-bmi-server``` script. For instance\n```python\nfrom grpc4bmi.bmi_client_subproc import BmiClientSubProcess\nmymodel = BmiClientSubProcess(<PACKAGE>.<MODULE>.<CLASS>)\n```\nwill automatically launch the server in a sub-process and\n```python\nfrom grpc4bmi.bmi_client_subproc import BmiClientDocker\nmymodel = BmiClientDocker(<IMAGE>,<PORT>)\n\n```\nwill launch a docker container, assuming that a GRPC BMI server will start and exposes the port ```<PORT>```.\n\n```python\nfrom grpc4bmi.bmi_client_singularity import BmiClientSingularity\nmymodel = BmiClientSingularity(<IMAGE>,<PORT>)\n```\nwill launch a singularity container, assuming that a GRPC BMI server will start and exposes the port ```<PORT>```.\n\n\n## Development: generating the grpc code\n\nWhen developers change the proto-file, it is necessary to install grpc tools python packages in your python environment:\n```bash\npip install -r requirements.txt\npip install -e .\n# For R integration also install the R extras with\npip install -e .[R]\n\n```\nand install the C++ runtime and `protoc` command as described in <https://github.com/google/protobuf/blob/master/src/README.md>.\nAfter this, simply executing the `proto_gen.sh` script should do the job. \n\n## Future work\n\nMore language bindings are underway.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eWaterCycle/grpc4bmi", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "grpc4bmi", "package_url": "https://pypi.org/project/grpc4bmi/", "platform": "", "project_url": "https://pypi.org/project/grpc4bmi/", "project_urls": {"Homepage": "https://github.com/eWaterCycle/grpc4bmi"}, "release_url": "https://pypi.org/project/grpc4bmi/0.3/", "requires_dist": ["grpcio (>=1.18.0)", "grpcio-reflection (>=1.18.0)", "grpcio-status (>=1.18.0)", "googleapis-common-protos (>=1.5.5)", "protobuf", "numpy", "docker", "bmipy", "semver", "rpy2 ; extra == 'r'"], "requires_python": "", "summary": "Run your BMI implementation in a separate process and expose it as BMI-python with GRPC", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://zenodo.org/badge/latestdoi/130237165\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5cafbc3f5dc2cca067b96af3f9bd162171948d8/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3133303233373136352e737667\"></a>\n<a href=\"https://travis-ci.org/eWaterCycle/grpc4bmi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7391766f3f9bed6e4b8741557a59257825e164e7/68747470733a2f2f7472617669732d63692e6f72672f6557617465724379636c652f6772706334626d692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://grpc4bmi.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aa0c55dd0178568d69afee716614362c4914f29/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6772706334626d692f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=grpc4bmi\" rel=\"nofollow\"><img alt=\"Quality Gate Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/912e66091d2dae80dc67f4e387cf6e5c8f5a311f/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d6772706334626d69266d65747269633d616c6572745f737461747573\"></a>\n<a href=\"https://sonarcloud.io/dashboard?id=grpc4bmi\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8ac92d3c02f00e21f3a6670a9606de5d5af58c97/68747470733a2f2f736f6e6172636c6f75642e696f2f6170692f70726f6a6563745f6261646765732f6d6561737572653f70726f6a6563743d6772706334626d69266d65747269633d636f766572616765\"></a></p>\n<h1>grpc4bmi</h1>\n<h2>Purpose</h2>\n<p>This software allows you to wrap your BMI implementation (<a href=\"https://github.com/csdms/bmi\" rel=\"nofollow\">https://github.com/csdms/bmi</a>) in a server process and communicate with it via the included python client. The communication is serialized to protocol buffers by GRPC (<a href=\"https://grpc.io/\" rel=\"nofollow\">https://grpc.io/</a>) and occurs over network ports.</p>\n<h2>Installation</h2>\n<p>Optionally, create your virtual environment and activate it, Then, run</p>\n<pre><code>pip install grpc4bmi\n</code></pre>\n<p>on the client (python) side. If your server model is implemented in Python, do the same in the server environment (e.g. docker container). If the model is implemented in R, run instead</p>\n<pre>pip install grpc4bmi<span class=\"o\">[</span>R<span class=\"o\">]</span>\n</pre>\n<p>in the server environment. For bleeding edge version from GitHub use</p>\n<pre>pip install git+https://github.com/eWaterCycle/grpc4bmi.git#egg<span class=\"o\">=</span>grpc4bmi\n</pre>\n<p>Finally if the model is implemented in C or C++, clone this git repo and run</p>\n<pre>make <span class=\"p\">;</span> make install\n</pre>\n<p>in the cpp folder.</p>\n<h2>Usage</h2>\n<h3>Model written in Python</h3>\n<p>For inspiration look at the example in the test directory. To start a server process that allows calls to your BMI implementation, type</p>\n<pre>run-bmi-server --name &lt;PACKAGE&gt;.&lt;MODULE&gt;.&lt;CLASS&gt; --port &lt;PORT&gt; --path &lt;PATH&gt;\n</pre>\n<p>where <code>&lt;PACKAGE&gt;, &lt;MODULE&gt;</code> are the python package and module containing your implementation, <code>&lt;CLASS&gt;</code> is your\nbmi model class name, <code>&lt;PORT&gt;</code> is any available port on the host system, and optionally <code>&lt;PATH&gt;</code> denotes an\nadditional path that should be added to the system path to make your implementation work. The name option above is\noptional, and if not provided the script will look at the environment variables <code>BMI_PACKAGE</code>, <code>BMI_MODULE</code> and\n<code>BMI_CLASS</code>. Similarly, the port can be defined by the environment variable <code>BMI_PORT</code>.\nThis software assumes that your implementation constructor has no parameters.</p>\n<h3>Model written in C/C++ (beta)</h3>\n<p>Create an executable along the lines of cpp/run-bmi-server.cc. You can copy the file and replace the function</p>\n<pre><span class=\"n\">Bmi</span><span class=\"o\">*</span> <span class=\"nf\">create_model_instance</span><span class=\"p\">()</span>\n<span class=\"p\">{</span>\n    <span class=\"cm\">/* Return your new BMI instance pointer here... */</span>\n<span class=\"p\">}</span>\n</pre>\n<p>with the instantiation of your model BMI. The model needs to implement the csdms BMI for C, but you may also implement our more object-oriented C++ interface <a href=\"https://github.com/eWaterCycle/grpc4bmi/blob/master/cpp/bmi_cpp_extension.h\" rel=\"nofollow\">BmiCppExtension</a>.</p>\n<h3>Model written in R</h3>\n<p>The grpc4bmi Python package can also run BMI models written in R if the model is a subclass of <a href=\"https://github.com/eWaterCycle/bmi-r/blob/master/R/abstract-bmi.R#L9\" rel=\"nofollow\">AbstractBmi</a>\nSee <a href=\"https://github.com/eWaterCycle/bmi-r\" rel=\"nofollow\">https://github.com/eWaterCycle/bmi-r</a> for instruction on R and Docker.</p>\n<p>Run the R model a server with</p>\n<pre>run-bmi-server --lang R <span class=\"o\">[</span>--path &lt;R file with BMI model&gt;<span class=\"o\">]</span> --name <span class=\"o\">[</span>&lt;PACKAGE&gt;::<span class=\"o\">]</span>&lt;CLASS&gt; --port &lt;PORT&gt;\n</pre>\n<p>For example with <a href=\"https://github.com/eWaterCycle/grpc4bmi-examples/tree/master/walrus\" rel=\"nofollow\">WALRUS</a> use</p>\n<pre>run-bmi-server --lang R --path ~/git/eWaterCycle/grpc4bmi-examples/walrus/walrus-bmi.r --name WalrusBmi --port <span class=\"m\">55555</span>\n</pre>\n<h3>The client side</h3>\n<p>The client side has only a Python implementation. The default BMI client assumes a running server process on a given port.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">grpc4bmi.bmi_grpc_client</span> <span class=\"kn\">import</span> <span class=\"n\">BmiClient</span>\n<span class=\"kn\">import</span> <span class=\"nn\">grpc</span>\n<span class=\"n\">mymodel</span> <span class=\"o\">=</span> <span class=\"n\">BmiClient</span><span class=\"p\">(</span><span class=\"n\">grpc</span><span class=\"o\">.</span><span class=\"n\">insecure_channel</span><span class=\"p\">(</span><span class=\"s2\">\"localhost:&lt;PORT&gt;\"</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span> <span class=\"n\">mymodel</span><span class=\"o\">.</span><span class=\"n\">get_component_name</span><span class=\"p\">()</span>\n<span class=\"n\">mymodel</span><span class=\"o\">.</span><span class=\"n\">initialize</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">FILEPATH</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n<span class=\"o\">...</span><span class=\"n\">further</span> <span class=\"n\">BMI</span> <span class=\"n\">calls</span><span class=\"o\">...</span>\n</pre>\n<p>The package contains also client implementation that own the server process, either as a python subprocess or a docker\nimage or a singularity image running the <code>run-bmi-server</code> script. For instance</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">grpc4bmi.bmi_client_subproc</span> <span class=\"kn\">import</span> <span class=\"n\">BmiClientSubProcess</span>\n<span class=\"n\">mymodel</span> <span class=\"o\">=</span> <span class=\"n\">BmiClientSubProcess</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">PACKAGE</span><span class=\"o\">&gt;.&lt;</span><span class=\"n\">MODULE</span><span class=\"o\">&gt;.&lt;</span><span class=\"n\">CLASS</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<p>will automatically launch the server in a sub-process and</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">grpc4bmi.bmi_client_subproc</span> <span class=\"kn\">import</span> <span class=\"n\">BmiClientDocker</span>\n<span class=\"n\">mymodel</span> <span class=\"o\">=</span> <span class=\"n\">BmiClientDocker</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">IMAGE</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"o\">&lt;</span><span class=\"n\">PORT</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<p>will launch a docker container, assuming that a GRPC BMI server will start and exposes the port <code>&lt;PORT&gt;</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">grpc4bmi.bmi_client_singularity</span> <span class=\"kn\">import</span> <span class=\"n\">BmiClientSingularity</span>\n<span class=\"n\">mymodel</span> <span class=\"o\">=</span> <span class=\"n\">BmiClientSingularity</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">IMAGE</span><span class=\"o\">&gt;</span><span class=\"p\">,</span><span class=\"o\">&lt;</span><span class=\"n\">PORT</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<p>will launch a singularity container, assuming that a GRPC BMI server will start and exposes the port <code>&lt;PORT&gt;</code>.</p>\n<h2>Development: generating the grpc code</h2>\n<p>When developers change the proto-file, it is necessary to install grpc tools python packages in your python environment:</p>\n<pre>pip install -r requirements.txt\npip install -e .\n<span class=\"c1\"># For R integration also install the R extras with</span>\npip install -e .<span class=\"o\">[</span>R<span class=\"o\">]</span>\n</pre>\n<p>and install the C++ runtime and <code>protoc</code> command as described in <a href=\"https://github.com/google/protobuf/blob/master/src/README.md\" rel=\"nofollow\">https://github.com/google/protobuf/blob/master/src/README.md</a>.\nAfter this, simply executing the <code>proto_gen.sh</code> script should do the job.</p>\n<h2>Future work</h2>\n<p>More language bindings are underway.</p>\n\n          </div>"}, "last_serial": 6872397, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f582fb5160691ae2d38f17a1cc0e4a5a", "sha256": "69aafdee6137f5e0c441d87ee2c5b27011cd4a59d3880e364663853abe036145"}, "downloads": -1, "filename": "grpc4bmi-0.1.tar.gz", "has_sig": false, "md5_digest": "f582fb5160691ae2d38f17a1cc0e4a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17764, "upload_time": "2018-05-20T08:40:56", "upload_time_iso_8601": "2018-05-20T08:40:56.320560Z", "url": "https://files.pythonhosted.org/packages/52/32/550a0f621b01bc0479d5aff236deb357aa89d76c2f39ff371afd2fd62658/grpc4bmi-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ece43c4c19ac1e36c53adbb3785854c5", "sha256": "815ffa69af0863783436dde30de40ad8f5315bce0c619115a455d2accc74456d"}, "downloads": -1, "filename": "grpc4bmi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ece43c4c19ac1e36c53adbb3785854c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17918, "upload_time": "2018-05-21T10:13:38", "upload_time_iso_8601": "2018-05-21T10:13:38.328366Z", "url": "https://files.pythonhosted.org/packages/64/7e/dd39c1c924461eeac807031a3e48df38f3723e45d0ef4933b63d6cb7829a/grpc4bmi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fd6961f26b3da38972d7a3e500ff406d", "sha256": "b1debbd8e45abc4c85fb4810c09431743837a3901e88dddad1820b80b525114c"}, "downloads": -1, "filename": "grpc4bmi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fd6961f26b3da38972d7a3e500ff406d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18338, "upload_time": "2018-05-22T12:32:08", "upload_time_iso_8601": "2018-05-22T12:32:08.572163Z", "url": "https://files.pythonhosted.org/packages/78/0e/a1950dd0f7bba1856b7c07a9c5aa6ce57a0209f3e402e05b8838e1d6a0f7/grpc4bmi-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "9c4101564534ac2b88b9c22a48c9a9b7", "sha256": "812b92bbbb84a33768085cc8a4fcda77ac7aa4c867a06145ae559c0fbadea0ca"}, "downloads": -1, "filename": "grpc4bmi-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9c4101564534ac2b88b9c22a48c9a9b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18399, "upload_time": "2018-05-22T15:56:58", "upload_time_iso_8601": "2018-05-22T15:56:58.516995Z", "url": "https://files.pythonhosted.org/packages/14/8f/bca587ff1d5e3b02cb5cb2dfa9e4a0e29444003e4c9afacbdfb98d8abd9e/grpc4bmi-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "fb34830985a89e0d85c378de71a5e961", "sha256": "ed6d87366fc1e2802e74bb7d9917210816098686d0962e9fba08d63fd75d1d7a"}, "downloads": -1, "filename": "grpc4bmi-0.1.4-py2-none-any.whl", "has_sig": false, "md5_digest": "fb34830985a89e0d85c378de71a5e961", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 24864, "upload_time": "2018-10-15T12:35:27", "upload_time_iso_8601": "2018-10-15T12:35:27.440280Z", "url": "https://files.pythonhosted.org/packages/e2/d0/ae22553f08fbb4c56f0f54519b7f2c66c4b7898d92d4813a911e6b461d9a/grpc4bmi-0.1.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf6c19618956db42ca92d42b6821314c", "sha256": "e64fa8ae9b490a8900a7a26e46801be02f6b93b6968f6be8286df8b5aef0f7a7"}, "downloads": -1, "filename": "grpc4bmi-0.1.4.tar.gz", "has_sig": false, "md5_digest": "cf6c19618956db42ca92d42b6821314c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20482, "upload_time": "2018-10-15T12:35:28", "upload_time_iso_8601": "2018-10-15T12:35:28.890588Z", "url": "https://files.pythonhosted.org/packages/e2/48/a0b2261fa52181a6520d6f80a1c0cfcd219eee480e75d29e0802050569ee/grpc4bmi-0.1.4.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2bcb74f08136b6095b241bfb6f6333d2", "sha256": "a0eea6e85cbaf5ddf61c9504952e474ae98cc09df2680d1aa69803650144f979"}, "downloads": -1, "filename": "grpc4bmi-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "2bcb74f08136b6095b241bfb6f6333d2", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 24840, "upload_time": "2018-10-15T12:45:45", "upload_time_iso_8601": "2018-10-15T12:45:45.806466Z", "url": "https://files.pythonhosted.org/packages/b7/5f/c34b8e1c9c861cd221ec90dfc108602fb1108b9944b3e1bd2c8b4f75f3f4/grpc4bmi-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48cd568136e8c849b38c6430574f10c8", "sha256": "a7ade3950d5cdefde16ba4307b292d4196c7fc51baa3f489d244c9c9d892bd00"}, "downloads": -1, "filename": "grpc4bmi-0.2.tar.gz", "has_sig": false, "md5_digest": "48cd568136e8c849b38c6430574f10c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20476, "upload_time": "2018-10-15T12:45:47", "upload_time_iso_8601": "2018-10-15T12:45:47.712452Z", "url": "https://files.pythonhosted.org/packages/e6/6d/7760b5ad1bbcdfd73fca17903e2703250a8a36f228b707ee528db6f32d07/grpc4bmi-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "21f8252ed2f99c4291fe5bf06cb4fe7c", "sha256": "830a62ef1cc3a9482579b98604d1689577570da98f1be737bf447646424f2fbb"}, "downloads": -1, "filename": "grpc4bmi-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "21f8252ed2f99c4291fe5bf06cb4fe7c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39739, "upload_time": "2019-12-03T16:11:14", "upload_time_iso_8601": "2019-12-03T16:11:14.333544Z", "url": "https://files.pythonhosted.org/packages/b4/cc/2499c1a9850a7310f5a406440974ed49f957f4436fc1fb831e5217866e24/grpc4bmi-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "105f9b76afccd93fd5ae59edcd7e10bc", "sha256": "5bc6200ef251516c90143fb8e32d5fdf417d6e6b582a1c7ccc27d99978504560"}, "downloads": -1, "filename": "grpc4bmi-0.2.1.tar.gz", "has_sig": false, "md5_digest": "105f9b76afccd93fd5ae59edcd7e10bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27292, "upload_time": "2019-12-03T16:11:18", "upload_time_iso_8601": "2019-12-03T16:11:18.164961Z", "url": "https://files.pythonhosted.org/packages/13/35/e4bd96107cc20a29f6c6732b9d047a8b146e8a7be08f4f4d03a901c09b07/grpc4bmi-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "622005f67b75f39663a2b7ea45a64552", "sha256": "43d6867c321bea34f6ad1725bb4d70a5cb06f31d84a9f943c3bfa1f2971c9d84"}, "downloads": -1, "filename": "grpc4bmi-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "622005f67b75f39663a2b7ea45a64552", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40512, "upload_time": "2020-01-27T14:47:33", "upload_time_iso_8601": "2020-01-27T14:47:33.198863Z", "url": "https://files.pythonhosted.org/packages/22/96/fff644d10f2bf9af796b8c6dddd27e458ddbc4eece24654c50b5368285b4/grpc4bmi-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aaab51aff6f512c033bdbe680d470b1a", "sha256": "0cd82908d3b9d28ffe8411042557607be774be018027662ce9341a8daf008899"}, "downloads": -1, "filename": "grpc4bmi-0.2.2.tar.gz", "has_sig": false, "md5_digest": "aaab51aff6f512c033bdbe680d470b1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28074, "upload_time": "2020-01-27T14:47:34", "upload_time_iso_8601": "2020-01-27T14:47:34.518786Z", "url": "https://files.pythonhosted.org/packages/0a/f9/bdf0cf4f5ca27647fafda4e783be5a738c971bee5d982c4a698c9eda9630/grpc4bmi-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "4fea5c6a9d5c02032a2fae03fe58ad0a", "sha256": "6e7b5f350600cf084f6593905d340237132c9b0c6fbbc39ec1a52f0bb89baada"}, "downloads": -1, "filename": "grpc4bmi-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4fea5c6a9d5c02032a2fae03fe58ad0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 34741, "upload_time": "2020-01-27T19:04:47", "upload_time_iso_8601": "2020-01-27T19:04:47.133545Z", "url": "https://files.pythonhosted.org/packages/9b/52/d67eddc7907241d28ee6ec41559a2f0e139c1ee7290d0f84a6daa21bff39/grpc4bmi-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "975ffc03b401caf0fdcafc9fd14b7dc8", "sha256": "837ab8ae1e9ec15c4fc2f89da46437c46614893f17117d3b2dc0e12e1a73a08e"}, "downloads": -1, "filename": "grpc4bmi-0.2.3.tar.gz", "has_sig": false, "md5_digest": "975ffc03b401caf0fdcafc9fd14b7dc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25957, "upload_time": "2020-01-27T19:04:48", "upload_time_iso_8601": "2020-01-27T19:04:48.970766Z", "url": "https://files.pythonhosted.org/packages/d2/9d/f768b71c70dddab8daa81cf9da55b4b6ec5621ee6fd05dd604c317793148/grpc4bmi-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "afbf2ace94050360959d19678b0d7eb4", "sha256": "8f982cc3e48d0a2afc0038e77803cdf18567b2e0517299439906997eca29dcee"}, "downloads": -1, "filename": "grpc4bmi-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "afbf2ace94050360959d19678b0d7eb4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 40795, "upload_time": "2020-02-19T08:56:28", "upload_time_iso_8601": "2020-02-19T08:56:28.031970Z", "url": "https://files.pythonhosted.org/packages/8d/9a/c8b86e7dbc9e23674faaeec06ce836ea0580de9c80d748cf4d35f6d02dd2/grpc4bmi-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13aa9f6ada373e8c045371469926d5f4", "sha256": "f4558034166b8884754221e24dff47fa2a46eb7a68f648d20189d7c839fb09f6"}, "downloads": -1, "filename": "grpc4bmi-0.2.4.tar.gz", "has_sig": false, "md5_digest": "13aa9f6ada373e8c045371469926d5f4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28303, "upload_time": "2020-02-19T08:56:29", "upload_time_iso_8601": "2020-02-19T08:56:29.737311Z", "url": "https://files.pythonhosted.org/packages/64/30/2c7a45298791e867f628a71affd365130cbbad0f7b89d12e86526b5135da/grpc4bmi-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "28c8ff826c578fdd437ea39382f0cd53", "sha256": "fbf1fdbbd2364a1038df363a8dc6cacff90dc30e8fcd9aa93df0b4824543979a"}, "downloads": -1, "filename": "grpc4bmi-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "28c8ff826c578fdd437ea39382f0cd53", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35218, "upload_time": "2020-03-24T11:21:55", "upload_time_iso_8601": "2020-03-24T11:21:55.587658Z", "url": "https://files.pythonhosted.org/packages/ab/e2/33fe5c30d1fc613a21d217a33cc54679607be3bc85733b9d96ee8d493a21/grpc4bmi-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2895e14ed8163812cd4e4d27816d9a93", "sha256": "bafc86fa54a35c1ca9c11a2e7033c91d41953fbe55c0b46333d6f55df7b0ab48"}, "downloads": -1, "filename": "grpc4bmi-0.2.5.tar.gz", "has_sig": false, "md5_digest": "2895e14ed8163812cd4e4d27816d9a93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26203, "upload_time": "2020-03-24T11:21:57", "upload_time_iso_8601": "2020-03-24T11:21:57.284922Z", "url": "https://files.pythonhosted.org/packages/15/a8/0c5be81419310aa6859fcc9459c4a3a11344877830aa1917d57901439e17/grpc4bmi-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "aed992cc8081497e08d55dce057234b6", "sha256": "d7304f9048c82ab4ea0c4dbb69186a40beb6ceafc7a3614f4e636378e3a555f5"}, "downloads": -1, "filename": "grpc4bmi-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "aed992cc8081497e08d55dce057234b6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35220, "upload_time": "2020-03-24T11:26:31", "upload_time_iso_8601": "2020-03-24T11:26:31.204273Z", "url": "https://files.pythonhosted.org/packages/95/5c/60f545efdd3e20f07edd77fed63b1c9efb26baddbee51f3933c8bc4895ad/grpc4bmi-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80e261cf69c6e6a9867b13ef79c662e5", "sha256": "85a66802fd69f51335e27c6f5425c07100b94b3e868c178c7a55141cadfc4282"}, "downloads": -1, "filename": "grpc4bmi-0.2.6.tar.gz", "has_sig": false, "md5_digest": "80e261cf69c6e6a9867b13ef79c662e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26207, "upload_time": "2020-03-24T11:26:32", "upload_time_iso_8601": "2020-03-24T11:26:32.638799Z", "url": "https://files.pythonhosted.org/packages/8d/80/b0eaa73871c58b28a340b9d00cfcbc1a5adc220a1f3c0a7a0351b5e14d25/grpc4bmi-0.2.6.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "856e9086117f6da1e91a3fa82a68e838", "sha256": "e53ed1e2029bafe17583fc37b24d0eca19a29bba663c512e1c88c492c647d7aa"}, "downloads": -1, "filename": "grpc4bmi-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "856e9086117f6da1e91a3fa82a68e838", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46548, "upload_time": "2019-11-19T16:03:51", "upload_time_iso_8601": "2019-11-19T16:03:51.033090Z", "url": "https://files.pythonhosted.org/packages/48/a5/ee97de9d4e281a8047810f7451a0243a522413b8ae5101ea6c60adbf0e37/grpc4bmi-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdcffae12d8ff36a2b3ab9110075f7fb", "sha256": "a6a5cd6689e0fbd685372493011021a23dd0b87d1664e7fa7cfcb06d3565b8c6"}, "downloads": -1, "filename": "grpc4bmi-0.3.tar.gz", "has_sig": false, "md5_digest": "fdcffae12d8ff36a2b3ab9110075f7fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37868, "upload_time": "2019-11-19T16:03:52", "upload_time_iso_8601": "2019-11-19T16:03:52.991016Z", "url": "https://files.pythonhosted.org/packages/5f/c7/02daed8e93e25d203d28000a921c6dc2b300e7355e4a16a42d8a7c8c046f/grpc4bmi-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "856e9086117f6da1e91a3fa82a68e838", "sha256": "e53ed1e2029bafe17583fc37b24d0eca19a29bba663c512e1c88c492c647d7aa"}, "downloads": -1, "filename": "grpc4bmi-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "856e9086117f6da1e91a3fa82a68e838", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 46548, "upload_time": "2019-11-19T16:03:51", "upload_time_iso_8601": "2019-11-19T16:03:51.033090Z", "url": "https://files.pythonhosted.org/packages/48/a5/ee97de9d4e281a8047810f7451a0243a522413b8ae5101ea6c60adbf0e37/grpc4bmi-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fdcffae12d8ff36a2b3ab9110075f7fb", "sha256": "a6a5cd6689e0fbd685372493011021a23dd0b87d1664e7fa7cfcb06d3565b8c6"}, "downloads": -1, "filename": "grpc4bmi-0.3.tar.gz", "has_sig": false, "md5_digest": "fdcffae12d8ff36a2b3ab9110075f7fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37868, "upload_time": "2019-11-19T16:03:52", "upload_time_iso_8601": "2019-11-19T16:03:52.991016Z", "url": "https://files.pythonhosted.org/packages/5f/c7/02daed8e93e25d203d28000a921c6dc2b300e7355e4a16a42d8a7c8c046f/grpc4bmi-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:00 2020"}