{"info": {"author": "Jose Sitanggang, Asido Sigalingging", "author_email": "jose.stnggng@gmail.com,asido.saputra@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## LAS 2.0 Reader and Converter to JSON\n\nThis package useful for reading and converting the LAS file to python `dict` and `json`.\n\nLAS (Log ASCII Standard) is a structured ASCII file containing log curve data and header information. For more [detail](http://www.cwls.org/wp-content/uploads/2017/02/Las2_Update_Feb2017.pdf).\n\n### LAS File Example\n\n```\n~VERSION INFORMATION\n VERS.                 2.0 :   CWLS LOG ASCII STANDARD - VERSION 2.0\n WRAP.                  NO :   SINGLE LINE PER DEPTH STEP\n CREA.                 1/30/2018 12:24:47 PM\n#CREATED USING IP VERSION 3.6.2010.102 BY LELY ON 1/30/2018 12:24:47 PM\n~WELL INFORMATION\n#MNEM.UNIT       DATA                          DESCRIPTION MNEMONIC\n#---------      ---------------------------   --------------------------\n STRT    .M         23.6220                   : START DEPTH\n STOP    .M         1522.1713                 : STOP DEPTH\n STEP    .M         0.1524                    : STEP VALUE\n NULL    .      -999.0000                     : NULL VALUE\n SRVC    .      SCH                           : Service Company/Logging company\n DATE    .      1/30/2018                     : LAS file Creation Date\n WELL    .      JPN-A                         : Well Name\n COMP    .      PT. Pertamina EP              : Company\n FLD     .      JEPON                         : Field\n STATE   .      JAWA TENGA                    : State\n COUNT   .      Indonesia                     : Country\n LOC     .      X                             : Location\n LATI    .      -6.9952777778                 : Latitude/Northing\n LONG    .      111.5247222222                : Longitude/Easting\n PDAT    .      MSL                           : Permanent Datum\n EPDAT   .      0.0000                        : Elevation of Permanent Datum\n LGMEA   .      KB                            : Log Measured from\n APDAT   .      169.0000                      : Elevation Above Permanent Datum\n RWS     .      -999                          : Def_Rw\n WST     .      -999                          : Def_Rwt\n CNTY    .      OW 700/39                     : County\n\n~CURVE INFORMATION\n#MNEM          UNIT     API CODE   Curve Type Comments\n#---------- ---------- ----------  ---------- --------\n DEPTH     .M                    : Depth\n Perm      .md                   : perm\n\n~A Log data section\n#  DEPTH      Perm\n  23.6220    0.0000\n  23.7744 3001.4817\n  23.9268 3001.4556\n  24.0792 3030.4937\n  24.2316 3028.0435\n  24.3840 2960.1401\n\n ~Other  Information Section\nThe log digits for this well were hand digitized from poor half scale log\nprints.  This  was  the  best  information  available  at  the  time.  Every attempt should be made to track down the original films. .Dec. 12,1990  John Doe, Petrophysics\n\n```\n\nsee full LAS file [here](https://github.com/josestnggng/Las-converter/blob/master/files/sample3.las).\n\n### Installation\n\n```bash\npip install las-converter\n```\n\n### How to use\n\nLAS converter with `file` input. see [here](https://github.com/josestnggng/Las-converter/blob/master/files).\n\n```py\nfrom LAS import Converter\n\nc = Converter() # create converter object\n\nlog = c.set_file(\"file.las\") #return LogWrapper\n\n# get section\ndata      = log.data\nversion   = log.version\ncurve     = log.curve\nparameter = log.parameter\nwell      = log.well\nother     = log.other\n\n# or get dictionary\nlog_in_dict = log.get_dict()\n# or print on json format and save to disk\nlog_in_json = log.get_json(\"outfile_name\")\n```\n\n### Server app (Flask)\n\nLAS converter with `stream` input. see [here](https://github.com/josestnggng/Las-converter/blob/master/test/expected.py).\n\n```py\n# server app for handling upload\nfrom flask import request\nfrom LAS import Converter\n\n@app.route('/upload', methods=['GET', 'POST'])\ndef upload_file():\n    if request.method == \"POST\":\n        f = request.files['file']\n\n        # read stream\n        stream = f.stream.readlines()\n\n        # code for Las Converter\n        c = Converter()\n        log  = c.set_stream(stream)\n\n        # or get only assci/data\n        data = log.data\n```\n\n### Output\n\n##### JSON\n\n```json\n(log = {\n  \"data\": {\n    \"depth\": [23.622, 23.7744, 23.9268, 24.0792, 24.2316, 24.384],\n    \"perm\": [0.0, 3001.4817, 3001.4556, 3030.4937, 3028.0435, 2960.1401]\n  }\n})\n```\n\n##### Python dict\n\nsee [detail](https://github.com/josestnggng/Las-converter/blob/master/outfile.json).\n\n```py\nlog.data = {\n    'depth': [23.622, 23.7744, 23.9268, 24.0792, 24.2316, 24.384],\n    'perm': [0.0, 3001.4817, 3001.4556, 3030.4937, 3028.0435, 2960.1401]\n}\n```\n\nsee [detail](https://github.com/josestnggng/Las-converter/blob/master/test/expected.py).\n\n### Contributors\n\n- [Asido Saputra Sigalingging](https://github.com/asidosaputra)\n- [Jose Sitanggang](https://github.com/josestnggng)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/josestnggng/Las-converter", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "las-converter", "package_url": "https://pypi.org/project/las-converter/", "platform": "", "project_url": "https://pypi.org/project/las-converter/", "project_urls": {"Homepage": "https://github.com/josestnggng/Las-converter"}, "release_url": "https://pypi.org/project/las-converter/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Converter LAS file to python dictionary and json file", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>LAS 2.0 Reader and Converter to JSON</h2>\n<p>This package useful for reading and converting the LAS file to python <code>dict</code> and <code>json</code>.</p>\n<p>LAS (Log ASCII Standard) is a structured ASCII file containing log curve data and header information. For more <a href=\"http://www.cwls.org/wp-content/uploads/2017/02/Las2_Update_Feb2017.pdf\" rel=\"nofollow\">detail</a>.</p>\n<h3>LAS File Example</h3>\n<pre><code>~VERSION INFORMATION\n VERS.                 2.0 :   CWLS LOG ASCII STANDARD - VERSION 2.0\n WRAP.                  NO :   SINGLE LINE PER DEPTH STEP\n CREA.                 1/30/2018 12:24:47 PM\n#CREATED USING IP VERSION 3.6.2010.102 BY LELY ON 1/30/2018 12:24:47 PM\n~WELL INFORMATION\n#MNEM.UNIT       DATA                          DESCRIPTION MNEMONIC\n#---------      ---------------------------   --------------------------\n STRT    .M         23.6220                   : START DEPTH\n STOP    .M         1522.1713                 : STOP DEPTH\n STEP    .M         0.1524                    : STEP VALUE\n NULL    .      -999.0000                     : NULL VALUE\n SRVC    .      SCH                           : Service Company/Logging company\n DATE    .      1/30/2018                     : LAS file Creation Date\n WELL    .      JPN-A                         : Well Name\n COMP    .      PT. Pertamina EP              : Company\n FLD     .      JEPON                         : Field\n STATE   .      JAWA TENGA                    : State\n COUNT   .      Indonesia                     : Country\n LOC     .      X                             : Location\n LATI    .      -6.9952777778                 : Latitude/Northing\n LONG    .      111.5247222222                : Longitude/Easting\n PDAT    .      MSL                           : Permanent Datum\n EPDAT   .      0.0000                        : Elevation of Permanent Datum\n LGMEA   .      KB                            : Log Measured from\n APDAT   .      169.0000                      : Elevation Above Permanent Datum\n RWS     .      -999                          : Def_Rw\n WST     .      -999                          : Def_Rwt\n CNTY    .      OW 700/39                     : County\n\n~CURVE INFORMATION\n#MNEM          UNIT     API CODE   Curve Type Comments\n#---------- ---------- ----------  ---------- --------\n DEPTH     .M                    : Depth\n Perm      .md                   : perm\n\n~A Log data section\n#  DEPTH      Perm\n  23.6220    0.0000\n  23.7744 3001.4817\n  23.9268 3001.4556\n  24.0792 3030.4937\n  24.2316 3028.0435\n  24.3840 2960.1401\n\n ~Other  Information Section\nThe log digits for this well were hand digitized from poor half scale log\nprints.  This  was  the  best  information  available  at  the  time.  Every attempt should be made to track down the original films. .Dec. 12,1990  John Doe, Petrophysics\n\n</code></pre>\n<p>see full LAS file <a href=\"https://github.com/josestnggng/Las-converter/blob/master/files/sample3.las\" rel=\"nofollow\">here</a>.</p>\n<h3>Installation</h3>\n<pre>pip install las-converter\n</pre>\n<h3>How to use</h3>\n<p>LAS converter with <code>file</code> input. see <a href=\"https://github.com/josestnggng/Las-converter/blob/master/files\" rel=\"nofollow\">here</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">LAS</span> <span class=\"kn\">import</span> <span class=\"n\">Converter</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Converter</span><span class=\"p\">()</span> <span class=\"c1\"># create converter object</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_file</span><span class=\"p\">(</span><span class=\"s2\">\"file.las\"</span><span class=\"p\">)</span> <span class=\"c1\">#return LogWrapper</span>\n\n<span class=\"c1\"># get section</span>\n<span class=\"n\">data</span>      <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"n\">version</span>   <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">version</span>\n<span class=\"n\">curve</span>     <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">curve</span>\n<span class=\"n\">parameter</span> <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">parameter</span>\n<span class=\"n\">well</span>      <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">well</span>\n<span class=\"n\">other</span>     <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">other</span>\n\n<span class=\"c1\"># or get dictionary</span>\n<span class=\"n\">log_in_dict</span> <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">get_dict</span><span class=\"p\">()</span>\n<span class=\"c1\"># or print on json format and save to disk</span>\n<span class=\"n\">log_in_json</span> <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">(</span><span class=\"s2\">\"outfile_name\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Server app (Flask)</h3>\n<p>LAS converter with <code>stream</code> input. see <a href=\"https://github.com/josestnggng/Las-converter/blob/master/test/expected.py\" rel=\"nofollow\">here</a>.</p>\n<pre><span class=\"c1\"># server app for handling upload</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">request</span>\n<span class=\"kn\">from</span> <span class=\"nn\">LAS</span> <span class=\"kn\">import</span> <span class=\"n\">Converter</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/upload'</span><span class=\"p\">,</span> <span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">,</span> <span class=\"s1\">'POST'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">upload_file</span><span class=\"p\">():</span>\n    <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s2\">\"POST\"</span><span class=\"p\">:</span>\n        <span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">files</span><span class=\"p\">[</span><span class=\"s1\">'file'</span><span class=\"p\">]</span>\n\n        <span class=\"c1\"># read stream</span>\n        <span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">stream</span><span class=\"o\">.</span><span class=\"n\">readlines</span><span class=\"p\">()</span>\n\n        <span class=\"c1\"># code for Las Converter</span>\n        <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Converter</span><span class=\"p\">()</span>\n        <span class=\"n\">log</span>  <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">set_stream</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">)</span>\n\n        <span class=\"c1\"># or get only assci/data</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">data</span>\n</pre>\n<h3>Output</h3>\n<h5>JSON</h5>\n<pre><span class=\"err\">(log</span> <span class=\"err\">=</span> <span class=\"p\">{</span>\n  <span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"depth\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">23.622</span><span class=\"p\">,</span> <span class=\"mf\">23.7744</span><span class=\"p\">,</span> <span class=\"mf\">23.9268</span><span class=\"p\">,</span> <span class=\"mf\">24.0792</span><span class=\"p\">,</span> <span class=\"mf\">24.2316</span><span class=\"p\">,</span> <span class=\"mf\">24.384</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"perm\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">3001.4817</span><span class=\"p\">,</span> <span class=\"mf\">3001.4556</span><span class=\"p\">,</span> <span class=\"mf\">3030.4937</span><span class=\"p\">,</span> <span class=\"mf\">3028.0435</span><span class=\"p\">,</span> <span class=\"mf\">2960.1401</span><span class=\"p\">]</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">)</span>\n</pre>\n<h5>Python dict</h5>\n<p>see <a href=\"https://github.com/josestnggng/Las-converter/blob/master/outfile.json\" rel=\"nofollow\">detail</a>.</p>\n<pre><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'depth'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">23.622</span><span class=\"p\">,</span> <span class=\"mf\">23.7744</span><span class=\"p\">,</span> <span class=\"mf\">23.9268</span><span class=\"p\">,</span> <span class=\"mf\">24.0792</span><span class=\"p\">,</span> <span class=\"mf\">24.2316</span><span class=\"p\">,</span> <span class=\"mf\">24.384</span><span class=\"p\">],</span>\n    <span class=\"s1\">'perm'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">3001.4817</span><span class=\"p\">,</span> <span class=\"mf\">3001.4556</span><span class=\"p\">,</span> <span class=\"mf\">3030.4937</span><span class=\"p\">,</span> <span class=\"mf\">3028.0435</span><span class=\"p\">,</span> <span class=\"mf\">2960.1401</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>see <a href=\"https://github.com/josestnggng/Las-converter/blob/master/test/expected.py\" rel=\"nofollow\">detail</a>.</p>\n<h3>Contributors</h3>\n<ul>\n<li><a href=\"https://github.com/asidosaputra\" rel=\"nofollow\">Asido Saputra Sigalingging</a></li>\n<li><a href=\"https://github.com/josestnggng\" rel=\"nofollow\">Jose Sitanggang</a></li>\n</ul>\n\n          </div>"}, "last_serial": 4945444, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1beab2a3a17870d9aee207a7811af70b", "sha256": "afe0bf80ae33b7b03cc1b2b030df3c0d744d3f0e586a6f78003daea3c0cdef1d"}, "downloads": -1, "filename": "las_converter-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1beab2a3a17870d9aee207a7811af70b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4980, "upload_time": "2019-03-03T21:49:25", "upload_time_iso_8601": "2019-03-03T21:49:25.549502Z", "url": "https://files.pythonhosted.org/packages/c5/76/c83e43102efe266d8efbcc1ce5406d52e44ba7347c030d81773312f3670a/las_converter-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ce127677eb1f72d272a8456cf3e1984", "sha256": "8625701dbf5cf3eca216fe2c3fe056e555fc647c5046ae5b56bca47513159500"}, "downloads": -1, "filename": "las-converter-0.1.tar.gz", "has_sig": false, "md5_digest": "7ce127677eb1f72d272a8456cf3e1984", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3299, "upload_time": "2019-03-03T21:49:27", "upload_time_iso_8601": "2019-03-03T21:49:27.790399Z", "url": "https://files.pythonhosted.org/packages/aa/1c/8ba21eef82ac871377cd4f04ed1a6ed7b846042996450754a27c3132b58f/las-converter-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "7edca0f6de09a7a5031c034473a140fd", "sha256": "49005ff35a827944666c574eb3831145c950237a5801281de3c85fc03ff536a9"}, "downloads": -1, "filename": "las_converter-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7edca0f6de09a7a5031c034473a140fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5345, "upload_time": "2019-03-10T16:27:04", "upload_time_iso_8601": "2019-03-10T16:27:04.924710Z", "url": "https://files.pythonhosted.org/packages/a7/95/d588e64d98cff38c4cd4811eb404397e728f605639f69a3f47a71b298a55/las_converter-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e27b8e39a0af11f3c4a83f50aebd8c05", "sha256": "238074bf08f6737bef1ff9cb8c8744b3f8eb921305d6fb9e9db6d763004aaeb2"}, "downloads": -1, "filename": "las-converter-0.3.tar.gz", "has_sig": false, "md5_digest": "e27b8e39a0af11f3c4a83f50aebd8c05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3704, "upload_time": "2019-03-10T16:27:06", "upload_time_iso_8601": "2019-03-10T16:27:06.594971Z", "url": "https://files.pythonhosted.org/packages/22/e2/88226f416607d54f89d81ed2b0e029757f9b9218136ad9621cfd187be017/las-converter-0.3.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "c0c2d9573c86a9c4bb1d86bd9edf9ebe", "sha256": "4f05c087c9bdaff8ab6513bb3203f8efb3fa482f3966871cbb6b4e9d0d6c9b5b"}, "downloads": -1, "filename": "las_converter-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c0c2d9573c86a9c4bb1d86bd9edf9ebe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8739, "upload_time": "2019-03-15T18:13:45", "upload_time_iso_8601": "2019-03-15T18:13:45.642409Z", "url": "https://files.pythonhosted.org/packages/17/d8/bffaca0d1da761522abae79a5df48eb397e94bed808290b9569f698efa70/las_converter-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3204d663bc4ff72184931d04440ffa9b", "sha256": "9976d5b57c233e177fb6f72974bce5005ab3212796f1b5c7a344e796dcd1e0e6"}, "downloads": -1, "filename": "las-converter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "3204d663bc4ff72184931d04440ffa9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6443, "upload_time": "2019-03-15T18:13:48", "upload_time_iso_8601": "2019-03-15T18:13:48.400151Z", "url": "https://files.pythonhosted.org/packages/4c/40/f94b12de149c2c777a28322cb22226b0b9bf625a6e31217561fc33366f15/las-converter-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c0c2d9573c86a9c4bb1d86bd9edf9ebe", "sha256": "4f05c087c9bdaff8ab6513bb3203f8efb3fa482f3966871cbb6b4e9d0d6c9b5b"}, "downloads": -1, "filename": "las_converter-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c0c2d9573c86a9c4bb1d86bd9edf9ebe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8739, "upload_time": "2019-03-15T18:13:45", "upload_time_iso_8601": "2019-03-15T18:13:45.642409Z", "url": "https://files.pythonhosted.org/packages/17/d8/bffaca0d1da761522abae79a5df48eb397e94bed808290b9569f698efa70/las_converter-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3204d663bc4ff72184931d04440ffa9b", "sha256": "9976d5b57c233e177fb6f72974bce5005ab3212796f1b5c7a344e796dcd1e0e6"}, "downloads": -1, "filename": "las-converter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "3204d663bc4ff72184931d04440ffa9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6443, "upload_time": "2019-03-15T18:13:48", "upload_time_iso_8601": "2019-03-15T18:13:48.400151Z", "url": "https://files.pythonhosted.org/packages/4c/40/f94b12de149c2c777a28322cb22226b0b9bf625a6e31217561fc33366f15/las-converter-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:49 2020"}