{"info": {"author": "Thomas Weholt", "author_email": "thomas@weholt.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "twcommon - Commonly used snippets of code\n=========================================\n\n\nVersion : 0.1.0\nAuthor : Thomas Weholt <thomas@weholt.org>\nLicense : GPL v3.0\n\nDescription:\n------------\nA collection snippets, pieces of code, stuff found on the net I use all the time. Will grow over time.\n\nCurrently it consists of:\n\n\nget_free_space(folder)\n----------------------\nPlatform independant way to calculate free space.\n\n\nCheckTargetFilename(filename)\n-----------------------------\nIt will check if there`s a filename by that name allready, \nand if so, return a new filename adding ~1 to the filename.\nFor example if you want to write to /tmp/test.txt but that file allready exists, \nusing CheckTargetFilename('/tmp/test.txt') will return /tmp/test~1.txt.\nIf /tmp/test~1.txt allready exists the returned file will be /tmp/test~2.txt. \n\n\nhumanize_bytes(size)\n--------------------\nConverts bytes to nearest kilobyte, megabyte, gigabyte etc.\n\n\ngetWords(text, ignore_words = [], minsize = 2)\n----------------------------------------------\nExtracts words from a piece of text.\nIt splits words based on spaces, change in char-case inside a text, numbers etc.\n\n\ngenerate_checksum(filename)\n---------------------------\nGenerates a hexdigest version of a SHA-512 checksum based on a file.\n\n\nparse_filedata(root_path, complete_filename)\n--------------------------------------------\nReturns a dictionary of filedata.\n\n\n\ndirwalk(dir, extensions_to_include = None)\n------------------------------------------\nDirectory walk, yielding filenames found. \nCan filter based on extensions.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "twcommon", "package_url": "https://pypi.org/project/twcommon/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/twcommon/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/twcommon/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "twcommon - Commonly used utils", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Version : 0.1.0\nAuthor : Thomas Weholt &lt;<a href=\"mailto:thomas%40weholt.org\">thomas<span>@</span>weholt<span>.</span>org</a>&gt;\nLicense : GPL v3.0</p>\n<div id=\"description\">\n<h2>Description:</h2>\n<p>A collection snippets, pieces of code, stuff found on the net I use all the time. Will grow over time.</p>\n<p>Currently it consists of:</p>\n</div>\n<div id=\"get-free-space-folder\">\n<h2>get_free_space(folder)</h2>\n<p>Platform independant way to calculate free space.</p>\n</div>\n<div id=\"checktargetfilename-filename\">\n<h2>CheckTargetFilename(filename)</h2>\n<p>It will check if there`s a filename by that name allready,\nand if so, return a new filename adding ~1 to the filename.\nFor example if you want to write to /tmp/test.txt but that file allready exists,\nusing CheckTargetFilename(\u2018/tmp/test.txt\u2019) will return /tmp/test~1.txt.\nIf /tmp/test~1.txt allready exists the returned file will be /tmp/test~2.txt.</p>\n</div>\n<div id=\"humanize-bytes-size\">\n<h2>humanize_bytes(size)</h2>\n<p>Converts bytes to nearest kilobyte, megabyte, gigabyte etc.</p>\n</div>\n<div id=\"getwords-text-ignore-words-minsize-2\">\n<h2>getWords(text, ignore_words = [], minsize = 2)</h2>\n<p>Extracts words from a piece of text.\nIt splits words based on spaces, change in char-case inside a text, numbers etc.</p>\n</div>\n<div id=\"generate-checksum-filename\">\n<h2>generate_checksum(filename)</h2>\n<p>Generates a hexdigest version of a SHA-512 checksum based on a file.</p>\n</div>\n<div id=\"parse-filedata-root-path-complete-filename\">\n<h2>parse_filedata(root_path, complete_filename)</h2>\n<p>Returns a dictionary of filedata.</p>\n</div>\n<div id=\"dirwalk-dir-extensions-to-include-none\">\n<h2>dirwalk(dir, extensions_to_include = None)</h2>\n<p>Directory walk, yielding filenames found.\nCan filter based on extensions.</p>\n</div>\n\n          </div>"}, "last_serial": 188380, "releases": {"0.1.0": []}, "urls": [], "timestamp": "Fri May  8 03:44:11 2020"}