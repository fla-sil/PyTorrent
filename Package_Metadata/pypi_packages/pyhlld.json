{"info": {"author": "Armon Dadgar", "author_email": "armon.dadgar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Database", "Topic :: Internet", "Topic :: Software Development :: Libraries"], "description": "pyhlld\n=========\n\npyhlld provides a Python client library to interface with\nhlld servers.\n\nFeatures\n--------\n\n\n* Provides a simple API for using hlld\n* Command pipelining to reduce latency\n\n\nInstall\n-------\n\nDownload and install from source:\n\n    python setup.py install\n\nExample\n------\n\nUsing pyhlld is very simple:\n\n    from pyhlld import HlldClient\n\n    # Create a client to a local hlld server, default port\n    client = HlldClient(\"localhost\")\n\n    # Get or create the foobar set\n    foobar = client.create_set(\"foobar\")\n\n    # Set a key and check the size\n    foobar.add(\"Test Key!\")\n    assert foobar.info()[\"size\"] == 1\n\nUsing pipelining is straightforward as well:\n\n    from pyhlld import HlldClient\n\n    # Create a client to a local hlld server, default port\n    client = HlldClient(\"localhost\")\n\n    # Get or create the pipe set\n    pipe = client.create_set(\"pipe\").pipeline()\n\n    # Chain multiple add commands\n    results = pipe.add(\"foo\").add(\"bar\").add(\"baz\").execute()\n    assert results[0]\n    assert results[1]\n    assert results[2]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/armon/pyhlld", "keywords": "hyperloglog,hll,hlld,client", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "pyhlld", "package_url": "https://pypi.org/project/pyhlld/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyhlld/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/armon/pyhlld"}, "release_url": "https://pypi.org/project/pyhlld/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Client library to interface with hlld servers", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            pyhlld<br>=========<br><br>pyhlld provides a Python client library to interface with<br>hlld servers.<br><br>Features<br>--------<br><br><br>* Provides a simple API for using hlld<br>* Command pipelining to reduce latency<br><br><br>Install<br>-------<br><br>Download and install from source:<br><br>    python setup.py install<br><br>Example<br>------<br><br>Using pyhlld is very simple:<br><br>    from pyhlld import HlldClient<br><br>    # Create a client to a local hlld server, default port<br>    client = HlldClient(\"localhost\")<br><br>    # Get or create the foobar set<br>    foobar = client.create_set(\"foobar\")<br><br>    # Set a key and check the size<br>    foobar.add(\"Test Key!\")<br>    assert foobar.info()[\"size\"] == 1<br><br>Using pipelining is straightforward as well:<br><br>    from pyhlld import HlldClient<br><br>    # Create a client to a local hlld server, default port<br>    client = HlldClient(\"localhost\")<br><br>    # Get or create the pipe set<br>    pipe = client.create_set(\"pipe\").pipeline()<br><br>    # Chain multiple add commands<br>    results = pipe.add(\"foo\").add(\"bar\").add(\"baz\").execute()<br>    assert results[0]<br>    assert results[1]<br>    assert results[2]\n          </div>"}, "last_serial": 797283, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4312c1a50e3c042073ddbe2473770554", "sha256": "26ae2fef333487f0258088274518615035111f74e4914d09cc778f916a159fb5"}, "downloads": -1, "filename": "pyhlld-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4312c1a50e3c042073ddbe2473770554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4813, "upload_time": "2013-05-17T22:09:21", "upload_time_iso_8601": "2013-05-17T22:09:21.061066Z", "url": "https://files.pythonhosted.org/packages/dc/3e/01b7d4d49f79a86ab533c51ba1f3b47620975339c0f7852f872d904318cb/pyhlld-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "95a604fc91a094caf9821719ab82b587", "sha256": "4828d55be4ba1c5a1109b3beed20972d97a38f181fd956a1db7b05a5a26f499f"}, "downloads": -1, "filename": "pyhlld-0.1.1.tar.gz", "has_sig": false, "md5_digest": "95a604fc91a094caf9821719ab82b587", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4860, "upload_time": "2013-05-21T23:43:12", "upload_time_iso_8601": "2013-05-21T23:43:12.364688Z", "url": "https://files.pythonhosted.org/packages/8b/08/67f3bc9f670d8f5998aa8fe2c42acb4779d1d2f0f41bb88efab600d361d1/pyhlld-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "1e63c24c10d2019e1b5f78814a222ce1", "sha256": "3f724d369f7ca82da949e888456b0c15b8c944cb0ff9010140e3194153c12ae5"}, "downloads": -1, "filename": "pyhlld-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1e63c24c10d2019e1b5f78814a222ce1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4881, "upload_time": "2013-05-22T20:41:51", "upload_time_iso_8601": "2013-05-22T20:41:51.605908Z", "url": "https://files.pythonhosted.org/packages/c0/c5/e8336b5868fbe2426d60c6a273ff271f13be41db6686a320802ff5f0116a/pyhlld-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1e63c24c10d2019e1b5f78814a222ce1", "sha256": "3f724d369f7ca82da949e888456b0c15b8c944cb0ff9010140e3194153c12ae5"}, "downloads": -1, "filename": "pyhlld-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1e63c24c10d2019e1b5f78814a222ce1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4881, "upload_time": "2013-05-22T20:41:51", "upload_time_iso_8601": "2013-05-22T20:41:51.605908Z", "url": "https://files.pythonhosted.org/packages/c0/c5/e8336b5868fbe2426d60c6a273ff271f13be41db6686a320802ff5f0116a/pyhlld-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:22 2020"}