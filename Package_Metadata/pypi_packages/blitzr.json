{"info": {"author": "Blitzr", "author_email": "contact@blitzr.com", "bugtrack_url": null, "classifiers": [], "description": "Blitzr Official Python Client\n================\n\nA Python API client for the [Blitzr API](https://blitzr.io).\n\nTo use this client you will need an API key, you can request it at : [https://blitzr.io](https://blitzr.io/#contact).\n\n\n----------\n\nDocumentation\n---------------\n\nYou can find the [complete package documentation](http://blitzr.github.io/blitzr-python/).\n\nYou can also refer to the official [Blitzr API reference](https://blitzr.io/doc) to have more informations.\n----------\n\n\nInstallation\n---------------\n\nThis can be installed via our [pypi package](https://pypi.python.org/pypi/blitzr) using:\n\n```\npip install blitzr\n```\n----------\n\nGetting Started\n---------------------\n\nYou just need to instanciate a **BlitzrClient** and call its methods.\n\n**Example**\n\n```python\nfrom blitzr import BlitzrClient\n\nblitzr = BlitzrClient(your_api_key)\n\neminem = blitzr.get_artist(slug='eminem')\nprint eminem.get('real_name')\n\n# prints\n# Marshall Bruce Mathers III\n```\n\nYou can call list APIs by two methods: with or without a generator.\n\nThe basic methods like **get_artist_releases** returns a list or X desired releases from the given artist. You will have to manage the pagination by yourself with the **start** and **limit** parameters (defaults are start=0 and limit=10).\n\n**Example**\n\n```python\nfrom blitzr import BlitzrClient\n\nblitzr = BlitzrClient(your_api_key)\n\nreleases = blitzr.get_artist_releases(slug='eminem')\nfor release in releases:\n    print release.get('name')\n\n# prints\n#\n# Marshall Bruce Mathers III\n# The Vinyl LPs\n# MNEP\n# Live From Comerica Park\n# Phenomenal\n# Detroit Vs. Everybody\n# Shady Classics Mixtape\n# Headlights\n# Guts Over Fear\n# The Monster\n# Berzerk\n```\n\nThe second option will make the pagination easier. You can call the **iter_artist_releases** to get a **generator**. This generator will call automatically the API when you reach the end of the current items list. So you just have to iterate on this generator to get all the documents to retrieve. The parameter **limit** here is the number of elements to retrieve by query in the generator.\n\n**Example**\n\n```python\nfrom blitzr import BlitzrClient\n\nblitzr = BlitzrClient(your_api_key)\n\nreleases = blitzr.iter_artist_releases(slug='eminem')\nfor release in releases:\n    print release.get('name')\n\n# prints\n#\n# Marshall Bruce Mathers III\n# The Vinyl LPs\n# MNEP\n# Live From Comerica Park\n# Phenomenal\n# Detroit Vs. Everybody\n# Shady Classics Mixtape\n# Headlights\n# Guts Over Fear\n# The Monster\n# Berzerk\n# Rap God\n# Survival\n# The Marshall Mathers LP 2\n# E\n# Shady Unit\n# Eminem The Marshall Mathers\n#\n# ... and more until the end\n\n```\n\n----------\n\nSearchGenerator\n-----------------------\n\nThe **SearchGenerator** is a custom Generator for **Search requests** that provides **length compatibility.**\n\nThe only non standard generators are those returned by the search queries. They are differents by their ability to retreive the total count of elements to generate.\n\nYou will be able to call the **len()** method on the generator.\n\n**Example**\n\n```python\nfrom blitzr import BlitzrClient\n\nblitzr = BlitzrClient(your_api_key)\n\nartists = blitzr.search_iter_artist(query='emine', autocomplete=True)\n\nprint len(artists)\n\n# prints\n#\n# 80\n```\n\nThen it works exactly as all other generators.\n\n**Example**\n\n```python\nfor artist in artists:\n    print artist.get('name')\n# prints\n#\n# Emine\n# Emine\n# Eminem\n# Emine Krasniqi\n# Eminence\n# Eminent\n# Eminent\n# ...\n```", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/blitzr/blitzr-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "blitzr", "package_url": "https://pypi.org/project/blitzr/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/blitzr/", "project_urls": {"Homepage": "https://github.com/blitzr/blitzr-python"}, "release_url": "https://pypi.org/project/blitzr/1.1.3/", "requires_dist": null, "requires_python": "", "summary": "Blitzr Python Client", "version": "1.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Blitzr Official Python Client<br>================<br><br>A Python API client for the [Blitzr API](https://blitzr.io).<br><br>To use this client you will need an API key, you can request it at : [https://blitzr.io](https://blitzr.io/#contact).<br><br><br>----------<br><br>Documentation<br>---------------<br><br>You can find the [complete package documentation](http://blitzr.github.io/blitzr-python/).<br><br>You can also refer to the official [Blitzr API reference](https://blitzr.io/doc) to have more informations.<br>----------<br><br><br>Installation<br>---------------<br><br>This can be installed via our [pypi package](https://pypi.python.org/pypi/blitzr) using:<br><br>```<br>pip install blitzr<br>```<br>----------<br><br>Getting Started<br>---------------------<br><br>You just need to instanciate a **BlitzrClient** and call its methods.<br><br>**Example**<br><br>```python<br>from blitzr import BlitzrClient<br><br>blitzr = BlitzrClient(your_api_key)<br><br>eminem = blitzr.get_artist(slug='eminem')<br>print eminem.get('real_name')<br><br># prints<br># Marshall Bruce Mathers III<br>```<br><br>You can call list APIs by two methods: with or without a generator.<br><br>The basic methods like **get_artist_releases** returns a list or X desired releases from the given artist. You will have to manage the pagination by yourself with the **start** and **limit** parameters (defaults are start=0 and limit=10).<br><br>**Example**<br><br>```python<br>from blitzr import BlitzrClient<br><br>blitzr = BlitzrClient(your_api_key)<br><br>releases = blitzr.get_artist_releases(slug='eminem')<br>for release in releases:<br>    print release.get('name')<br><br># prints<br>#<br># Marshall Bruce Mathers III<br># The Vinyl LPs<br># MNEP<br># Live From Comerica Park<br># Phenomenal<br># Detroit Vs. Everybody<br># Shady Classics Mixtape<br># Headlights<br># Guts Over Fear<br># The Monster<br># Berzerk<br>```<br><br>The second option will make the pagination easier. You can call the **iter_artist_releases** to get a **generator**. This generator will call automatically the API when you reach the end of the current items list. So you just have to iterate on this generator to get all the documents to retrieve. The parameter **limit** here is the number of elements to retrieve by query in the generator.<br><br>**Example**<br><br>```python<br>from blitzr import BlitzrClient<br><br>blitzr = BlitzrClient(your_api_key)<br><br>releases = blitzr.iter_artist_releases(slug='eminem')<br>for release in releases:<br>    print release.get('name')<br><br># prints<br>#<br># Marshall Bruce Mathers III<br># The Vinyl LPs<br># MNEP<br># Live From Comerica Park<br># Phenomenal<br># Detroit Vs. Everybody<br># Shady Classics Mixtape<br># Headlights<br># Guts Over Fear<br># The Monster<br># Berzerk<br># Rap God<br># Survival<br># The Marshall Mathers LP 2<br># E<br># Shady Unit<br># Eminem The Marshall Mathers<br>#<br># ... and more until the end<br><br>```<br><br>----------<br><br>SearchGenerator<br>-----------------------<br><br>The **SearchGenerator** is a custom Generator for **Search requests** that provides **length compatibility.**<br><br>The only non standard generators are those returned by the search queries. They are differents by their ability to retreive the total count of elements to generate.<br><br>You will be able to call the **len()** method on the generator.<br><br>**Example**<br><br>```python<br>from blitzr import BlitzrClient<br><br>blitzr = BlitzrClient(your_api_key)<br><br>artists = blitzr.search_iter_artist(query='emine', autocomplete=True)<br><br>print len(artists)<br><br># prints<br>#<br># 80<br>```<br><br>Then it works exactly as all other generators.<br><br>**Example**<br><br>```python<br>for artist in artists:<br>    print artist.get('name')<br># prints<br>#<br># Emine<br># Emine<br># Eminem<br># Emine Krasniqi<br># Eminence<br># Eminent<br># Eminent<br># ...<br>```\n          </div>"}, "last_serial": 2585158, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "e8577790b7c611d305c24df4bd085e27", "sha256": "5b07e1b011309878229ee45f04a1c80a0c9901b6a0e4a99a174ab54d83ad3e6c"}, "downloads": -1, "filename": "blitzr-1.0.0.tar.gz", "has_sig": false, "md5_digest": "e8577790b7c611d305c24df4bd085e27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6961, "upload_time": "2016-03-08T10:17:53", "upload_time_iso_8601": "2016-03-08T10:17:53.946928Z", "url": "https://files.pythonhosted.org/packages/7c/3f/8316eb59519640824b0f5ae5a0c53326b96865e21c80f596b96969024ad8/blitzr-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "40041fa0ee8ffcd39fd34ad66f284d87", "sha256": "d3b3f24e8910df372e0290dfc9295c01cce1a700a58b9d0b54fcb3d1e3305954"}, "downloads": -1, "filename": "blitzr-1.0.1.tar.gz", "has_sig": false, "md5_digest": "40041fa0ee8ffcd39fd34ad66f284d87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7398, "upload_time": "2016-03-08T11:38:56", "upload_time_iso_8601": "2016-03-08T11:38:56.562485Z", "url": "https://files.pythonhosted.org/packages/87/bc/83216746cae046b701b802cd69cc6b6731a6715d61504259fde5e51223a5/blitzr-1.0.1.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2d9ddc81b8fa1dc4e79ef54d9a33e87a", "sha256": "5ed0cb453d81efebd31342e511860207b0c3772a8d3880ba0a477a712df7c383"}, "downloads": -1, "filename": "blitzr-1.0.3.tar.gz", "has_sig": false, "md5_digest": "2d9ddc81b8fa1dc4e79ef54d9a33e87a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7394, "upload_time": "2016-03-21T09:48:01", "upload_time_iso_8601": "2016-03-21T09:48:01.760585Z", "url": "https://files.pythonhosted.org/packages/bb/b7/b50e128493ae5f581821e0056399cd2d10e232445af83c5a5cf1e73cf2a7/blitzr-1.0.3.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "fa0d5e710c0f08f17d5cc1b724632005", "sha256": "699742b5a18ee5ff25ce15851eaf1b4b26faf39c0b7afe658048e6631517245c"}, "downloads": -1, "filename": "blitzr-1.0.5.tar.gz", "has_sig": false, "md5_digest": "fa0d5e710c0f08f17d5cc1b724632005", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7438, "upload_time": "2016-04-12T11:52:22", "upload_time_iso_8601": "2016-04-12T11:52:22.302362Z", "url": "https://files.pythonhosted.org/packages/c6/d3/dd903841217e5f36b992c39eeb110725eb19ba35fd01b394554f51ece29a/blitzr-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "88a47876f892c00926e5af8c945d5df1", "sha256": "46babbcd7871e8a62d29d814aa2c96c75e92df0259d0bd84360d325a8e5ca559"}, "downloads": -1, "filename": "blitzr-1.0.6.tar.gz", "has_sig": false, "md5_digest": "88a47876f892c00926e5af8c945d5df1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7436, "upload_time": "2016-04-12T12:26:33", "upload_time_iso_8601": "2016-04-12T12:26:33.233513Z", "url": "https://files.pythonhosted.org/packages/04/23/aab413d63e09d75d8f68a7c4ee483927e39748136f18e3db0ebcea5809d7/blitzr-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "033497a67c12a3bc971dba66d94c9437", "sha256": "38a5bd75ab7811618a3614db9dbc0dd2ce8613812f27c20e9d8ef83bc8be74a8"}, "downloads": -1, "filename": "blitzr-1.0.7.tar.gz", "has_sig": false, "md5_digest": "033497a67c12a3bc971dba66d94c9437", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7183, "upload_time": "2016-05-19T09:30:52", "upload_time_iso_8601": "2016-05-19T09:30:52.322609Z", "url": "https://files.pythonhosted.org/packages/cb/4e/28ac028e10a1104c941972fbb6776bfbe8d86b9fd9d774d27d9a5739fc4a/blitzr-1.0.7.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "cee79e48d925bd8e95434abee83e8356", "sha256": "3c441203172494b3b8e04668fbfcb142705ae5aec92a4eb2447f7b7f7a24d47e"}, "downloads": -1, "filename": "blitzr-1.1.0.tar.gz", "has_sig": false, "md5_digest": "cee79e48d925bd8e95434abee83e8356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7424, "upload_time": "2016-05-19T15:19:47", "upload_time_iso_8601": "2016-05-19T15:19:47.069057Z", "url": "https://files.pythonhosted.org/packages/5d/3f/b91eec9695e06eac2ee1f76b23807106c1f67d5fb8f1f12ac1af3ec87357/blitzr-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "eaa879f70093262c0d71f4f35f27e281", "sha256": "998dbe673d58cc8e417737aa3cbb84bf15778f1efb4e45c86ebb8e51424db9ff"}, "downloads": -1, "filename": "blitzr-1.1.1.tar.gz", "has_sig": false, "md5_digest": "eaa879f70093262c0d71f4f35f27e281", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7032, "upload_time": "2016-09-30T11:34:30", "upload_time_iso_8601": "2016-09-30T11:34:30.142485Z", "url": "https://files.pythonhosted.org/packages/85/55/1d7a34ce5ed56c123f4af1378aa6b96be009aae7c41526f8617cfacabe21/blitzr-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "ee861cb9053b9292ae19bf8c4bfafe4a", "sha256": "9035577bd35900183e7ea9fc19785ceac75fd01cb21696f1eb9e8a6b3b6f7810"}, "downloads": -1, "filename": "blitzr-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ee861cb9053b9292ae19bf8c4bfafe4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8200, "upload_time": "2017-01-16T11:33:00", "upload_time_iso_8601": "2017-01-16T11:33:00.443306Z", "url": "https://files.pythonhosted.org/packages/31/04/942c85ef4d8c0bebdb15b5a2ed0c58bf1fd78fe8772f5e145a1550e52772/blitzr-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "ac6b65f5e008241771e380af180d68bf", "sha256": "410a77b55a5c0b2d05366ca6ecf910bd729db7223c163d2d48cfe1c85bc67619"}, "downloads": -1, "filename": "blitzr-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ac6b65f5e008241771e380af180d68bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8245, "upload_time": "2017-01-19T15:03:59", "upload_time_iso_8601": "2017-01-19T15:03:59.332977Z", "url": "https://files.pythonhosted.org/packages/60/f3/4aab78c64ad365054ebc2ce42859cb55a88f532ab7209774d6522c5a990e/blitzr-1.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac6b65f5e008241771e380af180d68bf", "sha256": "410a77b55a5c0b2d05366ca6ecf910bd729db7223c163d2d48cfe1c85bc67619"}, "downloads": -1, "filename": "blitzr-1.1.3.tar.gz", "has_sig": false, "md5_digest": "ac6b65f5e008241771e380af180d68bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8245, "upload_time": "2017-01-19T15:03:59", "upload_time_iso_8601": "2017-01-19T15:03:59.332977Z", "url": "https://files.pythonhosted.org/packages/60/f3/4aab78c64ad365054ebc2ce42859cb55a88f532ab7209774d6522c5a990e/blitzr-1.1.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:04 2020"}