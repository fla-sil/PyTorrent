{"info": {"author": "Michael Milton", "author_email": "michael.r.milton@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Software Development :: Version Control", "Topic :: Software Development :: Version Control :: Git"], "description": "# Regulagity\n## Introduction\nRegulagity (reh-gew-la-git-ee) is a command-line tool for measuring activity in a git repo, ultimately producing a single number that summarises a repo.\n\nFor example, you can ask \"how many commits per year does this repo have?\" or \"what proportion of months does this repo have new commits?\". Both of these are good summaries of how *active* a repo is.\n\n## Installation\nRun:\n```bash\npip install regulagity\n```\n\n## Usage\n```bash\nUsage: regulagity [OPTIONS] [LOCATION]\n\n  Calculates summary statistics for the git repository located at LOCATION.\n  LOCATION must be the path either to a local git repository or to a git\n  remote, e.g. `/home/michael/Programming/Regulagity/` or\n  `https://github.com/TMiguelT/Regulagity.git`\n\nOptions:\n  --period TEXT              Period of time to summarise commits over. This\n                             consists of an optional number followed by a\n                             letter code, e.g. `2W` means two weeks, `3M`\n                             means 3 months, `Y` means 1 year etc. For a full\n                             reference on these string codes, refer to\n                             http://pandas.pydata.org/pandas-\n                             docs/stable/user_guide/timeseries.html#offset-\n                             aliases\n  --stat [proportion|count]  The way we summarise each commit over the time\n                             period. `proportion` indicates that we should\n                             calculate what proportion of the time period has\n                             any commits (e.g. how many weeks on average have\n                             any activity) whereas `count` indicates that we\n                             should take the average number of commits in this\n                             time period (e.g. how many commits are on average\n                             made per week)\n  --help                     Show this message and exit.\n```\n\n## Examples\n* What proportion of months have had any commit activity since this repo was created?\n    `regulagity --period M --stat proportion https://github.com/TMiguelT/Regulagity.git`\n* What is the average commits per fortnight in this repo?\n    ` regulagity --period 2W --stat count /home/michael/Programming/Regulargity`\n\n## Motivation\nThere are numerous other tools that summarise git activity, for example:\n\n* <http://gitstats.sourceforge.net/>\n* <https://www.npmjs.com/package/git-stats>\n* <https://github.com/src-d/hercules>\n* <https://github.com/ejwa/gitinspector>\n\nHowever, when comparing repos, perhaps because you want to use the best supported and \nmaintained option, you really only want a single number you can use to easily compare \nthem. For this reason, `regulagity` only ever outputs a single number for a repo, not\na plot or a table.\n\nThe reason `regulagity` supports analyses like \"what proportion of months have had any\nactivity\" is because it avoids any biases you might get by asking \"what is the average\nnumber of commits\" or \"average lines changed\". These can be biased by a repo that has\na million commits over a single month, because it will still has a high number of commits \nper month on average, even if it's been abandoned since 2015. The same issue is \nencountered for lines-of-code. Asking only if there has been *any* activity of a given \nperiod allows you to better compare repos, and allows you to be certain that a high number\nmeans a better amount of support. You can even use this same statistic to compare open \nsource repos to commercial products, because you can also ask \"what proportion of months\nhave a new update to this software?\".\n\n## Roadmap\nPlanned features:\n\n* Allow calculation of average lines-of-code, not just commit numbers\n* Allow custom date-ranges for the query, e.g. \"in the last year\" rather than \"for the \n    entire commit history\"\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/TMiguelT/Regulagity", "keywords": "git activity summary", "license": "", "maintainer": "", "maintainer_email": "", "name": "regulagity", "package_url": "https://pypi.org/project/regulagity/", "platform": "", "project_url": "https://pypi.org/project/regulagity/", "project_urls": {"Homepage": "https://github.com/TMiguelT/Regulagity"}, "release_url": "https://pypi.org/project/regulagity/0.0.2/", "requires_dist": ["gitpython", "click", "pandas"], "requires_python": "", "summary": "A tool for measuring the activity of a git repo using a variety of single summary statistics", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Regulagity</h1>\n<h2>Introduction</h2>\n<p>Regulagity (reh-gew-la-git-ee) is a command-line tool for measuring activity in a git repo, ultimately producing a single number that summarises a repo.</p>\n<p>For example, you can ask \"how many commits per year does this repo have?\" or \"what proportion of months does this repo have new commits?\". Both of these are good summaries of how <em>active</em> a repo is.</p>\n<h2>Installation</h2>\n<p>Run:</p>\n<pre>pip install regulagity\n</pre>\n<h2>Usage</h2>\n<pre>Usage: regulagity <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>LOCATION<span class=\"o\">]</span>\n\n  Calculates summary statistics <span class=\"k\">for</span> the git repository located at LOCATION.\n  LOCATION must be the path either to a <span class=\"nb\">local</span> git repository or to a git\n  remote, e.g. <span class=\"sb\">`</span>/home/michael/Programming/Regulagity/<span class=\"sb\">`</span> or\n  <span class=\"sb\">`</span>https://github.com/TMiguelT/Regulagity.git<span class=\"sb\">`</span>\n\nOptions:\n  --period TEXT              Period of <span class=\"nb\">time</span> to summarise commits over. This\n                             consists of an optional number followed by a\n                             letter code, e.g. <span class=\"sb\">`</span>2W<span class=\"sb\">`</span> means two weeks, <span class=\"sb\">`</span>3M<span class=\"sb\">`</span>\n                             means <span class=\"m\">3</span> months, <span class=\"sb\">`</span>Y<span class=\"sb\">`</span> means <span class=\"m\">1</span> year etc. For a full\n                             reference on these string codes, refer to\n                             http://pandas.pydata.org/pandas-\n                             docs/stable/user_guide/timeseries.html#offset-\n                             aliases\n  --stat <span class=\"o\">[</span>proportion<span class=\"p\">|</span>count<span class=\"o\">]</span>  The way we summarise each commit over the <span class=\"nb\">time</span>\n                             period. <span class=\"sb\">`</span>proportion<span class=\"sb\">`</span> indicates that we should\n                             calculate what proportion of the <span class=\"nb\">time</span> period has\n                             any commits <span class=\"o\">(</span>e.g. how many weeks on average have\n                             any activity<span class=\"o\">)</span> whereas <span class=\"sb\">`</span>count<span class=\"sb\">`</span> indicates that we\n                             should take the average number of commits in this\n                             <span class=\"nb\">time</span> period <span class=\"o\">(</span>e.g. how many commits are on average\n                             made per week<span class=\"o\">)</span>\n  --help                     Show this message and exit.\n</pre>\n<h2>Examples</h2>\n<ul>\n<li>What proportion of months have had any commit activity since this repo was created?\n<code>regulagity --period M --stat proportion https://github.com/TMiguelT/Regulagity.git</code></li>\n<li>What is the average commits per fortnight in this repo?\n<code>regulagity --period 2W --stat count /home/michael/Programming/Regulargity</code></li>\n</ul>\n<h2>Motivation</h2>\n<p>There are numerous other tools that summarise git activity, for example:</p>\n<ul>\n<li><a href=\"http://gitstats.sourceforge.net/\" rel=\"nofollow\">http://gitstats.sourceforge.net/</a></li>\n<li><a href=\"https://www.npmjs.com/package/git-stats\" rel=\"nofollow\">https://www.npmjs.com/package/git-stats</a></li>\n<li><a href=\"https://github.com/src-d/hercules\" rel=\"nofollow\">https://github.com/src-d/hercules</a></li>\n<li><a href=\"https://github.com/ejwa/gitinspector\" rel=\"nofollow\">https://github.com/ejwa/gitinspector</a></li>\n</ul>\n<p>However, when comparing repos, perhaps because you want to use the best supported and\nmaintained option, you really only want a single number you can use to easily compare\nthem. For this reason, <code>regulagity</code> only ever outputs a single number for a repo, not\na plot or a table.</p>\n<p>The reason <code>regulagity</code> supports analyses like \"what proportion of months have had any\nactivity\" is because it avoids any biases you might get by asking \"what is the average\nnumber of commits\" or \"average lines changed\". These can be biased by a repo that has\na million commits over a single month, because it will still has a high number of commits\nper month on average, even if it's been abandoned since 2015. The same issue is\nencountered for lines-of-code. Asking only if there has been <em>any</em> activity of a given\nperiod allows you to better compare repos, and allows you to be certain that a high number\nmeans a better amount of support. You can even use this same statistic to compare open\nsource repos to commercial products, because you can also ask \"what proportion of months\nhave a new update to this software?\".</p>\n<h2>Roadmap</h2>\n<p>Planned features:</p>\n<ul>\n<li>Allow calculation of average lines-of-code, not just commit numbers</li>\n<li>Allow custom date-ranges for the query, e.g. \"in the last year\" rather than \"for the\nentire commit history\"</li>\n</ul>\n\n          </div>"}, "last_serial": 6511690, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9ca38616f368810b70af81c01659a961", "sha256": "c843e86cbdd3f434d81c6506b3c4fcbf0b617b5338c8f9a067dc20f5ba35b637"}, "downloads": -1, "filename": "regulagity-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9ca38616f368810b70af81c01659a961", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6612, "upload_time": "2020-01-23T13:37:22", "upload_time_iso_8601": "2020-01-23T13:37:22.729796Z", "url": "https://files.pythonhosted.org/packages/b9/31/cd3e08ad873c6013d60935abf2804c7d7d41e4a1f991f0e6c00a3befcae7/regulagity-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8f09b03e63d12ddf241427ea94cae8fe", "sha256": "66ff8f5fd05483de62ec032d2de77e510be4e6782970cdbf9559b08e5976377b"}, "downloads": -1, "filename": "regulagity-0.0.1.tar.gz", "has_sig": false, "md5_digest": "8f09b03e63d12ddf241427ea94cae8fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3120, "upload_time": "2020-01-23T13:37:25", "upload_time_iso_8601": "2020-01-23T13:37:25.279254Z", "url": "https://files.pythonhosted.org/packages/c7/80/14d7caecca4f31c60cde24f1229d791f1385f60d9ef89cae1a91ffe8d546/regulagity-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0354d66c46ad599a28f78cb459048b62", "sha256": "ebd2c935cc73b098b74af9f302a07eab178b4a81677cd0c167b28cbeaba2793f"}, "downloads": -1, "filename": "regulagity-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0354d66c46ad599a28f78cb459048b62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7566, "upload_time": "2020-01-24T03:08:15", "upload_time_iso_8601": "2020-01-24T03:08:15.770034Z", "url": "https://files.pythonhosted.org/packages/cf/3d/1826b2cd319a907cef5ad6bc9b2397682b8949244a8ff67e9276c47c9678/regulagity-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62b66d5e38e2f923ab7db7c88b379783", "sha256": "78ae4ff0e7f576191cde5f82334299b9154264b750a570afcc21a761b77235c5"}, "downloads": -1, "filename": "regulagity-0.0.2.tar.gz", "has_sig": false, "md5_digest": "62b66d5e38e2f923ab7db7c88b379783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4284, "upload_time": "2020-01-24T03:08:17", "upload_time_iso_8601": "2020-01-24T03:08:17.118539Z", "url": "https://files.pythonhosted.org/packages/d6/79/95066165991019582ab63d33f89926dd93f74e7016303361a950875cea57/regulagity-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0354d66c46ad599a28f78cb459048b62", "sha256": "ebd2c935cc73b098b74af9f302a07eab178b4a81677cd0c167b28cbeaba2793f"}, "downloads": -1, "filename": "regulagity-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0354d66c46ad599a28f78cb459048b62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7566, "upload_time": "2020-01-24T03:08:15", "upload_time_iso_8601": "2020-01-24T03:08:15.770034Z", "url": "https://files.pythonhosted.org/packages/cf/3d/1826b2cd319a907cef5ad6bc9b2397682b8949244a8ff67e9276c47c9678/regulagity-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62b66d5e38e2f923ab7db7c88b379783", "sha256": "78ae4ff0e7f576191cde5f82334299b9154264b750a570afcc21a761b77235c5"}, "downloads": -1, "filename": "regulagity-0.0.2.tar.gz", "has_sig": false, "md5_digest": "62b66d5e38e2f923ab7db7c88b379783", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4284, "upload_time": "2020-01-24T03:08:17", "upload_time_iso_8601": "2020-01-24T03:08:17.118539Z", "url": "https://files.pythonhosted.org/packages/d6/79/95066165991019582ab63d33f89926dd93f74e7016303361a950875cea57/regulagity-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:09 2020"}