{"info": {"author": "Vladimir Aleshin", "author_email": "rancvova@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Verbs in func names counter\n===========================\n\n| This script calculate verbs count in func names in ``.py`` files.\n| Script check all folders recursively. Default folder names for\n  search:\\\n| *django, flask, pyramid, reddit, requests, sqlalchemy.*\\\n| You can add your folders to check list.\n\nHow to install\n==============\n\n| Run ``pip3 install verb-counter``\n| Run on CLI for update nltk if it need:\\\n\n::\n\n    $ python3\n    >> import nltk\n    >> nltk.download('all')\n\nHow to use\n==========\n\n| If you want check default folders:\\\n| ``$ verbs``\n| If you want add your project folders, print it space-separated:\n| ``$ verbs -p myproject1 myproject2``\n| If you want check all funcs names:\n| ``verbs -a``\n\nUsage example:\n==============\n\nWe have some folders structure with ``dclint.py``:\n\n::\n\n    \u251c\u2500\u2500 dclint.py\n    \u251c\u2500\u2500 django\n    \u2502   \u251c\u2500\u2500 css\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u251c\u2500\u2500 my_app.py\n    \u2502\n    \u251c\u2500\u2500 flask\n    \u2502   \u251c\u2500\u2500 favicon.ico\n    \u2502   \u251c\u2500\u2500 polls.py\n    \u2502   \u251c\u2500\u2500 garbage_files\n    \u2502   \u2502   \u251c\u2500\u2500bootstrap.min.js\n    \u2502   \u2502   \u251c\u2500\u2500html5shiv.min.js\n    \u2502   \u2502   \u251c\u2500\u2500thrash.py\n    \u2502\n    \u251c\u2500\u2500 myproject\n    \u2502   \u251c\u2500\u2500ie-emulation-modes-warning.js\n    \u2502   \u251c\u2500\u2500old_version.py\n    \u2502   \u251c\u2500\u2500new_file.py\n\n| In all folders - 5 ``.py`` files.\\\n| All files have funcs like this (for example):\n\n::\n\n    def get_all_names(names):\n        for name in names:\n            print('name: {name}'.format(name=name))\n\n::\n\n    def give_money(user, money):\n        print('{user} now have {money} $'.format(user=user,\n         money=money))\n\n::\n\n    def check_exist(folder):\n        if os.path.exist(folder):\n            return True\n\nAnd another funcs.\n\n| Folders ``flask`` and ``django`` already in check list, but we need\n  add ``myproject``.\\\n| Run check:\\\n| ``$ verbs -p myproject``\\\n| Result:\n\n::\n\n    dirpath: ./myproject:\n    total \".py\" files count: 1\n    verb \"get\" count: 1\n    ------------\n    dirpath: ./django:\n    total \".py\" files count: 3\n    verb \"get\" count: 3\n    verb \"give\" count: 2\n    ------------\n    dirpath: ./flask:\n    total \".py\" files count: 1\n    verb \"get\" count: 1\n    ------------\n    total verbs: 4\n    unique verbs: 2\n    \"get\" in 3 projects\n    \"give\" in 1 projects\n\nLicense\n=======\n\nMIT license", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ranc58/verbs_counter", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "verb_counter", "package_url": "https://pypi.org/project/verb_counter/", "platform": "", "project_url": "https://pypi.org/project/verb_counter/", "project_urls": {"Homepage": "https://github.com/Ranc58/verbs_counter"}, "release_url": "https://pypi.org/project/verb_counter/1.2/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"verbs-in-func-names-counter\">\n<h2>Verbs in func names counter</h2>\n<div>\n<div>This script calculate verbs count in func names in <tt>.py</tt> files.</div>\n<div>Script check all folders recursively. Default folder names for\nsearch:</div>\n<div><em>django, flask, pyramid, reddit, requests, sqlalchemy.</em></div>\n<div>You can add your folders to check list.</div>\n</div>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<div>\n<div>Run <tt>pip3 install <span class=\"pre\">verb-counter</span></tt></div>\n<div>Run on CLI for update nltk if it need:</div>\n</div>\n<pre>$ python3\n&gt;&gt; import nltk\n&gt;&gt; nltk.download('all')\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<div>\n<div>If you want check default folders:</div>\n<div><tt>$ verbs</tt></div>\n<div>If you want add your project folders, print it space-separated:</div>\n<div><tt>$ verbs <span class=\"pre\">-p</span> myproject1 myproject2</tt></div>\n<div>If you want check all funcs names:</div>\n<div><tt>verbs <span class=\"pre\">-a</span></tt></div>\n</div>\n</div>\n<div id=\"usage-example\">\n<h2>Usage example:</h2>\n<p>We have some folders structure with <tt>dclint.py</tt>:</p>\n<pre>\u251c\u2500\u2500 dclint.py\n\u251c\u2500\u2500 django\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u251c\u2500\u2500 bootstrap.min.css\n\u2502   \u251c\u2500\u2500 my_app.py\n\u2502\n\u251c\u2500\u2500 flask\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 polls.py\n\u2502   \u251c\u2500\u2500 garbage_files\n\u2502   \u2502   \u251c\u2500\u2500bootstrap.min.js\n\u2502   \u2502   \u251c\u2500\u2500html5shiv.min.js\n\u2502   \u2502   \u251c\u2500\u2500thrash.py\n\u2502\n\u251c\u2500\u2500 myproject\n\u2502   \u251c\u2500\u2500ie-emulation-modes-warning.js\n\u2502   \u251c\u2500\u2500old_version.py\n\u2502   \u251c\u2500\u2500new_file.py\n</pre>\n<div>\n<div>In all folders - 5 <tt>.py</tt> files.</div>\n<div>All files have funcs like this (for example):</div>\n</div>\n<pre>def get_all_names(names):\n    for name in names:\n        print('name: {name}'.format(name=name))\n</pre>\n<pre>def give_money(user, money):\n    print('{user} now have {money} $'.format(user=user,\n     money=money))\n</pre>\n<pre>def check_exist(folder):\n    if os.path.exist(folder):\n        return True\n</pre>\n<p>And another funcs.</p>\n<div>\n<div>Folders <tt>flask</tt> and <tt>django</tt> already in check list, but we need\nadd <tt>myproject</tt>.</div>\n<div>Run check:</div>\n<div><tt>$ verbs <span class=\"pre\">-p</span> myproject</tt></div>\n<div>Result:</div>\n</div>\n<pre>dirpath: ./myproject:\ntotal \".py\" files count: 1\nverb \"get\" count: 1\n------------\ndirpath: ./django:\ntotal \".py\" files count: 3\nverb \"get\" count: 3\nverb \"give\" count: 2\n------------\ndirpath: ./flask:\ntotal \".py\" files count: 1\nverb \"get\" count: 1\n------------\ntotal verbs: 4\nunique verbs: 2\n\"get\" in 3 projects\n\"give\" in 1 projects\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT license</p>\n</div>\n\n          </div>"}, "last_serial": 3185507, "releases": {"1.2": [{"comment_text": "", "digests": {"md5": "d7d4ef065c3afaf7061773bbc2107121", "sha256": "6b93112a6922ed232dd03b02bc35c57c30f7351216f64f074a2c174330d4115e"}, "downloads": -1, "filename": "verb_counter-1.2.tar.gz", "has_sig": false, "md5_digest": "d7d4ef065c3afaf7061773bbc2107121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3672, "upload_time": "2017-09-19T13:37:21", "upload_time_iso_8601": "2017-09-19T13:37:21.534145Z", "url": "https://files.pythonhosted.org/packages/fd/12/ed310c23e78121fb3c81c55b0b1d35cc023cdea3799b24cab516abad2c28/verb_counter-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d7d4ef065c3afaf7061773bbc2107121", "sha256": "6b93112a6922ed232dd03b02bc35c57c30f7351216f64f074a2c174330d4115e"}, "downloads": -1, "filename": "verb_counter-1.2.tar.gz", "has_sig": false, "md5_digest": "d7d4ef065c3afaf7061773bbc2107121", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3672, "upload_time": "2017-09-19T13:37:21", "upload_time_iso_8601": "2017-09-19T13:37:21.534145Z", "url": "https://files.pythonhosted.org/packages/fd/12/ed310c23e78121fb3c81c55b0b1d35cc023cdea3799b24cab516abad2c28/verb_counter-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:36:55 2020"}