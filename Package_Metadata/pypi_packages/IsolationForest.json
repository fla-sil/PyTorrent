{"info": {"author": "Mike Simms", "author_email": "mike@mikesimms.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2"], "description": "[![C++](https://img.shields.io/badge/cpp-brightgreen.svg)]() [![Rust](https://img.shields.io/badge/rust-brightgreen.svg)](https://www.rust-lang.org) [![Python 2.7|3.7](https://img.shields.io/badge/python-2.7%2F3.7-brightgreen.svg)](https://www.python.org/) [![MIT license](http://img.shields.io/badge/license-MIT-brightgreen.svg)](http://opensource.org/licenses/MIT)\n\n# LibIsolationForest\n\n## Description\n\nThis project contains Rust, C++, and python implementations of the Isolation Forest algorithm. Isolation Forest is an anomaly detection algorithm based around a collection of randomly generated decision trees. For a full description of the algorithm, consult the original paper by the algorithm's creators:\n\nhttps://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/icdm08b.pdf\n\n## Python Example\n\nThe python implementation can be installed via pip:\n\n```pip install IsolationForest```\n\nHere's a short code snipet that shows how to use the Python version of the library. You can also read the file `test.py` for a complete example. As the library matures, I'll add more test examples to this file.\n\n```python\nfrom isolationforest import IsolationForest\n\nforest = IsolationForest.Forest(num_trees, sub_sampling_size)\n\nsample = IsolationForest.Sample(\"Training Sample 1\")\nfeatures = []\nfeatures.append({\"feature 1\": feature_1_value})\n# Add more features to the sample...\nfeatures.append({\"feature N\": feature_N_value})\nsample.add_features(features)\n# Add the features to the sample.\nforest.add_sample(sample)\n# Add more samples to the forest...\n\n# Create the forest.\nforest.create()\n\nsample = IsolationForest.Sample(\"Test Sample 1\")\nfeatures = []\nfeatures.append({\"feature 1\": feature_1_value})\n# Add more features to the sample...\nfeatures.append({\"feature N\": feature_N_value})\n# Add the features to the sample.\nsample.add_features(features)\n\n# Score the sample.\nscore = forest.score(sample)\nnormalized_score = forest.normalized_score(sample)\n```\n\n## Rust Example\n\nAn example of how to use the Rust version of the library can be found in `main.rs`. As the library matures, I'll add more test examples to this file.\n\n## C++ Example\n\nAn example of how to use the C++ version of the library can be found in `main.cpp`. As the library matures, I'll add more test examples to this file.\n\n## Version History\n\n### 1.0\n* Initial version.\n\n### 1.1\n* Added normalized scores.\n* Updated random number generation in rust, because it changed again.\n\n## License\n\nThis library is released under the MIT license, see LICENSE for details.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/msimms/LibIsolationForest", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "IsolationForest", "package_url": "https://pypi.org/project/IsolationForest/", "platform": "", "project_url": "https://pypi.org/project/IsolationForest/", "project_urls": {"Homepage": "https://github.com/msimms/LibIsolationForest"}, "release_url": "https://pypi.org/project/IsolationForest/1.1.0/", "requires_dist": null, "requires_python": "==2.7.*", "summary": "An implementation of the Isolation Forest anomaly detection algorithm.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"\" rel=\"nofollow\"><img alt=\"C++\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c7de9ba483fb51ca0de7d61aedcecf504b7947e6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6370702d627269676874677265656e2e737667\"></a> <a href=\"https://www.rust-lang.org\" rel=\"nofollow\"><img alt=\"Rust\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df997857e87f65aacb7f96ec1d8564f62478944f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f727573742d627269676874677265656e2e737667\"></a> <a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"Python 2.7|3.7\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87ffbf9843832cca6cc142e924db4fde6a106c76/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d322e37253246332e372d627269676874677265656e2e737667\"></a> <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/273c229cce783df6c95a151db83b1f00cf93b97c/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e737667\"></a></p>\n<h1>LibIsolationForest</h1>\n<h2>Description</h2>\n<p>This project contains Rust, C++, and python implementations of the Isolation Forest algorithm. Isolation Forest is an anomaly detection algorithm based around a collection of randomly generated decision trees. For a full description of the algorithm, consult the original paper by the algorithm's creators:</p>\n<p><a href=\"https://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/icdm08b.pdf\" rel=\"nofollow\">https://cs.nju.edu.cn/zhouzh/zhouzh.files/publication/icdm08b.pdf</a></p>\n<h2>Python Example</h2>\n<p>The python implementation can be installed via pip:</p>\n<p><code>pip install IsolationForest</code></p>\n<p>Here's a short code snipet that shows how to use the Python version of the library. You can also read the file <code>test.py</code> for a complete example. As the library matures, I'll add more test examples to this file.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">isolationforest</span> <span class=\"kn\">import</span> <span class=\"n\">IsolationForest</span>\n\n<span class=\"n\">forest</span> <span class=\"o\">=</span> <span class=\"n\">IsolationForest</span><span class=\"o\">.</span><span class=\"n\">Forest</span><span class=\"p\">(</span><span class=\"n\">num_trees</span><span class=\"p\">,</span> <span class=\"n\">sub_sampling_size</span><span class=\"p\">)</span>\n\n<span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"n\">IsolationForest</span><span class=\"o\">.</span><span class=\"n\">Sample</span><span class=\"p\">(</span><span class=\"s2\">\"Training Sample 1\"</span><span class=\"p\">)</span>\n<span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s2\">\"feature 1\"</span><span class=\"p\">:</span> <span class=\"n\">feature_1_value</span><span class=\"p\">})</span>\n<span class=\"c1\"># Add more features to the sample...</span>\n<span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s2\">\"feature N\"</span><span class=\"p\">:</span> <span class=\"n\">feature_N_value</span><span class=\"p\">})</span>\n<span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">add_features</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n<span class=\"c1\"># Add the features to the sample.</span>\n<span class=\"n\">forest</span><span class=\"o\">.</span><span class=\"n\">add_sample</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n<span class=\"c1\"># Add more samples to the forest...</span>\n\n<span class=\"c1\"># Create the forest.</span>\n<span class=\"n\">forest</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span>\n\n<span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"n\">IsolationForest</span><span class=\"o\">.</span><span class=\"n\">Sample</span><span class=\"p\">(</span><span class=\"s2\">\"Test Sample 1\"</span><span class=\"p\">)</span>\n<span class=\"n\">features</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s2\">\"feature 1\"</span><span class=\"p\">:</span> <span class=\"n\">feature_1_value</span><span class=\"p\">})</span>\n<span class=\"c1\"># Add more features to the sample...</span>\n<span class=\"n\">features</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span><span class=\"s2\">\"feature N\"</span><span class=\"p\">:</span> <span class=\"n\">feature_N_value</span><span class=\"p\">})</span>\n<span class=\"c1\"># Add the features to the sample.</span>\n<span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">add_features</span><span class=\"p\">(</span><span class=\"n\">features</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Score the sample.</span>\n<span class=\"n\">score</span> <span class=\"o\">=</span> <span class=\"n\">forest</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n<span class=\"n\">normalized_score</span> <span class=\"o\">=</span> <span class=\"n\">forest</span><span class=\"o\">.</span><span class=\"n\">normalized_score</span><span class=\"p\">(</span><span class=\"n\">sample</span><span class=\"p\">)</span>\n</pre>\n<h2>Rust Example</h2>\n<p>An example of how to use the Rust version of the library can be found in <code>main.rs</code>. As the library matures, I'll add more test examples to this file.</p>\n<h2>C++ Example</h2>\n<p>An example of how to use the C++ version of the library can be found in <code>main.cpp</code>. As the library matures, I'll add more test examples to this file.</p>\n<h2>Version History</h2>\n<h3>1.0</h3>\n<ul>\n<li>Initial version.</li>\n</ul>\n<h3>1.1</h3>\n<ul>\n<li>Added normalized scores.</li>\n<li>Updated random number generation in rust, because it changed again.</li>\n</ul>\n<h2>License</h2>\n<p>This library is released under the MIT license, see LICENSE for details.</p>\n\n          </div>"}, "last_serial": 5695346, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3c261d5d3d04e7bfd408893fa14c602f", "sha256": "0a5822b6db00f08de4f726b2559bffbfb2c0cdb503fcdc6d5ab5c75d47ab680d"}, "downloads": -1, "filename": "IsolationForest-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "3c261d5d3d04e7bfd408893fa14c602f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": "==2.7.*", "size": 4465, "upload_time": "2019-06-05T17:00:34", "upload_time_iso_8601": "2019-06-05T17:00:34.939017Z", "url": "https://files.pythonhosted.org/packages/f9/47/a76c5273c262c1c734688028a236a7ed7009b08e8d59c1d1f28907913bcf/IsolationForest-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3337ff4a085a0eb8f4fbebbc6f027620", "sha256": "172835c2806ca895bbc9cc8c5ef33a1da221610c7b9c989667f54694a2e377ad"}, "downloads": -1, "filename": "IsolationForest-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3337ff4a085a0eb8f4fbebbc6f027620", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7.*", "size": 3933, "upload_time": "2019-06-05T17:00:37", "upload_time_iso_8601": "2019-06-05T17:00:37.577705Z", "url": "https://files.pythonhosted.org/packages/56/08/eedf98a97f49eeb5353b3d292a4b36caddee05478d4ab29931245f46d809/IsolationForest-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0dac0ddc72c109fc8bec31aef3b33025", "sha256": "30a66f6bfe059e6b39031406d640c17000cb0730b9685cec96070710804a222f"}, "downloads": -1, "filename": "IsolationForest-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0dac0ddc72c109fc8bec31aef3b33025", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": "==2.7.*", "size": 5146, "upload_time": "2019-08-18T17:40:48", "upload_time_iso_8601": "2019-08-18T17:40:48.970786Z", "url": "https://files.pythonhosted.org/packages/52/e2/0d1b75969595e37564db1c6a21998ec3d73f7a704f23e2d4a4c9aba12423/IsolationForest-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c43b59569d38ab239f68263099fd9a5f", "sha256": "37aec4a4ce9f1ee7c5f2c26561351475f069a9246f63b174c00f0b21620e3a29"}, "downloads": -1, "filename": "IsolationForest-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c43b59569d38ab239f68263099fd9a5f", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7.*", "size": 4573, "upload_time": "2019-08-18T17:40:50", "upload_time_iso_8601": "2019-08-18T17:40:50.666945Z", "url": "https://files.pythonhosted.org/packages/5c/95/767b538c9ce90d00d550e29477f6ebdef6c431e7734c404991c051847513/IsolationForest-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0dac0ddc72c109fc8bec31aef3b33025", "sha256": "30a66f6bfe059e6b39031406d640c17000cb0730b9685cec96070710804a222f"}, "downloads": -1, "filename": "IsolationForest-1.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0dac0ddc72c109fc8bec31aef3b33025", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": "==2.7.*", "size": 5146, "upload_time": "2019-08-18T17:40:48", "upload_time_iso_8601": "2019-08-18T17:40:48.970786Z", "url": "https://files.pythonhosted.org/packages/52/e2/0d1b75969595e37564db1c6a21998ec3d73f7a704f23e2d4a4c9aba12423/IsolationForest-1.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c43b59569d38ab239f68263099fd9a5f", "sha256": "37aec4a4ce9f1ee7c5f2c26561351475f069a9246f63b174c00f0b21620e3a29"}, "downloads": -1, "filename": "IsolationForest-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c43b59569d38ab239f68263099fd9a5f", "packagetype": "sdist", "python_version": "source", "requires_python": "==2.7.*", "size": 4573, "upload_time": "2019-08-18T17:40:50", "upload_time_iso_8601": "2019-08-18T17:40:50.666945Z", "url": "https://files.pythonhosted.org/packages/5c/95/767b538c9ce90d00d550e29477f6ebdef6c431e7734c404991c051847513/IsolationForest-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:59 2020"}