{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# Intake-parquet\n\n[![Build Status](https://travis-ci.org/ContinuumIO/intake-parquet.svg?branch=master)](https://travis-ci.org/ContinuumIO/intake-parquet)\n[![Documentation Status](https://readthedocs.org/projects/intake-parquet/badge/?version=latest)](http://intake-parquet.readthedocs.io/en/latest/?badge=latest)\n\n[Intake data loader](https://github.com/ContinuumIO/intake/) interface to the parquet binary tabular data format.\n\nParquet is very popular in the big-data ecosystem, because it provides columnar\nand chunk-wise access to the data, with efficient encodings and compression. This makes\nthe format particularly effective for streaming through large subsections of even\nlarger data-sets, hence it's common use with Hadoop and Spark.\n\nParquet data may be single files, directories of files, or nested directories, where\nthe directory names are meaningful in the partitioning of the data.\n\n### Features\n\nThe parquet plugin allows for:\n\n- efficient metadata parsing, so you know the data types and number of records without\n  loading any data\n- random access of partitions\n- column and index selection, load only the data you need\n- passing of value-based filters, that you only load those partitions containing some\n  valid data (NB: does not filter the values within a partition)\n\n### Installation\n\nThe conda install instructions are:\n\n```\nconda install -c conda-forge intake-parquet\n```\n\n### Examples\n\nSee the notebook in the examples/ directory.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ContinuumIO/intake-parquet", "keywords": "", "license": "BSD", "maintainer": "Martin Durant", "maintainer_email": "martin.durant@utoronto.ca", "name": "intake-parquet", "package_url": "https://pypi.org/project/intake-parquet/", "platform": "", "project_url": "https://pypi.org/project/intake-parquet/", "project_urls": {"Homepage": "https://github.com/ContinuumIO/intake-parquet"}, "release_url": "https://pypi.org/project/intake-parquet/0.2.3/", "requires_dist": null, "requires_python": "", "summary": "Intake parquet plugin", "version": "0.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Intake-parquet</p>\n<p>[![Build Status](<a href=\"https://travis-ci.org/ContinuumIO/intake-parquet.svg?branch=master)%5D(https://travis-ci.org/ContinuumIO/intake-parquet\" rel=\"nofollow\">https://travis-ci.org/ContinuumIO/intake-parquet.svg?branch=master)](https://travis-ci.org/ContinuumIO/intake-parquet</a>)\n[![Documentation Status](<a href=\"https://readthedocs.org/projects/intake-parquet/badge/?version=latest)%5D(http://intake-parquet.readthedocs.io/en/latest/\" rel=\"nofollow\">https://readthedocs.org/projects/intake-parquet/badge/?version=latest)](http://intake-parquet.readthedocs.io/en/latest/</a>?badge=latest)</p>\n<p>[Intake data loader](<a href=\"https://github.com/ContinuumIO/intake/\" rel=\"nofollow\">https://github.com/ContinuumIO/intake/</a>) interface to the parquet binary tabular data format.</p>\n<p>Parquet is very popular in the big-data ecosystem, because it provides columnar\nand chunk-wise access to the data, with efficient encodings and compression. This makes\nthe format particularly effective for streaming through large subsections of even\nlarger data-sets, hence it\u2019s common use with Hadoop and Spark.</p>\n<p>Parquet data may be single files, directories of files, or nested directories, where\nthe directory names are meaningful in the partitioning of the data.</p>\n<p>### Features</p>\n<p>The parquet plugin allows for:</p>\n<ul>\n<li>efficient metadata parsing, so you know the data types and number of records without\nloading any data</li>\n<li>random access of partitions</li>\n<li>column and index selection, load only the data you need</li>\n<li>passing of value-based filters, that you only load those partitions containing some\nvalid data (NB: does not filter the values within a partition)</li>\n</ul>\n<p>### Installation</p>\n<p>The conda install instructions are:</p>\n<p><tt>`\nconda install <span class=\"pre\">-c</span> <span class=\"pre\">conda-forge</span> <span class=\"pre\">intake-parquet</span>\n`</tt></p>\n<p>### Examples</p>\n<p>See the notebook in the examples/ directory.</p>\n\n          </div>"}, "last_serial": 6119450, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "2c4bc41c60af93593970684065e0ed84", "sha256": "4d72e8faf2c3ca2f9a8311ffc73510040e764949b7706f44187895b278ca64be"}, "downloads": -1, "filename": "intake-parquet-0.2.1.tar.gz", "has_sig": false, "md5_digest": "2c4bc41c60af93593970684065e0ed84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119933, "upload_time": "2018-12-03T16:38:58", "upload_time_iso_8601": "2018-12-03T16:38:58.202623Z", "url": "https://files.pythonhosted.org/packages/d4/36/9eb49690dc17b2e82b769da8f60208b4552c16b9bbf286e97d654c670c0f/intake-parquet-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e21b4920ee1fc06cefbe704881cb947b", "sha256": "1d7ff4b87f9eb73caa59aa1f3304bfa762d82293541ff850b90ea281c0c670d2"}, "downloads": -1, "filename": "intake-parquet-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e21b4920ee1fc06cefbe704881cb947b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119628, "upload_time": "2019-08-09T20:51:24", "upload_time_iso_8601": "2019-08-09T20:51:24.719329Z", "url": "https://files.pythonhosted.org/packages/dd/bd/6ca31d0f9ec3387d88fb6809715941983280536e45a763fc9d705c72a7c5/intake-parquet-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "09b177bde218d7650ccc311b2bd4fca5", "sha256": "353078f8b3358abdf0b1fa959fb8bd7f40466c8d04c474f51015b13822b9b8e3"}, "downloads": -1, "filename": "intake-parquet-0.2.3.tar.gz", "has_sig": false, "md5_digest": "09b177bde218d7650ccc311b2bd4fca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119740, "upload_time": "2019-11-11T20:20:35", "upload_time_iso_8601": "2019-11-11T20:20:35.490824Z", "url": "https://files.pythonhosted.org/packages/b2/bc/dc04ac61e244a1d823f3ff0e31b127d957f93cd68709918e7bc05549a598/intake-parquet-0.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "09b177bde218d7650ccc311b2bd4fca5", "sha256": "353078f8b3358abdf0b1fa959fb8bd7f40466c8d04c474f51015b13822b9b8e3"}, "downloads": -1, "filename": "intake-parquet-0.2.3.tar.gz", "has_sig": false, "md5_digest": "09b177bde218d7650ccc311b2bd4fca5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 119740, "upload_time": "2019-11-11T20:20:35", "upload_time_iso_8601": "2019-11-11T20:20:35.490824Z", "url": "https://files.pythonhosted.org/packages/b2/bc/dc04ac61e244a1d823f3ff0e31b127d957f93cd68709918e7bc05549a598/intake-parquet-0.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:34 2020"}