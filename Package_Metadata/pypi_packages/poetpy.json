{"info": {"author": "Aaron Schlegel", "author_email": "aaron@aaronschlegel.me", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Poetpy\n\n[![Documentation Status](https://readthedocs.org/projects/poetpy/badge/?version=latest)](https://poetpy.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.org/aschleg/poetpy.svg?branch=master)](https://travis-ci.org/aschleg/poetpy)\n[![Build status](https://ci.appveyor.com/api/projects/status/jprq31sokv9rlbuh?svg=true)](https://ci.appveyor.com/project/aschleg/poetpy)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/7abf894070ba46418181f9d07af68838)](https://www.codacy.com/app/aschleg/poetpy?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=aschleg/poetpy&amp;utm_campaign=Badge_Grade)\n[![Coverage Status](https://coveralls.io/repos/github/aschleg/poetpy/badge.svg?branch=master)](https://coveralls.io/github/aschleg/poetpy?branch=master)\n![https://pypi.org/project/poetpy/](https://img.shields.io/badge/pypi%20version-1.1.1-blue.svg)\n![https://pypi.org/project/petpy/](https://img.shields.io/badge/python-3.4%2C%203.5%2C%203.6%2C%203.7-blue.svg)\n\nPython wrapper of the [PoetryDB API](http://poetrydb.org/).\n\n## Installation\n\n`poetpy` is must easily installed using `pip`.\n\n~~~ python\npip install poetpy\n~~~\n\nOtherwise, the project repository can be download and installed through invoking the \n`python install` command.\n\n~~~ python\npython setup.py install\n~~~\n\n## Examples\n\nExtracting poetry and poets from the PoetryDB API requires at least one `input_term` \nparameter. The `input_term` parameter results can be further refined with a corresponding \nsearch term. For example, let's say we are interested in finding all of William Shakespeare's \npoems and sonnets available in the PoetryDB API. \n\n~~~ python\nw = poetpy.get_poetry('author', 'William Shakespeare')\n~~~\n\nIn the above example, the `input_term` is 'author' and the author we are interested \nin finding is 'William Shakespeare'. \n\nIf we wanted to only output the lines and line counts of all of Shakespeare's poetry and sonnets, \nwe can use the `output` parameter to narrow the returned results.\n\n~~~ python\nw = poetpy.get_poetry('author', 'William Shakespeare', 'lines,linecounts')\n~~~\n\nThe default output format from the PoetryDB API is JSON; however, we can change the \noutput to text by specifying the `output_format` parameter. \n\n~~~ python\nw = poetpy.get_poetry('author', 'William Shakespeare', 'lines,linecounts', 'text')\n~~~\n\nThe output text format will be newline escaped.\n\nCombination searches are also allowed to enable users to further refine the returned search results. \nEach `input_term` should be given a corresponding search term delimited by a semi-colon. For example, \nlet's say we want to find all of []John Milton's](https://en.wikipedia.org/wiki/John_Milton) poetry \nwith [*Paradise Lost*](https://en.wikipedia.org/wiki/Paradise_Lost) in the title. \n\n~~~ python\nget_poetry('title,author', 'Paradise Lost;Milton')\n~~~\n\nDifferent `input_term` parameter combinations can also be performed. Taking the above example, \nlet's say we are actually only interested in finding Wordworth's poem *I Wandered Lonely As A Cloud*.\n\n~~~ python\nw = poetpy.get_poetry('author,title', 'William Shakespeare;I Wandered Lonely As A Cloud')\n~~~\n\n## Further Examples and Notebooks\n\n[![Binder](https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/aschleg/poetpy/master?filepath=notebooks)\n\nA set of [Jupyter Notebooks](http://jupyter.org/) that further explore the potential usage of `poetpy` \nand the PoetryDB API. The notebooks can also be opened interactively using [binder](https://mybinder.org/)\n\n* [Introduction to `poetpy`](https://github.com/aschleg/poetpy/blob/master/notebooks/Introduction%20to%20Poetpy.ipynb)\n* [Building a Poetry Database in `PostgreSQL` with Python, `poetpy`, `pandas` and `sqlalchemy`](https://github.com/aschleg/poetpy/blob/master/notebooks/Building%20a%20Poetry%20Database%20in%20PostgreSQL%20with%20Python%2C%20poetpy%2C%20pandas%20and%20sqlalchemy.ipynb)\n\n## Requirements\n\n* Python 3.4+\n* `requests >= 2.18`\n\n## See Also\n\n* [PoetryDB](https://github.com/thundercomb/poetrydb) Github page with more information \n  regarding the implementation and design of PoetryDB and its API. The README of the \n  repository also contains other examples for working with the API (though not in Python).\n\n## About PoetryDB\n\n[PoetryDB](http://poetrydb.org/index.html) was created and is currently maintained by \n[@thundercomb](https://twitter.com/thundercomb). They blog about poetry and related technology and \nother topics at [thecombedthunderclap.blogspot.com](http://thecombedthunderclap.blogspot.com/).\n\nPlease note, I am in no way affiliated with the creator of PoetryDB. My intention with `poetpy` is to \nhelp spread the word and hopefully increase interest in poetry and related projects that attempt to \ncreate comprehensive databases of publicly available knowledge.\n\n## License\n\nGPL-2.0\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "poetpy", "package_url": "https://pypi.org/project/poetpy/", "platform": "", "project_url": "https://pypi.org/project/poetpy/", "project_urls": null, "release_url": "https://pypi.org/project/poetpy/1.1.1/", "requires_dist": ["requests (>=2.18)"], "requires_python": "", "summary": "Python wrapper for the PoetryDB API.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Poetpy</p>\n<p>[![Documentation Status](<a href=\"https://readthedocs.org/projects/poetpy/badge/?version=latest)%5D(https://poetpy.readthedocs.io/en/latest/\" rel=\"nofollow\">https://readthedocs.org/projects/poetpy/badge/?version=latest)](https://poetpy.readthedocs.io/en/latest/</a>?badge=latest)\n[![Build Status](<a href=\"https://travis-ci.org/aschleg/poetpy.svg?branch=master)%5D(https://travis-ci.org/aschleg/poetpy\" rel=\"nofollow\">https://travis-ci.org/aschleg/poetpy.svg?branch=master)](https://travis-ci.org/aschleg/poetpy</a>)\n[![Build status](<a href=\"https://ci.appveyor.com/api/projects/status/jprq31sokv9rlbuh?svg=true)%5D(https://ci.appveyor.com/project/aschleg/poetpy\" rel=\"nofollow\">https://ci.appveyor.com/api/projects/status/jprq31sokv9rlbuh?svg=true)](https://ci.appveyor.com/project/aschleg/poetpy</a>)\n[![Codacy Badge](<a href=\"https://api.codacy.com/project/badge/Grade/7abf894070ba46418181f9d07af68838)%5D(https://www.codacy.com/app/aschleg/poetpy?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=aschleg/poetpy&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\">https://api.codacy.com/project/badge/Grade/7abf894070ba46418181f9d07af68838)](https://www.codacy.com/app/aschleg/poetpy?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=aschleg/poetpy&amp;amp;utm_campaign=Badge_Grade</a>)\n[![Coverage Status](<a href=\"https://coveralls.io/repos/github/aschleg/poetpy/badge.svg?branch=master)%5D(https://coveralls.io/github/aschleg/poetpy\" rel=\"nofollow\">https://coveralls.io/repos/github/aschleg/poetpy/badge.svg?branch=master)](https://coveralls.io/github/aschleg/poetpy</a>?branch=master)\n![<a href=\"https://pypi.org/project/poetpy/%5D(https://img.shields.io/badge/pypi%20version-1.1.1-blue.svg\" rel=\"nofollow\">https://pypi.org/project/poetpy/](https://img.shields.io/badge/pypi%20version-1.1.1-blue.svg</a>)\n![<a href=\"https://pypi.org/project/petpy/%5D(https://img.shields.io/badge/python-3.4%2C%203.5%2C%203.6%2C%203.7-blue.svg\" rel=\"nofollow\">https://pypi.org/project/petpy/](https://img.shields.io/badge/python-3.4%2C%203.5%2C%203.6%2C%203.7-blue.svg</a>)</p>\n<p>Python wrapper of the [PoetryDB API](<a href=\"http://poetrydb.org/\" rel=\"nofollow\">http://poetrydb.org/</a>).</p>\n<p>## Installation</p>\n<p><cite>poetpy</cite> is must easily installed using <cite>pip</cite>.</p>\n<p>~~~ python\npip install poetpy\n~~~</p>\n<p>Otherwise, the project repository can be download and installed through invoking the\n<cite>python install</cite> command.</p>\n<p>~~~ python\npython setup.py install\n~~~</p>\n<p>## Examples</p>\n<p>Extracting poetry and poets from the PoetryDB API requires at least one <cite>input_term</cite>\nparameter. The <cite>input_term</cite> parameter results can be further refined with a corresponding\nsearch term. For example, let\u2019s say we are interested in finding all of William Shakespeare\u2019s\npoems and sonnets available in the PoetryDB API.</p>\n<p>~~~ python\nw = poetpy.get_poetry(\u2018author\u2019, \u2018William Shakespeare\u2019)\n~~~</p>\n<p>In the above example, the <cite>input_term</cite> is \u2018author\u2019 and the author we are interested\nin finding is \u2018William Shakespeare\u2019.</p>\n<p>If we wanted to only output the lines and line counts of all of Shakespeare\u2019s poetry and sonnets,\nwe can use the <cite>output</cite> parameter to narrow the returned results.</p>\n<p>~~~ python\nw = poetpy.get_poetry(\u2018author\u2019, \u2018William Shakespeare\u2019, \u2018lines,linecounts\u2019)\n~~~</p>\n<p>The default output format from the PoetryDB API is JSON; however, we can change the\noutput to text by specifying the <cite>output_format</cite> parameter.</p>\n<p>~~~ python\nw = poetpy.get_poetry(\u2018author\u2019, \u2018William Shakespeare\u2019, \u2018lines,linecounts\u2019, \u2018text\u2019)\n~~~</p>\n<p>The output text format will be newline escaped.</p>\n<p>Combination searches are also allowed to enable users to further refine the returned search results.\nEach <cite>input_term</cite> should be given a corresponding search term delimited by a semi-colon. For example,\nlet\u2019s say we want to find all of []John Milton\u2019s](<a href=\"https://en.wikipedia.org/wiki/John_Milton\" rel=\"nofollow\">https://en.wikipedia.org/wiki/John_Milton</a>) poetry\nwith [<em>Paradise Lost</em>](<a href=\"https://en.wikipedia.org/wiki/Paradise_Lost\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Paradise_Lost</a>) in the title.</p>\n<p>~~~ python\nget_poetry(\u2018title,author\u2019, \u2018Paradise Lost;Milton\u2019)\n~~~</p>\n<p>Different <cite>input_term</cite> parameter combinations can also be performed. Taking the above example,\nlet\u2019s say we are actually only interested in finding Wordworth\u2019s poem <em>I Wandered Lonely As A Cloud</em>.</p>\n<p>~~~ python\nw = poetpy.get_poetry(\u2018author,title\u2019, \u2018William Shakespeare;I Wandered Lonely As A Cloud\u2019)\n~~~</p>\n<p>## Further Examples and Notebooks</p>\n<p>[![Binder](<a href=\"https://mybinder.org/badge.svg)%5D(https://mybinder.org/v2/gh/aschleg/poetpy/master?filepath=notebooks\" rel=\"nofollow\">https://mybinder.org/badge.svg)](https://mybinder.org/v2/gh/aschleg/poetpy/master?filepath=notebooks</a>)</p>\n<p>A set of [Jupyter Notebooks](<a href=\"http://jupyter.org/\" rel=\"nofollow\">http://jupyter.org/</a>) that further explore the potential usage of <cite>poetpy</cite>\nand the PoetryDB API. The notebooks can also be opened interactively using [binder](<a href=\"https://mybinder.org/\" rel=\"nofollow\">https://mybinder.org/</a>)</p>\n<ul>\n<li>[Introduction to <cite>poetpy</cite>](<a href=\"https://github.com/aschleg/poetpy/blob/master/notebooks/Introduction%20to%20Poetpy.ipynb\" rel=\"nofollow\">https://github.com/aschleg/poetpy/blob/master/notebooks/Introduction%20to%20Poetpy.ipynb</a>)</li>\n<li>[Building a Poetry Database in <cite>PostgreSQL</cite> with Python, <cite>poetpy</cite>, <cite>pandas</cite> and <cite>sqlalchemy</cite>](<a href=\"https://github.com/aschleg/poetpy/blob/master/notebooks/Building%20a%20Poetry%20Database%20in%20PostgreSQL%20with%20Python%2C%20poetpy%2C%20pandas%20and%20sqlalchemy.ipynb\" rel=\"nofollow\">https://github.com/aschleg/poetpy/blob/master/notebooks/Building%20a%20Poetry%20Database%20in%20PostgreSQL%20with%20Python%2C%20poetpy%2C%20pandas%20and%20sqlalchemy.ipynb</a>)</li>\n</ul>\n<p>## Requirements</p>\n<ul>\n<li>Python 3.4+</li>\n<li><cite>requests &gt;= 2.18</cite></li>\n</ul>\n<p>## See Also</p>\n<ul>\n<li>[PoetryDB](<a href=\"https://github.com/thundercomb/poetrydb\" rel=\"nofollow\">https://github.com/thundercomb/poetrydb</a>) Github page with more information\nregarding the implementation and design of PoetryDB and its API. The README of the\nrepository also contains other examples for working with the API (though not in Python).</li>\n</ul>\n<p>## About PoetryDB</p>\n<p>[PoetryDB](<a href=\"http://poetrydb.org/index.html\" rel=\"nofollow\">http://poetrydb.org/index.html</a>) was created and is currently maintained by\n[@thundercomb](<a href=\"https://twitter.com/thundercomb\" rel=\"nofollow\">https://twitter.com/thundercomb</a>). They blog about poetry and related technology and\nother topics at [thecombedthunderclap.blogspot.com](<a href=\"http://thecombedthunderclap.blogspot.com/\" rel=\"nofollow\">http://thecombedthunderclap.blogspot.com/</a>).</p>\n<p>Please note, I am in no way affiliated with the creator of PoetryDB. My intention with <cite>poetpy</cite> is to\nhelp spread the word and hopefully increase interest in poetry and related projects that attempt to\ncreate comprehensive databases of publicly available knowledge.</p>\n<p>## License</p>\n<p>GPL-2.0</p>\n\n          </div>"}, "last_serial": 5767235, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "db2ca83593bc194bbbc68fd3696ae074", "sha256": "5791c503c09b0294a7b0b923476b159115420c027454d199c6f474ff156e028c"}, "downloads": -1, "filename": "poetpy-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "db2ca83593bc194bbbc68fd3696ae074", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4627, "upload_time": "2018-06-21T18:16:31", "upload_time_iso_8601": "2018-06-21T18:16:31.604550Z", "url": "https://files.pythonhosted.org/packages/ba/6f/c7103ad494f10c67227b1bf42ce300c4ca1cf39acdacde8594a5fda72a5a/poetpy-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6fdcf353629d35727b374bf67d76c4e5", "sha256": "222d9e198fc0fdf93496ab50f8abc4b314872a57d8c77444a3fde33fbd29f8da"}, "downloads": -1, "filename": "poetpy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6fdcf353629d35727b374bf67d76c4e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3090, "upload_time": "2018-06-21T18:16:32", "upload_time_iso_8601": "2018-06-21T18:16:32.998631Z", "url": "https://files.pythonhosted.org/packages/de/92/984513220aeffbc0fb997119cf6ef651e221a26e5f3641f34a21ee99cbc5/poetpy-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "14e21ffc35e91f9480a4753b7a0c7ade", "sha256": "eeb23ecbac77402a4872b231287b6e36a5b48ebb65bd701e0034462a1bd86ac6"}, "downloads": -1, "filename": "poetpy-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14e21ffc35e91f9480a4753b7a0c7ade", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5182, "upload_time": "2018-06-21T18:44:58", "upload_time_iso_8601": "2018-06-21T18:44:58.134858Z", "url": "https://files.pythonhosted.org/packages/f5/ca/ebb48d66996edfa66156b6791ece7c8765b2341315cc597192eb4dc72de4/poetpy-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a969dcafd61df0a79a6626a965c37a40", "sha256": "5f361f7bf73474403efb45e547a16308baa0058f24a3458763ddc3639c809c9a"}, "downloads": -1, "filename": "poetpy-1.1.0-py3.6.egg", "has_sig": false, "md5_digest": "a969dcafd61df0a79a6626a965c37a40", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 5686, "upload_time": "2018-06-21T18:44:59", "upload_time_iso_8601": "2018-06-21T18:44:59.177203Z", "url": "https://files.pythonhosted.org/packages/76/35/6fa8e741ba98c210f0f410d51cdab5a3e892d119b11e72fcfba4c466b6c7/poetpy-1.1.0-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f52184f1902ad5bb2f6ec652fbe65805", "sha256": "3d5926f81af72a0cbaefda9c69fdc7b967e6871264e5f81f8cb463f38b78bfee"}, "downloads": -1, "filename": "poetpy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "f52184f1902ad5bb2f6ec652fbe65805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3426, "upload_time": "2018-06-21T18:45:00", "upload_time_iso_8601": "2018-06-21T18:45:00.039485Z", "url": "https://files.pythonhosted.org/packages/4f/7e/1d949856bb86cc551940b91585dabf4b8d3490cd5c4bdc95b793ba20bc5a/poetpy-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "7fe74d1d78ba4b6bc931898d4ced6bb8", "sha256": "740013a554e1bf11e318049e01d4e6fb02664a516cde999cf2df1482f541b277"}, "downloads": -1, "filename": "poetpy-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7fe74d1d78ba4b6bc931898d4ced6bb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11480, "upload_time": "2019-09-01T14:51:09", "upload_time_iso_8601": "2019-09-01T14:51:09.611683Z", "url": "https://files.pythonhosted.org/packages/16/5e/8ae832d6394c616681960103fb91c0987cf1372d992a0a858a20e84108a4/poetpy-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b182c73e5b8f07e3b8462f78313a79b1", "sha256": "d173e7265f9e06559bde674cc07bb312563851ae074e109c04cb093ff7fae750"}, "downloads": -1, "filename": "poetpy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b182c73e5b8f07e3b8462f78313a79b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4756, "upload_time": "2019-09-01T14:51:11", "upload_time_iso_8601": "2019-09-01T14:51:11.248205Z", "url": "https://files.pythonhosted.org/packages/80/9f/0472ef1219b4f42cef4621c3ddbdb69344b236c961f2e45055bb92d283cf/poetpy-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7fe74d1d78ba4b6bc931898d4ced6bb8", "sha256": "740013a554e1bf11e318049e01d4e6fb02664a516cde999cf2df1482f541b277"}, "downloads": -1, "filename": "poetpy-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7fe74d1d78ba4b6bc931898d4ced6bb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11480, "upload_time": "2019-09-01T14:51:09", "upload_time_iso_8601": "2019-09-01T14:51:09.611683Z", "url": "https://files.pythonhosted.org/packages/16/5e/8ae832d6394c616681960103fb91c0987cf1372d992a0a858a20e84108a4/poetpy-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b182c73e5b8f07e3b8462f78313a79b1", "sha256": "d173e7265f9e06559bde674cc07bb312563851ae074e109c04cb093ff7fae750"}, "downloads": -1, "filename": "poetpy-1.1.1.tar.gz", "has_sig": false, "md5_digest": "b182c73e5b8f07e3b8462f78313a79b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4756, "upload_time": "2019-09-01T14:51:11", "upload_time_iso_8601": "2019-09-01T14:51:11.248205Z", "url": "https://files.pythonhosted.org/packages/80/9f/0472ef1219b4f42cef4621c3ddbdb69344b236c961f2e45055bb92d283cf/poetpy-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:52:05 2020"}