{"info": {"author": "Berry Langerak", "author_email": "berry.langerak@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Nanoinject\n\nNanoinject is a terrifically small and simple dependency injection container\nfor Python 3.6+. Its' key features:\n\n* Easy enough to use in five minutes.\n* Configurable in code or config files.\n* Pretty feature complete.\n\n## Installation\n\n`pip install nanoinject`\n\n## Use guide\n\nDependency injection is a way to achieve [Inversion of Control][ioc]. \n\n### Use in code\n\n```python\nclass A:\n    value = 42\n\nclass B:\n    def __init__(self, a):\n        self.a = a\n\n\nc = Container()\nc.add('a', lambda c: A())\nc.add('b', lambda c: B(c.get('a')))\n\nassert 42 == c.get('b').a.value\n```\n\n### Using configuration\n\nIt starts with declaring your services in YAML format:\n\n```yaml\nvalues:\n  scalar_value: 42\n\nservices:\n  a:\n    class: A\n    module: example.a\n    dependencies:\n      - value:scalar_value\n\n  b:\n    class: B\n    module: example.b\n    dependencies:\n      - a\n```\n\nAnd then letting the config object configure the container based on that YAML file:\n\n```python\nimport os\nfrom nanoinject import Container, Config\n\nclass A:\n    def __init__(self, value):\n        self.value = value\n\nclass B:\n    def __init__(self, a):\n        self.a = a\n\n\nc = Container()\nconfig = Config.from_yaml_file(os.path.dirname(__file__) + '/services.yaml')\nconfig.config(c)\n\nassert 42 == c.get('b').a.value\n```\n\n\n\n[ioc]: https://www.martinfowler.com/articles/injection.html", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/berry-langerak/nanoinject", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "nanoinject", "package_url": "https://pypi.org/project/nanoinject/", "platform": "", "project_url": "https://pypi.org/project/nanoinject/", "project_urls": {"Homepage": "https://github.com/berry-langerak/nanoinject"}, "release_url": "https://pypi.org/project/nanoinject/1.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Nanoinject is a terrifically small and simple dependency injection container", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Nanoinject</h1>\n<p>Nanoinject is a terrifically small and simple dependency injection container\nfor Python 3.6+. Its' key features:</p>\n<ul>\n<li>Easy enough to use in five minutes.</li>\n<li>Configurable in code or config files.</li>\n<li>Pretty feature complete.</li>\n</ul>\n<h2>Installation</h2>\n<p><code>pip install nanoinject</code></p>\n<h2>Use guide</h2>\n<p>Dependency injection is a way to achieve <a href=\"https://www.martinfowler.com/articles/injection.html\" rel=\"nofollow\">Inversion of Control</a>.</p>\n<h3>Use in code</h3>\n<pre><span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">B</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Container</span><span class=\"p\">()</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"n\">A</span><span class=\"p\">())</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">c</span><span class=\"p\">:</span> <span class=\"n\">B</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">)))</span>\n\n<span class=\"k\">assert</span> <span class=\"mi\">42</span> <span class=\"o\">==</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">value</span>\n</pre>\n<h3>Using configuration</h3>\n<p>It starts with declaring your services in YAML format:</p>\n<pre><span class=\"nt\">values</span><span class=\"p\">:</span>\n  <span class=\"nt\">scalar_value</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">42</span>\n\n<span class=\"nt\">services</span><span class=\"p\">:</span>\n  <span class=\"nt\">a</span><span class=\"p\">:</span>\n    <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">A</span>\n    <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.a</span>\n    <span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">value:scalar_value</span>\n\n  <span class=\"nt\">b</span><span class=\"p\">:</span>\n    <span class=\"nt\">class</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">B</span>\n    <span class=\"nt\">module</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example.b</span>\n    <span class=\"nt\">dependencies</span><span class=\"p\">:</span>\n      <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">a</span>\n</pre>\n<p>And then letting the config object configure the container based on that YAML file:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">nanoinject</span> <span class=\"kn\">import</span> <span class=\"n\">Container</span><span class=\"p\">,</span> <span class=\"n\">Config</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">B</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">a</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Container</span><span class=\"p\">()</span>\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">Config</span><span class=\"o\">.</span><span class=\"n\">from_yaml_file</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"s1\">'/services.yaml'</span><span class=\"p\">)</span>\n<span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n\n<span class=\"k\">assert</span> <span class=\"mi\">42</span> <span class=\"o\">==</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">a</span><span class=\"o\">.</span><span class=\"n\">value</span>\n</pre>\n\n          </div>"}, "last_serial": 6875040, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "f456adc578b6f47ceb6c3193c60bd23c", "sha256": "b275d2c8c751593733aa4b5fa18c33e4b994c576c73fcddb732303f987e129f6"}, "downloads": -1, "filename": "nanoinject-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f456adc578b6f47ceb6c3193c60bd23c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3327, "upload_time": "2020-03-23T16:05:34", "upload_time_iso_8601": "2020-03-23T16:05:34.266956Z", "url": "https://files.pythonhosted.org/packages/e8/0d/a6c3ce2963f690f4845a6ec85ba80a93c81bf553a40757aedd045263d767/nanoinject-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "8c9454560b8776557c30a293a234ffff", "sha256": "f4bb4a9aa610fad768a9918bc39f00b547bc42e8d6d4957c33db51e618f3cfd5"}, "downloads": -1, "filename": "nanoinject-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8c9454560b8776557c30a293a234ffff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3337, "upload_time": "2020-03-24T18:42:48", "upload_time_iso_8601": "2020-03-24T18:42:48.234781Z", "url": "https://files.pythonhosted.org/packages/7c/17/1c55187ae6fb2297e7a0f17a94c71c3b8c034d052459ce54e08923f5bec5/nanoinject-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c9454560b8776557c30a293a234ffff", "sha256": "f4bb4a9aa610fad768a9918bc39f00b547bc42e8d6d4957c33db51e618f3cfd5"}, "downloads": -1, "filename": "nanoinject-1.0.1.tar.gz", "has_sig": false, "md5_digest": "8c9454560b8776557c30a293a234ffff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3337, "upload_time": "2020-03-24T18:42:48", "upload_time_iso_8601": "2020-03-24T18:42:48.234781Z", "url": "https://files.pythonhosted.org/packages/7c/17/1c55187ae6fb2297e7a0f17a94c71c3b8c034d052459ce54e08923f5bec5/nanoinject-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:39 2020"}