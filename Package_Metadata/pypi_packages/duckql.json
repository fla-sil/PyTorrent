{"info": {"author": "Jakub Dubec", "author_email": "jakub.dubec@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Database", "Topic :: Software Development :: Libraries"], "description": "# duckQL \ud83d\udc25\n\n![PyPi package](https://img.shields.io/pypi/v/duckql)\n![Tests](https://github.com/Sibyx/duckql-python/workflows/Tests/badge.svg)\n[![codecov](https://codecov.io/gh/Sibyx/duckql-python/branch/master/graph/badge.svg)](https://codecov.io/gh/Sibyx/duckql-python)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FSibyx%2Fduckql-python.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FSibyx%2Fduckql-python?ref=badge_shield)\n\nduckQL is simple JSON-based notation for some SQL dialects (PostgreSQL, MariaDB, MySQL) based on\n[pydantic](https://github.com/samuelcolvin/pydantic/) library.\n\n## Example\n\nHere is a simple example of library usage. For more examples please visit\n[project page](https://sibyx.github.io/duckql-python/).\n\n```python\nfrom duckql import Query, Property, Comparision, Constant\n\n\nmy_query = Query(\n    entity='users',\n    properties=[\n        Property(name='users.name'),\n        Property(name='users.surname')\n    ],\n    conditions=Comparision(\n        properties=[\n            Property(name='users.age'),\n            Constant(value=15)\n        ],\n        operation=Comparision.Operation.GREATER_EQUAL\n    )\n)\n```\n\n```json\n{\n  \"obj\": \"structures.Query\",\n  \"entity\": \"users\",\n  \"properties\": [\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.name\"\n    },\n    {\n      \"obj\": \"properties.Property\",\n      \"name\": \"users.surname\"\n    }\n  ],\n  \"conditions\": {\n    \"obj\": \"structures.Comparision\",\n    \"properties\": [\n      {\n        \"obj\": \"properties.Property\",\n        \"name\": \"users.age\"\n      },\n      {\n        \"obj\": \"properties.Constant\",\n        \"value\": \"15\"\n      }\n    ],\n    \"operation\": \"gte\"\n  }\n}\n```\n\n```postgresql\nSELECT users.name, users.surname FROM users WHERE (users.age >= 15);\n```\n\n## Development\n\nProject is using [poetry](https://python-poetry.org/) and documentation is generated by\n[MkDocs](https://www.mkdocs.org/). If you want to generate documentation you need to follow these simple steps\ninside of your virtual environment:\n\n1. `poetry install`\n2. `mkdocs build`\n\nInside of your virtual environment, you can also use `mkdocs serve` to create temporary auto-reload http server with\nlive docs.\n\nWe use [pytest](https://docs.pytest.org/en/latest/) for unit tests and [flake8](https://flake8.pycqa.org/en/latest/)\nfor code-style validation. You can execute tests inside of pipenv shell using these commands:\n\n- `pytest -v .`: executes unit tests\n- `pytest -v --flake8 .`: flake8 code-style tests\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FSibyx%2Fduckql-python.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2FSibyx%2Fduckql-python?ref=badge_large)\n\n---\nMade with \u2615\ufe0f and \u2764\ufe0f by Jakub Dubec & [BACKBONE s.r.o.](https://www.backbone.sk/en/)\n\n# Changelog\n\n## 0.2.2 : 2020-04-16\n\n- **Change**: Ability to pass `structures.Distinct` into `functions.StringAgg`\n\n## 0.2.1 : 2020-04-09\n\n- **Fix**: Fixed JOIN aliases\n\n## 0.2.0 : 2020-04-09\n\nProject renamed to `duckql`, this is the first public release (development status modifier changed to beta).\n\n- **Change**: Name changed to `duckql`\n- **Change**: [Poetry](https://python-poetry.org/) as package manager\n\n## 0.1.8 : 2020-04-07\n\n- **Feature**: Subquery support\n- **Note**: Changelog datetimes in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) compatible `Y-m-d` format\n\n## 0.1.7 : 2020-03-17\n\n- **Fix**: Adding missing imports in `__init__.py` files inside of submodules\n- **Change**: Moved `__version__` from `__init__.py` to `version.py`\n- **Note**: Development status change to Alpha\n\n## 0.1.6 : 2020-03-13\n\n- **Feature**: Introduced `functions.StringAgg`\n- **Feature**: Introduced `structures.CastOperator`\n- **Feature**: CLI for parsing files\n\n## 0.1.5 : 2020-02-05\n\n- **Change**: Allow direct use of `structures.Comparision` in query conditions\n\n## 0.1.4 : 2020-02-05\n\n- **Fix**: Allow aliases in `structures.Query`\n- **Change**: Do not escape `%`\n\n## 0.1.3 : 2020-02-03\n\n- **Feature**: Natural join support\n\n## 0.1.2 : 2020-02-03\n\n- **Change**: Completed docs\n- **Feature**: Recursive nested properties lookup in `Query` object\n\n## 0.1.1 : 2020-02-26\n\n- **Change**: Default values for optional attributes in `structures.Query`\n- **Change**: `custom_parser` now can raise `ParseError` if there is invalid object type passed\n\n## 0.1.0 : 2020-02-26\n\n- Initial release\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Sibyx/duckql-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "duckql", "package_url": "https://pypi.org/project/duckql/", "platform": "", "project_url": "https://pypi.org/project/duckql/", "project_urls": {"Homepage": "https://github.com/Sibyx/duckql-python"}, "release_url": "https://pypi.org/project/duckql/0.2.2/", "requires_dist": ["pydantic (==1.*)", "click (==7.*)", "typing-extensions"], "requires_python": "", "summary": "JSON declarative SQL conversion library", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>duckQL \ud83d\udc25</h1>\n<p><img alt=\"PyPi package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a1ecc565b8c9d25b358cdce8367b25a47467e956/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6475636b716c\">\n<img alt=\"Tests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3c32ff72fee3c85d028782cb85125d581991d86c/68747470733a2f2f6769746875622e636f6d2f53696279782f6475636b716c2d707974686f6e2f776f726b666c6f77732f54657374732f62616467652e737667\">\n<a href=\"https://codecov.io/gh/Sibyx/duckql-python\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/877ed1ddc389c4f72edd6111d207fd3d8f326a10/68747470733a2f2f636f6465636f762e696f2f67682f53696279782f6475636b716c2d707974686f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://app.fossa.io/projects/git%2Bgithub.com%2FSibyx%2Fduckql-python?ref=badge_shield\" rel=\"nofollow\"><img alt=\"FOSSA Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a8dbdfb06682100b07e1452c683003f25778302/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d25324653696279782532466475636b716c2d707974686f6e2e7376673f747970653d736869656c64\"></a></p>\n<p>duckQL is simple JSON-based notation for some SQL dialects (PostgreSQL, MariaDB, MySQL) based on\n<a href=\"https://github.com/samuelcolvin/pydantic/\" rel=\"nofollow\">pydantic</a> library.</p>\n<h2>Example</h2>\n<p>Here is a simple example of library usage. For more examples please visit\n<a href=\"https://sibyx.github.io/duckql-python/\" rel=\"nofollow\">project page</a>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">duckql</span> <span class=\"kn\">import</span> <span class=\"n\">Query</span><span class=\"p\">,</span> <span class=\"n\">Property</span><span class=\"p\">,</span> <span class=\"n\">Comparision</span><span class=\"p\">,</span> <span class=\"n\">Constant</span>\n\n\n<span class=\"n\">my_query</span> <span class=\"o\">=</span> <span class=\"n\">Query</span><span class=\"p\">(</span>\n    <span class=\"n\">entity</span><span class=\"o\">=</span><span class=\"s1\">'users'</span><span class=\"p\">,</span>\n    <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">Property</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'users.name'</span><span class=\"p\">),</span>\n        <span class=\"n\">Property</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'users.surname'</span><span class=\"p\">)</span>\n    <span class=\"p\">],</span>\n    <span class=\"n\">conditions</span><span class=\"o\">=</span><span class=\"n\">Comparision</span><span class=\"p\">(</span>\n        <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">[</span>\n            <span class=\"n\">Property</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'users.age'</span><span class=\"p\">),</span>\n            <span class=\"n\">Constant</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"p\">)</span>\n        <span class=\"p\">],</span>\n        <span class=\"n\">operation</span><span class=\"o\">=</span><span class=\"n\">Comparision</span><span class=\"o\">.</span><span class=\"n\">Operation</span><span class=\"o\">.</span><span class=\"n\">GREATER_EQUAL</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"obj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"structures.Query\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"entity\"</span><span class=\"p\">:</span> <span class=\"s2\">\"users\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"obj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"properties.Property\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"users.name\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n      <span class=\"nt\">\"obj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"properties.Property\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"users.surname\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">],</span>\n  <span class=\"nt\">\"conditions\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"obj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"structures.Comparision\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"obj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"properties.Property\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"users.age\"</span>\n      <span class=\"p\">},</span>\n      <span class=\"p\">{</span>\n        <span class=\"nt\">\"obj\"</span><span class=\"p\">:</span> <span class=\"s2\">\"properties.Constant\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"s2\">\"15\"</span>\n      <span class=\"p\">}</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"operation\"</span><span class=\"p\">:</span> <span class=\"s2\">\"gte\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<pre><span class=\"k\">SELECT</span> <span class=\"n\">users</span><span class=\"mf\">.</span><span class=\"k\">name</span><span class=\"p\">,</span> <span class=\"n\">users</span><span class=\"mf\">.</span><span class=\"n\">surname</span> <span class=\"k\">FROM</span> <span class=\"n\">users</span> <span class=\"k\">WHERE</span> <span class=\"p\">(</span><span class=\"n\">users</span><span class=\"mf\">.</span><span class=\"n\">age</span> <span class=\"o\">&gt;=</span> <span class=\"mf\">15</span><span class=\"p\">);</span>\n</pre>\n<h2>Development</h2>\n<p>Project is using <a href=\"https://python-poetry.org/\" rel=\"nofollow\">poetry</a> and documentation is generated by\n<a href=\"https://www.mkdocs.org/\" rel=\"nofollow\">MkDocs</a>. If you want to generate documentation you need to follow these simple steps\ninside of your virtual environment:</p>\n<ol>\n<li><code>poetry install</code></li>\n<li><code>mkdocs build</code></li>\n</ol>\n<p>Inside of your virtual environment, you can also use <code>mkdocs serve</code> to create temporary auto-reload http server with\nlive docs.</p>\n<p>We use <a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a> for unit tests and <a href=\"https://flake8.pycqa.org/en/latest/\" rel=\"nofollow\">flake8</a>\nfor code-style validation. You can execute tests inside of pipenv shell using these commands:</p>\n<ul>\n<li><code>pytest -v .</code>: executes unit tests</li>\n<li><code>pytest -v --flake8 .</code>: flake8 code-style tests</li>\n</ul>\n<h2>License</h2>\n<p><a href=\"https://app.fossa.io/projects/git%2Bgithub.com%2FSibyx%2Fduckql-python?ref=badge_large\" rel=\"nofollow\"><img alt=\"FOSSA Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53e64e07f3a09510e316341c47803f81805d9830/68747470733a2f2f6170702e666f7373612e696f2f6170692f70726f6a656374732f6769742532426769746875622e636f6d25324653696279782532466475636b716c2d707974686f6e2e7376673f747970653d6c61726765\"></a></p>\n<hr>\n<p>Made with \u2615\ufe0f and \u2764\ufe0f by Jakub Dubec &amp; <a href=\"https://www.backbone.sk/en/\" rel=\"nofollow\">BACKBONE s.r.o.</a></p>\n<h1>Changelog</h1>\n<h2>0.2.2 : 2020-04-16</h2>\n<ul>\n<li><strong>Change</strong>: Ability to pass <code>structures.Distinct</code> into <code>functions.StringAgg</code></li>\n</ul>\n<h2>0.2.1 : 2020-04-09</h2>\n<ul>\n<li><strong>Fix</strong>: Fixed JOIN aliases</li>\n</ul>\n<h2>0.2.0 : 2020-04-09</h2>\n<p>Project renamed to <code>duckql</code>, this is the first public release (development status modifier changed to beta).</p>\n<ul>\n<li><strong>Change</strong>: Name changed to <code>duckql</code></li>\n<li><strong>Change</strong>: <a href=\"https://python-poetry.org/\" rel=\"nofollow\">Poetry</a> as package manager</li>\n</ul>\n<h2>0.1.8 : 2020-04-07</h2>\n<ul>\n<li><strong>Feature</strong>: Subquery support</li>\n<li><strong>Note</strong>: Changelog datetimes in <a href=\"https://en.wikipedia.org/wiki/ISO_8601\" rel=\"nofollow\">ISO 8601</a> compatible <code>Y-m-d</code> format</li>\n</ul>\n<h2>0.1.7 : 2020-03-17</h2>\n<ul>\n<li><strong>Fix</strong>: Adding missing imports in <code>__init__.py</code> files inside of submodules</li>\n<li><strong>Change</strong>: Moved <code>__version__</code> from <code>__init__.py</code> to <code>version.py</code></li>\n<li><strong>Note</strong>: Development status change to Alpha</li>\n</ul>\n<h2>0.1.6 : 2020-03-13</h2>\n<ul>\n<li><strong>Feature</strong>: Introduced <code>functions.StringAgg</code></li>\n<li><strong>Feature</strong>: Introduced <code>structures.CastOperator</code></li>\n<li><strong>Feature</strong>: CLI for parsing files</li>\n</ul>\n<h2>0.1.5 : 2020-02-05</h2>\n<ul>\n<li><strong>Change</strong>: Allow direct use of <code>structures.Comparision</code> in query conditions</li>\n</ul>\n<h2>0.1.4 : 2020-02-05</h2>\n<ul>\n<li><strong>Fix</strong>: Allow aliases in <code>structures.Query</code></li>\n<li><strong>Change</strong>: Do not escape <code>%</code></li>\n</ul>\n<h2>0.1.3 : 2020-02-03</h2>\n<ul>\n<li><strong>Feature</strong>: Natural join support</li>\n</ul>\n<h2>0.1.2 : 2020-02-03</h2>\n<ul>\n<li><strong>Change</strong>: Completed docs</li>\n<li><strong>Feature</strong>: Recursive nested properties lookup in <code>Query</code> object</li>\n</ul>\n<h2>0.1.1 : 2020-02-26</h2>\n<ul>\n<li><strong>Change</strong>: Default values for optional attributes in <code>structures.Query</code></li>\n<li><strong>Change</strong>: <code>custom_parser</code> now can raise <code>ParseError</code> if there is invalid object type passed</li>\n</ul>\n<h2>0.1.0 : 2020-02-26</h2>\n<ul>\n<li>Initial release</li>\n</ul>\n\n          </div>"}, "last_serial": 7032097, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "287c7643d718fd2db1eaa1a3c40772d6", "sha256": "f613876534c2175cdb7dc85c30f694ee33ed0e98ebac652d2d771a4c772f1558"}, "downloads": -1, "filename": "duckql-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "287c7643d718fd2db1eaa1a3c40772d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23866, "upload_time": "2020-04-08T23:25:13", "upload_time_iso_8601": "2020-04-08T23:25:13.483506Z", "url": "https://files.pythonhosted.org/packages/2c/c5/46b39190056bedc0e30f2fc5489581aee5f0e7fe2a208fca72e994886b96/duckql-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5298d0db56f7823192f87135feffd76", "sha256": "0143d1653e9d663ec90f51fb3dea01e00aa87f27485fb75c5d77759f79c6a39f"}, "downloads": -1, "filename": "duckql-0.2.0.tar.gz", "has_sig": false, "md5_digest": "b5298d0db56f7823192f87135feffd76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12972, "upload_time": "2020-04-08T23:25:15", "upload_time_iso_8601": "2020-04-08T23:25:15.643160Z", "url": "https://files.pythonhosted.org/packages/b8/ac/4abaf6aed80b428ff2d5a29b6c94bad8045f3ce3856b94c745979fc70830/duckql-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "513f7a7f70720083f8b8260b97ba0b39", "sha256": "429eac56e5c6be77f168a04cbf190709a6eb7579f7c6ee29475aa9efa07625a8"}, "downloads": -1, "filename": "duckql-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "513f7a7f70720083f8b8260b97ba0b39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 23911, "upload_time": "2020-04-09T10:33:35", "upload_time_iso_8601": "2020-04-09T10:33:35.512226Z", "url": "https://files.pythonhosted.org/packages/4a/50/f8ff10c48cc56d23c8d708f5af497e54453b795854469eb72a325f4b97de/duckql-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6becabe83abc679b28d26b6cd08defe7", "sha256": "535b80a1beada834fc4e6d19fed6eefbac9f8e85dbc9cbda4840717dd5d7c1bd"}, "downloads": -1, "filename": "duckql-0.2.1.tar.gz", "has_sig": false, "md5_digest": "6becabe83abc679b28d26b6cd08defe7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13118, "upload_time": "2020-04-09T10:33:36", "upload_time_iso_8601": "2020-04-09T10:33:36.622914Z", "url": "https://files.pythonhosted.org/packages/bb/d6/e7b69caa146f64b51021985e8e1d631319057772135236846dcbb850fb5c/duckql-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "167ac57404b2b0aa2df1e66f742cd793", "sha256": "d46d42fc71e824ce073875a59b7de65098e0ed4fcf507bdd3e3f5d2e884bae99"}, "downloads": -1, "filename": "duckql-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "167ac57404b2b0aa2df1e66f742cd793", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24051, "upload_time": "2020-04-16T13:14:19", "upload_time_iso_8601": "2020-04-16T13:14:19.497239Z", "url": "https://files.pythonhosted.org/packages/bd/ca/d496f1fd96480c430fb83b0bfa2e8748659724a41fa94ea46c941bd74f44/duckql-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fb56a4c9d0ec0c8b6d77beaa05e9806", "sha256": "e7aa8a7728919f3f4fed384f5491862e0cdc038579bc5d57decefba4ab8ac190"}, "downloads": -1, "filename": "duckql-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3fb56a4c9d0ec0c8b6d77beaa05e9806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13371, "upload_time": "2020-04-16T13:14:20", "upload_time_iso_8601": "2020-04-16T13:14:20.479716Z", "url": "https://files.pythonhosted.org/packages/b1/b5/4c9bfc931805aa06f76f3ba0d56e0ea729ceea0f17ac0376dda4de706ad7/duckql-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "167ac57404b2b0aa2df1e66f742cd793", "sha256": "d46d42fc71e824ce073875a59b7de65098e0ed4fcf507bdd3e3f5d2e884bae99"}, "downloads": -1, "filename": "duckql-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "167ac57404b2b0aa2df1e66f742cd793", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24051, "upload_time": "2020-04-16T13:14:19", "upload_time_iso_8601": "2020-04-16T13:14:19.497239Z", "url": "https://files.pythonhosted.org/packages/bd/ca/d496f1fd96480c430fb83b0bfa2e8748659724a41fa94ea46c941bd74f44/duckql-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3fb56a4c9d0ec0c8b6d77beaa05e9806", "sha256": "e7aa8a7728919f3f4fed384f5491862e0cdc038579bc5d57decefba4ab8ac190"}, "downloads": -1, "filename": "duckql-0.2.2.tar.gz", "has_sig": false, "md5_digest": "3fb56a4c9d0ec0c8b6d77beaa05e9806", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13371, "upload_time": "2020-04-16T13:14:20", "upload_time_iso_8601": "2020-04-16T13:14:20.479716Z", "url": "https://files.pythonhosted.org/packages/b1/b5/4c9bfc931805aa06f76f3ba0d56e0ea729ceea0f17ac0376dda4de706ad7/duckql-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:08 2020"}