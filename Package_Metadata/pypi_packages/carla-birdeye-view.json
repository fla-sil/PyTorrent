{"info": {"author": "Micha\u0142 Martyniak", "author_email": "michal.martyniak@linux.pl", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "![](https://img.shields.io/badge/contributions%20welcome-forking&gt;copying-orange.svg?style=popout-square)\n![](https://img.shields.io/badge/release-v1.0.2-brightgreen.svg?style=popout-square)\n![](https://img.shields.io/badge/pypi-v1.0.2-brightgreen.svg?style=popout-square)\n![](https://img.shields.io/badge/CARLA-0.9.6+-blue.svg?style=popout-square)\n![](https://img.shields.io/badge/python-3.6%20|%203.7%20|3.8-blue.svg?style=popout-square)\n![](https://img.shields.io/badge/license-MIT-blue.svg?style=popout-square)\n\n## Bird-eye's view for CARLA\n\n\nFreeway-oriented shape | *[Learning By Cheating](https://arxiv.org/abs/1912.12294)*-like shape\n:-------------------------:|:-------------------------:\n![cruising](https://user-images.githubusercontent.com/64484917/80508193-04edde00-8978-11ea-956d-721e50a6a3c9.gif) | ![square-cruising](https://user-images.githubusercontent.com/64484917/80508095-e4258880-8977-11ea-8601-0e88942711ff.gif)\n\n(GIFs above present feature maps after applying `as_rgb()` function)\n\n### Motivation\n\nDuring our [research](https://arxiv.org/abs/1911.12905) we found a very inspiring paper called [Learning By Cheating]( https://arxiv.org/abs/1912.12294). **Bird-eye's view** is made specifically to **learn faster thanks to much simpler, 2D world representation** (cheating oracle) which we think fits well in **Reinforcement Learning** setup.\n\nThis repository is an almost complete reimplementation that gives better performance and compatibility with most recent versions of CARLA. You can use it out-of-the-box as input for your model, and if necessary convert and visualize into RGB.\n\n\n### Features\n- **one-hot 3D feature map** (8x2D layers, each representing other entities, e.g. road layer, pedestrians layer) - made specifically to feed your CNN\n- feature map **can be converted to an RGB** image\n- layers can be easily removed\n- caching mechanism for static layers like: roads and lanes\n- using **OpenCV rendering** (efficient, multi-threading friendly) instead of slow Pygame method\n- huge **FPS speedup** thanks to restricted rendering (only agent's surroundings, not whole map)\n- all CARLA maps are supported out-of-the-box, custom maps with valid OpenDrive file made in RoadRunner are also supported\n- current implementation is specifically  adjusted for highway scenarios (prolonged shape), but other shapes and crops are easy to implement \n\n### Installation\n```bash\npip install carla-birdeye-view\n```\n\n### How to run\nMake sure that `PYTHONPATH` env variable contains CARLA distribution egg, so that `carla` package can be imported.\n```bash\n# Launch server instance\n./CarlaUE4.sh\n\n# (optional) For CARLA 0.9.8+ you may get additional performance improvement with this\npython PythonAPI/util/config.py --no-rendering\n\n# Preview while cruising on autopilot (birdview/__main__.py)\npython -m carla_birdeye_view\n```\n\n### Basic code usage\n\n```python\nfrom carla_birdeye_view import BirdViewProducer, BirdViewCropType, PixelDimensions\n\nbirdview_producer = BirdViewProducer(\n    client,  # carla.Client\n    target_size=PixelDimensions(width=150, height=336),\n    pixels_per_meter=4,\n    crop_type=BirdViewCropType.FRONT_AND_REAR_AREA\n)\n\n# Input for your model - call it every simulation step\n# returned result is np.ndarray with ones and zeros of shape (8, height, width)\nbirdview = birdview_producer.produce(\n    agent_vehicle=agent  # carla.Actor (spawned vehicle)\n)\n\n# Use only if you want to visualize\n# produces np.ndarray of shape (height, width, 3)\nrgb = BirdViewProducer.as_rgb(birdview)\n```\n\n### Contribution and feedback\nWe'd :heart: to collct any feedback, issues and pull requests!\n\n### Credits\n\nProject born at [deepsense.ai](deepsense.ai), made by:\n\n![](https://avatars2.githubusercontent.com/u/12485656?s=22&v=4) [Micha\u0142 Martyniak (@micmarty)](https://micmarty.github.io)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deepsense-ai/carla-birdeye-view", "keywords": "CARLA,birdview,bird-eye's view,Reinforcement Learning,RL", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "carla-birdeye-view", "package_url": "https://pypi.org/project/carla-birdeye-view/", "platform": "", "project_url": "https://pypi.org/project/carla-birdeye-view/", "project_urls": {"Homepage": "https://github.com/deepsense-ai/carla-birdeye-view"}, "release_url": "https://pypi.org/project/carla-birdeye-view/1.0.21/", "requires_dist": null, "requires_python": "", "summary": "Bird-eye's view for CARLA simulator", "version": "1.0.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50dc38aae40763538159e7cfc2eb15c7ba873157/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f6e747269627574696f6e7325323077656c636f6d652d666f726b696e67253345636f7079696e672d6f72616e67652e7376673f7374796c653d706f706f75742d737175617265\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e33875f2bbd498b7e3551120a19b3f04383be5fc/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f72656c656173652d76312e302e322d627269676874677265656e2e7376673f7374796c653d706f706f75742d737175617265\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf9341fc6ca73d5a931174b49542be06eb4b15bb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707970692d76312e302e322d627269676874677265656e2e7376673f7374796c653d706f706f75742d737175617265\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b51d47c187b6589f191e657bdd9911ba3e329f04/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4341524c412d302e392e362b2d626c75652e7376673f7374796c653d706f706f75742d737175617265\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70172e5a3712937640176434ffb09a32efaa75a9/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e36253230253743253230332e37253230253743332e382d626c75652e7376673f7374796c653d706f706f75742d737175617265\">\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3956e175a9376e6bb30f8d188a0875c184a4ed27/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d706f706f75742d737175617265\"></p>\n<h2>Bird-eye's view for CARLA</h2>\n<table>\n<thead>\n<tr>\n<th align=\"center\">Freeway-oriented shape</th>\n<th align=\"center\"><em><a href=\"https://arxiv.org/abs/1912.12294\" rel=\"nofollow\">Learning By Cheating</a></em>-like shape</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><img alt=\"cruising\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71864e5b921ad195863922dbfd6374ac8b7b7e8e/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f36343438343931372f38303530383139332d30346564646530302d383937382d313165612d393536642d3732316535306136613363392e676966\"></td>\n<td align=\"center\"><img alt=\"square-cruising\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/84df9d71ba0753bbb24e1fd5e9bc8eb6b2e83ac0/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f36343438343931372f38303530383039352d65343235383838302d383937372d313165612d383630312d3065383839343237313166662e676966\"></td>\n</tr></tbody></table>\n<p>(GIFs above present feature maps after applying <code>as_rgb()</code> function)</p>\n<h3>Motivation</h3>\n<p>During our <a href=\"https://arxiv.org/abs/1911.12905\" rel=\"nofollow\">research</a> we found a very inspiring paper called <a href=\"https://arxiv.org/abs/1912.12294\" rel=\"nofollow\">Learning By Cheating</a>. <strong>Bird-eye's view</strong> is made specifically to <strong>learn faster thanks to much simpler, 2D world representation</strong> (cheating oracle) which we think fits well in <strong>Reinforcement Learning</strong> setup.</p>\n<p>This repository is an almost complete reimplementation that gives better performance and compatibility with most recent versions of CARLA. You can use it out-of-the-box as input for your model, and if necessary convert and visualize into RGB.</p>\n<h3>Features</h3>\n<ul>\n<li><strong>one-hot 3D feature map</strong> (8x2D layers, each representing other entities, e.g. road layer, pedestrians layer) - made specifically to feed your CNN</li>\n<li>feature map <strong>can be converted to an RGB</strong> image</li>\n<li>layers can be easily removed</li>\n<li>caching mechanism for static layers like: roads and lanes</li>\n<li>using <strong>OpenCV rendering</strong> (efficient, multi-threading friendly) instead of slow Pygame method</li>\n<li>huge <strong>FPS speedup</strong> thanks to restricted rendering (only agent's surroundings, not whole map)</li>\n<li>all CARLA maps are supported out-of-the-box, custom maps with valid OpenDrive file made in RoadRunner are also supported</li>\n<li>current implementation is specifically  adjusted for highway scenarios (prolonged shape), but other shapes and crops are easy to implement</li>\n</ul>\n<h3>Installation</h3>\n<pre>pip install carla-birdeye-view\n</pre>\n<h3>How to run</h3>\n<p>Make sure that <code>PYTHONPATH</code> env variable contains CARLA distribution egg, so that <code>carla</code> package can be imported.</p>\n<pre><span class=\"c1\"># Launch server instance</span>\n./CarlaUE4.sh\n\n<span class=\"c1\"># (optional) For CARLA 0.9.8+ you may get additional performance improvement with this</span>\npython PythonAPI/util/config.py --no-rendering\n\n<span class=\"c1\"># Preview while cruising on autopilot (birdview/__main__.py)</span>\npython -m carla_birdeye_view\n</pre>\n<h3>Basic code usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">carla_birdeye_view</span> <span class=\"kn\">import</span> <span class=\"n\">BirdViewProducer</span><span class=\"p\">,</span> <span class=\"n\">BirdViewCropType</span><span class=\"p\">,</span> <span class=\"n\">PixelDimensions</span>\n\n<span class=\"n\">birdview_producer</span> <span class=\"o\">=</span> <span class=\"n\">BirdViewProducer</span><span class=\"p\">(</span>\n    <span class=\"n\">client</span><span class=\"p\">,</span>  <span class=\"c1\"># carla.Client</span>\n    <span class=\"n\">target_size</span><span class=\"o\">=</span><span class=\"n\">PixelDimensions</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"mi\">336</span><span class=\"p\">),</span>\n    <span class=\"n\">pixels_per_meter</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"n\">crop_type</span><span class=\"o\">=</span><span class=\"n\">BirdViewCropType</span><span class=\"o\">.</span><span class=\"n\">FRONT_AND_REAR_AREA</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Input for your model - call it every simulation step</span>\n<span class=\"c1\"># returned result is np.ndarray with ones and zeros of shape (8, height, width)</span>\n<span class=\"n\">birdview</span> <span class=\"o\">=</span> <span class=\"n\">birdview_producer</span><span class=\"o\">.</span><span class=\"n\">produce</span><span class=\"p\">(</span>\n    <span class=\"n\">agent_vehicle</span><span class=\"o\">=</span><span class=\"n\">agent</span>  <span class=\"c1\"># carla.Actor (spawned vehicle)</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Use only if you want to visualize</span>\n<span class=\"c1\"># produces np.ndarray of shape (height, width, 3)</span>\n<span class=\"n\">rgb</span> <span class=\"o\">=</span> <span class=\"n\">BirdViewProducer</span><span class=\"o\">.</span><span class=\"n\">as_rgb</span><span class=\"p\">(</span><span class=\"n\">birdview</span><span class=\"p\">)</span>\n</pre>\n<h3>Contribution and feedback</h3>\n<p>We'd :heart: to collct any feedback, issues and pull requests!</p>\n<h3>Credits</h3>\n<p>Project born at <a href=\"deepsense.ai\" rel=\"nofollow\">deepsense.ai</a>, made by:</p>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c69abfa23c566a86848c567a400a8a31773b9a91/68747470733a2f2f61766174617273322e67697468756275736572636f6e74656e742e636f6d2f752f31323438353635363f733d323226763d34\"> <a href=\"https://micmarty.github.io\" rel=\"nofollow\">Micha\u0142 Martyniak (@micmarty)</a></p>\n\n          </div>"}, "last_serial": 7188734, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "0bf2113d476a1c14253336558b4c8ef3", "sha256": "6a656afe89cebe4a1a1b680a09d055cfde79b68c43460198d40654e13f080d13"}, "downloads": -1, "filename": "carla_birdeye_view-1.0.tar.gz", "has_sig": false, "md5_digest": "0bf2113d476a1c14253336558b4c8ef3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3254, "upload_time": "2020-04-29T10:31:04", "upload_time_iso_8601": "2020-04-29T10:31:04.937757Z", "url": "https://files.pythonhosted.org/packages/5c/03/181c09ff9302a019b683bcfb832e6e99089a1e6c512427a9b22201ee89f5/carla_birdeye_view-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1e5c32bea3fe5870448765ee34957c09", "sha256": "e9b74f187b8da26bee470988171697540776d8fd661f60770b342a91e523af5d"}, "downloads": -1, "filename": "carla_birdeye_view-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1e5c32bea3fe5870448765ee34957c09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3301, "upload_time": "2020-04-29T10:41:41", "upload_time_iso_8601": "2020-04-29T10:41:41.235829Z", "url": "https://files.pythonhosted.org/packages/03/de/86d33346251b020f10b9a4878b01a685b04502afabf117ff100f607e4ef3/carla_birdeye_view-1.0.1.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "64316dd27dbd4cc808ca04a763bcee4e", "sha256": "9a4397dc49555f11ea3de036f1b9f161cba42ea6957ebf5b0248f3a6ab91ca78"}, "downloads": -1, "filename": "carla-birdeye-view-1.0.11.tar.gz", "has_sig": false, "md5_digest": "64316dd27dbd4cc808ca04a763bcee4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14022, "upload_time": "2020-04-30T11:09:58", "upload_time_iso_8601": "2020-04-30T11:09:58.508533Z", "url": "https://files.pythonhosted.org/packages/06/cb/a8da0030d0a750dfca1bc1e021a41dea1be5e21c858b24f3eb555f8ab6a0/carla-birdeye-view-1.0.11.tar.gz", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "236e24ef0dde7470c3ed5cd48bc64428", "sha256": "e32f37abdd24ac701c45b8cb55b790d5b8a23dc4fa92f5bd1bb774a47cd41f1b"}, "downloads": -1, "filename": "carla-birdeye-view-1.0.13.tar.gz", "has_sig": false, "md5_digest": "236e24ef0dde7470c3ed5cd48bc64428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14315, "upload_time": "2020-04-30T11:21:54", "upload_time_iso_8601": "2020-04-30T11:21:54.430430Z", "url": "https://files.pythonhosted.org/packages/31/77/c9c69512e43bdf9a3684d010cca66d7096a3afa603aba2202daf40c72181/carla-birdeye-view-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "6144ea2e9c8094f98b947c384e3fc0c4", "sha256": "131f5a7a3e5ab930f64c7032e9a006997a4e33f0878b7bfa66baf97e200ae259"}, "downloads": -1, "filename": "carla-birdeye-view-1.0.14.tar.gz", "has_sig": false, "md5_digest": "6144ea2e9c8094f98b947c384e3fc0c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14355, "upload_time": "2020-04-30T11:32:50", "upload_time_iso_8601": "2020-04-30T11:32:50.790608Z", "url": "https://files.pythonhosted.org/packages/08/6f/3338bda173f38f558ff29e06cb8bbb6d9c2938d136d3c891450ec2adf8cc/carla-birdeye-view-1.0.14.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "46b0f16931ec760ef3b03b05a9a05089", "sha256": "ddbf25ce3bb5417893947393df1bd1a82effc3527cdcb69885861f2c2ed0662c"}, "downloads": -1, "filename": "carla-birdeye-view-1.0.2.tar.gz", "has_sig": false, "md5_digest": "46b0f16931ec760ef3b03b05a9a05089", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14616, "upload_time": "2020-05-07T13:16:27", "upload_time_iso_8601": "2020-05-07T13:16:27.488698Z", "url": "https://files.pythonhosted.org/packages/b7/e7/992dbba7c8be387e885b2841cacefcca912365a0a3b78d3ef9300ada599e/carla-birdeye-view-1.0.2.tar.gz", "yanked": false}], "1.0.21": [{"comment_text": "", "digests": {"md5": "75b6397d26284697e30d40fff43c9507", "sha256": "31a8dc6ab406f95fb629edc8fd38e5876aacf6ca3cd59df828811a437c2a3b65"}, "downloads": -1, "filename": "carla-birdeye-view-1.0.21.tar.gz", "has_sig": false, "md5_digest": "75b6397d26284697e30d40fff43c9507", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14680, "upload_time": "2020-05-07T13:48:59", "upload_time_iso_8601": "2020-05-07T13:48:59.509708Z", "url": "https://files.pythonhosted.org/packages/5c/64/7ad3be85048410f1836ebe4bc894a2c02759c487eec4d3a88ed797093911/carla-birdeye-view-1.0.21.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75b6397d26284697e30d40fff43c9507", "sha256": "31a8dc6ab406f95fb629edc8fd38e5876aacf6ca3cd59df828811a437c2a3b65"}, "downloads": -1, "filename": "carla-birdeye-view-1.0.21.tar.gz", "has_sig": false, "md5_digest": "75b6397d26284697e30d40fff43c9507", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14680, "upload_time": "2020-05-07T13:48:59", "upload_time_iso_8601": "2020-05-07T13:48:59.509708Z", "url": "https://files.pythonhosted.org/packages/5c/64/7ad3be85048410f1836ebe4bc894a2c02759c487eec4d3a88ed797093911/carla-birdeye-view-1.0.21.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:24 2020"}