{"info": {"author": "Tracy Lai", "author_email": "me@tracycool.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "easycommandline.py\n==================\n\na solution for python command-line interfaces, inspired by\n`tj/commander.js <https://github.com/tj/commander.js>`__\n\nInstallation\n============\n\n::\n\n    $ pip install easycommandline\n\nOption\n======\n\nOptions are defined with the ``.options()`` method, also serving as\ndocumentation for the options. The example below parses args and options\nfrom ``sys.argv``\n\n.. code:: python\n\n    # file favcolor.py\n\n    from easycommandline import program\n\n    program.version('1.0.1')\n    program.options(\n            ('-r', '--red'),\n            ('-g', '--green'),\n            ('-b', '--blue'),\n            ('-w', '--white'),\n        )\n    program.parse_argv()\n\n    if program.red:\n        print('- red')\n    if program.blue:\n        print('- blue')\n    if program.white:\n        print('- white')\n\n::\n\n    $ python favcolor.py -r -w\n        - red\n        - white\n\nCoercion\n========\n\n.. code:: python\n\n    # file coercion.py\n\n    from easycommandline import program\n\n    def collect(value, previous_value):\n        previous_value.append(value)\n        return previous_value\n\n    def make_range(value):\n        components = value.split('..')\n        return range( int(components[0]), int(components[1]) )\n\n    def sum(value, previous_value):\n        return previous_value + int(value)\n\n    program.version('1.0.1')\n    program.options(\n            ('-r', '--recursive'),\n            ('-p', '--preload', 'preload enabled'),\n            ('-n', '--name', 'username'),\n            ('-i', '--integer <int>', 'an integer argument', int),\n            ('-f', '--float <float>', 'a float argument', float),\n            ('-a', '--anotherfloat', 'another float argument', float),\n            ('-c', '--collection [example]', 'collection', collect, []),\n            ('-x', '--range A..B', 'range', make_range),\n            ('-s', '--sum', 'the sum of numbers', sum, 0),\n        )\n    program.parse_argv()\n\n    print('recursive  : ', program.recursive)\n    print('preload    : ', program.preload)\n    print('name       : ', program.name)\n    print('integer    : ', program.integer)\n    print('float      : ', program.float)\n    print('collection : ', program.collection)\n    print('range      : ', program.range)\n    print('sum        : ', program.sum)\n\n::\n\n    $ python coercion.py -p --name Tracy -i 1000 --range 5..8 -s 1 2 3 4\n        recursive  :  None\n        preload    :  True\n        name       :  Tracy\n        integer    :  1000\n        float      :  None\n        collection :  []\n        range      :  [5, 6, 7]\n        sum        :  10\n\nCommand\n=======\n\n| specifies\n| argument required with ``< >``\n| argument optional with ``[ ]``, cannot specify more than **one**\n  optional argument\n\n.. code:: python\n\n    # file cmd.py\n\n    from easycommandline import program\n    import os\n\n    program.version('1.0.1')\n\n\n    cmd = program.cmd('cd <path>')\n    cmd.options(\n            ('-c', '--create', 'create directory if not existed'),\n            )\n    cmd.description('change directory')\n    @cmd.action\n    def action_for_cmd_cd(cmd, path):\n        if cmd.create and not os.path.exists(path):\n            os.makedirs(path)\n\n\n\n    cmd = program.cmd('start server <path> [env]')\n    @cmd.action\n    def action_for_cmd_start_server(cmd, path, env):\n        print(path)\n        print(env)\n\n\n    program.parse_argv()\n\n::\n\n    $ python cmd.py cd ~/Desktop/abc -c\n    $ python cmd.py start server ~/Desktop/abc production\n\nAutomated --help\n================\n\n::\n\n    $ python coercion.py -h\n\n        Usage: python coercion.py [options]\n\n        Options:\n\n        -h, --help                  output usage information \n        -V, --version               output the version number\n        -r, --recursive                                      \n        -p, --preload               preload enabled          \n        -n, --name                  username                 \n        -i, --integer <int>         an integer argument      \n        -f, --float <float>         a float argument         \n        -a, --anotherfloat          another float argument   \n        -c, --collection [example]  collection               \n        -x, --range A..B            range                    \n        -s, --sum                   the sum of numbers", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tracycool/easycommandline", "keywords": "python command line option argument argv", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "easycommandline", "package_url": "https://pypi.org/project/easycommandline/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/easycommandline/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tracycool/easycommandline"}, "release_url": "https://pypi.org/project/easycommandline/1.8.1/", "requires_dist": null, "requires_python": null, "summary": "python command-line interfaces made easy", "version": "1.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"easycommandline-py\">\n<h2>easycommandline.py</h2>\n<p>a solution for python command-line interfaces, inspired by\n<a href=\"https://github.com/tj/commander.js\" rel=\"nofollow\">tj/commander.js</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install easycommandline\n</pre>\n</div>\n<div id=\"option\">\n<h2>Option</h2>\n<p>Options are defined with the <tt>.options()</tt> method, also serving as\ndocumentation for the options. The example below parses args and options\nfrom <tt>sys.argv</tt></p>\n<pre><span class=\"c1\"># file favcolor.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">easycommandline</span> <span class=\"kn\">import</span> <span class=\"n\">program</span>\n\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">(</span><span class=\"s1\">'1.0.1'</span><span class=\"p\">)</span>\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-r'</span><span class=\"p\">,</span> <span class=\"s1\">'--red'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-g'</span><span class=\"p\">,</span> <span class=\"s1\">'--green'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-b'</span><span class=\"p\">,</span> <span class=\"s1\">'--blue'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-w'</span><span class=\"p\">,</span> <span class=\"s1\">'--white'</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">parse_argv</span><span class=\"p\">()</span>\n\n<span class=\"k\">if</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">red</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'- red'</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">blue</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'- blue'</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">white</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'- white'</span><span class=\"p\">)</span>\n</pre>\n<pre>$ python favcolor.py -r -w\n    - red\n    - white\n</pre>\n</div>\n<div id=\"coercion\">\n<h2>Coercion</h2>\n<pre><span class=\"c1\"># file coercion.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">easycommandline</span> <span class=\"kn\">import</span> <span class=\"n\">program</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">collect</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">previous_value</span><span class=\"p\">):</span>\n    <span class=\"n\">previous_value</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">previous_value</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">make_range</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">):</span>\n    <span class=\"n\">components</span> <span class=\"o\">=</span> <span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"s1\">'..'</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"nb\">range</span><span class=\"p\">(</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]),</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">components</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span> <span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">previous_value</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">previous_value</span> <span class=\"o\">+</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">(</span><span class=\"s1\">'1.0.1'</span><span class=\"p\">)</span>\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-r'</span><span class=\"p\">,</span> <span class=\"s1\">'--recursive'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-p'</span><span class=\"p\">,</span> <span class=\"s1\">'--preload'</span><span class=\"p\">,</span> <span class=\"s1\">'preload enabled'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-n'</span><span class=\"p\">,</span> <span class=\"s1\">'--name'</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-i'</span><span class=\"p\">,</span> <span class=\"s1\">'--integer &lt;int&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'an integer argument'</span><span class=\"p\">,</span> <span class=\"nb\">int</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-f'</span><span class=\"p\">,</span> <span class=\"s1\">'--float &lt;float&gt;'</span><span class=\"p\">,</span> <span class=\"s1\">'a float argument'</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-a'</span><span class=\"p\">,</span> <span class=\"s1\">'--anotherfloat'</span><span class=\"p\">,</span> <span class=\"s1\">'another float argument'</span><span class=\"p\">,</span> <span class=\"nb\">float</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-c'</span><span class=\"p\">,</span> <span class=\"s1\">'--collection [example]'</span><span class=\"p\">,</span> <span class=\"s1\">'collection'</span><span class=\"p\">,</span> <span class=\"n\">collect</span><span class=\"p\">,</span> <span class=\"p\">[]),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-x'</span><span class=\"p\">,</span> <span class=\"s1\">'--range A..B'</span><span class=\"p\">,</span> <span class=\"s1\">'range'</span><span class=\"p\">,</span> <span class=\"n\">make_range</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-s'</span><span class=\"p\">,</span> <span class=\"s1\">'--sum'</span><span class=\"p\">,</span> <span class=\"s1\">'the sum of numbers'</span><span class=\"p\">,</span> <span class=\"nb\">sum</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n    <span class=\"p\">)</span>\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">parse_argv</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'recursive  : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">recursive</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'preload    : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">preload</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'name       : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'integer    : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">integer</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'float      : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">float</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'collection : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'range      : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">range</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'sum        : '</span><span class=\"p\">,</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">)</span>\n</pre>\n<pre>$ python coercion.py -p --name Tracy -i 1000 --range 5..8 -s 1 2 3 4\n    recursive  :  None\n    preload    :  True\n    name       :  Tracy\n    integer    :  1000\n    float      :  None\n    collection :  []\n    range      :  [5, 6, 7]\n    sum        :  10\n</pre>\n</div>\n<div id=\"command\">\n<h2>Command</h2>\n<div>\n<div>specifies</div>\n<div>argument required with <tt>&lt; &gt;</tt></div>\n<div>argument optional with <tt>[ ]</tt>, cannot specify more than <strong>one</strong>\noptional argument</div>\n</div>\n<pre><span class=\"c1\"># file cmd.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">easycommandline</span> <span class=\"kn\">import</span> <span class=\"n\">program</span>\n<span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">version</span><span class=\"p\">(</span><span class=\"s1\">'1.0.1'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s1\">'cd &lt;path&gt;'</span><span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">options</span><span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"s1\">'-c'</span><span class=\"p\">,</span> <span class=\"s1\">'--create'</span><span class=\"p\">,</span> <span class=\"s1\">'create directory if not existed'</span><span class=\"p\">),</span>\n        <span class=\"p\">)</span>\n<span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">(</span><span class=\"s1\">'change directory'</span><span class=\"p\">)</span>\n<span class=\"nd\">@cmd</span><span class=\"o\">.</span><span class=\"n\">action</span>\n<span class=\"k\">def</span> <span class=\"nf\">action_for_cmd_cd</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">cmd</span><span class=\"o\">.</span><span class=\"n\">create</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">):</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">makedirs</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n\n\n\n<span class=\"n\">cmd</span> <span class=\"o\">=</span> <span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">cmd</span><span class=\"p\">(</span><span class=\"s1\">'start server &lt;path&gt; [env]'</span><span class=\"p\">)</span>\n<span class=\"nd\">@cmd</span><span class=\"o\">.</span><span class=\"n\">action</span>\n<span class=\"k\">def</span> <span class=\"nf\">action_for_cmd_start_server</span><span class=\"p\">(</span><span class=\"n\">cmd</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">program</span><span class=\"o\">.</span><span class=\"n\">parse_argv</span><span class=\"p\">()</span>\n</pre>\n<pre>$ python cmd.py cd ~/Desktop/abc -c\n$ python cmd.py start server ~/Desktop/abc production\n</pre>\n</div>\n<div id=\"automated-help\">\n<h2>Automated \u2013help</h2>\n<pre>$ python coercion.py -h\n\n    Usage: python coercion.py [options]\n\n    Options:\n\n    -h, --help                  output usage information\n    -V, --version               output the version number\n    -r, --recursive\n    -p, --preload               preload enabled\n    -n, --name                  username\n    -i, --integer &lt;int&gt;         an integer argument\n    -f, --float &lt;float&gt;         a float argument\n    -a, --anotherfloat          another float argument\n    -c, --collection [example]  collection\n    -x, --range A..B            range\n    -s, --sum                   the sum of numbers\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1668108, "releases": {"1.8.1": [{"comment_text": "", "digests": {"md5": "b51246c2f8a2ddaede8838ee80deb52b", "sha256": "b13b3684c100d4e690926dbfd13fda3d70251bd56971b31af68e6ed1077d1bc9"}, "downloads": -1, "filename": "easycommandline-1.8.1.tar.gz", "has_sig": false, "md5_digest": "b51246c2f8a2ddaede8838ee80deb52b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6688, "upload_time": "2015-07-18T03:47:30", "upload_time_iso_8601": "2015-07-18T03:47:30.557284Z", "url": "https://files.pythonhosted.org/packages/dc/ac/5239d01eb4d7137759d7627ec6cbb10060e70e27bf871b535f79ad7f75a4/easycommandline-1.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b51246c2f8a2ddaede8838ee80deb52b", "sha256": "b13b3684c100d4e690926dbfd13fda3d70251bd56971b31af68e6ed1077d1bc9"}, "downloads": -1, "filename": "easycommandline-1.8.1.tar.gz", "has_sig": false, "md5_digest": "b51246c2f8a2ddaede8838ee80deb52b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6688, "upload_time": "2015-07-18T03:47:30", "upload_time_iso_8601": "2015-07-18T03:47:30.557284Z", "url": "https://files.pythonhosted.org/packages/dc/ac/5239d01eb4d7137759d7627ec6cbb10060e70e27bf871b535f79ad7f75a4/easycommandline-1.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:25 2020"}