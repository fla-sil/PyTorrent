{"info": {"author": "Peter V. Saveliev", "author_email": "peet@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Simple Python VFS library\n+++++++++++++++++++++++++\n\nPyVFS is a simple pure Python VFS library. It consists of\nseveral layers, allowing to use different low-level protocol\nimplementations. Now you can choose between 9p (9p2000.u)\nand FUSE (you should have python-py9p or python-fuse\ninstalled).\n\nThe library has several options to control access to the\nfilesystem, from FUSE restrictions to PKI client authentication\nin 9p2000 protocol. You can mount your FS with TCP/IP or\nUNIX sockets, or simply browse it with 9p clients without\nmounting.\n\nThe simplest example. Environment variables::\n\n    export PYVFS_PROTO=9p\n    export PYVFS_ADDRESS=/tmp/socket\n\nYour script::\n\n    # import server\n    from pyvfs.utils import Server\n    # create it\n    srv = Server()\n    # start it in foreground\n    srv.run()\n\nClient side, 9p + UNIX socket::\n\n    $ sudo mount -t 9p -o trans=unix /tmp/socket /mnt\n\nObjectFS\n========\n\nObjectFS (``pyvfs.objectfs``) is a library that allows you\nto export your Python objects on a dynamic filesystem.\nObjectFS integration is extremely simple and engages only\nthe decorator import and usage. The developer should not\ncare about almost any of fs-related issues. Objects of the\ndecorated classes will automatically appear as file trees\non a dynamic filesystem with read/write access.\n\nExample. Environment variables::\n\n    export PYVFS_PROTO=fuse\n    export PYVFS_MOUNTPOINT=~/mnt\n\nYour script::\n\n    # simply import the library in your code\n    from pyvfs.objectfs import export\n    # decorate a class\n    @export\n    class MyClass(object):\n        some code\n\nClient side (already mounted!)::\n\n    # ls -l ~/mnt\n\nPyVFS\n=====\n\nAlso you can write your own applications with PyVFS. E.g.,\none can utilize file I/O as an RPC interface, or use a\ndynamic filesystem for runtime service configuration.\n\nMore details in the documentation and examples.\n\nLinks\n=====\n\n * home: https://github.com/svinota/pyvfs\n * bugs: https://github.com/svinota/pyvfs/issues\n * docs: http://peet.spb.ru/pyvfs/\n * wiki: https://github.com/svinota/pyvfs/wiki\n * pypi: http://pypi.python.org/pypi/objectfs/\n * list: https://groups.google.com/forum/#!forum/pyvfs\n\n\nChanges\n=======\n\n0.2.9 -- Mesoarchean\n--------------------\n\n * unicode literals fixed\n\n0.2.8 -- Paleoarchean\n---------------------\n\n * directory listing fixes\n\n0.2.7 -- Eoarchaean\n-------------------\n\n * support authentication options\n * support setuid, setgid, sticky bits\n\n0.2.6 -- Hadean\n---------------\n\n * initial pypi release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/svinota/pyvfs", "keywords": null, "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "objectfs", "package_url": "https://pypi.org/project/objectfs/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/objectfs/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/svinota/pyvfs"}, "release_url": "https://pypi.org/project/objectfs/0.2.9/", "requires_dist": null, "requires_python": null, "summary": "Simple Python VFS module", "version": "0.2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyVFS is a simple pure Python VFS library. It consists of\nseveral layers, allowing to use different low-level protocol\nimplementations. Now you can choose between 9p (9p2000.u)\nand FUSE (you should have python-py9p or python-fuse\ninstalled).</p>\n<p>The library has several options to control access to the\nfilesystem, from FUSE restrictions to PKI client authentication\nin 9p2000 protocol. You can mount your FS with TCP/IP or\nUNIX sockets, or simply browse it with 9p clients without\nmounting.</p>\n<p>The simplest example. Environment variables:</p>\n<pre>export PYVFS_PROTO=9p\nexport PYVFS_ADDRESS=/tmp/socket\n</pre>\n<p>Your script:</p>\n<pre># import server\nfrom pyvfs.utils import Server\n# create it\nsrv = Server()\n# start it in foreground\nsrv.run()\n</pre>\n<p>Client side, 9p + UNIX socket:</p>\n<pre>$ sudo mount -t 9p -o trans=unix /tmp/socket /mnt\n</pre>\n<div id=\"objectfs\">\n<h2>ObjectFS</h2>\n<p>ObjectFS (<tt>pyvfs.objectfs</tt>) is a library that allows you\nto export your Python objects on a dynamic filesystem.\nObjectFS integration is extremely simple and engages only\nthe decorator import and usage. The developer should not\ncare about almost any of fs-related issues. Objects of the\ndecorated classes will automatically appear as file trees\non a dynamic filesystem with read/write access.</p>\n<p>Example. Environment variables:</p>\n<pre>export PYVFS_PROTO=fuse\nexport PYVFS_MOUNTPOINT=~/mnt\n</pre>\n<p>Your script:</p>\n<pre># simply import the library in your code\nfrom pyvfs.objectfs import export\n# decorate a class\n@export\nclass MyClass(object):\n    some code\n</pre>\n<p>Client side (already mounted!):</p>\n<pre># ls -l ~/mnt\n</pre>\n</div>\n<div id=\"pyvfs\">\n<h2>PyVFS</h2>\n<p>Also you can write your own applications with PyVFS. E.g.,\none can utilize file I/O as an RPC interface, or use a\ndynamic filesystem for runtime service configuration.</p>\n<p>More details in the documentation and examples.</p>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<blockquote>\n<ul>\n<li>home: <a href=\"https://github.com/svinota/pyvfs\" rel=\"nofollow\">https://github.com/svinota/pyvfs</a></li>\n<li>bugs: <a href=\"https://github.com/svinota/pyvfs/issues\" rel=\"nofollow\">https://github.com/svinota/pyvfs/issues</a></li>\n<li>docs: <a href=\"http://peet.spb.ru/pyvfs/\" rel=\"nofollow\">http://peet.spb.ru/pyvfs/</a></li>\n<li>wiki: <a href=\"https://github.com/svinota/pyvfs/wiki\" rel=\"nofollow\">https://github.com/svinota/pyvfs/wiki</a></li>\n<li>pypi: <a href=\"http://pypi.python.org/pypi/objectfs/\" rel=\"nofollow\">http://pypi.python.org/pypi/objectfs/</a></li>\n<li>list: <a href=\"https://groups.google.com/forum/#!forum/pyvfs\" rel=\"nofollow\">https://groups.google.com/forum/#!forum/pyvfs</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"mesoarchean\">\n<h3>0.2.9 \u2013 Mesoarchean</h3>\n<blockquote>\n<ul>\n<li>unicode literals fixed</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"paleoarchean\">\n<h3>0.2.8 \u2013 Paleoarchean</h3>\n<blockquote>\n<ul>\n<li>directory listing fixes</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"eoarchaean\">\n<h3>0.2.7 \u2013 Eoarchaean</h3>\n<blockquote>\n<ul>\n<li>support authentication options</li>\n<li>support setuid, setgid, sticky bits</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"hadean\">\n<h3>0.2.6 \u2013 Hadean</h3>\n<blockquote>\n<ul>\n<li>initial pypi release</li>\n</ul>\n</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 795644, "releases": {"0.2.6": [{"comment_text": "", "digests": {"md5": "1987a97261d558352d2d307b0d17d7d3", "sha256": "30a5bb176ba7625c56a65a5f9d2f54599e718837288de4edb656395c7763ec5a"}, "downloads": -1, "filename": "objectfs-0.2.6.tar.gz", "has_sig": false, "md5_digest": "1987a97261d558352d2d307b0d17d7d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26730, "upload_time": "2012-10-22T15:01:59", "upload_time_iso_8601": "2012-10-22T15:01:59.467263Z", "url": "https://files.pythonhosted.org/packages/a5/f4/140f04f1dbd48ebacaa278a3fc9d015713c2da98f48af1cf92ce23e6da60/objectfs-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "1e881be6ffd5bf085c2aa6ae03f6d4fc", "sha256": "b8675d2b879ec9e152345c05a3c2a076d75905f616f86cbdf14a389692f70975"}, "downloads": -1, "filename": "objectfs-0.2.7.tar.gz", "has_sig": false, "md5_digest": "1e881be6ffd5bf085c2aa6ae03f6d4fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27515, "upload_time": "2012-10-26T18:20:49", "upload_time_iso_8601": "2012-10-26T18:20:49.972393Z", "url": "https://files.pythonhosted.org/packages/f9/c4/d2823fab62e25207a795dc3eeb3dfc6039da87f885a747a08a2a84a56a21/objectfs-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "ff608ce8149b3846bceb92e5b0b6f324", "sha256": "0fa531dc9d8be724351e15cd5941f51fe2813a4f9f1d0b6eb9e93cb6356751e3"}, "downloads": -1, "filename": "objectfs-0.2.8.tar.gz", "has_sig": false, "md5_digest": "ff608ce8149b3846bceb92e5b0b6f324", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28603, "upload_time": "2012-11-29T14:00:30", "upload_time_iso_8601": "2012-11-29T14:00:30.617408Z", "url": "https://files.pythonhosted.org/packages/f0/b0/2db939ba7e284b0867dd2514c9d748d8ed93e4654e197e46fed12ab6f8bb/objectfs-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "a2665fdc8f5834eacdba755776a5e895", "sha256": "969a577e653dd45c3d224e893786b59fe091064ba3e14d93094561098a53b676"}, "downloads": -1, "filename": "objectfs-0.2.9.tar.gz", "has_sig": false, "md5_digest": "a2665fdc8f5834eacdba755776a5e895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28620, "upload_time": "2013-01-03T11:58:21", "upload_time_iso_8601": "2013-01-03T11:58:21.331668Z", "url": "https://files.pythonhosted.org/packages/bd/b1/3439281a92ce17e2f932500692afab22cf284de72b030b369f83598df91b/objectfs-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a2665fdc8f5834eacdba755776a5e895", "sha256": "969a577e653dd45c3d224e893786b59fe091064ba3e14d93094561098a53b676"}, "downloads": -1, "filename": "objectfs-0.2.9.tar.gz", "has_sig": false, "md5_digest": "a2665fdc8f5834eacdba755776a5e895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28620, "upload_time": "2013-01-03T11:58:21", "upload_time_iso_8601": "2013-01-03T11:58:21.331668Z", "url": "https://files.pythonhosted.org/packages/bd/b1/3439281a92ce17e2f932500692afab22cf284de72b030b369f83598df91b/objectfs-0.2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:49 2020"}