{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Programming Language :: Python"], "description": "collective.autosaveform\n=======================\n\nThe goal of this product is to save what user entered in a form and\npossibly repopulate the form when something bad happened (browser\ncrash, lost internet access etc).\n\nIf available, it stores data entered in the browser's local storage\nand sends them to the server to copy them. If the local storage is not\navailable, it always sends the data to the server.\nIf a problem arise, the form will be prepopulated when the user opens\nis again.\n\nInstallation\n============\n\nAdd 'collective.autosaveform' to your list of eggs in the\nbuildout. Run buildout again, then install it using Zope quick\ninstaller (or Plone product managment).\n\nSample\n======\n\nA form sample can be found at this address:\n\n  http://localhost:8080/<yourplonesite>/autosave_sample\n\n\nSetting up forms\n================\n\nTo enable auto saving of a form, you first need to add an ID to your\nform::\n\n  <form id=\"my_saved_form\">\n  </form>\n\nThen, you have to register it on the Python side. This can be done via\nan upgrade step for example::\n\n  from collective.autosaveform import config\n  from Products.CMFCore.utils import getToolByName\n\n  def register_form(context):\n      tool = getToolByName(context, 'portal_autosaveform')\n      try:\n          tool.register_form('my_saved_form',\n                             {'text_field': config.TEXT,\n                              'radio_field': config.RADIO})\n      except:\n          # Log that the form was already registered.\n\t  pass\n\nWhen you process the form, you should also mark it as processed (so\nthe data will not be filled again)::\n\n  def process_form(...):\n      # Process the form ...\n      tool = getToolByName(context, 'portal_autosaveform')\n      tool.mark_form_processed('my_saved_form')\n\n    \n\nLast step, in the template where your form is located, enable the\njQuery plugin to have your form automatically saved::\n\n  <script type=\"text/javascript\">\n    jq('#my_saved_form').autosaveform();\n  </script>\n\nYou can have a look at the jQuery plugin for available options\n(collective/autosaveform/skins/autosaveform/jquery.autosaveforms.js).\n\nChangelog\n=========\n\n0.2 (2011-10-13)\n----------------\n\n- Bugfix: calback was not called when the form is marked as\n  processed. [vincent]\n\n\n0.1 (2011-10-13)\n----------------\n\n- Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.autosaveform", "package_url": "https://pypi.org/project/collective.autosaveform/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.autosaveform/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/"}, "release_url": "https://pypi.org/project/collective.autosaveform/0.2/", "requires_dist": null, "requires_python": null, "summary": "Utilities to auto save forms while user fills them", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"collective-autosaveform\">\n<h2>collective.autosaveform</h2>\n<p>The goal of this product is to save what user entered in a form and\npossibly repopulate the form when something bad happened (browser\ncrash, lost internet access etc).</p>\n<p>If available, it stores data entered in the browser\u2019s local storage\nand sends them to the server to copy them. If the local storage is not\navailable, it always sends the data to the server.\nIf a problem arise, the form will be prepopulated when the user opens\nis again.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Add \u2018collective.autosaveform\u2019 to your list of eggs in the\nbuildout. Run buildout again, then install it using Zope quick\ninstaller (or Plone product managment).</p>\n</div>\n<div id=\"sample\">\n<h2>Sample</h2>\n<p>A form sample can be found at this address:</p>\n<blockquote>\n<a href=\"http://localhost:8080\" rel=\"nofollow\">http://localhost:8080</a>/&lt;yourplonesite&gt;/autosave_sample</blockquote>\n</div>\n<div id=\"setting-up-forms\">\n<h2>Setting up forms</h2>\n<p>To enable auto saving of a form, you first need to add an ID to your\nform:</p>\n<pre>&lt;form id=\"my_saved_form\"&gt;\n&lt;/form&gt;\n</pre>\n<p>Then, you have to register it on the Python side. This can be done via\nan upgrade step for example:</p>\n<pre>from collective.autosaveform import config\nfrom Products.CMFCore.utils import getToolByName\n\ndef register_form(context):\n    tool = getToolByName(context, 'portal_autosaveform')\n    try:\n        tool.register_form('my_saved_form',\n                           {'text_field': config.TEXT,\n                            'radio_field': config.RADIO})\n    except:\n        # Log that the form was already registered.\n        pass\n</pre>\n<p>When you process the form, you should also mark it as processed (so\nthe data will not be filled again):</p>\n<pre>def process_form(...):\n    # Process the form ...\n    tool = getToolByName(context, 'portal_autosaveform')\n    tool.mark_form_processed('my_saved_form')\n</pre>\n<p>Last step, in the template where your form is located, enable the\njQuery plugin to have your form automatically saved:</p>\n<pre>&lt;script type=\"text/javascript\"&gt;\n  jq('#my_saved_form').autosaveform();\n&lt;/script&gt;\n</pre>\n<p>You can have a look at the jQuery plugin for available options\n(collective/autosaveform/skins/autosaveform/jquery.autosaveforms.js).</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2 (2011-10-13)</h3>\n<ul>\n<li>Bugfix: calback was not called when the form is marked as\nprocessed. [vincent]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1 (2011-10-13)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 739301, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a1101acff55267728d14b440454d0807", "sha256": "c58f64edbf281d893dbc19d94728c577c998f7561b78532fc73d9d00aa750b90"}, "downloads": -1, "filename": "collective.autosaveform-0.1.zip", "has_sig": false, "md5_digest": "a1101acff55267728d14b440454d0807", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32615, "upload_time": "2011-10-13T15:19:45", "upload_time_iso_8601": "2011-10-13T15:19:45.820642Z", "url": "https://files.pythonhosted.org/packages/11/0c/267b9bd0bccb31bcc1baff6a81088019bc96c62e95aad9cae0273237c757/collective.autosaveform-0.1.zip", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2f7b5264c4488a744b64db56f0248ccd", "sha256": "4ca20abb76c3dc544536be356c1d26e4fe9a5f072caeff7214d353725a76af6c"}, "downloads": -1, "filename": "collective.autosaveform-0.2.zip", "has_sig": false, "md5_digest": "2f7b5264c4488a744b64db56f0248ccd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32792, "upload_time": "2011-10-13T15:32:53", "upload_time_iso_8601": "2011-10-13T15:32:53.814244Z", "url": "https://files.pythonhosted.org/packages/d0/4a/96b17ccafe55fae8005d21a292d4657ed76b7b6e3b40cdd3903da74c02d3/collective.autosaveform-0.2.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2f7b5264c4488a744b64db56f0248ccd", "sha256": "4ca20abb76c3dc544536be356c1d26e4fe9a5f072caeff7214d353725a76af6c"}, "downloads": -1, "filename": "collective.autosaveform-0.2.zip", "has_sig": false, "md5_digest": "2f7b5264c4488a744b64db56f0248ccd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32792, "upload_time": "2011-10-13T15:32:53", "upload_time_iso_8601": "2011-10-13T15:32:53.814244Z", "url": "https://files.pythonhosted.org/packages/d0/4a/96b17ccafe55fae8005d21a292d4657ed76b7b6e3b40cdd3903da74c02d3/collective.autosaveform-0.2.zip", "yanked": false}], "timestamp": "Thu May  7 22:18:02 2020"}