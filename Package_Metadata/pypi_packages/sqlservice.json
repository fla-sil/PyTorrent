{"info": {"author": "Derrick Gilland", "author_email": "dgilland@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Database", "Topic :: Database :: Front-Ends", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "**********\nsqlservice\n**********\n\n|version| |travis| |coveralls| |license|\n\n\nThe missing SQLAlchemy ORM interface.\n\n\nLinks\n=====\n\n- Project: https://github.com/dgilland/sqlservice\n- Documentation: http://sqlservice.readthedocs.io\n- PyPI: https://pypi.python.org/pypi/sqlservice/\n- TravisCI: https://travis-ci.org/dgilland/sqlservice\n\n\nIntroduction\n============\n\nSo what exactly is ``sqlservice`` and what does \"the missing SQLAlchemy ORM interface\" even mean? SQLAlchemy is a fantastic library and features a superb ORM layer. However, one thing SQLAlchemy lacks is a unified interface for easily interacting with your database through your ORM models. This is where ``sqlservice`` comes in. It's interface layer on top of SQLAlchemy's session manager and ORM layer that provides a single point to manage your database connection/session, create/reflect/drop your database objects, and easily persist/destroy model objects.\n\nFeatures\n--------\n\nThis library is meant to enhance your usage of SQLAlchemy. SQLAlchemy is great and this library tries to build upon that by providing useful abstractions on top of it.\n\n- Database client that helps manage an ORM scoped session.\n- Base class for a declarative ORM Model that makes updating model columns and relationships easier and converting to a dictionary a breeze.\n- Decorator-based event register for SQLAlchemy ORM events that can be used at the model class level. No need to register the event handler outside of the class definition.\n- An application-side nestable transaction context-manager that helps implement pseudo-subtransactions for those that want implicit transaction demarcation, i.e. session autocommit, without using session subtransactions.\n- And more!\n\n\nRequirements\n------------\n\n- Python >= 3.4\n- `SQLAlchemy <http://www.sqlalchemy.org/>`_ >= 1.0.0\n- `pydash <http://pydash.readthedocs.io>`_ >= 3.4.3\n\n\nQuickstart\n==========\n\nFirst, install using pip:\n\n\n::\n\n    pip3 install sqlservice\n\n\nThen, define some ORM models:\n\n.. code-block:: python\n\n    import re\n\n    from sqlalchemy import Column, ForeignKey, orm, types\n\n    from sqlservice import declarative_base, event\n\n\n    Model = declarative_base()\n\n    class User(Model):\n        __tablename__ = 'user'\n\n        id = Column(types.Integer(), primary_key=True)\n        name = Column(types.String(100))\n        email = Column(types.String(100))\n        phone = Column(types.String(10))\n\n        roles = orm.relation('UserRole')\n\n        @event.on_set('phone', retval=True)\n        def on_set_phone(self, value, oldvalue, initator):\n            # Strip non-numeric characters from phone number.\n            return re.sub('[^0-9]', '', value)\n\n    class UserRole(Model):\n        __tablename__ = 'user_role'\n\n        id = Column(types.Integer(), primary_key=True)\n        user_id = Column(types.Integer(), ForeignKey('user.id'), nullable=False)\n        role = Column(types.String(25), nullable=False)\n\n\nNext, configure the database client:\n\n.. code-block:: python\n\n    from sqlservice import SQLClient\n\n    config = {\n        'SQL_DATABASE_URI': 'sqlite:///db.sql',\n        'SQL_ISOLATION_LEVEL': 'SERIALIZABLE',\n        'SQL_ECHO': True,\n        'SQL_ECHO_POOL': False,\n        'SQL_CONVERT_UNICODE': True,\n        'SQL_POOL_SIZE': 5,\n        'SQL_POOL_TIMEOUT': 30,\n        'SQL_POOL_RECYCLE': 3600,\n        'SQL_MAX_OVERFLOW': 10,\n        'SQL_AUTOCOMMIT': False,\n        'SQL_AUTOFLUSH': True,\n        'SQL_EXPIRE_ON_COMMIT': True\n    }\n\n    db = SQLClient(config, model_class=Model)\n\n\nPrepare the database by creating all tables:\n\n.. code-block:: python\n\n    db.create_all()\n\n\nFinally (whew!), start interacting with the database.\n\nInsert a new record in the database:\n\n.. code-block:: python\n\n    data = {'name': 'Jenny', 'email': 'jenny@example.com', 'phone': '555-867-5309'}\n    user = db.User.save(data)\n\n\nFetch records:\n\n.. code-block:: python\n\n    assert user is db.User.get(data.id)\n    assert user is db.User.find_one(id=user.id)\n    assert user is db.User.find(User.id == user.id)[0]\n\n\nSerialize to a ``dict``:\n\n.. code-block:: python\n\n    assert user.to_dict() == {'id': 1,\n                              'name': 'Jenny',\n                              'email': 'jenny@example.com',\n                              'phone': '5558675309'}\n\n    assert dict(user) == user.to_dict()\n\n\nUpdate the record and save:\n\n.. code-block:: python\n\n    user.phone = '222-867-5309'\n    db.User.save(user)\n\n\nUpsert on primary key automatically:\n\n.. code-block:: python\n\n    assert user is db.User({'id': 1,\n                            'name': 'Jenny',\n                            'email': 'jenny@example.com',\n                            'phone': '5558675309'})\n\n\nDestroy the model record:\n\n.. code-block:: python\n\n    db.User.destroy(user)\n    # OR db.User.destroy([user])\n    # OR db.User.destroy(user.id)\n    # OR db.User.destroy([user.id])\n    # OR db.User.destroy(dict(user))\n    # OR db.User.destroy([dict(user)])\n\n\nFor more details, please see the full documentation at http://sqlservice.readthedocs.io.\n\n\n\n.. |version| image:: http://img.shields.io/pypi/v/sqlservice.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/sqlservice/\n\n.. |travis| image:: http://img.shields.io/travis/dgilland/sqlservice/master.svg?style=flat-square\n    :target: https://travis-ci.org/dgilland/sqlservice\n\n.. |coveralls| image:: http://img.shields.io/coveralls/dgilland/sqlservice/master.svg?style=flat-square\n    :target: https://coveralls.io/r/dgilland/sqlservice\n\n.. |license| image:: http://img.shields.io/pypi/l/sqlservice.svg?style=flat-square\n    :target: https://pypi.python.org/pypi/sqlservice/\n\nChangelog\n=========\n\n\nv1.2.1 (2020-01-17)\n-------------------\n\n- Rename ``data`` argument to ``_data`` in ``ModelBase.__init__()`` and ``ModelBase.update()`` to avoid conflict when an ORM model has a column attribute named ``\"data\"``.\n- Add official support for Python 3.8.\n\n\nv1.2.0 (2020-01-01)\n-------------------\n\n- Fix issue where all sessions in memory were closed in ``SQLClient.disconnect()``.\n- Add configuration keyword arguments to ``SQLClient.__init__()``.\n\n\nv1.1.3 (2018-09-26)\n-------------------\n\n- If a key in ``ModelBase.__dict_args__['adapters']`` is ``None``, then don't serialize that key when calling ``Model.to_dict()``.\n\n\nv1.1.2 (2018-09-23)\n-------------------\n\n- Fix handling of string keys in ``ModelBase.__dict_args__['adapters']`` that resulted in an unhandled ``TypeError`` exception in some cases.\n\n\nv1.1.1 (2018-09-07)\n-------------------\n\n- Fix mishandling of case where new mappings passed to ``SQLClient.bulk_diff_update()`` aren't different than previous mappings.\n\n\nv1.1.0 (2018-09-05)\n-------------------\n\n- Add ``SQLClient.bulk_common_update()`` and ``core.bulk_common_update()``.\n- Add ``SQLClient.bulk_diff_update()`` and ``core.bulk_diff_update()``.\n- Move logic in ``SQLClient.bulk_insert()`` and ``bulk_insert_many()`` to ``core.bulk_insert()`` and ``core.bulk_insert_many()`` respectively.\n\n\nv1.0.2 (2018-08-20)\n-------------------\n\n- Minor optimization to ``SQLQuery.save()`` to not create an intermediate list when saving multiple items.\n\n\nv1.0.1 (2018-08-20)\n-------------------\n\n- Add missing handling for generators in ``SQLQuery.save()``.\n\n\nv1.0.0 (2018-08-19)\n-------------------\n\n- Drop support for Python 2.7. (**breaking change**)\n- Don't mutate ``models`` argument when passed in as a list to ``SQLClient.save|core.save``.\n- Allow generators to be passed into ``SQLClient.save|core.save`` and ``SQLClient.destroy|core.destroy``.\n- Remove deprecated methods: (**breaking change**)\n\n  - ``SQLClient.shutdown()`` (use ``SQLClient.disconnect()``)\n  - ``SQLQuery.chain()``\n  - ``SQLQuery.pluck()``\n  - ``SQLQuery.key_by()``\n  - ``SQLQuery.map()``\n  - ``SQLQuery.reduce()``\n  - ``SQLQuery.reduce_right()``\n  - ``SQLQuery.stack_by()``\n\n\nv0.23.0 (2018-08-06)\n--------------------\n\n- Add ``SQLClient.DEFAULT_CONFIG`` class attribute as way to override config defaults at the class level via subclassing.\n- Rename ``SQLClient.shutdown()`` to ``disconnect()`` but keep ``shutdown()`` as a deprecated alias.\n- Deprecate ``SQLClient.shutdown()``. Use ``SQLClient.disconnect()`` instead. Will be removed in ``v1``.\n- Deprecate ``SQLQuery`` methods below. Use ``pydash`` library directly or re-implement in subclass of ``SQLQuery`` and pass to ``SQLClient()`` via ``query_class`` argument. Methods will be removed in ``v1``:\n\n  - ``SQLQuery.chain()``\n  - ``SQLQuery.pluck()``\n  - ``SQLQuery.key_by()``\n  - ``SQLQuery.map()``\n  - ``SQLQuery.reduce()``\n  - ``SQLQuery.reduce_right()``\n  - ``SQLQuery.stack_by()``\n\n\nv0.22.1 (2018-07-15)\n--------------------\n\n- Support Python 3.7.\n\n\nv0.22.0 (2018-04-12)\n--------------------\n\n- Change default behavior of ``SQLClient.transaction()`` to **not** override the current session's ``autoflush`` setting (use ``SQLClient.transaction(autoflush=True)`` instead. (**breaking change**)\n- Add boolean ``autoflush`` option to ``SQLClient.transaction()`` to set session's ``autoflush`` value for the duration of the transaction.\n- Add new ``sqlservice.event`` decorators:\n\n  - ``on_init_scalar``\n  - ``on_init_collection``\n  - ``on_modified``\n  - ``on_bulk_replace``\n  - ``on_dispose_collection``\n\n\nv0.21.0 (2018-04-02)\n--------------------\n\n- Add ``SQLClient.ping()`` method that performs a basic connection check.\n\n\nv0.20.0 (2018-03-20)\n--------------------\n\n- Add ``ModelBase.class_registry()`` that returns the declarative class registry from declarative metadata. Roughly equivalent to ``ModelBase._decl_class_registry`` but with ``_sa_*`` keys removed.\n- Pass model instance as third optional argument to ``ModelBase.__dict_args__['adapters']`` handlers.\n- Expose default ``dict`` adapater as ``sqlservice.model.default_dict_adapter``.\n\n\nv0.19.0 (2018-03-19)\n--------------------\n\n- Support model class names as valid keys in ``ModelBase.__dict_args__['adapaters']``. Works similar to string namesused in ``sqlalchemy.orm.relation``.\n- Support model class orm descriptors (e.g. columns, relationships) as valid keys in ``ModelBase.__dict_args__['adapaters']``.\n\n\nv0.18.0 (2018-03-12)\n--------------------\n\n- Remove ``readonly`` argument from ``SQLClient.transaction`` and replace with separate ``commit`` and ``rollback``. (**breaking change**)\n\n  - The default is ``commit=True`` and ``rollback=False``. This behavior mirrors the previous behavior.\n  - When ``rollback=True``, the ``commit`` argument is ignored and the top-level transaction is always rolled back. This is like ``readonly=True`` in version ``0.17.0``.\n  - When ``commit=False`` and ``rollback=False``, the \"transaction\" isn't finalized and is left open. This is like ``readonly=True`` in versions ``<=0.16.1``.\n\n\nv0.17.0 (2018-03-12)\n--------------------\n\n- Rollback instead of commit in a readonly transaction issued by ``SQLClient.transaction``. (**potential breaking change**)\n\n  - There's a potential breaking change for the case where there's nested a write transaction under a readonly transaction. Previously, the write transaction would be committed when the readonly transaction finalized since commit was being called instead of rollback. However with this change, the settings of the first transaction before any nesting will now determine whether the entire transaction is committed or rollbacked.\n\n\nv0.16.1 (2018-02-26)\n--------------------\n\n- Use ``repr(self.url)`` in ``SQLClient.__repr__()`` instead of ``str()`` to mask connection password if provided.\n\n\nv0.16.0 (2018-02-21)\n--------------------\n\n- Support a database URI string as the configuration value for ``SQLClient``. For example, previously had to do ``SQLClient({'SQL_DATABASE_URI': '<db_uri>'})`` but now can do ``SQLClient('<db_uri>')``.\n- Add ``repr()`` support to ``SQLClient``.\n\n\nv0.15.0 (2018-02-13)\n--------------------\n\n- Add ``SQL_POOL_PRE_PING`` config option to ``SQLClient`` that sets ``pool_pre_ping`` argument to engine. Requires SQLAlchemy >= 1.2. Thanks dsully_!\n\n\nv0.14.2 (2017-10-17)\n--------------------\n\n- Fix ``Query.search()`` so that ``dict`` filter-by criteria will be applied to the base model class of the query if it's set (i.e. make ``db.query(ModelA).join(ModelB).search({'a_only_field': 'foo'})`` work so that ``{'a_only_field': 'foo'}`` is filtered on ``ModelA.a_only_field`` instead of ``ModelB``). This also applies to ``Query.find()`` and ``Query.find_one()`` which use ``search()`` internally.\n\n\nv0.14.1 (2017-09-09)\n--------------------\n\n- Fix typo in ``SQL_ENCODING`` config option mapping to SQLAlchemy parameter. Thanks dsully_!\n\n\nv0.14.0 (2017-08-03)\n--------------------\n\n- Make ``declarative_base`` pass extra keyword arguments to ``sqlalchemy.ext.declarative.declarative_base``.\n- Remove ``ModelBase.metaclass`` and ``ModelBase.metadata`` hooks for hoisting those values to ``declarative_base()``. Instead, pass optional ``metadata`` and ``metaclass`` arguments directly to ``declarative_base``. (**breaking change**)\n- Replace broken ``declarative_base`` decorator usage with new decorator-only function, ``as_declarative``. Previously, ``@declarative_base`` only worked as a decorator when not \"called\" (i.e. ``@declarative_base`` worked but ``@declarative_base(...)`` failed).\n\n\nv0.13.0 (2017-07-11)\n--------------------\n\n- Add ``ModelBase.__dict_args__`` attribute for providing arguments to ``ModelBase.to_dict``.\n- Add ``adapters`` option to ``ModelBase.__dict_args__`` for mapping model value types to custom serializatoin handlers during ``ModelBase.to_dict()`` call.\n\n\nv0.12.1 (2017-04-04)\n--------------------\n\n- Bump minimum requirement for pydash to ``v4.0.1``.\n- Revert removal of ``Query.pluck`` but now ``pluck`` works with a deep path *and* path list (e.g. ``['a', 'b', 0, 'c']`` to get ``'value'`` in ``{'a': {'b': [{'c': 'value'}]}}`` which is something that ``Query.map`` doesn't support.\n\n\nv0.12.0 (2017-04-03)\n--------------------\n\n- Bump minimum requirement for pydash to ``v4.0.0``. (**breaking change**)\n- Remove ``Query.pluck`` in favor or ``Query.map`` since ``map`` can do everything ``pluck`` could. (**breaking change**)\n- Rename ``Query.index_by`` to ``Query.key_by``. (**breaking change**)\n- Rename ``callback`` argument to ``iteratee`` for ``Query`` methods:\n\n  - ``key_by``\n  - ``stack_by``\n  - ``map``\n  - ``reduce``\n  - ``reduce_right``\n\n\nv0.11.0 (2017-03-10)\n--------------------\n\n- Make ``SQLClient.save()`` update the declarative model registry whenever an model class isn't in it. This allows saving to work when a ``SQLClient`` instance was created before models have been imported yet.\n- Make ``SQLClient.expunge()`` support multiple instances.\n- Make ``SQLClient.save()`` and ``SQLQuery.save()`` handle saving empty dictionaries.\n\n\nv0.10.0 (2017-02-13)\n--------------------\n\n- Add ``engine_options`` argument to ``SQLClient()`` to provide additional engine options beyond what is supported by the ``config`` argument.\n- Add ``SQLClient.bulk_insert`` for performing an INSERT with a multi-row VALUES clause.\n- Add ``SQLClient.bulk_insert_many`` for performing an ``executemany()`` DBAPI call.\n- Add additional ``SQLClient.session`` proxy properties on ``SQLClient.<proxy>``:\n\n  - ``bulk_insert_mappings``\n  - ``bulk_save_objects``\n  - ``bulk_update_mappings``\n  - ``is_active``\n  - ``is_modified``\n  - ``no_autoflush``\n  - ``preapre``\n\n- Store ``SQLClient.models`` as a static ``dict`` instead of computed property but recompute if an attribute error is detected for ``SQLClient.<Model>`` to handle the case of a late model class import.\n- Fix handling of duplicate base class names during ``SQLClient.models`` creation for model classes that are defined in different submodules. Previously, duplicate model class names prevented those models from being saved via ``SQLClient.save()``.\n\n\nv0.9.1 (2017-01-12)\n-------------------\n\n- Fix handling of ``scopefunc`` option in ``SQLClient.create_session``.\n\n\nv0.9.0 (2017-01-10)\n-------------------\n\n- Add ``session_class`` argument to ``SQLClient()`` to override the default session class used by the session maker.\n- Add ``session_options`` argument to ``SQLClient()`` to provide additional session options beyond what is supported by the ``config`` argument.\n\n\nv0.8.0 (2016-12-09)\n-------------------\n\n- Rename ``sqlservice.Query`` to ``SQLQuery``. (**breaking change**)\n- Remove ``sqlservice.SQLService`` class in favor of utilizing ``SQLQuery`` for the ``save`` and ``destroy`` methods for a model class. (**breaking change**)\n- Add ``SQLQuery.save()``.\n- Add ``SQLQuery.destroy()``.\n- Add ``SQLQuery.model_class`` property.\n- Replace ``service_class`` argument with ``query_class`` in ``SQLClient.__init__()``. (**breaking change**)\n- Remove ``SQLClient.services``. (**breaking change**)\n- When a model class name is used for attribute access on a ``SQLClient`` instance, return an instance of ``SQLQuery(ModelClass)`` instead of ``SQLService(ModelClass)``. (**breaking change**)\n\n\nv0.7.2 (2016-11-29)\n-------------------\n\n- Fix passing of ``synchronize_session`` argument in ``SQLService.destroy`` and ``SQLClient.destroy``. Argument was mistakenly not being used when calling underlying delete method.\n\n\nv0.7.1 (2016-11-04)\n-------------------\n\n- Add additional database session proxy attributes to ``SQLClient``:\n\n  - ``SQLClient.scalar -> SQLClient.session.scalar``\n  - ``SQLClient.invalidate -> SQLClient.session.invalidate``\n  - ``SQLClient.expire -> SQLClient.session.expire``\n  - ``SQLClient.expire_all -> SQLClient.session.expire_all``\n  - ``SQLClient.expunge -> SQLClient.session.expunge``\n  - ``SQLClient.expunge_all -> SQLClient.session.expunge_all``\n  - ``SQLClient.prune -> SQLClient.session.prune``\n\n- Fix compatibility issue with pydash ``v3.4.7``.\n\n\nv0.7.0 (2016-10-28)\n-------------------\n\n- Add ``core.make_identity`` factory function for easily creating basic identity functions from a list of model column objects that can be used with ``save()``.\n- Import ``core.save``, ``core.destroy``, ``core.transaction``, and ``core.make_identity`` into make package namespace.\n\n\nv0.6.3 (2016-10-17)\n-------------------\n\n- Fix model instance merging in ``core.save`` when providing a custom identity function.\n\n\nv0.6.2 (2016-10-17)\n-------------------\n\n- Expose ``identity`` argument in ``SQLClient.save`` and ``SQLService.save``.\n\n\nv0.6.1 (2016-10-17)\n-------------------\n\n- Fix bug where the ``models`` variable was mistakenly redefined during loop iteration in ``core.save``.\n\n\nv0.6.0 (2016-10-17)\n-------------------\n\n- Add ``identity`` argument to ``save`` method to allow a custom identity function to support upserting on something other than just the primary key values.\n- Make ``Query`` entity methods ``entities``, ``join_entities``, and ``all_entities`` return entity objects instead of model classes. (**breaking change**)\n- Add ``Query`` methods ``model_classes``, ``join_model_classes``, and ``all_model_classes`` return the model classes belonging to a query.\n\n\nv0.5.1 (2016-09-28)\n-------------------\n\n- Fix issue where calling ``<Model>.update(data)`` did not correctly update a relationship field when both ``<Model>.<relationship-column>`` and ``data[<relationship-column>]`` were both instances of a model class.\n\n\nv0.5.0 (2016-09-20)\n-------------------\n\n- Allow ``Service.find_one``, ``Service.find``, and ``Query.search`` to accept a list of lists as the criterion argument.\n- Rename ModelBase metaclass class attribute from ``ModelBase.Meta`` to ``ModelBase.metaclass``. (**breaking change**)\n- Add support for defining the ``metadata`` object on ``ModelBase.metadata`` and having it used when calling ``declarative_base``.\n- Add ``metadata`` and ``metaclass`` arguments to ``declarative_base`` that taken precedence over the corresponding class attributes set on the passed in declarative base type.\n- Rename Model argument/attribute in ``SQLClient`` to ``__init__`` to ``model_class``. (**breaking change**)\n- Remove ``Query.top`` method. (**breaking change**)\n- Proxy ``SQLService.__getattr__`` to ``getattr(SQLService.query(), attr)`` so that ``SQLService`` now acts as a proxy to a query instance that uses its ``model_class`` as the primary query entity.\n- Move ``SQLService.find`` and ``SQLService.find_one`` to ``Query``.\n- Improve docs.\n\n\nv0.4.3 (2016-07-11)\n-------------------\n\n- Fix issue where updating nested relationship values can lead to conflicting state assertion error in SQLAlchemy's identity map.\n\n\nv0.4.2 (2016-07-11)\n-------------------\n\n- Fix missing ``before`` and ``after`` callback argument passing from ``core.save`` to ``core._add``.\n\n\nv0.4.1 (2016-07-11)\n-------------------\n\n- Fix missing ``before`` and ``after`` callback argument passing from ``SQLService.save`` to ``SQLClient.save``.\n\n\nv0.4.0 (2016-07-11)\n-------------------\n\n- Add support for ``before`` and ``after`` callbacks in ``core.save``, ``SQLClient.save``, and ``SQLService.save`` which are invoked before/after ``session.add`` is called for each model instance.\n\n\nv0.3.0 (2016-07-06)\n-------------------\n\n- Support additional engine and session configuration values for ``SQLClient``.\n\n  - New engine config options:\n\n    - ``SQL_ECHO_POOL``\n    - ``SQL_ENCODING``\n    - ``SQL_CONVERT_UNICODE``\n    - ``SQL_ISOLATION_LEVEL``\n\n  - New session config options:\n\n    - ``SQL_EXPIRE_ON_COMMIT``\n\n- Add ``SQLClient.reflect`` method.\n- Rename ``SQLClient.service_registry`` and ``SQLClient.model_registry`` to ``services`` and ``models``. (**breaking change**)\n- Support ``SQLClient.__getitem__`` as proxy to ``SQLClient.__getattr__`` where both ``db[User]`` and ``db['User']`` both map to ``db.User``.\n- Add ``SQLService.count`` method.\n- Add ``Query`` methods:\n\n  - ``index_by``: Converts ``Query.all()`` to a ``dict`` of models indexed by ``callback`` (`pydash.index_by <http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.index_by>`_)\n  - ``stack_by``: Converts ``Query.all()`` to a ``dict`` of lists of models indexed by ``callback`` (`pydash.group_by <http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.group_by>`_)\n  - ``map``: Maps ``Query.all()`` to a ``callback`` (`pydash.map_ <http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.map_>`_)\n  - ``reduce``: Reduces ``Query.all()`` through ``callback`` (`pydash.reduce_ <http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.reduce_>`_)\n  - ``reduce_right``: Reduces ``Query.all()`` through ``callback`` from right (`pydash.reduce_right <http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.reduce_right>`_)\n  - ``pluck``: Retrieves value of of specified property from all elements of ``Query.all()`` (`pydash.pluck <http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.pluck>`_)\n  - ``chain``: Initializes a chain object with ``Query.all()`` (`pydash.chain <http://pydash.readthedocs.io/en/latest/api.html#pydash.chaining.chain>`_)\n\n- Rename ``Query`` properties: (**breaking change**)\n\n  - ``model_classes`` to ``entities``\n  - ``joined_model_classes`` to ``join_entities``\n  - ``all_model_classes`` to ``all_entities``\n\n\nv0.2.0 (2016-06-15)\n-------------------\n\n- Add Python 2.7 compatibility.\n- Add concept of ``model_registry`` and ``service_registry`` to ``SQLClient`` class:\n\n  - ``SQLClient.model_registry`` returns mapping of ORM model names to ORM model classes bound to ``SQLClient.Model``.\n  - ``SQLService`` instances are created with each model class bound to declarative base, ``SQLClient.Model`` and stored in ``SQLClient.service_registry``.\n  - Access to each model class ``SQLService`` instance is available via attribute access to ``SQLClient``. The attribute name corresponds to the model class name (e.g. given a ``User`` ORM model, it would be accessible at ``sqlclient.User``.\n\n- Add new methods to ``SQLClient`` class:\n\n  - ``save``: Generic saving of model class instances similar to ``SQLService.save`` but works for any model class instance.\n  - ``destroy``: Generic deletion of model class instances or ``dict`` containing primary keys where model class is explicitly passed in. Similar to ``SQLService.destroy``.\n\n- Rename ``SQLService.delete`` to ``destroy``. (**breaking change**)\n- Change ``SQLService`` initialization signature to ``SQLService(db, model_class)`` and remove class attribute ``model_class`` in favor of instance attribute. (**breaking change**)\n- Add properties to ``SQLClient`` class:\n\n  - ``service_registry``\n  - ``model_registry``\n\n- Add properties to ``Query`` class:\n\n  - ``model_classes``: Returns list of model classes used to during ``Query`` creation.\n  - ``joined_model_classes``: Returns list of joined model classes of ``Query``.\n  - ``all_model_classes``: Returns ``Query.model_classes`` + ``Query.joined_model_classes``.\n\n- Remove methods from ``SQLService`` class: (**breaking change**)\n\n  - ``query_one``\n  - ``query_many``\n  - ``default_order_by`` (default order by determination moved to ``Query.search``)\n\n- Remove ``sqlservice.service.transaction`` decorator in favor of using transaction context manager within methods. (**breaking change**)\n- Fix incorrect passing of ``SQL_DATABASE_URI`` value to ``SQLClient.create_engine`` in ``SQLClient.__init__``.\n\n\nv0.1.0 (2016-05-24)\n-------------------\n\n- First release.\n\n\n.. _dsully: https://github.com/dsully\n\nLicense\n=======\n\nThe MIT License (MIT)\n\nCopyright (c) 2016, Derrick Gilland\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dgilland/sqlservice", "keywords": "sqlservice sqlalchemy orm database", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "sqlservice", "package_url": "https://pypi.org/project/sqlservice/", "platform": "", "project_url": "https://pypi.org/project/sqlservice/", "project_urls": {"Homepage": "https://github.com/dgilland/sqlservice"}, "release_url": "https://pypi.org/project/sqlservice/1.2.1/", "requires_dist": ["SQLAlchemy (>=1.0.0)", "coverage ; extra == 'dev'", "flake8 ; extra == 'dev'", "pydash ; extra == 'dev'", "pylint ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "Sphinx ; extra == 'dev'", "sphinx-rtd-theme ; extra == 'dev'", "tox ; extra == 'dev'", "twine ; extra == 'dev'", "wheel ; extra == 'dev'"], "requires_python": "", "summary": "The missing SQLAlchemy ORM interface", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/sqlservice/\" rel=\"nofollow\"><img alt=\"version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81416681825c327287621a2f890938aafc8e41bd/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f73716c736572766963652e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://travis-ci.org/dgilland/sqlservice\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0570add5f71c1e9dcd55a4c1ca756379ad1c9627/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f6467696c6c616e642f73716c736572766963652f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://coveralls.io/r/dgilland/sqlservice\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/22eabc09b6a675b9a27568b556b96a1914424d7a/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6467696c6c616e642f73716c736572766963652f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a> <a href=\"https://pypi.python.org/pypi/sqlservice/\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/877d132406b8aa0c6e1b668fd48c52a68831baa9/687474703a2f2f696d672e736869656c64732e696f2f707970692f6c2f73716c736572766963652e7376673f7374796c653d666c61742d737175617265\"></a></p>\n<p>The missing SQLAlchemy ORM interface.</p>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li>Project: <a href=\"https://github.com/dgilland/sqlservice\" rel=\"nofollow\">https://github.com/dgilland/sqlservice</a></li>\n<li>Documentation: <a href=\"http://sqlservice.readthedocs.io\" rel=\"nofollow\">http://sqlservice.readthedocs.io</a></li>\n<li>PyPI: <a href=\"https://pypi.python.org/pypi/sqlservice/\" rel=\"nofollow\">https://pypi.python.org/pypi/sqlservice/</a></li>\n<li>TravisCI: <a href=\"https://travis-ci.org/dgilland/sqlservice\" rel=\"nofollow\">https://travis-ci.org/dgilland/sqlservice</a></li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>So what exactly is <tt>sqlservice</tt> and what does \u201cthe missing SQLAlchemy ORM interface\u201d even mean? SQLAlchemy is a fantastic library and features a superb ORM layer. However, one thing SQLAlchemy lacks is a unified interface for easily interacting with your database through your ORM models. This is where <tt>sqlservice</tt> comes in. It\u2019s interface layer on top of SQLAlchemy\u2019s session manager and ORM layer that provides a single point to manage your database connection/session, create/reflect/drop your database objects, and easily persist/destroy model objects.</p>\n<div id=\"features\">\n<h3>Features</h3>\n<p>This library is meant to enhance your usage of SQLAlchemy. SQLAlchemy is great and this library tries to build upon that by providing useful abstractions on top of it.</p>\n<ul>\n<li>Database client that helps manage an ORM scoped session.</li>\n<li>Base class for a declarative ORM Model that makes updating model columns and relationships easier and converting to a dictionary a breeze.</li>\n<li>Decorator-based event register for SQLAlchemy ORM events that can be used at the model class level. No need to register the event handler outside of the class definition.</li>\n<li>An application-side nestable transaction context-manager that helps implement pseudo-subtransactions for those that want implicit transaction demarcation, i.e. session autocommit, without using session subtransactions.</li>\n<li>And more!</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<ul>\n<li>Python &gt;= 3.4</li>\n<li><a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> &gt;= 1.0.0</li>\n<li><a href=\"http://pydash.readthedocs.io\" rel=\"nofollow\">pydash</a> &gt;= 3.4.3</li>\n</ul>\n</div>\n</div>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>First, install using pip:</p>\n<pre>pip3 install sqlservice\n</pre>\n<p>Then, define some ORM models:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">ForeignKey</span><span class=\"p\">,</span> <span class=\"n\">orm</span><span class=\"p\">,</span> <span class=\"n\">types</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sqlservice</span> <span class=\"kn\">import</span> <span class=\"n\">declarative_base</span><span class=\"p\">,</span> <span class=\"n\">event</span>\n\n\n<span class=\"n\">Model</span> <span class=\"o\">=</span> <span class=\"n\">declarative_base</span><span class=\"p\">()</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'user'</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(),</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">))</span>\n    <span class=\"n\">email</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">))</span>\n    <span class=\"n\">phone</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n\n    <span class=\"n\">roles</span> <span class=\"o\">=</span> <span class=\"n\">orm</span><span class=\"o\">.</span><span class=\"n\">relation</span><span class=\"p\">(</span><span class=\"s1\">'UserRole'</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@event</span><span class=\"o\">.</span><span class=\"n\">on_set</span><span class=\"p\">(</span><span class=\"s1\">'phone'</span><span class=\"p\">,</span> <span class=\"n\">retval</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_set_phone</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">oldvalue</span><span class=\"p\">,</span> <span class=\"n\">initator</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Strip non-numeric characters from phone number.</span>\n        <span class=\"k\">return</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">sub</span><span class=\"p\">(</span><span class=\"s1\">'[^0-9]'</span><span class=\"p\">,</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserRole</span><span class=\"p\">(</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'user_role'</span>\n\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(),</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">user_id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(),</span> <span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'user.id'</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">role</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">types</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">),</span> <span class=\"n\">nullable</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>Next, configure the database client:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlservice</span> <span class=\"kn\">import</span> <span class=\"n\">SQLClient</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'SQL_DATABASE_URI'</span><span class=\"p\">:</span> <span class=\"s1\">'sqlite:///db.sql'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_ISOLATION_LEVEL'</span><span class=\"p\">:</span> <span class=\"s1\">'SERIALIZABLE'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_ECHO'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_ECHO_POOL'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_CONVERT_UNICODE'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_POOL_SIZE'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_POOL_TIMEOUT'</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_POOL_RECYCLE'</span><span class=\"p\">:</span> <span class=\"mi\">3600</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_MAX_OVERFLOW'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_AUTOCOMMIT'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_AUTOFLUSH'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'SQL_EXPIRE_ON_COMMIT'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"n\">SQLClient</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">,</span> <span class=\"n\">model_class</span><span class=\"o\">=</span><span class=\"n\">Model</span><span class=\"p\">)</span>\n</pre>\n<p>Prepare the database by creating all tables:</p>\n<pre><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">create_all</span><span class=\"p\">()</span>\n</pre>\n<p>Finally (whew!), start interacting with the database.</p>\n<p>Insert a new record in the database:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jenny'</span><span class=\"p\">,</span> <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'jenny@example.com'</span><span class=\"p\">,</span> <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'555-867-5309'</span><span class=\"p\">}</span>\n<span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>Fetch records:</p>\n<pre><span class=\"k\">assert</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">find_one</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">==</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n</pre>\n<p>Serialize to a <tt>dict</tt>:</p>\n<pre><span class=\"k\">assert</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                          <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jenny'</span><span class=\"p\">,</span>\n                          <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'jenny@example.com'</span><span class=\"p\">,</span>\n                          <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'5558675309'</span><span class=\"p\">}</span>\n\n<span class=\"k\">assert</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">to_dict</span><span class=\"p\">()</span>\n</pre>\n<p>Update the record and save:</p>\n<pre><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">phone</span> <span class=\"o\">=</span> <span class=\"s1\">'222-867-5309'</span>\n<span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n</pre>\n<p>Upsert on primary key automatically:</p>\n<pre><span class=\"k\">assert</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Jenny'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'email'</span><span class=\"p\">:</span> <span class=\"s1\">'jenny@example.com'</span><span class=\"p\">,</span>\n                        <span class=\"s1\">'phone'</span><span class=\"p\">:</span> <span class=\"s1\">'5558675309'</span><span class=\"p\">})</span>\n</pre>\n<p>Destroy the model record:</p>\n<pre><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">destroy</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">)</span>\n<span class=\"c1\"># OR db.User.destroy([user])</span>\n<span class=\"c1\"># OR db.User.destroy(user.id)</span>\n<span class=\"c1\"># OR db.User.destroy([user.id])</span>\n<span class=\"c1\"># OR db.User.destroy(dict(user))</span>\n<span class=\"c1\"># OR db.User.destroy([dict(user)])</span>\n</pre>\n<p>For more details, please see the full documentation at <a href=\"http://sqlservice.readthedocs.io\" rel=\"nofollow\">http://sqlservice.readthedocs.io</a>.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v1-2-1-2020-01-17\">\n<h3>v1.2.1 (2020-01-17)</h3>\n<ul>\n<li>Rename <tt>data</tt> argument to <tt>_data</tt> in <tt>ModelBase.__init__()</tt> and <tt>ModelBase.update()</tt> to avoid conflict when an ORM model has a column attribute named <tt>\"data\"</tt>.</li>\n<li>Add official support for Python 3.8.</li>\n</ul>\n</div>\n<div id=\"v1-2-0-2020-01-01\">\n<h3>v1.2.0 (2020-01-01)</h3>\n<ul>\n<li>Fix issue where all sessions in memory were closed in <tt>SQLClient.disconnect()</tt>.</li>\n<li>Add configuration keyword arguments to <tt>SQLClient.__init__()</tt>.</li>\n</ul>\n</div>\n<div id=\"v1-1-3-2018-09-26\">\n<h3>v1.1.3 (2018-09-26)</h3>\n<ul>\n<li>If a key in <tt><span class=\"pre\">ModelBase.__dict_args__['adapters']</span></tt> is <tt>None</tt>, then don\u2019t serialize that key when calling <tt>Model.to_dict()</tt>.</li>\n</ul>\n</div>\n<div id=\"v1-1-2-2018-09-23\">\n<h3>v1.1.2 (2018-09-23)</h3>\n<ul>\n<li>Fix handling of string keys in <tt><span class=\"pre\">ModelBase.__dict_args__['adapters']</span></tt> that resulted in an unhandled <tt>TypeError</tt> exception in some cases.</li>\n</ul>\n</div>\n<div id=\"v1-1-1-2018-09-07\">\n<h3>v1.1.1 (2018-09-07)</h3>\n<ul>\n<li>Fix mishandling of case where new mappings passed to <tt>SQLClient.bulk_diff_update()</tt> aren\u2019t different than previous mappings.</li>\n</ul>\n</div>\n<div id=\"v1-1-0-2018-09-05\">\n<h3>v1.1.0 (2018-09-05)</h3>\n<ul>\n<li>Add <tt>SQLClient.bulk_common_update()</tt> and <tt>core.bulk_common_update()</tt>.</li>\n<li>Add <tt>SQLClient.bulk_diff_update()</tt> and <tt>core.bulk_diff_update()</tt>.</li>\n<li>Move logic in <tt>SQLClient.bulk_insert()</tt> and <tt>bulk_insert_many()</tt> to <tt>core.bulk_insert()</tt> and <tt>core.bulk_insert_many()</tt> respectively.</li>\n</ul>\n</div>\n<div id=\"v1-0-2-2018-08-20\">\n<h3>v1.0.2 (2018-08-20)</h3>\n<ul>\n<li>Minor optimization to <tt>SQLQuery.save()</tt> to not create an intermediate list when saving multiple items.</li>\n</ul>\n</div>\n<div id=\"v1-0-1-2018-08-20\">\n<h3>v1.0.1 (2018-08-20)</h3>\n<ul>\n<li>Add missing handling for generators in <tt>SQLQuery.save()</tt>.</li>\n</ul>\n</div>\n<div id=\"v1-0-0-2018-08-19\">\n<h3>v1.0.0 (2018-08-19)</h3>\n<ul>\n<li>Drop support for Python 2.7. (<strong>breaking change</strong>)</li>\n<li>Don\u2019t mutate <tt>models</tt> argument when passed in as a list to <tt>SQLClient.save|core.save</tt>.</li>\n<li>Allow generators to be passed into <tt>SQLClient.save|core.save</tt> and <tt>SQLClient.destroy|core.destroy</tt>.</li>\n<li>Remove deprecated methods: (<strong>breaking change</strong>)<ul>\n<li><tt>SQLClient.shutdown()</tt> (use <tt>SQLClient.disconnect()</tt>)</li>\n<li><tt>SQLQuery.chain()</tt></li>\n<li><tt>SQLQuery.pluck()</tt></li>\n<li><tt>SQLQuery.key_by()</tt></li>\n<li><tt>SQLQuery.map()</tt></li>\n<li><tt>SQLQuery.reduce()</tt></li>\n<li><tt>SQLQuery.reduce_right()</tt></li>\n<li><tt>SQLQuery.stack_by()</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-23-0-2018-08-06\">\n<h3>v0.23.0 (2018-08-06)</h3>\n<ul>\n<li>Add <tt>SQLClient.DEFAULT_CONFIG</tt> class attribute as way to override config defaults at the class level via subclassing.</li>\n<li>Rename <tt>SQLClient.shutdown()</tt> to <tt>disconnect()</tt> but keep <tt>shutdown()</tt> as a deprecated alias.</li>\n<li>Deprecate <tt>SQLClient.shutdown()</tt>. Use <tt>SQLClient.disconnect()</tt> instead. Will be removed in <tt>v1</tt>.</li>\n<li>Deprecate <tt>SQLQuery</tt> methods below. Use <tt>pydash</tt> library directly or re-implement in subclass of <tt>SQLQuery</tt> and pass to <tt>SQLClient()</tt> via <tt>query_class</tt> argument. Methods will be removed in <tt>v1</tt>:<ul>\n<li><tt>SQLQuery.chain()</tt></li>\n<li><tt>SQLQuery.pluck()</tt></li>\n<li><tt>SQLQuery.key_by()</tt></li>\n<li><tt>SQLQuery.map()</tt></li>\n<li><tt>SQLQuery.reduce()</tt></li>\n<li><tt>SQLQuery.reduce_right()</tt></li>\n<li><tt>SQLQuery.stack_by()</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-22-1-2018-07-15\">\n<h3>v0.22.1 (2018-07-15)</h3>\n<ul>\n<li>Support Python 3.7.</li>\n</ul>\n</div>\n<div id=\"v0-22-0-2018-04-12\">\n<h3>v0.22.0 (2018-04-12)</h3>\n<ul>\n<li>Change default behavior of <tt>SQLClient.transaction()</tt> to <strong>not</strong> override the current session\u2019s <tt>autoflush</tt> setting (use <tt>SQLClient.transaction(autoflush=True)</tt> instead. (<strong>breaking change</strong>)</li>\n<li>Add boolean <tt>autoflush</tt> option to <tt>SQLClient.transaction()</tt> to set session\u2019s <tt>autoflush</tt> value for the duration of the transaction.</li>\n<li>Add new <tt>sqlservice.event</tt> decorators:<ul>\n<li><tt>on_init_scalar</tt></li>\n<li><tt>on_init_collection</tt></li>\n<li><tt>on_modified</tt></li>\n<li><tt>on_bulk_replace</tt></li>\n<li><tt>on_dispose_collection</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-21-0-2018-04-02\">\n<h3>v0.21.0 (2018-04-02)</h3>\n<ul>\n<li>Add <tt>SQLClient.ping()</tt> method that performs a basic connection check.</li>\n</ul>\n</div>\n<div id=\"v0-20-0-2018-03-20\">\n<h3>v0.20.0 (2018-03-20)</h3>\n<ul>\n<li>Add <tt>ModelBase.class_registry()</tt> that returns the declarative class registry from declarative metadata. Roughly equivalent to <tt>ModelBase._decl_class_registry</tt> but with <tt>_sa_*</tt> keys removed.</li>\n<li>Pass model instance as third optional argument to <tt><span class=\"pre\">ModelBase.__dict_args__['adapters']</span></tt> handlers.</li>\n<li>Expose default <tt>dict</tt> adapater as <tt>sqlservice.model.default_dict_adapter</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-19-0-2018-03-19\">\n<h3>v0.19.0 (2018-03-19)</h3>\n<ul>\n<li>Support model class names as valid keys in <tt><span class=\"pre\">ModelBase.__dict_args__['adapaters']</span></tt>. Works similar to string namesused in <tt>sqlalchemy.orm.relation</tt>.</li>\n<li>Support model class orm descriptors (e.g. columns, relationships) as valid keys in <tt><span class=\"pre\">ModelBase.__dict_args__['adapaters']</span></tt>.</li>\n</ul>\n</div>\n<div id=\"v0-18-0-2018-03-12\">\n<h3>v0.18.0 (2018-03-12)</h3>\n<ul>\n<li>Remove <tt>readonly</tt> argument from <tt>SQLClient.transaction</tt> and replace with separate <tt>commit</tt> and <tt>rollback</tt>. (<strong>breaking change</strong>)<ul>\n<li>The default is <tt>commit=True</tt> and <tt>rollback=False</tt>. This behavior mirrors the previous behavior.</li>\n<li>When <tt>rollback=True</tt>, the <tt>commit</tt> argument is ignored and the top-level transaction is always rolled back. This is like <tt>readonly=True</tt> in version <tt>0.17.0</tt>.</li>\n<li>When <tt>commit=False</tt> and <tt>rollback=False</tt>, the \u201ctransaction\u201d isn\u2019t finalized and is left open. This is like <tt>readonly=True</tt> in versions <tt>&lt;=0.16.1</tt>.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-17-0-2018-03-12\">\n<h3>v0.17.0 (2018-03-12)</h3>\n<ul>\n<li>Rollback instead of commit in a readonly transaction issued by <tt>SQLClient.transaction</tt>. (<strong>potential breaking change</strong>)<ul>\n<li>There\u2019s a potential breaking change for the case where there\u2019s nested a write transaction under a readonly transaction. Previously, the write transaction would be committed when the readonly transaction finalized since commit was being called instead of rollback. However with this change, the settings of the first transaction before any nesting will now determine whether the entire transaction is committed or rollbacked.</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-16-1-2018-02-26\">\n<h3>v0.16.1 (2018-02-26)</h3>\n<ul>\n<li>Use <tt>repr(self.url)</tt> in <tt>SQLClient.__repr__()</tt> instead of <tt>str()</tt> to mask connection password if provided.</li>\n</ul>\n</div>\n<div id=\"v0-16-0-2018-02-21\">\n<h3>v0.16.0 (2018-02-21)</h3>\n<ul>\n<li>Support a database URI string as the configuration value for <tt>SQLClient</tt>. For example, previously had to do <tt><span class=\"pre\">SQLClient({'SQL_DATABASE_URI':</span> <span class=\"pre\">'&lt;db_uri&gt;'})</span></tt> but now can do <tt><span class=\"pre\">SQLClient('&lt;db_uri&gt;')</span></tt>.</li>\n<li>Add <tt>repr()</tt> support to <tt>SQLClient</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-15-0-2018-02-13\">\n<h3>v0.15.0 (2018-02-13)</h3>\n<ul>\n<li>Add <tt>SQL_POOL_PRE_PING</tt> config option to <tt>SQLClient</tt> that sets <tt>pool_pre_ping</tt> argument to engine. Requires SQLAlchemy &gt;= 1.2. Thanks <a href=\"https://github.com/dsully\" rel=\"nofollow\">dsully</a>!</li>\n</ul>\n</div>\n<div id=\"v0-14-2-2017-10-17\">\n<h3>v0.14.2 (2017-10-17)</h3>\n<ul>\n<li>Fix <tt>Query.search()</tt> so that <tt>dict</tt> filter-by criteria will be applied to the base model class of the query if it\u2019s set (i.e. make <tt><span class=\"pre\">db.query(ModelA).join(ModelB).search({'a_only_field':</span> <span class=\"pre\">'foo'})</span></tt> work so that <tt>{'a_only_field': 'foo'}</tt> is filtered on <tt>ModelA.a_only_field</tt> instead of <tt>ModelB</tt>). This also applies to <tt>Query.find()</tt> and <tt>Query.find_one()</tt> which use <tt>search()</tt> internally.</li>\n</ul>\n</div>\n<div id=\"v0-14-1-2017-09-09\">\n<h3>v0.14.1 (2017-09-09)</h3>\n<ul>\n<li>Fix typo in <tt>SQL_ENCODING</tt> config option mapping to SQLAlchemy parameter. Thanks <a href=\"https://github.com/dsully\" rel=\"nofollow\">dsully</a>!</li>\n</ul>\n</div>\n<div id=\"v0-14-0-2017-08-03\">\n<h3>v0.14.0 (2017-08-03)</h3>\n<ul>\n<li>Make <tt>declarative_base</tt> pass extra keyword arguments to <tt>sqlalchemy.ext.declarative.declarative_base</tt>.</li>\n<li>Remove <tt>ModelBase.metaclass</tt> and <tt>ModelBase.metadata</tt> hooks for hoisting those values to <tt>declarative_base()</tt>. Instead, pass optional <tt>metadata</tt> and <tt>metaclass</tt> arguments directly to <tt>declarative_base</tt>. (<strong>breaking change</strong>)</li>\n<li>Replace broken <tt>declarative_base</tt> decorator usage with new decorator-only function, <tt>as_declarative</tt>. Previously, <tt>@declarative_base</tt> only worked as a decorator when not \u201ccalled\u201d (i.e. <tt>@declarative_base</tt> worked but <tt><span class=\"pre\">@declarative_base(...)</span></tt> failed).</li>\n</ul>\n</div>\n<div id=\"v0-13-0-2017-07-11\">\n<h3>v0.13.0 (2017-07-11)</h3>\n<ul>\n<li>Add <tt>ModelBase.__dict_args__</tt> attribute for providing arguments to <tt>ModelBase.to_dict</tt>.</li>\n<li>Add <tt>adapters</tt> option to <tt>ModelBase.__dict_args__</tt> for mapping model value types to custom serializatoin handlers during <tt>ModelBase.to_dict()</tt> call.</li>\n</ul>\n</div>\n<div id=\"v0-12-1-2017-04-04\">\n<h3>v0.12.1 (2017-04-04)</h3>\n<ul>\n<li>Bump minimum requirement for pydash to <tt>v4.0.1</tt>.</li>\n<li>Revert removal of <tt>Query.pluck</tt> but now <tt>pluck</tt> works with a deep path <em>and</em> path list (e.g. <tt>['a', 'b', 0, 'c']</tt> to get <tt>'value'</tt> in <tt>{'a': {'b': <span class=\"pre\">[{'c':</span> <span class=\"pre\">'value'}]}}</span></tt> which is something that <tt>Query.map</tt> doesn\u2019t support.</li>\n</ul>\n</div>\n<div id=\"v0-12-0-2017-04-03\">\n<h3>v0.12.0 (2017-04-03)</h3>\n<ul>\n<li>Bump minimum requirement for pydash to <tt>v4.0.0</tt>. (<strong>breaking change</strong>)</li>\n<li>Remove <tt>Query.pluck</tt> in favor or <tt>Query.map</tt> since <tt>map</tt> can do everything <tt>pluck</tt> could. (<strong>breaking change</strong>)</li>\n<li>Rename <tt>Query.index_by</tt> to <tt>Query.key_by</tt>. (<strong>breaking change</strong>)</li>\n<li>Rename <tt>callback</tt> argument to <tt>iteratee</tt> for <tt>Query</tt> methods:<ul>\n<li><tt>key_by</tt></li>\n<li><tt>stack_by</tt></li>\n<li><tt>map</tt></li>\n<li><tt>reduce</tt></li>\n<li><tt>reduce_right</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-11-0-2017-03-10\">\n<h3>v0.11.0 (2017-03-10)</h3>\n<ul>\n<li>Make <tt>SQLClient.save()</tt> update the declarative model registry whenever an model class isn\u2019t in it. This allows saving to work when a <tt>SQLClient</tt> instance was created before models have been imported yet.</li>\n<li>Make <tt>SQLClient.expunge()</tt> support multiple instances.</li>\n<li>Make <tt>SQLClient.save()</tt> and <tt>SQLQuery.save()</tt> handle saving empty dictionaries.</li>\n</ul>\n</div>\n<div id=\"v0-10-0-2017-02-13\">\n<h3>v0.10.0 (2017-02-13)</h3>\n<ul>\n<li>Add <tt>engine_options</tt> argument to <tt>SQLClient()</tt> to provide additional engine options beyond what is supported by the <tt>config</tt> argument.</li>\n<li>Add <tt>SQLClient.bulk_insert</tt> for performing an INSERT with a multi-row VALUES clause.</li>\n<li>Add <tt>SQLClient.bulk_insert_many</tt> for performing an <tt>executemany()</tt> DBAPI call.</li>\n<li>Add additional <tt>SQLClient.session</tt> proxy properties on <tt><span class=\"pre\">SQLClient.&lt;proxy&gt;</span></tt>:<ul>\n<li><tt>bulk_insert_mappings</tt></li>\n<li><tt>bulk_save_objects</tt></li>\n<li><tt>bulk_update_mappings</tt></li>\n<li><tt>is_active</tt></li>\n<li><tt>is_modified</tt></li>\n<li><tt>no_autoflush</tt></li>\n<li><tt>preapre</tt></li>\n</ul>\n</li>\n<li>Store <tt>SQLClient.models</tt> as a static <tt>dict</tt> instead of computed property but recompute if an attribute error is detected for <tt><span class=\"pre\">SQLClient.&lt;Model&gt;</span></tt> to handle the case of a late model class import.</li>\n<li>Fix handling of duplicate base class names during <tt>SQLClient.models</tt> creation for model classes that are defined in different submodules. Previously, duplicate model class names prevented those models from being saved via <tt>SQLClient.save()</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-9-1-2017-01-12\">\n<h3>v0.9.1 (2017-01-12)</h3>\n<ul>\n<li>Fix handling of <tt>scopefunc</tt> option in <tt>SQLClient.create_session</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-9-0-2017-01-10\">\n<h3>v0.9.0 (2017-01-10)</h3>\n<ul>\n<li>Add <tt>session_class</tt> argument to <tt>SQLClient()</tt> to override the default session class used by the session maker.</li>\n<li>Add <tt>session_options</tt> argument to <tt>SQLClient()</tt> to provide additional session options beyond what is supported by the <tt>config</tt> argument.</li>\n</ul>\n</div>\n<div id=\"v0-8-0-2016-12-09\">\n<h3>v0.8.0 (2016-12-09)</h3>\n<ul>\n<li>Rename <tt>sqlservice.Query</tt> to <tt>SQLQuery</tt>. (<strong>breaking change</strong>)</li>\n<li>Remove <tt>sqlservice.SQLService</tt> class in favor of utilizing <tt>SQLQuery</tt> for the <tt>save</tt> and <tt>destroy</tt> methods for a model class. (<strong>breaking change</strong>)</li>\n<li>Add <tt>SQLQuery.save()</tt>.</li>\n<li>Add <tt>SQLQuery.destroy()</tt>.</li>\n<li>Add <tt>SQLQuery.model_class</tt> property.</li>\n<li>Replace <tt>service_class</tt> argument with <tt>query_class</tt> in <tt>SQLClient.__init__()</tt>. (<strong>breaking change</strong>)</li>\n<li>Remove <tt>SQLClient.services</tt>. (<strong>breaking change</strong>)</li>\n<li>When a model class name is used for attribute access on a <tt>SQLClient</tt> instance, return an instance of <tt>SQLQuery(ModelClass)</tt> instead of <tt>SQLService(ModelClass)</tt>. (<strong>breaking change</strong>)</li>\n</ul>\n</div>\n<div id=\"v0-7-2-2016-11-29\">\n<h3>v0.7.2 (2016-11-29)</h3>\n<ul>\n<li>Fix passing of <tt>synchronize_session</tt> argument in <tt>SQLService.destroy</tt> and <tt>SQLClient.destroy</tt>. Argument was mistakenly not being used when calling underlying delete method.</li>\n</ul>\n</div>\n<div id=\"v0-7-1-2016-11-04\">\n<h3>v0.7.1 (2016-11-04)</h3>\n<ul>\n<li>Add additional database session proxy attributes to <tt>SQLClient</tt>:<ul>\n<li><tt>SQLClient.scalar <span class=\"pre\">-&gt;</span> SQLClient.session.scalar</tt></li>\n<li><tt>SQLClient.invalidate <span class=\"pre\">-&gt;</span> SQLClient.session.invalidate</tt></li>\n<li><tt>SQLClient.expire <span class=\"pre\">-&gt;</span> SQLClient.session.expire</tt></li>\n<li><tt>SQLClient.expire_all <span class=\"pre\">-&gt;</span> SQLClient.session.expire_all</tt></li>\n<li><tt>SQLClient.expunge <span class=\"pre\">-&gt;</span> SQLClient.session.expunge</tt></li>\n<li><tt>SQLClient.expunge_all <span class=\"pre\">-&gt;</span> SQLClient.session.expunge_all</tt></li>\n<li><tt>SQLClient.prune <span class=\"pre\">-&gt;</span> SQLClient.session.prune</tt></li>\n</ul>\n</li>\n<li>Fix compatibility issue with pydash <tt>v3.4.7</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-7-0-2016-10-28\">\n<h3>v0.7.0 (2016-10-28)</h3>\n<ul>\n<li>Add <tt>core.make_identity</tt> factory function for easily creating basic identity functions from a list of model column objects that can be used with <tt>save()</tt>.</li>\n<li>Import <tt>core.save</tt>, <tt>core.destroy</tt>, <tt>core.transaction</tt>, and <tt>core.make_identity</tt> into make package namespace.</li>\n</ul>\n</div>\n<div id=\"v0-6-3-2016-10-17\">\n<h3>v0.6.3 (2016-10-17)</h3>\n<ul>\n<li>Fix model instance merging in <tt>core.save</tt> when providing a custom identity function.</li>\n</ul>\n</div>\n<div id=\"v0-6-2-2016-10-17\">\n<h3>v0.6.2 (2016-10-17)</h3>\n<ul>\n<li>Expose <tt>identity</tt> argument in <tt>SQLClient.save</tt> and <tt>SQLService.save</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-6-1-2016-10-17\">\n<h3>v0.6.1 (2016-10-17)</h3>\n<ul>\n<li>Fix bug where the <tt>models</tt> variable was mistakenly redefined during loop iteration in <tt>core.save</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-6-0-2016-10-17\">\n<h3>v0.6.0 (2016-10-17)</h3>\n<ul>\n<li>Add <tt>identity</tt> argument to <tt>save</tt> method to allow a custom identity function to support upserting on something other than just the primary key values.</li>\n<li>Make <tt>Query</tt> entity methods <tt>entities</tt>, <tt>join_entities</tt>, and <tt>all_entities</tt> return entity objects instead of model classes. (<strong>breaking change</strong>)</li>\n<li>Add <tt>Query</tt> methods <tt>model_classes</tt>, <tt>join_model_classes</tt>, and <tt>all_model_classes</tt> return the model classes belonging to a query.</li>\n</ul>\n</div>\n<div id=\"v0-5-1-2016-09-28\">\n<h3>v0.5.1 (2016-09-28)</h3>\n<ul>\n<li>Fix issue where calling <tt><span class=\"pre\">&lt;Model&gt;.update(data)</span></tt> did not correctly update a relationship field when both <tt><span class=\"pre\">&lt;Model&gt;.&lt;relationship-column&gt;</span></tt> and <tt><span class=\"pre\">data[&lt;relationship-column&gt;]</span></tt> were both instances of a model class.</li>\n</ul>\n</div>\n<div id=\"v0-5-0-2016-09-20\">\n<h3>v0.5.0 (2016-09-20)</h3>\n<ul>\n<li>Allow <tt>Service.find_one</tt>, <tt>Service.find</tt>, and <tt>Query.search</tt> to accept a list of lists as the criterion argument.</li>\n<li>Rename ModelBase metaclass class attribute from <tt>ModelBase.Meta</tt> to <tt>ModelBase.metaclass</tt>. (<strong>breaking change</strong>)</li>\n<li>Add support for defining the <tt>metadata</tt> object on <tt>ModelBase.metadata</tt> and having it used when calling <tt>declarative_base</tt>.</li>\n<li>Add <tt>metadata</tt> and <tt>metaclass</tt> arguments to <tt>declarative_base</tt> that taken precedence over the corresponding class attributes set on the passed in declarative base type.</li>\n<li>Rename Model argument/attribute in <tt>SQLClient</tt> to <tt>__init__</tt> to <tt>model_class</tt>. (<strong>breaking change</strong>)</li>\n<li>Remove <tt>Query.top</tt> method. (<strong>breaking change</strong>)</li>\n<li>Proxy <tt>SQLService.__getattr__</tt> to <tt><span class=\"pre\">getattr(SQLService.query(),</span> attr)</tt> so that <tt>SQLService</tt> now acts as a proxy to a query instance that uses its <tt>model_class</tt> as the primary query entity.</li>\n<li>Move <tt>SQLService.find</tt> and <tt>SQLService.find_one</tt> to <tt>Query</tt>.</li>\n<li>Improve docs.</li>\n</ul>\n</div>\n<div id=\"v0-4-3-2016-07-11\">\n<h3>v0.4.3 (2016-07-11)</h3>\n<ul>\n<li>Fix issue where updating nested relationship values can lead to conflicting state assertion error in SQLAlchemy\u2019s identity map.</li>\n</ul>\n</div>\n<div id=\"v0-4-2-2016-07-11\">\n<h3>v0.4.2 (2016-07-11)</h3>\n<ul>\n<li>Fix missing <tt>before</tt> and <tt>after</tt> callback argument passing from <tt>core.save</tt> to <tt>core._add</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-4-1-2016-07-11\">\n<h3>v0.4.1 (2016-07-11)</h3>\n<ul>\n<li>Fix missing <tt>before</tt> and <tt>after</tt> callback argument passing from <tt>SQLService.save</tt> to <tt>SQLClient.save</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-4-0-2016-07-11\">\n<h3>v0.4.0 (2016-07-11)</h3>\n<ul>\n<li>Add support for <tt>before</tt> and <tt>after</tt> callbacks in <tt>core.save</tt>, <tt>SQLClient.save</tt>, and <tt>SQLService.save</tt> which are invoked before/after <tt>session.add</tt> is called for each model instance.</li>\n</ul>\n</div>\n<div id=\"v0-3-0-2016-07-06\">\n<h3>v0.3.0 (2016-07-06)</h3>\n<ul>\n<li>Support additional engine and session configuration values for <tt>SQLClient</tt>.<ul>\n<li>New engine config options:<ul>\n<li><tt>SQL_ECHO_POOL</tt></li>\n<li><tt>SQL_ENCODING</tt></li>\n<li><tt>SQL_CONVERT_UNICODE</tt></li>\n<li><tt>SQL_ISOLATION_LEVEL</tt></li>\n</ul>\n</li>\n<li>New session config options:<ul>\n<li><tt>SQL_EXPIRE_ON_COMMIT</tt></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Add <tt>SQLClient.reflect</tt> method.</li>\n<li>Rename <tt>SQLClient.service_registry</tt> and <tt>SQLClient.model_registry</tt> to <tt>services</tt> and <tt>models</tt>. (<strong>breaking change</strong>)</li>\n<li>Support <tt>SQLClient.__getitem__</tt> as proxy to <tt>SQLClient.__getattr__</tt> where both <tt>db[User]</tt> and <tt><span class=\"pre\">db['User']</span></tt> both map to <tt>db.User</tt>.</li>\n<li>Add <tt>SQLService.count</tt> method.</li>\n<li>Add <tt>Query</tt> methods:<ul>\n<li><tt>index_by</tt>: Converts <tt>Query.all()</tt> to a <tt>dict</tt> of models indexed by <tt>callback</tt> (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.index_by\" rel=\"nofollow\">pydash.index_by</a>)</li>\n<li><tt>stack_by</tt>: Converts <tt>Query.all()</tt> to a <tt>dict</tt> of lists of models indexed by <tt>callback</tt> (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.group_by\" rel=\"nofollow\">pydash.group_by</a>)</li>\n<li><tt>map</tt>: Maps <tt>Query.all()</tt> to a <tt>callback</tt> (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.map_\" rel=\"nofollow\">pydash.map_</a>)</li>\n<li><tt>reduce</tt>: Reduces <tt>Query.all()</tt> through <tt>callback</tt> (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.reduce_\" rel=\"nofollow\">pydash.reduce_</a>)</li>\n<li><tt>reduce_right</tt>: Reduces <tt>Query.all()</tt> through <tt>callback</tt> from right (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.reduce_right\" rel=\"nofollow\">pydash.reduce_right</a>)</li>\n<li><tt>pluck</tt>: Retrieves value of of specified property from all elements of <tt>Query.all()</tt> (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.collections.pluck\" rel=\"nofollow\">pydash.pluck</a>)</li>\n<li><tt>chain</tt>: Initializes a chain object with <tt>Query.all()</tt> (<a href=\"http://pydash.readthedocs.io/en/latest/api.html#pydash.chaining.chain\" rel=\"nofollow\">pydash.chain</a>)</li>\n</ul>\n</li>\n<li>Rename <tt>Query</tt> properties: (<strong>breaking change</strong>)<ul>\n<li><tt>model_classes</tt> to <tt>entities</tt></li>\n<li><tt>joined_model_classes</tt> to <tt>join_entities</tt></li>\n<li><tt>all_model_classes</tt> to <tt>all_entities</tt></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"v0-2-0-2016-06-15\">\n<h3>v0.2.0 (2016-06-15)</h3>\n<ul>\n<li>Add Python 2.7 compatibility.</li>\n<li>Add concept of <tt>model_registry</tt> and <tt>service_registry</tt> to <tt>SQLClient</tt> class:<ul>\n<li><tt>SQLClient.model_registry</tt> returns mapping of ORM model names to ORM model classes bound to <tt>SQLClient.Model</tt>.</li>\n<li><tt>SQLService</tt> instances are created with each model class bound to declarative base, <tt>SQLClient.Model</tt> and stored in <tt>SQLClient.service_registry</tt>.</li>\n<li>Access to each model class <tt>SQLService</tt> instance is available via attribute access to <tt>SQLClient</tt>. The attribute name corresponds to the model class name (e.g. given a <tt>User</tt> ORM model, it would be accessible at <tt>sqlclient.User</tt>.</li>\n</ul>\n</li>\n<li>Add new methods to <tt>SQLClient</tt> class:<ul>\n<li><tt>save</tt>: Generic saving of model class instances similar to <tt>SQLService.save</tt> but works for any model class instance.</li>\n<li><tt>destroy</tt>: Generic deletion of model class instances or <tt>dict</tt> containing primary keys where model class is explicitly passed in. Similar to <tt>SQLService.destroy</tt>.</li>\n</ul>\n</li>\n<li>Rename <tt>SQLService.delete</tt> to <tt>destroy</tt>. (<strong>breaking change</strong>)</li>\n<li>Change <tt>SQLService</tt> initialization signature to <tt>SQLService(db, model_class)</tt> and remove class attribute <tt>model_class</tt> in favor of instance attribute. (<strong>breaking change</strong>)</li>\n<li>Add properties to <tt>SQLClient</tt> class:<ul>\n<li><tt>service_registry</tt></li>\n<li><tt>model_registry</tt></li>\n</ul>\n</li>\n<li>Add properties to <tt>Query</tt> class:<ul>\n<li><tt>model_classes</tt>: Returns list of model classes used to during <tt>Query</tt> creation.</li>\n<li><tt>joined_model_classes</tt>: Returns list of joined model classes of <tt>Query</tt>.</li>\n<li><tt>all_model_classes</tt>: Returns <tt>Query.model_classes</tt> + <tt>Query.joined_model_classes</tt>.</li>\n</ul>\n</li>\n<li>Remove methods from <tt>SQLService</tt> class: (<strong>breaking change</strong>)<ul>\n<li><tt>query_one</tt></li>\n<li><tt>query_many</tt></li>\n<li><tt>default_order_by</tt> (default order by determination moved to <tt>Query.search</tt>)</li>\n</ul>\n</li>\n<li>Remove <tt>sqlservice.service.transaction</tt> decorator in favor of using transaction context manager within methods. (<strong>breaking change</strong>)</li>\n<li>Fix incorrect passing of <tt>SQL_DATABASE_URI</tt> value to <tt>SQLClient.create_engine</tt> in <tt>SQLClient.__init__</tt>.</li>\n</ul>\n</div>\n<div id=\"v0-1-0-2016-05-24\">\n<h3>v0.1.0 (2016-05-24)</h3>\n<ul>\n<li>First release.</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>The MIT License (MIT)</p>\n<p>Copyright (c) 2016, Derrick Gilland</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \u201cSoftware\u201d), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 6476813, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "92f2e125b901c43b599024e7b9ce2459", "sha256": "66e6ef361ce32e57a54a8e0623752cc4b23aa190ee33e843dffa549c04194f3d"}, "downloads": -1, "filename": "sqlservice-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92f2e125b901c43b599024e7b9ce2459", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21690, "upload_time": "2016-05-25T02:13:47", "upload_time_iso_8601": "2016-05-25T02:13:47.107594Z", "url": "https://files.pythonhosted.org/packages/e0/ac/e21fb6cce659f5215b90df887f365da68720b4af3b961c9b898b94dcfb03/sqlservice-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1775ab9b334d808dc01fac1cb2c77005", "sha256": "85f505f4c191a38149608223bd3799df03f0ab6dae6057376e9a3c0d8b46d008"}, "downloads": -1, "filename": "sqlservice-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1775ab9b334d808dc01fac1cb2c77005", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31803, "upload_time": "2016-05-25T02:13:59", "upload_time_iso_8601": "2016-05-25T02:13:59.287169Z", "url": "https://files.pythonhosted.org/packages/5d/43/bef3a73eade3c6492681e96aa5f2e5b08698b1778cd202af9f0e1224df9b/sqlservice-0.1.0.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "19330466ed5b2e8e11d9744b830946a6", "sha256": "179d2f97dd296e4de5ce911fcffebc7a1de000cbc98cd047d768ad29eba644e9"}, "downloads": -1, "filename": "sqlservice-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "19330466ed5b2e8e11d9744b830946a6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32149, "upload_time": "2017-02-13T16:23:23", "upload_time_iso_8601": "2017-02-13T16:23:23.235998Z", "url": "https://files.pythonhosted.org/packages/b0/aa/1f326bfe11654a8a4203dfd7be1c9eca29b6728c5796b76da3beb350fddd/sqlservice-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ca8d446ba3ee365203f0e2473e41c2b", "sha256": "726c68f1ed78e81e45ea9d5d72a5681d3820c48a387cb5234fa700c98ec357d4"}, "downloads": -1, "filename": "sqlservice-0.10.0.tar.gz", "has_sig": false, "md5_digest": "2ca8d446ba3ee365203f0e2473e41c2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52899, "upload_time": "2017-02-13T16:23:26", "upload_time_iso_8601": "2017-02-13T16:23:26.143110Z", "url": "https://files.pythonhosted.org/packages/e9/7b/4cbeab2531d3a324872cadc1dc7a341f759c50b6c2884228d19e207526a3/sqlservice-0.10.0.tar.gz", "yanked": false}], "0.11.0": [{"comment_text": "", "digests": {"md5": "bec8ef0a1bb3a90832952561e7f4e5cf", "sha256": "1528ca77d3cee5ba74806dc09d63b4d1977c51896a1f348abd6058d001ad8455"}, "downloads": -1, "filename": "sqlservice-0.11.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bec8ef0a1bb3a90832952561e7f4e5cf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32494, "upload_time": "2017-03-10T14:26:08", "upload_time_iso_8601": "2017-03-10T14:26:08.513788Z", "url": "https://files.pythonhosted.org/packages/70/d0/5441e6a0ad46404f5172a65c7c2c00e8086e7563ef93a65ab911bd34a0c5/sqlservice-0.11.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74e81ff2e6193df8e9d7a541952a2429", "sha256": "50a371e94eef192a11b5c2de75f00ceaaaa5a7181a27b6cd3e7a776a79d744f2"}, "downloads": -1, "filename": "sqlservice-0.11.0.tar.gz", "has_sig": false, "md5_digest": "74e81ff2e6193df8e9d7a541952a2429", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53410, "upload_time": "2017-03-10T14:26:10", "upload_time_iso_8601": "2017-03-10T14:26:10.190145Z", "url": "https://files.pythonhosted.org/packages/56/14/b231f3e945bd7693f47718659e5926ec3b88beb50c06ee0b21e3ba910003/sqlservice-0.11.0.tar.gz", "yanked": false}], "0.12.0": [{"comment_text": "", "digests": {"md5": "a2bbdc04b2fe7d29fee4e8510fb844a9", "sha256": "72101949849c41da430691f22516699937aa71a8d431543ffb1b269908bf4a0f"}, "downloads": -1, "filename": "sqlservice-0.12.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a2bbdc04b2fe7d29fee4e8510fb844a9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32705, "upload_time": "2017-04-03T05:38:56", "upload_time_iso_8601": "2017-04-03T05:38:56.916040Z", "url": "https://files.pythonhosted.org/packages/15/94/ecfdaaecde9a00ccd138ca469687af21fb80744a33749d9a135a8c41b356/sqlservice-0.12.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80d8029c9b2571e7682ad6e7e54fc6e5", "sha256": "8536e8443bf43940dde4d55f9823c3fdc295b2a00ea06c21a8d6c3fcd8b457b7"}, "downloads": -1, "filename": "sqlservice-0.12.0.tar.gz", "has_sig": false, "md5_digest": "80d8029c9b2571e7682ad6e7e54fc6e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53691, "upload_time": "2017-04-03T05:38:58", "upload_time_iso_8601": "2017-04-03T05:38:58.709255Z", "url": "https://files.pythonhosted.org/packages/16/14/1940f400b1375b5a01b750619f6d89217c1372b12acb010faf9283da627b/sqlservice-0.12.0.tar.gz", "yanked": false}], "0.12.1": [{"comment_text": "", "digests": {"md5": "42543e0c676e3b8b3c4b3ab0d0ec6b07", "sha256": "c59a465989f9ac1ce10d14ff55fd95bc93b037204d4f0c3ccece511c9123b7c6"}, "downloads": -1, "filename": "sqlservice-0.12.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "42543e0c676e3b8b3c4b3ab0d0ec6b07", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33024, "upload_time": "2017-04-04T18:28:11", "upload_time_iso_8601": "2017-04-04T18:28:11.413712Z", "url": "https://files.pythonhosted.org/packages/1c/c2/5167e8fa58a74096ad8a9a78ee86025c7c5c635130882c58136d847620b5/sqlservice-0.12.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6795807f16495b7b42873dd96c65d53f", "sha256": "212d03d5a6589139ea5b88d08f8927cda58dbbad91368b17236a41564f2b1dbd"}, "downloads": -1, "filename": "sqlservice-0.12.1.tar.gz", "has_sig": false, "md5_digest": "6795807f16495b7b42873dd96c65d53f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54148, "upload_time": "2017-04-04T18:28:12", "upload_time_iso_8601": "2017-04-04T18:28:12.705216Z", "url": "https://files.pythonhosted.org/packages/51/6b/850eb16d72fbe70180b1dc674f843cf21a5a57f36759481f53140b82d0d1/sqlservice-0.12.1.tar.gz", "yanked": false}], "0.13.0": [{"comment_text": "", "digests": {"md5": "22226154898e68702ee2eff958ffac63", "sha256": "e468995bdeae91dc15cfb6c86bd14543c83053ee3fffd64ac96c93bac30f06d3"}, "downloads": -1, "filename": "sqlservice-0.13.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "22226154898e68702ee2eff958ffac63", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33464, "upload_time": "2017-07-11T14:51:50", "upload_time_iso_8601": "2017-07-11T14:51:50.680298Z", "url": "https://files.pythonhosted.org/packages/3f/17/e9b05730b8cc6f0f52ac046fd4c859da028c3b04e3ec9baf43a85e3d96bc/sqlservice-0.13.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8352ff82f7e0861a7e7f1befd991578", "sha256": "a8085d3cf5fdf8b4f07b8dc16b6ebefda97409abb51f411f33ad97f967605388"}, "downloads": -1, "filename": "sqlservice-0.13.0.tar.gz", "has_sig": false, "md5_digest": "b8352ff82f7e0861a7e7f1befd991578", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55444, "upload_time": "2017-07-11T14:51:51", "upload_time_iso_8601": "2017-07-11T14:51:51.972443Z", "url": "https://files.pythonhosted.org/packages/96/e0/0a993c6af8f9fee9eaeb0702992d99a4066f1166690bd5096f997d62942c/sqlservice-0.13.0.tar.gz", "yanked": false}], "0.14.0": [{"comment_text": "", "digests": {"md5": "357234a2661785481f30d975bb5b84b9", "sha256": "7caf443a9bae454dbe54e4af38358935bdb5faaf388ccf761042b5add0d56076"}, "downloads": -1, "filename": "sqlservice-0.14.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "357234a2661785481f30d975bb5b84b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33862, "upload_time": "2017-08-03T21:05:12", "upload_time_iso_8601": "2017-08-03T21:05:12.825052Z", "url": "https://files.pythonhosted.org/packages/14/3b/4102fbf27c057f2d2ab8d9148e47221dd805c4c1c13921bc5a9f54294e3c/sqlservice-0.14.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8ec2177ee89b7efdfca1e1b1fda36ae", "sha256": "89553e4db09b6436ea8391aa3799a89574e41b46c711c75b063d1ba7158c3a21"}, "downloads": -1, "filename": "sqlservice-0.14.0.tar.gz", "has_sig": false, "md5_digest": "b8ec2177ee89b7efdfca1e1b1fda36ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55898, "upload_time": "2017-08-03T21:05:14", "upload_time_iso_8601": "2017-08-03T21:05:14.222555Z", "url": "https://files.pythonhosted.org/packages/30/27/59cac5b5607979e7f4c0944b00e46bed2eae7ebc8c2abc5d40dda7ff77c4/sqlservice-0.14.0.tar.gz", "yanked": false}], "0.14.1": [{"comment_text": "", "digests": {"md5": "91f9d447afb795d19904b5447d80cedf", "sha256": "83dd89b7e9dc5c216d1530430a4e8c8eaee074a4adfd679151cc788cb5f4ad68"}, "downloads": -1, "filename": "sqlservice-0.14.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "91f9d447afb795d19904b5447d80cedf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33984, "upload_time": "2017-09-10T01:10:08", "upload_time_iso_8601": "2017-09-10T01:10:08.286832Z", "url": "https://files.pythonhosted.org/packages/c6/83/2b3ebf565d0eb7efa0342ceead9889dcc7b30e107486885d09ab8b67d1c9/sqlservice-0.14.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9e9a27a042060aa6f8271dc2b6ab4d4", "sha256": "5dab3019f16a5c6b012cb06fc0d19c487715c7bcb873f3f4589b456d1742495f"}, "downloads": -1, "filename": "sqlservice-0.14.1.tar.gz", "has_sig": false, "md5_digest": "f9e9a27a042060aa6f8271dc2b6ab4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56142, "upload_time": "2017-09-10T01:10:09", "upload_time_iso_8601": "2017-09-10T01:10:09.628031Z", "url": "https://files.pythonhosted.org/packages/b1/b6/67a35138c9136ef7f3a14cb8e29c486c51af70a5b276aa08603b538994a1/sqlservice-0.14.1.tar.gz", "yanked": false}], "0.14.2": [{"comment_text": "", "digests": {"md5": "5ad3918e5e75ab75e62b4292cbb76191", "sha256": "54d003ed170d7b54806813ed3d56e69dc57850009acfdbbdcde2d2176ef1e66e"}, "downloads": -1, "filename": "sqlservice-0.14.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ad3918e5e75ab75e62b4292cbb76191", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34434, "upload_time": "2017-10-17T20:19:09", "upload_time_iso_8601": "2017-10-17T20:19:09.738817Z", "url": "https://files.pythonhosted.org/packages/a2/a6/3156c7b654f772e384de187ae82ff2667b5c903b7662107219c489b72f7d/sqlservice-0.14.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3de840446154ecfbaa2672adac83f36f", "sha256": "799a877f45a2dc001ce555b204ce6bb30ed96e84a0f84f6f3b0760b2e556ec80"}, "downloads": -1, "filename": "sqlservice-0.14.2.tar.gz", "has_sig": false, "md5_digest": "3de840446154ecfbaa2672adac83f36f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56815, "upload_time": "2017-10-17T20:19:11", "upload_time_iso_8601": "2017-10-17T20:19:11.236667Z", "url": "https://files.pythonhosted.org/packages/c6/cd/94e7f5feeea4aa5e28e94b8a8564b4618247ad8d8eae0495d06b91eb8a78/sqlservice-0.14.2.tar.gz", "yanked": false}], "0.15.0": [{"comment_text": "", "digests": {"md5": "97a121a37e486a45ce43725ffcb126d9", "sha256": "9728bcefae05151948d071428f3ffd7be98a3e963a03806870f23cc3826bb14f"}, "downloads": -1, "filename": "sqlservice-0.15.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97a121a37e486a45ce43725ffcb126d9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34707, "upload_time": "2018-02-14T02:56:12", "upload_time_iso_8601": "2018-02-14T02:56:12.159089Z", "url": "https://files.pythonhosted.org/packages/e3/f3/6f0c87310575c4a99c3b77cf10373a8944df0e6afd407ad5babc24218152/sqlservice-0.15.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "051788f43ed1e17ca858591c37fb4a48", "sha256": "01cedde94dd4c7a6fba1d95e143b23ebef9914fbb8dc6bc00188de44b1970fb6"}, "downloads": -1, "filename": "sqlservice-0.15.0.tar.gz", "has_sig": false, "md5_digest": "051788f43ed1e17ca858591c37fb4a48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57230, "upload_time": "2018-02-14T02:56:13", "upload_time_iso_8601": "2018-02-14T02:56:13.650151Z", "url": "https://files.pythonhosted.org/packages/46/0f/49010e798c7a662bfb8ebbb3c1c765d1651c26e8993c2e39c21815586138/sqlservice-0.15.0.tar.gz", "yanked": false}], "0.16.0": [{"comment_text": "", "digests": {"md5": "8d4f007f4fa0b74c02264d352291ef1a", "sha256": "7e86834f9008a10212339a2d82b55a2d17f1edbf20d9d67e0e6ba259c79a2dae"}, "downloads": -1, "filename": "sqlservice-0.16.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8d4f007f4fa0b74c02264d352291ef1a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 34958, "upload_time": "2018-02-22T03:22:40", "upload_time_iso_8601": "2018-02-22T03:22:40.991336Z", "url": "https://files.pythonhosted.org/packages/7f/8d/95ebeb7cccd89e949f18b91194c27f59bb6eb906ab2bbeb33b98251ee0d4/sqlservice-0.16.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e11021d55fc541cdc934d3ca943f181", "sha256": "2c6c350cbeedaf03d32f17ca47befdae918111f8a0bb01df41053f30b0d8860e"}, "downloads": -1, "filename": "sqlservice-0.16.0.tar.gz", "has_sig": false, "md5_digest": "2e11021d55fc541cdc934d3ca943f181", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57597, "upload_time": "2018-02-22T03:22:41", "upload_time_iso_8601": "2018-02-22T03:22:41.846132Z", "url": "https://files.pythonhosted.org/packages/ac/5c/fca47c284050ca7356c90434aa6efe98f654e545eee2a48c9d2dbd4d7ce8/sqlservice-0.16.0.tar.gz", "yanked": false}], "0.16.1": [{"comment_text": "", "digests": {"md5": "18785a5ceb70ea656b0d1827a640e526", "sha256": "a19d8c33c9b6f1ef13d0510836d82ee76e74bac0d284e5e76092b595d8cb95ae"}, "downloads": -1, "filename": "sqlservice-0.16.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "18785a5ceb70ea656b0d1827a640e526", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 35042, "upload_time": "2018-02-26T21:47:10", "upload_time_iso_8601": "2018-02-26T21:47:10.398780Z", "url": "https://files.pythonhosted.org/packages/9c/96/80783a550af36e4f78dd6cfe14e882081268c89b43fa353c13e750f532d9/sqlservice-0.16.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "644af20ad01d96ac995c0b403d502460", "sha256": "039e250f394addea41635684c53893a3f2df5763caf2d9c83aeacddd598f3fb3"}, "downloads": -1, "filename": "sqlservice-0.16.1.tar.gz", "has_sig": false, "md5_digest": "644af20ad01d96ac995c0b403d502460", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57759, "upload_time": "2018-02-26T21:47:12", "upload_time_iso_8601": "2018-02-26T21:47:12.710053Z", "url": "https://files.pythonhosted.org/packages/3f/86/fa8fd991048c93b9a9ad0490634d9b602c3e8280e7fc85f8f1aaae96673f/sqlservice-0.16.1.tar.gz", "yanked": false}], "0.17.0": [{"comment_text": "", "digests": {"md5": "7d285f7b75eea3099f74f3ed395bce16", "sha256": "b80af4fc83eab675c751a2ed462008f151645a6fcd13a464ad2c63598e83ee0f"}, "downloads": -1, "filename": "sqlservice-0.17.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d285f7b75eea3099f74f3ed395bce16", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 35382, "upload_time": "2018-03-12T16:25:17", "upload_time_iso_8601": "2018-03-12T16:25:17.418690Z", "url": "https://files.pythonhosted.org/packages/1b/d4/47f61205ebec8e16e37dd0f916c7ad89401d74c5049fc311d8493915c77a/sqlservice-0.17.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc8d0071903dce45046825ef475b444a", "sha256": "45bf0a5e6fae6ee9c0317ad5ec85c6e29cc3c4f42492a4afdc84b8119869c468"}, "downloads": -1, "filename": "sqlservice-0.17.0.tar.gz", "has_sig": false, "md5_digest": "fc8d0071903dce45046825ef475b444a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58327, "upload_time": "2018-03-12T16:25:19", "upload_time_iso_8601": "2018-03-12T16:25:19.033703Z", "url": "https://files.pythonhosted.org/packages/bd/81/ad5f05b6c6eb48d48bb1215ba9e3e50e770ff9d738a62537d1ef3f83c6fa/sqlservice-0.17.0.tar.gz", "yanked": false}], "0.18.0": [{"comment_text": "", "digests": {"md5": "74654d0334808bb6be2b6624fdde4db9", "sha256": "2144ef4d1a56ed09532dcc64f2e2af137d0106e3438afa310714a65ac44050dc"}, "downloads": -1, "filename": "sqlservice-0.18.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "74654d0334808bb6be2b6624fdde4db9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 35910, "upload_time": "2018-03-12T20:58:11", "upload_time_iso_8601": "2018-03-12T20:58:11.155706Z", "url": "https://files.pythonhosted.org/packages/04/ca/7bff10d616500ad591dee0355cafb580375281dd1f9011909643358eae94/sqlservice-0.18.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2374767ba9bdf3316cb8baa2dfc38d62", "sha256": "a2ded289db1e011540cb459a3620c805bccc3aa52f32605b2408a0fdf8d24f2c"}, "downloads": -1, "filename": "sqlservice-0.18.0.tar.gz", "has_sig": false, "md5_digest": "2374767ba9bdf3316cb8baa2dfc38d62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59016, "upload_time": "2018-03-12T20:58:12", "upload_time_iso_8601": "2018-03-12T20:58:12.484646Z", "url": "https://files.pythonhosted.org/packages/60/3a/28eeef4cf73529d1c862fdd0d5d8370793b4c9754b81c04abae9846edb70/sqlservice-0.18.0.tar.gz", "yanked": false}], "0.19.0": [{"comment_text": "", "digests": {"md5": "323ffd884c6186803a746c7ab334fe17", "sha256": "5dd3a5c3f7282ec400d206392a45c423518620917f12c433578f7b04b2529ac2"}, "downloads": -1, "filename": "sqlservice-0.19.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "323ffd884c6186803a746c7ab334fe17", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36212, "upload_time": "2018-03-20T02:41:01", "upload_time_iso_8601": "2018-03-20T02:41:01.603831Z", "url": "https://files.pythonhosted.org/packages/76/65/ca9646d26bbf78212416dfddeefd5e644ba474a74a65405c24ffbef8f546/sqlservice-0.19.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "278e83dcd3efd24303d172754c1007e8", "sha256": "9b5071259eb19154aceb4e8345ee3629af4ad3e3979d0076d9c303f4c14aaf15"}, "downloads": -1, "filename": "sqlservice-0.19.0.tar.gz", "has_sig": false, "md5_digest": "278e83dcd3efd24303d172754c1007e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59596, "upload_time": "2018-03-20T02:41:03", "upload_time_iso_8601": "2018-03-20T02:41:03.349727Z", "url": "https://files.pythonhosted.org/packages/61/d3/5a62e9111307eb3a5b018fa6ff54b0c5772b5e3dd12ddc5c736c3e5b71ab/sqlservice-0.19.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "7d300b4b8be8f1115deb7c9f7dc179e4", "sha256": "01d878d828ab25e6160919ebf466db05c37f7724834b0dcc3ea7dbba0b065411"}, "downloads": -1, "filename": "sqlservice-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d300b4b8be8f1115deb7c9f7dc179e4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 25664, "upload_time": "2016-06-16T00:45:55", "upload_time_iso_8601": "2016-06-16T00:45:55.881302Z", "url": "https://files.pythonhosted.org/packages/93/db/a429321f66c4fb7e41f1ee956c1ef105677d0fb3927678adef086a148c84/sqlservice-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4507310719a37baa53839a2aad583377", "sha256": "55b776c9f32d24142a5b0484bb4d414077678dca3956abe44b64c010ac96c25e"}, "downloads": -1, "filename": "sqlservice-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4507310719a37baa53839a2aad583377", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34243, "upload_time": "2016-06-16T00:45:59", "upload_time_iso_8601": "2016-06-16T00:45:59.576818Z", "url": "https://files.pythonhosted.org/packages/52/b4/550615f158a25d243a28474ffc0d3685b8d39257c430312d4c72b2632cb6/sqlservice-0.2.0.tar.gz", "yanked": false}], "0.20.0": [{"comment_text": "", "digests": {"md5": "09475b53cf550c436e7319b62d078683", "sha256": "854ad9d501cbc6516b7ae248f6b2fe0b83b702984ad8913db8c35664e7e98da6"}, "downloads": -1, "filename": "sqlservice-0.20.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "09475b53cf550c436e7319b62d078683", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 36626, "upload_time": "2018-03-20T04:49:21", "upload_time_iso_8601": "2018-03-20T04:49:21.432661Z", "url": "https://files.pythonhosted.org/packages/b6/05/9bd3491a6c32a1c3f332a8bef38a9f85aeb5fa5243236aeca68e60b93207/sqlservice-0.20.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e30582c34ce750a09721e9b1ee0760ac", "sha256": "9f43f693d5c6c9809e6ec7d12fc15da32e863d30aed5e270f8a7046da34996d7"}, "downloads": -1, "filename": "sqlservice-0.20.0.tar.gz", "has_sig": false, "md5_digest": "e30582c34ce750a09721e9b1ee0760ac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60195, "upload_time": "2018-03-20T04:49:23", "upload_time_iso_8601": "2018-03-20T04:49:23.076421Z", "url": "https://files.pythonhosted.org/packages/12/66/6aab2f4a7ece20f9edb226b69c18bb3e7a43ac245c6a6e4b1f747a7ee567/sqlservice-0.20.0.tar.gz", "yanked": false}], "0.21.0": [{"comment_text": "", "digests": {"md5": "4b5eb1ad0fcbeabe8bdd227edd643d24", "sha256": "2a840c151629e74153f084d41955af23a335556856581ae5340393c2a477ebd2"}, "downloads": -1, "filename": "sqlservice-0.21.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b5eb1ad0fcbeabe8bdd227edd643d24", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 37092, "upload_time": "2018-04-02T15:14:04", "upload_time_iso_8601": "2018-04-02T15:14:04.423414Z", "url": "https://files.pythonhosted.org/packages/78/85/50dbcc8decb2629b626a6ab6e6841755edd3cd182170f10af915b408f24a/sqlservice-0.21.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f88d8658594c27be9c6b89ac297e9890", "sha256": "ea720f9c2527ddecd6cab48d4cc7300bb5e3e34a0ef37df37e3c76352b7f1bcf"}, "downloads": -1, "filename": "sqlservice-0.21.0.tar.gz", "has_sig": false, "md5_digest": "f88d8658594c27be9c6b89ac297e9890", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60884, "upload_time": "2018-04-02T15:14:05", "upload_time_iso_8601": "2018-04-02T15:14:05.402065Z", "url": "https://files.pythonhosted.org/packages/f8/f7/6d6c55756ec67163d2419946cc30c2371df965454a2fb96b54e44a53db6b/sqlservice-0.21.0.tar.gz", "yanked": false}], "0.22.0": [{"comment_text": "", "digests": {"md5": "6af0e749a46fd57ca816084ffd10aafb", "sha256": "3b655100a1bfe8bda1915c9add23155d14c5de8d8ad34dd68fa1fe7cdd1d7d26"}, "downloads": -1, "filename": "sqlservice-0.22.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6af0e749a46fd57ca816084ffd10aafb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29517, "upload_time": "2018-04-12T20:51:00", "upload_time_iso_8601": "2018-04-12T20:51:00.981933Z", "url": "https://files.pythonhosted.org/packages/5f/89/dcf9e739e84808dd1e5a2274ae4b8fe0d570cb7252e8251c6b94f9b0a5dc/sqlservice-0.22.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ebbdd9b37ae90d0f4538d416cf8bfbd", "sha256": "d4d6cf6153f120c60058b02999020ce85bd2e2bdbb423ae66128ecd875f27bc2"}, "downloads": -1, "filename": "sqlservice-0.22.0.tar.gz", "has_sig": false, "md5_digest": "6ebbdd9b37ae90d0f4538d416cf8bfbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 62408, "upload_time": "2018-04-12T20:51:02", "upload_time_iso_8601": "2018-04-12T20:51:02.039910Z", "url": "https://files.pythonhosted.org/packages/61/a2/748002ddeb91a6cb3c5ea12ba81464ccc68d99eac19bcf1778127b450718/sqlservice-0.22.0.tar.gz", "yanked": false}], "0.22.1": [{"comment_text": "", "digests": {"md5": "ea4d790fe4ff944db93c5f28284f819f", "sha256": "6c605d86baf19eccb1f36de9994d59c4d85e2b5fe2843a0b2ac94750ba10a897"}, "downloads": -1, "filename": "sqlservice-0.22.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea4d790fe4ff944db93c5f28284f819f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30161, "upload_time": "2018-07-15T20:33:29", "upload_time_iso_8601": "2018-07-15T20:33:29.437140Z", "url": "https://files.pythonhosted.org/packages/6d/3d/186fac07a78f893b41b43e091e82e972888a2d7f991a3a3804974f99186a/sqlservice-0.22.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42c66ad6a37ddb30a9101aa149b74178", "sha256": "2d1a5f7474797dde91c20b66084868386cde793fc4e52dbb6420890edcce718a"}, "downloads": -1, "filename": "sqlservice-0.22.1.tar.gz", "has_sig": false, "md5_digest": "42c66ad6a37ddb30a9101aa149b74178", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59897, "upload_time": "2018-07-15T20:33:30", "upload_time_iso_8601": "2018-07-15T20:33:30.679871Z", "url": "https://files.pythonhosted.org/packages/11/1b/45dc43176a50743f9dd8432c53c896afb4bb69dfc8789ca23e6f8afdfd9f/sqlservice-0.22.1.tar.gz", "yanked": false}], "0.23.0": [{"comment_text": "", "digests": {"md5": "c2751b305e05b0419fcf6cf66d9a992d", "sha256": "5e7f54bfb38a85e7c93118fb92baf56eed401a62bc2a88bbbb6551eb46a95fae"}, "downloads": -1, "filename": "sqlservice-0.23.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c2751b305e05b0419fcf6cf66d9a992d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30974, "upload_time": "2018-08-07T02:27:34", "upload_time_iso_8601": "2018-08-07T02:27:34.324765Z", "url": "https://files.pythonhosted.org/packages/dc/89/4c84043948b51381d6feb0ca1bdcb7516f412b156a219a1c44b8e1dd3abf/sqlservice-0.23.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0867686432a20a909f5f38754016d086", "sha256": "71f5df30c9e935e08a0fbe685922bc76c302bed6976d85000b466d8289543501"}, "downloads": -1, "filename": "sqlservice-0.23.0.tar.gz", "has_sig": false, "md5_digest": "0867686432a20a909f5f38754016d086", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 61449, "upload_time": "2018-08-07T02:27:41", "upload_time_iso_8601": "2018-08-07T02:27:41.310386Z", "url": "https://files.pythonhosted.org/packages/a9/e8/0ac870b03f5d345a858f838bde79c53f9a706f5f944d60e5314673f263be/sqlservice-0.23.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b402a1982c5917027a797646bc4a2631", "sha256": "9f32de378f684f08cd78896de8e878acecdfdb5993352df4490bdb3c8870d94c"}, "downloads": -1, "filename": "sqlservice-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b402a1982c5917027a797646bc4a2631", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 27962, "upload_time": "2016-07-06T04:56:29", "upload_time_iso_8601": "2016-07-06T04:56:29.866382Z", "url": "https://files.pythonhosted.org/packages/0f/35/1a8c6734ee6554e9e859455df6cc3db0bbbd4582b78b136a7395368b0f82/sqlservice-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9468b0d2f921d214738b2462fdb1d16", "sha256": "b43c20f088e18b4d9ff9e17aba82fb1648a7ae879a85bd0056390f7cac3e8585"}, "downloads": -1, "filename": "sqlservice-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f9468b0d2f921d214738b2462fdb1d16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38598, "upload_time": "2016-07-06T04:56:34", "upload_time_iso_8601": "2016-07-06T04:56:34.074165Z", "url": "https://files.pythonhosted.org/packages/17/86/c4c6639bfb2e06dadfb343d76759db27745528e649084af50f989343c526/sqlservice-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "088be650d0f9f1a17412fc26e18685b4", "sha256": "edb58ba970834440556789e46b6400024068d7b82782644bf6fcb138cd62adb5"}, "downloads": -1, "filename": "sqlservice-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "088be650d0f9f1a17412fc26e18685b4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28634, "upload_time": "2016-07-11T19:43:40", "upload_time_iso_8601": "2016-07-11T19:43:40.492088Z", "url": "https://files.pythonhosted.org/packages/9c/60/908af1d7770b3cb5dc4c348c94e28dc3c314ea1f7dfe00970a956459ddf3/sqlservice-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4470b0caa296560c8ebf6eb56eeba243", "sha256": "1502f3fa3ce3b1e3b83c36621eddfb70026b0ce3dbd5c4f121a4c31efcd4cad8"}, "downloads": -1, "filename": "sqlservice-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4470b0caa296560c8ebf6eb56eeba243", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39265, "upload_time": "2016-07-11T19:43:47", "upload_time_iso_8601": "2016-07-11T19:43:47.505040Z", "url": "https://files.pythonhosted.org/packages/ce/1a/1c8e14dcb8c76177e347693f4ce6eda796324a59a51aca05711a559672f2/sqlservice-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7b324ba443caa30d56a31ef37de87222", "sha256": "23daf2f365c6a36d4de8521853e2246fc1dbd3bfcb47fce2ce7b97feb1f15a38"}, "downloads": -1, "filename": "sqlservice-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b324ba443caa30d56a31ef37de87222", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28793, "upload_time": "2016-07-11T19:49:08", "upload_time_iso_8601": "2016-07-11T19:49:08.672515Z", "url": "https://files.pythonhosted.org/packages/db/ac/383a4ebe3c6e2425535eb98c057cba48a9e0899e7534b7d9eddd96089229/sqlservice-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "038ef9014956eb752e585d2929b6a07d", "sha256": "5e92f5281fbccc5e64ca1971f7962352f4ac902bb699889d9951ef4728d8cbd1"}, "downloads": -1, "filename": "sqlservice-0.4.1.tar.gz", "has_sig": false, "md5_digest": "038ef9014956eb752e585d2929b6a07d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39460, "upload_time": "2016-07-11T19:49:34", "upload_time_iso_8601": "2016-07-11T19:49:34.300287Z", "url": "https://files.pythonhosted.org/packages/b1/14/a7e629508128af0a2cbc49b6925eec0636b9f93e0a129143a0afc6b2f0a2/sqlservice-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "95554b8cf62a0f6155161cfb48685b7e", "sha256": "29be37b0ceff9749fcf95fece10238f2e970d4726006851d79d25914eef1ea2d"}, "downloads": -1, "filename": "sqlservice-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "95554b8cf62a0f6155161cfb48685b7e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28834, "upload_time": "2016-07-11T20:22:46", "upload_time_iso_8601": "2016-07-11T20:22:46.724224Z", "url": "https://files.pythonhosted.org/packages/ce/16/369dcd78f58b8635cfcec42d5ab2666b96dedb7117270f99d3dee65f274f/sqlservice-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "052ce7ea1f71b31e0f59b7ede7966d3c", "sha256": "1258bcb6292f665065ae8c68bcddb79661467ea8a46ed9b8ee1425053b1b48ad"}, "downloads": -1, "filename": "sqlservice-0.4.2.tar.gz", "has_sig": false, "md5_digest": "052ce7ea1f71b31e0f59b7ede7966d3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39650, "upload_time": "2016-07-11T20:22:56", "upload_time_iso_8601": "2016-07-11T20:22:56.246477Z", "url": "https://files.pythonhosted.org/packages/8e/66/a4bdbf84dd81b7b877eebbc528f73c4eaad7b8446e48711e7a74082642f9/sqlservice-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "00f6246f4f62219551cccc8d8aea3098", "sha256": "4343c2b0c08d9b557ce432a6322ea7dc52ae751263588db8e68bc16306a95dcd"}, "downloads": -1, "filename": "sqlservice-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "00f6246f4f62219551cccc8d8aea3098", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 28939, "upload_time": "2016-07-11T21:36:46", "upload_time_iso_8601": "2016-07-11T21:36:46.275001Z", "url": "https://files.pythonhosted.org/packages/a5/5b/8827034df0fd394a51bbf283d5e6c85586b13b9f8fe140f501ae2d7828c4/sqlservice-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e2204ea36adc47db725348017c859d33", "sha256": "0a2ac530b0d9a2418211ffad67eead7240dad6957ba1e8cfb591554f06e2ef70"}, "downloads": -1, "filename": "sqlservice-0.4.3.tar.gz", "has_sig": false, "md5_digest": "e2204ea36adc47db725348017c859d33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39828, "upload_time": "2016-07-11T21:37:01", "upload_time_iso_8601": "2016-07-11T21:37:01.659673Z", "url": "https://files.pythonhosted.org/packages/66/60/65a7f428866d2a2212a1cdc454b715a20e8d50acef4afa0f2995fa61b287/sqlservice-0.4.3.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "05b40040007240636554c18809f181d5", "sha256": "5b0c99203a15e243ead98324d25af22ad5368b65f0f80cc1db18e6aaf3a244e0"}, "downloads": -1, "filename": "sqlservice-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "05b40040007240636554c18809f181d5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29013, "upload_time": "2016-09-20T05:31:10", "upload_time_iso_8601": "2016-09-20T05:31:10.726345Z", "url": "https://files.pythonhosted.org/packages/03/f7/48450e624286268691a316952efbf63376c73421a9635e6392ccfeddcaea/sqlservice-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0f572c9696ea2281964c8ac06eddfa0", "sha256": "1793127e8bb09e788fec55dcfb9bcba2c2304dc6a50ff33eda4d384886025a4b"}, "downloads": -1, "filename": "sqlservice-0.5.0.tar.gz", "has_sig": false, "md5_digest": "b0f572c9696ea2281964c8ac06eddfa0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46714, "upload_time": "2016-09-20T05:31:13", "upload_time_iso_8601": "2016-09-20T05:31:13.370464Z", "url": "https://files.pythonhosted.org/packages/8c/0b/a9024aeb41ecdba38e33f71c7df3b18f75e095a7ccdf6d4ca4ddec9fe90c/sqlservice-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8ffcf04cb0bc883c907da8dd5f9e96a8", "sha256": "e75239ab47f92bcb2edb478d662974645daf93bc24b25be054530e7b7119f4f7"}, "downloads": -1, "filename": "sqlservice-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ffcf04cb0bc883c907da8dd5f9e96a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29191, "upload_time": "2016-09-28T21:31:34", "upload_time_iso_8601": "2016-09-28T21:31:34.016311Z", "url": "https://files.pythonhosted.org/packages/13/a0/6eda93693605962c9f76ae434f16ef1cd83a9454a7fe165b9e1a372b3cb0/sqlservice-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c63d542b9edcd78ea23b000997eb4e8", "sha256": "9853d8619f1d8ef360c91eeeaaddb5b1cc3404023e170a27095e036dc7446f98"}, "downloads": -1, "filename": "sqlservice-0.5.1.tar.gz", "has_sig": false, "md5_digest": "3c63d542b9edcd78ea23b000997eb4e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46955, "upload_time": "2016-09-28T21:31:37", "upload_time_iso_8601": "2016-09-28T21:31:37.501926Z", "url": "https://files.pythonhosted.org/packages/65/e7/8c6a639a42d5a435d12a933035c4b2d1942b1df6387f4567e2c6f6b6f9a7/sqlservice-0.5.1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "34a6b431c3e04bde40f901949735041b", "sha256": "d34d057eefca88163257758cd8fe996b06ecbf7282cb8944264a76ba5f016d34"}, "downloads": -1, "filename": "sqlservice-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "34a6b431c3e04bde40f901949735041b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30297, "upload_time": "2016-10-17T13:59:04", "upload_time_iso_8601": "2016-10-17T13:59:04.238916Z", "url": "https://files.pythonhosted.org/packages/33/23/8ed7163c6cf64c28e87da305247ecdfcf60407afa0bdf38d843d5128f6c3/sqlservice-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "06d66c6f923a70ec2d57fca923be39de", "sha256": "05b13d8532dffc15a4bc8430a8011042d6c66c90d8e62729bde7f84dcc2f45bb"}, "downloads": -1, "filename": "sqlservice-0.6.0.tar.gz", "has_sig": false, "md5_digest": "06d66c6f923a70ec2d57fca923be39de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49289, "upload_time": "2016-10-17T13:59:06", "upload_time_iso_8601": "2016-10-17T13:59:06.498249Z", "url": "https://files.pythonhosted.org/packages/2b/63/d4dc6c0f028e55cb6373b679851c6d19a2c1310ea3bd8a2258a75db011f9/sqlservice-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "1733cd609b48c9e5b0165cb041288a39", "sha256": "6a4c99f14a749478cd6f672dacd84f9bf37ff6872363201cbae1b7c9f4f74cf9"}, "downloads": -1, "filename": "sqlservice-0.6.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1733cd609b48c9e5b0165cb041288a39", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30416, "upload_time": "2016-10-17T14:46:05", "upload_time_iso_8601": "2016-10-17T14:46:05.564258Z", "url": "https://files.pythonhosted.org/packages/4f/cd/a1e05cc0301f483e33277cfdc84e86ad25e130c8c49a9a987b71f00377c5/sqlservice-0.6.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e4ce4b6ed95c25447daa71ae129bfdc6", "sha256": "3ae6c784ddb7132f17c1a5209b529a62d7ddff0e4893196eeca0a054c2bf261e"}, "downloads": -1, "filename": "sqlservice-0.6.1.tar.gz", "has_sig": false, "md5_digest": "e4ce4b6ed95c25447daa71ae129bfdc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49446, "upload_time": "2016-10-17T14:46:07", "upload_time_iso_8601": "2016-10-17T14:46:07.880520Z", "url": "https://files.pythonhosted.org/packages/21/94/9bcb6c5bb2b98c6ccb95f4e8c73c3157a7e2bbd1050dcb50b375935abc80/sqlservice-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "5c686590b2b64761139941bc585d460d", "sha256": "bd9ba7de717f122c0cd342b510f2b881680e2d00f3e27db55c935e4fb1e42b37"}, "downloads": -1, "filename": "sqlservice-0.6.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5c686590b2b64761139941bc585d460d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30611, "upload_time": "2016-10-17T15:09:46", "upload_time_iso_8601": "2016-10-17T15:09:46.678466Z", "url": "https://files.pythonhosted.org/packages/97/7f/2f4205b2d5a6fe71cc5d623a287a1d749d07ef42f1e0d82c1ffb1aa3d1e6/sqlservice-0.6.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1328b18d7a87bd0d8ff945ddaf22820", "sha256": "76d6b99e5617442d51b874dd9168280909083f7505dc57f2852ad2791960288f"}, "downloads": -1, "filename": "sqlservice-0.6.2.tar.gz", "has_sig": false, "md5_digest": "a1328b18d7a87bd0d8ff945ddaf22820", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49635, "upload_time": "2016-10-17T15:09:48", "upload_time_iso_8601": "2016-10-17T15:09:48.811370Z", "url": "https://files.pythonhosted.org/packages/f9/d3/59ea39bf625127c57209860172decc1055dd1e8630492d2860c26aa77496/sqlservice-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "8d95e4764fc1009204c2b7e5876c1831", "sha256": "1011c57e3548ee2081b19df427d96522bfaa907d3985f09bde1e8235916ebf42"}, "downloads": -1, "filename": "sqlservice-0.6.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8d95e4764fc1009204c2b7e5876c1831", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30810, "upload_time": "2016-10-17T17:53:58", "upload_time_iso_8601": "2016-10-17T17:53:58.622206Z", "url": "https://files.pythonhosted.org/packages/8e/51/64768d1d7319a35e578df483a32213a0c023c3534bd7175c97cc621e7a7a/sqlservice-0.6.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bb55abef33008ea6ef33ab72bdb0028a", "sha256": "76e88093f8027b5508cd37bfedc5b808aa82416791d67fdafe819a37d77b953f"}, "downloads": -1, "filename": "sqlservice-0.6.3.tar.gz", "has_sig": false, "md5_digest": "bb55abef33008ea6ef33ab72bdb0028a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50053, "upload_time": "2016-10-17T17:54:00", "upload_time_iso_8601": "2016-10-17T17:54:00.634107Z", "url": "https://files.pythonhosted.org/packages/49/d8/9ce64270a0f2a710b330e27e6095e2905f9ce46a140406aafe88162e8f41/sqlservice-0.6.3.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "4204a190dbab4831b67030bf6258fa79", "sha256": "78d2ee909fdebf60825c8754f7cca52495d74594ad75297d99b2c56cba4424b2"}, "downloads": -1, "filename": "sqlservice-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4204a190dbab4831b67030bf6258fa79", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31127, "upload_time": "2016-10-28T21:08:15", "upload_time_iso_8601": "2016-10-28T21:08:15.769275Z", "url": "https://files.pythonhosted.org/packages/e6/a3/8741ca65c35761cff5591386120cea354acd10cc1e88b82bed2dd469d296/sqlservice-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13bb028dc03308892d256aa577bb8acb", "sha256": "640743bda3b5595ffb48ff81b812f23b17bd95e904fb1bfc57792d006e0d9c64"}, "downloads": -1, "filename": "sqlservice-0.7.0.tar.gz", "has_sig": false, "md5_digest": "13bb028dc03308892d256aa577bb8acb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50443, "upload_time": "2016-10-28T21:08:18", "upload_time_iso_8601": "2016-10-28T21:08:18.001676Z", "url": "https://files.pythonhosted.org/packages/2a/79/685447accabdd507716ebcd7822d407e84852f7a95840ba101f5346a4cab/sqlservice-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "0ea25f187580307e8daf171d44f78c25", "sha256": "6b2cf8254f8a8675841e63a670e68096664c30eef93cbc091e4d394aed6d375a"}, "downloads": -1, "filename": "sqlservice-0.7.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0ea25f187580307e8daf171d44f78c25", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31460, "upload_time": "2016-11-04T18:46:51", "upload_time_iso_8601": "2016-11-04T18:46:51.759559Z", "url": "https://files.pythonhosted.org/packages/1e/62/887c314ffcb12ba3061819c8e7e415a85c44fd765b970f3d155f06ef111a/sqlservice-0.7.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c48f0e64791d44adce28fe1baedf26c", "sha256": "e225c43d487c517930cf4646cda473610f3ac249928a379b4e23baedc39362b7"}, "downloads": -1, "filename": "sqlservice-0.7.1.tar.gz", "has_sig": false, "md5_digest": "6c48f0e64791d44adce28fe1baedf26c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50926, "upload_time": "2016-11-04T18:46:53", "upload_time_iso_8601": "2016-11-04T18:46:53.720366Z", "url": "https://files.pythonhosted.org/packages/c0/18/4542771ca0342e69d0942faa12d48ba49ad1a3468e573032aa01ca301270/sqlservice-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "edf57cb93a64808d8c8bedc31cf94bf4", "sha256": "4d72add958368ef7122bd40910f945908ab6a8362e8b440e0c0a4d9322ad84e8"}, "downloads": -1, "filename": "sqlservice-0.7.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "edf57cb93a64808d8c8bedc31cf94bf4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31631, "upload_time": "2016-11-30T02:52:42", "upload_time_iso_8601": "2016-11-30T02:52:42.088906Z", "url": "https://files.pythonhosted.org/packages/ce/aa/6f6bde8902771cdd0b550dc6327e00df24c491e5b38423e1e31e95d16b6b/sqlservice-0.7.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3c2e3baba30e87e5f58934bb9e94fdd", "sha256": "700b228884e3811ee53ba9060a92b7e775bfa43bbc37643dfaaa02251f2b38b3"}, "downloads": -1, "filename": "sqlservice-0.7.2.tar.gz", "has_sig": false, "md5_digest": "b3c2e3baba30e87e5f58934bb9e94fdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51171, "upload_time": "2016-11-30T02:52:43", "upload_time_iso_8601": "2016-11-30T02:52:43.912946Z", "url": "https://files.pythonhosted.org/packages/2d/7c/5d27bba7d4a8880d9ac3bca460a92cd06dcd25334d7988c45ef2bd5b0d24/sqlservice-0.7.2.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "5fff17614cd281b7938c075abc80c894", "sha256": "4c4eab157836a27007b291b355f83c75a518c9a4b6da068ee29823926fa5a345"}, "downloads": -1, "filename": "sqlservice-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5fff17614cd281b7938c075abc80c894", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30232, "upload_time": "2016-12-09T22:28:29", "upload_time_iso_8601": "2016-12-09T22:28:29.717603Z", "url": "https://files.pythonhosted.org/packages/a6/45/b8334eb5d43d6554b6fe8541e7a1e8d025fa7ebb817af4364d4e2be5f28b/sqlservice-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "499999d1ebad2de4c071a999045b49df", "sha256": "dbc362ff18703065b2e011c391cf71c633e8325b2f490d6d462ca8416568190a"}, "downloads": -1, "filename": "sqlservice-0.8.0.tar.gz", "has_sig": false, "md5_digest": "499999d1ebad2de4c071a999045b49df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50049, "upload_time": "2016-12-09T22:28:32", "upload_time_iso_8601": "2016-12-09T22:28:32.455523Z", "url": "https://files.pythonhosted.org/packages/a8/6a/be28994a7cb93d22fecbf1f638d04ceffb801edfc76604eacdb8d219d2ba/sqlservice-0.8.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "e67d43a61d43bedcc55bc17c3a34eb7b", "sha256": "f65e1d8947abb9269042691dda2c201f842e774cdf0ce8792bc7198eb13a3151"}, "downloads": -1, "filename": "sqlservice-0.9.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e67d43a61d43bedcc55bc17c3a34eb7b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30513, "upload_time": "2017-01-11T02:35:08", "upload_time_iso_8601": "2017-01-11T02:35:08.198607Z", "url": "https://files.pythonhosted.org/packages/65/d5/1d5e5e6971d79a5519a7948055cb51c084157a5ab806ead1028963aab06e/sqlservice-0.9.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31437d837888e9f52a6de109992c61af", "sha256": "cbefa03ee5c322dc865b43a02121334511abee2e0f887499c5a4b2732a30b574"}, "downloads": -1, "filename": "sqlservice-0.9.0.tar.gz", "has_sig": false, "md5_digest": "31437d837888e9f52a6de109992c61af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50493, "upload_time": "2017-01-11T02:35:09", "upload_time_iso_8601": "2017-01-11T02:35:09.531338Z", "url": "https://files.pythonhosted.org/packages/8e/34/bff5fc3c60f17305580cc34b814b87a6f6ab61b357239b554df55be63462/sqlservice-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "c023c6a83669807ede94f1d7a8d734db", "sha256": "91c5c64f8b1f8326b98ee62f2a282bfadce31643ae84a9a6239fd208106b3fb0"}, "downloads": -1, "filename": "sqlservice-0.9.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c023c6a83669807ede94f1d7a8d734db", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30601, "upload_time": "2017-01-12T14:15:04", "upload_time_iso_8601": "2017-01-12T14:15:04.111668Z", "url": "https://files.pythonhosted.org/packages/51/e0/8b2cceaecc1c7ac0be0b26d655aa8323442f431d9ca0b074ae8ba970d92e/sqlservice-0.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99191cdf635084a578d90bca7595b6ef", "sha256": "170ffea41c62c04058162b36fee2bac822c2a51f67e4821c79a0657ae7ca9e65"}, "downloads": -1, "filename": "sqlservice-0.9.1.tar.gz", "has_sig": false, "md5_digest": "99191cdf635084a578d90bca7595b6ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50617, "upload_time": "2017-01-12T14:15:06", "upload_time_iso_8601": "2017-01-12T14:15:06.124054Z", "url": "https://files.pythonhosted.org/packages/a4/3d/137bec063df9cd9bcba9179551b73d06edad6ffdfb7a9133b736e736e1a1/sqlservice-0.9.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "889761ad35116b5eacb281d68bd0fe3a", "sha256": "ae2eec92d02d4ab38dc1f9409e15ee21b987b9a2bb2561374d0a3eca12799070"}, "downloads": -1, "filename": "sqlservice-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "889761ad35116b5eacb281d68bd0fe3a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29933, "upload_time": "2018-08-19T05:57:43", "upload_time_iso_8601": "2018-08-19T05:57:43.835415Z", "url": "https://files.pythonhosted.org/packages/2a/45/004f8e34dc83c16d3841cb8b875b28854f2b5c8efea49ef08f1e3f857e3f/sqlservice-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c6ec7e7a15453c4957843c47e1235a6", "sha256": "30255f301e5e9f6055bf12c30c1768935001af1c1b49315a70258af8a64fe23d"}, "downloads": -1, "filename": "sqlservice-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9c6ec7e7a15453c4957843c47e1235a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60290, "upload_time": "2018-08-19T05:57:45", "upload_time_iso_8601": "2018-08-19T05:57:45.031916Z", "url": "https://files.pythonhosted.org/packages/a4/91/1260615e2caadacaef8e8ba3cc40c4d45e8331540e6c7bc459372826d93d/sqlservice-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6ed65c86b937ef20e5ab7edc84b9c78e", "sha256": "d9f476a461b1428bf987cc1e9b85498657cd125ca0c6e98d56440de6f458cd52"}, "downloads": -1, "filename": "sqlservice-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6ed65c86b937ef20e5ab7edc84b9c78e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29962, "upload_time": "2018-08-20T15:35:23", "upload_time_iso_8601": "2018-08-20T15:35:23.586195Z", "url": "https://files.pythonhosted.org/packages/db/16/c300dae6e5db8529d3996892fafaa0eca1044260e06b7a2d6575e4ab51ab/sqlservice-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2e415216eea056d8f096572521cbf676", "sha256": "f3c0f289d9dc066c111b00676f7b64d83103c5c104dc023454ae6093e0240f94"}, "downloads": -1, "filename": "sqlservice-1.0.1.tar.gz", "has_sig": false, "md5_digest": "2e415216eea056d8f096572521cbf676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60490, "upload_time": "2018-08-20T15:35:24", "upload_time_iso_8601": "2018-08-20T15:35:24.954241Z", "url": "https://files.pythonhosted.org/packages/71/04/fb335b43fe418a1c78a68f13ab50f119b2200db31b1e7c5cb490c55ffa96/sqlservice-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "d1e6e3669b5b1c37af61a198d6702b65", "sha256": "8116e27b84fc3ff153305dcfa6f56d80a1750e1e819d6257228a73b2e07f1c2b"}, "downloads": -1, "filename": "sqlservice-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d1e6e3669b5b1c37af61a198d6702b65", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30002, "upload_time": "2018-08-20T19:27:05", "upload_time_iso_8601": "2018-08-20T19:27:05.428638Z", "url": "https://files.pythonhosted.org/packages/77/d7/506d72efd7891f8c0d21adf01c240973aa7c470f283350b84f416a09cc20/sqlservice-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1a882600b56dd47a5730be1c0a4f2b2", "sha256": "01b7295df053f570108d88869c7ec16325592bae4607769aef0bf6cb02a1be05"}, "downloads": -1, "filename": "sqlservice-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a1a882600b56dd47a5730be1c0a4f2b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 60629, "upload_time": "2018-08-20T19:27:06", "upload_time_iso_8601": "2018-08-20T19:27:06.893064Z", "url": "https://files.pythonhosted.org/packages/59/57/aed34f811906bb1fa0b26d7f40ca4589ada4d6ea832d82b566c6f22892d1/sqlservice-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a1ac22a4d06bb518155018fb29519010", "sha256": "8b6a87f1e71bb1674dcce8b42f662ea38c95dfd03bb6e9fa2e626a7d4aef1500"}, "downloads": -1, "filename": "sqlservice-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a1ac22a4d06bb518155018fb29519010", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31767, "upload_time": "2018-09-05T19:59:00", "upload_time_iso_8601": "2018-09-05T19:59:00.071971Z", "url": "https://files.pythonhosted.org/packages/f1/b6/406f140cf9c8a9d9ab3ae5c855f0bca9b479843ae1fb2481cfcd2866d7fa/sqlservice-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "436c0c8489c8235bd4f1d129fa2a3357", "sha256": "d8e4f4f0db7cf7bea05e6e9e82a67d348aeef87f80388a5178c56f7d1207817e"}, "downloads": -1, "filename": "sqlservice-1.1.0.tar.gz", "has_sig": false, "md5_digest": "436c0c8489c8235bd4f1d129fa2a3357", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64204, "upload_time": "2018-09-05T19:59:01", "upload_time_iso_8601": "2018-09-05T19:59:01.670485Z", "url": "https://files.pythonhosted.org/packages/ce/28/2c04637f40a95f92b18b8a947db1558c5bd6bba748b1c8aee112bc801ecf/sqlservice-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "289a804770d0f52acfa56e1e937fcdb0", "sha256": "3c4096831f8b33c1cce6c5b313b9958b0860a11c97ee0f7990bc07ef1cffbf15"}, "downloads": -1, "filename": "sqlservice-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "289a804770d0f52acfa56e1e937fcdb0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31843, "upload_time": "2018-09-07T14:31:03", "upload_time_iso_8601": "2018-09-07T14:31:03.598811Z", "url": "https://files.pythonhosted.org/packages/45/fd/aa72aa73c2429df18bae0dfba2f006d197b13f2fb23b7c2848a472a4ca67/sqlservice-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5daea24c910b0c0d15094fb87e84e07a", "sha256": "d5f6cf387f1bd2ba45f5c84fff19b1ecbaf2e8b8ef2071d80818b46f63851c82"}, "downloads": -1, "filename": "sqlservice-1.1.1.tar.gz", "has_sig": false, "md5_digest": "5daea24c910b0c0d15094fb87e84e07a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64361, "upload_time": "2018-09-07T14:31:05", "upload_time_iso_8601": "2018-09-07T14:31:05.230963Z", "url": "https://files.pythonhosted.org/packages/af/24/fd5b4bd641e78a12377e4934df9140d7ccf539e284cf97437091b615d66d/sqlservice-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f0c3be867fb802665971f224245955e8", "sha256": "5f76e5ca386c9fbe289934aef12c9e902980a9916714b8751ae5ca9fbc58c622"}, "downloads": -1, "filename": "sqlservice-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f0c3be867fb802665971f224245955e8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 31923, "upload_time": "2018-09-24T02:56:26", "upload_time_iso_8601": "2018-09-24T02:56:26.883214Z", "url": "https://files.pythonhosted.org/packages/80/cc/1c394b0bcd0af813b8b388e4bb9b1cbf1de128fc5ab1671d754d2320a35a/sqlservice-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d6e68f8895ed6393e8a6d7d40fa4eb5", "sha256": "c713b9ef9fe8cf33012c9f4953fab5203159fe9ea670f09491a8224824bfb348"}, "downloads": -1, "filename": "sqlservice-1.1.2.tar.gz", "has_sig": false, "md5_digest": "5d6e68f8895ed6393e8a6d7d40fa4eb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64708, "upload_time": "2018-09-24T02:56:28", "upload_time_iso_8601": "2018-09-24T02:56:28.205174Z", "url": "https://files.pythonhosted.org/packages/f2/f8/5a9a819ceda8237286e338c19b1248304b73845fd985aca8d7e3f873cd21/sqlservice-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "57cb8942a3cd7e736e96d13692258007", "sha256": "7991ae560673e0e208c2f48dc65c500e8161bc5d75e33b49078f2b10d10e85e0"}, "downloads": -1, "filename": "sqlservice-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "57cb8942a3cd7e736e96d13692258007", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 32092, "upload_time": "2018-09-27T02:00:06", "upload_time_iso_8601": "2018-09-27T02:00:06.544152Z", "url": "https://files.pythonhosted.org/packages/2e/cc/482f4227627247a242af86c9628559f23c286321ba02da78a9c72ef483b2/sqlservice-1.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "628cc906e6f5c87c091c8f52db745bec", "sha256": "f0bb247913b6818102e993a5196023bd37a5da0673c79a80fb38c5661624d6ee"}, "downloads": -1, "filename": "sqlservice-1.1.3.tar.gz", "has_sig": false, "md5_digest": "628cc906e6f5c87c091c8f52db745bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64992, "upload_time": "2018-09-27T02:00:08", "upload_time_iso_8601": "2018-09-27T02:00:08.487513Z", "url": "https://files.pythonhosted.org/packages/db/5f/cc3bea71bd94a82c3c795b61648c85150cd26903a27c7ae4d49d4f32d328/sqlservice-1.1.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "2ee9a2bbca997a2d713c7d6749782ede", "sha256": "bcfca55dddeeb23fb1a3302553bb7a986a935f13b72f4864ffa4e4bf7d215845"}, "downloads": -1, "filename": "sqlservice-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2ee9a2bbca997a2d713c7d6749782ede", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33904, "upload_time": "2020-01-01T07:04:29", "upload_time_iso_8601": "2020-01-01T07:04:29.220863Z", "url": "https://files.pythonhosted.org/packages/d8/db/241f75eb93efd7d578c7cebf92b188c220866aa6ef2b4f800059065f9114/sqlservice-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74799f04f3ba3687eb642f53817e6e3e", "sha256": "d143cf9caac3f097a29341cb6c8c6d3060cf19a787c15f395386e187b8f529ce"}, "downloads": -1, "filename": "sqlservice-1.2.0.tar.gz", "has_sig": false, "md5_digest": "74799f04f3ba3687eb642f53817e6e3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66778, "upload_time": "2020-01-01T07:04:31", "upload_time_iso_8601": "2020-01-01T07:04:31.346031Z", "url": "https://files.pythonhosted.org/packages/e2/d8/4301287a4023601143b81ab59db1a9fe61aee26a4b3fccb0f5693b5e49e5/sqlservice-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "7c0570557df6301f164365e7f44b38e0", "sha256": "9d9a194e92a90763e88308906d88b792310ca8dd2707c8361010c85df1887c24"}, "downloads": -1, "filename": "sqlservice-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7c0570557df6301f164365e7f44b38e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33980, "upload_time": "2020-01-18T03:28:58", "upload_time_iso_8601": "2020-01-18T03:28:58.560883Z", "url": "https://files.pythonhosted.org/packages/22/3f/890bbe2618911da5cf10332bcdc9ab8412a572b47811fbcc2199e7076c05/sqlservice-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de68137598cbf9a3e691e77713235b70", "sha256": "5ea5b83659c579788fd6c75dc2026948ba2e8bbcfbd42f337ff87ef2f4ffb701"}, "downloads": -1, "filename": "sqlservice-1.2.1.tar.gz", "has_sig": false, "md5_digest": "de68137598cbf9a3e691e77713235b70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69472, "upload_time": "2020-01-18T03:29:01", "upload_time_iso_8601": "2020-01-18T03:29:01.087880Z", "url": "https://files.pythonhosted.org/packages/ba/0d/7ae21b1611550c4cd72c7565aa4736194b429b7c7856d8557a54af18c6ce/sqlservice-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7c0570557df6301f164365e7f44b38e0", "sha256": "9d9a194e92a90763e88308906d88b792310ca8dd2707c8361010c85df1887c24"}, "downloads": -1, "filename": "sqlservice-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7c0570557df6301f164365e7f44b38e0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 33980, "upload_time": "2020-01-18T03:28:58", "upload_time_iso_8601": "2020-01-18T03:28:58.560883Z", "url": "https://files.pythonhosted.org/packages/22/3f/890bbe2618911da5cf10332bcdc9ab8412a572b47811fbcc2199e7076c05/sqlservice-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "de68137598cbf9a3e691e77713235b70", "sha256": "5ea5b83659c579788fd6c75dc2026948ba2e8bbcfbd42f337ff87ef2f4ffb701"}, "downloads": -1, "filename": "sqlservice-1.2.1.tar.gz", "has_sig": false, "md5_digest": "de68137598cbf9a3e691e77713235b70", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69472, "upload_time": "2020-01-18T03:29:01", "upload_time_iso_8601": "2020-01-18T03:29:01.087880Z", "url": "https://files.pythonhosted.org/packages/ba/0d/7ae21b1611550c4cd72c7565aa4736194b429b7c7856d8557a54af18c6ce/sqlservice-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:34 2020"}