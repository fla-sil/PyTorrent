{"info": {"author": "M Griffin", "author_email": "m12.griffin@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Mathematics"], "description": "=========\nArrayFunc\n=========\n\n:Authors:\n    Michael Griffin\n\n:Version: 6.0.0 for 2020-03-27\n:Copyright: 2014 - 2020\n:License: This document may be distributed under the Apache 2.0 License.\n:Language: Python 3.5 or later\n\n---------------------------------------------------------------------\n\nIntroduction\n============\n\nThe arrayfunc module provides high speed array processing functions for use with\nthe standard Python array module. These functions are patterned after the\nfunctions in the standard Python Itertools and math module together with some \nadditional ones from other sources.\n\nThe purpose of these functions is to perform mathematical calculations on arrays\nfaster than using native Python.\n\nSee full documentation at: http://arrayfunc.readthedocs.io/en/latest/\n\n---------------------------------------------------------------------\n\nFunction Summary\n================\n\n\nThe functions fall into several categories.\n\nFilling Arrays\n--------------\n\n========= ======================================================================\nFunction    Description\n========= ======================================================================\ncount      Fill an array with evenly spaced values using a start and step \n           values.\ncycle      Fill an array with evenly spaced values using a start, stop, and step \n           values, and repeat until the array is filled.\nrepeat     Fill an array with a specified value.\n========= ======================================================================\n\n\nFiltering Arrays\n----------------\n\n============== =================================================================\nFunction         Description\n============== =================================================================\nafilter         Select values from an array based on a boolean criteria.\ncompress        Select values from an array based on another array of boolean\n                values.\ndropwhile       Select values from an array starting from where a selected \n                criteria fails and proceding to the end.\ntakewhile       Like dropwhile, but starts from the beginning and stops when the\n                criteria fails.\n============== =================================================================\n\n\nExamining and Searching Arrays\n------------------------------\n\n============== =================================================================\nFunction         Description\n============== =================================================================\nfindindex       Returns the index of the first value in an array to meet the\n                specified criteria.\nfindindices     Searches an array for the array indices which meet the specified \n                criteria and writes the results to a second array. Also returns\n                the number of matches found.\n============== =================================================================\n\n\nSummarising Arrays\n------------------\n\n============== =================================================================\nFunction         Description\n============== =================================================================\naany            Returns True if any element in an array meets the selected\n                criteria.\naall            Returns True if all element in an array meet the selected\n                criteria.\namax            Returns the maximum value in the array.\namin            Returns the minimum value in the array.\nasum            Calculate the arithmetic sum of an array.\n============== =================================================================\n\n\nData Conversion\n---------------\n\n========= ======================================================================\nFunction   Description\n========= ======================================================================\nconvert    Convert arrays between data types. The data will be converted into\n           the form required by the output array.\n========= ======================================================================\n\n\nMathematical operator functions\n-------------------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n        add x + y\n    truediv x / y\n   floordiv x // y\n        mod x % y\n        mul x * y\n        neg -x\n        pow x**y or math.pow(x, y)\n        sub x - y\n      abs\\_ abs(x)\n=========== ===============================================\n\nComparison operator functions\n-----------------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n         eq x == y\n         gt x > y\n         ge x >= y\n         lt x < y\n         le x <= y\n         ne x != y\n=========== ===============================================\n\nBitwise operator functions\n--------------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n      and\\_ x & y\n       or\\_ x | y\n        xor x ^ y\n     invert ~x\n     lshift x << y\n     rshift x >> y\n=========== ===============================================\n\nPower and logarithmic functions\n-------------------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n        exp math.exp(x)\n      expm1 math.expm1(x)\n        log math.log(x)\n      log10 math.log10(x)\n      log1p math.log1p(x)\n       log2 math.log2(x)\n       sqrt math.sqrt(x)\n=========== ===============================================\n\nHyperbolic functions\n--------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n      acosh math.acosh(x)\n      asinh math.asinh(x)\n      atanh math.atanh(x)\n       cosh math.cosh(x)\n       sinh math.sinh(x)\n       tanh math.tanh(x)\n=========== ===============================================\n\nTrigonometric functions\n-----------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n       acos math.acos(x)\n       asin math.asin(x)\n       atan math.atan(x)\n      atan2 math.atan2(x, y)\n        cos math.cos(x)\n      hypot math.hypot(x, y)\n        sin math.sin(x)\n        tan math.tan(x)\n=========== ===============================================\n\nAngular conversion\n------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n    degrees math.degrees(x)\n    radians math.radians(x)\n=========== ===============================================\n\nNumber-theoretic and representation functions\n---------------------------------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n       ceil math.ceil(x)\n   copysign math.copysign(x, y)\n       fabs math.fabs(x)\n  factorial math.factorial(x)\n      floor math.floor(x)\n       fmod math.fmod(x, y)\n   isfinite math.isfinite(x)\n      isinf math.isinf(x)\n      isnan math.isnan(x)\n      ldexp math.ldexp(x, y)\n      trunc math.trunc(x)\n=========== ===============================================\n\nSpecial functions\n-----------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n        erf math.erf(x)\n       erfc math.erfc(x)\n      gamma math.gamma(x)\n     lgamma math.lgamma(x)\n=========== ===============================================\n\nAdditional functions\n--------------------\n\n\n=========== ===============================================\n  Function              Equivalent to\n=========== ===============================================\n        fma fma(x, y, z) or x * y + z\n=========== ===============================================\n\n\nAttributes\n__________\n\nIn addition to functions, a set of attributes are provided representing the \nplatform specific maximum and minimum numerical values for each array type. \nThese attributes are part of the \"arraylimits\" module.\n\n---------------------------------------------------------------------\n\nSupported Array Types\n=====================\n\nArrayfunc supports all standard Python 3.x array types.\n\n\n---------------------------------------------------------------------\n\nPerformance\n===========\n\nAverage performance increase on x86_64 Ubuntu with GCC is 100 times faster \nthan native Python. Performance will vary depending on the function, \noperation, array data type used, and whether overflow checking is enabled, \nwith the performance increase ranging from 50% to 3000 times. \n\nOther platforms show similar improvements.\n\nDetailed performance figures are listed in the full documentation.\n\n\n---------------------------------------------------------------------\n\nPlatform support\n================\n\nArrayfunc is written in 'C' and uses the standard C libraries to implement the \nunderlying math functions. Arrayfunc has been tested on the following platforms.\n\n================= ========  ========================== =========================\nOS                   Bits      Compiler                  Python Version Tested\n================= ========  ========================== =========================\nUbuntu 18.04 LTS   64 bit    GCC                         3.6\nUbuntu 19.10       64 bit    GCC                         3.7\nUbuntu 20.04 beta  64 bit    GCC                         3.8\nDebian 10          32 bit    GCC                         3.7\nDebian 10          64 bit    GCC                         3.7\nOpenSuse 15        64 bit    GCC                         3.6\nCentos 8           64 bit    GCC                         3.6\nFreeBSD 12         64 bit    LLVM                        3.7\nOpenBSD 6.5        64 bit    LLVM                        3.6\nMS Windows 10      64 bit    MS Visual Studio C 2015     3.8\nRaspbian (RPi 3)   32 bit    GCC                         3.7\nUbuntu 19.10 ARM   64 bit    GCC                         3.7\n================= ========  ========================== =========================\n\n* The Raspbian (RPi 3) tests were conducted on a Raspberry Pi 3 ARM CPU running\n  in 32 bit mode. \n* The Ubuntu ARM tests were conducted on a Raspberry Pi 3 ARM CPU running in\n  64 bit mode.\n* All others were conducted using VMs running on x86 hardware. \n\n---------------------------------------------------------------------\n\nInstallation\n============\n\nPlease note that this is a Python 3 package. To install using Pip, you will \nneed (with Debian package in brackets):\n\n* The appropriate C compiler and header files (gcc and build-essential).\n* The Python3 development headers (python3-dev).\n* Pip3 together with the corresponding Setuptools (python3-pip).\n\nexample::\n\n\t# Install from PyPI.\n\tpip3 install arrayfunc\n\t# Install from a local copy of the source package (Linux).\n\tpip3 install --no-index --find-links=. arrayfunc\n\t# Windows seems to use \"pip\" instead of \"pip3\" for some reason.\n\tpip install arrayfunc\n\n---------------------------------------------------------------------\n\nRelease History\n===============\n* 6.0.0 - Added SIMD support for ARMv8 AARCH64. This is 64 bit ARM on a\n          Raspberry Pi3 when running 64 bit Ubuntu. Raspbian is 32 bit only\n          and has 64 bit SIMD vectors. 64 bit ARM has 128 bit SIMD vectors\n          and so offers improved performance.\n* 5.1.1 - Updated and improved help documentation. Also updated test\n          platforms and retested.\n* 5.1.0 - This is a bug fix release only, centred around SIMD issues on\n          x86-64 with GCC. In a previous release some of the x86-64 SIMD \n          code had been changed to take advantage of a sort of assisted\n          auto-vectorisation present in GCC. However, certain operations\n          on certain integer sizes with certain array types will cause \n          GCC to generate incorrect x86 SIMD operations, producting \n          integer overflow. The functions known to be affected are aall, \n          aany, findindex (B, H, I arrays), eq, ge, gt, le, lt, ne (B, \n          H, I arrays), and rshift (h, i arrays). ARM was not affected. \n          All auto-vectorisation, where used, has been changed back to \n          manually generated SIMD operations for both x86 and ARM. \n          Rshift no longer uses SIMD  operations for b, B, h, or i \n          arrays on x86. Lshift no longer  supports SIMD operations on \n          b or B arrays on x86. Add and sub no longer use SIMD for B, H,\n          and I arrays on x86. Mul no longer uses SIMD on x86 for any\n          array types. Where SIMD functionality has been removed on x86, \n          it of course is still supported through normal portable CPU \n          instructions. ARM SIMD support was not affected by these\n          changes. Lost SIMD acceleration will be returned to x86 in a\n          later release where possible after the necessary research has\n          been conducted. Unit tests have been updated to cover a \n          greater range of integer values to test for this problem. \n          Platforms using compilers other than GCC were not affected by \n          this, as they did not use SIMD anyway. The main effect of this\n          present change is that some calculations may be slower for\n          some array types. The problem with GCC generating incorrect\n          SIMD instructions in some circumstances is apparently a known \n          (but obscure) issue. This will be avoided in future releases\n          by sticking with manual SIMD built-ins. Some source code files \n          have updated date stamps in this release but no substantive \n          code changes due to the template system used to auto-generate \n          code.\n* 5.0.0 - The main focus of this release has been adding SIMD \n          acceleration support to the ARMv7 platform  (e.g. Raspberry \n          Pi 3). Also added SIMD support to 'lshift' and 'rshift' on\n          x86-64 and ARM. Changed arrayparamsbase to fix compiler \n          warning on newer versions of GCC, but no change in actual\n          operation. Updated supported OS versions tested, and added\n          OpenBSD to supported platform list.\n* 4.3.1 - Numerous performance inprovements through the use of SIMD\n          acceleration in many functions. See the documentation to\n          see which functions are affected. Restrictions on the use of \n          non-finite data in parameters has been relaxed where possible. \n          Repeat now allows non-finite data as fill values. For \n          findindices, if no matches are found the result code is now \n          0 (zero) instead of -1.\n* 4.2.0 - Added fma function. This has no equivalent in the Python \n          standard library but is equivalent to x * y + z. Also changed\n          list of supported platforms to update FreeBSD to version 12\n          and added Centos 7.\n* 4.1.0 - Added isfinite function.\n* 4.0.1 - Repeat upload to synchronise source and Windows binary \"wheel\"\n          version. PyPI was not happy with the previous attempt. \n* 4.0.0 - Major revision with many changes. Amap, starmap, and acalc were \n          replaced with new individual functions. This change was made to \n          provides a simpler and more consistent interface which is tailored to\n          the individual function rather than attempting to make one parameter \n          format fit all. The \"disovfl\" parameter has been named to \"matherrors\" \n          in order to better reflect that it encompasses more than just integer\n          overflow. Support for the \"bytes\" type has been removed. The Raspberry\n          Pi has been added as a supported platform.\n* 3.1.0 - Added log2 to amap, amapi, and acalc.\n* 3.0.0 - Changed package format to \"Wheel\" files. No functional changes.\n* 2.1.1 - Fixed missing header files in PyPI package. No functional changes.\n* 2.0.0 - Many changes. Updated MS Windows support to 3.6 and latest compiler.\n          This in turn brought the Windows version up to feature parity with\n          the other versions. Changed supported MS Windows version from 32 bit\n          to 64 bit. Added SIMD support for some functions which provided a \n          significant performance for those affected. Updated supported versions\n          of Debian and FreeBSD to current releases.\n* 1.1.0 - Added support for math constants math.pi and math.e.\n* 1.0.0 - First release.", "description_content_type": "", "docs_url": "https://pythonhosted.org/arrayfunc/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/m1griffin/arrayfunc", "keywords": "mathematical array functions", "license": "Apache License V2.0", "maintainer": "", "maintainer_email": "", "name": "arrayfunc", "package_url": "https://pypi.org/project/arrayfunc/", "platform": "", "project_url": "https://pypi.org/project/arrayfunc/", "project_urls": {"Homepage": "https://github.com/m1griffin/arrayfunc"}, "release_url": "https://pypi.org/project/arrayfunc/6.0.0/", "requires_dist": null, "requires_python": "", "summary": "Fast array processing functions", "version": "6.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Authors:</th>\n<td>Michael Griffin</td></tr>\n<tr><th>Version:</th>\n<td>6.0.0 for 2020-03-27</td></tr>\n<tr><th>Copyright:</th>\n<td>2014 - 2020</td></tr>\n<tr><th>License:</th><td>This document may be distributed under the Apache 2.0 License.</td>\n</tr>\n<tr><th>Language:</th><td>Python 3.5 or later</td>\n</tr>\n</tbody>\n</table>\n<hr class=\"docutils\">\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The arrayfunc module provides high speed array processing functions for use with\nthe standard Python array module. These functions are patterned after the\nfunctions in the standard Python Itertools and math module together with some\nadditional ones from other sources.</p>\n<p>The purpose of these functions is to perform mathematical calculations on arrays\nfaster than using native Python.</p>\n<p>See full documentation at: <a href=\"http://arrayfunc.readthedocs.io/en/latest/\" rel=\"nofollow\">http://arrayfunc.readthedocs.io/en/latest/</a></p>\n</div>\n<hr class=\"docutils\">\n<div id=\"function-summary\">\n<h2>Function Summary</h2>\n<p>The functions fall into several categories.</p>\n<div id=\"filling-arrays\">\n<h3>Filling Arrays</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>count</td>\n<td>Fill an array with evenly spaced values using a start and step\nvalues.</td>\n</tr>\n<tr><td>cycle</td>\n<td>Fill an array with evenly spaced values using a start, stop, and step\nvalues, and repeat until the array is filled.</td>\n</tr>\n<tr><td>repeat</td>\n<td>Fill an array with a specified value.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"filtering-arrays\">\n<h3>Filtering Arrays</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>afilter</td>\n<td>Select values from an array based on a boolean criteria.</td>\n</tr>\n<tr><td>compress</td>\n<td>Select values from an array based on another array of boolean\nvalues.</td>\n</tr>\n<tr><td>dropwhile</td>\n<td>Select values from an array starting from where a selected\ncriteria fails and proceding to the end.</td>\n</tr>\n<tr><td>takewhile</td>\n<td>Like dropwhile, but starts from the beginning and stops when the\ncriteria fails.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"examining-and-searching-arrays\">\n<h3>Examining and Searching Arrays</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>findindex</td>\n<td>Returns the index of the first value in an array to meet the\nspecified criteria.</td>\n</tr>\n<tr><td>findindices</td>\n<td>Searches an array for the array indices which meet the specified\ncriteria and writes the results to a second array. Also returns\nthe number of matches found.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"summarising-arrays\">\n<h3>Summarising Arrays</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>aany</td>\n<td>Returns True if any element in an array meets the selected\ncriteria.</td>\n</tr>\n<tr><td>aall</td>\n<td>Returns True if all element in an array meet the selected\ncriteria.</td>\n</tr>\n<tr><td>amax</td>\n<td>Returns the maximum value in the array.</td>\n</tr>\n<tr><td>amin</td>\n<td>Returns the minimum value in the array.</td>\n</tr>\n<tr><td>asum</td>\n<td>Calculate the arithmetic sum of an array.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"data-conversion\">\n<h3>Data Conversion</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>convert</td>\n<td>Convert arrays between data types. The data will be converted into\nthe form required by the output array.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"mathematical-operator-functions\">\n<h3>Mathematical operator functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>add</td>\n<td>x + y</td>\n</tr>\n<tr><td>truediv</td>\n<td>x / y</td>\n</tr>\n<tr><td>floordiv</td>\n<td>x // y</td>\n</tr>\n<tr><td>mod</td>\n<td>x % y</td>\n</tr>\n<tr><td>mul</td>\n<td>x * y</td>\n</tr>\n<tr><td>neg</td>\n<td>-x</td>\n</tr>\n<tr><td>pow</td>\n<td>x**y or math.pow(x, y)</td>\n</tr>\n<tr><td>sub</td>\n<td>x - y</td>\n</tr>\n<tr><td>abs_</td>\n<td>abs(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"comparison-operator-functions\">\n<h3>Comparison operator functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>eq</td>\n<td>x == y</td>\n</tr>\n<tr><td>gt</td>\n<td>x &gt; y</td>\n</tr>\n<tr><td>ge</td>\n<td>x &gt;= y</td>\n</tr>\n<tr><td>lt</td>\n<td>x &lt; y</td>\n</tr>\n<tr><td>le</td>\n<td>x &lt;= y</td>\n</tr>\n<tr><td>ne</td>\n<td>x != y</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"bitwise-operator-functions\">\n<h3>Bitwise operator functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>and_</td>\n<td>x &amp; y</td>\n</tr>\n<tr><td>or_</td>\n<td>x | y</td>\n</tr>\n<tr><td>xor</td>\n<td>x ^ y</td>\n</tr>\n<tr><td>invert</td>\n<td>~x</td>\n</tr>\n<tr><td>lshift</td>\n<td>x &lt;&lt; y</td>\n</tr>\n<tr><td>rshift</td>\n<td>x &gt;&gt; y</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"power-and-logarithmic-functions\">\n<h3>Power and logarithmic functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>exp</td>\n<td>math.exp(x)</td>\n</tr>\n<tr><td>expm1</td>\n<td>math.expm1(x)</td>\n</tr>\n<tr><td>log</td>\n<td>math.log(x)</td>\n</tr>\n<tr><td>log10</td>\n<td>math.log10(x)</td>\n</tr>\n<tr><td>log1p</td>\n<td>math.log1p(x)</td>\n</tr>\n<tr><td>log2</td>\n<td>math.log2(x)</td>\n</tr>\n<tr><td>sqrt</td>\n<td>math.sqrt(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"hyperbolic-functions\">\n<h3>Hyperbolic functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>acosh</td>\n<td>math.acosh(x)</td>\n</tr>\n<tr><td>asinh</td>\n<td>math.asinh(x)</td>\n</tr>\n<tr><td>atanh</td>\n<td>math.atanh(x)</td>\n</tr>\n<tr><td>cosh</td>\n<td>math.cosh(x)</td>\n</tr>\n<tr><td>sinh</td>\n<td>math.sinh(x)</td>\n</tr>\n<tr><td>tanh</td>\n<td>math.tanh(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"trigonometric-functions\">\n<h3>Trigonometric functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>acos</td>\n<td>math.acos(x)</td>\n</tr>\n<tr><td>asin</td>\n<td>math.asin(x)</td>\n</tr>\n<tr><td>atan</td>\n<td>math.atan(x)</td>\n</tr>\n<tr><td>atan2</td>\n<td>math.atan2(x, y)</td>\n</tr>\n<tr><td>cos</td>\n<td>math.cos(x)</td>\n</tr>\n<tr><td>hypot</td>\n<td>math.hypot(x, y)</td>\n</tr>\n<tr><td>sin</td>\n<td>math.sin(x)</td>\n</tr>\n<tr><td>tan</td>\n<td>math.tan(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"angular-conversion\">\n<h3>Angular conversion</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>degrees</td>\n<td>math.degrees(x)</td>\n</tr>\n<tr><td>radians</td>\n<td>math.radians(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"number-theoretic-and-representation-functions\">\n<h3>Number-theoretic and representation functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>ceil</td>\n<td>math.ceil(x)</td>\n</tr>\n<tr><td>copysign</td>\n<td>math.copysign(x, y)</td>\n</tr>\n<tr><td>fabs</td>\n<td>math.fabs(x)</td>\n</tr>\n<tr><td>factorial</td>\n<td>math.factorial(x)</td>\n</tr>\n<tr><td>floor</td>\n<td>math.floor(x)</td>\n</tr>\n<tr><td>fmod</td>\n<td>math.fmod(x, y)</td>\n</tr>\n<tr><td>isfinite</td>\n<td>math.isfinite(x)</td>\n</tr>\n<tr><td>isinf</td>\n<td>math.isinf(x)</td>\n</tr>\n<tr><td>isnan</td>\n<td>math.isnan(x)</td>\n</tr>\n<tr><td>ldexp</td>\n<td>math.ldexp(x, y)</td>\n</tr>\n<tr><td>trunc</td>\n<td>math.trunc(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"special-functions\">\n<h3>Special functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>erf</td>\n<td>math.erf(x)</td>\n</tr>\n<tr><td>erfc</td>\n<td>math.erfc(x)</td>\n</tr>\n<tr><td>gamma</td>\n<td>math.gamma(x)</td>\n</tr>\n<tr><td>lgamma</td>\n<td>math.lgamma(x)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"additional-functions\">\n<h3>Additional functions</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Function</th>\n<th>Equivalent to</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>fma</td>\n<td>fma(x, y, z) or x * y + z</td>\n</tr>\n</tbody>\n</table>\n<div id=\"attributes\">\n<h4>Attributes</h4>\n<p>In addition to functions, a set of attributes are provided representing the\nplatform specific maximum and minimum numerical values for each array type.\nThese attributes are part of the \u201carraylimits\u201d module.</p>\n</div>\n</div>\n</div>\n<hr class=\"docutils\">\n<div id=\"supported-array-types\">\n<h2>Supported Array Types</h2>\n<p>Arrayfunc supports all standard Python 3.x array types.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"performance\">\n<h2>Performance</h2>\n<p>Average performance increase on x86_64 Ubuntu with GCC is 100 times faster\nthan native Python. Performance will vary depending on the function,\noperation, array data type used, and whether overflow checking is enabled,\nwith the performance increase ranging from 50% to 3000 times.</p>\n<p>Other platforms show similar improvements.</p>\n<p>Detailed performance figures are listed in the full documentation.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"platform-support\">\n<h2>Platform support</h2>\n<p>Arrayfunc is written in \u2018C\u2019 and uses the standard C libraries to implement the\nunderlying math functions. Arrayfunc has been tested on the following platforms.</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>OS</th>\n<th>Bits</th>\n<th>Compiler</th>\n<th>Python Version Tested</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Ubuntu 18.04 LTS</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.6</td>\n</tr>\n<tr><td>Ubuntu 19.10</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.7</td>\n</tr>\n<tr><td>Ubuntu 20.04 beta</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.8</td>\n</tr>\n<tr><td>Debian 10</td>\n<td>32 bit</td>\n<td>GCC</td>\n<td>3.7</td>\n</tr>\n<tr><td>Debian 10</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.7</td>\n</tr>\n<tr><td>OpenSuse 15</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.6</td>\n</tr>\n<tr><td>Centos 8</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.6</td>\n</tr>\n<tr><td>FreeBSD 12</td>\n<td>64 bit</td>\n<td>LLVM</td>\n<td>3.7</td>\n</tr>\n<tr><td>OpenBSD 6.5</td>\n<td>64 bit</td>\n<td>LLVM</td>\n<td>3.6</td>\n</tr>\n<tr><td>MS Windows 10</td>\n<td>64 bit</td>\n<td>MS Visual Studio C 2015</td>\n<td>3.8</td>\n</tr>\n<tr><td>Raspbian (RPi 3)</td>\n<td>32 bit</td>\n<td>GCC</td>\n<td>3.7</td>\n</tr>\n<tr><td>Ubuntu 19.10 ARM</td>\n<td>64 bit</td>\n<td>GCC</td>\n<td>3.7</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>The Raspbian (RPi 3) tests were conducted on a Raspberry Pi 3 ARM CPU running\nin 32 bit mode.</li>\n<li>The Ubuntu ARM tests were conducted on a Raspberry Pi 3 ARM CPU running in\n64 bit mode.</li>\n<li>All others were conducted using VMs running on x86 hardware.</li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Please note that this is a Python 3 package. To install using Pip, you will\nneed (with Debian package in brackets):</p>\n<ul>\n<li>The appropriate C compiler and header files (gcc and build-essential).</li>\n<li>The Python3 development headers (python3-dev).</li>\n<li>Pip3 together with the corresponding Setuptools (python3-pip).</li>\n</ul>\n<p>example:</p>\n<pre># Install from PyPI.\npip3 install arrayfunc\n# Install from a local copy of the source package (Linux).\npip3 install --no-index --find-links=. arrayfunc\n# Windows seems to use \"pip\" instead of \"pip3\" for some reason.\npip install arrayfunc\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"release-history\">\n<h2>Release History</h2>\n<ul>\n<li><dl>\n<dt>6.0.0 - Added SIMD support for ARMv8 AARCH64. This is 64 bit ARM on a</dt>\n<dd>Raspberry Pi3 when running 64 bit Ubuntu. Raspbian is 32 bit only\nand has 64 bit SIMD vectors. 64 bit ARM has 128 bit SIMD vectors\nand so offers improved performance.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>5.1.1 - Updated and improved help documentation. Also updated test</dt>\n<dd>platforms and retested.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>5.1.0 - This is a bug fix release only, centred around SIMD issues on</dt>\n<dd>x86-64 with GCC. In a previous release some of the x86-64 SIMD\ncode had been changed to take advantage of a sort of assisted\nauto-vectorisation present in GCC. However, certain operations\non certain integer sizes with certain array types will cause\nGCC to generate incorrect x86 SIMD operations, producting\ninteger overflow. The functions known to be affected are aall,\naany, findindex (B, H, I arrays), eq, ge, gt, le, lt, ne (B,\nH, I arrays), and rshift (h, i arrays). ARM was not affected.\nAll auto-vectorisation, where used, has been changed back to\nmanually generated SIMD operations for both x86 and ARM.\nRshift no longer uses SIMD  operations for b, B, h, or i\narrays on x86. Lshift no longer  supports SIMD operations on\nb or B arrays on x86. Add and sub no longer use SIMD for B, H,\nand I arrays on x86. Mul no longer uses SIMD on x86 for any\narray types. Where SIMD functionality has been removed on x86,\nit of course is still supported through normal portable CPU\ninstructions. ARM SIMD support was not affected by these\nchanges. Lost SIMD acceleration will be returned to x86 in a\nlater release where possible after the necessary research has\nbeen conducted. Unit tests have been updated to cover a\ngreater range of integer values to test for this problem.\nPlatforms using compilers other than GCC were not affected by\nthis, as they did not use SIMD anyway. The main effect of this\npresent change is that some calculations may be slower for\nsome array types. The problem with GCC generating incorrect\nSIMD instructions in some circumstances is apparently a known\n(but obscure) issue. This will be avoided in future releases\nby sticking with manual SIMD built-ins. Some source code files\nhave updated date stamps in this release but no substantive\ncode changes due to the template system used to auto-generate\ncode.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>5.0.0 - The main focus of this release has been adding SIMD</dt>\n<dd>acceleration support to the ARMv7 platform  (e.g. Raspberry\nPi 3). Also added SIMD support to \u2018lshift\u2019 and \u2018rshift\u2019 on\nx86-64 and ARM. Changed arrayparamsbase to fix compiler\nwarning on newer versions of GCC, but no change in actual\noperation. Updated supported OS versions tested, and added\nOpenBSD to supported platform list.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>4.3.1 - Numerous performance inprovements through the use of SIMD</dt>\n<dd>acceleration in many functions. See the documentation to\nsee which functions are affected. Restrictions on the use of\nnon-finite data in parameters has been relaxed where possible.\nRepeat now allows non-finite data as fill values. For\nfindindices, if no matches are found the result code is now\n0 (zero) instead of -1.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>4.2.0 - Added fma function. This has no equivalent in the Python</dt>\n<dd>standard library but is equivalent to x * y + z. Also changed\nlist of supported platforms to update FreeBSD to version 12\nand added Centos 7.</dd>\n</dl>\n</li>\n<li>4.1.0 - Added isfinite function.</li>\n<li><dl>\n<dt>4.0.1 - Repeat upload to synchronise source and Windows binary \u201cwheel\u201d</dt>\n<dd>version. PyPI was not happy with the previous attempt.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>4.0.0 - Major revision with many changes. Amap, starmap, and acalc were</dt>\n<dd>replaced with new individual functions. This change was made to\nprovides a simpler and more consistent interface which is tailored to\nthe individual function rather than attempting to make one parameter\nformat fit all. The \u201cdisovfl\u201d parameter has been named to \u201cmatherrors\u201d\nin order to better reflect that it encompasses more than just integer\noverflow. Support for the \u201cbytes\u201d type has been removed. The Raspberry\nPi has been added as a supported platform.</dd>\n</dl>\n</li>\n<li>3.1.0 - Added log2 to amap, amapi, and acalc.</li>\n<li>3.0.0 - Changed package format to \u201cWheel\u201d files. No functional changes.</li>\n<li>2.1.1 - Fixed missing header files in PyPI package. No functional changes.</li>\n<li><dl>\n<dt>2.0.0 - Many changes. Updated MS Windows support to 3.6 and latest compiler.</dt>\n<dd>This in turn brought the Windows version up to feature parity with\nthe other versions. Changed supported MS Windows version from 32 bit\nto 64 bit. Added SIMD support for some functions which provided a\nsignificant performance for those affected. Updated supported versions\nof Debian and FreeBSD to current releases.</dd>\n</dl>\n</li>\n<li>1.1.0 - Added support for math constants math.pi and math.e.</li>\n<li>1.0.0 - First release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6904624, "releases": {"0.9.1rc1": [{"comment_text": "", "digests": {"md5": "f13bd58c210c5db458f065d2ea5c379b", "sha256": "72e3edded838a082acab3b9baff3ee8630dc707de01ecdcffe9bc3a763bfd952"}, "downloads": -1, "filename": "arrayfunc-0.9.1rc1.tar.gz", "has_sig": false, "md5_digest": "f13bd58c210c5db458f065d2ea5c379b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73754, "upload_time": "2015-12-07T05:18:15", "upload_time_iso_8601": "2015-12-07T05:18:15.001057Z", "url": "https://files.pythonhosted.org/packages/73/bc/6c21f7e2253875677b3be6a6a9c5190ca2aba62b0d1d9d1a9ffe1b0f9256/arrayfunc-0.9.1rc1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "84b487aa54c2ab02eba1f01bc76ef00b", "sha256": "0d7514b97a3143ef87c041b5359e53950d505f97c93e32c4740f910ec295f9d0"}, "downloads": -1, "filename": "arrayfunc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "84b487aa54c2ab02eba1f01bc76ef00b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93405, "upload_time": "2016-03-25T02:35:06", "upload_time_iso_8601": "2016-03-25T02:35:06.175353Z", "url": "https://files.pythonhosted.org/packages/c0/63/79ca20de3c12b413b807ab139c15125efd2a8916cd969c121762a539b3a6/arrayfunc-1.0.0.tar.gz", "yanked": false}, {"comment_text": "Windows MSI", "digests": {"md5": "fa960fb759d9b8b91020dd8b95550a74", "sha256": "78f10c528f44326de87021a02ce351417cc8a8b04a54e5364ddb622ba14724f8"}, "downloads": -1, "filename": "arrayfunc-1.0.0.win32-py3.4.msi", "has_sig": false, "md5_digest": "fa960fb759d9b8b91020dd8b95550a74", "packagetype": "bdist_msi", "python_version": "3.4", "requires_python": null, "size": 294912, "upload_time": "2016-03-25T03:23:14", "upload_time_iso_8601": "2016-03-25T03:23:14.785494Z", "url": "https://files.pythonhosted.org/packages/7e/19/56b09d7c56d5175ca22970ba23e31b1ec8b85d7d86170724cf3c019122b2/arrayfunc-1.0.0.win32-py3.4.msi", "yanked": false}, {"comment_text": "Zip source file version", "digests": {"md5": "18510cf0c379bd05fef79336c9973548", "sha256": "f531e8eb554816c550a23e524a544cf1050605dffdc54959aec719a3dfc6cf1c"}, "downloads": -1, "filename": "arrayfunc-1.0.0.zip", "has_sig": false, "md5_digest": "18510cf0c379bd05fef79336c9973548", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129514, "upload_time": "2016-03-25T03:24:13", "upload_time_iso_8601": "2016-03-25T03:24:13.530091Z", "url": "https://files.pythonhosted.org/packages/8c/af/3ea291ae2d020583541c24699f8f65b6f7829a1c611f79b04d2c0e847923/arrayfunc-1.0.0.zip", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0dafe3c0bfd260f75436cc3fb987c1b6", "sha256": "b06fbe8d2be732dd39195ec09b8eb151fe2a2ffe8f8f49d02c18b471d1a89247"}, "downloads": -1, "filename": "arrayfunc-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0dafe3c0bfd260f75436cc3fb987c1b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 93843, "upload_time": "2016-04-09T23:30:22", "upload_time_iso_8601": "2016-04-09T23:30:22.003826Z", "url": "https://files.pythonhosted.org/packages/ec/17/e8701befaab6f316b6ae9694bfb600aa89282aff33e608c64a1bc5f00d43/arrayfunc-1.1.0.tar.gz", "yanked": false}, {"comment_text": "Windows MSI", "digests": {"md5": "8f6bd6276900fa37adad52d86515127f", "sha256": "07ef3a139a9635f643e8175bab2bcfdc856a00d4968410139deeab4d7ebd39ee"}, "downloads": -1, "filename": "arrayfunc-1.1.0.win32-py3.4.msi", "has_sig": false, "md5_digest": "8f6bd6276900fa37adad52d86515127f", "packagetype": "bdist_msi", "python_version": "3.4", "requires_python": null, "size": 294912, "upload_time": "2016-04-10T00:46:29", "upload_time_iso_8601": "2016-04-10T00:46:29.996946Z", "url": "https://files.pythonhosted.org/packages/df/e8/985e2ce39e05eed3f32d770c0c0812557bbbb358b4dc456ff5277485a28e/arrayfunc-1.1.0.win32-py3.4.msi", "yanked": false}, {"comment_text": "Zip version of source", "digests": {"md5": "31a221d876af0c7ad242d76d5a54720e", "sha256": "2820d57a41fc752a4329e25aa155374a084b219750157e1cad949b2f1424c095"}, "downloads": -1, "filename": "arrayfunc-1.1.0.zip", "has_sig": false, "md5_digest": "31a221d876af0c7ad242d76d5a54720e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 130030, "upload_time": "2016-04-10T00:48:17", "upload_time_iso_8601": "2016-04-10T00:48:17.038173Z", "url": "https://files.pythonhosted.org/packages/40/b2/19d8b4173d20009fccae4c8e03ead31d2295db475f3e56d25723bc0251cf/arrayfunc-1.1.0.zip", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "cf5a31a20e7e235fad9645c7ac2fb019", "sha256": "34f2449746aa3d4014ba686bdef3611b77d193cce0749e6b454ad67cfdf08cac"}, "downloads": -1, "filename": "arrayfunc-2.0.0.tar.gz", "has_sig": false, "md5_digest": "cf5a31a20e7e235fad9645c7ac2fb019", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104870, "upload_time": "2017-07-03T08:47:25", "upload_time_iso_8601": "2017-07-03T08:47:25.394466Z", "url": "https://files.pythonhosted.org/packages/e3/bd/c065c6b7e8dd68818e2919a476ab771a63be5fa89a5a31646455c4260677/arrayfunc-2.0.0.tar.gz", "yanked": false}, {"comment_text": "Windows installer", "digests": {"md5": "e7aa7f26ef7134fe740caa059840e1ae", "sha256": "5a5296a5ecb1f7e6126db5b0c7a3d0bd75d9938f9fcac43e63e62b1098e913b3"}, "downloads": -1, "filename": "arrayfunc-2.0.0.win-amd64-py3.6.exe", "has_sig": false, "md5_digest": "e7aa7f26ef7134fe740caa059840e1ae", "packagetype": "bdist_wininst", "python_version": "3.6", "requires_python": null, "size": 1368051, "upload_time": "2017-07-03T08:49:36", "upload_time_iso_8601": "2017-07-03T08:49:36.328365Z", "url": "https://files.pythonhosted.org/packages/db/b7/7f41af8006c70b4917c20e0b2395ad581045eec13c20864dc903915cdffa/arrayfunc-2.0.0.win-amd64-py3.6.exe", "yanked": false}, {"comment_text": "Windows MSI installer.", "digests": {"md5": "c8044692e056978395a46abce4c9cf06", "sha256": "9ff0fe50e10fc358497c4aadae711b24bcddeebb31348f296c6c6d4d35162d2c"}, "downloads": -1, "filename": "arrayfunc-2.0.0.win-amd64-py3.6.msi", "has_sig": false, "md5_digest": "c8044692e056978395a46abce4c9cf06", "packagetype": "bdist_msi", "python_version": "3.6", "requires_python": null, "size": 774144, "upload_time": "2017-07-03T08:51:49", "upload_time_iso_8601": "2017-07-03T08:51:49.387410Z", "url": "https://files.pythonhosted.org/packages/0e/77/37af61eb5bd5c6c1070ae8118da77d03b05fc59d47c2dd9c7af429f3e318/arrayfunc-2.0.0.win-amd64-py3.6.msi", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "643ffb5588e665161188e870e8924d9e", "sha256": "a385e51586a6ed5951679c56f371b8f595bc261dca090fae7456505157c2eeac"}, "downloads": -1, "filename": "arrayfunc-2.1.0.tar.gz", "has_sig": false, "md5_digest": "643ffb5588e665161188e870e8924d9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110600, "upload_time": "2017-07-26T05:47:18", "upload_time_iso_8601": "2017-07-26T05:47:18.763172Z", "url": "https://files.pythonhosted.org/packages/71/20/3b28f04dcf85cbaf3f932d60ba47619c674f65e41b012d04c171022a0992/arrayfunc-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "aef31069ec9aee5c69b07ea635c56615", "sha256": "527294559e86e1858d2c599cbdeebc837a59e33296f840cd42d86e66ca6cb2b3"}, "downloads": -1, "filename": "arrayfunc-2.1.1.tar.gz", "has_sig": false, "md5_digest": "aef31069ec9aee5c69b07ea635c56615", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110905, "upload_time": "2017-07-26T07:13:08", "upload_time_iso_8601": "2017-07-26T07:13:08.464401Z", "url": "https://files.pythonhosted.org/packages/a0/99/68ff4ea070c6cd94bf6acf03d49177e3a8216e252c5eb573df994d0a503d/arrayfunc-2.1.1.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "b003178e1bcb3c52e0702f1c15fb87f5", "sha256": "5a0be01c90aa4adddf4092a37d62da59ad02c32962a6e9c55575c96d58d4ee47"}, "downloads": -1, "filename": "arrayfunc-3.0.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "b003178e1bcb3c52e0702f1c15fb87f5", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 777929, "upload_time": "2017-08-28T07:02:39", "upload_time_iso_8601": "2017-08-28T07:02:39.805340Z", "url": "https://files.pythonhosted.org/packages/ac/29/70fa661fcae1df708109b82347a48cf425bbfb4f68cea7cb7af6bdff0886/arrayfunc-3.0.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7cf47d1228b9d3ddab621688a40fbb1", "sha256": "55ffc6d147178a008e117c6bdadfd57cfc6def419eb2334d7ffbd0d762b16551"}, "downloads": -1, "filename": "arrayfunc-3.0.0-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "f7cf47d1228b9d3ddab621688a40fbb1", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 802214, "upload_time": "2017-08-28T07:02:51", "upload_time_iso_8601": "2017-08-28T07:02:51.956303Z", "url": "https://files.pythonhosted.org/packages/94/10/5b428f9e2b437cc2bc3b2b59d5523b35fe077ecec382b8d7996c5e33837e/arrayfunc-3.0.0-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf08d3b9625ffb828bbf3ae51fc4b53c", "sha256": "ca3ed969e66919495721fa1106d88d7b687c75f95ffa4ca8c4666bf33dd826e6"}, "downloads": -1, "filename": "arrayfunc-3.0.0.tar.gz", "has_sig": false, "md5_digest": "cf08d3b9625ffb828bbf3ae51fc4b53c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112376, "upload_time": "2017-08-28T07:02:55", "upload_time_iso_8601": "2017-08-28T07:02:55.913881Z", "url": "https://files.pythonhosted.org/packages/1a/b5/eb97fa203e9fc17d25a3f40a618a1e65842fb1701978a0d5c606e7f22283/arrayfunc-3.0.0.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "a7b76c74805ece59fefa360e9ff06201", "sha256": "bed824305b959279b199affd793229da0a5a5e3834d62e2ef67757972095e9e4"}, "downloads": -1, "filename": "arrayfunc-3.1.0-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "a7b76c74805ece59fefa360e9ff06201", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 778058, "upload_time": "2017-10-13T04:16:54", "upload_time_iso_8601": "2017-10-13T04:16:54.572334Z", "url": "https://files.pythonhosted.org/packages/25/77/c5068d189766858d53c979e3c5860587a4dba5ad1181995fba69df1f3213/arrayfunc-3.1.0-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "115087f7d69317a48aac4a8ef93aac86", "sha256": "664a8954bd125ab391410b74a0824bebd5d283365c34db6efcc1df749f99796e"}, "downloads": -1, "filename": "arrayfunc-3.1.0.tar.gz", "has_sig": false, "md5_digest": "115087f7d69317a48aac4a8ef93aac86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 109884, "upload_time": "2017-10-13T04:16:57", "upload_time_iso_8601": "2017-10-13T04:16:57.828606Z", "url": "https://files.pythonhosted.org/packages/5b/ee/7b7dc0c79fa02baf0a157596e6141321bbe5c8227d3f1f6088811f054816/arrayfunc-3.1.0.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "1ba08d7b9ac628e5552bb19ca30f50f7", "sha256": "3ebc54fa86281789c1f09e7a27ed9b92cc6a60469a1e5de75949499056a8ccb8"}, "downloads": -1, "filename": "arrayfunc-4.0.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "1ba08d7b9ac628e5552bb19ca30f50f7", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1240466, "upload_time": "2018-09-27T06:30:57", "upload_time_iso_8601": "2018-09-27T06:30:57.540638Z", "url": "https://files.pythonhosted.org/packages/20/ff/6949c0c9340cd385c54f3da027e8724346bddf534649327ae8d783cfe580/arrayfunc-4.0.0-cp37-cp37m-win_amd64.whl", "yanked": false}], "4.0.1": [{"comment_text": "", "digests": {"md5": "10c9f19d3c265ef39d30924841e3564a", "sha256": "b9e9aa35e9fdd103d2142cc1d2ae8fe75abeb92dc4071208728a4a7cecb71954"}, "downloads": -1, "filename": "arrayfunc-4.0.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "10c9f19d3c265ef39d30924841e3564a", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1240548, "upload_time": "2018-09-27T07:12:38", "upload_time_iso_8601": "2018-09-27T07:12:38.183880Z", "url": "https://files.pythonhosted.org/packages/f5/aa/66f46b25950c8b8e82cb4ac4c53bd825dd5fe80221f69842d7a11e3a43a9/arrayfunc-4.0.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ca20d8c504be5b24681a56646a8ac156", "sha256": "aa575a6896c429449659915f02173c88b994dc780e00c26559d346e746d094b4"}, "downloads": -1, "filename": "arrayfunc-4.0.1.tar.gz", "has_sig": false, "md5_digest": "ca20d8c504be5b24681a56646a8ac156", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 175140, "upload_time": "2018-09-27T07:07:27", "upload_time_iso_8601": "2018-09-27T07:07:27.283651Z", "url": "https://files.pythonhosted.org/packages/a2/e6/558e08b1de62e73861f8bd6f9e5f00a076fcc2fd949be5c73f69391ce51f/arrayfunc-4.0.1.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "1c9796ef9fac39bac6518963fb829eba", "sha256": "4eaa7caa9bc5c0cd7a52f057674d838cf7e7fba906055cd1ad5f0f7b4633c571"}, "downloads": -1, "filename": "arrayfunc-4.1.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "1c9796ef9fac39bac6518963fb829eba", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1252042, "upload_time": "2018-11-18T05:11:53", "upload_time_iso_8601": "2018-11-18T05:11:53.547296Z", "url": "https://files.pythonhosted.org/packages/52/89/6aaae6a2811ac9c66fa5e8514714fb335266d059fe2d2976f3f790b4e03e/arrayfunc-4.1.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b17bf35d49d975ce325169643c9d4c0b", "sha256": "9002a8d5de775480e9d8451db3d186069485df48269afd36150f593773c29628"}, "downloads": -1, "filename": "arrayfunc-4.1.0.tar.gz", "has_sig": false, "md5_digest": "b17bf35d49d975ce325169643c9d4c0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 175373, "upload_time": "2018-11-18T04:38:26", "upload_time_iso_8601": "2018-11-18T04:38:26.239262Z", "url": "https://files.pythonhosted.org/packages/9f/ec/6c46c35ea71508913a7ca07272a34090e7cef6ab6e92c0610fc7a0c5dbbc/arrayfunc-4.1.0.tar.gz", "yanked": false}], "4.2.0": [{"comment_text": "", "digests": {"md5": "ea1701f11b5d9ba1b1c55fcfa08e34a6", "sha256": "be119ae466db42ac0bff6bffa367a2a650694d1bb986ec6f534d44ee113ac661"}, "downloads": -1, "filename": "arrayfunc-4.2.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "ea1701f11b5d9ba1b1c55fcfa08e34a6", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1269669, "upload_time": "2018-12-24T05:12:06", "upload_time_iso_8601": "2018-12-24T05:12:06.512354Z", "url": "https://files.pythonhosted.org/packages/fb/14/b430cfc3eaffb53f4798df5d1259d50acf3cabdbfb2c19140844b7a2839c/arrayfunc-4.2.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "802d3d47e6ca7c7ca490a61482d36513", "sha256": "1277adb4404094c5c3fee87ccb3dd1c545be70a94a818e16ac965684a35d5d91"}, "downloads": -1, "filename": "arrayfunc-4.2.0.tar.gz", "has_sig": false, "md5_digest": "802d3d47e6ca7c7ca490a61482d36513", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 178531, "upload_time": "2018-12-24T04:57:41", "upload_time_iso_8601": "2018-12-24T04:57:41.171960Z", "url": "https://files.pythonhosted.org/packages/db/53/f56f0429ed482789b72ed39085a4c4f61d572503cb6fa276fa9e77e6ed18/arrayfunc-4.2.0.tar.gz", "yanked": false}], "4.3.1": [{"comment_text": "", "digests": {"md5": "d8cefc1d4e8705f81ececbac2cb0cf68", "sha256": "7a4104bcfdaccad9d3ab0e23aa31ea6b5179d75b7f60e1ff3586d26012b2b986"}, "downloads": -1, "filename": "arrayfunc-4.3.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "d8cefc1d4e8705f81ececbac2cb0cf68", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1305303, "upload_time": "2019-09-17T08:41:29", "upload_time_iso_8601": "2019-09-17T08:41:29.324303Z", "url": "https://files.pythonhosted.org/packages/7f/af/68b312e134fd2633d036bc336cb1f03ebff8688765993b37c637396dd27d/arrayfunc-4.3.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea11eeaed2eccffe6fa45cc218c398dc", "sha256": "668232f637db731c7af22f79e20a2fb27e7c596c2356aed328cf9643d87520ae"}, "downloads": -1, "filename": "arrayfunc-4.3.1.tar.gz", "has_sig": false, "md5_digest": "ea11eeaed2eccffe6fa45cc218c398dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 242752, "upload_time": "2019-09-17T08:22:51", "upload_time_iso_8601": "2019-09-17T08:22:51.999031Z", "url": "https://files.pythonhosted.org/packages/2f/1d/aa108ca77097b39646f02841693316ec4756a6323bac66b6f17ba7a0eea6/arrayfunc-4.3.1.tar.gz", "yanked": false}], "5.0.0": [{"comment_text": "", "digests": {"md5": "7f8746130ec7b8e53d6290c2f29f697c", "sha256": "e8dfa9fc24d6245e834bb91ab2e38a1a26814def1a496e3b6ff2905076c405b5"}, "downloads": -1, "filename": "arrayfunc-5.0.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "7f8746130ec7b8e53d6290c2f29f697c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1307028, "upload_time": "2019-10-29T22:56:01", "upload_time_iso_8601": "2019-10-29T22:56:01.046792Z", "url": "https://files.pythonhosted.org/packages/09/c4/f59d3ab4024fc6bf0d3fc4bcb95c17f4d23ce63b66706548bdeb8ed0dcb7/arrayfunc-5.0.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec1ad42a1b3c8a935476947212623f11", "sha256": "3e61690e880b93af67cc670576c68dbc77947036dfed3e34db4666738bded59a"}, "downloads": -1, "filename": "arrayfunc-5.0.0.tar.gz", "has_sig": false, "md5_digest": "ec1ad42a1b3c8a935476947212623f11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 289321, "upload_time": "2019-10-29T22:41:35", "upload_time_iso_8601": "2019-10-29T22:41:35.885388Z", "url": "https://files.pythonhosted.org/packages/10/cc/dff9c10df93653bc7ece4c3e66df386c6a4e0520c79b8d4d959e94ee3fd4/arrayfunc-5.0.0.tar.gz", "yanked": false}], "5.1.0": [{"comment_text": "", "digests": {"md5": "72df5d5c0aa8b5279af839f5b177846f", "sha256": "2b0f4bebc6f6e309a8b0d6d67c0f959b00013bacfeed95d177879bab1962b372"}, "downloads": -1, "filename": "arrayfunc-5.1.0-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "72df5d5c0aa8b5279af839f5b177846f", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 1306673, "upload_time": "2020-01-09T06:41:10", "upload_time_iso_8601": "2020-01-09T06:41:10.003813Z", "url": "https://files.pythonhosted.org/packages/e3/75/cef44c1e8bf54794bbbd589c8dcdcfb57923e93bd7ded9b284a581268c6c/arrayfunc-5.1.0-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "694b89face95039a315ac7f40f49fbfc", "sha256": "355a11e3485a3ae13706f661423ccb163f838008e39d4346e057e8dacd969132"}, "downloads": -1, "filename": "arrayfunc-5.1.0.tar.gz", "has_sig": false, "md5_digest": "694b89face95039a315ac7f40f49fbfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 285052, "upload_time": "2020-01-09T06:03:21", "upload_time_iso_8601": "2020-01-09T06:03:21.768004Z", "url": "https://files.pythonhosted.org/packages/b8/b8/64a7600f904b041eddd4d8fa48c135b11bab02c604f537b7157b72a3b3e2/arrayfunc-5.1.0.tar.gz", "yanked": false}], "5.1.1": [{"comment_text": "", "digests": {"md5": "d59ab3135e03cc68d92fbc8d11e8aacc", "sha256": "90a7678928894ecc74e02b426d8aae567a2b31e643fb9c9aa5fcb3347313fee8"}, "downloads": -1, "filename": "arrayfunc-5.1.1-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "d59ab3135e03cc68d92fbc8d11e8aacc", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 1313564, "upload_time": "2020-03-11T04:51:15", "upload_time_iso_8601": "2020-03-11T04:51:15.482784Z", "url": "https://files.pythonhosted.org/packages/ff/81/2724d478f584075aabce326dbe4d39a8d6b93b89280ded335f13efb037eb/arrayfunc-5.1.1-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d8fdd423dba1363d1c0e424713d39df", "sha256": "de1315bcd6775885f7344449a7c47262cf0baf740e6032e0db6e373c72d76537"}, "downloads": -1, "filename": "arrayfunc-5.1.1.tar.gz", "has_sig": false, "md5_digest": "3d8fdd423dba1363d1c0e424713d39df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 286507, "upload_time": "2020-03-11T04:44:07", "upload_time_iso_8601": "2020-03-11T04:44:07.027296Z", "url": "https://files.pythonhosted.org/packages/ea/98/f6c8069f133a3faa5cde8b156042b700ad606d75ad43b433b7276d882f1a/arrayfunc-5.1.1.tar.gz", "yanked": false}], "6.0.0": [{"comment_text": "", "digests": {"md5": "3ec73b43f5b7b105d3fc6cd9c080dcdc", "sha256": "64a7c9e38a3504929c097864230d52136d38649dcec6985b2fa49ba0986fcc1b"}, "downloads": -1, "filename": "arrayfunc-6.0.0-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "3ec73b43f5b7b105d3fc6cd9c080dcdc", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 1314998, "upload_time": "2020-03-29T02:19:03", "upload_time_iso_8601": "2020-03-29T02:19:03.845309Z", "url": "https://files.pythonhosted.org/packages/b4/24/868b11f94efe5193f232f6013ada45c90f08507ae6a40910f0a9fe5976ea/arrayfunc-6.0.0-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6ba0cec60afa23bb073722b1f2fa4d4", "sha256": "0f0f094069306c6ab3d4e43303bfb12db6627c2758a3d520f3a8c7849206e23d"}, "downloads": -1, "filename": "arrayfunc-6.0.0.tar.gz", "has_sig": false, "md5_digest": "a6ba0cec60afa23bb073722b1f2fa4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 335622, "upload_time": "2020-03-29T01:44:05", "upload_time_iso_8601": "2020-03-29T01:44:05.408665Z", "url": "https://files.pythonhosted.org/packages/7f/d8/b93c196cc2453c75162ca864f61d344903af903f77985f50e3f51ef09434/arrayfunc-6.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3ec73b43f5b7b105d3fc6cd9c080dcdc", "sha256": "64a7c9e38a3504929c097864230d52136d38649dcec6985b2fa49ba0986fcc1b"}, "downloads": -1, "filename": "arrayfunc-6.0.0-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "3ec73b43f5b7b105d3fc6cd9c080dcdc", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 1314998, "upload_time": "2020-03-29T02:19:03", "upload_time_iso_8601": "2020-03-29T02:19:03.845309Z", "url": "https://files.pythonhosted.org/packages/b4/24/868b11f94efe5193f232f6013ada45c90f08507ae6a40910f0a9fe5976ea/arrayfunc-6.0.0-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a6ba0cec60afa23bb073722b1f2fa4d4", "sha256": "0f0f094069306c6ab3d4e43303bfb12db6627c2758a3d520f3a8c7849206e23d"}, "downloads": -1, "filename": "arrayfunc-6.0.0.tar.gz", "has_sig": false, "md5_digest": "a6ba0cec60afa23bb073722b1f2fa4d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 335622, "upload_time": "2020-03-29T01:44:05", "upload_time_iso_8601": "2020-03-29T01:44:05.408665Z", "url": "https://files.pythonhosted.org/packages/7f/d8/b93c196cc2453c75162ca864f61d344903af903f77985f50e3f51ef09434/arrayfunc-6.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:10 2020"}