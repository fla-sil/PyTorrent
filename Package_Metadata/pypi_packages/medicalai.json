{"info": {"author": "Vinayaka Jyothi - For AiBharata", "author_email": "contact@aibharata.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# medicalAI\nMedical-AI is a AI framework specifically for Medical Applications\n\n# Installation\n```py \npip install medicalai\n```\n# Requirements\nPython Version : 3.5-3.7 (Doesn't Work on 3.8 Since Tensorflow does not support 3.8 yet.\n\nDependencies: Numpy, Tensorflow, Seaborn, Matplotlib, Pandas\n\n    NOTE: Dependency libraries are automatically installed. No need for user to install them manually.\n\n# Usage\n\n### Importing the Library\n```py \nimport medicalai as mai\n```\n\n## Using Templates\nYou can use the following templates to perform specific Tasks\n\n### Load Dataset From Folder\nSet the path of the dataset and set the target dimension of image that will be input to AI network.\n```py \ntrainSet,testSet,labelNames =mai.datasetFromFolder(datasetFolderPath, targetDim = (96,96)).load_dataset()\n```\n    - trainSet contains 'data' and 'labels' accessible by trainSet.data and trainSet.labels\n    - testSet contains 'data' and 'labels' accessible by testSet.data and testSet.labels\n    - labelNames contains class names/labels\n\n### Check Loaded Dataset Size\n```py \nprint(trainSet.data.shape)\nprint(trainSet.labels.shape)\n```\n\n### Run Training and Save Model\n```py\ntrainer = mai.TRAIN_ENGINE()\ntrainer.train_and_save_model(AI_NAME= 'tinyMedNet', MODEL_SAVE_NAME='PATH_WHERE_MODEL_IS_SAVED_TO', trainSet, testSet, OUTPUT_CLASSES, RETRAIN_MODEL= True, BATCH_SIZE= 32, EPOCHS= 10, LEARNING_RATE= 0.001)\n```\n\n\n### Plot Training Loss and Accuracy\n```py\ntrainer.plot_train_acc_loss()\n```\n\n### Plot Confusion matrix of test data\n```py\ntrainer.plot_confusion_matrix(labelNames,title='Confusion Matrix of Trained Model on Test Dataset')\n```\n\n### Loading Model for Prediction \n```py\nmodel = mai.load_model_and_weights(modelName = 'PATH_WHERE_MODEL_IS_SAVED_TO')\n```\n\n\n### Predict With Labels \n```py\nmai.predict_labels(model, testSet.data[0:2], expected_output =testSet.labels[0:2], labelNames=labels, top_preds=3)\n```\n### Get Just Values of Prediction without postprocessing\n```py\nmodel.predict(testSet.data[0:2])\n```\n\n## Advanced Usage\n\n### Code snippet for Training Using Medical-AI \n```py\n## Setup AI Model Manager with required AI. \nmodel = mai.modelManager(AI_NAME= AI_NAME, modelName = MODEL_SAVE_NAME, x_train = train_data, OUTPUT_CLASSES = OUTPUT_CLASSES, RETRAIN_MODEL= RETRAIN_MODEL)\n\n# Start Training\nresult = mai.train(model, train_data, train_labels, BATCH_SIZE, EPOCHS, LEARNING_RATE, validation_data=(test_data, test_labels), callbacks=['tensorboard'])\n\n# Evaluate Trained Model on Test Data\nmodel.evaluate(test_data, test_labels)\n\n# Plot Accuracy vs Loss for Training\nmai.plot_training_metrics(result)\n\n#Save the Trained Model\nmai.save_model_and_weights(model, outputName= MODEL_SAVE_NAME)\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/aibharata/medicalAI/archive/v1.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aibharata/medicalAI", "keywords": "AI Framework,Medical AI,Tensorflow,radiology AI", "license": "Apache", "maintainer": "", "maintainer_email": "", "name": "medicalai", "package_url": "https://pypi.org/project/medicalai/", "platform": "", "project_url": "https://pypi.org/project/medicalai/", "project_urls": {"Download": "https://github.com/aibharata/medicalAI/archive/v1.1.0.tar.gz", "Homepage": "https://github.com/aibharata/medicalAI"}, "release_url": "https://pypi.org/project/medicalai/1.1.0/", "requires_dist": null, "requires_python": ">=3.5, <3.8", "summary": "Medical-AI is a AI framework specifically for Medical Applications", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>medicalAI</h1>\n<p>Medical-AI is a AI framework specifically for Medical Applications</p>\n<h1>Installation</h1>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">medicalai</span>\n</pre>\n<h1>Requirements</h1>\n<p>Python Version : 3.5-3.7 (Doesn't Work on 3.8 Since Tensorflow does not support 3.8 yet.</p>\n<p>Dependencies: Numpy, Tensorflow, Seaborn, Matplotlib, Pandas</p>\n<pre><code>NOTE: Dependency libraries are automatically installed. No need for user to install them manually.\n</code></pre>\n<h1>Usage</h1>\n<h3>Importing the Library</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">medicalai</span> <span class=\"k\">as</span> <span class=\"nn\">mai</span>\n</pre>\n<h2>Using Templates</h2>\n<p>You can use the following templates to perform specific Tasks</p>\n<h3>Load Dataset From Folder</h3>\n<p>Set the path of the dataset and set the target dimension of image that will be input to AI network.</p>\n<pre><span class=\"n\">trainSet</span><span class=\"p\">,</span><span class=\"n\">testSet</span><span class=\"p\">,</span><span class=\"n\">labelNames</span> <span class=\"o\">=</span><span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">datasetFromFolder</span><span class=\"p\">(</span><span class=\"n\">datasetFolderPath</span><span class=\"p\">,</span> <span class=\"n\">targetDim</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mi\">96</span><span class=\"p\">,</span><span class=\"mi\">96</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">load_dataset</span><span class=\"p\">()</span>\n</pre>\n<pre><code>- trainSet contains 'data' and 'labels' accessible by trainSet.data and trainSet.labels\n- testSet contains 'data' and 'labels' accessible by testSet.data and testSet.labels\n- labelNames contains class names/labels\n</code></pre>\n<h3>Check Loaded Dataset Size</h3>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">trainSet</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">trainSet</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">)</span>\n</pre>\n<h3>Run Training and Save Model</h3>\n<pre><span class=\"n\">trainer</span> <span class=\"o\">=</span> <span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">TRAIN_ENGINE</span><span class=\"p\">()</span>\n<span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">train_and_save_model</span><span class=\"p\">(</span><span class=\"n\">AI_NAME</span><span class=\"o\">=</span> <span class=\"s1\">'tinyMedNet'</span><span class=\"p\">,</span> <span class=\"n\">MODEL_SAVE_NAME</span><span class=\"o\">=</span><span class=\"s1\">'PATH_WHERE_MODEL_IS_SAVED_TO'</span><span class=\"p\">,</span> <span class=\"n\">trainSet</span><span class=\"p\">,</span> <span class=\"n\">testSet</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT_CLASSES</span><span class=\"p\">,</span> <span class=\"n\">RETRAIN_MODEL</span><span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">BATCH_SIZE</span><span class=\"o\">=</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"n\">EPOCHS</span><span class=\"o\">=</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">LEARNING_RATE</span><span class=\"o\">=</span> <span class=\"mf\">0.001</span><span class=\"p\">)</span>\n</pre>\n<h3>Plot Training Loss and Accuracy</h3>\n<pre><span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">plot_train_acc_loss</span><span class=\"p\">()</span>\n</pre>\n<h3>Plot Confusion matrix of test data</h3>\n<pre><span class=\"n\">trainer</span><span class=\"o\">.</span><span class=\"n\">plot_confusion_matrix</span><span class=\"p\">(</span><span class=\"n\">labelNames</span><span class=\"p\">,</span><span class=\"n\">title</span><span class=\"o\">=</span><span class=\"s1\">'Confusion Matrix of Trained Model on Test Dataset'</span><span class=\"p\">)</span>\n</pre>\n<h3>Loading Model for Prediction</h3>\n<pre><span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">load_model_and_weights</span><span class=\"p\">(</span><span class=\"n\">modelName</span> <span class=\"o\">=</span> <span class=\"s1\">'PATH_WHERE_MODEL_IS_SAVED_TO'</span><span class=\"p\">)</span>\n</pre>\n<h3>Predict With Labels</h3>\n<pre><span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">predict_labels</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">testSet</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">expected_output</span> <span class=\"o\">=</span><span class=\"n\">testSet</span><span class=\"o\">.</span><span class=\"n\">labels</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">],</span> <span class=\"n\">labelNames</span><span class=\"o\">=</span><span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">top_preds</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n</pre>\n<h3>Get Just Values of Prediction without postprocessing</h3>\n<pre><span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">predict</span><span class=\"p\">(</span><span class=\"n\">testSet</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">])</span>\n</pre>\n<h2>Advanced Usage</h2>\n<h3>Code snippet for Training Using Medical-AI</h3>\n<pre><span class=\"c1\">## Setup AI Model Manager with required AI. </span>\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">modelManager</span><span class=\"p\">(</span><span class=\"n\">AI_NAME</span><span class=\"o\">=</span> <span class=\"n\">AI_NAME</span><span class=\"p\">,</span> <span class=\"n\">modelName</span> <span class=\"o\">=</span> <span class=\"n\">MODEL_SAVE_NAME</span><span class=\"p\">,</span> <span class=\"n\">x_train</span> <span class=\"o\">=</span> <span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">OUTPUT_CLASSES</span> <span class=\"o\">=</span> <span class=\"n\">OUTPUT_CLASSES</span><span class=\"p\">,</span> <span class=\"n\">RETRAIN_MODEL</span><span class=\"o\">=</span> <span class=\"n\">RETRAIN_MODEL</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Start Training</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">train_data</span><span class=\"p\">,</span> <span class=\"n\">train_labels</span><span class=\"p\">,</span> <span class=\"n\">BATCH_SIZE</span><span class=\"p\">,</span> <span class=\"n\">EPOCHS</span><span class=\"p\">,</span> <span class=\"n\">LEARNING_RATE</span><span class=\"p\">,</span> <span class=\"n\">validation_data</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">test_data</span><span class=\"p\">,</span> <span class=\"n\">test_labels</span><span class=\"p\">),</span> <span class=\"n\">callbacks</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'tensorboard'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Evaluate Trained Model on Test Data</span>\n<span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">evaluate</span><span class=\"p\">(</span><span class=\"n\">test_data</span><span class=\"p\">,</span> <span class=\"n\">test_labels</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Plot Accuracy vs Loss for Training</span>\n<span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">plot_training_metrics</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#Save the Trained Model</span>\n<span class=\"n\">mai</span><span class=\"o\">.</span><span class=\"n\">save_model_and_weights</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">outputName</span><span class=\"o\">=</span> <span class=\"n\">MODEL_SAVE_NAME</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7012786, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "6f753527cb9ff0b0a83c8b3257adac73", "sha256": "780ad30dc165915fd8d775726debbe70c548afdf2ae87c13758ac9d5d0cb1931"}, "downloads": -1, "filename": "medicalai-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6f753527cb9ff0b0a83c8b3257adac73", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 3975, "upload_time": "2020-03-28T17:18:04", "upload_time_iso_8601": "2020-03-28T17:18:04.849806Z", "url": "https://files.pythonhosted.org/packages/2a/9c/768396856661f21c36a60166eed0ba55a3c121d878deafff73506a03fb83/medicalai-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "426a854eb30ee069980dffa8a850f78a", "sha256": "e9e7975d731926002533cb4c8df3a6fc032f41a85e3f141ac882d48246df085d"}, "downloads": -1, "filename": "medicalai-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "426a854eb30ee069980dffa8a850f78a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <3.8", "size": 8212, "upload_time": "2020-03-28T17:38:51", "upload_time_iso_8601": "2020-03-28T17:38:51.163195Z", "url": "https://files.pythonhosted.org/packages/82/db/1912d2c037c412bedc24e4220f9a387a4e658bc34962fc885a78c5a76ffa/medicalai-1.0.2-py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "c9a71d2b4794b50035f3e94c9b2b216a", "sha256": "f8f45fba6a1881385cfe71847d2c4005784e8bd66ea796682e8428501ca71e3f"}, "downloads": -1, "filename": "medicalai-1.0.3.tar.gz", "has_sig": false, "md5_digest": "c9a71d2b4794b50035f3e94c9b2b216a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 9717, "upload_time": "2020-03-28T17:53:22", "upload_time_iso_8601": "2020-03-28T17:53:22.982641Z", "url": "https://files.pythonhosted.org/packages/50/63/adea65e10c1aaae102bd61a69582ce19e101dd3558ce2647dfc972a32c25/medicalai-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "3de24ff04b3d42cb722da0c27342674f", "sha256": "14dc1c12a5589c5b2ff2075f28e011fb0e07e726815893a91c507d6482abcdb4"}, "downloads": -1, "filename": "medicalai-1.0.4.tar.gz", "has_sig": false, "md5_digest": "3de24ff04b3d42cb722da0c27342674f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 9719, "upload_time": "2020-03-28T18:59:18", "upload_time_iso_8601": "2020-03-28T18:59:18.376177Z", "url": "https://files.pythonhosted.org/packages/29/4b/d87c762f0e12069244a115bf060dad326c7eef763a951d8d7b8b5c42bc9b/medicalai-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "8f2d092d8c8917fcd9e2c112984de515", "sha256": "f9a4ee4af274023c4abf7f0643157fc18d3965ac8158a5ff8522dd840883e17a"}, "downloads": -1, "filename": "medicalai-1.0.5.tar.gz", "has_sig": false, "md5_digest": "8f2d092d8c8917fcd9e2c112984de515", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 9702, "upload_time": "2020-03-30T19:08:45", "upload_time_iso_8601": "2020-03-30T19:08:45.019460Z", "url": "https://files.pythonhosted.org/packages/82/b0/5b445edccc0f2a37d2075f470917ac5d8fd9b3174470f17fbac3401045be/medicalai-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "a3236d8d6dcc777b4be77b2a78981003", "sha256": "497267e71e4ec23679c8f42e57843f409d87e353e312e559500a52f64d715f10"}, "downloads": -1, "filename": "medicalai-1.0.6.tar.gz", "has_sig": false, "md5_digest": "a3236d8d6dcc777b4be77b2a78981003", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 9712, "upload_time": "2020-03-30T19:15:20", "upload_time_iso_8601": "2020-03-30T19:15:20.862249Z", "url": "https://files.pythonhosted.org/packages/91/dc/6262d31bce3d63edacf5d59f4f7179a69306557368dc31bf396af37ced2a/medicalai-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "c5e1d5b146c73a2696f474a121a5e57f", "sha256": "a5cc4dfc818ed74d5cbb36109b52c1d91f89f7593befa61eb2abcacb4f85ff34"}, "downloads": -1, "filename": "medicalai-1.0.7.tar.gz", "has_sig": false, "md5_digest": "c5e1d5b146c73a2696f474a121a5e57f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 10735, "upload_time": "2020-03-31T19:00:11", "upload_time_iso_8601": "2020-03-31T19:00:11.222135Z", "url": "https://files.pythonhosted.org/packages/d3/a0/036d6ad664230a65820679a1364d7243200232db6d322aeed377e5b3bd0c/medicalai-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "b59ccf8df6cbb59cf7308806617ca4cf", "sha256": "753fb23cc6dc658cd1830d572393801e34a550bdd8b4c31424bf69caa1be3e45"}, "downloads": -1, "filename": "medicalai-1.0.8.tar.gz", "has_sig": false, "md5_digest": "b59ccf8df6cbb59cf7308806617ca4cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 10744, "upload_time": "2020-04-02T09:15:20", "upload_time_iso_8601": "2020-04-02T09:15:20.765572Z", "url": "https://files.pythonhosted.org/packages/0a/24/09cf43df555cac30b5911b45bdb3b89b85a9d63f3f58c4906da1d1a1a994/medicalai-1.0.8.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "559179de9a9c8f871064f2de46584272", "sha256": "1538404d215dfbc240e2fa499128720fa7fa5ab6addb0f66ca4249b949d6cddd"}, "downloads": -1, "filename": "medicalai-1.1.0.tar.gz", "has_sig": false, "md5_digest": "559179de9a9c8f871064f2de46584272", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 13294, "upload_time": "2020-04-13T21:03:29", "upload_time_iso_8601": "2020-04-13T21:03:29.499532Z", "url": "https://files.pythonhosted.org/packages/51/f5/df893b3d7c83ae4bd3f880497a1699ed50fa8bdb6922eebf83ba5104839e/medicalai-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "559179de9a9c8f871064f2de46584272", "sha256": "1538404d215dfbc240e2fa499128720fa7fa5ab6addb0f66ca4249b949d6cddd"}, "downloads": -1, "filename": "medicalai-1.1.0.tar.gz", "has_sig": false, "md5_digest": "559179de9a9c8f871064f2de46584272", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <3.8", "size": 13294, "upload_time": "2020-04-13T21:03:29", "upload_time_iso_8601": "2020-04-13T21:03:29.499532Z", "url": "https://files.pythonhosted.org/packages/51/f5/df893b3d7c83ae4bd3f880497a1699ed50fa8bdb6922eebf83ba5104839e/medicalai-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:34 2020"}