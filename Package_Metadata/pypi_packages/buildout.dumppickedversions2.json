{"info": {"author": "Jaap Roes", "author_email": "jaap@eight.nl", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers"], "description": "buildout.dumppickedversions2\n============================\n\n``buildout.dumppickedversions2`` is a simple buildout extension\nthat mimicks the features of ``buildout.dumppickedversions`` for\nbuildout version 2.0.1 or later.\n\nThe problem and it's solution\n-----------------------------\n\nAfter upgrading buildout to version 2 you'll notice that use of\n``buildout.dumppickedversions`` has been disabled. This has been\ndone because part of the features of ``buildout.dumppickedversions``\nhave been integrated into buildout.\n\nHowever the overwriting behavior of ``buildout.dumppickedversions``\nhas not been integrated. This extension monkey patches the built-in \nversion dumping so it behaves more like ``buildout.dumppickedversions``.\n\nAn added benefit is that the configuration options haven't been\nchanged. This means that upgrading you buildout file is a simple \naddition of the number two to ``extensions = buildout.dumppickedversions``.\n\n``buildout.dumppickedversions2`` requires zc.buildout 2.0.1 or later.\n\nbuildout.dumppickedversions2 options\n------------------------------------\n\ndump-picked-versions-file\n    A file name you want ``buildout.dumppickedversions`` to write to.\n    If not given ``buildout.dumppickedversions`` will dump the versions to the \n    screen. The latter behavior is now built into buildout and can be enabled\n    without an extension by setting ``show-picked-versions`` to ``true``.\n\noverwrite-picked-versions-file\n    If set to ``true``, ``buildout.dumppickedversions`` will overwrite the file \n    defined in ``dump-picked-versions-file`` if it exists. This value\n    defaults to True.\n\nDetailed Documentation\n======================\nLet's create an egg to use it in our tests::\n\n    >>> mkdir('myegg')\n    >>> write('myegg', 'setup.py',\n    ... '''\n    ... from distutils.core import setup\n    ... setup(name='myegg', version='1.0')\n    ... ''')\n    >>> write('myegg', 'README', '')\n    >>> print system(buildout + ' setup myegg bdist_egg')\n    Running setup script 'myegg/setup.py'.\n    ...\n\nCreate a buildout and use buildout.dumppickedversions2::\n\n    >>> write('buildout.cfg',\n    ... '''\n    ... [buildout]\n    ... extensions = buildout.dumppickedversions2\n    ... parts = myegg\n    ... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n    ...              %s\n    ... [myegg]\n    ... recipe = zc.recipe.egg\n    ... eggs = myegg\n    ... ''' % join('myegg', 'dist'))\n\nRunning the buildout will print information about picked versions::\n\n    >>> print system(join('bin', 'buildout'))\n    Develop distribution: buildout.dumppickedversions2 N.N\n    ...\n    Versions had to be automatically picked.\n    The following part definition lists the versions picked:\n    [versions]\n    myegg = N.N\n    setuptools = N.N\n    zc.recipe.egg = N.N\n    ...\n\nTo dump picked versions to a file, we just add an ``dump-picked-versions-file`` \noption and give a file name::\n    \n    >>> write('buildout.cfg',\n    ... '''\n    ... [buildout]\n    ... extensions = buildout.dumppickedversions2\n    ... dump-picked-versions-file = versions.cfg\n    ... parts = myegg\n    ... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n    ...              %s\n    ... [myegg]\n    ... recipe = zc.recipe.egg\n    ... eggs = myegg \n    ... ''' % join('myegg', 'dist'))\n    \n    >>> print system(buildout)\n    Develop distribution: buildout.dumppickedversions2 N.N\n    ...\n    Updating myegg.\n    Picked versions have been written to versions.cfg\n    ...\n\nAnd here is the content of the file versions.cfg::\n    \n    >>> cat('versions.cfg')\n    [versions]\n    myegg = N.N\n    setuptools = N.N\n    zc.recipe.egg = N.N\n\nNext time we run the buildout the file will be overwritten::\n\n    >>> print system(buildout)\n    Develop distribution: buildout.dumppickedversions2 N.N\n    ...\n    Picked versions have been written to versions.cfg\n    ...\n\n    >>> cat('versions.cfg')\n    [versions]\n    myegg = N.N\n    setuptools = N.N\n    zc.recipe.egg = N.N\n\nLet's create a new egg to use it in our tests, it will require\nanother egg::\n\n    >>> mkdir('theiregg')\n    >>> write('theiregg', 'setup.py',\n    ... '''\n    ... from distutils.core import setup\n    ... setup(name='theiregg', version='1.0', install_requires='myegg')\n    ... ''')\n    >>> write('theiregg', 'README', '')\n    >>> print system(buildout + ' setup theiregg bdist_egg')\n    Running setup script 'theiregg/setup.py'.\n    ...\n\nCreate a buildout that uses this new egg::\n\n    >>> write('buildout.cfg',\n    ... '''\n    ... [buildout]\n    ... extensions = buildout.dumppickedversions2\n    ... parts = theiregg\n    ... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n    ...              %s\n    ...              %s\n    ... [theiregg]\n    ... recipe = zc.recipe.egg\n    ... eggs = theiregg\n    ... ''' % (join('theiregg', 'dist'), join('myegg', 'dist')))\n\nRunning the buildout will print information about picked versions\nand who required them::\n\n    >>> print system(join('bin', 'buildout'))\n    Develop distribution: buildout.dumppickedversions2 N.N\n    ...\n    Versions had to be automatically picked.\n    The following part definition lists the versions picked:\n    [versions]\n    setuptools = N.N\n    theiregg = N.N\n    zc.recipe.egg = N.N\n    <BLANKLINE>\n    # Required by:\n    # theiregg==N.N\n    myegg = N.N\n    ...\n\nThis also works when writing to a file::\n\n    >>> write('buildout.cfg',\n    ... '''\n    ... [buildout]\n    ... extensions = buildout.dumppickedversions2\n    ... dump-picked-versions-file = versions.cfg\n    ... parts = theiregg\n    ... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n    ...              %s\n    ...              %s\n    ... [theiregg]\n    ... recipe = zc.recipe.egg\n    ... eggs = theiregg\n    ... ''' % (join('theiregg', 'dist'), join('myegg', 'dist')))\n\n    >>> print system(buildout)\n    Develop distribution: buildout.dumppickedversions2 N.N\n    ...\n    Updating theiregg.\n    Picked versions have been written to versions.cfg\n    ...\n\nAnd here is the content of the file versions.cfg::\n    \n    >>> cat('versions.cfg')\n    [versions]\n    setuptools = N.N\n    theiregg = N.N\n    zc.recipe.egg = N.N\n    <BLANKLINE>\n    # Required by:\n    # theiregg==N.N\n    myegg = N.N\n\nWhen we don't want to overwrite the file we just add an \n``overwrite-picked-versions-file`` and set it to false::\n\n    >>> write('buildout.cfg',\n    ... '''\n    ... [buildout]\n    ... extensions = buildout.dumppickedversions2\n    ... dump-picked-versions-file = versions.cfg\n    ... overwrite-picked-versions-file = false\n    ... parts = myegg\n    ... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n    ...              %s\n    ... [myegg]\n    ... recipe = zc.recipe.egg\n    ... eggs = myegg \n    ... ''' % join('myegg', 'dist'))\n    \n    >>> print system(buildout)\n    Develop distribution: buildout.dumppickedversions2 N.N\n    ...\n    Skipped: File versions.cfg already exists.\n    ...\n\n1.1 (2013-06-14)\n----------------\n\n- Uses the new pickedversions plugin API when it becomes available\n\n\n1.0.3 (2013-02-26)\n------------------\n\n- Now includes \"required by\" data\n\n\n1.0.2 (2013-02-22)\n------------------\n\n- Explicitly require buildout 2.0.1\n\n\n1.0.1 (2013-02-19)\n------------------\n\n- Fixed an issue with the namespace\n\n\n1.0 (2013-02-19)\n----------------\n\n- Initial version\n\nAuthor\n======\n\n- Jaap Roes\n\nThanks\n======\n\n- Mustapha Benali, Original author of buildout.dumppickedversions", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/eightmedia/buildout.dumppickedversions2", "keywords": "buildout extension dump picked versions", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "buildout.dumppickedversions2", "package_url": "https://pypi.org/project/buildout.dumppickedversions2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/buildout.dumppickedversions2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/eightmedia/buildout.dumppickedversions2"}, "release_url": "https://pypi.org/project/buildout.dumppickedversions2/1.1/", "requires_dist": null, "requires_python": null, "summary": "Dump buildout 2 picked versions.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"buildout-dumppickedversions2\">\n<h2>buildout.dumppickedversions2</h2>\n<p><tt>buildout.dumppickedversions2</tt> is a simple buildout extension\nthat mimicks the features of <tt>buildout.dumppickedversions</tt> for\nbuildout version 2.0.1 or later.</p>\n<div id=\"the-problem-and-it-s-solution\">\n<h3>The problem and it\u2019s solution</h3>\n<p>After upgrading buildout to version 2 you\u2019ll notice that use of\n<tt>buildout.dumppickedversions</tt> has been disabled. This has been\ndone because part of the features of <tt>buildout.dumppickedversions</tt>\nhave been integrated into buildout.</p>\n<p>However the overwriting behavior of <tt>buildout.dumppickedversions</tt>\nhas not been integrated. This extension monkey patches the built-in\nversion dumping so it behaves more like <tt>buildout.dumppickedversions</tt>.</p>\n<p>An added benefit is that the configuration options haven\u2019t been\nchanged. This means that upgrading you buildout file is a simple\naddition of the number two to <tt>extensions = buildout.dumppickedversions</tt>.</p>\n<p><tt>buildout.dumppickedversions2</tt> requires zc.buildout 2.0.1 or later.</p>\n</div>\n<div id=\"buildout-dumppickedversions2-options\">\n<h3>buildout.dumppickedversions2 options</h3>\n<dl>\n<dt>dump-picked-versions-file</dt>\n<dd>A file name you want <tt>buildout.dumppickedversions</tt> to write to.\nIf not given <tt>buildout.dumppickedversions</tt> will dump the versions to the\nscreen. The latter behavior is now built into buildout and can be enabled\nwithout an extension by setting <tt><span class=\"pre\">show-picked-versions</span></tt> to <tt>true</tt>.</dd>\n<dt>overwrite-picked-versions-file</dt>\n<dd>If set to <tt>true</tt>, <tt>buildout.dumppickedversions</tt> will overwrite the file\ndefined in <tt><span class=\"pre\">dump-picked-versions-file</span></tt> if it exists. This value\ndefaults to True.</dd>\n</dl>\n</div>\n</div>\n<div id=\"detailed-documentation\">\n<h2>Detailed Documentation</h2>\n<p>Let\u2019s create an egg to use it in our tests:</p>\n<pre>&gt;&gt;&gt; mkdir('myegg')\n&gt;&gt;&gt; write('myegg', 'setup.py',\n... '''\n... from distutils.core import setup\n... setup(name='myegg', version='1.0')\n... ''')\n&gt;&gt;&gt; write('myegg', 'README', '')\n&gt;&gt;&gt; print system(buildout + ' setup myegg bdist_egg')\nRunning setup script 'myegg/setup.py'.\n...\n</pre>\n<p>Create a buildout and use buildout.dumppickedversions2:</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... '''\n... [buildout]\n... extensions = buildout.dumppickedversions2\n... parts = myegg\n... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n...              %s\n... [myegg]\n... recipe = zc.recipe.egg\n... eggs = myegg\n... ''' % join('myegg', 'dist'))\n</pre>\n<p>Running the buildout will print information about picked versions:</p>\n<pre>&gt;&gt;&gt; print system(join('bin', 'buildout'))\nDevelop distribution: buildout.dumppickedversions2 N.N\n...\nVersions had to be automatically picked.\nThe following part definition lists the versions picked:\n[versions]\nmyegg = N.N\nsetuptools = N.N\nzc.recipe.egg = N.N\n...\n</pre>\n<p>To dump picked versions to a file, we just add an <tt><span class=\"pre\">dump-picked-versions-file</span></tt>\noption and give a file name:</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... '''\n... [buildout]\n... extensions = buildout.dumppickedversions2\n... dump-picked-versions-file = versions.cfg\n... parts = myegg\n... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n...              %s\n... [myegg]\n... recipe = zc.recipe.egg\n... eggs = myegg\n... ''' % join('myegg', 'dist'))\n\n&gt;&gt;&gt; print system(buildout)\nDevelop distribution: buildout.dumppickedversions2 N.N\n...\nUpdating myegg.\nPicked versions have been written to versions.cfg\n...\n</pre>\n<p>And here is the content of the file versions.cfg:</p>\n<pre>&gt;&gt;&gt; cat('versions.cfg')\n[versions]\nmyegg = N.N\nsetuptools = N.N\nzc.recipe.egg = N.N\n</pre>\n<p>Next time we run the buildout the file will be overwritten:</p>\n<pre>&gt;&gt;&gt; print system(buildout)\nDevelop distribution: buildout.dumppickedversions2 N.N\n...\nPicked versions have been written to versions.cfg\n...\n\n&gt;&gt;&gt; cat('versions.cfg')\n[versions]\nmyegg = N.N\nsetuptools = N.N\nzc.recipe.egg = N.N\n</pre>\n<p>Let\u2019s create a new egg to use it in our tests, it will require\nanother egg:</p>\n<pre>&gt;&gt;&gt; mkdir('theiregg')\n&gt;&gt;&gt; write('theiregg', 'setup.py',\n... '''\n... from distutils.core import setup\n... setup(name='theiregg', version='1.0', install_requires='myegg')\n... ''')\n&gt;&gt;&gt; write('theiregg', 'README', '')\n&gt;&gt;&gt; print system(buildout + ' setup theiregg bdist_egg')\nRunning setup script 'theiregg/setup.py'.\n...\n</pre>\n<p>Create a buildout that uses this new egg:</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... '''\n... [buildout]\n... extensions = buildout.dumppickedversions2\n... parts = theiregg\n... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n...              %s\n...              %s\n... [theiregg]\n... recipe = zc.recipe.egg\n... eggs = theiregg\n... ''' % (join('theiregg', 'dist'), join('myegg', 'dist')))\n</pre>\n<p>Running the buildout will print information about picked versions\nand who required them:</p>\n<pre>&gt;&gt;&gt; print system(join('bin', 'buildout'))\nDevelop distribution: buildout.dumppickedversions2 N.N\n...\nVersions had to be automatically picked.\nThe following part definition lists the versions picked:\n[versions]\nsetuptools = N.N\ntheiregg = N.N\nzc.recipe.egg = N.N\n&lt;BLANKLINE&gt;\n# Required by:\n# theiregg==N.N\nmyegg = N.N\n...\n</pre>\n<p>This also works when writing to a file:</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... '''\n... [buildout]\n... extensions = buildout.dumppickedversions2\n... dump-picked-versions-file = versions.cfg\n... parts = theiregg\n... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n...              %s\n...              %s\n... [theiregg]\n... recipe = zc.recipe.egg\n... eggs = theiregg\n... ''' % (join('theiregg', 'dist'), join('myegg', 'dist')))\n\n&gt;&gt;&gt; print system(buildout)\nDevelop distribution: buildout.dumppickedversions2 N.N\n...\nUpdating theiregg.\nPicked versions have been written to versions.cfg\n...\n</pre>\n<p>And here is the content of the file versions.cfg:</p>\n<pre>&gt;&gt;&gt; cat('versions.cfg')\n[versions]\nsetuptools = N.N\ntheiregg = N.N\nzc.recipe.egg = N.N\n&lt;BLANKLINE&gt;\n# Required by:\n# theiregg==N.N\nmyegg = N.N\n</pre>\n<p>When we don\u2019t want to overwrite the file we just add an\n<tt><span class=\"pre\">overwrite-picked-versions-file</span></tt> and set it to false:</p>\n<pre>&gt;&gt;&gt; write('buildout.cfg',\n... '''\n... [buildout]\n... extensions = buildout.dumppickedversions2\n... dump-picked-versions-file = versions.cfg\n... overwrite-picked-versions-file = false\n... parts = myegg\n... find-links = https://pypi.python.org/simple/zc.recipe.egg/\n...              %s\n... [myegg]\n... recipe = zc.recipe.egg\n... eggs = myegg\n... ''' % join('myegg', 'dist'))\n\n&gt;&gt;&gt; print system(buildout)\nDevelop distribution: buildout.dumppickedversions2 N.N\n...\nSkipped: File versions.cfg already exists.\n...\n</pre>\n<div id=\"id1\">\n<h3>1.1 (2013-06-14)</h3>\n<ul>\n<li>Uses the new pickedversions plugin API when it becomes available</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.3 (2013-02-26)</h3>\n<ul>\n<li>Now includes \u201crequired by\u201d data</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.0.2 (2013-02-22)</h3>\n<ul>\n<li>Explicitly require buildout 2.0.1</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.0.1 (2013-02-19)</h3>\n<ul>\n<li>Fixed an issue with the namespace</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.0 (2013-02-19)</h3>\n<ul>\n<li>Initial version</li>\n</ul>\n</div>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<ul>\n<li>Jaap Roes</li>\n</ul>\n</div>\n<div id=\"thanks\">\n<h2>Thanks</h2>\n<ul>\n<li>Mustapha Benali, Original author of buildout.dumppickedversions</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 770847, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "005293771a26058e13fa6eadd9ef2bba", "sha256": "a2ec7cdfef6cc8d6cdfb78a4269c51f4188f08bde0128506760484d027892818"}, "downloads": -1, "filename": "buildout.dumppickedversions2-1.0.zip", "has_sig": false, "md5_digest": "005293771a26058e13fa6eadd9ef2bba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11426, "upload_time": "2013-02-19T18:27:58", "upload_time_iso_8601": "2013-02-19T18:27:58.402888Z", "url": "https://files.pythonhosted.org/packages/ca/02/54d43aa009cf4d9d06fd1900065b008e3321444240def3fc10052aaa21cb/buildout.dumppickedversions2-1.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "163669590904587e807ef1ec95013dbd", "sha256": "3b09a0b7bbc2b661a92e0f826b1ace69576ebdfd426be045e5e56cbe472c5ebe"}, "downloads": -1, "filename": "buildout.dumppickedversions2-1.0.1.zip", "has_sig": false, "md5_digest": "163669590904587e807ef1ec95013dbd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11588, "upload_time": "2013-02-19T19:05:28", "upload_time_iso_8601": "2013-02-19T19:05:28.399367Z", "url": "https://files.pythonhosted.org/packages/66/7a/9dbc9bc78d5dc450bba6982408608b86b37e6a0ed24e02c76b5e6a63637e/buildout.dumppickedversions2-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "4f255c72ebde9dd918783b75df5e3818", "sha256": "3a1f60e385d65329507f90f81486682214872ab453df3aad957121987a40b7f4"}, "downloads": -1, "filename": "buildout.dumppickedversions2-1.0.2.zip", "has_sig": false, "md5_digest": "4f255c72ebde9dd918783b75df5e3818", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14613, "upload_time": "2013-02-22T10:28:22", "upload_time_iso_8601": "2013-02-22T10:28:22.545379Z", "url": "https://files.pythonhosted.org/packages/9d/23/a313400cd4faf18dfa6594a58235ccbba1d944ccb2d666f0e86a6557b483/buildout.dumppickedversions2-1.0.2.zip", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "280fbf9b00573f2c18d21cc337df34f5", "sha256": "8287fbb391ced1a70c9b3e947408ccc0975864effbb1d5991daab561cd437073"}, "downloads": -1, "filename": "buildout.dumppickedversions2-1.0.3.zip", "has_sig": false, "md5_digest": "280fbf9b00573f2c18d21cc337df34f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15406, "upload_time": "2013-02-26T15:12:34", "upload_time_iso_8601": "2013-02-26T15:12:34.765867Z", "url": "https://files.pythonhosted.org/packages/b0/15/89994463155f1e9d89c39c8f03c49bae13854b5d42b6d7ffd282fba9ab93/buildout.dumppickedversions2-1.0.3.zip", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "f52693a57c9ce84a70d5c29d75c2f5bf", "sha256": "ff8006fbfe016b92fe31cd669f45948ec75e065b7596a20ebaebeff9cb93187d"}, "downloads": -1, "filename": "buildout.dumppickedversions2-1.1.zip", "has_sig": false, "md5_digest": "f52693a57c9ce84a70d5c29d75c2f5bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15743, "upload_time": "2013-06-14T10:23:35", "upload_time_iso_8601": "2013-06-14T10:23:35.399268Z", "url": "https://files.pythonhosted.org/packages/8f/c6/dd65c2c9f0b680db164307ea4014553d9de914381c1f6fb5b4eeecdf34a8/buildout.dumppickedversions2-1.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f52693a57c9ce84a70d5c29d75c2f5bf", "sha256": "ff8006fbfe016b92fe31cd669f45948ec75e065b7596a20ebaebeff9cb93187d"}, "downloads": -1, "filename": "buildout.dumppickedversions2-1.1.zip", "has_sig": false, "md5_digest": "f52693a57c9ce84a70d5c29d75c2f5bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15743, "upload_time": "2013-06-14T10:23:35", "upload_time_iso_8601": "2013-06-14T10:23:35.399268Z", "url": "https://files.pythonhosted.org/packages/8f/c6/dd65c2c9f0b680db164307ea4014553d9de914381c1f6fb5b4eeecdf34a8/buildout.dumppickedversions2-1.1.zip", "yanked": false}], "timestamp": "Thu May  7 22:36:02 2020"}