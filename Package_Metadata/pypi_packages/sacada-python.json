{"info": {"author": "Pedro Henrique Capp Kopper", "author_email": "pedro.kopper@ufrgs.br", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: Portuguese (Brazilian)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "# sacada-python\n\nA biblioteca em Python do SACADA permite que sejam desenvolvidas aplica\u00e7\u00f5es cient\u00edficas de maneira amig\u00e1vel e abstra\u00edda. \n\n---\n\n# Instala\u00e7\u00e3o\n\nA biblioteca, junto com o comando `sacada` pode ser instalada globalmente com o comando\n```\nsudo pip3 install -U sacada-python\n```\n\nCaso deseje instalar apenas localmente, ou se n\u00e3o tiver acesso ao sudo, instale utilizando \n```\npip3 install --user -U sacada-python\n```\nTome cuidado que, neste caso, o comando `sacada` ficar\u00e1 dispon\u00edvel apenas em `~/.local/bin`, que dever\u00e1 estar no seu `PATH`.\n\n---\n\n# Uso\n\n## Biblioteca\n\n[TODO] Escrever c\u00f3digos de [exemplo.](/Exemplos)\n\n```python\nfrom sacada import SACADA\n\ns = SACADA(\"/dev/ttyACM0\")\n\n# Imprime a tens\u00e3o do canal A0 na tela\nprint(s.readVoltage(\"A0\"))\n```\n\n## Comando\n\nO comando `sacada` permite a interface com a placa via terminal. Ele faz uso de uma interface serial, ent\u00e3o \u00e9 importante que voc\u00ea tenha as permiss\u00f5es corretas para acesso. Caso voc\u00ea esteja tendo erros de permiss\u00e3o, tente se colocar no grupo `dialout` utilizando o comando `sudo usermod -aG dialout [seu usuario]` e relogue no seu computador.\n\nPara testar a comunica\u00e7\u00e3o, voc\u00ea pode utilizar o comando `sacada show`, que deve retornar a string de identifica\u00e7\u00e3o da placa que voc\u00ea est\u00e1 utilizando. Para especificar uma porta, voc\u00ea pode utilizar o par\u00e2metro `--port [sua porta]`. Por padr\u00e3o, a porta utilizada \u00e9 a `/dev/ttyACM0`. \u00c9 importante frisar que a SACADA possui **duas** portas seriais, e que a utilizada para comunica\u00e7\u00e3o \u00e9 **sempre a de n\u00famero menor**.\n\n**Exemplos:**\n```\n[tropos@cta-001 ~]$ sacada show\nblazing.design/UFRGS,SACADA Mini,0,rev1\n```\n\n```\n[tropos@cta-001 ~]$ sacada --port /dev/ttyACM123 show\nblazing.design/UFRGS,SACADA Mini,0,rev1\n```\n\n**O par\u00e2metro --port deve ser sempre o primeiro do comando**\n\nPara medir um canal \u00fanico, voc\u00ea pode utilizar o comando `read`:\n\n**Exemplo:**\n```\n[tropos@cta-001 ~]$ sacada read A0\n3.29312515258789\n```\n\nCaso voc\u00ea deseje monitorar um canal continuamente, pode utilizar o comando `monitor`. Voc\u00ea tamb\u00e9m pode especificar um arquivo para salvar os dados utilizando o par\u00e2metro `--save`. O intervalo de amostragem pode ser especificado (em milisegundos) com o par\u00e2metro `--interval`.\n\n**Exemplos:**\n```\n# Monitora o canal A0 com o intervalo padr\u00e3o de 1000ms\n\n[tropos@cta-001 ~]$ sacada monitor A0\n3.29312515258789\n3.29187512397766\n3.29175019264221\n...\n```\n\n```\n# Monitora o canal A0 com intervalo de 100ms\n\n[tropos@cta-001 ~]$ sacada monitor A0 --interval 100\n3.29287505149841\n3.28575015068054\n3.28275012969971\n...\n```\n\n```\n# Salva no arquivo ~/logs/out.log as amostras lidas\n\n[tropos@cta-001 ~]$ sacada monitor A0 --save ~/logs/out.log\n3.29275012016296\n3.29187512397766\n3.29212522506714\n...\n```\n\n**Os valores lidos e monitorados sempre ser\u00e3o dados em Volts**\n\n---\n\n# Licen\u00e7a\n\nEste programa \u00e9 um software livre; voc\u00ea pode redistribu\u00ed-lo e/ou\nmodific\u00e1-lo sob os termos da Licen\u00e7a P\u00fablica Geral GNU como publicada\npela Free Software Foundation; na vers\u00e3o 3 da Licen\u00e7a, ou\n(a seu crit\u00e9rio) qualquer vers\u00e3o posterior.\n\nEste programa \u00e9 distribu\u00eddo na esperan\u00e7a de que possa ser \u00fatil,\nmas SEM NENHUMA GARANTIA; sem uma garantia impl\u00edcita de ADEQUA\u00c7\u00c3O\na qualquer MERCADO ou APLICA\u00c7\u00c3O EM PARTICULAR. Veja a\nLicen\u00e7a P\u00fablica Geral GNU para mais detalhes.\n\nUma c\u00f3pia da licen\u00e7a (em ingl\u00eas) est\u00e1 dispon\u00edvel no arquivo [LICENSE](/LICENSE).\n\n---\n\nThis program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nThis program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.\n\nA copy of this license is provided in the [LICENSE](/LICENSE) file.\n\n---\n\nCopyright 2019 Pedro Henrique Capp Kopper.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.cta.if.ufrgs.br/SACADA/sacada-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "sacada-python", "package_url": "https://pypi.org/project/sacada-python/", "platform": "", "project_url": "https://pypi.org/project/sacada-python/", "project_urls": {"Homepage": "https://git.cta.if.ufrgs.br/SACADA/sacada-python"}, "release_url": "https://pypi.org/project/sacada-python/0.0.7/", "requires_dist": ["pyserial", "tqdm", "click", "thermocouples-reference", "scipy"], "requires_python": ">=3.5", "summary": "Python API for the SACADA data acquisition system", "version": "0.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sacada-python</h1>\n<p>A biblioteca em Python do SACADA permite que sejam desenvolvidas aplica\u00e7\u00f5es cient\u00edficas de maneira amig\u00e1vel e abstra\u00edda.</p>\n<hr>\n<h1>Instala\u00e7\u00e3o</h1>\n<p>A biblioteca, junto com o comando <code>sacada</code> pode ser instalada globalmente com o comando</p>\n<pre><code>sudo pip3 install -U sacada-python\n</code></pre>\n<p>Caso deseje instalar apenas localmente, ou se n\u00e3o tiver acesso ao sudo, instale utilizando</p>\n<pre><code>pip3 install --user -U sacada-python\n</code></pre>\n<p>Tome cuidado que, neste caso, o comando <code>sacada</code> ficar\u00e1 dispon\u00edvel apenas em <code>~/.local/bin</code>, que dever\u00e1 estar no seu <code>PATH</code>.</p>\n<hr>\n<h1>Uso</h1>\n<h2>Biblioteca</h2>\n<p>[TODO] Escrever c\u00f3digos de <a href=\"/Exemplos\" rel=\"nofollow\">exemplo.</a></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sacada</span> <span class=\"kn\">import</span> <span class=\"n\">SACADA</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">SACADA</span><span class=\"p\">(</span><span class=\"s2\">\"/dev/ttyACM0\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Imprime a tens\u00e3o do canal A0 na tela</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">readVoltage</span><span class=\"p\">(</span><span class=\"s2\">\"A0\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Comando</h2>\n<p>O comando <code>sacada</code> permite a interface com a placa via terminal. Ele faz uso de uma interface serial, ent\u00e3o \u00e9 importante que voc\u00ea tenha as permiss\u00f5es corretas para acesso. Caso voc\u00ea esteja tendo erros de permiss\u00e3o, tente se colocar no grupo <code>dialout</code> utilizando o comando <code>sudo usermod -aG dialout [seu usuario]</code> e relogue no seu computador.</p>\n<p>Para testar a comunica\u00e7\u00e3o, voc\u00ea pode utilizar o comando <code>sacada show</code>, que deve retornar a string de identifica\u00e7\u00e3o da placa que voc\u00ea est\u00e1 utilizando. Para especificar uma porta, voc\u00ea pode utilizar o par\u00e2metro <code>--port [sua porta]</code>. Por padr\u00e3o, a porta utilizada \u00e9 a <code>/dev/ttyACM0</code>. \u00c9 importante frisar que a SACADA possui <strong>duas</strong> portas seriais, e que a utilizada para comunica\u00e7\u00e3o \u00e9 <strong>sempre a de n\u00famero menor</strong>.</p>\n<p><strong>Exemplos:</strong></p>\n<pre><code>[tropos@cta-001 ~]$ sacada show\nblazing.design/UFRGS,SACADA Mini,0,rev1\n</code></pre>\n<pre><code>[tropos@cta-001 ~]$ sacada --port /dev/ttyACM123 show\nblazing.design/UFRGS,SACADA Mini,0,rev1\n</code></pre>\n<p><strong>O par\u00e2metro --port deve ser sempre o primeiro do comando</strong></p>\n<p>Para medir um canal \u00fanico, voc\u00ea pode utilizar o comando <code>read</code>:</p>\n<p><strong>Exemplo:</strong></p>\n<pre><code>[tropos@cta-001 ~]$ sacada read A0\n3.29312515258789\n</code></pre>\n<p>Caso voc\u00ea deseje monitorar um canal continuamente, pode utilizar o comando <code>monitor</code>. Voc\u00ea tamb\u00e9m pode especificar um arquivo para salvar os dados utilizando o par\u00e2metro <code>--save</code>. O intervalo de amostragem pode ser especificado (em milisegundos) com o par\u00e2metro <code>--interval</code>.</p>\n<p><strong>Exemplos:</strong></p>\n<pre><code># Monitora o canal A0 com o intervalo padr\u00e3o de 1000ms\n\n[tropos@cta-001 ~]$ sacada monitor A0\n3.29312515258789\n3.29187512397766\n3.29175019264221\n...\n</code></pre>\n<pre><code># Monitora o canal A0 com intervalo de 100ms\n\n[tropos@cta-001 ~]$ sacada monitor A0 --interval 100\n3.29287505149841\n3.28575015068054\n3.28275012969971\n...\n</code></pre>\n<pre><code># Salva no arquivo ~/logs/out.log as amostras lidas\n\n[tropos@cta-001 ~]$ sacada monitor A0 --save ~/logs/out.log\n3.29275012016296\n3.29187512397766\n3.29212522506714\n...\n</code></pre>\n<p><strong>Os valores lidos e monitorados sempre ser\u00e3o dados em Volts</strong></p>\n<hr>\n<h1>Licen\u00e7a</h1>\n<p>Este programa \u00e9 um software livre; voc\u00ea pode redistribu\u00ed-lo e/ou\nmodific\u00e1-lo sob os termos da Licen\u00e7a P\u00fablica Geral GNU como publicada\npela Free Software Foundation; na vers\u00e3o 3 da Licen\u00e7a, ou\n(a seu crit\u00e9rio) qualquer vers\u00e3o posterior.</p>\n<p>Este programa \u00e9 distribu\u00eddo na esperan\u00e7a de que possa ser \u00fatil,\nmas SEM NENHUMA GARANTIA; sem uma garantia impl\u00edcita de ADEQUA\u00c7\u00c3O\na qualquer MERCADO ou APLICA\u00c7\u00c3O EM PARTICULAR. Veja a\nLicen\u00e7a P\u00fablica Geral GNU para mais detalhes.</p>\n<p>Uma c\u00f3pia da licen\u00e7a (em ingl\u00eas) est\u00e1 dispon\u00edvel no arquivo <a href=\"/LICENSE\" rel=\"nofollow\">LICENSE</a>.</p>\n<hr>\n<p>This program is free software: you can redistribute it and/or modify\nit under the terms of the GNU General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.</p>\n<p>This program is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU General Public License for more details.</p>\n<p>A copy of this license is provided in the <a href=\"/LICENSE\" rel=\"nofollow\">LICENSE</a> file.</p>\n<hr>\n<p>Copyright 2019 Pedro Henrique Capp Kopper.</p>\n\n          </div>"}, "last_serial": 6081215, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "543cb8732e64ab3585ae047a84353d90", "sha256": "3116fff34101aa11090e937336eac8e06999364098c48b3794f07b270a9c523b"}, "downloads": -1, "filename": "sacada_python-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "543cb8732e64ab3585ae047a84353d90", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20785, "upload_time": "2019-10-01T16:56:56", "upload_time_iso_8601": "2019-10-01T16:56:56.788919Z", "url": "https://files.pythonhosted.org/packages/a6/6f/d6dba5d877d61b0dfa4c96e3a5d2430c7fec2173b3886e73afdae2f61413/sacada_python-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4311e6a764506b0e86d149634eb660b6", "sha256": "61841f413bd912cc50cc2ebb82e96ca334bfea0567f452502a3454cde29d5d2a"}, "downloads": -1, "filename": "sacada-python-0.0.3.tar.gz", "has_sig": false, "md5_digest": "4311e6a764506b0e86d149634eb660b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7749, "upload_time": "2019-10-01T16:56:59", "upload_time_iso_8601": "2019-10-01T16:56:59.761819Z", "url": "https://files.pythonhosted.org/packages/40/a9/47bcc3cdc6229cec51a89443096166409c8e95aa1da8c70fc52940e414b6/sacada-python-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "dea4047c4acce9cfefbdf00e460c0040", "sha256": "23256b8e2e56058ab7756f49281d9818058aea533ebecc7e52caf11fa2585a23"}, "downloads": -1, "filename": "sacada_python-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "dea4047c4acce9cfefbdf00e460c0040", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20785, "upload_time": "2019-10-01T17:00:33", "upload_time_iso_8601": "2019-10-01T17:00:33.438778Z", "url": "https://files.pythonhosted.org/packages/8e/aa/a9cf2772efe22f2612dc7d3d495c4caf8d4cd9fcfab74e6ac88f14b61b5a/sacada_python-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54c569f0203f9b6d3a0c3d09ebe71838", "sha256": "bbf7dcf521635cb141aff134a1748f1087f53686b17c11dddb273287c0351d72"}, "downloads": -1, "filename": "sacada-python-0.0.4.tar.gz", "has_sig": false, "md5_digest": "54c569f0203f9b6d3a0c3d09ebe71838", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7745, "upload_time": "2019-10-01T17:00:35", "upload_time_iso_8601": "2019-10-01T17:00:35.343853Z", "url": "https://files.pythonhosted.org/packages/61/8c/92ae8d9a07d0a8e09a346f20ab96e9ec363f6b2b8623c2080133a3a726ee/sacada-python-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "63ed725b6487cc66e6661e817cc9ad1d", "sha256": "90bf83b4f5237ffdbb28cb685ca4a6aa7ba321814e38f8cdec30d5f6ba04b6ce"}, "downloads": -1, "filename": "sacada_python-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "63ed725b6487cc66e6661e817cc9ad1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21892, "upload_time": "2019-10-02T02:19:49", "upload_time_iso_8601": "2019-10-02T02:19:49.962382Z", "url": "https://files.pythonhosted.org/packages/3b/7f/46ef75dc242e0e5a2272f16015a196321cc7d412cae3feb854929cccd1d6/sacada_python-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e668deb9221c5ba0d5811e9e4853ab88", "sha256": "b81d6b6e8cdf926be11e54898bef42ae7961b886af10cc4bcc0f1375022066f6"}, "downloads": -1, "filename": "sacada-python-0.0.5.tar.gz", "has_sig": false, "md5_digest": "e668deb9221c5ba0d5811e9e4853ab88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9717, "upload_time": "2019-10-02T02:19:52", "upload_time_iso_8601": "2019-10-02T02:19:52.016274Z", "url": "https://files.pythonhosted.org/packages/76/38/755e8ddf5c28fb4491f0fa7f88c3c869d79502898faf586b12169e9d86ae/sacada-python-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "0c9b4250f7065779748bd053055f3d65", "sha256": "3e8602a8fca93c0976e91deb678f53eaebdef54c924cb0692260e4ba8176a808"}, "downloads": -1, "filename": "sacada_python-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "0c9b4250f7065779748bd053055f3d65", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17506, "upload_time": "2019-10-02T18:34:58", "upload_time_iso_8601": "2019-10-02T18:34:58.390662Z", "url": "https://files.pythonhosted.org/packages/64/d6/1ad1d8b6186ec07e3ce312da2ed33cb22659d8509246b1c3b0c6b9f2a70c/sacada_python-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63f96d1a96c4c2a9da9b8ad3bf172590", "sha256": "be8e1e997bb5ec9f445ab0a357dcb15a1c613c2c9ff8a8aea0ad363713b3680a"}, "downloads": -1, "filename": "sacada-python-0.0.6.tar.gz", "has_sig": false, "md5_digest": "63f96d1a96c4c2a9da9b8ad3bf172590", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4930, "upload_time": "2019-10-02T18:35:01", "upload_time_iso_8601": "2019-10-02T18:35:01.110835Z", "url": "https://files.pythonhosted.org/packages/53/79/8b8095f19e660149998c410cf89145315421b5cb2186da3dfda806fa65f6/sacada-python-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "93bacd22c572556afc12e5da125a642f", "sha256": "44093858c73c1f00a9d6ba040104a7649ad1a8e029bb008562dacdf36970122a"}, "downloads": -1, "filename": "sacada_python-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "93bacd22c572556afc12e5da125a642f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17506, "upload_time": "2019-11-05T14:47:49", "upload_time_iso_8601": "2019-11-05T14:47:49.906460Z", "url": "https://files.pythonhosted.org/packages/2a/79/15164d7fda18c633306a7bb1d5c3080c9dc8a0a123fb2b228eafdf0bd0f7/sacada_python-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "958bb3621290a699ab1d6f352d2dcf69", "sha256": "d69d6980bbd0190c844bbed80f24b8836cc8c05abd5475e2f90b49b68e44cf6f"}, "downloads": -1, "filename": "sacada-python-0.0.7.tar.gz", "has_sig": false, "md5_digest": "958bb3621290a699ab1d6f352d2dcf69", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4933, "upload_time": "2019-11-05T14:47:51", "upload_time_iso_8601": "2019-11-05T14:47:51.862786Z", "url": "https://files.pythonhosted.org/packages/1b/c2/aa1ff98fbbe0fdd3bba025db6ecaf950979f43fbce25996f38c80f4dec86/sacada-python-0.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "93bacd22c572556afc12e5da125a642f", "sha256": "44093858c73c1f00a9d6ba040104a7649ad1a8e029bb008562dacdf36970122a"}, "downloads": -1, "filename": "sacada_python-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "93bacd22c572556afc12e5da125a642f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17506, "upload_time": "2019-11-05T14:47:49", "upload_time_iso_8601": "2019-11-05T14:47:49.906460Z", "url": "https://files.pythonhosted.org/packages/2a/79/15164d7fda18c633306a7bb1d5c3080c9dc8a0a123fb2b228eafdf0bd0f7/sacada_python-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "958bb3621290a699ab1d6f352d2dcf69", "sha256": "d69d6980bbd0190c844bbed80f24b8836cc8c05abd5475e2f90b49b68e44cf6f"}, "downloads": -1, "filename": "sacada-python-0.0.7.tar.gz", "has_sig": false, "md5_digest": "958bb3621290a699ab1d6f352d2dcf69", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4933, "upload_time": "2019-11-05T14:47:51", "upload_time_iso_8601": "2019-11-05T14:47:51.862786Z", "url": "https://files.pythonhosted.org/packages/1b/c2/aa1ff98fbbe0fdd3bba025db6ecaf950979f43fbce25996f38c80f4dec86/sacada-python-0.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:29 2020"}