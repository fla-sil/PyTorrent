{"info": {"author": "James Westby", "author_email": "james.westby@linaro.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Plugins", "Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Topic :: Software Development :: Testing"], "description": "testr recipe\r\n============\r\n\r\nThis allows you to easily add a testrepository script to your buildout\r\nproject. This really only means that the user doesn't have to have\r\ntestr on their path, and they can just use ./bin/test or simlar.\r\n\r\nThis works very similarly to zc.recipe.testrunner, and in fact borrows\r\nmost of its code from there.\r\n\r\nA sample buildout configuration would be::\r\n\r\n[buildout]\r\ndevelop = .\r\nparts = test\r\n\r\n[test]\r\nrecipe = testr_recipe\r\nscript = test\r\n\r\nwhich will have ./bin/test run using the .testr.conf in your root\r\ndir.\r\n\r\nThese are the options you can use:\r\n\r\n  * script: define the name of the script to create, if not passed\r\n    then the name of the section will be used.\r\n  * working-directory: if somewhere other than the root of the project\r\n    should be used.\r\n  * environment: the name of a section containing pairs of values to\r\n    put in the environment for the test run, e.g.\r\n\r\n    ::\r\n\r\n    [test]\r\n    recipe = testr_recipe\r\n    enironment = testenv\r\n\r\n    [testenv]\r\n    foo = bar\r\n    zap = zang\r\n\r\n  * initialization: a string containing python code to put in the test\r\n    script before testr is run.\r\n  * executable: the python executable to put in the #! of the script.\r\n  * defaults: a list of options to prepend sys.argv for testr.\r\n    These are specified as Python source for an expression yielding a list,\r\n    typically a list literal. One thing you can do with this is::\r\n\r\n    [buildout]\r\n    parts = test testr\r\n\r\n    [testr]\r\n    recipe = testr_recipe\r\n\r\n    [test]\r\n    recipe = testr_recipe\r\n    defaults = [\"run\"]\r\n\r\n    which will make ./bin/test run the tests, and allow you to use\r\n    ./bin/testr to access all the features of testr.\r\n\r\nCreating the .testr.conf automatically\r\n--------------------------------------\r\n\r\nGiven that buildout knows most things about your project you can\r\nhave it create the .testr.conf for you.\r\n\r\n[testr]\r\nrecipe = testr_recipe\r\ntest-packages = mypackage\r\ninterpreter = python\r\n\r\nFuture enhancments:\r\n\r\n  * Maybe automatically doing \"testr init\" when setting up the project, so that\r\n    ./bin/test works straight away.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://launchpad.net/testr-recipe", "keywords": "testing testrepository testr buildout recipe", "license": "ZPL", "maintainer": "", "maintainer_email": "", "name": "testr_recipe", "package_url": "https://pypi.org/project/testr_recipe/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/testr_recipe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://launchpad.net/testr-recipe"}, "release_url": "https://pypi.org/project/testr_recipe/0.3/", "requires_dist": null, "requires_python": null, "summary": "buildout recipe to create scripts to run testrepository.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            testr recipe\n<br>============\n<br>\n<br>This allows you to easily add a testrepository script to your buildout\n<br>project. This really only means that the user doesn't have to have\n<br>testr on their path, and they can just use ./bin/test or simlar.\n<br>\n<br>This works very similarly to zc.recipe.testrunner, and in fact borrows\n<br>most of its code from there.\n<br>\n<br>A sample buildout configuration would be::\n<br>\n<br>[buildout]\n<br>develop = .\n<br>parts = test\n<br>\n<br>[test]\n<br>recipe = testr_recipe\n<br>script = test\n<br>\n<br>which will have ./bin/test run using the .testr.conf in your root\n<br>dir.\n<br>\n<br>These are the options you can use:\n<br>\n<br>  * script: define the name of the script to create, if not passed\n<br>    then the name of the section will be used.\n<br>  * working-directory: if somewhere other than the root of the project\n<br>    should be used.\n<br>  * environment: the name of a section containing pairs of values to\n<br>    put in the environment for the test run, e.g.\n<br>\n<br>    ::\n<br>\n<br>    [test]\n<br>    recipe = testr_recipe\n<br>    enironment = testenv\n<br>\n<br>    [testenv]\n<br>    foo = bar\n<br>    zap = zang\n<br>\n<br>  * initialization: a string containing python code to put in the test\n<br>    script before testr is run.\n<br>  * executable: the python executable to put in the #! of the script.\n<br>  * defaults: a list of options to prepend sys.argv for testr.\n<br>    These are specified as Python source for an expression yielding a list,\n<br>    typically a list literal. One thing you can do with this is::\n<br>\n<br>    [buildout]\n<br>    parts = test testr\n<br>\n<br>    [testr]\n<br>    recipe = testr_recipe\n<br>\n<br>    [test]\n<br>    recipe = testr_recipe\n<br>    defaults = [\"run\"]\n<br>\n<br>    which will make ./bin/test run the tests, and allow you to use\n<br>    ./bin/testr to access all the features of testr.\n<br>\n<br>Creating the .testr.conf automatically\n<br>--------------------------------------\n<br>\n<br>Given that buildout knows most things about your project you can\n<br>have it create the .testr.conf for you.\n<br>\n<br>[testr]\n<br>recipe = testr_recipe\n<br>test-packages = mypackage\n<br>interpreter = python\n<br>\n<br>Future enhancments:\n<br>\n<br>  * Maybe automatically doing \"testr init\" when setting up the project, so that\n<br>    ./bin/test works straight away.\n          </div>"}, "last_serial": 286057, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "aaccca6eeb35db4664bdbc65cc72e29a", "sha256": "da55edb6acafc1e0bfec90bb9ab859945e926be758202ef3ac7149160dc8437b"}, "downloads": -1, "filename": "testr_recipe-0.1-py2.6.egg", "has_sig": true, "md5_digest": "aaccca6eeb35db4664bdbc65cc72e29a", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 5276, "upload_time": "2010-07-15T23:02:15", "upload_time_iso_8601": "2010-07-15T23:02:15.729556Z", "url": "https://files.pythonhosted.org/packages/19/a8/c39ddfebd0a8d7281226576824e1ce72556330a02d5ba3df8ec53220bfbf/testr_recipe-0.1-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1863bc505c084fff73ad8a32433454c3", "sha256": "e44b50d94632cbbf4d7da2bb90804e5458483ab4a56182e83b734fd0dd0c2a13"}, "downloads": -1, "filename": "testr_recipe-0.1.tar.gz", "has_sig": true, "md5_digest": "1863bc505c084fff73ad8a32433454c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3625, "upload_time": "2010-07-15T23:01:54", "upload_time_iso_8601": "2010-07-15T23:01:54.012392Z", "url": "https://files.pythonhosted.org/packages/f9/14/826615b78215dacffc5a90425a2c589e4aeebdc9589ec43896ce4efb17f8/testr_recipe-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "2327a1826df4dacb16178991b90b0cea", "sha256": "6786844832f9994828f7de5a070f39173ab463f43aba23976c49be4c5a45c9d3"}, "downloads": -1, "filename": "testr_recipe-0.2-py2.6.egg", "has_sig": true, "md5_digest": "2327a1826df4dacb16178991b90b0cea", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 5429, "upload_time": "2010-07-16T20:21:58", "upload_time_iso_8601": "2010-07-16T20:21:58.320242Z", "url": "https://files.pythonhosted.org/packages/b5/6d/9dd4b2826df8e285451f87a8d6b0532ac33a95c5e55b8bd323d497fd0ddf/testr_recipe-0.2-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d49602e27bce09e26189b50a49207032", "sha256": "f3bf6d8bc102ff0fc092b90db478f9be0a510e1140484b47ec98c54992edab57"}, "downloads": -1, "filename": "testr_recipe-0.2.tar.gz", "has_sig": true, "md5_digest": "d49602e27bce09e26189b50a49207032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3705, "upload_time": "2010-07-16T20:21:47", "upload_time_iso_8601": "2010-07-16T20:21:47.193201Z", "url": "https://files.pythonhosted.org/packages/be/f3/2b6f58c5096e255cd55844be26f37158145e3e97d91c3e530a7f1fc9a087/testr_recipe-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5ad73fc58dc9288f8a06f5f86d58dd87", "sha256": "07b77e9f044ce232e52862f20734c76b50d94a1e0a6574fc183ee2826ecedcd2"}, "downloads": -1, "filename": "testr_recipe-0.3.tar.gz", "has_sig": true, "md5_digest": "5ad73fc58dc9288f8a06f5f86d58dd87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4034, "upload_time": "2010-07-29T21:38:15", "upload_time_iso_8601": "2010-07-29T21:38:15.075562Z", "url": "https://files.pythonhosted.org/packages/0d/a6/334d3008f35bf5ba80fec2522cdb638b4ad4dab6e5def5470b70b4eee7a1/testr_recipe-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ad73fc58dc9288f8a06f5f86d58dd87", "sha256": "07b77e9f044ce232e52862f20734c76b50d94a1e0a6574fc183ee2826ecedcd2"}, "downloads": -1, "filename": "testr_recipe-0.3.tar.gz", "has_sig": true, "md5_digest": "5ad73fc58dc9288f8a06f5f86d58dd87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4034, "upload_time": "2010-07-29T21:38:15", "upload_time_iso_8601": "2010-07-29T21:38:15.075562Z", "url": "https://files.pythonhosted.org/packages/0d/a6/334d3008f35bf5ba80fec2522cdb638b4ad4dab6e5def5470b70b4eee7a1/testr_recipe-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:18 2020"}