{"info": {"author": "Greenbone Networks GmbH", "author_email": "info@greenbone.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "![Greenbone Logo](https://www.greenbone.net/wp-content/uploads/gb_logo_resilience_horizontal.png)\n\n# Greenbone Vulnerability Management Tools <!-- omit in toc -->\n[![GitHub releases](https://img.shields.io/github/release-pre/greenbone/gvm-tools.svg)](https://github.com/greenbone/gvm-tools/releases)\n[![PyPI release](https://img.shields.io/pypi/v/gvm-tools.svg)](https://pypi.org/project/gvm-tools/)\n[![Scrutinizer Code Quality](https://scrutinizer-ci.com/g/greenbone/gvm-tools/badges/quality-score.png?b=master)](https://scrutinizer-ci.com/g/greenbone/gvm-tools/?branch=master)\n[![code test coverage](https://codecov.io/gh/greenbone/gvm-tools/branch/master/graph/badge.svg)](https://codecov.io/gh/greenbone/gvm-tools)\n[![CircleCI](https://circleci.com/gh/greenbone/gvm-tools/tree/master.svg?style=svg)](https://circleci.com/gh/greenbone/gvm-tools/tree/master)\n\nThe Greenbone Vulnerability Management Tools or gvm-tools in short\nare a collection of tools that help with remote controlling a\nGreenbone Security Manager (GSM) appliance and its underlying Greenbone\nVulnerability Manager (GVM). The tools essentially aid accessing the\ncommunication protocols GMP (Greenbone Management Protocol) and OSP\n(Open Scanner Protocol).\n\nThis module is comprised of interactive and non-interactive clients.\nThe programming language Python is supported directly for interactive scripting.\nBut it is also possible to issue remote GMP/OSP commands without programming in\nPython.\n\n\n## Table of Contents <!-- omit in toc -->\n- [Documentation](#documentation)\n- [Installation](#installation)\n  - [Requirements](#requirements)\n  - [Install using pip](#install-using-pip)\n- [Usage](#usage)\n  - [gvm-cli](#gvm-cli)\n    - [Example program use](#example-program-use)\n  - [gvm-script](#gvm-script)\n    - [Example script](#example-script)\n    - [More example scripts](#more-example-scripts)\n  - [gvm-pyshell](#gvm-pyshell)\n    - [Example program use](#example-program-use-1)\n- [Support](#support)\n- [Maintainer](#maintainer)\n- [Contributing](#contributing)\n- [License](#license)\n\n## Documentation\n\nThe documentation for gvm-tools can be found at\n[https://gvm-tools.readthedocs.io/](https://gvm-tools.readthedocs.io/). Please\nalways take a look at the documentation for further details. This README just\ngives you a short overview.\n\n## Installation\n\nSee the [documentation](https://gvm-tools.readthedocs.io/en/latest/install.html)\nfor all supported installation options.\n\n### Requirements\n\nPython 3.5 and later is supported.\n\n### Install using pip\n\nYou can install the latest stable release of gvm-tools from the Python Package\nIndex using [pip](https://pip.pypa.io/):\n\n    pip install --user gvm-tools\n\n## Usage\n\nThere are several clients to communicate via GMP/OSP.\n\nAll clients have the ability to build a connection in various ways:\n\n    * Unix Socket\n    * TLS Connection\n    * SSH Connection\n\n### gvm-cli\n\nThis little tool sends plain GMP/OSP commands and prints the result to\nthe standard output. When the program is used without any parameters, it\nasks for an XML command and for the user credentials.\n\n#### Example program use\n\nReturns the current version.\n\n```\ngvm-cli socket --xml \"<get_version/>\"\n```\n\nReturns the current version using a TLS connection with certificates.\n\n```\ngvm-cli tls --hostname 192.168.0.10 --port 1234 --certfile '/tmp/certs/cert.pem' --keyfile '/tmp/certs/key.pem' --cafile '/tmp/certs/cert.pem' --xml \"<get_version/>\"\n```\n\nReturn all\ntasks.\n\n```\ngvm-cli socket --xml \"<commands><authenticate><credentials><username>myuser</username><password>mypass</password></credentials></authenticate><get_tasks/></commands>\"\n```\n\nReads a file with GMP commands and return the result.\n\n```\ngvm-cli --gmp-username foo --gmp-password socket bar < myfile.xml\n```\n\nNote that `gvm-cli` will by default raise an exception when a command is\nrejected by the server. If this kind of error handling is not desired, the\nunparsed XML response can be requested using the `--raw` parameter:\n\n```\ngvm-cli socket --raw --xml \"<authenticate/>\"\n\n```\n\n### gvm-script\n\nThis tool has a lot more features than the simple gvm-cli client. You\nhave the possibility to create your own custom gmp or osp scripts with commands\nfrom the [python-gvm library](https://github.com/greenbone/python-gvm) and from\nPython 3 itself.\n\n#### Example script\n\n```\n# Retrieve current GMP version\nversion = gmp.get_version()\n\n# Prints the XML in beautiful form\nfrom gvmtools.helper import pretty_print\npretty_print(version)\n\n# Retrieve all tasks\ntasks = gmp.get_tasks()\n\n# Get names of tasks\ntask_names = tasks.xpath('task/name/text()')\npretty_print(task_names)\n```\n\n#### More example scripts\n\nThere is a growing collection of gmp-scripts in the\n[\"scripts/\"](scripts/) folder.\nSome of them might be exactly what you need and all of them help writing\nyour own gmp scripts.\n\n### gvm-pyshell\n\nThis tool is for running gmp or osp scripts interactively. It provides the same\nAPI as [gvm-script](#gvm-script) using the\n[python-gvm library](https://github.com/greenbone/python-gvm).\n\n#### Example program use\n\nConnect with given credentials via a unix domain socket and open an interactive\nshell.\n\n```\ngvm-pyshell socket --gmp-username=user --gmp-password=pass -i\n```\n\nConnect through SSH connection and open the interactive shell.\n\n```\ngvm-pyshell ssh --hostname=127.0.0.1 -i\n```\n\n## Support\n\nFor any question on the usage of gvm-tools or gmp scripts please use the\n[Greenbone Community Portal](https://community.greenbone.net/c/gmp). If you\nfound a problem with the software, please\n[create an issue](https://github.com/greenbone/gvm-tools/issues) on GitHub.\n\n## Maintainer\n\nThis project is maintained by [Greenbone Networks GmbH](https://www.greenbone.net/).\n\n## Contributing\n\nYour contributions are highly appreciated. Please\n[create a pull request](https://github.com/greenbone/gvm-tools/pulls) on GitHub.\nFor bigger changes, please discuss it first in the\n[issues](https://github.com/greenbone/gvm-tools/issues).\n\nFor development you should use [poetry](https://python-poetry.org/)\nto keep you python packages separated in different environments. First install\npoetry via pip\n\n    pip install --user poetry\n\nAfterwards run\n\n    poetry install\n\nin the checkout directory of gvm-tools (the directory containing the\npyproject.toml file) to install all dependencies including the packages only\nrequired for development.\n\nAfterwards active the git hooks for auto-formatting and linting via\n[autohooks](https://github.com/greenbone/autohooks).\n\n    poetry run autohooks activate --force\n\n## License\n\nCopyright (C) 2017-2018 [Greenbone Networks GmbH](https://www.greenbone.net/)\n\nLicensed under the [GNU General Public License v3.0 or later](LICENSE).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/greenbone/gvm-tools/", "keywords": "", "license": "GPL-3.0-or-later", "maintainer": "", "maintainer_email": "", "name": "gvm-tools", "package_url": "https://pypi.org/project/gvm-tools/", "platform": "", "project_url": "https://pypi.org/project/gvm-tools/", "project_urls": {"Documentation": "https://gvm-tools.readthedocs.io/", "Homepage": "https://github.com/greenbone/gvm-tools/", "Repository": "https://github.com/greenbone/gvm-tools/"}, "release_url": "https://pypi.org/project/gvm-tools/2.1.0/", "requires_dist": ["python-gvm (>=1.4.0,<2.0.0)"], "requires_python": ">=3.5.2,<4.0.0", "summary": "Tools to control a GSM/GVM over GMP or OSP", "version": "2.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Greenbone Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fcd62af33a76d2e9f5cf72e52802f8231ea5c5cf/68747470733a2f2f7777772e677265656e626f6e652e6e65742f77702d636f6e74656e742f75706c6f6164732f67625f6c6f676f5f726573696c69656e63655f686f72697a6f6e74616c2e706e67\"></p>\n<h1>Greenbone Vulnerability Management Tools </h1>\n<p><a href=\"https://github.com/greenbone/gvm-tools/releases\" rel=\"nofollow\"><img alt=\"GitHub releases\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/599e0cd9e352c90e541054abf2784b3bacf24934/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652d7072652f677265656e626f6e652f67766d2d746f6f6c732e737667\"></a>\n<a href=\"https://pypi.org/project/gvm-tools/\" rel=\"nofollow\"><img alt=\"PyPI release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7e509bdc0fdccc85bf5149dc29f71fe54e542c3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67766d2d746f6f6c732e737667\"></a>\n<a href=\"https://scrutinizer-ci.com/g/greenbone/gvm-tools/?branch=master\" rel=\"nofollow\"><img alt=\"Scrutinizer Code Quality\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51bb01e31b1d69c0b2bb37d4e195f4780a776097/68747470733a2f2f7363727574696e697a65722d63692e636f6d2f672f677265656e626f6e652f67766d2d746f6f6c732f6261646765732f7175616c6974792d73636f72652e706e673f623d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/greenbone/gvm-tools\" rel=\"nofollow\"><img alt=\"code test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e0225fc958728d5f21e6115bcf3f0d93044a882c/68747470733a2f2f636f6465636f762e696f2f67682f677265656e626f6e652f67766d2d746f6f6c732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://circleci.com/gh/greenbone/gvm-tools/tree/master\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/30699bfcb143e834bfd59aabff8861485296d39d/68747470733a2f2f636972636c6563692e636f6d2f67682f677265656e626f6e652f67766d2d746f6f6c732f747265652f6d61737465722e7376673f7374796c653d737667\"></a></p>\n<p>The Greenbone Vulnerability Management Tools or gvm-tools in short\nare a collection of tools that help with remote controlling a\nGreenbone Security Manager (GSM) appliance and its underlying Greenbone\nVulnerability Manager (GVM). The tools essentially aid accessing the\ncommunication protocols GMP (Greenbone Management Protocol) and OSP\n(Open Scanner Protocol).</p>\n<p>This module is comprised of interactive and non-interactive clients.\nThe programming language Python is supported directly for interactive scripting.\nBut it is also possible to issue remote GMP/OSP commands without programming in\nPython.</p>\n<h2>Table of Contents </h2>\n<ul>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#requirements\" rel=\"nofollow\">Requirements</a></li>\n<li><a href=\"#install-using-pip\" rel=\"nofollow\">Install using pip</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#gvm-cli\" rel=\"nofollow\">gvm-cli</a>\n<ul>\n<li><a href=\"#example-program-use\" rel=\"nofollow\">Example program use</a></li>\n</ul>\n</li>\n<li><a href=\"#gvm-script\" rel=\"nofollow\">gvm-script</a>\n<ul>\n<li><a href=\"#example-script\" rel=\"nofollow\">Example script</a></li>\n<li><a href=\"#more-example-scripts\" rel=\"nofollow\">More example scripts</a></li>\n</ul>\n</li>\n<li><a href=\"#gvm-pyshell\" rel=\"nofollow\">gvm-pyshell</a>\n<ul>\n<li><a href=\"#example-program-use-1\" rel=\"nofollow\">Example program use</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#support\" rel=\"nofollow\">Support</a></li>\n<li><a href=\"#maintainer\" rel=\"nofollow\">Maintainer</a></li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>Documentation</h2>\n<p>The documentation for gvm-tools can be found at\n<a href=\"https://gvm-tools.readthedocs.io/\" rel=\"nofollow\">https://gvm-tools.readthedocs.io/</a>. Please\nalways take a look at the documentation for further details. This README just\ngives you a short overview.</p>\n<h2>Installation</h2>\n<p>See the <a href=\"https://gvm-tools.readthedocs.io/en/latest/install.html\" rel=\"nofollow\">documentation</a>\nfor all supported installation options.</p>\n<h3>Requirements</h3>\n<p>Python 3.5 and later is supported.</p>\n<h3>Install using pip</h3>\n<p>You can install the latest stable release of gvm-tools from the Python Package\nIndex using <a href=\"https://pip.pypa.io/\" rel=\"nofollow\">pip</a>:</p>\n<pre><code>pip install --user gvm-tools\n</code></pre>\n<h2>Usage</h2>\n<p>There are several clients to communicate via GMP/OSP.</p>\n<p>All clients have the ability to build a connection in various ways:</p>\n<pre><code>* Unix Socket\n* TLS Connection\n* SSH Connection\n</code></pre>\n<h3>gvm-cli</h3>\n<p>This little tool sends plain GMP/OSP commands and prints the result to\nthe standard output. When the program is used without any parameters, it\nasks for an XML command and for the user credentials.</p>\n<h4>Example program use</h4>\n<p>Returns the current version.</p>\n<pre><code>gvm-cli socket --xml \"&lt;get_version/&gt;\"\n</code></pre>\n<p>Returns the current version using a TLS connection with certificates.</p>\n<pre><code>gvm-cli tls --hostname 192.168.0.10 --port 1234 --certfile '/tmp/certs/cert.pem' --keyfile '/tmp/certs/key.pem' --cafile '/tmp/certs/cert.pem' --xml \"&lt;get_version/&gt;\"\n</code></pre>\n<p>Return all\ntasks.</p>\n<pre><code>gvm-cli socket --xml \"&lt;commands&gt;&lt;authenticate&gt;&lt;credentials&gt;&lt;username&gt;myuser&lt;/username&gt;&lt;password&gt;mypass&lt;/password&gt;&lt;/credentials&gt;&lt;/authenticate&gt;&lt;get_tasks/&gt;&lt;/commands&gt;\"\n</code></pre>\n<p>Reads a file with GMP commands and return the result.</p>\n<pre><code>gvm-cli --gmp-username foo --gmp-password socket bar &lt; myfile.xml\n</code></pre>\n<p>Note that <code>gvm-cli</code> will by default raise an exception when a command is\nrejected by the server. If this kind of error handling is not desired, the\nunparsed XML response can be requested using the <code>--raw</code> parameter:</p>\n<pre><code>gvm-cli socket --raw --xml \"&lt;authenticate/&gt;\"\n\n</code></pre>\n<h3>gvm-script</h3>\n<p>This tool has a lot more features than the simple gvm-cli client. You\nhave the possibility to create your own custom gmp or osp scripts with commands\nfrom the <a href=\"https://github.com/greenbone/python-gvm\" rel=\"nofollow\">python-gvm library</a> and from\nPython 3 itself.</p>\n<h4>Example script</h4>\n<pre><code># Retrieve current GMP version\nversion = gmp.get_version()\n\n# Prints the XML in beautiful form\nfrom gvmtools.helper import pretty_print\npretty_print(version)\n\n# Retrieve all tasks\ntasks = gmp.get_tasks()\n\n# Get names of tasks\ntask_names = tasks.xpath('task/name/text()')\npretty_print(task_names)\n</code></pre>\n<h4>More example scripts</h4>\n<p>There is a growing collection of gmp-scripts in the\n<a href=\"scripts/\" rel=\"nofollow\">\"scripts/\"</a> folder.\nSome of them might be exactly what you need and all of them help writing\nyour own gmp scripts.</p>\n<h3>gvm-pyshell</h3>\n<p>This tool is for running gmp or osp scripts interactively. It provides the same\nAPI as <a href=\"#gvm-script\" rel=\"nofollow\">gvm-script</a> using the\n<a href=\"https://github.com/greenbone/python-gvm\" rel=\"nofollow\">python-gvm library</a>.</p>\n<h4>Example program use</h4>\n<p>Connect with given credentials via a unix domain socket and open an interactive\nshell.</p>\n<pre><code>gvm-pyshell socket --gmp-username=user --gmp-password=pass -i\n</code></pre>\n<p>Connect through SSH connection and open the interactive shell.</p>\n<pre><code>gvm-pyshell ssh --hostname=127.0.0.1 -i\n</code></pre>\n<h2>Support</h2>\n<p>For any question on the usage of gvm-tools or gmp scripts please use the\n<a href=\"https://community.greenbone.net/c/gmp\" rel=\"nofollow\">Greenbone Community Portal</a>. If you\nfound a problem with the software, please\n<a href=\"https://github.com/greenbone/gvm-tools/issues\" rel=\"nofollow\">create an issue</a> on GitHub.</p>\n<h2>Maintainer</h2>\n<p>This project is maintained by <a href=\"https://www.greenbone.net/\" rel=\"nofollow\">Greenbone Networks GmbH</a>.</p>\n<h2>Contributing</h2>\n<p>Your contributions are highly appreciated. Please\n<a href=\"https://github.com/greenbone/gvm-tools/pulls\" rel=\"nofollow\">create a pull request</a> on GitHub.\nFor bigger changes, please discuss it first in the\n<a href=\"https://github.com/greenbone/gvm-tools/issues\" rel=\"nofollow\">issues</a>.</p>\n<p>For development you should use <a href=\"https://python-poetry.org/\" rel=\"nofollow\">poetry</a>\nto keep you python packages separated in different environments. First install\npoetry via pip</p>\n<pre><code>pip install --user poetry\n</code></pre>\n<p>Afterwards run</p>\n<pre><code>poetry install\n</code></pre>\n<p>in the checkout directory of gvm-tools (the directory containing the\npyproject.toml file) to install all dependencies including the packages only\nrequired for development.</p>\n<p>Afterwards active the git hooks for auto-formatting and linting via\n<a href=\"https://github.com/greenbone/autohooks\" rel=\"nofollow\">autohooks</a>.</p>\n<pre><code>poetry run autohooks activate --force\n</code></pre>\n<h2>License</h2>\n<p>Copyright (C) 2017-2018 <a href=\"https://www.greenbone.net/\" rel=\"nofollow\">Greenbone Networks GmbH</a></p>\n<p>Licensed under the <a href=\"LICENSE\" rel=\"nofollow\">GNU General Public License v3.0 or later</a>.</p>\n\n          </div>"}, "last_serial": 6942736, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "ec5b4a800356d4141a55283b240c8fa9", "sha256": "6c064b207fa229ba43a132ee692d651451753c1e3bb7371a041d1cf1eb2d6c95"}, "downloads": -1, "filename": "gvm_tools-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec5b4a800356d4141a55283b240c8fa9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 33255, "upload_time": "2019-09-19T09:32:51", "upload_time_iso_8601": "2019-09-19T09:32:51.418478Z", "url": "https://files.pythonhosted.org/packages/33/70/a8486e5445ad5ecb06052a21c76c33300e91dbbc57a11c72caac6b7de548/gvm_tools-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45a7e99e5f195953272b1ded0504c1d1", "sha256": "10568c6c60f52da1781d4d11d660294c6413e3e6984ee346bf5d613b417ff126"}, "downloads": -1, "filename": "gvm-tools-2.0.0.tar.gz", "has_sig": false, "md5_digest": "45a7e99e5f195953272b1ded0504c1d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 56658, "upload_time": "2019-09-19T09:32:53", "upload_time_iso_8601": "2019-09-19T09:32:53.627140Z", "url": "https://files.pythonhosted.org/packages/97/3b/76fe496f2d75cf90ad036484144442969c1ab39da5f19488f5fbb8f972d2/gvm-tools-2.0.0.tar.gz", "yanked": false}], "2.0.0b1": [{"comment_text": "", "digests": {"md5": "026dcbaa6d54cdaf580cb97a3130bdfe", "sha256": "5533ee2b042c74531f21de66211e6790cd937198bd27f22d51a9db887b05da2f"}, "downloads": -1, "filename": "gvm_tools-2.0.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "026dcbaa6d54cdaf580cb97a3130bdfe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 25272, "upload_time": "2018-11-13T09:14:03", "upload_time_iso_8601": "2018-11-13T09:14:03.351577Z", "url": "https://files.pythonhosted.org/packages/70/f0/b64613f452b5b08088dba3b5913535d725b79a1ea33765a5d76238fa77fc/gvm_tools-2.0.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74c0b17617f20e8c2a276cb78350f776", "sha256": "a7e5d6ae38fe4ccbf5457a49a8859f307af0d46659ef0c9dd753897fc9f981e8"}, "downloads": -1, "filename": "gvm-tools-2.0.0b1.tar.gz", "has_sig": false, "md5_digest": "74c0b17617f20e8c2a276cb78350f776", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 31924, "upload_time": "2018-11-13T09:14:05", "upload_time_iso_8601": "2018-11-13T09:14:05.830776Z", "url": "https://files.pythonhosted.org/packages/87/df/84d8bfb6a7f4c01a9e7fdcde3d48edf72242e422f8fd58c63e7492c7d5f4/gvm-tools-2.0.0b1.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "d77d7cb0e4cd2a029eee45bde2381123", "sha256": "6c7201821276860332191da809d83449b6f3977ef32796101f2e76e4b251f0a0"}, "downloads": -1, "filename": "gvm_tools-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d77d7cb0e4cd2a029eee45bde2381123", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2,<4.0.0", "size": 30864, "upload_time": "2020-04-03T11:41:21", "upload_time_iso_8601": "2020-04-03T11:41:21.523584Z", "url": "https://files.pythonhosted.org/packages/6f/29/dcc1c585db17ad12465b3011230dae0e563c70a892a3d447e1da9b5ee003/gvm_tools-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9fd02bfb5a06b45f676ae853dd7968c", "sha256": "a368cc47d3bd4ae966b6f9b6cdbf11eee750e1ead8015655a6bf0ed7eafadec7"}, "downloads": -1, "filename": "gvm-tools-2.1.0.tar.gz", "has_sig": false, "md5_digest": "e9fd02bfb5a06b45f676ae853dd7968c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2,<4.0.0", "size": 74612, "upload_time": "2020-04-03T11:41:22", "upload_time_iso_8601": "2020-04-03T11:41:22.655323Z", "url": "https://files.pythonhosted.org/packages/f8/8c/f977acd0647cd902f65b21927d8fc0565b22b1d82067bae7374a3901e7f5/gvm-tools-2.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d77d7cb0e4cd2a029eee45bde2381123", "sha256": "6c7201821276860332191da809d83449b6f3977ef32796101f2e76e4b251f0a0"}, "downloads": -1, "filename": "gvm_tools-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d77d7cb0e4cd2a029eee45bde2381123", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2,<4.0.0", "size": 30864, "upload_time": "2020-04-03T11:41:21", "upload_time_iso_8601": "2020-04-03T11:41:21.523584Z", "url": "https://files.pythonhosted.org/packages/6f/29/dcc1c585db17ad12465b3011230dae0e563c70a892a3d447e1da9b5ee003/gvm_tools-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e9fd02bfb5a06b45f676ae853dd7968c", "sha256": "a368cc47d3bd4ae966b6f9b6cdbf11eee750e1ead8015655a6bf0ed7eafadec7"}, "downloads": -1, "filename": "gvm-tools-2.1.0.tar.gz", "has_sig": false, "md5_digest": "e9fd02bfb5a06b45f676ae853dd7968c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2,<4.0.0", "size": 74612, "upload_time": "2020-04-03T11:41:22", "upload_time_iso_8601": "2020-04-03T11:41:22.655323Z", "url": "https://files.pythonhosted.org/packages/f8/8c/f977acd0647cd902f65b21927d8fc0565b22b1d82067bae7374a3901e7f5/gvm-tools-2.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:07 2020"}