{"info": {"author": "Martin Bukatovi\u010d", "author_email": "mbukatov@redhat.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pytest", "Intended Audience :: Developers", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Testing"], "description": "pytest-ansible-playbook-runner\n===================================\n\nThis repository contains `pytest`_ `plugin`_ which provides an easy way\nto run particular `ansible playbooks`_ during setup phase of a test case.\nThis is useful when\nyou already have some playbook files you would like to reuse during test setup\nor plan to maintain test setup in ansible playbooks for you to be able to\nuse it both during test run setup and directly via ansible for other purposes\n(automatically during deployment or manually when needed).\n\nCompared with `pytest-ansible`_ module, this module doesn't allow you to\ninspect `ansible facts`_ or details about results of each ansible task, nor\ndoest it allow to specify and execute an ansible task directly. So if you need\nany of that, go for `pytest-ansible`_ instead. This plugin provides the only\nmissing ansible feature which `pytest-ansible`_ is not supposed to provide - to\nrun ansible playbook file directly.\n\nInitial structure of this repository was generated with `Cookiecutter`_\nalong with `@hackebrot`_'s `Cookiecutter-pytest-plugin`_ template.\n\n\n\nFeatures\n--------\n\n### Notes\n\n- The plugin provides `ansible_playbook` `pytest fixture`_, which allows\n  one to run one or more ansible playbooks during test setup or tear down of a\n  test case.\n\n- It also provides `context manager`_ `pytest_ansible_playbook.runner()`\n  which can be used to build custom fixtures with any `scope`_ or to execute\n  setup and/or teardown playbooks in a code of a test case.\n\n- It's compatible with python3 (playbooks are executed via\n  running `ansible-playbook` in subprocess instead of using api\n  of ansible python module).\n\n- Doesn't allow you to configure ansible in any way, all changes of ansible\n  setup needs to be done in ansible playbooks, variable or config files.\n  This encourages you to maintain a clear separation of ansible playbooks\n  and the tests.\n\n\n\n### Key features\n\n1. An option to run arbitrary playbooks in the middle of the test:\n\n    ```python\n    def test_something(ansible_playbook,....):\n      ...\n    ansible_playbook.run_playbook('my_playbook.yml')\n      ...\n\n    ```\n\n2. An option to add teardown playbooks in the middle of the test:\n\n    ```python\n    def test_something(ansible_playbook,....):\n      ...\n      ansible_playbook.add_to_teardown({'file': 'my_playbook.yml', 'extra_vars': {})\n      ...\n    ```\n\n3. Return values have been added to every playbook run. The return value respects playbook execution order and for every host:\n\n    ```python\n    def test_something(ansible_playbook,....):\n        ...\n        ret = ansible_playbook.run_playbook('my_playbook.yml')\n        assert ret['localhost'][0]['msg'] == 'line added'\n    \t...\n    ```\n\n4. A test can pass arguments to the playbooks it runs. Thus the playbook has changed from string to dictionary:\n\n   ```python\n   def test_something(ansible_playbook,....):\n       ...\n       ansible_playbook.run_playbook(\n           'my_playbook.yml',\n           {'play_host_groupd': 'some_ansible_group', 'param1': 'value1'}\n       )\n       ...\n   ```\n\n5. Mark setup / teardown syntax:\n\n   ```python\n   @pytest.mark.ansible_playbook_setup(\n       {'file': 'some_playbook.yml', 'extra_vars': \n        {'play_host_groupd': 'some_ansible_group', 'param1': 'value1'}}\n   )\n   @pytest.mark.ansible_playbook_teardown(\n       {'file': 'my_teardown1.yml', 'extra_vars':\n        {'play_host_groupd': 'some_ansible_group', 'param1': 'value1'}},\n       {'file': 'my_teardown2.yml', 'extra_vars':\n        {'play_host_groupd': 'some_ansible_group', 'param1': 'value1'}}\n   )\n   def test_something(ansible_playbook,....):\n       ...\n       ansible_playbook.run_playbook(\n           'my_playbook.yml',\n           {'play_host_groupd': 'some_ansible_group', 'param1': 'value1'}\n       )\n       ...\n\n   ```\n\n\n\nNow the pytest plugin uses a separate module: `playbook_runner`.\nhttps://github.com/final-israel/playbook_runner\nThis is because other tools may want to also run playbooks not necessarily as a part of the pytest framework.\n\n\n\nRequirements\n------------\n\nAnsible should be installed (so that ``ansible-playbook`` binary is\navailable in PATH). Use version provided by packaging system of your operation\nsystem.\n\n\n\nInstallation\n------------\n\nYou can either install stable release from `PyPI` or use latest development version from `master` branch.\n\n* Installing stable release - You can install `pytest-ansible-playbook-runner` via `pip` from `PyPI`:\n\n~~~~~~~~~~~~~~~~~~~~~~~~~bash\npip install pytest-ansible-playbook-runner\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n\n\n* Installing latest development version\n\nThe suggested way to install from sources of current master branch is via `python virtual enviroment`:\n\n```bash\n$ cd pytest-ansible-playbook-runner\n$ virtualenv .env\n$ source .env/bin/activate\n$ pip install -e .\n```\n\nNote that you can use `virtualenvwrapper` to simplify this workflow.\n\n\n\nUsage\n-----\n\nWhen the plugin is installed, you can use the following command-line\nparameters::\n\n```bash\npy.test \\\n    [--ansible-playbook-directory <path_to_directory_with_playbooks>] \\\n    [--ansible-playbook-inventory <path_to_inventory_file>]\n```\n\nWhere ``<path_to_directory_with_playbooks>`` is a directory which contains ansible playbooks and any other ansible files such as configuration or roles if needed. A ``ansible-playbook`` process will be able\nto access the files stored there, since this directory is set as `cwd` (current working directory) of the `ansible` process.\n\nThe ``<path_to_inventory_file>`` is file with `ansible inventory`.  You can use either an absolute path or a relative path within the ansible directory specified via the 1st option. Note that the option names were chosen this way so that it doesn't conflict with `pytest-ansible` plugin.\n\nExample of simple custom fixture:\n\n```python\nimport pytest\nfrom pytest_ansible_playbook import fixture_runner\n\n@pytest.fixture(scope=\"session\")\ndef custom_fixture(request):\n    setup_playbooks = ['setup_foo.yml', 'setup_bar.yml']\n    teardown_playbooks = ['teardown_foo.yml', 'teardown_bar.yml']\n    with fixture_runner(request, setup_playbooks, teardown_playbooks):\n        # here comes code executed during setup, after running the setup\n        # playbooks\n        yield\n        # here you can place code to be executed during teardown, but\n        # before running the teardown playbooks\n\ndef test_bar(custom_fixture):\n    assert 1 == 1\n```\n\nAnd here is an example of using the fixture inside a test case directly:\n\n```python\nfrom pytest_ansible_playbook import fixture_runner\n\ndef test_foo(request):\n    with fixture_runner(request, ['setup_foo.yml'], ['teardown_foo.yml']):\n        # code here is executed after the setup playbooks, but before the\n        # teardown ones\n        assert 1 == 1\n```\n\n\n\nContributing\n------------\n\nContributions are very welcome. Tests can be run with `tox`, please ensure the coverage at least stays the same before you submit a pull request.\n\n\n\nLicense\n-------\n\nDistributed under the terms of the `Apache License 2.0` license, `pytest-ansible-playbook-runner` is free and open source software\n\n\n\nIssues\n------\n\nIf you encounter any problems, please file an issue along with a detailed description.\n\n.. `file an issue`: https://github.com/final-israel/pytest-ansible-playbook-runner/issues\n.. `Cookiecutter`: https://github.com/audreyr/cookiecutter\n.. `@hackebrot`: https://github.com/hackebrot\n.. `cookiecutter-pytest-plugin`: https://github.com/pytest-dev/cookiecutter-pytest-plugin\n.. `pytest`: http://docs.pytest.org/en/latest/\n.. `pytest fixture`: http://doc.pytest.org/en/latest/fixture.html\n.. `pytest markers`: http://doc.pytest.org/en/latest/example/markers.html\n.. `plugin`: http://doc.pytest.org/en/latest/plugins.html\n.. `tox`: https://tox.readthedocs.io/en/latest/\n.. `pip`: https://pypi.python.org/pypi/pip/\n.. `PyPI`: https://pypi.python.org/pypi\n.. `stable release from PyPI`: https://pypi.org/project/pytest-ansible-playbook-runner/\n.. `python virtual enviroment`: https://virtualenv.pypa.io/en/stable/\n.. `virtualenvwrapper`: https://virtualenvwrapper.readthedocs.io/en/latest/\n.. `pytest-ansible`: https://pypi.python.org/pypi/pytest-ansible\n.. `ansible playbooks`: https://docs.ansible.com/ansible/playbooks.html\n.. `ansible facts`: https://docs.ansible.com/ansible/playbooks_variables.html#information-discovered-from-systems-facts\n.. `ansible inventory`: https://docs.ansible.com/ansible/intro_inventory.html\n.. `Apache License 2.0`: http://www.apache.org/licenses/LICENSE-2.0\n.. `context manager`: https://docs.python.org/3.6/library/stdtypes.html#context-manager-types\n.. `scope`: https://docs.pytest.org/en/latest/fixture.html#scope-sharing-a-fixture-instance-across-tests-in-a-class-module-or-session\n.. `pytest doesn't expect fixtures to have markers`: https://github.com/pytest-dev/pytest/issues/3664\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/final-israel/pytest-ansible-playbook-runner", "keywords": "", "license": "Apache 2.0", "maintainer": "Pavel Rogovoy", "maintainer_email": "pavelr@final.co.il", "name": "pytest-ansible-playbook-runner", "package_url": "https://pypi.org/project/pytest-ansible-playbook-runner/", "platform": "", "project_url": "https://pypi.org/project/pytest-ansible-playbook-runner/", "project_urls": {"Homepage": "https://github.com/final-israel/pytest-ansible-playbook-runner"}, "release_url": "https://pypi.org/project/pytest-ansible-playbook-runner/0.0.5/", "requires_dist": ["pytest (>=3.1.0)", "playbook-runner"], "requires_python": "", "summary": "Pytest fixture which runs given ansible playbook file.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pytest-ansible-playbook-runner</h1>\n<p>This repository contains <code>pytest</code>_ <code>plugin</code>_ which provides an easy way\nto run particular <code>ansible playbooks</code>_ during setup phase of a test case.\nThis is useful when\nyou already have some playbook files you would like to reuse during test setup\nor plan to maintain test setup in ansible playbooks for you to be able to\nuse it both during test run setup and directly via ansible for other purposes\n(automatically during deployment or manually when needed).</p>\n<p>Compared with <code>pytest-ansible</code>_ module, this module doesn't allow you to\ninspect <code>ansible facts</code>_ or details about results of each ansible task, nor\ndoest it allow to specify and execute an ansible task directly. So if you need\nany of that, go for <code>pytest-ansible</code>_ instead. This plugin provides the only\nmissing ansible feature which <code>pytest-ansible</code>_ is not supposed to provide - to\nrun ansible playbook file directly.</p>\n<p>Initial structure of this repository was generated with <code>Cookiecutter</code>_\nalong with <code>@hackebrot</code><em>'s <code>Cookiecutter-pytest-plugin</code></em> template.</p>\n<h2>Features</h2>\n<h3>Notes</h3>\n<ul>\n<li>\n<p>The plugin provides <code>ansible_playbook</code> <code>pytest fixture</code>_, which allows\none to run one or more ansible playbooks during test setup or tear down of a\ntest case.</p>\n</li>\n<li>\n<p>It also provides <code>context manager</code>_ <code>pytest_ansible_playbook.runner()</code>\nwhich can be used to build custom fixtures with any <code>scope</code>_ or to execute\nsetup and/or teardown playbooks in a code of a test case.</p>\n</li>\n<li>\n<p>It's compatible with python3 (playbooks are executed via\nrunning <code>ansible-playbook</code> in subprocess instead of using api\nof ansible python module).</p>\n</li>\n<li>\n<p>Doesn't allow you to configure ansible in any way, all changes of ansible\nsetup needs to be done in ansible playbooks, variable or config files.\nThis encourages you to maintain a clear separation of ansible playbooks\nand the tests.</p>\n</li>\n</ul>\n<h3>Key features</h3>\n<ol>\n<li>\n<p>An option to run arbitrary playbooks in the middle of the test:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">ansible_playbook</span><span class=\"p\">,</span><span class=\"o\">....</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n<span class=\"n\">ansible_playbook</span><span class=\"o\">.</span><span class=\"n\">run_playbook</span><span class=\"p\">(</span><span class=\"s1\">'my_playbook.yml'</span><span class=\"p\">)</span>\n  <span class=\"o\">...</span>\n</pre>\n</li>\n<li>\n<p>An option to add teardown playbooks in the middle of the test:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">ansible_playbook</span><span class=\"p\">,</span><span class=\"o\">....</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>\n  <span class=\"n\">ansible_playbook</span><span class=\"o\">.</span><span class=\"n\">add_to_teardown</span><span class=\"p\">({</span><span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"s1\">'my_playbook.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'extra_vars'</span><span class=\"p\">:</span> <span class=\"p\">{})</span>\n  <span class=\"o\">...</span>\n</pre>\n</li>\n<li>\n<p>Return values have been added to every playbook run. The return value respects playbook execution order and for every host:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">ansible_playbook</span><span class=\"p\">,</span><span class=\"o\">....</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"n\">ansible_playbook</span><span class=\"o\">.</span><span class=\"n\">run_playbook</span><span class=\"p\">(</span><span class=\"s1\">'my_playbook.yml'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">ret</span><span class=\"p\">[</span><span class=\"s1\">'localhost'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'msg'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"s1\">'line added'</span>\n\t<span class=\"o\">...</span>\n</pre>\n</li>\n<li>\n<p>A test can pass arguments to the playbooks it runs. Thus the playbook has changed from string to dictionary:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">ansible_playbook</span><span class=\"p\">,</span><span class=\"o\">....</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">ansible_playbook</span><span class=\"o\">.</span><span class=\"n\">run_playbook</span><span class=\"p\">(</span>\n        <span class=\"s1\">'my_playbook.yml'</span><span class=\"p\">,</span>\n        <span class=\"p\">{</span><span class=\"s1\">'play_host_groupd'</span><span class=\"p\">:</span> <span class=\"s1\">'some_ansible_group'</span><span class=\"p\">,</span> <span class=\"s1\">'param1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n</pre>\n</li>\n<li>\n<p>Mark setup / teardown syntax:</p>\n<pre><span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">ansible_playbook_setup</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"s1\">'some_playbook.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'extra_vars'</span><span class=\"p\">:</span> \n     <span class=\"p\">{</span><span class=\"s1\">'play_host_groupd'</span><span class=\"p\">:</span> <span class=\"s1\">'some_ansible_group'</span><span class=\"p\">,</span> <span class=\"s1\">'param1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">}}</span>\n<span class=\"p\">)</span>\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">ansible_playbook_teardown</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"s1\">'my_teardown1.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'extra_vars'</span><span class=\"p\">:</span>\n     <span class=\"p\">{</span><span class=\"s1\">'play_host_groupd'</span><span class=\"p\">:</span> <span class=\"s1\">'some_ansible_group'</span><span class=\"p\">,</span> <span class=\"s1\">'param1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">}},</span>\n    <span class=\"p\">{</span><span class=\"s1\">'file'</span><span class=\"p\">:</span> <span class=\"s1\">'my_teardown2.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'extra_vars'</span><span class=\"p\">:</span>\n     <span class=\"p\">{</span><span class=\"s1\">'play_host_groupd'</span><span class=\"p\">:</span> <span class=\"s1\">'some_ansible_group'</span><span class=\"p\">,</span> <span class=\"s1\">'param1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">}}</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_something</span><span class=\"p\">(</span><span class=\"n\">ansible_playbook</span><span class=\"p\">,</span><span class=\"o\">....</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">ansible_playbook</span><span class=\"o\">.</span><span class=\"n\">run_playbook</span><span class=\"p\">(</span>\n        <span class=\"s1\">'my_playbook.yml'</span><span class=\"p\">,</span>\n        <span class=\"p\">{</span><span class=\"s1\">'play_host_groupd'</span><span class=\"p\">:</span> <span class=\"s1\">'some_ansible_group'</span><span class=\"p\">,</span> <span class=\"s1\">'param1'</span><span class=\"p\">:</span> <span class=\"s1\">'value1'</span><span class=\"p\">}</span>\n    <span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n</pre>\n</li>\n</ol>\n<p>Now the pytest plugin uses a separate module: <code>playbook_runner</code>.\n<a href=\"https://github.com/final-israel/playbook_runner\" rel=\"nofollow\">https://github.com/final-israel/playbook_runner</a>\nThis is because other tools may want to also run playbooks not necessarily as a part of the pytest framework.</p>\n<h2>Requirements</h2>\n<p>Ansible should be installed (so that <code>ansible-playbook</code> binary is\navailable in PATH). Use version provided by packaging system of your operation\nsystem.</p>\n<h2>Installation</h2>\n<p>You can either install stable release from <code>PyPI</code> or use latest development version from <code>master</code> branch.</p>\n<ul>\n<li>Installing stable release - You can install <code>pytest-ansible-playbook-runner</code> via <code>pip</code> from <code>PyPI</code>:</li>\n</ul>\n<pre>pip install pytest-ansible-playbook-runner\n</pre>\n<ul>\n<li>Installing latest development version</li>\n</ul>\n<p>The suggested way to install from sources of current master branch is via <code>python virtual enviroment</code>:</p>\n<pre>$ <span class=\"nb\">cd</span> pytest-ansible-playbook-runner\n$ virtualenv .env\n$ <span class=\"nb\">source</span> .env/bin/activate\n$ pip install -e .\n</pre>\n<p>Note that you can use <code>virtualenvwrapper</code> to simplify this workflow.</p>\n<h2>Usage</h2>\n<p>When the plugin is installed, you can use the following command-line\nparameters::</p>\n<pre>py.test <span class=\"se\">\\</span>\n    <span class=\"o\">[</span>--ansible-playbook-directory &lt;path_to_directory_with_playbooks&gt;<span class=\"o\">]</span> <span class=\"se\">\\</span>\n    <span class=\"o\">[</span>--ansible-playbook-inventory &lt;path_to_inventory_file&gt;<span class=\"o\">]</span>\n</pre>\n<p>Where <code>&lt;path_to_directory_with_playbooks&gt;</code> is a directory which contains ansible playbooks and any other ansible files such as configuration or roles if needed. A <code>ansible-playbook</code> process will be able\nto access the files stored there, since this directory is set as <code>cwd</code> (current working directory) of the <code>ansible</code> process.</p>\n<p>The <code>&lt;path_to_inventory_file&gt;</code> is file with <code>ansible inventory</code>.  You can use either an absolute path or a relative path within the ansible directory specified via the 1st option. Note that the option names were chosen this way so that it doesn't conflict with <code>pytest-ansible</code> plugin.</p>\n<p>Example of simple custom fixture:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pytest_ansible_playbook</span> <span class=\"kn\">import</span> <span class=\"n\">fixture_runner</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span><span class=\"p\">(</span><span class=\"n\">scope</span><span class=\"o\">=</span><span class=\"s2\">\"session\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">custom_fixture</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">setup_playbooks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'setup_foo.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'setup_bar.yml'</span><span class=\"p\">]</span>\n    <span class=\"n\">teardown_playbooks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'teardown_foo.yml'</span><span class=\"p\">,</span> <span class=\"s1\">'teardown_bar.yml'</span><span class=\"p\">]</span>\n    <span class=\"k\">with</span> <span class=\"n\">fixture_runner</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">setup_playbooks</span><span class=\"p\">,</span> <span class=\"n\">teardown_playbooks</span><span class=\"p\">):</span>\n        <span class=\"c1\"># here comes code executed during setup, after running the setup</span>\n        <span class=\"c1\"># playbooks</span>\n        <span class=\"k\">yield</span>\n        <span class=\"c1\"># here you can place code to be executed during teardown, but</span>\n        <span class=\"c1\"># before running the teardown playbooks</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_bar</span><span class=\"p\">(</span><span class=\"n\">custom_fixture</span><span class=\"p\">):</span>\n    <span class=\"k\">assert</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n</pre>\n<p>And here is an example of using the fixture inside a test case directly:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pytest_ansible_playbook</span> <span class=\"kn\">import</span> <span class=\"n\">fixture_runner</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">test_foo</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">fixture_runner</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'setup_foo.yml'</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"s1\">'teardown_foo.yml'</span><span class=\"p\">]):</span>\n        <span class=\"c1\"># code here is executed after the setup playbooks, but before the</span>\n        <span class=\"c1\"># teardown ones</span>\n        <span class=\"k\">assert</span> <span class=\"mi\">1</span> <span class=\"o\">==</span> <span class=\"mi\">1</span>\n</pre>\n<h2>Contributing</h2>\n<p>Contributions are very welcome. Tests can be run with <code>tox</code>, please ensure the coverage at least stays the same before you submit a pull request.</p>\n<h2>License</h2>\n<p>Distributed under the terms of the <code>Apache License 2.0</code> license, <code>pytest-ansible-playbook-runner</code> is free and open source software</p>\n<h2>Issues</h2>\n<p>If you encounter any problems, please file an issue along with a detailed description.</p>\n<p>.. <code>file an issue</code>: <a href=\"https://github.com/final-israel/pytest-ansible-playbook-runner/issues\" rel=\"nofollow\">https://github.com/final-israel/pytest-ansible-playbook-runner/issues</a>\n.. <code>Cookiecutter</code>: <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">https://github.com/audreyr/cookiecutter</a>\n.. <code>@hackebrot</code>: <a href=\"https://github.com/hackebrot\" rel=\"nofollow\">https://github.com/hackebrot</a>\n.. <code>cookiecutter-pytest-plugin</code>: <a href=\"https://github.com/pytest-dev/cookiecutter-pytest-plugin\" rel=\"nofollow\">https://github.com/pytest-dev/cookiecutter-pytest-plugin</a>\n.. <code>pytest</code>: <a href=\"http://docs.pytest.org/en/latest/\" rel=\"nofollow\">http://docs.pytest.org/en/latest/</a>\n.. <code>pytest fixture</code>: <a href=\"http://doc.pytest.org/en/latest/fixture.html\" rel=\"nofollow\">http://doc.pytest.org/en/latest/fixture.html</a>\n.. <code>pytest markers</code>: <a href=\"http://doc.pytest.org/en/latest/example/markers.html\" rel=\"nofollow\">http://doc.pytest.org/en/latest/example/markers.html</a>\n.. <code>plugin</code>: <a href=\"http://doc.pytest.org/en/latest/plugins.html\" rel=\"nofollow\">http://doc.pytest.org/en/latest/plugins.html</a>\n.. <code>tox</code>: <a href=\"https://tox.readthedocs.io/en/latest/\" rel=\"nofollow\">https://tox.readthedocs.io/en/latest/</a>\n.. <code>pip</code>: <a href=\"https://pypi.python.org/pypi/pip/\" rel=\"nofollow\">https://pypi.python.org/pypi/pip/</a>\n.. <code>PyPI</code>: <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">https://pypi.python.org/pypi</a>\n.. <code>stable release from PyPI</code>: <a href=\"https://pypi.org/project/pytest-ansible-playbook-runner/\" rel=\"nofollow\">https://pypi.org/project/pytest-ansible-playbook-runner/</a>\n.. <code>python virtual enviroment</code>: <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">https://virtualenv.pypa.io/en/stable/</a>\n.. <code>virtualenvwrapper</code>: <a href=\"https://virtualenvwrapper.readthedocs.io/en/latest/\" rel=\"nofollow\">https://virtualenvwrapper.readthedocs.io/en/latest/</a>\n.. <code>pytest-ansible</code>: <a href=\"https://pypi.python.org/pypi/pytest-ansible\" rel=\"nofollow\">https://pypi.python.org/pypi/pytest-ansible</a>\n.. <code>ansible playbooks</code>: <a href=\"https://docs.ansible.com/ansible/playbooks.html\" rel=\"nofollow\">https://docs.ansible.com/ansible/playbooks.html</a>\n.. <code>ansible facts</code>: <a href=\"https://docs.ansible.com/ansible/playbooks_variables.html#information-discovered-from-systems-facts\" rel=\"nofollow\">https://docs.ansible.com/ansible/playbooks_variables.html#information-discovered-from-systems-facts</a>\n.. <code>ansible inventory</code>: <a href=\"https://docs.ansible.com/ansible/intro_inventory.html\" rel=\"nofollow\">https://docs.ansible.com/ansible/intro_inventory.html</a>\n.. <code>Apache License 2.0</code>: <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\">http://www.apache.org/licenses/LICENSE-2.0</a>\n.. <code>context manager</code>: <a href=\"https://docs.python.org/3.6/library/stdtypes.html#context-manager-types\" rel=\"nofollow\">https://docs.python.org/3.6/library/stdtypes.html#context-manager-types</a>\n.. <code>scope</code>: <a href=\"https://docs.pytest.org/en/latest/fixture.html#scope-sharing-a-fixture-instance-across-tests-in-a-class-module-or-session\" rel=\"nofollow\">https://docs.pytest.org/en/latest/fixture.html#scope-sharing-a-fixture-instance-across-tests-in-a-class-module-or-session</a>\n.. <code>pytest doesn't expect fixtures to have markers</code>: <a href=\"https://github.com/pytest-dev/pytest/issues/3664\" rel=\"nofollow\">https://github.com/pytest-dev/pytest/issues/3664</a></p>\n\n          </div>"}, "last_serial": 7112340, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d22a82c17d7814684a0eaf10c9b165eb", "sha256": "a8c3391a1acc7e9ea1e64360079fb9f43d857bcb38a0d2522e29106186ca3168"}, "downloads": -1, "filename": "pytest_ansible_playbook_runner-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d22a82c17d7814684a0eaf10c9b165eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12367, "upload_time": "2019-05-01T09:28:38", "upload_time_iso_8601": "2019-05-01T09:28:38.418783Z", "url": "https://files.pythonhosted.org/packages/4f/9e/a709fff45abd9a17699e8a7d16b586c7a736370f19cf600a6a3242ffbe0f/pytest_ansible_playbook_runner-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5b7fc3e493b798f8d531162c32762a5", "sha256": "b23cd3c50ef9bb6c1d3c8f617e2e9e5c733ad2497c1a6b0d00a58e86cbb4ded4"}, "downloads": -1, "filename": "pytest-ansible-playbook-runner-0.0.1.tar.gz", "has_sig": false, "md5_digest": "c5b7fc3e493b798f8d531162c32762a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11702, "upload_time": "2019-05-01T09:28:41", "upload_time_iso_8601": "2019-05-01T09:28:41.138260Z", "url": "https://files.pythonhosted.org/packages/16/86/6e4d4137c9b7b798d3ee4f7f499798dce141a4f9ac4d83091fe2ba445af1/pytest-ansible-playbook-runner-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e62e866b4eaded086d01017519bbfb95", "sha256": "9d56af89fa84a145e8fa0267ccf11775c46dded4f965d7d7353ff7f8b2dac872"}, "downloads": -1, "filename": "pytest_ansible_playbook_runner-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e62e866b4eaded086d01017519bbfb95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12842, "upload_time": "2019-05-01T11:42:39", "upload_time_iso_8601": "2019-05-01T11:42:39.062784Z", "url": "https://files.pythonhosted.org/packages/fb/aa/3622cb80719675849f4f56424336df403bff30dab9e6af14380fbe7d62d6/pytest_ansible_playbook_runner-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "afc3ee2e7bd72213c378f381044138c3", "sha256": "57b3887e968a576a03e666ef8a0750e05e7fbd268416d3f1e0a9eee00e706b2e"}, "downloads": -1, "filename": "pytest-ansible-playbook-runner-0.0.2.tar.gz", "has_sig": false, "md5_digest": "afc3ee2e7bd72213c378f381044138c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12718, "upload_time": "2019-05-01T11:42:40", "upload_time_iso_8601": "2019-05-01T11:42:40.992580Z", "url": "https://files.pythonhosted.org/packages/c8/b6/2f9f5ddf66fb399ab7be1f80036ec0e36f9d0cb68fd2c3a21c739a27337a/pytest-ansible-playbook-runner-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2486cb79a884b1e2904c963c680605ac", "sha256": "cc299ab1ab9d59248b3b3e9303da66b030bb014891ac0eed613fc73e2dc6bb9c"}, "downloads": -1, "filename": "pytest_ansible_playbook_runner-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "2486cb79a884b1e2904c963c680605ac", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5738, "upload_time": "2020-04-27T14:43:23", "upload_time_iso_8601": "2020-04-27T14:43:23.726594Z", "url": "https://files.pythonhosted.org/packages/f0/1f/a67c52b88a5d3e6bdfc80973dace971b7bf761792cb98b2d5362f38b2b6c/pytest_ansible_playbook_runner-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73de61316d9116818c8611dba201b4a4", "sha256": "b974231e1183e91ccebb90aa9713a3add0e4375ebe4fbdc28429dbbea6068397"}, "downloads": -1, "filename": "pytest-ansible-playbook-runner-0.0.3.tar.gz", "has_sig": false, "md5_digest": "73de61316d9116818c8611dba201b4a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10698, "upload_time": "2020-04-27T14:43:24", "upload_time_iso_8601": "2020-04-27T14:43:24.851873Z", "url": "https://files.pythonhosted.org/packages/b0/88/ca1881b56a6ba31a1dd7b95a271eba01c7ec0136580d4bf2bd7f65816c5e/pytest-ansible-playbook-runner-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3de1599d23def4bca4b557208aaa2e91", "sha256": "593c761fdbe6587866422dd0848a2caa3567cf06e84b0371afc4750755094112"}, "downloads": -1, "filename": "pytest_ansible_playbook_runner-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3de1599d23def4bca4b557208aaa2e91", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5785, "upload_time": "2020-04-27T14:49:11", "upload_time_iso_8601": "2020-04-27T14:49:11.740694Z", "url": "https://files.pythonhosted.org/packages/cc/31/79b4d18e9a55cfeecbffaa75a3d95d8e47055203ebefef8f513106095abd/pytest_ansible_playbook_runner-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c193c5e01fefc7bc69316741bfae8906", "sha256": "b1d3a386ef95164c8c4f4c0c9dbaf5c63748da8126ba4900e4625937b34a97d3"}, "downloads": -1, "filename": "pytest-ansible-playbook-runner-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c193c5e01fefc7bc69316741bfae8906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10682, "upload_time": "2020-04-27T14:49:12", "upload_time_iso_8601": "2020-04-27T14:49:12.950159Z", "url": "https://files.pythonhosted.org/packages/13/6d/9b127a61af38046ebd232cb43be556837889573c27a5ae7cb0c63f631dd1/pytest-ansible-playbook-runner-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "f727eb1fffff073be04a3b7aea273fd9", "sha256": "8bf562c022d243a790c1ebff07479e329a0f5e535606469af30cf852eea1c78c"}, "downloads": -1, "filename": "pytest_ansible_playbook_runner-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f727eb1fffff073be04a3b7aea273fd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12302, "upload_time": "2020-04-27T14:54:24", "upload_time_iso_8601": "2020-04-27T14:54:24.960430Z", "url": "https://files.pythonhosted.org/packages/30/ce/0fb2fcac19216f7d12bb5aec3273c054f6fb13d8ee3408aa3caedfef634c/pytest_ansible_playbook_runner-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d3dde83d7142d920df85d5bae15a9c0", "sha256": "9d02e6f26d2419e39b36630d3755ee53d25d89648f3bc862be1d122825399a67"}, "downloads": -1, "filename": "pytest-ansible-playbook-runner-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5d3dde83d7142d920df85d5bae15a9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14395, "upload_time": "2020-04-27T14:54:26", "upload_time_iso_8601": "2020-04-27T14:54:26.501176Z", "url": "https://files.pythonhosted.org/packages/06/6a/c36624706d52bb9e5c43e139ca92e7db67d2b0cbc8c0f98baa725ceda9bf/pytest-ansible-playbook-runner-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f727eb1fffff073be04a3b7aea273fd9", "sha256": "8bf562c022d243a790c1ebff07479e329a0f5e535606469af30cf852eea1c78c"}, "downloads": -1, "filename": "pytest_ansible_playbook_runner-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f727eb1fffff073be04a3b7aea273fd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12302, "upload_time": "2020-04-27T14:54:24", "upload_time_iso_8601": "2020-04-27T14:54:24.960430Z", "url": "https://files.pythonhosted.org/packages/30/ce/0fb2fcac19216f7d12bb5aec3273c054f6fb13d8ee3408aa3caedfef634c/pytest_ansible_playbook_runner-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d3dde83d7142d920df85d5bae15a9c0", "sha256": "9d02e6f26d2419e39b36630d3755ee53d25d89648f3bc862be1d122825399a67"}, "downloads": -1, "filename": "pytest-ansible-playbook-runner-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5d3dde83d7142d920df85d5bae15a9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14395, "upload_time": "2020-04-27T14:54:26", "upload_time_iso_8601": "2020-04-27T14:54:26.501176Z", "url": "https://files.pythonhosted.org/packages/06/6a/c36624706d52bb9e5c43e139ca92e7db67d2b0cbc8c0f98baa725ceda9bf/pytest-ansible-playbook-runner-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:26 2020"}