{"info": {"author": "Roger Marsh", "author_email": "roger.marsh@solentware.co.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 7 - Inactive", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Database", "Topic :: Software Development"], "description": "==========================================\nDPT database API wrappers built using SWIG\n==========================================\n\n.. contents::\n\n\nDescription\n===========\n\nThis package provides Python applications with the database API used by DPT.\n\nDPT is a multi-user database system for Microsoft Windows.\n\nThe Python application can be as simple as a single-threaded process embedding the DPT API.\n\nThe package is available only as a source distribution.  It is built with the `MinGW`_ toolchain and `SWIG`_, either on Microsoft Windows or on `Wine`_ on an operating system able to run `Wine`_.\n\nThe package is known to work with MinGW-8.2.0 but not with MinGW-5.3.0, MinGW-4.9.3, or MinGW-4.8.1.  Use dpt3.0-dptdb-0.6.7, or later 0.6.n versions, with earlier versions of MinGW if necessary.\n\nAt December 2019 this package cannot be used with Python 3.8 because the statement:\n\nimport dptdb.dptapi\n\nfails.\n\nSetup will download the DPT API `source`_ and `documentation`_ zip files if an internet connection is available.\n\nThere is no separate documentation for Python.\n\n\nInstallation Instructions\n=========================\n\nMicrosoft Windows\n-----------------\n\n   The package can be installed and used with Pythons 2.7, 3.3, 3.4, 3.5, 3.6, and 3.7.\n\n   The package can be installed but not used with Python 3.8.\n\n   Build dependencies\n\n      * `Python`_ 2.7 or later \n      * `setuptools`_\n      * `SWIG`_ 4.0.1 or later\n      * `MinGW Installation Manager`_\n\n      Download and install the MinGW Installation Manager.\n\n      Follow the `MinGW`_ instructions to install MSYS and at least the MinGW base and gcc-g++ compiler suite.\n\n      Download and install SWIG and Python.\n\n      Download and install setuptools in Python if not already present.\n\n   Put the directory containing the MinGW runtime, usually C:\\MinGW\\bin, in the path.\n\n   Install the package by typing\n\n       python setup.py install\n\n   at the command prompt of an MSYS shell with setup.py in the current directory.\n\n   Runtime dependencies\n\n   * Python 2.7 or later provided the version (2.7 for example) is the same as the Python used to build dptdb.\n   * The MinGW runtime used to build dptdb.\n\nWine\n----\n\n   These installs were done on particular versions of FreeBSD.  I do not know what happens elsewhere.\n\n   The package can be installed and used with Pythons 2.7, 3.3, 3.4, 3.5, 3.6, and 3.7, under the emulators/wine port on FreeBSD 11.3 i386.\n\n   The package can be installed but not used with Python 3.8 under the emulators/wine port on FreeBSD 11.3 i386.\n\n   The package can be installed and used with Pythons 2.7, 3.3, 3.4, and 3.5, under the emulators/i386-wine port on FreeBSD 12.1 amd64.\n\n   The package cannot be used with Pythons 3.6, 3.7, and 3.8, under the emulators/i386-wine port on FreeBSD 12.1 amd64.  The point of failure varies with version of Python.\n\n   For Python 3.4 and later, a user-only install on Microsoft Windows is copied to Wine.\n\n   Build dependencies\n\n      * `Wine`_ \n      * `Python`_ 2.7 or later (Microsoft Windows versions under Wine) \n      * `setuptools`_\n      * `SWIG`_ 4.0.1 or later\n      * `MinGW Installation Manager`_\n      * 'GNU make'_ (called gmake on BSD systems, usually make otherwise)\n\n      Download and install Wine.\n\n      Download and install the MinGW Installation Manager under Wine.\n\n      Follow the `MinGW`_ instructions to install at least the MinGW base and gcc-g++ compiler suite.\n\n      Download and install Python if not already present. (Your distribution almost certainly provides Python.)\n\n      Download and install GNU make if not already present. (Your distribution almost certainly provides GNU make.)\n\n      Download and install Microsoft Windows versions of SWIG and Python under Wine.\n\n      Download and install setuptools in Python if not already present.\n\n      Download and install setuptools in the Python installed under Wine if not already present.\n\n   At Python 3.4 and later it is not possible to use the Windows installers to install Python under Wine.  Several problem forums suggest copying a 'user-only' install under Microsoft Windows to Wine as a workaround.\n\n   Use 'regedit' to put the directory containing the MinGW runtime, usually C:\\MinGW\\bin, in the path.\n\n   Install the package by typing\n\n       python setup.py install\n\n   at the command prompt of a shell with setup.py in the current directory.\n\n   'python' should be the same version as the one under Wine where dptdb is being installed.  If this is not possible the command must be something like:\n\n       python3.8 setup.py install PATH_TO_PYTHON=C:/Python27 PYTHON_VERSION=27\n\n    The PATH_TO_PYTHON can be omitted if the Python on Wine is at it's default location for a 'user-only' install.  C:/Users/[user]/AppData is accepted as the default location if C:/Users/[user]/AppData/Local/Programs does not exist.\n\n   Runtime dependencies\n\n   * Python 2.7 or later provided the version (2.7 for example) is the same as the Python used to build dptdb.\n   * The MinGW runtime used to build dptdb.\n\n\nA directory named like dpt3.0_dptdb-0.5-py2.7.egg is put in site-packages by the install command.  The name means version 0.5 of dptdb for Python 2.7 wrapping version 3.0 of the DPT API.  This directory contains the dptdb and EGG-INFO directories.\n\nThe DPT documentation zip file is in the dptdb directory.\n\n\nSample code\n===========\n\nThe dptdb/test directory contains a simple application which populates a database, using some contrived data, and does some simple data retrievals.\n\nThis can be run on Microsoft Windows by typing\n\n   python pydpt-test.py\n\nat the command prompt of a shell with pydpt-test.py in the current directory.\n\nThe equivalent command to run the sample application under Wine is\n\n   wine python pydpt-test.py\n\nat the command prompt of a shell with pydpt-test.py in the current directory.\n\nYou may need to use '<path to python>/python pydpt-test.py' if several versions of Python are installed.\n\n\nThe sample application offers seven options which create databases with different numbers of records.  Each record has 6 fields and all fields are indexed.\n\n   One option, called normal, adds 246,625 records to a database in a 16 Mb file in about 3.33 minutes with transaction backout enabled.\n\n   The shortest option adds 246,625 records to a database in a 16 Mb file in about 0.6 minutes with transaction backout disabled.\n\n   The longest option adds 7,892,000 records to a database in a 526 Mb file in about 18.75 minutes with transaction backout disabled.\n\nThe figures are for a 2Gb 667MHz memory, 1.8GHz CPU, solid state drive, Microsoft Windows XP installation.\n\n\nRestrictions\n============\n\nWhen used under Wine, very large single-step loads will fail through running out of memory because the test to decide when to complete a chunk of the load and start a new one never says 'do so'.  One workaround is to do multi-step loads, potentially a lot slower as explained in `relnotes_V2RX.html`_ from DPT_V3R0_DOCS.ZIP, which was the only way to do this before version 2 release 14 of the DPT API.  Another is to split the load into small enough chunks somehow before invoking the single-step process for each chunk.\n\nThe \"Try to force 'multi-chunk' on 32Gb memory\" option does enough index updating, see slowest option under `Sample code`_ for detail, to cause this failure under Wine on a 2Gb memory machine.\n\nThis is known to happen on FreeBSD.  It is possible it does not happen on other Operating Systems able to run Wine.\n\n\nNotes\n=====\n\nThis package is built from `DPT_V3R0_DBMS.ZIP`_, a recent DPT API source code distribution, by default.\n\nYou will need the `DPT API documentation`_ to use this package.  This is included as `DBAPI.html`_ in DPT_V3R0_DOCS.ZIP.\n\nThe DPT documentation zip file is in a directory named like C:/Python27/Lib/site-packages/dpt3.0_dptdb-0.5-py2.7.egg/dptdb, using the example at the end of `Installation Instructions`_.\n\nThe dptapi.py and _dptapi.pyd modules are built using `SWIG`_ and `MinGW`_ for a particular version of Python.  In particular a _dptapi.pyd built for Python 2.7 will work only on Python 2.7 and so on. \n\nThe `DPT API distribution`_ contains independent scripts and instructions to build dptdb mentioning much earlier versions of the build dependencies.\n\nThis package will work only on a Python built for the Microsoft Windows platform.\n\n\n.. _DPT API documentation: http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\n.. _documentation: http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\n.. _DBAPI.html: http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\n.. _relnotes_V2RX.html: http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\n.. _DPT_V3R0_DBMS.ZIP: http://solentware.co.uk/files/DPT_V3R0_DBMS.ZIP\n.. _DPT API distribution: http://solentware.co.uk/files/DPT_V3R0_DBMS.ZIP\n.. _source: http://solentware.co.uk/files/DPT_V3R0_DBMS.ZIP\n.. _Python: https://python.org\n.. _setuptools:  https://pypi.python.org/pypi/setuptools\n.. _SWIG: http://swig.org\n.. _MinGW: http://mingw.org\n.. _Wine: https://winehq.org\n.. _MinGW Installation Manager: http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download\n.. _GNU make: https://www.gnu.org/software/make/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.solentware.co.uk", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "dpt3.0-dptdb", "package_url": "https://pypi.org/project/dpt3.0-dptdb/", "platform": "Microsoft Windows", "project_url": "https://pypi.org/project/dpt3.0-dptdb/", "project_urls": {"Homepage": "http://www.solentware.co.uk"}, "release_url": "https://pypi.org/project/dpt3.0-dptdb/0.7.3/", "requires_dist": null, "requires_python": "", "summary": "DPT database API wrappers built using SWIG", "version": "0.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#description\" id=\"id2\" rel=\"nofollow\">Description</a></li>\n<li><a href=\"#installation-instructions\" id=\"id3\" rel=\"nofollow\">Installation Instructions</a><ul>\n<li><a href=\"#microsoft-windows\" id=\"id4\" rel=\"nofollow\">Microsoft Windows</a></li>\n<li><a href=\"#wine\" id=\"id5\" rel=\"nofollow\">Wine</a></li>\n</ul>\n</li>\n<li><a href=\"#sample-code\" id=\"id6\" rel=\"nofollow\">Sample code</a></li>\n<li><a href=\"#restrictions\" id=\"id7\" rel=\"nofollow\">Restrictions</a></li>\n<li><a href=\"#notes\" id=\"id8\" rel=\"nofollow\">Notes</a></li>\n</ul>\n</div>\n<div id=\"description\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Description</a></h2>\n<p>This package provides Python applications with the database API used by DPT.</p>\n<p>DPT is a multi-user database system for Microsoft Windows.</p>\n<p>The Python application can be as simple as a single-threaded process embedding the DPT API.</p>\n<p>The package is available only as a source distribution.  It is built with the <a href=\"http://mingw.org\" rel=\"nofollow\">MinGW</a> toolchain and <a href=\"http://swig.org\" rel=\"nofollow\">SWIG</a>, either on Microsoft Windows or on <a href=\"https://winehq.org\" rel=\"nofollow\">Wine</a> on an operating system able to run <a href=\"https://winehq.org\" rel=\"nofollow\">Wine</a>.</p>\n<p>The package is known to work with MinGW-8.2.0 but not with MinGW-5.3.0, MinGW-4.9.3, or MinGW-4.8.1.  Use dpt3.0-dptdb-0.6.7, or later 0.6.n versions, with earlier versions of MinGW if necessary.</p>\n<p>At December 2019 this package cannot be used with Python 3.8 because the statement:</p>\n<p>import dptdb.dptapi</p>\n<p>fails.</p>\n<p>Setup will download the DPT API <a href=\"http://solentware.co.uk/files/DPT_V3R0_DBMS.ZIP\" rel=\"nofollow\">source</a> and <a href=\"http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\" rel=\"nofollow\">documentation</a> zip files if an internet connection is available.</p>\n<p>There is no separate documentation for Python.</p>\n</div>\n<div id=\"installation-instructions\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation Instructions</a></h2>\n<div id=\"microsoft-windows\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Microsoft Windows</a></h3>\n<blockquote>\n<p>The package can be installed and used with Pythons 2.7, 3.3, 3.4, 3.5, 3.6, and 3.7.</p>\n<p>The package can be installed but not used with Python 3.8.</p>\n<p>Build dependencies</p>\n<blockquote>\n<ul>\n<li><a href=\"https://python.org\" rel=\"nofollow\">Python</a> 2.7 or later</li>\n<li><a href=\"https://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a></li>\n<li><a href=\"http://swig.org\" rel=\"nofollow\">SWIG</a> 4.0.1 or later</li>\n<li><a href=\"http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download\" rel=\"nofollow\">MinGW Installation Manager</a></li>\n</ul>\n<p>Download and install the MinGW Installation Manager.</p>\n<p>Follow the <a href=\"http://mingw.org\" rel=\"nofollow\">MinGW</a> instructions to install MSYS and at least the MinGW base and gcc-g++ compiler suite.</p>\n<p>Download and install SWIG and Python.</p>\n<p>Download and install setuptools in Python if not already present.</p>\n</blockquote>\n<p>Put the directory containing the MinGW runtime, usually C:MinGWbin, in the path.</p>\n<p>Install the package by typing</p>\n<blockquote>\npython setup.py install</blockquote>\n<p>at the command prompt of an MSYS shell with setup.py in the current directory.</p>\n<p>Runtime dependencies</p>\n<ul>\n<li>Python 2.7 or later provided the version (2.7 for example) is the same as the Python used to build dptdb.</li>\n<li>The MinGW runtime used to build dptdb.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"wine\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Wine</a></h3>\n<blockquote>\n<p>These installs were done on particular versions of FreeBSD.  I do not know what happens elsewhere.</p>\n<p>The package can be installed and used with Pythons 2.7, 3.3, 3.4, 3.5, 3.6, and 3.7, under the emulators/wine port on FreeBSD 11.3 i386.</p>\n<p>The package can be installed but not used with Python 3.8 under the emulators/wine port on FreeBSD 11.3 i386.</p>\n<p>The package can be installed and used with Pythons 2.7, 3.3, 3.4, and 3.5, under the emulators/i386-wine port on FreeBSD 12.1 amd64.</p>\n<p>The package cannot be used with Pythons 3.6, 3.7, and 3.8, under the emulators/i386-wine port on FreeBSD 12.1 amd64.  The point of failure varies with version of Python.</p>\n<p>For Python 3.4 and later, a user-only install on Microsoft Windows is copied to Wine.</p>\n<p>Build dependencies</p>\n<blockquote>\n<ul>\n<li><a href=\"https://winehq.org\" rel=\"nofollow\">Wine</a></li>\n<li><a href=\"https://python.org\" rel=\"nofollow\">Python</a> 2.7 or later (Microsoft Windows versions under Wine)</li>\n<li><a href=\"https://pypi.python.org/pypi/setuptools\" rel=\"nofollow\">setuptools</a></li>\n<li><a href=\"http://swig.org\" rel=\"nofollow\">SWIG</a> 4.0.1 or later</li>\n<li><a href=\"http://sourceforge.net/projects/mingw/files/Installer/mingw-get-setup.exe/download\" rel=\"nofollow\">MinGW Installation Manager</a></li>\n<li>\u2018GNU make\u2019_ (called gmake on BSD systems, usually make otherwise)</li>\n</ul>\n<p>Download and install Wine.</p>\n<p>Download and install the MinGW Installation Manager under Wine.</p>\n<p>Follow the <a href=\"http://mingw.org\" rel=\"nofollow\">MinGW</a> instructions to install at least the MinGW base and gcc-g++ compiler suite.</p>\n<p>Download and install Python if not already present. (Your distribution almost certainly provides Python.)</p>\n<p>Download and install GNU make if not already present. (Your distribution almost certainly provides GNU make.)</p>\n<p>Download and install Microsoft Windows versions of SWIG and Python under Wine.</p>\n<p>Download and install setuptools in Python if not already present.</p>\n<p>Download and install setuptools in the Python installed under Wine if not already present.</p>\n</blockquote>\n<p>At Python 3.4 and later it is not possible to use the Windows installers to install Python under Wine.  Several problem forums suggest copying a \u2018user-only\u2019 install under Microsoft Windows to Wine as a workaround.</p>\n<p>Use \u2018regedit\u2019 to put the directory containing the MinGW runtime, usually C:MinGWbin, in the path.</p>\n<p>Install the package by typing</p>\n<blockquote>\npython setup.py install</blockquote>\n<p>at the command prompt of a shell with setup.py in the current directory.</p>\n<p>\u2018python\u2019 should be the same version as the one under Wine where dptdb is being installed.  If this is not possible the command must be something like:</p>\n<blockquote>\n<blockquote>\npython3.8 setup.py install PATH_TO_PYTHON=C:/Python27 PYTHON_VERSION=27</blockquote>\n<p>The PATH_TO_PYTHON can be omitted if the Python on Wine is at it\u2019s default location for a \u2018user-only\u2019 install.  C:/Users/[user]/AppData is accepted as the default location if C:/Users/[user]/AppData/Local/Programs does not exist.</p>\n</blockquote>\n<p>Runtime dependencies</p>\n<ul>\n<li>Python 2.7 or later provided the version (2.7 for example) is the same as the Python used to build dptdb.</li>\n<li>The MinGW runtime used to build dptdb.</li>\n</ul>\n</blockquote>\n<p>A directory named like dpt3.0_dptdb-0.5-py2.7.egg is put in site-packages by the install command.  The name means version 0.5 of dptdb for Python 2.7 wrapping version 3.0 of the DPT API.  This directory contains the dptdb and EGG-INFO directories.</p>\n<p>The DPT documentation zip file is in the dptdb directory.</p>\n</div>\n</div>\n<div id=\"sample-code\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Sample code</a></h2>\n<p>The dptdb/test directory contains a simple application which populates a database, using some contrived data, and does some simple data retrievals.</p>\n<p>This can be run on Microsoft Windows by typing</p>\n<blockquote>\npython pydpt-test.py</blockquote>\n<p>at the command prompt of a shell with pydpt-test.py in the current directory.</p>\n<p>The equivalent command to run the sample application under Wine is</p>\n<blockquote>\nwine python pydpt-test.py</blockquote>\n<p>at the command prompt of a shell with pydpt-test.py in the current directory.</p>\n<p>You may need to use \u2018&lt;path to python&gt;/python pydpt-test.py\u2019 if several versions of Python are installed.</p>\n<p>The sample application offers seven options which create databases with different numbers of records.  Each record has 6 fields and all fields are indexed.</p>\n<blockquote>\n<p>One option, called normal, adds 246,625 records to a database in a 16 Mb file in about 3.33 minutes with transaction backout enabled.</p>\n<p>The shortest option adds 246,625 records to a database in a 16 Mb file in about 0.6 minutes with transaction backout disabled.</p>\n<p>The longest option adds 7,892,000 records to a database in a 526 Mb file in about 18.75 minutes with transaction backout disabled.</p>\n</blockquote>\n<p>The figures are for a 2Gb 667MHz memory, 1.8GHz CPU, solid state drive, Microsoft Windows XP installation.</p>\n</div>\n<div id=\"restrictions\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Restrictions</a></h2>\n<p>When used under Wine, very large single-step loads will fail through running out of memory because the test to decide when to complete a chunk of the load and start a new one never says \u2018do so\u2019.  One workaround is to do multi-step loads, potentially a lot slower as explained in <a href=\"http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\" rel=\"nofollow\">relnotes_V2RX.html</a> from DPT_V3R0_DOCS.ZIP, which was the only way to do this before version 2 release 14 of the DPT API.  Another is to split the load into small enough chunks somehow before invoking the single-step process for each chunk.</p>\n<p>The \u201cTry to force \u2018multi-chunk\u2019 on 32Gb memory\u201d option does enough index updating, see slowest option under <a href=\"#sample-code\" rel=\"nofollow\">Sample code</a> for detail, to cause this failure under Wine on a 2Gb memory machine.</p>\n<p>This is known to happen on FreeBSD.  It is possible it does not happen on other Operating Systems able to run Wine.</p>\n</div>\n<div id=\"notes\">\n<h2><a href=\"#id8\" rel=\"nofollow\">Notes</a></h2>\n<p>This package is built from <a href=\"http://solentware.co.uk/files/DPT_V3R0_DBMS.ZIP\" rel=\"nofollow\">DPT_V3R0_DBMS.ZIP</a>, a recent DPT API source code distribution, by default.</p>\n<p>You will need the <a href=\"http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\" rel=\"nofollow\">DPT API documentation</a> to use this package.  This is included as <a href=\"http://solentware.co.uk/files/DPT_V3R0_DOCS.ZIP\" rel=\"nofollow\">DBAPI.html</a> in DPT_V3R0_DOCS.ZIP.</p>\n<p>The DPT documentation zip file is in a directory named like C:/Python27/Lib/site-packages/dpt3.0_dptdb-0.5-py2.7.egg/dptdb, using the example at the end of <a href=\"#installation-instructions\" rel=\"nofollow\">Installation Instructions</a>.</p>\n<p>The dptapi.py and _dptapi.pyd modules are built using <a href=\"http://swig.org\" rel=\"nofollow\">SWIG</a> and <a href=\"http://mingw.org\" rel=\"nofollow\">MinGW</a> for a particular version of Python.  In particular a _dptapi.pyd built for Python 2.7 will work only on Python 2.7 and so on.</p>\n<p>The <a href=\"http://solentware.co.uk/files/DPT_V3R0_DBMS.ZIP\" rel=\"nofollow\">DPT API distribution</a> contains independent scripts and instructions to build dptdb mentioning much earlier versions of the build dependencies.</p>\n<p>This package will work only on a Python built for the Microsoft Windows platform.</p>\n</div>\n\n          </div>"}, "last_serial": 6235905, "releases": {"0.6.1": [{"comment_text": "", "digests": {"md5": "0fa36bd07dca1088c8cca3e5d22c62fd", "sha256": "3239a05c3e8c58b13e008b31dc5562dd3cbeb61342229847bc1d18ed9a564c55"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.6.1.zip", "has_sig": false, "md5_digest": "0fa36bd07dca1088c8cca3e5d22c62fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30473, "upload_time": "2015-02-20T20:46:54", "upload_time_iso_8601": "2015-02-20T20:46:54.966028Z", "url": "https://files.pythonhosted.org/packages/ab/a0/5084c7a646c54e8cf8939c5b6af4778a7fac95591390b9ccebf7bd520055/dpt3.0-dptdb-0.6.1.zip", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "9581d036bf952365db95ec979db8feb7", "sha256": "f1b6be665d266d46e23d3cee7c7757795c9b3a5a19ec129f5c9521435c917a34"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.6.4.zip", "has_sig": false, "md5_digest": "9581d036bf952365db95ec979db8feb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33270, "upload_time": "2018-09-29T10:11:46", "upload_time_iso_8601": "2018-09-29T10:11:46.443170Z", "url": "https://files.pythonhosted.org/packages/b6/72/d740b8b22edaaee4febfcf778d64a5d7d12f83a789426ee80fa504cbe51d/dpt3.0-dptdb-0.6.4.zip", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "dd4e3e0667415869101e590789331e9c", "sha256": "2b23bfc2cb9631baf518adcd5572ea6e0cafdf3995b8da1954552c22b7c237de"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.7.0.zip", "has_sig": false, "md5_digest": "dd4e3e0667415869101e590789331e9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33801, "upload_time": "2018-10-05T23:46:11", "upload_time_iso_8601": "2018-10-05T23:46:11.814628Z", "url": "https://files.pythonhosted.org/packages/fc/5b/d91698df74d08b3272da81eb3b6c8497ee3337831fb2b39edf13b4246185/dpt3.0-dptdb-0.7.0.zip", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "8bf8c51dbcd95f548997ca21fe9fe5ba", "sha256": "5368f980ab19d54a05fd0f3b1b5175c85d000af6f84486064f9f0583129eca81"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.7.1.zip", "has_sig": false, "md5_digest": "8bf8c51dbcd95f548997ca21fe9fe5ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33619, "upload_time": "2019-11-11T12:42:22", "upload_time_iso_8601": "2019-11-11T12:42:22.882630Z", "url": "https://files.pythonhosted.org/packages/15/4c/648c873e38e515b0aa33702ad747574ef47c0dfc476a64f9ef561c448eb8/dpt3.0-dptdb-0.7.1.zip", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "c1f2eef53f1261eea6a63a8c47d2105c", "sha256": "1bf7c7721c811729b520586f57fc44566efcdc364ab9437ba943219539ebc61e"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.7.2.zip", "has_sig": false, "md5_digest": "c1f2eef53f1261eea6a63a8c47d2105c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37066, "upload_time": "2019-11-24T16:36:44", "upload_time_iso_8601": "2019-11-24T16:36:44.504648Z", "url": "https://files.pythonhosted.org/packages/a5/77/e8e6c32482f152c6a52714ce47a3aa6bfff1b2a84812a43cfed012a94da4/dpt3.0-dptdb-0.7.2.zip", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "9fdd80a5b0a2b57db63be46be591da44", "sha256": "a616d6a6f0976e8564d53a7b2f2e8ab184b86b170756ef838b2cbfc8fe65c204"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.7.3.zip", "has_sig": false, "md5_digest": "9fdd80a5b0a2b57db63be46be591da44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39397, "upload_time": "2019-12-03T16:16:46", "upload_time_iso_8601": "2019-12-03T16:16:46.835269Z", "url": "https://files.pythonhosted.org/packages/82/ec/2b60ab2e3a3a806e1bc0fab0bbfc18ac0cc8e411a7f3f3a1d19ed7a30c72/dpt3.0-dptdb-0.7.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9fdd80a5b0a2b57db63be46be591da44", "sha256": "a616d6a6f0976e8564d53a7b2f2e8ab184b86b170756ef838b2cbfc8fe65c204"}, "downloads": -1, "filename": "dpt3.0-dptdb-0.7.3.zip", "has_sig": false, "md5_digest": "9fdd80a5b0a2b57db63be46be591da44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39397, "upload_time": "2019-12-03T16:16:46", "upload_time_iso_8601": "2019-12-03T16:16:46.835269Z", "url": "https://files.pythonhosted.org/packages/82/ec/2b60ab2e3a3a806e1bc0fab0bbfc18ac0cc8e411a7f3f3a1d19ed7a30c72/dpt3.0-dptdb-0.7.3.zip", "yanked": false}], "timestamp": "Fri May  8 00:49:59 2020"}