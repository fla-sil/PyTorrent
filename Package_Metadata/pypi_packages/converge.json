{"info": {"author": "Shekhar Tiwatne", "author_email": "pythonic@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3"], "description": ".. contents::\n.. sectnum::\n\n\nWhat is it?\n-----------\n\nIf you are a Python developer who likes to keep application configuration in simple Python modules and that your app have some default settings and production/dev/test setting files, **converge** can help you merge settings and load desired application settings.\n\n\n.. image:: https://asciinema.org/a/155855.png\n        :target: https://asciinema.org/a/155855?autoplay=1&speed=3\n    \n\nGetting started\n----------------\n\nEasy to use\n~~~~~~~~~~~~\n\n.. code:: bash\n\n    default_settings.py\n    -------------------\n    SERVER_PORT = 8000\n    DOMAIN = 'example.com'\n    ADMIN_EMAIL = 'admin@example.com'\n\n    dev_settings.py\n    ---------------\n    SERVER_PORT = 9000\n\n    \n.. code:: python\n\n    import settings\n    print(settings.SERVER_PORT)  # 9000\n    print(settings.DOMAIN)  # example.com\n    print(settings.get('VAR_THAT_DOESNT_EXIST'))  # None\n\n\nInstall\n~~~~~~~\n\n.. code:: bash\n\n    pip install converge\n\n.convergerc\n------------\n\n.convergerc file helps converge choose application mode and in turn load correct settings file. \n\nSupported directives\n~~~~~~~~~~~~~~~~~~~~\n\n_All directives are optional._\n\n**APP_MODE**\n\nValid values are\n\n- prod\n- dev\n- test \n- staging\n- beta\n\nBased on ``mode`` appropriate settings module would be used (if available)\n\n**SETTINGS_DIR**\n\nIf your settings files are in different directory, use SETTINGS_DIR to point converge to correct path. \n\n.. note:: Remember to drop __init__.py in settings directory.\n\n\n**GIT_SETTINGS_REPO**\n\nFetching application settings from a git repository is supported too. If such configuration is specified, git repository is cloned into `SETTINGS_DIR`.\n\n**GIT_SETTINGS_SUBDIR**\n\nIn case you \n- use same git repository to host configurations of more than one applications and\n- say settings files are in different subdirectories\n\nExample\n\n::\n\n  my-git-repo/\n    |\n    |- myapp1\n    |    |\n    |    |- default_settings.py\n    |    |- prod_settings.py\n    |\n    |\n    |- myapp2\n\n::\n\n    cat .convergerc\n\n    SETTINGS_DIR = 'appsettings'\n    GIT_SETTINGS_REPO = 'git@github.com:shon/converge-test-settings.git'\n    GIT_SETTINGS_SUBDIR = 'myapp1'\n\nIn this case all \\*_settings.py files in myapp1/ would be copied to appsettings.\n\n\n**Example**\n\n::\n\n    .convergerc\n    -----------\n\n    APP_MODE = 'test'\n    SETTINGS_DIR = 'settings'\n    GIT_SETTINGS_REPO = 'git@github.com:shon/converge-test-settings.git'\n    GIT_SETTINGS_SUBDIR = 'myapp1'\n\n\nSupported settings files\n-------------------------\n\n-  Defaults: default_settings.py\n\n-  Mode\n    - production: prod_settings.py\n    - development: dev_settings.py\n    - test: test_settings.py\n    - staging: staging_settings.py\n    - beta: beta_settings.py\n\n- Deployment specific: site_settings.py\n\n\nGuidelines\n-----------\n\nSettings files are usual Python files that can contain valid python code however here are some guidelines for user\n\n- Use module variables for global application wide configuration\n- Use UPPERCASE while naming settings variables\n- For values prefer basic python datatypes such as string, integer,\n  tuples\n- eg. ``SERVER_PORT = 1234``\n- Avoid complex python operations\n- Use simple classes for config sections\n    .. code:: python\n\n        class DB:\n            HOST = 'db.example.com'\n            PORT = 1234\n\n-  Use simple string operations to avoid repetition\n    .. code:: python\n\n        BASE_DOMAIN = 'example.com'\n        API_URL = 'api.' + BASE_DOMAIN``\n\nOverriding settings\n-------------------\n\nDefining module veriables in site_settings.py\n\nExample\n~~~~~~~\n\n**default_settings.py**\n\n``SERVER_PORT = 9999``\n\n**site_settings.py**\n\n``SERVER_PORT = 8888``\n\nOverriding partial settings\n---------------------------\n\nExample:\n\n**default_settings.py**\n\n.. code:: python\n\n    class DB:\n        HOST = 'db.example.com'\n        PORT = 1234\n\n**site_settings.py**\n\n.. code:: python\n\n    DB.PORT = 1111\n\n(Slightly) Advanced usage\n---------------------------\nIn case if you want to keep all settings.py files in a directory. Use `SETTINGS_DIR` directive in .convergerc file.\n\nUsing SETTINGS_DIR\n~~~~~~~~~~~~~~~~~~~\n\n\n.. code:: bash\n    \n    >> cat .convergerc\n    \n    APP_MODE = 'prod'\n    SETTINGS_DIR = 'settings/fat_server'\n\nThis is useful when you have to deploy multiple instances of an app with different configs\n\n::\n\n    `-- settings/\n         |\n         |-- server1/\n         |      |\n         |      |--default_settings.py\n         |      |--prod_settings.py\n         |\n         |-- server2/\n         |      |--default_settings.py\n         |      |--prod_settings.py\n         |\n         |\n\nUsing environment variables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIt is possible use environment variables, which is useful in cases wheere you want to start multiple instances of same app directory.\nAny of the supported directive can exported as environment variable.\n\n\n.. code:: bash\n\n   export SETTINGS_DIR='settings/site1'\n   gunicorn --workers=2 service:app\n\n   export SETTINGS_DIR='settings/site2'\n   gunicorn --workers=2 service:app\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/converge/", "keywords": "", "license": "http://www.opensource.org/licenses/mit-license.php", "maintainer": "", "maintainer_email": "", "name": "converge", "package_url": "https://pypi.org/project/converge/", "platform": "", "project_url": "https://pypi.org/project/converge/", "project_urls": {"Homepage": "http://pypi.python.org/pypi/converge/"}, "release_url": "https://pypi.org/project/converge/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Ultra simple settings management for (only) Python apps", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#what-is-it\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0What is it?</a></li>\n<li><a href=\"#getting-started\" id=\"id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Getting started</a><ul>\n<li><a href=\"#easy-to-use\" id=\"id3\" rel=\"nofollow\">2.1\u00a0\u00a0\u00a0Easy to use</a></li>\n<li><a href=\"#install\" id=\"id4\" rel=\"nofollow\">2.2\u00a0\u00a0\u00a0Install</a></li>\n</ul>\n</li>\n<li><a href=\"#convergerc\" id=\"id5\" rel=\"nofollow\">3\u00a0\u00a0\u00a0.convergerc</a><ul>\n<li><a href=\"#supported-directives\" id=\"id6\" rel=\"nofollow\">3.1\u00a0\u00a0\u00a0Supported directives</a></li>\n</ul>\n</li>\n<li><a href=\"#supported-settings-files\" id=\"id7\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Supported settings files</a></li>\n<li><a href=\"#guidelines\" id=\"id8\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Guidelines</a></li>\n<li><a href=\"#overriding-settings\" id=\"id9\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Overriding settings</a><ul>\n<li><a href=\"#example\" id=\"id10\" rel=\"nofollow\">6.1\u00a0\u00a0\u00a0Example</a></li>\n</ul>\n</li>\n<li><a href=\"#overriding-partial-settings\" id=\"id11\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Overriding partial settings</a></li>\n<li><a href=\"#slightly-advanced-usage\" id=\"id12\" rel=\"nofollow\">8\u00a0\u00a0\u00a0(Slightly) Advanced usage</a><ul>\n<li><a href=\"#using-settings-dir\" id=\"id13\" rel=\"nofollow\">8.1\u00a0\u00a0\u00a0Using SETTINGS_DIR</a></li>\n<li><a href=\"#using-environment-variables\" id=\"id14\" rel=\"nofollow\">8.2\u00a0\u00a0\u00a0Using environment variables</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"what-is-it\">\n<h2><a href=\"#id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0What is it?</a></h2>\n<p>If you are a Python developer who likes to keep application configuration in simple Python modules and that your app have some default settings and production/dev/test setting files, <strong>converge</strong> can help you merge settings and load desired application settings.</p>\n<a href=\"https://asciinema.org/a/155855?autoplay=1&amp;speed=3\" rel=\"nofollow\"><img alt=\"https://asciinema.org/a/155855.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8d02a37f6a054bfc86326934544eeff32801d73c/68747470733a2f2f61736369696e656d612e6f72672f612f3135353835352e706e67\"></a>\n</div>\n<div id=\"getting-started\">\n<h2><a href=\"#id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Getting started</a></h2>\n<div id=\"easy-to-use\">\n<h3><a href=\"#id3\" rel=\"nofollow\">2.1\u00a0\u00a0\u00a0Easy to use</a></h3>\n<pre>default_settings.py\n-------------------\n<span class=\"nv\">SERVER_PORT</span> <span class=\"o\">=</span> <span class=\"m\">8000</span>\n<span class=\"nv\">DOMAIN</span> <span class=\"o\">=</span> <span class=\"s1\">'example.com'</span>\n<span class=\"nv\">ADMIN_EMAIL</span> <span class=\"o\">=</span> <span class=\"s1\">'admin@example.com'</span>\n\ndev_settings.py\n---------------\n<span class=\"nv\">SERVER_PORT</span> <span class=\"o\">=</span> <span class=\"m\">9000</span>\n</pre>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">settings</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">SERVER_PORT</span><span class=\"p\">)</span>  <span class=\"c1\"># 9000</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">DOMAIN</span><span class=\"p\">)</span>  <span class=\"c1\"># example.com</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'VAR_THAT_DOESNT_EXIST'</span><span class=\"p\">))</span>  <span class=\"c1\"># None</span>\n</pre>\n</div>\n<div id=\"install\">\n<h3><a href=\"#id4\" rel=\"nofollow\">2.2\u00a0\u00a0\u00a0Install</a></h3>\n<pre>pip install converge\n</pre>\n</div>\n</div>\n<div id=\"convergerc\">\n<h2><a href=\"#id5\" rel=\"nofollow\">3\u00a0\u00a0\u00a0.convergerc</a></h2>\n<p>.convergerc file helps converge choose application mode and in turn load correct settings file.</p>\n<div id=\"supported-directives\">\n<h3><a href=\"#id6\" rel=\"nofollow\">3.1\u00a0\u00a0\u00a0Supported directives</a></h3>\n<p>_All directives are optional._</p>\n<p><strong>APP_MODE</strong></p>\n<p>Valid values are</p>\n<ul>\n<li>prod</li>\n<li>dev</li>\n<li>test</li>\n<li>staging</li>\n<li>beta</li>\n</ul>\n<p>Based on <tt>mode</tt> appropriate settings module would be used (if available)</p>\n<p><strong>SETTINGS_DIR</strong></p>\n<p>If your settings files are in different directory, use SETTINGS_DIR to point converge to correct path.</p>\n<div>\n<p>Note</p>\n<p>Remember to drop __init__.py in settings directory.</p>\n</div>\n<p><strong>GIT_SETTINGS_REPO</strong></p>\n<p>Fetching application settings from a git repository is supported too. If such configuration is specified, git repository is cloned into <cite>SETTINGS_DIR</cite>.</p>\n<p><strong>GIT_SETTINGS_SUBDIR</strong></p>\n<p>In case you\n- use same git repository to host configurations of more than one applications and\n- say settings files are in different subdirectories</p>\n<p>Example</p>\n<pre>my-git-repo/\n  |\n  |- myapp1\n  |    |\n  |    |- default_settings.py\n  |    |- prod_settings.py\n  |\n  |\n  |- myapp2\n</pre>\n<pre>cat .convergerc\n\nSETTINGS_DIR = 'appsettings'\nGIT_SETTINGS_REPO = 'git@github.com:shon/converge-test-settings.git'\nGIT_SETTINGS_SUBDIR = 'myapp1'\n</pre>\n<p>In this case all *_settings.py files in myapp1/ would be copied to appsettings.</p>\n<p><strong>Example</strong></p>\n<pre>.convergerc\n-----------\n\nAPP_MODE = 'test'\nSETTINGS_DIR = 'settings'\nGIT_SETTINGS_REPO = 'git@github.com:shon/converge-test-settings.git'\nGIT_SETTINGS_SUBDIR = 'myapp1'\n</pre>\n</div>\n</div>\n<div id=\"supported-settings-files\">\n<h2><a href=\"#id7\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Supported settings files</a></h2>\n<ul>\n<li>Defaults: default_settings.py</li>\n<li><dl>\n<dt>Mode</dt>\n<dd><ul>\n<li>production: prod_settings.py</li>\n<li>development: dev_settings.py</li>\n<li>test: test_settings.py</li>\n<li>staging: staging_settings.py</li>\n<li>beta: beta_settings.py</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Deployment specific: site_settings.py</li>\n</ul>\n</div>\n<div id=\"guidelines\">\n<h2><a href=\"#id8\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Guidelines</a></h2>\n<p>Settings files are usual Python files that can contain valid python code however here are some guidelines for user</p>\n<ul>\n<li><p>Use module variables for global application wide configuration</p>\n</li>\n<li><p>Use UPPERCASE while naming settings variables</p>\n</li>\n<li><p>For values prefer basic python datatypes such as string, integer,\ntuples</p>\n</li>\n<li><p>eg. <tt>SERVER_PORT = 1234</tt></p>\n</li>\n<li><p>Avoid complex python operations</p>\n</li>\n<li><dl>\n<dt>Use simple classes for config sections</dt>\n<dd><pre><span class=\"k\">class</span> <span class=\"nc\">DB</span><span class=\"p\">:</span>\n    <span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"s1\">'db.example.com'</span>\n    <span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">1234</span>\n</pre>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Use simple string operations to avoid repetition</dt>\n<dd><pre><span class=\"n\">BASE_DOMAIN</span> <span class=\"o\">=</span> <span class=\"s1\">'example.com'</span>\n<span class=\"n\">API_URL</span> <span class=\"o\">=</span> <span class=\"s1\">'api.'</span> <span class=\"o\">+</span> <span class=\"n\">BASE_DOMAIN</span><span class=\"err\">``</span>\n</pre>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"overriding-settings\">\n<h2><a href=\"#id9\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Overriding settings</a></h2>\n<p>Defining module veriables in site_settings.py</p>\n<div id=\"example\">\n<h3><a href=\"#id10\" rel=\"nofollow\">6.1\u00a0\u00a0\u00a0Example</a></h3>\n<p><strong>default_settings.py</strong></p>\n<p><tt>SERVER_PORT = 9999</tt></p>\n<p><strong>site_settings.py</strong></p>\n<p><tt>SERVER_PORT = 8888</tt></p>\n</div>\n</div>\n<div id=\"overriding-partial-settings\">\n<h2><a href=\"#id11\" rel=\"nofollow\">7\u00a0\u00a0\u00a0Overriding partial settings</a></h2>\n<p>Example:</p>\n<p><strong>default_settings.py</strong></p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">DB</span><span class=\"p\">:</span>\n    <span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"s1\">'db.example.com'</span>\n    <span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">1234</span>\n</pre>\n<p><strong>site_settings.py</strong></p>\n<pre><span class=\"n\">DB</span><span class=\"o\">.</span><span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">1111</span>\n</pre>\n</div>\n<div id=\"slightly-advanced-usage\">\n<h2><a href=\"#id12\" rel=\"nofollow\">8\u00a0\u00a0\u00a0(Slightly) Advanced usage</a></h2>\n<p>In case if you want to keep all settings.py files in a directory. Use <cite>SETTINGS_DIR</cite> directive in .convergerc file.</p>\n<div id=\"using-settings-dir\">\n<h3><a href=\"#id13\" rel=\"nofollow\">8.1\u00a0\u00a0\u00a0Using SETTINGS_DIR</a></h3>\n<pre>&gt;&gt; cat .convergerc\n\n<span class=\"nv\">APP_MODE</span> <span class=\"o\">=</span> <span class=\"s1\">'prod'</span>\n<span class=\"nv\">SETTINGS_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'settings/fat_server'</span>\n</pre>\n<p>This is useful when you have to deploy multiple instances of an app with different configs</p>\n<pre>`-- settings/\n     |\n     |-- server1/\n     |      |\n     |      |--default_settings.py\n     |      |--prod_settings.py\n     |\n     |-- server2/\n     |      |--default_settings.py\n     |      |--prod_settings.py\n     |\n     |\n</pre>\n</div>\n<div id=\"using-environment-variables\">\n<h3><a href=\"#id14\" rel=\"nofollow\">8.2\u00a0\u00a0\u00a0Using environment variables</a></h3>\n<p>It is possible use environment variables, which is useful in cases wheere you want to start multiple instances of same app directory.\nAny of the supported directive can exported as environment variable.</p>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">SETTINGS_DIR</span><span class=\"o\">=</span><span class=\"s1\">'settings/site1'</span>\ngunicorn --workers<span class=\"o\">=</span><span class=\"m\">2</span> service:app\n\n<span class=\"nb\">export</span> <span class=\"nv\">SETTINGS_DIR</span><span class=\"o\">=</span><span class=\"s1\">'settings/site2'</span>\ngunicorn --workers<span class=\"o\">=</span><span class=\"m\">2</span> service:app\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6160278, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "53e2a15df83b9b7244fcfb4514dcd12b", "sha256": "02ee83255555340f0651b839ad72b5b2711e77a0500fa6922a2a6485d5656b5c"}, "downloads": -1, "filename": "converge-0.1.tar.gz", "has_sig": false, "md5_digest": "53e2a15df83b9b7244fcfb4514dcd12b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2369, "upload_time": "2016-11-12T12:19:56", "upload_time_iso_8601": "2016-11-12T12:19:56.677371Z", "url": "https://files.pythonhosted.org/packages/26/c8/71817f568f6cde5b90c9f27c1bce5c07e6bcc6de8d2b8e06eaa7fe301060/converge-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "1bb3200f45505c689736cd6c435df050", "sha256": "108d40c162721e59164bd7838f68789cb1e9a0e4d34663c37c8989eb68047289"}, "downloads": -1, "filename": "converge-0.2.tar.gz", "has_sig": false, "md5_digest": "1bb3200f45505c689736cd6c435df050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2583, "upload_time": "2016-11-12T12:58:23", "upload_time_iso_8601": "2016-11-12T12:58:23.276018Z", "url": "https://files.pythonhosted.org/packages/34/cb/a2c25a1bd831760729944fad1354cc04a50b0bc7d877ff6c5bb3df68f9a1/converge-0.2.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "4a8aa5e2c55b4c465d8d507d0dc330c4", "sha256": "ab6253885d6640bee09a136e393838ee14050ac33c87757526f3da10049307dc"}, "downloads": -1, "filename": "converge-0.5.tar.gz", "has_sig": false, "md5_digest": "4a8aa5e2c55b4c465d8d507d0dc330c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3221, "upload_time": "2017-01-07T18:27:24", "upload_time_iso_8601": "2017-01-07T18:27:24.336806Z", "url": "https://files.pythonhosted.org/packages/d2/02/988e410bfa7b603581c169395678751290d182fd9d58ce3f6140be449cef/converge-0.5.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "4d9d6ec88571da9ecbf2e04d6febd4fe", "sha256": "79fdacdbcd3166f08b4045890ed3b15f65ed6f8df27c04dd1782279be0c1da3f"}, "downloads": -1, "filename": "converge-0.7.tar.gz", "has_sig": false, "md5_digest": "4d9d6ec88571da9ecbf2e04d6febd4fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3809, "upload_time": "2017-01-12T18:59:00", "upload_time_iso_8601": "2017-01-12T18:59:00.374163Z", "url": "https://files.pythonhosted.org/packages/61/88/d98b0406df6495d4b12d2b1ad691c40f6a47acc861b73b0fef1b4fd98557/converge-0.7.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "db7bb1867857691f9e1412b578142d76", "sha256": "896ea603563bdbe13acd0828d1c01b5e85e22c32d9bd3088aafff7c7c33f84a9"}, "downloads": -1, "filename": "converge-0.9.tar.gz", "has_sig": false, "md5_digest": "db7bb1867857691f9e1412b578142d76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4513, "upload_time": "2017-10-21T13:17:18", "upload_time_iso_8601": "2017-10-21T13:17:18.694231Z", "url": "https://files.pythonhosted.org/packages/55/33/f792004201ce798ab9aa01724ec16c73e0168e14acd1d09da362b9c58cf4/converge-0.9.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "e0487baf94ee831be2cd082be5478677", "sha256": "f9b5ea7e28008ade200880574778d83a581d0005e53398447d79d054f479e4ae"}, "downloads": -1, "filename": "converge-0.9.5.tar.gz", "has_sig": false, "md5_digest": "e0487baf94ee831be2cd082be5478677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4640, "upload_time": "2017-12-26T12:47:50", "upload_time_iso_8601": "2017-12-26T12:47:50.050095Z", "url": "https://files.pythonhosted.org/packages/50/48/d4263a7dbd82b2eb54ff7b9221aba3a8936d324411edf530ce8f9f4032ab/converge-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "bdd7582f1f115ecef2fc89fbccb01320", "sha256": "362975cd8600df68b39f988c5afd3b79b58c5518229e4cb07c825ff6833eba93"}, "downloads": -1, "filename": "converge-0.9.6.tar.gz", "has_sig": false, "md5_digest": "bdd7582f1f115ecef2fc89fbccb01320", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4649, "upload_time": "2017-12-27T07:54:35", "upload_time_iso_8601": "2017-12-27T07:54:35.717804Z", "url": "https://files.pythonhosted.org/packages/81/f3/b958c37c5e407912cbf25f9e16ec84d834fbace20ae1367469a21c5cea01/converge-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "763038c3b7d272fcedeb308b6eb6cf60", "sha256": "b2f0f167a5a573e064e3bc7ae9a900198a82f4b5d9bdb89fb70388a98c78585a"}, "downloads": -1, "filename": "converge-0.9.7.tar.gz", "has_sig": false, "md5_digest": "763038c3b7d272fcedeb308b6eb6cf60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4795, "upload_time": "2018-03-06T14:49:26", "upload_time_iso_8601": "2018-03-06T14:49:26.345559Z", "url": "https://files.pythonhosted.org/packages/e2/3b/90f73791c4ffa4d7fe52be3afe987435077a4ed8dc7e3fde4221ade2ae05/converge-0.9.7.tar.gz", "yanked": false}], "0.9.8": [{"comment_text": "", "digests": {"md5": "94b1a62cc0ffb4d0b1aa380d2ab6e079", "sha256": "767de64c67d6bee1acef8e99666196a2fa27b009ed1179c1f466aa277f39838d"}, "downloads": -1, "filename": "converge-0.9.8.tar.gz", "has_sig": false, "md5_digest": "94b1a62cc0ffb4d0b1aa380d2ab6e079", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4794, "upload_time": "2018-08-06T17:39:01", "upload_time_iso_8601": "2018-08-06T17:39:01.434423Z", "url": "https://files.pythonhosted.org/packages/7b/65/3156a00c89fe94b1b93144577c3bafbd24b327037f92cd60f646162a3191/converge-0.9.8.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "eaaeef5311270e9e546a775c3e986cc4", "sha256": "7eb1e7a97ef7675de93d40c7f131d597adb5906668e6b52ea5505f0ce7eecbc9"}, "downloads": -1, "filename": "converge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "eaaeef5311270e9e546a775c3e986cc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4870, "upload_time": "2019-11-19T06:39:59", "upload_time_iso_8601": "2019-11-19T06:39:59.798787Z", "url": "https://files.pythonhosted.org/packages/2d/c7/fc10b9cefe1ba6438c629fdb41978c4c0e69ad2eb88e898a887d214719e1/converge-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eaaeef5311270e9e546a775c3e986cc4", "sha256": "7eb1e7a97ef7675de93d40c7f131d597adb5906668e6b52ea5505f0ce7eecbc9"}, "downloads": -1, "filename": "converge-1.0.0.tar.gz", "has_sig": false, "md5_digest": "eaaeef5311270e9e546a775c3e986cc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4870, "upload_time": "2019-11-19T06:39:59", "upload_time_iso_8601": "2019-11-19T06:39:59.798787Z", "url": "https://files.pythonhosted.org/packages/2d/c7/fc10b9cefe1ba6438c629fdb41978c4c0e69ad2eb88e898a887d214719e1/converge-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:28 2020"}