{"info": {"author": "The Exonum team", "author_email": "contact@exonum.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Security :: Cryptography"], "description": "# Exonum CIS Dynamic Service Launcher\n\nA tool to send deploy&init requests into the Exonum CIS blockchain.\n\n## Usage\n\n```sh\nusage: exonum_launcher_cis [-h] -i INPUT [-r RUNTIMES [RUNTIMES ...]]\n                       [--runtime-parsers RUNTIME_PARSERS [RUNTIME_PARSERS ...]]\n                       [--instance-parsers INSTANCE_PARSERS [INSTANCE_PARSERS ...]]\n\nExonum service launcher\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -i INPUT, --input INPUT\n                        A path to yaml input for service initialization\n  -r RUNTIMES [RUNTIMES ...], --runtimes RUNTIMES [RUNTIMES ...]\n                        Additional runtimes, e.g. `--runtimes java=1 python=2\n                        wasm=3`\n  --runtime-parsers RUNTIME_PARSERS [RUNTIME_PARSERS ...]\n                        Runtime spec parsers, e.g. `--runtime-parsers\n                        python=your_module.YourRuntimeSpecLoader` Values will\n                        be imported and treated like SpecLoader, so ensure\n                        that module with loader is in `sys.path`.\n  --instance-parsers INSTANCE_PARSERS [INSTANCE_PARSERS ...]\n                        Instance spec parsers, e.g. `--runtime-parsers\n                        python=your_module.YourInstanceSpecLoader` Values will\n                        be imported and treated like InstanceSpecLoader, so\n                        ensure that module with loader is in `sys.path`.\n```\n\nSo, if you want to run `exonum-launcher_cis` with Rust runtime only and without custom artifact spec loaders, you can just use:\n\n```sh\npython3 -m exonum_launcher_cis -i sample.yml\n```\n\nIf you want to use `exonum-launcher` with Python runtime and Python runtime spec loader, the command will be:\n\n```sh\npython3 -m exonum_launcher_cis --runtimes python=2 --runtime-parsers python=exonum_launcher.runtimes.python.PythonSpecLoader -i sample.yml\n```\n\nExample of expected `yaml` file:\n\n```yaml\nnetworks:\n  - host: \"127.0.0.1\"\n    ssl: false\n    public-api-port: 8080\n    private-api-port: 8081\n\ndeadline_height: 10000\n\nartifacts:\n  cryptocurrency:\n    runtime: rust\n    name: \"exonum-cryptocurrency-advanced:0.12.0\"\n\n  # Example of artifact that should not be deployed\n  example_artifact:\n    runtime: rust\n    name: \"exonum-cryptocurrency-advanced:0.12.0\"\n    deploy: false\n\ninstances:\n  xnm-token:\n    artifact: cryptocurrency\n    config: []\n  nnm-token:\n    artifact: \"cryptocurrency\"\n    config: []\n  some-instance:\n    # Since we will not deploy `example_artifact`, it is assumed that it is already deployed\n    artifact: \"example_artifact\"\n    config:\n      val_a: \"123\"\n      val_b: 345\n```\n\n**Important:** if you have more than one validator in the network, ensure that connection data\n(`networks` section of the config) is specified for **every** validator.\n\nDeploy&init process requires requests to be sent to each validator, so don't expect that transaction broadcast\nmechanism will work here.\n\n## Plugins\n\nYou can define custom runtimes and plugins in the config (so you won't have to provide them from command line):\n\n```yaml\nruntimes:\n  python: 2\n\nplugins:\n  runtime:\n    python: \"exonum_launcher_cis.runtimes.python.PythonSpecLoader\"\n  artifact: {}\n```\n\nSee `samples` folder for more examples.\n\n## Install\n\n```sh\npip install exonum-launcher-cis --no-binary=protobuf\n```\n\n## License\n\nApache 2.0 - see [LICENSE](LICENSE) for more information.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "exonum-launcher-cis", "package_url": "https://pypi.org/project/exonum-launcher-cis/", "platform": "", "project_url": "https://pypi.org/project/exonum-launcher-cis/", "project_urls": null, "release_url": "https://pypi.org/project/exonum-launcher-cis/0.1.3/", "requires_dist": ["pyyaml", "exonum-python-client (==0.4.0.dev4)"], "requires_python": ">=3.6", "summary": "Exonum CIS Dynamic Services Launcher", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Exonum CIS Dynamic Service Launcher</h1>\n<p>A tool to send deploy&amp;init requests into the Exonum CIS blockchain.</p>\n<h2>Usage</h2>\n<pre>usage: exonum_launcher_cis <span class=\"o\">[</span>-h<span class=\"o\">]</span> -i INPUT <span class=\"o\">[</span>-r RUNTIMES <span class=\"o\">[</span>RUNTIMES ...<span class=\"o\">]]</span>\n                       <span class=\"o\">[</span>--runtime-parsers RUNTIME_PARSERS <span class=\"o\">[</span>RUNTIME_PARSERS ...<span class=\"o\">]]</span>\n                       <span class=\"o\">[</span>--instance-parsers INSTANCE_PARSERS <span class=\"o\">[</span>INSTANCE_PARSERS ...<span class=\"o\">]]</span>\n\nExonum service launcher\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -i INPUT, --input INPUT\n                        A path to yaml input <span class=\"k\">for</span> service initialization\n  -r RUNTIMES <span class=\"o\">[</span>RUNTIMES ...<span class=\"o\">]</span>, --runtimes RUNTIMES <span class=\"o\">[</span>RUNTIMES ...<span class=\"o\">]</span>\n                        Additional runtimes, e.g. <span class=\"sb\">`</span>--runtimes <span class=\"nv\">java</span><span class=\"o\">=</span><span class=\"m\">1</span> <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">2</span>\n                        <span class=\"nv\">wasm</span><span class=\"o\">=</span><span class=\"m\">3</span><span class=\"sb\">`</span>\n  --runtime-parsers RUNTIME_PARSERS <span class=\"o\">[</span>RUNTIME_PARSERS ...<span class=\"o\">]</span>\n                        Runtime spec parsers, e.g. <span class=\"sb\">`</span>--runtime-parsers\n                        <span class=\"nv\">python</span><span class=\"o\">=</span>your_module.YourRuntimeSpecLoader<span class=\"sb\">`</span> Values will\n                        be imported and treated like SpecLoader, so ensure\n                        that module with loader is in <span class=\"sb\">`</span>sys.path<span class=\"sb\">`</span>.\n  --instance-parsers INSTANCE_PARSERS <span class=\"o\">[</span>INSTANCE_PARSERS ...<span class=\"o\">]</span>\n                        Instance spec parsers, e.g. <span class=\"sb\">`</span>--runtime-parsers\n                        <span class=\"nv\">python</span><span class=\"o\">=</span>your_module.YourInstanceSpecLoader<span class=\"sb\">`</span> Values will\n                        be imported and treated like InstanceSpecLoader, so\n                        ensure that module with loader is in <span class=\"sb\">`</span>sys.path<span class=\"sb\">`</span>.\n</pre>\n<p>So, if you want to run <code>exonum-launcher_cis</code> with Rust runtime only and without custom artifact spec loaders, you can just use:</p>\n<pre>python3 -m exonum_launcher_cis -i sample.yml\n</pre>\n<p>If you want to use <code>exonum-launcher</code> with Python runtime and Python runtime spec loader, the command will be:</p>\n<pre>python3 -m exonum_launcher_cis --runtimes <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">2</span> --runtime-parsers <span class=\"nv\">python</span><span class=\"o\">=</span>exonum_launcher.runtimes.python.PythonSpecLoader -i sample.yml\n</pre>\n<p>Example of expected <code>yaml</code> file:</p>\n<pre><span class=\"nt\">networks</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"s\">\"127.0.0.1\"</span>\n    <span class=\"nt\">ssl</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n    <span class=\"nt\">public-api-port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">8080</span>\n    <span class=\"nt\">private-api-port</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">8081</span>\n\n<span class=\"nt\">deadline_height</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">10000</span>\n\n<span class=\"nt\">artifacts</span><span class=\"p\">:</span>\n  <span class=\"nt\">cryptocurrency</span><span class=\"p\">:</span>\n    <span class=\"nt\">runtime</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">rust</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"exonum-cryptocurrency-advanced:0.12.0\"</span>\n\n  <span class=\"c1\"># Example of artifact that should not be deployed</span>\n  <span class=\"nt\">example_artifact</span><span class=\"p\">:</span>\n    <span class=\"nt\">runtime</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">rust</span>\n    <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"s\">\"exonum-cryptocurrency-advanced:0.12.0\"</span>\n    <span class=\"nt\">deploy</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">false</span>\n\n<span class=\"nt\">instances</span><span class=\"p\">:</span>\n  <span class=\"nt\">xnm-token</span><span class=\"p\">:</span>\n    <span class=\"nt\">artifact</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">cryptocurrency</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[]</span>\n  <span class=\"nt\">nnm-token</span><span class=\"p\">:</span>\n    <span class=\"nt\">artifact</span><span class=\"p\">:</span> <span class=\"s\">\"cryptocurrency\"</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">[]</span>\n  <span class=\"nt\">some-instance</span><span class=\"p\">:</span>\n    <span class=\"c1\"># Since we will not deploy `example_artifact`, it is assumed that it is already deployed</span>\n    <span class=\"nt\">artifact</span><span class=\"p\">:</span> <span class=\"s\">\"example_artifact\"</span>\n    <span class=\"nt\">config</span><span class=\"p\">:</span>\n      <span class=\"nt\">val_a</span><span class=\"p\">:</span> <span class=\"s\">\"123\"</span>\n      <span class=\"nt\">val_b</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">345</span>\n</pre>\n<p><strong>Important:</strong> if you have more than one validator in the network, ensure that connection data\n(<code>networks</code> section of the config) is specified for <strong>every</strong> validator.</p>\n<p>Deploy&amp;init process requires requests to be sent to each validator, so don't expect that transaction broadcast\nmechanism will work here.</p>\n<h2>Plugins</h2>\n<p>You can define custom runtimes and plugins in the config (so you won't have to provide them from command line):</p>\n<pre><span class=\"nt\">runtimes</span><span class=\"p\">:</span>\n  <span class=\"nt\">python</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">2</span>\n\n<span class=\"nt\">plugins</span><span class=\"p\">:</span>\n  <span class=\"nt\">runtime</span><span class=\"p\">:</span>\n    <span class=\"nt\">python</span><span class=\"p\">:</span> <span class=\"s\">\"exonum_launcher_cis.runtimes.python.PythonSpecLoader\"</span>\n  <span class=\"nt\">artifact</span><span class=\"p\">:</span> <span class=\"p p-Indicator\">{}</span>\n</pre>\n<p>See <code>samples</code> folder for more examples.</p>\n<h2>Install</h2>\n<pre>pip install exonum-launcher-cis --no-binary<span class=\"o\">=</span>protobuf\n</pre>\n<h2>License</h2>\n<p>Apache 2.0 - see <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> for more information.</p>\n\n          </div>"}, "last_serial": 6575319, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "1df08c465e95223b8d77f14ee03e2935", "sha256": "029e5c122306fe8eee781d0a5f1828cd617f5aaea10bc3016afd04849774d61d"}, "downloads": -1, "filename": "exonum_launcher_cis-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1df08c465e95223b8d77f14ee03e2935", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20346, "upload_time": "2020-02-03T15:21:46", "upload_time_iso_8601": "2020-02-03T15:21:46.630262Z", "url": "https://files.pythonhosted.org/packages/af/66/812aa9b986ccdec1bc67cdde210698eb6c6cf01fcfed7b8fbee8c6efba57/exonum_launcher_cis-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8d3a567b545089db002bea057fca3a4", "sha256": "ee1b3773d7362addf7cf37ce290c828aa31953b65cff9d033401a49ea39c6fcc"}, "downloads": -1, "filename": "exonum-launcher-cis-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d8d3a567b545089db002bea057fca3a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12003, "upload_time": "2020-02-03T15:21:48", "upload_time_iso_8601": "2020-02-03T15:21:48.987148Z", "url": "https://files.pythonhosted.org/packages/82/51/47338d2b8c15f3e1c584bce44c78b67b39f260260fdcf987e86c5ed4e3bb/exonum-launcher-cis-0.1.3.tar.gz", "yanked": false}], "0.1.3.dev1": [{"comment_text": "", "digests": {"md5": "1658151fd74268410cd0b5da104c2c0a", "sha256": "d3ef6f337966c9309a921c8c9b052964b3324aafac8fcee559092aad842bf940"}, "downloads": -1, "filename": "exonum_launcher_cis-0.1.3.dev1-py3-none-any.whl", "has_sig": false, "md5_digest": "1658151fd74268410cd0b5da104c2c0a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20475, "upload_time": "2020-02-05T10:54:43", "upload_time_iso_8601": "2020-02-05T10:54:43.142432Z", "url": "https://files.pythonhosted.org/packages/7a/29/93b61ff24a7379bb5778951e3c9e6407d4be9e9a1a3c09f9bfffca732a84/exonum_launcher_cis-0.1.3.dev1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7c4b9df81e96f8468d2da13067b3ca5", "sha256": "2600f1c01b240ae4edec60e19af6fcfc6647d071ebadc5597c911cf9f547306f"}, "downloads": -1, "filename": "exonum-launcher-cis-0.1.3.dev1.tar.gz", "has_sig": false, "md5_digest": "e7c4b9df81e96f8468d2da13067b3ca5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12006, "upload_time": "2020-02-05T10:54:45", "upload_time_iso_8601": "2020-02-05T10:54:45.170780Z", "url": "https://files.pythonhosted.org/packages/a5/f8/d18104378921cd563d058064bc5d6ffac58298d22f66dc8a9fe8b4785a21/exonum-launcher-cis-0.1.3.dev1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1df08c465e95223b8d77f14ee03e2935", "sha256": "029e5c122306fe8eee781d0a5f1828cd617f5aaea10bc3016afd04849774d61d"}, "downloads": -1, "filename": "exonum_launcher_cis-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "1df08c465e95223b8d77f14ee03e2935", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 20346, "upload_time": "2020-02-03T15:21:46", "upload_time_iso_8601": "2020-02-03T15:21:46.630262Z", "url": "https://files.pythonhosted.org/packages/af/66/812aa9b986ccdec1bc67cdde210698eb6c6cf01fcfed7b8fbee8c6efba57/exonum_launcher_cis-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8d3a567b545089db002bea057fca3a4", "sha256": "ee1b3773d7362addf7cf37ce290c828aa31953b65cff9d033401a49ea39c6fcc"}, "downloads": -1, "filename": "exonum-launcher-cis-0.1.3.tar.gz", "has_sig": false, "md5_digest": "d8d3a567b545089db002bea057fca3a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12003, "upload_time": "2020-02-03T15:21:48", "upload_time_iso_8601": "2020-02-03T15:21:48.987148Z", "url": "https://files.pythonhosted.org/packages/82/51/47338d2b8c15f3e1c584bce44c78b67b39f260260fdcf987e86c5ed4e3bb/exonum-launcher-cis-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:44 2020"}