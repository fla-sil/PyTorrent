{"info": {"author": "Kevin Ryczko", "author_email": "kryczko@uottawa.ca", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# dnns - general purpose package for training deep neural networks with custom HDF5 datasets. \n\nAfter many iterations of deep learning scripts, I have finally decided to have one package - with data loading tools to do deep learning.\n\n## Some information about the package:\n  1. This package utilizes pytorch.\n  2. This package can also utilize mixed-precision training using NVIDIA's apex package.\n  3. There is an executable titled 'worker.py' that is installed with this package. If you are not interested in going through the process of writing a script that does training (or you have done this already and don't want to do it again), then you can just use it (see steps of how to use it below).\n  4. This script can be used for multi-node, multi-gpu training (see below for more information).\n\n## Quickstart:\nYou **must** have 2 things (1 other thing is recommended). \n\n  1) A network (using the ordinary class structure that pytorch uses) written to a file (default is dnn.py) with a network class defined to be DNN. \n  2) A train and test directory with your HDF5 data sitting in it. The default dataset labels that the loader will read are 'X' and 'Y', which represent input and output data.\n\n  3) (Recommended) A YAML file (default name is input.yaml) where you can configure the training protocol. \n\nTo run, you can simply run:\n```\npython -m torch.distributed.launch -nnodes <n_nodes> --nproc_per_node <n_gpus_per_node> worker.py\n```\n\n## Slowstart:\nLet's say you are in some directory called `some_dir`. We type `ls` and see:\n```\n~some_dir $ ls\ninput.yaml  dnn.py  train/  test/\n```\nLet's say you have HDF5 files called `training.h5` and `testing.h5` located in `train/` and `test/` with dataset labels `input_data` and `output_data`. Our configuration file `input.yaml` could look something like this:\n```\n~some_dir $ more input.yaml\n# the number of epochs to run\nn_epochs: 2000\n\n# batch size of images\nbatch_size: 512\n\n# learning rate for model\nlearning_rate: 0.00001\n\n# number of threads for each GPU to use for data queuing\nn_workers: 6 \n\n# labels in the HDF5 files\nx_label: 'input_data'\ny_label: 'output_data'\n\nmixed_precision: false\n```\nHere we have defined the number of epochs, batch size, learning rate, the number of worker threads, dataset labels, and we have turned mixed precision off. Now let's look at `dnn.py`. \n```\n~some_dir $ more dnn.py\nimport torch\nimport torch.nn as nn\nimport numpy as np\nfrom collections import OrderedDict\n\nclass DNN(nn.Module):\n\n    def __init__(self, input_shape):\n        super().__init__()\n        layers = OrderedDict()\n        layers['conv_red_1'] = nn.Conv3d(1, 64, 5, padding=2, stride=2)\n        layers['conv_red_1_elu'] = nn.ELU()\n        layers['conv_red_2'] = nn.Conv3d(64, 64, 5, padding=2, stride=1)\n        layers['conv_red_2_elu'] = nn.ELU()\n\n        layers['conv_nonred_3'] = nn.Conv3d(64, 16, 5, padding=2)\n        layers['conv_nonred_3_elu'] = nn.ELU()\n        for i in range(4, 9):\n            layers['conv_nonred_' + str(i)] = nn.Conv3d(16, 16, 5, padding=2)\n            layers['conv_nonred_' + str(i) + '_elu'] = nn.ELU()\n\n        layers['conv_red_3'] = nn.Conv3d(16, 64, 5, padding=2, stride=1)\n        layers['conv_red_3_elu'] = nn.ELU()\n\n        layers['conv_nonred_9'] = nn.Conv3d(64, 32, 5, padding=2, stride=1)\n        layers['conv_red_9_elu'] = nn.ELU()\n        for i in range(10, 14):\n            layers['conv_nonred_' + str(i)] = nn.Conv3d(32, 32, 5, padding=2)\n            layers['conv_nonred_' + str(i) + '_elu'] = nn.ELU()\n\n        layers['flatten'] = nn.Flatten()\n        layers['fc1'] = nn.Linear((input_shape[0] //2 + 1) * (input_shape[1] //2 + 1) * (input_shape[2] //2 + 1) * input_shape[3] * 32, 1024 )\n        layers['fc1_relu'] = nn.ELU()\n        layers['fc2'] = nn.Linear(1024, 1)\n        self.model = nn.Sequential(layers)\n\n\n    def forward(self, x):\n        x = x.reshape(x.shape[0], x.shape[-1], x.shape[1], x.shape[2], x.shape[3])  \n        return self.model(x)\n```\nWith these defined you can simply run:\n```\npython -m torch.distributed.launch -nnodes <n_nodes> --nproc_per_node <n_gpus_per_node> worker.py\n```\nAfterwards a checkpoint file `checkpoint.torch`, and a data file `loss_vs_epoch.dat` is created. \n\n## Limitations\n1) Currently, you can only have one HDF5 file for training/testing.\n2) There has not been a lot of testing of this repo. I expect there will be critical issues that must be taken care of in future releases.\n\n## Contact\nPlease contact me at `kryczko@uottawa.ca` for any issues.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CLEANit/dnns.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dnns", "package_url": "https://pypi.org/project/dnns/", "platform": "", "project_url": "https://pypi.org/project/dnns/", "project_urls": {"Homepage": "https://github.com/CLEANit/dnns.git"}, "release_url": "https://pypi.org/project/dnns/1.3.1/", "requires_dist": ["torch"], "requires_python": "", "summary": "A deep learning package for using HDF5 and Pytorch (Distributed Data Parallel with NVIDIA mixed-precision) with ease.", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dnns - general purpose package for training deep neural networks with custom HDF5 datasets.</h1>\n<p>After many iterations of deep learning scripts, I have finally decided to have one package - with data loading tools to do deep learning.</p>\n<h2>Some information about the package:</h2>\n<ol>\n<li>This package utilizes pytorch.</li>\n<li>This package can also utilize mixed-precision training using NVIDIA's apex package.</li>\n<li>There is an executable titled 'worker.py' that is installed with this package. If you are not interested in going through the process of writing a script that does training (or you have done this already and don't want to do it again), then you can just use it (see steps of how to use it below).</li>\n<li>This script can be used for multi-node, multi-gpu training (see below for more information).</li>\n</ol>\n<h2>Quickstart:</h2>\n<p>You <strong>must</strong> have 2 things (1 other thing is recommended).</p>\n<ol>\n<li>\n<p>A network (using the ordinary class structure that pytorch uses) written to a file (default is dnn.py) with a network class defined to be DNN.</p>\n</li>\n<li>\n<p>A train and test directory with your HDF5 data sitting in it. The default dataset labels that the loader will read are 'X' and 'Y', which represent input and output data.</p>\n</li>\n<li>\n<p>(Recommended) A YAML file (default name is input.yaml) where you can configure the training protocol.</p>\n</li>\n</ol>\n<p>To run, you can simply run:</p>\n<pre><code>python -m torch.distributed.launch -nnodes &lt;n_nodes&gt; --nproc_per_node &lt;n_gpus_per_node&gt; worker.py\n</code></pre>\n<h2>Slowstart:</h2>\n<p>Let's say you are in some directory called <code>some_dir</code>. We type <code>ls</code> and see:</p>\n<pre><code>~some_dir $ ls\ninput.yaml  dnn.py  train/  test/\n</code></pre>\n<p>Let's say you have HDF5 files called <code>training.h5</code> and <code>testing.h5</code> located in <code>train/</code> and <code>test/</code> with dataset labels <code>input_data</code> and <code>output_data</code>. Our configuration file <code>input.yaml</code> could look something like this:</p>\n<pre><code>~some_dir $ more input.yaml\n# the number of epochs to run\nn_epochs: 2000\n\n# batch size of images\nbatch_size: 512\n\n# learning rate for model\nlearning_rate: 0.00001\n\n# number of threads for each GPU to use for data queuing\nn_workers: 6 \n\n# labels in the HDF5 files\nx_label: 'input_data'\ny_label: 'output_data'\n\nmixed_precision: false\n</code></pre>\n<p>Here we have defined the number of epochs, batch size, learning rate, the number of worker threads, dataset labels, and we have turned mixed precision off. Now let's look at <code>dnn.py</code>.</p>\n<pre><code>~some_dir $ more dnn.py\nimport torch\nimport torch.nn as nn\nimport numpy as np\nfrom collections import OrderedDict\n\nclass DNN(nn.Module):\n\n    def __init__(self, input_shape):\n        super().__init__()\n        layers = OrderedDict()\n        layers['conv_red_1'] = nn.Conv3d(1, 64, 5, padding=2, stride=2)\n        layers['conv_red_1_elu'] = nn.ELU()\n        layers['conv_red_2'] = nn.Conv3d(64, 64, 5, padding=2, stride=1)\n        layers['conv_red_2_elu'] = nn.ELU()\n\n        layers['conv_nonred_3'] = nn.Conv3d(64, 16, 5, padding=2)\n        layers['conv_nonred_3_elu'] = nn.ELU()\n        for i in range(4, 9):\n            layers['conv_nonred_' + str(i)] = nn.Conv3d(16, 16, 5, padding=2)\n            layers['conv_nonred_' + str(i) + '_elu'] = nn.ELU()\n\n        layers['conv_red_3'] = nn.Conv3d(16, 64, 5, padding=2, stride=1)\n        layers['conv_red_3_elu'] = nn.ELU()\n\n        layers['conv_nonred_9'] = nn.Conv3d(64, 32, 5, padding=2, stride=1)\n        layers['conv_red_9_elu'] = nn.ELU()\n        for i in range(10, 14):\n            layers['conv_nonred_' + str(i)] = nn.Conv3d(32, 32, 5, padding=2)\n            layers['conv_nonred_' + str(i) + '_elu'] = nn.ELU()\n\n        layers['flatten'] = nn.Flatten()\n        layers['fc1'] = nn.Linear((input_shape[0] //2 + 1) * (input_shape[1] //2 + 1) * (input_shape[2] //2 + 1) * input_shape[3] * 32, 1024 )\n        layers['fc1_relu'] = nn.ELU()\n        layers['fc2'] = nn.Linear(1024, 1)\n        self.model = nn.Sequential(layers)\n\n\n    def forward(self, x):\n        x = x.reshape(x.shape[0], x.shape[-1], x.shape[1], x.shape[2], x.shape[3])  \n        return self.model(x)\n</code></pre>\n<p>With these defined you can simply run:</p>\n<pre><code>python -m torch.distributed.launch -nnodes &lt;n_nodes&gt; --nproc_per_node &lt;n_gpus_per_node&gt; worker.py\n</code></pre>\n<p>Afterwards a checkpoint file <code>checkpoint.torch</code>, and a data file <code>loss_vs_epoch.dat</code> is created.</p>\n<h2>Limitations</h2>\n<ol>\n<li>Currently, you can only have one HDF5 file for training/testing.</li>\n<li>There has not been a lot of testing of this repo. I expect there will be critical issues that must be taken care of in future releases.</li>\n</ol>\n<h2>Contact</h2>\n<p>Please contact me at <code>kryczko@uottawa.ca</code> for any issues.</p>\n\n          </div>"}, "last_serial": 6423886, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "d68291d2d63cd211d67977dcd1adeb16", "sha256": "88b19c46449febbceb50ec568d73bbbabbb6d76695b1a61069e576cbbec77179"}, "downloads": -1, "filename": "dnns-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d68291d2d63cd211d67977dcd1adeb16", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15422, "upload_time": "2019-12-17T16:39:14", "upload_time_iso_8601": "2019-12-17T16:39:14.776135Z", "url": "https://files.pythonhosted.org/packages/55/57/81123ae0c2c41f733c33b77d4c28a0b689b1a79a288b16c96095ad2c25a3/dnns-0.0.1-py3-none-any.whl", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "04db30cca832b53a14f25893bd5af601", "sha256": "c1cce00ccacc0f91f4e0d3e82a695cfe4213ef662a9a4b2b20220526e13b8775"}, "downloads": -1, "filename": "dnns-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "04db30cca832b53a14f25893bd5af601", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15653, "upload_time": "2019-12-17T16:48:32", "upload_time_iso_8601": "2019-12-17T16:48:32.162780Z", "url": "https://files.pythonhosted.org/packages/06/15/951a956e30fed80f11f67bae876404e4431fb5bcf4a17709c32153e38f80/dnns-1.0-py3-none-any.whl", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "b70cc154a8d6ee6482c09de0690dfd31", "sha256": "31555d7ff13bdb0f4f19fcaba59f07f6c770d4c8d67eafb3ce9a19a1783f2210"}, "downloads": -1, "filename": "dnns-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b70cc154a8d6ee6482c09de0690dfd31", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15657, "upload_time": "2019-12-17T16:54:36", "upload_time_iso_8601": "2019-12-17T16:54:36.542393Z", "url": "https://files.pythonhosted.org/packages/d1/76/df43c8fb91b79cf5b06b20f2b64f4c36bd68365fca919a9fb7e62d889992/dnns-1.1-py3-none-any.whl", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "0d2dd8f66210320fea13429550b67eb2", "sha256": "23172c67c27eccfebc7fd00f62241778bc24648d09dd29450a4059eee52412d8"}, "downloads": -1, "filename": "dnns-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0d2dd8f66210320fea13429550b67eb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15668, "upload_time": "2019-12-17T17:00:23", "upload_time_iso_8601": "2019-12-17T17:00:23.190661Z", "url": "https://files.pythonhosted.org/packages/68/99/be49a350a9d2e7b642a985409a8ba0f06a08d8d6f57671fe66edfcc32c97/dnns-1.2-py3-none-any.whl", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "976a397690395448f278d9797c722de9", "sha256": "a2d4e69d4d05f541af1368fed0f4cb9d645e6399a1836cb3f1f127666882b541"}, "downloads": -1, "filename": "dnns-1.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "976a397690395448f278d9797c722de9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15703, "upload_time": "2019-12-17T18:16:05", "upload_time_iso_8601": "2019-12-17T18:16:05.594668Z", "url": "https://files.pythonhosted.org/packages/7c/b3/008186f4514a8ccf8bb1925176fe909c060f7111bb7d268124100f3d0659/dnns-1.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e97e883009213b1de3952e5f72436f49", "sha256": "e1b2bc61d1e6d1019be72066d5eff769522a51198ea107710384f481f40862b1"}, "downloads": -1, "filename": "dnns-1.2.1.tar.gz", "has_sig": false, "md5_digest": "e97e883009213b1de3952e5f72436f49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2852, "upload_time": "2019-12-17T18:16:07", "upload_time_iso_8601": "2019-12-17T18:16:07.034047Z", "url": "https://files.pythonhosted.org/packages/d9/9a/164e8e8ab271cf9b4699f8adfdcb5fb2746c1bde0affba2adc3cbdb76951/dnns-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "5e02a6760f3f3cd054efa85584c92867", "sha256": "4afbdcff9530ea2b6669760f85d289f0c4620807df64127dfd56bf408f660a3a"}, "downloads": -1, "filename": "dnns-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5e02a6760f3f3cd054efa85584c92867", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15706, "upload_time": "2019-12-17T18:19:49", "upload_time_iso_8601": "2019-12-17T18:19:49.000676Z", "url": "https://files.pythonhosted.org/packages/7e/2f/c4dd301d03812a6215d1b1b5b447a39c174fd9c58bf6ef2ba8c0721762f7/dnns-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2bda7ab51769c745826a9bf8534e6b6", "sha256": "557fa13b032295ae5d6b60dd0a4ba3af8e67cf33f3a66249acd3e616f89d91c5"}, "downloads": -1, "filename": "dnns-1.2.2.tar.gz", "has_sig": false, "md5_digest": "b2bda7ab51769c745826a9bf8534e6b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2852, "upload_time": "2019-12-17T18:19:50", "upload_time_iso_8601": "2019-12-17T18:19:50.351606Z", "url": "https://files.pythonhosted.org/packages/c2/fd/5f5242fb669ef79010d156de810f3099a6a8325f063c639e07097a562459/dnns-1.2.2.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "9222fee8f09a2f4d03363bbdb42da228", "sha256": "baa7e87bc9de2b6187370638d8d65a2d61c536f6566405c64168c49a59b6dbc7"}, "downloads": -1, "filename": "dnns-1.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "9222fee8f09a2f4d03363bbdb42da228", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15706, "upload_time": "2019-12-17T18:32:00", "upload_time_iso_8601": "2019-12-17T18:32:00.867363Z", "url": "https://files.pythonhosted.org/packages/4c/6b/7089c4dcef56fddc86b22a8a8526e251bd1993959622cac927e773503e46/dnns-1.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b19010af80ded0ab94c0e525ba2af930", "sha256": "f84ec2f219681d93e1fa30f1df962c8ecb9bfabe20ad90a3f9ae677138aa70c9"}, "downloads": -1, "filename": "dnns-1.2.4.tar.gz", "has_sig": false, "md5_digest": "b19010af80ded0ab94c0e525ba2af930", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2845, "upload_time": "2019-12-17T18:32:01", "upload_time_iso_8601": "2019-12-17T18:32:01.881187Z", "url": "https://files.pythonhosted.org/packages/35/ee/3c6460b6de92529bf382ade9172e881ecd923f64e825281750499a5833b8/dnns-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "3dc44e31342ea69e971a28ebda14678a", "sha256": "b14a88316d2c5bed547861f3df1837ff7ac291fb901c772dbc2bbadb54d91d12"}, "downloads": -1, "filename": "dnns-1.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3dc44e31342ea69e971a28ebda14678a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15729, "upload_time": "2019-12-17T18:36:05", "upload_time_iso_8601": "2019-12-17T18:36:05.655153Z", "url": "https://files.pythonhosted.org/packages/fa/7f/69de8c53905b40d3f27014db2f84794fa19e3d21e668432a24449d3ec9d3/dnns-1.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08b413be42b9487c9229dfa049036e7e", "sha256": "f8870c2a1b76a55ae6a9e66a3f5fd1560352373ea4110921e842529dda18e39b"}, "downloads": -1, "filename": "dnns-1.2.5.tar.gz", "has_sig": false, "md5_digest": "08b413be42b9487c9229dfa049036e7e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2861, "upload_time": "2019-12-17T18:36:07", "upload_time_iso_8601": "2019-12-17T18:36:07.256829Z", "url": "https://files.pythonhosted.org/packages/0b/2c/ce72038fcdf2312913494ab91ae10513867fa28d1df437d0ba98575c3e11/dnns-1.2.5.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "dad695843423ce4f9966a21c8df7326c", "sha256": "42238db1e84c4f62103c07c1db1172039daa4d2820e7aba12c9e6aa88228548b"}, "downloads": -1, "filename": "dnns-1.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "dad695843423ce4f9966a21c8df7326c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15443, "upload_time": "2019-12-17T18:42:49", "upload_time_iso_8601": "2019-12-17T18:42:49.255237Z", "url": "https://files.pythonhosted.org/packages/7a/47/513386f1acdc139145c9d63e09ad71294d69677f9d9bdbc5937ff551c66f/dnns-1.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22a6d84c8375981f93122c0a33eaa696", "sha256": "4fec3fbfb4bed7a47cc00ab4bf3786100593ee34847760308a3fe86b0279c33d"}, "downloads": -1, "filename": "dnns-1.2.6.tar.gz", "has_sig": false, "md5_digest": "22a6d84c8375981f93122c0a33eaa696", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2808, "upload_time": "2019-12-17T18:42:50", "upload_time_iso_8601": "2019-12-17T18:42:50.704157Z", "url": "https://files.pythonhosted.org/packages/4c/3f/27cfa752b008c03d9fdf19403ead3c2ae5542b780c606588823a439f4e95/dnns-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "3fea65e234a632ad2ddc3beff96dce34", "sha256": "3196cbfd7395d528499f442db27db5f43c8a1b46695125bbe46a5e68588df81e"}, "downloads": -1, "filename": "dnns-1.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "3fea65e234a632ad2ddc3beff96dce34", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20004, "upload_time": "2020-01-06T18:52:16", "upload_time_iso_8601": "2020-01-06T18:52:16.538664Z", "url": "https://files.pythonhosted.org/packages/a6/cd/48f2f5bf9fe876b83854f2f6468472e040d1a09b8cfa592cedf1ea530d2a/dnns-1.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b7ea3d1914295d2f4b0cff5fb1a8de9", "sha256": "d06d9c4e20edbf8711e4d171dc27497e493fb10f82a62dbdbe54aa257c87deb8"}, "downloads": -1, "filename": "dnns-1.2.7.tar.gz", "has_sig": false, "md5_digest": "5b7ea3d1914295d2f4b0cff5fb1a8de9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6756, "upload_time": "2020-01-06T18:52:17", "upload_time_iso_8601": "2020-01-06T18:52:17.800613Z", "url": "https://files.pythonhosted.org/packages/d4/54/2a7b338a4dfcd7ad926656e5fb645b8f2536ba27d8d7d609f5fac106f9d1/dnns-1.2.7.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "a9697d799046a2fa06c78102fc8b7530", "sha256": "891357103c39192720911788c5206647824667e7d6dc05c6d7cb1fb7f0d73ffa"}, "downloads": -1, "filename": "dnns-1.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "a9697d799046a2fa06c78102fc8b7530", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20954, "upload_time": "2020-01-09T15:34:24", "upload_time_iso_8601": "2020-01-09T15:34:24.366341Z", "url": "https://files.pythonhosted.org/packages/60/cb/063fe3837202663b05240ae626435cbab346ac6149c65ff6dd800f7e9733/dnns-1.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cb468326e172b4939bf59559efbdf14", "sha256": "a41332aaaec6d0070e9aa60a8b741f6f0a34a09089ae3019f8755947974a3f65"}, "downloads": -1, "filename": "dnns-1.2.8.tar.gz", "has_sig": false, "md5_digest": "4cb468326e172b4939bf59559efbdf14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7464, "upload_time": "2020-01-09T15:34:25", "upload_time_iso_8601": "2020-01-09T15:34:25.658955Z", "url": "https://files.pythonhosted.org/packages/3c/8d/f12f7c3012bf9b05cfa81d22ed4b11b3ae8b416e5b30ae5dbcd5fba56812/dnns-1.2.8.tar.gz", "yanked": false}], "1.2.9": [{"comment_text": "", "digests": {"md5": "321b69bdea2449eb84950818332392f3", "sha256": "c9f90eb495ae4b41cf1f16369e8e2ecfa9dbcef4f0b26bbdaa596f406bd7cf80"}, "downloads": -1, "filename": "dnns-1.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "321b69bdea2449eb84950818332392f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20957, "upload_time": "2020-01-09T15:41:33", "upload_time_iso_8601": "2020-01-09T15:41:33.682194Z", "url": "https://files.pythonhosted.org/packages/d0/92/69fa6fc8951ffd29e30bada230fa978c0ba1971616c26ca1384eb9903594/dnns-1.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bf0fe679ff4a331060d78c5489e9a4f", "sha256": "9c073a00d350e82b3f59c031c62a03f21a22368b311d9750c81215da2c0dd015"}, "downloads": -1, "filename": "dnns-1.2.9.tar.gz", "has_sig": false, "md5_digest": "8bf0fe679ff4a331060d78c5489e9a4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7473, "upload_time": "2020-01-09T15:41:35", "upload_time_iso_8601": "2020-01-09T15:41:35.993757Z", "url": "https://files.pythonhosted.org/packages/ef/da/bdae9307869057ef2351053e99dcf637c848bcb4fb44946a83ba77c4313a/dnns-1.2.9.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "2ab838db7e59e32eba80bfc3937c6328", "sha256": "938a66a6fa186a4343330478fe393323b12873bf652a76f08c7253833bc3a9e3"}, "downloads": -1, "filename": "dnns-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2ab838db7e59e32eba80bfc3937c6328", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20961, "upload_time": "2020-01-09T18:43:17", "upload_time_iso_8601": "2020-01-09T18:43:17.646929Z", "url": "https://files.pythonhosted.org/packages/76/85/e30c69ec9facc940084a1fec5780bf429405ae84b3b7f13223e371721579/dnns-1.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fa9b380f2ae648dedca4d7e98699195", "sha256": "ad5a48afd35143aca89500eddbda5ae66fda7acb5de2a648b52342c22d13b800"}, "downloads": -1, "filename": "dnns-1.3.0.tar.gz", "has_sig": false, "md5_digest": "1fa9b380f2ae648dedca4d7e98699195", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7452, "upload_time": "2020-01-09T18:43:19", "upload_time_iso_8601": "2020-01-09T18:43:19.131633Z", "url": "https://files.pythonhosted.org/packages/63/6d/5d6c9325051b4faedcab684f326ab33ae580a215d9c964bd6178db764feb/dnns-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "18bd48e1249d0d25e00bc3adb690f391", "sha256": "e63439a63fa542b5af903f6293bd40926f6ef45f5de2ef6445332efed8d15ed4"}, "downloads": -1, "filename": "dnns-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "18bd48e1249d0d25e00bc3adb690f391", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21926, "upload_time": "2020-01-09T18:46:24", "upload_time_iso_8601": "2020-01-09T18:46:24.909796Z", "url": "https://files.pythonhosted.org/packages/44/60/439830acb86d923a39745084d7b3e85eed29050ca6ed752c1d07635b70fd/dnns-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17f1fc2f0c156b670515446fe85ce6a6", "sha256": "5d06bc94123d1853e0bcc7347499cc92eee8343fed1c4532fa77bf120098be5a"}, "downloads": -1, "filename": "dnns-1.3.1.tar.gz", "has_sig": false, "md5_digest": "17f1fc2f0c156b670515446fe85ce6a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8094, "upload_time": "2020-01-09T18:46:26", "upload_time_iso_8601": "2020-01-09T18:46:26.411326Z", "url": "https://files.pythonhosted.org/packages/88/21/1df88ecb559eb8f50a405408e931b19ec59a4aeaa1f21684c401d7d98ed1/dnns-1.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18bd48e1249d0d25e00bc3adb690f391", "sha256": "e63439a63fa542b5af903f6293bd40926f6ef45f5de2ef6445332efed8d15ed4"}, "downloads": -1, "filename": "dnns-1.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "18bd48e1249d0d25e00bc3adb690f391", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 21926, "upload_time": "2020-01-09T18:46:24", "upload_time_iso_8601": "2020-01-09T18:46:24.909796Z", "url": "https://files.pythonhosted.org/packages/44/60/439830acb86d923a39745084d7b3e85eed29050ca6ed752c1d07635b70fd/dnns-1.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17f1fc2f0c156b670515446fe85ce6a6", "sha256": "5d06bc94123d1853e0bcc7347499cc92eee8343fed1c4532fa77bf120098be5a"}, "downloads": -1, "filename": "dnns-1.3.1.tar.gz", "has_sig": false, "md5_digest": "17f1fc2f0c156b670515446fe85ce6a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8094, "upload_time": "2020-01-09T18:46:26", "upload_time_iso_8601": "2020-01-09T18:46:26.411326Z", "url": "https://files.pythonhosted.org/packages/88/21/1df88ecb559eb8f50a405408e931b19ec59a4aeaa1f21684c401d7d98ed1/dnns-1.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:08 2020"}