{"info": {"author": "Ralf Gommers", "author_email": "ralf.gommers@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# rnumpy\n\nAn experiment in trying to define a core and cleaned-up NumPy API: RNumPy\n\n_Don't use this just yet! It will be ready for production use soon, but the API\nmay still change in the near future._\n\nThe main goals of this project:\n\n1. Provide a package with NumPy functions that contain the essence of NumPy for end users.\n   I.e. what would the NumPy API look like if we could remove functions and objects\n   from it and move things around without worrying about backwards compatibility.\n2. Answer the question: \"what's the _minimal_ set of functions needed to form a core of numpy?\"\n\n(1) allows end users to use `rnumpy` instead of `numpy`, and thereby work with a much\neasier to navigate package where they can be confident that the functions they use are\nwell-maintained and \"best practice\". In many cases, NumPy contains multiple ways of doing\nthings. Superceded functions are kept for backwards compatibility. Often users won't realize\nthat, and use a function that has a more modern alternative. Using `rnumpy`, they won't\nhave to worry about that.\n\nBesides end users, (1) is also aimed at authors of NumPy-like libraries. It suggests\na subset of the full NumPy API that makes sense to support.\n\n(2) can form the basis of reimplementing other functions in terms of \"core\" functions.\nAn example may clarify this. To create an array filled with all the same values,\nNumPy offers `ones`, `zeros`, `empty`, `full`, `ones_like`, `zeros_like`, `empty_like`,\n`full_like` and `ndarray.fill`.  The fundamental building blocks are `empty` and `ndarray.fill`.\nSo one could reimplement, e.g., `ones` as:\n```\ndef ones(...):\n    return np.empty(...).fill(1)\n```\n\nSuch implementations in terms of core functions is useful for `ndarray` subclass authors,\npeople porting NumPy to other platforms (e.g. WebAssembly), and probably other groups of\ndevelopers too.\n\nSee the docstring of `rnumpy/__init__.py` for more details.\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Quansight-Labs/rnumpy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rnumpy", "package_url": "https://pypi.org/project/rnumpy/", "platform": "", "project_url": "https://pypi.org/project/rnumpy/", "project_urls": {"Homepage": "https://github.com/Quansight-Labs/rnumpy"}, "release_url": "https://pypi.org/project/rnumpy/0.0.1/", "requires_dist": ["numpy >= 1.16.4", "sphinx; extra == \"doc\"", "pytest; extra == \"test\""], "requires_python": ">=3.6", "summary": "RNumPy", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rnumpy</h1>\n<p>An experiment in trying to define a core and cleaned-up NumPy API: RNumPy</p>\n<p><em>Don't use this just yet! It will be ready for production use soon, but the API\nmay still change in the near future.</em></p>\n<p>The main goals of this project:</p>\n<ol>\n<li>Provide a package with NumPy functions that contain the essence of NumPy for end users.\nI.e. what would the NumPy API look like if we could remove functions and objects\nfrom it and move things around without worrying about backwards compatibility.</li>\n<li>Answer the question: \"what's the <em>minimal</em> set of functions needed to form a core of numpy?\"</li>\n</ol>\n<p>(1) allows end users to use <code>rnumpy</code> instead of <code>numpy</code>, and thereby work with a much\neasier to navigate package where they can be confident that the functions they use are\nwell-maintained and \"best practice\". In many cases, NumPy contains multiple ways of doing\nthings. Superceded functions are kept for backwards compatibility. Often users won't realize\nthat, and use a function that has a more modern alternative. Using <code>rnumpy</code>, they won't\nhave to worry about that.</p>\n<p>Besides end users, (1) is also aimed at authors of NumPy-like libraries. It suggests\na subset of the full NumPy API that makes sense to support.</p>\n<p>(2) can form the basis of reimplementing other functions in terms of \"core\" functions.\nAn example may clarify this. To create an array filled with all the same values,\nNumPy offers <code>ones</code>, <code>zeros</code>, <code>empty</code>, <code>full</code>, <code>ones_like</code>, <code>zeros_like</code>, <code>empty_like</code>,\n<code>full_like</code> and <code>ndarray.fill</code>.  The fundamental building blocks are <code>empty</code> and <code>ndarray.fill</code>.\nSo one could reimplement, e.g., <code>ones</code> as:</p>\n<pre><code>def ones(...):\n    return np.empty(...).fill(1)\n</code></pre>\n<p>Such implementations in terms of core functions is useful for <code>ndarray</code> subclass authors,\npeople porting NumPy to other platforms (e.g. WebAssembly), and probably other groups of\ndevelopers too.</p>\n<p>See the docstring of <code>rnumpy/__init__.py</code> for more details.</p>\n\n          </div>"}, "last_serial": 5459334, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "53e648fa8572af9a6401af2708b0b0ea", "sha256": "abfc7963133ecedf7a544bc676b3f8ab9bcba0fa9d1d02d57f9863c30a565321"}, "downloads": -1, "filename": "rnumpy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "53e648fa8572af9a6401af2708b0b0ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12058, "upload_time": "2019-06-27T23:13:05", "upload_time_iso_8601": "2019-06-27T23:13:05.282095Z", "url": "https://files.pythonhosted.org/packages/ab/9f/d867ad64288fc967834105fcadefd04e0ac56bfd02554eaecfc3c4daae95/rnumpy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3049b787a59ca4d9fe5454c33a18061f", "sha256": "90b5bbeda89a23fc69201339a7f65cc3c63a37dd9e65e4632bbf8637be7a93e6"}, "downloads": -1, "filename": "rnumpy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3049b787a59ca4d9fe5454c33a18061f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6576, "upload_time": "2019-06-27T23:13:19", "upload_time_iso_8601": "2019-06-27T23:13:19.317919Z", "url": "https://files.pythonhosted.org/packages/fc/ab/bfd4dd2a7e4ec0cfeb04850012a76f097e431e40d748493a05e4983e3162/rnumpy-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "53e648fa8572af9a6401af2708b0b0ea", "sha256": "abfc7963133ecedf7a544bc676b3f8ab9bcba0fa9d1d02d57f9863c30a565321"}, "downloads": -1, "filename": "rnumpy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "53e648fa8572af9a6401af2708b0b0ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12058, "upload_time": "2019-06-27T23:13:05", "upload_time_iso_8601": "2019-06-27T23:13:05.282095Z", "url": "https://files.pythonhosted.org/packages/ab/9f/d867ad64288fc967834105fcadefd04e0ac56bfd02554eaecfc3c4daae95/rnumpy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3049b787a59ca4d9fe5454c33a18061f", "sha256": "90b5bbeda89a23fc69201339a7f65cc3c63a37dd9e65e4632bbf8637be7a93e6"}, "downloads": -1, "filename": "rnumpy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3049b787a59ca4d9fe5454c33a18061f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6576, "upload_time": "2019-06-27T23:13:19", "upload_time_iso_8601": "2019-06-27T23:13:19.317919Z", "url": "https://files.pythonhosted.org/packages/fc/ab/bfd4dd2a7e4ec0cfeb04850012a76f097e431e40d748493a05e4983e3162/rnumpy-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:07 2020"}