{"info": {"author": "Jakub Janoszek", "author_email": "kuba.janoszek@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "django template goodies\n=======================\n\nA set of simple tools that will make your life easier in django templates.\nBased on great django-classytags_ library.\n\n.. _django-classytags: https://django-classy-tags.readthedocs.org/\n\n\nInstallation\n------------\n\n1) Install the package\n\n::\n\n   $> pip install django-template-goodies\n\n1) put \"template_goodies\" into INSTALLED_APPS.\n\n\n\nUsage: render_with & def_block and use_block\n--------------------------------------------\n\nThis is sort of macro-like solution allowing you to define base\ntemplate that looks always the same, and fill just a \"block\" inside it\ndifferently.\n\nAssuming you have partial template person_wrapper.html::\n\n\n  {% load goodies %}\n  <div class=\"person-wrapper\">\n      <div class=\"first-name\">{{ first_name }}</div>\n      {% use_block \"block\" %}\n  </div>\n\n\nYou can use it in following way::\n\n\n  {% load goodies %}\n  {% render_with \"person_wrapper.html\" first_name=\"First\" last_name=\"Last\" %}\n      {% def_block \"block\" %}\n      <div class=\"last-name\">{{ last_name }}</div>\n      {% end %}\n  {% end %}\n\n\nThis invocation will substitude \"{% use_block \"block\" %}\" in\nperson_wrapper.html with the contents within \"{% def_block .... %}\"\nand \"{% end %}\" insidee \"render_with\". So the outcome of above will be\nmore or less::\n\n\n  <div class=\"person-wrapper\">\n      <div class=\"first-name\">First</div>\n      <div class=\"last-name\">Last</div>\n  </div>\n\n\nAnother example with tables, table.html::\n\n\n  {% load goodies %}\n  <table class=\"{{ opts.table_class }}\">\n      <thead>\n          <tr>\n              {% use_block \"headers\" %}\n          </tr>\n      </thead>\n      <tbody>\n          {% for row in object_list %}\n          <tr>\n              {% use_block \"row\" %}\n          </tr>\n          {% endfor %}\n      </tbody>\n  </table>\n\n\ncan be used in following way::\n\n  {% render_with \"table.html\" object_list=people %}{% def_block \"headers\" %}\n      <td>ID</td>\n      <td>First name</td>\n      <td>Last Name</td>\n      <td>Age</td>\n  {% end %}{% def_block \"row\" %}\n      <td>{{ forloop.counter }}</td>\n      <td>{{ row.first_name }}</td>\n      <td>{{ row.last_name }}</td>\n      <td>{{ row.age }}</td>\n  {% end %}{% end %}\n\n\nUsage: dict\n-----------\n\nUpdates or creates dictionary inside template. You can use all kinds\nof filters on variable if you need::\n\n  {% load goodies %}\n\n  {% dict opts name=\"first\"|title %}\n  {% dict opts last_name=\"last\" value=opts.name %}\n\n  {{ opts.first }} - {{ opts.last_name}} || {{ opts.value }}\n\n\nThe outcome will be more or less following::\n\n  First - last || first\n\n\n\nRequirements\n------------\n\n- django-classytags\n\n\n\nAuthors\n-------\n\n* Jakub Janoszek (kuba.janoszek@gmail.com)\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jqb/django-template-goodies/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django_template_goodies", "package_url": "https://pypi.org/project/django_template_goodies/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_template_goodies/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jqb/django-template-goodies/"}, "release_url": "https://pypi.org/project/django_template_goodies/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "A set of django template tools.", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A set of simple tools that will make your life easier in django templates.\nBased on great <a href=\"https://django-classy-tags.readthedocs.org/\" rel=\"nofollow\">django-classytags</a> library.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li>Install the package</li>\n</ol>\n<pre>$&gt; pip install django-template-goodies\n</pre>\n<ol>\n<li>put \u201ctemplate_goodies\u201d into INSTALLED_APPS.</li>\n</ol>\n</div>\n<div id=\"usage-render-with-def-block-and-use-block\">\n<h2>Usage: render_with &amp; def_block and use_block</h2>\n<p>This is sort of macro-like solution allowing you to define base\ntemplate that looks always the same, and fill just a \u201cblock\u201d inside it\ndifferently.</p>\n<p>Assuming you have partial template person_wrapper.html:</p>\n<pre>{% load goodies %}\n&lt;div class=\"person-wrapper\"&gt;\n    &lt;div class=\"first-name\"&gt;{{ first_name }}&lt;/div&gt;\n    {% use_block \"block\" %}\n&lt;/div&gt;\n</pre>\n<p>You can use it in following way:</p>\n<pre>{% load goodies %}\n{% render_with \"person_wrapper.html\" first_name=\"First\" last_name=\"Last\" %}\n    {% def_block \"block\" %}\n    &lt;div class=\"last-name\"&gt;{{ last_name }}&lt;/div&gt;\n    {% end %}\n{% end %}\n</pre>\n<p>This invocation will substitude \u201c{% use_block \u201cblock\u201d %}\u201d in\nperson_wrapper.html with the contents within \u201c{% def_block \u2026. %}\u201d\nand \u201c{% end %}\u201d insidee \u201crender_with\u201d. So the outcome of above will be\nmore or less:</p>\n<pre>&lt;div class=\"person-wrapper\"&gt;\n    &lt;div class=\"first-name\"&gt;First&lt;/div&gt;\n    &lt;div class=\"last-name\"&gt;Last&lt;/div&gt;\n&lt;/div&gt;\n</pre>\n<p>Another example with tables, table.html:</p>\n<pre>{% load goodies %}\n&lt;table class=\"{{ opts.table_class }}\"&gt;\n    &lt;thead&gt;\n        &lt;tr&gt;\n            {% use_block \"headers\" %}\n        &lt;/tr&gt;\n    &lt;/thead&gt;\n    &lt;tbody&gt;\n        {% for row in object_list %}\n        &lt;tr&gt;\n            {% use_block \"row\" %}\n        &lt;/tr&gt;\n        {% endfor %}\n    &lt;/tbody&gt;\n&lt;/table&gt;\n</pre>\n<p>can be used in following way:</p>\n<pre>{% render_with \"table.html\" object_list=people %}{% def_block \"headers\" %}\n    &lt;td&gt;ID&lt;/td&gt;\n    &lt;td&gt;First name&lt;/td&gt;\n    &lt;td&gt;Last Name&lt;/td&gt;\n    &lt;td&gt;Age&lt;/td&gt;\n{% end %}{% def_block \"row\" %}\n    &lt;td&gt;{{ forloop.counter }}&lt;/td&gt;\n    &lt;td&gt;{{ row.first_name }}&lt;/td&gt;\n    &lt;td&gt;{{ row.last_name }}&lt;/td&gt;\n    &lt;td&gt;{{ row.age }}&lt;/td&gt;\n{% end %}{% end %}\n</pre>\n</div>\n<div id=\"usage-dict\">\n<h2>Usage: dict</h2>\n<p>Updates or creates dictionary inside template. You can use all kinds\nof filters on variable if you need:</p>\n<pre>{% load goodies %}\n\n{% dict opts name=\"first\"|title %}\n{% dict opts last_name=\"last\" value=opts.name %}\n\n{{ opts.first }} - {{ opts.last_name}} || {{ opts.value }}\n</pre>\n<p>The outcome will be more or less following:</p>\n<pre>First - last || first\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>django-classytags</li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Jakub Janoszek (<a href=\"mailto:kuba.janoszek%40gmail.com\">kuba<span>.</span>janoszek<span>@</span>gmail<span>.</span>com</a>)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1471683, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4739699b52476461b1cf41a18fe1c986", "sha256": "a4918f940852cd7e83d2713caffc07fb07b1be0fa02a13c8251760c0cfe21dc3"}, "downloads": -1, "filename": "django_template_goodies-0.1.tar.gz", "has_sig": false, "md5_digest": "4739699b52476461b1cf41a18fe1c986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2565, "upload_time": "2015-02-21T17:20:45", "upload_time_iso_8601": "2015-02-21T17:20:45.049507Z", "url": "https://files.pythonhosted.org/packages/af/6a/8699379a71a7010f490153963822d9fe2cd7072e611efe8465db938e3daa/django_template_goodies-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3cc1e6615a81d86241343168503749f0", "sha256": "1db5bec75dbf788eddc966501b3611c157ec97ccf1e9ff1b48ca4e6fe55f2f72"}, "downloads": -1, "filename": "django_template_goodies-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3cc1e6615a81d86241343168503749f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2577, "upload_time": "2015-02-26T16:17:02", "upload_time_iso_8601": "2015-02-26T16:17:02.210919Z", "url": "https://files.pythonhosted.org/packages/b8/38/11dd9e9e90e1212878cfd88639282a24014d678680766016efd6566cffb2/django_template_goodies-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7e462a1fc4dcae7ca421f1fd4da963a1", "sha256": "1b0057da9c9992298a73434b1a3b85d58d49afd2f0eaa32ec79dfb2927c7a74b"}, "downloads": -1, "filename": "django_template_goodies-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7e462a1fc4dcae7ca421f1fd4da963a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2552, "upload_time": "2015-03-19T15:33:32", "upload_time_iso_8601": "2015-03-19T15:33:32.893555Z", "url": "https://files.pythonhosted.org/packages/95/50/8c5369099a5e8ce16856475dbb08c3b5da35ab72b362fc53c7c9ce63c891/django_template_goodies-0.1.2.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "72046578aa7ae070fb98bc69ea5d3f5c", "sha256": "415f322e8ba9a69ff18a4a698928a12ea654541ae1ba3493950472d41cf05f79"}, "downloads": -1, "filename": "django_template_goodies-0.1.5.tar.gz", "has_sig": false, "md5_digest": "72046578aa7ae070fb98bc69ea5d3f5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2945, "upload_time": "2015-03-22T01:27:07", "upload_time_iso_8601": "2015-03-22T01:27:07.068112Z", "url": "https://files.pythonhosted.org/packages/d0/23/50962757f1de9d7cd66fe7ed61ca965169d032af24a2a7cc4da05da3e371/django_template_goodies-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "72046578aa7ae070fb98bc69ea5d3f5c", "sha256": "415f322e8ba9a69ff18a4a698928a12ea654541ae1ba3493950472d41cf05f79"}, "downloads": -1, "filename": "django_template_goodies-0.1.5.tar.gz", "has_sig": false, "md5_digest": "72046578aa7ae070fb98bc69ea5d3f5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2945, "upload_time": "2015-03-22T01:27:07", "upload_time_iso_8601": "2015-03-22T01:27:07.068112Z", "url": "https://files.pythonhosted.org/packages/d0/23/50962757f1de9d7cd66fe7ed61ca965169d032af24a2a7cc4da05da3e371/django_template_goodies-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:37 2020"}