{"info": {"author": "Michal Korman", "author_email": "michal.korman@icloud.com", "bugtrack_url": null, "classifiers": [], "description": "Copyright (c) 2018 Michal Korman\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\nDescription: # yt-archiver\n        yt-archiver offers automatic backup for YouTube videos and livestreams. All you need to do is to choose channels to follow and leave it\n        running 24/7. It will automatically download any new content. Copies will be accessible even if original video or\n        associated channel would become unavailable.\n        \n        *Nothing gets deleted from the Internet*\n        \n        ## Installation\n        \n        ### Prerequirements\n        - Python 3\n        - pip\n        - YouTube API key (this could be obtained by following \n        [the official guide](https://developers.google.com/youtube/registering_an_application), most interesting sections would be \n        *\"Create your project and select API services\"* and *\"Creating API Keys\"*)\n        - Identifiers of channels that you would like to follow. To obtain these simply open YouTube in browser and navigate to your favorite channel. \n        In the navigation bar there will be an URL in format: ```https://www.youtube.com/channel/<ID>```. Series of characters\n        visible in place of  ```<ID>``` will indicate the unique identifier of the channel. Copy it.\n        \n        ### Steps\n        1. Install command line tool:\n            ```\n            pip3 install yt-archiver\n            ```\n        2. Start monitoring with:\n            ```\n            ytarchiver -k <YOUR_API_KEY> -m <CHANNELS_ID>\n            ```\n            Of course replace ```<YOUR_API_KEY>``` with your personal YouTube API key and ```<CHANNELS_ID>``` with identifiers of\n            channels that you would like to monitor. Multiple identifiers could be specified after space. ```ytarchiver```\n            command is installed globally, so you can invoke it from any directory.\n        \n        Now application should automatically download any new video. By default videos are stored in ```out``` folder. \n        \n        \n        ### Custom options\n        #### Record livestreams\n        yt-archiver offers an option to automatically record any livestream started on monitored channels.\n        All you need to do is to add ```-s``` option.\n        ```\n        ytarchiver -k <YOUR_API_KEY> -m <CHANNELS_ID> -s\n        ```\n        \n        #### Changing output directory\n        By default yt-archiver saves all downloaded videos to ```out``` directory, in application's folder.\n        ```-o``` option allows to change it.\n        ```\n        ytarchiver -k <YOUR_API_KEY> -m <CHANNELS_ID> -o <CUSTOM_OUTPUT_DIRECTORY>\n        ```\n        \n        #### Downloading historical data\n        By default yt-archiver only downloads videos published after it is started. To download all videos from the past specify\n        ```-a``` option.\n        ```\n        ytarchiver -k <YOUR_API_KEY> -m <CHANNELS_ID> -a\n        ```\n        **WARNING:** downloading all videos from channel might take a lot of time and consume a lot of disk space\n        \n        #### Changing refresh time\n        Default delay between consecutive requests for new videos is 5 minutes. It might be changed with ```-t``` option.\n        ```\n        ytarchiver -k <YOUR_API_KEY> -m <CHANNELS_ID> -t 60\n        ```\n        ```-t``` expects time in seconds. Command above will fetch channels every 1 minute.\n        \nPlatform: UNKNOWN\nClassifier: License :: OSI Approved :: MIT License\nClassifier: Operating System :: MacOS\nClassifier: Operating System :: Microsoft\nClassifier: Operating System :: POSIX\nClassifier: Operating System :: Unix\nClassifier: Programming Language :: Python :: 3.4\nClassifier: Programming Language :: Python :: 3.5\nClassifier: Programming Language :: Python :: 3.6\nClassifier: Programming Language :: Python\nClassifier: Environment :: Console\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mkorman9/yt-archiver", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "yt-archiver", "package_url": "https://pypi.org/project/yt-archiver/", "platform": "", "project_url": "https://pypi.org/project/yt-archiver/", "project_urls": {"Homepage": "https://github.com/mkorman9/yt-archiver"}, "release_url": "https://pypi.org/project/yt-archiver/0.5.0/", "requires_dist": null, "requires_python": "", "summary": "Daemon for monitoring YouTube channels for new videos. Offers automatic backup of uploaded content", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Copyright (c) 2018 Michal Korman<br><br>Permission is hereby granted, free of charge, to any person obtaining a copy<br>of this software and associated documentation files (the \"Software\"), to deal<br>in the Software without restriction, including without limitation the rights<br>to use, copy, modify, merge, publish, distribute, sublicense, and/or sell<br>copies of the Software, and to permit persons to whom the Software is<br>furnished to do so, subject to the following conditions:<br><br>The above copyright notice and this permission notice shall be included in all<br>copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR<br>IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,<br>FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE<br>AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER<br>LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,<br>OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE<br>SOFTWARE.<br>Description: # yt-archiver<br>        yt-archiver offers automatic backup for YouTube videos and livestreams. All you need to do is to choose channels to follow and leave it<br>        running 24/7. It will automatically download any new content. Copies will be accessible even if original video or<br>        associated channel would become unavailable.<br>        <br>        *Nothing gets deleted from the Internet*<br>        <br>        ## Installation<br>        <br>        ### Prerequirements<br>        - Python 3<br>        - pip<br>        - YouTube API key (this could be obtained by following <br>        [the official guide](https://developers.google.com/youtube/registering_an_application), most interesting sections would be <br>        *\"Create your project and select API services\"* and *\"Creating API Keys\"*)<br>        - Identifiers of channels that you would like to follow. To obtain these simply open YouTube in browser and navigate to your favorite channel. <br>        In the navigation bar there will be an URL in format: ```https://www.youtube.com/channel/&lt;ID&gt;```. Series of characters<br>        visible in place of  ```&lt;ID&gt;``` will indicate the unique identifier of the channel. Copy it.<br>        <br>        ### Steps<br>        1. Install command line tool:<br>            ```<br>            pip3 install yt-archiver<br>            ```<br>        2. Start monitoring with:<br>            ```<br>            ytarchiver -k &lt;YOUR_API_KEY&gt; -m &lt;CHANNELS_ID&gt;<br>            ```<br>            Of course replace ```&lt;YOUR_API_KEY&gt;``` with your personal YouTube API key and ```&lt;CHANNELS_ID&gt;``` with identifiers of<br>            channels that you would like to monitor. Multiple identifiers could be specified after space. ```ytarchiver```<br>            command is installed globally, so you can invoke it from any directory.<br>        <br>        Now application should automatically download any new video. By default videos are stored in ```out``` folder. <br>        <br>        <br>        ### Custom options<br>        #### Record livestreams<br>        yt-archiver offers an option to automatically record any livestream started on monitored channels.<br>        All you need to do is to add ```-s``` option.<br>        ```<br>        ytarchiver -k &lt;YOUR_API_KEY&gt; -m &lt;CHANNELS_ID&gt; -s<br>        ```<br>        <br>        #### Changing output directory<br>        By default yt-archiver saves all downloaded videos to ```out``` directory, in application's folder.<br>        ```-o``` option allows to change it.<br>        ```<br>        ytarchiver -k &lt;YOUR_API_KEY&gt; -m &lt;CHANNELS_ID&gt; -o &lt;CUSTOM_OUTPUT_DIRECTORY&gt;<br>        ```<br>        <br>        #### Downloading historical data<br>        By default yt-archiver only downloads videos published after it is started. To download all videos from the past specify<br>        ```-a``` option.<br>        ```<br>        ytarchiver -k &lt;YOUR_API_KEY&gt; -m &lt;CHANNELS_ID&gt; -a<br>        ```<br>        **WARNING:** downloading all videos from channel might take a lot of time and consume a lot of disk space<br>        <br>        #### Changing refresh time<br>        Default delay between consecutive requests for new videos is 5 minutes. It might be changed with ```-t``` option.<br>        ```<br>        ytarchiver -k &lt;YOUR_API_KEY&gt; -m &lt;CHANNELS_ID&gt; -t 60<br>        ```<br>        ```-t``` expects time in seconds. Command above will fetch channels every 1 minute.<br>        <br>Platform: UNKNOWN<br>Classifier: License :: OSI Approved :: MIT License<br>Classifier: Operating System :: MacOS<br>Classifier: Operating System :: Microsoft<br>Classifier: Operating System :: POSIX<br>Classifier: Operating System :: Unix<br>Classifier: Programming Language :: Python :: 3.4<br>Classifier: Programming Language :: Python :: 3.5<br>Classifier: Programming Language :: Python :: 3.6<br>Classifier: Programming Language :: Python<br>Classifier: Environment :: Console<br>\n          </div>"}, "last_serial": 3985601, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cb433f5a89faacf9b3ca386f48cd5248", "sha256": "55b98292a9325a9c5dad474a0308f5a98a90136b8cd03da220ee572aa3dcaafa"}, "downloads": -1, "filename": "yt-archiver-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cb433f5a89faacf9b3ca386f48cd5248", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6908, "upload_time": "2018-06-01T08:04:48", "upload_time_iso_8601": "2018-06-01T08:04:48.033418Z", "url": "https://files.pythonhosted.org/packages/5c/07/c81cfdaa6bd00ac7c3ee8cb635a0a1b57aaac2c1c532cb6548738bfcf25f/yt-archiver-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "d74a5099767d42b793185980d60b25eb", "sha256": "027aede43daf0dc2309e9504d4023a4edec5e5f9b49a5d7e3f6440294e1e2b9a"}, "downloads": -1, "filename": "yt-archiver-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d74a5099767d42b793185980d60b25eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6872, "upload_time": "2018-06-02T09:51:44", "upload_time_iso_8601": "2018-06-02T09:51:44.073696Z", "url": "https://files.pythonhosted.org/packages/da/61/bc881862b6e6ca57dfe66d30f6e0867f8ad3880fb9551a4377e171591261/yt-archiver-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c364c29031c69996e731f11edac362c7", "sha256": "92c76fa8c6df1eef5a084274dea4c8cbd2b66ba2b0641e1af3bf4276489c7874"}, "downloads": -1, "filename": "yt-archiver-0.3.0.tar.gz", "has_sig": false, "md5_digest": "c364c29031c69996e731f11edac362c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9904, "upload_time": "2018-06-03T08:54:04", "upload_time_iso_8601": "2018-06-03T08:54:04.979469Z", "url": "https://files.pythonhosted.org/packages/6c/75/a9a93980b582bcd0f79f13136e31815ce1940e3744d73b9337aa9144073f/yt-archiver-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "4ce942f08a37d54176c49c7e61adbe2f", "sha256": "a12502cb69813b90bf125b00436c71835259991f5143bf66bae2609b764f8a16"}, "downloads": -1, "filename": "yt-archiver-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4ce942f08a37d54176c49c7e61adbe2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9840, "upload_time": "2018-06-03T09:03:30", "upload_time_iso_8601": "2018-06-03T09:03:30.839559Z", "url": "https://files.pythonhosted.org/packages/43/0d/ae3c311f8e4bebf481e3f894d0a1696ba7bd7ef60f2ce36adcde3cf00c82/yt-archiver-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "d59fc06d891438d2ff1ea79e8599b40c", "sha256": "1cbbcdea13758add363d7169f43c781a890a06ac19d382a1652c103837b414aa"}, "downloads": -1, "filename": "yt-archiver-0.3.2.tar.gz", "has_sig": false, "md5_digest": "d59fc06d891438d2ff1ea79e8599b40c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9904, "upload_time": "2018-06-03T14:37:50", "upload_time_iso_8601": "2018-06-03T14:37:50.555853Z", "url": "https://files.pythonhosted.org/packages/f8/7f/438777b0bf701c6374b6f75fdb30462e03fff0c63404cb90992a260915ba/yt-archiver-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "ae8856d5ef153474f681260adabf1634", "sha256": "61d7af5454ef9dbd246d817f2409e1b38b8448b34ec79e0f24c945c742951c4a"}, "downloads": -1, "filename": "yt-archiver-0.3.3.tar.gz", "has_sig": false, "md5_digest": "ae8856d5ef153474f681260adabf1634", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9900, "upload_time": "2018-06-03T14:46:53", "upload_time_iso_8601": "2018-06-03T14:46:53.511002Z", "url": "https://files.pythonhosted.org/packages/61/63/8e9063d069a37876c7c64195e820de6059b23e799f36326cb7e9585f737e/yt-archiver-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "8e0672ee622255b86bfab5b508a9838e", "sha256": "45807da184d22de9ea42be02027720b9ac2d5e5dea9410f91a0069398a6627b9"}, "downloads": -1, "filename": "yt-archiver-0.3.4.tar.gz", "has_sig": false, "md5_digest": "8e0672ee622255b86bfab5b508a9838e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9901, "upload_time": "2018-06-03T14:54:22", "upload_time_iso_8601": "2018-06-03T14:54:22.613347Z", "url": "https://files.pythonhosted.org/packages/4e/0c/7acf2c2096960edc1f7b19fa4bd5da53faf0bc2ed8e63d101c3b973d2a59/yt-archiver-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "89b3d798fd06799341caa3f21ae710b6", "sha256": "7ea56f8d85b496964c3a44974c6ef7b9251468dffa7c92a5bb34a6e84975fab1"}, "downloads": -1, "filename": "yt-archiver-0.3.5.tar.gz", "has_sig": false, "md5_digest": "89b3d798fd06799341caa3f21ae710b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9919, "upload_time": "2018-06-03T19:06:25", "upload_time_iso_8601": "2018-06-03T19:06:25.046691Z", "url": "https://files.pythonhosted.org/packages/3c/d3/aee6c46fd57d93ca874cece9da2287e98eff755ca98303cfb8445c4d95d9/yt-archiver-0.3.5.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d1b84b02f62a144c0a87deb18cb0b895", "sha256": "79a4f49ef4d8a4e13a3143f8165dcb99ac63dc6926d2daba9c67b977633e723b"}, "downloads": -1, "filename": "yt-archiver-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d1b84b02f62a144c0a87deb18cb0b895", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11380, "upload_time": "2018-06-04T14:04:59", "upload_time_iso_8601": "2018-06-04T14:04:59.431558Z", "url": "https://files.pythonhosted.org/packages/07/3d/dc6561825e60a30745d158e7b589229d3872f4cb7e92f502cd34bd099a1b/yt-archiver-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "75b95d7000076be8633add6b7084c5a2", "sha256": "205f6a62b87a3d31a7081573c143040a08c98f7abd35f72cacc1c768c728eb30"}, "downloads": -1, "filename": "yt-archiver-0.5.0.tar.gz", "has_sig": false, "md5_digest": "75b95d7000076be8633add6b7084c5a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11406, "upload_time": "2018-06-21T12:57:45", "upload_time_iso_8601": "2018-06-21T12:57:45.718685Z", "url": "https://files.pythonhosted.org/packages/00/12/b0acb15877b3322b39ed0731ce8e71a98ec3fc6ef03eef3bb8b7b268e675/yt-archiver-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "75b95d7000076be8633add6b7084c5a2", "sha256": "205f6a62b87a3d31a7081573c143040a08c98f7abd35f72cacc1c768c728eb30"}, "downloads": -1, "filename": "yt-archiver-0.5.0.tar.gz", "has_sig": false, "md5_digest": "75b95d7000076be8633add6b7084c5a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11406, "upload_time": "2018-06-21T12:57:45", "upload_time_iso_8601": "2018-06-21T12:57:45.718685Z", "url": "https://files.pythonhosted.org/packages/00/12/b0acb15877b3322b39ed0731ce8e71a98ec3fc6ef03eef3bb8b7b268e675/yt-archiver-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:21:35 2020"}