{"info": {"author": "Antonis Kalou @ JOHAN Sports", "author_email": "antonis@johan-sports.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: System :: Archiving :: Compression"], "description": "============\nPyHeatshrink\n============\n\nPython binding to the `heatshrink LZSS compression\nlibrary <https://github.com/atomicobject/heatshrink>`__.\n\n| **Supported versions:**\n| Python >= 2.6 -- Full\n| Python 3 -- Experimental\n| \n| **Tested platforms:**\n| * OS X > 10.10\n| * Debian 8\n| * FreeBSD 10\n\n************\nInstallation\n************\n\nFrom PyPI:\n\n::\n\n   $ easy_install heatshrink\n   $ pip install heatshrink\n\nManual installation:\n\n::\n\n    $ python setup.py install\n\n*****\nUsage\n*****\n\nFiles/Streams\n=============\n\nThe file interface attempts to imitate the behaviour of the built-in `file` object\nand other file-like objects (E.g. :code:`bz2.BZ2File`), thus you can expect all methods\nimplemented in :code:`file` to also be available.\n\nYou can open a heatshrink file by using the :code:`open` function:\n\n::\n\n    >>> import heatshrink\n    >>> with heatshrink.open('data.bin', mode='wb') as fp:\n    ...     fp.write(\"Is there anybody in there?\")\n\nYou can also use :code:`EncodedFile` directly:\n\n::\n\n    >>> from heatshrink import EncodedFile\n    >>> with EncodedFile('data.bin') as fp:\n    ...     # Read a buffer\n    ...     print('Buffered: %r' % fp.read(256))\n    ...     # Iterate through lines\n    ...     for line in fp:\n    ...         print('Read line: %r' % line)\n   \n\nByte strings\n============\n\nThe encoder accepts any iterable and returns a byte string\ncontaining encoded (compressed) data. \n\n::\n\n    >>> import heatshrink\n    >>> encoded = heatshrink.encode('a string')\n    >>> type(encoded)\n    <type 'str'>  # <class 'bytes'> in Python 3\n    >>> encoded\n    '\\xb0\\xc8.wK\\x95\\xa6\\xddg'\n\nThe decoder accepts any object that implements the buffer protocol and\nreturns a byte representation of the decoded data.\n\n::\n\n    >>> import heatshrink\n    >>> decoded = heatshrink.decode(b'\\xb0\\xc8.wK\\x95\\xa6\\xddg')\n    >>> type(decoded)\n    <type 'str'>  # <class 'bytes'> in Python 3\n    >>> decoded\n    'a string'\n\nParameters\n==========\n\nBoth the encoder and decoder allow providing :code:`window_sz2` and :code:`lookahead_sz2` keywords:\n\n:code:`window_sz2` - The window size determines how far back in the input can be searched for repeated patterns. A window_sz2 of 8 will only use 256 bytes (2^8), while a window_sz2 of 10 will use 1024 bytes (2^10). The latter uses more memory, but may also compress more effectively by detecting more repetition.\n\n:code:`lookahead_sz2` - The lookahead size determines the max length for repeated patterns that are found. If the lookahead_sz2 is 4, a 50-byte run of 'a' characters will be represented as several repeated 16-byte patterns (2^4 is 16), whereas a larger lookahead_sz2 may be able to represent it all at once. The number of bits used for the lookahead size is fixed, so an overly large lookahead size can reduce compression by adding unused size bits to small patterns.\n\n:code:`input_buffer_size` - How large an input buffer to use for the decoder. This impacts how much work the decoder can do in a single step, and a larger buffer will use more memory. An extremely small buffer (say, 1 byte) will add overhead due to lots of suspend/resume function calls, but should not change how well data compresses.\n\n\nCheck out the `heatshrink configuration page <https://github.com/atomicobject/heatshrink#configuration>`__ for more details.\n\n\nFor more use cases, please refer to the `tests folder <https://github.com/johan-sports/pyheatshrink/blob/master/tests>`__.\n\n**********\nBenchmarks\n**********\n\nThe benchmarks check compression/decompression against a ~6MB file:\n\n::\n\n   $ python bench/benchmarks.py\n\n*******\nTesting\n*******\n\nRunning tests is as simple as doing:\n\n::\n\n    $ python setup.py test\n\n*******\nLicense\n*******\n\nISC license", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/johan-sports/pyheatshrink", "keywords": "compression binding heatshrink LZSS", "license": "ISC", "maintainer": null, "maintainer_email": null, "name": "Heatshrink", "package_url": "https://pypi.org/project/Heatshrink/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Heatshrink/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/johan-sports/pyheatshrink"}, "release_url": "https://pypi.org/project/Heatshrink/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "Python bindings to the heatshrink library", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python binding to the <a href=\"https://github.com/atomicobject/heatshrink\" rel=\"nofollow\">heatshrink LZSS compression\nlibrary</a>.</p>\n<div>\n<div><strong>Supported versions:</strong></div>\n<div>Python &gt;= 2.6 \u2013 Full</div>\n<div>Python 3 \u2013 Experimental</div>\n<div><br></div>\n<div><strong>Tested platforms:</strong></div>\n<div>* OS X &gt; 10.10</div>\n<div>* Debian 8</div>\n<div>* FreeBSD 10</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>From PyPI:</p>\n<pre>$ easy_install heatshrink\n$ pip install heatshrink\n</pre>\n<p>Manual installation:</p>\n<pre>$ python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"files-streams\">\n<h3>Files/Streams</h3>\n<p>The file interface attempts to imitate the behaviour of the built-in <cite>file</cite> object\nand other file-like objects (E.g. <code>bz2.BZ2File</code>), thus you can expect all methods\nimplemented in <code>file</code> to also be available.</p>\n<p>You can open a heatshrink file by using the <code>open</code> function:</p>\n<pre>&gt;&gt;&gt; import heatshrink\n&gt;&gt;&gt; with heatshrink.open('data.bin', mode='wb') as fp:\n...     fp.write(\"Is there anybody in there?\")\n</pre>\n<p>You can also use <code>EncodedFile</code> directly:</p>\n<pre>&gt;&gt;&gt; from heatshrink import EncodedFile\n&gt;&gt;&gt; with EncodedFile('data.bin') as fp:\n...     # Read a buffer\n...     print('Buffered: %r' % fp.read(256))\n...     # Iterate through lines\n...     for line in fp:\n...         print('Read line: %r' % line)\n</pre>\n</div>\n<div id=\"byte-strings\">\n<h3>Byte strings</h3>\n<p>The encoder accepts any iterable and returns a byte string\ncontaining encoded (compressed) data.</p>\n<pre>&gt;&gt;&gt; import heatshrink\n&gt;&gt;&gt; encoded = heatshrink.encode('a string')\n&gt;&gt;&gt; type(encoded)\n&lt;type 'str'&gt;  # &lt;class 'bytes'&gt; in Python 3\n&gt;&gt;&gt; encoded\n'\\xb0\\xc8.wK\\x95\\xa6\\xddg'\n</pre>\n<p>The decoder accepts any object that implements the buffer protocol and\nreturns a byte representation of the decoded data.</p>\n<pre>&gt;&gt;&gt; import heatshrink\n&gt;&gt;&gt; decoded = heatshrink.decode(b'\\xb0\\xc8.wK\\x95\\xa6\\xddg')\n&gt;&gt;&gt; type(decoded)\n&lt;type 'str'&gt;  # &lt;class 'bytes'&gt; in Python 3\n&gt;&gt;&gt; decoded\n'a string'\n</pre>\n</div>\n<div id=\"parameters\">\n<h3>Parameters</h3>\n<p>Both the encoder and decoder allow providing <code>window_sz2</code> and <code>lookahead_sz2</code> keywords:</p>\n<p><code>window_sz2</code> - The window size determines how far back in the input can be searched for repeated patterns. A window_sz2 of 8 will only use 256 bytes (2^8), while a window_sz2 of 10 will use 1024 bytes (2^10). The latter uses more memory, but may also compress more effectively by detecting more repetition.</p>\n<p><code>lookahead_sz2</code> - The lookahead size determines the max length for repeated patterns that are found. If the lookahead_sz2 is 4, a 50-byte run of \u2018a\u2019 characters will be represented as several repeated 16-byte patterns (2^4 is 16), whereas a larger lookahead_sz2 may be able to represent it all at once. The number of bits used for the lookahead size is fixed, so an overly large lookahead size can reduce compression by adding unused size bits to small patterns.</p>\n<p><code>input_buffer_size</code> - How large an input buffer to use for the decoder. This impacts how much work the decoder can do in a single step, and a larger buffer will use more memory. An extremely small buffer (say, 1 byte) will add overhead due to lots of suspend/resume function calls, but should not change how well data compresses.</p>\n<p>Check out the <a href=\"https://github.com/atomicobject/heatshrink#configuration\" rel=\"nofollow\">heatshrink configuration page</a> for more details.</p>\n<p>For more use cases, please refer to the <a href=\"https://github.com/johan-sports/pyheatshrink/blob/master/tests\" rel=\"nofollow\">tests folder</a>.</p>\n</div>\n</div>\n<div id=\"benchmarks\">\n<h2>Benchmarks</h2>\n<p>The benchmarks check compression/decompression against a ~6MB file:</p>\n<pre>$ python bench/benchmarks.py\n</pre>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<p>Running tests is as simple as doing:</p>\n<pre>$ python setup.py test\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>ISC license</p>\n</div>\n\n          </div>"}, "last_serial": 2459081, "releases": {"0.2.2": [{"comment_text": "built for Darwin-15.5.0", "digests": {"md5": "37cbac6d47ca5306fa83439c23a3a5d6", "sha256": "73c270d89bd0f6248a989db627283685a2fcba3cefddf6e0263cb22ae522c192"}, "downloads": -1, "filename": "Heatshrink-0.2.2.macosx-10.11-x86_64.tar.gz", "has_sig": false, "md5_digest": "37cbac6d47ca5306fa83439c23a3a5d6", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 37657, "upload_time": "2016-07-14T12:32:21", "upload_time_iso_8601": "2016-07-14T12:32:21.011965Z", "url": "https://files.pythonhosted.org/packages/9a/1f/00a0b26b8f7b588fca1254f7d039554bfa05e9419676633ec7ac40b6703c/Heatshrink-0.2.2.macosx-10.11-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c1dac3e12c61637d449de1b9862bfe0", "sha256": "fd63c6cb783539b6cd8026dd74a9d9a3fc65201501273bf72fb7d4e9b7931f03"}, "downloads": -1, "filename": "Heatshrink-0.2.2.tar.gz", "has_sig": false, "md5_digest": "8c1dac3e12c61637d449de1b9862bfe0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58933, "upload_time": "2016-07-14T12:32:24", "upload_time_iso_8601": "2016-07-14T12:32:24.119422Z", "url": "https://files.pythonhosted.org/packages/c7/26/d162fe6459891ae821f23d0d5c35e7357ad7e54d0530d0da1923d3cc94d1/Heatshrink-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "built for Darwin-15.5.0", "digests": {"md5": "e94e9727a9ada2b2e8cc22a6462c98ef", "sha256": "0b1436a9c5e792298bb8b3187835db5a2f6d61d7e27bdc21742a083c15dc9cd5"}, "downloads": -1, "filename": "Heatshrink-0.2.3.macosx-10.11-x86_64.tar.gz", "has_sig": false, "md5_digest": "e94e9727a9ada2b2e8cc22a6462c98ef", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 36776, "upload_time": "2016-07-15T09:55:26", "upload_time_iso_8601": "2016-07-15T09:55:26.330757Z", "url": "https://files.pythonhosted.org/packages/ac/df/a8546b31fafb8233eccb46bfccc793a53aa568ef244d6332c640d830f0a8/Heatshrink-0.2.3.macosx-10.11-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ff3d10ee0e392f68b14341d0601a1b0", "sha256": "075f6af87f12a8dfd3ceac0e8155dc3fa90d063967e6229b69730d5ef8aa36d0"}, "downloads": -1, "filename": "Heatshrink-0.2.3.tar.gz", "has_sig": false, "md5_digest": "3ff3d10ee0e392f68b14341d0601a1b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57884, "upload_time": "2016-07-15T09:55:29", "upload_time_iso_8601": "2016-07-15T09:55:29.837043Z", "url": "https://files.pythonhosted.org/packages/9d/00/80df8bdeed5575e6453373463e0b48674ae4a5d08a96df48c594872d0401/Heatshrink-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "built for Linux-3.16.0-4-amd64-x86_64-with-glibc2.4", "digests": {"md5": "fb0203987a54fb4870c541a32ca11658", "sha256": "afae26b61a6ef766341b12c8b6fed331bb5eabc1ace9ceb81b97c8c7666a3e3b"}, "downloads": -1, "filename": "Heatshrink-0.2.4.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "fb0203987a54fb4870c541a32ca11658", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 133057, "upload_time": "2016-10-24T14:45:09", "upload_time_iso_8601": "2016-10-24T14:45:09.882794Z", "url": "https://files.pythonhosted.org/packages/ce/b6/e2990770a18dd3b2bafedec9c4b6ca8b27ed18dcdb67b3613fb64544a6ec/Heatshrink-0.2.4.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d6ae0bd097b3ce48fb76fac9857787c", "sha256": "b6a93892863ae9d1719f03a96cb6457101c36706c71f39fb9d5ec9a01b671ef2"}, "downloads": -1, "filename": "Heatshrink-0.2.4.tar.gz", "has_sig": false, "md5_digest": "1d6ae0bd097b3ce48fb76fac9857787c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57894, "upload_time": "2016-10-24T14:45:20", "upload_time_iso_8601": "2016-10-24T14:45:20.675061Z", "url": "https://files.pythonhosted.org/packages/3a/b1/4eb0f5f3991f6c8c85c70603f804d61bfa741e8cbf3538f24554b3722219/Heatshrink-0.2.4.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "built for Linux-3.16.0-4-amd64-x86_64-with-glibc2.4", "digests": {"md5": "371320030608f584b69b0683c1685c20", "sha256": "083428b8f8153a060a33da83312b25f0932b6c9c8d230448b7a5a27db70fc894"}, "downloads": -1, "filename": "Heatshrink-0.3.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "371320030608f584b69b0683c1685c20", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 191672, "upload_time": "2016-11-09T16:35:14", "upload_time_iso_8601": "2016-11-09T16:35:14.345601Z", "url": "https://files.pythonhosted.org/packages/f4/73/6cbedc04d6634c0e2ded9dc40a91744e3304f123c81cfc327995726f8e56/Heatshrink-0.3.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "8ff4786f7450832ed2ca201a33cc96cb", "sha256": "678ae072fad65e6fbed16dff85cdf48a5207bc309d701c539256fdd0c85410d2"}, "downloads": -1, "filename": "Heatshrink-0.3.0.tar.gz", "has_sig": false, "md5_digest": "8ff4786f7450832ed2ca201a33cc96cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 279742, "upload_time": "2016-11-09T16:35:10", "upload_time_iso_8601": "2016-11-09T16:35:10.101806Z", "url": "https://files.pythonhosted.org/packages/a3/13/a27acef9468f41b57cce4a67991a8012eaea81448ea1ed883410d978f107/Heatshrink-0.3.0.tar.gz", "yanked": false}], "0.3.1": [], "0.3.2": [{"comment_text": "built for Linux-3.16.0-4-amd64-x86_64-with-glibc2.4", "digests": {"md5": "fb411400e59cd2b57b2174ddb550cde2", "sha256": "379c966aa3e7e504c1ffe0d0a74510d21523006ea332b8e5fccbd6edbfa13866"}, "downloads": -1, "filename": "Heatshrink-0.3.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "fb411400e59cd2b57b2174ddb550cde2", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 191887, "upload_time": "2016-11-14T10:20:03", "upload_time_iso_8601": "2016-11-14T10:20:03.700908Z", "url": "https://files.pythonhosted.org/packages/50/e3/8e9e54bd9271fd8de74b1bd326212292b07fa6159ae17fa4c5963429941e/Heatshrink-0.3.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c961c0370bdd57af19c9c0a7da0188b", "sha256": "f8cbbabc4ca4b1de25ba8017baad85669bd35e867107a8717e2bfdc21b02b147"}, "downloads": -1, "filename": "Heatshrink-0.3.2.tar.gz", "has_sig": false, "md5_digest": "6c961c0370bdd57af19c9c0a7da0188b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280494, "upload_time": "2016-11-14T10:19:59", "upload_time_iso_8601": "2016-11-14T10:19:59.343501Z", "url": "https://files.pythonhosted.org/packages/b9/23/6f8dc6744de2c6ad36477de04567be5ced5b2d5e64f0844c0815b198d95a/Heatshrink-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Linux-3.16.0-4-amd64-x86_64-with-glibc2.4", "digests": {"md5": "fb411400e59cd2b57b2174ddb550cde2", "sha256": "379c966aa3e7e504c1ffe0d0a74510d21523006ea332b8e5fccbd6edbfa13866"}, "downloads": -1, "filename": "Heatshrink-0.3.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "fb411400e59cd2b57b2174ddb550cde2", "packagetype": "bdist_dumb", "python_version": "2.7", "requires_python": null, "size": 191887, "upload_time": "2016-11-14T10:20:03", "upload_time_iso_8601": "2016-11-14T10:20:03.700908Z", "url": "https://files.pythonhosted.org/packages/50/e3/8e9e54bd9271fd8de74b1bd326212292b07fa6159ae17fa4c5963429941e/Heatshrink-0.3.2.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c961c0370bdd57af19c9c0a7da0188b", "sha256": "f8cbbabc4ca4b1de25ba8017baad85669bd35e867107a8717e2bfdc21b02b147"}, "downloads": -1, "filename": "Heatshrink-0.3.2.tar.gz", "has_sig": false, "md5_digest": "6c961c0370bdd57af19c9c0a7da0188b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 280494, "upload_time": "2016-11-14T10:19:59", "upload_time_iso_8601": "2016-11-14T10:19:59.343501Z", "url": "https://files.pythonhosted.org/packages/b9/23/6f8dc6744de2c6ad36477de04567be5ced5b2d5e64f0844c0815b198d95a/Heatshrink-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:54 2020"}