{"info": {"author": "pastelmind", "author_email": "keepyourhonor@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# d2animdata\n![Build status](https://github.com/pastelmind/d2animdata/workflows/Build/badge.svg)\n\nd2animdata is a command-line program for editing **AnimData.D2**. AnimData.D2 is a propriety file format used by [Diablo 2] to store animation metadata for characters and monsters.\n\nd2animdata can *decompile* AnimData.D2 to text-based file formats, such as [tabbed text] and [JSON] (see [Supported File Formats] for more info). Modders can edit these files to add new animations or modify existing ones. After editing, d2animdata can *compile* it back to a new AnimData.D2 file.\n\nd2animdata is written in Python. It supports Python 3.6 and above, and has been tested on Windows 10 and Ubuntu Linux.\n\n\u26a0 This project is very much in Alpha. There may be several bugs. Always back up your AnimData.D2 file before using d2animdata.\n\n[mod]: https://en.wikipedia.org/wiki/Mod_(video_games)\n[Diablo 2]: https://en.wikipedia.org/wiki/Diablo_II\n[tabbed text]: https://en.wikipedia.org/wiki/Tab-separated_values\n[JSON]: https://en.wikipedia.org/wiki/JSON\n\n## Installing\n\nTo use d2animdata, you must install [Python 3](https://www.python.org/). Then, open a command-line shell (e.g. `cmd.exe`) and enter:\n\n```console\npip install d2animdata\n```\n\nThis will install d2animdata on your computer.\n\n## Commands\n\nTo view help for a command, enter:\n\n```\nd2animdata <command> --help\n```\n\n### decompile\n\nDecompiles an AnimData.D2 file to tabbed text or JSON file.\n\n```console\n$ d2animdata decompile --help\nusage: d2animdata decompile [-h] [--dedupe] [--sort] (--json | --txt)\n                            animdata_d2 target\n\npositional arguments:\n  animdata_d2  AnimData.D2 file to decompile\n  target       JSON or tabbed text file to save to\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --dedupe     Remove records with duplicate COF names\n  --sort       Sort the records alphabetically before saving\n  --json       Decompile to JSON\n  --txt        Decompile to tabbed text (TXT)\n```\n\nExample: Decompile `path/to/AnimData.D2` to a JSON file.\n```\nd2animdata decompile --json path/to/AnimData.D2 path/to/my-animdata.json\n```\n\nExample: Decompile `path/to/AnimData.D2` to a tabbed text file.\n```\nd2animdata decompile --txt path/to/AnimData.D2 path/to/my-animdata.txt\n```\n\n### compile\n\nCompiles a tabbed text or JSON file to AnimData.D2 file.\n\n```console\n$ d2animdata compile --help\nusage: d2animdata compile [-h] [--dedupe] [--sort] (--json | --txt)\n                          source animdata_d2\n\npositional arguments:\n  source       JSON or tabbed text file to compile\n  animdata_d2  AnimData.D2 file to save to\n\noptional arguments:\n  -h, --help   show this help message and exit\n  --dedupe     Remove records with duplicate COF names\n  --sort       Sort the records alphabetically before saving\n  --json       Compile JSON\n  --txt        Compile tabbed text (TXT)\n```\n\nExample: Compile a JSON file to `path/to/AnimData-result.D2`.\n```\nd2animdata compile --json path/to/my-animdata.json path/to/AnimData-result.D2\n```\n\nExample: Compile a tabbed text file to `path/to/AnimData-result.D2`.\n```\nd2animdata compile --txt path/to/my-animdata.txt path/to/AnimData-result.D2\n```\n\n## Supported File Formats\n[Supported File Formats]: #file-formats\n\nd2animdata supports two file formats: [tabbed text] (`.txt`) and JSON (`.json`).\n\n### Tabbed text\nTabbed text files (`.txt`) can be edited with a spreadsheet program (e.g. Excel, AFJ Sheet Edit). Diablo 2 modders should already be familiar with these files, as Diablo 2 uses tabbed text files extensively to control various aspects of the game.\n\nd2animdata is compatible with Paul Siramy's excellent `animdata_edit` program, which is another popular tool for (de)compiling AnimData.D2 to tabbed text.\n\n### JSON\nJSON files (`.json`) can be edited with any text editor (e.g. Notepad), though I recommend using one with syntax highlighting support (e.g. Notepad++, Visual Studio Code).\n\nJSON has several advantages over tabbed text:\n\n* JSON files can be added to a [version control system] (VCS), such as Git. This allows you to keep track of changes made to a file. You can compare changes across time and revert unwanted changes.\n\n    Tabbed text files and AnimData.D2 can also be added to a VCS. However, tabbed text files are tricky to deal with, because they don't produce nice-looking diff logs when compared. Binary files, such as AnimData.D2, cannot be compared at all. On the other hand, JSON files create diff logs that are easy to read.\n* JSON files are easier to handle in several programming languages.\n* Unlike tabbed text, JSON does not suffer from tricky whitespace issues.\n\n[version control system]: https://en.wikipedia.org/wiki/Version_control\n\n## API Usage\n\nd2animdata can also be imported from a Python script to load, edit, and save AnimData.D2.\n\nExample:\n\n```python\nfrom d2animdata import load, dump\n\n# Load an AnimData.D2 file\nwith open('AnimData.D2', mode='rb') as animdata_file:\n    animdata = load(animdata_file)\n# animdata now contains a list of Record objects.\n\n# Iterate through each record, printing its information\nfor record in animdata:\n    print('COF name:', record.cof_name)\n    print('Frames per direction:', record.frames_per_direction)\n    print('Animation speed:', record.animation_speed)\n    print('Trigger frames:', record.triggers)\n\n# Let's find a record named '0DNUHTH' and edit it\nfor record in animdata:\n    if record.cof_name == '0DNUHTH':\n        record.animation_speed = 192\n        # Erase all trigger frames previously set on this record.\n        record.triggers.clear()\n        # Set the trigger code of frame #10 to 1\n        # Since frame indices begin at 0, we're actually modifying the 11th frame.\n        record.triggers[10] = 1\n        break\n\n# Save the records to AnimData.D2\nwith open('AnimData.D2', mode='wb') as animdata_file:\n    dump(animdata, animdata_file)\n```\n\nSee the [API docs](./api.md) for a complete reference of available functions and classes.\n\n## Development\n\nTo develop d2animdata, you will want a good Python editor. I recommend [Visual Studio Code] with the [Microsoft Python extension](https://marketplace.visualstudio.com/items?itemName=ms-python.python).\n\nTo develop d2animdata, clone this repository and create a [virtual environment]. Then run the following commands to install the project locally for development:\n\n```sh\n# For Windows\npython -m pip install -r requirements-dev.txt\nflit install --pth-file\n# For non-Windows\npip install -r requirements-dev.txt\nflit install\n```\n\nd2animdata uses:\n\n* [Flit] to build source distributions and wheels.\n* [Tox] to run tests.\n* [Black] and [isort] to format code.\n* [Pylint] to check code.\n* [pydocmd] to generate API documentation from source code.\n    * Run `pydocmd generate` to generate `api.md`.\n\n[Black]: https://github.com/psf/black\n[Flit]: https://flit.readthedocs.io/\n[isort]: https://timothycrosley.github.io/isort/\n[pydocmd]: https://niklasrosenstein.github.io/pydoc-markdown/\n[Pylint]: https://www.pylint.org/\n[Tox]: https://tox.readthedocs.io/\n[virtual environment]: https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments\n[Visual Studio Code]: https://code.visualstudio.com/\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pastelmind/d2animdata", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "d2animdata", "package_url": "https://pypi.org/project/d2animdata/", "platform": "", "project_url": "https://pypi.org/project/d2animdata/", "project_urls": {"Homepage": "https://github.com/pastelmind/d2animdata"}, "release_url": "https://pypi.org/project/d2animdata/0.2.0/", "requires_dist": ["dataclasses ~= 0.7; python_version < '3.7'"], "requires_python": ">= 3.6", "summary": "Read, write, and convert AnimData.D2 to JSON & tabbed TXT (and vice versa).", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>d2animdata</h1>\n<p><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52a5c9dbbfef1b9db2d510212738f4cc1c6f7267/68747470733a2f2f6769746875622e636f6d2f70617374656c6d696e642f6432616e696d646174612f776f726b666c6f77732f4275696c642f62616467652e737667\"></p>\n<p>d2animdata is a command-line program for editing <strong>AnimData.D2</strong>. AnimData.D2 is a propriety file format used by <a href=\"https://en.wikipedia.org/wiki/Diablo_II\" rel=\"nofollow\">Diablo 2</a> to store animation metadata for characters and monsters.</p>\n<p>d2animdata can <em>decompile</em> AnimData.D2 to text-based file formats, such as <a href=\"https://en.wikipedia.org/wiki/Tab-separated_values\" rel=\"nofollow\">tabbed text</a> and <a href=\"https://en.wikipedia.org/wiki/JSON\" rel=\"nofollow\">JSON</a> (see <a href=\"#file-formats\" rel=\"nofollow\">Supported File Formats</a> for more info). Modders can edit these files to add new animations or modify existing ones. After editing, d2animdata can <em>compile</em> it back to a new AnimData.D2 file.</p>\n<p>d2animdata is written in Python. It supports Python 3.6 and above, and has been tested on Windows 10 and Ubuntu Linux.</p>\n<p>\u26a0 This project is very much in Alpha. There may be several bugs. Always back up your AnimData.D2 file before using d2animdata.</p>\n<h2>Installing</h2>\n<p>To use d2animdata, you must install <a href=\"https://www.python.org/\" rel=\"nofollow\">Python 3</a>. Then, open a command-line shell (e.g. <code>cmd.exe</code>) and enter:</p>\n<pre><span class=\"go\">pip install d2animdata</span>\n</pre>\n<p>This will install d2animdata on your computer.</p>\n<h2>Commands</h2>\n<p>To view help for a command, enter:</p>\n<pre><code>d2animdata &lt;command&gt; --help\n</code></pre>\n<h3>decompile</h3>\n<p>Decompiles an AnimData.D2 file to tabbed text or JSON file.</p>\n<pre><span class=\"gp\">$</span> d2animdata decompile --help\n<span class=\"go\">usage: d2animdata decompile [-h] [--dedupe] [--sort] (--json | --txt)</span>\n<span class=\"go\">                            animdata_d2 target</span>\n\n<span class=\"go\">positional arguments:</span>\n<span class=\"go\">  animdata_d2  AnimData.D2 file to decompile</span>\n<span class=\"go\">  target       JSON or tabbed text file to save to</span>\n\n<span class=\"go\">optional arguments:</span>\n<span class=\"go\">  -h, --help   show this help message and exit</span>\n<span class=\"go\">  --dedupe     Remove records with duplicate COF names</span>\n<span class=\"go\">  --sort       Sort the records alphabetically before saving</span>\n<span class=\"go\">  --json       Decompile to JSON</span>\n<span class=\"go\">  --txt        Decompile to tabbed text (TXT)</span>\n</pre>\n<p>Example: Decompile <code>path/to/AnimData.D2</code> to a JSON file.</p>\n<pre><code>d2animdata decompile --json path/to/AnimData.D2 path/to/my-animdata.json\n</code></pre>\n<p>Example: Decompile <code>path/to/AnimData.D2</code> to a tabbed text file.</p>\n<pre><code>d2animdata decompile --txt path/to/AnimData.D2 path/to/my-animdata.txt\n</code></pre>\n<h3>compile</h3>\n<p>Compiles a tabbed text or JSON file to AnimData.D2 file.</p>\n<pre><span class=\"gp\">$</span> d2animdata compile --help\n<span class=\"go\">usage: d2animdata compile [-h] [--dedupe] [--sort] (--json | --txt)</span>\n<span class=\"go\">                          source animdata_d2</span>\n\n<span class=\"go\">positional arguments:</span>\n<span class=\"go\">  source       JSON or tabbed text file to compile</span>\n<span class=\"go\">  animdata_d2  AnimData.D2 file to save to</span>\n\n<span class=\"go\">optional arguments:</span>\n<span class=\"go\">  -h, --help   show this help message and exit</span>\n<span class=\"go\">  --dedupe     Remove records with duplicate COF names</span>\n<span class=\"go\">  --sort       Sort the records alphabetically before saving</span>\n<span class=\"go\">  --json       Compile JSON</span>\n<span class=\"go\">  --txt        Compile tabbed text (TXT)</span>\n</pre>\n<p>Example: Compile a JSON file to <code>path/to/AnimData-result.D2</code>.</p>\n<pre><code>d2animdata compile --json path/to/my-animdata.json path/to/AnimData-result.D2\n</code></pre>\n<p>Example: Compile a tabbed text file to <code>path/to/AnimData-result.D2</code>.</p>\n<pre><code>d2animdata compile --txt path/to/my-animdata.txt path/to/AnimData-result.D2\n</code></pre>\n<h2>Supported File Formats</h2>\n<p>d2animdata supports two file formats: <a href=\"https://en.wikipedia.org/wiki/Tab-separated_values\" rel=\"nofollow\">tabbed text</a> (<code>.txt</code>) and JSON (<code>.json</code>).</p>\n<h3>Tabbed text</h3>\n<p>Tabbed text files (<code>.txt</code>) can be edited with a spreadsheet program (e.g. Excel, AFJ Sheet Edit). Diablo 2 modders should already be familiar with these files, as Diablo 2 uses tabbed text files extensively to control various aspects of the game.</p>\n<p>d2animdata is compatible with Paul Siramy's excellent <code>animdata_edit</code> program, which is another popular tool for (de)compiling AnimData.D2 to tabbed text.</p>\n<h3>JSON</h3>\n<p>JSON files (<code>.json</code>) can be edited with any text editor (e.g. Notepad), though I recommend using one with syntax highlighting support (e.g. Notepad++, Visual Studio Code).</p>\n<p>JSON has several advantages over tabbed text:</p>\n<ul>\n<li>\n<p>JSON files can be added to a <a href=\"https://en.wikipedia.org/wiki/Version_control\" rel=\"nofollow\">version control system</a> (VCS), such as Git. This allows you to keep track of changes made to a file. You can compare changes across time and revert unwanted changes.</p>\n<p>Tabbed text files and AnimData.D2 can also be added to a VCS. However, tabbed text files are tricky to deal with, because they don't produce nice-looking diff logs when compared. Binary files, such as AnimData.D2, cannot be compared at all. On the other hand, JSON files create diff logs that are easy to read.</p>\n</li>\n<li>\n<p>JSON files are easier to handle in several programming languages.</p>\n</li>\n<li>\n<p>Unlike tabbed text, JSON does not suffer from tricky whitespace issues.</p>\n</li>\n</ul>\n<h2>API Usage</h2>\n<p>d2animdata can also be imported from a Python script to load, edit, and save AnimData.D2.</p>\n<p>Example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">d2animdata</span> <span class=\"kn\">import</span> <span class=\"n\">load</span><span class=\"p\">,</span> <span class=\"n\">dump</span>\n\n<span class=\"c1\"># Load an AnimData.D2 file</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'AnimData.D2'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'rb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">animdata_file</span><span class=\"p\">:</span>\n    <span class=\"n\">animdata</span> <span class=\"o\">=</span> <span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">animdata_file</span><span class=\"p\">)</span>\n<span class=\"c1\"># animdata now contains a list of Record objects.</span>\n\n<span class=\"c1\"># Iterate through each record, printing its information</span>\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">animdata</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'COF name:'</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">cof_name</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Frames per direction:'</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">frames_per_direction</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Animation speed:'</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">animation_speed</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Trigger frames:'</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">triggers</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Let's find a record named '0DNUHTH' and edit it</span>\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">animdata</span><span class=\"p\">:</span>\n    <span class=\"k\">if</span> <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">cof_name</span> <span class=\"o\">==</span> <span class=\"s1\">'0DNUHTH'</span><span class=\"p\">:</span>\n        <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">animation_speed</span> <span class=\"o\">=</span> <span class=\"mi\">192</span>\n        <span class=\"c1\"># Erase all trigger frames previously set on this record.</span>\n        <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">triggers</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n        <span class=\"c1\"># Set the trigger code of frame #10 to 1</span>\n        <span class=\"c1\"># Since frame indices begin at 0, we're actually modifying the 11th frame.</span>\n        <span class=\"n\">record</span><span class=\"o\">.</span><span class=\"n\">triggers</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n        <span class=\"k\">break</span>\n\n<span class=\"c1\"># Save the records to AnimData.D2</span>\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'AnimData.D2'</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"s1\">'wb'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">animdata_file</span><span class=\"p\">:</span>\n    <span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"n\">animdata</span><span class=\"p\">,</span> <span class=\"n\">animdata_file</span><span class=\"p\">)</span>\n</pre>\n<p>See the <a href=\"./api.md\" rel=\"nofollow\">API docs</a> for a complete reference of available functions and classes.</p>\n<h2>Development</h2>\n<p>To develop d2animdata, you will want a good Python editor. I recommend <a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">Visual Studio Code</a> with the <a href=\"https://marketplace.visualstudio.com/items?itemName=ms-python.python\" rel=\"nofollow\">Microsoft Python extension</a>.</p>\n<p>To develop d2animdata, clone this repository and create a <a href=\"https://packaging.python.org/tutorials/installing-packages/#creating-virtual-environments\" rel=\"nofollow\">virtual environment</a>. Then run the following commands to install the project locally for development:</p>\n<pre><span class=\"c1\"># For Windows</span>\npython -m pip install -r requirements-dev.txt\nflit install --pth-file\n<span class=\"c1\"># For non-Windows</span>\npip install -r requirements-dev.txt\nflit install\n</pre>\n<p>d2animdata uses:</p>\n<ul>\n<li><a href=\"https://flit.readthedocs.io/\" rel=\"nofollow\">Flit</a> to build source distributions and wheels.</li>\n<li><a href=\"https://tox.readthedocs.io/\" rel=\"nofollow\">Tox</a> to run tests.</li>\n<li><a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a> and <a href=\"https://timothycrosley.github.io/isort/\" rel=\"nofollow\">isort</a> to format code.</li>\n<li><a href=\"https://www.pylint.org/\" rel=\"nofollow\">Pylint</a> to check code.</li>\n<li><a href=\"https://niklasrosenstein.github.io/pydoc-markdown/\" rel=\"nofollow\">pydocmd</a> to generate API documentation from source code.\n<ul>\n<li>Run <code>pydocmd generate</code> to generate <code>api.md</code>.</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6810016, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bd06fe00fc68b91eca47df5087522325", "sha256": "8ae2101916f6f5b4c2cc2538d1c65ec9442c237fdc826aa43ab22db4ee87da5e"}, "downloads": -1, "filename": "d2animdata-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd06fe00fc68b91eca47df5087522325", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 11427, "upload_time": "2020-03-11T06:52:01", "upload_time_iso_8601": "2020-03-11T06:52:01.138785Z", "url": "https://files.pythonhosted.org/packages/0b/56/7aaa6819b60ae9c71aeff5f13273b098df1d9e37269d97538fe1cd8e0a51/d2animdata-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0dcf94eb8224710b9196d60ef6fdd819", "sha256": "26d4ac9bc03314eff1fec81bbc282ee2bc39b3bd6f98856b921f3590891376d3"}, "downloads": -1, "filename": "d2animdata-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0dcf94eb8224710b9196d60ef6fdd819", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 11064, "upload_time": "2020-03-11T06:52:02", "upload_time_iso_8601": "2020-03-11T06:52:02.811683Z", "url": "https://files.pythonhosted.org/packages/18/1b/d9b842d4cc1280a4d0411a9f742aea01ede6b4302d9a448aeb882c7f99de/d2animdata-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f3e066451e4d1d707e3fe6eb8fc2f110", "sha256": "202ef54f477a00a7ee622c9b1884f3159efe1b34b6103090736877d00d652ca8"}, "downloads": -1, "filename": "d2animdata-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3e066451e4d1d707e3fe6eb8fc2f110", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 11947, "upload_time": "2020-03-14T03:18:20", "upload_time_iso_8601": "2020-03-14T03:18:20.991369Z", "url": "https://files.pythonhosted.org/packages/90/f0/81b92e6ecc0b0fc17d276cecfc7c14c2f7c2d7a2750ece2b297c96bc7f22/d2animdata-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b363c63b4514f14562a0c982c50b594", "sha256": "8501e792707b35c50f482cc977a580c873abb2e44c3728326791038b626c0051"}, "downloads": -1, "filename": "d2animdata-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2b363c63b4514f14562a0c982c50b594", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 11821, "upload_time": "2020-03-14T03:18:22", "upload_time_iso_8601": "2020-03-14T03:18:22.199050Z", "url": "https://files.pythonhosted.org/packages/77/07/3b91fb7786a9ef830037460a5342cd36f2edd0594f3d595649804cdc6e23/d2animdata-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3e066451e4d1d707e3fe6eb8fc2f110", "sha256": "202ef54f477a00a7ee622c9b1884f3159efe1b34b6103090736877d00d652ca8"}, "downloads": -1, "filename": "d2animdata-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3e066451e4d1d707e3fe6eb8fc2f110", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">= 3.6", "size": 11947, "upload_time": "2020-03-14T03:18:20", "upload_time_iso_8601": "2020-03-14T03:18:20.991369Z", "url": "https://files.pythonhosted.org/packages/90/f0/81b92e6ecc0b0fc17d276cecfc7c14c2f7c2d7a2750ece2b297c96bc7f22/d2animdata-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b363c63b4514f14562a0c982c50b594", "sha256": "8501e792707b35c50f482cc977a580c873abb2e44c3728326791038b626c0051"}, "downloads": -1, "filename": "d2animdata-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2b363c63b4514f14562a0c982c50b594", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 11821, "upload_time": "2020-03-14T03:18:22", "upload_time_iso_8601": "2020-03-14T03:18:22.199050Z", "url": "https://files.pythonhosted.org/packages/77/07/3b91fb7786a9ef830037460a5342cd36f2edd0594f3d595649804cdc6e23/d2animdata-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:59 2020"}