{"info": {"author": "Kristjan Eimre, Pezhman Zarabadi-Poor", "author_email": "kristjaneimre@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: AiiDA", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python"], "description": "[![Build Status](https://travis-ci.org/nanotech-empa/aiida-gaussian.svg?branch=master)](https://travis-ci.org/nanotech-empa/aiida-gaussian)\n[![Coverage Status](https://coveralls.io/repos/github/nanotech-empa/aiida-gaussian/badge.svg?branch=master)](https://coveralls.io/github/nanotech-empa/aiida-gaussian?branch=master)\n[![PyPI version](https://badge.fury.io/py/aiida-gaussian.svg)](https://badge.fury.io/py/aiida-gaussian)\n\n# aiida-gaussian\n\nAiiDA plugin for the Gaussian quantum chemistry software\n\n## Features\n\nGaussian input can be provided as a python dictionary following the convention defined by [pymatgen](https://pymatgen.org/)\n```python\nparameters = {\n    'functional':'PBE1PBE',\n    'basis_set':'6-31g',\n    'charge': 0,\n    'multiplicity': 1,\n    'link0_parameters': {\n        '%chk':'aiida.chk',\n        '%mem':\"1024MB\",\n        '%nprocshared': 4,\n    },\n    'route_parameters': {\n        'nosymm': None,\n        'output':'wfx',\n        'opt': 'tight',\n    },\n    'input_parameters': { # appended at the end of the input\n        'output.wfx':None\n    }, \n}\n```\nSpecifying `key: None` adds only the keyword without the equals sign.\n\nMultiple `link1` sections are allowed through the `extra_link1_sections` parameter but this is discouraged and steps should be separated into AiiDA workflow steps.\n\nAdditionally, simple plugins to submit the Gaussian utilities `formchk` and `cubegen` are provided.\n\n## Installation\n\n```shell\npip install aiida-gaussian\n```\n\n## Usage\n\nA quick demo of how to submit a calculation:\n```shell\nverdi daemon start         # make sure the daemon is running\ncd examples\nverdi run example.py        # submit test calculation\nverdi process list -a  # check status of calculation\n```\n\n## License\n\nMIT\n\n## Contact\n\nkristjaneimre@gmail.com\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nanotech-empa/aiida-gaussian", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiida-gaussian", "package_url": "https://pypi.org/project/aiida-gaussian/", "platform": "", "project_url": "https://pypi.org/project/aiida-gaussian/", "project_urls": {"Homepage": "https://github.com/nanotech-empa/aiida-gaussian"}, "release_url": "https://pypi.org/project/aiida-gaussian/0.2.0/", "requires_dist": ["aiida-core (<2.0.0,>=1.0.0)", "sphinx ; extra == 'docs'", "sphinxcontrib-contentui ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'", "sphinxcontrib-details-directive ; (python_version >= \"3.0\") and extra == 'docs'", "pre-commit (==1.20.0) ; extra == 'pre-commit'", "prospector (==1.1.7) ; extra == 'pre-commit'", "astroid (==1.6.6) ; (python_version < \"3.0\") and extra == 'pre-commit'", "pylint-django (<0.9) ; (python_version < \"3.0\") and extra == 'pre-commit'", "pylint (==1.9.4) ; (python_version < \"3.0\") and extra == 'pre-commit'", "astroid (==2.2.5) ; (python_version >= \"3.0\") and extra == 'pre-commit'", "pylint (==2.3.1) ; (python_version >= \"3.0\") and extra == 'pre-commit'", "pgtest (~=1.3.1) ; extra == 'testing'", "wheel (~=0.31) ; extra == 'testing'", "coverage ; extra == 'testing'", "pytest (<5.0.0,~=3.6) ; extra == 'testing'", "pytest-cov ; extra == 'testing'"], "requires_python": "", "summary": "AiiDA plugin for the Gaussian quantum chemistry software", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/nanotech-empa/aiida-gaussian\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/627a389aa225972e7861db5d47bdc718cc9c0648/68747470733a2f2f7472617669732d63692e6f72672f6e616e6f746563682d656d70612f61696964612d676175737369616e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/nanotech-empa/aiida-gaussian?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/67727ab6da5a6948e2073f0b53b7cc7594134c8b/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6e616e6f746563682d656d70612f61696964612d676175737369616e2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/aiida-gaussian\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2938fc412b915070aad5c06d9a92b5fc94582d46/68747470733a2f2f62616467652e667572792e696f2f70792f61696964612d676175737369616e2e737667\"></a></p>\n<h1>aiida-gaussian</h1>\n<p>AiiDA plugin for the Gaussian quantum chemistry software</p>\n<h2>Features</h2>\n<p>Gaussian input can be provided as a python dictionary following the convention defined by <a href=\"https://pymatgen.org/\" rel=\"nofollow\">pymatgen</a></p>\n<pre><span class=\"n\">parameters</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'functional'</span><span class=\"p\">:</span><span class=\"s1\">'PBE1PBE'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'basis_set'</span><span class=\"p\">:</span><span class=\"s1\">'6-31g'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'charge'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s1\">'multiplicity'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s1\">'link0_parameters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'</span><span class=\"si\">%c</span><span class=\"s1\">hk'</span><span class=\"p\">:</span><span class=\"s1\">'aiida.chk'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'%mem'</span><span class=\"p\">:</span><span class=\"s2\">\"1024MB\"</span><span class=\"p\">,</span>\n        <span class=\"s1\">'%nprocshared'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'route_parameters'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'nosymm'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n        <span class=\"s1\">'output'</span><span class=\"p\">:</span><span class=\"s1\">'wfx'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'opt'</span><span class=\"p\">:</span> <span class=\"s1\">'tight'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'input_parameters'</span><span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"c1\"># appended at the end of the input</span>\n        <span class=\"s1\">'output.wfx'</span><span class=\"p\">:</span><span class=\"kc\">None</span>\n    <span class=\"p\">},</span> \n<span class=\"p\">}</span>\n</pre>\n<p>Specifying <code>key: None</code> adds only the keyword without the equals sign.</p>\n<p>Multiple <code>link1</code> sections are allowed through the <code>extra_link1_sections</code> parameter but this is discouraged and steps should be separated into AiiDA workflow steps.</p>\n<p>Additionally, simple plugins to submit the Gaussian utilities <code>formchk</code> and <code>cubegen</code> are provided.</p>\n<h2>Installation</h2>\n<pre>pip install aiida-gaussian\n</pre>\n<h2>Usage</h2>\n<p>A quick demo of how to submit a calculation:</p>\n<pre>verdi daemon start         <span class=\"c1\"># make sure the daemon is running</span>\n<span class=\"nb\">cd</span> examples\nverdi run example.py        <span class=\"c1\"># submit test calculation</span>\nverdi process list -a  <span class=\"c1\"># check status of calculation</span>\n</pre>\n<h2>License</h2>\n<p>MIT</p>\n<h2>Contact</h2>\n<p><a href=\"mailto:kristjaneimre@gmail.com\">kristjaneimre@gmail.com</a></p>\n\n          </div>"}, "last_serial": 6676089, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "efeaf9075e0a56871c4bdab2b375a336", "sha256": "8d0f43dc0942850ef6391d8f116b438e299d2b68ef97da6306f632b801903b3f"}, "downloads": -1, "filename": "aiida_gaussian-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "efeaf9075e0a56871c4bdab2b375a336", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13268, "upload_time": "2020-02-21T10:45:26", "upload_time_iso_8601": "2020-02-21T10:45:26.617965Z", "url": "https://files.pythonhosted.org/packages/76/f0/cf8313eaacfe4f3faa36d6dfa8e866040bbae0d7a46b1b1f722654e10983/aiida_gaussian-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c9c463af1acac94b867f1930697a3a9", "sha256": "14932956c1b973e2a89e5fb9af43716e365dff7e201aad4cd48a9deb8493a817"}, "downloads": -1, "filename": "aiida-gaussian-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "6c9c463af1acac94b867f1930697a3a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9715, "upload_time": "2020-02-21T10:45:28", "upload_time_iso_8601": "2020-02-21T10:45:28.838778Z", "url": "https://files.pythonhosted.org/packages/53/ce/4fbbe1f3a61e8c237c76d9eff6f1dd9702f4f9dd4f0adfa4965e996ea14b/aiida-gaussian-0.1.0a0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "162d53605121d5c0ea7a028880058453", "sha256": "7c968950300ebc7167b8a3e7fec6a7396c0dc7b5aaa0845ec30b92d8e8578ce0"}, "downloads": -1, "filename": "aiida_gaussian-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "162d53605121d5c0ea7a028880058453", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12698, "upload_time": "2020-02-21T15:41:36", "upload_time_iso_8601": "2020-02-21T15:41:36.354572Z", "url": "https://files.pythonhosted.org/packages/a2/11/512f7e5a34d021e83f88c8445d67efc83da22c862186cbeb330fa88baf79/aiida_gaussian-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "665c016de8d9fb0d27fd4bc115a9761d", "sha256": "b6fd97644b3424ebb9ce95ecb0dd0096c387977e9811f1ee8bb251f7a57d78d6"}, "downloads": -1, "filename": "aiida-gaussian-0.2.0.tar.gz", "has_sig": false, "md5_digest": "665c016de8d9fb0d27fd4bc115a9761d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8126, "upload_time": "2020-02-21T15:41:37", "upload_time_iso_8601": "2020-02-21T15:41:37.634706Z", "url": "https://files.pythonhosted.org/packages/a7/7b/cd145ed98bb7d067b8451275b78d1a121eb23c8f6b9abdfca4327c834fad/aiida-gaussian-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "162d53605121d5c0ea7a028880058453", "sha256": "7c968950300ebc7167b8a3e7fec6a7396c0dc7b5aaa0845ec30b92d8e8578ce0"}, "downloads": -1, "filename": "aiida_gaussian-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "162d53605121d5c0ea7a028880058453", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12698, "upload_time": "2020-02-21T15:41:36", "upload_time_iso_8601": "2020-02-21T15:41:36.354572Z", "url": "https://files.pythonhosted.org/packages/a2/11/512f7e5a34d021e83f88c8445d67efc83da22c862186cbeb330fa88baf79/aiida_gaussian-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "665c016de8d9fb0d27fd4bc115a9761d", "sha256": "b6fd97644b3424ebb9ce95ecb0dd0096c387977e9811f1ee8bb251f7a57d78d6"}, "downloads": -1, "filename": "aiida-gaussian-0.2.0.tar.gz", "has_sig": false, "md5_digest": "665c016de8d9fb0d27fd4bc115a9761d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8126, "upload_time": "2020-02-21T15:41:37", "upload_time_iso_8601": "2020-02-21T15:41:37.634706Z", "url": "https://files.pythonhosted.org/packages/a7/7b/cd145ed98bb7d067b8451275b78d1a121eb23c8f6b9abdfca4327c834fad/aiida-gaussian-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:01 2020"}