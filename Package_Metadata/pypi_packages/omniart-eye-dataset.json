{"info": {"author": "Rogier Knoester", "author_email": "knoesterrogier+omniart@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# OmniArt Eye Dataset\nThis package provides a dataset of 118,576 painted eyes. These eyes are extracted from about 245,000 paintings from the [OmniArt](http://isis-data.science.uva.nl/strezoski/#2) dataset.\nThe dataset provides the eyes as images, the colour of the iris, and metadata from the OmniArt dataset.\n\n\n#### Usage\nThe dataset can be used like any other PyTorch dataset. It extends the ``ImageFolder`` class to provide the images and labels/colour and in addition attaches the OmniArt metadata as a dictionary.\nThe following classes are used, and how many of that class exist in the dataset:  \n\n| Colour    | Count |\n|-----------|-------|\n| Amber     | 3,114  |\n| Blue      | 18,926 |\n| Brown     | 42,094 |\n| Gray      | 7,637  |\n| Grayscale | 16,234 |\n| Green     | 5,220  |\n| Hazel     | 1,578  |\n| Irisless  | 18,282 |\n| Negative  | 96,042 |\n| Red       | 5,491  |\n\nThe ``negative`` class exists to be able to classify non-eye images. It contains samples of primarily noise and facial areas, such as closed eyelids.\n\n###### Example\nThe dataset can be used in the following way\n```python\nimport torch\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport torchvision.utils as vutils\nfrom torchvision.transforms import transforms\n\nfrom omniart_eye_dataset import OmniArtEyeDataset\n\ndataset = OmniArtEyeDataset(transform=transforms.Compose([\n                               transforms.Resize(50),\n                               transforms.CenterCrop(50),\n                               transforms.ToTensor(),\n                           ]))\n\ndataloader = torch.utils.data.DataLoader(dataset, batch_size=64, shuffle=True, num_workers=4)\n\n# Take 64 random entries\nimages, color, metadata = next(iter(dataloader))\n\n# Plot the entries\nplt.figure(figsize=(10, 10))\nplt.axis(\"off\")\nplt.title(\"OmniArt eyes\")\nplt.imshow(np.transpose(vutils.make_grid(images, padding=5, normalize=True), (1, 2, 0)))\nplt.show()\n```\n\n![Sample eyes](images/sample.png?raw=true)  \n\n\n\n\n\n### Related\nThis dataset has already been used to train a [classifier](https://github.com/rogierknoester/omniart_eye_classifier) and painted eye generator.\n\n\n\n### Project origin\nThis package is part of a Master's thesis at the University of Amsterdam.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rogierknoester/omniart_eye_dataset", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "omniart-eye-dataset", "package_url": "https://pypi.org/project/omniart-eye-dataset/", "platform": "", "project_url": "https://pypi.org/project/omniart-eye-dataset/", "project_urls": {"Homepage": "http://github.com/rogierknoester/omniart_eye_dataset"}, "release_url": "https://pypi.org/project/omniart-eye-dataset/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "A PyTorch dataset of the eyes found in the OmniArt dataset", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OmniArt Eye Dataset</h1>\n<p>This package provides a dataset of 118,576 painted eyes. These eyes are extracted from about 245,000 paintings from the <a href=\"http://isis-data.science.uva.nl/strezoski/#2\" rel=\"nofollow\">OmniArt</a> dataset.\nThe dataset provides the eyes as images, the colour of the iris, and metadata from the OmniArt dataset.</p>\n<h4>Usage</h4>\n<p>The dataset can be used like any other PyTorch dataset. It extends the <code>ImageFolder</code> class to provide the images and labels/colour and in addition attaches the OmniArt metadata as a dictionary.\nThe following classes are used, and how many of that class exist in the dataset:</p>\n<table>\n<thead>\n<tr>\n<th>Colour</th>\n<th>Count</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Amber</td>\n<td>3,114</td>\n</tr>\n<tr>\n<td>Blue</td>\n<td>18,926</td>\n</tr>\n<tr>\n<td>Brown</td>\n<td>42,094</td>\n</tr>\n<tr>\n<td>Gray</td>\n<td>7,637</td>\n</tr>\n<tr>\n<td>Grayscale</td>\n<td>16,234</td>\n</tr>\n<tr>\n<td>Green</td>\n<td>5,220</td>\n</tr>\n<tr>\n<td>Hazel</td>\n<td>1,578</td>\n</tr>\n<tr>\n<td>Irisless</td>\n<td>18,282</td>\n</tr>\n<tr>\n<td>Negative</td>\n<td>96,042</td>\n</tr>\n<tr>\n<td>Red</td>\n<td>5,491</td>\n</tr></tbody></table>\n<p>The <code>negative</code> class exists to be able to classify non-eye images. It contains samples of primarily noise and facial areas, such as closed eyelids.</p>\n<h6>Example</h6>\n<p>The dataset can be used in the following way</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">torch</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">torchvision.utils</span> <span class=\"k\">as</span> <span class=\"nn\">vutils</span>\n<span class=\"kn\">from</span> <span class=\"nn\">torchvision.transforms</span> <span class=\"kn\">import</span> <span class=\"n\">transforms</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">omniart_eye_dataset</span> <span class=\"kn\">import</span> <span class=\"n\">OmniArtEyeDataset</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">OmniArtEyeDataset</span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Compose</span><span class=\"p\">([</span>\n                               <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">Resize</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span>\n                               <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">CenterCrop</span><span class=\"p\">(</span><span class=\"mi\">50</span><span class=\"p\">),</span>\n                               <span class=\"n\">transforms</span><span class=\"o\">.</span><span class=\"n\">ToTensor</span><span class=\"p\">(),</span>\n                           <span class=\"p\">]))</span>\n\n<span class=\"n\">dataloader</span> <span class=\"o\">=</span> <span class=\"n\">torch</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">DataLoader</span><span class=\"p\">(</span><span class=\"n\">dataset</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">shuffle</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">num_workers</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Take 64 random entries</span>\n<span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">color</span><span class=\"p\">,</span> <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"nb\">iter</span><span class=\"p\">(</span><span class=\"n\">dataloader</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Plot the entries</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">(</span><span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axis</span><span class=\"p\">(</span><span class=\"s2\">\"off\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"s2\">\"OmniArt eyes\"</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">transpose</span><span class=\"p\">(</span><span class=\"n\">vutils</span><span class=\"o\">.</span><span class=\"n\">make_grid</span><span class=\"p\">(</span><span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">padding</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"Sample eyes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc233394387a6e5071cf9d479d0c85a51752baa0/696d616765732f73616d706c652e706e673f7261773d74727565\"></p>\n<h3>Related</h3>\n<p>This dataset has already been used to train a <a href=\"https://github.com/rogierknoester/omniart_eye_classifier\" rel=\"nofollow\">classifier</a> and painted eye generator.</p>\n<h3>Project origin</h3>\n<p>This package is part of a Master's thesis at the University of Amsterdam.</p>\n\n          </div>"}, "last_serial": 5263253, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c439bed706f4cc149936c1e5caca5d2c", "sha256": "fb829a94b47794a28e5cbf27a788b7e8ccfff1c9a81075492b713e8084504e96"}, "downloads": -1, "filename": "omniart_eye_dataset-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c439bed706f4cc149936c1e5caca5d2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3403, "upload_time": "2019-05-13T16:02:05", "upload_time_iso_8601": "2019-05-13T16:02:05.785300Z", "url": "https://files.pythonhosted.org/packages/f7/6b/2df48a42f4282ab476d6b2af6c99047ce47451a850a6bac5c91ccbef667a/omniart_eye_dataset-0.1-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "61d1100574147d5ab7314a5ef09f38f9", "sha256": "eb74f2f0d0565e071fe25176730e04948a20f21737e7045a2114bd5c4b9e7598"}, "downloads": -1, "filename": "omniart_eye_dataset-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61d1100574147d5ab7314a5ef09f38f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3418, "upload_time": "2019-05-13T16:07:07", "upload_time_iso_8601": "2019-05-13T16:07:07.138573Z", "url": "https://files.pythonhosted.org/packages/5c/d8/81ffead1b59506e2c9fa4a9d6d9dec58ba25035db11dc3855f2ccfe05555/omniart_eye_dataset-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61d1100574147d5ab7314a5ef09f38f9", "sha256": "eb74f2f0d0565e071fe25176730e04948a20f21737e7045a2114bd5c4b9e7598"}, "downloads": -1, "filename": "omniart_eye_dataset-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "61d1100574147d5ab7314a5ef09f38f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3418, "upload_time": "2019-05-13T16:07:07", "upload_time_iso_8601": "2019-05-13T16:07:07.138573Z", "url": "https://files.pythonhosted.org/packages/5c/d8/81ffead1b59506e2c9fa4a9d6d9dec58ba25035db11dc3855f2ccfe05555/omniart_eye_dataset-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:04:29 2020"}