{"info": {"author": "Phuong Duy PHUNG", "author_email": "duy.phung@f4.intek.edu.vn", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Sprites Detection\nA [**sprite**](<https://en.wikipedia.org/wiki/Sprite_(computer_graphics)>) is a small [**raster graphic**](https://en.wikipedia.org/wiki/Raster_graphics) (a **bitmap**) that represents an object such as a [character, a vehicle, a projectile, etc.](https://www.youtube.com/watch?v=a1yBP5t-fSA)\n\n## Sprite Sheet\n\nIt is not uncommon for games to have tens to hundreds of sprites. Loading each of these as an individual image would consume a lot of memory and processing power. To help manage sprites and avoid using so many images, many games use [**sprite sheets**](https://www.youtube.com/watch?v=crrFUYabm6E) (also known as **image sprites**).\n\nA sprite sheet consists of multiple sprites in one image. In other words, sprite sheets pack multiple sprites into a single picture. Using sprite sheet, video game developers create sprite sheet animation representing one or several animation sequences while only loading a single file:\n\n\n## Sprite Bounding Box\n\nA frame (**bounding box**) can be used to delimit the sprite in the sprite sheet. This bounding box is defined with two 2D points `top_left` and the `bottom_right`, which their respective coordinates `x` and `y` are relative to the top-left corner of the sprite sheet's image.\n\n\n## Sprite Mask\n\nThe mask of a sprite defines the 2D shape of the sprite. \n\n\n\n## Aim of the project\n- Detect sprites packed in an image (sheet) and draw their masks and bounding boxes into a new image with the same size of the original image. <br/>\n- Present a 2D map of all the the sprites with their labels. <br/>\n\n## Installation\n- `pipenv install spriteutil_detection`\n\n## Features\n### Find sprites\n- For example: <br/>\n```python\n>>> from spriteutil_detection import SpriteSheet\n>>> sprite_sheet = SpriteSheet('Barbarian.gif')\n>>> sprites, labels = sprite_sheet.find_sprites()\n>>> len(sprites)\n39\n```\n\n### Create sprites' masks and bouding boxes\n- For example: <br/>\n```python\n>>> from spriteutil_detection import SpriteSheet\n>>> sprite_sheet = SpriteSheet('Barbarian.gif')\n>>> # Create the mask image with bounding boxes.\n>>> image = sprite_sheet.create_sprite_labels_image()\n>>> image.save('barbarian_bounding_boxes.png')\n```\n\n\n## Contact Information\n- If you have any problems using this library, please use the contact below. <br/>\n`Email: duy.phung@f4.intek.edu.vn` <br/>\n`Phone: (+84) 934 611 103`\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/intek-training-jsc/sprite-sheet-duyphungbatch3", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spriteutil-detection", "package_url": "https://pypi.org/project/spriteutil-detection/", "platform": "", "project_url": "https://pypi.org/project/spriteutil-detection/", "project_urls": {"Homepage": "https://github.com/intek-training-jsc/sprite-sheet-duyphungbatch3"}, "release_url": "https://pypi.org/project/spriteutil-detection/1.0.2/", "requires_dist": ["bleach (==3.1.0)", "certifi (==2019.11.28)", "cffi (==1.13.2)", "chardet (==3.0.4)", "cryptography (==2.8)", "docutils (==0.16)", "idna (==2.8)", "keyring (==21.1.0)", "more-itertools (==8.1.0)", "numpy (==1.18.1)", "pillow (==7.0.0)", "pipfile (==0.0.2)", "pkginfo (==1.5.0.1)", "pycparser (==2.19)", "pygments (==2.5.2)", "readme-renderer (==24.0)", "requests (==2.22.0)", "requests-toolbelt (==0.9.1)", "six (==1.14.0)", "toml (==0.10.0)", "tqdm (==4.41.1)", "twine (==3.1.1)", "urllib3 (==1.25.7)", "webencodings (==0.5.1)", "wheel (==0.33.6)", "zipp (==1.0.0)", "importlib-metadata (==1.4.0) ; python_version < \"3.8\"", "jeepney (==0.4.2) ; sys_platform == \"linux\"", "secretstorage (==3.1.2) ; sys_platform == \"linux\"", "appdirs (==1.4.3) ; extra == 'dev'", "astroid (==2.3.3) ; extra == 'dev'", "attrs (==19.3.0) ; extra == 'dev'", "cached-property (==1.5.1) ; extra == 'dev'", "cerberus (==1.3.2) ; extra == 'dev'", "certifi (==2019.11.28) ; extra == 'dev'", "chardet (==3.0.4) ; extra == 'dev'", "click (==7.0) ; extra == 'dev'", "colorama (==0.4.1) ; extra == 'dev'", "distlib (==0.3.0) ; extra == 'dev'", "first (==2.0.2) ; extra == 'dev'", "idna (==2.8) ; extra == 'dev'", "isort (==4.3.21) ; extra == 'dev'", "lazy-object-proxy (==1.4.3) ; extra == 'dev'", "mccabe (==0.6.1) ; extra == 'dev'", "more-itertools (==8.1.0) ; extra == 'dev'", "orderedmultidict (==1.0.1) ; extra == 'dev'", "packaging (==19.2) ; extra == 'dev'", "pathspec (==0.7.0) ; extra == 'dev'", "pep517 (==0.8.1) ; extra == 'dev'", "pip-shims (==0.4.0) ; extra == 'dev'", "pipenv-setup (==2.2.5) ; extra == 'dev'", "pipfile (==0.0.2) ; extra == 'dev'", "plette[validation] (==0.2.3) ; extra == 'dev'", "pylint (==2.4.4) ; extra == 'dev'", "pyparsing (==2.4.6) ; extra == 'dev'", "regex (==2020.1.8) ; extra == 'dev'", "requests (==2.22.0) ; extra == 'dev'", "requirementslib (==1.5.3) ; extra == 'dev'", "six (==1.14.0) ; extra == 'dev'", "toml (==0.10.0) ; extra == 'dev'", "tomlkit (==0.5.8) ; extra == 'dev'", "typing (==3.7.4.1) ; extra == 'dev'", "urllib3 (==1.25.7) ; extra == 'dev'", "vistir (==0.5.0) ; extra == 'dev'", "wheel (==0.33.6) ; extra == 'dev'", "wrapt (==1.11.2) ; extra == 'dev'", "zipp (==1.0.0) ; extra == 'dev'", "typed-ast (==1.4.1) ; (implementation_name == \"cpython\" and python_version < \"3.8\") and extra == 'dev'", "importlib-metadata (==1.4.0) ; (python_version < \"3.8\") and extra == 'dev'", "black (==19.10b0) ; (python_version >= \"3.6\") and extra == 'dev'"], "requires_python": ">=3.6", "summary": "A small example package", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Sprites Detection</h1>\n<p>A <a href=\"https://en.wikipedia.org/wiki/Sprite_(computer_graphics)\" rel=\"nofollow\"><strong>sprite</strong></a> is a small <a href=\"https://en.wikipedia.org/wiki/Raster_graphics\" rel=\"nofollow\"><strong>raster graphic</strong></a> (a <strong>bitmap</strong>) that represents an object such as a <a href=\"https://www.youtube.com/watch?v=a1yBP5t-fSA\" rel=\"nofollow\">character, a vehicle, a projectile, etc.</a></p>\n<h2>Sprite Sheet</h2>\n<p>It is not uncommon for games to have tens to hundreds of sprites. Loading each of these as an individual image would consume a lot of memory and processing power. To help manage sprites and avoid using so many images, many games use <a href=\"https://www.youtube.com/watch?v=crrFUYabm6E\" rel=\"nofollow\"><strong>sprite sheets</strong></a> (also known as <strong>image sprites</strong>).</p>\n<p>A sprite sheet consists of multiple sprites in one image. In other words, sprite sheets pack multiple sprites into a single picture. Using sprite sheet, video game developers create sprite sheet animation representing one or several animation sequences while only loading a single file:</p>\n<h2>Sprite Bounding Box</h2>\n<p>A frame (<strong>bounding box</strong>) can be used to delimit the sprite in the sprite sheet. This bounding box is defined with two 2D points <code>top_left</code> and the <code>bottom_right</code>, which their respective coordinates <code>x</code> and <code>y</code> are relative to the top-left corner of the sprite sheet's image.</p>\n<h2>Sprite Mask</h2>\n<p>The mask of a sprite defines the 2D shape of the sprite.</p>\n<h2>Aim of the project</h2>\n<ul>\n<li>Detect sprites packed in an image (sheet) and draw their masks and bounding boxes into a new image with the same size of the original image. <br></li>\n<li>Present a 2D map of all the the sprites with their labels. <br></li>\n</ul>\n<h2>Installation</h2>\n<ul>\n<li><code>pipenv install spriteutil_detection</code></li>\n</ul>\n<h2>Features</h2>\n<h3>Find sprites</h3>\n<ul>\n<li>For example: <br></li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">spriteutil_detection</span> <span class=\"kn\">import</span> <span class=\"n\">SpriteSheet</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sprite_sheet</span> <span class=\"o\">=</span> <span class=\"n\">SpriteSheet</span><span class=\"p\">(</span><span class=\"s1\">'Barbarian.gif'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sprites</span><span class=\"p\">,</span> <span class=\"n\">labels</span> <span class=\"o\">=</span> <span class=\"n\">sprite_sheet</span><span class=\"o\">.</span><span class=\"n\">find_sprites</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">sprites</span><span class=\"p\">)</span>\n<span class=\"mi\">39</span>\n</pre>\n<h3>Create sprites' masks and bouding boxes</h3>\n<ul>\n<li>For example: <br></li>\n</ul>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">spriteutil_detection</span> <span class=\"kn\">import</span> <span class=\"n\">SpriteSheet</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">sprite_sheet</span> <span class=\"o\">=</span> <span class=\"n\">SpriteSheet</span><span class=\"p\">(</span><span class=\"s1\">'Barbarian.gif'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># Create the mask image with bounding boxes.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"n\">sprite_sheet</span><span class=\"o\">.</span><span class=\"n\">create_sprite_labels_image</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">image</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s1\">'barbarian_bounding_boxes.png'</span><span class=\"p\">)</span>\n</pre>\n<h2>Contact Information</h2>\n<ul>\n<li>If you have any problems using this library, please use the contact below. <br>\n<code>Email: duy.phung@f4.intek.edu.vn</code> <br>\n<code>Phone: (+84) 934 611 103</code></li>\n</ul>\n\n          </div>"}, "last_serial": 6484226, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3691ac94ebbf653180a1def0af88109e", "sha256": "e0070f863f9085c46e1acf874871f4ae821b6f2be3963abb3abc8c37fcb42ae0"}, "downloads": -1, "filename": "spriteutil_detection-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3691ac94ebbf653180a1def0af88109e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7827, "upload_time": "2020-01-17T00:23:52", "upload_time_iso_8601": "2020-01-17T00:23:52.901730Z", "url": "https://files.pythonhosted.org/packages/95/35/4fe22ec9c151c0fdae1c8b394ae7c804c5c1daec5b8c9e5d184c82b3c62a/spriteutil_detection-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "622c58e30f4449b523a5996e9d586bcd", "sha256": "c66718fa17bc50f6ff8e5b01a82b446d05571fb4cac0c429d5fe907b673c8dc2"}, "downloads": -1, "filename": "spriteutil_detection-1.0.0.tar.gz", "has_sig": false, "md5_digest": "622c58e30f4449b523a5996e9d586bcd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7110, "upload_time": "2020-01-17T00:23:56", "upload_time_iso_8601": "2020-01-17T00:23:56.096568Z", "url": "https://files.pythonhosted.org/packages/67/56/adf565d696bbb8195bc0d797bfa5b8b5a31ef250eae33cebb7751aa641e5/spriteutil_detection-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "e3a373707100e320525b0f041298bca1", "sha256": "2bacc72dcea4d7bccf914607787a1751dff37b732b23b0d886af6180d20141b4"}, "downloads": -1, "filename": "spriteutil_detection-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e3a373707100e320525b0f041298bca1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7806, "upload_time": "2020-01-19T14:13:28", "upload_time_iso_8601": "2020-01-19T14:13:28.626421Z", "url": "https://files.pythonhosted.org/packages/e4/b2/a5546bc6cc9f2c987b748b75463b41f491e3a90966f114383ed0aa974646/spriteutil_detection-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f66cdf7ec10e3388135d4380f8c76a3", "sha256": "7902da7763442ef67c1305ff9cadbf57f0f860269042b09545215738b63d585b"}, "downloads": -1, "filename": "spriteutil_detection-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6f66cdf7ec10e3388135d4380f8c76a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6794, "upload_time": "2020-01-19T14:13:30", "upload_time_iso_8601": "2020-01-19T14:13:30.768790Z", "url": "https://files.pythonhosted.org/packages/fd/00/70437d9060f597d8f23e1832b0923125a0dd16c39e2757a8e1e6086d64b7/spriteutil_detection-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "1c82f9e1871148c88ba05400302b2bd7", "sha256": "78a9f30ee2be419baaeda759aac4b01df916c2d3d3b4deacb0bd60828b134632"}, "downloads": -1, "filename": "spriteutil_detection-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1c82f9e1871148c88ba05400302b2bd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7832, "upload_time": "2020-01-20T00:12:25", "upload_time_iso_8601": "2020-01-20T00:12:25.856503Z", "url": "https://files.pythonhosted.org/packages/4e/c0/e1ffa058fdb98fee2d0d2e355b03bacd0321c40fbecc57c54091f93da99f/spriteutil_detection-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67b59dfef195b421237e15a526b79832", "sha256": "7df63829b435e93855dd0183c1d9f4be11419c9a955c3cf9966042c3f888d4bf"}, "downloads": -1, "filename": "spriteutil_detection-1.0.2.tar.gz", "has_sig": false, "md5_digest": "67b59dfef195b421237e15a526b79832", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6804, "upload_time": "2020-01-20T00:12:27", "upload_time_iso_8601": "2020-01-20T00:12:27.702315Z", "url": "https://files.pythonhosted.org/packages/53/2c/ae3153ff728f72b35f604515e576b000282ee52bdee590d553bb70118463/spriteutil_detection-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c82f9e1871148c88ba05400302b2bd7", "sha256": "78a9f30ee2be419baaeda759aac4b01df916c2d3d3b4deacb0bd60828b134632"}, "downloads": -1, "filename": "spriteutil_detection-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "1c82f9e1871148c88ba05400302b2bd7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7832, "upload_time": "2020-01-20T00:12:25", "upload_time_iso_8601": "2020-01-20T00:12:25.856503Z", "url": "https://files.pythonhosted.org/packages/4e/c0/e1ffa058fdb98fee2d0d2e355b03bacd0321c40fbecc57c54091f93da99f/spriteutil_detection-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67b59dfef195b421237e15a526b79832", "sha256": "7df63829b435e93855dd0183c1d9f4be11419c9a955c3cf9966042c3f888d4bf"}, "downloads": -1, "filename": "spriteutil_detection-1.0.2.tar.gz", "has_sig": false, "md5_digest": "67b59dfef195b421237e15a526b79832", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6804, "upload_time": "2020-01-20T00:12:27", "upload_time_iso_8601": "2020-01-20T00:12:27.702315Z", "url": "https://files.pythonhosted.org/packages/53/2c/ae3153ff728f72b35f604515e576b000282ee52bdee590d553bb70118463/spriteutil_detection-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:21 2020"}