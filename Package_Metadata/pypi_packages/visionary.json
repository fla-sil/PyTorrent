{"info": {"author": "Igor Gumenyuk", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "Visionary\n=========\n\nPython client library for Google Cloud Vision API\n\nhttps://cloud.google.com/vision\n\nInstall\n-------\n\nLibrary can be installed with pip: `pip install visionary`\n\n\nUsage\n-----\n\nUsage examples:\n\n.. code-block:: python\n\n    from visionary import GoogleCloudVision, LabelDetection, LogoDetection\n\n    API_KEY = \"dummy_api_key\"\n    client = GoogleCloudVision(API_KEY)\n\n    # Ask for logo detection, 10 results max\n    response = client.annotate(\"dummy.jpg\", LogoDetection())\n\n    # Ask for label detection, 3 results max\n    response = client.annotate(\"dummy.jpg\", LabelDetection(3))\n\nDetection params can be set explicitly:\n\n.. code-block:: python\n\n    # 5 results max for logo detection and only one result for label detection\n    response = client.annotate(\"dummy.jpg\", LogoDetection(5), LabelDetection(1))\n\nFirst param can be file object:\n\n.. code-block:: python\n\n    uploaded_file = open(\"dummy.jpg\")\n    ...\n    # somewhere later\n    response = client.annotate(uploaded_file)\n\nOr URL:    \n\n.. code-block:: python\n\n    response = client.annotate(\"http://google.com/dummy.jpg\")\n\nClient supports multiple images in single `annotate` call\n\n.. code-block:: python\n\n    response = client.annotate(\n        (\"dummy.jpg\"),\n        (\"http://google.com/dummy.jpg\"),\n        (\"dummy.jpg\", LogoDetection(1)),\n    )\n\nDealing with response:\n\n.. code-block:: python\n\n    if response.ok:\n        for resp in response.responses:\n            for i in resp.logo_annotations:\n                print(i.description)\n    else:\n        print(response.error['code'], response.error['message'], response.error['status'])", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/shafaua/visionary", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "visionary", "package_url": "https://pypi.org/project/visionary/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/visionary/", "project_urls": {"Homepage": "https://github.com/shafaua/visionary"}, "release_url": "https://pypi.org/project/visionary/1.2.0/", "requires_dist": ["requests (<3.0.0)"], "requires_python": "", "summary": "Client library for Google Cloud Vision API", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python client library for Google Cloud Vision API</p>\n<p><a href=\"https://cloud.google.com/vision\" rel=\"nofollow\">https://cloud.google.com/vision</a></p>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Library can be installed with pip: <cite>pip install visionary</cite></p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Usage examples:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">visionary</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleCloudVision</span><span class=\"p\">,</span> <span class=\"n\">LabelDetection</span><span class=\"p\">,</span> <span class=\"n\">LogoDetection</span>\n\n<span class=\"n\">API_KEY</span> <span class=\"o\">=</span> <span class=\"s2\">\"dummy_api_key\"</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">GoogleCloudVision</span><span class=\"p\">(</span><span class=\"n\">API_KEY</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Ask for logo detection, 10 results max</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"dummy.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">LogoDetection</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># Ask for label detection, 3 results max</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"dummy.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">LabelDetection</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">))</span>\n</pre>\n<p>Detection params can be set explicitly:</p>\n<pre><span class=\"c1\"># 5 results max for logo detection and only one result for label detection</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"dummy.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">LogoDetection</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"n\">LabelDetection</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n</pre>\n<p>First param can be file object:</p>\n<pre><span class=\"n\">uploaded_file</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s2\">\"dummy.jpg\"</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"c1\"># somewhere later</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">uploaded_file</span><span class=\"p\">)</span>\n</pre>\n<p>Or URL:</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"s2\">\"http://google.com/dummy.jpg\"</span><span class=\"p\">)</span>\n</pre>\n<p>Client supports multiple images in single <cite>annotate</cite> call</p>\n<pre><span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"dummy.jpg\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"http://google.com/dummy.jpg\"</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s2\">\"dummy.jpg\"</span><span class=\"p\">,</span> <span class=\"n\">LogoDetection</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)),</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Dealing with response:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">ok</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">resp</span> <span class=\"ow\">in</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">responses</span><span class=\"p\">:</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">logo_annotations</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">description</span><span class=\"p\">)</span>\n<span class=\"k\">else</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"s1\">'code'</span><span class=\"p\">],</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"s1\">'message'</span><span class=\"p\">],</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">[</span><span class=\"s1\">'status'</span><span class=\"p\">])</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1968577, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4bc7952ab2ba5047c232bbed2a27a60f", "sha256": "133d8903dc4fae84e0a9e9686423e1096320117af3211e074f11679e42944858"}, "downloads": -1, "filename": "visionary-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4bc7952ab2ba5047c232bbed2a27a60f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 5795, "upload_time": "2016-02-21T12:52:04", "upload_time_iso_8601": "2016-02-21T12:52:04.554756Z", "url": "https://files.pythonhosted.org/packages/59/67/e1c07c6a4b6431eeaed2b675cd23c80992e9a9081f9bbb3ad88e0f8d07de/visionary-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1492523db6bac94bd9f83707b41b131f", "sha256": "f9b1ce80928fd1f11671baa49318a2954c6fcc7ebce2a6d243bc6824b52e45ac"}, "downloads": -1, "filename": "visionary-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1492523db6bac94bd9f83707b41b131f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2520, "upload_time": "2016-02-21T12:52:12", "upload_time_iso_8601": "2016-02-21T12:52:12.098285Z", "url": "https://files.pythonhosted.org/packages/d7/f2/1de8edd6a3018a2056df8f7e6dc5a07b6a8981f5fc4ca8d780ca98fc1ec9/visionary-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a57056b2ff05c5ca84775380d59f812b", "sha256": "2c4b94faaa45d5cd82385ea81761efb7945ad9105cc16a27babcb8e27f29e6bc"}, "downloads": -1, "filename": "visionary-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "a57056b2ff05c5ca84775380d59f812b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6124, "upload_time": "2016-02-21T22:53:16", "upload_time_iso_8601": "2016-02-21T22:53:16.365074Z", "url": "https://files.pythonhosted.org/packages/df/e3/6eb260467931d8e620674e57f8efbaec61e71ef81637536d4a27e7c79fbc/visionary-1.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b563639213dfdd55fc5614e04a8e32fe", "sha256": "6a475e86ae6e019a8a067e33626f5a57eec0fd6b1359fba644ca7903b1f710ed"}, "downloads": -1, "filename": "visionary-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b563639213dfdd55fc5614e04a8e32fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6131, "upload_time": "2016-02-21T22:49:55", "upload_time_iso_8601": "2016-02-21T22:49:55.557817Z", "url": "https://files.pythonhosted.org/packages/fc/d7/24207d68725207efe100375339b000c2a77e356ba7b12ef29c53dc8a92d5/visionary-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "12057c215f49fdc67a0ef267b56d55e6", "sha256": "27831bfeeb8da65029903298355f53415de71b383a1cdd12c229305a95009c76"}, "downloads": -1, "filename": "visionary-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "12057c215f49fdc67a0ef267b56d55e6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6126, "upload_time": "2016-02-21T22:50:01", "upload_time_iso_8601": "2016-02-21T22:50:01.672389Z", "url": "https://files.pythonhosted.org/packages/2d/73/44e5319e716a87587c793d49f80adbd910433e58bb87cf81c8d62313ba3d/visionary-1.1.1-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "bb0f7b7a47463d83439eea38339cec5c", "sha256": "f0912e91a2ad654176b2540a6300b5171f86fa9d49fd204d9b762038692ef079"}, "downloads": -1, "filename": "visionary-1.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "bb0f7b7a47463d83439eea38339cec5c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6122, "upload_time": "2016-02-21T22:55:08", "upload_time_iso_8601": "2016-02-21T22:55:08.871182Z", "url": "https://files.pythonhosted.org/packages/b0/82/7c1aaeae67bebed8b691503fbe05b9ca8342c6d1d47e71dd9afb75e75723/visionary-1.2.0-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb0f7b7a47463d83439eea38339cec5c", "sha256": "f0912e91a2ad654176b2540a6300b5171f86fa9d49fd204d9b762038692ef079"}, "downloads": -1, "filename": "visionary-1.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "bb0f7b7a47463d83439eea38339cec5c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 6122, "upload_time": "2016-02-21T22:55:08", "upload_time_iso_8601": "2016-02-21T22:55:08.871182Z", "url": "https://files.pythonhosted.org/packages/b0/82/7c1aaeae67bebed8b691503fbe05b9ca8342c6d1d47e71dd9afb75e75723/visionary-1.2.0-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:35:18 2020"}