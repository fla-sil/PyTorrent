{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# py-libp2p\n\n[![Join the chat at https://gitter.im/py-libp2p/Lobby](https://badges.gitter.im/py-libp2p/Lobby.png)](https://gitter.im/py-libp2p/Lobby)\n[![Build Status](https://travis-ci.com/libp2p/py-libp2p.svg?branch=master)](https://travis-ci.com/libp2p/py-libp2p)\n[![PyPI version](https://badge.fury.io/py/libp2p.svg)](https://badge.fury.io/py/libp2p)\n[![Python versions](https://img.shields.io/pypi/pyversions/libp2p.svg)](https://pypi.python.org/pypi/libp2p)\n[![Docs build](https://readthedocs.org/projects/py-libp2p/badge/?version=latest)](http://py-libp2p.readthedocs.io/en/latest/?badge=latest)\n[![Freenode](https://img.shields.io/badge/freenode-%23libp2p-yellow.svg)](https://webchat.freenode.net/?channels=%23libp2p)\n[![Matrix](https://img.shields.io/badge/matrix-%23libp2p%3Apermaweb.io-blue.svg)](https://riot.permaweb.io/#/room/#libp2p:permaweb.io)\n[![Discord](https://img.shields.io/discord/475789330380488707?color=blueviolet&label=discord)](https://discord.gg/66KBrm2)\n\n\n<h1 align=\"center\">\n<img width=\"250\" align=\"center\" src=\"https://github.com/libp2p/py-libp2p/blob/master/assets/py-libp2p-logo.png?raw=true\" alt=\"py-libp2p hex logo\" />\n</h1>\n\n## WARNING\npy-libp2p is an experimental and work-in-progress repo under heavy development. We do not yet recommend using py-libp2p in production environments.\n\nThe Python implementation of the libp2p networking stack\n\nRead more in the [documentation on ReadTheDocs](https://py-libp2p.readthedocs.io/). [View the change log](https://py-libp2p.readthedocs.io/en/latest/releases.html).\n\n## Sponsorship\nThis project is graciously sponsored by the Ethereum Foundation through [Wave 5 of their Grants Program](https://blog.ethereum.org/2019/02/21/ethereum-foundation-grants-program-wave-5/).\n\n## Maintainers\nThe py-libp2p team consists of:\n\n[@zixuanzh](https://github.com/zixuanzh) [@alexh](https://github.com/alexh) [@stuckinaboot](https://github.com/stuckinaboot) [@robzajac](https://github.com/robzajac) [@carver](https://github.com/carver)\n\n## Development\n\npy-libp2p requires Python 3.7 and the best way to guarantee a clean Python 3.7 environment is with [`virtualenv`](https://virtualenv.pypa.io/en/stable/)\n\n```sh\ngit clone git@github.com:libp2p/py-libp2p.git\ncd py-libp2p\nvirtualenv -p python3.7 venv\n. venv/bin/activate\npip install -e .[dev]\n```\n\n### Testing Setup\n\nDuring development, you might like to have tests run on every file save.\n\nShow flake8 errors on file change:\n\n```sh\n# Test flake8\nwhen-changed -v -s -r -1 libp2p/ tests/ -c \"clear; flake8 libp2p tests && echo 'flake8 success' || echo 'error'\"\n```\n\nRun multi-process tests in one command, but without color:\n\n```sh\n# in the project root:\npytest --numprocesses=4 --looponfail --maxfail=1\n# the same thing, succinctly:\npytest -n 4 -f --maxfail=1\n```\n\nRun in one thread, with color and desktop notifications:\n\n```sh\ncd venv\nptw --onfail \"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on py-libp2p failed'\" ../tests ../libp2p\n```\n\nNote that tests/libp2p/test_libp2p.py contains an end-to-end messaging test between two libp2p hosts, which is the bulk of our proof of concept.\n\n\n### Release setup\n\nReleases follow the same basic pattern as releases of some tangentially-related projects,\nlike Trinity. See [Trinity's release instructions](\nhttps://trinity-client.readthedocs.io/en/latest/contributing.html#releasing).\n\n## Requirements\n\nThe protobuf description in this repository was generated by `protoc` at version `3.7.1`.\n\n## Feature Breakdown\npy-libp2p aims for conformity with [the standard libp2p modules](https://github.com/libp2p/libp2p/blob/master/REQUIREMENTS.md#libp2p-modules-implementations). Below is a breakdown of the modules we have developed, are developing, and may develop in the future.\n\n> Legend: :green_apple: Done &nbsp; :lemon: In Progress &nbsp; :tomato: Missing &nbsp; :chestnut: Not planned\n\n| libp2p Node                                  | Status        |\n| -------------------------------------------- | :-----------: |\n| **`libp2p`**                                 | :green_apple: |\n\n\n| Identify Protocol                            | Status        |\n| -------------------------------------------- | :-----------: |\n| **`Identify`**                               | :lemon:      |\n\n\n| Transport Protocols                          | Status        |\n| -------------------------------------------- | :-----------: |\n| **`TCP`**                                    | :green_apple: |\n| **`UDP`**                                    | :tomato:      |\n| **`WebSockets`**                             | :chestnut:    |\n| **`UTP`**                                    | :chestnut:    |\n| **`WebRTC`**                                 | :chestnut:    |\n| **`SCTP`**                                   | :chestnut:    |\n| **`Tor`**                                    | :chestnut:    |\n| **`i2p`**                                    | :chestnut:    |\n| **`cjdns`**                                  | :chestnut:    |\n| **`Bluetooth LE`**                           | :chestnut:    |\n| **`Audio TP`**                               | :chestnut:    |\n| **`Zerotier`**                               | :chestnut:    |\n| **`QUIC`**                                   | :chestnut:    |\n\n\n| Stream Muxers                                | Status        |\n| -------------------------------------------- | :-----------: |\n| **`multiplex`**                              | :green_apple: |\n| **`yamux`**                                  | :tomato:      |\n| **`benchmarks`**                             | :chestnut:    |\n| **`muxado`**                                 | :chestnut:    |\n| **`spdystream`**                             | :chestnut:    |\n| **`spdy`**                                   | :chestnut:    |\n| **`http2`**                                  | :chestnut:    |\n| **`QUIC`**                                   | :chestnut:    |\n\n\n| Protocol Muxers                              | Status        |\n| -------------------------------------------- | :-----------: |\n| **`multiselect`**                            | :green_apple: |\n\n\n| Switch (Swarm)                               | Status        |\n| -------------------------------------------- | :-----------: |\n| **`Switch`**                                 | :green_apple: |\n| **`Dialer stack`**                           | :green_apple: |\n\n\n| Peer Discovery                               | Status        |\n| -------------------------------------------- | :-----------: |\n| **`bootstrap list`**                         | :tomato:      |\n| **`Kademlia DHT`**                           | :chestnut:    |\n| **`mDNS`**                                   | :chestnut:    |\n| **`PEX`**                                    | :chestnut:    |\n| **`DNS`**                                    | :chestnut:    |\n\n\n| Content Routing                              | Status        |\n| -------------------------------------------- | :-----------: |\n| **`Kademlia DHT`**                           | :chestnut:    |\n| **`floodsub`**                               | :green_apple: |\n| **`gossipsub`**                              | :green_apple: |\n| **`PHT`**                                    | :chestnut:    |\n\n\n| Peer Routing                                 | Status        |\n| -------------------------------------------- | :-----------: |\n| **`Kademlia DHT`**                           | :chestnut:    |\n| **`floodsub`**                               | :green_apple: |\n| **`gossipsub`**                              | :green_apple: |\n| **`PHT`**                                    | :chestnut:    |\n\n\n| NAT Traversal                                | Status        |\n| -------------------------------------------- | :-----------: |\n| **`nat-pmp`**                                | :chestnut:    |\n| **`upnp`**                                   | :chestnut:    |\n| **`ext addr discovery`**                     | :chestnut:    |\n| **`STUN-like`**                              | :chestnut:    |\n| **`line-switch relay`**                      | :chestnut:    |\n| **`pkt-switch relay`**                       | :chestnut:    |\n\n\n| Exchange                                     | Status        |\n| -------------------------------------------- | :-----------: |\n| **`HTTP`**                                   | :chestnut:    |\n| **`Bitswap`**                                | :chestnut:    |\n| **`Bittorrent`**                             | :chestnut:    |\n\n\n| Consensus                                    | Status        |\n| -------------------------------------------- | :-----------: |\n| **`Paxos`**                                  | :chestnut:    |\n| **`Raft`**                                   | :chestnut:    |\n| **`PBTF`**                                   | :chestnut:    |\n| **`Nakamoto`**                               | :chestnut:    |\n\n\n## Explanation of Basic Two Node Communication\n\n### Core Concepts\n\n_(non-normative, useful for team notes, not a reference)_\n\nSeveral components of the libp2p stack take part when establishing a connection between two nodes:\n\n1. **Host**: a node in the libp2p network.\n2. **Connection**: the layer 3 connection between two nodes in a libp2p network.\n3. **Transport**: the component that creates a _Connection_, e.g. TCP, UDP, QUIC, etc.\n3. **Streams**: an abstraction on top of a _Connection_ representing parallel conversations about different matters, each of which is identified by a protocol ID. Multiple streams are layered on top of a _Connection_ via the _Multiplexer_.\n4. **Multiplexer**: a component that is responsible for wrapping messages sent on a stream with an envelope that identifies the stream they pertain to, normally via an ID. The multiplexer on the other unwraps the message and routes it internally based on the stream identification.\n5. **Secure channel**: optionally establishes a secure, encrypted, and authenticated channel over the _Connection_.\n5. **Upgrader**: a component that takes a raw layer 3 connection returned by the _Transport_, and performs the security and multiplexing negotiation to set up a secure, multiplexed channel on top of which _Streams_ can be opened.\n\n### Communication between two hosts X and Y\n\n_(non-normative, useful for team notes, not a reference)_\n\n**Initiate the connection**: A host is simply a node in the libp2p network that is able to communicate with other nodes in the network. In order for X and Y to communicate with one another, one of the hosts must initiate the connection.  Let's say that X is going to initiate the connection. X will first open a connection to Y. This connection is where all of the actual communication will take place.\n\n**Communication over one connection with multiple protocols**: X and Y can communicate over the same connection using different protocols and the multiplexer will appropriately route messages for a given protocol to a particular handler function for that protocol, which allows for each host to handle different protocols with separate functions. Furthermore, we can use multiple streams for a given protocol that allow for the same protocol and same underlying connection to be used for communication about separate topics between nodes X and Y.\n\n**Why use multiple streams?**: The purpose of using the same connection for multiple streams to communicate over is to avoid the overhead of having multiple connections between X and Y. In order for X and Y to differentiate between messages on different streams and different protocols, a multiplexer is used to encode the messages when a message will be sent and decode a message when a message is received. The multiplexer encodes the message by adding a header to the beginning of any message to be sent that contains the stream id (along with some other info). Then, the message is sent across the raw connection and the receiving host will use its multiplexer to decode the message, i.e. determine which stream id the message should be routed to.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/libp2p/py-libp2p", "keywords": "libp2p p2p", "license": "MIT/APACHE2.0", "maintainer": "The Ethereum Foundation", "maintainer_email": "snakecharmers@ethereum.org", "name": "libp2p", "package_url": "https://pypi.org/project/libp2p/", "platform": "unix", "project_url": "https://pypi.org/project/libp2p/", "project_urls": {"Homepage": "https://github.com/libp2p/py-libp2p"}, "release_url": "https://pypi.org/project/libp2p/0.1.5/", "requires_dist": ["pycryptodome (<4.0.0,>=3.9.2)", "base58 (<2.0.0,>=1.0.3)", "pymultihash (>=0.8.2)", "multiaddr (<0.1.0,>=0.0.9)", "rpcudp (<4.0.0,>=3.0.0)", "lru-dict (>=1.1.6)", "protobuf (<4.0.0,>=3.10.0)", "coincurve (<11.0.0,>=10.0.0)", "pynacl (==1.3.0)", "async-generator (==1.10)", "trio (>=0.13.0)", "async-service (>=0.1.0a6)", "async-exit-stack (==1.0.1)", "trio-typing (<0.4.0,>=0.3.0)", "noiseprotocol (<0.4.0,>=0.3.0)", "dataclasses (<1,>=0.7) ; python_version < \"3.7\"", "fastecdsa (==1.7.5) ; sys_platform != \"win32\"", "fastecdsa-any (==1.7.5) ; sys_platform == \"win32\"", "bumpversion (<1,>=0.5.3) ; extra == 'dev'", "pytest-watch (<5,>=4.1.0) ; extra == 'dev'", "wheel ; extra == 'dev'", "twine ; extra == 'dev'", "ipython ; extra == 'dev'", "setuptools (>=36.2.0) ; extra == 'dev'", "tox (<4.0.0,>=3.13.2) ; extra == 'dev'", "pytest (<5.0.0,>=4.6.3) ; extra == 'dev'", "pytest-xdist (>=1.30.0) ; extra == 'dev'", "pytest-trio (>=0.5.2) ; extra == 'dev'", "factory-boy (<3.0.0,>=2.12.0) ; extra == 'dev'", "flake8 (==3.7.9) ; extra == 'dev'", "isort (==4.3.21) ; extra == 'dev'", "mypy (==0.740) ; extra == 'dev'", "mypy-protobuf (==1.15) ; extra == 'dev'", "black (==19.3b0) ; extra == 'dev'", "flake8-bugbear (<20,>=19.8.0) ; extra == 'dev'", "docformatter (<2,>=1.3.1) ; extra == 'dev'", "Sphinx (<3,>=2.2.1) ; extra == 'dev'", "sphinx-rtd-theme (<=1,>=0.4.3) ; extra == 'dev'", "towncrier (<20,>=19.2.0) ; extra == 'dev'", "Sphinx (<3,>=2.2.1) ; extra == 'doc'", "sphinx-rtd-theme (<=1,>=0.4.3) ; extra == 'doc'", "towncrier (<20,>=19.2.0) ; extra == 'doc'", "flake8 (==3.7.9) ; extra == 'lint'", "isort (==4.3.21) ; extra == 'lint'", "mypy (==0.740) ; extra == 'lint'", "mypy-protobuf (==1.15) ; extra == 'lint'", "black (==19.3b0) ; extra == 'lint'", "flake8-bugbear (<20,>=19.8.0) ; extra == 'lint'", "docformatter (<2,>=1.3.1) ; extra == 'lint'", "pytest (<5.0.0,>=4.6.3) ; extra == 'test'", "pytest-xdist (>=1.30.0) ; extra == 'test'", "pytest-trio (>=0.5.2) ; extra == 'test'", "factory-boy (<3.0.0,>=2.12.0) ; extra == 'test'"], "requires_python": ">=3.6,<4", "summary": "libp2p implementation written in python", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>py-libp2p</h1>\n<p><a href=\"https://gitter.im/py-libp2p/Lobby\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/py-libp2p/Lobby\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/641286676dceef3ed7d18b0269b4466488f8eec5/68747470733a2f2f6261646765732e6769747465722e696d2f70792d6c69627032702f4c6f6262792e706e67\"></a>\n<a href=\"https://travis-ci.com/libp2p/py-libp2p\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1f94ad404808f54f79e74180b7396e4d3d66e1fc/68747470733a2f2f7472617669732d63692e636f6d2f6c69627032702f70792d6c69627032702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/libp2p\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/92ebba9f408a213d1ae8542fc19073cb1ef37f7a/68747470733a2f2f62616467652e667572792e696f2f70792f6c69627032702e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/libp2p\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/50b5973f62dd4a721baa50ab25c647318926b0f6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6c69627032702e737667\"></a>\n<a href=\"http://py-libp2p.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Docs build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7783470a954d4397b223a2eb5c70b1745e4bf59e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70792d6c69627032702f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://webchat.freenode.net/?channels=%23libp2p\" rel=\"nofollow\"><img alt=\"Freenode\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b33a543aaed670a8ae9f140fb31e0258923ff42/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f667265656e6f64652d2532336c69627032702d79656c6c6f772e737667\"></a>\n<a href=\"https://riot.permaweb.io/#/room/#libp2p:permaweb.io\" rel=\"nofollow\"><img alt=\"Matrix\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b365c35400e0b79fe8d9fb9e67a54599ffe4ed7b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6d61747269782d2532336c69627032702533417065726d617765622e696f2d626c75652e737667\"></a>\n<a href=\"https://discord.gg/66KBrm2\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78ad632854d7a533ff92484c76dd331b2eb7f392/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3437353738393333303338303438383730373f636f6c6f723d626c756576696f6c6574266c6162656c3d646973636f7264\"></a></p>\n<h1>\n<img align=\"center\" alt=\"py-libp2p hex logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9e95770acb6f08b626a36126bdb2b5cd62ec76e/68747470733a2f2f6769746875622e636f6d2f6c69627032702f70792d6c69627032702f626c6f622f6d61737465722f6173736574732f70792d6c69627032702d6c6f676f2e706e673f7261773d74727565\" width=\"250\">\n</h1>\n<h2>WARNING</h2>\n<p>py-libp2p is an experimental and work-in-progress repo under heavy development. We do not yet recommend using py-libp2p in production environments.</p>\n<p>The Python implementation of the libp2p networking stack</p>\n<p>Read more in the <a href=\"https://py-libp2p.readthedocs.io/\" rel=\"nofollow\">documentation on ReadTheDocs</a>. <a href=\"https://py-libp2p.readthedocs.io/en/latest/releases.html\" rel=\"nofollow\">View the change log</a>.</p>\n<h2>Sponsorship</h2>\n<p>This project is graciously sponsored by the Ethereum Foundation through <a href=\"https://blog.ethereum.org/2019/02/21/ethereum-foundation-grants-program-wave-5/\" rel=\"nofollow\">Wave 5 of their Grants Program</a>.</p>\n<h2>Maintainers</h2>\n<p>The py-libp2p team consists of:</p>\n<p><a href=\"https://github.com/zixuanzh\" rel=\"nofollow\">@zixuanzh</a> <a href=\"https://github.com/alexh\" rel=\"nofollow\">@alexh</a> <a href=\"https://github.com/stuckinaboot\" rel=\"nofollow\">@stuckinaboot</a> <a href=\"https://github.com/robzajac\" rel=\"nofollow\">@robzajac</a> <a href=\"https://github.com/carver\" rel=\"nofollow\">@carver</a></p>\n<h2>Development</h2>\n<p>py-libp2p requires Python 3.7 and the best way to guarantee a clean Python 3.7 environment is with <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\"><code>virtualenv</code></a></p>\n<pre>git clone git@github.com:libp2p/py-libp2p.git\n<span class=\"nb\">cd</span> py-libp2p\nvirtualenv -p python3.7 venv\n. venv/bin/activate\npip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<h3>Testing Setup</h3>\n<p>During development, you might like to have tests run on every file save.</p>\n<p>Show flake8 errors on file change:</p>\n<pre><span class=\"c1\"># Test flake8</span>\nwhen-changed -v -s -r -1 libp2p/ tests/ -c <span class=\"s2\">\"clear; flake8 libp2p tests &amp;&amp; echo 'flake8 success' || echo 'error'\"</span>\n</pre>\n<p>Run multi-process tests in one command, but without color:</p>\n<pre><span class=\"c1\"># in the project root:</span>\npytest --numprocesses<span class=\"o\">=</span><span class=\"m\">4</span> --looponfail --maxfail<span class=\"o\">=</span><span class=\"m\">1</span>\n<span class=\"c1\"># the same thing, succinctly:</span>\npytest -n <span class=\"m\">4</span> -f --maxfail<span class=\"o\">=</span><span class=\"m\">1</span>\n</pre>\n<p>Run in one thread, with color and desktop notifications:</p>\n<pre><span class=\"nb\">cd</span> venv\nptw --onfail <span class=\"s2\">\"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on py-libp2p failed'\"</span> ../tests ../libp2p\n</pre>\n<p>Note that tests/libp2p/test_libp2p.py contains an end-to-end messaging test between two libp2p hosts, which is the bulk of our proof of concept.</p>\n<h3>Release setup</h3>\n<p>Releases follow the same basic pattern as releases of some tangentially-related projects,\nlike Trinity. See <a href=\"https://trinity-client.readthedocs.io/en/latest/contributing.html#releasing\" rel=\"nofollow\">Trinity's release instructions</a>.</p>\n<h2>Requirements</h2>\n<p>The protobuf description in this repository was generated by <code>protoc</code> at version <code>3.7.1</code>.</p>\n<h2>Feature Breakdown</h2>\n<p>py-libp2p aims for conformity with <a href=\"https://github.com/libp2p/libp2p/blob/master/REQUIREMENTS.md#libp2p-modules-implementations\" rel=\"nofollow\">the standard libp2p modules</a>. Below is a breakdown of the modules we have developed, are developing, and may develop in the future.</p>\n<blockquote>\n<p>Legend: :green_apple: Done \u00a0 :lemon: In Progress \u00a0 :tomato: Missing \u00a0 :chestnut: Not planned</p>\n</blockquote>\n<table>\n<thead>\n<tr>\n<th>libp2p Node</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>libp2p</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Identify Protocol</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>Identify</code></strong></td>\n<td align=\"center\">:lemon:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Transport Protocols</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>TCP</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>UDP</code></strong></td>\n<td align=\"center\">:tomato:</td>\n</tr>\n<tr>\n<td><strong><code>WebSockets</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>UTP</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>WebRTC</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>SCTP</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Tor</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>i2p</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>cjdns</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Bluetooth LE</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Audio TP</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Zerotier</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>QUIC</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Stream Muxers</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>multiplex</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>yamux</code></strong></td>\n<td align=\"center\">:tomato:</td>\n</tr>\n<tr>\n<td><strong><code>benchmarks</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>muxado</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>spdystream</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>spdy</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>http2</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>QUIC</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Protocol Muxers</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>multiselect</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Switch (Swarm)</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>Switch</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>Dialer stack</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Peer Discovery</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>bootstrap list</code></strong></td>\n<td align=\"center\">:tomato:</td>\n</tr>\n<tr>\n<td><strong><code>Kademlia DHT</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>mDNS</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>PEX</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>DNS</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Content Routing</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>Kademlia DHT</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>floodsub</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>gossipsub</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>PHT</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Peer Routing</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>Kademlia DHT</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>floodsub</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>gossipsub</code></strong></td>\n<td align=\"center\">:green_apple:</td>\n</tr>\n<tr>\n<td><strong><code>PHT</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>NAT Traversal</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>nat-pmp</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>upnp</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>ext addr discovery</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>STUN-like</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>line-switch relay</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>pkt-switch relay</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Exchange</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>HTTP</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Bitswap</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Bittorrent</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<table>\n<thead>\n<tr>\n<th>Consensus</th>\n<th align=\"center\">Status</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong><code>Paxos</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Raft</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>PBTF</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr>\n<tr>\n<td><strong><code>Nakamoto</code></strong></td>\n<td align=\"center\">:chestnut:</td>\n</tr></tbody></table>\n<h2>Explanation of Basic Two Node Communication</h2>\n<h3>Core Concepts</h3>\n<p><em>(non-normative, useful for team notes, not a reference)</em></p>\n<p>Several components of the libp2p stack take part when establishing a connection between two nodes:</p>\n<ol>\n<li><strong>Host</strong>: a node in the libp2p network.</li>\n<li><strong>Connection</strong>: the layer 3 connection between two nodes in a libp2p network.</li>\n<li><strong>Transport</strong>: the component that creates a <em>Connection</em>, e.g. TCP, UDP, QUIC, etc.</li>\n<li><strong>Streams</strong>: an abstraction on top of a <em>Connection</em> representing parallel conversations about different matters, each of which is identified by a protocol ID. Multiple streams are layered on top of a <em>Connection</em> via the <em>Multiplexer</em>.</li>\n<li><strong>Multiplexer</strong>: a component that is responsible for wrapping messages sent on a stream with an envelope that identifies the stream they pertain to, normally via an ID. The multiplexer on the other unwraps the message and routes it internally based on the stream identification.</li>\n<li><strong>Secure channel</strong>: optionally establishes a secure, encrypted, and authenticated channel over the <em>Connection</em>.</li>\n<li><strong>Upgrader</strong>: a component that takes a raw layer 3 connection returned by the <em>Transport</em>, and performs the security and multiplexing negotiation to set up a secure, multiplexed channel on top of which <em>Streams</em> can be opened.</li>\n</ol>\n<h3>Communication between two hosts X and Y</h3>\n<p><em>(non-normative, useful for team notes, not a reference)</em></p>\n<p><strong>Initiate the connection</strong>: A host is simply a node in the libp2p network that is able to communicate with other nodes in the network. In order for X and Y to communicate with one another, one of the hosts must initiate the connection.  Let's say that X is going to initiate the connection. X will first open a connection to Y. This connection is where all of the actual communication will take place.</p>\n<p><strong>Communication over one connection with multiple protocols</strong>: X and Y can communicate over the same connection using different protocols and the multiplexer will appropriately route messages for a given protocol to a particular handler function for that protocol, which allows for each host to handle different protocols with separate functions. Furthermore, we can use multiple streams for a given protocol that allow for the same protocol and same underlying connection to be used for communication about separate topics between nodes X and Y.</p>\n<p><strong>Why use multiple streams?</strong>: The purpose of using the same connection for multiple streams to communicate over is to avoid the overhead of having multiple connections between X and Y. In order for X and Y to differentiate between messages on different streams and different protocols, a multiplexer is used to encode the messages when a message will be sent and decode a message when a message is received. The multiplexer encodes the message by adding a header to the beginning of any message to be sent that contains the stream id (along with some other info). Then, the message is sent across the raw connection and the receiving host will use its multiplexer to decode the message, i.e. determine which stream id the message should be routed to.</p>\n\n          </div>"}, "last_serial": 6885595, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "919c1bb5bcea0581bd0e1ec64b10c014", "sha256": "356310846f95b9c2dbca7e6bb428d26c428b5bc49313415435fc401c50fc85f9"}, "downloads": -1, "filename": "libp2p-0.1.0a0-py3-none-any.whl", "has_sig": false, "md5_digest": "919c1bb5bcea0581bd0e1ec64b10c014", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5, <4", "size": 3870, "upload_time": "2018-10-23T21:13:12", "upload_time_iso_8601": "2018-10-23T21:13:12.992927Z", "url": "https://files.pythonhosted.org/packages/26/4a/ba42fd91ce2f01e7f6ca11e773c768a575fb6d38cb6dde1383fed4373b0c/libp2p-0.1.0a0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c1c2bacd4b466ba790ac20630b94c047", "sha256": "e34b84a3e6239f57ccfd26f96d06a3d990dfadfd067c948e814cecb4756fbb5d"}, "downloads": -1, "filename": "libp2p-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "c1c2bacd4b466ba790ac20630b94c047", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5, <4", "size": 3609, "upload_time": "2018-10-23T21:13:14", "upload_time_iso_8601": "2018-10-23T21:13:14.281860Z", "url": "https://files.pythonhosted.org/packages/c7/0c/36f26d5129fc973986cc83fc436a107858abccf0a833f51a65cd2442c0cc/libp2p-0.1.0a0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "39bdd2cedecbf4b369a8bc10bc5a4aad", "sha256": "5e6e7ef1f5d8aa622987bef4efe3ca1f7752b921e3b3c73203670123d1113431"}, "downloads": -1, "filename": "libp2p-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "39bdd2cedecbf4b369a8bc10bc5a4aad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 100690, "upload_time": "2019-09-11T19:52:20", "upload_time_iso_8601": "2019-09-11T19:52:20.691773Z", "url": "https://files.pythonhosted.org/packages/73/85/195375f7a639f2138d479ed2ca5ceea0e79fc8ccf8a5254dd685dba36b72/libp2p-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "365fe7fe80ffe6b220f9e4d274a01ce1", "sha256": "315b0c27285684625fc0b3475135468a1e390fb6f832ff428c01c237c30145de"}, "downloads": -1, "filename": "libp2p-0.1.1.tar.gz", "has_sig": false, "md5_digest": "365fe7fe80ffe6b220f9e4d274a01ce1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 65520, "upload_time": "2019-09-11T19:52:22", "upload_time_iso_8601": "2019-09-11T19:52:22.511237Z", "url": "https://files.pythonhosted.org/packages/62/92/425e215f03a3aacdea27482fc4cc96a3e933555a5e418501cdfae263b3a2/libp2p-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b12af534c3104cf6fdd1ceec53bcecef", "sha256": "590d7cba41541c51741a53149c62c991ffc2b56e1a851f83d57f6a503104a811"}, "downloads": -1, "filename": "libp2p-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b12af534c3104cf6fdd1ceec53bcecef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 120506, "upload_time": "2019-11-14T21:40:16", "upload_time_iso_8601": "2019-11-14T21:40:16.142787Z", "url": "https://files.pythonhosted.org/packages/7b/ba/330d38c36a16eb62225555de80afcabb0bfa37f020aa1cf1647baae521e6/libp2p-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ac24014a4e95c5a5df661c856ced33a", "sha256": "919c0d9d0a5b5118691b411fac86e07199c5544b891504ed1f5e09c921e5c8d4"}, "downloads": -1, "filename": "libp2p-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3ac24014a4e95c5a5df661c856ced33a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78946, "upload_time": "2019-11-14T21:40:18", "upload_time_iso_8601": "2019-11-14T21:40:18.312318Z", "url": "https://files.pythonhosted.org/packages/b1/9c/6c6d18b67aa186e541efd96be90c5e7dc6dbecbcf496c1de6571c7f1d180/libp2p-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e3a6fc34861973144ba3468a8e33fe19", "sha256": "72167a663804bfa309f9201a5847966362f4ee20cd7181d5d3dc33ede7fd61fa"}, "downloads": -1, "filename": "libp2p-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e3a6fc34861973144ba3468a8e33fe19", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4", "size": 129730, "upload_time": "2019-11-28T00:22:20", "upload_time_iso_8601": "2019-11-28T00:22:20.586390Z", "url": "https://files.pythonhosted.org/packages/2f/ad/bd32dec0c97cd4ca21c469414bb5375335cf150878cc31034b59b97e17b1/libp2p-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "45197d10e827211ac62753bd6f8c49cc", "sha256": "11b1701ea706c0e4fef178c7619c63a35959ebf50a2a93e788a29b02d3875052"}, "downloads": -1, "filename": "libp2p-0.1.3.tar.gz", "has_sig": false, "md5_digest": "45197d10e827211ac62753bd6f8c49cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4", "size": 87973, "upload_time": "2019-11-28T00:22:22", "upload_time_iso_8601": "2019-11-28T00:22:22.637058Z", "url": "https://files.pythonhosted.org/packages/2e/6b/6dd70e83619a7330cc07f7dda8758333e8effe157cd43e6dd3c523874991/libp2p-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "4c9c3767b3bf5b1cfd3a02950b9e7821", "sha256": "9404eb2cf17be44632f4ef6fbe233f18f41d2227c58b6459508ba1ba085dfce9"}, "downloads": -1, "filename": "libp2p-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4c9c3767b3bf5b1cfd3a02950b9e7821", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4", "size": 116265, "upload_time": "2019-12-12T22:00:25", "upload_time_iso_8601": "2019-12-12T22:00:25.130652Z", "url": "https://files.pythonhosted.org/packages/03/ed/f06ed9f5628c6f47f02dff10164dfcf064a44529398b24a3fd952db1724c/libp2p-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ea48a982ca0de08af365881aab40daf", "sha256": "dd90e5b477f55803c58c5805acc9fc8bf3bacfc0f6106ec92253a97e97cb9afa"}, "downloads": -1, "filename": "libp2p-0.1.4.tar.gz", "has_sig": false, "md5_digest": "7ea48a982ca0de08af365881aab40daf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 78192, "upload_time": "2019-12-12T22:00:27", "upload_time_iso_8601": "2019-12-12T22:00:27.313403Z", "url": "https://files.pythonhosted.org/packages/5e/fc/7f7233ae3af8e93ed77bd090c3a9ef11a721982e8e31f7d4f65d792f9bdb/libp2p-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f6ff30dabe4a27c6f90065748dece472", "sha256": "14832b7eb93a9283704db7ecb1a46dbdd8ec375beed5ef24b42db23c7b1764fe"}, "downloads": -1, "filename": "libp2p-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f6ff30dabe4a27c6f90065748dece472", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4", "size": 127547, "upload_time": "2020-03-25T22:54:03", "upload_time_iso_8601": "2020-03-25T22:54:03.760051Z", "url": "https://files.pythonhosted.org/packages/f1/3f/166118166a4f3488c0730804ee7afbf349e623cc318c1c26475196856728/libp2p-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97ace52362ebb48179d1a808759cb9b6", "sha256": "b33be7fc18cfc477fecbfcef14e95750ec707eaf5186ba15c1e1669e1c42892e"}, "downloads": -1, "filename": "libp2p-0.1.5.tar.gz", "has_sig": false, "md5_digest": "97ace52362ebb48179d1a808759cb9b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 85332, "upload_time": "2020-03-25T22:54:06", "upload_time_iso_8601": "2020-03-25T22:54:06.624257Z", "url": "https://files.pythonhosted.org/packages/21/40/0c439357627bdf14570c0f8255192438bc9b6c31f44f63a3c905d562951e/libp2p-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f6ff30dabe4a27c6f90065748dece472", "sha256": "14832b7eb93a9283704db7ecb1a46dbdd8ec375beed5ef24b42db23c7b1764fe"}, "downloads": -1, "filename": "libp2p-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "f6ff30dabe4a27c6f90065748dece472", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6,<4", "size": 127547, "upload_time": "2020-03-25T22:54:03", "upload_time_iso_8601": "2020-03-25T22:54:03.760051Z", "url": "https://files.pythonhosted.org/packages/f1/3f/166118166a4f3488c0730804ee7afbf349e623cc318c1c26475196856728/libp2p-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97ace52362ebb48179d1a808759cb9b6", "sha256": "b33be7fc18cfc477fecbfcef14e95750ec707eaf5186ba15c1e1669e1c42892e"}, "downloads": -1, "filename": "libp2p-0.1.5.tar.gz", "has_sig": false, "md5_digest": "97ace52362ebb48179d1a808759cb9b6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6,<4", "size": 85332, "upload_time": "2020-03-25T22:54:06", "upload_time_iso_8601": "2020-03-25T22:54:06.624257Z", "url": "https://files.pythonhosted.org/packages/21/40/0c439357627bdf14570c0f8255192438bc9b6c31f44f63a3c905d562951e/libp2p-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:29 2020"}