{"info": {"author": "Wei-Li Tang", "author_email": "alex@ip6.tw", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Sound/Audio :: Conversion", "Topic :: Multimedia :: Sound/Audio :: MIDI"], "description": "# rmi2mid\n\nExtract Standard MIDI file (.mid) from RIFF MIDI (RMID) file (.rmi or .mid).\n\nThis is a simple tool to extract minimal RMID chunk from RIFF file (usually with extension .rmi or .mid) and write MIDI data to an independent .mid file.\n\nI wrote this because my favorite MIDI player cannot read RIFF MIDI I collected many years ago.\n\n# Usage\n\n```\npython3 -m rmi2mid <.rmi or .mid> <.mid>\n```\n\n# Unsupported format\n\nCurrently an RIFF file with (nested) LIST chunks is not supported.\n\n# TODO\n\n* Write a chunk parser. [PEP 594](https://www.python.org/dev/peps/pep-0594/) is going to deprecate and remove chunk module from python 3.8 and 3.10.\n\n# Reference\n\n* [Bundling SMF and DLS data in an \u201cRMID\u201d File (RP-029)](http://web.archive.org/web/20110610135604/http://www.midi.org/about-midi/rp29spec(rmid).pdf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alextwl/rmi2mid", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "rmi2mid", "package_url": "https://pypi.org/project/rmi2mid/", "platform": "", "project_url": "https://pypi.org/project/rmi2mid/", "project_urls": {"Homepage": "https://github.com/alextwl/rmi2mid"}, "release_url": "https://pypi.org/project/rmi2mid/0.1/", "requires_dist": null, "requires_python": "", "summary": "Extract Standard MIDI file (.mid) from RIFF MIDI (RMID) file (.rmi or .mid).", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>rmi2mid</h1>\n<p>Extract Standard MIDI file (.mid) from RIFF MIDI (RMID) file (.rmi or .mid).</p>\n<p>This is a simple tool to extract minimal RMID chunk from RIFF file (usually with extension .rmi or .mid) and write MIDI data to an independent .mid file.</p>\n<p>I wrote this because my favorite MIDI player cannot read RIFF MIDI I collected many years ago.</p>\n<h1>Usage</h1>\n<pre><code>python3 -m rmi2mid &lt;.rmi or .mid&gt; &lt;.mid&gt;\n</code></pre>\n<h1>Unsupported format</h1>\n<p>Currently an RIFF file with (nested) LIST chunks is not supported.</p>\n<h1>TODO</h1>\n<ul>\n<li>Write a chunk parser. <a href=\"https://www.python.org/dev/peps/pep-0594/\" rel=\"nofollow\">PEP 594</a> is going to deprecate and remove chunk module from python 3.8 and 3.10.</li>\n</ul>\n<h1>Reference</h1>\n<ul>\n<li><a href=\"http://web.archive.org/web/20110610135604/http://www.midi.org/about-midi/rp29spec(rmid).pdf\" rel=\"nofollow\">Bundling SMF and DLS data in an \u201cRMID\u201d File (RP-029)</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5502006, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "84ab457a52db263687d0babc0a79bdce", "sha256": "ec10014259fb7dc9a803aeeb135264d3053a4992cbc1dc96c88a2ec3504a34f4"}, "downloads": -1, "filename": "rmi2mid-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "84ab457a52db263687d0babc0a79bdce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3219, "upload_time": "2019-07-08T16:21:33", "upload_time_iso_8601": "2019-07-08T16:21:33.410430Z", "url": "https://files.pythonhosted.org/packages/dd/06/58eb6133cb1f389eb2e46b03c30d5b92dba1933cd249bda830730f7e2f9c/rmi2mid-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb6fb99a6d69f5d1c08e23d9b7bde408", "sha256": "8e3eb0218529e880a03a69472dc929a6e29a0d184adac24f47331cb1c1713e84"}, "downloads": -1, "filename": "rmi2mid-0.1.tar.gz", "has_sig": false, "md5_digest": "cb6fb99a6d69f5d1c08e23d9b7bde408", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2019-07-08T16:21:35", "upload_time_iso_8601": "2019-07-08T16:21:35.463102Z", "url": "https://files.pythonhosted.org/packages/30/3f/69ba678adb80a7ccf932a32318bf81a0433a1055ad09cf9f63038cabdcc4/rmi2mid-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "84ab457a52db263687d0babc0a79bdce", "sha256": "ec10014259fb7dc9a803aeeb135264d3053a4992cbc1dc96c88a2ec3504a34f4"}, "downloads": -1, "filename": "rmi2mid-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "84ab457a52db263687d0babc0a79bdce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3219, "upload_time": "2019-07-08T16:21:33", "upload_time_iso_8601": "2019-07-08T16:21:33.410430Z", "url": "https://files.pythonhosted.org/packages/dd/06/58eb6133cb1f389eb2e46b03c30d5b92dba1933cd249bda830730f7e2f9c/rmi2mid-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb6fb99a6d69f5d1c08e23d9b7bde408", "sha256": "8e3eb0218529e880a03a69472dc929a6e29a0d184adac24f47331cb1c1713e84"}, "downloads": -1, "filename": "rmi2mid-0.1.tar.gz", "has_sig": false, "md5_digest": "cb6fb99a6d69f5d1c08e23d9b7bde408", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2040, "upload_time": "2019-07-08T16:21:35", "upload_time_iso_8601": "2019-07-08T16:21:35.463102Z", "url": "https://files.pythonhosted.org/packages/30/3f/69ba678adb80a7ccf932a32318bf81a0433a1055ad09cf9f63038cabdcc4/rmi2mid-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:13 2020"}