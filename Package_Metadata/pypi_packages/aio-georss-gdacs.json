{"info": {"author": "Malte Franken", "author_email": "coding@subspace.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# python-aio-georss-gdacs\n\n[![Build Status](https://travis-ci.org/exxamalte/python-aio-georss-gdacs.svg)](https://travis-ci.org/exxamalte/python-aio-georss-gdacs)\n[![Coverage Status](https://coveralls.io/repos/github/exxamalte/python-aio-georss-gdacs/badge.svg?branch=master)](https://coveralls.io/github/exxamalte/python-aio-georss-gdacs?branch=master)\n[![PyPi](https://img.shields.io/pypi/v/aio-georss-gdacs.svg)](https://pypi.python.org/pypi/aio-georss-gdacs)\n[![Version](https://img.shields.io/pypi/pyversions/aio-georss-gdacs.svg)](https://pypi.python.org/pypi/aio-georss-gdacs)\n\nThis library provides convenient async access to the [Global Disaster Alert and Coordination System (GDACS)](https://www.gdacs.org/) feeds.\n\n## Installation\n`pip install aio-georss-gdacs`\n\n## Usage\nSee below for examples of how this library can be used. After instantiating a \nparticular class - feed or feed manager - and supply the required parameters, \nyou can call `update` to retrieve the feed data. The return value \nwill be a tuple of a status code and the actual data in the form of a list of \nfeed entries specific to the selected feed.\n\nStatus Codes\n* _OK_: Update went fine and data was retrieved. The library may still \n  return empty data, for example because no entries fulfilled the filter \n  criteria.\n* _OK_NO_DATA_: Update went fine but no data was retrieved, for example \n  because the server indicated that there was not update since the last request.\n* _ERROR_: Something went wrong during the update\n\n**Parameters**\n\n| Parameter          | Description                               |\n|--------------------|-------------------------------------------|\n| `home_coordinates` | Coordinates (tuple of latitude/longitude) |\n\n**Supported Filters**\n\n| Filter     |                     | Description |\n|------------|---------------------|-------------|\n| Radius     | `filter_radius`     | Radius in kilometers around the home coordinates in which events from feed are included. |\n| Categories | `filter_categories` | Array of category names. Only events with a category matching any of these is included. Supported/known categories are \"Drought\", \"Earthquake\", \"Flood\", \"Tropical Cyclone\", \"Tsunami\", \"Volcano\" |\n\n**Example**\n```python\nimport asyncio\nfrom aiohttp import ClientSession\nfrom aio_georss_gdacs import GdacsFeed\nasync def main() -> None:\n    async with ClientSession() as websession:    \n        # Home Coordinates: Latitude: -33.0, Longitude: 150.0\n        # Filter radius: 500 km\n        feed = GdacsFeed(websession, \n                         (-33.0, 150.0), \n                         filter_radius=500)\n        status, entries = await feed.update()\n        print(status)\n        print(entries)\nasyncio.get_event_loop().run_until_complete(main())\n```\n\n## Feed entry properties\nEach feed entry is populated with the following properties:\n\n| Name             | Description                                                                                   | Feed attribute                |\n|------------------|-----------------------------------------------------------------------------------------------|-------------------------------|\n| geometries       | All geometry details of this entry.                                                           | `gdacs:bbox` / `georss:point` |\n| coordinates      | Best coordinates (latitude, longitude) of this entry.                                         | `gdacs:bbox` / `georss:point` |\n| external_id      | The unique public identifier for this incident.                                               | `guid`                        |\n| title            | Title of this entry.                                                                          | `title`                       |\n| attribution      | Attribution of the feed.                                                                      | n/a                           |\n| distance_to_home | Distance in km of this entry to the home coordinates.                                         | n/a                           |\n| category         | The alert level of the incident.                                                              | `gdacs:alertlevel`            |\n| description      | The description of the incident.                                                              | `description`                 |\n| alert_level      | Alert level (\"Red\", \"Orange\", \"Green\").                                                       | `gdacs:alertlevel`            |\n| country          | Country where incident happened.                                                              | `gdacs:country`               |\n| duration_in_week | Duration of the incident in full weeks.                                                       | `gdacs:durationinweek`        |\n| event_id         | Event ID (numerical).                                                                         | `gdacs:eventid`               |\n| event_name       | Short event name.                                                                             | `gdacs:eventname`             |\n| event_type_short | Short event type (\"DR, \"EQ\", \"FL\", \"TC\", \"TS\", \"VO\").                                         | `gdacs:eventtype`             |\n| event_type       | Long event type (\"Drought\", \"Earthquake\", \"Flood\", \"Tropical Cyclone\", \"Tsunami\", \"Volcano\"). | `gdacs:eventtype`             |\n| from_date        | Date and time this incident started.                                                          | `gdacs:fromdate`              |\n| icon_url         | Icon URL.                                                                                     | `gdacs:icon`                  |\n| is_current       | Whether this incident is current.                                                             | `gdacs:iscurrent`             |\n| population       | Exposed population.                                                                           | `gdacs:population`            |\n| severity         | Severity of the incident.                                                                     | `gdacs:severity`              |\n| temporary        | Whether this incident is temporary.                                                           | `gdacs:temporary`             |\n| to_date          | Date and time this incident ended.                                                            | `gdacs:todate`                |\n| version          | Version of the incident in this feed.                                                         | `gdacs:version`               |\n| vulnerability    | Vulnerability score (textual or numerical).                                                   | `gdacs:vulnerability`         |\n\n\n## Feed Manager\n\nThe Feed Manager helps managing feed updates over time, by notifying the \nconsumer of the feed about new feed entries, updates and removed entries \ncompared to the last feed update.\n\n* If the current feed update is the first one, then all feed entries will be \n  reported as new. The feed manager will keep track of all feed entries' \n  external IDs that it has successfully processed.\n* If the current feed update is not the first one, then the feed manager will \n  produce three sets:\n  * Feed entries that were not in the previous feed update but are in the \n    current feed update will be reported as new.\n  * Feed entries that were in the previous feed update and are still in the \n    current feed update will be reported as to be updated.\n  * Feed entries that were in the previous feed update but are not in the \n    current feed update will be reported to be removed.\n* If the current update fails, then all feed entries processed in the previous\n  feed update will be reported to be removed.\n\nAfter a successful update from the feed, the feed manager provides two\ndifferent dates:\n\n* `last_update` will be the timestamp of the last update from the feed \n  irrespective of whether it was successful or not.\n* `last_update_successful` will be the timestamp of the last successful update \n  from the feed. This date may be useful if the consumer of this library wants \n  to treat intermittent errors from feed updates differently.\n* `last_timestamp` (optional, depends on the feed data) will be the latest \n  timestamp extracted from the feed data. \n  This requires that the underlying feed data actually contains a suitable \n  date. This date may be useful if the consumer of this library wants to \n  process feed entries differently if they haven't actually been updated.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/exxamalte/python-aio-georss-gdacs", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aio-georss-gdacs", "package_url": "https://pypi.org/project/aio-georss-gdacs/", "platform": "", "project_url": "https://pypi.org/project/aio-georss-gdacs/", "project_urls": {"Homepage": "https://github.com/exxamalte/python-aio-georss-gdacs"}, "release_url": "https://pypi.org/project/aio-georss-gdacs/0.3/", "requires_dist": ["aio-georss-client (>=0.5)", "dateparser (>=0.7.0)"], "requires_python": "", "summary": "An async GeoRSS client library for GDACS feeds.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>python-aio-georss-gdacs</h1>\n<p><a href=\"https://travis-ci.org/exxamalte/python-aio-georss-gdacs\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/43ccedaa7eb256566dba67822d53b8290fabe5a6/68747470733a2f2f7472617669732d63692e6f72672f657878616d616c74652f707974686f6e2d61696f2d67656f7273732d67646163732e737667\"></a>\n<a href=\"https://coveralls.io/github/exxamalte/python-aio-georss-gdacs?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/458137b5c58934c6c3c6fda4a57db32ff742f73a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f657878616d616c74652f707974686f6e2d61696f2d67656f7273732d67646163732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/aio-georss-gdacs\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5be7b18f2c69d40d5cf699f76982ca2d4dfe0754/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f61696f2d67656f7273732d67646163732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/aio-georss-gdacs\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac9ec6116214e051b695486306b295ed454e0e21/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f61696f2d67656f7273732d67646163732e737667\"></a></p>\n<p>This library provides convenient async access to the <a href=\"https://www.gdacs.org/\" rel=\"nofollow\">Global Disaster Alert and Coordination System (GDACS)</a> feeds.</p>\n<h2>Installation</h2>\n<p><code>pip install aio-georss-gdacs</code></p>\n<h2>Usage</h2>\n<p>See below for examples of how this library can be used. After instantiating a\nparticular class - feed or feed manager - and supply the required parameters,\nyou can call <code>update</code> to retrieve the feed data. The return value\nwill be a tuple of a status code and the actual data in the form of a list of\nfeed entries specific to the selected feed.</p>\n<p>Status Codes</p>\n<ul>\n<li><em>OK</em>: Update went fine and data was retrieved. The library may still\nreturn empty data, for example because no entries fulfilled the filter\ncriteria.</li>\n<li><em>OK_NO_DATA</em>: Update went fine but no data was retrieved, for example\nbecause the server indicated that there was not update since the last request.</li>\n<li><em>ERROR</em>: Something went wrong during the update</li>\n</ul>\n<p><strong>Parameters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>home_coordinates</code></td>\n<td>Coordinates (tuple of latitude/longitude)</td>\n</tr></tbody></table>\n<p><strong>Supported Filters</strong></p>\n<table>\n<thead>\n<tr>\n<th>Filter</th>\n<th></th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Radius</td>\n<td><code>filter_radius</code></td>\n<td>Radius in kilometers around the home coordinates in which events from feed are included.</td>\n</tr>\n<tr>\n<td>Categories</td>\n<td><code>filter_categories</code></td>\n<td>Array of category names. Only events with a category matching any of these is included. Supported/known categories are \"Drought\", \"Earthquake\", \"Flood\", \"Tropical Cyclone\", \"Tsunami\", \"Volcano\"</td>\n</tr></tbody></table>\n<p><strong>Example</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiohttp</span> <span class=\"kn\">import</span> <span class=\"n\">ClientSession</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aio_georss_gdacs</span> <span class=\"kn\">import</span> <span class=\"n\">GdacsFeed</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">websession</span><span class=\"p\">:</span>    \n        <span class=\"c1\"># Home Coordinates: Latitude: -33.0, Longitude: 150.0</span>\n        <span class=\"c1\"># Filter radius: 500 km</span>\n        <span class=\"n\">feed</span> <span class=\"o\">=</span> <span class=\"n\">GdacsFeed</span><span class=\"p\">(</span><span class=\"n\">websession</span><span class=\"p\">,</span> \n                         <span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mf\">33.0</span><span class=\"p\">,</span> <span class=\"mf\">150.0</span><span class=\"p\">),</span> \n                         <span class=\"n\">filter_radius</span><span class=\"o\">=</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n        <span class=\"n\">status</span><span class=\"p\">,</span> <span class=\"n\">entries</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">feed</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">()</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">status</span><span class=\"p\">)</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">entries</span><span class=\"p\">)</span>\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h2>Feed entry properties</h2>\n<p>Each feed entry is populated with the following properties:</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Description</th>\n<th>Feed attribute</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>geometries</td>\n<td>All geometry details of this entry.</td>\n<td><code>gdacs:bbox</code> / <code>georss:point</code></td>\n</tr>\n<tr>\n<td>coordinates</td>\n<td>Best coordinates (latitude, longitude) of this entry.</td>\n<td><code>gdacs:bbox</code> / <code>georss:point</code></td>\n</tr>\n<tr>\n<td>external_id</td>\n<td>The unique public identifier for this incident.</td>\n<td><code>guid</code></td>\n</tr>\n<tr>\n<td>title</td>\n<td>Title of this entry.</td>\n<td><code>title</code></td>\n</tr>\n<tr>\n<td>attribution</td>\n<td>Attribution of the feed.</td>\n<td>n/a</td>\n</tr>\n<tr>\n<td>distance_to_home</td>\n<td>Distance in km of this entry to the home coordinates.</td>\n<td>n/a</td>\n</tr>\n<tr>\n<td>category</td>\n<td>The alert level of the incident.</td>\n<td><code>gdacs:alertlevel</code></td>\n</tr>\n<tr>\n<td>description</td>\n<td>The description of the incident.</td>\n<td><code>description</code></td>\n</tr>\n<tr>\n<td>alert_level</td>\n<td>Alert level (\"Red\", \"Orange\", \"Green\").</td>\n<td><code>gdacs:alertlevel</code></td>\n</tr>\n<tr>\n<td>country</td>\n<td>Country where incident happened.</td>\n<td><code>gdacs:country</code></td>\n</tr>\n<tr>\n<td>duration_in_week</td>\n<td>Duration of the incident in full weeks.</td>\n<td><code>gdacs:durationinweek</code></td>\n</tr>\n<tr>\n<td>event_id</td>\n<td>Event ID (numerical).</td>\n<td><code>gdacs:eventid</code></td>\n</tr>\n<tr>\n<td>event_name</td>\n<td>Short event name.</td>\n<td><code>gdacs:eventname</code></td>\n</tr>\n<tr>\n<td>event_type_short</td>\n<td>Short event type (\"DR, \"EQ\", \"FL\", \"TC\", \"TS\", \"VO\").</td>\n<td><code>gdacs:eventtype</code></td>\n</tr>\n<tr>\n<td>event_type</td>\n<td>Long event type (\"Drought\", \"Earthquake\", \"Flood\", \"Tropical Cyclone\", \"Tsunami\", \"Volcano\").</td>\n<td><code>gdacs:eventtype</code></td>\n</tr>\n<tr>\n<td>from_date</td>\n<td>Date and time this incident started.</td>\n<td><code>gdacs:fromdate</code></td>\n</tr>\n<tr>\n<td>icon_url</td>\n<td>Icon URL.</td>\n<td><code>gdacs:icon</code></td>\n</tr>\n<tr>\n<td>is_current</td>\n<td>Whether this incident is current.</td>\n<td><code>gdacs:iscurrent</code></td>\n</tr>\n<tr>\n<td>population</td>\n<td>Exposed population.</td>\n<td><code>gdacs:population</code></td>\n</tr>\n<tr>\n<td>severity</td>\n<td>Severity of the incident.</td>\n<td><code>gdacs:severity</code></td>\n</tr>\n<tr>\n<td>temporary</td>\n<td>Whether this incident is temporary.</td>\n<td><code>gdacs:temporary</code></td>\n</tr>\n<tr>\n<td>to_date</td>\n<td>Date and time this incident ended.</td>\n<td><code>gdacs:todate</code></td>\n</tr>\n<tr>\n<td>version</td>\n<td>Version of the incident in this feed.</td>\n<td><code>gdacs:version</code></td>\n</tr>\n<tr>\n<td>vulnerability</td>\n<td>Vulnerability score (textual or numerical).</td>\n<td><code>gdacs:vulnerability</code></td>\n</tr></tbody></table>\n<h2>Feed Manager</h2>\n<p>The Feed Manager helps managing feed updates over time, by notifying the\nconsumer of the feed about new feed entries, updates and removed entries\ncompared to the last feed update.</p>\n<ul>\n<li>If the current feed update is the first one, then all feed entries will be\nreported as new. The feed manager will keep track of all feed entries'\nexternal IDs that it has successfully processed.</li>\n<li>If the current feed update is not the first one, then the feed manager will\nproduce three sets:\n<ul>\n<li>Feed entries that were not in the previous feed update but are in the\ncurrent feed update will be reported as new.</li>\n<li>Feed entries that were in the previous feed update and are still in the\ncurrent feed update will be reported as to be updated.</li>\n<li>Feed entries that were in the previous feed update but are not in the\ncurrent feed update will be reported to be removed.</li>\n</ul>\n</li>\n<li>If the current update fails, then all feed entries processed in the previous\nfeed update will be reported to be removed.</li>\n</ul>\n<p>After a successful update from the feed, the feed manager provides two\ndifferent dates:</p>\n<ul>\n<li><code>last_update</code> will be the timestamp of the last update from the feed\nirrespective of whether it was successful or not.</li>\n<li><code>last_update_successful</code> will be the timestamp of the last successful update\nfrom the feed. This date may be useful if the consumer of this library wants\nto treat intermittent errors from feed updates differently.</li>\n<li><code>last_timestamp</code> (optional, depends on the feed data) will be the latest\ntimestamp extracted from the feed data.\nThis requires that the underlying feed data actually contains a suitable\ndate. This date may be useful if the consumer of this library wants to\nprocess feed entries differently if they haven't actually been updated.</li>\n</ul>\n\n          </div>"}, "last_serial": 6490717, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bd6d9cd1fbb4c6d093a7d0fb647f28d4", "sha256": "d7b73fba36989b942a560c9c1ff9a4a458159c3399b18da7a3e03b6bb4541d67"}, "downloads": -1, "filename": "aio_georss_gdacs-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "bd6d9cd1fbb4c6d093a7d0fb647f28d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11487, "upload_time": "2020-01-07T10:43:15", "upload_time_iso_8601": "2020-01-07T10:43:15.880807Z", "url": "https://files.pythonhosted.org/packages/ea/8b/6c3e0ddcc1894647474284e97bc915d193a5bd8b0fe988faecb90cac6983/aio_georss_gdacs-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bce0239f437b936e3789e654ec724da1", "sha256": "7ba785548e69f8a3ebabf9c74c437852c47c0e9b9e28aaed0eda65b3c7ecc92b"}, "downloads": -1, "filename": "aio_georss_gdacs-0.1.tar.gz", "has_sig": false, "md5_digest": "bce0239f437b936e3789e654ec724da1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6938, "upload_time": "2020-01-07T10:43:18", "upload_time_iso_8601": "2020-01-07T10:43:18.665848Z", "url": "https://files.pythonhosted.org/packages/9b/ee/378b66fa43855dd130bff1da7cd8c85f00052aa57020a8b60646ee28b672/aio_georss_gdacs-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f46a6eb99d776459ac18f58e21f096d6", "sha256": "421fa6daf5d528de98f00da831410f70946c4ad086605fcc3340a5f7a5e13925"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f46a6eb99d776459ac18f58e21f096d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11559, "upload_time": "2020-01-20T13:28:31", "upload_time_iso_8601": "2020-01-20T13:28:31.868341Z", "url": "https://files.pythonhosted.org/packages/46/75/03d0120ae1bbc0f8fc787db3dda3b61f99a88f3d0820e7db0f7a52737132/aio_georss_gdacs-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44b2f9a369a0d77a7ca5e89cfdfb365c", "sha256": "44a8cd93ad15c07453bd1d8aa05511acb68c16be244d50866c2c19f3fef44e0c"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2.tar.gz", "has_sig": false, "md5_digest": "44b2f9a369a0d77a7ca5e89cfdfb365c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7000, "upload_time": "2020-01-20T13:28:33", "upload_time_iso_8601": "2020-01-20T13:28:33.545801Z", "url": "https://files.pythonhosted.org/packages/ed/e1/b05f3f41be0587d022c1a37d2f18b9426332a9ceb79f5ab5419013844486/aio_georss_gdacs-0.2.tar.gz", "yanked": false}], "0.2b1": [{"comment_text": "", "digests": {"md5": "138c19b36dc6a04496c3eff8bc67aaf3", "sha256": "7b940f3177d2b12cc6fdf80afc88747027688289e6fe9c0905d06348a9c29439"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2b1-py3-none-any.whl", "has_sig": false, "md5_digest": "138c19b36dc6a04496c3eff8bc67aaf3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11585, "upload_time": "2020-01-19T23:56:18", "upload_time_iso_8601": "2020-01-19T23:56:18.665374Z", "url": "https://files.pythonhosted.org/packages/ef/e7/1baffe41fd263d1058de4f24829745a1e72e39b3e15e6493da5457b016bf/aio_georss_gdacs-0.2b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7eae4acdaf889f886e80ca87a4e55d3", "sha256": "21a909109784322c871c6fa5fb212b47902de16091864f295d1e356f030da193"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2b1.tar.gz", "has_sig": false, "md5_digest": "e7eae4acdaf889f886e80ca87a4e55d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7012, "upload_time": "2020-01-19T23:56:20", "upload_time_iso_8601": "2020-01-19T23:56:20.587165Z", "url": "https://files.pythonhosted.org/packages/78/f7/eb15270a0bf8de3f712f17279bd1b5345be35557785c7b0cdd7586ee749c/aio_georss_gdacs-0.2b1.tar.gz", "yanked": false}], "0.2b2": [{"comment_text": "", "digests": {"md5": "ae1206dd715477a0062f57b6f81164dd", "sha256": "98dab0a0fdb34dc1f2175a3a3ec2ce4da107ab4725a8c96ff45adb51769b7eaf"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2b2-py3-none-any.whl", "has_sig": false, "md5_digest": "ae1206dd715477a0062f57b6f81164dd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11585, "upload_time": "2020-01-20T08:18:10", "upload_time_iso_8601": "2020-01-20T08:18:10.764271Z", "url": "https://files.pythonhosted.org/packages/00/9b/7b6fe729afe57df1fe5169a60e8cd7c3477262cc391528546faf15790b95/aio_georss_gdacs-0.2b2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "73fe78a07480746aae165565d42dd134", "sha256": "66a813a9582226cb4afe97c993238fdfa146f27ba31b46da891b18837af3638d"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2b2.tar.gz", "has_sig": false, "md5_digest": "73fe78a07480746aae165565d42dd134", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7011, "upload_time": "2020-01-20T08:18:12", "upload_time_iso_8601": "2020-01-20T08:18:12.678048Z", "url": "https://files.pythonhosted.org/packages/d7/d6/6afde319638fbf9cd17a6a1a9753571f9e382e8d066344ecab7399572b36/aio_georss_gdacs-0.2b2.tar.gz", "yanked": false}], "0.2b3": [{"comment_text": "", "digests": {"md5": "eebde8952aa2ac1fef6cbfa5fca19c0f", "sha256": "281a98ff4e1b6ebe756b1f6890a8b71122c17288ef4c2d834d2fec91f28eea65"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2b3-py3-none-any.whl", "has_sig": false, "md5_digest": "eebde8952aa2ac1fef6cbfa5fca19c0f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11589, "upload_time": "2020-01-20T13:15:09", "upload_time_iso_8601": "2020-01-20T13:15:09.870846Z", "url": "https://files.pythonhosted.org/packages/a2/67/3b2c2b1fc51438ce5f84255543e3d94fe8dc9ca98dc6e088043b5bbf8e7b/aio_georss_gdacs-0.2b3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "817cfcd8ee05334e51fad5dd982fe8b7", "sha256": "d601edadea21ff686eae7f05c285727ab3a7358260add4e934944926addd2627"}, "downloads": -1, "filename": "aio_georss_gdacs-0.2b3.tar.gz", "has_sig": false, "md5_digest": "817cfcd8ee05334e51fad5dd982fe8b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7004, "upload_time": "2020-01-20T13:15:11", "upload_time_iso_8601": "2020-01-20T13:15:11.722044Z", "url": "https://files.pythonhosted.org/packages/cc/80/140834d09314ece92a3b0a0b07809128b7b7e679b0f6c66c8de33ea53a7b/aio_georss_gdacs-0.2b3.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "5f1558e5b5871b8357825fd5145a1741", "sha256": "92bfece2c0f8a3f3f9b689f08adda6d8eeee47c449c32595d818ac1039ee05eb"}, "downloads": -1, "filename": "aio_georss_gdacs-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5f1558e5b5871b8357825fd5145a1741", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11636, "upload_time": "2020-01-20T22:17:58", "upload_time_iso_8601": "2020-01-20T22:17:58.635016Z", "url": "https://files.pythonhosted.org/packages/6c/04/f10ca6d5694f852fa0211a860236c8cae76145a1662a347139954fd5b046/aio_georss_gdacs-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c77ba420529122d574463ca8f4ff6daf", "sha256": "c6f392f2b5456a377364dce9864b57d3cd8f6a4bf01f11aa09009bae67bdfe33"}, "downloads": -1, "filename": "aio_georss_gdacs-0.3.tar.gz", "has_sig": false, "md5_digest": "c77ba420529122d574463ca8f4ff6daf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7063, "upload_time": "2020-01-20T22:18:02", "upload_time_iso_8601": "2020-01-20T22:18:02.073500Z", "url": "https://files.pythonhosted.org/packages/cd/a0/72a259fb6bee2c5b80296454def4ae0f3ef843f94a266eff033eb9df7979/aio_georss_gdacs-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5f1558e5b5871b8357825fd5145a1741", "sha256": "92bfece2c0f8a3f3f9b689f08adda6d8eeee47c449c32595d818ac1039ee05eb"}, "downloads": -1, "filename": "aio_georss_gdacs-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5f1558e5b5871b8357825fd5145a1741", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11636, "upload_time": "2020-01-20T22:17:58", "upload_time_iso_8601": "2020-01-20T22:17:58.635016Z", "url": "https://files.pythonhosted.org/packages/6c/04/f10ca6d5694f852fa0211a860236c8cae76145a1662a347139954fd5b046/aio_georss_gdacs-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c77ba420529122d574463ca8f4ff6daf", "sha256": "c6f392f2b5456a377364dce9864b57d3cd8f6a4bf01f11aa09009bae67bdfe33"}, "downloads": -1, "filename": "aio_georss_gdacs-0.3.tar.gz", "has_sig": false, "md5_digest": "c77ba420529122d574463ca8f4ff6daf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7063, "upload_time": "2020-01-20T22:18:02", "upload_time_iso_8601": "2020-01-20T22:18:02.073500Z", "url": "https://files.pythonhosted.org/packages/cd/a0/72a259fb6bee2c5b80296454def4ae0f3ef843f94a266eff033eb9df7979/aio_georss_gdacs-0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:33 2020"}