{"info": {"author": "Adam Hill", "author_email": "adamghill@yahoo.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# djajax\nSome helper utilities for building Ajax applications without throwing out all the nicities of Django out the window (or moving wholesale to something like Django REST Framework).\n\n## Models\n\n### SerializableMixin\nA model mixin that gives an easy way to serialize a model or queryset to JSON.\n\n#### to_json\nDefault dictionary representation of a model that can later be converted to JSON. May be overriden in a model by defining `to_json` in the model.\n\n#### serialize (static method)\nSerializes a queryset/model into a JSON-ifable dictionary. Will paginate a queryset if necessary.\n\n## Template tags\n\n### jsonify filter\nOutputs a dictionary input a JSON object. Returns an empty obj if the template variable is empty.\n\n```html\n<script type=\"text/javascript\">\nwindow.onload = function() {\n    (function() {\n        var djajaxJsonData = {{ json|jsonify }};\n        console.log('djajaxJsonData', djajaxJsonData);\n    })();\n}();\n</script>\n```\n\n### djajax_urls tag\nOutputs a dictionary of reverse lookups to urls for use in Javascript. Urls must be specified in DJAJAX_URL_REVERSE_LOOKUPS and must not need arguments.\n\nsettings.py\n```python\nDJAJAX_URL_REVERSE_LOOKUPS = [\n    'login',\n    'www:index',\n]\n```\n\nindex.html\n```html\n<script src=\"{% static 'js/djajax.js' %}\"></script>\n\n<script type=\"text/javascript\">\nwindow.onload = function() {\n    (function() {\n        var djajaxUrls = {% djajax_urls %};\n        console.log('djajaxUrls', djajaxUrls);\n    })();\n}();\n</script>\n```\n\n## HTTP responses\n\n### JsonHttpResponse\nReturns a JSON response with the correct headers set.\n\n## View helpers\n\n### is_idempotent\nReturns whether the request is idempotent (changes state on the server) or not.\n\n### response\nReturns an appropriate AJAX response for an AJAX request.\n\n### get_from_post_or_get\nAttempts to first get a value from the POST query dictionary, and if that fails, to look at the GET querystring.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adamghill/djajax", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "djajax", "package_url": "https://pypi.org/project/djajax/", "platform": "", "project_url": "https://pypi.org/project/djajax/", "project_urls": {"Homepage": "https://github.com/adamghill/djajax"}, "release_url": "https://pypi.org/project/djajax/0.0.4/", "requires_dist": ["Django"], "requires_python": "", "summary": "Helper utilities for working with Ajax in Django", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br># djajax<br>Some helper utilities for building Ajax applications without throwing out all the nicities of Django out the window (or moving wholesale to something like Django REST Framework).<br><br>## Models<br><br>### SerializableMixin<br>A model mixin that gives an easy way to serialize a model or queryset to JSON.<br><br>#### to_json<br>Default dictionary representation of a model that can later be converted to JSON. May be overriden in a model by defining `to_json` in the model.<br><br>#### serialize (static method)<br>Serializes a queryset/model into a JSON-ifable dictionary. Will paginate a queryset if necessary.<br><br>## Template tags<br><br>### jsonify filter<br>Outputs a dictionary input a JSON object. Returns an empty obj if the template variable is empty.<br><br>```html<br>&lt;script type=\"text/javascript\"&gt;<br>window.onload = function() {<br>    (function() {<br>        var djajaxJsonData = {{ json|jsonify }};<br>        console.log('djajaxJsonData', djajaxJsonData);<br>    })();<br>}();<br>&lt;/script&gt;<br>```<br><br>### djajax_urls tag<br>Outputs a dictionary of reverse lookups to urls for use in Javascript. Urls must be specified in DJAJAX_URL_REVERSE_LOOKUPS and must not need arguments.<br><br>settings.py<br>```python<br>DJAJAX_URL_REVERSE_LOOKUPS = [<br>    'login',<br>    'www:index',<br>]<br>```<br><br>index.html<br>```html<br>&lt;script src=\"{% static 'js/djajax.js' %}\"&gt;&lt;/script&gt;<br><br>&lt;script type=\"text/javascript\"&gt;<br>window.onload = function() {<br>    (function() {<br>        var djajaxUrls = {% djajax_urls %};<br>        console.log('djajaxUrls', djajaxUrls);<br>    })();<br>}();<br>&lt;/script&gt;<br>```<br><br>## HTTP responses<br><br>### JsonHttpResponse<br>Returns a JSON response with the correct headers set.<br><br>## View helpers<br><br>### is_idempotent<br>Returns whether the request is idempotent (changes state on the server) or not.<br><br>### response<br>Returns an appropriate AJAX response for an AJAX request.<br><br>### get_from_post_or_get<br>Attempts to first get a value from the POST query dictionary, and if that fails, to look at the GET querystring.<br><br><br>\n          </div>"}, "last_serial": 4124360, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "57f1786124ae29cd115903d89326ec83", "sha256": "201e566ce95ef21aa151d82121ba8699b347363eb8f131d585f5dca1160c7177"}, "downloads": -1, "filename": "djajax-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "57f1786124ae29cd115903d89326ec83", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10045, "upload_time": "2018-02-04T04:09:28", "upload_time_iso_8601": "2018-02-04T04:09:28.832725Z", "url": "https://files.pythonhosted.org/packages/57/b1/c4e6a3944d361d6d20291c38b6975fcd74336df602a3aadf0751a1da2c46/djajax-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6341bdb542b18bbf498916732875099e", "sha256": "06092f0646ba312bd55c5a3128471756370b6cedb54028507a0b5cf9ffe8a9f6"}, "downloads": -1, "filename": "djajax-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6341bdb542b18bbf498916732875099e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7701, "upload_time": "2018-02-04T04:09:29", "upload_time_iso_8601": "2018-02-04T04:09:29.853939Z", "url": "https://files.pythonhosted.org/packages/83/cb/8a81131b33658950da01acd886795b86c2086aaf8991dede255f69f5a3fd/djajax-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "cf761dad37190c877183ddf41d7cbd35", "sha256": "31ae4eb74cfbf7f5b993cc9ddcb0b1f6cff6aa5bccbfa4b314055ebab5d2093c"}, "downloads": -1, "filename": "djajax-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf761dad37190c877183ddf41d7cbd35", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10040, "upload_time": "2018-04-22T23:31:35", "upload_time_iso_8601": "2018-04-22T23:31:35.551929Z", "url": "https://files.pythonhosted.org/packages/a8/f5/25df45c2a03814195986c686bc112026e77b604e9acabedd9216f1156abe/djajax-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "07e329d7a1a7bfd8426771a4c8b04dbc", "sha256": "92b0b057cc4926ed715644dd82b478c8cc07a36f9c4f16de40214f96fb95e6ef"}, "downloads": -1, "filename": "djajax-0.0.2.tar.gz", "has_sig": false, "md5_digest": "07e329d7a1a7bfd8426771a4c8b04dbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7716, "upload_time": "2018-04-22T23:31:36", "upload_time_iso_8601": "2018-04-22T23:31:36.806067Z", "url": "https://files.pythonhosted.org/packages/f5/29/1179c8d94773166849cffb25a7c1c146fa7a652cf06d112772e49b370876/djajax-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "aaf1a2f375848b5dfb0a4b05aa3a12f9", "sha256": "6a32336791530629445f69907137200d6356f791a39ea04710265edb18fcb20c"}, "downloads": -1, "filename": "djajax-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aaf1a2f375848b5dfb0a4b05aa3a12f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10586, "upload_time": "2018-04-22T23:59:56", "upload_time_iso_8601": "2018-04-22T23:59:56.505613Z", "url": "https://files.pythonhosted.org/packages/a2/2e/3dffdb8c3ade57b5fe2ca4e70e75f48f7466eee3aa961885ac82f994114d/djajax-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f723abfb05f6e2f1636415de8f18ef76", "sha256": "7a39dc80bb35bf72a3424949ba48a4ce7b4cf0d6011b332e3361278e8bb6db4c"}, "downloads": -1, "filename": "djajax-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f723abfb05f6e2f1636415de8f18ef76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8086, "upload_time": "2018-04-22T23:59:57", "upload_time_iso_8601": "2018-04-22T23:59:57.625172Z", "url": "https://files.pythonhosted.org/packages/95/de/9e78b989ea112f5037d25e8cec38814adabb0548f94b2ae56d79b931b5e4/djajax-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "7736b5ee3139d01aa53253952d75c5e5", "sha256": "9bc4795962cd444350f34770f0f9a4e35fdd9ec078eb4d308f16bb031d7cf7a7"}, "downloads": -1, "filename": "djajax-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7736b5ee3139d01aa53253952d75c5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8843, "upload_time": "2018-08-01T11:48:05", "upload_time_iso_8601": "2018-08-01T11:48:05.715302Z", "url": "https://files.pythonhosted.org/packages/06/98/75a24542a1046622bffb1a9731164b6fbb0ba9d7aeec19fb05603729573d/djajax-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee49cd56ed612ed855b6ce4098d96e9a", "sha256": "5cdf6bb6cc5dea81e4776ffd03b6cd57d3329ab9ae38fa1575ff65b490236aff"}, "downloads": -1, "filename": "djajax-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ee49cd56ed612ed855b6ce4098d96e9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8556, "upload_time": "2018-08-01T11:48:07", "upload_time_iso_8601": "2018-08-01T11:48:07.358246Z", "url": "https://files.pythonhosted.org/packages/18/fe/1770a066b23bbe0929109f6813e531ca33e54f3a05a78e298f3db4e0a795/djajax-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7736b5ee3139d01aa53253952d75c5e5", "sha256": "9bc4795962cd444350f34770f0f9a4e35fdd9ec078eb4d308f16bb031d7cf7a7"}, "downloads": -1, "filename": "djajax-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "7736b5ee3139d01aa53253952d75c5e5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8843, "upload_time": "2018-08-01T11:48:05", "upload_time_iso_8601": "2018-08-01T11:48:05.715302Z", "url": "https://files.pythonhosted.org/packages/06/98/75a24542a1046622bffb1a9731164b6fbb0ba9d7aeec19fb05603729573d/djajax-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee49cd56ed612ed855b6ce4098d96e9a", "sha256": "5cdf6bb6cc5dea81e4776ffd03b6cd57d3329ab9ae38fa1575ff65b490236aff"}, "downloads": -1, "filename": "djajax-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ee49cd56ed612ed855b6ce4098d96e9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8556, "upload_time": "2018-08-01T11:48:07", "upload_time_iso_8601": "2018-08-01T11:48:07.358246Z", "url": "https://files.pythonhosted.org/packages/18/fe/1770a066b23bbe0929109f6813e531ca33e54f3a05a78e298f3db4e0a795/djajax-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:56 2020"}