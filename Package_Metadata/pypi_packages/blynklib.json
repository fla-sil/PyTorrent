{"info": {"author": "Anton Morozenko", "author_email": "antoha.ua@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "# Blynk Python Library\nThis library provides API to connect IoT hardware that supports Micropython/Python to Blynk Cloud and communiate with Blynk apps (iOS and Android). You can send raw and processed sensor data and remotely control anything that is connected to your hardware (relays, motors, servos) from anywhere in the world.  \n\n[![GitHub version](https://img.shields.io/github/release/blynkkk/lib-python.svg)][lib-release]\n[![GitHub download](https://img.shields.io/github/downloads/blynkkk/lib-python/total.svg)][lib-release]\n[![GitHub stars](https://img.shields.io/github/stars/blynkkk/lib-python.svg)][lib-stars]\n[![GitHub issues](https://img.shields.io/github/issues/blynkkk/lib-python.svg)][lib-issues]\n[![Build Status](https://img.shields.io/travis/blynkkk/lib-python.svg)][lib-travis]\n[![License](https://img.shields.io/badge/license-MIT-blue.svg)][lib-licence]\n\nIf you like **Blynk** - give it a star, or fork it and contribute! \n[![GitHub stars](https://img.shields.io/github/stars/blynkkk/lib-python.svg?style=social&label=Star)][lib-stars] \n[![GitHub forks](https://img.shields.io/github/forks/blynkkk/lib-python.svg?style=social&label=Fork)][lib-network]\n\n\n![Blynk Banner][blynk-banner]\n### Blynk is **the most popular Internet of Things platform** for connecting hardware to the cloud, designing apps to control them, and managing your deployed devices at scale. \n\n- With Blynk Library you can connect **over 400 hardware models** (including ESP8266, ESP32, NodeMCU, all Arduinos, Raspberry Pi, Particle, Texas Instruments, etc.)to the Blynk Cloud.\nFull list of supported hardware can be found [here][blynk-hw].\n\n- With Blynk apps for **iOS** and **Android** apps you can easily build graphic interfaces for all of your projects by simply dragging and dropping widgets on your smartphone. It's a purely WYSIWG experience: no coding on iOS or Android required. \n\n- Hardware can connect to Blynk Cloud (open-source server) over the Internet using hardware connectivity on board, or with the use of various shields (Ethernet, WiFi, GSM, LTE, etc). Blynk Cloud is available for every user of Blynk **for free**. \n\n\n\n\n## Installation of Blynk Python Library \n\n#### Installation via python pip\n - Check python availability in your system. \n   ```commandline\n   python --version\n   ``` \n   To exclude compatibility issue preferable versions are Python 2.7.9 (or greater) or Python 3.4 (or greater)\n   If python not present you can download and install it from [here][python-org]. \n\n   **NOTE:** To run python in \"sandbox\" you can try **virtualenv** module. Check [this document][virtual-env] how to do it.\n\n - If you\u2019re using preferable versions of python mentioned above, then **pip** comes installed with Python by default. \n   Check pip availability:\n   ```commandline\n   pip --version\n   ```    \n - Install blynk library\n   ```commandline\n   sudo pip install blynklib\n   ``` \n\n#### Manual installation\nLibrary can be installed locally from git sources: \n\n```commandline \ngit clone https://github.com/blynkkk/lib-python.git\ncd lib-python\npip install --user -e .\n\n# sudo pip install -e .  # if installation needed not for current but for all users\n``` \n\n#### Testing\nYou can run unit tests for cPython version of library (blynklib.py) using the command:\n\n    python setup.py test\n\n**NOTE** Blynklib version <0.2.6 should use pytest-mock<1.11.2. In version 1.11.2 were added restrictions for context manager usage\n\n**NOTE:** Unit tests for Micropython ENV are not available yet.\n\n#### Micropython installation\nSome hardware platforms can use **[Micropython][micropython-org]** package.\nThis is helpful for preliminary testing and debugging of your code outside of real hardware. Supported platforms \nand related installation docs can be found [here][micropython-pkg].\n\n\n## Features\nThis library supports Python2, Python3 (blynklib.py) , and Micropython (blynklib_mp.py).\n\n- Communication with public or local [Blynk Server][blynk-server].\n- Exchange any data between your hardware and app\n- Tested to work with: Raspberry Pi (any), ESP32, ESP8266\n\n##### List of available operations:\n - Subscribe to connect/disconnect events (ssl connection supported only by cPython lib)\n - Subscribe to read/write events of [virtual pins][blynk-vpins]\n - [Virtual Pin][blynk-vpins] write\n - [Virtual Pin][blynk-vpins] sync\n - Send mobile app push notifications\n - Send email notifications\n - Send twitter notifications\n - Change widget GUI parameters in Blynk app based on hardware input\n\n\n## Quickstart \n1. Install Blynk python library as described above\n2. Install Blynk App: \n[<img src=\"https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/googleplay.svg\" width=\"18\" height=\"18\" /> Google Play][blynk-app-android] | \n[<img src=\"https://cdn.rawgit.com/simple-icons/simple-icons/develop/icons/apple.svg\" width=\"18\" height=\"18\" /> App Store][blynk-app-ios]\n\n- Create new account in Blynk app using your email address\n- Create a new Project in Blynk app \n- You will get Auth Token delivered to your email account. \n- Put this Auth Token within your python script to authenticate your device on [public][blynk-server-public] or [local][blynk-server]\n\n```python\nBLYNK_AUTH = '<YourAuthToken>' #insert your Auth Token here\n```\n\n#### Usage example\n```python\nimport blynklib\n# import blynklib_mp as blynklib # micropython import\n\nBLYNK_AUTH = '<YourAuthToken>' #insert your Auth Token here\n# base lib init\nblynk = blynklib.Blynk(BLYNK_AUTH)\n\n# advanced options of lib init\n# from __future__ import print_function\n# blynk = blynklib.Blynk(BLYNK_AUTH, server='blynk-cloud.com', port=80, ssl_cert=None,\n#                        heartbeat=10, rcv_buffer=1024, log=print)\n\n# Lib init with SSL socket connection\n# blynk = blynklib.Blynk(BLYNK_AUTH, port=443, ssl_cert='<path to local blynk server certificate>')\n# current blynk-cloud.com certificate stored in project as \n# https://github.com/blynkkk/lib-python/blob/master/certificate/blynk-cloud.com.crt\n# Note! ssl feature supported only by cPython\n\n# register handler for Virtual Pin V22 reading by Blynk App.\n# when a widget in Blynk App asks Virtual Pin data from server within given configurable interval (1,2,5,10 sec etc) \n# server automatically sends notification about read virtual pin event to hardware\n# this notification captured by current handler \n@blynk.handle_event('read V22')\ndef read_virtual_pin_handler(pin):\n\n    # your code goes here\n    # ...\n    # Example: get sensor value, perform calculations, etc\n    sensor_data = '<YourSensorData>'\n    critilcal_data_value = '<YourThresholdSensorValue>'\n\n    # send value to Virtual Pin and store it in Blynk Cloud \n    blynk.virtual_write(pin, sensor_data)\n\n    # you can define if needed any other pin\n    # example: blynk.virtual_write(24, sensor_data)\n\n    # you can perform actions if value reaches a threshold (e.g. some critical value)\n    if sensor_data >= critilcal_data_value\n\n        blynk.set_property(pin, 'color', '#FF0000') # set red color for the widget UI element \n        blynk.notify('Warning critical value') # send push notification to Blynk App \n        blynk.email(<youremail@email.com>, 'Email Subject', 'Email Body') # send email to specified address\n\n# main loop that starts program and handles registered events\nwhile True:\n    blynk.run()\n```\n## Other Examples\n\nExamples can be found **[here][blynk-py-examples]** Check them all to get familiar with main Blynk API features.\n\n##### Core operations:\n- [01_write_virtual_pin.py](https://github.com/blynkkk/lib-python/blob/master/examples/01_write_virtual_pin.py): How to read incoming data from Blynk app to Virtual Pin and use it in your code\n- [02_read_virtual_pin.py](https://github.com/blynkkk/lib-python/blob/master/examples/02_read_virtual_pin.py): How to update value on Virtual Pin\n- [03_connect_disconnect.py](https://github.com/blynkkk/lib-python/blob/master/examples/03_connect_disconnect.py): Managing connection with Blynk Cloud\n- [04_email.py](https://github.com/blynkkk/lib-python/blob/master/examples/04_email.py): How to send send email and push notifications from your hardware                \n- [05_set_property_notify.py](https://github.com/blynkkk/lib-python/blob/master/examples/05_set_property_notify.py): How to change some of widget UI properties like colors, labels, etc  \n- [06_terminal_widget.py](https://github.com/blynkkk/lib-python/blob/master/examples/06_terminal_widget.py): Communication between hardware and app through Terminal widget)\n- [07_tweet_and_logging.py](https://github.com/blynkkk/lib-python/blob/master/examples/07_tweet_and_logging.py): How to post to Twitter and log events from your hardware\n- [08_blynk_timer.py](https://github.com/blynkkk/lib-python/blob/master/examples/08_blynk_timer.py): How send data periodically from hardware by using **[Blynk Timer][blynktimer-doc]**\n- [09_sync_virtual_pin.py](https://github.com/blynkkk/lib-python/blob/master/examples/09_sync_virtual_pin.py): How to sync virtual pin states and properties\n- [10_rtc_sync.py](https://github.com/blynkkk/lib-python/blob/master/examples/10_rtc_sync.py): How to perform RTC sync with blynk server \n- [11_ssl_socket.py](https://github.com/blynkkk/lib-python/blob/master/examples/11_ssl_socket.py): SSL server connection. Feature supported only by cPython library. \n- [12_app_connect_disconnect.py](https://github.com/blynkkk/lib-python/blob/master/examples/12_app_connect_disconnect.py): Managing APP connect/disconnect events with Blynk Cloud. \n\n\n##### Raspberry Pi (any):\nRead [Raspberry Pi guide](https://github.com/blynkkk/lib-python/tree/master/examples/raspberry) first.\n\n- [01_weather_station_pi3b.py](https://github.com/blynkkk/lib-python/blob/master/examples/raspberry/01_weather_station_pi3b.py) Connect DHT22; BMP180 sensors and send data to Blynk app\n\n##### ESP32\nRead [ESP32 guide](https://github.com/blynkkk/lib-python/tree/master/examples/esp32) first.\n- [01_touch_button.py](https://github.com/blynkkk/lib-python/blob/master/examples/esp32/01_touch_button.py) Connect TTP223B touch sensor to ESP32 and react to touch\n- [02_terminal_cli.py](https://github.com/blynkkk/lib-python/blob/master/examples/esp32/02_terminal_cli.py) Communication between ESP32 hardware and app through Terminal widget\n- [03_temperature_humidity_dht22.py](https://github.com/blynkkk/lib-python/blob/master/examples/esp32/03_temperature_humidity_dht22.py) Connect DHT22 sensor to ESP32 and send data to Blynk app\n\n##### ESP8266\nRead [ESP8266 guide](https://github.com/blynkkk/lib-python/tree/master/examples/esp8266) first.\n- [01_potentiometer.py](https://github.com/blynkkk/lib-python/blob/master/examples/esp8266/01_potentiometer.py) Cconnect potentiometer to ESP8266 and send resistance value to the app \n\n\n\n### Memory size limitations\nFor hardware with limited memory size (ex. ESP8266) you can use ***frozen modules*** or ***frozen bytecode*** approaches\nto load **blynklib** or any other library to hardware.\n\nRead [this document][esp8266-readme] to get more information.\n\n## Documentation and other helpful links\n\n[Full Blynk Documentation](http://docs.blynk.cc/#blynk-firmware) - a complete guide on Blynk features\n\n[Community (Forum)](http://community.blynk.cc) - join a 500,000 Blynk community to ask questions and share ideas\n\n[Help Center](http://help.blynk.cc) - helpful articles on various Blynk aspects\n\n[Code Examples Browser](http://examples.blynk.cc) - browse examples to explore Blynk possibilities\n\n[Official Website](https://blynk.io) \n\n**Social Media:**\n\n[Facebook](https://www.fb.com/blynkapp) [Twitter](https://twitter.com/blynk_app) [Youtube](https://www.youtube.com/blynk)\n\n[Instagram](https://www.instagram.com/blynk.iot/) [LinkedIn](https://www.linkedin.com/company/b-l-y-n-k/)\n\n\n## Blynk libraries for other platforms\n* [C++](https://github.com/blynkkk/blynk-library)\n* [Node.js, Espruino, Browsers](https://github.com/vshymanskyy/blynk-library-js)\n* [Python](https://github.com/vshymanskyy/blynk-library-python) (by Volodymyr Shymanskyy)\n* [Particle](https://github.com/vshymanskyy/blynk-library-spark)\n* [Lua, OpenWrt, NodeMCU](https://github.com/vshymanskyy/blynk-library-lua)\n* [OpenWrt packages](https://github.com/vshymanskyy/blynk-library-openwrt)\n* [MBED](https://developer.mbed.org/users/vshymanskyy/code/Blynk/)\n* [Node-RED](https://www.npmjs.com/package/node-red-contrib-blynk-ws)\n* [LabVIEW](https://github.com/juncaofish/NI-LabVIEWInterfaceforBlynk)\n* [C#](https://github.com/sverrefroy/BlynkLibrary)\n\n## Contributing\nYou are very welcome to contribute: stability bugfixes, new hardware support, or any other improvements. Please.\n\n\n### License\nThis project is released under The MIT License (MIT)\n\n\n  [lib-release]: https://github.com/blynkkk/lib-python/releases/latest\n  [lib-licence]: https://github.com/blynkkk/lib-python/blob/master/LICENSE\n  [lib-travis]: https://travis-ci.org/blynkkk/lib-python\n  [lib-issues]: https://github.com/blynkkk/lib-python/issues\n  [lib-stars]: https://github.com/blynkkk/lib-python/stargazers\n  [lib-network]: https://github.com/blynkkk/lib-python/network\n  [blynk-io]: https://github.com/blynkkk/blynkkk.github.io\n  [blynk-hw]: https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md\n  [blynk-architecture]: https://github.com/blynkkk/blynkkk.github.io/blob/master/images/architecture.png\n  [blynk-banner]: https://github.com/blynkkk/blynkkk.github.io/blob/master/images/GithubBanner.jpg\n  [blynk-server]: https://github.com/blynkkk/blynk-server\n  [blynk-server-public]: http://blynk-cloud.com\n  [blynk-docs]: https://docs.blynk.cc/\n  [blynk-py-examples]: https://github.com/blynkkk/lib-python/blob/master/examples\n  [blynk-app-android]: https://play.google.com/store/apps/details?id=cc.blynk\n  [blynk-app-ios]: https://itunes.apple.com/us/app/blynk-control-arduino-raspberry/id808760481?ls=1&mt=8\n  [blynk-vpins]: http://help.blynk.cc/getting-started-library-auth-token-code-examples/blynk-basics/what-is-virtual-pins\n  [python-org]: https://www.python.org/downloads/\n  [micropython-org]: https://micropython.org/ \n  [micropython-pkg]: https://github.com/micropython/micropython/wiki/Getting-Started\n  [virtual-env]: https://virtualenv.pypa.io/en/latest/installation/\n  [esp8266-readme]: https://github.com/blynkkk/lib-python/blob/master/examples/esp8266/README.md\n  [blynktimer-doc]: https://github.com/blynkkk/lib-python/blob/master/TIMERS.md\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/blynkkk/lib-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "blynklib", "package_url": "https://pypi.org/project/blynklib/", "platform": "", "project_url": "https://pypi.org/project/blynklib/", "project_urls": {"Homepage": "https://github.com/blynkkk/lib-python"}, "release_url": "https://pypi.org/project/blynklib/0.2.6/", "requires_dist": null, "requires_python": "", "summary": "Blynk Python/Micropython library", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Blynk Python Library</h1>\n<p>This library provides API to connect IoT hardware that supports Micropython/Python to Blynk Cloud and communiate with Blynk apps (iOS and Android). You can send raw and processed sensor data and remotely control anything that is connected to your hardware (relays, motors, servos) from anywhere in the world.</p>\n<p><a href=\"https://github.com/blynkkk/lib-python/releases/latest\" rel=\"nofollow\"><img alt=\"GitHub version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05f7d78954d6a3c6aace9b7c6408be4e7e0c53a0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f626c796e6b6b6b2f6c69622d707974686f6e2e737667\"></a>\n<a href=\"https://github.com/blynkkk/lib-python/releases/latest\" rel=\"nofollow\"><img alt=\"GitHub download\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e96f3eaa28c602aeb99288ce223932f70309fec8/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f646f776e6c6f6164732f626c796e6b6b6b2f6c69622d707974686f6e2f746f74616c2e737667\"></a>\n<a href=\"https://github.com/blynkkk/lib-python/stargazers\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ab602b2bc16209ecdf5eda393a6b43c75a01a9f0/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626c796e6b6b6b2f6c69622d707974686f6e2e737667\"></a>\n<a href=\"https://github.com/blynkkk/lib-python/issues\" rel=\"nofollow\"><img alt=\"GitHub issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6051dc8ce6c722a70e41944d9a5db7b448456358/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f626c796e6b6b6b2f6c69622d707974686f6e2e737667\"></a>\n<a href=\"https://travis-ci.org/blynkkk/lib-python\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/619817487fa1f773bd357d3a62cbb15986d4081b/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f626c796e6b6b6b2f6c69622d707974686f6e2e737667\"></a>\n<a href=\"https://github.com/blynkkk/lib-python/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<p>If you like <strong>Blynk</strong> - give it a star, or fork it and contribute!\n<a href=\"https://github.com/blynkkk/lib-python/stargazers\" rel=\"nofollow\"><img alt=\"GitHub stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0ce34d9f17c67cd62b9df629c6241ac12f98d55/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f626c796e6b6b6b2f6c69622d707974686f6e2e7376673f7374796c653d736f6369616c266c6162656c3d53746172\"></a>\n<a href=\"https://github.com/blynkkk/lib-python/network\" rel=\"nofollow\"><img alt=\"GitHub forks\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e25a529f6fbba0378d10f2fc404736e305cd0d13/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f666f726b732f626c796e6b6b6b2f6c69622d707974686f6e2e7376673f7374796c653d736f6369616c266c6162656c3d466f726b\"></a></p>\n<p><img alt=\"Blynk Banner\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c203eee56df96db168a9db0a8638f92897e7d797/68747470733a2f2f6769746875622e636f6d2f626c796e6b6b6b2f626c796e6b6b6b2e6769746875622e696f2f626c6f622f6d61737465722f696d616765732f47697468756242616e6e65722e6a7067\"></p>\n<h3>Blynk is <strong>the most popular Internet of Things platform</strong> for connecting hardware to the cloud, designing apps to control them, and managing your deployed devices at scale.</h3>\n<ul>\n<li>\n<p>With Blynk Library you can connect <strong>over 400 hardware models</strong> (including ESP8266, ESP32, NodeMCU, all Arduinos, Raspberry Pi, Particle, Texas Instruments, etc.)to the Blynk Cloud.\nFull list of supported hardware can be found <a href=\"https://github.com/blynkkk/blynkkk.github.io/blob/master/SupportedHardware.md\" rel=\"nofollow\">here</a>.</p>\n</li>\n<li>\n<p>With Blynk apps for <strong>iOS</strong> and <strong>Android</strong> apps you can easily build graphic interfaces for all of your projects by simply dragging and dropping widgets on your smartphone. It's a purely WYSIWG experience: no coding on iOS or Android required.</p>\n</li>\n<li>\n<p>Hardware can connect to Blynk Cloud (open-source server) over the Internet using hardware connectivity on board, or with the use of various shields (Ethernet, WiFi, GSM, LTE, etc). Blynk Cloud is available for every user of Blynk <strong>for free</strong>.</p>\n</li>\n</ul>\n<h2>Installation of Blynk Python Library</h2>\n<h4>Installation via python pip</h4>\n<ul>\n<li>\n<p>Check python availability in your system.</p>\n<pre>python --version\n</pre>\n<p>To exclude compatibility issue preferable versions are Python 2.7.9 (or greater) or Python 3.4 (or greater)\nIf python not present you can download and install it from <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">here</a>.</p>\n<p><strong>NOTE:</strong> To run python in \"sandbox\" you can try <strong>virtualenv</strong> module. Check <a href=\"https://virtualenv.pypa.io/en/latest/installation/\" rel=\"nofollow\">this document</a> how to do it.</p>\n</li>\n<li>\n<p>If you\u2019re using preferable versions of python mentioned above, then <strong>pip</strong> comes installed with Python by default.\nCheck pip availability:</p>\n<pre>pip --version\n</pre>\n</li>\n<li>\n<p>Install blynk library</p>\n<pre>sudo pip install blynklib\n</pre>\n</li>\n</ul>\n<h4>Manual installation</h4>\n<p>Library can be installed locally from git sources:</p>\n<pre>git clone https://github.com/blynkkk/lib-python.git\ncd lib-python\npip install --user -e .\n\n# sudo pip install -e .  # if installation needed not for current but for all users\n</pre>\n<h4>Testing</h4>\n<p>You can run unit tests for cPython version of library (blynklib.py) using the command:</p>\n<pre><code>python setup.py test\n</code></pre>\n<p><strong>NOTE</strong> Blynklib version &lt;0.2.6 should use pytest-mock&lt;1.11.2. In version 1.11.2 were added restrictions for context manager usage</p>\n<p><strong>NOTE:</strong> Unit tests for Micropython ENV are not available yet.</p>\n<h4>Micropython installation</h4>\n<p>Some hardware platforms can use <strong><a href=\"https://micropython.org/\" rel=\"nofollow\">Micropython</a></strong> package.\nThis is helpful for preliminary testing and debugging of your code outside of real hardware. Supported platforms\nand related installation docs can be found <a href=\"https://github.com/micropython/micropython/wiki/Getting-Started\" rel=\"nofollow\">here</a>.</p>\n<h2>Features</h2>\n<p>This library supports Python2, Python3 (blynklib.py) , and Micropython (blynklib_mp.py).</p>\n<ul>\n<li>Communication with public or local <a href=\"https://github.com/blynkkk/blynk-server\" rel=\"nofollow\">Blynk Server</a>.</li>\n<li>Exchange any data between your hardware and app</li>\n<li>Tested to work with: Raspberry Pi (any), ESP32, ESP8266</li>\n</ul>\n<h5>List of available operations:</h5>\n<ul>\n<li>Subscribe to connect/disconnect events (ssl connection supported only by cPython lib)</li>\n<li>Subscribe to read/write events of <a href=\"http://help.blynk.cc/getting-started-library-auth-token-code-examples/blynk-basics/what-is-virtual-pins\" rel=\"nofollow\">virtual pins</a></li>\n<li><a href=\"http://help.blynk.cc/getting-started-library-auth-token-code-examples/blynk-basics/what-is-virtual-pins\" rel=\"nofollow\">Virtual Pin</a> write</li>\n<li><a href=\"http://help.blynk.cc/getting-started-library-auth-token-code-examples/blynk-basics/what-is-virtual-pins\" rel=\"nofollow\">Virtual Pin</a> sync</li>\n<li>Send mobile app push notifications</li>\n<li>Send email notifications</li>\n<li>Send twitter notifications</li>\n<li>Change widget GUI parameters in Blynk app based on hardware input</li>\n</ul>\n<h2>Quickstart</h2>\n<ol>\n<li>Install Blynk python library as described above</li>\n<li>Install Blynk App:\n<a href=\"https://play.google.com/store/apps/details?id=cc.blynk\" rel=\"nofollow\"><img height=\"18\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9340baed15817ddfc24bb0ac57eabdace8433aa4/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f676f6f676c65706c61792e737667\" width=\"18\"> Google Play</a> |\n<a href=\"https://itunes.apple.com/us/app/blynk-control-arduino-raspberry/id808760481?ls=1&amp;mt=8\" rel=\"nofollow\"><img height=\"18\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/09ec7641cf83aa16ec6347e3f29421653412b7d9/68747470733a2f2f63646e2e7261776769742e636f6d2f73696d706c652d69636f6e732f73696d706c652d69636f6e732f646576656c6f702f69636f6e732f6170706c652e737667\" width=\"18\"> App Store</a></li>\n</ol>\n<ul>\n<li>Create new account in Blynk app using your email address</li>\n<li>Create a new Project in Blynk app</li>\n<li>You will get Auth Token delivered to your email account.</li>\n<li>Put this Auth Token within your python script to authenticate your device on <a href=\"http://blynk-cloud.com\" rel=\"nofollow\">public</a> or <a href=\"https://github.com/blynkkk/blynk-server\" rel=\"nofollow\">local</a></li>\n</ul>\n<pre><span class=\"n\">BLYNK_AUTH</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;YourAuthToken&gt;'</span> <span class=\"c1\">#insert your Auth Token here</span>\n</pre>\n<h4>Usage example</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">blynklib</span>\n<span class=\"c1\"># import blynklib_mp as blynklib # micropython import</span>\n\n<span class=\"n\">BLYNK_AUTH</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;YourAuthToken&gt;'</span> <span class=\"c1\">#insert your Auth Token here</span>\n<span class=\"c1\"># base lib init</span>\n<span class=\"n\">blynk</span> <span class=\"o\">=</span> <span class=\"n\">blynklib</span><span class=\"o\">.</span><span class=\"n\">Blynk</span><span class=\"p\">(</span><span class=\"n\">BLYNK_AUTH</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># advanced options of lib init</span>\n<span class=\"c1\"># from __future__ import print_function</span>\n<span class=\"c1\"># blynk = blynklib.Blynk(BLYNK_AUTH, server='blynk-cloud.com', port=80, ssl_cert=None,</span>\n<span class=\"c1\">#                        heartbeat=10, rcv_buffer=1024, log=print)</span>\n\n<span class=\"c1\"># Lib init with SSL socket connection</span>\n<span class=\"c1\"># blynk = blynklib.Blynk(BLYNK_AUTH, port=443, ssl_cert='&lt;path to local blynk server certificate&gt;')</span>\n<span class=\"c1\"># current blynk-cloud.com certificate stored in project as </span>\n<span class=\"c1\"># https://github.com/blynkkk/lib-python/blob/master/certificate/blynk-cloud.com.crt</span>\n<span class=\"c1\"># Note! ssl feature supported only by cPython</span>\n\n<span class=\"c1\"># register handler for Virtual Pin V22 reading by Blynk App.</span>\n<span class=\"c1\"># when a widget in Blynk App asks Virtual Pin data from server within given configurable interval (1,2,5,10 sec etc) </span>\n<span class=\"c1\"># server automatically sends notification about read virtual pin event to hardware</span>\n<span class=\"c1\"># this notification captured by current handler </span>\n<span class=\"nd\">@blynk</span><span class=\"o\">.</span><span class=\"n\">handle_event</span><span class=\"p\">(</span><span class=\"s1\">'read V22'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">read_virtual_pin_handler</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># your code goes here</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"c1\"># Example: get sensor value, perform calculations, etc</span>\n    <span class=\"n\">sensor_data</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;YourSensorData&gt;'</span>\n    <span class=\"n\">critilcal_data_value</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;YourThresholdSensorValue&gt;'</span>\n\n    <span class=\"c1\"># send value to Virtual Pin and store it in Blynk Cloud </span>\n    <span class=\"n\">blynk</span><span class=\"o\">.</span><span class=\"n\">virtual_write</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"n\">sensor_data</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># you can define if needed any other pin</span>\n    <span class=\"c1\"># example: blynk.virtual_write(24, sensor_data)</span>\n\n    <span class=\"c1\"># you can perform actions if value reaches a threshold (e.g. some critical value)</span>\n    <span class=\"k\">if</span> <span class=\"n\">sensor_data</span> <span class=\"o\">&gt;=</span> <span class=\"n\">critilcal_data_value</span>\n\n        <span class=\"n\">blynk</span><span class=\"o\">.</span><span class=\"n\">set_property</span><span class=\"p\">(</span><span class=\"n\">pin</span><span class=\"p\">,</span> <span class=\"s1\">'color'</span><span class=\"p\">,</span> <span class=\"s1\">'#FF0000'</span><span class=\"p\">)</span> <span class=\"c1\"># set red color for the widget UI element </span>\n        <span class=\"n\">blynk</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"s1\">'Warning critical value'</span><span class=\"p\">)</span> <span class=\"c1\"># send push notification to Blynk App </span>\n        <span class=\"n\">blynk</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">youremail</span><span class=\"nd\">@email</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"s1\">'Email Subject'</span><span class=\"p\">,</span> <span class=\"s1\">'Email Body'</span><span class=\"p\">)</span> <span class=\"c1\"># send email to specified address</span>\n\n<span class=\"c1\"># main loop that starts program and handles registered events</span>\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">blynk</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Other Examples</h2>\n<p>Examples can be found <strong><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples\" rel=\"nofollow\">here</a></strong> Check them all to get familiar with main Blynk API features.</p>\n<h5>Core operations:</h5>\n<ul>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/01_write_virtual_pin.py\" rel=\"nofollow\">01_write_virtual_pin.py</a>: How to read incoming data from Blynk app to Virtual Pin and use it in your code</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/02_read_virtual_pin.py\" rel=\"nofollow\">02_read_virtual_pin.py</a>: How to update value on Virtual Pin</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/03_connect_disconnect.py\" rel=\"nofollow\">03_connect_disconnect.py</a>: Managing connection with Blynk Cloud</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/04_email.py\" rel=\"nofollow\">04_email.py</a>: How to send send email and push notifications from your hardware</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/05_set_property_notify.py\" rel=\"nofollow\">05_set_property_notify.py</a>: How to change some of widget UI properties like colors, labels, etc</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/06_terminal_widget.py\" rel=\"nofollow\">06_terminal_widget.py</a>: Communication between hardware and app through Terminal widget)</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/07_tweet_and_logging.py\" rel=\"nofollow\">07_tweet_and_logging.py</a>: How to post to Twitter and log events from your hardware</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/08_blynk_timer.py\" rel=\"nofollow\">08_blynk_timer.py</a>: How send data periodically from hardware by using <strong><a href=\"https://github.com/blynkkk/lib-python/blob/master/TIMERS.md\" rel=\"nofollow\">Blynk Timer</a></strong></li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/09_sync_virtual_pin.py\" rel=\"nofollow\">09_sync_virtual_pin.py</a>: How to sync virtual pin states and properties</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/10_rtc_sync.py\" rel=\"nofollow\">10_rtc_sync.py</a>: How to perform RTC sync with blynk server</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/11_ssl_socket.py\" rel=\"nofollow\">11_ssl_socket.py</a>: SSL server connection. Feature supported only by cPython library.</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/12_app_connect_disconnect.py\" rel=\"nofollow\">12_app_connect_disconnect.py</a>: Managing APP connect/disconnect events with Blynk Cloud.</li>\n</ul>\n<h5>Raspberry Pi (any):</h5>\n<p>Read <a href=\"https://github.com/blynkkk/lib-python/tree/master/examples/raspberry\" rel=\"nofollow\">Raspberry Pi guide</a> first.</p>\n<ul>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/raspberry/01_weather_station_pi3b.py\" rel=\"nofollow\">01_weather_station_pi3b.py</a> Connect DHT22; BMP180 sensors and send data to Blynk app</li>\n</ul>\n<h5>ESP32</h5>\n<p>Read <a href=\"https://github.com/blynkkk/lib-python/tree/master/examples/esp32\" rel=\"nofollow\">ESP32 guide</a> first.</p>\n<ul>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/esp32/01_touch_button.py\" rel=\"nofollow\">01_touch_button.py</a> Connect TTP223B touch sensor to ESP32 and react to touch</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/esp32/02_terminal_cli.py\" rel=\"nofollow\">02_terminal_cli.py</a> Communication between ESP32 hardware and app through Terminal widget</li>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/esp32/03_temperature_humidity_dht22.py\" rel=\"nofollow\">03_temperature_humidity_dht22.py</a> Connect DHT22 sensor to ESP32 and send data to Blynk app</li>\n</ul>\n<h5>ESP8266</h5>\n<p>Read <a href=\"https://github.com/blynkkk/lib-python/tree/master/examples/esp8266\" rel=\"nofollow\">ESP8266 guide</a> first.</p>\n<ul>\n<li><a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/esp8266/01_potentiometer.py\" rel=\"nofollow\">01_potentiometer.py</a> Cconnect potentiometer to ESP8266 and send resistance value to the app</li>\n</ul>\n<h3>Memory size limitations</h3>\n<p>For hardware with limited memory size (ex. ESP8266) you can use <em><strong>frozen modules</strong></em> or <em><strong>frozen bytecode</strong></em> approaches\nto load <strong>blynklib</strong> or any other library to hardware.</p>\n<p>Read <a href=\"https://github.com/blynkkk/lib-python/blob/master/examples/esp8266/README.md\" rel=\"nofollow\">this document</a> to get more information.</p>\n<h2>Documentation and other helpful links</h2>\n<p><a href=\"http://docs.blynk.cc/#blynk-firmware\" rel=\"nofollow\">Full Blynk Documentation</a> - a complete guide on Blynk features</p>\n<p><a href=\"http://community.blynk.cc\" rel=\"nofollow\">Community (Forum)</a> - join a 500,000 Blynk community to ask questions and share ideas</p>\n<p><a href=\"http://help.blynk.cc\" rel=\"nofollow\">Help Center</a> - helpful articles on various Blynk aspects</p>\n<p><a href=\"http://examples.blynk.cc\" rel=\"nofollow\">Code Examples Browser</a> - browse examples to explore Blynk possibilities</p>\n<p><a href=\"https://blynk.io\" rel=\"nofollow\">Official Website</a></p>\n<p><strong>Social Media:</strong></p>\n<p><a href=\"https://www.fb.com/blynkapp\" rel=\"nofollow\">Facebook</a> <a href=\"https://twitter.com/blynk_app\" rel=\"nofollow\">Twitter</a> <a href=\"https://www.youtube.com/blynk\" rel=\"nofollow\">Youtube</a></p>\n<p><a href=\"https://www.instagram.com/blynk.iot/\" rel=\"nofollow\">Instagram</a> <a href=\"https://www.linkedin.com/company/b-l-y-n-k/\" rel=\"nofollow\">LinkedIn</a></p>\n<h2>Blynk libraries for other platforms</h2>\n<ul>\n<li><a href=\"https://github.com/blynkkk/blynk-library\" rel=\"nofollow\">C++</a></li>\n<li><a href=\"https://github.com/vshymanskyy/blynk-library-js\" rel=\"nofollow\">Node.js, Espruino, Browsers</a></li>\n<li><a href=\"https://github.com/vshymanskyy/blynk-library-python\" rel=\"nofollow\">Python</a> (by Volodymyr Shymanskyy)</li>\n<li><a href=\"https://github.com/vshymanskyy/blynk-library-spark\" rel=\"nofollow\">Particle</a></li>\n<li><a href=\"https://github.com/vshymanskyy/blynk-library-lua\" rel=\"nofollow\">Lua, OpenWrt, NodeMCU</a></li>\n<li><a href=\"https://github.com/vshymanskyy/blynk-library-openwrt\" rel=\"nofollow\">OpenWrt packages</a></li>\n<li><a href=\"https://developer.mbed.org/users/vshymanskyy/code/Blynk/\" rel=\"nofollow\">MBED</a></li>\n<li><a href=\"https://www.npmjs.com/package/node-red-contrib-blynk-ws\" rel=\"nofollow\">Node-RED</a></li>\n<li><a href=\"https://github.com/juncaofish/NI-LabVIEWInterfaceforBlynk\" rel=\"nofollow\">LabVIEW</a></li>\n<li><a href=\"https://github.com/sverrefroy/BlynkLibrary\" rel=\"nofollow\">C#</a></li>\n</ul>\n<h2>Contributing</h2>\n<p>You are very welcome to contribute: stability bugfixes, new hardware support, or any other improvements. Please.</p>\n<h3>License</h3>\n<p>This project is released under The MIT License (MIT)</p>\n\n          </div>"}, "last_serial": 6677470, "releases": {"0.2.4": [{"comment_text": "", "digests": {"md5": "1e937c73649ea2ddc5f0e04de6d01d30", "sha256": "b487a2204058235ae226d1107aa7beced1b518530d30cf7ccc3259ea10253d27"}, "downloads": -1, "filename": "blynklib-0.2.4-py2-none-any.whl", "has_sig": false, "md5_digest": "1e937c73649ea2ddc5f0e04de6d01d30", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 8954, "upload_time": "2019-03-20T20:55:10", "upload_time_iso_8601": "2019-03-20T20:55:10.074592Z", "url": "https://files.pythonhosted.org/packages/a6/5b/89e6483c3ca6122633e666530e6b4afe304b6cfa628f6aa484eeb0d90e51/blynklib-0.2.4-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a8356ecd365a05e0a3cef198ffbb2701", "sha256": "591978639fa67ef57afeb04730a9c3e4cfe6e0a7ff5e267fc6f377a645348b20"}, "downloads": -1, "filename": "blynklib-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "a8356ecd365a05e0a3cef198ffbb2701", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8953, "upload_time": "2019-03-20T20:49:35", "upload_time_iso_8601": "2019-03-20T20:49:35.047509Z", "url": "https://files.pythonhosted.org/packages/0b/2d/1eea0467849f94d9ff6b695bbe4a1034f61a96706a710ae6d1a574b7d557/blynklib-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf46e4537a926b804c057d21e6da0d56", "sha256": "437a4b117c926e96c1361c04afd41b2efec4370c13c16b5715b1559da071a20c"}, "downloads": -1, "filename": "blynklib-0.2.4.tar.gz", "has_sig": false, "md5_digest": "cf46e4537a926b804c057d21e6da0d56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14650, "upload_time": "2019-03-20T20:49:36", "upload_time_iso_8601": "2019-03-20T20:49:36.464353Z", "url": "https://files.pythonhosted.org/packages/dc/a5/527ccbb9b94bc68d88a8e5a7f8fdb88154335d95edc0693ae34675eda138/blynklib-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "82e1f15c15e155a9676c4035e1976143", "sha256": "b0711cfe3945c65d462695636b8e62475dc9b534bd8ff77e3858fc29e3752abf"}, "downloads": -1, "filename": "blynklib-0.2.5-py2-none-any.whl", "has_sig": false, "md5_digest": "82e1f15c15e155a9676c4035e1976143", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11810, "upload_time": "2019-08-29T19:50:45", "upload_time_iso_8601": "2019-08-29T19:50:45.023966Z", "url": "https://files.pythonhosted.org/packages/10/67/2849e0b59991173122ef94c4c665a51e2821f9a4799107fe5580b106a4dc/blynklib-0.2.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2cbdd9320cf36759c94af9af4895254", "sha256": "9792df679aae4436f085518e63b1fd633eee95ce498961585dece12b2de40c54"}, "downloads": -1, "filename": "blynklib-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "b2cbdd9320cf36759c94af9af4895254", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11811, "upload_time": "2019-08-29T19:50:47", "upload_time_iso_8601": "2019-08-29T19:50:47.122780Z", "url": "https://files.pythonhosted.org/packages/b8/23/cc0ff5f354a799ca99954907ebdedb43f4bf2e6d9d28d6afafbba008685a/blynklib-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2164817052af4c7a6f78cbb7c4f3d082", "sha256": "ea82deeadfccb4b2666fe9b782c846239a7947f77b11cb168119a8e795807f38"}, "downloads": -1, "filename": "blynklib-0.2.5.tar.gz", "has_sig": false, "md5_digest": "2164817052af4c7a6f78cbb7c4f3d082", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18731, "upload_time": "2019-08-29T19:50:50", "upload_time_iso_8601": "2019-08-29T19:50:50.174776Z", "url": "https://files.pythonhosted.org/packages/43/12/1f1a2bdfabcaac27cd0629358d0323e0acdf5430f8a68e68c3f71afe2fb5/blynklib-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "12371c9ac0e9cb4665e7a78233eb8f36", "sha256": "066c5c25e2d43a5319cc3433ba525fd8a08916231f22920f39c1f0f0332db250"}, "downloads": -1, "filename": "blynklib-0.2.6-py2-none-any.whl", "has_sig": false, "md5_digest": "12371c9ac0e9cb4665e7a78233eb8f36", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15795, "upload_time": "2020-02-21T20:19:33", "upload_time_iso_8601": "2020-02-21T20:19:33.660240Z", "url": "https://files.pythonhosted.org/packages/7e/c5/56fbfa30606c59c8027a652a123d6071a1e5a225a33be5ad65f64cac81fd/blynklib-0.2.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f9d0c0542fc13238df06a76c6610593", "sha256": "b077e1f86848d3b5c96dd824407dcd705de58b85fb2737d790f0be85574583be"}, "downloads": -1, "filename": "blynklib-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1f9d0c0542fc13238df06a76c6610593", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15795, "upload_time": "2020-02-21T20:19:36", "upload_time_iso_8601": "2020-02-21T20:19:36.213261Z", "url": "https://files.pythonhosted.org/packages/4f/55/b0128c64d60ebcdfc50a02272defd9c39121c00a955be20e588f8db1f5bf/blynklib-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ffbf0ab2b1d8a2199a2ea66fdd14e9e", "sha256": "cfaeb612c332d1f81ab022bf4b78fc57d9887051da695a8b9df5ffe8eea58cba"}, "downloads": -1, "filename": "blynklib-0.2.6.tar.gz", "has_sig": false, "md5_digest": "5ffbf0ab2b1d8a2199a2ea66fdd14e9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22663, "upload_time": "2020-02-21T20:19:37", "upload_time_iso_8601": "2020-02-21T20:19:37.887956Z", "url": "https://files.pythonhosted.org/packages/60/c2/63944b881e4588aa14f00464c94c53df1d3ea5d5f52dbae04c9d8d5b40d0/blynklib-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12371c9ac0e9cb4665e7a78233eb8f36", "sha256": "066c5c25e2d43a5319cc3433ba525fd8a08916231f22920f39c1f0f0332db250"}, "downloads": -1, "filename": "blynklib-0.2.6-py2-none-any.whl", "has_sig": false, "md5_digest": "12371c9ac0e9cb4665e7a78233eb8f36", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 15795, "upload_time": "2020-02-21T20:19:33", "upload_time_iso_8601": "2020-02-21T20:19:33.660240Z", "url": "https://files.pythonhosted.org/packages/7e/c5/56fbfa30606c59c8027a652a123d6071a1e5a225a33be5ad65f64cac81fd/blynklib-0.2.6-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f9d0c0542fc13238df06a76c6610593", "sha256": "b077e1f86848d3b5c96dd824407dcd705de58b85fb2737d790f0be85574583be"}, "downloads": -1, "filename": "blynklib-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1f9d0c0542fc13238df06a76c6610593", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15795, "upload_time": "2020-02-21T20:19:36", "upload_time_iso_8601": "2020-02-21T20:19:36.213261Z", "url": "https://files.pythonhosted.org/packages/4f/55/b0128c64d60ebcdfc50a02272defd9c39121c00a955be20e588f8db1f5bf/blynklib-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ffbf0ab2b1d8a2199a2ea66fdd14e9e", "sha256": "cfaeb612c332d1f81ab022bf4b78fc57d9887051da695a8b9df5ffe8eea58cba"}, "downloads": -1, "filename": "blynklib-0.2.6.tar.gz", "has_sig": false, "md5_digest": "5ffbf0ab2b1d8a2199a2ea66fdd14e9e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22663, "upload_time": "2020-02-21T20:19:37", "upload_time_iso_8601": "2020-02-21T20:19:37.887956Z", "url": "https://files.pythonhosted.org/packages/60/c2/63944b881e4588aa14f00464c94c53df1d3ea5d5f52dbae04c9d8d5b40d0/blynklib-0.2.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:56 2020"}