{"info": {"author": "Tom Howe", "author_email": "trhowe@ci.uchicago.edu", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "==============\nAgamemnon\n==============\n\nAgamemnon is a thin library built on top of pycassa.  \nIt allows you to use the Cassandra database (<http://cassandra.apache.org>) as a graph database. \nUsing cassandra provides an extremely high level of reliability and scalability that is not available in other\ngraph databases.  Cassandra provides integrated support for both data partitioning as well as replication via configuration.\n\nMuch of the api was inspired by the excellent neo4j.py project (<http://components.neo4j.org/neo4j.py/snapshot/>),\nhowever the support in this package has diverged from that project.\n\nAgamemnon also has integrated RDF support through RDFLib (http://www.rdflib.net/)\n\n==========================\nUsage\n==========================\n\nThe following is an example of how to use Agamemnon in your own code\n\n\n>>> from agamemnon.factory import load_from_settings\n\nFirst, we can decide which kind of data store we are creating.  In this case we're creating an InMemory data store\n\n>>> config = {'backend': 'agamemnon.memory.InMemoryDataStore'}\n>>> graph_db = load_from_settings(config)\n\nIn honor of The Simpsons Movie, we'll create a node called spiderpig\n\n>>> spiderpig = graph_db.create_node('test_type', 'spiderpig', {'sound':'oink'})\n\nNow we will retrieve the spiderpig from the graph and check that the attributes were correct.\n\n>>> spiderpig = graph_db.get_node('test_type', 'spiderpig')\n>>> spiderpig['sound']\n'oink'\n\n\nNow we will create a friend for the spiderpig (who also happens to be his alter ego).  Again, let's check to\nconfirm that the node and it's attributes were created correctly.\n\n>>> harry_plopper = graph_db.create_node('test_type', 'Harry Plopper', {'sound':'plop'})\n>>> harry_plopper = graph_db.get_node('test_type','Harry Plopper')\n>>> harry_plopper['sound']\n'plop'\n\nNodes can have different types as well.  Here we create a node of type simpson, with name Homer.  This node has\ndifferent attributes than the previous nodes.\n\n>>> homer = graph_db.create_node('simpson', 'Homer', {'sound':'Doh', 'job':'Safety Inspector'})\n>>> homer = graph_db.get_node('simpson', 'Homer')\n>>> homer['sound']\n'Doh'\n>>> homer['job']\n'Safety Inspector'\n\nNodes by themselves are not very useful.  Let's create a relationship between spiderpig and Harry Plopper.\n\n>>> rel = spiderpig.friend(harry_plopper, key='spiderpig_harry_plopper_alliance', alter_ego=True, best=False)\n\nThis creates a relationship of type friend.  The key has been specified in this case, although it is not necessary.\nIf no key is supplied a uuid will be generated for the relationship.\n\nEvery node type has a \"reference node\".  This is a metanode for the type and functions as an index for all nodes of a\ngiven type.\n\n>>> reference_node = graph_db.get_reference_node('test_type')\n\nGetting the instances from the test_type reference node should return the Harry Plopper node and the spiderpig node.\n\n>>> sorted([rel.target_node.key for rel in reference_node.instance.outgoing])\n['Harry Plopper', 'spiderpig']\n\nThe spiderpig should only have one friend at this point, and it should be Harry Plopper\n\n>>> friends = [rel for rel in spiderpig.friend]\n\n>>> len(friends)\n1\n\n>>> friends[0].target_node.key\n'Harry Plopper'\n\nNow let's confirm that Harry Plopper is friends with spider pig as well:\n\n>>> 'spiderpig' in harry_plopper.friend\nTrue\n\nAnd, once more, make sure that spider pig is Harry Plopper's only friend:\n\n>>> friends = [rel for rel in harry_plopper.friend]\n\n>>> len(friends)\n1\n\n>>> friends[0].source_node.key\n'spiderpig'\n\nThey should not be best friends.  Let's confirm this:\n\n>>> friends[0]['best']\nFalse\n\nHomer is spiderpig's best friend:\n\n>>> rel = homer.friend(spiderpig, best=True, alter_ego=False, type='love', strength=100)\n\nHere we added additional attributes to the relationship.\n\nNow spiderpig should have 2 friends.\n\n>>> friends = [rel for rel in spiderpig.friend]\n>>> len(friends)\n2\n\nYou can get a list of all of the relationships of a particular type between a node and other nodes with a particular key\n\n>>> homer_spiderpig_love = spiderpig.friend.relationships_with('Homer')\n>>> len(homer_spiderpig_love)\n1\n\n>>> homer_spiderpig_love = spiderpig.friend.relationships_with('Homer')\n>>> print homer_spiderpig_love[0]['strength']\n100\n\n\n\nThanks To\n=============\nThis project is an extension of the globusonline.org project and is being used to power the upcoming version of globusonline.org.  I'd like to thank Ian Foster and Steve Tuecke for leading that project, and all of the members of the cloud services team for participating in this effort, especially: Vijay Anand, Kyle Chard, Martin Feller and Mike Russell for helping with design and testing.  I'd also like to thank Bryce Allen for his help with some of the python learning curve.\n\n\n0.3.1.0\n==============\n\n* Added many tests and fixed bugs with certain operations\n\n* Added RDF support through RDFlib\n\n0.2.1.3\n==============\n\n* fixed bug with in memory column comparisons\n\n0.2.1.2\n==============\n\n* fixing bug with root reference node, adding support for unicode serialization and bumping version num\n\n\n0.2.1.1\n==============\n\n* adding method to get all relationships regardless of type\n\n* removing generated doc files and updating index.rst\n\n* adding doctest to usage documentation and setup.cfg\n\n* updating setup files with requirements\n\n* multiple fixes for issues discovered by globusonline\n\n\n0.2.1.0\n==============\n\n* added support for contains operator (with relationships_with(other_node_key) function) and added type conversion for pr\n\n* merging relationship code from globusonline\n\n\n0.0.1.3\n==============\n\n* Updating datastore.save_node so that it no longer uses batch storage", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/globusonline/agamemnon", "keywords": "cassandra", "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "agamemnon", "package_url": "https://pypi.org/project/agamemnon/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/agamemnon/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/globusonline/agamemnon"}, "release_url": "https://pypi.org/project/agamemnon/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "A graph database built on top of cassandra", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"agamemnon\">\n<h2>Agamemnon</h2>\n<p>Agamemnon is a thin library built on top of pycassa.\nIt allows you to use the Cassandra database (&lt;<a href=\"http://cassandra.apache.org\" rel=\"nofollow\">http://cassandra.apache.org</a>&gt;) as a graph database.\nUsing cassandra provides an extremely high level of reliability and scalability that is not available in other\ngraph databases.  Cassandra provides integrated support for both data partitioning as well as replication via configuration.</p>\n<p>Much of the api was inspired by the excellent neo4j.py project (&lt;<a href=\"http://components.neo4j.org/neo4j.py/snapshot/\" rel=\"nofollow\">http://components.neo4j.org/neo4j.py/snapshot/</a>&gt;),\nhowever the support in this package has diverged from that project.</p>\n<p>Agamemnon also has integrated RDF support through RDFLib (<a href=\"http://www.rdflib.net/\" rel=\"nofollow\">http://www.rdflib.net/</a>)</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The following is an example of how to use Agamemnon in your own code</p>\n<pre>&gt;&gt;&gt; from agamemnon.factory import load_from_settings\n</pre>\n<p>First, we can decide which kind of data store we are creating.  In this case we\u2019re creating an InMemory data store</p>\n<pre>&gt;&gt;&gt; config = {'backend': 'agamemnon.memory.InMemoryDataStore'}\n&gt;&gt;&gt; graph_db = load_from_settings(config)\n</pre>\n<p>In honor of The Simpsons Movie, we\u2019ll create a node called spiderpig</p>\n<pre>&gt;&gt;&gt; spiderpig = graph_db.create_node('test_type', 'spiderpig', {'sound':'oink'})\n</pre>\n<p>Now we will retrieve the spiderpig from the graph and check that the attributes were correct.</p>\n<pre>&gt;&gt;&gt; spiderpig = graph_db.get_node('test_type', 'spiderpig')\n&gt;&gt;&gt; spiderpig['sound']\n'oink'\n</pre>\n<p>Now we will create a friend for the spiderpig (who also happens to be his alter ego).  Again, let\u2019s check to\nconfirm that the node and it\u2019s attributes were created correctly.</p>\n<pre>&gt;&gt;&gt; harry_plopper = graph_db.create_node('test_type', 'Harry Plopper', {'sound':'plop'})\n&gt;&gt;&gt; harry_plopper = graph_db.get_node('test_type','Harry Plopper')\n&gt;&gt;&gt; harry_plopper['sound']\n'plop'\n</pre>\n<p>Nodes can have different types as well.  Here we create a node of type simpson, with name Homer.  This node has\ndifferent attributes than the previous nodes.</p>\n<pre>&gt;&gt;&gt; homer = graph_db.create_node('simpson', 'Homer', {'sound':'Doh', 'job':'Safety Inspector'})\n&gt;&gt;&gt; homer = graph_db.get_node('simpson', 'Homer')\n&gt;&gt;&gt; homer['sound']\n'Doh'\n&gt;&gt;&gt; homer['job']\n'Safety Inspector'\n</pre>\n<p>Nodes by themselves are not very useful.  Let\u2019s create a relationship between spiderpig and Harry Plopper.</p>\n<pre>&gt;&gt;&gt; rel = spiderpig.friend(harry_plopper, key='spiderpig_harry_plopper_alliance', alter_ego=True, best=False)\n</pre>\n<p>This creates a relationship of type friend.  The key has been specified in this case, although it is not necessary.\nIf no key is supplied a uuid will be generated for the relationship.</p>\n<p>Every node type has a \u201creference node\u201d.  This is a metanode for the type and functions as an index for all nodes of a\ngiven type.</p>\n<pre>&gt;&gt;&gt; reference_node = graph_db.get_reference_node('test_type')\n</pre>\n<p>Getting the instances from the test_type reference node should return the Harry Plopper node and the spiderpig node.</p>\n<pre>&gt;&gt;&gt; sorted([rel.target_node.key for rel in reference_node.instance.outgoing])\n['Harry Plopper', 'spiderpig']\n</pre>\n<p>The spiderpig should only have one friend at this point, and it should be Harry Plopper</p>\n<pre>&gt;&gt;&gt; friends = [rel for rel in spiderpig.friend]\n</pre>\n<pre>&gt;&gt;&gt; len(friends)\n1\n</pre>\n<pre>&gt;&gt;&gt; friends[0].target_node.key\n'Harry Plopper'\n</pre>\n<p>Now let\u2019s confirm that Harry Plopper is friends with spider pig as well:</p>\n<pre>&gt;&gt;&gt; 'spiderpig' in harry_plopper.friend\nTrue\n</pre>\n<p>And, once more, make sure that spider pig is Harry Plopper\u2019s only friend:</p>\n<pre>&gt;&gt;&gt; friends = [rel for rel in harry_plopper.friend]\n</pre>\n<pre>&gt;&gt;&gt; len(friends)\n1\n</pre>\n<pre>&gt;&gt;&gt; friends[0].source_node.key\n'spiderpig'\n</pre>\n<p>They should not be best friends.  Let\u2019s confirm this:</p>\n<pre>&gt;&gt;&gt; friends[0]['best']\nFalse\n</pre>\n<p>Homer is spiderpig\u2019s best friend:</p>\n<pre>&gt;&gt;&gt; rel = homer.friend(spiderpig, best=True, alter_ego=False, type='love', strength=100)\n</pre>\n<p>Here we added additional attributes to the relationship.</p>\n<p>Now spiderpig should have 2 friends.</p>\n<pre>&gt;&gt;&gt; friends = [rel for rel in spiderpig.friend]\n&gt;&gt;&gt; len(friends)\n2\n</pre>\n<p>You can get a list of all of the relationships of a particular type between a node and other nodes with a particular key</p>\n<pre>&gt;&gt;&gt; homer_spiderpig_love = spiderpig.friend.relationships_with('Homer')\n&gt;&gt;&gt; len(homer_spiderpig_love)\n1\n</pre>\n<pre>&gt;&gt;&gt; homer_spiderpig_love = spiderpig.friend.relationships_with('Homer')\n&gt;&gt;&gt; print homer_spiderpig_love[0]['strength']\n100\n</pre>\n<div id=\"thanks-to\">\n<h3>Thanks To</h3>\n<p>This project is an extension of the globusonline.org project and is being used to power the upcoming version of globusonline.org.  I\u2019d like to thank Ian Foster and Steve Tuecke for leading that project, and all of the members of the cloud services team for participating in this effort, especially: Vijay Anand, Kyle Chard, Martin Feller and Mike Russell for helping with design and testing.  I\u2019d also like to thank Bryce Allen for his help with some of the python learning curve.</p>\n</div>\n<div id=\"id1\">\n<h3>0.3.1.0</h3>\n<ul>\n<li>Added many tests and fixed bugs with certain operations</li>\n<li>Added RDF support through RDFlib</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.1.3</h3>\n<ul>\n<li>fixed bug with in memory column comparisons</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.1.2</h3>\n<ul>\n<li>fixing bug with root reference node, adding support for unicode serialization and bumping version num</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.1.1</h3>\n<ul>\n<li>adding method to get all relationships regardless of type</li>\n<li>removing generated doc files and updating index.rst</li>\n<li>adding doctest to usage documentation and setup.cfg</li>\n<li>updating setup files with requirements</li>\n<li>multiple fixes for issues discovered by globusonline</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.1.0</h3>\n<ul>\n<li>added support for contains operator (with relationships_with(other_node_key) function) and added type conversion for pr</li>\n<li>merging relationship code from globusonline</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.0.1.3</h3>\n<ul>\n<li>Updating datastore.save_node so that it no longer uses batch storage</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 786163, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "0f82a6fa990852602f0bd37a0bd76b46", "sha256": "e701b79c556f3601845431729701f7d7741ec0675f49fbc0f14dbec97653ec5a"}, "downloads": -1, "filename": "agamemnon-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0f82a6fa990852602f0bd37a0bd76b46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9185, "upload_time": "2011-03-10T20:51:54", "upload_time_iso_8601": "2011-03-10T20:51:54.308039Z", "url": "https://files.pythonhosted.org/packages/81/b8/b54eee6a6efff9a805c487a68cf68adb82e41d3dca52ae12f15e3e4ead89/agamemnon-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "99753cb66665174ac5e170018dfefcc1", "sha256": "7b7a6de94990d907ea7cff393d33f555ba682d74ca9cff1606ef2982fc0d5f88"}, "downloads": -1, "filename": "agamemnon-0.1.1.tar.gz", "has_sig": false, "md5_digest": "99753cb66665174ac5e170018dfefcc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9184, "upload_time": "2011-03-10T20:54:21", "upload_time_iso_8601": "2011-03-10T20:54:21.692484Z", "url": "https://files.pythonhosted.org/packages/03/88/ef46addb882a96b10a979df1a339d00b672dc56aee261d8a15b69514c766/agamemnon-0.1.1.tar.gz", "yanked": false}], "0.1.1.1": [{"comment_text": "", "digests": {"md5": "9bdd692c75cd8fd0947566706bde7838", "sha256": "793f744764ef91005114b1db2a1ce28cdbc76fda427ae6cce04932dba315db10"}, "downloads": -1, "filename": "agamemnon-0.1.1.1.tar.gz", "has_sig": false, "md5_digest": "9bdd692c75cd8fd0947566706bde7838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9338, "upload_time": "2011-03-10T20:57:28", "upload_time_iso_8601": "2011-03-10T20:57:28.033228Z", "url": "https://files.pythonhosted.org/packages/15/83/a73a5a3ea2b120ceebca03e0cc0239577d8612efd74060b512e99698cea7/agamemnon-0.1.1.1.tar.gz", "yanked": false}], "0.1.1.2": [{"comment_text": "", "digests": {"md5": "ce8fd288bdd4365384e2ba249211cad7", "sha256": "891312e69c3e752951c2b2cc6cd111c5200f3b0f6eb3f196c744c4d5af6f13b4"}, "downloads": -1, "filename": "agamemnon-0.1.1.2.tar.gz", "has_sig": false, "md5_digest": "ce8fd288bdd4365384e2ba249211cad7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9332, "upload_time": "2011-03-15T21:27:42", "upload_time_iso_8601": "2011-03-15T21:27:42.651469Z", "url": "https://files.pythonhosted.org/packages/38/bf/250fd8d47dcfd812a928ef3942f06b8063bd9910b7db2ee246f1ab7643ef/agamemnon-0.1.1.2.tar.gz", "yanked": false}], "0.1.1.3": [{"comment_text": "", "digests": {"md5": "7e0cb7e1c258a44429d3f0b7e750e890", "sha256": "5221c14d75465dbb906e663b7078af491dd257e79bbdfb3b2f65b16038460966"}, "downloads": -1, "filename": "agamemnon-0.1.1.3.tar.gz", "has_sig": false, "md5_digest": "7e0cb7e1c258a44429d3f0b7e750e890", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9400, "upload_time": "2011-03-21T15:23:22", "upload_time_iso_8601": "2011-03-21T15:23:22.093736Z", "url": "https://files.pythonhosted.org/packages/06/29/d7bb730869d2adace67574126248c55b733ba140e8b15d218640660481dc/agamemnon-0.1.1.3.tar.gz", "yanked": false}], "0.1.1.4": [{"comment_text": "", "digests": {"md5": "c398138e6599f5ae05ad5af3bc162cf6", "sha256": "b5b93bdaca0bad929256dbc3ed7a622e5430378e39b92be4968a94bd0518e26b"}, "downloads": -1, "filename": "agamemnon-0.1.1.4.tar.gz", "has_sig": false, "md5_digest": "c398138e6599f5ae05ad5af3bc162cf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9531, "upload_time": "2011-03-21T17:19:52", "upload_time_iso_8601": "2011-03-21T17:19:52.116018Z", "url": "https://files.pythonhosted.org/packages/fa/3b/cefbf967643f2217c2678f356aa7ff3e96d5518f368fa7c38682899136cf/agamemnon-0.1.1.4.tar.gz", "yanked": false}], "0.1.1.5": [{"comment_text": "built for Darwin-10.6.0", "digests": {"md5": "a93ea5921f267e1f56d96b943f7e430b", "sha256": "232f9920ca89cf0b1a63d05a2ca7bb491c06fcfdf7e493ee40a4be8df2313460"}, "downloads": -1, "filename": "agamemnon-0.1.1.5.macosx-10.6-universal.tar.gz", "has_sig": false, "md5_digest": "a93ea5921f267e1f56d96b943f7e430b", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 20246, "upload_time": "2011-04-15T22:31:00", "upload_time_iso_8601": "2011-04-15T22:31:00.371077Z", "url": "https://files.pythonhosted.org/packages/51/69/3e93306ca4d3c996c3b2b8e52fbc814fc6423bae45a2d4bebdd3482c0e34/agamemnon-0.1.1.5.macosx-10.6-universal.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b20ab91c1f408e735dd2fe764e559c4", "sha256": "30bb95c8f05d9dddd5106957f88424f4c57990709de0ef80f8146d60755aea70"}, "downloads": -1, "filename": "agamemnon-0.1.1.5.tar.gz", "has_sig": false, "md5_digest": "2b20ab91c1f408e735dd2fe764e559c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9530, "upload_time": "2011-03-21T17:26:45", "upload_time_iso_8601": "2011-03-21T17:26:45.079212Z", "url": "https://files.pythonhosted.org/packages/fb/82/468c55329a3e696e4d7043116b04b2cbfb889995c2f938a64d2efe3d7c30/agamemnon-0.1.1.5.tar.gz", "yanked": false}], "0.1.2.0": [{"comment_text": "built for Darwin-10.6.0", "digests": {"md5": "330675a3a7a16effe2a6162d166030ec", "sha256": "65e334b7da7fbd5de3821789b4534499816279c3fb73350eb7a3679d53c3d974"}, "downloads": -1, "filename": "agamemnon-0.1.2.0.macosx-10.6-universal.tar.gz", "has_sig": false, "md5_digest": "330675a3a7a16effe2a6162d166030ec", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 20244, "upload_time": "2011-04-15T22:31:16", "upload_time_iso_8601": "2011-04-15T22:31:16.486455Z", "url": "https://files.pythonhosted.org/packages/30/96/5b949904ece9752ea01606959c22159adcab641de7b74ee76dd01d16dbd0/agamemnon-0.1.2.0.macosx-10.6-universal.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b0467c9399ca48fcac88849f888e25f", "sha256": "38c83c09eb9aa6e1e81ba3693b00af2092a588b565aa89ed0e7c5d5f24f6b04d"}, "downloads": -1, "filename": "agamemnon-0.1.2.0.tar.gz", "has_sig": false, "md5_digest": "7b0467c9399ca48fcac88849f888e25f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9738, "upload_time": "2011-03-23T20:55:56", "upload_time_iso_8601": "2011-03-23T20:55:56.012054Z", "url": "https://files.pythonhosted.org/packages/3a/22/d4119dd43c57a8bba64e17fcb43467e32b0a04ba6b60e8aaeeede3f967e4/agamemnon-0.1.2.0.tar.gz", "yanked": false}], "0.1.3.0": [{"comment_text": "built for Darwin-10.6.0", "digests": {"md5": "f08b37fc1f243e664c43fd9d45633923", "sha256": "1156f8b43102a967e9e3ce4bcb5b77cbcebe416bde4dd6d9459813c8f606a811"}, "downloads": -1, "filename": "agamemnon-0.1.3.0.macosx-10.6-universal.tar.gz", "has_sig": false, "md5_digest": "f08b37fc1f243e664c43fd9d45633923", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 20245, "upload_time": "2011-04-15T22:31:30", "upload_time_iso_8601": "2011-04-15T22:31:30.594585Z", "url": "https://files.pythonhosted.org/packages/13/13/2dff55a87e68b3d5391f8b88c034c08bb9bd29049d244709492d5974a81b/agamemnon-0.1.3.0.macosx-10.6-universal.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "66f20bb6895630d6f565a50a52818949", "sha256": "b711d36be411659bb9cceffe75b47686d7163a2414cdadaee78b9bba56bfb81c"}, "downloads": -1, "filename": "agamemnon-0.1.3.0.tar.gz", "has_sig": false, "md5_digest": "66f20bb6895630d6f565a50a52818949", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9666, "upload_time": "2011-04-15T22:31:29", "upload_time_iso_8601": "2011-04-15T22:31:29.447609Z", "url": "https://files.pythonhosted.org/packages/29/8c/b49f2edf7f68c6c67fa732856f927b374e3960c4a2042b61a8c0cdc44d4f/agamemnon-0.1.3.0.tar.gz", "yanked": false}], "0.1.3.1": [{"comment_text": "", "digests": {"md5": "f7587a341666066a1bb5ae9170e8a097", "sha256": "2e23b6ec125b86987c9bf444535c4384ecf429eba3a35ab974d58c01457c15b4"}, "downloads": -1, "filename": "agamemnon-0.1.3.1.tar.gz", "has_sig": false, "md5_digest": "f7587a341666066a1bb5ae9170e8a097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9662, "upload_time": "2011-04-15T22:34:07", "upload_time_iso_8601": "2011-04-15T22:34:07.677807Z", "url": "https://files.pythonhosted.org/packages/6a/7e/0c5851941f0514bbb570a8138370a1031c5ecb30fc98e8bd04ad6c42a4a7/agamemnon-0.1.3.1.tar.gz", "yanked": false}], "0.1.3.2": [{"comment_text": "built for Darwin-10.6.0", "digests": {"md5": "067e8911c20b32efe899b52259044b11", "sha256": "991353e024bf847ae1127da0e3dd94368a7cbcb46b94262329d8b24611bdadfc"}, "downloads": -1, "filename": "agamemnon-0.1.3.2.macosx-10.6-universal.tar.gz", "has_sig": false, "md5_digest": "067e8911c20b32efe899b52259044b11", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 20388, "upload_time": "2011-04-15T22:37:45", "upload_time_iso_8601": "2011-04-15T22:37:45.770788Z", "url": "https://files.pythonhosted.org/packages/70/21/4ba5faed8939605fafccf7de4908b0af65143a8b3de2278063446f5ccdb2/agamemnon-0.1.3.2.macosx-10.6-universal.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "692f19b2f6b933a6b3a34563022d30a5", "sha256": "3d01f17832f76f447f4220a704c7207474ba1b6e7528fa5a52ba2db3f052c3c8"}, "downloads": -1, "filename": "agamemnon-0.1.3.2.tar.gz", "has_sig": false, "md5_digest": "692f19b2f6b933a6b3a34563022d30a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9684, "upload_time": "2011-04-15T22:37:44", "upload_time_iso_8601": "2011-04-15T22:37:44.602911Z", "url": "https://files.pythonhosted.org/packages/39/b2/42167aabeeab51954fb422584d377cdef31882ac863b5c6e9910931b6820/agamemnon-0.1.3.2.tar.gz", "yanked": false}], "0.1.3.3": [{"comment_text": "", "digests": {"md5": "e8a1068966baa5dee2dc79c80c443327", "sha256": "46de1c0b0efea16af3623c795f466689c5a3aeac4deaef08fb4466c3f0ff3438"}, "downloads": -1, "filename": "agamemnon-0.1.3.3.tar.gz", "has_sig": false, "md5_digest": "e8a1068966baa5dee2dc79c80c443327", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9684, "upload_time": "2011-04-15T22:38:14", "upload_time_iso_8601": "2011-04-15T22:38:14.236688Z", "url": "https://files.pythonhosted.org/packages/20/11/5fb8969f8a1e7e1a8cafa427d3f317e0e13b5a842be7b662b9e6f2f07217/agamemnon-0.1.3.3.tar.gz", "yanked": false}], "0.2.0.2": [{"comment_text": "", "digests": {"md5": "11dbb92c6383ed0a4f7b8dd3966111d1", "sha256": "1d4b440c91db5e5c4c80c7a9730420eaaa12a10b1c635ed55c2bf08ae21a09b1"}, "downloads": -1, "filename": "agamemnon-0.2.0.2.tar.gz", "has_sig": false, "md5_digest": "11dbb92c6383ed0a4f7b8dd3966111d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9700, "upload_time": "2011-04-24T00:12:13", "upload_time_iso_8601": "2011-04-24T00:12:13.020405Z", "url": "https://files.pythonhosted.org/packages/03/6e/b0f272d68e343bc7dfeed2988500c7688a1526d08124318e9a39e69e0091/agamemnon-0.2.0.2.tar.gz", "yanked": false}], "0.2.0.3": [{"comment_text": "", "digests": {"md5": "b6398e4da8e38df2af66f88cff5031fa", "sha256": "e331538b9b20afe3c72aff89b2536b80537193525d897f7e8fae84fc0e0cf80b"}, "downloads": -1, "filename": "agamemnon-0.2.0.3.tar.gz", "has_sig": false, "md5_digest": "b6398e4da8e38df2af66f88cff5031fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9704, "upload_time": "2011-05-06T20:37:48", "upload_time_iso_8601": "2011-05-06T20:37:48.058660Z", "url": "https://files.pythonhosted.org/packages/88/30/e76d8e7f395edb81f3167c96fa5c91c5d6f1df2e11e130dbccbeda004996/agamemnon-0.2.0.3.tar.gz", "yanked": false}], "0.2.1.0": [{"comment_text": "", "digests": {"md5": "e2fcc0529508a62a38b9512ee8dd05ef", "sha256": "ad900982fca0d69ffa983740dafed3702e3648158415cbe600f9990a7553663e"}, "downloads": -1, "filename": "agamemnon-0.2.1.0.tar.gz", "has_sig": false, "md5_digest": "e2fcc0529508a62a38b9512ee8dd05ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11824, "upload_time": "2011-08-02T17:41:58", "upload_time_iso_8601": "2011-08-02T17:41:58.421709Z", "url": "https://files.pythonhosted.org/packages/a7/74/82dd365b276f832312178730c8cd8b6b6402cf38f5933668bcf7d31e3ba2/agamemnon-0.2.1.0.tar.gz", "yanked": false}], "0.2.1.1": [{"comment_text": "", "digests": {"md5": "78ff757fa63be98b071875dd9fa571fe", "sha256": "bfa30759dccd71d7135538647326c801d29b17eb953681a8d3d01dced40ffa8b"}, "downloads": -1, "filename": "agamemnon-0.2.1.1.tar.gz", "has_sig": false, "md5_digest": "78ff757fa63be98b071875dd9fa571fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12663, "upload_time": "2011-08-03T20:07:50", "upload_time_iso_8601": "2011-08-03T20:07:50.543846Z", "url": "https://files.pythonhosted.org/packages/ec/e3/932458c4d9c90c6287e2ae22e729a566282d5344dff9e188d0b2071ca9e3/agamemnon-0.2.1.1.tar.gz", "yanked": false}], "0.2.1.2": [{"comment_text": "", "digests": {"md5": "e40d98ac686ad02763d5ae28ac1928e2", "sha256": "e45cf28612003de6f0832bbc3ed62d7eb73ae1b28fce5006954d2de2c78e8fe8"}, "downloads": -1, "filename": "agamemnon-0.2.1.2.tar.gz", "has_sig": false, "md5_digest": "e40d98ac686ad02763d5ae28ac1928e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12869, "upload_time": "2011-08-04T15:43:16", "upload_time_iso_8601": "2011-08-04T15:43:16.625405Z", "url": "https://files.pythonhosted.org/packages/d1/61/04570e55355d9f960dcba21ddac7c84bcb36dad3b139425c9e16508e5dc8/agamemnon-0.2.1.2.tar.gz", "yanked": false}], "0.2.1.3": [{"comment_text": "", "digests": {"md5": "97a026417bac72645cd669b922b3d386", "sha256": "7deb7c84e9f92051f3f650904125c72bbd0ae670ecef719f33a99897cf96903b"}, "downloads": -1, "filename": "agamemnon-0.2.1.3.tar.gz", "has_sig": false, "md5_digest": "97a026417bac72645cd669b922b3d386", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12931, "upload_time": "2011-08-04T18:27:45", "upload_time_iso_8601": "2011-08-04T18:27:45.444605Z", "url": "https://files.pythonhosted.org/packages/f8/33/30c9a85abf8b21efb7ec8bc04a1d9c384132f95f3b1ae81947b4cc4215f4/agamemnon-0.2.1.3.tar.gz", "yanked": false}], "0.2.1.4": [{"comment_text": "", "digests": {"md5": "3f2eeaab0019df2fe83dbe5f2340837e", "sha256": "9dc7d85f81461cfeec7c91abf792ac84d7689093ceb4186bdf027721aeb43b12"}, "downloads": -1, "filename": "agamemnon-0.2.1.4.tar.gz", "has_sig": false, "md5_digest": "3f2eeaab0019df2fe83dbe5f2340837e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12955, "upload_time": "2011-08-04T22:30:52", "upload_time_iso_8601": "2011-08-04T22:30:52.370462Z", "url": "https://files.pythonhosted.org/packages/b9/6b/b983c335329a2d2e9c8a447a61a5ca9302906419efd8b333c372a0b29daf/agamemnon-0.2.1.4.tar.gz", "yanked": false}], "0.3.0.0": [{"comment_text": "", "digests": {"md5": "6498aa12769ec006112f81327b48fe06", "sha256": "f02f5fdcccfd56d4e1a0cea29d1c3c00245d932bc9fe95fe6dc7065714cfc85d"}, "downloads": -1, "filename": "agamemnon-0.3.0.0.tar.gz", "has_sig": false, "md5_digest": "6498aa12769ec006112f81327b48fe06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18186, "upload_time": "2011-08-08T18:20:47", "upload_time_iso_8601": "2011-08-08T18:20:47.095158Z", "url": "https://files.pythonhosted.org/packages/8c/9e/d12f8571ca0ab9150f4f7a358dd989aa1fa699b04637051bd890e644226f/agamemnon-0.3.0.0.tar.gz", "yanked": false}], "0.3.1.0": [{"comment_text": "", "digests": {"md5": "6a882549329fbdaa5dfbb0a2f7cbf945", "sha256": "280901b20fcd982ffcbad67e8f5a51f4d7ff36cd7bc44f25bfb274d16564da06"}, "downloads": -1, "filename": "agamemnon-0.3.1.0.tar.gz", "has_sig": false, "md5_digest": "6a882549329fbdaa5dfbb0a2f7cbf945", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20728, "upload_time": "2011-08-16T15:18:19", "upload_time_iso_8601": "2011-08-16T15:18:19.469689Z", "url": "https://files.pythonhosted.org/packages/be/44/2d041c71ed6c5bdbda73579128807027998ad19a845138be8269970642bf/agamemnon-0.3.1.0.tar.gz", "yanked": false}], "0.3.1.1": [{"comment_text": "", "digests": {"md5": "0097ad59ca95fccb7e97a17900ed8315", "sha256": "4db042dbe4fdbf447fe4a655d7ba6d3f090c6b1cedd59f8357269bbea0689782"}, "downloads": -1, "filename": "agamemnon-0.3.1.1.tar.gz", "has_sig": false, "md5_digest": "0097ad59ca95fccb7e97a17900ed8315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21345, "upload_time": "2011-08-30T14:20:47", "upload_time_iso_8601": "2011-08-30T14:20:47.572264Z", "url": "https://files.pythonhosted.org/packages/96/e4/a35fa1020f7728ade37ad1cc9aaf075ac0292efc72b4fd797a3007bd5b15/agamemnon-0.3.1.1.tar.gz", "yanked": false}], "0.3.2.0": [{"comment_text": "", "digests": {"md5": "b7fdee89e861b80a454997e073e65e99", "sha256": "ab419eea7ffe7cd7f98a87c6d25ebfa7bd070aa18bbc6d0ddb4089d5fda294ca"}, "downloads": -1, "filename": "agamemnon-0.3.2.0.tar.gz", "has_sig": false, "md5_digest": "b7fdee89e861b80a454997e073e65e99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21331, "upload_time": "2011-11-11T13:45:22", "upload_time_iso_8601": "2011-11-11T13:45:22.756139Z", "url": "https://files.pythonhosted.org/packages/a3/56/2bb6e1616c45e82c6472deddea62ecf3ad1addcecce08d16686e8c2c6608/agamemnon-0.3.2.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "46f93608c6866bb191ecfa78df673445", "sha256": "8892271f111cca0bedb4c8e02cf0aa561de5af6cfff0af4ad0dffbd656ef9013"}, "downloads": -1, "filename": "agamemnon-0.4.0.tar.gz", "has_sig": false, "md5_digest": "46f93608c6866bb191ecfa78df673445", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27988, "upload_time": "2012-04-27T17:03:59", "upload_time_iso_8601": "2012-04-27T17:03:59.929938Z", "url": "https://files.pythonhosted.org/packages/1b/44/73e25e6c92f2ffb5cc0913e687c399f77ba898344a76504f168b242d46d9/agamemnon-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46f93608c6866bb191ecfa78df673445", "sha256": "8892271f111cca0bedb4c8e02cf0aa561de5af6cfff0af4ad0dffbd656ef9013"}, "downloads": -1, "filename": "agamemnon-0.4.0.tar.gz", "has_sig": false, "md5_digest": "46f93608c6866bb191ecfa78df673445", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27988, "upload_time": "2012-04-27T17:03:59", "upload_time_iso_8601": "2012-04-27T17:03:59.929938Z", "url": "https://files.pythonhosted.org/packages/1b/44/73e25e6c92f2ffb5cc0913e687c399f77ba898344a76504f168b242d46d9/agamemnon-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:39 2020"}