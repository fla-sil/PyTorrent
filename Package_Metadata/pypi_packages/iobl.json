{"info": {"author": "Fran\u00e7ois LEGAL", "author_email": "devel@thom.fr.eu.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Python IOBL library\n===================\n\nLibrary and CLI tools for interacting with Legrand In One PLC devices.\nIt uses a Legrand 882 13 device to communicate with PLC devices.\nBased on the RFLink library (http://www.nemcon.nl/blog2/) and on the work \nby Michel Taverna (http://code.google.com/p/boxio/)\n\nRequirements\n------------\n\n- Python 3.4 (or higher)\n\nDescription\n-----------\n\nThis package is created as a library for the Home assistant legrandinone component implementation. A CLI has been created mainly for debugging purposes but may be extended in the future for more real-world application if needed.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n    $ pip install iobl\n\nUsage\n-----\n\n\n.. code-block:: bash\n\n    $ iobl -h\n        Command line interface for iobl library.\n\n        Usage:\n          iobl [-v | -vv] [options]\n          iobl [-v | -vv] [options] <who=> <what=> <legrand_id=> <unit=> [<comm_mode=> <comm_media=>]\n          iobl (-h | --help)\n          iobl --version\n\n        Options:\n          -p --port=<port>   Serial port to connect to [default: /dev/ttyACM0],\n                               or TCP port in TCP mode.\n          --baud=<baud>      Serial baud rate [default: 115200].\n          --host=<host>      TCP mode, connect to host instead of serial port.\n          -m=<handling>      How to handle incoming packets [default: event].\n          -h --help          Show this screen.\n          -v                 Increase verbosity\n          --version          Show version.\n\n    <who=> must be completed with the class of device to control. For the moment, only AUTOMATION (shutter command) and SCENARIO classes have been tested so far.\n    <what=> must be completed with the action requested. For AUTOMATION class, the action is either move_up, move_down or move_stop.\n    <legrand_id=> must be completed with the \"legrand_id\" of the device to control. The legrand_id is usually indicated on the back of the device.\n    <unit=> must be completedunit number in the device to control. Ususally, for an AUTOMATION class device, unit shall be 2.\n    <comm_mode=> may be completed with the communication mode to use : unicast, multicast or broadcast. Defaults to unicast.\n    <comm_media=> may be completed with the communication media to use : PLC, IR, RF. Only PLC has been tested so far. Defaults to PLC.\n\nIntercept and display IOBL packets:\n\n.. code-block:: bash\n\n    $ iobl\n        {'what': 'move_down', 'type': 'command', 'unit': '2', 'mode': 'unicast', 'who': 'automation', 'legrand_id': '123456', 'media': 'plc', 'command': ''}\n        {'what': 'move_up', 'type': 'command', 'unit': '2', 'mode': 'unicast', 'who': 'automation', 'legrand_id': '123456', 'media': 'plc', 'command': ''}\n        {'what': 'move_stop', 'type': 'command', 'unit': '2', 'mode': 'unicast', 'who': 'automation', 'legrand_id': '123456', 'media': 'plc', 'command': ''}\n\nMove up or down a shutter device:\n\n.. code-block:: bash\n\n    $ iobl who=automation what=move_up legrand_id=123456 unit=1\n    $ iobl who=automation what=move_down legrand_id=123456 unit=1\n\nUse of TCP mode instead of serial port:\n\n.. code-block:: bash\n\n    $ iobl --host 1.2.3.4 --port 1234\n\nDebug logging is shown in verbose mode for debugging:\n\n.. code-block:: bash\n\n    $ iobl -vv\n        DEBUG:asyncio:Using selector: EpollSelector\n        DEBUG:iobl.protocol:connected\n        DEBUG:iobl.protocol:received data: *2*2*#1975298##\n        DEBUG:iobl.protocol:got packet: *2*2*#1975298##\n        DEBUG:iobl.protocol:decoded packet: {'who': 'automation', 'what': 'move_up', 'media': None, 'type': 'command', 'unit': '2', 'legrand_id': '220880', 'command': '', 'mode': 'unicast'}\n        DEBUG:iobl.protocol:got packet: {'who': 'automation', 'what': 'move_up', 'media': None, 'type': 'command', 'unit': '2', 'legrand_id': '220880', 'command': '', 'mode': 'unicast'}\n        {'legrand_id': '220880', 'type': 'command', 'media': None, 'command': '', 'mode': 'unicast', 'who': 'automation', 'unit': '2', 'what': 'move_up'}\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/boblegal31/iobl", "keywords": "iobl plc legrand domotica", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "iobl", "package_url": "https://pypi.org/project/iobl/", "platform": "", "project_url": "https://pypi.org/project/iobl/", "project_urls": {"Homepage": "https://github.com/boblegal31/iobl"}, "release_url": "https://pypi.org/project/iobl/0.0.4/", "requires_dist": ["docopt", "pyserial-asyncio", "typing"], "requires_python": "", "summary": "Library and CLI tools for interacting with IOBL PLC gateway.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Library and CLI tools for interacting with Legrand In One PLC devices.\nIt uses a Legrand 882 13 device to communicate with PLC devices.\nBased on the RFLink library (<a href=\"http://www.nemcon.nl/blog2/\" rel=\"nofollow\">http://www.nemcon.nl/blog2/</a>) and on the work\nby Michel Taverna (<a href=\"http://code.google.com/p/boxio/\" rel=\"nofollow\">http://code.google.com/p/boxio/</a>)</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.4 (or higher)</li>\n</ul>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>This package is created as a library for the Home assistant legrandinone component implementation. A CLI has been created mainly for debugging purposes but may be extended in the future for more real-world application if needed.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install iobl\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ iobl -h\n    Command line interface <span class=\"k\">for</span> iobl library.\n\n    Usage:\n      iobl <span class=\"o\">[</span>-v <span class=\"p\">|</span> -vv<span class=\"o\">]</span> <span class=\"o\">[</span>options<span class=\"o\">]</span>\n      iobl <span class=\"o\">[</span>-v <span class=\"p\">|</span> -vv<span class=\"o\">]</span> <span class=\"o\">[</span>options<span class=\"o\">]</span> &lt;<span class=\"nv\">who</span><span class=\"o\">=</span>&gt; &lt;<span class=\"nv\">what</span><span class=\"o\">=</span>&gt; &lt;<span class=\"nv\">legrand_id</span><span class=\"o\">=</span>&gt; &lt;<span class=\"nv\">unit</span><span class=\"o\">=</span>&gt; <span class=\"o\">[</span>&lt;<span class=\"nv\">comm_mode</span><span class=\"o\">=</span>&gt; &lt;<span class=\"nv\">comm_media</span><span class=\"o\">=</span>&gt;<span class=\"o\">]</span>\n      iobl <span class=\"o\">(</span>-h <span class=\"p\">|</span> --help<span class=\"o\">)</span>\n      iobl --version\n\n    Options:\n      -p --port<span class=\"o\">=</span>&lt;port&gt;   Serial port to connect to <span class=\"o\">[</span>default: /dev/ttyACM0<span class=\"o\">]</span>,\n                           or TCP port in TCP mode.\n      --baud<span class=\"o\">=</span>&lt;baud&gt;      Serial baud rate <span class=\"o\">[</span>default: <span class=\"m\">115200</span><span class=\"o\">]</span>.\n      --host<span class=\"o\">=</span>&lt;host&gt;      TCP mode, connect to host instead of serial port.\n      -m<span class=\"o\">=</span>&lt;handling&gt;      How to handle incoming packets <span class=\"o\">[</span>default: event<span class=\"o\">]</span>.\n      -h --help          Show this screen.\n      -v                 Increase verbosity\n      --version          Show version.\n\n&lt;<span class=\"nv\">who</span><span class=\"o\">=</span>&gt; must be completed with the class of device to control. For the moment, only AUTOMATION <span class=\"o\">(</span>shutter <span class=\"nb\">command</span><span class=\"o\">)</span> and SCENARIO classes have been tested so far.\n&lt;<span class=\"nv\">what</span><span class=\"o\">=</span>&gt; must be completed with the action requested. For AUTOMATION class, the action is either move_up, move_down or move_stop.\n&lt;<span class=\"nv\">legrand_id</span><span class=\"o\">=</span>&gt; must be completed with the <span class=\"s2\">\"legrand_id\"</span> of the device to control. The legrand_id is usually indicated on the back of the device.\n&lt;<span class=\"nv\">unit</span><span class=\"o\">=</span>&gt; must be completedunit number in the device to control. Ususally, <span class=\"k\">for</span> an AUTOMATION class device, unit shall be <span class=\"m\">2</span>.\n&lt;<span class=\"nv\">comm_mode</span><span class=\"o\">=</span>&gt; may be completed with the communication mode to use : unicast, multicast or broadcast. Defaults to unicast.\n&lt;<span class=\"nv\">comm_media</span><span class=\"o\">=</span>&gt; may be completed with the communication media to use : PLC, IR, RF. Only PLC has been tested so far. Defaults to PLC.\n</pre>\n<p>Intercept and display IOBL packets:</p>\n<pre>$ iobl\n    <span class=\"o\">{</span><span class=\"s1\">'what'</span>: <span class=\"s1\">'move_down'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'command'</span>, <span class=\"s1\">'unit'</span>: <span class=\"s1\">'2'</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'unicast'</span>, <span class=\"s1\">'who'</span>: <span class=\"s1\">'automation'</span>, <span class=\"s1\">'legrand_id'</span>: <span class=\"s1\">'123456'</span>, <span class=\"s1\">'media'</span>: <span class=\"s1\">'plc'</span>, <span class=\"s1\">'command'</span>: <span class=\"s1\">''</span><span class=\"o\">}</span>\n    <span class=\"o\">{</span><span class=\"s1\">'what'</span>: <span class=\"s1\">'move_up'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'command'</span>, <span class=\"s1\">'unit'</span>: <span class=\"s1\">'2'</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'unicast'</span>, <span class=\"s1\">'who'</span>: <span class=\"s1\">'automation'</span>, <span class=\"s1\">'legrand_id'</span>: <span class=\"s1\">'123456'</span>, <span class=\"s1\">'media'</span>: <span class=\"s1\">'plc'</span>, <span class=\"s1\">'command'</span>: <span class=\"s1\">''</span><span class=\"o\">}</span>\n    <span class=\"o\">{</span><span class=\"s1\">'what'</span>: <span class=\"s1\">'move_stop'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'command'</span>, <span class=\"s1\">'unit'</span>: <span class=\"s1\">'2'</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'unicast'</span>, <span class=\"s1\">'who'</span>: <span class=\"s1\">'automation'</span>, <span class=\"s1\">'legrand_id'</span>: <span class=\"s1\">'123456'</span>, <span class=\"s1\">'media'</span>: <span class=\"s1\">'plc'</span>, <span class=\"s1\">'command'</span>: <span class=\"s1\">''</span><span class=\"o\">}</span>\n</pre>\n<p>Move up or down a shutter device:</p>\n<pre>$ iobl <span class=\"nv\">who</span><span class=\"o\">=</span>automation <span class=\"nv\">what</span><span class=\"o\">=</span>move_up <span class=\"nv\">legrand_id</span><span class=\"o\">=</span><span class=\"m\">123456</span> <span class=\"nv\">unit</span><span class=\"o\">=</span><span class=\"m\">1</span>\n$ iobl <span class=\"nv\">who</span><span class=\"o\">=</span>automation <span class=\"nv\">what</span><span class=\"o\">=</span>move_down <span class=\"nv\">legrand_id</span><span class=\"o\">=</span><span class=\"m\">123456</span> <span class=\"nv\">unit</span><span class=\"o\">=</span><span class=\"m\">1</span>\n</pre>\n<p>Use of TCP mode instead of serial port:</p>\n<pre>$ iobl --host <span class=\"m\">1</span>.2.3.4 --port <span class=\"m\">1234</span>\n</pre>\n<p>Debug logging is shown in verbose mode for debugging:</p>\n<pre>$ iobl -vv\n    DEBUG:asyncio:Using selector: EpollSelector\n    DEBUG:iobl.protocol:connected\n    DEBUG:iobl.protocol:received data: *2*2*#1975298##\n    DEBUG:iobl.protocol:got packet: *2*2*#1975298##\n    DEBUG:iobl.protocol:decoded packet: <span class=\"o\">{</span><span class=\"s1\">'who'</span>: <span class=\"s1\">'automation'</span>, <span class=\"s1\">'what'</span>: <span class=\"s1\">'move_up'</span>, <span class=\"s1\">'media'</span>: None, <span class=\"s1\">'type'</span>: <span class=\"s1\">'command'</span>, <span class=\"s1\">'unit'</span>: <span class=\"s1\">'2'</span>, <span class=\"s1\">'legrand_id'</span>: <span class=\"s1\">'220880'</span>, <span class=\"s1\">'command'</span>: <span class=\"s1\">''</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'unicast'</span><span class=\"o\">}</span>\n    DEBUG:iobl.protocol:got packet: <span class=\"o\">{</span><span class=\"s1\">'who'</span>: <span class=\"s1\">'automation'</span>, <span class=\"s1\">'what'</span>: <span class=\"s1\">'move_up'</span>, <span class=\"s1\">'media'</span>: None, <span class=\"s1\">'type'</span>: <span class=\"s1\">'command'</span>, <span class=\"s1\">'unit'</span>: <span class=\"s1\">'2'</span>, <span class=\"s1\">'legrand_id'</span>: <span class=\"s1\">'220880'</span>, <span class=\"s1\">'command'</span>: <span class=\"s1\">''</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'unicast'</span><span class=\"o\">}</span>\n    <span class=\"o\">{</span><span class=\"s1\">'legrand_id'</span>: <span class=\"s1\">'220880'</span>, <span class=\"s1\">'type'</span>: <span class=\"s1\">'command'</span>, <span class=\"s1\">'media'</span>: None, <span class=\"s1\">'command'</span>: <span class=\"s1\">''</span>, <span class=\"s1\">'mode'</span>: <span class=\"s1\">'unicast'</span>, <span class=\"s1\">'who'</span>: <span class=\"s1\">'automation'</span>, <span class=\"s1\">'unit'</span>: <span class=\"s1\">'2'</span>, <span class=\"s1\">'what'</span>: <span class=\"s1\">'move_up'</span><span class=\"o\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4411066, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "dc5a6cfd2be7dd8f0497590613687edc", "sha256": "1d7778012139b94f20ad88cd29b788a09bef71bf12c6a923ddaf64dc5f7a130b"}, "downloads": -1, "filename": "iobl-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dc5a6cfd2be7dd8f0497590613687edc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11022, "upload_time": "2018-10-19T08:47:42", "upload_time_iso_8601": "2018-10-19T08:47:42.270916Z", "url": "https://files.pythonhosted.org/packages/74/ce/ef0dc45e5e7a11167afe9e4f52c7cf0f88c91d7feb0359fc58601beeedbd/iobl-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c7c3729a74c080aeacb3f02fc7fc0048", "sha256": "665f5d44c3c0bdf70ecb1742f1a99fa4ddfbf3e5f70e670b4b3eef071d2aed3b"}, "downloads": -1, "filename": "iobl-0.0.0.tar.gz", "has_sig": false, "md5_digest": "c7c3729a74c080aeacb3f02fc7fc0048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8577, "upload_time": "2018-10-19T08:47:43", "upload_time_iso_8601": "2018-10-19T08:47:43.904483Z", "url": "https://files.pythonhosted.org/packages/55/a0/d5825cac9557934c022b0324d3105b3ff83022fcc7c53082f4e38df21b30/iobl-0.0.0.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f222155c638840b2b6ad75140f84773c", "sha256": "df45432ce70090f6e1e4c6e1fc403dface352f5fec31c9ae42e46a3dc15ce0a3"}, "downloads": -1, "filename": "iobl-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f222155c638840b2b6ad75140f84773c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11204, "upload_time": "2018-10-19T16:00:49", "upload_time_iso_8601": "2018-10-19T16:00:49.597226Z", "url": "https://files.pythonhosted.org/packages/c7/8d/cbdcf3fddc929a3f5ebb7d2bad13f6a4a0f48f9e8947ef6a0dc7330a0aaf/iobl-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf1b99f328f8bf211810c5ed77877455", "sha256": "429b7b40a86d0c3e71dbd6902cc8f3840123c0f6dcd802ce406e613023bd5208"}, "downloads": -1, "filename": "iobl-0.0.2.tar.gz", "has_sig": false, "md5_digest": "cf1b99f328f8bf211810c5ed77877455", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8851, "upload_time": "2018-10-19T16:00:51", "upload_time_iso_8601": "2018-10-19T16:00:51.004274Z", "url": "https://files.pythonhosted.org/packages/38/2d/653921b45b6617116fcadc6212ad09842c7137a7bf68c9a4cd9b83936b20/iobl-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6f167390c2ecdd4849aca292ccf1b866", "sha256": "476725699845d10edeb565dc1cf52c3cc1c7148bbba1932eecca496bbb22ba28"}, "downloads": -1, "filename": "iobl-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "6f167390c2ecdd4849aca292ccf1b866", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11829, "upload_time": "2018-10-24T07:14:35", "upload_time_iso_8601": "2018-10-24T07:14:35.124791Z", "url": "https://files.pythonhosted.org/packages/d5/85/3c84dc87e5d4801b29cd890516dd543d6a837170524564bd2bb9152c78fa/iobl-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9a541133e61effc89307b08daa08689", "sha256": "3375e456aab756eed6be3530565d2d74fa2085b643144af8aba71afb74eb8645"}, "downloads": -1, "filename": "iobl-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a9a541133e61effc89307b08daa08689", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10296, "upload_time": "2018-10-24T07:14:36", "upload_time_iso_8601": "2018-10-24T07:14:36.918782Z", "url": "https://files.pythonhosted.org/packages/c5/66/99c244d1252b9c5b019bb9c817964d823a367d30f5a7d82c8dd7214b7f39/iobl-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0ec518302f6c0b2ff3710bde0d6c28c7", "sha256": "32c81b030e610a5eb2dc3e25baa5df64f029d8b5eb23ee1571d0c19874122147"}, "downloads": -1, "filename": "iobl-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0ec518302f6c0b2ff3710bde0d6c28c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11829, "upload_time": "2018-10-24T13:20:03", "upload_time_iso_8601": "2018-10-24T13:20:03.140378Z", "url": "https://files.pythonhosted.org/packages/00/08/2132c6619c910f0eb42dbf98ea827e8b7f67a8997ff2c456ca69b2493c44/iobl-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18c859fef39abd6bd2a68d82424db4de", "sha256": "01d0446f857ece0b3f6d6109ca4bf891a3c252a3a1cc52c1a2dd88e660e01b69"}, "downloads": -1, "filename": "iobl-0.0.4.tar.gz", "has_sig": false, "md5_digest": "18c859fef39abd6bd2a68d82424db4de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10297, "upload_time": "2018-10-24T13:20:04", "upload_time_iso_8601": "2018-10-24T13:20:04.716848Z", "url": "https://files.pythonhosted.org/packages/d3/a0/2fef914013f92d4f60620865404e16bb05d8cdcf0521c2e522285bec77d4/iobl-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ec518302f6c0b2ff3710bde0d6c28c7", "sha256": "32c81b030e610a5eb2dc3e25baa5df64f029d8b5eb23ee1571d0c19874122147"}, "downloads": -1, "filename": "iobl-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0ec518302f6c0b2ff3710bde0d6c28c7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11829, "upload_time": "2018-10-24T13:20:03", "upload_time_iso_8601": "2018-10-24T13:20:03.140378Z", "url": "https://files.pythonhosted.org/packages/00/08/2132c6619c910f0eb42dbf98ea827e8b7f67a8997ff2c456ca69b2493c44/iobl-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "18c859fef39abd6bd2a68d82424db4de", "sha256": "01d0446f857ece0b3f6d6109ca4bf891a3c252a3a1cc52c1a2dd88e660e01b69"}, "downloads": -1, "filename": "iobl-0.0.4.tar.gz", "has_sig": false, "md5_digest": "18c859fef39abd6bd2a68d82424db4de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10297, "upload_time": "2018-10-24T13:20:04", "upload_time_iso_8601": "2018-10-24T13:20:04.716848Z", "url": "https://files.pythonhosted.org/packages/d3/a0/2fef914013f92d4f60620865404e16bb05d8cdcf0521c2e522285bec77d4/iobl-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:03 2020"}