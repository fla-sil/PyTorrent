{"info": {"author": "Amane Katagiri", "author_email": "amane@ama.ne.jp", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "# M1-8 writer\n\n## Target Device\n\nThis script can write to LED name badge which ...\n\n* has 12x48 LED matrix display (untested on 11x44).\n* shows \"M1-8\" at startup.\n* can be written by \"LED Display\" and \"Mini LED Display\".\n\nLED Display: ![LED Display](https://raw.githubusercontent.com/amane-katagiri/m1-8-writer/master/static/led-display.png)\n\nMini LED Display: ![Mini LED Display](https://raw.githubusercontent.com/amane-katagiri/m1-8-writer/master/static/mini-led-display.png)\n\n## Data Structure\n\n### Header\n\n```python\n[\n    0x41, 0x68, 0x65, 0x6c, 0x6c, 0x6f,  # magic number: Ahello\n    0x00,  # brightness: the brightest 0x00 --- 0x01 --- 0x02 --- 0x03 the dimmest\n    0x00,  # NOP\n    # slot 1-8 have their own display modes\n    # 0b10000000: show border\n    # 0b01110000: speed\n    # 0b00001000: blink\n    # 0b00000111: motion (left/right/up/down/freeze/animation/snow/curtain)\n    0b00110000,  # mode of slot 1\n    0b00110110,  # mode of slot 2\n    0b00110111,  # mode of slot 3\n    0b00110000,  # mode of slot 4\n    0b00110000,  # mode of slot 5\n    0b00110100,  # mode of slot 6\n    0b00110110,  # mode of slot 7\n    0b00110111,  # mode of slot 8\n    0x00,  # NOP\n    # number of columns (8 pixels/column) and offset of slot 1-8\n    0x00, 0, 0x00, 1,  # columns and offset of slot 1 bitmap\n    0x00, 1, 0x00, 2,  # columns and offset of slot 2 bitmap\n    0x00, 3, 0x00, 3,  # columns and offset of slot 3 bitmap\n    0x00, 6, 0x00, 4,  # columns and offset of slot 4 bitmap\n    0x00, 10, 0x00, 5,  # columns and offset of slot 5 bitmap\n    0x00, 15, 0x00, 6,  # columns and offset of slot 6 bitmap\n    0x00, 21, 0x00, 7,  # columns and offset of slot 7 bitmap\n    0x00, 28, 0x00, 8,  # columns and offset of slot 8 bitmap\n    # laser mode of slot 1-8\n    # 0b00000001: laser on slot 1\n    # 0b00000010: laser on slot 2\n    # ...\n    # 0b10000000: laser on slot 8\n    # motion of laser mode slot must be 000 (otherwise stop on the slot)\n    0b00001000,\n    0x00, 0x00, 0x00, 0x00,  # NOP\n]\n```\n\n### Body\n\nBitmap data are splitted line by line from the top and each line is splitted every 8 pixels from the left. 8-pixel data is represented as 1-byte packet. The left pixel is the high-order bit.\n\n```python\n# a 32px (=8*4) wide bitmap\n[\n    0b10101010, packet_002, packet_003, packet_004,  # line 1\n    packet_005, packet_006, packet_007, packet_008,  # line 2\n    packet_009, packet_010, packet_011, packet_012,  # line 2\n    #         ... line by line ...\n    0b10001000, 0b11001100, 0b11110000, 0b10110111\n]\n```\n\nThe first packet of data `0b10101010` represents `* * * * ` in top left corner and the last packet of data `0b10110111` represents `* ** ***` in bottom right corner (`*` is lit pixel).\n\nEach bitmap data is written in parallel line by line from the top.\n\n`bitmap_003_line_002` represents the 2nd line data of the 3rd bitmap.\n\n```python\n# 4 bitmaps\n[\n    bitmap_01_line_01, bitmap_02_line_01, bitmap_03_line_01, bitmap_04_line_01,\n    bitmap_01_line_02, bitmap_02_line_02, bitmap_03_line_02, bitmap_04_line_02,\n    bitmap_01_line_03, bitmap_02_line_03, bitmap_03_line_03, bitmap_04_line_03,\n    #                          ... line by line ...\n    bitmap_01_line_nn, bitmap_02_line_nn, bitmap_03_line_nn, bitmap_04_line_nn,\n]\n```\n\n**NOTE**: You need to insert 32 bytes of null after the 16 byte of body.\n\n## Feature\n\n* Brightness: 1, 2, 3, 4 (for all bitmap)\n* Write up to 8 bitmaps\n    * Motion: left, right, up, down, freeze, animation, snow, curtain, laser\n    * Speed: 1, 2, 3, 4, 5, 6, 7, 8\n    * Option: show border, blink\n\n## Requirement\n\n* [pyserial](https://pypi.org/project/pyserial/) 3.4\n* [Pillow](https://pypi.org/project/Pillow/) 7.0.0\n\n## Usage\n\nWrite 1 bitmap to slot 1:\n\n```\nm18write image.png\n```\n\n... and show bitmap brightest:\n\n```\nm18write --brightness 4 image1.png\n```\n\n... and show bitmap in maximum speed:\n\n```\nm18write --speed1 8 image.png\n```\n\n... and move bitmap left to right:\n\n```\nm18write --motion1 right image.png\n```\n\nWrite 4 bitmaps to slot 1, 2, 3 and 4:\n\n```\nm18write image1.png image2.png image3.png image4.png\n```\n\nWrite 2 bitmaps to slot 1 and 2, blink bitmap 1 and show border bitmap 2:\n\n```\nm18write --blink1 --border2 image1.png image2.png\n```\n\nShow help:\n\n```\nm18write -h\n```\n\n## Install\n\n```\npip install m1-8-writer\n```\n\n## Licence\n\n[MIT](https://github.com/tcnksm/tool/blob/master/LICENCE)\n\n## Author\n\n[amane-katagiri](https://github.com/amane-katagiri)\n\n## Related References\n\n* [http://www.daveakerman.com/?p=1440](http://www.daveakerman.com/?p=1440)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amane-katagiri/m1-8-writer", "keywords": "led,badge,usb,serial,m1-8", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "m1-8-writer", "package_url": "https://pypi.org/project/m1-8-writer/", "platform": "", "project_url": "https://pypi.org/project/m1-8-writer/", "project_urls": {"Homepage": "https://github.com/amane-katagiri/m1-8-writer"}, "release_url": "https://pypi.org/project/m1-8-writer/0.9.0/", "requires_dist": null, "requires_python": "", "summary": "LED name badge writer.", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>M1-8 writer</h1>\n<h2>Target Device</h2>\n<p>This script can write to LED name badge which ...</p>\n<ul>\n<li>has 12x48 LED matrix display (untested on 11x44).</li>\n<li>shows \"M1-8\" at startup.</li>\n<li>can be written by \"LED Display\" and \"Mini LED Display\".</li>\n</ul>\n<p>LED Display: <img alt=\"LED Display\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f63b1a387a8251b333c0baebeb8d4a78aac0d8fe/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616d616e652d6b617461676972692f6d312d382d7772697465722f6d61737465722f7374617469632f6c65642d646973706c61792e706e67\"></p>\n<p>Mini LED Display: <img alt=\"Mini LED Display\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93328380d88233dfa34fc4bf48a78d83dd3ea34b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f616d616e652d6b617461676972692f6d312d382d7772697465722f6d61737465722f7374617469632f6d696e692d6c65642d646973706c61792e706e67\"></p>\n<h2>Data Structure</h2>\n<h3>Header</h3>\n<pre><span class=\"p\">[</span>\n    <span class=\"mh\">0x41</span><span class=\"p\">,</span> <span class=\"mh\">0x68</span><span class=\"p\">,</span> <span class=\"mh\">0x65</span><span class=\"p\">,</span> <span class=\"mh\">0x6c</span><span class=\"p\">,</span> <span class=\"mh\">0x6c</span><span class=\"p\">,</span> <span class=\"mh\">0x6f</span><span class=\"p\">,</span>  <span class=\"c1\"># magic number: Ahello</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span>  <span class=\"c1\"># brightness: the brightest 0x00 --- 0x01 --- 0x02 --- 0x03 the dimmest</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span>  <span class=\"c1\"># NOP</span>\n    <span class=\"c1\"># slot 1-8 have their own display modes</span>\n    <span class=\"c1\"># 0b10000000: show border</span>\n    <span class=\"c1\"># 0b01110000: speed</span>\n    <span class=\"c1\"># 0b00001000: blink</span>\n    <span class=\"c1\"># 0b00000111: motion (left/right/up/down/freeze/animation/snow/curtain)</span>\n    <span class=\"mb\">0b00110000</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 1</span>\n    <span class=\"mb\">0b00110110</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 2</span>\n    <span class=\"mb\">0b00110111</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 3</span>\n    <span class=\"mb\">0b00110000</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 4</span>\n    <span class=\"mb\">0b00110000</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 5</span>\n    <span class=\"mb\">0b00110100</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 6</span>\n    <span class=\"mb\">0b00110110</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 7</span>\n    <span class=\"mb\">0b00110111</span><span class=\"p\">,</span>  <span class=\"c1\"># mode of slot 8</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span>  <span class=\"c1\"># NOP</span>\n    <span class=\"c1\"># number of columns (8 pixels/column) and offset of slot 1-8</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 1 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 2 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 3 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 4 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 5 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 6 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 7 bitmap</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">28</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span>  <span class=\"c1\"># columns and offset of slot 8 bitmap</span>\n    <span class=\"c1\"># laser mode of slot 1-8</span>\n    <span class=\"c1\"># 0b00000001: laser on slot 1</span>\n    <span class=\"c1\"># 0b00000010: laser on slot 2</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"c1\"># 0b10000000: laser on slot 8</span>\n    <span class=\"c1\"># motion of laser mode slot must be 000 (otherwise stop on the slot)</span>\n    <span class=\"mb\">0b00001000</span><span class=\"p\">,</span>\n    <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span> <span class=\"mh\">0x00</span><span class=\"p\">,</span>  <span class=\"c1\"># NOP</span>\n<span class=\"p\">]</span>\n</pre>\n<h3>Body</h3>\n<p>Bitmap data are splitted line by line from the top and each line is splitted every 8 pixels from the left. 8-pixel data is represented as 1-byte packet. The left pixel is the high-order bit.</p>\n<pre><span class=\"c1\"># a 32px (=8*4) wide bitmap</span>\n<span class=\"p\">[</span>\n    <span class=\"mb\">0b10101010</span><span class=\"p\">,</span> <span class=\"n\">packet_002</span><span class=\"p\">,</span> <span class=\"n\">packet_003</span><span class=\"p\">,</span> <span class=\"n\">packet_004</span><span class=\"p\">,</span>  <span class=\"c1\"># line 1</span>\n    <span class=\"n\">packet_005</span><span class=\"p\">,</span> <span class=\"n\">packet_006</span><span class=\"p\">,</span> <span class=\"n\">packet_007</span><span class=\"p\">,</span> <span class=\"n\">packet_008</span><span class=\"p\">,</span>  <span class=\"c1\"># line 2</span>\n    <span class=\"n\">packet_009</span><span class=\"p\">,</span> <span class=\"n\">packet_010</span><span class=\"p\">,</span> <span class=\"n\">packet_011</span><span class=\"p\">,</span> <span class=\"n\">packet_012</span><span class=\"p\">,</span>  <span class=\"c1\"># line 2</span>\n    <span class=\"c1\">#         ... line by line ...</span>\n    <span class=\"mb\">0b10001000</span><span class=\"p\">,</span> <span class=\"mb\">0b11001100</span><span class=\"p\">,</span> <span class=\"mb\">0b11110000</span><span class=\"p\">,</span> <span class=\"mb\">0b10110111</span>\n<span class=\"p\">]</span>\n</pre>\n<p>The first packet of data <code>0b10101010</code> represents <code>* * * *</code> in top left corner and the last packet of data <code>0b10110111</code> represents <code>* ** ***</code> in bottom right corner (<code>*</code> is lit pixel).</p>\n<p>Each bitmap data is written in parallel line by line from the top.</p>\n<p><code>bitmap_003_line_002</code> represents the 2nd line data of the 3rd bitmap.</p>\n<pre><span class=\"c1\"># 4 bitmaps</span>\n<span class=\"p\">[</span>\n    <span class=\"n\">bitmap_01_line_01</span><span class=\"p\">,</span> <span class=\"n\">bitmap_02_line_01</span><span class=\"p\">,</span> <span class=\"n\">bitmap_03_line_01</span><span class=\"p\">,</span> <span class=\"n\">bitmap_04_line_01</span><span class=\"p\">,</span>\n    <span class=\"n\">bitmap_01_line_02</span><span class=\"p\">,</span> <span class=\"n\">bitmap_02_line_02</span><span class=\"p\">,</span> <span class=\"n\">bitmap_03_line_02</span><span class=\"p\">,</span> <span class=\"n\">bitmap_04_line_02</span><span class=\"p\">,</span>\n    <span class=\"n\">bitmap_01_line_03</span><span class=\"p\">,</span> <span class=\"n\">bitmap_02_line_03</span><span class=\"p\">,</span> <span class=\"n\">bitmap_03_line_03</span><span class=\"p\">,</span> <span class=\"n\">bitmap_04_line_03</span><span class=\"p\">,</span>\n    <span class=\"c1\">#                          ... line by line ...</span>\n    <span class=\"n\">bitmap_01_line_nn</span><span class=\"p\">,</span> <span class=\"n\">bitmap_02_line_nn</span><span class=\"p\">,</span> <span class=\"n\">bitmap_03_line_nn</span><span class=\"p\">,</span> <span class=\"n\">bitmap_04_line_nn</span><span class=\"p\">,</span>\n<span class=\"p\">]</span>\n</pre>\n<p><strong>NOTE</strong>: You need to insert 32 bytes of null after the 16 byte of body.</p>\n<h2>Feature</h2>\n<ul>\n<li>Brightness: 1, 2, 3, 4 (for all bitmap)</li>\n<li>Write up to 8 bitmaps\n<ul>\n<li>Motion: left, right, up, down, freeze, animation, snow, curtain, laser</li>\n<li>Speed: 1, 2, 3, 4, 5, 6, 7, 8</li>\n<li>Option: show border, blink</li>\n</ul>\n</li>\n</ul>\n<h2>Requirement</h2>\n<ul>\n<li><a href=\"https://pypi.org/project/pyserial/\" rel=\"nofollow\">pyserial</a> 3.4</li>\n<li><a href=\"https://pypi.org/project/Pillow/\" rel=\"nofollow\">Pillow</a> 7.0.0</li>\n</ul>\n<h2>Usage</h2>\n<p>Write 1 bitmap to slot 1:</p>\n<pre><code>m18write image.png\n</code></pre>\n<p>... and show bitmap brightest:</p>\n<pre><code>m18write --brightness 4 image1.png\n</code></pre>\n<p>... and show bitmap in maximum speed:</p>\n<pre><code>m18write --speed1 8 image.png\n</code></pre>\n<p>... and move bitmap left to right:</p>\n<pre><code>m18write --motion1 right image.png\n</code></pre>\n<p>Write 4 bitmaps to slot 1, 2, 3 and 4:</p>\n<pre><code>m18write image1.png image2.png image3.png image4.png\n</code></pre>\n<p>Write 2 bitmaps to slot 1 and 2, blink bitmap 1 and show border bitmap 2:</p>\n<pre><code>m18write --blink1 --border2 image1.png image2.png\n</code></pre>\n<p>Show help:</p>\n<pre><code>m18write -h\n</code></pre>\n<h2>Install</h2>\n<pre><code>pip install m1-8-writer\n</code></pre>\n<h2>Licence</h2>\n<p><a href=\"https://github.com/tcnksm/tool/blob/master/LICENCE\" rel=\"nofollow\">MIT</a></p>\n<h2>Author</h2>\n<p><a href=\"https://github.com/amane-katagiri\" rel=\"nofollow\">amane-katagiri</a></p>\n<h2>Related References</h2>\n<ul>\n<li><a href=\"http://www.daveakerman.com/?p=1440\" rel=\"nofollow\">http://www.daveakerman.com/?p=1440</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6558640, "releases": {"0.7.1": [{"comment_text": "", "digests": {"md5": "a05cfdb9268f98152f18dbad3469cfca", "sha256": "2b48e3ae10e1dfe426556c5559ba8ef2a34a91602be7b18df04e4c281cbb7fae"}, "downloads": -1, "filename": "m1-8-writer-0.7.1.tar.gz", "has_sig": false, "md5_digest": "a05cfdb9268f98152f18dbad3469cfca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5406, "upload_time": "2020-01-22T18:35:47", "upload_time_iso_8601": "2020-01-22T18:35:47.142367Z", "url": "https://files.pythonhosted.org/packages/58/9c/7511ca1d1cfb497da100d868270f1ce7c7a819cf790abed5a02556ce0800/m1-8-writer-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "dc3e1c0cd2d7df7c20f7dbb886ebef36", "sha256": "21b773677d16ac24cb68a279af1810b73f5fe973a49918c145944afb96ac8e29"}, "downloads": -1, "filename": "m1-8-writer-0.7.2.tar.gz", "has_sig": false, "md5_digest": "dc3e1c0cd2d7df7c20f7dbb886ebef36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5443, "upload_time": "2020-01-22T18:39:42", "upload_time_iso_8601": "2020-01-22T18:39:42.938922Z", "url": "https://files.pythonhosted.org/packages/52/55/77d07dab3a69237601ef3ecec8709cb261157a5e6fc7dd39926ce583aac3/m1-8-writer-0.7.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "803c2b3e5c055e856a65daf06f349c7a", "sha256": "94f6a07be7c9eb8841c715b0a0e0222ee582112600cf0e733331c74e5ed89cfb"}, "downloads": -1, "filename": "m1-8-writer-0.9.0.tar.gz", "has_sig": false, "md5_digest": "803c2b3e5c055e856a65daf06f349c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5958, "upload_time": "2020-02-02T16:06:24", "upload_time_iso_8601": "2020-02-02T16:06:24.683877Z", "url": "https://files.pythonhosted.org/packages/4b/98/e43e35fc63358a8f7fb2dc0c5851113878fdbfa3ff71a66c8a805aa049dc/m1-8-writer-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "803c2b3e5c055e856a65daf06f349c7a", "sha256": "94f6a07be7c9eb8841c715b0a0e0222ee582112600cf0e733331c74e5ed89cfb"}, "downloads": -1, "filename": "m1-8-writer-0.9.0.tar.gz", "has_sig": false, "md5_digest": "803c2b3e5c055e856a65daf06f349c7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5958, "upload_time": "2020-02-02T16:06:24", "upload_time_iso_8601": "2020-02-02T16:06:24.683877Z", "url": "https://files.pythonhosted.org/packages/4b/98/e43e35fc63358a8f7fb2dc0c5851113878fdbfa3ff71a66c8a805aa049dc/m1-8-writer-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:35 2020"}