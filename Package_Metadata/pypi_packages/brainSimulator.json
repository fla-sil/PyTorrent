{"info": {"author": "SIPBA@UGR", "author_email": "sipba@ugr.es", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "brainSimulator\n==============\n\n|DOI|\n\nFunctional brain image synthesis using the KDE or MVN distribution.\nCurrently in beta. Python code. Find the documentation at\nhttp://brainsimulator.readthedocs.io/\n\n``brainSimulator`` is a brain image synthesis procedure intended to\ngenerate a new image set that share characteristics with an original\none. The system focuses on nuclear imaging modalities such as PET or\nSPECT brain images. It analyses the dataset by applying PCA to the\noriginal dataset, and then model the distribution of samples in the\nprojected eigenbrain space using a Probability Density Function (PDF)\nestimator. Once the model has been built, anyone can generate new\ncoordinates on the eigenbrain space belonging to the same class, which\ncan be then projected back to the image space.\n\nUse\n---\n\nWith the new version, the whole interface has been switched to an\nobject. This allows to train the model once and then perform as many\nsample drawings as required.\n\n.. code:: python\n\n    #navigate to the folder where simulator.py is located\n    import brainSimulator as sim\n\n    simulator = sim.BrainSimulator(algorithm='PCA', method='mvnormal')\n    simulator.fit(original_dataset, labels) \n    images, classes = simulator.generateDataset(original_dataset, labels, N=200, classes=[0, 1, 2])\n\nCite\n----\n\nF.J. Martinez-Murcia et al (2017). \u201cFunctional Brain Imaging Synthesis\nBased on Image Decomposition and Kernel Modelling: Application to\nNeurodegenerative Diseases.\u201d Frontiers in neuroinformatics (online).\nDOI: 10.3389/fninf.2017.00065\n\nSafeguards\n----------\n\nAs in the paper, it is best to use MVN modelling, but it is fundamental\nto test the number of components (L) used in the modelling, otherwise it\nwill lead to overfitting. The KDE modelling works better \\`out of the\nbox\u2019, but the results may be more disperse.\n\nLicense\n-------\n\nThis code is released under the license\n`GPL-3.0+ <https://choosealicense.com/licenses/gpl-3.0/>`__.\n\n.. |DOI| image:: https://zenodo.org/badge/85931767.svg\n   :target: https://zenodo.org/badge/latestdoi/85931767", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/SiPBA/brainSimulator/archive/0.5.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SiPBA/brainSimulator", "keywords": "brain,image,synthesis,PCA,neuroimaging,ICA", "license": "GPL-3.0+", "maintainer": "", "maintainer_email": "", "name": "brainSimulator", "package_url": "https://pypi.org/project/brainSimulator/", "platform": "", "project_url": "https://pypi.org/project/brainSimulator/", "project_urls": {"Download": "https://github.com/SiPBA/brainSimulator/archive/0.5.1.tar.gz", "Homepage": "https://github.com/SiPBA/brainSimulator"}, "release_url": "https://pypi.org/project/brainSimulator/0.5.4/", "requires_dist": null, "requires_python": "", "summary": "Nuclear brain imaging synthesis with python", "version": "0.5.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://zenodo.org/badge/latestdoi/85931767\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dad6f76abf59074ddf68011dfde5eb62343583db/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f38353933313736372e737667\"></a></p>\n<p>Functional brain image synthesis using the KDE or MVN distribution.\nCurrently in beta. Python code. Find the documentation at\n<a href=\"http://brainsimulator.readthedocs.io/\" rel=\"nofollow\">http://brainsimulator.readthedocs.io/</a></p>\n<p><tt>brainSimulator</tt> is a brain image synthesis procedure intended to\ngenerate a new image set that share characteristics with an original\none. The system focuses on nuclear imaging modalities such as PET or\nSPECT brain images. It analyses the dataset by applying PCA to the\noriginal dataset, and then model the distribution of samples in the\nprojected eigenbrain space using a Probability Density Function (PDF)\nestimator. Once the model has been built, anyone can generate new\ncoordinates on the eigenbrain space belonging to the same class, which\ncan be then projected back to the image space.</p>\n<div id=\"use\">\n<h2>Use</h2>\n<p>With the new version, the whole interface has been switched to an\nobject. This allows to train the model once and then perform as many\nsample drawings as required.</p>\n<pre><span class=\"c1\">#navigate to the folder where simulator.py is located</span>\n<span class=\"kn\">import</span> <span class=\"nn\">brainSimulator</span> <span class=\"k\">as</span> <span class=\"nn\">sim</span>\n\n<span class=\"n\">simulator</span> <span class=\"o\">=</span> <span class=\"n\">sim</span><span class=\"o\">.</span><span class=\"n\">BrainSimulator</span><span class=\"p\">(</span><span class=\"n\">algorithm</span><span class=\"o\">=</span><span class=\"s1\">'PCA'</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s1\">'mvnormal'</span><span class=\"p\">)</span>\n<span class=\"n\">simulator</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">original_dataset</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">)</span>\n<span class=\"n\">images</span><span class=\"p\">,</span> <span class=\"n\">classes</span> <span class=\"o\">=</span> <span class=\"n\">simulator</span><span class=\"o\">.</span><span class=\"n\">generateDataset</span><span class=\"p\">(</span><span class=\"n\">original_dataset</span><span class=\"p\">,</span> <span class=\"n\">labels</span><span class=\"p\">,</span> <span class=\"n\">N</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">classes</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"cite\">\n<h2>Cite</h2>\n<p>F.J. Martinez-Murcia et al (2017). \u201cFunctional Brain Imaging Synthesis\nBased on Image Decomposition and Kernel Modelling: Application to\nNeurodegenerative Diseases.\u201d Frontiers in neuroinformatics (online).\nDOI: 10.3389/fninf.2017.00065</p>\n</div>\n<div id=\"safeguards\">\n<h2>Safeguards</h2>\n<p>As in the paper, it is best to use MVN modelling, but it is fundamental\nto test the number of components (L) used in the modelling, otherwise it\nwill lead to overfitting. The KDE modelling works better `out of the\nbox\u2019, but the results may be more disperse.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This code is released under the license\n<a href=\"https://choosealicense.com/licenses/gpl-3.0/\" rel=\"nofollow\">GPL-3.0+</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 3341048, "releases": {"0.5.1": [{"comment_text": "", "digests": {"md5": "92dc8579559454c6d89d12fb28201f49", "sha256": "6d02b3598c99177da2853a996f3a70c749986be56b69209dc1ea446ee7b77880"}, "downloads": -1, "filename": "brainSimulator-0.5.1.tar.gz", "has_sig": false, "md5_digest": "92dc8579559454c6d89d12fb28201f49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8177, "upload_time": "2017-11-15T11:58:50", "upload_time_iso_8601": "2017-11-15T11:58:50.281170Z", "url": "https://files.pythonhosted.org/packages/fb/6e/140f3e78f9852ec623490e67fc4045843b43165576b2c57012c0e53d22c7/brainSimulator-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "6c8a73e906ec942c669913f9281eb207", "sha256": "4587985989c063953edbadc437f785ccee41ca4b91684a8ccdefb3f06dd60623"}, "downloads": -1, "filename": "brainSimulator-0.5.2.tar.gz", "has_sig": false, "md5_digest": "6c8a73e906ec942c669913f9281eb207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8365, "upload_time": "2017-11-17T11:06:56", "upload_time_iso_8601": "2017-11-17T11:06:56.417794Z", "url": "https://files.pythonhosted.org/packages/48/78/078b98edaf2df2c0ebee348137cc970af13abbe161eefcb405c8b97fce0a/brainSimulator-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "fcd0fe3b81f2c02ad5e88fcf1e1d71ab", "sha256": "8ce4de2376f191283c149fac1a415374c33fa4e7f93fdf946c5b80bc57b0fff0"}, "downloads": -1, "filename": "brainSimulator-0.5.3.tar.gz", "has_sig": false, "md5_digest": "fcd0fe3b81f2c02ad5e88fcf1e1d71ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8543, "upload_time": "2017-11-17T11:12:02", "upload_time_iso_8601": "2017-11-17T11:12:02.371101Z", "url": "https://files.pythonhosted.org/packages/53/3c/5fd14ec926d24827b916fa375e794f64c48abca52fddc4c0804dfd1e2201/brainSimulator-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "497326afb93b9d0f68e87223660c9d4d", "sha256": "85d184d38233065b3f7dbb06332047533cc35e3136b2408514df014eabded0a5"}, "downloads": -1, "filename": "brainSimulator-0.5.4.tar.gz", "has_sig": false, "md5_digest": "497326afb93b9d0f68e87223660c9d4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8821, "upload_time": "2017-11-17T11:12:55", "upload_time_iso_8601": "2017-11-17T11:12:55.281871Z", "url": "https://files.pythonhosted.org/packages/83/dd/29618bf3b35373d23971b9dac5e3ba14b6068be3082cb3631a677e870cb7/brainSimulator-0.5.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "497326afb93b9d0f68e87223660c9d4d", "sha256": "85d184d38233065b3f7dbb06332047533cc35e3136b2408514df014eabded0a5"}, "downloads": -1, "filename": "brainSimulator-0.5.4.tar.gz", "has_sig": false, "md5_digest": "497326afb93b9d0f68e87223660c9d4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8821, "upload_time": "2017-11-17T11:12:55", "upload_time_iso_8601": "2017-11-17T11:12:55.281871Z", "url": "https://files.pythonhosted.org/packages/83/dd/29618bf3b35373d23971b9dac5e3ba14b6068be3082cb3631a677e870cb7/brainSimulator-0.5.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:24 2020"}