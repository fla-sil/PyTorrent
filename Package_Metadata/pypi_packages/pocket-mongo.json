{"info": {"author": "Bruno Gon\u00e7alves dos Santos", "author_email": "brunogoncalves.santos@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Pocket Mongo\n\nAn easy-to-use and quick setup interface for MongoDB.\n\nPocket Mongo was build to help developers manage collections, and their methods, in a single class.\nAllows full access to `pymongo` API \nwhile offering customizable methods for implementing the business rules associated with the collection.  \n\n## Getting Started\n\n### Installing\n\n```bash\npip install pocket-mongo\n```\n\n### Examples\n\n\nLets say you need a collection to store some cars informations:\n\n\n```python\nfrom pocket_mongo import BaseCollection\n\nclass Cars(BaseCollection):\n    collection_name = 'cars'\n\nCars.collection.insert_many([\n    {\n        'car': 'Ford Torino',\n        'horsepower': 140.,\n        'origin': 'US',\n    },\n    {\n        'car': 'Volvo 145e',\n        'horsepower': 112.,\n        'origin': 'Europe',\n    },\n    {\n        'car': 'Chevrolet Impala',\n        'horsepower': 150.,\n        'origin': 'US',\n    },\n])\n```\n\nNow you can implement methods to query, insert and perform aggregations on that collection:\n\n```python\nclass Cars(BaseCollection):\n    collection_name = 'cars'\n\n    @classmethod\n    def get_us_only(cls) -> List[Dict]:\n        return cls.collection.find({'origin': 'US'})\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gssbruno/pocket-mongo", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pocket-mongo", "package_url": "https://pypi.org/project/pocket-mongo/", "platform": "", "project_url": "https://pypi.org/project/pocket-mongo/", "project_urls": {"Homepage": "https://github.com/gssbruno/pocket-mongo"}, "release_url": "https://pypi.org/project/pocket-mongo/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An easy-to-use and quick setup interface for MongoDB.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pocket Mongo</h1>\n<p>An easy-to-use and quick setup interface for MongoDB.</p>\n<p>Pocket Mongo was build to help developers manage collections, and their methods, in a single class.\nAllows full access to <code>pymongo</code> API\nwhile offering customizable methods for implementing the business rules associated with the collection.</p>\n<h2>Getting Started</h2>\n<h3>Installing</h3>\n<pre>pip install pocket-mongo\n</pre>\n<h3>Examples</h3>\n<p>Lets say you need a collection to store some cars informations:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pocket_mongo</span> <span class=\"kn\">import</span> <span class=\"n\">BaseCollection</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Cars</span><span class=\"p\">(</span><span class=\"n\">BaseCollection</span><span class=\"p\">):</span>\n    <span class=\"n\">collection_name</span> <span class=\"o\">=</span> <span class=\"s1\">'cars'</span>\n\n<span class=\"n\">Cars</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"o\">.</span><span class=\"n\">insert_many</span><span class=\"p\">([</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"s1\">'Ford Torino'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'horsepower'</span><span class=\"p\">:</span> <span class=\"mf\">140.</span><span class=\"p\">,</span>\n        <span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"s1\">'Volvo 145e'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'horsepower'</span><span class=\"p\">:</span> <span class=\"mf\">112.</span><span class=\"p\">,</span>\n        <span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'Europe'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s1\">'car'</span><span class=\"p\">:</span> <span class=\"s1\">'Chevrolet Impala'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'horsepower'</span><span class=\"p\">:</span> <span class=\"mf\">150.</span><span class=\"p\">,</span>\n        <span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">])</span>\n</pre>\n<p>Now you can implement methods to query, insert and perform aggregations on that collection:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Cars</span><span class=\"p\">(</span><span class=\"n\">BaseCollection</span><span class=\"p\">):</span>\n    <span class=\"n\">collection_name</span> <span class=\"o\">=</span> <span class=\"s1\">'cars'</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_us_only</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Dict</span><span class=\"p\">]:</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">collection</span><span class=\"o\">.</span><span class=\"n\">find</span><span class=\"p\">({</span><span class=\"s1\">'origin'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">})</span>\n</pre>\n\n          </div>"}, "last_serial": 6107785, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dd13bbf3e5e5840116740b01aed3ae24", "sha256": "aaa95ed2562276984fd4eb130fccf3252800f7d10186276a44e20c1f2089efbe"}, "downloads": -1, "filename": "pocket_mongo-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dd13bbf3e5e5840116740b01aed3ae24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5464, "upload_time": "2019-11-09T17:01:02", "upload_time_iso_8601": "2019-11-09T17:01:02.076239Z", "url": "https://files.pythonhosted.org/packages/2a/10/021dd5e1e35dd72e627beb4334b4233aabe113aca1d7c76a10beb00b1de0/pocket_mongo-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "28f64fc6b1971d2da3867ae87c65b113", "sha256": "b80ca877e74093e0d372478e45a21a41fab9d435daf77d8870e2cbce02433d83"}, "downloads": -1, "filename": "pocket_mongo-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "28f64fc6b1971d2da3867ae87c65b113", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5466, "upload_time": "2019-11-09T17:02:48", "upload_time_iso_8601": "2019-11-09T17:02:48.120418Z", "url": "https://files.pythonhosted.org/packages/30/b6/14054a3cf82f6f6fa2f0bc66df15810743bb00f0b729d4a47b31e993f19a/pocket_mongo-0.0.2-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28f64fc6b1971d2da3867ae87c65b113", "sha256": "b80ca877e74093e0d372478e45a21a41fab9d435daf77d8870e2cbce02433d83"}, "downloads": -1, "filename": "pocket_mongo-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "28f64fc6b1971d2da3867ae87c65b113", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5466, "upload_time": "2019-11-09T17:02:48", "upload_time_iso_8601": "2019-11-09T17:02:48.120418Z", "url": "https://files.pythonhosted.org/packages/30/b6/14054a3cf82f6f6fa2f0bc66df15810743bb00f0b729d4a47b31e993f19a/pocket_mongo-0.0.2-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:52:10 2020"}