{"info": {"author": "Marco De Benedetto", "author_email": "debe@galliera.it", "bugtrack_url": null, "classifiers": ["Intended Audience :: Healthcare Industry", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Medical Science Apps."], "description": "[logo]: https://raw.github.com/marcodebe/dicomecg_convert/master/images/logo.png\n![ECG Dicom Convert][logo]\n\n# Dicom ECG plot\nA python tool to plot Dicom ECG.\n\nThe DICOM file can also be specified as `studyUID seriesUID objectUID` and \nretrieved from your WADO server.\n\nGithub repository: [here](https://github.com/marcodebe/dicomecg_convert)\n\n**THE PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY OF ANY KIND.**\n\n\n## Online demo\n**[demo site](https://ecg.galliera.it)** \nYou can convert your own DICOM files or use preloaded sample files from different modality models.\n\n## Install\n```bash\npython3 -m venv ecg\n. ecg/bin/activate\npip install dicom-ecg-plot\n```\n\n## Usage of `dicom-ecg-plot` tool\n```bash\ndicom-ecg-plot <inputfile> [--layout=LAYOUT] [--output=FILE|--format=FMT] --minor-grid\ndicom-ecg-plot <stu> <ser> <obj> [--layout=LAYOUT] [--output=FILE|--format=FMT] --minor-grid\ndicom-ecg-plot --help\n```\nExamples:\n```bash\ndicom-ecg-plot anonymous_ecg.dcm -o anonymous_ecg.pdf\ndicom-ecg-plot anonymous_ecg.dcm --layout 6x2 --output anonymous_ecg.png\ndicom-ecg-plot anonymous_ecg.dcm --format svg > anonymous_ecg.svg\n```\n\nThe input can be a (dicom ecg) file or the triplet `studyUID, seriesUID,\nobjectUID`. In the latter case dicom file is downloaded via\n[WADO](http://medical.nema.org/Dicom/2011/11_18pu.pdf).\n\nIf `--output` is given the ouput format is deduced from the extension of the `FILE`.\nIf the output file is not given `--format` must be defined.\nSupported output formats are: eps, jpeg, jpg, pdf, pgf, png, ps, raw, rgba, svg, svgz, tif, tiff.\n\nBy default the 5mm grid is drawn, `--minor-grid` add the minor grid (1mm).\n\nThe signals are filtered using a lowpass (40 Hz)\n[butterworth filter](http://en.wikipedia.org/wiki/Butterworth_filter) \nof order 2.\n\n`LAYOUT` can be one of: 3x4\\_1 (that is 3 rows for 4 columns plus 1 row), 3x4, 6x2, 12x1 (default: 3x4_1).\nNew layouts can be defined adding the corresponding matrix in LAYOUT dictionary in `config.py`.\n\n\n\n## References\n * http://medical.nema.org/Dicom/supps/sup30_lb.pdf\n * http://dicomlookup.com/html/03_03PU.html#LinkTarget_229354\n * http://libir.tmu.edu.tw/bitstream/987654321/21661/1/B09.pdf\n * [Mortara ECG Conformance Statement](http://www.mortara.com/fileadmin/user_upload/global/Products/Healthcare/DICOM/ELI%20Electrocardiographs%20DICOM%20Conformance%20Statement.pdf)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marcodebe/dicomecg_convert", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dicom-ecg-plot", "package_url": "https://pypi.org/project/dicom-ecg-plot/", "platform": "", "project_url": "https://pypi.org/project/dicom-ecg-plot/", "project_urls": {"Homepage": "https://github.com/marcodebe/dicomecg_convert"}, "release_url": "https://pypi.org/project/dicom-ecg-plot/1.1/", "requires_dist": ["docopt", "matplotlib", "numpy", "pydicom", "requests", "scipy"], "requires_python": "", "summary": "Plot Dicom ECG Waveforms", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"ECG Dicom Convert\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/338fa96ae11f182531d69f49fe876caf43b68094/68747470733a2f2f7261772e6769746875622e636f6d2f6d6172636f646562652f6469636f6d6563675f636f6e766572742f6d61737465722f696d616765732f6c6f676f2e706e67\"></p>\n<h1>Dicom ECG plot</h1>\n<p>A python tool to plot Dicom ECG.</p>\n<p>The DICOM file can also be specified as <code>studyUID seriesUID objectUID</code> and\nretrieved from your WADO server.</p>\n<p>Github repository: <a href=\"https://github.com/marcodebe/dicomecg_convert\" rel=\"nofollow\">here</a></p>\n<p><strong>THE PROGRAM IS DISTRIBUTED IN THE HOPE THAT IT WILL BE USEFUL, BUT WITHOUT ANY WARRANTY OF ANY KIND.</strong></p>\n<h2>Online demo</h2>\n<p><strong><a href=\"https://ecg.galliera.it\" rel=\"nofollow\">demo site</a></strong>\nYou can convert your own DICOM files or use preloaded sample files from different modality models.</p>\n<h2>Install</h2>\n<pre>python3 -m venv ecg\n. ecg/bin/activate\npip install dicom-ecg-plot\n</pre>\n<h2>Usage of <code>dicom-ecg-plot</code> tool</h2>\n<pre>dicom-ecg-plot &lt;inputfile&gt; <span class=\"o\">[</span>--layout<span class=\"o\">=</span>LAYOUT<span class=\"o\">]</span> <span class=\"o\">[</span>--output<span class=\"o\">=</span>FILE<span class=\"p\">|</span>--format<span class=\"o\">=</span>FMT<span class=\"o\">]</span> --minor-grid\ndicom-ecg-plot &lt;stu&gt; &lt;ser&gt; &lt;obj&gt; <span class=\"o\">[</span>--layout<span class=\"o\">=</span>LAYOUT<span class=\"o\">]</span> <span class=\"o\">[</span>--output<span class=\"o\">=</span>FILE<span class=\"p\">|</span>--format<span class=\"o\">=</span>FMT<span class=\"o\">]</span> --minor-grid\ndicom-ecg-plot --help\n</pre>\n<p>Examples:</p>\n<pre>dicom-ecg-plot anonymous_ecg.dcm -o anonymous_ecg.pdf\ndicom-ecg-plot anonymous_ecg.dcm --layout 6x2 --output anonymous_ecg.png\ndicom-ecg-plot anonymous_ecg.dcm --format svg &gt; anonymous_ecg.svg\n</pre>\n<p>The input can be a (dicom ecg) file or the triplet <code>studyUID, seriesUID, objectUID</code>. In the latter case dicom file is downloaded via\n<a href=\"http://medical.nema.org/Dicom/2011/11_18pu.pdf\" rel=\"nofollow\">WADO</a>.</p>\n<p>If <code>--output</code> is given the ouput format is deduced from the extension of the <code>FILE</code>.\nIf the output file is not given <code>--format</code> must be defined.\nSupported output formats are: eps, jpeg, jpg, pdf, pgf, png, ps, raw, rgba, svg, svgz, tif, tiff.</p>\n<p>By default the 5mm grid is drawn, <code>--minor-grid</code> add the minor grid (1mm).</p>\n<p>The signals are filtered using a lowpass (40 Hz)\n<a href=\"http://en.wikipedia.org/wiki/Butterworth_filter\" rel=\"nofollow\">butterworth filter</a>\nof order 2.</p>\n<p><code>LAYOUT</code> can be one of: 3x4_1 (that is 3 rows for 4 columns plus 1 row), 3x4, 6x2, 12x1 (default: 3x4_1).\nNew layouts can be defined adding the corresponding matrix in LAYOUT dictionary in <code>config.py</code>.</p>\n<h2>References</h2>\n<ul>\n<li><a href=\"http://medical.nema.org/Dicom/supps/sup30_lb.pdf\" rel=\"nofollow\">http://medical.nema.org/Dicom/supps/sup30_lb.pdf</a></li>\n<li><a href=\"http://dicomlookup.com/html/03_03PU.html#LinkTarget_229354\" rel=\"nofollow\">http://dicomlookup.com/html/03_03PU.html#LinkTarget_229354</a></li>\n<li><a href=\"http://libir.tmu.edu.tw/bitstream/987654321/21661/1/B09.pdf\" rel=\"nofollow\">http://libir.tmu.edu.tw/bitstream/987654321/21661/1/B09.pdf</a></li>\n<li><a href=\"http://www.mortara.com/fileadmin/user_upload/global/Products/Healthcare/DICOM/ELI%20Electrocardiographs%20DICOM%20Conformance%20Statement.pdf\" rel=\"nofollow\">Mortara ECG Conformance Statement</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5792378, "releases": {"1.1": [{"comment_text": "", "digests": {"md5": "8b439b3c92a024833871008e67e202da", "sha256": "cd51417491a14a14e52b9630da47e81f73dca9ef968348c1222377df96c4205a"}, "downloads": -1, "filename": "dicom_ecg_plot-1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "8b439b3c92a024833871008e67e202da", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11304, "upload_time": "2019-09-06T13:50:08", "upload_time_iso_8601": "2019-09-06T13:50:08.344359Z", "url": "https://files.pythonhosted.org/packages/96/de/39c193294831e2f6226f039d7bddbd6d7df947ab0b921a74d4882742a56f/dicom_ecg_plot-1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "343c595a409cbc535098630d7f63ca99", "sha256": "0cb7bf44d19b190da02b87786737bebae9342c19d805f0be1018c014bf55ac0c"}, "downloads": -1, "filename": "dicom_ecg_plot-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "343c595a409cbc535098630d7f63ca99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11304, "upload_time": "2019-09-06T12:21:25", "upload_time_iso_8601": "2019-09-06T12:21:25.452668Z", "url": "https://files.pythonhosted.org/packages/5d/a5/1b6e67d82a13b7424576d94e02fdef6f52455af028eb55df52dda7c149c6/dicom_ecg_plot-1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b439b3c92a024833871008e67e202da", "sha256": "cd51417491a14a14e52b9630da47e81f73dca9ef968348c1222377df96c4205a"}, "downloads": -1, "filename": "dicom_ecg_plot-1.1-py2-none-any.whl", "has_sig": false, "md5_digest": "8b439b3c92a024833871008e67e202da", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11304, "upload_time": "2019-09-06T13:50:08", "upload_time_iso_8601": "2019-09-06T13:50:08.344359Z", "url": "https://files.pythonhosted.org/packages/96/de/39c193294831e2f6226f039d7bddbd6d7df947ab0b921a74d4882742a56f/dicom_ecg_plot-1.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "343c595a409cbc535098630d7f63ca99", "sha256": "0cb7bf44d19b190da02b87786737bebae9342c19d805f0be1018c014bf55ac0c"}, "downloads": -1, "filename": "dicom_ecg_plot-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "343c595a409cbc535098630d7f63ca99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11304, "upload_time": "2019-09-06T12:21:25", "upload_time_iso_8601": "2019-09-06T12:21:25.452668Z", "url": "https://files.pythonhosted.org/packages/5d/a5/1b6e67d82a13b7424576d94e02fdef6f52455af028eb55df52dda7c149c6/dicom_ecg_plot-1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:38:34 2020"}