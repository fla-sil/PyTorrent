{"info": {"author": "Picatureanu Nicusor", "author_email": "nicolaepicatureanu@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: General"], "description": "Weka - Python wrapper for Weka classifiers\n==========================================\n\nOverview\n--------\n\nProvides a convenient wrapper for calling Weka classifiers from Python.\n\nInstallation\n------------\n\nFirst install the Weka and LibSVM Java libraries. On Debian/Ubuntu this is simply:\n\n    sudo apt-get install weka libsvm-java\n\nThen install the Python package with pip:\n\n    sudo pip install pywekaclassifiers\n\nUsage\n-----\n\nTrain and test a Weka classifier by instantiating the Classifier class,\npassing in the name of the classifier you want to use:\n\n    from pywekaclassifiers.classifiers import Classifier\n    c = Classifier(name='weka.classifiers.lazy.IBk', ckargs={'-K':1})\n    c.train('training.arff')\n    predictions = c.predict('query.arff')\n\nAlternatively, you can instantiate the classifier by calling its name directly:\n\n    from pywekaclassifiers.classifiers import IBk\n    c = IBk(K=1)\n    c.train('training.arff')\n    predictions = c.predict('query.arff')\n\nThe instance contains Weka's serialized model, so the classifier can be easily\npickled and unpickled like any normal Python instance:\n\n    c.save('myclassifier.pkl')\n    c = Classifier.load('myclassifier.pkl')\n    predictions = c.predict('query.arff')\n\nDevelopment\n-----------\n\nTests require the Python development headers to be installed, which you can install on Ubuntu with:\n\n    sudo apt-get install python-dev python3-dev python3.4-dev\n\nTo run unittests across multiple Python versions, install:\n\n    sudo apt-get install python3.4-minimal python3.4-dev python3.5-minimal python3.5-dev\n\nTo run all [tests](http://tox.readthedocs.org/en/latest/):\n\n    export TESTNAME=; tox\n\nTo run tests for a specific environment (e.g. Python 2.7):\n\n    export TESTNAME=; tox -e py27\n\nTo run a specific test:\n\n    export TESTNAME=.test_IBk; tox -e py27\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Nicusor97/PyWekaClassifiers.git", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "pywekaclassifiers", "package_url": "https://pypi.org/project/pywekaclassifiers/", "platform": "OS Independent", "project_url": "https://pypi.org/project/pywekaclassifiers/", "project_urls": {"Homepage": "https://github.com/Nicusor97/PyWekaClassifiers.git"}, "release_url": "https://pypi.org/project/pywekaclassifiers/0.0.3/", "requires_dist": ["six (>=1.11.0)", "python-dateutil (>=2.6.1)", "Sphinx (==1.4.2)"], "requires_python": "", "summary": "A Python wrapper for the Weka data mining library.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Weka - Python wrapper for Weka classifiers</h1>\n<h2>Overview</h2>\n<p>Provides a convenient wrapper for calling Weka classifiers from Python.</p>\n<h2>Installation</h2>\n<p>First install the Weka and LibSVM Java libraries. On Debian/Ubuntu this is simply:</p>\n<pre><code>sudo apt-get install weka libsvm-java\n</code></pre>\n<p>Then install the Python package with pip:</p>\n<pre><code>sudo pip install pywekaclassifiers\n</code></pre>\n<h2>Usage</h2>\n<p>Train and test a Weka classifier by instantiating the Classifier class,\npassing in the name of the classifier you want to use:</p>\n<pre><code>from pywekaclassifiers.classifiers import Classifier\nc = Classifier(name='weka.classifiers.lazy.IBk', ckargs={'-K':1})\nc.train('training.arff')\npredictions = c.predict('query.arff')\n</code></pre>\n<p>Alternatively, you can instantiate the classifier by calling its name directly:</p>\n<pre><code>from pywekaclassifiers.classifiers import IBk\nc = IBk(K=1)\nc.train('training.arff')\npredictions = c.predict('query.arff')\n</code></pre>\n<p>The instance contains Weka's serialized model, so the classifier can be easily\npickled and unpickled like any normal Python instance:</p>\n<pre><code>c.save('myclassifier.pkl')\nc = Classifier.load('myclassifier.pkl')\npredictions = c.predict('query.arff')\n</code></pre>\n<h2>Development</h2>\n<p>Tests require the Python development headers to be installed, which you can install on Ubuntu with:</p>\n<pre><code>sudo apt-get install python-dev python3-dev python3.4-dev\n</code></pre>\n<p>To run unittests across multiple Python versions, install:</p>\n<pre><code>sudo apt-get install python3.4-minimal python3.4-dev python3.5-minimal python3.5-dev\n</code></pre>\n<p>To run all <a href=\"http://tox.readthedocs.org/en/latest/\" rel=\"nofollow\">tests</a>:</p>\n<pre><code>export TESTNAME=; tox\n</code></pre>\n<p>To run tests for a specific environment (e.g. Python 2.7):</p>\n<pre><code>export TESTNAME=; tox -e py27\n</code></pre>\n<p>To run a specific test:</p>\n<pre><code>export TESTNAME=.test_IBk; tox -e py27\n</code></pre>\n\n          </div>"}, "last_serial": 4642088, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "e5768a5766dc258ceeeeac61cb24b422", "sha256": "1b2a3f694b32ca6c439dfd5ef73ceb4e955b07575217de14563f0498c98beb8b"}, "downloads": -1, "filename": "pywekaclassifiers-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e5768a5766dc258ceeeeac61cb24b422", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81106, "upload_time": "2018-12-28T19:26:38", "upload_time_iso_8601": "2018-12-28T19:26:38.821146Z", "url": "https://files.pythonhosted.org/packages/fa/26/2e72a9db4033927e295e1f1266139aff731fc10d6df18cb8a1159a15676d/pywekaclassifiers-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c17ce003d3461b26d453b7bbb663cbe4", "sha256": "9149649da1ca8e0f9536af1669d76e16af30150255ae41e9d83e98b05388fce1"}, "downloads": -1, "filename": "pywekaclassifiers-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c17ce003d3461b26d453b7bbb663cbe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 483294, "upload_time": "2018-12-28T19:26:41", "upload_time_iso_8601": "2018-12-28T19:26:41.107060Z", "url": "https://files.pythonhosted.org/packages/0f/a9/892927d3e2b2b33e7652ffc582475cdc9e4940efb371715fc6d1a383228f/pywekaclassifiers-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5768a5766dc258ceeeeac61cb24b422", "sha256": "1b2a3f694b32ca6c439dfd5ef73ceb4e955b07575217de14563f0498c98beb8b"}, "downloads": -1, "filename": "pywekaclassifiers-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e5768a5766dc258ceeeeac61cb24b422", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 81106, "upload_time": "2018-12-28T19:26:38", "upload_time_iso_8601": "2018-12-28T19:26:38.821146Z", "url": "https://files.pythonhosted.org/packages/fa/26/2e72a9db4033927e295e1f1266139aff731fc10d6df18cb8a1159a15676d/pywekaclassifiers-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c17ce003d3461b26d453b7bbb663cbe4", "sha256": "9149649da1ca8e0f9536af1669d76e16af30150255ae41e9d83e98b05388fce1"}, "downloads": -1, "filename": "pywekaclassifiers-0.0.3.tar.gz", "has_sig": false, "md5_digest": "c17ce003d3461b26d453b7bbb663cbe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 483294, "upload_time": "2018-12-28T19:26:41", "upload_time_iso_8601": "2018-12-28T19:26:41.107060Z", "url": "https://files.pythonhosted.org/packages/0f/a9/892927d3e2b2b33e7652ffc582475cdc9e4940efb371715fc6d1a383228f/pywekaclassifiers-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:28 2020"}