{"info": {"author": "Gen Del Raye", "author_email": "gdelraye@hawaii.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering"], "description": "================\r\ncolorobject\r\n================\r\n\r\n---------------\r\nHighlights\r\n---------------\r\n*colorobjects* are *r, g, b, a* tuples that support easy conversion to other\r\ncolor types (e.g. HSV, HLS, hexadecimal, or Matplotlib color names) and convenient \r\ntransformation (e.g. adjust color lightness, hue, saturation, or alpha).\r\nConversions are as convenient as *c = somecolor.hsv*, and transformations as easy as\r\n*somecolor.lightness = c*. And because a *colorobject* is just an extension of\r\nthe list class, they can be passed directly to any Matplotlib plotting command.\r\n\r\n*colorlists* are lists of *colorobjects* that allow you to easily modify or \r\nconstruct colormaps (see module *colormaps*) or cycle through lists of maximally \r\ndistinct colors (see module *discretecolors*). Changing the brightness of a\r\nMatplotlib colormap can be as simple as *cmap_adjust(mycolormap, 'lighten', 0.5)*\r\nand you can even construct a colormap directly from any valid Matplotlib color\r\nname with::\r\n\t\r\n\tcolorlist(color('Aqua', 'name'), color('Gold', 'name')).LinearSegmentedColormap()\r\n\r\nSome examples:\r\n\r\n\t* off-the-shelf Matplotlib colormap ('BuPu')\r\n\t* *cmap_lighten()*\r\n\t* *cmap_darken()*\r\n\t* *cmap_adjust()* used to rotate the hue\r\n\t* *cmap_adjust()* used to change the saturation\r\n\t* constructing an entirely new colormap using the Matplotlib color names 'Aqua'\r\n\t  and 'Gold' as endpoints\r\n\r\n.. image:: https://dl.dropboxusercontent.com/u/35392962/colormap_demonstration.jpg\r\n   :width: 683\r\n   :height: 202\r\n\r\nLooking for a set of easily distinguishable colors? You could rely on one of the\r\nlists contained in *custom_colorsets*. Access to the color sets is through a \r\nstatement such as::\r\n\r\n\tcolorobject.custom_colorsets.cartercarter_6\r\n\r\nThe included color sets are:\r\n\r\n\t* *cartercarter_6*: 6 high contrast colors from Carter and Carter (1982)\r\n\t* *greenarmytage_26*: 26 colors intended for use against a white background from\r\n\t  Green-Armytage (2010)\r\n\t* *tatarize_269*: 269 colors from the author of the `godsnotwheregodsnot \r\n\t  <http://godsnotwheregodsnot.blogspot.ru/2013/11/kmeans-color-quantization-seeding.html>`_ \r\n\t  blog\r\n\r\n.. image:: https://dl.dropboxusercontent.com/u/35392962/discretecolors_demonstration.jpg\r\n   :width: 683\r\n   :height: 100\r\n\r\n\r\n----------------\r\nInstallation\r\n----------------\r\n*colorobject* has only been tested in Python 2.7\r\n\r\nInstall through pip::\r\n\r\n\t$ pip install colorobject\r\n\r\nRequires the following non-standard libraries:\r\n\r\n     * *matplotlib*\r\n\r\nBecause the preferred installation of matplotlib can vary depending on the operating system, \r\nmatplotlib will not automatically be installed as a dependency. Instead, installation will \r\nraise an exception if matplotlib cannot be found in the pythonpath. In this case, please \r\ninstall matplotlib via your preferred method, most of which are explained `by matplotlib \r\n<http://matplotlib.org/users/installing.html>`_\r\n\r\n\r\n-------------------\r\nBonus!\r\n-------------------\r\nAlso included are a set of custom Matplotlib colormaps. These colormaps were designed to\r\nhave every color in the colormap be clearly distinguishable against a white background. Also,\r\nthe ordering of the colors from low to high is intended to be as intuitive as possible and\r\nthere are no sudden peaks in the lightness or hue. Access to the colormaps is through a\r\nstatement such as::\r\n\r\n\tcolorobject.custom_colormaps.sparse2dense\r\n\r\nThe intended use for these colormaps is:\r\n\r\n\t* cool2hot: temperature or heat\r\n\t* deep2shallow: bathymetry maps\r\n\t* dirty2clean: environmental condition or degredation\r\n\t* sparse2dense: density maps\r\n\t* low2high: generic\r\n\r\n.. image:: https://dl.dropboxusercontent.com/u/35392962/custom_colormaps.jpg\r\n   :width: 683\r\n   :height: 168\r\n\r\n\r\n--------------\r\nChangelog\r\n--------------\r\n**0.8.1 (DECEMBER/02/2014)**\r\n\t* Moved custom color sets from module *discretecolors* to named tuple *custom_colorsets* in \r\n\t  module *data*. Access is through a statement such as \r\n\t  *colorobject.custom_colorsets.cartercarter_6*\r\n\t* Added custom color maps with named tuple *custom_colormaps* to module *data*. Access is\r\n\t  through a statement such as *colorobject.custom_colormaps.sparse2dense*\r\n\r\n**0.8.0 (DECEMBER/01/2014)**\r\n\r\n\t* First release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "matplotlib, color, hls, hsv, color name, colormap, custom colormap, rgb hexadecimal", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "colorobject", "package_url": "https://pypi.org/project/colorobject/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/colorobject/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/colorobject/0.8.1/", "requires_dist": null, "requires_python": null, "summary": "Dynamic color objects compatible with Matplotlib", "version": "0.8.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"highlights\">\n<h2>Highlights</h2>\n<p><em>colorobjects</em> are <em>r, g, b, a</em> tuples that support easy conversion to other\ncolor types (e.g. HSV, HLS, hexadecimal, or Matplotlib color names) and convenient\ntransformation (e.g. adjust color lightness, hue, saturation, or alpha).\nConversions are as convenient as <em>c = somecolor.hsv</em>, and transformations as easy as\n<em>somecolor.lightness = c</em>. And because a <em>colorobject</em> is just an extension of\nthe list class, they can be passed directly to any Matplotlib plotting command.</p>\n<p><em>colorlists</em> are lists of <em>colorobjects</em> that allow you to easily modify or\nconstruct colormaps (see module <em>colormaps</em>) or cycle through lists of maximally\ndistinct colors (see module <em>discretecolors</em>). Changing the brightness of a\nMatplotlib colormap can be as simple as <em>cmap_adjust(mycolormap, \u2018lighten\u2019, 0.5)</em>\nand you can even construct a colormap directly from any valid Matplotlib color\nname with:</p>\n<pre>colorlist(color('Aqua', 'name'), color('Gold', 'name')).LinearSegmentedColormap()\n</pre>\n<p>Some examples:</p>\n<blockquote>\n<ul>\n<li>off-the-shelf Matplotlib colormap (\u2018BuPu\u2019)</li>\n<li><em>cmap_lighten()</em></li>\n<li><em>cmap_darken()</em></li>\n<li><em>cmap_adjust()</em> used to rotate the hue</li>\n<li><em>cmap_adjust()</em> used to change the saturation</li>\n<li>constructing an entirely new colormap using the Matplotlib color names \u2018Aqua\u2019\nand \u2018Gold\u2019 as endpoints</li>\n</ul>\n</blockquote>\n<img alt=\"https://dl.dropboxusercontent.com/u/35392962/colormap_demonstration.jpg\" height=\"202\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a46399ce02336413750e57fc1c95f03fb7096d1a/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f752f33353339323936322f636f6c6f726d61705f64656d6f6e7374726174696f6e2e6a7067\" width=\"683\">\n<p>Looking for a set of easily distinguishable colors? You could rely on one of the\nlists contained in <em>custom_colorsets</em>. Access to the color sets is through a\nstatement such as:</p>\n<pre>colorobject.custom_colorsets.cartercarter_6\n</pre>\n<p>The included color sets are:</p>\n<blockquote>\n<ul>\n<li><em>cartercarter_6</em>: 6 high contrast colors from Carter and Carter (1982)</li>\n<li><em>greenarmytage_26</em>: 26 colors intended for use against a white background from\nGreen-Armytage (2010)</li>\n<li><em>tatarize_269</em>: 269 colors from the author of the <a href=\"http://godsnotwheregodsnot.blogspot.ru/2013/11/kmeans-color-quantization-seeding.html\" rel=\"nofollow\">godsnotwheregodsnot</a>\nblog</li>\n</ul>\n</blockquote>\n<img alt=\"https://dl.dropboxusercontent.com/u/35392962/discretecolors_demonstration.jpg\" height=\"100\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed1c38704827e4af629af046ef0e840a384d0fe3/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f752f33353339323936322f6469736372657465636f6c6f72735f64656d6f6e7374726174696f6e2e6a7067\" width=\"683\">\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><em>colorobject</em> has only been tested in Python 2.7</p>\n<p>Install through pip:</p>\n<pre>$ pip install colorobject\n</pre>\n<p>Requires the following non-standard libraries:</p>\n<blockquote>\n<ul>\n<li><em>matplotlib</em></li>\n</ul>\n</blockquote>\n<p>Because the preferred installation of matplotlib can vary depending on the operating system,\nmatplotlib will not automatically be installed as a dependency. Instead, installation will\nraise an exception if matplotlib cannot be found in the pythonpath. In this case, please\ninstall matplotlib via your preferred method, most of which are explained <a href=\"http://matplotlib.org/users/installing.html\" rel=\"nofollow\">by matplotlib</a></p>\n</div>\n<div id=\"bonus\">\n<h2>Bonus!</h2>\n<p>Also included are a set of custom Matplotlib colormaps. These colormaps were designed to\nhave every color in the colormap be clearly distinguishable against a white background. Also,\nthe ordering of the colors from low to high is intended to be as intuitive as possible and\nthere are no sudden peaks in the lightness or hue. Access to the colormaps is through a\nstatement such as:</p>\n<pre>colorobject.custom_colormaps.sparse2dense\n</pre>\n<p>The intended use for these colormaps is:</p>\n<blockquote>\n<ul>\n<li>cool2hot: temperature or heat</li>\n<li>deep2shallow: bathymetry maps</li>\n<li>dirty2clean: environmental condition or degredation</li>\n<li>sparse2dense: density maps</li>\n<li>low2high: generic</li>\n</ul>\n</blockquote>\n<img alt=\"https://dl.dropboxusercontent.com/u/35392962/custom_colormaps.jpg\" height=\"168\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b13012b989c1414ca906ac1ba97a00ec57c85bd6/68747470733a2f2f646c2e64726f70626f7875736572636f6e74656e742e636f6d2f752f33353339323936322f637573746f6d5f636f6c6f726d6170732e6a7067\" width=\"683\">\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<dl>\n<dt><strong>0.8.1 (DECEMBER/02/2014)</strong></dt>\n<dd><ul>\n<li>Moved custom color sets from module <em>discretecolors</em> to named tuple <em>custom_colorsets</em> in\nmodule <em>data</em>. Access is through a statement such as\n<em>colorobject.custom_colorsets.cartercarter_6</em></li>\n<li>Added custom color maps with named tuple <em>custom_colormaps</em> to module <em>data</em>. Access is\nthrough a statement such as <em>colorobject.custom_colormaps.sparse2dense</em></li>\n</ul>\n</dd>\n</dl>\n<p><strong>0.8.0 (DECEMBER/01/2014)</strong></p>\n<blockquote>\n<ul>\n<li>First release</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 1327970, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "ad4f5e5ce5d596847ea9321b35f114c4", "sha256": "c3174dc13cff4d50803a4d30f92dca9eef496f24cfc6d946f27556843daa52c1"}, "downloads": -1, "filename": "colorobject-0.8.0-py2-none-any.whl", "has_sig": false, "md5_digest": "ad4f5e5ce5d596847ea9321b35f114c4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 12938, "upload_time": "2014-12-02T00:18:43", "upload_time_iso_8601": "2014-12-02T00:18:43.718826Z", "url": "https://files.pythonhosted.org/packages/9e/cc/aad00d9d17b6267a5038c8355a6290fbf85b9ecab3e321d91698fe31fd72/colorobject-0.8.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95905fc8a36eaf335b5e6b89fbdea5ab", "sha256": "2e065f7a2d1f94631da150fc32fad43072910c97e45a49d9ad523808d0f159c1"}, "downloads": -1, "filename": "colorobject-0.8.0.tar.gz", "has_sig": false, "md5_digest": "95905fc8a36eaf335b5e6b89fbdea5ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11953, "upload_time": "2014-12-02T00:18:40", "upload_time_iso_8601": "2014-12-02T00:18:40.344050Z", "url": "https://files.pythonhosted.org/packages/bd/f7/7f35dba08434f9d7013cc12fa6457d638681bc63f401cfdc2d150d1a8f9d/colorobject-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "861cc9d943c02cb79fc3a57bcbc4e18f", "sha256": "902a6d30ab8243e7a75c070010e4995d1707e0b47257b7d361774c4679804099"}, "downloads": -1, "filename": "colorobject-0.8.1-py2-none-any.whl", "has_sig": false, "md5_digest": "861cc9d943c02cb79fc3a57bcbc4e18f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 19594, "upload_time": "2014-12-02T10:09:46", "upload_time_iso_8601": "2014-12-02T10:09:46.202183Z", "url": "https://files.pythonhosted.org/packages/54/ff/d3c3cdff7cf1a45c73b6abd90331020a6f992ba3881321c7d746505d1221/colorobject-0.8.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c36907ff6c8072b72b77b7ac0f7fbe9", "sha256": "adbd8f3c2447937141f845922ccb77dc9e12167134e1d778353b390d0b9d765b"}, "downloads": -1, "filename": "colorobject-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3c36907ff6c8072b72b77b7ac0f7fbe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13114, "upload_time": "2014-12-02T10:09:43", "upload_time_iso_8601": "2014-12-02T10:09:43.840422Z", "url": "https://files.pythonhosted.org/packages/29/f6/c8d13c2346e627583b86acc120f8c0af251af84c28daa8e300de029def64/colorobject-0.8.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "861cc9d943c02cb79fc3a57bcbc4e18f", "sha256": "902a6d30ab8243e7a75c070010e4995d1707e0b47257b7d361774c4679804099"}, "downloads": -1, "filename": "colorobject-0.8.1-py2-none-any.whl", "has_sig": false, "md5_digest": "861cc9d943c02cb79fc3a57bcbc4e18f", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 19594, "upload_time": "2014-12-02T10:09:46", "upload_time_iso_8601": "2014-12-02T10:09:46.202183Z", "url": "https://files.pythonhosted.org/packages/54/ff/d3c3cdff7cf1a45c73b6abd90331020a6f992ba3881321c7d746505d1221/colorobject-0.8.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3c36907ff6c8072b72b77b7ac0f7fbe9", "sha256": "adbd8f3c2447937141f845922ccb77dc9e12167134e1d778353b390d0b9d765b"}, "downloads": -1, "filename": "colorobject-0.8.1.tar.gz", "has_sig": false, "md5_digest": "3c36907ff6c8072b72b77b7ac0f7fbe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13114, "upload_time": "2014-12-02T10:09:43", "upload_time_iso_8601": "2014-12-02T10:09:43.840422Z", "url": "https://files.pythonhosted.org/packages/29/f6/c8d13c2346e627583b86acc120f8c0af251af84c28daa8e300de029def64/colorobject-0.8.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:35 2020"}