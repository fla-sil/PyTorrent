{"info": {"author": "Mikkel Oscar Lyderik", "author_email": "mikkeloscar@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: System :: Hardware"], "description": "# Cubieboard LED python module\n\nControl the green and blue LED on the Cubieboard with python.\nTested with python 2.7+ and 3+\n\n### Enable LED support on the Cubieboard\n\nIn order to use this module you need a Cubieboard (obviously), running some\nsort of linux. I have tested on Archlinux arm, but anything that run on the\nCubieboard should work.\n\nThen you need to activate the LEDs as [described here](http://linux-sunxi.org/Cubieboard/Programming/StatusLEDs).\nI also had to load the module:\n\n    leds_sunxi\n\n### Usage\n\nThe module is pretty simpel. This is how it works:\n\n```python\n>>> import Cubie.leds\n\n# turn on the blue LED\n>>> Cubie.leds.on(\"blue\")\nTrue\n# check status of blue LED\n>>> Cubie.leds.status(\"blue\")\n1\n# Turn off blue LED\n>>> Cubie.leds.off(\"blue\")\nTrue\n# check status again\n>>> Cubie.leds.status(\"blue\")\n0\n\n# It is also possible to add a trigger, eg. the mmc0 trigger which will make\n# the LED blink on SD card activity\n>>> Cubie.leds.trigger(\"green\", \"mmc0\")\nTrue\n>>> Cubie.leds.trigger_status(\"green\")\n'mmc0'\n```\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mikkeloscar/python-cubieleds", "keywords": "Cubie Board leds", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "cubieleds", "package_url": "https://pypi.org/project/cubieleds/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cubieleds/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mikkeloscar/python-cubieleds"}, "release_url": "https://pypi.org/project/cubieleds/0.1/", "requires_dist": null, "requires_python": null, "summary": "A module to control Cubieboard LEDs", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Cubieboard LED python module<br><br>Control the green and blue LED on the Cubieboard with python.<br>Tested with python 2.7+ and 3+<br><br>### Enable LED support on the Cubieboard<br><br>In order to use this module you need a Cubieboard (obviously), running some<br>sort of linux. I have tested on Archlinux arm, but anything that run on the<br>Cubieboard should work.<br><br>Then you need to activate the LEDs as [described here](http://linux-sunxi.org/Cubieboard/Programming/StatusLEDs).<br>I also had to load the module:<br><br>    leds_sunxi<br><br>### Usage<br><br>The module is pretty simpel. This is how it works:<br><br>```python<br>&gt;&gt;&gt; import Cubie.leds<br><br># turn on the blue LED<br>&gt;&gt;&gt; Cubie.leds.on(\"blue\")<br>True<br># check status of blue LED<br>&gt;&gt;&gt; Cubie.leds.status(\"blue\")<br>1<br># Turn off blue LED<br>&gt;&gt;&gt; Cubie.leds.off(\"blue\")<br>True<br># check status again<br>&gt;&gt;&gt; Cubie.leds.status(\"blue\")<br>0<br><br># It is also possible to add a trigger, eg. the mmc0 trigger which will make<br># the LED blink on SD card activity<br>&gt;&gt;&gt; Cubie.leds.trigger(\"green\", \"mmc0\")<br>True<br>&gt;&gt;&gt; Cubie.leds.trigger_status(\"green\")<br>'mmc0'<br>```<br>\n          </div>"}, "last_serial": 709290, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "171c14c198119cebf679f969817551ea", "sha256": "bfbabe49f0de541e28dafca46ecbc0ea0f8bd7f7250dec46cde2683ca5c41057"}, "downloads": -1, "filename": "cubieleds-0.1.tar.gz", "has_sig": false, "md5_digest": "171c14c198119cebf679f969817551ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17561, "upload_time": "2013-05-27T11:04:40", "upload_time_iso_8601": "2013-05-27T11:04:40.079963Z", "url": "https://files.pythonhosted.org/packages/05/7d/75a942f5df4efcd579df07a68d22768c9549d9b09f0946b17750cb4970ce/cubieleds-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "171c14c198119cebf679f969817551ea", "sha256": "bfbabe49f0de541e28dafca46ecbc0ea0f8bd7f7250dec46cde2683ca5c41057"}, "downloads": -1, "filename": "cubieleds-0.1.tar.gz", "has_sig": false, "md5_digest": "171c14c198119cebf679f969817551ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17561, "upload_time": "2013-05-27T11:04:40", "upload_time_iso_8601": "2013-05-27T11:04:40.079963Z", "url": "https://files.pythonhosted.org/packages/05/7d/75a942f5df4efcd579df07a68d22768c9549d9b09f0946b17750cb4970ce/cubieleds-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:27 2020"}