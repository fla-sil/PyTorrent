{"info": {"author": "Povilas Susinskas", "author_email": "povilassusinskas@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "git-wipe: Cleanup your fork branches which were merged as PR to parent repository\n=================================================================================\n\n.. image:: https://img.shields.io/pypi/v/git-wipe.svg\n    :target: https://pypi.python.org/pypi/git-wipe\n\n.. image:: https://img.shields.io/pypi/l/git-wipe.svg\n    :target: https://pypi.python.org/pypi/git-wipe\n\n.. image:: https://img.shields.io/pypi/pyversions/git-wipe.svg\n    :target: https://pypi.python.org/pypi/git-wipe\n\n.. image:: https://coveralls.io/repos/github/povils/git-wipe/badge.svg?branch=master\n    :target: https://coveralls.io/github/povils/git-wipe?branch=master\n\n.. image:: https://travis-ci.org/povils/git-wipe.svg?branch=master\n    :target: https://travis-ci.org/povils/git-wipe\n\n---------------\n\n\nThe problem\n-----------------\nFrom time to time if you have many forks and do many pull requests it is inevitable that you will have stale branches. And as time marches on the number of these branches across forks can become big.\n\nThe answer\n-----------\n**git-wipe** is simple command line tool to cleanup your Github fork branches.\n\nInstall\n-------\n\n::\n\n    $ pip install git-wipe\n\nUsage\n------\nIn order to use **git-wipe** first you need to create your `Personal Access Token <https://github.com/settings/tokens>`_.\n\nYou can set this token to your environment variable:\n\n::\n\n    $ export GIT_WIPE_TOKEN=your_access_token\n\nAnd then you can easily:\n\n\n::\n\n    $ git-wipe cleanup\n    Searching for branches. This may take a while...\n    Founded branches:\n\n    povils/repo_1/Branch_1\n    povils/repo_1/Branch_2\n    povils/repo_2/Branch_1\n    povils/repo_3/Branch_1\n\n    Total: 4\n    Delete these branches? [y/N]: y\n\n\nOther options\n-------------\n::\n\n      --token              instead of environment\n      --preview            just to preview merged branches\n      --timeout            set connection timeout. Default 30 seconds\n      --skip-repository    skip repository you don't want to search. Multiple\n      --skip-branch        skip branch you don't want to delete. Multiple\n      --no-interaction     do not ask any interactive question\n\nExample:\n\n::\n\n    $ git-wipe cleanup --skip-repository=repo_1 --skip-branch=develop --no-interaction\n\nThis command will clean all merged branches without interaction, except from fork with name 'repo_1' and except all branches with name 'develop'\n\nNote:\n-----\nOnly forks where you are **owner** will be involved in search. Also **master branches will never be deleted!**", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "git-wipe", "package_url": "https://pypi.org/project/git-wipe/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/git-wipe/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/git-wipe/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "CLI tool for deleting Github branches", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/git-wipe\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/git-wipe.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb4d04a315cc54bd106b647faa08519d3911cacb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6769742d776970652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/git-wipe\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/git-wipe.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d88abcd1eb33978d16b5d150888c3fadfc27e18d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6769742d776970652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/git-wipe\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/git-wipe.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6690cb326a208efd4e50115adf02736d8c1f0b89/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6769742d776970652e737667\"></a>\n<a href=\"https://coveralls.io/github/povils/git-wipe?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/povils/git-wipe/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/686def2a5fe0a75b0315395f1f56a932b333abc0/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f706f76696c732f6769742d776970652f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/povils/git-wipe\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/povils/git-wipe.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b2701a2094bbb37b89883c1de674cfe1bdd6d18/68747470733a2f2f7472617669732d63692e6f72672f706f76696c732f6769742d776970652e7376673f6272616e63683d6d6173746572\"></a>\n<hr class=\"docutils\">\n<div id=\"the-problem\">\n<h2>The problem</h2>\n<p>From time to time if you have many forks and do many pull requests it is inevitable that you will have stale branches. And as time marches on the number of these branches across forks can become big.</p>\n</div>\n<div id=\"the-answer\">\n<h2>The answer</h2>\n<p><strong>git-wipe</strong> is simple command line tool to cleanup your Github fork branches.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>$ pip install git-wipe\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>In order to use <strong>git-wipe</strong> first you need to create your <a href=\"https://github.com/settings/tokens\" rel=\"nofollow\">Personal Access Token</a>.</p>\n<p>You can set this token to your environment variable:</p>\n<pre>$ export GIT_WIPE_TOKEN=your_access_token\n</pre>\n<p>And then you can easily:</p>\n<pre>$ git-wipe cleanup\nSearching for branches. This may take a while...\nFounded branches:\n\npovils/repo_1/Branch_1\npovils/repo_1/Branch_2\npovils/repo_2/Branch_1\npovils/repo_3/Branch_1\n\nTotal: 4\nDelete these branches? [y/N]: y\n</pre>\n</div>\n<div id=\"other-options\">\n<h2>Other options</h2>\n<pre>--token              instead of environment\n--preview            just to preview merged branches\n--timeout            set connection timeout. Default 30 seconds\n--skip-repository    skip repository you don't want to search. Multiple\n--skip-branch        skip branch you don't want to delete. Multiple\n--no-interaction     do not ask any interactive question\n</pre>\n<p>Example:</p>\n<pre>$ git-wipe cleanup --skip-repository=repo_1 --skip-branch=develop --no-interaction\n</pre>\n<p>This command will clean all merged branches without interaction, except from fork with name \u2018repo_1\u2019 and except all branches with name \u2018develop\u2019</p>\n</div>\n<div id=\"note\">\n<h2>Note:</h2>\n<p>Only forks where you are <strong>owner</strong> will be involved in search. Also <strong>master branches will never be deleted!</strong></p>\n</div>\n\n          </div>"}, "last_serial": 2698114, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "533140e0fdaa8cb8e53ffd56ccef8650", "sha256": "b57705722134c93315263092171b6f6dad53ea6430af05b4de12b1cce021c4be"}, "downloads": -1, "filename": "git-wipe-0.1.1.tar.gz", "has_sig": false, "md5_digest": "533140e0fdaa8cb8e53ffd56ccef8650", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2491, "upload_time": "2017-03-10T22:00:31", "upload_time_iso_8601": "2017-03-10T22:00:31.672340Z", "url": "https://files.pythonhosted.org/packages/7d/06/69a8762f86a01e0ca2aa83601604351d5630c8d5182d8625551e65abf865/git-wipe-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f474230a2e07105c38b610325c1da452", "sha256": "143c2ee976bd16dfc77764d2e9f2a579438c0cf5b989b7e9748bd05ce2b46fb5"}, "downloads": -1, "filename": "git-wipe-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f474230a2e07105c38b610325c1da452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3893, "upload_time": "2017-03-10T22:05:02", "upload_time_iso_8601": "2017-03-10T22:05:02.312015Z", "url": "https://files.pythonhosted.org/packages/44/3c/cdf460f7429204b6c6d9177d015b4a9d3ff80145ca3058b738ff19702215/git-wipe-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f474230a2e07105c38b610325c1da452", "sha256": "143c2ee976bd16dfc77764d2e9f2a579438c0cf5b989b7e9748bd05ce2b46fb5"}, "downloads": -1, "filename": "git-wipe-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f474230a2e07105c38b610325c1da452", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3893, "upload_time": "2017-03-10T22:05:02", "upload_time_iso_8601": "2017-03-10T22:05:02.312015Z", "url": "https://files.pythonhosted.org/packages/44/3c/cdf460f7429204b6c6d9177d015b4a9d3ff80145ca3058b738ff19702215/git-wipe-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:43 2020"}