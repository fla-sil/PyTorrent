{"info": {"author": "David Link", "author_email": "dvlink@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application", "Topic :: Software Development :: Libraries"], "description": "**Vweb** is a Simple Python Website Frame work.\n\nSource: https://github.com/dlink/vweb\n\nIt has been created over a time to address reoccuring requirements for building simple websites.  It is Python CGI, but can be used with Cherrypy.  It is not MVC.  It consists of the following modules:\n\n### Modules\n\n* **HtmlPage** - Super class that controlls the processing and display of webpages\n\n* **html**     - HTML Abstraction layer for generating HTML\n\n* **HtmlTable** - HTML Table Abstraction layer for generating HTML Tables\n\n* **htmlify** - Some utilities\n\n* **examples**  - Examples\n\n### Details\n\n##### HtmlPage\n\nHtmlPage is a Web Page that your code subclasses.  It consists primarily of\n\n* A Constructor **__init__()** which you override, which allows you to dynamically build the HTML HEADER with Title, Javascript, CSS, auto_refesh, output_format (html, csv)\n\n* A **process()** method which you overide for handling incoming GET and POST parameters.\n\n* A **getHtmlContent()** method which you overrid for generating HTML BODY\n\n* Debugging GET and POST Variables, as well as user defined DEBUG message.\n\nHere is Hello World:\n\n    from htmlpage import HtmlPage\n    class HelloWorld(HtmlPage):\n        def __init__(self):\n            HtmlPage.__init__(self, \"Hello World\")\n        def getHtmlContent(self):\n            return '<p>Hello, World!</p>'\n    if __name__ == '__main__':\n        HelloWorld().go()\n\nSee Other [Examples](https://github.com/dlink/vweb/tree/master/examples)\n\n__html__\n\n**html** is a libary module of simple one-to-one python equivalent names for each HTML tag.  It is used to generate html in python, rather than using templates like Genshi, or PHP.\n\nThe following examples ...\n\n    b('hi')\n    p(font('some text', color='green'))\n    a('Chapter 2', href='chapter2.html')\n    div(center(column_chooser), id='columnChooser', class_='widget')\n    \nReturns these string:\n\n    <b>hi</b>\n    <p><font color='red'>text</font></p>\n    <a href='chapter2.html'>Chapter 2</a>\n    <div id=\"columnChooser\" class=\"widget\">\n       <center>\n          < \u2026 > \n       </center>\n    </div>\n\n__HtmlTable__\n\n**HtmlTable** is an Abstraction layer for HTML TABLES, (and it rocks the house). It was inspired by perl's HTML:Table.  \n\nBy treating tables as Python objects similar to a list of lists, uses can work more freely and creatively, leaving the output of the HTML TABLE to the getTable() method.\n\nThis example \u2026\n\n    from htmltable import HtmlTable\n    \n    # Create table - Many parameter options exist.\n    table = HtmlTable()\n    \n    # Header\n    table.addHeader(['No.', 'President'])\n    \n    # Table Body\n    table.addRow([1, 'George Washington']) \n    table.addRow([2, 'John Adams']) \n    \n    # Format adjustments\n    table.setColAlign(2, 'right')\n    \n    # Outputing the results\n    print table.getTable()\n\nOutput the following\n\n    <table cellpadding=\"0\" cellspacing=\"0\">\n        <thead>\n            <tr>\n                <th>No.</th>\n                <th align=\"right\">President</th>\n            </tr>\n        </thead>\n        <tbody>\n            <tr>\n                <td>1</td>\n                <td align=\"right\">George Washington</td>\n            </tr>\n            <tr>\n                <td>2</td>\n                <td align=\"right\">John Adams</td>\n            </tr>\n        </tbody>\n    </table>\n\n__Examples__\n\nSee [Examples](https://github.com/dlink/vweb/tree/master/examples)\n\n\n__Requires__\n\nvlib - [https://github.com/dlink/vlib](https://github.com/dlink/vlib)\n\n__Installation__\n\nInstallation\n------------\n\n__Ubuntu__\n\nUpdate apt-get to the latest libraries:\n\n    apt-get update\n\nInstall pip, if you haven't done so already:\n\n     apt-get install python-pip\n     pip install -U pip\n\nInstall Mysql DB Connectorm, if you haven't done so already:\n\n    apt-get install python-dev libmysqlclient-dev\n    pip install MySQL-python\n\nInstall vlib:\n\n    pip install vweb", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dlink/vweb", "keywords": "cgi,web framework", "license": "GNU General Public License (GPL)", "maintainer": "", "maintainer_email": "", "name": "vweb", "package_url": "https://pypi.org/project/vweb/", "platform": "", "project_url": "https://pypi.org/project/vweb/", "project_urls": {"Homepage": "https://github.com/dlink/vweb"}, "release_url": "https://pypi.org/project/vweb/1.3.4/", "requires_dist": null, "requires_python": "", "summary": "Simple Python Website Frame work", "version": "1.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            **Vweb** is a Simple Python Website Frame work.<br><br>Source: https://github.com/dlink/vweb<br><br>It has been created over a time to address reoccuring requirements for building simple websites.  It is Python CGI, but can be used with Cherrypy.  It is not MVC.  It consists of the following modules:<br><br>### Modules<br><br>* **HtmlPage** - Super class that controlls the processing and display of webpages<br><br>* **html**     - HTML Abstraction layer for generating HTML<br><br>* **HtmlTable** - HTML Table Abstraction layer for generating HTML Tables<br><br>* **htmlify** - Some utilities<br><br>* **examples**  - Examples<br><br>### Details<br><br>##### HtmlPage<br><br>HtmlPage is a Web Page that your code subclasses.  It consists primarily of<br><br>* A Constructor **__init__()** which you override, which allows you to dynamically build the HTML HEADER with Title, Javascript, CSS, auto_refesh, output_format (html, csv)<br><br>* A **process()** method which you overide for handling incoming GET and POST parameters.<br><br>* A **getHtmlContent()** method which you overrid for generating HTML BODY<br><br>* Debugging GET and POST Variables, as well as user defined DEBUG message.<br><br>Here is Hello World:<br><br>    from htmlpage import HtmlPage<br>    class HelloWorld(HtmlPage):<br>        def __init__(self):<br>            HtmlPage.__init__(self, \"Hello World\")<br>        def getHtmlContent(self):<br>            return '&lt;p&gt;Hello, World!&lt;/p&gt;'<br>    if __name__ == '__main__':<br>        HelloWorld().go()<br><br>See Other [Examples](https://github.com/dlink/vweb/tree/master/examples)<br><br>__html__<br><br>**html** is a libary module of simple one-to-one python equivalent names for each HTML tag.  It is used to generate html in python, rather than using templates like Genshi, or PHP.<br><br>The following examples ...<br><br>    b('hi')<br>    p(font('some text', color='green'))<br>    a('Chapter 2', href='chapter2.html')<br>    div(center(column_chooser), id='columnChooser', class_='widget')<br>    <br>Returns these string:<br><br>    &lt;b&gt;hi&lt;/b&gt;<br>    &lt;p&gt;&lt;font color='red'&gt;text&lt;/font&gt;&lt;/p&gt;<br>    &lt;a href='chapter2.html'&gt;Chapter 2&lt;/a&gt;<br>    &lt;div id=\"columnChooser\" class=\"widget\"&gt;<br>       &lt;center&gt;<br>          &lt; \u2026 &gt; <br>       &lt;/center&gt;<br>    &lt;/div&gt;<br><br>__HtmlTable__<br><br>**HtmlTable** is an Abstraction layer for HTML TABLES, (and it rocks the house). It was inspired by perl's HTML:Table.  <br><br>By treating tables as Python objects similar to a list of lists, uses can work more freely and creatively, leaving the output of the HTML TABLE to the getTable() method.<br><br>This example \u2026<br><br>    from htmltable import HtmlTable<br>    <br>    # Create table - Many parameter options exist.<br>    table = HtmlTable()<br>    <br>    # Header<br>    table.addHeader(['No.', 'President'])<br>    <br>    # Table Body<br>    table.addRow([1, 'George Washington']) <br>    table.addRow([2, 'John Adams']) <br>    <br>    # Format adjustments<br>    table.setColAlign(2, 'right')<br>    <br>    # Outputing the results<br>    print table.getTable()<br><br>Output the following<br><br>    &lt;table cellpadding=\"0\" cellspacing=\"0\"&gt;<br>        &lt;thead&gt;<br>            &lt;tr&gt;<br>                &lt;th&gt;No.&lt;/th&gt;<br>                &lt;th align=\"right\"&gt;President&lt;/th&gt;<br>            &lt;/tr&gt;<br>        &lt;/thead&gt;<br>        &lt;tbody&gt;<br>            &lt;tr&gt;<br>                &lt;td&gt;1&lt;/td&gt;<br>                &lt;td align=\"right\"&gt;George Washington&lt;/td&gt;<br>            &lt;/tr&gt;<br>            &lt;tr&gt;<br>                &lt;td&gt;2&lt;/td&gt;<br>                &lt;td align=\"right\"&gt;John Adams&lt;/td&gt;<br>            &lt;/tr&gt;<br>        &lt;/tbody&gt;<br>    &lt;/table&gt;<br><br>__Examples__<br><br>See [Examples](https://github.com/dlink/vweb/tree/master/examples)<br><br><br>__Requires__<br><br>vlib - [https://github.com/dlink/vlib](https://github.com/dlink/vlib)<br><br>__Installation__<br><br>Installation<br>------------<br><br>__Ubuntu__<br><br>Update apt-get to the latest libraries:<br><br>    apt-get update<br><br>Install pip, if you haven't done so already:<br><br>     apt-get install python-pip<br>     pip install -U pip<br><br>Install Mysql DB Connectorm, if you haven't done so already:<br><br>    apt-get install python-dev libmysqlclient-dev<br>    pip install MySQL-python<br><br>Install vlib:<br><br>    pip install vweb\n          </div>"}, "last_serial": 3322598, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "d9e8bb0fdee3b135983e85e0b2e2f283", "sha256": "009acc237c83d8ea0bdd090b77da8c13ac2f3cf17ac8722febb65e76755a0afb"}, "downloads": -1, "filename": "vweb-1.0.tar.gz", "has_sig": false, "md5_digest": "d9e8bb0fdee3b135983e85e0b2e2f283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7595, "upload_time": "2014-09-17T22:22:15", "upload_time_iso_8601": "2014-09-17T22:22:15.840707Z", "url": "https://files.pythonhosted.org/packages/8a/d5/8cabf505631a45a8e5c5b7aac1309368056a23fc1b7c97ab2a5dc5aa5b04/vweb-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "babf659463d9a8ac70d0cc36de75480a", "sha256": "719d6643930bc4f9e15b64549d89caa5575a82c17a86d409e066ec045c432424"}, "downloads": -1, "filename": "vweb-1.1.tar.gz", "has_sig": false, "md5_digest": "babf659463d9a8ac70d0cc36de75480a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8745, "upload_time": "2014-10-11T18:18:11", "upload_time_iso_8601": "2014-10-11T18:18:11.272347Z", "url": "https://files.pythonhosted.org/packages/4e/52/0d1b476b2d3efa147b92e371ab260c141e5fa44dd0558f32d1c0c2943a61/vweb-1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "f2b3fbc32f2c72254cb5eeecea249d6e", "sha256": "f0a98be4264c1d7550b3b92081a64cd011eb251a483f9fe3c7a07ebba52d4c20"}, "downloads": -1, "filename": "vweb-1.2.0.tar.gz", "has_sig": false, "md5_digest": "f2b3fbc32f2c72254cb5eeecea249d6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9065, "upload_time": "2015-10-24T19:48:33", "upload_time_iso_8601": "2015-10-24T19:48:33.411495Z", "url": "https://files.pythonhosted.org/packages/95/55/16b6e35e7462f56d7306af3ad370a459bd6d8bc265168b78e95d08bd7532/vweb-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "b1f17f7920739dc295cc7a5c7775b477", "sha256": "723a13b1f3d1cfde12354c5b2d96862b3a9f0ae9c35d682ba103233c90fcc546"}, "downloads": -1, "filename": "vweb-1.2.1.tar.gz", "has_sig": false, "md5_digest": "b1f17f7920739dc295cc7a5c7775b477", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9067, "upload_time": "2015-10-24T19:56:17", "upload_time_iso_8601": "2015-10-24T19:56:17.089515Z", "url": "https://files.pythonhosted.org/packages/db/2a/46cef8032d16a74865f53c2832cf9a8bc34b39ce67b9bddc2505a669b421/vweb-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "e51541297a4f674c5dc1508e270bc43f", "sha256": "8e8a86302a0e5090d5af4c906446476ee250efe2e241ce8f2a1412dc0ac7037c"}, "downloads": -1, "filename": "vweb-1.2.2.tar.gz", "has_sig": false, "md5_digest": "e51541297a4f674c5dc1508e270bc43f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9183, "upload_time": "2016-01-19T19:03:07", "upload_time_iso_8601": "2016-01-19T19:03:07.133745Z", "url": "https://files.pythonhosted.org/packages/ea/4c/1b4da0859dfa501a6d43a7e46f55c73969280e13ce798fef3c8c0a4caa4e/vweb-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "72a57fa670926b851ef3ec8ab87e8d03", "sha256": "7c3119ee97896fcf302eee28cc415c80a4b4a1bc63d3252b6110dda72918aad8"}, "downloads": -1, "filename": "vweb-1.2.3.tar.gz", "has_sig": false, "md5_digest": "72a57fa670926b851ef3ec8ab87e8d03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9208, "upload_time": "2016-01-19T19:11:15", "upload_time_iso_8601": "2016-01-19T19:11:15.808670Z", "url": "https://files.pythonhosted.org/packages/ed/c0/0c3f2a90a40fe2597cc753daf256bb68e178de63d51acc5d2e327149d37c/vweb-1.2.3.tar.gz", "yanked": false}], "1.3-3": [{"comment_text": "", "digests": {"md5": "d754b2650d121762da1bb75218a22956", "sha256": "d8a2c7efba1303994bd494e2d41784bbc32ee203a8f35a53849775b39da8935a"}, "downloads": -1, "filename": "vweb-1.3-3.tar.gz", "has_sig": false, "md5_digest": "d754b2650d121762da1bb75218a22956", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10751, "upload_time": "2017-10-11T22:03:35", "upload_time_iso_8601": "2017-10-11T22:03:35.694652Z", "url": "https://files.pythonhosted.org/packages/24/50/4583736c0bf49b2522d84cb6175c279f3dd55d307f3c7602969cbb2ff97f/vweb-1.3-3.tar.gz", "yanked": false}], "1.3.4": [{"comment_text": "", "digests": {"md5": "19fbba68265111e70da12971265c14f1", "sha256": "d464d2e65d521d1465cdce5b605c2fc143610b80f14a96ec1bd959805bf1d94e"}, "downloads": -1, "filename": "vweb-1.3.4.tar.gz", "has_sig": false, "md5_digest": "19fbba68265111e70da12971265c14f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10751, "upload_time": "2017-11-10T16:21:52", "upload_time_iso_8601": "2017-11-10T16:21:52.004524Z", "url": "https://files.pythonhosted.org/packages/75/fb/1c01da32f7f495b54feec8fe591facc2a201103e378ba06284ac412e1f54/vweb-1.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "19fbba68265111e70da12971265c14f1", "sha256": "d464d2e65d521d1465cdce5b605c2fc143610b80f14a96ec1bd959805bf1d94e"}, "downloads": -1, "filename": "vweb-1.3.4.tar.gz", "has_sig": false, "md5_digest": "19fbba68265111e70da12971265c14f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10751, "upload_time": "2017-11-10T16:21:52", "upload_time_iso_8601": "2017-11-10T16:21:52.004524Z", "url": "https://files.pythonhosted.org/packages/75/fb/1c01da32f7f495b54feec8fe591facc2a201103e378ba06284ac412e1f54/vweb-1.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:33:30 2020"}