{"info": {"author": "Ketan Patel", "author_email": "ketan86ecer@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Finite Transactional State Machine \nFinite Transactional State Machine is a Transaction driven finite state machine. \nTransaction can be any Python callable object that is reverted when exceptions \noccur.\n\n## Installation \n`pip3 install ftsm`\n\n\n## How does it work ?\n\n1. Create states and list of possible transitions the state is allowed \nto transition to.\n    ```python\n    UNLOCKED = State('UNLOCKED', initial=True, allowed_transitions=['LOCKED'])\n    LOCKED = State('LOCKED', initial=False, allowed_transitions=['UNLOCKED'])\n    ```\n2. Initialize the transitional state machine.\n    ```python\n    tsm = TransactionalFiniteStateMachine(name='Lock')\n    ```\n3. Add defined states to a state machine.\n    ```python\n    tsm.add(LOCKED)\n    tsm.add(UNLOCKED)\n    ```\n4. Create transaction and define rollback transactions with or without conditions.\n    ```python\n    t1 = Transaction(\n    target=func,\n    args=('name',),\n    rb_transactions=[t2],\n    rb_conditions=[ExceptionCondition(KeyError)])\n    ```\n5. Transition to a new state with transactions.\n    ```python\n    with tsm.managed_transition(\n            state=LOCKED,\n            pre_transactions=[t1, t3],\n            on_error_transactions=[t4],\n            post_transactions=[t5]):\n        func()\n    ```\n## Example \n\n```python\nfrom ftsm import State, Transaction, TransactionalFiniteStateMachine\n\nclass LightController:\n    def turn_off_light(self, room):\n        print('turning the {} room light off.'.format(room))\n\n    def turn_on_light(self, room):\n        print('turning the {} room light on.'.format(room))\n\nlight_controller = LightController()\n\ndef turn_off_water():\n    print('turning off the water.')\n\ndef turn_on_water():\n    print('turning on the water.')\n\ndef water_plants():\n    print('watering the plants.')\n\ndef lock_the_door():\n    print('locking the door.')\n\ndef unlock_the_door():\n    print('unlocking the door.')\n\nUNLOCKED = State('UNLOCKED', initial=True, allowed_transitions=['LOCKED'])\nLOCKED = State('LOCKED', initial=False, allowed_transitions=['UNLOCKED'])\n\ntsm = TransactionalFiniteStateMachine(name='Lock')\ntsm.add(LOCKED)\ntsm.add(UNLOCKED)\n\nlight_transaction = Transaction(\n    target=light_controller.turn_off_light,\n    args=('Living',),\n    rb_transactions=[\n        Transaction(target=light_controller.turn_on_light,\n                    args=('Living',))\n    ])\n\nwater_transaction = Transaction(\n    target=turn_off_water,\n    rb_transactions=[\n        Transaction(target=turn_on_water)\n    ]\n)\n\nwith tsm.managed_transition(\n        state=LOCKED,\n        pre_transactions=[light_transaction, water_transaction],\n        on_error_transactions=[Transaction(unlock_the_door)],\n        post_transactions=[Transaction(water_plants)]):\n    lock_the_door()\n\nprint(tsm.current_state)\n```\n\nAbove sample code would result in following output. \n```python\nturning the Living room light off.\nturning off the water.\nlocking the door.\nwatering the plants.\n<State name=LOCKED initial=False>\n```\n\nIf errors occur while performing the transactions, revert transactions are performed \nin the reverse order and state transition does not happens.\n\nRollback transaction can also be made conditional using the `ExceptionCondition`\nclass provided. \n\n```\nlight_transaction = Transaction(\n    target=light_controller.turn_off_light,\n    args=('Living',),\n    rb_transactions=[\n        Transaction(target=light_controller.turn_on_light,\n                    args=('Living',))\n    ],\n    rb_conditions=[ExceptionCondition(KeyError)])\n```\nAbove transaction now only be reverted if KeyError is encountered during the\ntransaction execution. \n\nUser can extend the abstract `Condition` class to defined new Condition.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ketan86/ftsm", "keywords": "ftsm package", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "ftsm", "package_url": "https://pypi.org/project/ftsm/", "platform": "", "project_url": "https://pypi.org/project/ftsm/", "project_urls": {"Homepage": "https://github.com/ketan86/ftsm"}, "release_url": "https://pypi.org/project/ftsm/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Finite Transactional State Machine.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Finite Transactional State Machine</h1>\n<p>Finite Transactional State Machine is a Transaction driven finite state machine.\nTransaction can be any Python callable object that is reverted when exceptions\noccur.</p>\n<h2>Installation</h2>\n<p><code>pip3 install ftsm</code></p>\n<h2>How does it work ?</h2>\n<ol>\n<li>Create states and list of possible transitions the state is allowed\nto transition to.\n<pre><span class=\"n\">UNLOCKED</span> <span class=\"o\">=</span> <span class=\"n\">State</span><span class=\"p\">(</span><span class=\"s1\">'UNLOCKED'</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">allowed_transitions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'LOCKED'</span><span class=\"p\">])</span>\n<span class=\"n\">LOCKED</span> <span class=\"o\">=</span> <span class=\"n\">State</span><span class=\"p\">(</span><span class=\"s1\">'LOCKED'</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">allowed_transitions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'UNLOCKED'</span><span class=\"p\">])</span>\n</pre>\n</li>\n<li>Initialize the transitional state machine.\n<pre><span class=\"n\">tsm</span> <span class=\"o\">=</span> <span class=\"n\">TransactionalFiniteStateMachine</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Lock'</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Add defined states to a state machine.\n<pre><span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">LOCKED</span><span class=\"p\">)</span>\n<span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">UNLOCKED</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Create transaction and define rollback transactions with or without conditions.\n<pre><span class=\"n\">t1</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"p\">(</span>\n<span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">func</span><span class=\"p\">,</span>\n<span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">,),</span>\n<span class=\"n\">rb_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">t2</span><span class=\"p\">],</span>\n<span class=\"n\">rb_conditions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">ExceptionCondition</span><span class=\"p\">(</span><span class=\"ne\">KeyError</span><span class=\"p\">)])</span>\n</pre>\n</li>\n<li>Transition to a new state with transactions.\n<pre><span class=\"k\">with</span> <span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">managed_transition</span><span class=\"p\">(</span>\n        <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"n\">LOCKED</span><span class=\"p\">,</span>\n        <span class=\"n\">pre_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">t1</span><span class=\"p\">,</span> <span class=\"n\">t3</span><span class=\"p\">],</span>\n        <span class=\"n\">on_error_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">t4</span><span class=\"p\">],</span>\n        <span class=\"n\">post_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">t5</span><span class=\"p\">]):</span>\n    <span class=\"n\">func</span><span class=\"p\">()</span>\n</pre>\n</li>\n</ol>\n<h2>Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ftsm</span> <span class=\"kn\">import</span> <span class=\"n\">State</span><span class=\"p\">,</span> <span class=\"n\">Transaction</span><span class=\"p\">,</span> <span class=\"n\">TransactionalFiniteStateMachine</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">LightController</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"nf\">turn_off_light</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">room</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'turning the </span><span class=\"si\">{}</span><span class=\"s1\"> room light off.'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">room</span><span class=\"p\">))</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">turn_on_light</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">room</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'turning the </span><span class=\"si\">{}</span><span class=\"s1\"> room light on.'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">room</span><span class=\"p\">))</span>\n\n<span class=\"n\">light_controller</span> <span class=\"o\">=</span> <span class=\"n\">LightController</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">turn_off_water</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'turning off the water.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">turn_on_water</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'turning on the water.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">water_plants</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'watering the plants.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">lock_the_door</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'locking the door.'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">unlock_the_door</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'unlocking the door.'</span><span class=\"p\">)</span>\n\n<span class=\"n\">UNLOCKED</span> <span class=\"o\">=</span> <span class=\"n\">State</span><span class=\"p\">(</span><span class=\"s1\">'UNLOCKED'</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">allowed_transitions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'LOCKED'</span><span class=\"p\">])</span>\n<span class=\"n\">LOCKED</span> <span class=\"o\">=</span> <span class=\"n\">State</span><span class=\"p\">(</span><span class=\"s1\">'LOCKED'</span><span class=\"p\">,</span> <span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">allowed_transitions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'UNLOCKED'</span><span class=\"p\">])</span>\n\n<span class=\"n\">tsm</span> <span class=\"o\">=</span> <span class=\"n\">TransactionalFiniteStateMachine</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Lock'</span><span class=\"p\">)</span>\n<span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">LOCKED</span><span class=\"p\">)</span>\n<span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">UNLOCKED</span><span class=\"p\">)</span>\n\n<span class=\"n\">light_transaction</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"p\">(</span>\n    <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">light_controller</span><span class=\"o\">.</span><span class=\"n\">turn_off_light</span><span class=\"p\">,</span>\n    <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'Living'</span><span class=\"p\">,),</span>\n    <span class=\"n\">rb_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">Transaction</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">light_controller</span><span class=\"o\">.</span><span class=\"n\">turn_on_light</span><span class=\"p\">,</span>\n                    <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'Living'</span><span class=\"p\">,))</span>\n    <span class=\"p\">])</span>\n\n<span class=\"n\">water_transaction</span> <span class=\"o\">=</span> <span class=\"n\">Transaction</span><span class=\"p\">(</span>\n    <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">turn_off_water</span><span class=\"p\">,</span>\n    <span class=\"n\">rb_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"n\">Transaction</span><span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">=</span><span class=\"n\">turn_on_water</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">managed_transition</span><span class=\"p\">(</span>\n        <span class=\"n\">state</span><span class=\"o\">=</span><span class=\"n\">LOCKED</span><span class=\"p\">,</span>\n        <span class=\"n\">pre_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">light_transaction</span><span class=\"p\">,</span> <span class=\"n\">water_transaction</span><span class=\"p\">],</span>\n        <span class=\"n\">on_error_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Transaction</span><span class=\"p\">(</span><span class=\"n\">unlock_the_door</span><span class=\"p\">)],</span>\n        <span class=\"n\">post_transactions</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Transaction</span><span class=\"p\">(</span><span class=\"n\">water_plants</span><span class=\"p\">)]):</span>\n    <span class=\"n\">lock_the_door</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">tsm</span><span class=\"o\">.</span><span class=\"n\">current_state</span><span class=\"p\">)</span>\n</pre>\n<p>Above sample code would result in following output.</p>\n<pre><span class=\"n\">turning</span> <span class=\"n\">the</span> <span class=\"n\">Living</span> <span class=\"n\">room</span> <span class=\"n\">light</span> <span class=\"n\">off</span><span class=\"o\">.</span>\n<span class=\"n\">turning</span> <span class=\"n\">off</span> <span class=\"n\">the</span> <span class=\"n\">water</span><span class=\"o\">.</span>\n<span class=\"n\">locking</span> <span class=\"n\">the</span> <span class=\"n\">door</span><span class=\"o\">.</span>\n<span class=\"n\">watering</span> <span class=\"n\">the</span> <span class=\"n\">plants</span><span class=\"o\">.</span>\n<span class=\"o\">&lt;</span><span class=\"n\">State</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">LOCKED</span> <span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"o\">&gt;</span>\n</pre>\n<p>If errors occur while performing the transactions, revert transactions are performed\nin the reverse order and state transition does not happens.</p>\n<p>Rollback transaction can also be made conditional using the <code>ExceptionCondition</code>\nclass provided.</p>\n<pre><code>light_transaction = Transaction(\n    target=light_controller.turn_off_light,\n    args=('Living',),\n    rb_transactions=[\n        Transaction(target=light_controller.turn_on_light,\n                    args=('Living',))\n    ],\n    rb_conditions=[ExceptionCondition(KeyError)])\n</code></pre>\n<p>Above transaction now only be reverted if KeyError is encountered during the\ntransaction execution.</p>\n<p>User can extend the abstract <code>Condition</code> class to defined new Condition.</p>\n\n          </div>"}, "last_serial": 5528515, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8e41bcf2e5882c3d023ccd68fa63e042", "sha256": "64f7dc795c4b7cf01bedd9fdfd91f0dc1d89497b23d246a9bd9932e494a49a38"}, "downloads": -1, "filename": "ftsm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8e41bcf2e5882c3d023ccd68fa63e042", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7763, "upload_time": "2019-07-14T00:13:27", "upload_time_iso_8601": "2019-07-14T00:13:27.402310Z", "url": "https://files.pythonhosted.org/packages/07/07/2f9f780cd379ef8ae093a1256d1107ba37f0d2657dd6127d31ed7c6b6f72/ftsm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdf0529c8bddf9ad34bf2d6c72ff7513", "sha256": "84303d9a975d54473116df46605f35a514d6eabcfde346590d6a4a64c5ae2153"}, "downloads": -1, "filename": "ftsm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cdf0529c8bddf9ad34bf2d6c72ff7513", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7153, "upload_time": "2019-07-14T00:13:29", "upload_time_iso_8601": "2019-07-14T00:13:29.784067Z", "url": "https://files.pythonhosted.org/packages/48/17/92669b96219ab2ec6e400a0c42743acd6cae2cb3ef83436ad61cf0af3c62/ftsm-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8e41bcf2e5882c3d023ccd68fa63e042", "sha256": "64f7dc795c4b7cf01bedd9fdfd91f0dc1d89497b23d246a9bd9932e494a49a38"}, "downloads": -1, "filename": "ftsm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8e41bcf2e5882c3d023ccd68fa63e042", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7763, "upload_time": "2019-07-14T00:13:27", "upload_time_iso_8601": "2019-07-14T00:13:27.402310Z", "url": "https://files.pythonhosted.org/packages/07/07/2f9f780cd379ef8ae093a1256d1107ba37f0d2657dd6127d31ed7c6b6f72/ftsm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cdf0529c8bddf9ad34bf2d6c72ff7513", "sha256": "84303d9a975d54473116df46605f35a514d6eabcfde346590d6a4a64c5ae2153"}, "downloads": -1, "filename": "ftsm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "cdf0529c8bddf9ad34bf2d6c72ff7513", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7153, "upload_time": "2019-07-14T00:13:29", "upload_time_iso_8601": "2019-07-14T00:13:29.784067Z", "url": "https://files.pythonhosted.org/packages/48/17/92669b96219ab2ec6e400a0c42743acd6cae2cb3ef83436ad61cf0af3c62/ftsm-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:59:57 2020"}