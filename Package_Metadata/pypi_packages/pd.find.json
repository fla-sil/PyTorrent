{"info": {"author": "Andrey Orlov", "author_email": "cray@neural.ru", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Short module description\n=========================\n\nModule pd.find present simple way use filesystem\nto search and read files on it. File system using\nshowed as simple as using ordinal dict::\n\n    >>> import pd.find\n    >>> f=pd.find.file.File(\"/etc/sysconfig\")\n    >>> f\n    '/etc/sysconfig'\n    >>> f.keys()\n    ['harddisk', 'lm_sensors', 'ipw3945d~', 'syscheckerrc', 'mouse']\n    >>> f['lm_sensors']\n    '/etc/sysconfig/lm_sensors'\n    >>> print str(f['lm_sensors'])\n    #    /etc/sysconfig/lm_sensors - Defines modules loaded by\n\nOther important pakage mission is find files by the way similar\nto command line find utility::\n\n    >>> import pd.find\n    >>> pd.find.find(\"/etc/sysconfig\",lambda x : x.isreg() and x.check_regex(\".*rc\"))\n    <generator object at 0xb7cca7cc>\n    >>> for item in pd.find.find(\"/etc/sysconfig\",lambda x : x.isreg() and x.check_regex(\".*rc$\")) : \n    ... print item.path\n    ...\n    /etc/sysconfig/xinitrc\n    /etc/sysconfig/syscheckerrc\n    >>>\n\nUsing  pd.find.file.File\n--------------------------\n\nConstructor issued as in example above, with one required\nargument - path to file or directory. There are other\narguments:\n\n    dereference \n        Follow symlinks (is False by default)\n        \nThe File object to provide some useful methods and attributes:\n\n    path\n        Attribute present absolute file path;\n        \n    __str__() \n        Method returns file body if it can;\n        \nOther attributes do condition check and will be described bellow.\n\nIssue pd.find.find utility\n--------------------------\n\nThe pd.find.find utility issued to reqursive search files to satisfy \nsome conditions. Utility accept followed arguments:\n\n    path\n        Directory path to search begin with;\n        \n    condition\n        Condition checked on scanned files and directories. If condition satisfy - object\n        yielded by utility;\n    \n    precondition\n        Condition checked before subdirectory scan. If condition does not satisfy,\n        subdirectory will not be scaned;\n        \n    dereference\n        On true value of this argument searhing will be followed by symbolic\n        link.\n\nUtility return generator of list object find by them.\n\nTests provided by File Object\n-----------------------------\n\n    mtime\n        Return modification time\n        \n    atime\n        Return last access time\n        \n    ctime\n        Return creation time \"\"\"\n        return self.__checktime_(stat.ST_CTIME)\n        \n    newer\n        Return true if object is more newer then input path\n    \n    check_name\n        Return true if object name are equal to input name\n\n    check_path\n        Return true if object path are equal to input path\n        \n    check_path_regex\n        Return true if regexp matched object path\n\n    check_regex\n        Return true if regexp matched object name\n\n    check_iregex\n        Return true if regexp matched object name\n        \n    depth\n        Return current depth on file tree\n\n    dele\n        Delete file by path of current object\n\n    execute\n        Frm will be substituted by substring \"{}\" on path and executed\n        by os.system() call\n\nHo-ho. Sorry my English :)\n    \n\n* Sat Nov 10 2007  Andrey Orlov <cray@neural.ru> 0.0.3\n- Some documentation wrote\n\n* Wed Nov 9 2007 Andrey Orlov <cray@neural.ru> 0.0.2\n- first official release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.dreambot.ru/product/DreamBotOtherReleases/pd.find", "keywords": null, "license": "GPL v2.1", "maintainer": null, "maintainer_email": null, "name": "pd.find", "package_url": "https://pypi.org/project/pd.find/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pd.find/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.dreambot.ru/product/DreamBotOtherReleases/pd.find"}, "release_url": "https://pypi.org/project/pd.find/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Multipurpose module used to access filesystem items", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            Short module description<br>=========================<br><br>Module pd.find present simple way use filesystem<br>to search and read files on it. File system using<br>showed as simple as using ordinal dict::<br><br>    &gt;&gt;&gt; import pd.find<br>    &gt;&gt;&gt; f=pd.find.file.File(\"/etc/sysconfig\")<br>    &gt;&gt;&gt; f<br>    '/etc/sysconfig'<br>    &gt;&gt;&gt; f.keys()<br>    ['harddisk', 'lm_sensors', 'ipw3945d~', 'syscheckerrc', 'mouse']<br>    &gt;&gt;&gt; f['lm_sensors']<br>    '/etc/sysconfig/lm_sensors'<br>    &gt;&gt;&gt; print str(f['lm_sensors'])<br>    #    /etc/sysconfig/lm_sensors - Defines modules loaded by<br><br>Other important pakage mission is find files by the way similar<br>to command line find utility::<br><br>    &gt;&gt;&gt; import pd.find<br>    &gt;&gt;&gt; pd.find.find(\"/etc/sysconfig\",lambda x : x.isreg() and x.check_regex(\".*rc\"))<br>    &lt;generator object at 0xb7cca7cc&gt;<br>    &gt;&gt;&gt; for item in pd.find.find(\"/etc/sysconfig\",lambda x : x.isreg() and x.check_regex(\".*rc$\")) : <br>    ... print item.path<br>    ...<br>    /etc/sysconfig/xinitrc<br>    /etc/sysconfig/syscheckerrc<br>    &gt;&gt;&gt;<br><br>Using  pd.find.file.File<br>--------------------------<br><br>Constructor issued as in example above, with one required<br>argument - path to file or directory. There are other<br>arguments:<br><br>    dereference <br>        Follow symlinks (is False by default)<br>        <br>The File object to provide some useful methods and attributes:<br><br>    path<br>        Attribute present absolute file path;<br>        <br>    __str__() <br>        Method returns file body if it can;<br>        <br>Other attributes do condition check and will be described bellow.<br><br>Issue pd.find.find utility<br>--------------------------<br><br>The pd.find.find utility issued to reqursive search files to satisfy <br>some conditions. Utility accept followed arguments:<br><br>    path<br>        Directory path to search begin with;<br>        <br>    condition<br>        Condition checked on scanned files and directories. If condition satisfy - object<br>        yielded by utility;<br>    <br>    precondition<br>        Condition checked before subdirectory scan. If condition does not satisfy,<br>        subdirectory will not be scaned;<br>        <br>    dereference<br>        On true value of this argument searhing will be followed by symbolic<br>        link.<br><br>Utility return generator of list object find by them.<br><br>Tests provided by File Object<br>-----------------------------<br><br>    mtime<br>        Return modification time<br>        <br>    atime<br>        Return last access time<br>        <br>    ctime<br>        Return creation time \"\"\"<br>        return self.__checktime_(stat.ST_CTIME)<br>        <br>    newer<br>        Return true if object is more newer then input path<br>    <br>    check_name<br>        Return true if object name are equal to input name<br><br>    check_path<br>        Return true if object path are equal to input path<br>        <br>    check_path_regex<br>        Return true if regexp matched object path<br><br>    check_regex<br>        Return true if regexp matched object name<br><br>    check_iregex<br>        Return true if regexp matched object name<br>        <br>    depth<br>        Return current depth on file tree<br><br>    dele<br>        Delete file by path of current object<br><br>    execute<br>        Frm will be substituted by substring \"{}\" on path and executed<br>        by os.system() call<br><br>Ho-ho. Sorry my English :)<br>    <br><br>* Sat Nov 10 2007  Andrey Orlov &lt;cray@neural.ru&gt; 0.0.3<br>- Some documentation wrote<br><br>* Wed Nov 9 2007 Andrey Orlov &lt;cray@neural.ru&gt; 0.0.2<br>- first official release\n          </div>"}, "last_serial": 796112, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "5993baf3b630852689c17317b405fc30", "sha256": "0bf826f95d7eee1fc2f6b506e510e9e4fd505e174bb1dd15b2784fd50aabbe57"}, "downloads": -1, "filename": "pd.find-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5993baf3b630852689c17317b405fc30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6665, "upload_time": "2007-11-10T19:10:08", "upload_time_iso_8601": "2007-11-10T19:10:08Z", "url": "https://files.pythonhosted.org/packages/91/fb/4d43680848a1a00b6bcf26e01cb333ad14d7ac025cee852b17f8b79075eb/pd.find-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5993baf3b630852689c17317b405fc30", "sha256": "0bf826f95d7eee1fc2f6b506e510e9e4fd505e174bb1dd15b2784fd50aabbe57"}, "downloads": -1, "filename": "pd.find-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5993baf3b630852689c17317b405fc30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6665, "upload_time": "2007-11-10T19:10:08", "upload_time_iso_8601": "2007-11-10T19:10:08Z", "url": "https://files.pythonhosted.org/packages/91/fb/4d43680848a1a00b6bcf26e01cb333ad14d7ac025cee852b17f8b79075eb/pd.find-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:12 2020"}