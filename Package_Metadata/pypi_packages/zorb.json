{"info": {"author": "Somatic Labs", "author_email": "developers@somaticlabs.io", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Human Machine Interfaces"], "description": "# ZorbPy\n\n*Python library for integrating with the [Somatic Zorb Engine](https://zorbtouch.com)*\n\n[![license](https://img.shields.io/github/license/mashape/apistatus.svg)](https://github.com/SomaticLabs/ZorbPy/blob/master/LICENSE)\n[![Twitter](https://img.shields.io/badge/twitter-@SomaticLabs-orange.svg?style=flat)](http://twitter.com/SomaticLabs)\n\n## Installation\n\nFirst install the [Adafruit BluefruitLE library](https://github.com/adafruit/Adafruit_Python_BluefruitLE).\n\nPlease note that this library only currently supports macOS and Linux, as Windows is not currently supported by the [underlying BLE](https://github.com/adafruit/Adafruit_Python_BluefruitLE) package used for this library.\n\nAfter installing the BluefruitLE library, installation of ZorbPy using [pip](https://pypi.org/project/pip/) is simple:\n\n```sh\npip install zorb\n```\n\n\n## Library Usage\n\nFor a quick example on how to use the ZorbPy library, please reference [example.py](https://github.com/SomaticLabs/ZorbPy/blob/master/example.py).\n\nTo use the ZorbPy library, you must wrap the functionality of your program in a function that is passed to the `zorb.run()` function call.\n\nAny usage of the functions provided by this library outside of the process started by `zorb.run()` will produce error behavior.\n\n\nThe ZorbPy library provides three main functionalities:\n\n- connecting to advertising Zorb devices\n\n- triggering presets on the Zorb device\n\n- directly controlling actuator intensity on the Zorb device\n\n\nTo connect to an advertising Zorb device:\n```python\nzorb.connect()\n```\n\n\nTo trigger one of the available presets:\n```python\nzorb.triggerPattern(zorb.POINT_LEFT)\n```\n\n*Note that preset haptic emojis are exist for the following emojis:*\n\n\ud83c\udf8a, \ud83d\udc48, \ud83d\udc49, \ud83e\udd1b, \ud83e\udd1c, \u23ee\ufe0f, \u23ed\ufe0f, \ud83d\ude4c, \ud83d\udc4b, \ud83d\ude2f, \ud83d\ude33, \ud83d\ude2c, \ud83d\ude0a, \ud83d\ude04, \ud83e\udd23\n\n\nTo directly set the actuator values:\n```python\nduration = 100\ntop_left = 0\ntop_right = 0\nbottom_left = 25\nbottom_right = 25\n\nzorb.writeActuators(duration, top_left, top_right, bottom_left, bottom_right)\n```\n\n\nBelow is a more comprehensive example of a simple program that connects to a Zorb device, plays a confetti pattern upon successful connection, and then updates actuator values based on some hypothetical sensor output.\n```python\nimport zorb\n\ndef mainloop():\n    # perform initial connection to Zorb device\n    zorb.connect()\n\n    # trigger confetti effect upon successful connection\n    zorb.triggerPattern(zorb.CONFETTI)\n\n    # enter infinte loop for updating Zorb device\n    while True:\n        top_left = hypothetical_sensor_1.val()\n        top_right = hypothetical_sensor_2.val()\n        bottom_left = hypothetical_sensor_3.val()\n        bottom_right = hypothetical_sensor_4.val()\n        zorb.writeActuators(10, top_left, top_right, bottom_left, bottom_right)\n        time.sleep(0.01)\n\n\ndef main():\n    zorb.run(mainloop)\n\n\nif __name__ == '__main__':\n    main()\n```\n\n## Style Guide\n\nContributions to this project should conform to this [Python Style Guide](https://www.python.org/dev/peps/pep-0008/).\n\n## License\n\nZorbPy is released under the [MIT license](https://github.com/SomaticLabs/ZorbPy/blob/master/LICENSE).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SomaticLabs/ZorbPy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "zorb", "package_url": "https://pypi.org/project/zorb/", "platform": "", "project_url": "https://pypi.org/project/zorb/", "project_urls": {"Homepage": "https://github.com/SomaticLabs/ZorbPy"}, "release_url": "https://pypi.org/project/zorb/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Python SDK for the Zorb Engine", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ZorbPy</h1>\n<p><em>Python library for integrating with the <a href=\"https://zorbtouch.com\" rel=\"nofollow\">Somatic Zorb Engine</a></em></p>\n<p><a href=\"https://github.com/SomaticLabs/ZorbPy/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/36686084675cebbeff3809cb9d8291b8e6ebd672/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e737667\"></a>\n<a href=\"http://twitter.com/SomaticLabs\" rel=\"nofollow\"><img alt=\"Twitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4af5e03884085ccc17006a65389ee6557bd80310/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f747769747465722d40536f6d617469634c6162732d6f72616e67652e7376673f7374796c653d666c6174\"></a></p>\n<h2>Installation</h2>\n<p>First install the <a href=\"https://github.com/adafruit/Adafruit_Python_BluefruitLE\" rel=\"nofollow\">Adafruit BluefruitLE library</a>.</p>\n<p>Please note that this library only currently supports macOS and Linux, as Windows is not currently supported by the <a href=\"https://github.com/adafruit/Adafruit_Python_BluefruitLE\" rel=\"nofollow\">underlying BLE</a> package used for this library.</p>\n<p>After installing the BluefruitLE library, installation of ZorbPy using <a href=\"https://pypi.org/project/pip/\" rel=\"nofollow\">pip</a> is simple:</p>\n<pre>pip install zorb\n</pre>\n<h2>Library Usage</h2>\n<p>For a quick example on how to use the ZorbPy library, please reference <a href=\"https://github.com/SomaticLabs/ZorbPy/blob/master/example.py\" rel=\"nofollow\">example.py</a>.</p>\n<p>To use the ZorbPy library, you must wrap the functionality of your program in a function that is passed to the <code>zorb.run()</code> function call.</p>\n<p>Any usage of the functions provided by this library outside of the process started by <code>zorb.run()</code> will produce error behavior.</p>\n<p>The ZorbPy library provides three main functionalities:</p>\n<ul>\n<li>\n<p>connecting to advertising Zorb devices</p>\n</li>\n<li>\n<p>triggering presets on the Zorb device</p>\n</li>\n<li>\n<p>directly controlling actuator intensity on the Zorb device</p>\n</li>\n</ul>\n<p>To connect to an advertising Zorb device:</p>\n<pre><span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n</pre>\n<p>To trigger one of the available presets:</p>\n<pre><span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">triggerPattern</span><span class=\"p\">(</span><span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">POINT_LEFT</span><span class=\"p\">)</span>\n</pre>\n<p><em>Note that preset haptic emojis are exist for the following emojis:</em></p>\n<p>\ud83c\udf8a, \ud83d\udc48, \ud83d\udc49, \ud83e\udd1b, \ud83e\udd1c, \u23ee\ufe0f, \u23ed\ufe0f, \ud83d\ude4c, \ud83d\udc4b, \ud83d\ude2f, \ud83d\ude33, \ud83d\ude2c, \ud83d\ude0a, \ud83d\ude04, \ud83e\udd23</p>\n<p>To directly set the actuator values:</p>\n<pre><span class=\"n\">duration</span> <span class=\"o\">=</span> <span class=\"mi\">100</span>\n<span class=\"n\">top_left</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">top_right</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">bottom_left</span> <span class=\"o\">=</span> <span class=\"mi\">25</span>\n<span class=\"n\">bottom_right</span> <span class=\"o\">=</span> <span class=\"mi\">25</span>\n\n<span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">writeActuators</span><span class=\"p\">(</span><span class=\"n\">duration</span><span class=\"p\">,</span> <span class=\"n\">top_left</span><span class=\"p\">,</span> <span class=\"n\">top_right</span><span class=\"p\">,</span> <span class=\"n\">bottom_left</span><span class=\"p\">,</span> <span class=\"n\">bottom_right</span><span class=\"p\">)</span>\n</pre>\n<p>Below is a more comprehensive example of a simple program that connects to a Zorb device, plays a confetti pattern upon successful connection, and then updates actuator values based on some hypothetical sensor output.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">zorb</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">mainloop</span><span class=\"p\">():</span>\n    <span class=\"c1\"># perform initial connection to Zorb device</span>\n    <span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># trigger confetti effect upon successful connection</span>\n    <span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">triggerPattern</span><span class=\"p\">(</span><span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">CONFETTI</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># enter infinte loop for updating Zorb device</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">top_left</span> <span class=\"o\">=</span> <span class=\"n\">hypothetical_sensor_1</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">()</span>\n        <span class=\"n\">top_right</span> <span class=\"o\">=</span> <span class=\"n\">hypothetical_sensor_2</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">()</span>\n        <span class=\"n\">bottom_left</span> <span class=\"o\">=</span> <span class=\"n\">hypothetical_sensor_3</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">()</span>\n        <span class=\"n\">bottom_right</span> <span class=\"o\">=</span> <span class=\"n\">hypothetical_sensor_4</span><span class=\"o\">.</span><span class=\"n\">val</span><span class=\"p\">()</span>\n        <span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">writeActuators</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">top_left</span><span class=\"p\">,</span> <span class=\"n\">top_right</span><span class=\"p\">,</span> <span class=\"n\">bottom_left</span><span class=\"p\">,</span> <span class=\"n\">bottom_right</span><span class=\"p\">)</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.01</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">zorb</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">mainloop</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<h2>Style Guide</h2>\n<p>Contributions to this project should conform to this <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">Python Style Guide</a>.</p>\n<h2>License</h2>\n<p>ZorbPy is released under the <a href=\"https://github.com/SomaticLabs/ZorbPy/blob/master/LICENSE\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 3889566, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "04344850300147424ff69c65c9553d1d", "sha256": "c2b29473a30af8580fa275013a099b3b6d25d49da7f9b8cdd9ca1773dfdd2212"}, "downloads": -1, "filename": "zorb-0.1.4.tar.gz", "has_sig": false, "md5_digest": "04344850300147424ff69c65c9553d1d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5434, "upload_time": "2018-05-22T23:17:22", "upload_time_iso_8601": "2018-05-22T23:17:22.354766Z", "url": "https://files.pythonhosted.org/packages/d2/fd/80381eb8c27b9a37b1c5aa41c0f61e5737277a65ae5b51c96131523f980c/zorb-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "35df14f92c42d177baee065ebe24fc6e", "sha256": "8d84990ffe5d7a693dfafca7be835305fa7def52fb2a41372a3be91dcd0c0d1b"}, "downloads": -1, "filename": "zorb-0.1.5.tar.gz", "has_sig": false, "md5_digest": "35df14f92c42d177baee065ebe24fc6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5418, "upload_time": "2018-05-22T23:21:37", "upload_time_iso_8601": "2018-05-22T23:21:37.395016Z", "url": "https://files.pythonhosted.org/packages/3e/ad/8408ab815932ec9ee3c7607da3a63701ae0a75f41ec3f5f9e86122a63cd5/zorb-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35df14f92c42d177baee065ebe24fc6e", "sha256": "8d84990ffe5d7a693dfafca7be835305fa7def52fb2a41372a3be91dcd0c0d1b"}, "downloads": -1, "filename": "zorb-0.1.5.tar.gz", "has_sig": false, "md5_digest": "35df14f92c42d177baee065ebe24fc6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5418, "upload_time": "2018-05-22T23:21:37", "upload_time_iso_8601": "2018-05-22T23:21:37.395016Z", "url": "https://files.pythonhosted.org/packages/3e/ad/8408ab815932ec9ee3c7607da3a63701ae0a75f41ec3f5f9e86122a63cd5/zorb-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:11:38 2020"}