{"info": {"author": "Antoine Gagne", "author_email": "antoine.gagne.2@ulaval.ca", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Topic :: Multimedia :: Sound/Audio"], "description": "===========\ncmus-notify\n===========\n\n.. image:: https://travis-ci.org/AntoineGagne/cmus-notify.svg?branch=master\n    :target: https://travis-ci.org/AntoineGagne/cmus-notify\n\n.. image:: https://img.shields.io/pypi/v/cmus-notify.svg\n        :target: https://pypi.python.org/pypi/cmus-notify\n\n:Author: `Antoine Gagn\u00e9 <antoine.gagne.2@ulaval.ca>`_\n\n.. contents::\n    :backlinks: none\n\n.. sectnum::\n\nRequirements\n============\n\nTo install this program, you must have the following:\n\n- ``python 3.5+``\n- The Python library ``notify2``\n- ``notify-send``\n\nInstallation\n============\n\nTo install this program, you can simply run the following command:\n\n.. code-block:: sh\n\n    python setup.py install\n\nThis program can also be found on `Pypi <https://pypi.python.org/pypi?:action=display&name=cmus-notify>`_ which means you can install it by downloading the wheel or by using the following command:\n\n.. code-block:: sh\n\n    pip install cmus-notify\n\nYou can check if it installed correctly by doing the following command:\n\n.. code-block:: sh\n\n    cmus_notify -h\n\nIt should display a message.\n\nHooking To Cmus\n===============\n\nTo hook this program to ``cmus``, you have to create a shell script that have the following lines in it:\n\n.. code-block:: sh\n\n    #! /bin/sh\n\n    cmus_notify \"$*\" &\n\nThen, you must make the file executable by using the following command (assuming your script's name is ``cmus_notify.sh``):\n\n.. code-block:: sh\n\n    chmod +x cmus_notify.sh\n\nFinally, once you are in ``cmus``, you can add the hook by using the following command:\n\n.. code-block:: vim\n\n    :set status_display_program=<path-to-the-shell-script>\n\nCustomization\n=============\n\nIf you want you can specify the formatting of the notification by specifying format strings. For example:\n\n.. code-block:: sh\n\n    #! /bin/sh\n\n    cmus_notify --title \"Now playing: {title} by {artist}\" --body \"$(printf \"<b>Album:</b> {album}\\n<b>Duration:</b> {duration}\")\" \"$*\"\n\nYou can also specify a configuration to read these values from. By default, the program will search for a configuration file named ``~/.cmus-notify``. It has the following format:\n\n.. code-block:: ini\n\n    [notifications]\n        application_name = Cmus\n        custom_notification = /home/user/.cmus/custom_notification.py\n\n    [format]\n        title = Now playing: {title} by {artist}\n        body = <b>Album:</b> {album}\n               <b>Duration:</b> {duration}\n\nThe options accepts the same values as their command-line options equivalent.\n\nOptions\n=======\n\nTo view the full options, you can run the following command:\n\n.. code-block:: sh\n\n    cmus_notify --help\n\nwhich will display the following prompt:\n\n.. code-block:: text\n\n    usage: cmus_notify [-h] [-a APPLICATION_NAME] [-b BODY_FORMAT_STRING]\n                       [-t TITLE_FORMAT_STRING] [-f CONFIGURATION_FILE]\n                       [-c CUSTOM_NOTIFICATION]\n                       INFORMATION\n\n    Display a notification about Cmus's current status\n\n    positional arguments:\n      INFORMATION           Parse the given information\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -a APPLICATION_NAME, --application_name APPLICATION_NAME\n                            The name of the application\n      -b BODY_FORMAT_STRING, --body BODY_FORMAT_STRING\n                            A format string that can be specified to tell the\n                            software how to format the body. The syntax is the\n                            same as Python's. The available options are specified\n                            at the end of this help message. (i.e. 'Artist:\n                            {artist}')\n      -t TITLE_FORMAT_STRING, --title TITLE_FORMAT_STRING\n                            A format string that can be specified to tell the\n                            software how to format the title. The syntax is the\n                            same as Python's. The available options are specified\n                            at the end of this help message. (i.e. 'Now playing:\n                            {title}')\n      -f CONFIGURATION_FILE, --configuration_file CONFIGURATION_FILE\n                            The path to the configuration file. If it is not\n                            specified, the program will use the default values of\n                            the other options.\n      -c CUSTOM_NOTIFICATION, --custom_notification CUSTOM_NOTIFICATION\n                            The path to a custom implementation of the\n                            notification class. If it is not specified, the\n                            standard implementation will be used (the one using\n                            notify2).\n\n    Format String Parameters\n    ========================\n\n    The available arguments to the format strings are the following:\n\n      - album: The song's album\n      - albumartist: The song's album's artist\n      - artist: The song's artist\n      - date: The song's release date\n      - discnumber: The song's disc's number\n      - duration: The song's duration\n      - file: The song's file's path\n      - status: Cmus current status\n      - title: The song's title\n      - tracknumber: The song's track number\n\nDocumentation\n=============\n\nThe project's documentation can be found `here <http://pythonhosted.org/cmus-notify/>`_.", "description_content_type": "", "docs_url": "https://pythonhosted.org/cmus-notify/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AntoineGagne/cmus-notify", "keywords": "utilities application cli hook cmus notifications", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cmus-notify", "package_url": "https://pypi.org/project/cmus-notify/", "platform": "", "project_url": "https://pypi.org/project/cmus-notify/", "project_urls": {"Homepage": "https://github.com/AntoineGagne/cmus-notify"}, "release_url": "https://pypi.org/project/cmus-notify/1.4.1/", "requires_dist": null, "requires_python": "", "summary": "A package for displaying Cmus current status in notifications", "version": "1.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/AntoineGagne/cmus-notify\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/AntoineGagne/cmus-notify.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5756b68d84e9814ed3e70be1790d1868e1675a3f/68747470733a2f2f7472617669732d63692e6f72672f416e746f696e654761676e652f636d75732d6e6f746966792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/cmus-notify\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/cmus-notify.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f598272b164a332c32a6445b294bfb564ad9cf85/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636d75732d6e6f746966792e737667\"></a>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td><a href=\"mailto:antoine.gagne.2%40ulaval.ca\">Antoine Gagn\u00e9</a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#requirements\" id=\"id1\" rel=\"nofollow\">1\u00a0\u00a0\u00a0Requirements</a></li>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">2\u00a0\u00a0\u00a0Installation</a></li>\n<li><a href=\"#hooking-to-cmus\" id=\"id3\" rel=\"nofollow\">3\u00a0\u00a0\u00a0Hooking To Cmus</a></li>\n<li><a href=\"#customization\" id=\"id4\" rel=\"nofollow\">4\u00a0\u00a0\u00a0Customization</a></li>\n<li><a href=\"#options\" id=\"id5\" rel=\"nofollow\">5\u00a0\u00a0\u00a0Options</a></li>\n<li><a href=\"#documentation\" id=\"id6\" rel=\"nofollow\">6\u00a0\u00a0\u00a0Documentation</a></li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>1\u00a0\u00a0\u00a0Requirements</h2>\n<p>To install this program, you must have the following:</p>\n<ul>\n<li><tt>python 3.5+</tt></li>\n<li>The Python library <tt>notify2</tt></li>\n<li><tt><span class=\"pre\">notify-send</span></tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>2\u00a0\u00a0\u00a0Installation</h2>\n<p>To install this program, you can simply run the following command:</p>\n<pre>python setup.py install\n</pre>\n<p>This program can also be found on <a href=\"https://pypi.python.org/pypi?:action=display&amp;name=cmus-notify\" rel=\"nofollow\">Pypi</a> which means you can install it by downloading the wheel or by using the following command:</p>\n<pre>pip install cmus-notify\n</pre>\n<p>You can check if it installed correctly by doing the following command:</p>\n<pre>cmus_notify -h\n</pre>\n<p>It should display a message.</p>\n</div>\n<div id=\"hooking-to-cmus\">\n<h2>3\u00a0\u00a0\u00a0Hooking To Cmus</h2>\n<p>To hook this program to <tt>cmus</tt>, you have to create a shell script that have the following lines in it:</p>\n<pre><span class=\"ch\">#! /bin/sh\n</span>\ncmus_notify <span class=\"s2\">\"</span><span class=\"nv\">$*</span><span class=\"s2\">\"</span> <span class=\"p\">&amp;</span>\n</pre>\n<p>Then, you must make the file executable by using the following command (assuming your script\u2019s name is <tt>cmus_notify.sh</tt>):</p>\n<pre>chmod +x cmus_notify.sh\n</pre>\n<p>Finally, once you are in <tt>cmus</tt>, you can add the hook by using the following command:</p>\n<pre><span class=\"p\">:</span><span class=\"k\">set</span> status_display_program<span class=\"p\">=&lt;</span><span class=\"nb\">path</span><span class=\"p\">-</span><span class=\"k\">to</span><span class=\"p\">-</span>the<span class=\"p\">-</span><span class=\"k\">shell</span><span class=\"p\">-</span><span class=\"k\">script</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"customization\">\n<h2>4\u00a0\u00a0\u00a0Customization</h2>\n<p>If you want you can specify the formatting of the notification by specifying format strings. For example:</p>\n<pre><span class=\"ch\">#! /bin/sh\n</span>\ncmus_notify --title <span class=\"s2\">\"Now playing: {title} by {artist}\"</span> --body <span class=\"s2\">\"</span><span class=\"k\">$(</span><span class=\"nb\">printf</span> <span class=\"s2\">\"&lt;b&gt;Album:&lt;/b&gt; {album}\\n&lt;b&gt;Duration:&lt;/b&gt; {duration}\"</span><span class=\"k\">)</span><span class=\"s2\">\"</span> <span class=\"s2\">\"</span><span class=\"nv\">$*</span><span class=\"s2\">\"</span>\n</pre>\n<p>You can also specify a configuration to read these values from. By default, the program will search for a configuration file named <tt><span class=\"pre\">~/.cmus-notify</span></tt>. It has the following format:</p>\n<pre><span class=\"k\">[notifications]</span>\n    <span class=\"na\">application_name</span> <span class=\"o\">=</span> <span class=\"s\">Cmus\n    custom_notification = /home/user/.cmus/custom_notification.py</span>\n\n<span class=\"k\">[format]</span>\n    <span class=\"na\">title</span> <span class=\"o\">=</span> <span class=\"s\">Now playing: {title} by {artist}\n    body = &lt;b&gt;Album:&lt;/b&gt; {album}\n           &lt;b&gt;Duration:&lt;/b&gt; {duration}</span>\n</pre>\n<p>The options accepts the same values as their command-line options equivalent.</p>\n</div>\n<div id=\"options\">\n<h2>5\u00a0\u00a0\u00a0Options</h2>\n<p>To view the full options, you can run the following command:</p>\n<pre>cmus_notify --help\n</pre>\n<p>which will display the following prompt:</p>\n<pre>usage: cmus_notify [-h] [-a APPLICATION_NAME] [-b BODY_FORMAT_STRING]\n                   [-t TITLE_FORMAT_STRING] [-f CONFIGURATION_FILE]\n                   [-c CUSTOM_NOTIFICATION]\n                   INFORMATION\n\nDisplay a notification about Cmus's current status\n\npositional arguments:\n  INFORMATION           Parse the given information\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -a APPLICATION_NAME, --application_name APPLICATION_NAME\n                        The name of the application\n  -b BODY_FORMAT_STRING, --body BODY_FORMAT_STRING\n                        A format string that can be specified to tell the\n                        software how to format the body. The syntax is the\n                        same as Python's. The available options are specified\n                        at the end of this help message. (i.e. 'Artist:\n                        {artist}')\n  -t TITLE_FORMAT_STRING, --title TITLE_FORMAT_STRING\n                        A format string that can be specified to tell the\n                        software how to format the title. The syntax is the\n                        same as Python's. The available options are specified\n                        at the end of this help message. (i.e. 'Now playing:\n                        {title}')\n  -f CONFIGURATION_FILE, --configuration_file CONFIGURATION_FILE\n                        The path to the configuration file. If it is not\n                        specified, the program will use the default values of\n                        the other options.\n  -c CUSTOM_NOTIFICATION, --custom_notification CUSTOM_NOTIFICATION\n                        The path to a custom implementation of the\n                        notification class. If it is not specified, the\n                        standard implementation will be used (the one using\n                        notify2).\n\nFormat String Parameters\n========================\n\nThe available arguments to the format strings are the following:\n\n  - album: The song's album\n  - albumartist: The song's album's artist\n  - artist: The song's artist\n  - date: The song's release date\n  - discnumber: The song's disc's number\n  - duration: The song's duration\n  - file: The song's file's path\n  - status: Cmus current status\n  - title: The song's title\n  - tracknumber: The song's track number\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>6\u00a0\u00a0\u00a0Documentation</h2>\n<p>The project\u2019s documentation can be found <a href=\"http://pythonhosted.org/cmus-notify/\" rel=\"nofollow\">here</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6627236, "releases": {"1.2.0": [{"comment_text": "", "digests": {"md5": "115818f87d70ee38db08c7a1b240db82", "sha256": "42d771153d09e8bb46e00e43e7386933985c2f81170c98627a272fb7cf9fa898"}, "downloads": -1, "filename": "cmus_notify-1.2.0-py3.5.egg", "has_sig": false, "md5_digest": "115818f87d70ee38db08c7a1b240db82", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 19665, "upload_time": "2017-04-19T16:11:33", "upload_time_iso_8601": "2017-04-19T16:11:33.449038Z", "url": "https://files.pythonhosted.org/packages/34/4d/5775d7d9b1909b3bb2e52d52f57610f625e82738e9945dda49d99158f42e/cmus_notify-1.2.0-py3.5.egg", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "7fc2c7ec5c3f7f24ecab1025701b2a25", "sha256": "9197307251c64f568ad2ba44ebc96fa09ccc0809c47722bdf5c2e54db8f78ed0"}, "downloads": -1, "filename": "cmus_notify-1.2.2-py3.5.egg", "has_sig": false, "md5_digest": "7fc2c7ec5c3f7f24ecab1025701b2a25", "packagetype": "bdist_egg", "python_version": "3.5", "requires_python": null, "size": 19770, "upload_time": "2017-04-19T16:11:35", "upload_time_iso_8601": "2017-04-19T16:11:35.037403Z", "url": "https://files.pythonhosted.org/packages/36/5e/2fce25f08e5b2a903d808134c8d81904edcce4b1edaf41317fb010ea5ab1/cmus_notify-1.2.2-py3.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2e76bf7996bfe4d25d62091653237b8", "sha256": "983cbc7a4d9352440f4b1b6f3bdd94b373648d5f448fe1764841d873acac755b"}, "downloads": -1, "filename": "cmus_notify-1.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d2e76bf7996bfe4d25d62091653237b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12705, "upload_time": "2017-04-19T16:11:30", "upload_time_iso_8601": "2017-04-19T16:11:30.063863Z", "url": "https://files.pythonhosted.org/packages/63/b4/d7f863f85f7ea468d195da7f2c77c8c80db3bdeab8d62472c0cfcd5a5185/cmus_notify-1.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ccb6dcdf5bc677c7a774b58dea74797", "sha256": "3903809b7959bc9e6eba524d7b9bedab2c3d8c5bd00b7f90353a88aacbf52686"}, "downloads": -1, "filename": "cmus-notify-1.2.2.tar.gz", "has_sig": false, "md5_digest": "4ccb6dcdf5bc677c7a774b58dea74797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8538, "upload_time": "2017-04-19T16:11:36", "upload_time_iso_8601": "2017-04-19T16:11:36.845451Z", "url": "https://files.pythonhosted.org/packages/be/28/d04e959cfc4b43015c2bfc11855efa431440cd97d9aa8da14e31a3bb865d/cmus-notify-1.2.2.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "53bc3c1207ceee4bedeca2c751e614e5", "sha256": "5754116d51170eb7e7751483259a9a53e110d5bfca295f51968e817be4bd901f"}, "downloads": -1, "filename": "cmus-notify-1.3.1.tar.gz", "has_sig": false, "md5_digest": "53bc3c1207ceee4bedeca2c751e614e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8536, "upload_time": "2017-08-31T19:23:06", "upload_time_iso_8601": "2017-08-31T19:23:06.197041Z", "url": "https://files.pythonhosted.org/packages/83/21/15883c786c7d2a440e27c4e22f483854f55c170cfd81aff0870ef52c2705/cmus-notify-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "61178881394dee8f344b2f2ce9549354", "sha256": "dfe152f1e0273d950c3b05b119952f6da558236d8a5ff11d89b0ccc4d168671f"}, "downloads": -1, "filename": "cmus-notify-1.3.2.tar.gz", "has_sig": false, "md5_digest": "61178881394dee8f344b2f2ce9549354", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8559, "upload_time": "2018-06-05T23:27:25", "upload_time_iso_8601": "2018-06-05T23:27:25.711768Z", "url": "https://files.pythonhosted.org/packages/fd/6a/98b72021de340c2aef553a8a4699a8dd0d3e24b5ec8f1f25e10e94c5038e/cmus-notify-1.3.2.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "e4813a1f3b566cbed03795516e40f43c", "sha256": "6e4a3125eb026672964bad5d322124df0d868b766747ca68c76369768e0726fc"}, "downloads": -1, "filename": "cmus-notify-1.4.0.tar.gz", "has_sig": false, "md5_digest": "e4813a1f3b566cbed03795516e40f43c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7782, "upload_time": "2019-05-17T21:33:01", "upload_time_iso_8601": "2019-05-17T21:33:01.486104Z", "url": "https://files.pythonhosted.org/packages/68/92/15258efc93381715bb1db4ad1391b291efe3682bf06ac632e86dbde1d4d8/cmus-notify-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "9c42f44b9113dc9ac43c549d23098d04", "sha256": "8ac845a6596c259286802fd983c34ab3cee9345b5892cf936448e43fc7bd8380"}, "downloads": -1, "filename": "cmus-notify-1.4.1.tar.gz", "has_sig": false, "md5_digest": "9c42f44b9113dc9ac43c549d23098d04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7858, "upload_time": "2020-02-14T00:05:05", "upload_time_iso_8601": "2020-02-14T00:05:05.656596Z", "url": "https://files.pythonhosted.org/packages/de/f0/b8783781a59dfe85ea71ff069dbd8fa68533c9fc2f585d03ff39ca4eb044/cmus-notify-1.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c42f44b9113dc9ac43c549d23098d04", "sha256": "8ac845a6596c259286802fd983c34ab3cee9345b5892cf936448e43fc7bd8380"}, "downloads": -1, "filename": "cmus-notify-1.4.1.tar.gz", "has_sig": false, "md5_digest": "9c42f44b9113dc9ac43c549d23098d04", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7858, "upload_time": "2020-02-14T00:05:05", "upload_time_iso_8601": "2020-02-14T00:05:05.656596Z", "url": "https://files.pythonhosted.org/packages/de/f0/b8783781a59dfe85ea71ff069dbd8fa68533c9fc2f585d03ff39ca4eb044/cmus-notify-1.4.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:29 2020"}