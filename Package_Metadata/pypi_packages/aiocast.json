{"info": {"author": "Philippe Duval", "author_email": "t4rk@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# aiocast\n\nCast videos to chromecast devices from the terminal.\n\n## Install\n\n`$ pip install aiocast`\n\n## Usage\n\n- `$ aiocast play video.mp4`\n- `$ aiocast list-devices`\n- `$ aiocast device-info \"Home\"`\n\n```\n$ aiocast play --help                                                                                                                                                                                                               \ue0b2 \u2714 \ue0b2 19:31 \uf017\nusage: aiocast play [-h] [-d DEVICE_NAME] [-p PORT] [-t TIMEOUT] [-i IDLE]\n                    [--local-ip LOCAL_IP] [--mimetype MIMETYPE]\n                    media\n\nCast a video\n\npositional arguments:\n  media                 Path to the video to cast.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICE_NAME, --device-name DEVICE_NAME\n                        The target cast device name (default: None)\n  -p PORT, --port PORT  Port of the local cast server (default: None)\n  -t TIMEOUT, --timeout TIMEOUT\n                        Timeout after which the program will close if stuck on\n                        buffering. (default: 60)\n  -i IDLE, --idle IDLE  Time to stay idle after a stop or media ends (default:\n                        2.5)\n  --local-ip LOCAL_IP   Local ip to use, otherwise get the first private ip\n                        available. (default: None)\n  --mimetype MIMETYPE   Set the mimetype of the media, otherwise will guess.\n                        (default: None)\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/T4rk1n/aiocast", "keywords": "cli,async,chromecast", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aiocast", "package_url": "https://pypi.org/project/aiocast/", "platform": "", "project_url": "https://pypi.org/project/aiocast/", "project_urls": {"Homepage": "https://github.com/T4rk1n/aiocast"}, "release_url": "https://pypi.org/project/aiocast/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Cast videos to chromecast from the commandline.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aiocast</h1>\n<p>Cast videos to chromecast devices from the terminal.</p>\n<h2>Install</h2>\n<p><code>$ pip install aiocast</code></p>\n<h2>Usage</h2>\n<ul>\n<li><code>$ aiocast play video.mp4</code></li>\n<li><code>$ aiocast list-devices</code></li>\n<li><code>$ aiocast device-info \"Home\"</code></li>\n</ul>\n<pre><code>$ aiocast play --help                                                                                                                                                                                                               \ue0b2 \u2714 \ue0b2 19:31 \uf017\nusage: aiocast play [-h] [-d DEVICE_NAME] [-p PORT] [-t TIMEOUT] [-i IDLE]\n                    [--local-ip LOCAL_IP] [--mimetype MIMETYPE]\n                    media\n\nCast a video\n\npositional arguments:\n  media                 Path to the video to cast.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -d DEVICE_NAME, --device-name DEVICE_NAME\n                        The target cast device name (default: None)\n  -p PORT, --port PORT  Port of the local cast server (default: None)\n  -t TIMEOUT, --timeout TIMEOUT\n                        Timeout after which the program will close if stuck on\n                        buffering. (default: 60)\n  -i IDLE, --idle IDLE  Time to stay idle after a stop or media ends (default:\n                        2.5)\n  --local-ip LOCAL_IP   Local ip to use, otherwise get the first private ip\n                        available. (default: None)\n  --mimetype MIMETYPE   Set the mimetype of the media, otherwise will guess.\n                        (default: None)\n\n</code></pre>\n\n          </div>"}, "last_serial": 5437692, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "13e111f5f1a368b18a6bcb8d79285c61", "sha256": "2bd42d8993bd4951f9c7545b0c0ffd46583b50912e253154541dec31c873335d"}, "downloads": -1, "filename": "aiocast-0.0.1.tar.gz", "has_sig": false, "md5_digest": "13e111f5f1a368b18a6bcb8d79285c61", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7030, "upload_time": "2019-05-09T01:27:02", "upload_time_iso_8601": "2019-05-09T01:27:02.902780Z", "url": "https://files.pythonhosted.org/packages/df/cc/d7ea7bb7e34d52fe77bcb1cce5fc46c33a9411118f50073d5cae4d2515e2/aiocast-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e9e5203caa262b14c4bfe8f86ff1f788", "sha256": "f1329f97f7b6a968de903b0f4e5a6b7877819c80a94d6d9224fe6dd4b644f830"}, "downloads": -1, "filename": "aiocast-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e9e5203caa262b14c4bfe8f86ff1f788", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7055, "upload_time": "2019-05-10T01:47:27", "upload_time_iso_8601": "2019-05-10T01:47:27.877228Z", "url": "https://files.pythonhosted.org/packages/fb/e0/0d3998a49c5ccaf57c007336ab6c9a32de44b58c9a4cc1c796912d1aa508/aiocast-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "1ef6951e5570c6f8b23bb20b4f0aedbf", "sha256": "67c7007ff0d278e09aeff5b7fdebb828d888cde6644d85f8a0f5b61eab5d11a3"}, "downloads": -1, "filename": "aiocast-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1ef6951e5570c6f8b23bb20b4f0aedbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7365, "upload_time": "2019-06-02T22:23:30", "upload_time_iso_8601": "2019-06-02T22:23:30.740715Z", "url": "https://files.pythonhosted.org/packages/b6/9f/555783d0dd01223e69c81e1138296a362cb0b1722400d3bf83da87b405ef/aiocast-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "0ccdfaa0d397cdde010a370dcbbbe5f0", "sha256": "99064e08142854230b0f2f4dafe98de20278a4e907dc529e7a35883290025c84"}, "downloads": -1, "filename": "aiocast-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0ccdfaa0d397cdde010a370dcbbbe5f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7376, "upload_time": "2019-06-23T16:19:31", "upload_time_iso_8601": "2019-06-23T16:19:31.721231Z", "url": "https://files.pythonhosted.org/packages/d5/46/391b5bb21b85526dfa34113f0cedb14d475c2a09437b7034d2a0b4ab225b/aiocast-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0ccdfaa0d397cdde010a370dcbbbe5f0", "sha256": "99064e08142854230b0f2f4dafe98de20278a4e907dc529e7a35883290025c84"}, "downloads": -1, "filename": "aiocast-0.0.4.tar.gz", "has_sig": false, "md5_digest": "0ccdfaa0d397cdde010a370dcbbbe5f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7376, "upload_time": "2019-06-23T16:19:31", "upload_time_iso_8601": "2019-06-23T16:19:31.721231Z", "url": "https://files.pythonhosted.org/packages/d5/46/391b5bb21b85526dfa34113f0cedb14d475c2a09437b7034d2a0b4ab225b/aiocast-0.0.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:44 2020"}