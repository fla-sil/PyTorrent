{"info": {"author": "Applause Team", "author_email": "eng.warsaw@applause.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: System :: Shells", "Topic :: System :: Software Distribution", "Topic :: Utilities"], "description": "Applause Tool\n=============\n\nApplause Tool is a command line package aimed at making it easy to connect\nvarious continuous integration platforms with Applause Inc. services.\n\n\nSetup\n-----\n\n\nPrerequisities\n--------------\n\nPython\n~~~~~~\nApplause Tool requires Python2.6+ interpreter to be installed on your\nmachine. If you are using Linux/Unix/MacOSX system this prerequisit is already met.\nPlease consult your platform specific Python installation scripts for more info.\n\nPIP\n~~~\nPython 2.7.11 and later (on the python2 series), and Python 3.4 and later include pip by default, so you may have pip already.\nIf not please consult this page for a ready to use recipe to install it on your local machine:\nhttps://pip.pypa.io/en/latest/installing.html#install-pip\n\n\nInstallation\n------------\n\n\nTo install applause-tool, run:\n\n.. code-block:: bash\n\n    $ pip install applause-tool\n\n\n\nTo verify your installation please run the following command in your terminal:\n\n\n.. code-block:: bash\n\n    $ applause-tool --version\n\n\n\nUpdating\n--------\n\nTo update applause-tool, run:\n\n.. code-block:: bash\n\n    $ pip install applause-tool --upgrade\n\n\nUsage\n=====\n\nLogin\n-----\n\nBefore running product specific commands you need to log in with your Applause Account.\nIn case you don't have one please consult you Applause project manager.\n\n\nDuring the process you will be asked to provide your username and password. You can choose to store the password\nin your home directory by using the `--store-password` flag (or just `-s`). If you don't, the requested OAuth\ntoken stored in your home directory will only allow you to access Applause services for 2 weeks and it will not\nrenew itself automatically. You will be asked to log in again after it expires.\n\nYou can also choose to provide the username and password in environment variables APPLAUSE_USER and APPLAUSE_PASSWORD.\nPlease note that using the  `--store-password` flag should be used with caution, as the password is kept in an unencrypted way.\nIf you're concerned with the security of your password and still want to use our tool e.g. in Continuous Integration\nscenarios, we advise to pass the credentials via environment variables.\n\nIf you don't pass the credentials in any of the aforementioned ways, you will be prompted for them.\n\n.. code-block:: bash\n\n    $ export APPLAUSE_USERNAME=<user>\n    $ export APPLAUSE_PASSWORD=<password>\n    $ applause-tool login\n    # OR\n    $ applause-tool login -u username -p password\n    # OR\n    $ applause-tool login -u username -p password --store-password\n    # OR\n    $ applause-tool login -u username -p password -s\n    # OR\n    $ applause-tool login --store-password\n\n\nLogout\n------\n\nIf you wish to remove the Applause Tool from your OS please make sure to log out from you existing\nsession. You can do that by typing:\n\n.. code-block:: bash\n\n    $ applause-tool logout\n\n\nAccount\n-------\n\nAt any point in time you can check who is the actively logged in user by running:\n\n.. code-block:: bash\n\n    $ applause-tool account\n\n\nApplause SDK\n------------\n\nIn order to upload & distribute your build please run the following command in your terminal:\n\n\n.. code-block:: bash\n\n    $ applause-tool sdk distribute COMPANY_ID APP_ID /path/to/build [-e john.smith@test.com -c \"New Release\"]\n\n\n* COMPANY_ID - ID of the company you created in the Applause SDK service.\n* APP_ID - ID of the application to which you wish to upload your builds to.\n* PATH - A full path to the build you wish to upload\n* (Optional) -e - emails to which you wish to distribute your build to. Please make sure to repeat this option for each email you wish to add.\n* (Optional) -c - changelog to attach to the build file in Applause SDK. This operation will add more information on the build OTA (over-the-air) installation page connected to the distribution email.\n\n\n**Example 1**\n\nSimple distribution with email list & changelog comming directly from the command line:\n\n.. code-block:: bash\n\n    $ applause-tool sdk distribute 3 133 test_files/Test.ipa -e release@applause.com -c \"Fresh new release, straight from the oven\"\n\n**Example 2**\n\nApplause Tool allows you to provide both email & changelog information directly from locally created files.\nIn order to instruct Applause Tool to do so please add '@' sign at the start of the parameter value. For example:\n\n.. code-block:: bash\n\n    $ applause-tool sdk distribute 3 133 test_files/Test.ipa -e @/Users/john/files/AppDistributionList.txt -c \"Fresh new release, straight from the oven\"\n\nWhere the content of AppDistributionList.txt is as follows:\n\n.. code-block::\n\n    release@applause.com\n    management@applause.com\n    cannary@applause.com\n\nPlease note that emails are separated out with new line characters.\n\n**Note**\nYou can obtain both COMPANY_ID and APP_ID values from you product specific URL address. The URL scheme is:\n\n.. code-block::\n\n    https://sdk.applause.com/companies/COMPANY_ID/application/APP_ID/dashboard/\n\n\n\n.. code-block:: bash\n\n    $ applause-tool sdk distribute COMPANY_ID APP_ID /path/to/build [-e john.smith@test.com -c @/home/user/builds/1.0/release-notes.txt]\n\n\nApplause BETA\n-------------\n\nUploading build to Applause Mobile BETA Management is supported. Optionally changelog can be attached.\n\n**Example**\n\nUploading build:\n\n.. code-block::\n\n    applause-tool beta upload 22 ~/my_apps/ExampleApp.ipa [-c @/home/user/builds/1.0/release-notes.txt]\n    \nDistribution via Applause Mobile BETA Management is supported.\n\n**Example**\n\nDistributing build using just **app_id** :\n\n.. code-block::\n\n    applause-tool beta distribute 2344 ~/my_apps/ExampleApp.ipa -g my_release_group\n\n\nApplause AIS\n------------\n\nInjects Applause SDK and a specific configuration to a iOS/Android mobile build.\nOnly MBM service integration is supported for now.\n\n**Example**\n\n.. code-block::\n\n    applause-tool ais instrument ~/my_apps/ExampleApp.ipa --customer-key ABC -k XYZ -o ~/output/path/ExampleAppInstrumented.ipa\n\nDistribution via Applause Mobile BETA Management is supported.\n\n* ~/my_apps/ExampleApp.ipa - A full path to the build you wish to process\n* customer-key - Access key for AIS service. Please reach out to applause customer support to get one.\n* -k - APP KEY assigned to your SDK/MBM product (please see the settings section of your product for more info)\n* -o - (Optional) name of the output file. Default: `instrumented-{timestamp}.{fmt}`.\n\n\n\nJenkins Integration\n===================\n\n\nTo integrate Applause Tool with Jenkins:\n\n* Make sure that you have Python2.6+ and applause-tool installed on your job worker nodes\n* We strongly recommend putting username and password for applause-tool logging in environment variables in worker node configuration\n* Add an ``Execute shell`` build step in which you can invoke applause-tool as an ordinary shell command, like below:\n\n\n.. code-block:: bash\n\n    applause-tool login -u ${APPLAUSE_USER} -p ${APPLAUSE_PASSWORD} -s\n    applause-tool sdk distribute ...\n\n* You can also install the Jenkins plugin PostBuildScript (https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin) , which enables you\n  to trigger those commands only if all the build steps are successfully completed.\n\n\n\nKnown issues\n============\n\n.. code-block:: bash\n\n    InsecurePlatformWarning: A true SSLContext object is not available.\n\n\nThis has been widely discussed here: \nhttp://stackoverflow.com/questions/29099404/ssl-insecureplatform-error-when-using-requests-package\nWe strongly recommend upgrading your Python version to 2.7.9 or higher.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "applause-tool", "package_url": "https://pypi.org/project/applause-tool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/applause-tool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/applause-tool/0.5.0/", "requires_dist": null, "requires_python": null, "summary": "This package allows integration with Applause Inc. services.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"applause-tool\">\n<h2>Applause Tool</h2>\n<p>Applause Tool is a command line package aimed at making it easy to connect\nvarious continuous integration platforms with Applause Inc. services.</p>\n<div id=\"setup\">\n<h3>Setup</h3>\n</div>\n<div id=\"prerequisities\">\n<h3>Prerequisities</h3>\n<div id=\"python\">\n<h4>Python</h4>\n<p>Applause Tool requires Python2.6+ interpreter to be installed on your\nmachine. If you are using Linux/Unix/MacOSX system this prerequisit is already met.\nPlease consult your platform specific Python installation scripts for more info.</p>\n</div>\n<div id=\"pip\">\n<h4>PIP</h4>\n<p>Python 2.7.11 and later (on the python2 series), and Python 3.4 and later include pip by default, so you may have pip already.\nIf not please consult this page for a ready to use recipe to install it on your local machine:\n<a href=\"https://pip.pypa.io/en/latest/installing.html#install-pip\" rel=\"nofollow\">https://pip.pypa.io/en/latest/installing.html#install-pip</a></p>\n</div>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install applause-tool, run:</p>\n<pre>$ pip install applause-tool\n</pre>\n<p>To verify your installation please run the following command in your terminal:</p>\n<pre>$ applause-tool --version\n</pre>\n</div>\n<div id=\"updating\">\n<h3>Updating</h3>\n<p>To update applause-tool, run:</p>\n<pre>$ pip install applause-tool --upgrade\n</pre>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"login\">\n<h3>Login</h3>\n<p>Before running product specific commands you need to log in with your Applause Account.\nIn case you don\u2019t have one please consult you Applause project manager.</p>\n<p>During the process you will be asked to provide your username and password. You can choose to store the password\nin your home directory by using the <cite>\u2013store-password</cite> flag (or just <cite>-s</cite>). If you don\u2019t, the requested OAuth\ntoken stored in your home directory will only allow you to access Applause services for 2 weeks and it will not\nrenew itself automatically. You will be asked to log in again after it expires.</p>\n<p>You can also choose to provide the username and password in environment variables APPLAUSE_USER and APPLAUSE_PASSWORD.\nPlease note that using the  <cite>\u2013store-password</cite> flag should be used with caution, as the password is kept in an unencrypted way.\nIf you\u2019re concerned with the security of your password and still want to use our tool e.g. in Continuous Integration\nscenarios, we advise to pass the credentials via environment variables.</p>\n<p>If you don\u2019t pass the credentials in any of the aforementioned ways, you will be prompted for them.</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">APPLAUSE_USERNAME</span><span class=\"o\">=</span>&lt;user&gt;\n$ <span class=\"nb\">export</span> <span class=\"nv\">APPLAUSE_PASSWORD</span><span class=\"o\">=</span>&lt;password&gt;\n$ applause-tool login\n<span class=\"c1\"># OR\n</span>$ applause-tool login -u username -p password\n<span class=\"c1\"># OR\n</span>$ applause-tool login -u username -p password --store-password\n<span class=\"c1\"># OR\n</span>$ applause-tool login -u username -p password -s\n<span class=\"c1\"># OR\n</span>$ applause-tool login --store-password\n</pre>\n</div>\n<div id=\"logout\">\n<h3>Logout</h3>\n<p>If you wish to remove the Applause Tool from your OS please make sure to log out from you existing\nsession. You can do that by typing:</p>\n<pre>$ applause-tool <span class=\"nb\">logout</span>\n</pre>\n</div>\n<div id=\"account\">\n<h3>Account</h3>\n<p>At any point in time you can check who is the actively logged in user by running:</p>\n<pre>$ applause-tool account\n</pre>\n</div>\n<div id=\"applause-sdk\">\n<h3>Applause SDK</h3>\n<p>In order to upload &amp; distribute your build please run the following command in your terminal:</p>\n<pre>$ applause-tool sdk distribute COMPANY_ID APP_ID /path/to/build <span class=\"o\">[</span>-e john.smith@test.com -c <span class=\"s2\">\"New Release\"</span><span class=\"o\">]</span>\n</pre>\n<ul>\n<li>COMPANY_ID - ID of the company you created in the Applause SDK service.</li>\n<li>APP_ID - ID of the application to which you wish to upload your builds to.</li>\n<li>PATH - A full path to the build you wish to upload</li>\n<li>(Optional) -e - emails to which you wish to distribute your build to. Please make sure to repeat this option for each email you wish to add.</li>\n<li>(Optional) -c - changelog to attach to the build file in Applause SDK. This operation will add more information on the build OTA (over-the-air) installation page connected to the distribution email.</li>\n</ul>\n<p><strong>Example 1</strong></p>\n<p>Simple distribution with email list &amp; changelog comming directly from the command line:</p>\n<pre>$ applause-tool sdk distribute <span class=\"m\">3</span> <span class=\"m\">133</span> test_files/Test.ipa -e release@applause.com -c <span class=\"s2\">\"Fresh new release, straight from the oven\"</span>\n</pre>\n<p><strong>Example 2</strong></p>\n<p>Applause Tool allows you to provide both email &amp; changelog information directly from locally created files.\nIn order to instruct Applause Tool to do so please add \u2018@\u2019 sign at the start of the parameter value. For example:</p>\n<pre>$ applause-tool sdk distribute <span class=\"m\">3</span> <span class=\"m\">133</span> test_files/Test.ipa -e @/Users/john/files/AppDistributionList.txt -c <span class=\"s2\">\"Fresh new release, straight from the oven\"</span>\n</pre>\n<p>Where the content of AppDistributionList.txt is as follows:</p>\n<pre>release@applause.com\nmanagement@applause.com\ncannary@applause.com\n</pre>\n<p>Please note that emails are separated out with new line characters.</p>\n<p><strong>Note</strong>\nYou can obtain both COMPANY_ID and APP_ID values from you product specific URL address. The URL scheme is:</p>\n<pre>https://sdk.applause.com/companies/COMPANY_ID/application/APP_ID/dashboard/\n</pre>\n<pre>$ applause-tool sdk distribute COMPANY_ID APP_ID /path/to/build <span class=\"o\">[</span>-e john.smith@test.com -c @/home/user/builds/1.0/release-notes.txt<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"applause-beta\">\n<h3>Applause BETA</h3>\n<p>Uploading build to Applause Mobile BETA Management is supported. Optionally changelog can be attached.</p>\n<p><strong>Example</strong></p>\n<p>Uploading build:</p>\n<pre>applause-tool beta upload 22 ~/my_apps/ExampleApp.ipa [-c @/home/user/builds/1.0/release-notes.txt]\n</pre>\n<p>Distribution via Applause Mobile BETA Management is supported.</p>\n<p><strong>Example</strong></p>\n<p>Distributing build using just <strong>app_id</strong> :</p>\n<pre>applause-tool beta distribute 2344 ~/my_apps/ExampleApp.ipa -g my_release_group\n</pre>\n</div>\n<div id=\"applause-ais\">\n<h3>Applause AIS</h3>\n<p>Injects Applause SDK and a specific configuration to a iOS/Android mobile build.\nOnly MBM service integration is supported for now.</p>\n<p><strong>Example</strong></p>\n<pre>applause-tool ais instrument ~/my_apps/ExampleApp.ipa --customer-key ABC -k XYZ -o ~/output/path/ExampleAppInstrumented.ipa\n</pre>\n<p>Distribution via Applause Mobile BETA Management is supported.</p>\n<ul>\n<li>~/my_apps/ExampleApp.ipa - A full path to the build you wish to process</li>\n<li>customer-key - Access key for AIS service. Please reach out to applause customer support to get one.</li>\n<li>-k - APP KEY assigned to your SDK/MBM product (please see the settings section of your product for more info)</li>\n<li>-o - (Optional) name of the output file. Default: <cite>instrumented-{timestamp}.{fmt}</cite>.</li>\n</ul>\n</div>\n</div>\n<div id=\"jenkins-integration\">\n<h2>Jenkins Integration</h2>\n<p>To integrate Applause Tool with Jenkins:</p>\n<ul>\n<li>Make sure that you have Python2.6+ and applause-tool installed on your job worker nodes</li>\n<li>We strongly recommend putting username and password for applause-tool logging in environment variables in worker node configuration</li>\n<li>Add an <tt>Execute shell</tt> build step in which you can invoke applause-tool as an ordinary shell command, like below:</li>\n</ul>\n<pre>applause-tool login -u <span class=\"si\">${</span><span class=\"nv\">APPLAUSE_USER</span><span class=\"si\">}</span> -p <span class=\"si\">${</span><span class=\"nv\">APPLAUSE_PASSWORD</span><span class=\"si\">}</span> -s\napplause-tool sdk distribute ...\n</pre>\n<ul>\n<li>You can also install the Jenkins plugin PostBuildScript (<a href=\"https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin\" rel=\"nofollow\">https://wiki.jenkins-ci.org/display/JENKINS/PostBuildScript+Plugin</a>) , which enables you\nto trigger those commands only if all the build steps are successfully completed.</li>\n</ul>\n</div>\n<div id=\"known-issues\">\n<h2>Known issues</h2>\n<pre>InsecurePlatformWarning: A <span class=\"nb\">true</span> SSLContext object is not available.\n</pre>\n<p>This has been widely discussed here:\n<a href=\"http://stackoverflow.com/questions/29099404/ssl-insecureplatform-error-when-using-requests-package\" rel=\"nofollow\">http://stackoverflow.com/questions/29099404/ssl-insecureplatform-error-when-using-requests-package</a>\nWe strongly recommend upgrading your Python version to 2.7.9 or higher.</p>\n</div>\n\n          </div>"}, "last_serial": 2399405, "releases": {"0.2.4": [{"comment_text": "", "digests": {"md5": "3c17ba478d8681aa1a53a19780cc946a", "sha256": "a26fad912fa6f863c8c33b949b512c342d3bc36c9e268ec8178d78983b002fe2"}, "downloads": -1, "filename": "applause-tool-0.2.4.tar.gz", "has_sig": false, "md5_digest": "3c17ba478d8681aa1a53a19780cc946a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12688, "upload_time": "2015-06-08T09:45:56", "upload_time_iso_8601": "2015-06-08T09:45:56.010231Z", "url": "https://files.pythonhosted.org/packages/87/3c/fa6db402e0a78af0ee7b602ed65f33aa63573bb6d1c8db2648a31f666a13/applause-tool-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "1c8b1104959b398ea53b1f0384fd3108", "sha256": "69f8322ffc7b43b571f982b2a29e4166ea51e9420c64c8e6255eca08b0bf210b"}, "downloads": -1, "filename": "applause-tool-0.2.5.tar.gz", "has_sig": false, "md5_digest": "1c8b1104959b398ea53b1f0384fd3108", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12962, "upload_time": "2015-07-16T10:33:22", "upload_time_iso_8601": "2015-07-16T10:33:22.297952Z", "url": "https://files.pythonhosted.org/packages/31/ad/4bd51b2cce0bd6f46fd9ffe72cca424be1e799e3e66db3405eed3109391c/applause-tool-0.2.5.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "2c7b71f85e6112cca7e2f1db2d76ae6b", "sha256": "cf0ffc0f49c6966bfb9bf10c9c6cea5ddd3066a2e6127dad8850213f60d2abe1"}, "downloads": -1, "filename": "applause-tool-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2c7b71f85e6112cca7e2f1db2d76ae6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13423, "upload_time": "2016-01-08T12:04:00", "upload_time_iso_8601": "2016-01-08T12:04:00.585286Z", "url": "https://files.pythonhosted.org/packages/ae/9c/06d950cd1c27eb674be09f5056d5fd4f1a4880b0980eabdb18615c995f04/applause-tool-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e51b2d14c5843a693b7cef0c9391e12c", "sha256": "1be9cbcf18d1372d2b800f42a40c6053a767a9df59f4f53fac4808b996456170"}, "downloads": -1, "filename": "applause-tool-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e51b2d14c5843a693b7cef0c9391e12c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13357, "upload_time": "2016-07-11T12:26:37", "upload_time_iso_8601": "2016-07-11T12:26:37.095923Z", "url": "https://files.pythonhosted.org/packages/fa/7c/39e634acbb063ca1c32bd4435e4372aa39ef8c6858b7e76f85c2d3192a08/applause-tool-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "2ae45ca332f87fd90e422dd218623cb2", "sha256": "0f5438fb09e1acbbfd7a10143777dd221a73471d62421b74ec1ad6bb8ca12b7d"}, "downloads": -1, "filename": "applause-tool-0.4.1.tar.gz", "has_sig": false, "md5_digest": "2ae45ca332f87fd90e422dd218623cb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14110, "upload_time": "2016-08-16T11:22:14", "upload_time_iso_8601": "2016-08-16T11:22:14.841599Z", "url": "https://files.pythonhosted.org/packages/fd/e7/f528f347e5ad2e8c0d7a2772068f29ef7e108ae34c7e44ee7da26de1567e/applause-tool-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "fd5405b4dc60e4c3a2bad4631c5e57fc", "sha256": "2239fcc7ba42d16a186a9eb9556568f851cb5047b673c2dea161ab740a3bce45"}, "downloads": -1, "filename": "applause-tool-0.4.2.tar.gz", "has_sig": false, "md5_digest": "fd5405b4dc60e4c3a2bad4631c5e57fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14323, "upload_time": "2016-09-13T12:45:29", "upload_time_iso_8601": "2016-09-13T12:45:29.940276Z", "url": "https://files.pythonhosted.org/packages/25/33/13c92bdd9dd7fe72e6826fa524cc624b320e33b7e3beffd0664c49957bc0/applause-tool-0.4.2.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "6f9a445219837ff9ae183afdde4c01f3", "sha256": "74c243608f65463006bf5e14f8e362ec5a9ecc2397f70500360708f247d0b093"}, "downloads": -1, "filename": "applause-tool-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6f9a445219837ff9ae183afdde4c01f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18510, "upload_time": "2016-10-14T13:32:30", "upload_time_iso_8601": "2016-10-14T13:32:30.279999Z", "url": "https://files.pythonhosted.org/packages/38/7e/2428c106307237cc9e5ad6a58424cb5a5f0005b2709c921bb5d754ccf8a4/applause-tool-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6f9a445219837ff9ae183afdde4c01f3", "sha256": "74c243608f65463006bf5e14f8e362ec5a9ecc2397f70500360708f247d0b093"}, "downloads": -1, "filename": "applause-tool-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6f9a445219837ff9ae183afdde4c01f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18510, "upload_time": "2016-10-14T13:32:30", "upload_time_iso_8601": "2016-10-14T13:32:30.279999Z", "url": "https://files.pythonhosted.org/packages/38/7e/2428c106307237cc9e5ad6a58424cb5a5f0005b2709c921bb5d754ccf8a4/applause-tool-0.5.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:37 2020"}