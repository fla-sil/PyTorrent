{"info": {"author": "Brent Tubbs", "author_email": "brent.tubbs@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5"], "description": "Varsity\n=======\n\nVarsity helps you define your application's settings, read them from\nenvironment variables, parse them into native Python types, and validate\nthem.\n\nLoad a simple string\n--------------------\n\nAssume the FOO environment variable as been set to '3'. After setting up\nthe loader and calling its .load() method, we get back a dictionary with\na key for each setting we've added to the loader.\n\n::\n\n    >>> from varsity import Loader\n    >>> l = Loader()\n    >>> l.add('FOO')\n    >>> settings = l.load()\n    >>> settings.FOO\n    '3'\n\nIf you want to use a different name for the setting within Python, you\ncan provide your own.\n\n::\n\n    >>> l.add('FOO', 'foo')\n    >>> settings = l.load()\n    >>> settings.foo\n    '3'\n\nThe object returned from .load() also provides dictionary-style access\nto settings.\n\n::\n\n    >>> settings['foo']\n    '3'\n\nYou can provide a 'typ' callable that will be used to convert the\nenvironment variable string into the type of your choice.\n\n::\n\n    >>> l.add('FOO', 'foo', typ=int)\n    >>> settings = l.load()\n    >>> settings.foo\n    3\n\nYou can provide defaults that will be returned if the environment\nvariable is not present.\n\n::\n\n    >>> l.add('SOME_UNSET_VAR', default=0)\n    >>> settings = l.load()\n    >>> settings.SOME_UNSET_VAR\n    0\n\nIf you don't provide a default, and the environment variable is not set,\nValueError will be raised.\n\nYou can provide your own callable as the 'typ' argument. Assume the\n'TODAY' environment variable is set to '2016-05-05'.\n\n::\n\n    >>> from varsity import Loader\n    >>> from iso8601 import parse_date\n    >>> l = Loader()\n    >>> l.add('TODAY', 'today', typ=lambda x: parse_date(x).date())\n    >>> settings = l.load()\n    >>> settings.today\n    datetime.date(2016, 5, 5)\n\nIf you don't provide a 'typ', but you do provide a default, then the\nenvironment variable will be cast to the same type as the default. (Here\nwe get back an int 3 instead of the string '3', because the default is\nan int.)\n\n::\n\n    >>> l.add('FOO', 'foo', default=0)\n    >>> settings = l.load()\n    >>> settings.foo\n    3\n\nIf you access a setting with the attribute-style syntax, then nested\ndictionaries can also be accessed with that syntax. In this example, the\nFOO environment variable is set to '{\"bar\": {\"baz\": 1.23}}'\n\n::\n\n    >>> l.add('FOO', 'foo', typ=json.loads)\n    >>> settings = l.load()\n    >>> settings.foo.bar.baz\n    1.23", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/btubbs/varsity", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "varsity", "package_url": "https://pypi.org/project/varsity/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/varsity/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/btubbs/varsity"}, "release_url": "https://pypi.org/project/varsity/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "A library for defining, parsing, and validating settings passed as environment variables", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Varsity helps you define your application\u2019s settings, read them from\nenvironment variables, parse them into native Python types, and validate\nthem.</p>\n<div id=\"load-a-simple-string\">\n<h2>Load a simple string</h2>\n<p>Assume the FOO environment variable as been set to \u20183\u2019. After setting up\nthe loader and calling its .load() method, we get back a dictionary with\na key for each setting we\u2019ve added to the loader.</p>\n<pre>&gt;&gt;&gt; from varsity import Loader\n&gt;&gt;&gt; l = Loader()\n&gt;&gt;&gt; l.add('FOO')\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.FOO\n'3'\n</pre>\n<p>If you want to use a different name for the setting within Python, you\ncan provide your own.</p>\n<pre>&gt;&gt;&gt; l.add('FOO', 'foo')\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.foo\n'3'\n</pre>\n<p>The object returned from .load() also provides dictionary-style access\nto settings.</p>\n<pre>&gt;&gt;&gt; settings['foo']\n'3'\n</pre>\n<p>You can provide a \u2018typ\u2019 callable that will be used to convert the\nenvironment variable string into the type of your choice.</p>\n<pre>&gt;&gt;&gt; l.add('FOO', 'foo', typ=int)\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.foo\n3\n</pre>\n<p>You can provide defaults that will be returned if the environment\nvariable is not present.</p>\n<pre>&gt;&gt;&gt; l.add('SOME_UNSET_VAR', default=0)\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.SOME_UNSET_VAR\n0\n</pre>\n<p>If you don\u2019t provide a default, and the environment variable is not set,\nValueError will be raised.</p>\n<p>You can provide your own callable as the \u2018typ\u2019 argument. Assume the\n\u2018TODAY\u2019 environment variable is set to \u20182016-05-05\u2019.</p>\n<pre>&gt;&gt;&gt; from varsity import Loader\n&gt;&gt;&gt; from iso8601 import parse_date\n&gt;&gt;&gt; l = Loader()\n&gt;&gt;&gt; l.add('TODAY', 'today', typ=lambda x: parse_date(x).date())\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.today\ndatetime.date(2016, 5, 5)\n</pre>\n<p>If you don\u2019t provide a \u2018typ\u2019, but you do provide a default, then the\nenvironment variable will be cast to the same type as the default. (Here\nwe get back an int 3 instead of the string \u20183\u2019, because the default is\nan int.)</p>\n<pre>&gt;&gt;&gt; l.add('FOO', 'foo', default=0)\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.foo\n3\n</pre>\n<p>If you access a setting with the attribute-style syntax, then nested\ndictionaries can also be accessed with that syntax. In this example, the\nFOO environment variable is set to \u2018{\u201cbar\u201d: {\u201cbaz\u201d: 1.23}}\u2019</p>\n<pre>&gt;&gt;&gt; l.add('FOO', 'foo', typ=json.loads)\n&gt;&gt;&gt; settings = l.load()\n&gt;&gt;&gt; settings.foo.bar.baz\n1.23\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2102900, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3a6b1ef86cb8b26bbaf1ddce3fb010b4", "sha256": "49946c1f247ee61359cbb4f35fde524280066ab2470d48581491e771b6f27506"}, "downloads": -1, "filename": "varsity-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a6b1ef86cb8b26bbaf1ddce3fb010b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1616, "upload_time": "2016-05-06T08:07:43", "upload_time_iso_8601": "2016-05-06T08:07:43.223391Z", "url": "https://files.pythonhosted.org/packages/e7/9d/39521fb8776f5ff531c2a0ff949b389595ae56b300c4901781dfad1c8de3/varsity-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "62c928c80be920331a12b2ef2ed3da7b", "sha256": "6fdcda7c4808d0107a2c5175db037507c723d62910391fcbb9653be9ed9616e2"}, "downloads": -1, "filename": "varsity-0.0.2.tar.gz", "has_sig": false, "md5_digest": "62c928c80be920331a12b2ef2ed3da7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2461, "upload_time": "2016-05-06T08:09:20", "upload_time_iso_8601": "2016-05-06T08:09:20.966116Z", "url": "https://files.pythonhosted.org/packages/6b/c8/b1ce5312286868f2d5a490da1816e8d8a9c759bf8f6c5535516e3433fc54/varsity-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "244c3735c99e670cefaaabef527cd8e0", "sha256": "743c1400f4d2dda449137198775a0e1ac4b9fece3b9a1760af0c5b7e23f423de"}, "downloads": -1, "filename": "varsity-0.0.3.tar.gz", "has_sig": false, "md5_digest": "244c3735c99e670cefaaabef527cd8e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2739, "upload_time": "2016-05-06T08:16:47", "upload_time_iso_8601": "2016-05-06T08:16:47.234811Z", "url": "https://files.pythonhosted.org/packages/1d/39/64c1baed7f97828bc0ec88f1e5046dc4d1ab57648cde184c7598f54ce9f1/varsity-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d875483f73336c428201c736cf4c687f", "sha256": "1bad25a04418d2b3ec691d9a6d1da0280c323d4d01da626411ede1d746cba8db"}, "downloads": -1, "filename": "varsity-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d875483f73336c428201c736cf4c687f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2780, "upload_time": "2016-05-06T15:51:51", "upload_time_iso_8601": "2016-05-06T15:51:51.717659Z", "url": "https://files.pythonhosted.org/packages/d0/10/e18f48ba18ac92882a8e23fa1439627888f3e4425010afbb630226188f08/varsity-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "4250bd2a93fbe9074fed92b5f39ed5f8", "sha256": "1539cda580f009a81438acb3af702e9cb037633a5b8bc57091a127a95e89fee1"}, "downloads": -1, "filename": "varsity-0.0.5.tar.gz", "has_sig": false, "md5_digest": "4250bd2a93fbe9074fed92b5f39ed5f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2889, "upload_time": "2016-05-06T16:47:25", "upload_time_iso_8601": "2016-05-06T16:47:25.103814Z", "url": "https://files.pythonhosted.org/packages/35/0f/adc7d29a1bff0aa0843b35db9758ecc9df38f828d34da776611a2ca4ad8c/varsity-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4250bd2a93fbe9074fed92b5f39ed5f8", "sha256": "1539cda580f009a81438acb3af702e9cb037633a5b8bc57091a127a95e89fee1"}, "downloads": -1, "filename": "varsity-0.0.5.tar.gz", "has_sig": false, "md5_digest": "4250bd2a93fbe9074fed92b5f39ed5f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2889, "upload_time": "2016-05-06T16:47:25", "upload_time_iso_8601": "2016-05-06T16:47:25.103814Z", "url": "https://files.pythonhosted.org/packages/35/0f/adc7d29a1bff0aa0843b35db9758ecc9df38f828d34da776611a2ca4ad8c/varsity-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:43 2020"}