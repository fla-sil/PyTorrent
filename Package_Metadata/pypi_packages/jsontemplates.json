{"info": {"author": "Jon Keatley", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# json-templates\n\nA small python module for populating json template files.\n\n### Version 0.1.0\n\nAccepts either a json string or a file path and a dictionary. json-template replaces the place holders found in the json with those found in the dictionary.\n\nBelow is a template example\n\n```json\n{\n  \"key\":\"hard coded value\",\n  \"key2\":1,\n  \"key3\":\"{{ variable }}\",\n  \"key4\":\"{% array %}\"\n}\n```\n\nCurrently supports `{{ variable }}` for single replacement and `{% array %}` for iterable replacement.\n\nFor example given the following dictionary\n```python\n{\n  \"variable\":\"hello world\",\n  \"array\":[\"foo\",\"bar\"]\n}\n```\n\nThe JSON would become\n\n```json\n{\n  \"key\":\"hard coded value\",\n  \"key2\":1,\n  \"key3\":\"hello world\",\n  \"key4\":[\"foo\",\"bar\"]\n}\n```\n### Usage\n\n```python\nimport JsonTemplates\n\njson_tmp = JsonTemplates()\nresult = json_tmp.load(\"template.json\")\n\nif result[0]:\n  new_dict = json_tmp.generate({\"variable\":\"hello world\",\"array\":[\"foo\",\"bar\"]})\n```\n\n### Methods\n\n- **load(json_file_path)** - Loads a JSON file  \nReturns a tuple (Success,error message or dictionary)\n\n- **loads(json_str)** - Loads a JSON string  \nReturns a tuple (Success,error message or dictionary)  \n\n- **generate(replacement_dict)** - Takes in a dictionary of replacement values and generates a new dictionary with the placeholders replaced with the values in the dictionary  \nReturns a tuple (Success, error message or dictionary)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/Jon.Keatley.Folio/json-templates", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jsontemplates", "package_url": "https://pypi.org/project/jsontemplates/", "platform": "", "project_url": "https://pypi.org/project/jsontemplates/", "project_urls": {"Homepage": "https://gitlab.com/Jon.Keatley.Folio/json-templates", "Source Code": "https://gitlab.com/Jon.Keatley.Folio/json-templates"}, "release_url": "https://pypi.org/project/jsontemplates/0.1.0/", "requires_dist": null, "requires_python": ">=3.5", "summary": "A small python module for populating json template files.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>json-templates</h1>\n<p>A small python module for populating json template files.</p>\n<h3>Version 0.1.0</h3>\n<p>Accepts either a json string or a file path and a dictionary. json-template replaces the place holders found in the json with those found in the dictionary.</p>\n<p>Below is a template example</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"key\"</span><span class=\"p\">:</span><span class=\"s2\">\"hard coded value\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"key2\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"key3\"</span><span class=\"p\">:</span><span class=\"s2\">\"{{ variable }}\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"key4\"</span><span class=\"p\">:</span><span class=\"s2\">\"{% array %}\"</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Currently supports <code>{{ variable }}</code> for single replacement and <code>{% array %}</code> for iterable replacement.</p>\n<p>For example given the following dictionary</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"s2\">\"variable\"</span><span class=\"p\">:</span><span class=\"s2\">\"hello world\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"array\"</span><span class=\"p\">:[</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span><span class=\"s2\">\"bar\"</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The JSON would become</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"key\"</span><span class=\"p\">:</span><span class=\"s2\">\"hard coded value\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"key2\"</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"key3\"</span><span class=\"p\">:</span><span class=\"s2\">\"hello world\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"key4\"</span><span class=\"p\">:[</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span><span class=\"s2\">\"bar\"</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">JsonTemplates</span>\n\n<span class=\"n\">json_tmp</span> <span class=\"o\">=</span> <span class=\"n\">JsonTemplates</span><span class=\"p\">()</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">json_tmp</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"template.json\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]:</span>\n  <span class=\"n\">new_dict</span> <span class=\"o\">=</span> <span class=\"n\">json_tmp</span><span class=\"o\">.</span><span class=\"n\">generate</span><span class=\"p\">({</span><span class=\"s2\">\"variable\"</span><span class=\"p\">:</span><span class=\"s2\">\"hello world\"</span><span class=\"p\">,</span><span class=\"s2\">\"array\"</span><span class=\"p\">:[</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span><span class=\"s2\">\"bar\"</span><span class=\"p\">]})</span>\n</pre>\n<h3>Methods</h3>\n<ul>\n<li>\n<p><strong>load(json_file_path)</strong> - Loads a JSON file<br>\nReturns a tuple (Success,error message or dictionary)</p>\n</li>\n<li>\n<p><strong>loads(json_str)</strong> - Loads a JSON string<br>\nReturns a tuple (Success,error message or dictionary)</p>\n</li>\n<li>\n<p><strong>generate(replacement_dict)</strong> - Takes in a dictionary of replacement values and generates a new dictionary with the placeholders replaced with the values in the dictionary<br>\nReturns a tuple (Success, error message or dictionary)</p>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 6653424, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d3dec13ca54952ca5e72ff8917a460b8", "sha256": "3e858df2803304a226f47109791d3582c934652ba7930176e40ec659a4c3373f"}, "downloads": -1, "filename": "jsontemplates-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3dec13ca54952ca5e72ff8917a460b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3687, "upload_time": "2020-02-18T13:53:37", "upload_time_iso_8601": "2020-02-18T13:53:37.624617Z", "url": "https://files.pythonhosted.org/packages/2f/7a/d78588fdb0c1a38f4c97996127748e7aacc8bfa994f80650de243f001a23/jsontemplates-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62368fccc57e7a6722fa0b2d656ad2fe", "sha256": "a1f06186341c98d964b81d105c0ad615638df5882f593c265f6581eddf9a2a6b"}, "downloads": -1, "filename": "jsontemplates-0.1.0.tar.gz", "has_sig": false, "md5_digest": "62368fccc57e7a6722fa0b2d656ad2fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3954, "upload_time": "2020-02-18T13:53:40", "upload_time_iso_8601": "2020-02-18T13:53:40.056458Z", "url": "https://files.pythonhosted.org/packages/c6/3c/d1acbe78c9aa032dd93b45023dd8b23ad29c44bca2a99d0b1ba2417cab4d/jsontemplates-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3dec13ca54952ca5e72ff8917a460b8", "sha256": "3e858df2803304a226f47109791d3582c934652ba7930176e40ec659a4c3373f"}, "downloads": -1, "filename": "jsontemplates-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3dec13ca54952ca5e72ff8917a460b8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 3687, "upload_time": "2020-02-18T13:53:37", "upload_time_iso_8601": "2020-02-18T13:53:37.624617Z", "url": "https://files.pythonhosted.org/packages/2f/7a/d78588fdb0c1a38f4c97996127748e7aacc8bfa994f80650de243f001a23/jsontemplates-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "62368fccc57e7a6722fa0b2d656ad2fe", "sha256": "a1f06186341c98d964b81d105c0ad615638df5882f593c265f6581eddf9a2a6b"}, "downloads": -1, "filename": "jsontemplates-0.1.0.tar.gz", "has_sig": false, "md5_digest": "62368fccc57e7a6722fa0b2d656ad2fe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 3954, "upload_time": "2020-02-18T13:53:40", "upload_time_iso_8601": "2020-02-18T13:53:40.056458Z", "url": "https://files.pythonhosted.org/packages/c6/3c/d1acbe78c9aa032dd93b45023dd8b23ad29c44bca2a99d0b1ba2417cab4d/jsontemplates-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:35 2020"}