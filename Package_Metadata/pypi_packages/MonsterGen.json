{"info": {"author": "Robert Sharp", "author_email": "webmaster@sharpdesigndigital.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 3.8"], "description": "# MonsterGen\n\nMonsterGen is based on Fortuna and Storm by Robert Sharp.\n- Fortuna: Random Value Toolkit for Generative Modeling.\n- Storm: High-performance Random Number Engine.\n\n\n## Installation\n```shell script\n$ pip install MonsterGen\n```\n\n## Index\n- CR\n- Random Monsters\n- Random NPCs\n- Random Traps\n- Random Treasure\n\n\n## CR Class\n`CR(cr) -> CR`\n- cr: required int, -3 to 30\n\nThe CR class is a numeric system representing the relative power of a monster in D&D 5e.\nThis system is a bit funky with values below 1, be careful... here be dragons!\nCR less than 1 are printed as fractions but valued mathematically as integers [-3, 0]. See below:\n\n### CR Mapping\n\n```python\nfrom MonsterGen import CR\n\nprint(f\"CR: {CR(-3)}\")\nprint(f\"CR: {CR(-2)}\")\nprint(f\"CR: {CR(-1)}\")\nprint(f\"CR: {CR(0)}\")\nprint(f\"CR: {CR(1)}\")\nprint(f\"CR: {CR(2)}\")\nprint(f\"CR: {CR(3)}\")\nprint('...')\nprint(f\"CR: {CR(30)}\")\n```\n\n```\nCR: 1/16\nCR: 1/8\nCR: 1/4\nCR: 1/2\nCR: 1\nCR: 2\nCR: 3\n...\nCR: 30\n```\n\n### Party Adapter Class Method\n`CR.player_adapter(average_level, num_players=5, difficulty=0) -> CR`\n\nClass method for computing CR from party composition and difficulty setting.\n- average_level: required int, 1 to 20\n- num_players: optional int, 1 to 9\n- difficulty: optional int, -5 to 5 \n    - Stupid Easy: -5 to -4\n    - Easy: -3 to -2\n    - Normal: -1 to 1\n    - Epic: 2 to 3\n    - Legendary: 4 to 5\n\n\n## Monster Class\n`Monster(cr, monster_type=None) -> Monster`\n\n- cr: required int, -3 to 30\n- monster_type: optional str, [\"Aberration\", \"Beast\", \"Celestial\", \"Construct\", \"Dragon\", \"Elemental\", \"Fey\", \"Fiend\", \"Giant\", \"Humanoid\", \"Monstrosity\", \"Plant\", \"Ooze\", \"Undead\"]\n\n```python\nfrom MonsterGen import Monster, CR\n\nmonster_cr = CR(10)\nprint(Monster(monster_cr, monster_type='Aberration'))\n```\n\n```\nName: Grell\nType: Aberration\nCR: 7\nHit Points: 164\nArmor Class: 12\nAttack Bonus: 9\nTypical Damage: 45 - 50\nSave DC: 15\nXP Value: 2900\n```\n\n## NPC Class\n`Npc() -> Npc`\n\nProduces a random NPC.\n\n```python\nfrom MonsterGen import Npc\n\nprint(Npc())\n```\n\n```\nProfession: Bookbinder\nRace: Tiefling\nBackground: Soldier\nAppearance: Flamboyant or outlandish clothes\nMannerism: Speaks in rhyme\nHit Points: 8\nArmor Class: 11\nDamage: 1\n```\n\n## Random Trap Factory Function\n`random_trap(cr, dam_type=None) -> Trap`\n- cr: required int, -3 to 30\n- dam_type: optional str, ['bludgeoning', 'falling', 'piercing', 'slashing', 'poison', 'acid', 'fire', 'lightning', 'cold', 'necrotic']\n\nProduces a random trap. If `dam_type` is None it will choose a random damage type.\n\n```python\nfrom MonsterGen import random_trap\n\nprint(random_trap(10, dam_type=\"fire\"))\n```\n\n```\nName: Inferno\nType: Minor Trap\nCR: 10\nSpot & Disarm: DC: 10\nSave vs: WIS DC 11 for half damage\nDamage: 3d4 fire\nDisarm XP: 5900\n```\n\n## Monster Loot Factory Function\n`monster_loot(cr) -> Loot`\n- cr: required int, -3 to 30\n\nProduces random treasure for a single monster. Typically this is just coinage.\n```python\nfrom MonsterGen import monster_loot\n\nprint(monster_loot(10))\n```\n\n```\nCopper Coins: 1800\nElectrum Coins: 50\n```\n\n## Horde Loot Factory Function\n`horde_loot(cr) -> Loot`\n- cr: required int, -3 to 30\n\nProduces random treasure for a boss or horde of monsters. High-quality loot with magic items appropriate to the CR.\n\n```python\nfrom MonsterGen import horde_loot\n\nprint(horde_loot(10))\n```\n\n```\nCopper Coins: 400\nSilver Coins: 7000\nGold Coins: 2200\nPlatinum Coins: 140\nJewels: 50 GP\nOil of etherealness\nQuaal's feather token\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "D&D,Monster,Trap,Treasure,NPC,Loot,Generator", "license": "", "maintainer": "", "maintainer_email": "", "name": "MonsterGen", "package_url": "https://pypi.org/project/MonsterGen/", "platform": "", "project_url": "https://pypi.org/project/MonsterGen/", "project_urls": null, "release_url": "https://pypi.org/project/MonsterGen/0.0.6/", "requires_dist": ["Fortuna"], "requires_python": ">=3.6", "summary": "Random Monster Generator", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>MonsterGen</h1>\n<p>MonsterGen is based on Fortuna and Storm by Robert Sharp.</p>\n<ul>\n<li>Fortuna: Random Value Toolkit for Generative Modeling.</li>\n<li>Storm: High-performance Random Number Engine.</li>\n</ul>\n<h2>Installation</h2>\n<pre>$ pip install MonsterGen\n</pre>\n<h2>Index</h2>\n<ul>\n<li>CR</li>\n<li>Random Monsters</li>\n<li>Random NPCs</li>\n<li>Random Traps</li>\n<li>Random Treasure</li>\n</ul>\n<h2>CR Class</h2>\n<p><code>CR(cr) -&gt; CR</code></p>\n<ul>\n<li>cr: required int, -3 to 30</li>\n</ul>\n<p>The CR class is a numeric system representing the relative power of a monster in D&amp;D 5e.\nThis system is a bit funky with values below 1, be careful... here be dragons!\nCR less than 1 are printed as fractions but valued mathematically as integers [-3, 0]. See below:</p>\n<h3>CR Mapping</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MonsterGen</span> <span class=\"kn\">import</span> <span class=\"n\">CR</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'...'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"CR: </span><span class=\"si\">{</span><span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"mi\">30</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<pre><code>CR: 1/16\nCR: 1/8\nCR: 1/4\nCR: 1/2\nCR: 1\nCR: 2\nCR: 3\n...\nCR: 30\n</code></pre>\n<h3>Party Adapter Class Method</h3>\n<p><code>CR.player_adapter(average_level, num_players=5, difficulty=0) -&gt; CR</code></p>\n<p>Class method for computing CR from party composition and difficulty setting.</p>\n<ul>\n<li>average_level: required int, 1 to 20</li>\n<li>num_players: optional int, 1 to 9</li>\n<li>difficulty: optional int, -5 to 5\n<ul>\n<li>Stupid Easy: -5 to -4</li>\n<li>Easy: -3 to -2</li>\n<li>Normal: -1 to 1</li>\n<li>Epic: 2 to 3</li>\n<li>Legendary: 4 to 5</li>\n</ul>\n</li>\n</ul>\n<h2>Monster Class</h2>\n<p><code>Monster(cr, monster_type=None) -&gt; Monster</code></p>\n<ul>\n<li>cr: required int, -3 to 30</li>\n<li>monster_type: optional str, [\"Aberration\", \"Beast\", \"Celestial\", \"Construct\", \"Dragon\", \"Elemental\", \"Fey\", \"Fiend\", \"Giant\", \"Humanoid\", \"Monstrosity\", \"Plant\", \"Ooze\", \"Undead\"]</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MonsterGen</span> <span class=\"kn\">import</span> <span class=\"n\">Monster</span><span class=\"p\">,</span> <span class=\"n\">CR</span>\n\n<span class=\"n\">monster_cr</span> <span class=\"o\">=</span> <span class=\"n\">CR</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Monster</span><span class=\"p\">(</span><span class=\"n\">monster_cr</span><span class=\"p\">,</span> <span class=\"n\">monster_type</span><span class=\"o\">=</span><span class=\"s1\">'Aberration'</span><span class=\"p\">))</span>\n</pre>\n<pre><code>Name: Grell\nType: Aberration\nCR: 7\nHit Points: 164\nArmor Class: 12\nAttack Bonus: 9\nTypical Damage: 45 - 50\nSave DC: 15\nXP Value: 2900\n</code></pre>\n<h2>NPC Class</h2>\n<p><code>Npc() -&gt; Npc</code></p>\n<p>Produces a random NPC.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MonsterGen</span> <span class=\"kn\">import</span> <span class=\"n\">Npc</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Npc</span><span class=\"p\">())</span>\n</pre>\n<pre><code>Profession: Bookbinder\nRace: Tiefling\nBackground: Soldier\nAppearance: Flamboyant or outlandish clothes\nMannerism: Speaks in rhyme\nHit Points: 8\nArmor Class: 11\nDamage: 1\n</code></pre>\n<h2>Random Trap Factory Function</h2>\n<p><code>random_trap(cr, dam_type=None) -&gt; Trap</code></p>\n<ul>\n<li>cr: required int, -3 to 30</li>\n<li>dam_type: optional str, ['bludgeoning', 'falling', 'piercing', 'slashing', 'poison', 'acid', 'fire', 'lightning', 'cold', 'necrotic']</li>\n</ul>\n<p>Produces a random trap. If <code>dam_type</code> is None it will choose a random damage type.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MonsterGen</span> <span class=\"kn\">import</span> <span class=\"n\">random_trap</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">random_trap</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">dam_type</span><span class=\"o\">=</span><span class=\"s2\">\"fire\"</span><span class=\"p\">))</span>\n</pre>\n<pre><code>Name: Inferno\nType: Minor Trap\nCR: 10\nSpot &amp; Disarm: DC: 10\nSave vs: WIS DC 11 for half damage\nDamage: 3d4 fire\nDisarm XP: 5900\n</code></pre>\n<h2>Monster Loot Factory Function</h2>\n<p><code>monster_loot(cr) -&gt; Loot</code></p>\n<ul>\n<li>cr: required int, -3 to 30</li>\n</ul>\n<p>Produces random treasure for a single monster. Typically this is just coinage.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MonsterGen</span> <span class=\"kn\">import</span> <span class=\"n\">monster_loot</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">monster_loot</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<pre><code>Copper Coins: 1800\nElectrum Coins: 50\n</code></pre>\n<h2>Horde Loot Factory Function</h2>\n<p><code>horde_loot(cr) -&gt; Loot</code></p>\n<ul>\n<li>cr: required int, -3 to 30</li>\n</ul>\n<p>Produces random treasure for a boss or horde of monsters. High-quality loot with magic items appropriate to the CR.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">MonsterGen</span> <span class=\"kn\">import</span> <span class=\"n\">horde_loot</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">horde_loot</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<pre><code>Copper Coins: 400\nSilver Coins: 7000\nGold Coins: 2200\nPlatinum Coins: 140\nJewels: 50 GP\nOil of etherealness\nQuaal's feather token\n</code></pre>\n\n          </div>"}, "last_serial": 7056549, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "c29b4f1859a6fea8b3c20f89dbe8f3cc", "sha256": "87cb4edcb21f96e795eac9d651e2bbada0c72b1e35b1cd6753e30fa404cd812f"}, "downloads": -1, "filename": "MonsterGen-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c29b4f1859a6fea8b3c20f89dbe8f3cc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 21444, "upload_time": "2020-04-01T06:35:03", "upload_time_iso_8601": "2020-04-01T06:35:03.159325Z", "url": "https://files.pythonhosted.org/packages/a0/51/0b1812682e66bc05007fcbdf2a3b58d2f93e88cbee9581bb694f04cb1d24/MonsterGen-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "523e5dea3c18729e06d60d145b1496af", "sha256": "f7daa003d72bcf0b869f7ef1ce53349106b17bcc16054c86dc90e3e8e1935c94"}, "downloads": -1, "filename": "MonsterGen-0.0.4.tar.gz", "has_sig": false, "md5_digest": "523e5dea3c18729e06d60d145b1496af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18863, "upload_time": "2020-04-01T06:35:05", "upload_time_iso_8601": "2020-04-01T06:35:05.932405Z", "url": "https://files.pythonhosted.org/packages/ff/57/a984453e0e9d31718576616cff073ae10e7f1a5f105e936a2d97a1aee358/MonsterGen-0.0.4.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "eedbd631c5f41a5d46ef33de65f4bd72", "sha256": "5211091a332d513892a016fee9a7947e4061ed3a06e0c9265c3ba8fb27db09fc"}, "downloads": -1, "filename": "MonsterGen-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "eedbd631c5f41a5d46ef33de65f4bd72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22179, "upload_time": "2020-04-19T23:54:04", "upload_time_iso_8601": "2020-04-19T23:54:04.866628Z", "url": "https://files.pythonhosted.org/packages/cf/d7/c84a50086980e24e2a6199a0228ccdea8ca3518704ae88a8fe276c1e4676/MonsterGen-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dac8ad0d0205f899bbefd0a515054e30", "sha256": "8acd073a9193d2a25a7ec00c146f0a3ca3f9e51b33e1eca8e5669ff521bc1808"}, "downloads": -1, "filename": "MonsterGen-0.0.6.tar.gz", "has_sig": false, "md5_digest": "dac8ad0d0205f899bbefd0a515054e30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19819, "upload_time": "2020-04-19T23:54:06", "upload_time_iso_8601": "2020-04-19T23:54:06.415528Z", "url": "https://files.pythonhosted.org/packages/d5/4f/1b1ccfd8fdb3670801125ff9064ac38085d9f414e3556c6a094bb97ffbd4/MonsterGen-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eedbd631c5f41a5d46ef33de65f4bd72", "sha256": "5211091a332d513892a016fee9a7947e4061ed3a06e0c9265c3ba8fb27db09fc"}, "downloads": -1, "filename": "MonsterGen-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "eedbd631c5f41a5d46ef33de65f4bd72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22179, "upload_time": "2020-04-19T23:54:04", "upload_time_iso_8601": "2020-04-19T23:54:04.866628Z", "url": "https://files.pythonhosted.org/packages/cf/d7/c84a50086980e24e2a6199a0228ccdea8ca3518704ae88a8fe276c1e4676/MonsterGen-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dac8ad0d0205f899bbefd0a515054e30", "sha256": "8acd073a9193d2a25a7ec00c146f0a3ca3f9e51b33e1eca8e5669ff521bc1808"}, "downloads": -1, "filename": "MonsterGen-0.0.6.tar.gz", "has_sig": false, "md5_digest": "dac8ad0d0205f899bbefd0a515054e30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19819, "upload_time": "2020-04-19T23:54:06", "upload_time_iso_8601": "2020-04-19T23:54:06.415528Z", "url": "https://files.pythonhosted.org/packages/d5/4f/1b1ccfd8fdb3670801125ff9064ac38085d9f414e3556c6a094bb97ffbd4/MonsterGen-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:05 2020"}