{"info": {"author": "Open Knowledge Foundation", "author_email": "info@okfn.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "jsontableschema-pandas\n======================\n\n| |Travis|\n| |Coveralls|\n| |PyPi|\n| |SemVer|\n| |Gitter|\n\nGenerate and load Pandas data frames based on JSON Table Schema\ndescriptors.\n\n    Version ``v0.2`` contains breaking changes:\n\n-  removed ``Storage(prefix=)`` argument (was a stub)\n-  renamed ``Storage(tables=)`` to ``Storage(dataframes=)``\n-  renamed ``Storage.tables`` to ``Storage.buckets``\n-  changed ``Storage.read`` to read into memory\n-  added ``Storage.iter`` to yield row by row\n\nGetting Started\n---------------\n\nInstallation\n~~~~~~~~~~~~\n\n::\n\n    $ pip install datapackage\n    $ pip install jsontableschema-pandas\n\nExample\n~~~~~~~\n\nYou can easily load resources from a data package as Pandas data frames\nby simply using ``datapackage.push_datapackage`` function:\n\n.. code:: python\n\n    >>> import datapackage\n\n    >>> data_url = 'http://data.okfn.org/data/core/country-list/datapackage.json'\n    >>> storage = datapackage.push_datapackage(data_url, 'pandas')\n\n    >>> storage.buckets\n    ['data___data']\n\n    >>> type(storage['data___data'])\n    <class 'pandas.core.frame.DataFrame'>\n\n    >>> storage['data___data'].head()\n                 Name Code\n    0     Afghanistan   AF\n    1   \u00c5land Islands   AX\n    2         Albania   AL\n    3         Algeria   DZ\n    4  American Samoa   AS\n\nAlso it is possible to pull your existing data frame into a data\npackage:\n\n.. code:: python\n\n    >>> datapackage.pull_datapackage('/tmp/datapackage.json', 'country_list', 'pandas', tables={\n    ...     'data': storage['data___data'],\n    ... })\n    Storage\n\nStorage\n~~~~~~~\n\nPackage implements `Tabular\nStorage <https://github.com/frictionlessdata/jsontableschema-py#storage>`__\ninterface.\n\nWe can get storage this way:\n\n.. code:: python\n\n    >>> from jsontableschema_pandas import Storage\n\n    >>> storage = Storage()\n\nStorage works as a container for Pandas data frames. You can define new\ndata frame inside storage using ``storage.create`` method:\n\n.. code:: python\n\n    >>> storage.create('data', {\n    ...     'primaryKey': 'id',\n    ...     'fields': [\n    ...         {'name': 'id', 'type': 'integer'},\n    ...         {'name': 'comment', 'type': 'string'},\n    ...     ]\n    ... })\n\n    >>> storage.buckets\n    ['data']\n\n    >>> storage['data'].shape\n    (0, 0)\n\nUse ``storage.write`` to populate data frame with data:\n\n.. code:: python\n\n    >>> storage.write('data', [(1, 'a'), (2, 'b')])\n\n    >>> storage['data']\n    id comment\n    1        a\n    2        b\n\nAlso you can use\n`tabulator <https://github.com/frictionlessdata/tabulator-py>`__ to\npopulate data frame from external data file:\n\n.. code:: python\n\n    >>> import tabulator\n\n    >>> with tabulator.Stream('data/comments.csv', headers=1) as stream:\n    ...     storage.write('data', stream)\n\n    >>> storage['data']\n    id comment\n    1        a\n    2        b\n    1     good\n\nAs you see, subsequent writes simply appends new data on top of existing\nones.\n\nAPI Reference\n-------------\n\nSnapshot\n~~~~~~~~\n\nhttps://github.com/frictionlessdata/jsontableschema-py#snapshot\n\nDetailed\n~~~~~~~~\n\n-  `Docstrings <https://github.com/frictionlessdata/jsontableschema-py/tree/master/jsontableschema/storage.py>`__\n-  `Changelog <https://github.com/frictionlessdata/jsontableschema-pandas-py/commits/master>`__\n\nContributing\n------------\n\nPlease read the contribution guideline:\n\n`How to Contribute <CONTRIBUTING.md>`__\n\nThanks!\n\n.. |Travis| image:: https://img.shields.io/travis/frictionlessdata/jsontableschema-pandas-py/master.svg\n   :target: https://travis-ci.org/frictionlessdata/jsontableschema-pandas-py\n.. |Coveralls| image:: http://img.shields.io/coveralls/frictionlessdata/jsontableschema-pandas-py.svg?branch=master\n   :target: https://coveralls.io/r/frictionlessdata/jsontableschema-pandas-py?branch=master\n.. |PyPi| image:: https://img.shields.io/pypi/v/jsontableschema-pandas.svg\n   :target: https://pypi.python.org/pypi/jsontableschema-pandas\n.. |SemVer| image:: https://img.shields.io/badge/versions-SemVer-brightgreen.svg\n   :target: http://semver.org/\n.. |Gitter| image:: https://img.shields.io/gitter/room/frictionlessdata/chat.svg\n   :target: https://gitter.im/frictionlessdata/chat\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/frictionlessdata/jsontableschema-pandas-py", "keywords": "frictionless data,datapackage,pandas", "license": "LGPLv3+", "maintainer": "", "maintainer_email": "", "name": "jsontableschema-pandas", "package_url": "https://pypi.org/project/jsontableschema-pandas/", "platform": "", "project_url": "https://pypi.org/project/jsontableschema-pandas/", "project_urls": {"Homepage": "https://github.com/frictionlessdata/jsontableschema-pandas-py"}, "release_url": "https://pypi.org/project/jsontableschema-pandas/0.5.0/", "requires_dist": ["jsontableschema (>=0.7,<2.0)", "pandas (>=0.18,<2.0)", "six (>=1.9,<2.0)", "tabulator (>=0.7,<2.0)", "pylama; extra == 'develop'", "tox; extra == 'develop'"], "requires_python": "", "summary": "Generate Pandas data frames, load and extract data, based on JSON Table Schema descriptors.", "version": "0.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<div><a href=\"https://travis-ci.org/frictionlessdata/jsontableschema-pandas-py\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a88c37aeb79d3e7f06164a7245841fcd5d22af35/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f6672696374696f6e6c657373646174612f6a736f6e7461626c65736368656d612d70616e6461732d70792f6d61737465722e737667\"></a></div>\n<div><a href=\"https://coveralls.io/r/frictionlessdata/jsontableschema-pandas-py?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87eb10986640a9ccde839296930c3b6efa3d0f83/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6672696374696f6e6c657373646174612f6a736f6e7461626c65736368656d612d70616e6461732d70792e7376673f6272616e63683d6d6173746572\"></a></div>\n<div><a href=\"https://pypi.python.org/pypi/jsontableschema-pandas\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52a18dce3974b90cba0eb9ecabbae343d21f551a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a736f6e7461626c65736368656d612d70616e6461732e737667\"></a></div>\n<div><a href=\"http://semver.org/\" rel=\"nofollow\"><img alt=\"SemVer\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60994c5c68bc2b27d5be9392bdd900487655e99d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f76657273696f6e732d53656d5665722d627269676874677265656e2e737667\"></a></div>\n<div><a href=\"https://gitter.im/frictionlessdata/chat\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fb17f2481df87e64c9f854d8900ea6aaf373ea77/68747470733a2f2f696d672e736869656c64732e696f2f6769747465722f726f6f6d2f6672696374696f6e6c657373646174612f636861742e737667\"></a></div>\n</div>\n<p>Generate and load Pandas data frames based on JSON Table Schema\ndescriptors.</p>\n<blockquote>\nVersion <tt>v0.2</tt> contains breaking changes:</blockquote>\n<ul>\n<li>removed <tt>Storage(prefix=)</tt> argument (was a stub)</li>\n<li>renamed <tt>Storage(tables=)</tt> to <tt>Storage(dataframes=)</tt></li>\n<li>renamed <tt>Storage.tables</tt> to <tt>Storage.buckets</tt></li>\n<li>changed <tt>Storage.read</tt> to read into memory</li>\n<li>added <tt>Storage.iter</tt> to yield row by row</li>\n</ul>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>$ pip install datapackage\n$ pip install jsontableschema-pandas\n</pre>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>You can easily load resources from a data package as Pandas data frames\nby simply using <tt>datapackage.push_datapackage</tt> function:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">datapackage</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">data_url</span> <span class=\"o\">=</span> <span class=\"s1\">'http://data.okfn.org/data/core/country-list/datapackage.json'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">datapackage</span><span class=\"o\">.</span><span class=\"n\">push_datapackage</span><span class=\"p\">(</span><span class=\"n\">data_url</span><span class=\"p\">,</span> <span class=\"s1\">'pandas'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">buckets</span>\n<span class=\"p\">[</span><span class=\"s1\">'data___data'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">type</span><span class=\"p\">(</span><span class=\"n\">storage</span><span class=\"p\">[</span><span class=\"s1\">'data___data'</span><span class=\"p\">])</span>\n<span class=\"o\">&lt;</span><span class=\"k\">class</span> <span class=\"err\">'</span><span class=\"nc\">pandas</span><span class=\"o\">.</span><span class=\"n\">core</span><span class=\"o\">.</span><span class=\"n\">frame</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"s1\">'&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"p\">[</span><span class=\"s1\">'data___data'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">()</span>\n             <span class=\"n\">Name</span> <span class=\"n\">Code</span>\n<span class=\"mi\">0</span>     <span class=\"n\">Afghanistan</span>   <span class=\"n\">AF</span>\n<span class=\"mi\">1</span>   <span class=\"n\">\u00c5land</span> <span class=\"n\">Islands</span>   <span class=\"n\">AX</span>\n<span class=\"mi\">2</span>         <span class=\"n\">Albania</span>   <span class=\"n\">AL</span>\n<span class=\"mi\">3</span>         <span class=\"n\">Algeria</span>   <span class=\"n\">DZ</span>\n<span class=\"mi\">4</span>  <span class=\"n\">American</span> <span class=\"n\">Samoa</span>   <span class=\"n\">AS</span>\n</pre>\n<p>Also it is possible to pull your existing data frame into a data\npackage:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">datapackage</span><span class=\"o\">.</span><span class=\"n\">pull_datapackage</span><span class=\"p\">(</span><span class=\"s1\">'/tmp/datapackage.json'</span><span class=\"p\">,</span> <span class=\"s1\">'country_list'</span><span class=\"p\">,</span> <span class=\"s1\">'pandas'</span><span class=\"p\">,</span> <span class=\"n\">tables</span><span class=\"o\">=</span><span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"n\">storage</span><span class=\"p\">[</span><span class=\"s1\">'data___data'</span><span class=\"p\">],</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n<span class=\"n\">Storage</span>\n</pre>\n</div>\n<div id=\"storage\">\n<h3>Storage</h3>\n<p>Package implements <a href=\"https://github.com/frictionlessdata/jsontableschema-py#storage\" rel=\"nofollow\">Tabular\nStorage</a>\ninterface.</p>\n<p>We can get storage this way:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">jsontableschema_pandas</span> <span class=\"kn\">import</span> <span class=\"n\">Storage</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span> <span class=\"o\">=</span> <span class=\"n\">Storage</span><span class=\"p\">()</span>\n</pre>\n<p>Storage works as a container for Pandas data frames. You can define new\ndata frame inside storage using <tt>storage.create</tt> method:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'primaryKey'</span><span class=\"p\">:</span> <span class=\"s1\">'id'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s1\">'fields'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>         <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'integer'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>         <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'comment'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'string'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">]</span>\n<span class=\"o\">...</span> <span class=\"p\">})</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">buckets</span>\n<span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">shape</span>\n<span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>Use <tt>storage.write</tt> to populate data frame with data:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"p\">[(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'a'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">)])</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\n<span class=\"nb\">id</span> <span class=\"n\">comment</span>\n<span class=\"mi\">1</span>        <span class=\"n\">a</span>\n<span class=\"mi\">2</span>        <span class=\"n\">b</span>\n</pre>\n<p>Also you can use\n<a href=\"https://github.com/frictionlessdata/tabulator-py\" rel=\"nofollow\">tabulator</a> to\npopulate data frame from external data file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">tabulator</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">with</span> <span class=\"n\">tabulator</span><span class=\"o\">.</span><span class=\"n\">Stream</span><span class=\"p\">(</span><span class=\"s1\">'data/comments.csv'</span><span class=\"p\">,</span> <span class=\"n\">headers</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">stream</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">storage</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"n\">stream</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">storage</span><span class=\"p\">[</span><span class=\"s1\">'data'</span><span class=\"p\">]</span>\n<span class=\"nb\">id</span> <span class=\"n\">comment</span>\n<span class=\"mi\">1</span>        <span class=\"n\">a</span>\n<span class=\"mi\">2</span>        <span class=\"n\">b</span>\n<span class=\"mi\">1</span>     <span class=\"n\">good</span>\n</pre>\n<p>As you see, subsequent writes simply appends new data on top of existing\nones.</p>\n</div>\n</div>\n<div id=\"api-reference\">\n<h2>API Reference</h2>\n<div id=\"snapshot\">\n<h3>Snapshot</h3>\n<p><a href=\"https://github.com/frictionlessdata/jsontableschema-py#snapshot\" rel=\"nofollow\">https://github.com/frictionlessdata/jsontableschema-py#snapshot</a></p>\n</div>\n<div id=\"detailed\">\n<h3>Detailed</h3>\n<ul>\n<li><a href=\"https://github.com/frictionlessdata/jsontableschema-py/tree/master/jsontableschema/storage.py\" rel=\"nofollow\">Docstrings</a></li>\n<li><a href=\"https://github.com/frictionlessdata/jsontableschema-pandas-py/commits/master\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please read the contribution guideline:</p>\n<p><a href=\"CONTRIBUTING.md\" rel=\"nofollow\">How to Contribute</a></p>\n<p>Thanks!</p>\n</div>\n\n          </div>"}, "last_serial": 3149779, "releases": {"0.0.0": [], "0.1.3": [{"comment_text": "", "digests": {"md5": "7dc2939af52fca1993e4edd2aa729e3b", "sha256": "7a8287f9114002e88a58a2ba783cfc1744c880f82f576dbb8b67f934214fb6c8"}, "downloads": -1, "filename": "jsontableschema_pandas-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7dc2939af52fca1993e4edd2aa729e3b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8914, "upload_time": "2016-05-24T18:25:26", "upload_time_iso_8601": "2016-05-24T18:25:26.305335Z", "url": "https://files.pythonhosted.org/packages/20/be/760e69cad4189cf0ed92a0394e765a742ac6ef1d219ca61778935b012a69/jsontableschema_pandas-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9380a95d454502a97619952f1f038ff2", "sha256": "cf6f29ea214723c852a24ba3a981e74729ac5bdbc479dd21d36dbb099cdd5416"}, "downloads": -1, "filename": "jsontableschema-pandas-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9380a95d454502a97619952f1f038ff2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6500, "upload_time": "2016-05-24T18:25:41", "upload_time_iso_8601": "2016-05-24T18:25:41.743093Z", "url": "https://files.pythonhosted.org/packages/71/61/9785d419475539770d2da4a0597f6b6bc902e7bcb2a93e463123cdf51a20/jsontableschema-pandas-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "b6124686e378a70ca7646d8d673dd619", "sha256": "e789f4a12e257e9cd868e8a9da6009ca18f56e580f5f50a9bd62422774b97e01"}, "downloads": -1, "filename": "jsontableschema_pandas-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b6124686e378a70ca7646d8d673dd619", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8889, "upload_time": "2016-08-19T11:05:06", "upload_time_iso_8601": "2016-08-19T11:05:06.368183Z", "url": "https://files.pythonhosted.org/packages/aa/3e/c68aa039a9dce5b2a6dbc36f236c6b9d14445199a2d2a0e5acb7773a1fb0/jsontableschema_pandas-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "982f1d7d1035f09f5dc766df97230042", "sha256": "6c5ecf2d3e3fc8afbd9521f17352bd587d362919a51130533425c4c2dc323501"}, "downloads": -1, "filename": "jsontableschema-pandas-0.1.4.tar.gz", "has_sig": false, "md5_digest": "982f1d7d1035f09f5dc766df97230042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7938, "upload_time": "2016-08-19T11:05:08", "upload_time_iso_8601": "2016-08-19T11:05:08.556176Z", "url": "https://files.pythonhosted.org/packages/9f/48/846bd04d4dbf3ccbfad8f225167a83a4a988350a55362ee204ec34dee86a/jsontableschema-pandas-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4ce730da985d3b678cd6e4299383f061", "sha256": "3a9930a5195454f0d26eb279a5242a93722f56903524c84dfe4e9f9dca3d2e7e"}, "downloads": -1, "filename": "jsontableschema_pandas-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4ce730da985d3b678cd6e4299383f061", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9303, "upload_time": "2016-10-26T15:08:00", "upload_time_iso_8601": "2016-10-26T15:08:00.017487Z", "url": "https://files.pythonhosted.org/packages/83/f6/5e4da0411eb0f826d391cb0800942a1734b34015062b8bfdfb0d1fe6b033/jsontableschema_pandas-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2dc1bd1d5da45b90f2ee911f3bb95508", "sha256": "4d9686eae279cc220acf4f03dc5173c0c7725f7712bc07e862ff913157548b30"}, "downloads": -1, "filename": "jsontableschema-pandas-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2dc1bd1d5da45b90f2ee911f3bb95508", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8670, "upload_time": "2016-10-26T15:08:03", "upload_time_iso_8601": "2016-10-26T15:08:03.074334Z", "url": "https://files.pythonhosted.org/packages/16/0f/e10be1351aa435bb34bcc0da484091aba19e0b72e02c42c043dcd8faf175/jsontableschema-pandas-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "558d9f017c44957f6681bf762161ff37", "sha256": "3ca31bb20145d711088f29159edfdf12a63a9a934d6d9a2eef67d83defafc52b"}, "downloads": -1, "filename": "jsontableschema_pandas-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "558d9f017c44957f6681bf762161ff37", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8866, "upload_time": "2017-03-28T09:28:03", "upload_time_iso_8601": "2017-03-28T09:28:03.327594Z", "url": "https://files.pythonhosted.org/packages/07/22/fc6dd79fc72cebd664ff8b2e485b240735cd9b1f44b8ce32c8dcf930597f/jsontableschema_pandas-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1505555c588115fcf72361d47cb7a809", "sha256": "fde129fa45d3472788cafae2eaf6a9bf9055195bc7d2dbf413c5d5146bad120c"}, "downloads": -1, "filename": "jsontableschema-pandas-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1505555c588115fcf72361d47cb7a809", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6379, "upload_time": "2017-03-28T09:28:05", "upload_time_iso_8601": "2017-03-28T09:28:05.652178Z", "url": "https://files.pythonhosted.org/packages/9d/47/daeb3214fd106072efffd2079c60300cc866fd0aa5be2e4ec1df91de76a4/jsontableschema-pandas-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "0395313a5770f335e84980874348dd70", "sha256": "0e770d4e547dfbecc6904d881abc680ded9f85d8a544f436183ee5eca85355c1"}, "downloads": -1, "filename": "jsontableschema_pandas-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0395313a5770f335e84980874348dd70", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8851, "upload_time": "2017-06-06T09:36:20", "upload_time_iso_8601": "2017-06-06T09:36:20.389571Z", "url": "https://files.pythonhosted.org/packages/bc/6d/cf3f408bb997ad612a93b96224bd1bb2e0671f4fda80d311e87ccd1c3f73/jsontableschema_pandas-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8aec6dfe10a0fa32de4d89698546afb0", "sha256": "20ffb56748f7d6347af6c0248dbc9eee888d10b7f740a58de761bb14a49432bb"}, "downloads": -1, "filename": "jsontableschema-pandas-0.4.0.tar.gz", "has_sig": false, "md5_digest": "8aec6dfe10a0fa32de4d89698546afb0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6351, "upload_time": "2017-06-06T09:36:22", "upload_time_iso_8601": "2017-06-06T09:36:22.137901Z", "url": "https://files.pythonhosted.org/packages/54/c9/3e9bda18a2ed847b2c03e52d81e76c9a2964702c6f7fbb36a97f5b042b9e/jsontableschema-pandas-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "021c8e9511f9bc9d2c584f6fe18bfc04", "sha256": "6248f9c4aec173d1f4b4a1e7e8f17454fada148132a7720e73b69b2c58498a33"}, "downloads": -1, "filename": "jsontableschema_pandas-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "021c8e9511f9bc9d2c584f6fe18bfc04", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9035, "upload_time": "2017-06-09T08:14:00", "upload_time_iso_8601": "2017-06-09T08:14:00.437574Z", "url": "https://files.pythonhosted.org/packages/a0/46/fb5d44e6b3bf99ab26d282803d094e2c8310ec025ee6fa2f4f82866584b4/jsontableschema_pandas-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cc489c1d8c5409f8239acf5ee0128033", "sha256": "1b55f69c4b29bc8d2353ae4fa65b1148b366eb93614018ed9f53f8ca3dfc4836"}, "downloads": -1, "filename": "jsontableschema-pandas-0.4.1.tar.gz", "has_sig": false, "md5_digest": "cc489c1d8c5409f8239acf5ee0128033", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9430, "upload_time": "2017-06-09T08:14:02", "upload_time_iso_8601": "2017-06-09T08:14:02.277773Z", "url": "https://files.pythonhosted.org/packages/14/4c/24e18feaf158291f56e331b12a478e91745271bb02fafe010c1255c4482e/jsontableschema-pandas-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "66a29c27f4a7134b11c63b03a4925fca", "sha256": "32895c32d83d644ca017b5d376911a9ff018b00f550fdd70d967e34da4c29a25"}, "downloads": -1, "filename": "jsontableschema_pandas-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "66a29c27f4a7134b11c63b03a4925fca", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9135, "upload_time": "2017-09-05T08:53:06", "upload_time_iso_8601": "2017-09-05T08:53:06.576569Z", "url": "https://files.pythonhosted.org/packages/92/04/808b627c8d314bee0e45a296e8810328d5f7bc1449a77c63f6e79812ed59/jsontableschema_pandas-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f820382e791c942ace2866298d8e41f", "sha256": "cf5833ebe4ddcab29f3c652304aff6a4316fa9b92d52d9ee047b9cffbb18cebf"}, "downloads": -1, "filename": "jsontableschema-pandas-0.5.0.tar.gz", "has_sig": false, "md5_digest": "0f820382e791c942ace2866298d8e41f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9583, "upload_time": "2017-09-05T08:53:07", "upload_time_iso_8601": "2017-09-05T08:53:07.502389Z", "url": "https://files.pythonhosted.org/packages/fa/e7/f73e2c77418819cb704e0d5ec08d7507df37a29eb5e06f5b403a39d669c5/jsontableschema-pandas-0.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "66a29c27f4a7134b11c63b03a4925fca", "sha256": "32895c32d83d644ca017b5d376911a9ff018b00f550fdd70d967e34da4c29a25"}, "downloads": -1, "filename": "jsontableschema_pandas-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "66a29c27f4a7134b11c63b03a4925fca", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9135, "upload_time": "2017-09-05T08:53:06", "upload_time_iso_8601": "2017-09-05T08:53:06.576569Z", "url": "https://files.pythonhosted.org/packages/92/04/808b627c8d314bee0e45a296e8810328d5f7bc1449a77c63f6e79812ed59/jsontableschema_pandas-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f820382e791c942ace2866298d8e41f", "sha256": "cf5833ebe4ddcab29f3c652304aff6a4316fa9b92d52d9ee047b9cffbb18cebf"}, "downloads": -1, "filename": "jsontableschema-pandas-0.5.0.tar.gz", "has_sig": false, "md5_digest": "0f820382e791c942ace2866298d8e41f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9583, "upload_time": "2017-09-05T08:53:07", "upload_time_iso_8601": "2017-09-05T08:53:07.502389Z", "url": "https://files.pythonhosted.org/packages/fa/e7/f73e2c77418819cb704e0d5ec08d7507df37a29eb5e06f5b403a39d669c5/jsontableschema-pandas-0.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:35 2020"}