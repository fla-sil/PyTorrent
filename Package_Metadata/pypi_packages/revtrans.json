{"info": {"author": "Rasmus Wernersson", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "NAME\n\trevtrans - performs a reverse translation of a peptide alignment\n\nSYNOPSIS\n\trevtrans dnafile pepfile [-v] [-h] [-gapin chars] [-gapout char]\n\t [-Idna format] [-Ipep format] [-mtx tablename/file] [-match method]\n\t [-O format] [outfile]\n\nDESCRIPTION\n       Reads a set of aligned peptide sequences from pepfile and uses\n       the corresponding DNA sequences from dnafile to construct a\n       reverse translated version of the alignment.\n\n       By default the input file formats are auto detected and the\n       corresponding DNA and peptide sequences is found by translation.\n\n       In the typical case this means that the user only need to\n       supply the DNA and peptide sequences, and may safely ignore\n       the more advanced options. E.g :\n\n\t       revtrans kinases.dna.fsa kinases.prot.aln\n\n       The final alignment is written to STDOUT or outfile if specified,\n       and is by default in FASTA format.\n\nOPTIONS\n\t-h\n\t\tHelp. Print this help information.\n\n\t-gapin chars\n\t\tSpecify gap characters in the input sequences.\n\t\tDefault is '.-~'\n\n\t-gapout\tchar\n\t\tSpecify which character should be used for gaps in the\n\t\toutput.\n\t\tDefault is '-'\n\n\t-Idna format\n\t\tSpecify format of the input DNA file.\n\t\tValid formats are: auto (default), fasta, msf and aln\n\n\t-Ipep format\n\t\tSpecify format of the input peptide file.\n\t\tValid formats are: auto (default), fasta, msf and aln\n\n\t-O format\n\t\tSpecify format of the output file.\n\t\tValid formats are: fasta (default), msf and aln\n\n\t-mtx tablename/file\n\t\tUse alternative translation matrix instead of the build-in\n\t\tStandard Genetic Code for translation.\n\n\t\tIf \"tablename\" is 1-6,9-16 or 21-23 one of the alternative\n\t\ttranslation tables defined by the NCBI taxonomy group will be\n\t\tused.\n\n\t\tBriefly, the following tables are defined:\n\t\t-----------------------------------------\n\t\t 1: The Standard Code\n\t\t 2: The Vertebrate Mitochondrial Code\n\t\t 3: The Yeast Mitochondrial Code\n\t\t 4: The Mold, Protozoan, and Coelenterate Mitochondrial Code\n\t\t    and the Mycoplasma/Spiroplasma Code\n\t\t 5: The Invertebrate Mitochondrial Code\n\t\t 6: The Ciliate, Dasycladacean and Hexamita Nuclear Code\n\t\t 9: The Echinoderm and Flatworm Mitochondrial Code\n\t\t10: The Euplotid Nuclear Code\n\t\t11: The Bacterial and Plant Plastid Code\n\t\t12: The Alternative Yeast Nuclear Code\n\t\t13: The Ascidian Mitochondrial Code\n\t\t14: The Alternative Flatworm Mitochondrial Code\n\t\t15: Blepharisma Nuclear Code\n\t\t16: Chlorophycean Mitochondrial Code\n\t\t21: Trematode Mitochondrial Code\n\t\t22: Scenedesmus obliquus mitochondrial Code\n\t\t23: Thraustochytrium Mitochondrial Code\n\n\t\tSee http://www.ncbi.nlm.nih.gov/Taxonomy [Genetic Codes]\n\t\tfor a detailed description. Please notice that the table\n\t\tof start codons is also used (see the -allinternal option\n\t\tbelow for details).\n\n\t\tIf a filename is supplied the translation table is read from\n\t\tfile instead.\n\n\t\tThe file should contain one line per codon in the format:\n\n\t\tcodon<whitespace>aa-single letter code\n\n\t\tAll 64 codons must be included. Stop codons is specified\n\t\tby \"*\". T and U is interchangeable. Blank lines and lines\n\t\tstarting with \"#\" are ignored.\n\n\t\tSee the \"gcMitVertebrate.mtx\" file in the RevTrans source\n\t\tdistribution for a well documented example.\n\n\t-allinternal\n\t\tBy default the very first codon in each sequences is assumed\n\t\tto be the initial codon on the transcript. This means certain\n\t\tnon-methionine codons actually codes for metionine at this\n\t\tposition. For example \"TTG\" in the standard genetic code (see\n\t\tabove).\n\n\t\tSelecting this option treats all codons as internal codons.\n\n\t-readthroughstop\n\t\tAllow the translation to continue after a stop codon is reached.\n\t\tThe stop codon will be marked as \"*\".\n\n\t\tBe careful that stop codons have been addressed in the same manner\n\t\tin the input peptide alignment.\n\n\t-match method\n\t\tSpecify how to match the corresponding DNA and peptide\n\t\tsequences. Valid methods are: trans (default), name and pos.\n\n\t\tPlease note that both DNA and peptide sequence should have\n\t\tunique names, regardless of the matching method.\n\n\t\ttrans:\n\t\t\tMatch sequences by translation. The DNA sequences are\n\t\t\ttranslated using the standard genetic code (default)\n\t\t\tor an alternative translation matrix if the -mtx\n\t\t\toption is used.\n\n\t\tname:\n\t\t\tMatch sequences by name. Please note that for FASTA\n\t\t\tfiles everything after the \">\" is considered the\n\t\t\tsequence name.\n\n\t\tpos:\n\t\t\tMatch by position. The sequence are matched by position\n\t\t\tin the files (first DNA sequence with first peptide\n\t\t\tsequence etc.).\n\t-v\n\t\tVerbose. Print extra information about files, sequences\n\t\tand the progress in general to STDERR.\n\n\t\tThe verbose level can be set to three degrees of\n\t\tdetail.\n\n\t\t-v:   verbose level 1\n\t\t\tInfo about files, number of sequences read etc.\n\t\t\tUse this as the first try if something needs\n\t\t\tinvestigation.\n\n\t\t-vv:  verbose level 2\n\t\t\tAs level 1 +\n\t\t\tPrint detailed info about all the sequence names.\n\n\t\t-vvv: verbose level 3\n\t\t\tAs level 2 +\n\t\t\tDo a sanity check on the degapped length of the\n\t\t\tsequences. Warn if the sizes do not match.\n\nAUTHOR\n\tRasmus Wernersson, raz@cbs.dtu.dk\n\tSeptember 2002, February 2003, July 2004, April 2005\n\nFILES\n\trevtrans.py, mod_translate.py, mod_seqfiles.py,\n\tncbi_genetic_codes.py\n\nWEB PAGE\n\thttp://www.cbs.dtu.dk/services/RevTrans/\n\nREFERENCE\n\tRasmus Wernersson and Anders Gorm Pedersen.\n\tRevTrans - Constructing alignments of coding DNA from aligned amino\n\tacid sequences.\n\tNucl. Acids Res., 2003, 31(13), 3537-3539.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/revtrans", "keywords": null, "license": "GNU General Public License 2", "maintainer": null, "maintainer_email": null, "name": "revtrans", "package_url": "https://pypi.org/project/revtrans/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/revtrans/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/revtrans"}, "release_url": "https://pypi.org/project/revtrans/1.4/", "requires_dist": null, "requires_python": null, "summary": "revtrans - performs a reverse translation of a peptide alignment", "version": "1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            NAME<br>\trevtrans - performs a reverse translation of a peptide alignment<br><br>SYNOPSIS<br>\trevtrans dnafile pepfile [-v] [-h] [-gapin chars] [-gapout char]<br>\t [-Idna format] [-Ipep format] [-mtx tablename/file] [-match method]<br>\t [-O format] [outfile]<br><br>DESCRIPTION<br>       Reads a set of aligned peptide sequences from pepfile and uses<br>       the corresponding DNA sequences from dnafile to construct a<br>       reverse translated version of the alignment.<br><br>       By default the input file formats are auto detected and the<br>       corresponding DNA and peptide sequences is found by translation.<br><br>       In the typical case this means that the user only need to<br>       supply the DNA and peptide sequences, and may safely ignore<br>       the more advanced options. E.g :<br><br>\t       revtrans kinases.dna.fsa kinases.prot.aln<br><br>       The final alignment is written to STDOUT or outfile if specified,<br>       and is by default in FASTA format.<br><br>OPTIONS<br>\t-h<br>\t\tHelp. Print this help information.<br><br>\t-gapin chars<br>\t\tSpecify gap characters in the input sequences.<br>\t\tDefault is '.-~'<br><br>\t-gapout\tchar<br>\t\tSpecify which character should be used for gaps in the<br>\t\toutput.<br>\t\tDefault is '-'<br><br>\t-Idna format<br>\t\tSpecify format of the input DNA file.<br>\t\tValid formats are: auto (default), fasta, msf and aln<br><br>\t-Ipep format<br>\t\tSpecify format of the input peptide file.<br>\t\tValid formats are: auto (default), fasta, msf and aln<br><br>\t-O format<br>\t\tSpecify format of the output file.<br>\t\tValid formats are: fasta (default), msf and aln<br><br>\t-mtx tablename/file<br>\t\tUse alternative translation matrix instead of the build-in<br>\t\tStandard Genetic Code for translation.<br><br>\t\tIf \"tablename\" is 1-6,9-16 or 21-23 one of the alternative<br>\t\ttranslation tables defined by the NCBI taxonomy group will be<br>\t\tused.<br><br>\t\tBriefly, the following tables are defined:<br>\t\t-----------------------------------------<br>\t\t 1: The Standard Code<br>\t\t 2: The Vertebrate Mitochondrial Code<br>\t\t 3: The Yeast Mitochondrial Code<br>\t\t 4: The Mold, Protozoan, and Coelenterate Mitochondrial Code<br>\t\t    and the Mycoplasma/Spiroplasma Code<br>\t\t 5: The Invertebrate Mitochondrial Code<br>\t\t 6: The Ciliate, Dasycladacean and Hexamita Nuclear Code<br>\t\t 9: The Echinoderm and Flatworm Mitochondrial Code<br>\t\t10: The Euplotid Nuclear Code<br>\t\t11: The Bacterial and Plant Plastid Code<br>\t\t12: The Alternative Yeast Nuclear Code<br>\t\t13: The Ascidian Mitochondrial Code<br>\t\t14: The Alternative Flatworm Mitochondrial Code<br>\t\t15: Blepharisma Nuclear Code<br>\t\t16: Chlorophycean Mitochondrial Code<br>\t\t21: Trematode Mitochondrial Code<br>\t\t22: Scenedesmus obliquus mitochondrial Code<br>\t\t23: Thraustochytrium Mitochondrial Code<br><br>\t\tSee http://www.ncbi.nlm.nih.gov/Taxonomy [Genetic Codes]<br>\t\tfor a detailed description. Please notice that the table<br>\t\tof start codons is also used (see the -allinternal option<br>\t\tbelow for details).<br><br>\t\tIf a filename is supplied the translation table is read from<br>\t\tfile instead.<br><br>\t\tThe file should contain one line per codon in the format:<br><br>\t\tcodon&lt;whitespace&gt;aa-single letter code<br><br>\t\tAll 64 codons must be included. Stop codons is specified<br>\t\tby \"*\". T and U is interchangeable. Blank lines and lines<br>\t\tstarting with \"#\" are ignored.<br><br>\t\tSee the \"gcMitVertebrate.mtx\" file in the RevTrans source<br>\t\tdistribution for a well documented example.<br><br>\t-allinternal<br>\t\tBy default the very first codon in each sequences is assumed<br>\t\tto be the initial codon on the transcript. This means certain<br>\t\tnon-methionine codons actually codes for metionine at this<br>\t\tposition. For example \"TTG\" in the standard genetic code (see<br>\t\tabove).<br><br>\t\tSelecting this option treats all codons as internal codons.<br><br>\t-readthroughstop<br>\t\tAllow the translation to continue after a stop codon is reached.<br>\t\tThe stop codon will be marked as \"*\".<br><br>\t\tBe careful that stop codons have been addressed in the same manner<br>\t\tin the input peptide alignment.<br><br>\t-match method<br>\t\tSpecify how to match the corresponding DNA and peptide<br>\t\tsequences. Valid methods are: trans (default), name and pos.<br><br>\t\tPlease note that both DNA and peptide sequence should have<br>\t\tunique names, regardless of the matching method.<br><br>\t\ttrans:<br>\t\t\tMatch sequences by translation. The DNA sequences are<br>\t\t\ttranslated using the standard genetic code (default)<br>\t\t\tor an alternative translation matrix if the -mtx<br>\t\t\toption is used.<br><br>\t\tname:<br>\t\t\tMatch sequences by name. Please note that for FASTA<br>\t\t\tfiles everything after the \"&gt;\" is considered the<br>\t\t\tsequence name.<br><br>\t\tpos:<br>\t\t\tMatch by position. The sequence are matched by position<br>\t\t\tin the files (first DNA sequence with first peptide<br>\t\t\tsequence etc.).<br>\t-v<br>\t\tVerbose. Print extra information about files, sequences<br>\t\tand the progress in general to STDERR.<br><br>\t\tThe verbose level can be set to three degrees of<br>\t\tdetail.<br><br>\t\t-v:   verbose level 1<br>\t\t\tInfo about files, number of sequences read etc.<br>\t\t\tUse this as the first try if something needs<br>\t\t\tinvestigation.<br><br>\t\t-vv:  verbose level 2<br>\t\t\tAs level 1 +<br>\t\t\tPrint detailed info about all the sequence names.<br><br>\t\t-vvv: verbose level 3<br>\t\t\tAs level 2 +<br>\t\t\tDo a sanity check on the degapped length of the<br>\t\t\tsequences. Warn if the sizes do not match.<br><br>AUTHOR<br>\tRasmus Wernersson, raz@cbs.dtu.dk<br>\tSeptember 2002, February 2003, July 2004, April 2005<br><br>FILES<br>\trevtrans.py, mod_translate.py, mod_seqfiles.py,<br>\tncbi_genetic_codes.py<br><br>WEB PAGE<br>\thttp://www.cbs.dtu.dk/services/RevTrans/<br><br>REFERENCE<br>\tRasmus Wernersson and Anders Gorm Pedersen.<br>\tRevTrans - Constructing alignments of coding DNA from aligned amino<br>\tacid sequences.<br>\tNucl. Acids Res., 2003, 31(13), 3537-3539.\n          </div>"}, "last_serial": 798936, "releases": {"1.4": [{"comment_text": "", "digests": {"md5": "28458f825c601022f43f663c5d8f6c1a", "sha256": "eec334bf134f29e9827e92aee9ff96cfd0b13e4dcc28fe6fd9b3e6c1d5e6b46f"}, "downloads": -1, "filename": "revtrans-1.4.tar.gz", "has_sig": false, "md5_digest": "28458f825c601022f43f663c5d8f6c1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15464, "upload_time": "2012-06-01T21:48:19", "upload_time_iso_8601": "2012-06-01T21:48:19.857540Z", "url": "https://files.pythonhosted.org/packages/d7/90/958f1059e08f861743dfc0f0af7a79bd3761db8ec0c339fa0a0ca64c7dc2/revtrans-1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "28458f825c601022f43f663c5d8f6c1a", "sha256": "eec334bf134f29e9827e92aee9ff96cfd0b13e4dcc28fe6fd9b3e6c1d5e6b46f"}, "downloads": -1, "filename": "revtrans-1.4.tar.gz", "has_sig": false, "md5_digest": "28458f825c601022f43f663c5d8f6c1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15464, "upload_time": "2012-06-01T21:48:19", "upload_time_iso_8601": "2012-06-01T21:48:19.857540Z", "url": "https://files.pythonhosted.org/packages/d7/90/958f1059e08f861743dfc0f0af7a79bd3761db8ec0c339fa0a0ca64c7dc2/revtrans-1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:14 2020"}