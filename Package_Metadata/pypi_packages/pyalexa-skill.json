{"info": {"author": "Patrick Ryan", "author_email": "pat_ryan_99@yahoo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: Public Domain", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==================================================================\nPyAlexa: Python module to help in the building of Alexa skill sets\n==================================================================\n\nPyPI Package to search for is: pyalexa-skill\n============================================\n\n\n``PyAlexa-Skill`` is an Open Source licensed Python package with a base class that support the necessary methods for an Alexa\nSkill set and two scripts to help with the creation of the main entry point and the packaging\nof the AWS Lambda Function for the Alexa Skill Set.\n\n\nAlexaBaseHandler class\n----------------------\n\nThe AlexaBaseHandler class is an abstract class that provides the necessary\nframework to build the response hooks for an Alexa application.\n\nIt has a single abstract method, and it will dynamically call methods based on the\nAlexa intent or request.\n\nAlexa Requests\n--------------\nFor Alexa requests, this class will look for methods of the form:\n\n    def on_<request name>\n\nFor example, the LaunchRequest will look for a method of the name:\n\n    def on_launchrequest(self, launch_request, session):\n\nAlexa/Amazon Intents\n--------------------\nFor Alexa intents, this class will look for methods of the form:\n\n    def on_<intentname>_intent\n\nFor example,\n\nAMAZON.YesIntent\n\nwill look for a method of the name:\n\n    def on_yes_intent(intent_request, session)\n\nAMAZON.HelpIntent\n\nwill look fr a method of the name:\n\n    def on_help_intent(intent_request, session)\n\nApplication Defined Intents\n---------------------------\n\nAnd intents that are application defined will follow the form:\n\n    def on_<application intent name>_intent(intent_request, session)\n\n\nabstract method\n---------------\nThe only abstract method that has to be implemented is the following:\n\n\n    def on_processing_error(self, event, context, exc):\n\n\n\nprocess_request\n---------------\nThis method will take the 2 parameters that are sent to the lambda function\nand determine which of the Alexa handlers to invoke.\n\nFor the Amazon Built-in requests such as AMAZON.YesIntent, process request will\ncall a method of the form:  on_<intentname>_intent, e.g. on_yes_intent().  It is expected\nthat the concrete implementation will have a the necessary methods to support the\nbuilt-in intents.\n\nFor custom intents, such as, MyCustomIntent, process request will\ncall a method of the form:  on_<intentname>_intent, e.g. on_mycustomintent_intent().\nIn this case, no assumption is made about the custom intent name, so the entire\nname is lower cased, then used in the creation of the dynamic method call.\n\nFor Amazon Built-in requests such as AudioPlayer.PlaybackStarted, process request will\ncall a method of the form:  on_<major name>_<minor name>, e.g.\non_audioplayer_playbackstarted().\n\nIf any of the dynamically called methods is not found, a NotImplementedError exception\nis raised.\n\n_build_speechlet_response\n-------------------------\nThis method ( from the Alexa color example ) will put together the speechlet portion\ninto a properly formatted json message.  This is typically called by the\nconcrete implementations of the AlexaBaseHandler.\n\n_build_response\n---------------\nThis method (from the Alexa color example ) will construct a properly formatted\nresponse message so the Amazon Echo knows what to respond with.\n\nAlexaDeploymentHandler class\n----------------------------\nThis class is a reference implementation that does nothing useful.  All Alexa\nhandlers are handled the same way.\n\nTo create the concrete implementation use the following: ::\n\n  from pyalexaskill import AlexaBaseHandler\n  class MyConcreteAlexaHandler(AlexaBaseHandler.AlexaBaseHandler):\n      # implement the abstract methods\n\nmain.py\n-------\nThis file contains the main entry point of the lambda function that is called\nfor the Alexa skill.\n\nlambda_handler(event, context)\n------------------------------\nThis method ( which can be called anything, you just need to configure it in\nthe lambda handler ), is the method that is called with the 2 parameters.\n\nThis method will typically instantiate an concrete implementation of the\nAlexaBaseHandler and delegate to the process_request method.\n\nrequirements.txt\n----------------\nThis file is the standard Python requirements file.  This file is used by the\ncreate_deployment.py script to install the necessary 3rd party libraries that\nyour Alexa skill might need.  Any library specified in the requirements.txt\nfile will be installed into your deployment directory.\n\nCreate a zip file of all code necessary for AWS Lambda\n======================================================\n\ncreate_aws_lambda.py\n--------------------\nThis script creates a zip file per the Amazon lambda specification, such that\nit is suitable to upload as your lambda function implementation.\n\nactivate your virtualenv and execute like: ::\n\n  create_aws_lambda.py -r <rootdir> -i \"list,of,all,python,files,to,include\"\n\n\ncreate_aws_main.py\n------------------\nThis script creates a template main entry point\n\nAll deployments are stored in the deployments subdirectory and follow the naming\nconvention of 'deployment_n' and 'deployment_n.zip', where 'n' is automatically\ncalculated to the next largest 'n' in the directory.  Right now it does this\nbased on the name of the subdirectories of deployments - NOT - the names of\nthe zip files.\n\nThe deployment script will create a deployment directory and zip file for\neverything in the requirements.txt file AND the files in the deployment_files\nvariable in the create_deployment.py file.\n\nWhen this script is done running, there should be a 'deployment_n.zip' file in the deployments directory.\nIt is that file that needs to be upload to the Amazon Lambda console.\n\nactivate your virutal env and execute like: ::\n\n    create_aws_main.py\n\n\ncreate_alexa_handler.py\n-----------------------\nThis script creates a template concrete handler class.\n\nThis template can be used as the starting point to create the necessary implementation\ndetails for the handler.\n\nactivate your virtualenv and execute like: ::\n\n    create_alexa_handler.py\n\n\ncreate_alexa_test_skills.py\n---------------------------\nThis script creates a template utterance and intent schema.\n\nThis template can be used as the starting point to create the necessary implementation\ndetails for an actual utterance and intent schema.\n\nactivate your virtualenv and execute like: ::\n\n    create_alexa_test_skills.py\n\n\ncreate_test_deployment.py\n-------------------------\nThis script calls all of the necessary scripts to create a sample deployment ready to\nupload to AWS Lambda, and it creates sample utterances and intent schema.\n\n\nTest Project\n------------\nhttps://github.com/youngsoul/PyAlexaSkillTest", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/youngsoul/PyAlexa", "keywords": "alexa,skill", "license": "Public Domain", "maintainer": "", "maintainer_email": "", "name": "pyalexa-skill", "package_url": "https://pypi.org/project/pyalexa-skill/", "platform": "", "project_url": "https://pypi.org/project/pyalexa-skill/", "project_urls": {"Homepage": "https://github.com/youngsoul/PyAlexa"}, "release_url": "https://pypi.org/project/pyalexa-skill/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Python module with a base class to support an Alexa skill set, and scripts to build an AWS python distibution", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pypi-package-to-search-for-is-pyalexa-skill\">\n<h2>PyPI Package to search for is: pyalexa-skill</h2>\n<p><tt><span class=\"pre\">PyAlexa-Skill</span></tt> is an Open Source licensed Python package with a base class that support the necessary methods for an Alexa\nSkill set and two scripts to help with the creation of the main entry point and the packaging\nof the AWS Lambda Function for the Alexa Skill Set.</p>\n<div id=\"alexabasehandler-class\">\n<h3>AlexaBaseHandler class</h3>\n<p>The AlexaBaseHandler class is an abstract class that provides the necessary\nframework to build the response hooks for an Alexa application.</p>\n<p>It has a single abstract method, and it will dynamically call methods based on the\nAlexa intent or request.</p>\n</div>\n<div id=\"alexa-requests\">\n<h3>Alexa Requests</h3>\n<p>For Alexa requests, this class will look for methods of the form:</p>\n<blockquote>\ndef on_&lt;request name&gt;</blockquote>\n<p>For example, the LaunchRequest will look for a method of the name:</p>\n<blockquote>\ndef on_launchrequest(self, launch_request, session):</blockquote>\n</div>\n<div id=\"alexa-amazon-intents\">\n<h3>Alexa/Amazon Intents</h3>\n<p>For Alexa intents, this class will look for methods of the form:</p>\n<blockquote>\ndef on_&lt;intentname&gt;_intent</blockquote>\n<p>For example,</p>\n<p>AMAZON.YesIntent</p>\n<p>will look for a method of the name:</p>\n<blockquote>\ndef on_yes_intent(intent_request, session)</blockquote>\n<p>AMAZON.HelpIntent</p>\n<p>will look fr a method of the name:</p>\n<blockquote>\ndef on_help_intent(intent_request, session)</blockquote>\n</div>\n<div id=\"application-defined-intents\">\n<h3>Application Defined Intents</h3>\n<p>And intents that are application defined will follow the form:</p>\n<blockquote>\ndef on_&lt;application intent name&gt;_intent(intent_request, session)</blockquote>\n</div>\n<div id=\"abstract-method\">\n<h3>abstract method</h3>\n<p>The only abstract method that has to be implemented is the following:</p>\n<blockquote>\ndef on_processing_error(self, event, context, exc):</blockquote>\n</div>\n<div id=\"process-request\">\n<h3>process_request</h3>\n<p>This method will take the 2 parameters that are sent to the lambda function\nand determine which of the Alexa handlers to invoke.</p>\n<p>For the Amazon Built-in requests such as AMAZON.YesIntent, process request will\ncall a method of the form:  on_&lt;intentname&gt;_intent, e.g. on_yes_intent().  It is expected\nthat the concrete implementation will have a the necessary methods to support the\nbuilt-in intents.</p>\n<p>For custom intents, such as, MyCustomIntent, process request will\ncall a method of the form:  on_&lt;intentname&gt;_intent, e.g. on_mycustomintent_intent().\nIn this case, no assumption is made about the custom intent name, so the entire\nname is lower cased, then used in the creation of the dynamic method call.</p>\n<p>For Amazon Built-in requests such as AudioPlayer.PlaybackStarted, process request will\ncall a method of the form:  on_&lt;major name&gt;_&lt;minor name&gt;, e.g.\non_audioplayer_playbackstarted().</p>\n<p>If any of the dynamically called methods is not found, a NotImplementedError exception\nis raised.</p>\n</div>\n<div id=\"build-speechlet-response\">\n<h3>_build_speechlet_response</h3>\n<p>This method ( from the Alexa color example ) will put together the speechlet portion\ninto a properly formatted json message.  This is typically called by the\nconcrete implementations of the AlexaBaseHandler.</p>\n</div>\n<div id=\"build-response\">\n<h3>_build_response</h3>\n<p>This method (from the Alexa color example ) will construct a properly formatted\nresponse message so the Amazon Echo knows what to respond with.</p>\n</div>\n<div id=\"alexadeploymenthandler-class\">\n<h3>AlexaDeploymentHandler class</h3>\n<p>This class is a reference implementation that does nothing useful.  All Alexa\nhandlers are handled the same way.</p>\n<p>To create the concrete implementation use the following:</p>\n<pre>from pyalexaskill import AlexaBaseHandler\nclass MyConcreteAlexaHandler(AlexaBaseHandler.AlexaBaseHandler):\n    # implement the abstract methods\n</pre>\n</div>\n<div id=\"main-py\">\n<h3>main.py</h3>\n<p>This file contains the main entry point of the lambda function that is called\nfor the Alexa skill.</p>\n</div>\n<div id=\"lambda-handler-event-context\">\n<h3>lambda_handler(event, context)</h3>\n<p>This method ( which can be called anything, you just need to configure it in\nthe lambda handler ), is the method that is called with the 2 parameters.</p>\n<p>This method will typically instantiate an concrete implementation of the\nAlexaBaseHandler and delegate to the process_request method.</p>\n</div>\n<div id=\"requirements-txt\">\n<h3>requirements.txt</h3>\n<p>This file is the standard Python requirements file.  This file is used by the\ncreate_deployment.py script to install the necessary 3rd party libraries that\nyour Alexa skill might need.  Any library specified in the requirements.txt\nfile will be installed into your deployment directory.</p>\n</div>\n</div>\n<div id=\"create-a-zip-file-of-all-code-necessary-for-aws-lambda\">\n<h2>Create a zip file of all code necessary for AWS Lambda</h2>\n<div id=\"create-aws-lambda-py\">\n<h3>create_aws_lambda.py</h3>\n<p>This script creates a zip file per the Amazon lambda specification, such that\nit is suitable to upload as your lambda function implementation.</p>\n<p>activate your virtualenv and execute like:</p>\n<pre>create_aws_lambda.py -r &lt;rootdir&gt; -i \"list,of,all,python,files,to,include\"\n</pre>\n</div>\n<div id=\"create-aws-main-py\">\n<h3>create_aws_main.py</h3>\n<p>This script creates a template main entry point</p>\n<p>All deployments are stored in the deployments subdirectory and follow the naming\nconvention of \u2018deployment_n\u2019 and \u2018deployment_n.zip\u2019, where \u2018n\u2019 is automatically\ncalculated to the next largest \u2018n\u2019 in the directory.  Right now it does this\nbased on the name of the subdirectories of deployments - NOT - the names of\nthe zip files.</p>\n<p>The deployment script will create a deployment directory and zip file for\neverything in the requirements.txt file AND the files in the deployment_files\nvariable in the create_deployment.py file.</p>\n<p>When this script is done running, there should be a \u2018deployment_n.zip\u2019 file in the deployments directory.\nIt is that file that needs to be upload to the Amazon Lambda console.</p>\n<p>activate your virutal env and execute like:</p>\n<pre>create_aws_main.py\n</pre>\n</div>\n<div id=\"create-alexa-handler-py\">\n<h3>create_alexa_handler.py</h3>\n<p>This script creates a template concrete handler class.</p>\n<p>This template can be used as the starting point to create the necessary implementation\ndetails for the handler.</p>\n<p>activate your virtualenv and execute like:</p>\n<pre>create_alexa_handler.py\n</pre>\n</div>\n<div id=\"create-alexa-test-skills-py\">\n<h3>create_alexa_test_skills.py</h3>\n<p>This script creates a template utterance and intent schema.</p>\n<p>This template can be used as the starting point to create the necessary implementation\ndetails for an actual utterance and intent schema.</p>\n<p>activate your virtualenv and execute like:</p>\n<pre>create_alexa_test_skills.py\n</pre>\n</div>\n<div id=\"create-test-deployment-py\">\n<h3>create_test_deployment.py</h3>\n<p>This script calls all of the necessary scripts to create a sample deployment ready to\nupload to AWS Lambda, and it creates sample utterances and intent schema.</p>\n</div>\n<div id=\"test-project\">\n<h3>Test Project</h3>\n<p><a href=\"https://github.com/youngsoul/PyAlexaSkillTest\" rel=\"nofollow\">https://github.com/youngsoul/PyAlexaSkillTest</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4821984, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "abd9165ce48a03ebd87238a0a274bfb5", "sha256": "0e9eb2311d83799328fc0657787f12d777924372dbecee341758763bd0012311"}, "downloads": -1, "filename": "pyalexa-skill-0.0.4.tar.gz", "has_sig": false, "md5_digest": "abd9165ce48a03ebd87238a0a274bfb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8611, "upload_time": "2016-03-24T03:31:31", "upload_time_iso_8601": "2016-03-24T03:31:31.556625Z", "url": "https://files.pythonhosted.org/packages/33/f3/2c4b5ce7c855044a7d52003ce370e1c1ec2e607ec0d3925340fc34b2c282/pyalexa-skill-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ce176626fb6054c27a20d88bb6248c55", "sha256": "28df0d43ecd408eb73491be9111c5c7d7cdf9cde23812aab534b4c03e5fc316a"}, "downloads": -1, "filename": "pyalexa-skill-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ce176626fb6054c27a20d88bb6248c55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8735, "upload_time": "2016-03-24T03:56:27", "upload_time_iso_8601": "2016-03-24T03:56:27.345633Z", "url": "https://files.pythonhosted.org/packages/52/91/ef0f2f6170ccac07a829460d7fb66e9b14140b8385a935036da7367e9bee/pyalexa-skill-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "955873131a6300401feebfd35ba9625d", "sha256": "189382549ef56e7aadd376511f3bc121fdf82becb805fd5403ddfc48f6e987cc"}, "downloads": -1, "filename": "pyalexa-skill-0.0.6.tar.gz", "has_sig": false, "md5_digest": "955873131a6300401feebfd35ba9625d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9480, "upload_time": "2016-03-24T15:15:31", "upload_time_iso_8601": "2016-03-24T15:15:31.513376Z", "url": "https://files.pythonhosted.org/packages/21/6e/9fe71e0a9725cf06a0e25cb89c6ad64ed154492ce04d79450d61b697d3de/pyalexa-skill-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "cfd1c7b4c63886d307df8e980dbc7a99", "sha256": "8d790c927d077e6b18dca6fd297697aa93531d5a0ca9cd2534cdcdab6898d02d"}, "downloads": -1, "filename": "pyalexa-skill-0.0.7.tar.gz", "has_sig": false, "md5_digest": "cfd1c7b4c63886d307df8e980dbc7a99", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9579, "upload_time": "2016-03-25T20:52:53", "upload_time_iso_8601": "2016-03-25T20:52:53.854971Z", "url": "https://files.pythonhosted.org/packages/7e/16/261a3b59270be51d1eeb1505cac4b81214e0f797915445f58870b0329494/pyalexa-skill-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "63247534728b4b5c654a627066a232d8", "sha256": "d9c4afc7861f12868585a161899b982b9ab5650259dbca92c578d23e13348a97"}, "downloads": -1, "filename": "pyalexa-skill-0.0.8.tar.gz", "has_sig": false, "md5_digest": "63247534728b4b5c654a627066a232d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9676, "upload_time": "2016-03-26T19:16:31", "upload_time_iso_8601": "2016-03-26T19:16:31.869295Z", "url": "https://files.pythonhosted.org/packages/f9/02/fcfa2227200cc9720aafcc84ee1d87579073cb1a5fda0510b9c300d7e3a6/pyalexa-skill-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "aa57003e0b930e56762ad7a199b770f9", "sha256": "3db0a872ce933aac332262d9f7e6da93be10a50fe70b6bbd692eb286934a432c"}, "downloads": -1, "filename": "pyalexa-skill-0.0.9.tar.gz", "has_sig": false, "md5_digest": "aa57003e0b930e56762ad7a199b770f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9717, "upload_time": "2016-03-26T20:07:07", "upload_time_iso_8601": "2016-03-26T20:07:07.509806Z", "url": "https://files.pythonhosted.org/packages/34/6a/b82007481b44896d51c0a21ad445610b5ac3d0da3cd158a5a2119eb1f39c/pyalexa-skill-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "23aa92940b8ac4c6176ebe5e4292a872", "sha256": "03f76edae67b626c8e61fb76590efe80263332c01a23a05491676280bdc733a3"}, "downloads": -1, "filename": "pyalexa-skill-0.1.0.tar.gz", "has_sig": false, "md5_digest": "23aa92940b8ac4c6176ebe5e4292a872", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9731, "upload_time": "2016-03-26T20:12:34", "upload_time_iso_8601": "2016-03-26T20:12:34.766869Z", "url": "https://files.pythonhosted.org/packages/78/a0/0b16bf1a6b7eff8f8df7502206f3d0ec2c21b78d92f0cbf959f1d99879e5/pyalexa-skill-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6d0ab1af3df84f6e617e949d1e9e2db2", "sha256": "53b452260ec776aebc0b8fdf69e113e1108fc840a1a4cd2086f4e81096daf32d"}, "downloads": -1, "filename": "pyalexa-skill-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6d0ab1af3df84f6e617e949d1e9e2db2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9838, "upload_time": "2016-03-27T16:14:41", "upload_time_iso_8601": "2016-03-27T16:14:41.520788Z", "url": "https://files.pythonhosted.org/packages/af/9d/5c3ca6d75447655a8d8686ea574adbb5a7f6af06d33ea83b717375abf310/pyalexa-skill-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "bdf35a800d91982d61678eeb4fd98de3", "sha256": "f9f392bf1b40ea5f4a60eb56b853d52b66b39385dcfb018368b20bb0558c736e"}, "downloads": -1, "filename": "pyalexa-skill-0.1.10.tar.gz", "has_sig": false, "md5_digest": "bdf35a800d91982d61678eeb4fd98de3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11575, "upload_time": "2016-09-05T00:56:36", "upload_time_iso_8601": "2016-09-05T00:56:36.094752Z", "url": "https://files.pythonhosted.org/packages/a5/52/3a41e17cfef369c3b58f691e5b6dd071375587347119f6f502eb00c86a68/pyalexa-skill-0.1.10.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c7db732578afeee22ba59bce02586b32", "sha256": "335c89b8b00dc520facc45856e105c7be7b61ac0c5c0070c7a1082c50ffd8e00"}, "downloads": -1, "filename": "pyalexa-skill-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c7db732578afeee22ba59bce02586b32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9888, "upload_time": "2016-03-28T22:47:51", "upload_time_iso_8601": "2016-03-28T22:47:51.004236Z", "url": "https://files.pythonhosted.org/packages/a0/9d/2934167468d0bc9b3f1342dd9c77c244b8767667f0469b935157de5df1a9/pyalexa-skill-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f3f10bb893a0e05115ad0f4cfd56c219", "sha256": "52274ee1027c3dd82b2d2bf9c0e051b55d10733dc217c2c95f7cf5c01d1db802"}, "downloads": -1, "filename": "pyalexa-skill-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f3f10bb893a0e05115ad0f4cfd56c219", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10174, "upload_time": "2016-03-29T04:36:00", "upload_time_iso_8601": "2016-03-29T04:36:00.476782Z", "url": "https://files.pythonhosted.org/packages/30/11/7b4de842206326d8f08d95f8dc577d9b625fd90232c823aff9e4456c0a39/pyalexa-skill-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "a7dd963f6d09fda7e4aed4ae4ca1ad63", "sha256": "35399de0cb23cef9ecc34c57800d31445af5f2b304da74dbf66090a3f42e00d7"}, "downloads": -1, "filename": "pyalexa-skill-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a7dd963f6d09fda7e4aed4ae4ca1ad63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10296, "upload_time": "2016-03-30T00:42:07", "upload_time_iso_8601": "2016-03-30T00:42:07.612879Z", "url": "https://files.pythonhosted.org/packages/40/47/53ae03e5fa2626d1b265d7e1883a6f2940e66310fe2b8065c74eea0c9aa7/pyalexa-skill-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b9818facc21a5107244cc0b127f2bf77", "sha256": "86327fbb98b6b044849fa29c575eae24f36d0c8c5a02638a0bc1810dfa622df7"}, "downloads": -1, "filename": "pyalexa-skill-0.1.5.tar.gz", "has_sig": false, "md5_digest": "b9818facc21a5107244cc0b127f2bf77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10674, "upload_time": "2016-04-06T00:24:36", "upload_time_iso_8601": "2016-04-06T00:24:36.052112Z", "url": "https://files.pythonhosted.org/packages/dc/65/3eb15f4218dd3192b2b6693367eb41f55af5c00e345452074c5c59636c40/pyalexa-skill-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "01008e587c3c015a85ea176553426149", "sha256": "be2639ec64dd6d7a08720116d3ab67f70646b71c5edc5b72769b7c34e4bb59c7"}, "downloads": -1, "filename": "pyalexa-skill-0.1.6.tar.gz", "has_sig": false, "md5_digest": "01008e587c3c015a85ea176553426149", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10795, "upload_time": "2016-04-21T00:45:38", "upload_time_iso_8601": "2016-04-21T00:45:38.049365Z", "url": "https://files.pythonhosted.org/packages/f1/fd/3c88de12d60893cfcccb3d909e7c21ae27c924b3d89b551f4b6c54e08cd0/pyalexa-skill-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "2859568ae337ca3b3498a990e05e46d0", "sha256": "82bf21d944ee6db13498195bd2517d3d2a34960116fed2034d33ae0f0acedd8c"}, "downloads": -1, "filename": "pyalexa-skill-0.1.7.tar.gz", "has_sig": false, "md5_digest": "2859568ae337ca3b3498a990e05e46d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11097, "upload_time": "2016-04-21T01:03:33", "upload_time_iso_8601": "2016-04-21T01:03:33.730092Z", "url": "https://files.pythonhosted.org/packages/da/30/a4682f78fb72660d73ee3f76a9b45ae2e6f5f22e99e50c5cc24daa9db173/pyalexa-skill-0.1.7.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "e9443ed4af988f4dfc34a59b8199d5ed", "sha256": "04eb4737cdbeae438e5c96b8dfb5063daa95e4a28668bb7e6909431cad686fee"}, "downloads": -1, "filename": "pyalexa-skill-0.1.9.tar.gz", "has_sig": false, "md5_digest": "e9443ed4af988f4dfc34a59b8199d5ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11422, "upload_time": "2016-05-19T21:37:23", "upload_time_iso_8601": "2016-05-19T21:37:23.770028Z", "url": "https://files.pythonhosted.org/packages/40/de/51ad746d096ca40bce9bd4b547e25e661ed153a9d93f28e2453717bf89f5/pyalexa-skill-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "235ed89896d862eeaecdf95539870fc4", "sha256": "bc7521f3ab7c5b2ce66fb0219f4062e430bdaf8892e387f80780c5753a489049"}, "downloads": -1, "filename": "pyalexa-skill-0.2.0.tar.gz", "has_sig": false, "md5_digest": "235ed89896d862eeaecdf95539870fc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16676, "upload_time": "2016-10-11T04:17:02", "upload_time_iso_8601": "2016-10-11T04:17:02.639646Z", "url": "https://files.pythonhosted.org/packages/c5/10/f8d51d4027abba0d12f7c30ad4c8f6cdd83fc75dba27597d41f25f04985a/pyalexa-skill-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d027102a1596ccf32e0b58b389340610", "sha256": "cd7b2f53eed1ef74c9cefabd1a3b6467729259b51a127a30b2abccb80f2581df"}, "downloads": -1, "filename": "pyalexa-skill-0.2.1.tar.gz", "has_sig": false, "md5_digest": "d027102a1596ccf32e0b58b389340610", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16637, "upload_time": "2016-12-18T03:16:18", "upload_time_iso_8601": "2016-12-18T03:16:18.073269Z", "url": "https://files.pythonhosted.org/packages/28/be/022471f8f116c170d030d7579c1e89268109aef34935adb00876cfaf3d7e/pyalexa-skill-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "b4c8272041fee585246988a11f35ddeb", "sha256": "9270f15a5719c70442f708147e49b0645fe49a9099570b5183cef5f69c40bbbb"}, "downloads": -1, "filename": "pyalexa-skill-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b4c8272041fee585246988a11f35ddeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16688, "upload_time": "2016-12-27T21:36:50", "upload_time_iso_8601": "2016-12-27T21:36:50.621917Z", "url": "https://files.pythonhosted.org/packages/c9/3f/7a587b97c2136c2c32a57e14fcb0253ee2f6fae73620083c9ab0044276d9/pyalexa-skill-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "f5ba210ea47a47507d8c8270a5b0b08d", "sha256": "ba2caff338019c514799eac18e2818593626d662352d925789237e0fdbebefb1"}, "downloads": -1, "filename": "pyalexa-skill-0.2.3.tar.gz", "has_sig": false, "md5_digest": "f5ba210ea47a47507d8c8270a5b0b08d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16720, "upload_time": "2016-12-27T21:55:44", "upload_time_iso_8601": "2016-12-27T21:55:44.895214Z", "url": "https://files.pythonhosted.org/packages/3c/2e/37e88948290e5fc7157d7d880053ee310d1a5cda8fb897fa3680dc31cfba/pyalexa-skill-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "3eb9eb7fa4f472813d30be49751e6fa9", "sha256": "dbe1f2c6f27c731351835e516664f2d30a3ba5a88d98d61b6f31d86fd6daf561"}, "downloads": -1, "filename": "pyalexa-skill-0.2.4.tar.gz", "has_sig": false, "md5_digest": "3eb9eb7fa4f472813d30be49751e6fa9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16784, "upload_time": "2017-01-04T01:41:02", "upload_time_iso_8601": "2017-01-04T01:41:02.931900Z", "url": "https://files.pythonhosted.org/packages/37/19/449d9fbf37512f92a27698a34ad3a8e481be5e6def4be6b0af9c24b4fb10/pyalexa-skill-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "8c814e8f89c4fb54f247db896422ad9f", "sha256": "57ad64ff800d1e3f8c605275f73dd60b2ce79d2c8f0c64f0047f3cfff8dbe1e4"}, "downloads": -1, "filename": "pyalexa-skill-0.2.5.tar.gz", "has_sig": false, "md5_digest": "8c814e8f89c4fb54f247db896422ad9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16870, "upload_time": "2017-01-10T02:07:14", "upload_time_iso_8601": "2017-01-10T02:07:14.641524Z", "url": "https://files.pythonhosted.org/packages/e6/29/f1c36ab13f5f59a899b58ca7cf6f040db75f2d65a825116b504d9935112f/pyalexa-skill-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "9dc07ff2ac3013a9fa46ee3ef6121ece", "sha256": "cb5626b654e477658b4e45f5608ecaf877bfebc03ece39a5cb49ee103756adb9"}, "downloads": -1, "filename": "pyalexa-skill-0.2.6.tar.gz", "has_sig": false, "md5_digest": "9dc07ff2ac3013a9fa46ee3ef6121ece", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16937, "upload_time": "2017-01-11T03:41:21", "upload_time_iso_8601": "2017-01-11T03:41:21.895469Z", "url": "https://files.pythonhosted.org/packages/db/20/03af7173a69ffd3599b06e852880b446c425f32548efda842d5e759420f4/pyalexa-skill-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "55436a51cefafde18473bcd0a2d007c2", "sha256": "b3644174e5a7ed74db10eb2b29cae4cd5dfa533c860ec084cab7424512c183a2"}, "downloads": -1, "filename": "pyalexa-skill-0.2.7.tar.gz", "has_sig": false, "md5_digest": "55436a51cefafde18473bcd0a2d007c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18159, "upload_time": "2017-10-16T01:21:02", "upload_time_iso_8601": "2017-10-16T01:21:02.731956Z", "url": "https://files.pythonhosted.org/packages/65/8e/2c51fcebafbc2a1a17cd3bcdcf9df0dcaaf0813be2673da29bc13d6bce09/pyalexa-skill-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "e1802735191d2c7819eaf466a26bb048", "sha256": "c17f4ee9b2d682306ed7bc864d92d42824b96f3bb7b2071341deecf8bd36bb01"}, "downloads": -1, "filename": "pyalexa-skill-0.2.8.tar.gz", "has_sig": false, "md5_digest": "e1802735191d2c7819eaf466a26bb048", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19438, "upload_time": "2017-12-01T22:55:55", "upload_time_iso_8601": "2017-12-01T22:55:55.385032Z", "url": "https://files.pythonhosted.org/packages/81/ca/d16321247c2fe8a9a815becadcab56c1f064b6894864451a3917744ebb95/pyalexa-skill-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "cde4f39cbaed37688f660ad25f4f7e8f", "sha256": "96da3269483d2526ace394da4bfea6df230723daf40fc19a16a205b03323942e"}, "downloads": -1, "filename": "pyalexa-skill-0.2.9.tar.gz", "has_sig": false, "md5_digest": "cde4f39cbaed37688f660ad25f4f7e8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19710, "upload_time": "2019-02-14T18:15:09", "upload_time_iso_8601": "2019-02-14T18:15:09.830734Z", "url": "https://files.pythonhosted.org/packages/db/ff/e926d9eb955b6571488335b019fcd675bf16b4929b7e0100635aaa16729d/pyalexa-skill-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "3cd78014c3825574f2183403cd962cc1", "sha256": "1eefa2ffeb7d36a3a6413f3c3178c2f53b12f0198f2a668e46786cf99c574375"}, "downloads": -1, "filename": "pyalexa-skill-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3cd78014c3825574f2183403cd962cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19938, "upload_time": "2019-02-14T20:26:27", "upload_time_iso_8601": "2019-02-14T20:26:27.239747Z", "url": "https://files.pythonhosted.org/packages/9d/8f/a1017ff4de1e698d6cf68e3959394878f2c5b8e9a9fe9524184c40e2bd10/pyalexa-skill-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cd78014c3825574f2183403cd962cc1", "sha256": "1eefa2ffeb7d36a3a6413f3c3178c2f53b12f0198f2a668e46786cf99c574375"}, "downloads": -1, "filename": "pyalexa-skill-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3cd78014c3825574f2183403cd962cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19938, "upload_time": "2019-02-14T20:26:27", "upload_time_iso_8601": "2019-02-14T20:26:27.239747Z", "url": "https://files.pythonhosted.org/packages/9d/8f/a1017ff4de1e698d6cf68e3959394878f2c5b8e9a9fe9524184c40e2bd10/pyalexa-skill-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:51 2020"}