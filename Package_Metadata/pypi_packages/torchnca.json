{"info": {"author": "Kevin Zakka", "author_email": "kevinarmandzakka@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# torchnca\n\nA PyTorch implementation of [Neighbourhood Components Analysis](https://www.cs.toronto.edu/~hinton/absps/nca.pdf) by *J. Goldberger, G. Hinton, S. Roweis, R. Salakhutdinov*.\n\nNCA learns a linear transformation of the dataset such that the expected leave-one-out performance of kNN in the transformed space is maximized.\n\n# Installation\n\nYou can install torchnca with pip:\n\n```\npip install torchnca\n```\n\n## API\n\n```python\nfrom torchnca import NCA\n\n# instantiate torchnca object and initialize with\n# an identity matrix\nnca = NCA(dim=2, init=\"identity\")\n\n# fit an torchnca model to a dataset\n# normalize the input data before\n# running the optimization\nnca.train(X, y, batch_size=64, normalize=True)\n\n# apply the learned linear map to the data\nX_nca = nca(X)\n```\n\n## Dimensionality Reduction\n\nWe generate a 3-D dataset where the first 2 dimensions are concentric rings and the third dimension is Gaussian noise. We plot the result of PCA, LDA and NCA with 2 components.\n\n<p align=\"center\">\n <img src=\"assets/res.png\" width=\"100%\">\n</p>\n\nNotice how PCA has failed to project out the noise, a result of a high noise variance in the third dimension. LDA also struggles to recover the concentric pattern since the classes themselves are not linearly separable.\n\n## kNN on MNIST\n\nWe compute the classification error, computation time and storage cost of two algorithms:\n\n* kNN (k = 5) on the raw 784 dimensional MNIST dataset\n* kNN (k = 5) on a learned 32 dimensional NCA projection of the MNIST dataset\n\n| Method  | NCA + kNN | Raw kNN     |\n|---------|-----------|-------------|\n| Time    | 2.37s     | 155.25s     |\n| Storage | 6.40 Mb   | 156.8 Mb    |\n| Error   | 3.3%      | 2.8%        |", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kevinzakka/nca", "keywords": "ai metric learning nearest neighbours dimensionality reduction", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "torchnca", "package_url": "https://pypi.org/project/torchnca/", "platform": "", "project_url": "https://pypi.org/project/torchnca/", "project_urls": {"Homepage": "https://github.com/kevinzakka/nca"}, "release_url": "https://pypi.org/project/torchnca/0.1.1/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Neighbourhood Components Analysis in PyTorch.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>torchnca</h1>\n<p>A PyTorch implementation of <a href=\"https://www.cs.toronto.edu/%7Ehinton/absps/nca.pdf\" rel=\"nofollow\">Neighbourhood Components Analysis</a> by <em>J. Goldberger, G. Hinton, S. Roweis, R. Salakhutdinov</em>.</p>\n<p>NCA learns a linear transformation of the dataset such that the expected leave-one-out performance of kNN in the transformed space is maximized.</p>\n<h1>Installation</h1>\n<p>You can install torchnca with pip:</p>\n<pre><code>pip install torchnca\n</code></pre>\n<h2>API</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">torchnca</span> <span class=\"kn\">import</span> <span class=\"n\">NCA</span>\n\n<span class=\"c1\"># instantiate torchnca object and initialize with</span>\n<span class=\"c1\"># an identity matrix</span>\n<span class=\"n\">nca</span> <span class=\"o\">=</span> <span class=\"n\">NCA</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"o\">=</span><span class=\"s2\">\"identity\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># fit an torchnca model to a dataset</span>\n<span class=\"c1\"># normalize the input data before</span>\n<span class=\"c1\"># running the optimization</span>\n<span class=\"n\">nca</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">batch_size</span><span class=\"o\">=</span><span class=\"mi\">64</span><span class=\"p\">,</span> <span class=\"n\">normalize</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># apply the learned linear map to the data</span>\n<span class=\"n\">X_nca</span> <span class=\"o\">=</span> <span class=\"n\">nca</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">)</span>\n</pre>\n<h2>Dimensionality Reduction</h2>\n<p>We generate a 3-D dataset where the first 2 dimensions are concentric rings and the third dimension is Gaussian noise. We plot the result of PCA, LDA and NCA with 2 components.</p>\n<p align=\"center\">\n <img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fd618e5efbb18015269ad84cef12c4e34c58616c/6173736574732f7265732e706e67\" width=\"100%\">\n</p>\n<p>Notice how PCA has failed to project out the noise, a result of a high noise variance in the third dimension. LDA also struggles to recover the concentric pattern since the classes themselves are not linearly separable.</p>\n<h2>kNN on MNIST</h2>\n<p>We compute the classification error, computation time and storage cost of two algorithms:</p>\n<ul>\n<li>kNN (k = 5) on the raw 784 dimensional MNIST dataset</li>\n<li>kNN (k = 5) on a learned 32 dimensional NCA projection of the MNIST dataset</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Method</th>\n<th>NCA + kNN</th>\n<th>Raw kNN</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Time</td>\n<td>2.37s</td>\n<td>155.25s</td>\n</tr>\n<tr>\n<td>Storage</td>\n<td>6.40 Mb</td>\n<td>156.8 Mb</td>\n</tr>\n<tr>\n<td>Error</td>\n<td>3.3%</td>\n<td>2.8%</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6751890, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5fd2987cb83afe5e1041719654698837", "sha256": "24eb565a1dd8120383411b1239862411b01174c493dcf3039ede27801c47efd8"}, "downloads": -1, "filename": "torchnca-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5fd2987cb83afe5e1041719654698837", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 6131, "upload_time": "2020-02-12T23:25:18", "upload_time_iso_8601": "2020-02-12T23:25:18.432197Z", "url": "https://files.pythonhosted.org/packages/9f/b8/b0c40dbcd5d5a84bb257c2de7df4975c4b600df892d44156d453edb78697/torchnca-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0d46f814bddbfb8e81244e6d2562b3f", "sha256": "7429a67c664c2dd578fb5188264078f03896a221e433e6c57aa2fea5b8ba47f8"}, "downloads": -1, "filename": "torchnca-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a0d46f814bddbfb8e81244e6d2562b3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4912, "upload_time": "2020-02-12T23:25:20", "upload_time_iso_8601": "2020-02-12T23:25:20.449928Z", "url": "https://files.pythonhosted.org/packages/31/81/593c80b770aa7132b44c9588ae1305555bb68812fffd12f5dff08493e194/torchnca-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6a28912ffe51e26bb7c199fe3da93355", "sha256": "9314699e5d16194e3ea0385c8ac2b2937e48cc6027446d1338162df8047284f0"}, "downloads": -1, "filename": "torchnca-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6a28912ffe51e26bb7c199fe3da93355", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4963, "upload_time": "2020-03-05T00:51:29", "upload_time_iso_8601": "2020-03-05T00:51:29.368798Z", "url": "https://files.pythonhosted.org/packages/31/5f/514e744695a21fa5f939dde86027eb7ece8bb018051c693ffa75f0a25009/torchnca-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6a28912ffe51e26bb7c199fe3da93355", "sha256": "9314699e5d16194e3ea0385c8ac2b2937e48cc6027446d1338162df8047284f0"}, "downloads": -1, "filename": "torchnca-0.1.1.tar.gz", "has_sig": false, "md5_digest": "6a28912ffe51e26bb7c199fe3da93355", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4963, "upload_time": "2020-03-05T00:51:29", "upload_time_iso_8601": "2020-03-05T00:51:29.368798Z", "url": "https://files.pythonhosted.org/packages/31/5f/514e744695a21fa5f939dde86027eb7ece8bb018051c693ffa75f0a25009/torchnca-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:15 2020"}