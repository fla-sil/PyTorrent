{"info": {"author": "Buck Evan", "author_email": "buck.2019@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "This package installs a pth file that enables the coveragepy process_startup\nfeature in this python prefix/virtualenv in subsequent runs.\n\nSee: http://nedbatchelder.com/code/coverage/subprocess.html\n\n\nDemo::\n\n    $ virtualenv tmpenv\n    $ . tmpenv/bin/activate\n    $ pip install coverage-enable-subprocess\n    $ touch .coveragerc\n    $ export COVERAGE_PROCESS_START=$PWD/.coveragerc\n    $ echo 'print(\"oh, hi!\")' > ohhi.py\n    $ python ohhi.py\n    oh, hi!\n\n    $ coverage report\n    Name                              Stmts   Miss  Cover\n    -----------------------------------------------------\n    /etc/python2.6/sitecustomize.py       5      1    80%\n    ohhi.py                               1      0   100%\n    tmpenv/lib/python2.6/site.py        433    392     9%\n    -----------------------------------------------------\n    TOTAL                               439    393    10%\n\n\nFor projects that need to cd during their test runs, and run many processes in parallel,\nI ensure a ``$TOP`` variable is exported, and I use this .coveragerc::\n\n    [run]\n    parallel = True\n    branch = True\n    data_file = $TOP/.coverage\n\n    [report]\n    exclude_lines =\n        # Have to re-enable the standard pragma\n        \\#.*pragma:\\s*no.?cover\n\n        # we can't get coverage for functions that don't return:\n        \\#.*never returns\n        \\#.*doesn't return\n\n        # Don't complain if tests don't hit defensive assertion code:\n        ^\\s*raise Impossible\\b\n        ^\\s*raise AssertionError\\b\n        ^\\s*raise NotImplementedError\\b\n        ^\\s*return NotImplemented\\b\n\n        # Don't complain if tests don't hit re-raise of unexpected errors:\n        ^\\s*raise$\n\n        # if main is covered, we're good:\n        ^\\s*exit\\(main\\(\\)\\)$\n    show_missing = True\n\n    [html]\n    directory = $TOP/coverage-html\n\n    # vim:ft=dosini", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bukzor/python-coverage-enable-subprocess", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "coverage_enable_subprocess", "package_url": "https://pypi.org/project/coverage_enable_subprocess/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/coverage_enable_subprocess/", "project_urls": {"Homepage": "https://github.com/bukzor/python-coverage-enable-subprocess"}, "release_url": "https://pypi.org/project/coverage_enable_subprocess/1.0/", "requires_dist": ["coverage"], "requires_python": "", "summary": "enable python coverage for subprocesses", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package installs a pth file that enables the coveragepy process_startup\nfeature in this python prefix/virtualenv in subsequent runs.</p>\n<p>See: <a href=\"http://nedbatchelder.com/code/coverage/subprocess.html\" rel=\"nofollow\">http://nedbatchelder.com/code/coverage/subprocess.html</a></p>\n<p>Demo:</p>\n<pre>$ virtualenv tmpenv\n$ . tmpenv/bin/activate\n$ pip install coverage-enable-subprocess\n$ touch .coveragerc\n$ export COVERAGE_PROCESS_START=$PWD/.coveragerc\n$ echo 'print(\"oh, hi!\")' &gt; ohhi.py\n$ python ohhi.py\noh, hi!\n\n$ coverage report\nName                              Stmts   Miss  Cover\n-----------------------------------------------------\n/etc/python2.6/sitecustomize.py       5      1    80%\nohhi.py                               1      0   100%\ntmpenv/lib/python2.6/site.py        433    392     9%\n-----------------------------------------------------\nTOTAL                               439    393    10%\n</pre>\n<p>For projects that need to cd during their test runs, and run many processes in parallel,\nI ensure a <tt>$TOP</tt> variable is exported, and I use this .coveragerc:</p>\n<pre>[run]\nparallel = True\nbranch = True\ndata_file = $TOP/.coverage\n\n[report]\nexclude_lines =\n    # Have to re-enable the standard pragma\n    \\#.*pragma:\\s*no.?cover\n\n    # we can't get coverage for functions that don't return:\n    \\#.*never returns\n    \\#.*doesn't return\n\n    # Don't complain if tests don't hit defensive assertion code:\n    ^\\s*raise Impossible\\b\n    ^\\s*raise AssertionError\\b\n    ^\\s*raise NotImplementedError\\b\n    ^\\s*return NotImplemented\\b\n\n    # Don't complain if tests don't hit re-raise of unexpected errors:\n    ^\\s*raise$\n\n    # if main is covered, we're good:\n    ^\\s*exit\\(main\\(\\)\\)$\nshow_missing = True\n\n[html]\ndirectory = $TOP/coverage-html\n\n# vim:ft=dosini\n</pre>\n\n          </div>"}, "last_serial": 2111197, "releases": {"0": [{"comment_text": "", "digests": {"md5": "5546b7fa2371f4e81f2df551e1995602", "sha256": "c6860e549795f235d8ecc2c8e079bf9c584e73f31bd4094f410b7518bf98829d"}, "downloads": -1, "filename": "coverage_enable_subprocess-0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5546b7fa2371f4e81f2df551e1995602", "packagetype": "bdist_wheel", "python_version": "2.6", "requires_python": null, "size": 3977, "upload_time": "2015-11-21T01:21:24", "upload_time_iso_8601": "2015-11-21T01:21:24.006619Z", "url": "https://files.pythonhosted.org/packages/0b/0d/8d41cbe695b0f55f9a6e7c175f5f1d70f0dbeb0c58f31e3297becdb17777/coverage_enable_subprocess-0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "feb10ea79e00e62988734714178e2369", "sha256": "5df6a00ff256c1f063f2fd8b0fadbd584e46b80838606db3381647c19266564e"}, "downloads": -1, "filename": "coverage_enable_subprocess-0.tar.gz", "has_sig": false, "md5_digest": "feb10ea79e00e62988734714178e2369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2663, "upload_time": "2015-11-21T01:10:01", "upload_time_iso_8601": "2015-11-21T01:10:01.423515Z", "url": "https://files.pythonhosted.org/packages/16/e5/5469d8c6aaba3b1565c126f263c91330b3948155582d0b7abd19c0d53691/coverage_enable_subprocess-0.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "6577ff11e7cad7c8c55e15864df21584", "sha256": "27982522339ec77662965e0d859da5662162962c874d54d2250426506818cbdc"}, "downloads": -1, "filename": "coverage_enable_subprocess-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6577ff11e7cad7c8c55e15864df21584", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4033, "upload_time": "2016-05-11T18:48:49", "upload_time_iso_8601": "2016-05-11T18:48:49.701495Z", "url": "https://files.pythonhosted.org/packages/31/58/d8dd7edbf5e120942b6395b4c034506c68e56f656074522c83b59d9a4991/coverage_enable_subprocess-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8e922de8b7fceedd7767da0e708030a", "sha256": "fdbd3dc9532007cd87ef84f38e16024c5b0ccb4ab2d1755225a7edf937acc011"}, "downloads": -1, "filename": "coverage_enable_subprocess-1.0.tar.gz", "has_sig": false, "md5_digest": "f8e922de8b7fceedd7767da0e708030a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2695, "upload_time": "2016-05-11T18:49:48", "upload_time_iso_8601": "2016-05-11T18:49:48.048901Z", "url": "https://files.pythonhosted.org/packages/31/f4/57693bcf041ba641501b7a2fafc9d3d2de647355d78c6a2e07fb53648eaa/coverage_enable_subprocess-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6577ff11e7cad7c8c55e15864df21584", "sha256": "27982522339ec77662965e0d859da5662162962c874d54d2250426506818cbdc"}, "downloads": -1, "filename": "coverage_enable_subprocess-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6577ff11e7cad7c8c55e15864df21584", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4033, "upload_time": "2016-05-11T18:48:49", "upload_time_iso_8601": "2016-05-11T18:48:49.701495Z", "url": "https://files.pythonhosted.org/packages/31/58/d8dd7edbf5e120942b6395b4c034506c68e56f656074522c83b59d9a4991/coverage_enable_subprocess-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8e922de8b7fceedd7767da0e708030a", "sha256": "fdbd3dc9532007cd87ef84f38e16024c5b0ccb4ab2d1755225a7edf937acc011"}, "downloads": -1, "filename": "coverage_enable_subprocess-1.0.tar.gz", "has_sig": false, "md5_digest": "f8e922de8b7fceedd7767da0e708030a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2695, "upload_time": "2016-05-11T18:49:48", "upload_time_iso_8601": "2016-05-11T18:49:48.048901Z", "url": "https://files.pythonhosted.org/packages/31/f4/57693bcf041ba641501b7a2fafc9d3d2de647355d78c6a2e07fb53648eaa/coverage_enable_subprocess-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:47 2020"}