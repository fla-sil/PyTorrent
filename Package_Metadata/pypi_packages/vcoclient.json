{"info": {"author": "Iddo Cohen", "author_email": "iddocohen@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# vcoclient.py (version 0.1.8) \n\nA simple VeloCloud Orchestrator (VCO) Python client\n\nThe idea is to embrace the Linux methodology and to have one VCO client that can be used within a complex workflow under Linux.\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 login --username=super@domain.com --password\nPassword: \n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get\n\n                                                         Branch1                                   Branch2                                   Branch3                                   Branch4\nactivationKey                                HS7S-QKPA-ZZCC-PG74                       LHH3-8B4R-7XVJ-6J3V                       JTWH-EHNW-7LUG-YQ9T                       YZ8U-CKTY-8MTL-FP4R\nactivationKeyExpires                    2019-05-28T11:53:33.000Z                  2019-05-19T16:58:53.000Z                  2019-06-01T10:32:39.000Z                  2019-06-01T16:10:54.000Z\nactivationState                                        ACTIVATED                                 ACTIVATED                                 ACTIVATED                                 ACTIVATED\nactivationTime                          2019-04-28T11:55:38.000Z                  2019-04-19T17:17:51.000Z                  2019-05-02T10:55:10.000Z                  2019-05-02T19:18:20.000Z\nalertsEnabled                                                  1                                         1                                         1                                         1\nbuildNumber                                     R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA\ncreated                                 2019-04-19T15:48:50.000Z                  2019-04-19T16:58:53.000Z                  2019-05-02T10:32:39.000Z                  2019-05-02T16:10:54.000Z\n...                                     ...                                       ...                                       ...                                       ...\n\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 logout\n```\n\nIt uses argparse and it is functional hooks. Each functional hook, is a mini method to accomplish something. \n\n## Status\n\n<table>\n    <tr>\n        <td>License</td>\n        <td><img src='https://img.shields.io/pypi/l/vcoclient.svg'></td>\n        <td>Version</td>\n        <td><img src='https://img.shields.io/pypi/v/vcoclient.svg'></td>\n    </tr>\n    <tr>\n        <td>Travis CI</td>\n        <td><img src='https://travis-ci.org/iddocohen/vcoclient.svg?branch=master'></td>\n        <td>Downloads</td>\n        <td><img src='https://img.shields.io/pypi/dm/vcoclient.svg'></td>\n    </tr>\n    <tr>\n        <td>Wheel</td>\n        <td><img src='https://img.shields.io/pypi/wheel/vcoclient.svg'></td>\n        <td>Supported versions</td>\n        <td><img src='https://img.shields.io/pypi/pyversions/vcoclient.svg'></td>\n    </tr>\n</table>\n\n\n## Installation\n\n### Compatibility\n\nThe matrix below gives one the vcoclient version on which VCO release it was tested against.\n\nFor sanity reasons, only the current VCO release will be used for testing and hence vcoclient (and the workflow_examples) will be updated/maintained accordingly. The current VCO release will be market as **bold**.\n\n**CAUTION:** Using a different version of vcoclient against different VCO release, might cause unwanted results and is not recommended.\n\nAll tests where performed on a Linux and/or MacOS operation systems. There is no reason why it should not work with Windows but you have been warned. \n\n<table>\n    <tr>\n        <td>VCO release</td>\n        <td>Tested with vcoclient version</td>\n    </tr>\n    <tr>\n        <td><b>3.3.1-GA-20190819</b></td>\n        <td>0.1.8</td>\n    </tr>\n    <tr>\n        <td>3.3.0-GA-20190724</td>\n        <td>0.1.7</td>\n    </tr>\n    <tr>\n        <td>3.2.2-GA-20190606</td>\n        <td>0.1.4 and earlier</td>\n    </tr>\n</table>\n\n### Instructions\n\nTo install the latest version use:\n\n``pip3 install vcoclient``\n\nTo install a particular version, e.g. version 0.1.4 use:\n\n``pip3 install vcoclient==0.1.4``\n\n## Useage\n\n### Global Environment Variables\n\nTo influence program behaviour and avoiding using ``--``options, one can use global environment variables, for some of the options:\n\n<table>\n    <tr>\n        <td>Name</td>\n        <td>Example Usage</td>\n        <td>Same as Using</td>\n        <td>Default Value</td>\n    </tr>\n    <tr>\n        <td>VCO_HOST</td>\n        <td>export VCO_HOST=\"vco.domain.net\"</td>\n        <td>vcoclient.py --vco=\"vco.domain.net\"</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td>VCO_USER</td>\n        <td>export VCO_USER=\"my_username@domain.net\"</td>\n        <td>vcoclient.py login --username=\"my_username@domain.net\"</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td>VCO_PASS</td>\n        <td>export VCO_PASS=\"MySuperSecretPassword\"</td>\n        <td>vcoclient.py login --password=\"MySuperSecretPassword\"</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td>VCO_COOKIE_PATH</td>\n        <td>export VCO_COOKIE_PATH=\"/path/where/I/save/cookies/\"</td>\n        <td>None (yet)</td>\n        <td>/tmp/</td>\n    </tr>\n    <tr>\n        <td>VCO_VERIFY_SSL</td>\n        <td>export VCO_VERIFY_SSL=\"TRUE\"</td>\n        <td>None (yet)</td>\n        <td>False</td>\n    </tr>\n</table> \n\n### Global Program Options\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --help\nusage: vcoclient.py [-h] --vco HOSTNAME [--output {pandas,json, csv}]\n                    {login,logout,edges_get,sysprop_set} ...\n\nA simple VeloCloud Orchestrator (VCO) client via Python\n\npositional arguments:\n  {login,logout,edges_get,sysprop_set}\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --vco HOSTNAME        Hostname/IP of VCO\n  --output {pandas,json,csv}\n                        Pandas tables are used as default output method but\n                        one can also use 'json' or csv\n```\n\nOne can also use a special os variable called VCO_HOST for ``--vco``, without the need to input the hostname all the time, e.g.:\n\n```sh\n[iddoc@homeserver:/scripts] export VCO_HOST=\"192.168.2.55\"\n[iddoc@homeserver:/scripts] vcoclient.py edges_get \n```\n\n#### Example\n\nOutput to Shell with Pandas format\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 --output=pandas edges_get --search=Branch1\nactivationKey                                HS7S-QKPA-ZZCC-PG74\nactivationKeyExpires                    2019-05-28T11:53:33.000Z\nactivationState                                        ACTIVATED\nactivationTime                          2019-04-28T11:55:38.000Z\n...\n```\n\nOr in JSON\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 --output=json edges_get --search=Branch1 | python -m json.tool\n{\n    \"activationKey\": {\n        \"0\": \"HS7S-QKPA-ZZCC-PG74\"\n    },\n    \"activationKeyExpires\": {\n        \"0\": \"2019-05-28T11:53:33.000Z\"\n    },\n    \"activationState\": {\n        \"0\": \"ACTIVATED\"\n    },\n    \"activationTime\": {\n        \"0\": \"2019-04-28T11:55:38.000Z\"\n    },\n...\n```\n\nor in CSV\n\n```sh\n\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 --output=csv edges_get --search=Branch1\n,activationKey,activationKeyExpires,activationState,activationTime,alertsEnabled,buildNumber,certificates,configuration.enterprise.id,configuration.enterprise.modules,configuration.enterprise.name,configuration.operator.id,configuration.operator.modules,configuration.operator.name,created,description,deviceFamily,deviceId,dnsName,edgeHardwareId,edgeState,edgeStateTime,endpointPkiMode,enterpriseId,factoryBuildNumber,factorySoftwareVersion,haLastContact,haPreviousState,haSerialNumber,haState,id,isLive,lastContact,links,logicalId,modelNumber,modified,name,operatorAlertsEnabled,recentLinks,selfMacAddress,serialNumber,serviceState,serviceUpSince,site.city,site.contactEmail,site.contactMobile,site.contactName,site.contactPhone,site.country,site.created,site.id,site.lat,site.locale,site.lon,site.modified,site.name,site.postalCode,site.shippingAddress,site.shippingAddress2,site.shippingCity,site.shippingContactName,site.shippingCountry,site.shippingPostalCode,site.shippingSameAsLocation,site.shippingState,site.state,site.streetAddress,site.streetAddress2,site.timezone,siteId,softwareUpdated,softwareVersion,systemUpSince\n0,HS7S-QKPA-ZZCC-PG74,2019-05-28T11:53:33.000Z,ACTIVATED,2019-04-28T11:55:38.000Z,1,R322-20190212-GA,\"[{'id': 5, 'created': '2019-04-28T11:55:39.000Z', 'csrId': 5, 'edgeId': 2, 'edgeSerialNumber': 'VMware-42372a8feed7928a-96a106d97231cc5b', 'enterpriseId': 1, 'certificate': '-----BEGIN CERTIFICATE-----\\nMIIDtTCCAp2gAwIBAgIJAMqB79bHrnyJMA0GCSqGSIb3DQEBCwUAMDAxDDAKBgNV\\nBAMTA3ZjbzEMMAoGA1UECxMDT1BTMRIwEAYDVQQKEwlWZWxvQ2xvdWQwHhcNMTkw\\nNDI3MTE1NTM5WhcNMTkwNzI3MTE1NTM5WjCBoDEtMCsGA1UEAxMkY2RmMTNlNmUt\\nMTNlMC00YTZlLTgwYTgtNmQxZmQ1NTE1ZGM4MS0wKwYDVQQKEyRlZTllY2ZiMi01\\nNDQyLTRjYzgtOTQ0MC01NzVkM2Y3MzIyMzYxMTAvBgNVBAUTKFZNd2FyZS00MjM3\\nMmE4ZmVlZDc5MjhhLTk2YTEwNmQ5NzIzMWNjNWIxDTALBgNVBAwTBGVkZ2UwggEi\\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC5qm7tr5NdW/Ei9LA1Pq5L5B5B\\nA2909MAk3bmnQUD3SGxaPmsaZOlQ4RZea0xX9i/1YicX+iv19/Uch5O7Ogp4qlua\\ndWP6h/36ye1dosGXe5iS61gQBvyc862o1thoJwDrRQrrA6ls0dUmwpZ23yX6Po7T\\n/12M0liYVM2rbMv9Cjp3IPp02wrKPmrrkQGPoi9L7nJXtw/ejOhpxb+j++pwsAlk\\nPFdt1cU2OB+LCrrhCxivmuOw+TcS9a+H3qNnZaLkTGC7S3sv93u3+Uq0c1dBiNoQ\\nLMAxRUE5jErVgfWMsKJGnHKFwr9KaIEgJ9iXDoWei5G0+Y5UL1AMLlaLV8RJAgMB\\nAAGjYTBfMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU\\nSELl9l8JeqVuteTUNDQdY+kcEwUwHwYDVR0jBBgwFoAUYaTXIGB2WA2o/jiiwmoZ\\n69ZxPQ4wDQYJKoZIhvcNAQELBQADggEBAKwii0EYuR9GSpysBFLW42h3piYUQexV\\n3bGl4l7ASo7OdUtUZ0Of/xls3qqKcZDz7DmbFnFgsxkraFfNJflzj+vhaBHf4kcS\\n/rZGCKyS840lndGkqIPM9Gu+oBX1RoblVA3hRQvqSugye8srEgmG6YsEPAtv5Fo4\\npw079wMmkTb3rP1LslMT3Mcrc/7VnGkq/F5owwpueBF13XJfJhXZP2/eAQ4gDSF/\\n1f4DLHJzDliSYDRN5C+jrWm3JVIu5vvJUIQSN3PAimZOgo5pjOridJvIdxRjCrlf\\n4oFWVTQM5R0IQZTIbBwBHE0vkwHPbIV9RybYOm9aaT60NRSYLCqmboI=\\n-----END CERTIFICATE-----\\n', 'serialNumber': 'CA81EFD6C7AE7C89', 'subjectKeyId': '4842e5f65f097aa56eb5e4d434341d63e91c1305', 'fingerPrint': '780ac499e5e4f2968c9b35d03bdc70ef87069050', 'validFrom': '2019-04-27T11:55:39.000Z', 'validTo': '2019-07-27T11:55:39.000Z'}, {'id': 6, 'created': '2019-04-28T12:18:30.000Z', 'csrId': 6, 'edgeId': 2, 'edgeSerialNumber':.\n...\n```\n\n### Login - Method \n\nOne needs to authenticate himself/herself via username and password to VCO. A user can be type \"operator\" or \"enterprise\" and hence has different rights in VCO.\n\n**Please note:** Session cookie is getting created as soon as this method gets called. The session cookie gets saved under ``/tmp/<hostname>.txt``, and used later by new method calls (so one does not need to use the login method everytime). As the cookie has no expire date and VCO holds the time on the expiry of the session, it is recommended **to execute login method every so often** to ensure nothing gets broken over time. \n\nMaybe to-do for the future, to store session time and check accordingly. \n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py login --help\nusage: vcoclient.py login [-h] --username USERNAME [--password PASSWORD]\n                          [--no-operator]\n\noptional arguments:\n  -h, --help           show this help message and exit\n  --username USERNAME  Username for Authentication\n  --password [PASSWORD]\n                        Password for Authentication\n  --no-operator        Per default we login as operator to VCO. If not, use\n                       this flag\n```\n#### Example\n\nEither use the  unsecure method to provide a password:\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 login --username=super@domain.com --password=VeloCloud123\n[iddoc@homeserver:/scripts]\n```\nor use the more secure method to provide it:\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 login --username=super@domain.com --password\nPassword:\n[iddoc@homeserver:/scripts]\n```\nor use VCO_USER and/or VCO_PASS environment variables to pass no login information to the script itself:\n```sh\n[iddoc@homeserver:/scripts] export VCO_USER=\"super@domain.com\"\n[iddoc@homeserver:/scripts] export VCO_PASS=\"SuperSecretPassword\"\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 login\n[iddoc@homeserver:/scripts]\n```\n\n### Logout\n\nThe logout method logsout from VCO itself and deletes the session cookie stored under ``/tmp/<hostname>.txt``.\n\nIt is best practice to use it after done using different methods with vcoclient.py\n\n#### Example\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 logout\n```\n\n### Get edges\n\nTo get a list of all or filtered VeloCloud Edges (VCEs) from VCO. One can ``--search`` per value, get only one ``--name`` VCE and ``--filters``only given keys. Each of the methods (``--name``, ``--filters`` or ``--search``), one can use \"|\" to find for several values (e.g. to find several VCEs with names Branch1 or Branch2, use ``--name=\"Branch1|Branch2\"). This gives one a powerful option to compare and evaluate several VCEs against each other and use those returned values for another workflow. \n\n``--enterpriseid`` can be used to find all specify VCEs from specific customer in VCO. For msp based users this is a must to use. \n\n**Please note:** ``--name``, ``--search`` and ``--filters``are all doing a loose search rather then an exact match, meaning you will get more values then maybe requested but you do not need to be very specific for your search. Maybe as a to-do, give different options in the future. \n\n```sh\n\nusage: vcoclient.py edges_get [-h] [--name NAME] [--filters FILTERS]\n                              [--search SEARCH] [--enterpriseid ID] [--rows_name]\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --name NAME        Search Edge/Edges containing the given name\n  --filters FILTERS  Returns only given filters out of the returned value.\n                     Default all values are returned\n  --search SEARCH    Search any data from properties of Edges, e.g. search for\n                     USB interfaces\n  --enterpriseid ID            Returns the Edges of only that given enterprise. Default\n                     all Edges of all enterprises at operator view or all\n                     Edges of an enterprise at customer view are returned.\n  --rows_name        Returns only the row names from the output result.\n\n```\n\n#### Example\n\nTo get all VCEs, with all values and keys, use default:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get\n                                                               0                                         1                                         2                                         3\nactivationKey                                HS7S-QKPA-ZZCC-PG74                       LHH3-8B4R-7XVJ-6J3V                       JTWH-EHNW-7LUG-YQ9T                       YZ8U-CKTY-8MTL-FP4R\nactivationKeyExpires                    2019-05-28T11:53:33.000Z                  2019-05-19T16:58:53.000Z                  2019-06-01T10:32:39.000Z                  2019-06-01T16:10:54.000Z\nactivationState                                        ACTIVATED                                 ACTIVATED                                 ACTIVATED                                 ACTIVATED\nactivationTime                          2019-04-28T11:55:38.000Z                  2019-04-19T17:17:51.000Z                  2019-05-02T10:55:10.000Z                  2019-05-02T19:18:20.000Z\nalertsEnabled                                                  1                                         1                                         1                                         1\nbuildNumber                                     R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA\ncreated                                 2019-04-19T15:48:50.000Z                  2019-04-19T16:58:53.000Z                  2019-05-02T10:32:39.000Z                  2019-05-02T16:10:54.000Z\n...                                     ...                                       ...                                       ...                                       ...\n```\nor use ``--name`` to filter one branch:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get --name=Branch1\n                                                               0\nactivationKey                                HS7S-QKPA-ZZCC-PG74\nactivationKeyExpires                    2019-05-28T11:53:33.000Z\nactivationState                                        ACTIVATED\nactivationTime                          2019-04-28T11:55:38.000Z\nalertsEnabled                                                  1\nbuildNumber                                     R322-20190212-GA\ncreated                                 2019-04-19T15:48:50.000Z\n...                                     ...\n```\n\nor several: \n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get --name=\"Branch1|Branch-2\"\n                                                               0                                         1\nactivationKey                                HS7S-QKPA-ZZCC-PG74                       LHH3-8B4R-7XVJ-6J3V\nactivationKeyExpires                    2019-05-28T11:53:33.000Z                  2019-05-19T16:58:53.000Z\nactivationState                                        ACTIVATED                                 ACTIVATED\nactivationTime                          2019-04-28T11:55:38.000Z                  2019-04-19T17:17:51.000Z\nalertsEnabled                                                  1                                         1\nbuildNumber                                     R322-20190212-GA                          R322-20190212-GA\ncreated                                 2019-04-19T15:48:50.000Z                  2019-04-19T16:58:53.000Z\n...                                     ...                                       ...\n```\nAnother option is to filter a specific value out of the return with ``--filters`` option, e.g. if one wants to filter activationKey and activationKeyExpires for all or some Edges:\n\n```sh\n\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55  edges_get --filters=\"activationKey|activationKeyExpires\"\n\n                                    Branch1-HA                  Branch-2                  Branch-3                  Branch-4\nactivationKey              HS7S-QKPA-ZZCC-PG74       LHH3-8B4R-7XVJ-6J3V       JTWH-EHNW-7LUG-YQ9T       YZ8U-CKTY-8MTL-FP4R\nactivationKeyExpires  2019-05-28T11:53:33.000Z  2019-05-19T16:58:53.000Z  2019-06-01T10:32:39.000Z  2019-06-01T16:10:54.000Z\n\n```\n\nor one can combine it with ``--name`` as well to filter it more specific:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55  edges_get --filters=\"activationKey|activationKeyExpires\" --name=\"Branch1|Branch-2\"\n                                    Branch1-HA                  Branch-2\nactivationKey              HS7S-QKPA-ZZCC-PG74       LHH3-8B4R-7XVJ-6J3V\nactivationKeyExpires  2019-05-28T11:53:33.000Z  2019-05-19T16:58:53.000Z\n\n```\n\nEven more, one can search for any value within the VCE properties with ``--search``, let see what if we want to see all values:\n\n```sh\n\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get --search=\"*\"\n                                                                        Branch1-HA  ...                                           Branch-4\n...\ncertificates_0_certificate       -----BEGIN CERTIFICATE-----\\nMIIDtTCCAp2gAwIBA...  ...  -----BEGIN CERTIFICATE-----\\nMIIDtTCCAp2gAwIBA...\ncertificates_0_created                                    2019-04-28T11:55:39.000Z  ...                           2019-05-14T18:00:10.000Z\ncertificates_0_csrId                                                             5  ...                                                  8\ncertificates_0_edgeId                                                            2  ...                                                  5\ncertificates_0_edgeSerialNumber           VMware-42372a8feed7928a-96a106d97231cc5b  ...           VMware-4237c421fc52ed55-3ed39a20fbc24354\ncertificates_0_enterpriseId                                                      1  ...                                                  1\ncertificates_0_fingerPrint                780ac499e5e4f2968c9b35d03bdc70ef87069050  ...           af32143b2fee7e2bfca62ab0042244d7cb7f7e5e\ncertificates_0_id                                                                5  ...                                                  8\ncertificates_0_serialNumber                                       CA81EFD6C7AE7C89  ...                                   D4C2500333FE1757\n...\n\n```\n\n\nIn the background ``--search`` flattens the returned JSON and returns all values when ``*`` used. One can however, search for specific values as well, e.g. lets search for interface properties with 191. or 10. IPs:\n\n```sh\n\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get --search=\"191.|10.\"\n\n                                                     Branch1-HA     Branch-2                  Branch-3                  Branch-4\n....\nconfiguration_enterprise_modules_0_edgeSpecific...  191.168.1.2  191.168.3.2                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...  191.168.1.1  191.168.3.1                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...  191.168.2.2  191.168.4.2                  10.0.3.2                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...  191.168.2.1  191.168.4.1                  10.0.3.1                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     10.2.1.2                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     10.2.1.1                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     10.2.2.2                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     10.2.2.1                       NaN                       NaN\nconfiguration_enterprise_modules_1_edgeSpecific...          NaN  191.168.0.3                10.0.254.2                       NaN\nconfiguration_enterprise_modules_1_edgeSpecific...          NaN   10.0.254.2                       NaN                       NaN\nlinks_0_displayName                                 191.168.1.2  191.168.3.2               191.168.0.5                       NaN\nlinks_0_ipAddress                                   191.168.1.2  191.168.3.2               191.168.0.5                       NaN\nlinks_1_displayName                                 191.168.2.2  191.168.4.2                       NaN                       NaN\nlinks_1_ipAddress                                   191.168.2.2  191.168.4.2                       NaN                       NaN\nlinks_2_ipAddress                                           NaN     10.2.1.2                       NaN                       NaN\nlinks_3_ipAddress                                           NaN     10.2.2.2                       NaN                       NaN\n...\n```\n\nand filter the 'ipAddress' column only for all VCEs (Branch1-HA, Branch-2, Branch-3 or Branch-4):\n\n```sh\n\n[iddoc@homeserver:/scripts] vcoclient.py --vco=192.168.2.55 edges_get --search=\"191.|10.\" --filters=\"ipAddress\"\n                    Branch1-HA     Branch-2     Branch-3 Branch-4\nlinks_0_ipAddress  191.168.1.2  191.168.3.2  191.168.0.5      NaN\nlinks_1_ipAddress  191.168.2.2  191.168.4.2          NaN      NaN\nlinks_2_ipAddress          NaN     10.2.1.2          NaN      NaN\nlinks_3_ipAddress          NaN     10.2.2.2          NaN      NaN\n\n```\n\nAll those outputs can be then converted into CSV or JSON.\n\n### Get Customers VCEs (as MSP or Operator) - Method\n\nTo get a list of all VCEs as a MSP/Partner or as operator one can use ``msp_customers_get`` or ``operator_customers_get``. Same as edges_get method, one can use ``--search``. ``--filters`` and ``--names`` to narrow down the result accordingly.\n\n\n#### Example\n\nThe help output for ``msp_customers_get``:\n\n```sh\n\n[iddoc@homeserver:/scripts] vcoclient.py msp_customers_get --help\nusage: vcoclient.py msp_customers_get [-h] [--name NAME] [--filters FILTERS]\n                                      [--search SEARCH] [--rows_name]\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --name NAME        Search Enterprise/Enterprises containing the given name\n  --filters FILTERS  Returns only given filters out of the returned value.\n                     Default all values are returned\n  --search SEARCH    Search any data from properties of customers, e.g. search\n                     for particular edge\n  --rows_name        Returns only the row names from the output result.\n\n```\n\nand the help output for ``\u00f2perator_custmers_get``:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py operator_customers_get --help\nusage: vcoclient.py operator_customers_get [-h] [--name NAME]\n                                           [--filters FILTERS]\n                                           [--search SEARCH] [--rows_name]\n\noptional arguments:\n  -h, --help         show this help message and exit\n  --name NAME        Search Enterprise/Enterprises containing the given name\n  --filters FILTERS  Returns only given filters out of the returned value.\n                     Default all values are returned\n  --search SEARCH    Search any data from properties of customers, e.g. search\n                     for particular edge\n  --rows_name        Returns only the row names from the output result.\n```\n\nHere an example (customer names and account numbers obscured on purpose):\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py msp_customers_get --search=\"*\"\n                                                                 POC                         Customer Test  ...                            Customer 5                           Customer 4\naccountNumber                                            XXX-XXX-H86                           XXX-XXX-BKW  ...                           XXX-XXXDGL                           XXX-XXX-4EB\nalertsEnabled                                                      1                                     1  ...                                     1                                     1\ncity                                                             NaN                                   NaN  ...                                   NaN                                   NaN\ncontactEmail                                                     NaN                                   NaN  ...                                   NaN                                   NaN\ncontactMobile                                                    NaN                                   NaN  ...                                   NaN                                   NaN\ncontactName                                                      NaN                                   NaN  ...                                   NaN                                   NaN\ncontactPhone                                                     NaN                                   NaN  ...                                   NaN                                   NaN\ncountry                                                          NaN                                   NaN  ...                                   NaN                                   NaN\ncreated                                     2017-10-09T13:47:29.000Z              2018-02-01T21:56:50.000Z  ...              2019-05-17T18:11:40.000Z              2019-06-20T15:52:27.000Z\ndescription                                                      NaN                                   NaN  ...                                   NaN                                   NaN\ndomain                                                           NaN                                   NaN  ...                                   NaN                                   NaN\n....\n```\n### Get edges behind gateway\n\nThis method will give one the ability to get all/some gateways behind a given customer\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py enterprise_get_gateway --help\nusage: vcoclient.py enterprise_get_gateway [-h] --enterpriseid ENTERPRISEID\n                                           [--name NAME]\n                                           [--filters FILTERS]\n                                           [--search SEARCH] [--rows_name]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --name NAME           Search for a given column name\n  --enterpriseid ENTERPRISEID\n                        Get gateways associated to an enterprise\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search any data from properties of customers, e.g.\n                        search for particular edge\n  --rows_name           Returns only the row names from the output result.\n\n```\n\n#### Example\n\nGet the gateways associated to that enterprise:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py enterprise_get_gateway --enterpriseid=26\n\nvcg115-xxx1    vcg101-xxx2   vcg133-xxx1   vcg104-xxx2\naddress  xxx.193.30.11  xxx.193.31.36  xxx.193.29.52  xxx.193.28.72\n```\n\n### Get gateways behind customer\n\nThis method will give one the ability to get all/some edges behind a given gateway\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py gateway_get_edges --help\nusage: vcoclient.py gateway_get_edges [-h] --gatewayid GATEWAYID [--name NAME]\n                                      [--filters FILTERS] [--search SEARCH]\n                                      [--rows_name]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --name NAME           Search for a given column name\n  --gatewayid GATEWAYID\n                        Get edges associated to a gateway\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search any data from properties of customers, e.g.\n                        search for particular edge\n  --rows_name           Returns only the row names from the output result.\n```\n\n#### Example\n\nGet all edges behind gateway (output hidden): \n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py --gatewayid 5\n\n                                          Alpharetta xxxxxxx                   Dallas xxxx\nactivationKey                            3WCR-xxxx-xxxx-xxxx                   3MQZ-xxx-xxxx-xxx\nactivationKeyExpires                2018-10-20T13:26:00.000Z              2018-04-06T02:11:14.000Z\nactivationState                         REACTIVATION_PENDING                             ACTIVATED\nactivationTime                      2018-05-25T00:02:08.000Z              2018-03-07T18:50:44.000Z\nalertsEnabled                                              1                                     1\nbuildNumber                     R321-20181018-GA-27175-28009                      R320-20180409-GA\ncity                                                 Phoenix                                Dallas\ncountry                                                   US                                    US\ncreated                             2018-04-04T20:51:55.000Z              2018-03-07T02:11:14.000Z\n\n```\n\n### Get link metric of a given edge\n\nOne can get the link metric of a particular VCE for a given time.\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py edge_get_lm --help\nusage: vcoclient.py edge_get_lm [-h] [--filters FILTERS] [--search SEARCH]\n                                --edgeid EDGEID [--enterpriseid ENTERPRISEID]\n                                --starttime STARTTIME [--endtime ENDTIME]\n                                [--rows_name]\n\nCollect link statistics for a VCE between a given period.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search for the metric value\n  --edgeid EDGEID       Get information for that specific Edge. Edgeid can be\n                        found under edges_get method under id.\n  --enterpriseid ENTERPRISEID\n                        Get information for that specific Edge in that\n                        specific customer. EnterpriseId can be either found\n                        from *_customers_get method under id or edges_get\n                        method under enterpriseId.\n  --starttime STARTTIME\n                        The start time from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM.\n  --endtime ENDTIME     The end time from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM. End time\n                        is default to time now.\n  --rows_name           Returns only the row names from the output result.\n\n```\n\n#### Example\n\nGet the metric of all the links of a given edge from a given customer in the past until now:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py edge_get_lm --edgeid=1712 --enterpriseid=214 --starttime=\"2019-07-21\"\n\n                                                             GE3                                   GE4\nbestJitterMsRx                                            0.0708                                 0.429\nbestJitterMsTx                                            0.0007                                0.0677\nbestLatencyMsRx                                           5.9113                                5.6578\nbestLatencyMsTx                                           8.2916                                 9.771\nbestLossPctRx                                            1.00436                              0.009067\nbestLossPctTx                                           0.992402                              0.010039\nbpsOfBestPathRx                                         10000000                               5000000\nbpsOfBestPathTx                                         10000000                               5000000\nbytesRx                                               6756806035                             942812687\nbytesTx                                               5831454620                            1543851068\ncontrolBytesRx                                        3161065177                             798578528\ncontrolBytesTx                                        4174190874                            1477374932\ncontrolPacketsRx                                        28229649                               7410590\ncontrolPacketsTx                                        28763213                               9038440\n....\nlink_networkType                                        ETHERNET                              ETHERNET\nlink_operatorAlertsEnabled                                     1                                     1\nlink_serviceState                                     IN_SERVICE                            IN_SERVICE\nlink_state                                                STABLE                                STABLE\nlink_vpnState                                             STABLE                                STABLE\np1BytesRx                                                9879820                              19802676\np1BytesTx                                               98164614                              40242590\np1PacketsRx                                                53984                                111780\np1PacketsTx                                               144023                                 86695\np2BytesRx                                             1342611884                             123590823\np2BytesTx                                              988377584                              25282998\np2PacketsRx                                              1806817                                510994\np2PacketsTx                                              2058099                                 57703\np3BytesRx                                             2243249154                                840660\np3BytesTx                                              570721548                                950548\np3PacketsRx                                             12891737                                  2738\np3PacketsTx                                              3279254                                  3994\npacketsRx                                               42982187                               8036102\npacketsTx                                               34244589                               9186832\nscoreRx                                                  4.33582                               4.39847\nscoreTx                                                  4.33613                               4.39684\nsignalStrength                                                 0                                     0\ntotalBytes                                           12588260655                            2486663755\ntotalPackets                                            77226776                              17222934\n```\n\n### Get link metric for the whole enterprise\n\nOne can get the link metrics of all VCEs of a given enterprise.\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py edge_get_agg_lm --help\nusage: vcoclient.py edges_get_agg_lm [-h] [--enterpriseid ENTERPRISEID]\n                                     --starttime STARTTIME [--endtime ENDTIME]\n                                     [--name NAME] [--filters FILTERS]\n                                     [--search SEARCH] [--rows_name] [--stats]\n\nCollect aggregated link statistics for several VCEs between a given period\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --enterpriseid ENTERPRISEID\n                        Get information for that specific Edge in that\n                        specific customer. EnterpriseId can be either found\n                        from *_customers_get method under id or edges_get\n                        method under enterpriseId.\n  --starttime STARTTIME\n                        The start time from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM.\n  --endtime ENDTIME     The end time from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM.\n  --name NAME           Search column which contains the given name\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search any value within the return, e.g. search for\n                        USB interfaces\n  --rows_name           Returns only the row names from the output result.\n  --stats               Returns the statistics of the datastructure\n```\n\n#### Example\n\nGet the metric of all the links of a given edge from a given customer in the past until now:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py edges_get_agg_lm --enterpriseid=214 --starttime=\"2019-10-04\"\n                                                          GE3                                   GE4  ...                                   GE4                                   GE4\nbestJitterMsRx                                              0                                     0  ...                                     0                                     0\nbestJitterMsTx                                              0                                     0  ...                                     1                                     0\nbestLatencyMsRx                                            28                                    30  ...                                    14                                    13\nbestLatencyMsTx                                            36                                    37  ...                                     9                                     5\nbestLossPctRx                                               0                                     0  ...                                     0                                     0\nbestLossPctTx                                               0                                     0  ...                                     0                                     0\nbpsOfBestPathRx                                     200000000                             200000000  ...                              30114000                              98408000\nbpsOfBestPathTx                                     200000000                             200000000  ...                               1392000                              10185000\nbytesRx                                                813833                                144354  ...                                560482                                922079\nbytesTx                                                901650                                171777  ...                                736663                                874260\ncontrolBytesRx                                         683561                                144354  ...                                399858                                435730\ncontrolBytesTx                                         820243                                171777  ...                                736663                                512154\ncontrolPacketsRx                                         5906                                  2398  ...                                  5543                                  4928\ncontrolPacketsTx                                         5747                                  2399  ...                                  5865                                  4752\nlinkId                                                   3163                                  3166  ...                                 37009                                 38690\n...\n```\n\n### Set system properties\n\nSystem properties of VCO can be changed/added. Only applicable at \"operator\" mode but needed for on-premiss installation of VCO.\n\n**Please Note**: Some system properties can break VCO and use this method carefully.\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py sysprop_set --help\nusage: vcoclient.py sysprop_set [-h] --name NAME --value VALUE\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --name NAME    Name of the new/edit system property\n  --value VALUE  New value of the system property\n\n```\n\n#### Example\n\nEnable google API for VCO:\n\n```sh\n[iddoc@homeserver:/scripts] vcoclient.py sysprop_set --name=service.client.googleMapsApi.enable --value=true\n```\n\n## Contributing\n\n1. Fork it (<https://github.com/iddocohen/vcoclient/fork>)\n2. Create your feature branch (`git checkout -b feature/fooBar`)\n3. Commit your changes (`git commit -am 'Add some fooBar'`)\n4. Push to the branch (`git push origin feature/fooBar`)\n5. Create a new Pull Request\n\n## Licence\nMIT, see ``LICENSE``\n\n<!-- Markdown link & img dfn's -->\n[wiki]: https://github.com/iddocohen/vcoclient/wiki\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/iddocohen/vcoclient", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "vcoclient", "package_url": "https://pypi.org/project/vcoclient/", "platform": "", "project_url": "https://pypi.org/project/vcoclient/", "project_urls": {"Homepage": "https://github.com/iddocohen/vcoclient"}, "release_url": "https://pypi.org/project/vcoclient/0.1.8/", "requires_dist": ["certifi (==2019.3.9)", "chardet (==3.0.4)", "idna (==2.8)", "numpy (==1.16.3)", "pandas (==0.24.2)", "python-dateutil (==2.8.0)", "pytz (==2019.1)", "requests (==2.21.0)", "six (==1.12.0)", "urllib3 (==1.24.3)"], "requires_python": ">=3.6", "summary": "A simple VeloCloud Orchestrator (VCO) Python client", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vcoclient.py (version 0.1.8)</h1>\n<p>A simple VeloCloud Orchestrator (VCO) Python client</p>\n<p>The idea is to embrace the Linux methodology and to have one VCO client that can be used within a complex workflow under Linux.</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 login --username<span class=\"o\">=</span>super@domain.com --password\nPassword: \n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get\n\n                                                         Branch1                                   Branch2                                   Branch3                                   Branch4\nactivationKey                                HS7S-QKPA-ZZCC-PG74                       LHH3-8B4R-7XVJ-6J3V                       JTWH-EHNW-7LUG-YQ9T                       YZ8U-CKTY-8MTL-FP4R\nactivationKeyExpires                    <span class=\"m\">2019</span>-05-28T11:53:33.000Z                  <span class=\"m\">2019</span>-05-19T16:58:53.000Z                  <span class=\"m\">2019</span>-06-01T10:32:39.000Z                  <span class=\"m\">2019</span>-06-01T16:10:54.000Z\nactivationState                                        ACTIVATED                                 ACTIVATED                                 ACTIVATED                                 ACTIVATED\nactivationTime                          <span class=\"m\">2019</span>-04-28T11:55:38.000Z                  <span class=\"m\">2019</span>-04-19T17:17:51.000Z                  <span class=\"m\">2019</span>-05-02T10:55:10.000Z                  <span class=\"m\">2019</span>-05-02T19:18:20.000Z\nalertsEnabled                                                  <span class=\"m\">1</span>                                         <span class=\"m\">1</span>                                         <span class=\"m\">1</span>                                         <span class=\"m\">1</span>\nbuildNumber                                     R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA\ncreated                                 <span class=\"m\">2019</span>-04-19T15:48:50.000Z                  <span class=\"m\">2019</span>-04-19T16:58:53.000Z                  <span class=\"m\">2019</span>-05-02T10:32:39.000Z                  <span class=\"m\">2019</span>-05-02T16:10:54.000Z\n...                                     ...                                       ...                                       ...                                       ...\n\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 <span class=\"nb\">logout</span>\n</pre>\n<p>It uses argparse and it is functional hooks. Each functional hook, is a mini method to accomplish something.</p>\n<h2>Status</h2>\n<table>\n    <tr>\n        <td>License</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3b1e13feff75077cbcd16c51d273638d7ea9a28e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f76636f636c69656e742e737667\"></td>\n        <td>Version</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/281fff130ac9c0452e177d6494a56a7d5bc5d72c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f76636f636c69656e742e737667\"></td>\n    </tr>\n    <tr>\n        <td>Travis CI</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/940be6762733d9cf107c1cd41975154db90c73a2/68747470733a2f2f7472617669732d63692e6f72672f6964646f636f68656e2f76636f636c69656e742e7376673f6272616e63683d6d6173746572\"></td>\n        <td>Downloads</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87228e8010a67dc02189eb38efe7cf1ee4241dc3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f76636f636c69656e742e737667\"></td>\n    </tr>\n    <tr>\n        <td>Wheel</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2cd488513be7f8ea5d4998016e13928b8a893c43/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f76636f636c69656e742e737667\"></td>\n        <td>Supported versions</td>\n        <td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0ac4b8e3275716f409ef6b81dae178c2121ac6f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f76636f636c69656e742e737667\"></td>\n    </tr>\n</table>\n<h2>Installation</h2>\n<h3>Compatibility</h3>\n<p>The matrix below gives one the vcoclient version on which VCO release it was tested against.</p>\n<p>For sanity reasons, only the current VCO release will be used for testing and hence vcoclient (and the workflow_examples) will be updated/maintained accordingly. The current VCO release will be market as <strong>bold</strong>.</p>\n<p><strong>CAUTION:</strong> Using a different version of vcoclient against different VCO release, might cause unwanted results and is not recommended.</p>\n<p>All tests where performed on a Linux and/or MacOS operation systems. There is no reason why it should not work with Windows but you have been warned.</p>\n<table>\n    <tr>\n        <td>VCO release</td>\n        <td>Tested with vcoclient version</td>\n    </tr>\n    <tr>\n        <td><b>3.3.1-GA-20190819</b></td>\n        <td>0.1.8</td>\n    </tr>\n    <tr>\n        <td>3.3.0-GA-20190724</td>\n        <td>0.1.7</td>\n    </tr>\n    <tr>\n        <td>3.2.2-GA-20190606</td>\n        <td>0.1.4 and earlier</td>\n    </tr>\n</table>\n<h3>Instructions</h3>\n<p>To install the latest version use:</p>\n<p><code>pip3 install vcoclient</code></p>\n<p>To install a particular version, e.g. version 0.1.4 use:</p>\n<p><code>pip3 install vcoclient==0.1.4</code></p>\n<h2>Useage</h2>\n<h3>Global Environment Variables</h3>\n<p>To influence program behaviour and avoiding using <code>--</code>options, one can use global environment variables, for some of the options:</p>\n<table>\n    <tr>\n        <td>Name</td>\n        <td>Example Usage</td>\n        <td>Same as Using</td>\n        <td>Default Value</td>\n    </tr>\n    <tr>\n        <td>VCO_HOST</td>\n        <td>export VCO_HOST=\"vco.domain.net\"</td>\n        <td>vcoclient.py --vco=\"vco.domain.net\"</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td>VCO_USER</td>\n        <td>export VCO_USER=\"my_username@domain.net\"</td>\n        <td>vcoclient.py login --username=\"my_username@domain.net\"</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td>VCO_PASS</td>\n        <td>export VCO_PASS=\"MySuperSecretPassword\"</td>\n        <td>vcoclient.py login --password=\"MySuperSecretPassword\"</td>\n        <td>None</td>\n    </tr>\n    <tr>\n        <td>VCO_COOKIE_PATH</td>\n        <td>export VCO_COOKIE_PATH=\"/path/where/I/save/cookies/\"</td>\n        <td>None (yet)</td>\n        <td>/tmp/</td>\n    </tr>\n    <tr>\n        <td>VCO_VERIFY_SSL</td>\n        <td>export VCO_VERIFY_SSL=\"TRUE\"</td>\n        <td>None (yet)</td>\n        <td>False</td>\n    </tr>\n</table> \n<h3>Global Program Options</h3>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --help\nusage: vcoclient.py <span class=\"o\">[</span>-h<span class=\"o\">]</span> --vco HOSTNAME <span class=\"o\">[</span>--output <span class=\"o\">{</span>pandas,json, csv<span class=\"o\">}]</span>\n                    <span class=\"o\">{</span>login,logout,edges_get,sysprop_set<span class=\"o\">}</span> ...\n\nA simple VeloCloud Orchestrator <span class=\"o\">(</span>VCO<span class=\"o\">)</span> client via Python\n\npositional arguments:\n  <span class=\"o\">{</span>login,logout,edges_get,sysprop_set<span class=\"o\">}</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --vco HOSTNAME        Hostname/IP of VCO\n  --output <span class=\"o\">{</span>pandas,json,csv<span class=\"o\">}</span>\n                        Pandas tables are used as default output method but\n                        one can also use <span class=\"s1\">'json'</span> or csv\n</pre>\n<p>One can also use a special os variable called VCO_HOST for <code>--vco</code>, without the need to input the hostname all the time, e.g.:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> <span class=\"nb\">export</span> <span class=\"nv\">VCO_HOST</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.2.55\"</span>\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py edges_get \n</pre>\n<h4>Example</h4>\n<p>Output to Shell with Pandas format</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 --output<span class=\"o\">=</span>pandas edges_get --search<span class=\"o\">=</span>Branch1\nactivationKey                                HS7S-QKPA-ZZCC-PG74\nactivationKeyExpires                    <span class=\"m\">2019</span>-05-28T11:53:33.000Z\nactivationState                                        ACTIVATED\nactivationTime                          <span class=\"m\">2019</span>-04-28T11:55:38.000Z\n...\n</pre>\n<p>Or in JSON</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 --output<span class=\"o\">=</span>json edges_get --search<span class=\"o\">=</span>Branch1 <span class=\"p\">|</span> python -m json.tool\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"activationKey\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"0\"</span>: <span class=\"s2\">\"HS7S-QKPA-ZZCC-PG74\"</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"activationKeyExpires\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"0\"</span>: <span class=\"s2\">\"2019-05-28T11:53:33.000Z\"</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"activationState\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"0\"</span>: <span class=\"s2\">\"ACTIVATED\"</span>\n    <span class=\"o\">}</span>,\n    <span class=\"s2\">\"activationTime\"</span>: <span class=\"o\">{</span>\n        <span class=\"s2\">\"0\"</span>: <span class=\"s2\">\"2019-04-28T11:55:38.000Z\"</span>\n    <span class=\"o\">}</span>,\n...\n</pre>\n<p>or in CSV</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 --output<span class=\"o\">=</span>csv edges_get --search<span class=\"o\">=</span>Branch1\n,activationKey,activationKeyExpires,activationState,activationTime,alertsEnabled,buildNumber,certificates,configuration.enterprise.id,configuration.enterprise.modules,configuration.enterprise.name,configuration.operator.id,configuration.operator.modules,configuration.operator.name,created,description,deviceFamily,deviceId,dnsName,edgeHardwareId,edgeState,edgeStateTime,endpointPkiMode,enterpriseId,factoryBuildNumber,factorySoftwareVersion,haLastContact,haPreviousState,haSerialNumber,haState,id,isLive,lastContact,links,logicalId,modelNumber,modified,name,operatorAlertsEnabled,recentLinks,selfMacAddress,serialNumber,serviceState,serviceUpSince,site.city,site.contactEmail,site.contactMobile,site.contactName,site.contactPhone,site.country,site.created,site.id,site.lat,site.locale,site.lon,site.modified,site.name,site.postalCode,site.shippingAddress,site.shippingAddress2,site.shippingCity,site.shippingContactName,site.shippingCountry,site.shippingPostalCode,site.shippingSameAsLocation,site.shippingState,site.state,site.streetAddress,site.streetAddress2,site.timezone,siteId,softwareUpdated,softwareVersion,systemUpSince\n<span class=\"m\">0</span>,HS7S-QKPA-ZZCC-PG74,2019-05-28T11:53:33.000Z,ACTIVATED,2019-04-28T11:55:38.000Z,1,R322-20190212-GA,<span class=\"s2\">\"[{'id': 5, 'created': '2019-04-28T11:55:39.000Z', 'csrId': 5, 'edgeId': 2, 'edgeSerialNumber': 'VMware-42372a8feed7928a-96a106d97231cc5b', 'enterpriseId': 1, 'certificate': '-----BEGIN CERTIFICATE-----\\nMIIDtTCCAp2gAwIBAgIJAMqB79bHrnyJMA0GCSqGSIb3DQEBCwUAMDAxDDAKBgNV\\nBAMTA3ZjbzEMMAoGA1UECxMDT1BTMRIwEAYDVQQKEwlWZWxvQ2xvdWQwHhcNMTkw\\nNDI3MTE1NTM5WhcNMTkwNzI3MTE1NTM5WjCBoDEtMCsGA1UEAxMkY2RmMTNlNmUt\\nMTNlMC00YTZlLTgwYTgtNmQxZmQ1NTE1ZGM4MS0wKwYDVQQKEyRlZTllY2ZiMi01\\nNDQyLTRjYzgtOTQ0MC01NzVkM2Y3MzIyMzYxMTAvBgNVBAUTKFZNd2FyZS00MjM3\\nMmE4ZmVlZDc5MjhhLTk2YTEwNmQ5NzIzMWNjNWIxDTALBgNVBAwTBGVkZ2UwggEi\\nMA0GCSqGSIb3DQEBAQUAA4IBDwAwggEKAoIBAQC5qm7tr5NdW/Ei9LA1Pq5L5B5B\\nA2909MAk3bmnQUD3SGxaPmsaZOlQ4RZea0xX9i/1YicX+iv19/Uch5O7Ogp4qlua\\ndWP6h/36ye1dosGXe5iS61gQBvyc862o1thoJwDrRQrrA6ls0dUmwpZ23yX6Po7T\\n/12M0liYVM2rbMv9Cjp3IPp02wrKPmrrkQGPoi9L7nJXtw/ejOhpxb+j++pwsAlk\\nPFdt1cU2OB+LCrrhCxivmuOw+TcS9a+H3qNnZaLkTGC7S3sv93u3+Uq0c1dBiNoQ\\nLMAxRUE5jErVgfWMsKJGnHKFwr9KaIEgJ9iXDoWei5G0+Y5UL1AMLlaLV8RJAgMB\\nAAGjYTBfMB0GA1UdJQQWMBQGCCsGAQUFBwMBBggrBgEFBQcDAjAdBgNVHQ4EFgQU\\nSELl9l8JeqVuteTUNDQdY+kcEwUwHwYDVR0jBBgwFoAUYaTXIGB2WA2o/jiiwmoZ\\n69ZxPQ4wDQYJKoZIhvcNAQELBQADggEBAKwii0EYuR9GSpysBFLW42h3piYUQexV\\n3bGl4l7ASo7OdUtUZ0Of/xls3qqKcZDz7DmbFnFgsxkraFfNJflzj+vhaBHf4kcS\\n/rZGCKyS840lndGkqIPM9Gu+oBX1RoblVA3hRQvqSugye8srEgmG6YsEPAtv5Fo4\\npw079wMmkTb3rP1LslMT3Mcrc/7VnGkq/F5owwpueBF13XJfJhXZP2/eAQ4gDSF/\\n1f4DLHJzDliSYDRN5C+jrWm3JVIu5vvJUIQSN3PAimZOgo5pjOridJvIdxRjCrlf\\n4oFWVTQM5R0IQZTIbBwBHE0vkwHPbIV9RybYOm9aaT60NRSYLCqmboI=\\n-----END CERTIFICATE-----\\n', 'serialNumber': 'CA81EFD6C7AE7C89', 'subjectKeyId': '4842e5f65f097aa56eb5e4d434341d63e91c1305', 'fingerPrint': '780ac499e5e4f2968c9b35d03bdc70ef87069050', 'validFrom': '2019-04-27T11:55:39.000Z', 'validTo': '2019-07-27T11:55:39.000Z'}, {'id': 6, 'created': '2019-04-28T12:18:30.000Z', 'csrId': 6, 'edgeId': 2, 'edgeSerialNumber':.</span>\n<span class=\"s2\">...</span>\n</pre>\n<h3>Login - Method</h3>\n<p>One needs to authenticate himself/herself via username and password to VCO. A user can be type \"operator\" or \"enterprise\" and hence has different rights in VCO.</p>\n<p><strong>Please note:</strong> Session cookie is getting created as soon as this method gets called. The session cookie gets saved under <code>/tmp/&lt;hostname&gt;.txt</code>, and used later by new method calls (so one does not need to use the login method everytime). As the cookie has no expire date and VCO holds the time on the expiry of the session, it is recommended <strong>to execute login method every so often</strong> to ensure nothing gets broken over time.</p>\n<p>Maybe to-do for the future, to store session time and check accordingly.</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py login --help\nusage: vcoclient.py login <span class=\"o\">[</span>-h<span class=\"o\">]</span> --username USERNAME <span class=\"o\">[</span>--password PASSWORD<span class=\"o\">]</span>\n                          <span class=\"o\">[</span>--no-operator<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help           show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --username USERNAME  Username <span class=\"k\">for</span> Authentication\n  --password <span class=\"o\">[</span>PASSWORD<span class=\"o\">]</span>\n                        Password <span class=\"k\">for</span> Authentication\n  --no-operator        Per default we login as operator to VCO. If not, use\n                       this flag\n</pre>\n<h4>Example</h4>\n<p>Either use the  unsecure method to provide a password:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 login --username<span class=\"o\">=</span>super@domain.com --password<span class=\"o\">=</span>VeloCloud123\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span>\n</pre>\n<p>or use the more secure method to provide it:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 login --username<span class=\"o\">=</span>super@domain.com --password\nPassword:\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span>\n</pre>\n<p>or use VCO_USER and/or VCO_PASS environment variables to pass no login information to the script itself:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> <span class=\"nb\">export</span> <span class=\"nv\">VCO_USER</span><span class=\"o\">=</span><span class=\"s2\">\"super@domain.com\"</span>\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> <span class=\"nb\">export</span> <span class=\"nv\">VCO_PASS</span><span class=\"o\">=</span><span class=\"s2\">\"SuperSecretPassword\"</span>\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 login\n<span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span>\n</pre>\n<h3>Logout</h3>\n<p>The logout method logsout from VCO itself and deletes the session cookie stored under <code>/tmp/&lt;hostname&gt;.txt</code>.</p>\n<p>It is best practice to use it after done using different methods with vcoclient.py</p>\n<h4>Example</h4>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 <span class=\"nb\">logout</span>\n</pre>\n<h3>Get edges</h3>\n<p>To get a list of all or filtered VeloCloud Edges (VCEs) from VCO. One can <code>--search</code> per value, get only one <code>--name</code> VCE and <code>--filters</code>only given keys. Each of the methods (<code>--name</code>, <code>--filters</code> or <code>--search</code>), one can use \"|\" to find for several values (e.g. to find several VCEs with names Branch1 or Branch2, use ``--name=\"Branch1|Branch2\"). This gives one a powerful option to compare and evaluate several VCEs against each other and use those returned values for another workflow.</p>\n<p><code>--enterpriseid</code> can be used to find all specify VCEs from specific customer in VCO. For msp based users this is a must to use.</p>\n<p><strong>Please note:</strong> <code>--name</code>, <code>--search</code> and <code>--filters</code>are all doing a loose search rather then an exact match, meaning you will get more values then maybe requested but you do not need to be very specific for your search. Maybe as a to-do, give different options in the future.</p>\n<pre>usage: vcoclient.py edges_get <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--name NAME<span class=\"o\">]</span> <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span>\n                              <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span> <span class=\"o\">[</span>--enterpriseid ID<span class=\"o\">]</span> <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help         show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --name NAME        Search Edge/Edges containing the given name\n  --filters FILTERS  Returns only given filters out of the returned value.\n                     Default all values are returned\n  --search SEARCH    Search any data from properties of Edges, e.g. search <span class=\"k\">for</span>\n                     USB interfaces\n  --enterpriseid ID            Returns the Edges of only that given enterprise. Default\n                     all Edges of all enterprises at operator view or all\n                     Edges of an enterprise at customer view are returned.\n  --rows_name        Returns only the row names from the output result.\n</pre>\n<h4>Example</h4>\n<p>To get all VCEs, with all values and keys, use default:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get\n                                                               <span class=\"m\">0</span>                                         <span class=\"m\">1</span>                                         <span class=\"m\">2</span>                                         <span class=\"m\">3</span>\nactivationKey                                HS7S-QKPA-ZZCC-PG74                       LHH3-8B4R-7XVJ-6J3V                       JTWH-EHNW-7LUG-YQ9T                       YZ8U-CKTY-8MTL-FP4R\nactivationKeyExpires                    <span class=\"m\">2019</span>-05-28T11:53:33.000Z                  <span class=\"m\">2019</span>-05-19T16:58:53.000Z                  <span class=\"m\">2019</span>-06-01T10:32:39.000Z                  <span class=\"m\">2019</span>-06-01T16:10:54.000Z\nactivationState                                        ACTIVATED                                 ACTIVATED                                 ACTIVATED                                 ACTIVATED\nactivationTime                          <span class=\"m\">2019</span>-04-28T11:55:38.000Z                  <span class=\"m\">2019</span>-04-19T17:17:51.000Z                  <span class=\"m\">2019</span>-05-02T10:55:10.000Z                  <span class=\"m\">2019</span>-05-02T19:18:20.000Z\nalertsEnabled                                                  <span class=\"m\">1</span>                                         <span class=\"m\">1</span>                                         <span class=\"m\">1</span>                                         <span class=\"m\">1</span>\nbuildNumber                                     R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA                          R322-20190212-GA\ncreated                                 <span class=\"m\">2019</span>-04-19T15:48:50.000Z                  <span class=\"m\">2019</span>-04-19T16:58:53.000Z                  <span class=\"m\">2019</span>-05-02T10:32:39.000Z                  <span class=\"m\">2019</span>-05-02T16:10:54.000Z\n...                                     ...                                       ...                                       ...                                       ...\n</pre>\n<p>or use <code>--name</code> to filter one branch:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get --name<span class=\"o\">=</span>Branch1\n                                                               <span class=\"m\">0</span>\nactivationKey                                HS7S-QKPA-ZZCC-PG74\nactivationKeyExpires                    <span class=\"m\">2019</span>-05-28T11:53:33.000Z\nactivationState                                        ACTIVATED\nactivationTime                          <span class=\"m\">2019</span>-04-28T11:55:38.000Z\nalertsEnabled                                                  <span class=\"m\">1</span>\nbuildNumber                                     R322-20190212-GA\ncreated                                 <span class=\"m\">2019</span>-04-19T15:48:50.000Z\n...                                     ...\n</pre>\n<p>or several:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get --name<span class=\"o\">=</span><span class=\"s2\">\"Branch1|Branch-2\"</span>\n                                                               <span class=\"m\">0</span>                                         <span class=\"m\">1</span>\nactivationKey                                HS7S-QKPA-ZZCC-PG74                       LHH3-8B4R-7XVJ-6J3V\nactivationKeyExpires                    <span class=\"m\">2019</span>-05-28T11:53:33.000Z                  <span class=\"m\">2019</span>-05-19T16:58:53.000Z\nactivationState                                        ACTIVATED                                 ACTIVATED\nactivationTime                          <span class=\"m\">2019</span>-04-28T11:55:38.000Z                  <span class=\"m\">2019</span>-04-19T17:17:51.000Z\nalertsEnabled                                                  <span class=\"m\">1</span>                                         <span class=\"m\">1</span>\nbuildNumber                                     R322-20190212-GA                          R322-20190212-GA\ncreated                                 <span class=\"m\">2019</span>-04-19T15:48:50.000Z                  <span class=\"m\">2019</span>-04-19T16:58:53.000Z\n...                                     ...                                       ...\n</pre>\n<p>Another option is to filter a specific value out of the return with <code>--filters</code> option, e.g. if one wants to filter activationKey and activationKeyExpires for all or some Edges:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55  edges_get --filters<span class=\"o\">=</span><span class=\"s2\">\"activationKey|activationKeyExpires\"</span>\n\n                                    Branch1-HA                  Branch-2                  Branch-3                  Branch-4\nactivationKey              HS7S-QKPA-ZZCC-PG74       LHH3-8B4R-7XVJ-6J3V       JTWH-EHNW-7LUG-YQ9T       YZ8U-CKTY-8MTL-FP4R\nactivationKeyExpires  <span class=\"m\">2019</span>-05-28T11:53:33.000Z  <span class=\"m\">2019</span>-05-19T16:58:53.000Z  <span class=\"m\">2019</span>-06-01T10:32:39.000Z  <span class=\"m\">2019</span>-06-01T16:10:54.000Z\n</pre>\n<p>or one can combine it with <code>--name</code> as well to filter it more specific:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55  edges_get --filters<span class=\"o\">=</span><span class=\"s2\">\"activationKey|activationKeyExpires\"</span> --name<span class=\"o\">=</span><span class=\"s2\">\"Branch1|Branch-2\"</span>\n                                    Branch1-HA                  Branch-2\nactivationKey              HS7S-QKPA-ZZCC-PG74       LHH3-8B4R-7XVJ-6J3V\nactivationKeyExpires  <span class=\"m\">2019</span>-05-28T11:53:33.000Z  <span class=\"m\">2019</span>-05-19T16:58:53.000Z\n</pre>\n<p>Even more, one can search for any value within the VCE properties with <code>--search</code>, let see what if we want to see all values:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get --search<span class=\"o\">=</span><span class=\"s2\">\"*\"</span>\n                                                                        Branch1-HA  ...                                           Branch-4\n...\ncertificates_0_certificate       -----BEGIN CERTIFICATE-----<span class=\"se\">\\n</span>MIIDtTCCAp2gAwIBA...  ...  -----BEGIN CERTIFICATE-----<span class=\"se\">\\n</span>MIIDtTCCAp2gAwIBA...\ncertificates_0_created                                    <span class=\"m\">2019</span>-04-28T11:55:39.000Z  ...                           <span class=\"m\">2019</span>-05-14T18:00:10.000Z\ncertificates_0_csrId                                                             <span class=\"m\">5</span>  ...                                                  <span class=\"m\">8</span>\ncertificates_0_edgeId                                                            <span class=\"m\">2</span>  ...                                                  <span class=\"m\">5</span>\ncertificates_0_edgeSerialNumber           VMware-42372a8feed7928a-96a106d97231cc5b  ...           VMware-4237c421fc52ed55-3ed39a20fbc24354\ncertificates_0_enterpriseId                                                      <span class=\"m\">1</span>  ...                                                  <span class=\"m\">1</span>\ncertificates_0_fingerPrint                780ac499e5e4f2968c9b35d03bdc70ef87069050  ...           af32143b2fee7e2bfca62ab0042244d7cb7f7e5e\ncertificates_0_id                                                                <span class=\"m\">5</span>  ...                                                  <span class=\"m\">8</span>\ncertificates_0_serialNumber                                       CA81EFD6C7AE7C89  ...                                   D4C2500333FE1757\n...\n</pre>\n<p>In the background <code>--search</code> flattens the returned JSON and returns all values when <code>*</code> used. One can however, search for specific values as well, e.g. lets search for interface properties with 191. or 10. IPs:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get --search<span class=\"o\">=</span><span class=\"s2\">\"191.|10.\"</span>\n\n                                                     Branch1-HA     Branch-2                  Branch-3                  Branch-4\n....\nconfiguration_enterprise_modules_0_edgeSpecific...  <span class=\"m\">191</span>.168.1.2  <span class=\"m\">191</span>.168.3.2                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...  <span class=\"m\">191</span>.168.1.1  <span class=\"m\">191</span>.168.3.1                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...  <span class=\"m\">191</span>.168.2.2  <span class=\"m\">191</span>.168.4.2                  <span class=\"m\">10</span>.0.3.2                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...  <span class=\"m\">191</span>.168.2.1  <span class=\"m\">191</span>.168.4.1                  <span class=\"m\">10</span>.0.3.1                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     <span class=\"m\">10</span>.2.1.2                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     <span class=\"m\">10</span>.2.1.1                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     <span class=\"m\">10</span>.2.2.2                       NaN                       NaN\nconfiguration_enterprise_modules_0_edgeSpecific...          NaN     <span class=\"m\">10</span>.2.2.1                       NaN                       NaN\nconfiguration_enterprise_modules_1_edgeSpecific...          NaN  <span class=\"m\">191</span>.168.0.3                <span class=\"m\">10</span>.0.254.2                       NaN\nconfiguration_enterprise_modules_1_edgeSpecific...          NaN   <span class=\"m\">10</span>.0.254.2                       NaN                       NaN\nlinks_0_displayName                                 <span class=\"m\">191</span>.168.1.2  <span class=\"m\">191</span>.168.3.2               <span class=\"m\">191</span>.168.0.5                       NaN\nlinks_0_ipAddress                                   <span class=\"m\">191</span>.168.1.2  <span class=\"m\">191</span>.168.3.2               <span class=\"m\">191</span>.168.0.5                       NaN\nlinks_1_displayName                                 <span class=\"m\">191</span>.168.2.2  <span class=\"m\">191</span>.168.4.2                       NaN                       NaN\nlinks_1_ipAddress                                   <span class=\"m\">191</span>.168.2.2  <span class=\"m\">191</span>.168.4.2                       NaN                       NaN\nlinks_2_ipAddress                                           NaN     <span class=\"m\">10</span>.2.1.2                       NaN                       NaN\nlinks_3_ipAddress                                           NaN     <span class=\"m\">10</span>.2.2.2                       NaN                       NaN\n...\n</pre>\n<p>and filter the 'ipAddress' column only for all VCEs (Branch1-HA, Branch-2, Branch-3 or Branch-4):</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --vco<span class=\"o\">=</span><span class=\"m\">192</span>.168.2.55 edges_get --search<span class=\"o\">=</span><span class=\"s2\">\"191.|10.\"</span> --filters<span class=\"o\">=</span><span class=\"s2\">\"ipAddress\"</span>\n                    Branch1-HA     Branch-2     Branch-3 Branch-4\nlinks_0_ipAddress  <span class=\"m\">191</span>.168.1.2  <span class=\"m\">191</span>.168.3.2  <span class=\"m\">191</span>.168.0.5      NaN\nlinks_1_ipAddress  <span class=\"m\">191</span>.168.2.2  <span class=\"m\">191</span>.168.4.2          NaN      NaN\nlinks_2_ipAddress          NaN     <span class=\"m\">10</span>.2.1.2          NaN      NaN\nlinks_3_ipAddress          NaN     <span class=\"m\">10</span>.2.2.2          NaN      NaN\n</pre>\n<p>All those outputs can be then converted into CSV or JSON.</p>\n<h3>Get Customers VCEs (as MSP or Operator) - Method</h3>\n<p>To get a list of all VCEs as a MSP/Partner or as operator one can use <code>msp_customers_get</code> or <code>operator_customers_get</code>. Same as edges_get method, one can use <code>--search</code>. <code>--filters</code> and <code>--names</code> to narrow down the result accordingly.</p>\n<h4>Example</h4>\n<p>The help output for <code>msp_customers_get</code>:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py msp_customers_get --help\nusage: vcoclient.py msp_customers_get <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--name NAME<span class=\"o\">]</span> <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span> <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help         show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --name NAME        Search Enterprise/Enterprises containing the given name\n  --filters FILTERS  Returns only given filters out of the returned value.\n                     Default all values are returned\n  --search SEARCH    Search any data from properties of customers, e.g. search\n                     <span class=\"k\">for</span> particular edge\n  --rows_name        Returns only the row names from the output result.\n</pre>\n<p>and the help output for <code>\u00f2perator_custmers_get</code>:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py operator_customers_get --help\nusage: vcoclient.py operator_customers_get <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--name NAME<span class=\"o\">]</span>\n                                           <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span>\n                                           <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span> <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help         show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --name NAME        Search Enterprise/Enterprises containing the given name\n  --filters FILTERS  Returns only given filters out of the returned value.\n                     Default all values are returned\n  --search SEARCH    Search any data from properties of customers, e.g. search\n                     <span class=\"k\">for</span> particular edge\n  --rows_name        Returns only the row names from the output result.\n</pre>\n<p>Here an example (customer names and account numbers obscured on purpose):</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py msp_customers_get --search<span class=\"o\">=</span><span class=\"s2\">\"*\"</span>\n                                                                 POC                         Customer Test  ...                            Customer <span class=\"m\">5</span>                           Customer <span class=\"m\">4</span>\naccountNumber                                            XXX-XXX-H86                           XXX-XXX-BKW  ...                           XXX-XXXDGL                           XXX-XXX-4EB\nalertsEnabled                                                      <span class=\"m\">1</span>                                     <span class=\"m\">1</span>  ...                                     <span class=\"m\">1</span>                                     <span class=\"m\">1</span>\ncity                                                             NaN                                   NaN  ...                                   NaN                                   NaN\ncontactEmail                                                     NaN                                   NaN  ...                                   NaN                                   NaN\ncontactMobile                                                    NaN                                   NaN  ...                                   NaN                                   NaN\ncontactName                                                      NaN                                   NaN  ...                                   NaN                                   NaN\ncontactPhone                                                     NaN                                   NaN  ...                                   NaN                                   NaN\ncountry                                                          NaN                                   NaN  ...                                   NaN                                   NaN\ncreated                                     <span class=\"m\">2017</span>-10-09T13:47:29.000Z              <span class=\"m\">2018</span>-02-01T21:56:50.000Z  ...              <span class=\"m\">2019</span>-05-17T18:11:40.000Z              <span class=\"m\">2019</span>-06-20T15:52:27.000Z\ndescription                                                      NaN                                   NaN  ...                                   NaN                                   NaN\ndomain                                                           NaN                                   NaN  ...                                   NaN                                   NaN\n....\n</pre>\n<h3>Get edges behind gateway</h3>\n<p>This method will give one the ability to get all/some gateways behind a given customer</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py enterprise_get_gateway --help\nusage: vcoclient.py enterprise_get_gateway <span class=\"o\">[</span>-h<span class=\"o\">]</span> --enterpriseid ENTERPRISEID\n                                           <span class=\"o\">[</span>--name NAME<span class=\"o\">]</span>\n                                           <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span>\n                                           <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span> <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --name NAME           Search <span class=\"k\">for</span> a given column name\n  --enterpriseid ENTERPRISEID\n                        Get gateways associated to an enterprise\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search any data from properties of customers, e.g.\n                        search <span class=\"k\">for</span> particular edge\n  --rows_name           Returns only the row names from the output result.\n</pre>\n<h4>Example</h4>\n<p>Get the gateways associated to that enterprise:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py enterprise_get_gateway --enterpriseid<span class=\"o\">=</span><span class=\"m\">26</span>\n\nvcg115-xxx1    vcg101-xxx2   vcg133-xxx1   vcg104-xxx2\naddress  xxx.193.30.11  xxx.193.31.36  xxx.193.29.52  xxx.193.28.72\n</pre>\n<h3>Get gateways behind customer</h3>\n<p>This method will give one the ability to get all/some edges behind a given gateway</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py gateway_get_edges --help\nusage: vcoclient.py gateway_get_edges <span class=\"o\">[</span>-h<span class=\"o\">]</span> --gatewayid GATEWAYID <span class=\"o\">[</span>--name NAME<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span> <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span>\n                                      <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span>\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --name NAME           Search <span class=\"k\">for</span> a given column name\n  --gatewayid GATEWAYID\n                        Get edges associated to a gateway\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search any data from properties of customers, e.g.\n                        search <span class=\"k\">for</span> particular edge\n  --rows_name           Returns only the row names from the output result.\n</pre>\n<h4>Example</h4>\n<p>Get all edges behind gateway (output hidden):</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py --gatewayid <span class=\"m\">5</span>\n\n                                          Alpharetta xxxxxxx                   Dallas xxxx\nactivationKey                            3WCR-xxxx-xxxx-xxxx                   3MQZ-xxx-xxxx-xxx\nactivationKeyExpires                <span class=\"m\">2018</span>-10-20T13:26:00.000Z              <span class=\"m\">2018</span>-04-06T02:11:14.000Z\nactivationState                         REACTIVATION_PENDING                             ACTIVATED\nactivationTime                      <span class=\"m\">2018</span>-05-25T00:02:08.000Z              <span class=\"m\">2018</span>-03-07T18:50:44.000Z\nalertsEnabled                                              <span class=\"m\">1</span>                                     <span class=\"m\">1</span>\nbuildNumber                     R321-20181018-GA-27175-28009                      R320-20180409-GA\ncity                                                 Phoenix                                Dallas\ncountry                                                   US                                    US\ncreated                             <span class=\"m\">2018</span>-04-04T20:51:55.000Z              <span class=\"m\">2018</span>-03-07T02:11:14.000Z\n</pre>\n<h3>Get link metric of a given edge</h3>\n<p>One can get the link metric of a particular VCE for a given time.</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py edge_get_lm --help\nusage: vcoclient.py edge_get_lm <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span> <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span>\n                                --edgeid EDGEID <span class=\"o\">[</span>--enterpriseid ENTERPRISEID<span class=\"o\">]</span>\n                                --starttime STARTTIME <span class=\"o\">[</span>--endtime ENDTIME<span class=\"o\">]</span>\n                                <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span>\n\nCollect link statistics <span class=\"k\">for</span> a VCE between a given period.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search <span class=\"k\">for</span> the metric value\n  --edgeid EDGEID       Get information <span class=\"k\">for</span> that specific Edge. Edgeid can be\n                        found under edges_get method under id.\n  --enterpriseid ENTERPRISEID\n                        Get information <span class=\"k\">for</span> that specific Edge in that\n                        specific customer. EnterpriseId can be either found\n                        from *_customers_get method under id or edges_get\n                        method under enterpriseId.\n  --starttime STARTTIME\n                        The start <span class=\"nb\">time</span> from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM.\n  --endtime ENDTIME     The end <span class=\"nb\">time</span> from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM. End <span class=\"nb\">time</span>\n                        is default to <span class=\"nb\">time</span> now.\n  --rows_name           Returns only the row names from the output result.\n</pre>\n<h4>Example</h4>\n<p>Get the metric of all the links of a given edge from a given customer in the past until now:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py edge_get_lm --edgeid<span class=\"o\">=</span><span class=\"m\">1712</span> --enterpriseid<span class=\"o\">=</span><span class=\"m\">214</span> --starttime<span class=\"o\">=</span><span class=\"s2\">\"2019-07-21\"</span>\n\n                                                             GE3                                   GE4\nbestJitterMsRx                                            <span class=\"m\">0</span>.0708                                 <span class=\"m\">0</span>.429\nbestJitterMsTx                                            <span class=\"m\">0</span>.0007                                <span class=\"m\">0</span>.0677\nbestLatencyMsRx                                           <span class=\"m\">5</span>.9113                                <span class=\"m\">5</span>.6578\nbestLatencyMsTx                                           <span class=\"m\">8</span>.2916                                 <span class=\"m\">9</span>.771\nbestLossPctRx                                            <span class=\"m\">1</span>.00436                              <span class=\"m\">0</span>.009067\nbestLossPctTx                                           <span class=\"m\">0</span>.992402                              <span class=\"m\">0</span>.010039\nbpsOfBestPathRx                                         <span class=\"m\">10000000</span>                               <span class=\"m\">5000000</span>\nbpsOfBestPathTx                                         <span class=\"m\">10000000</span>                               <span class=\"m\">5000000</span>\nbytesRx                                               <span class=\"m\">6756806035</span>                             <span class=\"m\">942812687</span>\nbytesTx                                               <span class=\"m\">5831454620</span>                            <span class=\"m\">1543851068</span>\ncontrolBytesRx                                        <span class=\"m\">3161065177</span>                             <span class=\"m\">798578528</span>\ncontrolBytesTx                                        <span class=\"m\">4174190874</span>                            <span class=\"m\">1477374932</span>\ncontrolPacketsRx                                        <span class=\"m\">28229649</span>                               <span class=\"m\">7410590</span>\ncontrolPacketsTx                                        <span class=\"m\">28763213</span>                               <span class=\"m\">9038440</span>\n....\nlink_networkType                                        ETHERNET                              ETHERNET\nlink_operatorAlertsEnabled                                     <span class=\"m\">1</span>                                     <span class=\"m\">1</span>\nlink_serviceState                                     IN_SERVICE                            IN_SERVICE\nlink_state                                                STABLE                                STABLE\nlink_vpnState                                             STABLE                                STABLE\np1BytesRx                                                <span class=\"m\">9879820</span>                              <span class=\"m\">19802676</span>\np1BytesTx                                               <span class=\"m\">98164614</span>                              <span class=\"m\">40242590</span>\np1PacketsRx                                                <span class=\"m\">53984</span>                                <span class=\"m\">111780</span>\np1PacketsTx                                               <span class=\"m\">144023</span>                                 <span class=\"m\">86695</span>\np2BytesRx                                             <span class=\"m\">1342611884</span>                             <span class=\"m\">123590823</span>\np2BytesTx                                              <span class=\"m\">988377584</span>                              <span class=\"m\">25282998</span>\np2PacketsRx                                              <span class=\"m\">1806817</span>                                <span class=\"m\">510994</span>\np2PacketsTx                                              <span class=\"m\">2058099</span>                                 <span class=\"m\">57703</span>\np3BytesRx                                             <span class=\"m\">2243249154</span>                                <span class=\"m\">840660</span>\np3BytesTx                                              <span class=\"m\">570721548</span>                                <span class=\"m\">950548</span>\np3PacketsRx                                             <span class=\"m\">12891737</span>                                  <span class=\"m\">2738</span>\np3PacketsTx                                              <span class=\"m\">3279254</span>                                  <span class=\"m\">3994</span>\npacketsRx                                               <span class=\"m\">42982187</span>                               <span class=\"m\">8036102</span>\npacketsTx                                               <span class=\"m\">34244589</span>                               <span class=\"m\">9186832</span>\nscoreRx                                                  <span class=\"m\">4</span>.33582                               <span class=\"m\">4</span>.39847\nscoreTx                                                  <span class=\"m\">4</span>.33613                               <span class=\"m\">4</span>.39684\nsignalStrength                                                 <span class=\"m\">0</span>                                     <span class=\"m\">0</span>\ntotalBytes                                           <span class=\"m\">12588260655</span>                            <span class=\"m\">2486663755</span>\ntotalPackets                                            <span class=\"m\">77226776</span>                              <span class=\"m\">17222934</span>\n</pre>\n<h3>Get link metric for the whole enterprise</h3>\n<p>One can get the link metrics of all VCEs of a given enterprise.</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py edge_get_agg_lm --help\nusage: vcoclient.py edges_get_agg_lm <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--enterpriseid ENTERPRISEID<span class=\"o\">]</span>\n                                     --starttime STARTTIME <span class=\"o\">[</span>--endtime ENDTIME<span class=\"o\">]</span>\n                                     <span class=\"o\">[</span>--name NAME<span class=\"o\">]</span> <span class=\"o\">[</span>--filters FILTERS<span class=\"o\">]</span>\n                                     <span class=\"o\">[</span>--search SEARCH<span class=\"o\">]</span> <span class=\"o\">[</span>--rows_name<span class=\"o\">]</span> <span class=\"o\">[</span>--stats<span class=\"o\">]</span>\n\nCollect aggregated link statistics <span class=\"k\">for</span> several VCEs between a given period\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --enterpriseid ENTERPRISEID\n                        Get information <span class=\"k\">for</span> that specific Edge in that\n                        specific customer. EnterpriseId can be either found\n                        from *_customers_get method under id or edges_get\n                        method under enterpriseId.\n  --starttime STARTTIME\n                        The start <span class=\"nb\">time</span> from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM.\n  --endtime ENDTIME     The end <span class=\"nb\">time</span> from when one wants to get the data.\n                        Format is in YYYY-MM-DD or YYYY-MM-DD HH:MM.\n  --name NAME           Search column which contains the given name\n  --filters FILTERS     Returns only given filters out of the returned value.\n                        Default all values are returned\n  --search SEARCH       Search any value within the <span class=\"k\">return</span>, e.g. search <span class=\"k\">for</span>\n                        USB interfaces\n  --rows_name           Returns only the row names from the output result.\n  --stats               Returns the statistics of the datastructure\n</pre>\n<h4>Example</h4>\n<p>Get the metric of all the links of a given edge from a given customer in the past until now:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py edges_get_agg_lm --enterpriseid<span class=\"o\">=</span><span class=\"m\">214</span> --starttime<span class=\"o\">=</span><span class=\"s2\">\"2019-10-04\"</span>\n                                                          GE3                                   GE4  ...                                   GE4                                   GE4\nbestJitterMsRx                                              <span class=\"m\">0</span>                                     <span class=\"m\">0</span>  ...                                     <span class=\"m\">0</span>                                     <span class=\"m\">0</span>\nbestJitterMsTx                                              <span class=\"m\">0</span>                                     <span class=\"m\">0</span>  ...                                     <span class=\"m\">1</span>                                     <span class=\"m\">0</span>\nbestLatencyMsRx                                            <span class=\"m\">28</span>                                    <span class=\"m\">30</span>  ...                                    <span class=\"m\">14</span>                                    <span class=\"m\">13</span>\nbestLatencyMsTx                                            <span class=\"m\">36</span>                                    <span class=\"m\">37</span>  ...                                     <span class=\"m\">9</span>                                     <span class=\"m\">5</span>\nbestLossPctRx                                               <span class=\"m\">0</span>                                     <span class=\"m\">0</span>  ...                                     <span class=\"m\">0</span>                                     <span class=\"m\">0</span>\nbestLossPctTx                                               <span class=\"m\">0</span>                                     <span class=\"m\">0</span>  ...                                     <span class=\"m\">0</span>                                     <span class=\"m\">0</span>\nbpsOfBestPathRx                                     <span class=\"m\">200000000</span>                             <span class=\"m\">200000000</span>  ...                              <span class=\"m\">30114000</span>                              <span class=\"m\">98408000</span>\nbpsOfBestPathTx                                     <span class=\"m\">200000000</span>                             <span class=\"m\">200000000</span>  ...                               <span class=\"m\">1392000</span>                              <span class=\"m\">10185000</span>\nbytesRx                                                <span class=\"m\">813833</span>                                <span class=\"m\">144354</span>  ...                                <span class=\"m\">560482</span>                                <span class=\"m\">922079</span>\nbytesTx                                                <span class=\"m\">901650</span>                                <span class=\"m\">171777</span>  ...                                <span class=\"m\">736663</span>                                <span class=\"m\">874260</span>\ncontrolBytesRx                                         <span class=\"m\">683561</span>                                <span class=\"m\">144354</span>  ...                                <span class=\"m\">399858</span>                                <span class=\"m\">435730</span>\ncontrolBytesTx                                         <span class=\"m\">820243</span>                                <span class=\"m\">171777</span>  ...                                <span class=\"m\">736663</span>                                <span class=\"m\">512154</span>\ncontrolPacketsRx                                         <span class=\"m\">5906</span>                                  <span class=\"m\">2398</span>  ...                                  <span class=\"m\">5543</span>                                  <span class=\"m\">4928</span>\ncontrolPacketsTx                                         <span class=\"m\">5747</span>                                  <span class=\"m\">2399</span>  ...                                  <span class=\"m\">5865</span>                                  <span class=\"m\">4752</span>\nlinkId                                                   <span class=\"m\">3163</span>                                  <span class=\"m\">3166</span>  ...                                 <span class=\"m\">37009</span>                                 <span class=\"m\">38690</span>\n...\n</pre>\n<h3>Set system properties</h3>\n<p>System properties of VCO can be changed/added. Only applicable at \"operator\" mode but needed for on-premiss installation of VCO.</p>\n<p><strong>Please Note</strong>: Some system properties can break VCO and use this method carefully.</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py sysprop_set --help\nusage: vcoclient.py sysprop_set <span class=\"o\">[</span>-h<span class=\"o\">]</span> --name NAME --value VALUE\n\noptional arguments:\n  -h, --help     show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --name NAME    Name of the new/edit system property\n  --value VALUE  New value of the system property\n</pre>\n<h4>Example</h4>\n<p>Enable google API for VCO:</p>\n<pre><span class=\"o\">[</span>iddoc@homeserver:/scripts<span class=\"o\">]</span> vcoclient.py sysprop_set --name<span class=\"o\">=</span>service.client.googleMapsApi.enable --value<span class=\"o\">=</span><span class=\"nb\">true</span>\n</pre>\n<h2>Contributing</h2>\n<ol>\n<li>Fork it (<a href=\"https://github.com/iddocohen/vcoclient/fork\" rel=\"nofollow\">https://github.com/iddocohen/vcoclient/fork</a>)</li>\n<li>Create your feature branch (<code>git checkout -b feature/fooBar</code>)</li>\n<li>Commit your changes (<code>git commit -am 'Add some fooBar'</code>)</li>\n<li>Push to the branch (<code>git push origin feature/fooBar</code>)</li>\n<li>Create a new Pull Request</li>\n</ol>\n<h2>Licence</h2>\n<p>MIT, see <code>LICENSE</code></p>\n\n\n          </div>"}, "last_serial": 5927040, "releases": {"0.1.4": [{"comment_text": "", "digests": {"md5": "75085842db56cf0fd4d7e5b9a10e0951", "sha256": "a63b5b7a9d2dbc2c289f411fa155ad02e3ddf3294b09e1cd73371802d31694da"}, "downloads": -1, "filename": "vcoclient-0.1.4-py3.7.egg", "has_sig": false, "md5_digest": "75085842db56cf0fd4d7e5b9a10e0951", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 14242, "upload_time": "2019-08-07T08:44:42", "upload_time_iso_8601": "2019-08-07T08:44:42.007236Z", "url": "https://files.pythonhosted.org/packages/12/0c/f493f1e516eb6cbf985ad26c3c5208984e88ce24bb6e36f09dc38e8c717e/vcoclient-0.1.4-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "626b606ec3a55cc7e48f4e05f265d544", "sha256": "3b45eddd2f108ca2f59cd6669808f6f14dfcfdae7bd90237749d42521d396754"}, "downloads": -1, "filename": "vcoclient-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "626b606ec3a55cc7e48f4e05f265d544", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15058, "upload_time": "2019-07-04T14:05:26", "upload_time_iso_8601": "2019-07-04T14:05:26.541377Z", "url": "https://files.pythonhosted.org/packages/a2/e8/14b1c17288a0833c1296ee66e7376e37705ef2ec49211679b101c1c4bf4f/vcoclient-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a75958ddca2a1a1f2a84733b66fa634a", "sha256": "137c527361a85347bec4f2bfd16d55b5e4021e4436f74deb45c7783e9a8df42b"}, "downloads": -1, "filename": "vcoclient-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a75958ddca2a1a1f2a84733b66fa634a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21524, "upload_time": "2019-07-04T14:05:28", "upload_time_iso_8601": "2019-07-04T14:05:28.462476Z", "url": "https://files.pythonhosted.org/packages/fb/dc/23f79320fdd8459fee35364ad057e0fe04daaec2f22915667be78d132a7b/vcoclient-0.1.4.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "7f6b4fc9ec54ca8203496ad0af0823e2", "sha256": "5571bd1860a41379efba08f7e271462caecda60246d0e9543d5bbb6a82ccc8f3"}, "downloads": -1, "filename": "vcoclient-0.1.7-py3.7.egg", "has_sig": false, "md5_digest": "7f6b4fc9ec54ca8203496ad0af0823e2", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 16092, "upload_time": "2019-08-07T09:03:07", "upload_time_iso_8601": "2019-08-07T09:03:07.681869Z", "url": "https://files.pythonhosted.org/packages/92/15/61701eb7779d9ef53361815bbaac2ad09da3ee2827594d30008942bae32a/vcoclient-0.1.7-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "fa59f30c129ee19521a0d6b4aed30eb2", "sha256": "fe76cca7aa802d9caf3e030ac4ffdce43f9029eee17d49d3b0860b6945de434d"}, "downloads": -1, "filename": "vcoclient-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "fa59f30c129ee19521a0d6b4aed30eb2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16801, "upload_time": "2019-08-07T09:03:05", "upload_time_iso_8601": "2019-08-07T09:03:05.295846Z", "url": "https://files.pythonhosted.org/packages/03/76/94554401cdd0fef3397a9dd8cf650ad5ea04a8e13a48df8d086915e07768/vcoclient-0.1.7-py3-none-any.whl", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "a0b35aa92e1e23123d9e27c56c8ce07b", "sha256": "02f2822c422aec3514b812b2b048abd4ec2aea6a0c23d8bcf0b32902a9d4f0da"}, "downloads": -1, "filename": "vcoclient-0.1.8-py3.7.egg", "has_sig": false, "md5_digest": "a0b35aa92e1e23123d9e27c56c8ce07b", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 16926, "upload_time": "2019-10-04T07:16:48", "upload_time_iso_8601": "2019-10-04T07:16:48.270960Z", "url": "https://files.pythonhosted.org/packages/9a/65/8d122d065ef1d5b088c08b3f3ae1e06ccbb111024454d2e449a922c7c80f/vcoclient-0.1.8-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "00ed6487455385ecd9a0af79743477d4", "sha256": "1b6264944cc46eab290393ae8bef69c9ed2060931fa3648219ac092c714cb8d0"}, "downloads": -1, "filename": "vcoclient-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "00ed6487455385ecd9a0af79743477d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17603, "upload_time": "2019-10-04T07:16:45", "upload_time_iso_8601": "2019-10-04T07:16:45.736593Z", "url": "https://files.pythonhosted.org/packages/a3/62/516d2f0c9e85c6eaba33f3b91d245572700883511d6dab50e2534375daab/vcoclient-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5e0623b15ce5e6dda70f3cda7598f2b", "sha256": "a25c378621a02cd29df2f322b92e3b53ae79096aa2815d414be185b573d327e4"}, "downloads": -1, "filename": "vcoclient-0.1.8.tar.gz", "has_sig": false, "md5_digest": "c5e0623b15ce5e6dda70f3cda7598f2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33849, "upload_time": "2019-10-04T07:16:50", "upload_time_iso_8601": "2019-10-04T07:16:50.191500Z", "url": "https://files.pythonhosted.org/packages/ad/f2/94efffa6ccba7e084f5cee6cc2241880235857d2bb854474b1f859d52fc2/vcoclient-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a0b35aa92e1e23123d9e27c56c8ce07b", "sha256": "02f2822c422aec3514b812b2b048abd4ec2aea6a0c23d8bcf0b32902a9d4f0da"}, "downloads": -1, "filename": "vcoclient-0.1.8-py3.7.egg", "has_sig": false, "md5_digest": "a0b35aa92e1e23123d9e27c56c8ce07b", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.6", "size": 16926, "upload_time": "2019-10-04T07:16:48", "upload_time_iso_8601": "2019-10-04T07:16:48.270960Z", "url": "https://files.pythonhosted.org/packages/9a/65/8d122d065ef1d5b088c08b3f3ae1e06ccbb111024454d2e449a922c7c80f/vcoclient-0.1.8-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "00ed6487455385ecd9a0af79743477d4", "sha256": "1b6264944cc46eab290393ae8bef69c9ed2060931fa3648219ac092c714cb8d0"}, "downloads": -1, "filename": "vcoclient-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "00ed6487455385ecd9a0af79743477d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17603, "upload_time": "2019-10-04T07:16:45", "upload_time_iso_8601": "2019-10-04T07:16:45.736593Z", "url": "https://files.pythonhosted.org/packages/a3/62/516d2f0c9e85c6eaba33f3b91d245572700883511d6dab50e2534375daab/vcoclient-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5e0623b15ce5e6dda70f3cda7598f2b", "sha256": "a25c378621a02cd29df2f322b92e3b53ae79096aa2815d414be185b573d327e4"}, "downloads": -1, "filename": "vcoclient-0.1.8.tar.gz", "has_sig": false, "md5_digest": "c5e0623b15ce5e6dda70f3cda7598f2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 33849, "upload_time": "2019-10-04T07:16:50", "upload_time_iso_8601": "2019-10-04T07:16:50.191500Z", "url": "https://files.pythonhosted.org/packages/ad/f2/94efffa6ccba7e084f5cee6cc2241880235857d2bb854474b1f859d52fc2/vcoclient-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:26 2020"}