{"info": {"author": "Sajeesh E Namboothiri", "author_email": "sajeeshe@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Easy progress reporting for Python\n==================================\n\n\n\nBars\n----\n\nThere are 7 progress bars to choose from:\n\n- ``Bar``\n- ``ChargingBar``\n- ``FillingSquaresBar``\n- ``FillingCirclesBar``\n- ``IncrementalBar``\n- ``PixelBar``\n- ``ShadyBar``\n\nTo use them, just call ``next`` to advance and ``finish`` to finish:\n\n.. code-block:: python\n\n    from pgbar.pgbar import Bar\n\n    bar = Bar('Processing', max=20)\n    for i in range(20):\n        # Do some work\n        bar.next()\n    bar.finish()\n\nor use any bar of this class as a context manager:\n\n.. code-block:: python\n\n    from pgbar.pgbar import Bar\n\n    with Bar('Processing', max=20) as bar:\n        for i in range(20):\n            # Do some work\n            bar.next()\n\nThe result will be a bar like the following: ::\n\n    Processing |#############                   | 42/100\n\nTo simplify the common case where the work is done in an iterator, you can\nuse the ``iter`` method:\n\n.. code-block:: python\n\n    for pgbar.pgbar in Bar('Processing').iter(it):\n        # Do some work\n\nProgress bars are very customizable, you can change their width, their fill\ncharacter, their suffix and more:\n\n.. code-block:: python\n\n    bar = Bar('Loading', fill='@', suffix='%(percent)d%%')\n\nThis will produce a bar like the following: ::\n\n    Loading |@@@@@@@@@@@@@                   | 42%\n\nYou can use a number of template arguments in ``message`` and ``suffix``:\n\n==========  ================================\nName        Value\n==========  ================================\nindex       current value\nmax         maximum value\nremaining   max - index\nprogress    index / max\npercent     progress * 100\navg         simple moving average time per item (in seconds)\nelapsed     elapsed time in seconds\nelapsed_td  elapsed as a timedelta (useful for printing as a string)\neta         avg * remaining\neta_td      eta as a timedelta (useful for printing as a string)\n==========  ================================\n\nInstead of passing all configuration options on instatiation, you can create\nyour custom subclass:\n\n.. code-block:: python\n\n    class FancyBar(Bar):\n        message = 'Loading'\n        fill = '*'\n        suffix = '%(percent).1f%% - %(eta)ds'\n\nYou can also override any of the arguments or create your own:\n\n.. code-block:: python\n\n    class SlowBar(Bar):\n        suffix = '%(remaining_hours)d hours remaining'\n        @property\n        def remaining_hours(self):\n            return self.eta // 3600\n\n\nSpinners\n========\n\nFor actions with an unknown number of steps you can use a spinner:\n\n.. code-block:: python\n\n    from pgbar.pgspinner import Spinner\n\n    spinner = Spinner('Loading ')\n    while state != 'FINISHED':\n        # Do some work\n        spinner.next()\n\nThere are 5 predefined spinners:\n\n- ``Spinner``\n- ``PieSpinner``\n- ``MoonSpinner``\n- ``LineSpinner``\n- ``PixelSpinner``\n\nInstallation\n============\n\nDownload from PyPi\n\n.. code-block:: shell\n\n    pip install pgbar\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/sajeeshen/python-terminal-progress", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pgbar", "package_url": "https://pypi.org/project/pgbar/", "platform": "", "project_url": "https://pypi.org/project/pgbar/", "project_urls": {"Homepage": "https://gitlab.com/sajeeshen/python-terminal-progress"}, "release_url": "https://pypi.org/project/pgbar/0.3/", "requires_dist": null, "requires_python": "", "summary": "Terminal Progress Bar", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Easy progress reporting for Python</h1>\n<h2>Bars</h2>\n<p>There are 7 progress bars to choose from:</p>\n<ul>\n<li><code>Bar</code></li>\n<li><code>ChargingBar</code></li>\n<li><code>FillingSquaresBar</code></li>\n<li><code>FillingCirclesBar</code></li>\n<li><code>IncrementalBar</code></li>\n<li><code>PixelBar</code></li>\n<li><code>ShadyBar</code></li>\n</ul>\n<p>To use them, just call <code>next</code> to advance and <code>finish</code> to finish:</p>\n<p>.. code-block:: python</p>\n<pre><code>from pgbar.pgbar import Bar\n\nbar = Bar('Processing', max=20)\nfor i in range(20):\n    # Do some work\n    bar.next()\nbar.finish()\n</code></pre>\n<p>or use any bar of this class as a context manager:</p>\n<p>.. code-block:: python</p>\n<pre><code>from pgbar.pgbar import Bar\n\nwith Bar('Processing', max=20) as bar:\n    for i in range(20):\n        # Do some work\n        bar.next()\n</code></pre>\n<p>The result will be a bar like the following: ::</p>\n<pre><code>Processing |#############                   | 42/100\n</code></pre>\n<p>To simplify the common case where the work is done in an iterator, you can\nuse the <code>iter</code> method:</p>\n<p>.. code-block:: python</p>\n<pre><code>for pgbar.pgbar in Bar('Processing').iter(it):\n    # Do some work\n</code></pre>\n<p>Progress bars are very customizable, you can change their width, their fill\ncharacter, their suffix and more:</p>\n<p>.. code-block:: python</p>\n<pre><code>bar = Bar('Loading', fill='@', suffix='%(percent)d%%')\n</code></pre>\n<p>This will produce a bar like the following: ::</p>\n<pre><code>Loading |@@@@@@@@@@@@@                   | 42%\n</code></pre>\n<p>You can use a number of template arguments in <code>message</code> and <code>suffix</code>:</p>\n<p>==========  ================================\nName        Value\n==========  ================================\nindex       current value\nmax         maximum value\nremaining   max - index\nprogress    index / max\npercent     progress * 100\navg         simple moving average time per item (in seconds)\nelapsed     elapsed time in seconds\nelapsed_td  elapsed as a timedelta (useful for printing as a string)\neta         avg * remaining\neta_td      eta as a timedelta (useful for printing as a string)\n==========  ================================</p>\n<p>Instead of passing all configuration options on instatiation, you can create\nyour custom subclass:</p>\n<p>.. code-block:: python</p>\n<pre><code>class FancyBar(Bar):\n    message = 'Loading'\n    fill = '*'\n    suffix = '%(percent).1f%% - %(eta)ds'\n</code></pre>\n<p>You can also override any of the arguments or create your own:</p>\n<p>.. code-block:: python</p>\n<pre><code>class SlowBar(Bar):\n    suffix = '%(remaining_hours)d hours remaining'\n    @property\n    def remaining_hours(self):\n        return self.eta // 3600\n</code></pre>\n<h1>Spinners</h1>\n<p>For actions with an unknown number of steps you can use a spinner:</p>\n<p>.. code-block:: python</p>\n<pre><code>from pgbar.pgspinner import Spinner\n\nspinner = Spinner('Loading ')\nwhile state != 'FINISHED':\n    # Do some work\n    spinner.next()\n</code></pre>\n<p>There are 5 predefined spinners:</p>\n<ul>\n<li><code>Spinner</code></li>\n<li><code>PieSpinner</code></li>\n<li><code>MoonSpinner</code></li>\n<li><code>LineSpinner</code></li>\n<li><code>PixelSpinner</code></li>\n</ul>\n<h1>Installation</h1>\n<p>Download from PyPi</p>\n<p>.. code-block:: shell</p>\n<pre><code>pip install pgbar\n</code></pre>\n\n          </div>"}, "last_serial": 4846130, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a8368aba83c32f06793c192175183817", "sha256": "2e079fe3b71e28a40cd11b4e425e21d2bb9c5d4eedab17405043808693402e69"}, "downloads": -1, "filename": "pgbar-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a8368aba83c32f06793c192175183817", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7944, "upload_time": "2019-02-20T15:25:23", "upload_time_iso_8601": "2019-02-20T15:25:23.322040Z", "url": "https://files.pythonhosted.org/packages/40/ca/af9535f045f20dc26288023c0d653c47c07cb03163f9eef3dd5514691d76/pgbar-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "498a07b240f3f1941852e21e5b7bb21d", "sha256": "61c53317f61b4fc1b65de879198f1e352038e33ac31d591132523f27c01bb85f"}, "downloads": -1, "filename": "pgbar-0.1.tar.gz", "has_sig": false, "md5_digest": "498a07b240f3f1941852e21e5b7bb21d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5156, "upload_time": "2019-02-20T15:25:27", "upload_time_iso_8601": "2019-02-20T15:25:27.389330Z", "url": "https://files.pythonhosted.org/packages/44/a1/12ecc0f0a480b42a3c9dad2b64ebc2e447257f64c9d6f275abba54fb6e99/pgbar-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "eb2f71234c0a745f2d25eb1c40b563bd", "sha256": "7d3c05c412846af6bae1d2629604c793ad16e67b60e406d830b198baf8a3ed91"}, "downloads": -1, "filename": "pgbar-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "eb2f71234c0a745f2d25eb1c40b563bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7941, "upload_time": "2019-02-20T15:27:11", "upload_time_iso_8601": "2019-02-20T15:27:11.744897Z", "url": "https://files.pythonhosted.org/packages/a0/b2/ed4eae16b746596c03edc7375d227879dacd4e807fe1fcb772c7e527a177/pgbar-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c6b15d93df07c94598ce6f7d9e2beab", "sha256": "0032b354f668afa453b18e8f95f6db996b981f5b1d8c2b5ee6555aaba4758d76"}, "downloads": -1, "filename": "pgbar-0.2.tar.gz", "has_sig": false, "md5_digest": "9c6b15d93df07c94598ce6f7d9e2beab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5144, "upload_time": "2019-02-20T15:27:13", "upload_time_iso_8601": "2019-02-20T15:27:13.962785Z", "url": "https://files.pythonhosted.org/packages/16/20/bc58fdbceeda2b325d5c67796d16b9442ab92177af518cfebd51a0868f6d/pgbar-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "4b4c35adcb79a8842c7445632be3eb50", "sha256": "d8ad05b4909c6ee325d14de4a40f700a122f498eb5e7c654c82a296b24df11bb"}, "downloads": -1, "filename": "pgbar-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4b4c35adcb79a8842c7445632be3eb50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7941, "upload_time": "2019-02-20T15:28:47", "upload_time_iso_8601": "2019-02-20T15:28:47.388703Z", "url": "https://files.pythonhosted.org/packages/f6/99/f8a568ee7f3fbe87fcd59f1236fcb7933cd780030112446ef6b01d86916d/pgbar-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "564fe9959020c7cce4a80404b49a23f6", "sha256": "9655f19f1eb3d69ff8dcddd261cf61dd5078fd27d624cdfffb07b61bbe4b265a"}, "downloads": -1, "filename": "pgbar-0.3.tar.gz", "has_sig": false, "md5_digest": "564fe9959020c7cce4a80404b49a23f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5148, "upload_time": "2019-02-20T15:28:50", "upload_time_iso_8601": "2019-02-20T15:28:50.665455Z", "url": "https://files.pythonhosted.org/packages/39/a5/38636277e6f2596e508f463dd4406a0f19960f639118d2dd8929f0b95e01/pgbar-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b4c35adcb79a8842c7445632be3eb50", "sha256": "d8ad05b4909c6ee325d14de4a40f700a122f498eb5e7c654c82a296b24df11bb"}, "downloads": -1, "filename": "pgbar-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4b4c35adcb79a8842c7445632be3eb50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7941, "upload_time": "2019-02-20T15:28:47", "upload_time_iso_8601": "2019-02-20T15:28:47.388703Z", "url": "https://files.pythonhosted.org/packages/f6/99/f8a568ee7f3fbe87fcd59f1236fcb7933cd780030112446ef6b01d86916d/pgbar-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "564fe9959020c7cce4a80404b49a23f6", "sha256": "9655f19f1eb3d69ff8dcddd261cf61dd5078fd27d624cdfffb07b61bbe4b265a"}, "downloads": -1, "filename": "pgbar-0.3.tar.gz", "has_sig": false, "md5_digest": "564fe9959020c7cce4a80404b49a23f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5148, "upload_time": "2019-02-20T15:28:50", "upload_time_iso_8601": "2019-02-20T15:28:50.665455Z", "url": "https://files.pythonhosted.org/packages/39/a5/38636277e6f2596e508f463dd4406a0f19960f639118d2dd8929f0b95e01/pgbar-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:52 2020"}