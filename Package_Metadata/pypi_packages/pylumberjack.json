{"info": {"author": "Santosh Venkatraman", "author_email": "santosh.venk@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Topic :: Utilities"], "description": "Lumberjack - Python Logging for Humans\u2122\n#######################################\n\nWhat is this?\n=============\n\nThis project is about creating a custom logger with a few arguments such as logger name and file path (if FileHandler is used).\n\n\nWhy was this made?\n==================\n\nIn the python projects I have worked with (work or personal projects), I have always had to create a logging instance with a FileHandler, provide a logging format, provide logging file name (and create directories if need be), which is extremely frustrating, at the least. So I decided to encapsulate the pain points regarding the aforementioned.\n\n\n\nHow do I use this?\n==================\n\n- Importing package\n\n.. code-block:: python\n\n    from lumberjack import Lumberjack\n\n    # outputs logs in the console.\n    logger = Lumberjack(name=\"lumberjack\")\n\n    # outputs logs in the filename 'logs/lumberjack_<timestamp>.log'\n    logger = Lumberjack(name=\"lumberjack\", file_name=\"logs/lumberjack.log\")\n\n\n- Calling ``.info(...)``\n\n.. code-block:: python\n\n    logger.info('Live long and prosper, hoomans')\n\n    # Log info output\n    2017-02-23 20:31:41,932 - lumberjack - INFO - Live long and prosper, hoomans!\n\n- Calling ``.debug(...)``\n.. code-block:: python\n\n    logger.debug('NOOOOOOOOOOOOOOOOO!')\n\n    # Log debug output\n    2017-02-24 04:08:11,265 - lumberjack - DEBUG - NOOOOOOOOOOOOOOOOO!\n\n- Calling ``.log(...)``\n.. code-block:: python\n\n    logger.log(50, 'This is DEFCON level 50')\n\n    # Log output\n    2017-02-24 04:33:22,869 - lumberjack - CRITICAL - This is DEFCON level 50\n\n    logger.log(500, 'Deez notes were demonetized in India')\n\n    # Log output\n    2017-02-24 04:33:48,558 - lumberjack - Level 500 - Deez notes were demonetized in India\n\n    logger.log('This is DEFCON level 999?')\n\n    # Log output\n    2017-02-24 04:33:13,615 - lumberjack - Level 999 - This is DEFCON level 999?\n\n\nCan I contribute to this?\n=========================\n\nSure! Create an issue in the repo if it's not already present. Then fork this repo, branch off from `master`, add a feature / push a fix and raise a pull-request. I'll merge it once I deem it useful.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thesantosh/lumberjack", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pylumberjack", "package_url": "https://pypi.org/project/pylumberjack/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pylumberjack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/thesantosh/lumberjack"}, "release_url": "https://pypi.org/project/pylumberjack/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Python Logging for Humans", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Lumberjack - Python Logging for Humans\u2122<br>#######################################<br><br>What is this?<br>=============<br><br>This project is about creating a custom logger with a few arguments such as logger name and file path (if FileHandler is used).<br><br><br>Why was this made?<br>==================<br><br>In the python projects I have worked with (work or personal projects), I have always had to create a logging instance with a FileHandler, provide a logging format, provide logging file name (and create directories if need be), which is extremely frustrating, at the least. So I decided to encapsulate the pain points regarding the aforementioned.<br><br><br><br>How do I use this?<br>==================<br><br>- Importing package<br><br>.. code-block:: python<br><br>    from lumberjack import Lumberjack<br><br>    # outputs logs in the console.<br>    logger = Lumberjack(name=\"lumberjack\")<br><br>    # outputs logs in the filename 'logs/lumberjack_&lt;timestamp&gt;.log'<br>    logger = Lumberjack(name=\"lumberjack\", file_name=\"logs/lumberjack.log\")<br><br><br>- Calling ``.info(...)``<br><br>.. code-block:: python<br><br>    logger.info('Live long and prosper, hoomans')<br><br>    # Log info output<br>    2017-02-23 20:31:41,932 - lumberjack - INFO - Live long and prosper, hoomans!<br><br>- Calling ``.debug(...)``<br>.. code-block:: python<br><br>    logger.debug('NOOOOOOOOOOOOOOOOO!')<br><br>    # Log debug output<br>    2017-02-24 04:08:11,265 - lumberjack - DEBUG - NOOOOOOOOOOOOOOOOO!<br><br>- Calling ``.log(...)``<br>.. code-block:: python<br><br>    logger.log(50, 'This is DEFCON level 50')<br><br>    # Log output<br>    2017-02-24 04:33:22,869 - lumberjack - CRITICAL - This is DEFCON level 50<br><br>    logger.log(500, 'Deez notes were demonetized in India')<br><br>    # Log output<br>    2017-02-24 04:33:48,558 - lumberjack - Level 500 - Deez notes were demonetized in India<br><br>    logger.log('This is DEFCON level 999?')<br><br>    # Log output<br>    2017-02-24 04:33:13,615 - lumberjack - Level 999 - This is DEFCON level 999?<br><br><br>Can I contribute to this?<br>=========================<br><br>Sure! Create an issue in the repo if it's not already present. Then fork this repo, branch off from `master`, add a feature / push a fix and raise a pull-request. I'll merge it once I deem it useful.\n          </div>"}, "last_serial": 2664985, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "27963145afbd7758d3bbc3b968c701a8", "sha256": "8113700264a9b34bc931f37aa35b6f5c108be6a62cd8223ffedc9dcc5ac10d5f"}, "downloads": -1, "filename": "pylumberjack-0.0.1.tar.gz", "has_sig": false, "md5_digest": "27963145afbd7758d3bbc3b968c701a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2925, "upload_time": "2017-02-24T05:42:11", "upload_time_iso_8601": "2017-02-24T05:42:11.968405Z", "url": "https://files.pythonhosted.org/packages/44/61/a15b117288931d3e1910ce53cf4e353cc9e175dcaa2370589f7aa77d896d/pylumberjack-0.0.1.tar.gz", "yanked": false}], "0.0.2": []}, "urls": [], "timestamp": "Fri May  8 03:02:41 2020"}