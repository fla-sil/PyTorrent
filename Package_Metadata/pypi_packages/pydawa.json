{"info": {"author": "Dan\u00edel \u00d6rn \u00c1rnason", "author_email": "danielarnason85@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8"], "description": "PyDawa\n======\nEn simple API wrapper omkring Danmarks Adressers Web API (DAWA).\n\nForm\u00e5let med dette modul er at give nem adgang til DAWA i Python. Grunden til, at jeg begyndte at arbejde p\u00e5 dette modul er, at jeg havde skrevet et par scripts i python, der brugte API'et, men der var ingen \"nem\" adgang til det. Plus, jeg var nysgerrig over, om jeg kunne skrive et modul og uploade til pypi.\n\nDet her projekt er et \"work in progress\", s\u00e5 jeg kommer til at tilf\u00f8je funktionalitet, n\u00e5r jeg har brug for den. Jeg h\u00e5ber, at folk har lyst til at hj\u00e6lpe med det.\n\nAfh\u00e6ngigheder\n* Requests\n\nInstallation\n----\nInstaller med pip:\n\n```$ pip install pydawa```\n\nBrug\n-----\n\nIndtil videre, best\u00e5r modulet kun af tre classer:\n\n1. Adressesoeg\n2. Adresseopslag\n3. Adressevasker\n\n### Adressesoeg()\nS\u00f8g efter en adresse med vejnavn, husnr og postnummer.\n\n```python\nimport pydawa\n\nadresse = pydawa.Adressesoeg(vejnavn='Dronning Dagmars vej', husnr='200', postnr='3650')\nresponse = adresse.info()\n```\n`info()` metoden henter data fra dawa api'et og returnerer en dictionary med respons.\n\nMan kan ogs\u00e5 s\u00f8ge med en tekststring.\n```python\nimport pydawa\n\nadresse = pydawa.Adressesoeg(q='Dronning Dagmars Vej 200, 3650 \u00d8lstykke')\nresponse = adresse.info()\n```\n\n### Adresseopslag\nS\u00f8g efter en adresse med adressens unikke id.\n\n```python\nimport pydawa\n\nadresse = pydawa.Adresseopslag(id=id)\nresponse = adresse.info()\n```\n`info()` metoden henter data fra dawa api'et og returnerer en dictionary med respons.\n\n### Adressevasker\nDatavask af adressebetegnelse. Modtager en adressebetegnelse og returnerer en eller flere adresser, der bedst matcher.\n\n```python\nimport pydawa\n\nadresse = pydawa.Adressevasker(betegnelse=adressebetegnelse)\nresponse = adresse.info()\n```\n\n### Koordinater for adresser\nMan kan hente koordinater for en given adresse ved at bruge _get_koordinater_ metoden fra _adresse_ variablen i examplerne ovenfor.\n\n```python\nimport pydawa\n\nadresse = pydawa.Adresseopslag(id=id)\nresponse = adresse.info()\n\nkoordinater = adresse.get_koordinater(response[0])\n```\nDen metode tager et json object. Indtil videre se returner b\u00e5de _Adressesoeg_ og _Adresseopslag_ en liste, s\u00e5 derfor bruger man _response[0]_ som input. \nMan kan kun hente koordinater fra _Adressesoeg_ og _ Adresseopslag_, fordi _Adressevasker_ returnerer ikke koordinater.\n\n### Reverse geokodning\nHvis man har koordinater og gerne vil finde den n\u00e6rmeste adresse.\n\n```python\nimport pydawa\n\nkoordinater = (12.18, 55.78)\n\nadresse = pydawa.Reverse(koordinater=koordinater)\nresponse = adresse.info()\n```\n\nGeokoder\n=========\nHvis man har en csv eller xlsx fil, som indeholder adresser, som skal geokodes, s\u00e5 kan man bruge den her. Peg p\u00e5 filen og gem resultatet enten som en Pandas dataframe, hvis du skal bearbejde data mere, eller i en fil i samme mappe.\n\n```python\nimport pydawa\n\ngeokoder = pydawa.Geokoder('c:/users/brugernavn/adresser.csv')\n\n# Gem data i en dataframe\ndf = geokoder.geokod_file(cols=['adresse', 'postnr', 'By'])\n\n# Gem data i en fil\ngeokoder.geokod_file(save=True, cols=['adresse', 'postnr', 'By'])\n\n```\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/danielarnason/pydawa.git", "keywords": "", "license": "GPL-3.0-or-later", "maintainer": "", "maintainer_email": "", "name": "pydawa", "package_url": "https://pypi.org/project/pydawa/", "platform": "", "project_url": "https://pypi.org/project/pydawa/", "project_urls": {"Homepage": "https://github.com/danielarnason/pydawa.git", "Repository": "https://github.com/danielarnason/pydawa.git"}, "release_url": "https://pypi.org/project/pydawa/0.5.1/", "requires_dist": ["requests (>=2.23.0,<3.0.0)", "pandas (>=1.0.3,<2.0.0)", "xlrd (>=1.2.0,<2.0.0)", "openpyxl (>=3.0.3,<4.0.0)"], "requires_python": ">=3.8,<4.0", "summary": "En API wrapper omkring Danmarks Adressers Web API", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyDawa</h1>\n<p>En simple API wrapper omkring Danmarks Adressers Web API (DAWA).</p>\n<p>Form\u00e5let med dette modul er at give nem adgang til DAWA i Python. Grunden til, at jeg begyndte at arbejde p\u00e5 dette modul er, at jeg havde skrevet et par scripts i python, der brugte API'et, men der var ingen \"nem\" adgang til det. Plus, jeg var nysgerrig over, om jeg kunne skrive et modul og uploade til pypi.</p>\n<p>Det her projekt er et \"work in progress\", s\u00e5 jeg kommer til at tilf\u00f8je funktionalitet, n\u00e5r jeg har brug for den. Jeg h\u00e5ber, at folk har lyst til at hj\u00e6lpe med det.</p>\n<p>Afh\u00e6ngigheder</p>\n<ul>\n<li>Requests</li>\n</ul>\n<h2>Installation</h2>\n<p>Installer med pip:</p>\n<p><code>$ pip install pydawa</code></p>\n<h2>Brug</h2>\n<p>Indtil videre, best\u00e5r modulet kun af tre classer:</p>\n<ol>\n<li>Adressesoeg</li>\n<li>Adresseopslag</li>\n<li>Adressevasker</li>\n</ol>\n<h3>Adressesoeg()</h3>\n<p>S\u00f8g efter en adresse med vejnavn, husnr og postnummer.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">adresse</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Adressesoeg</span><span class=\"p\">(</span><span class=\"n\">vejnavn</span><span class=\"o\">=</span><span class=\"s1\">'Dronning Dagmars vej'</span><span class=\"p\">,</span> <span class=\"n\">husnr</span><span class=\"o\">=</span><span class=\"s1\">'200'</span><span class=\"p\">,</span> <span class=\"n\">postnr</span><span class=\"o\">=</span><span class=\"s1\">'3650'</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n<p><code>info()</code> metoden henter data fra dawa api'et og returnerer en dictionary med respons.</p>\n<p>Man kan ogs\u00e5 s\u00f8ge med en tekststring.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">adresse</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Adressesoeg</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"o\">=</span><span class=\"s1\">'Dronning Dagmars Vej 200, 3650 \u00d8lstykke'</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n<h3>Adresseopslag</h3>\n<p>S\u00f8g efter en adresse med adressens unikke id.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">adresse</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Adresseopslag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n<p><code>info()</code> metoden henter data fra dawa api'et og returnerer en dictionary med respons.</p>\n<h3>Adressevasker</h3>\n<p>Datavask af adressebetegnelse. Modtager en adressebetegnelse og returnerer en eller flere adresser, der bedst matcher.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">adresse</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Adressevasker</span><span class=\"p\">(</span><span class=\"n\">betegnelse</span><span class=\"o\">=</span><span class=\"n\">adressebetegnelse</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n<h3>Koordinater for adresser</h3>\n<p>Man kan hente koordinater for en given adresse ved at bruge <em>get_koordinater</em> metoden fra <em>adresse</em> variablen i examplerne ovenfor.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">adresse</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Adresseopslag</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"nb\">id</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n\n<span class=\"n\">koordinater</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">get_koordinater</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<p>Den metode tager et json object. Indtil videre se returner b\u00e5de <em>Adressesoeg</em> og <em>Adresseopslag</em> en liste, s\u00e5 derfor bruger man <em>response[0]</em> som input.\nMan kan kun hente koordinater fra <em>Adressesoeg</em> og _ Adresseopslag_, fordi <em>Adressevasker</em> returnerer ikke koordinater.</p>\n<h3>Reverse geokodning</h3>\n<p>Hvis man har koordinater og gerne vil finde den n\u00e6rmeste adresse.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">koordinater</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">12.18</span><span class=\"p\">,</span> <span class=\"mf\">55.78</span><span class=\"p\">)</span>\n\n<span class=\"n\">adresse</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Reverse</span><span class=\"p\">(</span><span class=\"n\">koordinater</span><span class=\"o\">=</span><span class=\"n\">koordinater</span><span class=\"p\">)</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">adresse</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">()</span>\n</pre>\n<h1>Geokoder</h1>\n<p>Hvis man har en csv eller xlsx fil, som indeholder adresser, som skal geokodes, s\u00e5 kan man bruge den her. Peg p\u00e5 filen og gem resultatet enten som en Pandas dataframe, hvis du skal bearbejde data mere, eller i en fil i samme mappe.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pydawa</span>\n\n<span class=\"n\">geokoder</span> <span class=\"o\">=</span> <span class=\"n\">pydawa</span><span class=\"o\">.</span><span class=\"n\">Geokoder</span><span class=\"p\">(</span><span class=\"s1\">'c:/users/brugernavn/adresser.csv'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Gem data i en dataframe</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">geokoder</span><span class=\"o\">.</span><span class=\"n\">geokod_file</span><span class=\"p\">(</span><span class=\"n\">cols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'adresse'</span><span class=\"p\">,</span> <span class=\"s1\">'postnr'</span><span class=\"p\">,</span> <span class=\"s1\">'By'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Gem data i en fil</span>\n<span class=\"n\">geokoder</span><span class=\"o\">.</span><span class=\"n\">geokod_file</span><span class=\"p\">(</span><span class=\"n\">save</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">cols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'adresse'</span><span class=\"p\">,</span> <span class=\"s1\">'postnr'</span><span class=\"p\">,</span> <span class=\"s1\">'By'</span><span class=\"p\">])</span>\n</pre>\n\n          </div>"}, "last_serial": 6918634, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4f21d5569c0c6a877a7ce6874d1a8c10", "sha256": "d356de1fbaa0b35a1d00134baef372abfad5a3fa0bf9fac9652aa2b08aafc294"}, "downloads": -1, "filename": "pydawa-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4f21d5569c0c6a877a7ce6874d1a8c10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2875, "upload_time": "2018-10-08T19:51:35", "upload_time_iso_8601": "2018-10-08T19:51:35.468477Z", "url": "https://files.pythonhosted.org/packages/c7/ae/dc01b13b95be70758ed4e63a78ba073db237eef6d0cf952aa0f91ebea975/pydawa-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2ecf30033c2d509da8a4dd839c1cf0b1", "sha256": "7d5ec972ef79311350ba951624442c2fe281afacf6106e390ff0a4b2dd115177"}, "downloads": -1, "filename": "pydawa-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2ecf30033c2d509da8a4dd839c1cf0b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2888, "upload_time": "2018-11-19T21:19:23", "upload_time_iso_8601": "2018-11-19T21:19:23.126090Z", "url": "https://files.pythonhosted.org/packages/c5/3c/fd49dd6ada821af7855bd81656aa39ac48460ba35a62226f7ade6c690b8b/pydawa-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bf54d2baf3f65463a387494791d714c5", "sha256": "5967f8b4926fa84140a996eee59fb6ebb6a91ad6bf1ad1d579d367fc250a77db"}, "downloads": -1, "filename": "pydawa-0.1.2.tar.gz", "has_sig": false, "md5_digest": "bf54d2baf3f65463a387494791d714c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2872, "upload_time": "2019-01-21T11:56:18", "upload_time_iso_8601": "2019-01-21T11:56:18.497450Z", "url": "https://files.pythonhosted.org/packages/da/57/98d7c0c0e063c8731ed74711a78e1a4117e1af60568141afd960d20823b8/pydawa-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "29b4191dbaaee978e5eccfaac7e8c434", "sha256": "c8d79affb5125d13ec193203cee07344395f6a370085715d4a1024c035ef2039"}, "downloads": -1, "filename": "pydawa-0.1.3.tar.gz", "has_sig": false, "md5_digest": "29b4191dbaaee978e5eccfaac7e8c434", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3062, "upload_time": "2019-01-29T12:38:40", "upload_time_iso_8601": "2019-01-29T12:38:40.412326Z", "url": "https://files.pythonhosted.org/packages/a1/9e/d7ac412ad6810e883bf2181913a5acc799ce7f3fa148854c847ba547f878/pydawa-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c77f52ed8eda6cad23a479f04a82db8b", "sha256": "2ba72d9e9dbb99d361e7bd16aa72bb7bd6c67d9d5776e93d1540cbb19d20e5fa"}, "downloads": -1, "filename": "pydawa-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c77f52ed8eda6cad23a479f04a82db8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3404, "upload_time": "2019-02-07T10:26:35", "upload_time_iso_8601": "2019-02-07T10:26:35.918006Z", "url": "https://files.pythonhosted.org/packages/8d/f1/a0cb6002d0978fbd0a2147579cbbdce57f5a22d7956ffe2446191b5d35b8/pydawa-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "497f3c8290c4d984d503136671c18e0e", "sha256": "79cb34d78c7a822d068a82fecf3846260fcc23d694f9ff65a9b94994c3a51a3b"}, "downloads": -1, "filename": "pydawa-0.3.0.tar.gz", "has_sig": false, "md5_digest": "497f3c8290c4d984d503136671c18e0e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3505, "upload_time": "2019-02-15T10:55:57", "upload_time_iso_8601": "2019-02-15T10:55:57.707703Z", "url": "https://files.pythonhosted.org/packages/d5/7d/d67376bb92034b8f1d9d746958df1969fd67539dd051a09e983902d763de/pydawa-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a9e15b42713b7b2d2af2bd0464becb95", "sha256": "a6e1e7905a46e30ff58a97516f993db05fefb326aee7f88635a70e260210d013"}, "downloads": -1, "filename": "pydawa-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a9e15b42713b7b2d2af2bd0464becb95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3779, "upload_time": "2019-03-04T12:11:24", "upload_time_iso_8601": "2019-03-04T12:11:24.376741Z", "url": "https://files.pythonhosted.org/packages/c6/69/85714d824f5a225dba6223617706d2f3d051186ca1d14ee96560e081a73e/pydawa-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b5d7bf34707a3f2426f00d0ad72217df", "sha256": "560c296c487bddef3b5bfff8e54b92f678e0bafd478fa555c6a1d609913c35c6"}, "downloads": -1, "filename": "pydawa-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b5d7bf34707a3f2426f00d0ad72217df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5106, "upload_time": "2019-04-26T11:20:01", "upload_time_iso_8601": "2019-04-26T11:20:01.654778Z", "url": "https://files.pythonhosted.org/packages/1b/ff/521620968f98dc9374b3144e64aa4822c8d1b446c7d8225d1ecb66500b3b/pydawa-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6b3fb973b022a9f8c44796f53b492b29", "sha256": "db67bcbcc0ddee29c9dfd78e7ea4bbb2c7f0b9f64469f0e35066d26870e1ed52"}, "downloads": -1, "filename": "pydawa-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6b3fb973b022a9f8c44796f53b492b29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5412, "upload_time": "2019-05-03T08:18:38", "upload_time_iso_8601": "2019-05-03T08:18:38.093925Z", "url": "https://files.pythonhosted.org/packages/df/5d/d1686778808fdae1a8081f37a1453ec46fcba9a86f39b7a9d23df29d0172/pydawa-0.4.1.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "eabe4126322433100a456bd6760ca112", "sha256": "bd7ed12ccd66fe1094fb5f7084badbeb8a3809debe35adff3a9f4dcca2673fbe"}, "downloads": -1, "filename": "pydawa-0.4.3.tar.gz", "has_sig": false, "md5_digest": "eabe4126322433100a456bd6760ca112", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5460, "upload_time": "2019-05-03T10:50:13", "upload_time_iso_8601": "2019-05-03T10:50:13.325753Z", "url": "https://files.pythonhosted.org/packages/35/4a/b26f57c952f0fc920c28b709d363922376ed85ec87c1267f2e22099ce8d0/pydawa-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "fb4b36aa6febc37af9e014684ac41771", "sha256": "3c9f1b6d380e9492ba0b008bc48353923b0c72b644d6fede62af33a7d85616b1"}, "downloads": -1, "filename": "pydawa-0.4.4.tar.gz", "has_sig": false, "md5_digest": "fb4b36aa6febc37af9e014684ac41771", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5473, "upload_time": "2019-05-03T11:08:39", "upload_time_iso_8601": "2019-05-03T11:08:39.497703Z", "url": "https://files.pythonhosted.org/packages/01/4c/3271005dfdbab5716aa00f9a2e3080027c9402239256ea329c050c7430bc/pydawa-0.4.4.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "481f9c176e65ad3e295e00f6627b6287", "sha256": "2be3dd397ffc4723ab1d1fd015630406880e749c97d073e0c3efd89f1b485249"}, "downloads": -1, "filename": "pydawa-0.4.6.tar.gz", "has_sig": false, "md5_digest": "481f9c176e65ad3e295e00f6627b6287", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5478, "upload_time": "2019-05-03T11:35:44", "upload_time_iso_8601": "2019-05-03T11:35:44.131269Z", "url": "https://files.pythonhosted.org/packages/3d/5c/c6c1b78300c33998f2431169158c1bb58d74b09342f7a639dfd98ce0b8c6/pydawa-0.4.6.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "aee43e350745debf191f75c41accfd2c", "sha256": "5171dd4ba717a4b1804a5fbf90f81676a4669e44837ced2f4578a49298b2d000"}, "downloads": -1, "filename": "pydawa-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aee43e350745debf191f75c41accfd2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5010, "upload_time": "2020-03-31T05:47:06", "upload_time_iso_8601": "2020-03-31T05:47:06.194636Z", "url": "https://files.pythonhosted.org/packages/31/b6/c9848989549d9ad3a198a7f03a3a724727cfb768d713bae1e8d9bc4ebdac/pydawa-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae146678392ba9b7b9e4d46a12f975af", "sha256": "b5619e565aa3c6ae21f6de25be8d7818ca32eb111abb095745b078c7baaf6372"}, "downloads": -1, "filename": "pydawa-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ae146678392ba9b7b9e4d46a12f975af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5042, "upload_time": "2020-03-31T05:47:07", "upload_time_iso_8601": "2020-03-31T05:47:07.705034Z", "url": "https://files.pythonhosted.org/packages/fd/67/c3701e992e695aee7124e1bd44cad23a34ffd642c963810cfbe16c5c2c22/pydawa-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "9904acf36e4eaf8add01dce220e8f496", "sha256": "e841f8b083f15152e03a0dee7c782b84de46d344b16dc4c3c0e3f3232b2bc353"}, "downloads": -1, "filename": "pydawa-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9904acf36e4eaf8add01dce220e8f496", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5027, "upload_time": "2020-03-31T08:40:04", "upload_time_iso_8601": "2020-03-31T08:40:04.736880Z", "url": "https://files.pythonhosted.org/packages/e5/36/e1ff522f87f2dbb607e5a2924a741914ffaa7e3a1aa2fa21d14414f522ab/pydawa-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c877629e5bb3c1b39d64fa3a34735cac", "sha256": "c8745d2cab2429b34adbe70fa84b8cf71eb3741a04b7fce9e8735cc917cc52af"}, "downloads": -1, "filename": "pydawa-0.5.1.tar.gz", "has_sig": false, "md5_digest": "c877629e5bb3c1b39d64fa3a34735cac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5043, "upload_time": "2020-03-31T08:40:05", "upload_time_iso_8601": "2020-03-31T08:40:05.928451Z", "url": "https://files.pythonhosted.org/packages/a0/d5/db2b257cf1278679f17e66d988ba9df8cf1cfe905932a2555db667fcbf93/pydawa-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9904acf36e4eaf8add01dce220e8f496", "sha256": "e841f8b083f15152e03a0dee7c782b84de46d344b16dc4c3c0e3f3232b2bc353"}, "downloads": -1, "filename": "pydawa-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9904acf36e4eaf8add01dce220e8f496", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8,<4.0", "size": 5027, "upload_time": "2020-03-31T08:40:04", "upload_time_iso_8601": "2020-03-31T08:40:04.736880Z", "url": "https://files.pythonhosted.org/packages/e5/36/e1ff522f87f2dbb607e5a2924a741914ffaa7e3a1aa2fa21d14414f522ab/pydawa-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c877629e5bb3c1b39d64fa3a34735cac", "sha256": "c8745d2cab2429b34adbe70fa84b8cf71eb3741a04b7fce9e8735cc917cc52af"}, "downloads": -1, "filename": "pydawa-0.5.1.tar.gz", "has_sig": false, "md5_digest": "c877629e5bb3c1b39d64fa3a34735cac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8,<4.0", "size": 5043, "upload_time": "2020-03-31T08:40:05", "upload_time_iso_8601": "2020-03-31T08:40:05.928451Z", "url": "https://files.pythonhosted.org/packages/a0/d5/db2b257cf1278679f17e66d988ba9df8cf1cfe905932a2555db667fcbf93/pydawa-0.5.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:19 2020"}