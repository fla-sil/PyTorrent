{"info": {"author": "Ganggas95", "author_email": "subhannizar25@amail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Database", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Flask2Neo4J\nExtension Flask for integration with neo4j graph database\n\n## Installation\n\nUsing pip:\n\n```\n$ pip install flask2neo4j\n```\n\n## Usage\n\nBasic Step to usage this extension:\n\n1. Create Flask app instance:\n\n```\nimport bcrypt\nfrom py2neo import ogm\nfrom flask import Flask, request\nfrom flask2neo4j import Flask2Neo4J\n\n\napp = Flask(__name__)\n\n```\n\n2. Add NEO4J Config and Initialization Flask2Neo4j Extensions:\n```\n\napp.config[\"NEO4J_USERNAME\"] = \"neo4j\"\napp.config[\"NEO4J_PASSWORD\"] = \"neo4j\"\napp.config[\"NEO4J_URI\"] = \"bolt://localhost:7687\"\n\nflask2neo = Flask2Neo4J()\n\nflask2neo.init_app(app)\n\n```\n\n3. Create Model using Graph Object if using GraphObject\n\n```\nclass Users(ogm.GraphObject):\n    __primarykey__ = \"id\"\n\n    id = ogm.Property()\n    username = ogm.Property(\"username\")\n    password = ogm.Property(\"password\")\n\n    def create_password(self, password):\n        self.password = str(bcrypt.encrypt(password))\n\n    @property\n    def is_exist(self):\n        return flask2neo.graph.exists(self)\n\n    def save(self):\n        if self.is_exist:\n            flask2neo.graph.merge(self)\n            flask2neo.graph.push(self)\n        else:\n            flask2neo.graph.create(self)\n```\n4. Define function register as flask request method ```POST```\n```\n@app.route(\"/register\", methods=[\"POST\"])\ndef register():\n    form = request.form\n    user = Users()\n\n    user.username = form['username']\n    user.create_password(form['password'])\n    user.save()\n    return \"User Created\"\n\n```\n\n5. Run flask app\n```\nif __name__ == '__main__':\n    app.run(port=8500, debug=True)\n```\n\n\nOpen your browser and type into url : ```http://localhost:8500```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ganggas95/flask2neo4j", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask2Neo4J", "package_url": "https://pypi.org/project/Flask2Neo4J/", "platform": "", "project_url": "https://pypi.org/project/Flask2Neo4J/", "project_urls": {"Homepage": "https://github.com/ganggas95/flask2neo4j"}, "release_url": "https://pypi.org/project/Flask2Neo4J/0.1a1/", "requires_dist": ["Flask (>=1.0)", "py2neo (>=3.0)", "prompt-toolkit (<2.1,>=2.0.7)"], "requires_python": "", "summary": "Extension Flask for integration with neo4j graph database", "version": "0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask2Neo4J</h1>\n<p>Extension Flask for integration with neo4j graph database</p>\n<h2>Installation</h2>\n<p>Using pip:</p>\n<pre><code>$ pip install flask2neo4j\n</code></pre>\n<h2>Usage</h2>\n<p>Basic Step to usage this extension:</p>\n<ol>\n<li>Create Flask app instance:</li>\n</ol>\n<pre><code>import bcrypt\nfrom py2neo import ogm\nfrom flask import Flask, request\nfrom flask2neo4j import Flask2Neo4J\n\n\napp = Flask(__name__)\n\n</code></pre>\n<ol>\n<li>Add NEO4J Config and Initialization Flask2Neo4j Extensions:</li>\n</ol>\n<pre><code>\napp.config[\"NEO4J_USERNAME\"] = \"neo4j\"\napp.config[\"NEO4J_PASSWORD\"] = \"neo4j\"\napp.config[\"NEO4J_URI\"] = \"bolt://localhost:7687\"\n\nflask2neo = Flask2Neo4J()\n\nflask2neo.init_app(app)\n\n</code></pre>\n<ol>\n<li>Create Model using Graph Object if using GraphObject</li>\n</ol>\n<pre><code>class Users(ogm.GraphObject):\n    __primarykey__ = \"id\"\n\n    id = ogm.Property()\n    username = ogm.Property(\"username\")\n    password = ogm.Property(\"password\")\n\n    def create_password(self, password):\n        self.password = str(bcrypt.encrypt(password))\n\n    @property\n    def is_exist(self):\n        return flask2neo.graph.exists(self)\n\n    def save(self):\n        if self.is_exist:\n            flask2neo.graph.merge(self)\n            flask2neo.graph.push(self)\n        else:\n            flask2neo.graph.create(self)\n</code></pre>\n<ol>\n<li>Define function register as flask request method <code>POST</code></li>\n</ol>\n<pre><code>@app.route(\"/register\", methods=[\"POST\"])\ndef register():\n    form = request.form\n    user = Users()\n\n    user.username = form['username']\n    user.create_password(form['password'])\n    user.save()\n    return \"User Created\"\n\n</code></pre>\n<ol>\n<li>Run flask app</li>\n</ol>\n<pre><code>if __name__ == '__main__':\n    app.run(port=8500, debug=True)\n</code></pre>\n<p>Open your browser and type into url : <code>http://localhost:8500</code></p>\n\n          </div>"}, "last_serial": 4832280, "releases": {"0.1a1": [{"comment_text": "", "digests": {"md5": "aab6ea675f7d7b56352ed6bebc736d1d", "sha256": "1673bcad871003b8c4d538bbfbcc8a2f7ed4351283f2f23d84a483830a91a27f"}, "downloads": -1, "filename": "Flask2Neo4J-0.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "aab6ea675f7d7b56352ed6bebc736d1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3385, "upload_time": "2019-02-17T20:25:09", "upload_time_iso_8601": "2019-02-17T20:25:09.983251Z", "url": "https://files.pythonhosted.org/packages/3c/3b/b9a47066b7c07884036a9b31c17237b568698396e79777c39f1a32c402f6/Flask2Neo4J-0.1a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26fd0177833190191ab7a3f31b4228b6", "sha256": "4f0f5787a2c29adf3fc8d2564bb9c6548cf8c93d5855d4b1bcf4ae3b64c20a89"}, "downloads": -1, "filename": "Flask2Neo4J-0.1a1.tar.gz", "has_sig": false, "md5_digest": "26fd0177833190191ab7a3f31b4228b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2436, "upload_time": "2019-02-17T20:25:12", "upload_time_iso_8601": "2019-02-17T20:25:12.066771Z", "url": "https://files.pythonhosted.org/packages/c7/4c/884fb8859b2aa23060182cdec08b269ecf61941cb034cf0efdc35645ea7e/Flask2Neo4J-0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aab6ea675f7d7b56352ed6bebc736d1d", "sha256": "1673bcad871003b8c4d538bbfbcc8a2f7ed4351283f2f23d84a483830a91a27f"}, "downloads": -1, "filename": "Flask2Neo4J-0.1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "aab6ea675f7d7b56352ed6bebc736d1d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3385, "upload_time": "2019-02-17T20:25:09", "upload_time_iso_8601": "2019-02-17T20:25:09.983251Z", "url": "https://files.pythonhosted.org/packages/3c/3b/b9a47066b7c07884036a9b31c17237b568698396e79777c39f1a32c402f6/Flask2Neo4J-0.1a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "26fd0177833190191ab7a3f31b4228b6", "sha256": "4f0f5787a2c29adf3fc8d2564bb9c6548cf8c93d5855d4b1bcf4ae3b64c20a89"}, "downloads": -1, "filename": "Flask2Neo4J-0.1a1.tar.gz", "has_sig": false, "md5_digest": "26fd0177833190191ab7a3f31b4228b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2436, "upload_time": "2019-02-17T20:25:12", "upload_time_iso_8601": "2019-02-17T20:25:12.066771Z", "url": "https://files.pythonhosted.org/packages/c7/4c/884fb8859b2aa23060182cdec08b269ecf61941cb034cf0efdc35645ea7e/Flask2Neo4J-0.1a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:11 2020"}