{"info": {"author": "Lionel Darras", "author_email": "lionel.darras@mom.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.4", "Topic :: Internet", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "PyCampbellCR1000 : Query the Campbell CR1000-type Dataloggers\n=============================================================\n\nPyCampbellCR1000 is a python project which aims to allow the communication with\nCampbell CR1000 Type Datalogger\n\nThe main features include automatic collecting of data and settings (read only)\nas a list of dictionnaries.\n\nThe tool can be used in your python scripts for data post-processing,\nor in command line mode to collect data as CSV.\n\nWe don't update anything from PyCampbellCR1000 besides time,\nbecause we are assuming that the dataloggers are already configured.\n\n**Note:** PyCampbellCR1000 uses the `PyLink <http://pypi.python.org/pypi/PyLink>`_ lib, offers a universal communication interface with File-Like API.\n\n\nExamples\n--------\n\nWe init communication by giving the datalogger URL.\n\n\n::\n\n  >>> from pycampbellcr1000 import CR1000\n  >>> device = CR1000.from_url('tcp:host-ip:port')\n  >>> # or with Serial connection\n  >>> device = CR1000.from_url('serial:/dev/ttyUSB0:38400')\n\nTo get time, use:\n\n::\n\n  >>> device.gettime()\n  datetime.datetime(2012, 7, 16, 12, 27, 55)\n\nTo get data, you have to enter the table name where it is stored.\nIf you don't know the table name, you cannot collect the list of available\ntables in the datalogger.\n\n\n::\n\n  >>> device.list_tables()\n  ['Status', 'Table1', 'Public']\n\nChoose the time period to get your data from `start date` to `stop date`.\n\n\n::\n\n  >>> import datetime\n  >>> start = datetime.datetime(2012, 7, 16, 11, 0, 0)\n  >>> stop = datetime.datetime(2012, 7, 16, 12, 0, 0)\n  >>> data = device.get_data('Table1', start, stop)\n  >>> data[0][\"Datetime\"]\n  datetime.datetime(2012, 7, 16, 11, 0)\n\n::\n\n  >>> data[0][\"CurSensor1_mVolt_Avg\"]\n  2508.0\n\n::\n\n  >>> print(data.filter(('Datetime', 'CurSensor3_mAmp_Avg')).to_csv())\n  Datetime,CurSensor3_mAmp_Avg\n  2012-07-16 11:00:00,18.7\n  2012-07-16 11:01:00,18.48\n  ...\n  2012-07-16 11:59:00,17.25\n\n\nFeatures\n--------\n\n* Collecting data as a list of dictionaries\n* Collecting data in a CSV file\n* Reading and adjusting the data logger's internal clock\n* Retrieving table definitions\n* Listing table names\n* Reading settings\n* Collect file list and download file content\n* Tested with CR1000 and CR800 dataloggers (should work with CR3000 datalogger)\n* Various types of connections are supported (TCP, UDP, Serial, GSM)\n* Comes with a command-line script\n* Compatible with Python 2.6+ and 3.x\n\n\nInstallation\n------------\n\nYou can install, upgrade, uninstall PyCampbellCR1000 with these commands\n\n::\n\n    $ pip install pycampbellcr1000\n    $ pip install --upgrade pycampbellcr1000\n    $ pip uninstall pycampbellcr1000\n\nOr if you don't have pip\n\n::\n\n  $ easy_install pycampbellcr1000\n\nOr you can get the `source code from github\n<https://github.com/LionelDarras/PyCampbellCR1000>`_.\n\n::\n\n  $ git clone https://github.com/LionelDarras/PyCampbellCR1000.git\n  $ cd PyCampbellCR1000\n  $ python setup.py install\n\n\nDocumentation\n-------------\n\nSee documentation here: http://pycampbellcr1000.readthedocs.org\n\n\nChangelog\n---------\n\n\n-----------\nVersion 0.4\n-----------\n\nReleased on 2017-11-28\n\n- Distinction between pakbus address and node in the pakbus protocol.\n- Minor bug correction to can visualize help on python 3.x.\n- Allow seconds in settime.\n\n-----------\nVersion 0.3\n-----------\n\nReleased on 2014-03-26.\n\n- Bug correction about communication with NL115, NL120 and NL200 modules using \"CSI/O\" serial port.\n- Support python 3.3 and 3.4 \n\n-----------\nVersion 0.2\n-----------\n\nReleased on 2012-07-26.\n\n- Fixed a bug related to update command (on Windows)\n- Used UTC datetime\n- Decoded pakbus packet properly\n- Other minor bugs fixed\n\n-----------\nVersion 0.1\n-----------\n\nReleased on 2012-07-18.\n\nFirst properly tagged release.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/LionelDarras/PyCampbellCR1000", "keywords": "", "license": "GNU GPL v3", "maintainer": "", "maintainer_email": "", "name": "PyCampbellCR1000", "package_url": "https://pypi.org/project/PyCampbellCR1000/", "platform": "", "project_url": "https://pypi.org/project/PyCampbellCR1000/", "project_urls": {"Homepage": "https://github.com/LionelDarras/PyCampbellCR1000"}, "release_url": "https://pypi.org/project/PyCampbellCR1000/0.4/", "requires_dist": null, "requires_python": "", "summary": "Communication tools for Campbell CR1000-type Dataloggers", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyCampbellCR1000 is a python project which aims to allow the communication with\nCampbell CR1000 Type Datalogger</p>\n<p>The main features include automatic collecting of data and settings (read only)\nas a list of dictionnaries.</p>\n<p>The tool can be used in your python scripts for data post-processing,\nor in command line mode to collect data as CSV.</p>\n<p>We don\u2019t update anything from PyCampbellCR1000 besides time,\nbecause we are assuming that the dataloggers are already configured.</p>\n<p><strong>Note:</strong> PyCampbellCR1000 uses the <a href=\"http://pypi.python.org/pypi/PyLink\" rel=\"nofollow\">PyLink</a> lib, offers a universal communication interface with File-Like API.</p>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>We init communication by giving the datalogger URL.</p>\n<pre>&gt;&gt;&gt; from pycampbellcr1000 import CR1000\n&gt;&gt;&gt; device = CR1000.from_url('tcp:host-ip:port')\n&gt;&gt;&gt; # or with Serial connection\n&gt;&gt;&gt; device = CR1000.from_url('serial:/dev/ttyUSB0:38400')\n</pre>\n<p>To get time, use:</p>\n<pre>&gt;&gt;&gt; device.gettime()\ndatetime.datetime(2012, 7, 16, 12, 27, 55)\n</pre>\n<p>To get data, you have to enter the table name where it is stored.\nIf you don\u2019t know the table name, you cannot collect the list of available\ntables in the datalogger.</p>\n<pre>&gt;&gt;&gt; device.list_tables()\n['Status', 'Table1', 'Public']\n</pre>\n<p>Choose the time period to get your data from <cite>start date</cite> to <cite>stop date</cite>.</p>\n<pre>&gt;&gt;&gt; import datetime\n&gt;&gt;&gt; start = datetime.datetime(2012, 7, 16, 11, 0, 0)\n&gt;&gt;&gt; stop = datetime.datetime(2012, 7, 16, 12, 0, 0)\n&gt;&gt;&gt; data = device.get_data('Table1', start, stop)\n&gt;&gt;&gt; data[0][\"Datetime\"]\ndatetime.datetime(2012, 7, 16, 11, 0)\n</pre>\n<pre>&gt;&gt;&gt; data[0][\"CurSensor1_mVolt_Avg\"]\n2508.0\n</pre>\n<pre>&gt;&gt;&gt; print(data.filter(('Datetime', 'CurSensor3_mAmp_Avg')).to_csv())\nDatetime,CurSensor3_mAmp_Avg\n2012-07-16 11:00:00,18.7\n2012-07-16 11:01:00,18.48\n...\n2012-07-16 11:59:00,17.25\n</pre>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Collecting data as a list of dictionaries</li>\n<li>Collecting data in a CSV file</li>\n<li>Reading and adjusting the data logger\u2019s internal clock</li>\n<li>Retrieving table definitions</li>\n<li>Listing table names</li>\n<li>Reading settings</li>\n<li>Collect file list and download file content</li>\n<li>Tested with CR1000 and CR800 dataloggers (should work with CR3000 datalogger)</li>\n<li>Various types of connections are supported (TCP, UDP, Serial, GSM)</li>\n<li>Comes with a command-line script</li>\n<li>Compatible with Python 2.6+ and 3.x</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install, upgrade, uninstall PyCampbellCR1000 with these commands</p>\n<pre>$ pip install pycampbellcr1000\n$ pip install --upgrade pycampbellcr1000\n$ pip uninstall pycampbellcr1000\n</pre>\n<p>Or if you don\u2019t have pip</p>\n<pre>$ easy_install pycampbellcr1000\n</pre>\n<p>Or you can get the <a href=\"https://github.com/LionelDarras/PyCampbellCR1000\" rel=\"nofollow\">source code from github</a>.</p>\n<pre>$ git clone https://github.com/LionelDarras/PyCampbellCR1000.git\n$ cd PyCampbellCR1000\n$ python setup.py install\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>See documentation here: <a href=\"http://pycampbellcr1000.readthedocs.org\" rel=\"nofollow\">http://pycampbellcr1000.readthedocs.org</a></p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"version-0-4\">\n<h3>Version 0.4</h3>\n<p>Released on 2017-11-28</p>\n<ul>\n<li>Distinction between pakbus address and node in the pakbus protocol.</li>\n<li>Minor bug correction to can visualize help on python 3.x.</li>\n<li>Allow seconds in settime.</li>\n</ul>\n</div>\n<div id=\"version-0-3\">\n<h3>Version 0.3</h3>\n<p>Released on 2014-03-26.</p>\n<ul>\n<li>Bug correction about communication with NL115, NL120 and NL200 modules using \u201cCSI/O\u201d serial port.</li>\n<li>Support python 3.3 and 3.4</li>\n</ul>\n</div>\n<div id=\"version-0-2\">\n<h3>Version 0.2</h3>\n<p>Released on 2012-07-26.</p>\n<ul>\n<li>Fixed a bug related to update command (on Windows)</li>\n<li>Used UTC datetime</li>\n<li>Decoded pakbus packet properly</li>\n<li>Other minor bugs fixed</li>\n</ul>\n</div>\n<div id=\"version-0-1\">\n<h3>Version 0.1</h3>\n<p>Released on 2012-07-18.</p>\n<p>First properly tagged release.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3373581, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "026840d657ebb5df1345816d74e79a8b", "sha256": "8c0ca95d4135416a8bb338b3ca8aa1cc595b8b98b271bbb61535a362e148ce12"}, "downloads": -1, "filename": "PyCampbellCR1000-0.1.tar.gz", "has_sig": false, "md5_digest": "026840d657ebb5df1345816d74e79a8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41296, "upload_time": "2012-07-18T11:23:10", "upload_time_iso_8601": "2012-07-18T11:23:10.176151Z", "url": "https://files.pythonhosted.org/packages/64/ec/2d952a7df64e99aae86d11ea9b2cf226a6092a0e567ae9cf13efb811e8ee/PyCampbellCR1000-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "6d31235cdb87f19aed4426d64cab804e", "sha256": "aac1cf989c49e803ac0af05ed07e4f5f6430af5b15cfdc44ba4ca2ee2970040f"}, "downloads": -1, "filename": "PyCampbellCR1000-0.2.tar.gz", "has_sig": false, "md5_digest": "6d31235cdb87f19aed4426d64cab804e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49706, "upload_time": "2012-07-27T00:39:21", "upload_time_iso_8601": "2012-07-27T00:39:21.520796Z", "url": "https://files.pythonhosted.org/packages/90/5c/7614019441632e5d168d989211687a300fb34bcc5662f297702de2c5ff7d/PyCampbellCR1000-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "77ab4a1d2aa7c2102a869ad4b3c0f1c1", "sha256": "e2814163d37750de607913c4f2597c5adf40508039859f514ca054655c90a1fe"}, "downloads": -1, "filename": "PyCampbellCR1000-0.3.tar.gz", "has_sig": false, "md5_digest": "77ab4a1d2aa7c2102a869ad4b3c0f1c1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50286, "upload_time": "2014-04-02T21:06:49", "upload_time_iso_8601": "2014-04-02T21:06:49.826475Z", "url": "https://files.pythonhosted.org/packages/6c/18/9b40b4b96829a75e92727f2dfd2e5887787ac633631428201265902ffd28/PyCampbellCR1000-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "2207ed948b5622fa46a47a800b125130", "sha256": "466037583209f459dec4db87f20e20dfa97b5f6bcf8f528341fbd99272247a91"}, "downloads": -1, "filename": "PyCampbellCR1000-0.4.tar.gz", "has_sig": false, "md5_digest": "2207ed948b5622fa46a47a800b125130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 358435, "upload_time": "2017-11-29T08:49:51", "upload_time_iso_8601": "2017-11-29T08:49:51.073135Z", "url": "https://files.pythonhosted.org/packages/04/c4/5ba0a034690db62461dfd8ec55ba5737c0859b8a1c478483818bac1941c7/PyCampbellCR1000-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2207ed948b5622fa46a47a800b125130", "sha256": "466037583209f459dec4db87f20e20dfa97b5f6bcf8f528341fbd99272247a91"}, "downloads": -1, "filename": "PyCampbellCR1000-0.4.tar.gz", "has_sig": false, "md5_digest": "2207ed948b5622fa46a47a800b125130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 358435, "upload_time": "2017-11-29T08:49:51", "upload_time_iso_8601": "2017-11-29T08:49:51.073135Z", "url": "https://files.pythonhosted.org/packages/04/c4/5ba0a034690db62461dfd8ec55ba5737c0859b8a1c478483818bac1941c7/PyCampbellCR1000-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:49 2020"}