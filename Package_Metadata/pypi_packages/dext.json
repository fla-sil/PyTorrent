{"info": {"author": "Gabriele Maurina", "author_email": "gabrielemaurina95@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Dext\n### Dependencies Exractor\n##### A tool to extract dependencies at the file level from a codebase.\nThe extraction is rough but it works well with many languages and it is customizable to support even more. It is mainly based upon import statements but also object instantiations.\n\nRun `python -m dext -h` for help.\n\n### Install\n[Python](https://www.python.org/ \"Python website\") >= 3.8 is required. This guide assumes that your python 3 installation is under the keyword `python`, however for most linux distribution it is under `python3`. If this is the case for you, just use `python3`instead of `python`.\n\nThe installation is done through python's package manager **pip**. Simply run:\n\n`python -m pip install dext`\n\n### Usage\n\nDext can be used as a stand alone module, or trough its API. The basic usage is:\n\n`python -m dext [-h] [-v] [-l <lang profile>] [-i <input folder> [<input folder> ...]] [-o [<output file>]] [-g <graphviz output>]`\n\nOptional arguments:\n*  -h, &nbsp;&nbsp; --help &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; show help message and exit\n*  -v, &nbsp;&nbsp; --verbose &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; increase output verbosity\n*  -l &nbsp;&nbsp; \\<lang profile\\> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set language profile (default \"all\")\n*  -i &nbsp;&nbsp; \\<input folder\\> [\\<input folder\\> ...] set input folders (default \"current working directory\")\n*  -o &nbsp;&nbsp; [\\<output file\\>] &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set ouput file (default \"stdout\")\n*  -g &nbsp;&nbsp; \\<graphviz file\\> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp; set graphviz output file (default none)\n\n### Output\nDext can produce two types of output: a list of edges or an image (using [Graphviz](https://pypi.org/project/graphviz/ \"Graphviz on Pypi\")).\n\nThe default option is the list of edges and it is set through the option `-o`. The list contains pairs `<file 1> <file 2>` separated by a new line, where each pair indicates the dependency of `file 1` on `file 2`.\n\nExample of output:\n```\ncar.java wheel.java\ncar.java chassis.java\ncar.java motor.java\nmotor.java piston.java\nstreet.java tree.java\n```\nSuch output represents this graph:\n\n![Graph](https://raw.githubusercontent.com/GabrieleMaurina/dext/master/images/graph.png)\n\n### Graphviz\nThe second option for output is an image and it's set trough the options `-g` or `-go`. To use this option make sure to have a working installation of [Graphviz](https://pypi.org/project/graphviz/ \"Graphviz on Pypi\").\n\nHere are a few example of graphs generated with Dext:\n\nApache commons-cli in java:\n![commons-cli](https://raw.githubusercontent.com/GabrieleMaurina/dext/master/images/commons-cli.png)\n\nTensorflow hub in python:\n![hub](https://raw.githubusercontent.com/GabrieleMaurina/dext/master/images/tensorflow-hub.png)\n\nLinux kernel in c:\n![linux](https://raw.githubusercontent.com/GabrieleMaurina/dext/master/images/linux.png)\n\n### API\n\nDext API can be used by another script. Simply import `dext` to access its functions and variables. Its main APIs is:\n* `main()`, to run the whole module as if it was called in the stand alone option.\n* `run(profile, inputs, output, verbose)`, to run Dext passing your own arguments\n* `export(imports, inputs)`, to perform the extraction of dependencies and receive the outputs\n* `get_profile(language)`, to get the profile dictionaries to feed to extract()\n* `lang_profiles`, dictionary containing all the language profiles\n\nExample: removing python profile from `lang_profiles`.\n\n```python\n#import Dext module\n>>> import dext\n\n#run Dext with profile='all', input folders=['fastRTS'], output=None(stdout), verbose=True\n>>> dext.run('all', ['fastRTS'], None, True)\nfastRTS/fastRTS.py fastRTS/dext/dext.py\n***Dext results***\nTotal files: 2\nVertices: 2\nEdges: 1\nDensity: 0.25\n\n#remove 'python' from lang_profiles\n>>> del dext.lang_profiles['python']\n\n#run Dext again\n>>> dext.run('all', ['fastRTS'], None, True)\n***Dext results***\nTotal files: 0\nVertices: 0\nEdges: 0\nDensity: 0\n```\n\nInternal API call graph:\n\n![Call graph](https://raw.githubusercontent.com/GabrieleMaurina/dext/master/images/call-graph.png)\n\n### Language Profiles\n`lang_profiles` is a dictionary that tells Dext how to find import statements and object instantiations. Specifically it maps file extensions to a list of keywords to be searched in the code. Profiles for many laguages are already included:\n* ada\n* asp\n* autohotkey\n* autoit\n* c\n* c#\n* c++\n* cobol\n* cobra\n* d\n* erlang\n* fortran\n* go\n* haskell\n* java\n* javascript\n* kotlin\n* lua\n* matlab\n* objective-c\n* ocaml\n* pascal\n* perl\n* php\n* prolog\n* python\n* r\n* red\n* ruby\n* rust\n* scala\n* sml\n* swi-prolog\n* swift\n* typescrypt\n* visual basic\n\nThe default language `all` uses all profiles, based on the file type that it is currently working on. This works just as well, but it is a little slower than just selecting a specific one.\n\nExpert users may chose to create **new profiles** or **customize** the ones provided. Manipulate the dictionary `lang_profiles` to do so.\n\n### How it works\n\nA second dictionary called `profile` is created from `lang_profiles`. This dictioray maps file extentions to a regular expression, which is then matched in the code, in order to find dependencies. All dependencies are then listed in the output.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GabrieleMaurina/dext", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dext", "package_url": "https://pypi.org/project/dext/", "platform": "", "project_url": "https://pypi.org/project/dext/", "project_urls": {"Homepage": "https://github.com/GabrieleMaurina/dext"}, "release_url": "https://pypi.org/project/dext/1.0.6/", "requires_dist": null, "requires_python": ">=3.8", "summary": "Dext is a tool to extract file dependencies from a code base.", "version": "1.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dext</h1>\n<h3>Dependencies Exractor</h3>\n<h5>A tool to extract dependencies at the file level from a codebase.</h5>\n<p>The extraction is rough but it works well with many languages and it is customizable to support even more. It is mainly based upon import statements but also object instantiations.</p>\n<p>Run <code>python -m dext -h</code> for help.</p>\n<h3>Install</h3>\n<p><a href=\"https://www.python.org/\" rel=\"nofollow\" title=\"Python website\">Python</a> &gt;= 3.8 is required. This guide assumes that your python 3 installation is under the keyword <code>python</code>, however for most linux distribution it is under <code>python3</code>. If this is the case for you, just use <code>python3</code>instead of <code>python</code>.</p>\n<p>The installation is done through python's package manager <strong>pip</strong>. Simply run:</p>\n<p><code>python -m pip install dext</code></p>\n<h3>Usage</h3>\n<p>Dext can be used as a stand alone module, or trough its API. The basic usage is:</p>\n<p><code>python -m dext [-h] [-v] [-l &lt;lang profile&gt;] [-i &lt;input folder&gt; [&lt;input folder&gt; ...]] [-o [&lt;output file&gt;]] [-g &lt;graphviz output&gt;]</code></p>\n<p>Optional arguments:</p>\n<ul>\n<li>-h, \u00a0\u00a0 --help \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 show help message and exit</li>\n<li>-v, \u00a0\u00a0 --verbose \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 increase output verbosity</li>\n<li>-l \u00a0\u00a0 &lt;lang profile&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 set language profile (default \"all\")</li>\n<li>-i \u00a0\u00a0 &lt;input folder&gt; [&lt;input folder&gt; ...] set input folders (default \"current working directory\")</li>\n<li>-o \u00a0\u00a0 [&lt;output file&gt;] \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 set ouput file (default \"stdout\")</li>\n<li>-g \u00a0\u00a0 &lt;graphviz file&gt; \u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 set graphviz output file (default none)</li>\n</ul>\n<h3>Output</h3>\n<p>Dext can produce two types of output: a list of edges or an image (using <a href=\"https://pypi.org/project/graphviz/\" rel=\"nofollow\" title=\"Graphviz on Pypi\">Graphviz</a>).</p>\n<p>The default option is the list of edges and it is set through the option <code>-o</code>. The list contains pairs <code>&lt;file 1&gt; &lt;file 2&gt;</code> separated by a new line, where each pair indicates the dependency of <code>file 1</code> on <code>file 2</code>.</p>\n<p>Example of output:</p>\n<pre><code>car.java wheel.java\ncar.java chassis.java\ncar.java motor.java\nmotor.java piston.java\nstreet.java tree.java\n</code></pre>\n<p>Such output represents this graph:</p>\n<p><img alt=\"Graph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdf582c6d16d03ceb3f96e89279aad239f4cb96a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4761627269656c654d617572696e612f646578742f6d61737465722f696d616765732f67726170682e706e67\"></p>\n<h3>Graphviz</h3>\n<p>The second option for output is an image and it's set trough the options <code>-g</code> or <code>-go</code>. To use this option make sure to have a working installation of <a href=\"https://pypi.org/project/graphviz/\" rel=\"nofollow\" title=\"Graphviz on Pypi\">Graphviz</a>.</p>\n<p>Here are a few example of graphs generated with Dext:</p>\n<p>Apache commons-cli in java:\n<img alt=\"commons-cli\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/47f8e1d30f89ab1d45c5a94f6aff1182196b92a4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4761627269656c654d617572696e612f646578742f6d61737465722f696d616765732f636f6d6d6f6e732d636c692e706e67\"></p>\n<p>Tensorflow hub in python:\n<img alt=\"hub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df878df7477417c9198ab2725beec65df05c80e2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4761627269656c654d617572696e612f646578742f6d61737465722f696d616765732f74656e736f72666c6f772d6875622e706e67\"></p>\n<p>Linux kernel in c:\n<img alt=\"linux\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a7fb324efe3fa4e2694fe2a23299df06d576abb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4761627269656c654d617572696e612f646578742f6d61737465722f696d616765732f6c696e75782e706e67\"></p>\n<h3>API</h3>\n<p>Dext API can be used by another script. Simply import <code>dext</code> to access its functions and variables. Its main APIs is:</p>\n<ul>\n<li><code>main()</code>, to run the whole module as if it was called in the stand alone option.</li>\n<li><code>run(profile, inputs, output, verbose)</code>, to run Dext passing your own arguments</li>\n<li><code>export(imports, inputs)</code>, to perform the extraction of dependencies and receive the outputs</li>\n<li><code>get_profile(language)</code>, to get the profile dictionaries to feed to extract()</li>\n<li><code>lang_profiles</code>, dictionary containing all the language profiles</li>\n</ul>\n<p>Example: removing python profile from <code>lang_profiles</code>.</p>\n<pre><span class=\"c1\">#import Dext module</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">dext</span>\n\n<span class=\"c1\">#run Dext with profile='all', input folders=['fastRTS'], output=None(stdout), verbose=True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dext</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'all'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'fastRTS'</span><span class=\"p\">],</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">fastRTS</span><span class=\"o\">/</span><span class=\"n\">fastRTS</span><span class=\"o\">.</span><span class=\"n\">py</span> <span class=\"n\">fastRTS</span><span class=\"o\">/</span><span class=\"n\">dext</span><span class=\"o\">/</span><span class=\"n\">dext</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"o\">***</span><span class=\"n\">Dext</span> <span class=\"n\">results</span><span class=\"o\">***</span>\n<span class=\"n\">Total</span> <span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"mi\">2</span>\n<span class=\"n\">Vertices</span><span class=\"p\">:</span> <span class=\"mi\">2</span>\n<span class=\"n\">Edges</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"n\">Density</span><span class=\"p\">:</span> <span class=\"mf\">0.25</span>\n\n<span class=\"c1\">#remove 'python' from lang_profiles</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">del</span> <span class=\"n\">dext</span><span class=\"o\">.</span><span class=\"n\">lang_profiles</span><span class=\"p\">[</span><span class=\"s1\">'python'</span><span class=\"p\">]</span>\n\n<span class=\"c1\">#run Dext again</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dext</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"s1\">'all'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'fastRTS'</span><span class=\"p\">],</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">***</span><span class=\"n\">Dext</span> <span class=\"n\">results</span><span class=\"o\">***</span>\n<span class=\"n\">Total</span> <span class=\"n\">files</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n<span class=\"n\">Vertices</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n<span class=\"n\">Edges</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n<span class=\"n\">Density</span><span class=\"p\">:</span> <span class=\"mi\">0</span>\n</pre>\n<p>Internal API call graph:</p>\n<p><img alt=\"Call graph\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e89ac0dec30473e5786295cf3bbd455a61020aa2/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4761627269656c654d617572696e612f646578742f6d61737465722f696d616765732f63616c6c2d67726170682e706e67\"></p>\n<h3>Language Profiles</h3>\n<p><code>lang_profiles</code> is a dictionary that tells Dext how to find import statements and object instantiations. Specifically it maps file extensions to a list of keywords to be searched in the code. Profiles for many laguages are already included:</p>\n<ul>\n<li>ada</li>\n<li>asp</li>\n<li>autohotkey</li>\n<li>autoit</li>\n<li>c</li>\n<li>c#</li>\n<li>c++</li>\n<li>cobol</li>\n<li>cobra</li>\n<li>d</li>\n<li>erlang</li>\n<li>fortran</li>\n<li>go</li>\n<li>haskell</li>\n<li>java</li>\n<li>javascript</li>\n<li>kotlin</li>\n<li>lua</li>\n<li>matlab</li>\n<li>objective-c</li>\n<li>ocaml</li>\n<li>pascal</li>\n<li>perl</li>\n<li>php</li>\n<li>prolog</li>\n<li>python</li>\n<li>r</li>\n<li>red</li>\n<li>ruby</li>\n<li>rust</li>\n<li>scala</li>\n<li>sml</li>\n<li>swi-prolog</li>\n<li>swift</li>\n<li>typescrypt</li>\n<li>visual basic</li>\n</ul>\n<p>The default language <code>all</code> uses all profiles, based on the file type that it is currently working on. This works just as well, but it is a little slower than just selecting a specific one.</p>\n<p>Expert users may chose to create <strong>new profiles</strong> or <strong>customize</strong> the ones provided. Manipulate the dictionary <code>lang_profiles</code> to do so.</p>\n<h3>How it works</h3>\n<p>A second dictionary called <code>profile</code> is created from <code>lang_profiles</code>. This dictioray maps file extentions to a regular expression, which is then matched in the code, in order to find dependencies. All dependencies are then listed in the output.</p>\n\n          </div>"}, "last_serial": 7189915, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7d2f71bd0e6307e1072e2c2fc7d3798e", "sha256": "9451c11fd97216dfbdc1224c5b78a2cf5bc9b495d15102a3bb24e746fc29540b"}, "downloads": -1, "filename": "dext-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7d2f71bd0e6307e1072e2c2fc7d3798e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5520, "upload_time": "2020-04-05T14:58:55", "upload_time_iso_8601": "2020-04-05T14:58:55.134244Z", "url": "https://files.pythonhosted.org/packages/e4/52/f48c315dcd364f23e9f8d82e18aed6d29ee3523f8923c67ac3b260606f79/dext-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fb77980fd21d31896d4feab82dd6d6ce", "sha256": "bc033eac8e6d2677a7c5c94c521be1eac429f6d91446e19ae4bd094104d31db8"}, "downloads": -1, "filename": "dext-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fb77980fd21d31896d4feab82dd6d6ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4664, "upload_time": "2020-04-05T14:58:57", "upload_time_iso_8601": "2020-04-05T14:58:57.442534Z", "url": "https://files.pythonhosted.org/packages/99/79/4e1ad5d64739c2c4f895b0008ebff03b63d4f12b41aa4fa6e2af6d7ceafc/dext-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1f8c78acb98ba9c0d3a2e2c94b15ff4f", "sha256": "f6c3e41c645e2d47adf0542ec40af89683b8b7c44b214c43e9ac64a4270b76f3"}, "downloads": -1, "filename": "dext-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1f8c78acb98ba9c0d3a2e2c94b15ff4f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5721, "upload_time": "2020-04-08T19:34:19", "upload_time_iso_8601": "2020-04-08T19:34:19.577331Z", "url": "https://files.pythonhosted.org/packages/04/ae/ac1393974d486f1358f01a0bdf1aea7f5203cdd78dd9363d2224b66d51a8/dext-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5036c22893ac57062df46db53372d82d", "sha256": "5cffd52d2c3d47886d6cdd79369e10732a74eba4882f0f0cac85e4128030d2c2"}, "downloads": -1, "filename": "dext-1.0.1.tar.gz", "has_sig": false, "md5_digest": "5036c22893ac57062df46db53372d82d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4929, "upload_time": "2020-04-08T19:34:20", "upload_time_iso_8601": "2020-04-08T19:34:20.709285Z", "url": "https://files.pythonhosted.org/packages/46/15/a7178546f0f9c5a4b1941ddf4ec613252bd2ff80db2cec00e0b13db65ee0/dext-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "6f33c08874f27246be659e3898927705", "sha256": "03aeb666f31463fc06a26e743fc84446a28ca5a872660a621658d20e07a8dbf1"}, "downloads": -1, "filename": "dext-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "6f33c08874f27246be659e3898927705", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5719, "upload_time": "2020-04-08T20:11:07", "upload_time_iso_8601": "2020-04-08T20:11:07.123947Z", "url": "https://files.pythonhosted.org/packages/a6/9a/f6886edf6cae27c59f703495ecdc1b3519bc7aac7928c542dbeda3f43341/dext-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "357defba67772f483714445622c92b12", "sha256": "dc3fab83ca57394b40d16e4412f72b96d61c0a96f57cb884c0782878e3d84136"}, "downloads": -1, "filename": "dext-1.0.2.tar.gz", "has_sig": false, "md5_digest": "357defba67772f483714445622c92b12", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4913, "upload_time": "2020-04-08T20:11:08", "upload_time_iso_8601": "2020-04-08T20:11:08.109658Z", "url": "https://files.pythonhosted.org/packages/c7/03/7c196a27b238a0e928d7d0e59227df526c90cf8b917f02b8d7c42fee1595/dext-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "9a0230f69381568f608045cd7aab7c51", "sha256": "4edd3b6a316cf75f1da79abab3990aaf32083eb7e4f0810bfab838f15796c161"}, "downloads": -1, "filename": "dext-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "9a0230f69381568f608045cd7aab7c51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5762, "upload_time": "2020-04-09T10:25:46", "upload_time_iso_8601": "2020-04-09T10:25:46.549485Z", "url": "https://files.pythonhosted.org/packages/d1/f7/adb646e002eeed1ba8548e8fbca5ad9cb5707c87eaaa1848d34ca28eecdb/dext-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "323dcb4c8eadb6487546cf6f20d59d30", "sha256": "2be2fcc656279e372de96a9ae883acd72cb8ac2a3b5737c8f7d0f509804e255a"}, "downloads": -1, "filename": "dext-1.0.3.tar.gz", "has_sig": false, "md5_digest": "323dcb4c8eadb6487546cf6f20d59d30", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4939, "upload_time": "2020-04-09T10:25:47", "upload_time_iso_8601": "2020-04-09T10:25:47.693159Z", "url": "https://files.pythonhosted.org/packages/38/a5/3dbca9917fffe6e4268f61aba11ef2581cb930427b247fe658e9293323c7/dext-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "8a6008899309e72374d60341aa3317e6", "sha256": "ba26ee4ae685578cdff0e910d66fed58a0b9520c5ca218d3342ef191f69a0deb"}, "downloads": -1, "filename": "dext-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8a6008899309e72374d60341aa3317e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6304, "upload_time": "2020-04-15T11:01:33", "upload_time_iso_8601": "2020-04-15T11:01:33.924918Z", "url": "https://files.pythonhosted.org/packages/25/1b/8bb034d9692d01d29ed63ca290205d89dcb96daa85c08060bae2e964a15b/dext-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c2d7a12a97a2cba26770e71fa4bd000", "sha256": "608d0f17af5f6f0dd46e10fc5f828081ae60251e3dab493df08cb959daff277e"}, "downloads": -1, "filename": "dext-1.0.4.tar.gz", "has_sig": false, "md5_digest": "9c2d7a12a97a2cba26770e71fa4bd000", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5733, "upload_time": "2020-04-15T11:01:35", "upload_time_iso_8601": "2020-04-15T11:01:35.037018Z", "url": "https://files.pythonhosted.org/packages/d6/72/8dcc646deea03af671dead21f981287a4642f3a09f38dd1ed6840ec4fb28/dext-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7f54ac8345d521be1be9d2559bc4aa78", "sha256": "a0accdc5d0f149b1a3d12102b9363e55d8e8396261ff96211888bdba26f156f9"}, "downloads": -1, "filename": "dext-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7f54ac8345d521be1be9d2559bc4aa78", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6260, "upload_time": "2020-05-05T09:43:28", "upload_time_iso_8601": "2020-05-05T09:43:28.217766Z", "url": "https://files.pythonhosted.org/packages/6c/cd/001039f40e6769a356b5f4d9e09e9b9a20a0ca55f3810efb0f2965fe2f7b/dext-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84b72ce9095b6c03480126c2aeda2691", "sha256": "824ce4eb241dd927b8a33d5667413631600bf6194d270e569535b677f34d0ae2"}, "downloads": -1, "filename": "dext-1.0.5.tar.gz", "has_sig": false, "md5_digest": "84b72ce9095b6c03480126c2aeda2691", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5668, "upload_time": "2020-05-05T09:43:29", "upload_time_iso_8601": "2020-05-05T09:43:29.261223Z", "url": "https://files.pythonhosted.org/packages/34/50/613311c0dbcf7cc5127934ba543dedaa1c6996e9e22fd3f9bdf90c65a75d/dext-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "8885e3429cee5626a08ce57bdbfe5479", "sha256": "b6bcfddcd6debede710d2bc0988eef94cf8552b6c9f4c1b6911185a6a8973852"}, "downloads": -1, "filename": "dext-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8885e3429cee5626a08ce57bdbfe5479", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6260, "upload_time": "2020-05-07T16:26:02", "upload_time_iso_8601": "2020-05-07T16:26:02.848784Z", "url": "https://files.pythonhosted.org/packages/92/95/ebd2f26abc38c59d31a487632a4bf461aa8ed5b40bb5906927161a687059/dext-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "697827f8c73946d31703689a679e5e3c", "sha256": "5cfc01053e6ba2a4e5e8b5730f42756ac2e4cb937077e79a3db9085ac8a9531a"}, "downloads": -1, "filename": "dext-1.0.6.tar.gz", "has_sig": false, "md5_digest": "697827f8c73946d31703689a679e5e3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5689, "upload_time": "2020-05-07T16:26:03", "upload_time_iso_8601": "2020-05-07T16:26:03.836375Z", "url": "https://files.pythonhosted.org/packages/f7/48/f757223865573e1ad2a6c9cce3e21345395918f7a32b3592ce7d31db75d2/dext-1.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8885e3429cee5626a08ce57bdbfe5479", "sha256": "b6bcfddcd6debede710d2bc0988eef94cf8552b6c9f4c1b6911185a6a8973852"}, "downloads": -1, "filename": "dext-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8885e3429cee5626a08ce57bdbfe5479", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 6260, "upload_time": "2020-05-07T16:26:02", "upload_time_iso_8601": "2020-05-07T16:26:02.848784Z", "url": "https://files.pythonhosted.org/packages/92/95/ebd2f26abc38c59d31a487632a4bf461aa8ed5b40bb5906927161a687059/dext-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "697827f8c73946d31703689a679e5e3c", "sha256": "5cfc01053e6ba2a4e5e8b5730f42756ac2e4cb937077e79a3db9085ac8a9531a"}, "downloads": -1, "filename": "dext-1.0.6.tar.gz", "has_sig": false, "md5_digest": "697827f8c73946d31703689a679e5e3c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 5689, "upload_time": "2020-05-07T16:26:03", "upload_time_iso_8601": "2020-05-07T16:26:03.836375Z", "url": "https://files.pythonhosted.org/packages/f7/48/f757223865573e1ad2a6c9cce3e21345395918f7a32b3592ce7d31db75d2/dext-1.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:48 2020"}