{"info": {"author": "Livio Ribeiro", "author_email": "livioribeiro@outlook.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: CherryPy", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "============================\nlribeiro.cherrypy.templating\n============================\n\nTemplate rendering tool for cherrypy.\n\n**It does not render any template**, so you must provide a renderer for your template system to do the actual rendering.\n\nThe renderer must be a callable accepting two arguments:\n\n- The name of the template to be rendered\n- A context object, which can be a ``dict`` or any other object that your template system can handle\n\nThe template name comes from the ``@template`` decorator argument and the context is the value return from the handler.\n\nRenderer parameters\n-------------------\n\nYou can optionally pass parameters to your renderer function by just passing additional arguments to the ``@template`` decorator\n\n.. sourcecode:: python\n\n    class Controller:\n        @cherrypy.expose\n        @template('template_name', 'some arg', some='keyword arg')\n        # pass your additional parameters here\n        def handler():\n            pass\n\n    def renderer(template_name, context, *args, **kwargs):\n        # and do something with the parameters here\n        pass\n\n\nDeveloped under Python3.4 and tested against Python2.7, Python3.4 and pypy.\n\nUsage:\n------\n\n.. sourcecode:: python\n\n    from os import path\n\n    import cherrypy\n    import pystache\n\n    from lribeiro.cherrypy.templating import template\n\n\n    def _renderer(template_name, context):\n        \"\"\"\n        Template renderer using Pystache\n        \"\"\"\n\n        search_dir = path.join(path.dirname(path.abspath(__file__)), 'templates')\n        renderer = pystache.Renderer(file_extension='html', search_dirs=search_dir)\n\n        template_str = renderer.load_template(template_name)\n        return renderer.render(template_str, context)\n\n\n    class Root:\n        @cherrypy.expose\n        @template('index')\n        def index(self):\n            return {'name': 'Lorem', 'lastname': 'Ipsum'}\n\n        @cherrypy.expose\n        @template('page')\n        def page(self):\n            return {'name': 'Lorem', 'lastname': 'Ipsum'}\n\n        @cherrypy.expose\n        @template('page_with_args', 'some', 'arg')\n        def page_with_args(self):\n            return {'name': 'Lorem', 'lastname': 'Ipsum'}\n\n        @cherrypy.expose\n        @template('page_with_args', some='keyword arg')\n        def page_with_args(self):\n            return {'name': 'Lorem', 'lastname': 'Ipsum'}\n\n\n    config = {\n        '/': {\n            'templating.renderer': _renderer,\n        }\n    }\n\n    if __name__ == '__main__':\n        cherrypy.quickstart(Root(), '/', config)", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://bitbucket.org/livioribeiro/cherrypy-templating", "keywords": "templating,cherrypy,mako,jinja2,pystache,cheetah,genshi", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "lribeiro.cherrypy.templating", "package_url": "https://pypi.org/project/lribeiro.cherrypy.templating/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/lribeiro.cherrypy.templating/", "project_urls": {"Homepage": "http://bitbucket.org/livioribeiro/cherrypy-templating"}, "release_url": "https://pypi.org/project/lribeiro.cherrypy.templating/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Template rendering tool for cherrypy", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Template rendering tool for cherrypy.</p>\n<p><strong>It does not render any template</strong>, so you must provide a renderer for your template system to do the actual rendering.</p>\n<p>The renderer must be a callable accepting two arguments:</p>\n<ul>\n<li>The name of the template to be rendered</li>\n<li>A context object, which can be a <tt>dict</tt> or any other object that your template system can handle</li>\n</ul>\n<p>The template name comes from the <tt>@template</tt> decorator argument and the context is the value return from the handler.</p>\n<div id=\"renderer-parameters\">\n<h2>Renderer parameters</h2>\n<p>You can optionally pass parameters to your renderer function by just passing additional arguments to the <tt>@template</tt> decorator</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Controller</span><span class=\"p\">:</span>\n    <span class=\"nd\">@cherrypy</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n    <span class=\"nd\">@template</span><span class=\"p\">(</span><span class=\"s1\">'template_name'</span><span class=\"p\">,</span> <span class=\"s1\">'some arg'</span><span class=\"p\">,</span> <span class=\"n\">some</span><span class=\"o\">=</span><span class=\"s1\">'keyword arg'</span><span class=\"p\">)</span>\n    <span class=\"c1\"># pass your additional parameters here</span>\n    <span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">():</span>\n        <span class=\"k\">pass</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">renderer</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n    <span class=\"c1\"># and do something with the parameters here</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>Developed under Python3.4 and tested against Python2.7, Python3.4 and pypy.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage:</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">cherrypy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pystache</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">lribeiro.cherrypy.templating</span> <span class=\"kn\">import</span> <span class=\"n\">template</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">_renderer</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    Template renderer using Pystache\n    \"\"\"</span>\n\n    <span class=\"n\">search_dir</span> <span class=\"o\">=</span> <span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">abspath</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">)),</span> <span class=\"s1\">'templates'</span><span class=\"p\">)</span>\n    <span class=\"n\">renderer</span> <span class=\"o\">=</span> <span class=\"n\">pystache</span><span class=\"o\">.</span><span class=\"n\">Renderer</span><span class=\"p\">(</span><span class=\"n\">file_extension</span><span class=\"o\">=</span><span class=\"s1\">'html'</span><span class=\"p\">,</span> <span class=\"n\">search_dirs</span><span class=\"o\">=</span><span class=\"n\">search_dir</span><span class=\"p\">)</span>\n\n    <span class=\"n\">template_str</span> <span class=\"o\">=</span> <span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">load_template</span><span class=\"p\">(</span><span class=\"n\">template_name</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">renderer</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">template_str</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Root</span><span class=\"p\">:</span>\n    <span class=\"nd\">@cherrypy</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n    <span class=\"nd\">@template</span><span class=\"p\">(</span><span class=\"s1\">'index'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Lorem'</span><span class=\"p\">,</span> <span class=\"s1\">'lastname'</span><span class=\"p\">:</span> <span class=\"s1\">'Ipsum'</span><span class=\"p\">}</span>\n\n    <span class=\"nd\">@cherrypy</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n    <span class=\"nd\">@template</span><span class=\"p\">(</span><span class=\"s1\">'page'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">page</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Lorem'</span><span class=\"p\">,</span> <span class=\"s1\">'lastname'</span><span class=\"p\">:</span> <span class=\"s1\">'Ipsum'</span><span class=\"p\">}</span>\n\n    <span class=\"nd\">@cherrypy</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n    <span class=\"nd\">@template</span><span class=\"p\">(</span><span class=\"s1\">'page_with_args'</span><span class=\"p\">,</span> <span class=\"s1\">'some'</span><span class=\"p\">,</span> <span class=\"s1\">'arg'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">page_with_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Lorem'</span><span class=\"p\">,</span> <span class=\"s1\">'lastname'</span><span class=\"p\">:</span> <span class=\"s1\">'Ipsum'</span><span class=\"p\">}</span>\n\n    <span class=\"nd\">@cherrypy</span><span class=\"o\">.</span><span class=\"n\">expose</span>\n    <span class=\"nd\">@template</span><span class=\"p\">(</span><span class=\"s1\">'page_with_args'</span><span class=\"p\">,</span> <span class=\"n\">some</span><span class=\"o\">=</span><span class=\"s1\">'keyword arg'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">page_with_args</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Lorem'</span><span class=\"p\">,</span> <span class=\"s1\">'lastname'</span><span class=\"p\">:</span> <span class=\"s1\">'Ipsum'</span><span class=\"p\">}</span>\n\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'/'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'templating.renderer'</span><span class=\"p\">:</span> <span class=\"n\">_renderer</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">cherrypy</span><span class=\"o\">.</span><span class=\"n\">quickstart</span><span class=\"p\">(</span><span class=\"n\">Root</span><span class=\"p\">(),</span> <span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1220517, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "24c2f667a21e7b55af8d48c9e4fff77c", "sha256": "f725df111591fd038c250d9e16284ea9798cd1c960b8f06d05e39358e3ea1add"}, "downloads": -1, "filename": "lribeiro.cherrypy.templating-1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "24c2f667a21e7b55af8d48c9e4fff77c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5295, "upload_time": "2014-09-08T13:25:57", "upload_time_iso_8601": "2014-09-08T13:25:57.818835Z", "url": "https://files.pythonhosted.org/packages/d7/1a/c540b2604e260d0d0bb0f1c7a131b6c656fc8b05af13e0d7c10bf642d13b/lribeiro.cherrypy.templating-1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee2d93394fdfcd839633dfad05f9add1", "sha256": "44a327a1fc6521599f0944557cb7ea6beccbdc7429a03320b8209dd242a99537"}, "downloads": -1, "filename": "lribeiro.cherrypy.templating-1.0.tar.gz", "has_sig": false, "md5_digest": "ee2d93394fdfcd839633dfad05f9add1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2705, "upload_time": "2014-09-08T13:25:59", "upload_time_iso_8601": "2014-09-08T13:25:59.356798Z", "url": "https://files.pythonhosted.org/packages/1f/1e/04a4ec833fb86d07644df390fbaac29b3162fd80a78f21a775383e9ab31f/lribeiro.cherrypy.templating-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4b38376b7c1dc5b7d8b65919d646719d", "sha256": "2d5880c04947a5ba2429874091fdc5a2c2df24288a866daf53725613901e8e08"}, "downloads": -1, "filename": "lribeiro.cherrypy.templating-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b38376b7c1dc5b7d8b65919d646719d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5873, "upload_time": "2014-09-11T12:58:49", "upload_time_iso_8601": "2014-09-11T12:58:49.220794Z", "url": "https://files.pythonhosted.org/packages/48/f2/054718478db13a8733dc271a898683380d48675ce67a44404c77524404a6/lribeiro.cherrypy.templating-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5a98dfb1523deb34660687274589412", "sha256": "501289c5654f9363eefd1a3cb58a0787427aa0274e0e604a3e8ef4292157a966"}, "downloads": -1, "filename": "lribeiro.cherrypy.templating-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b5a98dfb1523deb34660687274589412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3071, "upload_time": "2014-09-11T12:58:47", "upload_time_iso_8601": "2014-09-11T12:58:47.144479Z", "url": "https://files.pythonhosted.org/packages/c8/7a/9eca03386960c9c12c1382ec69e6ab9a3251d905a526b9beddbea34f79e1/lribeiro.cherrypy.templating-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b38376b7c1dc5b7d8b65919d646719d", "sha256": "2d5880c04947a5ba2429874091fdc5a2c2df24288a866daf53725613901e8e08"}, "downloads": -1, "filename": "lribeiro.cherrypy.templating-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4b38376b7c1dc5b7d8b65919d646719d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5873, "upload_time": "2014-09-11T12:58:49", "upload_time_iso_8601": "2014-09-11T12:58:49.220794Z", "url": "https://files.pythonhosted.org/packages/48/f2/054718478db13a8733dc271a898683380d48675ce67a44404c77524404a6/lribeiro.cherrypy.templating-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5a98dfb1523deb34660687274589412", "sha256": "501289c5654f9363eefd1a3cb58a0787427aa0274e0e604a3e8ef4292157a966"}, "downloads": -1, "filename": "lribeiro.cherrypy.templating-1.0.1.tar.gz", "has_sig": false, "md5_digest": "b5a98dfb1523deb34660687274589412", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3071, "upload_time": "2014-09-11T12:58:47", "upload_time_iso_8601": "2014-09-11T12:58:47.144479Z", "url": "https://files.pythonhosted.org/packages/c8/7a/9eca03386960c9c12c1382ec69e6ab9a3251d905a526b9beddbea34f79e1/lribeiro.cherrypy.templating-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:32 2020"}