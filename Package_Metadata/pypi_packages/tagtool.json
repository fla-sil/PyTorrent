{"info": {"author": "Shadab Zafar", "author_email": "dufferzafar0@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4"], "description": "tagtool\n=======\n\nMass clean metadata of downloaded MP3 songs.\n\nI wrote the initial version as a `simple\nscript <https://github.com/dufferzafar/tagtool/blob/old/tagfix.py>`__\nthat just worked. This tool later became an exercise in command line\napplication design as I'd never done it before. It uses\n`docopt <http://docopt.org/>`__ (along with some hackery to allow\nsub-commands)\n\ninstall\n-------\n\n``pip install tagtool``\n\nYou could also use ```pipsi`` <https://github.com/mitsuhiko/pipsi>`__ to\ninstall.\n\nusage\n-----\n\n::\n\n    Usage:\n        tagtool [--no-skip] <command> [<args>...]\n\n    Commands:\n        replace     Perform regex replace on tags\n        remove      Remove tag frames\n        rename      Rename files to format: \"%TrackTitle%.mp3\"\n        help        Read about a specific command\n\n    Options:\n        --no-skip   Do not skip already tagged files\n\ncommands\n--------\n\n**``replace``**\n\n::\n\n    Perform regex replace on tags like artist name, track title etc.\n\n    Usage:\n        tagtool replace --pattern=<pattern> [--repl=<replacement>] <file>...\n                        [--prune] [--frames=<tags>] [--frames_skip=<tags>]\n\n    Options:\n        <file>                       MP3 file(s) to process\n        --pattern=<pattern>          Pattern to search for\n        --repl=<replacement>         Replacement text\n        --prune                      Remove empty frames\n        --frames=<frames>            Comma separated list of frames to\n                                     restrict replacement to\n        --frames_skip=<frames>       Comma separated list of frames to skip\n\n    Examples:\n        tagtool replace --pattern='\\s+\\d+\\s+' --repl='' --prune SomeSong.mp3 --frames_skip=TOPE,TIT2\n\n**``remove``**\n\n::\n\n    Remove tag frames.\n\n    Usage:\n        tagtool remove  --frames=<tags> <file>...\n                        [--prefix]\n\n    Options:\n        <file>                       MP3 file(s) to process\n        --frames=<frames>            Comma separated list of frames to remove\n        --prefix                     Consider the list of frames as prefixes\n\n    Examples:\n        tagtool remove --frames=APIC,COMM,USLT *.mp3\n\n**``rename``**\n\n::\n\n    Rename a file with it's track title.\n\n    Usage:\n        tagtool rename <file>...\n\n    Options:\n        <file>                       MP3 file(s) to process\n\n    Examples:\n        tagtool rename *.mp3\n\ntagfix\n------\n\nTagfix is a script that uses the available tagtool commands as building\nblocks and performs multiple cleaning operation on files in one pass. If\nyou download music from sites like `songspk <http://songspk.cc/>`__,\n`djmaza <www.djmaza.info/>`__ etc. then this script is for you. It\nremoves all mention of these websites from the tags.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dufferzafar/tagtool", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "tagtool", "package_url": "https://pypi.org/project/tagtool/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tagtool/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/dufferzafar/tagtool"}, "release_url": "https://pypi.org/project/tagtool/1.0.7/", "requires_dist": null, "requires_python": null, "summary": "Tagtool allows you to perform mass ID3 tag cleaning operations.", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Mass clean metadata of downloaded MP3 songs.</p>\n<p>I wrote the initial version as a <a href=\"https://github.com/dufferzafar/tagtool/blob/old/tagfix.py\" rel=\"nofollow\">simple\nscript</a>\nthat just worked. This tool later became an exercise in command line\napplication design as I\u2019d never done it before. It uses\n<a href=\"http://docopt.org/\" rel=\"nofollow\">docopt</a> (along with some hackery to allow\nsub-commands)</p>\n<div id=\"install\">\n<h2>install</h2>\n<p><tt>pip install tagtool</tt></p>\n<p>You could also use <tt>`pipsi</tt> &lt;<a href=\"https://github.com/mitsuhiko/pipsi\" rel=\"nofollow\">https://github.com/mitsuhiko/pipsi</a>&gt;`__ to\ninstall.</p>\n</div>\n<div id=\"usage\">\n<h2>usage</h2>\n<pre>Usage:\n    tagtool [--no-skip] &lt;command&gt; [&lt;args&gt;...]\n\nCommands:\n    replace     Perform regex replace on tags\n    remove      Remove tag frames\n    rename      Rename files to format: \"%TrackTitle%.mp3\"\n    help        Read about a specific command\n\nOptions:\n    --no-skip   Do not skip already tagged files\n</pre>\n</div>\n<div id=\"commands\">\n<h2>commands</h2>\n<p><strong>``replace``</strong></p>\n<pre>Perform regex replace on tags like artist name, track title etc.\n\nUsage:\n    tagtool replace --pattern=&lt;pattern&gt; [--repl=&lt;replacement&gt;] &lt;file&gt;...\n                    [--prune] [--frames=&lt;tags&gt;] [--frames_skip=&lt;tags&gt;]\n\nOptions:\n    &lt;file&gt;                       MP3 file(s) to process\n    --pattern=&lt;pattern&gt;          Pattern to search for\n    --repl=&lt;replacement&gt;         Replacement text\n    --prune                      Remove empty frames\n    --frames=&lt;frames&gt;            Comma separated list of frames to\n                                 restrict replacement to\n    --frames_skip=&lt;frames&gt;       Comma separated list of frames to skip\n\nExamples:\n    tagtool replace --pattern='\\s+\\d+\\s+' --repl='' --prune SomeSong.mp3 --frames_skip=TOPE,TIT2\n</pre>\n<p><strong>``remove``</strong></p>\n<pre>Remove tag frames.\n\nUsage:\n    tagtool remove  --frames=&lt;tags&gt; &lt;file&gt;...\n                    [--prefix]\n\nOptions:\n    &lt;file&gt;                       MP3 file(s) to process\n    --frames=&lt;frames&gt;            Comma separated list of frames to remove\n    --prefix                     Consider the list of frames as prefixes\n\nExamples:\n    tagtool remove --frames=APIC,COMM,USLT *.mp3\n</pre>\n<p><strong>``rename``</strong></p>\n<pre>Rename a file with it's track title.\n\nUsage:\n    tagtool rename &lt;file&gt;...\n\nOptions:\n    &lt;file&gt;                       MP3 file(s) to process\n\nExamples:\n    tagtool rename *.mp3\n</pre>\n</div>\n<div id=\"tagfix\">\n<h2>tagfix</h2>\n<p>Tagfix is a script that uses the available tagtool commands as building\nblocks and performs multiple cleaning operation on files in one pass. If\nyou download music from sites like <a href=\"http://songspk.cc/\" rel=\"nofollow\">songspk</a>,\n<a href=\"www.djmaza.info/\" rel=\"nofollow\">djmaza</a> etc. then this script is for you. It\nremoves all mention of these websites from the tags.</p>\n</div>\n\n          </div>"}, "last_serial": 1876515, "releases": {"1.0.2": [{"comment_text": "", "digests": {"md5": "ed7e617d8c4607f6250366c41ff71d90", "sha256": "b86a7ec41c101f4c3c2113891507a41d2fe005e35d317d157ed277456497cfaf"}, "downloads": -1, "filename": "tagtool-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ed7e617d8c4607f6250366c41ff71d90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4355, "upload_time": "2015-12-24T09:01:20", "upload_time_iso_8601": "2015-12-24T09:01:20.555502Z", "url": "https://files.pythonhosted.org/packages/f4/a0/7804ee6a0e4b6b2420c09dd227ec64156ac983318731a574874c41d871d8/tagtool-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "42cf7f7780ba2c2fe2b5a95bde8f29cd", "sha256": "18e002e2ea58ff0681dd880db2451f74175cbb8d38732b650615551c92a91581"}, "downloads": -1, "filename": "tagtool-1.0.3.tar.gz", "has_sig": false, "md5_digest": "42cf7f7780ba2c2fe2b5a95bde8f29cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4482, "upload_time": "2015-12-24T09:15:27", "upload_time_iso_8601": "2015-12-24T09:15:27.218372Z", "url": "https://files.pythonhosted.org/packages/94/66/ad04a5ff07e3025599764939815d85a28515d6022143b2497cf970e1cbef/tagtool-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "0fe5dc5a4be112a6f324b9b9388edfd4", "sha256": "7df0f1b4b176aeade810b4ff67b7b487f10b7e832c785550fc95e891f73dd0ae"}, "downloads": -1, "filename": "tagtool-1.0.4.tar.gz", "has_sig": false, "md5_digest": "0fe5dc5a4be112a6f324b9b9388edfd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4534, "upload_time": "2015-12-24T12:28:47", "upload_time_iso_8601": "2015-12-24T12:28:47.439811Z", "url": "https://files.pythonhosted.org/packages/a7/3b/0ac2a3a03b912ba94f55beadadf1dafb168dea399a47ee163bd73001c679/tagtool-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "0c3461eba9783afea63f049d258ccf40", "sha256": "3efcc36bfa78e16b61b20fd6cc3de78b489f30e4bb1ad0bc138195e312cc0a31"}, "downloads": -1, "filename": "tagtool-1.0.5.tar.gz", "has_sig": false, "md5_digest": "0c3461eba9783afea63f049d258ccf40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4599, "upload_time": "2015-12-24T12:34:18", "upload_time_iso_8601": "2015-12-24T12:34:18.470235Z", "url": "https://files.pythonhosted.org/packages/dd/aa/f175297ac8c6fc4452cfa1795ab79d595e0f19836d299dfbc16244e40f0e/tagtool-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "6539ef74001cd2ace9278d1f841d291e", "sha256": "4e88d3309e6c079235a2bd76df122698f9d82d5e49cdfae2ec3865d8be5f6a5d"}, "downloads": -1, "filename": "tagtool-1.0.6.tar.gz", "has_sig": false, "md5_digest": "6539ef74001cd2ace9278d1f841d291e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4610, "upload_time": "2015-12-24T12:47:52", "upload_time_iso_8601": "2015-12-24T12:47:52.732374Z", "url": "https://files.pythonhosted.org/packages/ad/07/839a51047ae53b9dea070dc8ee93bac892e841b9fd39db1c66624dd9a100/tagtool-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "280928813973913a305493bd69c96ad9", "sha256": "5ed36dbe84f62e9e4384c6eae5102e18993c94f6a6424e33d65df4b4b92d2fd6"}, "downloads": -1, "filename": "tagtool-1.0.7.tar.gz", "has_sig": false, "md5_digest": "280928813973913a305493bd69c96ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4623, "upload_time": "2015-12-24T12:59:00", "upload_time_iso_8601": "2015-12-24T12:59:00.794849Z", "url": "https://files.pythonhosted.org/packages/f7/69/343b5afae64bc953f09389187be86fc3b5e139d84872e7f1ebf8007ec9c9/tagtool-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "280928813973913a305493bd69c96ad9", "sha256": "5ed36dbe84f62e9e4384c6eae5102e18993c94f6a6424e33d65df4b4b92d2fd6"}, "downloads": -1, "filename": "tagtool-1.0.7.tar.gz", "has_sig": false, "md5_digest": "280928813973913a305493bd69c96ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4623, "upload_time": "2015-12-24T12:59:00", "upload_time_iso_8601": "2015-12-24T12:59:00.794849Z", "url": "https://files.pythonhosted.org/packages/f7/69/343b5afae64bc953f09389187be86fc3b5e139d84872e7f1ebf8007ec9c9/tagtool-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:26 2020"}