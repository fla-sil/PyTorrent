{"info": {"author": "Taha Dogan Gunes", "author_email": "tdgunes@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pyplyn: One-way only pipeline for data handling\n===============================================\n\n.. image:: https://badge.fury.io/py/pyplyn.svg\n    :target: http://badge.fury.io/py/pyplyn\n\n\n.. image:: https://pypip.in/d/pyplyn/badge.png\n    :target: https://crate.io/packages/pyplyn/\n\n.. image:: https://pypip.in/license/pyplyn/badge.png\n    :target: https://github.com/tdgunes/pyplyn/blob/master/LICENSE\n\nPyplyn is an MIT Licensed simple flow-based data handling structure for making\ndata handling repetitive tasks, easily without repeating yourself for every\ndifferent scenario.\n\nIt is based on Python's lovely generators, so for every data flow into the pipe\nis in an iterative fashion. It is currently used in a research project to handle\nsome repetitive daily tasks. (Moving, filtering, altering the data)\n\nStill the pyplyn module that is used in the project has some dirty but useful\ncomponents like progressbar, ML based classification filter and so on, with this\nsimple library, I think there can be a common simple ground for handling our\nrepetitive tasks.\n\nInstallation\n============\n\nIn order to install pyplyn, just simply::\n\n    pip install pyplyn\n\nOr alternatively, download the package from pypi_, extract and execute::\n\n    python setup.py install\n\n.. _pypi: http://pypi.python.org/pypi/pyplyn\n\nQuick Start\n===========\n\nPyplyn aims to make data handling in a flow based fashion::\n\n    import pyplyn as p\n\n    pipe = p.Pipe()\n    pipe.add(p.LineReader(\"hello.txt\"))\n    pipe.add(p.LambdaFilter(lambda line: len(line) < 50))\n    pipe.add(p.LineWriter(\"small_hello.txt\"))\n    pipe.run()\n\nYou can even write your own Pyp modules as simple as this::\n\n    import pyplyn as p\n    import pymongo\n\n    class MongoCollection(p.InPypElement):\n        def __init__(self, db, collection):\n            self.collection = pymongo.MongoClient()[db][collection]\n        def grasp(self):\n            for document in self.collection:\n                yield document\n\nAdd this new pipe element to your current flow by::\n\n    pipe = p.Pipe()\n    pipe.add(MongoCollection(\"data\",\"raw\"))\n    pipe.add(p.LambdaExtension(lambda document: document[\"text\"])\n    pipe.add(p.LineWriter(\"data_text.txt\"))\n\n..\n\nDocumentation\n=============\nSorry, it is currently not available, but I recommend you to check the source, it is\npretty straightforward for now.\n\nContribute\n==========\nAny contribution is welcome.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tdgunes/pyplyn", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pyplyn", "package_url": "https://pypi.org/project/pyplyn/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyplyn/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tdgunes/pyplyn"}, "release_url": "https://pypi.org/project/pyplyn/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Only one-way pipeline (pyplyn) for data handling in Python", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyplyn-one-way-only-pipeline-for-data-handling\">\n<h2>pyplyn: One-way only pipeline for data handling</h2>\n<a href=\"http://badge.fury.io/py/pyplyn\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/pyplyn.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4a8977f83e28af26f8b6d8ee53e20065cd760db0/68747470733a2f2f62616467652e667572792e696f2f70792f7079706c796e2e737667\"></a>\n<a href=\"https://crate.io/packages/pyplyn/\" rel=\"nofollow\"><img alt=\"https://pypip.in/d/pyplyn/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/559a284ce2f554a926315beaf594d9ef93b85894/68747470733a2f2f70797069702e696e2f642f7079706c796e2f62616467652e706e67\"></a>\n<a href=\"https://github.com/tdgunes/pyplyn/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://pypip.in/license/pyplyn/badge.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/66747311745d20abf022b81154fe80e97547ca62/68747470733a2f2f70797069702e696e2f6c6963656e73652f7079706c796e2f62616467652e706e67\"></a>\n<p>Pyplyn is an MIT Licensed simple flow-based data handling structure for making\ndata handling repetitive tasks, easily without repeating yourself for every\ndifferent scenario.</p>\n<p>It is based on Python\u2019s lovely generators, so for every data flow into the pipe\nis in an iterative fashion. It is currently used in a research project to handle\nsome repetitive daily tasks. (Moving, filtering, altering the data)</p>\n<p>Still the pyplyn module that is used in the project has some dirty but useful\ncomponents like progressbar, ML based classification filter and so on, with this\nsimple library, I think there can be a common simple ground for handling our\nrepetitive tasks.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>In order to install pyplyn, just simply:</p>\n<pre>pip install pyplyn\n</pre>\n<p>Or alternatively, download the package from <a href=\"http://pypi.python.org/pypi/pyplyn\" rel=\"nofollow\">pypi</a>, extract and execute:</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Pyplyn aims to make data handling in a flow based fashion:</p>\n<pre>import pyplyn as p\n\npipe = p.Pipe()\npipe.add(p.LineReader(\"hello.txt\"))\npipe.add(p.LambdaFilter(lambda line: len(line) &lt; 50))\npipe.add(p.LineWriter(\"small_hello.txt\"))\npipe.run()\n</pre>\n<p>You can even write your own Pyp modules as simple as this:</p>\n<pre>import pyplyn as p\nimport pymongo\n\nclass MongoCollection(p.InPypElement):\n    def __init__(self, db, collection):\n        self.collection = pymongo.MongoClient()[db][collection]\n    def grasp(self):\n        for document in self.collection:\n            yield document\n</pre>\n<p>Add this new pipe element to your current flow by:</p>\n<pre>pipe = p.Pipe()\npipe.add(MongoCollection(\"data\",\"raw\"))\npipe.add(p.LambdaExtension(lambda document: document[\"text\"])\npipe.add(p.LineWriter(\"data_text.txt\"))\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Sorry, it is currently not available, but I recommend you to check the source, it is\npretty straightforward for now.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>Any contribution is welcome.</p>\n</div>\n\n          </div>"}, "last_serial": 1148016, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "8a0cf9a80f7a4e1ff5794ce3976df2ba", "sha256": "c11311b854ba7cd7b849b1b815229b0329013954db7392416c57f838530c4d82"}, "downloads": -1, "filename": "pyplyn-0.1.3.macosx-10.9-intel.exe", "has_sig": false, "md5_digest": "8a0cf9a80f7a4e1ff5794ce3976df2ba", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 65903, "upload_time": "2014-07-05T00:51:15", "upload_time_iso_8601": "2014-07-05T00:51:15.922823Z", "url": "https://files.pythonhosted.org/packages/5a/de/ff1e6794cf6b7a27e1da8568d6fb769c92c48b5c543fe203f481895a2b9a/pyplyn-0.1.3.macosx-10.9-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "9dc86bd801460f42376979a86668acac", "sha256": "01020e2ea47a52436018a753e0feb93a0c0c379cc84e96bf6206d14258237cc3"}, "downloads": -1, "filename": "pyplyn-0.1.3.tar.gz", "has_sig": false, "md5_digest": "9dc86bd801460f42376979a86668acac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2726, "upload_time": "2014-07-05T00:51:12", "upload_time_iso_8601": "2014-07-05T00:51:12.771252Z", "url": "https://files.pythonhosted.org/packages/9e/ce/0620dbd0344cb3eb42f2a2c9c556947f4ad292f0054a0187dd51acba53a3/pyplyn-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "333767c9ca9f248dd1ecc63f5affa7b8", "sha256": "d65c7e19559851b6690064945170367c84a27b15490b3fd9b8368e82d4e1d649"}, "downloads": -1, "filename": "pyplyn-0.1.4.macosx-10.9-intel.exe", "has_sig": false, "md5_digest": "333767c9ca9f248dd1ecc63f5affa7b8", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 69453, "upload_time": "2014-07-05T12:48:00", "upload_time_iso_8601": "2014-07-05T12:48:00.482604Z", "url": "https://files.pythonhosted.org/packages/10/76/0fc535c8b42f27f9ef7d8f1e84cb3e386c00576ebc77ea73a683c5b79c5d/pyplyn-0.1.4.macosx-10.9-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba0649881b74c088d4d937442bce213b", "sha256": "18dd47569114e418b9a6fed93021eb2557cad15946f12c4c4a14dcc5084385be"}, "downloads": -1, "filename": "pyplyn-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ba0649881b74c088d4d937442bce213b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3935, "upload_time": "2014-07-05T12:47:17", "upload_time_iso_8601": "2014-07-05T12:47:17.254698Z", "url": "https://files.pythonhosted.org/packages/26/18/364733629d6eae0fc720d25e4f4b8830af9d64d2ed84ee0d1c7cf19c7e25/pyplyn-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "f52382362e240dfd2d5949ee43dfd14f", "sha256": "7446cf5aaa44ad82e424cdb3171fa6cf90624750f50e514ff96c44dde1ef85b6"}, "downloads": -1, "filename": "pyplyn-0.1.5.macosx-10.9-intel.exe", "has_sig": false, "md5_digest": "f52382362e240dfd2d5949ee43dfd14f", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 69454, "upload_time": "2014-07-05T12:51:50", "upload_time_iso_8601": "2014-07-05T12:51:50.377393Z", "url": "https://files.pythonhosted.org/packages/96/7a/72ddb4df342e1b8a7d143729b1594a4354ac0cf61af821cd7284771bd588/pyplyn-0.1.5.macosx-10.9-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd05d15b348b2c038677d319aa4dd59a", "sha256": "e8cecc95d7210eaf6a142ef02176be6df6c8e27e461e50cd20bfb447ee6ae741"}, "downloads": -1, "filename": "pyplyn-0.1.5.tar.gz", "has_sig": false, "md5_digest": "fd05d15b348b2c038677d319aa4dd59a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3940, "upload_time": "2014-07-05T12:51:47", "upload_time_iso_8601": "2014-07-05T12:51:47.004333Z", "url": "https://files.pythonhosted.org/packages/f2/bf/61b5db084551c108c0e775513864f75082ab899ff1a3ecf6e0a8fe5d9120/pyplyn-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f52382362e240dfd2d5949ee43dfd14f", "sha256": "7446cf5aaa44ad82e424cdb3171fa6cf90624750f50e514ff96c44dde1ef85b6"}, "downloads": -1, "filename": "pyplyn-0.1.5.macosx-10.9-intel.exe", "has_sig": false, "md5_digest": "f52382362e240dfd2d5949ee43dfd14f", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 69454, "upload_time": "2014-07-05T12:51:50", "upload_time_iso_8601": "2014-07-05T12:51:50.377393Z", "url": "https://files.pythonhosted.org/packages/96/7a/72ddb4df342e1b8a7d143729b1594a4354ac0cf61af821cd7284771bd588/pyplyn-0.1.5.macosx-10.9-intel.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd05d15b348b2c038677d319aa4dd59a", "sha256": "e8cecc95d7210eaf6a142ef02176be6df6c8e27e461e50cd20bfb447ee6ae741"}, "downloads": -1, "filename": "pyplyn-0.1.5.tar.gz", "has_sig": false, "md5_digest": "fd05d15b348b2c038677d319aa4dd59a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3940, "upload_time": "2014-07-05T12:51:47", "upload_time_iso_8601": "2014-07-05T12:51:47.004333Z", "url": "https://files.pythonhosted.org/packages/f2/bf/61b5db084551c108c0e775513864f75082ab899ff1a3ecf6e0a8fe5d9120/pyplyn-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:22 2020"}