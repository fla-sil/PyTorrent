{"info": {"author": "Christoph Bless", "author_email": "bitbucket@cbless.de", "bugtrack_url": null, "classifiers": [], "description": "This tool provides some scripts to import Nmap and Nessus scan results into a sqlite database.\nThe following console commands are available after installation:\n- scandb-importer\n- scandb-analyzer\n- scandb-genhostportlist\n\n\n## scandb-importer\nThis command can be used do import a single file or many files at once to a sqlite database.\nYou can use the parameters *--file* and *--dir* to specify the files that should be imported.\n\n```\n$ scandb-importer -h\nusage: scandb-importer [-h] [--db DB] [--file [FILE [FILE ...]]] [--dir DIR]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --db DB\n  --file [FILE [FILE ...]]\n                        The nessus and/or nmap file(s)\n  --dir DIR             Directory name with nessus and/or nmap files\n\n```\n\n\n## scandb-analyzer\nThis command can be used to display scan statistics or to generate target lists.\n\n```\n$ scandb-analyzer -h\nusage: scandb-analyzer [-h] [--db DB] [--status STATUS] [--statistics]\n                       [-t PORTS] [-u PORTS] [-o UNION|INTERSECTION] [--list]\n                       [-d LIST_DELIMITER] [--list-file FILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --db DB\n  --status STATUS       Status string stored in database (default: up)\n  --statistics          Print statistics for each scan\n  -t PORTS, --tcp PORTS\n                        TCP ports\n  -u PORTS, --udp PORTS\n                        UDP ports\n  -o UNION|INTERSECTION, --operation UNION|INTERSECTION\n                        Operation to combine the sets of TCP and UDP ports\n                        (default: UNION)\n  --list                Generate a target list\n  -d LIST_DELIMITER, --list-delimiter LIST_DELIMITER\n                        Delimiter used to separate hosts in the list output\n  --list-file FILE      Generate a file with the targets instead of printing\n                        them to stdout\n```\n\nGenerate a list of all hosts (with status 'up'):\n```\n$ scandb-analyzer --list\n192.168.1.2\n192.168.1.1\n192.168.1.11\n192.168.1.19\n```\n\nGenerate a list of all hosts (with status 'up') and use the delimiter \",\" instead of a new line:\n```\n$ scandb-analyzer --list -d \",\"\n192.168.1.2,192.168.1.1,192.168.1.11,192.168.1.19\n```\n\nGenerate a list of hosts with open tcp port 80:\n```\n$ scandb-analyzer --list -d \" \" -t 80\n192.168.1.2 192.168.1.1\n```\n\nGenerate a list of hosts with open udp port 53:\n```\n$ scandb-analyzer --list -d \" \" -u 53\n192.168.1.19 192.168.1.1\n```\n\n\nGenerate a list of hosts with open tcp port 80 or udp port 53:\n```\n$ scandb-analyzer --list -d \" \" -u 53 -t 80\n192.168.1.19 192.168.1.2 192.168.1.1\n```\n\nGenerate a list of hosts with open tcp port 80 and udp port 53:\n```\n$ scandb-analyzer --list -d \" \" -u 53 -t 80 -o intersection\n192.168.1.1\n```\n\n\n\n\n## scandb-genhostportlist\nThis command creates a csv file with all IP addresses and their open ports.\n```\n$ scandb-genhostportlist\nResults written to : hostportlist.csv\n```\n\n```\n192.168.1.1;53;udp\n192.168.1.1;53,80,443,5060,8181;tcp\n192.168.1.19;161;udp\n192.168.1.2;53,80,5060,8089;tcp\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/cbless/scandb", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "scandb", "package_url": "https://pypi.org/project/scandb/", "platform": "", "project_url": "https://pypi.org/project/scandb/", "project_urls": {"Homepage": "https://bitbucket.org/cbless/scandb"}, "release_url": "https://pypi.org/project/scandb/0.3.1/", "requires_dist": ["argparse", "termcolor", "python-libnmap", "python-libnessus", "peewee"], "requires_python": "", "summary": "Scripts to import nmap and nessus scans into an sqlite database.", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This tool provides some scripts to import Nmap and Nessus scan results into a sqlite database.\nThe following console commands are available after installation:</p>\n<ul>\n<li>scandb-importer</li>\n<li>scandb-analyzer</li>\n<li>scandb-genhostportlist</li>\n</ul>\n<h2>scandb-importer</h2>\n<p>This command can be used do import a single file or many files at once to a sqlite database.\nYou can use the parameters <em>--file</em> and <em>--dir</em> to specify the files that should be imported.</p>\n<pre><code>$ scandb-importer -h\nusage: scandb-importer [-h] [--db DB] [--file [FILE [FILE ...]]] [--dir DIR]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --db DB\n  --file [FILE [FILE ...]]\n                        The nessus and/or nmap file(s)\n  --dir DIR             Directory name with nessus and/or nmap files\n\n</code></pre>\n<h2>scandb-analyzer</h2>\n<p>This command can be used to display scan statistics or to generate target lists.</p>\n<pre><code>$ scandb-analyzer -h\nusage: scandb-analyzer [-h] [--db DB] [--status STATUS] [--statistics]\n                       [-t PORTS] [-u PORTS] [-o UNION|INTERSECTION] [--list]\n                       [-d LIST_DELIMITER] [--list-file FILE]\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --db DB\n  --status STATUS       Status string stored in database (default: up)\n  --statistics          Print statistics for each scan\n  -t PORTS, --tcp PORTS\n                        TCP ports\n  -u PORTS, --udp PORTS\n                        UDP ports\n  -o UNION|INTERSECTION, --operation UNION|INTERSECTION\n                        Operation to combine the sets of TCP and UDP ports\n                        (default: UNION)\n  --list                Generate a target list\n  -d LIST_DELIMITER, --list-delimiter LIST_DELIMITER\n                        Delimiter used to separate hosts in the list output\n  --list-file FILE      Generate a file with the targets instead of printing\n                        them to stdout\n</code></pre>\n<p>Generate a list of all hosts (with status 'up'):</p>\n<pre><code>$ scandb-analyzer --list\n192.168.1.2\n192.168.1.1\n192.168.1.11\n192.168.1.19\n</code></pre>\n<p>Generate a list of all hosts (with status 'up') and use the delimiter \",\" instead of a new line:</p>\n<pre><code>$ scandb-analyzer --list -d \",\"\n192.168.1.2,192.168.1.1,192.168.1.11,192.168.1.19\n</code></pre>\n<p>Generate a list of hosts with open tcp port 80:</p>\n<pre><code>$ scandb-analyzer --list -d \" \" -t 80\n192.168.1.2 192.168.1.1\n</code></pre>\n<p>Generate a list of hosts with open udp port 53:</p>\n<pre><code>$ scandb-analyzer --list -d \" \" -u 53\n192.168.1.19 192.168.1.1\n</code></pre>\n<p>Generate a list of hosts with open tcp port 80 or udp port 53:</p>\n<pre><code>$ scandb-analyzer --list -d \" \" -u 53 -t 80\n192.168.1.19 192.168.1.2 192.168.1.1\n</code></pre>\n<p>Generate a list of hosts with open tcp port 80 and udp port 53:</p>\n<pre><code>$ scandb-analyzer --list -d \" \" -u 53 -t 80 -o intersection\n192.168.1.1\n</code></pre>\n<h2>scandb-genhostportlist</h2>\n<p>This command creates a csv file with all IP addresses and their open ports.</p>\n<pre><code>$ scandb-genhostportlist\nResults written to : hostportlist.csv\n</code></pre>\n<pre><code>192.168.1.1;53;udp\n192.168.1.1;53,80,443,5060,8181;tcp\n192.168.1.19;161;udp\n192.168.1.2;53,80,5060,8089;tcp\n</code></pre>\n\n          </div>"}, "last_serial": 5843472, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "1c69218931a9f504280e3e087751f7be", "sha256": "315314ea486016c7d03ed86dc40e8f9d47e9566e07077a19cee209fc4d10aa90"}, "downloads": -1, "filename": "scandb-0.3.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "1c69218931a9f504280e3e087751f7be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12530, "upload_time": "2019-09-17T19:02:06", "upload_time_iso_8601": "2019-09-17T19:02:06.998783Z", "url": "https://files.pythonhosted.org/packages/19/a1/f3115a6cd6c8fbeddea8377840c964b4d97bc83e8ba757e6c6ec7b61263b/scandb-0.3.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b14d73ef8139d5af5799a30b84e5c6c9", "sha256": "af6dfcd5ba00e8c6adce42f6348a9f0a97fc18fb32a10802c6781588df27d319"}, "downloads": -1, "filename": "scandb-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b14d73ef8139d5af5799a30b84e5c6c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9554, "upload_time": "2019-09-17T19:02:03", "upload_time_iso_8601": "2019-09-17T19:02:03.131829Z", "url": "https://files.pythonhosted.org/packages/a5/b2/4b6e6ee89949a4910c52a2f005ffbdfb3e20c51d7bf017ed42da86916cb1/scandb-0.3.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c69218931a9f504280e3e087751f7be", "sha256": "315314ea486016c7d03ed86dc40e8f9d47e9566e07077a19cee209fc4d10aa90"}, "downloads": -1, "filename": "scandb-0.3.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "1c69218931a9f504280e3e087751f7be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12530, "upload_time": "2019-09-17T19:02:06", "upload_time_iso_8601": "2019-09-17T19:02:06.998783Z", "url": "https://files.pythonhosted.org/packages/19/a1/f3115a6cd6c8fbeddea8377840c964b4d97bc83e8ba757e6c6ec7b61263b/scandb-0.3.1.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "b14d73ef8139d5af5799a30b84e5c6c9", "sha256": "af6dfcd5ba00e8c6adce42f6348a9f0a97fc18fb32a10802c6781588df27d319"}, "downloads": -1, "filename": "scandb-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b14d73ef8139d5af5799a30b84e5c6c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9554, "upload_time": "2019-09-17T19:02:03", "upload_time_iso_8601": "2019-09-17T19:02:03.131829Z", "url": "https://files.pythonhosted.org/packages/a5/b2/4b6e6ee89949a4910c52a2f005ffbdfb3e20c51d7bf017ed42da86916cb1/scandb-0.3.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:58:06 2020"}