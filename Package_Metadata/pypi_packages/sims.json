{"info": {"author": "Zan Peeters", "author_email": "me@example.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "# sims\n\nPython module to read Cameca (nano)SIMS data files.\n\n## Highlights\n\n-   Read in data from Cameca SIMS or nanoSIMS files, making the data directly accessible in the Python science stack (numpy/pandas/xarray/matplotlib).\n\n-   Read in the **complete** header of the file. Get access to every setting of the machine recorded at the time of the experiment. No other software can do this, to my knowledge.\n\n-   Read in *almost* **every** file the Cameca software can produce. Besides the usual data files (.im image files and .is 'isotope' or spot files), the software produces a host of other files. To name a few:\n\n    * High Mass Resolution scans (.hmr)\n    * Secondary Ion Beam Centering scans (.sib)\n    * Pulse Height Distribution scans (.phd)\n    * E0S Centering scans (.e0s)\n    * Energy scans (.nrj)\n    * Beam Stability traces (.bs)\n    * and many more!\n\n    Most of these can be read by the sims module. Support for more files is added whenever possible. No other software can do this, to my knowledge.\n\n-   Reading data directly from **compressed** files. Especially the .im image files tend to take up a lot of space, even if the majority of the data is zeros. They can compress down to as much as 90 % of their original size. sims supports reading directly from files compressed with gzip, bzip2, xz, lzma, 7zip, and zip. You can also combine multiple files in a multifile archive with tar, zip, or 7zip and read some or all files directly from that.\n\n-   It's open source and free, allowing you to see exactly how calculations and data transformations were done. This is in stark contrast with other, closed-source programs, where you have to just trust that the writers of those programs implemented everything correctly. You can not see how they did it exactly, because they won't let you see inside the code. This program is completely open! Look how things are done and if you don't like it, improve!\n\n## What's new\n\n### v2.0.0\n\nSince version 0.25 pandas no longer supports 4DPanel and Panel. sims has switched to using xarray, the recommended \ndata structure for multi-dimensional data. Xarray is in a large part based on pandas and the syntax for accessing data is almost identical. See [xarray](https://xarray.pydata.org/en/stable/) for more information.\n\nVersion 2.0 of sims also dropped support for Python 2.x. Python 3.4 or newer is now required.\n\n### v1.0.0\n\nThis version supports Python 2.7 and uses pandas as the data structure. Use this version if you need support for either.\n\n## Installation\n\nRequirements to install this Python module:\n\n-   Python 3.4 or newer\n-   xarray\n-   scipy\n-   scikit-image\n-   matplotlib\n\nTo install, simply run from the command line:\n\n```shell\n$ pip install sims\n```\n\n## Getting started\n\nOnce you have sims installed, you can start working with nanoSIMS files.\n\n```python\n[1]: import matplotlib.pyplot as plt\n[2]: import sims\n\n[3]: s = sims.SIMS('data_file.im')\n\n[4]: s.data\n<xarray.DataArray (species: 8, frame: 25, y: 256, x: 256)>\narray([[[[411, ..., 159],\n         ...,\n         [325, ..., 398]],\n\n        ...,\n        [[ 30, ...,   1],\n         ...,\n         [  0, ...,   0]]]], dtype=uint16)\nCoordinates:\n  * species  (species) <U7 '12C' '16O' '17O' '18O' ... 'SE' '12C 15N' '28Si'\nDimensions without coordinates: frame, y, x\nAttributes:\n    unit:     counts\n\n# Select the first frame (0) of mass 12C\n[5]: s.data.loc['12C', 0]\n<xarray.DataArray (y: 256, x: 256)>\narray([[411,  86, 113, ..., 188, 138, 159],\n       [114,  73,  79, ...,  82,  96,  96],\n       [ 91,  70, 117, ...,  58,  53,  55],\n       ...,\n       [341,  32,  16, ..., 251, 313, 317],\n       [316,  31,  37, ..., 221, 314, 368],\n       [325,  21,  26, ..., 210, 325, 398]], dtype=uint16)\nCoordinates:\n    species  <U7 '12C'\nDimensions without coordinates: y, x\nAttributes:\n    unit:     counts\n\n# Align the image stack\n[6]: aligned_data, shifts = sims.utils.align(s)\n\n# Display total counts of aligned mass 12C as an image\n[7]: plt.imshow(aligned_data.loc['12C'].sum(dim='frame'))\n[8]: cbar = plt.colorbar()\n# The unit of the data is stored in the attributed dictionary\n[9]: cbar.set_label(s.data.attrs['unit'])\n[10]: plt.xlabel('X (pixels)')\n[11]: plt.ylabel('Y (pixels)')\n# There is a list of formatted labels for pretty printing in the header\n[12]: plt.title(s.header['label list fmt'][0])\n```\n\n<img src=\"https://raw.githubusercontent.com/zanpeeters/sims/master/example.png\"\n style=\"width: 70%; margin: auto; display: block;\">\n\n```python\n# Show the header\n[13]: s.header\n... # too big to show here\n\n# Show a small portion of the header\n[14]: s.header['BFields'][0]\n{'b field enabled': True,\n 'b field bits': 856507,\n 'wait time': 0.0,\n 'time per pixel': 0.0075,\n 'time per step': 20.0,\n 'wait time computed': False,\n 'E0W offset': -13,\n 'Q': 389,\n 'LF4': 1601,\n 'hex val': 575,\n 'frames per bfield': 1,\n 'Trolleys': [{\n   'label': '12C',\n   'mass': 12.004397767933469,\n   'radius': 442.47767499881127,\n   'deflection plate 1': -68,\n   'deflection plate 2': 67,\n   'detector': 'EM',\n   'exit slit': 268850,\n   'real trolley': True,\n   'cameca trolley index': 0,\n   'peakcenter index': 1,\n   'peakcenter follow': 1,\n   'focus': 0.0,\n   'hmr start': -16.996336996336996,\n   'start dac plate 1': -68,\n   'start dac plate 2': 67,\n   'hmr step': 4,\n   'hmr points': 50,\n   'hmr count time': 0.54,\n   'used for baseline': False,\n   '50% width': 95.616,\n   'peakcenter side': 'both',\n   'peakcenter count time': 0.54,\n   'used for sib center': False,\n   'unit correction': 0,\n   'deflection': -9.963369963369964,\n   'used for energy center': False,\n   'used for E0S center': False,\n   'trolley enabled': True,\n   'used for phd scan': False,\n   'phd start': 3995,\n   'phd step size': -30,\n   'phd points': 30,\n   'phd count time': 0.54,\n   'phd scan repeat': 3,\n   'trolley label': 'Trolley 1',\n   'detector label': 'Detector 1'},\n  ... # Skipped all the other trolleys\n  ],\n 'counting frame time': 491.52,\n 'scanning frame time': 491.52,\n 'working frame time': 491.52}\n\n# Export header to JSON (text) format\n[19]: sims.utils.export_header(s, filename='header.txt')\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zanpeeters/sims", "keywords": "sims nanosims mass-spectrometry Cameca file-format", "license": "BSD 3-Clause Clear", "maintainer": "", "maintainer_email": "", "name": "sims", "package_url": "https://pypi.org/project/sims/", "platform": "", "project_url": "https://pypi.org/project/sims/", "project_urls": {"Homepage": "https://github.com/zanpeeters/sims"}, "release_url": "https://pypi.org/project/sims/2.0.0/", "requires_dist": ["matplotlib", "scikit-image", "scipy", "xarray"], "requires_python": ">=3.4", "summary": "Python module to read Cameca (nano)SIMS data files.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>sims</h1>\n<p>Python module to read Cameca (nano)SIMS data files.</p>\n<h2>Highlights</h2>\n<ul>\n<li>\n<p>Read in data from Cameca SIMS or nanoSIMS files, making the data directly accessible in the Python science stack (numpy/pandas/xarray/matplotlib).</p>\n</li>\n<li>\n<p>Read in the <strong>complete</strong> header of the file. Get access to every setting of the machine recorded at the time of the experiment. No other software can do this, to my knowledge.</p>\n</li>\n<li>\n<p>Read in <em>almost</em> <strong>every</strong> file the Cameca software can produce. Besides the usual data files (.im image files and .is 'isotope' or spot files), the software produces a host of other files. To name a few:</p>\n<ul>\n<li>High Mass Resolution scans (.hmr)</li>\n<li>Secondary Ion Beam Centering scans (.sib)</li>\n<li>Pulse Height Distribution scans (.phd)</li>\n<li>E0S Centering scans (.e0s)</li>\n<li>Energy scans (.nrj)</li>\n<li>Beam Stability traces (.bs)</li>\n<li>and many more!</li>\n</ul>\n<p>Most of these can be read by the sims module. Support for more files is added whenever possible. No other software can do this, to my knowledge.</p>\n</li>\n<li>\n<p>Reading data directly from <strong>compressed</strong> files. Especially the .im image files tend to take up a lot of space, even if the majority of the data is zeros. They can compress down to as much as 90 % of their original size. sims supports reading directly from files compressed with gzip, bzip2, xz, lzma, 7zip, and zip. You can also combine multiple files in a multifile archive with tar, zip, or 7zip and read some or all files directly from that.</p>\n</li>\n<li>\n<p>It's open source and free, allowing you to see exactly how calculations and data transformations were done. This is in stark contrast with other, closed-source programs, where you have to just trust that the writers of those programs implemented everything correctly. You can not see how they did it exactly, because they won't let you see inside the code. This program is completely open! Look how things are done and if you don't like it, improve!</p>\n</li>\n</ul>\n<h2>What's new</h2>\n<h3>v2.0.0</h3>\n<p>Since version 0.25 pandas no longer supports 4DPanel and Panel. sims has switched to using xarray, the recommended\ndata structure for multi-dimensional data. Xarray is in a large part based on pandas and the syntax for accessing data is almost identical. See <a href=\"https://xarray.pydata.org/en/stable/\" rel=\"nofollow\">xarray</a> for more information.</p>\n<p>Version 2.0 of sims also dropped support for Python 2.x. Python 3.4 or newer is now required.</p>\n<h3>v1.0.0</h3>\n<p>This version supports Python 2.7 and uses pandas as the data structure. Use this version if you need support for either.</p>\n<h2>Installation</h2>\n<p>Requirements to install this Python module:</p>\n<ul>\n<li>Python 3.4 or newer</li>\n<li>xarray</li>\n<li>scipy</li>\n<li>scikit-image</li>\n<li>matplotlib</li>\n</ul>\n<p>To install, simply run from the command line:</p>\n<pre>$ pip install sims\n</pre>\n<h2>Getting started</h2>\n<p>Once you have sims installed, you can start working with nanoSIMS files.</p>\n<pre><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]:</span> <span class=\"kn\">import</span> <span class=\"nn\">sims</span>\n\n<span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]:</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">sims</span><span class=\"o\">.</span><span class=\"n\">SIMS</span><span class=\"p\">(</span><span class=\"s1\">'data_file.im'</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">]:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">:</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">256</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"n\">array</span><span class=\"p\">([[[[</span><span class=\"mi\">411</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">159</span><span class=\"p\">],</span>\n         <span class=\"o\">...</span><span class=\"p\">,</span>\n         <span class=\"p\">[</span><span class=\"mi\">325</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">398</span><span class=\"p\">]],</span>\n\n        <span class=\"o\">...</span><span class=\"p\">,</span>\n        <span class=\"p\">[[</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span>   <span class=\"mi\">1</span><span class=\"p\">],</span>\n         <span class=\"o\">...</span><span class=\"p\">,</span>\n         <span class=\"p\">[</span>  <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span>   <span class=\"mi\">0</span><span class=\"p\">]]]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint16</span><span class=\"p\">)</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n  <span class=\"o\">*</span> <span class=\"n\">species</span>  <span class=\"p\">(</span><span class=\"n\">species</span><span class=\"p\">)</span> <span class=\"o\">&lt;</span><span class=\"n\">U7</span> <span class=\"s1\">'12C'</span> <span class=\"s1\">'16O'</span> <span class=\"s1\">'17O'</span> <span class=\"s1\">'18O'</span> <span class=\"o\">...</span> <span class=\"s1\">'SE'</span> <span class=\"s1\">'12C 15N'</span> <span class=\"s1\">'28Si'</span>\n<span class=\"n\">Dimensions</span> <span class=\"n\">without</span> <span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span>\n<span class=\"n\">Attributes</span><span class=\"p\">:</span>\n    <span class=\"n\">unit</span><span class=\"p\">:</span>     <span class=\"n\">counts</span>\n\n<span class=\"c1\"># Select the first frame (0) of mass 12C</span>\n<span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">]:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">'12C'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">DataArray</span> <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">256</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">256</span><span class=\"p\">)</span><span class=\"o\">&gt;</span>\n<span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"mi\">411</span><span class=\"p\">,</span>  <span class=\"mi\">86</span><span class=\"p\">,</span> <span class=\"mi\">113</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">188</span><span class=\"p\">,</span> <span class=\"mi\">138</span><span class=\"p\">,</span> <span class=\"mi\">159</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mi\">114</span><span class=\"p\">,</span>  <span class=\"mi\">73</span><span class=\"p\">,</span>  <span class=\"mi\">79</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span>  <span class=\"mi\">82</span><span class=\"p\">,</span>  <span class=\"mi\">96</span><span class=\"p\">,</span>  <span class=\"mi\">96</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span> <span class=\"mi\">91</span><span class=\"p\">,</span>  <span class=\"mi\">70</span><span class=\"p\">,</span> <span class=\"mi\">117</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span>  <span class=\"mi\">58</span><span class=\"p\">,</span>  <span class=\"mi\">53</span><span class=\"p\">,</span>  <span class=\"mi\">55</span><span class=\"p\">],</span>\n       <span class=\"o\">...</span><span class=\"p\">,</span>\n       <span class=\"p\">[</span><span class=\"mi\">341</span><span class=\"p\">,</span>  <span class=\"mi\">32</span><span class=\"p\">,</span>  <span class=\"mi\">16</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">251</span><span class=\"p\">,</span> <span class=\"mi\">313</span><span class=\"p\">,</span> <span class=\"mi\">317</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mi\">316</span><span class=\"p\">,</span>  <span class=\"mi\">31</span><span class=\"p\">,</span>  <span class=\"mi\">37</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">221</span><span class=\"p\">,</span> <span class=\"mi\">314</span><span class=\"p\">,</span> <span class=\"mi\">368</span><span class=\"p\">],</span>\n       <span class=\"p\">[</span><span class=\"mi\">325</span><span class=\"p\">,</span>  <span class=\"mi\">21</span><span class=\"p\">,</span>  <span class=\"mi\">26</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">210</span><span class=\"p\">,</span> <span class=\"mi\">325</span><span class=\"p\">,</span> <span class=\"mi\">398</span><span class=\"p\">]],</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"n\">uint16</span><span class=\"p\">)</span>\n<span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n    <span class=\"n\">species</span>  <span class=\"o\">&lt;</span><span class=\"n\">U7</span> <span class=\"s1\">'12C'</span>\n<span class=\"n\">Dimensions</span> <span class=\"n\">without</span> <span class=\"n\">coordinates</span><span class=\"p\">:</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">x</span>\n<span class=\"n\">Attributes</span><span class=\"p\">:</span>\n    <span class=\"n\">unit</span><span class=\"p\">:</span>     <span class=\"n\">counts</span>\n\n<span class=\"c1\"># Align the image stack</span>\n<span class=\"p\">[</span><span class=\"mi\">6</span><span class=\"p\">]:</span> <span class=\"n\">aligned_data</span><span class=\"p\">,</span> <span class=\"n\">shifts</span> <span class=\"o\">=</span> <span class=\"n\">sims</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">align</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Display total counts of aligned mass 12C as an image</span>\n<span class=\"p\">[</span><span class=\"mi\">7</span><span class=\"p\">]:</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"n\">aligned_data</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">'12C'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sum</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"s1\">'frame'</span><span class=\"p\">))</span>\n<span class=\"p\">[</span><span class=\"mi\">8</span><span class=\"p\">]:</span> <span class=\"n\">cbar</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">colorbar</span><span class=\"p\">()</span>\n<span class=\"c1\"># The unit of the data is stored in the attributed dictionary</span>\n<span class=\"p\">[</span><span class=\"mi\">9</span><span class=\"p\">]:</span> <span class=\"n\">cbar</span><span class=\"o\">.</span><span class=\"n\">set_label</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">attrs</span><span class=\"p\">[</span><span class=\"s1\">'unit'</span><span class=\"p\">])</span>\n<span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">]:</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s1\">'X (pixels)'</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"mi\">11</span><span class=\"p\">]:</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Y (pixels)'</span><span class=\"p\">)</span>\n<span class=\"c1\"># There is a list of formatted labels for pretty printing in the header</span>\n<span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">]:</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">title</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">[</span><span class=\"s1\">'label list fmt'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n</pre>\n<p><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b43badf51f725bb4701ea66500ea02dc8aada76a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7a616e706565746572732f73696d732f6d61737465722f6578616d706c652e706e67\"></p>\n<pre><span class=\"c1\"># Show the header</span>\n<span class=\"p\">[</span><span class=\"mi\">13</span><span class=\"p\">]:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">header</span>\n<span class=\"o\">...</span> <span class=\"c1\"># too big to show here</span>\n\n<span class=\"c1\"># Show a small portion of the header</span>\n<span class=\"p\">[</span><span class=\"mi\">14</span><span class=\"p\">]:</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">header</span><span class=\"p\">[</span><span class=\"s1\">'BFields'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"p\">{</span><span class=\"s1\">'b field enabled'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n <span class=\"s1\">'b field bits'</span><span class=\"p\">:</span> <span class=\"mi\">856507</span><span class=\"p\">,</span>\n <span class=\"s1\">'wait time'</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span>\n <span class=\"s1\">'time per pixel'</span><span class=\"p\">:</span> <span class=\"mf\">0.0075</span><span class=\"p\">,</span>\n <span class=\"s1\">'time per step'</span><span class=\"p\">:</span> <span class=\"mf\">20.0</span><span class=\"p\">,</span>\n <span class=\"s1\">'wait time computed'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n <span class=\"s1\">'E0W offset'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">13</span><span class=\"p\">,</span>\n <span class=\"s1\">'Q'</span><span class=\"p\">:</span> <span class=\"mi\">389</span><span class=\"p\">,</span>\n <span class=\"s1\">'LF4'</span><span class=\"p\">:</span> <span class=\"mi\">1601</span><span class=\"p\">,</span>\n <span class=\"s1\">'hex val'</span><span class=\"p\">:</span> <span class=\"mi\">575</span><span class=\"p\">,</span>\n <span class=\"s1\">'frames per bfield'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n <span class=\"s1\">'Trolleys'</span><span class=\"p\">:</span> <span class=\"p\">[{</span>\n   <span class=\"s1\">'label'</span><span class=\"p\">:</span> <span class=\"s1\">'12C'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'mass'</span><span class=\"p\">:</span> <span class=\"mf\">12.004397767933469</span><span class=\"p\">,</span>\n   <span class=\"s1\">'radius'</span><span class=\"p\">:</span> <span class=\"mf\">442.47767499881127</span><span class=\"p\">,</span>\n   <span class=\"s1\">'deflection plate 1'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">68</span><span class=\"p\">,</span>\n   <span class=\"s1\">'deflection plate 2'</span><span class=\"p\">:</span> <span class=\"mi\">67</span><span class=\"p\">,</span>\n   <span class=\"s1\">'detector'</span><span class=\"p\">:</span> <span class=\"s1\">'EM'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'exit slit'</span><span class=\"p\">:</span> <span class=\"mi\">268850</span><span class=\"p\">,</span>\n   <span class=\"s1\">'real trolley'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n   <span class=\"s1\">'cameca trolley index'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n   <span class=\"s1\">'peakcenter index'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n   <span class=\"s1\">'peakcenter follow'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n   <span class=\"s1\">'focus'</span><span class=\"p\">:</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span>\n   <span class=\"s1\">'hmr start'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">16.996336996336996</span><span class=\"p\">,</span>\n   <span class=\"s1\">'start dac plate 1'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">68</span><span class=\"p\">,</span>\n   <span class=\"s1\">'start dac plate 2'</span><span class=\"p\">:</span> <span class=\"mi\">67</span><span class=\"p\">,</span>\n   <span class=\"s1\">'hmr step'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span>\n   <span class=\"s1\">'hmr points'</span><span class=\"p\">:</span> <span class=\"mi\">50</span><span class=\"p\">,</span>\n   <span class=\"s1\">'hmr count time'</span><span class=\"p\">:</span> <span class=\"mf\">0.54</span><span class=\"p\">,</span>\n   <span class=\"s1\">'used for baseline'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n   <span class=\"s1\">'50% width'</span><span class=\"p\">:</span> <span class=\"mf\">95.616</span><span class=\"p\">,</span>\n   <span class=\"s1\">'peakcenter side'</span><span class=\"p\">:</span> <span class=\"s1\">'both'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'peakcenter count time'</span><span class=\"p\">:</span> <span class=\"mf\">0.54</span><span class=\"p\">,</span>\n   <span class=\"s1\">'used for sib center'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n   <span class=\"s1\">'unit correction'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n   <span class=\"s1\">'deflection'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">9.963369963369964</span><span class=\"p\">,</span>\n   <span class=\"s1\">'used for energy center'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n   <span class=\"s1\">'used for E0S center'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n   <span class=\"s1\">'trolley enabled'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n   <span class=\"s1\">'used for phd scan'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n   <span class=\"s1\">'phd start'</span><span class=\"p\">:</span> <span class=\"mi\">3995</span><span class=\"p\">,</span>\n   <span class=\"s1\">'phd step size'</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">30</span><span class=\"p\">,</span>\n   <span class=\"s1\">'phd points'</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n   <span class=\"s1\">'phd count time'</span><span class=\"p\">:</span> <span class=\"mf\">0.54</span><span class=\"p\">,</span>\n   <span class=\"s1\">'phd scan repeat'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n   <span class=\"s1\">'trolley label'</span><span class=\"p\">:</span> <span class=\"s1\">'Trolley 1'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'detector label'</span><span class=\"p\">:</span> <span class=\"s1\">'Detector 1'</span><span class=\"p\">},</span>\n  <span class=\"o\">...</span> <span class=\"c1\"># Skipped all the other trolleys</span>\n  <span class=\"p\">],</span>\n <span class=\"s1\">'counting frame time'</span><span class=\"p\">:</span> <span class=\"mf\">491.52</span><span class=\"p\">,</span>\n <span class=\"s1\">'scanning frame time'</span><span class=\"p\">:</span> <span class=\"mf\">491.52</span><span class=\"p\">,</span>\n <span class=\"s1\">'working frame time'</span><span class=\"p\">:</span> <span class=\"mf\">491.52</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Export header to JSON (text) format</span>\n<span class=\"p\">[</span><span class=\"mi\">19</span><span class=\"p\">]:</span> <span class=\"n\">sims</span><span class=\"o\">.</span><span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">export_header</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'header.txt'</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5788253, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "29efe1a180689c21284b37008b003c0c", "sha256": "61166a66e707d83fbae142897ac1ee4d170f3680ad308c1373403c6cc38b40ae"}, "downloads": -1, "filename": "sims-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "29efe1a180689c21284b37008b003c0c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 46547, "upload_time": "2019-09-05T20:24:54", "upload_time_iso_8601": "2019-09-05T20:24:54.836973Z", "url": "https://files.pythonhosted.org/packages/e2/07/5d26eaedb3f93ce4d188a5e3c458a2802df5818044cda073ad33006133d4/sims-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "290e86603e074cd614495bc313df26b6", "sha256": "2a41421c6241203be87ba5b77567914e383d71bf8f05e10413156c7b2d7bf7e3"}, "downloads": -1, "filename": "sims-1.0.0.tar.gz", "has_sig": false, "md5_digest": "290e86603e074cd614495bc313df26b6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40848, "upload_time": "2019-09-05T20:24:57", "upload_time_iso_8601": "2019-09-05T20:24:57.347595Z", "url": "https://files.pythonhosted.org/packages/d8/19/98c96149f5267e315b8db5a4dc1043b02d6e41758bf147c43b069498ea86/sims-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "583291cff18296a5fc231d565e26bd5e", "sha256": "a5b19d918bcba81d26f7fd4f9fe4bb9f7c13ff62efdb8b7dee6ae19e51138a8b"}, "downloads": -1, "filename": "sims-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "583291cff18296a5fc231d565e26bd5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 49126, "upload_time": "2019-09-05T20:24:18", "upload_time_iso_8601": "2019-09-05T20:24:18.036826Z", "url": "https://files.pythonhosted.org/packages/2c/60/42e52edd53121d2444e239867467dcc366d84ff2638a7e6aaa0276cd5d88/sims-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ce0277bdcca9f55cd3da45ce57f8d06", "sha256": "ce4a644222560a13a859772729af238625dfa760b450db05f2f88598f1a5ee00"}, "downloads": -1, "filename": "sims-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3ce0277bdcca9f55cd3da45ce57f8d06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 210866, "upload_time": "2019-09-05T20:24:21", "upload_time_iso_8601": "2019-09-05T20:24:21.520846Z", "url": "https://files.pythonhosted.org/packages/65/79/b8f5b1310f79624228e722ff5dd6d7d4699b5869fe6ebb8d3f5b3a9c56cb/sims-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "583291cff18296a5fc231d565e26bd5e", "sha256": "a5b19d918bcba81d26f7fd4f9fe4bb9f7c13ff62efdb8b7dee6ae19e51138a8b"}, "downloads": -1, "filename": "sims-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "583291cff18296a5fc231d565e26bd5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4", "size": 49126, "upload_time": "2019-09-05T20:24:18", "upload_time_iso_8601": "2019-09-05T20:24:18.036826Z", "url": "https://files.pythonhosted.org/packages/2c/60/42e52edd53121d2444e239867467dcc366d84ff2638a7e6aaa0276cd5d88/sims-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ce0277bdcca9f55cd3da45ce57f8d06", "sha256": "ce4a644222560a13a859772729af238625dfa760b450db05f2f88598f1a5ee00"}, "downloads": -1, "filename": "sims-2.0.0.tar.gz", "has_sig": false, "md5_digest": "3ce0277bdcca9f55cd3da45ce57f8d06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 210866, "upload_time": "2019-09-05T20:24:21", "upload_time_iso_8601": "2019-09-05T20:24:21.520846Z", "url": "https://files.pythonhosted.org/packages/65/79/b8f5b1310f79624228e722ff5dd6d7d4699b5869fe6ebb8d3f5b3a9c56cb/sims-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:39 2020"}