{"info": {"author": "neka-nat", "author_email": "nekanat.stock@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# ![logo](https://raw.githubusercontent.com/neka-nat/probreg/master/images/logo.png)\n[![Build Status](https://travis-ci.org/neka-nat/probreg.svg?branch=master)](https://travis-ci.org/neka-nat/probreg)\n[![Build status](https://ci.appveyor.com/api/projects/status/mdoohms52gnq6law?svg=true)](https://ci.appveyor.com/project/neka-nat/probreg)\n[![PyPI version](https://badge.fury.io/py/probreg.svg)](https://badge.fury.io/py/probreg)\n[![MIT License](http://img.shields.io/badge/license-MIT-blue.svg?style=flat)](LICENSE)\n[![Documentation Status](https://readthedocs.org/projects/probreg/badge/?version=latest)](https://probreg.readthedocs.io/en/latest/?badge=latest)\n[![Downloads](https://pepy.tech/badge/probreg)](https://pepy.tech/project/probreg)\n\nProbreg is a library that implements point cloud **reg**istration algorithms with **prob**ablistic model.\n\nThe point set registration algorithms using stochastic model are more robust than ICP(Iterative Closest Point).\nThis package implements several algorithms using stochastic models and provides a simple interface with [Open3D](http://www.open3d.org/).\n\n## Core features\n\n* Open3D interface\n* Rigid and non-rigid transformation\n\n## Algorithms\n\n* Maximum likelihood when the target or source point cloud is observation data\n    * [Coherent Point Drift(2010)](https://arxiv.org/pdf/0905.2635.pdf)\n    * [FilterReg(CVPR2019)](https://arxiv.org/pdf/1811.10136.pdf)\n* Distance minimization of two probabilistic distributions\n    * [GMMReg(2011)](https://ieeexplore.ieee.org/document/5674050)\n    * [Support Vector Registration(2015)](https://arxiv.org/pdf/1511.04240.pdf)\n* Hierarchical Stocastic model\n    * [GMMTree(ECCV2018)](https://arxiv.org/pdf/1807.02587.pdf)\n\n### Transformations\n\n| type | CPD | SVR, GMMReg | GMMTree | FilterReg |\n|------|-----|-------------|---------|-----------|\n|Rigid | **Scale + 6D pose** | **6D pose** | **6D pose** | **6D pose** </br> (Point-to-point,</br> Point-to-plane,</br> FPFH-based)|\n|NonRigid | **Affine**, **MCT** | **TPS** | - | **Deformable Kinematic** </br> (experimental) |\n\n## Installation\n\nYou can install probreg using `pip`.\n\n```\npip install probreg\n```\n\nOr install probreg from source.\n\n```\ngit clone https://github.com/neka-nat/probreg.git --recursive\ncd probreg\npip install -e .\n```\n\n## Getting Started\n\nThis is a sample code that reads a PCD file and calls CPD registration.\nYou can easily execute registrations from Open3D point cloud object and draw the results.\n\n```py\nimport copy\nimport numpy as np\nimport open3d as o3\nfrom probreg import cpd\n\n# load source and target point cloud\nsource = o3.io.read_point_cloud('bunny.pcd')\ntarget = copy.deepcopy(source)\n# transform target point cloud\nth = np.deg2rad(30.0)\ntarget.transform(np.array([[np.cos(th), -np.sin(th), 0.0, 0.0],\n                           [np.sin(th), np.cos(th), 0.0, 0.0],\n                           [0.0, 0.0, 1.0, 0.0],\n                           [0.0, 0.0, 0.0, 1.0]]))\nsource = source.voxel_down_sample(voxel_size=0.005)\ntarget = target.voxel_down_sample(voxel_size=0.005)\n\n# compute cpd registration\ntf_param, _, _ = cpd.registration_cpd(source, target)\nresult = copy.deepcopy(source)\nresult.points = tf_param.transform(result.points)\n\n# draw result\nsource.paint_uniform_color([1, 0, 0])\ntarget.paint_uniform_color([0, 1, 0])\nresult.paint_uniform_color([0, 0, 1])\no3.visualization.draw_geometries([source, target, result])\n```\n\n## Resources\n\n* [Documentation](https://probreg.readthedocs.io/en/latest/?badge=latest)\n\n## Results\n\n### Compare algorithms\n\n| CPD | SVR | GMMTree | FilterReg |\n|-----|-----|---------|-----------|\n| <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/cpd_rigid.gif\" width=\"640\"> |  <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/svr_rigid.gif\" width=\"640\"> | <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/gmmtree_rigid.gif\" width=\"640\"> | <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/filterreg_rigid.gif\" width=\"640\"> |\n\n### Noise test\n\n| ICP(Open3D) | CPD | FilterReg |\n|-------------|-----|-----------|\n| <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/icp_noise.gif\" width=\"640\"> |  <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/cpd_noise.gif\" width=\"640\"> | <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/filterreg_noise.gif\" width=\"640\"> |\n\n### Non rigid registration\n\n| CPD | SVR | Filterreg |\n|-----|-----|-----------|\n| <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/cpd_nonrigid.gif\" width=\"640\"> | <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/svr_nonrigid.gif\" width=\"640\"> | <img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/filterreg_deformable.gif\" width=\"640\"> |\n\n### Feature based registration\n\n| FPFH FilterReg |\n|----------------|\n|<img src=\"https://raw.githubusercontent.com/neka-nat/probreg/master/images/filterreg_fpfh.gif\" width=\"640\"> |\n\n### Time measurement\n\nExecute an example script for measuring time.\n\n```\nOMP_NUM_THREADS=1 python time_measurement.py\n\n# Results [s]\n# ICP(Open3D):  0.02030642901081592\n# CPD:  3.6435861150093842\n# SVR:  0.5795929960149806\n# GMMTree:  0.34479290700983256\n# FilterReg:  0.039795294986106455\n```\n\n## Citing\n\n```\n@software{probreg,\n    author = {{Kenta-Tanaka et al.}},\n    title = {probreg},\n    url = {https://probreg.readthedocs.io/en/latest/},\n    version = {0.1.6},\n    date = {2019-9-29},\n}\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/neka-nat/probreg", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "probreg", "package_url": "https://pypi.org/project/probreg/", "platform": "", "project_url": "https://pypi.org/project/probreg/", "project_urls": {"Homepage": "https://github.com/neka-nat/probreg"}, "release_url": "https://pypi.org/project/probreg/0.1.9/", "requires_dist": null, "requires_python": "", "summary": "Probablistic point cloud resitration algorithms", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/41f1bb13262cafcf8452a82c916bbdce55180ace/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f6c6f676f2e706e67\"></h1>\n<p><a href=\"https://travis-ci.org/neka-nat/probreg\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29c702b5320c945b1e8f7e2d24297c42553d8776/68747470733a2f2f7472617669732d63692e6f72672f6e656b612d6e61742f70726f627265672e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/neka-nat/probreg\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1db121391d39e8f404ede1643af7bfb0163f70b7/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6d646f6f686d733532676e71366c61773f7376673d74727565\"></a>\n<a href=\"https://badge.fury.io/py/probreg\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9d379dcc2dcf249135b1e8b1d383e5b0f109d59/68747470733a2f2f62616467652e667572792e696f2f70792f70726f627265672e737667\"></a>\n<a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e9f8168092fab8a1e348f4b089c1ff9cc0c137bf/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://probreg.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88d15bee6cc777fe1c2e07d30849cfccd6f516d1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70726f627265672f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pepy.tech/project/probreg\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69bc026181f85c2aeb08ae2731f78603067f3a34/68747470733a2f2f706570792e746563682f62616467652f70726f62726567\"></a></p>\n<p>Probreg is a library that implements point cloud <strong>reg</strong>istration algorithms with <strong>prob</strong>ablistic model.</p>\n<p>The point set registration algorithms using stochastic model are more robust than ICP(Iterative Closest Point).\nThis package implements several algorithms using stochastic models and provides a simple interface with <a href=\"http://www.open3d.org/\" rel=\"nofollow\">Open3D</a>.</p>\n<h2>Core features</h2>\n<ul>\n<li>Open3D interface</li>\n<li>Rigid and non-rigid transformation</li>\n</ul>\n<h2>Algorithms</h2>\n<ul>\n<li>Maximum likelihood when the target or source point cloud is observation data\n<ul>\n<li><a href=\"https://arxiv.org/pdf/0905.2635.pdf\" rel=\"nofollow\">Coherent Point Drift(2010)</a></li>\n<li><a href=\"https://arxiv.org/pdf/1811.10136.pdf\" rel=\"nofollow\">FilterReg(CVPR2019)</a></li>\n</ul>\n</li>\n<li>Distance minimization of two probabilistic distributions\n<ul>\n<li><a href=\"https://ieeexplore.ieee.org/document/5674050\" rel=\"nofollow\">GMMReg(2011)</a></li>\n<li><a href=\"https://arxiv.org/pdf/1511.04240.pdf\" rel=\"nofollow\">Support Vector Registration(2015)</a></li>\n</ul>\n</li>\n<li>Hierarchical Stocastic model\n<ul>\n<li><a href=\"https://arxiv.org/pdf/1807.02587.pdf\" rel=\"nofollow\">GMMTree(ECCV2018)</a></li>\n</ul>\n</li>\n</ul>\n<h3>Transformations</h3>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>CPD</th>\n<th>SVR, GMMReg</th>\n<th>GMMTree</th>\n<th>FilterReg</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Rigid</td>\n<td><strong>Scale + 6D pose</strong></td>\n<td><strong>6D pose</strong></td>\n<td><strong>6D pose</strong></td>\n<td><strong>6D pose</strong> <br> (Point-to-point,<br> Point-to-plane,<br> FPFH-based)</td>\n</tr>\n<tr>\n<td>NonRigid</td>\n<td><strong>Affine</strong>, <strong>MCT</strong></td>\n<td><strong>TPS</strong></td>\n<td>-</td>\n<td><strong>Deformable Kinematic</strong> <br> (experimental)</td>\n</tr></tbody></table>\n<h2>Installation</h2>\n<p>You can install probreg using <code>pip</code>.</p>\n<pre><code>pip install probreg\n</code></pre>\n<p>Or install probreg from source.</p>\n<pre><code>git clone https://github.com/neka-nat/probreg.git --recursive\ncd probreg\npip install -e .\n</code></pre>\n<h2>Getting Started</h2>\n<p>This is a sample code that reads a PCD file and calls CPD registration.\nYou can easily execute registrations from Open3D point cloud object and draw the results.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">copy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">open3d</span> <span class=\"k\">as</span> <span class=\"nn\">o3</span>\n<span class=\"kn\">from</span> <span class=\"nn\">probreg</span> <span class=\"kn\">import</span> <span class=\"n\">cpd</span>\n\n<span class=\"c1\"># load source and target point cloud</span>\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read_point_cloud</span><span class=\"p\">(</span><span class=\"s1\">'bunny.pcd'</span><span class=\"p\">)</span>\n<span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">)</span>\n<span class=\"c1\"># transform target point cloud</span>\n<span class=\"n\">th</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">deg2rad</span><span class=\"p\">(</span><span class=\"mf\">30.0</span><span class=\"p\">)</span>\n<span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">th</span><span class=\"p\">),</span> <span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">th</span><span class=\"p\">),</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n                           <span class=\"p\">[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">th</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">th</span><span class=\"p\">),</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n                           <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">],</span>\n                           <span class=\"p\">[</span><span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">0.0</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">]]))</span>\n<span class=\"n\">source</span> <span class=\"o\">=</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">voxel_down_sample</span><span class=\"p\">(</span><span class=\"n\">voxel_size</span><span class=\"o\">=</span><span class=\"mf\">0.005</span><span class=\"p\">)</span>\n<span class=\"n\">target</span> <span class=\"o\">=</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">voxel_down_sample</span><span class=\"p\">(</span><span class=\"n\">voxel_size</span><span class=\"o\">=</span><span class=\"mf\">0.005</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># compute cpd registration</span>\n<span class=\"n\">tf_param</span><span class=\"p\">,</span> <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">cpd</span><span class=\"o\">.</span><span class=\"n\">registration_cpd</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">copy</span><span class=\"o\">.</span><span class=\"n\">deepcopy</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">)</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"n\">tf_param</span><span class=\"o\">.</span><span class=\"n\">transform</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">points</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># draw result</span>\n<span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">paint_uniform_color</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">paint_uniform_color</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">paint_uniform_color</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">o3</span><span class=\"o\">.</span><span class=\"n\">visualization</span><span class=\"o\">.</span><span class=\"n\">draw_geometries</span><span class=\"p\">([</span><span class=\"n\">source</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"p\">,</span> <span class=\"n\">result</span><span class=\"p\">])</span>\n</pre>\n<h2>Resources</h2>\n<ul>\n<li><a href=\"https://probreg.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\">Documentation</a></li>\n</ul>\n<h2>Results</h2>\n<h3>Compare algorithms</h3>\n<table>\n<thead>\n<tr>\n<th>CPD</th>\n<th>SVR</th>\n<th>GMMTree</th>\n<th>FilterReg</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb112dde9c96d5cb9922e8884c6a7dbfe4a815ad/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f6370645f72696769642e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/410423b9e944e24c0b4c0a9cb3be9ee39296dca6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f7376725f72696769642e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c171778643b816ee822c62e52c81842ef2337ac/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f676d6d747265655f72696769642e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0a1285f343cd4a70dc3f94c13b7b8ea8fe51e31/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f66696c7465727265675f72696769642e676966\" width=\"640\"></td>\n</tr></tbody></table>\n<h3>Noise test</h3>\n<table>\n<thead>\n<tr>\n<th>ICP(Open3D)</th>\n<th>CPD</th>\n<th>FilterReg</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f7af9c4f9b38d9ba36b46cb1ea238dc937cd454/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f6963705f6e6f6973652e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d55e6a890d399ea7876745d28dbd27afb6528f7e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f6370645f6e6f6973652e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b53af6f445021c404f005a8d89c15c7646e33d9d/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f66696c7465727265675f6e6f6973652e676966\" width=\"640\"></td>\n</tr></tbody></table>\n<h3>Non rigid registration</h3>\n<table>\n<thead>\n<tr>\n<th>CPD</th>\n<th>SVR</th>\n<th>Filterreg</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4230e518319de9e87bf943fe7e6361a4f0d9ba4e/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f6370645f6e6f6e72696769642e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae8a913579aff5d0a63a08ed03e8c2e55d6a3540/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f7376725f6e6f6e72696769642e676966\" width=\"640\"></td>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49167e435e35e0acf299b0a82f8c01b35112e1ba/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f66696c7465727265675f6465666f726d61626c652e676966\" width=\"640\"></td>\n</tr></tbody></table>\n<h3>Feature based registration</h3>\n<table>\n<thead>\n<tr>\n<th>FPFH FilterReg</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e72360428de445873ef7366b89f453a1fa3867c4/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6e656b612d6e61742f70726f627265672f6d61737465722f696d616765732f66696c7465727265675f667066682e676966\" width=\"640\"></td>\n</tr></tbody></table>\n<h3>Time measurement</h3>\n<p>Execute an example script for measuring time.</p>\n<pre><code>OMP_NUM_THREADS=1 python time_measurement.py\n\n# Results [s]\n# ICP(Open3D):  0.02030642901081592\n# CPD:  3.6435861150093842\n# SVR:  0.5795929960149806\n# GMMTree:  0.34479290700983256\n# FilterReg:  0.039795294986106455\n</code></pre>\n<h2>Citing</h2>\n<pre><code>@software{probreg,\n    author = {{Kenta-Tanaka et al.}},\n    title = {probreg},\n    url = {https://probreg.readthedocs.io/en/latest/},\n    version = {0.1.6},\n    date = {2019-9-29},\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6935362, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "f9d8d58310cb0754c2e16a67f20bded3", "sha256": "e43d6c1202dc54b4a9cd182d4ba011634e742ab6b321d9fef982cd891c14e8df"}, "downloads": -1, "filename": "probreg-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f9d8d58310cb0754c2e16a67f20bded3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 905681, "upload_time": "2019-07-13T17:41:37", "upload_time_iso_8601": "2019-07-13T17:41:37.241807Z", "url": "https://files.pythonhosted.org/packages/d3/fc/57b8b271295dbe32a883ac466723fc2ba1d2340e9ad282e9890128dfff94/probreg-0.1.1.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1ff862ad0c0deff21b73d112515365a9", "sha256": "e715887f281f9057d60bf57812613dcd28d90fb2589eabf387341dac7937dad7"}, "downloads": -1, "filename": "probreg-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1ff862ad0c0deff21b73d112515365a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 906639, "upload_time": "2019-09-20T15:52:21", "upload_time_iso_8601": "2019-09-20T15:52:21.930778Z", "url": "https://files.pythonhosted.org/packages/84/00/0cc052f889340e60e0f6d55920c04ef66167f8e6b04de6ec99ebe9b16428/probreg-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "6b9f9849a3350ac07094b2cb8bf8d7e1", "sha256": "29e702c10598f01770541ac6ec1ef1173c0b5f0edab853fea8193828d02e7bef"}, "downloads": -1, "filename": "probreg-0.1.6.tar.gz", "has_sig": false, "md5_digest": "6b9f9849a3350ac07094b2cb8bf8d7e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 906704, "upload_time": "2019-09-29T11:27:35", "upload_time_iso_8601": "2019-09-29T11:27:35.994777Z", "url": "https://files.pythonhosted.org/packages/51/79/316b9c89a6cb668c029ebfcb37ce6628662beb55dc94d6f363f05eca11ee/probreg-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "8d2c058acf011b090e59ff699d805e83", "sha256": "9c6d565fc47a7ef6587628a2b259b66c777294330bb63fd7a0e44a634899c06b"}, "downloads": -1, "filename": "probreg-0.1.7.tar.gz", "has_sig": false, "md5_digest": "8d2c058acf011b090e59ff699d805e83", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 907074, "upload_time": "2019-10-31T15:30:56", "upload_time_iso_8601": "2019-10-31T15:30:56.042920Z", "url": "https://files.pythonhosted.org/packages/35/54/17fa8b3d543b2205a6274aacecd842bb0b5430020f62af2570ad53dfee1c/probreg-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "cab2b7ad56b9be878635ce45a4b12725", "sha256": "5a0ede4319718f045bf77dbfd6b63bb5d91a2e08ca3ad6a7b16f923bf3265763"}, "downloads": -1, "filename": "probreg-0.1.8.tar.gz", "has_sig": false, "md5_digest": "cab2b7ad56b9be878635ce45a4b12725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 907185, "upload_time": "2020-01-06T14:48:45", "upload_time_iso_8601": "2020-01-06T14:48:45.303649Z", "url": "https://files.pythonhosted.org/packages/2d/0a/fc5b6c8394a7f3450d9d7feaf285d64cd9a86c3ea2d97f4410601ba3c709/probreg-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "455b2b76bc6ab1547d4bfb214c167464", "sha256": "f6bd5a9288ddb5a5f908081b904a7246a5881c83cd98ef8fb314d90b507a2d51"}, "downloads": -1, "filename": "probreg-0.1.9.tar.gz", "has_sig": false, "md5_digest": "455b2b76bc6ab1547d4bfb214c167464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 905694, "upload_time": "2020-04-02T12:35:57", "upload_time_iso_8601": "2020-04-02T12:35:57.277178Z", "url": "https://files.pythonhosted.org/packages/5e/2e/ea670c4a5f39217e287115ca388a89dc003cc388bc1f75e3ae940fc2e18f/probreg-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "455b2b76bc6ab1547d4bfb214c167464", "sha256": "f6bd5a9288ddb5a5f908081b904a7246a5881c83cd98ef8fb314d90b507a2d51"}, "downloads": -1, "filename": "probreg-0.1.9.tar.gz", "has_sig": false, "md5_digest": "455b2b76bc6ab1547d4bfb214c167464", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 905694, "upload_time": "2020-04-02T12:35:57", "upload_time_iso_8601": "2020-04-02T12:35:57.277178Z", "url": "https://files.pythonhosted.org/packages/5e/2e/ea670c4a5f39217e287115ca388a89dc003cc388bc1f75e3ae940fc2e18f/probreg-0.1.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:58 2020"}