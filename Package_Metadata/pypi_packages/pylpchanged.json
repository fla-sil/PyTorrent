{"info": {"author": "Guillaume Gonnet", "author_email": "gonnet.guillaume97@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: AsyncIO", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Build Tools", "Topic :: Utilities"], "description": "===========\nPylpChanged\n===========\n\n\nInformation\n===========\n\n| **pylpchanged** is a plugin for `Pylp`_ that filter unchanged files.\n|\n| **Note**: this plugin cannot filter unchanged files with a name transformed by another\n  plugin further into the stream (``pylprename`` for example).\n\n\nInstallation\n============\n\nInstall **pylpchanged** with ``pip``::\n\n    pip install pylpchanged\n\nIf you don't have Python ``Scripts`` folder in your PATH, you can run also::\n\n    python -m pip install pylpchanged\n\n\nUsage\n=====\n\nThe usual use of **pylpchanged** is as follows:\n\n.. code:: python\n\n    import pylp\n    from pylpchanged import pylpchanged\n\n    pylp.task('default', lambda:\n        pylp.src('lib/*.py')\n          .pipe(changed())\n        # .pipe(another_plugin())\n          .pipe(pylp.dest('build'))\n    )\n\n| Without parameters, **pylpchanged** will wait for the destination stream (i.e. ``pylp.dest``)\n  to compare the last result with the source files.\n|\n| For a faster execution, you can pass directly the destination path like this:\n\n.. code:: python\n\n    import pylp\n    from pylpchanged import pylpchanged\n\n    pylp.task('default', lambda:\n        pylp.src('lib/*.py')\n          .pipe(changed('build'))\n        # .pipe(another_plugin())\n          .pipe(pylp.dest('build'))\n    )\n\n\n.. _Pylp: https://github.com/pylp/pylp\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pylp/pylpchanged", "keywords": "pylp gulp changed", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pylpchanged", "package_url": "https://pypi.org/project/pylpchanged/", "platform": "", "project_url": "https://pypi.org/project/pylpchanged/", "project_urls": {"Homepage": "https://github.com/pylp/pylpchanged"}, "release_url": "https://pypi.org/project/pylpchanged/0.1.1/", "requires_dist": ["pylp"], "requires_python": ">=3.5", "summary": "A Pylp plugin for filtering unchanged files", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"information\">\n<h2>Information</h2>\n<div>\n<div><strong>pylpchanged</strong> is a plugin for <a href=\"https://github.com/pylp/pylp\" rel=\"nofollow\">Pylp</a> that filter unchanged files.</div>\n<div><br></div>\n<div><strong>Note</strong>: this plugin cannot filter unchanged files with a name transformed by another\nplugin further into the stream (<tt>pylprename</tt> for example).</div>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install <strong>pylpchanged</strong> with <tt>pip</tt>:</p>\n<pre>pip install pylpchanged\n</pre>\n<p>If you don\u2019t have Python <tt>Scripts</tt> folder in your PATH, you can run also:</p>\n<pre>python -m pip install pylpchanged\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The usual use of <strong>pylpchanged</strong> is as follows:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pylp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylpchanged</span> <span class=\"kn\">import</span> <span class=\"n\">pylpchanged</span>\n\n<span class=\"n\">pylp</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"p\">(</span><span class=\"s1\">'default'</span><span class=\"p\">,</span> <span class=\"k\">lambda</span><span class=\"p\">:</span>\n    <span class=\"n\">pylp</span><span class=\"o\">.</span><span class=\"n\">src</span><span class=\"p\">(</span><span class=\"s1\">'lib/*.py'</span><span class=\"p\">)</span>\n      <span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">changed</span><span class=\"p\">())</span>\n    <span class=\"c1\"># .pipe(another_plugin())</span>\n      <span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">pylp</span><span class=\"o\">.</span><span class=\"n\">dest</span><span class=\"p\">(</span><span class=\"s1\">'build'</span><span class=\"p\">))</span>\n<span class=\"p\">)</span>\n</pre>\n<div>\n<div>Without parameters, <strong>pylpchanged</strong> will wait for the destination stream (i.e. <tt>pylp.dest</tt>)\nto compare the last result with the source files.</div>\n<div><br></div>\n<div>For a faster execution, you can pass directly the destination path like this:</div>\n</div>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pylp</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pylpchanged</span> <span class=\"kn\">import</span> <span class=\"n\">pylpchanged</span>\n\n<span class=\"n\">pylp</span><span class=\"o\">.</span><span class=\"n\">task</span><span class=\"p\">(</span><span class=\"s1\">'default'</span><span class=\"p\">,</span> <span class=\"k\">lambda</span><span class=\"p\">:</span>\n    <span class=\"n\">pylp</span><span class=\"o\">.</span><span class=\"n\">src</span><span class=\"p\">(</span><span class=\"s1\">'lib/*.py'</span><span class=\"p\">)</span>\n      <span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">changed</span><span class=\"p\">(</span><span class=\"s1\">'build'</span><span class=\"p\">))</span>\n    <span class=\"c1\"># .pipe(another_plugin())</span>\n      <span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span><span class=\"n\">pylp</span><span class=\"o\">.</span><span class=\"n\">dest</span><span class=\"p\">(</span><span class=\"s1\">'build'</span><span class=\"p\">))</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3129350, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e1881106caaa2bed78c870fb999b0ed4", "sha256": "443d182738f9e25b3f0b0ea5368705004423d92b760af89a326fe91df957f41a"}, "downloads": -1, "filename": "pylpchanged-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e1881106caaa2bed78c870fb999b0ed4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4517, "upload_time": "2017-08-26T20:56:44", "upload_time_iso_8601": "2017-08-26T20:56:44.815519Z", "url": "https://files.pythonhosted.org/packages/f5/ce/3d9f83533f943755b4fe7b88654cddb6984eed2048577d51005428fbda18/pylpchanged-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "e445d11444f37e65986d7c6c3da38ac3", "sha256": "6277aabfe77a174ae52c1f60ff40f872831b96971841a57fb97bb5902ba19e26"}, "downloads": -1, "filename": "pylpchanged-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e445d11444f37e65986d7c6c3da38ac3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4606, "upload_time": "2017-08-28T15:44:00", "upload_time_iso_8601": "2017-08-28T15:44:00.846934Z", "url": "https://files.pythonhosted.org/packages/46/fe/7baafc12c863ee417b2d3b236545817cc83663f407ef79f098d9d2d13579/pylpchanged-0.1.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e445d11444f37e65986d7c6c3da38ac3", "sha256": "6277aabfe77a174ae52c1f60ff40f872831b96971841a57fb97bb5902ba19e26"}, "downloads": -1, "filename": "pylpchanged-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e445d11444f37e65986d7c6c3da38ac3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 4606, "upload_time": "2017-08-28T15:44:00", "upload_time_iso_8601": "2017-08-28T15:44:00.846934Z", "url": "https://files.pythonhosted.org/packages/46/fe/7baafc12c863ee417b2d3b236545817cc83663f407ef79f098d9d2d13579/pylpchanged-0.1.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:02:46 2020"}