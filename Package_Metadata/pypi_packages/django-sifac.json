{"info": {"author": "Arnaud Grausem", "author_email": "arnaud.grausem@unistra.fr", "bugtrack_url": null, "classifiers": [], "description": "============\nDjango-SIFAC\n============\n\n.. image:: https://landscape.io/github/unistra/django-sifac/master/landscape.svg?style=flat\n   :target: https://landscape.io/github/unistra/django-sifac/master\n   :alt: Code Health\n\nDjango-SIFAC is a API to interact with the financial repository called SIFAC\nand deployed in many french universities. It is not really a django specific\napp for SIFAC but it's easy to use with Django. For the moment, only data on \ncost centers, eotp, funds and functional domains are available for reading, but \nnot for writing.\n\nInstallation\n------------\n\nTo install the saprfc library, please refer to this `documentation\n<http://www.piersharding.com/download/python/doc/html/building-unix.html>`_.\nIf you place the rcfsdk headers in the right place, you can run this command ::\n\n    pip install django-sifac\n\n\nIntegrate with your django app\n------------------------------\n\nYou need to add this lines to the settings file of your django project ::\n\n    SIFAC = {\n        'HOST': '' #  Hostname to connect (i.e sap.host.com)\n        'SYSNR': '' # System number to connect to (i.e '00')\n        'CLIENT': '' # Client number logged in (i.e '500')\n        'USER': '' # Username\n        'PASSWORD': '' # Password\n    }\n\nIf you want to use the SAP models filter application, you must activate the\nadministration interface in the settings file of your project and add the sifac\napplication in your INSTALLED_APPS setting ::\n\n    INSTALLED_APPS = (\n        ...,\n        django.contrib.admin,\n        ...,\n        sifac\n    )\n\nTo create tables needed by the sifac application, syncing your database is\nnecessary ::\n    \n    $> python manage.py syncdb\n\n\nBasic usage\n-----------\n\nIf you're using filters and pattern for your SAP Models (or not), it is really\neasy to use the library to retrieve filtered data. Filters and patterns for\neach SAP models can be created or updated in the admnistration interface ::\n\n    from sifac import service\n\n    sifac_service = SifacService()\n    cost_centers = sifac_service.get_filtered_cost_center_list()\n\nLaunching tests\n---------------\n\nTo launch tests, you should install django, saprfc and packages in file requirements-test.txt ::\n\n    $> python run_tests.py sifac\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/unistra/django-sifac/", "keywords": "sifac sap django", "license": "CeCILL-B", "maintainer": null, "maintainer_email": null, "name": "django-sifac", "package_url": "https://pypi.org/project/django-sifac/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-sifac/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/unistra/django-sifac/"}, "release_url": "https://pypi.org/project/django-sifac/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "A SAP API for SIFAC", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://landscape.io/github/unistra/django-sifac/master\" rel=\"nofollow\"><img alt=\"Code Health\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/399a474f07d4d4d7fa72786443a62ba3b45b9d80/68747470733a2f2f6c616e6473636170652e696f2f6769746875622f756e69737472612f646a616e676f2d73696661632f6d61737465722f6c616e6473636170652e7376673f7374796c653d666c6174\"></a>\n<p>Django-SIFAC is a API to interact with the financial repository called SIFAC\nand deployed in many french universities. It is not really a django specific\napp for SIFAC but it\u2019s easy to use with Django. For the moment, only data on\ncost centers, eotp, funds and functional domains are available for reading, but\nnot for writing.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install the saprfc library, please refer to this <a href=\"http://www.piersharding.com/download/python/doc/html/building-unix.html\" rel=\"nofollow\">documentation</a>.\nIf you place the rcfsdk headers in the right place, you can run this command</p>\n<pre>pip install django-sifac\n</pre>\n</div>\n<div id=\"integrate-with-your-django-app\">\n<h2>Integrate with your django app</h2>\n<p>You need to add this lines to the settings file of your django project</p>\n<pre>SIFAC = {\n    'HOST': '' #  Hostname to connect (i.e sap.host.com)\n    'SYSNR': '' # System number to connect to (i.e '00')\n    'CLIENT': '' # Client number logged in (i.e '500')\n    'USER': '' # Username\n    'PASSWORD': '' # Password\n}\n</pre>\n<p>If you want to use the SAP models filter application, you must activate the\nadministration interface in the settings file of your project and add the sifac\napplication in your INSTALLED_APPS setting</p>\n<pre>INSTALLED_APPS = (\n    ...,\n    django.contrib.admin,\n    ...,\n    sifac\n)\n</pre>\n<p>To create tables needed by the sifac application, syncing your database is\nnecessary</p>\n<pre>$&gt; python manage.py syncdb\n</pre>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>If you\u2019re using filters and pattern for your SAP Models (or not), it is really\neasy to use the library to retrieve filtered data. Filters and patterns for\neach SAP models can be created or updated in the admnistration interface</p>\n<pre>from sifac import service\n\nsifac_service = SifacService()\ncost_centers = sifac_service.get_filtered_cost_center_list()\n</pre>\n</div>\n<div id=\"launching-tests\">\n<h2>Launching tests</h2>\n<p>To launch tests, you should install django, saprfc and packages in file requirements-test.txt</p>\n<pre>$&gt; python run_tests.py sifac\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1647798, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "e463e200e2b49ffcbe41f1e1c4ff823e", "sha256": "3c9e82dfec15ad1fed0c641d6d7ea636fdcba139ab7422ab5919cef6e35cfa71"}, "downloads": -1, "filename": "django-sifac-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e463e200e2b49ffcbe41f1e1c4ff823e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13093, "upload_time": "2015-03-20T08:49:05", "upload_time_iso_8601": "2015-03-20T08:49:05.704036Z", "url": "https://files.pythonhosted.org/packages/b6/3c/60c6abe08035e4a7268069053e75fef8323f1e2ef26bda9166a9554aa083/django-sifac-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "4f5c5743d682433a72ce0d5e7eeed745", "sha256": "d737615bc9f6b1e460657b15d1f4fd92109a47083297928b2cda5d339914eefb"}, "downloads": -1, "filename": "django-sifac-0.3.1.tar.gz", "has_sig": false, "md5_digest": "4f5c5743d682433a72ce0d5e7eeed745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13180, "upload_time": "2015-07-24T09:45:33", "upload_time_iso_8601": "2015-07-24T09:45:33.525183Z", "url": "https://files.pythonhosted.org/packages/2f/10/6712ec5d8731f31f0a7bb4e19d956e1d8d6609154fd998140724184746a1/django-sifac-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "9dc7a161daa7ed27fd508ae38d084c05", "sha256": "ecfdade814a7919d6fb12d367d41b607682c1511d4b607a709839e903a7268bb"}, "downloads": -1, "filename": "django-sifac-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9dc7a161daa7ed27fd508ae38d084c05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13183, "upload_time": "2015-07-24T09:49:16", "upload_time_iso_8601": "2015-07-24T09:49:16.313324Z", "url": "https://files.pythonhosted.org/packages/55/b8/e8ae36b32a2cd8263dec8dc4044528f9ed43947802fcc15437bba6ddbd4a/django-sifac-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9dc7a161daa7ed27fd508ae38d084c05", "sha256": "ecfdade814a7919d6fb12d367d41b607682c1511d4b607a709839e903a7268bb"}, "downloads": -1, "filename": "django-sifac-0.3.2.tar.gz", "has_sig": false, "md5_digest": "9dc7a161daa7ed27fd508ae38d084c05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13183, "upload_time": "2015-07-24T09:49:16", "upload_time_iso_8601": "2015-07-24T09:49:16.313324Z", "url": "https://files.pythonhosted.org/packages/55/b8/e8ae36b32a2cd8263dec8dc4044528f9ed43947802fcc15437bba6ddbd4a/django-sifac-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:28 2020"}