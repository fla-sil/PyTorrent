{"info": {"author": "Philip Cristiano", "author_email": "worker_process@philipcristiano.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python"], "description": "Worker Process\n==============\n\nThis package provides a wrapper to create standalone worker processes.\n\nExample Worker\n======================\n\nWorkers are created by extending the BaseWorker class and implementing a tick\nmethod to execute then calling .main() on the class. This will start an\ninfinite loop calling that function.\n\nThe worker can be rate limited with `max_ticks_per_second`.\n\nThe worker can be stopped gracefully by sending a SIGTERM to the process.\n\n    >>> import time\n    ...\n    ... from workerprocess import BaseWorker\n    ...\n    ...\n    ... class ExampleWorker(BaseWorker):\n    ...\n    ...     max_ticks_per_second = 10\n    ...\n    ...     def tick(self):\n    ...         print 'Tick!'\n    ...         time.sleep(1)\n    ...\n    ... ExampleWorker.main()\n\nA `sighup` method on the function will be called if the process receives a\nSIGHUP\n\nRunning the Worker\n==================\nThe easiest way to be able to run the worker is by adding a console\\_script\nentry point in your setup.py:\n\n    entry_points=\"\"\"\n    [console_scripts]\n    example_worker_process = yourpackage.yourmodule:ExampleWorker.main\n    \"\"\",\n\nAfter installing your package you will be able to run the command\n`example_worker_process` from the command line.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/philipcristiano/worker_process", "keywords": "", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "workerprocess", "package_url": "https://pypi.org/project/workerprocess/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/workerprocess/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/philipcristiano/worker_process"}, "release_url": "https://pypi.org/project/workerprocess/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "A tool for creating external worker processes", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"worker-process\">\n<h2>Worker Process</h2>\n<p>This package provides a wrapper to create standalone worker processes.</p>\n</div>\n<div id=\"example-worker\">\n<h2>Example Worker</h2>\n<p>Workers are created by extending the BaseWorker class and implementing a tick\nmethod to execute then calling .main() on the class. This will start an\ninfinite loop calling that function.</p>\n<p>The worker can be rate limited with <cite>max_ticks_per_second</cite>.</p>\n<p>The worker can be stopped gracefully by sending a SIGTERM to the process.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; import time\n...\n... from workerprocess import BaseWorker\n...\n...\n... class ExampleWorker(BaseWorker):\n...\n...     max_ticks_per_second = 10\n...\n...     def tick(self):\n...         print 'Tick!'\n...         time.sleep(1)\n...\n... ExampleWorker.main()\n</pre>\n</blockquote>\n<p>A <cite>sighup</cite> method on the function will be called if the process receives a\nSIGHUP</p>\n</div>\n<div id=\"running-the-worker\">\n<h2>Running the Worker</h2>\n<p>The easiest way to be able to run the worker is by adding a console_script\nentry point in your setup.py:</p>\n<blockquote>\nentry_points=\u201d\u201d\u201d\n[console_scripts]\nexample_worker_process = yourpackage.yourmodule:ExampleWorker.main\n\u201c\u201d\u201d,</blockquote>\n<p>After installing your package you will be able to run the command\n<cite>example_worker_process</cite> from the command line.</p>\n</div>\n\n          </div>"}, "last_serial": 801717, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e73cdade35ffcf06c5bd3b564262daaf", "sha256": "1eac8bcf837a5cb040ebd898179b1916c32ccce2f972c6d6d0fe99bba6f0dd33"}, "downloads": -1, "filename": "workerprocess-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e73cdade35ffcf06c5bd3b564262daaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7962, "upload_time": "2011-06-20T17:18:38", "upload_time_iso_8601": "2011-06-20T17:18:38.398007Z", "url": "https://files.pythonhosted.org/packages/c4/5c/3e168e5143ca0db75a39509a88ef052ce0ab336dd2c90df688e8f15d58b1/workerprocess-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "32b6321bac8a2534820c62c90d62db2b", "sha256": "2a8f95168d3c3d11d1ce2c25a58f0322174eb52c90a45e50e94d8cd98ea2bf42"}, "downloads": -1, "filename": "workerprocess-0.1.1.tar.gz", "has_sig": false, "md5_digest": "32b6321bac8a2534820c62c90d62db2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8052, "upload_time": "2011-06-21T00:23:28", "upload_time_iso_8601": "2011-06-21T00:23:28.798959Z", "url": "https://files.pythonhosted.org/packages/93/e9/134fd92833f62d743a481dc685dd7ef10c62a298905d1d42c7ab18520cab/workerprocess-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "27b290eebce914b8a7c93b3d388edd18", "sha256": "3c1ec6ee855b385298b1769f828e7946725a3528c85df08f0ab4b769770c3083"}, "downloads": -1, "filename": "workerprocess-0.1.2.tar.gz", "has_sig": false, "md5_digest": "27b290eebce914b8a7c93b3d388edd18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2957, "upload_time": "2012-05-28T01:22:07", "upload_time_iso_8601": "2012-05-28T01:22:07.196524Z", "url": "https://files.pythonhosted.org/packages/6a/93/200a043322be9bee695c0df3cdbb135b686f8ebe601f04ae7c28f24805a6/workerprocess-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27b290eebce914b8a7c93b3d388edd18", "sha256": "3c1ec6ee855b385298b1769f828e7946725a3528c85df08f0ab4b769770c3083"}, "downloads": -1, "filename": "workerprocess-0.1.2.tar.gz", "has_sig": false, "md5_digest": "27b290eebce914b8a7c93b3d388edd18", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2957, "upload_time": "2012-05-28T01:22:07", "upload_time_iso_8601": "2012-05-28T01:22:07.196524Z", "url": "https://files.pythonhosted.org/packages/6a/93/200a043322be9bee695c0df3cdbb135b686f8ebe601f04ae7c28f24805a6/workerprocess-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:54 2020"}