{"info": {"author": "Team Jakopi\u010devca", "author_email": "filip.stamcar@hotmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: Unix", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Astronomy"], "description": "Astro Pi 2017/18 - Team Jakopi\u010devca\r\n===================================\r\n\r\nProgram for Astro Pi 2017/18 - Mission Space Lab - Team Jakopi\u010devca\r\n\r\nDescription\r\n-----------\r\n\r\nWe would like to research how much of Slovenia (and other countries) is\r\ncovered with forests. We would compare the results with previous\r\npictures of forestation in order to determine possible deforestation or\r\neven expansion of the forests. We would also like to research light\r\npollution with photographing at night. We would use NoIR camera in order\r\nto determine different colorization in pictures. The photographs would\r\nbe analysed later.\r\n\r\nHow It Works\r\n------------\r\n\r\nThe program will use Python ephem module to determine location of ISS.\r\nIf ISS is flying over certain countries, the program will take pictures\r\nfor a certain number of seconds and save photos in a folder with a\r\nlocation name. Name of the photo is time of the photo. It\u2019s possible\r\nthat ISS doesn\u2019t fly over certain countries, or if the location\r\ncalculations with ephem are wrong, program will in any case take photos\r\nof Earth, but less often, and save the images in ``default`` folder. We\r\nwill save direction of North from magnetometer due to a later analysis\r\nof photographs. Location, sensor data, and time will be saved in the CSV\r\nfile.\r\n\r\nThe locations of the photographing and other settings are stored in the\r\n``config.json`` file. This file also stores TLE data, so update them\r\nbefore running the program. In the ``locations`` section, the\r\ncoordinates of countries for photographing are saved. The value\r\n``latitude1`` is the latitude of the most north point of the country,\r\nthe ``latitude2`` is the latitude of the most south point of the\r\ncountry, the ``longitude1`` is the longitude of most west point of the\r\ncountry, and the ``longitude2`` is the longitude of the most east point\r\nof the country. The value ``delay`` is the number of seconds between\r\neach photo of the country. In the ``default`` section, information about\r\nphotographing when the ISS is not above any country are stored. The\r\n``delay`` value is the number of seconds between each photo, and the\r\n``fallbackDelay`` is the number of seconds between each photo when there\r\nis an error in obtaining an ISS location.\r\n\r\nUsage\r\n-----\r\n\r\nThe program must be used on Raspberry Pi. The program is intended for\r\nuse on ISS, but could be suitable for other environments with some\r\nadjustments.\r\n\r\nRequirements\r\n~~~~~~~~~~~~\r\n\r\nThe program uses Python 3 and has not been tested on Python 2. It uses\r\nthe following Python modules:\r\n\r\n1. sense-hat\r\n2. picamera\r\n3. ephem\r\n\r\nInstallation\r\n~~~~~~~~~~~~\r\n\r\nIt is recommended to install program in Python VENV. Python VENV must be\r\ncreated with ``--system-site-packages`` argument. However, here are\r\ngeneral installation instructions.\r\n\r\nInstallation from PyPI:\r\n\r\n.. code:: bash\r\n\r\n   sudo pip3 install jakopicevca2017\r\n\r\nInstallation from GitHub repository:\r\n\r\n.. code:: bash\r\n\r\n   git clone https://github.com/filips123/jakopicevca/ --branch 2017 --single-branch\r\n   cd jakopicevca\r\n   sudo python3 setup.py install\r\n\r\nRunning\r\n~~~~~~~\r\n\r\nCreate ``config.json`` file with the following content (fill the missing\r\ninformations):\r\n\r\n.. code:: json\r\n\r\n   {\r\n     \"TLE\": [\r\n       \"ISS (ZARYA)\",\r\n       \"### Get the latest ISS TLE data ###\",\r\n       \"### http://www.celestrak.com/NORAD/elements/stations.txt ###\"\r\n     ],\r\n     \r\n     \"locations\": {\r\n         \"### Location Name ###\": {\r\n         \"latitude1\": most-north-point,\r\n         \"latitude2\": most-south-point,\r\n         \"longitude1\": most-west-point,\r\n         \"longitude2\": most-east-point,\r\n         \"delay\": photographing-delay\r\n         }\r\n     },\r\n     \r\n     \"default\": {\r\n       \"delay\": default-photographing-delay,\r\n       \"fallbackDelay\": fallback-photographing-delay\r\n     }\r\n   }\r\n\r\nSave the file and start the program with:\r\n\r\n.. code:: bash\r\n\r\n   python3 -m jakopicevca2017 path/to/config.json path/to/file.csv path/to/image/folder path/to/file.log\r\n\r\nCSV and log files, and image folder will be created automatically.\r\n\r\nLicense\r\n-------\r\n\r\nThis project is licensed under the GNU GPL License. See the LICENSE file\r\nfor more details.\r\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/filips123/jakopicevca/tree/2017/", "keywords": "RaspberryPi AstroPi MissionSpaceLab O\u0160RJ ESA", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "jakopicevca2017", "package_url": "https://pypi.org/project/jakopicevca2017/", "platform": "Linux", "project_url": "https://pypi.org/project/jakopicevca2017/", "project_urls": {"Homepage": "https://github.com/filips123/jakopicevca/tree/2017/"}, "release_url": "https://pypi.org/project/jakopicevca2017/1.1.post0/", "requires_dist": null, "requires_python": "", "summary": "Program for Astro Pi 2017/18 - Mission Space Lab - Team Jakopi\u010devca", "version": "1.1.post0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Program for Astro Pi 2017/18 - Mission Space Lab - Team Jakopi\u010devca</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>We would like to research how much of Slovenia (and other countries) is\ncovered with forests. We would compare the results with previous\npictures of forestation in order to determine possible deforestation or\neven expansion of the forests. We would also like to research light\npollution with photographing at night. We would use NoIR camera in order\nto determine different colorization in pictures. The photographs would\nbe analysed later.</p>\n</div>\n<div id=\"how-it-works\">\n<h2>How It Works</h2>\n<p>The program will use Python ephem module to determine location of ISS.\nIf ISS is flying over certain countries, the program will take pictures\nfor a certain number of seconds and save photos in a folder with a\nlocation name. Name of the photo is time of the photo. It\u2019s possible\nthat ISS doesn\u2019t fly over certain countries, or if the location\ncalculations with ephem are wrong, program will in any case take photos\nof Earth, but less often, and save the images in <tt>default</tt> folder. We\nwill save direction of North from magnetometer due to a later analysis\nof photographs. Location, sensor data, and time will be saved in the CSV\nfile.</p>\n<p>The locations of the photographing and other settings are stored in the\n<tt>config.json</tt> file. This file also stores TLE data, so update them\nbefore running the program. In the <tt>locations</tt> section, the\ncoordinates of countries for photographing are saved. The value\n<tt>latitude1</tt> is the latitude of the most north point of the country,\nthe <tt>latitude2</tt> is the latitude of the most south point of the\ncountry, the <tt>longitude1</tt> is the longitude of most west point of the\ncountry, and the <tt>longitude2</tt> is the longitude of the most east point\nof the country. The value <tt>delay</tt> is the number of seconds between\neach photo of the country. In the <tt>default</tt> section, information about\nphotographing when the ISS is not above any country are stored. The\n<tt>delay</tt> value is the number of seconds between each photo, and the\n<tt>fallbackDelay</tt> is the number of seconds between each photo when there\nis an error in obtaining an ISS location.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The program must be used on Raspberry Pi. The program is intended for\nuse on ISS, but could be suitable for other environments with some\nadjustments.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>The program uses Python 3 and has not been tested on Python 2. It uses\nthe following Python modules:</p>\n<ol>\n<li>sense-hat</li>\n<li>picamera</li>\n<li>ephem</li>\n</ol>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>It is recommended to install program in Python VENV. Python VENV must be\ncreated with <tt><span class=\"pre\">--system-site-packages</span></tt> argument. However, here are\ngeneral installation instructions.</p>\n<p>Installation from PyPI:</p>\n<pre>sudo pip3 install jakopicevca2017\n</pre>\n<p>Installation from GitHub repository:</p>\n<pre>git clone https://github.com/filips123/jakopicevca/ --branch <span class=\"m\">2017</span> --single-branch\n<span class=\"nb\">cd</span> jakopicevca\nsudo python3 setup.py install\n</pre>\n</div>\n<div id=\"running\">\n<h3>Running</h3>\n<p>Create <tt>config.json</tt> file with the following content (fill the missing\ninformations):</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"TLE\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n    <span class=\"s2\">\"ISS (ZARYA)\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"### Get the latest ISS TLE data ###\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"### http://www.celestrak.com/NORAD/elements/stations.txt ###\"</span>\n  <span class=\"p\">],</span>\n\n  <span class=\"nt\">\"locations\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"### Location Name ###\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"latitude1\"</span><span class=\"p\">:</span> <span class=\"err\">most-north-point</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"latitude2\"</span><span class=\"p\">:</span> <span class=\"err\">most-south-point</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"longitude1\"</span><span class=\"p\">:</span> <span class=\"err\">most-west-point</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"longitude2\"</span><span class=\"p\">:</span> <span class=\"err\">most-east-point</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"delay\"</span><span class=\"p\">:</span> <span class=\"err\">photographing-delay</span>\n      <span class=\"p\">}</span>\n  <span class=\"p\">},</span>\n\n  <span class=\"nt\">\"default\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"delay\"</span><span class=\"p\">:</span> <span class=\"err\">default-photographing-delay</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"fallbackDelay\"</span><span class=\"p\">:</span> <span class=\"err\">fallback-photographing-delay</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Save the file and start the program with:</p>\n<pre>python3 -m jakopicevca2017 path/to/config.json path/to/file.csv path/to/image/folder path/to/file.log\n</pre>\n<p>CSV and log files, and image folder will be created automatically.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the GNU GPL License. See the LICENSE file\nfor more details.</p>\n</div>\n\n          </div>"}, "last_serial": 4320610, "releases": {"1.1.post0": [{"comment_text": "", "digests": {"md5": "83f03defcee2447611b464d6411975d8", "sha256": "a4c13f6e492234c3551ce4927c2f9402361f820e65bc53a371854655789281a9"}, "downloads": -1, "filename": "jakopicevca2017-1.1.post0-py3-none-any.whl", "has_sig": false, "md5_digest": "83f03defcee2447611b464d6411975d8", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 5047, "upload_time": "2018-09-28T15:53:19", "upload_time_iso_8601": "2018-09-28T15:53:19.960532Z", "url": "https://files.pythonhosted.org/packages/7c/74/18f7b7dbab8de719cd4290145f130e2ee7bc38039e14bfab699788772c4c/jakopicevca2017-1.1.post0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "daff7b3d3ec932fe465d7eaf699aa887", "sha256": "2dbc9d2aa71c26dbf78241dfca935ad9e044ebb36ab7e01eeffcb3b56d0bad7f"}, "downloads": -1, "filename": "jakopicevca2017-1.1.post0.tar.gz", "has_sig": false, "md5_digest": "daff7b3d3ec932fe465d7eaf699aa887", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18529, "upload_time": "2018-09-28T15:53:18", "upload_time_iso_8601": "2018-09-28T15:53:18.242621Z", "url": "https://files.pythonhosted.org/packages/fb/7b/92a3a6083418123436643c5ce62988a1ae23b8ab43a6f0c90029670d9790/jakopicevca2017-1.1.post0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83f03defcee2447611b464d6411975d8", "sha256": "a4c13f6e492234c3551ce4927c2f9402361f820e65bc53a371854655789281a9"}, "downloads": -1, "filename": "jakopicevca2017-1.1.post0-py3-none-any.whl", "has_sig": false, "md5_digest": "83f03defcee2447611b464d6411975d8", "packagetype": "bdist_wheel", "python_version": "3.7", "requires_python": null, "size": 5047, "upload_time": "2018-09-28T15:53:19", "upload_time_iso_8601": "2018-09-28T15:53:19.960532Z", "url": "https://files.pythonhosted.org/packages/7c/74/18f7b7dbab8de719cd4290145f130e2ee7bc38039e14bfab699788772c4c/jakopicevca2017-1.1.post0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "daff7b3d3ec932fe465d7eaf699aa887", "sha256": "2dbc9d2aa71c26dbf78241dfca935ad9e044ebb36ab7e01eeffcb3b56d0bad7f"}, "downloads": -1, "filename": "jakopicevca2017-1.1.post0.tar.gz", "has_sig": false, "md5_digest": "daff7b3d3ec932fe465d7eaf699aa887", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18529, "upload_time": "2018-09-28T15:53:18", "upload_time_iso_8601": "2018-09-28T15:53:18.242621Z", "url": "https://files.pythonhosted.org/packages/fb/7b/92a3a6083418123436643c5ce62988a1ae23b8ab43a6f0c90029670d9790/jakopicevca2017-1.1.post0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:20 2020"}