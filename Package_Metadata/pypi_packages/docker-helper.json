{"info": {"author": "Viktor Adam", "author_email": "rycus86@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "# Docker Helper\n\nConvenience utilities for Python applications in Docker containers.\n\n## Functions\n\n- Get current container ID\n\n```python\nget_current_container_id()\n```\n\nReturns the ID of the container the application is currently running in,\notherwise returns `None` if not running in a container.\n\n> This is done on a best-effort basis, guessed from the information in `/proc/self/cgroup`\n\n- Read configuration values\n\n```python\nread_configuration(key, path=None, default=None,\n                   single_config=False, fallback_to_env=True)\n```\n\nA convenient way to read configuration values from files with an option\nto fall back to using environment variables.\nThis can come handy to pass in multiple configuration options as key-value pairs\nusing Docker configs or secrets when working with Swarm services.\nWhen `single_config` is `True`, the configuration file is treated as a single text value\nwhich is useful to read JSON configuration for example for an application.\n\n## License\n\nMIT", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/rycus86/docker_helper/archive/0.0.2.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rycus86/docker_helper", "keywords": "docker,container,cgroup,secret,config", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "docker-helper", "package_url": "https://pypi.org/project/docker-helper/", "platform": "", "project_url": "https://pypi.org/project/docker-helper/", "project_urls": {"Download": "https://github.com/rycus86/docker_helper/archive/0.0.2.tar.gz", "Homepage": "https://github.com/rycus86/docker_helper"}, "release_url": "https://pypi.org/project/docker-helper/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Convenience utilities for Python applications in Docker containers", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Docker Helper<br><br>Convenience utilities for Python applications in Docker containers.<br><br>## Functions<br><br>- Get current container ID<br><br>```python<br>get_current_container_id()<br>```<br><br>Returns the ID of the container the application is currently running in,<br>otherwise returns `None` if not running in a container.<br><br>&gt; This is done on a best-effort basis, guessed from the information in `/proc/self/cgroup`<br><br>- Read configuration values<br><br>```python<br>read_configuration(key, path=None, default=None,<br>                   single_config=False, fallback_to_env=True)<br>```<br><br>A convenient way to read configuration values from files with an option<br>to fall back to using environment variables.<br>This can come handy to pass in multiple configuration options as key-value pairs<br>using Docker configs or secrets when working with Swarm services.<br>When `single_config` is `True`, the configuration file is treated as a single text value<br>which is useful to read JSON configuration for example for an application.<br><br>## License<br><br>MIT\n          </div>"}, "last_serial": 3818650, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "addb11500d8d0a3b1911b7899211b39c", "sha256": "ceafa139a6ba0a4aaa5d30c90881c876dca05080668b712896224fa80bbc53f6"}, "downloads": -1, "filename": "docker_helper-0.0.1.tar.gz", "has_sig": false, "md5_digest": "addb11500d8d0a3b1911b7899211b39c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2518, "upload_time": "2017-12-06T20:53:55", "upload_time_iso_8601": "2017-12-06T20:53:55.225806Z", "url": "https://files.pythonhosted.org/packages/8a/fe/fb8ba9112b3917d1bf6071a23ad7353b9d3ecf34934c830850da14b9150c/docker_helper-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "8969522c641d38e308f273632a584192", "sha256": "79c2e0f9c4f4fe0df25089bd922b2658513d3c853a36e26181f7429a24ac9ca2"}, "downloads": -1, "filename": "docker_helper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8969522c641d38e308f273632a584192", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2686, "upload_time": "2018-04-29T12:46:44", "upload_time_iso_8601": "2018-04-29T12:46:44.448547Z", "url": "https://files.pythonhosted.org/packages/76/54/d496542504352294063957d435aa4a193fa2db20b80d850add93f26470fd/docker_helper-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8969522c641d38e308f273632a584192", "sha256": "79c2e0f9c4f4fe0df25089bd922b2658513d3c853a36e26181f7429a24ac9ca2"}, "downloads": -1, "filename": "docker_helper-0.0.2.tar.gz", "has_sig": false, "md5_digest": "8969522c641d38e308f273632a584192", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2686, "upload_time": "2018-04-29T12:46:44", "upload_time_iso_8601": "2018-04-29T12:46:44.448547Z", "url": "https://files.pythonhosted.org/packages/76/54/d496542504352294063957d435aa4a193fa2db20b80d850add93f26470fd/docker_helper-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:51 2020"}