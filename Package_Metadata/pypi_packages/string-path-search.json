{"info": {"author": "Larry Barnett", "author_email": "JLawrenceB1@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# string-path-search\n Walk a directory tree, searching for files containing any of a set of text strings.\n\n**Note:** The different naming conventions for projects on GitHub vs packages in Python results \nin some unnecessary confusion: \"string-path-search\" (with hyphens) is the name of the project on\n GitHub. This project provides the \"string_path_search\" (with underscores) Python package. \n Please bear with me.\n\n## Why not just use ***find*** and ***grep***?\n* Avoids long, hard-to-debug shell commands with lots of backticks and parentheses.\n* Works on Windows without needing to install a unix work-alike like Cygwin.\n* Searches for a bunch of different strings in one go.\n* Searches within (possibly compressed) jar, tar, or zip archives.\n* Outputs results in CSV or Excel format. \n\n## System requirements\n* Tested on Windows 10, Linux, and Windows 10/cygwin. May also work on other platforms\n supported by Python.\n* Python 3.4 or later (https://www.python.org/downloads/).\n* A Python pip module appropriate to the installed Python version\n (https://pip.pypa.io/en/stable/installing/). It is *possible* to install Python packages, \n including string_path_search, without pip, but it's a lot harder without it.\n\n## A note about installing python and pip\nSome Linux systems (also Cygwin on Windows) come with python 2\npre-installed. You have to install python 3 yourself. There are gotchas\ninvolved:\n1. The \"python\" and \"pip\" packages may be reserved for version 2. It may not be as easy as \n \"apt-get install python3\" either. The latest package might be called \"python3.7\" or similar.\n  Ditto with pip.\n2.  Once installed, the python 3 binary may be called \"python3\", not\n    \"python\". Ditto with pip.\n\n## Installation from pypi:\n<pre>\n> python -m pip install --user string-path-search \n</pre>\n\n## Installation from GitHub\nYou can also download string-path-search with your browser as a .zip or .tgz archive from \nhttps://github.com/j-lawrence-b1/string-path-search/releases/latest \n into any convenient directory. Once unpacked, you can install string_path_search and its \n dependencies using the included setup.py script (which uses pip internally!).\n<pre>\n> chdir &lt;my-downloads-dir&gt;\\\\string-path-search-0.3.2\n> python setup.py build install --user \n</pre>\n**Note:** Installing with the '--user' option will install the string_path_search Python package\nunder your login's HOME directory (C:/Users/<user-name>/.local/Scripts on \nWindows or /home/<user-name>/.local/bin on Linux). If you plan to run the\n provided string_path_search.exe directly, you should add this directory to you\n your shell's execution path.\n## Usage\nAlthough you can import and use this package in other Python scripts,\nstring_path_search is primarily intended to be invoked as a console app:\n<pre>\n    $ python -m string_path_search [OPTIONS] &lt;scan-root&gt; [&lt;search-term&gt; [...]]\n</pre>\nor, you can add run the standalone string_path_search.exe directly (see **Note,** above).\n<pre>\n    $ ~/.local/bin/string_path_search [OPTIONS] &lt;scan-root&gt; [&lt;search-term&gt; [...]]\n</pre>\nwhere:\n<pre>\n    -a, --scan-archives = Unpack and scan within archives\n        (Default: Skip arhive files. Only jar, tar, and zip archives will be\n            unpacked. Tar bzip2, gzip, and xz compression is supported.\n    -B, --branding-text=&lt;branding-text&gt; = A string of text containing\n        company or other information to add above the column headers in\n        scan reports (Default: no text).\n    -b, --branding-logo=&lt;branding-logo&gt; = (MS Excel only) An image\n        file containing a corporate logo or other graphic to add above the\n        column headers in scan reports (Default: no logo).\n    -h, --help = Print usage information and exit.\n    -e, --excel-output = Generate Microsoft Excel 2007 (.xlsx) output\n        (Default: Generate comma-separated-value (CSV) text output)\n    -i  --ingore-case = Ignore UPPER/lowercase differences when matching strings\n        (Default: case differences are significant).\n    -o, --output-dir=&lt;output-dir&gt; = Location for output (Default:\n        &lt;current working directory&gt;).\n    -s, --search-strings-file=&lt;search-strings&gt; = A file containing strings to\n        search for, one per line (Default: Get search strings from the command line).\n    -q, --quiet = Decrease logging verbosity (may repeat). -qqqq will suppress all logging.\n    -t, --temp-dir=&lt;temp-dir&gt; = Location for unpacking archives\n        (Default: &lt;output_dir&gt;/temp).\n    -v, --verbose = Increase logging verbosity.\n    -x, --exclusions-file=&lt;exclusion-file&gt; = A file containing (base) filenames to\n        exclude from the search results, one per line (Default: Include all results).\n&lt;scan-root&gt; = Directory to scan.\n&lt;search-term&gt; ... = One or more terms to search for in &lt;scan-root&gt;.\n</pre>\n## Examples\n\nPerform a caseless search of the test/data directory for any occurrence of\n'copyright', 'gpl', 'foo', 'bar', or 'baz' and output the results to a\nfile called 'scan-&lt;timestamp>.csv' in the current working directory.\n<pre>$ python -m string_path_search -i tests/data \"copyright (c)\" gpl foo bar baz</pre>\n\nSame as example 1, except output to an Excel spreadsheet:\n<pre>$ python -m string_path_search -i -e tests/data \"copyright (c)\" gpl foo bar baz</pre>\n\n**Gotcha:** Use double-quotes for multi-word search strings. For some reason,\nsingle quotes screw up the command line parser.\n## License\nstring_path_search is distributed under the\n[MIT License](http://github.com/j-lawrence-b1/string-path-search/blob/master/LICENSE).\n\n## Disclaimer regarding the test data:\n\nThe files in the test/data folder were randomly downloaded from publicly \navailable Open Source projects. Distributing these materials with string_path_search as \ntest data may or may not be in violation of the applicable licenses.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/j-lawrence-b1/string_path_search", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "string-path-search", "package_url": "https://pypi.org/project/string-path-search/", "platform": "", "project_url": "https://pypi.org/project/string-path-search/", "project_urls": {"Homepage": "https://github.com/j-lawrence-b1/string_path_search"}, "release_url": "https://pypi.org/project/string-path-search/0.3.3/", "requires_dist": ["Pillow", "xlrd", "xlsxwriter"], "requires_python": ">=3.4.0", "summary": "Search a directory path for any of a list of strings.", "version": "0.3.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>string-path-search</h1>\n<p>Walk a directory tree, searching for files containing any of a set of text strings.</p>\n<p><strong>Note:</strong> The different naming conventions for projects on GitHub vs packages in Python results\nin some unnecessary confusion: \"string-path-search\" (with hyphens) is the name of the project on\nGitHub. This project provides the \"string_path_search\" (with underscores) Python package.\nPlease bear with me.</p>\n<h2>Why not just use <em><strong>find</strong></em> and <em><strong>grep</strong></em>?</h2>\n<ul>\n<li>Avoids long, hard-to-debug shell commands with lots of backticks and parentheses.</li>\n<li>Works on Windows without needing to install a unix work-alike like Cygwin.</li>\n<li>Searches for a bunch of different strings in one go.</li>\n<li>Searches within (possibly compressed) jar, tar, or zip archives.</li>\n<li>Outputs results in CSV or Excel format.</li>\n</ul>\n<h2>System requirements</h2>\n<ul>\n<li>Tested on Windows 10, Linux, and Windows 10/cygwin. May also work on other platforms\nsupported by Python.</li>\n<li>Python 3.4 or later (<a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">https://www.python.org/downloads/</a>).</li>\n<li>A Python pip module appropriate to the installed Python version\n(<a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">https://pip.pypa.io/en/stable/installing/</a>). It is <em>possible</em> to install Python packages,\nincluding string_path_search, without pip, but it's a lot harder without it.</li>\n</ul>\n<h2>A note about installing python and pip</h2>\n<p>Some Linux systems (also Cygwin on Windows) come with python 2\npre-installed. You have to install python 3 yourself. There are gotchas\ninvolved:</p>\n<ol>\n<li>The \"python\" and \"pip\" packages may be reserved for version 2. It may not be as easy as\n\"apt-get install python3\" either. The latest package might be called \"python3.7\" or similar.\nDitto with pip.</li>\n<li>Once installed, the python 3 binary may be called \"python3\", not\n\"python\". Ditto with pip.</li>\n</ol>\n<h2>Installation from pypi:</h2>\n<pre>&gt; python -m pip install --user string-path-search \n</pre>\n<h2>Installation from GitHub</h2>\n<p>You can also download string-path-search with your browser as a .zip or .tgz archive from\n<a href=\"https://github.com/j-lawrence-b1/string-path-search/releases/latest\" rel=\"nofollow\">https://github.com/j-lawrence-b1/string-path-search/releases/latest</a>\ninto any convenient directory. Once unpacked, you can install string_path_search and its\ndependencies using the included setup.py script (which uses pip internally!).</p>\n<pre>&gt; chdir &lt;my-downloads-dir&gt;\\\\string-path-search-0.3.2\n&gt; python setup.py build install --user \n</pre>\n<p><strong>Note:</strong> Installing with the '--user' option will install the string_path_search Python package\nunder your login's HOME directory (C:/Users/&lt;user-name&gt;/.local/Scripts on\nWindows or /home/&lt;user-name&gt;/.local/bin on Linux). If you plan to run the\nprovided string_path_search.exe directly, you should add this directory to you\nyour shell's execution path.</p>\n<h2>Usage</h2>\n<p>Although you can import and use this package in other Python scripts,\nstring_path_search is primarily intended to be invoked as a console app:</p>\n<pre>    $ python -m string_path_search [OPTIONS] &lt;scan-root&gt; [&lt;search-term&gt; [...]]\n</pre>\n<p>or, you can add run the standalone string_path_search.exe directly (see <strong>Note,</strong> above).</p>\n<pre>    $ ~/.local/bin/string_path_search [OPTIONS] &lt;scan-root&gt; [&lt;search-term&gt; [...]]\n</pre>\n<p>where:</p>\n<pre>    -a, --scan-archives = Unpack and scan within archives\n        (Default: Skip arhive files. Only jar, tar, and zip archives will be\n            unpacked. Tar bzip2, gzip, and xz compression is supported.\n    -B, --branding-text=&lt;branding-text&gt; = A string of text containing\n        company or other information to add above the column headers in\n        scan reports (Default: no text).\n    -b, --branding-logo=&lt;branding-logo&gt; = (MS Excel only) An image\n        file containing a corporate logo or other graphic to add above the\n        column headers in scan reports (Default: no logo).\n    -h, --help = Print usage information and exit.\n    -e, --excel-output = Generate Microsoft Excel 2007 (.xlsx) output\n        (Default: Generate comma-separated-value (CSV) text output)\n    -i  --ingore-case = Ignore UPPER/lowercase differences when matching strings\n        (Default: case differences are significant).\n    -o, --output-dir=&lt;output-dir&gt; = Location for output (Default:\n        &lt;current working directory&gt;).\n    -s, --search-strings-file=&lt;search-strings&gt; = A file containing strings to\n        search for, one per line (Default: Get search strings from the command line).\n    -q, --quiet = Decrease logging verbosity (may repeat). -qqqq will suppress all logging.\n    -t, --temp-dir=&lt;temp-dir&gt; = Location for unpacking archives\n        (Default: &lt;output_dir&gt;/temp).\n    -v, --verbose = Increase logging verbosity.\n    -x, --exclusions-file=&lt;exclusion-file&gt; = A file containing (base) filenames to\n        exclude from the search results, one per line (Default: Include all results).\n&lt;scan-root&gt; = Directory to scan.\n&lt;search-term&gt; ... = One or more terms to search for in &lt;scan-root&gt;.\n</pre>\n<h2>Examples</h2>\n<p>Perform a caseless search of the test/data directory for any occurrence of\n'copyright', 'gpl', 'foo', 'bar', or 'baz' and output the results to a\nfile called 'scan-&lt;timestamp&gt;.csv' in the current working directory.</p>\n<pre>$ python -m string_path_search -i tests/data \"copyright (c)\" gpl foo bar baz</pre>\n<p>Same as example 1, except output to an Excel spreadsheet:</p>\n<pre>$ python -m string_path_search -i -e tests/data \"copyright (c)\" gpl foo bar baz</pre>\n<p><strong>Gotcha:</strong> Use double-quotes for multi-word search strings. For some reason,\nsingle quotes screw up the command line parser.</p>\n<h2>License</h2>\n<p>string_path_search is distributed under the\n<a href=\"http://github.com/j-lawrence-b1/string-path-search/blob/master/LICENSE\" rel=\"nofollow\">MIT License</a>.</p>\n<h2>Disclaimer regarding the test data:</h2>\n<p>The files in the test/data folder were randomly downloaded from publicly\navailable Open Source projects. Distributing these materials with string_path_search as\ntest data may or may not be in violation of the applicable licenses.</p>\n\n          </div>"}, "last_serial": 5674212, "releases": {"0.3.1": [{"comment_text": "", "digests": {"md5": "2a9adbaf25289b62e898a7c258c04185", "sha256": "487f38ac4880a2e0bf63e24ed1dd894a23f085c6548aca1a4b0f099e608a272c"}, "downloads": -1, "filename": "string_path_search-0.3.1-py3.7.egg", "has_sig": false, "md5_digest": "2a9adbaf25289b62e898a7c258c04185", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.4.0", "size": 22954, "upload_time": "2019-08-01T20:32:54", "upload_time_iso_8601": "2019-08-01T20:32:54.766501Z", "url": "https://files.pythonhosted.org/packages/30/c4/1a5cd7d58c2d0003be93bc2d66ae7f23c8020f38cdbea6fadd95c10004ec/string_path_search-0.3.1-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b40c84e58161735523e8744e7937a6c", "sha256": "b42374e003f1051cdbefd7fdeaf3a137738a6389aa55b0d90269707ff5614bb1"}, "downloads": -1, "filename": "string_path_search-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3b40c84e58161735523e8744e7937a6c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.0", "size": 14151, "upload_time": "2019-08-01T20:32:52", "upload_time_iso_8601": "2019-08-01T20:32:52.364601Z", "url": "https://files.pythonhosted.org/packages/df/ac/f6cd320dd8242825e98086c9fff996df50a70809ad22ed8f44adcec9bf7c/string_path_search-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b47e35edaf964856215201ce3691058", "sha256": "97e9098c1e03ade680079e59a5c2021e21168bd398a0a52d651e0359b380192f"}, "downloads": -1, "filename": "string_path_search-0.3.1.tar.gz", "has_sig": false, "md5_digest": "3b47e35edaf964856215201ce3691058", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 12559, "upload_time": "2019-08-01T20:32:56", "upload_time_iso_8601": "2019-08-01T20:32:56.242915Z", "url": "https://files.pythonhosted.org/packages/db/28/53d27d2861e1bfc838554aa6d3137fedddc0ed8c95b8b1de09deb8f7e562/string_path_search-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "4158d54eaab5bebcc2bacf15782e28d3", "sha256": "68cbe1653b9a5d59dd13a4911641ef6553650038bf560fd18230d196992744a1"}, "downloads": -1, "filename": "string_path_search-0.3.2-py3.7.egg", "has_sig": false, "md5_digest": "4158d54eaab5bebcc2bacf15782e28d3", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.4.0", "size": 23522, "upload_time": "2019-08-14T00:32:53", "upload_time_iso_8601": "2019-08-14T00:32:53.116837Z", "url": "https://files.pythonhosted.org/packages/f1/f6/7aa697247b0d5fdbfdf8006e548ed84244fa65fbdca1e769326456cb85ab/string_path_search-0.3.2-py3.7.egg", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "8eb0cbb8790a6a4900aa20fd625f9afb", "sha256": "fd1da3740b274b835aaa17420c012eedacf796a4b84fbc2b2463da84a8815d61"}, "downloads": -1, "filename": "string_path_search-0.3.3-py3.7.egg", "has_sig": false, "md5_digest": "8eb0cbb8790a6a4900aa20fd625f9afb", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.4.0", "size": 23521, "upload_time": "2019-08-14T00:32:54", "upload_time_iso_8601": "2019-08-14T00:32:54.649419Z", "url": "https://files.pythonhosted.org/packages/43/aa/68097202586bb2db89d3187f08f64d16462d1f95d835775ed51904f8c088/string_path_search-0.3.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b6dd42ca6a9799ade5a6d6cf625e7aa", "sha256": "fb14be76bbce94cbcc3267a18222a219c49dafaef9bf2448876927e1e6fc2cdc"}, "downloads": -1, "filename": "string_path_search-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3b6dd42ca6a9799ade5a6d6cf625e7aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.0", "size": 14670, "upload_time": "2019-08-14T00:32:51", "upload_time_iso_8601": "2019-08-14T00:32:51.454602Z", "url": "https://files.pythonhosted.org/packages/15/b6/5066696818b1c97c70e34a7146c51aabdb862f544d1fdb094f1f10d49a13/string_path_search-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "254c44069a4704c9cb7a65c88e9dabdd", "sha256": "83e0103c52c48db64b13bef107cfa5fa53697f5ac46508f4940710959ea9ae65"}, "downloads": -1, "filename": "string_path_search-0.3.3.tar.gz", "has_sig": false, "md5_digest": "254c44069a4704c9cb7a65c88e9dabdd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 13970, "upload_time": "2019-08-14T00:32:56", "upload_time_iso_8601": "2019-08-14T00:32:56.036716Z", "url": "https://files.pythonhosted.org/packages/63/96/6a857e527dba0cafc9ca749b288b49539a74f88c4352873715537f0e869e/string_path_search-0.3.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8eb0cbb8790a6a4900aa20fd625f9afb", "sha256": "fd1da3740b274b835aaa17420c012eedacf796a4b84fbc2b2463da84a8815d61"}, "downloads": -1, "filename": "string_path_search-0.3.3-py3.7.egg", "has_sig": false, "md5_digest": "8eb0cbb8790a6a4900aa20fd625f9afb", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": ">=3.4.0", "size": 23521, "upload_time": "2019-08-14T00:32:54", "upload_time_iso_8601": "2019-08-14T00:32:54.649419Z", "url": "https://files.pythonhosted.org/packages/43/aa/68097202586bb2db89d3187f08f64d16462d1f95d835775ed51904f8c088/string_path_search-0.3.3-py3.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b6dd42ca6a9799ade5a6d6cf625e7aa", "sha256": "fb14be76bbce94cbcc3267a18222a219c49dafaef9bf2448876927e1e6fc2cdc"}, "downloads": -1, "filename": "string_path_search-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "3b6dd42ca6a9799ade5a6d6cf625e7aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.4.0", "size": 14670, "upload_time": "2019-08-14T00:32:51", "upload_time_iso_8601": "2019-08-14T00:32:51.454602Z", "url": "https://files.pythonhosted.org/packages/15/b6/5066696818b1c97c70e34a7146c51aabdb862f544d1fdb094f1f10d49a13/string_path_search-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "254c44069a4704c9cb7a65c88e9dabdd", "sha256": "83e0103c52c48db64b13bef107cfa5fa53697f5ac46508f4940710959ea9ae65"}, "downloads": -1, "filename": "string_path_search-0.3.3.tar.gz", "has_sig": false, "md5_digest": "254c44069a4704c9cb7a65c88e9dabdd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4.0", "size": 13970, "upload_time": "2019-08-14T00:32:56", "upload_time_iso_8601": "2019-08-14T00:32:56.036716Z", "url": "https://files.pythonhosted.org/packages/63/96/6a857e527dba0cafc9ca749b288b49539a74f88c4352873715537f0e869e/string_path_search-0.3.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:11 2020"}