{"info": {"author": "George Katsitadze", "author_email": "george@janrain.com", "bugtrack_url": null, "classifiers": [], "description": "Backplane Client Library for Python\n===================================\n\nThis library integrates server side Backplane clients with the Backplane server protocol (https://github.com/janrain/janrain-backplane-2).\n\nInstallation\n============\n```shell\npip install backplane2-pyclient\n```\n\nUsage\n=====\n\nYou should have client credentials for a Backplane server, with a bus provisioned for your use. If you have admin access to a backplane server, the following steps will get you set up:\n\n1. Provision a client (/v2/provision/client/update)\n2. Provision a bus (/v2/provision/bus/update)\n3. Grant client access to bus (/v2/provision/grant/add)\n\nFor more information see the [Backplane server readme](https://github.com/janrain/janrain-backplane-2/blob/master/README20.md).\n\nExample:\n\n```python\nimport backplane\nfrom backplane import ClientCredentials, Client, Message, channel_from_scope\n\nbackplane.debug() # Enable debugging output\n\nclient_credentials = ClientCredentials('https://backplane1.janrainbackplane.com', 'client id', 'secret')\nclient = Client(client_credentials, True, 'bus:mybusname')\naccess_token = client.get_regular_token('mybusname')\nchannel = channel_from_scope(access_token.scope)\nmessage = Message('mybusname', channel, 'test', 'payload', True)\nclient.post_message(message)\n\n# Poll server for messages\nmessage_wrapper = None\nwhile True:\n    # connect to Backplane server for 20 seconds at a time\n    message_wrapper = client.get_messages(message_wrapper, 20)\n    ...\n```\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/janrain/backplane2-pyclient", "keywords": "backplane library", "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "backplane2-pyclient", "package_url": "https://pypi.org/project/backplane2-pyclient/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/backplane2-pyclient/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/janrain/backplane2-pyclient"}, "release_url": "https://pypi.org/project/backplane2-pyclient/0.2/", "requires_dist": null, "requires_python": null, "summary": "Backplane 2 library for python", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            Backplane Client Library for Python<br>===================================<br><br>This library integrates server side Backplane clients with the Backplane server protocol (https://github.com/janrain/janrain-backplane-2).<br><br>Installation<br>============<br>```shell<br>pip install backplane2-pyclient<br>```<br><br>Usage<br>=====<br><br>You should have client credentials for a Backplane server, with a bus provisioned for your use. If you have admin access to a backplane server, the following steps will get you set up:<br><br>1. Provision a client (/v2/provision/client/update)<br>2. Provision a bus (/v2/provision/bus/update)<br>3. Grant client access to bus (/v2/provision/grant/add)<br><br>For more information see the [Backplane server readme](https://github.com/janrain/janrain-backplane-2/blob/master/README20.md).<br><br>Example:<br><br>```python<br>import backplane<br>from backplane import ClientCredentials, Client, Message, channel_from_scope<br><br>backplane.debug() # Enable debugging output<br><br>client_credentials = ClientCredentials('https://backplane1.janrainbackplane.com', 'client id', 'secret')<br>client = Client(client_credentials, True, 'bus:mybusname')<br>access_token = client.get_regular_token('mybusname')<br>channel = channel_from_scope(access_token.scope)<br>message = Message('mybusname', channel, 'test', 'payload', True)<br>client.post_message(message)<br><br># Poll server for messages<br>message_wrapper = None<br>while True:<br>    # connect to Backplane server for 20 seconds at a time<br>    message_wrapper = client.get_messages(message_wrapper, 20)<br>    ...<br>```<br>\n          </div>"}, "last_serial": 786672, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "98cdd536d19446169682f2848717cc71", "sha256": "7f3ce85ea2fc96ffe65c882914614f763a53e818caf8c6ae20471e4b4b9c4234"}, "downloads": -1, "filename": "backplane2-pyclient-0.1.tar.gz", "has_sig": false, "md5_digest": "98cdd536d19446169682f2848717cc71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6862, "upload_time": "2012-12-17T18:53:01", "upload_time_iso_8601": "2012-12-17T18:53:01.937863Z", "url": "https://files.pythonhosted.org/packages/36/4f/3cd67babcea07c24bbb5ea45cf8434356d70fac2f19255a3624ef63a873c/backplane2-pyclient-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "012ad5781fd9d1a0cb9dd8ff1a0351e0", "sha256": "d63cae12d7c70ea8cdd8548c6369089514790989249c226e226d8e7fff1bc412"}, "downloads": -1, "filename": "backplane2-pyclient-0.2.tar.gz", "has_sig": false, "md5_digest": "012ad5781fd9d1a0cb9dd8ff1a0351e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8016, "upload_time": "2013-01-07T23:46:04", "upload_time_iso_8601": "2013-01-07T23:46:04.292820Z", "url": "https://files.pythonhosted.org/packages/f5/0c/4af6c8d58806f0af620e88ed6f9851a3be28c2d54f50ecfe88e1148c2ec5/backplane2-pyclient-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "012ad5781fd9d1a0cb9dd8ff1a0351e0", "sha256": "d63cae12d7c70ea8cdd8548c6369089514790989249c226e226d8e7fff1bc412"}, "downloads": -1, "filename": "backplane2-pyclient-0.2.tar.gz", "has_sig": false, "md5_digest": "012ad5781fd9d1a0cb9dd8ff1a0351e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8016, "upload_time": "2013-01-07T23:46:04", "upload_time_iso_8601": "2013-01-07T23:46:04.292820Z", "url": "https://files.pythonhosted.org/packages/f5/0c/4af6c8d58806f0af620e88ed6f9851a3be28c2d54f50ecfe88e1148c2ec5/backplane2-pyclient-0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:08 2020"}