{"info": {"author": "Souheil Chelfouh", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Zope3", "Intended Audience :: Other Audience", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "=============\ndolmen.beaker\n=============\n\nSession\n=======\n\nConfiguration\n-------------\n\n   >>> from zope.component import getUtility, queryUtility\n   >>> from dolmen.beaker.interfaces import ISessionConfig\n\n   >>> session_config = queryUtility(ISessionConfig)\n   >>> session_config.get('key')\n   'beaker.session.id'\n\n\nInitialisation\n--------------\n\n``dolmen.beaker`` initialize the beaker session when the traversing\nstarts (traversing the IRootFolder object)::\n\n   >>> from zope.event import notify\n   >>> import grokcore.component as grok\n   >>> from zope.publisher.browser import TestRequest\n   >>> from zope.publisher.interfaces.http import IHTTPRequest\n   >>> from zope.traversing.interfaces import BeforeTraverseEvent\n\nFirst we create an instance of the Request::\n\n   >>> request = TestRequest()\n   >>> IHTTPRequest.providedBy(request)\n   True\n\nWe initalize our Session with the help of the BeforeTraverseEvent.\nThis event will make an instance of a Session Object in the Request::\n\n   >>> from zope.component.hooks import getSite\n   >>> site = getSite()\n   >>> notify(BeforeTraverseEvent(site, request))\n\nWe can get the session object using two available adapters::\n\n   >>> from dolmen.beaker.interfaces import ISession\n   >>> session = ISession(request)\n   >>> session.__class__\n   <class 'beaker.session.SessionObject'>\n\nLet's assign an value to our session and save it::\n\n   >>> session['foo'] = 'bar'\n   >>> session.save()\n   >>> session['foo']\n   'bar'\n\nA new request will not have access to the session without traversing::\n\n   >>> newrequest = TestRequest()\n   >>> newrequest.response._cookies\n   {}\n\n   >>> session = ISession(newrequest)\n   >>> session['foo']\n   Traceback (most recent call last):\n   ...\n   KeyError: 'foo'\n\n\nclosure and invalidation\n------------------------\n\n   >>> cookie = request.response._cookies\n   >>> cookie\n   {}\n\n   >>> from zope.publisher.interfaces import EndRequestEvent\n   >>> notify(EndRequestEvent(site, request))\n\n   >>> cookie = request.response._cookies\n   >>> cookie\n   {'beaker.session.id': {'path': '/', 'samesite': 'Lax', 'value': '...'}}\n\nInvalidating\n------------\n\n   >>> import hamcrest\n   >>> session = ISession(request)\n   >>> print(session['foo'])\n   bar\n\n   >>> session.invalidate() # Or destroy, to get rid of everything\n   >>> session['foo']\n   Traceback (most recent call last):\n   ...\n   KeyError: 'foo'\n\n\nThe Zope Session adapter\n========================\n\n   >>> from zope.session.interfaces import ISession as IZopeSession\n\n   >>> request = TestRequest()\n   >>> notify(BeforeTraverseEvent(site, request))\n\n   >>> zsession = IZopeSession(request)\n   >>> print(zsession)\n   <dolmen.beaker.session.ZopeSession object at ...>\n\n   >>> from zope.interface.verify import verifyObject\n   >>> verifyObject(IZopeSession, zsession)\n   True\n\n   >>> data = zsession['my_package']\n   >>> print(data)\n   <dolmen.beaker.session.NamespaceSessionData object at ...>\n\n   >>> data['someitem'] = 'test'\n   >>> print(data['someitem'])\n   test\n\n   >>> data = zsession['some.other.package']\n   >>> data['info'] = 'Grok !'\n\nChangelog\n=========\n\n0.3 (2020-04-07)\n----------------\n\n- Corrected deprecated import and package structure.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.dolmen-project.org", "keywords": "Zope3 Session", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "dolmen.beaker", "package_url": "https://pypi.org/project/dolmen.beaker/", "platform": "Any", "project_url": "https://pypi.org/project/dolmen.beaker/", "project_urls": {"Homepage": "http://www.dolmen-project.org"}, "release_url": "https://pypi.org/project/dolmen.beaker/0.3/", "requires_dist": null, "requires_python": "", "summary": "An implementation of a zope session, using beaker.", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"session\">\n<h2>Session</h2>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.component import getUtility, queryUtility\n&gt;&gt;&gt; from dolmen.beaker.interfaces import ISessionConfig\n</pre>\n<pre>&gt;&gt;&gt; session_config = queryUtility(ISessionConfig)\n&gt;&gt;&gt; session_config.get('key')\n'beaker.session.id'\n</pre>\n</blockquote>\n</div>\n<div id=\"initialisation\">\n<h3>Initialisation</h3>\n<p><tt>dolmen.beaker</tt> initialize the beaker session when the traversing\nstarts (traversing the IRootFolder object):</p>\n<pre>&gt;&gt;&gt; from zope.event import notify\n&gt;&gt;&gt; import grokcore.component as grok\n&gt;&gt;&gt; from zope.publisher.browser import TestRequest\n&gt;&gt;&gt; from zope.publisher.interfaces.http import IHTTPRequest\n&gt;&gt;&gt; from zope.traversing.interfaces import BeforeTraverseEvent\n</pre>\n<p>First we create an instance of the Request:</p>\n<pre>&gt;&gt;&gt; request = TestRequest()\n&gt;&gt;&gt; IHTTPRequest.providedBy(request)\nTrue\n</pre>\n<p>We initalize our Session with the help of the BeforeTraverseEvent.\nThis event will make an instance of a Session Object in the Request:</p>\n<pre>&gt;&gt;&gt; from zope.component.hooks import getSite\n&gt;&gt;&gt; site = getSite()\n&gt;&gt;&gt; notify(BeforeTraverseEvent(site, request))\n</pre>\n<p>We can get the session object using two available adapters:</p>\n<pre>&gt;&gt;&gt; from dolmen.beaker.interfaces import ISession\n&gt;&gt;&gt; session = ISession(request)\n&gt;&gt;&gt; session.__class__\n&lt;class 'beaker.session.SessionObject'&gt;\n</pre>\n<p>Let\u2019s assign an value to our session and save it:</p>\n<pre>&gt;&gt;&gt; session['foo'] = 'bar'\n&gt;&gt;&gt; session.save()\n&gt;&gt;&gt; session['foo']\n'bar'\n</pre>\n<p>A new request will not have access to the session without traversing:</p>\n<pre>&gt;&gt;&gt; newrequest = TestRequest()\n&gt;&gt;&gt; newrequest.response._cookies\n{}\n\n&gt;&gt;&gt; session = ISession(newrequest)\n&gt;&gt;&gt; session['foo']\nTraceback (most recent call last):\n...\nKeyError: 'foo'\n</pre>\n</div>\n<div id=\"closure-and-invalidation\">\n<h3>closure and invalidation</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; cookie = request.response._cookies\n&gt;&gt;&gt; cookie\n{}\n</pre>\n<pre>&gt;&gt;&gt; from zope.publisher.interfaces import EndRequestEvent\n&gt;&gt;&gt; notify(EndRequestEvent(site, request))\n</pre>\n<pre>&gt;&gt;&gt; cookie = request.response._cookies\n&gt;&gt;&gt; cookie\n{'beaker.session.id': {'path': '/', 'samesite': 'Lax', 'value': '...'}}\n</pre>\n</blockquote>\n</div>\n<div id=\"invalidating\">\n<h3>Invalidating</h3>\n<blockquote>\n<pre>&gt;&gt;&gt; import hamcrest\n&gt;&gt;&gt; session = ISession(request)\n&gt;&gt;&gt; print(session['foo'])\nbar\n</pre>\n<pre>&gt;&gt;&gt; session.invalidate() # Or destroy, to get rid of everything\n&gt;&gt;&gt; session['foo']\nTraceback (most recent call last):\n...\nKeyError: 'foo'\n</pre>\n</blockquote>\n</div>\n</div>\n<div id=\"the-zope-session-adapter\">\n<h2>The Zope Session adapter</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; from zope.session.interfaces import ISession as IZopeSession\n</pre>\n<pre>&gt;&gt;&gt; request = TestRequest()\n&gt;&gt;&gt; notify(BeforeTraverseEvent(site, request))\n</pre>\n<pre>&gt;&gt;&gt; zsession = IZopeSession(request)\n&gt;&gt;&gt; print(zsession)\n&lt;dolmen.beaker.session.ZopeSession object at ...&gt;\n</pre>\n<pre>&gt;&gt;&gt; from zope.interface.verify import verifyObject\n&gt;&gt;&gt; verifyObject(IZopeSession, zsession)\nTrue\n</pre>\n<pre>&gt;&gt;&gt; data = zsession['my_package']\n&gt;&gt;&gt; print(data)\n&lt;dolmen.beaker.session.NamespaceSessionData object at ...&gt;\n</pre>\n<pre>&gt;&gt;&gt; data['someitem'] = 'test'\n&gt;&gt;&gt; print(data['someitem'])\ntest\n</pre>\n<pre>&gt;&gt;&gt; data = zsession['some.other.package']\n&gt;&gt;&gt; data['info'] = 'Grok !'\n</pre>\n</blockquote>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.3 (2020-04-07)</span></h2>\n<ul>\n<li>Corrected deprecated import and package structure.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6970885, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f3098f8b5d99afa768253a21c3b95c3e", "sha256": "17ca2f94130640cf69ae17558910a24e3b2f40b2685f4f4b89b09d2ca299ae45"}, "downloads": -1, "filename": "dolmen.beaker-0.1.tar.gz", "has_sig": false, "md5_digest": "f3098f8b5d99afa768253a21c3b95c3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6032, "upload_time": "2010-07-01T16:12:48", "upload_time_iso_8601": "2010-07-01T16:12:48.645700Z", "url": "https://files.pythonhosted.org/packages/22/0b/18e92cc9863fd98d9b6b8528d307dbfbaaf1c4c4f125ab95493e15333c22/dolmen.beaker-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "f866542887f4ed4e05283743d60c653f", "sha256": "74713e2a9cfbd173c5e4934b4545157f942e6bca37cf4caef4b58493c5efb194"}, "downloads": -1, "filename": "dolmen.beaker-0.2.tar.gz", "has_sig": false, "md5_digest": "f866542887f4ed4e05283743d60c653f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7398, "upload_time": "2020-03-30T16:27:18", "upload_time_iso_8601": "2020-03-30T16:27:18.128602Z", "url": "https://files.pythonhosted.org/packages/8e/a2/f025d461330c0cdee5f3364abe9379c6db3ce5d9c33bd6d3a10d7a736800/dolmen.beaker-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "112f61ae8e1b235e2312a37e9dfd57cb", "sha256": "7b81fd650126a17048001c047749b763b55e950b0ff37ef5550b6a7f9228af2c"}, "downloads": -1, "filename": "dolmen.beaker-0.3.tar.gz", "has_sig": false, "md5_digest": "112f61ae8e1b235e2312a37e9dfd57cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7557, "upload_time": "2020-04-07T15:39:27", "upload_time_iso_8601": "2020-04-07T15:39:27.983460Z", "url": "https://files.pythonhosted.org/packages/c1/03/e0e4d270ed2f2607b955e439c3969a472474fc0adfdc3daebbe53d851962/dolmen.beaker-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "112f61ae8e1b235e2312a37e9dfd57cb", "sha256": "7b81fd650126a17048001c047749b763b55e950b0ff37ef5550b6a7f9228af2c"}, "downloads": -1, "filename": "dolmen.beaker-0.3.tar.gz", "has_sig": false, "md5_digest": "112f61ae8e1b235e2312a37e9dfd57cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7557, "upload_time": "2020-04-07T15:39:27", "upload_time_iso_8601": "2020-04-07T15:39:27.983460Z", "url": "https://files.pythonhosted.org/packages/c1/03/e0e4d270ed2f2607b955e439c3969a472474fc0adfdc3daebbe53d851962/dolmen.beaker-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:29 2020"}