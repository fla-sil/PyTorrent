{"info": {"author": "Markus Binsteiner", "author_email": "markus@frkl.io", "bugtrack_url": null, "classifiers": [], "description": "<h1 align=\"center\">\n  <img src=\"https://raw.githubusercontent.com/manrajgrover/halo/master/art/halo.png\" height=\"50px\"/>\n  <br>\n  halo\n</h1>\n\n[![Build Status](https://travis-ci.org/manrajgrover/halo.svg?branch=master)](https://travis-ci.org/manrajgrover/halo) [![Build status](https://ci.appveyor.com/api/projects/status/wa6t414gltr403ff?svg=true)](https://ci.appveyor.com/project/manrajgrover/halo) [![Coverage Status](https://coveralls.io/repos/github/manrajgrover/halo/badge.svg?branch=master)](https://coveralls.io/github/manrajgrover/halo?branch=master)\n [![PyPI](https://img.shields.io/pypi/v/halo.svg)](https://github.com/manrajgrover/halo) ![awesome](https://img.shields.io/badge/awesome-yes-green.svg)\n> Beautiful spinners for terminal, IPython and Jupyter\n\n![halo](https://raw.github.com/manrajgrover/halo/master/art/doge_spin.svg?sanitize=true)\n\n## Install\n\n```shell\n$ pip install halo\n```\n\n## Usage\n\n```py\nfrom halo import Halo\n\nspinner = Halo(text='Loading', spinner='dots')\nspinner.start()\n\n# Run time consuming work here\n# You can also change properties for spinner as and when you want\n\nspinner.stop()\n```\n\nAlternatively, you can use halo with Python's `with` statement:\n\n```py\nfrom halo import Halo\n\nwith Halo(text='Loading', spinner='dots'):\n    # Run time consuming work here\n```\n\nFinally, you can use halo as a decorator:\n\n```py\nfrom halo import Halo\n\n@Halo(text='Loading', spinner='dots')\ndef long_running_function():\n    # Run time consuming work here\n    pass\n\nlong_running_function()\n```\n\n## API\n\n### `Halo([text|text_color|spinner|animation|placement|color|interval|stream|enabled])`\n\n##### `text`\n*Type*: `str`\n\nText shown along with spinner.\n\n##### `text_color`\n*Type*: `str`\n*Values*: `grey`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`, `white`\n\nColor of the spinner text. Defaults to `None`.\n\n##### `spinner`\n*Type*: `str|dict`\n\nIf string, it should be one of the spinners listed in the given [json](https://github.com/sindresorhus/cli-spinners/blob/dac4fc6571059bb9e9bc204711e9dfe8f72e5c6f/spinners.json) file. If a dict is passed, it should define `interval` and `frames`. Something like:\n\n```py\n{\n    'interval': 100,\n    'frames': ['-', '+', '*', '+', '-']\n}\n```\n\nDefaults to `dots` spinner. For Windows users, it defaults to `line` spinner.\n\n##### `animation`\n*Type*: `str`\n*Values*: `bounce`, `marquee`\n\nAnimation to apply to the text if it's too large and doesn't fit in the terminal. If no animation is defined, the text will be ellipsed.\n\n##### `placement`\n*Type*: `str`\n*Values*: `left`, `right`\n\nWhich side of the text the spinner should be displayed. Defaults to `left`\n\n##### `color`\n*Type*: `str`\n*Values*: `grey`, `red`, `green`, `yellow`, `blue`, `magenta`, `cyan`, `white`\n\nColor of the spinner. Defaults to `cyan`.\n\n##### `interval`\n*Type*: `float`\n\nInterval between each frame. Defaults to spinner interval (recommended).\n\n##### `stream`\n*Type*: `file`\n\nStream to write the output. Defaults to `sys.stdout`.\n\n##### `enabled`\n*Type*: `bool`\n\nEnable or disable the spinner. Defaults to `True`.\n\n### Methods\n\nFollowing are the methods available:\n\n#### `spinner.start([text])`\n\nStarts the spinner. If `text` is passed, it is set as spinner text. Returns the instance.\n\n#### `spinner.stop()`\n\nStops and clears the spinner. Returns the instance.\n\n#### `spinner.clear()`\n\nClears the spinner. Returns the instance.\n\n#### `spinner.render()`\n\nManually renders a new frame. Returns the instance.\n\n#### `spinner.frame()`\n\nReturns next frame to be rendered.\n\n#### `spinner.succeed([text])`\n##### `text`: *Type*: `str`\n\nStops the spinner and changes symbol to `\u2714`. If text is provided, it is persisted else current text is persisted. Returns the instance.\n\n#### `spinner.fail([text])`\n##### `text`: *Type*: `str`\n\nStops the spinner and changes symbol to `\u2716`. If text is provided, it is persisted else current text is persisted. Returns the instance.\n\n#### `spinner.warn([text])`\n##### `text`: *Type*: `str`\n\nStops the spinner and changes symbol to `\u26a0`. If text is provided, it is persisted else current text is persisted. Returns the instance.\n\n#### `spinner.info([text])`\n##### `text`: *Type*: `str`\n\nStops the spinner and changes symbol to `\u2139`. If text is provided, it is persisted else current text is persisted. Returns the instance.\n\n#### `spinner.stop_and_persist([symbol|text])`\nStops the spinner and changes symbol and text. Returns the instance.\n\n##### `symbol`\n*Type*: `str`\n\nSymbol to replace the spinner with. Defaults to `' '`.\n\n##### `text`\n*Type*: `str`\n\nText to be persisted. Defaults to instance text.\n\n![Persist spin](https://raw.github.com/manrajgrover/halo/master/art/persist_spin.svg?sanitize=true)\n\n#### `spinner.text`\nChange the text of spinner.\n\n#### `spinner.color`\nChange the color of spinner\n\n#### `spinner.spinner`\nChange the spinner itself.\n\n## How to contribute?\n\nPlease see [Contributing guidelines](https://github.com/manrajgrover/halo/blob/master/.github/CONTRIBUTING.md) for more information.\n\n## Like it?\n\n\ud83c\udf1f this repo to show support. Let me know you liked it on [Twitter](https://twitter.com/manrajsgrover).\nAlso, share the [project](https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fmanrajgrover%2Fhalo&via=manrajsgrover&text=Checkout%20%23halo%20-%20a%20beautiful%20%23terminal%20%23spinners%20library%20for%20%23python&hashtags=github%2C%20pypi).\n\n## Related\n\n* [py-spinners](https://github.com/manrajgrover/py-spinners) - Spinners in Python\n* [py-log-symbols](https://github.com/manrajgrover/py-log-symbols) - Log Symbols in Python\n* [ora](https://github.com/sindresorhus/ora) - Elegant terminal spinners in JavaScript (inspiration behind this project) \n\n## License\n[MIT](https://github.com/manrajgrover/halo/blob/master/LICENSE) \u00a9 Manraj Singh\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/manrajgrover/halo", "keywords": "console,loading,indicator,progress,cli,spinner,spinners,terminal,term,busy,wait,idle", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "frkl.halo", "package_url": "https://pypi.org/project/frkl.halo/", "platform": "", "project_url": "https://pypi.org/project/frkl.halo/", "project_urls": {"Homepage": "https://github.com/manrajgrover/halo"}, "release_url": "https://pypi.org/project/frkl.halo/0.0.24/", "requires_dist": ["frkl.log-symbols (==0.0.14)", "spinners (==0.0.23)", "cursor (==1.2.0)", "termcolor (==1.1.0)", "colorama (==0.3.9)", "six (==1.12.0)", "backports.shutil-get-terminal-size (==1.0.0) ; python_version < \"3.3\"", "IPython (==5.7.0) ; extra == 'ipython'", "ipywidgets (==7.1.0) ; extra == 'ipython'"], "requires_python": "", "summary": "Temporary fork of \"halo\": Beautiful terminal spinners in Python", "version": "0.0.24", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\n  <img height=\"50px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86aafb5d9419bd73ca7e5a730c385b7de9c09539/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d616e72616a67726f7665722f68616c6f2f6d61737465722f6172742f68616c6f2e706e67\">\n  <br>\n  halo\n</h1>\n<p><a href=\"https://travis-ci.org/manrajgrover/halo\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5b1dd26e472d13b6df3ede30273aee380557c208/68747470733a2f2f7472617669732d63692e6f72672f6d616e72616a67726f7665722f68616c6f2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://ci.appveyor.com/project/manrajgrover/halo\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42d8f90c4dd2ae8864bf05f8e3b424fac5aaccd6/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f77613674343134676c747234303366663f7376673d74727565\"></a> <a href=\"https://coveralls.io/github/manrajgrover/halo?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6c855dabe61149243c2be56b42764fb3b1304fb/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d616e72616a67726f7665722f68616c6f2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/manrajgrover/halo\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fce73660db279e1e0f31798484c8a3f5531fe8f8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f68616c6f2e737667\"></a> <img alt=\"awesome\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e74fcc943fb988589fda7be481b7a4bd318156fd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f617765736f6d652d7965732d677265656e2e737667\"></p>\n<blockquote>\n<p>Beautiful spinners for terminal, IPython and Jupyter</p>\n</blockquote>\n<p><img alt=\"halo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7da03d1f6fcf0cc50e5e8fbf0768b6a896b1da72/68747470733a2f2f7261772e6769746875622e636f6d2f6d616e72616a67726f7665722f68616c6f2f6d61737465722f6172742f646f67655f7370696e2e7376673f73616e6974697a653d74727565\"></p>\n<h2>Install</h2>\n<pre>$ pip install halo\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">halo</span> <span class=\"kn\">import</span> <span class=\"n\">Halo</span>\n\n<span class=\"n\">spinner</span> <span class=\"o\">=</span> <span class=\"n\">Halo</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'Loading'</span><span class=\"p\">,</span> <span class=\"n\">spinner</span><span class=\"o\">=</span><span class=\"s1\">'dots'</span><span class=\"p\">)</span>\n<span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Run time consuming work here</span>\n<span class=\"c1\"># You can also change properties for spinner as and when you want</span>\n\n<span class=\"n\">spinner</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>Alternatively, you can use halo with Python's <code>with</code> statement:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">halo</span> <span class=\"kn\">import</span> <span class=\"n\">Halo</span>\n\n<span class=\"k\">with</span> <span class=\"n\">Halo</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'Loading'</span><span class=\"p\">,</span> <span class=\"n\">spinner</span><span class=\"o\">=</span><span class=\"s1\">'dots'</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Run time consuming work here</span>\n</pre>\n<p>Finally, you can use halo as a decorator:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">halo</span> <span class=\"kn\">import</span> <span class=\"n\">Halo</span>\n\n<span class=\"nd\">@Halo</span><span class=\"p\">(</span><span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s1\">'Loading'</span><span class=\"p\">,</span> <span class=\"n\">spinner</span><span class=\"o\">=</span><span class=\"s1\">'dots'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">long_running_function</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Run time consuming work here</span>\n    <span class=\"k\">pass</span>\n\n<span class=\"n\">long_running_function</span><span class=\"p\">()</span>\n</pre>\n<h2>API</h2>\n<h3><code>Halo([text|text_color|spinner|animation|placement|color|interval|stream|enabled])</code></h3>\n<h5><code>text</code></h5>\n<p><em>Type</em>: <code>str</code></p>\n<p>Text shown along with spinner.</p>\n<h5><code>text_color</code></h5>\n<p><em>Type</em>: <code>str</code>\n<em>Values</em>: <code>grey</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>blue</code>, <code>magenta</code>, <code>cyan</code>, <code>white</code></p>\n<p>Color of the spinner text. Defaults to <code>None</code>.</p>\n<h5><code>spinner</code></h5>\n<p><em>Type</em>: <code>str|dict</code></p>\n<p>If string, it should be one of the spinners listed in the given <a href=\"https://github.com/sindresorhus/cli-spinners/blob/dac4fc6571059bb9e9bc204711e9dfe8f72e5c6f/spinners.json\" rel=\"nofollow\">json</a> file. If a dict is passed, it should define <code>interval</code> and <code>frames</code>. Something like:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s1\">'interval'</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"s1\">'frames'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'-'</span><span class=\"p\">,</span> <span class=\"s1\">'+'</span><span class=\"p\">,</span> <span class=\"s1\">'*'</span><span class=\"p\">,</span> <span class=\"s1\">'+'</span><span class=\"p\">,</span> <span class=\"s1\">'-'</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Defaults to <code>dots</code> spinner. For Windows users, it defaults to <code>line</code> spinner.</p>\n<h5><code>animation</code></h5>\n<p><em>Type</em>: <code>str</code>\n<em>Values</em>: <code>bounce</code>, <code>marquee</code></p>\n<p>Animation to apply to the text if it's too large and doesn't fit in the terminal. If no animation is defined, the text will be ellipsed.</p>\n<h5><code>placement</code></h5>\n<p><em>Type</em>: <code>str</code>\n<em>Values</em>: <code>left</code>, <code>right</code></p>\n<p>Which side of the text the spinner should be displayed. Defaults to <code>left</code></p>\n<h5><code>color</code></h5>\n<p><em>Type</em>: <code>str</code>\n<em>Values</em>: <code>grey</code>, <code>red</code>, <code>green</code>, <code>yellow</code>, <code>blue</code>, <code>magenta</code>, <code>cyan</code>, <code>white</code></p>\n<p>Color of the spinner. Defaults to <code>cyan</code>.</p>\n<h5><code>interval</code></h5>\n<p><em>Type</em>: <code>float</code></p>\n<p>Interval between each frame. Defaults to spinner interval (recommended).</p>\n<h5><code>stream</code></h5>\n<p><em>Type</em>: <code>file</code></p>\n<p>Stream to write the output. Defaults to <code>sys.stdout</code>.</p>\n<h5><code>enabled</code></h5>\n<p><em>Type</em>: <code>bool</code></p>\n<p>Enable or disable the spinner. Defaults to <code>True</code>.</p>\n<h3>Methods</h3>\n<p>Following are the methods available:</p>\n<h4><code>spinner.start([text])</code></h4>\n<p>Starts the spinner. If <code>text</code> is passed, it is set as spinner text. Returns the instance.</p>\n<h4><code>spinner.stop()</code></h4>\n<p>Stops and clears the spinner. Returns the instance.</p>\n<h4><code>spinner.clear()</code></h4>\n<p>Clears the spinner. Returns the instance.</p>\n<h4><code>spinner.render()</code></h4>\n<p>Manually renders a new frame. Returns the instance.</p>\n<h4><code>spinner.frame()</code></h4>\n<p>Returns next frame to be rendered.</p>\n<h4><code>spinner.succeed([text])</code></h4>\n<h5><code>text</code>: <em>Type</em>: <code>str</code></h5>\n<p>Stops the spinner and changes symbol to <code>\u2714</code>. If text is provided, it is persisted else current text is persisted. Returns the instance.</p>\n<h4><code>spinner.fail([text])</code></h4>\n<h5><code>text</code>: <em>Type</em>: <code>str</code></h5>\n<p>Stops the spinner and changes symbol to <code>\u2716</code>. If text is provided, it is persisted else current text is persisted. Returns the instance.</p>\n<h4><code>spinner.warn([text])</code></h4>\n<h5><code>text</code>: <em>Type</em>: <code>str</code></h5>\n<p>Stops the spinner and changes symbol to <code>\u26a0</code>. If text is provided, it is persisted else current text is persisted. Returns the instance.</p>\n<h4><code>spinner.info([text])</code></h4>\n<h5><code>text</code>: <em>Type</em>: <code>str</code></h5>\n<p>Stops the spinner and changes symbol to <code>\u2139</code>. If text is provided, it is persisted else current text is persisted. Returns the instance.</p>\n<h4><code>spinner.stop_and_persist([symbol|text])</code></h4>\n<p>Stops the spinner and changes symbol and text. Returns the instance.</p>\n<h5><code>symbol</code></h5>\n<p><em>Type</em>: <code>str</code></p>\n<p>Symbol to replace the spinner with. Defaults to <code>' '</code>.</p>\n<h5><code>text</code></h5>\n<p><em>Type</em>: <code>str</code></p>\n<p>Text to be persisted. Defaults to instance text.</p>\n<p><img alt=\"Persist spin\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/97f5bb33bf2fceede9b98af7fdbc7c0311d2459d/68747470733a2f2f7261772e6769746875622e636f6d2f6d616e72616a67726f7665722f68616c6f2f6d61737465722f6172742f706572736973745f7370696e2e7376673f73616e6974697a653d74727565\"></p>\n<h4><code>spinner.text</code></h4>\n<p>Change the text of spinner.</p>\n<h4><code>spinner.color</code></h4>\n<p>Change the color of spinner</p>\n<h4><code>spinner.spinner</code></h4>\n<p>Change the spinner itself.</p>\n<h2>How to contribute?</h2>\n<p>Please see <a href=\"https://github.com/manrajgrover/halo/blob/master/.github/CONTRIBUTING.md\" rel=\"nofollow\">Contributing guidelines</a> for more information.</p>\n<h2>Like it?</h2>\n<p>\ud83c\udf1f this repo to show support. Let me know you liked it on <a href=\"https://twitter.com/manrajsgrover\" rel=\"nofollow\">Twitter</a>.\nAlso, share the <a href=\"https://twitter.com/intent/tweet?url=https%3A%2F%2Fgithub.com%2Fmanrajgrover%2Fhalo&amp;via=manrajsgrover&amp;text=Checkout%20%23halo%20-%20a%20beautiful%20%23terminal%20%23spinners%20library%20for%20%23python&amp;hashtags=github%2C%20pypi\" rel=\"nofollow\">project</a>.</p>\n<h2>Related</h2>\n<ul>\n<li><a href=\"https://github.com/manrajgrover/py-spinners\" rel=\"nofollow\">py-spinners</a> - Spinners in Python</li>\n<li><a href=\"https://github.com/manrajgrover/py-log-symbols\" rel=\"nofollow\">py-log-symbols</a> - Log Symbols in Python</li>\n<li><a href=\"https://github.com/sindresorhus/ora\" rel=\"nofollow\">ora</a> - Elegant terminal spinners in JavaScript (inspiration behind this project)</li>\n</ul>\n<h2>License</h2>\n<p><a href=\"https://github.com/manrajgrover/halo/blob/master/LICENSE\" rel=\"nofollow\">MIT</a> \u00a9 Manraj Singh</p>\n\n          </div>"}, "last_serial": 5288755, "releases": {"0.0.24": [{"comment_text": "", "digests": {"md5": "71960f92451a9ab034f633d3952d148b", "sha256": "9e241b9fa80aea6e3a6a9e40edc5fb051286668b80bde4b2a6a092504061d12e"}, "downloads": -1, "filename": "frkl.halo-0.0.24-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "71960f92451a9ab034f633d3952d148b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10275, "upload_time": "2019-05-19T16:48:39", "upload_time_iso_8601": "2019-05-19T16:48:39.037757Z", "url": "https://files.pythonhosted.org/packages/9c/68/9af05478d59c2b9bf15076ccc28b09453d272a8daab84473d484e32060aa/frkl.halo-0.0.24-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14d1571a857fe2f215e7590bf1e6644f", "sha256": "e9af5177f69ec83e139749967ed49504e08201ea4add72bdbc7fb84cac7d3ef1"}, "downloads": -1, "filename": "frkl.halo-0.0.24.tar.gz", "has_sig": false, "md5_digest": "14d1571a857fe2f215e7590bf1e6644f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36781, "upload_time": "2019-05-19T16:48:36", "upload_time_iso_8601": "2019-05-19T16:48:36.707114Z", "url": "https://files.pythonhosted.org/packages/85/bc/8809bdd3da3327ae95f71acd55378b895643a094f5befda7fd14f4ecc9f0/frkl.halo-0.0.24.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "71960f92451a9ab034f633d3952d148b", "sha256": "9e241b9fa80aea6e3a6a9e40edc5fb051286668b80bde4b2a6a092504061d12e"}, "downloads": -1, "filename": "frkl.halo-0.0.24-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "71960f92451a9ab034f633d3952d148b", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10275, "upload_time": "2019-05-19T16:48:39", "upload_time_iso_8601": "2019-05-19T16:48:39.037757Z", "url": "https://files.pythonhosted.org/packages/9c/68/9af05478d59c2b9bf15076ccc28b09453d272a8daab84473d484e32060aa/frkl.halo-0.0.24-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14d1571a857fe2f215e7590bf1e6644f", "sha256": "e9af5177f69ec83e139749967ed49504e08201ea4add72bdbc7fb84cac7d3ef1"}, "downloads": -1, "filename": "frkl.halo-0.0.24.tar.gz", "has_sig": false, "md5_digest": "14d1571a857fe2f215e7590bf1e6644f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36781, "upload_time": "2019-05-19T16:48:36", "upload_time_iso_8601": "2019-05-19T16:48:36.707114Z", "url": "https://files.pythonhosted.org/packages/85/bc/8809bdd3da3327ae95f71acd55378b895643a094f5befda7fd14f4ecc9f0/frkl.halo-0.0.24.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:11 2020"}