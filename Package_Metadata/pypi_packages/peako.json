{"info": {"author": "Danielle Denisko", "author_email": "danielle.denisko@mail.utoronto.ca", "bugtrack_url": null, "classifiers": [], "description": "# PeaKO\n\n## What is peaKO?\n\nPeaKO discovers motifs in ChIP-seq datasets with knockout controls. PeaKO takes in paired wild-type/knockout BAM files in addition to several reference files, as input. It returns a file of ranked motifs (see [our paper](https://doi.org/10.1101/721720) for more details).\n\n\n## Quick start\n\n### Dependencies\n\n1. Conda (Miniconda or Anaconda)\n2. MEME Suite version 4.12.0 with our CentriMo binary* (see below)\n\n### Installation\n\n1. Download peaKO's [environment](https://peako.hoffmanlab.org/data/peako-env.yml) file.\n2. Open a terminal and run `conda env create -f peako-env.yml` in your Downloads directory. This will create a Conda environment called \"peako\".\n3. Run `conda activate peako` or `source activate peako` to activate this environment.\n4. Install peaKO from PyPI by running `python3 -m pip install peako`.\n5. You can test that this worked by running `peako --help`.\n\n### Instructions for our modified CentriMo binary\n\n*Our modified CentriMo application will be incorporated in MEME Suite's next major release.\nUntil then, you may install MEME Suite from source and replace its binary with our own to use peaKO.\n\n1. Download MEME distribution 4.12.0 from the [MEME Suite Download page](http://meme-suite.org/doc/download.html).\n2. Follow the \"Quick Install\" steps on the [MEME Suite Installation page](http://meme-suite.org/doc/install.html?man_type=web) up until `make install`.\n4. After running `make install`, replace `$HOME/meme/bin/centrimo` with our [modified CentriMo binary](https://doi.org/10.5281/zenodo.3356995).\n5. Make sure that `$HOME/meme/bin` is located on your `$PATH`. You should now be able to call `centrimo --help`.\n\n\n## Usage\n\nPeaKO uses Snakemake, which is a workflow management system.\nYou can run peaKO either locally or on a compute cluster using the Slurm job scheduling system.\nTo run on Slurm, you must create your own `cluster.config` file ([template](https://peako.hoffmanlab.org/data/cluster.json)) and provide it to peaKO via `--sm-cluster-config`.\n\nEach step of the workflow either inherits from the main activated Conda environment (\"peako\") or uses its own separate environment.\nIf you are working on a compute cluster, run peaKO first with `--sm-build-envs` on a node with internet access to create these additional Conda environments.\nThen, you can run it on the cluster without internet, providing a Slurm configuration file (see above).\n\nAfter activating peaKO's Conda environment (`conda activate peako` or `source activate peako`), you can run peako as follows:\n\n`peako <outdir> <wt-bam> <ko-bam> <organism> <chr-sizes> <trf-masked-genome> <motif-database> [options]`\n\nThere are 7 required arguments. Please provide full paths for files and directories.\n\n- `outdir`: output directory (please make sure this already exists); all output directories and files will be created here\n- `wt-bam`: wild-type sample BAM file\n- `ko-bam`: knockout sample BAM file\n- `organism`: name of organism (must be either `mouse` or `human`)\n- `chr-sizes`: chromosome sizes file of reference genome (TXT)\n- `trf-masked-genome`: TRF masked reference genome file (FASTA)\n- `motif-database`: JASPAR motif database (MEME)\n\nHere are the optional arguments:\n\nGeneral:\n\n- `-h` or `--help`: access the help message and exit\n- `-V` or `--version`: show the program's version and exit\n\nPeaKO submodule:\n\n- `-j <JASPAR_ID>`: transcription factor motif JASPAR identifier (e.g. MA0083.3)\n- `-m <MOTIF>`: transcription factor motif common name (e.g. SRF)\n- `--extra`: output all intermediate peaKO files for plotting\n- `--pickle`: use pickled peaKO dictionaries from previous run \n\nSnakemake:\n\n- `--sm-build-envs`: build conda environments for workflow and exit (requires internet connection)\n- `--sm-cluster-config`: snakemake cluster configuration file (JSON)\n\n\n## Output\n\nCurrently, peaKO generates output directories and files for each step.\nThese can all be found under your provided `outdir` directory.\nPeaKO's main output file is `<outdir>/peako_out/peaKO-rankings.txt`, which contains a ranked list of motifs.\n\n\n## Additional resources\n\nSource code is available at: https://github.com/hoffmangroup/peako.\n\nWe have deposited the [current version of the code](https://doi.org/10.5281/zenodo.3338330), [example HTML and TXT CentriMo outputs](https://doi.org/10.5281/zenodo.3338324), and a [modified CentriMo binary](https://doi.org/10.5281/zenodo.3356995) on Zenodo.\n\n\n## Citation\n\nIf you found peaKO useful, please cite:\n\nDenisko D, Viner C, Hoffman MM. Motif elucidation in ChIP-seq datasets with a knockout control. BioRxiv 10.1101/721720 [Preprint]. 2019. Available from: https://doi.org/10.1101/721720\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/hoffmanlab/peako", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "peako", "package_url": "https://pypi.org/project/peako/", "platform": "", "project_url": "https://pypi.org/project/peako/", "project_urls": {"Homepage": "https://bitbucket.org/hoffmanlab/peako"}, "release_url": "https://pypi.org/project/peako/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "A package for discovering motifs in ChIP-seq datasets with knockout controls", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PeaKO</h1>\n<h2>What is peaKO?</h2>\n<p>PeaKO discovers motifs in ChIP-seq datasets with knockout controls. PeaKO takes in paired wild-type/knockout BAM files in addition to several reference files, as input. It returns a file of ranked motifs (see <a href=\"https://doi.org/10.1101/721720\" rel=\"nofollow\">our paper</a> for more details).</p>\n<h2>Quick start</h2>\n<h3>Dependencies</h3>\n<ol>\n<li>Conda (Miniconda or Anaconda)</li>\n<li>MEME Suite version 4.12.0 with our CentriMo binary* (see below)</li>\n</ol>\n<h3>Installation</h3>\n<ol>\n<li>Download peaKO's <a href=\"https://peako.hoffmanlab.org/data/peako-env.yml\" rel=\"nofollow\">environment</a> file.</li>\n<li>Open a terminal and run <code>conda env create -f peako-env.yml</code> in your Downloads directory. This will create a Conda environment called \"peako\".</li>\n<li>Run <code>conda activate peako</code> or <code>source activate peako</code> to activate this environment.</li>\n<li>Install peaKO from PyPI by running <code>python3 -m pip install peako</code>.</li>\n<li>You can test that this worked by running <code>peako --help</code>.</li>\n</ol>\n<h3>Instructions for our modified CentriMo binary</h3>\n<p>*Our modified CentriMo application will be incorporated in MEME Suite's next major release.\nUntil then, you may install MEME Suite from source and replace its binary with our own to use peaKO.</p>\n<ol>\n<li>Download MEME distribution 4.12.0 from the <a href=\"http://meme-suite.org/doc/download.html\" rel=\"nofollow\">MEME Suite Download page</a>.</li>\n<li>Follow the \"Quick Install\" steps on the <a href=\"http://meme-suite.org/doc/install.html?man_type=web\" rel=\"nofollow\">MEME Suite Installation page</a> up until <code>make install</code>.</li>\n<li>After running <code>make install</code>, replace <code>$HOME/meme/bin/centrimo</code> with our <a href=\"https://doi.org/10.5281/zenodo.3356995\" rel=\"nofollow\">modified CentriMo binary</a>.</li>\n<li>Make sure that <code>$HOME/meme/bin</code> is located on your <code>$PATH</code>. You should now be able to call <code>centrimo --help</code>.</li>\n</ol>\n<h2>Usage</h2>\n<p>PeaKO uses Snakemake, which is a workflow management system.\nYou can run peaKO either locally or on a compute cluster using the Slurm job scheduling system.\nTo run on Slurm, you must create your own <code>cluster.config</code> file (<a href=\"https://peako.hoffmanlab.org/data/cluster.json\" rel=\"nofollow\">template</a>) and provide it to peaKO via <code>--sm-cluster-config</code>.</p>\n<p>Each step of the workflow either inherits from the main activated Conda environment (\"peako\") or uses its own separate environment.\nIf you are working on a compute cluster, run peaKO first with <code>--sm-build-envs</code> on a node with internet access to create these additional Conda environments.\nThen, you can run it on the cluster without internet, providing a Slurm configuration file (see above).</p>\n<p>After activating peaKO's Conda environment (<code>conda activate peako</code> or <code>source activate peako</code>), you can run peako as follows:</p>\n<p><code>peako &lt;outdir&gt; &lt;wt-bam&gt; &lt;ko-bam&gt; &lt;organism&gt; &lt;chr-sizes&gt; &lt;trf-masked-genome&gt; &lt;motif-database&gt; [options]</code></p>\n<p>There are 7 required arguments. Please provide full paths for files and directories.</p>\n<ul>\n<li><code>outdir</code>: output directory (please make sure this already exists); all output directories and files will be created here</li>\n<li><code>wt-bam</code>: wild-type sample BAM file</li>\n<li><code>ko-bam</code>: knockout sample BAM file</li>\n<li><code>organism</code>: name of organism (must be either <code>mouse</code> or <code>human</code>)</li>\n<li><code>chr-sizes</code>: chromosome sizes file of reference genome (TXT)</li>\n<li><code>trf-masked-genome</code>: TRF masked reference genome file (FASTA)</li>\n<li><code>motif-database</code>: JASPAR motif database (MEME)</li>\n</ul>\n<p>Here are the optional arguments:</p>\n<p>General:</p>\n<ul>\n<li><code>-h</code> or <code>--help</code>: access the help message and exit</li>\n<li><code>-V</code> or <code>--version</code>: show the program's version and exit</li>\n</ul>\n<p>PeaKO submodule:</p>\n<ul>\n<li><code>-j &lt;JASPAR_ID&gt;</code>: transcription factor motif JASPAR identifier (e.g. MA0083.3)</li>\n<li><code>-m &lt;MOTIF&gt;</code>: transcription factor motif common name (e.g. SRF)</li>\n<li><code>--extra</code>: output all intermediate peaKO files for plotting</li>\n<li><code>--pickle</code>: use pickled peaKO dictionaries from previous run</li>\n</ul>\n<p>Snakemake:</p>\n<ul>\n<li><code>--sm-build-envs</code>: build conda environments for workflow and exit (requires internet connection)</li>\n<li><code>--sm-cluster-config</code>: snakemake cluster configuration file (JSON)</li>\n</ul>\n<h2>Output</h2>\n<p>Currently, peaKO generates output directories and files for each step.\nThese can all be found under your provided <code>outdir</code> directory.\nPeaKO's main output file is <code>&lt;outdir&gt;/peako_out/peaKO-rankings.txt</code>, which contains a ranked list of motifs.</p>\n<h2>Additional resources</h2>\n<p>Source code is available at: <a href=\"https://github.com/hoffmangroup/peako\" rel=\"nofollow\">https://github.com/hoffmangroup/peako</a>.</p>\n<p>We have deposited the <a href=\"https://doi.org/10.5281/zenodo.3338330\" rel=\"nofollow\">current version of the code</a>, <a href=\"https://doi.org/10.5281/zenodo.3338324\" rel=\"nofollow\">example HTML and TXT CentriMo outputs</a>, and a <a href=\"https://doi.org/10.5281/zenodo.3356995\" rel=\"nofollow\">modified CentriMo binary</a> on Zenodo.</p>\n<h2>Citation</h2>\n<p>If you found peaKO useful, please cite:</p>\n<p>Denisko D, Viner C, Hoffman MM. Motif elucidation in ChIP-seq datasets with a knockout control. BioRxiv 10.1101/721720 [Preprint]. 2019. Available from: <a href=\"https://doi.org/10.1101/721720\" rel=\"nofollow\">https://doi.org/10.1101/721720</a></p>\n\n          </div>"}, "last_serial": 6060146, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ecc823e96977d420bc0fa45abc09c1e6", "sha256": "77ee69c2f95d3609ef19fe9d95e87fd957d70e5f0cec7a3a69f69bb9e277520d"}, "downloads": -1, "filename": "peako-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ecc823e96977d420bc0fa45abc09c1e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 41756, "upload_time": "2019-08-17T02:28:28", "upload_time_iso_8601": "2019-08-17T02:28:28.077103Z", "url": "https://files.pythonhosted.org/packages/90/f5/7ff24c61940dd69c90e10c2849b5921c7e56279fc622f2b92866f7af9082/peako-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39b067bec54af9c6a82718907723bd92", "sha256": "fb209423e2efaf1626a4bca75c4e4ac87fc5d7df6b5640dc2e16142551d7e1f3"}, "downloads": -1, "filename": "peako-0.0.1.tar.gz", "has_sig": false, "md5_digest": "39b067bec54af9c6a82718907723bd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24802, "upload_time": "2019-08-17T02:28:30", "upload_time_iso_8601": "2019-08-17T02:28:30.403442Z", "url": "https://files.pythonhosted.org/packages/35/b2/1d15631e6577028cfdc961333244f47921fd6f6e580722fd186ed6be0460/peako-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "3eb0cbdaee5bf9732ea5b14d46c56e2a", "sha256": "111fae3bdd2b5dd934804be610157b499957d93392c2e034a7f1d6fb73d41105"}, "downloads": -1, "filename": "peako-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3eb0cbdaee5bf9732ea5b14d46c56e2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25767, "upload_time": "2019-08-22T19:58:24", "upload_time_iso_8601": "2019-08-22T19:58:24.536923Z", "url": "https://files.pythonhosted.org/packages/eb/ee/f7a958fd3c758e906726a416e2ebaed2ab94dd43491d18e258e9d63a6e15/peako-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a4b556cc83f31bdea72fd2790a9b451", "sha256": "cb7af96168ba14b85f799d52b054b6c444da299bd8f203f88b73ce5e0e3e3eda"}, "downloads": -1, "filename": "peako-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9a4b556cc83f31bdea72fd2790a9b451", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21675, "upload_time": "2019-08-22T19:58:26", "upload_time_iso_8601": "2019-08-22T19:58:26.079096Z", "url": "https://files.pythonhosted.org/packages/63/41/935f084a4eb119f17f057709f9c650455dcde50a5386fd7038bea2078498/peako-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "45d5a6cb12b5c658d16ce52cfbbae28c", "sha256": "eb67e1e3b8dda3db70e3a40b0d148f66c873c8be15732e4356a023407509a915"}, "downloads": -1, "filename": "peako-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "45d5a6cb12b5c658d16ce52cfbbae28c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25797, "upload_time": "2019-10-31T16:09:47", "upload_time_iso_8601": "2019-10-31T16:09:47.619689Z", "url": "https://files.pythonhosted.org/packages/d3/3c/344b8fb6a9f2d3e67a11ea85f35a1020a44b981485cbd25f059c65f9cc15/peako-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0faa04937b5895519cd374996067470d", "sha256": "eb3d7a5f13bd4831c42d99bec4748dc7febebd983123ac1965db2ace978a27ea"}, "downloads": -1, "filename": "peako-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0faa04937b5895519cd374996067470d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21736, "upload_time": "2019-10-31T16:09:49", "upload_time_iso_8601": "2019-10-31T16:09:49.002972Z", "url": "https://files.pythonhosted.org/packages/01/2c/281168ac1de5d34947999514eaa98e2df6c85a089b4048235da159032034/peako-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "753dd515e2920bafebbcc63d87c635f0", "sha256": "8a1c62c3b8e35bb2cef87d4dc3e2f724b86c973f06a796b1c07467131a4a2e44"}, "downloads": -1, "filename": "peako-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "753dd515e2920bafebbcc63d87c635f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25838, "upload_time": "2019-10-31T19:04:37", "upload_time_iso_8601": "2019-10-31T19:04:37.388757Z", "url": "https://files.pythonhosted.org/packages/ca/52/2a79b79d9c6cd982c25504f863f92bc698c7cc4aee7a19afb07f1a88fee3/peako-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f87cfabc4bd8661209a634f77575ff44", "sha256": "583958a8144aa86544905e4deebd0f2517e98332bd243bd70c471dbb7434c104"}, "downloads": -1, "filename": "peako-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f87cfabc4bd8661209a634f77575ff44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21752, "upload_time": "2019-10-31T19:04:38", "upload_time_iso_8601": "2019-10-31T19:04:38.538252Z", "url": "https://files.pythonhosted.org/packages/2f/02/ef2b0e58e2c0371974f5827d200920a95ce3cc616f5ff16d12eecaa36ec5/peako-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "753dd515e2920bafebbcc63d87c635f0", "sha256": "8a1c62c3b8e35bb2cef87d4dc3e2f724b86c973f06a796b1c07467131a4a2e44"}, "downloads": -1, "filename": "peako-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "753dd515e2920bafebbcc63d87c635f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25838, "upload_time": "2019-10-31T19:04:37", "upload_time_iso_8601": "2019-10-31T19:04:37.388757Z", "url": "https://files.pythonhosted.org/packages/ca/52/2a79b79d9c6cd982c25504f863f92bc698c7cc4aee7a19afb07f1a88fee3/peako-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f87cfabc4bd8661209a634f77575ff44", "sha256": "583958a8144aa86544905e4deebd0f2517e98332bd243bd70c471dbb7434c104"}, "downloads": -1, "filename": "peako-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f87cfabc4bd8661209a634f77575ff44", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21752, "upload_time": "2019-10-31T19:04:38", "upload_time_iso_8601": "2019-10-31T19:04:38.538252Z", "url": "https://files.pythonhosted.org/packages/2f/02/ef2b0e58e2c0371974f5827d200920a95ce3cc616f5ff16d12eecaa36ec5/peako-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:58 2020"}