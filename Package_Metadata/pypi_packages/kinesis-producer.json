{"info": {"author": "Pior Bastida", "author_email": "pbastida@ludia.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet"], "description": "================\nKinesis Producer\n================\n\nPython producer for AWS Kinesis Stream with record aggregation.\n\nIt uses Boto 3 and is tested on Python 2.7 and 3.4/3.5.\n\n* PyPI: https://pypi.python.org/pypi/kinesis_producer\n* Code: https://github.com/ludia/kinesis_producer\n* |travis|\n* |coveralls|\n\n.. |travis| image:: https://travis-ci.org/ludia/kinesis_producer.svg?branch=master\n   :target: https://travis-ci.org/ludia/kinesis_producer\n\n.. |coveralls| image:: https://coveralls.io/repos/github/ludia/kinesis_producer/badge.svg?branch=master\n   :target: https://coveralls.io/github/ludia/kinesis_producer?branch=master\n\n\nInstall\n=======\n\n   pip install 'kinesis_producer < 1'\n\n**Note**: Kinesis Producer use semver: you should always freeze on the major\nversion since it could mean breaking the API.\n\n\nUsage\n=====\n\nSend records aggregated up to 100KB, 200ms and joined with '\\\\n':\n\n.. code:: python\n\n   from kinesis_producer import KinesisProducer\n\n   config = dict(\n       aws_region='us-east-1',\n       buffer_size_limit=100000,\n       buffer_time_limit=0.2,\n       kinesis_concurrency=1,\n       kinesis_max_retries=10,\n       record_delimiter='\\n',\n       stream_name='KINESIS_STREAM_NAME',\n       )\n\n   k = KinesisProducer(config=config)\n\n   for record in records:\n       k.send(record)\n\n   k.close()\n   k.join()\n\n\nConfig\n======\n\n:aws_region: AWS region for Kinesis calls (like us-east-1)\n:buffer_size_limit:\n   Approximative size limit for record aggregation (in bytes)\n:buffer_time_limit:\n   Approximative time limit for record aggregation (in seconds)\n:kinesis_concurrency:\n   Set the concurrency level for Kinesis calls. Set to 1 for no\n   concurrency. Set to 2 and more to use a thread pool.\n:kinesis_max_retries:\n   Number of Kinesis put_records call attempt before giving up.\n   This number should be between 4 and 10 if you want to handle\n   temporary ProvisionedThroughputExceeded errors.\n:record_delimiter: Delimiter for record aggregation\n:stream_name: Name of the Kinesis Stream\n\n\nKinesis retries\n---------------\n\nKinesis calls are retried for ProvisionedThroughputExceeded error\nonly. Retry use an exponential backoff logic (0.1s, 0.2s, 0.4s, 0.8s,\n1.60s, 3.20s, 6.40s, 12.80s, 25.60s, 51.20s, 102.40s...)\n\n\nCopyright and license\n=====================\n\nReleased under the MIT license.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ludia/kinesis_producer", "keywords": "kinesis kafka producer client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kinesis-producer", "package_url": "https://pypi.org/project/kinesis-producer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/kinesis-producer/", "project_urls": {"Homepage": "https://github.com/ludia/kinesis_producer"}, "release_url": "https://pypi.org/project/kinesis-producer/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "Producer for AWS Kinesis Stream with record aggregation", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python producer for AWS Kinesis Stream with record aggregation.</p>\n<p>It uses Boto 3 and is tested on Python 2.7 and 3.4/3.5.</p>\n<ul>\n<li>PyPI: <a href=\"https://pypi.python.org/pypi/kinesis_producer\" rel=\"nofollow\">https://pypi.python.org/pypi/kinesis_producer</a></li>\n<li>Code: <a href=\"https://github.com/ludia/kinesis_producer\" rel=\"nofollow\">https://github.com/ludia/kinesis_producer</a></li>\n<li><a href=\"https://travis-ci.org/ludia/kinesis_producer\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4b0d9a38512ab4346248adf0beff7185ec1a464/68747470733a2f2f7472617669732d63692e6f72672f6c756469612f6b696e657369735f70726f64756365722e7376673f6272616e63683d6d6173746572\"></a></li>\n<li><a href=\"https://coveralls.io/github/ludia/kinesis_producer?branch=master\" rel=\"nofollow\"><img alt=\"coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3a9ba9cfa6e28bc3efbd929e8a362053bf4fcc57/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6c756469612f6b696e657369735f70726f64756365722f62616467652e7376673f6272616e63683d6d6173746572\"></a></li>\n</ul>\n<div id=\"install\">\n<h2>Install</h2>\n<blockquote>\npip install \u2018kinesis_producer &lt; 1\u2019</blockquote>\n<p><strong>Note</strong>: Kinesis Producer use semver: you should always freeze on the major\nversion since it could mean breaking the API.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Send records aggregated up to 100KB, 200ms and joined with \u2018\\n\u2019:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">kinesis_producer</span> <span class=\"kn\">import</span> <span class=\"n\">KinesisProducer</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span>\n    <span class=\"n\">aws_region</span><span class=\"o\">=</span><span class=\"s1\">'us-east-1'</span><span class=\"p\">,</span>\n    <span class=\"n\">buffer_size_limit</span><span class=\"o\">=</span><span class=\"mi\">100000</span><span class=\"p\">,</span>\n    <span class=\"n\">buffer_time_limit</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">,</span>\n    <span class=\"n\">kinesis_concurrency</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">kinesis_max_retries</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n    <span class=\"n\">record_delimiter</span><span class=\"o\">=</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n    <span class=\"n\">stream_name</span><span class=\"o\">=</span><span class=\"s1\">'KINESIS_STREAM_NAME'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n<span class=\"n\">k</span> <span class=\"o\">=</span> <span class=\"n\">KinesisProducer</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">records</span><span class=\"p\">:</span>\n    <span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">)</span>\n\n<span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n<span class=\"n\">k</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"config\">\n<h2>Config</h2>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>aws_region:</th><td>AWS region for Kinesis calls (like us-east-1)</td>\n</tr>\n<tr><th>buffer_size_limit:</th></tr>\n<tr><td>\u00a0</td><td>Approximative size limit for record aggregation (in bytes)</td>\n</tr>\n<tr><th>buffer_time_limit:</th></tr>\n<tr><td>\u00a0</td><td>Approximative time limit for record aggregation (in seconds)</td>\n</tr>\n<tr><th>kinesis_concurrency:</th></tr>\n<tr><td>\u00a0</td><td>Set the concurrency level for Kinesis calls. Set to 1 for no\nconcurrency. Set to 2 and more to use a thread pool.</td>\n</tr>\n<tr><th>kinesis_max_retries:</th></tr>\n<tr><td>\u00a0</td><td>Number of Kinesis put_records call attempt before giving up.\nThis number should be between 4 and 10 if you want to handle\ntemporary ProvisionedThroughputExceeded errors.</td>\n</tr>\n<tr><th>record_delimiter:</th></tr>\n<tr><td>\u00a0</td><td>Delimiter for record aggregation</td>\n</tr>\n<tr><th>stream_name:</th><td>Name of the Kinesis Stream</td>\n</tr>\n</tbody>\n</table>\n<div id=\"kinesis-retries\">\n<h3>Kinesis retries</h3>\n<p>Kinesis calls are retried for ProvisionedThroughputExceeded error\nonly. Retry use an exponential backoff logic (0.1s, 0.2s, 0.4s, 0.8s,\n1.60s, 3.20s, 6.40s, 12.80s, 25.60s, 51.20s, 102.40s\u2026)</p>\n</div>\n</div>\n<div id=\"copyright-and-license\">\n<h2>Copyright and license</h2>\n<p>Released under the MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 2112880, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "314af4aa9bbeb4bee142b957e87d7b28", "sha256": "58276ba66165f63e6517fad0a3331645916f90eb34a4af8d5e5e526e52e18fdb"}, "downloads": -1, "filename": "kinesis_producer-0.1.tar.gz", "has_sig": false, "md5_digest": "314af4aa9bbeb4bee142b957e87d7b28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5869, "upload_time": "2016-04-14T16:01:55", "upload_time_iso_8601": "2016-04-14T16:01:55.543025Z", "url": "https://files.pythonhosted.org/packages/a4/47/3aa307c73e8830dfa62d9dd039904e2f13b80e621ad358d8167af2d8ec70/kinesis_producer-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "dec9bc9c4918218874485eaa22d90fc8", "sha256": "3978182386e4d7905dcfeaa633c72807c29a999d56a4932ea19f86dd6e22f646"}, "downloads": -1, "filename": "kinesis_producer-0.2.tar.gz", "has_sig": false, "md5_digest": "dec9bc9c4918218874485eaa22d90fc8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6114, "upload_time": "2016-04-19T21:16:44", "upload_time_iso_8601": "2016-04-19T21:16:44.922010Z", "url": "https://files.pythonhosted.org/packages/6b/9a/cbef1de54c33441699debfa9222f0d122467b19eff215bb1d516b80b15eb/kinesis_producer-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8be046a713ba40eef9734ced2d7cbc2c", "sha256": "fbd819e802421a88537812c0dae170d2ebdfd12277af03b3ec51fd74a8b6c07a"}, "downloads": -1, "filename": "kinesis_producer-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8be046a713ba40eef9734ced2d7cbc2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6369, "upload_time": "2016-05-12T16:39:11", "upload_time_iso_8601": "2016-05-12T16:39:11.188302Z", "url": "https://files.pythonhosted.org/packages/80/46/6dbba56b6f038e90246b926fd01f384e5fbea3c32a048597c6f2e1d44611/kinesis_producer-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8be046a713ba40eef9734ced2d7cbc2c", "sha256": "fbd819e802421a88537812c0dae170d2ebdfd12277af03b3ec51fd74a8b6c07a"}, "downloads": -1, "filename": "kinesis_producer-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8be046a713ba40eef9734ced2d7cbc2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6369, "upload_time": "2016-05-12T16:39:11", "upload_time_iso_8601": "2016-05-12T16:39:11.188302Z", "url": "https://files.pythonhosted.org/packages/80/46/6dbba56b6f038e90246b926fd01f384e5fbea3c32a048597c6f2e1d44611/kinesis_producer-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:43 2020"}