{"info": {"author": "Brandon Istenes", "author_email": "brandonesbox@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License"], "description": "graphpca\n===========\n\nProduces a low-dimensional representation of the input graph.\n\nCalculates the ECTD [1]_ of the graph and reduces its dimension using PCA. The\nresult is an embedding of the graph nodes as vectors in a low-dimensional\nspace.\n\nGraph data in this repository is courtesy of the mind-blowingly cool\n`University of Florida Sparse Matrix Collection <https://www.cise.ufl.edu/research/sparse/matrices/>`_.\n\nUsage\n-----\n\nDraw a graph, including edges, from a mat file\n::\n\n    >>> import scipy.io\n    >>> import networkx as nx\n    >>> import graphpca\n    >>> mat = scipy.io.loadmat('test/bcspwr01.mat')\n    >>> A = mat['Problem'][0][0][1].todense()  # that's just how the file came\n    >>> G = nx.from_numpy_matrix(A)\n    >>> graphpca.draw_graph(G)\n\n.. image:: output/bcspwr01-drawing.png\n\nGet a 2D PCA of a high-dimensional graph and plot it.\n::\n\n    >>> import networkx as nx\n    >>> import graphpca\n    >>> g = nx.erdos_renyi_graph(1000, 0.2)\n    >>> g_2 = graphpca.reduce_graph(g, 2)\n    >>> graphca.plot_2d(g_2)\n\n.. image:: output/erg-1000.png\n\n\nContributing\n------------\n\nFeel free to fork me and create a pull request at\nhttps://github.com/brandones/graphpca\n\n.. [1] https://www.info.ucl.ac.be/~pdupont/pdupont/pdf/ecml04.pdf", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/brandones/graphpca/tarball/0.5", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brandones/graphpca", "keywords": "graph,draw,pca,data,reduction,dimension,compression", "license": "Apache License 2.0", "maintainer": null, "maintainer_email": null, "name": "graphpca", "package_url": "https://pypi.org/project/graphpca/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/graphpca/", "project_urls": {"Download": "https://github.com/brandones/graphpca/tarball/0.5", "Homepage": "https://github.com/brandones/graphpca"}, "release_url": "https://pypi.org/project/graphpca/0.5/", "requires_dist": null, "requires_python": null, "summary": "Produces a low-dimensional representation of the input graph", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Produces a low-dimensional representation of the input graph.</p>\n<p>Calculates the ECTD <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a> of the graph and reduces its dimension using PCA. The\nresult is an embedding of the graph nodes as vectors in a low-dimensional\nspace.</p>\n<p>Graph data in this repository is courtesy of the mind-blowingly cool\n<a href=\"https://www.cise.ufl.edu/research/sparse/matrices/\" rel=\"nofollow\">University of Florida Sparse Matrix Collection</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Draw a graph, including edges, from a mat file</p>\n<pre>&gt;&gt;&gt; import scipy.io\n&gt;&gt;&gt; import networkx as nx\n&gt;&gt;&gt; import graphpca\n&gt;&gt;&gt; mat = scipy.io.loadmat('test/bcspwr01.mat')\n&gt;&gt;&gt; A = mat['Problem'][0][0][1].todense()  # that's just how the file came\n&gt;&gt;&gt; G = nx.from_numpy_matrix(A)\n&gt;&gt;&gt; graphpca.draw_graph(G)\n</pre>\n<img alt=\"output/bcspwr01-drawing.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/742ce2e26e065a3dddf982eee8ddd2f6042519d3/6f75747075742f62637370777230312d64726177696e672e706e67\">\n<p>Get a 2D PCA of a high-dimensional graph and plot it.</p>\n<pre>&gt;&gt;&gt; import networkx as nx\n&gt;&gt;&gt; import graphpca\n&gt;&gt;&gt; g = nx.erdos_renyi_graph(1000, 0.2)\n&gt;&gt;&gt; g_2 = graphpca.reduce_graph(g, 2)\n&gt;&gt;&gt; graphca.plot_2d(g_2)\n</pre>\n<img alt=\"output/erg-1000.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f727b2ffb4d51f621b5b9cc9f95adc3ee4c4fc95/6f75747075742f6572672d313030302e706e67\">\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Feel free to fork me and create a pull request at\n<a href=\"https://github.com/brandones/graphpca\" rel=\"nofollow\">https://github.com/brandones/graphpca</a></p>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><a href=\"https://www.info.ucl.ac.be/~pdupont/pdupont/pdf/ecml04.pdf\" rel=\"nofollow\">https://www.info.ucl.ac.be/~pdupont/pdupont/pdf/ecml04.pdf</a></td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 2323543, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "37f66d3e6f28e242be56584f6dac6432", "sha256": "75a13f4da0171d206c80eb9d89d7326c3fa054bb74dfe67529054cd204e720ff"}, "downloads": -1, "filename": "graphpca-0.2.tar.gz", "has_sig": false, "md5_digest": "37f66d3e6f28e242be56584f6dac6432", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3376, "upload_time": "2016-06-18T22:00:28", "upload_time_iso_8601": "2016-06-18T22:00:28.392364Z", "url": "https://files.pythonhosted.org/packages/24/d2/b3262de1412e348ce929e0b6824b3b2c5029b2dfa0ebe2f6188c17ae05aa/graphpca-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c43e34cb801ababacd6cea61ccccb17a", "sha256": "6204c52a81984f5ecec555ea20737e7d8701855f5abceb1af78d7d7e257b4a86"}, "downloads": -1, "filename": "graphpca-0.3.tar.gz", "has_sig": false, "md5_digest": "c43e34cb801ababacd6cea61ccccb17a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3743, "upload_time": "2016-06-19T19:24:55", "upload_time_iso_8601": "2016-06-19T19:24:55.011671Z", "url": "https://files.pythonhosted.org/packages/82/9a/1678bf9840e6f17dc1f738d52f8aab977c2a488659e73984ba98647ffdcb/graphpca-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4d45a2c990a4f47634432ad5bc81ef52", "sha256": "ea7bf631549e69b74a89f15cae3ed3eaee5242a656770cc3bb224ab022cad582"}, "downloads": -1, "filename": "graphpca-0.4.tar.gz", "has_sig": false, "md5_digest": "4d45a2c990a4f47634432ad5bc81ef52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4934, "upload_time": "2016-09-03T01:28:00", "upload_time_iso_8601": "2016-09-03T01:28:00.054568Z", "url": "https://files.pythonhosted.org/packages/62/fd/afe43e6b414aa58146638981d80d6447ceb516caf9b939ec7f24f8b1445a/graphpca-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "bae0e5e43fcd99867a6459dd713f28fe", "sha256": "b60672c49b0e170a8811827d075714dfdf638929ed274825eb7426552d14aa77"}, "downloads": -1, "filename": "graphpca-0.5.tar.gz", "has_sig": false, "md5_digest": "bae0e5e43fcd99867a6459dd713f28fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6504, "upload_time": "2016-09-04T01:19:44", "upload_time_iso_8601": "2016-09-04T01:19:44.639617Z", "url": "https://files.pythonhosted.org/packages/66/21/1c884a657e619e0cefa5b770d761a65d17717b7b49f4046b65377bcf8db0/graphpca-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bae0e5e43fcd99867a6459dd713f28fe", "sha256": "b60672c49b0e170a8811827d075714dfdf638929ed274825eb7426552d14aa77"}, "downloads": -1, "filename": "graphpca-0.5.tar.gz", "has_sig": false, "md5_digest": "bae0e5e43fcd99867a6459dd713f28fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6504, "upload_time": "2016-09-04T01:19:44", "upload_time_iso_8601": "2016-09-04T01:19:44.639617Z", "url": "https://files.pythonhosted.org/packages/66/21/1c884a657e619e0cefa5b770d761a65d17717b7b49f4046b65377bcf8db0/graphpca-0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:35 2020"}