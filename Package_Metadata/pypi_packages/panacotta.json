{"info": {"author": "Jonathan McDowell", "author_email": "noodles@earth.li", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Python control for Panasonic Blu-Ray players\n============================================\n\nThis is a simple Python API for controlling Panasonic Blu-Ray players. It has only been tested with the DMP-BDT220, which dates from 2012. All players supported by the [Panasonic Blu-ray Remote 2012 Android app](https://play.google.com/store/apps/details?id=com.panasonic.avc.diga.blurayremote2012) should be supported; i.e. DMP-BDT120, DMP-BDT220, DMP-BDT221, DMP-BDT320, DMP-BDT500 and DMP-BBT01 devices.\n\nExample use\n-----------\n\nConnect to a player on 192.168.0.4 and find out the current playing status:\n\n```\nimport panacotta\n\nbluray = panacotta.PansonicBD('192.168.0.4')\nprint(\"Device is currently %s\" % bluray.get_play_status()[0])\n```\n\nNote that the device must be on the same subnet as the host running this API; requests from a different subnet will return a failure.\n\nPress the power button:\n\n```\nimport panacotta\n\nbluray = panacotta.PansonicBD('192.168.0.4')\nbluray.send_key('POWER')\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/u1f35c/python-panacotta", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "panacotta", "package_url": "https://pypi.org/project/panacotta/", "platform": "", "project_url": "https://pypi.org/project/panacotta/", "project_urls": {"Homepage": "https://github.com/u1f35c/python-panacotta"}, "release_url": "https://pypi.org/project/panacotta/0.1/", "requires_dist": null, "requires_python": "", "summary": "Python API for controlling Panasonic Blu-Ray players", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Python control for Panasonic Blu-Ray players<br>============================================<br><br>This is a simple Python API for controlling Panasonic Blu-Ray players. It has only been tested with the DMP-BDT220, which dates from 2012. All players supported by the [Panasonic Blu-ray Remote 2012 Android app](https://play.google.com/store/apps/details?id=com.panasonic.avc.diga.blurayremote2012) should be supported; i.e. DMP-BDT120, DMP-BDT220, DMP-BDT221, DMP-BDT320, DMP-BDT500 and DMP-BBT01 devices.<br><br>Example use<br>-----------<br><br>Connect to a player on 192.168.0.4 and find out the current playing status:<br><br>```<br>import panacotta<br><br>bluray = panacotta.PansonicBD('192.168.0.4')<br>print(\"Device is currently %s\" % bluray.get_play_status()[0])<br>```<br><br>Note that the device must be on the same subnet as the host running this API; requests from a different subnet will return a failure.<br><br>Press the power button:<br><br>```<br>import panacotta<br><br>bluray = panacotta.PansonicBD('192.168.0.4')<br>bluray.send_key('POWER')<br>```<br><br><br>\n          </div>"}, "last_serial": 4479291, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a65065e55aef5ff0a3cf260c2041bf08", "sha256": "d447389de7a10f7930cb5806b8f8578e0b53d46539d41dbebd85dbc24878ec5e"}, "downloads": -1, "filename": "panacotta-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a65065e55aef5ff0a3cf260c2041bf08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5143, "upload_time": "2018-11-12T22:05:17", "upload_time_iso_8601": "2018-11-12T22:05:17.287069Z", "url": "https://files.pythonhosted.org/packages/b0/d1/bfbf510858906157a618a9763b2df6b9825e9c96af45a6c85b69e01cb604/panacotta-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee8c1c28a16fb234b6282defd60fe9fa", "sha256": "83c219ac83e440b8009cd09a6f528479904197b6d322c64995b6d4d4b499e16c"}, "downloads": -1, "filename": "panacotta-0.1.tar.gz", "has_sig": false, "md5_digest": "ee8c1c28a16fb234b6282defd60fe9fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3480, "upload_time": "2018-11-12T22:05:19", "upload_time_iso_8601": "2018-11-12T22:05:19.519987Z", "url": "https://files.pythonhosted.org/packages/93/56/8058d00d486c0c8d8e872c6d5a6d18168ab71c1481b73952a07c85b278e0/panacotta-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a65065e55aef5ff0a3cf260c2041bf08", "sha256": "d447389de7a10f7930cb5806b8f8578e0b53d46539d41dbebd85dbc24878ec5e"}, "downloads": -1, "filename": "panacotta-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a65065e55aef5ff0a3cf260c2041bf08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5143, "upload_time": "2018-11-12T22:05:17", "upload_time_iso_8601": "2018-11-12T22:05:17.287069Z", "url": "https://files.pythonhosted.org/packages/b0/d1/bfbf510858906157a618a9763b2df6b9825e9c96af45a6c85b69e01cb604/panacotta-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee8c1c28a16fb234b6282defd60fe9fa", "sha256": "83c219ac83e440b8009cd09a6f528479904197b6d322c64995b6d4d4b499e16c"}, "downloads": -1, "filename": "panacotta-0.1.tar.gz", "has_sig": false, "md5_digest": "ee8c1c28a16fb234b6282defd60fe9fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3480, "upload_time": "2018-11-12T22:05:19", "upload_time_iso_8601": "2018-11-12T22:05:19.519987Z", "url": "https://files.pythonhosted.org/packages/93/56/8058d00d486c0c8d8e872c6d5a6d18168ab71c1481b73952a07c85b278e0/panacotta-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:41 2020"}