{"info": {"author": "KM4YRI", "author_email": "km4yri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Communications :: Ham Radio", "Topic :: Software Development :: Build Tools"], "description": "pyFldigi\n========\n\nSummary / Context\n-----------------\n\npyFldigi is a small Python library that can control the Fldigi\napplication via XML-RPC.\n\nFldigi is a digital modem application that is widely used in the amateur\nradio community. It acts as a digital modem, intended to be coupled with\na standard SSB or FM transceiver radio.\n\nFeatures\n--------\n\n-  Full implementation of the available `XML-RPC client`_ commands]\n-  Get FLDIGI version, name, etc.\n-  **Modem**: Get and set the modem type, carrier frequency, bandwidth,\n   etc.\n-  **Modem**: Get and set various modem configuration options for\n   Olivia, WEFAX, and NAVTEX\n-  **Transmit**: Set RX/TX mode to Transmit, Receive, or Tune.\n-  Abort a transmit or tune.\n-  **Squelch**: Get or set the squelch\n-  **Rig control**: Get or set various rig controls, such as frequency,\n   mode, etc.\n-  **Logging**: Get and set various log field contents. This is in the\n   context of ham contact logs, not debug logs.\n-  **Text**: Send text to FLdigi to be transmitted\n-  **Text**: Get text from FLdigi that has been received\n-  **Terminate the Program**: Terminate the program gracefully by asking\n   it to close.\n-  Application monitoring and launching. It is possible to launch FLdigi\n   from a Python command, and monitor it. Also the program can be killed\n   if it refuses to shut down gracefully.\n-  **Configuration**: TBD. Reading and writing of the configuration\n   file(s). Requires a restart of FLdigi.\n\nApplications and Intended Usage\n-------------------------------\n\n-  Remote weather stations.\n-  Portable HF setups. Typically, HF digital setups are bulky and\n   require several interconnected pieces of hardware, usually via audio\n   cables. This library, along with some custom hardware, could allow a\n   walkie-talkie sized HF digital radio that\u2019s completely integrated.\n-  Emcomm\n-  \u2018Headless\u2019 operation on a Raspberry Pi, BeagleBone, or any number of\n   other Linux-based single-board computers.\n-  Putting a more \u2018user-friendly\u2019 GUI on top of FLdigi.\n-  Web enabled FLDIGI via HTML5 and some Javascript, that could be\n   accessed from anywhere. Python\u2019s Flask / Django along with Bootstrap,\n   and a few REST calls, for example.\n-  Allow a phone or tablet to send and receive FLDIGI messages via a\n   custom app. There is an Android version of FLDIGI, but that might not\n   be the best approach for every problem. A more custom application\n   could be created to use only a particular mode and send pre-formatted\n   data, for example, with considerably less work than it would be to\n   fork the FLDIGI mobile application and update it.\n\nDocumentation\n=============\n\nAPI Documentation\n-----------------\n\n-  https://pythonhosted.org/pyfldigi/\n\nUseful FLDIGI documentation\n---------------------------\n\n-  `FLDIGI Wikipedia page`_\n-  `FLDIGI Users Manual - XML-RPC Control`_\n-  `FLDIGI Users Manual - Modems`_\n-  [FLDIGI Users Manual -\n   Configuration](http://www.w1hkj.com/FldigiHelp-3.21/html/conf\n\n.. _XML-RPC client: http://www.w1hkj.com/FldigiHelp-3.21/html/configuration_page.html\n.. _FLDIGI Wikipedia page: https://en.wikipedia.org/wiki/Fldigi\n.. _FLDIGI Users Manual - XML-RPC Control: http://www.w1hkj.com/FldigiHelp-3.21/html/xmlrpc_control_page.html\n.. _FLDIGI Users Manual - Modems: http://www.w1hkj.com/FldigiHelp-3.21/html/modems_page.html", "description_content_type": null, "docs_url": "https://pythonhosted.org/pyfldigi/", "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KM4YRI/pyFldigi", "keywords": "fldigi ham radio hf digital cw morse rtty olivia psk ssb sdr", "license": "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "maintainer": null, "maintainer_email": null, "name": "pyfldigi", "package_url": "https://pypi.org/project/pyfldigi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyfldigi/", "project_urls": {"Homepage": "https://github.com/KM4YRI/pyFldigi"}, "release_url": "https://pypi.org/project/pyfldigi/0.4/", "requires_dist": null, "requires_python": null, "summary": "Python library to control FLDIGI via XML-RPC", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyfldigi\">\n<h2>pyFldigi</h2>\n<div id=\"summary-context\">\n<h3>Summary / Context</h3>\n<p>pyFldigi is a small Python library that can control the Fldigi\napplication via XML-RPC.</p>\n<p>Fldigi is a digital modem application that is widely used in the amateur\nradio community. It acts as a digital modem, intended to be coupled with\na standard SSB or FM transceiver radio.</p>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Full implementation of the available <a href=\"http://www.w1hkj.com/FldigiHelp-3.21/html/configuration_page.html\" rel=\"nofollow\">XML-RPC client</a> commands]</li>\n<li>Get FLDIGI version, name, etc.</li>\n<li><strong>Modem</strong>: Get and set the modem type, carrier frequency, bandwidth,\netc.</li>\n<li><strong>Modem</strong>: Get and set various modem configuration options for\nOlivia, WEFAX, and NAVTEX</li>\n<li><strong>Transmit</strong>: Set RX/TX mode to Transmit, Receive, or Tune.</li>\n<li>Abort a transmit or tune.</li>\n<li><strong>Squelch</strong>: Get or set the squelch</li>\n<li><strong>Rig control</strong>: Get or set various rig controls, such as frequency,\nmode, etc.</li>\n<li><strong>Logging</strong>: Get and set various log field contents. This is in the\ncontext of ham contact logs, not debug logs.</li>\n<li><strong>Text</strong>: Send text to FLdigi to be transmitted</li>\n<li><strong>Text</strong>: Get text from FLdigi that has been received</li>\n<li><strong>Terminate the Program</strong>: Terminate the program gracefully by asking\nit to close.</li>\n<li>Application monitoring and launching. It is possible to launch FLdigi\nfrom a Python command, and monitor it. Also the program can be killed\nif it refuses to shut down gracefully.</li>\n<li><strong>Configuration</strong>: TBD. Reading and writing of the configuration\nfile(s). Requires a restart of FLdigi.</li>\n</ul>\n</div>\n<div id=\"applications-and-intended-usage\">\n<h3>Applications and Intended Usage</h3>\n<ul>\n<li>Remote weather stations.</li>\n<li>Portable HF setups. Typically, HF digital setups are bulky and\nrequire several interconnected pieces of hardware, usually via audio\ncables. This library, along with some custom hardware, could allow a\nwalkie-talkie sized HF digital radio that\u2019s completely integrated.</li>\n<li>Emcomm</li>\n<li>\u2018Headless\u2019 operation on a Raspberry Pi, BeagleBone, or any number of\nother Linux-based single-board computers.</li>\n<li>Putting a more \u2018user-friendly\u2019 GUI on top of FLdigi.</li>\n<li>Web enabled FLDIGI via HTML5 and some Javascript, that could be\naccessed from anywhere. Python\u2019s Flask / Django along with Bootstrap,\nand a few REST calls, for example.</li>\n<li>Allow a phone or tablet to send and receive FLDIGI messages via a\ncustom app. There is an Android version of FLDIGI, but that might not\nbe the best approach for every problem. A more custom application\ncould be created to use only a particular mode and send pre-formatted\ndata, for example, with considerably less work than it would be to\nfork the FLDIGI mobile application and update it.</li>\n</ul>\n</div>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<div id=\"api-documentation\">\n<h3>API Documentation</h3>\n<ul>\n<li><a href=\"https://pythonhosted.org/pyfldigi/\" rel=\"nofollow\">https://pythonhosted.org/pyfldigi/</a></li>\n</ul>\n</div>\n<div id=\"useful-fldigi-documentation\">\n<h3>Useful FLDIGI documentation</h3>\n<ul>\n<li><a href=\"https://en.wikipedia.org/wiki/Fldigi\" rel=\"nofollow\">FLDIGI Wikipedia page</a></li>\n<li><a href=\"http://www.w1hkj.com/FldigiHelp-3.21/html/xmlrpc_control_page.html\" rel=\"nofollow\">FLDIGI Users Manual - XML-RPC Control</a></li>\n<li><a href=\"http://www.w1hkj.com/FldigiHelp-3.21/html/modems_page.html\" rel=\"nofollow\">FLDIGI Users Manual - Modems</a></li>\n<li>[FLDIGI Users Manual -\nConfiguration](<a href=\"http://www.w1hkj.com/FldigiHelp-3.21/html/conf\" rel=\"nofollow\">http://www.w1hkj.com/FldigiHelp-3.21/html/conf</a></li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2646050, "releases": {"0.1": [], "0.2": [{"comment_text": "", "digests": {"md5": "a48942343d5e1292dbcd8cf7e41b0c01", "sha256": "ee633f961da025f4d1a6db38bcc59cc5c0235dd32ca3f52d01c0c89ae8becfdb"}, "downloads": -1, "filename": "pyfldigi-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "a48942343d5e1292dbcd8cf7e41b0c01", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11123, "upload_time": "2017-01-28T18:34:59", "upload_time_iso_8601": "2017-01-28T18:34:59.868155Z", "url": "https://files.pythonhosted.org/packages/96/29/7557d74289c2fe030c882f86bb80c7a29f2a97fa049f0598c4cc960cdcba/pyfldigi-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a6adc8b087c70ccc63457093bc14ca4", "sha256": "c2c523b4c7941c51a47c65c7806daeb43e7f2e49a91a40350657bbe159daeaad"}, "downloads": -1, "filename": "pyfldigi-0.2.tar.gz", "has_sig": false, "md5_digest": "4a6adc8b087c70ccc63457093bc14ca4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10113, "upload_time": "2017-01-28T18:35:01", "upload_time_iso_8601": "2017-01-28T18:35:01.427431Z", "url": "https://files.pythonhosted.org/packages/e8/b3/f93fe9df75d917f2154e5beec0ed013f035482e3382b625ff8987f88f859/pyfldigi-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "39eade80d52e0fab608d2d2c10c3a9be", "sha256": "230b1666dea43737ef621acb95e5965cf72c1813bc9ff1f34404705273e19670"}, "downloads": -1, "filename": "pyfldigi-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "39eade80d52e0fab608d2d2c10c3a9be", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 27988, "upload_time": "2017-02-14T05:48:51", "upload_time_iso_8601": "2017-02-14T05:48:51.768901Z", "url": "https://files.pythonhosted.org/packages/53/b7/a340542bb2d419b9df9fb0c28442ec59b80de8dfcba97038a3be8acf1830/pyfldigi-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bdb141b4399ef9152857af447439d605", "sha256": "247bfa6e3d8a3b64c43aa0b9882ff14548151a381ef97d017fc6d61f2b5c6434"}, "downloads": -1, "filename": "pyfldigi-0.3.tar.gz", "has_sig": false, "md5_digest": "bdb141b4399ef9152857af447439d605", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21810, "upload_time": "2017-02-14T05:48:27", "upload_time_iso_8601": "2017-02-14T05:48:27.984094Z", "url": "https://files.pythonhosted.org/packages/48/3e/3fd90159fec54a36da3dc622a037738f9b1b8b7e0c697fcb785eaf3a17fc/pyfldigi-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "080453e20cf10184997df9bff8b6fa0c", "sha256": "c54bbff467e2e3a4081b3b32a5582cc1f94a5074a176de24c51843f1f0a8c1cd"}, "downloads": -1, "filename": "pyfldigi-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "080453e20cf10184997df9bff8b6fa0c", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29752, "upload_time": "2017-02-16T05:52:35", "upload_time_iso_8601": "2017-02-16T05:52:35.013262Z", "url": "https://files.pythonhosted.org/packages/e7/68/e543f2e69dbbf9b7d7128118f9057f13f1a0423dc7eea0ca9403ce873a89/pyfldigi-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20703e9ebac2c5905bfb9c50a7546424", "sha256": "2aaf4e42d0c060561025836e4992599e5b07c9140934da1cd30678e1b8d03515"}, "downloads": -1, "filename": "pyfldigi-0.4.tar.gz", "has_sig": false, "md5_digest": "20703e9ebac2c5905bfb9c50a7546424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23150, "upload_time": "2017-02-16T05:52:19", "upload_time_iso_8601": "2017-02-16T05:52:19.202018Z", "url": "https://files.pythonhosted.org/packages/8c/38/88ba294ccd21f5dee0176620c259e2740720c6ba16a673144caf80e441b9/pyfldigi-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "080453e20cf10184997df9bff8b6fa0c", "sha256": "c54bbff467e2e3a4081b3b32a5582cc1f94a5074a176de24c51843f1f0a8c1cd"}, "downloads": -1, "filename": "pyfldigi-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "080453e20cf10184997df9bff8b6fa0c", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 29752, "upload_time": "2017-02-16T05:52:35", "upload_time_iso_8601": "2017-02-16T05:52:35.013262Z", "url": "https://files.pythonhosted.org/packages/e7/68/e543f2e69dbbf9b7d7128118f9057f13f1a0423dc7eea0ca9403ce873a89/pyfldigi-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20703e9ebac2c5905bfb9c50a7546424", "sha256": "2aaf4e42d0c060561025836e4992599e5b07c9140934da1cd30678e1b8d03515"}, "downloads": -1, "filename": "pyfldigi-0.4.tar.gz", "has_sig": false, "md5_digest": "20703e9ebac2c5905bfb9c50a7546424", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23150, "upload_time": "2017-02-16T05:52:19", "upload_time_iso_8601": "2017-02-16T05:52:19.202018Z", "url": "https://files.pythonhosted.org/packages/8c/38/88ba294ccd21f5dee0176620c259e2740720c6ba16a673144caf80e441b9/pyfldigi-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:44 2020"}