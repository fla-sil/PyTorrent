{"info": {"author": "metagriffin", "author_email": "mg.pypi@metagriffin.net", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "==========================\nDiff Patch Parsing Library\n==========================\n\nThe `parsedifflib` package parses any style of diff patch into an\nevent stream of patch instructions. These instructions can then be\napplied, colorized, reformatted, dissected, analyzed, etc.\n\n.. warning::\n\n  2013/12/09: currently only the `svnlook` format and stream-oriented\n  event output is supported. Eventually, all the formats supported by\n  colordiff are intended to be supported as well as structured output.\n\n\nUsage\n=====\n\n.. code-block:: python\n\n  import parsedifflib, subprocess\n\n  data = subprocess.check_output('svnlook diff /path/to/repos', shell=True)\n\n  for event, target in parsedifflib.parse_svnlook(data, {'lineNumbers': True}):\n\n    if event in ( parsedifflib.Event.PATCH_START,\n                  parsedifflib.Event.PATCH_END,\n                  parsedifflib.Event.ENTRY_END,\n                  parsedifflib.Event.LINE_LOC,\n                  parsedifflib.Event.LINE_SAME,\n                  parsedifflib.Event.LINE_NOTE,\n                  parsedifflib.Event.PROPENTRY,\n                ):\n      continue\n\n    elif event == parsedifflib.Event.ENTRY_START:\n      print target.comment\n\n    elif event == parsedifflib.Event.LINE_DELETE:\n      print '  - deleted line %d: %s' % (target.oldnum, target.line)\n\n    elif event == parsedifflib.Event.LINE_DELETE:\n      print '  + added line %d: %s' % (target.newnum, target.line)\n\n\nCredits\n=======\n\nMuch inspiration came from:\n\n* https://github.com/ymattw/cdiff\n* https://github.com/kimmel/colordiff", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/metagriffin/parsedifflib", "keywords": "universal diff parse patch", "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "parsedifflib", "package_url": "https://pypi.org/project/parsedifflib/", "platform": "any", "project_url": "https://pypi.org/project/parsedifflib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/metagriffin/parsedifflib"}, "release_url": "https://pypi.org/project/parsedifflib/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "A universal \"diff\" patch parsing library.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The <cite>parsedifflib</cite> package parses any style of diff patch into an\nevent stream of patch instructions. These instructions can then be\napplied, colorized, reformatted, dissected, analyzed, etc.</p>\n<div>\n<p>Warning</p>\n<p>2013/12/09: currently only the <cite>svnlook</cite> format and stream-oriented\nevent output is supported. Eventually, all the formats supported by\ncolordiff are intended to be supported as well as structured output.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">parsedifflib</span><span class=\"o\">,</span> <span class=\"nn\">subprocess</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">subprocess</span><span class=\"o\">.</span><span class=\"n\">check_output</span><span class=\"p\">(</span><span class=\"s1\">'svnlook diff /path/to/repos'</span><span class=\"p\">,</span> <span class=\"n\">shell</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">event</span><span class=\"p\">,</span> <span class=\"n\">target</span> <span class=\"ow\">in</span> <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">parse_svnlook</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'lineNumbers'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">}):</span>\n\n  <span class=\"k\">if</span> <span class=\"n\">event</span> <span class=\"ow\">in</span> <span class=\"p\">(</span> <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">PATCH_START</span><span class=\"p\">,</span>\n                <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">PATCH_END</span><span class=\"p\">,</span>\n                <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">ENTRY_END</span><span class=\"p\">,</span>\n                <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">LINE_LOC</span><span class=\"p\">,</span>\n                <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">LINE_SAME</span><span class=\"p\">,</span>\n                <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">LINE_NOTE</span><span class=\"p\">,</span>\n                <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">PROPENTRY</span><span class=\"p\">,</span>\n              <span class=\"p\">):</span>\n    <span class=\"k\">continue</span>\n\n  <span class=\"k\">elif</span> <span class=\"n\">event</span> <span class=\"o\">==</span> <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">ENTRY_START</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">comment</span>\n\n  <span class=\"k\">elif</span> <span class=\"n\">event</span> <span class=\"o\">==</span> <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">LINE_DELETE</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'  - deleted line </span><span class=\"si\">%d</span><span class=\"s1\">: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">oldnum</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">)</span>\n\n  <span class=\"k\">elif</span> <span class=\"n\">event</span> <span class=\"o\">==</span> <span class=\"n\">parsedifflib</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"o\">.</span><span class=\"n\">LINE_DELETE</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span> <span class=\"s1\">'  + added line </span><span class=\"si\">%d</span><span class=\"s1\">: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">newnum</span><span class=\"p\">,</span> <span class=\"n\">target</span><span class=\"o\">.</span><span class=\"n\">line</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Much inspiration came from:</p>\n<ul>\n<li><a href=\"https://github.com/ymattw/cdiff\" rel=\"nofollow\">https://github.com/ymattw/cdiff</a></li>\n<li><a href=\"https://github.com/kimmel/colordiff\" rel=\"nofollow\">https://github.com/kimmel/colordiff</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 955565, "releases": {"0.0.0": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "9a691c92fb8bf89c053e5fa24191edc5", "sha256": "ff209d16f520a4a4529aa6a3da019542d1e7a40d1fd60b4ffe1cf84acf7bdc13"}, "downloads": -1, "filename": "parsedifflib-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a691c92fb8bf89c053e5fa24191edc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22443, "upload_time": "2013-12-12T17:24:18", "upload_time_iso_8601": "2013-12-12T17:24:18.030295Z", "url": "https://files.pythonhosted.org/packages/95/0a/8317118ced9996df0fa3fd94a2e80afa3b6c2d7e0454ad207f620d741999/parsedifflib-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c1bab3b45c37ab972941bd6cfac84837", "sha256": "beea7cf12b04a5639cec0c2064bfdc9dded55c1711272b3a73a5cf11e55ff3c3"}, "downloads": -1, "filename": "parsedifflib-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c1bab3b45c37ab972941bd6cfac84837", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23635, "upload_time": "2013-12-27T20:31:03", "upload_time_iso_8601": "2013-12-27T20:31:03.665937Z", "url": "https://files.pythonhosted.org/packages/f6/49/5b7452ae3651af0f47061e14d2a0738397651c093219b00dd0970486a63a/parsedifflib-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c1bab3b45c37ab972941bd6cfac84837", "sha256": "beea7cf12b04a5639cec0c2064bfdc9dded55c1711272b3a73a5cf11e55ff3c3"}, "downloads": -1, "filename": "parsedifflib-0.2.0.tar.gz", "has_sig": false, "md5_digest": "c1bab3b45c37ab972941bd6cfac84837", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23635, "upload_time": "2013-12-27T20:31:03", "upload_time_iso_8601": "2013-12-27T20:31:03.665937Z", "url": "https://files.pythonhosted.org/packages/f6/49/5b7452ae3651af0f47061e14d2a0738397651c093219b00dd0970486a63a/parsedifflib-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:22 2020"}