{"info": {"author": "Micha\u0142 Jaworski", "author_email": "swistakm@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Framework :: Django :: 1.4", "Framework :: Django :: 1.5", "Framework :: Django :: 1.6", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "|Build Status| |Coverage Status|\n\nddt-envelope\n============\n\nSimple solution to use django-debug-toolbar with non HTML views. Helps\nin inspecting/profiling endpoints that do not return HTML responses\n(like JSON endpoint).\n\nIt is tested on latest point releases of: ``django1.4``, ``django1.5``,\n``django1.6``, ``django1.7``, ``django1.8`` and each python version that\nis supported by given django releases accordingly (ie. ``python2.6``,\n``python2.7``, ``python3.2``, ``python3.3``, ``python3.4``).\n\nInstalation\n===========\n\n0. Install with pip:\n\n   ::\n\n       pip install ddt-envelope\n\n1. Add ``ddt-envelope`` to your ``INSTALLED_APPS``:\n\n   .. code:: python\n\n\n       if DEBUG is True:\n           INSTALLED_APPS += (\n               'ddt_envelope',\n           )\n\n2. Add ``ddt_envelope`` at the end of your ``urls.py``\n\n   .. code:: python\n\n       from django.conf import settings\n\n       if 'ddt_envelope' in settings.INSTALLED_APPS:\n          urlpatterns += patterns('',\n              # note: you can use any prefix other than '__ddte__' but make\n              #       sure it does not conflict with other url patterns\n              url(r'^__ddte__/', include('ddt_envelope.urls')),\n          )\n\nUsage\n=====\n\nOnce installed and configured just insert ``__ddte__`` or your custom\nprefix after hostname in browser of choice to inspect non-html views\nlike:\n\n::\n\n    http://example.com/__ddte__/maybe/json/\n\nCustomizing output\n==================\n\nYou can customize ``ddt_envelope`` responses either by providing custom\ntemplate name for ``ddt_envelope.views.EnvelopeView`` or by overriding\n``ddte/envelope.html`` template. Context variables passed to this\ntempleta are:\n\n-  ``path`` - \"real\" path of inspected view\n-  ``response`` - response object returned by target inspected view\n-  ``headers`` - dictionary of headers available in response returned by\n   target inspected view\n-  ``content`` - string with raw response content (JSON it will be\n   reformated using ``json.dumps(..., indent=4)``)\n\n.. |Build Status| image:: https://travis-ci.org/swistakm/ddt-envelope.svg\n   :target: https://travis-ci.org/swistakm/ddt-envelope\n.. |Coverage Status| image:: https://coveralls.io/repos/swistakm/ddt-envelope/badge.svg\n   :target: https://coveralls.io/r/swistakm/ddt-envelope", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/swistakm/ddt-envelope", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "ddt-envelope", "package_url": "https://pypi.org/project/ddt-envelope/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ddt-envelope/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/swistakm/ddt-envelope"}, "release_url": "https://pypi.org/project/ddt-envelope/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Simple helper for inspecting non-html views with django-debug-toolbar", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/swistakm/ddt-envelope\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b4005eb29e9f6e5660750cc951d0cef8f198ac3/68747470733a2f2f7472617669732d63692e6f72672f7377697374616b6d2f6464742d656e76656c6f70652e737667\"></a> <a href=\"https://coveralls.io/r/swistakm/ddt-envelope\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52f825177b267917a8b0f54d7bb32e4a01376917/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7377697374616b6d2f6464742d656e76656c6f70652f62616467652e737667\"></a></p>\n<div id=\"ddt-envelope\">\n<h2>ddt-envelope</h2>\n<p>Simple solution to use django-debug-toolbar with non HTML views. Helps\nin inspecting/profiling endpoints that do not return HTML responses\n(like JSON endpoint).</p>\n<p>It is tested on latest point releases of: <tt>django1.4</tt>, <tt>django1.5</tt>,\n<tt>django1.6</tt>, <tt>django1.7</tt>, <tt>django1.8</tt> and each python version that\nis supported by given django releases accordingly (ie. <tt>python2.6</tt>,\n<tt>python2.7</tt>, <tt>python3.2</tt>, <tt>python3.3</tt>, <tt>python3.4</tt>).</p>\n</div>\n<div id=\"instalation\">\n<h2>Instalation</h2>\n<ol>\n<li><p>Install with pip:</p>\n<pre>pip install ddt-envelope\n</pre>\n</li>\n<li><p>Add <tt><span class=\"pre\">ddt-envelope</span></tt> to your <tt>INSTALLED_APPS</tt>:</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">DEBUG</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">+=</span> <span class=\"p\">(</span>\n        <span class=\"s1\">'ddt_envelope'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Add <tt>ddt_envelope</tt> at the end of your <tt>urls.py</tt></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.conf</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"k\">if</span> <span class=\"s1\">'ddt_envelope'</span> <span class=\"ow\">in</span> <span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">INSTALLED_APPS</span><span class=\"p\">:</span>\n   <span class=\"n\">urlpatterns</span> <span class=\"o\">+=</span> <span class=\"n\">patterns</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span>\n       <span class=\"c1\"># note: you can use any prefix other than '__ddte__' but make</span>\n       <span class=\"c1\">#       sure it does not conflict with other url patterns</span>\n       <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^__ddte__/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'ddt_envelope.urls'</span><span class=\"p\">)),</span>\n   <span class=\"p\">)</span>\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Once installed and configured just insert <tt>__ddte__</tt> or your custom\nprefix after hostname in browser of choice to inspect non-html views\nlike:</p>\n<pre>http://example.com/__ddte__/maybe/json/\n</pre>\n</div>\n<div id=\"customizing-output\">\n<h2>Customizing output</h2>\n<p>You can customize <tt>ddt_envelope</tt> responses either by providing custom\ntemplate name for <tt>ddt_envelope.views.EnvelopeView</tt> or by overriding\n<tt>ddte/envelope.html</tt> template. Context variables passed to this\ntempleta are:</p>\n<ul>\n<li><tt>path</tt> - \u201creal\u201d path of inspected view</li>\n<li><tt>response</tt> - response object returned by target inspected view</li>\n<li><tt>headers</tt> - dictionary of headers available in response returned by\ntarget inspected view</li>\n<li><tt>content</tt> - string with raw response content (JSON it will be\nreformated using <tt><span class=\"pre\">json.dumps(...,</span> indent=4)</tt>)</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1603448, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "09b11a10c41b77be421ed80ef0134497", "sha256": "9f6284ccaa863d65fe4d41603182cd5c5e8ffd0ec107f6911f0857bc7f8cd4e8"}, "downloads": -1, "filename": "ddt-envelope-0.0.2.tar.gz", "has_sig": false, "md5_digest": "09b11a10c41b77be421ed80ef0134497", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2728, "upload_time": "2014-07-16T15:25:25", "upload_time_iso_8601": "2014-07-16T15:25:25.696918Z", "url": "https://files.pythonhosted.org/packages/81/d2/96d50348a372f8ed105a131a08b010c7df2a0988941487c8bd9a7f525d00/ddt-envelope-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "eb83cf249ca119a35832a5cd663f8afd", "sha256": "8e7a3baa3bd2392dac03bde96b157dd62e4f954d5655e4718aaaddd9f501e2b0"}, "downloads": -1, "filename": "ddt-envelope-0.1.0.tar.gz", "has_sig": false, "md5_digest": "eb83cf249ca119a35832a5cd663f8afd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3864, "upload_time": "2015-06-23T15:33:44", "upload_time_iso_8601": "2015-06-23T15:33:44.741732Z", "url": "https://files.pythonhosted.org/packages/28/ed/6f54279a9e30dcb27bf64cdbb9ed686c0314a8427f553ac78390d3ecc56b/ddt-envelope-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb83cf249ca119a35832a5cd663f8afd", "sha256": "8e7a3baa3bd2392dac03bde96b157dd62e4f954d5655e4718aaaddd9f501e2b0"}, "downloads": -1, "filename": "ddt-envelope-0.1.0.tar.gz", "has_sig": false, "md5_digest": "eb83cf249ca119a35832a5cd663f8afd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3864, "upload_time": "2015-06-23T15:33:44", "upload_time_iso_8601": "2015-06-23T15:33:44.741732Z", "url": "https://files.pythonhosted.org/packages/28/ed/6f54279a9e30dcb27bf64cdbb9ed686c0314a8427f553ac78390d3ecc56b/ddt-envelope-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:39:42 2020"}