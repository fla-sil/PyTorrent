{"info": {"author": "Nathan Van Gheem", "author_email": "vangheem@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Programming Language :: Python :: 3"], "description": "A Python structured logger for Fluentd\n======================================\n\nWARNING: This is a fork of the https://github.com/fluent/fluent-logger-python\nproject to work with asyncio.\n\n\nMany web/mobile applications generate huge amount of event logs (c,f.\nlogin, logout, purchase, follow, etc). To analyze these event logs could\nbe really valuable for improving the service. However, the challenge is\ncollecting these logs easily and reliably.\n\n`Fluentd <https://github.com/fluent/fluentd>`__ solves that problem by\nhaving: easy installation, small footprint, plugins, reliable buffering,\nlog forwarding, etc.\n\n**aiofluent** is a Python library, to record the events from\nPython application.\n\nRequirements\n------------\n\n-  Python 3.5 or greater\n- ``msgpack-python``\n\nInstallation\n------------\n\nThis library is distributed as 'aiofluent' python package. Please\nexecute the following command to install it.\n\n.. code:: sh\n\n    $ pip install aiofluent\n\nConfiguration\n-------------\n\nFluentd daemon must be launched with a tcp source configuration:\n\n::\n\n    <source>\n      type forward\n      port 24224\n    </source>\n\nTo quickly test your setup, add a matcher that logs to the stdout:\n\n::\n\n    <match app.**>\n      type stdout\n    </match>\n\nUsage\n-----\n\nFluentSender Interface\n~~~~~~~~~~~~~~~~~~~~~~\n\n`sender.FluentSender` is a structured event logger for Fluentd.\n\nBy default, the logger assumes fluentd daemon is launched locally. You\ncan also specify remote logger by passing the options.\n\n.. code:: python\n\n    from aiofluent import sender\n\n    # for local fluent\n    logger = sender.FluentSender('app')\n\n    # for remote fluent\n    logger = sender.FluentSender('app', host='host', port=24224)\n\nFor sending event, call `emit` method with your event. Following example will send the event to\nfluentd, with tag 'app.follow' and the attributes 'from' and 'to'.\n\n.. code:: python\n\n    # Use current time\n    logger.emit('follow', {'from': 'userA', 'to': 'userB'})\n\n    # Specify optional time\n    cur_time = int(time.time())\n    logger.emit_with_time('follow', cur_time, {'from': 'userA', 'to':'userB'})\n\nYou can detect an error via return value of `emit`. If an error happens in `emit`, `emit` returns `False` and get an error object using `last_error` method.\n\n.. code:: python\n\n    if not logger.emit('follow', {'from': 'userA', 'to': 'userB'}):\n        print(logger.last_error)\n        logger.clear_last_error() # clear stored error after handled errors\n\nIf you want to shutdown the client, call `close()` method.\n\n.. code:: python\n\n    logger.close()\n\nEvent-Based Interface\n~~~~~~~~~~~~~~~~~~~~~\n\nThis API is a wrapper for `sender.FluentSender`.\n\nFirst, you need to call ``sender.setup()`` to create global `sender.FluentSender` logger\ninstance. This call needs to be called only once, at the beginning of\nthe application for example.\n\nInitialization code of Event-Based API is below:\n\n.. code:: python\n\n    from aiofluent import sender\n\n    # for local fluent\n    sender.setup('app')\n\n    # for remote fluent\n    sender.setup('app', host='host', port=24224)\n\nThen, please create the events like this. This will send the event to\nfluentd, with tag 'app.follow' and the attributes 'from' and 'to'.\n\n.. code:: python\n\n    from aiofluent import event\n\n    # send event to fluentd, with 'app.follow' tag\n    event.Event('follow', {\n      'from': 'userA',\n      'to':   'userB'\n    })\n\n`event.Event` has one limitation which can't return success/failure result.\n\nOther methods for Event-Based Interface.\n\n.. code:: python\n\n    sender.get_global_sender # get instance of global sender\n    sender.close # Call FluentSender#close\n\nHandler for buffer overflow\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nYou can inject your own custom proc to handle buffer overflow in the event of connection failure. This will mitigate the loss of data instead of simply throwing data away.\n\n.. code:: python\n\n    import msgpack\n    from io import BytesIO\n\n    def handler(pendings):\n        unpacker = msgpack.Unpacker(BytesIO(pendings))\n        for unpacked in unpacker:\n            print(unpacked)\n\n    logger = sender.FluentSender('app', host='host', port=24224, buffer_overflow_handler=handler)\n\nYou should handle any exception in handler. aiofluent ignores exceptions from ``buffer_overflow_handler``.\n\nThis handler is also called when pending events exist during `close()`.\n\nPython logging.Handler interface\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis client-library also has ``FluentHandler`` class for Python logging\nmodule.\n\n.. code:: python\n\n    import logging\n    from aiofluent import handler\n\n    custom_format = {\n      'host': '%(hostname)s',\n      'where': '%(module)s.%(funcName)s',\n      'type': '%(levelname)s',\n      'stack_trace': '%(exc_text)s'\n    }\n\n    logging.basicConfig(level=logging.INFO)\n    l = logging.getLogger('fluent.test')\n    h = handler.FluentHandler('app.follow', host='host', port=24224)\n    formatter = handler.FluentRecordFormatter(custom_format)\n    h.setFormatter(formatter)\n    l.addHandler(h)\n    l.info({\n      'from': 'userA',\n      'to': 'userB'\n    })\n    l.info('{\"from\": \"userC\", \"to\": \"userD\"}')\n    l.info(\"This log entry will be logged with the additional key: 'message'.\")\n\nYou can also customize formatter via logging.config.dictConfig\n\n.. code:: python\n\n    import logging.config\n    import yaml\n\n    with open('logging.yaml') as fd:\n        conf = yaml.load(fd)\n\n    logging.config.dictConfig(conf['logging'])\n\nA sample configuration ``logging.yaml`` would be:\n\n.. code:: python\n\n    logging:\n        version: 1\n\n        formatters:\n          brief:\n            format: '%(message)s'\n          default:\n            format: '%(asctime)s %(levelname)-8s %(name)-15s %(message)s'\n            datefmt: '%Y-%m-%d %H:%M:%S'\n          fluent_fmt:\n            '()': fluent.handler.FluentRecordFormatter\n            format:\n              level: '%(levelname)s'\n              hostname: '%(hostname)s'\n              where: '%(module)s.%(funcName)s'\n\n        handlers:\n            console:\n                class : logging.StreamHandler\n                level: DEBUG\n                formatter: default\n                stream: ext://sys.stdout\n            fluent:\n                class: fluent.handler.FluentHandler\n                host: localhost\n                port: 24224\n                tag: test.logging\n                formatter: fluent_fmt\n                level: DEBUG\n            none:\n                class: logging.NullHandler\n\n        loggers:\n            amqp:\n                handlers: [none]\n                propagate: False\n            conf:\n                handlers: [none]\n                propagate: False\n            '': # root logger\n                handlers: [console, fluent]\n                level: DEBUG\n                propagate: False\n\nLicense\n-------\n\nApache License, Version 2.0\n\n\n1.2.7 (2020-03-09)\n------------------\n\n- Fix repo location\n\n\n1.2.6 (2020-01-06)\n------------------\n\n- Improve error logging\n  [vangheem]\n\n1.2.5 (2019-12-19)\n------------------\n\n- Handle event loop closed error\n  [vangheem]\n\n\n1.2.4 (2019-12-19)\n------------------\n\n- Increase max queue size\n\n\n1.2.3 (2019-04-01)\n------------------\n\n- Fix release\n\n\n1.2.2 (2019-04-01)\n------------------\n\n- nanosecond_precision by default\n  [davidonna]\n\n1.2.1 (2018-10-31)\n------------------\n\n- Add support for nanosecond precision timestamps\n  [davidonna]\n\n1.2.0 (2018-06-14)\n------------------\n\n- Maintain one AsyncIO queue for all logs\n  [vangheem]\n\n1.1.4 (2018-05-29)\n------------------\n\n- Handle RuntimeError on canceling tasks/cleanup\n  [vangheem]\n\n\n1.1.3 (2018-02-15)\n------------------\n\n- Lock calling the close method of sender\n  [vangheem]\n\n- Increase default timeout\n  [vangheem]\n\n\n1.1.2 (2018-02-07)\n------------------\n\n- lock the whole method\n  [vangheem]\n\n\n1.1.1 (2018-02-07)\n------------------\n\n- Use lock on getting connection object\n  [vangheem]\n\n\n1.1.0 (2018-01-25)\n------------------\n\n- Move to using asyncio connection infrastructure instead of sockets\n  [vangheem]\n\n\n1.0.8 (2018-01-04)\n------------------\n\n- Always close out buffer data\n  [vangheem]\n\n\n1.0.7 (2018-01-04)\n------------------\n\n- Handle errors processing log queue\n  [vangheem]\n\n\n1.0.6 (2017-11-14)\n------------------\n\n- Prevent log queue from getting too large\n  [vangheem]\n\n\n1.0.5 (2017-10-17)\n------------------\n\n- Fix release to include CHANGELOG.rst file\n  [vangheem]\n\n\n1.0.4 (2017-10-10)\n------------------\n\n- Fix pushing initial record\n\n\n1.0.3 (2017-10-10)\n------------------\n\n- Handle Runtime error when logging done before event loop started\n  [vangheem]\n\n\n1.0.2 (2017-10-09)\n------------------\n\n- Fix to make normal logging call async\n  [vangheem]\n\n\n1.0.1 (2017-07-03)\n------------------\n\n- initial release\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "http://pypi.python.org/pypi/aiofluent/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/guillotinaweb/aiofluent", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "aiofluent", "package_url": "https://pypi.org/project/aiofluent/", "platform": "", "project_url": "https://pypi.org/project/aiofluent/", "project_urls": {"Download": "http://pypi.python.org/pypi/aiofluent/", "Homepage": "https://github.com/guillotinaweb/aiofluent"}, "release_url": "https://pypi.org/project/aiofluent/1.2.7/", "requires_dist": ["msgpack-python", "pytest (>=3.8.0) ; extra == 'test'", "pytest-asyncio (>=0.10.0) ; extra == 'test'", "pytest-cov ; extra == 'test'", "coverage (>=4.0.3) ; extra == 'test'"], "requires_python": "", "summary": "A Python logging handler for Fluentd event collector", "version": "1.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>WARNING: This is a fork of the <a href=\"https://github.com/fluent/fluent-logger-python\" rel=\"nofollow\">https://github.com/fluent/fluent-logger-python</a>\nproject to work with asyncio.</p>\n<p>Many web/mobile applications generate huge amount of event logs (c,f.\nlogin, logout, purchase, follow, etc). To analyze these event logs could\nbe really valuable for improving the service. However, the challenge is\ncollecting these logs easily and reliably.</p>\n<p><a href=\"https://github.com/fluent/fluentd\" rel=\"nofollow\">Fluentd</a> solves that problem by\nhaving: easy installation, small footprint, plugins, reliable buffering,\nlog forwarding, etc.</p>\n<p><strong>aiofluent</strong> is a Python library, to record the events from\nPython application.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5 or greater</li>\n<li><tt><span class=\"pre\">msgpack-python</span></tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This library is distributed as \u2018aiofluent\u2019 python package. Please\nexecute the following command to install it.</p>\n<pre>$ pip install aiofluent\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>Fluentd daemon must be launched with a tcp source configuration:</p>\n<pre>&lt;source&gt;\n  type forward\n  port 24224\n&lt;/source&gt;\n</pre>\n<p>To quickly test your setup, add a matcher that logs to the stdout:</p>\n<pre>&lt;match app.**&gt;\n  type stdout\n&lt;/match&gt;\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"fluentsender-interface\">\n<h3>FluentSender Interface</h3>\n<p><cite>sender.FluentSender</cite> is a structured event logger for Fluentd.</p>\n<p>By default, the logger assumes fluentd daemon is launched locally. You\ncan also specify remote logger by passing the options.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiofluent</span> <span class=\"kn\">import</span> <span class=\"n\">sender</span>\n\n<span class=\"c1\"># for local fluent</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">FluentSender</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># for remote fluent</span>\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">FluentSender</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'host'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">24224</span><span class=\"p\">)</span>\n</pre>\n<p>For sending event, call <cite>emit</cite> method with your event. Following example will send the event to\nfluentd, with tag \u2018app.follow\u2019 and the attributes \u2018from\u2019 and \u2018to\u2019.</p>\n<pre><span class=\"c1\"># Use current time</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"s1\">'follow'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"s1\">'userA'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'userB'</span><span class=\"p\">})</span>\n\n<span class=\"c1\"># Specify optional time</span>\n<span class=\"n\">cur_time</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">emit_with_time</span><span class=\"p\">(</span><span class=\"s1\">'follow'</span><span class=\"p\">,</span> <span class=\"n\">cur_time</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"s1\">'userA'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">:</span><span class=\"s1\">'userB'</span><span class=\"p\">})</span>\n</pre>\n<p>You can detect an error via return value of <cite>emit</cite>. If an error happens in <cite>emit</cite>, <cite>emit</cite> returns <cite>False</cite> and get an error object using <cite>last_error</cite> method.</p>\n<pre><span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">emit</span><span class=\"p\">(</span><span class=\"s1\">'follow'</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"s1\">'userA'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'userB'</span><span class=\"p\">}):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">last_error</span><span class=\"p\">)</span>\n    <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">clear_last_error</span><span class=\"p\">()</span> <span class=\"c1\"># clear stored error after handled errors</span>\n</pre>\n<p>If you want to shutdown the client, call <cite>close()</cite> method.</p>\n<pre><span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"event-based-interface\">\n<h3>Event-Based Interface</h3>\n<p>This API is a wrapper for <cite>sender.FluentSender</cite>.</p>\n<p>First, you need to call <tt>sender.setup()</tt> to create global <cite>sender.FluentSender</cite> logger\ninstance. This call needs to be called only once, at the beginning of\nthe application for example.</p>\n<p>Initialization code of Event-Based API is below:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiofluent</span> <span class=\"kn\">import</span> <span class=\"n\">sender</span>\n\n<span class=\"c1\"># for local fluent</span>\n<span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># for remote fluent</span>\n<span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">setup</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'host'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">24224</span><span class=\"p\">)</span>\n</pre>\n<p>Then, please create the events like this. This will send the event to\nfluentd, with tag \u2018app.follow\u2019 and the attributes \u2018from\u2019 and \u2018to\u2019.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">aiofluent</span> <span class=\"kn\">import</span> <span class=\"n\">event</span>\n\n<span class=\"c1\"># send event to fluentd, with 'app.follow' tag</span>\n<span class=\"n\">event</span><span class=\"o\">.</span><span class=\"n\">Event</span><span class=\"p\">(</span><span class=\"s1\">'follow'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"s1\">'userA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'to'</span><span class=\"p\">:</span>   <span class=\"s1\">'userB'</span>\n<span class=\"p\">})</span>\n</pre>\n<p><cite>event.Event</cite> has one limitation which can\u2019t return success/failure result.</p>\n<p>Other methods for Event-Based Interface.</p>\n<pre><span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">get_global_sender</span> <span class=\"c1\"># get instance of global sender</span>\n<span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">close</span> <span class=\"c1\"># Call FluentSender#close</span>\n</pre>\n</div>\n<div id=\"handler-for-buffer-overflow\">\n<h3>Handler for buffer overflow</h3>\n<p>You can inject your own custom proc to handle buffer overflow in the event of connection failure. This will mitigate the loss of data instead of simply throwing data away.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">msgpack</span>\n<span class=\"kn\">from</span> <span class=\"nn\">io</span> <span class=\"kn\">import</span> <span class=\"n\">BytesIO</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">handler</span><span class=\"p\">(</span><span class=\"n\">pendings</span><span class=\"p\">):</span>\n    <span class=\"n\">unpacker</span> <span class=\"o\">=</span> <span class=\"n\">msgpack</span><span class=\"o\">.</span><span class=\"n\">Unpacker</span><span class=\"p\">(</span><span class=\"n\">BytesIO</span><span class=\"p\">(</span><span class=\"n\">pendings</span><span class=\"p\">))</span>\n    <span class=\"k\">for</span> <span class=\"n\">unpacked</span> <span class=\"ow\">in</span> <span class=\"n\">unpacker</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">unpacked</span><span class=\"p\">)</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">sender</span><span class=\"o\">.</span><span class=\"n\">FluentSender</span><span class=\"p\">(</span><span class=\"s1\">'app'</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'host'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">24224</span><span class=\"p\">,</span> <span class=\"n\">buffer_overflow_handler</span><span class=\"o\">=</span><span class=\"n\">handler</span><span class=\"p\">)</span>\n</pre>\n<p>You should handle any exception in handler. aiofluent ignores exceptions from <tt>buffer_overflow_handler</tt>.</p>\n<p>This handler is also called when pending events exist during <cite>close()</cite>.</p>\n</div>\n<div id=\"python-logging-handler-interface\">\n<h3>Python logging.Handler interface</h3>\n<p>This client-library also has <tt>FluentHandler</tt> class for Python logging\nmodule.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">aiofluent</span> <span class=\"kn\">import</span> <span class=\"n\">handler</span>\n\n<span class=\"n\">custom_format</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s1\">'host'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(hostname)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'where'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(module)s</span><span class=\"s1\">.</span><span class=\"si\">%(funcName)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'type'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(levelname)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'stack_trace'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(exc_text)s</span><span class=\"s1\">'</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">basicConfig</span><span class=\"p\">(</span><span class=\"n\">level</span><span class=\"o\">=</span><span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">INFO</span><span class=\"p\">)</span>\n<span class=\"n\">l</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"s1\">'fluent.test'</span><span class=\"p\">)</span>\n<span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">FluentHandler</span><span class=\"p\">(</span><span class=\"s1\">'app.follow'</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'host'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">24224</span><span class=\"p\">)</span>\n<span class=\"n\">formatter</span> <span class=\"o\">=</span> <span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">FluentRecordFormatter</span><span class=\"p\">(</span><span class=\"n\">custom_format</span><span class=\"p\">)</span>\n<span class=\"n\">h</span><span class=\"o\">.</span><span class=\"n\">setFormatter</span><span class=\"p\">(</span><span class=\"n\">formatter</span><span class=\"p\">)</span>\n<span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">addHandler</span><span class=\"p\">(</span><span class=\"n\">h</span><span class=\"p\">)</span>\n<span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">({</span>\n  <span class=\"s1\">'from'</span><span class=\"p\">:</span> <span class=\"s1\">'userA'</span><span class=\"p\">,</span>\n  <span class=\"s1\">'to'</span><span class=\"p\">:</span> <span class=\"s1\">'userB'</span>\n<span class=\"p\">})</span>\n<span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s1\">'{\"from\": \"userC\", \"to\": \"userD\"}'</span><span class=\"p\">)</span>\n<span class=\"n\">l</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"This log entry will be logged with the additional key: 'message'.\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can also customize formatter via logging.config.dictConfig</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">logging.config</span>\n<span class=\"kn\">import</span> <span class=\"nn\">yaml</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'logging.yaml'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fd</span><span class=\"p\">:</span>\n    <span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">fd</span><span class=\"p\">)</span>\n\n<span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">dictConfig</span><span class=\"p\">(</span><span class=\"n\">conf</span><span class=\"p\">[</span><span class=\"s1\">'logging'</span><span class=\"p\">])</span>\n</pre>\n<p>A sample configuration <tt>logging.yaml</tt> would be:</p>\n<pre><span class=\"n\">logging</span><span class=\"p\">:</span>\n    <span class=\"n\">version</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n\n    <span class=\"n\">formatters</span><span class=\"p\">:</span>\n      <span class=\"n\">brief</span><span class=\"p\">:</span>\n        <span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span>\n      <span class=\"n\">default</span><span class=\"p\">:</span>\n        <span class=\"nb\">format</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(asctime)s</span><span class=\"s1\"> </span><span class=\"si\">%(levelname)-8s</span><span class=\"s1\"> </span><span class=\"si\">%(name)-15s</span><span class=\"s1\"> </span><span class=\"si\">%(message)s</span><span class=\"s1\">'</span>\n        <span class=\"n\">datefmt</span><span class=\"p\">:</span> <span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S'</span>\n      <span class=\"n\">fluent_fmt</span><span class=\"p\">:</span>\n        <span class=\"s1\">'()'</span><span class=\"p\">:</span> <span class=\"n\">fluent</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">FluentRecordFormatter</span>\n        <span class=\"nb\">format</span><span class=\"p\">:</span>\n          <span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(levelname)s</span><span class=\"s1\">'</span>\n          <span class=\"n\">hostname</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(hostname)s</span><span class=\"s1\">'</span>\n          <span class=\"n\">where</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%(module)s</span><span class=\"s1\">.</span><span class=\"si\">%(funcName)s</span><span class=\"s1\">'</span>\n\n    <span class=\"n\">handlers</span><span class=\"p\">:</span>\n        <span class=\"n\">console</span><span class=\"p\">:</span>\n            <span class=\"k\">class</span> <span class=\"err\">: </span><span class=\"nc\">logging</span><span class=\"o\">.</span><span class=\"n\">StreamHandler</span>\n            <span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"n\">DEBUG</span>\n            <span class=\"n\">formatter</span><span class=\"p\">:</span> <span class=\"n\">default</span>\n            <span class=\"n\">stream</span><span class=\"p\">:</span> <span class=\"n\">ext</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span>\n        <span class=\"n\">fluent</span><span class=\"p\">:</span>\n            <span class=\"n\">class</span><span class=\"p\">:</span> <span class=\"n\">fluent</span><span class=\"o\">.</span><span class=\"n\">handler</span><span class=\"o\">.</span><span class=\"n\">FluentHandler</span>\n            <span class=\"n\">host</span><span class=\"p\">:</span> <span class=\"n\">localhost</span>\n            <span class=\"n\">port</span><span class=\"p\">:</span> <span class=\"mi\">24224</span>\n            <span class=\"n\">tag</span><span class=\"p\">:</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">logging</span>\n            <span class=\"n\">formatter</span><span class=\"p\">:</span> <span class=\"n\">fluent_fmt</span>\n            <span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"n\">DEBUG</span>\n        <span class=\"n\">none</span><span class=\"p\">:</span>\n            <span class=\"n\">class</span><span class=\"p\">:</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">NullHandler</span>\n\n    <span class=\"n\">loggers</span><span class=\"p\">:</span>\n        <span class=\"n\">amqp</span><span class=\"p\">:</span>\n            <span class=\"n\">handlers</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">none</span><span class=\"p\">]</span>\n            <span class=\"n\">propagate</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n        <span class=\"n\">conf</span><span class=\"p\">:</span>\n            <span class=\"n\">handlers</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">none</span><span class=\"p\">]</span>\n            <span class=\"n\">propagate</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n        <span class=\"s1\">''</span><span class=\"p\">:</span> <span class=\"c1\"># root logger</span>\n            <span class=\"n\">handlers</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">console</span><span class=\"p\">,</span> <span class=\"n\">fluent</span><span class=\"p\">]</span>\n            <span class=\"n\">level</span><span class=\"p\">:</span> <span class=\"n\">DEBUG</span>\n            <span class=\"n\">propagate</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Apache License, Version 2.0</p>\n</div>\n<div id=\"id1\">\n<h2>1.2.7 (2020-03-09)</h2>\n<ul>\n<li>Fix repo location</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>1.2.6 (2020-01-06)</h2>\n<ul>\n<li>Improve error logging\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>1.2.5 (2019-12-19)</h2>\n<ul>\n<li>Handle event loop closed error\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h2>1.2.4 (2019-12-19)</h2>\n<ul>\n<li>Increase max queue size</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h2>1.2.3 (2019-04-01)</h2>\n<ul>\n<li>Fix release</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>1.2.2 (2019-04-01)</h2>\n<ul>\n<li>nanosecond_precision by default\n[davidonna]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h2>1.2.1 (2018-10-31)</h2>\n<ul>\n<li>Add support for nanosecond precision timestamps\n[davidonna]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h2>1.2.0 (2018-06-14)</h2>\n<ul>\n<li>Maintain one AsyncIO queue for all logs\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h2>1.1.4 (2018-05-29)</h2>\n<ul>\n<li>Handle RuntimeError on canceling tasks/cleanup\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h2>1.1.3 (2018-02-15)</h2>\n<ul>\n<li>Lock calling the close method of sender\n[vangheem]</li>\n<li>Increase default timeout\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h2>1.1.2 (2018-02-07)</h2>\n<ul>\n<li>lock the whole method\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h2>1.1.1 (2018-02-07)</h2>\n<ul>\n<li>Use lock on getting connection object\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h2>1.1.0 (2018-01-25)</h2>\n<ul>\n<li>Move to using asyncio connection infrastructure instead of sockets\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h2>1.0.8 (2018-01-04)</h2>\n<ul>\n<li>Always close out buffer data\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h2>1.0.7 (2018-01-04)</h2>\n<ul>\n<li>Handle errors processing log queue\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h2>1.0.6 (2017-11-14)</h2>\n<ul>\n<li>Prevent log queue from getting too large\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id17\">\n<h2>1.0.5 (2017-10-17)</h2>\n<ul>\n<li>Fix release to include CHANGELOG.rst file\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id18\">\n<h2>1.0.4 (2017-10-10)</h2>\n<ul>\n<li>Fix pushing initial record</li>\n</ul>\n</div>\n<div id=\"id19\">\n<h2>1.0.3 (2017-10-10)</h2>\n<ul>\n<li>Handle Runtime error when logging done before event loop started\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id20\">\n<h2>1.0.2 (2017-10-09)</h2>\n<ul>\n<li>Fix to make normal logging call async\n[vangheem]</li>\n</ul>\n</div>\n<div id=\"id21\">\n<h2>1.0.1 (2017-07-03)</h2>\n<ul>\n<li>initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6776718, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "1b9ea45e88c87803c9a9436a394e1aa7", "sha256": "f5877daad17ba0453ea1622652d4a34fbc100c55dd66328d47779de487d31cb9"}, "downloads": -1, "filename": "aiofluent-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1b9ea45e88c87803c9a9436a394e1aa7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10641, "upload_time": "2017-07-03T15:33:50", "upload_time_iso_8601": "2017-07-03T15:33:50.434571Z", "url": "https://files.pythonhosted.org/packages/a1/2c/c585b1986d24bd6d9a99f9d3811221d13c3016ef38b33d337a3b400df5a7/aiofluent-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56135229f4536e347cdbfa0e4d8d16b4", "sha256": "24180d3712debb87c6e5f370dcf5044642fc03c5ceb39d7858831b746b8c2703"}, "downloads": -1, "filename": "aiofluent-1.0.0.tar.gz", "has_sig": false, "md5_digest": "56135229f4536e347cdbfa0e4d8d16b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9661, "upload_time": "2017-07-03T15:33:51", "upload_time_iso_8601": "2017-07-03T15:33:51.921420Z", "url": "https://files.pythonhosted.org/packages/25/3d/93840b4b9234515005318a764c0d57139bf23c1f4d44fb7e22bcc6c2771a/aiofluent-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2934f113e9c0c0bb5441968b2bd0e4bf", "sha256": "63e0c2911a1a5fc242ee84fd76e26b840ceecc6d7fd77c3c3bee81814df3710e"}, "downloads": -1, "filename": "aiofluent-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2934f113e9c0c0bb5441968b2bd0e4bf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10658, "upload_time": "2017-07-03T15:53:53", "upload_time_iso_8601": "2017-07-03T15:53:53.726998Z", "url": "https://files.pythonhosted.org/packages/b1/6a/df085b2cf1c034ab73c92edb6ae5ad1b36995f96a89f5eae1842585e5033/aiofluent-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0074dad0b74ebfa948f00daaa2cbcd4", "sha256": "1312a53b9c87caaf12d6d4488b242c8a11443362e5c253deccd5249aba2bfea1"}, "downloads": -1, "filename": "aiofluent-1.0.1.tar.gz", "has_sig": false, "md5_digest": "d0074dad0b74ebfa948f00daaa2cbcd4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9651, "upload_time": "2017-07-03T15:53:54", "upload_time_iso_8601": "2017-07-03T15:53:54.825917Z", "url": "https://files.pythonhosted.org/packages/dc/ed/2d89bec9afcb3bc08fac7cd68babe6980ef3682d5b8cfcf2d6441bd85b8e/aiofluent-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "fbd4ad86ee3f887bacc944f075b5a67f", "sha256": "37772de06053258cb22d7a2100b04d1f05ff865d29e2cc1ad2d89f69e824484d"}, "downloads": -1, "filename": "aiofluent-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fbd4ad86ee3f887bacc944f075b5a67f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10899, "upload_time": "2017-10-09T15:47:17", "upload_time_iso_8601": "2017-10-09T15:47:17.065718Z", "url": "https://files.pythonhosted.org/packages/c6/bf/0f7f27440902db50812dfd592140ca3c31fb6efb6a047f0887f31238eeca/aiofluent-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d08cea912efa1d2fc6a7fd8e37ecc3bd", "sha256": "c20042f43bd6aec221e83bd6d6de6b9f4e24cd52e7a5ed756ef654254973e267"}, "downloads": -1, "filename": "aiofluent-1.0.2.tar.gz", "has_sig": false, "md5_digest": "d08cea912efa1d2fc6a7fd8e37ecc3bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9947, "upload_time": "2017-10-09T15:47:18", "upload_time_iso_8601": "2017-10-09T15:47:18.768744Z", "url": "https://files.pythonhosted.org/packages/57/43/dc3205eea0770bbf2e2c336f28d82ac4351584b8d96d10c2a77f8a25a950/aiofluent-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "1af9632bc2be4bfcc90d8135f2492d73", "sha256": "08b9834c12dcdc4b199785a495fdd1d35c2895b4cb342572dccacc4885ccb58b"}, "downloads": -1, "filename": "aiofluent-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1af9632bc2be4bfcc90d8135f2492d73", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11015, "upload_time": "2017-10-10T09:47:37", "upload_time_iso_8601": "2017-10-10T09:47:37.091509Z", "url": "https://files.pythonhosted.org/packages/5f/a0/df5ac433ce53f98fec7245e65cd205f3a791d6ace614ae9a17f80c3b1af5/aiofluent-1.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5cc3bee6a34e657921e664f159ac32a2", "sha256": "87615cdd05d6371cc33996f931f3185e743b67cf21dce8ec6d75270340846f7f"}, "downloads": -1, "filename": "aiofluent-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5cc3bee6a34e657921e664f159ac32a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10000, "upload_time": "2017-10-10T09:47:39", "upload_time_iso_8601": "2017-10-10T09:47:39.297337Z", "url": "https://files.pythonhosted.org/packages/72/6e/47891e25f57de3ea97aae3862c3a214e40af80769dd27b37cecca6be4ce8/aiofluent-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "3624dea7a586939c3898a3aa3d86c212", "sha256": "9db832941ada68a0f73c1e257cc447245cfa3029294205c1b78441186f8d78a8"}, "downloads": -1, "filename": "aiofluent-1.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3624dea7a586939c3898a3aa3d86c212", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11045, "upload_time": "2017-10-10T16:28:53", "upload_time_iso_8601": "2017-10-10T16:28:53.471478Z", "url": "https://files.pythonhosted.org/packages/6f/83/100c288142a9c004e370809ae833d528e7a511b7e9ec415e94a47938fcd7/aiofluent-1.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b1a8f244a78bf49e04dfd8fde3a97e8b", "sha256": "bc1abe78291447c226d578e7a78d8e3db83d8a8a10be11c5e777fcccb9e2fe08"}, "downloads": -1, "filename": "aiofluent-1.0.4.tar.gz", "has_sig": false, "md5_digest": "b1a8f244a78bf49e04dfd8fde3a97e8b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10031, "upload_time": "2017-10-10T16:28:55", "upload_time_iso_8601": "2017-10-10T16:28:55.057639Z", "url": "https://files.pythonhosted.org/packages/a1/f3/a7156f155983c02c524042b4a3690e624996e023c92ee39ec812b7dd103d/aiofluent-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "bec82ed79efc91aa5163a83670acbbb8", "sha256": "2643f015118f131062cfdfda48932c70e1be3819252d656479be8177d74557a8"}, "downloads": -1, "filename": "aiofluent-1.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bec82ed79efc91aa5163a83670acbbb8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11118, "upload_time": "2017-10-17T10:14:03", "upload_time_iso_8601": "2017-10-17T10:14:03.186523Z", "url": "https://files.pythonhosted.org/packages/a0/38/b761396735dd0c0b397d32a54f37340556f2dc2f1992183e3b0a53f607ad/aiofluent-1.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b01e333afba30b4a5cc8a53e7929d78", "sha256": "f3fab4d5b565289a7b5463120a574f45c8c06090bfbe1d620a58509cc77eb905"}, "downloads": -1, "filename": "aiofluent-1.0.5.tar.gz", "has_sig": false, "md5_digest": "7b01e333afba30b4a5cc8a53e7929d78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10135, "upload_time": "2017-10-17T10:14:04", "upload_time_iso_8601": "2017-10-17T10:14:04.161531Z", "url": "https://files.pythonhosted.org/packages/cb/b5/c9b6b0f8ddfa2819aff42d352089722e725eb60d012943b388f437d6f735/aiofluent-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "e4b9423ea5d05dbd3c3a3435192a4589", "sha256": "aaf782848e20b7cd596ea7374377adcc5ca1918c7fad9adbe1439efda96e2c1e"}, "downloads": -1, "filename": "aiofluent-1.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4b9423ea5d05dbd3c3a3435192a4589", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11387, "upload_time": "2017-11-14T20:04:42", "upload_time_iso_8601": "2017-11-14T20:04:42.312652Z", "url": "https://files.pythonhosted.org/packages/fd/27/08c706d5fc957b7b8c8a2df31a4e70d45c8f777756f3763a2966c59ddc7d/aiofluent-1.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd69f844139d9074752ef5ee5151a480", "sha256": "22bb76629b6c51c0100b5ec392d643b96be1eeb00161bd161e726e45319bc785"}, "downloads": -1, "filename": "aiofluent-1.0.6.tar.gz", "has_sig": false, "md5_digest": "bd69f844139d9074752ef5ee5151a480", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10326, "upload_time": "2017-11-14T20:04:44", "upload_time_iso_8601": "2017-11-14T20:04:44.148643Z", "url": "https://files.pythonhosted.org/packages/41/b9/5ba7871d9dc3b8874bfa2ab83d7c7a126172ecd50420671c25a02bf64c09/aiofluent-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "0058632c52b041bf32f46e14c44fb4a8", "sha256": "31e7e431c40d0380b706a68bc34fed347061f9b02f71949e8b19f906764d03a5"}, "downloads": -1, "filename": "aiofluent-1.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0058632c52b041bf32f46e14c44fb4a8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11374, "upload_time": "2018-01-04T13:44:50", "upload_time_iso_8601": "2018-01-04T13:44:50.990934Z", "url": "https://files.pythonhosted.org/packages/f9/d1/78502e11d1f174769ef355654693bbcf36e2eaa779cc5dc075123f29291f/aiofluent-1.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a898ab2b151cc7edda86af644502ebf6", "sha256": "574fd29421bc1b5f66b3828152927eeca8c2ca996bc9f36e12a40e3c37d27cb1"}, "downloads": -1, "filename": "aiofluent-1.0.7.tar.gz", "has_sig": false, "md5_digest": "a898ab2b151cc7edda86af644502ebf6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12709, "upload_time": "2018-01-04T13:44:53", "upload_time_iso_8601": "2018-01-04T13:44:53.271107Z", "url": "https://files.pythonhosted.org/packages/3b/db/62922335e3bb2e5eb90b20b88aeebd917f8018bcb1d57203129a7a21bcf4/aiofluent-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "05f29d9e60773518ccdc40f0ada42a86", "sha256": "2dd612bd6f58659352305bfd0401afe627ee3ac4ffb11a4cb9b45f87a5cd595d"}, "downloads": -1, "filename": "aiofluent-1.0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "05f29d9e60773518ccdc40f0ada42a86", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11500, "upload_time": "2018-01-04T16:35:56", "upload_time_iso_8601": "2018-01-04T16:35:56.244195Z", "url": "https://files.pythonhosted.org/packages/92/8a/64a1d726eda434c52a4acdf14eff77cbff42ec8bc8bb68adeb555c4e97d8/aiofluent-1.0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f902b5c7497f84fb30476bf9204e6c1e", "sha256": "4259fb1038781b5ace5a5b95ea9bdc7a4b734a98a3ccdcf7241ccc452da4e040"}, "downloads": -1, "filename": "aiofluent-1.0.8.tar.gz", "has_sig": false, "md5_digest": "f902b5c7497f84fb30476bf9204e6c1e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12838, "upload_time": "2018-01-04T16:35:55", "upload_time_iso_8601": "2018-01-04T16:35:55.034567Z", "url": "https://files.pythonhosted.org/packages/a2/57/17dd33a8b571dd5461a2d7af0fa079658da9ebbc36cdad1c87f0fc11ed73/aiofluent-1.0.8.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "d9e6644370595e339210d4a988ffd9d1", "sha256": "732911673cc225b255781eb435cda137b00ad273afaefc2d976b65efa3f09c05"}, "downloads": -1, "filename": "aiofluent-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d9e6644370595e339210d4a988ffd9d1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11335, "upload_time": "2018-01-25T19:15:43", "upload_time_iso_8601": "2018-01-25T19:15:43.222777Z", "url": "https://files.pythonhosted.org/packages/aa/49/69b2fe991b1e0737cd09901b69069eb1faf6a83c3ee22b277089ec408662/aiofluent-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5453d4de806153f7ecedba3a7188a061", "sha256": "1452d3f76124e2b5487d5e9d25da09f9b557a05228d9a821c508e779485ee9c2"}, "downloads": -1, "filename": "aiofluent-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5453d4de806153f7ecedba3a7188a061", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12522, "upload_time": "2018-01-25T19:15:42", "upload_time_iso_8601": "2018-01-25T19:15:42.235712Z", "url": "https://files.pythonhosted.org/packages/02/ee/4f4d5e7560ced013f57546032c9b17506fc72e273c0e541e7a01b48d2423/aiofluent-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "e12e4e36f50c9ed021f07f4a829c2457", "sha256": "3aadef4118428a70d448a509ab6949132eda446aba695c88e4df61ed3075df63"}, "downloads": -1, "filename": "aiofluent-1.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e12e4e36f50c9ed021f07f4a829c2457", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11421, "upload_time": "2018-02-07T18:05:50", "upload_time_iso_8601": "2018-02-07T18:05:50.646927Z", "url": "https://files.pythonhosted.org/packages/c0/f0/064808469c6b6dfc476cb8f72b4217622875bae2cfa6271a04c2fb1d80c4/aiofluent-1.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c3c6a7c50d2e5f3f0ba5c878ea4afdf2", "sha256": "50c04b2ab6a91322d2ed6ca80114ece761485060e826e42004c861b799d7878d"}, "downloads": -1, "filename": "aiofluent-1.1.1.tar.gz", "has_sig": false, "md5_digest": "c3c6a7c50d2e5f3f0ba5c878ea4afdf2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12630, "upload_time": "2018-02-07T18:05:49", "upload_time_iso_8601": "2018-02-07T18:05:49.347725Z", "url": "https://files.pythonhosted.org/packages/9b/84/e9054ffed69cbc65c05fb57a97096b612a8b53c18ed25d2a46907386d7c7/aiofluent-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "92d90bce94a74b8d8381476c27ef8039", "sha256": "a05324896c63c242344019e245b139dfd988eece4e53dc1c8e9356991b315c05"}, "downloads": -1, "filename": "aiofluent-1.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "92d90bce94a74b8d8381476c27ef8039", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11463, "upload_time": "2018-02-07T18:16:03", "upload_time_iso_8601": "2018-02-07T18:16:03.793726Z", "url": "https://files.pythonhosted.org/packages/93/c8/754262f5b816ac323abb340d7f9c2183a653df9248774dc3300eced8c1a7/aiofluent-1.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "715de82b27d85543f684b8f0beb01e11", "sha256": "bc9735971d5ed3255061bbc8986239759384fefe9d568477447d82896cda0333"}, "downloads": -1, "filename": "aiofluent-1.1.2.tar.gz", "has_sig": false, "md5_digest": "715de82b27d85543f684b8f0beb01e11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12684, "upload_time": "2018-02-07T18:16:04", "upload_time_iso_8601": "2018-02-07T18:16:04.677781Z", "url": "https://files.pythonhosted.org/packages/a2/95/50beeb06d81fb62ab0256aa5c314205c2bc87b0189a6852505fd6fd4ae3b/aiofluent-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "303168a0a9258d767e80886e4f382d69", "sha256": "8fc73c8ad9edab36688e498df58bcf7771f41cf52c0b3853e87d57c8ca1960af"}, "downloads": -1, "filename": "aiofluent-1.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "303168a0a9258d767e80886e4f382d69", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11536, "upload_time": "2018-02-15T15:22:56", "upload_time_iso_8601": "2018-02-15T15:22:56.172137Z", "url": "https://files.pythonhosted.org/packages/a2/42/36a7fe1376503aee79ce6e187cfbec9dcced6564db2aa60ddb2224c56873/aiofluent-1.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b550dfb300882105b2c352fe94de6084", "sha256": "4d88e0f058eac852118defb40b0c7a2a45aaace168ed7323bc41c345d7c0fc9e"}, "downloads": -1, "filename": "aiofluent-1.1.3.tar.gz", "has_sig": false, "md5_digest": "b550dfb300882105b2c352fe94de6084", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12775, "upload_time": "2018-02-15T15:22:59", "upload_time_iso_8601": "2018-02-15T15:22:59.058735Z", "url": "https://files.pythonhosted.org/packages/d6/24/32bccad0bd709f5d2319b56a6532df0929dd67da9888d16422a80fa3bac1/aiofluent-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "036e6bf6c583c4dd38d219d78d6a3e61", "sha256": "fd3cff589402fe46a07c97a4c00719455d0c4797a2a6179db6cfd608ce905e4d"}, "downloads": -1, "filename": "aiofluent-1.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "036e6bf6c583c4dd38d219d78d6a3e61", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11620, "upload_time": "2018-05-29T18:05:35", "upload_time_iso_8601": "2018-05-29T18:05:35.857982Z", "url": "https://files.pythonhosted.org/packages/0a/7a/50a130c1920132a1e88f447b26e81d9a52970dc45ca22c0bbe299798ba88/aiofluent-1.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "551b1b606096e0c1c89b764957e16b6b", "sha256": "d7ffd69c1ac3006d799bbf0d1ca86347ec469ed7ca48d7f811211b58edd9b6b1"}, "downloads": -1, "filename": "aiofluent-1.1.4.tar.gz", "has_sig": false, "md5_digest": "551b1b606096e0c1c89b764957e16b6b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12851, "upload_time": "2018-05-29T18:05:34", "upload_time_iso_8601": "2018-05-29T18:05:34.258720Z", "url": "https://files.pythonhosted.org/packages/b6/af/349bd2554e10da757d82b08198da2809af0dec8c8eae3c67c314fa1e60c2/aiofluent-1.1.4.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a9c16440eaf9f8e548c4da84a3a0fa68", "sha256": "b64b58218d924fae35ca45b4865b1ac3d3546d08e85b0c8110f92908c20ee25d"}, "downloads": -1, "filename": "aiofluent-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9c16440eaf9f8e548c4da84a3a0fa68", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11980, "upload_time": "2018-06-14T20:44:22", "upload_time_iso_8601": "2018-06-14T20:44:22.380522Z", "url": "https://files.pythonhosted.org/packages/c5/57/5b01b08ed2e59552d6cd96ee1788a4334dbc0f5a7e090ba69d880bae2673/aiofluent-1.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "32698b8c141dd299a781aa7b416e2df5", "sha256": "6e70780c61eb4ea42c2699b98284f196e5824d0b872c2ac69c056299c2316590"}, "downloads": -1, "filename": "aiofluent-1.2.0.tar.gz", "has_sig": false, "md5_digest": "32698b8c141dd299a781aa7b416e2df5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13254, "upload_time": "2018-06-14T20:44:23", "upload_time_iso_8601": "2018-06-14T20:44:23.134988Z", "url": "https://files.pythonhosted.org/packages/ab/0c/055643859135408a10b17cb7f8915facdc285582a12705e5404105abbc8e/aiofluent-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "67a026ea61ca0ed47d35f7222d8423ff", "sha256": "1915b014502595a7c035817c70a44a8938ac880a74876f25424858b0521f5a5a"}, "downloads": -1, "filename": "aiofluent-1.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67a026ea61ca0ed47d35f7222d8423ff", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8469, "upload_time": "2018-10-31T11:05:00", "upload_time_iso_8601": "2018-10-31T11:05:00.973229Z", "url": "https://files.pythonhosted.org/packages/d1/d2/2fbfb6589929eb6646c8e2eb8d4edf0d06538a2c9709baa580ecf9b6d3e1/aiofluent-1.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d6d409cf4e3b55ccf1205bcd63c6120", "sha256": "b30548847da499fb587aa139c366717093d9daa47cea09d46d811fd47be832b7"}, "downloads": -1, "filename": "aiofluent-1.2.1.tar.gz", "has_sig": false, "md5_digest": "3d6d409cf4e3b55ccf1205bcd63c6120", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13856, "upload_time": "2018-10-31T11:05:02", "upload_time_iso_8601": "2018-10-31T11:05:02.015098Z", "url": "https://files.pythonhosted.org/packages/75/8a/dedac4b74158866f89b198fcd87b4325d663a702adea827774c84117cabe/aiofluent-1.2.1.tar.gz", "yanked": false}], "1.2.2.dev0": [{"comment_text": "", "digests": {"md5": "b777b9a4518e2ef340cef49b84074048", "sha256": "f9703b776054240019ee0eb6ea90804e88e841c0ac3c783ded3ebd592c3145dd"}, "downloads": -1, "filename": "aiofluent-1.2.2.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b777b9a4518e2ef340cef49b84074048", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9088, "upload_time": "2019-04-01T14:30:50", "upload_time_iso_8601": "2019-04-01T14:30:50.643571Z", "url": "https://files.pythonhosted.org/packages/a7/a8/0423d68cee8a8c3a9090b4f27dd6f2e28bdc18c260529fdf6d6bbc502b85/aiofluent-1.2.2.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "781ce1da9f5212d8e8e3d9bce6d84b7f", "sha256": "72d7b6908965d8bd39ecf9fbae0a32083a148ff1ab418b7f8c6b7b0e6baf9805"}, "downloads": -1, "filename": "aiofluent-1.2.2.dev0.tar.gz", "has_sig": false, "md5_digest": "781ce1da9f5212d8e8e3d9bce6d84b7f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12227, "upload_time": "2019-04-01T14:30:51", "upload_time_iso_8601": "2019-04-01T14:30:51.812661Z", "url": "https://files.pythonhosted.org/packages/2c/39/e9cb2613179f3422ad02f1ee1f4189cfc03652e0bb3d2ed6c42de721585a/aiofluent-1.2.2.dev0.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "1e9dc911be772acb0289bc219576b610", "sha256": "0f615aa4316a75872906941b0bd70de1de2c5f1b2f336e69761e22c00cd81696"}, "downloads": -1, "filename": "aiofluent-1.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1e9dc911be772acb0289bc219576b610", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9042, "upload_time": "2019-04-01T14:38:14", "upload_time_iso_8601": "2019-04-01T14:38:14.310945Z", "url": "https://files.pythonhosted.org/packages/c8/da/7a7136bf91fe373894b9d2ece30c93d6bf85d89420db6afcf0e3641ef684/aiofluent-1.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35f89b6bc75763dff579e13aea0c7841", "sha256": "1eb94e42684c8596c12610c3b4d7953ba944ba8cad186d751a863f38fa68f4b6"}, "downloads": -1, "filename": "aiofluent-1.2.3.tar.gz", "has_sig": false, "md5_digest": "35f89b6bc75763dff579e13aea0c7841", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12246, "upload_time": "2019-04-01T14:38:15", "upload_time_iso_8601": "2019-04-01T14:38:15.482644Z", "url": "https://files.pythonhosted.org/packages/d4/36/36aebe622df6d5cb92a3dc7448d39a708a3fccd0cccfadd1941382f4bcf2/aiofluent-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "75529e112b833b237692d9cd10d34cc0", "sha256": "7a529393daf03bd42ed636b0716d6227e51ad65a187d23e5d19a08dd5c2edf38"}, "downloads": -1, "filename": "aiofluent-1.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75529e112b833b237692d9cd10d34cc0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9069, "upload_time": "2019-12-19T19:15:57", "upload_time_iso_8601": "2019-12-19T19:15:57.246708Z", "url": "https://files.pythonhosted.org/packages/ae/8d/2dad7cebf9b5e0551d6f2c4df289ccbf9bf9bc156ea0cf0cae12bf2dca2e/aiofluent-1.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "097dc8e011d176a3225bde881c5b3bcf", "sha256": "dd61420367d5d747d64d7dae62fa38fe9deb9813caa561b0ed950afe9bd9e4a7"}, "downloads": -1, "filename": "aiofluent-1.2.4.tar.gz", "has_sig": false, "md5_digest": "097dc8e011d176a3225bde881c5b3bcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12285, "upload_time": "2019-12-19T19:15:59", "upload_time_iso_8601": "2019-12-19T19:15:59.291306Z", "url": "https://files.pythonhosted.org/packages/60/94/28ca6202605dc15e3a8318dd04472503771e10574d7347b9f82f083a8bbc/aiofluent-1.2.4.tar.gz", "yanked": false}], "1.2.5": [{"comment_text": "", "digests": {"md5": "eef079e6643ab5f55b84914d782c9768", "sha256": "05b7bbae9f2d62c9f7c81a1b246df16f482611b7f616a5e37ba36b887e2e7609"}, "downloads": -1, "filename": "aiofluent-1.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eef079e6643ab5f55b84914d782c9768", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9104, "upload_time": "2019-12-20T01:34:42", "upload_time_iso_8601": "2019-12-20T01:34:42.885943Z", "url": "https://files.pythonhosted.org/packages/37/18/eceb8c2754ef4cce123d02d2c5ebf326aac844a48bdf70d00a91d68b1824/aiofluent-1.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e7ce5b7f7592b82e251e27cc2ac58ed", "sha256": "083788548f13d22e5840bcd3288eb09a0632f8a9113228867dec06572f617a53"}, "downloads": -1, "filename": "aiofluent-1.2.5.tar.gz", "has_sig": false, "md5_digest": "4e7ce5b7f7592b82e251e27cc2ac58ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12352, "upload_time": "2019-12-20T01:34:44", "upload_time_iso_8601": "2019-12-20T01:34:44.712842Z", "url": "https://files.pythonhosted.org/packages/13/c1/631263373ecd25be26f23e08ccc35d61302e824cfcbb73f8279f005b4cf8/aiofluent-1.2.5.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "2154414f8c9005cedb2ed52be97f38f8", "sha256": "ba0845dae51249be28e3cab987cfe82c926c6e715a812631c9072ffd942957c4"}, "downloads": -1, "filename": "aiofluent-1.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2154414f8c9005cedb2ed52be97f38f8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9166, "upload_time": "2020-01-06T15:20:45", "upload_time_iso_8601": "2020-01-06T15:20:45.991069Z", "url": "https://files.pythonhosted.org/packages/43/da/46c7d39381dae6707f3501ff31a229675a9dddaaa52a34f29ddf89067b9f/aiofluent-1.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b2a543a9e0f912b669bf4a1b56e6ec9", "sha256": "b763a4c61787b4c739adb13ff8ce1f35b0b3cb54db38f55241920d984afb423b"}, "downloads": -1, "filename": "aiofluent-1.2.6.tar.gz", "has_sig": false, "md5_digest": "5b2a543a9e0f912b669bf4a1b56e6ec9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12490, "upload_time": "2020-01-06T15:20:47", "upload_time_iso_8601": "2020-01-06T15:20:47.529562Z", "url": "https://files.pythonhosted.org/packages/5d/94/382a24ce494dc5811557ca971b23f5cf4de25022b3b51daef95c8ef4a635/aiofluent-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "c8c36e386ab61a2e4631ef1ed95dca23", "sha256": "ad20889d40baca2012bac5b672a65cc653482f623b12391a1e8c5012d09c4167"}, "downloads": -1, "filename": "aiofluent-1.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8c36e386ab61a2e4631ef1ed95dca23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9186, "upload_time": "2020-03-09T12:38:18", "upload_time_iso_8601": "2020-03-09T12:38:18.639824Z", "url": "https://files.pythonhosted.org/packages/67/67/218785e2f608b0d191dd984a6138777f8b89676fa8cd748750a9212608dc/aiofluent-1.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43af92990d6fbee9feb2c8b6a9e60dfe", "sha256": "b4484f47882327792663802409775ad82cbe041843c8c79d09df9e340275279e"}, "downloads": -1, "filename": "aiofluent-1.2.7.tar.gz", "has_sig": false, "md5_digest": "43af92990d6fbee9feb2c8b6a9e60dfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12555, "upload_time": "2020-03-09T12:38:20", "upload_time_iso_8601": "2020-03-09T12:38:20.132909Z", "url": "https://files.pythonhosted.org/packages/8c/27/061aace82d84e21dcd9f4343d6ead47aeadfefe6a9932c83ba97044e1c88/aiofluent-1.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8c36e386ab61a2e4631ef1ed95dca23", "sha256": "ad20889d40baca2012bac5b672a65cc653482f623b12391a1e8c5012d09c4167"}, "downloads": -1, "filename": "aiofluent-1.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c8c36e386ab61a2e4631ef1ed95dca23", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9186, "upload_time": "2020-03-09T12:38:18", "upload_time_iso_8601": "2020-03-09T12:38:18.639824Z", "url": "https://files.pythonhosted.org/packages/67/67/218785e2f608b0d191dd984a6138777f8b89676fa8cd748750a9212608dc/aiofluent-1.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "43af92990d6fbee9feb2c8b6a9e60dfe", "sha256": "b4484f47882327792663802409775ad82cbe041843c8c79d09df9e340275279e"}, "downloads": -1, "filename": "aiofluent-1.2.7.tar.gz", "has_sig": false, "md5_digest": "43af92990d6fbee9feb2c8b6a9e60dfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12555, "upload_time": "2020-03-09T12:38:20", "upload_time_iso_8601": "2020-03-09T12:38:20.132909Z", "url": "https://files.pythonhosted.org/packages/8c/27/061aace82d84e21dcd9f4343d6ead47aeadfefe6a9932c83ba97044e1c88/aiofluent-1.2.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:35 2020"}