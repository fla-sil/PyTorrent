{"info": {"author": "Marko Loparic, Francesc Alted", "author_email": "marko.loparic@gmail.com, faltet@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta"], "description": "Pyorcy has 2 purposes:\r\n\r\n* Allow the mix of python and cython code in a single file. This can also be done with cython's \"pure python\" mode, but with import limitations. pyorcy gives you the full cython super-powers.\r\n\r\n* Launch an automatic compilation, triggered by a function decorator. This mechanism is similar to what numba offers.\r\n\r\nSo basically, you can develop and debug using the python mode.  When you are happy with your function, then you just annotate the variables and add the decorator for automatic Cython code generation and compilation.  Simple.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/markolopa/pyorcy", "keywords": "cython JIT", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyorcy", "package_url": "https://pypi.org/project/pyorcy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyorcy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/markolopa/pyorcy"}, "release_url": "https://pypi.org/project/pyorcy/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Mix Python and Cython code in the same module.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pyorcy has 2 purposes:</p>\n<ul>\n<li>Allow the mix of python and cython code in a single file. This can also be done with cython\u2019s \u201cpure python\u201d mode, but with import limitations. pyorcy gives you the full cython super-powers.</li>\n<li>Launch an automatic compilation, triggered by a function decorator. This mechanism is similar to what numba offers.</li>\n</ul>\n<p>So basically, you can develop and debug using the python mode.  When you are happy with your function, then you just annotate the variables and add the decorator for automatic Cython code generation and compilation.  Simple.</p>\n\n          </div>"}, "last_serial": 2148822, "releases": {"0.1.1": [], "0.1.2": [{"comment_text": "", "digests": {"md5": "03d5e723d090d52736cb634653af4bfe", "sha256": "4a83b700d34a7ee0c0a84568cfdb264d374c7fcfca628a573d7cbd8c46bb2e9a"}, "downloads": -1, "filename": "pyorcy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03d5e723d090d52736cb634653af4bfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9076, "upload_time": "2016-06-03T10:30:15", "upload_time_iso_8601": "2016-06-03T10:30:15.011753Z", "url": "https://files.pythonhosted.org/packages/06/89/866d34787c69779e10e1d8b0a58ed950f2176adc3b06981c1d37de81a55c/pyorcy-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "03d5e723d090d52736cb634653af4bfe", "sha256": "4a83b700d34a7ee0c0a84568cfdb264d374c7fcfca628a573d7cbd8c46bb2e9a"}, "downloads": -1, "filename": "pyorcy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "03d5e723d090d52736cb634653af4bfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9076, "upload_time": "2016-06-03T10:30:15", "upload_time_iso_8601": "2016-06-03T10:30:15.011753Z", "url": "https://files.pythonhosted.org/packages/06/89/866d34787c69779e10e1d8b0a58ed950f2176adc3b06981c1d37de81a55c/pyorcy-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:06 2020"}