{"info": {"author": "Jonathan Johnson", "author_email": "me@jondavidjohn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "A simple python module that is meant to simulate the action of shuffling a python List as if it were a deck of cards.\n\n=====\nTypes\n=====\n\nRiffle\n------\nhttp://en.wikipedia.org/wiki/Shuffling#Riffle\n\nPredictable behaviours that make a human riffle shuffle imperfect\n\nOnce a deck of cards is divided to each hand, the amount of cards in each hand is not (likely) equal.\nAs each thumb releases from it's half of the deck, sometimes more than one card drops from a single hand at a time.\nAs the deck in each hand gets more and more thin, the probability of larger chucks of cards dropping from each hand increases.::\n\n    shuffle.riffle(List original[, int shuffles])\n\nOverhand\n--------\nhttp://en.wikipedia.org/wiki/Shuffling#Stripping_or_overhand\n\nPredictable behaviours that make a human overhand shuffle imperfect\n\nRandom amounts of cards (chunks) are taken from the top and placed placed in the opposite hand in reverse order (retaining the order within each chunk)::\n\n    shuffle.overhand(List original[, int shuffles])\n\nMongean\n-------\nhttp://en.wikipedia.org/wiki/Shuffling#Mongean_shuffle\n\nA very predictable shuffle, alternating placing the top card on the bottom/top of the new deck.::\n\n    shuffle.mongean(List original[, int shuffles])\n\nPile\n----\nhttp://en.wikipedia.org/wiki/Shuffling#Pile_shuffle\n\nPredictable shuffle, dealing items into N piles and then rejoining the piles.::\n\n    shuffle.pile(List original, int piles[, int shuffles])\n\n============\nInstallation\n============\n\n::\n\n    pip install shuffle\n\n**Or**\n\n::\n\n    git clone git://github.com/jondavidjohn/Card-Shuffle-for-Python.git shuffle\n    cd ./shuffle\n    sudo python setup.py install\n\n**Linux Users** - Make sure you have the python-dev package installed.\n\n\n=====\nUsage\n=====\n\n::\n\n    import shuffle\n    riffled_list = shuffle.riffle(original_list, 3)  # riffles the list 3 times\n    overhanded_list = shuffle.overhand(original_list, 2)  #overhand's the list 2 times\n    mongeaned_list = shuffle.mongean(original_list, 5)  #mongean shuffle 5 times\n    piled_list = shuffle.pile(original_list, 3, 6)  #pile shuffle, using 3 piles, 6 times", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/jondavidjohn/Card-Shuffle-for-Python/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jondavidjohn/Card-Shuffle-for-Python", "keywords": "card,shuffle,list,random", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "shuffle", "package_url": "https://pypi.org/project/shuffle/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/shuffle/", "project_urls": {"Download": "https://github.com/jondavidjohn/Card-Shuffle-for-Python/tarball/master", "Homepage": "https://github.com/jondavidjohn/Card-Shuffle-for-Python"}, "release_url": "https://pypi.org/project/shuffle/0.9/", "requires_dist": null, "requires_python": null, "summary": "Simulate Human Card Shuffling Techniques for use with Python Lists", "version": "0.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple python module that is meant to simulate the action of shuffling a python List as if it were a deck of cards.</p>\n<div id=\"types\">\n<h2>Types</h2>\n<div id=\"riffle\">\n<h3>Riffle</h3>\n<p><a href=\"http://en.wikipedia.org/wiki/Shuffling#Riffle\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Shuffling#Riffle</a></p>\n<p>Predictable behaviours that make a human riffle shuffle imperfect</p>\n<p>Once a deck of cards is divided to each hand, the amount of cards in each hand is not (likely) equal.\nAs each thumb releases from it\u2019s half of the deck, sometimes more than one card drops from a single hand at a time.\nAs the deck in each hand gets more and more thin, the probability of larger chucks of cards dropping from each hand increases.:</p>\n<pre>shuffle.riffle(List original[, int shuffles])\n</pre>\n</div>\n<div id=\"overhand\">\n<h3>Overhand</h3>\n<p><a href=\"http://en.wikipedia.org/wiki/Shuffling#Stripping_or_overhand\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Shuffling#Stripping_or_overhand</a></p>\n<p>Predictable behaviours that make a human overhand shuffle imperfect</p>\n<p>Random amounts of cards (chunks) are taken from the top and placed placed in the opposite hand in reverse order (retaining the order within each chunk):</p>\n<pre>shuffle.overhand(List original[, int shuffles])\n</pre>\n</div>\n<div id=\"mongean\">\n<h3>Mongean</h3>\n<p><a href=\"http://en.wikipedia.org/wiki/Shuffling#Mongean_shuffle\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Shuffling#Mongean_shuffle</a></p>\n<p>A very predictable shuffle, alternating placing the top card on the bottom/top of the new deck.:</p>\n<pre>shuffle.mongean(List original[, int shuffles])\n</pre>\n</div>\n<div id=\"pile\">\n<h3>Pile</h3>\n<p><a href=\"http://en.wikipedia.org/wiki/Shuffling#Pile_shuffle\" rel=\"nofollow\">http://en.wikipedia.org/wiki/Shuffling#Pile_shuffle</a></p>\n<p>Predictable shuffle, dealing items into N piles and then rejoining the piles.:</p>\n<pre>shuffle.pile(List original, int piles[, int shuffles])\n</pre>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install shuffle\n</pre>\n<p><strong>Or</strong></p>\n<pre>git clone git://github.com/jondavidjohn/Card-Shuffle-for-Python.git shuffle\ncd ./shuffle\nsudo python setup.py install\n</pre>\n<p><strong>Linux Users</strong> - Make sure you have the python-dev package installed.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>import shuffle\nriffled_list = shuffle.riffle(original_list, 3)  # riffles the list 3 times\noverhanded_list = shuffle.overhand(original_list, 2)  #overhand's the list 2 times\nmongeaned_list = shuffle.mongean(original_list, 5)  #mongean shuffle 5 times\npiled_list = shuffle.pile(original_list, 3, 6)  #pile shuffle, using 3 piles, 6 times\n</pre>\n</div>\n\n          </div>"}, "last_serial": 799516, "releases": {"0.9": [{"comment_text": "", "digests": {"md5": "bfc8ed18c4d65abf3c241fe1292b19b0", "sha256": "df599946faa144baf84e141dbf99da75421617fdf1f82d60374a1f3d01b273b6"}, "downloads": -1, "filename": "shuffle-0.9.tar.gz", "has_sig": false, "md5_digest": "bfc8ed18c4d65abf3c241fe1292b19b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4668, "upload_time": "2012-01-26T03:17:51", "upload_time_iso_8601": "2012-01-26T03:17:51.990084Z", "url": "https://files.pythonhosted.org/packages/cd/84/c643f957e2ec26a784b931c2cf9896c1a2b0093dffc29d701cb2062581e5/shuffle-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bfc8ed18c4d65abf3c241fe1292b19b0", "sha256": "df599946faa144baf84e141dbf99da75421617fdf1f82d60374a1f3d01b273b6"}, "downloads": -1, "filename": "shuffle-0.9.tar.gz", "has_sig": false, "md5_digest": "bfc8ed18c4d65abf3c241fe1292b19b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4668, "upload_time": "2012-01-26T03:17:51", "upload_time_iso_8601": "2012-01-26T03:17:51.990084Z", "url": "https://files.pythonhosted.org/packages/cd/84/c643f957e2ec26a784b931c2cf9896c1a2b0093dffc29d701cb2062581e5/shuffle-0.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:27 2020"}