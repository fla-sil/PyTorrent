{"info": {"author": "Nils Diefenbach", "author_email": "nlsdfnbch.foos@kolabnow.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython"], "description": "RED-Metrics-Tracker\n===================\nSimple RED Metrics tracker able to instrument flask views using prometheus metrics.\n\n\nInstall\n=======\n\nWith `pip`, of course::\n\n    pip install red-metrics-tracker\n\n\nInstrumenting\n=============\n\nTracking all methods and exceptions for all requests on a view::\n\n    app = flask.Flask(__name__)\n\n    @app.route(\"/endpoint\")\n    @FlaskRedMetricsTracker.track()\n    def do_things():\n         ...\n         return \"OK\"\n\nLimiting metrics tracking to specific methods::\n\n    @app.route(\"/endpoint\", methods=[\"POST\", \"GET\", \"PUT\", \"DELETE\"])\n    @FlaskRedMetricsTracker.track(methods=[\"POST\", \"DELETE\"])\n    def do_things():\n         ...\n         return \"OK\"\n\nLimiting to specific exceptions::\n\n    @app.route(\"/endpoint/<condition>\")\n    @FlaskRedMetricsTracker.track(exceptions=MySpecialException)\n    def do_things():\n         ...\n         if condition == \"throw\":\n            raise MySpecialException\n         return \"OK\"\n\nFilters may be combined, of course::\n\n    @app.route(\"/endpoint/<condition>\", methods=[\"POST\", \"GET\", \"DELETE\"])\n    @FlaskRedMetricsTracker.track(methods=[\"GET\", \"POST\"]exceptions=MySpecialException)\n    def do_things():\n         ...\n         if condition == \"throw\":\n            raise MySpecialException\n         return \"OK\"\n\n\nExposition\n==========\n\nFeel free to use `prometheus_client` to run an http_server serving a `/metrics` endpoint at its\nconfigured port.\n\nFor the people who'd like the `/metrics` endpoint to be part of their flask app, there's a blueprint\nfor that::\n\n    import flask\n    from red import metrics_blueprint\n\n    app = flask.Flask(__name__)\n    app.register_blueprint(metrics_blueprint)\n\nMetrics are now available at you app's url under the `/metrics` endpoint.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nlsdfnbch/RED-Metrics-Tracker", "keywords": "red-metrics, prometheus, instrumentation, metrics", "license": "", "maintainer": "", "maintainer_email": "", "name": "RED-Metrics-Tracker", "package_url": "https://pypi.org/project/RED-Metrics-Tracker/", "platform": "", "project_url": "https://pypi.org/project/RED-Metrics-Tracker/", "project_urls": {"Bug Tracker": "https://github.com/nlsdfnbch/RED-Metrics-Tracker/issues", "GitHub": "https://github.com/nlsdfnbch/RED-Metrics-Tracker", "Homepage": "https://github.com/nlsdfnbch/RED-Metrics-Tracker"}, "release_url": "https://pypi.org/project/RED-Metrics-Tracker/0.1.1/", "requires_dist": ["prometheus_client", "flask", "black==19.3b0; extra == \"dev\"", "flake8-bugbear==18.8.0; extra == \"dev\"", "flake8-tuple==0.2.13; extra == \"dev\"", "flake8==3.7.5; extra == \"dev\"", "isort==4.3.16; extra == \"dev\"", "pytest==4.5.0; extra == \"dev\"", "pytest; extra == \"test\""], "requires_python": ">3.6", "summary": "RED Metrics tracker able to instrument flask views using prometheus metrics.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"red-metrics-tracker\">\n<h2>RED-Metrics-Tracker</h2>\n<p>Simple RED Metrics tracker able to instrument flask views using prometheus metrics.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>With <cite>pip</cite>, of course:</p>\n<pre>pip install red-metrics-tracker\n</pre>\n</div>\n<div id=\"instrumenting\">\n<h2>Instrumenting</h2>\n<p>Tracking all methods and exceptions for all requests on a view:</p>\n<pre>app = flask.Flask(__name__)\n\n@app.route(\"/endpoint\")\n@FlaskRedMetricsTracker.track()\ndef do_things():\n     ...\n     return \"OK\"\n</pre>\n<p>Limiting metrics tracking to specific methods:</p>\n<pre>@app.route(\"/endpoint\", methods=[\"POST\", \"GET\", \"PUT\", \"DELETE\"])\n@FlaskRedMetricsTracker.track(methods=[\"POST\", \"DELETE\"])\ndef do_things():\n     ...\n     return \"OK\"\n</pre>\n<p>Limiting to specific exceptions:</p>\n<pre>@app.route(\"/endpoint/&lt;condition&gt;\")\n@FlaskRedMetricsTracker.track(exceptions=MySpecialException)\ndef do_things():\n     ...\n     if condition == \"throw\":\n        raise MySpecialException\n     return \"OK\"\n</pre>\n<p>Filters may be combined, of course:</p>\n<pre>@app.route(\"/endpoint/&lt;condition&gt;\", methods=[\"POST\", \"GET\", \"DELETE\"])\n@FlaskRedMetricsTracker.track(methods=[\"GET\", \"POST\"]exceptions=MySpecialException)\ndef do_things():\n     ...\n     if condition == \"throw\":\n        raise MySpecialException\n     return \"OK\"\n</pre>\n</div>\n<div id=\"exposition\">\n<h2>Exposition</h2>\n<p>Feel free to use <cite>prometheus_client</cite> to run an http_server serving a <cite>/metrics</cite> endpoint at its\nconfigured port.</p>\n<p>For the people who\u2019d like the <cite>/metrics</cite> endpoint to be part of their flask app, there\u2019s a blueprint\nfor that:</p>\n<pre>import flask\nfrom red import metrics_blueprint\n\napp = flask.Flask(__name__)\napp.register_blueprint(metrics_blueprint)\n</pre>\n<p>Metrics are now available at you app\u2019s url under the <cite>/metrics</cite> endpoint.</p>\n</div>\n\n          </div>"}, "last_serial": 5607721, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "6cbee7a9af04e4c3e8b3ee55b621fa2d", "sha256": "5871fec127dd71d8a0f463b60e8d4e1ee64bbf8f9d2791cf2430ef9de2f9826e"}, "downloads": -1, "filename": "RED_Metrics_Tracker-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6cbee7a9af04e4c3e8b3ee55b621fa2d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6", "size": 13179, "upload_time": "2019-07-22T21:27:57", "upload_time_iso_8601": "2019-07-22T21:27:57.067443Z", "url": "https://files.pythonhosted.org/packages/25/ef/5e72abcbd776ae8415f23300d0bdde4a8c1f0767e63dcfe58ff9685efdbe/RED_Metrics_Tracker-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "260a488927e5295076a73c6c6dc2b891", "sha256": "04e5563d32ed8c04e2d361b659959f4938d5bdace950364b3361c3faec75c57e"}, "downloads": -1, "filename": "RED-Metrics-Tracker-0.1.0.tar.gz", "has_sig": false, "md5_digest": "260a488927e5295076a73c6c6dc2b891", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6", "size": 6843, "upload_time": "2019-07-22T21:28:33", "upload_time_iso_8601": "2019-07-22T21:28:33.520236Z", "url": "https://files.pythonhosted.org/packages/85/79/552b36f1c3c8a4b21225e0454949c4e569f7f0b03b0f3132507bf251ce57/RED-Metrics-Tracker-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "be719003ddefe48efa5672cfd6c57002", "sha256": "5c2c2053885f925bb85cce761aacdb5faf3a4e235871c425cf4404ec256ed063"}, "downloads": -1, "filename": "RED_Metrics_Tracker-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "be719003ddefe48efa5672cfd6c57002", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6", "size": 13187, "upload_time": "2019-07-30T13:21:03", "upload_time_iso_8601": "2019-07-30T13:21:03.968932Z", "url": "https://files.pythonhosted.org/packages/52/b8/c9da6299de5f2f492c459d01896dc319d3baec0a52fe9d9e79948caaeaf3/RED_Metrics_Tracker-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b482bdde0469962fc367d8061c48c1d", "sha256": "faf64bb7099770c6da811a74b2d9f7aa60590cfa2085bffa53c2b3632861e68c"}, "downloads": -1, "filename": "RED-Metrics-Tracker-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7b482bdde0469962fc367d8061c48c1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6", "size": 6838, "upload_time": "2019-07-30T13:23:49", "upload_time_iso_8601": "2019-07-30T13:23:49.452409Z", "url": "https://files.pythonhosted.org/packages/e5/d9/b59b72ded63b310ddea758a5e4e3d051bfa1f4434320dd73ccbb5342f980/RED-Metrics-Tracker-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be719003ddefe48efa5672cfd6c57002", "sha256": "5c2c2053885f925bb85cce761aacdb5faf3a4e235871c425cf4404ec256ed063"}, "downloads": -1, "filename": "RED_Metrics_Tracker-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "be719003ddefe48efa5672cfd6c57002", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.6", "size": 13187, "upload_time": "2019-07-30T13:21:03", "upload_time_iso_8601": "2019-07-30T13:21:03.968932Z", "url": "https://files.pythonhosted.org/packages/52/b8/c9da6299de5f2f492c459d01896dc319d3baec0a52fe9d9e79948caaeaf3/RED_Metrics_Tracker-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b482bdde0469962fc367d8061c48c1d", "sha256": "faf64bb7099770c6da811a74b2d9f7aa60590cfa2085bffa53c2b3632861e68c"}, "downloads": -1, "filename": "RED-Metrics-Tracker-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7b482bdde0469962fc367d8061c48c1d", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6", "size": 6838, "upload_time": "2019-07-30T13:23:49", "upload_time_iso_8601": "2019-07-30T13:23:49.452409Z", "url": "https://files.pythonhosted.org/packages/e5/d9/b59b72ded63b310ddea758a5e4e3d051bfa1f4434320dd73ccbb5342f980/RED-Metrics-Tracker-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:42 2020"}