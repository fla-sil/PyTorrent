{"info": {"author": "Cloudpipe", "author_email": "cloudpipe@googlegroups.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Distributed Computing"], "description": "========\nMultyvac\n========\n\nMultyvac gives Python developers a simple interface for offloading\ncomputational workloads to the cloud.\n\nGetting Started\n===============\n\nYou need to set an Api Key for your machine. To do this, run the following from your shell:\n\n.. code-block:: bash\n\n   $ python -m multyvac.setup\n   \nFollow the on screen instructions to complete the setup process.\n\nVerify Installation\n---------------------\n\nOpen up Python, and import multyvac:\n\n.. code-block:: python\n\n   >>> import multyvac\n\nIf you get an ImportError, something went wrong. Try running the setup again.\n\nRunning a Job\n=============\n\nThe idea is to take a function that you would normally run on your own machine, but instead run it on Multyvac. Here's an example of how you would offload a function for adding two numbers:\n\n.. code-block:: python\n\n   >>> def add(x, y):\n   ...     return x + y\n   >>> # run add on your machine\n   >>> add(1, 2)\n   3\n   >>> # submit add to Multyvac\n   >>> job_id = multyvac.submit(add, 1, 2)\n   >>> # get job object\n   >>> job = multyvac.get(job_id)\n   >>> # wait for job to finish processing\n   >>> job.wait()\n   >>> # verify the result is the same\n   >>> job.result\n   3", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cloudpipe/multyvac-fork", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "vac", "package_url": "https://pypi.org/project/vac/", "platform": "CPython 2.6,CPython 2.7", "project_url": "https://pypi.org/project/vac/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/cloudpipe/multyvac-fork"}, "release_url": "https://pypi.org/project/vac/0.6.0/", "requires_dist": null, "requires_python": null, "summary": "Multyvac fork for Python", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Multyvac gives Python developers a simple interface for offloading\ncomputational workloads to the cloud.</p>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>You need to set an Api Key for your machine. To do this, run the following from your shell:</p>\n<pre>$ python -m multyvac.setup\n</pre>\n<p>Follow the on screen instructions to complete the setup process.</p>\n<div id=\"verify-installation\">\n<h3>Verify Installation</h3>\n<p>Open up Python, and import multyvac:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">multyvac</span>\n</pre>\n<p>If you get an ImportError, something went wrong. Try running the setup again.</p>\n</div>\n</div>\n<div id=\"running-a-job\">\n<h2>Running a Job</h2>\n<p>The idea is to take a function that you would normally run on your own machine, but instead run it on Multyvac. Here\u2019s an example of how you would offload a function for adding two numbers:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># run add on your machine</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">add</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># submit add to Multyvac</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">job_id</span> <span class=\"o\">=</span> <span class=\"n\">multyvac</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span><span class=\"n\">add</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># get job object</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">multyvac</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">job_id</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># wait for job to finish processing</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">wait</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># verify the result is the same</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">job</span><span class=\"o\">.</span><span class=\"n\">result</span>\n<span class=\"mi\">3</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1497665, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "b58c6d035bee52dfe2dd16e5561774ba", "sha256": "41d5292a4b91b286e8afd55011b648b3db941760d08187cb1656cd3e3833aa72"}, "downloads": -1, "filename": "vac-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b58c6d035bee52dfe2dd16e5561774ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40434, "upload_time": "2015-04-09T15:36:55", "upload_time_iso_8601": "2015-04-09T15:36:55.996383Z", "url": "https://files.pythonhosted.org/packages/56/48/0f83aa77662ae6dc4b7b155d4056a23b0480fc8bc9265651a88a04d7186f/vac-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b58c6d035bee52dfe2dd16e5561774ba", "sha256": "41d5292a4b91b286e8afd55011b648b3db941760d08187cb1656cd3e3833aa72"}, "downloads": -1, "filename": "vac-0.6.0.tar.gz", "has_sig": false, "md5_digest": "b58c6d035bee52dfe2dd16e5561774ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40434, "upload_time": "2015-04-09T15:36:55", "upload_time_iso_8601": "2015-04-09T15:36:55.996383Z", "url": "https://files.pythonhosted.org/packages/56/48/0f83aa77662ae6dc4b7b155d4056a23b0480fc8bc9265651a88a04d7186f/vac-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:38:21 2020"}