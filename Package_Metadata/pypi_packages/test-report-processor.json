{"info": {"author": "Rein van der Vegt", "author_email": "reinier.vandervegt@kpn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "=====================\nTest report processor\n=====================\n.. image:: https://secure.travis-ci.org/kpn-digital/test_report_processor.svg?branch=master\n    :target:  http://travis-ci.org/kpn-digital/test_report_processor?branch=master\n\n.. image:: https://img.shields.io/codecov/c/github/kpn-digital/test_report_processor/master.svg\n    :target: http://codecov.io/github/kpn-digital/test_report_processor?branch=master\n\n.. image:: https://img.shields.io/pypi/v/test_report_processor.svg\n    :target: https://pypi.python.org/pypi/test_report_processor\n\n.. image:: https://readthedocs.org/projects/test_report_processor/badge/?version=latest\n    :target: http://test_report_processor.readthedocs.org/en/latest/?badge=latest\n\nThis repository is a JSON parser for test reports. It imports a test report generated by pytest (cucumber JSON file). Then is parses the cucumber JSON to any desired JSON report.\n\nWhen output to Paessler is selected, the new JSON is send to a paessler sensor through a GET request.\nThe Paessler sensor's are displayed on a Paessler dashboard for DevOps purposes.\n\nRequirements\n------------\n- json\n- request\n\n\nUsage\n-----\nWhen using the test report parser, the required input is a test report JSON file. The output can be any of the mentioned outputs.\n\n**Input**\n- Cucumber test report (JSON file)\n\n**Output**\n- Paessler JSON\n\n\nImporting the package\n---------------------\n\nImport the package by including the following code::\n    ``from test_report_processor.test_report_processor import ReportParser``\n\n\nStarting a new parser\n---------------------\nStart the parser by creating a new ReportParser class:\n\n    ``report_parser = ReportParser(\"/path/cucumber.json\", \"paessler\", \"duration\")``\n\n\n\nInput parameters for ReportParser class\n---------------------------------------\n\nCreating a new ReportParser class requires 3 parameters:\n\n1. Location of the \"cucumber.json\" file (string)\n2. Desired parser output (string), options:\n    - \"paessler\" for paessler dashboard\n3. Sensor type (string), options:\n    - \"duration\" - test durations of scenario's and steps in milliseconds\n    - \"status\" - test status of scenario's and steps in \"pass\" or \"fail\"\n\n\nDebugging\n---------\nAfter creating a ReportParser class, you can view the parsed json with this variable:\n\n    ``report_parser.paessler_json``\n\n\nA URL will also be generated which points to the Paessler sensor id where the result will be displayed. View the Paessler URL with this variable:\n\n    ``report_parser.paessler_url``", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://git.kpn.org/projects/DE/repos/test-report-processor", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "test-report-processor", "package_url": "https://pypi.org/project/test-report-processor/", "platform": "", "project_url": "https://pypi.org/project/test-report-processor/", "project_urls": {"Homepage": "https://git.kpn.org/projects/DE/repos/test-report-processor"}, "release_url": "https://pypi.org/project/test-report-processor/0.10.11/", "requires_dist": null, "requires_python": "", "summary": "This package parses a cucumber JSON to a report friendly JSON", "version": "0.10.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/kpn-digital/test_report_processor?branch=master\" rel=\"nofollow\"><img alt=\"https://secure.travis-ci.org/kpn-digital/test_report_processor.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86777956f97e8c6d3bd649515f3ee0732f35648e/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f6b706e2d6469676974616c2f746573745f7265706f72745f70726f636573736f722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://codecov.io/github/kpn-digital/test_report_processor?branch=master\" rel=\"nofollow\"><img alt=\"https://img.shields.io/codecov/c/github/kpn-digital/test_report_processor/master.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1832b27e545e2d7b659f0fd78b6db9934dfdd2f3/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6b706e2d6469676974616c2f746573745f7265706f72745f70726f636573736f722f6d61737465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/test_report_processor\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/test_report_processor.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/950f921bd1a4a41793ff81ddabadc4b923c0a500/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f746573745f7265706f72745f70726f636573736f722e737667\"></a>\n<a href=\"http://test_report_processor.readthedocs.org/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/test_report_processor/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/254e71692e2642d7d231b4847b461c1ad30fb8c7/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f746573745f7265706f72745f70726f636573736f722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<p>This repository is a JSON parser for test reports. It imports a test report generated by pytest (cucumber JSON file). Then is parses the cucumber JSON to any desired JSON report.</p>\n<p>When output to Paessler is selected, the new JSON is send to a paessler sensor through a GET request.\nThe Paessler sensor\u2019s are displayed on a Paessler dashboard for DevOps purposes.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>json</li>\n<li>request</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>When using the test report parser, the required input is a test report JSON file. The output can be any of the mentioned outputs.</p>\n<p><strong>Input</strong>\n- Cucumber test report (JSON file)</p>\n<p><strong>Output</strong>\n- Paessler JSON</p>\n</div>\n<div id=\"importing-the-package\">\n<h2>Importing the package</h2>\n<dl>\n<dt>Import the package by including the following code::</dt>\n<dd><tt>from test_report_processor.test_report_processor import ReportParser</tt></dd>\n</dl>\n</div>\n<div id=\"starting-a-new-parser\">\n<h2>Starting a new parser</h2>\n<p>Start the parser by creating a new ReportParser class:</p>\n<blockquote>\n<tt>report_parser = <span class=\"pre\">ReportParser(\"/path/cucumber.json\",</span> \"paessler\", \"duration\")</tt></blockquote>\n</div>\n<div id=\"input-parameters-for-reportparser-class\">\n<h2>Input parameters for ReportParser class</h2>\n<p>Creating a new ReportParser class requires 3 parameters:</p>\n<ol>\n<li>Location of the \u201ccucumber.json\u201d file (string)</li>\n<li><dl>\n<dt>Desired parser output (string), options:</dt>\n<dd><ul>\n<li>\u201cpaessler\u201d for paessler dashboard</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li><dl>\n<dt>Sensor type (string), options:</dt>\n<dd><ul>\n<li>\u201cduration\u201d - test durations of scenario\u2019s and steps in milliseconds</li>\n<li>\u201cstatus\u201d - test status of scenario\u2019s and steps in \u201cpass\u201d or \u201cfail\u201d</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ol>\n</div>\n<div id=\"debugging\">\n<h2>Debugging</h2>\n<p>After creating a ReportParser class, you can view the parsed json with this variable:</p>\n<blockquote>\n<tt>report_parser.paessler_json</tt></blockquote>\n<p>A URL will also be generated which points to the Paessler sensor id where the result will be displayed. View the Paessler URL with this variable:</p>\n<blockquote>\n<tt>report_parser.paessler_url</tt></blockquote>\n</div>\n\n          </div>"}, "last_serial": 5425849, "releases": {"0.10.10": [{"comment_text": "", "digests": {"md5": "53167a138053c45b0b45fb297123df46", "sha256": "6ebc7d36a07e366330c8d759a1fc4c831e5bfd7b1f3e8cf4fab97ed6287ad292"}, "downloads": -1, "filename": "test-report-processor-0.10.10.tar.gz", "has_sig": false, "md5_digest": "53167a138053c45b0b45fb297123df46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14096, "upload_time": "2019-06-20T07:45:17", "upload_time_iso_8601": "2019-06-20T07:45:17.739544Z", "url": "https://files.pythonhosted.org/packages/c2/b5/bdb3ee209c7365f70defbcac0b9c53f8400fc08574815c724995b3efcab5/test-report-processor-0.10.10.tar.gz", "yanked": false}], "0.10.11": [{"comment_text": "", "digests": {"md5": "c07702276f85c07d0b4a0166ed047255", "sha256": "f896c043905c7e7d217f3778d2c6156a88b2384c01dae1c92db25c8287114f3d"}, "downloads": -1, "filename": "test-report-processor-0.10.11.tar.gz", "has_sig": false, "md5_digest": "c07702276f85c07d0b4a0166ed047255", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14098, "upload_time": "2019-06-20T13:04:47", "upload_time_iso_8601": "2019-06-20T13:04:47.203876Z", "url": "https://files.pythonhosted.org/packages/8b/51/55dedaa9a490cfe7175259b70cc10511417dc62f62502d07d562f99cb8cf/test-report-processor-0.10.11.tar.gz", "yanked": false}], "0.10.8": [{"comment_text": "", "digests": {"md5": "46eab8dd1ae33fac835903ac7c72b210", "sha256": "5afe5f213b96d3903067dd604ad2705ef05b47647e38df4c4216df5b489f1dcc"}, "downloads": -1, "filename": "test-report-processor-0.10.8.tar.gz", "has_sig": false, "md5_digest": "46eab8dd1ae33fac835903ac7c72b210", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14126, "upload_time": "2019-06-18T14:34:26", "upload_time_iso_8601": "2019-06-18T14:34:26.929593Z", "url": "https://files.pythonhosted.org/packages/f9/da/168f6db0fcd6f112c0c561efcc814e7a9dabe710ce60ef088d6a1e89fdc9/test-report-processor-0.10.8.tar.gz", "yanked": false}], "0.10.9": [{"comment_text": "", "digests": {"md5": "3ff36a2a986b947f3532696e30f02bc4", "sha256": "752222e4bcd9a1bba670b379a83d7d343617309a3c72670c3e56124907ee354e"}, "downloads": -1, "filename": "test-report-processor-0.10.9.tar.gz", "has_sig": false, "md5_digest": "3ff36a2a986b947f3532696e30f02bc4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14102, "upload_time": "2019-06-19T09:54:00", "upload_time_iso_8601": "2019-06-19T09:54:00.931832Z", "url": "https://files.pythonhosted.org/packages/a2/e2/82f0fdad3a145feb40e872018be79b8242ecdbadb38702d11ed64e6e474b/test-report-processor-0.10.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c07702276f85c07d0b4a0166ed047255", "sha256": "f896c043905c7e7d217f3778d2c6156a88b2384c01dae1c92db25c8287114f3d"}, "downloads": -1, "filename": "test-report-processor-0.10.11.tar.gz", "has_sig": false, "md5_digest": "c07702276f85c07d0b4a0166ed047255", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14098, "upload_time": "2019-06-20T13:04:47", "upload_time_iso_8601": "2019-06-20T13:04:47.203876Z", "url": "https://files.pythonhosted.org/packages/8b/51/55dedaa9a490cfe7175259b70cc10511417dc62f62502d07d562f99cb8cf/test-report-processor-0.10.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:19 2020"}