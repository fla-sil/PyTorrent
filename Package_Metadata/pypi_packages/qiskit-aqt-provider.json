{"info": {"author": "Qiskit Development Team", "author_email": "qiskit@qiskit.org", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering"], "description": "# Qiskit AQT Provider\n\n[![License](https://img.shields.io/github/license/Qiskit/qiskit-aqt-provider.svg?style=popout-square)](https://opensource.org/licenses/Apache-2.0)[![Build Status](https://img.shields.io/travis/com/Qiskit/qiskit-aqt-provider/master.svg?style=popout-square)](https://travis-ci.com/Qiskit/qiskit-aqt-provider)[![](https://img.shields.io/github/release/Qiskit/qiskit-aqt-provider.svg?style=popout-square)](https://github.com/Qiskit/qiskit-aqt-provider/releases)[![](https://img.shields.io/pypi/dm/qiskit-aqt-provider.svg?style=popout-square)](https://pypi.org/project/qiskit-aqt-provider/)\n\nQiskit is an open-source framework for working with noisy intermediate-scale\nquantum computers (NISQ) at the level of pulses, circuits, and algorithms.\n\nThis project contains a provider that allows access to **[AQT]** ion-trap quantum\ndevices.\n\n## Installation\n\nYou can install the provider using pip tool:\n\n```bash\npip install qiskit-aqt-provider\n```\n\n`pip` will handle installing all the python dependencies automatically and you\nwill always install the  latest (and well-tested) version.\n\n## Setting up the AQT Provider\n\nOnce the package is installed, you can use it to access the provider from\nqiskit.\n\n### Use your AQT credentials\n\nYou can initialize an AQT provider using your token locally with:\n\n```python\nfrom qiskit.providers.aqt import AQT\naqt = AQT.enable_account('MY_TOKEN')\n```\n\nWhere `MY_TOKEN` is your access token for the AQT device. Then you can access\nthe backends from that provider:\n\n```python\nprint(aqt.backends())\nbackend = aqt.get_backend('aqt_qasm_simulator')\n```\n\nYou can then use that backend like you would use any other qiskit backend. For\nexample, running a bell state:\n\n```python\nfrom qiskit import *\nqc = QuantumCircuit(2, 2)\nqc.h(0)\nqc.cx(0, 1)\nqc.measure([0,1], [0,1])\nresult = execute(qc, backend, shots=100).result()\nprint(result.get_counts(qc))\n```\n\nFor running the quantum circuit on the ion-trap quantum device you need to use `aqt_innsbruck` as backend, which needs a different access token.\n\n## Authors and Citation\n\nThe Qiskit AQT provider is the work of many people who contribute to the\nproject at different levels. If you use Qiskit, please cite as per the included\n[BibTeX file].\n\n## License\n\n[Apache License 2.0].\n\n[AQT]: https://www.aqt.eu/\n[BibTeX file]: https://github.com/Qiskit/qiskit/blob/master/Qiskit.bib\n[Apache License 2.0]: https://github.com/Qiskit/qiskit-aqt-provider/blob/master/LICENSE.txt\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Qiskit/qiskit-aqt-provider", "keywords": "qiskit sdk quantum", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "qiskit-aqt-provider", "package_url": "https://pypi.org/project/qiskit-aqt-provider/", "platform": "", "project_url": "https://pypi.org/project/qiskit-aqt-provider/", "project_urls": {"Bug Tracker": "https://github.com/Qiskit/qiskit-aqt-provider/issues", "Homepage": "https://github.com/Qiskit/qiskit-aqt-provider", "Source Code": "https://github.com/Qiskit/qiskit-aqt-provider"}, "release_url": "https://pypi.org/project/qiskit-aqt-provider/0.2.0/", "requires_dist": ["requests (>=2.19)", "setuptools (>=40.1.0)", "qiskit-terra (>=0.10.0)"], "requires_python": ">=3.5", "summary": "Qiskit provider for AQT backends", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Qiskit AQT Provider</h1>\n<p><a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c24f10badb641e85a184f2952860829b6b645199/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f5169736b69742f7169736b69742d6171742d70726f76696465722e7376673f7374796c653d706f706f75742d737175617265\"></a><a href=\"https://travis-ci.com/Qiskit/qiskit-aqt-provider\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d83fa0eba81526624c392e6a8176241398a8f2ff/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f636f6d2f5169736b69742f7169736b69742d6171742d70726f76696465722f6d61737465722e7376673f7374796c653d706f706f75742d737175617265\"></a><a href=\"https://github.com/Qiskit/qiskit-aqt-provider/releases\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83ad66a4a11ea1040296c93aafa1795719a1b684/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f72656c656173652f5169736b69742f7169736b69742d6171742d70726f76696465722e7376673f7374796c653d706f706f75742d737175617265\"></a><a href=\"https://pypi.org/project/qiskit-aqt-provider/\" rel=\"nofollow\"><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8f13b088a5020b747cd4fa1da786fd3d7cb75e9b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7169736b69742d6171742d70726f76696465722e7376673f7374796c653d706f706f75742d737175617265\"></a></p>\n<p>Qiskit is an open-source framework for working with noisy intermediate-scale\nquantum computers (NISQ) at the level of pulses, circuits, and algorithms.</p>\n<p>This project contains a provider that allows access to <strong><a href=\"https://www.aqt.eu/\" rel=\"nofollow\">AQT</a></strong> ion-trap quantum\ndevices.</p>\n<h2>Installation</h2>\n<p>You can install the provider using pip tool:</p>\n<pre>pip install qiskit-aqt-provider\n</pre>\n<p><code>pip</code> will handle installing all the python dependencies automatically and you\nwill always install the  latest (and well-tested) version.</p>\n<h2>Setting up the AQT Provider</h2>\n<p>Once the package is installed, you can use it to access the provider from\nqiskit.</p>\n<h3>Use your AQT credentials</h3>\n<p>You can initialize an AQT provider using your token locally with:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qiskit.providers.aqt</span> <span class=\"kn\">import</span> <span class=\"n\">AQT</span>\n<span class=\"n\">aqt</span> <span class=\"o\">=</span> <span class=\"n\">AQT</span><span class=\"o\">.</span><span class=\"n\">enable_account</span><span class=\"p\">(</span><span class=\"s1\">'MY_TOKEN'</span><span class=\"p\">)</span>\n</pre>\n<p>Where <code>MY_TOKEN</code> is your access token for the AQT device. Then you can access\nthe backends from that provider:</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">aqt</span><span class=\"o\">.</span><span class=\"n\">backends</span><span class=\"p\">())</span>\n<span class=\"n\">backend</span> <span class=\"o\">=</span> <span class=\"n\">aqt</span><span class=\"o\">.</span><span class=\"n\">get_backend</span><span class=\"p\">(</span><span class=\"s1\">'aqt_qasm_simulator'</span><span class=\"p\">)</span>\n</pre>\n<p>You can then use that backend like you would use any other qiskit backend. For\nexample, running a bell state:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">qiskit</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">qc</span> <span class=\"o\">=</span> <span class=\"n\">QuantumCircuit</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">qc</span><span class=\"o\">.</span><span class=\"n\">h</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">qc</span><span class=\"o\">.</span><span class=\"n\">cx</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">qc</span><span class=\"o\">.</span><span class=\"n\">measure</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">qc</span><span class=\"p\">,</span> <span class=\"n\">backend</span><span class=\"p\">,</span> <span class=\"n\">shots</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">get_counts</span><span class=\"p\">(</span><span class=\"n\">qc</span><span class=\"p\">))</span>\n</pre>\n<p>For running the quantum circuit on the ion-trap quantum device you need to use <code>aqt_innsbruck</code> as backend, which needs a different access token.</p>\n<h2>Authors and Citation</h2>\n<p>The Qiskit AQT provider is the work of many people who contribute to the\nproject at different levels. If you use Qiskit, please cite as per the included\n<a href=\"https://github.com/Qiskit/qiskit/blob/master/Qiskit.bib\" rel=\"nofollow\">BibTeX file</a>.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/Qiskit/qiskit-aqt-provider/blob/master/LICENSE.txt\" rel=\"nofollow\">Apache License 2.0</a>.</p>\n\n          </div>"}, "last_serial": 7147134, "releases": {"0.0.1b1": [{"comment_text": "", "digests": {"md5": "276a5f3b5a79706857f70f132d74f71f", "sha256": "e123701376a30170d5a4b4a5a60fbfcf10303165da9c2414fcfebe9fb6e30057"}, "downloads": -1, "filename": "qiskit_aqt_provider-0.0.1b1-py3-none-any.whl", "has_sig": false, "md5_digest": "276a5f3b5a79706857f70f132d74f71f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11849, "upload_time": "2019-09-25T18:41:27", "upload_time_iso_8601": "2019-09-25T18:41:27.942882Z", "url": "https://files.pythonhosted.org/packages/04/a4/a362ddfb48aa9df8cb244a5eef7b34b041bd0e0b7b84963789ed339a093b/qiskit_aqt_provider-0.0.1b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4b152f8ed4c9fe9f4267ba6b9a5236b", "sha256": "a44cd61f068cac6fd6147aa4a296f6216bb30605573816763016cddb65fd4405"}, "downloads": -1, "filename": "qiskit-aqt-provider-0.0.1b1.tar.gz", "has_sig": false, "md5_digest": "d4b152f8ed4c9fe9f4267ba6b9a5236b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 6380, "upload_time": "2019-09-25T18:41:34", "upload_time_iso_8601": "2019-09-25T18:41:34.286965Z", "url": "https://files.pythonhosted.org/packages/95/e8/b1ebae66be1079f70fdfdd466efe1bf75422378733f2ab9a5f9124fae967/qiskit-aqt-provider-0.0.1b1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "869749ce536efb798b01d11c486912a9", "sha256": "62d9a57d9725ae6eb179728ac1b1e2acd2994efae928032d88035c639d342352"}, "downloads": -1, "filename": "qiskit_aqt_provider-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "869749ce536efb798b01d11c486912a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 13444, "upload_time": "2020-01-08T17:12:20", "upload_time_iso_8601": "2020-01-08T17:12:20.087519Z", "url": "https://files.pythonhosted.org/packages/c1/a0/913dbf526efe001cc80adf332212d2765aaec203f628bf41d3a5b0c7e894/qiskit_aqt_provider-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a7bf97e4acf280577f7a3da1965bd124", "sha256": "945d23dc357892093335c55fdc3282ddfbbec879219a382ac752d093fce2407b"}, "downloads": -1, "filename": "qiskit-aqt-provider-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a7bf97e4acf280577f7a3da1965bd124", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7558, "upload_time": "2020-01-08T17:12:21", "upload_time_iso_8601": "2020-01-08T17:12:21.376255Z", "url": "https://files.pythonhosted.org/packages/7f/ff/d4cb8e8c8ebc1d41a2baf4001d5fd8e4fece22815ba01266cd8fcfe70092/qiskit-aqt-provider-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f61be3c4a69b4e4ff183f73172b4e9ea", "sha256": "894e292e812d1e105562cc1d107d23060cf8620c574f507219de5edc349e1de2"}, "downloads": -1, "filename": "qiskit_aqt_provider-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f61be3c4a69b4e4ff183f73172b4e9ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14647, "upload_time": "2020-05-01T18:58:08", "upload_time_iso_8601": "2020-05-01T18:58:08.623524Z", "url": "https://files.pythonhosted.org/packages/d1/21/a0e4eb69a0044e4868c69b6a423163d09f5134f3d2cb4316752df5e34a6f/qiskit_aqt_provider-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96168304c76e01e1dfafaa85e2812b53", "sha256": "a2126dd8476101b8349549057023b10c6add561900b05fc5c4534891136191aa"}, "downloads": -1, "filename": "qiskit-aqt-provider-0.2.0.tar.gz", "has_sig": false, "md5_digest": "96168304c76e01e1dfafaa85e2812b53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9149, "upload_time": "2020-05-01T18:58:09", "upload_time_iso_8601": "2020-05-01T18:58:09.628307Z", "url": "https://files.pythonhosted.org/packages/c3/51/7efc5cc1531fd26934443c2f0b18facfc855a23f82c2173daffa35bfeef9/qiskit-aqt-provider-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f61be3c4a69b4e4ff183f73172b4e9ea", "sha256": "894e292e812d1e105562cc1d107d23060cf8620c574f507219de5edc349e1de2"}, "downloads": -1, "filename": "qiskit_aqt_provider-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f61be3c4a69b4e4ff183f73172b4e9ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 14647, "upload_time": "2020-05-01T18:58:08", "upload_time_iso_8601": "2020-05-01T18:58:08.623524Z", "url": "https://files.pythonhosted.org/packages/d1/21/a0e4eb69a0044e4868c69b6a423163d09f5134f3d2cb4316752df5e34a6f/qiskit_aqt_provider-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96168304c76e01e1dfafaa85e2812b53", "sha256": "a2126dd8476101b8349549057023b10c6add561900b05fc5c4534891136191aa"}, "downloads": -1, "filename": "qiskit-aqt-provider-0.2.0.tar.gz", "has_sig": false, "md5_digest": "96168304c76e01e1dfafaa85e2812b53", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9149, "upload_time": "2020-05-01T18:58:09", "upload_time_iso_8601": "2020-05-01T18:58:09.628307Z", "url": "https://files.pythonhosted.org/packages/c3/51/7efc5cc1531fd26934443c2f0b18facfc855a23f82c2173daffa35bfeef9/qiskit-aqt-provider-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:30 2020"}