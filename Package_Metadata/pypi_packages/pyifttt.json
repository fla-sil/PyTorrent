{"info": {"author": "Ruben Branco", "author_email": "ruben.branco@outlook.pt", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3"], "description": "pyifttt: The Python IFTTT Webhook Interface\n===========================================\n\nThis package provides a simple interface to interact with If This Then That (https://ifttt.com/) webhook events.\n\nThis project was born from the need to receive push notifications on a smartphone after long running jobs had finished running, particularly using a free service such as IFTTT.\n\nCopyright \u00ae 2019, Ruben Branco <ruben.branco@outlook.pt>. All rights reserved.\n\nLinks: https://github.com/RubenBranco/pyifttt | https://pypi.org/project/pyifttt/\n\nInstallation\n------------\n\nInstall pyifttt using pip:\n\n.. code:: bash\n\n    pip3 install pyifttt\n\nUsage\n-----\n\nThere are three essential items to interact with a webhook:\n\n1. Event Name: The event name for the webhook defined in the website.\n2. Key: Your personal ifttt maker key.\n3. Data: The values of each declared form variables.\n\nGeneral Usage\n^^^^^^^^^^^^^\n\n.. code:: python\n\n    from pyifttt.webhook import send_notification\n\n    data = dict(value1=\"Testing this event\")\n    key = \"MySuperPrivateKey\"\n\n    send_notification(\"test_event\", data, key)\n\nThis will send a notification to an webhook whose event is named **test_event** with value1 variable as \"Testing this event\" and with a **key**.\n\nSince including a private key in script files can be bothersome and repetitive, ifttt has three ways of key input:\n\n1. Through the function as a key kwarg.\n2. As a system env variable named IFTTT_KEY (``export IFTTT_KEY=\"MySuperPrivateKey``).\n3. As a home file (~/.ifttt). The only contents this file should have is the key.\n\nJob Completion Notification\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\npyifttt implements a general notification system for push notification of program exits.\n\nIn your IFTTT webhook you should include the following message:\n\n::\n\n    The program {{Value1}}, running on host machine {{Value2}} , finished at {{OccurredAt}}. {{Value3}}\n\nHere's how you would use pyifttt to receive push notifications for when your long running program finishes using a context manager:\n\n.. code:: python\n\n    from pyifttt.webhook import SendCompletionNotification\n\n    with SendCompletionNotification('test_event'):\n        execute_long_job()\n\nThis will send a push notification to your smartphone or other device with the following structure:\n\n::\n\n    The program long_job.py, running on host machine Server1, finished at November 22, 2019 at 09:30PM.\n\nIf it had found an exception, it would show the following message:\n\n::\n\n    The program long_job.py, running on host machine Server1, finished at November 22, 2019 at 09:30PM. Got exception KeyboardInterrupt.\n\nAn optional argument to SendCompletionNotification is the IFTTT key, which as previously described, has several ways of input.\n\nIf you prefer to not use it as a context manager, you also use it in the following way:\n\n.. code:: python\n\n    from pyifttt.webhook import send_completion_notification\n\n    execute_long_job()\n    send_completion_notification('test_event')\n\n\nLicense\n-------\n\nDistributed under GPL-3.0 License. See the `LICENSE`_ file for details.\n\n.. _LICENSE: https://github.com/RubenBranco/pyifttt/blob/master/LICENSE", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RubenBranco/pyifttt", "keywords": "ifttt,webhook", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "pyifttt", "package_url": "https://pypi.org/project/pyifttt/", "platform": "", "project_url": "https://pypi.org/project/pyifttt/", "project_urls": {"Homepage": "https://github.com/RubenBranco/pyifttt"}, "release_url": "https://pypi.org/project/pyifttt/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Python Wrapper for IFTTT Webhook interaction.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides a simple interface to interact with If This Then That (<a href=\"https://ifttt.com/\" rel=\"nofollow\">https://ifttt.com/</a>) webhook events.</p>\n<p>This project was born from the need to receive push notifications on a smartphone after long running jobs had finished running, particularly using a free service such as IFTTT.</p>\n<p>Copyright \u00ae 2019, Ruben Branco &lt;<a href=\"mailto:ruben.branco%40outlook.pt\">ruben<span>.</span>branco<span>@</span>outlook<span>.</span>pt</a>&gt;. All rights reserved.</p>\n<p>Links: <a href=\"https://github.com/RubenBranco/pyifttt\" rel=\"nofollow\">https://github.com/RubenBranco/pyifttt</a> | <a href=\"https://pypi.org/project/pyifttt/\" rel=\"nofollow\">https://pypi.org/project/pyifttt/</a></p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install pyifttt using pip:</p>\n<pre>pip3 install pyifttt\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There are three essential items to interact with a webhook:</p>\n<ol>\n<li>Event Name: The event name for the webhook defined in the website.</li>\n<li>Key: Your personal ifttt maker key.</li>\n<li>Data: The values of each declared form variables.</li>\n</ol>\n<div id=\"general-usage\">\n<h3>General Usage</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyifttt.webhook</span> <span class=\"kn\">import</span> <span class=\"n\">send_notification</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">value1</span><span class=\"o\">=</span><span class=\"s2\">\"Testing this event\"</span><span class=\"p\">)</span>\n<span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"MySuperPrivateKey\"</span>\n\n<span class=\"n\">send_notification</span><span class=\"p\">(</span><span class=\"s2\">\"test_event\"</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">)</span>\n</pre>\n<p>This will send a notification to an webhook whose event is named <strong>test_event</strong> with value1 variable as \u201cTesting this event\u201d and with a <strong>key</strong>.</p>\n<p>Since including a private key in script files can be bothersome and repetitive, ifttt has three ways of key input:</p>\n<ol>\n<li>Through the function as a key kwarg.</li>\n<li>As a system env variable named IFTTT_KEY (<tt>export <span class=\"pre\">IFTTT_KEY=\"MySuperPrivateKey</span></tt>).</li>\n<li>As a home file (~/.ifttt). The only contents this file should have is the key.</li>\n</ol>\n</div>\n<div id=\"job-completion-notification\">\n<h3>Job Completion Notification</h3>\n<p>pyifttt implements a general notification system for push notification of program exits.</p>\n<p>In your IFTTT webhook you should include the following message:</p>\n<pre>The program {{Value1}}, running on host machine {{Value2}} , finished at {{OccurredAt}}. {{Value3}}\n</pre>\n<p>Here\u2019s how you would use pyifttt to receive push notifications for when your long running program finishes using a context manager:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyifttt.webhook</span> <span class=\"kn\">import</span> <span class=\"n\">SendCompletionNotification</span>\n\n<span class=\"k\">with</span> <span class=\"n\">SendCompletionNotification</span><span class=\"p\">(</span><span class=\"s1\">'test_event'</span><span class=\"p\">):</span>\n    <span class=\"n\">execute_long_job</span><span class=\"p\">()</span>\n</pre>\n<p>This will send a push notification to your smartphone or other device with the following structure:</p>\n<pre>The program long_job.py, running on host machine Server1, finished at November 22, 2019 at 09:30PM.\n</pre>\n<p>If it had found an exception, it would show the following message:</p>\n<pre>The program long_job.py, running on host machine Server1, finished at November 22, 2019 at 09:30PM. Got exception KeyboardInterrupt.\n</pre>\n<p>An optional argument to SendCompletionNotification is the IFTTT key, which as previously described, has several ways of input.</p>\n<p>If you prefer to not use it as a context manager, you also use it in the following way:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyifttt.webhook</span> <span class=\"kn\">import</span> <span class=\"n\">send_completion_notification</span>\n\n<span class=\"n\">execute_long_job</span><span class=\"p\">()</span>\n<span class=\"n\">send_completion_notification</span><span class=\"p\">(</span><span class=\"s1\">'test_event'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Distributed under GPL-3.0 License. See the <a href=\"https://github.com/RubenBranco/pyifttt/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> file for details.</p>\n</div>\n\n          </div>"}, "last_serial": 6186423, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e44102f4b9bc8f2d0bbf61df5d24f2f6", "sha256": "ae198b1147e9ed10ad399b590e6d79d7068084bc21910a01996fa64569f43389"}, "downloads": -1, "filename": "pyifttt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e44102f4b9bc8f2d0bbf61df5d24f2f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3594, "upload_time": "2019-11-22T19:14:22", "upload_time_iso_8601": "2019-11-22T19:14:22.369769Z", "url": "https://files.pythonhosted.org/packages/b0/ab/0c429e084c3171f46c8b88d22917af13daae7b59d30d100154544c1aa484/pyifttt-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "55c4f6319003f6021ee495da5a7e2582", "sha256": "2b0e9daafcdd2d06cfe6df7beceabf7bee7dd22123db86b469c4fb2b0c86fb44"}, "downloads": -1, "filename": "pyifttt-0.1.1.tar.gz", "has_sig": false, "md5_digest": "55c4f6319003f6021ee495da5a7e2582", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3579, "upload_time": "2019-11-22T19:22:48", "upload_time_iso_8601": "2019-11-22T19:22:48.087943Z", "url": "https://files.pythonhosted.org/packages/65/5e/cf00922146db8b5e71caf6a5b45c577dd3060bc1b342c4a92796c782c437/pyifttt-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b69de4a614a03bf6b4e2b57300e5dbc3", "sha256": "82719cd0b578baa14d8af5004fcbbb62009d62ce1d3afef492a5c8ece7f9e156"}, "downloads": -1, "filename": "pyifttt-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b69de4a614a03bf6b4e2b57300e5dbc3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3574, "upload_time": "2019-11-22T21:34:28", "upload_time_iso_8601": "2019-11-22T21:34:28.238637Z", "url": "https://files.pythonhosted.org/packages/68/d3/b183a1a0b954dea7afa25ddfa3c31a7dd94914fde7be6800bf37d4669fb0/pyifttt-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4ecf10eda0dd32585807f944c2f518c2", "sha256": "74a44bd54aaff566e00fafa4eecbcb93a9b0983de347121f6c7fc65d87b7bca8"}, "downloads": -1, "filename": "pyifttt-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4ecf10eda0dd32585807f944c2f518c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3566, "upload_time": "2019-11-22T21:36:10", "upload_time_iso_8601": "2019-11-22T21:36:10.305527Z", "url": "https://files.pythonhosted.org/packages/0b/dd/c7abec8b34371b388cb9a0f8b74ccfa8dce83acf1c38081cccc4a72192af/pyifttt-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1cd341d6c729fa23bdbd7ba3d9db04b0", "sha256": "f0f4154ffe5b9c096971c43342e9858f3ad0c4f434e75cc3466495fd591141e1"}, "downloads": -1, "filename": "pyifttt-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1cd341d6c729fa23bdbd7ba3d9db04b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2019-11-23T13:01:52", "upload_time_iso_8601": "2019-11-23T13:01:52.754137Z", "url": "https://files.pythonhosted.org/packages/3e/98/eac33c1f43e237a3aee45bbf530c497594537fbb153d37628c14dd126251/pyifttt-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1cd341d6c729fa23bdbd7ba3d9db04b0", "sha256": "f0f4154ffe5b9c096971c43342e9858f3ad0c4f434e75cc3466495fd591141e1"}, "downloads": -1, "filename": "pyifttt-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1cd341d6c729fa23bdbd7ba3d9db04b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3596, "upload_time": "2019-11-23T13:01:52", "upload_time_iso_8601": "2019-11-23T13:01:52.754137Z", "url": "https://files.pythonhosted.org/packages/3e/98/eac33c1f43e237a3aee45bbf530c497594537fbb153d37628c14dd126251/pyifttt-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:07 2020"}