{"info": {"author": "Alexander Ptakhin", "author_email": "me@aptakhin.name", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Pytest", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development", "Topic :: Software Development :: Quality Assurance", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Unit"], "description": "# Regress\n\n![](https://github.com/aptakhin/regress/workflows/Regress%20test/badge.svg)\n[![codecov](https://codecov.io/gh/aptakhin/regress/branch/master/graph/badge.svg)](https://codecov.io/gh/aptakhin/regress)\n[![Documentation Status](https://readthedocs.org/projects/regress/badge/?version=latest)](https://regress.readthedocs.io/en/latest/?badge=latest)\n[![Maintainability](https://api.codeclimate.com/v1/badges/4bab5c99811799725609/maintainability)](https://codeclimate.com/github/aptakhin/regress/maintainability)\n\nRegression testing framework for Python 3.4+. It's useful in unit and module testing when creating or rewriting test data is too boring. After you canonized the ideal output result all tests will pass until the data changes moment.\n\n- Writes data to the local filesystem storage\n- Supports binary, text, json and picklable objects\n- Different policies for resolving test conflicts\n\nCurrently integrates best with the PyTest, but other frameworks are also welcomed.\n\n## Example\n\nOne pytest function is the scope of the result. Newly calculated data compares with the original canonized result.\n\n    # regress is the function scope helper fixture easy to setup\n    def test_simple(regress: RegressFixture):\n        result = {'a': 1}\n        regress.test(result)  # Commit first time\n\n        result2 = {'a': 1}\n        regress.test(result2)  # Ok. No object result changes\n\n        result3 = {'a': 3}  # Try commit change. Raised the AssertionError\n        with pytest.raises(AssertionError) as e:\n            regress.test(result3)\n\nTo continue exploring you can visit the [quickstart](https://regress.readthedocs.io/en/latest/usage/quickstart.html).\n\n## Using\n\n    pip3 install regress\n\n## Documentation\n\nhttps://regress.readthedocs.io/\n\n## Development\n\nMaking virtualenv with development requirements:\n\n    python3 -m venv venv\n    venv/bin/pip install --upgrade pip\n    venv/bin/pip install -r requirements.txt\n\n## Testing\n\n    venv/bin/pytest -s tests\n    venv/bin/flake8 regress --show-source --statistics\n    venv/bin/pytest --cov=regress --cov-report html\n    \nOr for automatizing:\n    \n    cp TEST.sh.example TEST.sh\n    chmod +x TEST.sh\n    ./TEST.sh\n\nSome tests uses console for user interaction. Add `--canonize` flag:\n\n    venv/bin/pytest -s tests --canonize\n\n### Building docs\n\nUsing `sphinx`:\n\n    cd docs\n    make", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aptakhin/regress", "keywords": "regression testing", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "regress", "package_url": "https://pypi.org/project/regress/", "platform": "", "project_url": "https://pypi.org/project/regress/", "project_urls": {"Homepage": "https://github.com/aptakhin/regress", "Source Code": "https://github.com/aptakhin/regress"}, "release_url": "https://pypi.org/project/regress/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Library", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Regress</h1>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40abfc836e55ffbf60aea51e4497741568ad8494/68747470733a2f2f6769746875622e636f6d2f617074616b68696e2f726567726573732f776f726b666c6f77732f52656772657373253230746573742f62616467652e737667\">\n<a href=\"https://codecov.io/gh/aptakhin/regress\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/167a01e5287d25a6aeb522ebe5db220691622650/68747470733a2f2f636f6465636f762e696f2f67682f617074616b68696e2f726567726573732f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://regress.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15e08592752f33b65b6e15c2add2ae59912953ae/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f726567726573732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codeclimate.com/github/aptakhin/regress/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6377ce07f9e78e49b19408315191420be83342f7/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f34626162356339393831313739393732353630392f6d61696e7461696e6162696c697479\"></a></p>\n<p>Regression testing framework for Python 3.4+. It's useful in unit and module testing when creating or rewriting test data is too boring. After you canonized the ideal output result all tests will pass until the data changes moment.</p>\n<ul>\n<li>Writes data to the local filesystem storage</li>\n<li>Supports binary, text, json and picklable objects</li>\n<li>Different policies for resolving test conflicts</li>\n</ul>\n<p>Currently integrates best with the PyTest, but other frameworks are also welcomed.</p>\n<h2>Example</h2>\n<p>One pytest function is the scope of the result. Newly calculated data compares with the original canonized result.</p>\n<pre><code># regress is the function scope helper fixture easy to setup\ndef test_simple(regress: RegressFixture):\n    result = {'a': 1}\n    regress.test(result)  # Commit first time\n\n    result2 = {'a': 1}\n    regress.test(result2)  # Ok. No object result changes\n\n    result3 = {'a': 3}  # Try commit change. Raised the AssertionError\n    with pytest.raises(AssertionError) as e:\n        regress.test(result3)\n</code></pre>\n<p>To continue exploring you can visit the <a href=\"https://regress.readthedocs.io/en/latest/usage/quickstart.html\" rel=\"nofollow\">quickstart</a>.</p>\n<h2>Using</h2>\n<pre><code>pip3 install regress\n</code></pre>\n<h2>Documentation</h2>\n<p><a href=\"https://regress.readthedocs.io/\" rel=\"nofollow\">https://regress.readthedocs.io/</a></p>\n<h2>Development</h2>\n<p>Making virtualenv with development requirements:</p>\n<pre><code>python3 -m venv venv\nvenv/bin/pip install --upgrade pip\nvenv/bin/pip install -r requirements.txt\n</code></pre>\n<h2>Testing</h2>\n<pre><code>venv/bin/pytest -s tests\nvenv/bin/flake8 regress --show-source --statistics\nvenv/bin/pytest --cov=regress --cov-report html\n</code></pre>\n<p>Or for automatizing:</p>\n<pre><code>cp TEST.sh.example TEST.sh\nchmod +x TEST.sh\n./TEST.sh\n</code></pre>\n<p>Some tests uses console for user interaction. Add <code>--canonize</code> flag:</p>\n<pre><code>venv/bin/pytest -s tests --canonize\n</code></pre>\n<h3>Building docs</h3>\n<p>Using <code>sphinx</code>:</p>\n<pre><code>cd docs\nmake\n</code></pre>\n\n          </div>"}, "last_serial": 7164273, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a166173b9707b4743d1b66f69c70785c", "sha256": "19c0a2c005e558268fc143d50a7f71adda8a52ad447c98135527fceacf6d660e"}, "downloads": -1, "filename": "regress-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a166173b9707b4743d1b66f69c70785c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3753, "upload_time": "2020-04-19T14:47:21", "upload_time_iso_8601": "2020-04-19T14:47:21.804757Z", "url": "https://files.pythonhosted.org/packages/a3/b3/1cba16575a49d6d8baf96a91c91e42b5103ba541ae22fb81b3d8f4bdc4e9/regress-0.0.1.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "6d19a52ad78018a7d1b9d1ceec5c0ce1", "sha256": "5b763dc8e3da0d5ddbdc29715ed851941335387711546ed772cb404b43e3d582"}, "downloads": -1, "filename": "regress-0.0.3.tar.gz", "has_sig": false, "md5_digest": "6d19a52ad78018a7d1b9d1ceec5c0ce1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7700, "upload_time": "2020-05-02T17:23:31", "upload_time_iso_8601": "2020-05-02T17:23:31.912281Z", "url": "https://files.pythonhosted.org/packages/00/d8/c0a22bf9e3c93372ec6afaeac2f9abd6150a1e8c4a2af8f965710d4c586f/regress-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "c58966200d26a268f732b603c34a8503", "sha256": "106ba8d6d66b9cdf16133f8ff7bce36702c7fa3a793d271e1363d2bc13975842"}, "downloads": -1, "filename": "regress-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c58966200d26a268f732b603c34a8503", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9093, "upload_time": "2020-05-04T13:08:26", "upload_time_iso_8601": "2020-05-04T13:08:26.315659Z", "url": "https://files.pythonhosted.org/packages/b9/69/65fc112052ed7e166001b6e77d16db5f75b2257b9c7a60231ec90214eb05/regress-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c58966200d26a268f732b603c34a8503", "sha256": "106ba8d6d66b9cdf16133f8ff7bce36702c7fa3a793d271e1363d2bc13975842"}, "downloads": -1, "filename": "regress-0.0.4.tar.gz", "has_sig": false, "md5_digest": "c58966200d26a268f732b603c34a8503", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9093, "upload_time": "2020-05-04T13:08:26", "upload_time_iso_8601": "2020-05-04T13:08:26.315659Z", "url": "https://files.pythonhosted.org/packages/b9/69/65fc112052ed7e166001b6e77d16db5f75b2257b9c7a60231ec90214eb05/regress-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:10 2020"}