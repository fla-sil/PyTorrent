{"info": {"author": "Tobias Domhan (python wrapper). Frank Hutter, Holger Hoos, Kevin Leyton-Brown, Kevin Murphy and Steve Ramage (SMAC)", "author_email": "domhant@informatik.uni-freiburg.de", "bugtrack_url": null, "classifiers": [], "description": "pysmac\n======\n\nSimple python wrapper to\n`SMAC <http://www.cs.ubc.ca/labs/beta/Projects/SMAC/>`__, a versatile\ntool for optimizing algorithm parameters.\n\n::\n\n     fmin(objective, x0, xmin, xmax, x0_int, xmin_int, xmax_int, xcategorical, params)\n        min_x f(x) s.t. xmin < x < xmax\n        \n      objective: The objective function that should be optimized.\n\nInstallation\n------------\n\nPip\n~~~\n\n::\n\n    pip install pysmac\n\nManual\n~~~~~~\n\n::\n\n    python setup.py install\n\nExample usage\n-------------\n\nLet's take for example the Branin function. (Note that the branin\nfunction is not the ideal use case for SMAC, which is designed to be a\nglobal optimization tool for costly functions. That said, it'll serve\nthe purpose of checking that everything is working.)\n\n.. code:: python\n\n    import numpy as np\n\n    def branin(x):\n        b = (5.1 / (4.*np.pi**2))\n        c = (5. / np.pi)\n        t = (1. / (8.*np.pi))\n        return 1.*(x[1]-b*x[0]**2+c*x[0]-6.)**2+10.*(1-t)*np.cos(x[0])+10.\n\nFor x1 \u2208 [-5, 10], x2 \u2208 [0, 15] the function reaches a minimum value of:\n*0.397887*.\n\nNote: fmin accepts any function that has a parameter called ``x`` (the\ninput array) and returns an objective value.\n\n.. code:: python\n\n    from pysmac.optimize import fmin\n\n    xmin, fval = fmin(branin, x0=(0,0),xmin=(-5, 0), xmax=(10, 15), max_evaluations=5000)\n\nAs soon as the evaluations are finished, we can check the output:\n\n.. code:: python\n\n    >>> xmin\n    {'x': array([ 3.14305644,  2.27827543])}\n\n    >>> fval\n    0.397917\n\nLet's run the objective function with the found parameters:\n\n.. code:: python\n\n    >>> branin(**xmin)\n    0.397917\n\nLicense\n-------\n\nSMAC is free for academic & non-commercial usage. Please contact `Frank\nHutter <mailto:fh@informatik.uni-freiburg.de>`__ to discuss obtaining a\nlicense for commercial purposes.\n\nAdvanced\n--------\n\nCustom arguments to the objective function:\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNote: make sure there is no naming collission with the parameter names\nand the custom arguments.\n\n.. code:: python\n\n    def minfunc(x, custom_arg1, custom_arg2):\n        print \"custom_arg1:\", custom_arg1\n        print \"custom_arg2:\", custom_arg2\n        return 1\n\n\n    xmin, fval = fmin(minfunc, x0=(0,0),xmin=(-5, 0), xmax=(10, 15),\n                      max_evaluations=5000,\n                      custom_args={\"custom_arg1\": \"test\",\n                                   \"custom_arg2\": 123})\n\nInteger parameters\n~~~~~~~~~~~~~~~~~~\n\nInteger parameters can be encoded as follows:\n\n.. code:: python\n\n\n    def minfunc(x, x_int):\n        print \"x: \", x\n        print \"x_int: \", x_int\n        return 1.\n\n    xmin, fval = fmin(minfunc,\n                      x0=(0,0), xmin=(-5, 0), xmax=(10, 15),\n                      x0_int=(0,0), xmin_int=(-5, 0), xmax_int=(10, 15),\n                      max_evaluations=5000)\n\nCategorical parameters\n~~~~~~~~~~~~~~~~~~~~~~\n\nCategorical parameters can be specified as a dictionary of lists of\nvalues they can take on, e.g.:\n\n.. code:: python\n\n    categorical_params = {\"param1\": [1,2,3,4,5,6,7],\n                          \"param2\": [\"string1\", \"string2\", \"string3\"]}\n\n    def minfunc(x_categorical):\n        print \"param1: \", x_categorical[\"param1\"]\n        print \"param2: \", x_categorical[\"param2\"]\n        return 1.\n\n    xmin, fval = fmin(minfunc,\n                      x_categorical=categorical_params,\n                      max_evaluations=5000)\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.cs.ubc.ca/labs/beta/Projects/SMAC/", "keywords": "hyperparameter parameter optimization hyperopt bayesian smac global", "license": "SMAC is free for academic & non-commercial usage. Please contact Frank Hutter(fh@informatik.uni-freiburg.de) to discuss obtaining a license for commercial purposes.", "maintainer": null, "maintainer_email": null, "name": "pysmac", "package_url": "https://pypi.org/project/pysmac/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pysmac/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.cs.ubc.ca/labs/beta/Projects/SMAC/"}, "release_url": "https://pypi.org/project/pysmac/0.8/", "requires_dist": null, "requires_python": null, "summary": "python interface to the hyperparameter optimization tool SMAC.", "version": "0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simple python wrapper to\n<a href=\"http://www.cs.ubc.ca/labs/beta/Projects/SMAC/\" rel=\"nofollow\">SMAC</a>, a versatile\ntool for optimizing algorithm parameters.</p>\n<pre>fmin(objective, x0, xmin, xmax, x0_int, xmin_int, xmax_int, xcategorical, params)\n   min_x f(x) s.t. xmin &lt; x &lt; xmax\n\n objective: The objective function that should be optimized.\n</pre>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"pip\">\n<h3>Pip</h3>\n<pre>pip install pysmac\n</pre>\n</div>\n<div id=\"manual\">\n<h3>Manual</h3>\n<pre>python setup.py install\n</pre>\n</div>\n</div>\n<div id=\"example-usage\">\n<h2>Example usage</h2>\n<p>Let\u2019s take for example the Branin function. (Note that the branin\nfunction is not the ideal use case for SMAC, which is designed to be a\nglobal optimization tool for costly functions. That said, it\u2019ll serve\nthe purpose of checking that everything is working.)</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">branin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">5.1</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mf\">4.</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n    <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">5.</span> <span class=\"o\">/</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">)</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"mf\">1.</span> <span class=\"o\">/</span> <span class=\"p\">(</span><span class=\"mf\">8.</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">))</span>\n    <span class=\"k\">return</span> <span class=\"mf\">1.</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"n\">b</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"n\">c</span><span class=\"o\">*</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">-</span><span class=\"mf\">6.</span><span class=\"p\">)</span><span class=\"o\">**</span><span class=\"mi\">2</span><span class=\"o\">+</span><span class=\"mf\">10.</span><span class=\"o\">*</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"o\">-</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">+</span><span class=\"mf\">10.</span>\n</pre>\n<p>For x1 \u2208 [-5, 10], x2 \u2208 [0, 15] the function reaches a minimum value of:\n<em>0.397887</em>.</p>\n<p>Note: fmin accepts any function that has a parameter called <tt>x</tt> (the\ninput array) and returns an objective value.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pysmac.optimize</span> <span class=\"kn\">import</span> <span class=\"n\">fmin</span>\n\n<span class=\"n\">xmin</span><span class=\"p\">,</span> <span class=\"n\">fval</span> <span class=\"o\">=</span> <span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"n\">branin</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">xmin</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xmax</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">),</span> <span class=\"n\">max_evaluations</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n<p>As soon as the evaluations are finished, we can check the output:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">xmin</span>\n<span class=\"p\">{</span><span class=\"s1\">'x'</span><span class=\"p\">:</span> <span class=\"n\">array</span><span class=\"p\">([</span> <span class=\"mf\">3.14305644</span><span class=\"p\">,</span>  <span class=\"mf\">2.27827543</span><span class=\"p\">])}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fval</span>\n<span class=\"mf\">0.397917</span>\n</pre>\n<p>Let\u2019s run the objective function with the found parameters:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">branin</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">xmin</span><span class=\"p\">)</span>\n<span class=\"mf\">0.397917</span>\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>SMAC is free for academic &amp; non-commercial usage. Please contact <a href=\"mailto:fh%40informatik.uni-freiburg.de\">Frank\nHutter</a> to discuss obtaining a\nlicense for commercial purposes.</p>\n</div>\n<div id=\"advanced\">\n<h2>Advanced</h2>\n<div id=\"custom-arguments-to-the-objective-function\">\n<h3>Custom arguments to the objective function:</h3>\n<p>Note: make sure there is no naming collission with the parameter names\nand the custom arguments.</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">minfunc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">custom_arg1</span><span class=\"p\">,</span> <span class=\"n\">custom_arg2</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"custom_arg1:\"</span><span class=\"p\">,</span> <span class=\"n\">custom_arg1</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"custom_arg2:\"</span><span class=\"p\">,</span> <span class=\"n\">custom_arg2</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n\n<span class=\"n\">xmin</span><span class=\"p\">,</span> <span class=\"n\">fval</span> <span class=\"o\">=</span> <span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"n\">minfunc</span><span class=\"p\">,</span> <span class=\"n\">x0</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">xmin</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xmax</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">),</span>\n                  <span class=\"n\">max_evaluations</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">,</span>\n                  <span class=\"n\">custom_args</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"custom_arg1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test\"</span><span class=\"p\">,</span>\n                               <span class=\"s2\">\"custom_arg2\"</span><span class=\"p\">:</span> <span class=\"mi\">123</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"integer-parameters\">\n<h3>Integer parameters</h3>\n<p>Integer parameters can be encoded as follows:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">minfunc</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x_int</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"x: \"</span><span class=\"p\">,</span> <span class=\"n\">x</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"x_int: \"</span><span class=\"p\">,</span> <span class=\"n\">x_int</span>\n    <span class=\"k\">return</span> <span class=\"mf\">1.</span>\n\n<span class=\"n\">xmin</span><span class=\"p\">,</span> <span class=\"n\">fval</span> <span class=\"o\">=</span> <span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"n\">minfunc</span><span class=\"p\">,</span>\n                  <span class=\"n\">x0</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xmin</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xmax</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">),</span>\n                  <span class=\"n\">x0_int</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xmin_int</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">xmax_int</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">15</span><span class=\"p\">),</span>\n                  <span class=\"n\">max_evaluations</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"categorical-parameters\">\n<h3>Categorical parameters</h3>\n<p>Categorical parameters can be specified as a dictionary of lists of\nvalues they can take on, e.g.:</p>\n<pre><span class=\"n\">categorical_params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"param1\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">7</span><span class=\"p\">],</span>\n                      <span class=\"s2\">\"param2\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"string1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"string2\"</span><span class=\"p\">,</span> <span class=\"s2\">\"string3\"</span><span class=\"p\">]}</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">minfunc</span><span class=\"p\">(</span><span class=\"n\">x_categorical</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"param1: \"</span><span class=\"p\">,</span> <span class=\"n\">x_categorical</span><span class=\"p\">[</span><span class=\"s2\">\"param1\"</span><span class=\"p\">]</span>\n    <span class=\"nb\">print</span> <span class=\"s2\">\"param2: \"</span><span class=\"p\">,</span> <span class=\"n\">x_categorical</span><span class=\"p\">[</span><span class=\"s2\">\"param2\"</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"mf\">1.</span>\n\n<span class=\"n\">xmin</span><span class=\"p\">,</span> <span class=\"n\">fval</span> <span class=\"o\">=</span> <span class=\"n\">fmin</span><span class=\"p\">(</span><span class=\"n\">minfunc</span><span class=\"p\">,</span>\n                  <span class=\"n\">x_categorical</span><span class=\"o\">=</span><span class=\"n\">categorical_params</span><span class=\"p\">,</span>\n                  <span class=\"n\">max_evaluations</span><span class=\"o\">=</span><span class=\"mi\">5000</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1649632, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "43d8fb0e3646dd0e884cb5e7a8326f36", "sha256": "00f83ee525e6ab3787befeb024d0c73e04fdb780b4b9d9037a0331b8541b2cdf"}, "downloads": -1, "filename": "pysmac-0.1.tar.gz", "has_sig": false, "md5_digest": "43d8fb0e3646dd0e884cb5e7a8326f36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8129354, "upload_time": "2014-03-18T14:21:55", "upload_time_iso_8601": "2014-03-18T14:21:55.828158Z", "url": "https://files.pythonhosted.org/packages/3a/aa/80453c150b2cfe6a36a8ebf23dbabb19eee4c21cef6f1ae855284c195dfc/pysmac-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "50f76addd98b44ee86300653526751e5", "sha256": "f7de9052582ccdac6c751cf69fdd02cce8b02f696a4d4a9ccd5da51c31e2b979"}, "downloads": -1, "filename": "pysmac-0.2.tar.gz", "has_sig": false, "md5_digest": "50f76addd98b44ee86300653526751e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8129478, "upload_time": "2014-03-19T12:53:49", "upload_time_iso_8601": "2014-03-19T12:53:49.586900Z", "url": "https://files.pythonhosted.org/packages/12/c3/684af90fbe4919256327e1cc9d3806e89c629e5cb3841e35018fe15f0281/pysmac-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "d47b438589774d20a256aef8b9cc1a51", "sha256": "12f8a720a980eb99c62e42f8c7ff69abc2e2e8cf0b8923f7def570efde415ca1"}, "downloads": -1, "filename": "pysmac-0.3.tar.gz", "has_sig": false, "md5_digest": "d47b438589774d20a256aef8b9cc1a51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8132774, "upload_time": "2014-03-19T16:56:38", "upload_time_iso_8601": "2014-03-19T16:56:38.067556Z", "url": "https://files.pythonhosted.org/packages/3f/c6/10657d3020d3f45c43ca9b9f50c733e8fb4e972e5158fff9392f4aa45f8e/pysmac-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "280d28fddd6f680ed4c2f96f0eee66fb", "sha256": "3412c5bf45352a13eee4d4537247a1137d84cdbb9bcb2b0589e9510f5a59e91f"}, "downloads": -1, "filename": "pysmac-0.4.tar.gz", "has_sig": false, "md5_digest": "280d28fddd6f680ed4c2f96f0eee66fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8133121, "upload_time": "2014-03-21T12:49:17", "upload_time_iso_8601": "2014-03-21T12:49:17.189761Z", "url": "https://files.pythonhosted.org/packages/2f/81/ef120e460fb7a8bad52f9268db9e8777294da489389b36ec6e6f6f67b883/pysmac-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "c56d4810e2f42fc09e5f02cf272e1823", "sha256": "3de3866783104a1b9cf49f8953fd56e5926678ebe12c608731556236c1730edd"}, "downloads": -1, "filename": "pysmac-0.5.tar.gz", "has_sig": false, "md5_digest": "c56d4810e2f42fc09e5f02cf272e1823", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8209836, "upload_time": "2014-04-21T16:57:30", "upload_time_iso_8601": "2014-04-21T16:57:30.511982Z", "url": "https://files.pythonhosted.org/packages/ad/dc/3c03ef90dc4b4d66d7e455dc478043c33ca7970f9fcbf6adeed1b7c19825/pysmac-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "872c923a16ef768416f460539ff1f155", "sha256": "8b13659e9ac5e08ea832c4f18bd90a67b3463b589779396f267ea556f4cb1dd7"}, "downloads": -1, "filename": "pysmac-0.6.tar.gz", "has_sig": false, "md5_digest": "872c923a16ef768416f460539ff1f155", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8209274, "upload_time": "2014-04-21T17:40:33", "upload_time_iso_8601": "2014-04-21T17:40:33.073339Z", "url": "https://files.pythonhosted.org/packages/a1/ae/17cb45a94ad5e88759053255712a13b03d2f8ff0e6b2bb6da7e8e0944d19/pysmac-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "dd4c2f1dd3f49982cf096cc72c9a7cea", "sha256": "019b8bb0bc55570a4e29d205026aa57fa36131ac62c927b7a2010aace67d3964"}, "downloads": -1, "filename": "pysmac-0.7.tar.gz", "has_sig": false, "md5_digest": "dd4c2f1dd3f49982cf096cc72c9a7cea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8211012, "upload_time": "2014-05-26T16:33:34", "upload_time_iso_8601": "2014-05-26T16:33:34.439386Z", "url": "https://files.pythonhosted.org/packages/92/53/e92a1c9766bfad23239f547d66c86c566a35401257c854e3cef29b1cecdd/pysmac-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "ce0cfff51564c1645f6d3bf633bfdf5b", "sha256": "d9b77514e0f8cfefd53919c307043c9b25e7ac1bc6e8b46ec6ba398ea11e0092"}, "downloads": -1, "filename": "pysmac-0.8.tar.gz", "has_sig": false, "md5_digest": "ce0cfff51564c1645f6d3bf633bfdf5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9460465, "upload_time": "2014-07-08T09:15:35", "upload_time_iso_8601": "2014-07-08T09:15:35.023154Z", "url": "https://files.pythonhosted.org/packages/55/67/3489511f4f335f5dc4db8aa3d19968ca7470dfd9b50e4eea38c570be9538/pysmac-0.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce0cfff51564c1645f6d3bf633bfdf5b", "sha256": "d9b77514e0f8cfefd53919c307043c9b25e7ac1bc6e8b46ec6ba398ea11e0092"}, "downloads": -1, "filename": "pysmac-0.8.tar.gz", "has_sig": false, "md5_digest": "ce0cfff51564c1645f6d3bf633bfdf5b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9460465, "upload_time": "2014-07-08T09:15:35", "upload_time_iso_8601": "2014-07-08T09:15:35.023154Z", "url": "https://files.pythonhosted.org/packages/55/67/3489511f4f335f5dc4db8aa3d19968ca7470dfd9b50e4eea38c570be9538/pysmac-0.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:34 2020"}