{"info": {"author": "Barron Henderson", "author_email": "barronh@ufl.edu", "bugtrack_url": null, "classifiers": [], "description": "bpch\r\n====\r\n\r\nGEOS-Chem Binary Punch File Reader/Plotter/ncdumper\r\n\r\nThe python-based library for Binary Punch files is designed to provide NetCDF-like access to data in Binary Punch files. In addition, it can be used to produce plots.\r\n\r\nPrerequisites\r\n-------------\r\n\r\n * Linux`*`\r\n * Python >= 2.7\r\n * numpy >= 1.5\r\n * matplotlib >= 1.0`**`\r\n * mpl_toolkits.basemap >= 1.0`***`\r\n\r\n`*`Linux is not actually required; Windows and Mac versions have been used. They are not supported.\r\n\r\n`**`matplotlib is only required for plotting\r\n\r\n`***`basemap is used only if available to add geopolitical boundaries to lat-lon plots.\r\n\r\n### Prerequisites via EPD (Mac OS X/Linux/Unix/Windows)\r\n\r\nThis is the easiest way to get going. All of these prerequisites are available via the <a href=http://www.enthought.com/products/epd.php>Enthought Python Distribution</a> (EPD). Download their installer and run it. It's that easy. EPD is free for academics, but the edX version is not sufficient (unless combined with virtualenv instructions below). \r\n\r\n\r\n### Prerequisites via virtualenv on Linux/Unix/Mac OS X\r\n\r\nIf you have a working version of Python 2.7 (or you can get edX from EPD for free) but you don't have root access to install, then I recommend you use <a href=https://pypi.python.org/pypi/virtualenv>virtualenv</a> by downloading <a href=https://raw.github.com/pypa/virtualenv/master/virtualenv.py>virtualenv.py</a>. The commands below setting up virtualenv and installing prerequisites:\r\n\r\n```\r\ncd ~\r\ncurl -LO https://raw.github.com/pypa/virtualenv/master/virtualenv.py\r\npython virtualenv.py aqc\r\nsource aqc/bin/activate\r\npip install numpy\r\npip install matplotlib\r\npip install basemap\r\n```\r\n\r\nAny time you want to use bpch, you'll need to activate virtualenv by running `source bpch/bin/activate`. You'll need to `source bpch/bin/activate`.\r\n\r\nInstallation\r\n------------\r\n\r\n## First release\r\n\r\n```\r\npip install bpch\r\n```\r\n\r\nor \r\n\r\n```\r\npip install http://github.com/barronh/bpch/archive/1.0.zip\r\n```\r\n\r\n## Latest version\r\n\r\n```\r\npip install https://github.com/barronh/bpch/archive/master.zip\r\n```\r\n\r\nExamples\r\n--------\r\n\r\n### Example Plotting\r\n\r\n1. This example produce a Lat-Lon, time average, mean layer with a log color-scale.\r\n\r\n    ```\r\n    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3  -t mean -l mean --log ctm.bpch\r\n    Successfully created ctm.bpch_IJ-AVG_O3_timemean_layermean_rowall_colall.png\r\n    ```\r\n\r\n2. This example produces a zonal mean, time average plot stopping at 20km (if BOXHEIGHT available) or the 21st layer.\r\n\r\n    ```\r\n    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -t mean -c mean --ymax 20 ctm.bpch\r\n    Successfully created ctm.bpch_IJ-AVG_O3_timemean_layerall_rowall_colmean.png\r\n    ```\r\n\r\n3. This example produces a 1st layer Latitude-Time Hovmoller Diagram. \r\n\r\n    ```\r\n    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -l 0 -c mean ctm.bpch\r\n    Successfully created ctm.bpch_IJ-AVG_O3_timeall_layer0_rowall_colmean.png\r\n    ```\r\n\r\n4. This example produces a 1st layer Longitude-Time Hovmoller Diagram. \r\n\r\n    ```\r\n    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -l 0 -r mean ctm.bpch\r\n    Successfully created ctm.bpch_IJ-AVG_O3_timeall_layer0_rowmean_colall.png\r\n    ```\r\n\r\n5. This example would produce two Ox figures. Both from time 1 (default), but the first file from layer 1 and the second file from layer 2. The first figure has a minimum (max) value of 20 (60) and the second has a minimum (maximum) of 25 (65).\r\n\r\n    ```\r\n    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -n 20 -x 60 -t 0 -l 0 -n 25 -x 65 -t 0 -l 1 ctm.bpch ctm.bpch2\r\n    Successfully created ctm.bpch_IJ-AVG_O3_time0_layer0_rowall_colall.png\r\n    Successfully created ctm.bpch2_IJ-AVG_O3_time0_layer1_rowall_colall.png\r\n    ```\r\n    \r\n6. This example would produce one Ox difference figure with a minimum of -2 and a maximum of 2.\r\n    \r\n    ```\r\n    $ python bpch.py --oldplot -d -g IJ-AVG-$ -v O3 -n -2 -x 2 -t 0 -l 0 ctm.bpch ctm.bpch2\r\n    Successfully created ctm.bpch-ctm.bpch2-diff_IJ-AVG_O3_time0_layer0_rowall_colall.png\r\n    ```\r\n\r\n### Example Python\r\n```\r\nfrom bpch import bpch\r\n\r\nbcfile = bpch('ctm.bpch')\r\nprint gcfile.groups.keys()\r\ngroup = bcfile.groups['IJ-AVG-$']\r\nprint group.variables.keys()\r\nozone = group.variables['O3']\r\nprint ozone.dimensions\r\nprint ozone.units\r\nprint ozone.mean(0).reshape(ozone.shape[1], -1).mean(1)\r\n...\r\n\r\n```", "description_content_type": null, "docs_url": null, "download_url": "http://github.com/barronh/bpch/archive/1.0.zip#bpch-1.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/barronh/bpch", "keywords": "", "license": "UNKNOWN", "maintainer": "", "maintainer_email": "", "name": "bpch", "package_url": "https://pypi.org/project/bpch/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/bpch/", "project_urls": {"Download": "http://github.com/barronh/bpch/archive/1.0.zip#bpch-1.0", "Homepage": "https://github.com/barronh/bpch"}, "release_url": "https://pypi.org/project/bpch/1.0/", "requires_dist": null, "requires_python": null, "summary": "GEOS-Chem Binary Punch File Reader/Plotter/ncdumper", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            bpch\n<br>====\n<br>\n<br>GEOS-Chem Binary Punch File Reader/Plotter/ncdumper\n<br>\n<br>The python-based library for Binary Punch files is designed to provide NetCDF-like access to data in Binary Punch files. In addition, it can be used to produce plots.\n<br>\n<br>Prerequisites\n<br>-------------\n<br>\n<br> * Linux`*`\n<br> * Python &gt;= 2.7\n<br> * numpy &gt;= 1.5\n<br> * matplotlib &gt;= 1.0`**`\n<br> * mpl_toolkits.basemap &gt;= 1.0`***`\n<br>\n<br>`*`Linux is not actually required; Windows and Mac versions have been used. They are not supported.\n<br>\n<br>`**`matplotlib is only required for plotting\n<br>\n<br>`***`basemap is used only if available to add geopolitical boundaries to lat-lon plots.\n<br>\n<br>### Prerequisites via EPD (Mac OS X/Linux/Unix/Windows)\n<br>\n<br>This is the easiest way to get going. All of these prerequisites are available via the &lt;a href=http://www.enthought.com/products/epd.php&gt;Enthought Python Distribution&lt;/a&gt; (EPD). Download their installer and run it. It's that easy. EPD is free for academics, but the edX version is not sufficient (unless combined with virtualenv instructions below). \n<br>\n<br>\n<br>### Prerequisites via virtualenv on Linux/Unix/Mac OS X\n<br>\n<br>If you have a working version of Python 2.7 (or you can get edX from EPD for free) but you don't have root access to install, then I recommend you use &lt;a href=https://pypi.python.org/pypi/virtualenv&gt;virtualenv&lt;/a&gt; by downloading &lt;a href=https://raw.github.com/pypa/virtualenv/master/virtualenv.py&gt;virtualenv.py&lt;/a&gt;. The commands below setting up virtualenv and installing prerequisites:\n<br>\n<br>```\n<br>cd ~\n<br>curl -LO https://raw.github.com/pypa/virtualenv/master/virtualenv.py\n<br>python virtualenv.py aqc\n<br>source aqc/bin/activate\n<br>pip install numpy\n<br>pip install matplotlib\n<br>pip install basemap\n<br>```\n<br>\n<br>Any time you want to use bpch, you'll need to activate virtualenv by running `source bpch/bin/activate`. You'll need to `source bpch/bin/activate`.\n<br>\n<br>Installation\n<br>------------\n<br>\n<br>## First release\n<br>\n<br>```\n<br>pip install bpch\n<br>```\n<br>\n<br>or \n<br>\n<br>```\n<br>pip install http://github.com/barronh/bpch/archive/1.0.zip\n<br>```\n<br>\n<br>## Latest version\n<br>\n<br>```\n<br>pip install https://github.com/barronh/bpch/archive/master.zip\n<br>```\n<br>\n<br>Examples\n<br>--------\n<br>\n<br>### Example Plotting\n<br>\n<br>1. This example produce a Lat-Lon, time average, mean layer with a log color-scale.\n<br>\n<br>    ```\n<br>    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3  -t mean -l mean --log ctm.bpch\n<br>    Successfully created ctm.bpch_IJ-AVG_O3_timemean_layermean_rowall_colall.png\n<br>    ```\n<br>\n<br>2. This example produces a zonal mean, time average plot stopping at 20km (if BOXHEIGHT available) or the 21st layer.\n<br>\n<br>    ```\n<br>    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -t mean -c mean --ymax 20 ctm.bpch\n<br>    Successfully created ctm.bpch_IJ-AVG_O3_timemean_layerall_rowall_colmean.png\n<br>    ```\n<br>\n<br>3. This example produces a 1st layer Latitude-Time Hovmoller Diagram. \n<br>\n<br>    ```\n<br>    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -l 0 -c mean ctm.bpch\n<br>    Successfully created ctm.bpch_IJ-AVG_O3_timeall_layer0_rowall_colmean.png\n<br>    ```\n<br>\n<br>4. This example produces a 1st layer Longitude-Time Hovmoller Diagram. \n<br>\n<br>    ```\n<br>    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -l 0 -r mean ctm.bpch\n<br>    Successfully created ctm.bpch_IJ-AVG_O3_timeall_layer0_rowmean_colall.png\n<br>    ```\n<br>\n<br>5. This example would produce two Ox figures. Both from time 1 (default), but the first file from layer 1 and the second file from layer 2. The first figure has a minimum (max) value of 20 (60) and the second has a minimum (maximum) of 25 (65).\n<br>\n<br>    ```\n<br>    $ python bpch.py --oldplot -g IJ-AVG-$ -v O3 -n 20 -x 60 -t 0 -l 0 -n 25 -x 65 -t 0 -l 1 ctm.bpch ctm.bpch2\n<br>    Successfully created ctm.bpch_IJ-AVG_O3_time0_layer0_rowall_colall.png\n<br>    Successfully created ctm.bpch2_IJ-AVG_O3_time0_layer1_rowall_colall.png\n<br>    ```\n<br>    \n<br>6. This example would produce one Ox difference figure with a minimum of -2 and a maximum of 2.\n<br>    \n<br>    ```\n<br>    $ python bpch.py --oldplot -d -g IJ-AVG-$ -v O3 -n -2 -x 2 -t 0 -l 0 ctm.bpch ctm.bpch2\n<br>    Successfully created ctm.bpch-ctm.bpch2-diff_IJ-AVG_O3_time0_layer0_rowall_colall.png\n<br>    ```\n<br>\n<br>### Example Python\n<br>```\n<br>from bpch import bpch\n<br>\n<br>bcfile = bpch('ctm.bpch')\n<br>print gcfile.groups.keys()\n<br>group = bcfile.groups['IJ-AVG-$']\n<br>print group.variables.keys()\n<br>ozone = group.variables['O3']\n<br>print ozone.dimensions\n<br>print ozone.units\n<br>print ozone.mean(0).reshape(ozone.shape[1], -1).mean(1)\n<br>...\n<br>\n<br>```\n          </div>"}, "last_serial": 966622, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "8f8e957552cd05dcf6bda9f2ef12f630", "sha256": "26cdb75239aca16cc66801cf16cb1d7590a19eac989f7ffde5beda05b1756117"}, "downloads": -1, "filename": "bpch-1.0.tar.gz", "has_sig": false, "md5_digest": "8f8e957552cd05dcf6bda9f2ef12f630", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20159, "upload_time": "2014-01-12T15:29:05", "upload_time_iso_8601": "2014-01-12T15:29:05.413785Z", "url": "https://files.pythonhosted.org/packages/05/52/c2a599490339eeb12ec51126407a3b5ad6189082d6afc9542223adc8ba15/bpch-1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e55b609352f44450b3202bb62554d65b", "sha256": "263202d429514d74705bbd4b46ecd507b4148279cc85eaeda3c3eab36952684c"}, "downloads": -1, "filename": "bpch-1.0.zip", "has_sig": false, "md5_digest": "e55b609352f44450b3202bb62554d65b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21040, "upload_time": "2014-01-12T15:31:28", "upload_time_iso_8601": "2014-01-12T15:31:28.676578Z", "url": "https://files.pythonhosted.org/packages/dd/6e/15b217fdee99b5aa6e7938627f334f4e2c79fffa381cdb6fc6ebf1f5530c/bpch-1.0.zip", "yanked": false}], "1.0rc": []}, "urls": [{"comment_text": "", "digests": {"md5": "8f8e957552cd05dcf6bda9f2ef12f630", "sha256": "26cdb75239aca16cc66801cf16cb1d7590a19eac989f7ffde5beda05b1756117"}, "downloads": -1, "filename": "bpch-1.0.tar.gz", "has_sig": false, "md5_digest": "8f8e957552cd05dcf6bda9f2ef12f630", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20159, "upload_time": "2014-01-12T15:29:05", "upload_time_iso_8601": "2014-01-12T15:29:05.413785Z", "url": "https://files.pythonhosted.org/packages/05/52/c2a599490339eeb12ec51126407a3b5ad6189082d6afc9542223adc8ba15/bpch-1.0.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "e55b609352f44450b3202bb62554d65b", "sha256": "263202d429514d74705bbd4b46ecd507b4148279cc85eaeda3c3eab36952684c"}, "downloads": -1, "filename": "bpch-1.0.zip", "has_sig": false, "md5_digest": "e55b609352f44450b3202bb62554d65b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21040, "upload_time": "2014-01-12T15:31:28", "upload_time_iso_8601": "2014-01-12T15:31:28.676578Z", "url": "https://files.pythonhosted.org/packages/dd/6e/15b217fdee99b5aa6e7938627f334f4e2c79fffa381cdb6fc6ebf1f5530c/bpch-1.0.zip", "yanked": false}], "timestamp": "Thu May  7 22:36:29 2020"}