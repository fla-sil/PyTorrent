{"info": {"author": "Microsec ltd.", "author_email": "development@passbyme.com", "bugtrack_url": null, "classifiers": [], "description": "PassBy[ME] Mobile ID client\r\n===========================\r\n\r\nThis library provides you with functionality to handle PassBy[ME]\r\nmessages.\r\n\r\nFor further information on PassBy[ME] please visit:\r\n`www.passbyme.com <https://www.passbyme.com>`__ and sign up for a free\r\naccount. You can download our API documentation after login.\r\n\r\nTable of contents\r\n=================\r\n\r\n-  `Installation <#installation>`__\r\n-  `Usage <#usage>`__\r\n\r\n   -  `PassByME2FAClient <#passbyme2faclient>`__\r\n   -  `Handling messages <#handling-messages>`__\r\n\r\n      -  `Sending messages <#sending-messages>`__\r\n      -  `Tracking messages <#tracking-messages>`__\r\n      -  `Cancelling messages <#cancelling-messages>`__\r\n      -  `SessionInfo <#sessioninfo>`__\r\n\r\n   -  `Errors <#errors>`__\r\n\r\n      -  `HTTPError <#httperror>`__\r\n      -  `PassByMEError <#passbymeerror>`__\r\n\r\n-  `Build <#build>`__\r\n-  `Release History <#release-history>`__\r\n\r\nInstallation\r\n============\r\n\r\nMinimum required Python version is 2.7.9.\r\n\r\n::\r\n\r\n    pip install passbyme2fa_client\r\n\r\nUsage\r\n=====\r\n\r\nTo use the PassBy[ME] Mobile ID SDK first you have to acquire the\r\nfollowing:\r\n\r\n-  Account authentication PEM file and its password\r\n\r\nYou can get these after registering at\r\n`www.passbyme.com <https://www.passbyme.com>`__, by hitting the \"Sign up\r\nfor free\" button. To complete the registration you will need an Android,\r\niOS or Windows Phone device with the PassBy[ME] application installed.\r\n\r\nIf you login after registration you can download the PEM from the\r\nApplication menu. You can add new applications to your registration by\r\nhitting the \"New application\". The application (along with its\r\nApplication Id) will appear in the table below.\r\n\r\n*We suggest you to read the available User Guides and API documentation\r\nbefore you continue with the integration. You can download these from\r\nthe Documentation section of the administration website after login.*\r\n\r\nPassByME2FAClient\r\n-----------------\r\n\r\n.. code:: python\r\n\r\n    from passbyme2fa_client import *\r\n\r\n    pbm = PassByME2FAClient(\r\n      key = \"auth.pem\",\r\n      cert = \"auth.pem\",\r\n      password = \"<auth.pem password>\"\r\n    )\r\n\r\nThe **PassByME2FAClient** constructor accepts the following parameters:\r\n\r\n-  **key**: the path of the authentication key PEM file.\r\n-  **cert**: the path of the authentication certificate PEM file. (May\r\n   be the same as **key** if the PEM file contains both the certificate\r\n   and the key.)\r\n-  **address**: The address of the PassBy[ME] service to use. This\r\n   parameter is optional. by default the SDK will connect to\r\n   auth-sp.passbyme.com.\r\n\r\nThrows a\r\n`ValueError <https://docs.python.org/3/library/exceptions.html#ValueError>`__\r\nwhen a required parameter is missing.\r\n\r\nHandling Messages\r\n-----------------\r\n\r\nSending messages\r\n~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n    session_info = pbm.send_message(\r\n      recipients = [\"test@pers.on\"],\r\n      availability = 300,\r\n      type = PassByME2FAClient.MessageType.AUTHORIZATION,\r\n      subject = \"Test subject\", body = \"Test message\"\r\n    )\r\n\r\nThe **send\\_message** method accepts the following parameters:\r\n\r\n-  **recipients**: An array containing the PassBy[ME] ID-s of the\r\n   recipients\r\n-  **subject**: The subject of the message\r\n-  **body**: The body of the message\r\n-  **availability**: The availability of the message in seconds\r\n-  **type**: One of the following types:\r\n\r\n   -  **PassByME2FAClient.MessageType.AUTHORIZATION** - for\r\n      authorization requests\r\n   -  **PassByME2FAClient.MessageType.MESSAGE** - to send a general\r\n      message with arbitrary body\r\n   -  **PassByME2FAClient.MessageType.ESIGN** - if the message body\r\n      contains an esign url\r\n\r\nWhen successful, returns a `SessionInfo <#sessioninfo>`__ object.\r\n\r\nThrows a\r\n`ValueError <https://docs.python.org/3/library/exceptions.html#ValueError>`__\r\nwhen a required parameter is missing. Throws an\r\n`HTTPError <#httperror>`__ if an error in HTTP communication occurs.\r\n**HTTPError.response** contains the HTTP response. Throws a\r\n`PassByMEError <#passbymeerror>`__ if a PassBy[ME] specific error\r\noccurs. **PassByMEError.response** contains the JSON response received\r\nfrom the PassBy[ME] server as a dictionary.\r\n\r\nTracking messages\r\n~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n    session_info.refresh()\r\n\r\nTo track messages, the most efficient way is to call\r\n**SessionInfo.refresh()**. After a successful call, the\r\n`SessionInfo <#sessionInfo>`__ object will contain up-to-date\r\ninformation about the message.\r\n\r\nThrows an `HTTPError <#httperror>`__ if an error in HTTP communication\r\noccurs. Throws a `PassByMEError <#passbymeerror>`__ if a PassBy[ME]\r\nspecific error occurs.\r\n\r\nCancelling messages\r\n~~~~~~~~~~~~~~~~~~~\r\n\r\n.. code:: python\r\n\r\n    session_info.cancel()\r\n\r\nTo cancel the message, the most efficient way is to call\r\n**SessionInfo.cancel()**. After a successful call, the message will be\r\ncancelled and the `SessionInfo <#sessionInfo>`__ object will contain\r\nup-to-date information about the message.\r\n\r\nThrows an `HTTPError <#httperror>`__ if an error in HTTP communication\r\noccurs. Throws a `PassByMEError <#passbymeerror>`__ if a PassBy[ME]\r\nspecific error occurs.\r\n\r\nSessionInfo\r\n~~~~~~~~~~~\r\n\r\nThe **SessionInfo** object describes the state of a message session. It\r\nconsists of the following attributes:\r\n\r\n-  **message\\_id**: The id of the message that can be used to reference\r\n   the message\r\n-  **expiration\\_date**: The date and time (as an\r\n   `Arrow <http://crsmithdev.com/arrow/#arrow.arrow.Arrow>`__ object)\r\n   until which the message can be downloaded with the PassBy[ME]\r\n   applications\r\n-  **recipient\\_statuses**: An array of **RecipientStatus** objects.\r\n   Each object consist of the following fields:\r\n\r\n   -  **user\\_id**: The PassBy[ME] ID of the user represented by this\r\n      recipient object\r\n   -  **status**: The delivery status of this message for this user\r\n\r\nAvailable statuses are (all constants available as\r\n**PassByME2FAClient.MessageStatus.**\\ \\*):\r\n\r\n-  **PENDING**: Initial status of the message.\r\n-  **NOTIFIED**: The recipient has been notified about a new message.\r\n-  **DOWNLOADED**: The recipient has downloaded the message, but has not\r\n   uploaded the evidence yet.\r\n-  **SEEN**: The recipient has seen the message and uploaded the\r\n   evidence.\r\n-  **NOT\\_SEEN**: The recipient has not seen the message.\r\n-  **NOT\\_NOTIFIED**: The recipient has not received the notification.\r\n-  **NOT\\_DOWNLOADED**: The recipient received the notification about\r\n   the message but has not downloaded the message\r\n-  **NO\\_DEVICE**: The message could not be sent because the recipient\r\n   had no PassBy[ME] ready device that supports messaging.\r\n-  **FAILED**: The message could not be sent because of an error.\r\n-  **DISABLED**: The message could not be sent because the recipient is\r\n   disabled.\r\n-  **CANCELLED**: The message was cancelled by the sender.\r\n-  **APPROVED**: Authentication has finished successfully.\r\n-  **DENIED**: The user has cancelled the authentication.\r\n\r\nErrors\r\n------\r\n\r\nHTTPError\r\n~~~~~~~~~\r\n\r\nDenotes that the server responded with a HTTP error code. Its readable\r\n**response** attribute contains the\r\n`HTTPResponse <https://docs.python.org/3/library/http.client.html#http.client.HTTPResponse>`__\r\nreceived from the server.\r\n\r\nPassByMEError\r\n~~~~~~~~~~~~~\r\n\r\nDenotes a PassBy[ME] specific error. See the API documentation for the\r\npossible error codes. Its readable **response** attribute contains the\r\nJSON message received from the server as a dictionary.\r\n\r\nBuild\r\n=====\r\n\r\nTo build the package, first we have to run our tests, which can be done\r\ntyping\r\n\r\n::\r\n\r\n    python setup.py test\r\n\r\nIf the tests all pass, we can create the distribution package using the\r\ncommand\r\n\r\n::\r\n\r\n    python setup.py sdist\r\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/microsec/passbyme2fa-client-python", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.passbyme.com/", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "passbyme2fa_client", "package_url": "https://pypi.org/project/passbyme2fa_client/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/passbyme2fa_client/", "project_urls": {"Download": "https://github.com/microsec/passbyme2fa-client-python", "Homepage": "https://www.passbyme.com/"}, "release_url": "https://pypi.org/project/passbyme2fa_client/1.0.7/", "requires_dist": null, "requires_python": null, "summary": "Messaging SDK for PassBy[ME] Mobile ID solution", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"passby-me-mobile-id-client\">\n<h2>PassBy[ME] Mobile ID client</h2>\n<p>This library provides you with functionality to handle PassBy[ME]\nmessages.</p>\n<p>For further information on PassBy[ME] please visit:\n<a href=\"https://www.passbyme.com\" rel=\"nofollow\">www.passbyme.com</a> and sign up for a free\naccount. You can download our API documentation after login.</p>\n</div>\n<div id=\"table-of-contents\">\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#passbyme2faclient\" rel=\"nofollow\">PassByME2FAClient</a></li>\n<li><a href=\"#handling-messages\" rel=\"nofollow\">Handling messages</a><ul>\n<li><a href=\"#sending-messages\" rel=\"nofollow\">Sending messages</a></li>\n<li><a href=\"#tracking-messages\" rel=\"nofollow\">Tracking messages</a></li>\n<li><a href=\"#cancelling-messages\" rel=\"nofollow\">Cancelling messages</a></li>\n<li><a href=\"#sessioninfo\" rel=\"nofollow\">SessionInfo</a></li>\n</ul>\n</li>\n<li><a href=\"#errors\" rel=\"nofollow\">Errors</a><ul>\n<li><a href=\"#httperror\" rel=\"nofollow\">HTTPError</a></li>\n<li><a href=\"#passbymeerror\" rel=\"nofollow\">PassByMEError</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li><a href=\"#build\" rel=\"nofollow\">Build</a></li>\n<li><a href=\"#release-history\" rel=\"nofollow\">Release History</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Minimum required Python version is 2.7.9.</p>\n<pre>pip install passbyme2fa_client\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use the PassBy[ME] Mobile ID SDK first you have to acquire the\nfollowing:</p>\n<ul>\n<li>Account authentication PEM file and its password</li>\n</ul>\n<p>You can get these after registering at\n<a href=\"https://www.passbyme.com\" rel=\"nofollow\">www.passbyme.com</a>, by hitting the \u201cSign up\nfor free\u201d button. To complete the registration you will need an Android,\niOS or Windows Phone device with the PassBy[ME] application installed.</p>\n<p>If you login after registration you can download the PEM from the\nApplication menu. You can add new applications to your registration by\nhitting the \u201cNew application\u201d. The application (along with its\nApplication Id) will appear in the table below.</p>\n<p><em>We suggest you to read the available User Guides and API documentation\nbefore you continue with the integration. You can download these from\nthe Documentation section of the administration website after login.</em></p>\n<div id=\"passbyme2faclient\">\n<h3>PassByME2FAClient</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">passbyme2fa_client</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">pbm</span> <span class=\"o\">=</span> <span class=\"n\">PassByME2FAClient</span><span class=\"p\">(</span>\n  <span class=\"n\">key</span> <span class=\"o\">=</span> <span class=\"s2\">\"auth.pem\"</span><span class=\"p\">,</span>\n  <span class=\"n\">cert</span> <span class=\"o\">=</span> <span class=\"s2\">\"auth.pem\"</span><span class=\"p\">,</span>\n  <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;auth.pem password&gt;\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The <strong>PassByME2FAClient</strong> constructor accepts the following parameters:</p>\n<ul>\n<li><strong>key</strong>: the path of the authentication key PEM file.</li>\n<li><strong>cert</strong>: the path of the authentication certificate PEM file. (May\nbe the same as <strong>key</strong> if the PEM file contains both the certificate\nand the key.)</li>\n<li><strong>address</strong>: The address of the PassBy[ME] service to use. This\nparameter is optional. by default the SDK will connect to\nauth-sp.passbyme.com.</li>\n</ul>\n<p>Throws a\n<a href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" rel=\"nofollow\">ValueError</a>\nwhen a required parameter is missing.</p>\n</div>\n<div id=\"handling-messages\">\n<h3>Handling Messages</h3>\n<div id=\"sending-messages\">\n<h4>Sending messages</h4>\n<pre><span class=\"n\">session_info</span> <span class=\"o\">=</span> <span class=\"n\">pbm</span><span class=\"o\">.</span><span class=\"n\">send_message</span><span class=\"p\">(</span>\n  <span class=\"n\">recipients</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"test@pers.on\"</span><span class=\"p\">],</span>\n  <span class=\"n\">availability</span> <span class=\"o\">=</span> <span class=\"mi\">300</span><span class=\"p\">,</span>\n  <span class=\"nb\">type</span> <span class=\"o\">=</span> <span class=\"n\">PassByME2FAClient</span><span class=\"o\">.</span><span class=\"n\">MessageType</span><span class=\"o\">.</span><span class=\"n\">AUTHORIZATION</span><span class=\"p\">,</span>\n  <span class=\"n\">subject</span> <span class=\"o\">=</span> <span class=\"s2\">\"Test subject\"</span><span class=\"p\">,</span> <span class=\"n\">body</span> <span class=\"o\">=</span> <span class=\"s2\">\"Test message\"</span>\n<span class=\"p\">)</span>\n</pre>\n<p>The <strong>send_message</strong> method accepts the following parameters:</p>\n<ul>\n<li><strong>recipients</strong>: An array containing the PassBy[ME] ID-s of the\nrecipients</li>\n<li><strong>subject</strong>: The subject of the message</li>\n<li><strong>body</strong>: The body of the message</li>\n<li><strong>availability</strong>: The availability of the message in seconds</li>\n<li><strong>type</strong>: One of the following types:<ul>\n<li><strong>PassByME2FAClient.MessageType.AUTHORIZATION</strong> - for\nauthorization requests</li>\n<li><strong>PassByME2FAClient.MessageType.MESSAGE</strong> - to send a general\nmessage with arbitrary body</li>\n<li><strong>PassByME2FAClient.MessageType.ESIGN</strong> - if the message body\ncontains an esign url</li>\n</ul>\n</li>\n</ul>\n<p>When successful, returns a <a href=\"#sessioninfo\" rel=\"nofollow\">SessionInfo</a> object.</p>\n<p>Throws a\n<a href=\"https://docs.python.org/3/library/exceptions.html#ValueError\" rel=\"nofollow\">ValueError</a>\nwhen a required parameter is missing. Throws an\n<a href=\"#httperror\" rel=\"nofollow\">HTTPError</a> if an error in HTTP communication occurs.\n<strong>HTTPError.response</strong> contains the HTTP response. Throws a\n<a href=\"#passbymeerror\" rel=\"nofollow\">PassByMEError</a> if a PassBy[ME] specific error\noccurs. <strong>PassByMEError.response</strong> contains the JSON response received\nfrom the PassBy[ME] server as a dictionary.</p>\n</div>\n<div id=\"tracking-messages\">\n<h4>Tracking messages</h4>\n<pre><span class=\"n\">session_info</span><span class=\"o\">.</span><span class=\"n\">refresh</span><span class=\"p\">()</span>\n</pre>\n<p>To track messages, the most efficient way is to call\n<strong>SessionInfo.refresh()</strong>. After a successful call, the\n<a href=\"#sessionInfo\" rel=\"nofollow\">SessionInfo</a> object will contain up-to-date\ninformation about the message.</p>\n<p>Throws an <a href=\"#httperror\" rel=\"nofollow\">HTTPError</a> if an error in HTTP communication\noccurs. Throws a <a href=\"#passbymeerror\" rel=\"nofollow\">PassByMEError</a> if a PassBy[ME]\nspecific error occurs.</p>\n</div>\n<div id=\"cancelling-messages\">\n<h4>Cancelling messages</h4>\n<pre><span class=\"n\">session_info</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">()</span>\n</pre>\n<p>To cancel the message, the most efficient way is to call\n<strong>SessionInfo.cancel()</strong>. After a successful call, the message will be\ncancelled and the <a href=\"#sessionInfo\" rel=\"nofollow\">SessionInfo</a> object will contain\nup-to-date information about the message.</p>\n<p>Throws an <a href=\"#httperror\" rel=\"nofollow\">HTTPError</a> if an error in HTTP communication\noccurs. Throws a <a href=\"#passbymeerror\" rel=\"nofollow\">PassByMEError</a> if a PassBy[ME]\nspecific error occurs.</p>\n</div>\n<div id=\"sessioninfo\">\n<h4>SessionInfo</h4>\n<p>The <strong>SessionInfo</strong> object describes the state of a message session. It\nconsists of the following attributes:</p>\n<ul>\n<li><strong>message_id</strong>: The id of the message that can be used to reference\nthe message</li>\n<li><strong>expiration_date</strong>: The date and time (as an\n<a href=\"http://crsmithdev.com/arrow/#arrow.arrow.Arrow\" rel=\"nofollow\">Arrow</a> object)\nuntil which the message can be downloaded with the PassBy[ME]\napplications</li>\n<li><strong>recipient_statuses</strong>: An array of <strong>RecipientStatus</strong> objects.\nEach object consist of the following fields:<ul>\n<li><strong>user_id</strong>: The PassBy[ME] ID of the user represented by this\nrecipient object</li>\n<li><strong>status</strong>: The delivery status of this message for this user</li>\n</ul>\n</li>\n</ul>\n<p>Available statuses are (all constants available as\n<strong>PassByME2FAClient.MessageStatus.</strong>*):</p>\n<ul>\n<li><strong>PENDING</strong>: Initial status of the message.</li>\n<li><strong>NOTIFIED</strong>: The recipient has been notified about a new message.</li>\n<li><strong>DOWNLOADED</strong>: The recipient has downloaded the message, but has not\nuploaded the evidence yet.</li>\n<li><strong>SEEN</strong>: The recipient has seen the message and uploaded the\nevidence.</li>\n<li><strong>NOT_SEEN</strong>: The recipient has not seen the message.</li>\n<li><strong>NOT_NOTIFIED</strong>: The recipient has not received the notification.</li>\n<li><strong>NOT_DOWNLOADED</strong>: The recipient received the notification about\nthe message but has not downloaded the message</li>\n<li><strong>NO_DEVICE</strong>: The message could not be sent because the recipient\nhad no PassBy[ME] ready device that supports messaging.</li>\n<li><strong>FAILED</strong>: The message could not be sent because of an error.</li>\n<li><strong>DISABLED</strong>: The message could not be sent because the recipient is\ndisabled.</li>\n<li><strong>CANCELLED</strong>: The message was cancelled by the sender.</li>\n<li><strong>APPROVED</strong>: Authentication has finished successfully.</li>\n<li><strong>DENIED</strong>: The user has cancelled the authentication.</li>\n</ul>\n</div>\n</div>\n<div id=\"errors\">\n<h3>Errors</h3>\n<div id=\"httperror\">\n<h4>HTTPError</h4>\n<p>Denotes that the server responded with a HTTP error code. Its readable\n<strong>response</strong> attribute contains the\n<a href=\"https://docs.python.org/3/library/http.client.html#http.client.HTTPResponse\" rel=\"nofollow\">HTTPResponse</a>\nreceived from the server.</p>\n</div>\n<div id=\"passbymeerror\">\n<h4>PassByMEError</h4>\n<p>Denotes a PassBy[ME] specific error. See the API documentation for the\npossible error codes. Its readable <strong>response</strong> attribute contains the\nJSON message received from the server as a dictionary.</p>\n</div>\n</div>\n</div>\n<div id=\"build\">\n<h2>Build</h2>\n<p>To build the package, first we have to run our tests, which can be done\ntyping</p>\n<pre>python setup.py test\n</pre>\n<p>If the tests all pass, we can create the distribution package using the\ncommand</p>\n<pre>python setup.py sdist\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2585255, "releases": {"1.0.4": [{"comment_text": "", "digests": {"md5": "2ef5ffc0055a7e19afe711940c165a89", "sha256": "621fddf0568112251fbb155e7cba6644b93dc9a7adcece6a403f05969ca3eda6"}, "downloads": -1, "filename": "passbyme2fa_client-1.0.4.tar.gz", "has_sig": false, "md5_digest": "2ef5ffc0055a7e19afe711940c165a89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20535, "upload_time": "2017-01-19T14:47:26", "upload_time_iso_8601": "2017-01-19T14:47:26.220485Z", "url": "https://files.pythonhosted.org/packages/4e/7f/009b942d5ba7d05715232484df196d2b06c0642788c64beb17105ca604c9/passbyme2fa_client-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "5259b5cf5b9262225d3581281823a6f7", "sha256": "fb90bf1296c5d5ab4e724bda07ad614f50e479513050f6f4c168b529b4f13db8"}, "downloads": -1, "filename": "passbyme2fa_client-1.0.5.tar.gz", "has_sig": false, "md5_digest": "5259b5cf5b9262225d3581281823a6f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20551, "upload_time": "2017-01-19T15:08:42", "upload_time_iso_8601": "2017-01-19T15:08:42.960269Z", "url": "https://files.pythonhosted.org/packages/15/bc/1490699099628c8eaa7ff012adf9a8390cd5766d269ed5976bcf0ee33d1d/passbyme2fa_client-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "c20c17a4250ec31e8eadadc07f4502fd", "sha256": "3c00fefad84542629febc5b4935050a556e984969b56880382f5451b5707174a"}, "downloads": -1, "filename": "passbyme2fa_client-1.0.6.tar.gz", "has_sig": false, "md5_digest": "c20c17a4250ec31e8eadadc07f4502fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20535, "upload_time": "2017-01-19T15:19:11", "upload_time_iso_8601": "2017-01-19T15:19:11.725603Z", "url": "https://files.pythonhosted.org/packages/f8/55/c8cee9816ee2d2f0902ae2109a22fce6dcf21d14ead44705390d158f3e76/passbyme2fa_client-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "995253c99caf73d28c0299e5a2553ff1", "sha256": "e4a6ba6a5ff2067b02a6851edc54422c14843d3705ce8b13b9e9315a37ec18be"}, "downloads": -1, "filename": "passbyme2fa_client-1.0.7.tar.gz", "has_sig": false, "md5_digest": "995253c99caf73d28c0299e5a2553ff1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20627, "upload_time": "2017-01-19T15:32:45", "upload_time_iso_8601": "2017-01-19T15:32:45.789686Z", "url": "https://files.pythonhosted.org/packages/5e/0a/4c2a23be29e23112bf964365ecdbc651ab7c58fee73fa7b79b7894579cfa/passbyme2fa_client-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "995253c99caf73d28c0299e5a2553ff1", "sha256": "e4a6ba6a5ff2067b02a6851edc54422c14843d3705ce8b13b9e9315a37ec18be"}, "downloads": -1, "filename": "passbyme2fa_client-1.0.7.tar.gz", "has_sig": false, "md5_digest": "995253c99caf73d28c0299e5a2553ff1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20627, "upload_time": "2017-01-19T15:32:45", "upload_time_iso_8601": "2017-01-19T15:32:45.789686Z", "url": "https://files.pythonhosted.org/packages/5e/0a/4c2a23be29e23112bf964365ecdbc651ab7c58fee73fa7b79b7894579cfa/passbyme2fa_client-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:07 2020"}