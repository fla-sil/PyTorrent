{"info": {"author": "Martijn Faassen / Izhar Firdaus", "author_email": "faassen@startifact.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "hurry.datalink\n****************************\n\nIntroduction\n============\n\n\n\nHow to use?\n===========\n\nYou can import hurry.datalink from ``hurry.datalink`` and ``.need`` it\nwhere you want these resources to be included on a page::\n\n  from hurry.datalink import datalink\n\n  .. in your page or widget rendering code, somewhere ..\n\n  datalink.need()\n\nThis requires integration between your web framework and\n``hurry.resource``, and making sure that the original resources\n(shipped in the ``datalink-build`` directory in ``hurry.datalink``)\nare published to some URL.\n\nThe package has already been integrated for Grok_ and the Zope\nToolkit. If you depend on the `hurry.zoperesource`_ package in your\n``setup.py``, the above example should work out of the box. Make sure\nto depend on the `hurry.zoperesource`_ package in your ``setup.py``.\n\n.. _`hurry.zoperesource`: http://pypi.python.org/pypi/hurry.zoperesource\n\n.. _Grok: http://grok.zope.org\n\nPreparing hurry.datalink before release\n====================================================\n\nThis section is only relevant to release managers of ``hurry.datalink``.\n\nWhen releasing ``hurry.datalink``, an extra step should be\ntaken. Follow the regular package `release instructions`_, but before\negg generation (``python setup.py register sdist upload``) first\nexecute ``bin/datalinkprepare <version number>``, where version number\nis the version of the release, such as ``1.0.1``. This will\ndownload the hurry.datalink library of that version and place it in the\negg.\n\n.. _`release instructions`: http://grok.zope.org/documentation/how-to/releasing-software\n\nCHANGES\n*******\n\nDownload\n********", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "hurry.datalink", "package_url": "https://pypi.org/project/hurry.datalink/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/hurry.datalink/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/hurry.datalink/0.1/", "requires_dist": null, "requires_python": null, "summary": "hurry.resource for JQuery Datalink", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"hurry-datalink\">\n<h2>hurry.datalink</h2>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n</div>\n<div id=\"how-to-use\">\n<h3>How to use?</h3>\n<p>You can import hurry.datalink from <tt>hurry.datalink</tt> and <tt>.need</tt> it\nwhere you want these resources to be included on a page:</p>\n<pre>from hurry.datalink import datalink\n\n.. in your page or widget rendering code, somewhere ..\n\ndatalink.need()\n</pre>\n<p>This requires integration between your web framework and\n<tt>hurry.resource</tt>, and making sure that the original resources\n(shipped in the <tt><span class=\"pre\">datalink-build</span></tt> directory in <tt>hurry.datalink</tt>)\nare published to some URL.</p>\n<p>The package has already been integrated for <a href=\"http://grok.zope.org\" rel=\"nofollow\">Grok</a> and the Zope\nToolkit. If you depend on the <a href=\"http://pypi.python.org/pypi/hurry.zoperesource\" rel=\"nofollow\">hurry.zoperesource</a> package in your\n<tt>setup.py</tt>, the above example should work out of the box. Make sure\nto depend on the <a href=\"http://pypi.python.org/pypi/hurry.zoperesource\" rel=\"nofollow\">hurry.zoperesource</a> package in your <tt>setup.py</tt>.</p>\n</div>\n<div id=\"preparing-hurry-datalink-before-release\">\n<h3>Preparing hurry.datalink before release</h3>\n<p>This section is only relevant to release managers of <tt>hurry.datalink</tt>.</p>\n<p>When releasing <tt>hurry.datalink</tt>, an extra step should be\ntaken. Follow the regular package <a href=\"http://grok.zope.org/documentation/how-to/releasing-software\" rel=\"nofollow\">release instructions</a>, but before\negg generation (<tt>python setup.py register sdist upload</tt>) first\nexecute <tt>bin/datalinkprepare &lt;version number&gt;</tt>, where version number\nis the version of the release, such as <tt>1.0.1</tt>. This will\ndownload the hurry.datalink library of that version and place it in the\negg.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n</div>\n<div id=\"download\">\n<h2>Download</h2>\n</div>\n\n          </div>"}, "last_serial": 793113, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7e220342f4f968350d5d5280b0e1df2b", "sha256": "bf46d37371453320ba87019f1dce8d5b48508ff764fa6def141c215ea85588a5"}, "downloads": -1, "filename": "hurry.datalink-0.1.tar.gz", "has_sig": false, "md5_digest": "7e220342f4f968350d5d5280b0e1df2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2010-11-15T20:25:22", "upload_time_iso_8601": "2010-11-15T20:25:22.726101Z", "url": "https://files.pythonhosted.org/packages/88/1e/6750dfa3937e7814691bf29278dff3fbfa37b2f393721b8dfc3570222a7d/hurry.datalink-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7e220342f4f968350d5d5280b0e1df2b", "sha256": "bf46d37371453320ba87019f1dce8d5b48508ff764fa6def141c215ea85588a5"}, "downloads": -1, "filename": "hurry.datalink-0.1.tar.gz", "has_sig": false, "md5_digest": "7e220342f4f968350d5d5280b0e1df2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6988, "upload_time": "2010-11-15T20:25:22", "upload_time_iso_8601": "2010-11-15T20:25:22.726101Z", "url": "https://files.pythonhosted.org/packages/88/1e/6750dfa3937e7814691bf29278dff3fbfa37b2f393721b8dfc3570222a7d/hurry.datalink-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:46 2020"}