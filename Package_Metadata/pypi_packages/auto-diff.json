{"info": {"author": "Parth Nobel", "author_email": "parthnobel@berkeley.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# auto_diff\nAn automatic differentiation library for Python+NumPy\n\n## How To Use\nThere are four public elements of the API:\n\n * `AutoDiff` is a context manager and must be entered with a with statement.\nThe `__enter__` method returns a new version of x that must be used to instead of the x passed as a parameter to the `AutoDiff` constructor.\n\n * `value`, `jacobian`, `get_value_and_jacobian`, these functions, which must be\n called in an `AutoDiff` context, extract the value, Jacobian, or both from a\n dependent variable.\n\nIf you are using `get_value_and_jacobian`, x must be a 2D column vector, and\nthe value you must be parsing for the derivative must also be a 2D column\nvector. In most other cases, how to convert to a Jacobian Matrix is\nnon-obvious. If you wish to deal with those cases see the paragraph after the\nexample.\n\n### Example\n```python\nimport auto_diff\nimport numpy as np\n\n# Define a function f\n# f can have other constant arguments, if they are constant wrt x\n# Define the input vector, x\n\nwith auto_diff.AutoDiff(x) as x:\n    f_eval = f(x, u)\n    y, Jf = auto_diff.get_value_and_jacobian(f_eval)\n\n# y is the value of f(x, u) and Jf is the Jacobian of f with respect to x.\n```\n\nWe can also differentiate functions from arbitrarily shaped numpy arrays to\narbitrarily shaped outputs. Let `y = f(x)`, where `x` is a numpy array of shape\n`x.shape`, and `y` is is the output of the function we wish to differentiate, `f`.\n\nWe can then access a numpy array of shape `(*y.shape, *x.shape)`, by accessing\n`y.der`. This represents the gradients of each component of `y` with respect to\n`x`. To find the gradient of the norm of a vector x, for example one can do\n\n```python\nimport auto_diff\nimport numpy as np\nx = np.array([[np.pi], [3.0], [17.0]])\n\nwith auto_diff.AutoDiff(x) as x:\n    print(np.linalg.norm(x).der)\n```\n\n## Restrictions\n\n* You must import numpy and use that object, rather then do something like\n``from numpy import ...``, where ``...`` is either `*` or just function names.\n\nCrashes, Bug Reports, and Feedback:\nEmail `parthnobel@berkeley.edu`\n\n\nThere are missing features right now. I'm working on them, feel free to email me\nif you want something prioritized.\n\n## Prerequisite\nA version of NumPy >= 1.17 may be required. Bugs on older versions have always\nraised errors, so there should be nothing to worry about.\n\nAuthor: Parth Nobel (Github: /PTNobel, parthnobel@berkeley.edu)\nVersion: 0.3\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PTNobel/autodiff", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "auto-diff", "package_url": "https://pypi.org/project/auto-diff/", "platform": "", "project_url": "https://pypi.org/project/auto-diff/", "project_urls": {"Homepage": "https://github.com/PTNobel/autodiff"}, "release_url": "https://pypi.org/project/auto-diff/0.3.4/", "requires_dist": ["numpy (>=1.17)"], "requires_python": ">=3.8", "summary": "An automatic differentiation library for Python+NumPy.", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>auto_diff</h1>\n<p>An automatic differentiation library for Python+NumPy</p>\n<h2>How To Use</h2>\n<p>There are four public elements of the API:</p>\n<ul>\n<li>\n<p><code>AutoDiff</code> is a context manager and must be entered with a with statement.\nThe <code>__enter__</code> method returns a new version of x that must be used to instead of the x passed as a parameter to the <code>AutoDiff</code> constructor.</p>\n</li>\n<li>\n<p><code>value</code>, <code>jacobian</code>, <code>get_value_and_jacobian</code>, these functions, which must be\ncalled in an <code>AutoDiff</code> context, extract the value, Jacobian, or both from a\ndependent variable.</p>\n</li>\n</ul>\n<p>If you are using <code>get_value_and_jacobian</code>, x must be a 2D column vector, and\nthe value you must be parsing for the derivative must also be a 2D column\nvector. In most other cases, how to convert to a Jacobian Matrix is\nnon-obvious. If you wish to deal with those cases see the paragraph after the\nexample.</p>\n<h3>Example</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">auto_diff</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"c1\"># Define a function f</span>\n<span class=\"c1\"># f can have other constant arguments, if they are constant wrt x</span>\n<span class=\"c1\"># Define the input vector, x</span>\n\n<span class=\"k\">with</span> <span class=\"n\">auto_diff</span><span class=\"o\">.</span><span class=\"n\">AutoDiff</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">x</span><span class=\"p\">:</span>\n    <span class=\"n\">f_eval</span> <span class=\"o\">=</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"p\">)</span>\n    <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">Jf</span> <span class=\"o\">=</span> <span class=\"n\">auto_diff</span><span class=\"o\">.</span><span class=\"n\">get_value_and_jacobian</span><span class=\"p\">(</span><span class=\"n\">f_eval</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># y is the value of f(x, u) and Jf is the Jacobian of f with respect to x.</span>\n</pre>\n<p>We can also differentiate functions from arbitrarily shaped numpy arrays to\narbitrarily shaped outputs. Let <code>y = f(x)</code>, where <code>x</code> is a numpy array of shape\n<code>x.shape</code>, and <code>y</code> is is the output of the function we wish to differentiate, <code>f</code>.</p>\n<p>We can then access a numpy array of shape <code>(*y.shape, *x.shape)</code>, by accessing\n<code>y.der</code>. This represents the gradients of each component of <code>y</code> with respect to\n<code>x</code>. To find the gradient of the norm of a vector x, for example one can do</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">auto_diff</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([[</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">3.0</span><span class=\"p\">],</span> <span class=\"p\">[</span><span class=\"mf\">17.0</span><span class=\"p\">]])</span>\n\n<span class=\"k\">with</span> <span class=\"n\">auto_diff</span><span class=\"o\">.</span><span class=\"n\">AutoDiff</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">x</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linalg</span><span class=\"o\">.</span><span class=\"n\">norm</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">der</span><span class=\"p\">)</span>\n</pre>\n<h2>Restrictions</h2>\n<ul>\n<li>You must import numpy and use that object, rather then do something like\n<code>from numpy import ...</code>, where <code>...</code> is either <code>*</code> or just function names.</li>\n</ul>\n<p>Crashes, Bug Reports, and Feedback:\nEmail <code>parthnobel@berkeley.edu</code></p>\n<p>There are missing features right now. I'm working on them, feel free to email me\nif you want something prioritized.</p>\n<h2>Prerequisite</h2>\n<p>A version of NumPy &gt;= 1.17 may be required. Bugs on older versions have always\nraised errors, so there should be nothing to worry about.</p>\n<p>Author: Parth Nobel (Github: /PTNobel, <a href=\"mailto:parthnobel@berkeley.edu\">parthnobel@berkeley.edu</a>)\nVersion: 0.3</p>\n\n          </div>"}, "last_serial": 7167759, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "a7fa3d8d9192d509d1fd65efb0ab81f2", "sha256": "22142b6ac860e76de5cddd26396319a80359e13609abb33b69a68ad682798354"}, "downloads": -1, "filename": "auto_diff-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a7fa3d8d9192d509d1fd65efb0ab81f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11294, "upload_time": "2020-01-28T03:51:29", "upload_time_iso_8601": "2020-01-28T03:51:29.232419Z", "url": "https://files.pythonhosted.org/packages/4c/60/a33e12eeb76cb479c438bb68c278ea2217334f1dad484aa960c0c2def43f/auto_diff-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7764051307936ddc5b69ca4411b73977", "sha256": "e9ea91f560e0db1971e963da71f7975cd17ae7bda7a0051f5a37c01a0e606914"}, "downloads": -1, "filename": "auto_diff-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7764051307936ddc5b69ca4411b73977", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 9621, "upload_time": "2020-01-28T03:51:31", "upload_time_iso_8601": "2020-01-28T03:51:31.372418Z", "url": "https://files.pythonhosted.org/packages/8c/c3/e15b0bf042f490dc7170c18dbcce4f3f35b3f816e7eb2b530a7074321b1e/auto_diff-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "b905b885b3637d7db458ead8cc572d85", "sha256": "2d50ce3b8517f0d8d10d884202d0da986fffb76bd2225a3d087e8f97b884327e"}, "downloads": -1, "filename": "auto_diff-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b905b885b3637d7db458ead8cc572d85", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11536, "upload_time": "2020-04-19T03:22:26", "upload_time_iso_8601": "2020-04-19T03:22:26.325331Z", "url": "https://files.pythonhosted.org/packages/df/dd/31e102f3ac16b1a83a18f4e692ed7952e002d79460876f21760997f3f350/auto_diff-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edd97e5da0183bc11c6dfb067687cfa9", "sha256": "0a02c19b038ba238cc6ff5808faa2066d3310e77e8e69dec5a2d8183133ec9cd"}, "downloads": -1, "filename": "auto_diff-0.3.1.tar.gz", "has_sig": false, "md5_digest": "edd97e5da0183bc11c6dfb067687cfa9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 9876, "upload_time": "2020-04-19T03:22:28", "upload_time_iso_8601": "2020-04-19T03:22:28.119912Z", "url": "https://files.pythonhosted.org/packages/34/e0/3796aa36024c9cffd6fdd1145833ed093a5c4d9ac0d43f5babf070b22b30/auto_diff-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "e0f2500bbf7142b60e196f89fa8844d1", "sha256": "0debf762268f9f32020d3f7cb4b60b6f70839d5bd802d3d6c3cb716276e68d6e"}, "downloads": -1, "filename": "auto_diff-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e0f2500bbf7142b60e196f89fa8844d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11892, "upload_time": "2020-05-03T22:11:37", "upload_time_iso_8601": "2020-05-03T22:11:37.785371Z", "url": "https://files.pythonhosted.org/packages/b9/f5/d5760038c09b546a2b733ef280c907997c38001c368f6e43eea91ed5b4b0/auto_diff-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd445b2d37f281ca58bd024a20243bf0", "sha256": "f8b2e3fa85e980259af551229956999fb9237896182b2a90a5e49d6ee2dfc831"}, "downloads": -1, "filename": "auto_diff-0.3.2.tar.gz", "has_sig": false, "md5_digest": "dd445b2d37f281ca58bd024a20243bf0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 10303, "upload_time": "2020-05-03T22:11:40", "upload_time_iso_8601": "2020-05-03T22:11:40.136157Z", "url": "https://files.pythonhosted.org/packages/da/97/7d518e82a85c3b4da89fb019e3d0f5a8bd7cde1ea842eaaf28c8363b4758/auto_diff-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "24518054e15afa32334270da1c735b2f", "sha256": "68bc94e1099af8bbf8edb15fb3fa0c87b5f89a05d85e403a53bbbc2429fbe90b"}, "downloads": -1, "filename": "auto_diff-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "24518054e15afa32334270da1c735b2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 12002, "upload_time": "2020-05-03T22:32:27", "upload_time_iso_8601": "2020-05-03T22:32:27.034050Z", "url": "https://files.pythonhosted.org/packages/17/b1/37ad47c29db21b47a53b3176e9469bef9033e4d98f4b6727d70290f83db1/auto_diff-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5743ebd502617fa2d930a04c794de7fa", "sha256": "ff9ad9927f615f8795cbb64ce991e72ebc824a5951c8ca7519c2a9fae5179ed5"}, "downloads": -1, "filename": "auto_diff-0.3.3.tar.gz", "has_sig": false, "md5_digest": "5743ebd502617fa2d930a04c794de7fa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 10411, "upload_time": "2020-05-03T22:32:27", "upload_time_iso_8601": "2020-05-03T22:32:27.997383Z", "url": "https://files.pythonhosted.org/packages/02/9a/7f00407b5c831f21c19419b3ebb1a0658a69534678cf992f4dbc37ecd783/auto_diff-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "65be1b9d26494ca96cc300199ec80dde", "sha256": "71d54bcc61699d3ed1895d70d15bd65ce4ecc8261b04d5f0e41e7b75738f0b61"}, "downloads": -1, "filename": "auto_diff-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "65be1b9d26494ca96cc300199ec80dde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11954, "upload_time": "2020-05-04T21:13:38", "upload_time_iso_8601": "2020-05-04T21:13:38.330943Z", "url": "https://files.pythonhosted.org/packages/a9/f9/52091c8f2e4782237e3357d272059c1b040d219a72559abd594010edc6d3/auto_diff-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10526e4c1053ea355c025968bcf965e8", "sha256": "3833a077b6f979e705b16022eb254350df78ef7d53edb20b6a4744cebb0d91be"}, "downloads": -1, "filename": "auto_diff-0.3.4.tar.gz", "has_sig": false, "md5_digest": "10526e4c1053ea355c025968bcf965e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 10395, "upload_time": "2020-05-04T21:13:39", "upload_time_iso_8601": "2020-05-04T21:13:39.402381Z", "url": "https://files.pythonhosted.org/packages/67/2f/8db878d926d64fd8741b693c190c06350e605a7158f816a821a32807975c/auto_diff-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "65be1b9d26494ca96cc300199ec80dde", "sha256": "71d54bcc61699d3ed1895d70d15bd65ce4ecc8261b04d5f0e41e7b75738f0b61"}, "downloads": -1, "filename": "auto_diff-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "65be1b9d26494ca96cc300199ec80dde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11954, "upload_time": "2020-05-04T21:13:38", "upload_time_iso_8601": "2020-05-04T21:13:38.330943Z", "url": "https://files.pythonhosted.org/packages/a9/f9/52091c8f2e4782237e3357d272059c1b040d219a72559abd594010edc6d3/auto_diff-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10526e4c1053ea355c025968bcf965e8", "sha256": "3833a077b6f979e705b16022eb254350df78ef7d53edb20b6a4744cebb0d91be"}, "downloads": -1, "filename": "auto_diff-0.3.4.tar.gz", "has_sig": false, "md5_digest": "10526e4c1053ea355c025968bcf965e8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.8", "size": 10395, "upload_time": "2020-05-04T21:13:39", "upload_time_iso_8601": "2020-05-04T21:13:39.402381Z", "url": "https://files.pythonhosted.org/packages/67/2f/8db878d926d64fd8741b693c190c06350e605a7158f816a821a32807975c/auto_diff-0.3.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:19 2020"}