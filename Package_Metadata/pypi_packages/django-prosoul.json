{"info": {"author": "Bitergia", "author_email": "acs@bitergia.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Intended Audience :: Customer Service", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Prosoul |Build Status|\n======================\n\n**Prosoul** is a software quality models manager to create,\nimport/export, view and edit models.\n\nDescription\n-----------\n\nThe goal of this project is to create a web editor and viewer for\n`software quality\nmodels <https://github.com/borisbaldassari/se-quality-models>`__ that\nare used to show metrics in a meaning way. Also, importers and exporters\nfor the different quality models used in the industry will be\nimplemented so they can be used as models or evolved for the creation of\nnew quality models.\n\nIn the initial version the metrics supported will be the `CROSSMINER\nones <https://github.com/crossminer/crossminer/tree/dev/web-dashboards/ossmeter-metrics>`__.\n\nBased on the models, visualizations and assessment for the projects are\ngenerated. In the inital version Kibana dashoards will be created using\n`GrimoireLab <http://grimoirelab.github.io/>`__.\n\nThe final goal is to have a tool for \"Automatic Project Assessment and\nVisualization based on Evolved Quality Models\".\n\nThe original name for this project was Meditor but is was chaged to\nProsoul because meditor already was used in pip.\n\nSource code and contributions\n-----------------------------\n\nAll the source code is available in the `Prosoul GitHub\nrepository <https://github.com/Bitergia/prosoul>`__. Please, upload pull\nrequests if you have proposals to change the source code, and open an\nissue if you want to report a bug, ask for a new feature, or just\ncomment something.\n\nThe `code of conduct <CODE_OF_CONDUCT.md>`__ must be followed in all\ncontributions to the project.\n\nExecution\n---------\n\n**Prosoul** is a Django application. The recommended way to execute it\nis inside a python virtual environment.\n\nChange VENV\\_DIR with the path to the folder in which you want to store\nthe virtual environment.\n\nFrom source code repository\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis is the recommend way if you want to contribute to the development\nof ProSoul.\n\n::\n\n    git clone https://github.com/Bitergia/prosoul.git\n    cd prosoul/django-prosoul\n    prosoul/django-prosoul $ mkdir -p VENV_DIR\n    prosoul/django-prosoul $ python3 -m venv VENV_DIR\n    prosoul/django-prosoul $ source VENV_DIR/bin/activate\n    prosoul/django-prosoul $ pip3 install -r requirements.txt\n\nAnd to start the Django application:\n\n::\n\n    prosoul/django-prosoul $ python3 manage.py makemigrations\n    prosoul/django-prosoul $ python3 manage.py migrate\n    prosoul/django-prosoul $ python3 manage.py runserver\n\nBy default the applicacion will be accesible in: http://127.0.0.1:8000/\n\nFrom pip package\n~~~~~~~~~~~~~~~~\n\nThere is also a pip package with the Django application. You can just\ndeploy it in a Django site:\n\n::\n\n    mkdir -p VENV_DIR\n    python3 -m venv VENV_DIR\n    source VENV_DIR/bin/activate\n    pip install django\n    pip install django-prosoul\n\nand you need to add the application following the normal steps in\nDjango:\n\n::\n\n    django-admin startproject mysite\n    cd mysite\n    vi mysite/settings.py\n    ...\n    INSTALLED_APPS = [\n        'django.contrib.admin',\n        ...\n        'prosoul'\n        ]\n\n    mysite (venv) $ vi mysite/urls.py\n    ...\n    from django.conf.urls import include, url\n    ...\n    urlpatterns = [\n        path('admin/', admin.site.urls),\n        path('prosoul/', include('prosoul.urls')),\n    ]\n    mysite (venv) $ python manage.py migrate\n    mysite (venv) $ python manage.py runserver\n\nUsing a docker image\n~~~~~~~~~~~~~~~~~~~~\n\nA docker image is also available to execute the application:\n\n::\n\n    prosoul/docker $ docker-compose up\n\nBasic Usage\n-----------\n\nThere is two introductory videos: showing the import and view feature,\nand howto use the editor for adding a new quality model:\n\n-  Import and view of quality models:\n   `prosoul-intro.webm <https://raw.githubusercontent.com/Bitergia/prosoul/master/doc/meditor-intro.webm>`__\n-  Adding a new quality model:\n   `prosoul-editor.webm <https://raw.githubusercontent.com/Bitergia/prosoul/master/doc/meditor-editor.webm>`__\n-  Creating a viz and an assessment based on a quality model:\n   `prosoul-viz-assess.webm <https://raw.githubusercontent.com/Bitergia/prosoul/master/doc/meditor-viz-assess.webm>`__\n\nImport / Export\n---------------\n\nImport and export for quality models can be done using the web interface\nor from the command line:\n\n-  Import a model from a OSSMeter JSON file:\n\n::\n\n    prosoul/django-prosoul $ PYTHONPATH=. prosoul/prosoul_import.py -f prosoul/data/ossmeter_qm.json --format ossmeter\n\n-  Export a model to a GrimoireLab JSON file:\n\n::\n\n    prosoul/django-prosoul $ PYTHONPATH=. prosoul/prosoul_export.py -f prosoul/data/ossmeter_qm_grimoirelab.json --format grimoirelab -m \"Default OSSMETER quality model\"\n\nRequirements\n------------\n\n-  Python >=3.4\n-  setuptools\n-  django\n-  kidash\n-  requests\n-  python3-tk\n-  matplotlib\n\nArchitecture\n------------\n\nA draft diagram for the architecture is:\n\n.. figure:: doc/prosoul-arch.png?raw=true\n   :alt: \n\nProsoul with CROSSMINER\n-----------------------\n\nThere is a specific guide for `using prosoul with\nCROSSMINER <doc/prosoul-crossminer.md>`__ for creating the visualization\nfor a quality model and generating the assessment of the projects with\nCROSSMINER.\n\nThere is a `demo online of prosoul for\nCROSSMINER <http://prosoul.castalia.camp>`__.\n\nProsoul with GrimoireLab\n------------------------\n\nThere is a specific guide for `using prosoul with\nGrimoireLab <doc/prosoul-grimoirelab.md>`__ for creating the\nvisualization for a quality model and generating the assessment of the\nprojects with GrimoireLab.\n\nROADMAP\n-------\n\nThe ROADMAP for Prosoul is based on `GitHub\nmilestones <https://github.com/Bitergia/prosoul/milestones>`__. The\ncurrent active work is done in the issues related to the current\nmilestone.\n\nLicense\n-------\n\nLicensed under GNU General Public License (GPL), version 3 or later.\n\n.. |Build Status| image:: https://travis-ci.org/Bitergia/prosoul.svg?branch=master\n   :target: https://travis-ci.org/Bitergia/prosoul", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bitergia/prosoul", "keywords": "development repositories analytics quality models assessment visualization", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "django-prosoul", "package_url": "https://pypi.org/project/django-prosoul/", "platform": "", "project_url": "https://pypi.org/project/django-prosoul/", "project_urls": {"Homepage": "https://github.com/bitergia/prosoul"}, "release_url": "https://pypi.org/project/django-prosoul/0.4.0/", "requires_dist": null, "requires_python": ">=3.4", "summary": "Prosoul is a software quality models manager to create, import/export, view and edit models", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>Prosoul</strong> is a software quality models manager to create,\nimport/export, view and edit models.</p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>The goal of this project is to create a web editor and viewer for\n<a href=\"https://github.com/borisbaldassari/se-quality-models\" rel=\"nofollow\">software quality\nmodels</a> that\nare used to show metrics in a meaning way. Also, importers and exporters\nfor the different quality models used in the industry will be\nimplemented so they can be used as models or evolved for the creation of\nnew quality models.</p>\n<p>In the initial version the metrics supported will be the <a href=\"https://github.com/crossminer/crossminer/tree/dev/web-dashboards/ossmeter-metrics\" rel=\"nofollow\">CROSSMINER\nones</a>.</p>\n<p>Based on the models, visualizations and assessment for the projects are\ngenerated. In the inital version Kibana dashoards will be created using\n<a href=\"http://grimoirelab.github.io/\" rel=\"nofollow\">GrimoireLab</a>.</p>\n<p>The final goal is to have a tool for \u201cAutomatic Project Assessment and\nVisualization based on Evolved Quality Models\u201d.</p>\n<p>The original name for this project was Meditor but is was chaged to\nProsoul because meditor already was used in pip.</p>\n</div>\n<div id=\"source-code-and-contributions\">\n<h2>Source code and contributions</h2>\n<p>All the source code is available in the <a href=\"https://github.com/Bitergia/prosoul\" rel=\"nofollow\">Prosoul GitHub\nrepository</a>. Please, upload pull\nrequests if you have proposals to change the source code, and open an\nissue if you want to report a bug, ask for a new feature, or just\ncomment something.</p>\n<p>The <a href=\"CODE_OF_CONDUCT.md\" rel=\"nofollow\">code of conduct</a> must be followed in all\ncontributions to the project.</p>\n</div>\n<div id=\"execution\">\n<h2>Execution</h2>\n<p><strong>Prosoul</strong> is a Django application. The recommended way to execute it\nis inside a python virtual environment.</p>\n<p>Change VENV_DIR with the path to the folder in which you want to store\nthe virtual environment.</p>\n<div id=\"from-source-code-repository\">\n<h3>From source code repository</h3>\n<p>This is the recommend way if you want to contribute to the development\nof ProSoul.</p>\n<pre>git clone https://github.com/Bitergia/prosoul.git\ncd prosoul/django-prosoul\nprosoul/django-prosoul $ mkdir -p VENV_DIR\nprosoul/django-prosoul $ python3 -m venv VENV_DIR\nprosoul/django-prosoul $ source VENV_DIR/bin/activate\nprosoul/django-prosoul $ pip3 install -r requirements.txt\n</pre>\n<p>And to start the Django application:</p>\n<pre>prosoul/django-prosoul $ python3 manage.py makemigrations\nprosoul/django-prosoul $ python3 manage.py migrate\nprosoul/django-prosoul $ python3 manage.py runserver\n</pre>\n<p>By default the applicacion will be accesible in: <a href=\"http://127.0.0.1:8000/\" rel=\"nofollow\">http://127.0.0.1:8000/</a></p>\n</div>\n<div id=\"from-pip-package\">\n<h3>From pip package</h3>\n<p>There is also a pip package with the Django application. You can just\ndeploy it in a Django site:</p>\n<pre>mkdir -p VENV_DIR\npython3 -m venv VENV_DIR\nsource VENV_DIR/bin/activate\npip install django\npip install django-prosoul\n</pre>\n<p>and you need to add the application following the normal steps in\nDjango:</p>\n<pre>django-admin startproject mysite\ncd mysite\nvi mysite/settings.py\n...\nINSTALLED_APPS = [\n    'django.contrib.admin',\n    ...\n    'prosoul'\n    ]\n\nmysite (venv) $ vi mysite/urls.py\n...\nfrom django.conf.urls import include, url\n...\nurlpatterns = [\n    path('admin/', admin.site.urls),\n    path('prosoul/', include('prosoul.urls')),\n]\nmysite (venv) $ python manage.py migrate\nmysite (venv) $ python manage.py runserver\n</pre>\n</div>\n<div id=\"using-a-docker-image\">\n<h3>Using a docker image</h3>\n<p>A docker image is also available to execute the application:</p>\n<pre>prosoul/docker $ docker-compose up\n</pre>\n</div>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic Usage</h2>\n<p>There is two introductory videos: showing the import and view feature,\nand howto use the editor for adding a new quality model:</p>\n<ul>\n<li>Import and view of quality models:\n<a href=\"https://raw.githubusercontent.com/Bitergia/prosoul/master/doc/meditor-intro.webm\" rel=\"nofollow\">prosoul-intro.webm</a></li>\n<li>Adding a new quality model:\n<a href=\"https://raw.githubusercontent.com/Bitergia/prosoul/master/doc/meditor-editor.webm\" rel=\"nofollow\">prosoul-editor.webm</a></li>\n<li>Creating a viz and an assessment based on a quality model:\n<a href=\"https://raw.githubusercontent.com/Bitergia/prosoul/master/doc/meditor-viz-assess.webm\" rel=\"nofollow\">prosoul-viz-assess.webm</a></li>\n</ul>\n</div>\n<div id=\"import-export\">\n<h2>Import / Export</h2>\n<p>Import and export for quality models can be done using the web interface\nor from the command line:</p>\n<ul>\n<li>Import a model from a OSSMeter JSON file:</li>\n</ul>\n<pre>prosoul/django-prosoul $ PYTHONPATH=. prosoul/prosoul_import.py -f prosoul/data/ossmeter_qm.json --format ossmeter\n</pre>\n<ul>\n<li>Export a model to a GrimoireLab JSON file:</li>\n</ul>\n<pre>prosoul/django-prosoul $ PYTHONPATH=. prosoul/prosoul_export.py -f prosoul/data/ossmeter_qm_grimoirelab.json --format grimoirelab -m \"Default OSSMETER quality model\"\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python &gt;=3.4</li>\n<li>setuptools</li>\n<li>django</li>\n<li>kidash</li>\n<li>requests</li>\n<li>python3-tk</li>\n<li>matplotlib</li>\n</ul>\n</div>\n<div id=\"architecture\">\n<h2>Architecture</h2>\n<p>A draft diagram for the architecture is:</p>\n<div>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e1eba5168077c54f6094f43ee872dd473211e35/646f632f70726f736f756c2d617263682e706e673f7261773d74727565\">\n</div>\n</div>\n<div id=\"prosoul-with-crossminer\">\n<h2>Prosoul with CROSSMINER</h2>\n<p>There is a specific guide for <a href=\"doc/prosoul-crossminer.md\" rel=\"nofollow\">using prosoul with\nCROSSMINER</a> for creating the visualization\nfor a quality model and generating the assessment of the projects with\nCROSSMINER.</p>\n<p>There is a <a href=\"http://prosoul.castalia.camp\" rel=\"nofollow\">demo online of prosoul for\nCROSSMINER</a>.</p>\n</div>\n<div id=\"prosoul-with-grimoirelab\">\n<h2>Prosoul with GrimoireLab</h2>\n<p>There is a specific guide for <a href=\"doc/prosoul-grimoirelab.md\" rel=\"nofollow\">using prosoul with\nGrimoireLab</a> for creating the\nvisualization for a quality model and generating the assessment of the\nprojects with GrimoireLab.</p>\n</div>\n<div id=\"roadmap\">\n<h2>ROADMAP</h2>\n<p>The ROADMAP for Prosoul is based on <a href=\"https://github.com/Bitergia/prosoul/milestones\" rel=\"nofollow\">GitHub\nmilestones</a>. The\ncurrent active work is done in the issues related to the current\nmilestone.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Licensed under GNU General Public License (GPL), version 3 or later.</p>\n</div>\n\n          </div>"}, "last_serial": 4337794, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1916361969a8cf5e26bcab9e5ecbd2d2", "sha256": "46d6c154d93f55424226c3138b4ac7aef6878e96c6bd93934e8e3cd58fc2feaf"}, "downloads": -1, "filename": "django-prosoul-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1916361969a8cf5e26bcab9e5ecbd2d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98426, "upload_time": "2018-04-20T03:02:07", "upload_time_iso_8601": "2018-04-20T03:02:07.874305Z", "url": "https://files.pythonhosted.org/packages/24/02/8552fb0a2c453a8ba40478d32ef22fb99a9a46512a03673b22d661371153/django-prosoul-0.1.1.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "1f8a9900267f21d24c5a1a9497f29d7f", "sha256": "41ac7c0e3c2d4ede77dd08981c29fae7ae2b31be5d6eaddbe7ca910d88439dbe"}, "downloads": -1, "filename": "django-prosoul-0.1.5.tar.gz", "has_sig": false, "md5_digest": "1f8a9900267f21d24c5a1a9497f29d7f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 123600, "upload_time": "2018-09-20T07:41:23", "upload_time_iso_8601": "2018-09-20T07:41:23.831148Z", "url": "https://files.pythonhosted.org/packages/88/53/06aee88388fd2683fd1b118a0cb5cc3156e89acc305560127980767899fc/django-prosoul-0.1.5.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "f68149046e2eab775a0be257fee429f7", "sha256": "5fb4abb3e755aa85dc94bceaf6ae843154e11f338798832e3b6254c0438e859c"}, "downloads": -1, "filename": "django-prosoul-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f68149046e2eab775a0be257fee429f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 125241, "upload_time": "2018-09-21T11:12:11", "upload_time_iso_8601": "2018-09-21T11:12:11.330194Z", "url": "https://files.pythonhosted.org/packages/c3/c8/1dd43fac6e0354e832c00597ee4c37d9e3406620a6f31d53e52454a7c120/django-prosoul-0.2.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "35d28179c28a3ba0e85fb6687f834f60", "sha256": "4d157056363697dca35fe22849577ededb2622f2e3249ce0db767914c41010ad"}, "downloads": -1, "filename": "django-prosoul-0.4.0.tar.gz", "has_sig": false, "md5_digest": "35d28179c28a3ba0e85fb6687f834f60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 129537, "upload_time": "2018-10-03T19:22:46", "upload_time_iso_8601": "2018-10-03T19:22:46.062561Z", "url": "https://files.pythonhosted.org/packages/f5/d1/7697a50a11ecb9f736dc9a576e631504f669e0cb28d136d11d85c2be4d17/django-prosoul-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "35d28179c28a3ba0e85fb6687f834f60", "sha256": "4d157056363697dca35fe22849577ededb2622f2e3249ce0db767914c41010ad"}, "downloads": -1, "filename": "django-prosoul-0.4.0.tar.gz", "has_sig": false, "md5_digest": "35d28179c28a3ba0e85fb6687f834f60", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 129537, "upload_time": "2018-10-03T19:22:46", "upload_time_iso_8601": "2018-10-03T19:22:46.062561Z", "url": "https://files.pythonhosted.org/packages/f5/d1/7697a50a11ecb9f736dc9a576e631504f669e0cb28d136d11d85c2be4d17/django-prosoul-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:40 2020"}