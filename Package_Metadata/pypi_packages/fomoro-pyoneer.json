{"info": {"author": "Fomoro AI", "author_email": "team@fomoro.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# pyoneer\n\nTensor utilities, reinforcement learning, and more! Designed to make research easier with low-level abstractions for common operations.\n\n## Usage\n\nFor the top-level utilities, import like so:\n\n    import pyoneer as pynr\n    pynr.math.rescale(...)\n\nFor the larger sub-modules, such as reinforcement learning, we recommend:\n\n    import pyoneer.rl as pyrl\n    loss_fn = pyrl.losses.PolicyGradient(...)\n\nIn general, the Pyoneer API tries to adhere to the TensorFlow 2.0 API.\n\n### Examples\n\n- [Proximal Policy Optimization with Pyoneer and TF 2.0](https://github.com/fomorians/ppo)\n\n## API\n\n### Activations ([`pynr.activations`](pyoneer/activations))\n\n- `pynr.activations.swish`\n\n### Debugging ([`pynr.debugging`](pyoneer/debugging))\n\n- `pynr.debugging.Stopwatch`\n\n### Distributions ([`pynr.distributions`](pyoneer/distributions))\n\n- `pynr.distributions.MultiCategorical`\n\n### Initializers ([`pynr.initializers`](pyoneer/initializers))\n\n- `pynr.initializers.SoftplusInverse`\n\n### Layers ([`pynr.layers`](pyoneer/layers))\n\n- `pynr.layers.Swish`\n- `pynr.layers.OneHotEncoder`\n- `pynr.layers.AngleEncoder`\n- `pynr.layers.Nest`\n\n### Tensor Manipulation ([`pynr.manip`](pyoneer/manip))\n\n- `pynr.manip.flatten`\n- `pynr.manip.batched_index`\n- `pynr.manip.pad_or_truncate`\n- `pynr.manip.shift`\n\n### Math ([`pynr.math`](pyoneer/math))\n\n- `pynr.math.to_radians`\n- `pynr.math.to_degrees`\n- `pynr.math.to_cartesian`\n- `pynr.math.to_polar`\n- `pynr.math.RADIANS_TO_DEGREES`\n- `pynr.math.DEGREES_TO_RADIANS`\n- `pynr.math.isclose`\n- `pynr.math.safe_divide`\n- `pynr.math.rescale`\n- `pynr.math.normalize`\n- `pynr.math.denormalize`\n\n### Metrics ([`pynr.metrics`](pyoneer/metrics))\n\n- `pynr.metrics.mape`\n- `pynr.metrics.smape`\n- `pynr.metrics.MAPE`\n- `pynr.metrics.SMAPE`\n\n### Moments ([`pynr.moments`](pyoneer/moments))\n\n- `pynr.moments.range_moments`\n- `pynr.moments.StaticMoments`\n- `pynr.moments.StreamingMoments`\n- `pynr.moments.ExponentialMovingMoments`\n\n### Learning Rate Schedules ([`pynr.schedules`](pyoneer/schedules))\n\n- `pynr.schedules.CyclicSchedule`\n\n### Reinforcement Learning ([`pynr.rl`](pyoneer/rl))\n\nUtilities for reinforcement learning.\n\n#### Losses ([`pynr.rl.losses`](pyoneer/rl/losses))\n\n- `pynr.rl.losses.policy_gradient`\n- `pynr.rl.losses.policy_entropy`\n- `pynr.rl.losses.clipped_policy_gradient`\n- `pynr.rl.losses.PolicyGradient`\n- `pynr.rl.losses.PolicyEntropy`\n- `pynr.rl.losses.ClippedPolicyGradient`\n\n#### Targets ([`pynr.rl.targets`](pyoneer/rl/targets))\n\n- `pynr.rl.targets.DiscountedReturns`\n- `pynr.rl.targets.GeneralizedAdvantages`\n\n#### Strategies ([`pynr.rl.strategies`](pyoneer/rl/strategies))\n\n- `pynr.rl.strategies.EpsilonGreedy`\n- `pynr.rl.strategies.Mode`\n- `pynr.rl.strategies.Sample`\n\n#### Wrappers ([`pynr.rl.wrappers`](pyoneer/rl/wrappers))\n\n- `pynr.rl.wrappers.ObservationCoordinates`\n- `pynr.rl.wrappers.ObservationNormalization`\n- `pynr.rl.wrappers.Batch`\n- `pynr.rl.wrappers.Process`\n\n## Installation\n\nThere are a few options for installation:\n\n1. (Recommended) Install with `pipenv`:\n\n        pipenv install fomoro-pyoneer\n\n2. Install locally for development with `pipenv`:\n\n        git clone https://github.com/fomorians/pyoneer.git\n        cd pyoneer\n        pipenv install\n        pipenv shell\n\n## Testing\n\nThere are a few options for testing:\n\n1. Run all tests:\n\n        python -m unittest discover -bfp '*_test.py'\n\n2. Run specific tests:\n\n        python -m pyoneer.math.logical_ops_test\n\n## Contributing\n\nFile an issue following the `ISSUE_TEMPLATE`. If the issue discussion warrants implementation, then submit a pull request from a branch describing the feature. This will eventually get merged into `master` after a few rounds of code review.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/fomorians/pyoneer/archive/v0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fomorians/pyoneer", "keywords": "tensorflow,machine learning,reinforcement learning,eager execution,deep learning", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "fomoro-pyoneer", "package_url": "https://pypi.org/project/fomoro-pyoneer/", "platform": "", "project_url": "https://pypi.org/project/fomoro-pyoneer/", "project_urls": {"Download": "https://github.com/fomorians/pyoneer/archive/v0.3.tar.gz", "Homepage": "https://github.com/fomorians/pyoneer"}, "release_url": "https://pypi.org/project/fomoro-pyoneer/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "Tensor utilities, reinforcement learning, and more!", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyoneer</h1>\n<p>Tensor utilities, reinforcement learning, and more! Designed to make research easier with low-level abstractions for common operations.</p>\n<h2>Usage</h2>\n<p>For the top-level utilities, import like so:</p>\n<pre><code>import pyoneer as pynr\npynr.math.rescale(...)\n</code></pre>\n<p>For the larger sub-modules, such as reinforcement learning, we recommend:</p>\n<pre><code>import pyoneer.rl as pyrl\nloss_fn = pyrl.losses.PolicyGradient(...)\n</code></pre>\n<p>In general, the Pyoneer API tries to adhere to the TensorFlow 2.0 API.</p>\n<h3>Examples</h3>\n<ul>\n<li><a href=\"https://github.com/fomorians/ppo\" rel=\"nofollow\">Proximal Policy Optimization with Pyoneer and TF 2.0</a></li>\n</ul>\n<h2>API</h2>\n<h3>Activations (<a href=\"pyoneer/activations\" rel=\"nofollow\"><code>pynr.activations</code></a>)</h3>\n<ul>\n<li><code>pynr.activations.swish</code></li>\n</ul>\n<h3>Debugging (<a href=\"pyoneer/debugging\" rel=\"nofollow\"><code>pynr.debugging</code></a>)</h3>\n<ul>\n<li><code>pynr.debugging.Stopwatch</code></li>\n</ul>\n<h3>Distributions (<a href=\"pyoneer/distributions\" rel=\"nofollow\"><code>pynr.distributions</code></a>)</h3>\n<ul>\n<li><code>pynr.distributions.MultiCategorical</code></li>\n</ul>\n<h3>Initializers (<a href=\"pyoneer/initializers\" rel=\"nofollow\"><code>pynr.initializers</code></a>)</h3>\n<ul>\n<li><code>pynr.initializers.SoftplusInverse</code></li>\n</ul>\n<h3>Layers (<a href=\"pyoneer/layers\" rel=\"nofollow\"><code>pynr.layers</code></a>)</h3>\n<ul>\n<li><code>pynr.layers.Swish</code></li>\n<li><code>pynr.layers.OneHotEncoder</code></li>\n<li><code>pynr.layers.AngleEncoder</code></li>\n<li><code>pynr.layers.Nest</code></li>\n</ul>\n<h3>Tensor Manipulation (<a href=\"pyoneer/manip\" rel=\"nofollow\"><code>pynr.manip</code></a>)</h3>\n<ul>\n<li><code>pynr.manip.flatten</code></li>\n<li><code>pynr.manip.batched_index</code></li>\n<li><code>pynr.manip.pad_or_truncate</code></li>\n<li><code>pynr.manip.shift</code></li>\n</ul>\n<h3>Math (<a href=\"pyoneer/math\" rel=\"nofollow\"><code>pynr.math</code></a>)</h3>\n<ul>\n<li><code>pynr.math.to_radians</code></li>\n<li><code>pynr.math.to_degrees</code></li>\n<li><code>pynr.math.to_cartesian</code></li>\n<li><code>pynr.math.to_polar</code></li>\n<li><code>pynr.math.RADIANS_TO_DEGREES</code></li>\n<li><code>pynr.math.DEGREES_TO_RADIANS</code></li>\n<li><code>pynr.math.isclose</code></li>\n<li><code>pynr.math.safe_divide</code></li>\n<li><code>pynr.math.rescale</code></li>\n<li><code>pynr.math.normalize</code></li>\n<li><code>pynr.math.denormalize</code></li>\n</ul>\n<h3>Metrics (<a href=\"pyoneer/metrics\" rel=\"nofollow\"><code>pynr.metrics</code></a>)</h3>\n<ul>\n<li><code>pynr.metrics.mape</code></li>\n<li><code>pynr.metrics.smape</code></li>\n<li><code>pynr.metrics.MAPE</code></li>\n<li><code>pynr.metrics.SMAPE</code></li>\n</ul>\n<h3>Moments (<a href=\"pyoneer/moments\" rel=\"nofollow\"><code>pynr.moments</code></a>)</h3>\n<ul>\n<li><code>pynr.moments.range_moments</code></li>\n<li><code>pynr.moments.StaticMoments</code></li>\n<li><code>pynr.moments.StreamingMoments</code></li>\n<li><code>pynr.moments.ExponentialMovingMoments</code></li>\n</ul>\n<h3>Learning Rate Schedules (<a href=\"pyoneer/schedules\" rel=\"nofollow\"><code>pynr.schedules</code></a>)</h3>\n<ul>\n<li><code>pynr.schedules.CyclicSchedule</code></li>\n</ul>\n<h3>Reinforcement Learning (<a href=\"pyoneer/rl\" rel=\"nofollow\"><code>pynr.rl</code></a>)</h3>\n<p>Utilities for reinforcement learning.</p>\n<h4>Losses (<a href=\"pyoneer/rl/losses\" rel=\"nofollow\"><code>pynr.rl.losses</code></a>)</h4>\n<ul>\n<li><code>pynr.rl.losses.policy_gradient</code></li>\n<li><code>pynr.rl.losses.policy_entropy</code></li>\n<li><code>pynr.rl.losses.clipped_policy_gradient</code></li>\n<li><code>pynr.rl.losses.PolicyGradient</code></li>\n<li><code>pynr.rl.losses.PolicyEntropy</code></li>\n<li><code>pynr.rl.losses.ClippedPolicyGradient</code></li>\n</ul>\n<h4>Targets (<a href=\"pyoneer/rl/targets\" rel=\"nofollow\"><code>pynr.rl.targets</code></a>)</h4>\n<ul>\n<li><code>pynr.rl.targets.DiscountedReturns</code></li>\n<li><code>pynr.rl.targets.GeneralizedAdvantages</code></li>\n</ul>\n<h4>Strategies (<a href=\"pyoneer/rl/strategies\" rel=\"nofollow\"><code>pynr.rl.strategies</code></a>)</h4>\n<ul>\n<li><code>pynr.rl.strategies.EpsilonGreedy</code></li>\n<li><code>pynr.rl.strategies.Mode</code></li>\n<li><code>pynr.rl.strategies.Sample</code></li>\n</ul>\n<h4>Wrappers (<a href=\"pyoneer/rl/wrappers\" rel=\"nofollow\"><code>pynr.rl.wrappers</code></a>)</h4>\n<ul>\n<li><code>pynr.rl.wrappers.ObservationCoordinates</code></li>\n<li><code>pynr.rl.wrappers.ObservationNormalization</code></li>\n<li><code>pynr.rl.wrappers.Batch</code></li>\n<li><code>pynr.rl.wrappers.Process</code></li>\n</ul>\n<h2>Installation</h2>\n<p>There are a few options for installation:</p>\n<ol>\n<li>\n<p>(Recommended) Install with <code>pipenv</code>:</p>\n<pre><code> pipenv install fomoro-pyoneer\n</code></pre>\n</li>\n<li>\n<p>Install locally for development with <code>pipenv</code>:</p>\n<pre><code> git clone https://github.com/fomorians/pyoneer.git\n cd pyoneer\n pipenv install\n pipenv shell\n</code></pre>\n</li>\n</ol>\n<h2>Testing</h2>\n<p>There are a few options for testing:</p>\n<ol>\n<li>\n<p>Run all tests:</p>\n<pre><code> python -m unittest discover -bfp '*_test.py'\n</code></pre>\n</li>\n<li>\n<p>Run specific tests:</p>\n<pre><code> python -m pyoneer.math.logical_ops_test\n</code></pre>\n</li>\n</ol>\n<h2>Contributing</h2>\n<p>File an issue following the <code>ISSUE_TEMPLATE</code>. If the issue discussion warrants implementation, then submit a pull request from a branch describing the feature. This will eventually get merged into <code>master</code> after a few rounds of code review.</p>\n\n          </div>"}, "last_serial": 5519329, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "f7527882b9ff32f96be344042abd051e", "sha256": "2fc40f61f1c79f08fccd2396a7036c817843f9568527bb7dd87d5a98ca54d68e"}, "downloads": -1, "filename": "fomoro_pyoneer-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f7527882b9ff32f96be344042abd051e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 45427, "upload_time": "2019-06-27T23:21:26", "upload_time_iso_8601": "2019-06-27T23:21:26.970784Z", "url": "https://files.pythonhosted.org/packages/0e/fd/65f15d7599f3e15d97c1b465e4e436b299c3d57c04a83758ccd526d9b14f/fomoro_pyoneer-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf81d89bfaf4d22448c30b888ffe1331", "sha256": "bb04a339aa6c0f9f22547555b23119488a6e2155d7a2fd040c2b82494c306432"}, "downloads": -1, "filename": "fomoro-pyoneer-0.2.0.tar.gz", "has_sig": false, "md5_digest": "bf81d89bfaf4d22448c30b888ffe1331", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21149, "upload_time": "2019-06-27T23:21:29", "upload_time_iso_8601": "2019-06-27T23:21:29.282678Z", "url": "https://files.pythonhosted.org/packages/19/92/785d1bb0491ee2f3f505f7dcf10e1bc4f9a6ed6a2d94c856f977b1e67bcd/fomoro-pyoneer-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4f27712510b7a84000d3a7cf5d463999", "sha256": "8b65f42eb62756dc6bf55ee440aea0eec83eea98edbee6c65d598c7905dc13be"}, "downloads": -1, "filename": "fomoro-pyoneer-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4f27712510b7a84000d3a7cf5d463999", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22025, "upload_time": "2019-07-11T17:46:21", "upload_time_iso_8601": "2019-07-11T17:46:21.744377Z", "url": "https://files.pythonhosted.org/packages/fe/a2/6937e1a874a5829a598d284e6a73d43f6445b28be2724a005370b4411195/fomoro-pyoneer-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4f27712510b7a84000d3a7cf5d463999", "sha256": "8b65f42eb62756dc6bf55ee440aea0eec83eea98edbee6c65d598c7905dc13be"}, "downloads": -1, "filename": "fomoro-pyoneer-0.3.0.tar.gz", "has_sig": false, "md5_digest": "4f27712510b7a84000d3a7cf5d463999", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22025, "upload_time": "2019-07-11T17:46:21", "upload_time_iso_8601": "2019-07-11T17:46:21.744377Z", "url": "https://files.pythonhosted.org/packages/fe/a2/6937e1a874a5829a598d284e6a73d43f6445b28be2724a005370b4411195/fomoro-pyoneer-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:01:04 2020"}