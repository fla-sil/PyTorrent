{"info": {"author": "\u7f57\u79d1\u5cf0", "author_email": "lkf20031988@163.com", "bugtrack_url": null, "classifiers": [], "description": "# \u9879\u76ee\u521d\u8877\n\n> \u4e3a\u4ec0\u4e48\u5df2\u7ecf\u6709\u4e86[rock4automation](https://github.com/RockFeng0/rock4automation)\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\u7684\u9879\u76ee\uff0c\u8fd8\u8981\u53e6\u8d77\u4e00\u4e2artsf\u9879\u76ee\uff0c\u5e76\u4e14rtsf\u4e2d\u4f7f\u7528\u7684\u6280\u672f\uff0crock4automation\u9879\u76ee\u4e2d\u5df2\u7ecf\u6db5\u76d6\uff1f\n\n\u56e0\u4e3a\uff0c\u5b83\u5b58\u5728\u7684\u75db\u70b9\u5f88\u660e\u663e\uff1a\n\n- rock4automation\u9879\u76ee\u7684\u521d\u8877\uff0c\u662f\u4e3a\u4e86\u80fd\u5feb\u901f\u91cd\u62fe\u6280\u672f\uff0c\u662f\u6280\u672f\u7684\u5408\u96c6\uff0c\u5305\u542b\u4e86\u65b0\u65e7\u6d4b\u8bd5\u7684\u6280\u672f\u3002\u91cc\u8fb9\u4e00\u4e9b\u6a21\u5757\uff0c\u662f\u5197\u4f59\u7684\u5b58\u5728\uff0c\u8fd9\u8ba9\u9879\u76ee\u672c\u8eab\u5f88\u81c3\u80bf\u3002\u5982\u6574\u5408\u7684\u4e00\u4e9b\u81ea\u52a8\u5316\u6846\u67b6\uff0cselenium\u3001appium\u3001autoitv3\u3001Microsoft UI Automation\u7b49\u7b49\uff0c\u5173\u4e8e\u6027\u80fd\u7684\u6d4b\u8bd5\uff0c\u6574\u5408\u4e86locust\u7684\u4e00\u4e9b\u7528\u6cd5\u3002\n- rock4automation\u9879\u76ee,\u6253\u5305\u53d1\u5e03\u7684\u7a0b\u5e8f\uff0c\u4f1a\u5c06\u6e90\u7801\u5c01\u88c5\u4e86exe\u6216\u8005\u52a0\u5bc6\u4e3apyd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d1\u5e03\u51fa\u6765\u7684\u7a0b\u5e8f\uff0c\u4e0d\u662f\u4e00\u4e2a\u6e90\u7801\uff0c\u800c\u662f\u4e00\u4e2a\u5ba2\u6237\u7aef\u7a0b\u5e8f\uff0c\u8fd9\u5c31\u6709\u8fdd\u6211\u5f00\u6e90\u7684\u610f\u56fe\u4e86\n- rock4automation\u9879\u76ee,\u6253\u5305\u4e86\u76f8\u5173\u5de5\u5177\uff0c\u6bd4\u5982appium-server\uff0cjava.exe \u7b49\u7b49\uff0c\u5927\u91cf\u5197\u4f59\u7684\u975e\u9879\u76ee\u6e90\u7801\u7684\u5de5\u5177 \n\n\u800crtsf(rock4 test service framework)\u9879\u76ee\u7684\u521d\u8877\uff1a\n\n- \u53c2\u8003rock4automation\u548chttprunner\u7684\u9879\u76ee\uff0c\u6211\u5e0c\u671b\u80fd\u7cbe\u7b80\u4e00\u4e0brtsf\uff0c\u4f7f\u5b83**\u4ec5\u4ec5\u63d0\u4f9b\u4e00\u4e2a\u6d4b\u8bd5\u7684\u5173\u952e\u5b57\u9a71\u52a8\u548c\u6570\u636e\u9a71\u52a8\u7684\u7a0b\u5e8f\u6846\u67b6**\u3002\n- \u5176\u6b21\uff0c\u6211\u5e0c\u671b**rtsf\u662f\u4e2a\u53ef\u6269\u5c55\u7684\u670d\u52a1\u6846\u67b6**\uff0c\u4e00\u4e9b\u81ea\u52a8\u5316\u6280\u672f\u7684\u6846\u67b6\uff0c\u53ef\u4ee5\u4f9d\u6258rtsf\uff0c\u8fc5\u901f\u5f62\u6210\u4e00\u4e2a\u6709\u6548\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u76f8\u5173\u7684\u4e1a\u52a1\u6846\u67b6\u3002\u5982\u6574\u5408selenium\u5f62\u6210web\u5e94\u7528\u4e1a\u52a1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff1b\u6574\u5408requests\u7b49\u6280\u672f\uff0c\u5f62\u6210http(s)\u63a5\u53e3\u5c42\u4e1a\u52a1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\u7b49\u3002\n- \u53e6\u5916\uff0c\u5173\u4e8e\u6301\u7eed\u7ee7\u627f\u65b9\u9762\uff0c\u6211\u5e0c\u671b**rtsf\u662f\u4e2a\u547d\u4ee4\u884c\u7684\u5de5\u5177**\uff0c\u4f9d\u6258\u5b83\u4ea7\u751f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ef\u4ee5\u63a5\u5165\u6301\u7eed\u96c6\u6210\u7684\u7cfb\u7edf\u3002\n- \u6700\u540e\uff0c\u6211\u5e0c\u671b\uff0c\u4f9d\u6258rtsf\u4ea7\u751f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\uff0c\u80fd\u591f\u8f7b\u91cf\uff0c\u5c11\u9020\u8f6e\u5b50\uff0c\u591a\u590d\u7528\u6807\u51c6\u5e93\u548c\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\uff0c\n\n\n# \u67b6\u6784\n\n![rtsf\u67b6\u6784.png](https://raw.githubusercontent.com/RockFeng0/img-folder/master/rtsf/rtsf\u67b6\u6784.png)\n\n\n## \u6784\u5efartsf\u7cfb\u5217\u6846\u67b6\n\n\u6211\u8fd9\u91cc\u5df2\u7ecf\u5b8c\u6210\u4e86\u51e0\u4e2artsf+\u7684\u9879\u76ee,\u4f9b\u5927\u5bb6\u53c2\u8003\u548c\u4f7f\u7528:\n\n- \u63a5\u53e3\u6d4b\u8bd5[rtsf-http](https://github.com/RockFeng0/rtsf-http)\n- \u6d4f\u89c8\u5668\u6d4b\u8bd5[rtsf-web](https://github.com/RockFeng0/rtsf-web)\n- android\u79fb\u52a8\u7aef[rtsf-app](https://github.com/RockFeng0/rtsf-app)\n- windows\u684c\u9762\u5ba2\u6237\u7aef[rtsf-win](https://github.com/RockFeng0/rtsf-win)\n\n\u5176\u4ed6\u53ef\u63a5\u5165\u7684\u65b9\u6848:\n- \u8ba1\u7b97\u673a\u89c6\u89c9opencv\n- \u56fe\u5f62\u6587\u5b57\u8bc6\u522btesseract\n- \u57fa\u4e8e\u50cf\u7d20\u70b9\u5bf9\u6bd4\u7684\u56fe\u50cfImageDiff\n- \u57fa\u4e8eunity3d\u6280\u672f\u6e38\u620f\u63a7\u4ef6\u8bc6\u522bpocoui\n\n\u7b49\u7b49\n\n> \u6d4b\u8bd5\u7528\u4f8b\u6a21\u578b\uff0c\u8ba1\u5212\u6269\u5c55\u4e3a, yaml, xml, excel\u4e09\u79cd\uff0c\u76ee\u524d\u5df2\u6269\u5c55\u7684\u53ea\u6709yaml\u6d4b\u8bd5\u7528\u4f8b\u6a21\u578b\n\n\n# \u4ecb\u7ecd\n\n## \u5b89\u88c5\n\n```\npip install rtsf\n```\n\n## rtsf-\u4f7f\u7528\u5165\u95e8\n\nrtsf\u63d0\u4f9b\u6d4b\u8bd5\u6267\u884c\u3001\u62a5\u544a\u3001\u65e5\u5fd7\u7684\u57fa\u672c\u529f\u80fd\n\n### \u6d4b\u8bd5\u7528\u4f8b\u4ecb\u7ecd\n\n- rtsf\u5206\u4e09\u79cd\u7528\u4f8b: case\u3001 api\u3001 suite\uff0c\u6240\u4ee5rtsf**\u652f\u6301\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\uff0c\u5141\u8bb8\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ec4\u4ef6\u5316**, \u5176\u4e2dapi\u548csuite,\u6bd4case\u591a\u4e00\u4e2a\u5173\u952e\u5b57: def\n- \u6d4b\u8bd5\u7528\u4f8b\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528api\u5173\u952e\u5b57\u5c01\u88c5\u5f53\u524d\u5355\u4e2acase\uff0c\u5141\u8bb8\u5176\u4ed6case\u8fdb\u884c\u8c03\u7528,\u7c7b\u4f3c\u8c03\u7528\u5355\u4e2aapi\u4e00\u6837\n- \u6d4b\u8bd5\u7528\u4f8b\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528suite\u5173\u952e\u5b57\uff0c\u5c01\u88c5\u5f53\u524d\u591a\u4e2acases\uff0c\u5141\u8bb8\u5176\u4ed6case\u8fdb\u884c\u8c03\u7528\uff0c \u7c7b\u4f3c\u8c03\u7528\u7ec4\u4ef6\u5316\u6a21\u5757\u4e00\u6837\n- def\u5b9a\u4e49\u7684api\u548csuite,\u4f20\u9012\u53c2\u6570\u7684\u66ff\u6362\u8fc7\u7a0b:  \u5f53\u524d\u7528\u4f8b\u8c03\u7528api\u6216suite\u65f6\uff0c**\u4f1a\u5148\u5c06\u4f20\u9012\u7684\u53c2\u6570\u503c\uff0c\u66ff\u6362\u88ab\u8c03\u7528\u7684api\u6216suite\u4e2d\u76f8\u5e94\u7684\u53c2\u6570**\n- api\u7528\u4f8b\u7684\u8c03\u7528\u8fc7\u7a0b: \u5f53\u524d\u7528\u4f8b\u8c03\u7528api\u7684\u65f6\u5019\uff0c\u5982\u679c**\u5f53\u524dcase\u4e0eapi\u91cd\u590d\u5b9a\u4e49\u952e\u503c\u5bf9\u65f6\uff0c\u53d6\u5f53\u524dcase\u4e2d\u952e\u503c\u5bf9\u503c** \n- suite\u7528\u4f8b\u7684\u8c03\u7528\u8fc7\u7a0b: \u5f53\u524d\u7528\u4f8b\u8c03\u7528suite\u7684\u65f6\u5019\uff0c\u5982\u679c**\u5f53\u524dcase\u4e0esuite\u91cd\u590d\u5b9a\u4e49\u952e\u503c\u5bf9\uff0c\u53d6suite\u4e2d\u952e\u503c\u5bf9\u503c**\n\n\n> \u6ce8\u610f: \u5176\u5185\u5728\u903b\u8f91\uff0c\u5176\u5b9e\u662f\uff0c\u5148\u52a0\u8f7dapi\u548csuite,\u4ee5dict\u5f62\u5f0f\u5b58\u50a8\u5728\u5185\u7f6e\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\uff0c\u52a0\u8f7d\u6d4b\u8bd5\u96c6\u7684\u7528\u4f8b\uff0c\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u4f7f\u7528\u4e86api\u5219\u5408\u5e76\uff0c\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u4f7f\u7528\u4e86suite\u5219\u6269\u5c55\u3002\n\n1. case\u7528\u4f8b\uff1a \n\n```\n# test.yaml\n\n- project:\n    name: demo project\n    module: the module name of testing project\n\n- case:    \n    name: case 1\n\n- case:\n    name: case call api 1\n    api: test1_api()\n\n- case:\n    name: case call suite\n    api: test_suite(1, 2)\n\n```\n\n2. api\u7528\u4f8b \n\n- \u5728api\u5173\u952e\u5b57\u4e2d\u4e2d\uff0c\u4f7f\u7528def\uff0c\u8868\u793a\u5f53\u524d\u662f\u4e2a api\u7528\u4f8b\n- api\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53ef\u88absuite\u548ccase\u91cd\u590d\u5f15\u5165\n- \u5b58\u653e\u8def\u5f84, case\u7528\u4f8b\u540c\u7ea7\u76ee\u5f55\u4e0b:  dependencies/api/*\u3002yaml, dependencies/api/*\u3002yml, dependencies/api/*\u3002json\n- \u6cbf\u7528case\u4e2d\u5b9a\u4e49\u7684\u5173\u952e\u5b57, \u5bf9\u5916\u8c03\u7528\uff0c\u4f7f\u7528\u4e86def\u5173\u952e\u5b57\u3002 \u5176\u4e2d\uff0cdef\u7684\u89e3\u6790\uff0c\u53c2\u7167\u4e86httprunner\u9879\u76ee\n\n```\n# test_api.yaml\n\n- api:    \n    def: test1_api()\n\n- api:    \n    def: test2_api($arg1, $arg2)    \n```\n\n\n3. suite\u7528\u4f8b\n\n- \u5728project\u4e2d\uff0c\u5b9a\u4e49def\uff0c\u8868\u793a\u5f53\u524d\u6574\u4e2ayaml\u6587\u4ef6\uff0c\u662f\u4e00\u4e2asuite\n- suite\u6d4b\u8bd5\u7528\u4f8b\uff0c \u53ef\u88abcase\u548c\u5176\u4ed6suite\u91cd\u590d\u5f15\u5165\n- suite\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b9e\u9645\u4e0a\u662f\uff0c\u7531\u4e00\u4e9bapi\u6216\u8005\u4e00\u4e9bcase\uff0c\u5c01\u88c5\u540e\u7684\uff0c\u76f8\u5bf9\u7a33\u5b9a\u7684\uff0c\u6d4b\u8bd5\u7528\u4f8b\n- \u5b58\u653e\u8def\u5f84, \u6d4b\u8bd5\u7528\u4f8b\u540c\u7ea7\u76ee\u5f55\u4e0b:  dependencies/suite/*\u3002yaml, dependencies/suite/*\u3002yml, dependencies/suite/*\u3002json\n\n> suite\u7684\u7528\u4f8b\u8ddf case\u5dee\u522b\u4e0d\u5927\uff0c\u4e3b\u8981\u7684\u662f\uff0c\u5728project\u4e2d\uff0c\u6dfb\u52a0def\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u5f15\u5165suite\u7684\u51fd\u6570\u5165\u53e3\n\n```\n# test_suite.yaml\n\n- project:\n    def: test_suite($arg1, $arg2)\n\n- case:\n    name: suite 1\n\n- case:    \n    name: suite call api 2\n    api: test2_api($arg1, $arg2) \n\n```\n\n### \u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u51fd\u6570\u53ca\u53d8\u91cf\u66ff\u6362\u7684\u683c\u5f0f\n\n\u53d8\u91cf\u548c\u51fd\u6570\u7684\u66ff\u6362\uff0c\u53c2\u7167\u4e86httprunner\u9879\u76ee\u7684\u683c\u5f0f   \u8be5\u683c\u5f0f\u53d6\u4ee3\u4e86\u6211\u7684[rock4automation\u9879\u76ee](https://github.com/RockFeng0/rock4automation)\u4e2d\u7684\uff0c #var# \u7b49\u66ff\u6362\u89c4\u5219\n\n- \u5f15\u7528\u51fd\u6570:   ${function_str}\n- \u5f15\u7528\u53d8\u91cf:   $variable_str\n- function_str \u4e3a\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u3001\u6a2a\u7ebf\u3001\u70b9\u53f7\u3001\u7b49\u53f7\u3001\u9017\u53f7\u7ec4\u6210\u7684\u51fd\u6570. \u793a\u4f8b:  /api/${add(1, 2)}?_t=${get_timestamp()}   \u6b63\u5219\u8868\u793a\u4e3a: [a-zA-Z0-9.-_=,]\n- function_str\u82e5\u542b\u6709\u7279\u6b8a\u5b57\u7b26\uff0c\u5c06\u4e0d\u4f1a\u88ab\u8bc6\u522b\uff0c \u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u4f7f\u7528\u5168\u5c40\u53d8\u91cf.   \u793a\u4f8b,\u5982:  a='@#$%^&'; $print($a)\n- variable_str \u4e3a\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u53d8\u91cf\u540d.  \u6b63\u5219\u8868\u793a\u4e3a:  [a-zA-Z0-9_]  \n\n### \u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b\n\n\u4f7f\u7528\u9ed8\u8ba4Runner\u7c7b\u6267\u884c\u89c4\u5219\uff0c\u6267\u884ctest.yaml\u6d4b\u8bd5\u7528\u4f8b\n\n```\nfrom rtsf.p_executer import TestRunner, Runner\n\nrunner = TestRunner(runner = Runner).run(r'C:\\xxx\\xxx\\test.yaml')\nrunner.gen_html_report()\n```\n\n- TestRunner(runner = Runner),runner\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u91cd\u5199\u4e86Runner\u5b50\u7c7b,\u8be5\u5b50\u7c7b\u91cd\u5199\u4e86Runner.run_test\u65b9\u6cd5\u3002 \u9ed8\u8ba4\u503c\u4e3aRunner\n- TestRunner.run, \u8be5\u65b9\u6cd5\uff0c\u7528\u4e8e**\u8fd0\u884c\u6307\u5b9ayaml\u7684case\u6587\u4ef6**\uff0c\u6216\u8005**\u8fd0\u884c\u6307\u5b9a\u6587\u4ef6\u5939\u8def\u5f84\u4e2d\u7684yaml\u548cjson**,\u5982c:\\case\u76ee\u5f55\u4e0b*.yaml\u548c*.json\n- TestRunner\u3002gen_html_report,\u8be5\u65b9\u6cd5\uff0c\u7528\u4e8e\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\uff0c\u62a5\u544a\u8def\u5f84\u662fyaml\u6587\u4ef6\u6240\u5728\u8def\u5f84\n\n\n### \u7b80\u5355\u5b9e\u4f8b\n\n \u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6,\u5982 example_1.yaml \n\n```\n# example_1.yaml\n\n- project:\n    name: demo project\n    module: test baidu\n\n- case:    \n    name: www.baidu.com\n\n```\n\nexample_1\u6267\u884c\u540e\u7684\u62a5\u544a:\n![\u5b9e\u4f8b-1.png](https://raw.githubusercontent.com/RockFeng0/img-folder/master/rtsf/\u5b9e\u4f8b-1.png)\n\n**\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_1**\n\n### \u6570\u636e\u9a71\u52a8-\u5b9e\u4f8b\n\n\u5982\u4e0b\uff0c\u521b\u5efa\u4e09\u4e2a\u6587\u4ef6\uff0cexample_2.yaml, username_password.csv, devices.csv\n\n```\n# example_2.yaml\n\n- project:\n    name: demo project\n    module: test baidu\n    data:\n        - csv: devices.csv\n          by: Random\n        - csv: username_password.csv    \n\n- case:    \n    name: www.baidu.com-$username-$password-$devices\n\n\n# username_password.csv\nusername,password\n15312341230,1234567890\n15312341231,1234567891\n\n\n# devices.csv\ndevices\nandroid-0\nandroid-1\nandroid-2\n\n```\n\n\u6570\u636e\u9a71\u52a8\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5728yaml\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5728project\u5757\uff0c\u6dfb\u52a0data\u5173\u952e\u5b57\u3002\n\ndata\u5173\u952e\u5b57\uff0c\u4ee5\u5217\u8868\u5f62\u5f0f\u5b58\u5728\uff0c\u6bcf\u4e2a\u5217\u8868\u9879\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u7531\u4e24\u4e2akey\u7ec4\u6210(csv, by)\u3002\u8ddfloadrunner\u4e2d\u53c2\u6570\u5316\u6570\u636e\u4e00\u6837\uff0ccsv\u7b2c\u4e00\u884c\u5b9a\u4e49\u53d8\u91cf\uff0c\u7b2c\u4e8c\u884c\u53ca\u4ee5\u4e0b\u884c\u5b9a\u4e49\u6570\u636e\u9a71\u52a8\u7684\u53d8\u91cf\u503c\n- csv\u540e\u9762\u63a5\u6587\u4ef6\u540d\u79f0\uff0c\u8be5\u6587\u4ef6\u4ee5csv\u5f62\u5f0f\u5b58\u5728\u4e8ecase\u540c\u4e00\u8def\u5f84\u3002\n- by\u662f\u6307\u8bfb\u53d6csv\u683c\u5f0f\u7684\u987a\u5e8f\uff0c Random or Sequential\u3002\u9ed8\u8ba4\u662fSequential\uff0c\u987a\u5e8f\u8bfb\u53d6\u3002 \u8be5\u53c2\u6570\uff0c\u53ef\u9009\u586b\n- \u7b1b\u5361\u513f\u79ef\u7b97\u6cd5\uff0c\u4f1a\u5bf9\u591a\u4e2adata\u53c2\u6570\u8fdb\u884c\u6392\u5217\uff0crtsf\u4f1a\u5bf9\u6392\u5217\u7684\u6700\u7ec8\u7ed3\u679c\u904d\u5386\u6267\u884c\u5f53\u524d\u6d4b\u8bd5\u96c6\u5408\n\nexample_2\u6267\u884c\u540e\u7684\u62a5\u544a\uff0c\u5982\u4e0b\uff0c \u8dd1\u4e866\u6761\u7528\u4f8b\uff0c\u662fusername_password.csv\u548cdevices.csv\u91cc\u8fb9\u53c2\u6570\u7684\u7b1b\u5361\u513f\u79ef\uff0cusername_password\u9ed8\u8ba4\u662f\u987a\u5e8f\uff0cdevices\u662f\u968f\u673a\u3002\n![\u5b9e\u4f8b-2.png](https://raw.githubusercontent.com/RockFeng0/img-folder/master/rtsf/\u5b9e\u4f8b-2.png)\n\n**\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_2**\n\n### \u91cd\u5199Runner-\u5b9e\u4f8b\n\n- rtsf\u63d0\u4f9b\u5165\u53e3\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u6267\u884c\u6a21\u5757\u7684\u6269\u5c55\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u7c7b\u4f3cpython\u4e2d\u91cd\u5199threading.Thread\u7c7b.\n- \u4e0d\u540c\u7684\u662f\uff0crtsf\u9700\u8981\u91cd\u5199rtsf.p_executer.Runner.run_test\u65b9\u6cd5\n\n\u9996\u5148\uff0c \u6211\u4eec\u8bbe\u8ba1\u6211\u4eec\u7684yaml\u7528\u4f8b\uff0c \u6bd4\u5982\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u52a0\u5165\u4e86\u51e0\u4e2a\u5173\u952e\u5b57\uff0c responsible, tester, demotest, demoverify\n\n```\n# example_3.yaml\n\n- project:\n    name: demo project\n    module: test baidu\n\n- case:    \n    name: demo test\n    responsible: your name\n    testser: other name\n    demotest: ${add(1, 2)}\n    demoverify: ${_is(3)}\n\n- case:    \n    name: demo test2\n    responsible: your name\n    testser: other name\n    demotest: ${mod(1, 2)}\n    demoverify: ${_is(3)} \n\n- case:    \n    name: demo test3\n    responsible: your name\n    testser: other name\n    demotest: ${mod(1, 0)}\n    demoverify: ${_is(3)} \n\n```\n\n\u7136\u540e\uff0c\u91cd\u5199Runner\uff0c \u5bf9\u4e0a\u9762\u5173\u952e\u5b57\u8fdb\u884c\u529f\u80fd\u8bbe\u7f6e\uff0c \u91cd\u5199 Runner.run_test\u7684\u8fc7\u7a0b\uff0c\u662f\u4f7f\u7528rtsf\u7684\u4e3b\u8981\u5de5\u4f5c\n\n- run_test(testcase_dict, variables, driver_map), rtsf\u5728\u6267\u884c\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u8c03\u7528run_test\u65b9\u6cd5\uff0c\u4f20\u5165\u8fd93\u4e2a\u53c2\u6570\n\n> \u6ce8\u610f: \u91cd\u5199\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u662f\u5355\u4e2acase\uff0c\u4e0d\u662f\u6240\u6709case\uff0c**\u53ea\u9700\u8981\u5199\u4e00\u4e2acase\u7684\u6267\u884c\u903b\u8f91**\n\n```\n# DemoRunner.py\n\n# encoding:utf-8\n\nfrom rtsf.p_executer import TestRunner, Runner\n\ndef test_add(x, y):\n    global result\n    result = x+y\n\ndef test_mod(x, y):\n    global result\n    result = x%y\n\ndef verify_is(x):\n    return result == x    \n\nclass DemoRunner(Runner):      \n\n    def __init__(self):\n        ''' \u7ee7\u627fRunner\n        self._default_devices --> list,\u5206\u5e03\u5f0f\u8bbe\u5907\u6807\u8bc6\u3002 \u9ed8\u8ba4 \u503c [\"\"]\uff0c\u8868\u793a\u672c\u673a\n        self._default_drivers --\u300b list, \u5206\u5e03\u5f0fdriver\u6807\u8bc6\u4e0edriver\u952e\u503c\u5bf9\u3002 \u9ed8\u8ba4\u503c [(\"\",None)]\uff0c \u8868\u793a\u672c\u673a\u9a71\u52a8\n        self.parser --> TestCaseParser\u5b9e\u4f8b\uff0c\u7528\u4e8e\u89e3\u6790\u7528\u4f8b\n        self.tracers --> \u6bcf\u4e00\u53f0\u5206\u5e03\u5f0f\u8bbe\u5907\u521d\u59cb\u5316\u7684Tracer\u5b9e\u4f8b\uff0c\u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7\u548c\u751f\u6210\u62a5\u544a       \n        self.proj_info --> \u8bb0\u5f55\u4e86\u7528\u4f8b\u7684\u9879\u76ee\u4fe1\u606f \n        '''\n        super(DemoRunner,self).__init__()\n\n    def run_test(self, testcase_dict, variables, driver_map):\n        ''' \u91cd\u5199 run_test\uff0c\u6709\u4e09\u4e2a\u53c2\u6570\n        @parm testcase_dict:  \u5355\u6761\u6d4b\u8bd5\u7528\u4f8b\n        @param variables: dict; \u7528\u4f8b\u91c7\u7528\u6570\u636e\u9a71\u52a8\u7684\u60c5\u51b5\u4e0b\uff0cvariables\u662fcsv\u6587\u4ef6\u53d8\u91cf\u7684\u7b1b\u5361\u513f\u79ef\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u503c\u662f {}\n        @param driver_map:  tuple;  (\u552f\u4e00\u6807\u8bc6, driver or module or obj); \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7684\u503c\u662f(\"\",None),\u8be5\u53c2\u6570\u9002\u7528\u4e8eselenium\u7684grid\u6709\u591a\u4e2a driver\u7684\u60c5\u51b5\n        '''\n\n        # rtsf \u904d\u5386 self._default_drivers, \u4f20\u7ed9 driver_map   \u8fd9\u91ccfn = ''  driver=None\n        fn, driver = driver_map\n\n        # \u83b7\u53d6 fn \u7684\u8ddf\u8e2a\u5bf9\u8c61\uff0c \u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7 \u548c \u62a5\u544a\n        fn_logger = self.tracers[fn]\n\n        # \u83b7\u53d6\u7528\u4f8b\u89e3\u6790\u5bf9\u8c61\n        parser = self.parser\n\n        # \u7ed1\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u5173\u952e\u5b57\n        yaml_keys = {\"add\": test_add, \"mod\": test_mod, '_is': verify_is}\n        parser.bind_functions(yaml_keys)        \n\n        # \u66f4\u65b0\u4f20\u5165\u7684\u53d8\u91cf\n        parser.update_binded_variables(variables)\n\n        # \u83b7\u53d6\u7528\u4f8b\u540d\u5b57  \n        case_name = testcase_dict.get(\"name\")        \n\n        # parser.eval_content_with_bind_actions \u7528\u4e8e\u89e3\u6790 \u5b57\u6bb5\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570\uff0c  \u5982:  \u5f15\u7528\u51fd\u6570: ${function_str} \u5f15\u7528\u53d8\u91cf: $variable_str\n        case_name = parser.eval_content_with_bind_actions(case_name)\n\n        try:\n            # fn_logger \u53ef\u4ee5\u8bb0\u5f55\u62a5\u544a\uff0c\u4f7f\u7528:  start, section, step, normal, ok, fail, error, stop\n            # start \u7528\u4e8e \u5f00\u59cb\u8bb0\u5f55\u62a5\u544a\uff1b  stop \u7528\u4e8e\u7ed3\u675f\u62a5\u544a\u8bb0\u5f55\n            fn_logger.start(self.proj_info[\"module\"],  # yaml case\u4e2d module\n                            case_name,  # yaml case\u4e2d \u7528\u4f8b\u540d\u81e3\n                            testcase_dict.get(\"responsible\",u\"administrator\"), # yaml case\u4e2dresponsible\u5b9a\u4e49\u7684\u8d23\u4efb\u4eba\u540d\u79f0 \n                            testcase_dict.get(\"tester\",u\"administrator\"), # yaml case\u4e2dtester\u5b9a\u4e49\u7684\u6d4b\u8bd5\u4eba\u540d\u79f0\n                            )\n\n            # fn_logger \u53ef\u4ee5\u4f7f\u7528\u4e86logging, \u8bb0\u5f55\u65e5\u5fd7\uff0c\u4f7f\u7528:  log_debug, log_info, log_warning, log_error, log_critical\n            fn_logger.log_debug(u\"===== run_test\\n\\t{}\".format(testcase_dict))\n\n            fn_logger.section(u\"------------starting test\")\n            # \u83b7\u53d6demotest\n            demotest = testcase_dict.get(\"demotest\")\n            fn_logger.step(\"got demotest: %s\" %demotest)\n\n            parser.eval_content_with_bind_actions(demotest)                \n            fn_logger.normal(u\"eval demotest. finish\")\n\n            # \u83b7\u53d6demoverify\n            demoverify = testcase_dict.get(\"demoverify\")\n            fn_logger.step(\"got demoverify: %s\" %demoverify)\n\n            if parser.eval_content_with_bind_actions(demoverify):\n                fn_logger.ok('verify is ok')\n            else:\n                fn_logger.fail('verify is fail')\n            fn_logger.normal(u\"eval demoverify. finish\")            \n\n        except Exception as e:\n            fn_logger.error(e)\n\n        fn_logger.stop()\n```\n- DemoRunner\u4e2d\uff0c\u4e09\u4e2a\u5185\u7f6e\u51fd\u6570 test_add  test_mod  verify_is \u6620\u5c04\u5230 yaml\u51fd\u6570:  add,  mod, _is\n- DemoRunner\u4e2d\uff0c \u4f7f\u7528Tracer\u7684\u5b9e\u4f8bfn_logger\uff0c\u5bf9\u6d4b\u8bd5\u6267\u884c\u8fc7\u7a0b\u8fdb\u884c\u65e5\u5fd7\u548c\u62a5\u544a\u7684\u8bb0\u5f55\uff0c\u6700\u540e\u4f7f\u7528 fn_logger.stop()\u7ed3\u675f\u6d4b\u8bd5\n\n\u6700\u540e\uff0c\u6211\u4eec\u8bbe\u7f6erunner\u53c2\u6570\u4e3a DemoRunner, \u6267\u884c\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u7528\u4f8b\u903b\u8f91\n\n```\n# example_3.py\n\n# encoding:utf-8\n\nfrom rtsf.p_executer import TestRunner, Runner\nfrom DemoRunner import DemoRunner\n\nrunner = TestRunner(runner = DemoRunner).run(r'example_3.yaml')\nrunner.gen_html_report()\n```\n\nexample_3\u6267\u884c\u540e\u7684\u62a5\u544a\uff0c\u5982\u4e0b\uff0c\u8dd1\u4e863\u6761\u7528\u4f8b\uff0c1\u6761\u901a\u8fc7\uff0c1\u6761\u5931\u8d25\uff0c1\u6761\u62a5\u9519\n![\u5b9e\u4f8b-3.png](https://raw.githubusercontent.com/RockFeng0/img-folder/master/rtsf/\u5b9e\u4f8b-3.png)\n\n**\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_3**\n\n### \u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42(\u6d4b\u8bd5\u7ec4\u4ef6\u5316)-\u5b9e\u4f8b\n\n\u4f7f\u7528\u4e0a\u8ff0\u7684DemoRunner\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e0b \u5206\u5c42\u7684\u7528\u4f8b\uff0c\u521b\u5efa\u5982\u4e0b\u4e09\u4e2a\u6587\u4ef6, \u6587\u4ef6\u540d\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u8def\u5f84\u8981\u6b63\u786e\n\n- api\u7528\u4f8b\u6587\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528\u53c2\u6570\u5316\uff0c\u4f7f\u5f97api\u7528\u4f8b\uff0c\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528\n- suite\u7528\u4f8b\u6587\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528\u5e38\u89c4\u7684\u6d4b\u8bd5\u624b\u6bb5\uff0c\u5c01\u88c5\u4e86\u6b63\u5e38\u7684\u6d4b\u8bd5\u573a\u666f\n- \u6700\u540e\uff0ccase\u7528\u4f8b\u6587\u4ef6\uff0c\u6211\u4eec\u505a\u4e00\u4e9b\u5f02\u5e38\u6d4b\u8bd5\u573a\u666f\n\n```\n# ./dependencies/api/test_api.yaml\n\n- api:    \n    def: add_api($arg1, $arg2, $exp)\n    demotest: ${add($arg1, $arg2)}\n    demoverify: ${_is($exp)}\n\n- api:\n    def: mod_api($arg1, $arg2, $exp)\n    demotest: ${mod($arg1, $arg2)}\n    demoverify: ${_is($exp)} \n\n# ./dependencies/suite/test_suite.yaml\n\n- project:\n    def: suite_test()\n\n- case:\n    name: suite 1\n    api: add_api(1, 2, 3)\n\n- case:    \n    name: suite 2\n    api: mod_api(2, 2, 0)\n\n- case:    \n    name: suite 3\n    demotest: ${add(1, 2)}\n    demoverify: ${_is(3)} \n\n# ./example_4.yaml\n\n- project:\n    name: demo project\n    module: a demo test\n\n- case:    \n    name: case 0\n    suite: suite_test()\n\n- case:\n    name: case 1\n    api: add_api(1, 2, 100)\n\n- case:    \n    name: case 2\n    api: mod_api(1, 2, 100)\n\n- case:    \n    name: case 3\n    demotest: ${add(1, 2)}\n    demoverify: ${_is(3)} \n\n```\n\nexample_4\u6267\u884c\u540e\u7684\u62a5\u544a\uff0c\u5982\u4e0b\uff0c\u8dd1\u4e866\u6761\u7528\u4f8b\uff0csuite\u4e2d3\u6761\u901a\u8fc7\uff0ccase\u76843\u6761\u4e2d\uff0c2\u6761\u5931\u8d25\uff0c1\u6761\u6210\u529f\n![\u5b9e\u4f8b-4.png](https://raw.githubusercontent.com/RockFeng0/img-folder/master/rtsf/\u5b9e\u4f8b-4.png)\n\n**\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_4**\n\n### \u81ea\u5b9a\u4e49\u5185\u7f6e\u51fd\u6570\n\u5728\u4e0a\u8ff0DemoRunner\u91cd\u5199 Runner.run_test\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e09\u4e2ayaml\u51fd\u6570: add, mod, _is, \u6620\u5c04\u5230\u5185\u7f6e\u51fd\u6570\uff0c test_add  test_mod  verify_is\n\nrtsf \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5\n1. \u5b9a\u4e49preference.py\uff0c\u5c06yaml\u51fd\u6570\u5199\u5165 \n\n```\n# preference.py\n\n#encoding:utf-8\n\ndef add(x, y):\n    global result\n    result = x+y\n\ndef mod(x, y):\n    global result\n    result = x%y\n\ndef _is(x):\n    return result == x \n```\n2. \u6ce8\u91ca\uff0cDemoRunner\u4e2d\uff0c\u6620\u5c04\u76f8\u5173\u4ee3\u7801\n\n```\n...\n\n# \u7ed1\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u5173\u952e\u5b57\n# yaml_keys = {\"add\": test_add, \"mod\": test_mod, 'is': verify_is}\n# parser.bind_functions(yaml_keys)\n...\n\n```\n\u6267\u884c\u7ed3\u679c\uff0c\u540c example_4\n\n**\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_5**\n\n## rtsf-\u9ad8\u9636\u7528\u6cd5\n\n\u57fa\u4e8e\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u4f7f\u7528rsft\u6784\u5efa\u81ea\u5df1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\n\n### \u7ea6\u5b9a\u57fa\u672c\u7528\u4f8b\u7ed3\u6784\n\n\uff0crtsf\u7cfb\u5217\u6846\u67b6\uff0c**\u7ea6\u5b9a\u7684case\u57fa\u672c\u7ed3\u6784** \u5982\u4e0b\uff1a\n\n```\n- project:    \n    name:    \n    module:    \n    data:\n- case:\n    name:\n    responsible:\n    tester:\n    glob_var:\n    glob_regx:\n    pre_command:\n    steps:\n    post_command:\n    verify:\n```\n\n> \u6267\u884c\u987a\u5e8f  pre_command(List) -> steps(List) -> post_command(List) -> verify(List)\n\n**preject\u5b9a\u4e49\u6d4b\u8bd5\u96c6\u4fe1\u606f**\n\n| project\u5b57\u6bb5               | \u63cf\u8ff0                                        | \u7c7b\u578b              |\n| ------------- |:-------------:| -----:|\n| name          | \u9879\u76ee\u540d\u79f0\u6216\u5f85\u6d4b\u7cfb\u7edf\u540d\u79f0(\u5fc5\u586b)| \u5b57\u7b26\u4e32       |\n| module        | \u6d4b\u8bd5\u96c6\u6216\u529f\u80fd\u6a21\u5757\u540d\u79f0(\u5fc5\u586b) | \u5b57\u7b26\u4e32       |\n| data          | \u6570\u636e\u9a71\u52a8\uff0c\u5f15\u7528\u7684\u6570\u636e(\u9009\u586b) | \u5217\u8868      |\n\n**case\u5b9a\u4e49\u6d4b\u8bd5\u7528\u4f8b**\n\n| case\u5b57\u6bb5               | \u63cf\u8ff0                                        | \u7c7b\u578b              |\n| ------------- |:-------------:| -----:|\n| name          | \u63cf\u8ff0 \u7528\u4f8b (\u5fc5\u586b)\uff0c\u552f\u4e00\u6027(\u5fc5\u586b) | \u5b57\u7b26\u4e32       |\n| responsible   | \u7528\u4f8b\u8d23\u4efb\u4eba\u6216\u8005\u7f16\u5199\u4eba(\u9009\u586b) |\u5b57\u7b26\u4e32           |\n| tester        | \u7528\u4f8b\u6267\u884c\u8005\u6216\u8005\u6d4b\u8bd5\u4eba(\u9009\u586b) | \u5b57\u7b26\u4e32           |\n| glob_var      | \u5168\u5c40\u53d8\u91cf(\u9009\u586b)         | \u5b57\u5178           |\n| glob_regx     | \u5168\u5c40\u6b63\u5219(\u9009\u586b)         | \u5b57\u5178           |\n| pre_command   | \u6d4b\u8bd5\u7684\u524d\u7f6e\u6b65\u9aa4\u6216\u94a9\u5b50(\u9009\u586b) | \u5217\u8868           |\n| steps         | \u6d4b\u8bd5\u6b65\u9aa4 (\u5fc5\u586b)         | \u5217\u8868           |\n| post_command  | \u6d4b\u8bd5\u7684\u540e\u7f6e\u6b65\u9aa4\u6216\u94a9\u5b50(\u9009\u586b) | \u5217\u8868           |\n| verify        | \u6821\u9a8c  (\u9009\u586b)           | \u5217\u8868           |\n\n\n\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RockFeng0/rtsf", "keywords": "test requests locust HTTP api selenium appium uiautomation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rtsf", "package_url": "https://pypi.org/project/rtsf/", "platform": "", "project_url": "https://pypi.org/project/rtsf/", "project_urls": {"Homepage": "https://github.com/RockFeng0/rtsf"}, "release_url": "https://pypi.org/project/rtsf/2.9.4/", "requires_dist": ["PyYAML", "Jinja2", "colorama", "colorlog", "urllib3"], "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "summary": "rock4 test service framework", "version": "2.9.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>\u9879\u76ee\u521d\u8877</h1>\n<blockquote>\n<p>\u4e3a\u4ec0\u4e48\u5df2\u7ecf\u6709\u4e86<a href=\"https://github.com/RockFeng0/rock4automation\" rel=\"nofollow\">rock4automation</a>\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\u7684\u9879\u76ee\uff0c\u8fd8\u8981\u53e6\u8d77\u4e00\u4e2artsf\u9879\u76ee\uff0c\u5e76\u4e14rtsf\u4e2d\u4f7f\u7528\u7684\u6280\u672f\uff0crock4automation\u9879\u76ee\u4e2d\u5df2\u7ecf\u6db5\u76d6\uff1f</p>\n</blockquote>\n<p>\u56e0\u4e3a\uff0c\u5b83\u5b58\u5728\u7684\u75db\u70b9\u5f88\u660e\u663e\uff1a</p>\n<ul>\n<li>rock4automation\u9879\u76ee\u7684\u521d\u8877\uff0c\u662f\u4e3a\u4e86\u80fd\u5feb\u901f\u91cd\u62fe\u6280\u672f\uff0c\u662f\u6280\u672f\u7684\u5408\u96c6\uff0c\u5305\u542b\u4e86\u65b0\u65e7\u6d4b\u8bd5\u7684\u6280\u672f\u3002\u91cc\u8fb9\u4e00\u4e9b\u6a21\u5757\uff0c\u662f\u5197\u4f59\u7684\u5b58\u5728\uff0c\u8fd9\u8ba9\u9879\u76ee\u672c\u8eab\u5f88\u81c3\u80bf\u3002\u5982\u6574\u5408\u7684\u4e00\u4e9b\u81ea\u52a8\u5316\u6846\u67b6\uff0cselenium\u3001appium\u3001autoitv3\u3001Microsoft UI Automation\u7b49\u7b49\uff0c\u5173\u4e8e\u6027\u80fd\u7684\u6d4b\u8bd5\uff0c\u6574\u5408\u4e86locust\u7684\u4e00\u4e9b\u7528\u6cd5\u3002</li>\n<li>rock4automation\u9879\u76ee,\u6253\u5305\u53d1\u5e03\u7684\u7a0b\u5e8f\uff0c\u4f1a\u5c06\u6e90\u7801\u5c01\u88c5\u4e86exe\u6216\u8005\u52a0\u5bc6\u4e3apyd\uff0c\u4e5f\u5c31\u662f\u8bf4\uff0c\u53d1\u5e03\u51fa\u6765\u7684\u7a0b\u5e8f\uff0c\u4e0d\u662f\u4e00\u4e2a\u6e90\u7801\uff0c\u800c\u662f\u4e00\u4e2a\u5ba2\u6237\u7aef\u7a0b\u5e8f\uff0c\u8fd9\u5c31\u6709\u8fdd\u6211\u5f00\u6e90\u7684\u610f\u56fe\u4e86</li>\n<li>rock4automation\u9879\u76ee,\u6253\u5305\u4e86\u76f8\u5173\u5de5\u5177\uff0c\u6bd4\u5982appium-server\uff0cjava.exe \u7b49\u7b49\uff0c\u5927\u91cf\u5197\u4f59\u7684\u975e\u9879\u76ee\u6e90\u7801\u7684\u5de5\u5177</li>\n</ul>\n<p>\u800crtsf(rock4 test service framework)\u9879\u76ee\u7684\u521d\u8877\uff1a</p>\n<ul>\n<li>\u53c2\u8003rock4automation\u548chttprunner\u7684\u9879\u76ee\uff0c\u6211\u5e0c\u671b\u80fd\u7cbe\u7b80\u4e00\u4e0brtsf\uff0c\u4f7f\u5b83<strong>\u4ec5\u4ec5\u63d0\u4f9b\u4e00\u4e2a\u6d4b\u8bd5\u7684\u5173\u952e\u5b57\u9a71\u52a8\u548c\u6570\u636e\u9a71\u52a8\u7684\u7a0b\u5e8f\u6846\u67b6</strong>\u3002</li>\n<li>\u5176\u6b21\uff0c\u6211\u5e0c\u671b<strong>rtsf\u662f\u4e2a\u53ef\u6269\u5c55\u7684\u670d\u52a1\u6846\u67b6</strong>\uff0c\u4e00\u4e9b\u81ea\u52a8\u5316\u6280\u672f\u7684\u6846\u67b6\uff0c\u53ef\u4ee5\u4f9d\u6258rtsf\uff0c\u8fc5\u901f\u5f62\u6210\u4e00\u4e2a\u6709\u6548\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u76f8\u5173\u7684\u4e1a\u52a1\u6846\u67b6\u3002\u5982\u6574\u5408selenium\u5f62\u6210web\u5e94\u7528\u4e1a\u52a1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff1b\u6574\u5408requests\u7b49\u6280\u672f\uff0c\u5f62\u6210http(s)\u63a5\u53e3\u5c42\u4e1a\u52a1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\u7b49\u3002</li>\n<li>\u53e6\u5916\uff0c\u5173\u4e8e\u6301\u7eed\u7ee7\u627f\u65b9\u9762\uff0c\u6211\u5e0c\u671b<strong>rtsf\u662f\u4e2a\u547d\u4ee4\u884c\u7684\u5de5\u5177</strong>\uff0c\u4f9d\u6258\u5b83\u4ea7\u751f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6\uff0c\u53ef\u4ee5\u63a5\u5165\u6301\u7eed\u96c6\u6210\u7684\u7cfb\u7edf\u3002</li>\n<li>\u6700\u540e\uff0c\u6211\u5e0c\u671b\uff0c\u4f9d\u6258rtsf\u4ea7\u751f\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u9879\u76ee\uff0c\u80fd\u591f\u8f7b\u91cf\uff0c\u5c11\u9020\u8f6e\u5b50\uff0c\u591a\u590d\u7528\u6807\u51c6\u5e93\u548c\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\uff0c</li>\n</ul>\n<h1>\u67b6\u6784</h1>\n<p><img alt=\"rtsf\u67b6\u6784.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b484fb73701c4721c02edb6acb2841c5fb6135fb/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f526f636b46656e67302f696d672d666f6c6465722f6d61737465722f727473662f727473662545362539452542362545362539452538342e706e67\"></p>\n<h2>\u6784\u5efartsf\u7cfb\u5217\u6846\u67b6</h2>\n<p>\u6211\u8fd9\u91cc\u5df2\u7ecf\u5b8c\u6210\u4e86\u51e0\u4e2artsf+\u7684\u9879\u76ee,\u4f9b\u5927\u5bb6\u53c2\u8003\u548c\u4f7f\u7528:</p>\n<ul>\n<li>\u63a5\u53e3\u6d4b\u8bd5<a href=\"https://github.com/RockFeng0/rtsf-http\" rel=\"nofollow\">rtsf-http</a></li>\n<li>\u6d4f\u89c8\u5668\u6d4b\u8bd5<a href=\"https://github.com/RockFeng0/rtsf-web\" rel=\"nofollow\">rtsf-web</a></li>\n<li>android\u79fb\u52a8\u7aef<a href=\"https://github.com/RockFeng0/rtsf-app\" rel=\"nofollow\">rtsf-app</a></li>\n<li>windows\u684c\u9762\u5ba2\u6237\u7aef<a href=\"https://github.com/RockFeng0/rtsf-win\" rel=\"nofollow\">rtsf-win</a></li>\n</ul>\n<p>\u5176\u4ed6\u53ef\u63a5\u5165\u7684\u65b9\u6848:</p>\n<ul>\n<li>\u8ba1\u7b97\u673a\u89c6\u89c9opencv</li>\n<li>\u56fe\u5f62\u6587\u5b57\u8bc6\u522btesseract</li>\n<li>\u57fa\u4e8e\u50cf\u7d20\u70b9\u5bf9\u6bd4\u7684\u56fe\u50cfImageDiff</li>\n<li>\u57fa\u4e8eunity3d\u6280\u672f\u6e38\u620f\u63a7\u4ef6\u8bc6\u522bpocoui</li>\n</ul>\n<p>\u7b49\u7b49</p>\n<blockquote>\n<p>\u6d4b\u8bd5\u7528\u4f8b\u6a21\u578b\uff0c\u8ba1\u5212\u6269\u5c55\u4e3a, yaml, xml, excel\u4e09\u79cd\uff0c\u76ee\u524d\u5df2\u6269\u5c55\u7684\u53ea\u6709yaml\u6d4b\u8bd5\u7528\u4f8b\u6a21\u578b</p>\n</blockquote>\n<h1>\u4ecb\u7ecd</h1>\n<h2>\u5b89\u88c5</h2>\n<pre><code>pip install rtsf\n</code></pre>\n<h2>rtsf-\u4f7f\u7528\u5165\u95e8</h2>\n<p>rtsf\u63d0\u4f9b\u6d4b\u8bd5\u6267\u884c\u3001\u62a5\u544a\u3001\u65e5\u5fd7\u7684\u57fa\u672c\u529f\u80fd</p>\n<h3>\u6d4b\u8bd5\u7528\u4f8b\u4ecb\u7ecd</h3>\n<ul>\n<li>rtsf\u5206\u4e09\u79cd\u7528\u4f8b: case\u3001 api\u3001 suite\uff0c\u6240\u4ee5rtsf<strong>\u652f\u6301\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42\uff0c\u5141\u8bb8\u6d4b\u8bd5\u7528\u4f8b\u7684\u7ec4\u4ef6\u5316</strong>, \u5176\u4e2dapi\u548csuite,\u6bd4case\u591a\u4e00\u4e2a\u5173\u952e\u5b57: def</li>\n<li>\u6d4b\u8bd5\u7528\u4f8b\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528api\u5173\u952e\u5b57\u5c01\u88c5\u5f53\u524d\u5355\u4e2acase\uff0c\u5141\u8bb8\u5176\u4ed6case\u8fdb\u884c\u8c03\u7528,\u7c7b\u4f3c\u8c03\u7528\u5355\u4e2aapi\u4e00\u6837</li>\n<li>\u6d4b\u8bd5\u7528\u4f8b\u7f16\u5199\u8fc7\u7a0b\u4e2d\uff0c\u4f7f\u7528suite\u5173\u952e\u5b57\uff0c\u5c01\u88c5\u5f53\u524d\u591a\u4e2acases\uff0c\u5141\u8bb8\u5176\u4ed6case\u8fdb\u884c\u8c03\u7528\uff0c \u7c7b\u4f3c\u8c03\u7528\u7ec4\u4ef6\u5316\u6a21\u5757\u4e00\u6837</li>\n<li>def\u5b9a\u4e49\u7684api\u548csuite,\u4f20\u9012\u53c2\u6570\u7684\u66ff\u6362\u8fc7\u7a0b:  \u5f53\u524d\u7528\u4f8b\u8c03\u7528api\u6216suite\u65f6\uff0c<strong>\u4f1a\u5148\u5c06\u4f20\u9012\u7684\u53c2\u6570\u503c\uff0c\u66ff\u6362\u88ab\u8c03\u7528\u7684api\u6216suite\u4e2d\u76f8\u5e94\u7684\u53c2\u6570</strong></li>\n<li>api\u7528\u4f8b\u7684\u8c03\u7528\u8fc7\u7a0b: \u5f53\u524d\u7528\u4f8b\u8c03\u7528api\u7684\u65f6\u5019\uff0c\u5982\u679c<strong>\u5f53\u524dcase\u4e0eapi\u91cd\u590d\u5b9a\u4e49\u952e\u503c\u5bf9\u65f6\uff0c\u53d6\u5f53\u524dcase\u4e2d\u952e\u503c\u5bf9\u503c</strong></li>\n<li>suite\u7528\u4f8b\u7684\u8c03\u7528\u8fc7\u7a0b: \u5f53\u524d\u7528\u4f8b\u8c03\u7528suite\u7684\u65f6\u5019\uff0c\u5982\u679c<strong>\u5f53\u524dcase\u4e0esuite\u91cd\u590d\u5b9a\u4e49\u952e\u503c\u5bf9\uff0c\u53d6suite\u4e2d\u952e\u503c\u5bf9\u503c</strong></li>\n</ul>\n<blockquote>\n<p>\u6ce8\u610f: \u5176\u5185\u5728\u903b\u8f91\uff0c\u5176\u5b9e\u662f\uff0c\u5148\u52a0\u8f7dapi\u548csuite,\u4ee5dict\u5f62\u5f0f\u5b58\u50a8\u5728\u5185\u7f6e\u53d8\u91cf\u4e2d\uff0c\u7136\u540e\uff0c\u52a0\u8f7d\u6d4b\u8bd5\u96c6\u7684\u7528\u4f8b\uff0c\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u4f7f\u7528\u4e86api\u5219\u5408\u5e76\uff0c\u5982\u679c\u6d4b\u8bd5\u7528\u4f8b\u4f7f\u7528\u4e86suite\u5219\u6269\u5c55\u3002</p>\n</blockquote>\n<ol>\n<li>case\u7528\u4f8b\uff1a</li>\n</ol>\n<pre><code># test.yaml\n\n- project:\n    name: demo project\n    module: the module name of testing project\n\n- case:    \n    name: case 1\n\n- case:\n    name: case call api 1\n    api: test1_api()\n\n- case:\n    name: case call suite\n    api: test_suite(1, 2)\n\n</code></pre>\n<ol>\n<li>api\u7528\u4f8b</li>\n</ol>\n<ul>\n<li>\u5728api\u5173\u952e\u5b57\u4e2d\u4e2d\uff0c\u4f7f\u7528def\uff0c\u8868\u793a\u5f53\u524d\u662f\u4e2a api\u7528\u4f8b</li>\n<li>api\u6d4b\u8bd5\u7528\u4f8b\uff0c\u53ef\u88absuite\u548ccase\u91cd\u590d\u5f15\u5165</li>\n<li>\u5b58\u653e\u8def\u5f84, case\u7528\u4f8b\u540c\u7ea7\u76ee\u5f55\u4e0b:  dependencies/api/<em>\u3002yaml, dependencies/api/</em>\u3002yml, dependencies/api/*\u3002json</li>\n<li>\u6cbf\u7528case\u4e2d\u5b9a\u4e49\u7684\u5173\u952e\u5b57, \u5bf9\u5916\u8c03\u7528\uff0c\u4f7f\u7528\u4e86def\u5173\u952e\u5b57\u3002 \u5176\u4e2d\uff0cdef\u7684\u89e3\u6790\uff0c\u53c2\u7167\u4e86httprunner\u9879\u76ee</li>\n</ul>\n<pre><code># test_api.yaml\n\n- api:    \n    def: test1_api()\n\n- api:    \n    def: test2_api($arg1, $arg2)    \n</code></pre>\n<ol>\n<li>suite\u7528\u4f8b</li>\n</ol>\n<ul>\n<li>\u5728project\u4e2d\uff0c\u5b9a\u4e49def\uff0c\u8868\u793a\u5f53\u524d\u6574\u4e2ayaml\u6587\u4ef6\uff0c\u662f\u4e00\u4e2asuite</li>\n<li>suite\u6d4b\u8bd5\u7528\u4f8b\uff0c \u53ef\u88abcase\u548c\u5176\u4ed6suite\u91cd\u590d\u5f15\u5165</li>\n<li>suite\u6d4b\u8bd5\u7528\u4f8b\uff0c\u5b9e\u9645\u4e0a\u662f\uff0c\u7531\u4e00\u4e9bapi\u6216\u8005\u4e00\u4e9bcase\uff0c\u5c01\u88c5\u540e\u7684\uff0c\u76f8\u5bf9\u7a33\u5b9a\u7684\uff0c\u6d4b\u8bd5\u7528\u4f8b</li>\n<li>\u5b58\u653e\u8def\u5f84, \u6d4b\u8bd5\u7528\u4f8b\u540c\u7ea7\u76ee\u5f55\u4e0b:  dependencies/suite/<em>\u3002yaml, dependencies/suite/</em>\u3002yml, dependencies/suite/*\u3002json</li>\n</ul>\n<blockquote>\n<p>suite\u7684\u7528\u4f8b\u8ddf case\u5dee\u522b\u4e0d\u5927\uff0c\u4e3b\u8981\u7684\u662f\uff0c\u5728project\u4e2d\uff0c\u6dfb\u52a0def\u5173\u952e\u5b57\uff0c\u5b9a\u4e49\u5f15\u5165suite\u7684\u51fd\u6570\u5165\u53e3</p>\n</blockquote>\n<pre><code># test_suite.yaml\n\n- project:\n    def: test_suite($arg1, $arg2)\n\n- case:\n    name: suite 1\n\n- case:    \n    name: suite call api 2\n    api: test2_api($arg1, $arg2) \n\n</code></pre>\n<h3>\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u51fd\u6570\u53ca\u53d8\u91cf\u66ff\u6362\u7684\u683c\u5f0f</h3>\n<p>\u53d8\u91cf\u548c\u51fd\u6570\u7684\u66ff\u6362\uff0c\u53c2\u7167\u4e86httprunner\u9879\u76ee\u7684\u683c\u5f0f   \u8be5\u683c\u5f0f\u53d6\u4ee3\u4e86\u6211\u7684<a href=\"https://github.com/RockFeng0/rock4automation\" rel=\"nofollow\">rock4automation\u9879\u76ee</a>\u4e2d\u7684\uff0c #var# \u7b49\u66ff\u6362\u89c4\u5219</p>\n<ul>\n<li>\u5f15\u7528\u51fd\u6570:   ${function_str}</li>\n<li>\u5f15\u7528\u53d8\u91cf:   $variable_str</li>\n<li>function_str \u4e3a\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u3001\u6a2a\u7ebf\u3001\u70b9\u53f7\u3001\u7b49\u53f7\u3001\u9017\u53f7\u7ec4\u6210\u7684\u51fd\u6570. \u793a\u4f8b:  /api/${add(1, 2)}?<em>t=${get_timestamp()}   \u6b63\u5219\u8868\u793a\u4e3a: [a-zA-Z0-9.-</em>=,]</li>\n<li>function_str\u82e5\u542b\u6709\u7279\u6b8a\u5b57\u7b26\uff0c\u5c06\u4e0d\u4f1a\u88ab\u8bc6\u522b\uff0c \u89e3\u51b3\u65b9\u6cd5\u662f\uff0c\u4f7f\u7528\u5168\u5c40\u53d8\u91cf.   \u793a\u4f8b,\u5982:  a='@#$%^&amp;'; $print($a)</li>\n<li>variable_str \u4e3a\u5b57\u6bcd\u3001\u6570\u5b57\u3001\u4e0b\u5212\u7ebf\u7ec4\u6210\u7684\u53d8\u91cf\u540d.  \u6b63\u5219\u8868\u793a\u4e3a:  [a-zA-Z0-9_]</li>\n</ul>\n<h3>\u8fd0\u884c\u6d4b\u8bd5\u7528\u4f8b</h3>\n<p>\u4f7f\u7528\u9ed8\u8ba4Runner\u7c7b\u6267\u884c\u89c4\u5219\uff0c\u6267\u884ctest.yaml\u6d4b\u8bd5\u7528\u4f8b</p>\n<pre><code>from rtsf.p_executer import TestRunner, Runner\n\nrunner = TestRunner(runner = Runner).run(r'C:\\xxx\\xxx\\test.yaml')\nrunner.gen_html_report()\n</code></pre>\n<ul>\n<li>TestRunner(runner = Runner),runner\u53c2\u6570\u7528\u4e8e\u6307\u5b9a\u91cd\u5199\u4e86Runner\u5b50\u7c7b,\u8be5\u5b50\u7c7b\u91cd\u5199\u4e86Runner.run_test\u65b9\u6cd5\u3002 \u9ed8\u8ba4\u503c\u4e3aRunner</li>\n<li>TestRunner.run, \u8be5\u65b9\u6cd5\uff0c\u7528\u4e8e<strong>\u8fd0\u884c\u6307\u5b9ayaml\u7684case\u6587\u4ef6</strong>\uff0c\u6216\u8005<strong>\u8fd0\u884c\u6307\u5b9a\u6587\u4ef6\u5939\u8def\u5f84\u4e2d\u7684yaml\u548cjson</strong>,\u5982c:\\case\u76ee\u5f55\u4e0b*.yaml\u548c*.json</li>\n<li>TestRunner\u3002gen_html_report,\u8be5\u65b9\u6cd5\uff0c\u7528\u4e8e\u751f\u6210\u6d4b\u8bd5\u62a5\u544a\uff0c\u62a5\u544a\u8def\u5f84\u662fyaml\u6587\u4ef6\u6240\u5728\u8def\u5f84</li>\n</ul>\n<h3>\u7b80\u5355\u5b9e\u4f8b</h3>\n<p>\u7f16\u5199\u4e00\u4e2a\u6d4b\u8bd5\u7528\u4f8b\u6587\u4ef6,\u5982 example_1.yaml</p>\n<pre><code># example_1.yaml\n\n- project:\n    name: demo project\n    module: test baidu\n\n- case:    \n    name: www.baidu.com\n\n</code></pre>\n<p>example_1\u6267\u884c\u540e\u7684\u62a5\u544a:\n<img alt=\"\u5b9e\u4f8b-1.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2b10b0e1529f69ff2dfcf84d72fa268b320741a6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f526f636b46656e67302f696d672d666f6c6465722f6d61737465722f727473662f2545352541452539452545342542452538422d312e706e67\"></p>\n<p><strong>\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_1</strong></p>\n<h3>\u6570\u636e\u9a71\u52a8-\u5b9e\u4f8b</h3>\n<p>\u5982\u4e0b\uff0c\u521b\u5efa\u4e09\u4e2a\u6587\u4ef6\uff0cexample_2.yaml, username_password.csv, devices.csv</p>\n<pre><code># example_2.yaml\n\n- project:\n    name: demo project\n    module: test baidu\n    data:\n        - csv: devices.csv\n          by: Random\n        - csv: username_password.csv    \n\n- case:    \n    name: www.baidu.com-$username-$password-$devices\n\n\n# username_password.csv\nusername,password\n15312341230,1234567890\n15312341231,1234567891\n\n\n# devices.csv\ndevices\nandroid-0\nandroid-1\nandroid-2\n\n</code></pre>\n<p>\u6570\u636e\u9a71\u52a8\uff0c\u5176\u5b9e\u5f88\u7b80\u5355\uff0c\u5728yaml\u7684\u6d4b\u8bd5\u7528\u4f8b\u4e2d\uff0c\u5728project\u5757\uff0c\u6dfb\u52a0data\u5173\u952e\u5b57\u3002</p>\n<p>data\u5173\u952e\u5b57\uff0c\u4ee5\u5217\u8868\u5f62\u5f0f\u5b58\u5728\uff0c\u6bcf\u4e2a\u5217\u8868\u9879\u662f\u4e00\u4e2a\u5b57\u5178\uff0c\u7531\u4e24\u4e2akey\u7ec4\u6210(csv, by)\u3002\u8ddfloadrunner\u4e2d\u53c2\u6570\u5316\u6570\u636e\u4e00\u6837\uff0ccsv\u7b2c\u4e00\u884c\u5b9a\u4e49\u53d8\u91cf\uff0c\u7b2c\u4e8c\u884c\u53ca\u4ee5\u4e0b\u884c\u5b9a\u4e49\u6570\u636e\u9a71\u52a8\u7684\u53d8\u91cf\u503c</p>\n<ul>\n<li>csv\u540e\u9762\u63a5\u6587\u4ef6\u540d\u79f0\uff0c\u8be5\u6587\u4ef6\u4ee5csv\u5f62\u5f0f\u5b58\u5728\u4e8ecase\u540c\u4e00\u8def\u5f84\u3002</li>\n<li>by\u662f\u6307\u8bfb\u53d6csv\u683c\u5f0f\u7684\u987a\u5e8f\uff0c Random or Sequential\u3002\u9ed8\u8ba4\u662fSequential\uff0c\u987a\u5e8f\u8bfb\u53d6\u3002 \u8be5\u53c2\u6570\uff0c\u53ef\u9009\u586b</li>\n<li>\u7b1b\u5361\u513f\u79ef\u7b97\u6cd5\uff0c\u4f1a\u5bf9\u591a\u4e2adata\u53c2\u6570\u8fdb\u884c\u6392\u5217\uff0crtsf\u4f1a\u5bf9\u6392\u5217\u7684\u6700\u7ec8\u7ed3\u679c\u904d\u5386\u6267\u884c\u5f53\u524d\u6d4b\u8bd5\u96c6\u5408</li>\n</ul>\n<p>example_2\u6267\u884c\u540e\u7684\u62a5\u544a\uff0c\u5982\u4e0b\uff0c \u8dd1\u4e866\u6761\u7528\u4f8b\uff0c\u662fusername_password.csv\u548cdevices.csv\u91cc\u8fb9\u53c2\u6570\u7684\u7b1b\u5361\u513f\u79ef\uff0cusername_password\u9ed8\u8ba4\u662f\u987a\u5e8f\uff0cdevices\u662f\u968f\u673a\u3002\n<img alt=\"\u5b9e\u4f8b-2.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0635a8bf56a48c65fbe9f9afe247228c5fd0970a/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f526f636b46656e67302f696d672d666f6c6465722f6d61737465722f727473662f2545352541452539452545342542452538422d322e706e67\"></p>\n<p><strong>\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_2</strong></p>\n<h3>\u91cd\u5199Runner-\u5b9e\u4f8b</h3>\n<ul>\n<li>rtsf\u63d0\u4f9b\u5165\u53e3\uff0c\u5141\u8bb8\u81ea\u5b9a\u4e49\u6267\u884c\u6a21\u5757\u7684\u6269\u5c55\uff0c\u8fd9\u4e2a\u8fc7\u7a0b\u6709\u70b9\u7c7b\u4f3cpython\u4e2d\u91cd\u5199threading.Thread\u7c7b.</li>\n<li>\u4e0d\u540c\u7684\u662f\uff0crtsf\u9700\u8981\u91cd\u5199rtsf.p_executer.Runner.run_test\u65b9\u6cd5</li>\n</ul>\n<p>\u9996\u5148\uff0c \u6211\u4eec\u8bbe\u8ba1\u6211\u4eec\u7684yaml\u7528\u4f8b\uff0c \u6bd4\u5982\uff0c\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c\u52a0\u5165\u4e86\u51e0\u4e2a\u5173\u952e\u5b57\uff0c responsible, tester, demotest, demoverify</p>\n<pre><code># example_3.yaml\n\n- project:\n    name: demo project\n    module: test baidu\n\n- case:    \n    name: demo test\n    responsible: your name\n    testser: other name\n    demotest: ${add(1, 2)}\n    demoverify: ${_is(3)}\n\n- case:    \n    name: demo test2\n    responsible: your name\n    testser: other name\n    demotest: ${mod(1, 2)}\n    demoverify: ${_is(3)} \n\n- case:    \n    name: demo test3\n    responsible: your name\n    testser: other name\n    demotest: ${mod(1, 0)}\n    demoverify: ${_is(3)} \n\n</code></pre>\n<p>\u7136\u540e\uff0c\u91cd\u5199Runner\uff0c \u5bf9\u4e0a\u9762\u5173\u952e\u5b57\u8fdb\u884c\u529f\u80fd\u8bbe\u7f6e\uff0c \u91cd\u5199 Runner.run_test\u7684\u8fc7\u7a0b\uff0c\u662f\u4f7f\u7528rtsf\u7684\u4e3b\u8981\u5de5\u4f5c</p>\n<ul>\n<li>run_test(testcase_dict, variables, driver_map), rtsf\u5728\u6267\u884c\u6d4b\u8bd5\u7684\u65f6\u5019\uff0c\u8c03\u7528run_test\u65b9\u6cd5\uff0c\u4f20\u5165\u8fd93\u4e2a\u53c2\u6570</li>\n</ul>\n<blockquote>\n<p>\u6ce8\u610f: \u91cd\u5199\u7684\u65f6\u5019\uff0c\u7b2c\u4e00\u4e2a\u53c2\u6570\uff0c\u662f\u5355\u4e2acase\uff0c\u4e0d\u662f\u6240\u6709case\uff0c<strong>\u53ea\u9700\u8981\u5199\u4e00\u4e2acase\u7684\u6267\u884c\u903b\u8f91</strong></p>\n</blockquote>\n<pre><code># DemoRunner.py\n\n# encoding:utf-8\n\nfrom rtsf.p_executer import TestRunner, Runner\n\ndef test_add(x, y):\n    global result\n    result = x+y\n\ndef test_mod(x, y):\n    global result\n    result = x%y\n\ndef verify_is(x):\n    return result == x    \n\nclass DemoRunner(Runner):      \n\n    def __init__(self):\n        ''' \u7ee7\u627fRunner\n        self._default_devices --&gt; list,\u5206\u5e03\u5f0f\u8bbe\u5907\u6807\u8bc6\u3002 \u9ed8\u8ba4 \u503c [\"\"]\uff0c\u8868\u793a\u672c\u673a\n        self._default_drivers --\u300b list, \u5206\u5e03\u5f0fdriver\u6807\u8bc6\u4e0edriver\u952e\u503c\u5bf9\u3002 \u9ed8\u8ba4\u503c [(\"\",None)]\uff0c \u8868\u793a\u672c\u673a\u9a71\u52a8\n        self.parser --&gt; TestCaseParser\u5b9e\u4f8b\uff0c\u7528\u4e8e\u89e3\u6790\u7528\u4f8b\n        self.tracers --&gt; \u6bcf\u4e00\u53f0\u5206\u5e03\u5f0f\u8bbe\u5907\u521d\u59cb\u5316\u7684Tracer\u5b9e\u4f8b\uff0c\u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7\u548c\u751f\u6210\u62a5\u544a       \n        self.proj_info --&gt; \u8bb0\u5f55\u4e86\u7528\u4f8b\u7684\u9879\u76ee\u4fe1\u606f \n        '''\n        super(DemoRunner,self).__init__()\n\n    def run_test(self, testcase_dict, variables, driver_map):\n        ''' \u91cd\u5199 run_test\uff0c\u6709\u4e09\u4e2a\u53c2\u6570\n        @parm testcase_dict:  \u5355\u6761\u6d4b\u8bd5\u7528\u4f8b\n        @param variables: dict; \u7528\u4f8b\u91c7\u7528\u6570\u636e\u9a71\u52a8\u7684\u60c5\u51b5\u4e0b\uff0cvariables\u662fcsv\u6587\u4ef6\u53d8\u91cf\u7684\u7b1b\u5361\u513f\u79ef\uff1b\u9ed8\u8ba4\u60c5\u51b5\u4e0b\u503c\u662f {}\n        @param driver_map:  tuple;  (\u552f\u4e00\u6807\u8bc6, driver or module or obj); \u9ed8\u8ba4\u60c5\u51b5\u4e0b\u7684\u503c\u662f(\"\",None),\u8be5\u53c2\u6570\u9002\u7528\u4e8eselenium\u7684grid\u6709\u591a\u4e2a driver\u7684\u60c5\u51b5\n        '''\n\n        # rtsf \u904d\u5386 self._default_drivers, \u4f20\u7ed9 driver_map   \u8fd9\u91ccfn = ''  driver=None\n        fn, driver = driver_map\n\n        # \u83b7\u53d6 fn \u7684\u8ddf\u8e2a\u5bf9\u8c61\uff0c \u7528\u4e8e\u8bb0\u5f55\u65e5\u5fd7 \u548c \u62a5\u544a\n        fn_logger = self.tracers[fn]\n\n        # \u83b7\u53d6\u7528\u4f8b\u89e3\u6790\u5bf9\u8c61\n        parser = self.parser\n\n        # \u7ed1\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u5173\u952e\u5b57\n        yaml_keys = {\"add\": test_add, \"mod\": test_mod, '_is': verify_is}\n        parser.bind_functions(yaml_keys)        \n\n        # \u66f4\u65b0\u4f20\u5165\u7684\u53d8\u91cf\n        parser.update_binded_variables(variables)\n\n        # \u83b7\u53d6\u7528\u4f8b\u540d\u5b57  \n        case_name = testcase_dict.get(\"name\")        \n\n        # parser.eval_content_with_bind_actions \u7528\u4e8e\u89e3\u6790 \u5b57\u6bb5\u4e2d\u7684\u53d8\u91cf\u548c\u51fd\u6570\uff0c  \u5982:  \u5f15\u7528\u51fd\u6570: ${function_str} \u5f15\u7528\u53d8\u91cf: $variable_str\n        case_name = parser.eval_content_with_bind_actions(case_name)\n\n        try:\n            # fn_logger \u53ef\u4ee5\u8bb0\u5f55\u62a5\u544a\uff0c\u4f7f\u7528:  start, section, step, normal, ok, fail, error, stop\n            # start \u7528\u4e8e \u5f00\u59cb\u8bb0\u5f55\u62a5\u544a\uff1b  stop \u7528\u4e8e\u7ed3\u675f\u62a5\u544a\u8bb0\u5f55\n            fn_logger.start(self.proj_info[\"module\"],  # yaml case\u4e2d module\n                            case_name,  # yaml case\u4e2d \u7528\u4f8b\u540d\u81e3\n                            testcase_dict.get(\"responsible\",u\"administrator\"), # yaml case\u4e2dresponsible\u5b9a\u4e49\u7684\u8d23\u4efb\u4eba\u540d\u79f0 \n                            testcase_dict.get(\"tester\",u\"administrator\"), # yaml case\u4e2dtester\u5b9a\u4e49\u7684\u6d4b\u8bd5\u4eba\u540d\u79f0\n                            )\n\n            # fn_logger \u53ef\u4ee5\u4f7f\u7528\u4e86logging, \u8bb0\u5f55\u65e5\u5fd7\uff0c\u4f7f\u7528:  log_debug, log_info, log_warning, log_error, log_critical\n            fn_logger.log_debug(u\"===== run_test\\n\\t{}\".format(testcase_dict))\n\n            fn_logger.section(u\"------------starting test\")\n            # \u83b7\u53d6demotest\n            demotest = testcase_dict.get(\"demotest\")\n            fn_logger.step(\"got demotest: %s\" %demotest)\n\n            parser.eval_content_with_bind_actions(demotest)                \n            fn_logger.normal(u\"eval demotest. finish\")\n\n            # \u83b7\u53d6demoverify\n            demoverify = testcase_dict.get(\"demoverify\")\n            fn_logger.step(\"got demoverify: %s\" %demoverify)\n\n            if parser.eval_content_with_bind_actions(demoverify):\n                fn_logger.ok('verify is ok')\n            else:\n                fn_logger.fail('verify is fail')\n            fn_logger.normal(u\"eval demoverify. finish\")            \n\n        except Exception as e:\n            fn_logger.error(e)\n\n        fn_logger.stop()\n</code></pre>\n<ul>\n<li>DemoRunner\u4e2d\uff0c\u4e09\u4e2a\u5185\u7f6e\u51fd\u6570 test_add  test_mod  verify_is \u6620\u5c04\u5230 yaml\u51fd\u6570:  add,  mod, _is</li>\n<li>DemoRunner\u4e2d\uff0c \u4f7f\u7528Tracer\u7684\u5b9e\u4f8bfn_logger\uff0c\u5bf9\u6d4b\u8bd5\u6267\u884c\u8fc7\u7a0b\u8fdb\u884c\u65e5\u5fd7\u548c\u62a5\u544a\u7684\u8bb0\u5f55\uff0c\u6700\u540e\u4f7f\u7528 fn_logger.stop()\u7ed3\u675f\u6d4b\u8bd5</li>\n</ul>\n<p>\u6700\u540e\uff0c\u6211\u4eec\u8bbe\u7f6erunner\u53c2\u6570\u4e3a DemoRunner, \u6267\u884c\u6211\u4eec\u81ea\u5b9a\u4e49\u7684\u7528\u4f8b\u903b\u8f91</p>\n<pre><code># example_3.py\n\n# encoding:utf-8\n\nfrom rtsf.p_executer import TestRunner, Runner\nfrom DemoRunner import DemoRunner\n\nrunner = TestRunner(runner = DemoRunner).run(r'example_3.yaml')\nrunner.gen_html_report()\n</code></pre>\n<p>example_3\u6267\u884c\u540e\u7684\u62a5\u544a\uff0c\u5982\u4e0b\uff0c\u8dd1\u4e863\u6761\u7528\u4f8b\uff0c1\u6761\u901a\u8fc7\uff0c1\u6761\u5931\u8d25\uff0c1\u6761\u62a5\u9519\n<img alt=\"\u5b9e\u4f8b-3.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7f3723e56545e725bc54fc3591c10dcf0903f3a1/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f526f636b46656e67302f696d672d666f6c6465722f6d61737465722f727473662f2545352541452539452545342542452538422d332e706e67\"></p>\n<p><strong>\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_3</strong></p>\n<h3>\u6d4b\u8bd5\u7528\u4f8b\u5206\u5c42(\u6d4b\u8bd5\u7ec4\u4ef6\u5316)-\u5b9e\u4f8b</h3>\n<p>\u4f7f\u7528\u4e0a\u8ff0\u7684DemoRunner\uff0c\u6211\u4eec\u8bbe\u8ba1\u4e0b \u5206\u5c42\u7684\u7528\u4f8b\uff0c\u521b\u5efa\u5982\u4e0b\u4e09\u4e2a\u6587\u4ef6, \u6587\u4ef6\u540d\u53ef\u4ee5\u81ea\u5b9a\u4e49\uff0c\u8def\u5f84\u8981\u6b63\u786e</p>\n<ul>\n<li>api\u7528\u4f8b\u6587\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528\u53c2\u6570\u5316\uff0c\u4f7f\u5f97api\u7528\u4f8b\uff0c\u53ef\u4ee5\u91cd\u590d\u4f7f\u7528</li>\n<li>suite\u7528\u4f8b\u6587\u4ef6\uff0c\u6211\u4eec\u4f7f\u7528\u5e38\u89c4\u7684\u6d4b\u8bd5\u624b\u6bb5\uff0c\u5c01\u88c5\u4e86\u6b63\u5e38\u7684\u6d4b\u8bd5\u573a\u666f</li>\n<li>\u6700\u540e\uff0ccase\u7528\u4f8b\u6587\u4ef6\uff0c\u6211\u4eec\u505a\u4e00\u4e9b\u5f02\u5e38\u6d4b\u8bd5\u573a\u666f</li>\n</ul>\n<pre><code># ./dependencies/api/test_api.yaml\n\n- api:    \n    def: add_api($arg1, $arg2, $exp)\n    demotest: ${add($arg1, $arg2)}\n    demoverify: ${_is($exp)}\n\n- api:\n    def: mod_api($arg1, $arg2, $exp)\n    demotest: ${mod($arg1, $arg2)}\n    demoverify: ${_is($exp)} \n\n# ./dependencies/suite/test_suite.yaml\n\n- project:\n    def: suite_test()\n\n- case:\n    name: suite 1\n    api: add_api(1, 2, 3)\n\n- case:    \n    name: suite 2\n    api: mod_api(2, 2, 0)\n\n- case:    \n    name: suite 3\n    demotest: ${add(1, 2)}\n    demoverify: ${_is(3)} \n\n# ./example_4.yaml\n\n- project:\n    name: demo project\n    module: a demo test\n\n- case:    \n    name: case 0\n    suite: suite_test()\n\n- case:\n    name: case 1\n    api: add_api(1, 2, 100)\n\n- case:    \n    name: case 2\n    api: mod_api(1, 2, 100)\n\n- case:    \n    name: case 3\n    demotest: ${add(1, 2)}\n    demoverify: ${_is(3)} \n\n</code></pre>\n<p>example_4\u6267\u884c\u540e\u7684\u62a5\u544a\uff0c\u5982\u4e0b\uff0c\u8dd1\u4e866\u6761\u7528\u4f8b\uff0csuite\u4e2d3\u6761\u901a\u8fc7\uff0ccase\u76843\u6761\u4e2d\uff0c2\u6761\u5931\u8d25\uff0c1\u6761\u6210\u529f\n<img alt=\"\u5b9e\u4f8b-4.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53ca086cc0e6c0a40b46924d0251ae3b0e05cf42/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f526f636b46656e67302f696d672d666f6c6465722f6d61737465722f727473662f2545352541452539452545342542452538422d342e706e67\"></p>\n<p><strong>\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_4</strong></p>\n<h3>\u81ea\u5b9a\u4e49\u5185\u7f6e\u51fd\u6570</h3>\n<p>\u5728\u4e0a\u8ff0DemoRunner\u91cd\u5199 Runner.run_test\u7684\u8fc7\u7a0b\u4e2d\uff0c\u6211\u4eec\u5b9a\u4e49\u4e86\u4e09\u4e2ayaml\u51fd\u6570: add, mod, _is, \u6620\u5c04\u5230\u5185\u7f6e\u51fd\u6570\uff0c test_add  test_mod  verify_is</p>\n<p>rtsf \u63d0\u4f9b\u4e86\u53e6\u4e00\u79cd\u66f4\u7b80\u5355\u7684\u65b9\u6cd5</p>\n<ol>\n<li>\u5b9a\u4e49preference.py\uff0c\u5c06yaml\u51fd\u6570\u5199\u5165</li>\n</ol>\n<pre><code># preference.py\n\n#encoding:utf-8\n\ndef add(x, y):\n    global result\n    result = x+y\n\ndef mod(x, y):\n    global result\n    result = x%y\n\ndef _is(x):\n    return result == x \n</code></pre>\n<ol>\n<li>\u6ce8\u91ca\uff0cDemoRunner\u4e2d\uff0c\u6620\u5c04\u76f8\u5173\u4ee3\u7801</li>\n</ol>\n<pre><code>...\n\n# \u7ed1\u5b9a\u6d4b\u8bd5\u7528\u4f8b\u5173\u952e\u5b57\n# yaml_keys = {\"add\": test_add, \"mod\": test_mod, 'is': verify_is}\n# parser.bind_functions(yaml_keys)\n...\n\n</code></pre>\n<p>\u6267\u884c\u7ed3\u679c\uff0c\u540c example_4</p>\n<p><strong>\u4ee3\u7801\uff0c\u53c2\u89c1\u9879\u76ee\u76ee\u5f55examples/example_5</strong></p>\n<h2>rtsf-\u9ad8\u9636\u7528\u6cd5</h2>\n<p>\u57fa\u4e8e\u7ea6\u5b9a\u5927\u4e8e\u914d\u7f6e\u7684\u539f\u5219\uff0c\u4f7f\u7528rsft\u6784\u5efa\u81ea\u5df1\u7684\u81ea\u52a8\u5316\u6d4b\u8bd5\u6846\u67b6</p>\n<h3>\u7ea6\u5b9a\u57fa\u672c\u7528\u4f8b\u7ed3\u6784</h3>\n<p>\uff0crtsf\u7cfb\u5217\u6846\u67b6\uff0c<strong>\u7ea6\u5b9a\u7684case\u57fa\u672c\u7ed3\u6784</strong> \u5982\u4e0b\uff1a</p>\n<pre><code>- project:    \n    name:    \n    module:    \n    data:\n- case:\n    name:\n    responsible:\n    tester:\n    glob_var:\n    glob_regx:\n    pre_command:\n    steps:\n    post_command:\n    verify:\n</code></pre>\n<blockquote>\n<p>\u6267\u884c\u987a\u5e8f  pre_command(List) -&gt; steps(List) -&gt; post_command(List) -&gt; verify(List)</p>\n</blockquote>\n<p><strong>preject\u5b9a\u4e49\u6d4b\u8bd5\u96c6\u4fe1\u606f</strong></p>\n<table>\n<thead>\n<tr>\n<th>project\u5b57\u6bb5</th>\n<th align=\"center\">\u63cf\u8ff0</th>\n<th align=\"right\">\u7c7b\u578b</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td align=\"center\">\u9879\u76ee\u540d\u79f0\u6216\u5f85\u6d4b\u7cfb\u7edf\u540d\u79f0(\u5fc5\u586b)</td>\n<td align=\"right\">\u5b57\u7b26\u4e32</td>\n</tr>\n<tr>\n<td>module</td>\n<td align=\"center\">\u6d4b\u8bd5\u96c6\u6216\u529f\u80fd\u6a21\u5757\u540d\u79f0(\u5fc5\u586b)</td>\n<td align=\"right\">\u5b57\u7b26\u4e32</td>\n</tr>\n<tr>\n<td>data</td>\n<td align=\"center\">\u6570\u636e\u9a71\u52a8\uff0c\u5f15\u7528\u7684\u6570\u636e(\u9009\u586b)</td>\n<td align=\"right\">\u5217\u8868</td>\n</tr></tbody></table>\n<p><strong>case\u5b9a\u4e49\u6d4b\u8bd5\u7528\u4f8b</strong></p>\n<table>\n<thead>\n<tr>\n<th>case\u5b57\u6bb5</th>\n<th align=\"center\">\u63cf\u8ff0</th>\n<th align=\"right\">\u7c7b\u578b</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td align=\"center\">\u63cf\u8ff0 \u7528\u4f8b (\u5fc5\u586b)\uff0c\u552f\u4e00\u6027(\u5fc5\u586b)</td>\n<td align=\"right\">\u5b57\u7b26\u4e32</td>\n</tr>\n<tr>\n<td>responsible</td>\n<td align=\"center\">\u7528\u4f8b\u8d23\u4efb\u4eba\u6216\u8005\u7f16\u5199\u4eba(\u9009\u586b)</td>\n<td align=\"right\">\u5b57\u7b26\u4e32</td>\n</tr>\n<tr>\n<td>tester</td>\n<td align=\"center\">\u7528\u4f8b\u6267\u884c\u8005\u6216\u8005\u6d4b\u8bd5\u4eba(\u9009\u586b)</td>\n<td align=\"right\">\u5b57\u7b26\u4e32</td>\n</tr>\n<tr>\n<td>glob_var</td>\n<td align=\"center\">\u5168\u5c40\u53d8\u91cf(\u9009\u586b)</td>\n<td align=\"right\">\u5b57\u5178</td>\n</tr>\n<tr>\n<td>glob_regx</td>\n<td align=\"center\">\u5168\u5c40\u6b63\u5219(\u9009\u586b)</td>\n<td align=\"right\">\u5b57\u5178</td>\n</tr>\n<tr>\n<td>pre_command</td>\n<td align=\"center\">\u6d4b\u8bd5\u7684\u524d\u7f6e\u6b65\u9aa4\u6216\u94a9\u5b50(\u9009\u586b)</td>\n<td align=\"right\">\u5217\u8868</td>\n</tr>\n<tr>\n<td>steps</td>\n<td align=\"center\">\u6d4b\u8bd5\u6b65\u9aa4 (\u5fc5\u586b)</td>\n<td align=\"right\">\u5217\u8868</td>\n</tr>\n<tr>\n<td>post_command</td>\n<td align=\"center\">\u6d4b\u8bd5\u7684\u540e\u7f6e\u6b65\u9aa4\u6216\u94a9\u5b50(\u9009\u586b)</td>\n<td align=\"right\">\u5217\u8868</td>\n</tr>\n<tr>\n<td>verify</td>\n<td align=\"center\">\u6821\u9a8c  (\u9009\u586b)</td>\n<td align=\"right\">\u5217\u8868</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6279124, "releases": {"2.8": [{"comment_text": "", "digests": {"md5": "83a14689b16ee780daac5cfd7f8578e8", "sha256": "3bea828a4e267152af4d5dfcff7da06712d3e57164e679fea19657da2383dfb5"}, "downloads": -1, "filename": "rtsf-2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "83a14689b16ee780daac5cfd7f8578e8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 28582, "upload_time": "2018-10-10T07:17:43", "upload_time_iso_8601": "2018-10-10T07:17:43.705028Z", "url": "https://files.pythonhosted.org/packages/47/42/599f82bad79af24aea82dc72877e44fc1543a40301264cb2ae5a5cff7fdc/rtsf-2.8-py3-none-any.whl", "yanked": false}], "2.9": [{"comment_text": "", "digests": {"md5": "2e35d17645c7ade6207076ab5bfec347", "sha256": "7a4a3ef5b6af2c1a9f5cec9aedda70867c1cf2793ff12a6563dfb12424206a7a"}, "downloads": -1, "filename": "rtsf-2.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e35d17645c7ade6207076ab5bfec347", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 34829, "upload_time": "2018-11-04T01:33:00", "upload_time_iso_8601": "2018-11-04T01:33:00.281628Z", "url": "https://files.pythonhosted.org/packages/6d/5e/4c4d60b298cfe26b6776d96802adbd31b808acfbef0db6706e18be6a7258/rtsf-2.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03e2b2b5eba750ee8b383a72bb92b040", "sha256": "52d12e736c74f11abc61f3a953803727551ce930e08516cd55361df310d7574e"}, "downloads": -1, "filename": "rtsf-2.9.tar.gz", "has_sig": false, "md5_digest": "03e2b2b5eba750ee8b383a72bb92b040", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 37277, "upload_time": "2018-11-04T01:33:02", "upload_time_iso_8601": "2018-11-04T01:33:02.176754Z", "url": "https://files.pythonhosted.org/packages/4e/7a/ed43f0430a73a1244c8c9a884c3413361dfc6b194e2d8e15dcaabbbfe77e/rtsf-2.9.tar.gz", "yanked": false}], "2.9.1": [{"comment_text": "", "digests": {"md5": "67c51fa27ab55670da9f5838a50b22e4", "sha256": "80c6e3d26751176122e6496eeafb9f2d0808ffb94045601c61c8be2bc66ed2d1"}, "downloads": -1, "filename": "rtsf-2.9.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "67c51fa27ab55670da9f5838a50b22e4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 34849, "upload_time": "2018-11-05T15:03:09", "upload_time_iso_8601": "2018-11-05T15:03:09.534945Z", "url": "https://files.pythonhosted.org/packages/da/63/4da1fb610bc9cf3b9dc13bed18079f795b6432ebec4dfc42a93a1cac617c/rtsf-2.9.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ec0ac0d7175367b652dfd6dab3aff9a", "sha256": "2d4e8c51f87b0da55a52caccfb98bdfcc21e3411be1efa9c8e8a4f0c96115b5d"}, "downloads": -1, "filename": "rtsf-2.9.1.tar.gz", "has_sig": false, "md5_digest": "5ec0ac0d7175367b652dfd6dab3aff9a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 37252, "upload_time": "2018-11-05T15:03:11", "upload_time_iso_8601": "2018-11-05T15:03:11.355061Z", "url": "https://files.pythonhosted.org/packages/5c/1d/0685179be7238519e7381dfe3df8d773f5c18ed30d51efd728e2ae219d19/rtsf-2.9.1.tar.gz", "yanked": false}], "2.9.2": [{"comment_text": "", "digests": {"md5": "b6e53b4fb891306f2bfaedb16bae8b33", "sha256": "638cdae769f6ab0edabebe6d6a52357814b6de67c4f18f3b9ea410430d56e137"}, "downloads": -1, "filename": "rtsf-2.9.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b6e53b4fb891306f2bfaedb16bae8b33", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 36346, "upload_time": "2019-03-18T12:08:58", "upload_time_iso_8601": "2019-03-18T12:08:58.423287Z", "url": "https://files.pythonhosted.org/packages/4a/93/e57012527e1c14eb863651a21e82e47d15e9cc4bae12c26fbe9b7fe15367/rtsf-2.9.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80c8c72927c47dc7440e3b7643264ec4", "sha256": "56575f1d5aeaf364d1b959decaa2cdac35d13a6a9e874289fdf52b92b6da7566"}, "downloads": -1, "filename": "rtsf-2.9.2.tar.gz", "has_sig": false, "md5_digest": "80c8c72927c47dc7440e3b7643264ec4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 40565, "upload_time": "2019-03-18T12:09:00", "upload_time_iso_8601": "2019-03-18T12:09:00.032810Z", "url": "https://files.pythonhosted.org/packages/8d/3f/7ad4c871df6bbc7b3357108de6d3c629ed5d19e7db90405c77ca6cb8e378/rtsf-2.9.2.tar.gz", "yanked": false}], "2.9.3": [{"comment_text": "", "digests": {"md5": "4bcf335d293743999f4ab74e891c966f", "sha256": "456a7e403500db98563c6ab4b308389e2ca342c09a40bd1b53bb463ff02403b4"}, "downloads": -1, "filename": "rtsf-2.9.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4bcf335d293743999f4ab74e891c966f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 36678, "upload_time": "2019-12-10T07:55:19", "upload_time_iso_8601": "2019-12-10T07:55:19.705727Z", "url": "https://files.pythonhosted.org/packages/70/e1/a9d80dae2737d555b13186d9a835bf0926e5a53a86c7baf35366b98e28b0/rtsf-2.9.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4d1035853a1218501989cc6120165ac", "sha256": "2b96a0fd0e2f03fab745809c9857b1d345e56328c45a3c548305a85930471107"}, "downloads": -1, "filename": "rtsf-2.9.3.tar.gz", "has_sig": false, "md5_digest": "a4d1035853a1218501989cc6120165ac", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 41347, "upload_time": "2019-12-10T07:55:21", "upload_time_iso_8601": "2019-12-10T07:55:21.590975Z", "url": "https://files.pythonhosted.org/packages/27/ad/e7b0c86860469581ea1422835d5a33f71397dbaef869465d3f9ee9fba937/rtsf-2.9.3.tar.gz", "yanked": false}], "2.9.4": [{"comment_text": "", "digests": {"md5": "83bf2ac3c6fe7650accb1b137b2addab", "sha256": "4b66ea9169b1b017e3cdab2e6149a13fd7852d7ea1225c886f8bf035cb975504"}, "downloads": -1, "filename": "rtsf-2.9.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83bf2ac3c6fe7650accb1b137b2addab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 36997, "upload_time": "2019-12-11T13:37:35", "upload_time_iso_8601": "2019-12-11T13:37:35.869100Z", "url": "https://files.pythonhosted.org/packages/b6/b9/67fe91431e595189ae73b5f0826c94f1f2fccfbb6c1a47726d97d5b0b947/rtsf-2.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "343f4db0f35d0863630525f13b42c428", "sha256": "59f94610e4d9c8f43c6effd91c793a16eca14ddab8c85099fcabe0fb326f53d9"}, "downloads": -1, "filename": "rtsf-2.9.4.tar.gz", "has_sig": false, "md5_digest": "343f4db0f35d0863630525f13b42c428", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 41667, "upload_time": "2019-12-11T13:37:37", "upload_time_iso_8601": "2019-12-11T13:37:37.639691Z", "url": "https://files.pythonhosted.org/packages/78/ac/792577fc5ad514e36a14d2d1c6de03f29001436997bc9bd104911060d458/rtsf-2.9.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83bf2ac3c6fe7650accb1b137b2addab", "sha256": "4b66ea9169b1b017e3cdab2e6149a13fd7852d7ea1225c886f8bf035cb975504"}, "downloads": -1, "filename": "rtsf-2.9.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83bf2ac3c6fe7650accb1b137b2addab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 36997, "upload_time": "2019-12-11T13:37:35", "upload_time_iso_8601": "2019-12-11T13:37:35.869100Z", "url": "https://files.pythonhosted.org/packages/b6/b9/67fe91431e595189ae73b5f0826c94f1f2fccfbb6c1a47726d97d5b0b947/rtsf-2.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "343f4db0f35d0863630525f13b42c428", "sha256": "59f94610e4d9c8f43c6effd91c793a16eca14ddab8c85099fcabe0fb326f53d9"}, "downloads": -1, "filename": "rtsf-2.9.4.tar.gz", "has_sig": false, "md5_digest": "343f4db0f35d0863630525f13b42c428", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, <4", "size": 41667, "upload_time": "2019-12-11T13:37:37", "upload_time_iso_8601": "2019-12-11T13:37:37.639691Z", "url": "https://files.pythonhosted.org/packages/78/ac/792577fc5ad514e36a14d2d1c6de03f29001436997bc9bd104911060d458/rtsf-2.9.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:00:23 2020"}