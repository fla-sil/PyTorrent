{"info": {"author": "Raphael Cohen", "author_email": "raphael.cohen.utt@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: Libraries"], "description": "falcon-sorting-hook\n======================\n\n.. image:: https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\n    :target: LICENSE\n.. image:: https://travis-ci.org/Darkheir/falcon-sorting-hook.svg?branch=master\n    :target: https://travis-ci.org/Darkheir/falcon-sorting-hook\n.. image:: https://codecov.io/gh/Darkheir/falcon-sorting-hook/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/Darkheir/falcon-sorting-hook\n.. image:: https://api.codacy.com/project/badge/Grade/a8a34e89d34b4a928e988fe1624e2eae\n    :target: https://www.codacy.com/app/Darkheir/falcon-sorting-hook?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=Darkheir/falcon-sorting-hook&amp;utm_campaign=Badge_Grade\n.. image:: https://pyup.io/repos/github/Darkheir/falcon-sorting-hook/shield.svg\n    :target: https://pyup.io/repos/github/Darkheir/falcon-sorting-hook/\n    :alt: Updates\n\n\nA small falcon hook to parse sorting elements from the request.\n\nUsage\n-----\n\nThe easiest way to use this hook is the following:\n\n.. code:: python\n\n    class Resource:\n        sorting_fields = (\"foo\", \"bar\")  # List of fields allowed for sorting\n\n        @falcon.before(SortingHook())\n        def on_get(self, req, resp, user):\n            # Here req['context']['sort'] is set\n\nThe Hook will look in the query parameters for parameters looking like :code:`sort=value`.\n\nThe default sorting order is ascending.\nTo sort in a descending order a minus (:code:`-`) sign needs to be specified before the value.\ni.e. :code:`sort=-value`\n\nIt is possible to specify multiple sorting values by separating them with a comma.\ni.e. :code:`sort=-value1,value2`\n\nIt will create a list in the request context accessible at :code:`req.context['sort']`.\nThis list consists of tuples where the first element is the name of the field to sort on\nand the second the order to follow (either :code:`ASC` or :code:`DESC`)\n\ni.e. :code:`[('foo', 'ASC'), ('bar', 'DESC')]`.\n\n\nConfiguration options\n---------------------\n\nAllowing fields for sorting\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor security reasons, the fields allowed for sorting must be specified in\nthe :code:`sorting_fields` attribute of the resource.\n\nAll the fields not defined in it will be discarded by the hook.\n\n\nDefault sorting order\n~~~~~~~~~~~~~~~~~~~~~\n\nIt is possible to specify a default sorting order by setting the :code:`default_sorting` attribute in the resource.\n\nThis attribute must be a string or a tuple that respects the convention we have for the request parameter.\n\nThe attributes specified as the default order must also be part of :code:`sorting_fields`.\n\nExamples:\n\n.. code:: python\n\n    default_sorting = '-foo'\n    # or\n    default_sorting = ('foo', '-bar')\n\nHook configuration\n~~~~~~~~~~~~~~~~~~\n\nOne parameter can be passed to the hook:\n\n* sort_query_key : The name of the key used in the query to sort data. Default: :code:`sort`.\n\nExample:\n\n.. code:: python\n\n    @falcon.before(PaginationFromRequestHook(\n        sort_query_key='order',\n    ))\n    def on_get(self, req, resp, user):\n        # Get request\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/darkheir/falcon-sorting-hook", "keywords": "falcon sorting sort hook api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "falcon-sorting", "package_url": "https://pypi.org/project/falcon-sorting/", "platform": "", "project_url": "https://pypi.org/project/falcon-sorting/", "project_urls": {"Homepage": "https://github.com/darkheir/falcon-sorting-hook"}, "release_url": "https://pypi.org/project/falcon-sorting/0.2.0/", "requires_dist": ["falcon (>=0.3)"], "requires_python": "", "summary": "Falcon sorting helper", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-brightgreen.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3774e3275f579e894cbbfbf88f461a319ba9f84b/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://travis-ci.org/Darkheir/falcon-sorting-hook\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/Darkheir/falcon-sorting-hook.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27f7477313f1ee9ae03667c899815283ecbfea1b/68747470733a2f2f7472617669732d63692e6f72672f4461726b686569722f66616c636f6e2d736f7274696e672d686f6f6b2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/Darkheir/falcon-sorting-hook\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/Darkheir/falcon-sorting-hook/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9d7a3cdac77f81359db05a6b8ff7ecaeb9b7f84e/68747470733a2f2f636f6465636f762e696f2f67682f4461726b686569722f66616c636f6e2d736f7274696e672d686f6f6b2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://www.codacy.com/app/Darkheir/falcon-sorting-hook?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=Darkheir/falcon-sorting-hook&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Grade/a8a34e89d34b4a928e988fe1624e2eae\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc287cabbbd45dfaec95f646f20291e2c0be20d5/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6138613334653839643334623461393238653938386665313632346532656165\"></a>\n<a href=\"https://pyup.io/repos/github/Darkheir/falcon-sorting-hook/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ebe7ef635ce9d1199344c83927a4228cf1925ef/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f4461726b686569722f66616c636f6e2d736f7274696e672d686f6f6b2f736869656c642e737667\"></a>\n<p>A small falcon hook to parse sorting elements from the request.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The easiest way to use this hook is the following:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Resource</span><span class=\"p\">:</span>\n    <span class=\"n\">sorting_fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">)</span>  <span class=\"c1\"># List of fields allowed for sorting</span>\n\n    <span class=\"nd\">@falcon</span><span class=\"o\">.</span><span class=\"n\">before</span><span class=\"p\">(</span><span class=\"n\">SortingHook</span><span class=\"p\">())</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n        <span class=\"c1\"># Here req['context']['sort'] is set</span>\n</pre>\n<p>The Hook will look in the query parameters for parameters looking like <code>sort=value</code>.</p>\n<p>The default sorting order is ascending.\nTo sort in a descending order a minus (<code>-</code>) sign needs to be specified before the value.\ni.e. <code>sort=-value</code></p>\n<p>It is possible to specify multiple sorting values by separating them with a comma.\ni.e. <code>sort=-value1,value2</code></p>\n<p>It will create a list in the request context accessible at <code>req.context['sort']</code>.\nThis list consists of tuples where the first element is the name of the field to sort on\nand the second the order to follow (either <code>ASC</code> or <code>DESC</code>)</p>\n<p>i.e. <code>[('foo', 'ASC'), ('bar', 'DESC')]</code>.</p>\n</div>\n<div id=\"configuration-options\">\n<h2>Configuration options</h2>\n<div id=\"allowing-fields-for-sorting\">\n<h3>Allowing fields for sorting</h3>\n<p>For security reasons, the fields allowed for sorting must be specified in\nthe <code>sorting_fields</code> attribute of the resource.</p>\n<p>All the fields not defined in it will be discarded by the hook.</p>\n</div>\n<div id=\"default-sorting-order\">\n<h3>Default sorting order</h3>\n<p>It is possible to specify a default sorting order by setting the <code>default_sorting</code> attribute in the resource.</p>\n<p>This attribute must be a string or a tuple that respects the convention we have for the request parameter.</p>\n<p>The attributes specified as the default order must also be part of <code>sorting_fields</code>.</p>\n<p>Examples:</p>\n<pre><span class=\"n\">default_sorting</span> <span class=\"o\">=</span> <span class=\"s1\">'-foo'</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">default_sorting</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'-bar'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"hook-configuration\">\n<h3>Hook configuration</h3>\n<p>One parameter can be passed to the hook:</p>\n<ul>\n<li>sort_query_key : The name of the key used in the query to sort data. Default: <code>sort</code>.</li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"nd\">@falcon</span><span class=\"o\">.</span><span class=\"n\">before</span><span class=\"p\">(</span><span class=\"n\">PaginationFromRequestHook</span><span class=\"p\">(</span>\n    <span class=\"n\">sort_query_key</span><span class=\"o\">=</span><span class=\"s1\">'order'</span><span class=\"p\">,</span>\n<span class=\"p\">))</span>\n<span class=\"k\">def</span> <span class=\"nf\">on_get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">req</span><span class=\"p\">,</span> <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Get request</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4795586, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6df7adcc0ce1ca89c60a41da8a1da1d6", "sha256": "958826c56b93e2e9e4bb42dc94feeb039c2e7130eb25ab57768deec07932a15f"}, "downloads": -1, "filename": "falcon_sorting-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6df7adcc0ce1ca89c60a41da8a1da1d6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4029, "upload_time": "2019-01-27T22:25:09", "upload_time_iso_8601": "2019-01-27T22:25:09.770049Z", "url": "https://files.pythonhosted.org/packages/6a/22/5c486d5677e1ae648a237ca40083ca91b2f1fecdc536d56201e6b9cae9ff/falcon_sorting-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "05f22b8f85555466785bc2833751025e", "sha256": "c7cbff187a429d376c544681d30ecbb8fedf97bb44aa8f3f9de6b6d57bf28922"}, "downloads": -1, "filename": "falcon_sorting-0.0.1.tar.gz", "has_sig": false, "md5_digest": "05f22b8f85555466785bc2833751025e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3046, "upload_time": "2019-01-27T22:25:12", "upload_time_iso_8601": "2019-01-27T22:25:12.127095Z", "url": "https://files.pythonhosted.org/packages/4c/e7/115b745fdfc281f6251621fb2db8f16d770fbcec79c0a0713d0ae5446d9b/falcon_sorting-0.0.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "382fa34babd896c19341bafdf571aa50", "sha256": "c781efca49359ca0158d1106ec04198435a85c697b659143f321420eca05212d"}, "downloads": -1, "filename": "falcon_sorting-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "382fa34babd896c19341bafdf571aa50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4567, "upload_time": "2019-02-08T13:50:58", "upload_time_iso_8601": "2019-02-08T13:50:58.305207Z", "url": "https://files.pythonhosted.org/packages/90/bf/af89ac79e42d259fc75e9aa2a7dd4928845ff21098da5e11e895d46dffb3/falcon_sorting-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20030cfcd4f5325a693ba75a33c14b43", "sha256": "d869fa5c8dfe6d34c694f71ad1116f7155899701ee67b36e9a16a09c49f2b980"}, "downloads": -1, "filename": "falcon_sorting-0.2.0.tar.gz", "has_sig": false, "md5_digest": "20030cfcd4f5325a693ba75a33c14b43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3710, "upload_time": "2019-02-08T13:50:59", "upload_time_iso_8601": "2019-02-08T13:50:59.574218Z", "url": "https://files.pythonhosted.org/packages/63/08/617d5d7eaaedb2fb2e52c3c153ff4714cbfdc8153de89f30b4626c0269c8/falcon_sorting-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "382fa34babd896c19341bafdf571aa50", "sha256": "c781efca49359ca0158d1106ec04198435a85c697b659143f321420eca05212d"}, "downloads": -1, "filename": "falcon_sorting-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "382fa34babd896c19341bafdf571aa50", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4567, "upload_time": "2019-02-08T13:50:58", "upload_time_iso_8601": "2019-02-08T13:50:58.305207Z", "url": "https://files.pythonhosted.org/packages/90/bf/af89ac79e42d259fc75e9aa2a7dd4928845ff21098da5e11e895d46dffb3/falcon_sorting-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20030cfcd4f5325a693ba75a33c14b43", "sha256": "d869fa5c8dfe6d34c694f71ad1116f7155899701ee67b36e9a16a09c49f2b980"}, "downloads": -1, "filename": "falcon_sorting-0.2.0.tar.gz", "has_sig": false, "md5_digest": "20030cfcd4f5325a693ba75a33c14b43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3710, "upload_time": "2019-02-08T13:50:59", "upload_time_iso_8601": "2019-02-08T13:50:59.574218Z", "url": "https://files.pythonhosted.org/packages/63/08/617d5d7eaaedb2fb2e52c3c153ff4714cbfdc8153de89f30b4626c0269c8/falcon_sorting-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:51 2020"}