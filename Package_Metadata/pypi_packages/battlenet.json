{"info": {"author": "Stanislav Vishnevskiy", "author_email": "vishnevskiy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "battlenet\n=====================\n\nPython Library for Blizzard's Community Platform API\n\nMajor features\n----------------------\n\n* Pythonic\n\n* Unicode normalization\n\n* Lazyloading and eagerloading\n\n* Eventlet support\n\nMaking a connection\n----------------------\n\nGlobal connection settings can be setup so that objects can make connections implicitly.\n\n::\n\n    from battlenet import Connection\n\n    Connection.setup(public_key='your public key', private_key='your private key')\n\nYou can also create connections explicitly.\n\n::\n\n    from battlenet import Connection\n\n    connection = Connection(public_key='your public key', private_key='your private key')\n\nFetching a specific realm\n-------------------------\n\n::\n\n    from battlenet import Realm\n\n    # If a global connection was setup\n    realm = Realm(battlenet.UNITED_STATES, 'Nazjatar')\n\n    # Using a specific connection\n    realm = connection.get_realm(battlenet.UNITED_STATES, 'Nazjatar')\n\n    print realm.name\n    # => Nazjatar\n\n    print realm.is_online()\n    # => true\n\n    print realm.type\n    # => PVP\n\n\nFetching all realms\n-------------------------\n\n::\n\n    for realm in connection.get_all_realms():\n        print realm\n\nFetching a character\n----------------------\n\n::\n\n    from battlenet import Character\n\n    # If a global connection was setup\n    character = Character(battlenet.UNITED_STATES, 'Nazjatar', 'Vishnevskiy', fields=[Character.GUILD])\n\n    # Using a specific connection\n    character = connection.get_character(battlenet.UNITED_STATES, 'Nazjatar', 'Vishnevskiy', fields=[Character.GUILD])\n\n    print character.name\n    # => Vishnevskiy\n\n    print character.guild.name\n    # => Excellence\n\n\nFetching a guild\n----------------------\n\n::\n\n    from battlenet import Character\n\n    # If a global connection was setup\n    guild = Guild(battlenet.UNITED_STATES, 'Nazjatar', 'Excellence')\n\n    # Using a specific connection\n    guild = connection.get_guild(battlenet.UNITED_STATES, 'Nazjatar', 'Excellence')\n\n    print guild.name\n    # => Vishnevskiy\n\n    leader = guild.get_leader()\n    print leader.name\n    # => Cl\u00ed\n\nMore Examples\n----------------------\n\nRead the unit tests inside the tests directory.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vishnevskiy/battlenet", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "battlenet", "package_url": "https://pypi.org/project/battlenet/", "platform": "any", "project_url": "https://pypi.org/project/battlenet/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/vishnevskiy/battlenet"}, "release_url": "https://pypi.org/project/battlenet/0.2.6/", "requires_dist": null, "requires_python": null, "summary": "Python Library for Blizzard's Community Platform API", "version": "0.2.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python Library for Blizzard\u2019s Community Platform API</p>\n<div id=\"major-features\">\n<h2>Major features</h2>\n<ul>\n<li>Pythonic</li>\n<li>Unicode normalization</li>\n<li>Lazyloading and eagerloading</li>\n<li>Eventlet support</li>\n</ul>\n</div>\n<div id=\"making-a-connection\">\n<h2>Making a connection</h2>\n<p>Global connection settings can be setup so that objects can make connections implicitly.</p>\n<pre>from battlenet import Connection\n\nConnection.setup(public_key='your public key', private_key='your private key')\n</pre>\n<p>You can also create connections explicitly.</p>\n<pre>from battlenet import Connection\n\nconnection = Connection(public_key='your public key', private_key='your private key')\n</pre>\n</div>\n<div id=\"fetching-a-specific-realm\">\n<h2>Fetching a specific realm</h2>\n<pre>from battlenet import Realm\n\n# If a global connection was setup\nrealm = Realm(battlenet.UNITED_STATES, 'Nazjatar')\n\n# Using a specific connection\nrealm = connection.get_realm(battlenet.UNITED_STATES, 'Nazjatar')\n\nprint realm.name\n# =&gt; Nazjatar\n\nprint realm.is_online()\n# =&gt; true\n\nprint realm.type\n# =&gt; PVP\n</pre>\n</div>\n<div id=\"fetching-all-realms\">\n<h2>Fetching all realms</h2>\n<pre>for realm in connection.get_all_realms():\n    print realm\n</pre>\n</div>\n<div id=\"fetching-a-character\">\n<h2>Fetching a character</h2>\n<pre>from battlenet import Character\n\n# If a global connection was setup\ncharacter = Character(battlenet.UNITED_STATES, 'Nazjatar', 'Vishnevskiy', fields=[Character.GUILD])\n\n# Using a specific connection\ncharacter = connection.get_character(battlenet.UNITED_STATES, 'Nazjatar', 'Vishnevskiy', fields=[Character.GUILD])\n\nprint character.name\n# =&gt; Vishnevskiy\n\nprint character.guild.name\n# =&gt; Excellence\n</pre>\n</div>\n<div id=\"fetching-a-guild\">\n<h2>Fetching a guild</h2>\n<pre>from battlenet import Character\n\n# If a global connection was setup\nguild = Guild(battlenet.UNITED_STATES, 'Nazjatar', 'Excellence')\n\n# Using a specific connection\nguild = connection.get_guild(battlenet.UNITED_STATES, 'Nazjatar', 'Excellence')\n\nprint guild.name\n# =&gt; Vishnevskiy\n\nleader = guild.get_leader()\nprint leader.name\n# =&gt; Cl\u00ed\n</pre>\n</div>\n<div id=\"more-examples\">\n<h2>More Examples</h2>\n<p>Read the unit tests inside the tests directory.</p>\n</div>\n\n          </div>"}, "last_serial": 786734, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "13f02cfc1eaa7e15905c7169e72f471e", "sha256": "bea36e65f5cae53d237922630687beb0761c8bb7abcfd3806c5113da886d6e0a"}, "downloads": -1, "filename": "battlenet-0.1.tar.gz", "has_sig": false, "md5_digest": "13f02cfc1eaa7e15905c7169e72f471e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9906, "upload_time": "2011-06-01T10:15:18", "upload_time_iso_8601": "2011-06-01T10:15:18.602161Z", "url": "https://files.pythonhosted.org/packages/fe/17/6cb7e367691e1afc02b5fbc91af32d7dcd2a29dc861e731c2b5fc497b981/battlenet-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1cef0358d1dbfdcecde639930ce1a6bc", "sha256": "67761efa3301b0364a8fc81ab0e6bcd90472ee48050e373a26c02f6b0fa1e585"}, "downloads": -1, "filename": "battlenet-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1cef0358d1dbfdcecde639930ce1a6bc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9936, "upload_time": "2011-06-02T04:43:06", "upload_time_iso_8601": "2011-06-02T04:43:06.140206Z", "url": "https://files.pythonhosted.org/packages/7b/5b/ffb0e354273db7965b5534a5f1c2df37cab618381de388056f26fc84a8f1/battlenet-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a1493d703b942722c5f16f8c90baba85", "sha256": "739986e02c10fa12eeb7adbb9d52774cae0a6ac1d5360e2f55823353a72df033"}, "downloads": -1, "filename": "battlenet-0.2.tar.gz", "has_sig": false, "md5_digest": "a1493d703b942722c5f16f8c90baba85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12089, "upload_time": "2011-06-09T10:10:38", "upload_time_iso_8601": "2011-06-09T10:10:38.514689Z", "url": "https://files.pythonhosted.org/packages/fa/84/3ea8541e921bab7ec5cc8c4fc70936fe7d6dcb1c872ed2c1987482a110b8/battlenet-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c0b85f96ff4e40089e423563578a53cf", "sha256": "055f874871344cbf50c3fd15695d05040e668442549315a6774b984f4e428182"}, "downloads": -1, "filename": "battlenet-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c0b85f96ff4e40089e423563578a53cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12169, "upload_time": "2011-06-09T11:00:54", "upload_time_iso_8601": "2011-06-09T11:00:54.976653Z", "url": "https://files.pythonhosted.org/packages/01/25/91fcc1ae6c418a9e57a86b0fe2736ebb01ad6e092f207a53809e659732d9/battlenet-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "602441d4bf0c345579c6917272eac91f", "sha256": "cd52df04f86cbe0735ea598abbd2d95d3348a428050dd82f451ab8d78dc55bd5"}, "downloads": -1, "filename": "battlenet-0.2.2.tar.gz", "has_sig": false, "md5_digest": "602441d4bf0c345579c6917272eac91f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12192, "upload_time": "2011-06-11T22:07:08", "upload_time_iso_8601": "2011-06-11T22:07:08.042596Z", "url": "https://files.pythonhosted.org/packages/d2/5a/b985a50a9c6fc1ad68c515bd22110f9bd8752871e5ad2561fec053c8c837/battlenet-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e8123cd4923da7ee03de57354d5ba045", "sha256": "6b48c56bfed4c288a0c1e4c5d95baf97381f9da576f55081a4c3a364f262123d"}, "downloads": -1, "filename": "battlenet-0.2.3.tar.gz", "has_sig": false, "md5_digest": "e8123cd4923da7ee03de57354d5ba045", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12218, "upload_time": "2011-06-26T20:36:18", "upload_time_iso_8601": "2011-06-26T20:36:18.875639Z", "url": "https://files.pythonhosted.org/packages/9b/1f/e8c554bd7f2454ba263ff055551e41bedbcc12e886b70b2e81a72356afa6/battlenet-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "c87dd10b91232b1249079b6f2bc07b1c", "sha256": "2dd995675a8c0f581356868326af54a88ebcff845ed0cc6bb3a5c1c247099008"}, "downloads": -1, "filename": "battlenet-0.2.4.tar.gz", "has_sig": false, "md5_digest": "c87dd10b91232b1249079b6f2bc07b1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12223, "upload_time": "2011-06-26T20:40:51", "upload_time_iso_8601": "2011-06-26T20:40:51.980989Z", "url": "https://files.pythonhosted.org/packages/48/3a/c64011bf9940d806b8dc99a988c2c3230741dfe716a1ec5a6070c084b83e/battlenet-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "a3a010d3d7d7c28218046296ce747bf3", "sha256": "afa83ec8c50469c21b0629696ab18941e1883474ad9766ca64b6825a4d5196fc"}, "downloads": -1, "filename": "battlenet-0.2.5.tar.gz", "has_sig": false, "md5_digest": "a3a010d3d7d7c28218046296ce747bf3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12274, "upload_time": "2011-06-26T20:52:25", "upload_time_iso_8601": "2011-06-26T20:52:25.291972Z", "url": "https://files.pythonhosted.org/packages/a6/da/6ae58deb19b57ee7d28c6f5d36fab4650709932510de8a7d7c39b68c79a6/battlenet-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "3113c17554ae7d976a2cdc2e1da944b8", "sha256": "eaf3d858e06b17a14d2f7ed2952e08aaf614d13c6ebf34a2546ed8f4712ed5b6"}, "downloads": -1, "filename": "battlenet-0.2.6.tar.gz", "has_sig": false, "md5_digest": "3113c17554ae7d976a2cdc2e1da944b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12191, "upload_time": "2011-07-05T05:27:39", "upload_time_iso_8601": "2011-07-05T05:27:39.345065Z", "url": "https://files.pythonhosted.org/packages/32/4c/f31de6de05fe6c4537e229fca9316ed02b6239d010f8a14e0711598e5d0f/battlenet-0.2.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3113c17554ae7d976a2cdc2e1da944b8", "sha256": "eaf3d858e06b17a14d2f7ed2952e08aaf614d13c6ebf34a2546ed8f4712ed5b6"}, "downloads": -1, "filename": "battlenet-0.2.6.tar.gz", "has_sig": false, "md5_digest": "3113c17554ae7d976a2cdc2e1da944b8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12191, "upload_time": "2011-07-05T05:27:39", "upload_time_iso_8601": "2011-07-05T05:27:39.345065Z", "url": "https://files.pythonhosted.org/packages/32/4c/f31de6de05fe6c4537e229fca9316ed02b6239d010f8a14e0711598e5d0f/battlenet-0.2.6.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:43 2020"}