{"info": {"author": "Robert Mcgregor", "author_email": "rmcgregor1990@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: AsyncIO", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6"], "description": "# aio-msgpack-rpc\n[![pipeline status](https://gitlab.com/rmcgregor/aio-msgpack-rpc/badges/master/pipeline.svg)](https://gitlab.com/rmcgregor/aio-msgpack-rpc/commits/master)\n[![coverage report](https://gitlab.com/rmcgregor/aio-msgpack-rpc/badges/master/coverage.svg)](https://rmcgregor.gitlab.io/aio-msgpack-rpc/coverage)\n\nPure asyncio implementation of the [MsgPack RPC](https://github.com/msgpack-rpc/msgpack-rpc/blob/master/spec.md).  \nUses [transports, protocols](https://docs.python.org/3/library/asyncio-protocol.html) and [streams](https://docs.python.org/3/library/asyncio-stream.html) provided by the ```asyncio``` standard library.\n\nJust a simple implementation of the RPC layer.\n\n## Installation\n```\npip install aio-msgpack-rpc\n```\n## Example\n### Server\n```python\nimport asyncio\nimport aio_msgpack_rpc\n\n\n# handlers can be defined on a class\n# they can either be async or plain functions\nclass MyServicer:\n    async def sum(self, x, y):\n        print(f\"sum: {x}, {y}\")\n        return x + y\n\n    def notification(self, msg):\n        print(f\"notification: {msg}\")\n\n\nasync def main():\n    try:\n        server = await asyncio.start_server(aio_msgpack_rpc.Server(MyServicer()), host=\"localhost\", port=18002)\n\n        while True:\n            await asyncio.sleep(0.1)\n    finally:\n        server.close()\n\ntry:\n    asyncio.get_event_loop().run_until_complete(main())\nexcept KeyboardInterrupt:\n    pass\n```\n\n### Client\n```python\nimport asyncio\nimport aio_msgpack_rpc\n\nasync def main():\n    client = aio_msgpack_rpc.Client(*await asyncio.open_connection(\"localhost\", 18002))\n\n    # blocking rpc calls\n    result = await client.call(\"sum\", 1, 2)\n    assert result == 3\n\n    # one way notifications\n    client.notify(\"notification\", \"hello\")\n\nasyncio.get_event_loop().run_until_complete(main())\n```\n\n### Benchmark\nSome basic performance benchmarks against the official implementation on my development machine.\n\n| package       | call (QPS)   | notify (QPS)  |\n| ------------- |:-------------:| -----:|\n| msgpack-rpc-python | 5414 | 11746 |\n| aio-msgpack-rpc | 5781  | 86957 |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/rmcgregor/aio-msgpack-rpc", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "aio-msgpack-rpc", "package_url": "https://pypi.org/project/aio-msgpack-rpc/", "platform": "", "project_url": "https://pypi.org/project/aio-msgpack-rpc/", "project_urls": {"Homepage": "https://gitlab.com/rmcgregor/aio-msgpack-rpc"}, "release_url": "https://pypi.org/project/aio-msgpack-rpc/0.1.0/", "requires_dist": ["msgpack", "pytest; extra == 'test'", "pytest-asyncio; extra == 'test'", "asyncio-extras; extra == 'test'"], "requires_python": ">=3.6", "summary": "asyncio MsgPack RPC", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>aio-msgpack-rpc</h1>\n<p><a href=\"https://gitlab.com/rmcgregor/aio-msgpack-rpc/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/237db3a1b7d369c8a1a086a2208cec893d679e3e/68747470733a2f2f6769746c61622e636f6d2f726d63677265676f722f61696f2d6d73677061636b2d7270632f6261646765732f6d61737465722f706970656c696e652e737667\"></a>\n<a href=\"https://rmcgregor.gitlab.io/aio-msgpack-rpc/coverage\" rel=\"nofollow\"><img alt=\"coverage report\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04e001ea9247ab05af5ad14b5891049521f3f5fc/68747470733a2f2f6769746c61622e636f6d2f726d63677265676f722f61696f2d6d73677061636b2d7270632f6261646765732f6d61737465722f636f7665726167652e737667\"></a></p>\n<p>Pure asyncio implementation of the <a href=\"https://github.com/msgpack-rpc/msgpack-rpc/blob/master/spec.md\" rel=\"nofollow\">MsgPack RPC</a>.<br>\nUses <a href=\"https://docs.python.org/3/library/asyncio-protocol.html\" rel=\"nofollow\">transports, protocols</a> and <a href=\"https://docs.python.org/3/library/asyncio-stream.html\" rel=\"nofollow\">streams</a> provided by the <code>asyncio</code> standard library.</p>\n<p>Just a simple implementation of the RPC layer.</p>\n<h2>Installation</h2>\n<pre><code>pip install aio-msgpack-rpc\n</code></pre>\n<h2>Example</h2>\n<h3>Server</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aio_msgpack_rpc</span>\n\n\n<span class=\"c1\"># handlers can be defined on a class</span>\n<span class=\"c1\"># they can either be async or plain functions</span>\n<span class=\"k\">class</span> <span class=\"nc\">MyServicer</span><span class=\"p\">:</span>\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">sum</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"sum: </span><span class=\"si\">{</span><span class=\"n\">x</span><span class=\"si\">}</span><span class=\"s2\">, </span><span class=\"si\">{</span><span class=\"n\">y</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">y</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">notification</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"p\">):</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"notification: </span><span class=\"si\">{</span><span class=\"n\">msg</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">start_server</span><span class=\"p\">(</span><span class=\"n\">aio_msgpack_rpc</span><span class=\"o\">.</span><span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"n\">MyServicer</span><span class=\"p\">()),</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">18002</span><span class=\"p\">)</span>\n\n        <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n            <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n    <span class=\"k\">finally</span><span class=\"p\">:</span>\n        <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyboardInterrupt</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n<h3>Client</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">aio_msgpack_rpc</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">aio_msgpack_rpc</span><span class=\"o\">.</span><span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">open_connection</span><span class=\"p\">(</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">,</span> <span class=\"mi\">18002</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># blocking rpc calls</span>\n    <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"s2\">\"sum\"</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">result</span> <span class=\"o\">==</span> <span class=\"mi\">3</span>\n\n    <span class=\"c1\"># one way notifications</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">notify</span><span class=\"p\">(</span><span class=\"s2\">\"notification\"</span><span class=\"p\">,</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">run_until_complete</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h3>Benchmark</h3>\n<p>Some basic performance benchmarks against the official implementation on my development machine.</p>\n<table>\n<thead>\n<tr>\n<th>package</th>\n<th align=\"center\">call (QPS)</th>\n<th align=\"right\">notify (QPS)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>msgpack-rpc-python</td>\n<td align=\"center\">5414</td>\n<td align=\"right\">11746</td>\n</tr>\n<tr>\n<td>aio-msgpack-rpc</td>\n<td align=\"center\">5781</td>\n<td align=\"right\">86957</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 3975436, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5cf15d5e8176e3e66f9843b78719525f", "sha256": "7ab272f9b4724f953cdacfee4fb8780d246a718963226bbd86072a4913877d79"}, "downloads": -1, "filename": "aio_msgpack_rpc-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5cf15d5e8176e3e66f9843b78719525f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5708, "upload_time": "2018-06-19T02:44:14", "upload_time_iso_8601": "2018-06-19T02:44:14.038058Z", "url": "https://files.pythonhosted.org/packages/12/ca/2d200b8de73a54b6c6b9ffa72931bcb1cecace195040adce6429ed60bdda/aio_msgpack_rpc-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e70eb540da8033a5975c26c5d3e31b16", "sha256": "5215fa1d8057a02de06dd15cd063ccd92214160ad4354b3d07f6f45ce43dc9cc"}, "downloads": -1, "filename": "aio-msgpack-rpc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e70eb540da8033a5975c26c5d3e31b16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8163, "upload_time": "2018-06-19T02:44:16", "upload_time_iso_8601": "2018-06-19T02:44:16.302855Z", "url": "https://files.pythonhosted.org/packages/f7/9a/99dbd3b98e8fc6ff3e7f2ecb7934978333c076450c8fe11c16081b523467/aio-msgpack-rpc-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5cf15d5e8176e3e66f9843b78719525f", "sha256": "7ab272f9b4724f953cdacfee4fb8780d246a718963226bbd86072a4913877d79"}, "downloads": -1, "filename": "aio_msgpack_rpc-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5cf15d5e8176e3e66f9843b78719525f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 5708, "upload_time": "2018-06-19T02:44:14", "upload_time_iso_8601": "2018-06-19T02:44:14.038058Z", "url": "https://files.pythonhosted.org/packages/12/ca/2d200b8de73a54b6c6b9ffa72931bcb1cecace195040adce6429ed60bdda/aio_msgpack_rpc-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e70eb540da8033a5975c26c5d3e31b16", "sha256": "5215fa1d8057a02de06dd15cd063ccd92214160ad4354b3d07f6f45ce43dc9cc"}, "downloads": -1, "filename": "aio-msgpack-rpc-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e70eb540da8033a5975c26c5d3e31b16", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8163, "upload_time": "2018-06-19T02:44:16", "upload_time_iso_8601": "2018-06-19T02:44:16.302855Z", "url": "https://files.pythonhosted.org/packages/f7/9a/99dbd3b98e8fc6ff3e7f2ecb7934978333c076450c8fe11c16081b523467/aio-msgpack-rpc-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:21:02 2020"}