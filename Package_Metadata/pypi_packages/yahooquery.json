{"info": {"author": "Doug Guthrie", "author_email": "douglas.p.guthrie@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Financial and Insurance Industry", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# Yahooquery\n[![CodeFactor](https://www.codefactor.io/repository/github/dpguthrie/yahooquery/badge/master?s=289f5ed067de511ac29b5e229c1a5ef5c8c1dc83)](https://www.codefactor.io/repository/github/dpguthrie/yahooquery/overview/master)\n[![PyPi downloads](https://pypip.in/d/yahooquery/badge.png)](https://crate.io/packages/yahooquery/)\n[![PyPI version shields.io](https://img.shields.io/pypi/v/yahooquery.svg)](https://pypi.python.org/pypi/yahooquery/)\n[![PyPI license](https://img.shields.io/pypi/l/yahooquery.svg)](https://pypi.python.org/pypi/yahooquery/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/yahooquery.svg)](https://pypi.python.org/pypi/yahooquery/)\n[![Build Status](https://travis-ci.com/dpguthrie/yahooquery.svg?branch=master)](https://travis-ci.com/dpguthrie/yahooquery)\n[![codecov](https://codecov.io/gh/dpguthrie/yahooquery/branch/master/graph/badge.svg)](https://codecov.io/gh/dpguthrie/yahooquery)\n\nPython wrapper around an unofficial Yahoo Finance API.  Check out an interactive demo at (https://yahooquery-streamlit.herokuapp.com)\n\n# 2.2.2 Update\n\n- Bug fix related to the retrieval of income statement and cash flow data.  The most recent month and TTM were being combined and returning incorrect data for the last month.  The dataframe has been modified to include an additional column called 'periodType'.  From that, you'll be able to delineate between quarterly, annual, or trailing 12 month data.\n\n# 2.0.0 Updates\n\n- Yahoo Finance Premium data (for subscribed users)\n- Option to make asynchronous and synchronous requests\n- Faster option data retrieval\n- **EVEN MORE DATA**\n\n# Table of Contents\n- [Install](#install)\n- [Ticker](#ticker)\n  - [Premium](#premium)\n  - [Fund Specific](#fund-specific)\n  - [Options](#options)\n  - [Historical Pricing](#historical-pricing)\n  - [Multiple Modules](#multiple-modules)\n- [Research](#research)\n- [Advanced Usage](#advanced-usage)\n- [Screener](#screener)\n- [Miscellaneous Functions](#miscellaneous-functions)\n\n# Install\n\n```bash\npip install yahooquery\n```\n\n# Ticker\n\nThe `Ticker` module is the access point to the Yahoo Finance API.  Pass a ticker symbol to the `Ticker` class.\n\n```python\nfrom yahooquery import Ticker\n\naapl = Ticker('aapl')\n```\n\nOr pass a list of tickers.\n\n```python\ntickers = Ticker(['aapl', 'msft'])\n\n# is equivalent to\ntickers = Ticker('aapl msft')\n\n# is equivalent to\ntickers = Ticker('aapl, msft')\n```\n\n\n\n### New to 2.0.0\n\nAdditional keyword arguments can be passed to the class to modify certain behavior:\n- `asynchronous`:  Pass `asynchronous=True` and requests made with multiple symbols will be made asynchronously.  Default is `False`\n- `max_workers`:  Pass `max_workers=<n>` and modify how many workers are available to make asynchronous requests.  This is only used when `asynchronous=True` is passed as well.  Default is `8`\n- `proxies`:  Pass `proxies={'http': ..., 'https': ...}` to use a proxy when making a request.  This is **recommended** when making asynchronous requests.\n- `formatted`: Pass `formatted=True` to receive most numeric data in the following form:  `'price': {'raw': 126000000000, 'fmt': '$126B'}`  Default is `False`\n- `username` and `password`:  If you subscribe to Yahoo Finance Premium, pass your `username` and `password`.  You will be logged in and will now be able to access premium properties / methods.  All premium properties / methods begin with `p_`.  **Disable two-factor authentication for this to work.  You do not need to be logged in to access all other properties and methods.**\n\n### Data\n\nBased on the data you'd like, the result will either be accessed through a `dict` or as a `pandas.DataFrame`.  Accessing data is incredibly easy and pythonic.\n\n### Dictionaries\n\n```python\naapl = Ticker('aapl')\n\n# Asset Profile\naapl.asset_profile\n{'aapl': {'address1': 'One Apple Park Way', 'city': 'Cupertino', ... }}\n\n# ESG Scores\naapl.esg_scores\n{'aapl': {'totalEsg': 72.27, 'environomentScore': 89.81, ... }}\n\n# Financial Data\naapl.financial_data\n{'aapl': {'currentPrice': 275.15, 'targetHighPrice': 342.4, ... }}\n\n# Key Statistics\naapl.key_stats\n{'aapl': {'priceHint': 2, 'enterpriseValue': 1230054359040, ... }}\n\n# Price Information\naapl.price\n{'aapl': {'preMarketChange': {}, 'preMarketPrice': {}, ... }}\n\n# Quote Type\naapl.quote_type\n{'aapl': {'exchange': 'NMS', 'quoteType': 'EQUITY', ... }}\n\n# Share Purchase Activity\naapl.share_purchase_activity\n{'aapl': {'period': '6m', 'buyInfoCount': 20, ... }}\n\n# Summary Information\naapl.summary_detail\n{'aapl': {'priceHint': 2, 'previousClose': 271.46, ... }}\naapl.summary_profile\n{'aapl': {'address1': 'One Apple Park Way', 'city': 'Cupertino', ... }}\n```\n\nHow about more than one ticker?\n\n```python\n# Pass a list of tickers to the Ticker class\ntickers = Ticker('aapl msft')\n\ntickers.asset_profile\n{'aapl': {'address1': 'One Apple Park Way', 'city': 'Cupertino', ... }, 'msft': {'address1': 'One Microsoft Way', 'city': 'Redmond', ... }}\n\ntickers.esg_scores\n{'aapl': {'totalEsg': 72.27, 'environomentScore': 89.81, ... }, 'msft': {'totalEsg': 74.8, 'environmentScore': 84.17, ... }}\n\ntickers.financial_data\n{'aapl': {'currentPrice': 275.15, 'targetHighPrice': 342.4, ... }, 'msft': {'currentPrice': 154.53, 'targetHighPrice': 174.0, ... }}\n\ntickers.key_stats\n{'aapl': {'priceHint': 2, 'enterpriseValue': 1230054359040, ... }, 'msft': {'priceHint': 2, 'enterpriseValue': 1127840350208, ... }}\n\ntickers.price\n{'aapl': {'preMarketChange': {}, 'preMarketPrice': {}, ... }, 'msft': {'preMarketChange': {}, 'preMarketPrice': {}, ... }}\n\ntickers.quote_type\n{'aapl': {'exchange': 'NMS', 'quoteType': 'EQUITY', ... }, 'msft': {'exchange': 'NMS', 'quoteType': 'EQUITY', ... }}\n\ntickers.share_purchase_activity\n{'aapl': {'period': '6m', 'buyInfoCount': 20, ... }, 'msft': {'period': '6m', 'buyInfoCount': 30, ... }}\n\ntickers.summary_detail\n{'aapl': {'priceHint': 2, 'previousClose': 271.46, ... }, 'msft': {'priceHint': 2, 'previousClose': 153.24, ... }}\n\ntickers.summary_profile\n{'aapl': {'address1': 'One Apple Park Way', 'city': 'Cupertino', ... }, 'msft': {'address1': 'One Microsoft Way', 'city': 'Redmond', ... }}\n\n```\n\n### New in 2.0.0\n\n```python\n# News Articles\naapl.news\n\n# Trend data related to a symbols page views\naapl.page_views\n\n# Top 5 recommended symbols based on a symbol(s)\naapl.recommendations\n\n# Technical trading insights\naapl.technical_insights\n\n# Validate symbol's existence\naapl.validation\n```\n\n### Dataframes\n\n```python\naapl.company_officers\naapl.earning_history\naapl.grading_history\naapl.insider_holders\naapl.insider_transactions\naapl.institution_ownership\naapl.recommendation_trend\naapl.sec_filings\naapl.fund_ownership\naapl.major_holders\naapl.earnings_trend\n\n# The following methods take a frequency argument.  If nothing is provided, annual data will be returned.  To return quarterly data, pass \"q\" as an argument.\naapl.balance_sheet()  # Defaults to Annual\naapl.balance_sheet(frequency=\"q\")\naapl.balance_sheet(\"q\")\naapl.cash_flow()\naapl.income_statement()\n```\n\n## Premium\n\n### Login\n\nIf you subscribe to Yahoo Finance Premium, you can utilize this package to retrieve premium data as well.  You can pass your login credentials (username and password) when you initialize the `Ticker` class:\n\n```python\ntickers = Ticker('aapl msft fb', username='my_email@gmail.com', password='my_password')\n```\n\nOr you can login after initializing the `Ticker` class:\n\n```python\ntickers.login('my_email@gmail.com', 'my_password')\n```\n\nIt will take around 15-20 seconds to log you in.  After that, utilize the following properties and methods to retrieve premium data:\n\n```python\n# Methods\ntickers.p_balance_sheet()\ntickers.p_income_statement()\ntickers.p_cash_flow()\n\n# The following allows you to retrieve premium reports and ideas related to a given symbol(s).  Report IDs and Idea IDs can be retrieved through the p_portal property\ntickers.p_reports(report_id)\ntickers.p_ideas(idea_id)\n\n# Properties\ntickers.p_company_360\ntickers.p_portal\ntickers.p_technical_events\ntickers.p_value_analyzer\ntickers.p_value_analyzer_drilldown\n```\n\n### Change Symbols\n\nInstead of initializing another class with different symbols, simply do the following:\n\n```python\ntickers.symbols = 'goog amzn'\n# or\ntickers.symbols = ['goog', 'amzn']\n```\n\n## Fund Specific\n\nMutual Funds have many of the accessors detailed above as well as the additional ones below:\n\n```python\nfund = Ticker('rpbax')\n\nfund.fund_category_holdings  # pandas.DataFrame\nfund.fund_bond_ratings  # pandas.DataFrame\nfund.fund_sector_weightings  # pandas.DataFrame\nfund.fund_performance  # dict\nfund.fund_bond_holdings  # dict\nfund.fund_equity_holdings  # dict\n```\n\n## Options\n\nRetrieve option pricing for every expiration date for given ticker(s)\n\n```python\nimport pandas as pd\ndf = aapl.option_chain  # returns pandas.DataFrame\n\n# The dataframe contains a MultiIndex\ndf.index.names\nFrozenList(['symbol', 'expiration_date', 'option_type', 'row'])\n\n# Get all options for specified symbol\ndf.loc['aapl']\n\n# Get specific expiration date for specified symbol\ndf.loc['aapl', '2020-01-02']\n\n# Get specific option type for expiration date for specified symbol\ndf.loc['aapl', '2020-01-02', 'calls']\n\n# Works with multiple tickers as well\ntickers = Ticker(['aapl', 'msft', 'fb'])\ndf = tickers.option_chain\n\n# Retrieve options for only one symbol\ndf.loc['aapl']\n\n# Retrieve only calls for all symbols\ndf.xs('calls', level=2)\n\n# Retrieve only puts for fb\ndf.xs(('fb', 'puts'), level=[0, 2])\n# or\ndf.xs(('fb', 'puts'), level=['symbol', 'option_type'])\n\n# Filter dataframe by options that in the money\ndf.loc[df['inTheMoney'] == True]\n\n# Only include Apple in the money options\ndf.loc[df['inTheMoney'] == True].xs('aapl')\n```\n\n## Historical Pricing\n\nHistorical price data can be retrieved for one or more tickers through the `history` method.\n\n```python\naapl.history()\n```\n\nIf no arguments are provided, as above, default values will be supplied for both `period` and `interval`, which are `ytd` and `1d`, respectively.  Additional arguments you can provide to the method are `start` and `end`.  Start and end dates can be either strings with a date format of `yyyy-mm-dd` or as a `datetime.datetime` object.\n\n```python\n\naapl.history(period='max')\naapl.history(start='2019-05-01')  # Default end date is now\naapl.history(end='2018-12-31')  # Default start date is 1900-01-01\n\n# Period options = 1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y, 10y, ytd, max\n# Interval options = 1m, 2m, 5m, 15m, 30m, 60m, 90m, 1h, 1d, 5d, 1wk, 1mo, 3mo\n```\n\nAvailable periods and intervals can be seen through `Ticker.PERIODS` and `Ticker.INTERVALS`, respectively.\n\nIf trying to retrieve more than one ticker, one dataframe will be returned and the ticker can be accessed in the `symbol` level of the `pandas.MultiIndex`.\n\n```python\ntickers = Ticker('aapl msft')\ntickers.history()\n```\n| symbol | date                |   volume |    open |    low |   high |   close |\n|:-------|:--------------------|---------:|--------:|-------:|-------:|--------:|\n| AAPL   | 2019-01-02 07:30:00 | 37039700 | 154.89  | 154.23 | 158.85 |  157.92 |\n| AAPL   | 2019-01-03 07:30:00 | 91312200 | 143.98  | 142    | 145.72 |  142.19 |\n| MSFT   | 2019-12-12 07:30:00 | 24612100 | 151.65  | 151.02 | 153.44 |  153.24 |\n| MSFT   | 2019-12-13 14:00:01 | 23850062 | 153.003 | 152.85 | 154.89 |  154.53 |\n\n## Multiple Modules\n\n### New in 2.0.0\n\nThe property and method to retrieve multiple endpoints have changed:\n- from `get_endpoints` to `get_modules`\n- from `all_endpoints` to `all_modules`\n\n### Accessing Multiple Modules\n\nMultiple endpoints can be accessed in one call for a given symbol through two separate modules:  `get_modules` and `all_modules`.  The `get_modules` method\ntakes in a `list` or `str` of allowable modules.  Conversely, the `all_modules` property will retrieve all modules.\n\n```python\naapl = Ticker('aapl')\nmodules = ['assetProfile', 'esgScores', 'incomeStatementHistory']\n# or\nmodules = ['assetProfile esgScores incomeStatementHistory']\ndata = aapl.get_modules(modules)\n\n# or\n\ndata = aapl.all_modules\n\n# The symbol(s) and modules become the keys in the dictionary\n\ndata['aapl']['assetProfile']\ndata['aapl']['esgScores']\ndata['aapl']['incomeStatementHistory']\n```\n\n### Notes\n\n- The data will always be returned as a dictionary\n- `Ticker.MODULES` will show you the list of allowable modules you can pass to the `get_modules` method\n\n# Screener\n\nThe `Screener` class is the access point to retrieve predefined Yahoo Finance lists (most actives, cryptocurrencies, day gainers, day losers, etc.).  It's also simple to use.\n\n```python\nfrom yahooquery import Screener\n\ns = Screener()\n```\n\nView list of available predefined lists from Yahoo Finance\n\n```python\n# View available screeners along with description and nice name\ns.SCREENERS\n\n# or just view list of keys\ns.available_screeners\n```\n\nThen pass a key to the `get_screeners` function on the `Screener` instance:\n\n```python\n# Stocks ordered in descending order by intraday trade volume \ndata = s.get_screeners('most_actives')\n\n# Pass a number of quotes to return, default is 25\ndata = s.get_screeners('most_actives', count=10)\n```\n\nData will be returned as a dictionary:\n\n```python\ndata['most_actives']\n```\n\nThe list will be in the `quotes` key:\n\n```python\ndata['most_actives']['quotes']\n```\n\nOr pass a list of multiple keys:\n\n```python\ndata = s.get_screeners(['most_actives', 'day_gainers', 'day_losers'])\n\n# is equivalent to\ndata = s.get_screeners('most_actives day_gainers day_losers')\n\ndata['most_actives']['quotes']\ndata['day_gainers']['quotes']\ndata['day_losers']['quotes']\n```\n# Research\n\nThe `Research` class is the access point to retrieve either research reports or trade ideas from Yahoo Finance.  **You must be a subscriber to Yahoo Finance Premium to utilize this class.**\n\n```python\nfrom yahooquery import Research\n\nr = Research(username='my_email@gmail.com', password='my_password')\n\n```\n\nIt's important to note that all keyword arguments that you can pass to the `Ticker` class are available in the `Research` class as well.\n\n```python\nr = Research(username='my_email@gmail.com', password='my_password', asynchronous=True, formatted=True)\n```\n\nAfter initializing the class though, retrieving data is incredibly simple.\n\n```python\n# Retrieve research reports\nr.reports()\n\n# Retrieve trade ideas\nr.trades()\n```\n\nBoth functions allow for filtering as well as increasing the number of results returned.\n\n## Size\n\n```python\n\n# Each method takes a size argument that determines the amount of reports or trade ideas returned\nr.reports(500)\nr.trades(1000)\n```\n\n**Requests are made in batches of 100**\n\n## Filters\n\n### Reports\n\n- `investment_rating`: see `Research.TRENDS['options']` for available options\n- `sector`: see `Research.SECTORS['options']` for available options\n- `report_type`: see `Research.REPORT_TYPES['options']` for available options\n- `report_date`: see `Research.DATES['options']` for available options\n\n```python\n# Filter by sectors\nr.reports(sector=['Basic Materials', 'Real Estate'])\n\n# is equivalent to\nr.reports(sector='Basic Materials, Real Estate')\n\n# Combine filters\nr.reports(25, sector='Basic Materials', report_date='Last Week', investment_rating=['Bearish', 'Bullish'])\n```\n\n### Trade Ideas\n\n- `trend`: see `Research.TRENDS['options']` for available options\n- `sector`: see `Research.SECTORS['options']` for available options\n- `term`: see `Research.TERMS['options']` for available options\n- `startdatetime`: see `Research.DATES['options']` for available options\n\n```python\n# Filter by sectors\nr.trades(sector=['Basic Materials', 'Real Estate'])\n\n# is equivalent to\nr.trades(sector='Basic Materials, Real Estate')\n\n# Combine filters\nr.trades(25, sector='Basic Materials', startdatetime='Last Week', trend=['Bearish', 'Bullish'])\n```\n\n# Advanced Usage\n\n**FOR YAHOO FINANCE PREMIUM SUBSCRIBERS**:  There might be a use case for combining the functionalities of both the `Ticker` and `Research` class.  And, ideally, the user wouldn't have to utilize the login functionality in both instances.  Here's how you would do that:\n\n```python\nfrom yahooquery import Research, Ticker\n\nr = Research(username='my_email@gmail.com', password='my_password', asynchronous=True)\n\n# I want to retrieve last week's Bullish Analyst Report's for the Financial Services sector\ndf = r.reports(sector='Financial Services', report_date='Last Week', investment_rating='Bullish', report_type='Analyst Report')\n\n# But now I want to get the data I find relevant and run my own analysis\n\n# Using aapl as a default symbol (we will change that later).  But, the important part is passing the current session and crumb from our Research instance\ntickers = Ticker('aapl', session=r.session, crumb=r.crumb)\n\n# Now, I can loop through the dataframe and retrieve relevant data for each ticker within the dataframe utilizing the Ticker instance\nfor i, row in df.iterrows():\n    tickers.symbols = row['Tickers']\n    data = tickers.p_company_360\n    # Do something with data\n    # ...\n\n# Or, pass all tickers to the Ticker instance\nticker_list = df['Tickers'].tolist()\nticker_list = list(set(_flatten_list(ticker_list)))\ntickers = Ticker(ticker_list, session=r.session, crumb=r.crumb)\ndata = tickers.p_company_360\n# Do something with data\n# ...\n```\n\n# Miscellaneous Functions\n\nAdditional data can be obtained from Yahoo Finance outside of the `Ticker` class.  The following functions can be utilized to retrieve\nadditional data unrelated to a ticker symbol:\n\n```python\nfrom yahooquery import get_currencies, get_market_summary, get_trending\n```\n\nThey take in keyword arguments of `lang`, `region`, and `corsDomain`.  The defaults are as follows:\n\n```python\ndefault = {\n    'lang': 'en-US',\n    'region': 'US',\n    'corsDomain': 'finance.yahoo.com'\n}\n```\n\nThose defaults, or keyword arguments, are used as query parameters in the requests made to Yahoo Finance.\n\n```python\n# Obtain a list of all currencies\nd = get_currencies()\n\n# View market summary statistics\nd = get_market_summary()\n\n# View trending tickers for a region (default is 'US')\nd = get_trending()\n```\n\nOne more function allows you to view a list of exchanges Yahoo Finance supports.  It takes no arguments or keyword arguments and returns a `pandas.DataFrame`.\n\n```python\nfrom yahooquery import get_exchanges\n\ndf = get_exchanges()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dpguthrie/yahooquery", "keywords": "pandas,yahoo finance,finance,stocks,mutual funds,etfs", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "yahooquery", "package_url": "https://pypi.org/project/yahooquery/", "platform": "", "project_url": "https://pypi.org/project/yahooquery/", "project_urls": {"Homepage": "https://github.com/dpguthrie/yahooquery"}, "release_url": "https://pypi.org/project/yahooquery/2.2.3/", "requires_dist": ["lxml (==4.5.0)", "pandas (>=0.24)", "requests-futures (==1.0.0)", "selenium (==3.141.0)", "pytest ; extra == 'test'", "coverage ; extra == 'test'", "pytest-cov ; extra == 'test'", "lxml (==4.5.0) ; extra == 'test'", "pandas (>=0.24) ; extra == 'test'", "requests-futures (==1.0.0) ; extra == 'test'", "selenium (==3.141.0) ; extra == 'test'"], "requires_python": "", "summary": "Retrieve nearly all data from Yahoo Finance for one or more ticker symbols", "version": "2.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Yahooquery</h1>\n<p><a href=\"https://www.codefactor.io/repository/github/dpguthrie/yahooquery/overview/master\" rel=\"nofollow\"><img alt=\"CodeFactor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/247084cad353a0a6a6f79e37a5c2e8bdc2a44d81/68747470733a2f2f7777772e636f6465666163746f722e696f2f7265706f7369746f72792f6769746875622f6470677574687269652f7961686f6f71756572792f62616467652f6d61737465723f733d32383966356564303637646535313161633239623565323239633161356566356338633164633833\"></a>\n<a href=\"https://crate.io/packages/yahooquery/\" rel=\"nofollow\"><img alt=\"PyPi downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1ae5f498d77afcf3732eb64c6b811ce0ffd53e6/68747470733a2f2f70797069702e696e2f642f7961686f6f71756572792f62616467652e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/yahooquery/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7d284e70d5fe489577dbb8194bfb6ff10b4f7b6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7961686f6f71756572792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/yahooquery/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc10ad9c4dc1e41ef233d55fed76516acf6a8edb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7961686f6f71756572792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/yahooquery/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bcd730867d3952d4952e883f51ab5eafd84e5570/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7961686f6f71756572792e737667\"></a>\n<a href=\"https://travis-ci.com/dpguthrie/yahooquery\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8812f3289f50bd97740ce83280be72ab990e12ab/68747470733a2f2f7472617669732d63692e636f6d2f6470677574687269652f7961686f6f71756572792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/dpguthrie/yahooquery\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73ffbd91076d57f2c1dd11b6ba99c89cceea3d4f/68747470733a2f2f636f6465636f762e696f2f67682f6470677574687269652f7961686f6f71756572792f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<p>Python wrapper around an unofficial Yahoo Finance API.  Check out an interactive demo at (<a href=\"https://yahooquery-streamlit.herokuapp.com\" rel=\"nofollow\">https://yahooquery-streamlit.herokuapp.com</a>)</p>\n<h1>2.2.2 Update</h1>\n<ul>\n<li>Bug fix related to the retrieval of income statement and cash flow data.  The most recent month and TTM were being combined and returning incorrect data for the last month.  The dataframe has been modified to include an additional column called 'periodType'.  From that, you'll be able to delineate between quarterly, annual, or trailing 12 month data.</li>\n</ul>\n<h1>2.0.0 Updates</h1>\n<ul>\n<li>Yahoo Finance Premium data (for subscribed users)</li>\n<li>Option to make asynchronous and synchronous requests</li>\n<li>Faster option data retrieval</li>\n<li><strong>EVEN MORE DATA</strong></li>\n</ul>\n<h1>Table of Contents</h1>\n<ul>\n<li><a href=\"#install\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#ticker\" rel=\"nofollow\">Ticker</a>\n<ul>\n<li><a href=\"#premium\" rel=\"nofollow\">Premium</a></li>\n<li><a href=\"#fund-specific\" rel=\"nofollow\">Fund Specific</a></li>\n<li><a href=\"#options\" rel=\"nofollow\">Options</a></li>\n<li><a href=\"#historical-pricing\" rel=\"nofollow\">Historical Pricing</a></li>\n<li><a href=\"#multiple-modules\" rel=\"nofollow\">Multiple Modules</a></li>\n</ul>\n</li>\n<li><a href=\"#research\" rel=\"nofollow\">Research</a></li>\n<li><a href=\"#advanced-usage\" rel=\"nofollow\">Advanced Usage</a></li>\n<li><a href=\"#screener\" rel=\"nofollow\">Screener</a></li>\n<li><a href=\"#miscellaneous-functions\" rel=\"nofollow\">Miscellaneous Functions</a></li>\n</ul>\n<h1>Install</h1>\n<pre>pip install yahooquery\n</pre>\n<h1>Ticker</h1>\n<p>The <code>Ticker</code> module is the access point to the Yahoo Finance API.  Pass a ticker symbol to the <code>Ticker</code> class.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yahooquery</span> <span class=\"kn\">import</span> <span class=\"n\">Ticker</span>\n\n<span class=\"n\">aapl</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl'</span><span class=\"p\">)</span>\n</pre>\n<p>Or pass a list of tickers.</p>\n<pre><span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">([</span><span class=\"s1\">'aapl'</span><span class=\"p\">,</span> <span class=\"s1\">'msft'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># is equivalent to</span>\n<span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl msft'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># is equivalent to</span>\n<span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl, msft'</span><span class=\"p\">)</span>\n</pre>\n<h3>New to 2.0.0</h3>\n<p>Additional keyword arguments can be passed to the class to modify certain behavior:</p>\n<ul>\n<li><code>asynchronous</code>:  Pass <code>asynchronous=True</code> and requests made with multiple symbols will be made asynchronously.  Default is <code>False</code></li>\n<li><code>max_workers</code>:  Pass <code>max_workers=&lt;n&gt;</code> and modify how many workers are available to make asynchronous requests.  This is only used when <code>asynchronous=True</code> is passed as well.  Default is <code>8</code></li>\n<li><code>proxies</code>:  Pass <code>proxies={'http': ..., 'https': ...}</code> to use a proxy when making a request.  This is <strong>recommended</strong> when making asynchronous requests.</li>\n<li><code>formatted</code>: Pass <code>formatted=True</code> to receive most numeric data in the following form:  <code>'price': {'raw': 126000000000, 'fmt': '$126B'}</code>  Default is <code>False</code></li>\n<li><code>username</code> and <code>password</code>:  If you subscribe to Yahoo Finance Premium, pass your <code>username</code> and <code>password</code>.  You will be logged in and will now be able to access premium properties / methods.  All premium properties / methods begin with <code>p_</code>.  <strong>Disable two-factor authentication for this to work.  You do not need to be logged in to access all other properties and methods.</strong></li>\n</ul>\n<h3>Data</h3>\n<p>Based on the data you'd like, the result will either be accessed through a <code>dict</code> or as a <code>pandas.DataFrame</code>.  Accessing data is incredibly easy and pythonic.</p>\n<h3>Dictionaries</h3>\n<pre><span class=\"n\">aapl</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Asset Profile</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">asset_profile</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'One Apple Park Way'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Cupertino'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># ESG Scores</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">esg_scores</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'totalEsg'</span><span class=\"p\">:</span> <span class=\"mf\">72.27</span><span class=\"p\">,</span> <span class=\"s1\">'environomentScore'</span><span class=\"p\">:</span> <span class=\"mf\">89.81</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># Financial Data</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">financial_data</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'currentPrice'</span><span class=\"p\">:</span> <span class=\"mf\">275.15</span><span class=\"p\">,</span> <span class=\"s1\">'targetHighPrice'</span><span class=\"p\">:</span> <span class=\"mf\">342.4</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># Key Statistics</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">key_stats</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'priceHint'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'enterpriseValue'</span><span class=\"p\">:</span> <span class=\"mi\">1230054359040</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># Price Information</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">price</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'preMarketChange'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'preMarketPrice'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># Quote Type</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">quote_type</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'exchange'</span><span class=\"p\">:</span> <span class=\"s1\">'NMS'</span><span class=\"p\">,</span> <span class=\"s1\">'quoteType'</span><span class=\"p\">:</span> <span class=\"s1\">'EQUITY'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># Share Purchase Activity</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">share_purchase_activity</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'period'</span><span class=\"p\">:</span> <span class=\"s1\">'6m'</span><span class=\"p\">,</span> <span class=\"s1\">'buyInfoCount'</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"c1\"># Summary Information</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">summary_detail</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'priceHint'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'previousClose'</span><span class=\"p\">:</span> <span class=\"mf\">271.46</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">summary_profile</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'One Apple Park Way'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Cupertino'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n</pre>\n<p>How about more than one ticker?</p>\n<pre><span class=\"c1\"># Pass a list of tickers to the Ticker class</span>\n<span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl msft'</span><span class=\"p\">)</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">asset_profile</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'One Apple Park Way'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Cupertino'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'One Microsoft Way'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Redmond'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">esg_scores</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'totalEsg'</span><span class=\"p\">:</span> <span class=\"mf\">72.27</span><span class=\"p\">,</span> <span class=\"s1\">'environomentScore'</span><span class=\"p\">:</span> <span class=\"mf\">89.81</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'totalEsg'</span><span class=\"p\">:</span> <span class=\"mf\">74.8</span><span class=\"p\">,</span> <span class=\"s1\">'environmentScore'</span><span class=\"p\">:</span> <span class=\"mf\">84.17</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">financial_data</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'currentPrice'</span><span class=\"p\">:</span> <span class=\"mf\">275.15</span><span class=\"p\">,</span> <span class=\"s1\">'targetHighPrice'</span><span class=\"p\">:</span> <span class=\"mf\">342.4</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'currentPrice'</span><span class=\"p\">:</span> <span class=\"mf\">154.53</span><span class=\"p\">,</span> <span class=\"s1\">'targetHighPrice'</span><span class=\"p\">:</span> <span class=\"mf\">174.0</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">key_stats</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'priceHint'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'enterpriseValue'</span><span class=\"p\">:</span> <span class=\"mi\">1230054359040</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'priceHint'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'enterpriseValue'</span><span class=\"p\">:</span> <span class=\"mi\">1127840350208</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">price</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'preMarketChange'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'preMarketPrice'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'preMarketChange'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"s1\">'preMarketPrice'</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">quote_type</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'exchange'</span><span class=\"p\">:</span> <span class=\"s1\">'NMS'</span><span class=\"p\">,</span> <span class=\"s1\">'quoteType'</span><span class=\"p\">:</span> <span class=\"s1\">'EQUITY'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'exchange'</span><span class=\"p\">:</span> <span class=\"s1\">'NMS'</span><span class=\"p\">,</span> <span class=\"s1\">'quoteType'</span><span class=\"p\">:</span> <span class=\"s1\">'EQUITY'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">share_purchase_activity</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'period'</span><span class=\"p\">:</span> <span class=\"s1\">'6m'</span><span class=\"p\">,</span> <span class=\"s1\">'buyInfoCount'</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'period'</span><span class=\"p\">:</span> <span class=\"s1\">'6m'</span><span class=\"p\">,</span> <span class=\"s1\">'buyInfoCount'</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">summary_detail</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'priceHint'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'previousClose'</span><span class=\"p\">:</span> <span class=\"mf\">271.46</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'priceHint'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'previousClose'</span><span class=\"p\">:</span> <span class=\"mf\">153.24</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">summary_profile</span>\n<span class=\"p\">{</span><span class=\"s1\">'aapl'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'One Apple Park Way'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Cupertino'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">},</span> <span class=\"s1\">'msft'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'address1'</span><span class=\"p\">:</span> <span class=\"s1\">'One Microsoft Way'</span><span class=\"p\">,</span> <span class=\"s1\">'city'</span><span class=\"p\">:</span> <span class=\"s1\">'Redmond'</span><span class=\"p\">,</span> <span class=\"o\">...</span> <span class=\"p\">}}</span>\n</pre>\n<h3>New in 2.0.0</h3>\n<pre><span class=\"c1\"># News Articles</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">news</span>\n\n<span class=\"c1\"># Trend data related to a symbols page views</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">page_views</span>\n\n<span class=\"c1\"># Top 5 recommended symbols based on a symbol(s)</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">recommendations</span>\n\n<span class=\"c1\"># Technical trading insights</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">technical_insights</span>\n\n<span class=\"c1\"># Validate symbol's existence</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">validation</span>\n</pre>\n<h3>Dataframes</h3>\n<pre><span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">company_officers</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">earning_history</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">grading_history</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">insider_holders</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">insider_transactions</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">institution_ownership</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">recommendation_trend</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">sec_filings</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">fund_ownership</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">major_holders</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">earnings_trend</span>\n\n<span class=\"c1\"># The following methods take a frequency argument.  If nothing is provided, annual data will be returned.  To return quarterly data, pass \"q\" as an argument.</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">balance_sheet</span><span class=\"p\">()</span>  <span class=\"c1\"># Defaults to Annual</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">balance_sheet</span><span class=\"p\">(</span><span class=\"n\">frequency</span><span class=\"o\">=</span><span class=\"s2\">\"q\"</span><span class=\"p\">)</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">balance_sheet</span><span class=\"p\">(</span><span class=\"s2\">\"q\"</span><span class=\"p\">)</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">cash_flow</span><span class=\"p\">()</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">income_statement</span><span class=\"p\">()</span>\n</pre>\n<h2>Premium</h2>\n<h3>Login</h3>\n<p>If you subscribe to Yahoo Finance Premium, you can utilize this package to retrieve premium data as well.  You can pass your login credentials (username and password) when you initialize the <code>Ticker</code> class:</p>\n<pre><span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl msft fb'</span><span class=\"p\">,</span> <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'my_email@gmail.com'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'my_password'</span><span class=\"p\">)</span>\n</pre>\n<p>Or you can login after initializing the <code>Ticker</code> class:</p>\n<pre><span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">login</span><span class=\"p\">(</span><span class=\"s1\">'my_email@gmail.com'</span><span class=\"p\">,</span> <span class=\"s1\">'my_password'</span><span class=\"p\">)</span>\n</pre>\n<p>It will take around 15-20 seconds to log you in.  After that, utilize the following properties and methods to retrieve premium data:</p>\n<pre><span class=\"c1\"># Methods</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_balance_sheet</span><span class=\"p\">()</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_income_statement</span><span class=\"p\">()</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_cash_flow</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># The following allows you to retrieve premium reports and ideas related to a given symbol(s).  Report IDs and Idea IDs can be retrieved through the p_portal property</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_reports</span><span class=\"p\">(</span><span class=\"n\">report_id</span><span class=\"p\">)</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_ideas</span><span class=\"p\">(</span><span class=\"n\">idea_id</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Properties</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_company_360</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_portal</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_technical_events</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_value_analyzer</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_value_analyzer_drilldown</span>\n</pre>\n<h3>Change Symbols</h3>\n<p>Instead of initializing another class with different symbols, simply do the following:</p>\n<pre><span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">symbols</span> <span class=\"o\">=</span> <span class=\"s1\">'goog amzn'</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">symbols</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'goog'</span><span class=\"p\">,</span> <span class=\"s1\">'amzn'</span><span class=\"p\">]</span>\n</pre>\n<h2>Fund Specific</h2>\n<p>Mutual Funds have many of the accessors detailed above as well as the additional ones below:</p>\n<pre><span class=\"n\">fund</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'rpbax'</span><span class=\"p\">)</span>\n\n<span class=\"n\">fund</span><span class=\"o\">.</span><span class=\"n\">fund_category_holdings</span>  <span class=\"c1\"># pandas.DataFrame</span>\n<span class=\"n\">fund</span><span class=\"o\">.</span><span class=\"n\">fund_bond_ratings</span>  <span class=\"c1\"># pandas.DataFrame</span>\n<span class=\"n\">fund</span><span class=\"o\">.</span><span class=\"n\">fund_sector_weightings</span>  <span class=\"c1\"># pandas.DataFrame</span>\n<span class=\"n\">fund</span><span class=\"o\">.</span><span class=\"n\">fund_performance</span>  <span class=\"c1\"># dict</span>\n<span class=\"n\">fund</span><span class=\"o\">.</span><span class=\"n\">fund_bond_holdings</span>  <span class=\"c1\"># dict</span>\n<span class=\"n\">fund</span><span class=\"o\">.</span><span class=\"n\">fund_equity_holdings</span>  <span class=\"c1\"># dict</span>\n</pre>\n<h2>Options</h2>\n<p>Retrieve option pricing for every expiration date for given ticker(s)</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">option_chain</span>  <span class=\"c1\"># returns pandas.DataFrame</span>\n\n<span class=\"c1\"># The dataframe contains a MultiIndex</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">index</span><span class=\"o\">.</span><span class=\"n\">names</span>\n<span class=\"n\">FrozenList</span><span class=\"p\">([</span><span class=\"s1\">'symbol'</span><span class=\"p\">,</span> <span class=\"s1\">'expiration_date'</span><span class=\"p\">,</span> <span class=\"s1\">'option_type'</span><span class=\"p\">,</span> <span class=\"s1\">'row'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Get all options for specified symbol</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get specific expiration date for specified symbol</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">,</span> <span class=\"s1\">'2020-01-02'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Get specific option type for expiration date for specified symbol</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">,</span> <span class=\"s1\">'2020-01-02'</span><span class=\"p\">,</span> <span class=\"s1\">'calls'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Works with multiple tickers as well</span>\n<span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">([</span><span class=\"s1\">'aapl'</span><span class=\"p\">,</span> <span class=\"s1\">'msft'</span><span class=\"p\">,</span> <span class=\"s1\">'fb'</span><span class=\"p\">])</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">option_chain</span>\n\n<span class=\"c1\"># Retrieve options for only one symbol</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Retrieve only calls for all symbols</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">xs</span><span class=\"p\">(</span><span class=\"s1\">'calls'</span><span class=\"p\">,</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Retrieve only puts for fb</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">xs</span><span class=\"p\">((</span><span class=\"s1\">'fb'</span><span class=\"p\">,</span> <span class=\"s1\">'puts'</span><span class=\"p\">),</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">])</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">xs</span><span class=\"p\">((</span><span class=\"s1\">'fb'</span><span class=\"p\">,</span> <span class=\"s1\">'puts'</span><span class=\"p\">),</span> <span class=\"n\">level</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'symbol'</span><span class=\"p\">,</span> <span class=\"s1\">'option_type'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Filter dataframe by options that in the money</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'inTheMoney'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"kc\">True</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># Only include Apple in the money options</span>\n<span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">loc</span><span class=\"p\">[</span><span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'inTheMoney'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"kc\">True</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">xs</span><span class=\"p\">(</span><span class=\"s1\">'aapl'</span><span class=\"p\">)</span>\n</pre>\n<h2>Historical Pricing</h2>\n<p>Historical price data can be retrieved for one or more tickers through the <code>history</code> method.</p>\n<pre><span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">()</span>\n</pre>\n<p>If no arguments are provided, as above, default values will be supplied for both <code>period</code> and <code>interval</code>, which are <code>ytd</code> and <code>1d</code>, respectively.  Additional arguments you can provide to the method are <code>start</code> and <code>end</code>.  Start and end dates can be either strings with a date format of <code>yyyy-mm-dd</code> or as a <code>datetime.datetime</code> object.</p>\n<pre><span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">(</span><span class=\"n\">period</span><span class=\"o\">=</span><span class=\"s1\">'max'</span><span class=\"p\">)</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">(</span><span class=\"n\">start</span><span class=\"o\">=</span><span class=\"s1\">'2019-05-01'</span><span class=\"p\">)</span>  <span class=\"c1\"># Default end date is now</span>\n<span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">(</span><span class=\"n\">end</span><span class=\"o\">=</span><span class=\"s1\">'2018-12-31'</span><span class=\"p\">)</span>  <span class=\"c1\"># Default start date is 1900-01-01</span>\n\n<span class=\"c1\"># Period options = 1d, 5d, 1mo, 3mo, 6mo, 1y, 2y, 5y, 10y, ytd, max</span>\n<span class=\"c1\"># Interval options = 1m, 2m, 5m, 15m, 30m, 60m, 90m, 1h, 1d, 5d, 1wk, 1mo, 3mo</span>\n</pre>\n<p>Available periods and intervals can be seen through <code>Ticker.PERIODS</code> and <code>Ticker.INTERVALS</code>, respectively.</p>\n<p>If trying to retrieve more than one ticker, one dataframe will be returned and the ticker can be accessed in the <code>symbol</code> level of the <code>pandas.MultiIndex</code>.</p>\n<pre><span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl msft'</span><span class=\"p\">)</span>\n<span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">history</span><span class=\"p\">()</span>\n</pre>\n<table>\n<thead>\n<tr>\n<th align=\"left\">symbol</th>\n<th align=\"left\">date</th>\n<th align=\"right\">volume</th>\n<th align=\"right\">open</th>\n<th align=\"right\">low</th>\n<th align=\"right\">high</th>\n<th align=\"right\">close</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">AAPL</td>\n<td align=\"left\">2019-01-02 07:30:00</td>\n<td align=\"right\">37039700</td>\n<td align=\"right\">154.89</td>\n<td align=\"right\">154.23</td>\n<td align=\"right\">158.85</td>\n<td align=\"right\">157.92</td>\n</tr>\n<tr>\n<td align=\"left\">AAPL</td>\n<td align=\"left\">2019-01-03 07:30:00</td>\n<td align=\"right\">91312200</td>\n<td align=\"right\">143.98</td>\n<td align=\"right\">142</td>\n<td align=\"right\">145.72</td>\n<td align=\"right\">142.19</td>\n</tr>\n<tr>\n<td align=\"left\">MSFT</td>\n<td align=\"left\">2019-12-12 07:30:00</td>\n<td align=\"right\">24612100</td>\n<td align=\"right\">151.65</td>\n<td align=\"right\">151.02</td>\n<td align=\"right\">153.44</td>\n<td align=\"right\">153.24</td>\n</tr>\n<tr>\n<td align=\"left\">MSFT</td>\n<td align=\"left\">2019-12-13 14:00:01</td>\n<td align=\"right\">23850062</td>\n<td align=\"right\">153.003</td>\n<td align=\"right\">152.85</td>\n<td align=\"right\">154.89</td>\n<td align=\"right\">154.53</td>\n</tr></tbody></table>\n<h2>Multiple Modules</h2>\n<h3>New in 2.0.0</h3>\n<p>The property and method to retrieve multiple endpoints have changed:</p>\n<ul>\n<li>from <code>get_endpoints</code> to <code>get_modules</code></li>\n<li>from <code>all_endpoints</code> to <code>all_modules</code></li>\n</ul>\n<h3>Accessing Multiple Modules</h3>\n<p>Multiple endpoints can be accessed in one call for a given symbol through two separate modules:  <code>get_modules</code> and <code>all_modules</code>.  The <code>get_modules</code> method\ntakes in a <code>list</code> or <code>str</code> of allowable modules.  Conversely, the <code>all_modules</code> property will retrieve all modules.</p>\n<pre><span class=\"n\">aapl</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl'</span><span class=\"p\">)</span>\n<span class=\"n\">modules</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'assetProfile'</span><span class=\"p\">,</span> <span class=\"s1\">'esgScores'</span><span class=\"p\">,</span> <span class=\"s1\">'incomeStatementHistory'</span><span class=\"p\">]</span>\n<span class=\"c1\"># or</span>\n<span class=\"n\">modules</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'assetProfile esgScores incomeStatementHistory'</span><span class=\"p\">]</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">get_modules</span><span class=\"p\">(</span><span class=\"n\">modules</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># or</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">aapl</span><span class=\"o\">.</span><span class=\"n\">all_modules</span>\n\n<span class=\"c1\"># The symbol(s) and modules become the keys in the dictionary</span>\n\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">][</span><span class=\"s1\">'assetProfile'</span><span class=\"p\">]</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">][</span><span class=\"s1\">'esgScores'</span><span class=\"p\">]</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'aapl'</span><span class=\"p\">][</span><span class=\"s1\">'incomeStatementHistory'</span><span class=\"p\">]</span>\n</pre>\n<h3>Notes</h3>\n<ul>\n<li>The data will always be returned as a dictionary</li>\n<li><code>Ticker.MODULES</code> will show you the list of allowable modules you can pass to the <code>get_modules</code> method</li>\n</ul>\n<h1>Screener</h1>\n<p>The <code>Screener</code> class is the access point to retrieve predefined Yahoo Finance lists (most actives, cryptocurrencies, day gainers, day losers, etc.).  It's also simple to use.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yahooquery</span> <span class=\"kn\">import</span> <span class=\"n\">Screener</span>\n\n<span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">Screener</span><span class=\"p\">()</span>\n</pre>\n<p>View list of available predefined lists from Yahoo Finance</p>\n<pre><span class=\"c1\"># View available screeners along with description and nice name</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">SCREENERS</span>\n\n<span class=\"c1\"># or just view list of keys</span>\n<span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">available_screeners</span>\n</pre>\n<p>Then pass a key to the <code>get_screeners</code> function on the <code>Screener</code> instance:</p>\n<pre><span class=\"c1\"># Stocks ordered in descending order by intraday trade volume </span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_screeners</span><span class=\"p\">(</span><span class=\"s1\">'most_actives'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Pass a number of quotes to return, default is 25</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_screeners</span><span class=\"p\">(</span><span class=\"s1\">'most_actives'</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>Data will be returned as a dictionary:</p>\n<pre><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'most_actives'</span><span class=\"p\">]</span>\n</pre>\n<p>The list will be in the <code>quotes</code> key:</p>\n<pre><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'most_actives'</span><span class=\"p\">][</span><span class=\"s1\">'quotes'</span><span class=\"p\">]</span>\n</pre>\n<p>Or pass a list of multiple keys:</p>\n<pre><span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_screeners</span><span class=\"p\">([</span><span class=\"s1\">'most_actives'</span><span class=\"p\">,</span> <span class=\"s1\">'day_gainers'</span><span class=\"p\">,</span> <span class=\"s1\">'day_losers'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># is equivalent to</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">get_screeners</span><span class=\"p\">(</span><span class=\"s1\">'most_actives day_gainers day_losers'</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'most_actives'</span><span class=\"p\">][</span><span class=\"s1\">'quotes'</span><span class=\"p\">]</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'day_gainers'</span><span class=\"p\">][</span><span class=\"s1\">'quotes'</span><span class=\"p\">]</span>\n<span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s1\">'day_losers'</span><span class=\"p\">][</span><span class=\"s1\">'quotes'</span><span class=\"p\">]</span>\n</pre>\n<h1>Research</h1>\n<p>The <code>Research</code> class is the access point to retrieve either research reports or trade ideas from Yahoo Finance.  <strong>You must be a subscriber to Yahoo Finance Premium to utilize this class.</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yahooquery</span> <span class=\"kn\">import</span> <span class=\"n\">Research</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Research</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'my_email@gmail.com'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'my_password'</span><span class=\"p\">)</span>\n</pre>\n<p>It's important to note that all keyword arguments that you can pass to the <code>Ticker</code> class are available in the <code>Research</code> class as well.</p>\n<pre><span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Research</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'my_email@gmail.com'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'my_password'</span><span class=\"p\">,</span> <span class=\"n\">asynchronous</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"n\">formatted</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>After initializing the class though, retrieving data is incredibly simple.</p>\n<pre><span class=\"c1\"># Retrieve research reports</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Retrieve trade ideas</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">trades</span><span class=\"p\">()</span>\n</pre>\n<p>Both functions allow for filtering as well as increasing the number of results returned.</p>\n<h2>Size</h2>\n<pre><span class=\"c1\"># Each method takes a size argument that determines the amount of reports or trade ideas returned</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">(</span><span class=\"mi\">500</span><span class=\"p\">)</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">trades</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Requests are made in batches of 100</strong></p>\n<h2>Filters</h2>\n<h3>Reports</h3>\n<ul>\n<li><code>investment_rating</code>: see <code>Research.TRENDS['options']</code> for available options</li>\n<li><code>sector</code>: see <code>Research.SECTORS['options']</code> for available options</li>\n<li><code>report_type</code>: see <code>Research.REPORT_TYPES['options']</code> for available options</li>\n<li><code>report_date</code>: see <code>Research.DATES['options']</code> for available options</li>\n</ul>\n<pre><span class=\"c1\"># Filter by sectors</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">(</span><span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Basic Materials'</span><span class=\"p\">,</span> <span class=\"s1\">'Real Estate'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># is equivalent to</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">(</span><span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"s1\">'Basic Materials, Real Estate'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Combine filters</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"s1\">'Basic Materials'</span><span class=\"p\">,</span> <span class=\"n\">report_date</span><span class=\"o\">=</span><span class=\"s1\">'Last Week'</span><span class=\"p\">,</span> <span class=\"n\">investment_rating</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Bearish'</span><span class=\"p\">,</span> <span class=\"s1\">'Bullish'</span><span class=\"p\">])</span>\n</pre>\n<h3>Trade Ideas</h3>\n<ul>\n<li><code>trend</code>: see <code>Research.TRENDS['options']</code> for available options</li>\n<li><code>sector</code>: see <code>Research.SECTORS['options']</code> for available options</li>\n<li><code>term</code>: see <code>Research.TERMS['options']</code> for available options</li>\n<li><code>startdatetime</code>: see <code>Research.DATES['options']</code> for available options</li>\n</ul>\n<pre><span class=\"c1\"># Filter by sectors</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">trades</span><span class=\"p\">(</span><span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Basic Materials'</span><span class=\"p\">,</span> <span class=\"s1\">'Real Estate'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># is equivalent to</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">trades</span><span class=\"p\">(</span><span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"s1\">'Basic Materials, Real Estate'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Combine filters</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">trades</span><span class=\"p\">(</span><span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"s1\">'Basic Materials'</span><span class=\"p\">,</span> <span class=\"n\">startdatetime</span><span class=\"o\">=</span><span class=\"s1\">'Last Week'</span><span class=\"p\">,</span> <span class=\"n\">trend</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Bearish'</span><span class=\"p\">,</span> <span class=\"s1\">'Bullish'</span><span class=\"p\">])</span>\n</pre>\n<h1>Advanced Usage</h1>\n<p><strong>FOR YAHOO FINANCE PREMIUM SUBSCRIBERS</strong>:  There might be a use case for combining the functionalities of both the <code>Ticker</code> and <code>Research</code> class.  And, ideally, the user wouldn't have to utilize the login functionality in both instances.  Here's how you would do that:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yahooquery</span> <span class=\"kn\">import</span> <span class=\"n\">Research</span><span class=\"p\">,</span> <span class=\"n\">Ticker</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Research</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'my_email@gmail.com'</span><span class=\"p\">,</span> <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'my_password'</span><span class=\"p\">,</span> <span class=\"n\">asynchronous</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># I want to retrieve last week's Bullish Analyst Report's for the Financial Services sector</span>\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">reports</span><span class=\"p\">(</span><span class=\"n\">sector</span><span class=\"o\">=</span><span class=\"s1\">'Financial Services'</span><span class=\"p\">,</span> <span class=\"n\">report_date</span><span class=\"o\">=</span><span class=\"s1\">'Last Week'</span><span class=\"p\">,</span> <span class=\"n\">investment_rating</span><span class=\"o\">=</span><span class=\"s1\">'Bullish'</span><span class=\"p\">,</span> <span class=\"n\">report_type</span><span class=\"o\">=</span><span class=\"s1\">'Analyst Report'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># But now I want to get the data I find relevant and run my own analysis</span>\n\n<span class=\"c1\"># Using aapl as a default symbol (we will change that later).  But, the important part is passing the current session and crumb from our Research instance</span>\n<span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"s1\">'aapl'</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">crumb</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">crumb</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Now, I can loop through the dataframe and retrieve relevant data for each ticker within the dataframe utilizing the Ticker instance</span>\n<span class=\"k\">for</span> <span class=\"n\">i</span><span class=\"p\">,</span> <span class=\"n\">row</span> <span class=\"ow\">in</span> <span class=\"n\">df</span><span class=\"o\">.</span><span class=\"n\">iterrows</span><span class=\"p\">():</span>\n    <span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">symbols</span> <span class=\"o\">=</span> <span class=\"n\">row</span><span class=\"p\">[</span><span class=\"s1\">'Tickers'</span><span class=\"p\">]</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_company_360</span>\n    <span class=\"c1\"># Do something with data</span>\n    <span class=\"c1\"># ...</span>\n\n<span class=\"c1\"># Or, pass all tickers to the Ticker instance</span>\n<span class=\"n\">ticker_list</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'Tickers'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">tolist</span><span class=\"p\">()</span>\n<span class=\"n\">ticker_list</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"n\">_flatten_list</span><span class=\"p\">(</span><span class=\"n\">ticker_list</span><span class=\"p\">)))</span>\n<span class=\"n\">tickers</span> <span class=\"o\">=</span> <span class=\"n\">Ticker</span><span class=\"p\">(</span><span class=\"n\">ticker_list</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"n\">crumb</span><span class=\"o\">=</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">crumb</span><span class=\"p\">)</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">tickers</span><span class=\"o\">.</span><span class=\"n\">p_company_360</span>\n<span class=\"c1\"># Do something with data</span>\n<span class=\"c1\"># ...</span>\n</pre>\n<h1>Miscellaneous Functions</h1>\n<p>Additional data can be obtained from Yahoo Finance outside of the <code>Ticker</code> class.  The following functions can be utilized to retrieve\nadditional data unrelated to a ticker symbol:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yahooquery</span> <span class=\"kn\">import</span> <span class=\"n\">get_currencies</span><span class=\"p\">,</span> <span class=\"n\">get_market_summary</span><span class=\"p\">,</span> <span class=\"n\">get_trending</span>\n</pre>\n<p>They take in keyword arguments of <code>lang</code>, <code>region</code>, and <code>corsDomain</code>.  The defaults are as follows:</p>\n<pre><span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'lang'</span><span class=\"p\">:</span> <span class=\"s1\">'en-US'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'region'</span><span class=\"p\">:</span> <span class=\"s1\">'US'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'corsDomain'</span><span class=\"p\">:</span> <span class=\"s1\">'finance.yahoo.com'</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Those defaults, or keyword arguments, are used as query parameters in the requests made to Yahoo Finance.</p>\n<pre><span class=\"c1\"># Obtain a list of all currencies</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">get_currencies</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># View market summary statistics</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">get_market_summary</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># View trending tickers for a region (default is 'US')</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">get_trending</span><span class=\"p\">()</span>\n</pre>\n<p>One more function allows you to view a list of exchanges Yahoo Finance supports.  It takes no arguments or keyword arguments and returns a <code>pandas.DataFrame</code>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">yahooquery</span> <span class=\"kn\">import</span> <span class=\"n\">get_exchanges</span>\n\n<span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">get_exchanges</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 7183664, "releases": {"1.0.10": [{"comment_text": "", "digests": {"md5": "f88581e6e7e2ab7a3509c8dc70610740", "sha256": "f273cdba485dfa17f59d6270c3e18413c7e70a54fa62e9ef17c8b3d65e7c6497"}, "downloads": -1, "filename": "yahooquery-1.0.10-py3-none-any.whl", "has_sig": false, "md5_digest": "f88581e6e7e2ab7a3509c8dc70610740", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14624, "upload_time": "2020-01-05T22:57:22", "upload_time_iso_8601": "2020-01-05T22:57:22.884097Z", "url": "https://files.pythonhosted.org/packages/da/d1/e3190f427613bad7782211fa247ee2b263b05854f985cc1f1f1199c7fb3e/yahooquery-1.0.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "283a2370fcd49a49a74b5f56f7e2fe6e", "sha256": "83de106e6193518c02ffde920eae5f1d5d4d2402feb85aaacba9dfb1d316383e"}, "downloads": -1, "filename": "yahooquery-1.0.10.tar.gz", "has_sig": false, "md5_digest": "283a2370fcd49a49a74b5f56f7e2fe6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15690, "upload_time": "2020-01-05T22:57:25", "upload_time_iso_8601": "2020-01-05T22:57:25.095757Z", "url": "https://files.pythonhosted.org/packages/aa/6d/e6970378440b402116ad02ceceaa9fb3136fb50f5ad1c17345646ddcf3ec/yahooquery-1.0.10.tar.gz", "yanked": false}], "1.0.11": [{"comment_text": "", "digests": {"md5": "02a41e5c5cabd46cf066f75e2569144c", "sha256": "2605e7a0236d4a2b1eb3df36408aea8fcf4377e9b17d8cd35c537c7bb3d865e8"}, "downloads": -1, "filename": "yahooquery-1.0.11-py3-none-any.whl", "has_sig": false, "md5_digest": "02a41e5c5cabd46cf066f75e2569144c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 14635, "upload_time": "2020-01-06T03:45:35", "upload_time_iso_8601": "2020-01-06T03:45:35.605218Z", "url": "https://files.pythonhosted.org/packages/f6/27/b1f61cf623cbc52b9a1edda4222b00be95767238c722e886a8b63dc1b10f/yahooquery-1.0.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "56fe55719fc813aa75c7732097fd15f0", "sha256": "50f14814ee402ce6f99137bb14bfeaac95f48469a1da1314653e483da0207d41"}, "downloads": -1, "filename": "yahooquery-1.0.11.tar.gz", "has_sig": false, "md5_digest": "56fe55719fc813aa75c7732097fd15f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15693, "upload_time": "2020-01-06T03:45:37", "upload_time_iso_8601": "2020-01-06T03:45:37.199796Z", "url": "https://files.pythonhosted.org/packages/02/86/e65cf592ea87e5cec7c8b5f0e6dccbe6fb3452ff1cba4f03b5845d2708af/yahooquery-1.0.11.tar.gz", "yanked": false}], "1.0.12": [{"comment_text": "", "digests": {"md5": "de4f8d3df1a99c45f7f59970ef49c39b", "sha256": "78437d5be4ffa6cc7f3a23cdc78eb2aae18ed10bc72b60b4519b1d3263828775"}, "downloads": -1, "filename": "yahooquery-1.0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "de4f8d3df1a99c45f7f59970ef49c39b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15370, "upload_time": "2020-01-09T23:52:29", "upload_time_iso_8601": "2020-01-09T23:52:29.076507Z", "url": "https://files.pythonhosted.org/packages/e6/b5/0e6f39c20cefbcb0c5c36f75e684a654eafe34011c32cdd31ceb3aa945b1/yahooquery-1.0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a63299724aa2f031ab52cb61e70c928", "sha256": "cd8ac7791b78fbd3fa34e242a472ca0f54bdf78ceb32d154f2e84e0668b89df0"}, "downloads": -1, "filename": "yahooquery-1.0.12.tar.gz", "has_sig": false, "md5_digest": "3a63299724aa2f031ab52cb61e70c928", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17060, "upload_time": "2020-01-09T23:52:30", "upload_time_iso_8601": "2020-01-09T23:52:30.929738Z", "url": "https://files.pythonhosted.org/packages/26/55/2d7c07dbeca833bc6fd2aa3cb81a170772f6732fac4d2fc33b583e398d75/yahooquery-1.0.12.tar.gz", "yanked": false}], "1.0.13": [{"comment_text": "", "digests": {"md5": "55d7623954679e17ab74c299d0ebc0f4", "sha256": "9ac3e3079c1a839215dae71bb32fb407ea9a5a4755d506e9da15cdb46e346ba5"}, "downloads": -1, "filename": "yahooquery-1.0.13-py3-none-any.whl", "has_sig": false, "md5_digest": "55d7623954679e17ab74c299d0ebc0f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15446, "upload_time": "2020-01-11T23:18:10", "upload_time_iso_8601": "2020-01-11T23:18:10.051942Z", "url": "https://files.pythonhosted.org/packages/13/ee/07a04c4704b339cc556bd7caf71a65165d21e07bf203541bf2b7dce4875a/yahooquery-1.0.13-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "897c8e4b5d1f5b53ef1f48244b854fe4", "sha256": "53e95a287f3a095c50c0e7e3d03462804ab82d472f55547aaeeac5bc1c473105"}, "downloads": -1, "filename": "yahooquery-1.0.13.tar.gz", "has_sig": false, "md5_digest": "897c8e4b5d1f5b53ef1f48244b854fe4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16997, "upload_time": "2020-01-11T23:18:12", "upload_time_iso_8601": "2020-01-11T23:18:12.277331Z", "url": "https://files.pythonhosted.org/packages/0b/87/655d5301d0593fc93a1054b39b195476496c753b403133e40773183cb6ac/yahooquery-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "cbf5f4fea828a1e068a4975f2c8c0fc0", "sha256": "15dcc63b82773856904f0696aacf7e42510b11472faa4018fbef7a13338f7279"}, "downloads": -1, "filename": "yahooquery-1.0.14-py3-none-any.whl", "has_sig": false, "md5_digest": "cbf5f4fea828a1e068a4975f2c8c0fc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15923, "upload_time": "2020-01-14T04:44:52", "upload_time_iso_8601": "2020-01-14T04:44:52.690264Z", "url": "https://files.pythonhosted.org/packages/9e/58/fcce8e450aa04ffcfe9b74a707985bd9233d1e22405b84fda6cedb504f79/yahooquery-1.0.14-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e99522ac437ae05af7af78574134f1a9", "sha256": "cf9d9cb6cd12b966d1bf1979ef883689b48451812bba1299c1cc0f082d5770fc"}, "downloads": -1, "filename": "yahooquery-1.0.14.tar.gz", "has_sig": false, "md5_digest": "e99522ac437ae05af7af78574134f1a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16102, "upload_time": "2020-01-14T04:44:54", "upload_time_iso_8601": "2020-01-14T04:44:54.907966Z", "url": "https://files.pythonhosted.org/packages/fb/d0/be632a90205ef584213c4bc09821fcf6aa3f792bc068f015e72cf55c7185/yahooquery-1.0.14.tar.gz", "yanked": false}], "1.0.15": [{"comment_text": "", "digests": {"md5": "8849a7e68995bc7014d721a27697aa5b", "sha256": "c0910f7886e33d642c930814280a374328aa676089c5b79715e91aca5b9d051c"}, "downloads": -1, "filename": "yahooquery-1.0.15-py3-none-any.whl", "has_sig": false, "md5_digest": "8849a7e68995bc7014d721a27697aa5b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15927, "upload_time": "2020-01-14T04:50:39", "upload_time_iso_8601": "2020-01-14T04:50:39.418415Z", "url": "https://files.pythonhosted.org/packages/c4/a0/222e1920b50a5aa674c4134fab360806199b1779cfe6cf68643f237a012f/yahooquery-1.0.15-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f77946f14ad6fdc40039b047b3f39062", "sha256": "2ace24aaa7b8dac0c7058832748bc3381757873a20d4795a151051cbdfcb5ea0"}, "downloads": -1, "filename": "yahooquery-1.0.15.tar.gz", "has_sig": false, "md5_digest": "f77946f14ad6fdc40039b047b3f39062", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16105, "upload_time": "2020-01-14T04:50:42", "upload_time_iso_8601": "2020-01-14T04:50:42.039637Z", "url": "https://files.pythonhosted.org/packages/67/ae/54394db4eba7dbb3d3a2cde52c6e76439829f189d001f661d655ec0d59d5/yahooquery-1.0.15.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "12f501343049a59e277a6351e025104c", "sha256": "e1ec6bfb2892a413de2d44483cf09541acd339022b58ebce74812dd0dae41fe6"}, "downloads": -1, "filename": "yahooquery-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "12f501343049a59e277a6351e025104c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11227, "upload_time": "2019-12-20T20:59:27", "upload_time_iso_8601": "2019-12-20T20:59:27.620247Z", "url": "https://files.pythonhosted.org/packages/39/ad/46eb28f194052b26f19d00e3069affcbd1ecc8792a69b9c5205564d53fe4/yahooquery-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "258c8bf12830e6b880f1747524f2ccbe", "sha256": "5868746d7cec0e638ec6f8b9bf26e840ec551960a6c55e3e1aa9909eeecb5595"}, "downloads": -1, "filename": "yahooquery-1.0.3.tar.gz", "has_sig": false, "md5_digest": "258c8bf12830e6b880f1747524f2ccbe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11832, "upload_time": "2019-12-20T20:59:29", "upload_time_iso_8601": "2019-12-20T20:59:29.378668Z", "url": "https://files.pythonhosted.org/packages/c2/3d/d1848e92a02fe3e322764b6b01025b409ada922edc73f7d15dc520a72c50/yahooquery-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "cd445029232cc681192883ed45075795", "sha256": "d274c265a51cfa7310eb6b0f850eb461929647b56e337d1d418c3ddd6fe77044"}, "downloads": -1, "filename": "yahooquery-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "cd445029232cc681192883ed45075795", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11228, "upload_time": "2019-12-20T21:02:22", "upload_time_iso_8601": "2019-12-20T21:02:22.426587Z", "url": "https://files.pythonhosted.org/packages/76/56/b0bdfbd1ce4b34005d092e64b7645946d78ad48a95d8d6ee4e7513494930/yahooquery-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cec2f9a91653fbe4db7350cc921225d5", "sha256": "26a70eb40f41118574d159e14a2c497dc846d95819c1126df9d63c9bb2685c9f"}, "downloads": -1, "filename": "yahooquery-1.0.4.tar.gz", "has_sig": false, "md5_digest": "cec2f9a91653fbe4db7350cc921225d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11843, "upload_time": "2019-12-20T21:02:25", "upload_time_iso_8601": "2019-12-20T21:02:25.425349Z", "url": "https://files.pythonhosted.org/packages/43/7c/6a2530c4b3dc0fe702e8bd0433eee617a1748f7dcd7ca07b7e8641a6924e/yahooquery-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "7d7e8be5022efd0ed526df9e43c943ec", "sha256": "e29c222096e7b226ef19d2ad5adc249681c06db071d111b03ef36c153ddd0274"}, "downloads": -1, "filename": "yahooquery-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7d7e8be5022efd0ed526df9e43c943ec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11324, "upload_time": "2019-12-20T22:41:19", "upload_time_iso_8601": "2019-12-20T22:41:19.704970Z", "url": "https://files.pythonhosted.org/packages/e1/36/8dc33de24f61d278fc63f3b70ee789174eb6b768cc5e2e2fe1f52374e4bf/yahooquery-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "16fa4eac716baa54af1a89e6bc3f78b2", "sha256": "4d725817cd3bd3430b0bd3b5c7416027c58b3a6f26ef7cbd7072cedbaaa8c74a"}, "downloads": -1, "filename": "yahooquery-1.0.5.tar.gz", "has_sig": false, "md5_digest": "16fa4eac716baa54af1a89e6bc3f78b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12043, "upload_time": "2019-12-20T22:41:22", "upload_time_iso_8601": "2019-12-20T22:41:22.928671Z", "url": "https://files.pythonhosted.org/packages/f8/a2/3b583aed8085c931a71c7bed9e01aa08601040914178bfe4ed879b95567c/yahooquery-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "2389d830303d5d2a3c4cccb5b801bf6a", "sha256": "1c8d6c5bd904ba6810f66ea962931505d1d0e2ce9669ee806e3b670c5b6a69af"}, "downloads": -1, "filename": "yahooquery-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "2389d830303d5d2a3c4cccb5b801bf6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11623, "upload_time": "2019-12-24T14:32:17", "upload_time_iso_8601": "2019-12-24T14:32:17.458712Z", "url": "https://files.pythonhosted.org/packages/63/5b/225543db5128a0e3323ad5cb7130b41753626a9152d3e10fd4429300ab37/yahooquery-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "74fe5c5197edda4cff95ce091c9fe18e", "sha256": "58fceb953ed524913c9efa662644bb34bcb0582b72be20d95b1a9c0dabb6dab5"}, "downloads": -1, "filename": "yahooquery-1.0.6.tar.gz", "has_sig": false, "md5_digest": "74fe5c5197edda4cff95ce091c9fe18e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12427, "upload_time": "2019-12-24T14:32:19", "upload_time_iso_8601": "2019-12-24T14:32:19.295228Z", "url": "https://files.pythonhosted.org/packages/d3/1f/6f3a27999ed4286cc6d810e09b31c92e6bcebae51240c77fb54529466481/yahooquery-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "2b1fd854314ee7e1f3ccb06b8268db28", "sha256": "23f9f9f91f35ac136def427f84434963b26e1ee5bf25b8378ae1bc1809cac6ae"}, "downloads": -1, "filename": "yahooquery-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1fd854314ee7e1f3ccb06b8268db28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11591, "upload_time": "2019-12-30T22:08:43", "upload_time_iso_8601": "2019-12-30T22:08:43.954983Z", "url": "https://files.pythonhosted.org/packages/3d/ce/f26a0f2afe594565dd73bd989236dbc53c153e31c3b0c67154cf0b01b409/yahooquery-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d2db04d2ebc17ad4d9fc22ac7c61d22", "sha256": "fe794bba59f87c48e321b017da4b6b738d8d7e3db42716070683818bcf2e8d10"}, "downloads": -1, "filename": "yahooquery-1.0.7.tar.gz", "has_sig": false, "md5_digest": "1d2db04d2ebc17ad4d9fc22ac7c61d22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12437, "upload_time": "2019-12-30T22:08:49", "upload_time_iso_8601": "2019-12-30T22:08:49.196215Z", "url": "https://files.pythonhosted.org/packages/30/69/3c0487e27230ee54d1145e364e97e6341d4ded508ba0ae93fa904a2f70ed/yahooquery-1.0.7.tar.gz", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "dd2fcb77e0e40e026f891e710d602ea0", "sha256": "2dc7b4905ab0b2c789bfd0730c5ac22672f72bf5637c8867c9f8bc25371980e3"}, "downloads": -1, "filename": "yahooquery-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "dd2fcb77e0e40e026f891e710d602ea0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12863, "upload_time": "2020-01-01T00:09:24", "upload_time_iso_8601": "2020-01-01T00:09:24.651834Z", "url": "https://files.pythonhosted.org/packages/05/63/fd0c81a0f1964ad0e7b70d42cba20ab87e4b640a9a98da8067b18cfb55fd/yahooquery-1.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36e2516063c13f206bb5305bf29c2206", "sha256": "e53bcd218c083b8419b466d79b05039548e3b497a25a130cea01b82fbf8cd721"}, "downloads": -1, "filename": "yahooquery-1.0.8.tar.gz", "has_sig": false, "md5_digest": "36e2516063c13f206bb5305bf29c2206", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13446, "upload_time": "2020-01-01T00:09:26", "upload_time_iso_8601": "2020-01-01T00:09:26.781546Z", "url": "https://files.pythonhosted.org/packages/c4/be/70d19475ed636eee8978249eeaebb4747e551f97042da2619141998fa1cd/yahooquery-1.0.8.tar.gz", "yanked": false}], "1.0.9": [{"comment_text": "", "digests": {"md5": "e4a8781872d567b8918c53b6c4e3278f", "sha256": "e6d50b8a37534720abe539e2e44c35de060692086417ca5b3b380593874ef4c3"}, "downloads": -1, "filename": "yahooquery-1.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "e4a8781872d567b8918c53b6c4e3278f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12924, "upload_time": "2020-01-02T22:03:30", "upload_time_iso_8601": "2020-01-02T22:03:30.179577Z", "url": "https://files.pythonhosted.org/packages/5c/04/622830d5c45ddacad2cd329fd5f4e6a612bc11ab24c31673af2757f5e8e4/yahooquery-1.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "821cfce6d08f98af63cc80e8ef47aeb6", "sha256": "1f867bb2815b49ef6b57ee633b07bd1e93e960412410f64bf00f752c48920ffc"}, "downloads": -1, "filename": "yahooquery-1.0.9.tar.gz", "has_sig": false, "md5_digest": "821cfce6d08f98af63cc80e8ef47aeb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13953, "upload_time": "2020-01-02T22:03:35", "upload_time_iso_8601": "2020-01-02T22:03:35.272177Z", "url": "https://files.pythonhosted.org/packages/b2/6b/cc0d75997a03ce9ac71f17e1a8e6e7446452fe35160ae9643bc08d26b2f0/yahooquery-1.0.9.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "314711779409a141d69b83f8321bfb52", "sha256": "9937d5b35726013f2e7911d88a51c76753e76cde440ae4b06c9d43f9aafe19b4"}, "downloads": -1, "filename": "yahooquery-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "314711779409a141d69b83f8321bfb52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15846, "upload_time": "2020-01-14T17:57:02", "upload_time_iso_8601": "2020-01-14T17:57:02.417961Z", "url": "https://files.pythonhosted.org/packages/03/43/bfcf01eadaf24c7097e1b582c67b71b2062bd00b1f33d5c48663c1593dd8/yahooquery-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "510da93cfa5607b7a45bb042a5f8ecdd", "sha256": "a51fb1c96015382afc630e2f4450b4d9b26cdfa98f508b4634af561e2bfed976"}, "downloads": -1, "filename": "yahooquery-1.1.0.tar.gz", "has_sig": false, "md5_digest": "510da93cfa5607b7a45bb042a5f8ecdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16258, "upload_time": "2020-01-14T17:57:04", "upload_time_iso_8601": "2020-01-14T17:57:04.438798Z", "url": "https://files.pythonhosted.org/packages/f5/53/4b2e0ac93d8ec2cd79d9b4506edfe3c63ecf499ceb4dcd5c9aa714619809/yahooquery-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "b906ddd8a99d3c162b1b801bd46e1645", "sha256": "2ee4d532734377784d6578125e3f7c388051e14906a47c4cc07ecb871b527f91"}, "downloads": -1, "filename": "yahooquery-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b906ddd8a99d3c162b1b801bd46e1645", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16053, "upload_time": "2020-01-20T22:49:54", "upload_time_iso_8601": "2020-01-20T22:49:54.500009Z", "url": "https://files.pythonhosted.org/packages/90/49/afd2b0e648557f7adf1aad2cd479a5e14d9bd0233f77a38fa7cbcb50e7bd/yahooquery-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3f0ba418c196dc0f5991b02d6adced7", "sha256": "614b07e1146c83ec5bf48c3e40a0e8e3868eb56b97bef0ee13461223fbead404"}, "downloads": -1, "filename": "yahooquery-1.1.1.tar.gz", "has_sig": false, "md5_digest": "f3f0ba418c196dc0f5991b02d6adced7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16393, "upload_time": "2020-01-20T22:49:56", "upload_time_iso_8601": "2020-01-20T22:49:56.650786Z", "url": "https://files.pythonhosted.org/packages/39/30/47412db9f22305fe96f5bd08ea5e77dec72fbfe0f94f1e1158e3f53cb1c7/yahooquery-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "596868dd72bfb876b48043edbb1c7e5f", "sha256": "3dd581025cee863716d4bfc456c7e44bd4f8775d658caffd72dcd0a03a73bf5f"}, "downloads": -1, "filename": "yahooquery-1.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "596868dd72bfb876b48043edbb1c7e5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16035, "upload_time": "2020-01-30T19:06:11", "upload_time_iso_8601": "2020-01-30T19:06:11.974778Z", "url": "https://files.pythonhosted.org/packages/0f/59/6c7b0e4489806cfca9c2feae9eb533a8e59e75765cd7e69fbe9d78940e65/yahooquery-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b833c7f30344230f0fdf3dadb21c7797", "sha256": "43f5f70e0584b2c032523621041d99e64c4dd526d624f157cb9a2297f3a48459"}, "downloads": -1, "filename": "yahooquery-1.1.2.tar.gz", "has_sig": false, "md5_digest": "b833c7f30344230f0fdf3dadb21c7797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16480, "upload_time": "2020-01-30T19:06:14", "upload_time_iso_8601": "2020-01-30T19:06:14.050089Z", "url": "https://files.pythonhosted.org/packages/38/64/2741d8f49cd0a3815f101732f0231fea351573afe0bc44a720b0d8b6e6b9/yahooquery-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "c5aad7e5a02b475d124c67c4b6d0fbcd", "sha256": "68f493e5d2f4c2afe698ab17456d81f403847ce4987207648286c13d3439e635"}, "downloads": -1, "filename": "yahooquery-1.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "c5aad7e5a02b475d124c67c4b6d0fbcd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16118, "upload_time": "2020-01-30T21:01:55", "upload_time_iso_8601": "2020-01-30T21:01:55.312242Z", "url": "https://files.pythonhosted.org/packages/62/09/fec27b1a300782389ed59426f440bcb5b5f0ea1bebb4cd9b247dd722d78e/yahooquery-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "33a091ea6246991d0a6a5f4de5313b55", "sha256": "edbf1e43f43367209f8776824aba0a5de748fd32e21a6be95aebe753f426c931"}, "downloads": -1, "filename": "yahooquery-1.1.3.tar.gz", "has_sig": false, "md5_digest": "33a091ea6246991d0a6a5f4de5313b55", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16573, "upload_time": "2020-01-30T21:01:57", "upload_time_iso_8601": "2020-01-30T21:01:57.150234Z", "url": "https://files.pythonhosted.org/packages/57/0e/1c00fac180f5d5da66a903a2625bbb4014568a9f1aba70aaca65b260dff4/yahooquery-1.1.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "bbf629d954c566eaed53715197b99643", "sha256": "ecba06ff73b9637ccde25e594484a22e2916471de04c7a465a9e6d2bf39d3a85"}, "downloads": -1, "filename": "yahooquery-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bbf629d954c566eaed53715197b99643", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22408, "upload_time": "2020-04-06T22:32:24", "upload_time_iso_8601": "2020-04-06T22:32:24.370184Z", "url": "https://files.pythonhosted.org/packages/6b/2c/9a0dcf9c8cb2fbf45cb2725841c95261886eef2a0fc5400867a9d257765f/yahooquery-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0471776944f76672a01447ec512a9c8d", "sha256": "12dd9836ea784aa5b3b6e31f3686c0919b6b7819cfb9caaf123638859a23bcb8"}, "downloads": -1, "filename": "yahooquery-2.0.0.tar.gz", "has_sig": false, "md5_digest": "0471776944f76672a01447ec512a9c8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24376, "upload_time": "2020-04-06T22:32:26", "upload_time_iso_8601": "2020-04-06T22:32:26.699204Z", "url": "https://files.pythonhosted.org/packages/f5/b5/5a7dd5b1882e2675093c5949a66ffc30b7ed1636c18884cadc533aa5a2fc/yahooquery-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "88d502a33a61de8b93f5558a54674aec", "sha256": "9ba62245ba32e4033fe2972441896ef6c4b0dcaf70d881db64f249cf5338604a"}, "downloads": -1, "filename": "yahooquery-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "88d502a33a61de8b93f5558a54674aec", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 39691, "upload_time": "2020-04-16T20:15:14", "upload_time_iso_8601": "2020-04-16T20:15:14.137324Z", "url": "https://files.pythonhosted.org/packages/2f/82/9932219134a99c8005314b7006a0c662e5c1ca016d3090c91b2314532ae6/yahooquery-2.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f75cfdd6dc68a3268dd73c7f72a9e176", "sha256": "a3bff64bb2aee48a6a1de0ed1f016c47d93802c00e6aa6485e48b7da4641920b"}, "downloads": -1, "filename": "yahooquery-2.1.0.tar.gz", "has_sig": false, "md5_digest": "f75cfdd6dc68a3268dd73c7f72a9e176", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42912, "upload_time": "2020-04-16T20:15:16", "upload_time_iso_8601": "2020-04-16T20:15:16.055707Z", "url": "https://files.pythonhosted.org/packages/58/fe/9c4ab041fc870c018e145cc457a3541e9d833344e1ced3c61c1028a99e2a/yahooquery-2.1.0.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "71c2d818659c4c72e9a2621272e93101", "sha256": "b018c5d4496eadfd204dd7b52a2fec71879fa469c9276715d727967d5c85947c"}, "downloads": -1, "filename": "yahooquery-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71c2d818659c4c72e9a2621272e93101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43951, "upload_time": "2020-04-19T04:24:16", "upload_time_iso_8601": "2020-04-19T04:24:16.950640Z", "url": "https://files.pythonhosted.org/packages/6a/89/4ff3df27e6a94658820b670b49c8853ceef1c8c659ee635080b968bbc474/yahooquery-2.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7fe64ada9440145c6a895e77295b338", "sha256": "d68ad189eb5b944fbaebb876c2f40cf7c96a9ed03ded6fd76f9d5a6ea90bbdad"}, "downloads": -1, "filename": "yahooquery-2.2.0.tar.gz", "has_sig": false, "md5_digest": "f7fe64ada9440145c6a895e77295b338", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48120, "upload_time": "2020-04-19T04:24:20", "upload_time_iso_8601": "2020-04-19T04:24:20.123318Z", "url": "https://files.pythonhosted.org/packages/75/6a/763c250db977e5cac8ac156f0628c2d9e32dfbe203e27a597b9ca22c8de9/yahooquery-2.2.0.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "b13093e20c19fce0cb23020b9b9a3f99", "sha256": "17056d401537dadd05c8d27c4dedf54f4b3b8ebde76c3ccbebf8c22475552a1b"}, "downloads": -1, "filename": "yahooquery-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b13093e20c19fce0cb23020b9b9a3f99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 43985, "upload_time": "2020-04-20T14:19:23", "upload_time_iso_8601": "2020-04-20T14:19:23.744395Z", "url": "https://files.pythonhosted.org/packages/eb/4f/0bc0d7f42435ef4ebe724b40abe2e2c9edde7ea68e12f79ec9cf8672a438/yahooquery-2.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab0fec863a6c1354039df350755e92d9", "sha256": "e418368c03fc6433d9e3289633f255a08e02f3118353e66a3a95074b377ad852"}, "downloads": -1, "filename": "yahooquery-2.2.1.tar.gz", "has_sig": false, "md5_digest": "ab0fec863a6c1354039df350755e92d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48185, "upload_time": "2020-04-20T14:19:26", "upload_time_iso_8601": "2020-04-20T14:19:26.028982Z", "url": "https://files.pythonhosted.org/packages/f0/83/82f52805ea0fcd7505199e336b155e7cf805156db2821985c38ef97f2371/yahooquery-2.2.1.tar.gz", "yanked": false}], "2.2.2": [{"comment_text": "", "digests": {"md5": "3973ee90d2d15bf3eeac8a365e1bb58c", "sha256": "a8f70f5543bafbfe9db437223099f4580adbf290fad5e431dd175f4b38629bb5"}, "downloads": -1, "filename": "yahooquery-2.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3973ee90d2d15bf3eeac8a365e1bb58c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44184, "upload_time": "2020-05-01T14:43:31", "upload_time_iso_8601": "2020-05-01T14:43:31.579253Z", "url": "https://files.pythonhosted.org/packages/72/44/603b4076b593503139a1f8468d4055d3b70aa1ff8b3bc7e3c9c0582accdd/yahooquery-2.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8adf9124f6dd2f67dfb72842ba8952f0", "sha256": "edeea45cc3c37537549d799a352f41a33e0e67cbac153e0c617bc6b006ebd78c"}, "downloads": -1, "filename": "yahooquery-2.2.2.tar.gz", "has_sig": false, "md5_digest": "8adf9124f6dd2f67dfb72842ba8952f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48548, "upload_time": "2020-05-01T14:43:34", "upload_time_iso_8601": "2020-05-01T14:43:34.012122Z", "url": "https://files.pythonhosted.org/packages/12/4f/34fa5b748fd18239a92f0ba1a462181ee34077d5843e57fc9a672da3bbe9/yahooquery-2.2.2.tar.gz", "yanked": false}], "2.2.3": [{"comment_text": "", "digests": {"md5": "5241ee2eb50046df265fd2c715068acc", "sha256": "fc13df88a0e8d4649768e4fe51b09626f8387f72c9ce73dd80d995297febe9bc"}, "downloads": -1, "filename": "yahooquery-2.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5241ee2eb50046df265fd2c715068acc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44541, "upload_time": "2020-05-06T21:37:53", "upload_time_iso_8601": "2020-05-06T21:37:53.571026Z", "url": "https://files.pythonhosted.org/packages/38/2b/a4d4cb2a5a23d082e047f49587538e0e84032460a54fae2107abdabc0f7e/yahooquery-2.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf88e36ebc22831dd289d105fb4b4fee", "sha256": "680a5beb6c4027e5b9804852383540db4af70afdc98dfb4652d02d4fe67dd94b"}, "downloads": -1, "filename": "yahooquery-2.2.3.tar.gz", "has_sig": false, "md5_digest": "bf88e36ebc22831dd289d105fb4b4fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48935, "upload_time": "2020-05-06T21:37:55", "upload_time_iso_8601": "2020-05-06T21:37:55.655766Z", "url": "https://files.pythonhosted.org/packages/ee/a1/919c52c37202de131608e9ae4ae0e5d4418bea8d190db4c2287a99b42c18/yahooquery-2.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5241ee2eb50046df265fd2c715068acc", "sha256": "fc13df88a0e8d4649768e4fe51b09626f8387f72c9ce73dd80d995297febe9bc"}, "downloads": -1, "filename": "yahooquery-2.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "5241ee2eb50046df265fd2c715068acc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 44541, "upload_time": "2020-05-06T21:37:53", "upload_time_iso_8601": "2020-05-06T21:37:53.571026Z", "url": "https://files.pythonhosted.org/packages/38/2b/a4d4cb2a5a23d082e047f49587538e0e84032460a54fae2107abdabc0f7e/yahooquery-2.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf88e36ebc22831dd289d105fb4b4fee", "sha256": "680a5beb6c4027e5b9804852383540db4af70afdc98dfb4652d02d4fe67dd94b"}, "downloads": -1, "filename": "yahooquery-2.2.3.tar.gz", "has_sig": false, "md5_digest": "bf88e36ebc22831dd289d105fb4b4fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48935, "upload_time": "2020-05-06T21:37:55", "upload_time_iso_8601": "2020-05-06T21:37:55.655766Z", "url": "https://files.pythonhosted.org/packages/ee/a1/919c52c37202de131608e9ae4ae0e5d4418bea8d190db4c2287a99b42c18/yahooquery-2.2.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:23:34 2020"}