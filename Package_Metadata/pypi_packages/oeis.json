{"info": {"author": "Julien Palard", "author_email": "julien@palard.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# OEIS\n\n## Project\n\nThis project is the implementation of a few sequences from the [OEIS](https://oeis.org).\n\n\n## Usage\n\nTo install it, run: `pip install oeis`.\n\n\n### CLI usage\n\n`oeis` can be used from command line as:\n\n```bash\n$ oeis --help\nusage: oeis [-h] [--list] [--start START] [--stop STOP] [--plot] [--random] [--file] [--dark-plot] [sequence]\n\nPrint a sweet sequence\n\npositional arguments:\n  sequence       Define the sequence to run (e.g.: A181391)\n\noptional arguments:\n  -h, --help     show this help message and exit\n  --list         List implemented series\n  --start START  Define the starting point of the sequence.\n  --stop STOP    End point of the sequence (excluded).\n  --plot         Print a sweet sweet sweet graph\n  --random       Pick a random sequence\n  --file         Generates a png of the sequence's plot\n  --dark-plot    Print a dark dark dark graph\n```\n\nNeed a specific sequence?\n\n```bash\n$ oeis A000108\n# A000108\n\nCatalan numbers: C(n) = binomial(2n,n)/(n+1) = (2n)!/(n!(n+1)!).\n    Also called Segner numbers.\n\n[1, 1, 2, 5, 14, 42, 132, 429, 1430, 4862, 16796, 58786, 208012, 742900, 2674440, 9694845, 35357670, 129644790, 477638700, 1767263190]\n```\n\nLazy? Pick one by random:\n\n```\n$ oeis --random\n# A000045\n\nFibonacci numbers: F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1.\n\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]\n```\n\nWant to see something cool?\n\n```\n$ oeis A133058 --plot --stop 1200\n```\n\n![A133058 plotted](https://mdk.fr/A133058.png)\n\n\n### Library usage\n\nThe `oeis` module expose sequences as Python Sequences:\n\n```python3\n>>> from oeis import A000045\n>>> print(*A000045[:10], sep=\", \")\n1, 1, 2, 3, 5, 8, 13, 21, 34, 55\n>>> A000045[0] == A000045[1]\nTrue\n>>> A000045[100:101]\n[573147844013817084101]\n```\n\n\n## Contributing\n\nWe are using the [black]((https://github.com/psf/black) coding style,\nand `tox` to run some tests, so after creating a `venv`, installing\ndev requirements via `pip install requirements-dev.txt`, run `tox` or\n`tox -p auto` (parallel), it should look like this:\n\n```\n$ tox -p auto\n\u2714 OK mypy in 11.807 seconds\n\u2714 OK flake8 in 12.024 seconds\n\u2714 OK black in 12.302 seconds\n\u2714 OK py36 in 13.776 seconds\n\u2714 OK py37 in 15.344 seconds\n\u2714 OK py38 in 21.041 seconds\n______________________________________ summary ________________________________________\n  py36: commands succeeded\n  py37: commands succeeded\n  py38: commands succeeded\n  flake8: commands succeeded\n  mypy: commands succeeded\n  black: commands succeeded\n  congratulations :)\n```\n\n\n", "description_content_type": "text/markdown; charset=UTF-8", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JulienPalard/oeis", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "oeis", "package_url": "https://pypi.org/project/oeis/", "platform": "", "project_url": "https://pypi.org/project/oeis/", "project_urls": {"Homepage": "https://github.com/JulienPalard/oeis"}, "release_url": "https://pypi.org/project/oeis/2020.1.20/", "requires_dist": ["matplotlib", "sympy"], "requires_python": ">=3.6", "summary": "Implementation of a few integer sequences from the OEIS.", "version": "2020.1.20", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>OEIS</h1>\n<h2>Project</h2>\n<p>This project is the implementation of a few sequences from the <a href=\"https://oeis.org\" rel=\"nofollow\">OEIS</a>.</p>\n<h2>Usage</h2>\n<p>To install it, run: <code>pip install oeis</code>.</p>\n<h3>CLI usage</h3>\n<p><code>oeis</code> can be used from command line as:</p>\n<pre>$ oeis --help\nusage: oeis <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--list<span class=\"o\">]</span> <span class=\"o\">[</span>--start START<span class=\"o\">]</span> <span class=\"o\">[</span>--stop STOP<span class=\"o\">]</span> <span class=\"o\">[</span>--plot<span class=\"o\">]</span> <span class=\"o\">[</span>--random<span class=\"o\">]</span> <span class=\"o\">[</span>--file<span class=\"o\">]</span> <span class=\"o\">[</span>--dark-plot<span class=\"o\">]</span> <span class=\"o\">[</span>sequence<span class=\"o\">]</span>\n\nPrint a sweet sequence\n\npositional arguments:\n  sequence       Define the sequence to run <span class=\"o\">(</span>e.g.: A181391<span class=\"o\">)</span>\n\noptional arguments:\n  -h, --help     show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --list         List implemented series\n  --start START  Define the starting point of the sequence.\n  --stop STOP    End point of the sequence <span class=\"o\">(</span>excluded<span class=\"o\">)</span>.\n  --plot         Print a sweet sweet sweet graph\n  --random       Pick a random sequence\n  --file         Generates a png of the sequence<span class=\"err\">'</span>s plot\n  --dark-plot    Print a dark dark dark graph\n</pre>\n<p>Need a specific sequence?</p>\n<pre>$ oeis A000108\n<span class=\"c1\"># A000108</span>\n\nCatalan numbers: C<span class=\"o\">(</span>n<span class=\"o\">)</span> <span class=\"o\">=</span> binomial<span class=\"o\">(</span>2n,n<span class=\"o\">)</span>/<span class=\"o\">(</span>n+1<span class=\"o\">)</span> <span class=\"o\">=</span> <span class=\"o\">(</span>2n<span class=\"o\">)</span>!/<span class=\"o\">(</span>n!<span class=\"o\">(</span>n+1<span class=\"o\">)</span>!<span class=\"o\">)</span>.\n    Also called Segner numbers.\n\n<span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">1</span>, <span class=\"m\">2</span>, <span class=\"m\">5</span>, <span class=\"m\">14</span>, <span class=\"m\">42</span>, <span class=\"m\">132</span>, <span class=\"m\">429</span>, <span class=\"m\">1430</span>, <span class=\"m\">4862</span>, <span class=\"m\">16796</span>, <span class=\"m\">58786</span>, <span class=\"m\">208012</span>, <span class=\"m\">742900</span>, <span class=\"m\">2674440</span>, <span class=\"m\">9694845</span>, <span class=\"m\">35357670</span>, <span class=\"m\">129644790</span>, <span class=\"m\">477638700</span>, <span class=\"m\">1767263190</span><span class=\"o\">]</span>\n</pre>\n<p>Lazy? Pick one by random:</p>\n<pre><code>$ oeis --random\n# A000045\n\nFibonacci numbers: F(n) = F(n-1) + F(n-2) with F(0) = 0 and F(1) = 1.\n\n[0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181]\n</code></pre>\n<p>Want to see something cool?</p>\n<pre><code>$ oeis A133058 --plot --stop 1200\n</code></pre>\n<p><img alt=\"A133058 plotted\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2ee9bea603a7c7f0bd228f0cd9439bcb58dcb78/68747470733a2f2f6d646b2e66722f413133333035382e706e67\"></p>\n<h3>Library usage</h3>\n<p>The <code>oeis</code> module expose sequences as Python Sequences:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">oeis</span> <span class=\"kn\">import</span> <span class=\"n\">A000045</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">A000045</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">],</span> <span class=\"n\">sep</span><span class=\"o\">=</span><span class=\"s2\">\", \"</span><span class=\"p\">)</span>\n<span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">,</span> <span class=\"mi\">55</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A000045</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">A000045</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">A000045</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">:</span><span class=\"mi\">101</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"mi\">573147844013817084101</span><span class=\"p\">]</span>\n</pre>\n<h2>Contributing</h2>\n<p>We are using the [black]((<a href=\"https://github.com/psf/black\" rel=\"nofollow\">https://github.com/psf/black</a>) coding style,\nand <code>tox</code> to run some tests, so after creating a <code>venv</code>, installing\ndev requirements via <code>pip install requirements-dev.txt</code>, run <code>tox</code> or\n<code>tox -p auto</code> (parallel), it should look like this:</p>\n<pre><code>$ tox -p auto\n\u2714 OK mypy in 11.807 seconds\n\u2714 OK flake8 in 12.024 seconds\n\u2714 OK black in 12.302 seconds\n\u2714 OK py36 in 13.776 seconds\n\u2714 OK py37 in 15.344 seconds\n\u2714 OK py38 in 21.041 seconds\n______________________________________ summary ________________________________________\n  py36: commands succeeded\n  py37: commands succeeded\n  py38: commands succeeded\n  flake8: commands succeeded\n  mypy: commands succeeded\n  black: commands succeeded\n  congratulations :)\n</code></pre>\n\n          </div>"}, "last_serial": 6490430, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bced35e6dcba7330e6dda7efa9aa009e", "sha256": "b315ec73ccd7a0f266ec316313afaf1e6181c3361497838c95c36bf253269134"}, "downloads": -1, "filename": "oeis-0.1.tar.gz", "has_sig": false, "md5_digest": "bced35e6dcba7330e6dda7efa9aa009e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 946, "upload_time": "2013-11-04T19:30:19", "upload_time_iso_8601": "2013-11-04T19:30:19.722412Z", "url": "https://files.pythonhosted.org/packages/47/34/89c45b504b337da315803deb1c48745a2051f5d800e84f73deead09e2c43/oeis-0.1.tar.gz", "yanked": false}], "2020.1.20": [{"comment_text": "", "digests": {"md5": "939be2c2026eea649deb23dee9711884", "sha256": "09368942fe1c61e90f29e5020ee43f6dc0fb54d5db5d67160d5f04e261f7f3ff"}, "downloads": -1, "filename": "oeis-2020.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "939be2c2026eea649deb23dee9711884", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8347, "upload_time": "2020-01-20T21:53:27", "upload_time_iso_8601": "2020-01-20T21:53:27.448128Z", "url": "https://files.pythonhosted.org/packages/c7/f6/e18ac3de90ed4bba09a22ed2721694294b9aaebb371c0762a7869b90efb9/oeis-2020.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b6e0e6010110b2eb1c2ae85cf529758", "sha256": "1f565575b624018d354b71bd0f55ba99ff42ee9a876c5386fe6800aa0c0f0959"}, "downloads": -1, "filename": "oeis-2020.1.20.tar.gz", "has_sig": false, "md5_digest": "8b6e0e6010110b2eb1c2ae85cf529758", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7126, "upload_time": "2020-01-20T21:53:28", "upload_time_iso_8601": "2020-01-20T21:53:28.768530Z", "url": "https://files.pythonhosted.org/packages/a2/3b/bdefab35890d4836ba2bfdd10b6d493aaadb6fa67978e965702470b7e5e8/oeis-2020.1.20.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "939be2c2026eea649deb23dee9711884", "sha256": "09368942fe1c61e90f29e5020ee43f6dc0fb54d5db5d67160d5f04e261f7f3ff"}, "downloads": -1, "filename": "oeis-2020.1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "939be2c2026eea649deb23dee9711884", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8347, "upload_time": "2020-01-20T21:53:27", "upload_time_iso_8601": "2020-01-20T21:53:27.448128Z", "url": "https://files.pythonhosted.org/packages/c7/f6/e18ac3de90ed4bba09a22ed2721694294b9aaebb371c0762a7869b90efb9/oeis-2020.1.20-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8b6e0e6010110b2eb1c2ae85cf529758", "sha256": "1f565575b624018d354b71bd0f55ba99ff42ee9a876c5386fe6800aa0c0f0959"}, "downloads": -1, "filename": "oeis-2020.1.20.tar.gz", "has_sig": false, "md5_digest": "8b6e0e6010110b2eb1c2ae85cf529758", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7126, "upload_time": "2020-01-20T21:53:28", "upload_time_iso_8601": "2020-01-20T21:53:28.768530Z", "url": "https://files.pythonhosted.org/packages/a2/3b/bdefab35890d4836ba2bfdd10b6d493aaadb6fa67978e965702470b7e5e8/oeis-2020.1.20.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:01 2020"}