{"info": {"author": "Chie Hayashida", "author_email": "chie-hayashida@cookpad.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Software Development :: User Interfaces"], "description": "# easy_notifier\n\n\ntruly easily notify your process information when it finished\n\n## Description\n\n* Easy_notifier is a decorator that supports time-consuming, trial-and-error integrations.\n* It can tell the start time, finish time, status, and return value when your process finished.\n* It can tell your process end with slack, e-mail, or mac pop-up.\n* Usage is very easy. only write `@easy_notifier` on your method.\n\nJapanese document is [here](http://chie8842.hatenablog.com/entry/2018/01/21/152626).\n\n## Installation\n\n`pip install easy_notifier` or build from source.\n\n```\ngit clone https://github.com/chie8842/easy_notifier\ncd easy_notifier\npip install . -r requirements.txt\n```\n\n## Usage\n\nOnly three steps to use easy-notifier.\n\n1. put config.ini at your current directory\n2. write `@easy_notifier` on the method at your python script\n3. execute your python script\n\n```\n@easy_notifier\ndef example_func()\n   ...\n   ...\n\n```\n\nYou can use another file name with args as below.\n\n```\n@easy_notifier(~/.easy_notifier.cfg)\ndef example_func()\n   ...\n   ...\n\n```\n\n## Configurations\n\nPut configuration file and set according to [config.ini.sample](https://github.com/chie8842/easy_notifier/blob/master/easy_notifier/config.ini.sample) \n\nExplaination for each parameter is below.\n\n* env  \nyou can set ec2 or gce or local.\nIf you set ec2, `Name` tag is used for instance_name at notification.\nElse if you set local, `hostname` is used for instance_name at notification.\ngce is not integrated now. \n\n* process_name  \nYou can set any string which explain your process.\nIf you don't set this parameter, `func.__name__` will used as the process_name.\n\n* notify_slack  \nNotify slack when this parameter is true/yes.\n\n* notify_mac  \nNotify mac pop-up when this parameter is true/yes.\nThis parameter is ignored on Linux and Windows.\n\n* notify_gmail  \nNotify from your gmail address to any other email address.\nIt is needed to go to this link and select Turn On when you first use with your gmail account.  \nhttps://www.google.com/settings/security/lesssecureapps\n\n* incoming_webhook  \nSet your incoming webhook of Slack here whe you set notify_slack on.\n\n* slack_id  \nSpecify slack_id to mention when you set notify_slack on.\n\n* channel  \nSet the channel for notification when you set notify_slack on.\n\n* from_address  \nSet your gmail address when you set notify_gmail on.\n\n* from_password  \nSet your gmail password when you set notify_gmail on.\n\n* to_address  \nSet any email address to notify when you set notify_gmail on\n\nHere is example of config file.\n\n```\n[easy_notifier]\nenv = ec2\nincomming_webhook_url = https://hooks.slack.com/services/aaa/bbb\nslack_id = chie-hayashida\nprocess_name = test\nchannel = chie_test\n```\n\n## Notification Result Sample\n![Slack succeeded](img/notify_slack_succeeded.png)\n![Slack failed](img/notify_slack_failed.png)\n![Gmail succeeded](img/notify_gmail_succeeded.png)\n![mac pop-up](img/notify_mac_popup_succeeded.png)", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chie8842/easy_notifier", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "easy-notifier", "package_url": "https://pypi.org/project/easy-notifier/", "platform": "", "project_url": "https://pypi.org/project/easy-notifier/", "project_urls": {"Homepage": "https://github.com/chie8842/easy_notifier"}, "release_url": "https://pypi.org/project/easy-notifier/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Notify when your process finished", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            # easy_notifier<br><br><br>truly easily notify your process information when it finished<br><br>## Description<br><br>* Easy_notifier is a decorator that supports time-consuming, trial-and-error integrations.<br>* It can tell the start time, finish time, status, and return value when your process finished.<br>* It can tell your process end with slack, e-mail, or mac pop-up.<br>* Usage is very easy. only write `@easy_notifier` on your method.<br><br>Japanese document is [here](http://chie8842.hatenablog.com/entry/2018/01/21/152626).<br><br>## Installation<br><br>`pip install easy_notifier` or build from source.<br><br>```<br>git clone https://github.com/chie8842/easy_notifier<br>cd easy_notifier<br>pip install . -r requirements.txt<br>```<br><br>## Usage<br><br>Only three steps to use easy-notifier.<br><br>1. put config.ini at your current directory<br>2. write `@easy_notifier` on the method at your python script<br>3. execute your python script<br><br>```<br>@easy_notifier<br>def example_func()<br>   ...<br>   ...<br><br>```<br><br>You can use another file name with args as below.<br><br>```<br>@easy_notifier(~/.easy_notifier.cfg)<br>def example_func()<br>   ...<br>   ...<br><br>```<br><br>## Configurations<br><br>Put configuration file and set according to [config.ini.sample](https://github.com/chie8842/easy_notifier/blob/master/easy_notifier/config.ini.sample) <br><br>Explaination for each parameter is below.<br><br>* env  <br>you can set ec2 or gce or local.<br>If you set ec2, `Name` tag is used for instance_name at notification.<br>Else if you set local, `hostname` is used for instance_name at notification.<br>gce is not integrated now. <br><br>* process_name  <br>You can set any string which explain your process.<br>If you don't set this parameter, `func.__name__` will used as the process_name.<br><br>* notify_slack  <br>Notify slack when this parameter is true/yes.<br><br>* notify_mac  <br>Notify mac pop-up when this parameter is true/yes.<br>This parameter is ignored on Linux and Windows.<br><br>* notify_gmail  <br>Notify from your gmail address to any other email address.<br>It is needed to go to this link and select Turn On when you first use with your gmail account.  <br>https://www.google.com/settings/security/lesssecureapps<br><br>* incoming_webhook  <br>Set your incoming webhook of Slack here whe you set notify_slack on.<br><br>* slack_id  <br>Specify slack_id to mention when you set notify_slack on.<br><br>* channel  <br>Set the channel for notification when you set notify_slack on.<br><br>* from_address  <br>Set your gmail address when you set notify_gmail on.<br><br>* from_password  <br>Set your gmail password when you set notify_gmail on.<br><br>* to_address  <br>Set any email address to notify when you set notify_gmail on<br><br>Here is example of config file.<br><br>```<br>[easy_notifier]<br>env = ec2<br>incomming_webhook_url = https://hooks.slack.com/services/aaa/bbb<br>slack_id = chie-hayashida<br>process_name = test<br>channel = chie_test<br>```<br><br>## Notification Result Sample<br>![Slack succeeded](img/notify_slack_succeeded.png)<br>![Slack failed](img/notify_slack_failed.png)<br>![Gmail succeeded](img/notify_gmail_succeeded.png)<br>![mac pop-up](img/notify_mac_popup_succeeded.png)\n          </div>"}, "last_serial": 3719328, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "885ccffcd4d45c9e3d63b316ded3d935", "sha256": "ff802c9526c31463aba3d4ae005b39bf29beb385f3a3b7bc0a7b73fb826d2397"}, "downloads": -1, "filename": "easy_notifier-0.1.1.tar.gz", "has_sig": false, "md5_digest": "885ccffcd4d45c9e3d63b316ded3d935", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5135, "upload_time": "2018-01-21T04:55:09", "upload_time_iso_8601": "2018-01-21T04:55:09.872233Z", "url": "https://files.pythonhosted.org/packages/94/04/32ef3c9b269e99492d5011731526632609e670844a5e244b7f2364e93768/easy_notifier-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0bebe1110abf9e0b1bcf30d774816a2c", "sha256": "826be2a8897781ce4ffd6a038ff030fd8e2e42b78624531cf21f554aac64cf70"}, "downloads": -1, "filename": "easy_notifier-0.1.2.tar.gz", "has_sig": false, "md5_digest": "0bebe1110abf9e0b1bcf30d774816a2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5209, "upload_time": "2018-01-21T05:08:21", "upload_time_iso_8601": "2018-01-21T05:08:21.264311Z", "url": "https://files.pythonhosted.org/packages/5b/41/db86b0bf24f6a02688f3fc52cddfd0befea4c5a162eb633265bf7868f268/easy_notifier-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "7be581283232d3fa1c04f259f208e97a", "sha256": "342fbb27010b371dbc1c3972649b671bebb15856f2d3ffbd1bd2a6ae0115f7a2"}, "downloads": -1, "filename": "easy_notifier-0.1.3.tar.gz", "has_sig": false, "md5_digest": "7be581283232d3fa1c04f259f208e97a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5310, "upload_time": "2018-01-29T10:18:25", "upload_time_iso_8601": "2018-01-29T10:18:25.543932Z", "url": "https://files.pythonhosted.org/packages/c7/f1/d7a4d339421cf69e81e4f38248fe4f972cf4d151cf9d8204ace2cf23be40/easy_notifier-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "e5c1e1bdb67e2f9a85b1d2bc12f12287", "sha256": "b960c13d33a59c98cb1bb65e25bc444956f6bbae32dfb0ce929930b0189ba7d2"}, "downloads": -1, "filename": "easy_notifier-0.1.4.tar.gz", "has_sig": false, "md5_digest": "e5c1e1bdb67e2f9a85b1d2bc12f12287", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5276, "upload_time": "2018-01-30T02:25:50", "upload_time_iso_8601": "2018-01-30T02:25:50.268893Z", "url": "https://files.pythonhosted.org/packages/b0/b8/6de001fc4f52e78e7943eb1ff088f20b1063f86403b7fe0fc3f99f906db0/easy_notifier-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "3b8c79e9c9101c637aa07f58af367e7a", "sha256": "ad79bdfd0a8b401630e47e98cb6043e235d5a295f25b38cd5a95b1c5a809b0d9"}, "downloads": -1, "filename": "easy_notifier-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3b8c79e9c9101c637aa07f58af367e7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5333, "upload_time": "2018-03-30T09:37:07", "upload_time_iso_8601": "2018-03-30T09:37:07.390157Z", "url": "https://files.pythonhosted.org/packages/ed/24/8b42d4276e433830c843c43e3fcbb5e9243d4ebc5db0ffded571a212f299/easy_notifier-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b8c79e9c9101c637aa07f58af367e7a", "sha256": "ad79bdfd0a8b401630e47e98cb6043e235d5a295f25b38cd5a95b1c5a809b0d9"}, "downloads": -1, "filename": "easy_notifier-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3b8c79e9c9101c637aa07f58af367e7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5333, "upload_time": "2018-03-30T09:37:07", "upload_time_iso_8601": "2018-03-30T09:37:07.390157Z", "url": "https://files.pythonhosted.org/packages/ed/24/8b42d4276e433830c843c43e3fcbb5e9243d4ebc5db0ffded571a212f299/easy_notifier-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:18 2020"}