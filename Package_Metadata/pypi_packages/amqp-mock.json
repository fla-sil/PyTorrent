{"info": {"author": "Nikita Tsvetkov", "author_email": "nikitanovosibirsk@yandex.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# AMQP Mock\n\n[![License](https://img.shields.io/github/license/nikitanovosibirsk/amqp-mock.svg)](https://github.com/nikitanovosibirsk/amqp-mock)\n[![Codecov](https://img.shields.io/codecov/c/github/nikitanovosibirsk/amqp-mock/master.svg)](https://codecov.io/gh/nikitanovosibirsk/amqp-mock)\n[![PyPI](https://img.shields.io/pypi/v/amqp-mock.svg)](https://pypi.python.org/pypi/amqp-mock/)\n[![Python Version](https://img.shields.io/pypi/pyversions/amqp-mock.svg)](https://pypi.python.org/pypi/amqp-mock/)\n\n* [Installation](#installation)\n* [Overview](#overview)\n  * [Test Publishing](#test-publishing)\n  * [Test Consuming](#test-consuming)\n* [Mock Server](#mock-server)\n  * [Publish message](#publish-message)\n  * [Get queue message history](#get-queue-message-history)\n  * [Get exchange messages](#get-exchange-messages)\n  * [Delete exchange messages](#delete-exchange-messages)\n  * [Reset](#reset)\n\n## Installation\n\n```sh\npip3 install amqp-mock\n```\n\n## Overview\n\n### Test Publishing\n\n```python\nfrom amqp_mock import create_amqp_mock\n\n# 1. Start AMQP mock server\nasync with create_amqp_mock() as mock:\n    # 2. Publish message via \"system under test\"\n    publish_message([1, 2, 3], \"exchange\")\n\n    # 3. Test message has been published\n    history = await mock.client.get_exchange_messages(\"exchange\")\n    assert history[0].value == [1, 2, 3]\n```\n\nFull code available here: [`./examples/publish_example.py`](https://github.com/nikitanovosibirsk/amqp-mock/blob/master/examples/publish_example.py)\n\n### Test Consuming\n\n```python\nfrom amqp_mock import create_amqp_mock, Message, MessageStatus\n\n# 1. Start AMQP mock server\nasync with create_amqp_mock() as mock:\n    # 2. Mock next message\n    await mock.client.publish_message(\"queue\", Message([1, 2, 3]))\n\n    # 3. Consume message via \"system under test\"\n    consume_message(\"queue\")\n\n    # 4. Test message has been consumed\n    history = await mock.client.get_queue_message_history(\"queue\")\n    assert history[0].status == MessageStatus.ACKED\n```\n\nFull code available here: [`./examples/consume_example.py`](https://github.com/nikitanovosibirsk/amqp-mock/blob/master/examples/consume_example.py)\n\n## Mock Server\n\n### Publish message\n\n`POST /queues/{queue}/messages`\n\n```json\n{\n    \"id\": \"9e342ac1-eef6-40b1-9eaf-053ee7887968\",\n    \"value\": [1, 2, 3],\n    \"exchange\": \"\",\n    \"routing_key\": \"\",\n    \"properties\": null\n}\n```\n\n<details><summary>HTTP</summary>\n<p>\n\n```sh\n$ http POST localhost/queues/test_queue/messages \\\n    value:='[1, 2, 3]' \\\n    exchange=test_exchange\n\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\n```\n\n</p>\n</details>\n\n<details><summary>Python</summary>\n<p>\n\n```python\nfrom amqp_mock import AmqpMockClient\n\nmock_client = AmqpMockClient()\nmessage = Message([1, 2, 3], exchange=\"test_exchange\")\nawait mock_client.publish_message(\"test_queue\", message)\n```\n\n</p>\n</details>\n\n### Get queue message history\n\n`GET /queues/{queue}/messages/history`\n\n<details><summary>HTTP</summary>\n<p>\n\n```sh\n$ http GET localhost/queues/test_queue/messages/history\n\nHTTP/1.1 200 OK\nContent-Length: 190\nContent-Type: application/json; charset=utf-8\n\n[\n    {\n        \"message\": {\n            \"exchange\": \"test_exchange\",\n            \"id\": \"94459a41-9119-479a-98c9-80bc9dabb719\",\n            \"properties\": null,\n            \"routing_key\": \"\",\n            \"value\": [1, 2, 3]\n        },\n        \"queue\": \"test_queue\",\n        \"status\": \"ACKED\"\n    }\n]\n```\n\n</p>\n</details>\n\n<details><summary>Python</summary>\n<p>\n\n```python\nfrom amqp_mock import AmqpMockClient\n\nmock_client = AmqpMockClient()\nawait mock_client.get_queue_message_history(\"test_queue\")\n# [\n#   <QueuedMessage message=<Message value=[1, 2, 3], exchange='test_exchange', routing_key=''>,\n#                  queue='test_queue',\n#                  status=MessageStatus.ACKED>\n# ]\n```\n\n</p>\n</details>\n\n### Get exchange messages\n\n`GET /exchanges/{exchange}/messages`\n\n<details><summary>HTTP</summary>\n<p>\n\n```sh\n$ http GET localhost/exchanges/test_exchange/messages\n\nHTTP/1.1 200 OK\nContent-Length: 423\nContent-Type: application/json; charset=utf-8\n\n[\n    {\n        \"exchange\": \"test_exchange\",\n        \"id\": \"63fd1646-bdc1-4baa-9780-e337a9ab109c\",\n        \"properties\": {\n            \"app_id\": \"\",\n            \"cluster_id\": \"\",\n            \"content_encoding\": \"\",\n            \"content_type\": \"\",\n            \"correlation_id\": \"\",\n            \"delivery_mode\": 1,\n            \"expiration\": \"\",\n            \"headers\": null,\n            \"message_id\": \"5ec9024c74eca2e419fd7e29f7be846c\",\n            \"message_type\": \"\",\n            \"priority\": null,\n            \"reply_to\": \"\",\n            \"timestamp\": null,\n            \"user_id\": \"\"\n        },\n        \"routing_key\": \"\",\n        \"value\": [1, 2, 3]\n    }\n]\n```\n\n</p>\n</details>\n\n<details><summary>Python</summary>\n<p>\n\n```python\nfrom amqp_mock import AmqpMockClient\n\nmock_client = AmqpMockClient()\nmessages = await mock_client.get_exchange_messages(\"test_exchange\")\n# [\n#   <Message value=[1, 2, 3], exchange='test_exchange', routing_key=''>\n# ]\n```\n\n</p>\n</details>\n\n### Delete exchange messages\n\n`DELETE /exchanges/{exchange}/messages`\n\n<details><summary>HTTP</summary>\n<p>\n\n```sh\n$ http DELETE localhost/exchanges/test_exchange/messages\n\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\n```\n\n</p>\n</details>\n\n<details><summary>Python</summary>\n<p>\n\n```python\nfrom amqp_mock import AmqpMockClient\n\nmock_client = AmqpMockClient()\nawait mock_client.delete_exchange_messages(\"test_exchange\")\n```\n\n</p>\n</details>\n\n### Reset\n\n`DELETE /`\n\n<details><summary>HTTP</summary>\n<p>\n\n```sh\n$ http DELETE localhost/\n\nHTTP/1.1 200 OK\nContent-Length: 0\nContent-Type: application/json\n```\n\n</p>\n</details>\n\n<details><summary>Python</summary>\n<p>\n\n```python\nfrom amqp_mock import AmqpMockClient\n\nmock_client = AmqpMockClient()\nawait mock_client.reset()\n```\n\n</p>\n</details>\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nikitanovosibirsk/amqp-mock", "keywords": "", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "amqp-mock", "package_url": "https://pypi.org/project/amqp-mock/", "platform": "", "project_url": "https://pypi.org/project/amqp-mock/", "project_urls": {"Homepage": "https://github.com/nikitanovosibirsk/amqp-mock"}, "release_url": "https://pypi.org/project/amqp-mock/0.1.1/", "requires_dist": ["aiohttp (<4.0,>=3.5)", "pamqp (<3.0,>=2.3)"], "requires_python": ">=3.7.0", "summary": "Remote AMQP mock", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AMQP Mock</h1>\n<p><a href=\"https://github.com/nikitanovosibirsk/amqp-mock\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08835965f5a3b6a1329a815ef387c67607e86901/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6e696b6974616e6f766f7369626972736b2f616d71702d6d6f636b2e737667\"></a>\n<a href=\"https://codecov.io/gh/nikitanovosibirsk/amqp-mock\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/26f86b3cef6c2ecf852fabe59152a133c903c889/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f6e696b6974616e6f766f7369626972736b2f616d71702d6d6f636b2f6d61737465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/amqp-mock/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2009e77d083b5b1fa944ec5177d20e1158dcfad/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616d71702d6d6f636b2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/amqp-mock/\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed313fc95b3569f25443cd5f030f336cf2477844/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616d71702d6d6f636b2e737667\"></a></p>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#overview\" rel=\"nofollow\">Overview</a>\n<ul>\n<li><a href=\"#test-publishing\" rel=\"nofollow\">Test Publishing</a></li>\n<li><a href=\"#test-consuming\" rel=\"nofollow\">Test Consuming</a></li>\n</ul>\n</li>\n<li><a href=\"#mock-server\" rel=\"nofollow\">Mock Server</a>\n<ul>\n<li><a href=\"#publish-message\" rel=\"nofollow\">Publish message</a></li>\n<li><a href=\"#get-queue-message-history\" rel=\"nofollow\">Get queue message history</a></li>\n<li><a href=\"#get-exchange-messages\" rel=\"nofollow\">Get exchange messages</a></li>\n<li><a href=\"#delete-exchange-messages\" rel=\"nofollow\">Delete exchange messages</a></li>\n<li><a href=\"#reset\" rel=\"nofollow\">Reset</a></li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<pre>pip3 install amqp-mock\n</pre>\n<h2>Overview</h2>\n<h3>Test Publishing</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">create_amqp_mock</span>\n\n<span class=\"c1\"># 1. Start AMQP mock server</span>\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">create_amqp_mock</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">mock</span><span class=\"p\">:</span>\n    <span class=\"c1\"># 2. Publish message via \"system under test\"</span>\n    <span class=\"n\">publish_message</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"s2\">\"exchange\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 3. Test message has been published</span>\n    <span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_exchange_messages</span><span class=\"p\">(</span><span class=\"s2\">\"exchange\"</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">history</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n</pre>\n<p>Full code available here: <a href=\"https://github.com/nikitanovosibirsk/amqp-mock/blob/master/examples/publish_example.py\" rel=\"nofollow\"><code>./examples/publish_example.py</code></a></p>\n<h3>Test Consuming</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">create_amqp_mock</span><span class=\"p\">,</span> <span class=\"n\">Message</span><span class=\"p\">,</span> <span class=\"n\">MessageStatus</span>\n\n<span class=\"c1\"># 1. Start AMQP mock server</span>\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">create_amqp_mock</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">mock</span><span class=\"p\">:</span>\n    <span class=\"c1\"># 2. Mock next message</span>\n    <span class=\"k\">await</span> <span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">publish_message</span><span class=\"p\">(</span><span class=\"s2\">\"queue\"</span><span class=\"p\">,</span> <span class=\"n\">Message</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]))</span>\n\n    <span class=\"c1\"># 3. Consume message via \"system under test\"</span>\n    <span class=\"n\">consume_message</span><span class=\"p\">(</span><span class=\"s2\">\"queue\"</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># 4. Test message has been consumed</span>\n    <span class=\"n\">history</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">mock</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get_queue_message_history</span><span class=\"p\">(</span><span class=\"s2\">\"queue\"</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">history</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">status</span> <span class=\"o\">==</span> <span class=\"n\">MessageStatus</span><span class=\"o\">.</span><span class=\"n\">ACKED</span>\n</pre>\n<p>Full code available here: <a href=\"https://github.com/nikitanovosibirsk/amqp-mock/blob/master/examples/consume_example.py\" rel=\"nofollow\"><code>./examples/consume_example.py</code></a></p>\n<h2>Mock Server</h2>\n<h3>Publish message</h3>\n<p><code>POST /queues/{queue}/messages</code></p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"9e342ac1-eef6-40b1-9eaf-053ee7887968\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"value\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"exchange\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"routing_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"properties\"</span><span class=\"p\">:</span> <span class=\"kc\">null</span>\n<span class=\"p\">}</span>\n</pre>\n<details><summary>HTTP</summary>\n<p>\n</p><pre>$ http POST localhost/queues/test_queue/messages <span class=\"se\">\\</span>\n    value:<span class=\"o\">=</span><span class=\"s1\">'[1, 2, 3]'</span> <span class=\"se\">\\</span>\n    <span class=\"nv\">exchange</span><span class=\"o\">=</span>test_exchange\n\nHTTP/1.1 <span class=\"m\">200</span> OK\nContent-Length: <span class=\"m\">0</span>\nContent-Type: application/json\n</pre>\n<p></p>\n</details>\n<details><summary>Python</summary>\n<p>\n</p><pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">AmqpMockClient</span>\n\n<span class=\"n\">mock_client</span> <span class=\"o\">=</span> <span class=\"n\">AmqpMockClient</span><span class=\"p\">()</span>\n<span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">Message</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">exchange</span><span class=\"o\">=</span><span class=\"s2\">\"test_exchange\"</span><span class=\"p\">)</span>\n<span class=\"k\">await</span> <span class=\"n\">mock_client</span><span class=\"o\">.</span><span class=\"n\">publish_message</span><span class=\"p\">(</span><span class=\"s2\">\"test_queue\"</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<h3>Get queue message history</h3>\n<p><code>GET /queues/{queue}/messages/history</code></p>\n<details><summary>HTTP</summary>\n<p>\n</p><pre>$ http GET localhost/queues/test_queue/messages/history\n\nHTTP/1.1 <span class=\"m\">200</span> OK\nContent-Length: <span class=\"m\">190</span>\nContent-Type: application/json<span class=\"p\">;</span> <span class=\"nv\">charset</span><span class=\"o\">=</span>utf-8\n\n<span class=\"o\">[</span>\n    <span class=\"o\">{</span>\n        <span class=\"s2\">\"message\"</span>: <span class=\"o\">{</span>\n            <span class=\"s2\">\"exchange\"</span>: <span class=\"s2\">\"test_exchange\"</span>,\n            <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"94459a41-9119-479a-98c9-80bc9dabb719\"</span>,\n            <span class=\"s2\">\"properties\"</span>: null,\n            <span class=\"s2\">\"routing_key\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"value\"</span>: <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span>, <span class=\"m\">3</span><span class=\"o\">]</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"queue\"</span>: <span class=\"s2\">\"test_queue\"</span>,\n        <span class=\"s2\">\"status\"</span>: <span class=\"s2\">\"ACKED\"</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">]</span>\n</pre>\n<p></p>\n</details>\n<details><summary>Python</summary>\n<p>\n</p><pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">AmqpMockClient</span>\n\n<span class=\"n\">mock_client</span> <span class=\"o\">=</span> <span class=\"n\">AmqpMockClient</span><span class=\"p\">()</span>\n<span class=\"k\">await</span> <span class=\"n\">mock_client</span><span class=\"o\">.</span><span class=\"n\">get_queue_message_history</span><span class=\"p\">(</span><span class=\"s2\">\"test_queue\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># [</span>\n<span class=\"c1\">#   &lt;QueuedMessage message=&lt;Message value=[1, 2, 3], exchange='test_exchange', routing_key=''&gt;,</span>\n<span class=\"c1\">#                  queue='test_queue',</span>\n<span class=\"c1\">#                  status=MessageStatus.ACKED&gt;</span>\n<span class=\"c1\"># ]</span>\n</pre>\n<p></p>\n</details>\n<h3>Get exchange messages</h3>\n<p><code>GET /exchanges/{exchange}/messages</code></p>\n<details><summary>HTTP</summary>\n<p>\n</p><pre>$ http GET localhost/exchanges/test_exchange/messages\n\nHTTP/1.1 <span class=\"m\">200</span> OK\nContent-Length: <span class=\"m\">423</span>\nContent-Type: application/json<span class=\"p\">;</span> <span class=\"nv\">charset</span><span class=\"o\">=</span>utf-8\n\n<span class=\"o\">[</span>\n    <span class=\"o\">{</span>\n        <span class=\"s2\">\"exchange\"</span>: <span class=\"s2\">\"test_exchange\"</span>,\n        <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"63fd1646-bdc1-4baa-9780-e337a9ab109c\"</span>,\n        <span class=\"s2\">\"properties\"</span>: <span class=\"o\">{</span>\n            <span class=\"s2\">\"app_id\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"cluster_id\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"content_encoding\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"content_type\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"correlation_id\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"delivery_mode\"</span>: <span class=\"m\">1</span>,\n            <span class=\"s2\">\"expiration\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"headers\"</span>: null,\n            <span class=\"s2\">\"message_id\"</span>: <span class=\"s2\">\"5ec9024c74eca2e419fd7e29f7be846c\"</span>,\n            <span class=\"s2\">\"message_type\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"priority\"</span>: null,\n            <span class=\"s2\">\"reply_to\"</span>: <span class=\"s2\">\"\"</span>,\n            <span class=\"s2\">\"timestamp\"</span>: null,\n            <span class=\"s2\">\"user_id\"</span>: <span class=\"s2\">\"\"</span>\n        <span class=\"o\">}</span>,\n        <span class=\"s2\">\"routing_key\"</span>: <span class=\"s2\">\"\"</span>,\n        <span class=\"s2\">\"value\"</span>: <span class=\"o\">[</span><span class=\"m\">1</span>, <span class=\"m\">2</span>, <span class=\"m\">3</span><span class=\"o\">]</span>\n    <span class=\"o\">}</span>\n<span class=\"o\">]</span>\n</pre>\n<p></p>\n</details>\n<details><summary>Python</summary>\n<p>\n</p><pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">AmqpMockClient</span>\n\n<span class=\"n\">mock_client</span> <span class=\"o\">=</span> <span class=\"n\">AmqpMockClient</span><span class=\"p\">()</span>\n<span class=\"n\">messages</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">mock_client</span><span class=\"o\">.</span><span class=\"n\">get_exchange_messages</span><span class=\"p\">(</span><span class=\"s2\">\"test_exchange\"</span><span class=\"p\">)</span>\n<span class=\"c1\"># [</span>\n<span class=\"c1\">#   &lt;Message value=[1, 2, 3], exchange='test_exchange', routing_key=''&gt;</span>\n<span class=\"c1\"># ]</span>\n</pre>\n<p></p>\n</details>\n<h3>Delete exchange messages</h3>\n<p><code>DELETE /exchanges/{exchange}/messages</code></p>\n<details><summary>HTTP</summary>\n<p>\n</p><pre>$ http DELETE localhost/exchanges/test_exchange/messages\n\nHTTP/1.1 <span class=\"m\">200</span> OK\nContent-Length: <span class=\"m\">0</span>\nContent-Type: application/json\n</pre>\n<p></p>\n</details>\n<details><summary>Python</summary>\n<p>\n</p><pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">AmqpMockClient</span>\n\n<span class=\"n\">mock_client</span> <span class=\"o\">=</span> <span class=\"n\">AmqpMockClient</span><span class=\"p\">()</span>\n<span class=\"k\">await</span> <span class=\"n\">mock_client</span><span class=\"o\">.</span><span class=\"n\">delete_exchange_messages</span><span class=\"p\">(</span><span class=\"s2\">\"test_exchange\"</span><span class=\"p\">)</span>\n</pre>\n<p></p>\n</details>\n<h3>Reset</h3>\n<p><code>DELETE /</code></p>\n<details><summary>HTTP</summary>\n<p>\n</p><pre>$ http DELETE localhost/\n\nHTTP/1.1 <span class=\"m\">200</span> OK\nContent-Length: <span class=\"m\">0</span>\nContent-Type: application/json\n</pre>\n<p></p>\n</details>\n<details><summary>Python</summary>\n<p>\n</p><pre><span class=\"kn\">from</span> <span class=\"nn\">amqp_mock</span> <span class=\"kn\">import</span> <span class=\"n\">AmqpMockClient</span>\n\n<span class=\"n\">mock_client</span> <span class=\"o\">=</span> <span class=\"n\">AmqpMockClient</span><span class=\"p\">()</span>\n<span class=\"k\">await</span> <span class=\"n\">mock_client</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n</pre>\n<p></p>\n</details>\n\n          </div>"}, "last_serial": 7163460, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "318c057e27b4bd4bd0dc90ff7613cfa8", "sha256": "049b12daef82f454a14daaf021ee53ca54f689f9d1cf0722d7b82e2211a909bb"}, "downloads": -1, "filename": "amqp_mock-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "318c057e27b4bd4bd0dc90ff7613cfa8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 17611, "upload_time": "2020-05-03T15:49:53", "upload_time_iso_8601": "2020-05-03T15:49:53.301853Z", "url": "https://files.pythonhosted.org/packages/56/0d/e34ebd0ca09db60d17e438a4a0dcdd3b3f495c7f58b92d6c0b59ded2f715/amqp_mock-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93f36715557df5fb6ceb1fc9b816692f", "sha256": "1093c2418ba59a928b5cdc4056d834782fee48742517937d995a9adf93a40582"}, "downloads": -1, "filename": "amqp-mock-0.1.0.tar.gz", "has_sig": false, "md5_digest": "93f36715557df5fb6ceb1fc9b816692f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 9533, "upload_time": "2020-05-03T15:49:55", "upload_time_iso_8601": "2020-05-03T15:49:55.070304Z", "url": "https://files.pythonhosted.org/packages/21/b6/e1448b18e95c9933f0feeb6fcfbcc4096ff8e7867088d6afc55a716a1253/amqp-mock-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "23284d9fec8b254c84d3500d6b6a7a7e", "sha256": "b3b997e97a5242b06185e751d54814921f389eae3365bb09dc5fa5ad3c09a369"}, "downloads": -1, "filename": "amqp_mock-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23284d9fec8b254c84d3500d6b6a7a7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 19554, "upload_time": "2020-05-04T10:58:34", "upload_time_iso_8601": "2020-05-04T10:58:34.520119Z", "url": "https://files.pythonhosted.org/packages/9a/08/858cb0542df9320582ebddc5b7f597e6d1ed888ca76eb5aa3bd0d9fcc204/amqp_mock-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5add6fd1fe379f3e15d08bda0c011ffc", "sha256": "cdde401f0e885f9b17c78159dbbdcbcd1a43602a6c35526f5c0f37f7be6c2e2e"}, "downloads": -1, "filename": "amqp-mock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5add6fd1fe379f3e15d08bda0c011ffc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 13090, "upload_time": "2020-05-04T10:58:36", "upload_time_iso_8601": "2020-05-04T10:58:36.117697Z", "url": "https://files.pythonhosted.org/packages/68/da/b8c1c8d6408c692504c955a5e652887776f1d13ed7689f8b1252fffa6d7f/amqp-mock-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "23284d9fec8b254c84d3500d6b6a7a7e", "sha256": "b3b997e97a5242b06185e751d54814921f389eae3365bb09dc5fa5ad3c09a369"}, "downloads": -1, "filename": "amqp_mock-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "23284d9fec8b254c84d3500d6b6a7a7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 19554, "upload_time": "2020-05-04T10:58:34", "upload_time_iso_8601": "2020-05-04T10:58:34.520119Z", "url": "https://files.pythonhosted.org/packages/9a/08/858cb0542df9320582ebddc5b7f597e6d1ed888ca76eb5aa3bd0d9fcc204/amqp_mock-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5add6fd1fe379f3e15d08bda0c011ffc", "sha256": "cdde401f0e885f9b17c78159dbbdcbcd1a43602a6c35526f5c0f37f7be6c2e2e"}, "downloads": -1, "filename": "amqp-mock-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5add6fd1fe379f3e15d08bda0c011ffc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 13090, "upload_time": "2020-05-04T10:58:36", "upload_time_iso_8601": "2020-05-04T10:58:36.117697Z", "url": "https://files.pythonhosted.org/packages/68/da/b8c1c8d6408c692504c955a5e652887776f1d13ed7689f8b1252fffa6d7f/amqp-mock-0.1.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:19 2020"}