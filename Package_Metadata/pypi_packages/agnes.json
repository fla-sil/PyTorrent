{"info": {"author": "Rotinov Egor", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# AGNES - Flexible Reinforcement Learning Framework with PyTorch\n\n**Status:** This framework is under active development and bugs may occur.\n\n[![Build status](https://travis-ci.org/rotinov/AGNES.svg?branch=master)](https://travis-ci.org/rotinov/AGNES)\n![Upload Python Package](https://github.com/rotinov/AGNES/workflows/Upload%20Python%20Package/badge.svg?branch=master)\n\n## Results\n#### MuJoCo\n**(Current results)**\n[![The ending average is 5326.2](results/MuJoCo/reward_per_timestep.svg?raw=true&sanitize=true)](results/MuJoCo/Ant-v2_MLP)\n*MuJoCo \"Ant-v2\" training with 1M steps. **Single** runner with **PPO** algorithm, **MLP** NN and 32 number of envs. The curve is an average of 3 runs.*\n\n*You can get the Tensorboard log file by clicking the image above(You will be redirected to the destination GitHub folder). The default config for the MuJoCo environment was used. Plotted by **examples/plot.py***\n\n#### Atari\n**(Old results)**\n\n[![Peaking at 861.8 at the end. The ending average is 854.8.](results/Atari-BreakoutNoFrameskip-v4-PPO-10M/reward_per_update.svg?raw=true&sanitize=true)](results/Atari-BreakoutNoFrameskip-v4-PPO-10M)\n*Atari \"BreakoutNoFrameskip-v4\" with frame stack training with 10M steps. **DistributedMPI** runner with **PPO** algorithm, **LSTMCNN** and 16 number of envs.*\n\n*You can get the Tensorboard log file by clicking the image above(You will be redirected to the destination GitHub folder). The default config for the Atari environment was used.*\n\n![LSTMCNN agent plays Breakout](results/Atari-BreakoutNoFrameskip-v4-PPO-10M/Breakout-LSTMCNN.gif)\n\n*Grad-cam technique was used for sampled action chosen by trained LSTMCNN(previous point).*\n\n![LSTMCNN agent plays Breakout](results/Atari-BreakoutNoFrameskip-v4-PPO-10M/Breakout-LSTMCNN-Grad-Cam.gif)\n\n## Runners\n#### Single\n\nOne worker and trainer. **agnes.make_vec_env** can also be used here.\n\n```python\nimport agnes\nimport time\n\n\nif __name__ == '__main__':\n    env = agnes.make_env(\"InvertedDoublePendulum-v2\")\n    runner = agnes.Single(env, agnes.PPO, agnes.MLP)\n    runner.log(agnes.log, agnes.TensorboardLogger(\".logs/\"), agnes.CsvLogger(\".logs/\"))\n    runner.run()\n\n```\n\n**agnes.log** - object of **StandardLogger** class that outputs parameters to console.\n**agnes.TensorboardLogger** - class for writing logs in Tensorboard file.\n**agnes.CsvLogger** - class for writing logs in csv file. (required for plotting)\n\n\n#### DistributedMPI\n\nUnlike in **Single** runner, in **DistributedMPI** runner due to async executing, weights are delayed by one rollout but this has no effect on learning because weights are delayed only by one update as it is in **Single** runner. So all parameters like probabilities ratio stay the same.\n\nRuns with\n\n```bash\nmpiexec -n 3 python -m mpi4py script_name.py\nor\nmpirun -n 3 python -m mpi4py script_name.py\n```\nThis command will run 2 workers and 1 trainer.\n```python\n# script_name.py\nimport agnes\n\n\nif __name__ == '__main__':\n    env = agnes.make_vec_env(\"BreakoutNoFrameskip-v4\")\n    runner = agnes.DistributedMPI(env, agnes.PPO, agnes.CNN)\n    runner.run()\n\n```\n\n## Algorithms\n#### A2C\nSync version of Advantage Actor Critic is implemented in this framework and can be used simply:\n```python\nimport agnes\n\n\nif __name__ == '__main__':\n    runner = agnes.Single(env, agnes.A2C, agnes.MLP)\n    runner.run()\n\n```\n\n#### PPO\nProximal Policy Optimization is implemented in this framework and can be used simply:\n```python\nimport agnes\n\n\nif __name__ == '__main__':\n    runner = agnes.Single(env, agnes.PPO, agnes.MLP)\n    runner.run()\n\n```\n\n## Neural Network Architectures\n\n#### Multi Layer Perceptron\n\nCan be used with both continuous and discrete action spaces.\n```python\n...\nrunner = agnes.Single(env, agnes.PPO, agnes.MLP)\n...\n```\n\n#### Convolutional Neural Network\n\nCan be used only with discrete action spaces.\n```python\n...\nrunner = agnes.Single(env, agnes.PPO, agnes.CNN)\n...\n```\n\n#### Recurrent Neural Network\n\nCan be used with both continuous and discrete action spaces.\n```python\n...\nrunner = agnes.Single(env, agnes.PPO, agnes.RNN)\n...\n```\n\n#### Convolutional Recurrent Neural Network\n\nCan be used only with discrete action spaces.\n```python\n...\nrunner = agnes.Single(env, agnes.PPO, agnes.RNNCNN)\n...\n```\n\n#### Convolutional Neural Network with last LSTM layer\nCan be used only with discrete action spaces.\n```python\n...\nrunner = agnes.Single(env, agnes.PPO, agnes.LSTMCNN)\n...\n```\n\n## Make environment\n* **make_vec_env(env, envs_num**=ncpu, **config**=None)**\n\n    Parameters:\n    * **env**(str or function) is id of gym environment or function, that returns initialized environment\n    * **envs_num**(int) is a number of environments to initialize, by default is a number of logical cores on the CPU\n    * **config**(dict) is a dictionary with parameters for **Monitor** and for initializing environment, by default is None(uses default config)\n\n    Returns:\n    * dict of\n        1. **\"env\"**(**VecEnv** object)\n        2. **\"env_type\"**(str)\n        3. **\"env_num\"**(int) is a number of envs in **VecEnv** object\n        4. **\"env_name\"**(str) is the name of envs in **VecEnv** object(Id in gym or class name)\n\n    The whole tuple should be put in a **runner**.\n\n* **make_env(env, config=None)** is an alias of **make_vec_env** without **envs_num** argument that will be setted to 1.\n\n**Notice:** Some plot functions and environment wrappers were taken from [OpenAI Baselines(2017)](https://github.com/openai/baselines).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rotinov/AGNES", "keywords": "pytorch reinforcement learning ppo a2c framework random network distillation", "license": "", "maintainer": "", "maintainer_email": "", "name": "agnes", "package_url": "https://pypi.org/project/agnes/", "platform": "", "project_url": "https://pypi.org/project/agnes/", "project_urls": {"Homepage": "https://github.com/rotinov/AGNES"}, "release_url": "https://pypi.org/project/agnes/0.0.7.3/", "requires_dist": ["gym", "scipy", "Tensorboard", "cloudpickle", "numpy", "opencv-python", "mpi4py ; extra == 'distributed'"], "requires_python": "", "summary": "AGNES - Flexible Reinforcement Learning Framework with PyTorch", "version": "0.0.7.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>AGNES - Flexible Reinforcement Learning Framework with PyTorch</h1>\n<p><strong>Status:</strong> This framework is under active development and bugs may occur.</p>\n<p><a href=\"https://travis-ci.org/rotinov/AGNES\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2a359072013607def9b0c58489aa609ca04697da/68747470733a2f2f7472617669732d63692e6f72672f726f74696e6f762f41474e45532e7376673f6272616e63683d6d6173746572\"></a>\n<img alt=\"Upload Python Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/278693d8dc04834bce0f18a70910c7b9e0957b35/68747470733a2f2f6769746875622e636f6d2f726f74696e6f762f41474e45532f776f726b666c6f77732f55706c6f6164253230507974686f6e2532305061636b6167652f62616467652e7376673f6272616e63683d6d6173746572\"></p>\n<h2>Results</h2>\n<h4>MuJoCo</h4>\n<p><strong>(Current results)</strong>\n<a href=\"results/MuJoCo/Ant-v2_MLP\" rel=\"nofollow\"><img alt=\"The ending average is 5326.2\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1983e2fbfbee81438f87cd997dc554ed4981e5f2/726573756c74732f4d754a6f436f2f7265776172645f7065725f74696d65737465702e7376673f7261773d747275652673616e6974697a653d74727565\"></a>\n<em>MuJoCo \"Ant-v2\" training with 1M steps. <strong>Single</strong> runner with <strong>PPO</strong> algorithm, <strong>MLP</strong> NN and 32 number of envs. The curve is an average of 3 runs.</em></p>\n<p><em>You can get the Tensorboard log file by clicking the image above(You will be redirected to the destination GitHub folder). The default config for the MuJoCo environment was used. Plotted by <strong>examples/plot.py</strong></em></p>\n<h4>Atari</h4>\n<p><strong>(Old results)</strong></p>\n<p><a href=\"results/Atari-BreakoutNoFrameskip-v4-PPO-10M\" rel=\"nofollow\"><img alt=\"Peaking at 861.8 at the end. The ending average is 854.8.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/edd81f506e946f631e248c16fb8026c7d7e7130a/726573756c74732f41746172692d427265616b6f75744e6f4672616d65736b69702d76342d50504f2d31304d2f7265776172645f7065725f7570646174652e7376673f7261773d747275652673616e6974697a653d74727565\"></a>\n<em>Atari \"BreakoutNoFrameskip-v4\" with frame stack training with 10M steps. <strong>DistributedMPI</strong> runner with <strong>PPO</strong> algorithm, <strong>LSTMCNN</strong> and 16 number of envs.</em></p>\n<p><em>You can get the Tensorboard log file by clicking the image above(You will be redirected to the destination GitHub folder). The default config for the Atari environment was used.</em></p>\n<p><img alt=\"LSTMCNN agent plays Breakout\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3bd04857c06d50257b8791e1631d8683bc5fe68e/726573756c74732f41746172692d427265616b6f75744e6f4672616d65736b69702d76342d50504f2d31304d2f427265616b6f75742d4c53544d434e4e2e676966\"></p>\n<p><em>Grad-cam technique was used for sampled action chosen by trained LSTMCNN(previous point).</em></p>\n<p><img alt=\"LSTMCNN agent plays Breakout\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/014f2b3634fcab9c755b3db8b0c398673c3d0640/726573756c74732f41746172692d427265616b6f75744e6f4672616d65736b69702d76342d50504f2d31304d2f427265616b6f75742d4c53544d434e4e2d477261642d43616d2e676966\"></p>\n<h2>Runners</h2>\n<h4>Single</h4>\n<p>One worker and trainer. <strong>agnes.make_vec_env</strong> can also be used here.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">agnes</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">make_env</span><span class=\"p\">(</span><span class=\"s2\">\"InvertedDoublePendulum-v2\"</span><span class=\"p\">)</span>\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">MLP</span><span class=\"p\">)</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">(</span><span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">TensorboardLogger</span><span class=\"p\">(</span><span class=\"s2\">\".logs/\"</span><span class=\"p\">),</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">CsvLogger</span><span class=\"p\">(</span><span class=\"s2\">\".logs/\"</span><span class=\"p\">))</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<p><strong>agnes.log</strong> - object of <strong>StandardLogger</strong> class that outputs parameters to console.\n<strong>agnes.TensorboardLogger</strong> - class for writing logs in Tensorboard file.\n<strong>agnes.CsvLogger</strong> - class for writing logs in csv file. (required for plotting)</p>\n<h4>DistributedMPI</h4>\n<p>Unlike in <strong>Single</strong> runner, in <strong>DistributedMPI</strong> runner due to async executing, weights are delayed by one rollout but this has no effect on learning because weights are delayed only by one update as it is in <strong>Single</strong> runner. So all parameters like probabilities ratio stay the same.</p>\n<p>Runs with</p>\n<pre>mpiexec -n <span class=\"m\">3</span> python -m mpi4py script_name.py\nor\nmpirun -n <span class=\"m\">3</span> python -m mpi4py script_name.py\n</pre>\n<p>This command will run 2 workers and 1 trainer.</p>\n<pre><span class=\"c1\"># script_name.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">agnes</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">env</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">make_vec_env</span><span class=\"p\">(</span><span class=\"s2\">\"BreakoutNoFrameskip-v4\"</span><span class=\"p\">)</span>\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">DistributedMPI</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">CNN</span><span class=\"p\">)</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Algorithms</h2>\n<h4>A2C</h4>\n<p>Sync version of Advantage Actor Critic is implemented in this framework and can be used simply:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">agnes</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">A2C</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">MLP</span><span class=\"p\">)</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h4>PPO</h4>\n<p>Proximal Policy Optimization is implemented in this framework and can be used simply:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">agnes</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">MLP</span><span class=\"p\">)</span>\n    <span class=\"n\">runner</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Neural Network Architectures</h2>\n<h4>Multi Layer Perceptron</h4>\n<p>Can be used with both continuous and discrete action spaces.</p>\n<pre><span class=\"o\">...</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">MLP</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<h4>Convolutional Neural Network</h4>\n<p>Can be used only with discrete action spaces.</p>\n<pre><span class=\"o\">...</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">CNN</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<h4>Recurrent Neural Network</h4>\n<p>Can be used with both continuous and discrete action spaces.</p>\n<pre><span class=\"o\">...</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">RNN</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<h4>Convolutional Recurrent Neural Network</h4>\n<p>Can be used only with discrete action spaces.</p>\n<pre><span class=\"o\">...</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">RNNCNN</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<h4>Convolutional Neural Network with last LSTM layer</h4>\n<p>Can be used only with discrete action spaces.</p>\n<pre><span class=\"o\">...</span>\n<span class=\"n\">runner</span> <span class=\"o\">=</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">Single</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">PPO</span><span class=\"p\">,</span> <span class=\"n\">agnes</span><span class=\"o\">.</span><span class=\"n\">LSTMCNN</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n</pre>\n<h2>Make environment</h2>\n<ul>\n<li>\n<p><strong>make_vec_env(env, envs_num</strong>=ncpu, <strong>config</strong>=None)**</p>\n<p>Parameters:</p>\n<ul>\n<li><strong>env</strong>(str or function) is id of gym environment or function, that returns initialized environment</li>\n<li><strong>envs_num</strong>(int) is a number of environments to initialize, by default is a number of logical cores on the CPU</li>\n<li><strong>config</strong>(dict) is a dictionary with parameters for <strong>Monitor</strong> and for initializing environment, by default is None(uses default config)</li>\n</ul>\n<p>Returns:</p>\n<ul>\n<li>dict of\n<ol>\n<li><strong>\"env\"</strong>(<strong>VecEnv</strong> object)</li>\n<li><strong>\"env_type\"</strong>(str)</li>\n<li><strong>\"env_num\"</strong>(int) is a number of envs in <strong>VecEnv</strong> object</li>\n<li><strong>\"env_name\"</strong>(str) is the name of envs in <strong>VecEnv</strong> object(Id in gym or class name)</li>\n</ol>\n</li>\n</ul>\n<p>The whole tuple should be put in a <strong>runner</strong>.</p>\n</li>\n<li>\n<p><strong>make_env(env, config=None)</strong> is an alias of <strong>make_vec_env</strong> without <strong>envs_num</strong> argument that will be setted to 1.</p>\n</li>\n</ul>\n<p><strong>Notice:</strong> Some plot functions and environment wrappers were taken from <a href=\"https://github.com/openai/baselines\" rel=\"nofollow\">OpenAI Baselines(2017)</a>.</p>\n\n          </div>"}, "last_serial": 6688878, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "8686594d08193b882092ee0f32451733", "sha256": "6ceed1a7ea8d815d11e4dc87315553467f7499741e0a7d6f3a7de2cc649fee26"}, "downloads": -1, "filename": "agnes-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "8686594d08193b882092ee0f32451733", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47187, "upload_time": "2019-10-16T10:28:49", "upload_time_iso_8601": "2019-10-16T10:28:49.677192Z", "url": "https://files.pythonhosted.org/packages/78/47/6094ac6064be7d11c34ade2556cee8ed5d6aeb19a3a96107b422211ff865/agnes-0.0.5-py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "fe7c91f1285d974ccd8eca102481b8f0", "sha256": "8935eacf5c496c9fc5f3957f3d71df3a878879671d7afd0b34e420c4a2723b8c"}, "downloads": -1, "filename": "agnes-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "fe7c91f1285d974ccd8eca102481b8f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 47539, "upload_time": "2019-10-23T20:09:04", "upload_time_iso_8601": "2019-10-23T20:09:04.398790Z", "url": "https://files.pythonhosted.org/packages/54/95/8bcce1d599d969b13d352d02395b274034fa9fcc23d5bc9f6d967d9b3c8c/agnes-0.0.6-py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "b2442c52304e779ddc0e45550e31c940", "sha256": "29b7251cdc3a471a8f9b982ec411ccf6a45c37579a1d04aaed4bdd931a7cbfb3"}, "downloads": -1, "filename": "agnes-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "b2442c52304e779ddc0e45550e31c940", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51722, "upload_time": "2020-01-25T13:13:58", "upload_time_iso_8601": "2020-01-25T13:13:58.515139Z", "url": "https://files.pythonhosted.org/packages/31/e4/f4f82539e2eef7359a5eb8412b0b8895ffac78f3017bf78f84f485332ae5/agnes-0.0.7-py3-none-any.whl", "yanked": false}], "0.0.7.1": [{"comment_text": "", "digests": {"md5": "8763bd89f73a5613f3858992c61dbbf6", "sha256": "a84e0135bf80f29daa40c87cad9f50bc992810371c27f65d92cd4e2d91022e58"}, "downloads": -1, "filename": "agnes-0.0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8763bd89f73a5613f3858992c61dbbf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51588, "upload_time": "2020-02-09T13:06:28", "upload_time_iso_8601": "2020-02-09T13:06:28.450813Z", "url": "https://files.pythonhosted.org/packages/68/e5/a447bbf074b6c95c50fa21fee8594e10766c10be53258746ece9cfab7fde/agnes-0.0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2bb8293b6849cb5f270cfcd29bd30f15", "sha256": "d0d1b314a3b0ea7c7b12039f8890932c58afe5c6311cdb6740639a5d204fb982"}, "downloads": -1, "filename": "agnes-0.0.7.1.tar.gz", "has_sig": false, "md5_digest": "2bb8293b6849cb5f270cfcd29bd30f15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36743, "upload_time": "2020-02-09T13:06:29", "upload_time_iso_8601": "2020-02-09T13:06:29.658271Z", "url": "https://files.pythonhosted.org/packages/db/f8/54a03a10b016fdee624e63b18466fe114d0f3b90a316e777440929014bb6/agnes-0.0.7.1.tar.gz", "yanked": false}], "0.0.7.2": [{"comment_text": "", "digests": {"md5": "df67a35329c6becca9c22e935a258874", "sha256": "45542a759c887680865d58fe4fd5a97f7ea6b34e5e399e9eda9756871db7c1fd"}, "downloads": -1, "filename": "agnes-0.0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "df67a35329c6becca9c22e935a258874", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 51641, "upload_time": "2020-02-09T13:57:39", "upload_time_iso_8601": "2020-02-09T13:57:39.637461Z", "url": "https://files.pythonhosted.org/packages/0b/91/777daf8e3afcf2a5b45fb9ac9229d762ffa8c8c477f6660d258c21dd8662/agnes-0.0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a343ef60adcdb032655c68450a3352ad", "sha256": "e468af3346dc314e57864a7a3d919e0c4439bf2a310af45a4e80ed0016558e59"}, "downloads": -1, "filename": "agnes-0.0.7.2.tar.gz", "has_sig": false, "md5_digest": "a343ef60adcdb032655c68450a3352ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36837, "upload_time": "2020-02-09T13:57:40", "upload_time_iso_8601": "2020-02-09T13:57:40.859639Z", "url": "https://files.pythonhosted.org/packages/20/ff/c0b7a7193425d13fae27d6ceaa7badeef52cfeb41302584c460f72bf51cc/agnes-0.0.7.2.tar.gz", "yanked": false}], "0.0.7.3": [{"comment_text": "", "digests": {"md5": "7aa7f5e0a79f80ea6e6c8edae0de286b", "sha256": "123ad705c0d1f20dff4680f5ab9af49473b3a3054637f9ecd368cb512818d30e"}, "downloads": -1, "filename": "agnes-0.0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7aa7f5e0a79f80ea6e6c8edae0de286b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 53455, "upload_time": "2020-02-24T14:27:29", "upload_time_iso_8601": "2020-02-24T14:27:29.548325Z", "url": "https://files.pythonhosted.org/packages/03/78/a9f9de43431f3dd1575c313a9f2f26dfd54701b33c969951e616339a5292/agnes-0.0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "297c7e2b6a836bdcb54bbd46eb582294", "sha256": "4cfc05ba8f7188312a674abc95157e535f07c5b08e73a5d0024d6ff27a84fd9f"}, "downloads": -1, "filename": "agnes-0.0.7.3.tar.gz", "has_sig": false, "md5_digest": "297c7e2b6a836bdcb54bbd46eb582294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39404, "upload_time": "2020-02-24T14:27:30", "upload_time_iso_8601": "2020-02-24T14:27:30.867479Z", "url": "https://files.pythonhosted.org/packages/a8/c1/97c7067950c36bd21bdc34f32ded1dfecc5d3a56497b405a7dd90288997c/agnes-0.0.7.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7aa7f5e0a79f80ea6e6c8edae0de286b", "sha256": "123ad705c0d1f20dff4680f5ab9af49473b3a3054637f9ecd368cb512818d30e"}, "downloads": -1, "filename": "agnes-0.0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7aa7f5e0a79f80ea6e6c8edae0de286b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 53455, "upload_time": "2020-02-24T14:27:29", "upload_time_iso_8601": "2020-02-24T14:27:29.548325Z", "url": "https://files.pythonhosted.org/packages/03/78/a9f9de43431f3dd1575c313a9f2f26dfd54701b33c969951e616339a5292/agnes-0.0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "297c7e2b6a836bdcb54bbd46eb582294", "sha256": "4cfc05ba8f7188312a674abc95157e535f07c5b08e73a5d0024d6ff27a84fd9f"}, "downloads": -1, "filename": "agnes-0.0.7.3.tar.gz", "has_sig": false, "md5_digest": "297c7e2b6a836bdcb54bbd46eb582294", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39404, "upload_time": "2020-02-24T14:27:30", "upload_time_iso_8601": "2020-02-24T14:27:30.867479Z", "url": "https://files.pythonhosted.org/packages/a8/c1/97c7067950c36bd21bdc34f32ded1dfecc5d3a56497b405a7dd90288997c/agnes-0.0.7.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:26 2020"}