{"info": {"author": "Anjan Roy", "author_email": "anjanroy@yandex.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "# tgnize\n\n![accumulatedChatTrafficByMinuteOfDevsChatGroupTelegram](./plots/accumulatedChatTrafficByMinute.gif)\n\nHow about another exported Telegram Chat analyzer ? :wink:\n\n## nomenclature\nTelegram + _( Chat )_ Analyze = tgnize\n\n## motivation\n- I'm always interested in learning more about data, which is why I thought about taking a deeper look into Telegram Chats _( mostly groups )_, I participate in.\n- I exported chat data _( excluding audios, videos and images etc. )_, of [Devs Chat](https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw) group, using Telegram Desktop Client, which are nothing but some HTML, CSS & JS files\n- I created an object model, into which I populated parsed Chat data, so that I can manipulate it well\n- Then I started plotting animated charts & much more _( a lot of work remaining though )_, to depict how participants contributed to chat\n- It also lets me understand my chat activity pattern(s) i.e. in which hour of the day I'm mostly active / inactive in Chat\n- Or how another peer is spending their time is Chat\n- What's mostly used words / mostly used bots / mostly used Emoji etc. in Chat\n\n## caution\nThis project doesn't expect you to use any exported Chat for manipulating any participant or use extracted data _( sleep patterns, daily activity pattern of participants )_ for doing some harmful activity to any participant.\n\n**If users use it for malicious purpose(s), it's not author's responsibility !!!**\n\nI suggest you not to use it for manipulating someone else. Thank you for understanding :wink:\n\n## data source\nHere I'm using [Devs Chat](https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw)'s, exported Chat data set for testing these scripts. So all plots ( to be :wink: ) generated, present in this repository, are result of application of scripts on [Devs Chat](https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw)'s exported Chat data.\n\n~Template data set is present [here](.). It holds all messages of [Devs Chat](https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw) upto _03/11/2019_ from initialization of group.~\n\n**For respecting privacy of all users, I'm removing that data source from this public repo. Export chat data for your own need.**\n\n### exporting chat\nFor exporting chat data for [Devs Chat](https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw) group of Telegram, I used Official Telegram Desktop Client. Exporting was done, while only including text messages _( no images, videos or audios )_, which are nothing but a bunch of HTML files.\n\nIf you want to run these scripts on your machine, make sure you've Telegram Desktop Client installed.\n\n```shell script\n$ sudo snap install telegram-desktop # run on your linux terminal\n```\nLog into your account and choose which chat to export. Well this expoting procedure can take some time, depending upon age & activeness of Chat.\n\n## usage\n- Download this zip from [here](https://github.com/itzmeanjan/tgnize/releases)\n- Unzip it into a suitable directory on your machine\n- Get into `tgnize` directory\n\n```shell script\n$ cd tgnize\n$ tree -h\n.\n\u251c\u2500\u2500 [4.2K]  app.py\n\u251c\u2500\u2500 [4.0K]  docs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 [1.8K]  minuteBasedAccumulatedTraffic.md\n\u251c\u2500\u2500 [ 227]  install\n\u251c\u2500\u2500 [1.0K]  LICENSE\n\u251c\u2500\u2500 [4.0K]  model\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [ 245]  activity.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [9.8K]  chat.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [ 332]  event.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [ 100]  __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [1.3K]  message.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [ 515]  plotDataRange.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 [1.1K]  user.py\n\u251c\u2500\u2500 [4.0K]  plotting_scripts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [ 100]  __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 [ 169]  messageCount.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 [ 11K]  minuteBasedAccumulatedTraffic.py\n\u251c\u2500\u2500 [2.7K]  README.md\n\u251c\u2500\u2500 [  56]  requirements.txt\n\u251c\u2500\u2500 [  47]  tgnize\n\u2514\u2500\u2500 [4.4K]  util.py\n\n3 directories, 18 files\n```\n- Make sure you've `python3-pip` installed, which will be required for installing python modules ( i.e. beautifulsoup4, matplotlib etc. )\n- Run `install` script ( BASH script ), which will download all required dependencies into your machine\n\n```shell script\n$ ./install\n```\n- For generating animated plots, you'll need to have `imagemagick` installed on your machine. Install it using your system package manager.\n\n```shell script\n$ sudo apt-get install imagemagick # for debian based distros\n$ sudo dnf install imagemagick # for fedora\n```\n- Now you need to add installation path of `tgnize`, into your **PATH** variable\n\n```shell script\n$ pwd # copy it\n```\n- If you're on BASH, find `.bashrc` under your home directory, if not found create a file with that name\n- Add follwing line at end of that file, while replacing `paste-here` section with installation path of `tgnize`\n\n```shell script\nexport PATH=\"$PATH:paste-here\"\n```\n- Now close this terminal window & open a new one\n- You'll have `tgnize`, executable BASH script present under downloaded zip, on your path. Simply invoke `tgnize` directly, to be sure things are working as they're supposed to be\n\n```shell script\n$ cd # get to home directory\n$ tgnize\n[+]tgnize v0.1.0 - How about another Telegram Chat Analyzer ?\n\n\t$ tgnize `path-to-exported-chat-dir` `path-to-sink-dir`\n\n[+]Author: Anjan Roy<anjanroy@yandex.com>\n[+]Source: https://github.com/itzmeanjan/tgnize ( MIT Licensed )\n\n[!]Error : Improper Invocation of `tgnize`\n```\n- It's asking you to properly invoke script, by giving source directory _( holding exported telegram chat, of a single Chat, may be a lot of files in case of large Chats )_ & sink directory _( will hold generated plots / charts )_\n- If you've already exported some Telegram chat, consider invoking this script, to understand how you spent your time in Chat\n\n## progress\n\n**This project is in its infancy, a lot of features to be added. If you've something in your mind, don't hesitate to create an issue or make a PR**\n\n- [x] [Depiction of Accumulated Chat Traffic _( for whole Chat along with top **'X'** chat participants )_ with minute level details](./docs/minuteBasedAccumulatedTraffic.md)\n- [x] [Top **'X'** Active Chat Participant(s) Over Time](./docs/topXActiveChatParticipantsOverTime.gif)\n- [ ] Contribution of Chat Participants to Chat\n- [ ] Overall Activity of Chat _( for a specified period of time )_\n- [ ] Emoji Analysis\n- [ ] Text Analysis\n\n_Got some new idea ? Make a PR_ :wink:\n\n**Work in Progress** - _coming with more details soon_\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://itzmeanjan.github.io/tgnize/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tgnize", "package_url": "https://pypi.org/project/tgnize/", "platform": "", "project_url": "https://pypi.org/project/tgnize/", "project_urls": {"Homepage": "https://itzmeanjan.github.io/tgnize/"}, "release_url": "https://pypi.org/project/tgnize/0.1.3/", "requires_dist": ["matplotlib", "typing", "beautifulsoup4", "lxml", "flit ; extra == \"dev\""], "requires_python": ">=3.7", "summary": "How about another exported Telegram Chat analyzer? \ud83d\ude09", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tgnize</h1>\n<p><img alt=\"accumulatedChatTrafficByMinuteOfDevsChatGroupTelegram\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/037ffa5c49638cc99a1e791f9313281830da43e4/2e2f706c6f74732f616363756d756c61746564436861745472616666696342794d696e7574652e676966\"></p>\n<p>How about another exported Telegram Chat analyzer ? :wink:</p>\n<h2>nomenclature</h2>\n<p>Telegram + <em>( Chat )</em> Analyze = tgnize</p>\n<h2>motivation</h2>\n<ul>\n<li>I'm always interested in learning more about data, which is why I thought about taking a deeper look into Telegram Chats <em>( mostly groups )</em>, I participate in.</li>\n<li>I exported chat data <em>( excluding audios, videos and images etc. )</em>, of <a href=\"https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw\" rel=\"nofollow\">Devs Chat</a> group, using Telegram Desktop Client, which are nothing but some HTML, CSS &amp; JS files</li>\n<li>I created an object model, into which I populated parsed Chat data, so that I can manipulate it well</li>\n<li>Then I started plotting animated charts &amp; much more <em>( a lot of work remaining though )</em>, to depict how participants contributed to chat</li>\n<li>It also lets me understand my chat activity pattern(s) i.e. in which hour of the day I'm mostly active / inactive in Chat</li>\n<li>Or how another peer is spending their time is Chat</li>\n<li>What's mostly used words / mostly used bots / mostly used Emoji etc. in Chat</li>\n</ul>\n<h2>caution</h2>\n<p>This project doesn't expect you to use any exported Chat for manipulating any participant or use extracted data <em>( sleep patterns, daily activity pattern of participants )</em> for doing some harmful activity to any participant.</p>\n<p><strong>If users use it for malicious purpose(s), it's not author's responsibility !!!</strong></p>\n<p>I suggest you not to use it for manipulating someone else. Thank you for understanding :wink:</p>\n<h2>data source</h2>\n<p>Here I'm using <a href=\"https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw\" rel=\"nofollow\">Devs Chat</a>'s, exported Chat data set for testing these scripts. So all plots ( to be :wink: ) generated, present in this repository, are result of application of scripts on <a href=\"https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw\" rel=\"nofollow\">Devs Chat</a>'s exported Chat data.</p>\n<p><del>Template data set is present <a href=\".\" rel=\"nofollow\">here</a>. It holds all messages of <a href=\"https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw\" rel=\"nofollow\">Devs Chat</a> upto <em>03/11/2019</em> from initialization of group.</del></p>\n<p><strong>For respecting privacy of all users, I'm removing that data source from this public repo. Export chat data for your own need.</strong></p>\n<h3>exporting chat</h3>\n<p>For exporting chat data for <a href=\"https://t.me/joinchat/BkBvqUQUj4VKPmFSSNPQSw\" rel=\"nofollow\">Devs Chat</a> group of Telegram, I used Official Telegram Desktop Client. Exporting was done, while only including text messages <em>( no images, videos or audios )</em>, which are nothing but a bunch of HTML files.</p>\n<p>If you want to run these scripts on your machine, make sure you've Telegram Desktop Client installed.</p>\n<pre>$ sudo snap install telegram-desktop <span class=\"c1\"># run on your linux terminal</span>\n</pre>\n<p>Log into your account and choose which chat to export. Well this expoting procedure can take some time, depending upon age &amp; activeness of Chat.</p>\n<h2>usage</h2>\n<ul>\n<li>Download this zip from <a href=\"https://github.com/itzmeanjan/tgnize/releases\" rel=\"nofollow\">here</a></li>\n<li>Unzip it into a suitable directory on your machine</li>\n<li>Get into <code>tgnize</code> directory</li>\n</ul>\n<pre>$ <span class=\"nb\">cd</span> tgnize\n$ tree -h\n.\n\u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">4</span>.2K<span class=\"o\">]</span>  app.py\n\u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">4</span>.0K<span class=\"o\">]</span>  docs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">1</span>.8K<span class=\"o\">]</span>  minuteBasedAccumulatedTraffic.md\n\u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">227</span><span class=\"o\">]</span>  install\n\u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">1</span>.0K<span class=\"o\">]</span>  LICENSE\n\u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">4</span>.0K<span class=\"o\">]</span>  model\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">245</span><span class=\"o\">]</span>  activity.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">9</span>.8K<span class=\"o\">]</span>  chat.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">332</span><span class=\"o\">]</span>  event.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">100</span><span class=\"o\">]</span>  __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">1</span>.3K<span class=\"o\">]</span>  message.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">515</span><span class=\"o\">]</span>  plotDataRange.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">1</span>.1K<span class=\"o\">]</span>  user.py\n\u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">4</span>.0K<span class=\"o\">]</span>  plotting_scripts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">100</span><span class=\"o\">]</span>  __init__.py\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 <span class=\"o\">[</span> <span class=\"m\">169</span><span class=\"o\">]</span>  messageCount.py\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 <span class=\"o\">[</span> 11K<span class=\"o\">]</span>  minuteBasedAccumulatedTraffic.py\n\u251c\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">2</span>.7K<span class=\"o\">]</span>  README.md\n\u251c\u2500\u2500 <span class=\"o\">[</span>  <span class=\"m\">56</span><span class=\"o\">]</span>  requirements.txt\n\u251c\u2500\u2500 <span class=\"o\">[</span>  <span class=\"m\">47</span><span class=\"o\">]</span>  tgnize\n\u2514\u2500\u2500 <span class=\"o\">[</span><span class=\"m\">4</span>.4K<span class=\"o\">]</span>  util.py\n\n<span class=\"m\">3</span> directories, <span class=\"m\">18</span> files\n</pre>\n<ul>\n<li>Make sure you've <code>python3-pip</code> installed, which will be required for installing python modules ( i.e. beautifulsoup4, matplotlib etc. )</li>\n<li>Run <code>install</code> script ( BASH script ), which will download all required dependencies into your machine</li>\n</ul>\n<pre>$ ./install\n</pre>\n<ul>\n<li>For generating animated plots, you'll need to have <code>imagemagick</code> installed on your machine. Install it using your system package manager.</li>\n</ul>\n<pre>$ sudo apt-get install imagemagick <span class=\"c1\"># for debian based distros</span>\n$ sudo dnf install imagemagick <span class=\"c1\"># for fedora</span>\n</pre>\n<ul>\n<li>Now you need to add installation path of <code>tgnize</code>, into your <strong>PATH</strong> variable</li>\n</ul>\n<pre>$ <span class=\"nb\">pwd</span> <span class=\"c1\"># copy it</span>\n</pre>\n<ul>\n<li>If you're on BASH, find <code>.bashrc</code> under your home directory, if not found create a file with that name</li>\n<li>Add follwing line at end of that file, while replacing <code>paste-here</code> section with installation path of <code>tgnize</code></li>\n</ul>\n<pre><span class=\"nb\">export</span> <span class=\"nv\">PATH</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$PATH</span><span class=\"s2\">:paste-here\"</span>\n</pre>\n<ul>\n<li>Now close this terminal window &amp; open a new one</li>\n<li>You'll have <code>tgnize</code>, executable BASH script present under downloaded zip, on your path. Simply invoke <code>tgnize</code> directly, to be sure things are working as they're supposed to be</li>\n</ul>\n<pre>$ <span class=\"nb\">cd</span> <span class=\"c1\"># get to home directory</span>\n$ tgnize\n<span class=\"o\">[</span>+<span class=\"o\">]</span>tgnize v0.1.0 - How about another Telegram Chat Analyzer ?\n\n\t$ tgnize <span class=\"sb\">`</span>path-to-exported-chat-dir<span class=\"sb\">`</span> <span class=\"sb\">`</span>path-to-sink-dir<span class=\"sb\">`</span>\n\n<span class=\"o\">[</span>+<span class=\"o\">]</span>Author: Anjan Roy&lt;anjanroy@yandex.com&gt;\n<span class=\"o\">[</span>+<span class=\"o\">]</span>Source: https://github.com/itzmeanjan/tgnize <span class=\"o\">(</span> MIT Licensed <span class=\"o\">)</span>\n\n<span class=\"o\">[</span>!<span class=\"o\">]</span>Error : Improper Invocation of <span class=\"sb\">`</span>tgnize<span class=\"sb\">`</span>\n</pre>\n<ul>\n<li>It's asking you to properly invoke script, by giving source directory <em>( holding exported telegram chat, of a single Chat, may be a lot of files in case of large Chats )</em> &amp; sink directory <em>( will hold generated plots / charts )</em></li>\n<li>If you've already exported some Telegram chat, consider invoking this script, to understand how you spent your time in Chat</li>\n</ul>\n<h2>progress</h2>\n<p><strong>This project is in its infancy, a lot of features to be added. If you've something in your mind, don't hesitate to create an issue or make a PR</strong></p>\n<ul>\n<li>[x] <a href=\"./docs/minuteBasedAccumulatedTraffic.md\" rel=\"nofollow\">Depiction of Accumulated Chat Traffic <em>( for whole Chat along with top <strong>'X'</strong> chat participants )</em> with minute level details</a></li>\n<li>[x] <a href=\"./docs/topXActiveChatParticipantsOverTime.gif\" rel=\"nofollow\">Top <strong>'X'</strong> Active Chat Participant(s) Over Time</a></li>\n<li>[ ] Contribution of Chat Participants to Chat</li>\n<li>[ ] Overall Activity of Chat <em>( for a specified period of time )</em></li>\n<li>[ ] Emoji Analysis</li>\n<li>[ ] Text Analysis</li>\n</ul>\n<p><em>Got some new idea ? Make a PR</em> :wink:</p>\n<p><strong>Work in Progress</strong> - <em>coming with more details soon</em></p>\n\n          </div>"}, "last_serial": 6194814, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "75c41975c7db20554fd0bde65dc2d5f3", "sha256": "181d055fe42c1940d9b8fe36f6f3f0576a896901d98c02cc84418ad2f8da11db"}, "downloads": -1, "filename": "tgnize-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "75c41975c7db20554fd0bde65dc2d5f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 46763, "upload_time": "2019-11-25T15:27:26", "upload_time_iso_8601": "2019-11-25T15:27:26.706317Z", "url": "https://files.pythonhosted.org/packages/be/11/dd6f44e66945ffada8153b408ce7fa4a12f57d4cc088b22d1130354cc3da/tgnize-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31c9c088b70cb0c4ebdf258ee0ae12e5", "sha256": "eb42e3255828c6a80bd4a69ad567bd3990da2efa1fda8aee7ed14fec77571f25"}, "downloads": -1, "filename": "tgnize-0.1.2.tar.gz", "has_sig": false, "md5_digest": "31c9c088b70cb0c4ebdf258ee0ae12e5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 16031, "upload_time": "2019-11-25T15:27:31", "upload_time_iso_8601": "2019-11-25T15:27:31.848647Z", "url": "https://files.pythonhosted.org/packages/19/d5/96bfdf2f315829d1f1589b32b0e5a137c7b0eb3dc1ad379182428db222d0/tgnize-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4b0703f18a74c391b8e376372f399b8b", "sha256": "5f2deb62e347ede5ae988f569e0c89a8fda8cbe38779779b150b9688a93a97b0"}, "downloads": -1, "filename": "tgnize-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4b0703f18a74c391b8e376372f399b8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 46621, "upload_time": "2019-11-25T15:39:15", "upload_time_iso_8601": "2019-11-25T15:39:15.415537Z", "url": "https://files.pythonhosted.org/packages/f5/25/aa2d16fd6cc2657227149d96c0d2219219bbdbc50af07e44ebead1e91556/tgnize-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fda8afc8495ab67642c73e27d558d7e2", "sha256": "c01a55932a839d2739140c2791abc74f4a83341420c1297daa59b374541ad8f8"}, "downloads": -1, "filename": "tgnize-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fda8afc8495ab67642c73e27d558d7e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 15991, "upload_time": "2019-11-25T15:39:20", "upload_time_iso_8601": "2019-11-25T15:39:20.155634Z", "url": "https://files.pythonhosted.org/packages/51/40/b3c42da8940b922d6b323e9a67e546da06e53e0dd7402903b22c78a0aee0/tgnize-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4b0703f18a74c391b8e376372f399b8b", "sha256": "5f2deb62e347ede5ae988f569e0c89a8fda8cbe38779779b150b9688a93a97b0"}, "downloads": -1, "filename": "tgnize-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "4b0703f18a74c391b8e376372f399b8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 46621, "upload_time": "2019-11-25T15:39:15", "upload_time_iso_8601": "2019-11-25T15:39:15.415537Z", "url": "https://files.pythonhosted.org/packages/f5/25/aa2d16fd6cc2657227149d96c0d2219219bbdbc50af07e44ebead1e91556/tgnize-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fda8afc8495ab67642c73e27d558d7e2", "sha256": "c01a55932a839d2739140c2791abc74f4a83341420c1297daa59b374541ad8f8"}, "downloads": -1, "filename": "tgnize-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fda8afc8495ab67642c73e27d558d7e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 15991, "upload_time": "2019-11-25T15:39:20", "upload_time_iso_8601": "2019-11-25T15:39:20.155634Z", "url": "https://files.pythonhosted.org/packages/51/40/b3c42da8940b922d6b323e9a67e546da06e53e0dd7402903b22c78a0aee0/tgnize-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:12 2020"}