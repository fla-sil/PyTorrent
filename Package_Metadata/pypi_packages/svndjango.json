{"info": {"author": "Ethan Jucovy", "author_email": "ejucovy@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "Programming Language :: Python"], "description": "svndjango has been renamed django-vcexport\n===========================================\n\nhttp://pypi.python.org/pypi/django-vcexport\n\n\nThis package provides some basic utilities for backing up django model instances\nto a Subversion repository. It is very experimental at this point and hasn't been\ntested in any meaningful environment.\n\nIt does not provide any utilities for restoring live data from backups, though\nit may one day.\n\nTwo distinct use cases are supported:\n* You want to version a model wholesale\n* You have a model which has one or two document-like text fields, and you want to version those fields only\n\nTo use the former, you should subclass svndjango.models.SubversionedMixin and call\nits .save method from your own. svndjango.models.SubversionedModel is an example\n(which you can also just subclass directly and not worry about any of it, but it\nlacks flexibility) -- you probably want to call SubversionedMixin.save only after\nthe \"actual\" .save to your RDB; this will ensure that you don't accidentally save\na revision that ends up being rolled back in the RDB.\n\nYour model instances will be serialized to JSON and saved in repository paths that\nlook like `/module/name/class/name/instance_pk`.\n\nTo be honest, versioning a model wholesale seems like a pretty bad idea to me,\nunless you're very careful about versioning every related model, and unless you're\nversioning the model schemas side-by-side with the content. But it's fun to\nexperiment with at least.\n\nTo use the latter, your model should subclass svndjango.models.SVNDoc in the same\nmanner. Text fields to be versioned must be declared explicitly, by using the\nsvndjango.models.SubversionedTextField field instead of the standard TextField.\n\nYour text fields will be saved directly into the repository in repository paths\nthat look like `/module/name/class/name/instance_pk/field_name`.\n\nYou must provide one piece of configuration in your settings.py file:\n\n SVNDJANGO_CHECKOUT_DIR: the absolute path to a local checkout of the repository\n that you want to store your data in\n\nA second optional setting is supported:\n\n SVNDJANGO_SILENT_FAILURES: if this is set to True, then any exceptions caused\n by svndjango will be swallowed. This may be useful if you'd rather avoid user\n errors than preserve a strictly full history of changes.\n\nYou will have to initialize your SVN repository and checkout on your own, though\nthese may be automated in future versions. (Not that it's hard to do anyway)\n\nYou must have pysvn installed.\n\nOriginally developed at Columbia University's Center for New Media Teaching & Learning <http://ccnmtl.columbia.edu>\n\n\nNew in version 0.3:\n\n * Added `svndjango.sven.DjangoAutoupdatingSvnAccess` class\n   (depends on sven>=0.4) which will deserialize Django model\n   objects out of your committed documents and save them to\n   your Django database after the commit goes through.\n\n   Assumes you will have your Django environment and settings\n   properly installed at checkin-time, and assumes that all\n   checkins should be saved to the Django database.\n\n   If these conditions are met, use as a drop-in replacement\n   for `sven.backend.SvnAccess` (see that package's documentation\n   for usage)\n\n\nHistory:\n\n0.2 (07-30-2009)\n================\n\n * Declare sample SubversionedModel as an abstract base class so django won't create\n   a pointless database table for it.\n\n0.1 (07-24-2009)\n================\n\nInitial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "svndjango", "package_url": "https://pypi.org/project/svndjango/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/svndjango/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/svndjango/0.3/", "requires_dist": null, "requires_python": null, "summary": "automatic backup of django model instances to a subversion repository", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"svndjango-has-been-renamed-django-vcexport\">\n<h2>svndjango has been renamed django-vcexport</h2>\n<p><a href=\"http://pypi.python.org/pypi/django-vcexport\" rel=\"nofollow\">http://pypi.python.org/pypi/django-vcexport</a></p>\n<p>This package provides some basic utilities for backing up django model instances\nto a Subversion repository. It is very experimental at this point and hasn\u2019t been\ntested in any meaningful environment.</p>\n<p>It does not provide any utilities for restoring live data from backups, though\nit may one day.</p>\n<p>Two distinct use cases are supported:\n* You want to version a model wholesale\n* You have a model which has one or two document-like text fields, and you want to version those fields only</p>\n<p>To use the former, you should subclass svndjango.models.SubversionedMixin and call\nits .save method from your own. svndjango.models.SubversionedModel is an example\n(which you can also just subclass directly and not worry about any of it, but it\nlacks flexibility) \u2013 you probably want to call SubversionedMixin.save only after\nthe \u201cactual\u201d .save to your RDB; this will ensure that you don\u2019t accidentally save\na revision that ends up being rolled back in the RDB.</p>\n<p>Your model instances will be serialized to JSON and saved in repository paths that\nlook like <cite>/module/name/class/name/instance_pk</cite>.</p>\n<p>To be honest, versioning a model wholesale seems like a pretty bad idea to me,\nunless you\u2019re very careful about versioning every related model, and unless you\u2019re\nversioning the model schemas side-by-side with the content. But it\u2019s fun to\nexperiment with at least.</p>\n<p>To use the latter, your model should subclass svndjango.models.SVNDoc in the same\nmanner. Text fields to be versioned must be declared explicitly, by using the\nsvndjango.models.SubversionedTextField field instead of the standard TextField.</p>\n<p>Your text fields will be saved directly into the repository in repository paths\nthat look like <cite>/module/name/class/name/instance_pk/field_name</cite>.</p>\n<p>You must provide one piece of configuration in your settings.py file:</p>\n<blockquote>\nSVNDJANGO_CHECKOUT_DIR: the absolute path to a local checkout of the repository\nthat you want to store your data in</blockquote>\n<p>A second optional setting is supported:</p>\n<blockquote>\nSVNDJANGO_SILENT_FAILURES: if this is set to True, then any exceptions caused\nby svndjango will be swallowed. This may be useful if you\u2019d rather avoid user\nerrors than preserve a strictly full history of changes.</blockquote>\n<p>You will have to initialize your SVN repository and checkout on your own, though\nthese may be automated in future versions. (Not that it\u2019s hard to do anyway)</p>\n<p>You must have pysvn installed.</p>\n<p>Originally developed at Columbia University\u2019s Center for New Media Teaching &amp; Learning &lt;<a href=\"http://ccnmtl.columbia.edu\" rel=\"nofollow\">http://ccnmtl.columbia.edu</a>&gt;</p>\n<p>New in version 0.3:</p>\n<blockquote>\n<ul>\n<li><p>Added <cite>svndjango.sven.DjangoAutoupdatingSvnAccess</cite> class\n(depends on sven&gt;=0.4) which will deserialize Django model\nobjects out of your committed documents and save them to\nyour Django database after the commit goes through.</p>\n<p>Assumes you will have your Django environment and settings\nproperly installed at checkin-time, and assumes that all\ncheckins should be saved to the Django database.</p>\n<p>If these conditions are met, use as a drop-in replacement\nfor <cite>sven.backend.SvnAccess</cite> (see that package\u2019s documentation\nfor usage)</p>\n</li>\n</ul>\n</blockquote>\n<p>History:</p>\n</div>\n<div id=\"id1\">\n<h2>0.2 (07-30-2009)</h2>\n<blockquote>\n<ul>\n<li>Declare sample SubversionedModel as an abstract base class so django won\u2019t create\na pointless database table for it.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h2>0.1 (07-24-2009)</h2>\n<p>Initial release.</p>\n</div>\n\n          </div>"}, "last_serial": 800277, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8b4bc1bd56b68fd8009c3b556adbce3f", "sha256": "65d219f25235160c3d85b7b281c9af5722e56915372334121f13c9cd7ac28af8"}, "downloads": -1, "filename": "svndjango-0.1.tar.gz", "has_sig": false, "md5_digest": "8b4bc1bd56b68fd8009c3b556adbce3f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3164, "upload_time": "2009-07-24T23:16:57", "upload_time_iso_8601": "2009-07-24T23:16:57.121906Z", "url": "https://files.pythonhosted.org/packages/0f/2b/825ceaba919fd90ea12c1d3a183f2f60552429c6222a95175901f1bb9bed/svndjango-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "8328cfa7c5ece58c3ea8a35e03c58f88", "sha256": "5a9d231ec76afe1194d695e8b527dcf51b6959ede629d79236c1f79acea992aa"}, "downloads": -1, "filename": "svndjango-0.2.tar.gz", "has_sig": false, "md5_digest": "8328cfa7c5ece58c3ea8a35e03c58f88", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3695, "upload_time": "2009-07-30T23:31:52", "upload_time_iso_8601": "2009-07-30T23:31:52.169344Z", "url": "https://files.pythonhosted.org/packages/28/db/1cfcaa19ba4fd7fcffafc923c5b621f22859c625b15e5d129897027aa099/svndjango-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "9e461899296eae4175a04de93badefbf", "sha256": "d22dd1d3b5e99f6dfaf1a95e37aa3f7a20ce2a9589bfe55086afac3e2d802dbf"}, "downloads": -1, "filename": "svndjango-0.3.tar.gz", "has_sig": false, "md5_digest": "9e461899296eae4175a04de93badefbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4116, "upload_time": "2009-08-10T22:14:38", "upload_time_iso_8601": "2009-08-10T22:14:38.407222Z", "url": "https://files.pythonhosted.org/packages/ef/b2/816f7cffa88476fc31d223d050ef5827a19863c570862efae962986a5bd2/svndjango-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e461899296eae4175a04de93badefbf", "sha256": "d22dd1d3b5e99f6dfaf1a95e37aa3f7a20ce2a9589bfe55086afac3e2d802dbf"}, "downloads": -1, "filename": "svndjango-0.3.tar.gz", "has_sig": false, "md5_digest": "9e461899296eae4175a04de93badefbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4116, "upload_time": "2009-08-10T22:14:38", "upload_time_iso_8601": "2009-08-10T22:14:38.407222Z", "url": "https://files.pythonhosted.org/packages/ef/b2/816f7cffa88476fc31d223d050ef5827a19863c570862efae962986a5bd2/svndjango-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:48 2020"}