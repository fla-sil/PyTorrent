{"info": {"author": "Andrey Parfenov", "author_email": "a1994ndrey@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Topic :: Utilities"], "description": "# FPS Inspector SDK\n\n## Build status\n\n*Windows(AppVeyour)*:\n\n[![Build status](https://ci.appveyor.com/api/projects/status/sj0j2oqeij6pnmtr/branch/master?svg=true)](https://ci.appveyor.com/project/Andrey1994/fps-inspector-sdk/branch/master)\n\nIt's a library which allows you to measure FPS FlipRate and other metrics.\n\nIt's based on Event Tracing and doesn't hook inside game process unlike Fraps\n\nFor now I've added only python binding if you wanna use another languages like C#, Java, R etc - let me know and I will add them\n\nAlso, you are able to use compiled dll and header from native code or add bindings by yourself\n* [header](https://github.com/Andrey1994/fps_inspector_sdk/blob/master/src/PresentMon/PresentMon.hpp)\n* [dll](https://github.com/Andrey1994/fps_inspector_sdk/blob/master/python/fps_inspector_sdk/lib/PresentMon.dll)\n\n## Installation\n\nFirst option is:\n```\ngit clone https://github.com/Andrey1994/fps_inspector_sdk\ncd python\npip install .\n```\n\nAlso you can install it from PYPI:\n```\npip install fps_inspector_sdk\n```\n\n*you have to run it with administrator priviligies and using 64-bit Python*\n\nSimple Sample:\n```\nimport sys\nimport time\nimport matplotlib\nmatplotlib.use ('Agg')\nimport numpy\nimport matplotlib.pyplot as plt\n\nfrom fps_inspector_sdk import fps_inspector\n\ndef main ():\n    float_formatter = lambda x: \"%.5f\" % x\n    numpy.set_printoptions (formatter={'float_kind': float_formatter}, threshold=numpy.inf)\n\n    pid = int (sys.argv[1])\n    fps_inspector.start_fliprate_recording (pid)\n    time.sleep (10)\n    fps_inspector.stop_fliprate_recording ()\n    data = fps_inspector.get_all_fliprates () # get all data from begining,\n    # also you can obtain the latest data using fps_inspector.get_last_fliprates(num_samples) method\n    # data is a pandas dataframe, it simplify data analysis!\n    print (data)\n\n    plt.figure ()\n    data[data.ScreenTime != 0][['FPS', 'FlipRate', 'ScreenTime']].plot (x='ScreenTime', subplots=True)\n    plt.savefig ('plot.png')\n    data.to_csv('scores.csv')\n    plt.close ()\n\n\nif __name__ == \"__main__\":\n    main ()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Andrey1994/fps_inspector_sdk", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "fps-inspector-sdk", "package_url": "https://pypi.org/project/fps-inspector-sdk/", "platform": "", "project_url": "https://pypi.org/project/fps-inspector-sdk/", "project_urls": {"Homepage": "https://github.com/Andrey1994/fps_inspector_sdk"}, "release_url": "https://pypi.org/project/fps-inspector-sdk/1.0.8/", "requires_dist": ["numpy", "pandas"], "requires_python": ">=3", "summary": "Library to measure FPS and FlipRate", "version": "1.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>FPS Inspector SDK</h1>\n<h2>Build status</h2>\n<p><em>Windows(AppVeyour)</em>:</p>\n<p><a href=\"https://ci.appveyor.com/project/Andrey1994/fps-inspector-sdk/branch/master\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fe3f1e618d2fc4fc7fbd1b96d8191190c3b0cd74/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f736a306a326f7165696a36706e6d74722f6272616e63682f6d61737465723f7376673d74727565\"></a></p>\n<p>It's a library which allows you to measure FPS FlipRate and other metrics.</p>\n<p>It's based on Event Tracing and doesn't hook inside game process unlike Fraps</p>\n<p>For now I've added only python binding if you wanna use another languages like C#, Java, R etc - let me know and I will add them</p>\n<p>Also, you are able to use compiled dll and header from native code or add bindings by yourself</p>\n<ul>\n<li><a href=\"https://github.com/Andrey1994/fps_inspector_sdk/blob/master/src/PresentMon/PresentMon.hpp\" rel=\"nofollow\">header</a></li>\n<li><a href=\"https://github.com/Andrey1994/fps_inspector_sdk/blob/master/python/fps_inspector_sdk/lib/PresentMon.dll\" rel=\"nofollow\">dll</a></li>\n</ul>\n<h2>Installation</h2>\n<p>First option is:</p>\n<pre><code>git clone https://github.com/Andrey1994/fps_inspector_sdk\ncd python\npip install .\n</code></pre>\n<p>Also you can install it from PYPI:</p>\n<pre><code>pip install fps_inspector_sdk\n</code></pre>\n<p><em>you have to run it with administrator priviligies and using 64-bit Python</em></p>\n<p>Simple Sample:</p>\n<pre><code>import sys\nimport time\nimport matplotlib\nmatplotlib.use ('Agg')\nimport numpy\nimport matplotlib.pyplot as plt\n\nfrom fps_inspector_sdk import fps_inspector\n\ndef main ():\n    float_formatter = lambda x: \"%.5f\" % x\n    numpy.set_printoptions (formatter={'float_kind': float_formatter}, threshold=numpy.inf)\n\n    pid = int (sys.argv[1])\n    fps_inspector.start_fliprate_recording (pid)\n    time.sleep (10)\n    fps_inspector.stop_fliprate_recording ()\n    data = fps_inspector.get_all_fliprates () # get all data from begining,\n    # also you can obtain the latest data using fps_inspector.get_last_fliprates(num_samples) method\n    # data is a pandas dataframe, it simplify data analysis!\n    print (data)\n\n    plt.figure ()\n    data[data.ScreenTime != 0][['FPS', 'FlipRate', 'ScreenTime']].plot (x='ScreenTime', subplots=True)\n    plt.savefig ('plot.png')\n    data.to_csv('scores.csv')\n    plt.close ()\n\n\nif __name__ == \"__main__\":\n    main ()\n</code></pre>\n\n          </div>"}, "last_serial": 5170298, "releases": {"1.0.7": [{"comment_text": "", "digests": {"md5": "eff1fc4bc8963c9ee8d9076a11c3a9cb", "sha256": "54053f8e53c508fa61524b764e17e96b4894e667753958e4d330f6f5e5d67d04"}, "downloads": -1, "filename": "fps_inspector_sdk-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "eff1fc4bc8963c9ee8d9076a11c3a9cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 266877, "upload_time": "2019-04-19T18:21:18", "upload_time_iso_8601": "2019-04-19T18:21:18.090180Z", "url": "https://files.pythonhosted.org/packages/bc/9a/5a8fbcbfeb657a54590f01e1e07e7e56dd36a86291a3866c572182549d9f/fps_inspector_sdk-1.0.7-py3-none-any.whl", "yanked": false}], "1.0.8": [{"comment_text": "", "digests": {"md5": "af6618956346bb69d77d09e32fa6448f", "sha256": "352b7017282319346540b54c1992afc738ecee87e3e092a7964e42f5112fcaad"}, "downloads": -1, "filename": "fps_inspector_sdk-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "af6618956346bb69d77d09e32fa6448f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 266938, "upload_time": "2019-04-21T17:16:13", "upload_time_iso_8601": "2019-04-21T17:16:13.717590Z", "url": "https://files.pythonhosted.org/packages/94/cc/a2b7d7645b94d355c590f2a36fcd2c15e7830b4859bdf195aff1f05399bc/fps_inspector_sdk-1.0.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "af6618956346bb69d77d09e32fa6448f", "sha256": "352b7017282319346540b54c1992afc738ecee87e3e092a7964e42f5112fcaad"}, "downloads": -1, "filename": "fps_inspector_sdk-1.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "af6618956346bb69d77d09e32fa6448f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 266938, "upload_time": "2019-04-21T17:16:13", "upload_time_iso_8601": "2019-04-21T17:16:13.717590Z", "url": "https://files.pythonhosted.org/packages/94/cc/a2b7d7645b94d355c590f2a36fcd2c15e7830b4859bdf195aff1f05399bc/fps_inspector_sdk-1.0.8-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 01:00:36 2020"}