{"info": {"author": "Christos Kopanos, Richard Caceres", "author_email": "ckopanos@redmob.gr, me@rchrd.net", "bugtrack_url": null, "classifiers": [], "description": "django-google-cloud-storage\n===========================\n\nGoogle Cloud Storage file backend for Django\n\nIf you run your projects on Google's appengine and you are using the django framework you might need this\nfile backend since there is no way to upload files, images, etc on appengine. Although solutions exist for\nthe amazon cloud storage i have not found a file backend for google cloud storage. This backend does work\nwith google cloud storage, although in early development. I have used it with regular file uploads and with\nfile manager solutions such as django-filer. The code as it is right now stores files for public use (i.e. a web site's images)\n\nPrerequisites\n-------------\n\nYou need to have an appengine project. This will not work as a standalone solution for non appengine django projects, since there is no authentication mechanism with the google cloud storage implemented.\n\n\n### If you want to copy the files into your repository.\n\nYou need to install the GCS client library from\nhttps://developers.google.com/appengine/docs/python/googlecloudstorageclient/download.\n\nJust run `pip install GoogleAppEngineCloudStorageClient -t <your_app_directory/lib>`, or optionally, unzip the file and copy the `src/cloudstorage` folder into your project directory.\n\nInstallation\n-------------\n\n```\npip install django-google-cloud-storage\n```\n\nOr Just copy the google folder in your project directory\n\nConfiguration\n-------------\n\nOn your django settings.py file you need to add the following settings\n\n    GOOGLE_CLOUD_STORAGE_BUCKET = '/your_bucket_name' # the name of the bucket you have created from the google cloud storage console\n    GOOGLE_CLOUD_STORAGE_URL = 'http://storage.googleapis.com/bucket' #whatever the ulr for accessing your cloud storgage bucket\n    GOOGLE_CLOUD_STORAGE_DEFAULT_CACHE_CONTROL = 'public, max-age: 7200' # default cache control headers for your files\n\nAnd finally declare the file storage backend you will use on your settings.py file\n\n    DEFAULT_FILE_STORAGE = 'django_google_cloud_storage.GoogleCloudStorage'\n\n\nCredits\n-------\n\nChristos Kopanos (@ckopanos) - source code  \nRichard Caceres (@rchrd2) - packaging into python module", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/UseAllFive/django-google-cloud-storage/tarball/0.0.2", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/UseAllFive/django-google-cloud-storage/", "keywords": "django,appengine,google,cloud storage", "license": "GNU GENERAL PUBLIC LICENSE", "maintainer": null, "maintainer_email": null, "name": "django-google-cloud-storage", "package_url": "https://pypi.org/project/django-google-cloud-storage/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-google-cloud-storage/", "project_urls": {"Download": "https://github.com/UseAllFive/django-google-cloud-storage/tarball/0.0.2", "Homepage": "https://github.com/UseAllFive/django-google-cloud-storage/"}, "release_url": "https://pypi.org/project/django-google-cloud-storage/0.0.2/", "requires_dist": null, "requires_python": null, "summary": "Google Cloud Storage file backend for Django", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Google Cloud Storage file backend for Django</p>\n<p>If you run your projects on Google\u2019s appengine and you are using the django framework you might need this\nfile backend since there is no way to upload files, images, etc on appengine. Although solutions exist for\nthe amazon cloud storage i have not found a file backend for google cloud storage. This backend does work\nwith google cloud storage, although in early development. I have used it with regular file uploads and with\nfile manager solutions such as django-filer. The code as it is right now stores files for public use (i.e. a web site\u2019s images)</p>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>You need to have an appengine project. This will not work as a standalone solution for non appengine django projects, since there is no authentication mechanism with the google cloud storage implemented.</p>\n<p>### If you want to copy the files into your repository.</p>\n<p>You need to install the GCS client library from\n<a href=\"https://developers.google.com/appengine/docs/python/googlecloudstorageclient/download\" rel=\"nofollow\">https://developers.google.com/appengine/docs/python/googlecloudstorageclient/download</a>.</p>\n<p>Just run <cite>pip install GoogleAppEngineCloudStorageClient -t &lt;your_app_directory/lib&gt;</cite>, or optionally, unzip the file and copy the <cite>src/cloudstorage</cite> folder into your project directory.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>`\npip install <span class=\"pre\">django-google-cloud-storage</span>\n`</tt></p>\n<p>Or Just copy the google folder in your project directory</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>On your django settings.py file you need to add the following settings</p>\n<blockquote>\nGOOGLE_CLOUD_STORAGE_BUCKET = \u2018/your_bucket_name\u2019 # the name of the bucket you have created from the google cloud storage console\nGOOGLE_CLOUD_STORAGE_URL = \u2018<a href=\"http://storage.googleapis.com/bucket\" rel=\"nofollow\">http://storage.googleapis.com/bucket</a>\u2019 #whatever the ulr for accessing your cloud storgage bucket\nGOOGLE_CLOUD_STORAGE_DEFAULT_CACHE_CONTROL = \u2018public, max-age: 7200\u2019 # default cache control headers for your files</blockquote>\n<p>And finally declare the file storage backend you will use on your settings.py file</p>\n<blockquote>\nDEFAULT_FILE_STORAGE = \u2018django_google_cloud_storage.GoogleCloudStorage\u2019</blockquote>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Christos Kopanos (@ckopanos) - source code\nRichard Caceres (@rchrd2) - packaging into python module</p>\n</div>\n\n          </div>"}, "last_serial": 1727486, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "2348e0594939dfff3b37e850b9c40e77", "sha256": "7c6154dda899de067b0144912c36101522055feb3589e8ef7ef9d65df6ae227e"}, "downloads": -1, "filename": "django-google-cloud-storage-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2348e0594939dfff3b37e850b9c40e77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10264, "upload_time": "2015-09-18T00:05:16", "upload_time_iso_8601": "2015-09-18T00:05:16.703689Z", "url": "https://files.pythonhosted.org/packages/52/20/9de255cc3eb8fa8e9361546e6628ffe0cb04ed559723a8682d451fd84117/django-google-cloud-storage-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2348e0594939dfff3b37e850b9c40e77", "sha256": "7c6154dda899de067b0144912c36101522055feb3589e8ef7ef9d65df6ae227e"}, "downloads": -1, "filename": "django-google-cloud-storage-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2348e0594939dfff3b37e850b9c40e77", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10264, "upload_time": "2015-09-18T00:05:16", "upload_time_iso_8601": "2015-09-18T00:05:16.703689Z", "url": "https://files.pythonhosted.org/packages/52/20/9de255cc3eb8fa8e9361546e6628ffe0cb04ed559723a8682d451fd84117/django-google-cloud-storage-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:49 2020"}