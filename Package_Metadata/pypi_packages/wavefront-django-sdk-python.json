{"info": {"author": "Wavefront by VMware", "author_email": "songhao@vmware.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Wavefront Django SDK\n\nThis SDK provides support for reporting out of the box metric, histograms and tracing from your Django based  application. That data is reported to Wavefront via proxy or direct ingestion. That data will help you understand how your application is performing in production.\n\n## Install\n\n```bash\npip install wavefront_django_sdk_python\n```\n\n## Usage\n\nConfigure *settings.py* of your application to install Django SDK as follows:\n\n ```python\n# setting.py\n\nfrom wavefront_pyformance.wavefront_reporter import WavefrontDirectReporter, WavefrontProxyReporter\nfrom wavefront_sdk.common import ApplicationTags\nfrom wavefront_django_sdk import DjangoTracing\nfrom wavefront_opentracing_sdk import reporting, WavefrontTracer\n\nINSTALLED_APPS = [\n    '...',\n    'wavefront_django_sdk',\n    '...'\n]\n \nMIDDLEWARE = [\n    'wavefront_django_sdk.middleware.WavefrontMiddleware',\n    '...'\n]\n\nSOURCE = \"{SOURCE}\"\n\nAPPLICATION_TAGS = ApplicationTags(\n    application=\"{APP_NAME}\",\n    service=\"{SERVICE_NAME}\",\n    cluster=\"{CLUSTER_NAME}\",  # Optional\n    shard=\"{SHARD_NAME},\" , # Optional\n    custom_tags={\"location\": \"Oregon\", \"env\": \"Staging\"}  # Optional\n)\n\n# Sending data via Direct Ingestion\nWF_REPORTER = WavefrontDirectReporter(\n    server=\"{ADDRESS}\",\n    token=\"{TOKEN}\",\n    reporting_interval=5,  # Optional, default value is 10 secs\n    source=SOURCE,\n    tags={\"application\": APPLICATION_TAGS.application}\n).report_minute_distribution()\n\n# Or, Sending data via Proxy\nWF_REPORTER = WavefrontProxyReporter(\n    host=\"{HOST}\",\n    port=2878,  # Optional, Wavefront Proxy running on 2878 by default\n    reporting_interval=5,  # Optional, default value is 10 secs\n    source=SOURCE,\n    tags={\"application\": APPLICATION_TAGS.application}\n).report_minute_distribution()\n\nspan_reporter = reporting.WavefrontSpanReporter(\n    client=WF_REPORTER.wavefront_client,\n    source=SOURCE,\n)\n\nOPENTRACING_TRACE_ALL = True  # Optional, default value is False\n\nOPENTRACING_TRACING = DjangoTracing(WavefrontTracer(\n    reporter=span_reporter, application_tags=APPLICATION_TAGS))\n\n ```\n\n## Out of the box metrics and histograms for your Django based application.\n\n Assume you have the following API in your Django Application:\n\n```python\n# urls.py\nfrom django.urls import path\nfrom . import views\n \nurlpatterns = [\n    path('style/<slug:id>/make', views.make_shirts, name=\"style/{id}/make\")\n]\n \n# view.py\nfrom django.http import HttpResponse\n \ndef make_shirts(request, id):\n    return HttpResponse(\"completed\", status=200)\n```\n\n### Request Gauges\n\n| Entity Name                                       | Entity Type | source | application | cluster   | service | shard   | django.resource.module | django.resource.func |\n| :------------------------------------------------ | :---------- | :----- | :---------- | :-------- | :------ | :------ | :--------------------- | :------------------- |\n| django.request.style._id_.make.GET.inflight.value | Gauge       | host-1 | Ordering    | us-west-1 | styling | primary | styling.views          | make_shirts          |\n| django.total_requests.inflight.value              | Gauge       | host-1 | Ordering    | us-west-1 | styling | primary | n/a                    | n/a                  |\n\n### Granular Response related metrics\n\n| Entity Name                                                  | Entity Type  | source             | application | cluster   | service | shard   | django.resource.module | django.resource.func |\n| :----------------------------------------------------------- | :----------- | :----------------- | :---------- | :-------- | :------ | :------ | :--------------------- | :------------------- |\n| django.response.style.\\_id_.make.GET.200.cumulative.count    | Counter      | host-1             | Ordering    | us-west-1 | styling | primary | styling.views          | make_shirts          |\n| django.response.style.\\_id_.make.GET.200.aggregated_per_shard.count | DeltaCounter | wavefront-provided | Ordering    | us-west-1 | styling | primary | styling.views          | make_shirts          |\n| django.response.style.\\_id_.make.GET.200.aggregated_per_service.count | DeltaCounter | wavefront-provided | Ordering    | us-west-1 | styling | n/a     | styling.views          | make_shirts          |\n| django.response.style.\\_id_.make.GET.200.aggregated_per_cluster.count | DeltaCounter | wavefront-provided | Ordering    | us-west-1 | n/a     | n/a     | styling.views          | make_shirts          |\n| django.response.style.\\_id_.make.GET.200.aggregated_per_application.count | DeltaCounter | wavefront-provided | Ordering    | n/a       | n/a     | n/a     | styling.views          | make_shirts          |\n\n### Granular Response related histograms\n\n| Entity Name                                                | Entity Type        | source | application | cluster   | service | shard   | django.resource.module | django.resource.func |\n| :--------------------------------------------------------- | :----------------- | :----- | :---------- | :-------- | :------ | :------ | :--------------------- | :------------------- |\n| django.response.style.\\_id_.make.summary.GET.200.latency.m | WavefrontHistogram | host-1 | Ordering    | us-west-1 | styling | primary | styling.views          | make_shirts          |\n| django.response.style.\\_id_.make.summary.GET.200.cpu_ns.m  | WavefrontHistogram | host-1 | Ordering    | us-west-1 | styling | primary | styling.views          | make_shirts          |\n\n### Overall Response related metrics\n\nThis includes all the completed requests that returned a response (i.e. success + errors).\n\n| Entity Name                                                | Entity Type  | source            | application | cluster   | service | shard   |\n| :--------------------------------------------------------- | :----------- | :---------------- | :---------- | :-------- | :------ | :------ |\n| django.response.completed.aggregated_per_source.count      | Counter      | host-1            | Ordering    | us-west-1 | styling | primary |\n| django.response.completed.aggregated_per_shard.count       | DeltaCounter | wavefont-provided | Ordering    | us-west-1 | styling | primary |\n| django.response.completed.aggregated_per_service.count     | DeltaCounter | wavefont-provided | Ordering    | us-west-1 | styling | n/a     |\n| django.response.completed.aggregated_per_cluster.count     | DeltaCounter | wavefont-provided | Ordering    | us-west-1 | n/a     | n/a     |\n| django.response.completed.aggregated_per_application.count | DeltaCounter | wavefont-provided | Ordering    | n/a       | n/a     | n/a     |\n\n### Overall Error Response related metrics\n\nThis includes all the completed requests that resulted in an error response (that is HTTP status code of 4xx or 5xx).\n\n| Entity Name                                             | Entity Type  | source            | application | cluster   | service | shard   |\n| :------------------------------------------------------ | :----------- | :---------------- | :---------- | :-------- | :------ | :------ |\n| django.response.errors.aggregated_per_source.count      | Counter      | host-1            | Ordering    | us-west-1 | styling | primary |\n| django.response.errors.aggregated_per_shard.count       | DeltaCounter | wavefont-provided | Ordering    | us-west-1 | styling | primary |\n| django.response.errors.aggregated_per_service.count     | DeltaCounter | wavefont-provided | Ordering    | us-west-1 | styling | n/a     |\n| django.response.errors.aggregated_per_cluster.count     | DeltaCounter | wavefont-provided | Ordering    | us-west-1 | n/a     | n/a     |\n| django.response.errors.aggregated_per_application.count | DeltaCounter | wavefont-provided | Ordering    | n/a       | n/a     | n/a     |\n\n### Tracing Spans\n\nEvery span will have the operation name as span name, start time in millisec along with duration in millisec. The following table includes all the rest attributes of generated tracing spans.  \n\n| Span Tag Key           | Span Tag Value                       |\n| ---------------------- | ------------------------------------ |\n| traceId                | 4a3dc181-d4ac-44bc-848b-133bb3811c31 |\n| parent                 | q908ddfe-4723-40a6-b1d3-1e85b60d9016 |\n| followsFrom            | b768ddfe-4723-40a6-b1d3-1e85b60d9016 |\n| spanId                 | c908ddfe-4723-40a6-b1d3-1e85b60d9016 |\n| component              | django                               |\n| span.kind              | server                               |\n| application            | Ordering                             |\n| service                | styling                              |\n| cluster                | us-west-1                            |\n| shard                  | primary                              |\n| location               | Oregon (*custom tag)                 |\n| env                    | Staging (*custom tag)                |\n| http.method            | GET                                  |\n| http.url               | http://{SERVER_ADDR}/style/{id}/make |\n| http.status_code       | 502                                  |\n| error                  | True                                 |\n| django.resource.func   | make_shirts                          |\n| django.resource.module | styling.views                        |", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wavefrontHQ/wavefront-django-sdk-python", "keywords": "Wavefront,Wavefront SDK,Django", "license": "Apache-2.0", "maintainer": "", "maintainer_email": "", "name": "wavefront-django-sdk-python", "package_url": "https://pypi.org/project/wavefront-django-sdk-python/", "platform": "", "project_url": "https://pypi.org/project/wavefront-django-sdk-python/", "project_urls": {"Homepage": "https://github.com/wavefrontHQ/wavefront-django-sdk-python"}, "release_url": "https://pypi.org/project/wavefront-django-sdk-python/1.0/", "requires_dist": null, "requires_python": "", "summary": "Wavefront Django SDK", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Wavefront Django SDK</h1>\n<p>This SDK provides support for reporting out of the box metric, histograms and tracing from your Django based  application. That data is reported to Wavefront via proxy or direct ingestion. That data will help you understand how your application is performing in production.</p>\n<h2>Install</h2>\n<pre>pip install wavefront_django_sdk_python\n</pre>\n<h2>Usage</h2>\n<p>Configure <em>settings.py</em> of your application to install Django SDK as follows:</p>\n<pre><span class=\"c1\"># setting.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">wavefront_pyformance.wavefront_reporter</span> <span class=\"kn\">import</span> <span class=\"n\">WavefrontDirectReporter</span><span class=\"p\">,</span> <span class=\"n\">WavefrontProxyReporter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wavefront_sdk.common</span> <span class=\"kn\">import</span> <span class=\"n\">ApplicationTags</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wavefront_django_sdk</span> <span class=\"kn\">import</span> <span class=\"n\">DjangoTracing</span>\n<span class=\"kn\">from</span> <span class=\"nn\">wavefront_opentracing_sdk</span> <span class=\"kn\">import</span> <span class=\"n\">reporting</span><span class=\"p\">,</span> <span class=\"n\">WavefrontTracer</span>\n\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"s1\">'...'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'wavefront_django_sdk'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'...'</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n   <span class=\"s1\">'wavefront_django_sdk.middleware.WavefrontMiddleware'</span><span class=\"p\">,</span>\n   <span class=\"s1\">'...'</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">SOURCE</span> <span class=\"o\">=</span> <span class=\"s2\">\"</span><span class=\"si\">{SOURCE}</span><span class=\"s2\">\"</span>\n\n<span class=\"n\">APPLICATION_TAGS</span> <span class=\"o\">=</span> <span class=\"n\">ApplicationTags</span><span class=\"p\">(</span>\n   <span class=\"n\">application</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{APP_NAME}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n   <span class=\"n\">service</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{SERVICE_NAME}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n   <span class=\"n\">cluster</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{CLUSTER_NAME}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional</span>\n   <span class=\"n\">shard</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{SHARD_NAME}</span><span class=\"s2\">,\"</span> <span class=\"p\">,</span> <span class=\"c1\"># Optional</span>\n   <span class=\"n\">custom_tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"location\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Oregon\"</span><span class=\"p\">,</span> <span class=\"s2\">\"env\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Staging\"</span><span class=\"p\">}</span>  <span class=\"c1\"># Optional</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># Sending data via Direct Ingestion</span>\n<span class=\"n\">WF_REPORTER</span> <span class=\"o\">=</span> <span class=\"n\">WavefrontDirectReporter</span><span class=\"p\">(</span>\n   <span class=\"n\">server</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{ADDRESS}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n   <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{TOKEN}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n   <span class=\"n\">reporting_interval</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional, default value is 10 secs</span>\n   <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">SOURCE</span><span class=\"p\">,</span>\n   <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"application\"</span><span class=\"p\">:</span> <span class=\"n\">APPLICATION_TAGS</span><span class=\"o\">.</span><span class=\"n\">application</span><span class=\"p\">}</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">report_minute_distribution</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Or, Sending data via Proxy</span>\n<span class=\"n\">WF_REPORTER</span> <span class=\"o\">=</span> <span class=\"n\">WavefrontProxyReporter</span><span class=\"p\">(</span>\n   <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"si\">{HOST}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n   <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">2878</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional, Wavefront Proxy running on 2878 by default</span>\n   <span class=\"n\">reporting_interval</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>  <span class=\"c1\"># Optional, default value is 10 secs</span>\n   <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">SOURCE</span><span class=\"p\">,</span>\n   <span class=\"n\">tags</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"application\"</span><span class=\"p\">:</span> <span class=\"n\">APPLICATION_TAGS</span><span class=\"o\">.</span><span class=\"n\">application</span><span class=\"p\">}</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">report_minute_distribution</span><span class=\"p\">()</span>\n\n<span class=\"n\">span_reporter</span> <span class=\"o\">=</span> <span class=\"n\">reporting</span><span class=\"o\">.</span><span class=\"n\">WavefrontSpanReporter</span><span class=\"p\">(</span>\n   <span class=\"n\">client</span><span class=\"o\">=</span><span class=\"n\">WF_REPORTER</span><span class=\"o\">.</span><span class=\"n\">wavefront_client</span><span class=\"p\">,</span>\n   <span class=\"n\">source</span><span class=\"o\">=</span><span class=\"n\">SOURCE</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">OPENTRACING_TRACE_ALL</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>  <span class=\"c1\"># Optional, default value is False</span>\n\n<span class=\"n\">OPENTRACING_TRACING</span> <span class=\"o\">=</span> <span class=\"n\">DjangoTracing</span><span class=\"p\">(</span><span class=\"n\">WavefrontTracer</span><span class=\"p\">(</span>\n   <span class=\"n\">reporter</span><span class=\"o\">=</span><span class=\"n\">span_reporter</span><span class=\"p\">,</span> <span class=\"n\">application_tags</span><span class=\"o\">=</span><span class=\"n\">APPLICATION_TAGS</span><span class=\"p\">))</span>\n</pre>\n<h2>Out of the box metrics and histograms for your Django based application.</h2>\n<p>Assume you have the following API in your Django Application:</p>\n<pre><span class=\"c1\"># urls.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.urls</span> <span class=\"kn\">import</span> <span class=\"n\">path</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.</span> <span class=\"kn\">import</span> <span class=\"n\">views</span>\n \n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"n\">path</span><span class=\"p\">(</span><span class=\"s1\">'style/&lt;slug:id&gt;/make'</span><span class=\"p\">,</span> <span class=\"n\">views</span><span class=\"o\">.</span><span class=\"n\">make_shirts</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"style/</span><span class=\"si\">{id}</span><span class=\"s2\">/make\"</span><span class=\"p\">)</span>\n<span class=\"p\">]</span>\n \n<span class=\"c1\"># view.py</span>\n<span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n \n<span class=\"k\">def</span> <span class=\"nf\">make_shirts</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"s2\">\"completed\"</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n</pre>\n<h3>Request Gauges</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Entity Name</th>\n<th align=\"left\">Entity Type</th>\n<th align=\"left\">source</th>\n<th align=\"left\">application</th>\n<th align=\"left\">cluster</th>\n<th align=\"left\">service</th>\n<th align=\"left\">shard</th>\n<th align=\"left\">django.resource.module</th>\n<th align=\"left\">django.resource.func</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">django.request.style.<em>id</em>.make.GET.inflight.value</td>\n<td align=\"left\">Gauge</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr>\n<tr>\n<td align=\"left\">django.total_requests.inflight.value</td>\n<td align=\"left\">Gauge</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n</tr></tbody></table>\n<h3>Granular Response related metrics</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Entity Name</th>\n<th align=\"left\">Entity Type</th>\n<th align=\"left\">source</th>\n<th align=\"left\">application</th>\n<th align=\"left\">cluster</th>\n<th align=\"left\">service</th>\n<th align=\"left\">shard</th>\n<th align=\"left\">django.resource.module</th>\n<th align=\"left\">django.resource.func</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">django.response.style._id_.make.GET.200.cumulative.count</td>\n<td align=\"left\">Counter</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.style._id_.make.GET.200.aggregated_per_shard.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefront-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.style._id_.make.GET.200.aggregated_per_service.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefront-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.style._id_.make.GET.200.aggregated_per_cluster.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefront-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.style._id_.make.GET.200.aggregated_per_application.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefront-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr></tbody></table>\n<h3>Granular Response related histograms</h3>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Entity Name</th>\n<th align=\"left\">Entity Type</th>\n<th align=\"left\">source</th>\n<th align=\"left\">application</th>\n<th align=\"left\">cluster</th>\n<th align=\"left\">service</th>\n<th align=\"left\">shard</th>\n<th align=\"left\">django.resource.module</th>\n<th align=\"left\">django.resource.func</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">django.response.style._id_.make.summary.GET.200.latency.m</td>\n<td align=\"left\">WavefrontHistogram</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.style._id_.make.summary.GET.200.cpu_ns.m</td>\n<td align=\"left\">WavefrontHistogram</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n<td align=\"left\">styling.views</td>\n<td align=\"left\">make_shirts</td>\n</tr></tbody></table>\n<h3>Overall Response related metrics</h3>\n<p>This includes all the completed requests that returned a response (i.e. success + errors).</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Entity Name</th>\n<th align=\"left\">Entity Type</th>\n<th align=\"left\">source</th>\n<th align=\"left\">application</th>\n<th align=\"left\">cluster</th>\n<th align=\"left\">service</th>\n<th align=\"left\">shard</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">django.response.completed.aggregated_per_source.count</td>\n<td align=\"left\">Counter</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.completed.aggregated_per_shard.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.completed.aggregated_per_service.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">n/a</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.completed.aggregated_per_cluster.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.completed.aggregated_per_application.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n</tr></tbody></table>\n<h3>Overall Error Response related metrics</h3>\n<p>This includes all the completed requests that resulted in an error response (that is HTTP status code of 4xx or 5xx).</p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Entity Name</th>\n<th align=\"left\">Entity Type</th>\n<th align=\"left\">source</th>\n<th align=\"left\">application</th>\n<th align=\"left\">cluster</th>\n<th align=\"left\">service</th>\n<th align=\"left\">shard</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">django.response.errors.aggregated_per_source.count</td>\n<td align=\"left\">Counter</td>\n<td align=\"left\">host-1</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.errors.aggregated_per_shard.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">primary</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.errors.aggregated_per_service.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">styling</td>\n<td align=\"left\">n/a</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.errors.aggregated_per_cluster.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">us-west-1</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n</tr>\n<tr>\n<td align=\"left\">django.response.errors.aggregated_per_application.count</td>\n<td align=\"left\">DeltaCounter</td>\n<td align=\"left\">wavefont-provided</td>\n<td align=\"left\">Ordering</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n<td align=\"left\">n/a</td>\n</tr></tbody></table>\n<h3>Tracing Spans</h3>\n<p>Every span will have the operation name as span name, start time in millisec along with duration in millisec. The following table includes all the rest attributes of generated tracing spans.</p>\n<table>\n<thead>\n<tr>\n<th>Span Tag Key</th>\n<th>Span Tag Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>traceId</td>\n<td>4a3dc181-d4ac-44bc-848b-133bb3811c31</td>\n</tr>\n<tr>\n<td>parent</td>\n<td>q908ddfe-4723-40a6-b1d3-1e85b60d9016</td>\n</tr>\n<tr>\n<td>followsFrom</td>\n<td>b768ddfe-4723-40a6-b1d3-1e85b60d9016</td>\n</tr>\n<tr>\n<td>spanId</td>\n<td>c908ddfe-4723-40a6-b1d3-1e85b60d9016</td>\n</tr>\n<tr>\n<td>component</td>\n<td>django</td>\n</tr>\n<tr>\n<td>span.kind</td>\n<td>server</td>\n</tr>\n<tr>\n<td>application</td>\n<td>Ordering</td>\n</tr>\n<tr>\n<td>service</td>\n<td>styling</td>\n</tr>\n<tr>\n<td>cluster</td>\n<td>us-west-1</td>\n</tr>\n<tr>\n<td>shard</td>\n<td>primary</td>\n</tr>\n<tr>\n<td>location</td>\n<td>Oregon (*custom tag)</td>\n</tr>\n<tr>\n<td>env</td>\n<td>Staging (*custom tag)</td>\n</tr>\n<tr>\n<td>http.method</td>\n<td>GET</td>\n</tr>\n<tr>\n<td>http.url</td>\n<td>http://{SERVER_ADDR}/style/{id}/make</td>\n</tr>\n<tr>\n<td>http.status_code</td>\n<td>502</td>\n</tr>\n<tr>\n<td>error</td>\n<td>True</td>\n</tr>\n<tr>\n<td>django.resource.func</td>\n<td>make_shirts</td>\n</tr>\n<tr>\n<td>django.resource.module</td>\n<td>styling.views</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 5930364, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "46233adefdb6fe3bb35dcd9f8c47df49", "sha256": "0346ec6e9291e2dca593a8da7ff5b89bd1500b942dc4ef5a6252f4b4a096e083"}, "downloads": -1, "filename": "wavefront-django-sdk-python-1.0.tar.gz", "has_sig": false, "md5_digest": "46233adefdb6fe3bb35dcd9f8c47df49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9426, "upload_time": "2019-10-04T22:08:17", "upload_time_iso_8601": "2019-10-04T22:08:17.702307Z", "url": "https://files.pythonhosted.org/packages/2a/e4/64785dc36b7c82bd1795edd74d103eabf387b5265f6f864cb12c1ff6b09f/wavefront-django-sdk-python-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "46233adefdb6fe3bb35dcd9f8c47df49", "sha256": "0346ec6e9291e2dca593a8da7ff5b89bd1500b942dc4ef5a6252f4b4a096e083"}, "downloads": -1, "filename": "wavefront-django-sdk-python-1.0.tar.gz", "has_sig": false, "md5_digest": "46233adefdb6fe3bb35dcd9f8c47df49", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9426, "upload_time": "2019-10-04T22:08:17", "upload_time_iso_8601": "2019-10-04T22:08:17.702307Z", "url": "https://files.pythonhosted.org/packages/2a/e4/64785dc36b7c82bd1795edd74d103eabf387b5265f6f864cb12c1ff6b09f/wavefront-django-sdk-python-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:31:58 2020"}