{"info": {"author": "Behoston", "author_email": "mlegiecki@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Flask/Sanic error cats (and dogs)\n\nExtension that allows you to return error cats instead of regular error pages.\n\nExtension uses:\n\n- https://http.cat/\n- https://httpstatusdogs.com/\n\n\n\n## Usage\n\n### Flask\n\n```python\nfrom error_cats import FlaskErrorCats\nfrom flask import Flask\n\napp = Flask(__name__)\nFlaskErrorCats(app, status_codes=set(range(0, 600)), animal='dog')\n\n\n@app.route('/<int:status_code>')\ndef status_code_view(status_code):\n    return '', status_code\n\n\nif __name__ == '__main__':\n    app.run()\n\n```\n\n\n### Sanic\n\n```python\nfrom error_cats import SanicErrorCats\nfrom sanic import Sanic\nfrom sanic.response import json\n\napp = Sanic()\nSanicErrorCats(app, status_codes=set(range(0, 600)))\n\n\n@app.route('/<status_code:int>')\nasync def status_code_view(request, status_code):\n    return json('', status=status_code)\n\n\nif __name__ == '__main__':\n    app.run()\n```\n\n## Available parameters\n\n\n| param | default | value |\n|---|---|---|\n| `app` | `None` (can be configured later) | Web application (Flask or Sanic) |\n| `animal` | `cat` | Available values: `cat`, `dog` |\n| `status_codes` | `400...599` | Container with status codes that should be translated into cats |\n| `simple_html_template` | `...` | Simple python format string (html). Should contain `{status_cde}` (int) and `{image}` (url) |\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Behoston/error-cats", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Error-Cats", "package_url": "https://pypi.org/project/Error-Cats/", "platform": "any", "project_url": "https://pypi.org/project/Error-Cats/", "project_urls": {"Homepage": "https://github.com/Behoston/error-cats"}, "release_url": "https://pypi.org/project/Error-Cats/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Extension to return cats! Works with Flask and Sanic.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Flask/Sanic error cats (and dogs)</h1>\n<p>Extension that allows you to return error cats instead of regular error pages.</p>\n<p>Extension uses:</p>\n<ul>\n<li><a href=\"https://http.cat/\" rel=\"nofollow\">https://http.cat/</a></li>\n<li><a href=\"https://httpstatusdogs.com/\" rel=\"nofollow\">https://httpstatusdogs.com/</a></li>\n</ul>\n<h2>Usage</h2>\n<h3>Flask</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">error_cats</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskErrorCats</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">FlaskErrorCats</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">status_codes</span><span class=\"o\">=</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">)),</span> <span class=\"n\">animal</span><span class=\"o\">=</span><span class=\"s1\">'dog'</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;int:status_code&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">status_code_view</span><span class=\"p\">(</span><span class=\"n\">status_code</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">status_code</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Sanic</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">error_cats</span> <span class=\"kn\">import</span> <span class=\"n\">SanicErrorCats</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic</span> <span class=\"kn\">import</span> <span class=\"n\">Sanic</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sanic.response</span> <span class=\"kn\">import</span> <span class=\"n\">json</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Sanic</span><span class=\"p\">()</span>\n<span class=\"n\">SanicErrorCats</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">,</span> <span class=\"n\">status_codes</span><span class=\"o\">=</span><span class=\"nb\">set</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">600</span><span class=\"p\">)))</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/&lt;status_code:int&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">status_code_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">status_code</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">json</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"n\">status_code</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h2>Available parameters</h2>\n<table>\n<thead>\n<tr>\n<th>param</th>\n<th>default</th>\n<th>value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>app</code></td>\n<td><code>None</code> (can be configured later)</td>\n<td>Web application (Flask or Sanic)</td>\n</tr>\n<tr>\n<td><code>animal</code></td>\n<td><code>cat</code></td>\n<td>Available values: <code>cat</code>, <code>dog</code></td>\n</tr>\n<tr>\n<td><code>status_codes</code></td>\n<td><code>400...599</code></td>\n<td>Container with status codes that should be translated into cats</td>\n</tr>\n<tr>\n<td><code>simple_html_template</code></td>\n<td><code>...</code></td>\n<td>Simple python format string (html). Should contain <code>{status_cde}</code> (int) and <code>{image}</code> (url)</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 4775237, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "44ec4d99faa03dabf60ff3acb851bf72", "sha256": "75558dfac489c157872fde9222c3c28df26feb2aa5e39a569389c89d6fdbe36d"}, "downloads": -1, "filename": "Error_Cats-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "44ec4d99faa03dabf60ff3acb851bf72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3657, "upload_time": "2019-02-03T13:01:49", "upload_time_iso_8601": "2019-02-03T13:01:49.276738Z", "url": "https://files.pythonhosted.org/packages/2e/71/2a5be3d0f0ffb8af390e0f7a1f0b6dc36755081a1e1c8b80df8ebd94fe82/Error_Cats-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "451ac4536e4e6b6283c9e21cc8cbef54", "sha256": "9c28fb153ad6624e52047a7cb0e32df7a3cd419c1b64cc3289cfb9accc5fde36"}, "downloads": -1, "filename": "Error Cats-0.0.1.tar.gz", "has_sig": false, "md5_digest": "451ac4536e4e6b6283c9e21cc8cbef54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2603, "upload_time": "2019-02-03T13:01:51", "upload_time_iso_8601": "2019-02-03T13:01:51.329878Z", "url": "https://files.pythonhosted.org/packages/cb/ec/364ed8ee387a934e8539d3af64171377c3ef6b83ba87ad4a63ad792c8da8/Error%20Cats-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "afae358621e0be3fa784d1c678d34b35", "sha256": "696e731b307585ee3309e3de0afdea83f3f2b71f8899f6bf3576d3788d8af559"}, "downloads": -1, "filename": "Error_Cats-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "afae358621e0be3fa784d1c678d34b35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3644, "upload_time": "2019-02-03T17:25:40", "upload_time_iso_8601": "2019-02-03T17:25:40.190104Z", "url": "https://files.pythonhosted.org/packages/ca/a4/112ae41c12910d3ee61c9c10954d0684a4dd97d35a57d6bc8a52a04245e0/Error_Cats-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d49e7de7ddf68696e99088240598eedf", "sha256": "597b5a01892e163d893570d9b9ea5314b820bd3ee262ee226af7b396ec72916c"}, "downloads": -1, "filename": "Error Cats-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d49e7de7ddf68696e99088240598eedf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2679, "upload_time": "2019-02-03T17:25:41", "upload_time_iso_8601": "2019-02-03T17:25:41.370350Z", "url": "https://files.pythonhosted.org/packages/34/7f/6a70f94adde42152b31720d49530ea4c6d9a36ea696a5ad34ed7a35de441/Error%20Cats-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afae358621e0be3fa784d1c678d34b35", "sha256": "696e731b307585ee3309e3de0afdea83f3f2b71f8899f6bf3576d3788d8af559"}, "downloads": -1, "filename": "Error_Cats-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "afae358621e0be3fa784d1c678d34b35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3644, "upload_time": "2019-02-03T17:25:40", "upload_time_iso_8601": "2019-02-03T17:25:40.190104Z", "url": "https://files.pythonhosted.org/packages/ca/a4/112ae41c12910d3ee61c9c10954d0684a4dd97d35a57d6bc8a52a04245e0/Error_Cats-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d49e7de7ddf68696e99088240598eedf", "sha256": "597b5a01892e163d893570d9b9ea5314b820bd3ee262ee226af7b396ec72916c"}, "downloads": -1, "filename": "Error Cats-0.1.0.tar.gz", "has_sig": false, "md5_digest": "d49e7de7ddf68696e99088240598eedf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2679, "upload_time": "2019-02-03T17:25:41", "upload_time_iso_8601": "2019-02-03T17:25:41.370350Z", "url": "https://files.pythonhosted.org/packages/34/7f/6a70f94adde42152b31720d49530ea4c6d9a36ea696a5ad34ed7a35de441/Error%20Cats-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:45 2020"}