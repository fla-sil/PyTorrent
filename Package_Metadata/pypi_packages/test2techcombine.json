{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# techcombine-framework\n\n## Installation for everyone\n```bash\n$pip install techcombine\n```\n\n## Installation for Developer\n```bash\n$pip install techcombine[dev]\n```\nNow you can test this package by using ```pytest``` or ```pytest direstory/```, For example\n```bash\n$pytest\n# or\n$pytest .\\techcombine\\tests\\\n```\n\n## Installation from sources\n```bash\n(env)$python setup.py install\n```\n\n## manual\n### class LINENotify\n**notify_hook():<br>**\n    Make webhook to Line Notify from your server<br>\n    return: request\n```python\nfrom techcombine.utils import generate_notify_data\nLINENotify.notify_hook(subtitle, data=None: dict, **kwargs)\n\n# When you use this method you need to defind variable in django.conf settings\nLINE_NOTIFY_TOKEN = some sting + 'access_token'\nLINE_NOTIFY_API = 'https://notify-api.line.me/api/notify'\n\n# Data example\ndata = {\n  \"Order ID\": order.slug,\n  \"email\": order.email,\n  \"first_name\": order.first_name,\n  \"phone_number\": order.phone_number,\n  \"created_at\": order.created_at,\n} # Or use generate_notify_data(ojb)\n```\nparameter:<br>\n- subtitle: (str) Is subtitle of data hook to line notify chat\n- data: (default=None/DictType only) Is dict of your all data to show in mail\n- Or using **dict\n\n**generate_notify_data():<br>**\n    Generate dict data from django models object.\n    return: dict data format for using in notify_hook()\n```python\nfrom techcombine.utils import generate_notify_data\ndata = generate_notify_data(ojb, key_type=\"id\", header=None)\n```\nparameter:<br>\n- obj: (Django models object) field['obj.id or obj.slug', 'name', 'email', 'created_at', 'url'] ```#if header=None: data will doesn't have url field```\n- key_type: (str) Type of object key from ID or Slug\n- header: (str) For fill link url of object", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chinnawatp/techcombine-framework", "keywords": "", "license": "MIT", "maintainer": "Techcombine developer team", "maintainer_email": "kittipat.phongsak@gmail.com", "name": "test2techcombine", "package_url": "https://pypi.org/project/test2techcombine/", "platform": "any", "project_url": "https://pypi.org/project/test2techcombine/", "project_urls": {"Homepage": "https://github.com/chinnawatp/techcombine-framework"}, "release_url": "https://pypi.org/project/test2techcombine/0.0.5/", "requires_dist": null, "requires_python": ">=3.6.1", "summary": "Techcombine frameworl for ecommerce", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>techcombine-framework</h1>\n<h2>Installation for everyone</h2>\n<pre><span class=\"nv\">$pip</span> install techcombine\n</pre>\n<h2>Installation for Developer</h2>\n<pre><span class=\"nv\">$pip</span> install techcombine<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<p>Now you can test this package by using <code>pytest</code> or <code>pytest direstory/</code>, For example</p>\n<pre><span class=\"nv\">$pytest</span>\n<span class=\"c1\"># or</span>\n<span class=\"nv\">$pytest</span> .<span class=\"se\">\\t</span>echcombine<span class=\"se\">\\t</span>ests<span class=\"se\">\\</span>\n</pre>\n<h2>Installation from sources</h2>\n<pre><span class=\"o\">(</span>env<span class=\"o\">)</span><span class=\"nv\">$python</span> setup.py install\n</pre>\n<h2>manual</h2>\n<h3>class LINENotify</h3>\n<p><strong>notify_hook():<br></strong>\nMake webhook to Line Notify from your server<br>\nreturn: request</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">techcombine.utils</span> <span class=\"kn\">import</span> <span class=\"n\">generate_notify_data</span>\n<span class=\"n\">LINENotify</span><span class=\"o\">.</span><span class=\"n\">notify_hook</span><span class=\"p\">(</span><span class=\"n\">subtitle</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">:</span> <span class=\"nb\">dict</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># When you use this method you need to defind variable in django.conf settings</span>\n<span class=\"n\">LINE_NOTIFY_TOKEN</span> <span class=\"o\">=</span> <span class=\"n\">some</span> <span class=\"n\">sting</span> <span class=\"o\">+</span> <span class=\"s1\">'access_token'</span>\n<span class=\"n\">LINE_NOTIFY_API</span> <span class=\"o\">=</span> <span class=\"s1\">'https://notify-api.line.me/api/notify'</span>\n\n<span class=\"c1\"># Data example</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"s2\">\"Order ID\"</span><span class=\"p\">:</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">slug</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">email</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"first_name\"</span><span class=\"p\">:</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">first_name</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"phone_number\"</span><span class=\"p\">:</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">phone_number</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"created_at\"</span><span class=\"p\">:</span> <span class=\"n\">order</span><span class=\"o\">.</span><span class=\"n\">created_at</span><span class=\"p\">,</span>\n<span class=\"p\">}</span> <span class=\"c1\"># Or use generate_notify_data(ojb)</span>\n</pre>\n<p>parameter:<br></p>\n<ul>\n<li>subtitle: (str) Is subtitle of data hook to line notify chat</li>\n<li>data: (default=None/DictType only) Is dict of your all data to show in mail</li>\n<li>Or using **dict</li>\n</ul>\n<p><strong>generate_notify_data():<br></strong>\nGenerate dict data from django models object.\nreturn: dict data format for using in notify_hook()</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">techcombine.utils</span> <span class=\"kn\">import</span> <span class=\"n\">generate_notify_data</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">generate_notify_data</span><span class=\"p\">(</span><span class=\"n\">ojb</span><span class=\"p\">,</span> <span class=\"n\">key_type</span><span class=\"o\">=</span><span class=\"s2\">\"id\"</span><span class=\"p\">,</span> <span class=\"n\">header</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>parameter:<br></p>\n<ul>\n<li>obj: (Django models object) field['obj.id or obj.slug', 'name', 'email', 'created_at', 'url'] <code>#if header=None: data will doesn't have url field</code></li>\n<li>key_type: (str) Type of object key from ID or Slug</li>\n<li>header: (str) For fill link url of object</li>\n</ul>\n\n          </div>"}, "last_serial": 6714986, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "5d404f261dfb5dc551b466ac8c7c40bb", "sha256": "8560bbe89b457e9de6f728657efd9bee4e2f60d56fb624d1f972eb969f3e2b65"}, "downloads": -1, "filename": "test2techcombine-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5d404f261dfb5dc551b466ac8c7c40bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 2090, "upload_time": "2020-02-26T07:56:25", "upload_time_iso_8601": "2020-02-26T07:56:25.734786Z", "url": "https://files.pythonhosted.org/packages/b5/cb/90ab838ea50456afcb811cbe13f6c6769ac8609997ec8e7c3b7bf33d707f/test2techcombine-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5817e2aa1db719cf0450b264eb8c7329", "sha256": "56f231b1e5c52de607a39fcc84ef2dcf34e00adfdcdadc3bb77a20c752d1f99a"}, "downloads": -1, "filename": "test2techcombine-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5817e2aa1db719cf0450b264eb8c7329", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 2092, "upload_time": "2020-02-26T07:58:26", "upload_time_iso_8601": "2020-02-26T07:58:26.844119Z", "url": "https://files.pythonhosted.org/packages/b9/49/a434aa9f8a54f91f51e6f9a018f2b5ffd9c5bc883a8fb62702c27e0e2ca7/test2techcombine-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "78949c759609a11440cc009f0f667417", "sha256": "eb9c4e30970d077bb8ef1fa8f354c67f9194718770487b791e74b61b8d81433b"}, "downloads": -1, "filename": "test2techcombine-0.0.3.tar.gz", "has_sig": false, "md5_digest": "78949c759609a11440cc009f0f667417", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 2287, "upload_time": "2020-02-26T10:06:45", "upload_time_iso_8601": "2020-02-26T10:06:45.729405Z", "url": "https://files.pythonhosted.org/packages/20/f8/55397ab3636cd33770399e17f34fd84c10d44b4aab1a4a27f225c28a326d/test2techcombine-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "21d0355950648ae667298705b780dc7c", "sha256": "e275abda5a5fcc369f5376efbb8133757350682ff3e176e86fa30a7eb5c3c1f6"}, "downloads": -1, "filename": "test2techcombine-0.0.4.tar.gz", "has_sig": false, "md5_digest": "21d0355950648ae667298705b780dc7c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 2595, "upload_time": "2020-02-26T12:24:35", "upload_time_iso_8601": "2020-02-26T12:24:35.237035Z", "url": "https://files.pythonhosted.org/packages/43/fa/1470ae4bf7c63fbbdfa579b832c2ee58ec8e02796aaad511a56d635e9c11/test2techcombine-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "5722de0d0bd4baf474292205d82b71e2", "sha256": "0b76fd97264f2314cefd81840729ca93b61b88d5d39bc8fd9eaceaefdeac9adc"}, "downloads": -1, "filename": "test2techcombine-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5722de0d0bd4baf474292205d82b71e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 6022, "upload_time": "2020-02-27T16:38:06", "upload_time_iso_8601": "2020-02-27T16:38:06.235096Z", "url": "https://files.pythonhosted.org/packages/bc/8f/118ced93e3c6cd3cdca148a007c31a7f2f6cd1190632101be2699743878c/test2techcombine-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5722de0d0bd4baf474292205d82b71e2", "sha256": "0b76fd97264f2314cefd81840729ca93b61b88d5d39bc8fd9eaceaefdeac9adc"}, "downloads": -1, "filename": "test2techcombine-0.0.5.tar.gz", "has_sig": false, "md5_digest": "5722de0d0bd4baf474292205d82b71e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 6022, "upload_time": "2020-02-27T16:38:06", "upload_time_iso_8601": "2020-02-27T16:38:06.235096Z", "url": "https://files.pythonhosted.org/packages/bc/8f/118ced93e3c6cd3cdca148a007c31a7f2f6cd1190632101be2699743878c/test2techcombine-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:40 2020"}