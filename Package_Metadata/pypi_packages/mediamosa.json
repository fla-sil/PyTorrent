{"info": {"author": "UGent Portaal Team", "author_email": "portaal-tech@ugent.be", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Multimedia :: Video", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "================\npython-mediamosa\n================\n\nmediamosa is a python wrapper for accessing a mediamosa\n(http://www.mediamosa.org) api.\n\n------------\nInstallation\n------------\n\nInstall mediamosa as follows:\n\n::\n\n   pip install mediamosa\n\n---------------\nGetting Started\n---------------\n\nStart by creating a connection to a mediamosa api.\n\n.. code:: python\n\n    >>> from mediamosa.api import MediaMosaAPI\n    >>> api = MediaMosaAPI('http://apivideo.ugent.be')\n    >>> api.authenticate('USERNAME', 'PASSWORD')\n    True\n\nthe .authentication() method returns a boolean indicating if the\nusername and password were accepted by the server.\n\nYou can now query your assets\n\n.. code:: python\n\n    >>> api.asset_list()\n    [<mediamosa.resources.Asset GAKkgcmMPaIZdMl3dczqUESA>,\n    <mediamosa.resources.Asset KWdqPljZge6ESLWbPdEEcG0j>,\n    <mediamosa.resources.Asset d1bbGsmEjXmeSfM8PGT5uRjB>,\n    <mediamosa.resources.Asset uKgRwHGTidLLiTiSUQu26buN>,\n    <mediamosa.resources.Asset x2XRGwefXfNvoRNYLJjfWS5O>,\n    <mediamosa.resources.Asset ONZDQiGfhTf8OcsKumKISpOy>,\n    <mediamosa.resources.Asset A1lkCZclpXaWSLE9RPK4Pthk>,\n    <mediamosa.resources.Asset A2TmfbWMcMU6r8jWHOS2JEsf>,\n    <mediamosa.resources.Asset B7zsZXLvnnLCCIyJOrCQxxRl>,\n    <mediamosa.resources.Asset C2VNSEfaeMc7ToOeirEqiztz>, ...]\n\nEach direct child of an <item> can be accessed as an attribute:\n\n.. code:: python\n\n    >>> asset = api.asset_list()[0]\n    >>> asset.dublin_core.get('title')\n    u'big buck bunny '\n\nYou can also indiviually request specific assets by querying the api\nobject:\n\n.. code:: python\n\n    >>> api.asset('ONZDQiGfhTf8OcsKumKISpOy')\n    <mediamosa.resources.Asset ONZDQiGfhTf8OcsKumKISpOy>\n\n\nMediafiles connected to the asset can also be queried:\n\n.. code:: python\n\n    >>> asset.list_mediafiles()\n    [<mediamosa.resources.Mediafile (mp4) Yb8peCXknRXIhimONUUzkuBT>]\n    >>> mediafile = asset.list_mediafiles()[0]\n    >>> mediafile.filename\n    u'bigbuckbunny30sec.mp4'\n    >>> mediafile.is_downloadable\n    True\n\nYou can also individually request mediafiles by querying the api\nobject:\n\n.. code:: python\n\n    >>> api.mediafile('Yb8peCXknRXIhimONUUzkuBT')\n    <mediamosa.resources.Mediafile (mp4) Yb8peCXknRXIhimONUUzkuBT>\n\n\nPlaying a mediafile is done as follows:\n\n.. code:: python\n\n    >>> mediafile.play()\n    u'<script type=\"text/javascript\">...'\n\nThis will by default return javascript code necessary to play the\nmediafile.\n\n------\nErrors\n------\n\nIf anything goes wrong with executing the queries, the API will throw\na mediamosa.api.ApiException.\n\n-------------------------\nBugs and Feature requests\n-------------------------\n\n.. warning::\n   The API wrapper is in early stages of development and will require a few\n   more iterations to be considered stable\n\nFor help, issues and feature requests, please go to http://www.github.com/UGentPortaal/python-mediamosa.\n\n------------\nContributing\n------------\n\nPull requests may be submitted to the develop branch at our github\nproject. Make sure the code and functionality are sufficiently\ndocumented.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/UGentPortaal/python-mediamosa", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "mediamosa", "package_url": "https://pypi.org/project/mediamosa/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mediamosa/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/UGentPortaal/python-mediamosa"}, "release_url": "https://pypi.org/project/mediamosa/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "A high-level API interface for MediaMosa.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>mediamosa is a python wrapper for accessing a mediamosa\n(<a href=\"http://www.mediamosa.org\" rel=\"nofollow\">http://www.mediamosa.org</a>) api.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install mediamosa as follows:</p>\n<pre>pip install mediamosa\n</pre>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>Start by creating a connection to a mediamosa api.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">mediamosa.api</span> <span class=\"kn\">import</span> <span class=\"n\">MediaMosaAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">MediaMosaAPI</span><span class=\"p\">(</span><span class=\"s1\">'http://apivideo.ugent.be'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">authenticate</span><span class=\"p\">(</span><span class=\"s1\">'USERNAME'</span><span class=\"p\">,</span> <span class=\"s1\">'PASSWORD'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>the .authentication() method returns a boolean indicating if the\nusername and password were accepted by the server.</p>\n<p>You can now query your assets</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">asset_list</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">GAKkgcmMPaIZdMl3dczqUESA</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">KWdqPljZge6ESLWbPdEEcG0j</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">d1bbGsmEjXmeSfM8PGT5uRjB</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">uKgRwHGTidLLiTiSUQu26buN</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">x2XRGwefXfNvoRNYLJjfWS5O</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">ONZDQiGfhTf8OcsKumKISpOy</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">A1lkCZclpXaWSLE9RPK4Pthk</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">A2TmfbWMcMU6r8jWHOS2JEsf</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">B7zsZXLvnnLCCIyJOrCQxxRl</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">C2VNSEfaeMc7ToOeirEqiztz</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">]</span>\n</pre>\n<p>Each direct child of an &lt;item&gt; can be accessed as an attribute:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">asset</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">asset_list</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">dublin_core</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'title'</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'big buck bunny '</span>\n</pre>\n<p>You can also indiviually request specific assets by querying the api\nobject:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">asset</span><span class=\"p\">(</span><span class=\"s1\">'ONZDQiGfhTf8OcsKumKISpOy'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Asset</span> <span class=\"n\">ONZDQiGfhTf8OcsKumKISpOy</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Mediafiles connected to the asset can also be queried:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">list_mediafiles</span><span class=\"p\">()</span>\n<span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Mediafile</span> <span class=\"p\">(</span><span class=\"n\">mp4</span><span class=\"p\">)</span> <span class=\"n\">Yb8peCXknRXIhimONUUzkuBT</span><span class=\"o\">&gt;</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mediafile</span> <span class=\"o\">=</span> <span class=\"n\">asset</span><span class=\"o\">.</span><span class=\"n\">list_mediafiles</span><span class=\"p\">()[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mediafile</span><span class=\"o\">.</span><span class=\"n\">filename</span>\n<span class=\"sa\">u</span><span class=\"s1\">'bigbuckbunny30sec.mp4'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mediafile</span><span class=\"o\">.</span><span class=\"n\">is_downloadable</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>You can also individually request mediafiles by querying the api\nobject:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">mediafile</span><span class=\"p\">(</span><span class=\"s1\">'Yb8peCXknRXIhimONUUzkuBT'</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">mediamosa</span><span class=\"o\">.</span><span class=\"n\">resources</span><span class=\"o\">.</span><span class=\"n\">Mediafile</span> <span class=\"p\">(</span><span class=\"n\">mp4</span><span class=\"p\">)</span> <span class=\"n\">Yb8peCXknRXIhimONUUzkuBT</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Playing a mediafile is done as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mediafile</span><span class=\"o\">.</span><span class=\"n\">play</span><span class=\"p\">()</span>\n<span class=\"sa\">u</span><span class=\"s1\">'&lt;script type=\"text/javascript\"&gt;...'</span>\n</pre>\n<p>This will by default return javascript code necessary to play the\nmediafile.</p>\n</div>\n<div id=\"errors\">\n<h2>Errors</h2>\n<p>If anything goes wrong with executing the queries, the API will throw\na mediamosa.api.ApiException.</p>\n</div>\n<div id=\"bugs-and-feature-requests\">\n<h2>Bugs and Feature requests</h2>\n<div>\n<p>Warning</p>\n<p>The API wrapper is in early stages of development and will require a few\nmore iterations to be considered stable</p>\n</div>\n<p>For help, issues and feature requests, please go to <a href=\"http://www.github.com/UGentPortaal/python-mediamosa\" rel=\"nofollow\">http://www.github.com/UGentPortaal/python-mediamosa</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Pull requests may be submitted to the develop branch at our github\nproject. Make sure the code and functionality are sufficiently\ndocumented.</p>\n</div>\n\n          </div>"}, "last_serial": 971054, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2dc34b72e879419bb46d8dd9072a6830", "sha256": "2c65a3722bead9564cac8f2249c445981234b66bb65721ced2e7cd984ff6ff2f"}, "downloads": -1, "filename": "mediamosa-0.0.1.tar.gz", "has_sig": false, "md5_digest": "2dc34b72e879419bb46d8dd9072a6830", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12592, "upload_time": "2013-01-21T09:38:39", "upload_time_iso_8601": "2013-01-21T09:38:39.457552Z", "url": "https://files.pythonhosted.org/packages/f5/5e/cf93c5f334c0accb1166f368e879a29a4318de101d5395e600e7b0c2b05c/mediamosa-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5c997de62a845fa8306301775c6ac1e3", "sha256": "831d7456a4943d0e36b431a42093649ad015ee6c8495cb67fb6fb4b667ea422a"}, "downloads": -1, "filename": "mediamosa-0.0.2.tar.gz", "has_sig": false, "md5_digest": "5c997de62a845fa8306301775c6ac1e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12577, "upload_time": "2013-01-21T10:08:05", "upload_time_iso_8601": "2013-01-21T10:08:05.505601Z", "url": "https://files.pythonhosted.org/packages/54/ec/5cf56d64dc0e8c7ea4cc59bca2097d61b100bf28b6283fd1fe8a87b77164/mediamosa-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "44cfec0b29048cda5beccad519293e01", "sha256": "c87c731cdb3e712f045248d7164d09e50fdb5582ab6226aa4e4beec5343f382b"}, "downloads": -1, "filename": "mediamosa-0.0.3.tar.gz", "has_sig": false, "md5_digest": "44cfec0b29048cda5beccad519293e01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12627, "upload_time": "2013-01-22T10:12:09", "upload_time_iso_8601": "2013-01-22T10:12:09.388285Z", "url": "https://files.pythonhosted.org/packages/b0/00/a49c68d6f3c556dea6119909ec7fa4de36e5a725ba7f4f02201b0f5280f5/mediamosa-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6835cafed23080ca3b5791e87e30c8d3", "sha256": "5750769e9c21db645e14ede8d9d387883fcfcbb447a1669be87e6b18d85984b5"}, "downloads": -1, "filename": "mediamosa-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6835cafed23080ca3b5791e87e30c8d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12940, "upload_time": "2013-04-12T14:27:43", "upload_time_iso_8601": "2013-04-12T14:27:43.624076Z", "url": "https://files.pythonhosted.org/packages/e9/52/301312d3f314d986d68d0eb782acf6b284f5cbb7538e7b507b026a687ba1/mediamosa-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "3c5729907e8cb52efa783e6381c518cf", "sha256": "9a3ce8642cb1b66901a852263468fce29fd37cc8c02b81c15bdd815807ebecb7"}, "downloads": -1, "filename": "mediamosa-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3c5729907e8cb52efa783e6381c518cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13013, "upload_time": "2013-04-12T14:45:32", "upload_time_iso_8601": "2013-04-12T14:45:32.932896Z", "url": "https://files.pythonhosted.org/packages/2f/74/1bc381d8239f67b3dac14c5c152e030ba519b8b9e72e2a14645e995e6e69/mediamosa-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c5729907e8cb52efa783e6381c518cf", "sha256": "9a3ce8642cb1b66901a852263468fce29fd37cc8c02b81c15bdd815807ebecb7"}, "downloads": -1, "filename": "mediamosa-0.0.5.tar.gz", "has_sig": false, "md5_digest": "3c5729907e8cb52efa783e6381c518cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13013, "upload_time": "2013-04-12T14:45:32", "upload_time_iso_8601": "2013-04-12T14:45:32.932896Z", "url": "https://files.pythonhosted.org/packages/2f/74/1bc381d8239f67b3dac14c5c152e030ba519b8b9e72e2a14645e995e6e69/mediamosa-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:35 2020"}