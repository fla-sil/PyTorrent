{"info": {"author": "Clay Loveless", "author_email": "clay@loveless.net", "bugtrack_url": null, "classifiers": [], "description": ":sparkles::syringe::sparkles: inject-emoji\n==========================================\n\n|Build Status|\n\nA simple script to replace `emoji <http://emoji-cheat-sheet.com>`__\nstring notation such as ``:simple_smile:`` with an HTML image tag. By\ndefault, ``inject-emoji`` reads from ``STDIN``, and writes to\n``STDOUT``.\n\nAbout\n-----\n\nSo many offline GitHub Flavored Markdown renderers, yet so few with\nGitHub Flavored Markdown Emoji. Until now.\n\nThe Interface\n~~~~~~~~~~~~~\n\n``inject-emoji`` is available both as a Python module and a command-line\napplication (powered by Python).\n\nThe Python Module\n^^^^^^^^^^^^^^^^^\n\n***injectemoji.InjectEmoji([Input FileObj], [Output FileObj],\n[emoji\\_directory])*** If input and/or output FileObjects are provided,\nthey will be used accordingly. If none are provided, ``sys.stdin`` and\n``sys.stdout``, respectively, will be used. If an emoji directory (say,\nfrom your own checkout of\n`WebpageFX/emoji-cheat-sheet.com <https://github.com/WebpageFX/emoji-cheat-sheet.com/>`__),\nthe substitutions provided to the regular expression in ``inject-emoji``\nwill be a reflection of the filenames in that directory.\n\nThe CLI Tool\n^^^^^^^^^^^^\n\n.. code:: text\n\n    usage: inject-emoji [-h] [-o FILE] [-d EMOJI_DIR] [FILE]\n\n    Convert emoji-cheat-sheet notation to HTML image tags.\n\n    positional arguments:\n      FILE                  Read from FILE instead of stdin\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -o FILE, --output FILE\n                            Write to FILE instead of stdout\n      -d EMOJI_DIR, --dir EMOJI_DIR\n                            Read emoji directory listing from EMOJI_DIR instead of\n                            bundled emoji\n\nThe Installation\n~~~~~~~~~~~~~~~~\n\n::\n\n    $ pip install inject-emoji\n\nThe RegEx\n~~~~~~~~~\n\nThe regular expression match is Python-flavored. The shorthand view of\nit is:\n\n::\n\n    (?<!`)(:([\\-\\+a-z0-9_]+):)(?!`)\n\n.. figure:: https://raw.githubusercontent.com/claylo/inject-emoji/master/media/mR9lztEVrnVQB463.png\n   :alt: Regular expression visualization\n\n   Regular expression visualization\n\n`Debuggex Demo <https://www.debuggex.com/r/mR9lztEVrnVQB463>`__\n\nHowever, in the source itself, all 800+ emoji names are compiled into\nthe regex.\n\nThe Why\n~~~~~~~\n\nI wrote this script to enhance Github Flavored Markdown generated by\n`Marked 2 <http://marked2app.com>`__. To use it with Marked 2, configure\nit as a preprocessor like so:\n\n.. figure:: https://raw.githubusercontent.com/claylo/inject-emoji/master/media/preprocessor-marked2.png\n   :alt: Marked 2 Config\n\n   Marked 2 Config\n\n.. |Build Status| image:: https://travis-ci.org/claylo/inject-emoji.svg?branch=master\n   :target: https://travis-ci.org/claylo/inject-emoji\n", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/claylo/inject-emoji", "keywords": null, "license": "The MIT License (MIT)", "maintainer": null, "maintainer_email": null, "name": "inject-emoji", "package_url": "https://pypi.org/project/inject-emoji/", "platform": null, "project_url": "https://pypi.org/project/inject-emoji/", "project_urls": {"Homepage": "https://github.com/claylo/inject-emoji"}, "release_url": "https://pypi.org/project/inject-emoji/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Emoji notation expansion.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            :sparkles::syringe::sparkles: inject-emoji<br>==========================================<br><br>|Build Status|<br><br>A simple script to replace `emoji &lt;http://emoji-cheat-sheet.com&gt;`__<br>string notation such as ``:simple_smile:`` with an HTML image tag. By<br>default, ``inject-emoji`` reads from ``STDIN``, and writes to<br>``STDOUT``.<br><br>About<br>-----<br><br>So many offline GitHub Flavored Markdown renderers, yet so few with<br>GitHub Flavored Markdown Emoji. Until now.<br><br>The Interface<br>~~~~~~~~~~~~~<br><br>``inject-emoji`` is available both as a Python module and a command-line<br>application (powered by Python).<br><br>The Python Module<br>^^^^^^^^^^^^^^^^^<br><br>***injectemoji.InjectEmoji([Input FileObj], [Output FileObj],<br>[emoji\\_directory])*** If input and/or output FileObjects are provided,<br>they will be used accordingly. If none are provided, ``sys.stdin`` and<br>``sys.stdout``, respectively, will be used. If an emoji directory (say,<br>from your own checkout of<br>`WebpageFX/emoji-cheat-sheet.com &lt;https://github.com/WebpageFX/emoji-cheat-sheet.com/&gt;`__),<br>the substitutions provided to the regular expression in ``inject-emoji``<br>will be a reflection of the filenames in that directory.<br><br>The CLI Tool<br>^^^^^^^^^^^^<br><br>.. code:: text<br><br>    usage: inject-emoji [-h] [-o FILE] [-d EMOJI_DIR] [FILE]<br><br>    Convert emoji-cheat-sheet notation to HTML image tags.<br><br>    positional arguments:<br>      FILE                  Read from FILE instead of stdin<br><br>    optional arguments:<br>      -h, --help            show this help message and exit<br>      -o FILE, --output FILE<br>                            Write to FILE instead of stdout<br>      -d EMOJI_DIR, --dir EMOJI_DIR<br>                            Read emoji directory listing from EMOJI_DIR instead of<br>                            bundled emoji<br><br>The Installation<br>~~~~~~~~~~~~~~~~<br><br>::<br><br>    $ pip install inject-emoji<br><br>The RegEx<br>~~~~~~~~~<br><br>The regular expression match is Python-flavored. The shorthand view of<br>it is:<br><br>::<br><br>    (?&lt;!`)(:([\\-\\+a-z0-9_]+):)(?!`)<br><br>.. figure:: https://raw.githubusercontent.com/claylo/inject-emoji/master/media/mR9lztEVrnVQB463.png<br>   :alt: Regular expression visualization<br><br>   Regular expression visualization<br><br>`Debuggex Demo &lt;https://www.debuggex.com/r/mR9lztEVrnVQB463&gt;`__<br><br>However, in the source itself, all 800+ emoji names are compiled into<br>the regex.<br><br>The Why<br>~~~~~~~<br><br>I wrote this script to enhance Github Flavored Markdown generated by<br>`Marked 2 &lt;http://marked2app.com&gt;`__. To use it with Marked 2, configure<br>it as a preprocessor like so:<br><br>.. figure:: https://raw.githubusercontent.com/claylo/inject-emoji/master/media/preprocessor-marked2.png<br>   :alt: Marked 2 Config<br><br>   Marked 2 Config<br><br>.. |Build Status| image:: https://travis-ci.org/claylo/inject-emoji.svg?branch=master<br>   :target: https://travis-ci.org/claylo/inject-emoji<br>\n          </div>"}, "last_serial": 2398752, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "7016626c4b57c3d65821d1b8eecebe2d", "sha256": "aa6ccaeea5bf2e2a57bbad0215186612dda1ddc6a785c10f37af0f5efbd5f126"}, "downloads": -1, "filename": "inject_emoji-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "7016626c4b57c3d65821d1b8eecebe2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13300, "upload_time": "2016-10-14T06:05:54", "upload_time_iso_8601": "2016-10-14T06:05:54.939036Z", "url": "https://files.pythonhosted.org/packages/89/0d/246ecf9db2b71598430a870482021d3d093d794f8f6102a7f7f02dc1eef3/inject_emoji-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5ec8aabb652ce941ccf0ff2550eca6e", "sha256": "001ba90696faeabb380b8ff4881374802768b6255a27b8f6ff7e7f87b9c81f3e"}, "downloads": -1, "filename": "inject-emoji-1.0.0.tar.gz", "has_sig": true, "md5_digest": "c5ec8aabb652ce941ccf0ff2550eca6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3938988, "upload_time": "2016-10-14T06:05:59", "upload_time_iso_8601": "2016-10-14T06:05:59.772792Z", "url": "https://files.pythonhosted.org/packages/65/63/1c637f704dd04b03a1723b847948b91ab56a61a23fdc61d5bf40f3136a37/inject-emoji-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7016626c4b57c3d65821d1b8eecebe2d", "sha256": "aa6ccaeea5bf2e2a57bbad0215186612dda1ddc6a785c10f37af0f5efbd5f126"}, "downloads": -1, "filename": "inject_emoji-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "7016626c4b57c3d65821d1b8eecebe2d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13300, "upload_time": "2016-10-14T06:05:54", "upload_time_iso_8601": "2016-10-14T06:05:54.939036Z", "url": "https://files.pythonhosted.org/packages/89/0d/246ecf9db2b71598430a870482021d3d093d794f8f6102a7f7f02dc1eef3/inject_emoji-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c5ec8aabb652ce941ccf0ff2550eca6e", "sha256": "001ba90696faeabb380b8ff4881374802768b6255a27b8f6ff7e7f87b9c81f3e"}, "downloads": -1, "filename": "inject-emoji-1.0.0.tar.gz", "has_sig": true, "md5_digest": "c5ec8aabb652ce941ccf0ff2550eca6e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3938988, "upload_time": "2016-10-14T06:05:59", "upload_time_iso_8601": "2016-10-14T06:05:59.772792Z", "url": "https://files.pythonhosted.org/packages/65/63/1c637f704dd04b03a1723b847948b91ab56a61a23fdc61d5bf40f3136a37/inject-emoji-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:56 2020"}