{"info": {"author": "Andy Huynh", "author_email": "andy.huynh312@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3 :: Only"], "description": "# target-jsonl\n\nA [Singer](https://singer.io) target that writes data to JSONL ([JSON Lines](http://jsonlines.org/)) files.\n\n## How to use it\n\n`target-jsonl` works together with any other [Singer Tap] to move data from sources like [Braintree], [Freshdesk] and [Hubspot] to JSONL formatted files.\n\n### Install\n\nWe will use [`tap-exchangeratesapi`][Exchangeratesapi] to pull currency exchange rate data from a public data set as an example.\n\nFirst, make sure Python 3 is installed on your system or follow these installation instructions for [Mac] or [Ubuntu].\n\nIt is recommended to install each Tap and Target in a separate Python virtual environment to avoid conflicting dependencies between any Taps and Targets.\n\n```bash\n # Install tap-exchangeratesapi in its own virtualenv\npython3 -m venv ~/.virtualenvs/tap-exchangeratesapi\nsource ~/.virtualenvs/tap-exchangeratesapi/bin/activate\npip install tap-exchangeratesapi\ndeactivate\n\n# Install target-jsonl in its own virtualenv\npython3 -m venv ~/.virtualenvs/target-jsonl\nsource ~/.virtualenvs/target-jsonl/bin/activate\npip install target-jsonl\ndeactivate\n```\n\n### Run\n\nWe can now run `tap-exchangeratesapi` and pipe the output to `target-jsonl`.\n\n```bash\n~/.virtualenvs/tap-exchangeratesapi/bin/tap-exchangeratesapi | ~/.virtualenvs/target-jsonl/bin/target-jsonl\n```\n\nThe data by default will be written to a file called `exchange_rate-{timestamp}.jsonl` in your working directory.\n\n```bash\n\u203a cat exchange_rate-{timestamp}.jsonl\n{\"CAD\": 1.3954067515, \"HKD\": 7.7503228187, \"ISK\": 147.1130787678, \"PHP\": 50.5100534957, \"DKK\": 6.8779745434, \"HUF\": 327.9376498801, \"CZK\": 25.018446781, \"GBP\": 0.8059214167, \"RON\": 4.4673491976, \"SEK\": 9.9002029146, \"IDR\": 15321.0016602103, \"INR\": 75.6516325401, \"BRL\": 5.4711307877, \"RUB\": 73.6220254566, \"HRK\": 6.9765725881, \"JPY\": 106.548607268, \"THB\": 32.420217672, \"CHF\": 0.9750046117, \"EUR\": 0.9223390518, \"MYR\": 4.3475373547, \"BGN\": 1.8039107176, \"TRY\": 6.988286294, \"CNY\": 7.0764619074, \"NOK\": 10.3973436635, \"NZD\": 1.6446227633, \"ZAR\": 18.4316546763, \"USD\": 1.0, \"MXN\": 24.1217487548, \"SGD\": 1.4152370411, \"AUD\": 1.5361556908, \"ILS\": 3.5102379635, \"KRW\": 1218.9540675152, \"PLN\": 4.1912931194, \"date\": \"2020-04-29T00:00:00Z\"}\n```\n\n### Optional Configuration\n\n`target-jsonl` takes an optional configuration file that can be used to set formatting parameters like the delimiter - see [config.sample.json](config.sample.json) for examples. To run `target-jsonl` with the configuration file, use this command:\n\n```bash\n~/.virtualenvs/tap-exchangeratesapi/bin/tap-exchangeratesapi | ~/.virtualenvs/target-jsonl/bin/target-jsonl -c my-config.json\n```\n\nHere is a brief description of the optional config keys\n\n`destination_path` - Specifies where to write the resulting `.jsonl` file to. By default, the file gets written in your working directory.\n\n`do_timestamp_file` - specifies if the file should get timestamped. By default, the resulting file will have a timestamp in the file name (i.e. `exchange_rate-{timestamp}.jsonl` as described above in the `Run` section). If this option gets set to `false`, the resulting file will not have a timestamp associated with it (i.e. `exchange_rate.jsonl` in our example).\n\n---\n\nCopyright &copy; 2020 Andy Huynh\n\n[Singer Tap]: https://singer.io\n[Braintree]: https://github.com/singer-io/tap-braintree\n[Freshdesk]: https://github.com/singer-io/tap-freshdesk\n[Hubspot]: https://github.com/singer-io/tap-hubspot\n[Exchangeratesapi]: https://github.com/singer-io/tap-exchangeratesapi\n[Mac]: http://docs.python-guide.org/en/latest/starting/install3/osx/\n[Ubuntu]: https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/andyh1203/target-jsonl", "keywords": "singer,singer.io,target,etl", "license": "", "maintainer": "", "maintainer_email": "", "name": "target-jsonl", "package_url": "https://pypi.org/project/target-jsonl/", "platform": "", "project_url": "https://pypi.org/project/target-jsonl/", "project_urls": {"Homepage": "https://github.com/andyh1203/target-jsonl"}, "release_url": "https://pypi.org/project/target-jsonl/0.1.1/", "requires_dist": ["jsonschema (==2.6.0)", "singer-python (==2.1.4)"], "requires_python": "", "summary": "Singer.io target for writing JSON Line files", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>target-jsonl</h1>\n<p>A <a href=\"https://singer.io\" rel=\"nofollow\">Singer</a> target that writes data to JSONL (<a href=\"http://jsonlines.org/\" rel=\"nofollow\">JSON Lines</a>) files.</p>\n<h2>How to use it</h2>\n<p><code>target-jsonl</code> works together with any other <a href=\"https://singer.io\" rel=\"nofollow\">Singer Tap</a> to move data from sources like <a href=\"https://github.com/singer-io/tap-braintree\" rel=\"nofollow\">Braintree</a>, <a href=\"https://github.com/singer-io/tap-freshdesk\" rel=\"nofollow\">Freshdesk</a> and <a href=\"https://github.com/singer-io/tap-hubspot\" rel=\"nofollow\">Hubspot</a> to JSONL formatted files.</p>\n<h3>Install</h3>\n<p>We will use <a href=\"https://github.com/singer-io/tap-exchangeratesapi\" rel=\"nofollow\"><code>tap-exchangeratesapi</code></a> to pull currency exchange rate data from a public data set as an example.</p>\n<p>First, make sure Python 3 is installed on your system or follow these installation instructions for <a href=\"http://docs.python-guide.org/en/latest/starting/install3/osx/\" rel=\"nofollow\">Mac</a> or <a href=\"https://www.digitalocean.com/community/tutorials/how-to-install-python-3-and-set-up-a-local-programming-environment-on-ubuntu-16-04\" rel=\"nofollow\">Ubuntu</a>.</p>\n<p>It is recommended to install each Tap and Target in a separate Python virtual environment to avoid conflicting dependencies between any Taps and Targets.</p>\n<pre> <span class=\"c1\"># Install tap-exchangeratesapi in its own virtualenv</span>\npython3 -m venv ~/.virtualenvs/tap-exchangeratesapi\n<span class=\"nb\">source</span> ~/.virtualenvs/tap-exchangeratesapi/bin/activate\npip install tap-exchangeratesapi\ndeactivate\n\n<span class=\"c1\"># Install target-jsonl in its own virtualenv</span>\npython3 -m venv ~/.virtualenvs/target-jsonl\n<span class=\"nb\">source</span> ~/.virtualenvs/target-jsonl/bin/activate\npip install target-jsonl\ndeactivate\n</pre>\n<h3>Run</h3>\n<p>We can now run <code>tap-exchangeratesapi</code> and pipe the output to <code>target-jsonl</code>.</p>\n<pre>~/.virtualenvs/tap-exchangeratesapi/bin/tap-exchangeratesapi <span class=\"p\">|</span> ~/.virtualenvs/target-jsonl/bin/target-jsonl\n</pre>\n<p>The data by default will be written to a file called <code>exchange_rate-{timestamp}.jsonl</code> in your working directory.</p>\n<pre>\u203a cat exchange_rate-<span class=\"o\">{</span>timestamp<span class=\"o\">}</span>.jsonl\n<span class=\"o\">{</span><span class=\"s2\">\"CAD\"</span>: <span class=\"m\">1</span>.3954067515, <span class=\"s2\">\"HKD\"</span>: <span class=\"m\">7</span>.7503228187, <span class=\"s2\">\"ISK\"</span>: <span class=\"m\">147</span>.1130787678, <span class=\"s2\">\"PHP\"</span>: <span class=\"m\">50</span>.5100534957, <span class=\"s2\">\"DKK\"</span>: <span class=\"m\">6</span>.8779745434, <span class=\"s2\">\"HUF\"</span>: <span class=\"m\">327</span>.9376498801, <span class=\"s2\">\"CZK\"</span>: <span class=\"m\">25</span>.018446781, <span class=\"s2\">\"GBP\"</span>: <span class=\"m\">0</span>.8059214167, <span class=\"s2\">\"RON\"</span>: <span class=\"m\">4</span>.4673491976, <span class=\"s2\">\"SEK\"</span>: <span class=\"m\">9</span>.9002029146, <span class=\"s2\">\"IDR\"</span>: <span class=\"m\">15321</span>.0016602103, <span class=\"s2\">\"INR\"</span>: <span class=\"m\">75</span>.6516325401, <span class=\"s2\">\"BRL\"</span>: <span class=\"m\">5</span>.4711307877, <span class=\"s2\">\"RUB\"</span>: <span class=\"m\">73</span>.6220254566, <span class=\"s2\">\"HRK\"</span>: <span class=\"m\">6</span>.9765725881, <span class=\"s2\">\"JPY\"</span>: <span class=\"m\">106</span>.548607268, <span class=\"s2\">\"THB\"</span>: <span class=\"m\">32</span>.420217672, <span class=\"s2\">\"CHF\"</span>: <span class=\"m\">0</span>.9750046117, <span class=\"s2\">\"EUR\"</span>: <span class=\"m\">0</span>.9223390518, <span class=\"s2\">\"MYR\"</span>: <span class=\"m\">4</span>.3475373547, <span class=\"s2\">\"BGN\"</span>: <span class=\"m\">1</span>.8039107176, <span class=\"s2\">\"TRY\"</span>: <span class=\"m\">6</span>.988286294, <span class=\"s2\">\"CNY\"</span>: <span class=\"m\">7</span>.0764619074, <span class=\"s2\">\"NOK\"</span>: <span class=\"m\">10</span>.3973436635, <span class=\"s2\">\"NZD\"</span>: <span class=\"m\">1</span>.6446227633, <span class=\"s2\">\"ZAR\"</span>: <span class=\"m\">18</span>.4316546763, <span class=\"s2\">\"USD\"</span>: <span class=\"m\">1</span>.0, <span class=\"s2\">\"MXN\"</span>: <span class=\"m\">24</span>.1217487548, <span class=\"s2\">\"SGD\"</span>: <span class=\"m\">1</span>.4152370411, <span class=\"s2\">\"AUD\"</span>: <span class=\"m\">1</span>.5361556908, <span class=\"s2\">\"ILS\"</span>: <span class=\"m\">3</span>.5102379635, <span class=\"s2\">\"KRW\"</span>: <span class=\"m\">1218</span>.9540675152, <span class=\"s2\">\"PLN\"</span>: <span class=\"m\">4</span>.1912931194, <span class=\"s2\">\"date\"</span>: <span class=\"s2\">\"2020-04-29T00:00:00Z\"</span><span class=\"o\">}</span>\n</pre>\n<h3>Optional Configuration</h3>\n<p><code>target-jsonl</code> takes an optional configuration file that can be used to set formatting parameters like the delimiter - see <a href=\"config.sample.json\" rel=\"nofollow\">config.sample.json</a> for examples. To run <code>target-jsonl</code> with the configuration file, use this command:</p>\n<pre>~/.virtualenvs/tap-exchangeratesapi/bin/tap-exchangeratesapi <span class=\"p\">|</span> ~/.virtualenvs/target-jsonl/bin/target-jsonl -c my-config.json\n</pre>\n<p>Here is a brief description of the optional config keys</p>\n<p><code>destination_path</code> - Specifies where to write the resulting <code>.jsonl</code> file to. By default, the file gets written in your working directory.</p>\n<p><code>do_timestamp_file</code> - specifies if the file should get timestamped. By default, the resulting file will have a timestamp in the file name (i.e. <code>exchange_rate-{timestamp}.jsonl</code> as described above in the <code>Run</code> section). If this option gets set to <code>false</code>, the resulting file will not have a timestamp associated with it (i.e. <code>exchange_rate.jsonl</code> in our example).</p>\n<hr>\n<p>Copyright \u00a9 2020 Andy Huynh</p>\n\n          </div>"}, "last_serial": 7133242, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b930836d179e5fced7dcae8d3b5174f8", "sha256": "6ae1c5e727fa64ef5a06e15e09a7b8a5f0e9b4934baf288c7a54b4e279a8a876"}, "downloads": -1, "filename": "target_jsonl-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b930836d179e5fced7dcae8d3b5174f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13841, "upload_time": "2020-04-29T23:05:59", "upload_time_iso_8601": "2020-04-29T23:05:59.892716Z", "url": "https://files.pythonhosted.org/packages/6d/b7/065840e809b8bf0446df5b5550a01ee0a36acd5578e38bc9db7af84efa89/target_jsonl-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c96dafbee57486af5e5b09ab7748e838", "sha256": "9523a5f73c0b7e455dfd24a16115c51d03f4454247e733983d78319239102ec6"}, "downloads": -1, "filename": "target-jsonl-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c96dafbee57486af5e5b09ab7748e838", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3585, "upload_time": "2020-04-29T23:06:01", "upload_time_iso_8601": "2020-04-29T23:06:01.871530Z", "url": "https://files.pythonhosted.org/packages/f9/73/b0f602b17a651ac8f4813eabd69746800cd77645260921a1f0f12fd4e8e1/target-jsonl-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9e883054b562c37b3855f21d6b347782", "sha256": "756a1f18c173adeb74a36a433e896d19e0abd955601dcbb934df693761ebc014"}, "downloads": -1, "filename": "target_jsonl-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e883054b562c37b3855f21d6b347782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15506, "upload_time": "2020-04-29T23:12:22", "upload_time_iso_8601": "2020-04-29T23:12:22.398938Z", "url": "https://files.pythonhosted.org/packages/4a/57/c0905a916b2d2373031266e750b7864326e0735fc45b4e788415578cfdca/target_jsonl-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8413feed0f5ce4203c5e226c238a5f7a", "sha256": "5309ac7241a6afca837680c871bab70c4250dbab38d572ce9f9838f701f9301b"}, "downloads": -1, "filename": "target-jsonl-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8413feed0f5ce4203c5e226c238a5f7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4015, "upload_time": "2020-04-29T23:12:23", "upload_time_iso_8601": "2020-04-29T23:12:23.486441Z", "url": "https://files.pythonhosted.org/packages/6e/d7/31fdd5d265f7c69d8718c6c9f67608daae6ead53ac0c3d9c0c433214574e/target-jsonl-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e883054b562c37b3855f21d6b347782", "sha256": "756a1f18c173adeb74a36a433e896d19e0abd955601dcbb934df693761ebc014"}, "downloads": -1, "filename": "target_jsonl-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e883054b562c37b3855f21d6b347782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15506, "upload_time": "2020-04-29T23:12:22", "upload_time_iso_8601": "2020-04-29T23:12:22.398938Z", "url": "https://files.pythonhosted.org/packages/4a/57/c0905a916b2d2373031266e750b7864326e0735fc45b4e788415578cfdca/target_jsonl-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8413feed0f5ce4203c5e226c238a5f7a", "sha256": "5309ac7241a6afca837680c871bab70c4250dbab38d572ce9f9838f701f9301b"}, "downloads": -1, "filename": "target-jsonl-0.1.1.tar.gz", "has_sig": false, "md5_digest": "8413feed0f5ce4203c5e226c238a5f7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4015, "upload_time": "2020-04-29T23:12:23", "upload_time_iso_8601": "2020-04-29T23:12:23.486441Z", "url": "https://files.pythonhosted.org/packages/6e/d7/31fdd5d265f7c69d8718c6c9f67608daae6ead53ac0c3d9c0c433214574e/target-jsonl-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:56 2020"}