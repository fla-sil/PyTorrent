{"info": {"author": "Jay Carlson", "author_email": "nop@nop.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "\n# Jinja2 and YAML for Jupyter\n\n### Please see [the full HTML version](https://nopdotcom.github.io/jinja-straight-demo.html).\n\nThe rest of this file is just the `nbconvert` into Markdown; it's hard to read. See [the HTML version](https://nopdotcom.github.io/jinja-straight-demo.html).\n\n------\n\nPeople use YAML and Jinja2 together; they're the core of Ansible. Sometimes you need a playground to figure out details of how they work. This magic provides both.\n\n**In:**\n\n```python\n%load_ext jinja_yaml_magic\n%reload_ext jinja_yaml_magic\n```\n\n(Ignore the warning for `%load_ext`/`%reload_ext`.)\n\n## YAML\n\n`%%yaml variable` parses the YAML in a cell into the named *variable*. \nIf you omit `variable`, the YAML is parsed into the variable `jinja_env`; it's also\nthen available through the history mechanism: `Out[3]` or `_3`.\n\n**In:**\n\n```python\n%%yaml\nnames:\n- Jay\n- Chris\n- Pat\n```\n\n\n**Out:**\n\n    {'names': ['Jay', 'Chris', 'Pat']}\n\n\n\n**In:**\n\n```python\n%%jinja\n{{ names }}\n```\n\n**Out:**\n\n\n    ['Jay', 'Chris', 'Pat']\n\n\n\n## Jinja2\n\nIf you just want to try out a quick template, write `%%jinja` at the top of a cell. Both the contents of `jinja_env` and notebook variables are available. Below, we're using `names` from the `%%yaml` above, and `separator` from the notebook.\n\n**In:**\n\n```python\nseparator = \", \"\n```\n\n**In:**\n\n```python\n%%jinja\n{{ names|sort|join(separator) }}\n```\n\n\n**Out:**\n\n    Chris, Jay, Pat\n\n\n\n### Named templates\n\nYou may want to store Jinja2 code as a template.\n\n* You can reuse the template later in the notebook;\n* You can use Jinja2's powerful `extends`, `import`, and `include` mechanisms.\n\nThe template below is available under the name `fancy_names`. *Files in the current directory are also available as templates.*\n\n\n**In:**\n\n```python\n%%jinja_template fancy_names\n{% for name in names %}\n<b>{{ name }}</b><br>\n{%- endfor %}\n```\n\n**In:**\n\n```python\n%jinja --template fancy_names\n```\n\n**Out:**\n\n\n\n    <b>Jay</b><br>\n    <b>Chris</b><br>\n    <b>Pat</b><br>\n\n\n\n### Formatting\n\nBy default, the result of running a `%jinja` template is formatted as \"pretty\" text.\nYou can choose other formats.\n\n|Type|...displays as|\n|----|----|\n|`--pretty`|A string, without quotes|\n|`--plain`|Python string literal|\n|`--html`|HTML|\n|`--svg`|SVG|\n|`--latex`|LaTeX|\n|`--markdown`|Markdown|\n|`--code`|Syntax-highlighted code|\n\n`--latex` requires MathJax to be loaded; it is by default. `--code` requires\na recent version of IPython.\n\n**In:**\n\n```python\n%jinja --template fancy_names --html\n```\n\n**Out:**\n\n\n\n<b>Jay</b><br>\n<b>Chris</b><br>\n<b>Pat</b><br>\n\n\n\n### An SVG example\n\nFrom [https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72](https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72). This template does math, so you may not want to follow its example. \n\n\n**In:**\n\n```python\n# Percent of circle to be filled\nfull = 60\n# Percent distance from top to start\noffset = 12.5\n```\n\n**In:**\n\n```python\n%%jinja_template svg_example\n<svg width=\"25%\" height=\"25%\" viewBox=\"0 0 42 42\" class=\"donut\">\n  <circle class=\"donut-hole\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"#fff\"></circle>\n  <circle class=\"donut-ring\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke=\"#d2d3d4\" stroke-width=\"3\"></circle>\n  <circle class=\"donut-segment\" cx=\"21\" cy=\"21\" r=\"15.91549430918954\" fill=\"transparent\" stroke=\"#ce4b99\" stroke-width=\"3\" \n    stroke-dasharray=\"{{ full }} {{ 100-full }}\" stroke-dashoffset=\"{{ 25 - offset }}\"></circle>\n</svg>\n```\n\n**In:**\n\n```python\n%jinja --template svg_example --svg\n```\n\n*(There is an SVG image in the actual notebook.)*\n\n![svg](jinja-straight-demo_files/jinja-straight-demo_17_0.svg)\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nopdotcom/jupyter-jinja-yaml-magic", "keywords": "jupyter,ipython,yaml,jinja,jinja2", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "jinja-yaml-magic", "package_url": "https://pypi.org/project/jinja-yaml-magic/", "platform": "", "project_url": "https://pypi.org/project/jinja-yaml-magic/", "project_urls": {"Homepage": "https://github.com/nopdotcom/jupyter-jinja-yaml-magic"}, "release_url": "https://pypi.org/project/jinja-yaml-magic/0.1.2/", "requires_dist": ["PyYAML", "jinja2", "ipython (>=1.0)"], "requires_python": "", "summary": "Support Jinja2 and YAML in IPython/Jupyter notebooks", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Jinja2 and YAML for Jupyter</h1>\n<h3>Please see <a href=\"https://nopdotcom.github.io/jinja-straight-demo.html\" rel=\"nofollow\">the full HTML version</a>.</h3>\n<p>The rest of this file is just the <code>nbconvert</code> into Markdown; it's hard to read. See <a href=\"https://nopdotcom.github.io/jinja-straight-demo.html\" rel=\"nofollow\">the HTML version</a>.</p>\n<hr>\n<p>People use YAML and Jinja2 together; they're the core of Ansible. Sometimes you need a playground to figure out details of how they work. This magic provides both.</p>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%</span><span class=\"n\">load_ext</span> <span class=\"n\">jinja_yaml_magic</span>\n<span class=\"o\">%</span><span class=\"n\">reload_ext</span> <span class=\"n\">jinja_yaml_magic</span>\n</pre>\n<p>(Ignore the warning for <code>%load_ext</code>/<code>%reload_ext</code>.)</p>\n<h2>YAML</h2>\n<p><code>%%yaml variable</code> parses the YAML in a cell into the named <em>variable</em>.\nIf you omit <code>variable</code>, the YAML is parsed into the variable <code>jinja_env</code>; it's also\nthen available through the history mechanism: <code>Out[3]</code> or <code>_3</code>.</p>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%%</span><span class=\"n\">yaml</span>\n<span class=\"n\">names</span><span class=\"p\">:</span>\n<span class=\"o\">-</span> <span class=\"n\">Jay</span>\n<span class=\"o\">-</span> <span class=\"n\">Chris</span>\n<span class=\"o\">-</span> <span class=\"n\">Pat</span>\n</pre>\n<p><strong>Out:</strong></p>\n<pre><code>{'names': ['Jay', 'Chris', 'Pat']}\n</code></pre>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%%</span><span class=\"n\">jinja</span>\n<span class=\"p\">{{</span> <span class=\"n\">names</span> <span class=\"p\">}}</span>\n</pre>\n<p><strong>Out:</strong></p>\n<pre><code>['Jay', 'Chris', 'Pat']\n</code></pre>\n<h2>Jinja2</h2>\n<p>If you just want to try out a quick template, write <code>%%jinja</code> at the top of a cell. Both the contents of <code>jinja_env</code> and notebook variables are available. Below, we're using <code>names</code> from the <code>%%yaml</code> above, and <code>separator</code> from the notebook.</p>\n<p><strong>In:</strong></p>\n<pre><span class=\"n\">separator</span> <span class=\"o\">=</span> <span class=\"s2\">\", \"</span>\n</pre>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%%</span><span class=\"n\">jinja</span>\n<span class=\"p\">{{</span> <span class=\"n\">names</span><span class=\"o\">|</span><span class=\"n\">sort</span><span class=\"o\">|</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">separator</span><span class=\"p\">)</span> <span class=\"p\">}}</span>\n</pre>\n<p><strong>Out:</strong></p>\n<pre><code>Chris, Jay, Pat\n</code></pre>\n<h3>Named templates</h3>\n<p>You may want to store Jinja2 code as a template.</p>\n<ul>\n<li>You can reuse the template later in the notebook;</li>\n<li>You can use Jinja2's powerful <code>extends</code>, <code>import</code>, and <code>include</code> mechanisms.</li>\n</ul>\n<p>The template below is available under the name <code>fancy_names</code>. <em>Files in the current directory are also available as templates.</em></p>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%%</span><span class=\"n\">jinja_template</span> <span class=\"n\">fancy_names</span>\n<span class=\"p\">{</span><span class=\"o\">%</span> <span class=\"k\">for</span> <span class=\"n\">name</span> <span class=\"ow\">in</span> <span class=\"n\">names</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n<span class=\"o\">&lt;</span><span class=\"n\">b</span><span class=\"o\">&gt;</span><span class=\"p\">{{</span> <span class=\"n\">name</span> <span class=\"p\">}}</span><span class=\"o\">&lt;/</span><span class=\"n\">b</span><span class=\"o\">&gt;&lt;</span><span class=\"n\">br</span><span class=\"o\">&gt;</span>\n<span class=\"p\">{</span><span class=\"o\">%-</span> <span class=\"n\">endfor</span> <span class=\"o\">%</span><span class=\"p\">}</span>\n</pre>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%</span><span class=\"n\">jinja</span> <span class=\"o\">--</span><span class=\"n\">template</span> <span class=\"n\">fancy_names</span>\n</pre>\n<p><strong>Out:</strong></p>\n<pre><code>&lt;b&gt;Jay&lt;/b&gt;&lt;br&gt;\n&lt;b&gt;Chris&lt;/b&gt;&lt;br&gt;\n&lt;b&gt;Pat&lt;/b&gt;&lt;br&gt;\n</code></pre>\n<h3>Formatting</h3>\n<p>By default, the result of running a <code>%jinja</code> template is formatted as \"pretty\" text.\nYou can choose other formats.</p>\n<table>\n<thead>\n<tr>\n<th>Type</th>\n<th>...displays as</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>--pretty</code></td>\n<td>A string, without quotes</td>\n</tr>\n<tr>\n<td><code>--plain</code></td>\n<td>Python string literal</td>\n</tr>\n<tr>\n<td><code>--html</code></td>\n<td>HTML</td>\n</tr>\n<tr>\n<td><code>--svg</code></td>\n<td>SVG</td>\n</tr>\n<tr>\n<td><code>--latex</code></td>\n<td>LaTeX</td>\n</tr>\n<tr>\n<td><code>--markdown</code></td>\n<td>Markdown</td>\n</tr>\n<tr>\n<td><code>--code</code></td>\n<td>Syntax-highlighted code</td>\n</tr></tbody></table>\n<p><code>--latex</code> requires MathJax to be loaded; it is by default. <code>--code</code> requires\na recent version of IPython.</p>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%</span><span class=\"n\">jinja</span> <span class=\"o\">--</span><span class=\"n\">template</span> <span class=\"n\">fancy_names</span> <span class=\"o\">--</span><span class=\"n\">html</span>\n</pre>\n<p><strong>Out:</strong></p>\n<p><b>Jay</b><br>\n<b>Chris</b><br>\n<b>Pat</b><br></p>\n<h3>An SVG example</h3>\n<p>From <a href=\"https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72\" rel=\"nofollow\">https://medium.com/@heyoka/scratch-made-svg-donut-pie-charts-in-html5-2c587e935d72</a>. This template does math, so you may not want to follow its example.</p>\n<p><strong>In:</strong></p>\n<pre><span class=\"c1\"># Percent of circle to be filled</span>\n<span class=\"n\">full</span> <span class=\"o\">=</span> <span class=\"mi\">60</span>\n<span class=\"c1\"># Percent distance from top to start</span>\n<span class=\"n\">offset</span> <span class=\"o\">=</span> <span class=\"mf\">12.5</span>\n</pre>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%%</span><span class=\"n\">jinja_template</span> <span class=\"n\">svg_example</span>\n<span class=\"o\">&lt;</span><span class=\"n\">svg</span> <span class=\"n\">width</span><span class=\"o\">=</span><span class=\"s2\">\"25%\"</span> <span class=\"n\">height</span><span class=\"o\">=</span><span class=\"s2\">\"25%\"</span> <span class=\"n\">viewBox</span><span class=\"o\">=</span><span class=\"s2\">\"0 0 42 42\"</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s2\">\"donut\"</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">circle</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s2\">\"donut-hole\"</span> <span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"s2\">\"21\"</span> <span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"s2\">\"21\"</span> <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"s2\">\"15.91549430918954\"</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s2\">\"#fff\"</span><span class=\"o\">&gt;&lt;/</span><span class=\"n\">circle</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">circle</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s2\">\"donut-ring\"</span> <span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"s2\">\"21\"</span> <span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"s2\">\"21\"</span> <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"s2\">\"15.91549430918954\"</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s2\">\"transparent\"</span> <span class=\"n\">stroke</span><span class=\"o\">=</span><span class=\"s2\">\"#d2d3d4\"</span> <span class=\"n\">stroke</span><span class=\"o\">-</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"s2\">\"3\"</span><span class=\"o\">&gt;&lt;/</span><span class=\"n\">circle</span><span class=\"o\">&gt;</span>\n  <span class=\"o\">&lt;</span><span class=\"n\">circle</span> <span class=\"n\">class</span><span class=\"o\">=</span><span class=\"s2\">\"donut-segment\"</span> <span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"s2\">\"21\"</span> <span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"s2\">\"21\"</span> <span class=\"n\">r</span><span class=\"o\">=</span><span class=\"s2\">\"15.91549430918954\"</span> <span class=\"n\">fill</span><span class=\"o\">=</span><span class=\"s2\">\"transparent\"</span> <span class=\"n\">stroke</span><span class=\"o\">=</span><span class=\"s2\">\"#ce4b99\"</span> <span class=\"n\">stroke</span><span class=\"o\">-</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"s2\">\"3\"</span> \n    <span class=\"n\">stroke</span><span class=\"o\">-</span><span class=\"n\">dasharray</span><span class=\"o\">=</span><span class=\"s2\">\"{{ full }} {{ 100-full }}\"</span> <span class=\"n\">stroke</span><span class=\"o\">-</span><span class=\"n\">dashoffset</span><span class=\"o\">=</span><span class=\"s2\">\"{{ 25 - offset }}\"</span><span class=\"o\">&gt;&lt;/</span><span class=\"n\">circle</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&lt;/</span><span class=\"n\">svg</span><span class=\"o\">&gt;</span>\n</pre>\n<p><strong>In:</strong></p>\n<pre><span class=\"o\">%</span><span class=\"n\">jinja</span> <span class=\"o\">--</span><span class=\"n\">template</span> <span class=\"n\">svg_example</span> <span class=\"o\">--</span><span class=\"n\">svg</span>\n</pre>\n<p><em>(There is an SVG image in the actual notebook.)</em></p>\n<p><img alt=\"svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d27c2187c50192baa2bdc11db3eb9075d251fc72/6a696e6a612d73747261696768742d64656d6f5f66696c65732f6a696e6a612d73747261696768742d64656d6f5f31375f302e737667\"></p>\n\n          </div>"}, "last_serial": 4998935, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "d747165d42998b2e6a0875f6c6ba4f4a", "sha256": "d996056bac938b206e49cf7296c3064eaa164770b1eb5fad3a246b2cf1b3ca8c"}, "downloads": -1, "filename": "jinja_yaml_magic-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d747165d42998b2e6a0875f6c6ba4f4a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7438, "upload_time": "2019-03-28T17:32:56", "upload_time_iso_8601": "2019-03-28T17:32:56.342936Z", "url": "https://files.pythonhosted.org/packages/66/f1/2521f7e1c7b37106b6cd8124fde00a787a3720ec57b96397a40954939951/jinja_yaml_magic-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b969504a765adc323c0c84af029d84d3", "sha256": "7f9895f9ffc9026e609885b146eb8feecd24b412f25fcb01460b4a61ce08e27d"}, "downloads": -1, "filename": "jinja-yaml-magic-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b969504a765adc323c0c84af029d84d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6499, "upload_time": "2019-03-28T17:32:58", "upload_time_iso_8601": "2019-03-28T17:32:58.328959Z", "url": "https://files.pythonhosted.org/packages/f9/8c/a7c6a7e0fd4fe3e862b27790074b32f92b6aa6eb73f515100965655727e5/jinja-yaml-magic-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d747165d42998b2e6a0875f6c6ba4f4a", "sha256": "d996056bac938b206e49cf7296c3064eaa164770b1eb5fad3a246b2cf1b3ca8c"}, "downloads": -1, "filename": "jinja_yaml_magic-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d747165d42998b2e6a0875f6c6ba4f4a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7438, "upload_time": "2019-03-28T17:32:56", "upload_time_iso_8601": "2019-03-28T17:32:56.342936Z", "url": "https://files.pythonhosted.org/packages/66/f1/2521f7e1c7b37106b6cd8124fde00a787a3720ec57b96397a40954939951/jinja_yaml_magic-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b969504a765adc323c0c84af029d84d3", "sha256": "7f9895f9ffc9026e609885b146eb8feecd24b412f25fcb01460b4a61ce08e27d"}, "downloads": -1, "filename": "jinja-yaml-magic-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b969504a765adc323c0c84af029d84d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6499, "upload_time": "2019-03-28T17:32:58", "upload_time_iso_8601": "2019-03-28T17:32:58.328959Z", "url": "https://files.pythonhosted.org/packages/f9/8c/a7c6a7e0fd4fe3e862b27790074b32f92b6aa6eb73f515100965655727e5/jinja-yaml-magic-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:36 2020"}