{"info": {"author": "Tyler Goodlet", "author_email": "tgoodlet@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Communications :: Telephony", "Topic :: Software Development :: Testing :: Traffic Generation", "Topic :: System :: Clustering"], "description": "switchio\n========\nasyncio_ powered FreeSWITCH_ cluster control using pure Python_ 3.5+\n\n|pypi| |travis| |versions| |license| |docs|\n\n.. |versions| image:: https://img.shields.io/pypi/pyversions/switchio.svg\n    :target: https://pypi.org/project/switchio\n.. |pypi| image:: https://img.shields.io/pypi/v/switchio.svg\n    :target: https://pypi.org/project/switchio\n.. |travis| image:: https://img.shields.io/travis/friends-of-freeswitch/switchio/master.svg\n    :target: https://travis-ci.org/friends-of-freeswitch/switchio\n.. |license| image:: https://img.shields.io/pypi/l/switchio.svg\n    :target: https://pypi.org/project/switchio\n.. |docs| image:: https://readthedocs.org/projects/switchio/badge/?version=latest\n    :target: http://switchio.readthedocs.io\n\n``switchio`` (pronounced *Switch Ee OoH*) is the next evolution of `switchy`_\n(think *Bulbasaur* -> *Ivysaur*) which leverages modern Python's new native\ncoroutine_ syntax and, for now, asyncio_.\n\nAPI-wise the project intends to be the flask_ for VoIP but with a focus on\nperformance and scalability more like sanic_.\n\n.. _asyncio: https://docs.python.org/3.6/library/asyncio.html\n.. _FreeSWITCH: https://freeswitch.org/\n.. _Python: https://www.python.org/\n.. _switchy: https://github.com/sangoma/switchy\n.. _coroutine: https://docs.python.org/3.6/library/asyncio-task.html\n.. _flask: http://flask.pocoo.org/\n.. _sanic: https://github.com/channelcat/sanic\n.. _docs: https://switchio.readthedocs.org/\n\n\nUse the power of ``async`` and ``await``!\n-----------------------------------------\nBuild a routing system using Python's new coroutine_ syntax:\n\n.. code:: python\n\n    from switchio.apps.routers import Router\n\n    router = Router(guards={\n        'Call-Direction': 'inbound',\n        'variable_sofia_profile': 'external'})\n\n    @router.route('(.*)')\n    async def welcome(sess, match, router):\n        \"\"\"Say hello to inbound calls.\n        \"\"\"\n        await sess.answer()  # resumes once call has been fully answered\n        sess.log.info(\"Answered call to {}\".format(match.groups(0)))\n\n        sess.playback('ivr/ivr-welcome_to_freeswitch.wav') # non-blocking\n        sess.log.info(\"Playing welcome message\")\n        await sess.recv(\"PLAYBACK_STOP\")\n\n        await sess.hangup()  # resumes once call has been fully hungup\n\nRun this app (assuming it's in ``dialplan.py``) from the shell::\n\n    $ switchio serve fs-host1 fs-host2 fs-host3 --app ./dialplan.py:router\n\n\nSpin up an auto-dialer\n----------------------\nRun thousands of call flows to stress test your service system using\nthe built-in auto-dialer_::\n\n    $ switchio dial fs-tester1 fs-tester2 --profile external --proxy myproxy.com --rate 100 --limit 3000\n\n.. _auto-dialer: http://switchio.readthedocs.io/en/latest/callgen.html\n\n\nInstall\n-------\n::\n\n    pip install switchio\n\n\nDocs\n----\nOh we've got them docs_!\n\nHow do I deploy my FreeSWITCH cluster?\n--------------------------------------\n- Enable `inbound ESL`_ connections\n- Add a park-only_ dialplan (Hint: we include one here_)\n\nSee the docs_ for the deats!\n\n.. _inbound ESL: https://freeswitch.org/confluence/display/FREESWITCH/mod_event_socket#mod_event_socket-Configuration\n.. _park-only: https://freeswitch.org/confluence/display/FREESWITCH/mod_dptools%3A+park\n.. _here: https://github.com/friends-of-freeswitch/switchio/blob/master/conf/switchiodp.xml\n\n\nWhat's included?\n----------------\n- A slew of `built-in apps`_\n- A full blown `auto-dialer`_ originally built for stress testing VoIP service systems\n- Super detailed ESL event logging\n\n.. _built-in apps: http://switchio.readthedocs.io/en/latest/apps.html\n.. _auto-dialer: http://switchio.readthedocs.io/en/latest/callgen.html\n\n\nHow can I contribute?\n---------------------\nHave an idea for a general purpose ``switchio`` app or helper?\nMake a PR here on GitHub!\n\nAlso, if you like ``switchio`` let us know on Riot_!\n\n.. _Riot:  https://riot.im/app/#/room/#freeswitch:matrix.org\n\n\nWait, how is ``switchio`` different from other ESL clients?\n-----------------------------------------------------------\n``switchio`` differentiates itself by supporting FreeSWITCH\n*process cluster control* as well as focusing on leveraging the\nmost modern Python language features. ``switchio`` takes pride\nin being a *batteries included* framework that tries to make all\nthe tricky things about FreeSWITCH a cinch.\n\n\nWhat if I'm stuck on Python 2?\n------------------------------\nCheck out these other great projects:\n\n- greenswitch_\n- eventsocket_\n- pySWITCH_\n- python-ESL_\n\n.. _greenswitch: https://github.com/EvoluxBR/greenswitch\n.. _eventsocket: https://github.com/fiorix/eventsocket\n.. _pySWITCH: http://pyswitch.sourceforge.net/\n.. _python-ESL: https://github.com/sangoma/python-ESL\n\n\nPerformance monitoring\n----------------------\nIf you'd like to record performance measurements using the \nCDR_ app, some optional numerical packages can be used:\n\n.. _CDR: http://switchio.readthedocs.io/en/latest/apps.html#cdr\n\n===============  ================ ================================\nFeature          Dependency        Installation\n===============  ================ ================================\nMetrics Capture  `pandas`_        ``pip install switchio[metrics]``\nGraphing         `matplotlib`_    ``pip install switchio[graphing]``\nHDF5             `pytables`_ [#]_ ``pip install switchio[hdf5]``\n===============  ================ ================================\n\n.. [#] ``pytables`` support is a bit shaky and not recommended unless\n       you intend to locally process massive data sets worth of CDRs.\n       The default CSV backend is usually sufficient on a modern file\n       system.\n\n.. _pandas: http://pandas.pydata.org/\n.. _matplotlib: http://matplotlib.org/\n.. _pytables: http://www.pytables.org/\n\n\nLicense\n-------\nAll files that are part of this project are covered by the following\nlicense, except where explicitly noted.\n\n    This Source Code Form is subject to the terms of the Mozilla Public\n    License, v. 2.0. If a copy of the MPL was not distributed with this\n    file, You can obtain one at http://mozilla.org/MPL/2.0/.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/friends-of-freeswitch/switchio", "keywords": "", "license": "Mozilla", "maintainer": "", "maintainer_email": "", "name": "switchio", "package_url": "https://pypi.org/project/switchio/", "platform": "linux", "project_url": "https://pypi.org/project/switchio/", "project_urls": {"Homepage": "https://github.com/friends-of-freeswitch/switchio"}, "release_url": "https://pypi.org/project/switchio/0.1.0a1/", "requires_dist": null, "requires_python": "", "summary": "asyncio powered FreeSWITCH cluster control", "version": "0.1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://docs.python.org/3.6/library/asyncio.html\" rel=\"nofollow\">asyncio</a> powered <a href=\"https://freeswitch.org/\" rel=\"nofollow\">FreeSWITCH</a> cluster control using pure <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> 3.5+</p>\n<p><a href=\"https://pypi.org/project/switchio\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aee44bf1aa4dce22129bea054ecaa21a4a85e569/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737769746368696f2e737667\"></a> <a href=\"https://travis-ci.org/friends-of-freeswitch/switchio\" rel=\"nofollow\"><img alt=\"travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/227472b706fec615cfa6c085ecd48cf8453d43d3/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f667269656e64732d6f662d667265657377697463682f737769746368696f2f6d61737465722e737667\"></a> <a href=\"https://pypi.org/project/switchio\" rel=\"nofollow\"><img alt=\"versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af8588390e307b2aa7ddd9235e97141e2dd86b9f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f737769746368696f2e737667\"></a> <a href=\"https://pypi.org/project/switchio\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d1fbfa055ed0a365d7f05b0c89a9616136b5b388/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f737769746368696f2e737667\"></a> <a href=\"http://switchio.readthedocs.io\" rel=\"nofollow\"><img alt=\"docs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/916e1dd32c4d91d7e8f521cb3c2eb4f581a93d11/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f737769746368696f2f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p><tt>switchio</tt> (pronounced <em>Switch Ee OoH</em>) is the next evolution of <a href=\"https://github.com/sangoma/switchy\" rel=\"nofollow\">switchy</a>\n(think <em>Bulbasaur</em> -&gt; <em>Ivysaur</em>) which leverages modern Python\u2019s new native\n<a href=\"https://docs.python.org/3.6/library/asyncio-task.html\" rel=\"nofollow\">coroutine</a> syntax and, for now, <a href=\"https://docs.python.org/3.6/library/asyncio.html\" rel=\"nofollow\">asyncio</a>.</p>\n<p>API-wise the project intends to be the <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">flask</a> for VoIP but with a focus on\nperformance and scalability more like <a href=\"https://github.com/channelcat/sanic\" rel=\"nofollow\">sanic</a>.</p>\n<div id=\"use-the-power-of-async-and-await\">\n<h2>Use the power of <tt>async</tt> and <tt>await</tt>!</h2>\n<p>Build a routing system using Python\u2019s new <a href=\"https://docs.python.org/3.6/library/asyncio-task.html\" rel=\"nofollow\">coroutine</a> syntax:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">switchio.apps.routers</span> <span class=\"kn\">import</span> <span class=\"n\">Router</span>\n\n<span class=\"n\">router</span> <span class=\"o\">=</span> <span class=\"n\">Router</span><span class=\"p\">(</span><span class=\"n\">guards</span><span class=\"o\">=</span><span class=\"p\">{</span>\n    <span class=\"s1\">'Call-Direction'</span><span class=\"p\">:</span> <span class=\"s1\">'inbound'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'variable_sofia_profile'</span><span class=\"p\">:</span> <span class=\"s1\">'external'</span><span class=\"p\">})</span>\n\n<span class=\"nd\">@router</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'(.*)'</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">welcome</span><span class=\"p\">(</span><span class=\"n\">sess</span><span class=\"p\">,</span> <span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">router</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Say hello to inbound calls.\n    \"\"\"</span>\n    <span class=\"k\">await</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">answer</span><span class=\"p\">()</span>  <span class=\"c1\"># resumes once call has been fully answered</span>\n    <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Answered call to </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">groups</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)))</span>\n\n    <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">playback</span><span class=\"p\">(</span><span class=\"s1\">'ivr/ivr-welcome_to_freeswitch.wav'</span><span class=\"p\">)</span> <span class=\"c1\"># non-blocking</span>\n    <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">log</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"Playing welcome message\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">recv</span><span class=\"p\">(</span><span class=\"s2\">\"PLAYBACK_STOP\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">sess</span><span class=\"o\">.</span><span class=\"n\">hangup</span><span class=\"p\">()</span>  <span class=\"c1\"># resumes once call has been fully hungup</span>\n</pre>\n<p>Run this app (assuming it\u2019s in <tt>dialplan.py</tt>) from the shell:</p>\n<pre>$ switchio serve fs-host1 fs-host2 fs-host3 --app ./dialplan.py:router\n</pre>\n</div>\n<div id=\"spin-up-an-auto-dialer\">\n<h2>Spin up an auto-dialer</h2>\n<p>Run thousands of call flows to stress test your service system using\nthe built-in <a href=\"http://switchio.readthedocs.io/en/latest/callgen.html\" rel=\"nofollow\">auto-dialer</a>:</p>\n<pre>$ switchio dial fs-tester1 fs-tester2 --profile external --proxy myproxy.com --rate 100 --limit 3000\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install switchio\n</pre>\n</div>\n<div id=\"id1\">\n<h2>Docs</h2>\n<p>Oh we\u2019ve got them <a href=\"https://switchio.readthedocs.org/\" rel=\"nofollow\">docs</a>!</p>\n</div>\n<div id=\"how-do-i-deploy-my-freeswitch-cluster\">\n<h2>How do I deploy my FreeSWITCH cluster?</h2>\n<ul>\n<li>Enable <a href=\"https://freeswitch.org/confluence/display/FREESWITCH/mod_event_socket#mod_event_socket-Configuration\" rel=\"nofollow\">inbound ESL</a> connections</li>\n<li>Add a <a href=\"https://freeswitch.org/confluence/display/FREESWITCH/mod_dptools%3A+park\" rel=\"nofollow\">park-only</a> dialplan (Hint: we include one <a href=\"https://github.com/friends-of-freeswitch/switchio/blob/master/conf/switchiodp.xml\" rel=\"nofollow\">here</a>)</li>\n</ul>\n<p>See the <a href=\"https://switchio.readthedocs.org/\" rel=\"nofollow\">docs</a> for the deats!</p>\n</div>\n<div id=\"what-s-included\">\n<h2>What\u2019s included?</h2>\n<ul>\n<li>A slew of <a href=\"http://switchio.readthedocs.io/en/latest/apps.html\" rel=\"nofollow\">built-in apps</a></li>\n<li>A full blown <a href=\"http://switchio.readthedocs.io/en/latest/callgen.html\" rel=\"nofollow\">auto-dialer</a> originally built for stress testing VoIP service systems</li>\n<li>Super detailed ESL event logging</li>\n</ul>\n</div>\n<div id=\"how-can-i-contribute\">\n<h2>How can I contribute?</h2>\n<p>Have an idea for a general purpose <tt>switchio</tt> app or helper?\nMake a PR here on GitHub!</p>\n<p>Also, if you like <tt>switchio</tt> let us know on <a href=\"https://riot.im/app/#/room/#freeswitch:matrix.org\" rel=\"nofollow\">Riot</a>!</p>\n</div>\n<div id=\"wait-how-is-switchio-different-from-other-esl-clients\">\n<h2>Wait, how is <tt>switchio</tt> different from other ESL clients?</h2>\n<p><tt>switchio</tt> differentiates itself by supporting FreeSWITCH\n<em>process cluster control</em> as well as focusing on leveraging the\nmost modern Python language features. <tt>switchio</tt> takes pride\nin being a <em>batteries included</em> framework that tries to make all\nthe tricky things about FreeSWITCH a cinch.</p>\n</div>\n<div id=\"what-if-i-m-stuck-on-python-2\">\n<h2>What if I\u2019m stuck on Python 2?</h2>\n<p>Check out these other great projects:</p>\n<ul>\n<li><a href=\"https://github.com/EvoluxBR/greenswitch\" rel=\"nofollow\">greenswitch</a></li>\n<li><a href=\"https://github.com/fiorix/eventsocket\" rel=\"nofollow\">eventsocket</a></li>\n<li><a href=\"http://pyswitch.sourceforge.net/\" rel=\"nofollow\">pySWITCH</a></li>\n<li><a href=\"https://github.com/sangoma/python-ESL\" rel=\"nofollow\">python-ESL</a></li>\n</ul>\n</div>\n<div id=\"performance-monitoring\">\n<h2>Performance monitoring</h2>\n<p>If you\u2019d like to record performance measurements using the\n<a href=\"http://switchio.readthedocs.io/en/latest/apps.html#cdr\" rel=\"nofollow\">CDR</a> app, some optional numerical packages can be used:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Feature</th>\n<th>Dependency</th>\n<th>Installation</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>Metrics Capture</td>\n<td><a href=\"http://pandas.pydata.org/\" rel=\"nofollow\">pandas</a></td>\n<td><tt>pip install switchio[metrics]</tt></td>\n</tr>\n<tr><td>Graphing</td>\n<td><a href=\"http://matplotlib.org/\" rel=\"nofollow\">matplotlib</a></td>\n<td><tt>pip install switchio[graphing]</tt></td>\n</tr>\n<tr><td>HDF5</td>\n<td><a href=\"http://www.pytables.org/\" rel=\"nofollow\">pytables</a> <a href=\"#id4\" id=\"id3\" rel=\"nofollow\">[1]</a></td>\n<td><tt>pip install switchio[hdf5]</tt></td>\n</tr>\n</tbody>\n</table>\n<table id=\"id4\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[1]</a></td><td><tt>pytables</tt> support is a bit shaky and not recommended unless\nyou intend to locally process massive data sets worth of CDRs.\nThe default CSV backend is usually sufficient on a modern file\nsystem.</td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>All files that are part of this project are covered by the following\nlicense, except where explicitly noted.</p>\n<blockquote>\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at <a href=\"http://mozilla.org/MPL/2.0/\" rel=\"nofollow\">http://mozilla.org/MPL/2.0/</a>.</blockquote>\n</div>\n\n          </div>"}, "last_serial": 3335839, "releases": {"0.1.0a0": [{"comment_text": "", "digests": {"md5": "71b746289822161cca3756dda9f8863c", "sha256": "c4ece1cf5fac4dc8f16288803a1756a1bb8fd679646f587edf8a1bf269205e20"}, "downloads": -1, "filename": "switchio-0.1.0a0.tar.gz", "has_sig": false, "md5_digest": "71b746289822161cca3756dda9f8863c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69424, "upload_time": "2017-10-31T16:01:00", "upload_time_iso_8601": "2017-10-31T16:01:00.421149Z", "url": "https://files.pythonhosted.org/packages/9d/bb/0fd3f4486160deffe6412dfc0928f106e452894d441abca68b6d2ad40960/switchio-0.1.0a0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "3b3faa422dd09e9860a1a1c1ae970050", "sha256": "203c9ef1471e50ce7723149ca04c4e912de6c3c5e3bec48ff380ce17ae4dbcc3"}, "downloads": -1, "filename": "switchio-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "3b3faa422dd09e9860a1a1c1ae970050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69052, "upload_time": "2017-11-15T16:30:49", "upload_time_iso_8601": "2017-11-15T16:30:49.648136Z", "url": "https://files.pythonhosted.org/packages/b8/17/bf60e39fcb972f6990695aa33f96d9637c04363564bf10219cb149fcfed9/switchio-0.1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b3faa422dd09e9860a1a1c1ae970050", "sha256": "203c9ef1471e50ce7723149ca04c4e912de6c3c5e3bec48ff380ce17ae4dbcc3"}, "downloads": -1, "filename": "switchio-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "3b3faa422dd09e9860a1a1c1ae970050", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69052, "upload_time": "2017-11-15T16:30:49", "upload_time_iso_8601": "2017-11-15T16:30:49.648136Z", "url": "https://files.pythonhosted.org/packages/b8/17/bf60e39fcb972f6990695aa33f96d9637c04363564bf10219cb149fcfed9/switchio-0.1.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:23 2020"}