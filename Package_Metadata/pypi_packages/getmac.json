{"info": {"author": "Christopher Goes", "author_email": "ghostofgoes@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: IronPython", "Programming Language :: Python :: Implementation :: Jython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: System :: Networking", "Topic :: System :: Systems Administration", "Topic :: Utilities"], "description": "\n[![Latest version on PyPI](https://badge.fury.io/py/getmac.svg)](https://pypi.org/project/getmac/)\n[![Coverage Status](https://coveralls.io/repos/github/GhostofGoes/getmac/badge.svg?branch=master)](https://coveralls.io/github/GhostofGoes/getmac?branch=master)\n[![Travis CI build status](https://travis-ci.org/GhostofGoes/getmac.svg?branch=master)](https://travis-ci.org/GhostofGoes/getmac)\n[![Appveyor build status](https://ci.appveyor.com/api/projects/status/4o9mx4d35adrbssq/branch/master?svg=true)](https://ci.appveyor.com/project/GhostofGoes/get-mac)\n[![PyPI download](https://pepy.tech/badge/getmac)](https://pepy.tech/project/getmac)\n[![PyPI downloads of the old name](https://pepy.tech/badge/get-mac)](https://pepy.tech/project/get-mac)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/ambv/black)\n\nPure-Python package to get the MAC address of network interfaces and hosts on the local network.\n\nIt provides a platform-independent interface to get the MAC addresses of:\n\n* System network interfaces (by interface name)\n* Remote hosts on the local network (by IPv4/IPv6 address or hostname)\n\nIt provides one function: `get_mac_address()`\n\n[![asciicast](https://asciinema.org/a/rk6dUACUcZY18taCuIBE5Ssus.png)](https://asciinema.org/a/rk6dUACUcZY18taCuIBE5Ssus)\n\n[![asciicast](https://asciinema.org/a/n3insrxfyECch6wxtJEl3LHfv.png)](https://asciinema.org/a/n3insrxfyECch6wxtJEl3LHfv)\n\n\n## Should you use this package?\nIf you only need the addresses of network interfaces, have a limited set\nof platforms to support, and are able to handle C-extension modules, then\nyou should instead check out the excellent [netifaces](https://pypi.org/project/netifaces/)\npackage by Alastair Houghton. It is significantly faster, well-maintained,\nand has been around much longer than this has. Another great option that\nfits these requirements is the well-known and battle-hardened\n[psutil](https://github.com/giampaolo/psutil) package by Giampaolo Rodola.\n\nIf the only system you need to run on is Linux, you can run as root,\nand C-extensions modules are fine, then you should instead check out the\n[arpreq](https://pypi.org/project/arpreq/) package by Sebastian Schrader.\nIt can be significantly faster, especially in the case of hosts that\ndon't exist (at least currently).\n\nIf you want to use `psutil`, `scapy`, or `netifaces`, I have examples of how to do\nso in a [GitHub Gist](https://gist.github.com/GhostofGoes/0a8e82930e75afcefbd879a825ba4c26).\n\n## Installation\nStable release from PyPI\n\n```bash\npip install getmac\n```\n\nLatest development version\n\n```bash\npip install https://github.com/ghostofgoes/getmac/archive/master.tar.gz\n```\n\n## Python examples\n```python\nfrom getmac import get_mac_address\neth_mac = get_mac_address(interface=\"eth0\")\nwin_mac = get_mac_address(interface=\"Ethernet 3\")\nip_mac = get_mac_address(ip=\"192.168.0.1\")\nip6_mac = get_mac_address(ip6=\"::1\")\nhost_mac = get_mac_address(hostname=\"localhost\")\nupdated_mac = get_mac_address(ip=\"10.0.0.1\", network_request=True)\n\n# Changing the port used for updating ARP table (UDP packet)\nfrom getmac import getmac\ngetmac.PORT = 44444  # Default: 55555\nprint(getmac.get_mac_address(ip=\"192.168.0.1\", network_request=True))\n\n# Enabling debugging\nfrom getmac import getmac\ngetmac.DEBUG = 2  # DEBUG level 2\nprint(getmac.get_mac_address(interface=\"Ethernet 3\"))\n```\n\n## Terminal examples\n**Python 2 users**: use `getmac2` or `python -m getmac` instead of `getmac`.\n```bash\ngetmac --help\ngetmac --version\n\n# Invoking with no arguments will return MAC of the default interface\ngetmac\n\n# Usage as a module\npython3 -m getmac\n\n# Interface names, IPv4/IPv6 addresses, or Hostnames can be specified\ngetmac --interface ens33\ngetmac --ip 192.168.0.1\ngetmac --ip6 ::1\ngetmac --hostname home.router\n\n# Running as a Python module with shorthands for the arguments\npython -m getmac -i 'Ethernet 4'\npython -m getmac -4 192.168.0.1\npython -m getmac -6 ::1\npython -m getmac -n home.router\n\n# Getting the MAC address of a remote host requires the ARP table to be populated.\n# By default, getmac will populate the table by sending a UDP packet to a high port on the host (defaults to 55555).\n# This can be disabled with --no-network-request, as shown here:\ngetmac --no-network-request -4 192.168.0.1\npython -m getmac --no-network-request -n home.router\n\n# Enable output messages\ngetmac --verbose\n\n# Debug levels can be specified with '-d'\ngetmac -v --debug\npython -m getmac -v -d -i enp11s4\npython -m getmac -v -dd -n home.router\n```\n\n## Function: get_mac_address()\n* `interface`: Name of a network interface on the system\n* `ip`: IPv4 address of a remote host\n* `ip6`: IPv6 address of a remote host\n* `hostname`: Hostname of a remote host\n* `network_request`: If an network request should be made to update\nand populate the ARP/NDP table of remote hosts used to lookup MACs\nin most circumstances. Disable this if you want to just use what's\nalready in the table, or if you have requirements to prevent network\ntraffic. The network request is a empty UDP packet sent to a high\nport, 55555 by default. This can be changed by setting `getmac.PORT`\nto the desired integer value. Additionally, on Windows, this will\nsend a UDP packet to 1.1.1.1:53 to attempt to determine the default interface.\n\n## Configuration\n* `logging.getLogger('getmac')`: Runtime messages and errors are recorded to the `getmac` logger using the `logging` \nmodule. They can be configured by using `logging.basicConfig()` or adding handlers to the `getmac` logger.\n* `getmac.getmac.DEBUG`: integer value that controls debugging output. The higher the value, the more output you get.\n* `getmac.getmac.PORT`: UDP port used to populate the ARP/NDP table \n(see the documentation of the `network_request` argument in `get_mac_address()` for details)\n\n## Features\n* Pure-Python (no compiled C-extensions required!)\n* Python 2.7 and 3.4+\n* Lightweight, with no dependencies and a small package size\n* Can be dropped into a project as a standalone .py file\n* Supports most interpreters: CPython, pypy, pypy3, IronPython 2.7, and Jython 2.7\n* Provides a simple command line tool (when installed as a package)\n* MIT licensed!\n\n## Legacy Python versions\nIf you are running a old Python (2.6/3.3 and older) or interpreter, then you\ncan install an older version of `getmac` that supported that version.\n The wheels are available in the\n [GitHub releases](https://github.com/GhostofGoes/getmac/releases), or\n from PyPI with a current version of `pip` and some special arguments.\n* Python 2.5: get-mac 0.5.0\n* Python 2.6: getmac 0.6.0\n* Python 3.2: get-mac 0.3.0\n* Python 3.3: get-mac 0.3.0\n\nNOTE: these versions do not have many of the performance improvements,\nplatform support, and bug fixes that came with later releases.\nThey generally work, just not as well. However, if you're using such\nan old Python, you probably don't care about all that :)\n\n## Notes\n* If none of the arguments are selected, the default\nnetwork interface for the system will be used.\n* \"Remote hosts\" refer to hosts in your local layer 2 network, also\ncommonly referred to as a \"broadcast domain\", \"LAN\", or \"VLAN\". As far\nas I know, there is not a reliable method to get a MAC address for a\nremote host external to the LAN. If you know any methods otherwise, please\nopen a GitHub issue or shoot me an email, I'd love to be wrong about this.\n* The first four arguments are mutually exclusive. `network_request`\ndoes not have any functionality when the `interface` argument is\nspecified, and can be safely set if using in a script.\n* The physical transport is assumed to be Ethernet (802.3). Others, such as\nWi-Fi (802.11), are currently not tested or considered. I plan to\naddress this in the future, and am definitely open to pull requests\nor issues related to this, including error reports.\n* Exceptions will be handled silently and returned as a None.\n    If you run into problems, you can set DEBUG to true and get more\n    information about what's happening. If you're still having issues,\n    please create an issue on GitHub and include the output with DEBUG enabled.\n\n## Commands and techniques by platform\n* Windows\n    * Commands: `getmac.exe`, `ipconfig.exe`, `arp.exe`, `wmic.exe`\n    * Libraries: `uuid`, `ctypes`, `socket`\n* Linux/Unix\n    * Commands: `arp`, `ip`, `ifconfig`, `netstat`, `ip link`, `lanscan`\n    * Libraries: `uuid`, `fcntl`, `socket`\n    * Files: `/sys/class/net/{iface}/address`, `/proc/net/arp`\n    * Default interfaces: `/proc/net/route`, `route`, `ip route list`\n* Mac OSX (Darwin)\n    * `networksetup`\n    * Same commands as Linux\n* WSL\n    * Windows commands are used for remote hosts\n    * Unix commands are used for interfaces\n* OpenBSD\n    * Commands: `ifconfig`, `arp`\n    * Default interfaces: `route`\n* FreeBSD\n    * Commands: `ifconfig`, `arp`\n    * Default interfaces: `netstat`\n\n## Platforms currently supported\nAll or almost all features should work on \"supported\" platforms. \nWhile other versions of the same family or distro may work, they\nare untested and may have bugs or missing features.\n* Windows\n    * Desktop: 7, 8, 8.1, 10\n    * Server: TBD\n    * Partially supported (untested): 2000, XP, Vista\n* Linux distros\n    * CentOS/RHEL 6+ (Only with Python 2.7+)\n    * Ubuntu 16.04+ (15.10 and older should work, but are untested)\n    * Fedora (24+)\n* Mac OSX (Darwin)\n    * The latest two versions probably (TBD)\n* Windows Subsystem for Linux (WSL)\n* FreeBSD (11+)\n* OpenBSD\n* Docker\n\n## Docker\n```bash\ndocker build -f packaging/Dockerfile -t getmac .\ndocker run -it getmac:latest --help\ndocker run -it getmac:latest --version\ndocker run -it getmac:latest -n localhost\n```\n\n## Caveats\n* Depending on the platform, there could be a performance detriment,\ndue to heavy usage of regular expressions.\n* Platform test coverage is imperfect. If you're having issues,\nthen you might be using a platform I haven't been able to test.\nKeep calm, open a GitHub issue, and I'd be more than happy to help.\n\n## Known Issues\n* Linux, WSL: Getting the mac of a local interface IP does not currently work\n(`getmac -4 10.0.0.4` will fail if `10.0.0.4` is the IP address of a local interface).\nThis issue may be present on other POSIX systems as well.\n* Hostnames for IPv6 devices are not yet supported.\n* Windows: the \"default\" (used when no arguments set or specified) \nof selecting the default route interface only works effectively \nif `network_request` is enabled. If not, `Ethernet` is used as the default.\n* IPv6 support is good but lags behind IPv4 in some places\nand isn't as well-tested across the supported platform set.\n\n## Background and history\nThe Python standard library has a robust set of networking functionality,\nsuch as `urllib`, `ipaddress`, `ftplib`, `telnetlib`, `ssl`, and more.\nImagine my surprise, then, when I discovered there was not a way to get a\nseemingly simple piece of information: a MAC address. This package was born\nout of a need to get the MAC address of hosts on the network without\nneeding admin permissions, and a cross-platform way get the addresses\nof local interfaces.\n\nIn Fall 2018 the package name changed to `getmac` from `get-mac`. This\naffected the package name, the CLI script, and some of the documentation.\nThere were no changes to the core library code. While both package names \nwill updated on PyPI, the use of `getmac` is preferred.\n\n## Contributing\nContributors are more than welcome!\nSee the [contribution guide](CONTRIBUTING.md) to get started,\nand checkout the [todo list](TODO.md) for a full list of tasks and bugs.\n\nBefore submitting a PR, please make sure you've completed the\n[pull request checklist](CONTRIBUTING.md#Code_requirements)!\n\nThe [Python Discord server](https://discord.gg/python) is a good place\nto ask questions or discuss the project (Handle: @KnownError).\n\n### Contributors\n* Christopher Goes (@ghostofgoes) - Author and maintainer\n* Calvin Tran (@cyberhobbes) - Windows interface detection improvements\n* Izra Faturrahman (@Frizz925) - Unit tests using the platform samples\n* Jose Gonzalez (@Komish) - Docker container and Docker testing\n* @fortunate-man - Awesome usage videos\n* @martmists - legacy Python compatibility improvements\n* @hargoniX - scripts and specfiles for RPM packaging\n* Ville Skytt\u00e4 (@scop) - arping lookup support\n\n## Sources\nMany of the methods used to acquire an address and the core logic framework\nare attributed to the CPython project's UUID implementation.\n* https://github.com/python/cpython/blob/master/Lib/uuid.py\n* https://github.com/python/cpython/blob/2.7/Lib/uuid.py\n\n### Other notable sources\n* [_unix_fcntl_by_interface](https://stackoverflow.com/a/4789267/2214380)\n* [_windows_get_remote_mac_ctypes](goo.gl/ymhZ9p)\n* [String joining](https://stackoverflow.com/a/3258612/2214380)\n\n## License\nMIT. Feel free to copy, modify, and use to your heart's content. Enjoy :)\n\n\n# Changelog\n\n**NOTE**: if any changes significantly impact your project or use case,\n please open an issue on [GitHub](https://github.com/GhostofGoes/getmac/issues)\n or send me an email (see git commit author info for address).\n\n## NEXT (XX/XX/XXXX)\n* TBD\n\n\n## 0.8.2 (12/07/2019)\n\n**Announcement**: Python 2 compatibility will be dropped in getmac 1.0.0, which will be finished sometime in 2020. If you are stuck on Python 2, consider loosely pinning the version in your dependencies list, e.g. `getmac<1`. I will continue to fix reported bugs and accept patches for the last release before 1.0.0, however active development will cease and new features will not be backported.\n\n### Changed\n* Added warning about Python 2 compatibility being dropped in 1.0.0\n* Officially support Python 3.8\n* Documented a known issue with looking up IP of a local interface on Linux/WSL (See the \"Known Issues\" section in the README)\n* Added remote host lookup using `arping` as last resort\n\n### Dev\n* Standardized formatting on [Black](https://github.com/psf/black)\n* Lint additions: `vulture`, several Flake8 plugins\n* Pinned test dependencies (pytest 5 dropped Python 2 support)\n* Various quality-of-life improvements for contributors/developers\n\n\n## 0.8.1 (05/14/2019)\n\n### Changed\n* Fixed sockets being opened and not closed when `ip` or `ip6` were used,\nwhich could lead to a `ResourceWarning` (GH-42)\n\n\n## 0.8.0 (04/09/2019)\n\n### Added\n* OpenBSD support\n* FreeBSD support\n* Python logging is now used instead of `print` (logger: `getmac`)\n* Include tests in the source distribution\n* (CLI) Added aliases for `--no-network-requests`: `-N` and `--no-net`\n* (CLI) New argument: `-v`/`--verbose`\n\n### Changed\n* Errors are now logged instead of raising a `RuntimeWarning`\n* Improved Ubuntu support\n* Performance improvements\n\n### Development\n* Significant increase in overall test coverage\n* Fixed and migrated the sample tests to `pytest`\n* Added tests for the CLI\n\n\n## 0.7.0 (01/27/2019)\n\n### Added\n* Type annotations (PEP 484)\n\n### Removed\n* Dropped support for Python 2.6\n* Removed the usage of third-party packages (`netifaces`, `psutil`, `scapy`, and `arpreq`).\nThis should improve the performance of lookups of non-existent interfaces\nor hosts, since this feature was punishing that path without providing much value.\nIf you want to use these packages directly, I have a guide on how to do so on a\n[GitHub Gist](https://gist.github.com/GhostofGoes/0a8e82930e75afcefbd879a825ba4c26).\n\n### Changed\n* Significantly improved the performance of the common cases on Linux\nfor interfaces and remote hosts\n* Improved POSIX interface performance. Commands specific to OSX\nwill be run only on that platform, and vice-versa.\n* Significantly improved the speed and accuracy of determining\nthe default interface on Linux\n* Python 2 will install an executor named getmac2 and Python 3 an\nexecutor named getmac so they do not conflict when both RPMs are\ninstalled on the same system (Credit: @hargoniX)\n* The `warnings` module will only be imported if a error/warning\noccurs (improve compatibility with some freezers, notably PyInstaller)\n* Improved system platform detection\n* Various other minor performance improvements\n\n### Development\n* Added unit tests for the samples (Credit: @Frizz925)\n* Scripts for building RPMs in the /scripts directory (Credit: @hargoniX)\n* Improved code quality and health checks\n* Include the CHANGELOG on the PyPI project page\n* Using `pytest` for all tests now instead of `unittest`\n\n### Documentation\n* Added instructions on how to build a Debian package (Credit: @kofrezo)\n\n\n## 0.6.0 (10/06/2018)\n### Added\n* Windows default interface detection if `network_request` is enabled (Credit: @cyberhobbes)\n* Docker container (Credit: @Komish)\n\n### Changed\n* Changed project name to `getmac`. This applies to the\ncommand line tool, GitHub, and the documentation.\n* Use proper Python 2-compatible print functions (Credit: @martmists)\n\n### Removed\n* Support for Python 2.5. It is not feasible to test, and potentially\nbreaks some useful language features, such as `__future__`\n* Variables PORT and DEBUG from top-level package imports, since changing\nthem would have no actual effect on execution. Instead, use `getmac.getmac.DEBUG`.\n\n### Dev\n* Added example videos demonstrating usage (Credit: @fortunate-man)\n* Added contribution guide\n* Added documentation on ReadTheDocs\n* Added a manpage\n\n\n## 0.5.0 (09/24/2018)\n### Added\n* Full support for Windows Subsystem for Linux (WSL). This is working for\nall features, including default interface selection! The only edge case\nis lookup of remote host IP addresses that are actually local interfaces\nwill not resolve to a MAC (which should be ff-ff-ff-ff-ff-ff).\n### Changed\n* Require `argparse` if Python version is 2.6 or older\n### Dev\n* Updated tox tests: added Jython and IronPython, removed 2.6\n\n\n## 0.4.0 (09/21/2018)\n### Added\n* New methods for remote host MACs\n    * Windows: `arp`\n    * POSIX: `arpreq` package\n* New methods for interface MACs\n    * Windows: `wmic nic`\n* DEBUG levels: DEBUG value is now an integer, and increasing it will\nincrease the amount and verbosity of output. On the CLI, it can be\nconfigured by increasing the amount of characters for the debug argument,\ne.g. '-dd' for DEBUG level 2.\n* Jython support (Note: on Windows Jython currently only works with interfaces)\n* IronPython support\n\n### Changed\n* **Significant** performance improvement for remote hosts. Previously,\nthe average for `get_mac_address(ip='10.0.0.100')` was 1.71 seconds.\nNow, the average is `12.7 miliseconds`, with the special case of a unpopulated\narp table being only slightly higher. This was brought about by changes in\nhow the arp table is populated. The original method was to use the\nhost's `ping` command to send an ICMP packet to the host. This took time,\nwhich heavily delayed the ability to actually get an address. The solution\nis to instead simply send a empty UDP packet to a high port. The port\nthis packet is sent to can be configured using the module variable `getmac.PORT`.\n* \"Fixed\" resolution of localhost/127.0.0.1 by hardcoding the response.\nThis should resolve a lot of problematic edge cases. I'm ok with this\nfor now since I don't know of a case when it isn't all zeroes.\n* Greatly increased the reliability of getting host and interface MACs on Windows\n* Improved debugging output\n* Tightened up the size of `getmac.py`\n* Various minor stability and performance improvements\n* Add LICENSE to PyPI package\n\n### Removed\n* Support for Python 3.2 and 3.3. The total downloads from PyPI with\nthose versions in August was ~53k and ~407K, respectfully. The majority\nof those are likely from automated testing (e.g. TravisCI) and not\nactual users. Therefore, I've decided to drop support to simplify\ndevelopment, especially since before 3.4 the 3.x series was still\nvery much a  \"work in progress\".\n\n### Dev\n* Added automated tests for Windows using Appveyor\n* Tox runner for tests\n* Added github.io page\n* Improved TravisCI testing\n\n\n## 0.3.0 (08/30/2018)\n### Added\n* Attempt to use Python modules if they're installed. This is useful\nfor larger projects that already have them installed as dependencies,\nas they provide a more reliable means of getting information.\n    * `psutil`: Interface MACs on all platforms\n    * `scapy`: Interface MACs and Remote MACs on all platforms\n    * `netifaces`: Interface MACs on Non-Windows platforms\n* New methods for remote MACs\n    * POSIX: `ip neighbor show`, Abuse of `uuid._arp_getnode()`\n* New methods for Interface MACs\n    * POSIX: `lanscan -ai` (HP-UX)\n\n### Changed\n* Certain critical failures that should never happen will now warn\ninstead of failing silently.\n* Added a sanity check to the `ip6` argument (IPv6 addresses)\n* Improved performance in some areas\n* Improved debugging output\n\n### Fixed\n* Major Bugfix: search of `proc/net/arp` would return shorter addresses in the\nsame subnet if they came earlier in the sequence. Example: a search for\n`192.168.16.2` on Linux would instead return the MAC address of\n`192.168.16.254` with no errors or warning whatsoever.\n* Significantly improved default interface detection. Default\ninterfaces are now properly detected on Linux and most other\nPOSIX platforms with `ip` or `route` commands available, or the\n`netifaces` Python module.\n\n### Dev\n* Makefile\n* Vagrantfile to spin up testing VMs for various platforms using [Vagrant](https://www.vagrantup.com/docs/)\n* Added more samples of command output on platforms (Ubuntu 18.04 LTS)\n\n\n## 0.2.4 (08/26/2018)\n### Fixed\n* Fixed identification of remote host on OSX\n* Resolved hangs and noticeable lag that occurred when \"network_request\"\nwas True (the default)\n\n\n## 0.2.3 (08/07/2018)\n### Fixed\n* Remote host for Python 3 on Windows\n\n\n## 0.2.2\n### Added\n* Short versions of CLI arguments (e.g. \"-i\" for \"--interface\")\n\n### Changed\n* Improved usage of \"ping\" across platforms and IP versions\n* Various minor tweaks for performance\n* Improved Windows detection\n\n### Fixed\n* Use of ping command with hostname\n\n### Dev:\n* Improvements to internal code\n\n\n## 0.2.1\nNothing changed. PyPI just won't let me push changes without a new version.\n\n\n## 0.2.0 (04/15/2018)\n### Added\n* Checks for default interface on Linux systems\n* New methods of hunting for addresses on Windows, Mac OS X, and Linux\n\n### Changed\n* CLI will output nothing if it failed, instead of \"None\"\n* CLI will return with 1 on failure, 0 on success\n* No CLI arguments now implies the default host network interface\n* Added an argumnent for debugging: `--debug`\n* Removed `-d` option from `--no-network-requests`\n\n### Fixed\n* Interfaces on Windows and Linux (including Bash for Windows)\n* Many bugs\n\n### Removed\n* Support for Python 2.6 on the CLI\n\n### Dev\n* Overhaul of internals\n\n\n## 0.1.0 (04/15/2018):\n### Added\n* Addition of a terminal command: `get-mac`\n* Ability to run as a module from the command line: `python -m getmac`\n\n### Changed\n* `arp_request` argument was renamed to `network_request`\n* Updated docstring\n* Slight reduction in the size of getmac.py\n\n### Dev\n* Overhauled the README\n* Moved tests into their own folder\n* Added Python 3.7 to list of supported snakes\n\n\n## 0.0.4 (11/12/2017):\n* Python 2.6 compatibility\n\n\n## 0.0.3 (11/11/2017):\n* Fixed some addresses returning without colons\n* Added more rigorous checks on addresses before returning them\n\n\n## 0.0.2 (11/11/2017):\n* Remove print statements and other debugging output\n\n\n## 0.0.1 (10/23/2017):\n* Initial pre-alpha\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GhostofGoes/getmac", "keywords": "getmac,get-mac,macaddress,mac-address,mac,ethernet,mac-48,networking,network,networking,layer2,layer-2,802.3", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "getmac", "package_url": "https://pypi.org/project/getmac/", "platform": "", "project_url": "https://pypi.org/project/getmac/", "project_urls": {"Discord server": "https://discord.gg/python", "Homepage": "https://github.com/GhostofGoes/getmac", "Issue tracker": "https://github.com/GhostofGoes/getmac/issues"}, "release_url": "https://pypi.org/project/getmac/0.8.2/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "summary": "Get MAC addresses of remote hosts and local interfaces", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/getmac/\" rel=\"nofollow\"><img alt=\"Latest version on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96cdc6cf97bcd4a2d098237c91387fb1272f0eee/68747470733a2f2f62616467652e667572792e696f2f70792f6765746d61632e737667\"></a>\n<a href=\"https://coveralls.io/github/GhostofGoes/getmac?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/805fdd9c03e28e8f067e905973b5ec48cc223e61/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f47686f73746f66476f65732f6765746d61632f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://travis-ci.org/GhostofGoes/getmac\" rel=\"nofollow\"><img alt=\"Travis CI build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ecf9a6e12c38f5a33176c7eab1807c9b27d41166/68747470733a2f2f7472617669732d63692e6f72672f47686f73746f66476f65732f6765746d61632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/GhostofGoes/get-mac\" rel=\"nofollow\"><img alt=\"Appveyor build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/90cf884909e923594bbfb94d9b32fc7a3a5b3460/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f346f396d7834643335616472627373712f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://pepy.tech/project/getmac\" rel=\"nofollow\"><img alt=\"PyPI download\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b439e0781a85dfa559d7117df9b544e37423cf0a/68747470733a2f2f706570792e746563682f62616467652f6765746d6163\"></a>\n<a href=\"https://pepy.tech/project/get-mac\" rel=\"nofollow\"><img alt=\"PyPI downloads of the old name\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfbf787d31144241cecae0cf051ab2a9030f2c1d/68747470733a2f2f706570792e746563682f62616467652f6765742d6d6163\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>Pure-Python package to get the MAC address of network interfaces and hosts on the local network.</p>\n<p>It provides a platform-independent interface to get the MAC addresses of:</p>\n<ul>\n<li>System network interfaces (by interface name)</li>\n<li>Remote hosts on the local network (by IPv4/IPv6 address or hostname)</li>\n</ul>\n<p>It provides one function: <code>get_mac_address()</code></p>\n<p><a href=\"https://asciinema.org/a/rk6dUACUcZY18taCuIBE5Ssus\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f3f90c2aac0efe1dcdf892a69f55ca54fba29e28/68747470733a2f2f61736369696e656d612e6f72672f612f726b366455414355635a5931387461437549424535537375732e706e67\"></a></p>\n<p><a href=\"https://asciinema.org/a/n3insrxfyECch6wxtJEl3LHfv\" rel=\"nofollow\"><img alt=\"asciicast\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0c4bbdb086e232b755b8a4d75a97a14eb9a4261/68747470733a2f2f61736369696e656d612e6f72672f612f6e33696e737278667945436368367778744a456c334c4866762e706e67\"></a></p>\n<h2>Should you use this package?</h2>\n<p>If you only need the addresses of network interfaces, have a limited set\nof platforms to support, and are able to handle C-extension modules, then\nyou should instead check out the excellent <a href=\"https://pypi.org/project/netifaces/\" rel=\"nofollow\">netifaces</a>\npackage by Alastair Houghton. It is significantly faster, well-maintained,\nand has been around much longer than this has. Another great option that\nfits these requirements is the well-known and battle-hardened\n<a href=\"https://github.com/giampaolo/psutil\" rel=\"nofollow\">psutil</a> package by Giampaolo Rodola.</p>\n<p>If the only system you need to run on is Linux, you can run as root,\nand C-extensions modules are fine, then you should instead check out the\n<a href=\"https://pypi.org/project/arpreq/\" rel=\"nofollow\">arpreq</a> package by Sebastian Schrader.\nIt can be significantly faster, especially in the case of hosts that\ndon't exist (at least currently).</p>\n<p>If you want to use <code>psutil</code>, <code>scapy</code>, or <code>netifaces</code>, I have examples of how to do\nso in a <a href=\"https://gist.github.com/GhostofGoes/0a8e82930e75afcefbd879a825ba4c26\" rel=\"nofollow\">GitHub Gist</a>.</p>\n<h2>Installation</h2>\n<p>Stable release from PyPI</p>\n<pre>pip install getmac\n</pre>\n<p>Latest development version</p>\n<pre>pip install https://github.com/ghostofgoes/getmac/archive/master.tar.gz\n</pre>\n<h2>Python examples</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">getmac</span> <span class=\"kn\">import</span> <span class=\"n\">get_mac_address</span>\n<span class=\"n\">eth_mac</span> <span class=\"o\">=</span> <span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"o\">=</span><span class=\"s2\">\"eth0\"</span><span class=\"p\">)</span>\n<span class=\"n\">win_mac</span> <span class=\"o\">=</span> <span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"o\">=</span><span class=\"s2\">\"Ethernet 3\"</span><span class=\"p\">)</span>\n<span class=\"n\">ip_mac</span> <span class=\"o\">=</span> <span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.0.1\"</span><span class=\"p\">)</span>\n<span class=\"n\">ip6_mac</span> <span class=\"o\">=</span> <span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">ip6</span><span class=\"o\">=</span><span class=\"s2\">\"::1\"</span><span class=\"p\">)</span>\n<span class=\"n\">host_mac</span> <span class=\"o\">=</span> <span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">hostname</span><span class=\"o\">=</span><span class=\"s2\">\"localhost\"</span><span class=\"p\">)</span>\n<span class=\"n\">updated_mac</span> <span class=\"o\">=</span> <span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"10.0.0.1\"</span><span class=\"p\">,</span> <span class=\"n\">network_request</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Changing the port used for updating ARP table (UDP packet)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">getmac</span> <span class=\"kn\">import</span> <span class=\"n\">getmac</span>\n<span class=\"n\">getmac</span><span class=\"o\">.</span><span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">44444</span>  <span class=\"c1\"># Default: 55555</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">getmac</span><span class=\"o\">.</span><span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"s2\">\"192.168.0.1\"</span><span class=\"p\">,</span> <span class=\"n\">network_request</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># Enabling debugging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">getmac</span> <span class=\"kn\">import</span> <span class=\"n\">getmac</span>\n<span class=\"n\">getmac</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"mi\">2</span>  <span class=\"c1\"># DEBUG level 2</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">getmac</span><span class=\"o\">.</span><span class=\"n\">get_mac_address</span><span class=\"p\">(</span><span class=\"n\">interface</span><span class=\"o\">=</span><span class=\"s2\">\"Ethernet 3\"</span><span class=\"p\">))</span>\n</pre>\n<h2>Terminal examples</h2>\n<p><strong>Python 2 users</strong>: use <code>getmac2</code> or <code>python -m getmac</code> instead of <code>getmac</code>.</p>\n<pre>getmac --help\ngetmac --version\n\n<span class=\"c1\"># Invoking with no arguments will return MAC of the default interface</span>\ngetmac\n\n<span class=\"c1\"># Usage as a module</span>\npython3 -m getmac\n\n<span class=\"c1\"># Interface names, IPv4/IPv6 addresses, or Hostnames can be specified</span>\ngetmac --interface ens33\ngetmac --ip <span class=\"m\">192</span>.168.0.1\ngetmac --ip6 ::1\ngetmac --hostname home.router\n\n<span class=\"c1\"># Running as a Python module with shorthands for the arguments</span>\npython -m getmac -i <span class=\"s1\">'Ethernet 4'</span>\npython -m getmac -4 <span class=\"m\">192</span>.168.0.1\npython -m getmac -6 ::1\npython -m getmac -n home.router\n\n<span class=\"c1\"># Getting the MAC address of a remote host requires the ARP table to be populated.</span>\n<span class=\"c1\"># By default, getmac will populate the table by sending a UDP packet to a high port on the host (defaults to 55555).</span>\n<span class=\"c1\"># This can be disabled with --no-network-request, as shown here:</span>\ngetmac --no-network-request -4 <span class=\"m\">192</span>.168.0.1\npython -m getmac --no-network-request -n home.router\n\n<span class=\"c1\"># Enable output messages</span>\ngetmac --verbose\n\n<span class=\"c1\"># Debug levels can be specified with '-d'</span>\ngetmac -v --debug\npython -m getmac -v -d -i enp11s4\npython -m getmac -v -dd -n home.router\n</pre>\n<h2>Function: get_mac_address()</h2>\n<ul>\n<li><code>interface</code>: Name of a network interface on the system</li>\n<li><code>ip</code>: IPv4 address of a remote host</li>\n<li><code>ip6</code>: IPv6 address of a remote host</li>\n<li><code>hostname</code>: Hostname of a remote host</li>\n<li><code>network_request</code>: If an network request should be made to update\nand populate the ARP/NDP table of remote hosts used to lookup MACs\nin most circumstances. Disable this if you want to just use what's\nalready in the table, or if you have requirements to prevent network\ntraffic. The network request is a empty UDP packet sent to a high\nport, 55555 by default. This can be changed by setting <code>getmac.PORT</code>\nto the desired integer value. Additionally, on Windows, this will\nsend a UDP packet to 1.1.1.1:53 to attempt to determine the default interface.</li>\n</ul>\n<h2>Configuration</h2>\n<ul>\n<li><code>logging.getLogger('getmac')</code>: Runtime messages and errors are recorded to the <code>getmac</code> logger using the <code>logging</code>\nmodule. They can be configured by using <code>logging.basicConfig()</code> or adding handlers to the <code>getmac</code> logger.</li>\n<li><code>getmac.getmac.DEBUG</code>: integer value that controls debugging output. The higher the value, the more output you get.</li>\n<li><code>getmac.getmac.PORT</code>: UDP port used to populate the ARP/NDP table\n(see the documentation of the <code>network_request</code> argument in <code>get_mac_address()</code> for details)</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>Pure-Python (no compiled C-extensions required!)</li>\n<li>Python 2.7 and 3.4+</li>\n<li>Lightweight, with no dependencies and a small package size</li>\n<li>Can be dropped into a project as a standalone .py file</li>\n<li>Supports most interpreters: CPython, pypy, pypy3, IronPython 2.7, and Jython 2.7</li>\n<li>Provides a simple command line tool (when installed as a package)</li>\n<li>MIT licensed!</li>\n</ul>\n<h2>Legacy Python versions</h2>\n<p>If you are running a old Python (2.6/3.3 and older) or interpreter, then you\ncan install an older version of <code>getmac</code> that supported that version.\nThe wheels are available in the\n<a href=\"https://github.com/GhostofGoes/getmac/releases\" rel=\"nofollow\">GitHub releases</a>, or\nfrom PyPI with a current version of <code>pip</code> and some special arguments.</p>\n<ul>\n<li>Python 2.5: get-mac 0.5.0</li>\n<li>Python 2.6: getmac 0.6.0</li>\n<li>Python 3.2: get-mac 0.3.0</li>\n<li>Python 3.3: get-mac 0.3.0</li>\n</ul>\n<p>NOTE: these versions do not have many of the performance improvements,\nplatform support, and bug fixes that came with later releases.\nThey generally work, just not as well. However, if you're using such\nan old Python, you probably don't care about all that :)</p>\n<h2>Notes</h2>\n<ul>\n<li>If none of the arguments are selected, the default\nnetwork interface for the system will be used.</li>\n<li>\"Remote hosts\" refer to hosts in your local layer 2 network, also\ncommonly referred to as a \"broadcast domain\", \"LAN\", or \"VLAN\". As far\nas I know, there is not a reliable method to get a MAC address for a\nremote host external to the LAN. If you know any methods otherwise, please\nopen a GitHub issue or shoot me an email, I'd love to be wrong about this.</li>\n<li>The first four arguments are mutually exclusive. <code>network_request</code>\ndoes not have any functionality when the <code>interface</code> argument is\nspecified, and can be safely set if using in a script.</li>\n<li>The physical transport is assumed to be Ethernet (802.3). Others, such as\nWi-Fi (802.11), are currently not tested or considered. I plan to\naddress this in the future, and am definitely open to pull requests\nor issues related to this, including error reports.</li>\n<li>Exceptions will be handled silently and returned as a None.\nIf you run into problems, you can set DEBUG to true and get more\ninformation about what's happening. If you're still having issues,\nplease create an issue on GitHub and include the output with DEBUG enabled.</li>\n</ul>\n<h2>Commands and techniques by platform</h2>\n<ul>\n<li>Windows\n<ul>\n<li>Commands: <code>getmac.exe</code>, <code>ipconfig.exe</code>, <code>arp.exe</code>, <code>wmic.exe</code></li>\n<li>Libraries: <code>uuid</code>, <code>ctypes</code>, <code>socket</code></li>\n</ul>\n</li>\n<li>Linux/Unix\n<ul>\n<li>Commands: <code>arp</code>, <code>ip</code>, <code>ifconfig</code>, <code>netstat</code>, <code>ip link</code>, <code>lanscan</code></li>\n<li>Libraries: <code>uuid</code>, <code>fcntl</code>, <code>socket</code></li>\n<li>Files: <code>/sys/class/net/{iface}/address</code>, <code>/proc/net/arp</code></li>\n<li>Default interfaces: <code>/proc/net/route</code>, <code>route</code>, <code>ip route list</code></li>\n</ul>\n</li>\n<li>Mac OSX (Darwin)\n<ul>\n<li><code>networksetup</code></li>\n<li>Same commands as Linux</li>\n</ul>\n</li>\n<li>WSL\n<ul>\n<li>Windows commands are used for remote hosts</li>\n<li>Unix commands are used for interfaces</li>\n</ul>\n</li>\n<li>OpenBSD\n<ul>\n<li>Commands: <code>ifconfig</code>, <code>arp</code></li>\n<li>Default interfaces: <code>route</code></li>\n</ul>\n</li>\n<li>FreeBSD\n<ul>\n<li>Commands: <code>ifconfig</code>, <code>arp</code></li>\n<li>Default interfaces: <code>netstat</code></li>\n</ul>\n</li>\n</ul>\n<h2>Platforms currently supported</h2>\n<p>All or almost all features should work on \"supported\" platforms.\nWhile other versions of the same family or distro may work, they\nare untested and may have bugs or missing features.</p>\n<ul>\n<li>Windows\n<ul>\n<li>Desktop: 7, 8, 8.1, 10</li>\n<li>Server: TBD</li>\n<li>Partially supported (untested): 2000, XP, Vista</li>\n</ul>\n</li>\n<li>Linux distros\n<ul>\n<li>CentOS/RHEL 6+ (Only with Python 2.7+)</li>\n<li>Ubuntu 16.04+ (15.10 and older should work, but are untested)</li>\n<li>Fedora (24+)</li>\n</ul>\n</li>\n<li>Mac OSX (Darwin)\n<ul>\n<li>The latest two versions probably (TBD)</li>\n</ul>\n</li>\n<li>Windows Subsystem for Linux (WSL)</li>\n<li>FreeBSD (11+)</li>\n<li>OpenBSD</li>\n<li>Docker</li>\n</ul>\n<h2>Docker</h2>\n<pre>docker build -f packaging/Dockerfile -t getmac .\ndocker run -it getmac:latest --help\ndocker run -it getmac:latest --version\ndocker run -it getmac:latest -n localhost\n</pre>\n<h2>Caveats</h2>\n<ul>\n<li>Depending on the platform, there could be a performance detriment,\ndue to heavy usage of regular expressions.</li>\n<li>Platform test coverage is imperfect. If you're having issues,\nthen you might be using a platform I haven't been able to test.\nKeep calm, open a GitHub issue, and I'd be more than happy to help.</li>\n</ul>\n<h2>Known Issues</h2>\n<ul>\n<li>Linux, WSL: Getting the mac of a local interface IP does not currently work\n(<code>getmac -4 10.0.0.4</code> will fail if <code>10.0.0.4</code> is the IP address of a local interface).\nThis issue may be present on other POSIX systems as well.</li>\n<li>Hostnames for IPv6 devices are not yet supported.</li>\n<li>Windows: the \"default\" (used when no arguments set or specified)\nof selecting the default route interface only works effectively\nif <code>network_request</code> is enabled. If not, <code>Ethernet</code> is used as the default.</li>\n<li>IPv6 support is good but lags behind IPv4 in some places\nand isn't as well-tested across the supported platform set.</li>\n</ul>\n<h2>Background and history</h2>\n<p>The Python standard library has a robust set of networking functionality,\nsuch as <code>urllib</code>, <code>ipaddress</code>, <code>ftplib</code>, <code>telnetlib</code>, <code>ssl</code>, and more.\nImagine my surprise, then, when I discovered there was not a way to get a\nseemingly simple piece of information: a MAC address. This package was born\nout of a need to get the MAC address of hosts on the network without\nneeding admin permissions, and a cross-platform way get the addresses\nof local interfaces.</p>\n<p>In Fall 2018 the package name changed to <code>getmac</code> from <code>get-mac</code>. This\naffected the package name, the CLI script, and some of the documentation.\nThere were no changes to the core library code. While both package names\nwill updated on PyPI, the use of <code>getmac</code> is preferred.</p>\n<h2>Contributing</h2>\n<p>Contributors are more than welcome!\nSee the <a href=\"CONTRIBUTING.md\" rel=\"nofollow\">contribution guide</a> to get started,\nand checkout the <a href=\"TODO.md\" rel=\"nofollow\">todo list</a> for a full list of tasks and bugs.</p>\n<p>Before submitting a PR, please make sure you've completed the\n<a href=\"CONTRIBUTING.md#Code_requirements\" rel=\"nofollow\">pull request checklist</a>!</p>\n<p>The <a href=\"https://discord.gg/python\" rel=\"nofollow\">Python Discord server</a> is a good place\nto ask questions or discuss the project (Handle: @KnownError).</p>\n<h3>Contributors</h3>\n<ul>\n<li>Christopher Goes (@ghostofgoes) - Author and maintainer</li>\n<li>Calvin Tran (@cyberhobbes) - Windows interface detection improvements</li>\n<li>Izra Faturrahman (@Frizz925) - Unit tests using the platform samples</li>\n<li>Jose Gonzalez (@Komish) - Docker container and Docker testing</li>\n<li>@fortunate-man - Awesome usage videos</li>\n<li>@martmists - legacy Python compatibility improvements</li>\n<li>@hargoniX - scripts and specfiles for RPM packaging</li>\n<li>Ville Skytt\u00e4 (@scop) - arping lookup support</li>\n</ul>\n<h2>Sources</h2>\n<p>Many of the methods used to acquire an address and the core logic framework\nare attributed to the CPython project's UUID implementation.</p>\n<ul>\n<li><a href=\"https://github.com/python/cpython/blob/master/Lib/uuid.py\" rel=\"nofollow\">https://github.com/python/cpython/blob/master/Lib/uuid.py</a></li>\n<li><a href=\"https://github.com/python/cpython/blob/2.7/Lib/uuid.py\" rel=\"nofollow\">https://github.com/python/cpython/blob/2.7/Lib/uuid.py</a></li>\n</ul>\n<h3>Other notable sources</h3>\n<ul>\n<li><a href=\"https://stackoverflow.com/a/4789267/2214380\" rel=\"nofollow\">_unix_fcntl_by_interface</a></li>\n<li><a href=\"goo.gl/ymhZ9p\" rel=\"nofollow\">_windows_get_remote_mac_ctypes</a></li>\n<li><a href=\"https://stackoverflow.com/a/3258612/2214380\" rel=\"nofollow\">String joining</a></li>\n</ul>\n<h2>License</h2>\n<p>MIT. Feel free to copy, modify, and use to your heart's content. Enjoy :)</p>\n<h1>Changelog</h1>\n<p><strong>NOTE</strong>: if any changes significantly impact your project or use case,\nplease open an issue on <a href=\"https://github.com/GhostofGoes/getmac/issues\" rel=\"nofollow\">GitHub</a>\nor send me an email (see git commit author info for address).</p>\n<h2>NEXT (XX/XX/XXXX)</h2>\n<ul>\n<li>TBD</li>\n</ul>\n<h2>0.8.2 (12/07/2019)</h2>\n<p><strong>Announcement</strong>: Python 2 compatibility will be dropped in getmac 1.0.0, which will be finished sometime in 2020. If you are stuck on Python 2, consider loosely pinning the version in your dependencies list, e.g. <code>getmac&lt;1</code>. I will continue to fix reported bugs and accept patches for the last release before 1.0.0, however active development will cease and new features will not be backported.</p>\n<h3>Changed</h3>\n<ul>\n<li>Added warning about Python 2 compatibility being dropped in 1.0.0</li>\n<li>Officially support Python 3.8</li>\n<li>Documented a known issue with looking up IP of a local interface on Linux/WSL (See the \"Known Issues\" section in the README)</li>\n<li>Added remote host lookup using <code>arping</code> as last resort</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Standardized formatting on <a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a></li>\n<li>Lint additions: <code>vulture</code>, several Flake8 plugins</li>\n<li>Pinned test dependencies (pytest 5 dropped Python 2 support)</li>\n<li>Various quality-of-life improvements for contributors/developers</li>\n</ul>\n<h2>0.8.1 (05/14/2019)</h2>\n<h3>Changed</h3>\n<ul>\n<li>Fixed sockets being opened and not closed when <code>ip</code> or <code>ip6</code> were used,\nwhich could lead to a <code>ResourceWarning</code> (GH-42)</li>\n</ul>\n<h2>0.8.0 (04/09/2019)</h2>\n<h3>Added</h3>\n<ul>\n<li>OpenBSD support</li>\n<li>FreeBSD support</li>\n<li>Python logging is now used instead of <code>print</code> (logger: <code>getmac</code>)</li>\n<li>Include tests in the source distribution</li>\n<li>(CLI) Added aliases for <code>--no-network-requests</code>: <code>-N</code> and <code>--no-net</code></li>\n<li>(CLI) New argument: <code>-v</code>/<code>--verbose</code></li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Errors are now logged instead of raising a <code>RuntimeWarning</code></li>\n<li>Improved Ubuntu support</li>\n<li>Performance improvements</li>\n</ul>\n<h3>Development</h3>\n<ul>\n<li>Significant increase in overall test coverage</li>\n<li>Fixed and migrated the sample tests to <code>pytest</code></li>\n<li>Added tests for the CLI</li>\n</ul>\n<h2>0.7.0 (01/27/2019)</h2>\n<h3>Added</h3>\n<ul>\n<li>Type annotations (PEP 484)</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>Dropped support for Python 2.6</li>\n<li>Removed the usage of third-party packages (<code>netifaces</code>, <code>psutil</code>, <code>scapy</code>, and <code>arpreq</code>).\nThis should improve the performance of lookups of non-existent interfaces\nor hosts, since this feature was punishing that path without providing much value.\nIf you want to use these packages directly, I have a guide on how to do so on a\n<a href=\"https://gist.github.com/GhostofGoes/0a8e82930e75afcefbd879a825ba4c26\" rel=\"nofollow\">GitHub Gist</a>.</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Significantly improved the performance of the common cases on Linux\nfor interfaces and remote hosts</li>\n<li>Improved POSIX interface performance. Commands specific to OSX\nwill be run only on that platform, and vice-versa.</li>\n<li>Significantly improved the speed and accuracy of determining\nthe default interface on Linux</li>\n<li>Python 2 will install an executor named getmac2 and Python 3 an\nexecutor named getmac so they do not conflict when both RPMs are\ninstalled on the same system (Credit: @hargoniX)</li>\n<li>The <code>warnings</code> module will only be imported if a error/warning\noccurs (improve compatibility with some freezers, notably PyInstaller)</li>\n<li>Improved system platform detection</li>\n<li>Various other minor performance improvements</li>\n</ul>\n<h3>Development</h3>\n<ul>\n<li>Added unit tests for the samples (Credit: @Frizz925)</li>\n<li>Scripts for building RPMs in the /scripts directory (Credit: @hargoniX)</li>\n<li>Improved code quality and health checks</li>\n<li>Include the CHANGELOG on the PyPI project page</li>\n<li>Using <code>pytest</code> for all tests now instead of <code>unittest</code></li>\n</ul>\n<h3>Documentation</h3>\n<ul>\n<li>Added instructions on how to build a Debian package (Credit: @kofrezo)</li>\n</ul>\n<h2>0.6.0 (10/06/2018)</h2>\n<h3>Added</h3>\n<ul>\n<li>Windows default interface detection if <code>network_request</code> is enabled (Credit: @cyberhobbes)</li>\n<li>Docker container (Credit: @Komish)</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Changed project name to <code>getmac</code>. This applies to the\ncommand line tool, GitHub, and the documentation.</li>\n<li>Use proper Python 2-compatible print functions (Credit: @martmists)</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>Support for Python 2.5. It is not feasible to test, and potentially\nbreaks some useful language features, such as <code>__future__</code></li>\n<li>Variables PORT and DEBUG from top-level package imports, since changing\nthem would have no actual effect on execution. Instead, use <code>getmac.getmac.DEBUG</code>.</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Added example videos demonstrating usage (Credit: @fortunate-man)</li>\n<li>Added contribution guide</li>\n<li>Added documentation on ReadTheDocs</li>\n<li>Added a manpage</li>\n</ul>\n<h2>0.5.0 (09/24/2018)</h2>\n<h3>Added</h3>\n<ul>\n<li>Full support for Windows Subsystem for Linux (WSL). This is working for\nall features, including default interface selection! The only edge case\nis lookup of remote host IP addresses that are actually local interfaces\nwill not resolve to a MAC (which should be ff-ff-ff-ff-ff-ff).</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Require <code>argparse</code> if Python version is 2.6 or older</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Updated tox tests: added Jython and IronPython, removed 2.6</li>\n</ul>\n<h2>0.4.0 (09/21/2018)</h2>\n<h3>Added</h3>\n<ul>\n<li>New methods for remote host MACs\n<ul>\n<li>Windows: <code>arp</code></li>\n<li>POSIX: <code>arpreq</code> package</li>\n</ul>\n</li>\n<li>New methods for interface MACs\n<ul>\n<li>Windows: <code>wmic nic</code></li>\n</ul>\n</li>\n<li>DEBUG levels: DEBUG value is now an integer, and increasing it will\nincrease the amount and verbosity of output. On the CLI, it can be\nconfigured by increasing the amount of characters for the debug argument,\ne.g. '-dd' for DEBUG level 2.</li>\n<li>Jython support (Note: on Windows Jython currently only works with interfaces)</li>\n<li>IronPython support</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li><strong>Significant</strong> performance improvement for remote hosts. Previously,\nthe average for <code>get_mac_address(ip='10.0.0.100')</code> was 1.71 seconds.\nNow, the average is <code>12.7 miliseconds</code>, with the special case of a unpopulated\narp table being only slightly higher. This was brought about by changes in\nhow the arp table is populated. The original method was to use the\nhost's <code>ping</code> command to send an ICMP packet to the host. This took time,\nwhich heavily delayed the ability to actually get an address. The solution\nis to instead simply send a empty UDP packet to a high port. The port\nthis packet is sent to can be configured using the module variable <code>getmac.PORT</code>.</li>\n<li>\"Fixed\" resolution of localhost/127.0.0.1 by hardcoding the response.\nThis should resolve a lot of problematic edge cases. I'm ok with this\nfor now since I don't know of a case when it isn't all zeroes.</li>\n<li>Greatly increased the reliability of getting host and interface MACs on Windows</li>\n<li>Improved debugging output</li>\n<li>Tightened up the size of <code>getmac.py</code></li>\n<li>Various minor stability and performance improvements</li>\n<li>Add LICENSE to PyPI package</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>Support for Python 3.2 and 3.3. The total downloads from PyPI with\nthose versions in August was ~53k and ~407K, respectfully. The majority\nof those are likely from automated testing (e.g. TravisCI) and not\nactual users. Therefore, I've decided to drop support to simplify\ndevelopment, especially since before 3.4 the 3.x series was still\nvery much a  \"work in progress\".</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Added automated tests for Windows using Appveyor</li>\n<li>Tox runner for tests</li>\n<li>Added github.io page</li>\n<li>Improved TravisCI testing</li>\n</ul>\n<h2>0.3.0 (08/30/2018)</h2>\n<h3>Added</h3>\n<ul>\n<li>Attempt to use Python modules if they're installed. This is useful\nfor larger projects that already have them installed as dependencies,\nas they provide a more reliable means of getting information.\n<ul>\n<li><code>psutil</code>: Interface MACs on all platforms</li>\n<li><code>scapy</code>: Interface MACs and Remote MACs on all platforms</li>\n<li><code>netifaces</code>: Interface MACs on Non-Windows platforms</li>\n</ul>\n</li>\n<li>New methods for remote MACs\n<ul>\n<li>POSIX: <code>ip neighbor show</code>, Abuse of <code>uuid._arp_getnode()</code></li>\n</ul>\n</li>\n<li>New methods for Interface MACs\n<ul>\n<li>POSIX: <code>lanscan -ai</code> (HP-UX)</li>\n</ul>\n</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Certain critical failures that should never happen will now warn\ninstead of failing silently.</li>\n<li>Added a sanity check to the <code>ip6</code> argument (IPv6 addresses)</li>\n<li>Improved performance in some areas</li>\n<li>Improved debugging output</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Major Bugfix: search of <code>proc/net/arp</code> would return shorter addresses in the\nsame subnet if they came earlier in the sequence. Example: a search for\n<code>192.168.16.2</code> on Linux would instead return the MAC address of\n<code>192.168.16.254</code> with no errors or warning whatsoever.</li>\n<li>Significantly improved default interface detection. Default\ninterfaces are now properly detected on Linux and most other\nPOSIX platforms with <code>ip</code> or <code>route</code> commands available, or the\n<code>netifaces</code> Python module.</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Makefile</li>\n<li>Vagrantfile to spin up testing VMs for various platforms using <a href=\"https://www.vagrantup.com/docs/\" rel=\"nofollow\">Vagrant</a></li>\n<li>Added more samples of command output on platforms (Ubuntu 18.04 LTS)</li>\n</ul>\n<h2>0.2.4 (08/26/2018)</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Fixed identification of remote host on OSX</li>\n<li>Resolved hangs and noticeable lag that occurred when \"network_request\"\nwas True (the default)</li>\n</ul>\n<h2>0.2.3 (08/07/2018)</h2>\n<h3>Fixed</h3>\n<ul>\n<li>Remote host for Python 3 on Windows</li>\n</ul>\n<h2>0.2.2</h2>\n<h3>Added</h3>\n<ul>\n<li>Short versions of CLI arguments (e.g. \"-i\" for \"--interface\")</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>Improved usage of \"ping\" across platforms and IP versions</li>\n<li>Various minor tweaks for performance</li>\n<li>Improved Windows detection</li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Use of ping command with hostname</li>\n</ul>\n<h3>Dev:</h3>\n<ul>\n<li>Improvements to internal code</li>\n</ul>\n<h2>0.2.1</h2>\n<p>Nothing changed. PyPI just won't let me push changes without a new version.</p>\n<h2>0.2.0 (04/15/2018)</h2>\n<h3>Added</h3>\n<ul>\n<li>Checks for default interface on Linux systems</li>\n<li>New methods of hunting for addresses on Windows, Mac OS X, and Linux</li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li>CLI will output nothing if it failed, instead of \"None\"</li>\n<li>CLI will return with 1 on failure, 0 on success</li>\n<li>No CLI arguments now implies the default host network interface</li>\n<li>Added an argumnent for debugging: <code>--debug</code></li>\n<li>Removed <code>-d</code> option from <code>--no-network-requests</code></li>\n</ul>\n<h3>Fixed</h3>\n<ul>\n<li>Interfaces on Windows and Linux (including Bash for Windows)</li>\n<li>Many bugs</li>\n</ul>\n<h3>Removed</h3>\n<ul>\n<li>Support for Python 2.6 on the CLI</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Overhaul of internals</li>\n</ul>\n<h2>0.1.0 (04/15/2018):</h2>\n<h3>Added</h3>\n<ul>\n<li>Addition of a terminal command: <code>get-mac</code></li>\n<li>Ability to run as a module from the command line: <code>python -m getmac</code></li>\n</ul>\n<h3>Changed</h3>\n<ul>\n<li><code>arp_request</code> argument was renamed to <code>network_request</code></li>\n<li>Updated docstring</li>\n<li>Slight reduction in the size of getmac.py</li>\n</ul>\n<h3>Dev</h3>\n<ul>\n<li>Overhauled the README</li>\n<li>Moved tests into their own folder</li>\n<li>Added Python 3.7 to list of supported snakes</li>\n</ul>\n<h2>0.0.4 (11/12/2017):</h2>\n<ul>\n<li>Python 2.6 compatibility</li>\n</ul>\n<h2>0.0.3 (11/11/2017):</h2>\n<ul>\n<li>Fixed some addresses returning without colons</li>\n<li>Added more rigorous checks on addresses before returning them</li>\n</ul>\n<h2>0.0.2 (11/11/2017):</h2>\n<ul>\n<li>Remove print statements and other debugging output</li>\n</ul>\n<h2>0.0.1 (10/23/2017):</h2>\n<ul>\n<li>Initial pre-alpha</li>\n</ul>\n\n          </div>"}, "last_serial": 6260178, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "3d1557901c742c41362248f1cce87063", "sha256": "e3f7bb666cea900e78d4cdad2dcc388f8b02207df5cf0780bdd71b5f5f848988"}, "downloads": -1, "filename": "getmac-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3d1557901c742c41362248f1cce87063", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20097, "upload_time": "2018-10-07T04:49:41", "upload_time_iso_8601": "2018-10-07T04:49:41.062210Z", "url": "https://files.pythonhosted.org/packages/db/e1/e70fb8b0af2b786bb86d442328ce1d8e4ce81549f16577a9cf3b5b78eefd/getmac-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af0f9c7fd3ae4efa3587561ae268d904", "sha256": "b29131de5f23435df336329607f4068535250b11a22a107186febf77c5d4e157"}, "downloads": -1, "filename": "getmac-0.6.0.tar.gz", "has_sig": false, "md5_digest": "af0f9c7fd3ae4efa3587561ae268d904", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34845, "upload_time": "2018-10-07T04:49:42", "upload_time_iso_8601": "2018-10-07T04:49:42.109646Z", "url": "https://files.pythonhosted.org/packages/2f/2d/9ec2a4235216eb7d8a082a6c06e635951733e11aa81e598a9f24680acce1/getmac-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "563b9ed7eb2c434d91a0780bcdb740ba", "sha256": "605ea52fb48310d40cdc8a3c7c52edd8f46de741a90920bc306b9a98023aca0c"}, "downloads": -1, "filename": "getmac-0.7.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "563b9ed7eb2c434d91a0780bcdb740ba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 22678, "upload_time": "2019-01-28T03:58:17", "upload_time_iso_8601": "2019-01-28T03:58:17.639825Z", "url": "https://files.pythonhosted.org/packages/f9/69/31c020c072fdf37fb92b3b688bfd4383a65291fd7cde5508f32e872c12ce/getmac-0.7.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bbfeabf2e78f118574bcba987b271c83", "sha256": "f33294f32455d6d04b6e7539c6e5ad827fc1535d061747146f419e1467eb073e"}, "downloads": -1, "filename": "getmac-0.7.0.tar.gz", "has_sig": false, "md5_digest": "bbfeabf2e78f118574bcba987b271c83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 34525, "upload_time": "2019-01-28T03:58:19", "upload_time_iso_8601": "2019-01-28T03:58:19.419679Z", "url": "https://files.pythonhosted.org/packages/c9/d8/18e170cb6dc5b1c2de39a520ec59ad81fb4f242fb8b6705f345c19429e09/getmac-0.7.0.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "2e5bc53555bfe2d832eedbedbcd57230", "sha256": "08ca043e90d43fd4be6d0a274829ee639dc32d1dfd688c7a30c6cf3faddb586b"}, "downloads": -1, "filename": "getmac-0.8.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2e5bc53555bfe2d832eedbedbcd57230", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 23119, "upload_time": "2019-04-10T03:39:19", "upload_time_iso_8601": "2019-04-10T03:39:19.344602Z", "url": "https://files.pythonhosted.org/packages/91/d4/cd68e6b97fed3c2ffd33b7a2070284e7457d3d486aeb8bf09c9b5b4950c9/getmac-0.8.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15ceb5a9c4af592a3be38862b5fc9e5a", "sha256": "321b4ecbb14514d63afc8550e3f02244fad23ca31dcdaeb685c0a7488d0f3baf"}, "downloads": -1, "filename": "getmac-0.8.0.tar.gz", "has_sig": false, "md5_digest": "15ceb5a9c4af592a3be38862b5fc9e5a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 44828, "upload_time": "2019-04-10T03:39:21", "upload_time_iso_8601": "2019-04-10T03:39:21.033864Z", "url": "https://files.pythonhosted.org/packages/b1/c2/f6b800f98895311bc0de9006ca14177bfc834748b27e812a213f2fdf9ddd/getmac-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "1ee705c7bac294387dc1e95375d6486f", "sha256": "d1e3498b1697922203f5492cc98a4ecc3c8822b30d03cd6e29ae9cca33c502c7"}, "downloads": -1, "filename": "getmac-0.8.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1ee705c7bac294387dc1e95375d6486f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 23384, "upload_time": "2019-05-15T02:14:06", "upload_time_iso_8601": "2019-05-15T02:14:06.926228Z", "url": "https://files.pythonhosted.org/packages/4c/04/ca09648b1ac52cadd9526b78f72dcfd0bedc6368bdf9b212db98b4e7dea6/getmac-0.8.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "268169094f7c84286526bb52078e563e", "sha256": "0811ec6070da26f39d605511c78e960482ddbab22e516d0b7261eeb1d0c61e2d"}, "downloads": -1, "filename": "getmac-0.8.1.tar.gz", "has_sig": false, "md5_digest": "268169094f7c84286526bb52078e563e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 43394, "upload_time": "2019-05-15T02:14:08", "upload_time_iso_8601": "2019-05-15T02:14:08.666699Z", "url": "https://files.pythonhosted.org/packages/6a/18/87b919ec7c2f1d90d80ba0c32b1c5a55aefebbbda2f97b6ceda3666ec718/getmac-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "0041377c3fb7b48dd8eb0418db29854e", "sha256": "2e4aef2dd6c3befccd7cf9e18badddd24ab1992b928e2e811d415ed47137c547"}, "downloads": -1, "filename": "getmac-0.8.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0041377c3fb7b48dd8eb0418db29854e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 24278, "upload_time": "2019-12-08T01:50:08", "upload_time_iso_8601": "2019-12-08T01:50:08.068718Z", "url": "https://files.pythonhosted.org/packages/30/69/73ce4e89c5444dea22b490d70ba4bccef4877691904dd211019fda765b35/getmac-0.8.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf1af0d5c0e5d1fe7f62401bcb726a26", "sha256": "d501d20b71856248cfa07a8758192e86a01077910afb8b659a89946c4d52d368"}, "downloads": -1, "filename": "getmac-0.8.2.tar.gz", "has_sig": false, "md5_digest": "cf1af0d5c0e5d1fe7f62401bcb726a26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 47639, "upload_time": "2019-12-08T01:50:09", "upload_time_iso_8601": "2019-12-08T01:50:09.697143Z", "url": "https://files.pythonhosted.org/packages/60/a2/d64aed61f8f86827eab2e77e49a6158630690daa8130f7452a4b676acefc/getmac-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0041377c3fb7b48dd8eb0418db29854e", "sha256": "2e4aef2dd6c3befccd7cf9e18badddd24ab1992b928e2e811d415ed47137c547"}, "downloads": -1, "filename": "getmac-0.8.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0041377c3fb7b48dd8eb0418db29854e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 24278, "upload_time": "2019-12-08T01:50:08", "upload_time_iso_8601": "2019-12-08T01:50:08.068718Z", "url": "https://files.pythonhosted.org/packages/30/69/73ce4e89c5444dea22b490d70ba4bccef4877691904dd211019fda765b35/getmac-0.8.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf1af0d5c0e5d1fe7f62401bcb726a26", "sha256": "d501d20b71856248cfa07a8758192e86a01077910afb8b659a89946c4d52d368"}, "downloads": -1, "filename": "getmac-0.8.2.tar.gz", "has_sig": false, "md5_digest": "cf1af0d5c0e5d1fe7f62401bcb726a26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*", "size": 47639, "upload_time": "2019-12-08T01:50:09", "upload_time_iso_8601": "2019-12-08T01:50:09.697143Z", "url": "https://files.pythonhosted.org/packages/60/a2/d64aed61f8f86827eab2e77e49a6158630690daa8130f7452a4b676acefc/getmac-0.8.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:46 2020"}