{"info": {"author": "CosmosID", "author_email": "support@cosmosid.com", "bugtrack_url": null, "classifiers": ["Environment :: Console"], "description": "# Cosmos ID\n\n Command line interface (CLI) and Python 3 client library for interacting with the CosmosID API. Only works with Python 3, Python 2.7 is not supported yet.\n\n## Requirements\n\n### OS Packages\n* python3\n* python3-pip\n\n### Python package\n* boto3\n* cliff\n* s3transfer\n* requests\n\n# Installation\n\nThis package provides:\n* core Python 3 client library;\n* a simple CLI for interacting with the CosmosID that uses the core library;\n\n## Basic installation\nThe CLI with the core Python library can be installed using `pip3`.\n* simply run from console `sudo pip3 install cosmosid_cli`\n\n> Note: pip3 and setuptools should be upgraded to latest version. Please update those packages on you workstation regarding to your OS update process before setup cosmosid cli.\n> ```shell\n> E.g. for Ubuntu 14.04 perform following steps:\n> $ sudo apt-get update\n> $ sudo apt-get upgrade\n> $ sudo -H pip3 install -U pip setuptools \n>```\n> If you had have previously installed CosmosID CLI just upgrade CLI  \n> to latest version.\n> ```shell\n> $ sudo -H pip3 install --upgrade cosmosid_cli\n> ```\n\n\n# Using the CosmosID CLI\n\nThe CosmosID CLI supports authentication via CosmosID API Key.\nYour API key can be found on the [CosmosID profile page](https://app.cosmosid.com/settings).\nTo automatically authenticate via CosmosID API Key you should create  \ncredential file `~/.cosmosid` and store your API Key into it in  \nthe following format:\n```json\n{\"api_key\": \"<your api key string>\"}\n```\nYou can directly use your CosmosID API Key, rather than storing it in a credential file. To use API Key authentication, pass your key as an argument to the `cosmosid` command:\n```shell\ncosmosid --api_key=YOUR_API_KEY <command>\n```\n\n## Commands\n\nThere are several types of commands supported by the CosmosID CLI\n1. Commands for retrieving data to terminal (output) from CosmosID cloud - files, runs, analysis.\n2. Commands for uploading metagenomics or amplicon samples to \n   CosmosID cloud for analysis - uploads.\n3. Commands for retrieving the reports archive from CosmosID cloud - reports\n\n> Note: Each command has options. To get usage information for each CosmosID CLI command, the user can simply run `cosmosid <command> --help`\n\n### Retrieve Files\nThe commands for retrieving data have options for output format. The user can get data into the terminal (or another output) in a different format - csv, json, table, value, yaml (table is default), and specify the column(s) to show. In additional there are CSV format options, user can quote\nor unquote or partly quote output values - all, minimal, none, non-numeric (by default only non-numeric values are quoted)\n\nExample of output for the --help options for the <files> command:\n```shell\n$ cosmosid files --help\nusage: cosmosid files [-h] [-f {csv,json,table,value,yaml}] [-c COLUMN]\n                      [--noindent] [--max-width <integer>] [--fit-width]\n                      [--print-empty] [--quote {all,minimal,none,nonnumeric}]\n                      [--parent PARENT]\n                      [--order {type,name,id,status,size,created}] [--up]\n\nShow files in a given directory.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --parent PARENT, -p PARENT\n                        ID of the parent directory. Default: Root\n  --order {type,name,id,status,size,created}, -o {type,name,id,status,size,created}\n                        field for ordering\n  --up                  order direction\n\noutput formatters:\n  output formatter options\n\n  -f {csv,json,table,value,yaml}, --format {csv,json,table,value,yaml}\n                        the output format, defaults to table\n  -c COLUMN, --column COLUMN\n                        specify the column(s) to include, can be repeated\n\njson formatter:\n  --noindent            whether to disable indenting the JSON\n\ntable formatter:\n  --max-width <integer>\n                        Maximum display width, <1 to disable. You can also use\n                        the CLIFF_MAX_TERM_WIDTH environment variable, but the\n                        parameter takes precedence.\n\n  --fit-width       Fit the table to the display width. Implied if --max-\n                        width greater than 0. Set the environment variable\n                        CLIFF_FIT_WIDTH=1 to always enable\n\n --print-empty     Print empty table if there is no data to show.\n\nCSV Formatter:\n  --quote {all,minimal,none,nonnumeric} when to include quotes, defaults to nonnumeric\n```\n\nTo retrieve files (samples) stored in CosmosID simply run the `cosmosid` command with a `files` subcommand. For example:\n```shell\n#to get contents of your CosmosID root folder\ncosmosid files\n\n#to get contents of appropriate folder use its id as argument\ncosmosid files --parent <folder_id>\n\n#to get ordered list simply use the ordering argument with field name with/without order direction\ncosmosid files --parent <folder_id> --order size --up\n```\n### Retrieve Sample Runs\nAn each file (sample) stored in CosmosID has one or more Sample Run(s) associated with it. \nTo retrieve sample run(s) associated with a file simply run the `cosmosid` command with `runs` subcommand. For example:\n```shell\n#to get runs associated with a speciffic file (sample)\ncosmosid runs --id <file_id>\n```    \n### Upload files\nThe CosmosID CLI supports uploading sample files into CosmosID for analysis.\nCosmosID supports the following file formats and extension names:\n.fasta, .fna, .fasta.gz, .fastq, .fq, .fastq.gz, bam, bam.gz, sra, sra.gz. (SRA files can be uploaded without extension)\n\nCosmosID supports the following types of analysis:\n* Metagenomics\n* Amplicon - 16S or ITS (only 16S and ITS supported for now)\n\n> Note: you can get usage help for each command and arguments of CosmosID CLI by simply runnig `cosmosid --help` or `cosmosid <command> --help`\n\nTo upload sample file to CosmosID run `cosmosid` command with `upload` subcommand. By default samples will be uploaded into root folder. To upload sample into specific *existing* folder you must use id of the folder as parameter.\nThe CosmosID CLI supports uploading multiple Single-Read and Paired-End samples. For Paired-End samples, the CLI automatically parse and merge samples in pairs if the samples follow the naming conventions like: xxx_R1.fastq and xxx_R2.fastq OR xxx_R1_001.fastq and xxx_R2_001.fastq. Note: Paired-End samples require \"fastq\" format\n\nRunning example:\n\ncosmosid upload --type metagonomics -f /pathtofile/test1_R1.fastq -f /pathtofile/test1_R2.fastq -f  /pathtofile/test2.fasta\n```shell\n#to upload one sample file for Metagenomics analysis\ncosmosid upload --file <path to file> --type metagenomics\n\n#to upload sample file into specific folder for Amplicon 16s analysis\ncosmosid upload --file <path to file-1> --parent <folder id> --type amplicon-16s\n```\n\n> Note: uploading of a big file takes time, please be patient\n\nOnce file has been uploaded to CosmosID the analyzing process will automatically begin.\nYou can check the status of metagenomics analysis on the page [CosmosID Samples](https://app.cosmosid.com/samples).  \nAmplicon analysis results available only from CosmosID CLI for now.\n\n### Retrieving Analysis Results\n\nAnalysis results can be retrieved from CosmosID by useing run id or file id. The latest run analysis results will be retrieved when file id used.  \nTo retrieve analysis results for a specified run in CosmosID simply run `cosmosid` command with `analysis` subcommand. File  For example:\n```shell\n#to get list of analysis for the latest run of file\ncosmosid analysis --id <file ID>\n\n#to get list of analysis for a given run id\ncosmosid analysis --run_id <run ID>\n\n#to get ordered list of analysis for a given file id simply use ordering argument with field name with/without order direction\ncosmosid analysis --id <file ID> --order created --up\n```\n\n> Note: There is no analysis results for Amplicon 16S and Amplicon ITS sample. Use report generation instead of getting list of analysis for Amplicon 16S and Amplicon ITS.\n\n### Generate Analysis Report Archive\nThe CosmosID CLI supports retrieving the archive of analysis reports from CosmosID for a given `File ID` with a given `Run ID` and saving the archive to a given file.\n\nTo retrieve an analysis report archive with TSV files run the `cosmosid` command with `reports` subcommand.\n```shell\n# to create analysis report archive for the latest run of sample and save it in\n# a current directory with a name equivalent to file name in CosmosID\ncosmosid reports --id <file ID>\n\n# to create analysis report archive for the given run of sample and save it in\n# a current directory with a name equivalent to file name in CosmosID\ncosmosid reports --id <file ID> --run_id <run ID>\n\n# to create analysis report archive for the given run of sample and save it \n# in a given directory\ncosmosid reports --id <file ID> --run_id <run ID> --dir ~/cosmosid/reports\n\n# to create analysis report archive for the given run of sample and save it \n# into a given local file\ncosmosid reports --id <file ID> --output /tmp/analysis_report.zip\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.cosmosid.com/", "keywords": "API Client for CosmosID", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cosmosid-cli", "package_url": "https://pypi.org/project/cosmosid-cli/", "platform": "", "project_url": "https://pypi.org/project/cosmosid-cli/", "project_urls": {"Homepage": "https://www.cosmosid.com/"}, "release_url": "https://pypi.org/project/cosmosid-cli/0.9.2/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Command line client and Python 3 libraries for CosmosID API", "version": "0.9.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Cosmos ID</h1>\n<p>Command line interface (CLI) and Python 3 client library for interacting with the CosmosID API. Only works with Python 3, Python 2.7 is not supported yet.</p>\n<h2>Requirements</h2>\n<h3>OS Packages</h3>\n<ul>\n<li>python3</li>\n<li>python3-pip</li>\n</ul>\n<h3>Python package</h3>\n<ul>\n<li>boto3</li>\n<li>cliff</li>\n<li>s3transfer</li>\n<li>requests</li>\n</ul>\n<h1>Installation</h1>\n<p>This package provides:</p>\n<ul>\n<li>core Python 3 client library;</li>\n<li>a simple CLI for interacting with the CosmosID that uses the core library;</li>\n</ul>\n<h2>Basic installation</h2>\n<p>The CLI with the core Python library can be installed using <code>pip3</code>.</p>\n<ul>\n<li>simply run from console <code>sudo pip3 install cosmosid_cli</code></li>\n</ul>\n<blockquote>\n<p>Note: pip3 and setuptools should be upgraded to latest version. Please update those packages on you workstation regarding to your OS update process before setup cosmosid cli.</p>\n<pre>E.g. <span class=\"k\">for</span> Ubuntu <span class=\"m\">14</span>.04 perform following steps:\n$ sudo apt-get update\n$ sudo apt-get upgrade\n$ sudo -H pip3 install -U pip setuptools \n</pre>\n<p>If you had have previously installed CosmosID CLI just upgrade CLI<br>\nto latest version.</p>\n<pre>$ sudo -H pip3 install --upgrade cosmosid_cli\n</pre>\n</blockquote>\n<h1>Using the CosmosID CLI</h1>\n<p>The CosmosID CLI supports authentication via CosmosID API Key.\nYour API key can be found on the <a href=\"https://app.cosmosid.com/settings\" rel=\"nofollow\">CosmosID profile page</a>.\nTo automatically authenticate via CosmosID API Key you should create<br>\ncredential file <code>~/.cosmosid</code> and store your API Key into it in<br>\nthe following format:</p>\n<pre><span class=\"p\">{</span><span class=\"nt\">\"api_key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;your api key string&gt;\"</span><span class=\"p\">}</span>\n</pre>\n<p>You can directly use your CosmosID API Key, rather than storing it in a credential file. To use API Key authentication, pass your key as an argument to the <code>cosmosid</code> command:</p>\n<pre>cosmosid --api_key<span class=\"o\">=</span>YOUR_API_KEY &lt;command&gt;\n</pre>\n<h2>Commands</h2>\n<p>There are several types of commands supported by the CosmosID CLI</p>\n<ol>\n<li>Commands for retrieving data to terminal (output) from CosmosID cloud - files, runs, analysis.</li>\n<li>Commands for uploading metagenomics or amplicon samples to\nCosmosID cloud for analysis - uploads.</li>\n<li>Commands for retrieving the reports archive from CosmosID cloud - reports</li>\n</ol>\n<blockquote>\n<p>Note: Each command has options. To get usage information for each CosmosID CLI command, the user can simply run <code>cosmosid &lt;command&gt; --help</code></p>\n</blockquote>\n<h3>Retrieve Files</h3>\n<p>The commands for retrieving data have options for output format. The user can get data into the terminal (or another output) in a different format - csv, json, table, value, yaml (table is default), and specify the column(s) to show. In additional there are CSV format options, user can quote\nor unquote or partly quote output values - all, minimal, none, non-numeric (by default only non-numeric values are quoted)</p>\n<p>Example of output for the --help options for the &lt;files&gt; command:</p>\n<pre>$ cosmosid files --help\nusage: cosmosid files <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>-f <span class=\"o\">{</span>csv,json,table,value,yaml<span class=\"o\">}]</span> <span class=\"o\">[</span>-c COLUMN<span class=\"o\">]</span>\n                      <span class=\"o\">[</span>--noindent<span class=\"o\">]</span> <span class=\"o\">[</span>--max-width &lt;integer&gt;<span class=\"o\">]</span> <span class=\"o\">[</span>--fit-width<span class=\"o\">]</span>\n                      <span class=\"o\">[</span>--print-empty<span class=\"o\">]</span> <span class=\"o\">[</span>--quote <span class=\"o\">{</span>all,minimal,none,nonnumeric<span class=\"o\">}]</span>\n                      <span class=\"o\">[</span>--parent PARENT<span class=\"o\">]</span>\n                      <span class=\"o\">[</span>--order <span class=\"o\">{</span>type,name,id,status,size,created<span class=\"o\">}]</span> <span class=\"o\">[</span>--up<span class=\"o\">]</span>\n\nShow files in a given directory.\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --parent PARENT, -p PARENT\n                        ID of the parent directory. Default: Root\n  --order <span class=\"o\">{</span>type,name,id,status,size,created<span class=\"o\">}</span>, -o <span class=\"o\">{</span>type,name,id,status,size,created<span class=\"o\">}</span>\n                        field <span class=\"k\">for</span> ordering\n  --up                  order direction\n\noutput formatters:\n  output formatter options\n\n  -f <span class=\"o\">{</span>csv,json,table,value,yaml<span class=\"o\">}</span>, --format <span class=\"o\">{</span>csv,json,table,value,yaml<span class=\"o\">}</span>\n                        the output format, defaults to table\n  -c COLUMN, --column COLUMN\n                        specify the column<span class=\"o\">(</span>s<span class=\"o\">)</span> to include, can be repeated\n\njson formatter:\n  --noindent            whether to disable indenting the JSON\n\ntable formatter:\n  --max-width &lt;integer&gt;\n                        Maximum display width, &lt;<span class=\"m\">1</span> to disable. You can also use\n                        the CLIFF_MAX_TERM_WIDTH environment variable, but the\n                        parameter takes precedence.\n\n  --fit-width       Fit the table to the display width. Implied <span class=\"k\">if</span> --max-\n                        width greater than <span class=\"m\">0</span>. Set the environment variable\n                        <span class=\"nv\">CLIFF_FIT_WIDTH</span><span class=\"o\">=</span><span class=\"m\">1</span> to always <span class=\"nb\">enable</span>\n\n --print-empty     Print empty table <span class=\"k\">if</span> there is no data to show.\n\nCSV Formatter:\n  --quote <span class=\"o\">{</span>all,minimal,none,nonnumeric<span class=\"o\">}</span> when to include quotes, defaults to nonnumeric\n</pre>\n<p>To retrieve files (samples) stored in CosmosID simply run the <code>cosmosid</code> command with a <code>files</code> subcommand. For example:</p>\n<pre><span class=\"c1\">#to get contents of your CosmosID root folder</span>\ncosmosid files\n\n<span class=\"c1\">#to get contents of appropriate folder use its id as argument</span>\ncosmosid files --parent &lt;folder_id&gt;\n\n<span class=\"c1\">#to get ordered list simply use the ordering argument with field name with/without order direction</span>\ncosmosid files --parent &lt;folder_id&gt; --order size --up\n</pre>\n<h3>Retrieve Sample Runs</h3>\n<p>An each file (sample) stored in CosmosID has one or more Sample Run(s) associated with it.\nTo retrieve sample run(s) associated with a file simply run the <code>cosmosid</code> command with <code>runs</code> subcommand. For example:</p>\n<pre><span class=\"c1\">#to get runs associated with a speciffic file (sample)</span>\ncosmosid runs --id &lt;file_id&gt;\n</pre>\n<h3>Upload files</h3>\n<p>The CosmosID CLI supports uploading sample files into CosmosID for analysis.\nCosmosID supports the following file formats and extension names:\n.fasta, .fna, .fasta.gz, .fastq, .fq, .fastq.gz, bam, bam.gz, sra, sra.gz. (SRA files can be uploaded without extension)</p>\n<p>CosmosID supports the following types of analysis:</p>\n<ul>\n<li>Metagenomics</li>\n<li>Amplicon - 16S or ITS (only 16S and ITS supported for now)</li>\n</ul>\n<blockquote>\n<p>Note: you can get usage help for each command and arguments of CosmosID CLI by simply runnig <code>cosmosid --help</code> or <code>cosmosid &lt;command&gt; --help</code></p>\n</blockquote>\n<p>To upload sample file to CosmosID run <code>cosmosid</code> command with <code>upload</code> subcommand. By default samples will be uploaded into root folder. To upload sample into specific <em>existing</em> folder you must use id of the folder as parameter.\nThe CosmosID CLI supports uploading multiple Single-Read and Paired-End samples. For Paired-End samples, the CLI automatically parse and merge samples in pairs if the samples follow the naming conventions like: xxx_R1.fastq and xxx_R2.fastq OR xxx_R1_001.fastq and xxx_R2_001.fastq. Note: Paired-End samples require \"fastq\" format</p>\n<p>Running example:</p>\n<p>cosmosid upload --type metagonomics -f /pathtofile/test1_R1.fastq -f /pathtofile/test1_R2.fastq -f  /pathtofile/test2.fasta</p>\n<pre><span class=\"c1\">#to upload one sample file for Metagenomics analysis</span>\ncosmosid upload --file &lt;path to file&gt; --type metagenomics\n\n<span class=\"c1\">#to upload sample file into specific folder for Amplicon 16s analysis</span>\ncosmosid upload --file &lt;path to file-1&gt; --parent &lt;folder id&gt; --type amplicon-16s\n</pre>\n<blockquote>\n<p>Note: uploading of a big file takes time, please be patient</p>\n</blockquote>\n<p>Once file has been uploaded to CosmosID the analyzing process will automatically begin.\nYou can check the status of metagenomics analysis on the page <a href=\"https://app.cosmosid.com/samples\" rel=\"nofollow\">CosmosID Samples</a>.<br>\nAmplicon analysis results available only from CosmosID CLI for now.</p>\n<h3>Retrieving Analysis Results</h3>\n<p>Analysis results can be retrieved from CosmosID by useing run id or file id. The latest run analysis results will be retrieved when file id used.<br>\nTo retrieve analysis results for a specified run in CosmosID simply run <code>cosmosid</code> command with <code>analysis</code> subcommand. File  For example:</p>\n<pre><span class=\"c1\">#to get list of analysis for the latest run of file</span>\ncosmosid analysis --id &lt;file ID&gt;\n\n<span class=\"c1\">#to get list of analysis for a given run id</span>\ncosmosid analysis --run_id &lt;run ID&gt;\n\n<span class=\"c1\">#to get ordered list of analysis for a given file id simply use ordering argument with field name with/without order direction</span>\ncosmosid analysis --id &lt;file ID&gt; --order created --up\n</pre>\n<blockquote>\n<p>Note: There is no analysis results for Amplicon 16S and Amplicon ITS sample. Use report generation instead of getting list of analysis for Amplicon 16S and Amplicon ITS.</p>\n</blockquote>\n<h3>Generate Analysis Report Archive</h3>\n<p>The CosmosID CLI supports retrieving the archive of analysis reports from CosmosID for a given <code>File ID</code> with a given <code>Run ID</code> and saving the archive to a given file.</p>\n<p>To retrieve an analysis report archive with TSV files run the <code>cosmosid</code> command with <code>reports</code> subcommand.</p>\n<pre><span class=\"c1\"># to create analysis report archive for the latest run of sample and save it in</span>\n<span class=\"c1\"># a current directory with a name equivalent to file name in CosmosID</span>\ncosmosid reports --id &lt;file ID&gt;\n\n<span class=\"c1\"># to create analysis report archive for the given run of sample and save it in</span>\n<span class=\"c1\"># a current directory with a name equivalent to file name in CosmosID</span>\ncosmosid reports --id &lt;file ID&gt; --run_id &lt;run ID&gt;\n\n<span class=\"c1\"># to create analysis report archive for the given run of sample and save it </span>\n<span class=\"c1\"># in a given directory</span>\ncosmosid reports --id &lt;file ID&gt; --run_id &lt;run ID&gt; --dir ~/cosmosid/reports\n\n<span class=\"c1\"># to create analysis report archive for the given run of sample and save it </span>\n<span class=\"c1\"># into a given local file</span>\ncosmosid reports --id &lt;file ID&gt; --output /tmp/analysis_report.zip\n</pre>\n\n          </div>"}, "last_serial": 6326714, "releases": {"0.0.5": [{"comment_text": "", "digests": {"md5": "b9e177b95ba30759db19196325923b3e", "sha256": "0c80e1db2b2bf7dba31951f20f81c8944767f8ccdf0ae6577e5c7c68f40311bb"}, "downloads": -1, "filename": "cosmosid_cli-0.0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "b9e177b95ba30759db19196325923b3e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16506, "upload_time": "2017-10-05T15:43:44", "upload_time_iso_8601": "2017-10-05T15:43:44.292912Z", "url": "https://files.pythonhosted.org/packages/56/09/5faeeca930aceaaa9882fb9ed9b315a5229137f59f7ccb4c2f9f7d0d3f69/cosmosid_cli-0.0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd0be102d4587ae9954af7d12f8b1832", "sha256": "395e95dc8a8e0088c2da0feb629957647bf2dee054e91b435dde2fc1b3a8c759"}, "downloads": -1, "filename": "cosmosid_cli-0.0.5.tar.gz", "has_sig": false, "md5_digest": "bd0be102d4587ae9954af7d12f8b1832", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13642, "upload_time": "2017-10-05T15:43:46", "upload_time_iso_8601": "2017-10-05T15:43:46.786861Z", "url": "https://files.pythonhosted.org/packages/ea/e0/171ee708680f1af5cd80ad9ca66d8efd41e89cf00f84a4c5ca3ce194a7ce/cosmosid_cli-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "4b5141f789d4a7dfee3a79f89d617dfd", "sha256": "47998449483af7103a9e0fc06ab2cc854278f727d6827cd0d21c3dcf2bf25bd1"}, "downloads": -1, "filename": "cosmosid_cli-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "4b5141f789d4a7dfee3a79f89d617dfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16510, "upload_time": "2017-10-05T16:46:38", "upload_time_iso_8601": "2017-10-05T16:46:38.661915Z", "url": "https://files.pythonhosted.org/packages/86/58/b74ba9ef30bd6d9aac046a84aabe4d7e518423dbb5645ea96866617c9ea7/cosmosid_cli-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ec760ba2fd0a425bc47fc1877f9b56bb", "sha256": "5671466c1e74630ccce111acb5f4a038a4da846c46676e572c8baf959f6a3154"}, "downloads": -1, "filename": "cosmosid_cli-0.0.6.tar.gz", "has_sig": false, "md5_digest": "ec760ba2fd0a425bc47fc1877f9b56bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13638, "upload_time": "2017-10-05T16:46:39", "upload_time_iso_8601": "2017-10-05T16:46:39.851115Z", "url": "https://files.pythonhosted.org/packages/d1/9a/81f0b05cd72b50e84cae3e4379b5256fbf03d71de7d79eaa1b6a505113d9/cosmosid_cli-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "e9293b537d6accf54c6b3dc4afd821f0", "sha256": "8e64e02866b357f709e490e976d7c68449b6feab11e60969e4de15f55fbaf8d3"}, "downloads": -1, "filename": "cosmosid_cli-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "e9293b537d6accf54c6b3dc4afd821f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20168, "upload_time": "2017-10-05T22:11:01", "upload_time_iso_8601": "2017-10-05T22:11:01.197855Z", "url": "https://files.pythonhosted.org/packages/e4/86/752ebc2d2badf054f254457a8b51209b1db549046a15d7e99c795416566c/cosmosid_cli-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be40621ab3bba4ae51b31b9d51f44519", "sha256": "cc3b6e99104ca44f3ce618944ced5a501c51e1385cff181335949d809b9421b6"}, "downloads": -1, "filename": "cosmosid-cli-0.0.7.tar.gz", "has_sig": false, "md5_digest": "be40621ab3bba4ae51b31b9d51f44519", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15932, "upload_time": "2017-10-05T22:11:03", "upload_time_iso_8601": "2017-10-05T22:11:03.836849Z", "url": "https://files.pythonhosted.org/packages/98/5e/d7f2fbee9fed002bac19f31a97ad3c8a85d643296ca239ff5441c13d83e3/cosmosid-cli-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "e349cce03d619bf0d8660256fedf9c93", "sha256": "26a5ac03d089b22ac4a6a4cdc384bb8ca4995c7cad8b830d3aee94a9c5f1fea0"}, "downloads": -1, "filename": "cosmosid_cli-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "e349cce03d619bf0d8660256fedf9c93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.2", "size": 20288, "upload_time": "2017-10-06T10:06:38", "upload_time_iso_8601": "2017-10-06T10:06:38.358042Z", "url": "https://files.pythonhosted.org/packages/c4/83/67d293a249a87b3c4caa663bc501499c5c2ccee1e4661c7963fbefa47a6d/cosmosid_cli-0.0.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96fa614beb00ecee065406204771ce0e", "sha256": "8c3bb7275796469a2abf39d702f4b6bb2d122a78edb5a814db22cb1e9770ac73"}, "downloads": -1, "filename": "cosmosid_cli-0.0.8.tar.gz", "has_sig": false, "md5_digest": "96fa614beb00ecee065406204771ce0e", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.2", "size": 16094, "upload_time": "2017-10-06T10:06:39", "upload_time_iso_8601": "2017-10-06T10:06:39.752725Z", "url": "https://files.pythonhosted.org/packages/bf/7e/a602a57eb190f65099eab06f2f4178e07b8bcee987edbc94c616907179c5/cosmosid_cli-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "20708c057a7cece81a0a94c71ab1d9f8", "sha256": "8a699589319a5a10bec9d08fe4743a21e4f4cd4c3195748ab492c8899e7276dd"}, "downloads": -1, "filename": "cosmosid_cli-0.0.9-py3-none-any.whl", "has_sig": false, "md5_digest": "20708c057a7cece81a0a94c71ab1d9f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.2", "size": 21870, "upload_time": "2017-11-09T14:45:37", "upload_time_iso_8601": "2017-11-09T14:45:37.598989Z", "url": "https://files.pythonhosted.org/packages/f2/1b/8c07cff65c24c119eb8135c872c0948599b83993704dfb16a226a66ebd7d/cosmosid_cli-0.0.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "beec1fa7a4c88c2817b4a885873360af", "sha256": "0bfe7308d5865ecdeb6ba53678f14a3b325ceb7e8efff060dd89409ba4ba0422"}, "downloads": -1, "filename": "cosmosid_cli-0.0.9.tar.gz", "has_sig": false, "md5_digest": "beec1fa7a4c88c2817b4a885873360af", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.2", "size": 17972, "upload_time": "2017-11-09T14:45:39", "upload_time_iso_8601": "2017-11-09T14:45:39.183617Z", "url": "https://files.pythonhosted.org/packages/55/c5/a98effbdb42f53a5bf92a0d6a6b2cb926cca6365ac17018daab1f8e05622/cosmosid_cli-0.0.9.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ff4a106275fe203fc137dabdec3817c9", "sha256": "c909e789d187f71adc30cfc03007b36af9cd343d9d4b34bcce2dec9dc76bd7b7"}, "downloads": -1, "filename": "cosmosid_cli-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff4a106275fe203fc137dabdec3817c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.2", "size": 22107, "upload_time": "2018-02-07T10:04:34", "upload_time_iso_8601": "2018-02-07T10:04:34.509948Z", "url": "https://files.pythonhosted.org/packages/e1/7a/146f6b9fe6bd876eddee06dc611c801da0d829eca0ebf48353764c951e88/cosmosid_cli-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d1fb146b017397ba72a7b73f385612d", "sha256": "5da29fd605ebed060d25e934946ddf478efcb08ebaef7bcd0f660677adf6b7a7"}, "downloads": -1, "filename": "cosmosid_cli-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2d1fb146b017397ba72a7b73f385612d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.2", "size": 18283, "upload_time": "2018-02-07T10:04:37", "upload_time_iso_8601": "2018-02-07T10:04:37.296434Z", "url": "https://files.pythonhosted.org/packages/04/54/475b75683ed4cb0b4c37bd96c3a2d78f63476c39a60bebf346130cb10b2d/cosmosid_cli-0.1.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "9089136e7a92dcacf74fbf321c38145d", "sha256": "99cd2b48f4aa3bd7e344373d13af85fa22cdd60bf55dc6f9334e9a37689cb6e7"}, "downloads": -1, "filename": "cosmosid_cli-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9089136e7a92dcacf74fbf321c38145d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 22904, "upload_time": "2018-06-25T11:58:05", "upload_time_iso_8601": "2018-06-25T11:58:05.144585Z", "url": "https://files.pythonhosted.org/packages/3b/90/a8dd8ce7545b965794c0f7d6a2487be969350f4cc8740c29cb0fdb405783/cosmosid_cli-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0b8fa8d8a143198976f78fb0d3a5751e", "sha256": "57aaef7024331a0ac8437bd34ff08451c2f46aee81bdd09f67258600a44b31e3"}, "downloads": -1, "filename": "cosmosid_cli-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0b8fa8d8a143198976f78fb0d3a5751e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 22908, "upload_time": "2018-06-25T11:58:06", "upload_time_iso_8601": "2018-06-25T11:58:06.574910Z", "url": "https://files.pythonhosted.org/packages/64/f5/1b083ee7b59b88df888bc6a5e0e8886a22395b231b841da64cdba21188a5/cosmosid_cli-0.7.0.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "fdfa54d5d19cbd627f830eb479b756be", "sha256": "e4c7a84e8be38de5f0a14880eb5308a3183e5a70a5c5ef95b3fd4d2a90c86ccb"}, "downloads": -1, "filename": "cosmosid_cli-0.9.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fdfa54d5d19cbd627f830eb479b756be", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 25477, "upload_time": "2019-10-25T15:18:01", "upload_time_iso_8601": "2019-10-25T15:18:01.479406Z", "url": "https://files.pythonhosted.org/packages/c2/d9/28f7f326719bb82a3ee5f8a633afd60dd1cbe6993f9cad7d3a38c030892e/cosmosid_cli-0.9.0-py3-none-any.whl", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "d09c2564ada947df91432096688f4f14", "sha256": "d5e1e4c2686386605bf58a9b58d35fdf5fa4a02826572f18b203517c7eef7f33"}, "downloads": -1, "filename": "cosmosid_cli-0.9.2.tar.gz", "has_sig": false, "md5_digest": "d09c2564ada947df91432096688f4f14", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23328, "upload_time": "2019-12-18T16:57:56", "upload_time_iso_8601": "2019-12-18T16:57:56.406977Z", "url": "https://files.pythonhosted.org/packages/c5/94/b8e43f871c7d128eecb0b06e59509790f05a112665c4ac8627de6c2b6aa3/cosmosid_cli-0.9.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d09c2564ada947df91432096688f4f14", "sha256": "d5e1e4c2686386605bf58a9b58d35fdf5fa4a02826572f18b203517c7eef7f33"}, "downloads": -1, "filename": "cosmosid_cli-0.9.2.tar.gz", "has_sig": false, "md5_digest": "d09c2564ada947df91432096688f4f14", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 23328, "upload_time": "2019-12-18T16:57:56", "upload_time_iso_8601": "2019-12-18T16:57:56.406977Z", "url": "https://files.pythonhosted.org/packages/c5/94/b8e43f871c7d128eecb0b06e59509790f05a112665c4ac8627de6c2b6aa3/cosmosid_cli-0.9.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:58 2020"}