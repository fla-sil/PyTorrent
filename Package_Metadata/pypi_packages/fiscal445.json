{"info": {"author": "Dv8edRoute", "author_email": "dv8edroute@protonmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Office/Business :: Financial :: Accounting"], "description": "\n# fiscal445\n\n## Description\n\nThis script was developed to simplify the determination of reporting dates when using a 445 financial calendar. Many companies use the 445 calendar for financial reporting and it is difficult when setting up reports for YTD, MTD, by quarter runs while only relying on a standard calendar. This module simplifies this by allowing you to set your own  start of the year date and weekending day.\n\n## Prerequisites\nBuilt and tested using\n\npython 3.6+, \npandas 0.25.3+, \nnumpy 1.18.0, \ndatetime,\nsys,\n\n## Deployment\nGeneral Deployment\n\n\npython -m pip install fiscal445\n\n\n\n## Usage\n\n### Import the module\n\n```python\nimport fiscal445 as fc5\n```\n\n#### Set the modules parameters.\n\nTo initialize the 445 calendar table\n\nSyntax: `fc5.cal = fc5.Calendar('YYYY-MM-DD','day').build()` where the date is the start of your fiscal 445 year and the day arg is the the last day of your fiscal week.\n\n#### Examples:\n\n```python\nfc5.cal = fc5.Calendar('2020-02-02','sat').build()\n```\n\n\nWeek of the month it is based on 445 fiscal calendar\n\n```python\nfc5.cal.show.cur_week_of_month()\n```\nreturns `1` based on example date\n\n<br>\n\nWeek of the year it is based on 445\n\n```python\nfc5.cal.show.cur_week_of_year()\n```\nreturns `5` \n\n<br>\nWhich month of the year it is based on 445 calendar\n\n\n```python\nfc5.cal.show.cur_month({optional arg})\n```\nreturns `'March'` without optional arg\n\nWith optional arg example:  `fc5.cal.show.cur_month(3)`\nReturns a sliced string, where the length is based on the optional int arg, representing the name of the month ('Mar') of the year it is, based on the 445 calendar'''\n\n<br>\n\nStart and end for month to date\n\n\n```python\nfc5.cal.show.month_to_date()\n```\nReturns a tuple of the start and end date for month to date reports\n\n`('2020-03-01', '2020-03-09')`\n\n<br>\n\n\nStart and end for month to date most recent week completed\n\n\n```python\nfc5.cal.show.month_to_date_completed()\n```\n\nreturns a tuple of the start and end date for month to date reports for up to the most completed week\n\n`('2020-03-01', '2020-03-08')`\n\nreturns the following if there has not been an entire complete fiscal week for that month. \n\n`'Not available yet!'`\n\n<br>\n\nStart and end for year to date\n\n\n```python\nfc5.cal.show.year_to_date()\n```\n\nreturns a tuple \n\n`('2020-02-02', '2020-03-07')`\n\n<br>\n\nStart and end for year to date most recent week completed\n\n\n```python\nfc5.cal.show.year_to_date_completed\n```\n\nreturns a tuple \n\n`('2020-02-02', '2020-02-29')`\n\n<br>\n\nStart and end dates for completed quarters.\n\n1 for Q1, 2 for Q2, 3 for Q3, 4 for Q4\n\narg is int value for quarter indicated above. `fc5.cal.show.quarter_dates(arg)`\n\n\n```python\nfc5.cal.show.quarter_dates(1)\n```\n\nreturns a tuple \n\n`('2020-02-02', '2020-05-02')`\n\n<br>\n\nStart and end for quarter to date.\n\n1 for Q1, 2 for Q2, 3 for Q3, 4 for Q4\n\narg is int value for quarter above. `fc5.cal.show.quarter_to_date(arg)`\n\n\n```python\nfc5.cal.show.quarter_to_date(1)\n```\n\nreturns a tuple \n\n`('2020-02-02', '2020-03-07')`\n\nreturns the following if the current date is before the requested quarter \n\n`'Quarter not available!'`\n\n<br>\n\nTo view the entire calendar after you have initialized it.\n\n`print(fc5.cal)`\n\n\n## Authors\nDv8edRoute - Original code\n\n## License\nMIT\n\n## Acknowledgments\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dv8edroute/fiscal445/tree/master/fiscal445.0.1.2", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fiscal445", "package_url": "https://pypi.org/project/fiscal445/", "platform": "", "project_url": "https://pypi.org/project/fiscal445/", "project_urls": {"Homepage": "https://github.com/dv8edroute/fiscal445/tree/master/fiscal445.0.1.2"}, "release_url": "https://pypi.org/project/fiscal445/0.1.2/", "requires_dist": ["pandas (>=0.25.3)", "numpy"], "requires_python": ">=3.6", "summary": "445 Fiscal calendar", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fiscal445</h1>\n<h2>Description</h2>\n<p>This script was developed to simplify the determination of reporting dates when using a 445 financial calendar. Many companies use the 445 calendar for financial reporting and it is difficult when setting up reports for YTD, MTD, by quarter runs while only relying on a standard calendar. This module simplifies this by allowing you to set your own  start of the year date and weekending day.</p>\n<h2>Prerequisites</h2>\n<p>Built and tested using</p>\n<p>python 3.6+,\npandas 0.25.3+,\nnumpy 1.18.0,\ndatetime,\nsys,</p>\n<h2>Deployment</h2>\n<p>General Deployment</p>\n<p>python -m pip install fiscal445</p>\n<h2>Usage</h2>\n<h3>Import the module</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fiscal445</span> <span class=\"k\">as</span> <span class=\"nn\">fc5</span>\n</pre>\n<h4>Set the modules parameters.</h4>\n<p>To initialize the 445 calendar table</p>\n<p>Syntax: <code>fc5.cal = fc5.Calendar('YYYY-MM-DD','day').build()</code> where the date is the start of your fiscal 445 year and the day arg is the the last day of your fiscal week.</p>\n<h4>Examples:</h4>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span> <span class=\"o\">=</span> <span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">Calendar</span><span class=\"p\">(</span><span class=\"s1\">'2020-02-02'</span><span class=\"p\">,</span><span class=\"s1\">'sat'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">()</span>\n</pre>\n<p>Week of the month it is based on 445 fiscal calendar</p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">cur_week_of_month</span><span class=\"p\">()</span>\n</pre>\n<p>returns <code>1</code> based on example date</p>\n<br>\n<p>Week of the year it is based on 445</p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">cur_week_of_year</span><span class=\"p\">()</span>\n</pre>\n<p>returns <code>5</code></p>\n<br>\nWhich month of the year it is based on 445 calendar\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">cur_month</span><span class=\"p\">({</span><span class=\"n\">optional</span> <span class=\"n\">arg</span><span class=\"p\">})</span>\n</pre>\n<p>returns <code>'March'</code> without optional arg</p>\n<p>With optional arg example:  <code>fc5.cal.show.cur_month(3)</code>\nReturns a sliced string, where the length is based on the optional int arg, representing the name of the month ('Mar') of the year it is, based on the 445 calendar'''</p>\n<br>\n<p>Start and end for month to date</p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">month_to_date</span><span class=\"p\">()</span>\n</pre>\n<p>Returns a tuple of the start and end date for month to date reports</p>\n<p><code>('2020-03-01', '2020-03-09')</code></p>\n<br>\n<p>Start and end for month to date most recent week completed</p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">month_to_date_completed</span><span class=\"p\">()</span>\n</pre>\n<p>returns a tuple of the start and end date for month to date reports for up to the most completed week</p>\n<p><code>('2020-03-01', '2020-03-08')</code></p>\n<p>returns the following if there has not been an entire complete fiscal week for that month.</p>\n<p><code>'Not available yet!'</code></p>\n<br>\n<p>Start and end for year to date</p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">year_to_date</span><span class=\"p\">()</span>\n</pre>\n<p>returns a tuple</p>\n<p><code>('2020-02-02', '2020-03-07')</code></p>\n<br>\n<p>Start and end for year to date most recent week completed</p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">year_to_date_completed</span>\n</pre>\n<p>returns a tuple</p>\n<p><code>('2020-02-02', '2020-02-29')</code></p>\n<br>\n<p>Start and end dates for completed quarters.</p>\n<p>1 for Q1, 2 for Q2, 3 for Q3, 4 for Q4</p>\n<p>arg is int value for quarter indicated above. <code>fc5.cal.show.quarter_dates(arg)</code></p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">quarter_dates</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>returns a tuple</p>\n<p><code>('2020-02-02', '2020-05-02')</code></p>\n<br>\n<p>Start and end for quarter to date.</p>\n<p>1 for Q1, 2 for Q2, 3 for Q3, 4 for Q4</p>\n<p>arg is int value for quarter above. <code>fc5.cal.show.quarter_to_date(arg)</code></p>\n<pre><span class=\"n\">fc5</span><span class=\"o\">.</span><span class=\"n\">cal</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"o\">.</span><span class=\"n\">quarter_to_date</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>returns a tuple</p>\n<p><code>('2020-02-02', '2020-03-07')</code></p>\n<p>returns the following if the current date is before the requested quarter</p>\n<p><code>'Quarter not available!'</code></p>\n<br>\n<p>To view the entire calendar after you have initialized it.</p>\n<p><code>print(fc5.cal)</code></p>\n<h2>Authors</h2>\n<p>Dv8edRoute - Original code</p>\n<h2>License</h2>\n<p>MIT</p>\n<h2>Acknowledgments</h2>\n\n          </div>"}, "last_serial": 6997812, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1b1ee0f7ae8b10b617a2e4b9218fc448", "sha256": "008f957ac2923dbfdfd2d78c917e198864b9704bce9580b14f815fd7a58c7ab5"}, "downloads": -1, "filename": "fiscal445-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1b1ee0f7ae8b10b617a2e4b9218fc448", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7055, "upload_time": "2020-04-06T13:57:39", "upload_time_iso_8601": "2020-04-06T13:57:39.388798Z", "url": "https://files.pythonhosted.org/packages/16/2f/d03a6edf36f439f01f01bec38802101ee66b5d275a9cadd935d4d9afed15/fiscal445-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ed238337ad96f7f242a5f82e3aa93d2", "sha256": "1ed397a3f949f598a1f3b8d9ff0bf04b854470d59b4a0f4757f9f4a178af7811"}, "downloads": -1, "filename": "fiscal445-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5ed238337ad96f7f242a5f82e3aa93d2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6548, "upload_time": "2020-04-06T13:57:40", "upload_time_iso_8601": "2020-04-06T13:57:40.733118Z", "url": "https://files.pythonhosted.org/packages/03/41/ebe29435ecbbf2da514f4319e0aa108459bf9f1d4cef457125ab6a2bd3af/fiscal445-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "91c36231c48152d956a0e4a8046dcc47", "sha256": "17389c84aea998914c70c76d6f949e89b1335e0a73008f65856820ebe9829011"}, "downloads": -1, "filename": "fiscal445-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "91c36231c48152d956a0e4a8046dcc47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7067, "upload_time": "2020-04-11T02:58:20", "upload_time_iso_8601": "2020-04-11T02:58:20.347540Z", "url": "https://files.pythonhosted.org/packages/c2/fd/00fa6d0706f8762977e8c673decb136c1d5459d8b7082331f85ba72e758b/fiscal445-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f124291abe0137ae20ce5a5cabb67c97", "sha256": "7349506ca11045dabc431247c977ab8cb6a137e76f27b45799318deaba3b9e50"}, "downloads": -1, "filename": "fiscal445-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f124291abe0137ae20ce5a5cabb67c97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6548, "upload_time": "2020-04-11T02:58:21", "upload_time_iso_8601": "2020-04-11T02:58:21.790597Z", "url": "https://files.pythonhosted.org/packages/cf/76/400bebe97b434a0398c11137a6ac99425d21f14a163d0c85bf0f3dc04bdf/fiscal445-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91c36231c48152d956a0e4a8046dcc47", "sha256": "17389c84aea998914c70c76d6f949e89b1335e0a73008f65856820ebe9829011"}, "downloads": -1, "filename": "fiscal445-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "91c36231c48152d956a0e4a8046dcc47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7067, "upload_time": "2020-04-11T02:58:20", "upload_time_iso_8601": "2020-04-11T02:58:20.347540Z", "url": "https://files.pythonhosted.org/packages/c2/fd/00fa6d0706f8762977e8c673decb136c1d5459d8b7082331f85ba72e758b/fiscal445-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f124291abe0137ae20ce5a5cabb67c97", "sha256": "7349506ca11045dabc431247c977ab8cb6a137e76f27b45799318deaba3b9e50"}, "downloads": -1, "filename": "fiscal445-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f124291abe0137ae20ce5a5cabb67c97", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6548, "upload_time": "2020-04-11T02:58:21", "upload_time_iso_8601": "2020-04-11T02:58:21.790597Z", "url": "https://files.pythonhosted.org/packages/cf/76/400bebe97b434a0398c11137a6ac99425d21f14a163d0c85bf0f3dc04bdf/fiscal445-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:09 2020"}