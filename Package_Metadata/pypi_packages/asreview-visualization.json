{"info": {"author": "Utrecht University", "author_email": "asreview@uu.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# ASReview-visualization\n\n![Deploy and release](https://github.com/asreview/asreview-visualization/workflows/Deploy%20and%20release/badge.svg)![Build status](https://github.com/asreview/asreview-visualization/workflows/test-suite/badge.svg)\n\nThis is a plotting/visualization supplemental package for the \n[ASReview](https://github.com/asreview/asreview)\nsoftware. It is a fast way to create a visual impression of the ASReview with different\ndataset, models and model parameters.\n\n## Installation\n\nThe easiest way to install the visualization package is to use the command line:\n\n``` bash\npip install asreview-visualization\n```\n\nAfter installation of the visualization package, asreview should automatically detect it.\nTest this by:\n\n```bash\nasreview --help\n```\n\nIt should list the 'plot' modus.\n\n## Basic usage\n\nState files that were created with the same ASReview settings can be put together/averaged by putting\nthem in the same directory. State files with different settings/datasets should be put in different \ndirectories to compare them.\n\nAs an example consider the following directory structure, where we have two datasets, called `ace` and\n`ptsd`, each of which have 8 runs:\n\n```\n\u251c\u2500\u2500 ace\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_0.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_1.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_2.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_3.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_4.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_5.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_6.h5\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 results_7.h5\n\u2514\u2500\u2500 ptsd\n    \u251c\u2500\u2500 results_0.h5\n    \u251c\u2500\u2500 results_1.h5\n    \u251c\u2500\u2500 results_2.h5\n    \u251c\u2500\u2500 results_3.h5\n    \u251c\u2500\u2500 results_4.h5\n    \u251c\u2500\u2500 results_5.h5\n    \u251c\u2500\u2500 results_6.h5\n    \u2514\u2500\u2500 results_7.h5\n```\n\nThen we can plot the results by:\n\n```bash\nasreview plot ace ptsd\n```\n\nBy default, the values shown are expressed as percentages of the total number of papers. Use the\n`-a` or `--absolute-values` flags to have them expressed in absolute numbers:\n\n```bash\nasreview plot ace ptsd --absolute-values\n```\n\n\n## Plot types\n\nThere are currently four plot types implemented:\n_inclusion_, _discovery_, _limit_, _progression_.\nThey can be individually selected with the `-t` or `--type` switch. Multiple plots\ncan be made by using `,` as a separator:\n\n```bash\nasreview plot ace ptsd --type 'inclusions,discovery'\n```\n\n### Inclusion\n\nThis figure shows the number/percentage of included papers found as a function of the\nnumber/percentage of papers reviewed. Initial included/excluded papers are subtracted so that the line\nalways starts at (0,0).\n\nThe quicker the line goes to a 100%, the better the performance.\n\n![alt text](https://github.com/msdslab/asreview-visualization/blob/master/docs/inclusions.png?raw=true \"Inclusions\")\n\n### Discovery\n\nThis figure shows the distribution of the number of papers that have to be read before discovering\neach inclusion. Not every paper is equally hard to find.\n\nThe closer to the left, the better.\n\n![alt text](https://github.com/msdslab/asreview-visualization/blob/master/docs/discovery.png?raw=true \"Discovery\")\n\n\n### Limit\n\nThis figure shows how many papers need to be read with a given criterion. A criterion is expressed\nas \"after reading _y_ % of the papers, at most an average of _z_ included papers have been not been\nseen by the reviewer, if he is using max sampling.\". Here, _y_ is shown on the y-axis, while\nthree values of _z_ are plotted as three different lines with the same color. The three values for\n_z_ are 0.1, 0.5 and 2.0.\n\nThe quicker the lines touch the black (`y=x`) line, the better.\n\n![alt text](https://github.com/msdslab/asreview-visualization/blob/master/docs/limits.png?raw=true \"Limits\")\n\n### Progression\n\nThis figure shows the average inclusion rate as a function of time, number of papers read.\nThe more concentrated on the left, the better. The thick line is the average of individual runs\n(thin lines). The visualization package will automatically detect which are directories and which\nare files. The curve is smoothed out by using a Gaussian smoothing algorithm.\n\n![alt text](https://github.com/msdslab/asreview-visualization/blob/master/docs/progression.png?raw=true \"Progression\")\n\n\n## API\n\nTo make use of the more advanced features, you can also use the visualization package\nas a library. The advantage is that you can make more reproducible plots where text, etc. is\nin the place *you* want it. Examples can be found in module `asreviewcontrib.visualization.quick`.\nThose are the scripts that are used for the command line interface.\n\n```python\nwith Plot.from_paths([\"PATH_1\", \"PATH_2\"]) as plot:\n\tinc_plot = plot.new(\"inclusion\")\n\tinc_plot.set_grid()\n\tinc_plot.set_xlim(0, 30)\n\tinc_plot.set_ylim(0, 101)\n\tinc_plot.set_legend()\n\tinc_plot.show()\n\tinc_plot.save(\"SOME_FILE.png\")\n```\n\nOf course fill in `PATH_1` and `PATH_2` as the files you would like to plot.\n\nIf the customization is not sufficient, you can also directly manipulate the `self.ax` and \n`self.fig` attributes of the plotting class.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asreview/asreview-visualization", "keywords": "asreview plot visualization", "license": "", "maintainer": "", "maintainer_email": "", "name": "asreview-visualization", "package_url": "https://pypi.org/project/asreview-visualization/", "platform": "", "project_url": "https://pypi.org/project/asreview-visualization/", "project_urls": {"Bug Reports": "https://github.com/asreview/asreview-visualization/issues", "Homepage": "https://github.com/asreview/asreview-visualization", "Source": "https://github.com/asreview/asreview-visualization"}, "release_url": "https://pypi.org/project/asreview-visualization/0.2.0/", "requires_dist": ["numpy", "matplotlib", "asreview"], "requires_python": "", "summary": "Visualization tools for the ASReview project", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ASReview-visualization</h1>\n<p><img alt=\"Deploy and release\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/004bf41a8247e2d8a3fa398c5606836305aae5d6/68747470733a2f2f6769746875622e636f6d2f61737265766965772f61737265766965772d76697375616c697a6174696f6e2f776f726b666c6f77732f4465706c6f79253230616e6425323072656c656173652f62616467652e737667\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ef9e6a47506275c54aeeed8591b9b76a19ca8cde/68747470733a2f2f6769746875622e636f6d2f61737265766965772f61737265766965772d76697375616c697a6174696f6e2f776f726b666c6f77732f746573742d73756974652f62616467652e737667\"></p>\n<p>This is a plotting/visualization supplemental package for the\n<a href=\"https://github.com/asreview/asreview\" rel=\"nofollow\">ASReview</a>\nsoftware. It is a fast way to create a visual impression of the ASReview with different\ndataset, models and model parameters.</p>\n<h2>Installation</h2>\n<p>The easiest way to install the visualization package is to use the command line:</p>\n<pre>pip install asreview-visualization\n</pre>\n<p>After installation of the visualization package, asreview should automatically detect it.\nTest this by:</p>\n<pre>asreview --help\n</pre>\n<p>It should list the 'plot' modus.</p>\n<h2>Basic usage</h2>\n<p>State files that were created with the same ASReview settings can be put together/averaged by putting\nthem in the same directory. State files with different settings/datasets should be put in different\ndirectories to compare them.</p>\n<p>As an example consider the following directory structure, where we have two datasets, called <code>ace</code> and\n<code>ptsd</code>, each of which have 8 runs:</p>\n<pre><code>\u251c\u2500\u2500 ace\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_0.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_1.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_2.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_3.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_4.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_5.h5\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 results_6.h5\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 results_7.h5\n\u2514\u2500\u2500 ptsd\n    \u251c\u2500\u2500 results_0.h5\n    \u251c\u2500\u2500 results_1.h5\n    \u251c\u2500\u2500 results_2.h5\n    \u251c\u2500\u2500 results_3.h5\n    \u251c\u2500\u2500 results_4.h5\n    \u251c\u2500\u2500 results_5.h5\n    \u251c\u2500\u2500 results_6.h5\n    \u2514\u2500\u2500 results_7.h5\n</code></pre>\n<p>Then we can plot the results by:</p>\n<pre>asreview plot ace ptsd\n</pre>\n<p>By default, the values shown are expressed as percentages of the total number of papers. Use the\n<code>-a</code> or <code>--absolute-values</code> flags to have them expressed in absolute numbers:</p>\n<pre>asreview plot ace ptsd --absolute-values\n</pre>\n<h2>Plot types</h2>\n<p>There are currently four plot types implemented:\n<em>inclusion</em>, <em>discovery</em>, <em>limit</em>, <em>progression</em>.\nThey can be individually selected with the <code>-t</code> or <code>--type</code> switch. Multiple plots\ncan be made by using <code>,</code> as a separator:</p>\n<pre>asreview plot ace ptsd --type <span class=\"s1\">'inclusions,discovery'</span>\n</pre>\n<h3>Inclusion</h3>\n<p>This figure shows the number/percentage of included papers found as a function of the\nnumber/percentage of papers reviewed. Initial included/excluded papers are subtracted so that the line\nalways starts at (0,0).</p>\n<p>The quicker the line goes to a 100%, the better the performance.</p>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/283bcad95d6dcb8c43d788b05e91c343328e389a/68747470733a2f2f6769746875622e636f6d2f6d7364736c61622f61737265766965772d76697375616c697a6174696f6e2f626c6f622f6d61737465722f646f63732f696e636c7573696f6e732e706e673f7261773d74727565\"></p>\n<h3>Discovery</h3>\n<p>This figure shows the distribution of the number of papers that have to be read before discovering\neach inclusion. Not every paper is equally hard to find.</p>\n<p>The closer to the left, the better.</p>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ad5cfb1de7437ec3090b94edcded54492cfaaae/68747470733a2f2f6769746875622e636f6d2f6d7364736c61622f61737265766965772d76697375616c697a6174696f6e2f626c6f622f6d61737465722f646f63732f646973636f766572792e706e673f7261773d74727565\"></p>\n<h3>Limit</h3>\n<p>This figure shows how many papers need to be read with a given criterion. A criterion is expressed\nas \"after reading <em>y</em> % of the papers, at most an average of <em>z</em> included papers have been not been\nseen by the reviewer, if he is using max sampling.\". Here, <em>y</em> is shown on the y-axis, while\nthree values of <em>z</em> are plotted as three different lines with the same color. The three values for\n<em>z</em> are 0.1, 0.5 and 2.0.</p>\n<p>The quicker the lines touch the black (<code>y=x</code>) line, the better.</p>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bc022af641f2037a1f51c506d12f9e0f0375f951/68747470733a2f2f6769746875622e636f6d2f6d7364736c61622f61737265766965772d76697375616c697a6174696f6e2f626c6f622f6d61737465722f646f63732f6c696d6974732e706e673f7261773d74727565\"></p>\n<h3>Progression</h3>\n<p>This figure shows the average inclusion rate as a function of time, number of papers read.\nThe more concentrated on the left, the better. The thick line is the average of individual runs\n(thin lines). The visualization package will automatically detect which are directories and which\nare files. The curve is smoothed out by using a Gaussian smoothing algorithm.</p>\n<p><img alt=\"alt text\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aafed5d08970496f17c730a7e2341fce4a61d3e8/68747470733a2f2f6769746875622e636f6d2f6d7364736c61622f61737265766965772d76697375616c697a6174696f6e2f626c6f622f6d61737465722f646f63732f70726f6772657373696f6e2e706e673f7261773d74727565\"></p>\n<h2>API</h2>\n<p>To make use of the more advanced features, you can also use the visualization package\nas a library. The advantage is that you can make more reproducible plots where text, etc. is\nin the place <em>you</em> want it. Examples can be found in module <code>asreviewcontrib.visualization.quick</code>.\nThose are the scripts that are used for the command line interface.</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">Plot</span><span class=\"o\">.</span><span class=\"n\">from_paths</span><span class=\"p\">([</span><span class=\"s2\">\"PATH_1\"</span><span class=\"p\">,</span> <span class=\"s2\">\"PATH_2\"</span><span class=\"p\">])</span> <span class=\"k\">as</span> <span class=\"n\">plot</span><span class=\"p\">:</span>\n\t<span class=\"n\">inc_plot</span> <span class=\"o\">=</span> <span class=\"n\">plot</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"s2\">\"inclusion\"</span><span class=\"p\">)</span>\n\t<span class=\"n\">inc_plot</span><span class=\"o\">.</span><span class=\"n\">set_grid</span><span class=\"p\">()</span>\n\t<span class=\"n\">inc_plot</span><span class=\"o\">.</span><span class=\"n\">set_xlim</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">30</span><span class=\"p\">)</span>\n\t<span class=\"n\">inc_plot</span><span class=\"o\">.</span><span class=\"n\">set_ylim</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">101</span><span class=\"p\">)</span>\n\t<span class=\"n\">inc_plot</span><span class=\"o\">.</span><span class=\"n\">set_legend</span><span class=\"p\">()</span>\n\t<span class=\"n\">inc_plot</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n\t<span class=\"n\">inc_plot</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"s2\">\"SOME_FILE.png\"</span><span class=\"p\">)</span>\n</pre>\n<p>Of course fill in <code>PATH_1</code> and <code>PATH_2</code> as the files you would like to plot.</p>\n<p>If the customization is not sufficient, you can also directly manipulate the <code>self.ax</code> and\n<code>self.fig</code> attributes of the plotting class.</p>\n\n          </div>"}, "last_serial": 6891903, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4dfbfdd0cf3cd2a1e655da3e427becae", "sha256": "f9f4cdc7aa7c99d1ecd42aeef4caaf16a69abdb097bce58cd0cf9f70592c815d"}, "downloads": -1, "filename": "asreview_visualization-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4dfbfdd0cf3cd2a1e655da3e427becae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11699, "upload_time": "2020-01-29T16:17:16", "upload_time_iso_8601": "2020-01-29T16:17:16.483819Z", "url": "https://files.pythonhosted.org/packages/1f/6e/5b1d8e012e00f73fb31d5ddf28f7688aeb3210dfc0687b9ea6c02508b09d/asreview_visualization-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50fd6e812d6f37dc82c472f8869c07f1", "sha256": "b3c8c172f1ddd37a8a082216f2654163c699e95372c725ab1093642acf059228"}, "downloads": -1, "filename": "asreview-visualization-0.1.1.tar.gz", "has_sig": false, "md5_digest": "50fd6e812d6f37dc82c472f8869c07f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6632, "upload_time": "2020-01-29T16:17:18", "upload_time_iso_8601": "2020-01-29T16:17:18.394368Z", "url": "https://files.pythonhosted.org/packages/c6/3c/b3fff76606fa691646ae8db78a6be1da416cfbed6ad47d1786e7567f53ea/asreview-visualization-0.1.1.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "bed6003b814e9c3c03106029d3217177", "sha256": "11de49cb53d9c89279da08a9c7232f892a1656df9f36d6d37b38a899f98c0b5f"}, "downloads": -1, "filename": "asreview_visualization-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "bed6003b814e9c3c03106029d3217177", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11700, "upload_time": "2020-01-29T17:35:16", "upload_time_iso_8601": "2020-01-29T17:35:16.235242Z", "url": "https://files.pythonhosted.org/packages/c0/bc/4d8610bd5a71d5c61fe2546c6e9449924dc66ea108593ffa98c76bf954f9/asreview_visualization-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a8c51e4502c24793012c3567ac0ac21", "sha256": "ad387da026f5836b3d49d35e0d14dd6dd30f1967c19da4fa1fbe7d535b91f771"}, "downloads": -1, "filename": "asreview-visualization-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8a8c51e4502c24793012c3567ac0ac21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6626, "upload_time": "2020-01-29T17:35:17", "upload_time_iso_8601": "2020-01-29T17:35:17.380059Z", "url": "https://files.pythonhosted.org/packages/9b/97/72c3001db661f5fdb0bb5da26dda67f227d231cc25d3b4aee87df62c6c1a/asreview-visualization-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "26331a7bac5b2cdd2a51524078dde627", "sha256": "43c3cde8d9da1eaa181e01ddb29cc04cb9417d309a14d48590cd780718f0df3a"}, "downloads": -1, "filename": "asreview_visualization-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "26331a7bac5b2cdd2a51524078dde627", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16273, "upload_time": "2020-03-26T21:00:44", "upload_time_iso_8601": "2020-03-26T21:00:44.773177Z", "url": "https://files.pythonhosted.org/packages/c8/24/ca92352a2462419df54cc12d5e58804c202d1a26a74bef9e9d7147621b64/asreview_visualization-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eca1801c5dd6bc99269e1fbfe4bfa9a", "sha256": "ff84fe413b9d6e06a8f89b0ba23377b5698e12ad9cb87cd15f13540b33fe5f24"}, "downloads": -1, "filename": "asreview-visualization-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2eca1801c5dd6bc99269e1fbfe4bfa9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9044, "upload_time": "2020-03-26T21:00:45", "upload_time_iso_8601": "2020-03-26T21:00:45.995001Z", "url": "https://files.pythonhosted.org/packages/56/20/98e15c0cc4b72bd96bdd6ec8fc1f66c8ff434156fe7713a15d021d334426/asreview-visualization-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "26331a7bac5b2cdd2a51524078dde627", "sha256": "43c3cde8d9da1eaa181e01ddb29cc04cb9417d309a14d48590cd780718f0df3a"}, "downloads": -1, "filename": "asreview_visualization-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "26331a7bac5b2cdd2a51524078dde627", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16273, "upload_time": "2020-03-26T21:00:44", "upload_time_iso_8601": "2020-03-26T21:00:44.773177Z", "url": "https://files.pythonhosted.org/packages/c8/24/ca92352a2462419df54cc12d5e58804c202d1a26a74bef9e9d7147621b64/asreview_visualization-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eca1801c5dd6bc99269e1fbfe4bfa9a", "sha256": "ff84fe413b9d6e06a8f89b0ba23377b5698e12ad9cb87cd15f13540b33fe5f24"}, "downloads": -1, "filename": "asreview-visualization-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2eca1801c5dd6bc99269e1fbfe4bfa9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9044, "upload_time": "2020-03-26T21:00:45", "upload_time_iso_8601": "2020-03-26T21:00:45.995001Z", "url": "https://files.pythonhosted.org/packages/56/20/98e15c0cc4b72bd96bdd6ec8fc1f66c8ff434156fe7713a15d021d334426/asreview-visualization-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:55 2020"}