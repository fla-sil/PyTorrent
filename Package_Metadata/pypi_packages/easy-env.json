{"info": {"author": "Bachynin Ivan", "author_email": "bachynin.i@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "easy_env\n========\n\n.. image:: https://travis-ci.org/vaniakosmos/easy_env.svg?master\n\t\t:target: https://travis-ci.org/vaniakosmos/easy_env\n\nImplement common operations over env vars such as reading booleans and integers.\n\nInstallation\n------------\n\n.. code-block:: bash\n\n\tpip install easy_env\n\n\nUsage\n-----\n\n.. code-block:: python\n\n\timport os\n\timport easy_env\n\n\n\t# setup env vars\n\tsetup_vars = [\n\t\t('int', '42'),\n\t\t('float', '42.9'),\n\t\t('bool', 'yes'),\n\t\t('str', 'foo bar'),\n\t\t('bytes', 'Zm9v'),  # base64 encoded b'foo'\n\t\t('list', '1,2,3'),\n\t\t('list2', '4 5 6'),\n\t]\n\tfor var, value in setup_vars:\n\t\tos.environ[var] = value\n\n\n\t# get var\n\tassert easy_env.get_int('int') == 42\n\tassert easy_env.get_float('float') == 42.9\n\tassert easy_env.get_bool('bool') is True\n\tassert easy_env.get_str('str') == 'foo bar'\n\tassert easy_env.get_bytes('bytes') == b'foo'\n\tassert easy_env.get_list('list') == ['1', '2', '3']\n\n\t# get w/ default\n\tassert easy_env.get_int('NEW_VAR', 5) == 5\n\n\t# get w/o default\n\tassert easy_env.get_int('NEW_VAR') is None\n\n\t# get w/o default and raise exception\n\ttry:\n\t\teasy_env.get_int('NEW_VAR', raise_error=True)\n\t\tassert False\n\texcept KeyError:\n\t\tassert True\n\n\t# get list of integers\n\tassert easy_env.get_list('list', item_factory=int) == [1, 2, 3]\n\t# get list w/ another separator\n\tassert easy_env.get_list('list2', separator=' ') == ['4', '5', '6']\n\n\t# detect type based on type of default\n\tassert easy_env.get('int', 1) == 42\n\tassert easy_env.get('int') == '42'\n\tassert easy_env.get('float', 1.0) == 42.9\n\tassert easy_env.get('bool', False) is True\n\tassert easy_env.get('bytes', b'') == b'foo'\n\tassert easy_env.get('list2', default=[], separator=' ') == ['4', '5', '6']\n\n\n\t# set int\n\teasy_env.set_int('int_var', 42)\n\tassert os.getenv('int_var') == '42'\n\n\t# set float\n\teasy_env.set_float('float_var', 42.0)\n\tassert os.getenv('float_var') == '42.0'\n\n\t# set bool\n\teasy_env.set_bool('bool_var', True)\n\tassert os.getenv('bool_var') == '1'\n\teasy_env.set_bool('bool_var', False)\n\tassert os.getenv('bool_var') == '0'\n\n\t# set string\n\teasy_env.set_str('str_var', 'foo bar')\n\tassert os.getenv('str_var') == 'foo bar'\n\n\t# set bytes\n\teasy_env.set_bytes('bytes_var', b'foo')\n\tassert os.getenv('bytes_var') == 'Zm9v'\n\n\t# set list\n\teasy_env.set_list('list_var', [1, 2, 3])\n\tassert os.getenv('list_var') == '1,2,3'\n\teasy_env.set_list('list_var', [1, 2, 3], separator=' ')\n\tassert os.getenv('list_var') == '1 2 3'\n\teasy_env.set_list('list_var', [1, 2, 3], serializer=lambda x: str(x - 1))\n\tassert os.getenv('list_var') == '0,1,2'\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vaniakosmos/easy_env", "keywords": "env,environ", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "easy-env", "package_url": "https://pypi.org/project/easy-env/", "platform": "", "project_url": "https://pypi.org/project/easy-env/", "project_urls": {"Homepage": "https://github.com/vaniakosmos/easy_env"}, "release_url": "https://pypi.org/project/easy-env/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "Better environ getter.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/vaniakosmos/easy_env\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/vaniakosmos/easy_env.svg?master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/156c278d622576d1e2eb92590f0ba518d5eccc4a/68747470733a2f2f7472617669732d63692e6f72672f76616e69616b6f736d6f732f656173795f656e762e7376673f6d6173746572\"></a>\n<p>Implement common operations over env vars such as reading booleans and integers.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install easy_env\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">easy_env</span>\n\n\n<span class=\"c1\"># setup env vars</span>\n<span class=\"n\">setup_vars</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'int'</span><span class=\"p\">,</span> <span class=\"s1\">'42'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'float'</span><span class=\"p\">,</span> <span class=\"s1\">'42.9'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'bool'</span><span class=\"p\">,</span> <span class=\"s1\">'yes'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'str'</span><span class=\"p\">,</span> <span class=\"s1\">'foo bar'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'bytes'</span><span class=\"p\">,</span> <span class=\"s1\">'Zm9v'</span><span class=\"p\">),</span>  <span class=\"c1\"># base64 encoded b'foo'</span>\n        <span class=\"p\">(</span><span class=\"s1\">'list'</span><span class=\"p\">,</span> <span class=\"s1\">'1,2,3'</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'list2'</span><span class=\"p\">,</span> <span class=\"s1\">'4 5 6'</span><span class=\"p\">),</span>\n<span class=\"p\">]</span>\n<span class=\"k\">for</span> <span class=\"n\">var</span><span class=\"p\">,</span> <span class=\"n\">value</span> <span class=\"ow\">in</span> <span class=\"n\">setup_vars</span><span class=\"p\">:</span>\n        <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">environ</span><span class=\"p\">[</span><span class=\"n\">var</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n\n<span class=\"c1\"># get var</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_int</span><span class=\"p\">(</span><span class=\"s1\">'int'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_float</span><span class=\"p\">(</span><span class=\"s1\">'float'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mf\">42.9</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_bool</span><span class=\"p\">(</span><span class=\"s1\">'bool'</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_str</span><span class=\"p\">(</span><span class=\"s1\">'str'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'foo bar'</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_bytes</span><span class=\"p\">(</span><span class=\"s1\">'bytes'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s1\">'foo'</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">(</span><span class=\"s1\">'list'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'1'</span><span class=\"p\">,</span> <span class=\"s1\">'2'</span><span class=\"p\">,</span> <span class=\"s1\">'3'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># get w/ default</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_int</span><span class=\"p\">(</span><span class=\"s1\">'NEW_VAR'</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">5</span>\n\n<span class=\"c1\"># get w/o default</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_int</span><span class=\"p\">(</span><span class=\"s1\">'NEW_VAR'</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># get w/o default and raise exception</span>\n<span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_int</span><span class=\"p\">(</span><span class=\"s1\">'NEW_VAR'</span><span class=\"p\">,</span> <span class=\"n\">raise_error</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"kc\">False</span>\n<span class=\"k\">except</span> <span class=\"ne\">KeyError</span><span class=\"p\">:</span>\n        <span class=\"k\">assert</span> <span class=\"kc\">True</span>\n\n<span class=\"c1\"># get list of integers</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">(</span><span class=\"s1\">'list'</span><span class=\"p\">,</span> <span class=\"n\">item_factory</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">]</span>\n<span class=\"c1\"># get list w/ another separator</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get_list</span><span class=\"p\">(</span><span class=\"s1\">'list2'</span><span class=\"p\">,</span> <span class=\"n\">separator</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'4'</span><span class=\"p\">,</span> <span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"s1\">'6'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># detect type based on type of default</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'int'</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">42</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'int'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'42'</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'float'</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mf\">42.9</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'bool'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span> <span class=\"ow\">is</span> <span class=\"kc\">True</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'bytes'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">''</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"sa\">b</span><span class=\"s1\">'foo'</span>\n<span class=\"k\">assert</span> <span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'list2'</span><span class=\"p\">,</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"p\">[],</span> <span class=\"n\">separator</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"p\">[</span><span class=\"s1\">'4'</span><span class=\"p\">,</span> <span class=\"s1\">'5'</span><span class=\"p\">,</span> <span class=\"s1\">'6'</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\"># set int</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_int</span><span class=\"p\">(</span><span class=\"s1\">'int_var'</span><span class=\"p\">,</span> <span class=\"mi\">42</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'int_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'42'</span>\n\n<span class=\"c1\"># set float</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_float</span><span class=\"p\">(</span><span class=\"s1\">'float_var'</span><span class=\"p\">,</span> <span class=\"mf\">42.0</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'float_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'42.0'</span>\n\n<span class=\"c1\"># set bool</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_bool</span><span class=\"p\">(</span><span class=\"s1\">'bool_var'</span><span class=\"p\">,</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'bool_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'1'</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_bool</span><span class=\"p\">(</span><span class=\"s1\">'bool_var'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'bool_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'0'</span>\n\n<span class=\"c1\"># set string</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_str</span><span class=\"p\">(</span><span class=\"s1\">'str_var'</span><span class=\"p\">,</span> <span class=\"s1\">'foo bar'</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'str_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'foo bar'</span>\n\n<span class=\"c1\"># set bytes</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_bytes</span><span class=\"p\">(</span><span class=\"s1\">'bytes_var'</span><span class=\"p\">,</span> <span class=\"sa\">b</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'bytes_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'Zm9v'</span>\n\n<span class=\"c1\"># set list</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_list</span><span class=\"p\">(</span><span class=\"s1\">'list_var'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">])</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'list_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'1,2,3'</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_list</span><span class=\"p\">(</span><span class=\"s1\">'list_var'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">separator</span><span class=\"o\">=</span><span class=\"s1\">' '</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'list_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'1 2 3'</span>\n<span class=\"n\">easy_env</span><span class=\"o\">.</span><span class=\"n\">set_list</span><span class=\"p\">(</span><span class=\"s1\">'list_var'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">],</span> <span class=\"n\">serializer</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"k\">assert</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getenv</span><span class=\"p\">(</span><span class=\"s1\">'list_var'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'0,1,2'</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4098197, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8c42fefc3edf1ec3658f3c34cd7505f3", "sha256": "2b3147c9d65a8ff71a0bf103dcd6a3f31f45891381f5def8aeb8cc9130743d4d"}, "downloads": -1, "filename": "easy_env-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8c42fefc3edf1ec3658f3c34cd7505f3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5529, "upload_time": "2018-07-07T20:16:12", "upload_time_iso_8601": "2018-07-07T20:16:12.028112Z", "url": "https://files.pythonhosted.org/packages/76/85/0012c3fb003426f742bab60f6b5459348784b76f7f8d13ab34c1de8e7b2f/easy_env-0.1.0-py3-none-any.whl", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "6643c78a4b972a1b442400c733e768da", "sha256": "3c67e4b6625da821ac489c44478601b3b236866e0e3a9cb140952762ff56ecab"}, "downloads": -1, "filename": "easy_env-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6643c78a4b972a1b442400c733e768da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5601, "upload_time": "2018-07-21T12:06:47", "upload_time_iso_8601": "2018-07-21T12:06:47.397824Z", "url": "https://files.pythonhosted.org/packages/c0/fb/c253692bfe57b3d50919a834168cd4865a8f483f406622625516c2331074/easy_env-0.1.1-py3-none-any.whl", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3fea02e0e229b560fea32fe86579b0a9", "sha256": "78c1f3aa302579881ff52730fd55d0185fbf9935c5d3834bcec1312c749c5ba2"}, "downloads": -1, "filename": "easy_env-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3fea02e0e229b560fea32fe86579b0a9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5764, "upload_time": "2018-07-21T14:21:49", "upload_time_iso_8601": "2018-07-21T14:21:49.207991Z", "url": "https://files.pythonhosted.org/packages/6a/15/b20546d8309f6f16dc53eb4167bf1a3519f7a6fe0110053bcbf713b00a0f/easy_env-0.1.2-py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "071f9b6736a0899795aca4a71d01f432", "sha256": "ea7af91d1f182bb2382f7a366858d2d6887d589a6fbf6f79a75cc48e2d415d3f"}, "downloads": -1, "filename": "easy_env-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "071f9b6736a0899795aca4a71d01f432", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5788, "upload_time": "2018-07-24T19:21:06", "upload_time_iso_8601": "2018-07-24T19:21:06.820337Z", "url": "https://files.pythonhosted.org/packages/a4/b0/73e49fde1f3065d5bca4046636b5764283a2f549f4349d28d6435c5e8b37/easy_env-0.1.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "071f9b6736a0899795aca4a71d01f432", "sha256": "ea7af91d1f182bb2382f7a366858d2d6887d589a6fbf6f79a75cc48e2d415d3f"}, "downloads": -1, "filename": "easy_env-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "071f9b6736a0899795aca4a71d01f432", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5788, "upload_time": "2018-07-24T19:21:06", "upload_time_iso_8601": "2018-07-24T19:21:06.820337Z", "url": "https://files.pythonhosted.org/packages/a4/b0/73e49fde1f3065d5bca4046636b5764283a2f549f4349d28d6435c5e8b37/easy_env-0.1.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:24 2020"}