{"info": {"author": "Vsevolod Balashov", "author_email": "vsevolod@balashov.name", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Natural Language :: Russian", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Database", "Topic :: Software Development :: Testing"], "description": "unitstorm\n=========\n\n.. contents:\n\nIntroduction\n------------\n\n`Storm <https://storm.canonical.com>`_ is a fast, small and powerful object-relational mapper.\nTry it to use in db-aware applications.\n\nEffective unit-testing DB-models needed:\n\n* easy access to testing-DB inside testcases\n* setting up testing-DB before each test (and tear down after)\n\nTo help this unitstorm provides class *ModelTestCase*,\nthat can be used both in `unittest <http://docs.python.org/lib/module-unittest.html>`_\nand `nosetest <http://somethingaboutorange.com/mrl/projects/nose/>`_ testing frameworks.\n\nSimple example\n--------------\n::\n\n    from unitstorm import ModelTestCase\n    from os import path\n    \n    import models as model # models define somewhere else\n    \n    class TestMyModel(ModelTestCase):\n        dburi = 'postgres://test:test@localhost/test'\n        \n        fixtures = path.join(path.dirname(__file__), 'fixtures')\n        \n        fixture_setup = 'create.sql', 'filldata.sql'\n        fixture_teardown = 'drop.sql'\n        \n        sql_setup = 'INSERT INTO my_model (id, name) VALUES (1, \"foo\");',\\\n            'INSERT INTO my_model (id, name) VALUES (2, \"bar\");'\n        sql_teardown = 'DELETE FROM my_model WHERE id = 1;'\n        \n        def test_stub(self):\n            assert self.store.get(model.MyModel, 1).name == \"foo\"\n\nTODO more description (look sources)\n\n``dburi``\n\n``db``\n\n``store``\n\n``fixtures``\n\n``fixture_setup``\n\n``fixture_teardown``\n\n``sql_setup``\n\n``sql_teardown``\n\nExecution order: fixture_setup, sql_setup, test, sql_teardown, fixture_teardown\n\nLegal\n-----\n\nunitstorm distributed under terms of `GNU LGPL v.2.1 <http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt>`_.\nCopyright 2007 - present `Vsevolod Balashov <http://vsevolod.balashov.name/>`_.\n\nLinks\n-----\n\nSource code of `unitstorm <http://bitbucket.org/sevkin/unitstorm/>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/unitstorm", "keywords": "unit test testing unittest unittesting storm orm db dbms rdbms sql fixture fixtures postgres postgresql mysql sqlite", "license": "LGPL 2.1", "maintainer": null, "maintainer_email": null, "name": "unitstorm", "package_url": "https://pypi.org/project/unitstorm/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/unitstorm/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/unitstorm"}, "release_url": "https://pypi.org/project/unitstorm/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Unit testing microframework for Storm ORM models", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><a href=\"https://storm.canonical.com\" rel=\"nofollow\">Storm</a> is a fast, small and powerful object-relational mapper.\nTry it to use in db-aware applications.</p>\n<p>Effective unit-testing DB-models needed:</p>\n<ul>\n<li>easy access to testing-DB inside testcases</li>\n<li>setting up testing-DB before each test (and tear down after)</li>\n</ul>\n<p>To help this unitstorm provides class <em>ModelTestCase</em>,\nthat can be used both in <a href=\"http://docs.python.org/lib/module-unittest.html\" rel=\"nofollow\">unittest</a>\nand <a href=\"http://somethingaboutorange.com/mrl/projects/nose/\" rel=\"nofollow\">nosetest</a> testing frameworks.</p>\n</div>\n<div id=\"simple-example\">\n<h2>Simple example</h2>\n<pre>from unitstorm import ModelTestCase\nfrom os import path\n\nimport models as model # models define somewhere else\n\nclass TestMyModel(ModelTestCase):\n    dburi = 'postgres://test:test@localhost/test'\n\n    fixtures = path.join(path.dirname(__file__), 'fixtures')\n\n    fixture_setup = 'create.sql', 'filldata.sql'\n    fixture_teardown = 'drop.sql'\n\n    sql_setup = 'INSERT INTO my_model (id, name) VALUES (1, \"foo\");',\\\n        'INSERT INTO my_model (id, name) VALUES (2, \"bar\");'\n    sql_teardown = 'DELETE FROM my_model WHERE id = 1;'\n\n    def test_stub(self):\n        assert self.store.get(model.MyModel, 1).name == \"foo\"\n</pre>\n<p>TODO more description (look sources)</p>\n<p><tt>dburi</tt></p>\n<p><tt>db</tt></p>\n<p><tt>store</tt></p>\n<p><tt>fixtures</tt></p>\n<p><tt>fixture_setup</tt></p>\n<p><tt>fixture_teardown</tt></p>\n<p><tt>sql_setup</tt></p>\n<p><tt>sql_teardown</tt></p>\n<p>Execution order: fixture_setup, sql_setup, test, sql_teardown, fixture_teardown</p>\n</div>\n<div id=\"legal\">\n<h2>Legal</h2>\n<p>unitstorm distributed under terms of <a href=\"http://www.gnu.org/licenses/old-licenses/lgpl-2.1.txt\" rel=\"nofollow\">GNU LGPL v.2.1</a>.\nCopyright 2007 - present <a href=\"http://vsevolod.balashov.name/\" rel=\"nofollow\">Vsevolod Balashov</a>.</p>\n</div>\n<div id=\"links\">\n<h2>Links</h2>\n<p>Source code of <a href=\"http://bitbucket.org/sevkin/unitstorm/\" rel=\"nofollow\">unitstorm</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 801234, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "142efa51a37f77f8ffd391c58c465908", "sha256": "0c5ce79f532baf19cbfd11fbbf84047b3575e6535f032380a516e44ddb14785a"}, "downloads": -1, "filename": "unitstorm-0.1-py2.5.egg", "has_sig": false, "md5_digest": "142efa51a37f77f8ffd391c58c465908", "packagetype": "bdist_egg", "python_version": "2.5", "requires_python": null, "size": 5304, "upload_time": "2008-02-27T12:34:05", "upload_time_iso_8601": "2008-02-27T12:34:05Z", "url": "https://files.pythonhosted.org/packages/82/89/bf6adf31fb71c18dd1374c23a0626b53bf60082c4831264b52e7493ecdf2/unitstorm-0.1-py2.5.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f53734d8d743a7bbcb21be5b49371c29", "sha256": "05ef1301cb80684aa91b17aeeb8f9ccf70430ddc361a0e602ad9036babd96d73"}, "downloads": -1, "filename": "unitstorm-0.1.tar.gz", "has_sig": false, "md5_digest": "f53734d8d743a7bbcb21be5b49371c29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4357, "upload_time": "2008-02-27T12:33:50", "upload_time_iso_8601": "2008-02-27T12:33:50Z", "url": "https://files.pythonhosted.org/packages/aa/39/f7788ce64cb88579bb8aa02cee5ffaaa72ff5d3a2407d1f5333ccf9a9488/unitstorm-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b35ee98b654ee57b50bad277b91b1360", "sha256": "aeeebf1ea2046c3fa62cd450319ce2b40e94c9b15ba3f722852ddb8f7e2d4536"}, "downloads": -1, "filename": "unitstorm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b35ee98b654ee57b50bad277b91b1360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4300, "upload_time": "2010-07-07T12:45:02", "upload_time_iso_8601": "2010-07-07T12:45:02.128051Z", "url": "https://files.pythonhosted.org/packages/04/9c/c9eec961d4bffaf4f4fb8a5dacc1812c9dc87da450d673b0a6eb3f649c10/unitstorm-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b35ee98b654ee57b50bad277b91b1360", "sha256": "aeeebf1ea2046c3fa62cd450319ce2b40e94c9b15ba3f722852ddb8f7e2d4536"}, "downloads": -1, "filename": "unitstorm-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b35ee98b654ee57b50bad277b91b1360", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4300, "upload_time": "2010-07-07T12:45:02", "upload_time_iso_8601": "2010-07-07T12:45:02.128051Z", "url": "https://files.pythonhosted.org/packages/04/9c/c9eec961d4bffaf4f4fb8a5dacc1812c9dc87da450d673b0a6eb3f649c10/unitstorm-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:21 2020"}