{"info": {"author": "FNNDSC", "author_email": "dev@babyMRI.org", "bugtrack_url": null, "classifiers": [], "description": "pl-simpledsapp_moc\n================================\n\n.. image:: https://badge.fury.io/py/simpledsapp_moc.svg\n    :target: https://badge.fury.io/py/simpledsapp_moc\n\n.. image:: https://travis-ci.org/FNNDSC/simpledsapp_moc.svg?branch=master\n    :target: https://travis-ci.org/FNNDSC/simpledsapp_moc\n\n.. image:: https://img.shields.io/badge/python-3.5%2B-blue.svg\n    :target: https://badge.fury.io/py/pl-simpledsapp_moc\n\n.. contents:: Table of Contents\n\n\nAbstract\n--------\n\nA simple DS type ChRIS application specifically created for the Massachusetts Open Cloud remote computing environment.\n\n\nSynopsis\n--------\n\n.. code::\n\n    python simpledsapp_moc.py                                       \\\n        [--prefix <filePrefixString>]                               \\\n        [--sleepLength <sleepLength>]                               \\\n        [--ignoreInputDir]                                          \\\n        [-v <level>] [--verbosity <level>]                          \\\n        [--version]                                                 \\\n        [--man]                                                     \\\n        [--meta]                                                    \\\n        <inputDir>\n        <outputDir> \n\nDescription\n-----------\n\n``simpledsapp_moc.py`` is a ChRIS-based application that basically does an explicit copy of each file in  an input directory to the output directory, prefixing an optional string to each filename.\n\nAgruments\n---------\n\n.. code::\n\n    [--prefix <prefixString>]\n    If specified, a prefix string to append to each file copied.\n\n    [--sleepLength <sleepLength>]\n    If specified, sleep for <sleepLength> seconds before starting script processing. This is to simulate a possibly long running  process.\n\n    [--ignoreInputDir] \n    If specified, ignore the input directory. Simply write a single json  file to the output dir that is a timestamp. Useful if the input  directory contains large nested file trees.\n\n    [-v <level>] [--verbosity <level>]\n    Verbosity level for app. Not used currently.\n\n    [--version]\n    If specified, print version number. \n    \n    [--man]\n    If specified, print (this) man page.\n\n    [--meta]\n    If specified, print plugin meta data.\n\n\nRun\n----\n\nThis ``plugin`` can be run in two modes: natively as a python package or as a containerized docker image.\n\nUsing PyPI\n~~~~~~~~~~\n\nTo run from PyPI, simply do a \n\n.. code:: bash\n\n    pip install simpledsapp_moc\n\nand run with\n\n.. code:: bash\n\n    simpledsapp_moc.py --man /tmp /tmp\n\nto get inline help. The app should also understand being called with only two positional arguments\n\n.. code:: bash\n\n    simpledsapp_moc.py /some/input/directory /destination/directory\n\n\nUsing ``docker run``\n~~~~~~~~~~~~~~~~~~~~\n\nTo run using ``docker``, be sure to assign an \"input\" directory to ``/incoming`` and an output directory to ``/outgoing``. *Make sure that the* ``$(pwd)/out`` *directory is world writable!*\n\nNow, prefix all calls with \n\n.. code:: bash\n\n    docker run --rm -v $(pwd)/out:/outgoing                             \\\n            fnndsc/pl-simpledsapp_moc simpledsapp_moc.py                \\\n\nThus, getting inline help is:\n\n.. code:: bash\n\n    mkdir in out && chmod 777 out\n    docker run --rm -v $(pwd)/in:/incoming -v $(pwd)/out:/outgoing      \\\n            fnndsc/pl-simpledsapp_moc simpledsapp_moc.py                \\\n            --man                                                       \\\n            /incoming /outgoing\n\nExamples\n--------", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://wiki", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "simpledsapp-moc", "package_url": "https://pypi.org/project/simpledsapp-moc/", "platform": "", "project_url": "https://pypi.org/project/simpledsapp-moc/", "project_urls": {"Homepage": "http://wiki"}, "release_url": "https://pypi.org/project/simpledsapp-moc/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A simple DS type ChRIS application specifically created for the Massachusetts Open Cloud remote computing environment.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/simpledsapp_moc\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/simpledsapp_moc.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/492820d72f77d99191724623b80d7444098f89a2/68747470733a2f2f62616467652e667572792e696f2f70792f73696d706c6564736170705f6d6f632e737667\"></a>\n<a href=\"https://travis-ci.org/FNNDSC/simpledsapp_moc\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/FNNDSC/simpledsapp_moc.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5516d0e42b6ce66cad1c0ccad16bbfeaa1ae1417/68747470733a2f2f7472617669732d63692e6f72672f464e4e4453432f73696d706c6564736170705f6d6f632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/pl-simpledsapp_moc\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/python-3.5%2B-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72717db1f08ff88b6b237ad21c89e86732f2fa28/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e352532422d626c75652e737667\"></a>\n<div id=\"table-of-contents\">\n<p>Table of Contents</p>\n<ul>\n<li><a href=\"#abstract\" id=\"id1\" rel=\"nofollow\">Abstract</a></li>\n<li><a href=\"#synopsis\" id=\"id2\" rel=\"nofollow\">Synopsis</a></li>\n<li><a href=\"#description\" id=\"id3\" rel=\"nofollow\">Description</a></li>\n<li><a href=\"#agruments\" id=\"id4\" rel=\"nofollow\">Agruments</a></li>\n<li><a href=\"#run\" id=\"id5\" rel=\"nofollow\">Run</a><ul>\n<li><a href=\"#using-pypi\" id=\"id6\" rel=\"nofollow\">Using PyPI</a></li>\n<li><a href=\"#using-docker-run\" id=\"id7\" rel=\"nofollow\">Using <tt>docker run</tt></a></li>\n</ul>\n</li>\n<li><a href=\"#examples\" id=\"id8\" rel=\"nofollow\">Examples</a></li>\n</ul>\n</div>\n<div id=\"abstract\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Abstract</a></h2>\n<p>A simple DS type ChRIS application specifically created for the Massachusetts Open Cloud remote computing environment.</p>\n</div>\n<div id=\"synopsis\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Synopsis</a></h2>\n<pre>python simpledsapp_moc.py                                       \\\n    [--prefix &lt;filePrefixString&gt;]                               \\\n    [--sleepLength &lt;sleepLength&gt;]                               \\\n    [--ignoreInputDir]                                          \\\n    [-v &lt;level&gt;] [--verbosity &lt;level&gt;]                          \\\n    [--version]                                                 \\\n    [--man]                                                     \\\n    [--meta]                                                    \\\n    &lt;inputDir&gt;\n    &lt;outputDir&gt;\n</pre>\n</div>\n<div id=\"description\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Description</a></h2>\n<p><tt>simpledsapp_moc.py</tt> is a ChRIS-based application that basically does an explicit copy of each file in  an input directory to the output directory, prefixing an optional string to each filename.</p>\n</div>\n<div id=\"agruments\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Agruments</a></h2>\n<pre>[--prefix &lt;prefixString&gt;]\nIf specified, a prefix string to append to each file copied.\n\n[--sleepLength &lt;sleepLength&gt;]\nIf specified, sleep for &lt;sleepLength&gt; seconds before starting script processing. This is to simulate a possibly long running  process.\n\n[--ignoreInputDir]\nIf specified, ignore the input directory. Simply write a single json  file to the output dir that is a timestamp. Useful if the input  directory contains large nested file trees.\n\n[-v &lt;level&gt;] [--verbosity &lt;level&gt;]\nVerbosity level for app. Not used currently.\n\n[--version]\nIf specified, print version number.\n\n[--man]\nIf specified, print (this) man page.\n\n[--meta]\nIf specified, print plugin meta data.\n</pre>\n</div>\n<div id=\"run\">\n<h2><a href=\"#id5\" rel=\"nofollow\">Run</a></h2>\n<p>This <tt>plugin</tt> can be run in two modes: natively as a python package or as a containerized docker image.</p>\n<div id=\"using-pypi\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Using PyPI</a></h3>\n<p>To run from PyPI, simply do a</p>\n<pre>pip install simpledsapp_moc\n</pre>\n<p>and run with</p>\n<pre>simpledsapp_moc.py --man /tmp /tmp\n</pre>\n<p>to get inline help. The app should also understand being called with only two positional arguments</p>\n<pre>simpledsapp_moc.py /some/input/directory /destination/directory\n</pre>\n</div>\n<div id=\"using-docker-run\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Using <tt>docker run</tt></a></h3>\n<p>To run using <tt>docker</tt>, be sure to assign an \u201cinput\u201d directory to <tt>/incoming</tt> and an output directory to <tt>/outgoing</tt>. <em>Make sure that the</em> <tt><span class=\"pre\">$(pwd)/out</span></tt> <em>directory is world writable!</em></p>\n<p>Now, prefix all calls with</p>\n<pre>docker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing                             <span class=\"se\">\\\n</span>        fnndsc/pl-simpledsapp_moc simpledsapp_moc.py                <span class=\"se\">\\</span>\n</pre>\n<p>Thus, getting inline help is:</p>\n<pre>mkdir in out <span class=\"o\">&amp;&amp;</span> chmod <span class=\"m\">777</span> out\ndocker run --rm -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/in:/incoming -v <span class=\"k\">$(</span><span class=\"nb\">pwd</span><span class=\"k\">)</span>/out:/outgoing      <span class=\"se\">\\\n</span>        fnndsc/pl-simpledsapp_moc simpledsapp_moc.py                <span class=\"se\">\\\n</span>        --man                                                       <span class=\"se\">\\\n</span>        /incoming /outgoing\n</pre>\n</div>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id8\" rel=\"nofollow\">Examples</a></h2>\n</div>\n\n          </div>"}, "last_serial": 5146176, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "3d778863dc0155468f81f29de2742e42", "sha256": "1cb5272eca3140bbf046410cbb00be03c7abbac1ee5d725da63b99ee2063179e"}, "downloads": -1, "filename": "simpledsapp_moc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3d778863dc0155468f81f29de2742e42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5049, "upload_time": "2019-04-15T18:29:27", "upload_time_iso_8601": "2019-04-15T18:29:27.223071Z", "url": "https://files.pythonhosted.org/packages/82/0c/20c3b1f9f86e1a24df33c2c2c026730316abfa198d2535271d0ec4a35e1c/simpledsapp_moc-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d778863dc0155468f81f29de2742e42", "sha256": "1cb5272eca3140bbf046410cbb00be03c7abbac1ee5d725da63b99ee2063179e"}, "downloads": -1, "filename": "simpledsapp_moc-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3d778863dc0155468f81f29de2742e42", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5049, "upload_time": "2019-04-15T18:29:27", "upload_time_iso_8601": "2019-04-15T18:29:27.223071Z", "url": "https://files.pythonhosted.org/packages/82/0c/20c3b1f9f86e1a24df33c2c2c026730316abfa198d2535271d0ec4a35e1c/simpledsapp_moc-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:51 2020"}