{"info": {"author": "Vladimir Aleshin", "author_email": "rancvova@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Words in names counter\n===========================\n\n| This script calculate words count (nouns and verbs) in funcs and vars names in ``.py`` files.\n| Script check all folders recursively.\n| Script can clone repo from github&\n\n\nHow to install\n==============\n\n| Run ``pip3 install words_counter``\n| Run on CLI for update nltk if it need:\\\n\n::\n\n    $ python3\n    >> import nltk\n    >> nltk.download('all')\n\nHow to use\n==========\n\n| Script have some arguments to run:\n| ``-p`` - Projects dirpathes.\n| ``--all_names`` - Get all vars and funcs names.\n| ``--by_type`` - Get all info by word type.\n| ``--top_names`` - Get top funcs and vars names.\n| ``-d`` - Clone code from outsource(Github in this version, need repo URL and pathway to create folder)\n| ``-t`` - Add word type for search. Avaliable types: NN(Noun), NNS(Nouns), VB(Verb).\n| ``--data_type`` - Structure to search choice. Available funcs or vars.\n| ``--cli`` - Output result to CLI.\n| ``--json`` - Output result to JSON file(need pathway to create json file).\n| ``--csv`` - Output result to CSV file(need pathway to create csv file).\n| `Attention!` In current version ``-t`` and ``--data_type`` required, only if you don't want use ``-d``.\n\nUsage example:\n==============\n\nWe have some folders structure with ``dclint.py``:\n\n::\n\n    \u251c\u2500\u2500 dclint.py\n    \u251c\u2500\u2500 django\n    \u2502   \u251c\u2500\u2500 css\n    \u2502   \u251c\u2500\u2500 bootstrap.min.css\n    \u2502   \u251c\u2500\u2500 my_app.py\n    \u2502\n    \u251c\u2500\u2500 flask\n    \u2502   \u251c\u2500\u2500 favicon.ico\n    \u2502   \u251c\u2500\u2500 polls.py\n    \u2502   \u251c\u2500\u2500 garbage_files\n    \u2502   \u2502   \u251c\u2500\u2500bootstrap.min.js\n    \u2502   \u2502   \u251c\u2500\u2500html5shiv.min.js\n    \u2502   \u2502   \u251c\u2500\u2500thrash.py\n    \u2502\n    \u251c\u2500\u2500 myproject\n    \u2502   \u251c\u2500\u2500ie-emulation-modes-warning.js\n    \u2502   \u251c\u2500\u2500old_version.py\n    \u2502   \u251c\u2500\u2500new_file.py\n\n| In all folders - 5 ``.py`` files.\\\n| All files have funcs like this (for example):\n\n::\n\n    def foo():\n       test_var1 = 'test'\n       return test_var1\n\n\n::\n\n    def bar():\n        test_var2 = 'haha'\n        return test_var2\n\n::\n\n    if __name__ == '__main__':\n        foo_var = foo()\n        bar_var = bar()\n\n\nAnd another funcs.\n\n| Run check(for example from project folder):\\\n| ``$ python words_counter -p myproject -t vb --data_type funcs --all_names --cli``\\\n| Result:\n\n::\n\n    project: myproject\n    funcs names:\n            foo\n            bar\n    vars names:\n            test_var1\n            test_var2\n            foo_var\n            bar_var\n\n\nLicense\n=======\n\nMIT license\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Ranc58/verbs_counter", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "words_counter", "package_url": "https://pypi.org/project/words_counter/", "platform": "", "project_url": "https://pypi.org/project/words_counter/", "project_urls": {"Homepage": "https://github.com/Ranc58/verbs_counter"}, "release_url": "https://pypi.org/project/words_counter/1.3.7/", "requires_dist": null, "requires_python": "", "summary": "", "version": "1.3.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"words-in-names-counter\">\n<h2>Words in names counter</h2>\n<div>\n<div>This script calculate words count (nouns and verbs) in funcs and vars names in <tt>.py</tt> files.</div>\n<div>Script check all folders recursively.</div>\n<div>Script can clone repo from github&amp;</div>\n</div>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<div>\n<div>Run <tt>pip3 install words_counter</tt></div>\n<div>Run on CLI for update nltk if it need:</div>\n</div>\n<pre>$ python3\n&gt;&gt; import nltk\n&gt;&gt; nltk.download('all')\n</pre>\n</div>\n<div id=\"how-to-use\">\n<h2>How to use</h2>\n<div>\n<div>Script have some arguments to run:</div>\n<div><tt><span class=\"pre\">-p</span></tt> - Projects dirpathes.</div>\n<div><tt><span class=\"pre\">--all_names</span></tt> - Get all vars and funcs names.</div>\n<div><tt><span class=\"pre\">--by_type</span></tt> - Get all info by word type.</div>\n<div><tt><span class=\"pre\">--top_names</span></tt> - Get top funcs and vars names.</div>\n<div><tt><span class=\"pre\">-d</span></tt> - Clone code from outsource(Github in this version, need repo URL and pathway to create folder)</div>\n<div><tt><span class=\"pre\">-t</span></tt> - Add word type for search. Avaliable types: NN(Noun), NNS(Nouns), VB(Verb).</div>\n<div><tt><span class=\"pre\">--data_type</span></tt> - Structure to search choice. Available funcs or vars.</div>\n<div><tt><span class=\"pre\">--cli</span></tt> - Output result to CLI.</div>\n<div><tt><span class=\"pre\">--json</span></tt> - Output result to JSON file(need pathway to create json file).</div>\n<div><tt><span class=\"pre\">--csv</span></tt> - Output result to CSV file(need pathway to create csv file).</div>\n<div><cite>Attention!</cite> In current version <tt><span class=\"pre\">-t</span></tt> and <tt><span class=\"pre\">--data_type</span></tt> required, only if you don\u2019t want use <tt><span class=\"pre\">-d</span></tt>.</div>\n</div>\n</div>\n<div id=\"usage-example\">\n<h2>Usage example:</h2>\n<p>We have some folders structure with <tt>dclint.py</tt>:</p>\n<pre>\u251c\u2500\u2500 dclint.py\n\u251c\u2500\u2500 django\n\u2502   \u251c\u2500\u2500 css\n\u2502   \u251c\u2500\u2500 bootstrap.min.css\n\u2502   \u251c\u2500\u2500 my_app.py\n\u2502\n\u251c\u2500\u2500 flask\n\u2502   \u251c\u2500\u2500 favicon.ico\n\u2502   \u251c\u2500\u2500 polls.py\n\u2502   \u251c\u2500\u2500 garbage_files\n\u2502   \u2502   \u251c\u2500\u2500bootstrap.min.js\n\u2502   \u2502   \u251c\u2500\u2500html5shiv.min.js\n\u2502   \u2502   \u251c\u2500\u2500thrash.py\n\u2502\n\u251c\u2500\u2500 myproject\n\u2502   \u251c\u2500\u2500ie-emulation-modes-warning.js\n\u2502   \u251c\u2500\u2500old_version.py\n\u2502   \u251c\u2500\u2500new_file.py\n</pre>\n<div>\n<div>In all folders - 5 <tt>.py</tt> files.</div>\n<div>All files have funcs like this (for example):</div>\n</div>\n<pre>def foo():\n   test_var1 = 'test'\n   return test_var1\n</pre>\n<pre>def bar():\n    test_var2 = 'haha'\n    return test_var2\n</pre>\n<pre>if __name__ == '__main__':\n    foo_var = foo()\n    bar_var = bar()\n</pre>\n<p>And another funcs.</p>\n<div>\n<div>Run check(for example from project folder):</div>\n<div><tt>$ python words_counter <span class=\"pre\">-p</span> myproject <span class=\"pre\">-t</span> vb <span class=\"pre\">--data_type</span> funcs <span class=\"pre\">--all_names</span> <span class=\"pre\">--cli</span></tt></div>\n<div>Result:</div>\n</div>\n<pre>project: myproject\nfuncs names:\n        foo\n        bar\nvars names:\n        test_var1\n        test_var2\n        foo_var\n        bar_var\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>MIT license</p>\n</div>\n\n          </div>"}, "last_serial": 3232872, "releases": {"1.3.6": [{"comment_text": "", "digests": {"md5": "d143d62f8aea5a16d4f31518530b8cc1", "sha256": "fbbf3671b359b505c8fa33fbb6dbaebf9ee335bcc077be2c806bdb26efdef3ef"}, "downloads": -1, "filename": "words_counter-1.3.6.tar.gz", "has_sig": false, "md5_digest": "d143d62f8aea5a16d4f31518530b8cc1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3066, "upload_time": "2017-10-07T16:15:29", "upload_time_iso_8601": "2017-10-07T16:15:29.992402Z", "url": "https://files.pythonhosted.org/packages/53/b4/ca96f1c0812e416b4e023f5b57ebf6c264513ef197d272d4fa116062cebd/words_counter-1.3.6.tar.gz", "yanked": false}], "1.3.7": [{"comment_text": "", "digests": {"md5": "d54c404a510f6dafd3362e80fa16c654", "sha256": "b36a4d1a43c8307d11277e0fd7a5e0c697cec506f6af847c0ef0a7b0bad9126e"}, "downloads": -1, "filename": "words_counter-1.3.7.tar.gz", "has_sig": false, "md5_digest": "d54c404a510f6dafd3362e80fa16c654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7487, "upload_time": "2017-10-07T16:26:46", "upload_time_iso_8601": "2017-10-07T16:26:46.020100Z", "url": "https://files.pythonhosted.org/packages/79/9d/10e162d3f377b50c695b28ff071fa8520e5cb08a5d472b6e8d80fcdc9541/words_counter-1.3.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d54c404a510f6dafd3362e80fa16c654", "sha256": "b36a4d1a43c8307d11277e0fd7a5e0c697cec506f6af847c0ef0a7b0bad9126e"}, "downloads": -1, "filename": "words_counter-1.3.7.tar.gz", "has_sig": false, "md5_digest": "d54c404a510f6dafd3362e80fa16c654", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7487, "upload_time": "2017-10-07T16:26:46", "upload_time_iso_8601": "2017-10-07T16:26:46.020100Z", "url": "https://files.pythonhosted.org/packages/79/9d/10e162d3f377b50c695b28ff071fa8520e5cb08a5d472b6e8d80fcdc9541/words_counter-1.3.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:27:58 2020"}