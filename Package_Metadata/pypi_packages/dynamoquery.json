{"info": {"author": "Altitude Networks Engineering Team", "author_email": "engineering@altitudenetworks.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Typing :: Typed"], "description": "# DynamoQuery\n\n[![PyPI - dynamoquery](https://img.shields.io/pypi/v/dynamoquery.svg?color=blue&label=dynamoquery)](https://pypi.org/project/dynamoquery)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/dynamoquery.svg?color=blue)](https://pypi.org/project/dynamoquery)\n[![Coverage](https://img.shields.io/codecov/c/github/altitudenetworks/dynamoquery)](https://codecov.io/gh/altitudenetworks/dynamoquery)\n\nHelper for building Boto3 DynamoDB queries.\n\n- [DynamoQuery](#dynamoquery)\n  - [Installation](#installation)\n  - [Usage](#usage)\n    - [DynamoQuery](#dynamoquery-1)\n    - [DynamoTable](#dynamotable)\n  - [Development](#development)\n    - [VSCode](#vscode)\n    - [PyCharm](#pycharm)\n  - [Versioning](#versioning)\n\n## Installation\n\n```python\npython -m pip install dynamoquery\n```\n\n## Usage\n\nYou can find commented usage examples in [examples](https://github.com/altitudenetworks/dynamoquery/tree/master/examples) directory.\n\n### DynamoQuery\n\n```python\nimport boto3\n\nfrom dynamo_query import DynamoQuery, DataTable\n\ntable_resource = boto3.resource(\"dynamodb\").Table('people')\nquery = DynamoQuery.build_scan(\n    filter_expression=ConditionExpression('first_name') & ('last_name', 'in'),\n).limit(\n    5,\n).projection(\n    'first_name', 'last_name', 'age',\n).table(\n    table_resource=table_resource,\n    table_keys=('pk', ),\n)\n...\n\n# simple query\ndata = {\n    'first_name': 'John',\n    'last_name': ['Cena', 'Doe', 'Carmack'],\n}\n\nresult_data_table = query.execute_dict(data)\nfor record in result_data_table.get_records():\n    print(record)\n\n# batch get\ndata_table = DataTable.create().add_record(\n    {\"pk\": \"my_pk\"},\n    {\"pk\": \"my_pk2\"},\n    {\"pk\": \"my_pk3\"},\n)\n\nresult_data_table = query.execute(data_table)\nfor record in result_data_table.get_records():\n    print(record)\n```\n\n### DynamoTable\n\n```python\nfrom typing_extensions import TypedDict\nfrom dynamo_query import DynamoTable\n\n# first, define your record\nclass UserRecord(TypedDict, total=False):\n    pk: str\n    email: str\n    name: str\n    points: int\n\n\n# Create your dynamo table manager with your record class\nclass UserTable(DynamoTable[UserRecord]):\n    # provide a set of your table keys\n    table_keys = {'pk'}\n\n    # use this property to define your table name\n    @property\n    def table(self) -> str:\n        return \"my_table\"\n\n    # define how to get PK from a record\n    def get_partition_key(self, record: UserRecord) -> str:\n        return record[\"email\"]\n\n    # we do not have a sort key in our table\n    def get_sort_key(self, record: UserRecord) -> None:\n        return None\n\n# okay, let's start using our manager\nuser_table = UserTable()\n\n# add a new record to your table\nuser_table.upsert_record({\n    \"email\": \"user@gmail.com\",\n    \"name\": \"John User\",\n    \"age\": 12,\n})\n\n# and output all the records\nfor user_record in user_table.scan():\n    print(user_record)\n```\n\n## Development\n\nInstall dependencies with [pipenv](https://github.com/pypa/pipenv)\n\n```bash\npython -m pip install pipenv\npipenv install -d\n\n# generate boto3 stubs index\npython -m mypy_boto3\n```\n\nEnable `pylint` and `mypy` checks in your IDE.\n\nRun unit tests and linting.\n\n```bash\n./scripts/before_commit.sh\n```\n\nAdd false-positive unused entities to `vulture` whitelist\n\n```bash\nvulture dynamo_query --make-whitelist > vulture_whitelist.txt\n```\n\n### VSCode\n\nRecommended `.vscode/settings.json`\n\n```json\n{\n  \"python.pythonPath\": \"<pipenv_path>/bin/python\",\n  \"python.linting.pylintEnabled\": true,\n  \"python.linting.enabled\": true,\n  \"python.linting.mypyEnabled\": true,\n  \"python.formatting.provider\": \"black\"\n}\n```\n\n### PyCharm\n\n- Install `mypy` unofficial extension\n- Install `black`extension, enable format on save\n- Run `pylint` on save\n\n## Versioning\n\n`dynamo_query` version follows [Semantic Versioning](https://semver.org/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/altitudenetworks/dynamoquery", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "dynamoquery", "package_url": "https://pypi.org/project/dynamoquery/", "platform": "", "project_url": "https://pypi.org/project/dynamoquery/", "project_urls": {"Homepage": "https://github.com/altitudenetworks/dynamoquery"}, "release_url": "https://pypi.org/project/dynamoquery/2.0.0/", "requires_dist": ["botocore", "typing-extensions"], "requires_python": ">=3.6.10", "summary": "# DynamoQuery", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>DynamoQuery</h1>\n<p><a href=\"https://pypi.org/project/dynamoquery\" rel=\"nofollow\"><img alt=\"PyPI - dynamoquery\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/76ca6142d672f46d76e0048ae618dad4874d0a1f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64796e616d6f71756572792e7376673f636f6c6f723d626c7565266c6162656c3d64796e616d6f7175657279\"></a>\n<a href=\"https://pypi.org/project/dynamoquery\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23b3179e970228f04cce0c13f93e04caeff56366/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f64796e616d6f71756572792e7376673f636f6c6f723d626c7565\"></a>\n<a href=\"https://codecov.io/gh/altitudenetworks/dynamoquery\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/49796965d0db1b2a841208dcc1141d9bd2e46bf0/68747470733a2f2f696d672e736869656c64732e696f2f636f6465636f762f632f6769746875622f616c7469747564656e6574776f726b732f64796e616d6f7175657279\"></a></p>\n<p>Helper for building Boto3 DynamoDB queries.</p>\n<ul>\n<li><a href=\"#dynamoquery\" rel=\"nofollow\">DynamoQuery</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#usage\" rel=\"nofollow\">Usage</a>\n<ul>\n<li><a href=\"#dynamoquery-1\" rel=\"nofollow\">DynamoQuery</a></li>\n<li><a href=\"#dynamotable\" rel=\"nofollow\">DynamoTable</a></li>\n</ul>\n</li>\n<li><a href=\"#development\" rel=\"nofollow\">Development</a>\n<ul>\n<li><a href=\"#vscode\" rel=\"nofollow\">VSCode</a></li>\n<li><a href=\"#pycharm\" rel=\"nofollow\">PyCharm</a></li>\n</ul>\n</li>\n<li><a href=\"#versioning\" rel=\"nofollow\">Versioning</a></li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<pre><span class=\"n\">python</span> <span class=\"o\">-</span><span class=\"n\">m</span> <span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">dynamoquery</span>\n</pre>\n<h2>Usage</h2>\n<p>You can find commented usage examples in <a href=\"https://github.com/altitudenetworks/dynamoquery/tree/master/examples\" rel=\"nofollow\">examples</a> directory.</p>\n<h3>DynamoQuery</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">boto3</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dynamo_query</span> <span class=\"kn\">import</span> <span class=\"n\">DynamoQuery</span><span class=\"p\">,</span> <span class=\"n\">DataTable</span>\n\n<span class=\"n\">table_resource</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s2\">\"dynamodb\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'people'</span><span class=\"p\">)</span>\n<span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"n\">DynamoQuery</span><span class=\"o\">.</span><span class=\"n\">build_scan</span><span class=\"p\">(</span>\n    <span class=\"n\">filter_expression</span><span class=\"o\">=</span><span class=\"n\">ConditionExpression</span><span class=\"p\">(</span><span class=\"s1\">'first_name'</span><span class=\"p\">)</span> <span class=\"o\">&amp;</span> <span class=\"p\">(</span><span class=\"s1\">'last_name'</span><span class=\"p\">,</span> <span class=\"s1\">'in'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">limit</span><span class=\"p\">(</span>\n    <span class=\"mi\">5</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">projection</span><span class=\"p\">(</span>\n    <span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">,</span>\n<span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">table</span><span class=\"p\">(</span>\n    <span class=\"n\">table_resource</span><span class=\"o\">=</span><span class=\"n\">table_resource</span><span class=\"p\">,</span>\n    <span class=\"n\">table_keys</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'pk'</span><span class=\"p\">,</span> <span class=\"p\">),</span>\n<span class=\"p\">)</span>\n<span class=\"o\">...</span>\n\n<span class=\"c1\"># simple query</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'first_name'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'last_name'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Cena'</span><span class=\"p\">,</span> <span class=\"s1\">'Doe'</span><span class=\"p\">,</span> <span class=\"s1\">'Carmack'</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">result_data_table</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">execute_dict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">result_data_table</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># batch get</span>\n<span class=\"n\">data_table</span> <span class=\"o\">=</span> <span class=\"n\">DataTable</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">add_record</span><span class=\"p\">(</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"pk\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_pk\"</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"pk\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_pk2\"</span><span class=\"p\">},</span>\n    <span class=\"p\">{</span><span class=\"s2\">\"pk\"</span><span class=\"p\">:</span> <span class=\"s2\">\"my_pk3\"</span><span class=\"p\">},</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">result_data_table</span> <span class=\"o\">=</span> <span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"n\">data_table</span><span class=\"p\">)</span>\n<span class=\"k\">for</span> <span class=\"n\">record</span> <span class=\"ow\">in</span> <span class=\"n\">result_data_table</span><span class=\"o\">.</span><span class=\"n\">get_records</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">record</span><span class=\"p\">)</span>\n</pre>\n<h3>DynamoTable</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing_extensions</span> <span class=\"kn\">import</span> <span class=\"n\">TypedDict</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dynamo_query</span> <span class=\"kn\">import</span> <span class=\"n\">DynamoTable</span>\n\n<span class=\"c1\"># first, define your record</span>\n<span class=\"k\">class</span> <span class=\"nc\">UserRecord</span><span class=\"p\">(</span><span class=\"n\">TypedDict</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">):</span>\n    <span class=\"n\">pk</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">email</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">points</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n\n\n<span class=\"c1\"># Create your dynamo table manager with your record class</span>\n<span class=\"k\">class</span> <span class=\"nc\">UserTable</span><span class=\"p\">(</span><span class=\"n\">DynamoTable</span><span class=\"p\">[</span><span class=\"n\">UserRecord</span><span class=\"p\">]):</span>\n    <span class=\"c1\"># provide a set of your table keys</span>\n    <span class=\"n\">table_keys</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'pk'</span><span class=\"p\">}</span>\n\n    <span class=\"c1\"># use this property to define your table name</span>\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">table</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"my_table\"</span>\n\n    <span class=\"c1\"># define how to get PK from a record</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_partition_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"p\">:</span> <span class=\"n\">UserRecord</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"n\">record</span><span class=\"p\">[</span><span class=\"s2\">\"email\"</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># we do not have a sort key in our table</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_sort_key</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">record</span><span class=\"p\">:</span> <span class=\"n\">UserRecord</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"k\">return</span> <span class=\"kc\">None</span>\n\n<span class=\"c1\"># okay, let's start using our manager</span>\n<span class=\"n\">user_table</span> <span class=\"o\">=</span> <span class=\"n\">UserTable</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># add a new record to your table</span>\n<span class=\"n\">user_table</span><span class=\"o\">.</span><span class=\"n\">upsert_record</span><span class=\"p\">({</span>\n    <span class=\"s2\">\"email\"</span><span class=\"p\">:</span> <span class=\"s2\">\"user@gmail.com\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"John User\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">,</span>\n<span class=\"p\">})</span>\n\n<span class=\"c1\"># and output all the records</span>\n<span class=\"k\">for</span> <span class=\"n\">user_record</span> <span class=\"ow\">in</span> <span class=\"n\">user_table</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">user_record</span><span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<p>Install dependencies with <a href=\"https://github.com/pypa/pipenv\" rel=\"nofollow\">pipenv</a></p>\n<pre>python -m pip install pipenv\npipenv install -d\n\n<span class=\"c1\"># generate boto3 stubs index</span>\npython -m mypy_boto3\n</pre>\n<p>Enable <code>pylint</code> and <code>mypy</code> checks in your IDE.</p>\n<p>Run unit tests and linting.</p>\n<pre>./scripts/before_commit.sh\n</pre>\n<p>Add false-positive unused entities to <code>vulture</code> whitelist</p>\n<pre>vulture dynamo_query --make-whitelist &gt; vulture_whitelist.txt\n</pre>\n<h3>VSCode</h3>\n<p>Recommended <code>.vscode/settings.json</code></p>\n<pre><span class=\"p\">{</span>\n  <span class=\"nt\">\"python.pythonPath\"</span><span class=\"p\">:</span> <span class=\"s2\">\"&lt;pipenv_path&gt;/bin/python\"</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"python.linting.pylintEnabled\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"python.linting.enabled\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"python.linting.mypyEnabled\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n  <span class=\"nt\">\"python.formatting.provider\"</span><span class=\"p\">:</span> <span class=\"s2\">\"black\"</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>PyCharm</h3>\n<ul>\n<li>Install <code>mypy</code> unofficial extension</li>\n<li>Install <code>black</code>extension, enable format on save</li>\n<li>Run <code>pylint</code> on save</li>\n</ul>\n<h2>Versioning</h2>\n<p><code>dynamo_query</code> version follows <a href=\"https://semver.org/\" rel=\"nofollow\">Semantic Versioning</a>.</p>\n\n          </div>"}, "last_serial": 7044408, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "b96e0530d7b6f6d40d5435d655e3dcc0", "sha256": "9f3500c50c467618755563bc97049ea1174acc0abdc571e02480336937bab5e3"}, "downloads": -1, "filename": "dynamoquery-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b96e0530d7b6f6d40d5435d655e3dcc0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 33366, "upload_time": "2020-02-23T00:53:45", "upload_time_iso_8601": "2020-02-23T00:53:45.300008Z", "url": "https://files.pythonhosted.org/packages/98/3a/1763b854a06cbb8534402793e3442d787d605de1e46859aa3c8c46e1dcec/dynamoquery-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "79d60b733819bebfe9c53ab9fdba07a6", "sha256": "7f42870b171b15ca40ed7cd194e710a2aa9dfc353e13c0dcbb0dcab921fc3754"}, "downloads": -1, "filename": "dynamoquery-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "79d60b733819bebfe9c53ab9fdba07a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36453, "upload_time": "2020-02-25T19:21:33", "upload_time_iso_8601": "2020-02-25T19:21:33.880741Z", "url": "https://files.pythonhosted.org/packages/89/a0/062d377142f43c11276910ab0d3d94cd1de37dac5ff53ef90c63617ebef3/dynamoquery-0.0.3-py3-none-any.whl", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "fac016c571b47d89fb7ad3b930a07d39", "sha256": "f4ec63eebf57d58a6771e4ff982ce21a658a3cae648394a2f811141464bb2a3c"}, "downloads": -1, "filename": "dynamoquery-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "fac016c571b47d89fb7ad3b930a07d39", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 36896, "upload_time": "2020-02-26T01:13:49", "upload_time_iso_8601": "2020-02-26T01:13:49.957430Z", "url": "https://files.pythonhosted.org/packages/e3/dc/098cd82c8a5a0bf9dbd3844797fb40d839b271c2c9816bc72a1e2ae0c90d/dynamoquery-0.0.4-py3-none-any.whl", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "7f384aff5249c18f6e08aa7ec31aabde", "sha256": "a5166211940502265ef6a5aa51bf621ee6ec476e283b85295799b51c1329860f"}, "downloads": -1, "filename": "dynamoquery-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "7f384aff5249c18f6e08aa7ec31aabde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37500, "upload_time": "2020-03-09T17:48:16", "upload_time_iso_8601": "2020-03-09T17:48:16.111160Z", "url": "https://files.pythonhosted.org/packages/de/3f/05d40e2ba9417704bcc80ecc7a2453b55e8a42efdf3d5b21edf088c6adf0/dynamoquery-0.0.5-py3-none-any.whl", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "584406996f9c2b9493271134afe7c87c", "sha256": "45d5a0446ae57f2e3947672047d24e77a78419a57c84e3a56ad9a1185e500955"}, "downloads": -1, "filename": "dynamoquery-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "584406996f9c2b9493271134afe7c87c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37665, "upload_time": "2020-03-09T18:03:16", "upload_time_iso_8601": "2020-03-09T18:03:16.976589Z", "url": "https://files.pythonhosted.org/packages/f0/f6/b508914042e9fe30df43d5d0ca8a9810bd09d2b9987814dedfbd899527da/dynamoquery-0.0.6-py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "39d7c808ea094d51c34c55ce73e3c674", "sha256": "02cb1ff78b60e85574874737d417dc17098d4633211aec460c54d188c3224c5e"}, "downloads": -1, "filename": "dynamoquery-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "39d7c808ea094d51c34c55ce73e3c674", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37662, "upload_time": "2020-03-09T18:54:09", "upload_time_iso_8601": "2020-03-09T18:54:09.675330Z", "url": "https://files.pythonhosted.org/packages/d3/9c/672ff94daccd070d9c215e89b3e9b4af9bb63934cac3d975a0d9f594be97/dynamoquery-0.0.7-py3-none-any.whl", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "d5aacf90fc20349a35c4fa467d0e19d1", "sha256": "7fb01b75010223d208fc96fadbfa4d361dabcd62d17f333f04c221332afe5b60"}, "downloads": -1, "filename": "dynamoquery-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d5aacf90fc20349a35c4fa467d0e19d1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37720, "upload_time": "2020-03-24T19:27:22", "upload_time_iso_8601": "2020-03-24T19:27:22.728508Z", "url": "https://files.pythonhosted.org/packages/6d/b8/138c93766d2a8526a518bcbea1b268aab7ee85a78bf17f4314a9f09d1d89/dynamoquery-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "09fec49a2321586fe7171708f4203aa0", "sha256": "df31b2437f25a7e3e0ac45515c601bf6bceeb80315aa7820cdc5aad918d1a03f"}, "downloads": -1, "filename": "dynamoquery-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "09fec49a2321586fe7171708f4203aa0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37733, "upload_time": "2020-03-31T21:10:01", "upload_time_iso_8601": "2020-03-31T21:10:01.082465Z", "url": "https://files.pythonhosted.org/packages/49/10/48b69464e48aa821d6c800d70ceacce6bf94f157f92d24583d080694168b/dynamoquery-1.0.1-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4414eecfa2b05b3c7263130fe7580a8f", "sha256": "4fb9f8f99093e990bda3ea7691eccd480586aef0b7d55d5f134e3848a2031f51"}, "downloads": -1, "filename": "dynamoquery-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4414eecfa2b05b3c7263130fe7580a8f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.10", "size": 37933, "upload_time": "2020-04-08T21:11:17", "upload_time_iso_8601": "2020-04-08T21:11:17.354719Z", "url": "https://files.pythonhosted.org/packages/6e/6f/c81fa775ee6a1fd99e11a3b765b53c06df8e74245f6d14c7f76679ad44d9/dynamoquery-1.1.0-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "73b984f45fa31ade52182b44e6e3518d", "sha256": "011fbf2228da4481684f2d1129d199bec5465b739b8d3d88de473abadddb7f31"}, "downloads": -1, "filename": "dynamoquery-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "73b984f45fa31ade52182b44e6e3518d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.10", "size": 35633, "upload_time": "2020-04-16T01:59:34", "upload_time_iso_8601": "2020-04-16T01:59:34.354922Z", "url": "https://files.pythonhosted.org/packages/af/d3/58115cd42357fb10f64012a8031ff733af68699057cac784898bf5eb39c8/dynamoquery-1.2.0-py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "717b61b4ca880d6ddf9d2c8273655ebf", "sha256": "b1e1180a7d28a3ee85c3fff6de8eba35daa77f2e7ad72c3027fbbe0895f82236"}, "downloads": -1, "filename": "dynamoquery-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "717b61b4ca880d6ddf9d2c8273655ebf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.10", "size": 32374, "upload_time": "2020-04-17T21:39:47", "upload_time_iso_8601": "2020-04-17T21:39:47.740876Z", "url": "https://files.pythonhosted.org/packages/39/3c/e1e54de6e52bdff75a7125e9ec742b14da13ee636db45e429a410ccb839a/dynamoquery-2.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "717b61b4ca880d6ddf9d2c8273655ebf", "sha256": "b1e1180a7d28a3ee85c3fff6de8eba35daa77f2e7ad72c3027fbbe0895f82236"}, "downloads": -1, "filename": "dynamoquery-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "717b61b4ca880d6ddf9d2c8273655ebf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.10", "size": 32374, "upload_time": "2020-04-17T21:39:47", "upload_time_iso_8601": "2020-04-17T21:39:47.740876Z", "url": "https://files.pythonhosted.org/packages/39/3c/e1e54de6e52bdff75a7125e9ec742b14da13ee636db45e429a410ccb839a/dynamoquery-2.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:48:39 2020"}