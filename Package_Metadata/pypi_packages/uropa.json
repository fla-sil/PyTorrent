{"info": {"author": "Jens Preussner", "author_email": "jens.preussner@mpi-bn.mpg.de", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "Universal RObust Peak Annotator\n=======================================\n\n[![Anaconda-Server Badge](https://img.shields.io/badge/Install%20with-conda-green.svg?style=plastic&logoWidth=40)](https://conda.anaconda.org/bioconda) [![Docker Badge](https://img.shields.io/badge/Container-ready-green.svg?style=plastic&logoWidth=40)](http://biocontainers.pro/registry/#/) [![PyPI Version](https://img.shields.io/pypi/v/uropa.svg?style=plastic)](https://pypi.org/project/uropa/)\n\nThe **Universal RObust Peak Annotator** (UROPA) is a command line based tool, intended for genomic region\nannotation. Based on a configuration file, different target features can be prioritized with multiple integrated queries.\nThese can be sensitive for feature type, distance, strand specificity, feature attributes (eg. protein_coding) or the anchor position relative to the feature.\nUROPA can incorporate reference annotation files (GTF) from different sources, like Gencode, Ensembl, or RefSeq,\nas well as custom reference files produced by the user.\n\nFeatures\n--------\n\n-  Detect the most appropriate annotation with flexible parameter keys that allow\n   robustness and simple customization, such as\n\n   -  feature type\n   -  feature anchor\n   -  feature direction relative to peak location\n   -  filter for attribute values, e.g. \u201cprotein\\_coding\u201d\n   -  strand specificity\n\n-  Utilization of all available GTF files as annotation database\n-  One run with variable sets of parameters by multiple queries\n-  Graduated annotation due to priorization\n-  Different easily-readable output tables (allhits, finalfits, besthits).\n-  Visual summary for annotation evaluation\n-  Preparation of custom annotation files\n\nDocumentation\n--------------\nA detailed description of how to apply UROPA to your data can be found [here](http://uropa-manual.readthedocs.io/).\n\nInstallation and Command-line usage\n------------------------------------\n\n### Conda package manager\n\nWe recommend to install UROPA using the conda package manager. Make sure to have `conda` installed, e.g. via\n\n- [Miniconda](https://conda.io/miniconda.html)\n\t- download the Miniconda installer for **Python 3**\n\t- run ```bash Miniconda3-latest-Linux-x86_64.sh``` to install Miniconda\n\t- Answer the question \"Do you wish the installer to prepend the Miniconda install location to PATH in your /home/.../.bashrc ?\" with yes\n\t\tOR do ```PATH=dir/to/miniconda3:$PATH``` after installation process\n\nThe UROPA installation is now as easy as   \n```conda create --name uropa```   \n```conda activate uropa```   \n```conda install python uropa -c bioconda```   \n\n### Biocontainers / Docker\n\nIf you have a running [Docker](docker.com) environment, you can pull a biocontainer with UROPA and all dependencies via\n\n-\t`docker pull quay.io/biocontainers/uropa:latest_tag` using the latest tag from the [taglist](https://quay.io/repository/biocontainers/uropa?tab=tags), e.g. `1.2.1--py27r3.3.2_0`\n-\t`docker pull loosolab/uropa`\n\n### Installation from source\n\nYou can also install UROPA from the source PyPI package. Note that this comes without the R dependencies for auxillary scripts:\n\n`pip install uropa`\n\nTo fulfill all other dependencies, follow the instructions below:\n\n- [R/Rscript](http://www.r-project.org/) (v3.3.0 or higher; follow instructions on url)\n\t- install required packages step by step:\n\t```bash\n\tinstall.packages(c(\"ggplot2\", \"devtools\", \"gplots\", \"gridExtra\", \"jsonlite\", \"VennDiagram\", \"getopt\", \"tidyr\", \"UpSetR\"))\n\tsource(\"https://bioconductor.org/biocLite.R\")\n\tbiocLite(c(\"RBGL\", \"graph\"))\n  ```\n\nIn order to plot the Chow-Ruskey plot with uropa_summary.R, install the modified Vennerable package from our fork:\n\n```\nlibrary(devtools)\ninstall_github(\"jenzopr/Vennerable\")\n```\n\n### Usage\n\nTo effectively use UROPA, make yourself familiar with the command-line options:\n\n## Command-line usage\n\n```bash\n$ uropa                   \nUsage: uropa [options]          \n\noptional arguments:\n  -h, --help                       show this help message and exit\n\nArguments for one query:\n  -b , --bed                       Filename of .bed-file to annotate\n  -g , --gtf                       Filename of .gtf-file with features\n  --feature [ [ ...]]              Feature for annotation\n  --feature_anchor [ [ ...]]       Feature anchor to annotate to\n  --distance [ [ ...]]             Maximum permitted distance from feature (1 or 2\n                                   arguments)\n  --strand [ [ ...]]               Desired strand of annotated feature relative to peak\n  --relative_location [ [ ...]]    Peak locaion relative to feature location\n  --internals                      Set minimum overlap fraction for internal feature\n                                   annotations. 0 equates to internals=False and 1 equates\n                                   to internals=True. Default is False.\n  --filter_attribute               Filter on 9th column of GTF\n  --attribute_values [ [ ...]]     Value(s) of attribute corresponding to\n                                   --filter_attribute\n  --show_attributes [ [ ...]]      A list of attributes to show in output\n\nMulti-query configuration file:\n  -i config.json, --input config.json\n                                   Filename of configuration file (keys in this file\n                                   overwrite command-line arguments about query)\n\nAdditional arguments:\n  -p , --prefix                    Prefix for result file names (defaults to basename of\n                                   .bed-file)\n  -o , --outdir                    Output directory for output files (default: current\n                                   dir)\n  -s, --summary                    Filename of additional visualisation of results in\n                                   graphical format\n  -t n, --threads n                Multiprocessed run: n = number of threads to run\n                                   annotation process\n  -l uropa.log, --log uropa.log    Log file name for messages and warnings (default: log\n                                   is written to stdout)\n  -d, --debug                      Print verbose messages (for debugging)\n  -v, --version                    Prints the version and exits\n\n```\n\nIt is also possible to run UROPA using queries as given in sample_config.json:\n\n``` uropa -i sample_config.json -t 4 ```\n\n## Biocontainer usage\n\nRunning UROPA from a docker container can be done using the following command:\n\n```bash\nsudo docker run --rm -v <path-to-input-files-on-HOST>:<path-to-container-mnt> UROPA:LATEST uropa <UROPA-Paramters> -p <path-to-container-mnt>/'your-file-prefix'\n```\n\n*-v parameter mounts a HOST folder into your docker CONTAINER. This folder should contain the input files for UROPA and also the result files will be stored here. No files will be stored in the container!*\n\n*--rm removes/closes the container after the run*\n\nMake sure to use the uropa -p option specifying the output directory and prefix, otherwise results are lost in the container environment.\n\nHow to cite\n-----------\n\nKondili M, Fust A, Preussner J, Kuenne C, Braun T, and Looso M. UROPA: a tool for Universal RObust Peak Annotation. *Scientific Reports* **7** (2017), doi: [10.1038/s41598-017-02464-y](https://www.nature.com/articles/s41598-017-02464-y)\n\nContribute\n----------\n\n* Source Code [here](https://github.molgen.mpg.de/loosolab/UROPA)\n* Issue Tracker [here](https://github.molgen.mpg.de/loosolab/UROPA/issues)\n\nSupport\n-------\n\nIf you have any questions please feel free to contact Mario Looso (mario.looso@mpi-bn.mpg.de).\n\nLicense\n-------\n\nThe project is licensed under the MIT License.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.molgen.mpg.de/loosolab/UROPA", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "uropa", "package_url": "https://pypi.org/project/uropa/", "platform": "", "project_url": "https://pypi.org/project/uropa/", "project_urls": {"Homepage": "https://github.molgen.mpg.de/loosolab/UROPA"}, "release_url": "https://pypi.org/project/uropa/3.5.0/", "requires_dist": null, "requires_python": "", "summary": "UROPA is a command line based tool, intended for genomic region annotation", "version": "3.5.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Universal RObust Peak Annotator</h1>\n<p><a href=\"https://conda.anaconda.org/bioconda\" rel=\"nofollow\"><img alt=\"Anaconda-Server Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4620b3bf02c01876e9934bfb7375287458df2f9c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f496e7374616c6c253230776974682d636f6e64612d677265656e2e7376673f7374796c653d706c6173746963266c6f676f57696474683d3430\"></a> <a href=\"http://biocontainers.pro/registry/#/\" rel=\"nofollow\"><img alt=\"Docker Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/621372334a984346c7887fc1b303422b0b915136/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f436f6e7461696e65722d72656164792d677265656e2e7376673f7374796c653d706c6173746963266c6f676f57696474683d3430\"></a> <a href=\"https://pypi.org/project/uropa/\" rel=\"nofollow\"><img alt=\"PyPI Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02ee82a7b885c11d431b812d69fe60956d760ed6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f75726f70612e7376673f7374796c653d706c6173746963\"></a></p>\n<p>The <strong>Universal RObust Peak Annotator</strong> (UROPA) is a command line based tool, intended for genomic region\nannotation. Based on a configuration file, different target features can be prioritized with multiple integrated queries.\nThese can be sensitive for feature type, distance, strand specificity, feature attributes (eg. protein_coding) or the anchor position relative to the feature.\nUROPA can incorporate reference annotation files (GTF) from different sources, like Gencode, Ensembl, or RefSeq,\nas well as custom reference files produced by the user.</p>\n<h2>Features</h2>\n<ul>\n<li>\n<p>Detect the most appropriate annotation with flexible parameter keys that allow\nrobustness and simple customization, such as</p>\n<ul>\n<li>feature type</li>\n<li>feature anchor</li>\n<li>feature direction relative to peak location</li>\n<li>filter for attribute values, e.g. \u201cprotein_coding\u201d</li>\n<li>strand specificity</li>\n</ul>\n</li>\n<li>\n<p>Utilization of all available GTF files as annotation database</p>\n</li>\n<li>\n<p>One run with variable sets of parameters by multiple queries</p>\n</li>\n<li>\n<p>Graduated annotation due to priorization</p>\n</li>\n<li>\n<p>Different easily-readable output tables (allhits, finalfits, besthits).</p>\n</li>\n<li>\n<p>Visual summary for annotation evaluation</p>\n</li>\n<li>\n<p>Preparation of custom annotation files</p>\n</li>\n</ul>\n<h2>Documentation</h2>\n<p>A detailed description of how to apply UROPA to your data can be found <a href=\"http://uropa-manual.readthedocs.io/\" rel=\"nofollow\">here</a>.</p>\n<h2>Installation and Command-line usage</h2>\n<h3>Conda package manager</h3>\n<p>We recommend to install UROPA using the conda package manager. Make sure to have <code>conda</code> installed, e.g. via</p>\n<ul>\n<li><a href=\"https://conda.io/miniconda.html\" rel=\"nofollow\">Miniconda</a>\n<ul>\n<li>download the Miniconda installer for <strong>Python 3</strong></li>\n<li>run <code>bash Miniconda3-latest-Linux-x86_64.sh</code> to install Miniconda</li>\n<li>Answer the question \"Do you wish the installer to prepend the Miniconda install location to PATH in your /home/.../.bashrc ?\" with yes\nOR do <code>PATH=dir/to/miniconda3:$PATH</code> after installation process</li>\n</ul>\n</li>\n</ul>\n<p>The UROPA installation is now as easy as<br>\n<code>conda create --name uropa</code><br>\n<code>conda activate uropa</code><br>\n<code>conda install python uropa -c bioconda</code></p>\n<h3>Biocontainers / Docker</h3>\n<p>If you have a running <a href=\"docker.com\" rel=\"nofollow\">Docker</a> environment, you can pull a biocontainer with UROPA and all dependencies via</p>\n<ul>\n<li><code>docker pull quay.io/biocontainers/uropa:latest_tag</code> using the latest tag from the <a href=\"https://quay.io/repository/biocontainers/uropa?tab=tags\" rel=\"nofollow\">taglist</a>, e.g. <code>1.2.1--py27r3.3.2_0</code></li>\n<li><code>docker pull loosolab/uropa</code></li>\n</ul>\n<h3>Installation from source</h3>\n<p>You can also install UROPA from the source PyPI package. Note that this comes without the R dependencies for auxillary scripts:</p>\n<p><code>pip install uropa</code></p>\n<p>To fulfill all other dependencies, follow the instructions below:</p>\n<ul>\n<li><a href=\"http://www.r-project.org/\" rel=\"nofollow\">R/Rscript</a> (v3.3.0 or higher; follow instructions on url)\n<ul>\n<li>install required packages step by step:</li>\n</ul>\n<pre> install.packages<span class=\"o\">(</span>c<span class=\"o\">(</span><span class=\"s2\">\"ggplot2\"</span>, <span class=\"s2\">\"devtools\"</span>, <span class=\"s2\">\"gplots\"</span>, <span class=\"s2\">\"gridExtra\"</span>, <span class=\"s2\">\"jsonlite\"</span>, <span class=\"s2\">\"VennDiagram\"</span>, <span class=\"s2\">\"getopt\"</span>, <span class=\"s2\">\"tidyr\"</span>, <span class=\"s2\">\"UpSetR\"</span><span class=\"o\">))</span>\n source<span class=\"o\">(</span><span class=\"s2\">\"https://bioconductor.org/biocLite.R\"</span><span class=\"o\">)</span>\n biocLite<span class=\"o\">(</span>c<span class=\"o\">(</span><span class=\"s2\">\"RBGL\"</span>, <span class=\"s2\">\"graph\"</span><span class=\"o\">))</span>\n</pre>\n</li>\n</ul>\n<p>In order to plot the Chow-Ruskey plot with uropa_summary.R, install the modified Vennerable package from our fork:</p>\n<pre><code>library(devtools)\ninstall_github(\"jenzopr/Vennerable\")\n</code></pre>\n<h3>Usage</h3>\n<p>To effectively use UROPA, make yourself familiar with the command-line options:</p>\n<h2>Command-line usage</h2>\n<pre>$ uropa                   \nUsage: uropa <span class=\"o\">[</span>options<span class=\"o\">]</span>          \n\noptional arguments:\n  -h, --help                       show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n\nArguments <span class=\"k\">for</span> one query:\n  -b , --bed                       Filename of .bed-file to annotate\n  -g , --gtf                       Filename of .gtf-file with features\n  --feature <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>              Feature <span class=\"k\">for</span> annotation\n  --feature_anchor <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>       Feature anchor to annotate to\n  --distance <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>             Maximum permitted distance from feature <span class=\"o\">(</span><span class=\"m\">1</span> or <span class=\"m\">2</span>\n                                   arguments<span class=\"o\">)</span>\n  --strand <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>               Desired strand of annotated feature relative to peak\n  --relative_location <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>    Peak locaion relative to feature location\n  --internals                      Set minimum overlap fraction <span class=\"k\">for</span> internal feature\n                                   annotations. <span class=\"m\">0</span> equates to <span class=\"nv\">internals</span><span class=\"o\">=</span>False and <span class=\"m\">1</span> equates\n                                   to <span class=\"nv\">internals</span><span class=\"o\">=</span>True. Default is False.\n  --filter_attribute               Filter on 9th column of GTF\n  --attribute_values <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>     Value<span class=\"o\">(</span>s<span class=\"o\">)</span> of attribute corresponding to\n                                   --filter_attribute\n  --show_attributes <span class=\"o\">[</span> <span class=\"o\">[</span> ...<span class=\"o\">]]</span>      A list of attributes to show in output\n\nMulti-query configuration file:\n  -i config.json, --input config.json\n                                   Filename of configuration file <span class=\"o\">(</span>keys in this file\n                                   overwrite command-line arguments about query<span class=\"o\">)</span>\n\nAdditional arguments:\n  -p , --prefix                    Prefix <span class=\"k\">for</span> result file names <span class=\"o\">(</span>defaults to basename of\n                                   .bed-file<span class=\"o\">)</span>\n  -o , --outdir                    Output directory <span class=\"k\">for</span> output files <span class=\"o\">(</span>default: current\n                                   dir<span class=\"o\">)</span>\n  -s, --summary                    Filename of additional visualisation of results in\n                                   graphical format\n  -t n, --threads n                Multiprocessed run: <span class=\"nv\">n</span> <span class=\"o\">=</span> number of threads to run\n                                   annotation process\n  -l uropa.log, --log uropa.log    Log file name <span class=\"k\">for</span> messages and warnings <span class=\"o\">(</span>default: log\n                                   is written to stdout<span class=\"o\">)</span>\n  -d, --debug                      Print verbose messages <span class=\"o\">(</span><span class=\"k\">for</span> debugging<span class=\"o\">)</span>\n  -v, --version                    Prints the version and exits\n</pre>\n<p>It is also possible to run UROPA using queries as given in sample_config.json:</p>\n<p><code>uropa -i sample_config.json -t 4</code></p>\n<h2>Biocontainer usage</h2>\n<p>Running UROPA from a docker container can be done using the following command:</p>\n<pre>sudo docker run --rm -v &lt;path-to-input-files-on-HOST&gt;:&lt;path-to-container-mnt&gt; UROPA:LATEST uropa &lt;UROPA-Paramters&gt; -p &lt;path-to-container-mnt&gt;/<span class=\"s1\">'your-file-prefix'</span>\n</pre>\n<p><em>-v parameter mounts a HOST folder into your docker CONTAINER. This folder should contain the input files for UROPA and also the result files will be stored here. No files will be stored in the container!</em></p>\n<p><em>--rm removes/closes the container after the run</em></p>\n<p>Make sure to use the uropa -p option specifying the output directory and prefix, otherwise results are lost in the container environment.</p>\n<h2>How to cite</h2>\n<p>Kondili M, Fust A, Preussner J, Kuenne C, Braun T, and Looso M. UROPA: a tool for Universal RObust Peak Annotation. <em>Scientific Reports</em> <strong>7</strong> (2017), doi: <a href=\"https://www.nature.com/articles/s41598-017-02464-y\" rel=\"nofollow\">10.1038/s41598-017-02464-y</a></p>\n<h2>Contribute</h2>\n<ul>\n<li>Source Code <a href=\"https://github.molgen.mpg.de/loosolab/UROPA\" rel=\"nofollow\">here</a></li>\n<li>Issue Tracker <a href=\"https://github.molgen.mpg.de/loosolab/UROPA/issues\" rel=\"nofollow\">here</a></li>\n</ul>\n<h2>Support</h2>\n<p>If you have any questions please feel free to contact Mario Looso (<a href=\"mailto:mario.looso@mpi-bn.mpg.de\">mario.looso@mpi-bn.mpg.de</a>).</p>\n<h2>License</h2>\n<p>The project is licensed under the MIT License.</p>\n\n          </div>"}, "last_serial": 6526582, "releases": {"1.2.1": [{"comment_text": "", "digests": {"md5": "10e53bad46946c6c5f29a577de1220a7", "sha256": "6d0cf06ae4507e34cd25b913840be4317d37a7af0e4ee53429b54aca29aab525"}, "downloads": -1, "filename": "uropa-1.2.1.tar.gz", "has_sig": false, "md5_digest": "10e53bad46946c6c5f29a577de1220a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35415, "upload_time": "2017-09-07T13:36:52", "upload_time_iso_8601": "2017-09-07T13:36:52.011435Z", "url": "https://files.pythonhosted.org/packages/27/6b/018dad28f70de32b799f091aef2159b33eeba7451aa83fcbe40cf4735630/uropa-1.2.1.tar.gz", "yanked": false}], "2.0.0a0": [{"comment_text": "", "digests": {"md5": "b211485b634763affdc7a51c1035426c", "sha256": "1ad1b98d222c0c38d0244f6e466ec27f572788220aa31a3674d8e3c98496974f"}, "downloads": -1, "filename": "uropa-2.0.0a0.tar.gz", "has_sig": false, "md5_digest": "b211485b634763affdc7a51c1035426c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32823, "upload_time": "2017-11-08T10:00:41", "upload_time_iso_8601": "2017-11-08T10:00:41.298659Z", "url": "https://files.pythonhosted.org/packages/41/b5/5f6d32992be3f2dd03be43a831a5d6cf77996c9ac1c5b200173fe2e87e7a/uropa-2.0.0a0.tar.gz", "yanked": false}], "2.0.2a0": [{"comment_text": "", "digests": {"md5": "a308c3a746cedf7a634b50537f4cacce", "sha256": "210ab49463c237c6899e4382e1b426d6d17f6fd44b5705ce6041ff62aa80d11e"}, "downloads": -1, "filename": "uropa-2.0.2a0.tar.gz", "has_sig": false, "md5_digest": "a308c3a746cedf7a634b50537f4cacce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32850, "upload_time": "2018-01-16T14:52:11", "upload_time_iso_8601": "2018-01-16T14:52:11.429698Z", "url": "https://files.pythonhosted.org/packages/ac/b5/d762700501e695e6ba0b1d79b389520b899c09e145f14ba695f15f2a7aa1/uropa-2.0.2a0.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "920db222a9bb00673b81f76ca33ce3f7", "sha256": "4e2ed21ed655bf1ddb1dc9f135594bc30628616406ac736b5d3f75c5f25ed954"}, "downloads": -1, "filename": "uropa-2.0.3.tar.gz", "has_sig": false, "md5_digest": "920db222a9bb00673b81f76ca33ce3f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35879, "upload_time": "2019-01-10T14:34:00", "upload_time_iso_8601": "2019-01-10T14:34:00.204600Z", "url": "https://files.pythonhosted.org/packages/9c/66/54bd541ba7c4e2640cb6f88f23ebdf59d79906a6703a17d646b816aa975c/uropa-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "6f4420230eea7b1e4bf511eec45eaec9", "sha256": "45060b04a2fee7fbc4bfe7af6c82dd954f6e841c88482b3e4f1ca0710bd06b43"}, "downloads": -1, "filename": "uropa-2.0.4.tar.gz", "has_sig": false, "md5_digest": "6f4420230eea7b1e4bf511eec45eaec9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36119, "upload_time": "2019-01-31T07:52:46", "upload_time_iso_8601": "2019-01-31T07:52:46.392226Z", "url": "https://files.pythonhosted.org/packages/02/97/dbae5f7680e6244ed1059413c1d66fe7bcea60be0ddb0229d756f219da26/uropa-2.0.4.tar.gz", "yanked": false}], "3.0.0": [{"comment_text": "", "digests": {"md5": "361e82bba0a1f4b569a221e3827ea48f", "sha256": "a01faf576355699c5958d8cd0e74eec7ac4b02b0816b8c5bf868042ee94862dd"}, "downloads": -1, "filename": "uropa-3.0.0.tar.gz", "has_sig": false, "md5_digest": "361e82bba0a1f4b569a221e3827ea48f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27229, "upload_time": "2019-03-18T08:07:33", "upload_time_iso_8601": "2019-03-18T08:07:33.211116Z", "url": "https://files.pythonhosted.org/packages/51/b5/87a848f9dce9b42053a5a5710ca1b8d6b08dee0f408cf9622f852b5cad4a/uropa-3.0.0.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "6b2101ac6d22e4a51aaea43996550851", "sha256": "1312eb7367c79bd6bd2977505dc4728430056e62520efccdbf88a45f745a6bfd"}, "downloads": -1, "filename": "uropa-3.1.0.tar.gz", "has_sig": false, "md5_digest": "6b2101ac6d22e4a51aaea43996550851", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30457, "upload_time": "2019-04-01T07:57:52", "upload_time_iso_8601": "2019-04-01T07:57:52.765150Z", "url": "https://files.pythonhosted.org/packages/50/af/df286ef1ddc447003694d43111c0740e327a4583e531c28bce0ef01d2a8b/uropa-3.1.0.tar.gz", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "3a8181ce6d6db458f66205c68e716d3b", "sha256": "19f68f46354ac6b0a4243fa12cde5967e351c358fc0144689bde62943831be45"}, "downloads": -1, "filename": "uropa-3.1.1.tar.gz", "has_sig": false, "md5_digest": "3a8181ce6d6db458f66205c68e716d3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30686, "upload_time": "2019-04-08T13:43:12", "upload_time_iso_8601": "2019-04-08T13:43:12.468795Z", "url": "https://files.pythonhosted.org/packages/25/94/af48b56a0b049cc381b101d6cef5da037862e7f0527738ea938cc7fd1b82/uropa-3.1.1.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "07886912fba2d51799a4ee34aa9e3b81", "sha256": "672f145aa0d79ba4d8a32c7ba013810c3f6a463654b4cfffe1f4808868164a4e"}, "downloads": -1, "filename": "uropa-3.1.2.tar.gz", "has_sig": false, "md5_digest": "07886912fba2d51799a4ee34aa9e3b81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30682, "upload_time": "2019-04-08T15:49:01", "upload_time_iso_8601": "2019-04-08T15:49:01.075243Z", "url": "https://files.pythonhosted.org/packages/bb/12/d4a846adf04d0841cc87f04e05ff2212edd712dcdfec5164fbcef33a9195/uropa-3.1.2.tar.gz", "yanked": false}], "3.1.3": [{"comment_text": "", "digests": {"md5": "52924326ea6a6793221634db3b1281b7", "sha256": "303232fb0ceef6f4cf5ce66b7cc158757832bdd1ce8afe25f52753e20ddfefea"}, "downloads": -1, "filename": "uropa-3.1.3.tar.gz", "has_sig": false, "md5_digest": "52924326ea6a6793221634db3b1281b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30655, "upload_time": "2019-04-09T08:10:15", "upload_time_iso_8601": "2019-04-09T08:10:15.871486Z", "url": "https://files.pythonhosted.org/packages/5f/41/6bbaf93154ee3b5ea832fd5464826567d6039f1380cb3974b573deaf68e6/uropa-3.1.3.tar.gz", "yanked": false}], "3.1.4": [{"comment_text": "", "digests": {"md5": "4e88eb56597d4f5aca9194c051a36cb8", "sha256": "7beb0c49ca1d6b1294f0cf575bc3bcfa4ff6f6aec005b593e6746835320bafa8"}, "downloads": -1, "filename": "uropa-3.1.4.tar.gz", "has_sig": false, "md5_digest": "4e88eb56597d4f5aca9194c051a36cb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30747, "upload_time": "2019-04-13T12:56:14", "upload_time_iso_8601": "2019-04-13T12:56:14.423611Z", "url": "https://files.pythonhosted.org/packages/eb/47/8c8a2a745ecd60b97c7320b2be151e026f4a87274cfef6c3568068b2f6da/uropa-3.1.4.tar.gz", "yanked": false}], "3.2.0": [{"comment_text": "", "digests": {"md5": "db99aedb5d7abfe894f2484e3aba5c60", "sha256": "d85b38412bf0cc982e4b3c69ab274c65402c3a0b6949101503e8af33c1c8c4ae"}, "downloads": -1, "filename": "uropa-3.2.0.tar.gz", "has_sig": false, "md5_digest": "db99aedb5d7abfe894f2484e3aba5c60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30870, "upload_time": "2019-04-17T15:48:02", "upload_time_iso_8601": "2019-04-17T15:48:02.014970Z", "url": "https://files.pythonhosted.org/packages/0c/4e/636124c25097ec52579c4cbe15ec27849d2b4cfd6f52b3b7f0c965baa4c6/uropa-3.2.0.tar.gz", "yanked": false}], "3.3.0": [{"comment_text": "", "digests": {"md5": "f87c57d7a97ed5d7425ea87a918194e1", "sha256": "903619fb5c4415edb488e7cd29adcffc9f75a1dafc69c30ef86c65f6a062855a"}, "downloads": -1, "filename": "uropa-3.3.0.tar.gz", "has_sig": false, "md5_digest": "f87c57d7a97ed5d7425ea87a918194e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31378, "upload_time": "2019-04-28T13:35:00", "upload_time_iso_8601": "2019-04-28T13:35:00.050603Z", "url": "https://files.pythonhosted.org/packages/82/92/dfd28feaff8403621de3c9bb0d70b6942511b8b6dcbc69ce348ba8bd70ca/uropa-3.3.0.tar.gz", "yanked": false}], "3.3.1": [{"comment_text": "", "digests": {"md5": "d77c483975bc33a98d3b7a77a16ce589", "sha256": "26f28f04edc9042bdff479a0d30a4ee3673ef2a99a08cc72fb9881f2fece433b"}, "downloads": -1, "filename": "uropa-3.3.1.tar.gz", "has_sig": false, "md5_digest": "d77c483975bc33a98d3b7a77a16ce589", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31446, "upload_time": "2019-05-21T07:25:42", "upload_time_iso_8601": "2019-05-21T07:25:42.167125Z", "url": "https://files.pythonhosted.org/packages/a9/46/3a3ec057ab9b6e3acb50df91d608d03dd31246bce2174e942fd3d0899af0/uropa-3.3.1.tar.gz", "yanked": false}], "3.3.2": [{"comment_text": "", "digests": {"md5": "afbd587600d7e90aa05a2aa3d96bad56", "sha256": "0fd56569b24ffeb3974a20ef6576dc5e1baa0803c60bbbbabcc529cab45eeab6"}, "downloads": -1, "filename": "uropa-3.3.2.tar.gz", "has_sig": false, "md5_digest": "afbd587600d7e90aa05a2aa3d96bad56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31652, "upload_time": "2019-05-22T11:49:38", "upload_time_iso_8601": "2019-05-22T11:49:38.883651Z", "url": "https://files.pythonhosted.org/packages/a6/82/64f97f7f8a1c57ac1ad77c179cedf0035ecb4db18b2637afb1df2a8554c5/uropa-3.3.2.tar.gz", "yanked": false}], "3.3.3": [{"comment_text": "", "digests": {"md5": "eae0490a15e2316e467493bd38f166c3", "sha256": "b05e2e9bf7d2cf7773b7a361220503fa5644c647cac516cab64936917e1cf6f3"}, "downloads": -1, "filename": "uropa-3.3.3.tar.gz", "has_sig": false, "md5_digest": "eae0490a15e2316e467493bd38f166c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31569, "upload_time": "2019-06-06T11:28:36", "upload_time_iso_8601": "2019-06-06T11:28:36.050785Z", "url": "https://files.pythonhosted.org/packages/3d/19/fa561ed7bec1d50ff8d5a208f6e2e8d5287d537d1be275111b7e4ae4685d/uropa-3.3.3.tar.gz", "yanked": false}], "3.3.4": [{"comment_text": "", "digests": {"md5": "f8909ba3cc9a697eaaabcf0d03fda2fa", "sha256": "939fb9a7d631f8391c00c1c85dd36bffea168d61ec1d678809ca22379f172238"}, "downloads": -1, "filename": "uropa-3.3.4.tar.gz", "has_sig": false, "md5_digest": "f8909ba3cc9a697eaaabcf0d03fda2fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31755, "upload_time": "2019-07-01T12:53:07", "upload_time_iso_8601": "2019-07-01T12:53:07.914535Z", "url": "https://files.pythonhosted.org/packages/79/ad/f4f7f81febe3e83b3604f3da321047fc30c45247dd4393dd19267a9657b3/uropa-3.3.4.tar.gz", "yanked": false}], "3.4.0": [{"comment_text": "", "digests": {"md5": "43f12758cdaabbd5dcd23d7caa5905a5", "sha256": "137b1bd450bbddb3230ffb11f0fe32d0c01cef0b539434ad3cb0784c59be4f8b"}, "downloads": -1, "filename": "uropa-3.4.0.tar.gz", "has_sig": false, "md5_digest": "43f12758cdaabbd5dcd23d7caa5905a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32003, "upload_time": "2019-09-05T11:23:04", "upload_time_iso_8601": "2019-09-05T11:23:04.622777Z", "url": "https://files.pythonhosted.org/packages/a7/a6/05b61971381e3931c411d047e6caf3ebe118f55d7e3c6f44302c1d451306/uropa-3.4.0.tar.gz", "yanked": false}], "3.5.0": [{"comment_text": "", "digests": {"md5": "15ce18946b2addd405c6765262e6ecbb", "sha256": "6616252a72d5cb166459f52f91fe72fa7e263f8807207d734cfaa0c54ee3ca59"}, "downloads": -1, "filename": "uropa-3.5.0.tar.gz", "has_sig": false, "md5_digest": "15ce18946b2addd405c6765262e6ecbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33663, "upload_time": "2020-01-27T14:06:05", "upload_time_iso_8601": "2020-01-27T14:06:05.617356Z", "url": "https://files.pythonhosted.org/packages/19/30/38e04328fd7d246fb22d352498c869111089d372f64125d2ad4410196b20/uropa-3.5.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "15ce18946b2addd405c6765262e6ecbb", "sha256": "6616252a72d5cb166459f52f91fe72fa7e263f8807207d734cfaa0c54ee3ca59"}, "downloads": -1, "filename": "uropa-3.5.0.tar.gz", "has_sig": false, "md5_digest": "15ce18946b2addd405c6765262e6ecbb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33663, "upload_time": "2020-01-27T14:06:05", "upload_time_iso_8601": "2020-01-27T14:06:05.617356Z", "url": "https://files.pythonhosted.org/packages/19/30/38e04328fd7d246fb22d352498c869111089d372f64125d2ad4410196b20/uropa-3.5.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:39:17 2020"}