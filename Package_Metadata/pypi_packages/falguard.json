{"info": {"author": "Remy Gwaramadze", "author_email": "remy@gwaramadze.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries"], "description": "Falguard |travis| |codecov| |python-versions|\n=============================================\n\nFalguard is a Python library that provides request validation helpers for\n`Falcon <https://falconframework.org/>`_ web framework. Falguard relies on Yelp's `bravado-core <https://github.com/Yelp/bravado-core>`_ library.\n\nFeatures\n--------\n* Validation of `OpenAPI (Swagger) <http://swagger.io/specification/>`_ schema\n* Error serialization compliant with `JSON:API <http://jsonapi.org/format/#error-objects>`_ specification\n* Validator may be used either as a hook or a middleware component\n\nInstallation\n------------\n.. code:: bash\n\n    $ pip install falguard\n\nUsage\n-----\nInstantiate Validator with the path to OpenAPI specification (both json and yaml are supported)...\n\n.. code:: python\n\n    import falguard\n\n    validator = falguard.Validator('spec.json')\n\n\n...and use it as the hook on the responder...\n\n.. code:: python\n\n    class Resource:\n\n        @falcon.before(validator)\n        def on_get(self, request, response, **validated):\n            pass\n\n\n...or the hook on the whole resource...\n\n.. code:: python\n\n    @falcon.before(validator)\n    class Resource:\n        pass\n\n\n...or globally, as the middleware component.\n\n.. code:: python\n\n    import falcon\n\n    api = falcon.API(middleware=validator)\n\n\nAll validated parameters (path, query, body) are injected back to the responder\nso it MUST accept relevant number of arguments, eg.\n\n.. code:: python\n\n    class Resource:\n\n        def on_put(self, request, response, resource_id, data):\n            pass\n\n        def on_post(self, request, response, **validated):\n            pass\n\n.. |travis| image:: https://travis-ci.org/gwaramadze/falguard.svg\n   :target: https://travis-ci.org/gwaramadze/falguard\n\n.. |codecov| image:: https://codecov.io/gh/gwaramadze/falguard/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/gwaramadze/falguard\n\n.. |python-versions| image:: https://img.shields.io/pypi/pyversions/falguard.svg\n    :target: https://pypi.org/project/falguard/\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gwaramadze/falguard", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "falguard", "package_url": "https://pypi.org/project/falguard/", "platform": "", "project_url": "https://pypi.org/project/falguard/", "project_urls": {"Homepage": "https://github.com/gwaramadze/falguard"}, "release_url": "https://pypi.org/project/falguard/0.4/", "requires_dist": ["falcon (<3.0.0,>=1.1.0)", "bravado-core (<6.0.0,>=4.6.0)", "six (>=1.12.0)", "pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'", "pytest-flake8 ; extra == 'tests'", "pytest-pylint ; extra == 'tests'"], "requires_python": "", "summary": "Falcon requests validation against OpenAPI (Swagger) schema", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Falguard is a Python library that provides request validation helpers for\n<a href=\"https://falconframework.org/\" rel=\"nofollow\">Falcon</a> web framework. Falguard relies on Yelp\u2019s <a href=\"https://github.com/Yelp/bravado-core\" rel=\"nofollow\">bravado-core</a> library.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Validation of <a href=\"http://swagger.io/specification/\" rel=\"nofollow\">OpenAPI (Swagger)</a> schema</li>\n<li>Error serialization compliant with <a href=\"http://jsonapi.org/format/#error-objects\" rel=\"nofollow\">JSON:API</a> specification</li>\n<li>Validator may be used either as a hook or a middleware component</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install falguard\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Instantiate Validator with the path to OpenAPI specification (both json and yaml are supported)\u2026</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">falguard</span>\n\n<span class=\"n\">validator</span> <span class=\"o\">=</span> <span class=\"n\">falguard</span><span class=\"o\">.</span><span class=\"n\">Validator</span><span class=\"p\">(</span><span class=\"s1\">'spec.json'</span><span class=\"p\">)</span>\n</pre>\n<p>\u2026and use it as the hook on the responder\u2026</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Resource</span><span class=\"p\">:</span>\n\n    <span class=\"nd\">@falcon</span><span class=\"o\">.</span><span class=\"n\">before</span><span class=\"p\">(</span><span class=\"n\">validator</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">on_get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">validated</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre>\n<p>\u2026or the hook on the whole resource\u2026</p>\n<pre><span class=\"nd\">@falcon</span><span class=\"o\">.</span><span class=\"n\">before</span><span class=\"p\">(</span><span class=\"n\">validator</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Resource</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>\u2026or globally, as the middleware component.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">falcon</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">falcon</span><span class=\"o\">.</span><span class=\"n\">API</span><span class=\"p\">(</span><span class=\"n\">middleware</span><span class=\"o\">=</span><span class=\"n\">validator</span><span class=\"p\">)</span>\n</pre>\n<p>All validated parameters (path, query, body) are injected back to the responder\nso it MUST accept relevant number of arguments, eg.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Resource</span><span class=\"p\">:</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_put</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">resource_id</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">on_post</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">validated</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6222793, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3fc32863a2206ad42122378b97b38679", "sha256": "c5f820de0fdb814ebeda9bccff4a13fadc06d622a07d39dd8cf34f0ce9784bb8"}, "downloads": -1, "filename": "falguard-0.1.tar.gz", "has_sig": false, "md5_digest": "3fc32863a2206ad42122378b97b38679", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2748, "upload_time": "2017-07-16T09:09:43", "upload_time_iso_8601": "2017-07-16T09:09:43.410223Z", "url": "https://files.pythonhosted.org/packages/cf/ba/21d28a7ebfd86c2067911c1f2e8ee881c622000ed36ac54f11a713bff3bc/falguard-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "400f78c22d067b5023b643425b4c485a", "sha256": "55976b3de9650ed8768767d0164b9c31dc4fb96cfaf0084b5d56a798e8993ce2"}, "downloads": -1, "filename": "falguard-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "400f78c22d067b5023b643425b4c485a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3753, "upload_time": "2018-12-29T14:43:43", "upload_time_iso_8601": "2018-12-29T14:43:43.467394Z", "url": "https://files.pythonhosted.org/packages/19/39/a3b52e2a678187bd53ae551dfb72478965d7528864061a3542008411b824/falguard-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d195a4a2f63d7f968b833e102fad5fbc", "sha256": "d6d7defc360c89d7b291825eb5904b067e1b8d12efd0f13a3088fcca0912b63a"}, "downloads": -1, "filename": "falguard-0.2.tar.gz", "has_sig": false, "md5_digest": "d195a4a2f63d7f968b833e102fad5fbc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3113, "upload_time": "2018-12-29T14:43:44", "upload_time_iso_8601": "2018-12-29T14:43:44.845864Z", "url": "https://files.pythonhosted.org/packages/4a/45/34de2d01566c9a1f4ab70e756947e3ba6769c7d16e057f45602d5d96e2cb/falguard-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "93a91461bb828918d9cb8588f8fbe2b3", "sha256": "c6921d27e69e8077e16e5dd67dbd39fc8683190c8183dab6fc7bcf5013a6df13"}, "downloads": -1, "filename": "falguard-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "93a91461bb828918d9cb8588f8fbe2b3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 3982, "upload_time": "2019-02-17T21:07:39", "upload_time_iso_8601": "2019-02-17T21:07:39.925640Z", "url": "https://files.pythonhosted.org/packages/0d/3c/98b743ea38c213757d3dbfeabab0544090ffbf855a3de2bd33a6dc5a6a20/falguard-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e06e5b5a1fab49e7394012dee5cb50ad", "sha256": "7cee5dbc4a73011375683bc7954e46d72a6764abfc61f6d934d2eb55a9c0131e"}, "downloads": -1, "filename": "falguard-0.3.tar.gz", "has_sig": false, "md5_digest": "e06e5b5a1fab49e7394012dee5cb50ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2019-02-17T21:13:29", "upload_time_iso_8601": "2019-02-17T21:13:29.203518Z", "url": "https://files.pythonhosted.org/packages/7d/25/b15631651c4b356b30d0f8073c5a680a6f6faebdd4da855396c0ce458656/falguard-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c925467f7e1523409e6ddaa1d7c5679b", "sha256": "c00b5752bbf6cc650f77f9035a49af4297b3faca3d2cb2b89e2716fb933c0f9a"}, "downloads": -1, "filename": "falguard-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c925467f7e1523409e6ddaa1d7c5679b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4029, "upload_time": "2019-11-30T23:29:44", "upload_time_iso_8601": "2019-11-30T23:29:44.938500Z", "url": "https://files.pythonhosted.org/packages/f5/5e/a743739a5761e6b774dbe86c22ed83bd634796df2962ca25936140722bd1/falguard-0.4-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c925467f7e1523409e6ddaa1d7c5679b", "sha256": "c00b5752bbf6cc650f77f9035a49af4297b3faca3d2cb2b89e2716fb933c0f9a"}, "downloads": -1, "filename": "falguard-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c925467f7e1523409e6ddaa1d7c5679b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4029, "upload_time": "2019-11-30T23:29:44", "upload_time_iso_8601": "2019-11-30T23:29:44.938500Z", "url": "https://files.pythonhosted.org/packages/f5/5e/a743739a5761e6b774dbe86c22ed83bd634796df2962ca25936140722bd1/falguard-0.4-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}