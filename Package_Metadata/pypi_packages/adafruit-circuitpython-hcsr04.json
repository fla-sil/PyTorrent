{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-hcsr04/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/hcsr04/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/actions\n    :alt: Build Status\n\n.. image:: ../docs/_static/3942-02.jpg\n    :alt: HC-SR04 Product Image\n\nThe HC-SR04 is an inexpensive solution for measuring distances using microcontrollers. This library provides a simple\ndriver for controlling these sensors from CircuitPython.\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://github.com/adafruit/Adafruit_CircuitPython_Bundle>`_.\n\nInstalling from PyPI\n====================\n\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-hcsr04/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-hcsr04\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-hcsr04\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-hcsr04\n\nUsage Example\n=============\n\n.. warning::\n\n    The HC-SR04 uses 5V logic, so you will have to use a `level shifter\n    <https://www.adafruit.com/product/2653?q=level%20shifter&>`_ between it\n    and your CircuitPython board (which uses 3.3V logic).\n\n.. note::\n\n    If you want to use an HC-SR04 with `MicroPython <http://micropython.org/>`_, I recommend checking out `this library\n    <https://github.com/andrey-git/micropython-hcsr04>`_.\n\nYou'll need to dedicate two pins to communicating with the HC-SR04. The sensor communicates in a very rudimentary\nmanner, so it doesn't matter which pins you choose, as long as they're digital IO pins (pins that start with \"``D``\"\nare digital).\n\nThere are two ways of instantiating a `HCSR04` object: with or without using a context manager.\n\n.. note::\n\n    It is technically possible to communicate with the HC-SR04 using only one wire since the trigger and echo signals\n    aren't ever active at the same time. Once I have a chance to determine a safe way to do this, I plan to add this as\n    a feature to the library.\n\nSee Also:\n\n    `Adafruit's guide on Lifetime and ContextManagers <https://circuitpython.readthedocs.io/en/latest/docs/design_guide.html#lifetime-and-contextmanagers>`_\n        Gives more info on using context managers with CircuitPython drivers.\n\n    `board <https://circuitpython.readthedocs.io/en/latest/shared-bindings/board/__init__.html#module-board>`_\n        A list of pins available on your device. To view this list, first `get a REPL\n        <http://circuitpython.readthedocs.io/en/latest/docs/pyboard/tutorial/repl.html>`_ (the guide linked was written\n        for the pyboard, but it still works), then input the following:\n\n        ::\n\n            import board\n            dir(board)\n\nWithout a Context Manager\n-------------------------\n\nIn the example below, we create the `HCSR04` object directly, get the distance every 2 seconds, then\nde-initialize the device.\n\n::\n\n    from adafruit_hcsr04 import HCSR04\n    sonar = HCSR04(trig, echo)\n    try:\n        while True:\n            print(sonar.dist_cm())\n            sleep(2)\n    except KeyboardInterrupt:\n        pass\n    sonar.deinit()\n\n\nWith a Context Manager\n----------------------\n\nIn the example below, we use a context manager (the `with <https://docs.python.org/3.4/reference/compound_stmts.html#with>`_ statement) to create the `HCSR04`\ninstance, again get the distance every 2 seconds, but then the context manager handles de-initializing the device for\nus.\n\n::\n\n    from adafruit_hcsr04 import HCSR04\n    with HCSR04(trig, echo) as sonar:\n        try:\n            while True:\n                print(sonar.dist_cm())\n                sleep(2)\n        except KeyboardInterrupt:\n            pass\n\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_HCSR04", "keywords": "adafruit hcsr04 hardware micropython circuitpython ultrasonic", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-hcsr04", "package_url": "https://pypi.org/project/adafruit-circuitpython-hcsr04/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-hcsr04/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_HCSR04"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-hcsr04/0.4.1/", "requires_dist": null, "requires_python": "", "summary": "CircuitPython library for controlling HC-SR04 ultrasonic range sensors.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/hcsr04/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b6db0bfd9e087a206f47ae238273f46e06d51bc0/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d6863737230342f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f97863a8731ab61894f7535283a5094ff130da14/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f4843535230342f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<img alt=\"HC-SR04 Product Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b4ece97e76dea65dbdcba94c104b52925030bca5/2e2e2f646f63732f5f7374617469632f333934322d30322e6a7067\">\n<p>The HC-SR04 is an inexpensive solution for measuring distances using microcontrollers. This library provides a simple\ndriver for controlling these sensors from CircuitPython.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_Bundle\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-hcsr04/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-hcsr04\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-hcsr04\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-hcsr04\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<div>\n<p>Warning</p>\n<p>The HC-SR04 uses 5V logic, so you will have to use a <a href=\"https://www.adafruit.com/product/2653?q=level%20shifter&amp;\" rel=\"nofollow\">level shifter</a> between it\nand your CircuitPython board (which uses 3.3V logic).</p>\n</div>\n<div>\n<p>Note</p>\n<p>If you want to use an HC-SR04 with <a href=\"http://micropython.org/\" rel=\"nofollow\">MicroPython</a>, I recommend checking out <a href=\"https://github.com/andrey-git/micropython-hcsr04\" rel=\"nofollow\">this library</a>.</p>\n</div>\n<p>You\u2019ll need to dedicate two pins to communicating with the HC-SR04. The sensor communicates in a very rudimentary\nmanner, so it doesn\u2019t matter which pins you choose, as long as they\u2019re digital IO pins (pins that start with \u201c<tt>D</tt>\u201d\nare digital).</p>\n<p>There are two ways of instantiating a <cite>HCSR04</cite> object: with or without using a context manager.</p>\n<div>\n<p>Note</p>\n<p>It is technically possible to communicate with the HC-SR04 using only one wire since the trigger and echo signals\naren\u2019t ever active at the same time. Once I have a chance to determine a safe way to do this, I plan to add this as\na feature to the library.</p>\n</div>\n<p>See Also:</p>\n<blockquote>\n<dl>\n<dt><a href=\"https://circuitpython.readthedocs.io/en/latest/docs/design_guide.html#lifetime-and-contextmanagers\" rel=\"nofollow\">Adafruit\u2019s guide on Lifetime and ContextManagers</a></dt>\n<dd>Gives more info on using context managers with CircuitPython drivers.</dd>\n<dt><a href=\"https://circuitpython.readthedocs.io/en/latest/shared-bindings/board/__init__.html#module-board\" rel=\"nofollow\">board</a></dt>\n<dd><p>A list of pins available on your device. To view this list, first <a href=\"http://circuitpython.readthedocs.io/en/latest/docs/pyboard/tutorial/repl.html\" rel=\"nofollow\">get a REPL</a> (the guide linked was written\nfor the pyboard, but it still works), then input the following:</p>\n<pre>import board\ndir(board)\n</pre>\n</dd>\n</dl>\n</blockquote>\n<div id=\"without-a-context-manager\">\n<h3>Without a Context Manager</h3>\n<p>In the example below, we create the <cite>HCSR04</cite> object directly, get the distance every 2 seconds, then\nde-initialize the device.</p>\n<pre>from adafruit_hcsr04 import HCSR04\nsonar = HCSR04(trig, echo)\ntry:\n    while True:\n        print(sonar.dist_cm())\n        sleep(2)\nexcept KeyboardInterrupt:\n    pass\nsonar.deinit()\n</pre>\n</div>\n<div id=\"with-a-context-manager\">\n<h3>With a Context Manager</h3>\n<p>In the example below, we use a context manager (the <a href=\"https://docs.python.org/3.4/reference/compound_stmts.html#with\" rel=\"nofollow\">with</a> statement) to create the <cite>HCSR04</cite>\ninstance, again get the distance every 2 seconds, but then the context manager handles de-initializing the device for\nus.</p>\n<pre>from adafruit_hcsr04 import HCSR04\nwith HCSR04(trig, echo) as sonar:\n    try:\n        while True:\n            print(sonar.dist_cm())\n            sleep(2)\n    except KeyboardInterrupt:\n        pass\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_HCSR04/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6995582, "releases": {"0.3.3": [{"comment_text": "", "digests": {"md5": "2a423d7c61da2fe99ae0c369fa26689d", "sha256": "62c5a2671316def35ceac791c055ae45af8ab200e7ac679d3b786a1e30ec1f55"}, "downloads": -1, "filename": "adafruit-circuitpython-hcsr04-0.3.3.tar.gz", "has_sig": false, "md5_digest": "2a423d7c61da2fe99ae0c369fa26689d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 328067, "upload_time": "2018-10-02T21:48:49", "upload_time_iso_8601": "2018-10-02T21:48:49.206067Z", "url": "https://files.pythonhosted.org/packages/e5/a7/3556c46d179e03663923c1ed18eadaa88f9a64e9dcba14f77d9fa9ef9ac1/adafruit-circuitpython-hcsr04-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "8719c8d7c933f93fcd121a7dad480e0f", "sha256": "8b32db8c065b2a8b55429f5976c7e8c178cfb673deffec8a1f8393cc0bbe30e5"}, "downloads": -1, "filename": "adafruit-circuitpython-hcsr04-0.3.4.tar.gz", "has_sig": false, "md5_digest": "8719c8d7c933f93fcd121a7dad480e0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 325367, "upload_time": "2019-01-15T00:22:04", "upload_time_iso_8601": "2019-01-15T00:22:04.189615Z", "url": "https://files.pythonhosted.org/packages/49/9f/c4b141709a9352cfffd83f0d6b76945bfe06be387a1bae23e8f6f43525aa/adafruit-circuitpython-hcsr04-0.3.4.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "555efd30d5018d51e102c073a5dadabe", "sha256": "03e1df204c5aa6fbf26356abe6780d6dc80d796fb7bd2a0c0f0ead39f2175706"}, "downloads": -1, "filename": "adafruit-circuitpython-hcsr04-0.3.6.tar.gz", "has_sig": false, "md5_digest": "555efd30d5018d51e102c073a5dadabe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 277066, "upload_time": "2020-01-26T18:09:13", "upload_time_iso_8601": "2020-01-26T18:09:13.474574Z", "url": "https://files.pythonhosted.org/packages/1d/5d/5187a1a75ec9ff9188622ead5cb308bf82ac889a515438be9fa6748f6457/adafruit-circuitpython-hcsr04-0.3.6.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "7066bf485a629d4b61dede5633dcf41f", "sha256": "d99d755dac750f9d414a9e93c25c6fbfb8e56cc8ffa8e621d70db6d6584d0699"}, "downloads": -1, "filename": "adafruit-circuitpython-hcsr04-0.4.0.tar.gz", "has_sig": false, "md5_digest": "7066bf485a629d4b61dede5633dcf41f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 277232, "upload_time": "2020-03-23T20:58:36", "upload_time_iso_8601": "2020-03-23T20:58:36.639669Z", "url": "https://files.pythonhosted.org/packages/dd/46/2b9963620213d6096e96d50af21cabeb73ad94200a4a6e1a9b53fd54b959/adafruit-circuitpython-hcsr04-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6796459a9751473acbb22b2a6da9c4ba", "sha256": "83c4bab6da53b6cadbebceb9d01bc754b13dd1644c909706c0ffb366a0eb11a9"}, "downloads": -1, "filename": "adafruit-circuitpython-hcsr04-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6796459a9751473acbb22b2a6da9c4ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 277250, "upload_time": "2020-04-10T18:28:13", "upload_time_iso_8601": "2020-04-10T18:28:13.203980Z", "url": "https://files.pythonhosted.org/packages/12/52/d72dbbb21c9d54c218faae24a01ca747f2d441fe855dfa43fc851ab0c9f9/adafruit-circuitpython-hcsr04-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6796459a9751473acbb22b2a6da9c4ba", "sha256": "83c4bab6da53b6cadbebceb9d01bc754b13dd1644c909706c0ffb366a0eb11a9"}, "downloads": -1, "filename": "adafruit-circuitpython-hcsr04-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6796459a9751473acbb22b2a6da9c4ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 277250, "upload_time": "2020-04-10T18:28:13", "upload_time_iso_8601": "2020-04-10T18:28:13.203980Z", "url": "https://files.pythonhosted.org/packages/12/52/d72dbbb21c9d54c218faae24a01ca747f2d441fe855dfa43fc851ab0c9f9/adafruit-circuitpython-hcsr04-0.4.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:02 2020"}