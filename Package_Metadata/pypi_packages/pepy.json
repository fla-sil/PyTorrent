{"info": {"author": "Wesley Shields", "author_email": "wxs@atarininja.org", "bugtrack_url": null, "classifiers": [], "description": "pepy\n====\npepy (pronounced p-pie) is a python binding to the pe-parse parser.\n\npepy supports Python versions 3.6 and above.\n\nThe easiest way to use pepy is to install it via pip:\n\n```bash\n$ pip3 install pepy\n```\n\n## Building\n\nIf you can build pe-parse and have a working python environment (headers and\nlibraries) you can build pepy.\n\n1. Build pepy:\n  * `python3 setup.py build`\n2. Install pepy:\n  * `python3 setup.py install`\n\n**Building on Windows:** Python 3.x is typically installed as _python.exe_,\n**NOT** _python3.exe_.\n\n## Using\n\n### Parsed object\n\nThere are a number of objects involved in pepy. The main one is the **parsed**\nobject. This object is returned by the *parse* method.\n\n```python\nimport pepy\np = pepy.parse(\"/path/to/exe\")\n```\n\nThe **parsed** object has a number of methods:\n\n* `get_entry_point`: Return the entry point address\n* `get_machine_as_str`: Return the machine as a human readable string\n* `get_subsystem_as_str`: Return the subsystem as a human readable string\n* `get_bytes`: Return the first N bytes at a given address\n* `get_sections`: Return a list of section objects\n* `get_imports`: Return a list of import objects\n* `get_exports`: Return a list of export objects\n* `get_relocations`: Return a list of relocation objects\n* `get_resources`: Return a list of resource objects\n\nThe **parsed** object has a number of attributes:\n\n* `signature`\n* `machine`\n* `numberofsections`\n* `timedatestamp`\n* `numberofsymbols`\n* `characteristics`\n* `magic`\n* `majorlinkerver`\n* `minorlinkerver`\n* `codesize`\n* `initdatasize`\n* `uninitdatasize`\n* `entrypointaddr`\n* `baseofcode`\n* `baseofdata`\n* `imagebase`\n* `sectionalignement`\n* `filealignment`\n* `majorosver`\n* `minorosver`\n* `win32ver`\n* `imagesize`\n* `headersize`\n* `checksum`\n* `subsystem`\n* `dllcharacteristics`\n* `stackreservesize`\n* `stackcommitsize`\n* `heapreservesize`\n* `heapcommitsize`\n* `loaderflags`\n* `rvasandsize`\n\nExample:\n\n```python\nimport time\nimport pepy\n\np = pepy.parse(\"/path/to/exe\")\nprint(\"Timedatestamp: %s\" % time.strftime(\"%Y-%m-%d %H:%M:%S\", time.localtime(p.timedatestamp)))\nep = p.get_entry_point()\nprint(\"Entry point: 0x%x\" % ep)\n```\n\nThe `get_sections`, `get_imports`, `get_exports`, `get_relocations` and\n`get_resources` methods each return a list of objects. The type of object\ndepends upon the method called. `get_sections` returns a list of `section`\nobjects, `get_imports` returns a list of `import` objects, etc.\n\n### Section Object\n\nThe `section` object has the following attributes:\n\n* `base`\n* `length`\n* `virtaddr`\n* `virtsize`\n* `numrelocs`\n* `numlinenums`\n* `characteristics`\n* `data`\n\n### Import Object\n\nThe `import` object has the following attributes:\n\n* `sym`\n* `name`\n* `addr`\n\n### Export Object\n\nThe `export` object has the following attributes:\n\n* `mod`\n* `func`\n* `addr`\n\n### Relocation Object\n\nThe `relocation` object has the following attributes:\n\n* `type`\n* `addr`\n\n### Resource Object\n\nThe `resource` object has the following attributes:\n\n* `type_str`\n* `name_str`\n* `lang_str`\n* `type`\n* `name`\n* `lang`\n* `codepage`\n* `RVA`\n* `size`\n* `data`\n\nThe `resource` object has the following methods:\n\n* `type_as_str`\n\nResources are stored in a directory structure. The first three levels of the\nare called `type`, `name` and `lang`. Each of these levels can have\neither a pre-defined value or a custom string. The pre-defined values are\nstored in the `type`, `name` and `lang` attributes. If a custom string is\nfound it will be stored in the `type_str`, `name_str` and `lang_str`\nattributes. The `type_as_str` method can be used to convert a pre-defined\ntype value to a string representation.\n\nThe following code shows how to iterate through resources:\n\n```python\nimport pepy\n\nfrom hashlib import md5\nimport sys\n\np = pepy.parse(sys.argv[1])\nresources = p.get_resources()\nprint(\"Resources: (%i)\" % len(resources))\nfor resource in resources:\n    print(\"[+] MD5: (%i) %s\" % (len(resource.data), md5(resource.data).hexdigest()))\n    if resource.type_str:\n        print(\"\\tType string: %s\" % resource.type_str)\n    else:\n        print(\"\\tType: %s (%s)\" % (hex(resource.type), resource.type_as_str()))\n    if resource.name_str:\n        print(\"\\tName string: %s\" % resource.name_str)\n    else:\n        print(\"\\tName: %s\" % hex(resource.name))\n    if resource.lang_str:\n        print(\"\\tLang string: %s\" % resource.lang_str)\n    else:\n        print(\"\\tLang: %s\" % hex(resource.lang))\n    print(\"\\tCodepage: %s\" % hex(resource.codepage))\n    print(\"\\tRVA: %s\" % hex(resource.RVA))\n    print(\"\\tSize: %s\" % hex(resource.size))\n```\n\nNote that some binaries (particularly packed) may have corrupt resource entries.\nIn these cases you may find that `len(resource.data)` is 0 but `resource.size` is\ngreater than 0. The `size` attribute is the size of the data as declared by the\nresource data entry.\n\n## Authors\n\npe-parse was designed and implemented by Andrew Ruef (andrew@trailofbits.com).\n\npepy was written by Wesley Shields (wxs@atarininja.org).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/trailofbits/pe-parse", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pepy", "package_url": "https://pypi.org/project/pepy/", "platform": "", "project_url": "https://pypi.org/project/pepy/", "project_urls": {"Homepage": "https://github.com/trailofbits/pe-parse"}, "release_url": "https://pypi.org/project/pepy/1.2.0/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "Python bindings for pe-parse", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pepy</h1>\n<p>pepy (pronounced p-pie) is a python binding to the pe-parse parser.</p>\n<p>pepy supports Python versions 3.6 and above.</p>\n<p>The easiest way to use pepy is to install it via pip:</p>\n<pre>$ pip3 install pepy\n</pre>\n<h2>Building</h2>\n<p>If you can build pe-parse and have a working python environment (headers and\nlibraries) you can build pepy.</p>\n<ol>\n<li>Build pepy:</li>\n</ol>\n<ul>\n<li><code>python3 setup.py build</code></li>\n</ul>\n<ol>\n<li>Install pepy:</li>\n</ol>\n<ul>\n<li><code>python3 setup.py install</code></li>\n</ul>\n<p><strong>Building on Windows:</strong> Python 3.x is typically installed as <em>python.exe</em>,\n<strong>NOT</strong> <em>python3.exe</em>.</p>\n<h2>Using</h2>\n<h3>Parsed object</h3>\n<p>There are a number of objects involved in pepy. The main one is the <strong>parsed</strong>\nobject. This object is returned by the <em>parse</em> method.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pepy</span>\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">pepy</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/exe\"</span><span class=\"p\">)</span>\n</pre>\n<p>The <strong>parsed</strong> object has a number of methods:</p>\n<ul>\n<li><code>get_entry_point</code>: Return the entry point address</li>\n<li><code>get_machine_as_str</code>: Return the machine as a human readable string</li>\n<li><code>get_subsystem_as_str</code>: Return the subsystem as a human readable string</li>\n<li><code>get_bytes</code>: Return the first N bytes at a given address</li>\n<li><code>get_sections</code>: Return a list of section objects</li>\n<li><code>get_imports</code>: Return a list of import objects</li>\n<li><code>get_exports</code>: Return a list of export objects</li>\n<li><code>get_relocations</code>: Return a list of relocation objects</li>\n<li><code>get_resources</code>: Return a list of resource objects</li>\n</ul>\n<p>The <strong>parsed</strong> object has a number of attributes:</p>\n<ul>\n<li><code>signature</code></li>\n<li><code>machine</code></li>\n<li><code>numberofsections</code></li>\n<li><code>timedatestamp</code></li>\n<li><code>numberofsymbols</code></li>\n<li><code>characteristics</code></li>\n<li><code>magic</code></li>\n<li><code>majorlinkerver</code></li>\n<li><code>minorlinkerver</code></li>\n<li><code>codesize</code></li>\n<li><code>initdatasize</code></li>\n<li><code>uninitdatasize</code></li>\n<li><code>entrypointaddr</code></li>\n<li><code>baseofcode</code></li>\n<li><code>baseofdata</code></li>\n<li><code>imagebase</code></li>\n<li><code>sectionalignement</code></li>\n<li><code>filealignment</code></li>\n<li><code>majorosver</code></li>\n<li><code>minorosver</code></li>\n<li><code>win32ver</code></li>\n<li><code>imagesize</code></li>\n<li><code>headersize</code></li>\n<li><code>checksum</code></li>\n<li><code>subsystem</code></li>\n<li><code>dllcharacteristics</code></li>\n<li><code>stackreservesize</code></li>\n<li><code>stackcommitsize</code></li>\n<li><code>heapreservesize</code></li>\n<li><code>heapcommitsize</code></li>\n<li><code>loaderflags</code></li>\n<li><code>rvasandsize</code></li>\n</ul>\n<p>Example:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pepy</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">pepy</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/exe\"</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Timedatestamp: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s2\">\"%Y-%m-</span><span class=\"si\">%d</span><span class=\"s2\"> %H:%M:%S\"</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">localtime</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">timedatestamp</span><span class=\"p\">)))</span>\n<span class=\"n\">ep</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get_entry_point</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Entry point: 0x</span><span class=\"si\">%x</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">ep</span><span class=\"p\">)</span>\n</pre>\n<p>The <code>get_sections</code>, <code>get_imports</code>, <code>get_exports</code>, <code>get_relocations</code> and\n<code>get_resources</code> methods each return a list of objects. The type of object\ndepends upon the method called. <code>get_sections</code> returns a list of <code>section</code>\nobjects, <code>get_imports</code> returns a list of <code>import</code> objects, etc.</p>\n<h3>Section Object</h3>\n<p>The <code>section</code> object has the following attributes:</p>\n<ul>\n<li><code>base</code></li>\n<li><code>length</code></li>\n<li><code>virtaddr</code></li>\n<li><code>virtsize</code></li>\n<li><code>numrelocs</code></li>\n<li><code>numlinenums</code></li>\n<li><code>characteristics</code></li>\n<li><code>data</code></li>\n</ul>\n<h3>Import Object</h3>\n<p>The <code>import</code> object has the following attributes:</p>\n<ul>\n<li><code>sym</code></li>\n<li><code>name</code></li>\n<li><code>addr</code></li>\n</ul>\n<h3>Export Object</h3>\n<p>The <code>export</code> object has the following attributes:</p>\n<ul>\n<li><code>mod</code></li>\n<li><code>func</code></li>\n<li><code>addr</code></li>\n</ul>\n<h3>Relocation Object</h3>\n<p>The <code>relocation</code> object has the following attributes:</p>\n<ul>\n<li><code>type</code></li>\n<li><code>addr</code></li>\n</ul>\n<h3>Resource Object</h3>\n<p>The <code>resource</code> object has the following attributes:</p>\n<ul>\n<li><code>type_str</code></li>\n<li><code>name_str</code></li>\n<li><code>lang_str</code></li>\n<li><code>type</code></li>\n<li><code>name</code></li>\n<li><code>lang</code></li>\n<li><code>codepage</code></li>\n<li><code>RVA</code></li>\n<li><code>size</code></li>\n<li><code>data</code></li>\n</ul>\n<p>The <code>resource</code> object has the following methods:</p>\n<ul>\n<li><code>type_as_str</code></li>\n</ul>\n<p>Resources are stored in a directory structure. The first three levels of the\nare called <code>type</code>, <code>name</code> and <code>lang</code>. Each of these levels can have\neither a pre-defined value or a custom string. The pre-defined values are\nstored in the <code>type</code>, <code>name</code> and <code>lang</code> attributes. If a custom string is\nfound it will be stored in the <code>type_str</code>, <code>name_str</code> and <code>lang_str</code>\nattributes. The <code>type_as_str</code> method can be used to convert a pre-defined\ntype value to a string representation.</p>\n<p>The following code shows how to iterate through resources:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pepy</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">hashlib</span> <span class=\"kn\">import</span> <span class=\"n\">md5</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n\n<span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">pepy</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">resources</span> <span class=\"o\">=</span> <span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">get_resources</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Resources: (</span><span class=\"si\">%i</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">resources</span><span class=\"p\">))</span>\n<span class=\"k\">for</span> <span class=\"n\">resource</span> <span class=\"ow\">in</span> <span class=\"n\">resources</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"[+] MD5: (</span><span class=\"si\">%i</span><span class=\"s2\">) </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">),</span> <span class=\"n\">md5</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()))</span>\n    <span class=\"k\">if</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">type_str</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Type string: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">type_str</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Type: </span><span class=\"si\">%s</span><span class=\"s2\"> (</span><span class=\"si\">%s</span><span class=\"s2\">)\"</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">type</span><span class=\"p\">),</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">type_as_str</span><span class=\"p\">()))</span>\n    <span class=\"k\">if</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">name_str</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Name string: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">name_str</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Name: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n    <span class=\"k\">if</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">lang_str</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Lang string: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">lang_str</span><span class=\"p\">)</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Lang: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">lang</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Codepage: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">codepage</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">RVA: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">RVA</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"</span><span class=\"se\">\\t</span><span class=\"s2\">Size: </span><span class=\"si\">%s</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"nb\">hex</span><span class=\"p\">(</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">))</span>\n</pre>\n<p>Note that some binaries (particularly packed) may have corrupt resource entries.\nIn these cases you may find that <code>len(resource.data)</code> is 0 but <code>resource.size</code> is\ngreater than 0. The <code>size</code> attribute is the size of the data as declared by the\nresource data entry.</p>\n<h2>Authors</h2>\n<p>pe-parse was designed and implemented by Andrew Ruef (<a href=\"mailto:andrew@trailofbits.com\">andrew@trailofbits.com</a>).</p>\n<p>pepy was written by Wesley Shields (<a href=\"mailto:wxs@atarininja.org\">wxs@atarininja.org</a>).</p>\n\n          </div>"}, "last_serial": 7094831, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "4f945abe57e27df4fce637ee6c96f171", "sha256": "a731b3e272c90122d12598ebffb6d3d57ec655d0ee32b366b7d060101de1343f"}, "downloads": -1, "filename": "pepy-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4f945abe57e27df4fce637ee6c96f171", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43347, "upload_time": "2020-03-17T17:41:08", "upload_time_iso_8601": "2020-03-17T17:41:08.458594Z", "url": "https://files.pythonhosted.org/packages/df/75/856c36729c541c8f9896c80292c67c84cfbc29e2889045b25dc5623662de/pepy-1.0.0.tar.gz", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "078a2793b1349342345700ff747764ae", "sha256": "67736757345c4dad74725c520986f82c55a7404ad1b35435474a16111d68b270"}, "downloads": -1, "filename": "pepy-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "078a2793b1349342345700ff747764ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42202, "upload_time": "2020-03-16T21:12:53", "upload_time_iso_8601": "2020-03-16T21:12:53.849237Z", "url": "https://files.pythonhosted.org/packages/48/99/fa422e3fb74e6c7a9d735222aa6fceb717c8cd528468aeae13cd22a1d40b/pepy-1.0.0rc2.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "7e9c9d8706ae9103614f7ce88b1e15af", "sha256": "6c1eefb32c3cdf809f2de66940ee5e6fbac841028c439dca81b97fad702df155"}, "downloads": -1, "filename": "pepy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7e9c9d8706ae9103614f7ce88b1e15af", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43412, "upload_time": "2020-03-18T15:49:29", "upload_time_iso_8601": "2020-03-18T15:49:29.933644Z", "url": "https://files.pythonhosted.org/packages/8a/38/24599241053e04dfe3a5e02cb3c81fd7b17ceedc1d779450792070b2f0c3/pepy-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "eb7d0dd245afc7c5d695580c9bbab87c", "sha256": "6bdaac664399bf1f97644d5d19d6ce46b95028f0bc3d5181ead60705cd0445b4"}, "downloads": -1, "filename": "pepy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "eb7d0dd245afc7c5d695580c9bbab87c", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43400, "upload_time": "2020-03-26T14:12:53", "upload_time_iso_8601": "2020-03-26T14:12:53.633371Z", "url": "https://files.pythonhosted.org/packages/fa/a6/9b43614b1218e89d4ce8de062b77991b490b9c78d24e7c3f4e67a40ab6d4/pepy-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "4e36c9f4e535756dd212dc04de720755", "sha256": "a88690a8238a1c2f9e3de124a7981ee89c1e9f784303cd2ad8c754bb274d7a0f"}, "downloads": -1, "filename": "pepy-1.1.0.tar.gz", "has_sig": false, "md5_digest": "4e36c9f4e535756dd212dc04de720755", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43852, "upload_time": "2020-04-20T19:10:39", "upload_time_iso_8601": "2020-04-20T19:10:39.024100Z", "url": "https://files.pythonhosted.org/packages/de/59/40d10cd901cc647e8de3a743b09f54ecf2e07452cc307af19c4f510458ba/pepy-1.1.0.tar.gz", "yanked": false}], "1.1.0rc1": [{"comment_text": "", "digests": {"md5": "575019dc8b328a6ea8d8bc0277eb1142", "sha256": "d4b80dc407ef6fa56ff7a56925987757b43f152347aff1f3619368341f001e97"}, "downloads": -1, "filename": "pepy-1.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "575019dc8b328a6ea8d8bc0277eb1142", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43851, "upload_time": "2020-04-20T18:50:50", "upload_time_iso_8601": "2020-04-20T18:50:50.681629Z", "url": "https://files.pythonhosted.org/packages/f5/79/67e170de32d3846bb2253e99b410c3d2abc37f61d755d70ec744082c6d34/pepy-1.1.0rc1.tar.gz", "yanked": false}], "1.1.0rc2": [{"comment_text": "", "digests": {"md5": "da40ca3f08a3427bf3506bc00843fbb8", "sha256": "9e73a654f1e1d695d8cc6573959c9f4a27f630b32e0a18f8752dd6f0a4973133"}, "downloads": -1, "filename": "pepy-1.1.0rc2.tar.gz", "has_sig": false, "md5_digest": "da40ca3f08a3427bf3506bc00843fbb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43857, "upload_time": "2020-04-20T18:58:44", "upload_time_iso_8601": "2020-04-20T18:58:44.106787Z", "url": "https://files.pythonhosted.org/packages/34/05/0eafc66aeac649ba3a56076d68d48673c44ee2ee7d63029038813e22d9c1/pepy-1.1.0rc2.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "11540feb070d9857f027b09e8affc391", "sha256": "e759bce87e7f7fdfcf18559bd5e55e6f1b4de03383382dbe6877d9923f2ee5aa"}, "downloads": -1, "filename": "pepy-1.2.0.tar.gz", "has_sig": false, "md5_digest": "11540feb070d9857f027b09e8affc391", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43062, "upload_time": "2020-04-24T17:50:42", "upload_time_iso_8601": "2020-04-24T17:50:42.795823Z", "url": "https://files.pythonhosted.org/packages/a4/68/3807d58a93d856b49c5e2858d18ae257397ed45d2faa83640d881089b69c/pepy-1.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11540feb070d9857f027b09e8affc391", "sha256": "e759bce87e7f7fdfcf18559bd5e55e6f1b4de03383382dbe6877d9923f2ee5aa"}, "downloads": -1, "filename": "pepy-1.2.0.tar.gz", "has_sig": false, "md5_digest": "11540feb070d9857f027b09e8affc391", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 43062, "upload_time": "2020-04-24T17:50:42", "upload_time_iso_8601": "2020-04-24T17:50:42.795823Z", "url": "https://files.pythonhosted.org/packages/a4/68/3807d58a93d856b49c5e2858d18ae257397ed45d2faa83640d881089b69c/pepy-1.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:23 2020"}