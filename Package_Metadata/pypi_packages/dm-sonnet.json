{"info": {"author": "DeepMind", "author_email": "sonnet-dev-os@google.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "![Sonnet](https://sonnet.dev/images/sonnet_logo.png)\n\n# Sonnet\n\n[**Documentation**](https://sonnet.readthedocs.io/) | [**Examples**](#examples)\n\n:warning: Sonnet 2 is currently **beta**. We would love to have you use it as\nan early adopter and please let us know if things aren't working as you would\nexpect.\n\nSonnet is a library built on top of [TensorFlow 2](https://www.tensorflow.org/)\ndesigned to provide simple, composable abstractions for machine learning\nresearch.\n\n# Introduction\n\nSonnet has been designed and built by researchers at DeepMind. It can be used to\nconstruct neural networks for many different purposes (un/supervised learning,\nreinforcement learning, ...). We find it is a successful abstraction for our\norganization, you might too!\n\nMore specifically, Sonnet provides a simple but powerful programming model\ncentered around a single concept: `snt.Module`. Modules can hold references to\nparameters, other modules and methods that apply some function on the user\ninput. Sonnet ships with many predefined modules (e.g. `snt.Linear`,\n`snt.Conv2D`, `snt.BatchNorm`) and some predefined networks of modules (e.g.\n`snt.nets.MLP`) but users are also encouraged to build their own modules.\n\nUnlike many frameworks Sonnet is extremely unopinionated about **how** you will\nuse your modules. Modules are designed to be self contained and entirely\ndecoupled from one another. Sonnet does not ship with a training framework and\nusers are encouraged to build their own or adopt those built by others.\n\nSonnet is also designed to be simple to understand, our code is (hopefully!)\nclear and focussed. Where we have picked defaults (e.g. defaults for initial\nparameter values) we try to point out why.\n\n# Getting Started\n\n## Examples\n\nThe easiest way to try Sonnet is to use Google Colab which offers a free Python\nnotebook attached to a GPU or TPU.\n\n- [Predicting MNIST with an MLP](https://colab.research.google.com/github/deepmind/sonnet/blob/v2/examples/mlp_on_mnist.ipynb)\n- [Training a Little GAN on MNIST](https://colab.research.google.com/github/deepmind/sonnet/blob/v2/examples/little_gan_on_mnist.ipynb)\n- [Distributed training with `snt.distribute`](https://colab.research.google.com/github/deepmind/sonnet/blob/v2/examples/distributed_cifar10.ipynb)\n\n## Installation\n\nTo get started install TensorFlow 2.0 and Sonnet 2:\n\n```shell\n$ pip install tensorflow-gpu tensorflow-probability\n$ pip install dm-sonnet\n```\n\nYou can run the following to verify things installed correctly:\n\n```python\nimport tensorflow as tf\nimport sonnet as snt\n\n# tf.enable_v2_behavior()\n\nprint(\"TensorFlow version {}\".format(tf.__version__))\nprint(\"Sonnet version {}\".format(snt.__version__))\n```\n\n### Using existing modules\n\nSonnet ships with a number of built in modules that you can trivially use. For\nexample to define an MLP we can use the `snt.Sequential` module to call a\nsequence of modules, passing the output of a given module as the input for the\nnext module. We can use `snt.Linear` and `tf.nn.relu` to actually define our\ncomputation:\n\n```python\nmlp = snt.Sequential([\n    snt.Linear(1024),\n    tf.nn.relu,\n    snt.Linear(10),\n])\n```\n\nTo use our module we need to \"call\" it. The `Sequential` module (and most\nmodules) define a `__call__` method that means you can call them by name:\n\n```python\nlogits = mlp(tf.random.normal([batch_size, input_size]))\n```\n\nIt is also very common to request all the parameters for your module. Most\nmodules in Sonnet create their parameters the first time they are called with\nsome input (since in most cases the shape of the parameters is a function of\nthe input). Sonnet modules provide two properties for accessing parameters.\n\nThe `variables` property returns **all** `tf.Variable`s that are referenced by\nthe given module:\n\n```python\nall_variables = mlp.variables\n```\n\nIt is worth noting that `tf.Variable`s are not just used for parameters of your\nmodel. For example they are used to hold state in metrics used in\n`snt.BatchNorm`. In most cases users retrieve the module variables to pass them\nto an optimizer to be updated. In this case non-trainable variables should\ntypically not be in that list as they are updated via a different mechanism.\nTensorFlow has a built in mechanism to mark variables as \"trainable\" (parameters\nof your model) vs. non-trainable (other variables). Sonnet provides a mechanism\nto gather all trainable variables from your module which is probably what you\nwant to pass to an optimizer:\n\n```python\nmodel_parameters = mlp.trainable_variables\n```\n\n### Building your own module\n\nSonnet strongly encourages users to subclass `snt.Module` to define their own\nmodules. Let's start by creating a simple `Linear` layer called `MyLinear`:\n\n```python\nclass MyLinear(snt.Module):\n\n  def __init__(self, output_size, name=None):\n    super(MyLinear, self).__init__(name=name)\n    self.output_size = output_size\n\n  @snt.once\n  def _initialize(self, x):\n    initial_w = tf.random.normal([x.shape[1], self.output_size])\n    self.w = tf.Variable(initial_w, name=\"w\")\n    self.b = tf.Variable(tf.zeros([self.output_size]), name=\"b\")\n\n  def __call__(self, x):\n    self._initialize(x)\n    return tf.matmul(x, self.w) + self.b\n```\n\nUsing this module is trivial:\n\n```python\nmod = MyLinear(32)\nmod(tf.ones([batch_size, input_size]))\n```\n\nBy subclassing `snt.Module` you get many nice properties for free. For example\na default implementation of `__repr__` which shows constructor arguments (very\nuseful for debugging and introspection):\n\n```python\n>>> print(repr(mod))\nMyLinear(output_size=10)\n```\n\nYou also get the `variables` and `trainable_variables` properties:\n\n```python\n>>> mod.variables\n(<tf.Variable 'my_linear/b:0' shape=(10,) ...)>,\n <tf.Variable 'my_linear/w:0' shape=(1, 10) ...)>)\n```\n\nYou may notice the `my_linear` prefix on the variables above. This is because\nSonnet modules also enter the modules name scope whenever methods are called.\nBy entering the module name scope we provide a much more useful graph for tools\nlike TensorBoard to consume (e.g. all operations that occur inside my_linear\nwill be in a group called my_linear).\n\nAdditionally your module will now support TensorFlow checkpointing and saved\nmodel which are advanced features covered later.\n\n# Serialization\n\nSonnet supports multiple serialization formats. The simplest format we support\nis Python's `pickle`, and all built in modules are tested to make sure they can\nbe saved/loaded via pickle in the same Python process. In general we discourage\nthe use of pickle, it is not well supported by many parts of TensorFlow and in\nour experience can be quite brittle.\n\n## TensorFlow Checkpointing\n\n**Reference:** https://www.tensorflow.org/alpha/guide/checkpoints\n\nTensorFlow checkpointing can be used to save the value of parameters\nperiodically during training. This can be useful to save the progress of\ntraining in case your program crashes or is stopped. Sonnet is designed to work\ncleanly with TensorFlow checkpointing:\n\n```python\ncheckpoint_root = \"/tmp/checkpoints\"\ncheckpoint_name = \"example\"\nsave_prefix = os.path.join(checkpoint_root, checkpoint_name)\n\nmy_module = create_my_sonnet_module()  # Can be anything extending snt.Module.\n\n# A `Checkpoint` object manages checkpointing of the TensorFlow state associated\n# with the objects passed to it's constructor. Note that Checkpoint supports\n# restore on create, meaning that the variables of `my_module` do **not** need\n# to be created before you restore from a checkpoint (their value will be\n# restored when they are created).\ncheckpoint = tf.train.Checkpoint(module=my_module)\n\n# Most training scripts will want to restore from a checkpoint if one exists. This\n#\u00a0would be the case if you interrupted your training (e.g. to use your GPU for\n# something else, or in a cloud environment if your instance is preempted).\nlatest = tf.train.latest_checkpoint(checkpoint_root)\nif latest is not None:\n  checkpoint.restore(latest)\n\nfor step_num in range(num_steps):\n  train(my_module)\n\n  # During training we will occasionally save the values of weights. Note that\n  # this is a blocking call and can be slow (typically we are writing to the\n  #\u00a0slowest storage on the machine). If you have a more reliable setup it might be\n  # appropriate to save less frequently.\n  if step_num and not step_num % 1000:\n    checkpoint.save(save_prefix)\n\n# Make sure to save your final values!!\ncheckpoint.save(save_prefix)\n```\n\n## TensorFlow Saved Model\n\n**Reference:** https://www.tensorflow.org/alpha/guide/saved_model\n\nTensorFlow saved models can be used to save a copy of your network that is\ndecoupled from the Python source for it. This is enabled by saving a TensorFlow\ngraph describing the computation and a checkpoint containing the value of\nweights.\n\nThe first thing to do in order to create a saved model is to create a\n`snt.Module` that you want to save:\n\n```python\nmy_module = snt.nets.MLP([1024, 1024, 10])\nmy_module(tf.ones([1, input_size]))\n```\n\nNext, we need to create another module describing the specific parts of our\nmodel that we want to export. We advise doing this (rather than modifying the\noriginal model in-place) so you have fine grained control over what is actually\nexported. This is typically important to avoid creating very large saved models,\nand such that you only share the parts of your model you want to (e.g. you only\nwant to share the generator for a GAN but keep the discriminator private).\n\n```python\n@tf.function(input_signature=[tf.TensorSpec([None, input_size])])\ndef inference(x):\n  return my_module(x)\n\nto_save = snt.Module()\nto_save.inference = inference\nto_save.all_variables = list(my_module.variables)\ntf.saved_model.save(to_save, \"/tmp/example_saved_model\")\n```\n\nWe now have a saved model in the `/tmp/example_saved_model` folder:\n\n```shell\n$ ls -lh /tmp/example_saved_model\ntotal 24K\ndrwxrwsr-t 2 tomhennigan 154432098 4.0K Apr 28 00:14 assets\n-rw-rw-r-- 1 tomhennigan 154432098  14K Apr 28 00:15 saved_model.pb\ndrwxrwsr-t 2 tomhennigan 154432098 4.0K Apr 28 00:15 variables\n```\n\nLoading this model is simple and can be done on a different machine without any\nof the Python code that built the saved model:\n\n```python\nloaded = tf.saved_model.load(\"/tmp/example_saved_model\")\n\n# Use the inference method. Note this doesn't run the Python code from `to_save`\n# but instead uses the TensorFlow Graph that is part of the saved model.\nloaded.inference(tf.ones([1, input_size]))\n\n# The all_variables property can be used to retrieve the restored variables.\nassert len(loaded.all_variables) > 0\n```\n\nNote that the loaded object is not a Sonnet module, it is a container object\nthat has the specific methods (e.g. `inference`) and properties (e.g.\n`all_variables`) that we added in the previous block.\n\n## Distributed training\n\n**Reference:** https://www.tensorflow.org/alpha/guide/distribute_strategy\n\nWe are still working on making Sonnet compatible with distribution strategy.\nCurrently modules that compute forward functions but don't update internal\nstate (e.g. `Conv2D`) work well with `tf.distribute.MirroredStrategy` and\n`tf.distribute.experimental.TPUStrategy`.\n\nIn general our philosophy with Sonnet is not to add special casing inside\nmodules to support libraries. In some cases this is unavoidable since components\nthat update state must do so in a \"distribution aware\" manner (for example\noptimizers, metrics or batch normalization). For these modules we plan on\ncreating new versions in the `snt.distribute` namespace to indicate that these\nmodules are distribution aware.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/deepmind/sonnet", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "dm-sonnet", "package_url": "https://pypi.org/project/dm-sonnet/", "platform": "", "project_url": "https://pypi.org/project/dm-sonnet/", "project_urls": {"Homepage": "https://github.com/deepmind/sonnet"}, "release_url": "https://pypi.org/project/dm-sonnet/2.0.0/", "requires_dist": ["absl-py (>=0.7.1)", "numpy (>=1.16.3)", "six (>=1.12.0)", "dm-tree (>=0.1.1)", "wrapt (>=1.11.1)", "tabulate (>=0.7.5)", "tensorflow (>=2) ; extra == 'tensorflow'", "tensorflow-gpu (>=2) ; extra == 'tensorflow_with_gpu'"], "requires_python": "", "summary": "Sonnet is a library for building neural networks in TensorFlow.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Sonnet\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fe041240468f4043f47fd2b04cb142a915ab291/68747470733a2f2f736f6e6e65742e6465762f696d616765732f736f6e6e65745f6c6f676f2e706e67\"></p>\n<h1>Sonnet</h1>\n<p><a href=\"https://sonnet.readthedocs.io/\" rel=\"nofollow\"><strong>Documentation</strong></a> | <a href=\"#examples\" rel=\"nofollow\"><strong>Examples</strong></a></p>\n<p>:warning: Sonnet 2 is currently <strong>beta</strong>. We would love to have you use it as\nan early adopter and please let us know if things aren't working as you would\nexpect.</p>\n<p>Sonnet is a library built on top of <a href=\"https://www.tensorflow.org/\" rel=\"nofollow\">TensorFlow 2</a>\ndesigned to provide simple, composable abstractions for machine learning\nresearch.</p>\n<h1>Introduction</h1>\n<p>Sonnet has been designed and built by researchers at DeepMind. It can be used to\nconstruct neural networks for many different purposes (un/supervised learning,\nreinforcement learning, ...). We find it is a successful abstraction for our\norganization, you might too!</p>\n<p>More specifically, Sonnet provides a simple but powerful programming model\ncentered around a single concept: <code>snt.Module</code>. Modules can hold references to\nparameters, other modules and methods that apply some function on the user\ninput. Sonnet ships with many predefined modules (e.g. <code>snt.Linear</code>,\n<code>snt.Conv2D</code>, <code>snt.BatchNorm</code>) and some predefined networks of modules (e.g.\n<code>snt.nets.MLP</code>) but users are also encouraged to build their own modules.</p>\n<p>Unlike many frameworks Sonnet is extremely unopinionated about <strong>how</strong> you will\nuse your modules. Modules are designed to be self contained and entirely\ndecoupled from one another. Sonnet does not ship with a training framework and\nusers are encouraged to build their own or adopt those built by others.</p>\n<p>Sonnet is also designed to be simple to understand, our code is (hopefully!)\nclear and focussed. Where we have picked defaults (e.g. defaults for initial\nparameter values) we try to point out why.</p>\n<h1>Getting Started</h1>\n<h2>Examples</h2>\n<p>The easiest way to try Sonnet is to use Google Colab which offers a free Python\nnotebook attached to a GPU or TPU.</p>\n<ul>\n<li><a href=\"https://colab.research.google.com/github/deepmind/sonnet/blob/v2/examples/mlp_on_mnist.ipynb\" rel=\"nofollow\">Predicting MNIST with an MLP</a></li>\n<li><a href=\"https://colab.research.google.com/github/deepmind/sonnet/blob/v2/examples/little_gan_on_mnist.ipynb\" rel=\"nofollow\">Training a Little GAN on MNIST</a></li>\n<li><a href=\"https://colab.research.google.com/github/deepmind/sonnet/blob/v2/examples/distributed_cifar10.ipynb\" rel=\"nofollow\">Distributed training with <code>snt.distribute</code></a></li>\n</ul>\n<h2>Installation</h2>\n<p>To get started install TensorFlow 2.0 and Sonnet 2:</p>\n<pre>$ pip install tensorflow-gpu tensorflow-probability\n$ pip install dm-sonnet\n</pre>\n<p>You can run the following to verify things installed correctly:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tensorflow</span> <span class=\"k\">as</span> <span class=\"nn\">tf</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sonnet</span> <span class=\"k\">as</span> <span class=\"nn\">snt</span>\n\n<span class=\"c1\"># tf.enable_v2_behavior()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"TensorFlow version </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">__version__</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Sonnet version </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">__version__</span><span class=\"p\">))</span>\n</pre>\n<h3>Using existing modules</h3>\n<p>Sonnet ships with a number of built in modules that you can trivially use. For\nexample to define an MLP we can use the <code>snt.Sequential</code> module to call a\nsequence of modules, passing the output of a given module as the input for the\nnext module. We can use <code>snt.Linear</code> and <code>tf.nn.relu</code> to actually define our\ncomputation:</p>\n<pre><span class=\"n\">mlp</span> <span class=\"o\">=</span> <span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">Sequential</span><span class=\"p\">([</span>\n    <span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">),</span>\n    <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">nn</span><span class=\"o\">.</span><span class=\"n\">relu</span><span class=\"p\">,</span>\n    <span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">Linear</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">),</span>\n<span class=\"p\">])</span>\n</pre>\n<p>To use our module we need to \"call\" it. The <code>Sequential</code> module (and most\nmodules) define a <code>__call__</code> method that means you can call them by name:</p>\n<pre><span class=\"n\">logits</span> <span class=\"o\">=</span> <span class=\"n\">mlp</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">([</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">input_size</span><span class=\"p\">]))</span>\n</pre>\n<p>It is also very common to request all the parameters for your module. Most\nmodules in Sonnet create their parameters the first time they are called with\nsome input (since in most cases the shape of the parameters is a function of\nthe input). Sonnet modules provide two properties for accessing parameters.</p>\n<p>The <code>variables</code> property returns <strong>all</strong> <code>tf.Variable</code>s that are referenced by\nthe given module:</p>\n<pre><span class=\"n\">all_variables</span> <span class=\"o\">=</span> <span class=\"n\">mlp</span><span class=\"o\">.</span><span class=\"n\">variables</span>\n</pre>\n<p>It is worth noting that <code>tf.Variable</code>s are not just used for parameters of your\nmodel. For example they are used to hold state in metrics used in\n<code>snt.BatchNorm</code>. In most cases users retrieve the module variables to pass them\nto an optimizer to be updated. In this case non-trainable variables should\ntypically not be in that list as they are updated via a different mechanism.\nTensorFlow has a built in mechanism to mark variables as \"trainable\" (parameters\nof your model) vs. non-trainable (other variables). Sonnet provides a mechanism\nto gather all trainable variables from your module which is probably what you\nwant to pass to an optimizer:</p>\n<pre><span class=\"n\">model_parameters</span> <span class=\"o\">=</span> <span class=\"n\">mlp</span><span class=\"o\">.</span><span class=\"n\">trainable_variables</span>\n</pre>\n<h3>Building your own module</h3>\n<p>Sonnet strongly encourages users to subclass <code>snt.Module</code> to define their own\nmodules. Let's start by creating a simple <code>Linear</code> layer called <code>MyLinear</code>:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyLinear</span><span class=\"p\">(</span><span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">):</span>\n\n  <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">output_size</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">MyLinear</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">name</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_size</span> <span class=\"o\">=</span> <span class=\"n\">output_size</span>\n\n  <span class=\"nd\">@snt</span><span class=\"o\">.</span><span class=\"n\">once</span>\n  <span class=\"k\">def</span> <span class=\"nf\">_initialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"n\">initial_w</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">normal</span><span class=\"p\">([</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">],</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_size</span><span class=\"p\">])</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"n\">initial_w</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"w\"</span><span class=\"p\">)</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">([</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">output_size</span><span class=\"p\">]),</span> <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"b\"</span><span class=\"p\">)</span>\n\n  <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">):</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_initialize</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">matmul</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">w</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">b</span>\n</pre>\n<p>Using this module is trivial:</p>\n<pre><span class=\"n\">mod</span> <span class=\"o\">=</span> <span class=\"n\">MyLinear</span><span class=\"p\">(</span><span class=\"mi\">32</span><span class=\"p\">)</span>\n<span class=\"n\">mod</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">([</span><span class=\"n\">batch_size</span><span class=\"p\">,</span> <span class=\"n\">input_size</span><span class=\"p\">]))</span>\n</pre>\n<p>By subclassing <code>snt.Module</code> you get many nice properties for free. For example\na default implementation of <code>__repr__</code> which shows constructor arguments (very\nuseful for debugging and introspection):</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">repr</span><span class=\"p\">(</span><span class=\"n\">mod</span><span class=\"p\">))</span>\n<span class=\"n\">MyLinear</span><span class=\"p\">(</span><span class=\"n\">output_size</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n<p>You also get the <code>variables</code> and <code>trainable_variables</code> properties:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mod</span><span class=\"o\">.</span><span class=\"n\">variables</span>\n<span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span> <span class=\"s1\">'my_linear/b:0'</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,)</span> <span class=\"o\">...</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n <span class=\"o\">&lt;</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">Variable</span> <span class=\"s1\">'my_linear/w:0'</span> <span class=\"n\">shape</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">...</span><span class=\"p\">)</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n</pre>\n<p>You may notice the <code>my_linear</code> prefix on the variables above. This is because\nSonnet modules also enter the modules name scope whenever methods are called.\nBy entering the module name scope we provide a much more useful graph for tools\nlike TensorBoard to consume (e.g. all operations that occur inside my_linear\nwill be in a group called my_linear).</p>\n<p>Additionally your module will now support TensorFlow checkpointing and saved\nmodel which are advanced features covered later.</p>\n<h1>Serialization</h1>\n<p>Sonnet supports multiple serialization formats. The simplest format we support\nis Python's <code>pickle</code>, and all built in modules are tested to make sure they can\nbe saved/loaded via pickle in the same Python process. In general we discourage\nthe use of pickle, it is not well supported by many parts of TensorFlow and in\nour experience can be quite brittle.</p>\n<h2>TensorFlow Checkpointing</h2>\n<p><strong>Reference:</strong> <a href=\"https://www.tensorflow.org/alpha/guide/checkpoints\" rel=\"nofollow\">https://www.tensorflow.org/alpha/guide/checkpoints</a></p>\n<p>TensorFlow checkpointing can be used to save the value of parameters\nperiodically during training. This can be useful to save the progress of\ntraining in case your program crashes or is stopped. Sonnet is designed to work\ncleanly with TensorFlow checkpointing:</p>\n<pre><span class=\"n\">checkpoint_root</span> <span class=\"o\">=</span> <span class=\"s2\">\"/tmp/checkpoints\"</span>\n<span class=\"n\">checkpoint_name</span> <span class=\"o\">=</span> <span class=\"s2\">\"example\"</span>\n<span class=\"n\">save_prefix</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">checkpoint_root</span><span class=\"p\">,</span> <span class=\"n\">checkpoint_name</span><span class=\"p\">)</span>\n\n<span class=\"n\">my_module</span> <span class=\"o\">=</span> <span class=\"n\">create_my_sonnet_module</span><span class=\"p\">()</span>  <span class=\"c1\"># Can be anything extending snt.Module.</span>\n\n<span class=\"c1\"># A `Checkpoint` object manages checkpointing of the TensorFlow state associated</span>\n<span class=\"c1\"># with the objects passed to it's constructor. Note that Checkpoint supports</span>\n<span class=\"c1\"># restore on create, meaning that the variables of `my_module` do **not** need</span>\n<span class=\"c1\"># to be created before you restore from a checkpoint (their value will be</span>\n<span class=\"c1\"># restored when they are created).</span>\n<span class=\"n\">checkpoint</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">Checkpoint</span><span class=\"p\">(</span><span class=\"n\">module</span><span class=\"o\">=</span><span class=\"n\">my_module</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Most training scripts will want to restore from a checkpoint if one exists. This</span>\n<span class=\"c1\">#\u00a0would be the case if you interrupted your training (e.g. to use your GPU for</span>\n<span class=\"c1\"># something else, or in a cloud environment if your instance is preempted).</span>\n<span class=\"n\">latest</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">train</span><span class=\"o\">.</span><span class=\"n\">latest_checkpoint</span><span class=\"p\">(</span><span class=\"n\">checkpoint_root</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">latest</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n  <span class=\"n\">checkpoint</span><span class=\"o\">.</span><span class=\"n\">restore</span><span class=\"p\">(</span><span class=\"n\">latest</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">step_num</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">num_steps</span><span class=\"p\">):</span>\n  <span class=\"n\">train</span><span class=\"p\">(</span><span class=\"n\">my_module</span><span class=\"p\">)</span>\n\n  <span class=\"c1\"># During training we will occasionally save the values of weights. Note that</span>\n  <span class=\"c1\"># this is a blocking call and can be slow (typically we are writing to the</span>\n  <span class=\"c1\">#\u00a0slowest storage on the machine). If you have a more reliable setup it might be</span>\n  <span class=\"c1\"># appropriate to save less frequently.</span>\n  <span class=\"k\">if</span> <span class=\"n\">step_num</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"n\">step_num</span> <span class=\"o\">%</span> <span class=\"mi\">1000</span><span class=\"p\">:</span>\n    <span class=\"n\">checkpoint</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">save_prefix</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Make sure to save your final values!!</span>\n<span class=\"n\">checkpoint</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">save_prefix</span><span class=\"p\">)</span>\n</pre>\n<h2>TensorFlow Saved Model</h2>\n<p><strong>Reference:</strong> <a href=\"https://www.tensorflow.org/alpha/guide/saved_model\" rel=\"nofollow\">https://www.tensorflow.org/alpha/guide/saved_model</a></p>\n<p>TensorFlow saved models can be used to save a copy of your network that is\ndecoupled from the Python source for it. This is enabled by saving a TensorFlow\ngraph describing the computation and a checkpoint containing the value of\nweights.</p>\n<p>The first thing to do in order to create a saved model is to create a\n<code>snt.Module</code> that you want to save:</p>\n<pre><span class=\"n\">my_module</span> <span class=\"o\">=</span> <span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">nets</span><span class=\"o\">.</span><span class=\"n\">MLP</span><span class=\"p\">([</span><span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">1024</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">])</span>\n<span class=\"n\">my_module</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">input_size</span><span class=\"p\">]))</span>\n</pre>\n<p>Next, we need to create another module describing the specific parts of our\nmodel that we want to export. We advise doing this (rather than modifying the\noriginal model in-place) so you have fine grained control over what is actually\nexported. This is typically important to avoid creating very large saved models,\nand such that you only share the parts of your model you want to (e.g. you only\nwant to share the generator for a GAN but keep the discriminator private).</p>\n<pre><span class=\"nd\">@tf</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span><span class=\"n\">input_signature</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">TensorSpec</span><span class=\"p\">([</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">input_size</span><span class=\"p\">])])</span>\n<span class=\"k\">def</span> <span class=\"nf\">inference</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n  <span class=\"k\">return</span> <span class=\"n\">my_module</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"n\">to_save</span> <span class=\"o\">=</span> <span class=\"n\">snt</span><span class=\"o\">.</span><span class=\"n\">Module</span><span class=\"p\">()</span>\n<span class=\"n\">to_save</span><span class=\"o\">.</span><span class=\"n\">inference</span> <span class=\"o\">=</span> <span class=\"n\">inference</span>\n<span class=\"n\">to_save</span><span class=\"o\">.</span><span class=\"n\">all_variables</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">(</span><span class=\"n\">my_module</span><span class=\"o\">.</span><span class=\"n\">variables</span><span class=\"p\">)</span>\n<span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">to_save</span><span class=\"p\">,</span> <span class=\"s2\">\"/tmp/example_saved_model\"</span><span class=\"p\">)</span>\n</pre>\n<p>We now have a saved model in the <code>/tmp/example_saved_model</code> folder:</p>\n<pre>$ ls -lh /tmp/example_saved_model\ntotal 24K\ndrwxrwsr-t <span class=\"m\">2</span> tomhennigan <span class=\"m\">154432098</span> <span class=\"m\">4</span>.0K Apr <span class=\"m\">28</span> <span class=\"m\">00</span>:14 assets\n-rw-rw-r-- <span class=\"m\">1</span> tomhennigan <span class=\"m\">154432098</span>  14K Apr <span class=\"m\">28</span> <span class=\"m\">00</span>:15 saved_model.pb\ndrwxrwsr-t <span class=\"m\">2</span> tomhennigan <span class=\"m\">154432098</span> <span class=\"m\">4</span>.0K Apr <span class=\"m\">28</span> <span class=\"m\">00</span>:15 variables\n</pre>\n<p>Loading this model is simple and can be done on a different machine without any\nof the Python code that built the saved model:</p>\n<pre><span class=\"n\">loaded</span> <span class=\"o\">=</span> <span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">saved_model</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s2\">\"/tmp/example_saved_model\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use the inference method. Note this doesn't run the Python code from `to_save`</span>\n<span class=\"c1\"># but instead uses the TensorFlow Graph that is part of the saved model.</span>\n<span class=\"n\">loaded</span><span class=\"o\">.</span><span class=\"n\">inference</span><span class=\"p\">(</span><span class=\"n\">tf</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">input_size</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># The all_variables property can be used to retrieve the restored variables.</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">loaded</span><span class=\"o\">.</span><span class=\"n\">all_variables</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span>\n</pre>\n<p>Note that the loaded object is not a Sonnet module, it is a container object\nthat has the specific methods (e.g. <code>inference</code>) and properties (e.g.\n<code>all_variables</code>) that we added in the previous block.</p>\n<h2>Distributed training</h2>\n<p><strong>Reference:</strong> <a href=\"https://www.tensorflow.org/alpha/guide/distribute_strategy\" rel=\"nofollow\">https://www.tensorflow.org/alpha/guide/distribute_strategy</a></p>\n<p>We are still working on making Sonnet compatible with distribution strategy.\nCurrently modules that compute forward functions but don't update internal\nstate (e.g. <code>Conv2D</code>) work well with <code>tf.distribute.MirroredStrategy</code> and\n<code>tf.distribute.experimental.TPUStrategy</code>.</p>\n<p>In general our philosophy with Sonnet is not to add special casing inside\nmodules to support libraries. In some cases this is unavoidable since components\nthat update state must do so in a \"distribution aware\" manner (for example\noptimizers, metrics or batch normalization). For these modules we plan on\ncreating new versions in the <code>snt.distribute</code> namespace to indicate that these\nmodules are distribution aware.</p>\n\n          </div>"}, "last_serial": 6895267, "releases": {"1.10": [{"comment_text": "", "digests": {"md5": "12c4aba6c60d78428d05f2e3d3fd3f17", "sha256": "2a5f6a3e683463cb2545f293ba48f104c7a041af07648fe351af8ca2926fb04c"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "12c4aba6c60d78428d05f2e3d3fd3f17", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1298722, "upload_time": "2017-08-14T17:10:17", "upload_time_iso_8601": "2017-08-14T17:10:17.654509Z", "url": "https://files.pythonhosted.org/packages/16/72/5755177a49bef2e7cdee31098d666e3fa78d729fb0467d21784d82285352/dm_sonnet-1.10-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e2e21e9578724814f7fcc840bf89ec0", "sha256": "ba88f6562f491ac2b94c1c20567d4e89c6522e328c270d0a17e972b85ef4f339"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8e2e21e9578724814f7fcc840bf89ec0", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1543692, "upload_time": "2017-08-14T17:10:14", "upload_time_iso_8601": "2017-08-14T17:10:14.221982Z", "url": "https://files.pythonhosted.org/packages/63/8e/14a2e7882b4fd5355e5627eb08d2c6da3c71e988ca50c348e57419f4c205/dm_sonnet-1.10-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71041a73324ae6a524d848c97705a5a8", "sha256": "31be49a5db6bcac04272f645815083d007cecb1690df0cced90bf83e68c43bf3"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp34-cp34m-macosx_10_6_intel.whl", "has_sig": false, "md5_digest": "71041a73324ae6a524d848c97705a5a8", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1298712, "upload_time": "2017-08-14T17:10:06", "upload_time_iso_8601": "2017-08-14T17:10:06.616812Z", "url": "https://files.pythonhosted.org/packages/2b/eb/3c899e13f97ea03a1165acb5b4869a2e2644f1f2ecc983a268079c1d5916/dm_sonnet-1.10-cp34-cp34m-macosx_10_6_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "666c24468ae3e2555064918265b4fd27", "sha256": "95069f210942ce93db50fca0be2952055c1b6f961eb18a8ff18a706796f71c06"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "666c24468ae3e2555064918265b4fd27", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1543684, "upload_time": "2017-08-14T17:10:10", "upload_time_iso_8601": "2017-08-14T17:10:10.727133Z", "url": "https://files.pythonhosted.org/packages/31/49/c56203effa0d91e8906d9bb57bc9305f45836ea4ab5bca9e845dea87e290/dm_sonnet-1.10-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4426540eaa184dcbc66d09acb54e904", "sha256": "d257ab6596181f0ff519b064421ef56ac4738766b69937a6bcb087b0edad8bc0"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp35-cp35m-macosx_10_6_intel.whl", "has_sig": false, "md5_digest": "d4426540eaa184dcbc66d09acb54e904", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1303078, "upload_time": "2017-08-14T17:10:29", "upload_time_iso_8601": "2017-08-14T17:10:29.784957Z", "url": "https://files.pythonhosted.org/packages/76/3f/90fe80d5eeed3fbf7a98833e668a139d286df6968bedd029250bbf7d5fdd/dm_sonnet-1.10-cp35-cp35m-macosx_10_6_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9ed3944160d7e6bc304f524fb36f32d8", "sha256": "de92e7cbfdfed2af7dba850a8726e5db92ea56a885f32f1d4d5c081971fdddd7"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9ed3944160d7e6bc304f524fb36f32d8", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 1543684, "upload_time": "2017-08-14T17:10:24", "upload_time_iso_8601": "2017-08-14T17:10:24.076672Z", "url": "https://files.pythonhosted.org/packages/3f/7a/c3c427966114981988aa540c87a3f48af2ebf702ea185545c3c579a90f49/dm_sonnet-1.10-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9a752b808e710dcb738aa3f5a5cabab", "sha256": "6ca9ee25b2ccc373ff2ab785f0313ac1df0ccefdf386fdfbbac3c685ab8f649c"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp36-cp36m-macosx_10_6_intel.whl", "has_sig": false, "md5_digest": "d9a752b808e710dcb738aa3f5a5cabab", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1303078, "upload_time": "2017-08-14T17:10:27", "upload_time_iso_8601": "2017-08-14T17:10:27.174380Z", "url": "https://files.pythonhosted.org/packages/e7/b7/04f0b8a8158e5df62dd9c8bdfbe94fb9d70b3399cb39fef50bc55d3095e9/dm_sonnet-1.10-cp36-cp36m-macosx_10_6_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3929687f2cf581a409ef41359bdb8da9", "sha256": "3c7219d1ba15383e81a2fad14dc1c36365f37cafa8d4a4c90ba50a423a722576"}, "downloads": -1, "filename": "dm_sonnet-1.10-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3929687f2cf581a409ef41359bdb8da9", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 1543684, "upload_time": "2017-08-14T17:10:20", "upload_time_iso_8601": "2017-08-14T17:10:20.133094Z", "url": "https://files.pythonhosted.org/packages/b8/a4/d7b209a08a6e7dcbde934bb18a01e21a3aa4fc1edada0e27fd89a8a3dac8/dm_sonnet-1.10-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}], "1.11": [{"comment_text": "", "digests": {"md5": "67fc719f3531ec545ac7fd3824c69252", "sha256": "79bda49c80a6d3b68a7f20b91d991d8f642a4806a1d38ecf4668a7b5d56f0f1f"}, "downloads": -1, "filename": "dm_sonnet-1.11-py2-none-any.whl", "has_sig": false, "md5_digest": "67fc719f3531ec545ac7fd3824c69252", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 569218, "upload_time": "2017-09-04T13:29:53", "upload_time_iso_8601": "2017-09-04T13:29:53.110488Z", "url": "https://files.pythonhosted.org/packages/27/a3/4d02bd97f053dee7d65086611b967b1d43513ad0ff11acae5cdc0a20c0eb/dm_sonnet-1.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d3cf238697c8a77742a6e320803e83c0", "sha256": "df23a8421ce1032d5929a797548bc5ffb6f53fdc4683e2def7d730e2de9f7e7a"}, "downloads": -1, "filename": "dm_sonnet-1.11-py3-none-any.whl", "has_sig": false, "md5_digest": "d3cf238697c8a77742a6e320803e83c0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 569214, "upload_time": "2017-09-04T13:29:48", "upload_time_iso_8601": "2017-09-04T13:29:48.297677Z", "url": "https://files.pythonhosted.org/packages/13/21/27ba0bad1450ae07e8c9f9fbe1d7d96d04e7f8c64132fa1e1a4e76ca7efb/dm_sonnet-1.11-py3-none-any.whl", "yanked": false}], "1.12": [{"comment_text": "", "digests": {"md5": "f4939ea212cd8a7d640079c513849db0", "sha256": "2a9d9fe36b8ca96f33f488b0347a7e44dd9764e59b588054cf875a4ef625cde2"}, "downloads": -1, "filename": "dm_sonnet-1.12-py2-none-any.whl", "has_sig": false, "md5_digest": "f4939ea212cd8a7d640079c513849db0", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 575267, "upload_time": "2017-09-20T16:51:28", "upload_time_iso_8601": "2017-09-20T16:51:28.108065Z", "url": "https://files.pythonhosted.org/packages/7d/1d/5e81194e3a0d71ab040f0c5ad1e5cb54ddb80b276b7bfa1c11d247520276/dm_sonnet-1.12-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f5233c4bff5b0a6edbab1883b1dca25", "sha256": "46dd762804d55b7d59af8c7d8af821095773eb121181f5435a0019cf20e59c0c"}, "downloads": -1, "filename": "dm_sonnet-1.12-py3-none-any.whl", "has_sig": false, "md5_digest": "0f5233c4bff5b0a6edbab1883b1dca25", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 575258, "upload_time": "2017-09-20T16:51:30", "upload_time_iso_8601": "2017-09-20T16:51:30.432497Z", "url": "https://files.pythonhosted.org/packages/1b/97/a33b9d00019c178ae50b65e83817a85ed55a4f416b90645951af316e145d/dm_sonnet-1.12-py3-none-any.whl", "yanked": false}], "1.13": [{"comment_text": "", "digests": {"md5": "a87d78ca5de0af21c47bf2f3cdb47c5c", "sha256": "baeb3f896cec0d33625f0420d8885c01fd11c908b31a818c610a4c3367df5fc8"}, "downloads": -1, "filename": "dm_sonnet-1.13-py2-none-any.whl", "has_sig": false, "md5_digest": "a87d78ca5de0af21c47bf2f3cdb47c5c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 574770, "upload_time": "2017-09-25T15:24:31", "upload_time_iso_8601": "2017-09-25T15:24:31.749187Z", "url": "https://files.pythonhosted.org/packages/b0/57/5704f2f4a786fb22990d5d74cc1aed750ff175b37c6d3018423e617056cc/dm_sonnet-1.13-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ac384d255e46370cfd883e6f0cae53c9", "sha256": "e0c6a97c64fa87e2e97fd478e2270d6623a2ec814253cd6784b88cbb1c8ad4d7"}, "downloads": -1, "filename": "dm_sonnet-1.13-py3-none-any.whl", "has_sig": false, "md5_digest": "ac384d255e46370cfd883e6f0cae53c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 574763, "upload_time": "2017-09-25T15:24:28", "upload_time_iso_8601": "2017-09-25T15:24:28.738507Z", "url": "https://files.pythonhosted.org/packages/fe/c5/5c46341329211b5439aa38a6326b2a92af2fbcf7cd7f768baddba51588ed/dm_sonnet-1.13-py3-none-any.whl", "yanked": false}], "1.14": [{"comment_text": "", "digests": {"md5": "f1e957962fa8df3ace3a0083b1eee0f9", "sha256": "713e48f1863980ae3a0859d826f4da4313fc31d0cc254bff7d66f0caa75f0063"}, "downloads": -1, "filename": "dm_sonnet-1.14-py2-none-any.whl", "has_sig": false, "md5_digest": "f1e957962fa8df3ace3a0083b1eee0f9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 585042, "upload_time": "2017-11-09T18:11:03", "upload_time_iso_8601": "2017-11-09T18:11:03.324119Z", "url": "https://files.pythonhosted.org/packages/da/21/14207e27d983cc18177758c2c5484842322317712d4149bf23c9ba7b0497/dm_sonnet-1.14-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a5badb907a4f24d4038150f728253c1", "sha256": "2e972306dacd6d32036ca9ea13ef9af75c1ac9a4c9d404d7977fff1ee1fd07ce"}, "downloads": -1, "filename": "dm_sonnet-1.14-py3-none-any.whl", "has_sig": false, "md5_digest": "9a5badb907a4f24d4038150f728253c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 585034, "upload_time": "2017-11-09T18:11:05", "upload_time_iso_8601": "2017-11-09T18:11:05.397634Z", "url": "https://files.pythonhosted.org/packages/e2/98/da09661422906a00c5f1a324b6e0932a9582ea648056bd1fe4f4101b0888/dm_sonnet-1.14-py3-none-any.whl", "yanked": false}], "1.16": [{"comment_text": "", "digests": {"md5": "4728ca44c75a5a8ac558b81e021bff5c", "sha256": "e2bd5843ead1aaf08c64d2ad35e2b818293fdb28f65677cb868d1d7a0e02e42f"}, "downloads": -1, "filename": "dm_sonnet-1.16-py2-none-any.whl", "has_sig": false, "md5_digest": "4728ca44c75a5a8ac558b81e021bff5c", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 610026, "upload_time": "2018-01-30T19:20:50", "upload_time_iso_8601": "2018-01-30T19:20:50.393394Z", "url": "https://files.pythonhosted.org/packages/28/7a/ea98cb28101d22f9ebd00b66f2308c6d565896105debdb2a2b5e5f8eb7c6/dm_sonnet-1.16-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2f0288d930eb2d1ae150ab540da54df", "sha256": "ea0ba1bcbf6b3e82f305b98b21703d06b48c5081e71657ef87a0a283d6fd82ba"}, "downloads": -1, "filename": "dm_sonnet-1.16-py3-none-any.whl", "has_sig": false, "md5_digest": "c2f0288d930eb2d1ae150ab540da54df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 610023, "upload_time": "2018-01-30T19:20:46", "upload_time_iso_8601": "2018-01-30T19:20:46.761629Z", "url": "https://files.pythonhosted.org/packages/8f/5e/cf064eb8f758cfdf3c7f910591c38649c05a602f58f9307af7d931e9e88f/dm_sonnet-1.16-py3-none-any.whl", "yanked": false}], "1.17": [{"comment_text": "", "digests": {"md5": "de8112f727feb609d9be144ab5806805", "sha256": "b69042de23679e865d1b443226d63ced07f1b537f6fdc21fe7b658a75610c779"}, "downloads": -1, "filename": "dm_sonnet-1.17-py2-none-any.whl", "has_sig": false, "md5_digest": "de8112f727feb609d9be144ab5806805", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 611506, "upload_time": "2018-02-26T19:35:43", "upload_time_iso_8601": "2018-02-26T19:35:43.425991Z", "url": "https://files.pythonhosted.org/packages/42/cf/c7bbe115c9da0660f6bdbd62f88e7e6033f494c2072ab79b435b8b2c15b5/dm_sonnet-1.17-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22c515a2dbd1bf955b8c6120062a50b4", "sha256": "c0a7eb89e25f0f85d63f2bec4e9c8c23ef2e9512f3a8cef029398af0af5e5a41"}, "downloads": -1, "filename": "dm_sonnet-1.17-py3-none-any.whl", "has_sig": false, "md5_digest": "22c515a2dbd1bf955b8c6120062a50b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 611506, "upload_time": "2018-02-26T19:35:46", "upload_time_iso_8601": "2018-02-26T19:35:46.541786Z", "url": "https://files.pythonhosted.org/packages/e3/8a/4e8ce90b32b9a531b37ecfc5b4f98ca335db511d67c0428d1430a351b9f7/dm_sonnet-1.17-py3-none-any.whl", "yanked": false}], "1.18": [{"comment_text": "", "digests": {"md5": "608425aad8e536d216fa51ecc36ccc58", "sha256": "6f0d1288b997015b64e080aa6694a25fccca0f21a212cce7acea7fcacd934939"}, "downloads": -1, "filename": "dm_sonnet-1.18-py2-none-any.whl", "has_sig": false, "md5_digest": "608425aad8e536d216fa51ecc36ccc58", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 611747, "upload_time": "2018-03-13T18:09:45", "upload_time_iso_8601": "2018-03-13T18:09:45.877836Z", "url": "https://files.pythonhosted.org/packages/2a/9b/7c070f0c2dae481fb988981b4164852f112765a4e338eb125f5f5f4da911/dm_sonnet-1.18-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7538cfef71fac098669989ba43caae5f", "sha256": "e214c059ec43f3f9c57f74dd808414bcef420b83c430ac086bf79fc54bd0c8f2"}, "downloads": -1, "filename": "dm_sonnet-1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "7538cfef71fac098669989ba43caae5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 611743, "upload_time": "2018-03-13T18:09:42", "upload_time_iso_8601": "2018-03-13T18:09:42.731101Z", "url": "https://files.pythonhosted.org/packages/30/b1/31e69e3f828ed81160b7c430fee13465c44e40289736b5d375126d99e877/dm_sonnet-1.18-py3-none-any.whl", "yanked": false}], "1.19": [{"comment_text": "", "digests": {"md5": "d8be688488a8e360ba96a61a353bb426", "sha256": "38c262d90886df5e1d80f4dae1bb01cc449a78b06afd2cbf98d670c3546d85ed"}, "downloads": -1, "filename": "dm_sonnet-1.19-py2-none-any.whl", "has_sig": false, "md5_digest": "d8be688488a8e360ba96a61a353bb426", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 609940, "upload_time": "2018-04-13T13:03:39", "upload_time_iso_8601": "2018-04-13T13:03:39.832562Z", "url": "https://files.pythonhosted.org/packages/96/87/9eb5c192c755d925e12608a0335bdccbbd886696a43c9544961e1ecc0733/dm_sonnet-1.19-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "82cb37eb591583077dab34ee7f95ed1a", "sha256": "31a6fff373b9581c26a230375abcb33ae40f4f0622c14044496859f05f65b882"}, "downloads": -1, "filename": "dm_sonnet-1.19-py3-none-any.whl", "has_sig": false, "md5_digest": "82cb37eb591583077dab34ee7f95ed1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 609937, "upload_time": "2018-04-13T13:03:53", "upload_time_iso_8601": "2018-04-13T13:03:53.530119Z", "url": "https://files.pythonhosted.org/packages/b9/f2/f320dc6dd28cb0e9958e366cd883f63aebfe3cedb88f1f0440f542ab49db/dm_sonnet-1.19-py3-none-any.whl", "yanked": false}], "1.20": [{"comment_text": "", "digests": {"md5": "785728a3369efdf8e0daf9f4880316e7", "sha256": "c25cebebaf3cbcac33478ee55ddd2af40ac94843c55abcebd35c9215953e3790"}, "downloads": -1, "filename": "dm_sonnet-1.20-py2-none-any.whl", "has_sig": false, "md5_digest": "785728a3369efdf8e0daf9f4880316e7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 609023, "upload_time": "2018-04-24T16:56:42", "upload_time_iso_8601": "2018-04-24T16:56:42.193904Z", "url": "https://files.pythonhosted.org/packages/09/b6/483a4f6597b37a13ff7bb8528725e6a9245d4db463ae00cd983bb24bfffb/dm_sonnet-1.20-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d8c982879376d232c2d6bc920ac5c229", "sha256": "72695ca7b65fef384724665ff4bfd1b1f9c5038b4df5c74b41d16aeaf1ff4f10"}, "downloads": -1, "filename": "dm_sonnet-1.20-py3-none-any.whl", "has_sig": false, "md5_digest": "d8c982879376d232c2d6bc920ac5c229", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 609022, "upload_time": "2018-04-24T16:56:40", "upload_time_iso_8601": "2018-04-24T16:56:40.081700Z", "url": "https://files.pythonhosted.org/packages/34/c8/7c544441596e4906fe1174a909ce79062a5a554c2e33398c9fc927ccc80e/dm_sonnet-1.20-py3-none-any.whl", "yanked": false}], "1.21": [{"comment_text": "", "digests": {"md5": "7554a427ae6edd9c999bf09e04c1c2fa", "sha256": "1cbfd65ef2599647cf3c348575b00dbf25941a342b00575ab52ecaefbb8c8fab"}, "downloads": -1, "filename": "dm_sonnet-1.21-py2-none-any.whl", "has_sig": false, "md5_digest": "7554a427ae6edd9c999bf09e04c1c2fa", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 613506, "upload_time": "2018-05-30T15:29:43", "upload_time_iso_8601": "2018-05-30T15:29:43.077254Z", "url": "https://files.pythonhosted.org/packages/a5/25/aa9927d29e67da0dd8eeccb0b3e0d31996ec743234d566a43b318d681daa/dm_sonnet-1.21-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a18295a27e73443a221ccdd9df3b7188", "sha256": "1e776cef0fe4a835fd78c62125c42a473d8effebb741146b81e389ff930cc037"}, "downloads": -1, "filename": "dm_sonnet-1.21-py3-none-any.whl", "has_sig": false, "md5_digest": "a18295a27e73443a221ccdd9df3b7188", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 613505, "upload_time": "2018-05-30T15:29:45", "upload_time_iso_8601": "2018-05-30T15:29:45.376938Z", "url": "https://files.pythonhosted.org/packages/9d/2f/e54695c2680f88084582340d1be9c0a48f76ae2e190e73527bdf4182fa2d/dm_sonnet-1.21-py3-none-any.whl", "yanked": false}], "1.22": [{"comment_text": "", "digests": {"md5": "9ad19ac04498a6bb9aecaa56cf203a2b", "sha256": "4c31282af81dca6516532db79be0020c14af8a3b95e3021c427419a1228a63df"}, "downloads": -1, "filename": "dm_sonnet-1.22-py2-none-any.whl", "has_sig": false, "md5_digest": "9ad19ac04498a6bb9aecaa56cf203a2b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 613557, "upload_time": "2018-06-01T16:13:53", "upload_time_iso_8601": "2018-06-01T16:13:53.783802Z", "url": "https://files.pythonhosted.org/packages/99/22/440088aa6237195c1f070b21cdcec855a5393df1aa11f6e372d28fc43807/dm_sonnet-1.22-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e518b7fa5a632a82e44e2636e3aa8cdd", "sha256": "f31323f0a7528c0669a09f0a284407b96d08113cd6a7d8fab03db5af64d48bbb"}, "downloads": -1, "filename": "dm_sonnet-1.22-py3-none-any.whl", "has_sig": false, "md5_digest": "e518b7fa5a632a82e44e2636e3aa8cdd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 613557, "upload_time": "2018-06-01T16:13:55", "upload_time_iso_8601": "2018-06-01T16:13:55.999722Z", "url": "https://files.pythonhosted.org/packages/0d/4c/29d1634f181ce4107b1f79003c51fb4909bffc013145dcd2cebc63c274de/dm_sonnet-1.22-py3-none-any.whl", "yanked": false}], "1.23": [{"comment_text": "", "digests": {"md5": "70e56d5b75ea86792123fbb547580bd4", "sha256": "31fbb44f37275515313cd495a2782640c0de7f0290b9291dedf5b9a3844982bf"}, "downloads": -1, "filename": "dm_sonnet-1.23-py2-none-any.whl", "has_sig": false, "md5_digest": "70e56d5b75ea86792123fbb547580bd4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 616970, "upload_time": "2018-06-05T17:14:11", "upload_time_iso_8601": "2018-06-05T17:14:11.879752Z", "url": "https://files.pythonhosted.org/packages/2d/af/77f1a710952f90783f1fcf36eee6bb4191768175c8fe0c7f3fae3b0a3ac6/dm_sonnet-1.23-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "664436364f3ed9825614d41cce9e28d3", "sha256": "629ebe096f02d9436b287af4f16bb034700737c3b496fb3ec7b9222c9fe81ba1"}, "downloads": -1, "filename": "dm_sonnet-1.23-py3-none-any.whl", "has_sig": false, "md5_digest": "664436364f3ed9825614d41cce9e28d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 616970, "upload_time": "2018-06-05T17:14:14", "upload_time_iso_8601": "2018-06-05T17:14:14.026139Z", "url": "https://files.pythonhosted.org/packages/83/c7/e32a7d83724f26e921dcdd7ddd8f30e6e92cb4e68c740960307616b6ada8/dm_sonnet-1.23-py3-none-any.whl", "yanked": false}], "1.25": [{"comment_text": "", "digests": {"md5": "45a82011aa1052255f46b78ff651563b", "sha256": "e6477f4acc3986a07b0a1cfc613bfc1abc5855a6af54b0b55e73103bff1b8fbe"}, "downloads": -1, "filename": "dm_sonnet-1.25-py2-none-any.whl", "has_sig": false, "md5_digest": "45a82011aa1052255f46b78ff651563b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 629563, "upload_time": "2018-10-18T17:46:54", "upload_time_iso_8601": "2018-10-18T17:46:54.486286Z", "url": "https://files.pythonhosted.org/packages/53/2e/6d7cf4d647ad48cb6b0064cadf456e7a5501234a09a9315004097667bd82/dm_sonnet-1.25-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "40a2ebff7c879251ded7ea17739f724c", "sha256": "3ac320ec2a2b49927ff710c286cde2e9b3680bbe14b52d2525ed8d0f7972f294"}, "downloads": -1, "filename": "dm_sonnet-1.25-py3-none-any.whl", "has_sig": false, "md5_digest": "40a2ebff7c879251ded7ea17739f724c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 629563, "upload_time": "2018-10-18T17:46:57", "upload_time_iso_8601": "2018-10-18T17:46:57.198023Z", "url": "https://files.pythonhosted.org/packages/14/b4/d50b017b8b4de780917d5ef390aaa6f67a784fb7e8af41a56f7ea62b6104/dm_sonnet-1.25-py3-none-any.whl", "yanked": false}], "1.26": [{"comment_text": "", "digests": {"md5": "b7a3a0c092dc12e47d33d5811540a9e3", "sha256": "7fe0a711a3ae437377e237a6f681de4b735339cbd16e59bbd87072ae9cb3fe0d"}, "downloads": -1, "filename": "dm_sonnet-1.26-py2-none-any.whl", "has_sig": false, "md5_digest": "b7a3a0c092dc12e47d33d5811540a9e3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 629579, "upload_time": "2018-10-22T17:02:31", "upload_time_iso_8601": "2018-10-22T17:02:31.639643Z", "url": "https://files.pythonhosted.org/packages/9d/3b/2304719ab06461b230f17426c3def17cf6417067bb4cc258c40b02f8e4c2/dm_sonnet-1.26-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5512f61a154856d80b1d2a65dfdacba8", "sha256": "66e9d045b97797432c703f591e1303fc97212e2478347ccedf871fb2ab1e1be2"}, "downloads": -1, "filename": "dm_sonnet-1.26-py3-none-any.whl", "has_sig": false, "md5_digest": "5512f61a154856d80b1d2a65dfdacba8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 629577, "upload_time": "2018-10-22T17:02:29", "upload_time_iso_8601": "2018-10-22T17:02:29.132311Z", "url": "https://files.pythonhosted.org/packages/84/fc/863b22ac6fd5630433fbf7ca5f7212db184953b0f3b9c9f3a030d220c986/dm_sonnet-1.26-py3-none-any.whl", "yanked": false}], "1.27": [{"comment_text": "", "digests": {"md5": "29e55f2f2fa23ca3eda967d09a22b60b", "sha256": "1888a98b406592b9f5314b4ac1330b6ef52e5e057974f990530901d9e8ad76d3"}, "downloads": -1, "filename": "dm_sonnet-1.27-py2-none-any.whl", "has_sig": false, "md5_digest": "29e55f2f2fa23ca3eda967d09a22b60b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 635357, "upload_time": "2018-11-21T14:08:10", "upload_time_iso_8601": "2018-11-21T14:08:10.573650Z", "url": "https://files.pythonhosted.org/packages/db/ea/59a516e525ffd505d9f584903001e6dc7308ecebb8b7e3712cad5d3470f6/dm_sonnet-1.27-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8754881dda3700c652d20026f99b9ce4", "sha256": "4d9a287b3b4bf569ec212b346b9550a14ba5a2045395cd0d370acb7bc7868e06"}, "downloads": -1, "filename": "dm_sonnet-1.27-py3-none-any.whl", "has_sig": false, "md5_digest": "8754881dda3700c652d20026f99b9ce4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 635354, "upload_time": "2018-11-21T14:08:07", "upload_time_iso_8601": "2018-11-21T14:08:07.993623Z", "url": "https://files.pythonhosted.org/packages/9e/40/1c2835c14271e32bf4ba349a650d6baa4a7e557e3a4716407c97102d80de/dm_sonnet-1.27-py3-none-any.whl", "yanked": false}], "1.29": [{"comment_text": "", "digests": {"md5": "5e4f17b29ef772edfc2d940034d7fd82", "sha256": "317907d3e5947d83beb25eb981f025581882a35d30bdaffd6b879c0fec21e191"}, "downloads": -1, "filename": "dm_sonnet-1.29-py2-none-any.whl", "has_sig": false, "md5_digest": "5e4f17b29ef772edfc2d940034d7fd82", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 640030, "upload_time": "2019-02-04T20:11:07", "upload_time_iso_8601": "2019-02-04T20:11:07.634115Z", "url": "https://files.pythonhosted.org/packages/14/50/62be94566b637875c6980543c36ccbb2133bedb44e8a1f8a1b2e635d0072/dm_sonnet-1.29-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8710e481ab71948802adb62352ba367d", "sha256": "ceca0e01b073a02c47df2905cffdac7ee464618759cfc24f52193c9b25ed9e16"}, "downloads": -1, "filename": "dm_sonnet-1.29-py3-none-any.whl", "has_sig": false, "md5_digest": "8710e481ab71948802adb62352ba367d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 640029, "upload_time": "2019-02-04T20:11:05", "upload_time_iso_8601": "2019-02-04T20:11:05.159785Z", "url": "https://files.pythonhosted.org/packages/99/04/59749ab84f37091186ef82284d42274bb60ec689fb345aaf4c9825635320/dm_sonnet-1.29-py3-none-any.whl", "yanked": false}], "1.32": [{"comment_text": "", "digests": {"md5": "5e21561c399871ca6700193e692b1051", "sha256": "b5217ae33de6aa10070ad1e344f7689da95d85fa77322514036570dc7e9eeea2"}, "downloads": -1, "filename": "dm_sonnet-1.32-py2-none-any.whl", "has_sig": false, "md5_digest": "5e21561c399871ca6700193e692b1051", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 641283, "upload_time": "2019-04-15T12:07:08", "upload_time_iso_8601": "2019-04-15T12:07:08.740299Z", "url": "https://files.pythonhosted.org/packages/53/31/6199200b8ffbd8d0a3bfe394f615c273df05674d3b7e4f0e41c57a0a5c0b/dm_sonnet-1.32-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a8728dbcbeab0339360b01f5ed87bde", "sha256": "7a6aa3a2bd44a1e3005510ba38c56eaa8433620c374da319f011e8bf26584f76"}, "downloads": -1, "filename": "dm_sonnet-1.32-py3-none-any.whl", "has_sig": false, "md5_digest": "8a8728dbcbeab0339360b01f5ed87bde", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 641278, "upload_time": "2019-04-15T12:07:06", "upload_time_iso_8601": "2019-04-15T12:07:06.723383Z", "url": "https://files.pythonhosted.org/packages/07/73/cfb8307d6dee5de6bc6fdd223824edc5d372a3f94991d8d0bee7d9f6a35b/dm_sonnet-1.32-py3-none-any.whl", "yanked": false}], "1.33": [{"comment_text": "", "digests": {"md5": "d4a099f5423eb9c95b1eb03c3abecd54", "sha256": "4f4ccb26eb1b864dd1e74900d66f95a2de713708e79c190b651c9cc99dca17a5"}, "downloads": -1, "filename": "dm_sonnet-1.33-py2-none-any.whl", "has_sig": false, "md5_digest": "d4a099f5423eb9c95b1eb03c3abecd54", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 641254, "upload_time": "2019-06-04T17:31:34", "upload_time_iso_8601": "2019-06-04T17:31:34.214784Z", "url": "https://files.pythonhosted.org/packages/bd/67/040d7df5060f34c1faaaf11661c007da5cfcc3a764c52ebad2f795ae77d7/dm_sonnet-1.33-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf90be56329f5a33f7cb87a419b9c276", "sha256": "2a67bab526a3bcb4065b54f6112861d11de87b4792ee7673fbf1e84833430bd1"}, "downloads": -1, "filename": "dm_sonnet-1.33-py3-none-any.whl", "has_sig": false, "md5_digest": "cf90be56329f5a33f7cb87a419b9c276", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 641253, "upload_time": "2019-06-04T17:31:31", "upload_time_iso_8601": "2019-06-04T17:31:31.801258Z", "url": "https://files.pythonhosted.org/packages/44/84/c71ffff6a3965a1a07dcc1480c78b9dc1b1cab4f5cfe0202c40f747226ce/dm_sonnet-1.33-py3-none-any.whl", "yanked": false}], "1.34": [{"comment_text": "", "digests": {"md5": "8a3ea8fc6eebea0e221b0d42f7691c3d", "sha256": "82d471922473c6fbe034c195092c5c800c978a0175702e7365c859c8c1df5222"}, "downloads": -1, "filename": "dm_sonnet-1.34-py2-none-any.whl", "has_sig": false, "md5_digest": "8a3ea8fc6eebea0e221b0d42f7691c3d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 648824, "upload_time": "2019-07-05T15:39:03", "upload_time_iso_8601": "2019-07-05T15:39:03.210784Z", "url": "https://files.pythonhosted.org/packages/9e/82/59e87985a66cc4103764803e2e99feb2be8a0e4efeeaf08b2c52d0fb52fa/dm_sonnet-1.34-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "847f7851c044e11e5213d159c2279894", "sha256": "791018673f3da8ee20c17094b1bf2a39650ce4c6105f9555ae4d624601209edb"}, "downloads": -1, "filename": "dm_sonnet-1.34-py3-none-any.whl", "has_sig": false, "md5_digest": "847f7851c044e11e5213d159c2279894", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 648823, "upload_time": "2019-07-05T15:39:00", "upload_time_iso_8601": "2019-07-05T15:39:00.737511Z", "url": "https://files.pythonhosted.org/packages/6d/ea/1611fee7d91c0b5cc031c849fed429f5cdeab22e26d74016058345e06f0f/dm_sonnet-1.34-py3-none-any.whl", "yanked": false}], "1.35": [{"comment_text": "", "digests": {"md5": "1dd2490a593d7b2ecf51d17ee3e024ad", "sha256": "80e4ef83e0859c1901fb6c6f11296f12738bcce86584e246ebb3f905fcd593d4"}, "downloads": -1, "filename": "dm_sonnet-1.35-py2-none-any.whl", "has_sig": false, "md5_digest": "1dd2490a593d7b2ecf51d17ee3e024ad", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 652890, "upload_time": "2019-09-06T14:00:04", "upload_time_iso_8601": "2019-09-06T14:00:04.414781Z", "url": "https://files.pythonhosted.org/packages/40/62/6a36687222fad6206a4aa7e8b2c4b2f4e966f5aee0738b5ea8051c66e0ff/dm_sonnet-1.35-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01f70e14095c610734bfb44688340107", "sha256": "b6693980e52c0c96c6ef0842d444eb1de65c3f55f9b3fcb41810be5756bb32d7"}, "downloads": -1, "filename": "dm_sonnet-1.35-py3-none-any.whl", "has_sig": false, "md5_digest": "01f70e14095c610734bfb44688340107", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 652889, "upload_time": "2019-09-06T14:00:01", "upload_time_iso_8601": "2019-09-06T14:00:01.604307Z", "url": "https://files.pythonhosted.org/packages/49/8f/3178e49a9b463610a85b37f5206ae5ba5a49d00eb0c7135af652fd4bc22b/dm_sonnet-1.35-py3-none-any.whl", "yanked": false}], "1.36": [{"comment_text": "", "digests": {"md5": "7a5edd9a58eafc8dec1abf3053b7ae4a", "sha256": "d5ffb1f53f6cc90f59c5c3a4d9c95976d5af692af638552dc3aa302c698ab17f"}, "downloads": -1, "filename": "dm_sonnet-1.36-py2-none-any.whl", "has_sig": false, "md5_digest": "7a5edd9a58eafc8dec1abf3053b7ae4a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 665275, "upload_time": "2020-02-10T20:08:42", "upload_time_iso_8601": "2020-02-10T20:08:42.471538Z", "url": "https://files.pythonhosted.org/packages/75/cc/0bf7586483e29f5ccc2bee8e542cbd3cc5a9527643df34ee04eabe450c91/dm_sonnet-1.36-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89eafd09d71fbdee2c433afb49fbb4ef", "sha256": "afe292a5f2eaed5c3e2be4b30f2a14b67425422457b9a51579d616af6f075dac"}, "downloads": -1, "filename": "dm_sonnet-1.36-py3-none-any.whl", "has_sig": false, "md5_digest": "89eafd09d71fbdee2c433afb49fbb4ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 665281, "upload_time": "2020-02-10T20:08:45", "upload_time_iso_8601": "2020-02-10T20:08:45.010793Z", "url": "https://files.pythonhosted.org/packages/53/14/e221b910127bf4e2c19bc6d3b3e65a4e0104b90f7e98a3d428926474ece3/dm_sonnet-1.36-py3-none-any.whl", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "4a8052895144b327179f3dab087d4fd2", "sha256": "5680f47688efde427425d567065273355f9f5752814d36a84f34fa1deeca4d85"}, "downloads": -1, "filename": "dm_sonnet-1.7-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "4a8052895144b327179f3dab087d4fd2", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1297905, "upload_time": "2017-07-31T17:32:41", "upload_time_iso_8601": "2017-07-31T17:32:41.257778Z", "url": "https://files.pythonhosted.org/packages/1f/22/7bee316f579a76ee1ebef0cf518fb51563917c356f4ceb5378b1ef4fa4d1/dm_sonnet-1.7-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "193d71b83961d595464e6dafbaa66b03", "sha256": "747623009aab7b2e05afca68277773c3a83ab30028fcac8f91ff45de39732af0"}, "downloads": -1, "filename": "dm_sonnet-1.7-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "193d71b83961d595464e6dafbaa66b03", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1530097, "upload_time": "2017-07-31T17:32:32", "upload_time_iso_8601": "2017-07-31T17:32:32.898624Z", "url": "https://files.pythonhosted.org/packages/ad/cd/892bfdc9cfc6d0deb6230db256008079471fac5888ebc9e11aa6dfdb3517/dm_sonnet-1.7-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b8c1ddb1727872148f19bf2e7381daa", "sha256": "7abb8b4bbc6dc726393ef8d62f9bd89a3bd37bf6e58c7d8ae8d27a19fb4a71ed"}, "downloads": -1, "filename": "dm_sonnet-1.7-cp34-cp34m-macosx_10_6_intel.whl", "has_sig": false, "md5_digest": "6b8c1ddb1727872148f19bf2e7381daa", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1297899, "upload_time": "2017-07-31T17:32:36", "upload_time_iso_8601": "2017-07-31T17:32:36.272922Z", "url": "https://files.pythonhosted.org/packages/be/46/c2a7b3f3c76e163d39494651e02e3117577346c46482e39ce1633e33078d/dm_sonnet-1.7-cp34-cp34m-macosx_10_6_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79940d6194d82799bd830c8a717381aa", "sha256": "97da68e6702ee6d3a15fb54e7c17409943e132bd89b2818c7dce90281ea8e8a5"}, "downloads": -1, "filename": "dm_sonnet-1.7-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "79940d6194d82799bd830c8a717381aa", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1530092, "upload_time": "2017-07-31T17:32:38", "upload_time_iso_8601": "2017-07-31T17:32:38.682530Z", "url": "https://files.pythonhosted.org/packages/9d/45/7869b43a6313dc210e951b4288785d42660b419d34decac62b5b5bde26e9/dm_sonnet-1.7-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "2c8be9463aa353e0ba02ee2f463e031e", "sha256": "863973f6efb71f3b3cd10e56418289632664bef76940862718dc62d42ca39468"}, "downloads": -1, "filename": "dm_sonnet-1.8-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "2c8be9463aa353e0ba02ee2f463e031e", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1298136, "upload_time": "2017-07-31T17:36:39", "upload_time_iso_8601": "2017-07-31T17:36:39.944953Z", "url": "https://files.pythonhosted.org/packages/ed/5f/c2441fab3467037e58f66f3fedbee57dee17b4050867c895cf505d2303e6/dm_sonnet-1.8-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6ec8b7c1f357f600afa0e72bb47ccf45", "sha256": "544b603964b36463122e852074dfed59b43497fbbf972de85c066c77db4c514d"}, "downloads": -1, "filename": "dm_sonnet-1.8-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6ec8b7c1f357f600afa0e72bb47ccf45", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1530326, "upload_time": "2017-07-31T17:36:31", "upload_time_iso_8601": "2017-07-31T17:36:31.758489Z", "url": "https://files.pythonhosted.org/packages/43/86/b03a057fadb918079abd20efaa2b9d51ac5da76f2f00d5c15bebb62d60c4/dm_sonnet-1.8-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42ef13c6e4cf00a917c401ccad0c212c", "sha256": "fcfdd2b844f12e294d81961fb6ef407fa80e8a5228eb4e3ed1851e745ce57a32"}, "downloads": -1, "filename": "dm_sonnet-1.8-cp34-cp34m-macosx_10_6_intel.whl", "has_sig": false, "md5_digest": "42ef13c6e4cf00a917c401ccad0c212c", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1298130, "upload_time": "2017-07-31T17:36:34", "upload_time_iso_8601": "2017-07-31T17:36:34.994031Z", "url": "https://files.pythonhosted.org/packages/d2/a3/c204eb6e0e60e9fdfdb30c00680478f19b218399867ca3a92ad61d1f697e/dm_sonnet-1.8-cp34-cp34m-macosx_10_6_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0bf7cf0ebe35b0d723610269cd0c5dbf", "sha256": "f698abd85683a33479d470b1059d1090a363ce50052abd85cf8efebca8c3a3b8"}, "downloads": -1, "filename": "dm_sonnet-1.8-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0bf7cf0ebe35b0d723610269cd0c5dbf", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1530322, "upload_time": "2017-07-31T17:36:37", "upload_time_iso_8601": "2017-07-31T17:36:37.744419Z", "url": "https://files.pythonhosted.org/packages/74/8f/e6eae2b78628ddc3ccdf1204e8de498d27b8e453a56c2cf8a57fd9a8634f/dm_sonnet-1.8-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}], "1.9": [{"comment_text": "", "digests": {"md5": "6270d0d8c433b53f34bc73bdfaff10ec", "sha256": "ccee00c9150386c40ebe4a607b77720137abf2518859b44cd2dfa7d835206e75"}, "downloads": -1, "filename": "dm_sonnet-1.9-cp27-cp27m-macosx_10_11_x86_64.whl", "has_sig": false, "md5_digest": "6270d0d8c433b53f34bc73bdfaff10ec", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1298492, "upload_time": "2017-08-08T09:21:01", "upload_time_iso_8601": "2017-08-08T09:21:01.562345Z", "url": "https://files.pythonhosted.org/packages/41/c8/8f88345fbd9de4408809c323ed9ea7c8f1b4d6e26d6d098360e301a9379c/dm_sonnet-1.9-cp27-cp27m-macosx_10_11_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "42f120dd4888ce7e571ac6219d891a94", "sha256": "54bcf10f0967c3dd70e8eeb4e9f10d8bf93afae773dd0a6ed63d5473e8658d44"}, "downloads": -1, "filename": "dm_sonnet-1.9-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "42f120dd4888ce7e571ac6219d891a94", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 1530681, "upload_time": "2017-08-08T09:21:06", "upload_time_iso_8601": "2017-08-08T09:21:06.651857Z", "url": "https://files.pythonhosted.org/packages/4f/7d/b874ac146f85e2060c848cb1dc3d57d50e2db4755250b425c3b3eb87d1a5/dm_sonnet-1.9-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "950d42aa2b2b3342e8cd094b28833cb8", "sha256": "2cc8d2550a117a2a77d3a78a90179d4c00e01a306b3b248cf7821a7cf7c77ed7"}, "downloads": -1, "filename": "dm_sonnet-1.9-cp34-cp34m-macosx_10_6_intel.whl", "has_sig": false, "md5_digest": "950d42aa2b2b3342e8cd094b28833cb8", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1298484, "upload_time": "2017-08-08T09:21:09", "upload_time_iso_8601": "2017-08-08T09:21:09.844886Z", "url": "https://files.pythonhosted.org/packages/12/4a/93c6362f8dd867116e06e6c98f3f43f7820c239ddabb98fb7449a53a83f0/dm_sonnet-1.9-cp34-cp34m-macosx_10_6_intel.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5995037055ecdff8dd2cdaa9bb30963b", "sha256": "e3a6dbc56c3ff28be296fbef93b5c8344756074d322cfe45662946164687e157"}, "downloads": -1, "filename": "dm_sonnet-1.9-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5995037055ecdff8dd2cdaa9bb30963b", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 1530672, "upload_time": "2017-08-08T09:21:04", "upload_time_iso_8601": "2017-08-08T09:21:04.165331Z", "url": "https://files.pythonhosted.org/packages/9d/b9/41e67634b9366290227347b4f6bcd62320c2deda7bcd0f817a3c3ab7346e/dm_sonnet-1.9-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "6500a5e44b9d4f21faecaf1788e9047f", "sha256": "773964935060a8caae80026baec2cdd6f69c9ba2102fa6abf245cd721a914b10"}, "downloads": -1, "filename": "dm_sonnet-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6500a5e44b9d4f21faecaf1788e9047f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254476, "upload_time": "2020-03-27T10:36:10", "upload_time_iso_8601": "2020-03-27T10:36:10.578918Z", "url": "https://files.pythonhosted.org/packages/13/28/9185afffefb655ef1a29f4b84aa9f656826408ca2d1b9ffeba81fbfd40ec/dm_sonnet-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "241a780a1c448873e309a34fc17d938e", "sha256": "065c05b0bc40b82a7136017f17af479ca285f9de2a19746b340ad2d717f6a9c4"}, "downloads": -1, "filename": "dm-sonnet-2.0.0.tar.gz", "has_sig": false, "md5_digest": "241a780a1c448873e309a34fc17d938e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152587, "upload_time": "2020-03-27T10:36:12", "upload_time_iso_8601": "2020-03-27T10:36:12.169408Z", "url": "https://files.pythonhosted.org/packages/98/12/e1f125006c516b6560f85cdae2bc3ff86841c608e28e2650d3f6885d1bbe/dm-sonnet-2.0.0.tar.gz", "yanked": false}], "2.0.0b0": [{"comment_text": "", "digests": {"md5": "61dab2621998b84f022059927899cdb8", "sha256": "d8729260117252019f709c6a69ad92d9069c2d438d0321a6206b1fe27c8559cd"}, "downloads": -1, "filename": "dm_sonnet-2.0.0b0-py3-none-any.whl", "has_sig": false, "md5_digest": "61dab2621998b84f022059927899cdb8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 905266, "upload_time": "2019-09-06T14:18:11", "upload_time_iso_8601": "2019-09-06T14:18:11.327133Z", "url": "https://files.pythonhosted.org/packages/ff/bf/002901d61d04be4bb7d14964c70e68322a81174aa0c31b04b2cdfa9473fe/dm_sonnet-2.0.0b0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6500a5e44b9d4f21faecaf1788e9047f", "sha256": "773964935060a8caae80026baec2cdd6f69c9ba2102fa6abf245cd721a914b10"}, "downloads": -1, "filename": "dm_sonnet-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "6500a5e44b9d4f21faecaf1788e9047f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 254476, "upload_time": "2020-03-27T10:36:10", "upload_time_iso_8601": "2020-03-27T10:36:10.578918Z", "url": "https://files.pythonhosted.org/packages/13/28/9185afffefb655ef1a29f4b84aa9f656826408ca2d1b9ffeba81fbfd40ec/dm_sonnet-2.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "241a780a1c448873e309a34fc17d938e", "sha256": "065c05b0bc40b82a7136017f17af479ca285f9de2a19746b340ad2d717f6a9c4"}, "downloads": -1, "filename": "dm-sonnet-2.0.0.tar.gz", "has_sig": false, "md5_digest": "241a780a1c448873e309a34fc17d938e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152587, "upload_time": "2020-03-27T10:36:12", "upload_time_iso_8601": "2020-03-27T10:36:12.169408Z", "url": "https://files.pythonhosted.org/packages/98/12/e1f125006c516b6560f85cdae2bc3ff86841c608e28e2650d3f6885d1bbe/dm-sonnet-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:12 2020"}