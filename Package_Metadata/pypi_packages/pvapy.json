{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# PvaPy - PvAccess for Python\n\nThe PvaPy package is a Python API for EPICS4. It supports both PVA and CA\nproviders, all standard EPICS4 types (structures, scalars, unions, etc), \nstandard set of channel operations (put/get, monitor), RPC client/server, \nPVA server, etc. It uses Boost/Python to wrap EPICS4 C++ libraries and APIs, \nand is currently supported on the Unix-like operating systems (Linux, OSX).\n\n## Installation \n\nAt the moment prebuilt PvaPy packages exist for the Conda and \nPyPI package management system. If none of the prebuilt packages\nwork for you, or if you need 32-bit Linux packages, you will have to build \nPvaPy from sources.\n\n### Conda \n\n- Supported platforms: Linux (64-bit), OSX \n- Supported Python versions: Python2, Python3\n\nMake sure `conda` command is in your path, and execute the following command:\n\n```sh\n  $ conda install -c epics pvapy\n```\n\nThis should result in installation of pvapy, pvapy-boost and epics-base \nConda packages.\n\n### PyPI\n\n- Supported platforms: Linux (64-bit)\n- Supported Python versions: Python2, Python3\n\nMake sure `pip` command is in your path, and execute the following command:\n\n```sh\n  $ pip install pvapy\n```\n\nPvaPy pip packages contain all needed epics base and boost libraries.\n\n## Build \n\nThis section is intended for those users that would like to build PvaPy from \nthe source code.\n\n### Prerequisites\n\nBuilding PvaPy from source requires recent versions of the following software:\n\n1. Standard development tools (gcc, make, autoconf, etc.)\n2. Python development header files/libraries (>=v2.6.6)\n3. Sphinx/Sphinx RTD Theme (optional, for generating documentation)\n\nThere are two ways of building and installing PvaPy from sources: automated\nand custom. The automated local install will download and build predefined\nversions of EPICS Base, Boost and PvaPy. Custom local install relies on already existing EPICS Base and Boost libraries, and builds only PvaPy. \n\n### Automated Build\n\nMake sure the desired version of Python is in your path, and execute the \nfollowing command from the top of the PvaPy source directory:\n\n```sh\n  $ PREFIX=/local/install/path make local\n```\n\nThis should build and install predefined versions of EPICS Base, Boost Python \nand PvaPy libraries under the directory specified by the PREFIX variable. If\nPREFIX is not specified, all software will be installed under the `tools/local`\nsubdirectory of the PvaPy distribution.\n\n### Custom Build\n\nIn addition to the Python-related prerequsites, the custom build requires\nthe following software already built:\n\n1. EPICS Base (>=v3.14.12.3)\n2. EPICS4 CPP release (>=v4.4.0); note that EPICS7 release includes \nall needed v4 modules\n3. Boost (>=v1.41.0); must have the boost_python library built\n4. Boost.NumPy (optional, for retrieving numeric scalar arrays as numpy\narrays; this is not needed for Boost v1.63.0 and later)\n\nThe version numbers mentioned above are the earliest that PvaPy was tested with.\nAny recent version of Python and the Boost libraries (such as those that come \nwith current linux distributions) should work. Similarly, any recent version \nof EPICS Base that is supported by EPICS4 CPP should be fine. \n\nNothing special needs to be done when building the EPICS4 CPP modules. Ensure\nthat the EPICS Base installation you use for this module is the same one that\nwas used to build the EPICS4 modules.\n\nThis module has not been adapted for use on Microsoft Windows. Only Unix-like\noperating systems (e.g. Linux, MacOS, Solaris) are currently supported.\n\n#### 1. Configure PvaPy\n\nThis can be done manually, or using autoconf.\n\nFor manual configuration: Read the comments in both the `configure/RELEASE` and\n`configure/CONFIG_SITE` files and follow the instructions given there.\n\nFor automatic configuration: In the top level directory run\n\n```sh\n  $ make configure EPICS_BASE=/epics/base/path [EPICS4_DIR=/epics/v4/path] [BOOST_NUM_PY_DIR=/boost.numpy/path] [BOOST_ROOT=/boost/path] [PYTHON_VERSION=3]\n```\n\nNote that you can only use the automatic configuration if the v4 modules have\nnot been renamed. In the above command replace `/epics/base/path` with the full\npath to your EPICS Base directory, and `/epics/v4/path` with the full path to \nyour top level directory containing the v4 modules pvDataCPP, pvAccessCPP, etc. \nIf you are using EPICS7 release, you can omit EPICS4_DIR argument, as \nconfiguration scripts will find the required v4 libraries and header files in \nthe EPICS Base directory. \n\nThe optional `BOOST_NUM_PY_DIR` argument enables NumPy array support for older\nBoost versions, as v1.63.0 and later releases already include NumPy libraries.\nThe optional `BOOST_ROOT` argument is typically used for custom Boost \ninstallation directory. In case you are using custom python installation that \nuses shared object libraries, you may need to set PATH and LD_LIBRARY_PATH \nenvironment variables before running the above `make configure` command.\nAlso, note that building with python 3.x requires PYTHON_VERSION=3 argument.\n\nThe `make configure` command will check for your Boost/Python libraries, and\ncreate suitable `configure/RELEASE.local` and `configure/CONFIG_SITE.local` \nfiles that are used by the build process. They should look roughly like the \nexamples below:\n\n```sh\n  $ cat RELEASE.local\n  PVACLIENT = /home/epics/v4/pvaClientCPP\n  PVDATABASE = /home/epics/v4/pvDatabaseCPP\n  NORMATIVETYPES = /home/epics/v4/normativeTypesCPP\n  PVACCESS = /home/epics/v4/pvAccessCPP\n  PVDATA = /home/epics/v4/pvDataCPP\n  EPICS_BASE = /home/epics/base-3.15.5\n\n  $ cat CONFIG_SITE.local\n  PVA_PY_CPPFLAGS = -I/usr/include -I/usr/include/python2.7\n  PVA_PY_LDFLAGS = -L/usr/lib64 -lpython2.7\n  PVA_PY_SYS_LIBS = boost_python  \n  PVA_API_VERSION = 480\n  PVA_RPC_API_VERSION = 480\n  HAVE_BOOST_NUM_PY = 0\n  HAVE_BOOST_PYTHON_NUM_PY = 0\n  PYTHON_VERSION = 2.7\n  PVA_PY_PYTHON = /bin/python\n  PVA_PY_PYTHONPATH = /home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n  PVA_PY_LD_LIBRARY_PATH = /usr/lib64\n  PVA_PY_EPICS_BASE = /home/epics/base-3.15.5\n  PVA_PY_EPICS4_DIR = /home/epics/v4\n  PVA_PY_HOST_ARCH = linux-x86_64\n  PVA_PY_SETUP_SH = /home/epics/pvaPy/bin/linux-x86_64/pvapy_setup_full.2.7.sh\n```\n\nThe above files were created automatically on a 64-bit RHEL 7.4 machine, with\nthe following boost/python packages installed:\n\n```sh\n  $ rpm -q boost-python python-devel\n  boost-python-1.53.0-27.el7.x86_64\n  python-devel-2.7.5-58.el7.x86_64\n```\n\nNote that the automatic configuration process also creates \n`pvapy_setup_full.$PYTHON_VERSION.(c)sh` and \n`pvapy_setup_pythonpath.$PYTHON_VERSION.(c)sh` files in the \n`bin/$EPICS_HOST_ARCH` directory. The full setup files modify PATH, \nLD_LIBRARY_PATH and PYTHONPATH environment variables, while the pythonpath\nsetup files modify only PYTHONPATH variable. For example,\n\n```sh\n  $ cat pvapy_setup_pythonpath.2.7.sh\n  #!/bin/sh\n  #\n  # modifies PYTHONPATH environment variable\n  #\n  if test -z \"$PYTHONPATH\" ; then\n      export PYTHONPATH=/home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n  else\n      export PYTHONPATH=/home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64:$PYTHONPATH\n  fi\n```\n\nAfter building pvaPy, the environment setup files can be sourced to use\nthe built python module, e.g.:\n\n```sh\n  $ . /home/epics/v4/pvaPy/bin/linux-x86_64/pvapy_setup_pythonpath.2.7.sh\n  $ echo $PYTHONPATH\n  /home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n```\nor for csh users:\n\n```sh\n  % source /home/epics/v4/pvaPy/bin/linux-x86_64/pvapy_setup_pythonpath.2.7.csh\n  % echo $PYTHONPATH\n  /home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n```\n#### 2. Compile PvaPy Source\n\nIn the top level package directory run:\n\n```sh\n  $ make\n```\n\nThe above command will create and install a loadable library `pvaccess.so`\nunder the `lib/python` directory which can be imported directly by Python.\n\n#### 3. Generate Documentation\n\nThis step is optional and requires Sphinx to be installed:\n\n```sh\n  $ make doc\n```\n\nIf a `sphinx-build` script is present on the system, html pages will be\ngenerated in the `documentation/sphinx/_build/html` directory.\n\n## Basic Usage: PV put/get\n\nFor simple testing, do the following:\n\n1) In a separate terminal, start the testDbPv IOC:\n\n```sh\n  $ cd $EPICS4_DIR/pvaSrv/testTop/iocBoot/testDbPv\n  $ ../../bin/$EPICS_HOST_ARCH/testDbPv st.cmd\n```\n\n2) Source the appropriate setup file from pvaPy's `bin/$EPICS_HOST_ARCH`\ndirectory and start python (the Python PVA module is called pvaccess):\n\n```\n  $ python\n  >>> import pvaccess\n  >>> dir (pvaccess)\n  ['BOOLEAN', 'BYTE', 'CA', 'Channel', 'DOUBLE', 'FLOAT', 'FieldNotFound',\n  'INT', 'InvalidArgument', 'InvalidDataType', 'InvalidRequest', 'LONG',\n  'NtTable', 'NtType', 'PVA', 'ProviderType', 'PvAlarm', 'PvBoolean', 'PvByte',\n  'PvDouble', 'PvFloat', 'PvInt', 'PvLong', 'PvObject', 'PvScalar',\n  'PvScalarArray', 'PvShort', 'PvString', 'PvTimeStamp', 'PvType', 'PvUByte',\n  'PvUInt', 'PvULong', 'PvUShort', 'PvUnion', 'PvaException', 'RpcClient',\n  'RpcServer', 'SHORT', 'STRING', 'UBYTE', 'UINT', 'ULONG', 'USHORT', '__doc__',\n  '__file__', '__name__', '__package__']\n  >>> c = pvaccess.Channel('int01')\n  >>> print c.get()\n  epics:nt/NTScalar:1.0\n      int value 0\n  >>> c.putInt(7)\n  >>> print c.get()\n  epics:nt/NTScalar:1.0\n      int value 7\n  >>> c.put(pvaccess.PvInt(5))\n  >>> print c.get()\n  epics:nt/NTScalar:1.0\n      int value 5\n```\n\nIn the above, note that in addition to PV object classes like PvInt, one\ncan also use standard Python types as arguments for channel puts.\n\n\n## Basic Usage: PV monitor\n\n1) In a separate terminal, start the testDbPv IOC:\n\n```sh\n  $ cd $EPICS4_DIR/pvaSrv/testTop/iocBoot/testDbPv\n  $ ../../bin/$EPICS_HOST_ARCH/testDbPv st.cmd\n```\n\n2) PV values can be changed using the IOC shell command `dbpf`, e.g:\n\n```\n  epics> dbpr 'float01'\n  ASG:                DESC:               DISA: 0             DISP: 0\n  DISV: 1             NAME: float01       SEVR: MAJOR         STAT: LOLO\n  TPRO: 0             VAL: 0\n  epics> dbpf 'float01' 11.1\n  DBR_FLOAT:          11.1\n```\n\n3) Monitor a channel in Python, passing in a subscriber object (function\nthat processes PvObject instance):\n\n```python\n  >>> c = pvaccess.Channel('float01')\n  >>> def echo(x):\n  ...     print 'New PV value:', x\n  ...\n  >>> c.subscribe('echo', echo)\n  >>> c.startMonitor()\n  >>> New PV value: epics:nt/NTScalar:1.0\n      float value 11.1\n\n  New PV value: epics:nt/NTScalar:1.0\n      float value 11.2\n\n  New PV value: epics:nt/NTScalar:1.0\n      float value 11.3\n\n  >>> c.stopMonitor()\n```\n\n## Advanced Usage: PVA Server Class\n\n1) In terminal 1, create a simple 'pair' channel:\n\n```\n  $ python \n  >>> pv = PvObject({'x': INT, 'y' : INT})\n  >>> pvaServer = PvaServer('pair', pv)\n```\n\n2) In terminal 2, start monitoring this channel:\n\n```\n  $ pvget -m pair\n```\n\n3) In terminal 1, update one of the object's fields:\n\n```\n  >>> pv['x'] = 1\n```\n\nThis change should appear in terminal 2.\n\n## Advanced Usage: RPC Client Class\n\n1) In a separate terminal, start the v4 test RPC service:\n\n```sh\n  $ cd $EPICS4_DIR/pvAccessCPP/bin/$EPICS_HOST_ARCH\n  $ ./rpcServiceExample # in terminal 2\n```\n\n2) RPC test channel is 'sum':\n\n```python\n  >>> rpc = pvaccess.RpcClient('sum')\n  >>> request = pvaccess.PvObject({'a': pvaccess.STRING, 'b': pvaccess.STRING})\n  >>> request.set({'a': '11', 'b': '22' })\n  >>> print request\n  structure\n      string a 11\n      string b 22\n  >>> response = rpc.invoke(request)\n  >>> print response\n  structure\n      double c 33\n```\n\n## Advanced Usage: RPC Server Class\n\n### Example 1\n\n1) In a separate terminal, source the environment file and start python:\n\n```\n  $ python # in terminal 2\n  >>> import pvaccess\n  >>> srv = pvaccess.RpcServer()\n  >>> def echo(x):    # x is an instance of PvObject\n  ...     print 'Got object: ', x\n  ...     return x    # service must return an instance of PvObject\n  >>> srv.registerService('echo', echo)\n  >>> srv.listen()\n```\n\n2) In terminal 1, reuse previous request object\n\n```python\n  >>> rpc = pvaccess.RpcClient('echo')\n  >>> response = rpc.invoke(request)\n  >>> print response\n  structure\n      string a 11\n      string b 22\n```\n\n### Example 2\n\n1) In terminal 2:\n\n```\n  $ python\n  >>> import pvaccess\n  >>> srv = pvaccess.RpcServer()\n  >>> def sum(x):\n  ...     a = x.getInt('a')\n  ...     b = x.getInt('b')\n  ...     return pvaccess.PvInt(a+b)\n  >>> srv.registerService('sum', sum)\n  >>> srv.listen()\n```\n\n2) In terminal 1:\n\n```python\n  >>> rpc = pvaccess.RpcClient('sum')\n  >>> request = pvaccess.PvObject({'a': pvaccess.INT, 'b': pvaccess.INT})\n  >>> request.set({'a': 11, 'b': 22})\n  >>> print request\n  structure\n      int a 11\n      int b 22\n  >>> response = rpc.invoke(request)\n  >>> print response\n  structure\n      int value 33\n```\n\n### Example 3\n\n1) In terminal 2:\n\n```python\n  >>> import pvaccess\n  >>> srv = pvaccess.RpcServer()\n  >>> def hash(x):\n  ...     import hashlib\n  ...     md5 = hashlib.md5()\n  ...     md5.update(str(x))\n  ...     h = md5.hexdigest()\n  ...     dict = x.getStructureDict()\n  ...     dict['hash'] = pvaccess.STRING\n  ...     response = pvaccess.PvObject(dict)\n  ...     response.setString('hash', h)\n  ...     return response\n  >>> srv.registerService('hash', hash)\n  >>> srv.listen()\n```\n\n2) In terminal 1:\n\n```python\n  >>> rpc = pvaccess.RpcClient('hash')\n  >>> request = pvaccess.PvString('abcd')\n  >>> print rpc.invoke(request)\n  structure\n      string hash 0a380e7375d8c3f68d1bbe068141d6ce\n      string value\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/epics-base/pvaPy", "keywords": "", "license": "EPICS Open License", "maintainer": "", "maintainer_email": "", "name": "pvapy", "package_url": "https://pypi.org/project/pvapy/", "platform": "", "project_url": "https://pypi.org/project/pvapy/", "project_urls": {"Homepage": "https://github.com/epics-base/pvaPy"}, "release_url": "https://pypi.org/project/pvapy/2.2.0/", "requires_dist": ["numpy (>1.15)"], "requires_python": "", "summary": "Python library for EPICS PV Access", "version": "2.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PvaPy - PvAccess for Python</h1>\n<p>The PvaPy package is a Python API for EPICS4. It supports both PVA and CA\nproviders, all standard EPICS4 types (structures, scalars, unions, etc),\nstandard set of channel operations (put/get, monitor), RPC client/server,\nPVA server, etc. It uses Boost/Python to wrap EPICS4 C++ libraries and APIs,\nand is currently supported on the Unix-like operating systems (Linux, OSX).</p>\n<h2>Installation</h2>\n<p>At the moment prebuilt PvaPy packages exist for the Conda and\nPyPI package management system. If none of the prebuilt packages\nwork for you, or if you need 32-bit Linux packages, you will have to build\nPvaPy from sources.</p>\n<h3>Conda</h3>\n<ul>\n<li>Supported platforms: Linux (64-bit), OSX</li>\n<li>Supported Python versions: Python2, Python3</li>\n</ul>\n<p>Make sure <code>conda</code> command is in your path, and execute the following command:</p>\n<pre>  $ conda install -c epics pvapy\n</pre>\n<p>This should result in installation of pvapy, pvapy-boost and epics-base\nConda packages.</p>\n<h3>PyPI</h3>\n<ul>\n<li>Supported platforms: Linux (64-bit)</li>\n<li>Supported Python versions: Python2, Python3</li>\n</ul>\n<p>Make sure <code>pip</code> command is in your path, and execute the following command:</p>\n<pre>  $ pip install pvapy\n</pre>\n<p>PvaPy pip packages contain all needed epics base and boost libraries.</p>\n<h2>Build</h2>\n<p>This section is intended for those users that would like to build PvaPy from\nthe source code.</p>\n<h3>Prerequisites</h3>\n<p>Building PvaPy from source requires recent versions of the following software:</p>\n<ol>\n<li>Standard development tools (gcc, make, autoconf, etc.)</li>\n<li>Python development header files/libraries (&gt;=v2.6.6)</li>\n<li>Sphinx/Sphinx RTD Theme (optional, for generating documentation)</li>\n</ol>\n<p>There are two ways of building and installing PvaPy from sources: automated\nand custom. The automated local install will download and build predefined\nversions of EPICS Base, Boost and PvaPy. Custom local install relies on already existing EPICS Base and Boost libraries, and builds only PvaPy.</p>\n<h3>Automated Build</h3>\n<p>Make sure the desired version of Python is in your path, and execute the\nfollowing command from the top of the PvaPy source directory:</p>\n<pre>  $ <span class=\"nv\">PREFIX</span><span class=\"o\">=</span>/local/install/path make <span class=\"nb\">local</span>\n</pre>\n<p>This should build and install predefined versions of EPICS Base, Boost Python\nand PvaPy libraries under the directory specified by the PREFIX variable. If\nPREFIX is not specified, all software will be installed under the <code>tools/local</code>\nsubdirectory of the PvaPy distribution.</p>\n<h3>Custom Build</h3>\n<p>In addition to the Python-related prerequsites, the custom build requires\nthe following software already built:</p>\n<ol>\n<li>EPICS Base (&gt;=v3.14.12.3)</li>\n<li>EPICS4 CPP release (&gt;=v4.4.0); note that EPICS7 release includes\nall needed v4 modules</li>\n<li>Boost (&gt;=v1.41.0); must have the boost_python library built</li>\n<li>Boost.NumPy (optional, for retrieving numeric scalar arrays as numpy\narrays; this is not needed for Boost v1.63.0 and later)</li>\n</ol>\n<p>The version numbers mentioned above are the earliest that PvaPy was tested with.\nAny recent version of Python and the Boost libraries (such as those that come\nwith current linux distributions) should work. Similarly, any recent version\nof EPICS Base that is supported by EPICS4 CPP should be fine.</p>\n<p>Nothing special needs to be done when building the EPICS4 CPP modules. Ensure\nthat the EPICS Base installation you use for this module is the same one that\nwas used to build the EPICS4 modules.</p>\n<p>This module has not been adapted for use on Microsoft Windows. Only Unix-like\noperating systems (e.g. Linux, MacOS, Solaris) are currently supported.</p>\n<h4>1. Configure PvaPy</h4>\n<p>This can be done manually, or using autoconf.</p>\n<p>For manual configuration: Read the comments in both the <code>configure/RELEASE</code> and\n<code>configure/CONFIG_SITE</code> files and follow the instructions given there.</p>\n<p>For automatic configuration: In the top level directory run</p>\n<pre>  $ make configure <span class=\"nv\">EPICS_BASE</span><span class=\"o\">=</span>/epics/base/path <span class=\"o\">[</span><span class=\"nv\">EPICS4_DIR</span><span class=\"o\">=</span>/epics/v4/path<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"nv\">BOOST_NUM_PY_DIR</span><span class=\"o\">=</span>/boost.numpy/path<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"nv\">BOOST_ROOT</span><span class=\"o\">=</span>/boost/path<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"nv\">PYTHON_VERSION</span><span class=\"o\">=</span><span class=\"m\">3</span><span class=\"o\">]</span>\n</pre>\n<p>Note that you can only use the automatic configuration if the v4 modules have\nnot been renamed. In the above command replace <code>/epics/base/path</code> with the full\npath to your EPICS Base directory, and <code>/epics/v4/path</code> with the full path to\nyour top level directory containing the v4 modules pvDataCPP, pvAccessCPP, etc.\nIf you are using EPICS7 release, you can omit EPICS4_DIR argument, as\nconfiguration scripts will find the required v4 libraries and header files in\nthe EPICS Base directory.</p>\n<p>The optional <code>BOOST_NUM_PY_DIR</code> argument enables NumPy array support for older\nBoost versions, as v1.63.0 and later releases already include NumPy libraries.\nThe optional <code>BOOST_ROOT</code> argument is typically used for custom Boost\ninstallation directory. In case you are using custom python installation that\nuses shared object libraries, you may need to set PATH and LD_LIBRARY_PATH\nenvironment variables before running the above <code>make configure</code> command.\nAlso, note that building with python 3.x requires PYTHON_VERSION=3 argument.</p>\n<p>The <code>make configure</code> command will check for your Boost/Python libraries, and\ncreate suitable <code>configure/RELEASE.local</code> and <code>configure/CONFIG_SITE.local</code>\nfiles that are used by the build process. They should look roughly like the\nexamples below:</p>\n<pre>  $ cat RELEASE.local\n  <span class=\"nv\">PVACLIENT</span> <span class=\"o\">=</span> /home/epics/v4/pvaClientCPP\n  <span class=\"nv\">PVDATABASE</span> <span class=\"o\">=</span> /home/epics/v4/pvDatabaseCPP\n  <span class=\"nv\">NORMATIVETYPES</span> <span class=\"o\">=</span> /home/epics/v4/normativeTypesCPP\n  <span class=\"nv\">PVACCESS</span> <span class=\"o\">=</span> /home/epics/v4/pvAccessCPP\n  <span class=\"nv\">PVDATA</span> <span class=\"o\">=</span> /home/epics/v4/pvDataCPP\n  <span class=\"nv\">EPICS_BASE</span> <span class=\"o\">=</span> /home/epics/base-3.15.5\n\n  $ cat CONFIG_SITE.local\n  <span class=\"nv\">PVA_PY_CPPFLAGS</span> <span class=\"o\">=</span> -I/usr/include -I/usr/include/python2.7\n  <span class=\"nv\">PVA_PY_LDFLAGS</span> <span class=\"o\">=</span> -L/usr/lib64 -lpython2.7\n  <span class=\"nv\">PVA_PY_SYS_LIBS</span> <span class=\"o\">=</span> boost_python  \n  <span class=\"nv\">PVA_API_VERSION</span> <span class=\"o\">=</span> <span class=\"m\">480</span>\n  <span class=\"nv\">PVA_RPC_API_VERSION</span> <span class=\"o\">=</span> <span class=\"m\">480</span>\n  <span class=\"nv\">HAVE_BOOST_NUM_PY</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n  <span class=\"nv\">HAVE_BOOST_PYTHON_NUM_PY</span> <span class=\"o\">=</span> <span class=\"m\">0</span>\n  <span class=\"nv\">PYTHON_VERSION</span> <span class=\"o\">=</span> <span class=\"m\">2</span>.7\n  <span class=\"nv\">PVA_PY_PYTHON</span> <span class=\"o\">=</span> /bin/python\n  <span class=\"nv\">PVA_PY_PYTHONPATH</span> <span class=\"o\">=</span> /home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n  <span class=\"nv\">PVA_PY_LD_LIBRARY_PATH</span> <span class=\"o\">=</span> /usr/lib64\n  <span class=\"nv\">PVA_PY_EPICS_BASE</span> <span class=\"o\">=</span> /home/epics/base-3.15.5\n  <span class=\"nv\">PVA_PY_EPICS4_DIR</span> <span class=\"o\">=</span> /home/epics/v4\n  <span class=\"nv\">PVA_PY_HOST_ARCH</span> <span class=\"o\">=</span> linux-x86_64\n  <span class=\"nv\">PVA_PY_SETUP_SH</span> <span class=\"o\">=</span> /home/epics/pvaPy/bin/linux-x86_64/pvapy_setup_full.2.7.sh\n</pre>\n<p>The above files were created automatically on a 64-bit RHEL 7.4 machine, with\nthe following boost/python packages installed:</p>\n<pre>  $ rpm -q boost-python python-devel\n  boost-python-1.53.0-27.el7.x86_64\n  python-devel-2.7.5-58.el7.x86_64\n</pre>\n<p>Note that the automatic configuration process also creates\n<code>pvapy_setup_full.$PYTHON_VERSION.(c)sh</code> and\n<code>pvapy_setup_pythonpath.$PYTHON_VERSION.(c)sh</code> files in the\n<code>bin/$EPICS_HOST_ARCH</code> directory. The full setup files modify PATH,\nLD_LIBRARY_PATH and PYTHONPATH environment variables, while the pythonpath\nsetup files modify only PYTHONPATH variable. For example,</p>\n<pre>  $ cat pvapy_setup_pythonpath.2.7.sh\n  <span class=\"c1\">#!/bin/sh</span>\n  <span class=\"c1\">#</span>\n  <span class=\"c1\"># modifies PYTHONPATH environment variable</span>\n  <span class=\"c1\">#</span>\n  <span class=\"k\">if</span> <span class=\"nb\">test</span> -z <span class=\"s2\">\"</span><span class=\"nv\">$PYTHONPATH</span><span class=\"s2\">\"</span> <span class=\"p\">;</span> <span class=\"k\">then</span>\n      <span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span>/home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n  <span class=\"k\">else</span>\n      <span class=\"nb\">export</span> <span class=\"nv\">PYTHONPATH</span><span class=\"o\">=</span>/home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64:<span class=\"nv\">$PYTHONPATH</span>\n  <span class=\"k\">fi</span>\n</pre>\n<p>After building pvaPy, the environment setup files can be sourced to use\nthe built python module, e.g.:</p>\n<pre>  $ . /home/epics/v4/pvaPy/bin/linux-x86_64/pvapy_setup_pythonpath.2.7.sh\n  $ <span class=\"nb\">echo</span> <span class=\"nv\">$PYTHONPATH</span>\n  /home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n</pre>\n<p>or for csh users:</p>\n<pre>  % <span class=\"nb\">source</span> /home/epics/v4/pvaPy/bin/linux-x86_64/pvapy_setup_pythonpath.2.7.csh\n  % <span class=\"nb\">echo</span> <span class=\"nv\">$PYTHONPATH</span>\n  /home/epics/v4/pvaPy/lib/python/2.7/linux-x86_64\n</pre>\n<h4>2. Compile PvaPy Source</h4>\n<p>In the top level package directory run:</p>\n<pre>  $ make\n</pre>\n<p>The above command will create and install a loadable library <code>pvaccess.so</code>\nunder the <code>lib/python</code> directory which can be imported directly by Python.</p>\n<h4>3. Generate Documentation</h4>\n<p>This step is optional and requires Sphinx to be installed:</p>\n<pre>  $ make doc\n</pre>\n<p>If a <code>sphinx-build</code> script is present on the system, html pages will be\ngenerated in the <code>documentation/sphinx/_build/html</code> directory.</p>\n<h2>Basic Usage: PV put/get</h2>\n<p>For simple testing, do the following:</p>\n<ol>\n<li>In a separate terminal, start the testDbPv IOC:</li>\n</ol>\n<pre>  $ <span class=\"nb\">cd</span> <span class=\"nv\">$EPICS4_DIR</span>/pvaSrv/testTop/iocBoot/testDbPv\n  $ ../../bin/<span class=\"nv\">$EPICS_HOST_ARCH</span>/testDbPv st.cmd\n</pre>\n<ol>\n<li>Source the appropriate setup file from pvaPy's <code>bin/$EPICS_HOST_ARCH</code>\ndirectory and start python (the Python PVA module is called pvaccess):</li>\n</ol>\n<pre><code>  $ python\n  &gt;&gt;&gt; import pvaccess\n  &gt;&gt;&gt; dir (pvaccess)\n  ['BOOLEAN', 'BYTE', 'CA', 'Channel', 'DOUBLE', 'FLOAT', 'FieldNotFound',\n  'INT', 'InvalidArgument', 'InvalidDataType', 'InvalidRequest', 'LONG',\n  'NtTable', 'NtType', 'PVA', 'ProviderType', 'PvAlarm', 'PvBoolean', 'PvByte',\n  'PvDouble', 'PvFloat', 'PvInt', 'PvLong', 'PvObject', 'PvScalar',\n  'PvScalarArray', 'PvShort', 'PvString', 'PvTimeStamp', 'PvType', 'PvUByte',\n  'PvUInt', 'PvULong', 'PvUShort', 'PvUnion', 'PvaException', 'RpcClient',\n  'RpcServer', 'SHORT', 'STRING', 'UBYTE', 'UINT', 'ULONG', 'USHORT', '__doc__',\n  '__file__', '__name__', '__package__']\n  &gt;&gt;&gt; c = pvaccess.Channel('int01')\n  &gt;&gt;&gt; print c.get()\n  epics:nt/NTScalar:1.0\n      int value 0\n  &gt;&gt;&gt; c.putInt(7)\n  &gt;&gt;&gt; print c.get()\n  epics:nt/NTScalar:1.0\n      int value 7\n  &gt;&gt;&gt; c.put(pvaccess.PvInt(5))\n  &gt;&gt;&gt; print c.get()\n  epics:nt/NTScalar:1.0\n      int value 5\n</code></pre>\n<p>In the above, note that in addition to PV object classes like PvInt, one\ncan also use standard Python types as arguments for channel puts.</p>\n<h2>Basic Usage: PV monitor</h2>\n<ol>\n<li>In a separate terminal, start the testDbPv IOC:</li>\n</ol>\n<pre>  $ <span class=\"nb\">cd</span> <span class=\"nv\">$EPICS4_DIR</span>/pvaSrv/testTop/iocBoot/testDbPv\n  $ ../../bin/<span class=\"nv\">$EPICS_HOST_ARCH</span>/testDbPv st.cmd\n</pre>\n<ol>\n<li>PV values can be changed using the IOC shell command <code>dbpf</code>, e.g:</li>\n</ol>\n<pre><code>  epics&gt; dbpr 'float01'\n  ASG:                DESC:               DISA: 0             DISP: 0\n  DISV: 1             NAME: float01       SEVR: MAJOR         STAT: LOLO\n  TPRO: 0             VAL: 0\n  epics&gt; dbpf 'float01' 11.1\n  DBR_FLOAT:          11.1\n</code></pre>\n<ol>\n<li>Monitor a channel in Python, passing in a subscriber object (function\nthat processes PvObject instance):</li>\n</ol>\n<pre>  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">Channel</span><span class=\"p\">(</span><span class=\"s1\">'float01'</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">echo</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>     <span class=\"nb\">print</span> <span class=\"s1\">'New PV value:'</span><span class=\"p\">,</span> <span class=\"n\">x</span>\n  <span class=\"o\">...</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">subscribe</span><span class=\"p\">(</span><span class=\"s1\">'echo'</span><span class=\"p\">,</span> <span class=\"n\">echo</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">startMonitor</span><span class=\"p\">()</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">New</span> <span class=\"n\">PV</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">epics</span><span class=\"p\">:</span><span class=\"n\">nt</span><span class=\"o\">/</span><span class=\"n\">NTScalar</span><span class=\"p\">:</span><span class=\"mf\">1.0</span>\n      <span class=\"nb\">float</span> <span class=\"n\">value</span> <span class=\"mf\">11.1</span>\n\n  <span class=\"n\">New</span> <span class=\"n\">PV</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">epics</span><span class=\"p\">:</span><span class=\"n\">nt</span><span class=\"o\">/</span><span class=\"n\">NTScalar</span><span class=\"p\">:</span><span class=\"mf\">1.0</span>\n      <span class=\"nb\">float</span> <span class=\"n\">value</span> <span class=\"mf\">11.2</span>\n\n  <span class=\"n\">New</span> <span class=\"n\">PV</span> <span class=\"n\">value</span><span class=\"p\">:</span> <span class=\"n\">epics</span><span class=\"p\">:</span><span class=\"n\">nt</span><span class=\"o\">/</span><span class=\"n\">NTScalar</span><span class=\"p\">:</span><span class=\"mf\">1.0</span>\n      <span class=\"nb\">float</span> <span class=\"n\">value</span> <span class=\"mf\">11.3</span>\n\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">stopMonitor</span><span class=\"p\">()</span>\n</pre>\n<h2>Advanced Usage: PVA Server Class</h2>\n<ol>\n<li>In terminal 1, create a simple 'pair' channel:</li>\n</ol>\n<pre><code>  $ python \n  &gt;&gt;&gt; pv = PvObject({'x': INT, 'y' : INT})\n  &gt;&gt;&gt; pvaServer = PvaServer('pair', pv)\n</code></pre>\n<ol>\n<li>In terminal 2, start monitoring this channel:</li>\n</ol>\n<pre><code>  $ pvget -m pair\n</code></pre>\n<ol>\n<li>In terminal 1, update one of the object's fields:</li>\n</ol>\n<pre><code>  &gt;&gt;&gt; pv['x'] = 1\n</code></pre>\n<p>This change should appear in terminal 2.</p>\n<h2>Advanced Usage: RPC Client Class</h2>\n<ol>\n<li>In a separate terminal, start the v4 test RPC service:</li>\n</ol>\n<pre>  $ <span class=\"nb\">cd</span> <span class=\"nv\">$EPICS4_DIR</span>/pvAccessCPP/bin/<span class=\"nv\">$EPICS_HOST_ARCH</span>\n  $ ./rpcServiceExample <span class=\"c1\"># in terminal 2</span>\n</pre>\n<ol>\n<li>RPC test channel is 'sum':</li>\n</ol>\n<pre>  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">RpcClient</span><span class=\"p\">(</span><span class=\"s1\">'sum'</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">PvObject</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">STRING</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">STRING</span><span class=\"p\">})</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"s1\">'11'</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"s1\">'22'</span> <span class=\"p\">})</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">request</span>\n  <span class=\"n\">structure</span>\n      <span class=\"n\">string</span> <span class=\"n\">a</span> <span class=\"mi\">11</span>\n      <span class=\"n\">string</span> <span class=\"n\">b</span> <span class=\"mi\">22</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">invoke</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">response</span>\n  <span class=\"n\">structure</span>\n      <span class=\"n\">double</span> <span class=\"n\">c</span> <span class=\"mi\">33</span>\n</pre>\n<h2>Advanced Usage: RPC Server Class</h2>\n<h3>Example 1</h3>\n<ol>\n<li>In a separate terminal, source the environment file and start python:</li>\n</ol>\n<pre><code>  $ python # in terminal 2\n  &gt;&gt;&gt; import pvaccess\n  &gt;&gt;&gt; srv = pvaccess.RpcServer()\n  &gt;&gt;&gt; def echo(x):    # x is an instance of PvObject\n  ...     print 'Got object: ', x\n  ...     return x    # service must return an instance of PvObject\n  &gt;&gt;&gt; srv.registerService('echo', echo)\n  &gt;&gt;&gt; srv.listen()\n</code></pre>\n<ol>\n<li>In terminal 1, reuse previous request object</li>\n</ol>\n<pre>  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">RpcClient</span><span class=\"p\">(</span><span class=\"s1\">'echo'</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">invoke</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">response</span>\n  <span class=\"n\">structure</span>\n      <span class=\"n\">string</span> <span class=\"n\">a</span> <span class=\"mi\">11</span>\n      <span class=\"n\">string</span> <span class=\"n\">b</span> <span class=\"mi\">22</span>\n</pre>\n<h3>Example 2</h3>\n<ol>\n<li>In terminal 2:</li>\n</ol>\n<pre><code>  $ python\n  &gt;&gt;&gt; import pvaccess\n  &gt;&gt;&gt; srv = pvaccess.RpcServer()\n  &gt;&gt;&gt; def sum(x):\n  ...     a = x.getInt('a')\n  ...     b = x.getInt('b')\n  ...     return pvaccess.PvInt(a+b)\n  &gt;&gt;&gt; srv.registerService('sum', sum)\n  &gt;&gt;&gt; srv.listen()\n</code></pre>\n<ol>\n<li>In terminal 1:</li>\n</ol>\n<pre>  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">RpcClient</span><span class=\"p\">(</span><span class=\"s1\">'sum'</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">PvObject</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">INT</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">INT</span><span class=\"p\">})</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">set</span><span class=\"p\">({</span><span class=\"s1\">'a'</span><span class=\"p\">:</span> <span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"s1\">'b'</span><span class=\"p\">:</span> <span class=\"mi\">22</span><span class=\"p\">})</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">request</span>\n  <span class=\"n\">structure</span>\n      <span class=\"nb\">int</span> <span class=\"n\">a</span> <span class=\"mi\">11</span>\n      <span class=\"nb\">int</span> <span class=\"n\">b</span> <span class=\"mi\">22</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">invoke</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">response</span>\n  <span class=\"n\">structure</span>\n      <span class=\"nb\">int</span> <span class=\"n\">value</span> <span class=\"mi\">33</span>\n</pre>\n<h3>Example 3</h3>\n<ol>\n<li>In terminal 2:</li>\n</ol>\n<pre>  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pvaccess</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">srv</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">RpcServer</span><span class=\"p\">()</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">hash</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">):</span>\n  <span class=\"o\">...</span>     <span class=\"kn\">import</span> <span class=\"nn\">hashlib</span>\n  <span class=\"o\">...</span>     <span class=\"n\">md5</span> <span class=\"o\">=</span> <span class=\"n\">hashlib</span><span class=\"o\">.</span><span class=\"n\">md5</span><span class=\"p\">()</span>\n  <span class=\"o\">...</span>     <span class=\"n\">md5</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n  <span class=\"o\">...</span>     <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">md5</span><span class=\"o\">.</span><span class=\"n\">hexdigest</span><span class=\"p\">()</span>\n  <span class=\"o\">...</span>     <span class=\"nb\">dict</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">getStructureDict</span><span class=\"p\">()</span>\n  <span class=\"o\">...</span>     <span class=\"nb\">dict</span><span class=\"p\">[</span><span class=\"s1\">'hash'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">STRING</span>\n  <span class=\"o\">...</span>     <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">PvObject</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">)</span>\n  <span class=\"o\">...</span>     <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">setString</span><span class=\"p\">(</span><span class=\"s1\">'hash'</span><span class=\"p\">,</span> <span class=\"n\">h</span><span class=\"p\">)</span>\n  <span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">response</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">srv</span><span class=\"o\">.</span><span class=\"n\">registerService</span><span class=\"p\">(</span><span class=\"s1\">'hash'</span><span class=\"p\">,</span> <span class=\"nb\">hash</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">srv</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">()</span>\n</pre>\n<ol>\n<li>In terminal 1:</li>\n</ol>\n<pre>  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rpc</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">RpcClient</span><span class=\"p\">(</span><span class=\"s1\">'hash'</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">pvaccess</span><span class=\"o\">.</span><span class=\"n\">PvString</span><span class=\"p\">(</span><span class=\"s1\">'abcd'</span><span class=\"p\">)</span>\n  <span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span> <span class=\"n\">rpc</span><span class=\"o\">.</span><span class=\"n\">invoke</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n  <span class=\"n\">structure</span>\n      <span class=\"n\">string</span> <span class=\"nb\">hash</span> <span class=\"mi\">0</span><span class=\"n\">a380e7375d8c3f68d1bbe068141d6ce</span>\n      <span class=\"n\">string</span> <span class=\"n\">value</span>\n</pre>\n\n          </div>"}, "last_serial": 7085966, "releases": {"1.3.0": [{"comment_text": "", "digests": {"md5": "e4ecff0561c48b15b974073ab54f1723", "sha256": "166092f770797f205de2ab74dff00d79131abde3608096809161ea07094be74f"}, "downloads": -1, "filename": "pvapy-1.3.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e4ecff0561c48b15b974073ab54f1723", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 55032025, "upload_time": "2019-03-16T16:28:16", "upload_time_iso_8601": "2019-03-16T16:28:16.725926Z", "url": "https://files.pythonhosted.org/packages/90/4c/070a0ac1fac05426e32b839b6e1f2a8e8e2c4fc7e458c18be59d2ad3bd67/pvapy-1.3.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f45893e5877e4d6517acf6289ceaa14", "sha256": "c4318e0b3c89d906e844ffe0f83ece16d660dffc02ac5289a407441016a8405e"}, "downloads": -1, "filename": "pvapy-1.3.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9f45893e5877e4d6517acf6289ceaa14", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 55032105, "upload_time": "2019-03-16T16:28:42", "upload_time_iso_8601": "2019-03-16T16:28:42.233255Z", "url": "https://files.pythonhosted.org/packages/a3/77/99ecd2ccc5939019759bbd5020c0053b3fa43fbf1c9b35f098ed11c6a52d/pvapy-1.3.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a7d53eb0ccd82ee5581741a4e2a1fab", "sha256": "90db333adb7c284a1057b26e51ffb852bac1bf21c44b08e5b225535f602f9fae"}, "downloads": -1, "filename": "pvapy-1.3.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "7a7d53eb0ccd82ee5581741a4e2a1fab", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 55039701, "upload_time": "2019-03-16T16:29:07", "upload_time_iso_8601": "2019-03-16T16:29:07.455268Z", "url": "https://files.pythonhosted.org/packages/63/1e/dccb319a575b2979244525f0756ffaaaf580c0551411cf346fb027a5b5c3/pvapy-1.3.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f23c24c07be84a145a89ead14a4ca4e", "sha256": "4f57e0c74a7c572e09602ebbac4a58a18e636fc338413eac27292bad09cb3d18"}, "downloads": -1, "filename": "pvapy-1.3.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6f23c24c07be84a145a89ead14a4ca4e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 55042917, "upload_time": "2019-03-16T16:29:32", "upload_time_iso_8601": "2019-03-16T16:29:32.611249Z", "url": "https://files.pythonhosted.org/packages/59/74/e1073af9f9f3198862614d31ddc74ab6d591c234ad9e8e47e95fe82ae0da/pvapy-1.3.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "e61cdf06c53c4a269a7fbee29d82a34f", "sha256": "1bfdf2d6748acc502fc7da4b48925192986c66a48e7713587d9452a74ff385d4"}, "downloads": -1, "filename": "pvapy-1.4.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e61cdf06c53c4a269a7fbee29d82a34f", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 61513810, "upload_time": "2019-03-31T15:35:50", "upload_time_iso_8601": "2019-03-31T15:35:50.408309Z", "url": "https://files.pythonhosted.org/packages/00/27/19d4d68a5c0bac0cee099851308146e688d95f2b19878c2637390783f80c/pvapy-1.4.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f7c4cdf80d7e2b5cfcb01ab7fc243a0", "sha256": "6013f8ea4c4ba6f862fbca918584dfdcdc041b7ebd7da56b49ee379c94edb90a"}, "downloads": -1, "filename": "pvapy-1.4.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "0f7c4cdf80d7e2b5cfcb01ab7fc243a0", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 61512436, "upload_time": "2019-03-31T15:36:18", "upload_time_iso_8601": "2019-03-31T15:36:18.713754Z", "url": "https://files.pythonhosted.org/packages/00/ea/d9efb150ca7d00df06458578ad8c662dc9486bf7f05efbe068cb287755e6/pvapy-1.4.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c03d348a327d85bfd2d4311151acdf0f", "sha256": "39070ce21e3be14078c6e764d6219bce6ef73d0620719e8462a24272b97490b5"}, "downloads": -1, "filename": "pvapy-1.4.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c03d348a327d85bfd2d4311151acdf0f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 61510557, "upload_time": "2019-03-31T15:36:46", "upload_time_iso_8601": "2019-03-31T15:36:46.345271Z", "url": "https://files.pythonhosted.org/packages/f1/63/1aa389e9c915601ef11d2458d4fa081b9146313606ca32cbeb3c30268505/pvapy-1.4.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a757e9965c595a04170bb489ef012076", "sha256": "53bbcd129ef9890908ca8fa7f7f1051731befeea04450802c3110ce3c50baffd"}, "downloads": -1, "filename": "pvapy-1.4.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "a757e9965c595a04170bb489ef012076", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 61511604, "upload_time": "2019-03-31T15:37:18", "upload_time_iso_8601": "2019-03-31T15:37:18.104206Z", "url": "https://files.pythonhosted.org/packages/0d/75/ab1e3f73982837dd411e660860c301af8d1781503b5206a802e8867f35c4/pvapy-1.4.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "bb38be4af958773535cd1243eff77f62", "sha256": "b0c29e50d28f071a19c22ec2545f8f1dfd0918a8965f599eb8e0c5b5f2394527"}, "downloads": -1, "filename": "pvapy-1.5.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "bb38be4af958773535cd1243eff77f62", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 62314923, "upload_time": "2019-04-26T13:30:06", "upload_time_iso_8601": "2019-04-26T13:30:06.666781Z", "url": "https://files.pythonhosted.org/packages/02/cc/7dc95ad0c8d07ba83bda7bf81e7a912e274fdb1afb4d553bf0f4633d7bb3/pvapy-1.5.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5d2f0feaa9c08f54e897429f8d19af51", "sha256": "c87467ed278cdae7ecaffc710c99e37be05683a0c5948e7802fbfb97ad0885c6"}, "downloads": -1, "filename": "pvapy-1.5.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5d2f0feaa9c08f54e897429f8d19af51", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 62314684, "upload_time": "2019-04-26T13:30:38", "upload_time_iso_8601": "2019-04-26T13:30:38.502779Z", "url": "https://files.pythonhosted.org/packages/bd/e2/0f9538a1aac48f9aee38218c7e4d40625579acee45dfbbfc3eb281a4f0cb/pvapy-1.5.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76198e60d077beccbaf3f2c792e4799a", "sha256": "a0597bd0278e578eae425daf01a92d38e05a945b03e8121bf0e4e930cd492d00"}, "downloads": -1, "filename": "pvapy-1.5.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "76198e60d077beccbaf3f2c792e4799a", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 62309177, "upload_time": "2019-04-26T13:31:15", "upload_time_iso_8601": "2019-04-26T13:31:15.127324Z", "url": "https://files.pythonhosted.org/packages/3c/8d/be0183a7f2177e81bee3c8b362aabbc236e3d1e8fd825da613856b5c28bc/pvapy-1.5.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e0ac02da90ba6eb5d6cdae736440ab0", "sha256": "dac2587f1fc48b08bd41fae994e44feffe70884dfb148303743875258b743666"}, "downloads": -1, "filename": "pvapy-1.5.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8e0ac02da90ba6eb5d6cdae736440ab0", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 62309604, "upload_time": "2019-04-26T13:31:49", "upload_time_iso_8601": "2019-04-26T13:31:49.574783Z", "url": "https://files.pythonhosted.org/packages/a3/d9/26a1a069a02ef22dd9690231a6d7795ef2678540f1e6b311db26ae94ca69/pvapy-1.5.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "f1f23d9ffe7aaa185c103263b86c745b", "sha256": "58a9b9ad5ef4ba31d35dabffb5ab0c3803e9615393c3c9dfc211d9bc11e28cf8"}, "downloads": -1, "filename": "pvapy-1.6.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f1f23d9ffe7aaa185c103263b86c745b", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 62310050, "upload_time": "2019-05-11T03:46:15", "upload_time_iso_8601": "2019-05-11T03:46:15.240071Z", "url": "https://files.pythonhosted.org/packages/a3/4a/13f1eaba6ab2278563574213ad660e0108a91b8c9947eedf5dead0531994/pvapy-1.6.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14dc166463ac015e12673ac6c15be5f0", "sha256": "92a5fde532ba80a76c0e6fe398bd89aadaa5136b8982c11f285eec066b572d1d"}, "downloads": -1, "filename": "pvapy-1.6.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "14dc166463ac015e12673ac6c15be5f0", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 62310276, "upload_time": "2019-05-11T03:46:44", "upload_time_iso_8601": "2019-05-11T03:46:44.755088Z", "url": "https://files.pythonhosted.org/packages/1f/60/1aba5817709aa14589b8ac61f7c8aa75693e6ee00bf24b6d02a7f6296aea/pvapy-1.6.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3bad655251a869827f8bec9c4d6bfca", "sha256": "ff7be7169e787d10d08bc1eb2bd4b419fdd8514fc49fdfa0b0daa1022b8a8e95"}, "downloads": -1, "filename": "pvapy-1.6.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "f3bad655251a869827f8bec9c4d6bfca", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 62303592, "upload_time": "2019-05-11T03:47:14", "upload_time_iso_8601": "2019-05-11T03:47:14.887525Z", "url": "https://files.pythonhosted.org/packages/39/41/9672263b80b3d107ca5a6e530d216393537e6346c31cb4a69d84bbb3299d/pvapy-1.6.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c61b0cfed40dfdd96a0f6f538a4e859e", "sha256": "4041b11d2cdd024357ab9313f38d8197c8c43f8c88dc7491e624d6401e62b181"}, "downloads": -1, "filename": "pvapy-1.6.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c61b0cfed40dfdd96a0f6f538a4e859e", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 62303527, "upload_time": "2019-05-11T03:47:45", "upload_time_iso_8601": "2019-05-11T03:47:45.113068Z", "url": "https://files.pythonhosted.org/packages/58/f5/00699c4ecf95d9ac9313496fd3dc19370fc73c36a69d9243d5c500f9fec8/pvapy-1.6.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "af5e5c7550ea59bba27f7d3846d47950", "sha256": "e00a522ff8d48f79082d222f651207e007a658ba54bb0330ac0912f3744945e9"}, "downloads": -1, "filename": "pvapy-2.0.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "af5e5c7550ea59bba27f7d3846d47950", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12788123, "upload_time": "2019-08-12T02:10:29", "upload_time_iso_8601": "2019-08-12T02:10:29.531280Z", "url": "https://files.pythonhosted.org/packages/47/56/21f682a263eb0a5b418d57bbd30cd15a4f948b85c7ea936f385afc95ff36/pvapy-2.0.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a68d017648042ca11aba32a161afb62", "sha256": "e3bc982503d44e09e7d97e56f6233f8f144a9ea4a028e9b0565a7dc9bca7100f"}, "downloads": -1, "filename": "pvapy-2.0.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2a68d017648042ca11aba32a161afb62", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12788209, "upload_time": "2019-08-12T02:10:37", "upload_time_iso_8601": "2019-08-12T02:10:37.479530Z", "url": "https://files.pythonhosted.org/packages/94/d6/70568e171797cacc0797420a8bf3a7f05514bcc3d7d1f59a0a00638db42f/pvapy-2.0.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c3e7bd3e88f3783bd8c67f382e055d5", "sha256": "e46b5f98df2dd09704a59838abb71bb43930bcfa6e479ab7ca53e86e5545cb10"}, "downloads": -1, "filename": "pvapy-2.0.0-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "2c3e7bd3e88f3783bd8c67f382e055d5", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 12782837, "upload_time": "2019-08-12T02:10:45", "upload_time_iso_8601": "2019-08-12T02:10:45.386937Z", "url": "https://files.pythonhosted.org/packages/78/3f/16f71ef573a30eab32ae502b100d6e7473f9377f7ab87c2b43f8f544d043/pvapy-2.0.0-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3944c47c2ec38798611cb85c9a9b32ab", "sha256": "6f536eec8990dbeeef0a890af9bf9fb80705023e8f1be5a9a1f8c2159d702f37"}, "downloads": -1, "filename": "pvapy-2.0.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3944c47c2ec38798611cb85c9a9b32ab", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 12770057, "upload_time": "2019-08-12T02:10:53", "upload_time_iso_8601": "2019-08-12T02:10:53.384505Z", "url": "https://files.pythonhosted.org/packages/8a/0c/0bd70441f3f4a749cfb98d24b8d0bbbffc6122b3ce7a8f7ca611bfa18501/pvapy-2.0.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "22561eed6d0e1047caf456eb762205a8", "sha256": "c5807771dcbbc1501ecb67c973c08620b2c06ee622faa7396903c7e387bcbffe"}, "downloads": -1, "filename": "pvapy-2.0.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "22561eed6d0e1047caf456eb762205a8", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12770060, "upload_time": "2019-08-12T02:11:02", "upload_time_iso_8601": "2019-08-12T02:11:02.090916Z", "url": "https://files.pythonhosted.org/packages/13/91/ac7e44b5c7a95b9211cfd579e0e10ad87412fdb65500d82f5e211b5ef874/pvapy-2.0.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9c37850538e273a436a11a53f8dd4d9c", "sha256": "56399997ee84d9c1505dacea3555bb4b278980da04d21d9d1abdae8d52b1754b"}, "downloads": -1, "filename": "pvapy-2.0.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "9c37850538e273a436a11a53f8dd4d9c", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12770053, "upload_time": "2019-08-12T02:11:10", "upload_time_iso_8601": "2019-08-12T02:11:10.970175Z", "url": "https://files.pythonhosted.org/packages/f6/f6/e6d0b76d863066724339fa7182df6db553ca1bf1ddd4bade5890c5bcebee/pvapy-2.0.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}], "2.0.1": [{"comment_text": "", "digests": {"md5": "e675157de9fa518abe0373caf0deec84", "sha256": "571c26f3970614a4389165da4d5af67b121cb3f9c239e6f424c123b57dbb7d3c"}, "downloads": -1, "filename": "pvapy-2.0.1-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e675157de9fa518abe0373caf0deec84", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12838025, "upload_time": "2019-11-28T00:59:06", "upload_time_iso_8601": "2019-11-28T00:59:06.881037Z", "url": "https://files.pythonhosted.org/packages/42/34/81c0bd9dbdaf4758140c6b1fae690e7a745b406515956f592d2a2c73c778/pvapy-2.0.1-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b759cd18014fb51330abe408884f3f5", "sha256": "c32408b2f1f36097f2eee6086b0abb5751f4297b8fd8d4556e802045a2fee5d9"}, "downloads": -1, "filename": "pvapy-2.0.1-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "5b759cd18014fb51330abe408884f3f5", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12838109, "upload_time": "2019-11-28T00:59:14", "upload_time_iso_8601": "2019-11-28T00:59:14.708736Z", "url": "https://files.pythonhosted.org/packages/bb/43/166ae5f5d640a479e9402014945a8b682425eba0ec71de383d5686b8378c/pvapy-2.0.1-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd9f68d08f966dbad8f61a612b23eb79", "sha256": "625a841f8d9fd4a7734242003aa8506d26832dd281f58a9b672da4a456a7a302"}, "downloads": -1, "filename": "pvapy-2.0.1-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fd9f68d08f966dbad8f61a612b23eb79", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 12832757, "upload_time": "2019-11-28T00:59:22", "upload_time_iso_8601": "2019-11-28T00:59:22.575763Z", "url": "https://files.pythonhosted.org/packages/c0/73/aec864c7e3b960c55bece5dca168ab249f78a8aa217f35308f58028f9ead/pvapy-2.0.1-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f8d16e2670d6909db4462bf19814156", "sha256": "7093cba9b021f9cd9aaee8b2d2186e305517655ee07c0d377140ef59d5a9d883"}, "downloads": -1, "filename": "pvapy-2.0.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "3f8d16e2670d6909db4462bf19814156", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 12824472, "upload_time": "2019-11-28T00:59:30", "upload_time_iso_8601": "2019-11-28T00:59:30.472284Z", "url": "https://files.pythonhosted.org/packages/75/6c/23482ed5b826385abf6181c56fcfd519b9760ff273919a628c225c0d6b6b/pvapy-2.0.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bccb87654946d9bb2ac58055d4b6aa7f", "sha256": "8a5f07e60584eec86685a68e6a16db989f2c6f78f6eda2e0cc552f0bdabb190e"}, "downloads": -1, "filename": "pvapy-2.0.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "bccb87654946d9bb2ac58055d4b6aa7f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12824490, "upload_time": "2019-11-28T00:59:38", "upload_time_iso_8601": "2019-11-28T00:59:38.382513Z", "url": "https://files.pythonhosted.org/packages/a0/82/3467cfdb3703be5867b0475ba7cbb8de960cbe344995fabb5466c9e8420f/pvapy-2.0.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b6faf6a397f4fe992fe643cd3c9cff78", "sha256": "09ac1a876eea0371f191f85698f53f0a22b2d89a9a150cbbb6e8f29806a64072"}, "downloads": -1, "filename": "pvapy-2.0.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b6faf6a397f4fe992fe643cd3c9cff78", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12824480, "upload_time": "2019-11-28T00:59:48", "upload_time_iso_8601": "2019-11-28T00:59:48.201359Z", "url": "https://files.pythonhosted.org/packages/0a/3b/fffb7c99eeb86b4c44ef255f8d28fce6027f108e94b88decfe8995dcea78/pvapy-2.0.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6107f9ef3de0dadc241d1571e79da275", "sha256": "0572aca0d36ee4fa281adb4f10ae23aaa9e32137a7b8b72fcf3646d8593b6aac"}, "downloads": -1, "filename": "pvapy-2.0.1-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "6107f9ef3de0dadc241d1571e79da275", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 12845341, "upload_time": "2019-11-28T00:59:57", "upload_time_iso_8601": "2019-11-28T00:59:57.461547Z", "url": "https://files.pythonhosted.org/packages/e1/7d/a7d8fe21e8c535c21e4fc07965621cdd6225d1d74a1ab3fe4922962684e6/pvapy-2.0.1-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "8a6b1ae556257485fb9d7e0d1cfbfde9", "sha256": "69c3c158cdce5aac4ebb4852dcb90482473c80b65e067bf3c3ff885d0ce8b84e"}, "downloads": -1, "filename": "pvapy-2.1.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "8a6b1ae556257485fb9d7e0d1cfbfde9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12843702, "upload_time": "2020-01-22T00:47:40", "upload_time_iso_8601": "2020-01-22T00:47:40.171849Z", "url": "https://files.pythonhosted.org/packages/72/ab/df423b22d94a2d21dc9c7016c92246f79fde594087cdbeaa21e9e993127c/pvapy-2.1.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "49567a28db96129e70c7228e4984aa36", "sha256": "318e34de38219d7cc171f61a5e67c348c999e8e7a9ae29968508d9c3b92bb999"}, "downloads": -1, "filename": "pvapy-2.1.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "49567a28db96129e70c7228e4984aa36", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12843788, "upload_time": "2020-01-22T00:47:47", "upload_time_iso_8601": "2020-01-22T00:47:47.868546Z", "url": "https://files.pythonhosted.org/packages/5c/bf/90ff6ef4a2e06e3a5c174daf167271b297e2c4448f8604ff4afa861bde29/pvapy-2.1.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "28aaa02096db8947159c0cb10d210097", "sha256": "2a5db5d0d630d8a6e15c4749986224dacd3f2c8824bbc7c439fb6cd6397fbc46"}, "downloads": -1, "filename": "pvapy-2.1.0-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "28aaa02096db8947159c0cb10d210097", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 12838431, "upload_time": "2020-01-22T00:47:55", "upload_time_iso_8601": "2020-01-22T00:47:55.447256Z", "url": "https://files.pythonhosted.org/packages/3d/db/4853cc5eddec26c9794523ebbf9432db79f8f1995d14d23f951f83e989a3/pvapy-2.1.0-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97db1cd3cdf4510462b099c732e62554", "sha256": "c7f73e772b3be403d193298aae169a87c41fdff35754db3298ea0aa232ab8e80"}, "downloads": -1, "filename": "pvapy-2.1.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "97db1cd3cdf4510462b099c732e62554", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 12830260, "upload_time": "2020-01-22T00:48:02", "upload_time_iso_8601": "2020-01-22T00:48:02.890571Z", "url": "https://files.pythonhosted.org/packages/58/e7/45230c0940cb9fd38cdd6e40a73775b66aa7bf0adc2aae42a51c41348753/pvapy-2.1.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5bf46fe019edc28cdc9ea4560e1d578", "sha256": "98f452cca2b43897f1b0505d9ac899a804b0f1e1682658ea79a1d3a024c964cf"}, "downloads": -1, "filename": "pvapy-2.1.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e5bf46fe019edc28cdc9ea4560e1d578", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12830275, "upload_time": "2020-01-22T00:48:10", "upload_time_iso_8601": "2020-01-22T00:48:10.503733Z", "url": "https://files.pythonhosted.org/packages/e0/ab/a17af12582a860a289a3360de96a51d1d7a0feadc5620fb9eeb006175d31/pvapy-2.1.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "660ea75e13d22b42e65faa22e4e63936", "sha256": "bf831294868f55c16ae65f71d796d37da2a08fff69b9503fd1568ef428918d43"}, "downloads": -1, "filename": "pvapy-2.1.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "660ea75e13d22b42e65faa22e4e63936", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12830271, "upload_time": "2020-01-22T00:48:18", "upload_time_iso_8601": "2020-01-22T00:48:18.089047Z", "url": "https://files.pythonhosted.org/packages/33/03/4a50916ead0b204b3da689bcc6167f1d583444da71c9c2ef0702c00ae902/pvapy-2.1.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "46ed783a080ed80f3839a9f067242e2d", "sha256": "dccc7a274f33ced3aefde880223176618209e71cd847e9818c48fe7b0e1f8793"}, "downloads": -1, "filename": "pvapy-2.1.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "46ed783a080ed80f3839a9f067242e2d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 12852358, "upload_time": "2020-01-22T00:48:25", "upload_time_iso_8601": "2020-01-22T00:48:25.395275Z", "url": "https://files.pythonhosted.org/packages/97/78/a74e91d88fb15cb064b8ecab536e1163b234485cc882695fad80a5eebe31/pvapy-2.1.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "127ee2495540fd1593b46de25c209ce9", "sha256": "759613d6b3644183cfc361a4a64a9b3f9deb3e4735b43bb32635e031e54c5e06"}, "downloads": -1, "filename": "pvapy-2.2.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "127ee2495540fd1593b46de25c209ce9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12845270, "upload_time": "2020-04-23T16:58:41", "upload_time_iso_8601": "2020-04-23T16:58:41.595813Z", "url": "https://files.pythonhosted.org/packages/68/f7/6e79319432a89bf8513c2e72e5ed7f00b9e7c44e98df92dd5d33aeaa49e1/pvapy-2.2.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5cf05376b3628c3a665a9d244473046", "sha256": "eb0884ff49a28b16b31f82d2b8a5d26093a69f52f55d9810a7651f25764f8a16"}, "downloads": -1, "filename": "pvapy-2.2.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e5cf05376b3628c3a665a9d244473046", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12845356, "upload_time": "2020-04-23T16:58:51", "upload_time_iso_8601": "2020-04-23T16:58:51.127898Z", "url": "https://files.pythonhosted.org/packages/37/7a/873a30a2e057f353c633a11f6189a46ed76242380ad805eb576911f8214c/pvapy-2.2.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17959797668c1951aa8e1a2febb73b1f", "sha256": "0c912074f59f386013acf24663f82eed0a4204a8e4bd6ce19ad4f22fd1fddf7b"}, "downloads": -1, "filename": "pvapy-2.2.0-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "17959797668c1951aa8e1a2febb73b1f", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 12840101, "upload_time": "2020-04-23T16:59:02", "upload_time_iso_8601": "2020-04-23T16:59:02.935011Z", "url": "https://files.pythonhosted.org/packages/49/a9/19b8e3ba206726d859421c060161622c337b5ece1223ee699e1c1a930870/pvapy-2.2.0-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4d99a4a81c941e8fc1065fa141b832b", "sha256": "2053e8b0597a99c7352d8a719f3fdb6ada439cd89355d1bf15a53a2aa95377ab"}, "downloads": -1, "filename": "pvapy-2.2.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b4d99a4a81c941e8fc1065fa141b832b", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 12831926, "upload_time": "2020-04-23T16:59:10", "upload_time_iso_8601": "2020-04-23T16:59:10.762474Z", "url": "https://files.pythonhosted.org/packages/58/bf/5010ade365b0a5fb1b99b52f79f2650fdb59afecc46934f1840da24f701a/pvapy-2.2.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "993bb28fe5b595132895f8926a22e244", "sha256": "a4d3cb35df124f0184737dec633b4df198c016b029391cbfdee8ee3e84cb6320"}, "downloads": -1, "filename": "pvapy-2.2.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "993bb28fe5b595132895f8926a22e244", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12831940, "upload_time": "2020-04-23T16:59:19", "upload_time_iso_8601": "2020-04-23T16:59:19.601321Z", "url": "https://files.pythonhosted.org/packages/37/79/dac6d212c37a382f6b9bd1f7901c68ddc53091b1b761a5e1428062310f82/pvapy-2.2.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31796727fb4a9c173d8b1d236ea836d5", "sha256": "b1c1dc5505298181dbdf24346e38ee3eca6ba7c24a8f64aef0806bade093371b"}, "downloads": -1, "filename": "pvapy-2.2.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "31796727fb4a9c173d8b1d236ea836d5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12831934, "upload_time": "2020-04-23T16:59:28", "upload_time_iso_8601": "2020-04-23T16:59:28.252751Z", "url": "https://files.pythonhosted.org/packages/39/50/d327f9a1721a6dcc2ce85f946021f45523a1c04d062181fb83a70fbb2668/pvapy-2.2.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b23024fc0e4cc86aec0c486ad107c40d", "sha256": "67f6cc7c3239a2a9f3347c37025c20d3b301b3505a00ecd8ed47acb30301075d"}, "downloads": -1, "filename": "pvapy-2.2.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b23024fc0e4cc86aec0c486ad107c40d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 12853690, "upload_time": "2020-04-23T16:59:36", "upload_time_iso_8601": "2020-04-23T16:59:36.801243Z", "url": "https://files.pythonhosted.org/packages/34/85/8eb937b5d30e6185cd386d08382abaed46c102879a2c2fd70858b0e147c3/pvapy-2.2.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "127ee2495540fd1593b46de25c209ce9", "sha256": "759613d6b3644183cfc361a4a64a9b3f9deb3e4735b43bb32635e031e54c5e06"}, "downloads": -1, "filename": "pvapy-2.2.0-cp27-cp27m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "127ee2495540fd1593b46de25c209ce9", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12845270, "upload_time": "2020-04-23T16:58:41", "upload_time_iso_8601": "2020-04-23T16:58:41.595813Z", "url": "https://files.pythonhosted.org/packages/68/f7/6e79319432a89bf8513c2e72e5ed7f00b9e7c44e98df92dd5d33aeaa49e1/pvapy-2.2.0-cp27-cp27m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5cf05376b3628c3a665a9d244473046", "sha256": "eb0884ff49a28b16b31f82d2b8a5d26093a69f52f55d9810a7651f25764f8a16"}, "downloads": -1, "filename": "pvapy-2.2.0-cp27-cp27mu-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "e5cf05376b3628c3a665a9d244473046", "packagetype": "bdist_wheel", "python_version": "cp27", "requires_python": null, "size": 12845356, "upload_time": "2020-04-23T16:58:51", "upload_time_iso_8601": "2020-04-23T16:58:51.127898Z", "url": "https://files.pythonhosted.org/packages/37/7a/873a30a2e057f353c633a11f6189a46ed76242380ad805eb576911f8214c/pvapy-2.2.0-cp27-cp27mu-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17959797668c1951aa8e1a2febb73b1f", "sha256": "0c912074f59f386013acf24663f82eed0a4204a8e4bd6ce19ad4f22fd1fddf7b"}, "downloads": -1, "filename": "pvapy-2.2.0-cp34-cp34m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "17959797668c1951aa8e1a2febb73b1f", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 12840101, "upload_time": "2020-04-23T16:59:02", "upload_time_iso_8601": "2020-04-23T16:59:02.935011Z", "url": "https://files.pythonhosted.org/packages/49/a9/19b8e3ba206726d859421c060161622c337b5ece1223ee699e1c1a930870/pvapy-2.2.0-cp34-cp34m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4d99a4a81c941e8fc1065fa141b832b", "sha256": "2053e8b0597a99c7352d8a719f3fdb6ada439cd89355d1bf15a53a2aa95377ab"}, "downloads": -1, "filename": "pvapy-2.2.0-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b4d99a4a81c941e8fc1065fa141b832b", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 12831926, "upload_time": "2020-04-23T16:59:10", "upload_time_iso_8601": "2020-04-23T16:59:10.762474Z", "url": "https://files.pythonhosted.org/packages/58/bf/5010ade365b0a5fb1b99b52f79f2650fdb59afecc46934f1840da24f701a/pvapy-2.2.0-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "993bb28fe5b595132895f8926a22e244", "sha256": "a4d3cb35df124f0184737dec633b4df198c016b029391cbfdee8ee3e84cb6320"}, "downloads": -1, "filename": "pvapy-2.2.0-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "993bb28fe5b595132895f8926a22e244", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 12831940, "upload_time": "2020-04-23T16:59:19", "upload_time_iso_8601": "2020-04-23T16:59:19.601321Z", "url": "https://files.pythonhosted.org/packages/37/79/dac6d212c37a382f6b9bd1f7901c68ddc53091b1b761a5e1428062310f82/pvapy-2.2.0-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31796727fb4a9c173d8b1d236ea836d5", "sha256": "b1c1dc5505298181dbdf24346e38ee3eca6ba7c24a8f64aef0806bade093371b"}, "downloads": -1, "filename": "pvapy-2.2.0-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "31796727fb4a9c173d8b1d236ea836d5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 12831934, "upload_time": "2020-04-23T16:59:28", "upload_time_iso_8601": "2020-04-23T16:59:28.252751Z", "url": "https://files.pythonhosted.org/packages/39/50/d327f9a1721a6dcc2ce85f946021f45523a1c04d062181fb83a70fbb2668/pvapy-2.2.0-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b23024fc0e4cc86aec0c486ad107c40d", "sha256": "67f6cc7c3239a2a9f3347c37025c20d3b301b3505a00ecd8ed47acb30301075d"}, "downloads": -1, "filename": "pvapy-2.2.0-cp38-cp38-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b23024fc0e4cc86aec0c486ad107c40d", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 12853690, "upload_time": "2020-04-23T16:59:36", "upload_time_iso_8601": "2020-04-23T16:59:36.801243Z", "url": "https://files.pythonhosted.org/packages/34/85/8eb937b5d30e6185cd386d08382abaed46c102879a2c2fd70858b0e147c3/pvapy-2.2.0-cp38-cp38-manylinux1_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 03:13:01 2020"}