{"info": {"author": "Rodrigo Ristow", "author_email": "rodrigo@maxttor.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "z3c.rest_publisher Package\n==========================\n\nOverview\n--------\n\nThis product registers Zope-traverses (IBrowserPublisher) to implement basic REST requests in a simpler way.\nThis is done by registering traversable objects (IBrowserPublisher) to represent each method or level of the REST API.\nNo documents or folders will be accessed directly. It is necessary to create classes for each information to be accessed by the API.\n\nFor example, in the following request:\n\n    curl http://localhost:8080/api/members/my_user\n\nwhere\n - api - It's a view (inherited from APIBase) registered for ROOT\n - members - It's a object inherited from APIBase included in \"api\"\n - myuser - It's a object inherited from APIBase included in \"members\"\n\nInstall\n-------\n\npip install z3c.rest_publisher\n\nConfiguration\n-------------\n\n1 - API Root\nThe starting point for the API is a traditional view registered in Zope ZCML. e.g.\n\n```xml\n<view\nname=\"api\"\nfor=\"zope.location.interfaces.IRoot\"\ntype=\"zope.publisher.interfaces.browser.IBrowserRequest\"\nprovides=\"zope.publisher.interfaces.browser.IBrowserPublisher\"\nfactory=\".rest_api.APIRoot\"\npermission=\"zope.Public\"\nallowed_attributes=\"publishTraverse browserDefault __call__\">\n</view>\n```\n\nAuthentication\n--------------\n\n1 - Zope-Authentication\nYou can use traditional Zope systems for authentication, for example by changing permissions for the view\n\n    permission=\"zope.Public\"\n    or\n    permission=\"zope.ManageContent\"\n\n2 - Custom authentication\n\nIf you wish, you can include customized authentication for the API. Just overwrite the \"check_authentication\" method in the class.\nFor example, to implement a basic authentication:\n\n    class APIRoot(APIBase):\n        def check_authentication(self):\n            user, pwd = self.request._authUserPW()\n            return user == 'demo' and pwd == 'demo'\n\nTo test:\n\n    curl --user demo:demo  http://localhost:8080/api/\n\nREST functions\n--------------\n\nThere are two ways to add a REST function to the Object.\n\n1 - REST function as a method\nInclude a method in the format {HTTP-Method}_{Name} (lower-case), e.g.\n\n    class APIRoot(APIBase):\n        def get_list_admins(self):\n            return [{'id': '1', 'firstname': 'Alberto', 'lastname': 'Santos-Dumont'},\n                    {'id': '2', 'firstname': 'Edson', 'lastname': 'Arantes do Nascimento'}]\n        def put_list_admins(self):\n            return self.get_list_admins()\n\nTo test:\n\n    curl -X GET http://localhost:8080/api/list_admins\n    curl -X PUT http://localhost:8080/api/list_admins\n\n2 - Concatenated REST objects\nIt is possible to create a new REST object and concatenate it with the current object.\nThis is the equivalent implementation from the previous method.\n\n    class APIListAdmins(APIBase):\n        def get(self):\n            return [{'id': 'user1', 'firstname': 'Alberto', 'lastname': 'Santos-Dumont'},\n                    {'id': 'user2', 'firstname': 'Edson', 'lastname': 'Arantes do Nascimento'}]\n        def put(self):\n            return self.get()\n\n    class APIRoot(APIBase):\n        content = {'list_admins': APIListAdmins}\n\nTo test:\n\n    curl -X GET http://localhost:8080/api/list_admins\n    curl -X PUT http://localhost:8080/api/list_admins\n\n2.1 - REST function for objects (catch all)\nTo implement a \"generic\" traverse to access specific database objects, use the wildcard \"*\".\n\n    class APIUSer(APIBase):\n        def get(self):\n            if self.name == 'user1'\n                return {'id': 'user1', 'firstname': 'Alberto', 'lastname': 'Santos-Dumont'}\n            elif self.name == 'user2':\n                return {'id': 'user2', 'firstname': 'Edson', 'lastname': 'Arantes do Nascimento'}\n            else:\n                self.request.response.setStatus(404)\n                return \"User not found\"\n\n    class APIMembers(APIBase):\n        content = {'*': APIUSer}\n\n    class APIRoot(APIBase):\n        content = {'members': APIListAdmins}\n\nTo test:\n\n    curl -X GET http://localhost:8080/api/members/user1\n\nAPI documentation\n-----------------\n\nThe class RestDoc provide a simple built-in documentation of all REST-APi methods. \nThe default url is '[API_ROOT]/help' but you can change the property 'doc_endpoint' (APIBase) if you desire.\n\n\nExample\n-------\n\nPlease see \"z3c.rest_publisher/example\" for an example.\n\n\nChangelog\n=========\n\n0.7 (05.05.20)\n--------------\n\n- Added the built-in documentation (default: /help) for the REST API\n\n\n0.4 (01.05.20)\n--------------\n\n- Initial release", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/", "keywords": "REST Zope IBrowserPublisher", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "z3c.rest-publisher", "package_url": "https://pypi.org/project/z3c.rest-publisher/", "platform": "", "project_url": "https://pypi.org/project/z3c.rest-publisher/", "project_urls": {"Homepage": "http://svn.plone.org/svn/collective/"}, "release_url": "https://pypi.org/project/z3c.rest-publisher/0.7/", "requires_dist": null, "requires_python": "", "summary": "This product has the base classes to implement a REST-Server using the concepts of Zope-traverser (IBrowserPublisher)", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"z3c-rest-publisher-package\">\n<h2>z3c.rest_publisher Package</h2>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>This product registers Zope-traverses (IBrowserPublisher) to implement basic REST requests in a simpler way.\nThis is done by registering traversable objects (IBrowserPublisher) to represent each method or level of the REST API.\nNo documents or folders will be accessed directly. It is necessary to create classes for each information to be accessed by the API.</p>\n<p>For example, in the following request:</p>\n<blockquote>\ncurl <a href=\"http://localhost:8080/api/members/my_user\" rel=\"nofollow\">http://localhost:8080/api/members/my_user</a></blockquote>\n<dl>\n<dt>where</dt>\n<dd><ul>\n<li>api - It\u2019s a view (inherited from APIBase) registered for ROOT</li>\n<li>members - It\u2019s a object inherited from APIBase included in \u201capi\u201d</li>\n<li>myuser - It\u2019s a object inherited from APIBase included in \u201cmembers\u201d</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"install\">\n<h3>Install</h3>\n<p>pip install z3c.rest_publisher</p>\n</div>\n<div id=\"configuration\">\n<h3>Configuration</h3>\n<p>1 - API Root\nThe starting point for the API is a traditional view registered in Zope ZCML. e.g.</p>\n<p><tt>`xml\n&lt;view\n<span class=\"pre\">name=\"api\"</span>\n<span class=\"pre\">for=\"zope.location.interfaces.IRoot\"</span>\n<span class=\"pre\">type=\"zope.publisher.interfaces.browser.IBrowserRequest\"</span>\n<span class=\"pre\">provides=\"zope.publisher.interfaces.browser.IBrowserPublisher\"</span>\n<span class=\"pre\">factory=\".rest_api.APIRoot\"</span>\n<span class=\"pre\">permission=\"zope.Public\"</span>\n<span class=\"pre\">allowed_attributes=\"publishTraverse</span> browserDefault __call__\"&gt;\n&lt;/view&gt;\n`</tt></p>\n</div>\n<div id=\"authentication\">\n<h3>Authentication</h3>\n<p>1 - Zope-Authentication\nYou can use traditional Zope systems for authentication, for example by changing permissions for the view</p>\n<blockquote>\npermission=\u201dzope.Public\u201d\nor\npermission=\u201dzope.ManageContent\u201d</blockquote>\n<p>2 - Custom authentication</p>\n<p>If you wish, you can include customized authentication for the API. Just overwrite the \u201ccheck_authentication\u201d method in the class.\nFor example, to implement a basic authentication:</p>\n<blockquote>\n<dl>\n<dt>class APIRoot(APIBase):</dt>\n<dd><dl>\n<dt>def check_authentication(self):</dt>\n<dd>user, pwd = self.request._authUserPW()\nreturn user == \u2018demo\u2019 and pwd == \u2018demo\u2019</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>To test:</p>\n<blockquote>\ncurl \u2013user demo:demo  http://localhost:8080/api/</blockquote>\n</div>\n<div id=\"rest-functions\">\n<h3>REST functions</h3>\n<p>There are two ways to add a REST function to the Object.</p>\n<p>1 - REST function as a method\nInclude a method in the format {HTTP-Method}_{Name} (lower-case), e.g.</p>\n<blockquote>\n<dl>\n<dt>class APIRoot(APIBase):</dt>\n<dd><dl>\n<dt>def get_list_admins(self):</dt>\n<dd><dl>\n<dt>return [{\u2018id\u2019: \u20181\u2019, \u2018firstname\u2019: \u2018Alberto\u2019, \u2018lastname\u2019: \u2018Santos-Dumont\u2019},</dt>\n<dd>{\u2018id\u2019: \u20182\u2019, \u2018firstname\u2019: \u2018Edson\u2019, \u2018lastname\u2019: \u2018Arantes do Nascimento\u2019}]</dd>\n</dl>\n</dd>\n<dt>def put_list_admins(self):</dt>\n<dd>return self.get_list_admins()</dd>\n</dl>\n</dd>\n</dl>\n</blockquote>\n<p>To test:</p>\n<blockquote>\ncurl -X GET <a href=\"http://localhost:8080/api/list_admins\" rel=\"nofollow\">http://localhost:8080/api/list_admins</a>\ncurl -X PUT <a href=\"http://localhost:8080/api/list_admins\" rel=\"nofollow\">http://localhost:8080/api/list_admins</a></blockquote>\n<p>2 - Concatenated REST objects\nIt is possible to create a new REST object and concatenate it with the current object.\nThis is the equivalent implementation from the previous method.</p>\n<blockquote>\n<dl>\n<dt>class APIListAdmins(APIBase):</dt>\n<dd><dl>\n<dt>def get(self):</dt>\n<dd><dl>\n<dt>return [{\u2018id\u2019: \u2018user1\u2019, \u2018firstname\u2019: \u2018Alberto\u2019, \u2018lastname\u2019: \u2018Santos-Dumont\u2019},</dt>\n<dd>{\u2018id\u2019: \u2018user2\u2019, \u2018firstname\u2019: \u2018Edson\u2019, \u2018lastname\u2019: \u2018Arantes do Nascimento\u2019}]</dd>\n</dl>\n</dd>\n<dt>def put(self):</dt>\n<dd>return self.get()</dd>\n</dl>\n</dd>\n<dt>class APIRoot(APIBase):</dt>\n<dd>content = {\u2018list_admins\u2019: APIListAdmins}</dd>\n</dl>\n</blockquote>\n<p>To test:</p>\n<blockquote>\ncurl -X GET <a href=\"http://localhost:8080/api/list_admins\" rel=\"nofollow\">http://localhost:8080/api/list_admins</a>\ncurl -X PUT <a href=\"http://localhost:8080/api/list_admins\" rel=\"nofollow\">http://localhost:8080/api/list_admins</a></blockquote>\n<p>2.1 - REST function for objects (catch all)\nTo implement a \u201cgeneric\u201d traverse to access specific database objects, use the wildcard \u201c*\u201d.</p>\n<blockquote>\n<dl>\n<dt>class APIUSer(APIBase):</dt>\n<dd><dl>\n<dt>def get(self):</dt>\n<dd><dl>\n<dt>if self.name == \u2018user1\u2019</dt>\n<dd>return {\u2018id\u2019: \u2018user1\u2019, \u2018firstname\u2019: \u2018Alberto\u2019, \u2018lastname\u2019: \u2018Santos-Dumont\u2019}</dd>\n<dt>elif self.name == \u2018user2\u2019:</dt>\n<dd>return {\u2018id\u2019: \u2018user2\u2019, \u2018firstname\u2019: \u2018Edson\u2019, \u2018lastname\u2019: \u2018Arantes do Nascimento\u2019}</dd>\n<dt>else:</dt>\n<dd>self.request.response.setStatus(404)\nreturn \u201cUser not found\u201d</dd>\n</dl>\n</dd>\n</dl>\n</dd>\n<dt>class APIMembers(APIBase):</dt>\n<dd>content = {\u2018*\u2019: APIUSer}</dd>\n<dt>class APIRoot(APIBase):</dt>\n<dd>content = {\u2018members\u2019: APIListAdmins}</dd>\n</dl>\n</blockquote>\n<p>To test:</p>\n<blockquote>\ncurl -X GET <a href=\"http://localhost:8080/api/members/user1\" rel=\"nofollow\">http://localhost:8080/api/members/user1</a></blockquote>\n</div>\n<div id=\"api-documentation\">\n<h3>API documentation</h3>\n<p>The class RestDoc provide a simple built-in documentation of all REST-APi methods.\nThe default url is \u2018[API_ROOT]/help\u2019 but you can change the property \u2018doc_endpoint\u2019 (APIBase) if you desire.</p>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Please see \u201cz3c.rest_publisher/example\u201d for an example.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.7 (05.05.20)</h3>\n<ul>\n<li>Added the built-in documentation (default: /help) for the REST API</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4 (01.05.20)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7178450, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "eb8a6dbc1104b020a5ff3147c5b80bd2", "sha256": "b0a365db1a93d330ecd4682161792721e934522ba4eabea4fca5f17138d0635c"}, "downloads": -1, "filename": "z3c.rest_publisher-0.2.tar.gz", "has_sig": false, "md5_digest": "eb8a6dbc1104b020a5ff3147c5b80bd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4961, "upload_time": "2020-05-01T16:59:07", "upload_time_iso_8601": "2020-05-01T16:59:07.340714Z", "url": "https://files.pythonhosted.org/packages/a3/26/760ad890abfe9392a8808aa88626890d1c8d57bc5028e6ad5352f2a0063d/z3c.rest_publisher-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "78dc6a4073bd0e964ffba430ca593dea", "sha256": "d230aaa673b1713e449fd46efa87e0eeb7686086782ed9d6744751a12ce16f1f"}, "downloads": -1, "filename": "z3c.rest_publisher-0.3.tar.gz", "has_sig": false, "md5_digest": "78dc6a4073bd0e964ffba430ca593dea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5001, "upload_time": "2020-05-01T17:21:05", "upload_time_iso_8601": "2020-05-01T17:21:05.383548Z", "url": "https://files.pythonhosted.org/packages/5e/b7/d233d173f0fdb173f24d01d7486c3f1eeca57a2bdbf7d87977e3e1eba3a9/z3c.rest_publisher-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "c328ef2c35143ed36ecf42c43298cb12", "sha256": "6022ca5a88331864640757f52883014f0771d4e7d41e87fa053b45687fcbcdb3"}, "downloads": -1, "filename": "z3c.rest_publisher-0.4.tar.gz", "has_sig": false, "md5_digest": "c328ef2c35143ed36ecf42c43298cb12", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5047, "upload_time": "2020-05-01T17:25:10", "upload_time_iso_8601": "2020-05-01T17:25:10.156865Z", "url": "https://files.pythonhosted.org/packages/80/c9/7f6f3edde252006abbb40b521416d2800b196b01d58e8b01094492f7796e/z3c.rest_publisher-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "0e687a1d141394bccaf5908b4d5e7642", "sha256": "2d610fe74ea45828f4db01b4617b0ce26a82cf0474d8f9acb7c83bd7b215beb9"}, "downloads": -1, "filename": "z3c.rest_publisher-0.5.tar.gz", "has_sig": false, "md5_digest": "0e687a1d141394bccaf5908b4d5e7642", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5855, "upload_time": "2020-05-05T16:48:58", "upload_time_iso_8601": "2020-05-05T16:48:58.824086Z", "url": "https://files.pythonhosted.org/packages/87/54/e6d2474f28feb6f8f01b1047f84407f0b56f3424d97537ccc8db0c7a6840/z3c.rest_publisher-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "27aa99f68d16c01db91d5be43b528649", "sha256": "75993d3515c1b18d89665ce7c6adecf5a312692f0b84fb2bdeb4bfe3d1394288"}, "downloads": -1, "filename": "z3c.rest_publisher-0.6.tar.gz", "has_sig": false, "md5_digest": "27aa99f68d16c01db91d5be43b528649", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7015, "upload_time": "2020-05-05T17:27:52", "upload_time_iso_8601": "2020-05-05T17:27:52.256220Z", "url": "https://files.pythonhosted.org/packages/ef/f6/d9ff0406c3c5f5934dbf9372dd4582589e7113cea5183db89e6e1434b645/z3c.rest_publisher-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "ca9bc17c0baf0659dd69e4f7119441b5", "sha256": "620c0bd34a4dfa1f0efecd483cd9a349ed830bcdea15934315963464630c2629"}, "downloads": -1, "filename": "z3c.rest_publisher-0.7.tar.gz", "has_sig": false, "md5_digest": "ca9bc17c0baf0659dd69e4f7119441b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7012, "upload_time": "2020-05-06T08:11:25", "upload_time_iso_8601": "2020-05-06T08:11:25.388268Z", "url": "https://files.pythonhosted.org/packages/cd/4c/cea0418c5d72cf694140b671f05f3d9f3a7b82fe1a46ffb58a20ffd255af/z3c.rest_publisher-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ca9bc17c0baf0659dd69e4f7119441b5", "sha256": "620c0bd34a4dfa1f0efecd483cd9a349ed830bcdea15934315963464630c2629"}, "downloads": -1, "filename": "z3c.rest_publisher-0.7.tar.gz", "has_sig": false, "md5_digest": "ca9bc17c0baf0659dd69e4f7119441b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7012, "upload_time": "2020-05-06T08:11:25", "upload_time_iso_8601": "2020-05-06T08:11:25.388268Z", "url": "https://files.pythonhosted.org/packages/cd/4c/cea0418c5d72cf694140b671f05f3d9f3a7b82fe1a46ffb58a20ffd255af/z3c.rest_publisher-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:34 2020"}