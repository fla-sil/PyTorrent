{"info": {"author": "Andrzej Barga\u0144ski", "author_email": "a.barganski@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Utilities"], "description": "totra\n=====\n*an unofficial TopTracker CLI helper*\n\nPurpose\n-------\n\n[TopTracker](https://www.toptal.com/tracker) is great time tracking tool, but when\nit comes to making polls, reports etc. I find CLI tools much more productive then\nclicking around web page.\n\nThe idea went from simple question: *how much hours I've worked i.e this week ?*\n\nWith TopTracker web page, to know such information I had to: login to web page, click on \ndate range, export activities to csv, open spreadsheet software and import this csv,\n and then sum.\nWith this tool I can just:\n\n`totra how_much_hours --workers=\"Andrzej Barga\u0144ski\" --from=Monday -l my@login.com -p mypassword`\n\n...and in second you see result !  \n\nUsage\n-----\n__*Notice:*__\n*Application is still in planning stage. Commands, options etc. can change, and every* \n*TopTracker user is invited to post thoughts, wishes and participate in development.*\n\n```\n   totra activities [--format=<format>] [--projects=<projects>] [--workers=<workers>] --from=<from_date> [--to=<to_date>] [-l login] [-p password] [-o output_filename]\n   totra how_much_hours [--projects=<projects>] [--workers=<workers>] --from=<from_date> [--to=<to_date>] [-l login] [-p password]\n   totra -h | --help\n   totra --version\n\n Commands:\n   activities                Output activities in --format.\n   how_much_hours            Shows how much work hours are registered according to given parameters.\n\n Options:\n   --format=<format>         Output format. Can be: json, excel. [default: json]\n   --projects=<projects>     Projects names as coma separated list. Ex. 'Project 1' or 'Project 1,Project 2'\n   --workers=<workers>       Workers as coma seprated list. Ex. 'Worker Name' or 'Worker Name 1, Worker Name 2'\n   --from=<from_date>        Date as beginning of period for data retrieval. Format is: YYYY-mm-dd , ex: 2018-05-01\n   --to=<to_date>            Date as end of period for data retrieval. Format is: YYYY-mm-dd , ex: 2018-05-01. [default: now].\n   -o output_filename        Output filename to write data. Default is stdout (print on your screen) [default: stdout]\n   -h --help                 Show this screen.\n   --version                 Show version.\n   -l login                  User login name.\n   -p password               User password.\n```\n\nInstallation\n------------\nFirst if you missing Python 3.6 on your system, download it from [here](https://www.python.org/downloads/release/python-365/).\nNext execute on command line :\n`pip install totra`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jedrus2000/totra", "keywords": "toptracker cli", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "totra", "package_url": "https://pypi.org/project/totra/", "platform": "", "project_url": "https://pypi.org/project/totra/", "project_urls": {"Homepage": "https://github.com/jedrus2000/totra", "Source": "https://github.com/jedrus2000/totra/"}, "release_url": "https://pypi.org/project/totra/0.1.3/", "requires_dist": ["requests", "maya", "openpyxl", "docopt", "twine; extra == 'dev'", "wheel; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Unofficial TopTracker CLI helper. TopTracker is at https://www.toptal.com/tracker", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>totra</h1>\n<p><em>an unofficial TopTracker CLI helper</em></p>\n<h2>Purpose</h2>\n<p><a href=\"https://www.toptal.com/tracker\" rel=\"nofollow\">TopTracker</a> is great time tracking tool, but when\nit comes to making polls, reports etc. I find CLI tools much more productive then\nclicking around web page.</p>\n<p>The idea went from simple question: <em>how much hours I've worked i.e this week ?</em></p>\n<p>With TopTracker web page, to know such information I had to: login to web page, click on\ndate range, export activities to csv, open spreadsheet software and import this csv,\nand then sum.\nWith this tool I can just:</p>\n<p><code>totra how_much_hours --workers=\"Andrzej Barga\u0144ski\" --from=Monday -l my@login.com -p mypassword</code></p>\n<p>...and in second you see result !</p>\n<h2>Usage</h2>\n<p><strong><em>Notice:</em></strong>\n<em>Application is still in planning stage. Commands, options etc. can change, and every</em>\n<em>TopTracker user is invited to post thoughts, wishes and participate in development.</em></p>\n<pre><code>   totra activities [--format=&lt;format&gt;] [--projects=&lt;projects&gt;] [--workers=&lt;workers&gt;] --from=&lt;from_date&gt; [--to=&lt;to_date&gt;] [-l login] [-p password] [-o output_filename]\n   totra how_much_hours [--projects=&lt;projects&gt;] [--workers=&lt;workers&gt;] --from=&lt;from_date&gt; [--to=&lt;to_date&gt;] [-l login] [-p password]\n   totra -h | --help\n   totra --version\n\n Commands:\n   activities                Output activities in --format.\n   how_much_hours            Shows how much work hours are registered according to given parameters.\n\n Options:\n   --format=&lt;format&gt;         Output format. Can be: json, excel. [default: json]\n   --projects=&lt;projects&gt;     Projects names as coma separated list. Ex. 'Project 1' or 'Project 1,Project 2'\n   --workers=&lt;workers&gt;       Workers as coma seprated list. Ex. 'Worker Name' or 'Worker Name 1, Worker Name 2'\n   --from=&lt;from_date&gt;        Date as beginning of period for data retrieval. Format is: YYYY-mm-dd , ex: 2018-05-01\n   --to=&lt;to_date&gt;            Date as end of period for data retrieval. Format is: YYYY-mm-dd , ex: 2018-05-01. [default: now].\n   -o output_filename        Output filename to write data. Default is stdout (print on your screen) [default: stdout]\n   -h --help                 Show this screen.\n   --version                 Show version.\n   -l login                  User login name.\n   -p password               User password.\n</code></pre>\n<h2>Installation</h2>\n<p>First if you missing Python 3.6 on your system, download it from <a href=\"https://www.python.org/downloads/release/python-365/\" rel=\"nofollow\">here</a>.\nNext execute on command line :\n<code>pip install totra</code></p>\n\n          </div>"}, "last_serial": 3966344, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "eb83a5dc96ff573ea8ce3361f252bed5", "sha256": "279e02d66c42ab850021b54f0c3663fa91465d37e3b9bb6f73e7eda090cb75cf"}, "downloads": -1, "filename": "totra-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eb83a5dc96ff573ea8ce3361f252bed5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8966, "upload_time": "2018-06-15T22:19:25", "upload_time_iso_8601": "2018-06-15T22:19:25.833148Z", "url": "https://files.pythonhosted.org/packages/15/19/61e4375b4aac03219fcbb304dcffe47f6d1eec1838b7219c657394c2dff5/totra-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f875d84436c2039f722cdaef08ee93b5", "sha256": "3208cddd63da702b0b924c8b309e9ca1877d5404b7d2e671d456831f4b47e582"}, "downloads": -1, "filename": "totra-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f875d84436c2039f722cdaef08ee93b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10863, "upload_time": "2018-06-15T22:19:27", "upload_time_iso_8601": "2018-06-15T22:19:27.171057Z", "url": "https://files.pythonhosted.org/packages/de/fa/87805a5d760c4779e05b841388c2f3650d49c9941a7ef4d200029c3aea99/totra-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb83a5dc96ff573ea8ce3361f252bed5", "sha256": "279e02d66c42ab850021b54f0c3663fa91465d37e3b9bb6f73e7eda090cb75cf"}, "downloads": -1, "filename": "totra-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "eb83a5dc96ff573ea8ce3361f252bed5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8966, "upload_time": "2018-06-15T22:19:25", "upload_time_iso_8601": "2018-06-15T22:19:25.833148Z", "url": "https://files.pythonhosted.org/packages/15/19/61e4375b4aac03219fcbb304dcffe47f6d1eec1838b7219c657394c2dff5/totra-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f875d84436c2039f722cdaef08ee93b5", "sha256": "3208cddd63da702b0b924c8b309e9ca1877d5404b7d2e671d456831f4b47e582"}, "downloads": -1, "filename": "totra-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f875d84436c2039f722cdaef08ee93b5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10863, "upload_time": "2018-06-15T22:19:27", "upload_time_iso_8601": "2018-06-15T22:19:27.171057Z", "url": "https://files.pythonhosted.org/packages/de/fa/87805a5d760c4779e05b841388c2f3650d49c9941a7ef4d200029c3aea99/totra-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:49:31 2020"}