{"info": {"author": "Max J. Hoffmann", "author_email": "mjhoffmann@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "kmos: kMC modelling on steroids\n=====================================\n*a vigorous attempt to make lattice kinetic Monte Carlo modelling more accessible.*\n\nCopyright (C) 2009-13 Max J. Hoffmann <mjhoffmann@gmail.com>\n\nThis program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3 of the License, or (at your option) any later\nversion.\n\nThis program is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\nFOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with\nthis program; if not, see `http://www.gnu.org/licenses/ <http://www.gnu.org/licenses/>`_.\n\n\nDOCUMENTATION\n##############\n\nPlease refer to\n\n* https://www.th4.ch.tum.de/index.php?id=1321\n* http://mhoffman.github.io/kmos/\n* http://kmos.readthedocs.org/\n\nor links therein for tutorials, user guide, reference, and troubleshooting hints.\n\n\nTHANKS\n######\n\nThis project draws on several other great Python modules, which are in turn\neach free software and I would like to thank each of these projects for\nmaking their code freely avalaible, namely:\n\n* `Python <http://www.python.org>`_\n* `ASE <https://wiki.fysik.dtu.dk/ase/>`_\n* Numpy\n* `f2py <http://cens.ioc.ee/projects/f2py2e/>`_\n* `kiwi <http://www.async.com.br/projects/kiwi/>`_, gazpacho\n* lxml and in particular `ElementTree <http://www.effbot.org/>`_\n\nFILES\n#####\n| \u251c\u2500\u2500 COPYING                                      # Copy of GPLv3\n| \u251c\u2500\u2500 INSTALL.rst                                  # installation instructions\n| \u251c\u2500\u2500 README.rst                                   # This document\n| \u251c\u2500\u2500 TODO.rst                                     # Ideas for improvement and new features\n| \u251c\u2500\u2500 requirements.txt                             # Dependencies which can be installed via pip\n| \u251c\u2500\u2500 setup.py                                     # setuptools using setup script\n| \u251c\u2500\u2500 index.html                                   # landing website\n| \u251c\u2500\u2500 kmos/                                        # the core kmos python modules\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 cli.py                                   # the command line interface\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 config.py                                # configuration of some project wide paths\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 fortran_src/                             # static Fortran 90 source files\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 assert.ppc                           # assertion macro\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base.f90                             # the default kMC solver\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base_lat_int.f90                     # slightly modified kMC solver for lat_int backend\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 kind_values.f90                      # definition of project wide kind values\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.f90                             # source template for standalone Fortran 90 clients\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 gui/                                     # kmos.gui module\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 forms.py                             # view definitions (MVC) of editor GUI\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py                          # controller definitions (MVC) of editor GUI\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py                              # root import module\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 io.py                                    # conversion between format: contains main Code Generator\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 kmc_editor.glade                         # Glade XML definiton for form interfaces\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 kmc_project_v0.1.dtd                     # Document Type Definition file of kMC project v0.1\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 kmc_project_v0.2.dtd                     # Document Type Definition file of kMC project v0.2\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 run.py                                   # High-level API for compiled models\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 species.py                               # Convenient interface for some reaction intermediates\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 types.py                                 # The basic classes for building kMC models\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 units.py                                 # Definition of conversion factor (CODATA 2010)\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 utils/                                   # Utility function that didn't fit elsewhere\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ordered_dict.py\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 progressbar.py\n| \u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 terminal.py\n| \u2502\u00a0\u00a0 \u2514\u2500\u2500 view.py                                  # The runtime GUI for compiled models\n| \u251c\u2500\u2500 doc/                                         # user guide, documentation, and reference\n| \u2502\u00a0\u00a0 \u2514\u2500\u2500 source/                                  # documentation source file for compilation with Sphinx\n| \u251c\u2500\u2500 examples/                                    # demoing non-standard features and useful idioms\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 AB_model.py                              # small demo file\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 benchmark_compilers_and_backends.sh      # demo file\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 crowded.xml                              # demo file\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 dreiD.xml                                # demo file for 3d model\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 dummy.xml                                # mininal model\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 model_Pt111_surface.py                   # demo file for non-rectangular lattice\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 multidentate.py                          # basic example for multidentate adsorption\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_bigcell.py                        # demo containing many sites\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_co_oxidation_ruo2.py              # demoing th CO Oxidation at RuO2(110) model\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_diffusion_model.py                # idioms for describing lateral interaction\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_einsD.py                          # simple 1-dimensional model\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_multispecies.py                   # render many species\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_pairwise_interaction.py           # idioms for describing lateral interaction\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_Pt_111.py                         # another non-rectangular lattice\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 render_sand_model.py                     # a neat diffusion model for non-trivial boundary conditions\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 run_in_multi_process.py                  # an example for parallelization over processes\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 run.py                                   # a high-level run script using the ModelRunner metaclass\n| \u2502\u00a0\u00a0 \u251c\u2500\u2500 ruptured_Pd.xml                          # a fcc(100) like surface with some sites missing\n| \u2502\u00a0\u00a0 \u2514\u2500\u2500 small.xml                                # demo file\n| \u251c\u2500\u2500 tests/                                       # Unit tests and test data\n| \u2514\u2500\u2500 tools                                        # Entry points for command line interface\n|     \u251c\u2500\u2500 kmos\n|     \u251c\u2500\u2500 kmos.bat\n|     \u251c\u2500\u2500 kmos-build-standalone\n|     \u2514\u2500\u2500 kmos-install-dependencies-ubuntu", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mhoffman/kmos", "keywords": null, "license": "COPYING", "maintainer": null, "maintainer_email": null, "name": "python-kmos", "package_url": "https://pypi.org/project/python-kmos/", "platform": "linux,windows", "project_url": "https://pypi.org/project/python-kmos/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mhoffman/kmos"}, "release_url": "https://pypi.org/project/python-kmos/0.3.9/", "requires_dist": null, "requires_python": null, "summary": "kMC modeling on steroids", "version": "0.3.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>a vigorous attempt to make lattice kinetic Monte Carlo modelling more accessible.</em></p>\n<p>Copyright (C) 2009-13 Max J. Hoffmann &lt;<a href=\"mailto:mjhoffmann%40gmail.com\">mjhoffmann<span>@</span>gmail<span>.</span>com</a>&gt;</p>\n<p>This program is free software; you can redistribute it and/or modify it under\nthe terms of the GNU General Public License as published by the Free Software\nFoundation; either version 3 of the License, or (at your option) any later\nversion.</p>\n<p>This program is distributed in the hope that it will be useful, but WITHOUT\nANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS\nFOR A PARTICULAR PURPOSE. See the GNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License along with\nthis program; if not, see <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>.</p>\n<div id=\"documentation\">\n<h2>DOCUMENTATION</h2>\n<p>Please refer to</p>\n<ul>\n<li><a href=\"https://www.th4.ch.tum.de/index.php?id=1321\" rel=\"nofollow\">https://www.th4.ch.tum.de/index.php?id=1321</a></li>\n<li><a href=\"http://mhoffman.github.io/kmos/\" rel=\"nofollow\">http://mhoffman.github.io/kmos/</a></li>\n<li><a href=\"http://kmos.readthedocs.org/\" rel=\"nofollow\">http://kmos.readthedocs.org/</a></li>\n</ul>\n<p>or links therein for tutorials, user guide, reference, and troubleshooting hints.</p>\n</div>\n<div id=\"thanks\">\n<h2>THANKS</h2>\n<p>This project draws on several other great Python modules, which are in turn\neach free software and I would like to thank each of these projects for\nmaking their code freely avalaible, namely:</p>\n<ul>\n<li><a href=\"http://www.python.org\" rel=\"nofollow\">Python</a></li>\n<li><a href=\"https://wiki.fysik.dtu.dk/ase/\" rel=\"nofollow\">ASE</a></li>\n<li>Numpy</li>\n<li><a href=\"http://cens.ioc.ee/projects/f2py2e/\" rel=\"nofollow\">f2py</a></li>\n<li><a href=\"http://www.async.com.br/projects/kiwi/\" rel=\"nofollow\">kiwi</a>, gazpacho</li>\n<li>lxml and in particular <a href=\"http://www.effbot.org/\" rel=\"nofollow\">ElementTree</a></li>\n</ul>\n</div>\n<div id=\"files\">\n<h2>FILES</h2>\n<div>\n<div>\u251c\u2500\u2500 COPYING                                      # Copy of GPLv3</div>\n<div>\u251c\u2500\u2500 INSTALL.rst                                  # installation instructions</div>\n<div>\u251c\u2500\u2500 README.rst                                   # This document</div>\n<div>\u251c\u2500\u2500 TODO.rst                                     # Ideas for improvement and new features</div>\n<div>\u251c\u2500\u2500 requirements.txt                             # Dependencies which can be installed via pip</div>\n<div>\u251c\u2500\u2500 setup.py                                     # setuptools using setup script</div>\n<div>\u251c\u2500\u2500 index.html                                   # landing website</div>\n<div>\u251c\u2500\u2500 kmos/                                        # the core kmos python modules</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 cli.py                                   # the command line interface</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 config.py                                # configuration of some project wide paths</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 fortran_src/                             # static Fortran 90 source files</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 assert.ppc                           # assertion macro</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base.f90                             # the default kMC solver</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 base_lat_int.f90                     # slightly modified kMC solver for lat_int backend</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 kind_values.f90                      # definition of project wide kind values</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 main.f90                             # source template for standalone Fortran 90 clients</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 gui/                                     # kmos.gui module</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 forms.py                             # view definitions (MVC) of editor GUI</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 __init__.py                          # controller definitions (MVC) of editor GUI</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py                              # root import module</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 io.py                                    # conversion between format: contains main Code Generator</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 kmc_editor.glade                         # Glade XML definiton for form interfaces</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 kmc_project_v0.1.dtd                     # Document Type Definition file of kMC project v0.1</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 kmc_project_v0.2.dtd                     # Document Type Definition file of kMC project v0.2</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 run.py                                   # High-level API for compiled models</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 species.py                               # Convenient interface for some reaction intermediates</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 types.py                                 # The basic classes for building kMC models</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 units.py                                 # Definition of conversion factor (CODATA 2010)</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 utils/                                   # Utility function that didn\u2019t fit elsewhere</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __init__.py</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 ordered_dict.py</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 progressbar.py</div>\n<div>\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 terminal.py</div>\n<div>\u2502\u00a0\u00a0 \u2514\u2500\u2500 view.py                                  # The runtime GUI for compiled models</div>\n<div>\u251c\u2500\u2500 doc/                                         # user guide, documentation, and reference</div>\n<div>\u2502\u00a0\u00a0 \u2514\u2500\u2500 source/                                  # documentation source file for compilation with Sphinx</div>\n<div>\u251c\u2500\u2500 examples/                                    # demoing non-standard features and useful idioms</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 AB_model.py                              # small demo file</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 benchmark_compilers_and_backends.sh      # demo file</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 crowded.xml                              # demo file</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 dreiD.xml                                # demo file for 3d model</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 dummy.xml                                # mininal model</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 model_Pt111_surface.py                   # demo file for non-rectangular lattice</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 multidentate.py                          # basic example for multidentate adsorption</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_bigcell.py                        # demo containing many sites</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_co_oxidation_ruo2.py              # demoing th CO Oxidation at RuO2(110) model</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_diffusion_model.py                # idioms for describing lateral interaction</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_einsD.py                          # simple 1-dimensional model</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_multispecies.py                   # render many species</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_pairwise_interaction.py           # idioms for describing lateral interaction</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_Pt_111.py                         # another non-rectangular lattice</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 render_sand_model.py                     # a neat diffusion model for non-trivial boundary conditions</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 run_in_multi_process.py                  # an example for parallelization over processes</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 run.py                                   # a high-level run script using the ModelRunner metaclass</div>\n<div>\u2502\u00a0\u00a0 \u251c\u2500\u2500 ruptured_Pd.xml                          # a fcc(100) like surface with some sites missing</div>\n<div>\u2502\u00a0\u00a0 \u2514\u2500\u2500 small.xml                                # demo file</div>\n<div>\u251c\u2500\u2500 tests/                                       # Unit tests and test data</div>\n<div>\u2514\u2500\u2500 tools                                        # Entry points for command line interface</div>\n<div>\n<div>\u251c\u2500\u2500 kmos</div>\n<div>\u251c\u2500\u2500 kmos.bat</div>\n<div>\u251c\u2500\u2500 kmos-build-standalone</div>\n<div>\u2514\u2500\u2500 kmos-install-dependencies-ubuntu</div>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1133620, "releases": {"0.3.5": [], "0.3.6": [{"comment_text": "", "digests": {"md5": "75403daa10c4aed9b4f01714eff55828", "sha256": "f6b55686eee38886be70621b3c5253d4cd3106f1d644d4ce1050faba81483ce5"}, "downloads": -1, "filename": "python-kmos-0.3.6.tar.gz", "has_sig": false, "md5_digest": "75403daa10c4aed9b4f01714eff55828", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 134905, "upload_time": "2014-02-03T15:20:05", "upload_time_iso_8601": "2014-02-03T15:20:05.305977Z", "url": "https://files.pythonhosted.org/packages/0c/c9/8625a53c72846abf662e726f7b53f74f7c522214b1741ecf050d2710d91a/python-kmos-0.3.6.tar.gz", "yanked": false}], "0.3.9": [{"comment_text": "", "digests": {"md5": "acf3e31bacf787b825356fcef2327293", "sha256": "29adf4c3dba1db93ea257b14fbd5a55ae55cf16dda451f41d1f3eefc2df50d8d"}, "downloads": -1, "filename": "python-kmos-0.3.9.tar.gz", "has_sig": false, "md5_digest": "acf3e31bacf787b825356fcef2327293", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135369, "upload_time": "2014-06-22T10:52:05", "upload_time_iso_8601": "2014-06-22T10:52:05.116230Z", "url": "https://files.pythonhosted.org/packages/29/6d/1d33fac8293a47b35edbd816e8424e66a9063d29b54f88b9ed8953e83eaa/python-kmos-0.3.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acf3e31bacf787b825356fcef2327293", "sha256": "29adf4c3dba1db93ea257b14fbd5a55ae55cf16dda451f41d1f3eefc2df50d8d"}, "downloads": -1, "filename": "python-kmos-0.3.9.tar.gz", "has_sig": false, "md5_digest": "acf3e31bacf787b825356fcef2327293", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 135369, "upload_time": "2014-06-22T10:52:05", "upload_time_iso_8601": "2014-06-22T10:52:05.116230Z", "url": "https://files.pythonhosted.org/packages/29/6d/1d33fac8293a47b35edbd816e8424e66a9063d29b54f88b9ed8953e83eaa/python-kmos-0.3.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:59 2020"}