{"info": {"author": "Zachary Zimmerman", "author_email": "zpzimmerman@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "[![Travis Build Status](https://travis-ci.org/zpzim/SCAMP.svg?branch=master)](https://travis-ci.org/zpzim/SCAMP)\n[![Docker Build Status](https://img.shields.io/docker/cloud/build/zpzim/scamp)](https://hub.docker.com/repository/docker/zpzim/scamp)\n[![RTD Build Status](https://img.shields.io/readthedocs/scamp-docs)](https://scamp-docs.readthedocs.io/en/latest/)\n\n# SCAMP: SCAlable Matrix Profile\n\n## Table of Contents\n[Overview](https://github.com/zpzim/SCAMP#overview) \\\n[Documentation](https://github.com/zpzim/SCAMP#documentation) \\\n[Performance](https://github.com/zpzim/SCAMP#performance) \\\n[Python Module](https://github.com/zpzim/SCAMP#python-module) \\\n[Run Using Docker](https://github.com/zpzim/SCAMP#run-using-docker) \\\n[Distributed Operation](https://github.com/zpzim/SCAMP#distributed-operation) \\\n[Reference](https://github.com/zpzim/SCAMP#reference)\n\n## Overview\nThis is a GPU/CPU implementation of the SCAMP algorithm. SCAMP takes a time series as input and computes the matrix profile for a particular window size. You can read more at the [Matrix Profile Homepage](http://www.cs.ucr.edu/~eamonn/MatrixProfile.html)\nThis is a much improved framework over [GPU-STOMP](https://github.com/zpzim/STOMPSelfJoin) which has the following additional features:\n * Tiling for large inputs \n * Computation in fp32, mixed fp32/fp64, or fp64 (double is recommended for most datasets, single precision will work for some)\n * fp32 version should get good performance on GeForce cards\n * AB joins (you can produce the matrix profile from 2 different time series)\n * Distributable (we use GCP but other cloud platforms can work) with verified scalability to billions of datapoints\n * More types of matrix profiles! See the Docs!\n * Extremely Efficient Implementation\n * Extensible to adding optimized versions of custom join operations.\n * Can compute joins with the CPU (Only enabled for double precision and does not support all-neighbors joins or distance matrix summaries yet)\n * Handles NaN input values. The matrix profile will be computed while excluding any subsequence with a NaN value\n * Python module: Use SCAMP in Python with pyscamp\n\n## Documentation\nSCAMP's documentation can be found at [readthedocs](https://scamp-docs.readthedocs.io/en/latest/).\n\n## Performance\nSCAMP is extremely fast, especially on Tesla series GPUs. I belive this repository contains the fastest code in existance for computing the matrix profile. If you find a way to improve the speed of SCAMP, or compute matrix profiles any faster than SCAMP does, please let me know, I would be glad to point to your work and incorporate any improvements that can be made to SCAMP.\n\nMore details on the performance of SCAMP can be found in the documentation.\n\n## Python module\nA source distribution for a python3 module using pybind11 is available on pypi.org to install run:\n~~~\n# Python 3 only\npip install pyscamp\n~~~\n\nthen you can use SCAMP in Python as follows:\n~~~\nimport pyscamp as mp # Uses GPU if available and CUDA was available during the build\n\n# Allows checking if pyscamp was built with CUDA and has GPU support\nhas_gpu_support = mp.gpu_supported()\n\n# Self join\nprofile, index = mp.selfjoin(a, sublen)\n# AB join using 4 threads, outtputing pearson correlation.\nprofile, index = mp.abjoin(a, b, sublen, pearson=True, threads=4)\n~~~\n\nMore information and the API documentation for pyscamp is available on [readthedocs](https://scamp-docs.readthedocs.io/en/latest/)\n\n## Run Using Docker\nYou can run SCAMP via [nvidia-docker](https://github.com/NVIDIA/nvidia-docker) using the prebuilt [image](https://hub.docker.com/r/zpzim/scamp) on dockerhub.\n\nIn order to expose the host GPUs nvidia-docker must be installed correctly. Please follow the directions provided on the nvidia-docker github page. The following example uses docker 19.03 functionality:\n~~~\ndocker pull zpzim/scamp:latest\ndocker run --gpus all \\\n   --volume /path/to/host/input/data/directory:/data \\\n   --volume /path/to/host/output/directory:/output \\\n   zpzim/scamp:latest /SCAMP/build/SCAMP \\\n   --window=<window_size> --input_a_file_name=/data/<filename> \\\n   --output_a_file_name=/output/<mp_filename> \\\n   --output_a_index_file_name=/output/<mp_index_filename>\n~~~\n\n## Distributed Operation\nWe have a client/server architecture built using grpc. Tested on [GKE](https://cloud.google.com/kubernetes-engine/) but should be possible to get working on [Amazon EKS](https://aws.amazon.com/eks/) as well. \n\nFor more information on how to use the scamp client and server, please take a look at the [documentation](https://scamp-docs.readthedocs.io/en/latest/)\n\n## Reference\nIf you use SCAMP in your work, please reference the following paper:\n~~~\nZimmerman, Zachary, et al. \"Matrix Profile XIV: Scaling Time Series Motif Discovery with GPUs to Break a Quintillion Pairwise Comparisons a Day and Beyond.\" Proceedings of the ACM Symposium on Cloud Computing. 2019.\n~~~", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zpzim/SCAMP", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyscamp", "package_url": "https://pypi.org/project/pyscamp/", "platform": "", "project_url": "https://pypi.org/project/pyscamp/", "project_urls": {"Homepage": "https://github.com/zpzim/SCAMP"}, "release_url": "https://pypi.org/project/pyscamp/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "SCAlable Matrix Profile", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/zpzim/SCAMP\" rel=\"nofollow\"><img alt=\"Travis Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6b79533c82ef0ffdc910c1505dba71a678ee390d/68747470733a2f2f7472617669732d63692e6f72672f7a707a696d2f5343414d502e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://hub.docker.com/repository/docker/zpzim/scamp\" rel=\"nofollow\"><img alt=\"Docker Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/620330c3d68a87bf1e15d79f68a3ee2fb021143d/68747470733a2f2f696d672e736869656c64732e696f2f646f636b65722f636c6f75642f6275696c642f7a707a696d2f7363616d70\"></a>\n<a href=\"https://scamp-docs.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"RTD Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0639e271bebc3f32db9e042b5b27d977fa4b5dba/68747470733a2f2f696d672e736869656c64732e696f2f72656164746865646f63732f7363616d702d646f6373\"></a></p>\n<h1>SCAMP: SCAlable Matrix Profile</h1>\n<h2>Table of Contents</h2>\n<p><a href=\"https://github.com/zpzim/SCAMP#overview\" rel=\"nofollow\">Overview</a> <br>\n<a href=\"https://github.com/zpzim/SCAMP#documentation\" rel=\"nofollow\">Documentation</a> <br>\n<a href=\"https://github.com/zpzim/SCAMP#performance\" rel=\"nofollow\">Performance</a> <br>\n<a href=\"https://github.com/zpzim/SCAMP#python-module\" rel=\"nofollow\">Python Module</a> <br>\n<a href=\"https://github.com/zpzim/SCAMP#run-using-docker\" rel=\"nofollow\">Run Using Docker</a> <br>\n<a href=\"https://github.com/zpzim/SCAMP#distributed-operation\" rel=\"nofollow\">Distributed Operation</a> <br>\n<a href=\"https://github.com/zpzim/SCAMP#reference\" rel=\"nofollow\">Reference</a></p>\n<h2>Overview</h2>\n<p>This is a GPU/CPU implementation of the SCAMP algorithm. SCAMP takes a time series as input and computes the matrix profile for a particular window size. You can read more at the <a href=\"http://www.cs.ucr.edu/%7Eeamonn/MatrixProfile.html\" rel=\"nofollow\">Matrix Profile Homepage</a>\nThis is a much improved framework over <a href=\"https://github.com/zpzim/STOMPSelfJoin\" rel=\"nofollow\">GPU-STOMP</a> which has the following additional features:</p>\n<ul>\n<li>Tiling for large inputs</li>\n<li>Computation in fp32, mixed fp32/fp64, or fp64 (double is recommended for most datasets, single precision will work for some)</li>\n<li>fp32 version should get good performance on GeForce cards</li>\n<li>AB joins (you can produce the matrix profile from 2 different time series)</li>\n<li>Distributable (we use GCP but other cloud platforms can work) with verified scalability to billions of datapoints</li>\n<li>More types of matrix profiles! See the Docs!</li>\n<li>Extremely Efficient Implementation</li>\n<li>Extensible to adding optimized versions of custom join operations.</li>\n<li>Can compute joins with the CPU (Only enabled for double precision and does not support all-neighbors joins or distance matrix summaries yet)</li>\n<li>Handles NaN input values. The matrix profile will be computed while excluding any subsequence with a NaN value</li>\n<li>Python module: Use SCAMP in Python with pyscamp</li>\n</ul>\n<h2>Documentation</h2>\n<p>SCAMP's documentation can be found at <a href=\"https://scamp-docs.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs</a>.</p>\n<h2>Performance</h2>\n<p>SCAMP is extremely fast, especially on Tesla series GPUs. I belive this repository contains the fastest code in existance for computing the matrix profile. If you find a way to improve the speed of SCAMP, or compute matrix profiles any faster than SCAMP does, please let me know, I would be glad to point to your work and incorporate any improvements that can be made to SCAMP.</p>\n<p>More details on the performance of SCAMP can be found in the documentation.</p>\n<h2>Python module</h2>\n<p>A source distribution for a python3 module using pybind11 is available on pypi.org to install run:</p>\n<pre><code># Python 3 only\npip install pyscamp\n</code></pre>\n<p>then you can use SCAMP in Python as follows:</p>\n<pre><code>import pyscamp as mp # Uses GPU if available and CUDA was available during the build\n\n# Allows checking if pyscamp was built with CUDA and has GPU support\nhas_gpu_support = mp.gpu_supported()\n\n# Self join\nprofile, index = mp.selfjoin(a, sublen)\n# AB join using 4 threads, outtputing pearson correlation.\nprofile, index = mp.abjoin(a, b, sublen, pearson=True, threads=4)\n</code></pre>\n<p>More information and the API documentation for pyscamp is available on <a href=\"https://scamp-docs.readthedocs.io/en/latest/\" rel=\"nofollow\">readthedocs</a></p>\n<h2>Run Using Docker</h2>\n<p>You can run SCAMP via <a href=\"https://github.com/NVIDIA/nvidia-docker\" rel=\"nofollow\">nvidia-docker</a> using the prebuilt <a href=\"https://hub.docker.com/r/zpzim/scamp\" rel=\"nofollow\">image</a> on dockerhub.</p>\n<p>In order to expose the host GPUs nvidia-docker must be installed correctly. Please follow the directions provided on the nvidia-docker github page. The following example uses docker 19.03 functionality:</p>\n<pre><code>docker pull zpzim/scamp:latest\ndocker run --gpus all \\\n   --volume /path/to/host/input/data/directory:/data \\\n   --volume /path/to/host/output/directory:/output \\\n   zpzim/scamp:latest /SCAMP/build/SCAMP \\\n   --window=&lt;window_size&gt; --input_a_file_name=/data/&lt;filename&gt; \\\n   --output_a_file_name=/output/&lt;mp_filename&gt; \\\n   --output_a_index_file_name=/output/&lt;mp_index_filename&gt;\n</code></pre>\n<h2>Distributed Operation</h2>\n<p>We have a client/server architecture built using grpc. Tested on <a href=\"https://cloud.google.com/kubernetes-engine/\" rel=\"nofollow\">GKE</a> but should be possible to get working on <a href=\"https://aws.amazon.com/eks/\" rel=\"nofollow\">Amazon EKS</a> as well.</p>\n<p>For more information on how to use the scamp client and server, please take a look at the <a href=\"https://scamp-docs.readthedocs.io/en/latest/\" rel=\"nofollow\">documentation</a></p>\n<h2>Reference</h2>\n<p>If you use SCAMP in your work, please reference the following paper:</p>\n<pre><code>Zimmerman, Zachary, et al. \"Matrix Profile XIV: Scaling Time Series Motif Discovery with GPUs to Break a Quintillion Pairwise Comparisons a Day and Beyond.\" Proceedings of the ACM Symposium on Cloud Computing. 2019.\n</code></pre>\n\n          </div>"}, "last_serial": 7183503, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "8884588e1c218e792652b52e9b532248", "sha256": "2fc802f35ff5bba858584c9e3906aea9ddf5ca4a15ce8f7d1a65013ef1772dc8"}, "downloads": -1, "filename": "pySCAMP-0.1.tar.gz", "has_sig": false, "md5_digest": "8884588e1c218e792652b52e9b532248", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 887723, "upload_time": "2020-04-16T00:51:59", "upload_time_iso_8601": "2020-04-16T00:51:59.671587Z", "url": "https://files.pythonhosted.org/packages/ef/04/492e557b48c5f099a25ee42eaf3e6a09b665634bddf60c3233d32c79dd82/pySCAMP-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7381191652cddce771b28aecd343d6ed", "sha256": "0c3b331a38e25aabce112b587b6e6b7bcd92105af22bd9398ef99ea6f7c4c0e5"}, "downloads": -1, "filename": "pyscamp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "7381191652cddce771b28aecd343d6ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1220117, "upload_time": "2020-04-22T23:32:01", "upload_time_iso_8601": "2020-04-22T23:32:01.210088Z", "url": "https://files.pythonhosted.org/packages/ee/1b/2ac025626d0c943e8edf076a28fc6f8d3229f9ce95e17b89f22abf822f21/pyscamp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "780c8b309927b7ecc50bd9dc7482d99c", "sha256": "da07a354fc3fc590ee021598fb70eebfd61e8d33517e6420ca50498145992bf3"}, "downloads": -1, "filename": "pySCAMP-0.1.2.tar.gz", "has_sig": false, "md5_digest": "780c8b309927b7ecc50bd9dc7482d99c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1221052, "upload_time": "2020-04-22T23:34:51", "upload_time_iso_8601": "2020-04-22T23:34:51.103735Z", "url": "https://files.pythonhosted.org/packages/80/70/dc3f8b1d64c327932e130537466c0d6710fbdd33afce159d3b180edbf5c4/pySCAMP-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "c4e2125a366495128823ac94a2d58df1", "sha256": "66f2e0f1f27a5d44165adc4ec4333be73df683d40f775c940b6cbb63e7fe23de"}, "downloads": -1, "filename": "pyscamp-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c4e2125a366495128823ac94a2d58df1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 910860, "upload_time": "2020-04-23T00:54:16", "upload_time_iso_8601": "2020-04-23T00:54:16.279170Z", "url": "https://files.pythonhosted.org/packages/fc/77/13076e17a2f483d28a4e92681a135373c925016b6d550ef0e74dd72d827f/pyscamp-0.1.4.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5e7593e9e4b6e4e466620d559332141a", "sha256": "391db37794d637b667b6bf6be4c9fca56d5eb660fbaa4e80a10ab22baf8b2b3c"}, "downloads": -1, "filename": "pyscamp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5e7593e9e4b6e4e466620d559332141a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 912988, "upload_time": "2020-04-26T01:44:39", "upload_time_iso_8601": "2020-04-26T01:44:39.381565Z", "url": "https://files.pythonhosted.org/packages/e7/7e/6bab76ec2aeb3f2337d4a071715172ba5b89f6cd020fb20fc95cd325a5db/pyscamp-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "53f2f93eabb53c73412701cbf83bbb91", "sha256": "7a9d42618709ee6b2ba5ddad0f298ea3d28256dfd9f7f7224b63022d53e237bf"}, "downloads": -1, "filename": "pyscamp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "53f2f93eabb53c73412701cbf83bbb91", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 913955, "upload_time": "2020-04-27T08:35:00", "upload_time_iso_8601": "2020-04-27T08:35:00.522093Z", "url": "https://files.pythonhosted.org/packages/f6/47/4b7d26e3a551479b00efeae20d78aa97a3982fe2db4b85c399e0a7a33e60/pyscamp-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "12d3e2a495e8330481ad8b1651efad95", "sha256": "1a722f10a7a49df6de46a1072f3fd6dbdd57e4606bdc3a1aab174092614bca14"}, "downloads": -1, "filename": "pyscamp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "12d3e2a495e8330481ad8b1651efad95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 903171, "upload_time": "2020-05-06T20:59:36", "upload_time_iso_8601": "2020-05-06T20:59:36.568631Z", "url": "https://files.pythonhosted.org/packages/ca/66/8ddd7e1cd71f2cfc936ffc42d556f8b9c5a45589cbac1795e29f3d4751d3/pyscamp-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "12d3e2a495e8330481ad8b1651efad95", "sha256": "1a722f10a7a49df6de46a1072f3fd6dbdd57e4606bdc3a1aab174092614bca14"}, "downloads": -1, "filename": "pyscamp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "12d3e2a495e8330481ad8b1651efad95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 903171, "upload_time": "2020-05-06T20:59:36", "upload_time_iso_8601": "2020-05-06T20:59:36.568631Z", "url": "https://files.pythonhosted.org/packages/ca/66/8ddd7e1cd71f2cfc936ffc42d556f8b9c5a45589cbac1795e29f3d4751d3/pyscamp-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:19 2020"}