{"info": {"author": "RegioHelden GmbH, Simon Fell et al", "author_email": "opensource@regiohelden.de", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Programming Language :: Python"], "description": "Introduction\n============\n\nThis is a distutils-packaged and updated version of the beatbox module\nby Simon Fell, which is a Python implementation of a client for the\nSalesforce.com Partner Web Services API.\n\n`beatbox module <http://www.pocketsoap.com/beatbox>`_\n\nThis module contains 2 versions of the Salesforce.com client:\n\n* XMLClient\n   The original beatbox version of the client which returns xmltramp objects.\n* PythonClient\n   Marshalls the returned objects into proper Python data types. e.g. integer fields return integers.\n\nCompatibility\n=============\n\nBeatbox supports versions 16.0 through 20.0 of the Salesforce Partner Web\nServices API. However, the following API calls have not been implemented at\nthis time:\n\n* convertLead\n* emptyRecycleBin\n* invalidateSessions\n* logout\n* merge\n* process\n* queryAll\n* undelete\n* describeSObject\n* sendEmail\n* describeDataCategoryGroups\n* describeDataCategoryGroupStructures\n\nBeatbox has been tested with Python 2.4 and Python 2.6.\n\nBasic Usage Examples\n====================\n\nInstantiate a Python Salesforce.com client:\n\n::\n\n   svc = beatbox.PythonClient()\n   svc.login('username', 'passwordTOKEN')\n\n\n(Note that interacting with Salesforce.com via the API requires the use of a\n'security token' which must be appended to the password.)\n\nQuery for contacts with last name 'Doe':\n\n::\n\n   res = svc.query(\"SELECT Id, FirstName, LastName FROM Contact WHERE LastName='Doe'\")\n   res[0]\n   # {'LastName': 'Doe', 'type': 'Contact', 'Id': '0037000000eRf6vAAC', 'FirstName': 'John'}\n   res[0].Id\n   # '0037000000eRf6vAAC'\n\nAdd a new Lead and get the ID of the newly created Lead:\n\n::\n\n   contact = {'type': 'Lead', 'LastName': 'Glick', 'FirstName': 'David', 'Company': 'Individual'}\n   res = svc.create(contact)\n   res[0]['id']\n   # '00Q7000000RVyiHEAT'\n\nMore Examples\n=============\n\nThe examples folder contains the examples for the original beatbox. For\nexamples on how to use the PythonClient see\nsrc/beatbox/tests/test_pythonClient.py.\n\nSome of these other products that have been built on top of beatbox can also\nprovide example of use:\n\n* `Salesforce Base Connector <http://plone.org/products/salesforcebaseconnector>`_\n* `Salesforce PFG Adapter <http://plone.org/products/salesforcepfgadapter>`_\n* `Salesforce Auth Plugin <http://plone.org/products/salesforceauthplugin>`_\n* `RSVP for Salesforce <http://plone.org/products/collective.salesforce.rsvp>`_\n\nAlternatives\n============\n\nDavid Lanstein has created a `Python Salesforce Toolkit <http://code.google.com/p/salesforce-python-toolkit/>`_ that is based on the\n`suds <https://fedorahosted.org/suds/>`_ SOAP library.  Based on limited tests it appears to be somewhat slower\nthan beatbox for operations that return a lot of data; however, it may be a\nbetter option if you want to be able to automatically generate a service proxy\nfor a new WSDL (such as for the Enterprise web services API).\n\nRon Hess from Salesforce.com has adapted beatbox for use with Google App\nEngine.  See `<http://code.google.com/p/force-app-engine/>`\n\n\nRunning Tests\n=============\n\nFirst, we need to add some custom fields to the Contacts object in your Salesforce instance:\n\n* Login to your Salesforce.com instance\n* Browse to Setup --> Customize --> Contacts --> Fields --> \"New\" button\n* Add a Picklist (multi-select) labeled \"Favorite Fruit\", then add: Apple, Orange, Pear\n* Leave default of 3 lines and field name should default to \"Favorite_Fruit\"\n* Add a Number labeled \"Favorite Integer\", with 18 places, 0 decimal places\n* Add a Number labeled \"Favorite Float\", with 13 places, 5 decimal places\n\nCreate a sfconfig file in your python path with the following format:\n\n::\n\n   USERNAME='your salesforce username'\n   PASSWORD='your salesforce passwordTOKEN'\n\nwhere TOKEN is your Salesforce API login token.\nAdd './src' to your PYTHONPATH\nRun the tests:\n\n::\n\n    python src/beatbox/tests/test_beatbox.py\n    python src/beatbox/tests/test_pythonClient.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/RegioHelden/beatboxxx", "keywords": "python salesforce salesforce.com", "license": "GNU GENERAL PUBLIC LICENSE Version 2", "maintainer": null, "maintainer_email": null, "name": "beatboxxx", "package_url": "https://pypi.org/project/beatboxxx/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/beatboxxx/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/RegioHelden/beatboxxx"}, "release_url": "https://pypi.org/project/beatboxxx/21.5/", "requires_dist": null, "requires_python": null, "summary": "A Python client for the Saleforce.com SOAP API", "version": "21.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This is a distutils-packaged and updated version of the beatbox module\nby Simon Fell, which is a Python implementation of a client for the\nSalesforce.com Partner Web Services API.</p>\n<p><a href=\"http://www.pocketsoap.com/beatbox\" rel=\"nofollow\">beatbox module</a></p>\n<p>This module contains 2 versions of the Salesforce.com client:</p>\n<ul>\n<li><dl>\n<dt>XMLClient</dt>\n<dd>The original beatbox version of the client which returns xmltramp objects.</dd>\n</dl>\n</li>\n<li><dl>\n<dt>PythonClient</dt>\n<dd>Marshalls the returned objects into proper Python data types. e.g. integer fields return integers.</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>Beatbox supports versions 16.0 through 20.0 of the Salesforce Partner Web\nServices API. However, the following API calls have not been implemented at\nthis time:</p>\n<ul>\n<li>convertLead</li>\n<li>emptyRecycleBin</li>\n<li>invalidateSessions</li>\n<li>logout</li>\n<li>merge</li>\n<li>process</li>\n<li>queryAll</li>\n<li>undelete</li>\n<li>describeSObject</li>\n<li>sendEmail</li>\n<li>describeDataCategoryGroups</li>\n<li>describeDataCategoryGroupStructures</li>\n</ul>\n<p>Beatbox has been tested with Python 2.4 and Python 2.6.</p>\n</div>\n<div id=\"basic-usage-examples\">\n<h2>Basic Usage Examples</h2>\n<p>Instantiate a Python Salesforce.com client:</p>\n<pre>svc = beatbox.PythonClient()\nsvc.login('username', 'passwordTOKEN')\n</pre>\n<p>(Note that interacting with Salesforce.com via the API requires the use of a\n\u2018security token\u2019 which must be appended to the password.)</p>\n<p>Query for contacts with last name \u2018Doe\u2019:</p>\n<pre>res = svc.query(\"SELECT Id, FirstName, LastName FROM Contact WHERE LastName='Doe'\")\nres[0]\n# {'LastName': 'Doe', 'type': 'Contact', 'Id': '0037000000eRf6vAAC', 'FirstName': 'John'}\nres[0].Id\n# '0037000000eRf6vAAC'\n</pre>\n<p>Add a new Lead and get the ID of the newly created Lead:</p>\n<pre>contact = {'type': 'Lead', 'LastName': 'Glick', 'FirstName': 'David', 'Company': 'Individual'}\nres = svc.create(contact)\nres[0]['id']\n# '00Q7000000RVyiHEAT'\n</pre>\n</div>\n<div id=\"more-examples\">\n<h2>More Examples</h2>\n<p>The examples folder contains the examples for the original beatbox. For\nexamples on how to use the PythonClient see\nsrc/beatbox/tests/test_pythonClient.py.</p>\n<p>Some of these other products that have been built on top of beatbox can also\nprovide example of use:</p>\n<ul>\n<li><a href=\"http://plone.org/products/salesforcebaseconnector\" rel=\"nofollow\">Salesforce Base Connector</a></li>\n<li><a href=\"http://plone.org/products/salesforcepfgadapter\" rel=\"nofollow\">Salesforce PFG Adapter</a></li>\n<li><a href=\"http://plone.org/products/salesforceauthplugin\" rel=\"nofollow\">Salesforce Auth Plugin</a></li>\n<li><a href=\"http://plone.org/products/collective.salesforce.rsvp\" rel=\"nofollow\">RSVP for Salesforce</a></li>\n</ul>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<p>David Lanstein has created a <a href=\"http://code.google.com/p/salesforce-python-toolkit/\" rel=\"nofollow\">Python Salesforce Toolkit</a> that is based on the\n<a href=\"https://fedorahosted.org/suds/\" rel=\"nofollow\">suds</a> SOAP library.  Based on limited tests it appears to be somewhat slower\nthan beatbox for operations that return a lot of data; however, it may be a\nbetter option if you want to be able to automatically generate a service proxy\nfor a new WSDL (such as for the Enterprise web services API).</p>\n<p>Ron Hess from Salesforce.com has adapted beatbox for use with Google App\nEngine.  See <cite>&lt;http://code.google.com/p/force-app-engine/&gt;</cite></p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>First, we need to add some custom fields to the Contacts object in your Salesforce instance:</p>\n<ul>\n<li>Login to your Salesforce.com instance</li>\n<li>Browse to Setup \u2013&gt; Customize \u2013&gt; Contacts \u2013&gt; Fields \u2013&gt; \u201cNew\u201d button</li>\n<li>Add a Picklist (multi-select) labeled \u201cFavorite Fruit\u201d, then add: Apple, Orange, Pear</li>\n<li>Leave default of 3 lines and field name should default to \u201cFavorite_Fruit\u201d</li>\n<li>Add a Number labeled \u201cFavorite Integer\u201d, with 18 places, 0 decimal places</li>\n<li>Add a Number labeled \u201cFavorite Float\u201d, with 13 places, 5 decimal places</li>\n</ul>\n<p>Create a sfconfig file in your python path with the following format:</p>\n<pre>USERNAME='your salesforce username'\nPASSWORD='your salesforce passwordTOKEN'\n</pre>\n<p>where TOKEN is your Salesforce API login token.\nAdd \u2018./src\u2019 to your PYTHONPATH\nRun the tests:</p>\n<pre>python src/beatbox/tests/test_beatbox.py\npython src/beatbox/tests/test_pythonClient.py\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2811087, "releases": {"21.0": [{"comment_text": "", "digests": {"md5": "00aead77aa4b558f43e576504e74ac5a", "sha256": "a451de99ee2124d21d996e0272e628431624193cd2bd8aecc4f142584b303d97"}, "downloads": -1, "filename": "beatboxxx-21.0.tar.gz", "has_sig": false, "md5_digest": "00aead77aa4b558f43e576504e74ac5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30403, "upload_time": "2013-06-03T09:23:03", "upload_time_iso_8601": "2013-06-03T09:23:03.262114Z", "url": "https://files.pythonhosted.org/packages/0b/bc/5e5c13ff3eac8b927f95fb89019398a8b253d050d93cf52722d272c623b8/beatboxxx-21.0.tar.gz", "yanked": false}], "21.1": [{"comment_text": "", "digests": {"md5": "6acd2e8ef40aaffe44f9d2aec404f666", "sha256": "85a08314246731d1bc1d6c3e0f1c8bd85fcec2a2a8217e1d5803de116d4f335c"}, "downloads": -1, "filename": "beatboxxx-21.1.tar.gz", "has_sig": false, "md5_digest": "6acd2e8ef40aaffe44f9d2aec404f666", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28742, "upload_time": "2013-06-03T09:52:07", "upload_time_iso_8601": "2013-06-03T09:52:07.145629Z", "url": "https://files.pythonhosted.org/packages/1e/2e/ec6ee25633b671f94cc3bcd165b317f046016d37ad92bb821d058eb5f9ae/beatboxxx-21.1.tar.gz", "yanked": false}], "21.2": [{"comment_text": "", "digests": {"md5": "b2d5d1605cce51c0b14fbd39a8f27b89", "sha256": "4f0d66d898019a78b001dfece5a0c23c59094476dc0b5210b525aafad92d2763"}, "downloads": -1, "filename": "beatboxxx-21.2.tar.gz", "has_sig": false, "md5_digest": "b2d5d1605cce51c0b14fbd39a8f27b89", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28744, "upload_time": "2013-06-03T09:54:02", "upload_time_iso_8601": "2013-06-03T09:54:02.482057Z", "url": "https://files.pythonhosted.org/packages/f7/77/1dee270ce30a2834754447f42b441d68ac2ab9365d793687f87548cc7b5b/beatboxxx-21.2.tar.gz", "yanked": false}], "21.3": [{"comment_text": "", "digests": {"md5": "0b82bcbcbbb889d8575df4e951919ebd", "sha256": "3997144093e3774bd0158ed6612444ee4bd47a32335f6e864515e65b6171f18d"}, "downloads": -1, "filename": "beatboxxx-21.3.tar.gz", "has_sig": false, "md5_digest": "0b82bcbcbbb889d8575df4e951919ebd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30152, "upload_time": "2013-06-03T10:00:46", "upload_time_iso_8601": "2013-06-03T10:00:46.137181Z", "url": "https://files.pythonhosted.org/packages/99/96/0ec293614b1aef0b1465af7a98eeef763e11ec4c251829bbf6705055a05b/beatboxxx-21.3.tar.gz", "yanked": false}], "21.4": [{"comment_text": "", "digests": {"md5": "64f72f18caecf850ccace0d0bfd85df2", "sha256": "61dea985ae7f67d9c92467e3855ef231b069c80bff70ee94bdd3775396ddb9dc"}, "downloads": -1, "filename": "beatboxxx-21.4.tar.gz", "has_sig": false, "md5_digest": "64f72f18caecf850ccace0d0bfd85df2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28677, "upload_time": "2013-06-03T10:04:39", "upload_time_iso_8601": "2013-06-03T10:04:39.540300Z", "url": "https://files.pythonhosted.org/packages/ca/a4/95b19f74ff0ed4459e046aa87905900bad4df45fe54c234562a163526df3/beatboxxx-21.4.tar.gz", "yanked": false}], "21.5": [{"comment_text": "", "digests": {"md5": "aa890498c2b6712bf36d40c8ebef7b2d", "sha256": "34d9a06576889e0fe2b68dbe0be4f116cb48ff96b13a2fdae36129e4aa20673b"}, "downloads": -1, "filename": "beatboxxx-21.5.tar.gz", "has_sig": false, "md5_digest": "aa890498c2b6712bf36d40c8ebef7b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28690, "upload_time": "2013-06-03T10:17:17", "upload_time_iso_8601": "2013-06-03T10:17:17.171863Z", "url": "https://files.pythonhosted.org/packages/7e/e9/2f864da221ac816632f0a28ca3286f1a0f6623bf6c4aff8ae2c13c65a056/beatboxxx-21.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "aa890498c2b6712bf36d40c8ebef7b2d", "sha256": "34d9a06576889e0fe2b68dbe0be4f116cb48ff96b13a2fdae36129e4aa20673b"}, "downloads": -1, "filename": "beatboxxx-21.5.tar.gz", "has_sig": false, "md5_digest": "aa890498c2b6712bf36d40c8ebef7b2d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28690, "upload_time": "2013-06-03T10:17:17", "upload_time_iso_8601": "2013-06-03T10:17:17.171863Z", "url": "https://files.pythonhosted.org/packages/7e/e9/2f864da221ac816632f0a28ca3286f1a0f6623bf6c4aff8ae2c13c65a056/beatboxxx-21.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:55 2020"}