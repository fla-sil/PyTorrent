{"info": {"author": "Adafruit Industries", "author_email": "circuitpython@adafruit.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: System :: Hardware"], "description": "Introduction\n============\n\n.. image:: https://readthedocs.org/projects/adafruit-circuitpython-ble_midi/badge/?version=latest\n    :target: https://circuitpython.readthedocs.io/projects/ble_midi/en/latest/\n    :alt: Documentation Status\n\n.. image:: https://img.shields.io/discord/327254708534116352.svg\n    :target: https://discord.gg/nBQh6qu\n    :alt: Discord\n\n.. image:: https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI/workflows/Build%20CI/badge.svg\n    :target: https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI/actions\n    :alt: Build Status\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/psf/black\n    :alt: Code Style: Black\n\nBLE MIDI service for CircuitPython\n\n\nDependencies\n=============\nThis driver depends on:\n\n* `Adafruit CircuitPython <https://github.com/adafruit/circuitpython>`_\n\nPlease ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n`the Adafruit library and driver bundle <https://circuitpython.org/libraries>`_.\n\nInstalling from PyPI\n=====================\n.. note:: This library is not available on PyPI yet. Install documentation is included\n   as a standard element. Stay tuned for PyPI availability!\n\nOn supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally `from\nPyPI <https://pypi.org/project/adafruit-circuitpython-ble_midi/>`_. To install for current user:\n\n.. code-block:: shell\n\n    pip3 install adafruit-circuitpython-ble-midi\n\nTo install system-wide (this may be required in some cases):\n\n.. code-block:: shell\n\n    sudo pip3 install adafruit-circuitpython-ble-midi\n\nTo install in a virtual environment in your current project:\n\n.. code-block:: shell\n\n    mkdir project-name && cd project-name\n    python3 -m venv .env\n    source .env/bin/activate\n    pip3 install adafruit-circuitpython-ble-midi\n\nUsage Example\n=============\n\n.. code-block:: python\n\n    \"\"\"\n    This example sends MIDI out. It sends NoteOn and then NoteOff with a random pitch bend.\n    \"\"\"\n\n    import time\n    import random\n    import adafruit_ble\n    from adafruit_ble.advertising.standard import ProvideServicesAdvertisement\n    import adafruit_ble_midi\n    import adafruit_midi\n    from adafruit_midi.control_change import ControlChange\n    from adafruit_midi.note_off import NoteOff\n    from adafruit_midi.note_on import NoteOn\n    from adafruit_midi.pitch_bend import PitchBend\n\n    # Use default HID descriptor\n    midi_service = adafruit_ble_midi.MIDIService()\n    advertisement = ProvideServicesAdvertisement(midi_service)\n    # advertisement.appearance = 961\n\n    ble = adafruit_ble.BLERadio()\n    if ble.connected:\n        for c in ble.connections:\n            c.disconnect()\n\n    midi = adafruit_midi.MIDI(midi_out=midi_service, out_channel=0)\n\n    print(\"advertising\")\n    ble.start_advertising(advertisement)\n\n    while True:\n        print(\"Waiting for connection\")\n        while not ble.connected:\n            pass\n        print(\"Connected\")\n        while ble.connected:\n            midi.send(NoteOn(44, 120))  # G sharp 2nd octave\n            time.sleep(0.25)\n            a_pitch_bend = PitchBend(random.randint(0, 16383))\n            midi.send(a_pitch_bend)\n            time.sleep(0.25)\n            # note how a list of messages can be used\n            midi.send([NoteOff(\"G#2\", 120), ControlChange(3, 44)])\n            time.sleep(0.5)\n        print(\"Disconnected\")\n        print()\n        ble.start_advertising(advertisement)\n\nContributing\n============\n\nContributions are welcome! Please read our `Code of Conduct\n<https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI/blob/master/CODE_OF_CONDUCT.md>`_\nbefore contributing to help this project stay welcoming.\n\nDocumentation\n=============\n\nFor information on building library documentation, please check out `this guide <https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1>`_.", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI", "keywords": "adafruit blinka circuitpython micropython ble_midi ble midi", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "adafruit-circuitpython-ble-midi", "package_url": "https://pypi.org/project/adafruit-circuitpython-ble-midi/", "platform": "", "project_url": "https://pypi.org/project/adafruit-circuitpython-ble-midi/", "project_urls": {"Homepage": "https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI"}, "release_url": "https://pypi.org/project/adafruit-circuitpython-ble-midi/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "BLE MIDI service for CircuitPython", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<a href=\"https://circuitpython.readthedocs.io/projects/ble_midi/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea1e333355dac3783d98ecd80d07a9e0c27626ca/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61646166727569742d63697263756974707974686f6e2d626c655f6d6964692f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://discord.gg/nBQh6qu\" rel=\"nofollow\"><img alt=\"Discord\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e2973e7de9caf359680953316fa3b541f702086c/68747470733a2f2f696d672e736869656c64732e696f2f646973636f72642f3332373235343730383533343131363335322e737667\"></a>\n<a href=\"https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI/actions\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e5db64687a3991d996dc8e4fc6cb1ff7d61c8a83/68747470733a2f2f6769746875622e636f6d2f61646166727569742f41646166727569745f43697263756974507974686f6e5f424c455f4d4944492f776f726b666c6f77732f4275696c6425323043492f62616467652e737667\"></a>\n<a href=\"https://github.com/psf/black\" rel=\"nofollow\"><img alt=\"Code Style: Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<p>BLE MIDI service for CircuitPython</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>This driver depends on:</p>\n<ul>\n<li><a href=\"https://github.com/adafruit/circuitpython\" rel=\"nofollow\">Adafruit CircuitPython</a></li>\n</ul>\n<p>Please ensure all dependencies are available on the CircuitPython filesystem.\nThis is easily achieved by downloading\n<a href=\"https://circuitpython.org/libraries\" rel=\"nofollow\">the Adafruit library and driver bundle</a>.</p>\n</div>\n<div id=\"installing-from-pypi\">\n<h2>Installing from PyPI</h2>\n<div>\n<p>Note</p>\n<p>This library is not available on PyPI yet. Install documentation is included\nas a standard element. Stay tuned for PyPI availability!</p>\n</div>\n<p>On supported GNU/Linux systems like the Raspberry Pi, you can install the driver locally <a href=\"https://pypi.org/project/adafruit-circuitpython-ble_midi/\" rel=\"nofollow\">from\nPyPI</a>. To install for current user:</p>\n<pre>pip3 install adafruit-circuitpython-ble-midi\n</pre>\n<p>To install system-wide (this may be required in some cases):</p>\n<pre>sudo pip3 install adafruit-circuitpython-ble-midi\n</pre>\n<p>To install in a virtual environment in your current project:</p>\n<pre>mkdir project-name <span class=\"o\">&amp;&amp;</span> <span class=\"nb\">cd</span> project-name\npython3 -m venv .env\n<span class=\"nb\">source</span> .env/bin/activate\npip3 install adafruit-circuitpython-ble-midi\n</pre>\n</div>\n<div id=\"usage-example\">\n<h2>Usage Example</h2>\n<pre><span class=\"sd\">\"\"\"\nThis example sends MIDI out. It sends NoteOn and then NoteOff with a random pitch bend.\n\"\"\"</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n<span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_ble</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_ble.advertising.standard</span> <span class=\"kn\">import</span> <span class=\"n\">ProvideServicesAdvertisement</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_ble_midi</span>\n<span class=\"kn\">import</span> <span class=\"nn\">adafruit_midi</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_midi.control_change</span> <span class=\"kn\">import</span> <span class=\"n\">ControlChange</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_midi.note_off</span> <span class=\"kn\">import</span> <span class=\"n\">NoteOff</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_midi.note_on</span> <span class=\"kn\">import</span> <span class=\"n\">NoteOn</span>\n<span class=\"kn\">from</span> <span class=\"nn\">adafruit_midi.pitch_bend</span> <span class=\"kn\">import</span> <span class=\"n\">PitchBend</span>\n\n<span class=\"c1\"># Use default HID descriptor</span>\n<span class=\"n\">midi_service</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_ble_midi</span><span class=\"o\">.</span><span class=\"n\">MIDIService</span><span class=\"p\">()</span>\n<span class=\"n\">advertisement</span> <span class=\"o\">=</span> <span class=\"n\">ProvideServicesAdvertisement</span><span class=\"p\">(</span><span class=\"n\">midi_service</span><span class=\"p\">)</span>\n<span class=\"c1\"># advertisement.appearance = 961</span>\n\n<span class=\"n\">ble</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_ble</span><span class=\"o\">.</span><span class=\"n\">BLERadio</span><span class=\"p\">()</span>\n<span class=\"k\">if</span> <span class=\"n\">ble</span><span class=\"o\">.</span><span class=\"n\">connected</span><span class=\"p\">:</span>\n    <span class=\"k\">for</span> <span class=\"n\">c</span> <span class=\"ow\">in</span> <span class=\"n\">ble</span><span class=\"o\">.</span><span class=\"n\">connections</span><span class=\"p\">:</span>\n        <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">disconnect</span><span class=\"p\">()</span>\n\n<span class=\"n\">midi</span> <span class=\"o\">=</span> <span class=\"n\">adafruit_midi</span><span class=\"o\">.</span><span class=\"n\">MIDI</span><span class=\"p\">(</span><span class=\"n\">midi_out</span><span class=\"o\">=</span><span class=\"n\">midi_service</span><span class=\"p\">,</span> <span class=\"n\">out_channel</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"advertising\"</span><span class=\"p\">)</span>\n<span class=\"n\">ble</span><span class=\"o\">.</span><span class=\"n\">start_advertising</span><span class=\"p\">(</span><span class=\"n\">advertisement</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Waiting for connection\"</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">ble</span><span class=\"o\">.</span><span class=\"n\">connected</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Connected\"</span><span class=\"p\">)</span>\n    <span class=\"k\">while</span> <span class=\"n\">ble</span><span class=\"o\">.</span><span class=\"n\">connected</span><span class=\"p\">:</span>\n        <span class=\"n\">midi</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">NoteOn</span><span class=\"p\">(</span><span class=\"mi\">44</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">))</span>  <span class=\"c1\"># G sharp 2nd octave</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n        <span class=\"n\">a_pitch_bend</span> <span class=\"o\">=</span> <span class=\"n\">PitchBend</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">randint</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">16383</span><span class=\"p\">))</span>\n        <span class=\"n\">midi</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">a_pitch_bend</span><span class=\"p\">)</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">)</span>\n        <span class=\"c1\"># note how a list of messages can be used</span>\n        <span class=\"n\">midi</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">([</span><span class=\"n\">NoteOff</span><span class=\"p\">(</span><span class=\"s2\">\"G#2\"</span><span class=\"p\">,</span> <span class=\"mi\">120</span><span class=\"p\">),</span> <span class=\"n\">ControlChange</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">44</span><span class=\"p\">)])</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Disconnected\"</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">()</span>\n    <span class=\"n\">ble</span><span class=\"o\">.</span><span class=\"n\">start_advertising</span><span class=\"p\">(</span><span class=\"n\">advertisement</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Contributions are welcome! Please read our <a href=\"https://github.com/adafruit/Adafruit_CircuitPython_BLE_MIDI/blob/master/CODE_OF_CONDUCT.md\" rel=\"nofollow\">Code of Conduct</a>\nbefore contributing to help this project stay welcoming.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>For information on building library documentation, please check out <a href=\"https://learn.adafruit.com/creating-and-sharing-a-circuitpython-library/sharing-our-docs-on-readthedocs#sphinx-5-1\" rel=\"nofollow\">this guide</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 7177180, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "2d0f6568f8b3e26c5e520a5086f0ea80", "sha256": "492291f4408db195e1ed16a83ccafffde11e23f0fd8822c50fed789e34e59cdc"}, "downloads": -1, "filename": "adafruit-circuitpython-ble-midi-0.8.0.tar.gz", "has_sig": false, "md5_digest": "2d0f6568f8b3e26c5e520a5086f0ea80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21541, "upload_time": "2020-04-01T01:11:51", "upload_time_iso_8601": "2020-04-01T01:11:51.319588Z", "url": "https://files.pythonhosted.org/packages/42/6d/bab693d6810837f4a81272f5a64401c5421b6758aa5450a07ed84758d5a7/adafruit-circuitpython-ble-midi-0.8.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "7d46623aa22ac304983aaaa0a17bee4d", "sha256": "824c0f095b597579a4da7e452334fc18135b62468ed8832fb0def99c9099f3f3"}, "downloads": -1, "filename": "adafruit-circuitpython-ble-midi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7d46623aa22ac304983aaaa0a17bee4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21669, "upload_time": "2020-05-06T03:05:43", "upload_time_iso_8601": "2020-05-06T03:05:43.312692Z", "url": "https://files.pythonhosted.org/packages/c8/28/343237a3a02a72445796461f2fe197de9fd192943a4c64b13cb2b2872649/adafruit-circuitpython-ble-midi-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d46623aa22ac304983aaaa0a17bee4d", "sha256": "824c0f095b597579a4da7e452334fc18135b62468ed8832fb0def99c9099f3f3"}, "downloads": -1, "filename": "adafruit-circuitpython-ble-midi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "7d46623aa22ac304983aaaa0a17bee4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21669, "upload_time": "2020-05-06T03:05:43", "upload_time_iso_8601": "2020-05-06T03:05:43.312692Z", "url": "https://files.pythonhosted.org/packages/c8/28/343237a3a02a72445796461f2fe197de9fd192943a4c64b13cb2b2872649/adafruit-circuitpython-ble-midi-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:06 2020"}