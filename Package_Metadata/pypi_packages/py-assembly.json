{"info": {"author": "chaokunyang", "author_email": "", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Programming Language :: Python :: 3.6"], "description": "py_assembly\n===========\n\npy_assembly is a tool of package python code libs and dependencies for offline installation. py_assembly implements an project build process like maven assembly\n\nGet Started\n-----------\n\nInstall py_assembly\n\n.. code-block:: bash\n\n   pip install py_assembly\n\n``setup.py`` example\n\n.. code-block:: python\n\n   from setuptools import find_packages, setup\n   from assembly.package import Package\n\n   setup(\n       name='py_assembly_example',\n       author=\"chaokunyang\",\n       version='1.0',\n       description='assemble project with all dependencies for install offline',\n       long_description=open('README.rst').read(),\n       classifiers=[\n           'Programming Language :: Python :: 3.6',\n           'Intended Audience :: Developers',\n         ],\n       keywords='assembly dist offline install dependencies',\n       url='http://github.com/chaokunyang/py_assembly/example',\n       license='Apache License 2.0',\n       packages=find_packages(),\n       include_package_data=True,\n       zip_safe=False,\n       cmdclass={\n           \"package\": Package\n       }\n   )\n\nPackage\n\n.. code-block:: bash\n\n   python setup.py package\n\nInstall\n\nInstall dependencies\n\n.. code-block:: bash\n\n   pip install -r requirements.txt --no-index --find-links wheelhouse\n\nInstall project package\n\n.. code-block:: bash\n\n   pip install .\n\nOthers\n------\n\nYou can do it manually:\n\n\n* Download libs\n  .. code-block:: bash\n\n       pip download django -d wheelhouse\n       pip download -r requirements.txt -d wheelhouse\n\n* Install libs\n  .. code-block:: bash\n\n       pip install -r requirements.txt --no-index --find-links wheelhouse", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/chaokunyang/py_assembly", "keywords": "assembly dist offline install dependencies", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "py-assembly", "package_url": "https://pypi.org/project/py-assembly/", "platform": "", "project_url": "https://pypi.org/project/py-assembly/", "project_urls": {"Homepage": "http://github.com/chaokunyang/py_assembly"}, "release_url": "https://pypi.org/project/py-assembly/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "assemble project with all dependencies for install offline", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>py_assembly is a tool of package python code libs and dependencies for offline installation. py_assembly implements an project build process like maven assembly</p>\n<div id=\"get-started\">\n<h2>Get Started</h2>\n<p>Install py_assembly</p>\n<pre>pip install py_assembly\n</pre>\n<p><tt>setup.py</tt> example</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">setuptools</span> <span class=\"kn\">import</span> <span class=\"n\">find_packages</span><span class=\"p\">,</span> <span class=\"n\">setup</span>\n<span class=\"kn\">from</span> <span class=\"nn\">assembly.package</span> <span class=\"kn\">import</span> <span class=\"n\">Package</span>\n\n<span class=\"n\">setup</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'py_assembly_example'</span><span class=\"p\">,</span>\n    <span class=\"n\">author</span><span class=\"o\">=</span><span class=\"s2\">\"chaokunyang\"</span><span class=\"p\">,</span>\n    <span class=\"n\">version</span><span class=\"o\">=</span><span class=\"s1\">'1.0'</span><span class=\"p\">,</span>\n    <span class=\"n\">description</span><span class=\"o\">=</span><span class=\"s1\">'assemble project with all dependencies for install offline'</span><span class=\"p\">,</span>\n    <span class=\"n\">long_description</span><span class=\"o\">=</span><span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'README.rst'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(),</span>\n    <span class=\"n\">classifiers</span><span class=\"o\">=</span><span class=\"p\">[</span>\n        <span class=\"s1\">'Programming Language :: Python :: 3.6'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'Intended Audience :: Developers'</span><span class=\"p\">,</span>\n      <span class=\"p\">],</span>\n    <span class=\"n\">keywords</span><span class=\"o\">=</span><span class=\"s1\">'assembly dist offline install dependencies'</span><span class=\"p\">,</span>\n    <span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://github.com/chaokunyang/py_assembly/example'</span><span class=\"p\">,</span>\n    <span class=\"n\">license</span><span class=\"o\">=</span><span class=\"s1\">'Apache License 2.0'</span><span class=\"p\">,</span>\n    <span class=\"n\">packages</span><span class=\"o\">=</span><span class=\"n\">find_packages</span><span class=\"p\">(),</span>\n    <span class=\"n\">include_package_data</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">zip_safe</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"n\">cmdclass</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"package\"</span><span class=\"p\">:</span> <span class=\"n\">Package</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">)</span>\n</pre>\n<p>Package</p>\n<pre>python setup.py package\n</pre>\n<p>Install</p>\n<p>Install dependencies</p>\n<pre>pip install -r requirements.txt --no-index --find-links wheelhouse\n</pre>\n<p>Install project package</p>\n<pre>pip install .\n</pre>\n</div>\n<div id=\"others\">\n<h2>Others</h2>\n<p>You can do it manually:</p>\n<ul>\n<li><p>Download libs\n.. code-block:: bash</p>\n<blockquote>\n<p>pip download django -d wheelhouse\npip download -r requirements.txt -d wheelhouse</p>\n</blockquote>\n</li>\n<li><p>Install libs\n.. code-block:: bash</p>\n<blockquote>\n<p>pip install -r requirements.txt \u2013no-index \u2013find-links wheelhouse</p>\n</blockquote>\n</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 4103285, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "c76f96857e8d61fd84a0ebd197e6d475", "sha256": "acc180de1fa1e8dcdb1ed5233629a89787da0d12b60ad1ed737906e212bb04cf"}, "downloads": -1, "filename": "py_assembly-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c76f96857e8d61fd84a0ebd197e6d475", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3276, "upload_time": "2018-07-26T07:07:42", "upload_time_iso_8601": "2018-07-26T07:07:42.921862Z", "url": "https://files.pythonhosted.org/packages/cf/34/4c287c58d2e3cf044df2471da207e197bd4b71446b7ec324e7b1710671ea/py_assembly-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c76f96857e8d61fd84a0ebd197e6d475", "sha256": "acc180de1fa1e8dcdb1ed5233629a89787da0d12b60ad1ed737906e212bb04cf"}, "downloads": -1, "filename": "py_assembly-1.0.1.tar.gz", "has_sig": false, "md5_digest": "c76f96857e8d61fd84a0ebd197e6d475", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3276, "upload_time": "2018-07-26T07:07:42", "upload_time_iso_8601": "2018-07-26T07:07:42.921862Z", "url": "https://files.pythonhosted.org/packages/cf/34/4c287c58d2e3cf044df2471da207e197bd4b71446b7ec324e7b1710671ea/py_assembly-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:06 2020"}