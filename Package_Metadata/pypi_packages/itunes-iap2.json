{"info": {"author": "kiri1120", "author_email": "kazuki.s1120@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3"], "description": "itunes-iap\n~~~~~~~~~~\n\nQuick example\n-------------\n\nCreate request to create a request to itunes verify api.\n\n    >>> from itunesiap import Request, InvalidReceipt\n    >>> request = Request(raw_data) # base64-encoded data\n    >>> try:\n    >>>     receipt = request.verify()\n    >>> except InvalidReceipt as e:\n    >>>     print 'invalid receipt'\n    >>> print receipt.product_id # any other values are available as property!\n\nPractical useful values are: product_id, original_transaction_id, quantity, unique_identifier\n\nQuick example with password (Apple Shared Secret)\n-------------\n\nCreate request to create a request to itunes verify api.\n\n    >>> from itunesiap import Request, InvalidReceipt\n    >>> request = Request(raw_data, password) # base64-encoded data\n    >>> try:\n    >>>     receipt = request.verify()\n    >>> except InvalidReceipt as e:\n    >>>     print 'invalid receipt'\n    >>> print receipt.product_id # any other values are available as property!\n    >>> print receipt.latest_receipt # Get the latest receipt returned by Apple\n\n\nVerification policy\n-------------------\n\nSet verification mode for production or sandbox api. Review mode also available for appstore review.\n\n    >>> from itunesiap import Request\n    >>> with request.verification_mode('review'): # enable both production and sandbox for appstore review. 'production', 'sandbox' or 'review'\n    >>>     receipt = Request(raw_data).verify()\n\nWorkflow Shortcut\n-----------------\n\n    >>> def test_paid(original_transaction_id):\n    >>>     if db.contains(original_transaction_id):\n    >>>         raise CustomException # custom exception\n    >>>\n    >>> import itunesiap\n    >>> try:\n    >>>     response = itunesiap.verify(raw_data, test_paid)\n    >>> except itunesiap.RequestError:\n    >>>     pass\n    >>> except CustomException:\n    >>>     pass\n    >>> # response is instance of `itunesiap.core.Response`\n\n\nForked from https://github.com/youknowone/itunes-iap", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nana-music/itunes-iap", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "itunes-iap2", "package_url": "https://pypi.org/project/itunes-iap2/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/itunes-iap2/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nana-music/itunes-iap"}, "release_url": "https://pypi.org/project/itunes-iap2/0.6.2.2/", "requires_dist": null, "requires_python": null, "summary": "Apple iTunes In-app purchase verification api.", "version": "0.6.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            itunes-iap<br>~~~~~~~~~~<br><br>Quick example<br>-------------<br><br>Create request to create a request to itunes verify api.<br><br>    &gt;&gt;&gt; from itunesiap import Request, InvalidReceipt<br>    &gt;&gt;&gt; request = Request(raw_data) # base64-encoded data<br>    &gt;&gt;&gt; try:<br>    &gt;&gt;&gt;     receipt = request.verify()<br>    &gt;&gt;&gt; except InvalidReceipt as e:<br>    &gt;&gt;&gt;     print 'invalid receipt'<br>    &gt;&gt;&gt; print receipt.product_id # any other values are available as property!<br><br>Practical useful values are: product_id, original_transaction_id, quantity, unique_identifier<br><br>Quick example with password (Apple Shared Secret)<br>-------------<br><br>Create request to create a request to itunes verify api.<br><br>    &gt;&gt;&gt; from itunesiap import Request, InvalidReceipt<br>    &gt;&gt;&gt; request = Request(raw_data, password) # base64-encoded data<br>    &gt;&gt;&gt; try:<br>    &gt;&gt;&gt;     receipt = request.verify()<br>    &gt;&gt;&gt; except InvalidReceipt as e:<br>    &gt;&gt;&gt;     print 'invalid receipt'<br>    &gt;&gt;&gt; print receipt.product_id # any other values are available as property!<br>    &gt;&gt;&gt; print receipt.latest_receipt # Get the latest receipt returned by Apple<br><br><br>Verification policy<br>-------------------<br><br>Set verification mode for production or sandbox api. Review mode also available for appstore review.<br><br>    &gt;&gt;&gt; from itunesiap import Request<br>    &gt;&gt;&gt; with request.verification_mode('review'): # enable both production and sandbox for appstore review. 'production', 'sandbox' or 'review'<br>    &gt;&gt;&gt;     receipt = Request(raw_data).verify()<br><br>Workflow Shortcut<br>-----------------<br><br>    &gt;&gt;&gt; def test_paid(original_transaction_id):<br>    &gt;&gt;&gt;     if db.contains(original_transaction_id):<br>    &gt;&gt;&gt;         raise CustomException # custom exception<br>    &gt;&gt;&gt;<br>    &gt;&gt;&gt; import itunesiap<br>    &gt;&gt;&gt; try:<br>    &gt;&gt;&gt;     response = itunesiap.verify(raw_data, test_paid)<br>    &gt;&gt;&gt; except itunesiap.RequestError:<br>    &gt;&gt;&gt;     pass<br>    &gt;&gt;&gt; except CustomException:<br>    &gt;&gt;&gt;     pass<br>    &gt;&gt;&gt; # response is instance of `itunesiap.core.Response`<br><br><br>Forked from https://github.com/youknowone/itunes-iap\n          </div>"}, "last_serial": 1426322, "releases": {"0.6.2.2": [{"comment_text": "built for Darwin-14.1.0", "digests": {"md5": "b9c438a57224de1611d5f413fff9ba44", "sha256": "b41a66529d9e2c90171db3371a6036b24e4668c761dec1b046e41da55ed83ede"}, "downloads": -1, "filename": "itunes-iap2-0.6.2.2.macosx-10.10-x86_64.tar.gz", "has_sig": false, "md5_digest": "b9c438a57224de1611d5f413fff9ba44", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 4000, "upload_time": "2015-02-17T04:09:15", "upload_time_iso_8601": "2015-02-17T04:09:15.662642Z", "url": "https://files.pythonhosted.org/packages/c3/8e/9e463bdf3200a6f359248364433816d41c8d0b2f042ad63411fc3f00129b/itunes-iap2-0.6.2.2.macosx-10.10-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "27a2a450c4734fb2cdd3e1dd9f66b3a5", "sha256": "277caefbdd8aadb46702add1d4a90173e9a5820b1b68f7948ba26764093eb67a"}, "downloads": -1, "filename": "itunes_iap2-0.6.2.2-py2.7.egg", "has_sig": false, "md5_digest": "27a2a450c4734fb2cdd3e1dd9f66b3a5", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 5039, "upload_time": "2015-02-17T04:09:17", "upload_time_iso_8601": "2015-02-17T04:09:17.617615Z", "url": "https://files.pythonhosted.org/packages/dd/8d/b0a1de8f02376c52b55643018213cc32e4e76f1a9cf01ef8ee5e5d95910c/itunes_iap2-0.6.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "af43d26b6d5dd241b7c1ebac79b1fd09", "sha256": "7186c32dc0c0ed8e83a4fef49428f50c37c86c64818e5487585065645fca0670"}, "downloads": -1, "filename": "itunes-iap2-0.6.2.2.tar.gz", "has_sig": false, "md5_digest": "af43d26b6d5dd241b7c1ebac79b1fd09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5164, "upload_time": "2015-02-17T04:09:13", "upload_time_iso_8601": "2015-02-17T04:09:13.375190Z", "url": "https://files.pythonhosted.org/packages/b9/db/c1735536864e49252116d238477371d4687d35d2f82d18d1a1553e08cb20/itunes-iap2-0.6.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Darwin-14.1.0", "digests": {"md5": "b9c438a57224de1611d5f413fff9ba44", "sha256": "b41a66529d9e2c90171db3371a6036b24e4668c761dec1b046e41da55ed83ede"}, "downloads": -1, "filename": "itunes-iap2-0.6.2.2.macosx-10.10-x86_64.tar.gz", "has_sig": false, "md5_digest": "b9c438a57224de1611d5f413fff9ba44", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 4000, "upload_time": "2015-02-17T04:09:15", "upload_time_iso_8601": "2015-02-17T04:09:15.662642Z", "url": "https://files.pythonhosted.org/packages/c3/8e/9e463bdf3200a6f359248364433816d41c8d0b2f042ad63411fc3f00129b/itunes-iap2-0.6.2.2.macosx-10.10-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "27a2a450c4734fb2cdd3e1dd9f66b3a5", "sha256": "277caefbdd8aadb46702add1d4a90173e9a5820b1b68f7948ba26764093eb67a"}, "downloads": -1, "filename": "itunes_iap2-0.6.2.2-py2.7.egg", "has_sig": false, "md5_digest": "27a2a450c4734fb2cdd3e1dd9f66b3a5", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 5039, "upload_time": "2015-02-17T04:09:17", "upload_time_iso_8601": "2015-02-17T04:09:17.617615Z", "url": "https://files.pythonhosted.org/packages/dd/8d/b0a1de8f02376c52b55643018213cc32e4e76f1a9cf01ef8ee5e5d95910c/itunes_iap2-0.6.2.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "af43d26b6d5dd241b7c1ebac79b1fd09", "sha256": "7186c32dc0c0ed8e83a4fef49428f50c37c86c64818e5487585065645fca0670"}, "downloads": -1, "filename": "itunes-iap2-0.6.2.2.tar.gz", "has_sig": false, "md5_digest": "af43d26b6d5dd241b7c1ebac79b1fd09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5164, "upload_time": "2015-02-17T04:09:13", "upload_time_iso_8601": "2015-02-17T04:09:13.375190Z", "url": "https://files.pythonhosted.org/packages/b9/db/c1735536864e49252116d238477371d4687d35d2f82d18d1a1553e08cb20/itunes-iap2-0.6.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:35 2020"}