{"info": {"author": "lordoftheflies", "author_email": "laszlo.hegedus@cherubits.hu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.11", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization", "Topic :: System :: Monitoring"], "description": "# hydra-notebooks\n\nJupyter notebooks integration for Django. \nFeatures:\n - Expose and API to handle notebooks,\n - Import as modules\n - Execute by notebook\n - Embedd to Django-extensions shell plus\n\n### Configuration\n\nJupyter configuration has to be add to the site directory, aside the ```settings.py```\n\n### Usage\n\n#### Importing and using notebooks\n\nAssume, we have a notebook called ```my_notebook``` with the following cell:\n\n```python\nclass SampleClass(object):\n    \n    def sample_method(self):\n        print('execute sample_method')\n        pass\n\n    def sample_method_with_output(self):\n        print('execute sample_method_with_output')\n        return 'output'\n\n    def sample_method_with_inoutput(self, param, *args, **kwargs):\n        print('execute sample_method_with_inoutput(%s, %s, %s)' % (param, args, kwargs))\n        return 'output'\n    \n    def __str__(self):\n        return 'sample_class'\n```\n\n```python\n# To use the module capabilities\nimport hydra_notebook\n\nimport notebooks.my_notebook as mynb\n\nnew_instance = mynb.SampleClass()\n\nnew_instance.sample_method_with_output()\n\n``` \n\nAs result:\n\n```\nexecute sample_method_with_output\n```\n\n#### Executing notebooks\n\n```python\nimport hydra_notebook\nimport os\n\nwith hydra_notebook.NotebookExecutor(path=os.path.join('.', 'notebooks'), fullname='demo_notebook') as e:\n    e()\n```\n\n#### Displaying notebooks as HTML5 page\n\n```/notebook/index```: List all notebooks\n\n```/notebook/detail/<notebook_name>```: Show a notebook\n\n#### Displaying notebooks as JSON\n\n```/notebook/```: List all notebooks\n\n```/notebook/<notebook_name>/```: Show a notebook\n\n```/notebook/<notebook_name>/execute```: Execute a notebook\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lordoftheflies/hydra-notebook/", "keywords": "", "license": "Apache 2.0 License", "maintainer": "", "maintainer_email": "", "name": "hydra-notebook", "package_url": "https://pypi.org/project/hydra-notebook/", "platform": "", "project_url": "https://pypi.org/project/hydra-notebook/", "project_urls": {"Homepage": "https://github.com/lordoftheflies/hydra-notebook/"}, "release_url": "https://pypi.org/project/hydra-notebook/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Embeddable notebooks.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # hydra-notebooks<br><br>Jupyter notebooks integration for Django. <br>Features:<br> - Expose and API to handle notebooks,<br> - Import as modules<br> - Execute by notebook<br> - Embedd to Django-extensions shell plus<br><br>### Configuration<br><br>Jupyter configuration has to be add to the site directory, aside the ```settings.py```<br><br>### Usage<br><br>#### Importing and using notebooks<br><br>Assume, we have a notebook called ```my_notebook``` with the following cell:<br><br>```python<br>class SampleClass(object):<br>    <br>    def sample_method(self):<br>        print('execute sample_method')<br>        pass<br><br>    def sample_method_with_output(self):<br>        print('execute sample_method_with_output')<br>        return 'output'<br><br>    def sample_method_with_inoutput(self, param, *args, **kwargs):<br>        print('execute sample_method_with_inoutput(%s, %s, %s)' % (param, args, kwargs))<br>        return 'output'<br>    <br>    def __str__(self):<br>        return 'sample_class'<br>```<br><br>```python<br># To use the module capabilities<br>import hydra_notebook<br><br>import notebooks.my_notebook as mynb<br><br>new_instance = mynb.SampleClass()<br><br>new_instance.sample_method_with_output()<br><br>``` <br><br>As result:<br><br>```<br>execute sample_method_with_output<br>```<br><br>#### Executing notebooks<br><br>```python<br>import hydra_notebook<br>import os<br><br>with hydra_notebook.NotebookExecutor(path=os.path.join('.', 'notebooks'), fullname='demo_notebook') as e:<br>    e()<br>```<br><br>#### Displaying notebooks as HTML5 page<br><br>```/notebook/index```: List all notebooks<br><br>```/notebook/detail/&lt;notebook_name&gt;```: Show a notebook<br><br>#### Displaying notebooks as JSON<br><br>```/notebook/```: List all notebooks<br><br>```/notebook/&lt;notebook_name&gt;/```: Show a notebook<br><br>```/notebook/&lt;notebook_name&gt;/execute```: Execute a notebook<br>\n          </div>"}, "last_serial": 4030496, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "be3fa18716ffa167e6840480c62d8cda", "sha256": "0085717b350d1eb1d60fc586521f9e59c423f71c7935ac1bdc1b648416c240d8"}, "downloads": -1, "filename": "hydra-notebook-1.0.0.tar.gz", "has_sig": false, "md5_digest": "be3fa18716ffa167e6840480c62d8cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16429, "upload_time": "2018-07-04T15:39:30", "upload_time_iso_8601": "2018-07-04T15:39:30.159885Z", "url": "https://files.pythonhosted.org/packages/fb/4d/ce087fd04c1fbc6f8b5457ccf28b16b1967f91d2886618c5261921172ae5/hydra-notebook-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "be3fa18716ffa167e6840480c62d8cda", "sha256": "0085717b350d1eb1d60fc586521f9e59c423f71c7935ac1bdc1b648416c240d8"}, "downloads": -1, "filename": "hydra-notebook-1.0.0.tar.gz", "has_sig": false, "md5_digest": "be3fa18716ffa167e6840480c62d8cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16429, "upload_time": "2018-07-04T15:39:30", "upload_time_iso_8601": "2018-07-04T15:39:30.159885Z", "url": "https://files.pythonhosted.org/packages/fb/4d/ce087fd04c1fbc6f8b5457ccf28b16b1967f91d2886618c5261921172ae5/hydra-notebook-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:39 2020"}