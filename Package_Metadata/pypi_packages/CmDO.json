{"info": {"author": "Steve Cooper", "author_email": "steve@wijjo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: POSIX", "Programming Language :: Python", "Topic :: Documentation", "Topic :: Software Development", "Topic :: Software Development :: Documentation", "Topic :: Software Development :: Libraries :: Application Frameworks", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Text Processing :: Markup :: XML", "Topic :: Utilities"], "description": "CmDO\r\n====\r\n\r\nSimplifies construction of command-based tools.  Tool development consists of:\r\n\r\n* Creating module files in one of several known locations using special file\r\n  extensions.\r\n* Writing ordinary Python functions.\r\n* Adding decorators to choose exported functions and to describe argument\r\n  types/repetition/defaults.\r\n* Creating new argument type classes as needed.\r\n* Adding descriptive documentation as structured text in doc strings,\r\n  decorators, and or separate documentation modules.\r\n\r\nBenefits include:\r\n\r\n* Full command line interpretation, including support for both user-friendly\r\n  simplified syntax and developer-friendly Python expressions.\r\n* Argument type and quantity checking.\r\n* Argument validation, conversion and defaults.\r\n* Keyword assignment for optional arguments.\r\n* Automatic support for simple bash shell command line completion.\r\n* Command line help for modules, functions and other documentation.\r\n* Publish help to pretty text, HTML, XML, or custom format.\r\n* View help in browser or other viewer based on mime type.\r\n* On-demand module loading.\r\n* Import-less inter-module calling and references through special CMDO\r\n  namespace.\r\n* Complete support for all normal Python capabilities.\r\n* Error handling, logging, traceback, etc.\r\n* Simple interactive prompted command input.", "description_content_type": null, "docs_url": null, "download_url": "http://wijjo.com/download", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://wijjo.com/cmdo", "keywords": "", "license": "GPL2", "maintainer": "", "maintainer_email": "", "name": "CmDO", "package_url": "https://pypi.org/project/CmDO/", "platform": "Linux", "project_url": "https://pypi.org/project/CmDO/", "project_urls": {"Download": "http://wijjo.com/download", "Homepage": "http://wijjo.com/cmdo"}, "release_url": "https://pypi.org/project/CmDO/0.7/", "requires_dist": null, "requires_python": null, "summary": "Create command-driven scripts with smart arguments and help derived from decorated functions.", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Simplifies construction of command-based tools.  Tool development consists of:</p>\n<ul>\n<li>Creating module files in one of several known locations using special file\nextensions.</li>\n<li>Writing ordinary Python functions.</li>\n<li>Adding decorators to choose exported functions and to describe argument\ntypes/repetition/defaults.</li>\n<li>Creating new argument type classes as needed.</li>\n<li>Adding descriptive documentation as structured text in doc strings,\ndecorators, and or separate documentation modules.</li>\n</ul>\n<p>Benefits include:</p>\n<ul>\n<li>Full command line interpretation, including support for both user-friendly\nsimplified syntax and developer-friendly Python expressions.</li>\n<li>Argument type and quantity checking.</li>\n<li>Argument validation, conversion and defaults.</li>\n<li>Keyword assignment for optional arguments.</li>\n<li>Automatic support for simple bash shell command line completion.</li>\n<li>Command line help for modules, functions and other documentation.</li>\n<li>Publish help to pretty text, HTML, XML, or custom format.</li>\n<li>View help in browser or other viewer based on mime type.</li>\n<li>On-demand module loading.</li>\n<li>Import-less inter-module calling and references through special CMDO\nnamespace.</li>\n<li>Complete support for all normal Python capabilities.</li>\n<li>Error handling, logging, traceback, etc.</li>\n<li>Simple interactive prompted command input.</li>\n</ul>\n\n          </div>"}, "last_serial": 35745, "releases": {"0.7": []}, "urls": [], "timestamp": "Thu May  7 22:18:34 2020"}