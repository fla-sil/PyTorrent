{"info": {"author": "Andrew Zhu", "author_email": "andrew@zhu.codes", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Games/Entertainment :: Board Games", "Topic :: Games/Entertainment :: Role-Playing"], "description": "# d20\n\n[![PyPI version shields.io](https://img.shields.io/pypi/v/d20.svg)](https://pypi.python.org/pypi/d20/)\n[![PyPI license](https://img.shields.io/pypi/l/d20.svg)](https://pypi.python.org/pypi/d20/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/d20.svg)](https://pypi.python.org/pypi/d20/)\n![](https://github.com/avrae/d20/workflows/Test%20Package/badge.svg)\n[![codecov](https://codecov.io/gh/avrae/d20/branch/master/graph/badge.svg)](https://codecov.io/gh/avrae/d20)\n[![Documentation Status](https://readthedocs.org/projects/d20/badge/?version=latest)](https://d20.readthedocs.io/en/latest/start.html?badge=latest)\n\n\n\n\nA fast, powerful, and extensible dice engine for D&D, d20 systems, and any other system that needs dice!\n\n## Key Features\n- Quick to start - just use `d20.roll()`!\n- Optimized for speed and memory efficiency\n- Highly extensible API for custom behaviour and dice stringification\n- Built-in execution limits against malicious dice expressions\n- Tree-based dice representation for easy traversal \n\n## Installing\n**Requires Python 3.6+**.\n\n```bash\npython3 -m pip install -U d20\n```\n\n## Quickstart\n\n```python\n>>> import d20\n>>> result = d20.roll(\"1d20+5\")\n>>> str(result)\n'1d20 (10) + 5 = `15`'\n>>> result.total\n15\n>>> result.crit\n<CritType.NORMAL: 0>\n>>> str(result.ast)\n'1d20 + 5'\n```\n\n## Documentation\n\nCheck out the docs on [Read the Docs](https://d20.readthedocs.io/en/latest/start.html)!\n\n## Dice Syntax\nThis is the grammar supported by the dice parser, roughly ordered in how tightly the grammar binds.\n\n### Numbers\nThese are the atoms used at the base of the syntax tree.\n\n| Name    | Syntax            | Description       | Examples           |\n|---------|-------------------|-------------------|--------------------|\n| literal | `INT`, `DECIMAL`  | A literal number. | `1`, `0.5`, `3.14` |\n| dice    | `INT? \"d\" INT`    | A set of die.     | `d20`, `3d6`       |\n| set     | `\"(\" (num (\",\" num)* \",\"?)? \")\"` | A set of expressions. | `()`, `(2,)`, `(1, 3+3, 1d20)` |\n\nNote that `(3d6)` is equivalent to `3d6`, but `(3d6,)` is the set containing the one element `3d6`.\n\n### Set Operations\nThese operations can be performed on dice and sets.\n\n#### Grammar\n| Name    | Syntax            | Description       | Examples           |\n|---------|-------------------|-------------------|--------------------|\n| set_op  | `operation selector` | An operation on a set (see below). | `kh3`, `ro<3` |\n| selector | `seltype INT` | A selection on a set (see below). | `3`, `h1`, `>2` |\n\n#### Operators\nOperators are always followed by a selector, and operate on the items in the set that match the selector.\n\n| Syntax | Name | Description |\n|---|---|---|\n| k | keep | Keeps all matched values. |\n| p | drop | Drops all matched values. |\n| rr | reroll | Rerolls all matched values until none match. (Dice only) |\n| ro | reroll once | Rerolls all matched values once. (Dice only) |\n| ra | reroll and add | Rerolls up to one matched value once, keeping the original roll. (Dice only) |\n| e | explode on | Rolls another die for each matched value. (Dice only) |\n| mi | minimum | Sets the minimum value of each die. (Dice only) |\n| ma | maximum | Sets the maximum value of each die. (Dice only) |\n\n#### Selectors\nSelectors select from the remaining kept values in a set.\n\n| Syntax | Name | Description |\n|---|---|---|\n| X | literal | All values in this set that are literally this value. |\n| hX | highest X | The highest X values in the set. |\n| lX | lowest X | The lowest X values in the set. |\n| \\>X | greater than X | All values in this set greater than X. |\n| <X | less than X | All values in this set less than X. |\n\n### Unary Operations\n| Syntax | Name | Description |\n|---|---|---|\n| +X | positive | Does nothing. |\n| -X | negative | The negative value of X. |\n\n### Binary Operations\n| Syntax | Name |\n|---|---|\n| X * Y | multiplication |\n| X / Y | division |\n| X // Y | int division |\n| X % Y | modulo |\n| X + Y | addition |\n| X - Y | subtraction |\n| X == Y | equality |\n| X >= Y | greater/equal |\n| X <= Y | less/equal |\n| X > Y | greater than |\n| X < Y | less than |\n| X != Y | inequality |\n\n### Examples\n```python\n>>> from d20 import roll\n>>> r = roll(\"4d6kh3\")  # highest 3 of 4 6-sided dice\n>>> r.total\n14\n>>> str(r)\n'4d6kh3 (4, 4, **6**, ~~3~~) = `14`'\n\n>>> r = roll(\"2d6ro<3\")  # roll 2d6s, then reroll any 1s or 2s once\n>>> r.total\n9\n>>> str(r)\n'2d6ro<3 (**~~1~~**, 3, **6**) = `9`'\n\n>>> r = roll(\"8d6mi2\")  # roll 8d6s, with each die having a minimum roll of 2\n>>> r.total\n33\n>>> str(r)\n'8d6mi2 (1 -> 2, **6**, 4, 2, **6**, 2, 5, **6**) = `33`'\n\n>>> r = roll(\"(1d4 + 1, 3, 2d6kl1)kh1\")  # the highest of 1d4+1, 3, and the lower of 2 d6s\n>>> r.total\n3\n>>> str(r)\n'(1d4 (2) + 1, ~~3~~, ~~2d6kl1 (2, 5)~~)kh1 = `3`'\n```\n\n## Custom Stringifier\nBy default, d20 stringifies the result of each dice roll formatted in Markdown, which may not be useful in your application. \nTo change this behaviour, you can create a subclass of [`d20.Stringifier`](https://github.com/avrae/d20/blob/master/d20/stringifiers.py) \n(or `d20.SimpleStringifier` as a starting point), and implement the `_str_*` methods to customize how your dice tree is stringified. \n\nThen, simply pass an instance of your stringifier into the `roll()` function!\n```python\n>>> import d20\n>>> class MyStringifier(d20.SimpleStringifier):\n...     def _stringify(self, node):\n...         if not node.kept:\n...             return 'X'\n...         return super()._stringify(node)\n...\n...     def _str_expression(self, node):\n...         return f\"The result of the roll {self._stringify(node.roll)} was {int(node.total)}\"\n\n>>> result = d20.roll(\"4d6e6kh3\", stringifier=MyStringifier())\n>>> str(result)\n'The result of the roll 4d6e6kh3 (X, 5, 6!, 6!, X, X) was 17'\n```\n\n## Annotations and Comments\nEach dice node supports value annotations - i.e., a method to \"tag\" parts of a roll with some indicator. For example,\n```python\n>>> from d20 import roll\n>>> str(roll(\"3d6 [fire] + 1d4 [piercing]\"))\n'3d6 (3, 2, 2) [fire] + 1d4 (3) [piercing] = `10`'\n\n>>> str(roll(\"-(1d8 + 3) [healing]\"))\n'-(1d8 (7) + 3) [healing] = `-10`'\n\n>>> str(roll(\"(1 [one], 2 [two], 3 [three])\"))\n'(1 [one], 2 [two], 3 [three]) = `6`'\n```\nare all examples of valid annotations. Annotations are purely visual and do not affect the evaluation of the roll by default.\n\nAdditionally, when `allow_comments=True` is passed to `roll()`, the result of the roll may have a comment:\n```python\n>>> from d20 import roll\n>>> result = roll(\"1d20 I rolled a d20\", allow_comments=True)\n>>> str(result)\n'1d20 (13) = `13`'\n>>> result.comment\n'I rolled a d20'\n```\nNote that while `allow_comments` is enabled, AST caching is disabled, which may lead to slightly worse performance.\n\n## Traversing Dice Results\nThe raw results of dice rolls are returned in [`Expression`](https://github.com/avrae/d20/blob/master/d20/models.py#L76) \nobjects, which can be accessed as such: \n```python\n>>> from d20 import roll\n>>> result = roll(\"3d6 + 1d4 + 3\")\n>>> str(result)\n'3d6 (4, **6**, **6**) + 1d4 (**1**) + 3 = `20`'\n>>> result.expr\n<Expression roll=<BinOp left=<BinOp left=<Dice num=3 size=6 values=[<Die size=6 values=[<Literal 4>]>, <Die size=6 values=[<Literal 6>]>, <Die size=6 values=[<Literal 6>]>] operations=[]> op=+ right=<Dice num=1 size=4 values=[<Die size=4 values=[<Literal 1>]>] operations=[]>> op=+ right=<Literal 3>> comment=None>\n```\nor, in a easier-to-read format,\n```text\n<Expression roll=\n    <BinOp left=\n        <BinOp left=\n            <Dice num=3 size=6 values=\n                [\n                    <Die size=6 values=[<Literal 4>]>,\n                    <Die size=6 values=[<Literal 6>]>,\n                    <Die size=6 values=[<Literal 6>]>\n                ]\n                operations=[]>\n            op=+\n            right=<Dice num=1 size=4 values=\n                [<Die size=4 values=[<Literal 1>]>]\n            operations=[]>\n        >\n        op=+\n        right=<Literal 3>\n    >\ncomment=None>\n```\nFrom here, `Expression.children` returns a tree of nodes representing the expression from left to right, each of which\nmay have children of their own. This can be used to easily search for specific dice, look for the left-most operand,\nor modify the result by adding in resistances or other modifications.\n\n### Examples\nFinding the left and right-most operands:\n```python\n>>> from d20 import roll\n\n>>> binop = roll(\"1 + 2 + 3 + 4\")\n>>> left = binop.expr\n>>> while left.children:\n...     left = left.children[0]\n>>> left\n<Literal 1>\n\n>>> right = binop.expr\n>>> while right.children:\n...     right = right.children[-1]\n>>> right\n<Literal 4>\n\n>>> from d20 import utils  # these patterns are available in the utils submodule:\n>>> utils.leftmost(binop.expr)\n<Literal 1>\n>>> utils.rightmost(binop.expr)\n<Literal 4>\n```\n\n\nSearching for the d4:\n```python\n>>> from d20 import roll, Dice, SimpleStringifier, utils\n\n>>> mixed = roll(\"-1d8 + 4 - (3, 1d4)kh1\")\n>>> str(mixed)\n'-1d8 (**8**) + 4 - (3, ~~1d4 (3)~~)kh1 = `-7`'\n>>> root = mixed.expr\n>>> result = utils.dfs(root, lambda node: isinstance(node, Dice) and node.num == 1 and node.size == 4)\n>>> result\n<Dice num=1 size=4 values=[<Die size=4 values=[<Literal 3>]>] operations=[]>\n>>> SimpleStringifier().stringify(result)\n'1d4 (3)'\n```\nAs a note, even though a `Dice` object is the parent of `Die` objects, `Dice.children` returns an empty list, since it's \nmore common to look for the dice, and not each individual component of that dice.\n\n## Performance\nBy default, the parser caches the 256 most frequently used dice expressions in an LFU cache, allowing for a significant \nspeedup when rolling many of the same kinds of rolls. This caching is disabled when `allow_comments` is True.\n\nWith caching:\n```bash\n$ python3 -m timeit -s \"from d20 import roll\" \"roll('1d20')\"\n10000 loops, best of 5: 21.6 usec per loop\n$ python3 -m timeit -s \"from d20 import roll\" \"roll('100d20')\"\n500 loops, best of 5: 572 usec per loop\n$ python3 -m timeit -s \"from d20 import roll; expr='1d20+'*50+'1d20'\" \"roll(expr)\"\n500 loops, best of 5: 732 usec per loop\n$ python3 -m timeit -s \"from d20 import roll\" \"roll('10d20rr<20')\"\n1000 loops, best of 5: 1.13 msec per loop\n```\n\nWithout caching:\n```bash\n$ python3 -m timeit -s \"from d20 import roll\" \"roll('1d20')\"\n5000 loops, best of 5: 61.6 usec per loop\n$ python3 -m timeit -s \"from d20 import roll\" \"roll('100d20')\"\n500 loops, best of 5: 620 usec per loop\n$ python3 -m timeit -s \"from d20 import roll; expr='1d20+'*50+'1d20'\" \"roll(expr)\"\n500 loops, best of 5: 2.1 msec per loop\n$ python3 -m timeit -s \"from d20 import roll\" \"roll('10d20rr<20')\"\n1000 loops, best of 5: 1.26 msec per loop\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/avrae/formaldice", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "d20", "package_url": "https://pypi.org/project/d20/", "platform": "", "project_url": "https://pypi.org/project/d20/", "project_urls": {"Homepage": "https://github.com/avrae/formaldice"}, "release_url": "https://pypi.org/project/d20/1.0.2/", "requires_dist": ["cachetools (>=3.1.0)", "lark-parser (~=0.8.0)"], "requires_python": ">=3.6", "summary": "A formal grammar-based dice parser and roller for D&D and other dice systems.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>d20</h1>\n<p><a href=\"https://pypi.python.org/pypi/d20/\" rel=\"nofollow\"><img alt=\"PyPI version shields.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1e626f9d406cda07496936f6f91d7748612c9c48/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6432302e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/d20/\" rel=\"nofollow\"><img alt=\"PyPI license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c056f8135026618aa2198ce9df5dbd970ade0e2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6432302e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/d20/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e1b83613145d22dfcccba389b458a5e79f4f3c08/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6432302e737667\"></a>\n<img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/427fff0998cf7027713e42044f508ae3b435de1a/68747470733a2f2f6769746875622e636f6d2f61767261652f6432302f776f726b666c6f77732f546573742532305061636b6167652f62616467652e737667\">\n<a href=\"https://codecov.io/gh/avrae/d20\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d7d59cd3bd0bb3d48fc85af6ec4f9cb7d7bac878/68747470733a2f2f636f6465636f762e696f2f67682f61767261652f6432302f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://d20.readthedocs.io/en/latest/start.html?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b08727e5f08859b2d0bfec8cf81c53d248e7370d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6432302f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>A fast, powerful, and extensible dice engine for D&amp;D, d20 systems, and any other system that needs dice!</p>\n<h2>Key Features</h2>\n<ul>\n<li>Quick to start - just use <code>d20.roll()</code>!</li>\n<li>Optimized for speed and memory efficiency</li>\n<li>Highly extensible API for custom behaviour and dice stringification</li>\n<li>Built-in execution limits against malicious dice expressions</li>\n<li>Tree-based dice representation for easy traversal</li>\n</ul>\n<h2>Installing</h2>\n<p><strong>Requires Python 3.6+</strong>.</p>\n<pre>python3 -m pip install -U d20\n</pre>\n<h2>Quickstart</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">d20</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">d20</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"1d20+5\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"s1\">'1d20 (10) + 5 = `15`'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">total</span>\n<span class=\"mi\">15</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">crit</span>\n<span class=\"o\">&lt;</span><span class=\"n\">CritType</span><span class=\"o\">.</span><span class=\"n\">NORMAL</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">ast</span><span class=\"p\">)</span>\n<span class=\"s1\">'1d20 + 5'</span>\n</pre>\n<h2>Documentation</h2>\n<p>Check out the docs on <a href=\"https://d20.readthedocs.io/en/latest/start.html\" rel=\"nofollow\">Read the Docs</a>!</p>\n<h2>Dice Syntax</h2>\n<p>This is the grammar supported by the dice parser, roughly ordered in how tightly the grammar binds.</p>\n<h3>Numbers</h3>\n<p>These are the atoms used at the base of the syntax tree.</p>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Syntax</th>\n<th>Description</th>\n<th>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>literal</td>\n<td><code>INT</code>, <code>DECIMAL</code></td>\n<td>A literal number.</td>\n<td><code>1</code>, <code>0.5</code>, <code>3.14</code></td>\n</tr>\n<tr>\n<td>dice</td>\n<td><code>INT? \"d\" INT</code></td>\n<td>A set of die.</td>\n<td><code>d20</code>, <code>3d6</code></td>\n</tr>\n<tr>\n<td>set</td>\n<td><code>\"(\" (num (\",\" num)* \",\"?)? \")\"</code></td>\n<td>A set of expressions.</td>\n<td><code>()</code>, <code>(2,)</code>, <code>(1, 3+3, 1d20)</code></td>\n</tr></tbody></table>\n<p>Note that <code>(3d6)</code> is equivalent to <code>3d6</code>, but <code>(3d6,)</code> is the set containing the one element <code>3d6</code>.</p>\n<h3>Set Operations</h3>\n<p>These operations can be performed on dice and sets.</p>\n<h4>Grammar</h4>\n<table>\n<thead>\n<tr>\n<th>Name</th>\n<th>Syntax</th>\n<th>Description</th>\n<th>Examples</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>set_op</td>\n<td><code>operation selector</code></td>\n<td>An operation on a set (see below).</td>\n<td><code>kh3</code>, <code>ro&lt;3</code></td>\n</tr>\n<tr>\n<td>selector</td>\n<td><code>seltype INT</code></td>\n<td>A selection on a set (see below).</td>\n<td><code>3</code>, <code>h1</code>, <code>&gt;2</code></td>\n</tr></tbody></table>\n<h4>Operators</h4>\n<p>Operators are always followed by a selector, and operate on the items in the set that match the selector.</p>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>k</td>\n<td>keep</td>\n<td>Keeps all matched values.</td>\n</tr>\n<tr>\n<td>p</td>\n<td>drop</td>\n<td>Drops all matched values.</td>\n</tr>\n<tr>\n<td>rr</td>\n<td>reroll</td>\n<td>Rerolls all matched values until none match. (Dice only)</td>\n</tr>\n<tr>\n<td>ro</td>\n<td>reroll once</td>\n<td>Rerolls all matched values once. (Dice only)</td>\n</tr>\n<tr>\n<td>ra</td>\n<td>reroll and add</td>\n<td>Rerolls up to one matched value once, keeping the original roll. (Dice only)</td>\n</tr>\n<tr>\n<td>e</td>\n<td>explode on</td>\n<td>Rolls another die for each matched value. (Dice only)</td>\n</tr>\n<tr>\n<td>mi</td>\n<td>minimum</td>\n<td>Sets the minimum value of each die. (Dice only)</td>\n</tr>\n<tr>\n<td>ma</td>\n<td>maximum</td>\n<td>Sets the maximum value of each die. (Dice only)</td>\n</tr></tbody></table>\n<h4>Selectors</h4>\n<p>Selectors select from the remaining kept values in a set.</p>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>X</td>\n<td>literal</td>\n<td>All values in this set that are literally this value.</td>\n</tr>\n<tr>\n<td>hX</td>\n<td>highest X</td>\n<td>The highest X values in the set.</td>\n</tr>\n<tr>\n<td>lX</td>\n<td>lowest X</td>\n<td>The lowest X values in the set.</td>\n</tr>\n<tr>\n<td>&gt;X</td>\n<td>greater than X</td>\n<td>All values in this set greater than X.</td>\n</tr>\n<tr>\n<td>&lt;X</td>\n<td>less than X</td>\n<td>All values in this set less than X.</td>\n</tr></tbody></table>\n<h3>Unary Operations</h3>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Name</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>+X</td>\n<td>positive</td>\n<td>Does nothing.</td>\n</tr>\n<tr>\n<td>-X</td>\n<td>negative</td>\n<td>The negative value of X.</td>\n</tr></tbody></table>\n<h3>Binary Operations</h3>\n<table>\n<thead>\n<tr>\n<th>Syntax</th>\n<th>Name</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>X * Y</td>\n<td>multiplication</td>\n</tr>\n<tr>\n<td>X / Y</td>\n<td>division</td>\n</tr>\n<tr>\n<td>X // Y</td>\n<td>int division</td>\n</tr>\n<tr>\n<td>X % Y</td>\n<td>modulo</td>\n</tr>\n<tr>\n<td>X + Y</td>\n<td>addition</td>\n</tr>\n<tr>\n<td>X - Y</td>\n<td>subtraction</td>\n</tr>\n<tr>\n<td>X == Y</td>\n<td>equality</td>\n</tr>\n<tr>\n<td>X &gt;= Y</td>\n<td>greater/equal</td>\n</tr>\n<tr>\n<td>X &lt;= Y</td>\n<td>less/equal</td>\n</tr>\n<tr>\n<td>X &gt; Y</td>\n<td>greater than</td>\n</tr>\n<tr>\n<td>X &lt; Y</td>\n<td>less than</td>\n</tr>\n<tr>\n<td>X != Y</td>\n<td>inequality</td>\n</tr></tbody></table>\n<h3>Examples</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">roll</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"4d6kh3\"</span><span class=\"p\">)</span>  <span class=\"c1\"># highest 3 of 4 6-sided dice</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">total</span>\n<span class=\"mi\">14</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"s1\">'4d6kh3 (4, 4, **6**, ~~3~~) = `14`'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"2d6ro&lt;3\"</span><span class=\"p\">)</span>  <span class=\"c1\"># roll 2d6s, then reroll any 1s or 2s once</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">total</span>\n<span class=\"mi\">9</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"s1\">'2d6ro&lt;3 (**~~1~~**, 3, **6**) = `9`'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"8d6mi2\"</span><span class=\"p\">)</span>  <span class=\"c1\"># roll 8d6s, with each die having a minimum roll of 2</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">total</span>\n<span class=\"mi\">33</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"s1\">'8d6mi2 (1 -&gt; 2, **6**, 4, 2, **6**, 2, 5, **6**) = `33`'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"(1d4 + 1, 3, 2d6kl1)kh1\"</span><span class=\"p\">)</span>  <span class=\"c1\"># the highest of 1d4+1, 3, and the lower of 2 d6s</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">total</span>\n<span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span>\n<span class=\"s1\">'(1d4 (2) + 1, ~~3~~, ~~2d6kl1 (2, 5)~~)kh1 = `3`'</span>\n</pre>\n<h2>Custom Stringifier</h2>\n<p>By default, d20 stringifies the result of each dice roll formatted in Markdown, which may not be useful in your application.\nTo change this behaviour, you can create a subclass of <a href=\"https://github.com/avrae/d20/blob/master/d20/stringifiers.py\" rel=\"nofollow\"><code>d20.Stringifier</code></a>\n(or <code>d20.SimpleStringifier</code> as a starting point), and implement the <code>_str_*</code> methods to customize how your dice tree is stringified.</p>\n<p>Then, simply pass an instance of your stringifier into the <code>roll()</code> function!</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">d20</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">MyStringifier</span><span class=\"p\">(</span><span class=\"n\">d20</span><span class=\"o\">.</span><span class=\"n\">SimpleStringifier</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">_stringify</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">kept</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>             <span class=\"k\">return</span> <span class=\"s1\">'X'</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">_stringify</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>\n<span class=\"o\">...</span>     <span class=\"k\">def</span> <span class=\"nf\">_str_expression</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>         <span class=\"k\">return</span> <span class=\"sa\">f</span><span class=\"s2\">\"The result of the roll </span><span class=\"si\">{</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_stringify</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\"> was </span><span class=\"si\">{</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">total</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s2\">\"</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">d20</span><span class=\"o\">.</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"4d6e6kh3\"</span><span class=\"p\">,</span> <span class=\"n\">stringifier</span><span class=\"o\">=</span><span class=\"n\">MyStringifier</span><span class=\"p\">())</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"s1\">'The result of the roll 4d6e6kh3 (X, 5, 6!, 6!, X, X) was 17'</span>\n</pre>\n<h2>Annotations and Comments</h2>\n<p>Each dice node supports value annotations - i.e., a method to \"tag\" parts of a roll with some indicator. For example,</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">roll</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"3d6 [fire] + 1d4 [piercing]\"</span><span class=\"p\">))</span>\n<span class=\"s1\">'3d6 (3, 2, 2) [fire] + 1d4 (3) [piercing] = `10`'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"-(1d8 + 3) [healing]\"</span><span class=\"p\">))</span>\n<span class=\"s1\">'-(1d8 (7) + 3) [healing] = `-10`'</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"(1 [one], 2 [two], 3 [three])\"</span><span class=\"p\">))</span>\n<span class=\"s1\">'(1 [one], 2 [two], 3 [three]) = `6`'</span>\n</pre>\n<p>are all examples of valid annotations. Annotations are purely visual and do not affect the evaluation of the roll by default.</p>\n<p>Additionally, when <code>allow_comments=True</code> is passed to <code>roll()</code>, the result of the roll may have a comment:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">roll</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"1d20 I rolled a d20\"</span><span class=\"p\">,</span> <span class=\"n\">allow_comments</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"s1\">'1d20 (13) = `13`'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">comment</span>\n<span class=\"s1\">'I rolled a d20'</span>\n</pre>\n<p>Note that while <code>allow_comments</code> is enabled, AST caching is disabled, which may lead to slightly worse performance.</p>\n<h2>Traversing Dice Results</h2>\n<p>The raw results of dice rolls are returned in <a href=\"https://github.com/avrae/d20/blob/master/d20/models.py#L76\" rel=\"nofollow\"><code>Expression</code></a>\nobjects, which can be accessed as such:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">roll</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"3d6 + 1d4 + 3\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"s1\">'3d6 (4, **6**, **6**) + 1d4 (**1**) + 3 = `20`'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">expr</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Expression</span> <span class=\"n\">roll</span><span class=\"o\">=&lt;</span><span class=\"n\">BinOp</span> <span class=\"n\">left</span><span class=\"o\">=&lt;</span><span class=\"n\">BinOp</span> <span class=\"n\">left</span><span class=\"o\">=&lt;</span><span class=\"n\">Dice</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">3</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Die</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">4</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Die</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">Die</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">6</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">6</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">]</span> <span class=\"n\">operations</span><span class=\"o\">=</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span> <span class=\"n\">op</span><span class=\"o\">=+</span> <span class=\"n\">right</span><span class=\"o\">=&lt;</span><span class=\"n\">Dice</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">1</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Die</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">]</span> <span class=\"n\">operations</span><span class=\"o\">=</span><span class=\"p\">[]</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">op</span><span class=\"o\">=+</span> <span class=\"n\">right</span><span class=\"o\">=&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">3</span><span class=\"o\">&gt;&gt;</span> <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"o\">&gt;</span>\n</pre>\n<p>or, in a easier-to-read format,</p>\n<pre>&lt;Expression roll=\n    &lt;BinOp left=\n        &lt;BinOp left=\n            &lt;Dice num=3 size=6 values=\n                [\n                    &lt;Die size=6 values=[&lt;Literal 4&gt;]&gt;,\n                    &lt;Die size=6 values=[&lt;Literal 6&gt;]&gt;,\n                    &lt;Die size=6 values=[&lt;Literal 6&gt;]&gt;\n                ]\n                operations=[]&gt;\n            op=+\n            right=&lt;Dice num=1 size=4 values=\n                [&lt;Die size=4 values=[&lt;Literal 1&gt;]&gt;]\n            operations=[]&gt;\n        &gt;\n        op=+\n        right=&lt;Literal 3&gt;\n    &gt;\ncomment=None&gt;\n</pre>\n<p>From here, <code>Expression.children</code> returns a tree of nodes representing the expression from left to right, each of which\nmay have children of their own. This can be used to easily search for specific dice, look for the left-most operand,\nor modify the result by adding in resistances or other modifications.</p>\n<h3>Examples</h3>\n<p>Finding the left and right-most operands:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">roll</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">binop</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"1 + 2 + 3 + 4\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">left</span> <span class=\"o\">=</span> <span class=\"n\">binop</span><span class=\"o\">.</span><span class=\"n\">expr</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">while</span> <span class=\"n\">left</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">left</span> <span class=\"o\">=</span> <span class=\"n\">left</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">left</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"n\">binop</span><span class=\"o\">.</span><span class=\"n\">expr</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">while</span> <span class=\"n\">right</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">right</span> <span class=\"o\">=</span> <span class=\"n\">right</span><span class=\"o\">.</span><span class=\"n\">children</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">right</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">4</span><span class=\"o\">&gt;</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">utils</span>  <span class=\"c1\"># these patterns are available in the utils submodule:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">leftmost</span><span class=\"p\">(</span><span class=\"n\">binop</span><span class=\"o\">.</span><span class=\"n\">expr</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">1</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">rightmost</span><span class=\"p\">(</span><span class=\"n\">binop</span><span class=\"o\">.</span><span class=\"n\">expr</span><span class=\"p\">)</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">4</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Searching for the d4:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">d20</span> <span class=\"kn\">import</span> <span class=\"n\">roll</span><span class=\"p\">,</span> <span class=\"n\">Dice</span><span class=\"p\">,</span> <span class=\"n\">SimpleStringifier</span><span class=\"p\">,</span> <span class=\"n\">utils</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">mixed</span> <span class=\"o\">=</span> <span class=\"n\">roll</span><span class=\"p\">(</span><span class=\"s2\">\"-1d8 + 4 - (3, 1d4)kh1\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">mixed</span><span class=\"p\">)</span>\n<span class=\"s1\">'-1d8 (**8**) + 4 - (3, ~~1d4 (3)~~)kh1 = `-7`'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">mixed</span><span class=\"o\">.</span><span class=\"n\">expr</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">utils</span><span class=\"o\">.</span><span class=\"n\">dfs</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"k\">lambda</span> <span class=\"n\">node</span><span class=\"p\">:</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">node</span><span class=\"p\">,</span> <span class=\"n\">Dice</span><span class=\"p\">)</span> <span class=\"ow\">and</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">num</span> <span class=\"o\">==</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"n\">node</span><span class=\"o\">.</span><span class=\"n\">size</span> <span class=\"o\">==</span> <span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span>\n<span class=\"o\">&lt;</span><span class=\"n\">Dice</span> <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">1</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Die</span> <span class=\"n\">size</span><span class=\"o\">=</span><span class=\"mi\">4</span> <span class=\"n\">values</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"o\">&lt;</span><span class=\"n\">Literal</span> <span class=\"mi\">3</span><span class=\"o\">&gt;</span><span class=\"p\">]</span><span class=\"o\">&gt;</span><span class=\"p\">]</span> <span class=\"n\">operations</span><span class=\"o\">=</span><span class=\"p\">[]</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">SimpleStringifier</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">stringify</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span>\n<span class=\"s1\">'1d4 (3)'</span>\n</pre>\n<p>As a note, even though a <code>Dice</code> object is the parent of <code>Die</code> objects, <code>Dice.children</code> returns an empty list, since it's\nmore common to look for the dice, and not each individual component of that dice.</p>\n<h2>Performance</h2>\n<p>By default, the parser caches the 256 most frequently used dice expressions in an LFU cache, allowing for a significant\nspeedup when rolling many of the same kinds of rolls. This caching is disabled when <code>allow_comments</code> is True.</p>\n<p>With caching:</p>\n<pre>$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll\"</span> <span class=\"s2\">\"roll('1d20')\"</span>\n<span class=\"m\">10000</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">21</span>.6 usec per loop\n$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll\"</span> <span class=\"s2\">\"roll('100d20')\"</span>\n<span class=\"m\">500</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">572</span> usec per loop\n$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll; expr='1d20+'*50+'1d20'\"</span> <span class=\"s2\">\"roll(expr)\"</span>\n<span class=\"m\">500</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">732</span> usec per loop\n$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll\"</span> <span class=\"s2\">\"roll('10d20rr&lt;20')\"</span>\n<span class=\"m\">1000</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">1</span>.13 msec per loop\n</pre>\n<p>Without caching:</p>\n<pre>$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll\"</span> <span class=\"s2\">\"roll('1d20')\"</span>\n<span class=\"m\">5000</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">61</span>.6 usec per loop\n$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll\"</span> <span class=\"s2\">\"roll('100d20')\"</span>\n<span class=\"m\">500</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">620</span> usec per loop\n$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll; expr='1d20+'*50+'1d20'\"</span> <span class=\"s2\">\"roll(expr)\"</span>\n<span class=\"m\">500</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">2</span>.1 msec per loop\n$ python3 -m timeit -s <span class=\"s2\">\"from d20 import roll\"</span> <span class=\"s2\">\"roll('10d20rr&lt;20')\"</span>\n<span class=\"m\">1000</span> loops, best of <span class=\"m\">5</span>: <span class=\"m\">1</span>.26 msec per loop\n</pre>\n\n          </div>"}, "last_serial": 7167925, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8f94ff39544b66d013124e0d0c8a6b97", "sha256": "e576c7f60f65fa05ada35d3ac3ec3132e90680215007d7648cfe28b02369078b"}, "downloads": -1, "filename": "d20-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8f94ff39544b66d013124e0d0c8a6b97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18499, "upload_time": "2020-01-21T21:01:05", "upload_time_iso_8601": "2020-01-21T21:01:05.458991Z", "url": "https://files.pythonhosted.org/packages/2e/6e/dc0f16f2bcabb8faf0bde4f7158a3e242c1c913c409ac85af299ee789e93/d20-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf13b9956947d0a6fdc9fcd0fb2b3785", "sha256": "cd9fc8ce91650e9a100535cffb9c8ab29f81350735bda45744acb28a8aca4038"}, "downloads": -1, "filename": "d20-0.1.0.tar.gz", "has_sig": false, "md5_digest": "bf13b9956947d0a6fdc9fcd0fb2b3785", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9003, "upload_time": "2020-01-21T21:01:07", "upload_time_iso_8601": "2020-01-21T21:01:07.791778Z", "url": "https://files.pythonhosted.org/packages/92/20/1a0b32587727a5108723f200275c8052986e49432f8ac1c4de7358d1db3e/d20-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b355d3caaf7a7dac772f82fa781a73ba", "sha256": "5f76c61ff1dd828eac9eb7817cc8c00c69dc8038ed66e13eaeddd8af7641f5ff"}, "downloads": -1, "filename": "d20-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b355d3caaf7a7dac772f82fa781a73ba", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 11499, "upload_time": "2020-01-22T22:28:42", "upload_time_iso_8601": "2020-01-22T22:28:42.794021Z", "url": "https://files.pythonhosted.org/packages/4a/ce/727ab34cc925547f49508bb44850347af293dc0da371a9149ec2368d0554/d20-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "406eff19a542a4a1616b98ff6b843d4c", "sha256": "4a75e691c0a3175a29b0322d9b32bc60a03c1b01fe908672edf92677d77ebe82"}, "downloads": -1, "filename": "d20-0.2.0.tar.gz", "has_sig": false, "md5_digest": "406eff19a542a4a1616b98ff6b843d4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9896, "upload_time": "2020-01-22T22:28:44", "upload_time_iso_8601": "2020-01-22T22:28:44.025004Z", "url": "https://files.pythonhosted.org/packages/c2/05/e3320f8dd0c4df03ce71d4bac17387b9087640ec36ef4ce71990eb83d749/d20-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c9b182491ecd5a758654d45280938959", "sha256": "181aacaa85e819e99cb03b698945f3fadab7740e598d12340753704ab72f82d5"}, "downloads": -1, "filename": "d20-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9b182491ecd5a758654d45280938959", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14228, "upload_time": "2020-01-28T20:33:51", "upload_time_iso_8601": "2020-01-28T20:33:51.325561Z", "url": "https://files.pythonhosted.org/packages/ba/9f/8736f0148d3c64dfcb4cf9f71f7aa4bf87a68a1891f645aa5d9c523f28f6/d20-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "63a38ce7c34e9c600d9a49f480ade41c", "sha256": "b42d272ab0de68d40aeeaf9ef059b7f4b99000e63dee6833e9e825457120695c"}, "downloads": -1, "filename": "d20-0.3.0.tar.gz", "has_sig": false, "md5_digest": "63a38ce7c34e9c600d9a49f480ade41c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14546, "upload_time": "2020-01-28T20:33:52", "upload_time_iso_8601": "2020-01-28T20:33:52.768098Z", "url": "https://files.pythonhosted.org/packages/81/5e/7bf7052dc7048662a857629bc8a6704e621b6976a09f6b8915a4c43ec5e3/d20-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "dbae656d4b97ef24173e928950c2225b", "sha256": "75c2ce8ed6ab961d41366fe059b1ff00583a3d14b4c0cb3d5dcb02bc9f29ba06"}, "downloads": -1, "filename": "d20-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "dbae656d4b97ef24173e928950c2225b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15589, "upload_time": "2020-01-31T20:36:20", "upload_time_iso_8601": "2020-01-31T20:36:20.095729Z", "url": "https://files.pythonhosted.org/packages/5d/d9/14c7345666d3791ea69374f2c6750f94682bc7915397236cefc339a3c058/d20-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea0b8a072792659585634002854c5fdc", "sha256": "06669f1e2bf5f4d94ea3da8a057ef1445724151ca1420fa7d58b217840f3a182"}, "downloads": -1, "filename": "d20-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ea0b8a072792659585634002854c5fdc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17497, "upload_time": "2020-01-31T20:36:21", "upload_time_iso_8601": "2020-01-31T20:36:21.572501Z", "url": "https://files.pythonhosted.org/packages/71/8c/0cecda88c3374b6b27381aed22e193f40c0c4eddd794a2d9ce5e2ab51d84/d20-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d70469c675a256acdd1e4c8f05639641", "sha256": "b8fbce738934ab6f1ed0cd9e2725e5d3202e95b2f5649c1928203c0e72e8b605"}, "downloads": -1, "filename": "d20-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d70469c675a256acdd1e4c8f05639641", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16659, "upload_time": "2020-02-03T22:18:04", "upload_time_iso_8601": "2020-02-03T22:18:04.883367Z", "url": "https://files.pythonhosted.org/packages/cf/b4/362687c04b975015162531b3161a40e7f2f3b69522acd2e484adeb453899/d20-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8514127406870c555f528ac4f44b8922", "sha256": "5466669f2e6fd97ecdfcbf57716de989a3e452fd1d61d2d3a0e6d802b966bf65"}, "downloads": -1, "filename": "d20-0.5.0.tar.gz", "has_sig": false, "md5_digest": "8514127406870c555f528ac4f44b8922", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18356, "upload_time": "2020-02-03T22:18:06", "upload_time_iso_8601": "2020-02-03T22:18:06.073231Z", "url": "https://files.pythonhosted.org/packages/d6/44/ad6e6ec27929aa54f05fca3787c46ade0a209996a8d5fdd53d55342dc1df/d20-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "ec14a79f424d321af98417b4619c48cf", "sha256": "328f16217535e55268b05cab733eec9b1109c8cb5651419210ffdbfb6687ccaa"}, "downloads": -1, "filename": "d20-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ec14a79f424d321af98417b4619c48cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17806, "upload_time": "2020-02-10T22:15:25", "upload_time_iso_8601": "2020-02-10T22:15:25.043426Z", "url": "https://files.pythonhosted.org/packages/dd/af/98e528aa8ef0049ad52a670475e3fd8a8ee0d7d55725cc0e94f90f34439e/d20-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f0af193206b0b5e9e67972e2a283c816", "sha256": "830c34fe15a1c6adff69a4a39d92ab0bf2853c48a1fffbe5d6a4cc3926837a1b"}, "downloads": -1, "filename": "d20-0.6.0.tar.gz", "has_sig": false, "md5_digest": "f0af193206b0b5e9e67972e2a283c816", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19389, "upload_time": "2020-02-10T22:15:26", "upload_time_iso_8601": "2020-02-10T22:15:26.903581Z", "url": "https://files.pythonhosted.org/packages/12/d7/c7e406fbc4f5f5979a4454a1464cf2a776a1f7878869425e0ed63108b43a/d20-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "eff10f163d413867d22a3db58a2fde99", "sha256": "a55657ca97a0a7d0c61bf3ee4c03377bb091f35785c21d6391f847af493e6592"}, "downloads": -1, "filename": "d20-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "eff10f163d413867d22a3db58a2fde99", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17946, "upload_time": "2020-02-11T02:09:39", "upload_time_iso_8601": "2020-02-11T02:09:39.577157Z", "url": "https://files.pythonhosted.org/packages/69/80/1fddec7ee9ee4eb2f69f8470350d23e0908390cecc9208c53ad5ae712ba2/d20-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "257c53c92e3c1ee657a060ee10ded0df", "sha256": "4be3c3ea47ca2361ed37b318a3561eaf99f470f24f46bcd150a856b692683e77"}, "downloads": -1, "filename": "d20-0.6.1.tar.gz", "has_sig": false, "md5_digest": "257c53c92e3c1ee657a060ee10ded0df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19531, "upload_time": "2020-02-11T02:09:40", "upload_time_iso_8601": "2020-02-11T02:09:40.990085Z", "url": "https://files.pythonhosted.org/packages/3e/ee/02ff38b7a3f004df4df2bf88ccd930e411f9812d11227992dc6c268a812a/d20-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "efcb8647b30fa9f6e37747987ad7448c", "sha256": "62f51e9cd26ea2212f3ccec97f71c29d4b7580ea2fbe34151aa6536e85ebf3b9"}, "downloads": -1, "filename": "d20-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "efcb8647b30fa9f6e37747987ad7448c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17945, "upload_time": "2020-02-11T02:15:10", "upload_time_iso_8601": "2020-02-11T02:15:10.748724Z", "url": "https://files.pythonhosted.org/packages/3a/05/a061b5fef93cc76b0dcaa8e96d31357d1a39ac7ed6727a48a453bd829684/d20-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "462aaf0b0c7c30edeacbda0a97c352c7", "sha256": "8616a4049512edb470b7c9333ae0cc80c2b39d440407c482ce2eb3acf2d08d1d"}, "downloads": -1, "filename": "d20-0.6.2.tar.gz", "has_sig": false, "md5_digest": "462aaf0b0c7c30edeacbda0a97c352c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19553, "upload_time": "2020-02-11T02:15:11", "upload_time_iso_8601": "2020-02-11T02:15:11.913393Z", "url": "https://files.pythonhosted.org/packages/13/e8/253f94a8830e702044f25af392df6d66f09dec4eb06b215f99ea5b2a634a/d20-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "d7e7274e9911640e61e64068abbd4189", "sha256": "fe2135dffee46f6ae879b6ee4ecbbd68ec5cc7d7c54d5b38312f51237d52a1fc"}, "downloads": -1, "filename": "d20-0.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d7e7274e9911640e61e64068abbd4189", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17970, "upload_time": "2020-02-11T17:58:50", "upload_time_iso_8601": "2020-02-11T17:58:50.043664Z", "url": "https://files.pythonhosted.org/packages/65/25/b9b1d45ac304346a52147ffc99f7cb4de981c735c05cd5c35bfbb6b5bd4e/d20-0.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d42d2bd967a7b3490a8e8290b582048e", "sha256": "c0e7b929960748b2a93a2b53ccdf379bb7d418df4bf5c56048af350121e83e5b"}, "downloads": -1, "filename": "d20-0.6.3.tar.gz", "has_sig": false, "md5_digest": "d42d2bd967a7b3490a8e8290b582048e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19555, "upload_time": "2020-02-11T17:58:51", "upload_time_iso_8601": "2020-02-11T17:58:51.557510Z", "url": "https://files.pythonhosted.org/packages/d6/71/f294a66bf7f12ae438a69dba2a38f9530d4820ab3e16825ce5234aa535a3/d20-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "56ed3361e39f2bcff55f8728cbb433d7", "sha256": "9abecf68a5096e24a36a58b360792b948b9f19b6b003eb4e9c5071abf5a4c295"}, "downloads": -1, "filename": "d20-0.6.4-py3-none-any.whl", "has_sig": false, "md5_digest": "56ed3361e39f2bcff55f8728cbb433d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18056, "upload_time": "2020-02-11T18:10:31", "upload_time_iso_8601": "2020-02-11T18:10:31.154235Z", "url": "https://files.pythonhosted.org/packages/be/cd/a75b4c57c52b36dd32d74e1e79de3243a7494dc189af86711b0a392c5f84/d20-0.6.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea28026011fc4ef781deb53d1cf42ce4", "sha256": "b3a4d2a97ad4c6f91f644257d976f514dc34c1cf4558efabf61f81fce2906c97"}, "downloads": -1, "filename": "d20-0.6.4.tar.gz", "has_sig": false, "md5_digest": "ea28026011fc4ef781deb53d1cf42ce4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19711, "upload_time": "2020-02-11T18:10:33", "upload_time_iso_8601": "2020-02-11T18:10:33.640048Z", "url": "https://files.pythonhosted.org/packages/5c/e8/d0d2ccca690a3c528f08caed45919623d0d3ef294d87e0b1ff4db895c8e4/d20-0.6.4.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "f3a5d8c863611a4642e34ce4cef79788", "sha256": "1a86c70a65959a15572b76024f64bf146673561302bf805ca9694eaf4e868e55"}, "downloads": -1, "filename": "d20-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f3a5d8c863611a4642e34ce4cef79788", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18469, "upload_time": "2020-02-13T19:29:26", "upload_time_iso_8601": "2020-02-13T19:29:26.498772Z", "url": "https://files.pythonhosted.org/packages/24/1c/84b735ae8d3342a34bd9049ca2c08209608533650ff11e189203cd4326da/d20-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17fcb8ef1564237e141848375b62a286", "sha256": "a17e10db679821862873ea5cf15f50bcc80e9cc6cdc270b8d32e0b9816b34c83"}, "downloads": -1, "filename": "d20-0.7.0.tar.gz", "has_sig": false, "md5_digest": "17fcb8ef1564237e141848375b62a286", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19979, "upload_time": "2020-02-13T19:29:28", "upload_time_iso_8601": "2020-02-13T19:29:28.037785Z", "url": "https://files.pythonhosted.org/packages/f3/74/983625d82101200206307c02bb831c54d1978292fc04d98938b7c07bda6a/d20-0.7.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "adbf86dc4731d3480ff57b7ddab62d62", "sha256": "2b24c6872c2a1fb5309ec0972229b82350a2baf73198c7c714a79bb25bcbded8"}, "downloads": -1, "filename": "d20-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "adbf86dc4731d3480ff57b7ddab62d62", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19791, "upload_time": "2020-03-02T21:36:34", "upload_time_iso_8601": "2020-03-02T21:36:34.034316Z", "url": "https://files.pythonhosted.org/packages/e4/0d/8c848f37026e5c9a7542c4270912d57e9e612f8743422286e7bcbbc5bfd7/d20-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89b210616a06fed77f605828e3813b7d", "sha256": "5584d00bc8668ff34205e5029c8463d871002c6a9092448e25bad3659bcf0e3b"}, "downloads": -1, "filename": "d20-1.0.0.tar.gz", "has_sig": false, "md5_digest": "89b210616a06fed77f605828e3813b7d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21209, "upload_time": "2020-03-02T21:36:35", "upload_time_iso_8601": "2020-03-02T21:36:35.418403Z", "url": "https://files.pythonhosted.org/packages/80/0e/047414355bafc90f3e25c602c8f504a2d2ccc3acffab95191491fcbe1384/d20-1.0.0.tar.gz", "yanked": false}], "1.0.0rc1": [{"comment_text": "", "digests": {"md5": "9e10a508789e5bb56ef43f3e292dc7ef", "sha256": "d3d4c5cdc9d7777675dd58a5097e4c9c42ec600fc7ff46c7e694262990f13d57"}, "downloads": -1, "filename": "d20-1.0.0rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "9e10a508789e5bb56ef43f3e292dc7ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19704, "upload_time": "2020-02-20T20:17:54", "upload_time_iso_8601": "2020-02-20T20:17:54.723904Z", "url": "https://files.pythonhosted.org/packages/3b/d7/39aa15a021b8bdaf2fd55a8fd07e033207dcd1fdb80f629166ce40e0dbc2/d20-1.0.0rc1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1226f6fc045baa45c94e88e8f4f78e8c", "sha256": "4d590c0cad4e649cf8f36509f3d186b94ee9d964a6581c2c3d7f55b5b7108435"}, "downloads": -1, "filename": "d20-1.0.0rc1.tar.gz", "has_sig": false, "md5_digest": "1226f6fc045baa45c94e88e8f4f78e8c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21128, "upload_time": "2020-02-20T20:17:56", "upload_time_iso_8601": "2020-02-20T20:17:56.235184Z", "url": "https://files.pythonhosted.org/packages/b5/74/31ac62adb8b4fcc78ea2de6da0fc5e023522677d5481f8baca491797e90f/d20-1.0.0rc1.tar.gz", "yanked": false}], "1.0.0rc2": [{"comment_text": "", "digests": {"md5": "257905cf6ef9c4e17a250e9837ab0fc7", "sha256": "ad68546014ad0936fbdefd8575b5f153acdcbb6b8ba5cf144ab1f6b1d2a95ebd"}, "downloads": -1, "filename": "d20-1.0.0rc2-py3-none-any.whl", "has_sig": false, "md5_digest": "257905cf6ef9c4e17a250e9837ab0fc7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19826, "upload_time": "2020-02-24T21:49:29", "upload_time_iso_8601": "2020-02-24T21:49:29.329322Z", "url": "https://files.pythonhosted.org/packages/6b/78/6d2acda2dc6cb1d338040a4fb139da537f24ddbd7038cb94aa1376f52d2e/d20-1.0.0rc2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c0c7cca767c50a763d7a5937d62dd35", "sha256": "11f6d14b79b48e8632cb90f779901c4aad3ff61199e09d3866ba79aa09a83ebc"}, "downloads": -1, "filename": "d20-1.0.0rc2.tar.gz", "has_sig": false, "md5_digest": "4c0c7cca767c50a763d7a5937d62dd35", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21222, "upload_time": "2020-02-24T21:49:30", "upload_time_iso_8601": "2020-02-24T21:49:30.772743Z", "url": "https://files.pythonhosted.org/packages/bb/fa/7782b53a0b9cb3dbf4b8c756d8c43b70b16058b15b89c24114b3e9042258/d20-1.0.0rc2.tar.gz", "yanked": false}], "1.0.0rc3": [{"comment_text": "", "digests": {"md5": "8fd63a2bc9fa32cab89856b18f07d084", "sha256": "e37d43b489e2ac3bcc5d342a0258ce52ecb22184c4641902f5dc47d264d5e1d7"}, "downloads": -1, "filename": "d20-1.0.0rc3-py3-none-any.whl", "has_sig": false, "md5_digest": "8fd63a2bc9fa32cab89856b18f07d084", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19823, "upload_time": "2020-02-28T20:24:38", "upload_time_iso_8601": "2020-02-28T20:24:38.941938Z", "url": "https://files.pythonhosted.org/packages/a4/b2/ed506e479196239e49a42f44ce7eefe51eb8c11daf61716297b1b9061df6/d20-1.0.0rc3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a201917efe64f61248dead291b4a2d93", "sha256": "26f23286d318e2763b51fcd0731c53529ca40139b7441df1a5432c96a61e68af"}, "downloads": -1, "filename": "d20-1.0.0rc3.tar.gz", "has_sig": false, "md5_digest": "a201917efe64f61248dead291b4a2d93", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21213, "upload_time": "2020-02-28T20:24:42", "upload_time_iso_8601": "2020-02-28T20:24:42.735297Z", "url": "https://files.pythonhosted.org/packages/d9/a5/4558b59583092916f63c33f8baf5f509e64b0722eb8dc9a6002643e30466/d20-1.0.0rc3.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "ab3af7804f9c3d3ed7d2660bfa48802f", "sha256": "6be44afc645a4c8a54bbd78f2af61c6ddbd083836417d7b5416ff3f3cd9444de"}, "downloads": -1, "filename": "d20-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ab3af7804f9c3d3ed7d2660bfa48802f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19838, "upload_time": "2020-04-01T18:21:24", "upload_time_iso_8601": "2020-04-01T18:21:24.738471Z", "url": "https://files.pythonhosted.org/packages/34/3b/8ddc2f9059fdd2071cdd50ab69c9c6a899069dc1ccee98749f29356c5a3d/d20-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98b19d2cdac460427575275e1f9d1d80", "sha256": "b0085a3c7a2fdcccbb5485b765ac0be303f904a279e7ceaa7711b49a02fce2f8"}, "downloads": -1, "filename": "d20-1.0.1.tar.gz", "has_sig": false, "md5_digest": "98b19d2cdac460427575275e1f9d1d80", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21251, "upload_time": "2020-04-01T18:21:25", "upload_time_iso_8601": "2020-04-01T18:21:25.892819Z", "url": "https://files.pythonhosted.org/packages/ce/f9/26705859c28e66b7f7549f938b94d7db82535b54939279f7fa34af2be62e/d20-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "5facd360c42ee1dcf42172189b863e4b", "sha256": "3c2bbd8297be566c7c5e7e88f2ffa29a88f2558c88407dccb14ecf5f95b731ca"}, "downloads": -1, "filename": "d20-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5facd360c42ee1dcf42172189b863e4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19850, "upload_time": "2020-05-04T21:40:02", "upload_time_iso_8601": "2020-05-04T21:40:02.162895Z", "url": "https://files.pythonhosted.org/packages/96/6a/cb62c4218090f5ea7695ff88a28f7f899c7061385f6f30e430b283d71211/d20-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0beaba578361195281a323e5e19e3bb2", "sha256": "508b0d0e7d53efd855b84055b1642d0cb28812e66ab7472826360dc147349e1f"}, "downloads": -1, "filename": "d20-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0beaba578361195281a323e5e19e3bb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21264, "upload_time": "2020-05-04T21:40:03", "upload_time_iso_8601": "2020-05-04T21:40:03.125827Z", "url": "https://files.pythonhosted.org/packages/71/0a/d6c608a4e823860ed875152f114af731d4953bf2f8cd28f97f894ff04312/d20-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5facd360c42ee1dcf42172189b863e4b", "sha256": "3c2bbd8297be566c7c5e7e88f2ffa29a88f2558c88407dccb14ecf5f95b731ca"}, "downloads": -1, "filename": "d20-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "5facd360c42ee1dcf42172189b863e4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 19850, "upload_time": "2020-05-04T21:40:02", "upload_time_iso_8601": "2020-05-04T21:40:02.162895Z", "url": "https://files.pythonhosted.org/packages/96/6a/cb62c4218090f5ea7695ff88a28f7f899c7061385f6f30e430b283d71211/d20-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0beaba578361195281a323e5e19e3bb2", "sha256": "508b0d0e7d53efd855b84055b1642d0cb28812e66ab7472826360dc147349e1f"}, "downloads": -1, "filename": "d20-1.0.2.tar.gz", "has_sig": false, "md5_digest": "0beaba578361195281a323e5e19e3bb2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21264, "upload_time": "2020-05-04T21:40:03", "upload_time_iso_8601": "2020-05-04T21:40:03.125827Z", "url": "https://files.pythonhosted.org/packages/71/0a/d6c608a4e823860ed875152f114af731d4953bf2f8cd28f97f894ff04312/d20-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:59 2020"}