{"info": {"author": "Bryan Shelton", "author_email": "bryan@sheltonplace.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": ".. include globals.rst\r\n\r\nVarnish Admin Socket\r\n=====================\r\n\r\nA simple python library to administer Varnish over the administration socket. The library can use shared secret authentication. Almost all testing has been done against Varnish 2.1.5.\r\n\r\nNote: To use the library with Varnish 2.0.6, set compat = True (Experimental)\r\n\r\nThis was heavily inspired by Tim Whitlock's wonderful PHP library (http://github.com/timwhitlock/php-varnish).\r\n\r\nUsage::\r\n\r\n  from varnish_admin_socket import VarnishAdminSocket\r\n  varnish = VarnishAdminSocket()\r\n  \r\n  # Optionally set host, port, and secret\r\n  # host defaults to 127.0.0.1, port defaults to 6082, secret defaults to False\r\n  varnish.host = '127.0.0.1'\r\n  varnish.port = 6082\r\n  # You probably want to add a newline, this is usually read from a file.\r\n  varnish.secret = \"123\\n\"\r\n  # To load the secret key from a file set secret_file\r\n  varnish.secret_file = '/etc/varnish/secret.txt'\r\n  # To use with Varnish 2.0.6 compat = True must be set\r\n  varnish.compat = True\r\n\r\n  # Connect to Varnish\r\n  varnish.connect()\r\n  \r\n  # Purge Commands\r\n  varnish.purge_url('^/cached')\r\n  varnish.purge('req.http.host ~ example.com && req.url ~ ^/cached$')\r\n\r\n  # Run Stats\r\n  print varnish.stats()\r\n  \r\n  # Quit and close the connection\r\n  varnish.quit()\r\n  \r\nMore Usage::\r\n\r\n  from varnish_admin_socket import VarnishAdminSocket\r\n  # You may also set server, port, host, and secret on instantiation.\r\n  varnish = VarnishAdminSocket(host='varnish.domain.com',secret='123\\n')\r\n  varnish.connect()\r\n  print varnish.stats()\r\n  varnish.quit()\r\n  \r\n  # Setting auto_connect will automatically connect(), will run the first command (besides auth), \r\n  # and will then .quit()\r\n  \r\n  VarnishAdminSocket(auto_connect=True,secret_file='/etc/varnish/secret.txt').purge_url('.')", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/bshelton229/varnish-admin-socket-python", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "varnish-admin-socket", "package_url": "https://pypi.org/project/varnish-admin-socket/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/varnish-admin-socket/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/bshelton229/varnish-admin-socket-python"}, "release_url": "https://pypi.org/project/varnish-admin-socket/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Simple Python Varnish socket interface", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A simple python library to administer Varnish over the administration socket. The library can use shared secret authentication. Almost all testing has been done against Varnish 2.1.5.</p>\n<p>Note: To use the library with Varnish 2.0.6, set compat = True (Experimental)</p>\n<p>This was heavily inspired by Tim Whitlock\u2019s wonderful PHP library (<a href=\"http://github.com/timwhitlock/php-varnish\" rel=\"nofollow\">http://github.com/timwhitlock/php-varnish</a>).</p>\n<p>Usage:</p>\n<pre>from varnish_admin_socket import VarnishAdminSocket\nvarnish = VarnishAdminSocket()\n\n# Optionally set host, port, and secret\n# host defaults to 127.0.0.1, port defaults to 6082, secret defaults to False\nvarnish.host = '127.0.0.1'\nvarnish.port = 6082\n# You probably want to add a newline, this is usually read from a file.\nvarnish.secret = \"123\\n\"\n# To load the secret key from a file set secret_file\nvarnish.secret_file = '/etc/varnish/secret.txt'\n# To use with Varnish 2.0.6 compat = True must be set\nvarnish.compat = True\n\n# Connect to Varnish\nvarnish.connect()\n\n# Purge Commands\nvarnish.purge_url('^/cached')\nvarnish.purge('req.http.host ~ example.com &amp;&amp; req.url ~ ^/cached$')\n\n# Run Stats\nprint varnish.stats()\n\n# Quit and close the connection\nvarnish.quit()\n</pre>\n<p>More Usage:</p>\n<pre>from varnish_admin_socket import VarnishAdminSocket\n# You may also set server, port, host, and secret on instantiation.\nvarnish = VarnishAdminSocket(host='varnish.domain.com',secret='123\\n')\nvarnish.connect()\nprint varnish.stats()\nvarnish.quit()\n\n# Setting auto_connect will automatically connect(), will run the first command (besides auth),\n# and will then .quit()\n\nVarnishAdminSocket(auto_connect=True,secret_file='/etc/varnish/secret.txt').purge_url('.')\n</pre>\n\n          </div>"}, "last_serial": 801345, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "85a59bc776d5c10b997282a3926e9dc0", "sha256": "2c205ce212cb8afe94a84e0dfb1ddf1a49ab85e465e24e31a09ac6e3f8e65f75"}, "downloads": -1, "filename": "varnish-admin-socket-0.1.tar.gz", "has_sig": false, "md5_digest": "85a59bc776d5c10b997282a3926e9dc0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3465, "upload_time": "2011-04-12T03:52:19", "upload_time_iso_8601": "2011-04-12T03:52:19.147790Z", "url": "https://files.pythonhosted.org/packages/87/64/e7cc5914132fec85ef35d2a8f7c382d846fd58d9e0ee86572cb68c3e84b8/varnish-admin-socket-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c6899fc882c941701839d24ffdcfafa5", "sha256": "2a9dab31898cdae4f039f9f75ace843a4d624ae80f2fa394604fa2e6a0179922"}, "downloads": -1, "filename": "varnish-admin-socket-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c6899fc882c941701839d24ffdcfafa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3999, "upload_time": "2011-04-21T05:16:11", "upload_time_iso_8601": "2011-04-21T05:16:11.514543Z", "url": "https://files.pythonhosted.org/packages/45/09/cc142f08250f2fc31824fadbb387d6af2b34e254d0395af919a5e4442ed0/varnish-admin-socket-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c6899fc882c941701839d24ffdcfafa5", "sha256": "2a9dab31898cdae4f039f9f75ace843a4d624ae80f2fa394604fa2e6a0179922"}, "downloads": -1, "filename": "varnish-admin-socket-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c6899fc882c941701839d24ffdcfafa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3999, "upload_time": "2011-04-21T05:16:11", "upload_time_iso_8601": "2011-04-21T05:16:11.514543Z", "url": "https://files.pythonhosted.org/packages/45/09/cc142f08250f2fc31824fadbb387d6af2b34e254d0395af919a5e4442ed0/varnish-admin-socket-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:46 2020"}