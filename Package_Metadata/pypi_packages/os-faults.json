{"info": {"author": "OpenStack", "author_email": "openstack-discuss@lists.openstack.org", "bugtrack_url": null, "classifiers": ["Environment :: OpenStack", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\nOS-Faults\n=========\n\n**OpenStack fault-injection library**\n\nThe library does destructive actions inside an OpenStack cloud. It provides\nan abstraction layer over different types of cloud deployments. The actions\nare implemented as drivers (e.g. DevStack driver, Fuel driver, Libvirt driver,\nIPMI driver, Universal driver).\n\n* Free software: Apache license\n* Documentation: https://os-faults.readthedocs.io/\n* Source: https://opendev.org/performa/os-faults/\n* Bugs: https://bugs.launchpad.net/os-faults\n\n\nInstallation\n------------\n\nRequirements\n~~~~~~~~~~~~\n\nAnsible is required and should be installed manually system-wide or in virtual\nenvironment. Please refer to [https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html]\nfor installation instructions.\n\nRegular installation::\n\n    pip install os-faults\n\nThe library contains optional libvirt driver [https://pypi.org/project/libvirt-python/], if you plan to use it,\nplease use the following command to install os-faults with extra dependencies::\n\n    pip install os-faults libvirt-python\n\n\nConfiguration\n-------------\n\nThe cloud deployment configuration is specified in JSON/YAML format or Python dictionary.\n\nThe library operates with 2 types of objects:\n * `service` - is a software that runs in the cloud, e.g. `nova-api`\n * `container` - is a software that runs in the cloud, e.g. `neutron_api`\n * `nodes` - nodes that host the cloud, e.g. a server with a hostname\n\n\nExample 1. DevStack\n~~~~~~~~~~~~~~~~~~~\n\nConnection to DevStack can be specified using the following YAML file:\n\n.. code-block:: yaml\n\n    cloud_management:\n      driver: devstack\n      args:\n        address: devstack.local\n        auth:\n          username: stack\n          private_key_file: cloud_key\n        iface: enp0s8\n\nOS-Faults library will connect to DevStack by address `devstack.local` with user `stack`\nand SSH key located in file `cloud_key`. Default networking interface is specified with\nparameter `iface`. Note that user should have sudo permissions (by default DevStack user has them).\n\nDevStack driver is responsible for service discovery. For more details please refer\nto driver documentation: http://os-faults.readthedocs.io/en/latest/drivers.html#devstack-systemd-devstackmanagement\n\nExample 2. An OpenStack with services, containers and power management\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAn arbitrary OpenStack can be handled too with help of `universal` driver.\nIn this example os-faults is used as Python library.\n\n.. code-block:: python\n\n    cloud_config = {\n        'cloud_management': {\n            'driver': 'universal',\n        },\n        'node_discover': {\n            'driver': 'node_list',\n            'args': [\n                {\n                    'ip': '192.168.5.127',\n                    'auth': {\n                        'username': 'root',\n                        'private_key_file': 'openstack_key',\n                    }\n                },\n                {\n                    'ip': '192.168.5.128',\n                    'auth': {\n                        'username': 'root',\n                        'private_key_file': 'openstack_key',\n                    }\n                }\n            ]\n        },\n        'services': {\n            'memcached': {\n                'driver': 'system_service',\n                'args': {\n                    'service_name': 'memcached',\n                    'grep': 'memcached',\n                }\n            }\n        },\n        'containers': {\n            'neutron_api': {\n                'driver': 'docker_container',\n                'args': {\n                    'container_name': 'neutron_api',\n                }\n            }\n        },\n        'power_managements': [\n            {\n                'driver': 'libvirt',\n                'args': {\n                    'connection_uri': 'qemu+unix:///system',\n                }\n            },\n        ]\n    }\n\nThe config contains all OpenStack nodes with credentials and all\nservices/containers. OS-Faults will automatically figure out the mapping\nbetween services/containers and nodes. Power management configuration is\nflexible and supports mixed bare-metal / virtualized deployments.\n\nFirst let's establish a connection to the cloud and verify it:\n\n.. code-block:: python\n\n    cloud_management = os_faults.connect(cloud_config)\n    cloud_management.verify()\n\nThe library can also read configuration from a file in YAML or JSON format.\nThe configuration file can be specified in the `OS_FAULTS_CONFIG` environment\nvariable. By default the library searches for file `os-faults.{json,yaml,yml}`\nin one of locations:\n\n  * current directory\n  * ~/.config/os-faults\n  * /etc/openstack\n\nNow let's make some destructive action:\n\n.. code-block:: python\n\n    cloud_management.get_service(name='memcached').kill()\n    cloud_management.get_container(name='neutron_api').restart()\n\n\nHuman API\n---------\n\nHuman API is simplified and self-descriptive. It includes multiple commands\nthat are written like normal English sentences.\n\n**Service-oriented** command performs specified `action` against `service` on\nall, on one random node or on the node specified by FQDN::\n\n    <action> <service> service [on (random|one|single|<fqdn> node[s])]\n\nExamples:\n    * `Restart Keystone service` - restarts Keystone service on all nodes.\n    * `kill nova-api service on one node` - kills Nova API on one\n      randomly-picked node.\n\n**Container-oriented** command performs specified `action` against `container`\non all, on one random node or on the node specified by FQDN::\n\n    <action> <container> container [on (random|one|single|<fqdn> node[s])]\n\nExamples:\n    * `Restart neutron_ovs_agent container` - restarts neutron_ovs_agent\n      container on all nodes.\n    * `Terminate neutron_api container on one node` - stops Neutron API\n      container on one randomly-picked node.\n\n**Node-oriented** command performs specified `action` on node specified by FQDN\nor set of service's nodes::\n\n    <action> [random|one|single|<fqdn>] node[s] [with <service> service]\n\nExamples:\n    * `Reboot one node with mysql` - reboots one random node with MySQL.\n    * `Reset node-2.domain.tld node` - resets node `node-2.domain.tld`.\n\n**Network-oriented** command is a subset of node-oriented and performs network\nmanagement operation on selected nodes::\n\n    <action> <network> network on [random|one|single|<fqdn>] node[s]\n        [with <service> service]\n\nExamples:\n    * `Disconnect management network on nodes with rabbitmq service` - shuts\n      down management network interface on all nodes where rabbitmq runs.\n    * `Connect storage network on node-1.domain.tld node` - enables storage\n      network interface on node-1.domain.tld.\n\n\nExtended API\n------------\n\n1. Service actions\n~~~~~~~~~~~~~~~~~~\n\nGet a service and restart it:\n\n.. code-block:: python\n\n    cloud_management = os_faults.connect(cloud_config)\n    service = cloud_management.get_service(name='glance-api')\n    service.restart()\n\nAvailable actions:\n * `start` - start Service\n * `terminate` - terminate Service gracefully\n * `restart` - restart Service\n * `kill` - terminate Service abruptly\n * `unplug` - unplug Service out of network\n * `plug` - plug Service into network\n\n2. Container actions\n~~~~~~~~~~~~~~~~~~~~\n\nGet a container and restart it:\n\n.. code-block:: python\n\n    cloud_management = os_faults.connect(cloud_config)\n    container = cloud_management.get_container(name='neutron_api')\n    container.restart()\n\nAvailable actions:\n * `start` - start Container\n * `terminate` - terminate Container gracefully\n * `restart` - restart Container\n\n3. Node actions\n~~~~~~~~~~~~~~~\n\nGet all nodes in the cloud and reboot them:\n\n.. code-block:: python\n\n    nodes = cloud_management.get_nodes()\n    nodes.reboot()\n\nAvailable actions:\n * `reboot` - reboot all nodes gracefully\n * `poweroff` - power off all nodes abruptly\n * `reset` - reset (cold restart) all nodes\n * `disconnect` - disable network with the specified name on all nodes\n * `connect` - enable network with the specified name on all nodes\n\n4. Operate with nodes\n~~~~~~~~~~~~~~~~~~~~~\n\nGet all nodes where a service runs, pick one of them and reset:\n\n.. code-block:: python\n\n    nodes = service.get_nodes()\n    one = nodes.pick()\n    one.reset()\n\nGet nodes where l3-agent runs and disable the management network on them:\n\n.. code-block:: python\n\n    fqdns = neutron.l3_agent_list_hosting_router(router_id)\n    nodes = cloud_management.get_nodes(fqdns=fqdns)\n    nodes.disconnect(network_name='management')\n\n5. Operate with services\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nRestart a service on a single node:\n\n.. code-block:: python\n\n    service = cloud_management.get_service(name='keystone')\n    nodes = service.get_nodes().pick()\n    service.restart(nodes)\n\n6. Operate with containers\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTerminate a container on a random node:\n\n.. code-block:: python\n\n    container = cloud_management.get_container(name='neutron_ovs_agent')\n    nodes = container.get_nodes().pick()\n    container.restart(nodes)\n\n\nLicense notes\n-------------\n\nAnsible is distributed under GPL-3.0 license and thus all programs\nthat link with its code are subject to GPL restrictions [1].\nHowever these restrictions are not applied to os-faults library\nsince it invokes Ansible as process [2][3].\n\nAnsible modules are provided with Apache license (compatible to GPL) [4].\nThose modules import part of Ansible runtime (modules API) and executed\non remote hosts. os-faults library does not import these module\nneither static nor dynamic.\n\n [1] https://www.gnu.org/licenses/gpl-faq.html#GPLModuleLicense\n [2] https://www.gnu.org/licenses/gpl-faq.html#GPLPlugins\n [3] https://www.gnu.org/licenses/gpl-faq.html#MereAggregation\n [4] https://www.apache.org/licenses/GPL-compatibility.html\n\n\n\n", "description_content_type": "text/x-rst; charset=UTF-8", "docs_url": null, "download_url": "https://pypi.org/project/os-faults/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://os-faults.readthedocs.io/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "os-faults", "package_url": "https://pypi.org/project/os-faults/", "platform": "", "project_url": "https://pypi.org/project/os-faults/", "project_urls": {"Bug Tracker": "https://bugs.launchpad.net/os-faults", "Documentation": "http://os-faults.readthedocs.io/", "Download": "https://pypi.org/project/os-faults/", "Homepage": "http://os-faults.readthedocs.io/", "Source Code": "https://opendev.org/performa/os-faults/"}, "release_url": "https://pypi.org/project/os-faults/0.2.7/", "requires_dist": ["pbr (>=2.0.0)", "appdirs (>=1.3.0)", "click (>=6.7)", "iso8601 (>=0.1.11)", "jsonschema (>=2.6.0)", "PyYAML (>=3.10.0)", "six (>=1.9.0)", "oslo.concurrency (<4.0.0,>=3.0.0) ; (python_version=='2.7')", "oslo.i18n (<4.0.0,>=2.1.0) ; (python_version=='2.7')", "oslo.serialization (<3.0.0,>=1.10.0) ; (python_version=='2.7')", "oslo.utils (<4.0.0,>=3.20.0) ; (python_version=='2.7')", "pyghmi (<1.5.0,>=1.0.9) ; (python_version=='2.7')", "oslo.concurrency (>=3.0.0) ; (python_version>='3.6')", "oslo.i18n (>=2.1.0) ; (python_version>='3.6')", "oslo.serialization (>=1.10.0) ; (python_version>='3.6')", "oslo.utils (>=3.20.0) ; (python_version>='3.6')", "pyghmi (>=1.0.9) ; (python_version>='3.6')"], "requires_python": "", "summary": "OpenStack fault-injection library", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>OpenStack fault-injection library</strong></p>\n<p>The library does destructive actions inside an OpenStack cloud. It provides\nan abstraction layer over different types of cloud deployments. The actions\nare implemented as drivers (e.g. DevStack driver, Fuel driver, Libvirt driver,\nIPMI driver, Universal driver).</p>\n<ul>\n<li>Free software: Apache license</li>\n<li>Documentation: <a href=\"https://os-faults.readthedocs.io/\" rel=\"nofollow\">https://os-faults.readthedocs.io/</a></li>\n<li>Source: <a href=\"https://opendev.org/performa/os-faults/\" rel=\"nofollow\">https://opendev.org/performa/os-faults/</a></li>\n<li>Bugs: <a href=\"https://bugs.launchpad.net/os-faults\" rel=\"nofollow\">https://bugs.launchpad.net/os-faults</a></li>\n</ul>\n<div id=\"installation\">\n<h2>Installation</h2>\n<h2 id=\"requirements\"><span class=\"section-subtitle\">Requirements</span></h2>\n<p>Ansible is required and should be installed manually system-wide or in virtual\nenvironment. Please refer to [<a href=\"https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html\" rel=\"nofollow\">https://docs.ansible.com/ansible/latest/installation_guide/intro_installation.html</a>]\nfor installation instructions.</p>\n<p>Regular installation:</p>\n<pre>pip install os-faults\n</pre>\n<p>The library contains optional libvirt driver [<a href=\"https://pypi.org/project/libvirt-python/\" rel=\"nofollow\">https://pypi.org/project/libvirt-python/</a>], if you plan to use it,\nplease use the following command to install os-faults with extra dependencies:</p>\n<pre>pip install os-faults libvirt-python\n</pre>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>The cloud deployment configuration is specified in JSON/YAML format or Python dictionary.</p>\n<dl>\n<dt>The library operates with 2 types of objects:</dt>\n<dd><ul>\n<li><cite>service</cite> - is a software that runs in the cloud, e.g. <cite>nova-api</cite></li>\n<li><cite>container</cite> - is a software that runs in the cloud, e.g. <cite>neutron_api</cite></li>\n<li><cite>nodes</cite> - nodes that host the cloud, e.g. a server with a hostname</li>\n</ul>\n</dd>\n</dl>\n<div id=\"example-1-devstack\">\n<h3>Example 1. DevStack</h3>\n<p>Connection to DevStack can be specified using the following YAML file:</p>\n<pre><span class=\"nt\">cloud_management</span><span class=\"p\">:</span>\n  <span class=\"nt\">driver</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">devstack</span>\n  <span class=\"nt\">args</span><span class=\"p\">:</span>\n    <span class=\"nt\">address</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">devstack.local</span>\n    <span class=\"nt\">auth</span><span class=\"p\">:</span>\n      <span class=\"nt\">username</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">stack</span>\n      <span class=\"nt\">private_key_file</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">cloud_key</span>\n    <span class=\"nt\">iface</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">enp0s8</span>\n</pre>\n<p>OS-Faults library will connect to DevStack by address <cite>devstack.local</cite> with user <cite>stack</cite>\nand SSH key located in file <cite>cloud_key</cite>. Default networking interface is specified with\nparameter <cite>iface</cite>. Note that user should have sudo permissions (by default DevStack user has them).</p>\n<p>DevStack driver is responsible for service discovery. For more details please refer\nto driver documentation: <a href=\"http://os-faults.readthedocs.io/en/latest/drivers.html#devstack-systemd-devstackmanagement\" rel=\"nofollow\">http://os-faults.readthedocs.io/en/latest/drivers.html#devstack-systemd-devstackmanagement</a></p>\n</div>\n<div id=\"example-2-an-openstack-with-services-containers-and-power-management\">\n<h3>Example 2. An OpenStack with services, containers and power management</h3>\n<p>An arbitrary OpenStack can be handled too with help of <cite>universal</cite> driver.\nIn this example os-faults is used as Python library.</p>\n<pre><span class=\"n\">cloud_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'cloud_management'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'driver'</span><span class=\"p\">:</span> <span class=\"s1\">'universal'</span><span class=\"p\">,</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'node_discover'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'driver'</span><span class=\"p\">:</span> <span class=\"s1\">'node_list'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'ip'</span><span class=\"p\">:</span> <span class=\"s1\">'192.168.5.127'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'auth'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'root'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'private_key_file'</span><span class=\"p\">:</span> <span class=\"s1\">'openstack_key'</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">},</span>\n            <span class=\"p\">{</span>\n                <span class=\"s1\">'ip'</span><span class=\"p\">:</span> <span class=\"s1\">'192.168.5.128'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'auth'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                    <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'root'</span><span class=\"p\">,</span>\n                    <span class=\"s1\">'private_key_file'</span><span class=\"p\">:</span> <span class=\"s1\">'openstack_key'</span><span class=\"p\">,</span>\n                <span class=\"p\">}</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'services'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'memcached'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'driver'</span><span class=\"p\">:</span> <span class=\"s1\">'system_service'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'service_name'</span><span class=\"p\">:</span> <span class=\"s1\">'memcached'</span><span class=\"p\">,</span>\n                <span class=\"s1\">'grep'</span><span class=\"p\">:</span> <span class=\"s1\">'memcached'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'containers'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'neutron_api'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'driver'</span><span class=\"p\">:</span> <span class=\"s1\">'docker_container'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'container_name'</span><span class=\"p\">:</span> <span class=\"s1\">'neutron_api'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">},</span>\n    <span class=\"s1\">'power_managements'</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'driver'</span><span class=\"p\">:</span> <span class=\"s1\">'libvirt'</span><span class=\"p\">,</span>\n            <span class=\"s1\">'args'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'connection_uri'</span><span class=\"p\">:</span> <span class=\"s1\">'qemu+unix:///system'</span><span class=\"p\">,</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">},</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>The config contains all OpenStack nodes with credentials and all\nservices/containers. OS-Faults will automatically figure out the mapping\nbetween services/containers and nodes. Power management configuration is\nflexible and supports mixed bare-metal / virtualized deployments.</p>\n<p>First let\u2019s establish a connection to the cloud and verify it:</p>\n<pre><span class=\"n\">cloud_management</span> <span class=\"o\">=</span> <span class=\"n\">os_faults</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">cloud_config</span><span class=\"p\">)</span>\n<span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">()</span>\n</pre>\n<p>The library can also read configuration from a file in YAML or JSON format.\nThe configuration file can be specified in the <cite>OS_FAULTS_CONFIG</cite> environment\nvariable. By default the library searches for file <cite>os-faults.{json,yaml,yml}</cite>\nin one of locations:</p>\n<blockquote>\n<ul>\n<li>current directory</li>\n<li>~/.config/os-faults</li>\n<li>/etc/openstack</li>\n</ul>\n</blockquote>\n<p>Now let\u2019s make some destructive action:</p>\n<pre><span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_service</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'memcached'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">kill</span><span class=\"p\">()</span>\n<span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_container</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'neutron_api'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">restart</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"human-api\">\n<h2>Human API</h2>\n<p>Human API is simplified and self-descriptive. It includes multiple commands\nthat are written like normal English sentences.</p>\n<p><strong>Service-oriented</strong> command performs specified <cite>action</cite> against <cite>service</cite> on\nall, on one random node or on the node specified by FQDN:</p>\n<pre>&lt;action&gt; &lt;service&gt; service [on (random|one|single|&lt;fqdn&gt; node[s])]\n</pre>\n<dl>\n<dt>Examples:</dt>\n<dd><ul>\n<li><cite>Restart Keystone service</cite> - restarts Keystone service on all nodes.</li>\n<li><cite>kill nova-api service on one node</cite> - kills Nova API on one\nrandomly-picked node.</li>\n</ul>\n</dd>\n</dl>\n<p><strong>Container-oriented</strong> command performs specified <cite>action</cite> against <cite>container</cite>\non all, on one random node or on the node specified by FQDN:</p>\n<pre>&lt;action&gt; &lt;container&gt; container [on (random|one|single|&lt;fqdn&gt; node[s])]\n</pre>\n<dl>\n<dt>Examples:</dt>\n<dd><ul>\n<li><cite>Restart neutron_ovs_agent container</cite> - restarts neutron_ovs_agent\ncontainer on all nodes.</li>\n<li><cite>Terminate neutron_api container on one node</cite> - stops Neutron API\ncontainer on one randomly-picked node.</li>\n</ul>\n</dd>\n</dl>\n<p><strong>Node-oriented</strong> command performs specified <cite>action</cite> on node specified by FQDN\nor set of service\u2019s nodes:</p>\n<pre>&lt;action&gt; [random|one|single|&lt;fqdn&gt;] node[s] [with &lt;service&gt; service]\n</pre>\n<dl>\n<dt>Examples:</dt>\n<dd><ul>\n<li><cite>Reboot one node with mysql</cite> - reboots one random node with MySQL.</li>\n<li><cite>Reset node-2.domain.tld node</cite> - resets node <cite>node-2.domain.tld</cite>.</li>\n</ul>\n</dd>\n</dl>\n<p><strong>Network-oriented</strong> command is a subset of node-oriented and performs network\nmanagement operation on selected nodes:</p>\n<pre>&lt;action&gt; &lt;network&gt; network on [random|one|single|&lt;fqdn&gt;] node[s]\n    [with &lt;service&gt; service]\n</pre>\n<dl>\n<dt>Examples:</dt>\n<dd><ul>\n<li><cite>Disconnect management network on nodes with rabbitmq service</cite> - shuts\ndown management network interface on all nodes where rabbitmq runs.</li>\n<li><cite>Connect storage network on node-1.domain.tld node</cite> - enables storage\nnetwork interface on node-1.domain.tld.</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"extended-api\">\n<h2>Extended API</h2>\n<div id=\"service-actions\">\n<h3>1. Service actions</h3>\n<p>Get a service and restart it:</p>\n<pre><span class=\"n\">cloud_management</span> <span class=\"o\">=</span> <span class=\"n\">os_faults</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">cloud_config</span><span class=\"p\">)</span>\n<span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_service</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'glance-api'</span><span class=\"p\">)</span>\n<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">restart</span><span class=\"p\">()</span>\n</pre>\n<dl>\n<dt>Available actions:</dt>\n<dd><ul>\n<li><cite>start</cite> - start Service</li>\n<li><cite>terminate</cite> - terminate Service gracefully</li>\n<li><cite>restart</cite> - restart Service</li>\n<li><cite>kill</cite> - terminate Service abruptly</li>\n<li><cite>unplug</cite> - unplug Service out of network</li>\n<li><cite>plug</cite> - plug Service into network</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"container-actions\">\n<h3>2. Container actions</h3>\n<p>Get a container and restart it:</p>\n<pre><span class=\"n\">cloud_management</span> <span class=\"o\">=</span> <span class=\"n\">os_faults</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">cloud_config</span><span class=\"p\">)</span>\n<span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_container</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'neutron_api'</span><span class=\"p\">)</span>\n<span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">restart</span><span class=\"p\">()</span>\n</pre>\n<dl>\n<dt>Available actions:</dt>\n<dd><ul>\n<li><cite>start</cite> - start Container</li>\n<li><cite>terminate</cite> - terminate Container gracefully</li>\n<li><cite>restart</cite> - restart Container</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"node-actions\">\n<h3>3. Node actions</h3>\n<p>Get all nodes in the cloud and reboot them:</p>\n<pre><span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_nodes</span><span class=\"p\">()</span>\n<span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">reboot</span><span class=\"p\">()</span>\n</pre>\n<dl>\n<dt>Available actions:</dt>\n<dd><ul>\n<li><cite>reboot</cite> - reboot all nodes gracefully</li>\n<li><cite>poweroff</cite> - power off all nodes abruptly</li>\n<li><cite>reset</cite> - reset (cold restart) all nodes</li>\n<li><cite>disconnect</cite> - disable network with the specified name on all nodes</li>\n<li><cite>connect</cite> - enable network with the specified name on all nodes</li>\n</ul>\n</dd>\n</dl>\n</div>\n<div id=\"operate-with-nodes\">\n<h3>4. Operate with nodes</h3>\n<p>Get all nodes where a service runs, pick one of them and reset:</p>\n<pre><span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">get_nodes</span><span class=\"p\">()</span>\n<span class=\"n\">one</span> <span class=\"o\">=</span> <span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">pick</span><span class=\"p\">()</span>\n<span class=\"n\">one</span><span class=\"o\">.</span><span class=\"n\">reset</span><span class=\"p\">()</span>\n</pre>\n<p>Get nodes where l3-agent runs and disable the management network on them:</p>\n<pre><span class=\"n\">fqdns</span> <span class=\"o\">=</span> <span class=\"n\">neutron</span><span class=\"o\">.</span><span class=\"n\">l3_agent_list_hosting_router</span><span class=\"p\">(</span><span class=\"n\">router_id</span><span class=\"p\">)</span>\n<span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_nodes</span><span class=\"p\">(</span><span class=\"n\">fqdns</span><span class=\"o\">=</span><span class=\"n\">fqdns</span><span class=\"p\">)</span>\n<span class=\"n\">nodes</span><span class=\"o\">.</span><span class=\"n\">disconnect</span><span class=\"p\">(</span><span class=\"n\">network_name</span><span class=\"o\">=</span><span class=\"s1\">'management'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"operate-with-services\">\n<h3>5. Operate with services</h3>\n<p>Restart a service on a single node:</p>\n<pre><span class=\"n\">service</span> <span class=\"o\">=</span> <span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_service</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'keystone'</span><span class=\"p\">)</span>\n<span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">get_nodes</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">pick</span><span class=\"p\">()</span>\n<span class=\"n\">service</span><span class=\"o\">.</span><span class=\"n\">restart</span><span class=\"p\">(</span><span class=\"n\">nodes</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"operate-with-containers\">\n<h3>6. Operate with containers</h3>\n<p>Terminate a container on a random node:</p>\n<pre><span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">cloud_management</span><span class=\"o\">.</span><span class=\"n\">get_container</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'neutron_ovs_agent'</span><span class=\"p\">)</span>\n<span class=\"n\">nodes</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">get_nodes</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">pick</span><span class=\"p\">()</span>\n<span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">restart</span><span class=\"p\">(</span><span class=\"n\">nodes</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"license-notes\">\n<h2>License notes</h2>\n<p>Ansible is distributed under GPL-3.0 license and thus all programs\nthat link with its code are subject to GPL restrictions [1].\nHowever these restrictions are not applied to os-faults library\nsince it invokes Ansible as process [2][3].</p>\n<p>Ansible modules are provided with Apache license (compatible to GPL) [4].\nThose modules import part of Ansible runtime (modules API) and executed\non remote hosts. os-faults library does not import these module\nneither static nor dynamic.</p>\n<blockquote>\n[1] <a href=\"https://www.gnu.org/licenses/gpl-faq.html#GPLModuleLicense\" rel=\"nofollow\">https://www.gnu.org/licenses/gpl-faq.html#GPLModuleLicense</a>\n[2] <a href=\"https://www.gnu.org/licenses/gpl-faq.html#GPLPlugins\" rel=\"nofollow\">https://www.gnu.org/licenses/gpl-faq.html#GPLPlugins</a>\n[3] <a href=\"https://www.gnu.org/licenses/gpl-faq.html#MereAggregation\" rel=\"nofollow\">https://www.gnu.org/licenses/gpl-faq.html#MereAggregation</a>\n[4] <a href=\"https://www.apache.org/licenses/GPL-compatibility.html\" rel=\"nofollow\">https://www.apache.org/licenses/GPL-compatibility.html</a></blockquote>\n</div>\n\n          </div>"}, "last_serial": 7170178, "releases": {"0.1.15": [{"comment_text": "", "digests": {"md5": "3520d27919ac6f454a5bea9be649d478", "sha256": "a89579dae4c29a77bec4ca3552e61ab6f6f24ee7bbd33504bc0ad206c4673ce5"}, "downloads": -1, "filename": "os_faults-0.1.15-py2-none-any.whl", "has_sig": false, "md5_digest": "3520d27919ac6f454a5bea9be649d478", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 93625, "upload_time": "2017-09-27T20:09:52", "upload_time_iso_8601": "2017-09-27T20:09:52.902819Z", "url": "https://files.pythonhosted.org/packages/4c/2f/096bad38ab79f165ac646466c2312a8fdcaeb4523f1cf92aa53efb4b1e84/os_faults-0.1.15-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a7aa4ce22a5ea32056c6792196aa7fc", "sha256": "5ed41678b7949c0567b6ebf510b858466c3ec5409d265c7cc16912aaf7662025"}, "downloads": -1, "filename": "os_faults-0.1.15.tar.gz", "has_sig": false, "md5_digest": "8a7aa4ce22a5ea32056c6792196aa7fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 64366, "upload_time": "2017-09-27T20:09:56", "upload_time_iso_8601": "2017-09-27T20:09:56.529500Z", "url": "https://files.pythonhosted.org/packages/c5/3c/99dff6f4138fe03acc0944a1b5105910464e67fbf872d820b4f5cd76a630/os_faults-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "d1d65ffe82503d41f56149cff01be553", "sha256": "99f20b44da6ba490a48e2d25f03074ba130389291738dea80f1aae21e14c2ca3"}, "downloads": -1, "filename": "os_faults-0.1.16-py2-none-any.whl", "has_sig": false, "md5_digest": "d1d65ffe82503d41f56149cff01be553", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 99826, "upload_time": "2017-10-18T19:15:26", "upload_time_iso_8601": "2017-10-18T19:15:26.734296Z", "url": "https://files.pythonhosted.org/packages/79/ac/eac03ab37a0577119b50cfa8185efb37ea26e73971d8d6a8c84eb46f4022/os_faults-0.1.16-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4daf30a4bf01b6b547e835eacddbb81e", "sha256": "664f6d8d29f9a013485d8b6ef5d51f064d16477871466ca09e35681b27b11372"}, "downloads": -1, "filename": "os_faults-0.1.16.tar.gz", "has_sig": false, "md5_digest": "4daf30a4bf01b6b547e835eacddbb81e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66082, "upload_time": "2017-10-18T19:15:31", "upload_time_iso_8601": "2017-10-18T19:15:31.282470Z", "url": "https://files.pythonhosted.org/packages/bb/c8/3f0eed4b02924d669c028dc26dc00d0f78d7d9221da552553a977eb32c75/os_faults-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "ec101c070ccc0a89b0bae8737d42cd5b", "sha256": "99e55c64abd3fbc8e9f11db8e50751b04eb6f2ae7f9b4ba0f625bd4b822ca941"}, "downloads": -1, "filename": "os_faults-0.1.17-py2-none-any.whl", "has_sig": false, "md5_digest": "ec101c070ccc0a89b0bae8737d42cd5b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 101447, "upload_time": "2017-11-02T20:53:11", "upload_time_iso_8601": "2017-11-02T20:53:11.717339Z", "url": "https://files.pythonhosted.org/packages/c5/9d/5c9837785a05bd021e08484c1034b6b847a66de56d2d8096ff4bbf2607cc/os_faults-0.1.17-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cd4a866b1bdd7d1dc722dc496fcbc22", "sha256": "6b15c2b32a20b6829bcd8594e0a788296f5dd66b0471545bf0b869f07360c4d3"}, "downloads": -1, "filename": "os_faults-0.1.17.tar.gz", "has_sig": false, "md5_digest": "4cd4a866b1bdd7d1dc722dc496fcbc22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67698, "upload_time": "2017-11-02T20:53:14", "upload_time_iso_8601": "2017-11-02T20:53:14.874565Z", "url": "https://files.pythonhosted.org/packages/d9/fe/60fc293ab957bf82c32ee0ffd5b9c408ab3001694ee855618660a2600e4f/os_faults-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "808ba265c27e8eb88f0ff9ace0ec9612", "sha256": "87bd14b75f513c0172e89ce37d93a96a19888f77650635116f4e4720a6e7133c"}, "downloads": -1, "filename": "os_faults-0.1.18-py3-none-any.whl", "has_sig": false, "md5_digest": "808ba265c27e8eb88f0ff9ace0ec9612", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 102211, "upload_time": "2018-09-11T21:28:28", "upload_time_iso_8601": "2018-09-11T21:28:28.064278Z", "url": "https://files.pythonhosted.org/packages/30/d9/938f2c9bceabc54eb52f304e92e83aa4b8c1d17b4d37a1179b3c480ae6b7/os_faults-0.1.18-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98a6f634f21814aea15d8b543780c66e", "sha256": "efa1769965a17cc4786fa08899501db428a533e4388d1a575fa25d948eac2c0a"}, "downloads": -1, "filename": "os_faults-0.1.18.tar.gz", "has_sig": false, "md5_digest": "98a6f634f21814aea15d8b543780c66e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73722, "upload_time": "2018-09-11T21:28:32", "upload_time_iso_8601": "2018-09-11T21:28:32.778799Z", "url": "https://files.pythonhosted.org/packages/6e/c5/edd696d1f263211f029d5bf2889698d2050bf99bca4299ee2c12607c0512/os_faults-0.1.18.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "52d35fc8783c86533ecc160e717ed1a4", "sha256": "04a8d249075d3a96f2bd4173f14fd60f8e974f35afe4835b955963bea4d58efc"}, "downloads": -1, "filename": "os_faults-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52d35fc8783c86533ecc160e717ed1a4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86859, "upload_time": "2019-01-07T21:11:33", "upload_time_iso_8601": "2019-01-07T21:11:33.616192Z", "url": "https://files.pythonhosted.org/packages/de/c6/4b6408dcc249ef745665e27b0f51c0f692cfb89bd24b844bbe51e3fc0d9b/os_faults-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "31d069cd46ed749a1dbd655ff39bb76d", "sha256": "816107e1e1545306236f151776d5e746ad70c29b7df1c5d64646df2cb64dd627"}, "downloads": -1, "filename": "os_faults-0.2.0.tar.gz", "has_sig": false, "md5_digest": "31d069cd46ed749a1dbd655ff39bb76d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68045, "upload_time": "2019-01-07T21:11:37", "upload_time_iso_8601": "2019-01-07T21:11:37.533850Z", "url": "https://files.pythonhosted.org/packages/06/8a/658970785411650fc9f16bb34773257525617a3f1adef9248c21a5be5d24/os_faults-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "8c3f2c9464c1f7a059a107ce8a827990", "sha256": "55ffbcac4150da813170944b314e10da922380640b080083598d8294f9260f15"}, "downloads": -1, "filename": "os_faults-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8c3f2c9464c1f7a059a107ce8a827990", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86540, "upload_time": "2019-02-19T20:40:53", "upload_time_iso_8601": "2019-02-19T20:40:53.131937Z", "url": "https://files.pythonhosted.org/packages/cf/f3/9a2bc0cc9073b724cf0274de7d7ce9f98b294174ee187ae0b86ac819f92d/os_faults-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4b4835342bd64a5f5f8a30d072e9e3e1", "sha256": "da7a81292b689e2952ec295ced6dce3137d996b02b66368fcc3b73e6c91add65"}, "downloads": -1, "filename": "os_faults-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4b4835342bd64a5f5f8a30d072e9e3e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67548, "upload_time": "2019-02-19T20:40:58", "upload_time_iso_8601": "2019-02-19T20:40:58.274854Z", "url": "https://files.pythonhosted.org/packages/7e/ae/a78bf1850b471e64c200986f4a9947c98b1f84145cfec101358d377bf83e/os_faults-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "358eee132658ee760a4811bcf89d4216", "sha256": "74391c74a4b1b5c5961c4776f49bed3bc1ae2b299a1d5dee5353628b7f34b274"}, "downloads": -1, "filename": "os_faults-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "358eee132658ee760a4811bcf89d4216", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86895, "upload_time": "2019-05-15T20:14:57", "upload_time_iso_8601": "2019-05-15T20:14:57.695872Z", "url": "https://files.pythonhosted.org/packages/12/fc/f2bb4b25344eff7f314ca1fb3c38d932e1083a1099f4efb2e81f1844a95a/os_faults-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db85f2017d0ddfcbaf34976e26f63591", "sha256": "74d395cf4d4a2ebaf160ab916a7ac571fa9f6847e7a0754411db29a9f793dcd7"}, "downloads": -1, "filename": "os_faults-0.2.2.tar.gz", "has_sig": false, "md5_digest": "db85f2017d0ddfcbaf34976e26f63591", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68650, "upload_time": "2019-05-15T20:15:03", "upload_time_iso_8601": "2019-05-15T20:15:03.287394Z", "url": "https://files.pythonhosted.org/packages/2a/54/45f48909b34f8605f89fd776d4fb0495fa9e7ef638a393dc87fd8324b227/os_faults-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e500642fdce76db40e922f4f8f5e2b32", "sha256": "c13c372d411efb9421c177237f86cdd010122cc79c9a457ae37394498bde8787"}, "downloads": -1, "filename": "os_faults-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e500642fdce76db40e922f4f8f5e2b32", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86020, "upload_time": "2019-07-05T17:43:49", "upload_time_iso_8601": "2019-07-05T17:43:49.704713Z", "url": "https://files.pythonhosted.org/packages/38/79/270d258bdd02da444828db002047587af84177d07a9459b2b5d42e4f1326/os_faults-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c555c487329b45e4bf1c59cf18a78833", "sha256": "a6f65bb5c0972c4c679ae6ab3d4848b9fa9a4692ec394e6415efa6a12c9e8e95"}, "downloads": -1, "filename": "os_faults-0.2.3.tar.gz", "has_sig": false, "md5_digest": "c555c487329b45e4bf1c59cf18a78833", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 66645, "upload_time": "2019-07-05T17:43:53", "upload_time_iso_8601": "2019-07-05T17:43:53.703090Z", "url": "https://files.pythonhosted.org/packages/16/f3/e5c05b007e7e5042e726afb1aee9fa31a0056915619a05cdaa35b4a33977/os_faults-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "3c21382e96d9d3d652d983bac81c59cd", "sha256": "a5446064e47264032878ce2c6b71aaf9cf556d7145ef4baae3a54d7f8fcffcf4"}, "downloads": -1, "filename": "os_faults-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c21382e96d9d3d652d983bac81c59cd", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86150, "upload_time": "2019-07-23T05:53:11", "upload_time_iso_8601": "2019-07-23T05:53:11.081311Z", "url": "https://files.pythonhosted.org/packages/58/d1/afa187af2a38918e69220c69eeaefc110636f7ea36ce2ab9684cc900d66b/os_faults-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c785533fc6785885c166b266a8684b9a", "sha256": "1376041ccc5469ef528791f4ab64fdca9bdc846a47a4384c72f9fc7d9a7be0b3"}, "downloads": -1, "filename": "os_faults-0.2.4.tar.gz", "has_sig": false, "md5_digest": "c785533fc6785885c166b266a8684b9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 69379, "upload_time": "2019-07-23T05:53:14", "upload_time_iso_8601": "2019-07-23T05:53:14.925082Z", "url": "https://files.pythonhosted.org/packages/fe/e5/5c6bcf3b929bbbff7432e0d295e539c9e6612816118ab8495b9ea3e961ce/os_faults-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "e16295065472a3b49d34e9489622d84a", "sha256": "0861f79bcc3e2ac3babdc0d039ce2d6bf9dcc50b22363eed4a057e6ec965b518"}, "downloads": -1, "filename": "os_faults-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e16295065472a3b49d34e9489622d84a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86250, "upload_time": "2019-09-09T19:49:28", "upload_time_iso_8601": "2019-09-09T19:49:28.737136Z", "url": "https://files.pythonhosted.org/packages/f0/13/d013a1bdb35e24c2d045b4290547102ad03f4e71fb8418ae983f2c8eb90a/os_faults-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8364b0593582c095fbded58c5371ab6", "sha256": "18fb9f4b53824d60e8c596129e044e5bc030eeb450419fb9750af58d4723d327"}, "downloads": -1, "filename": "os_faults-0.2.5.tar.gz", "has_sig": false, "md5_digest": "f8364b0593582c095fbded58c5371ab6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 67035, "upload_time": "2019-09-09T19:49:33", "upload_time_iso_8601": "2019-09-09T19:49:33.258325Z", "url": "https://files.pythonhosted.org/packages/ec/32/425b0bfbb684569401b63b7f825c89716b3a767261f576b868d2ba8d7af7/os_faults-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "598a472c40d17476da4dacedf6125806", "sha256": "224971d4c16ca12053b952d6a77768062a35c3e30283ea9c5aabae46942ac55d"}, "downloads": -1, "filename": "os_faults-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "598a472c40d17476da4dacedf6125806", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 88156, "upload_time": "2020-04-27T12:41:32", "upload_time_iso_8601": "2020-04-27T12:41:32.170232Z", "url": "https://files.pythonhosted.org/packages/3d/d2/701879e3953a47b3b9efbe441433c4e60c46edb3f872046b0db7fa769c3d/os_faults-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "44829481956a405c947b5f6a149edf3e", "sha256": "0b9453b292eaff58c9b9e02498265a2266e3f3e752a37334edc2549d3f2e59e4"}, "downloads": -1, "filename": "os_faults-0.2.6.tar.gz", "has_sig": false, "md5_digest": "44829481956a405c947b5f6a149edf3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74192, "upload_time": "2020-04-27T12:41:36", "upload_time_iso_8601": "2020-04-27T12:41:36.383226Z", "url": "https://files.pythonhosted.org/packages/f6/3d/db5eda98f72dd0c9c484735d389eed356a0bcdff4d0ec8d3b11ae0e80acf/os_faults-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "8cbd06b24aca31700e696b59f7ac3b36", "sha256": "330b3c452444dd5e4c1dc268ac8c08bb9e1600853d6eed196782ecc6df408934"}, "downloads": -1, "filename": "os_faults-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "8cbd06b24aca31700e696b59f7ac3b36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 88298, "upload_time": "2020-05-05T08:07:32", "upload_time_iso_8601": "2020-05-05T08:07:32.930409Z", "url": "https://files.pythonhosted.org/packages/5f/33/4d95612dea5e28d5fc4cb257947385f9dac84514be2995868413ef0a4f98/os_faults-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b25597d18a115639e3c2c85ddb0aad0", "sha256": "13d36f308ea7e927470de0dd39ac42cff2be81d7e2e2e94738fe0d02458ef0a0"}, "downloads": -1, "filename": "os_faults-0.2.7.tar.gz", "has_sig": false, "md5_digest": "3b25597d18a115639e3c2c85ddb0aad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73575, "upload_time": "2020-05-05T08:07:36", "upload_time_iso_8601": "2020-05-05T08:07:36.704652Z", "url": "https://files.pythonhosted.org/packages/7a/29/1b2354fa909a84d370362f8f31f647486c008f136599d44f8f69394e6e4b/os_faults-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8cbd06b24aca31700e696b59f7ac3b36", "sha256": "330b3c452444dd5e4c1dc268ac8c08bb9e1600853d6eed196782ecc6df408934"}, "downloads": -1, "filename": "os_faults-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "8cbd06b24aca31700e696b59f7ac3b36", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 88298, "upload_time": "2020-05-05T08:07:32", "upload_time_iso_8601": "2020-05-05T08:07:32.930409Z", "url": "https://files.pythonhosted.org/packages/5f/33/4d95612dea5e28d5fc4cb257947385f9dac84514be2995868413ef0a4f98/os_faults-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3b25597d18a115639e3c2c85ddb0aad0", "sha256": "13d36f308ea7e927470de0dd39ac42cff2be81d7e2e2e94738fe0d02458ef0a0"}, "downloads": -1, "filename": "os_faults-0.2.7.tar.gz", "has_sig": false, "md5_digest": "3b25597d18a115639e3c2c85ddb0aad0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73575, "upload_time": "2020-05-05T08:07:36", "upload_time_iso_8601": "2020-05-05T08:07:36.704652Z", "url": "https://files.pythonhosted.org/packages/7a/29/1b2354fa909a84d370362f8f31f647486c008f136599d44f8f69394e6e4b/os_faults-0.2.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:01:19 2020"}