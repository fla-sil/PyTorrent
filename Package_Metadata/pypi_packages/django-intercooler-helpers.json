{"info": {"author": "Keryn Knight", "author_email": "django-intercooler_helpers@kerynknight.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "django-intercooler_helpers\n==========================\n\n:author: Keryn Knight\n:version: 0.2.0\n\n.. |travis_stable| image:: https://travis-ci.org/kezabelle/django-intercoolerjs-helpers.svg?branch=0.2.0\n  :target: https://travis-ci.org/kezabelle/django-intercoolerjs-helpers\n\n.. |travis_master| image:: https://travis-ci.org/kezabelle/django-intercoolerjs-helpers.svg?branch=master\n  :target: https://travis-ci.org/kezabelle/django-intercoolerjs-helpers\n\n==============  ======\nRelease         Status\n==============  ======\nstable (0.2.0)  |travis_stable|\nmaster          |travis_master|\n==============  ======\n\n\n.. contents:: Sections\n   :depth: 2\n\nWhat it does\n------------\n\n``intercooler_helpers`` is a small reusable app for `Django`_ which provides a\nfew improvements for working with `Intercooler.js`_.\n\nIt providea a middleware which extracts relevant `Intercooler.js`_ data from the\nquerystring, and attaches it to the request as a separate ``QueryDict`` (ie: it\nbehaves like ``request.POST`` or ``request.GET``)\n\nIt also provides a small middleware for changing request method based on either the\nquery string (``_method=PUT``) or a request header(``X-HTTP-Method-Override: PUT``)\n\nBetween them, they should capture all the incoming `Intercooler.js`_ data on\nwhich the server may act.\n\nInstallation and usage\n----------------------\n\nThis application depends on `django-intercoolerjs`_ which provides a copy of\n`Intercooler.js`_ bundled up for use with the standard `Django`_ staticfiles\napplication.\n\nInstallation\n^^^^^^^^^^^^\n\nYou can grab ``0.2.0`` from `PyPI`_ like so::\n\n  pip install django-intercooler-helpers==0.2.0\n\nOr you can grab it from  `GitHub`_  like this::\n\n  pip install -e git+https://github.com/kezabelle/django-intercooler-helpers.git#egg=django-intercooler-helpers\n\nConfiguration\n^^^^^^^^^^^^^\nYou need to add ``intercooler_helpers.middleware.IntercoolerData`` to your\n``MIDDLEWARE_CLASSES`` (or ``MIDDLEWARE`` on Django **1.10+**).\n\nYou may optionally want to add ``intercooler_helpers.middleware.HttpMethodOverride``\nas well, if you don't already have a method by which to fake the HTTP Method change.\nIf you're using ``<meta name=\"intercoolerjs:use-actual-http-method\" content=\"true\"/>``\nthen you don't need ``HttpMethodOverride`` at all.\n\nUsage\n^^^^^\n\nA brief overview of the public API provided so far:\n\nIntercoolerData\n***************\n\nFor fully correct detection of `Intercooler.js`_ requests, you can call\n``request.is_intercooler()``.\nBehind the scenes, it uses ``request.maybe_intercooler()`` to\ndetect whether ``ic-request`` was present, indicating it *may* have been a\nvalid `Intercooler.js`_ request, and also checks ``request.is_ajax()``\n\nTo parse the Intercooler-related data out of the query-string, you can use\n``request.intercooler_data`` (not a method!) which is a ``QueryDict`` and should\nbehave exactly like ``request.GET`` - It pulls all of the ``ic-*`` keys out\nof ``request.GET`` and puts them in a separate data structure, leaving\nyour ``request.GET`` cleaned of extraenous data.\n\n``request.intercooler_data`` is a **lazy** data structure, like ``request.user``,\nso will not modify ``request.GET`` until access is attempted.\n\nThe following properties exist, mapping back to the keys mentioned in the\n`Intercooler.js Reference document`_\n\n- ``request.intercooler_data.current_url``\n\n  - returns the ``ic-current-url`` or ``None``\n- ``request.intercooler_data.element`` returns a ``namedtuple`` containing\n\n  -  ``ic-element-name`` or ``None``\n  -  ``ic-element-id`` or ``None``\n- ``request.intercooler_data.id``\n\n  - the ``ic-id`` which made the request. an ever-incrementing integer.\n- ``request.intercooler_data.request``\n\n  - a boolean indicating that it was an `Intercooler.js`_ request. Should always\n    be true if ``request.is_intercooler()`` said so.\n- ``request.intercooler_data.target_id``\n\n  -  ``ic-target-id`` or ``None``\n- ``request.intercooler_data.trigger`` returns a ``namedtuple`` containing\n\n  -  ``ic-trigger-name`` or ``None``\n  -  ``ic-trigger-id`` or ``None``\n- ``request.intercooler_data.prompt_value``\n\n  - If no ``ic-prompt-name`` was given and a prompt was used, this will contain\n    the user's response. Appears to be undocumented?\n\n\nHttpMethodOverride\n******************\n\n- ``request.changed_method`` is a boolean indicating that the request was\n  toggled from being a ``POST`` to something else (one of\n  ``GET``, ``HEAD``, ``POST``, ``PUT``, ``PATCH``, ``DELETE``, ``OPTIONS`` ...\n  though why you'd want to ``POST`` and have it act as a ``GET`` is beyond me.\n  But that's your choice)\n- ``request.original_method`` if either ``_method=X`` or\n  ``X-HTTP-Method-Override: X`` caused the request to change method, then this\n  will contain the original request. It should always be ``POST``\n- ``request.method`` will reflect the desired HTTP method, rather than the one\n  originally used (``POST``)\n\n\nSupported Django versions\n-------------------------\n\nThe tests are run against Django 1.8 through 1.10, and Python 2.7, 3.3, 3.4 and 3.5.\n\nRunning the tests\n^^^^^^^^^^^^^^^^^\n\nIf you have a cloned copy, you can do::\n\n  python setup.py test\n\nIf you have tox, you can just do::\n\n  tox\n\nRunning the demo\n^^^^^^^^^^^^^^^^\n\nI've not yet built the demo, but eventually you'll be able to do something like\nthe following. It assumes you're using something like `virtualenv`_ and\n`virtualenvwrapper`_ but you can probably figure it out otherwise::\n\n    mktmpenv --python=`which python3`\n    pip install -e git+https://github.com/kezabelle/django-intercooler-helpers.git#egg=django-intercooler-helpers\n\nThen probably::\n\n    cd src/django-intercooler-helpers\n    python demo_project.py runserver\n\n\nContributing\n------------\n\nPlease do!\n\nThe project is hosted on `GitHub`_ in the `kezabelle/django-intercooler-helpers`_\nrepository.\n\nBug reports and feature requests can be filed on the repository's `issue tracker`_.\n\nIf something can be discussed in 140 character chunks, there's also `my Twitter account`_.\n\nRoadmap\n-------\n\nTODO.\n\nThe license\n-----------\n\nIt's `FreeBSD`_. There's should be a ``LICENSE`` file in the root of the repository, and in any archives.\n\n.. _FreeBSD: http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29\n.. _Django: https://www.djangoproject.com/\n.. _Intercooler.js: http://intercoolerjs.org/\n.. _django-intercoolerjs: https://github.com/brejoc/django-intercoolerjs\n.. _GitHub: https://github.com/\n.. _PyPI: https://pypi.python.org/pypi\n.. _Intercooler.js Reference document: http://intercoolerjs.org/reference.html\n.. _virtualenvwrapper: https://virtualenvwrapper.readthedocs.io/en/latest/\n.. _virtualenv: https://virtualenv.pypa.io/en/stable/\n.. _kezabelle/django-intercooler-helpers: https://github.com/kezabelle/django-intercooler-helpers/\n.. _issue tracker: https://github.com/kezabelle/django-intercooler-helpers/issues/\n.. _my Twitter account: https://twitter.com/kezabelle/\n\n\n----\n\nCopyright (c) 2017, Keryn Knight\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:\n\n1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n\n2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n\nTHIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n\n\n----\n\nChange history for django-intercooler_helpers\n-------------------------------------------------------------\n0.2.0\n^^^^^^\n* Initial release.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kezabelle/django-intercoolerjs-helpers", "keywords": "django intercooler intercoolerjs", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-intercooler-helpers", "package_url": "https://pypi.org/project/django-intercooler-helpers/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-intercooler-helpers/", "project_urls": {"Homepage": "https://github.com/kezabelle/django-intercoolerjs-helpers"}, "release_url": "https://pypi.org/project/django-intercooler-helpers/0.2.0/", "requires_dist": ["Django (>=1.8)", "django-intercoolerjs (>=1.1.0.0)"], "requires_python": "", "summary": "a small reusable app for Django which provides a few improvements for working with Intercooler.js", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th>\n<td>Keryn Knight</td></tr>\n<tr><th>Version:</th>\n<td>0.2.0</td></tr>\n</tbody>\n</table>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Release</th>\n<th>Status</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>stable (0.2.0)</td>\n<td><a href=\"https://travis-ci.org/kezabelle/django-intercoolerjs-helpers\" rel=\"nofollow\"><img alt=\"travis_stable\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/82370a4814cd4ff5868532c5e6e753dee0fb5756/68747470733a2f2f7472617669732d63692e6f72672f6b657a6162656c6c652f646a616e676f2d696e746572636f6f6c65726a732d68656c706572732e7376673f6272616e63683d302e322e30\"></a></td>\n</tr>\n<tr><td>master</td>\n<td><a href=\"https://travis-ci.org/kezabelle/django-intercoolerjs-helpers\" rel=\"nofollow\"><img alt=\"travis_master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3a0473d5d9656c18960ab3da0f38b44b45ed683/68747470733a2f2f7472617669732d63692e6f72672f6b657a6162656c6c652f646a616e676f2d696e746572636f6f6c65726a732d68656c706572732e7376673f6272616e63683d6d6173746572\"></a></td>\n</tr>\n</tbody>\n</table>\n<div id=\"sections\">\n<p>Sections</p>\n<ul>\n<li><a href=\"#what-it-does\" id=\"id2\" rel=\"nofollow\">What it does</a></li>\n<li><a href=\"#installation-and-usage\" id=\"id3\" rel=\"nofollow\">Installation and usage</a><ul>\n<li><a href=\"#installation\" id=\"id4\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#configuration\" id=\"id5\" rel=\"nofollow\">Configuration</a></li>\n<li><a href=\"#usage\" id=\"id6\" rel=\"nofollow\">Usage</a></li>\n</ul>\n</li>\n<li><a href=\"#supported-django-versions\" id=\"id7\" rel=\"nofollow\">Supported Django versions</a><ul>\n<li><a href=\"#running-the-tests\" id=\"id8\" rel=\"nofollow\">Running the tests</a></li>\n<li><a href=\"#running-the-demo\" id=\"id9\" rel=\"nofollow\">Running the demo</a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" id=\"id10\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#roadmap\" id=\"id11\" rel=\"nofollow\">Roadmap</a></li>\n<li><a href=\"#the-license\" id=\"id12\" rel=\"nofollow\">The license</a></li>\n<li><a href=\"#change-history-for-django-intercooler-helpers\" id=\"id13\" rel=\"nofollow\">Change history for django-intercooler_helpers</a></li>\n</ul>\n</div>\n<div id=\"what-it-does\">\n<h2><a href=\"#id2\" rel=\"nofollow\">What it does</a></h2>\n<p><tt>intercooler_helpers</tt> is a small reusable app for <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> which provides a\nfew improvements for working with <a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a>.</p>\n<p>It providea a middleware which extracts relevant <a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a> data from the\nquerystring, and attaches it to the request as a separate <tt>QueryDict</tt> (ie: it\nbehaves like <tt>request.POST</tt> or <tt>request.GET</tt>)</p>\n<p>It also provides a small middleware for changing request method based on either the\nquery string (<tt>_method=PUT</tt>) or a request header(<tt><span class=\"pre\">X-HTTP-Method-Override:</span> PUT</tt>)</p>\n<p>Between them, they should capture all the incoming <a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a> data on\nwhich the server may act.</p>\n</div>\n<div id=\"installation-and-usage\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Installation and usage</a></h2>\n<p>This application depends on <a href=\"https://github.com/brejoc/django-intercoolerjs\" rel=\"nofollow\">django-intercoolerjs</a> which provides a copy of\n<a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a> bundled up for use with the standard <a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a> staticfiles\napplication.</p>\n<div id=\"installation\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Installation</a></h3>\n<p>You can grab <tt>0.2.0</tt> from <a href=\"https://pypi.python.org/pypi\" rel=\"nofollow\">PyPI</a> like so:</p>\n<pre>pip install django-intercooler-helpers==0.2.0\n</pre>\n<p>Or you can grab it from  <a href=\"https://github.com/\" rel=\"nofollow\">GitHub</a>  like this:</p>\n<pre>pip install -e git+https://github.com/kezabelle/django-intercooler-helpers.git#egg=django-intercooler-helpers\n</pre>\n</div>\n<div id=\"configuration\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Configuration</a></h3>\n<p>You need to add <tt>intercooler_helpers.middleware.IntercoolerData</tt> to your\n<tt>MIDDLEWARE_CLASSES</tt> (or <tt>MIDDLEWARE</tt> on Django <strong>1.10+</strong>).</p>\n<p>You may optionally want to add <tt>intercooler_helpers.middleware.HttpMethodOverride</tt>\nas well, if you don\u2019t already have a method by which to fake the HTTP Method change.\nIf you\u2019re using <tt>&lt;meta <span class=\"pre\">name=\"intercoolerjs:use-actual-http-method\"</span> <span class=\"pre\">content=\"true\"/&gt;</span></tt>\nthen you don\u2019t need <tt>HttpMethodOverride</tt> at all.</p>\n</div>\n<div id=\"usage\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Usage</a></h3>\n<p>A brief overview of the public API provided so far:</p>\n<div id=\"intercoolerdata\">\n<h4>IntercoolerData</h4>\n<p>For fully correct detection of <a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a> requests, you can call\n<tt>request.is_intercooler()</tt>.\nBehind the scenes, it uses <tt>request.maybe_intercooler()</tt> to\ndetect whether <tt><span class=\"pre\">ic-request</span></tt> was present, indicating it <em>may</em> have been a\nvalid <a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a> request, and also checks <tt>request.is_ajax()</tt></p>\n<p>To parse the Intercooler-related data out of the query-string, you can use\n<tt>request.intercooler_data</tt> (not a method!) which is a <tt>QueryDict</tt> and should\nbehave exactly like <tt>request.GET</tt> - It pulls all of the <tt><span class=\"pre\">ic-*</span></tt> keys out\nof <tt>request.GET</tt> and puts them in a separate data structure, leaving\nyour <tt>request.GET</tt> cleaned of extraenous data.</p>\n<p><tt>request.intercooler_data</tt> is a <strong>lazy</strong> data structure, like <tt>request.user</tt>,\nso will not modify <tt>request.GET</tt> until access is attempted.</p>\n<p>The following properties exist, mapping back to the keys mentioned in the\n<a href=\"http://intercoolerjs.org/reference.html\" rel=\"nofollow\">Intercooler.js Reference document</a></p>\n<ul>\n<li><tt>request.intercooler_data.current_url</tt><ul>\n<li>returns the <tt><span class=\"pre\">ic-current-url</span></tt> or <tt>None</tt></li>\n</ul>\n</li>\n<li><tt>request.intercooler_data.element</tt> returns a <tt>namedtuple</tt> containing<ul>\n<li><tt><span class=\"pre\">ic-element-name</span></tt> or <tt>None</tt></li>\n<li><tt><span class=\"pre\">ic-element-id</span></tt> or <tt>None</tt></li>\n</ul>\n</li>\n<li><tt>request.intercooler_data.id</tt><ul>\n<li>the <tt><span class=\"pre\">ic-id</span></tt> which made the request. an ever-incrementing integer.</li>\n</ul>\n</li>\n<li><tt>request.intercooler_data.request</tt><ul>\n<li>a boolean indicating that it was an <a href=\"http://intercoolerjs.org/\" rel=\"nofollow\">Intercooler.js</a> request. Should always\nbe true if <tt>request.is_intercooler()</tt> said so.</li>\n</ul>\n</li>\n<li><tt>request.intercooler_data.target_id</tt><ul>\n<li><tt><span class=\"pre\">ic-target-id</span></tt> or <tt>None</tt></li>\n</ul>\n</li>\n<li><tt>request.intercooler_data.trigger</tt> returns a <tt>namedtuple</tt> containing<ul>\n<li><tt><span class=\"pre\">ic-trigger-name</span></tt> or <tt>None</tt></li>\n<li><tt><span class=\"pre\">ic-trigger-id</span></tt> or <tt>None</tt></li>\n</ul>\n</li>\n<li><tt>request.intercooler_data.prompt_value</tt><ul>\n<li>If no <tt><span class=\"pre\">ic-prompt-name</span></tt> was given and a prompt was used, this will contain\nthe user\u2019s response. Appears to be undocumented?</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"httpmethodoverride\">\n<h4>HttpMethodOverride</h4>\n<ul>\n<li><tt>request.changed_method</tt> is a boolean indicating that the request was\ntoggled from being a <tt>POST</tt> to something else (one of\n<tt>GET</tt>, <tt>HEAD</tt>, <tt>POST</tt>, <tt>PUT</tt>, <tt>PATCH</tt>, <tt>DELETE</tt>, <tt>OPTIONS</tt> \u2026\nthough why you\u2019d want to <tt>POST</tt> and have it act as a <tt>GET</tt> is beyond me.\nBut that\u2019s your choice)</li>\n<li><tt>request.original_method</tt> if either <tt>_method=X</tt> or\n<tt><span class=\"pre\">X-HTTP-Method-Override:</span> X</tt> caused the request to change method, then this\nwill contain the original request. It should always be <tt>POST</tt></li>\n<li><tt>request.method</tt> will reflect the desired HTTP method, rather than the one\noriginally used (<tt>POST</tt>)</li>\n</ul>\n</div>\n</div>\n</div>\n<div id=\"supported-django-versions\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Supported Django versions</a></h2>\n<p>The tests are run against Django 1.8 through 1.10, and Python 2.7, 3.3, 3.4 and 3.5.</p>\n<div id=\"running-the-tests\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Running the tests</a></h3>\n<p>If you have a cloned copy, you can do:</p>\n<pre>python setup.py test\n</pre>\n<p>If you have tox, you can just do:</p>\n<pre>tox\n</pre>\n</div>\n<div id=\"running-the-demo\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Running the demo</a></h3>\n<p>I\u2019ve not yet built the demo, but eventually you\u2019ll be able to do something like\nthe following. It assumes you\u2019re using something like <a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">virtualenv</a> and\n<a href=\"https://virtualenvwrapper.readthedocs.io/en/latest/\" rel=\"nofollow\">virtualenvwrapper</a> but you can probably figure it out otherwise:</p>\n<pre>mktmpenv --python=`which python3`\npip install -e git+https://github.com/kezabelle/django-intercooler-helpers.git#egg=django-intercooler-helpers\n</pre>\n<p>Then probably:</p>\n<pre>cd src/django-intercooler-helpers\npython demo_project.py runserver\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2><a href=\"#id10\" rel=\"nofollow\">Contributing</a></h2>\n<p>Please do!</p>\n<p>The project is hosted on <a href=\"https://github.com/\" rel=\"nofollow\">GitHub</a> in the <a href=\"https://github.com/kezabelle/django-intercooler-helpers/\" rel=\"nofollow\">kezabelle/django-intercooler-helpers</a>\nrepository.</p>\n<p>Bug reports and feature requests can be filed on the repository\u2019s <a href=\"https://github.com/kezabelle/django-intercooler-helpers/issues/\" rel=\"nofollow\">issue tracker</a>.</p>\n<p>If something can be discussed in 140 character chunks, there\u2019s also <a href=\"https://twitter.com/kezabelle/\" rel=\"nofollow\">my Twitter account</a>.</p>\n</div>\n<div id=\"roadmap\">\n<h2><a href=\"#id11\" rel=\"nofollow\">Roadmap</a></h2>\n<p>TODO.</p>\n</div>\n<div id=\"the-license\">\n<h2><a href=\"#id12\" rel=\"nofollow\">The license</a></h2>\n<p>It\u2019s <a href=\"http://en.wikipedia.org/wiki/BSD_licenses#2-clause_license_.28.22Simplified_BSD_License.22_or_.22FreeBSD_License.22.29\" rel=\"nofollow\">FreeBSD</a>. There\u2019s should be a <tt>LICENSE</tt> file in the root of the repository, and in any archives.</p>\n<hr class=\"docutils\">\n<p>Copyright (c) 2017, Keryn Knight\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:</p>\n<ol>\n<li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>\n</ol>\n<p>THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \u201cAS IS\u201d AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n<hr class=\"docutils\">\n<div id=\"change-history-for-django-intercooler-helpers\">\n<h2><a href=\"#id13\" rel=\"nofollow\">Change history for django-intercooler_helpers</a></h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.2.0</span></h2>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2682249, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "b22b0003574da8588ab394adde78a902", "sha256": "f15d7d182b59faf80df3dd7c6caa4628c6ec502225c14b68252d03c9eae4ad92"}, "downloads": -1, "filename": "django_intercooler_helpers-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b22b0003574da8588ab394adde78a902", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14457, "upload_time": "2017-03-04T13:19:44", "upload_time_iso_8601": "2017-03-04T13:19:44.716460Z", "url": "https://files.pythonhosted.org/packages/bf/a0/9d00ae24d1b535fffc5ebcf59ff4ab1d2bf9050100299804e634d4a22e5d/django_intercooler_helpers-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c91a17e6ca3276fe0e5e70bd02695ea", "sha256": "5b0e46be0b4519d2892a8369b2f58ed9412e810516d2a510b0e9e1e5f0bb88d4"}, "downloads": -1, "filename": "django-intercooler_helpers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2c91a17e6ca3276fe0e5e70bd02695ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17377, "upload_time": "2017-03-04T13:19:47", "upload_time_iso_8601": "2017-03-04T13:19:47.533908Z", "url": "https://files.pythonhosted.org/packages/0f/ec/d88768aaf22d2b494b9ea3f9607efe4011cf881677e70c5ad066193f843f/django-intercooler_helpers-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b22b0003574da8588ab394adde78a902", "sha256": "f15d7d182b59faf80df3dd7c6caa4628c6ec502225c14b68252d03c9eae4ad92"}, "downloads": -1, "filename": "django_intercooler_helpers-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b22b0003574da8588ab394adde78a902", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14457, "upload_time": "2017-03-04T13:19:44", "upload_time_iso_8601": "2017-03-04T13:19:44.716460Z", "url": "https://files.pythonhosted.org/packages/bf/a0/9d00ae24d1b535fffc5ebcf59ff4ab1d2bf9050100299804e634d4a22e5d/django_intercooler_helpers-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2c91a17e6ca3276fe0e5e70bd02695ea", "sha256": "5b0e46be0b4519d2892a8369b2f58ed9412e810516d2a510b0e9e1e5f0bb88d4"}, "downloads": -1, "filename": "django-intercooler_helpers-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2c91a17e6ca3276fe0e5e70bd02695ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17377, "upload_time": "2017-03-04T13:19:47", "upload_time_iso_8601": "2017-03-04T13:19:47.533908Z", "url": "https://files.pythonhosted.org/packages/0f/ec/d88768aaf22d2b494b9ea3f9607efe4011cf881677e70c5ad066193f843f/django-intercooler_helpers-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:34 2020"}