{"info": {"author": "JunYoung Gwak", "author_email": "jgwak@dreamylab.com", "bugtrack_url": null, "classifiers": [], "description": "Fork\r\n----\r\nThis is simply a fork of the PyDrive repo. The code here comes directly from github. This was created back when PyDrive wasnt python3 compatible. But now it is, so this package is useless now. You should use the official one from google\r\n\r\nPyDrive\r\n-------\r\n\r\n*PyDrive* is a wrapper library of\r\n`google-api-python-client <https://code.google.com/p/google-api-python-client/>`_\r\nthat simplifies many common Google Drive API tasks.\r\n\r\nProject Info\r\n------------\r\n\r\n- Homepage: `https://pypi.python.org/pypi/PyDrive <https://pypi.python.org/pypi/PyDrive>`_                                                 \r\n- Documentation: `http://pythonhosted.org/PyDrive <http://pythonhosted.org/PyDrive>`_                                                      \r\n- Github: `https://github.com/googledrive/PyDrive <https://github.com/googledrive/PyDrive>`_                                               \r\n\r\nFeatures of PyDrive\r\n-------------------\r\n\r\n-  Simplifies OAuth2.0 into just few lines with flexible settings.\r\n-  Wraps `Google Drive API <https://developers.google.com/drive/>`_ into\r\n   classes of each resource to make your program more object-oriented.\r\n-  Helps common operations else than API calls, such as content fetching\r\n   and pagination control.\r\n\r\nHow to install\r\n--------------\r\n\r\nYou can install PyDrive with regular ``pip`` command.\r\n\r\n::\r\n\r\n    $ pip install PyDrive\r\n\r\nOAuth made easy\r\n---------------\r\n\r\nDownload *client\\_secrets.json* from Google API Console and OAuth2.0 is\r\ndone in two lines. You can customize behavior of OAuth2 in one settings\r\nfile *settings.yaml*.\r\n\r\n.. code:: python\r\n\r\n\r\n    from pydrive.auth import GoogleAuth\r\n    from pydrive.drive import GoogleDrive\r\n    \r\n    gauth = GoogleAuth()\r\n    gauth.LocalWebserverAuth()\r\n    \r\n    drive = GoogleDrive(gauth)\r\n\r\nFile management made easy\r\n-------------------------\r\n    \r\nUpload/update the file with one method. PyDrive will do it in the most\r\nefficient way.\r\n\r\n.. code:: python\r\n\r\n    file1 = drive.CreateFile({'title': 'Hello.txt'})\r\n    file1.SetContentString('Hello')\r\n    file1.Upload() # Files.insert()\r\n\r\n    file1['title'] = 'HelloWorld.txt'  # Change title of the file\r\n    file1.Upload() # Files.patch()\r\n\r\n    content = file1.GetContentString()  # 'Hello'\r\n    file1.SetContentString(content+' World!')  # 'Hello World!'\r\n    file1.Upload() # Files.update()\r\n\r\n    file2 = drive.CreateFile()\r\n    file2.SetContentFile('hello.png')\r\n    file2.Upload()\r\n    print('Created file %s with mimeType %s' % (file2['title'], file2['mimeType']))\r\n    # Created file hello.png with mimeType image/png\r\n\r\n    file3 = drive.CreateFile({'id': file2['id']})\r\n    print('Downloading file %s from Google Drive' % file3['title']) # 'hello.png'\r\n    file3.GetContentFile('world.png')  # Save Drive file as a local file\r\n\r\n    # or download Google Docs files in an export format provided.\r\n    # downloading a docs document as an html file:\r\n    docsfile.GetContentFile('test.html', mimetype='text/html')\r\n\r\nFile listing pagination made easy\r\n---------------------------------\r\n\r\n*PyDrive* handles file listing pagination for you.\r\n\r\n.. code:: python\r\n\r\n    # Auto-iterate through all files that matches this query\r\n    file_list = drive.ListFile({'q': \"'root' in parents\"}).GetList()\r\n    for file1 in file_list:\r\n      print('title: %s, id: %s' % (file1['title'], file1['id']))\r\n\r\n    # Paginate file lists by specifying number of max results\r\n    for file_list in drive.ListFile({'maxResults': 10}):\r\n      print 'Received %s files from Files.list()' % len(file_list) # <= 10\r\n      for file1 in file_list:\r\n        print('title: %s, id: %s' % (file1['title'], file1['id']))", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/PyDrive/", "keywords": "", "license": "LICENSE", "maintainer": "", "maintainer_email": "", "name": "PyDrive3", "package_url": "https://pypi.org/project/PyDrive3/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PyDrive3/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/PyDrive/"}, "release_url": "https://pypi.org/project/PyDrive3/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Google Drive API made easy.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"fork\">\n<h2>Fork</h2>\n<p>This is simply a fork of the PyDrive repo. The code here comes directly from github. This was created back when PyDrive wasnt python3 compatible. But now it is, so this package is useless now. You should use the official one from google</p>\n</div>\n<div id=\"pydrive\">\n<h2>PyDrive</h2>\n<p><em>PyDrive</em> is a wrapper library of\n<a href=\"https://code.google.com/p/google-api-python-client/\" rel=\"nofollow\">google-api-python-client</a>\nthat simplifies many common Google Drive API tasks.</p>\n</div>\n<div id=\"project-info\">\n<h2>Project Info</h2>\n<ul>\n<li>Homepage: <a href=\"https://pypi.python.org/pypi/PyDrive\" rel=\"nofollow\">https://pypi.python.org/pypi/PyDrive</a></li>\n<li>Documentation: <a href=\"http://pythonhosted.org/PyDrive\" rel=\"nofollow\">http://pythonhosted.org/PyDrive</a></li>\n<li>Github: <a href=\"https://github.com/googledrive/PyDrive\" rel=\"nofollow\">https://github.com/googledrive/PyDrive</a></li>\n</ul>\n</div>\n<div id=\"features-of-pydrive\">\n<h2>Features of PyDrive</h2>\n<ul>\n<li>Simplifies OAuth2.0 into just few lines with flexible settings.</li>\n<li>Wraps <a href=\"https://developers.google.com/drive/\" rel=\"nofollow\">Google Drive API</a> into\nclasses of each resource to make your program more object-oriented.</li>\n<li>Helps common operations else than API calls, such as content fetching\nand pagination control.</li>\n</ul>\n</div>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>You can install PyDrive with regular <tt>pip</tt> command.</p>\n<pre>$ pip install PyDrive\n</pre>\n</div>\n<div id=\"oauth-made-easy\">\n<h2>OAuth made easy</h2>\n<p>Download <em>client_secrets.json</em> from Google API Console and OAuth2.0 is\ndone in two lines. You can customize behavior of OAuth2 in one settings\nfile <em>settings.yaml</em>.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydrive.auth</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleAuth</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pydrive.drive</span> <span class=\"kn\">import</span> <span class=\"n\">GoogleDrive</span>\n\n<span class=\"n\">gauth</span> <span class=\"o\">=</span> <span class=\"n\">GoogleAuth</span><span class=\"p\">()</span>\n<span class=\"n\">gauth</span><span class=\"o\">.</span><span class=\"n\">LocalWebserverAuth</span><span class=\"p\">()</span>\n\n<span class=\"n\">drive</span> <span class=\"o\">=</span> <span class=\"n\">GoogleDrive</span><span class=\"p\">(</span><span class=\"n\">gauth</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"file-management-made-easy\">\n<h2>File management made easy</h2>\n<p>Upload/update the file with one method. PyDrive will do it in the most\nefficient way.</p>\n<pre><span class=\"n\">file1</span> <span class=\"o\">=</span> <span class=\"n\">drive</span><span class=\"o\">.</span><span class=\"n\">CreateFile</span><span class=\"p\">({</span><span class=\"s1\">'title'</span><span class=\"p\">:</span> <span class=\"s1\">'Hello.txt'</span><span class=\"p\">})</span>\n<span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">SetContentString</span><span class=\"p\">(</span><span class=\"s1\">'Hello'</span><span class=\"p\">)</span>\n<span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">Upload</span><span class=\"p\">()</span> <span class=\"c1\"># Files.insert()</span>\n\n<span class=\"n\">file1</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'HelloWorld.txt'</span>  <span class=\"c1\"># Change title of the file</span>\n<span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">Upload</span><span class=\"p\">()</span> <span class=\"c1\"># Files.patch()</span>\n\n<span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">GetContentString</span><span class=\"p\">()</span>  <span class=\"c1\"># 'Hello'</span>\n<span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">SetContentString</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"o\">+</span><span class=\"s1\">' World!'</span><span class=\"p\">)</span>  <span class=\"c1\"># 'Hello World!'</span>\n<span class=\"n\">file1</span><span class=\"o\">.</span><span class=\"n\">Upload</span><span class=\"p\">()</span> <span class=\"c1\"># Files.update()</span>\n\n<span class=\"n\">file2</span> <span class=\"o\">=</span> <span class=\"n\">drive</span><span class=\"o\">.</span><span class=\"n\">CreateFile</span><span class=\"p\">()</span>\n<span class=\"n\">file2</span><span class=\"o\">.</span><span class=\"n\">SetContentFile</span><span class=\"p\">(</span><span class=\"s1\">'hello.png'</span><span class=\"p\">)</span>\n<span class=\"n\">file2</span><span class=\"o\">.</span><span class=\"n\">Upload</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Created file </span><span class=\"si\">%s</span><span class=\"s1\"> with mimeType </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">file2</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">],</span> <span class=\"n\">file2</span><span class=\"p\">[</span><span class=\"s1\">'mimeType'</span><span class=\"p\">]))</span>\n<span class=\"c1\"># Created file hello.png with mimeType image/png</span>\n\n<span class=\"n\">file3</span> <span class=\"o\">=</span> <span class=\"n\">drive</span><span class=\"o\">.</span><span class=\"n\">CreateFile</span><span class=\"p\">({</span><span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"n\">file2</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]})</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Downloading file </span><span class=\"si\">%s</span><span class=\"s1\"> from Google Drive'</span> <span class=\"o\">%</span> <span class=\"n\">file3</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">])</span> <span class=\"c1\"># 'hello.png'</span>\n<span class=\"n\">file3</span><span class=\"o\">.</span><span class=\"n\">GetContentFile</span><span class=\"p\">(</span><span class=\"s1\">'world.png'</span><span class=\"p\">)</span>  <span class=\"c1\"># Save Drive file as a local file</span>\n\n<span class=\"c1\"># or download Google Docs files in an export format provided.</span>\n<span class=\"c1\"># downloading a docs document as an html file:</span>\n<span class=\"n\">docsfile</span><span class=\"o\">.</span><span class=\"n\">GetContentFile</span><span class=\"p\">(</span><span class=\"s1\">'test.html'</span><span class=\"p\">,</span> <span class=\"n\">mimetype</span><span class=\"o\">=</span><span class=\"s1\">'text/html'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"file-listing-pagination-made-easy\">\n<h2>File listing pagination made easy</h2>\n<p><em>PyDrive</em> handles file listing pagination for you.</p>\n<pre><span class=\"c1\"># Auto-iterate through all files that matches this query</span>\n<span class=\"n\">file_list</span> <span class=\"o\">=</span> <span class=\"n\">drive</span><span class=\"o\">.</span><span class=\"n\">ListFile</span><span class=\"p\">({</span><span class=\"s1\">'q'</span><span class=\"p\">:</span> <span class=\"s2\">\"'root' in parents\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">GetList</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">file1</span> <span class=\"ow\">in</span> <span class=\"n\">file_list</span><span class=\"p\">:</span>\n  <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'title: </span><span class=\"si\">%s</span><span class=\"s1\">, id: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">file1</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">],</span> <span class=\"n\">file1</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># Paginate file lists by specifying number of max results</span>\n<span class=\"k\">for</span> <span class=\"n\">file_list</span> <span class=\"ow\">in</span> <span class=\"n\">drive</span><span class=\"o\">.</span><span class=\"n\">ListFile</span><span class=\"p\">({</span><span class=\"s1\">'maxResults'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">}):</span>\n  <span class=\"nb\">print</span> <span class=\"s1\">'Received </span><span class=\"si\">%s</span><span class=\"s1\"> files from Files.list()'</span> <span class=\"o\">%</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">file_list</span><span class=\"p\">)</span> <span class=\"c1\"># &lt;= 10</span>\n  <span class=\"k\">for</span> <span class=\"n\">file1</span> <span class=\"ow\">in</span> <span class=\"n\">file_list</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'title: </span><span class=\"si\">%s</span><span class=\"s1\">, id: </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">file1</span><span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">],</span> <span class=\"n\">file1</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]))</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2274240, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "d522180430f58b6a0493660c3e5e401f", "sha256": "1d19e5ca52f49b29c506f999b40fd27623abfecf356f30031fa180683a5b122c"}, "downloads": -1, "filename": "PyDrive3-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d522180430f58b6a0493660c3e5e401f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 157652, "upload_time": "2016-03-25T21:21:52", "upload_time_iso_8601": "2016-03-25T21:21:52.350021Z", "url": "https://files.pythonhosted.org/packages/58/60/5d67343ea4d482eaba9a891a0ffb51186c50a11059697f7e9198020f4b80/PyDrive3-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d522180430f58b6a0493660c3e5e401f", "sha256": "1d19e5ca52f49b29c506f999b40fd27623abfecf356f30031fa180683a5b122c"}, "downloads": -1, "filename": "PyDrive3-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d522180430f58b6a0493660c3e5e401f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 157652, "upload_time": "2016-03-25T21:21:52", "upload_time_iso_8601": "2016-03-25T21:21:52.350021Z", "url": "https://files.pythonhosted.org/packages/58/60/5d67343ea4d482eaba9a891a0ffb51186c50a11059697f7e9198020f4b80/PyDrive3-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:45 2020"}