{"info": {"author": "aimktech", "author_email": "code@aimechanics.tech", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Education", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# amtFSM - A simple FSM\n\nThis library aims at provide an easy to use Finite State Machine.\n\n## Classes\n\n### **StateType**\nThis class defines the supported types for a State:\n- FSM_BEGIN_STATE: use to define a start point for the FSM\n- FSM_NORMAL_STATE: use to define a normal state for the FSM\n- FSM_END_STATE: use to define a end point for the FSM\n\n### **State**\nThis class defines a FSM State. Properties associated with a State are:\n- name: a unique identifier for this state\n- type: the type of this state as defined by the **StateType** class\n- enter_action: a string sent to the client when entering this state\n- exit_action: a string sent to the client when exiting this state\n\n### **Event**\nThis class defines a FSM Event. Property associated with an Event is:\n- name: a unique identifier for this event\n\n### **Transition**\nA transition describes the next state depending on the current state and the event.  \nThe properties associated with a Transition are:\n- event: the Event triggering the transition\n- begin_state: the initial State for the transition\n- end_state: the end State for the transition\n\n### **FSM**\nThis class defines the FSM.  \nThe following properties are available:\n- has_ended: True if the FSM is in END state\n- current: The current state for the FSM\n\nTo properly communicates with the client, the FSM needs:\n- a user callback method that takes an argument\n- a user queue where the callback methods will be pushed\n\nEverytime a change of states occured, the FSM will:\n- push the callback in the queue with the exit_action from the previous state\n- push the callback in the queue with the enter_action from the new state\n\n#### Methods available to the client\n\n*setup(user_callback, user_queue)*  \n\nThis function is used to initiate the user callback and queue.  \nThe user_queue should be an instance of *queue.Queue()*  \nThe user_callback must take an argument:\n``` python\ndef user_callback(fsm_action):\n    # do something with fsm_action\n    #...\n```\n\n**FSMError** will be raise if the user_callback is not callable or if the user_queue is not an instance of *queue.Queue()*.\n\n***\n*add(transitions)*  \n\nAdd a list of transitions to the FSM. Upon parsing this list, the FSM will construct its own repository of States and Events.\n\n***\n*state()*  \n\nReturn the name of the current state or \"\" if not current state is defined.\n\n***\n*start()* \n\nSet the FSM on the starting point.  \n*has_ended* will be set to **False**.  \n\n**FSMError** will be raised if no starting point can be found in the list of states.\n\n***\n*stop()*\n\nSet the FSM on the ending point.  \n*has_ended* will be set to **True**.\n\n**FSMError** will be raised if no ending point can be found in the list of states.\n\n***\n*update(event)*  \n\nUpdate the FSM with the event. If the event is defined for the current state and the move is valid, the transition will occur.\n\n**FSMError** will be raised if:\n- the event is not defined for the current state\n- the end state is None\n\n***\n*can(state)*  \n\nReturn **True** if the FSM can move to *state* from the current state.  \nReturn **False** otherwise.\n\n***\n*cannot(state)*  \n\nReturn **True** if the FSM cannot move to *state* from the current state.  \nReturn **False** otherwise.\n\n***\n\n### **FSMBuilder**\nThis helper class is used for creating a FSM object from a **YAML** definition.  \nExample:\n``` python\nbuilder = FSMBuilder(\"myFSMDefinition.yml\")\nfsm_composite = builder.parse()\n```\nUpon successful parsing of the YAML file, a **FSMBuilderComposite** object is created.\n\n***\n*FSMBuilder(filename)*  \nConstructor.\n\n**FSMBuilderError** will be raised if the file cannot be found on the filesystem.\n\n***\n*parse(event_objects=True)*  \n\nParse the file and build the FSMBuilderComposite object.  \nIf *event_objects* is True, the parser will map each events to a specific string within the composite object.  \nThe string will start with 'E' and follow by an index.\n\n*Example*:  \nEvents are defined in the YAML file in this order 'PLAY', 'PAUSE', 'STOP'.  \nThe composite object will have the properties:\n- E0 that will map to 'PLAY'\n- E1 that will map to 'PAUSE'\n- E2 that will map to 'STOP'\n\n\n**FSMBuilderError** will be raised in the following cases:\n- if the YAML file is not with the correct version\n- if the specific markers cannot be found in the file (see YAML file definition below)\n\n***\n\n### **FSMBuilderComposite**\nThis composite object is created when parsing a YAML file.\nThe properties available after creation are:\n- FSM: this is the FSM object\n- events: this list contains all the events found in the YAML definition\n- Exxx: mapping for the events in the list (optional)\n\n## Exceptions\n\n### **FSMError**\nThis is the generic Exception raised when a problem occured in the FSM.\n\n### **FSMBuilderError**\nThis is the generic Exception raised when a problem occured while building FSM from YAML file.\n\n## YAML file definition\n\nA set of mandatory markers should be defined in the file.\n\n### **Version**\n\nThis indicates the minimum version of the reader to decode this file.  \nFor now, only version **0.1.0** is supported.\n\n### **Events**\n\nThe list of events defined for this FSM\n\n### **States**\n\nThe list of states defined for this FSM.\nThe properties defined for a state are:\n- name (MANDATORY): a unique name for this state\n- type (OPTIONAL): the type of this state (BEGIN, NORMAL, END) or NORMAL by default\n- enter (OPTIONAL): the action string when entering this state\n- exit (OPTIONAL): the action string when leaving this state\n\n### **Transitions**\n\nThe list of transitions for this FSM.\nEach transition should have:\n- event (MANDATORY): the name of the event as defined in Events\n- begin (MANDATORY): the name of the begining state\n- end (MANDATORY): the name of the ending state\n\n### **Example:**\n\n```yaml\n# define the version\nVersion: 0.1.0\n\n# define some events\nEvents:\n  - E.PLAY\n  - E.PAUSE\n  - E.STOP\n\n# define some states\nStates:\n  - name: S.PLAY\n    type: BEGIN\n    enter: \"play\"\n    exit: \"\"\n  - name: S.PAUSE\n    type: NORMAL\n    enter: \"pause\"\n  - name: S.STOP\n    type: END\n    enter: \"stop\"\n\n# define some transitions\nTransitions:\n  - event: E.PAUSE\n    begin: S.PLAY\n    end: S.PAUSE\n  - event: E.PAUSE\n    begin: S.PAUSE\n    end: S.PAUSE\n\n  - event: E.PLAY\n    begin: S.PAUSE\n    end: S.PLAY\n  - event: E.PLAY\n    begin: S.PLAY\n    end: S.PLAY\n\n  - event: E.STOP\n    begin: S.PLAY\n    end: S.STOP\n  - event: E.STOP\n    begin: S.PAUSE\n    end: S.STOP\n  - event: E.STOP\n    begin: S.STOP\n    end: S.STOP\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aimktech/amtFSM", "keywords": "", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "amtfsm", "package_url": "https://pypi.org/project/amtfsm/", "platform": "", "project_url": "https://pypi.org/project/amtfsm/", "project_urls": {"Homepage": "https://github.com/aimktech/amtFSM"}, "release_url": "https://pypi.org/project/amtfsm/0.1.0/", "requires_dist": ["pyyaml (>=5.1.1)"], "requires_python": "", "summary": "A simple to use Finite State Machine", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>amtFSM - A simple FSM</h1>\n<p>This library aims at provide an easy to use Finite State Machine.</p>\n<h2>Classes</h2>\n<h3><strong>StateType</strong></h3>\n<p>This class defines the supported types for a State:</p>\n<ul>\n<li>FSM_BEGIN_STATE: use to define a start point for the FSM</li>\n<li>FSM_NORMAL_STATE: use to define a normal state for the FSM</li>\n<li>FSM_END_STATE: use to define a end point for the FSM</li>\n</ul>\n<h3><strong>State</strong></h3>\n<p>This class defines a FSM State. Properties associated with a State are:</p>\n<ul>\n<li>name: a unique identifier for this state</li>\n<li>type: the type of this state as defined by the <strong>StateType</strong> class</li>\n<li>enter_action: a string sent to the client when entering this state</li>\n<li>exit_action: a string sent to the client when exiting this state</li>\n</ul>\n<h3><strong>Event</strong></h3>\n<p>This class defines a FSM Event. Property associated with an Event is:</p>\n<ul>\n<li>name: a unique identifier for this event</li>\n</ul>\n<h3><strong>Transition</strong></h3>\n<p>A transition describes the next state depending on the current state and the event.<br>\nThe properties associated with a Transition are:</p>\n<ul>\n<li>event: the Event triggering the transition</li>\n<li>begin_state: the initial State for the transition</li>\n<li>end_state: the end State for the transition</li>\n</ul>\n<h3><strong>FSM</strong></h3>\n<p>This class defines the FSM.<br>\nThe following properties are available:</p>\n<ul>\n<li>has_ended: True if the FSM is in END state</li>\n<li>current: The current state for the FSM</li>\n</ul>\n<p>To properly communicates with the client, the FSM needs:</p>\n<ul>\n<li>a user callback method that takes an argument</li>\n<li>a user queue where the callback methods will be pushed</li>\n</ul>\n<p>Everytime a change of states occured, the FSM will:</p>\n<ul>\n<li>push the callback in the queue with the exit_action from the previous state</li>\n<li>push the callback in the queue with the enter_action from the new state</li>\n</ul>\n<h4>Methods available to the client</h4>\n<p><em>setup(user_callback, user_queue)</em></p>\n<p>This function is used to initiate the user callback and queue.<br>\nThe user_queue should be an instance of <em>queue.Queue()</em><br>\nThe user_callback must take an argument:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">user_callback</span><span class=\"p\">(</span><span class=\"n\">fsm_action</span><span class=\"p\">):</span>\n    <span class=\"c1\"># do something with fsm_action</span>\n    <span class=\"c1\">#...</span>\n</pre>\n<p><strong>FSMError</strong> will be raise if the user_callback is not callable or if the user_queue is not an instance of <em>queue.Queue()</em>.</p>\n<hr>\n<p><em>add(transitions)</em></p>\n<p>Add a list of transitions to the FSM. Upon parsing this list, the FSM will construct its own repository of States and Events.</p>\n<hr>\n<p><em>state()</em></p>\n<p>Return the name of the current state or \"\" if not current state is defined.</p>\n<hr>\n<p><em>start()</em></p>\n<p>Set the FSM on the starting point.<br>\n<em>has_ended</em> will be set to <strong>False</strong>.</p>\n<p><strong>FSMError</strong> will be raised if no starting point can be found in the list of states.</p>\n<hr>\n<p><em>stop()</em></p>\n<p>Set the FSM on the ending point.<br>\n<em>has_ended</em> will be set to <strong>True</strong>.</p>\n<p><strong>FSMError</strong> will be raised if no ending point can be found in the list of states.</p>\n<hr>\n<p><em>update(event)</em></p>\n<p>Update the FSM with the event. If the event is defined for the current state and the move is valid, the transition will occur.</p>\n<p><strong>FSMError</strong> will be raised if:</p>\n<ul>\n<li>the event is not defined for the current state</li>\n<li>the end state is None</li>\n</ul>\n<hr>\n<p><em>can(state)</em></p>\n<p>Return <strong>True</strong> if the FSM can move to <em>state</em> from the current state.<br>\nReturn <strong>False</strong> otherwise.</p>\n<hr>\n<p><em>cannot(state)</em></p>\n<p>Return <strong>True</strong> if the FSM cannot move to <em>state</em> from the current state.<br>\nReturn <strong>False</strong> otherwise.</p>\n<hr>\n<h3><strong>FSMBuilder</strong></h3>\n<p>This helper class is used for creating a FSM object from a <strong>YAML</strong> definition.<br>\nExample:</p>\n<pre><span class=\"n\">builder</span> <span class=\"o\">=</span> <span class=\"n\">FSMBuilder</span><span class=\"p\">(</span><span class=\"s2\">\"myFSMDefinition.yml\"</span><span class=\"p\">)</span>\n<span class=\"n\">fsm_composite</span> <span class=\"o\">=</span> <span class=\"n\">builder</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">()</span>\n</pre>\n<p>Upon successful parsing of the YAML file, a <strong>FSMBuilderComposite</strong> object is created.</p>\n<hr>\n<p><em>FSMBuilder(filename)</em><br>\nConstructor.</p>\n<p><strong>FSMBuilderError</strong> will be raised if the file cannot be found on the filesystem.</p>\n<hr>\n<p><em>parse(event_objects=True)</em></p>\n<p>Parse the file and build the FSMBuilderComposite object.<br>\nIf <em>event_objects</em> is True, the parser will map each events to a specific string within the composite object.<br>\nThe string will start with 'E' and follow by an index.</p>\n<p><em>Example</em>:<br>\nEvents are defined in the YAML file in this order 'PLAY', 'PAUSE', 'STOP'.<br>\nThe composite object will have the properties:</p>\n<ul>\n<li>E0 that will map to 'PLAY'</li>\n<li>E1 that will map to 'PAUSE'</li>\n<li>E2 that will map to 'STOP'</li>\n</ul>\n<p><strong>FSMBuilderError</strong> will be raised in the following cases:</p>\n<ul>\n<li>if the YAML file is not with the correct version</li>\n<li>if the specific markers cannot be found in the file (see YAML file definition below)</li>\n</ul>\n<hr>\n<h3><strong>FSMBuilderComposite</strong></h3>\n<p>This composite object is created when parsing a YAML file.\nThe properties available after creation are:</p>\n<ul>\n<li>FSM: this is the FSM object</li>\n<li>events: this list contains all the events found in the YAML definition</li>\n<li>Exxx: mapping for the events in the list (optional)</li>\n</ul>\n<h2>Exceptions</h2>\n<h3><strong>FSMError</strong></h3>\n<p>This is the generic Exception raised when a problem occured in the FSM.</p>\n<h3><strong>FSMBuilderError</strong></h3>\n<p>This is the generic Exception raised when a problem occured while building FSM from YAML file.</p>\n<h2>YAML file definition</h2>\n<p>A set of mandatory markers should be defined in the file.</p>\n<h3><strong>Version</strong></h3>\n<p>This indicates the minimum version of the reader to decode this file.<br>\nFor now, only version <strong>0.1.0</strong> is supported.</p>\n<h3><strong>Events</strong></h3>\n<p>The list of events defined for this FSM</p>\n<h3><strong>States</strong></h3>\n<p>The list of states defined for this FSM.\nThe properties defined for a state are:</p>\n<ul>\n<li>name (MANDATORY): a unique name for this state</li>\n<li>type (OPTIONAL): the type of this state (BEGIN, NORMAL, END) or NORMAL by default</li>\n<li>enter (OPTIONAL): the action string when entering this state</li>\n<li>exit (OPTIONAL): the action string when leaving this state</li>\n</ul>\n<h3><strong>Transitions</strong></h3>\n<p>The list of transitions for this FSM.\nEach transition should have:</p>\n<ul>\n<li>event (MANDATORY): the name of the event as defined in Events</li>\n<li>begin (MANDATORY): the name of the begining state</li>\n<li>end (MANDATORY): the name of the ending state</li>\n</ul>\n<h3><strong>Example:</strong></h3>\n<pre><span class=\"c1\"># define the version</span>\n<span class=\"nt\">Version</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">0.1.0</span>\n\n<span class=\"c1\"># define some events</span>\n<span class=\"nt\">Events</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.PLAY</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.PAUSE</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.STOP</span>\n\n<span class=\"c1\"># define some states</span>\n<span class=\"nt\">States</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PLAY</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">BEGIN</span>\n    <span class=\"nt\">enter</span><span class=\"p\">:</span> <span class=\"s\">\"play\"</span>\n    <span class=\"nt\">exit</span><span class=\"p\">:</span> <span class=\"s\">\"\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PAUSE</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">NORMAL</span>\n    <span class=\"nt\">enter</span><span class=\"p\">:</span> <span class=\"s\">\"pause\"</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.STOP</span>\n    <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">END</span>\n    <span class=\"nt\">enter</span><span class=\"p\">:</span> <span class=\"s\">\"stop\"</span>\n\n<span class=\"c1\"># define some transitions</span>\n<span class=\"nt\">Transitions</span><span class=\"p\">:</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.PAUSE</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PLAY</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PAUSE</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.PAUSE</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PAUSE</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PAUSE</span>\n\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.PLAY</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PAUSE</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PLAY</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.PLAY</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PLAY</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PLAY</span>\n\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.STOP</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PLAY</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.STOP</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.STOP</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.PAUSE</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.STOP</span>\n  <span class=\"p p-Indicator\">-</span> <span class=\"nt\">event</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">E.STOP</span>\n    <span class=\"nt\">begin</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.STOP</span>\n    <span class=\"nt\">end</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">S.STOP</span>\n</pre>\n\n          </div>"}, "last_serial": 5543581, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "36bb4802fa1bb13747b3c60bf40c386b", "sha256": "331be35b4a5e8db7e8ee3c51a7057a0e2a4ceb6d12dadce1fa5fac92dc6d805c"}, "downloads": -1, "filename": "amtfsm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36bb4802fa1bb13747b3c60bf40c386b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11056, "upload_time": "2019-07-17T01:58:21", "upload_time_iso_8601": "2019-07-17T01:58:21.164922Z", "url": "https://files.pythonhosted.org/packages/7b/a9/72ab20bed0c6e9ce9030f9ff229a5557c3a93aa5130fda2fd5aa661b70c8/amtfsm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cbf7d4894a6736c4f4b67d8aac44f71", "sha256": "d4758e4a1f90c293389290bf55a38d4545ca3c4a3ceaf1525c178b0f06043a39"}, "downloads": -1, "filename": "amtfsm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0cbf7d4894a6736c4f4b67d8aac44f71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8204, "upload_time": "2019-07-17T01:58:23", "upload_time_iso_8601": "2019-07-17T01:58:23.192264Z", "url": "https://files.pythonhosted.org/packages/b6/cf/58acb08984bd66f39bae69590ff54d3c61a223d94bfa20cb0ec19f134086/amtfsm-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "36bb4802fa1bb13747b3c60bf40c386b", "sha256": "331be35b4a5e8db7e8ee3c51a7057a0e2a4ceb6d12dadce1fa5fac92dc6d805c"}, "downloads": -1, "filename": "amtfsm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "36bb4802fa1bb13747b3c60bf40c386b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11056, "upload_time": "2019-07-17T01:58:21", "upload_time_iso_8601": "2019-07-17T01:58:21.164922Z", "url": "https://files.pythonhosted.org/packages/7b/a9/72ab20bed0c6e9ce9030f9ff229a5557c3a93aa5130fda2fd5aa661b70c8/amtfsm-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0cbf7d4894a6736c4f4b67d8aac44f71", "sha256": "d4758e4a1f90c293389290bf55a38d4545ca3c4a3ceaf1525c178b0f06043a39"}, "downloads": -1, "filename": "amtfsm-0.1.0.tar.gz", "has_sig": false, "md5_digest": "0cbf7d4894a6736c4f4b67d8aac44f71", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8204, "upload_time": "2019-07-17T01:58:23", "upload_time_iso_8601": "2019-07-17T01:58:23.192264Z", "url": "https://files.pythonhosted.org/packages/b6/cf/58acb08984bd66f39bae69590ff54d3c61a223d94bfa20cb0ec19f134086/amtfsm-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:18 2020"}