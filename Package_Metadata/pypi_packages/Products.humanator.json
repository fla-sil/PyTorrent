{"info": {"author": "Daniel Greenfeld", "author_email": "pydanny@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 7 - Inactive", "Framework :: Plone", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\r\n============\r\nCAPTCHA has a number of disadvantages such as usability and possibly the false\r\nsense of security. As white papers documenting the easy cracking of CAPTCHA\r\nbecome more prevalent, the security issues have been growing in concern.\r\n\r\nHumanator relies on a different method of determining if the user is human or\r\nnot. Rather than rely on images (and audio), the humanator widget asks the user\r\nquestions such as::\r\n\r\n  What is six plus 9?\r\n\r\n  Type the word 'human' in all capital letters.\r\n\r\n  What is the best programming language of all time?\r\n\r\nThe user provides the correct answer and the form is then validated.\r\n\r\nThese questions are created by the content editor and are stored as a custom\r\ncontent object simply called HumanatorQuestions. The widget does a randomized\r\nportal catalog search against published HumanatorQuestions and serves that to\r\nthe user.\r\n\r\nProducts.humanator has no dependencies.\r\n\r\nBasic Usage - Creating Questions\r\n================================\r\n\r\nManaging questions is simple:\r\n\r\n 1. Install Humanator (see below).\r\n 2. Inside a Plone folder create a HumanatorFolder.\r\n 3. Inside a HumanatorFolder add a HumanatorQuestion (including an answer).\r\n 4. Publish the new HumanatorQuestion.\r\n\r\nBasic Usage - Adding to a form\r\n================================\r\n\r\nShould work following this pattern::\r\n\r\n  from zope.interface import Interface\r\n  from zope.schema import TextLine\r\n  from Products.humanator.form import Humanator\r\n  \r\n  class ITestForm(Interface):\r\n      \"\"\"\r\n      Test form\r\n      \"\"\"\r\n\r\n      name = TextLine(title=_(u'Name'),\r\n                    description=_(u'Your name'),\r\n                    required=True)\r\n\r\n      humanator = Humanator(title  = _('Answer the following question'),\r\n                      description = _('Humanity Check'))  \r\n\r\n----\r\n\r\nInstalling Humanator\r\n====================\r\n\r\nThis package requires Plone 3.x or later.\r\n\r\nInstalling without buildout\r\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nInstall this package in either your system path packages or in the lib/python\r\ndirectory of your Zope instance. You can do this using either easy_install or\r\nvia the setup.py script.\r\n\r\nAfter installing the package it needs to be registered in your Zope instance.\r\nThis can be done by putting a Products.humanator-configure.zcml file in the\r\netc/package-includes directory with this content::\r\n\r\n  <include package=\"Products.humanator\" />\r\n\r\nor, alternatively, you can add that line to the configure.zcml in a package or\r\nProduct that is already registered.\r\n\r\nInstalling with buildout\r\n~~~~~~~~~~~~~~~~~~~~~~~~\r\n\r\nIf you are using `buildout`_ to manage your instance installing\r\nProducts.humanator is even simpler. You can install Products.humanator by\r\nadding it to the eggs line for your instance::\r\n\r\n  [instance]\r\n  eggs = Products.humanator\r\n  zcml = Products.humanator\r\n\r\nThe last line tells buildout to generate a zcml snippet that tells Zope\r\nto configure Products.humanator.\r\n\r\nIf another package depends on the Products.humanator egg or includes its zcml\r\ndirectly you do not need to specify anything in the buildout configuration:\r\nbuildout will detect this automatically.\r\n\r\nAfter updating the configuration you need to run the ''bin/buildout'', which\r\nwill take care of updating your system.\r\n\r\n.. _buildout: http://pypi.python.org/pypi/zc.buildout", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pydanny/Products.humanator", "keywords": "plone", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "Products.humanator", "package_url": "https://pypi.org/project/Products.humanator/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Products.humanator/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/pydanny/Products.humanator"}, "release_url": "https://pypi.org/project/Products.humanator/0.6.2/", "requires_dist": null, "requires_python": null, "summary": "CAPTCHA alternative for Plone 3.x", "version": "0.6.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>CAPTCHA has a number of disadvantages such as usability and possibly the false\nsense of security. As white papers documenting the easy cracking of CAPTCHA\nbecome more prevalent, the security issues have been growing in concern.</p>\n<p>Humanator relies on a different method of determining if the user is human or\nnot. Rather than rely on images (and audio), the humanator widget asks the user\nquestions such as:</p>\n<pre>What is six plus 9?\n\nType the word 'human' in all capital letters.\n\nWhat is the best programming language of all time?\n</pre>\n<p>The user provides the correct answer and the form is then validated.</p>\n<p>These questions are created by the content editor and are stored as a custom\ncontent object simply called HumanatorQuestions. The widget does a randomized\nportal catalog search against published HumanatorQuestions and serves that to\nthe user.</p>\n<p>Products.humanator has no dependencies.</p>\n</div>\n<div id=\"basic-usage-creating-questions\">\n<h2>Basic Usage - Creating Questions</h2>\n<p>Managing questions is simple:</p>\n<blockquote>\n<ol>\n<li>Install Humanator (see below).</li>\n<li>Inside a Plone folder create a HumanatorFolder.</li>\n<li>Inside a HumanatorFolder add a HumanatorQuestion (including an answer).</li>\n<li>Publish the new HumanatorQuestion.</li>\n</ol>\n</blockquote>\n</div>\n<div id=\"basic-usage-adding-to-a-form\">\n<h2>Basic Usage - Adding to a form</h2>\n<p>Should work following this pattern:</p>\n<pre>from zope.interface import Interface\nfrom zope.schema import TextLine\nfrom Products.humanator.form import Humanator\n\nclass ITestForm(Interface):\n    \"\"\"\n    Test form\n    \"\"\"\n\n    name = TextLine(title=_(u'Name'),\n                  description=_(u'Your name'),\n                  required=True)\n\n    humanator = Humanator(title  = _('Answer the following question'),\n                    description = _('Humanity Check'))\n</pre>\n</div>\n<hr class=\"docutils\">\n<div id=\"installing-humanator\">\n<h2>Installing Humanator</h2>\n<p>This package requires Plone 3.x or later.</p>\n<div id=\"installing-without-buildout\">\n<h3>Installing without buildout</h3>\n<p>Install this package in either your system path packages or in the lib/python\ndirectory of your Zope instance. You can do this using either easy_install or\nvia the setup.py script.</p>\n<p>After installing the package it needs to be registered in your Zope instance.\nThis can be done by putting a Products.humanator-configure.zcml file in the\netc/package-includes directory with this content:</p>\n<pre>&lt;include package=\"Products.humanator\" /&gt;\n</pre>\n<p>or, alternatively, you can add that line to the configure.zcml in a package or\nProduct that is already registered.</p>\n</div>\n<div id=\"installing-with-buildout\">\n<h3>Installing with buildout</h3>\n<p>If you are using <a href=\"http://pypi.python.org/pypi/zc.buildout\" rel=\"nofollow\">buildout</a> to manage your instance installing\nProducts.humanator is even simpler. You can install Products.humanator by\nadding it to the eggs line for your instance:</p>\n<pre>[instance]\neggs = Products.humanator\nzcml = Products.humanator\n</pre>\n<p>The last line tells buildout to generate a zcml snippet that tells Zope\nto configure Products.humanator.</p>\n<p>If another package depends on the Products.humanator egg or includes its zcml\ndirectly you do not need to specify anything in the buildout configuration:\nbuildout will detect this automatically.</p>\n<p>After updating the configuration you need to run the \u2018\u2019bin/buildout\u2019\u2019, which\nwill take care of updating your system.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 768507, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "845574232ee7fcbe8ebd2a8348fb753b", "sha256": "e747d060b45a85c6e8beb0538ec7ca9cf3b807ef3653a4c6aad970203b3318ef"}, "downloads": -1, "filename": "Products.humanator-0.5.tar.gz", "has_sig": false, "md5_digest": "845574232ee7fcbe8ebd2a8348fb753b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9486, "upload_time": "2009-07-01T16:45:17", "upload_time_iso_8601": "2009-07-01T16:45:17.234813Z", "url": "https://files.pythonhosted.org/packages/d7/a3/30cfe17b45769f70f0587c85931f7d51fdc41c131bac47cc2c64385ce3e7/Products.humanator-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "34764eee813aa27937eb2bce7ff3e69b", "sha256": "0060b3c0657a9a685665325283a4968b07788c0e23935d163ab7603a28455242"}, "downloads": -1, "filename": "Products.humanator-0.6.tar.gz", "has_sig": false, "md5_digest": "34764eee813aa27937eb2bce7ff3e69b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15207, "upload_time": "2009-07-02T16:58:40", "upload_time_iso_8601": "2009-07-02T16:58:40.853736Z", "url": "https://files.pythonhosted.org/packages/86/6f/2d1ba56845a025576bc3712abc85e3198b1ad3ecd921bb6a298109b4cf0d/Products.humanator-0.6.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "73b2661b40c4c2e9b72a614346dd2b35", "sha256": "e1196ba351a62d56d4910e32f20f4c628c1a6babeb5092549b1fd1ff37891200"}, "downloads": -1, "filename": "Products.humanator-0.6.1.tar.gz", "has_sig": false, "md5_digest": "73b2661b40c4c2e9b72a614346dd2b35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18436, "upload_time": "2009-07-06T12:36:48", "upload_time_iso_8601": "2009-07-06T12:36:48.493031Z", "url": "https://files.pythonhosted.org/packages/78/82/74317e524baf7652da912c109c9a8323287c66ff3e495d053e7ec2718681/Products.humanator-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "c45844f73b9ef69921126b430f2343c8", "sha256": "cc9c46ef5cc9a62eaa35150732d09406f950a8b40707edfadb5fa88ec7e8693f"}, "downloads": -1, "filename": "Products.humanator-0.6.2.tar.gz", "has_sig": false, "md5_digest": "c45844f73b9ef69921126b430f2343c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18800, "upload_time": "2009-07-06T17:14:03", "upload_time_iso_8601": "2009-07-06T17:14:03.041821Z", "url": "https://files.pythonhosted.org/packages/f1/30/5d04877dcbf48207fcc9c7b73c3cdc2ec67af58ee010fb406064756b56fd/Products.humanator-0.6.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c45844f73b9ef69921126b430f2343c8", "sha256": "cc9c46ef5cc9a62eaa35150732d09406f950a8b40707edfadb5fa88ec7e8693f"}, "downloads": -1, "filename": "Products.humanator-0.6.2.tar.gz", "has_sig": false, "md5_digest": "c45844f73b9ef69921126b430f2343c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18800, "upload_time": "2009-07-06T17:14:03", "upload_time_iso_8601": "2009-07-06T17:14:03.041821Z", "url": "https://files.pythonhosted.org/packages/f1/30/5d04877dcbf48207fcc9c7b73c3cdc2ec67af58ee010fb406064756b56fd/Products.humanator-0.6.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:18:16 2020"}