{"info": {"author": "Avocado Co-op <dev@avocadoproject.ca>", "author_email": "dev@avocadoproject.ca", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "****************************\nChannels Slack Notificaitons\n****************************\n\n\n.. image:: https://img.shields.io/pypi/v/channels-slack-notifications.svg\n    :target: https://pypi.python.org/pypi/channels-slack-notifications\n\nIf you want to asyncronously send low priority messages to a\nSlack channel using `Django Channels <https://channels.readthedocs.io/en/latest/>`_\nthis is the 3rd party library for you.\n\nPartially inspired by django-slack https://github.com/lamby/django-slack. Adding support for channels and simplying the interface.\n\nRequirements\n############\n\n#. Django 1.8+\n#. channels\n#. requests\n\nQuick Start\n###########\n\nAdd to ``INSTALLED_APPS`` and set your slack token::\n\n    INSTALLED_APPS = (\n      # ...\n      'channels_slack_notifications',\n      # ...\n    )\n\n    CHANNELS_SLACK_TOKEN = 'yourtokenhere'\n\nYou can generate a tokens here: https://api.slack.com/web#authentication\n\nAdd to your ``routing.py``::\n\n    from channels.routing import include\n    from channels_slack_notifications.routing import slack_routing\n\n    channels_routing = [\n        include(slack_routing),\n    ]\n\n\nSend your first notification::\n\n    from channels import Channel\n\n    message = dict(\n        text = 'this is a test',\n    )\n    Channel('slack-notifications').send(message)\n\nThis uses a bunch of defaults which you can override per setting, or just in the message dict.\n\nYou can use this management command to test your settings::\n\n    python manage.py test_slack_notification\n\nSettings\n########\n\n``CHANNELS_SL\nACK_TOKEN``\n~~~~~~~~~~~~~~~~~~~~~~~~\n\nDefault: ``None``\n\nYour Slack authentication token.\n\nYou can generate a tokens here: https://api.slack.com/web#authentication\n\n``CHANNELS_SLACK_CHANNEL``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nDefault: ``#general``\n\nUse this setting to set a default channel of the room the message should appear\nin.\n\nYou can override on a per-message level by specifying ``channel`` in your message dict.\n\n``CHANNELS_SLACK_USERNAME``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDefault: ``bot``\n\nUse this setting to set a default name the message will appear be sent from.\n\nYou can override on a per-message level by specifying ``username`` in your message dict.\n\n``CHANNELS_SLACK_ICON_EMOJI``\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nDefault: ``:robot:``\n\nUse this setting to set a default icon emoji.\n\nYou can override on a per-message level by specifying ``icon_emoji`` in your message dict.\n\n``CHANNELS_SLACK_BACKEND``\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nDefault: ``'channels_slack_notifications.backends.console'``\n\nA string pointing to the eventual backend class that will actually send the\nmessage to the Slack API.\n\nUse ``'channels_slack_notifications.backends.default'`` in product which uses the requests library.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AvocadoCoop/channels-slack-notifications", "keywords": "django,channels,slack", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "channels-slack-notifications", "package_url": "https://pypi.org/project/channels-slack-notifications/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/channels-slack-notifications/", "project_urls": {"Homepage": "https://github.com/AvocadoCoop/channels-slack-notifications"}, "release_url": "https://pypi.org/project/channels-slack-notifications/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Send notification to slack using channels", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/channels-slack-notifications\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/channels-slack-notifications.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7c67fe214b805791e93f84b22c61ae391959046f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6368616e6e656c732d736c61636b2d6e6f74696669636174696f6e732e737667\"></a>\n<p>If you want to asyncronously send low priority messages to a\nSlack channel using <a href=\"https://channels.readthedocs.io/en/latest/\" rel=\"nofollow\">Django Channels</a>\nthis is the 3rd party library for you.</p>\n<p>Partially inspired by django-slack <a href=\"https://github.com/lamby/django-slack\" rel=\"nofollow\">https://github.com/lamby/django-slack</a>. Adding support for channels and simplying the interface.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ol>\n<li>Django 1.8+</li>\n<li>channels</li>\n<li>requests</li>\n</ol>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Add to <tt>INSTALLED_APPS</tt> and set your slack token:</p>\n<pre>INSTALLED_APPS = (\n  # ...\n  'channels_slack_notifications',\n  # ...\n)\n\nCHANNELS_SLACK_TOKEN = 'yourtokenhere'\n</pre>\n<p>You can generate a tokens here: <a href=\"https://api.slack.com/web#authentication\" rel=\"nofollow\">https://api.slack.com/web#authentication</a></p>\n<p>Add to your <tt>routing.py</tt>:</p>\n<pre>from channels.routing import include\nfrom channels_slack_notifications.routing import slack_routing\n\nchannels_routing = [\n    include(slack_routing),\n]\n</pre>\n<p>Send your first notification:</p>\n<pre>from channels import Channel\n\nmessage = dict(\n    text = 'this is a test',\n)\nChannel('slack-notifications').send(message)\n</pre>\n<p>This uses a bunch of defaults which you can override per setting, or just in the message dict.</p>\n<p>You can use this management command to test your settings:</p>\n<pre>python manage.py test_slack_notification\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p><tt>CHANNELS_SL\nACK_TOKEN</tt>\n~~~~~~~~~~~~~~~~~~~~~~~~</p>\n<p>Default: <tt>None</tt></p>\n<p>Your Slack authentication token.</p>\n<p>You can generate a tokens here: <a href=\"https://api.slack.com/web#authentication\" rel=\"nofollow\">https://api.slack.com/web#authentication</a></p>\n<div id=\"channels-slack-channel\">\n<h3><tt>CHANNELS_SLACK_CHANNEL</tt></h3>\n<p>Default: <tt>#general</tt></p>\n<p>Use this setting to set a default channel of the room the message should appear\nin.</p>\n<p>You can override on a per-message level by specifying <tt>channel</tt> in your message dict.</p>\n</div>\n<div id=\"channels-slack-username\">\n<h3><tt>CHANNELS_SLACK_USERNAME</tt></h3>\n<p>Default: <tt>bot</tt></p>\n<p>Use this setting to set a default name the message will appear be sent from.</p>\n<p>You can override on a per-message level by specifying <tt>username</tt> in your message dict.</p>\n</div>\n<div id=\"channels-slack-icon-emoji\">\n<h3><tt>CHANNELS_SLACK_ICON_EMOJI</tt></h3>\n<p>Default: <tt>:robot:</tt></p>\n<p>Use this setting to set a default icon emoji.</p>\n<p>You can override on a per-message level by specifying <tt>icon_emoji</tt> in your message dict.</p>\n</div>\n<div id=\"channels-slack-backend\">\n<h3><tt>CHANNELS_SLACK_BACKEND</tt></h3>\n<p>Default: <tt>'channels_slack_notifications.backends.console'</tt></p>\n<p>A string pointing to the eventual backend class that will actually send the\nmessage to the Slack API.</p>\n<p>Use <tt>'channels_slack_notifications.backends.default'</tt> in product which uses the requests library.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2342621, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4022bca7946df6bf2d70b9ac450fca67", "sha256": "bdcc3579d5f71e7eb6e5bd2885fc876aec55eff2fc85666b89cc6f2778524f48"}, "downloads": -1, "filename": "channels-slack-notifications-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4022bca7946df6bf2d70b9ac450fca67", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3373, "upload_time": "2016-08-17T02:24:58", "upload_time_iso_8601": "2016-08-17T02:24:58.508807Z", "url": "https://files.pythonhosted.org/packages/98/60/6b4a161dc689ce29b8dbb3d2d28c311fa0b49ed5821fb116910e56b3e66b/channels-slack-notifications-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2d83465b8e4b45febc037aa2a3759ef9", "sha256": "75b5afceef5adf6e59b5e4ab3626a8075440d6ff70c1b99a0fe340ff5c1ed063"}, "downloads": -1, "filename": "channels-slack-notifications-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2d83465b8e4b45febc037aa2a3759ef9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3499, "upload_time": "2016-09-14T16:34:56", "upload_time_iso_8601": "2016-09-14T16:34:56.068304Z", "url": "https://files.pythonhosted.org/packages/03/61/8e61b774803d1787d5feccef5f8ce536d8914feefb44ffa0f0eed855ac27/channels-slack-notifications-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d83465b8e4b45febc037aa2a3759ef9", "sha256": "75b5afceef5adf6e59b5e4ab3626a8075440d6ff70c1b99a0fe340ff5c1ed063"}, "downloads": -1, "filename": "channels-slack-notifications-0.0.2.tar.gz", "has_sig": false, "md5_digest": "2d83465b8e4b45febc037aa2a3759ef9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3499, "upload_time": "2016-09-14T16:34:56", "upload_time_iso_8601": "2016-09-14T16:34:56.068304Z", "url": "https://files.pythonhosted.org/packages/03/61/8e61b774803d1787d5feccef5f8ce536d8914feefb44ffa0f0eed855ac27/channels-slack-notifications-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:34:28 2020"}