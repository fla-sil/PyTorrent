{"info": {"author": "Conan C. Albrecht", "author_email": "conan@warp.byu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Topic :: Database", "Topic :: Internet :: Log Analysis", "Topic :: Office/Business :: Financial :: Spreadsheet", "Topic :: Scientific/Engineering", "Topic :: Text Processing"], "description": "Picalo\n                          \n                  Data Analysis Library\n                  \n                  http://www.picalo.org/\n\nPicalo is a Python library to help anyone who works with data files, \nespecially those who work with data in relational/spreadsheet format.  \nIt is primarily created for investigators and auditors search through \ndata sets for anomalies, trends, ond other information, but it is \ngenerally useful for any type of data or text files.\n\nPicalo is different from NumPy/Numarray in that it is meant for\nheterogeneous data rather than homogenous data.  In NumPy, you\nhave an array (table) of the same type--all ints, for example.\nIn Picalo, you have a table made up of different column types,\nvery similar to a database.\n\nOne of Picalo's primary purposes is making relational\ndatabases easier to work with.  Once you have a Picalo table, \nyou can add, move, or delete columns; work with records (horizontal\nslices of the data); select and group records in various ways;\nand run analyses on tables.  Picalo includes adapters for popular\ndatabases, and it provides a Query object that make queries seem\njust like regular Tables (except they are live from the database).\n\nIf you work with relational databases, delimited (CSV/TSV) files, \nEBCDIC files, MS Excel files, log files, text files, or other \nheterogeneous datasets, Picalo might make your life easier.\n\nPicalo is programmed to be as Pythonic as possible.  It's core objects--\ntables, columns, records--they act like lists.  A column is a list of cells.\nA record is a list of cells.  A table is a list of records.  Tables can be \nsorted via the sort function, just like the Sorting HowTo shows.  The return\nvalues of almost all functions are new tables, so functions can be chained\ntogether like pipes in Unix.\n\nPicalo includes an optional Project object that stores tables in\nZope Object DB files.  When Projects are used, Picalo automatically\nswaps records in and out of memory as needed to ensure efficient use of \nresources.  Projects allow Picalo to work with essentially an unlimited\namount of data.\n\nThe project was started in 2003 by Conan C. Albrecht, a professor\nin Information Systems at Brigham Young University.  Conan remains\nthe primary developer of Picalo.\n\nHere's an example of Picalo code loading a CSV and working with it:\n\n    # import the picalo libraries and turn off visual progress bars\n    import picalo, StringIO\n    picalo.use_progress_indicators(False)\n\n    # load the csv, could have been from a filename\n    csv = '''Name,Age\n    Homer,35\n    Marge,34\n    Lisa,8\n    Bart,10\n    '''\n    table = picalo.load_csv(StringIO.StringIO(csv))\n\n    table.set_type('Age', int)  # set the type of the Age column (csv defaults types to str)\n    table.view()                # prints a formatted table\n    print table[0].Age          # prints 35\n    print table[0]['Age']       # also prints 35\n    print table[0][1]           # again prints 35\n    print table[-1].Name        # prints Bart\n    table2 = table[0:2]         # get a slice of records\n    for name in table.column('Name'):\n      print name                # prints the names, one by one\n\n    # insert a column, which defaults cells to None\n    table.insert_column(1, 'DoubleAge', int)\n    # change cells using an expression\n    table.replace_column_values('DoubleAge', 'record.Age * 2')\n\n    # sort by Name, then Age\n    picalo.Simple.sort(table, True, 'Name', 'Age')\n    # sort in more Pythonic way (only by Name this time)\n    table.sort(key=lambda r: r.Name)\n\n    # print the std. dev. of the age column\n    print picalo.stdev(table.column('Age'))\n\n    # select records by regex, those containing 'a'\n    table2 = picalo.Simple.select_by_regex(table, Name='^.*a.*$')\n\n    # filter the existing table, then clear the filter\n    table.filter('record.Age > 20')\n    print len(table)            # prints 2\n    table.clear_filter()\n    print len(table)            # prints 4\n\n    # reorder the columns \n    table.reorder_columns(['Age', 'Name', 'DoubleAge'])\n\n    # add a live, calculated column\n    table.append_calculated('ReverseName', unicode, 'record.Name[::-1].capitalize()')\n    print table[0][3]           # prints 'Trab'\n    table[0].Name = 'Maggie'\n    print table[0][3]           # prints 'Eiggam'\n\n    # split into multiple tables by value\n    table.append_column('FavNum', int, [ 5, 5, 2, 2 ])\n    tablelist = picalo.Grouping.stratify_by_value(table, 'FavNum')\n    tablelist[0].view()         # view first table in list (has two records)\n    tablelist[1].view()         # view second table in list (has two records)\n    # any operations to a list of tables is made to all tabels in list\n    # this sets the type of the FavNum column in *both* tables\n    tablelist.set_type('FavNum', float)\n  \n\nPicalo is released in two formats:\n  1) As a pure-Python library that is used by issuing one of the\n     following:\n        from picalo import *\n        # or #\n        import picalo\n     Python programmers will be primarily interested in the library\n     version.\n     \n     This format is installed in the typical Python fashion, either\n     as an .egg via setuptools, or via \"python setup.py install\" from\n     the source.\n        \n  2) As a standalone, wx-Python-based GUI environment that allow\n     end users to access the Picalo libraries.\n     \n     This version is packaged as a Windows setup.exe file, Mac\n     application bundle, and Linux rpm and deb files.  The user\n     may not realize Python is even being used when running the\n     full application environment.\n\nPlease see the following:\n  - HOW TO RUN at the bottom of this file for running the source\n    distribution or compiling a new bundle.\n  \n  - CHANGELOG.TXT has good information about what's changed in recent\n    versions.\n\n  - LICENSE.TXT for the GNU Public License that Picalo is released under.\n    For those who don't want to read the license, here's the higlights:\n    \n      1. You may use Picalo free of charge.  I hope it is helpful to you.\n         Please improve the code and share back with the community.\n      \n      2. Picalo has NO warrantee.  I don't guarantee it will do anything\n         correctly or even incorrectly.  It may do unsightly things to your\n         machine.  It may munch your data or even corrupt your hard drive.\n         Picalo might fry your computer or ruin your marriage.  You take \n         all risks upon yourself.\n   \n      3. You must release any additions to Picalo under the GPL.\n         \n      4. Picalo source code cannot be included or used in any products that \n         are licensed with something other than the GPL.\n         \n      5. More information on these issues can be found in LICENSES.TXT\n    \n      \n  - doc/PicaloCookbook.pdf has some of the best information right now.\n        \n      \n  - doc/Manual.pdf for installation instructions (see the Installation section)\n  \n  \n  - doc/Manual.pdf for detailed usage instructions, tutorial, etc.\n  \nEnjoy!  Please report any bugs to me.  I also welcome additions to the toolkit.\n  \nDr. Conan C. Albrecht\nconan@warp.byu.edu\n\n\n=======================================\n     HOW TO RUN/COMPILE THE SOURCE\n=======================================\n\n###   TO INSTALL THE PICALO LIBRARY ONLY:\n\nIf you want to install the library version for use in your Python environment and \nyou have setuptools installed, you can simply use easy_install:\n\n  easy_install picalo\n  \nIf you don't have setuptools or want to install manually, expand the \npicalo-x.xx.tar.gz file and run the traditional Python setup.py file:\n\n  (first install ZODB from the Zope libraries)\n  (this assumes you downloaded picalo-5.12.tar.gz)\n  tar xvfz picalo-5.12.tar.gz\n  cd picalo-5.12\n  python setup.py install\n  \n\n\n###   TO BUILD THE FULL GUI APPLICATION:\n\nNote that this section is primarily for developers.  If you simply want to\ninstall and run Picalo, visit http://www.picalo.org/ and download a pre-built\nbundle for Windows, Mac, or Linux.\n\nPicalo has several dependencies that you'll need to ensure your Python \ninstallation has.  These include the following:\n\nNOTE: Don't install eggs on Windows because py2exe chokes on them.  When doing a \n      manual setup, use \"python setup.py install_lib\" to disable the egg building.\n      This only applies to people wanting to compile the Windows exe files.\nNOTE: To build on Mac, you need to be using the Framework version of Python.  This\n      is the version on python.org, not the one that comes with an Apple.  Be sure\n      to explicitly install Python and ensure it is being used.\n\nREQUIRED:\n  - Python 2.5+ (http://www.python.org) - It probably runs on version 2.4 and earlier, \n    but all testing is now being done on Python 2.5+. \n    We have not made the jump to Python 3 because some libraries aren't there yet\n    (especially wxPython).\n  - wxPython (http://www.wxpython.org) - We're on version 2.8.x.x right now.  \n    We try to keep current with wxPython, so try the most recent version of wxPython.  \n    If you hit GUI snags, email Conan and ask what version we're currently on. wxPython\n    often changes the API from one version to another, so you'll know right away if\n    it says some wx method doesn't exist.  Note that for the command-line version of\n    Picalo, wxPython is not required -- the code can run entirely without any dependencies\n    here.\n  - ZODB - Zope Object Database\n  - zc.blist - A tree-based list optimized for storage in ZODB.\n  - pyODBC (http://pyodbc.sourceforge.net/) - This allows you to access ODBC databases. \n    Picalo should be able to run without it, although the database GUI dialogs will fail.\n  - pysycopg2 - This allows you to access PostgreSQL directly.   \n    The Windows build is at Stickpeople.com.\n    Picalo should be able to run without it, although the database GUI dialogs will fail.\n  - pygresql - An alternative driver to access PostgreSQL directly.\n    Picalo should be able to run without it, although the database GUI dialogs will fail.\n  - MySQLdb - This allows you to access MySQL directly.\n    Picalo should be able to run without it, although the database GUI dialogs will fail.\n  - cx_Oracle - Allows you to connect to Oracle 10.\n    Picalo should be able to run without it, although the database GUI dialogs will fail.\n  - MX Base distribution - I'm not sure if this is still required or not.  Picalo itself\n    doesn't use it, but some of the dependencies above might.\n  - chardet.universaldetector (http://chardet.feedparser.org/) \n  - Windows Only: py2exe - if you want to compile Picalo on Windows\n  - Windows Only: InnoSetup - if you want to compile Picalo on Windows\n  - Mac OS X Only: py2app - if you want to compile Picalo on Mac OS X (installs easily \n    with easy_install).\n  \nOnce you are sure the above are running, change to the trunk/ directory.  Run the following:\n\npython Picalo.pyw\n\nAlternatively, to run the command line version, execute the following from within the\nPython interpreter:\n\n>>> from picalo import *", "description_content_type": null, "docs_url": "https://pythonhosted.org/picalo/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.picalo.org/", "keywords": "data log analysis spreadsheet database", "license": "Picalo itself is released under the GNU General Public License (GPL).\nIt is NOT public domain software.  It has some limitations on your\nuse of the product.  In short, here are the rules:\n\n * I give this software to the analysis and fraud detection community\n   in good faith that those using it will contribute modules and additions\n   back to me and other users.  This is enforced by the license.  But\n   beyond the legal issues, please support the community by developing\n   your routines in general ways that all can use.\n   \n * You can use Picalo free of charge (commercial or otherwise)\n \n * You can modify the source code as you wish for personal use.\n \n * If you release, sell, or otherwise distribute Picalo to others,\n   you MUST release the product and any changes you make to\n   the software under the GPL.  This means you must provide the source\n   code to whoever asks for it, including your changes.  You cannot\n   change the license, even on derivative works.\n   (This prevents companies or individuals from benefiting from this\n   product without allowing others to use their modifications.)\n\nAlthough I release the software for free under the GPL, I do make money\nusing the software in consulting.  I am also often willing to make \nadditions that companies or individuals need for consulting fees.\nFinally, I actively consult in training people on how to use Picalo.\nContact me if you wish to discuss these options.\n\nPicalo uses the following extra packages.  Picalo's license\nis compatible with all of the licenses of these products. Thanks\nto the host of individuals who worked many long hours to release these\nproducts.  Picalo is my contribution to the open source community.\n\n * Python (Core language, http://www.python.org/)\n * wxPython (Widget set, http://www.wxpython.org/)\n * pstat.py (Statistics library, Gary Strangman)\n * Nuvola icon set (David Vignoni, ICON KING - www.icon-king.com)\n * pyodbc (ODBC driver)\n * psycopg2 (PostgreSQL driver)\n * MySQLdb (MySQL driver)\n \n\n=======================================================================\n\n\n\t\t    GNU GENERAL PUBLIC LICENSE\n\t\t       Version 2, June 1991\n\n Copyright (C) 1989, 1991 Free Software Foundation, Inc.\n                       59 Temple Place, Suite 330, Boston, MA  02111-1307  USA\n Everyone is permitted to copy and distribute verbatim copies\n of this license document, but changing it is not allowed.\n\n\t\t\t    Preamble\n\n  The licenses for most software are designed to take away your\nfreedom to share and change it.  By contrast, the GNU General Public\nLicense is intended to guarantee your freedom to share and change free\nsoftware--to make sure the software is free for all its users.  This\nGeneral Public License applies to most of the Free Software\nFoundation's software and to any other program whose authors commit to\nusing it.  (Some other Free Software Foundation software is covered by\nthe GNU Library General Public License instead.)  You can apply it to\nyour programs, too.\n\n  When we speak of free software, we are referring to freedom, not\nprice.  Our General Public Licenses are designed to make sure that you\nhave the freedom to distribute copies of free software (and charge for\nthis service if you wish), that you receive source code or can get it\nif you want it, that you can change the software or use pieces of it\nin new free programs; and that you know you can do these things.\n\n  To protect your rights, we need to make restrictions that forbid\nanyone to deny you these rights or to ask you to surrender the rights.\nThese restrictions translate to certain responsibilities for you if you\ndistribute copies of the software, or if you modify it.\n\n  For example, if you distribute copies of such a program, whether\ngratis or for a fee, you must give the recipients all the rights that\nyou have.  You must make sure that they, too, receive or can get the\nsource code.  And you must show them these terms so they know their\nrights.\n\n  We protect your rights with two steps: (1) copyright the software, and\n(2) offer you this license which gives you legal permission to copy,\ndistribute and/or modify the software.\n\n  Also, for each author's protection and ours, we want to make certain\nthat everyone understands that there is no warranty for this free\nsoftware.  If the software is modified by someone else and passed on, we\nwant its recipients to know that what they have is not the original, so\nthat any problems introduced by others will not reflect on the original\nauthors' reputations.\n\n  Finally, any free program is threatened constantly by software\npatents.  We wish to avoid the danger that redistributors of a free\nprogram will individually obtain patent licenses, in effect making the\nprogram proprietary.  To prevent this, we have made it clear that any\npatent must be licensed for everyone's free use or not licensed at all.\n\n  The precise terms and conditions for copying, distribution and\nmodification follow.\n\f\n\t\t    GNU GENERAL PUBLIC LICENSE\n   TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION\n\n  0. This License applies to any program or other work which contains\na notice placed by the copyright holder saying it may be distributed\nunder the terms of this General Public License.  The \"Program\", below,\nrefers to any such program or work, and a \"work based on the Program\"\nmeans either the Program or any derivative work under copyright law:\nthat is to say, a work containing the Program or a portion of it,\neither verbatim or with modifications and/or translated into another\nlanguage.  (Hereinafter, translation is included without limitation in\nthe term \"modification\".)  Each licensee is addressed as \"you\".\n\nActivities other than copying, distribution and modification are not\ncovered by this License; they are outside its scope.  The act of\nrunning the Program is not restricted, and the output from the Program\nis covered only if its contents constitute a work based on the\nProgram (independent of having been made by running the Program).\nWhether that is true depends on what the Program does.\n\n  1. You may copy and distribute verbatim copies of the Program's\nsource code as you receive it, in any medium, provided that you\nconspicuously and appropriately publish on each copy an appropriate\ncopyright notice and disclaimer of warranty; keep intact all the\nnotices that refer to this License and to the absence of any warranty;\nand give any other recipients of the Program a copy of this License\nalong with the Program.\n\nYou may charge a fee for the physical act of transferring a copy, and\nyou may at your option offer warranty protection in exchange for a fee.\n\n  2. You may modify your copy or copies of the Program or any portion\nof it, thus forming a work based on the Program, and copy and\ndistribute such modifications or work under the terms of Section 1\nabove, provided that you also meet all of these conditions:\n\n    a) You must cause the modified files to carry prominent notices\n    stating that you changed the files and the date of any change.\n\n    b) You must cause any work that you distribute or publish, that in\n    whole or in part contains or is derived from the Program or any\n    part thereof, to be licensed as a whole at no charge to all third\n    parties under the terms of this License.\n\n    c) If the modified program normally reads commands interactively\n    when run, you must cause it, when started running for such\n    interactive use in the most ordinary way, to print or display an\n    announcement including an appropriate copyright notice and a\n    notice that there is no warranty (or else, saying that you provide\n    a warranty) and that users may redistribute the program under\n    these conditions, and telling the user how to view a copy of this\n    License.  (Exception: if the Program itself is interactive but\n    does not normally print such an announcement, your work based on\n    the Program is not required to print an announcement.)\n\f\nThese requirements apply to the modified work as a whole.  If\nidentifiable sections of that work are not derived from the Program,\nand can be reasonably considered independent and separate works in\nthemselves, then this License, and its terms, do not apply to those\nsections when you distribute them as separate works.  But when you\ndistribute the same sections as part of a whole which is a work based\non the Program, the distribution of the whole must be on the terms of\nthis License, whose permissions for other licensees extend to the\nentire whole, and thus to each and every part regardless of who wrote it.\n\nThus, it is not the intent of this section to claim rights or contest\nyour rights to work written entirely by you; rather, the intent is to\nexercise the right to control the distribution of derivative or\ncollective works based on the Program.\n\nIn addition, mere aggregation of another work not based on the Program\nwith the Program (or with a work based on the Program) on a volume of\na storage or distribution medium does not bring the other work under\nthe scope of this License.\n\n  3. You may copy and distribute the Program (or a work based on it,\nunder Section 2) in object code or executable form under the terms of\nSections 1 and 2 above provided that you also do one of the following:\n\n    a) Accompany it with the complete corresponding machine-readable\n    source code, which must be distributed under the terms of Sections\n    1 and 2 above on a medium customarily used for software interchange; or,\n\n    b) Accompany it with a written offer, valid for at least three\n    years, to give any third party, for a charge no more than your\n    cost of physically performing source distribution, a complete\n    machine-readable copy of the corresponding source code, to be\n    distributed under the terms of Sections 1 and 2 above on a medium\n    customarily used for software interchange; or,\n\n    c) Accompany it with the information you received as to the offer\n    to distribute corresponding source code.  (This alternative is\n    allowed only for noncommercial distribution and only if you\n    received the program in object code or executable form with such\n    an offer, in accord with Subsection b above.)\n\nThe source code for a work means the preferred form of the work for\nmaking modifications to it.  For an executable work, complete source\ncode means all the source code for all modules it contains, plus any\nassociated interface definition files, plus the scripts used to\ncontrol compilation and installation of the executable.  However, as a\nspecial exception, the source code distributed need not include\nanything that is normally distributed (in either source or binary\nform) with the major components (compiler, kernel, and so on) of the\noperating system on which the executable runs, unless that component\nitself accompanies the executable.\n\nIf distribution of executable or object code is made by offering\naccess to copy from a designated place, then offering equivalent\naccess to copy the source code from the same place counts as\ndistribution of the source code, even though third parties are not\ncompelled to copy the source along with the object code.\n\f\n  4. You may not copy, modify, sublicense, or distribute the Program\nexcept as expressly provided under this License.  Any attempt\notherwise to copy, modify, sublicense or distribute the Program is\nvoid, and will automatically terminate your rights under this License.\nHowever, parties who have received copies, or rights, from you under\nthis License will not have their licenses terminated so long as such\nparties remain in full compliance.\n\n  5. You are not required to accept this License, since you have not\nsigned it.  However, nothing else grants you permission to modify or\ndistribute the Program or its derivative works.  These actions are\nprohibited by law if you do not accept this License.  Therefore, by\nmodifying or distributing the Program (or any work based on the\nProgram), you indicate your acceptance of this License to do so, and\nall its terms and conditions for copying, distributing or modifying\nthe Program or works based on it.\n\n  6. Each time you redistribute the Program (or any work based on the\nProgram), the recipient automatically receives a license from the\noriginal licensor to copy, distribute or modify the Program subject to\nthese terms and conditions.  You may not impose any further\nrestrictions on the recipients' exercise of the rights granted herein.\nYou are not responsible for enforcing compliance by third parties to\nthis License.\n\n  7. If, as a consequence of a court judgment or allegation of patent\ninfringement or for any other reason (not limited to patent issues),\nconditions are imposed on you (whether by court order, agreement or\notherwise) that contradict the conditions of this License, they do not\nexcuse you from the conditions of this License.  If you cannot\ndistribute so as to satisfy simultaneously your obligations under this\nLicense and any other pertinent obligations, then as a consequence you\nmay not distribute the Program at all.  For example, if a patent\nlicense would not permit royalty-free redistribution of the Program by\nall those who receive copies directly or indirectly through you, then\nthe only way you could satisfy both it and this License would be to\nrefrain entirely from distribution of the Program.\n\nIf any portion of this section is held invalid or unenforceable under\nany particular circumstance, the balance of the section is intended to\napply and the section as a whole is intended to apply in other\ncircumstances.\n\nIt is not the purpose of this section to induce you to infringe any\npatents or other property right claims or to contest validity of any\nsuch claims; this section has the sole purpose of protecting the\nintegrity of the free software distribution system, which is\nimplemented by public license practices.  Many people have made\ngenerous contributions to the wide range of software distributed\nthrough that system in reliance on consistent application of that\nsystem; it is up to the author/donor to decide if he or she is willing\nto distribute software through any other system and a licensee cannot\nimpose that choice.\n\nThis section is intended to make thoroughly clear what is believed to\nbe a consequence of the rest of this License.\n\f\n  8. If the distribution and/or use of the Program is restricted in\ncertain countries either by patents or by copyrighted interfaces, the\noriginal copyright holder who places the Program under this License\nmay add an explicit geographical distribution limitation excluding\nthose countries, so that distribution is permitted only in or among\ncountries not thus excluded.  In such case, this License incorporates\nthe limitation as if written in the body of this License.\n\n  9. The Free Software Foundation may publish revised and/or new versions\nof the General Public License from time to time.  Such new versions will\nbe similar in spirit to the present version, but may differ in detail to\naddress new problems or concerns.\n\nEach version is given a distinguishing version number.  If the Program\nspecifies a version number of this License which applies to it and \"any\nlater version\", you have the option of following the terms and conditions\neither of that version or of any later version published by the Free\nSoftware Foundation.  If the Program does not specify a version number of\nthis License, you may choose any version ever published by the Free Software\nFoundation.\n\n  10. If you wish to incorporate parts of the Program into other free\nprograms whose distribution conditions are different, write to the author\nto ask for permission.  For software which is copyrighted by the Free\nSoftware Foundation, write to the Free Software Foundation; we sometimes\nmake exceptions for this.  Our decision will be guided by the two goals\nof preserving the free status of all derivatives of our free software and\nof promoting the sharing and reuse of software generally.\n\n\t\t\t    NO WARRANTY\n\n  11. BECAUSE THE PROGRAM IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY\nFOR THE PROGRAM, TO THE EXTENT PERMITTED BY APPLICABLE LAW.  EXCEPT WHEN\nOTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES\nPROVIDE THE PROGRAM \"AS IS\" WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED\nOR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF\nMERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.  THE ENTIRE RISK AS\nTO THE QUALITY AND PERFORMANCE OF THE PROGRAM IS WITH YOU.  SHOULD THE\nPROGRAM PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING,\nREPAIR OR CORRECTION.\n\n  12. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING\nWILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR\nREDISTRIBUTE THE PROGRAM AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES,\nINCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING\nOUT OF THE USE OR INABILITY TO USE THE PROGRAM (INCLUDING BUT NOT LIMITED\nTO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY\nYOU OR THIRD PARTIES OR A FAILURE OF THE PROGRAM TO OPERATE WITH ANY OTHER\nPROGRAMS), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE\nPOSSIBILITY OF SUCH DAMAGES.\n\n\t\t     END OF TERMS AND CONDITIONS", "maintainer": null, "maintainer_email": null, "name": "picalo", "package_url": "https://pypi.org/project/picalo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/picalo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.picalo.org/"}, "release_url": "https://pypi.org/project/picalo/4.94/", "requires_dist": null, "requires_python": null, "summary": "A data analysis/structure library with tables, type-aware columns, records, and cells.", "version": "4.94", "yanked": false, "html_description": "<div class=\"project-description\">\n            Picalo<br>                          <br>                  Data Analysis Library<br>                  <br>                  http://www.picalo.org/<br><br>Picalo is a Python library to help anyone who works with data files, <br>especially those who work with data in relational/spreadsheet format.  <br>It is primarily created for investigators and auditors search through <br>data sets for anomalies, trends, ond other information, but it is <br>generally useful for any type of data or text files.<br><br>Picalo is different from NumPy/Numarray in that it is meant for<br>heterogeneous data rather than homogenous data.  In NumPy, you<br>have an array (table) of the same type--all ints, for example.<br>In Picalo, you have a table made up of different column types,<br>very similar to a database.<br><br>One of Picalo's primary purposes is making relational<br>databases easier to work with.  Once you have a Picalo table, <br>you can add, move, or delete columns; work with records (horizontal<br>slices of the data); select and group records in various ways;<br>and run analyses on tables.  Picalo includes adapters for popular<br>databases, and it provides a Query object that make queries seem<br>just like regular Tables (except they are live from the database).<br><br>If you work with relational databases, delimited (CSV/TSV) files, <br>EBCDIC files, MS Excel files, log files, text files, or other <br>heterogeneous datasets, Picalo might make your life easier.<br><br>Picalo is programmed to be as Pythonic as possible.  It's core objects--<br>tables, columns, records--they act like lists.  A column is a list of cells.<br>A record is a list of cells.  A table is a list of records.  Tables can be <br>sorted via the sort function, just like the Sorting HowTo shows.  The return<br>values of almost all functions are new tables, so functions can be chained<br>together like pipes in Unix.<br><br>Picalo includes an optional Project object that stores tables in<br>Zope Object DB files.  When Projects are used, Picalo automatically<br>swaps records in and out of memory as needed to ensure efficient use of <br>resources.  Projects allow Picalo to work with essentially an unlimited<br>amount of data.<br><br>The project was started in 2003 by Conan C. Albrecht, a professor<br>in Information Systems at Brigham Young University.  Conan remains<br>the primary developer of Picalo.<br><br>Here's an example of Picalo code loading a CSV and working with it:<br><br>    # import the picalo libraries and turn off visual progress bars<br>    import picalo, StringIO<br>    picalo.use_progress_indicators(False)<br><br>    # load the csv, could have been from a filename<br>    csv = '''Name,Age<br>    Homer,35<br>    Marge,34<br>    Lisa,8<br>    Bart,10<br>    '''<br>    table = picalo.load_csv(StringIO.StringIO(csv))<br><br>    table.set_type('Age', int)  # set the type of the Age column (csv defaults types to str)<br>    table.view()                # prints a formatted table<br>    print table[0].Age          # prints 35<br>    print table[0]['Age']       # also prints 35<br>    print table[0][1]           # again prints 35<br>    print table[-1].Name        # prints Bart<br>    table2 = table[0:2]         # get a slice of records<br>    for name in table.column('Name'):<br>      print name                # prints the names, one by one<br><br>    # insert a column, which defaults cells to None<br>    table.insert_column(1, 'DoubleAge', int)<br>    # change cells using an expression<br>    table.replace_column_values('DoubleAge', 'record.Age * 2')<br><br>    # sort by Name, then Age<br>    picalo.Simple.sort(table, True, 'Name', 'Age')<br>    # sort in more Pythonic way (only by Name this time)<br>    table.sort(key=lambda r: r.Name)<br><br>    # print the std. dev. of the age column<br>    print picalo.stdev(table.column('Age'))<br><br>    # select records by regex, those containing 'a'<br>    table2 = picalo.Simple.select_by_regex(table, Name='^.*a.*$')<br><br>    # filter the existing table, then clear the filter<br>    table.filter('record.Age &gt; 20')<br>    print len(table)            # prints 2<br>    table.clear_filter()<br>    print len(table)            # prints 4<br><br>    # reorder the columns <br>    table.reorder_columns(['Age', 'Name', 'DoubleAge'])<br><br>    # add a live, calculated column<br>    table.append_calculated('ReverseName', unicode, 'record.Name[::-1].capitalize()')<br>    print table[0][3]           # prints 'Trab'<br>    table[0].Name = 'Maggie'<br>    print table[0][3]           # prints 'Eiggam'<br><br>    # split into multiple tables by value<br>    table.append_column('FavNum', int, [ 5, 5, 2, 2 ])<br>    tablelist = picalo.Grouping.stratify_by_value(table, 'FavNum')<br>    tablelist[0].view()         # view first table in list (has two records)<br>    tablelist[1].view()         # view second table in list (has two records)<br>    # any operations to a list of tables is made to all tabels in list<br>    # this sets the type of the FavNum column in *both* tables<br>    tablelist.set_type('FavNum', float)<br>  <br><br>Picalo is released in two formats:<br>  1) As a pure-Python library that is used by issuing one of the<br>     following:<br>        from picalo import *<br>        # or #<br>        import picalo<br>     Python programmers will be primarily interested in the library<br>     version.<br>     <br>     This format is installed in the typical Python fashion, either<br>     as an .egg via setuptools, or via \"python setup.py install\" from<br>     the source.<br>        <br>  2) As a standalone, wx-Python-based GUI environment that allow<br>     end users to access the Picalo libraries.<br>     <br>     This version is packaged as a Windows setup.exe file, Mac<br>     application bundle, and Linux rpm and deb files.  The user<br>     may not realize Python is even being used when running the<br>     full application environment.<br><br>Please see the following:<br>  - HOW TO RUN at the bottom of this file for running the source<br>    distribution or compiling a new bundle.<br>  <br>  - CHANGELOG.TXT has good information about what's changed in recent<br>    versions.<br><br>  - LICENSE.TXT for the GNU Public License that Picalo is released under.<br>    For those who don't want to read the license, here's the higlights:<br>    <br>      1. You may use Picalo free of charge.  I hope it is helpful to you.<br>         Please improve the code and share back with the community.<br>      <br>      2. Picalo has NO warrantee.  I don't guarantee it will do anything<br>         correctly or even incorrectly.  It may do unsightly things to your<br>         machine.  It may munch your data or even corrupt your hard drive.<br>         Picalo might fry your computer or ruin your marriage.  You take <br>         all risks upon yourself.<br>   <br>      3. You must release any additions to Picalo under the GPL.<br>         <br>      4. Picalo source code cannot be included or used in any products that <br>         are licensed with something other than the GPL.<br>         <br>      5. More information on these issues can be found in LICENSES.TXT<br>    <br>      <br>  - doc/PicaloCookbook.pdf has some of the best information right now.<br>        <br>      <br>  - doc/Manual.pdf for installation instructions (see the Installation section)<br>  <br>  <br>  - doc/Manual.pdf for detailed usage instructions, tutorial, etc.<br>  <br>Enjoy!  Please report any bugs to me.  I also welcome additions to the toolkit.<br>  <br>Dr. Conan C. Albrecht<br>conan@warp.byu.edu<br><br><br>=======================================<br>     HOW TO RUN/COMPILE THE SOURCE<br>=======================================<br><br>###   TO INSTALL THE PICALO LIBRARY ONLY:<br><br>If you want to install the library version for use in your Python environment and <br>you have setuptools installed, you can simply use easy_install:<br><br>  easy_install picalo<br>  <br>If you don't have setuptools or want to install manually, expand the <br>picalo-x.xx.tar.gz file and run the traditional Python setup.py file:<br><br>  (first install ZODB from the Zope libraries)<br>  (this assumes you downloaded picalo-5.12.tar.gz)<br>  tar xvfz picalo-5.12.tar.gz<br>  cd picalo-5.12<br>  python setup.py install<br>  <br><br><br>###   TO BUILD THE FULL GUI APPLICATION:<br><br>Note that this section is primarily for developers.  If you simply want to<br>install and run Picalo, visit http://www.picalo.org/ and download a pre-built<br>bundle for Windows, Mac, or Linux.<br><br>Picalo has several dependencies that you'll need to ensure your Python <br>installation has.  These include the following:<br><br>NOTE: Don't install eggs on Windows because py2exe chokes on them.  When doing a <br>      manual setup, use \"python setup.py install_lib\" to disable the egg building.<br>      This only applies to people wanting to compile the Windows exe files.<br>NOTE: To build on Mac, you need to be using the Framework version of Python.  This<br>      is the version on python.org, not the one that comes with an Apple.  Be sure<br>      to explicitly install Python and ensure it is being used.<br><br>REQUIRED:<br>  - Python 2.5+ (http://www.python.org) - It probably runs on version 2.4 and earlier, <br>    but all testing is now being done on Python 2.5+. <br>    We have not made the jump to Python 3 because some libraries aren't there yet<br>    (especially wxPython).<br>  - wxPython (http://www.wxpython.org) - We're on version 2.8.x.x right now.  <br>    We try to keep current with wxPython, so try the most recent version of wxPython.  <br>    If you hit GUI snags, email Conan and ask what version we're currently on. wxPython<br>    often changes the API from one version to another, so you'll know right away if<br>    it says some wx method doesn't exist.  Note that for the command-line version of<br>    Picalo, wxPython is not required -- the code can run entirely without any dependencies<br>    here.<br>  - ZODB - Zope Object Database<br>  - zc.blist - A tree-based list optimized for storage in ZODB.<br>  - pyODBC (http://pyodbc.sourceforge.net/) - This allows you to access ODBC databases. <br>    Picalo should be able to run without it, although the database GUI dialogs will fail.<br>  - pysycopg2 - This allows you to access PostgreSQL directly.   <br>    The Windows build is at Stickpeople.com.<br>    Picalo should be able to run without it, although the database GUI dialogs will fail.<br>  - pygresql - An alternative driver to access PostgreSQL directly.<br>    Picalo should be able to run without it, although the database GUI dialogs will fail.<br>  - MySQLdb - This allows you to access MySQL directly.<br>    Picalo should be able to run without it, although the database GUI dialogs will fail.<br>  - cx_Oracle - Allows you to connect to Oracle 10.<br>    Picalo should be able to run without it, although the database GUI dialogs will fail.<br>  - MX Base distribution - I'm not sure if this is still required or not.  Picalo itself<br>    doesn't use it, but some of the dependencies above might.<br>  - chardet.universaldetector (http://chardet.feedparser.org/) <br>  - Windows Only: py2exe - if you want to compile Picalo on Windows<br>  - Windows Only: InnoSetup - if you want to compile Picalo on Windows<br>  - Mac OS X Only: py2app - if you want to compile Picalo on Mac OS X (installs easily <br>    with easy_install).<br>  <br>Once you are sure the above are running, change to the trunk/ directory.  Run the following:<br><br>python Picalo.pyw<br><br>Alternatively, to run the command line version, execute the following from within the<br>Python interpreter:<br><br>&gt;&gt;&gt; from picalo import *\n          </div>"}, "last_serial": 796225, "releases": {"4.91": [{"comment_text": "", "digests": {"md5": "48dd66004030a523f3c496b905d7dca9", "sha256": "1034241ea849b4d11fda744313a011171783f94e4e9034186e3d2e5f3972b75e"}, "downloads": -1, "filename": "picalo-4.91-py2.6.egg", "has_sig": false, "md5_digest": "48dd66004030a523f3c496b905d7dca9", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 640329, "upload_time": "2011-02-17T01:57:40", "upload_time_iso_8601": "2011-02-17T01:57:40.110698Z", "url": "https://files.pythonhosted.org/packages/34/9b/d2642ef9e7b3be7e109388195035f85ced747796aa7d847e40ce60a13d9c/picalo-4.91-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "b0dbce29bad46c8e9c79aa239daa280b", "sha256": "24c7455e7d241ae2b6184e947c3ce5452f67924ea22e76198d9bbc77bac0f362"}, "downloads": -1, "filename": "picalo-4.91.tar.gz", "has_sig": false, "md5_digest": "b0dbce29bad46c8e9c79aa239daa280b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 304161, "upload_time": "2011-02-17T01:57:32", "upload_time_iso_8601": "2011-02-17T01:57:32.071873Z", "url": "https://files.pythonhosted.org/packages/25/ce/ab53524661e0820a793071de72c46cbef1da53f8e83ce283000afa2a125f/picalo-4.91.tar.gz", "yanked": false}], "4.92": [{"comment_text": "", "digests": {"md5": "bad551ef12a09cb567f5654ee151552c", "sha256": "c88813bd4f5bf8c48d6d8ac15509ace79f4655930d3d67f68f055c7c186fff57"}, "downloads": -1, "filename": "picalo-4.92-py2.6.egg", "has_sig": false, "md5_digest": "bad551ef12a09cb567f5654ee151552c", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 619787, "upload_time": "2011-02-17T19:46:57", "upload_time_iso_8601": "2011-02-17T19:46:57.848539Z", "url": "https://files.pythonhosted.org/packages/01/ad/a545cdd93e0b0c56bf00d3b451170b9138ba98e76f338b02879bbbb68333/picalo-4.92-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f694df0155289148aa7efb73851d9359", "sha256": "79bb2c31d42f70393842a992d87cbb8caacfcae73f01df6dd9bc508151614ab0"}, "downloads": -1, "filename": "picalo-4.92.tar.gz", "has_sig": false, "md5_digest": "f694df0155289148aa7efb73851d9359", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 297263, "upload_time": "2011-02-17T19:46:55", "upload_time_iso_8601": "2011-02-17T19:46:55.925787Z", "url": "https://files.pythonhosted.org/packages/29/d5/eccbec6e29d69490f415761d024963160f652fc4e5da0979a79fc7bb4843/picalo-4.92.tar.gz", "yanked": false}], "4.93": [{"comment_text": "", "digests": {"md5": "c8ff9ac758c5ececa548bdab70878650", "sha256": "502ea9cdbe080787d101572ec9d807f3077cd87abf86d12f216d72f66f70c138"}, "downloads": -1, "filename": "picalo-4.93-py2.6.egg", "has_sig": false, "md5_digest": "c8ff9ac758c5ececa548bdab70878650", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 610654, "upload_time": "2011-03-16T18:44:26", "upload_time_iso_8601": "2011-03-16T18:44:26.677194Z", "url": "https://files.pythonhosted.org/packages/e4/d9/8037b0878ff75ad08dd16ce1ec5d37c1294a0dae9d4fc8c8464ad23c55b0/picalo-4.93-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f256352fd2abef7b6f05bcb07655d154", "sha256": "8073ff14a129be4e75d11f2da647bd53ca6c928fc4722d9da189db64cd5027d5"}, "downloads": -1, "filename": "picalo-4.93.tar.gz", "has_sig": false, "md5_digest": "f256352fd2abef7b6f05bcb07655d154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 298064, "upload_time": "2011-03-16T18:44:18", "upload_time_iso_8601": "2011-03-16T18:44:18.287782Z", "url": "https://files.pythonhosted.org/packages/8a/e3/c8c5d081bdb46d413896f9cd73b0108ad9ab7c407118449c54d32d874245/picalo-4.93.tar.gz", "yanked": false}], "4.94": [{"comment_text": "", "digests": {"md5": "2e6661d37dd7dad620b31a6cf3390194", "sha256": "bba00e2fe4feb8f76589c3a23c37832c2e73b89b219e6cd62832cc2958976b28"}, "downloads": -1, "filename": "picalo-4.94-py2.6.egg", "has_sig": false, "md5_digest": "2e6661d37dd7dad620b31a6cf3390194", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 610661, "upload_time": "2011-03-16T18:54:12", "upload_time_iso_8601": "2011-03-16T18:54:12.320855Z", "url": "https://files.pythonhosted.org/packages/b2/89/19c7472767bc2a4ee9cf2760b1a195370881c0af598de8667f3a37140d74/picalo-4.94-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2187c4a0913346245dcdd85c5ece08dc", "sha256": "f2d3dd25765abb61da7a2f605751c7dd99f30a2399448a363e12a6739041a071"}, "downloads": -1, "filename": "picalo-4.94.tar.gz", "has_sig": false, "md5_digest": "2187c4a0913346245dcdd85c5ece08dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 298169, "upload_time": "2011-03-16T18:54:03", "upload_time_iso_8601": "2011-03-16T18:54:03.094026Z", "url": "https://files.pythonhosted.org/packages/14/82/5d2b62d0da50ac33ad92189d22423c6cfaa3783f91adbe35790449f2b007/picalo-4.94.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e6661d37dd7dad620b31a6cf3390194", "sha256": "bba00e2fe4feb8f76589c3a23c37832c2e73b89b219e6cd62832cc2958976b28"}, "downloads": -1, "filename": "picalo-4.94-py2.6.egg", "has_sig": false, "md5_digest": "2e6661d37dd7dad620b31a6cf3390194", "packagetype": "bdist_egg", "python_version": "2.6", "requires_python": null, "size": 610661, "upload_time": "2011-03-16T18:54:12", "upload_time_iso_8601": "2011-03-16T18:54:12.320855Z", "url": "https://files.pythonhosted.org/packages/b2/89/19c7472767bc2a4ee9cf2760b1a195370881c0af598de8667f3a37140d74/picalo-4.94-py2.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2187c4a0913346245dcdd85c5ece08dc", "sha256": "f2d3dd25765abb61da7a2f605751c7dd99f30a2399448a363e12a6739041a071"}, "downloads": -1, "filename": "picalo-4.94.tar.gz", "has_sig": false, "md5_digest": "2187c4a0913346245dcdd85c5ece08dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 298169, "upload_time": "2011-03-16T18:54:03", "upload_time_iso_8601": "2011-03-16T18:54:03.094026Z", "url": "https://files.pythonhosted.org/packages/14/82/5d2b62d0da50ac33ad92189d22423c6cfaa3783f91adbe35790449f2b007/picalo-4.94.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:07 2020"}