{"info": {"author": "Eugeniy Kalinin", "author_email": "burump@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Plugins", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: Software Development :: Testing"], "description": "pytest-tornado\n==============\n\n.. image:: https://travis-ci.org/vidartf/pytest-tornado.svg?branch=master\n    :target: https://travis-ci.org/vidartf/pytest-tornado\n\nA py.test_ plugin providing fixtures and markers to simplify testing\nof asynchronous tornado applications.\n\nInstallation\n------------\n\n::\n\n    pip install pytest-tornado\n\n\nExample\n-------\n\n.. code-block:: python\n\n    import pytest\n    import tornado.web\n\n    class MainHandler(tornado.web.RequestHandler):\n        def get(self):\n            self.write(\"Hello, world\")\n\n    application = tornado.web.Application([\n        (r\"/\", MainHandler),\n    ])\n\n    @pytest.fixture\n    def app():\n        return application\n\n    @pytest.mark.gen_test\n    def test_hello_world(http_client, base_url):\n        response = yield http_client.fetch(base_url)\n        assert response.code == 200\n\n\nRunning tests\n-------------\n\n::\n\n    py.test\n\n\nFixtures\n--------\n\nio_loop\n    creates an instance of the `tornado.ioloop.IOLoop`_ for each test case\n\nhttp_port\n    get a port used by the test server\n\nbase_url\n    get an absolute base url for the test server,\n    for example, ``http://localhost:59828``\n\nhttp_server\n    start a tornado HTTP server, you must create an ``app`` fixture,\n    which returns the `tornado.web.Application`_ to be tested\n\nhttp_client\n    get an asynchronous HTTP client\n\n\nShow fixtures provided by the plugin::\n\n    py.test --fixtures\n\n\nMarkers\n-------\n\nA ``gen_test`` marker lets you write a coroutine-style tests used with the\n`tornado.gen`_ module:\n\n.. code-block:: python\n\n    @pytest.mark.gen_test\n    def test_tornado(http_client):\n        response = yield http_client.fetch('http://www.tornadoweb.org/')\n        assert response.code == 200\n\n\nMarked tests will time out after 5 seconds. The timeout can be modified by\nsetting an ``ASYNC_TEST_TIMEOUT`` environment variable,\n``--async-test-timeout`` command line argument or a marker argument.\n\n.. code-block:: python\n\n    @pytest.mark.gen_test(timeout=5)\n    def test_tornado(http_client):\n        yield http_client.fetch('http://www.tornadoweb.org/')\n\nThe mark can also receive a run_sync flag, which if turned off will, instead of running the test synchronously, will add it as a coroutine and run the IOLoop (until the timeout). For instance, this allows to test things on both a client and a server at the same time. \n\n.. code-block:: python\n\n    @pytest.mark.gen_test(run_sync=False)\n    def test_tornado(http_server, http_client):\n        response = yield http_client.fetch('http://localhost:5555/my_local_server_test/')\n        assert response.body == 'Run on the same IOLoop!'\n\n\nShow markers provided by the plugin::\n\n    py.test --markers\n\n\n.. _py.test: http://pytest.org/\n.. _`tornado.ioloop.IOLoop`: http://tornado.readthedocs.org/en/latest/ioloop.html#ioloop-objects\n.. _`tornado.web.Application`: http://tornado.readthedocs.org/en/latest/web.html#application-configuration\n.. _`tornado.gen`: http://tornado.readthedocs.org/en/latest/gen.html\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vidartf/pytest-tornado", "keywords": "pytest py.test tornado async asynchronous testing unit tests plugin", "license": "Apache License, Version 2.0", "maintainer": "Vidar Tonaas Fauske", "maintainer_email": "vidartf@gmail.com", "name": "pytest-tornado5", "package_url": "https://pypi.org/project/pytest-tornado5/", "platform": "", "project_url": "https://pypi.org/project/pytest-tornado5/", "project_urls": {"Homepage": "https://github.com/vidartf/pytest-tornado"}, "release_url": "https://pypi.org/project/pytest-tornado5/2.0.0/", "requires_dist": ["pytest (>=3.6)", "tornado (>=5)"], "requires_python": "", "summary": "A py.test plugin providing fixtures and markers to simplify testing of asynchronous tornado applications.", "version": "2.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/vidartf/pytest-tornado\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/vidartf/pytest-tornado.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d60e2a09590385d0c9dc53407c1f85fcb71c3eb/68747470733a2f2f7472617669732d63692e6f72672f766964617274662f7079746573742d746f726e61646f2e7376673f6272616e63683d6d6173746572\"></a>\n<p>A <a href=\"http://pytest.org/\" rel=\"nofollow\">py.test</a> plugin providing fixtures and markers to simplify testing\nof asynchronous tornado applications.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pytest-tornado\n</pre>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">pytest</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tornado.web</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MainHandler</span><span class=\"p\">(</span><span class=\"n\">tornado</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s2\">\"Hello, world\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">tornado</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">([</span>\n    <span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">MainHandler</span><span class=\"p\">),</span>\n<span class=\"p\">])</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">fixture</span>\n<span class=\"k\">def</span> <span class=\"nf\">app</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">application</span>\n\n<span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">gen_test</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_hello_world</span><span class=\"p\">(</span><span class=\"n\">http_client</span><span class=\"p\">,</span> <span class=\"n\">base_url</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">http_client</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">base_url</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n</div>\n<div id=\"running-tests\">\n<h2>Running tests</h2>\n<pre>py.test\n</pre>\n</div>\n<div id=\"fixtures\">\n<h2>Fixtures</h2>\n<dl>\n<dt>io_loop</dt>\n<dd>creates an instance of the <a href=\"http://tornado.readthedocs.org/en/latest/ioloop.html#ioloop-objects\" rel=\"nofollow\">tornado.ioloop.IOLoop</a> for each test case</dd>\n<dt>http_port</dt>\n<dd>get a port used by the test server</dd>\n<dt>base_url</dt>\n<dd>get an absolute base url for the test server,\nfor example, <tt><span class=\"pre\">http://localhost:59828</span></tt></dd>\n<dt>http_server</dt>\n<dd>start a tornado HTTP server, you must create an <tt>app</tt> fixture,\nwhich returns the <a href=\"http://tornado.readthedocs.org/en/latest/web.html#application-configuration\" rel=\"nofollow\">tornado.web.Application</a> to be tested</dd>\n<dt>http_client</dt>\n<dd>get an asynchronous HTTP client</dd>\n</dl>\n<p>Show fixtures provided by the plugin:</p>\n<pre>py.test --fixtures\n</pre>\n</div>\n<div id=\"markers\">\n<h2>Markers</h2>\n<p>A <tt>gen_test</tt> marker lets you write a coroutine-style tests used with the\n<a href=\"http://tornado.readthedocs.org/en/latest/gen.html\" rel=\"nofollow\">tornado.gen</a> module:</p>\n<pre><span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">gen_test</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_tornado</span><span class=\"p\">(</span><span class=\"n\">http_client</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">http_client</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'http://www.tornadoweb.org/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">code</span> <span class=\"o\">==</span> <span class=\"mi\">200</span>\n</pre>\n<p>Marked tests will time out after 5 seconds. The timeout can be modified by\nsetting an <tt>ASYNC_TEST_TIMEOUT</tt> environment variable,\n<tt><span class=\"pre\">--async-test-timeout</span></tt> command line argument or a marker argument.</p>\n<pre><span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">gen_test</span><span class=\"p\">(</span><span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_tornado</span><span class=\"p\">(</span><span class=\"n\">http_client</span><span class=\"p\">):</span>\n    <span class=\"k\">yield</span> <span class=\"n\">http_client</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'http://www.tornadoweb.org/'</span><span class=\"p\">)</span>\n</pre>\n<p>The mark can also receive a run_sync flag, which if turned off will, instead of running the test synchronously, will add it as a coroutine and run the IOLoop (until the timeout). For instance, this allows to test things on both a client and a server at the same time.</p>\n<pre><span class=\"nd\">@pytest</span><span class=\"o\">.</span><span class=\"n\">mark</span><span class=\"o\">.</span><span class=\"n\">gen_test</span><span class=\"p\">(</span><span class=\"n\">run_sync</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">test_tornado</span><span class=\"p\">(</span><span class=\"n\">http_server</span><span class=\"p\">,</span> <span class=\"n\">http_client</span><span class=\"p\">):</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">http_client</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"s1\">'http://localhost:5555/my_local_server_test/'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">body</span> <span class=\"o\">==</span> <span class=\"s1\">'Run on the same IOLoop!'</span>\n</pre>\n<p>Show markers provided by the plugin:</p>\n<pre>py.test --markers\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4494162, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "385795c78278f9dee98373ce35936412", "sha256": "77a6fbd3f208f79eb262db7c1ceac2140bb7af1d6f39b4cabf978a9767928125"}, "downloads": -1, "filename": "pytest_tornado5-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "385795c78278f9dee98373ce35936412", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10544, "upload_time": "2018-03-14T12:56:04", "upload_time_iso_8601": "2018-03-14T12:56:04.584842Z", "url": "https://files.pythonhosted.org/packages/c8/94/63449c082e8f91f843dd55c535a530a7a9d8a96e3ef1574049ce948e42b1/pytest_tornado5-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4de0a1d442cca30459f54c429f41b31", "sha256": "1deadb5e27d2d44d112e0eb5d969ac9c079c75232062db57072372a3f5f366af"}, "downloads": -1, "filename": "pytest-tornado5-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b4de0a1d442cca30459f54c429f41b31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10063, "upload_time": "2018-03-14T12:56:06", "upload_time_iso_8601": "2018-03-14T12:56:06.238234Z", "url": "https://files.pythonhosted.org/packages/69/ac/30047af66de0711a7686a56c29385df8bd180894f1d1383d065c3fbaebe9/pytest-tornado5-1.0.0.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "988caac954f818044bd1c63f6b30266e", "sha256": "a61164e1f34603be446c17f778b1e6d53e3153c0e68f47e632fe6184357c2f45"}, "downloads": -1, "filename": "pytest_tornado5-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "988caac954f818044bd1c63f6b30266e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4896, "upload_time": "2018-11-16T15:57:10", "upload_time_iso_8601": "2018-11-16T15:57:10.639340Z", "url": "https://files.pythonhosted.org/packages/5b/86/18862ee76649dd69416c1ff3228ca0872826cbc361edc6fb5dfa3dc3c17e/pytest_tornado5-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d3c4c67b8b0fcde4ec9ca84f04e9688", "sha256": "0de5eaaff0af802a6557dd5e27ab8eab94e363c7e07a419237b9032eb8146661"}, "downloads": -1, "filename": "pytest-tornado5-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7d3c4c67b8b0fcde4ec9ca84f04e9688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9990, "upload_time": "2018-11-16T15:57:12", "upload_time_iso_8601": "2018-11-16T15:57:12.059233Z", "url": "https://files.pythonhosted.org/packages/d0/dc/3c22d68bd33ceed02cafd32b69f4501963465e11f559d335af8781e0a03f/pytest-tornado5-2.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "988caac954f818044bd1c63f6b30266e", "sha256": "a61164e1f34603be446c17f778b1e6d53e3153c0e68f47e632fe6184357c2f45"}, "downloads": -1, "filename": "pytest_tornado5-2.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "988caac954f818044bd1c63f6b30266e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4896, "upload_time": "2018-11-16T15:57:10", "upload_time_iso_8601": "2018-11-16T15:57:10.639340Z", "url": "https://files.pythonhosted.org/packages/5b/86/18862ee76649dd69416c1ff3228ca0872826cbc361edc6fb5dfa3dc3c17e/pytest_tornado5-2.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7d3c4c67b8b0fcde4ec9ca84f04e9688", "sha256": "0de5eaaff0af802a6557dd5e27ab8eab94e363c7e07a419237b9032eb8146661"}, "downloads": -1, "filename": "pytest-tornado5-2.0.0.tar.gz", "has_sig": false, "md5_digest": "7d3c4c67b8b0fcde4ec9ca84f04e9688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9990, "upload_time": "2018-11-16T15:57:12", "upload_time_iso_8601": "2018-11-16T15:57:12.059233Z", "url": "https://files.pythonhosted.org/packages/d0/dc/3c22d68bd33ceed02cafd32b69f4501963465e11f559d335af8781e0a03f/pytest-tornado5-2.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:37 2020"}