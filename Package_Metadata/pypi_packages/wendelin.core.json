{"info": {"author": "Kirill Smelkov", "author_email": "kirr@nexedi.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: ZODB", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "==========================================\n Wendelin.core - Out-of-core NumPy arrays\n==========================================\n\nWendelin.core allows you to work with arrays bigger than RAM and local disk.\nBigarrays are persisted to storage, and can be changed in transactional manner.\n\nIn other words bigarrays are something like `numpy.memmap`_ for numpy.ndarray\nand OS files, but support transactions and files bigger than disk. The whole\nbigarray cannot generally be used as a drop-in replacement for numpy arrays,\nbut bigarray *slices* are real ndarrays and can be used everywhere ndarray can\nbe used, including in C/Cython/Fortran code. Slice size is limited by\nvirtual address-space size, which is ~ max 127TB on Linux/amd64.\n\nThe main class to work with is `ZBigArray` and is used like `ndarray` from\n`NumPy`_:\n\n1. create array::\n\n    from wendelin.bigarray.array_zodb import ZBigArray\n    import transaction\n\n    # root is connected to opened database\n    root['A'] = A = ZBigArray(shape=..., dtype=...)\n    transaction.commit()\n\n2. view array as a real ndarray::\n\n    a = A[:]        # view which covers all array, if it fits into address-space\n    b = A[10:100]\n\n   data for views will be loaded lazily on memory access.\n\n3. work with views, including using C/Cython/Fortran functions from NumPy\n   and other libraries to read/modify data::\n\n    a[2] = 1\n    a[10:20] = numpy.arange(10)\n    numpy.mean(a)\n\n   | the amount of modifications in one transaction should be less than available RAM.\n   | the amount of data read is limited only by virtual address-space size.\n\n4. data can be appended to array in O(\u03b4) time::\n\n    values                  # ndarray to append of shape  (\u03b4,)\n    A.append(values)\n\n   and array itself can be resized in O(1) time::\n\n    A.resize(newshape)\n\n5. changes to array data can be either discarded or saved back to DB::\n\n    transaction.abort()     # discard all made changes\n    transaction.commit()    # atomically save all changes\n\n\n\nWhen using NEO_ or ZEO_ as a database, bigarrays can be simultaneously used by\nseveral nodes in a cluster.\n\n\nPlease see `demo/demo_zbigarray.py`__ for a complete example.\n\n__ demo/demo_zbigarray.py\n\n\nCurrent state and Roadmap\n=========================\n\nWendelin.core works in real life for workloads Nexedi_ is using in production,\nincluding 24/7 projects. We are, however, aware of the following\nlimitations and things that need to be improved:\n\n- wendelin.core is currently not very fast\n- there are big - proportional to input in size - temporary array allocations\n  in third-party libraries (NumPy_, `scikit-learn`_, ...) which might practically\n  prevent processing out-of-core arrays depending on the functionality used.\n\nThus\n\n- we are currently working on improved wendelin.core design and implementation,\n  which will use kernel virtual memory manager (instead of one implemented__ in__\n  userspace__) with arrays backend presented to kernel via FUSE as virtual\n  filesystem implemented in Go.\n\n__  https://lab.nexedi.com/nexedi/wendelin.core/blob/master/include/wendelin/bigfile/virtmem.h\n__  https://lab.nexedi.com/nexedi/wendelin.core/blob/master/bigfile/virtmem.c\n__  https://lab.nexedi.com/nexedi/wendelin.core/blob/master/bigfile/pagefault.c\n\nIn parallel we will also:\n\n- try wendelin.core 1.0 on large data sets\n- identify and incrementally fix big-temporaries allocation issues in NumPy and\n  scikit-learn\n\nWe are open to community help with the above.\n\n\nAdditional materials\n====================\n\n- Wendelin.core tutorial__\n- Slides__ (pdf__) from presentation about wendelin.core in PyData Paris 2015\n\n__  https://www.nexedi.com/wendelin-Core.Tutorial.2016\n__  http://www.wendelin.io/NXD-Wendelin.Core.Non.Secret/asEntireHTML\n__  http://www.wendelin.io/NXD-Wendelin.Core.Non.Secret?format=pdf\n\n\n.. _NumPy:          http://www.numpy.org/\n.. _scikit-learn:   http://scikit-learn.org/\n.. _numpy.memmap:   http://docs.scipy.org/doc/numpy/reference/generated/numpy.memmap.html\n.. _NEO:            http://www.neoppod.org/\n.. _ZEO:            https://pypi.python.org/pypi/ZEO\n.. _Nexedi:         https://www.nexedi.com/\n\n----\n\nWendelin.core change history\n============================\n\n0.13 (2019-06-18)\n-----------------\n\n- Add support for Python 3.7 (commit__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/bca5f79e6f\n\n- Add `RAMArray` class which is compatible to `ZBigArray` in API and semantic,\n  but stores its data in RAM only (`commit 1`__, 2__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/7365979b9d\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/fc9b69d8e1\n\n- Add `lib.xnumpy.structured` - utility to create structured view of an array (`commit 1`__, 2__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/6a5dfefaf8\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/32ca80e2d5\n\n- Fix logic to keep `ZBigFileH` in sync with ZODB connection (commit__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/d9d6adec1b\n\n- Fix crash on PyVMA deallocation (commit__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/d97641d2ba\n\n- Move `py.bench` to pygolang__ so that it can be used not only in\n  Wendelin.core (commit__).\n\n  __ https://pypi.org/project/pygolang/\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/318efce0bf\n\n- Enhance `t/qemu-runlinux` - utility that is used to work on combined\n  kernel/user-space workloads (`commit 1`__, 2__, 3__, 4__, 5__, 6__).\n  This was in particular useful to develop Linux kernel fixes that are needed\n  for Wendelin.core 2.0 (`kernel commit 1`__, 2__, 3__, 4__, 5__, 6__, 7__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/fe541453f8\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/ccca055cfe\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/6ab952207e\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/a568d6d999\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/208aca62ae\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/89fb89929a\n\n  __ https://git.kernel.org/linus/ad2ba64dd489\n  __ https://git.kernel.org/linus/10dce8af3422\n  __ https://git.kernel.org/linus/bbd84f33652f\n  __ https://git.kernel.org/linus/c5bf68fe0c86\n  __ https://git.kernel.org/linus/438ab720c675\n  __ https://git.kernel.org/linus/7640682e67b3\n  __ https://git.kernel.org/linus/d4b13963f217\n\n- Various bugfixes.\n\n0.12 (2018-04-16)\n-----------------\n\n- Update licensing to be in line with whole Nexedi stack (`commit`__). Please\n  see https://www.nexedi.com/licensing for details, rationale and options.\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/f11386a4\n\n- Add `ArrayRef` utility to find out for a NumPy array its top-level root\n  parent and how to recreate the array as some view of the root;\n  this builds the foundation for e.g. sending arrays as references without copy\n  in CMFActivity joblib backend\n  (`commit 1`__, 2__, 3__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/e9d61a89\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/d53371b6\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/450ad804\n\n\n- Don't crash if during `loadblk()` garbage collection was run twice at tricky\n  times (`commit 1`__, 2__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/4228d8b6\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/3804cc39\n\n- Don't crash on writeout if previously `storeblk()` resulted in error\n  (`commit`__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/87bf4908\n\n\n\n- Fix `py.bench` and rework it to produce output in Go benchmarking format\n  (`commit 1`__, 2__, 3__, 4__, 5__); add benchmarks for handling pagefaults\n  (`commit`__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/51f252d4\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/074ce24d\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/ed13c3f9\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/fc08766d\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/5a1ed45a\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/3cfc2728\n\n- Use zodbtools/zodburi, if available, to open database by URL\n  (`commit`__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/f785ac07\n\n- Start to make sure it works with ZODB5 too (`commit 1`__, 2__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/808b59b7\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/0dbf3c44\n\n- Various bugfixes.\n\n0.11 (2017-03-28)\n-----------------\n\n- Switch back to using ZBlk0 format by default (`commit`__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/0b68f178\n\n0.10 (2017-03-16)\n-----------------\n\n- Tell the world `dtype=object` is not supported (`commit`__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/e44bd761\n\n0.9 (2017-01-17)\n----------------\n\n- Avoid deadlocks via doing `storeblk()` calls with virtmem lock released\n  (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/8bb7f2f2\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/fb4bfb32\n\n- Don't crash if in `loadblk()` implementation an exception is internally\n  raised & caught\n  (`commit 1`__, 2__, 3__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/9aa6a5d7\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/61b18a40\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/024c246c\n\n0.8 (2016-09-28)\n----------------\n\n- Do not leak memory when loading data in ZBlk1 format (`commit`__).\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/542917d1\n\n0.7 (2016-07-14)\n------------------\n\n- Add support for Python 3.5 (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/20115391\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/e6beab19\n\n- Fix bug in pagemap code which could lead to crashes and other issues (`commit`__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/ee9bcd00\n\n- Various bugfixes\n\n0.6 (2016-06-13)\n----------------\n\n- Add support for FORTRAN ordering (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/ab9ca2df\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/2ca0f076\n\n\n- Avoid deadlocks via doing `loadblk()` calls with virtmem lock released\n  (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/f49c11a3\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/0231a65d\n\n- Various bugfixes\n\n0.5 (2015-10-02)\n----------------\n\n- Introduce another storage format, which is optimized for small changes, and\n  make it the default.\n  (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/13c0c17c\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/9ae42085\n\n- Various bugfixes and documentation improvements\n\n\n0.4 (2015-08-19)\n----------------\n\n- Add support for O(\u03b4) in-place BigArray.append() (commit__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/1245acc9\n\n- Implement proper multithreading support (commit__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/d53271b9\n\n- Implement proper RAM pages invalidation when backing ZODB objects are changed\n  from outside (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/cb779c7b\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/92bfd03e\n\n- Fix all kind of failures that could happen when ZODB connection changes\n  worker thread in-between handling requests (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/c7c01ce4\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/64d1f40b\n\n- Tox tests now cover usage with FileStorage, ZEO and NEO ZODB storages\n  (`commit 1`__, 2__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/010eeb35\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/7fc4ec66\n\n- Various bugfixes\n\n\n\n0.3 (2015-06-12)\n----------------\n\n- Add support for automatic BigArray -> ndarray conversion, so that e.g. the\n  following::\n\n    A = BigArray(...)\n    numpy.mean(A)       # passing BigArray to plain NumPy function\n\n  either succeeds, or raises MemoryError if not enough address space is\n  available to cover whole A. (current limitation is ~ 127TB on linux/amd64)\n\n  (commit__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/00db08d6\n\n- Various bugfixes (build-fixes, crashes, overflows, etc)\n\n\n0.2 (2015-05-25)\n----------------\n\n- Add support for O(1) in-place BigArray.resize() (commit__)\n\n  __ https://lab.nexedi.com/nexedi/wendelin.core/commit/ca064f75\n\n- Various build bugfixes (older systems, non-std python, etc)\n\n\n0.1 (2015-04-03)\n----------------\n\n- Initial release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://lab.nexedi.com/nexedi/wendelin.core", "keywords": "bigdata out-of-core numpy virtual-memory", "license": "GPLv3+ with wide exception for Open-Source", "maintainer": "", "maintainer_email": "", "name": "wendelin.core", "package_url": "https://pypi.org/project/wendelin.core/", "platform": "", "project_url": "https://pypi.org/project/wendelin.core/", "project_urls": {"Homepage": "https://lab.nexedi.com/nexedi/wendelin.core"}, "release_url": "https://pypi.org/project/wendelin.core/0.13/", "requires_dist": null, "requires_python": "", "summary": "Out-of-core NumPy arrays", "version": "0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Wendelin.core allows you to work with arrays bigger than RAM and local disk.\nBigarrays are persisted to storage, and can be changed in transactional manner.</p>\n<p>In other words bigarrays are something like <a href=\"http://docs.scipy.org/doc/numpy/reference/generated/numpy.memmap.html\" rel=\"nofollow\">numpy.memmap</a> for numpy.ndarray\nand OS files, but support transactions and files bigger than disk. The whole\nbigarray cannot generally be used as a drop-in replacement for numpy arrays,\nbut bigarray <em>slices</em> are real ndarrays and can be used everywhere ndarray can\nbe used, including in C/Cython/Fortran code. Slice size is limited by\nvirtual address-space size, which is ~ max 127TB on Linux/amd64.</p>\n<p>The main class to work with is <cite>ZBigArray</cite> and is used like <cite>ndarray</cite> from\n<a href=\"http://www.numpy.org/\" rel=\"nofollow\">NumPy</a>:</p>\n<ol>\n<li><p>create array:</p>\n<pre>from wendelin.bigarray.array_zodb import ZBigArray\nimport transaction\n\n# root is connected to opened database\nroot['A'] = A = ZBigArray(shape=..., dtype=...)\ntransaction.commit()\n</pre>\n</li>\n<li><p>view array as a real ndarray:</p>\n<pre>a = A[:]        # view which covers all array, if it fits into address-space\nb = A[10:100]\n</pre>\n<p>data for views will be loaded lazily on memory access.</p>\n</li>\n<li><p>work with views, including using C/Cython/Fortran functions from NumPy\nand other libraries to read/modify data:</p>\n<pre>a[2] = 1\na[10:20] = numpy.arange(10)\nnumpy.mean(a)\n</pre>\n<div>\n<div>the amount of modifications in one transaction should be less than available RAM.</div>\n<div>the amount of data read is limited only by virtual address-space size.</div>\n</div>\n</li>\n<li><p>data can be appended to array in O(\u03b4) time:</p>\n<pre>values                  # ndarray to append of shape  (\u03b4,)\nA.append(values)\n</pre>\n<p>and array itself can be resized in O(1) time:</p>\n<pre>A.resize(newshape)\n</pre>\n</li>\n<li><p>changes to array data can be either discarded or saved back to DB:</p>\n<pre>transaction.abort()     # discard all made changes\ntransaction.commit()    # atomically save all changes\n</pre>\n</li>\n</ol>\n<p>When using <a href=\"http://www.neoppod.org/\" rel=\"nofollow\">NEO</a> or <a href=\"https://pypi.python.org/pypi/ZEO\" rel=\"nofollow\">ZEO</a> as a database, bigarrays can be simultaneously used by\nseveral nodes in a cluster.</p>\n<p>Please see <a href=\"demo/demo_zbigarray.py\" rel=\"nofollow\">demo/demo_zbigarray.py</a> for a complete example.</p>\n<div id=\"current-state-and-roadmap\">\n<h2>Current state and Roadmap</h2>\n<p>Wendelin.core works in real life for workloads <a href=\"https://www.nexedi.com/\" rel=\"nofollow\">Nexedi</a> is using in production,\nincluding 24/7 projects. We are, however, aware of the following\nlimitations and things that need to be improved:</p>\n<ul>\n<li>wendelin.core is currently not very fast</li>\n<li>there are big - proportional to input in size - temporary array allocations\nin third-party libraries (<a href=\"http://www.numpy.org/\" rel=\"nofollow\">NumPy</a>, <a href=\"http://scikit-learn.org/\" rel=\"nofollow\">scikit-learn</a>, \u2026) which might practically\nprevent processing out-of-core arrays depending on the functionality used.</li>\n</ul>\n<p>Thus</p>\n<ul>\n<li>we are currently working on improved wendelin.core design and implementation,\nwhich will use kernel virtual memory manager (instead of one <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/blob/master/include/wendelin/bigfile/virtmem.h\" rel=\"nofollow\">implemented</a> <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/blob/master/bigfile/virtmem.c\" rel=\"nofollow\">in</a>\n<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/blob/master/bigfile/pagefault.c\" rel=\"nofollow\">userspace</a>) with arrays backend presented to kernel via FUSE as virtual\nfilesystem implemented in Go.</li>\n</ul>\n<p>In parallel we will also:</p>\n<ul>\n<li>try wendelin.core 1.0 on large data sets</li>\n<li>identify and incrementally fix big-temporaries allocation issues in NumPy and\nscikit-learn</li>\n</ul>\n<p>We are open to community help with the above.</p>\n</div>\n<div id=\"additional-materials\">\n<h2>Additional materials</h2>\n<ul>\n<li>Wendelin.core <a href=\"https://www.nexedi.com/wendelin-Core.Tutorial.2016\" rel=\"nofollow\">tutorial</a></li>\n<li><a href=\"http://www.wendelin.io/NXD-Wendelin.Core.Non.Secret/asEntireHTML\" rel=\"nofollow\">Slides</a> (<a href=\"http://www.wendelin.io/NXD-Wendelin.Core.Non.Secret?format=pdf\" rel=\"nofollow\">pdf</a>) from presentation about wendelin.core in PyData Paris 2015</li>\n</ul>\n</div>\n<hr class=\"docutils\">\n<div id=\"wendelin-core-change-history\">\n<h2>Wendelin.core change history</h2>\n<div id=\"id8\">\n<h3>0.13 (2019-06-18)</h3>\n<ul>\n<li>Add support for Python 3.7 (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/bca5f79e6f\" rel=\"nofollow\">commit</a>).</li>\n<li>Add <cite>RAMArray</cite> class which is compatible to <cite>ZBigArray</cite> in API and semantic,\nbut stores its data in RAM only (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/7365979b9d\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/fc9b69d8e1\" rel=\"nofollow\">2</a>).</li>\n<li>Add <cite>lib.xnumpy.structured</cite> - utility to create structured view of an array (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/6a5dfefaf8\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/32ca80e2d5\" rel=\"nofollow\">2</a>).</li>\n<li>Fix logic to keep <cite>ZBigFileH</cite> in sync with ZODB connection (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/d9d6adec1b\" rel=\"nofollow\">commit</a>).</li>\n<li>Fix crash on PyVMA deallocation (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/d97641d2ba\" rel=\"nofollow\">commit</a>).</li>\n<li>Move <cite>py.bench</cite> to <a href=\"https://pypi.org/project/pygolang/\" rel=\"nofollow\">pygolang</a> so that it can be used not only in\nWendelin.core (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/318efce0bf\" rel=\"nofollow\">commit</a>).</li>\n<li>Enhance <cite>t/qemu-runlinux</cite> - utility that is used to work on combined\nkernel/user-space workloads (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/fe541453f8\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/ccca055cfe\" rel=\"nofollow\">2</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/6ab952207e\" rel=\"nofollow\">3</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/a568d6d999\" rel=\"nofollow\">4</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/208aca62ae\" rel=\"nofollow\">5</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/89fb89929a\" rel=\"nofollow\">6</a>).\nThis was in particular useful to develop Linux kernel fixes that are needed\nfor Wendelin.core 2.0 (<a href=\"https://git.kernel.org/linus/ad2ba64dd489\" rel=\"nofollow\">kernel commit 1</a>, <a href=\"https://git.kernel.org/linus/10dce8af3422\" rel=\"nofollow\">2</a>, <a href=\"https://git.kernel.org/linus/bbd84f33652f\" rel=\"nofollow\">3</a>, <a href=\"https://git.kernel.org/linus/c5bf68fe0c86\" rel=\"nofollow\">4</a>, <a href=\"https://git.kernel.org/linus/438ab720c675\" rel=\"nofollow\">5</a>, <a href=\"https://git.kernel.org/linus/7640682e67b3\" rel=\"nofollow\">6</a>, <a href=\"https://git.kernel.org/linus/d4b13963f217\" rel=\"nofollow\">7</a>).</li>\n<li>Various bugfixes.</li>\n</ul>\n</div>\n<div id=\"id31\">\n<h3>0.12 (2018-04-16)</h3>\n<ul>\n<li>Update licensing to be in line with whole Nexedi stack (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/f11386a4\" rel=\"nofollow\">commit</a>). Please\nsee <a href=\"https://www.nexedi.com/licensing\" rel=\"nofollow\">https://www.nexedi.com/licensing</a> for details, rationale and options.</li>\n<li>Add <cite>ArrayRef</cite> utility to find out for a NumPy array its top-level root\nparent and how to recreate the array as some view of the root;\nthis builds the foundation for e.g. sending arrays as references without copy\nin CMFActivity joblib backend\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/e9d61a89\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/d53371b6\" rel=\"nofollow\">2</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/450ad804\" rel=\"nofollow\">3</a>).</li>\n<li>Don\u2019t crash if during <cite>loadblk()</cite> garbage collection was run twice at tricky\ntimes (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/4228d8b6\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/3804cc39\" rel=\"nofollow\">2</a>).</li>\n<li>Don\u2019t crash on writeout if previously <cite>storeblk()</cite> resulted in error\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/87bf4908\" rel=\"nofollow\">commit</a>).</li>\n<li>Fix <cite>py.bench</cite> and rework it to produce output in Go benchmarking format\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/51f252d4\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/074ce24d\" rel=\"nofollow\">2</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/ed13c3f9\" rel=\"nofollow\">3</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/fc08766d\" rel=\"nofollow\">4</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/5a1ed45a\" rel=\"nofollow\">5</a>); add benchmarks for handling pagefaults\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/3cfc2728\" rel=\"nofollow\">commit</a>).</li>\n<li>Use zodbtools/zodburi, if available, to open database by URL\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/f785ac07\" rel=\"nofollow\">commit</a>).</li>\n<li>Start to make sure it works with ZODB5 too (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/808b59b7\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/0dbf3c44\" rel=\"nofollow\">2</a>).</li>\n<li>Various bugfixes.</li>\n</ul>\n</div>\n<div id=\"id48\">\n<h3>0.11 (2017-03-28)</h3>\n<ul>\n<li>Switch back to using ZBlk0 format by default (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/0b68f178\" rel=\"nofollow\">commit</a>)</li>\n</ul>\n</div>\n<div id=\"id50\">\n<h3>0.10 (2017-03-16)</h3>\n<ul>\n<li>Tell the world <cite>dtype=object</cite> is not supported (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/e44bd761\" rel=\"nofollow\">commit</a>)</li>\n</ul>\n</div>\n<div id=\"id52\">\n<h3>0.9 (2017-01-17)</h3>\n<ul>\n<li>Avoid deadlocks via doing <cite>storeblk()</cite> calls with virtmem lock released\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/8bb7f2f2\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/fb4bfb32\" rel=\"nofollow\">2</a>)</li>\n<li>Don\u2019t crash if in <cite>loadblk()</cite> implementation an exception is internally\nraised &amp; caught\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/9aa6a5d7\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/61b18a40\" rel=\"nofollow\">2</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/024c246c\" rel=\"nofollow\">3</a>)</li>\n</ul>\n</div>\n<div id=\"id58\">\n<h3>0.8 (2016-09-28)</h3>\n<ul>\n<li>Do not leak memory when loading data in ZBlk1 format (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/542917d1\" rel=\"nofollow\">commit</a>).</li>\n</ul>\n</div>\n<div id=\"id60\">\n<h3>0.7 (2016-07-14)</h3>\n<ul>\n<li>Add support for Python 3.5 (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/20115391\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/e6beab19\" rel=\"nofollow\">2</a>)</li>\n<li>Fix bug in pagemap code which could lead to crashes and other issues (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/ee9bcd00\" rel=\"nofollow\">commit</a>)</li>\n<li>Various bugfixes</li>\n</ul>\n</div>\n<div id=\"id64\">\n<h3>0.6 (2016-06-13)</h3>\n<ul>\n<li>Add support for FORTRAN ordering (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/ab9ca2df\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/2ca0f076\" rel=\"nofollow\">2</a>)</li>\n<li>Avoid deadlocks via doing <cite>loadblk()</cite> calls with virtmem lock released\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/f49c11a3\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/0231a65d\" rel=\"nofollow\">2</a>)</li>\n<li>Various bugfixes</li>\n</ul>\n</div>\n<div id=\"id69\">\n<h3>0.5 (2015-10-02)</h3>\n<ul>\n<li>Introduce another storage format, which is optimized for small changes, and\nmake it the default.\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/13c0c17c\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/9ae42085\" rel=\"nofollow\">2</a>)</li>\n<li>Various bugfixes and documentation improvements</li>\n</ul>\n</div>\n<div id=\"id72\">\n<h3>0.4 (2015-08-19)</h3>\n<ul>\n<li>Add support for O(\u03b4) in-place BigArray.append() (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/1245acc9\" rel=\"nofollow\">commit</a>)</li>\n<li>Implement proper multithreading support (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/d53271b9\" rel=\"nofollow\">commit</a>)</li>\n<li>Implement proper RAM pages invalidation when backing ZODB objects are changed\nfrom outside (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/cb779c7b\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/92bfd03e\" rel=\"nofollow\">2</a>)</li>\n<li>Fix all kind of failures that could happen when ZODB connection changes\nworker thread in-between handling requests (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/c7c01ce4\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/64d1f40b\" rel=\"nofollow\">2</a>)</li>\n<li>Tox tests now cover usage with FileStorage, ZEO and NEO ZODB storages\n(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/010eeb35\" rel=\"nofollow\">commit 1</a>, <a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/7fc4ec66\" rel=\"nofollow\">2</a>)</li>\n<li>Various bugfixes</li>\n</ul>\n</div>\n<div id=\"id81\">\n<h3>0.3 (2015-06-12)</h3>\n<ul>\n<li><p>Add support for automatic BigArray -&gt; ndarray conversion, so that e.g. the\nfollowing:</p>\n<pre>A = BigArray(...)\nnumpy.mean(A)       # passing BigArray to plain NumPy function\n</pre>\n<p>either succeeds, or raises MemoryError if not enough address space is\navailable to cover whole A. (current limitation is ~ 127TB on linux/amd64)</p>\n<p>(<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/00db08d6\" rel=\"nofollow\">commit</a>)</p>\n</li>\n<li><p>Various bugfixes (build-fixes, crashes, overflows, etc)</p>\n</li>\n</ul>\n</div>\n<div id=\"id83\">\n<h3>0.2 (2015-05-25)</h3>\n<ul>\n<li>Add support for O(1) in-place BigArray.resize() (<a href=\"https://lab.nexedi.com/nexedi/wendelin.core/commit/ca064f75\" rel=\"nofollow\">commit</a>)</li>\n<li>Various build bugfixes (older systems, non-std python, etc)</li>\n</ul>\n</div>\n<div id=\"id85\">\n<h3>0.1 (2015-04-03)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5415939, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "05d0aef0d222407647d9ca0a7c53e493", "sha256": "29d088894a497f9f8dc1785bb29af8633a6254f4d56a04536c0a6bb91aa26afa"}, "downloads": -1, "filename": "wendelin.core-0.1.tar.gz", "has_sig": true, "md5_digest": "05d0aef0d222407647d9ca0a7c53e493", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2543891, "upload_time": "2015-04-03T13:49:17", "upload_time_iso_8601": "2015-04-03T13:49:17.893273Z", "url": "https://files.pythonhosted.org/packages/32/97/4501ebed3ce17d1d66795865ba6da9644e14aeef6fde455270d7310acbfd/wendelin.core-0.1.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "cb8545e2385bcc6b430d90aff3afa793", "sha256": "cd6abd5056fdcc6fb5f2e7edb439e263513fe4d56bf71b0a9b81395f80abd684"}, "downloads": -1, "filename": "wendelin.core-0.10.tar.gz", "has_sig": true, "md5_digest": "cb8545e2385bcc6b430d90aff3afa793", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3091415, "upload_time": "2017-03-16T09:04:47", "upload_time_iso_8601": "2017-03-16T09:04:47.807051Z", "url": "https://files.pythonhosted.org/packages/e9/9c/a1a3fca65fbd34a1d5a280a9d6e43c734ac7728b2da49c8ee0b1fe231dba/wendelin.core-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "a662590117c5f8a5d0d6fe2fca4df6c4", "sha256": "6c55b36edcacc263c34f571bd3fa935744727efdbf4d8bea53bc77256b5559ed"}, "downloads": -1, "filename": "wendelin.core-0.11.tar.gz", "has_sig": true, "md5_digest": "a662590117c5f8a5d0d6fe2fca4df6c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3091761, "upload_time": "2017-03-28T12:03:46", "upload_time_iso_8601": "2017-03-28T12:03:46.274471Z", "url": "https://files.pythonhosted.org/packages/73/45/f4321ece05155cee52ed88d2fc2faa0192dcb1cd18d36c6ae3ddfa3ec4ac/wendelin.core-0.11.tar.gz", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "603acf3d026e2f6531d56fa68df24740", "sha256": "38e483012f9b38ec544f5eb49b01e513cbe093c9b715431666a02375a14f7295"}, "downloads": -1, "filename": "wendelin.core-0.12.tar.gz", "has_sig": true, "md5_digest": "603acf3d026e2f6531d56fa68df24740", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3099090, "upload_time": "2018-04-16T14:21:16", "upload_time_iso_8601": "2018-04-16T14:21:16.075466Z", "url": "https://files.pythonhosted.org/packages/fb/ad/fce2350037bd764786f1b6d580883c882581e4645b4406f1ee49cbc698f9/wendelin.core-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "363d9231212c2fb70ba24b3df850a979", "sha256": "b9a42b9006272fe128fb37dfe464a4ff643a502f169f5c62f93740ca73720c7c"}, "downloads": -1, "filename": "wendelin.core-0.13.tar.gz", "has_sig": true, "md5_digest": "363d9231212c2fb70ba24b3df850a979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3105203, "upload_time": "2019-06-18T15:14:38", "upload_time_iso_8601": "2019-06-18T15:14:38.508643Z", "url": "https://files.pythonhosted.org/packages/9f/16/19c7e649aa33353fc89cc3018f57e50730bbbbb8fb1c6b90f1e549655000/wendelin.core-0.13.tar.gz", "yanked": false}], "0.2": [], "0.2.post1": [{"comment_text": "", "digests": {"md5": "18713df7082df09c77ff82bb2b3586be", "sha256": "516559ae323fe33d70c32dcc444bea0408195f503e93e7290098716adce56570"}, "downloads": -1, "filename": "wendelin.core-0.2.post1.tar.gz", "has_sig": true, "md5_digest": "18713df7082df09c77ff82bb2b3586be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2539053, "upload_time": "2015-05-25T10:56:21", "upload_time_iso_8601": "2015-05-25T10:56:21.807686Z", "url": "https://files.pythonhosted.org/packages/dd/45/fc8ba3f7b53fe0ec6418e8a7e4b9ffb65ca7db7f546bff94ccf9be46cd8e/wendelin.core-0.2.post1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "156706c2d0bbc6699bb7d88e12c0e052", "sha256": "cc3e10e0457c7bf2453ec687e5fd233e1351fb393c285f109e2741f4c01cb780"}, "downloads": -1, "filename": "wendelin.core-0.3.tar.gz", "has_sig": true, "md5_digest": "156706c2d0bbc6699bb7d88e12c0e052", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2438262, "upload_time": "2015-06-16T13:55:04", "upload_time_iso_8601": "2015-06-16T13:55:04.670783Z", "url": "https://files.pythonhosted.org/packages/99/33/e2db89a9c5814af4772a0331e9b302b05b9eed377e68f652f964f1f2d047/wendelin.core-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1c01766239c5887bfa22a571b9b0b12f", "sha256": "dc0bcdfe2c64bbe48a3642dff73f010488e6cfb595057b54f96a0cd6002e9b6b"}, "downloads": -1, "filename": "wendelin.core-0.4.tar.gz", "has_sig": true, "md5_digest": "1c01766239c5887bfa22a571b9b0b12f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2447607, "upload_time": "2015-08-19T08:51:14", "upload_time_iso_8601": "2015-08-19T08:51:14.125101Z", "url": "https://files.pythonhosted.org/packages/c8/70/65295565a65d0947b8c4e21b1d3e5996851defce6c4a3dc1174c313a4216/wendelin.core-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "18a1d965a38637893f39f2ae3ed0c6fb", "sha256": "44246ac28bb2e7f026225331f5b00e825c7aa4c13309240867e1dbeeb94920fe"}, "downloads": -1, "filename": "wendelin.core-0.5.tar.gz", "has_sig": true, "md5_digest": "18a1d965a38637893f39f2ae3ed0c6fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2456231, "upload_time": "2015-10-02T13:53:12", "upload_time_iso_8601": "2015-10-02T13:53:12.588986Z", "url": "https://files.pythonhosted.org/packages/a9/15/1b32166f9cefd67fa8b413641913998685e4483bf8cb80b61ca2437ac188/wendelin.core-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "6c37e3649aecb1fa585bf9f0250602d1", "sha256": "781c471d369ee25189a8f02206976e66e44f1d61cfb5e1f8a996bfa33249505f"}, "downloads": -1, "filename": "wendelin.core-0.6.tar.gz", "has_sig": true, "md5_digest": "6c37e3649aecb1fa585bf9f0250602d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2593697, "upload_time": "2016-06-13T12:30:47", "upload_time_iso_8601": "2016-06-13T12:30:47.282611Z", "url": "https://files.pythonhosted.org/packages/cd/d3/4610095c248ab9183861b3ec231621572b8cb38d9ee74118e6dc892575b2/wendelin.core-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "a24e186a9cd0d68819e3cae261de398c", "sha256": "070a2c1a06a90ed0350c2623d151fb2433974d8b6ac6b0d91a09acc8d531a647"}, "downloads": -1, "filename": "wendelin.core-0.7.tar.gz", "has_sig": true, "md5_digest": "a24e186a9cd0d68819e3cae261de398c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2596090, "upload_time": "2016-07-14T18:33:47", "upload_time_iso_8601": "2016-07-14T18:33:47.879284Z", "url": "https://files.pythonhosted.org/packages/02/16/8d2cec619f21037b0d61ef0c880d56e9dd9274af818702d7f4565d5dff32/wendelin.core-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "53f850a458a49be37aa89d95c785cf4d", "sha256": "5588e0072c3377663aab623a73f2c87268fe31da9ed9bae6e01447cba770d53c"}, "downloads": -1, "filename": "wendelin.core-0.8.tar.gz", "has_sig": true, "md5_digest": "53f850a458a49be37aa89d95c785cf4d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3086975, "upload_time": "2016-09-28T13:30:11", "upload_time_iso_8601": "2016-09-28T13:30:11.886725Z", "url": "https://files.pythonhosted.org/packages/e7/ba/fbb9a72ab4d1991a628517bdebbfb48ba1abf535e7582e80b64d003074ec/wendelin.core-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "9ff796fbe34c76dbcaaaa1768a526896", "sha256": "fe426922c33195c45435e907c3c5936869e05a959ff77b3a4eee85654ba9b5cc"}, "downloads": -1, "filename": "wendelin.core-0.9.tar.gz", "has_sig": true, "md5_digest": "9ff796fbe34c76dbcaaaa1768a526896", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3091374, "upload_time": "2017-01-17T11:26:13", "upload_time_iso_8601": "2017-01-17T11:26:13.324299Z", "url": "https://files.pythonhosted.org/packages/ce/86/54abe9d2a4a934d81c364455f22edb0bfb9a525f4ca2a5cefe5e09f34595/wendelin.core-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "363d9231212c2fb70ba24b3df850a979", "sha256": "b9a42b9006272fe128fb37dfe464a4ff643a502f169f5c62f93740ca73720c7c"}, "downloads": -1, "filename": "wendelin.core-0.13.tar.gz", "has_sig": true, "md5_digest": "363d9231212c2fb70ba24b3df850a979", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3105203, "upload_time": "2019-06-18T15:14:38", "upload_time_iso_8601": "2019-06-18T15:14:38.508643Z", "url": "https://files.pythonhosted.org/packages/9f/16/19c7e649aa33353fc89cc3018f57e50730bbbbb8fb1c6b90f1e549655000/wendelin.core-0.13.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:17 2020"}