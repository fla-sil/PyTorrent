{"info": {"author": "Digitale Gesellschaft", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3"], "description": "# anonip\n\n[![PyPI](https://img.shields.io/pypi/v/anonip.svg)](https://pypi.org/project/anonip/)\n[![Python versions](https://img.shields.io/pypi/pyversions/anonip.svg)](https://pypi.org/project/anonip/)\n[![Build Status](https://travis-ci.org/DigitaleGesellschaft/Anonip.svg?branch=master)](https://travis-ci.com/DigitaleGesellschaft/Anonip)\n[![Coverage](https://img.shields.io/badge/coverage-100%25-brightgreen.svg)](https://github.com/DigitaleGesellschaft/Anonip/blob/master/.coveragerc#L11)\n[![Black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/DigitaleGesellschaft/Anonip)\n[![License](https://img.shields.io/badge/License-BSD%203--Clause-blue.svg)](https://opensource.org/licenses/BSD-3-Clause)\n\nDigitale Gesellschaft\nhttps://www.digitale-gesellschaft.ch\n\n\nFormerly\nSwiss Privacy Foundation\nhttps://www.privacyfoundation.ch/\n\n\n## Description\n\nAnonip is a tool to anonymize IP addresses in log files.\n\nIt masks the last bits of IPv4 and IPv6 addresses. That way most of the\nrelevant information is preserved, while the IP-address does not match a\nparticular individuum anymore.\n\nThe log entries get directly piped from Apache to Anonip. The unmasked IP\naddresses are never written to any file.\n\nWith the help of cat, it's also possible to rewrite existing log files.\n\nFor usage with nginx see here: https://github.com/DigitaleGesellschaft/Anonip/issues/1\n\n## Features\n\n - Masks IP addresses in log files\n - Configurable amount of masked bits\n - The column containing the IP address can freely be chosen\n - Works for both access.log- and error.log files\n\n## Officially supported python versions\n - 2.7\n - 3.5\n - 3.6\n - 3.7\n\n## Dependencies\nIf you're using python version >=3.3, there are no external\ndependencies.\n\nFor python versions <3.3:\n - [ipaddress module](https://bitbucket.org/kwi/py2-ipaddress/)\n\n## Invocation\n\n```\nusage: anonip.py [-h] [-4 INTEGER] [-6 INTEGER] [-i INTEGER] [-o FILE]\n                 [-c INTEGER [INTEGER ...]] [-l STRING] [-r STRING] [-p] [-d]\n                 [-v]\n\nAnonip is a tool to anonymize IP-addresses in log files.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -4 INTEGER, --ipv4mask INTEGER\n                        truncate the last n bits (default: 12)\n  -6 INTEGER, --ipv6mask INTEGER\n                        truncate the last n bits (default: 84)\n  -i INTEGER, --increment INTEGER\n                        increment the IP address by n (default: 0)\n  -o FILE, --output FILE\n                        file to write to\n  -c INTEGER [INTEGER ...], --column INTEGER [INTEGER ...]\n                        assume IP address is in column n (1-based indexed;\n                        default: 1)\n  -l STRING, --delimiter STRING\n                        log delimiter (default: \" \")\n  -r STRING, --replace STRING\n                        replacement string in case address parsing fails\n                        Example: 0.0.0.0)\n  -p, --skip-private    do not mask addresses in private ranges. See IANA\n                        Special-Purpose Address Registry.\n  -d, --debug           print debug messages\n  -v, --version         show program's version number and exit\n```\n\n## Usage\n\nIn the Apache configuration (or the one of a vhost) the log output needs to\nget piped to anonip:\n```\nCustomLog \"|/path/to/anonip.py [OPTIONS] --output /path/to/log\" combined\n```\nThat's it! All the IP addresses will be masked in the log now.\n\nAlternative:\n```\ncat /path/to/orig_log | /path/to/anonip.py [OPTIONS] --output /path/to/log\n```\n\n### As a python module\n\nRead from stdin:\n``` python\nfrom anonip import Anonip\n\n\nanonip = Anonip()\nfor line in anonip.run():\n    print(line)\n\n```\nManually feed lines:\n``` python\nfrom anonip import Anonip\n\n\ndata = ['1.1.1.1', '2.2.2.2', '3.3.3.3']\nanonip = Anonip()\n\nfor line in data:\n    print(anonip.process_line(line))\n\n```\n\n### Python 2 or 3?\nFor compatibility reasons, anonip uses the shebang `#! /usr/bin/env python`.\nThis will default to python2 on all Linux distributions except for Arch Linux.\nThe performance of anonip can be improved by running it with python3. If \npython3 is available on your system, you should preferrably invoke anonip\nlike this:\n\n``` shell\npython3 -m anonip [OPTIONS]\n```\n\nor \n\n``` shell\npython3 /path/to/anonip.py [OPTIONS]\n```\n\n## Motivation\n\nIn most cases IP addresses are personal data as they refer to individuals (or at least\ntheir Internet connection). IP addresses - and the data associated with them - may\ntherefore only be lawfully processed in accordance with the principles of the\napplicable data protection laws.\n\nStorage of log files from web servers, for example, is only permitted within close time\nlimits or with the voluntary consent of the persons concerned (as long as the\ninformation about the IP address is linkable to a person).\n\nAnonip tries to avoid exactly that, but without losing the benefit of those log files.\n\nWith the masking of the last bits of IP addresses, we're still able to distinguish the\nlog entries up to a certain degree. Compared to the entire removal of the IP-adresses,\nwe're still able to make a rough geolocating as well as a reverse DNS lookup. But the\notherwise distinct IP addresses do not match a particular individuum anymore.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DigitaleGesellschaft/Anonip", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "anonip", "package_url": "https://pypi.org/project/anonip/", "platform": "", "project_url": "https://pypi.org/project/anonip/", "project_urls": {"Homepage": "https://github.com/DigitaleGesellschaft/Anonip"}, "release_url": "https://pypi.org/project/anonip/1.0.0/", "requires_dist": ["ipaddress ; python_version < \"3.3\""], "requires_python": "", "summary": "Anonip is a tool to anonymize IP-addresses in log-files.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>anonip</h1>\n<p><a href=\"https://pypi.org/project/anonip/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f7dc20114054a534998c9cb4406ab2d88ba0860/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616e6f6e69702e737667\"></a>\n<a href=\"https://pypi.org/project/anonip/\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27be41900d9ed00f778ab5e1bddd93ccb24aaded/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616e6f6e69702e737667\"></a>\n<a href=\"https://travis-ci.com/DigitaleGesellschaft/Anonip\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51aa21a5518c720e5d303b9d0305e48c36556138/68747470733a2f2f7472617669732d63692e6f72672f4469676974616c65476573656c6c7363686166742f416e6f6e69702e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://github.com/DigitaleGesellschaft/Anonip/blob/master/.coveragerc#L11\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2bdee873cc103def8843888436f081cc6be1dcdb/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f7665726167652d3130302532352d627269676874677265656e2e737667\"></a>\n<a href=\"https://github.com/DigitaleGesellschaft/Anonip\" rel=\"nofollow\"><img alt=\"Black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110fcca60a43a8ea37b1a5bda616e639325f2f30/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d425344253230332d2d436c617573652d626c75652e737667\"></a></p>\n<p>Digitale Gesellschaft\n<a href=\"https://www.digitale-gesellschaft.ch\" rel=\"nofollow\">https://www.digitale-gesellschaft.ch</a></p>\n<p>Formerly\nSwiss Privacy Foundation\n<a href=\"https://www.privacyfoundation.ch/\" rel=\"nofollow\">https://www.privacyfoundation.ch/</a></p>\n<h2>Description</h2>\n<p>Anonip is a tool to anonymize IP addresses in log files.</p>\n<p>It masks the last bits of IPv4 and IPv6 addresses. That way most of the\nrelevant information is preserved, while the IP-address does not match a\nparticular individuum anymore.</p>\n<p>The log entries get directly piped from Apache to Anonip. The unmasked IP\naddresses are never written to any file.</p>\n<p>With the help of cat, it's also possible to rewrite existing log files.</p>\n<p>For usage with nginx see here: <a href=\"https://github.com/DigitaleGesellschaft/Anonip/issues/1\" rel=\"nofollow\">https://github.com/DigitaleGesellschaft/Anonip/issues/1</a></p>\n<h2>Features</h2>\n<ul>\n<li>Masks IP addresses in log files</li>\n<li>Configurable amount of masked bits</li>\n<li>The column containing the IP address can freely be chosen</li>\n<li>Works for both access.log- and error.log files</li>\n</ul>\n<h2>Officially supported python versions</h2>\n<ul>\n<li>2.7</li>\n<li>3.5</li>\n<li>3.6</li>\n<li>3.7</li>\n</ul>\n<h2>Dependencies</h2>\n<p>If you're using python version &gt;=3.3, there are no external\ndependencies.</p>\n<p>For python versions &lt;3.3:</p>\n<ul>\n<li><a href=\"https://bitbucket.org/kwi/py2-ipaddress/\" rel=\"nofollow\">ipaddress module</a></li>\n</ul>\n<h2>Invocation</h2>\n<pre><code>usage: anonip.py [-h] [-4 INTEGER] [-6 INTEGER] [-i INTEGER] [-o FILE]\n                 [-c INTEGER [INTEGER ...]] [-l STRING] [-r STRING] [-p] [-d]\n                 [-v]\n\nAnonip is a tool to anonymize IP-addresses in log files.\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -4 INTEGER, --ipv4mask INTEGER\n                        truncate the last n bits (default: 12)\n  -6 INTEGER, --ipv6mask INTEGER\n                        truncate the last n bits (default: 84)\n  -i INTEGER, --increment INTEGER\n                        increment the IP address by n (default: 0)\n  -o FILE, --output FILE\n                        file to write to\n  -c INTEGER [INTEGER ...], --column INTEGER [INTEGER ...]\n                        assume IP address is in column n (1-based indexed;\n                        default: 1)\n  -l STRING, --delimiter STRING\n                        log delimiter (default: \" \")\n  -r STRING, --replace STRING\n                        replacement string in case address parsing fails\n                        Example: 0.0.0.0)\n  -p, --skip-private    do not mask addresses in private ranges. See IANA\n                        Special-Purpose Address Registry.\n  -d, --debug           print debug messages\n  -v, --version         show program's version number and exit\n</code></pre>\n<h2>Usage</h2>\n<p>In the Apache configuration (or the one of a vhost) the log output needs to\nget piped to anonip:</p>\n<pre><code>CustomLog \"|/path/to/anonip.py [OPTIONS] --output /path/to/log\" combined\n</code></pre>\n<p>That's it! All the IP addresses will be masked in the log now.</p>\n<p>Alternative:</p>\n<pre><code>cat /path/to/orig_log | /path/to/anonip.py [OPTIONS] --output /path/to/log\n</code></pre>\n<h3>As a python module</h3>\n<p>Read from stdin:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">anonip</span> <span class=\"kn\">import</span> <span class=\"n\">Anonip</span>\n\n\n<span class=\"n\">anonip</span> <span class=\"o\">=</span> <span class=\"n\">Anonip</span><span class=\"p\">()</span>\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">anonip</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n</pre>\n<p>Manually feed lines:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">anonip</span> <span class=\"kn\">import</span> <span class=\"n\">Anonip</span>\n\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'1.1.1.1'</span><span class=\"p\">,</span> <span class=\"s1\">'2.2.2.2'</span><span class=\"p\">,</span> <span class=\"s1\">'3.3.3.3'</span><span class=\"p\">]</span>\n<span class=\"n\">anonip</span> <span class=\"o\">=</span> <span class=\"n\">Anonip</span><span class=\"p\">()</span>\n\n<span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">anonip</span><span class=\"o\">.</span><span class=\"n\">process_line</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">))</span>\n</pre>\n<h3>Python 2 or 3?</h3>\n<p>For compatibility reasons, anonip uses the shebang <code>#! /usr/bin/env python</code>.\nThis will default to python2 on all Linux distributions except for Arch Linux.\nThe performance of anonip can be improved by running it with python3. If\npython3 is available on your system, you should preferrably invoke anonip\nlike this:</p>\n<pre>python3 -m anonip <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre>\n<p>or</p>\n<pre>python3 /path/to/anonip.py <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span>\n</pre>\n<h2>Motivation</h2>\n<p>In most cases IP addresses are personal data as they refer to individuals (or at least\ntheir Internet connection). IP addresses - and the data associated with them - may\ntherefore only be lawfully processed in accordance with the principles of the\napplicable data protection laws.</p>\n<p>Storage of log files from web servers, for example, is only permitted within close time\nlimits or with the voluntary consent of the persons concerned (as long as the\ninformation about the IP address is linkable to a person).</p>\n<p>Anonip tries to avoid exactly that, but without losing the benefit of those log files.</p>\n<p>With the masking of the last bits of IP addresses, we're still able to distinguish the\nlog entries up to a certain degree. Compared to the entire removal of the IP-adresses,\nwe're still able to make a rough geolocating as well as a reverse DNS lookup. But the\notherwise distinct IP addresses do not match a particular individuum anymore.</p>\n\n          </div>"}, "last_serial": 5167734, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6cb1a90880447646d11a5c59520d8874", "sha256": "aee4f8cd73d2ba39caedc8d3dd79e1ca5adb093d6a168ac92f9d7bbc2f5943bb"}, "downloads": -1, "filename": "anonip-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6cb1a90880447646d11a5c59520d8874", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7595, "upload_time": "2019-04-20T12:21:12", "upload_time_iso_8601": "2019-04-20T12:21:12.371404Z", "url": "https://files.pythonhosted.org/packages/bc/45/746d2a1898d3acc85aac201c40c6fbbac370386a219d8ddbaee9109e2b8b/anonip-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f169b0bdb35abf9931d081a3a3384e0c", "sha256": "a2c1f521c02c800fa4dbd84d160e6cd748dcb49f17619116fab65de8ac4d7632"}, "downloads": -1, "filename": "anonip-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f169b0bdb35abf9931d081a3a3384e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7481, "upload_time": "2019-04-20T12:21:13", "upload_time_iso_8601": "2019-04-20T12:21:13.794290Z", "url": "https://files.pythonhosted.org/packages/72/a7/245675df9c53116198a2ef6cc9f4fd65f5eed5dea70b261db3fc447f4256/anonip-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6cb1a90880447646d11a5c59520d8874", "sha256": "aee4f8cd73d2ba39caedc8d3dd79e1ca5adb093d6a168ac92f9d7bbc2f5943bb"}, "downloads": -1, "filename": "anonip-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6cb1a90880447646d11a5c59520d8874", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7595, "upload_time": "2019-04-20T12:21:12", "upload_time_iso_8601": "2019-04-20T12:21:12.371404Z", "url": "https://files.pythonhosted.org/packages/bc/45/746d2a1898d3acc85aac201c40c6fbbac370386a219d8ddbaee9109e2b8b/anonip-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f169b0bdb35abf9931d081a3a3384e0c", "sha256": "a2c1f521c02c800fa4dbd84d160e6cd748dcb49f17619116fab65de8ac4d7632"}, "downloads": -1, "filename": "anonip-1.0.0.tar.gz", "has_sig": false, "md5_digest": "f169b0bdb35abf9931d081a3a3384e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7481, "upload_time": "2019-04-20T12:21:13", "upload_time_iso_8601": "2019-04-20T12:21:13.794290Z", "url": "https://files.pythonhosted.org/packages/72/a7/245675df9c53116198a2ef6cc9f4fd65f5eed5dea70b261db3fc447f4256/anonip-1.0.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:06 2020"}