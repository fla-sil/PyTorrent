{"info": {"author": "Dan Watson", "author_email": "dcwatson@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Database"], "description": "# dorm\n\n[![Build Status](https://travis-ci.org/dcwatson/dorm.svg?branch=master)](https://travis-ci.org/dcwatson/dorm)\n\nA small SQLite ORM for Python 3. You probably shouldn't use this, but if you want to anyway, `pip install dorm`\nand look at the [tests](https://github.com/dcwatson/dorm/blob/master/tests.py) for how to do so.\n\n\n## Migrations\n\nDorm has the most basic migration support imaginable:\n\n```\n# Generates a schema migration if it detects any changes.\npython -m dorm --db=books.db --models=project.models --migrations=project.migrations generate\n\n# Migrates to the latest migration (sorted by filename in the --migrations module).\npython -m dorm --db=books.db --models=project.models --migrations=project.migrations migrate\n```\n\nExisting migrations are run automatically when calling `dorm.setup` with the `migrations` argument set. This\nis to ensure a good first-run experience and automatic upgrades for end users. If `migrations` is not set,\nany detected schema changes will be applied automatically to the database.\n\n\n## Asynchronous Tables\n\nDorm can be used with `asyncio` by simply subclassing `AsyncTable` instead of `Table`. The `insert` class method,\nand `save` and `refresh` instance methods become coroutines in that case. Also, the `query` class method will return\nan `AsyncQuery` instance, with coroutines for `count`, `values`, `get`, `update`, and iteration via `__aiter__`\n(i.e. `async for obj in MyTable.query()`).\n\nMigrations and introspection still happen synchronously, since they tend not to happen during times where they would\nbenefit from being asyncronous.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dcwatson/dorm", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "dorm", "package_url": "https://pypi.org/project/dorm/", "platform": "", "project_url": "https://pypi.org/project/dorm/", "project_urls": {"Homepage": "https://github.com/dcwatson/dorm"}, "release_url": "https://pypi.org/project/dorm/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "A tiny SQLite ORM for Python.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>dorm</h1>\n<p><a href=\"https://travis-ci.org/dcwatson/dorm\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8adfa27dd0a8bcaf0256bf09007061984bbba4ff/68747470733a2f2f7472617669732d63692e6f72672f6463776174736f6e2f646f726d2e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A small SQLite ORM for Python 3. You probably shouldn't use this, but if you want to anyway, <code>pip install dorm</code>\nand look at the <a href=\"https://github.com/dcwatson/dorm/blob/master/tests.py\" rel=\"nofollow\">tests</a> for how to do so.</p>\n<h2>Migrations</h2>\n<p>Dorm has the most basic migration support imaginable:</p>\n<pre><code># Generates a schema migration if it detects any changes.\npython -m dorm --db=books.db --models=project.models --migrations=project.migrations generate\n\n# Migrates to the latest migration (sorted by filename in the --migrations module).\npython -m dorm --db=books.db --models=project.models --migrations=project.migrations migrate\n</code></pre>\n<p>Existing migrations are run automatically when calling <code>dorm.setup</code> with the <code>migrations</code> argument set. This\nis to ensure a good first-run experience and automatic upgrades for end users. If <code>migrations</code> is not set,\nany detected schema changes will be applied automatically to the database.</p>\n<h2>Asynchronous Tables</h2>\n<p>Dorm can be used with <code>asyncio</code> by simply subclassing <code>AsyncTable</code> instead of <code>Table</code>. The <code>insert</code> class method,\nand <code>save</code> and <code>refresh</code> instance methods become coroutines in that case. Also, the <code>query</code> class method will return\nan <code>AsyncQuery</code> instance, with coroutines for <code>count</code>, <code>values</code>, <code>get</code>, <code>update</code>, and iteration via <code>__aiter__</code>\n(i.e. <code>async for obj in MyTable.query()</code>).</p>\n<p>Migrations and introspection still happen synchronously, since they tend not to happen during times where they would\nbenefit from being asyncronous.</p>\n\n          </div>"}, "last_serial": 5563440, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "71549b71991caeccc8d26396f355d3e6", "sha256": "62c2bcb4ffd4cf92727d5a22fa24eca1bcfabbc64ef6eb3cfade0beb5918495c"}, "downloads": -1, "filename": "dorm-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "71549b71991caeccc8d26396f355d3e6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6517, "upload_time": "2019-04-17T00:22:12", "upload_time_iso_8601": "2019-04-17T00:22:12.020598Z", "url": "https://files.pythonhosted.org/packages/ef/70/e23fd06a57f1b8b008d03a02b0ba92c15dbab9202aa034be5ddf175c5280/dorm-0.1.0-py3-none-any.whl", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c9b1df2e7edd69ec210286ff05685c06", "sha256": "53020cbce5c0bd4f04fbca63689a2a130165375dbaa73fde6c00771aec423751"}, "downloads": -1, "filename": "dorm-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c9b1df2e7edd69ec210286ff05685c06", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7143, "upload_time": "2019-07-19T16:28:36", "upload_time_iso_8601": "2019-07-19T16:28:36.540436Z", "url": "https://files.pythonhosted.org/packages/68/b1/35ed4459ed6408202b0b44fb0cc8bce8c342816556dd92f2ef2099be3780/dorm-0.2.0-py3-none-any.whl", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e5c66576097ae6b0ef26724b39ffb290", "sha256": "2154713da2e0a25d17131b90dfa6017b8e61ad5bf9d4420749a7fad1d21300a7"}, "downloads": -1, "filename": "dorm-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e5c66576097ae6b0ef26724b39ffb290", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8063, "upload_time": "2019-07-20T00:58:31", "upload_time_iso_8601": "2019-07-20T00:58:31.339278Z", "url": "https://files.pythonhosted.org/packages/fa/b5/06ea52124a71ae972e3776c278bb260530ee687adf02fd453ec890fded2a/dorm-0.3.0-py3-none-any.whl", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8b69f6a4241689b4ac9e805113e06885", "sha256": "edbb10c6ce79cbff85a87b5829dc4e985c05db0a27391913ea9e50c7af111c53"}, "downloads": -1, "filename": "dorm-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b69f6a4241689b4ac9e805113e06885", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8169, "upload_time": "2019-07-21T13:45:54", "upload_time_iso_8601": "2019-07-21T13:45:54.946739Z", "url": "https://files.pythonhosted.org/packages/01/ee/9bd19729eb46f8ce1230c6787ac7ce782faaea8919e184e72a232dca934a/dorm-0.4.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b69f6a4241689b4ac9e805113e06885", "sha256": "edbb10c6ce79cbff85a87b5829dc4e985c05db0a27391913ea9e50c7af111c53"}, "downloads": -1, "filename": "dorm-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "8b69f6a4241689b4ac9e805113e06885", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8169, "upload_time": "2019-07-21T13:45:54", "upload_time_iso_8601": "2019-07-21T13:45:54.946739Z", "url": "https://files.pythonhosted.org/packages/01/ee/9bd19729eb46f8ce1230c6787ac7ce782faaea8919e184e72a232dca934a/dorm-0.4.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:50:17 2020"}