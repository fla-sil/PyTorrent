{"info": {"author": "Rayquaza01", "author_email": "rayquaza01@outlook.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "JoinPython\n==========\n\nA python script that allows for pushing to Join by Joaoapps from the\ncommand line.\n\n.. figure:: https://i.imgur.com/9Yv4YVl.gif\n   :alt: image\n\n   image\n\nRequires\n--------\n\n-  Python3\n-  A Join Account\n\nSetup\n-----\n\n-  Run ``pip3 install joinpython`` or\n   ``pip3 install git+https://github.com/Rayquaza01/JoinPython``\n-  Run ``join.py --setup`` to start the setup (optional)\n\nThe Config File\n~~~~~~~~~~~~~~~\n\n| If you run setup, a config file is created at ``~/JoinPython.json``\n  with your device and contact data. This allows you to omit certain\n  arguments (``--apikey``, ``--deviceId``, etc.) when running the\n  program.\n| If you have a file named ``JoinPython.json`` in your current\n  directory, it will be used instead of the one in your home folder.\n| You can choose to use a different config file with the ``--config``\n  option.\n\nSample config file:\n\n.. code:: json\n\n    {\n        \"version\": \"VERSION\",\n        \"apikey\": \"YOUR_API_KEY\",\n        \"default_device\": \"Phone\",\n        \"contacts\": {\n            \"Name 1\": \"5555555555\"\n        },\n        \"devices\": {\n            \"Phone\": \"PHONE_DEVICE_ID\",\n            \"Tablet\": \"TABLET_DEVICE_ID\"\n        }\n    }\n\nContacts Setup\n~~~~~~~~~~~~~~\n\n| The ``--smsnumber`` and ``--callnumber`` arguments take a phone number\n  to be used by Join. You can edit the config file\n  (``~/JoinPython.json``) with contact names to allow these arguments to\n  take a name instead.\n| The contacts section should look something like this:\n\n.. code:: json\n\n    {\n        \"Name 1\": \"5555555555\",\n        \"Name 2\": \"(555) 555-5555\",\n        \"Name 3\": \"+1 555.555.5555\"\n    }\n\n| The actual formatting of the numbers is unimportant; Join should be\n  able to handle most formats.\n| You can also use `this Tasker\n  task <https://raw.githubusercontent.com/Rayquaza01/JoinPython/master/ContactsGenerator.tsk.xml>`__\n  (`also available\n  here <https://taskernet.com/shares/?user=AS35m8ln60P2bw2QxMdurJqOe5aESjUdS8HTc0B35EGwTB2qVtotZiazaLMpwomX2PvkhnktwDQ%3D&id=Task%3AJoinPythonContactsGenerator>`__)\n  to pull the numbers from your phone's contacts (Requires Tasker,\n  AutoTools, and AutoContacts to run)\n\n``--smscontactname`` can be used instead of contact setup, but contact\nsetup is still required for ``--callnumber`` and ``--smsnumber``\n\nUsage\n-----\n\nRun ``join.py`` with arguments corresponding to what you want to do.\nArguments correspond directly to `the Join\nAPI <https://joaoapps.com/join/api/>`__ (Ex: The clipboard parameter is\n``--clipboard``). ``join.py --help`` gives a list of accepted arguments.\n\nIrregularities\n~~~~~~~~~~~~~~\n\n-  The ``deviceNames`` parameter is used when ``--deviceId`` is given a\n   comma separated list of names. ``deviceIds`` is never used.\n-  Including a comma anywhere in the ``--deviceId`` parameter will force\n   it to use ``deviceNames``, even if you only list one device.\n   ``join.py -d Phone -c test`` won't work without a config file, but\n   ``join.py -d Phone, -c test`` will.\n-  ``--deviceId`` can take device names (with a config file or comma),\n   groups (``group.android``, ``group.all``, etc.), or use an ID\n   directly.\n-  ``--deviceId`` can be ommitted if you provide a default device in the\n   config file.\n-  ``--apikey`` can take an API key or be ommitted to use the key in the\n   config file.\n-  ``--generateURL`` prints the Join API URL without actually calling\n   it.\n-  ``--config`` allows you to choose what config file to use\n\nAs a module\n~~~~~~~~~~~\n\n``joinpython.listDevices( apikey )``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nReturns a JSON object of devices from the Join API. It directly returns\nthe response of\n``https://joinjoaomgcd.appspot.com/_ah/api/registration/v1/listDevices``\n\n``joinpython.request( args )``\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n| Takes a dictionary of API parameters and sends them to Join.\n| If your arguments include the key ``generateURL``, it will return a\n  string of the Join URL instead of sending the request to Join.\n\nExample:\n\n.. code:: python\n\n    #!/usr/bin/env python3\n    import joinpython\n    args = {\n        \"deviceId\": \"DEVICE_ID_HERE\",\n        \"apikey\": \"API_KEY_HERE\",\n        \"clipboard\": \"Clipboard Text\",\n        \"find\": True\n    }\n    response = joinpython.request(args)\n\nOld Version\n-----------\n\n| The older (pre pip installation support) version is still available at\n  https://github.com/Rayquaza01/JoinPython/releases/tag/0.0.0\n| The main differences are:\n\n-  The older versions did not have version numbers\n-  The contact and device data was stored in two separate files\n-  The config file was stored in the installation directory, not the\n   home folder\n-  It can now be imported as a module without copying the join.py file\n-  Pip handles adding the script to the path automatically\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Rayquaza01/JoinPython", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "joinpython", "package_url": "https://pypi.org/project/joinpython/", "platform": "", "project_url": "https://pypi.org/project/joinpython/", "project_urls": {"Homepage": "https://github.com/Rayquaza01/JoinPython"}, "release_url": "https://pypi.org/project/joinpython/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "A python script that allows for pushing to Join by Joaoapps from the command line.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python script that allows for pushing to Join by Joaoapps from the\ncommand line.</p>\n<div>\n<img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03e06cb1a4d985366258a9aa58662dae0d2c80ef/68747470733a2f2f692e696d6775722e636f6d2f3959763459566c2e676966\">\n<p>image</p>\n</div>\n<div id=\"requires\">\n<h2>Requires</h2>\n<ul>\n<li>Python3</li>\n<li>A Join Account</li>\n</ul>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<ul>\n<li>Run <tt>pip3 install joinpython</tt> or\n<tt>pip3 install <span class=\"pre\">git+https://github.com/Rayquaza01/JoinPython</span></tt></li>\n<li>Run <tt>join.py <span class=\"pre\">--setup</span></tt> to start the setup (optional)</li>\n</ul>\n<div id=\"the-config-file\">\n<h3>The Config File</h3>\n<div>\n<div>If you run setup, a config file is created at <tt>~/JoinPython.json</tt>\nwith your device and contact data. This allows you to omit certain\narguments (<tt><span class=\"pre\">--apikey</span></tt>, <tt><span class=\"pre\">--deviceId</span></tt>, etc.) when running the\nprogram.</div>\n<div>If you have a file named <tt>JoinPython.json</tt> in your current\ndirectory, it will be used instead of the one in your home folder.</div>\n<div>You can choose to use a different config file with the <tt><span class=\"pre\">--config</span></tt>\noption.</div>\n</div>\n<p>Sample config file:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"version\"</span><span class=\"p\">:</span> <span class=\"s2\">\"VERSION\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"apikey\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_API_KEY\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"default_device\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Phone\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"contacts\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"Name 1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"5555555555\"</span>\n    <span class=\"p\">},</span>\n    <span class=\"nt\">\"devices\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"Phone\"</span><span class=\"p\">:</span> <span class=\"s2\">\"PHONE_DEVICE_ID\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"Tablet\"</span><span class=\"p\">:</span> <span class=\"s2\">\"TABLET_DEVICE_ID\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"contacts-setup\">\n<h3>Contacts Setup</h3>\n<div>\n<div>The <tt><span class=\"pre\">--smsnumber</span></tt> and <tt><span class=\"pre\">--callnumber</span></tt> arguments take a phone number\nto be used by Join. You can edit the config file\n(<tt>~/JoinPython.json</tt>) with contact names to allow these arguments to\ntake a name instead.</div>\n<div>The contacts section should look something like this:</div>\n</div>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"Name 1\"</span><span class=\"p\">:</span> <span class=\"s2\">\"5555555555\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"Name 2\"</span><span class=\"p\">:</span> <span class=\"s2\">\"(555) 555-5555\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"Name 3\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+1 555.555.5555\"</span>\n<span class=\"p\">}</span>\n</pre>\n<div>\n<div>The actual formatting of the numbers is unimportant; Join should be\nable to handle most formats.</div>\n<div>You can also use <a href=\"https://raw.githubusercontent.com/Rayquaza01/JoinPython/master/ContactsGenerator.tsk.xml\" rel=\"nofollow\">this Tasker\ntask</a>\n(<a href=\"https://taskernet.com/shares/?user=AS35m8ln60P2bw2QxMdurJqOe5aESjUdS8HTc0B35EGwTB2qVtotZiazaLMpwomX2PvkhnktwDQ%3D&amp;id=Task%3AJoinPythonContactsGenerator\" rel=\"nofollow\">also available\nhere</a>)\nto pull the numbers from your phone\u2019s contacts (Requires Tasker,\nAutoTools, and AutoContacts to run)</div>\n</div>\n<p><tt><span class=\"pre\">--smscontactname</span></tt> can be used instead of contact setup, but contact\nsetup is still required for <tt><span class=\"pre\">--callnumber</span></tt> and <tt><span class=\"pre\">--smsnumber</span></tt></p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Run <tt>join.py</tt> with arguments corresponding to what you want to do.\nArguments correspond directly to <a href=\"https://joaoapps.com/join/api/\" rel=\"nofollow\">the Join\nAPI</a> (Ex: The clipboard parameter is\n<tt><span class=\"pre\">--clipboard</span></tt>). <tt>join.py <span class=\"pre\">--help</span></tt> gives a list of accepted arguments.</p>\n<div id=\"irregularities\">\n<h3>Irregularities</h3>\n<ul>\n<li>The <tt>deviceNames</tt> parameter is used when <tt><span class=\"pre\">--deviceId</span></tt> is given a\ncomma separated list of names. <tt>deviceIds</tt> is never used.</li>\n<li>Including a comma anywhere in the <tt><span class=\"pre\">--deviceId</span></tt> parameter will force\nit to use <tt>deviceNames</tt>, even if you only list one device.\n<tt>join.py <span class=\"pre\">-d</span> Phone <span class=\"pre\">-c</span> test</tt> won\u2019t work without a config file, but\n<tt>join.py <span class=\"pre\">-d</span> Phone, <span class=\"pre\">-c</span> test</tt> will.</li>\n<li><tt><span class=\"pre\">--deviceId</span></tt> can take device names (with a config file or comma),\ngroups (<tt>group.android</tt>, <tt>group.all</tt>, etc.), or use an ID\ndirectly.</li>\n<li><tt><span class=\"pre\">--deviceId</span></tt> can be ommitted if you provide a default device in the\nconfig file.</li>\n<li><tt><span class=\"pre\">--apikey</span></tt> can take an API key or be ommitted to use the key in the\nconfig file.</li>\n<li><tt><span class=\"pre\">--generateURL</span></tt> prints the Join API URL without actually calling\nit.</li>\n<li><tt><span class=\"pre\">--config</span></tt> allows you to choose what config file to use</li>\n</ul>\n</div>\n<div id=\"as-a-module\">\n<h3>As a module</h3>\n<div id=\"joinpython-listdevices-apikey\">\n<h4><tt>joinpython.listDevices( apikey )</tt></h4>\n<p>Returns a JSON object of devices from the Join API. It directly returns\nthe response of\n<tt><span class=\"pre\">https://joinjoaomgcd.appspot.com/_ah/api/registration/v1/listDevices</span></tt></p>\n</div>\n<div id=\"joinpython-request-args\">\n<h4><tt>joinpython.request( args )</tt></h4>\n<div>\n<div>Takes a dictionary of API parameters and sends them to Join.</div>\n<div>If your arguments include the key <tt>generateURL</tt>, it will return a\nstring of the Join URL instead of sending the request to Join.</div>\n</div>\n<p>Example:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python3</span>\n<span class=\"kn\">import</span> <span class=\"nn\">joinpython</span>\n<span class=\"n\">args</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s2\">\"deviceId\"</span><span class=\"p\">:</span> <span class=\"s2\">\"DEVICE_ID_HERE\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"apikey\"</span><span class=\"p\">:</span> <span class=\"s2\">\"API_KEY_HERE\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"clipboard\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Clipboard Text\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"find\"</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n<span class=\"p\">}</span>\n<span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">joinpython</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">args</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"old-version\">\n<h2>Old Version</h2>\n<div>\n<div>The older (pre pip installation support) version is still available at\n<a href=\"https://github.com/Rayquaza01/JoinPython/releases/tag/0.0.0\" rel=\"nofollow\">https://github.com/Rayquaza01/JoinPython/releases/tag/0.0.0</a></div>\n<div>The main differences are:</div>\n</div>\n<ul>\n<li>The older versions did not have version numbers</li>\n<li>The contact and device data was stored in two separate files</li>\n<li>The config file was stored in the installation directory, not the\nhome folder</li>\n<li>It can now be imported as a module without copying the join.py file</li>\n<li>Pip handles adding the script to the path automatically</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5663864, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "d2709df649154a203f3c7beae38171d0", "sha256": "e8411ab4001cfe68d70d9b85cdbe92ab0231a746802e43ca902789e55dcbf8e2"}, "downloads": -1, "filename": "joinpython-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d2709df649154a203f3c7beae38171d0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8493, "upload_time": "2018-12-11T23:14:27", "upload_time_iso_8601": "2018-12-11T23:14:27.272217Z", "url": "https://files.pythonhosted.org/packages/af/8f/b8de77b6a0ce8ae0d35cc64bddf18b15298fd6b539dd1cc91ef0a80b2603/joinpython-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4e0b8ae9b154791233af49156938b09e", "sha256": "35b35c715780a5c45e07945199f62db9345fc53cbc892211909c5b8efabd170b"}, "downloads": -1, "filename": "joinpython-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4e0b8ae9b154791233af49156938b09e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5741, "upload_time": "2018-12-11T23:14:29", "upload_time_iso_8601": "2018-12-11T23:14:29.179754Z", "url": "https://files.pythonhosted.org/packages/c1/95/cc8076fbbde8550b76e1c43c0fc136dcf5f5a713c945f5fc62ea1b2ca984/joinpython-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3d670aa1005be5a3eaea0763ad51c74a", "sha256": "438463075ad0913b64e9932d38ee3ca80bf2afeac9f26cd0909121bb1fb16c6d"}, "downloads": -1, "filename": "joinpython-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3d670aa1005be5a3eaea0763ad51c74a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8140, "upload_time": "2019-08-12T03:30:02", "upload_time_iso_8601": "2019-08-12T03:30:02.450791Z", "url": "https://files.pythonhosted.org/packages/33/45/6180b3f8a8cd0b9372ee2b4e249feacb42506fd75786bf7ce6cbc408d17f/joinpython-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aec11910f1e8be5c6f82505ac1d6690", "sha256": "937392012336a42904bd767bbb611abcfe0d45d4fe4b3168f10de6933d69d083"}, "downloads": -1, "filename": "joinpython-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3aec11910f1e8be5c6f82505ac1d6690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7587, "upload_time": "2019-08-12T03:30:04", "upload_time_iso_8601": "2019-08-12T03:30:04.048755Z", "url": "https://files.pythonhosted.org/packages/49/32/8bef04faa183add1420974859e5821389d0f36c79f780fe9e29b67b37107/joinpython-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d670aa1005be5a3eaea0763ad51c74a", "sha256": "438463075ad0913b64e9932d38ee3ca80bf2afeac9f26cd0909121bb1fb16c6d"}, "downloads": -1, "filename": "joinpython-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3d670aa1005be5a3eaea0763ad51c74a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8140, "upload_time": "2019-08-12T03:30:02", "upload_time_iso_8601": "2019-08-12T03:30:02.450791Z", "url": "https://files.pythonhosted.org/packages/33/45/6180b3f8a8cd0b9372ee2b4e249feacb42506fd75786bf7ce6cbc408d17f/joinpython-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3aec11910f1e8be5c6f82505ac1d6690", "sha256": "937392012336a42904bd767bbb611abcfe0d45d4fe4b3168f10de6933d69d083"}, "downloads": -1, "filename": "joinpython-1.0.2.tar.gz", "has_sig": false, "md5_digest": "3aec11910f1e8be5c6f82505ac1d6690", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7587, "upload_time": "2019-08-12T03:30:04", "upload_time_iso_8601": "2019-08-12T03:30:04.048755Z", "url": "https://files.pythonhosted.org/packages/49/32/8bef04faa183add1420974859e5821389d0f36c79f780fe9e29b67b37107/joinpython-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:16 2020"}