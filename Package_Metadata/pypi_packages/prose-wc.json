{"info": {"author": "Madison Scott-Clary", "author_email": "makyo@drab-makyo.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Artistic Software", "Topic :: Text Processing", "Topic :: Utilities"], "description": "prose-wc\n========\n\n|Build Status| |Coverage Status| |PyPI|\n\nA prose- and Jekyll-aware wordcount utility.\n\nAbout\n-----\n\nGiven the proliferation of Markdown and the use of Jekyll as a blogging\nplatform, the builtin ``wc`` utility came up short.  Even for plain-text\nprose, ``wc`` can leave much to be desired.  To that end, ``prose-wc`` will\ncalculate proper word, paragraph, and character counts for a given plaintext,\nor markdown file or stream through STDIN.\n\nAlso, Madison wanted to learn how to package for PyPI.\n\nInstalling\n----------\n\n::\n\n    pip install prose-wc\n\nRunning\n-------\n\n::\n\n    usage: prose-wc [-h] [-S] [-u] [-f [{yaml,json,default}]] [-i [INDENT]] file\n\n    Compute Jekyl- and prose-aware wordcounts\n\n    positional arguments:\n      file                  file to count (or - for STDIN)\n\n    optional arguments:\n      -h, --help            show this help message and exit\n      -S, --split-hyphens   split hyphenated words rather than counting them as\n                            one word (\"non-trivial\" counts as two words rather\n                            than one)\n      -u, --update          update the jekyll file in place with the counts. Does\n                            nothing if the file is not a Jekyll markdown file.\n                            Implies format=yaml, invalid with input from STDIN and\n                            non-Jekyll files.\n      -f [{yaml,json,default}], --format [{yaml,json,default}]\n                            output format.\n      -i [INDENT], --indent [INDENT]\n                            indentation depth (default: 4).\n\n    Accepted filetypes: plaintext, markdown, markdown (Jekyll)\n\nRunning ``prose-wc`` against a file will generate a series of counts\nthat might be of use. You can get these counts in a simple,\ntab-separated format, JSON, or YAML. If you're working with a Jekyll\nmarkdown file, you can also choose to have this data embedded in the\nfrontmatter as YAML.\n\nOther filetypes\n---------------\n\nYou can use `pandoc <http://pandoc.org>`__ to convert your file and pipe\nit into prose-wc:\n\n::\n\n    pandoc -f latex -t plain my_great_story.tex | prose-wc -\n\nIn a Jekyll site\n----------------\n\nYou can add wordcount information to your site by running ``prose-wc -u\n<file>``, which will update the Jekyll frontmatter to include the results in\nYAML format.  This data can then be included on the page in some place handy such as at the top of a post in ``_layouts/post.html`` with:\n\n.. code:: liquid\n\n    {% if page.counts %}\n        <p class=\"text-muted small\">\n            {{ page.counts.paragraphs }} {% if page.counts.paragraphs == 1 %}paragraph{% else %}paragraphs{% endif %} &bullet;\n            {{ page.counts.words }} words\n        </p>\n    {% endif %}\n\nThis would result in something like\n`this <http://writing.drab-makyo.com/posts/tasting/2016/09/17/teas-of-late/>`__.\n\nYou can add wordcounts to posts with a find command like:\n\n::\n\n    find . \\( -name '*.md' -or -name '*.markdown' \\) -exec prose-wc -u \"{}\" \\;\n\nFurther information\n-------------------\n\nSource, issues, and further information:\n  `GitHub <https://github.com/makyo/prose-wc>`__\nAuthor\n  `Madison Scott-Clary <http://drab-makyo.com>`__\n\n.. |Build Status| image:: https://travis-ci.org/makyo/prose-wc.svg?branch=master\n   :target: https://travis-ci.org/makyo/prose-wc\n.. |Coverage Status| image:: https://coveralls.io/repos/github/makyo/prose-wc/badge.svg?branch=master\n   :target: https://coveralls.io/github/makyo/prose-wc?branch=master\n.. |PyPI| image:: https://img.shields.io/pypi/v/prose-wc.svg\n   :target: https://pypi.python.org/pypi/prose-wc/\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/makyo/prose-wc", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "prose-wc", "package_url": "https://pypi.org/project/prose-wc/", "platform": "", "project_url": "https://pypi.org/project/prose-wc/", "project_urls": {"Homepage": "https://github.com/makyo/prose-wc"}, "release_url": "https://pypi.org/project/prose-wc/0.3.4/", "requires_dist": null, "requires_python": "", "summary": "Jekyll-aware prose wordcount utility", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/makyo/prose-wc\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b890dd6c314ba1ea12bb7ad21c0dde63023b255/68747470733a2f2f7472617669732d63692e6f72672f6d616b796f2f70726f73652d77632e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/makyo/prose-wc?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c6475de1c88ff9013822b5cebbd7168f7a36802a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6d616b796f2f70726f73652d77632f62616467652e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/prose-wc/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8fe853939a940977a50e9a82630ce34886e0fe89/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70726f73652d77632e737667\"></a></p>\n<p>A prose- and Jekyll-aware wordcount utility.</p>\n<div id=\"about\">\n<h2>About</h2>\n<p>Given the proliferation of Markdown and the use of Jekyll as a blogging\nplatform, the builtin <tt>wc</tt> utility came up short.  Even for plain-text\nprose, <tt>wc</tt> can leave much to be desired.  To that end, <tt><span class=\"pre\">prose-wc</span></tt> will\ncalculate proper word, paragraph, and character counts for a given plaintext,\nor markdown file or stream through STDIN.</p>\n<p>Also, Madison wanted to learn how to package for PyPI.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<pre>pip install prose-wc\n</pre>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<pre>usage: prose-wc [-h] [-S] [-u] [-f [{yaml,json,default}]] [-i [INDENT]] file\n\nCompute Jekyl- and prose-aware wordcounts\n\npositional arguments:\n  file                  file to count (or - for STDIN)\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -S, --split-hyphens   split hyphenated words rather than counting them as\n                        one word (\"non-trivial\" counts as two words rather\n                        than one)\n  -u, --update          update the jekyll file in place with the counts. Does\n                        nothing if the file is not a Jekyll markdown file.\n                        Implies format=yaml, invalid with input from STDIN and\n                        non-Jekyll files.\n  -f [{yaml,json,default}], --format [{yaml,json,default}]\n                        output format.\n  -i [INDENT], --indent [INDENT]\n                        indentation depth (default: 4).\n\nAccepted filetypes: plaintext, markdown, markdown (Jekyll)\n</pre>\n<p>Running <tt><span class=\"pre\">prose-wc</span></tt> against a file will generate a series of counts\nthat might be of use. You can get these counts in a simple,\ntab-separated format, JSON, or YAML. If you\u2019re working with a Jekyll\nmarkdown file, you can also choose to have this data embedded in the\nfrontmatter as YAML.</p>\n</div>\n<div id=\"other-filetypes\">\n<h2>Other filetypes</h2>\n<p>You can use <a href=\"http://pandoc.org\" rel=\"nofollow\">pandoc</a> to convert your file and pipe\nit into prose-wc:</p>\n<pre>pandoc -f latex -t plain my_great_story.tex | prose-wc -\n</pre>\n</div>\n<div id=\"in-a-jekyll-site\">\n<h2>In a Jekyll site</h2>\n<p>You can add wordcount information to your site by running <tt><span class=\"pre\">prose-wc</span> <span class=\"pre\">-u</span>\n&lt;file&gt;</tt>, which will update the Jekyll frontmatter to include the results in\nYAML format.  This data can then be included on the page in some place handy such as at the top of a post in <tt>_layouts/post.html</tt> with:</p>\n<pre><span class=\"p\">{%</span><span class=\"w\"> </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">page</span><span class=\"p\">.</span><span class=\"nv\">counts</span><span class=\"w\"> </span><span class=\"p\">%}</span>\n    &lt;p class=\"text-muted small\"&gt;\n        <span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"nv\">page</span><span class=\"p\">.</span><span class=\"nv\">counts</span><span class=\"p\">.</span><span class=\"nv\">paragraphs</span><span class=\"w\"> </span><span class=\"p\">}}</span> <span class=\"p\">{%</span><span class=\"w\"> </span><span class=\"kr\">if</span><span class=\"w\"> </span><span class=\"nv\">page</span><span class=\"p\">.</span><span class=\"nv\">counts</span><span class=\"p\">.</span><span class=\"nv\">paragraphs</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"w\"> </span><span class=\"p\">%}</span><span class=\"nv\">paragraph</span><span class=\"err\">{%</span><span class=\"w\"> </span><span class=\"nv\">else</span><span class=\"w\"> </span><span class=\"p\">%}</span>paragraphs<span class=\"p\">{%</span><span class=\"w\"> </span><span class=\"kr\">endif</span><span class=\"w\"> </span><span class=\"p\">%}</span> &amp;bullet;\n        <span class=\"p\">{{</span><span class=\"w\"> </span><span class=\"nv\">page</span><span class=\"p\">.</span><span class=\"nv\">counts</span><span class=\"p\">.</span><span class=\"nv\">words</span><span class=\"w\"> </span><span class=\"p\">}}</span> words\n    &lt;/p&gt;\n<span class=\"p\">{%</span><span class=\"w\"> </span><span class=\"kr\">endif</span><span class=\"w\"> </span><span class=\"p\">%}</span>\n</pre>\n<p>This would result in something like\n<a href=\"http://writing.drab-makyo.com/posts/tasting/2016/09/17/teas-of-late/\" rel=\"nofollow\">this</a>.</p>\n<p>You can add wordcounts to posts with a find command like:</p>\n<pre>find . \\( -name '*.md' -or -name '*.markdown' \\) -exec prose-wc -u \"{}\" \\;\n</pre>\n</div>\n<div id=\"further-information\">\n<h2>Further information</h2>\n<dl>\n<dt>Source, issues, and further information:</dt>\n<dd><a href=\"https://github.com/makyo/prose-wc\" rel=\"nofollow\">GitHub</a></dd>\n<dt>Author</dt>\n<dd><a href=\"http://drab-makyo.com\" rel=\"nofollow\">Madison Scott-Clary</a></dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 3422305, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "cc1b2cb1153e3f437760b2511ed7529b", "sha256": "a24c9ac98594a228f03b65ac201e75f92399dd85620ba2e4d652c0ba6607ae83"}, "downloads": -1, "filename": "prose-wc-0.1.tar.gz", "has_sig": false, "md5_digest": "cc1b2cb1153e3f437760b2511ed7529b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3731, "upload_time": "2016-11-09T00:01:40", "upload_time_iso_8601": "2016-11-09T00:01:40.640149Z", "url": "https://files.pythonhosted.org/packages/c5/15/88f18980559e4e8d812737e625b22e651b575b4c7a1ecb7a0eb19d240eca/prose-wc-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a691486e56a0c2caf3c1ac1506b66207", "sha256": "4473e6b6f4a1e699f22b92778ecc5886827efb4ad0677944a627ef0dd1de03ae"}, "downloads": -1, "filename": "prose-wc-0.2.tar.gz", "has_sig": false, "md5_digest": "a691486e56a0c2caf3c1ac1506b66207", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5237, "upload_time": "2016-11-10T05:11:58", "upload_time_iso_8601": "2016-11-10T05:11:58.979743Z", "url": "https://files.pythonhosted.org/packages/5c/02/5972cacab03f76c43fd89504e8897b99392e12522769b5f2e693079f0c04/prose-wc-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5eaf9070f0ab2f33dc5dee7559381c56", "sha256": "32ad1ea08579d94e10b82aab9534f6a109643fb9f709f7139c9002876dd3ac24"}, "downloads": -1, "filename": "prose-wc-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5eaf9070f0ab2f33dc5dee7559381c56", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6924, "upload_time": "2016-11-10T15:51:41", "upload_time_iso_8601": "2016-11-10T15:51:41.448909Z", "url": "https://files.pythonhosted.org/packages/a0/80/295493742fb33e07a6d4b8d80a7427e4d654f9066fe49eaa280663d6bed9/prose-wc-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "26162babc512e27abd31583b1140c188", "sha256": "d8a57f7b6223b57001da2a34a4334053f98d06c11c72bcd747bbe173b1684652"}, "downloads": -1, "filename": "prose-wc-0.3.0.tar.gz", "has_sig": false, "md5_digest": "26162babc512e27abd31583b1140c188", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7023, "upload_time": "2016-11-10T20:04:48", "upload_time_iso_8601": "2016-11-10T20:04:48.920293Z", "url": "https://files.pythonhosted.org/packages/9d/3d/2ff90473dd6a3b23462da3a1d9a3a40f8443bc4b9d9a5f346a672dcf5eaa/prose-wc-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "253248c0eb6e8f0c1a95a19a57d7e363", "sha256": "6d38c9fd928b55b5879df3ede9535a08767500a8c60a6d43c92b678c97f1cb30"}, "downloads": -1, "filename": "prose-wc-0.3.1.tar.gz", "has_sig": false, "md5_digest": "253248c0eb6e8f0c1a95a19a57d7e363", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7073, "upload_time": "2016-11-10T21:01:30", "upload_time_iso_8601": "2016-11-10T21:01:30.316980Z", "url": "https://files.pythonhosted.org/packages/20/cc/674435322289eedbb1f34e5a9c4b3b80edde6651ab024fdd316a9f1b02a1/prose-wc-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "4c73111425167524d6e13cbfa3408524", "sha256": "cf753dade87c0812ddc7f48cc645c4aa7f3f70ffc1632b9a875f38f830e6a9d9"}, "downloads": -1, "filename": "prose-wc-0.3.2.tar.gz", "has_sig": false, "md5_digest": "4c73111425167524d6e13cbfa3408524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7102, "upload_time": "2017-12-05T22:33:27", "upload_time_iso_8601": "2017-12-05T22:33:27.983170Z", "url": "https://files.pythonhosted.org/packages/89/9e/04aa837158013a372eb53546822b86d852ba26ab5354462bbf87af9c9218/prose-wc-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "460cb13cf842b07d993282135f1fe179", "sha256": "64edfe0172d4bf94d9095ca8622a686331ad3a50cde5048ae20158f9e6357559"}, "downloads": -1, "filename": "prose-wc-0.3.3.tar.gz", "has_sig": false, "md5_digest": "460cb13cf842b07d993282135f1fe179", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7091, "upload_time": "2017-12-05T22:38:07", "upload_time_iso_8601": "2017-12-05T22:38:07.219460Z", "url": "https://files.pythonhosted.org/packages/13/2e/56470765b839f0378443d109c4ca4977ef0b9fc004730c96910c80d08021/prose-wc-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "4c63ead38eee728eb9986b62d9a3d81d", "sha256": "e2259343d96de0d3672163582d087432fbdf34c499951e6189227685e1e5ce73"}, "downloads": -1, "filename": "prose-wc-0.3.4.tar.gz", "has_sig": false, "md5_digest": "4c63ead38eee728eb9986b62d9a3d81d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7070, "upload_time": "2017-12-16T22:34:50", "upload_time_iso_8601": "2017-12-16T22:34:50.695879Z", "url": "https://files.pythonhosted.org/packages/a0/99/e5ec5f737636f278a1355fc3e713a24666b7281bae6ccfe4530d8d066eef/prose-wc-0.3.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4c63ead38eee728eb9986b62d9a3d81d", "sha256": "e2259343d96de0d3672163582d087432fbdf34c499951e6189227685e1e5ce73"}, "downloads": -1, "filename": "prose-wc-0.3.4.tar.gz", "has_sig": false, "md5_digest": "4c63ead38eee728eb9986b62d9a3d81d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7070, "upload_time": "2017-12-16T22:34:50", "upload_time_iso_8601": "2017-12-16T22:34:50.695879Z", "url": "https://files.pythonhosted.org/packages/a0/99/e5ec5f737636f278a1355fc3e713a24666b7281bae6ccfe4530d8d066eef/prose-wc-0.3.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:49 2020"}