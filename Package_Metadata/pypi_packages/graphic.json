{"info": {"author": "chuter", "author_email": "topgun.chuter@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: Chinese (Simplified)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "=========================\nGraphic\n=========================\n\n|Pypi Release| |Python Version| |Build Status| |Coverage Status|\n=========================================================================\n\n\nThe target of this project is:\n**More pythonic, humanize way to play with graph model**\n\n------------\n\nInstall\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block:: bash\n\n    pip install graphic\n\n\n\nBasic Example\n\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\n\n.. code-block:: python\n\n    >>>from graphic import use_neo4j\n    >>>neo4j = use_neo4j()\n    >>>boss = graphic.node('Boss', uid=1234)._as('b')\n    >>>geek = graphic.node('Geek', uid=2345)._as('g')\n    >>>neo4j.push(graphic.relationship(boss, geek, 'WORKTAT', startat=3432432)\n    >>>q = graphic.node().filter(id__gt=123).select('id')\n    >>>graph = neo4j.fetch(q)\n    >>>from graphic.query.func import avg\n    >>>q = graphic.node().select(avg('uid')).order_by('-id').limit(10)\n\n\n\n.. |Pypi Release| image:: https://img.shields.io/pypi/v/graphic.svg\n.. |Python Version| image:: https://img.shields.io/pypi/pyversions/graphic.svg\n.. |Build Status| image:: https://travis-ci.org/chuter/graphic.svg?branch=master\n.. |Coverage Status| image:: https://codecov.io/gh/chuter/graphic/branch/master/graph/badge.svg\n  :target: https://codecov.io/gh/chuter/graphic", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/chuter/graphic", "keywords": "graph,neo4j,graph algorithms,client", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "graphic", "package_url": "https://pypi.org/project/graphic/", "platform": "", "project_url": "https://pypi.org/project/graphic/", "project_urls": {"Homepage": "https://github.com/chuter/graphic"}, "release_url": "https://pypi.org/project/graphic/1.0.0a6/", "requires_dist": null, "requires_python": ">=3.4", "summary": "More phthonic, humanize way to play with graphdb", "version": "1.0.0a6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The target of this project is:\n<strong>More pythonic, humanize way to play with graph model</strong></p>\n<hr class=\"docutils\">\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install graphic\n</pre>\n</div>\n<div id=\"basic-example\">\n<h2>Basic Example</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span><span class=\"kn\">from</span> <span class=\"nn\">graphic</span> <span class=\"kn\">import</span> <span class=\"n\">use_neo4j</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">neo4j</span> <span class=\"o\">=</span> <span class=\"n\">use_neo4j</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">boss</span> <span class=\"o\">=</span> <span class=\"n\">graphic</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"s1\">'Boss'</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"mi\">1234</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">_as</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">geek</span> <span class=\"o\">=</span> <span class=\"n\">graphic</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">(</span><span class=\"s1\">'Geek'</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"o\">=</span><span class=\"mi\">2345</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">_as</span><span class=\"p\">(</span><span class=\"s1\">'g'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">neo4j</span><span class=\"o\">.</span><span class=\"n\">push</span><span class=\"p\">(</span><span class=\"n\">graphic</span><span class=\"o\">.</span><span class=\"n\">relationship</span><span class=\"p\">(</span><span class=\"n\">boss</span><span class=\"p\">,</span> <span class=\"n\">geek</span><span class=\"p\">,</span> <span class=\"s1\">'WORKTAT'</span><span class=\"p\">,</span> <span class=\"n\">startat</span><span class=\"o\">=</span><span class=\"mi\">3432432</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">graphic</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">id__gt</span><span class=\"o\">=</span><span class=\"mi\">123</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">graph</span> <span class=\"o\">=</span> <span class=\"n\">neo4j</span><span class=\"o\">.</span><span class=\"n\">fetch</span><span class=\"p\">(</span><span class=\"n\">q</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"kn\">from</span> <span class=\"nn\">graphic.query.func</span> <span class=\"kn\">import</span> <span class=\"n\">avg</span>\n<span class=\"o\">&gt;&gt;&gt;</span><span class=\"n\">q</span> <span class=\"o\">=</span> <span class=\"n\">graphic</span><span class=\"o\">.</span><span class=\"n\">node</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"n\">avg</span><span class=\"p\">(</span><span class=\"s1\">'uid'</span><span class=\"p\">))</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"s1\">'-id'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">limit</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4505991, "releases": {"1.0.0a3": [{"comment_text": "", "digests": {"md5": "9b382731b9603c18e6b89ff75cbad888", "sha256": "9d75fc1cf5e2252752d01f99b5f02fc3ec4a41efdd56080cae719be1f728cab4"}, "downloads": -1, "filename": "graphic-1.0.0a3.tar.gz", "has_sig": false, "md5_digest": "9b382731b9603c18e6b89ff75cbad888", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 44917, "upload_time": "2018-11-05T05:47:51", "upload_time_iso_8601": "2018-11-05T05:47:51.682170Z", "url": "https://files.pythonhosted.org/packages/88/44/34179aab7b5f0842805829195ab21516a0811998d58af2ab1b2cc741b4d9/graphic-1.0.0a3.tar.gz", "yanked": false}], "1.0.0a5": [{"comment_text": "", "digests": {"md5": "ca975870b7926c3c0180dd99bfe0f97f", "sha256": "28f14b40e6e1150e0ebc8c2603cb398b77416de56a83e2135557a6e0e84c1f26"}, "downloads": -1, "filename": "graphic-1.0.0a5.tar.gz", "has_sig": false, "md5_digest": "ca975870b7926c3c0180dd99bfe0f97f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 54145, "upload_time": "2018-11-13T10:34:50", "upload_time_iso_8601": "2018-11-13T10:34:50.928651Z", "url": "https://files.pythonhosted.org/packages/65/f6/34eb667fb2e392796bb487a178653949b0767209d2a9ae824522afb1b3a4/graphic-1.0.0a5.tar.gz", "yanked": false}], "1.0.0a6": [{"comment_text": "", "digests": {"md5": "51eca67a853e6c16efee143d181258aa", "sha256": "a72cf01829ce7c34a461b299df206280a7ed23cb1e234c0e5072352b0c60a58b"}, "downloads": -1, "filename": "graphic-1.0.0a6.tar.gz", "has_sig": false, "md5_digest": "51eca67a853e6c16efee143d181258aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 57211, "upload_time": "2018-11-20T06:22:00", "upload_time_iso_8601": "2018-11-20T06:22:00.954944Z", "url": "https://files.pythonhosted.org/packages/3e/d9/728d7edf5a922a44533ec187663c4d12900647baeb2c08282aa6e6fa084b/graphic-1.0.0a6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "51eca67a853e6c16efee143d181258aa", "sha256": "a72cf01829ce7c34a461b299df206280a7ed23cb1e234c0e5072352b0c60a58b"}, "downloads": -1, "filename": "graphic-1.0.0a6.tar.gz", "has_sig": false, "md5_digest": "51eca67a853e6c16efee143d181258aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.4", "size": 57211, "upload_time": "2018-11-20T06:22:00", "upload_time_iso_8601": "2018-11-20T06:22:00.954944Z", "url": "https://files.pythonhosted.org/packages/3e/d9/728d7edf5a922a44533ec187663c4d12900647baeb2c08282aa6e6fa084b/graphic-1.0.0a6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:40 2020"}