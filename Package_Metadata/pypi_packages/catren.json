{"info": {"author": "Martin Skarzynski", "author_email": "marskar@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# The `catren` python package\n\nUsing `catren` you can create and render [R markdown files](https://rmarkdown.rstudio.com/) in\n- your terminal or\n- your favorite Python environment (e.g. [PyCharm](https://www.jetbrains.com/pycharm/) or [Visual Studio Code](https://code.visualstudio.com/docs/python/python-tutorial)).\n\nThe `catren` python package consists of 4 functions:\n- `catrmd`, which con**cat**enates input files to output an [R Markdown](https://rmarkdown.rstudio.com/authoring_quick_tour.html) (Rmd) file.\n- `render`, which calls `rmarkdown::render` to create various output files (e.g. HTML documents).\n- `catren`, which combines the functionality of **cat**rmd and **ren**der.\n- `rmdtor`, which uses `knitr::purl` to convert an Rmd into an R script.\n\nAll of the above function work for Python _and_ R code, except `rmdtor` which skips Python chunks.\n\nTo run Rmd files that include R and Python code, you will need the `reticulate` R package.\n\nThe functions that begin with `r` (`render` and `rmdtor`) rely on the `rmarkdown` and `knitr`,\nR packages written by [Yihui Xie](https://yihui.name/en/about/).\nThe `catrmd` function has no dependencies beyond Python,\nall other functions (`render`, `catren`, and `rmdtor`) require R.\n\n## Installation\n\n```sh\npip install catren\n```\n\nor clone the [repo](https://github.com/marskar/catren), e.g. `git clone https://github.com/marskar/catren` and either use locally, e.g. `python catren.py header.yml README.md plot.py notes.txt` or install using setup.py, e.g. `python setup.py install`.\n\n## Basic usage: terminal\n\n### Creating an R markdown file with `catrmd` in the terminal\n\nThe `catrmd` functions works like `nbuild`. Provide all of the source files as arguments, e.g.\n\n```sh\ncatrmd header.yml intro.md letters.R notes.txt plot.py\n```\n\nThe default output filename for `catrmd` is `cat.Rmd`. By default, input and output files are located in the current directory (`'./'`).\n\nYou can provide a more descriptive filename for the unrendered Rmd (`-u`) and set different input  (`-i`) and output  (`-o`) filepaths:\n\n```sh\ncatrmd header.yml intro.md letters.R notes.txt plot.py --unrendered raw.Rmd --output_path rmarkdown/\n# Or\ncatrmd header.yml intro.md letters.R notes.txt plot.py -u raw.Rmd -o rmarkdown/\n```\n\nIf want to later output an R notebook using [RStudio](https://rmarkdown.rstudio.com/r_notebooks), your YAML header should include `html_notebook` as an output type (Hint: press ctrl/cmd+Shift+K).\n\n```yaml\n---\ntitle: \"Untitled\"\noutput: html_notebook\n---\n```\n\nThe `render` function from the `rmarkdown` R package allows you to specify the output type on the fly with the `output_format` argument.\n\n## Basic usage: python environment\n\n```python\n# You can import any or all of the functions from the catren package.\n\n# You can also import each function individually\nfrom catren import catrmd\nfrom catren import render\nfrom catren import catren\nfrom catren import rmdtor\n\n# The above imports all 4 functions\n# This can also be done with either of the two lines below.\nfrom catren import nbuild, nbexec, nbless, catrmd\nfrom catren import *\n\n# Another alternative is to import the package and use it as a namespace.\nimport catren as cr\n\n# Use individually\n\n# To make an Rmd file, use catrmd\ncatrmd([\"header.yml\", \"intro.md\", \"letters.R\", \"plot.py\", \"notes.txt\"], output_path=\"rmarkdown/\")\n\n# catrmd will also work with Python scripts.\ncatrmd([\"header.yml\", \"README.md\", \"plot.py\", \"notes.txt\"], output_path=\"notebooks/\")\n\n# Or to run both catrmd and render at once, use catren\ncatren[\"README.md\", \"plot.py\", \"notes.txt\"], nbexec_path=\"notebooks/\")\n\n\n# Use nbless as a namespace\ncr.catrmd([\"header.yml\", \"intro.md\", \"letters.R\", \"plot.py\", \"notes.txt\"], output_path=\"rmarkdown/\")\n```\n\nYou can also run the `catren` functions in an R environment using the `reticulate` R package.\n\n### Missing a dependency?\n\nIf you installed Python and R with [Anaconda](https://www.anaconda.com/download/), you should already have all of the dependencies (`python` and `r-essentials`).\n\nIf not, or if you have [Miniconda](https://conda.io/miniconda.html) installed, run\n\n```sh\nconda install -yc r r-essentials\n```\n\n## Too many file names to type out?\n\nYou can use the `ls` command to assign all of the relevant names in the current directory to a variable and pass this variable as an argument to `nbconvert.py`.\n\nTo preserve the order and differentiate files that should be incorporated into the notebook, I recommend left padding your file names with zeros (e.g. 01_intro.md, 02_figure1.py).\n\nConsider the example below:\n\n```sh\ntouch {01..09}.py\nname_list=`ls 0*.py`\npython catrmd.py `echo $name_list`\n```\n\nIn a python environment, I recommend `os.listdir` to obtain a list of all files:\n```python\nfrom os import listdir\nfrom os.path import isfile, join\nonlyfiles = [f for f in listdir(mypath) if isfile(join(mypath, f))]\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/marskar/nbless", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "catren", "package_url": "https://pypi.org/project/catren/", "platform": "", "project_url": "https://pypi.org/project/catren/", "project_urls": {"Homepage": "https://github.com/marskar/nbless"}, "release_url": "https://pypi.org/project/catren/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Create R markdown files from markdown files and scripts.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>The <code>catren</code> python package</h1>\n<p>Using <code>catren</code> you can create and render <a href=\"https://rmarkdown.rstudio.com/\" rel=\"nofollow\">R markdown files</a> in</p>\n<ul>\n<li>your terminal or</li>\n<li>your favorite Python environment (e.g. <a href=\"https://www.jetbrains.com/pycharm/\" rel=\"nofollow\">PyCharm</a> or <a href=\"https://code.visualstudio.com/docs/python/python-tutorial\" rel=\"nofollow\">Visual Studio Code</a>).</li>\n</ul>\n<p>The <code>catren</code> python package consists of 4 functions:</p>\n<ul>\n<li><code>catrmd</code>, which con<strong>cat</strong>enates input files to output an <a href=\"https://rmarkdown.rstudio.com/authoring_quick_tour.html\" rel=\"nofollow\">R Markdown</a> (Rmd) file.</li>\n<li><code>render</code>, which calls <code>rmarkdown::render</code> to create various output files (e.g. HTML documents).</li>\n<li><code>catren</code>, which combines the functionality of <strong>cat</strong>rmd and <strong>ren</strong>der.</li>\n<li><code>rmdtor</code>, which uses <code>knitr::purl</code> to convert an Rmd into an R script.</li>\n</ul>\n<p>All of the above function work for Python <em>and</em> R code, except <code>rmdtor</code> which skips Python chunks.</p>\n<p>To run Rmd files that include R and Python code, you will need the <code>reticulate</code> R package.</p>\n<p>The functions that begin with <code>r</code> (<code>render</code> and <code>rmdtor</code>) rely on the <code>rmarkdown</code> and <code>knitr</code>,\nR packages written by <a href=\"https://yihui.name/en/about/\" rel=\"nofollow\">Yihui Xie</a>.\nThe <code>catrmd</code> function has no dependencies beyond Python,\nall other functions (<code>render</code>, <code>catren</code>, and <code>rmdtor</code>) require R.</p>\n<h2>Installation</h2>\n<pre>pip install catren\n</pre>\n<p>or clone the <a href=\"https://github.com/marskar/catren\" rel=\"nofollow\">repo</a>, e.g. <code>git clone https://github.com/marskar/catren</code> and either use locally, e.g. <code>python catren.py header.yml README.md plot.py notes.txt</code> or install using setup.py, e.g. <code>python setup.py install</code>.</p>\n<h2>Basic usage: terminal</h2>\n<h3>Creating an R markdown file with <code>catrmd</code> in the terminal</h3>\n<p>The <code>catrmd</code> functions works like <code>nbuild</code>. Provide all of the source files as arguments, e.g.</p>\n<pre>catrmd header.yml intro.md letters.R notes.txt plot.py\n</pre>\n<p>The default output filename for <code>catrmd</code> is <code>cat.Rmd</code>. By default, input and output files are located in the current directory (<code>'./'</code>).</p>\n<p>You can provide a more descriptive filename for the unrendered Rmd (<code>-u</code>) and set different input  (<code>-i</code>) and output  (<code>-o</code>) filepaths:</p>\n<pre>catrmd header.yml intro.md letters.R notes.txt plot.py --unrendered raw.Rmd --output_path rmarkdown/\n<span class=\"c1\"># Or</span>\ncatrmd header.yml intro.md letters.R notes.txt plot.py -u raw.Rmd -o rmarkdown/\n</pre>\n<p>If want to later output an R notebook using <a href=\"https://rmarkdown.rstudio.com/r_notebooks\" rel=\"nofollow\">RStudio</a>, your YAML header should include <code>html_notebook</code> as an output type (Hint: press ctrl/cmd+Shift+K).</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">title</span><span class=\"p\">:</span> <span class=\"s\">\"Untitled\"</span>\n<span class=\"nt\">output</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">html_notebook</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>The <code>render</code> function from the <code>rmarkdown</code> R package allows you to specify the output type on the fly with the <code>output_format</code> argument.</p>\n<h2>Basic usage: python environment</h2>\n<pre><span class=\"c1\"># You can import any or all of the functions from the catren package.</span>\n\n<span class=\"c1\"># You can also import each function individually</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catren</span> <span class=\"kn\">import</span> <span class=\"n\">catrmd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catren</span> <span class=\"kn\">import</span> <span class=\"n\">render</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catren</span> <span class=\"kn\">import</span> <span class=\"n\">catren</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catren</span> <span class=\"kn\">import</span> <span class=\"n\">rmdtor</span>\n\n<span class=\"c1\"># The above imports all 4 functions</span>\n<span class=\"c1\"># This can also be done with either of the two lines below.</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catren</span> <span class=\"kn\">import</span> <span class=\"n\">nbuild</span><span class=\"p\">,</span> <span class=\"n\">nbexec</span><span class=\"p\">,</span> <span class=\"n\">nbless</span><span class=\"p\">,</span> <span class=\"n\">catrmd</span>\n<span class=\"kn\">from</span> <span class=\"nn\">catren</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># Another alternative is to import the package and use it as a namespace.</span>\n<span class=\"kn\">import</span> <span class=\"nn\">catren</span> <span class=\"k\">as</span> <span class=\"nn\">cr</span>\n\n<span class=\"c1\"># Use individually</span>\n\n<span class=\"c1\"># To make an Rmd file, use catrmd</span>\n<span class=\"n\">catrmd</span><span class=\"p\">([</span><span class=\"s2\">\"header.yml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"intro.md\"</span><span class=\"p\">,</span> <span class=\"s2\">\"letters.R\"</span><span class=\"p\">,</span> <span class=\"s2\">\"plot.py\"</span><span class=\"p\">,</span> <span class=\"s2\">\"notes.txt\"</span><span class=\"p\">],</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s2\">\"rmarkdown/\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># catrmd will also work with Python scripts.</span>\n<span class=\"n\">catrmd</span><span class=\"p\">([</span><span class=\"s2\">\"header.yml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"README.md\"</span><span class=\"p\">,</span> <span class=\"s2\">\"plot.py\"</span><span class=\"p\">,</span> <span class=\"s2\">\"notes.txt\"</span><span class=\"p\">],</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s2\">\"notebooks/\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Or to run both catrmd and render at once, use catren</span>\n<span class=\"n\">catren</span><span class=\"p\">[</span><span class=\"s2\">\"README.md\"</span><span class=\"p\">,</span> <span class=\"s2\">\"plot.py\"</span><span class=\"p\">,</span> <span class=\"s2\">\"notes.txt\"</span><span class=\"p\">],</span> <span class=\"n\">nbexec_path</span><span class=\"o\">=</span><span class=\"s2\">\"notebooks/\"</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># Use nbless as a namespace</span>\n<span class=\"n\">cr</span><span class=\"o\">.</span><span class=\"n\">catrmd</span><span class=\"p\">([</span><span class=\"s2\">\"header.yml\"</span><span class=\"p\">,</span> <span class=\"s2\">\"intro.md\"</span><span class=\"p\">,</span> <span class=\"s2\">\"letters.R\"</span><span class=\"p\">,</span> <span class=\"s2\">\"plot.py\"</span><span class=\"p\">,</span> <span class=\"s2\">\"notes.txt\"</span><span class=\"p\">],</span> <span class=\"n\">output_path</span><span class=\"o\">=</span><span class=\"s2\">\"rmarkdown/\"</span><span class=\"p\">)</span>\n</pre>\n<p>You can also run the <code>catren</code> functions in an R environment using the <code>reticulate</code> R package.</p>\n<h3>Missing a dependency?</h3>\n<p>If you installed Python and R with <a href=\"https://www.anaconda.com/download/\" rel=\"nofollow\">Anaconda</a>, you should already have all of the dependencies (<code>python</code> and <code>r-essentials</code>).</p>\n<p>If not, or if you have <a href=\"https://conda.io/miniconda.html\" rel=\"nofollow\">Miniconda</a> installed, run</p>\n<pre>conda install -yc r r-essentials\n</pre>\n<h2>Too many file names to type out?</h2>\n<p>You can use the <code>ls</code> command to assign all of the relevant names in the current directory to a variable and pass this variable as an argument to <code>nbconvert.py</code>.</p>\n<p>To preserve the order and differentiate files that should be incorporated into the notebook, I recommend left padding your file names with zeros (e.g. 01_intro.md, 02_figure1.py).</p>\n<p>Consider the example below:</p>\n<pre>touch <span class=\"o\">{</span><span class=\"m\">01</span>..09<span class=\"o\">}</span>.py\n<span class=\"nv\">name_list</span><span class=\"o\">=</span><span class=\"sb\">`</span>ls <span class=\"m\">0</span>*.py<span class=\"sb\">`</span>\npython catrmd.py <span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"nv\">$name_list</span><span class=\"sb\">`</span>\n</pre>\n<p>In a python environment, I recommend <code>os.listdir</code> to obtain a list of all files:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">os</span> <span class=\"kn\">import</span> <span class=\"n\">listdir</span>\n<span class=\"kn\">from</span> <span class=\"nn\">os.path</span> <span class=\"kn\">import</span> <span class=\"n\">isfile</span><span class=\"p\">,</span> <span class=\"n\">join</span>\n<span class=\"n\">onlyfiles</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">f</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">listdir</span><span class=\"p\">(</span><span class=\"n\">mypath</span><span class=\"p\">)</span> <span class=\"k\">if</span> <span class=\"n\">isfile</span><span class=\"p\">(</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">mypath</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">))]</span>\n</pre>\n\n          </div>"}, "last_serial": 4323770, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "97b387bd6b9f2530774c43c0c70abd1f", "sha256": "4e3df8cac9f98fa5b26d57f2a2d69abc85692a0811ddb0d0c8fd01c6b5bf36f4"}, "downloads": -1, "filename": "catren-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "97b387bd6b9f2530774c43c0c70abd1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3308, "upload_time": "2018-09-29T23:51:29", "upload_time_iso_8601": "2018-09-29T23:51:29.115307Z", "url": "https://files.pythonhosted.org/packages/11/8d/97d2b7029076b542145c8fc19fc3e9a8811995ed8f3ed28ac24ae966555f/catren-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5657a5610b07e524b62aa97ec2343a28", "sha256": "1508071b87230e0534665b0f81dbe3d9f670f62fe58236dcbd5ac40a2048679a"}, "downloads": -1, "filename": "catren-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5657a5610b07e524b62aa97ec2343a28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3377, "upload_time": "2018-09-29T23:51:30", "upload_time_iso_8601": "2018-09-29T23:51:30.721855Z", "url": "https://files.pythonhosted.org/packages/fe/37/eabe6fba7305f9e21cdbb2cacff771be4c730072fadb5d7b5bf64efeb04c/catren-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "97b387bd6b9f2530774c43c0c70abd1f", "sha256": "4e3df8cac9f98fa5b26d57f2a2d69abc85692a0811ddb0d0c8fd01c6b5bf36f4"}, "downloads": -1, "filename": "catren-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "97b387bd6b9f2530774c43c0c70abd1f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3308, "upload_time": "2018-09-29T23:51:29", "upload_time_iso_8601": "2018-09-29T23:51:29.115307Z", "url": "https://files.pythonhosted.org/packages/11/8d/97d2b7029076b542145c8fc19fc3e9a8811995ed8f3ed28ac24ae966555f/catren-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5657a5610b07e524b62aa97ec2343a28", "sha256": "1508071b87230e0534665b0f81dbe3d9f670f62fe58236dcbd5ac40a2048679a"}, "downloads": -1, "filename": "catren-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5657a5610b07e524b62aa97ec2343a28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3377, "upload_time": "2018-09-29T23:51:30", "upload_time_iso_8601": "2018-09-29T23:51:30.721855Z", "url": "https://files.pythonhosted.org/packages/fe/37/eabe6fba7305f9e21cdbb2cacff771be4c730072fadb5d7b5bf64efeb04c/catren-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:13 2020"}