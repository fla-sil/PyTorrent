{"info": {"author": "Alex Clark", "author_email": "aclark@aclark.net", "bugtrack_url": null, "classifiers": [], "description": "Introduction\n============\n\n``collective.recipe.bluebream`` is a ``zc.buildout`` recipe you can use to bootstrap a `Bluebream`_ project. It does the following:\n\n- Requires the packages required by BlueBream (according to the sample project setup described here: http://bluebream.zope.org/doc/1.0/gettingstarted.html)\n- Installs ``bin/paster``\n- Installs a small WSGI application\n- Installs ZCML configuration files\n- Adds some var directories if they do not exist\n- Supports develop eggs\n\nInstallation\n============\n\nCreate a buildout::\n\n    $ virtualenv-2.7 .\n    $ bin/pip install zc.buildout\n    $ bin/buildout init\n\nThen edit buildout.cfg; use ``collective.recipe.bluebream`` like any recipe: just add a part and configure the ``recipe`` parameter. You should also configure a known good set of packages via the extends parameter::\n\n    [buildout]\n    extends = http://download.zope.org/bluebream/bluebream-1.0.cfg\n    parts =\n        bluebream\n    versions = versions\n\n    [bluebream]\n    recipe = collective.recipe.bluebream\n\nThen run buildout::\n\n    $ bin/buildout\n\nDevelop eggs\n------------\n\nAs of version **0.3.0**, ``collective.recipe.bluebream`` supports package development via the ``eggs`` parameter::\n\n    [buildout]\n    develop =\n        src/my.package\n\n    [bluebream]\n    eggs =\n        my.package\n\nConfiguration\n=============\n\nYou should now have a ``bin/paster`` script. To run ``bluebream``, you will also need a WSGI configuration file and a Zope configuration file. Here are some sample configuration files to get you started.\n\nbluebream.ini\n-------------\n\nCut/paste, save as bluebream.ini::\n\n    [loggers]\n    keys = root, wsgi\n\n    [handlers]\n    keys = console, accesslog\n\n    [formatters]\n    keys = generic, accesslog\n\n    [formatter_generic]\n    format = %(asctime)s %(levelname)s [%(name)s] %(message)s\n\n    [formatter_accesslog]\n    format = %(message)s\n\n    [handler_console]\n    class = StreamHandler\n    args = (sys.stderr,)\n    level = ERROR\n    formatter = generic\n\n    [handler_accesslog]\n    class = FileHandler\n    args = ('access.log', 'a')\n    level = INFO\n    formatter = accesslog\n\n    [logger_root]\n    level = INFO\n    handlers = console\n\n    [logger_wsgi]\n    level = INFO\n    handlers = accesslog\n    qualname = wsgi\n    propagate = 0\n\n    [filter:translogger]\n    use = egg:Paste#translogger\n    setup_console_handler = False\n    logger_name = wsgi\n\n    [filter-app:main]\n    # Change the last part from 'ajax' to 'pdb' for a post-mortem debugger\n    # on the console:\n    use = egg:z3c.evalexception#ajax\n    next = zope\n\n    [app:zope]\n    use = egg:collective.recipe.bluebream\n    filter-with = translogger\n\n    [server:main]\n    use = egg:Paste#http\n    host = 127.0.0.1\n    port = 8080\n\n    [DEFAULT]\n    # set the name of the zope.conf file\n    zope_conf = %(here)s/zope.conf\n\nzope.conf\n---------\n\nCut/paste, save as zope.conf::\n\n    # main zope configuration file for debug mode\n\n    # Identify the component configuration used to define the site:\n    site-definition bluebream.zcml\n\n    <zodb>\n\n      <filestorage>\n        path var/filestorage/Data.fs\n        blob-dir var/blobstorage\n      </filestorage>\n\n    # Uncomment this if you want to connect to a ZEO server instead:\n    #  <zeoclient>\n    #    server localhost:8100\n    #    storage 1\n    #    # ZEO client cache, in bytes\n    #    cache-size 20MB\n    #    # Uncomment to have a persistent disk cache\n    #    #client zeo1\n    #  </zeoclient>\n    </zodb>\n\n    <eventlog>\n      # This sets up logging to both a file and to standard output (STDOUT).\n      # The \"path\" setting can be a relative or absolute filesystem path or\n      # the tokens STDOUT or STDERR.\n\n      <logfile>\n        path z3.log\n        formatter zope.exceptions.log.Formatter\n      </logfile>\n\n      <logfile>\n        path STDOUT\n        formatter zope.exceptions.log.Formatter\n      </logfile>\n    </eventlog>\n\n    #developer mode\n    devmode on\n\nExecution\n=========\n\nNow you can run paster::\n\n    $ bin/paster serve bluebream.ini\n\nAnd open ``http://localhost:8080`` in your browser.\n\nCompletion\n==========\n\nThat's it! Checkout http://bluebream.zope.org for more information about Bluebream.\n\n.. _`Bluebream`: http://bluebream.zope.org\n\n\nChangelog\n=========\n\n0.4.0 - (2012-04-08)\n--------------------\n\n* Clean up package\n  [aclark]\n\n0.3.0 - (2011-07-27)\n--------------------\n\n* Support ``eggs`` parameter for develop eggs, etc.\n  [aclark]\n\n* Add logger\n  [aclark]\n\n* Add metadata to setup.py\n  [aclark]\n\n0.2.0 - (2011-07-27)\n--------------------\n\n* Create var dirs if they do not exist\n  [aclark]\n\n* Include package data\n  [aclark]\n\n0.1.0 - (2011-07-27)\n--------------------\n\n* Initial release\n  [aclark]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/collective/collective.recipe.bluebream", "keywords": null, "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "collective.recipe.bluebream", "package_url": "https://pypi.org/project/collective.recipe.bluebream/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.recipe.bluebream/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/collective/collective.recipe.bluebream"}, "release_url": "https://pypi.org/project/collective.recipe.bluebream/0.4.0/", "requires_dist": null, "requires_python": null, "summary": "collective.recipe.bluebream is a zc.buildout recipe         you can use to bootstrap a Bluebream project", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p><tt>collective.recipe.bluebream</tt> is a <tt>zc.buildout</tt> recipe you can use to bootstrap a <a href=\"http://bluebream.zope.org\" rel=\"nofollow\">Bluebream</a> project. It does the following:</p>\n<ul>\n<li>Requires the packages required by BlueBream (according to the sample project setup described here: <a href=\"http://bluebream.zope.org/doc/1.0/gettingstarted.html\" rel=\"nofollow\">http://bluebream.zope.org/doc/1.0/gettingstarted.html</a>)</li>\n<li>Installs <tt>bin/paster</tt></li>\n<li>Installs a small WSGI application</li>\n<li>Installs ZCML configuration files</li>\n<li>Adds some var directories if they do not exist</li>\n<li>Supports develop eggs</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Create a buildout:</p>\n<pre>$ virtualenv-2.7 .\n$ bin/pip install zc.buildout\n$ bin/buildout init\n</pre>\n<p>Then edit buildout.cfg; use <tt>collective.recipe.bluebream</tt> like any recipe: just add a part and configure the <tt>recipe</tt> parameter. You should also configure a known good set of packages via the extends parameter:</p>\n<pre>[buildout]\nextends = http://download.zope.org/bluebream/bluebream-1.0.cfg\nparts =\n    bluebream\nversions = versions\n\n[bluebream]\nrecipe = collective.recipe.bluebream\n</pre>\n<p>Then run buildout:</p>\n<pre>$ bin/buildout\n</pre>\n<div id=\"develop-eggs\">\n<h3>Develop eggs</h3>\n<p>As of version <strong>0.3.0</strong>, <tt>collective.recipe.bluebream</tt> supports package development via the <tt>eggs</tt> parameter:</p>\n<pre>[buildout]\ndevelop =\n    src/my.package\n\n[bluebream]\neggs =\n    my.package\n</pre>\n</div>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>You should now have a <tt>bin/paster</tt> script. To run <tt>bluebream</tt>, you will also need a WSGI configuration file and a Zope configuration file. Here are some sample configuration files to get you started.</p>\n<div id=\"bluebream-ini\">\n<h3>bluebream.ini</h3>\n<p>Cut/paste, save as bluebream.ini:</p>\n<pre>[loggers]\nkeys = root, wsgi\n\n[handlers]\nkeys = console, accesslog\n\n[formatters]\nkeys = generic, accesslog\n\n[formatter_generic]\nformat = %(asctime)s %(levelname)s [%(name)s] %(message)s\n\n[formatter_accesslog]\nformat = %(message)s\n\n[handler_console]\nclass = StreamHandler\nargs = (sys.stderr,)\nlevel = ERROR\nformatter = generic\n\n[handler_accesslog]\nclass = FileHandler\nargs = ('access.log', 'a')\nlevel = INFO\nformatter = accesslog\n\n[logger_root]\nlevel = INFO\nhandlers = console\n\n[logger_wsgi]\nlevel = INFO\nhandlers = accesslog\nqualname = wsgi\npropagate = 0\n\n[filter:translogger]\nuse = egg:Paste#translogger\nsetup_console_handler = False\nlogger_name = wsgi\n\n[filter-app:main]\n# Change the last part from 'ajax' to 'pdb' for a post-mortem debugger\n# on the console:\nuse = egg:z3c.evalexception#ajax\nnext = zope\n\n[app:zope]\nuse = egg:collective.recipe.bluebream\nfilter-with = translogger\n\n[server:main]\nuse = egg:Paste#http\nhost = 127.0.0.1\nport = 8080\n\n[DEFAULT]\n# set the name of the zope.conf file\nzope_conf = %(here)s/zope.conf\n</pre>\n</div>\n<div id=\"zope-conf\">\n<h3>zope.conf</h3>\n<p>Cut/paste, save as zope.conf:</p>\n<pre># main zope configuration file for debug mode\n\n# Identify the component configuration used to define the site:\nsite-definition bluebream.zcml\n\n&lt;zodb&gt;\n\n  &lt;filestorage&gt;\n    path var/filestorage/Data.fs\n    blob-dir var/blobstorage\n  &lt;/filestorage&gt;\n\n# Uncomment this if you want to connect to a ZEO server instead:\n#  &lt;zeoclient&gt;\n#    server localhost:8100\n#    storage 1\n#    # ZEO client cache, in bytes\n#    cache-size 20MB\n#    # Uncomment to have a persistent disk cache\n#    #client zeo1\n#  &lt;/zeoclient&gt;\n&lt;/zodb&gt;\n\n&lt;eventlog&gt;\n  # This sets up logging to both a file and to standard output (STDOUT).\n  # The \"path\" setting can be a relative or absolute filesystem path or\n  # the tokens STDOUT or STDERR.\n\n  &lt;logfile&gt;\n    path z3.log\n    formatter zope.exceptions.log.Formatter\n  &lt;/logfile&gt;\n\n  &lt;logfile&gt;\n    path STDOUT\n    formatter zope.exceptions.log.Formatter\n  &lt;/logfile&gt;\n&lt;/eventlog&gt;\n\n#developer mode\ndevmode on\n</pre>\n</div>\n</div>\n<div id=\"execution\">\n<h2>Execution</h2>\n<p>Now you can run paster:</p>\n<pre>$ bin/paster serve bluebream.ini\n</pre>\n<p>And open <tt><span class=\"pre\">http://localhost:8080</span></tt> in your browser.</p>\n</div>\n<div id=\"completion\">\n<h2>Completion</h2>\n<p>That\u2019s it! Checkout <a href=\"http://bluebream.zope.org\" rel=\"nofollow\">http://bluebream.zope.org</a> for more information about Bluebream.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4.0 - (2012-04-08)</h3>\n<ul>\n<li>Clean up package\n[aclark]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3.0 - (2011-07-27)</h3>\n<ul>\n<li>Support <tt>eggs</tt> parameter for develop eggs, etc.\n[aclark]</li>\n<li>Add logger\n[aclark]</li>\n<li>Add metadata to setup.py\n[aclark]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.0 - (2011-07-27)</h3>\n<ul>\n<li>Create var dirs if they do not exist\n[aclark]</li>\n<li>Include package data\n[aclark]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0 - (2011-07-27)</h3>\n<ul>\n<li>Initial release\n[aclark]</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 788128, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "666deca01290edf84156d13f5a24e270", "sha256": "10eccf9011bf6b0ec0956f02f704ea29222e7946de64910c041c4370a23d22bc"}, "downloads": -1, "filename": "collective.recipe.bluebream-0.1.0.zip", "has_sig": false, "md5_digest": "666deca01290edf84156d13f5a24e270", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29077, "upload_time": "2011-07-27T15:45:46", "upload_time_iso_8601": "2011-07-27T15:45:46.854553Z", "url": "https://files.pythonhosted.org/packages/03/55/2ef042053ed8046fa03e351854a0a6819ee054a81141668a62b5a9982fa7/collective.recipe.bluebream-0.1.0.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "35c9f0c21f08cc5c15da03a83af3b894", "sha256": "2786d982d675a15c30843441d8b296884d37cf1247dd380685549eaffc38dbf2"}, "downloads": -1, "filename": "collective.recipe.bluebream-0.2.0.zip", "has_sig": false, "md5_digest": "35c9f0c21f08cc5c15da03a83af3b894", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29983, "upload_time": "2011-07-27T19:03:31", "upload_time_iso_8601": "2011-07-27T19:03:31.089419Z", "url": "https://files.pythonhosted.org/packages/dc/2c/cfca4d88024d318d78ff5d6c64a5e45c44c160221d3a5af71a7492a9410e/collective.recipe.bluebream-0.2.0.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "b2b400c98ac36f0fb7f201aec715938b", "sha256": "10dc69e9a3ef8d43d8f0555ad7d4e79a30f00b37d9ed9e700e1893d092d32e57"}, "downloads": -1, "filename": "collective.recipe.bluebream-0.3.0.zip", "has_sig": false, "md5_digest": "b2b400c98ac36f0fb7f201aec715938b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30916, "upload_time": "2011-07-27T22:59:12", "upload_time_iso_8601": "2011-07-27T22:59:12.998847Z", "url": "https://files.pythonhosted.org/packages/6f/b3/e4dcf903e3bea4d1369d827eba704fcd4162d3f6b8ee81cf53979d018535/collective.recipe.bluebream-0.3.0.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b8e4e2c7775fb9eb48895ccdc75455a9", "sha256": "b3c77d1c45d1164d30572c236a6566aff9e5ffde2fd526db12a2ca0b4906c04a"}, "downloads": -1, "filename": "collective.recipe.bluebream-0.4.0.zip", "has_sig": false, "md5_digest": "b8e4e2c7775fb9eb48895ccdc75455a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42522, "upload_time": "2012-04-09T05:04:11", "upload_time_iso_8601": "2012-04-09T05:04:11.548700Z", "url": "https://files.pythonhosted.org/packages/36/a6/421008e1502657df2123dadf998c0d085a68a6f793cdd397634d3559daa6/collective.recipe.bluebream-0.4.0.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b8e4e2c7775fb9eb48895ccdc75455a9", "sha256": "b3c77d1c45d1164d30572c236a6566aff9e5ffde2fd526db12a2ca0b4906c04a"}, "downloads": -1, "filename": "collective.recipe.bluebream-0.4.0.zip", "has_sig": false, "md5_digest": "b8e4e2c7775fb9eb48895ccdc75455a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42522, "upload_time": "2012-04-09T05:04:11", "upload_time_iso_8601": "2012-04-09T05:04:11.548700Z", "url": "https://files.pythonhosted.org/packages/36/a6/421008e1502657df2123dadf998c0d085a68a6f793cdd397634d3559daa6/collective.recipe.bluebream-0.4.0.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}