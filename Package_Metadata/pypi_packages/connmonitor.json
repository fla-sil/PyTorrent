{"info": {"author": "Brennan Fieck", "author_email": "Brennan_WilliamFieck@comcast.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: No Input/Output (Daemon)", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet", "Topic :: Internet :: Log Analysis", "Topic :: Internet :: WWW/HTTP", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: System :: Logging", "Topic :: System :: Monitoring", "Topic :: System :: Networking :: Monitoring", "Topic :: System :: Networking :: Monitoring :: Hardware Watchdog", "Topic :: Utilities"], "description": "connvitals-monitor\n==================\n\n|License|\n\nPersistently monitors network conditions with respect to a set of\nspecific hosts.\n\nDependencies\n------------\n\nThe executable for the connvitals-monitor package (``connmonitor``) runs\non python3 (tested CPython 3.6.3) and requires a python3 interpreter. It\nalso requires ```connvitals`` <https://github.com/comcast/connvitals>`__\nto exist as a subdirectory in its directory (or your ``import`` path) as\nit uses that as a library.\n\n*Note: Because this package is not in a standard repository (nor is its\ndependency), dependencies cannot be automatically resolved; you must\nfirst install connvitals for this package to work.*\n\nInstallation\n------------\n\n    *Note: Versions 1.2+ **only** support Linux systems that run\n    systemd. It's possible that it may install on your system even if\n    you do not run systemd, but it will attempt to install the Unit File\n    under ``/usr/lib/systemd/system``.*\n\nVia ``pip`` (Standard)\n~~~~~~~~~~~~~~~~~~~~~~\n\nBy far the easiest way to install connvitals-monitor is to simply use\n``pip`` like so:\n\n::\n\n    pip install connmonitor\n\nNote that you'll probably need to run this command with ``sudo`` or the\n``--user`` flag.\n\nVia ``pip`` (From This Repository)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe easiest way to install is to simply use ``pip``. You can install\ndirectly from this repository without needing to manually download it by\nrunning\n\n.. code:: bash\n\n    user@hostname ~ $ pip install git+https://github.com/comcast/connvitals-monitor.git#egg=connmonitor\n\nNote that you may need to run this command as root/with ``sudo`` or with\n``--user``, depending on your ``pip`` installation. Also ensure that\n``pip`` is installing packages for Python 3.x. Typically, if both\nPython2 and Python3 exist on a system with ``pip`` installed for both,\nthe ``pip`` to use for Python3 packages is accessible as ``pip3``.\n\nManually\n~~~~~~~~\n\nTo install manually, first download or clone this repository. Then, in\nthe directory you downloaded/cloned it into, run the command\n\n.. code:: bash\n\n    user@hostname ~/connvitals-monitor $ python setup.py install\n\n| Note that it's highly likely that you will need to run this command as\n  root/with ``sudo``. Also ensure that the ``python`` command points to\n  a valid Python3 interpreter (you can check with ``python --version``).\n  On many systems, it is common for ``python`` to point to a Python2\n  interpreter. If you have both Python3 and Python2 installed, it's\n  common that they be accessible as ``python3`` and ``python2``,\n  respectively.\n| Finally, if you are choosing this option because you do not have a\n  Python3 ``pip`` installation, you may not have ``setuptools``\n  installed. On most 'nix distros, this can be installed without\n  installing ``pip`` by running\n  ``sudo apt-get install python3-setuptools`` (Debian/Ubuntu),\n  ``sudo pacman -S python3-setuptools`` (Arch),\n  ``sudo yum install python3-setuptools`` (RedHat/Fedora/CentOS), or\n  ``brew install python3-setuptools`` (macOS with ``brew`` installed).\n\nUsage\n-----\n\n.. code:: bash\n\n    $ connmonitor [input file]\n    $ connmonitor [ -v --version ]\n\n| ``input file`` is a file containing a set of options and hosts to\n  check. If not specified, ``connmonitor`` will read input of the same\n  format from ``stdin``. If instead ``-v`` or ``--version`` is passed as\n  the first argument, the program's version is printed to stdout, and\n  the program exits successfully.\n| Upon receiving ``SIGHUP`` (e.g. when the terminal used to run it is\n  closed), ``connmonitor`` will attempt to re-read its configuration\n  file, then continue execution. If the configuration file cannot be\n  read, the program will log an error, clean up its resources and exit\n  with error code ``1``. If input was given on ``stdin``, the program\n  will log an error and resume execution.\n| ``connmonitor`` handles ``SIGTERM`` by neatly cleaning up resources\n  (finishing any running tasks and printing their output to ``stdout``,\n  still logging any errors) and exiting.\n\nAs a ``systemd`` daemon\n~~~~~~~~~~~~~~~~~~~~~~~\n\nStarting with version 1.2.1, connvitals-monitor (unfortunately) comes\npackaged with a systemd Unit File, and will attempt to install it. To\nrun the daemon, simply run ``systemctl start connmonitor`` (as root),\nand to stop it run ``systemctl stop connmonitor`` (also as root). By\ndefault, the monitor will log its ``stdout`` in JSON format to\n``/var/log/connmonitor.log``, and its ``stderr`` to\n``/var/log/connmonitor.err``. Whenever the monitor is started, it looks\nfor a configuration file at ``/var/run/connmonitor.conf``, and creates\nit if it does not exist with the following default contents (see 'Input\nFormat'):\n\n::\n\n    localhost trace=5000 scan=5000 json=True\n\nThe monitor service does **not** check for filesystem updates to that\nconfig file; if you wish to edit it you may safely do so, but should run\n``systemctl reload connmonitor`` to read in the new configuration.\n\nInput Format\n~~~~~~~~~~~~\n\nconnmonitor expects input formatted like this:\n\n::\n\n    host1 ping=500 trace=30000 hops=40 scan=60000 json=1\n    host2 ping=50 numpings=10 payload=41\n    host3 trace=1000 hops=10\n    ...\n\nNote that config lines (except the hostname part, when applicable) are\ncAsE-iNsEnSiTiVe. Empty lines are ignored at any point.\n\n| Each line of the config *must* begin with a host. This can be either\n  an IP address or a Fully-Qualified Domain Name (FQDN). Currently, IPv6\n  is not supported, and if an FQDN can only be resolved to an IPv6\n  address it will not be queried.\n| After the host, a list of options in the format ``<name>=<value>`` can\n  be specified. If an option is not specified, a default value is used.\n  The options and their valid values are:\n\n-  ``ping`` - can be set to any positive, rational number or 0 (zero).\n   This indicates the frequency at which pings are performed by\n   specifying a duration (in milliseconds) to wait between each burst of\n   pings. A value of 0 indicates that pings should not be sent. Default:\n   500\n-  ``numpings`` - can be set to any positive integer. Indicates the\n   number of pings that should be sent in a \"burst\". Default: 10\n-  ``payload`` - can be set to any positive integer. This indicates the\n   size in bytes of a payload to be sent with each ping. Typically, this\n   will have little to no impact on ping results, but can, in some\n   networks/situations diagnose specific issues. Default: 41\n-  ``trace`` - can be set to any positive, rational number or 0 (zero).\n   This indicates the frequency at which route traces are done by\n   specifying a duration (in milliseconds) to wait between each route\n   trace. A new route trace will not begin until the previous one has\n   finished, so setting this to values lower than network latency to the\n   target is typically meaningless. A value of 0 (zero) indicates that\n   route traces should not be performed. Default: 0 (zero)\n-  ``hops`` - can be set to any positive integer. This indicates the\n   number of network hops to be used as an upper limit on route traces.\n   The default value typically suffices in most situations. Default: 30\n-  ``scan`` - can be set to any positive, rational number or 0 (zero).\n   This indicates the frequency at which route traces are done by\n   specifying a duration (in milliseconds) to wait between each port\n   scan. A value of 0 (zero) indicates that port scans should not be\n   done. Default: 0 (zero)\n-  ``json`` - can be set to any integer or 0 (zero), *or* one of the\n   Python boolean constants: ``True`` and ``False``. If this value is\n   any non-zero integer or ``True``, then the output of this host's\n   statistics will be in JSON format rather than the plain-text format.\n   Default: ``False``\n-  ``timestamp`` - can be set to any integer or 0 (zero), *or* one of\n   the Python boolean constants: ``True`` and ``False``. If this value\n   is any non-zero integer or ``True``, then the outputs of this hosts's\n   statistics will always contain timestamps indicating the time at\n   which printing occurs. Default: ``True``\n\nConfiguration options can appear in any order and can be separated by\nany amount/kind of whitespace except for line terminators (Line Feed,\nCarriage Return, Form Feed etc.). However, the same option *cannot* be\nspecified multiple times on the same line, even if it always appears\nwith the same value. Furthermore, there must be no space on either side\nof the ``=`` assigning a value to a config variable.\n\nOutput Format\n~~~~~~~~~~~~~\n\n``connmonitor`` outputs results to ``stdout`` and logs errors to\n``stderr``. Output (including JSON output) takes the same form as\nconnvitals, and you can read about that format on `that\nproject <https://github.com/comcast/connvitals>`__'s README.\n\nStarting with version 3.0, ``connmonitor`` will no longer output traces\nif they are determined to be the same as the most recent route\npreviously recorded for a given host. This is as a result of changes\nmade to connvitals (but only the Python version) which are discussed in\ngreater detail on `that project's\npage <https://github.com/comcast/connvitals>`__.\n\nStarting with version 3.1, ``connmonitor`` will output a timestamp as a\npart of the JSON object (a floating-point number in milliseconds since\nthe UNIX Epoch), and will output a human-readable date and time in the\nplaintext output on the second line (directly after names/IP addresses)\nin the system's ``ctime`` format. All timestamps are given in the\ntimezone for which the system is configured.\n\nStarting with version 4.0, each statistic is reported individually, and\nnot bundled together the way ``connvitals`` outputs them. This\nessentially looks like a separate output for each statistic, as though\neach were invoked seperately by a different ``connvitals`` invokation.\nPrior to this version, configurations were global and all statistics\nwere gathered at the same frequency.\n\nExample\n~~~~~~~\n\nHere's an example of a configuration file that will gather port scans\nand ping statistics for 10 pings per run each having a payload of 1337B\n- but not route traces - from google.com every half-second with output\nin ``connvitals``'s standard, plain-text output, and do limited port\nscanning and traceroutes (to a maximum of 30 hops) - but not pings - on\nthe address 127.0.0.1 (localhost) every 50 milliseconds with output in\nJSON format:\n\n::\n\n    google.com ping=500 payload=1337 scan=500\n    127.0.0.1 trace=50 json=1 scan=50\n\n.. |License| image:: https://img.shields.io/badge/License-Apache%202.0-blue.svg\n   :target: https://opensource.org/licenses/Apache-2.0\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/comcast/connvitals-monitor", "keywords": "network statistics connection ping traceroute port ip", "license": "", "maintainer": "", "maintainer_email": "", "name": "connmonitor", "package_url": "https://pypi.org/project/connmonitor/", "platform": "", "project_url": "https://pypi.org/project/connmonitor/", "project_urls": {"Homepage": "https://github.com/comcast/connvitals-monitor"}, "release_url": "https://pypi.org/project/connmonitor/4.1.3/", "requires_dist": ["connvitals (>=4.3.1)", "setuptools", "typing"], "requires_python": "~=3.4", "summary": "Uses the connvitals library to continuously poll and record network connectivity statistics.", "version": "4.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://opensource.org/licenses/Apache-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>Persistently monitors network conditions with respect to a set of\nspecific hosts.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>The executable for the connvitals-monitor package (<tt>connmonitor</tt>) runs\non python3 (tested CPython 3.6.3) and requires a python3 interpreter. It\nalso requires <tt>`connvitals</tt> &lt;<a href=\"https://github.com/comcast/connvitals\" rel=\"nofollow\">https://github.com/comcast/connvitals</a>&gt;`__\nto exist as a subdirectory in its directory (or your <tt>import</tt> path) as\nit uses that as a library.</p>\n<p><em>Note: Because this package is not in a standard repository (nor is its\ndependency), dependencies cannot be automatically resolved; you must\nfirst install connvitals for this package to work.</em></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<blockquote>\n<em>Note: Versions 1.2+ **only*</em> support Linux systems that run\nsystemd. It\u2019s possible that it may install on your system even if\nyou do not run systemd, but it will attempt to install the Unit File\nunder <tt>/usr/lib/systemd/system</tt>.*</blockquote>\n<div id=\"via-pip-standard\">\n<h3>Via <tt>pip</tt> (Standard)</h3>\n<p>By far the easiest way to install connvitals-monitor is to simply use\n<tt>pip</tt> like so:</p>\n<pre>pip install connmonitor\n</pre>\n<p>Note that you\u2019ll probably need to run this command with <tt>sudo</tt> or the\n<tt><span class=\"pre\">--user</span></tt> flag.</p>\n</div>\n<div id=\"via-pip-from-this-repository\">\n<h3>Via <tt>pip</tt> (From This Repository)</h3>\n<p>The easiest way to install is to simply use <tt>pip</tt>. You can install\ndirectly from this repository without needing to manually download it by\nrunning</p>\n<pre>user@hostname ~ $ pip install git+https://github.com/comcast/connvitals-monitor.git#egg<span class=\"o\">=</span>connmonitor\n</pre>\n<p>Note that you may need to run this command as root/with <tt>sudo</tt> or with\n<tt><span class=\"pre\">--user</span></tt>, depending on your <tt>pip</tt> installation. Also ensure that\n<tt>pip</tt> is installing packages for Python 3.x. Typically, if both\nPython2 and Python3 exist on a system with <tt>pip</tt> installed for both,\nthe <tt>pip</tt> to use for Python3 packages is accessible as <tt>pip3</tt>.</p>\n</div>\n<div id=\"manually\">\n<h3>Manually</h3>\n<p>To install manually, first download or clone this repository. Then, in\nthe directory you downloaded/cloned it into, run the command</p>\n<pre>user@hostname ~/connvitals-monitor $ python setup.py install\n</pre>\n<div>\n<div>Note that it\u2019s highly likely that you will need to run this command as\nroot/with <tt>sudo</tt>. Also ensure that the <tt>python</tt> command points to\na valid Python3 interpreter (you can check with <tt>python <span class=\"pre\">--version</span></tt>).\nOn many systems, it is common for <tt>python</tt> to point to a Python2\ninterpreter. If you have both Python3 and Python2 installed, it\u2019s\ncommon that they be accessible as <tt>python3</tt> and <tt>python2</tt>,\nrespectively.</div>\n<div>Finally, if you are choosing this option because you do not have a\nPython3 <tt>pip</tt> installation, you may not have <tt>setuptools</tt>\ninstalled. On most \u2018nix distros, this can be installed without\ninstalling <tt>pip</tt> by running\n<tt>sudo <span class=\"pre\">apt-get</span> install <span class=\"pre\">python3-setuptools</span></tt> (Debian/Ubuntu),\n<tt>sudo pacman <span class=\"pre\">-S</span> <span class=\"pre\">python3-setuptools</span></tt> (Arch),\n<tt>sudo yum install <span class=\"pre\">python3-setuptools</span></tt> (RedHat/Fedora/CentOS), or\n<tt>brew install <span class=\"pre\">python3-setuptools</span></tt> (macOS with <tt>brew</tt> installed).</div>\n</div>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>$ connmonitor <span class=\"o\">[</span>input file<span class=\"o\">]</span>\n$ connmonitor <span class=\"o\">[</span> -v --version <span class=\"o\">]</span>\n</pre>\n<div>\n<div><tt>input file</tt> is a file containing a set of options and hosts to\ncheck. If not specified, <tt>connmonitor</tt> will read input of the same\nformat from <tt>stdin</tt>. If instead <tt><span class=\"pre\">-v</span></tt> or <tt><span class=\"pre\">--version</span></tt> is passed as\nthe first argument, the program\u2019s version is printed to stdout, and\nthe program exits successfully.</div>\n<div>Upon receiving <tt>SIGHUP</tt> (e.g. when the terminal used to run it is\nclosed), <tt>connmonitor</tt> will attempt to re-read its configuration\nfile, then continue execution. If the configuration file cannot be\nread, the program will log an error, clean up its resources and exit\nwith error code <tt>1</tt>. If input was given on <tt>stdin</tt>, the program\nwill log an error and resume execution.</div>\n<div><tt>connmonitor</tt> handles <tt>SIGTERM</tt> by neatly cleaning up resources\n(finishing any running tasks and printing their output to <tt>stdout</tt>,\nstill logging any errors) and exiting.</div>\n</div>\n<div id=\"as-a-systemd-daemon\">\n<h3>As a <tt>systemd</tt> daemon</h3>\n<p>Starting with version 1.2.1, connvitals-monitor (unfortunately) comes\npackaged with a systemd Unit File, and will attempt to install it. To\nrun the daemon, simply run <tt>systemctl start connmonitor</tt> (as root),\nand to stop it run <tt>systemctl stop connmonitor</tt> (also as root). By\ndefault, the monitor will log its <tt>stdout</tt> in JSON format to\n<tt>/var/log/connmonitor.log</tt>, and its <tt>stderr</tt> to\n<tt>/var/log/connmonitor.err</tt>. Whenever the monitor is started, it looks\nfor a configuration file at <tt>/var/run/connmonitor.conf</tt>, and creates\nit if it does not exist with the following default contents (see \u2018Input\nFormat\u2019):</p>\n<pre>localhost trace=5000 scan=5000 json=True\n</pre>\n<p>The monitor service does <strong>not</strong> check for filesystem updates to that\nconfig file; if you wish to edit it you may safely do so, but should run\n<tt>systemctl reload connmonitor</tt> to read in the new configuration.</p>\n</div>\n<div id=\"input-format\">\n<h3>Input Format</h3>\n<p>connmonitor expects input formatted like this:</p>\n<pre>host1 ping=500 trace=30000 hops=40 scan=60000 json=1\nhost2 ping=50 numpings=10 payload=41\nhost3 trace=1000 hops=10\n...\n</pre>\n<p>Note that config lines (except the hostname part, when applicable) are\ncAsE-iNsEnSiTiVe. Empty lines are ignored at any point.</p>\n<div>\n<div>Each line of the config <em>must</em> begin with a host. This can be either\nan IP address or a Fully-Qualified Domain Name (FQDN). Currently, IPv6\nis not supported, and if an FQDN can only be resolved to an IPv6\naddress it will not be queried.</div>\n<div>After the host, a list of options in the format <tt><span class=\"pre\">&lt;name&gt;=&lt;value&gt;</span></tt> can\nbe specified. If an option is not specified, a default value is used.\nThe options and their valid values are:</div>\n</div>\n<ul>\n<li><tt>ping</tt> - can be set to any positive, rational number or 0 (zero).\nThis indicates the frequency at which pings are performed by\nspecifying a duration (in milliseconds) to wait between each burst of\npings. A value of 0 indicates that pings should not be sent. Default:\n500</li>\n<li><tt>numpings</tt> - can be set to any positive integer. Indicates the\nnumber of pings that should be sent in a \u201cburst\u201d. Default: 10</li>\n<li><tt>payload</tt> - can be set to any positive integer. This indicates the\nsize in bytes of a payload to be sent with each ping. Typically, this\nwill have little to no impact on ping results, but can, in some\nnetworks/situations diagnose specific issues. Default: 41</li>\n<li><tt>trace</tt> - can be set to any positive, rational number or 0 (zero).\nThis indicates the frequency at which route traces are done by\nspecifying a duration (in milliseconds) to wait between each route\ntrace. A new route trace will not begin until the previous one has\nfinished, so setting this to values lower than network latency to the\ntarget is typically meaningless. A value of 0 (zero) indicates that\nroute traces should not be performed. Default: 0 (zero)</li>\n<li><tt>hops</tt> - can be set to any positive integer. This indicates the\nnumber of network hops to be used as an upper limit on route traces.\nThe default value typically suffices in most situations. Default: 30</li>\n<li><tt>scan</tt> - can be set to any positive, rational number or 0 (zero).\nThis indicates the frequency at which route traces are done by\nspecifying a duration (in milliseconds) to wait between each port\nscan. A value of 0 (zero) indicates that port scans should not be\ndone. Default: 0 (zero)</li>\n<li><tt>json</tt> - can be set to any integer or 0 (zero), <em>or</em> one of the\nPython boolean constants: <tt>True</tt> and <tt>False</tt>. If this value is\nany non-zero integer or <tt>True</tt>, then the output of this host\u2019s\nstatistics will be in JSON format rather than the plain-text format.\nDefault: <tt>False</tt></li>\n<li><tt>timestamp</tt> - can be set to any integer or 0 (zero), <em>or</em> one of\nthe Python boolean constants: <tt>True</tt> and <tt>False</tt>. If this value\nis any non-zero integer or <tt>True</tt>, then the outputs of this hosts\u2019s\nstatistics will always contain timestamps indicating the time at\nwhich printing occurs. Default: <tt>True</tt></li>\n</ul>\n<p>Configuration options can appear in any order and can be separated by\nany amount/kind of whitespace except for line terminators (Line Feed,\nCarriage Return, Form Feed etc.). However, the same option <em>cannot</em> be\nspecified multiple times on the same line, even if it always appears\nwith the same value. Furthermore, there must be no space on either side\nof the <tt>=</tt> assigning a value to a config variable.</p>\n</div>\n<div id=\"output-format\">\n<h3>Output Format</h3>\n<p><tt>connmonitor</tt> outputs results to <tt>stdout</tt> and logs errors to\n<tt>stderr</tt>. Output (including JSON output) takes the same form as\nconnvitals, and you can read about that format on <a href=\"https://github.com/comcast/connvitals\" rel=\"nofollow\">that\nproject</a>\u2019s README.</p>\n<p>Starting with version 3.0, <tt>connmonitor</tt> will no longer output traces\nif they are determined to be the same as the most recent route\npreviously recorded for a given host. This is as a result of changes\nmade to connvitals (but only the Python version) which are discussed in\ngreater detail on <a href=\"https://github.com/comcast/connvitals\" rel=\"nofollow\">that project\u2019s\npage</a>.</p>\n<p>Starting with version 3.1, <tt>connmonitor</tt> will output a timestamp as a\npart of the JSON object (a floating-point number in milliseconds since\nthe UNIX Epoch), and will output a human-readable date and time in the\nplaintext output on the second line (directly after names/IP addresses)\nin the system\u2019s <tt>ctime</tt> format. All timestamps are given in the\ntimezone for which the system is configured.</p>\n<p>Starting with version 4.0, each statistic is reported individually, and\nnot bundled together the way <tt>connvitals</tt> outputs them. This\nessentially looks like a separate output for each statistic, as though\neach were invoked seperately by a different <tt>connvitals</tt> invokation.\nPrior to this version, configurations were global and all statistics\nwere gathered at the same frequency.</p>\n</div>\n<div id=\"example\">\n<h3>Example</h3>\n<p>Here\u2019s an example of a configuration file that will gather port scans\nand ping statistics for 10 pings per run each having a payload of 1337B\n- but not route traces - from google.com every half-second with output\nin <tt>connvitals</tt>\u2019s standard, plain-text output, and do limited port\nscanning and traceroutes (to a maximum of 30 hops) - but not pings - on\nthe address 127.0.0.1 (localhost) every 50 milliseconds with output in\nJSON format:</p>\n<pre>google.com ping=500 payload=1337 scan=500\n127.0.0.1 trace=50 json=1 scan=50\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4165501, "releases": {"3.0.3": [{"comment_text": "", "digests": {"md5": "65ec7e7a5ac7d20c52e9b07142035ca6", "sha256": "aefac1ab5c891bd935a420a0dba78766684cdc2ea0cac290856de9311c79dc7e"}, "downloads": -1, "filename": "connmonitor-3.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "65ec7e7a5ac7d20c52e9b07142035ca6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 9163, "upload_time": "2018-06-01T14:26:49", "upload_time_iso_8601": "2018-06-01T14:26:49.767874Z", "url": "https://files.pythonhosted.org/packages/fb/bd/52eceffa3b53448632b3c28cc2c33401c386d135583f2daf11875617c879/connmonitor-3.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c66d44e5b3540781a18d310a7ceb901", "sha256": "2948f4ef7e2a5f8fd69b30b6051081250cb22b8d686d23323dea76e476425a66"}, "downloads": -1, "filename": "connmonitor-3.0.3.tar.gz", "has_sig": false, "md5_digest": "5c66d44e5b3540781a18d310a7ceb901", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 12693, "upload_time": "2018-06-01T14:26:50", "upload_time_iso_8601": "2018-06-01T14:26:50.991286Z", "url": "https://files.pythonhosted.org/packages/a5/be/970ef5806ee7f34bb421096a9d08fba24ecd7157e167d5431c6557b4d59c/connmonitor-3.0.3.tar.gz", "yanked": false}], "3.0.4": [{"comment_text": "", "digests": {"md5": "96e32f7f62fc578a2e47cef3b7a418da", "sha256": "513943f19702d2af9f7f8a374e5ab20fb35062950e0452e0082948dfcc330d1d"}, "downloads": -1, "filename": "connmonitor-3.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "96e32f7f62fc578a2e47cef3b7a418da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 9214, "upload_time": "2018-06-11T18:18:05", "upload_time_iso_8601": "2018-06-11T18:18:05.706517Z", "url": "https://files.pythonhosted.org/packages/6b/bc/e9394c2a9f3f17e8a1e918b6a86e3c76cf76ec4bc5fda0b4fcc2cacddbe0/connmonitor-3.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4c96ebcf4a6ef0c885f73474376d51ba", "sha256": "956f7820d4ed09128a713889c590fce8e7646b1fe287ef75598f649791e7d096"}, "downloads": -1, "filename": "connmonitor-3.0.4.tar.gz", "has_sig": false, "md5_digest": "4c96ebcf4a6ef0c885f73474376d51ba", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 12482, "upload_time": "2018-06-11T18:18:06", "upload_time_iso_8601": "2018-06-11T18:18:06.535144Z", "url": "https://files.pythonhosted.org/packages/a1/9e/a9f4d383228f607c4f59d658c7cb55034e424e053002ab193eb8fb8c6d5d/connmonitor-3.0.4.tar.gz", "yanked": false}], "3.1.0": [{"comment_text": "", "digests": {"md5": "e59f262d1cd3830b8d5457eb1b64b553", "sha256": "f964f016f5627f415cdc4e4a3e6d50ce27b34f856222737375218d706cc8881c"}, "downloads": -1, "filename": "connmonitor-3.1.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "e59f262d1cd3830b8d5457eb1b64b553", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 11147, "upload_time": "2018-07-02T13:56:19", "upload_time_iso_8601": "2018-07-02T13:56:19.540259Z", "url": "https://files.pythonhosted.org/packages/15/3d/65fbab4563218d1f4a3fea726a9c6f52c56db8c2524ff956367275d5076d/connmonitor-3.1.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "efcaef63dd85aa06376aaecaefb77d0c", "sha256": "73c91a0ffb6e3b546010560178c7b36042e8227243c4af45fd3e769900bc1b49"}, "downloads": -1, "filename": "connmonitor-3.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "efcaef63dd85aa06376aaecaefb77d0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 9651, "upload_time": "2018-07-02T13:56:16", "upload_time_iso_8601": "2018-07-02T13:56:16.790450Z", "url": "https://files.pythonhosted.org/packages/00/7d/3ff9a6df6b50d45b13fe1a6022cde089e0c364c3d0e066f62b0f62a00a25/connmonitor-3.1.0-py3-none-any.whl", "yanked": false}], "3.1.1": [{"comment_text": "", "digests": {"md5": "97be423412b9f1d6d77eca6410786c84", "sha256": "81136acbeaea44c139b663ad0df317712480355075f256d818beb122292fb231"}, "downloads": -1, "filename": "connmonitor-3.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "97be423412b9f1d6d77eca6410786c84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 9665, "upload_time": "2018-07-16T15:43:27", "upload_time_iso_8601": "2018-07-16T15:43:27.980073Z", "url": "https://files.pythonhosted.org/packages/99/17/2e752377d3dcdfd9acc264c7af0ef3e0c1ae826859cda5d5b37197978aa8/connmonitor-3.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "497327a433847d1e2030d75e34402fb4", "sha256": "17571240c2b2871cf957452da93572eb088e658b460d069fe798b2812a4fa1ec"}, "downloads": -1, "filename": "connmonitor-3.1.1.tar.gz", "has_sig": false, "md5_digest": "497327a433847d1e2030d75e34402fb4", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 13022, "upload_time": "2018-07-16T15:43:29", "upload_time_iso_8601": "2018-07-16T15:43:29.168751Z", "url": "https://files.pythonhosted.org/packages/49/68/e98976e2b9803eef2c477937e6da90fd724dd8f3a364e1363f6740c34071/connmonitor-3.1.1.tar.gz", "yanked": false}], "3.1.2": [{"comment_text": "", "digests": {"md5": "458fcd21819c6f811872daa37965af27", "sha256": "7c70a4a2d1484126ea554aba8e3534289dcd32c734a2f1a80e85796904232f35"}, "downloads": -1, "filename": "connmonitor-3.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "458fcd21819c6f811872daa37965af27", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 9673, "upload_time": "2018-07-24T19:32:29", "upload_time_iso_8601": "2018-07-24T19:32:29.421598Z", "url": "https://files.pythonhosted.org/packages/20/22/d352bbff729c37c104d48e926cb10f2d69a69dbd83f739ab3168af6dccc7/connmonitor-3.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e424a93850571cdffd74cdddb04d917", "sha256": "ae7e3b8cc4bdcee82b3c1273e9d25f9a1663d7b9b1e226bb4f4f8032a2f27383"}, "downloads": -1, "filename": "connmonitor-3.1.2.tar.gz", "has_sig": false, "md5_digest": "5e424a93850571cdffd74cdddb04d917", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 13047, "upload_time": "2018-07-24T19:32:30", "upload_time_iso_8601": "2018-07-24T19:32:30.703551Z", "url": "https://files.pythonhosted.org/packages/ab/41/ea122a2e68b0a0399f09093d631dee65891d7b0bc50b4236f9029e00ce83/connmonitor-3.1.2.tar.gz", "yanked": false}], "4.0.0": [{"comment_text": "", "digests": {"md5": "b8515636b6901e1c55d72ec2944e5b9a", "sha256": "2625470fde5aa28820abf728eb200579ad1e88dd0f83adc5157e50c1f46809d1"}, "downloads": -1, "filename": "connmonitor-4.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b8515636b6901e1c55d72ec2944e5b9a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 11069, "upload_time": "2018-07-31T14:59:30", "upload_time_iso_8601": "2018-07-31T14:59:30.832411Z", "url": "https://files.pythonhosted.org/packages/31/7d/c78f7e843bafd01134eec33b9c33df4081b4499ca17d0cd863590384e786/connmonitor-4.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "24e2565774f96222aa99b08ff449ef65", "sha256": "317ddb1c18e9b56b4070c5fff1f71c6dbeb78b1320e48d1e918a54915621ff5a"}, "downloads": -1, "filename": "connmonitor-4.0.0.tar.gz", "has_sig": false, "md5_digest": "24e2565774f96222aa99b08ff449ef65", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 14570, "upload_time": "2018-07-31T14:59:32", "upload_time_iso_8601": "2018-07-31T14:59:32.008988Z", "url": "https://files.pythonhosted.org/packages/11/63/6b954e802fc024ad3a0ab75408225638eb839c8c1388142d9b833073fa7b/connmonitor-4.0.0.tar.gz", "yanked": false}], "4.1.0": [{"comment_text": "", "digests": {"md5": "1c40604ecc59d24036bcc81dda1980bb", "sha256": "9050e7f3132eb3022448aa35b019b98bc666e5997a1cf69e23d23713d351359e"}, "downloads": -1, "filename": "connmonitor-4.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1c40604ecc59d24036bcc81dda1980bb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 11315, "upload_time": "2018-08-07T14:57:12", "upload_time_iso_8601": "2018-08-07T14:57:12.192592Z", "url": "https://files.pythonhosted.org/packages/38/00/b29fd8f68198b2e315224c14afa574a5006d544a43cd66179165f75d52cd/connmonitor-4.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "13ec7d72fa4c4a8128d03999627a8399", "sha256": "4a3e76efb765f0cd288530cb746a5dd7ceffc453b7a70f1e456cd9674d096ceb"}, "downloads": -1, "filename": "connmonitor-4.1.0.tar.gz", "has_sig": false, "md5_digest": "13ec7d72fa4c4a8128d03999627a8399", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 14812, "upload_time": "2018-08-07T14:57:13", "upload_time_iso_8601": "2018-08-07T14:57:13.561219Z", "url": "https://files.pythonhosted.org/packages/5a/d1/fb6508e2a4e579ac2a16b3e0c2b0a6a0d18723e5119c2c1374ba24b09f17/connmonitor-4.1.0.tar.gz", "yanked": false}], "4.1.1": [{"comment_text": "", "digests": {"md5": "38c4fc4cc0982536d4e4ac8f19c99449", "sha256": "d3e99292ce4b9174e96809339b19f440efaa7feb17ae2c069925629f1f88d0f7"}, "downloads": -1, "filename": "connmonitor-4.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38c4fc4cc0982536d4e4ac8f19c99449", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 11387, "upload_time": "2018-08-08T14:13:36", "upload_time_iso_8601": "2018-08-08T14:13:36.737371Z", "url": "https://files.pythonhosted.org/packages/a3/0f/7316d5903bfce1f6da93247ad5217ededee3198063f2f3a152b30636cdd3/connmonitor-4.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e59c6dbc2cfe1ffa505252523ed816f", "sha256": "d70d219a8ebdbaf6e204bd032122ff054b38f05d9010dab8991bce0f14eba733"}, "downloads": -1, "filename": "connmonitor-4.1.1.tar.gz", "has_sig": false, "md5_digest": "8e59c6dbc2cfe1ffa505252523ed816f", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 14897, "upload_time": "2018-08-08T14:13:38", "upload_time_iso_8601": "2018-08-08T14:13:38.337927Z", "url": "https://files.pythonhosted.org/packages/28/d0/fac9e5e36a39a698517dad67433e1c5f60125ef962fcc5a1f16521339017/connmonitor-4.1.1.tar.gz", "yanked": false}], "4.1.2": [{"comment_text": "", "digests": {"md5": "0856c4e6f52800c48512871d83f3222c", "sha256": "cffd34b231c27c86bc56fd6db3bb51f3ea0be5f4aaa974db255643574b199365"}, "downloads": -1, "filename": "connmonitor-4.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0856c4e6f52800c48512871d83f3222c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 11401, "upload_time": "2018-08-08T14:33:52", "upload_time_iso_8601": "2018-08-08T14:33:52.167219Z", "url": "https://files.pythonhosted.org/packages/89/49/0e744560fd14bf15876c7dec413336e4a662761075a92c3cd15660466623/connmonitor-4.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "147ca38272b5aac474e5ea4f82560aac", "sha256": "0981464da5c277e433af3d22f935e896a719d2d49381f7b079307f8070212385"}, "downloads": -1, "filename": "connmonitor-4.1.2.tar.gz", "has_sig": false, "md5_digest": "147ca38272b5aac474e5ea4f82560aac", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 14909, "upload_time": "2018-08-08T14:33:53", "upload_time_iso_8601": "2018-08-08T14:33:53.364188Z", "url": "https://files.pythonhosted.org/packages/3a/dd/8ddbdc093a8e91510f5f36c4b47b489ff3a5287185374e8adb08677394ea/connmonitor-4.1.2.tar.gz", "yanked": false}], "4.1.3": [{"comment_text": "", "digests": {"md5": "a010357fba73da3a8bb567b8e57b9b24", "sha256": "b99f7140bce2be94a3b62a98229dea09f8bba2df9bb1106dd71a4048e8cd4922"}, "downloads": -1, "filename": "connmonitor-4.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a010357fba73da3a8bb567b8e57b9b24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 11538, "upload_time": "2018-08-13T14:15:36", "upload_time_iso_8601": "2018-08-13T14:15:36.709816Z", "url": "https://files.pythonhosted.org/packages/cb/db/6b2eecef5b84ac7b3f50fa5110257750f987526fc27ce6cdc5dd2501264f/connmonitor-4.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "483e2aafe6040dff9c49e992bba11cb9", "sha256": "0de2471e5670db8bed58784ceb518655bf2206fe4facbb98c37b23d9e5bb7c9e"}, "downloads": -1, "filename": "connmonitor-4.1.3.tar.gz", "has_sig": false, "md5_digest": "483e2aafe6040dff9c49e992bba11cb9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 15048, "upload_time": "2018-08-13T14:15:37", "upload_time_iso_8601": "2018-08-13T14:15:37.943622Z", "url": "https://files.pythonhosted.org/packages/e2/a2/ba952ee9f9c4c2d069e1c583a2b0e1e3b857cd01eda7fcb477f832b1777a/connmonitor-4.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a010357fba73da3a8bb567b8e57b9b24", "sha256": "b99f7140bce2be94a3b62a98229dea09f8bba2df9bb1106dd71a4048e8cd4922"}, "downloads": -1, "filename": "connmonitor-4.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a010357fba73da3a8bb567b8e57b9b24", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 11538, "upload_time": "2018-08-13T14:15:36", "upload_time_iso_8601": "2018-08-13T14:15:36.709816Z", "url": "https://files.pythonhosted.org/packages/cb/db/6b2eecef5b84ac7b3f50fa5110257750f987526fc27ce6cdc5dd2501264f/connmonitor-4.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "483e2aafe6040dff9c49e992bba11cb9", "sha256": "0de2471e5670db8bed58784ceb518655bf2206fe4facbb98c37b23d9e5bb7c9e"}, "downloads": -1, "filename": "connmonitor-4.1.3.tar.gz", "has_sig": false, "md5_digest": "483e2aafe6040dff9c49e992bba11cb9", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 15048, "upload_time": "2018-08-13T14:15:37", "upload_time_iso_8601": "2018-08-13T14:15:37.943622Z", "url": "https://files.pythonhosted.org/packages/e2/a2/ba952ee9f9c4c2d069e1c583a2b0e1e3b857cd01eda7fcb477f832b1777a/connmonitor-4.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:42 2020"}