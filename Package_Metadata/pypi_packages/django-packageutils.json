{"info": {"author": "Alisue", "author_email": "lambdalisue@hashnote.net", "bugtrack_url": null, "classifiers": ["Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP"], "description": "Django packageutils\n======================================\nThis is a utility collection for packaging Django App. The following features\nare available.\n\n1.  Unittest utility for running with setup.py\n\n2.  Unittest utility for dynamically adding models only used in the test\n\n3.  Automatically create user within syncdb command\n\nHow to install\n----------------------------\nUse pip comand or easy_install::\n\n    pip install django-packageutils\n\nDirectory tree assumed\n--------------------------------------------\n::\n\n    django-packagename\n        +- setup.py\n        +- RELEASE-VERSION          # used for git versioning\n        +- packagename              # your package\n            +- __init__.py\n            +- models.py            # or whatever\n            +- tests\n                +- __init__.py\n                +- test_models.py   # or whatever\n                +- testapp          # App only required in tests of this package \n                    +- __init__.py\n                    +- models.py\n        +- test                     # django project for testing\n            +- __init__.py\n            +- settings.py\n            +- manage.py\n            +- urls.py\n            +- runtests.py          # for running test with setup.py\n\nUnittest utility for running with setup.py\n------------------------------------------------------------------------------------\nWrite your ``runtests.py`` in your package directory as::\n\n    import os\n    from packageutils.test import get_package_runner\n    from packageutils.test import run_tests\n\n    def runtests(verbosity=1, interactive=True):\n        package_dir = os.path.dirname(__file__)\n        test_runner = get_package_runner(package_dir, verbosity, interactive)\n        run_tests(test_runner, ['some_application_name'])\n\n    if __name__ == '__main__':\n        runtests()\n\nAdd test suite to your ``setup.py`` as::\n\n    setup(\n        # ... some configures\n        install_requires = [\n            'distribute',           # recommended\n            'setuptools-git',       # recommended\n            'django-packageutils',  # required\n            # and some other requires\n        ],\n        test_suite = 'tests.runtests.runtests',\n        test_require = [\n            'django',\n        ],\n    )\n    \nThen execute the following command::\n\n    python setup.py test\n\nUnittest utility for dynamically adding models only used in the test\n----------------------------------------------------------------------------------------------------------------------------------------\nWith Django default TestCase, you cannot add required models within test. Sometime you need extra models for testing your django package\nthen you can use ``AppTestCase`` as::\n\n    from packageutils.testcase import AppTestCase\n    from testapp.models import Article\n\n    class TestAppTestCase(AppTestCase):\n        # Apps only required in this test\n        installed_apps = [\n            'packagename.tests.testapp',\n        ]\n        # Middlewares only required in this test\n        middleware_classes = [\n            'testapp.middleware.SomeMiddlewareRequired',\n        ]\n\n        def test_creation(self):\n            article = Article.objects.create(title='foo')\n            assert Article.objects.filter(title='foo').exists()\n\nAutomatically create user within syncdb command\n----------------------------------------------------------------------------------------------\nAdd ``packageutils.syncdb.autouser`` in ``INSTALLED_APPS`` then admin user is created automatically\nwithin syncdb command (password will be set as 'admin')", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/lambdalisue/django-packageutils/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lambdalisue/django-packageutils", "keywords": "django package utilty", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-packageutils", "package_url": "https://pypi.org/project/django-packageutils/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-packageutils/", "project_urls": {"Download": "https://github.com/lambdalisue/django-packageutils/tarball/master", "Homepage": "https://github.com/lambdalisue/django-packageutils"}, "release_url": "https://pypi.org/project/django-packageutils/0.1.0/", "requires_dist": null, "requires_python": null, "summary": "Utility collection of Django package", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a utility collection for packaging Django App. The following features\nare available.</p>\n<ol>\n<li>Unittest utility for running with setup.py</li>\n<li>Unittest utility for dynamically adding models only used in the test</li>\n<li>Automatically create user within syncdb command</li>\n</ol>\n<div id=\"how-to-install\">\n<h2>How to install</h2>\n<p>Use pip comand or easy_install:</p>\n<pre>pip install django-packageutils\n</pre>\n</div>\n<div id=\"directory-tree-assumed\">\n<h2>Directory tree assumed</h2>\n<pre>django-packagename\n    +- setup.py\n    +- RELEASE-VERSION          # used for git versioning\n    +- packagename              # your package\n        +- __init__.py\n        +- models.py            # or whatever\n        +- tests\n            +- __init__.py\n            +- test_models.py   # or whatever\n            +- testapp          # App only required in tests of this package\n                +- __init__.py\n                +- models.py\n    +- test                     # django project for testing\n        +- __init__.py\n        +- settings.py\n        +- manage.py\n        +- urls.py\n        +- runtests.py          # for running test with setup.py\n</pre>\n</div>\n<div id=\"unittest-utility-for-running-with-setup-py\">\n<h2>Unittest utility for running with setup.py</h2>\n<p>Write your <tt>runtests.py</tt> in your package directory as:</p>\n<pre>import os\nfrom packageutils.test import get_package_runner\nfrom packageutils.test import run_tests\n\ndef runtests(verbosity=1, interactive=True):\n    package_dir = os.path.dirname(__file__)\n    test_runner = get_package_runner(package_dir, verbosity, interactive)\n    run_tests(test_runner, ['some_application_name'])\n\nif __name__ == '__main__':\n    runtests()\n</pre>\n<p>Add test suite to your <tt>setup.py</tt> as:</p>\n<pre>setup(\n    # ... some configures\n    install_requires = [\n        'distribute',           # recommended\n        'setuptools-git',       # recommended\n        'django-packageutils',  # required\n        # and some other requires\n    ],\n    test_suite = 'tests.runtests.runtests',\n    test_require = [\n        'django',\n    ],\n)\n</pre>\n<p>Then execute the following command:</p>\n<pre>python setup.py test\n</pre>\n</div>\n<div id=\"unittest-utility-for-dynamically-adding-models-only-used-in-the-test\">\n<h2>Unittest utility for dynamically adding models only used in the test</h2>\n<p>With Django default TestCase, you cannot add required models within test. Sometime you need extra models for testing your django package\nthen you can use <tt>AppTestCase</tt> as:</p>\n<pre>from packageutils.testcase import AppTestCase\nfrom testapp.models import Article\n\nclass TestAppTestCase(AppTestCase):\n    # Apps only required in this test\n    installed_apps = [\n        'packagename.tests.testapp',\n    ]\n    # Middlewares only required in this test\n    middleware_classes = [\n        'testapp.middleware.SomeMiddlewareRequired',\n    ]\n\n    def test_creation(self):\n        article = Article.objects.create(title='foo')\n        assert Article.objects.filter(title='foo').exists()\n</pre>\n</div>\n<div id=\"automatically-create-user-within-syncdb-command\">\n<h2>Automatically create user within syncdb command</h2>\n<p>Add <tt>packageutils.syncdb.autouser</tt> in <tt>INSTALLED_APPS</tt> then admin user is created automatically\nwithin syncdb command (password will be set as \u2018admin\u2019)</p>\n</div>\n\n          </div>"}, "last_serial": 790243, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "959b3768d94654b917d53ce00731060c", "sha256": "7eed53f5806ca193b586d031579f5cc2667dfca2ef94b9c677f953943a5d2bae"}, "downloads": -1, "filename": "django_packageutils-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "959b3768d94654b917d53ce00731060c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 60081, "upload_time": "2012-02-02T06:43:32", "upload_time_iso_8601": "2012-02-02T06:43:32.090324Z", "url": "https://files.pythonhosted.org/packages/97/f1/e4aa0b9e3d93da23fe9ab33a91eb94f325649b55a71779cdbb41c8d9c8c9/django_packageutils-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "65c4063bd7220612ae373456caaf6d09", "sha256": "e067b3c8954d5550c5c69dd27e795259ac2f67e570bdfab5f03d7ab716db1be6"}, "downloads": -1, "filename": "django-packageutils-0.1.0.tar.gz", "has_sig": false, "md5_digest": "65c4063bd7220612ae373456caaf6d09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22694, "upload_time": "2012-02-02T06:43:30", "upload_time_iso_8601": "2012-02-02T06:43:30.093675Z", "url": "https://files.pythonhosted.org/packages/c1/a1/3ac729fd1f409ec3d7730bf7f7c79b6a91b6caac7e35743cf40770803d00/django-packageutils-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "959b3768d94654b917d53ce00731060c", "sha256": "7eed53f5806ca193b586d031579f5cc2667dfca2ef94b9c677f953943a5d2bae"}, "downloads": -1, "filename": "django_packageutils-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "959b3768d94654b917d53ce00731060c", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 60081, "upload_time": "2012-02-02T06:43:32", "upload_time_iso_8601": "2012-02-02T06:43:32.090324Z", "url": "https://files.pythonhosted.org/packages/97/f1/e4aa0b9e3d93da23fe9ab33a91eb94f325649b55a71779cdbb41c8d9c8c9/django_packageutils-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "65c4063bd7220612ae373456caaf6d09", "sha256": "e067b3c8954d5550c5c69dd27e795259ac2f67e570bdfab5f03d7ab716db1be6"}, "downloads": -1, "filename": "django-packageutils-0.1.0.tar.gz", "has_sig": false, "md5_digest": "65c4063bd7220612ae373456caaf6d09", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22694, "upload_time": "2012-02-02T06:43:30", "upload_time_iso_8601": "2012-02-02T06:43:30.093675Z", "url": "https://files.pythonhosted.org/packages/c1/a1/3ac729fd1f409ec3d7730bf7f7c79b6a91b6caac7e35743cf40770803d00/django-packageutils-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:20 2020"}