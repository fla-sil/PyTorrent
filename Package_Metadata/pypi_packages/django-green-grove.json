{"info": {"author": "dreipol GmbH", "author_email": "dev@dreipol.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.10", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "==================\ndjango-green-grove\n==================\n\nCollection of helpers to back up Django projects that use a Postgres database and a S3 bucket as media storage.\n\n\nQuickstart\n----------\n\nInstall django-green-grove using pip::\n\n    pip install django-green-grove\n\n\nAdd the following to your ``settings.py`` module::\n\n    BACKUP_BUCKET_AWS_ACCESS_KEY_ID = ''\n    BACKUP_BUCKET_AWS_SECRET_ACCESS_KEY = '\n    BACKUP_BUCKET_BUCKET_NAME = ''\n    BACKUP_BUCKET_LOCATION = ''\n\n\nBackup Project\n--------------\n\nWe suggest to use this management command as a cron tab::\n\n    python manage.py backup_project\n\n\nTutorial\n--------\n\nThis tutorial covers the steps that are needed to backup and restore a Django project that uses a Dokku hosting with a Postgres database and a S3 Bucket as media storage.\n\n**Backup project**\n\n1.  Connect to your server\n2.  Connect to the docker container: ``dokku enter <project_name>``\n3.  ``python manage.py backup_project``\n\n**Restore from backup**\n\n1.  Connect to your server\n2.  Connect to the database: ``dokku postgres:connect db``\n3.  Drop the database: ``DROP DATABASE <db_name>;``\n4.  Recreate the database: ``CREATE DATABASE <db_name>;``\n5.  Grant privileges: ``GRANT ALL PRIVILEGES ON DATABASE <db_name> to <username>;``\n6.  Exit the postgres console and the session on the server\n7.  Download the database dump file from the bucket to your local machine: ``s3cmd cp <path_of_dump_file> .``\n8.  Move the dump file to the server: ``scp <path_of_dump_file> <server>``\n9.  Connect to your server\n10. Import the dump: ``cat <file_name> | sudo docker exec -i dokku.postgres.db psql -U <username> <db_name>``\n11. Remove the media folder of your bucket (s3cmd or web interface)\n12. Open up the terminal on your local machine\n13. Copy the backup of the media folder back to the bucket:\n \u00a0  ``s3cmd cp --recursive  --acl-public s3://backups/<project_name>/<timestamp>/media/ s3://<project_name>/media/``\n\n\nTrivia\n------\n\nThis package is named after the fictional retirement community where Tony Soprano, Paulie Gualtieri, and other Mafiosi admit their mothers, in The Sopranos.\n\n\nCredits\n-------\n\nTools used in rendering this package:\n\n*  Cookiecutter_\n*  `cookiecutter-djangopackage`_\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`cookiecutter-djangopackage`: https://github.com/pydanny/cookiecutter-djangopackage\n\n\n\n\nHistory\n-------", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dreipol/django-green-grove", "keywords": "django-green-grove", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-green-grove", "package_url": "https://pypi.org/project/django-green-grove/", "platform": "", "project_url": "https://pypi.org/project/django-green-grove/", "project_urls": {"Homepage": "https://github.com/dreipol/django-green-grove"}, "release_url": "https://pypi.org/project/django-green-grove/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "Collection of helpers to back up Django projects that use a Postgres database and a S3 bucket as media storage.", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Collection of helpers to back up Django projects that use a Postgres database and a S3 bucket as media storage.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install django-green-grove using pip:</p>\n<pre>pip install django-green-grove\n</pre>\n<p>Add the following to your <tt>settings.py</tt> module:</p>\n<pre>BACKUP_BUCKET_AWS_ACCESS_KEY_ID = ''\nBACKUP_BUCKET_AWS_SECRET_ACCESS_KEY = '\nBACKUP_BUCKET_BUCKET_NAME = ''\nBACKUP_BUCKET_LOCATION = ''\n</pre>\n</div>\n<div id=\"backup-project\">\n<h2>Backup Project</h2>\n<p>We suggest to use this management command as a cron tab:</p>\n<pre>python manage.py backup_project\n</pre>\n</div>\n<div id=\"tutorial\">\n<h2>Tutorial</h2>\n<p>This tutorial covers the steps that are needed to backup and restore a Django project that uses a Dokku hosting with a Postgres database and a S3 Bucket as media storage.</p>\n<p><strong>Backup project</strong></p>\n<ol>\n<li>Connect to your server</li>\n<li>Connect to the docker container: <tt>dokku enter &lt;project_name&gt;</tt></li>\n<li><tt>python manage.py backup_project</tt></li>\n</ol>\n<p><strong>Restore from backup</strong></p>\n<ol>\n<li>Connect to your server</li>\n<li>Connect to the database: <tt>dokku postgres:connect db</tt></li>\n<li>Drop the database: <tt>DROP DATABASE &lt;db_name&gt;;</tt></li>\n<li>Recreate the database: <tt>CREATE DATABASE &lt;db_name&gt;;</tt></li>\n<li>Grant privileges: <tt>GRANT ALL PRIVILEGES ON DATABASE &lt;db_name&gt; to &lt;username&gt;;</tt></li>\n<li>Exit the postgres console and the session on the server</li>\n<li>Download the database dump file from the bucket to your local machine: <tt>s3cmd cp &lt;path_of_dump_file&gt; .</tt></li>\n<li>Move the dump file to the server: <tt>scp &lt;path_of_dump_file&gt; &lt;server&gt;</tt></li>\n<li>Connect to your server</li>\n<li>Import the dump: <tt>cat &lt;file_name&gt; | sudo docker exec <span class=\"pre\">-i</span> dokku.postgres.db psql <span class=\"pre\">-U</span> &lt;username&gt; &lt;db_name&gt;</tt></li>\n<li>Remove the media folder of your bucket (s3cmd or web interface)</li>\n<li>Open up the terminal on your local machine</li>\n<li>Copy the backup of the media folder back to the bucket:\n<tt>s3cmd cp <span class=\"pre\">--recursive</span>\u00a0 <span class=\"pre\">--acl-public</span> <span class=\"pre\">s3://backups/&lt;project_name&gt;/&lt;timestamp&gt;/media/</span> <span class=\"pre\">s3://&lt;project_name&gt;/media/</span></tt></li>\n</ol>\n</div>\n<div id=\"trivia\">\n<h2>Trivia</h2>\n<p>This package is named after the fictional retirement community where Tony Soprano, Paulie Gualtieri, and other Mafiosi admit their mothers, in The Sopranos.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Tools used in rendering this package:</p>\n<ul>\n<li><a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a></li>\n<li><a href=\"https://github.com/pydanny/cookiecutter-djangopackage\" rel=\"nofollow\">cookiecutter-djangopackage</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n</div>\n\n          </div>"}, "last_serial": 3665253, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "da488442854a9e5ffb36babd6bc5ebcd", "sha256": "85aeb7125d7ceb113261b470ea3d31fc20fd817612ebb69b602accae0b51c080"}, "downloads": -1, "filename": "django-green-grove-0.1.0.tar.gz", "has_sig": false, "md5_digest": "da488442854a9e5ffb36babd6bc5ebcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7119, "upload_time": "2017-06-28T13:11:58", "upload_time_iso_8601": "2017-06-28T13:11:58.402325Z", "url": "https://files.pythonhosted.org/packages/34/6e/a558b44a94382387ab5b700bf414fae8cfe440259fcbcc893e0570ff7b57/django-green-grove-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "49f8af031bca0b5a8d9c638c02de9750", "sha256": "f443529b784925614514e67b24f52d04189a1aa87844d4f291604abc0a1aff74"}, "downloads": -1, "filename": "django-green-grove-0.1.1.tar.gz", "has_sig": false, "md5_digest": "49f8af031bca0b5a8d9c638c02de9750", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7833, "upload_time": "2017-07-07T14:40:09", "upload_time_iso_8601": "2017-07-07T14:40:09.989694Z", "url": "https://files.pythonhosted.org/packages/6f/ed/86d33254e8e23561bd5025a02ac20753d183dc83f2d48b6ea4bf8aae3d3b/django-green-grove-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "eb9760ff9ecb96b7d699ca88a7c7d7c3", "sha256": "639f53e7ca128971b8978dd22be326ba6e750b49418f1e68f15dbf23eeace67f"}, "downloads": -1, "filename": "django-green-grove-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eb9760ff9ecb96b7d699ca88a7c7d7c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8210, "upload_time": "2018-03-13T13:16:08", "upload_time_iso_8601": "2018-03-13T13:16:08.990591Z", "url": "https://files.pythonhosted.org/packages/67/07/715670d26846fb3aa791a90f6184a2a3297e9e0bae957fbeefb78a7ae033/django-green-grove-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "eb9760ff9ecb96b7d699ca88a7c7d7c3", "sha256": "639f53e7ca128971b8978dd22be326ba6e750b49418f1e68f15dbf23eeace67f"}, "downloads": -1, "filename": "django-green-grove-0.1.2.tar.gz", "has_sig": false, "md5_digest": "eb9760ff9ecb96b7d699ca88a7c7d7c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8210, "upload_time": "2018-03-13T13:16:08", "upload_time_iso_8601": "2018-03-13T13:16:08.990591Z", "url": "https://files.pythonhosted.org/packages/67/07/715670d26846fb3aa791a90f6184a2a3297e9e0bae957fbeefb78a7ae033/django-green-grove-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:47 2020"}