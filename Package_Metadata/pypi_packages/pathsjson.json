{"info": {"author": "John Bjorn Nelson", "author_email": "jbn@falsifiable.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Code Generators", "Topic :: System :: Filesystems", "Topic :: Utilities"], "description": ".. image:: https://travis-ci.org/jbn/pathsjson.svg?branch=master\n    :target: https://travis-ci.org/jbn/pathsjson\n.. image:: https://ci.appveyor.com/api/projects/status/xre5b722qk6ckqaf?svg=true\n    :target: https://ci.appveyor.com/project/jbn/pathsjson/branch/master\n.. image:: https://coveralls.io/repos/github/jbn/pathsjson/badge.svg?branch=master\n    :target: https://coveralls.io/github/jbn/pathsjson?branch=master \n.. image:: https://img.shields.io/pypi/v/pathsjson.svg\n    :target: https://pypi.python.org/pypi/pathsjson\n.. image:: https://img.shields.io/badge/license-MIT-blue.svg\n    :target: https://raw.githubusercontent.com/jbn/pathsjson/master/LICENSE\n.. image:: https://img.shields.io/pypi/pyversions/pathsjson.svg\n    :target: https://pypi.python.org/pypi/pathsjson\n\n\nWhat is this?\n=============\n\nA JSON-based DSL for describing paths in your project.\n\nWhy is this?\n~~~~~~~~~~~~\n\nMy etl/data analysis projects are littered with code like,\n\n.. code:: python\n\n    import os\n\n    DATA_DIR = \"data\"\n    CLEAN_DIR = os.path.join(DATA_DIR, \"clean\")\n    RAW_DIR = os.path.join(DATA_DIR, \"raw\")\n    TARGET_HTML = os.path.join(RAW_DIR, \"something.html\")\n    OUTPUT_FILE = os.path.join(CLEAN_DIR, \"something.csv\")\n\n    with open(TARGET_HTML) as fp:\n        csv = process(fp)\n\n    with open(OUTPUT_FILE) as fp:\n        write_csv(fp)\n\nIt's fine for one file, but when you have a whole ELT pipeline tucked\ninto a ``Makefile``, the duplication leads to fragility and violates\nDRY. It's a **REALLY** common pattern in file-based processing. This\npackage and format lets you do create a ``.paths.json`` file like,\n\n.. code:: json\n\n    {\n        \"__ENV\": {\"VERSION\": \"0.0.1\"},\n        \"DATA_DIR\": [\"data\", \"$$VERSION\"],\n        \"CLEAN_DIR\": [\"$DATA_DIR\", \"clean\"],\n        \"RAW_DIR\": [\"$DATA_DIR\", \"raw\"],\n        \"SOMETHING_HTML\": [\"$RAW_DIR\", \"something.html\"],\n        \"SOMETHING_CSV\": [\"$RAW_DIR\", \"something.csv\"]\n    }\n\nThen, from your python scripts,\n\n.. code:: python\n\n    from pathsjson.automagic import PATHS\n\n    print(\"Processing:\", PATHS['SOMETHING_HTML'])\n    with PATHS.resolve('SOMETHING_HTML').open() as fp:\n        csv = process(fp)\n\n    with PATHS.resolve('SOMETHING_CSV').open(\"w\") as fp:\n        write_csv(fp)\n\nInstallation\n------------\n.. code:: bash\n\n    pip install pathsjson\n\n\nValidation\n----------\n\nThere is a ``.paths.json`` \n`schema <http://pathsjson.falsifiable.com/schema.json#>`_. \nIt's validated with `JSON-Schema <http://json-schema.org/>`_.\n\nMore details\n------------\n\nRead the docs: `here <http://pathsjson.falsifiable.com>`_.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pathsjson.falsifiable.com", "keywords": "data analysis", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pathsjson", "package_url": "https://pypi.org/project/pathsjson/", "platform": "", "project_url": "https://pypi.org/project/pathsjson/", "project_urls": {"Homepage": "https://pathsjson.falsifiable.com"}, "release_url": "https://pypi.org/project/pathsjson/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jbn/pathsjson\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jbn/pathsjson.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a450857b2f99984270b1e7065fc23ce96084ce5/68747470733a2f2f7472617669732d63692e6f72672f6a626e2f70617468736a736f6e2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://ci.appveyor.com/project/jbn/pathsjson/branch/master\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/xre5b722qk6ckqaf?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/183000a1d47395d3cfcbe20130d0430d600a1a1a/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f7872653562373232716b36636b7161663f7376673d74727565\"></a>\n<a href=\"https://coveralls.io/github/jbn/pathsjson?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/jbn/pathsjson/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/73c8cd55a82288df52aec6206c8c963aedf9c5ac/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f6a626e2f70617468736a736f6e2f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://pypi.python.org/pypi/pathsjson\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/pathsjson.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ceecf92e646cb198a80b2fc7f98f133d9e16b22b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70617468736a736f6e2e737667\"></a>\n<a href=\"https://raw.githubusercontent.com/jbn/pathsjson/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/license-MIT-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c88fab50b4a1dc0cd91faeb7ba5654d56e380260/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4d49542d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pathsjson\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/pathsjson.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7892a4f9c70e070e929c9df981a6cb40dc0ba8da/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70617468736a736f6e2e737667\"></a>\n<div id=\"what-is-this\">\n<h2>What is this?</h2>\n<p>A JSON-based DSL for describing paths in your project.</p>\n<div id=\"why-is-this\">\n<h3>Why is this?</h3>\n<p>My etl/data analysis projects are littered with code like,</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"n\">DATA_DIR</span> <span class=\"o\">=</span> <span class=\"s2\">\"data\"</span>\n<span class=\"n\">CLEAN_DIR</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">DATA_DIR</span><span class=\"p\">,</span> <span class=\"s2\">\"clean\"</span><span class=\"p\">)</span>\n<span class=\"n\">RAW_DIR</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">DATA_DIR</span><span class=\"p\">,</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">)</span>\n<span class=\"n\">TARGET_HTML</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">RAW_DIR</span><span class=\"p\">,</span> <span class=\"s2\">\"something.html\"</span><span class=\"p\">)</span>\n<span class=\"n\">OUTPUT_FILE</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">CLEAN_DIR</span><span class=\"p\">,</span> <span class=\"s2\">\"something.csv\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">TARGET_HTML</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">OUTPUT_FILE</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"n\">write_csv</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n</pre>\n<p>It\u2019s fine for one file, but when you have a whole ELT pipeline tucked\ninto a <tt>Makefile</tt>, the duplication leads to fragility and violates\nDRY. It\u2019s a <strong>REALLY</strong> common pattern in file-based processing. This\npackage and format lets you do create a <tt>.paths.json</tt> file like,</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"__ENV\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"nt\">\"VERSION\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0.0.1\"</span><span class=\"p\">},</span>\n    <span class=\"nt\">\"DATA_DIR\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"data\"</span><span class=\"p\">,</span> <span class=\"s2\">\"$$VERSION\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"CLEAN_DIR\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"$DATA_DIR\"</span><span class=\"p\">,</span> <span class=\"s2\">\"clean\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"RAW_DIR\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"$DATA_DIR\"</span><span class=\"p\">,</span> <span class=\"s2\">\"raw\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"SOMETHING_HTML\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"$RAW_DIR\"</span><span class=\"p\">,</span> <span class=\"s2\">\"something.html\"</span><span class=\"p\">],</span>\n    <span class=\"nt\">\"SOMETHING_CSV\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s2\">\"$RAW_DIR\"</span><span class=\"p\">,</span> <span class=\"s2\">\"something.csv\"</span><span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Then, from your python scripts,</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pathsjson.automagic</span> <span class=\"kn\">import</span> <span class=\"n\">PATHS</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Processing:\"</span><span class=\"p\">,</span> <span class=\"n\">PATHS</span><span class=\"p\">[</span><span class=\"s1\">'SOMETHING_HTML'</span><span class=\"p\">])</span>\n<span class=\"k\">with</span> <span class=\"n\">PATHS</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"s1\">'SOMETHING_HTML'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"n\">csv</span> <span class=\"o\">=</span> <span class=\"n\">process</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n\n<span class=\"k\">with</span> <span class=\"n\">PATHS</span><span class=\"o\">.</span><span class=\"n\">resolve</span><span class=\"p\">(</span><span class=\"s1\">'SOMETHING_CSV'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s2\">\"w\"</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">fp</span><span class=\"p\">:</span>\n    <span class=\"n\">write_csv</span><span class=\"p\">(</span><span class=\"n\">fp</span><span class=\"p\">)</span>\n</pre>\n<div id=\"installation\">\n<h4>Installation</h4>\n<pre>pip install pathsjson\n</pre>\n</div>\n<div id=\"validation\">\n<h4>Validation</h4>\n<p>There is a <tt>.paths.json</tt>\n<a href=\"http://pathsjson.falsifiable.com/schema.json#\" rel=\"nofollow\">schema</a>.\nIt\u2019s validated with <a href=\"http://json-schema.org/\" rel=\"nofollow\">JSON-Schema</a>.</p>\n</div>\n<div id=\"more-details\">\n<h4>More details</h4>\n<p>Read the docs: <a href=\"http://pathsjson.falsifiable.com\" rel=\"nofollow\">here</a>.</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3328696, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "78e6770bc4b75c4af052e2e457c8d85c", "sha256": "998b4a1ad43543ae2d0c24cf42846fca10197061d6bddd5f264d35a22f005730"}, "downloads": -1, "filename": "pathsjson-0.0.1.tar.gz", "has_sig": false, "md5_digest": "78e6770bc4b75c4af052e2e457c8d85c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5607, "upload_time": "2017-10-25T19:02:15", "upload_time_iso_8601": "2017-10-25T19:02:15.690986Z", "url": "https://files.pythonhosted.org/packages/4f/e0/9488ede98422d34ccd27a91d62671ac2e1d087703cb8c8042ff97c5de148/pathsjson-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "704eb83cd4f74c91c720936298aac19d", "sha256": "6920fb70d5a0ddb151b288ce3570fda56e3e6dbbba156fd293aa2528536b60da"}, "downloads": -1, "filename": "pathsjson-0.0.2.tar.gz", "has_sig": false, "md5_digest": "704eb83cd4f74c91c720936298aac19d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6663, "upload_time": "2017-10-26T00:16:32", "upload_time_iso_8601": "2017-10-26T00:16:32.313562Z", "url": "https://files.pythonhosted.org/packages/6e/57/5972e3a11e09425510eac709bb223f8f4a9f7c6e668c31ef6d4c842a39cc/pathsjson-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "f328d2497cb1c9db37c6b541fe867332", "sha256": "61370bbfdfe99e068cd5582338d6d13af021031144bebecbfcf612b9c638488a"}, "downloads": -1, "filename": "pathsjson-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f328d2497cb1c9db37c6b541fe867332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11956, "upload_time": "2017-11-13T14:26:05", "upload_time_iso_8601": "2017-11-13T14:26:05.370256Z", "url": "https://files.pythonhosted.org/packages/80/8e/5066f27ada75500358cc2a69924fb999b0312e4937d09e756e392bd180ef/pathsjson-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f328d2497cb1c9db37c6b541fe867332", "sha256": "61370bbfdfe99e068cd5582338d6d13af021031144bebecbfcf612b9c638488a"}, "downloads": -1, "filename": "pathsjson-0.0.3.tar.gz", "has_sig": false, "md5_digest": "f328d2497cb1c9db37c6b541fe867332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11956, "upload_time": "2017-11-13T14:26:05", "upload_time_iso_8601": "2017-11-13T14:26:05.370256Z", "url": "https://files.pythonhosted.org/packages/80/8e/5066f27ada75500358cc2a69924fb999b0312e4937d09e756e392bd180ef/pathsjson-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:51 2020"}