{"info": {"author": "Ikaros Kun", "author_email": "merle.liukun@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\nPython YouTube\n\nA Python wrapper around for YouTube Data API V3.\n\n.. image:: https://travis-ci.org/sns-sdks/python-youtube.svg?branch=master\n    :target: https://travis-ci.org/sns-sdks/python-youtube\n\n.. image:: https://readthedocs.org/projects/python-youtube/badge/?version=latest\n    :target: https://python-youtube.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://codecov.io/gh/sns-sdks/python-youtube/branch/master/graph/badge.svg\n    :target: https://codecov.io/gh/sns-sdks/python-youtube\n\n.. image:: https://img.shields.io/pypi/v/python-youtube.svg\n    :target: https://img.shields.io/pypi/v/python-youtube\n\n======\nTHANKS\n======\n\nThis project structure is base on `Python-Twitter <https://github.com/bear/python-twitter>`_.\n\nThanks a lot for Python-Twitter Developers.\n\n============\nIntroduction\n============\n\nLibrary provides an easy way to use YouTube Data API V3.\n\n=============\nDocumentation\n=============\n\nYou can view the latest ``python-youtube`` documentation at: https://python-youtube.readthedocs.io/en/latest/.\n\nAlso view the full ``YouTube DATA API`` docs at: https://google-developers.appspot.com/youtube/v3/docs/.\n\n==========\nInstalling\n==========\n\nYou can install this lib from `pypi`::\n\n    $pip install --upgrade python-youtube\n    \u2728\ud83c\udf70\u2728\n\n=====\nUsing\n=====\n\nThe API is exposed via the ``pyyoutube.Api`` class.\n\n-----------\nINSTANTIATE\n-----------\n\nThere provide two method to create instance the ``pyyoutube.Api``.\n\nYou can just initialize with the an api key::\n\n    In [1]: from pyyoutube import Api\n    In [2]: api = Api(api_key='your api key')\n\nIf you want to get some authorization data. you need to initialize with an access token::\n\n    In [1]: from pyyoutube import Api\n    In [2]: api = Api(api_key='your api key')\n\nYou can read the docs to see how to get an access token.\n\nNow you can use the instance to get data from YouTube.\n\n------------\nCHANNEL DATA\n------------\n\nNow library provide several ways to get channel's data.\n\nIf not found channel. the property ``items`` will return with blank list.\n\nYou can use channel id::\n\n    In [3]: channel_by_id = api.get_channel_info(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\")\n    In [4]: channel_by_id.items\n    Out[4]: [Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw')]\n    In [6]: channel_by_id.items[0].to_dict()\n    Out[6]:\n    {'kind': 'youtube#channel',\n     'etag': '\"j6xRRd8dTPVVptg711_CSPADRfg/AW8QEqbNRoIJv9KuzCIg0CG6aJA\"',\n     'id': 'UC_x5XG1OV2P6uZZ5FSM9Ttw',\n     'snippet': {'title': 'Google Developers',\n      'description': 'The Google Developers channel features talks from events, educational series, best practices, tips, and the latest updates across our products and platforms.',\n      'customUrl': 'googlecode',\n      'publishedAt': '2007-08-23T00:34:43.000Z',\n      'thumbnails': {'default': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s88-c-k-c0xffffffff-no-rj-mo',\n        'width': 88,\n        'height': 88},\n       'medium': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s240-c-k-c0xffffffff-no-rj-mo',\n        'width': 240,\n        'height': 240},\n       'high': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s800-c-k-c0xffffffff-no-rj-mo',\n        'width': 800,\n        'height': 800},\n       'standard': None,\n       'maxres': None},\n      'defaultLanguage': None,\n      'localized': {'title': 'Google Developers',\n       'description': 'The Google Developers channel features talks from events, educational series, best practices, tips, and the latest updates across our products and platforms.'},\n      'country': 'US'},\n      ...\n      }\n\nYou can pass channel id with comma-separated id string or a list,tuple or set of ids to get multi channels.\nMany methods also provide this method.\n\nwith ids::\n\n    In [9]: channel_by_ids = api.get_channel_info(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw,UCa-vrCLQHviTOVnEKDOdetQ\")\n    In [10]: channel_by_ids.items\n    Out[10]:\n    [Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw'),\n     Channel(kind='youtube#channel', id='UCa-vrCLQHviTOVnEKDOdetQ')]\n\nYou can also use channel name::\n\n    In [7]: channel_by_name = api.get_channel_info(channel_name=\"GoogleDevelopers\")\n    In [8]: channel_by_name.items[0]\n    Out[8]: Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw')\n\nIf you have authorized, you can get your channels::\n\n    In [3]: channel_by_mine = api_with_authorization.get_channel_info(mine=True)\n    In [4]: channel_by_mine.items[0]\n    Out[4]: Channel(kind='youtube#channel', id='UCa-vrCLQHviTOVnEKDOdetQ')\n\n.. note::\n    To get your channel, you must do authorize first, otherwise you will get error.\n\n--------\nPLAYLIST\n--------\n\nThere provide methods to get playlists by playlist id, channel id or get your self playlists.\n\nGet playlists by id::\n\n    In [5]: playlists_by_id = api.get_playlist_by_id(playlist_id=\"PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw\")\n    In [6]: playlists_by_id.items\n    Out[6]: [Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw')]\n\nGet playlists by channel(If you want to get target channel all playlist, just provide the parameter ``count`` with ``None``)::\n\n    In [3]: playlists_by_channel = api.get_playlists(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\")\n    In [4]: playlists_by_channel.items\n    Out[4]:\n    [Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw'),\n     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIJO83u2UmyC8ud41AvUnhgj'),\n     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsILfV1LiUhDjbh1jkFjQWrYB'),\n     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKNr3Wfhm8o0TSojW7hEPPY'),\n     Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIJ8ItHmK4bRlY4GCzMgXLAJ')]\n\nGet your playlists(this need authorization)::\n\n    In [7]: playlists_by_mine = api.get_playlists(mine=True)\n\n-------------\nPLAYLIST ITEM\n-------------\n\nSimilar you can get playlist items by playlist item id or playlist id.\n\nGet playlist items by id::\n\n    In [11]: playlist_item_by_id = api.get_playlist_item_by_id(playlist_item_id=\"UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA\n    ...: 1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2\")\n\n    In [12]: playlist_item_by_id.items\n    Out[12]: [PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2')]\n\n\nGet playlist items by playlist id(If you want to get target playlist all items, just provide the parameter ``count`` with ``None``)::\n\n    In [8]: playlist_item_by_playlist = api.get_playlist_items(playlist_id=\"PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw\", count=2)\n\n    In [10]: playlist_item_by_playlist.items\n    Out[10]:\n    [PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2'),\n     PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy4yODlGNEE0NkRGMEEzMEQy')]\n    In [13]: playlist_item_by_id.items[0].snippet.resourceId\n    Out[13]: ResourceId(kind='youtube#video', videoId='CvTApw9X8aA')\n\n-----\nVIDEO\n-----\n\nYou can get videos info by several methods.\n\nGet videos by video id(s)::\n\n    In [14]: video_by_id = api.get_video_by_id(video_id=\"CvTApw9X8aA\")\n\n    In [15]: video_by_id\n    Out[15]: VideoListResponse(kind='youtube#videoListResponse')\n\n    In [16]: video_by_id.items\n    Out[16]: [Video(kind='youtube#video', id='CvTApw9X8aA')]\n\n\nGet videos by chart(If you want to get all videos, just provide the parameter ``count`` with ``None``)::\n\n    In [17]: video_by_chart = api.get_videos_by_chart(chart=\"mostPopular\", region_code=\"US\", count=2)\n\n    In [18]: video_by_chart.items\n    Out[18]:\n    [Video(kind='youtube#video', id='RwnN2FVaHmw'),\n     Video(kind='youtube#video', id='hDeuSfo_Ys0')]\n\n\nGet videos by your rating(this need authorization, also if you want to get all videos, just provide the parameter ``count`` with ``None``)::\n\n    In [25]: videos_by_rating = api.get_videos_by_myrating(rating=\"like\", count=2)\n\n--------------\nCOMMENT THREAD\n--------------\n\nYou can get comment thread info by id or some filter.\n\nGet comment thread by id(s)::\n\n    In [9]: ct_by_id = api.get_comment_thread_by_id(comment_thread_id='Ugz097FRhsQy5CVhAjp4AaABAg,UgzhytyP79_Pwa\n       ...: Dd4UB4AaABAg')\n\n    In [10]: ct_by_id.items\n    Out[10]:\n    [CommentThread(kind='youtube#commentThread', id='Ugz097FRhsQy5CVhAjp4AaABAg'),\n     CommentThread(kind='youtube#commentThread', id='UgzhytyP79_PwaDd4UB4AaABAg')]\n\nGet all comment threads relate to channel(include comment threads for the channel's video, also if you want to get all comment threads, just provide the parameter ``count`` with ``None``)::\n\n    In [19]: ct_by_all = api.get_comment_threads(all_to_channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\", count=2)\n\n    In [20]: ct_by_all.items\n    Out[20]:\n    [CommentThread(kind='youtube#commentThread', id='UgwlB_Cza9WtzUWahYN4AaABAg'),\n     CommentThread(kind='youtube#commentThread', id='UgyvoQJ2LsxCBwGEpMB4AaABAg')]\n\nGet comment threads only for the channel(If you want to get all comment threads, just provide the parameter ``count`` with ``None``)::\n\n    In [3]: ct_by_channel = api.get_comment_threads(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\", count=2)\n\n    In [4]: ct_by_channel.items\n    Out[4]:\n    [CommentThread(kind='youtube#commentThread', id='UgyUBI0HsgL9emxcZpR4AaABAg'),\n     CommentThread(kind='youtube#commentThread', id='Ugzi3lkqDPfIOirGFLh4AaABAg')]\n\nGet comment threads only for the video(If you want to get all comment threads, just provide the parameter ``count`` with ``None``)::\n\n    In [5]: ct_by_video = api.get_comment_threads(video_id=\"D-lhorsDlUQ\", count=2)\n\n    In [6]: ct_by_video.items\n    Out[6]:\n    [CommentThread(kind='youtube#commentThread', id='UgydxWWoeA7F1OdqypJ4AaABAg'),\n     CommentThread(kind='youtube#commentThread', id='UgxKREWxIgDrw8w2e_Z4AaABAg')]\n\n-------\nCOMMENT\n-------\n\nYou can get comment info by id or use the toplevel comment id to get replies.\n\n.. note::\n    The reply has the same structure as comment.\n\nGet comments by id(s)::\n\n    In [11]: comment_by_id = api.get_comment_by_id(comment_id='UgxKREWxIgDrw8w2e_Z4AaABAg,UgyrVQaFfEdvaSzstj14Aa\n        ...: ABAg')\n\n    In [12]: comment_by_id.items\n    Out[12]:\n    [Comment(kind='youtube#comment', id='UgxKREWxIgDrw8w2e_Z4AaABAg', snippet=CommentSnippet(authorDisplayName='Hieu Nguyen', likeCount=0)),\n     Comment(kind='youtube#comment', id='UgyrVQaFfEdvaSzstj14AaABAg', snippet=CommentSnippet(authorDisplayName='Mani Kanta', likeCount=0))]\n\nGet replies by comment id(If you want to get all comments, just provide the parameter ``count`` with ``None``)::\n\n    In [13]: comment_by_parent = api.get_comments(parent_id=\"UgwYjZXfNCUTKPq9CZp4AaABAg\")\n\n    In [14]: comment_by_parent.items\n    Out[14]: [Comment(kind='youtube#comment', id='UgwYjZXfNCUTKPq9CZp4AaABAg.8yxhlQJogG18yz_cXK9Kcj', snippet=CommentSnippet(authorDisplayName='Marlon L\u00f3pez', likeCount=0))]\n\n--------------\nGUIDE CATEGORY\n--------------\n\nYou can use category id or category belongs region's code to get guide categories.\n\nGet guide categories with id(s)::\n\n    In [16]: guide_category_by_id = api.get_guide_categories(category_id=\"GCQmVzdCBvZiBZb3VUdWJl,GCQ3JlYXRvciBvb\n        ...: iB0aGUgUmlzZQ\")\n\n    In [17]: guide_category_by_id.items\n    Out[17]:\n    [GuideCategory(kind='youtube#guideCategory', id='GCQmVzdCBvZiBZb3VUdWJl'),\n     GuideCategory(kind='youtube#guideCategory', id='GCQ3JlYXRvciBvbiB0aGUgUmlzZQ')]\n\nGet guide categories with region code::\n\n    In [19]: guide_categories_by_region = api.get_guide_categories(region_code=\"US\")\n\n    In [20]: guide_categories_by_region.items\n    Out[20]:\n    [GuideCategory(kind='youtube#guideCategory', id='GCQmVzdCBvZiBZb3VUdWJl'),\n     GuideCategory(kind='youtube#guideCategory', id='GCQ3JlYXRvciBvbiB0aGUgUmlzZQ'),\n     GuideCategory(kind='youtube#guideCategory', id='GCTXVzaWM'),\n     GuideCategory(kind='youtube#guideCategory', id='GCQ29tZWR5'),\n     GuideCategory(kind='youtube#guideCategory', id='GCRmlsbSAmIEVudGVydGFpbm1lbnQ'),\n     GuideCategory(kind='youtube#guideCategory', id='GCR2FtaW5n'),\n     GuideCategory(kind='youtube#guideCategory', id='GCQmVhdXR5ICYgRmFzaGlvbg'),\n     GuideCategory(kind='youtube#guideCategory', id='GCU3BvcnRz'),\n     GuideCategory(kind='youtube#guideCategory', id='GCVGVjaA'),\n     GuideCategory(kind='youtube#guideCategory', id='GCQ29va2luZyAmIEhlYWx0aA'),\n     GuideCategory(kind='youtube#guideCategory', id='GCTmV3cyAmIFBvbGl0aWNz')]\n\n\n--------------\nVIDEO CATEGORY\n--------------\n\nSimilar to guide category. you can get video category with id or region.\n\nGet video categories with id(s)::\n\n    In [21]: video_category_by_id = api.get_video_categories(category_id=\"17,18\")\n\n    In [22]: video_category_by_id.items\n    Out[22]:\n    [VideoCategory(kind='youtube#videoCategory', id='17'),\n     VideoCategory(kind='youtube#videoCategory', id='18')]\n\nGet video categories with region code::\n\n    In [23]: video_categories_by_region = api.get_video_categories(region_code=\"US\")\n\n    In [24]: video_categories_by_region.items\n    Out[24]:\n    [VideoCategory(kind='youtube#videoCategory', id='1'),\n     VideoCategory(kind='youtube#videoCategory', id='2'),\n     VideoCategory(kind='youtube#videoCategory', id='10'),\n     VideoCategory(kind='youtube#videoCategory', id='15'),\n     ...]\n\n-------------\nSUBSCRIPTIONS\n-------------\n\nYou can get subscriptions info by id, by point channel or by yourself.\n\n.. note::\n    If you want to get the subscriptions not set to public. You need do authorization first and get the access token.\n    You can see the demo `A demo for get my subscription <examples/subscription.py>`_.\n\nGet subscriptions info by id(s), this need your token have the permission for the subscriptions belongs channel or user::\n\n    In [6]: r = api.get_subscription_by_id(\n       ...:     subscription_id=[\n       ...:         \"zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo\",\n       ...:         \"zqShTXi-2-Rya5uUxEp3ZsPI3fZrFQnSXNQCwvHBGGo\"])\n    In [7]: r\n    Out[7]: SubscriptionListResponse(kind='youtube#subscriptionListResponse')\n    In [8]: r.items\n    Out[8]:\n    [Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo', snippet=SubscriptionSnippet(title='PyCon 2015', description='')),\n     Subscription(kind='youtube#subscription', id='zqShTXi-2-Rya5uUxEp3ZsPI3fZrFQnSXNQCwvHBGGo', snippet=SubscriptionSnippet(title='ikaros-life', description='This is a test channel.'))]\n\nGet yourself subscriptions, this need you do authorization first or give the authorized access token::\n\n    In [9]: r = api.get_subscription_by_me(\n       ...:     mine=True,\n       ...:     parts=[\"id\", \"snippet\"],\n       ...:     count=2\n       ...:)\n    In [10]: r\n    Out[10]: SubscriptionListResponse(kind='youtube#subscriptionListResponse')\n    In [11]: r.items\n    Out[11]:\n    [Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwtJ-Aho6DZeutqZiP4Q79Q', snippet=SubscriptionSnippet(title='Next Day Video', description='')),\n     Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo', snippet=SubscriptionSnippet(title='PyCon 2015', description=''))]\n\nGet public channel's subscriptions::\n\n    In [12]: r = api.get_subscription_by_channel(\n    ...:     channel_id=\"UCAuUUnT6oDeKwE6v1NGQxug\",\n    ...:     parts=\"id,snippet\",\n    ...:     count=2\n    ...:     )\n    In [13]: r\n    Out[13]: SubscriptionListResponse(kind='youtube#subscriptionListResponse')\n    In [14]: r.items\n    Out[14]:\n    [Subscription(kind='youtube#subscription', id='FMP3Mleijt-52zZDGkHtR5KhwkvCcdQKWWWIA1j5eGc', snippet=SubscriptionSnippet(title='TEDx Talks', description=\"TEDx is an international community that organizes TED-style events anywhere and everywhere -- celebrating locally-driven ideas and elevating them to a global stage. TEDx events are produced independently of TED conferences, each event curates speakers on their own, but based on TED's format and rules.\\n\\nFor more information on using TED for commercial purposes (e.g. employee learning, in a film, or in an online course), please submit a media request using the link below.\")),\n     Subscription(kind='youtube#subscription', id='FMP3Mleijt_ZKvy5M-HhRlsqI4wXY7VmP5g8lvmRhVU', snippet=SubscriptionSnippet(title='TED Residency', description='The TED Residency program is an incubator for breakthrough ideas. It is free and open to all via a semi-annual competitive application. Those chosen as TED Residents spend four months at TED headquarters in New York City, working on their idea. Selection criteria include the strength of their idea, their character, and their ability to bring a fresh perspective and positive contribution to the diverse TED community.'))]\n\n\n----------\nACTIVITIES\n----------\n\nYou can get activities by channel id. And can get your activities after you have done the authorize.\n\nGet public channel activities::\n\n    In [3]: r = api.get_activities_by_channel(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\", count=2)\n    In [4]: r\n    Out[4]: ActivityListResponse(kind='youtube#activityListResponse')\n    In [5]: r.items\n    Out[5]:\n    [Activity(kind='youtube#activity', id='MTUxNTc3NzM2MDAyODIxOTQxNDM0NjAwMA==', snippet=ActivitySnippet(title='2019 Year in Review - The Developer Show', description='Here to bring you the latest developer news from across Google this year is Developer Advocate Timothy Jordan. In this last week of the year, we\u2019re taking a look back at some of the coolest and biggest announcements we covered in 2019! \\n\\nFollow Google Developers on Instagram \u2192 https://goo.gle/googledevs\\n\\nWatch more #DevShow \u2192 https://goo.gle/GDevShow\\nSubscribe to Google Developers \u2192 https://goo.gle/developers')),\n     Activity(kind='youtube#activity', id='MTUxNTc3MTI4NzIzODIxOTQxNDM0NzI4MA==', snippet=ActivitySnippet(title='GDE Promo - Lara Martin', description='Meet Lara Martin, a Flutter/Dart Google Developers Expert and get inspired by her journey. Watch now for a preview of her story! #GDESpotlights #IncludedWithGoogle\\n\\nLearn about the GDE program \u2192 https://goo.gle/2qWOvAy\\n\\nGoogle Developers Experts \u2192 https://goo.gle/GDE\\nSubscribe to Google Developers \u2192 https://goo.gle/developers'))]\n\n\nGet your activities::\n\n    In [10]: r = api_with_token.get_activities_by_me()\n    In [11]: r.items\n    Out[11]:\n    [Activity(kind='youtube#activity', id='MTUxNTc0OTk2MjI3NDE0MjYwMDY1NjAwODA=', snippet=ActivitySnippet(title='\u534e\u5c71\u65e5\u51fa', description='\u51b7\u51b7\u7684\u5c71\u5934')),\n     Activity(kind='youtube#activity', id='MTUxNTc0OTk1OTAyNDE0MjYwMDY1NTc2NDg=', snippet=ActivitySnippet(title='\u6d77\u4e0a\u65e5\u51fa', description='\u7f8e\u7f8e\u7f8e'))]\n\nGet your video captions::\n\n    In [12]: r = api.get_captions_by_video(video_id=\"oHR3wURdJ94\", parts=[\"id\", \"snippet\"])\n    In [13]: r\n    Out[13]: CaptionListResponse(kind='youtube#captionListResponse')\n    In [14]: r.items\n    Out[14]:\n    [Caption(kind='youtube#caption', id='SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:40:49.981Z')),\n     Caption(kind='youtube#caption', id='fPMuDm722CIRcUAT3NTPQHQZJZJxt39kU7JvrHk8Kzs=', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:39:46.991Z'))]\n\n\nIf you already have caption id(s), you can get video caption by id(s)::\n\n    In [15]: r = api.get_captions_by_video(video_id=\"oHR3wURdJ94\", parts=[\"id\", \"snippet\"], caption_id=\"SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I\")\n    In [16]: r\n    Out[16]: CaptionListResponse(kind='youtube#captionListResponse')\n    In [17]: r.items\n    Out[17]: [Caption(kind='youtube#caption', id='SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:40:49.981Z'))]\n\n----------------\nCHANNEL SECTIONS\n----------------\n\nYou can get channel sections by self id or belonged channel id or you self channel.\n\nGet channel sections by channel id::\n\n    In[18]: r = api.get_channel_sections_by_channel(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\")\n    In[19]: r\n    Out[19]: ChannelSectionResponse(kind='youtube#channelSectionListResponse')\n    In[20]: r.items\n    Out[20]:\n    [ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.B8DTd9ZXJqM'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.MfvRjkWLxgk'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.fEjJOXRoWwg'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.PvTmxDBxtLs'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.pmcIOsL7s98'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.c3r3vYf9uD0'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.ZJpkBl-mXfM'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.9_wU0qhEPR8'),\n     ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.npYvuMz0_es')]\n\nGet authorize user's channel sections::\n\n    In[21]: r = api.get_channel_sections_by_channel(mine=True)\n    In[23]: r.items\n    Out[23]:\n    [ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.jNQXAC9IVRw'),\n     ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.LeAltgu_pbM'),\n     ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.nGzAI5pLbMY')]\n\nGet channel section detail info by his id::\n\n    In[24]: r = api.get_channel_section_by_id(section_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE\")\n    In[25]: r\n    Out[25]: ChannelSectionResponse(kind='youtube#channelSectionListResponse')\n    In[26]: r1.items\n    Out[26]: [ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE')]\n\n-------------\nI18N RESOURCE\n-------------\n\nYou can get a list of content regions that the YouTube website supports::\n\n    In[27]: r = api.get_i18n_regions(parts=[\"snippet\"])\n    In[28]: r.items\n    Out[28]:\n    [I18nRegion(kind='youtube#i18nRegion', id='DZ', snippet=I18nRegionSnippet(gl='DZ', name='Algeria')),\n     I18nRegion(kind='youtube#i18nRegion', id='AR', snippet=I18nRegionSnippet(gl='AR', name='Argentina')),\n     I18nRegion(kind='youtube#i18nRegion', id='AU', snippet=I18nRegionSnippet(gl='AU', name='Australia'))\n     ...]\n\nYou can get a list of application languages that the YouTube website supports::\n\n    In[29]: r = api.get_i18n_languages(parts=[\"snippet\"])\n    In[30]: r.items\n    Out[30]:\n    [I18nLanguage(kind='youtube#i18nLanguage', id='af', snippet=I18nLanguageSnippet(hl='af', name='Afrikaans')),\n     I18nLanguage(kind='youtube#i18nLanguage', id='az', snippet=I18nLanguageSnippet(hl='az', name='Azerbaijani')),\n     I18nLanguage(kind='youtube#i18nLanguage', id='id', snippet=I18nLanguageSnippet(hl='id', name='Indonesian')),\n     ...]\n\n-------------------------\nVIDEO ABUSE REPORT REASON\n-------------------------\n\nYou can retrieve a list of reasons that can be used to report abusive videos::\n\n    In[31]: r = api_with_token.get_video_abuse_report_reason(parts=[\"snippet\"])\n    In[32]: r.items\n    Out[34]:\n    [VideoAbuseReportReason(kind='youtube#videoAbuseReportReason'),\n     VideoAbuseReportReason(kind='youtube#videoAbuseReportReason')]\n\n------\nSEARCH\n------\n\nYou can use those methods to search the video,playlist,channel data. for more info, you can see the `Search Request Docs <https://developers.google.com/youtube/v3/docs/search/list>`_ .\n\nYou can search different type of resource with keywords::\n\n    In[33]: r = api.search_by_keywords(q=\"surfing\", search_type=[\"channel\",\"video\", \"playlist\"], count=5, limit=5)\n    In[34]: r.items\n    Out[34]:\n    [SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult')]\n\nYou can search your app send videos::\n\n    In[35]: r = api_with_token.search_by_developer(q=\"news\", count=1)\n    In[36]: r.items\n    Out[36]:\n    [SearchResult(kind='youtube#searchResult')]\n\nYou can search your videos::\n\n    In[37]: r = api_with_token.search_by_mine(q=\"news\", count=1)\n    In[38]: r.items\n    Out[39]:\n    [SearchResult(kind='youtube#searchResult')]\n\nOr you can build your request by ``search`` method, examples as follows::\n\n    In[40]: r = api.search(\n       ...:     location=\"21.5922529, -158.1147114\",\n       ...:     location_radius=\"10mi\",\n       ...:     q=\"surfing\",\n       ...:     parts=[\"snippet\"],\n       ...:     count=5,\n       ...:     published_after=\"2020-02-01T00:00:00Z\",\n       ...:     published_before=\"2020-03-01T00:00:00Z\",\n       ...:     safe_search=\"moderate\",\n       ...:     search_type=\"video\")\n    In[41]: r.items\n    Out[41]:\n    [SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult')]\n\n    In[42]: r = api.search(\n       ...:     event_type=\"live\",\n       ...:     q=\"news\",\n       ...:     count=3,\n       ...:     parts=[\"snippet\"],\n       ...:     search_type=\"video\",\n       ...:     topic_id=\"/m/09s1f\",\n       ...:     order=\"viewCount\")\n    In[43]: r.items\n    Out[43]:\n    [SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult'),\n     SearchResult(kind='youtube#searchResult')]\n\n====\nTODO\n====\n\nNow this has follows api.\n\n- OAuth Demo\n- Channel Info\n- Playlist Info\n- PlaylistItem Info\n- Video Info\n- Comment Thread Info\n- Comment Info\n- Video Categories Info\n- Guide Categories Info\n- Subscriptions Info\n- Activities Info\n- Captions Info\n- Channel Sections Info\n- Search Requests and simple usage.\n\nDoing\n\n- post or other method.\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sns-sdks/python-youtube", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "python-youtube", "package_url": "https://pypi.org/project/python-youtube/", "platform": "", "project_url": "https://pypi.org/project/python-youtube/", "project_urls": {"Homepage": "https://github.com/sns-sdks/python-youtube"}, "release_url": "https://pypi.org/project/python-youtube/0.6.0/", "requires_dist": ["requests", "future", "requests-oauthlib", "pytz", "isodate", "responses", "dataclasses-json"], "requires_python": ">=3.6.0", "summary": "A Python wrapper around for YouTube Data API.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python YouTube</p>\n<p>A Python wrapper around for YouTube Data API V3.</p>\n<a href=\"https://travis-ci.org/sns-sdks/python-youtube\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/sns-sdks/python-youtube.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/815a522a5d11ab8034263e2dda82344c5621e5ab/68747470733a2f2f7472617669732d63692e6f72672f736e732d73646b732f707974686f6e2d796f75747562652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://python-youtube.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2301ea7b954fecb0cb3ef7bc655ecc0e32d4aa3/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974686f6e2d796f75747562652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codecov.io/gh/sns-sdks/python-youtube\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/sns-sdks/python-youtube/branch/master/graph/badge.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c207a5cd9886cd7d486ce3958cbe8853213c5ab7/68747470733a2f2f636f6465636f762e696f2f67682f736e732d73646b732f707974686f6e2d796f75747562652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://img.shields.io/pypi/v/python-youtube\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/python-youtube.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ba6d7b2b608043cd22244456fd3d2ba0434ba2d8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f707974686f6e2d796f75747562652e737667\"></a>\n<div id=\"thanks\">\n<h2>THANKS</h2>\n<p>This project structure is base on <a href=\"https://github.com/bear/python-twitter\" rel=\"nofollow\">Python-Twitter</a>.</p>\n<p>Thanks a lot for Python-Twitter Developers.</p>\n</div>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>Library provides an easy way to use YouTube Data API V3.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>You can view the latest <tt><span class=\"pre\">python-youtube</span></tt> documentation at: <a href=\"https://python-youtube.readthedocs.io/en/latest/\" rel=\"nofollow\">https://python-youtube.readthedocs.io/en/latest/</a>.</p>\n<p>Also view the full <tt>YouTube DATA API</tt> docs at: <a href=\"https://google-developers.appspot.com/youtube/v3/docs/\" rel=\"nofollow\">https://google-developers.appspot.com/youtube/v3/docs/</a>.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>You can install this lib from <cite>pypi</cite>:</p>\n<pre>$pip install --upgrade python-youtube\n\u2728\ud83c\udf70\u2728\n</pre>\n</div>\n<div id=\"using\">\n<h2>Using</h2>\n<p>The API is exposed via the <tt>pyyoutube.Api</tt> class.</p>\n<div id=\"instantiate\">\n<h3>INSTANTIATE</h3>\n<p>There provide two method to create instance the <tt>pyyoutube.Api</tt>.</p>\n<p>You can just initialize with the an api key:</p>\n<pre>In [1]: from pyyoutube import Api\nIn [2]: api = Api(api_key='your api key')\n</pre>\n<p>If you want to get some authorization data. you need to initialize with an access token:</p>\n<pre>In [1]: from pyyoutube import Api\nIn [2]: api = Api(api_key='your api key')\n</pre>\n<p>You can read the docs to see how to get an access token.</p>\n<p>Now you can use the instance to get data from YouTube.</p>\n</div>\n<div id=\"channel-data\">\n<h3>CHANNEL DATA</h3>\n<p>Now library provide several ways to get channel\u2019s data.</p>\n<p>If not found channel. the property <tt>items</tt> will return with blank list.</p>\n<p>You can use channel id:</p>\n<pre>In [3]: channel_by_id = api.get_channel_info(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\")\nIn [4]: channel_by_id.items\nOut[4]: [Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw')]\nIn [6]: channel_by_id.items[0].to_dict()\nOut[6]:\n{'kind': 'youtube#channel',\n 'etag': '\"j6xRRd8dTPVVptg711_CSPADRfg/AW8QEqbNRoIJv9KuzCIg0CG6aJA\"',\n 'id': 'UC_x5XG1OV2P6uZZ5FSM9Ttw',\n 'snippet': {'title': 'Google Developers',\n  'description': 'The Google Developers channel features talks from events, educational series, best practices, tips, and the latest updates across our products and platforms.',\n  'customUrl': 'googlecode',\n  'publishedAt': '2007-08-23T00:34:43.000Z',\n  'thumbnails': {'default': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s88-c-k-c0xffffffff-no-rj-mo',\n    'width': 88,\n    'height': 88},\n   'medium': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s240-c-k-c0xffffffff-no-rj-mo',\n    'width': 240,\n    'height': 240},\n   'high': {'url': 'https://yt3.ggpht.com/a/AGF-l78iFtAxyRZcUBzG91kbKMES19z-zGW5KT20_g=s800-c-k-c0xffffffff-no-rj-mo',\n    'width': 800,\n    'height': 800},\n   'standard': None,\n   'maxres': None},\n  'defaultLanguage': None,\n  'localized': {'title': 'Google Developers',\n   'description': 'The Google Developers channel features talks from events, educational series, best practices, tips, and the latest updates across our products and platforms.'},\n  'country': 'US'},\n  ...\n  }\n</pre>\n<p>You can pass channel id with comma-separated id string or a list,tuple or set of ids to get multi channels.\nMany methods also provide this method.</p>\n<p>with ids:</p>\n<pre>In [9]: channel_by_ids = api.get_channel_info(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw,UCa-vrCLQHviTOVnEKDOdetQ\")\nIn [10]: channel_by_ids.items\nOut[10]:\n[Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw'),\n Channel(kind='youtube#channel', id='UCa-vrCLQHviTOVnEKDOdetQ')]\n</pre>\n<p>You can also use channel name:</p>\n<pre>In [7]: channel_by_name = api.get_channel_info(channel_name=\"GoogleDevelopers\")\nIn [8]: channel_by_name.items[0]\nOut[8]: Channel(kind='youtube#channel', id='UC_x5XG1OV2P6uZZ5FSM9Ttw')\n</pre>\n<p>If you have authorized, you can get your channels:</p>\n<pre>In [3]: channel_by_mine = api_with_authorization.get_channel_info(mine=True)\nIn [4]: channel_by_mine.items[0]\nOut[4]: Channel(kind='youtube#channel', id='UCa-vrCLQHviTOVnEKDOdetQ')\n</pre>\n<div>\n<p>Note</p>\n<p>To get your channel, you must do authorize first, otherwise you will get error.</p>\n</div>\n</div>\n<div id=\"playlist\">\n<h3>PLAYLIST</h3>\n<p>There provide methods to get playlists by playlist id, channel id or get your self playlists.</p>\n<p>Get playlists by id:</p>\n<pre>In [5]: playlists_by_id = api.get_playlist_by_id(playlist_id=\"PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw\")\nIn [6]: playlists_by_id.items\nOut[6]: [Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw')]\n</pre>\n<p>Get playlists by channel(If you want to get target channel all playlist, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [3]: playlists_by_channel = api.get_playlists(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\")\nIn [4]: playlists_by_channel.items\nOut[4]:\n[Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw'),\n Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIJO83u2UmyC8ud41AvUnhgj'),\n Playlist(kind='youtube#playlist', id='PLOU2XLYxmsILfV1LiUhDjbh1jkFjQWrYB'),\n Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIKNr3Wfhm8o0TSojW7hEPPY'),\n Playlist(kind='youtube#playlist', id='PLOU2XLYxmsIJ8ItHmK4bRlY4GCzMgXLAJ')]\n</pre>\n<p>Get your playlists(this need authorization):</p>\n<pre>In [7]: playlists_by_mine = api.get_playlists(mine=True)\n</pre>\n</div>\n<div id=\"playlist-item\">\n<h3>PLAYLIST ITEM</h3>\n<p>Similar you can get playlist items by playlist item id or playlist id.</p>\n<p>Get playlist items by id:</p>\n<pre>In [11]: playlist_item_by_id = api.get_playlist_item_by_id(playlist_item_id=\"UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA\n...: 1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2\")\n\nIn [12]: playlist_item_by_id.items\nOut[12]: [PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2')]\n</pre>\n<p>Get playlist items by playlist id(If you want to get target playlist all items, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [8]: playlist_item_by_playlist = api.get_playlist_items(playlist_id=\"PLOU2XLYxmsIKpaV8h0AGE05so0fAwwfTw\", count=2)\n\nIn [10]: playlist_item_by_playlist.items\nOut[10]:\n[PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy41NkI0NEY2RDEwNTU3Q0M2'),\n PlaylistItem(kind='youtube#playlistItem', id='UExPVTJYTFl4bXNJS3BhVjhoMEFHRTA1c28wZkF3d2ZUdy4yODlGNEE0NkRGMEEzMEQy')]\nIn [13]: playlist_item_by_id.items[0].snippet.resourceId\nOut[13]: ResourceId(kind='youtube#video', videoId='CvTApw9X8aA')\n</pre>\n</div>\n<div id=\"video\">\n<h3>VIDEO</h3>\n<p>You can get videos info by several methods.</p>\n<p>Get videos by video id(s):</p>\n<pre>In [14]: video_by_id = api.get_video_by_id(video_id=\"CvTApw9X8aA\")\n\nIn [15]: video_by_id\nOut[15]: VideoListResponse(kind='youtube#videoListResponse')\n\nIn [16]: video_by_id.items\nOut[16]: [Video(kind='youtube#video', id='CvTApw9X8aA')]\n</pre>\n<p>Get videos by chart(If you want to get all videos, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [17]: video_by_chart = api.get_videos_by_chart(chart=\"mostPopular\", region_code=\"US\", count=2)\n\nIn [18]: video_by_chart.items\nOut[18]:\n[Video(kind='youtube#video', id='RwnN2FVaHmw'),\n Video(kind='youtube#video', id='hDeuSfo_Ys0')]\n</pre>\n<p>Get videos by your rating(this need authorization, also if you want to get all videos, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [25]: videos_by_rating = api.get_videos_by_myrating(rating=\"like\", count=2)\n</pre>\n</div>\n<div id=\"comment-thread\">\n<h3>COMMENT THREAD</h3>\n<p>You can get comment thread info by id or some filter.</p>\n<p>Get comment thread by id(s):</p>\n<pre>In [9]: ct_by_id = api.get_comment_thread_by_id(comment_thread_id='Ugz097FRhsQy5CVhAjp4AaABAg,UgzhytyP79_Pwa\n   ...: Dd4UB4AaABAg')\n\nIn [10]: ct_by_id.items\nOut[10]:\n[CommentThread(kind='youtube#commentThread', id='Ugz097FRhsQy5CVhAjp4AaABAg'),\n CommentThread(kind='youtube#commentThread', id='UgzhytyP79_PwaDd4UB4AaABAg')]\n</pre>\n<p>Get all comment threads relate to channel(include comment threads for the channel\u2019s video, also if you want to get all comment threads, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [19]: ct_by_all = api.get_comment_threads(all_to_channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\", count=2)\n\nIn [20]: ct_by_all.items\nOut[20]:\n[CommentThread(kind='youtube#commentThread', id='UgwlB_Cza9WtzUWahYN4AaABAg'),\n CommentThread(kind='youtube#commentThread', id='UgyvoQJ2LsxCBwGEpMB4AaABAg')]\n</pre>\n<p>Get comment threads only for the channel(If you want to get all comment threads, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [3]: ct_by_channel = api.get_comment_threads(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\", count=2)\n\nIn [4]: ct_by_channel.items\nOut[4]:\n[CommentThread(kind='youtube#commentThread', id='UgyUBI0HsgL9emxcZpR4AaABAg'),\n CommentThread(kind='youtube#commentThread', id='Ugzi3lkqDPfIOirGFLh4AaABAg')]\n</pre>\n<p>Get comment threads only for the video(If you want to get all comment threads, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [5]: ct_by_video = api.get_comment_threads(video_id=\"D-lhorsDlUQ\", count=2)\n\nIn [6]: ct_by_video.items\nOut[6]:\n[CommentThread(kind='youtube#commentThread', id='UgydxWWoeA7F1OdqypJ4AaABAg'),\n CommentThread(kind='youtube#commentThread', id='UgxKREWxIgDrw8w2e_Z4AaABAg')]\n</pre>\n</div>\n<div id=\"comment\">\n<h3>COMMENT</h3>\n<p>You can get comment info by id or use the toplevel comment id to get replies.</p>\n<div>\n<p>Note</p>\n<p>The reply has the same structure as comment.</p>\n</div>\n<p>Get comments by id(s):</p>\n<pre>In [11]: comment_by_id = api.get_comment_by_id(comment_id='UgxKREWxIgDrw8w2e_Z4AaABAg,UgyrVQaFfEdvaSzstj14Aa\n    ...: ABAg')\n\nIn [12]: comment_by_id.items\nOut[12]:\n[Comment(kind='youtube#comment', id='UgxKREWxIgDrw8w2e_Z4AaABAg', snippet=CommentSnippet(authorDisplayName='Hieu Nguyen', likeCount=0)),\n Comment(kind='youtube#comment', id='UgyrVQaFfEdvaSzstj14AaABAg', snippet=CommentSnippet(authorDisplayName='Mani Kanta', likeCount=0))]\n</pre>\n<p>Get replies by comment id(If you want to get all comments, just provide the parameter <tt>count</tt> with <tt>None</tt>):</p>\n<pre>In [13]: comment_by_parent = api.get_comments(parent_id=\"UgwYjZXfNCUTKPq9CZp4AaABAg\")\n\nIn [14]: comment_by_parent.items\nOut[14]: [Comment(kind='youtube#comment', id='UgwYjZXfNCUTKPq9CZp4AaABAg.8yxhlQJogG18yz_cXK9Kcj', snippet=CommentSnippet(authorDisplayName='Marlon L\u00f3pez', likeCount=0))]\n</pre>\n</div>\n<div id=\"guide-category\">\n<h3>GUIDE CATEGORY</h3>\n<p>You can use category id or category belongs region\u2019s code to get guide categories.</p>\n<p>Get guide categories with id(s):</p>\n<pre>In [16]: guide_category_by_id = api.get_guide_categories(category_id=\"GCQmVzdCBvZiBZb3VUdWJl,GCQ3JlYXRvciBvb\n    ...: iB0aGUgUmlzZQ\")\n\nIn [17]: guide_category_by_id.items\nOut[17]:\n[GuideCategory(kind='youtube#guideCategory', id='GCQmVzdCBvZiBZb3VUdWJl'),\n GuideCategory(kind='youtube#guideCategory', id='GCQ3JlYXRvciBvbiB0aGUgUmlzZQ')]\n</pre>\n<p>Get guide categories with region code:</p>\n<pre>In [19]: guide_categories_by_region = api.get_guide_categories(region_code=\"US\")\n\nIn [20]: guide_categories_by_region.items\nOut[20]:\n[GuideCategory(kind='youtube#guideCategory', id='GCQmVzdCBvZiBZb3VUdWJl'),\n GuideCategory(kind='youtube#guideCategory', id='GCQ3JlYXRvciBvbiB0aGUgUmlzZQ'),\n GuideCategory(kind='youtube#guideCategory', id='GCTXVzaWM'),\n GuideCategory(kind='youtube#guideCategory', id='GCQ29tZWR5'),\n GuideCategory(kind='youtube#guideCategory', id='GCRmlsbSAmIEVudGVydGFpbm1lbnQ'),\n GuideCategory(kind='youtube#guideCategory', id='GCR2FtaW5n'),\n GuideCategory(kind='youtube#guideCategory', id='GCQmVhdXR5ICYgRmFzaGlvbg'),\n GuideCategory(kind='youtube#guideCategory', id='GCU3BvcnRz'),\n GuideCategory(kind='youtube#guideCategory', id='GCVGVjaA'),\n GuideCategory(kind='youtube#guideCategory', id='GCQ29va2luZyAmIEhlYWx0aA'),\n GuideCategory(kind='youtube#guideCategory', id='GCTmV3cyAmIFBvbGl0aWNz')]\n</pre>\n</div>\n<div id=\"video-category\">\n<h3>VIDEO CATEGORY</h3>\n<p>Similar to guide category. you can get video category with id or region.</p>\n<p>Get video categories with id(s):</p>\n<pre>In [21]: video_category_by_id = api.get_video_categories(category_id=\"17,18\")\n\nIn [22]: video_category_by_id.items\nOut[22]:\n[VideoCategory(kind='youtube#videoCategory', id='17'),\n VideoCategory(kind='youtube#videoCategory', id='18')]\n</pre>\n<p>Get video categories with region code:</p>\n<pre>In [23]: video_categories_by_region = api.get_video_categories(region_code=\"US\")\n\nIn [24]: video_categories_by_region.items\nOut[24]:\n[VideoCategory(kind='youtube#videoCategory', id='1'),\n VideoCategory(kind='youtube#videoCategory', id='2'),\n VideoCategory(kind='youtube#videoCategory', id='10'),\n VideoCategory(kind='youtube#videoCategory', id='15'),\n ...]\n</pre>\n</div>\n<div id=\"subscriptions\">\n<h3>SUBSCRIPTIONS</h3>\n<p>You can get subscriptions info by id, by point channel or by yourself.</p>\n<div>\n<p>Note</p>\n<p>If you want to get the subscriptions not set to public. You need do authorization first and get the access token.\nYou can see the demo <a href=\"examples/subscription.py\" rel=\"nofollow\">A demo for get my subscription</a>.</p>\n</div>\n<p>Get subscriptions info by id(s), this need your token have the permission for the subscriptions belongs channel or user:</p>\n<pre>In [6]: r = api.get_subscription_by_id(\n   ...:     subscription_id=[\n   ...:         \"zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo\",\n   ...:         \"zqShTXi-2-Rya5uUxEp3ZsPI3fZrFQnSXNQCwvHBGGo\"])\nIn [7]: r\nOut[7]: SubscriptionListResponse(kind='youtube#subscriptionListResponse')\nIn [8]: r.items\nOut[8]:\n[Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo', snippet=SubscriptionSnippet(title='PyCon 2015', description='')),\n Subscription(kind='youtube#subscription', id='zqShTXi-2-Rya5uUxEp3ZsPI3fZrFQnSXNQCwvHBGGo', snippet=SubscriptionSnippet(title='ikaros-life', description='This is a test channel.'))]\n</pre>\n<p>Get yourself subscriptions, this need you do authorization first or give the authorized access token:</p>\n<pre>In [9]: r = api.get_subscription_by_me(\n   ...:     mine=True,\n   ...:     parts=[\"id\", \"snippet\"],\n   ...:     count=2\n   ...:)\nIn [10]: r\nOut[10]: SubscriptionListResponse(kind='youtube#subscriptionListResponse')\nIn [11]: r.items\nOut[11]:\n[Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwtJ-Aho6DZeutqZiP4Q79Q', snippet=SubscriptionSnippet(title='Next Day Video', description='')),\n Subscription(kind='youtube#subscription', id='zqShTXi-2-Tx7TtwQqhCBwViE_j9IEgnmRmPnqJljxo', snippet=SubscriptionSnippet(title='PyCon 2015', description=''))]\n</pre>\n<p>Get public channel\u2019s subscriptions:</p>\n<pre>In [12]: r = api.get_subscription_by_channel(\n...:     channel_id=\"UCAuUUnT6oDeKwE6v1NGQxug\",\n...:     parts=\"id,snippet\",\n...:     count=2\n...:     )\nIn [13]: r\nOut[13]: SubscriptionListResponse(kind='youtube#subscriptionListResponse')\nIn [14]: r.items\nOut[14]:\n[Subscription(kind='youtube#subscription', id='FMP3Mleijt-52zZDGkHtR5KhwkvCcdQKWWWIA1j5eGc', snippet=SubscriptionSnippet(title='TEDx Talks', description=\"TEDx is an international community that organizes TED-style events anywhere and everywhere -- celebrating locally-driven ideas and elevating them to a global stage. TEDx events are produced independently of TED conferences, each event curates speakers on their own, but based on TED's format and rules.\\n\\nFor more information on using TED for commercial purposes (e.g. employee learning, in a film, or in an online course), please submit a media request using the link below.\")),\n Subscription(kind='youtube#subscription', id='FMP3Mleijt_ZKvy5M-HhRlsqI4wXY7VmP5g8lvmRhVU', snippet=SubscriptionSnippet(title='TED Residency', description='The TED Residency program is an incubator for breakthrough ideas. It is free and open to all via a semi-annual competitive application. Those chosen as TED Residents spend four months at TED headquarters in New York City, working on their idea. Selection criteria include the strength of their idea, their character, and their ability to bring a fresh perspective and positive contribution to the diverse TED community.'))]\n</pre>\n</div>\n<div id=\"activities\">\n<h3>ACTIVITIES</h3>\n<p>You can get activities by channel id. And can get your activities after you have done the authorize.</p>\n<p>Get public channel activities:</p>\n<pre>In [3]: r = api.get_activities_by_channel(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\", count=2)\nIn [4]: r\nOut[4]: ActivityListResponse(kind='youtube#activityListResponse')\nIn [5]: r.items\nOut[5]:\n[Activity(kind='youtube#activity', id='MTUxNTc3NzM2MDAyODIxOTQxNDM0NjAwMA==', snippet=ActivitySnippet(title='2019 Year in Review - The Developer Show', description='Here to bring you the latest developer news from across Google this year is Developer Advocate Timothy Jordan. In this last week of the year, we\u2019re taking a look back at some of the coolest and biggest announcements we covered in 2019! \\n\\nFollow Google Developers on Instagram \u2192 https://goo.gle/googledevs\\n\\nWatch more #DevShow \u2192 https://goo.gle/GDevShow\\nSubscribe to Google Developers \u2192 https://goo.gle/developers')),\n Activity(kind='youtube#activity', id='MTUxNTc3MTI4NzIzODIxOTQxNDM0NzI4MA==', snippet=ActivitySnippet(title='GDE Promo - Lara Martin', description='Meet Lara Martin, a Flutter/Dart Google Developers Expert and get inspired by her journey. Watch now for a preview of her story! #GDESpotlights #IncludedWithGoogle\\n\\nLearn about the GDE program \u2192 https://goo.gle/2qWOvAy\\n\\nGoogle Developers Experts \u2192 https://goo.gle/GDE\\nSubscribe to Google Developers \u2192 https://goo.gle/developers'))]\n</pre>\n<p>Get your activities:</p>\n<pre>In [10]: r = api_with_token.get_activities_by_me()\nIn [11]: r.items\nOut[11]:\n[Activity(kind='youtube#activity', id='MTUxNTc0OTk2MjI3NDE0MjYwMDY1NjAwODA=', snippet=ActivitySnippet(title='\u534e\u5c71\u65e5\u51fa', description='\u51b7\u51b7\u7684\u5c71\u5934')),\n Activity(kind='youtube#activity', id='MTUxNTc0OTk1OTAyNDE0MjYwMDY1NTc2NDg=', snippet=ActivitySnippet(title='\u6d77\u4e0a\u65e5\u51fa', description='\u7f8e\u7f8e\u7f8e'))]\n</pre>\n<p>Get your video captions:</p>\n<pre>In [12]: r = api.get_captions_by_video(video_id=\"oHR3wURdJ94\", parts=[\"id\", \"snippet\"])\nIn [13]: r\nOut[13]: CaptionListResponse(kind='youtube#captionListResponse')\nIn [14]: r.items\nOut[14]:\n[Caption(kind='youtube#caption', id='SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:40:49.981Z')),\n Caption(kind='youtube#caption', id='fPMuDm722CIRcUAT3NTPQHQZJZJxt39kU7JvrHk8Kzs=', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:39:46.991Z'))]\n</pre>\n<p>If you already have caption id(s), you can get video caption by id(s):</p>\n<pre>In [15]: r = api.get_captions_by_video(video_id=\"oHR3wURdJ94\", parts=[\"id\", \"snippet\"], caption_id=\"SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I\")\nIn [16]: r\nOut[16]: CaptionListResponse(kind='youtube#captionListResponse')\nIn [17]: r.items\nOut[17]: [Caption(kind='youtube#caption', id='SwPOvp0r7kd9ttt_XhcHdZthMwXG7Z0I', snippet=CaptionSnippet(videoId='oHR3wURdJ94', lastUpdated='2020-01-14T09:40:49.981Z'))]\n</pre>\n</div>\n<div id=\"channel-sections\">\n<h3>CHANNEL SECTIONS</h3>\n<p>You can get channel sections by self id or belonged channel id or you self channel.</p>\n<p>Get channel sections by channel id:</p>\n<pre>In[18]: r = api.get_channel_sections_by_channel(channel_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw\")\nIn[19]: r\nOut[19]: ChannelSectionResponse(kind='youtube#channelSectionListResponse')\nIn[20]: r.items\nOut[20]:\n[ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.B8DTd9ZXJqM'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.MfvRjkWLxgk'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.fEjJOXRoWwg'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.PvTmxDBxtLs'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.pmcIOsL7s98'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.c3r3vYf9uD0'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.ZJpkBl-mXfM'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.9_wU0qhEPR8'),\n ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.npYvuMz0_es')]\n</pre>\n<p>Get authorize user\u2019s channel sections:</p>\n<pre>In[21]: r = api.get_channel_sections_by_channel(mine=True)\nIn[23]: r.items\nOut[23]:\n[ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.jNQXAC9IVRw'),\n ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.LeAltgu_pbM'),\n ChannelSection(kind='youtube#channelSection', id='UCa-vrCLQHviTOVnEKDOdetQ.nGzAI5pLbMY')]\n</pre>\n<p>Get channel section detail info by his id:</p>\n<pre>In[24]: r = api.get_channel_section_by_id(section_id=\"UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE\")\nIn[25]: r\nOut[25]: ChannelSectionResponse(kind='youtube#channelSectionListResponse')\nIn[26]: r1.items\nOut[26]: [ChannelSection(kind='youtube#channelSection', id='UC_x5XG1OV2P6uZZ5FSM9Ttw.e-Fk7vMPqLE')]\n</pre>\n</div>\n<div id=\"i18n-resource\">\n<h3>I18N RESOURCE</h3>\n<p>You can get a list of content regions that the YouTube website supports:</p>\n<pre>In[27]: r = api.get_i18n_regions(parts=[\"snippet\"])\nIn[28]: r.items\nOut[28]:\n[I18nRegion(kind='youtube#i18nRegion', id='DZ', snippet=I18nRegionSnippet(gl='DZ', name='Algeria')),\n I18nRegion(kind='youtube#i18nRegion', id='AR', snippet=I18nRegionSnippet(gl='AR', name='Argentina')),\n I18nRegion(kind='youtube#i18nRegion', id='AU', snippet=I18nRegionSnippet(gl='AU', name='Australia'))\n ...]\n</pre>\n<p>You can get a list of application languages that the YouTube website supports:</p>\n<pre>In[29]: r = api.get_i18n_languages(parts=[\"snippet\"])\nIn[30]: r.items\nOut[30]:\n[I18nLanguage(kind='youtube#i18nLanguage', id='af', snippet=I18nLanguageSnippet(hl='af', name='Afrikaans')),\n I18nLanguage(kind='youtube#i18nLanguage', id='az', snippet=I18nLanguageSnippet(hl='az', name='Azerbaijani')),\n I18nLanguage(kind='youtube#i18nLanguage', id='id', snippet=I18nLanguageSnippet(hl='id', name='Indonesian')),\n ...]\n</pre>\n</div>\n<div id=\"video-abuse-report-reason\">\n<h3>VIDEO ABUSE REPORT REASON</h3>\n<p>You can retrieve a list of reasons that can be used to report abusive videos:</p>\n<pre>In[31]: r = api_with_token.get_video_abuse_report_reason(parts=[\"snippet\"])\nIn[32]: r.items\nOut[34]:\n[VideoAbuseReportReason(kind='youtube#videoAbuseReportReason'),\n VideoAbuseReportReason(kind='youtube#videoAbuseReportReason')]\n</pre>\n</div>\n<div id=\"search\">\n<h3>SEARCH</h3>\n<p>You can use those methods to search the video,playlist,channel data. for more info, you can see the <a href=\"https://developers.google.com/youtube/v3/docs/search/list\" rel=\"nofollow\">Search Request Docs</a> .</p>\n<p>You can search different type of resource with keywords:</p>\n<pre>In[33]: r = api.search_by_keywords(q=\"surfing\", search_type=[\"channel\",\"video\", \"playlist\"], count=5, limit=5)\nIn[34]: r.items\nOut[34]:\n[SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult')]\n</pre>\n<p>You can search your app send videos:</p>\n<pre>In[35]: r = api_with_token.search_by_developer(q=\"news\", count=1)\nIn[36]: r.items\nOut[36]:\n[SearchResult(kind='youtube#searchResult')]\n</pre>\n<p>You can search your videos:</p>\n<pre>In[37]: r = api_with_token.search_by_mine(q=\"news\", count=1)\nIn[38]: r.items\nOut[39]:\n[SearchResult(kind='youtube#searchResult')]\n</pre>\n<p>Or you can build your request by <tt>search</tt> method, examples as follows:</p>\n<pre>In[40]: r = api.search(\n   ...:     location=\"21.5922529, -158.1147114\",\n   ...:     location_radius=\"10mi\",\n   ...:     q=\"surfing\",\n   ...:     parts=[\"snippet\"],\n   ...:     count=5,\n   ...:     published_after=\"2020-02-01T00:00:00Z\",\n   ...:     published_before=\"2020-03-01T00:00:00Z\",\n   ...:     safe_search=\"moderate\",\n   ...:     search_type=\"video\")\nIn[41]: r.items\nOut[41]:\n[SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult')]\n\nIn[42]: r = api.search(\n   ...:     event_type=\"live\",\n   ...:     q=\"news\",\n   ...:     count=3,\n   ...:     parts=[\"snippet\"],\n   ...:     search_type=\"video\",\n   ...:     topic_id=\"/m/09s1f\",\n   ...:     order=\"viewCount\")\nIn[43]: r.items\nOut[43]:\n[SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult'),\n SearchResult(kind='youtube#searchResult')]\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>Now this has follows api.</p>\n<ul>\n<li>OAuth Demo</li>\n<li>Channel Info</li>\n<li>Playlist Info</li>\n<li>PlaylistItem Info</li>\n<li>Video Info</li>\n<li>Comment Thread Info</li>\n<li>Comment Info</li>\n<li>Video Categories Info</li>\n<li>Guide Categories Info</li>\n<li>Subscriptions Info</li>\n<li>Activities Info</li>\n<li>Captions Info</li>\n<li>Channel Sections Info</li>\n<li>Search Requests and simple usage.</li>\n</ul>\n<p>Doing</p>\n<ul>\n<li>post or other method.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6816379, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "aabe01ed2bc5dc152ffeb4fc7df89c01", "sha256": "5fcb25362c799e97192669e0317b6a8e46cc8642a2b43323d8bd18e611eb92a1"}, "downloads": -1, "filename": "python_youtube-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aabe01ed2bc5dc152ffeb4fc7df89c01", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 14726, "upload_time": "2019-08-10T13:37:34", "upload_time_iso_8601": "2019-08-10T13:37:34.187681Z", "url": "https://files.pythonhosted.org/packages/4f/6b/8e9f9b1877cea49516ab79346d4a2ddc459440049c50dbd55fa2108e1c48/python_youtube-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fb5ef867353cd4e7f27e938c12a39f5", "sha256": "ff06c1fda1f6a9a11d6c59b97c8b80a4bc18340a4422c9b543711bc54f5aace2"}, "downloads": -1, "filename": "python-youtube-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4fb5ef867353cd4e7f27e938c12a39f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 14527, "upload_time": "2019-08-10T13:37:36", "upload_time_iso_8601": "2019-08-10T13:37:36.982660Z", "url": "https://files.pythonhosted.org/packages/1c/31/0c3c1c2cec972ea84cd266386353dc2dce2e426ea76667d8308f227369ed/python-youtube-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "960358a5b22a2b3ac77e56f8ec8894cf", "sha256": "6a9a1988ffbb9e3cf18b041d2b9c83d4973a8808bf157bb9eec649b278f47d47"}, "downloads": -1, "filename": "python_youtube-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "960358a5b22a2b3ac77e56f8ec8894cf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 17129, "upload_time": "2019-08-25T08:34:06", "upload_time_iso_8601": "2019-08-25T08:34:06.388232Z", "url": "https://files.pythonhosted.org/packages/55/ce/38a5f2bf5c488879a4b4d9eedaccfac6126917aeb222ad9c79885f96cd52/python_youtube-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7475a008d05de482995064ff354bd6aa", "sha256": "52bbe1600a540afb100ccba24b19f2564d625b67efaacaceae751bf3e0de3268"}, "downloads": -1, "filename": "python-youtube-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7475a008d05de482995064ff354bd6aa", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 16964, "upload_time": "2019-08-25T08:34:08", "upload_time_iso_8601": "2019-08-25T08:34:08.381595Z", "url": "https://files.pythonhosted.org/packages/8f/41/a79af9e6a94ee21cba7af47b0e79121ac90cfc242d1e110d05c590a1d038/python-youtube-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "b48880a5502062cb13f11e348732fb4d", "sha256": "d82f38095dcf0f61b179681fd8fefba626c7b4361528a7ade88ef7e67d20e87a"}, "downloads": -1, "filename": "python_youtube-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b48880a5502062cb13f11e348732fb4d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 17666, "upload_time": "2019-09-01T15:49:56", "upload_time_iso_8601": "2019-09-01T15:49:56.922871Z", "url": "https://files.pythonhosted.org/packages/8a/22/30495f66c659e35e8c9f4daba5d1c9fa468c110e1a780cf3b5ef2f0fb1a7/python_youtube-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bf6787e92786132c607adbc8d61f0d70", "sha256": "81cc05a5d0c1b4521742d755cbcfd30c47c3c379c48e0fb54389ff0adf2c5bb4"}, "downloads": -1, "filename": "python-youtube-0.4.0.tar.gz", "has_sig": false, "md5_digest": "bf6787e92786132c607adbc8d61f0d70", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 17144, "upload_time": "2019-09-01T15:49:58", "upload_time_iso_8601": "2019-09-01T15:49:58.819308Z", "url": "https://files.pythonhosted.org/packages/4e/99/c2faf1300248b8ff19a3458c86a82d1c42d7734d979ac9958ffc42b5785a/python-youtube-0.4.0.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "63dcaee682dc55c7c89e82ae628e64e7", "sha256": "df222e3936620d3f5afed6169f1ff7e2e938898fb45728a827efb56c324a5ca4"}, "downloads": -1, "filename": "python_youtube-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "63dcaee682dc55c7c89e82ae628e64e7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 19720, "upload_time": "2019-09-16T12:23:00", "upload_time_iso_8601": "2019-09-16T12:23:00.768387Z", "url": "https://files.pythonhosted.org/packages/2e/71/76df45110b627615c59d8b6a8c0bd6a4f7e152a7ae603fdb79365ea13299/python_youtube-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "67de87087412612d116f1ba9494b2453", "sha256": "0146ce3ff95dac10d069d5e83e4158746420a4168fefe34474c5d2918ec11091"}, "downloads": -1, "filename": "python-youtube-0.4.5.tar.gz", "has_sig": false, "md5_digest": "67de87087412612d116f1ba9494b2453", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 19265, "upload_time": "2019-09-16T12:23:02", "upload_time_iso_8601": "2019-09-16T12:23:02.890300Z", "url": "https://files.pythonhosted.org/packages/bb/96/2f358ff857715d5c678465c22ca6413c98b50ead6a6d085f27999b6435da/python-youtube-0.4.5.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "af5d69390dfbb1d9a5cd40b48de251f9", "sha256": "e3949c9942290a3d68c2e6383a158cb6ca0eb7790e84e8ee385d64b4b358b70f"}, "downloads": -1, "filename": "python_youtube-0.5.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af5d69390dfbb1d9a5cd40b48de251f9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 28691, "upload_time": "2019-12-01T14:57:36", "upload_time_iso_8601": "2019-12-01T14:57:36.731784Z", "url": "https://files.pythonhosted.org/packages/84/43/ab65e2f67fb4506545caa0355d0b921314ce289d5c232f0d2bbcce6820fd/python_youtube-0.5.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1cecc2d195cd985c53ccbb2d7623111c", "sha256": "6ac064094049068731bbc140b522d7e17b9b265f80dd5ed1170ec7dc5b1ecbf5"}, "downloads": -1, "filename": "python-youtube-0.5.0.tar.gz", "has_sig": false, "md5_digest": "1cecc2d195cd985c53ccbb2d7623111c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 24019, "upload_time": "2019-12-01T14:57:39", "upload_time_iso_8601": "2019-12-01T14:57:39.266433Z", "url": "https://files.pythonhosted.org/packages/f1/f1/55990569b31e272b7ba4136f8b8d64e8514a42a7f3f9749da7022a5aa211/python-youtube-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "c7127ce68c1b4e9b5e6e8c9420070015", "sha256": "1e83ca039eda86aa844525624ef073251fe9838bb37ae4f3397761187df42060"}, "downloads": -1, "filename": "python_youtube-0.5.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c7127ce68c1b4e9b5e6e8c9420070015", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 27334, "upload_time": "2019-12-17T16:37:31", "upload_time_iso_8601": "2019-12-17T16:37:31.461631Z", "url": "https://files.pythonhosted.org/packages/db/aa/3bcb3b238ca38a5bea79116ca2d0544145abccb99cc7048aacc18a073957/python_youtube-0.5.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e66ed8535bb99600df9813a525c7d50a", "sha256": "11d790952eaf12ab8279842d4e5fedc1cb438133b574775b6ed92a401aa6bdc0"}, "downloads": -1, "filename": "python-youtube-0.5.1.tar.gz", "has_sig": false, "md5_digest": "e66ed8535bb99600df9813a525c7d50a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 24280, "upload_time": "2019-12-17T16:37:33", "upload_time_iso_8601": "2019-12-17T16:37:33.429807Z", "url": "https://files.pythonhosted.org/packages/79/35/2f6c925ae05b9b5f920624d3c555f6a282da10567cfd48dea114f42b4a2c/python-youtube-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "1069b90bf0795094362a6fc5f4cf4e96", "sha256": "98f187bf2d32412ad232215394caac81a78a63b6fefc8e1f963c97952d6b528f"}, "downloads": -1, "filename": "python_youtube-0.5.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1069b90bf0795094362a6fc5f4cf4e96", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 31212, "upload_time": "2020-01-01T14:15:23", "upload_time_iso_8601": "2020-01-01T14:15:23.518426Z", "url": "https://files.pythonhosted.org/packages/9f/9d/52aadf216f0d7e88965bc5359b22d32743a7947f9ed4e7889632c5141fc0/python_youtube-0.5.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd0150c84097ef12df1e1bdbd9fac595", "sha256": "7b2ab62e7383056e507f61e867814ea26581ee2b14dcf631ffa62ada31dca77a"}, "downloads": -1, "filename": "python-youtube-0.5.2.tar.gz", "has_sig": false, "md5_digest": "fd0150c84097ef12df1e1bdbd9fac595", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 27683, "upload_time": "2020-01-01T14:15:25", "upload_time_iso_8601": "2020-01-01T14:15:25.729566Z", "url": "https://files.pythonhosted.org/packages/0d/8f/37978f0b8f05c4fa48ef02f226b2f74681c0b6ef76bb7f6c452539f0146c/python-youtube-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "932a9d2669e827f2b9c7eacff1d3f180", "sha256": "94d6d1bb68d6ace87e4abae64e837a797c446573f96057819c8d6a55975d9da2"}, "downloads": -1, "filename": "python_youtube-0.5.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "932a9d2669e827f2b9c7eacff1d3f180", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 31270, "upload_time": "2020-01-02T12:08:42", "upload_time_iso_8601": "2020-01-02T12:08:42.474474Z", "url": "https://files.pythonhosted.org/packages/50/2e/54800d5312d2e3e135c150bb362d36ae1f6dd26d1a222885b55bcbcd3183/python_youtube-0.5.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b49e39638cb86de6c6c0c92c94e9a17c", "sha256": "e3730d2a74011e7c5e4e08f0e9b6276713e227602e0bda35bd2c6e3d61bba3a9"}, "downloads": -1, "filename": "python-youtube-0.5.3.tar.gz", "has_sig": false, "md5_digest": "b49e39638cb86de6c6c0c92c94e9a17c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 27742, "upload_time": "2020-01-02T12:08:44", "upload_time_iso_8601": "2020-01-02T12:08:44.521710Z", "url": "https://files.pythonhosted.org/packages/67/a9/fddadd9de1ce8baf3a6c5a2de59bbe5ebf9db0db1994c9082850c6b3e838/python-youtube-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "7d2f6dda6c7854dd973c698c7baf9935", "sha256": "a578692e7ce6ee448380bbd6acf7e80b5bda6ca11e423f23a3d262abdf6296e4"}, "downloads": -1, "filename": "python_youtube-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d2f6dda6c7854dd973c698c7baf9935", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 41445, "upload_time": "2020-03-15T17:20:20", "upload_time_iso_8601": "2020-03-15T17:20:20.496487Z", "url": "https://files.pythonhosted.org/packages/21/5d/8ab16ed858c7200b6b5a1c0441001ef046e2e740d2999438e061cfb2113d/python_youtube-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4b40d04b722290dd1dfdc56ad0af85a", "sha256": "d7c6a52853692a11f579f44e5a3519a52f0ea5dad757b30d2047c772808998db"}, "downloads": -1, "filename": "python-youtube-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c4b40d04b722290dd1dfdc56ad0af85a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 40777, "upload_time": "2020-03-15T17:20:22", "upload_time_iso_8601": "2020-03-15T17:20:22.381508Z", "url": "https://files.pythonhosted.org/packages/a9/6d/52ccb44f8bed11e851301fd04db121ae8b07e8f2704631e56a62fbd92f42/python-youtube-0.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d2f6dda6c7854dd973c698c7baf9935", "sha256": "a578692e7ce6ee448380bbd6acf7e80b5bda6ca11e423f23a3d262abdf6296e4"}, "downloads": -1, "filename": "python_youtube-0.6.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7d2f6dda6c7854dd973c698c7baf9935", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 41445, "upload_time": "2020-03-15T17:20:20", "upload_time_iso_8601": "2020-03-15T17:20:20.496487Z", "url": "https://files.pythonhosted.org/packages/21/5d/8ab16ed858c7200b6b5a1c0441001ef046e2e740d2999438e061cfb2113d/python_youtube-0.6.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4b40d04b722290dd1dfdc56ad0af85a", "sha256": "d7c6a52853692a11f579f44e5a3519a52f0ea5dad757b30d2047c772808998db"}, "downloads": -1, "filename": "python-youtube-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c4b40d04b722290dd1dfdc56ad0af85a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 40777, "upload_time": "2020-03-15T17:20:22", "upload_time_iso_8601": "2020-03-15T17:20:22.381508Z", "url": "https://files.pythonhosted.org/packages/a9/6d/52ccb44f8bed11e851301fd04db121ae8b07e8f2704631e56a62fbd92f42/python-youtube-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:28 2020"}