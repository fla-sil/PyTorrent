{"info": {"author": "Madhawa Vidanapathirana", "author_email": "madhawavidanapathirana@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Text Processing :: Linguistic"], "description": "A Python wrapper on [pjreddie's](https://pjreddie.com/) implementation (authors' implementation) of [YOLO V3 Object Detector](https://pjreddie.com/darknet/yolo) on [Darknet](https://github.com/pjreddie/darknet).\nAlso compatible with other Darknet Object Detection models.\n\n![OutputImage](https://raw.githubusercontent.com/madhawav/YOLO3-4-Py/master/doc/output.jpg)\nImage source: http://absfreepic.com/free-photos/download/crowded-cars-on-street-4032x2272_48736.html\n\n# Prerequisites\n* Python 3.5+\n* Linux x86-64 Operating System\n* nVidia CUDA SDK (for GPU version only. Make sure nvcc is available in PATH variable.)\n\n# Sample Usage\nNote: This sample code requires OpenCV with python bindings installed. (`pip3 install opencv-python==3.4.0`)\n\n1) Create a directory to host sample code and navigate to it.\n2) Download and execute [this script](https://github.com/madhawav/YOLO3-4-Py/blob/master/download_models.sh) to download model files.\n3) Create sampleApp.py with following code. Specify SAMPLE_INPUT_IMAGE.\n    ```python\n    from pydarknet import Detector, Image\n    import cv2\n    \n    net = Detector(bytes(\"cfg/yolov3.cfg\", encoding=\"utf-8\"), bytes(\"weights/yolov3.weights\", encoding=\"utf-8\"), 0, bytes(\"cfg/coco.data\",encoding=\"utf-8\"))\n    \n    img = cv2.imread('SAMPLE_INPUT_IMAGE')\n    img_darknet = Image(img)\n    \n    results = net.detect(img_darknet)\n        \n    for cat, score, bounds in results:\n        x, y, w, h = bounds\n        cv2.rectangle(img, (int(x - w / 2), int(y - h / 2)), (int(x + w / 2), int(y + h / 2)), (255, 0, 0), thickness=2)\n        cv2.putText(img,str(cat.decode(\"utf-8\")),(int(x),int(y)),cv2.FONT_HERSHEY_COMPLEX,1,(255,255,0))\n    \n    cv2.imshow(\"output\", img)\n    cv2.waitKey(0)\n    ```\n4) Execute sampleApp.py `python sampleApp.py`.\n\n# Installation\nyolo34py comes in 2 variants, _CPU Only Version_ and _GPU Version_. Installation may take a while since it involves downloading and compiling of darknet.\n\n## __CPU Only Version__\nThis version is configured on darknet compiled with flag GPU = 0.\n```bash\npip3 install numpy\npip3 install yolo34py\n```\n\n## GPU Version:\nThis version is configured on darknet compiled with flag GPU = 1.\n```bash\npip3 install numpy\npip3 install yolo34py-gpu\n```\n\n\n# More Information\n* For more details on yolo34py (This python wrapper):\n   - GitHub Repo: https://github.com/madhawav/YOLO3-4-Py\n   - This is the place to discuss about issues of yolo34py. \n   - Your contributions are greatly appreciated. \n* For more details on YOLO V3:\n   - Website from Authors: https://pjreddie.com/yolo\n* For more details on Darknet, the base API wrapped by this library\n   - Website: https://pjreddie.com/darknet/\n   - GitHub: https://github.com/pjreddie/darknet\n   \n\n# License\n* yolo34py (this wrapper) is under [Apache License 2.0](https://github.com/madhawav/YOLO3-4-Py/blob/master/LICENSE).\n* The version of darknet wrapped by yolo34py is [public domain](https://github.com/madhawav/darknet/blob/master/LICENSE).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/madhawav/YOLO3-4-Py", "keywords": "yolo darknet object detection vision", "license": "YOLO34Py wrapper is under Apache 2.0. Darknet is Public Domain.", "maintainer": "", "maintainer_email": "", "name": "yolo34py", "package_url": "https://pypi.org/project/yolo34py/", "platform": "linux-x86_64", "project_url": "https://pypi.org/project/yolo34py/", "project_urls": {"Homepage": "https://github.com/madhawav/YOLO3-4-Py"}, "release_url": "https://pypi.org/project/yolo34py/0.1rc12/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Python wrapper on YOLO 3.0 implementation by 'pjreddie': (https://pjreddie.com/yolo)", "version": "0.1rc12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python wrapper on <a href=\"https://pjreddie.com/\" rel=\"nofollow\">pjreddie's</a> implementation (authors' implementation) of <a href=\"https://pjreddie.com/darknet/yolo\" rel=\"nofollow\">YOLO V3 Object Detector</a> on <a href=\"https://github.com/pjreddie/darknet\" rel=\"nofollow\">Darknet</a>.\nAlso compatible with other Darknet Object Detection models.</p>\n<p><img alt=\"OutputImage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e610078df44cb1bfd07cd0780f0d0425ddab40b5/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d616468617761762f594f4c4f332d342d50792f6d61737465722f646f632f6f75747075742e6a7067\">\nImage source: <a href=\"http://absfreepic.com/free-photos/download/crowded-cars-on-street-4032x2272_48736.html\" rel=\"nofollow\">http://absfreepic.com/free-photos/download/crowded-cars-on-street-4032x2272_48736.html</a></p>\n<h1>Prerequisites</h1>\n<ul>\n<li>Python 3.5+</li>\n<li>Linux x86-64 Operating System</li>\n<li>nVidia CUDA SDK (for GPU version only. Make sure nvcc is available in PATH variable.)</li>\n</ul>\n<h1>Sample Usage</h1>\n<p>Note: This sample code requires OpenCV with python bindings installed. (<code>pip3 install opencv-python==3.4.0</code>)</p>\n<ol>\n<li>Create a directory to host sample code and navigate to it.</li>\n<li>Download and execute <a href=\"https://github.com/madhawav/YOLO3-4-Py/blob/master/download_models.sh\" rel=\"nofollow\">this script</a> to download model files.</li>\n<li>Create sampleApp.py with following code. Specify SAMPLE_INPUT_IMAGE.\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pydarknet</span> <span class=\"kn\">import</span> <span class=\"n\">Detector</span><span class=\"p\">,</span> <span class=\"n\">Image</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n\n<span class=\"n\">net</span> <span class=\"o\">=</span> <span class=\"n\">Detector</span><span class=\"p\">(</span><span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"s2\">\"cfg/yolov3.cfg\"</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">),</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"s2\">\"weights/yolov3.weights\"</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">),</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"s2\">\"cfg/coco.data\"</span><span class=\"p\">,</span><span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">))</span>\n\n<span class=\"n\">img</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imread</span><span class=\"p\">(</span><span class=\"s1\">'SAMPLE_INPUT_IMAGE'</span><span class=\"p\">)</span>\n<span class=\"n\">img_darknet</span> <span class=\"o\">=</span> <span class=\"n\">Image</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">)</span>\n\n<span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">net</span><span class=\"o\">.</span><span class=\"n\">detect</span><span class=\"p\">(</span><span class=\"n\">img_darknet</span><span class=\"p\">)</span>\n    \n<span class=\"k\">for</span> <span class=\"n\">cat</span><span class=\"p\">,</span> <span class=\"n\">score</span><span class=\"p\">,</span> <span class=\"n\">bounds</span> <span class=\"ow\">in</span> <span class=\"n\">results</span><span class=\"p\">:</span>\n    <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">bounds</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">rectangle</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">-</span> <span class=\"n\">w</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">-</span> <span class=\"n\">h</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)),</span> <span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span> <span class=\"o\">+</span> <span class=\"n\">w</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">),</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">+</span> <span class=\"n\">h</span> <span class=\"o\">/</span> <span class=\"mi\">2</span><span class=\"p\">)),</span> <span class=\"p\">(</span><span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">thickness</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n    <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">putText</span><span class=\"p\">(</span><span class=\"n\">img</span><span class=\"p\">,</span><span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">cat</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">)),(</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">),</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)),</span><span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">FONT_HERSHEY_COMPLEX</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,(</span><span class=\"mi\">255</span><span class=\"p\">,</span><span class=\"mi\">255</span><span class=\"p\">,</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">\"output\"</span><span class=\"p\">,</span> <span class=\"n\">img</span><span class=\"p\">)</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>Execute sampleApp.py <code>python sampleApp.py</code>.</li>\n</ol>\n<h1>Installation</h1>\n<p>yolo34py comes in 2 variants, <em>CPU Only Version</em> and <em>GPU Version</em>. Installation may take a while since it involves downloading and compiling of darknet.</p>\n<h2><strong>CPU Only Version</strong></h2>\n<p>This version is configured on darknet compiled with flag GPU = 0.</p>\n<pre>pip3 install numpy\npip3 install yolo34py\n</pre>\n<h2>GPU Version:</h2>\n<p>This version is configured on darknet compiled with flag GPU = 1.</p>\n<pre>pip3 install numpy\npip3 install yolo34py-gpu\n</pre>\n<h1>More Information</h1>\n<ul>\n<li>For more details on yolo34py (This python wrapper):\n<ul>\n<li>GitHub Repo: <a href=\"https://github.com/madhawav/YOLO3-4-Py\" rel=\"nofollow\">https://github.com/madhawav/YOLO3-4-Py</a></li>\n<li>This is the place to discuss about issues of yolo34py.</li>\n<li>Your contributions are greatly appreciated.</li>\n</ul>\n</li>\n<li>For more details on YOLO V3:\n<ul>\n<li>Website from Authors: <a href=\"https://pjreddie.com/yolo\" rel=\"nofollow\">https://pjreddie.com/yolo</a></li>\n</ul>\n</li>\n<li>For more details on Darknet, the base API wrapped by this library\n<ul>\n<li>Website: <a href=\"https://pjreddie.com/darknet/\" rel=\"nofollow\">https://pjreddie.com/darknet/</a></li>\n<li>GitHub: <a href=\"https://github.com/pjreddie/darknet\" rel=\"nofollow\">https://github.com/pjreddie/darknet</a></li>\n</ul>\n</li>\n</ul>\n<h1>License</h1>\n<ul>\n<li>yolo34py (this wrapper) is under <a href=\"https://github.com/madhawav/YOLO3-4-Py/blob/master/LICENSE\" rel=\"nofollow\">Apache License 2.0</a>.</li>\n<li>The version of darknet wrapped by yolo34py is <a href=\"https://github.com/madhawav/darknet/blob/master/LICENSE\" rel=\"nofollow\">public domain</a>.</li>\n</ul>\n\n          </div>"}, "last_serial": 3800083, "releases": {"0.1rc10": [{"comment_text": "", "digests": {"md5": "6bd3ac06de0c7c956d280a9c362aab48", "sha256": "75c6a91b4b13563cdc5ac136441ffd1b25ab516c4ef2401ccec5c3d28d4112e6"}, "downloads": -1, "filename": "yolo34py-0.1rc10.tar.gz", "has_sig": false, "md5_digest": "6bd3ac06de0c7c956d280a9c362aab48", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 66122, "upload_time": "2018-04-22T17:27:51", "upload_time_iso_8601": "2018-04-22T17:27:51.464675Z", "url": "https://files.pythonhosted.org/packages/dc/ef/10b6f01d80c2891e49bafe574e060d6049b5522c9d4c47fe4ebd51d95d8b/yolo34py-0.1rc10.tar.gz", "yanked": false}], "0.1rc12": [{"comment_text": "", "digests": {"md5": "10b3f43673e4b42566c2c0556e583f22", "sha256": "0ba092dd54c4b0670eefa04e2f95e2ba06a1378a86cbc81293f2749285cab003"}, "downloads": -1, "filename": "yolo34py-0.1rc12.tar.gz", "has_sig": false, "md5_digest": "10b3f43673e4b42566c2c0556e583f22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 67522, "upload_time": "2018-04-23T19:07:33", "upload_time_iso_8601": "2018-04-23T19:07:33.558447Z", "url": "https://files.pythonhosted.org/packages/fa/25/91792cac161adf97d0dd9c0954c0f2c9d8c93bf9c5404ddff9fcd4b58ecf/yolo34py-0.1rc12.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10b3f43673e4b42566c2c0556e583f22", "sha256": "0ba092dd54c4b0670eefa04e2f95e2ba06a1378a86cbc81293f2749285cab003"}, "downloads": -1, "filename": "yolo34py-0.1rc12.tar.gz", "has_sig": false, "md5_digest": "10b3f43673e4b42566c2c0556e583f22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 67522, "upload_time": "2018-04-23T19:07:33", "upload_time_iso_8601": "2018-04-23T19:07:33.558447Z", "url": "https://files.pythonhosted.org/packages/fa/25/91792cac161adf97d0dd9c0954c0f2c9d8c93bf9c5404ddff9fcd4b58ecf/yolo34py-0.1rc12.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:22:00 2020"}