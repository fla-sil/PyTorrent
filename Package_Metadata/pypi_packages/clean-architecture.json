{"info": {"author": "jaystevency", "author_email": "yjy1129@kookmin.ac.kr", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Clean Architecture\n\nThis project is described a clean architecture written by Robert C. Martine.\nArchitecture is fellow a [clean architecture](https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html)\n\n\n\n## Table of contents\n\n- [Features](#features)\n- [Directory Structure](#diretorystructure)\n- [Installation](#installation)\n- [Example](#example)\n- [Testing](#testing)\n\n## DirectoryStructure\n\n```bash\n|-- clean_architecture\n|    |-- domain\n|    |\t|-request_object.py\n|    |\t|-response_object.py\n|    |\t`-use_case.py\n|    |-- entity\n|    |\t`-entity.py\n|    |-- exception\n|    |\t|-exception.py\n|    |\t`- *_exception.py\n|    |-- serializer\n|    \t`-serializer.py\n```\n\n## Installation\n\n```bash\npip install clean-architecture\n```\n\n## Example\n\n- Entity\n\n```python\nfrom clean_architecture.entity import Entity\n\nclass UserEntity(Entity):\n    def __init__(\n        self,\n        user_id,\n        name,\n        created_at,\n        updated_at\n    ):\n        self.id = user_id\n        self.name = name\n        self.created_at = created_at\n        self.updated_at = updated_at\n\n    @classmethod\n    def from_dict(cls, adict):\n        user = UserEntity(\n            user_id=adict.get(\"id\"),\n            name=adict.get(\"name\"),\n            created_at=adict.get(\"created_at\"),\n            updated_at=adict.get(\"updated_at\")\n        )\n        return user\n```\n\n- Domain\n\n    - ValidRequestObject\n    ```python\n        from clean_architecture.domain import (\n            ValidRequestObject,\n            InvalidRequestObject,\n            UseCase,\n            ResponseSuccess\n        )\n\n        class CreateUserRequestObject(ValidRequestObject):\n            def __init__(self, user):\n                self.user = user\n\n            if invalid_req.has_errors():\n                return invalid_req\n\n            return CreateUserRequestObject(\n                user=UserEntity.from_dict(adict)\n            )\n    ```\n    - UseCase\n    ```python\n        class CreatedUser(UseCase):\n            def __init__(self, user_repository):\n                self.user_repository = user_repository\n\n            def process_request(self, request_object):\n                user = self.user_repository.create(user=request_object.user)\n                return ResponseSuccess(201, user)\n    ```\n\n- Serializer\n\n```python\n    from schema import Schema\n    from clean_architecture.serializer import Serializer\n\n    class CreateUserEncoder(Serializer):\n        schema = Schema(\n            {\n                \"name\": str\n            },\n            ignore_extra_keys=True\n        )\n```\n\n## Testing\n\n```bash\n$ pytest \n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/JayStevency/clean-architecture", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JayStevency/clean-architecture", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "clean-architecture", "package_url": "https://pypi.org/project/clean-architecture/", "platform": "", "project_url": "https://pypi.org/project/clean-architecture/", "project_urls": {"Download": "https://github.com/JayStevency/clean-architecture", "Homepage": "https://github.com/JayStevency/clean-architecture"}, "release_url": "https://pypi.org/project/clean-architecture/0.0.3/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Clean Architecture</h1>\n<p>This project is described a clean architecture written by Robert C. Martine.\nArchitecture is fellow a <a href=\"https://blog.cleancoder.com/uncle-bob/2012/08/13/the-clean-architecture.html\" rel=\"nofollow\">clean architecture</a></p>\n<h2>Table of contents</h2>\n<ul>\n<li><a href=\"#features\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#diretorystructure\" rel=\"nofollow\">Directory Structure</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#example\" rel=\"nofollow\">Example</a></li>\n<li><a href=\"#testing\" rel=\"nofollow\">Testing</a></li>\n</ul>\n<h2>DirectoryStructure</h2>\n<pre><span class=\"p\">|</span>-- clean_architecture\n<span class=\"p\">|</span>    <span class=\"p\">|</span>-- domain\n<span class=\"p\">|</span>    <span class=\"p\">|</span>\t<span class=\"p\">|</span>-request_object.py\n<span class=\"p\">|</span>    <span class=\"p\">|</span>\t<span class=\"p\">|</span>-response_object.py\n<span class=\"p\">|</span>    <span class=\"p\">|</span>\t<span class=\"sb\">`</span>-use_case.py\n<span class=\"p\">|</span>    <span class=\"p\">|</span>-- entity\n<span class=\"p\">|</span>    <span class=\"p\">|</span>\t<span class=\"sb\">`</span>-entity.py\n<span class=\"p\">|</span>    <span class=\"p\">|</span>-- exception\n<span class=\"p\">|</span>    <span class=\"p\">|</span>\t<span class=\"p\">|</span>-exception.py\n<span class=\"p\">|</span>    <span class=\"p\">|</span>\t<span class=\"sb\">`</span>- *_exception.py\n<span class=\"p\">|</span>    <span class=\"p\">|</span>-- serializer\n<span class=\"p\">|</span>    \t<span class=\"sb\">`</span>-serializer.py\n</pre>\n<h2>Installation</h2>\n<pre>pip install clean-architecture\n</pre>\n<h2>Example</h2>\n<ul>\n<li>Entity</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">clean_architecture.entity</span> <span class=\"kn\">import</span> <span class=\"n\">Entity</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">UserEntity</span><span class=\"p\">(</span><span class=\"n\">Entity</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span>\n        <span class=\"bp\">self</span><span class=\"p\">,</span>\n        <span class=\"n\">user_id</span><span class=\"p\">,</span>\n        <span class=\"n\">name</span><span class=\"p\">,</span>\n        <span class=\"n\">created_at</span><span class=\"p\">,</span>\n        <span class=\"n\">updated_at</span>\n    <span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"n\">user_id</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">created_at</span> <span class=\"o\">=</span> <span class=\"n\">created_at</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">updated_at</span> <span class=\"o\">=</span> <span class=\"n\">updated_at</span>\n\n    <span class=\"nd\">@classmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">from_dict</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">adict</span><span class=\"p\">):</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">UserEntity</span><span class=\"p\">(</span>\n            <span class=\"n\">user_id</span><span class=\"o\">=</span><span class=\"n\">adict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"id\"</span><span class=\"p\">),</span>\n            <span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">adict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"name\"</span><span class=\"p\">),</span>\n            <span class=\"n\">created_at</span><span class=\"o\">=</span><span class=\"n\">adict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"created_at\"</span><span class=\"p\">),</span>\n            <span class=\"n\">updated_at</span><span class=\"o\">=</span><span class=\"n\">adict</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s2\">\"updated_at\"</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"n\">user</span>\n</pre>\n<ul>\n<li>\n<p>Domain</p>\n<ul>\n<li>ValidRequestObject</li>\n</ul>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">clean_architecture.domain</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n        <span class=\"n\">ValidRequestObject</span><span class=\"p\">,</span>\n        <span class=\"n\">InvalidRequestObject</span><span class=\"p\">,</span>\n        <span class=\"n\">UseCase</span><span class=\"p\">,</span>\n        <span class=\"n\">ResponseSuccess</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">CreateUserRequestObject</span><span class=\"p\">(</span><span class=\"n\">ValidRequestObject</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">user</span>\n\n        <span class=\"k\">if</span> <span class=\"n\">invalid_req</span><span class=\"o\">.</span><span class=\"n\">has_errors</span><span class=\"p\">():</span>\n            <span class=\"k\">return</span> <span class=\"n\">invalid_req</span>\n\n        <span class=\"k\">return</span> <span class=\"n\">CreateUserRequestObject</span><span class=\"p\">(</span>\n            <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">UserEntity</span><span class=\"o\">.</span><span class=\"n\">from_dict</span><span class=\"p\">(</span><span class=\"n\">adict</span><span class=\"p\">)</span>\n        <span class=\"p\">)</span>\n</pre>\n<ul>\n<li>UseCase</li>\n</ul>\n<pre>    <span class=\"k\">class</span> <span class=\"nc\">CreatedUser</span><span class=\"p\">(</span><span class=\"n\">UseCase</span><span class=\"p\">):</span>\n        <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_repository</span><span class=\"p\">):</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_repository</span> <span class=\"o\">=</span> <span class=\"n\">user_repository</span>\n\n        <span class=\"k\">def</span> <span class=\"nf\">process_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request_object</span><span class=\"p\">):</span>\n            <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">user_repository</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">request_object</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"n\">ResponseSuccess</span><span class=\"p\">(</span><span class=\"mi\">201</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p>Serializer</p>\n</li>\n</ul>\n<pre>    <span class=\"kn\">from</span> <span class=\"nn\">schema</span> <span class=\"kn\">import</span> <span class=\"n\">Schema</span>\n    <span class=\"kn\">from</span> <span class=\"nn\">clean_architecture.serializer</span> <span class=\"kn\">import</span> <span class=\"n\">Serializer</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">CreateUserEncoder</span><span class=\"p\">(</span><span class=\"n\">Serializer</span><span class=\"p\">):</span>\n        <span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">Schema</span><span class=\"p\">(</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n            <span class=\"p\">},</span>\n            <span class=\"n\">ignore_extra_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span>\n        <span class=\"p\">)</span>\n</pre>\n<h2>Testing</h2>\n<pre>$ pytest \n</pre>\n\n          </div>"}, "last_serial": 6104911, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "2435004b951e0a919fe7a3b475440218", "sha256": "14d2444d0dc59650e18efb8dca96ed3a169fcb24ebbd3e39d63230801916b2c7"}, "downloads": -1, "filename": "clean_architecture-0.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "2435004b951e0a919fe7a3b475440218", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11947, "upload_time": "2019-11-01T07:29:40", "upload_time_iso_8601": "2019-11-01T07:29:40.152579Z", "url": "https://files.pythonhosted.org/packages/d3/86/0381a3a2ffbe3701536222e74d9101d36bec2230659eee76c407734f0848/clean_architecture-0.0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "823b426a0d7e66b287e1cc7299dd4e0a", "sha256": "e2bf37e064d26d77aa911ac5270bb9dfc3b90c4e5cc711ad39c23f11e6912d97"}, "downloads": -1, "filename": "clean-architecture-0.0.2.tar.gz", "has_sig": false, "md5_digest": "823b426a0d7e66b287e1cc7299dd4e0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5638, "upload_time": "2019-11-01T07:29:42", "upload_time_iso_8601": "2019-11-01T07:29:42.683317Z", "url": "https://files.pythonhosted.org/packages/9d/ba/273bd1df333c9b0fddcd61bc06e45c0a6be2192d21a9dab4dcd56ffa3e24/clean-architecture-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "c78da59d22754056cb74ed75bf80bb0e", "sha256": "8567774d3953c2aa06ebf0651607b6a41b5a13b92e2a3db77860ae983b1a10b9"}, "downloads": -1, "filename": "clean_architecture-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "c78da59d22754056cb74ed75bf80bb0e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11947, "upload_time": "2019-11-09T06:46:09", "upload_time_iso_8601": "2019-11-09T06:46:09.390855Z", "url": "https://files.pythonhosted.org/packages/e9/97/2db7c48855ab2bb3a52d056cd546e71593f18f0206a925427745d9e617ef/clean_architecture-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01aaeb3eb736d02c3c56477d30c17e64", "sha256": "d563326c11c0160b82c07bb4edcef86e7bcddc25fa1b9f73ddc8bdbd2022fb32"}, "downloads": -1, "filename": "clean-architecture-0.0.3.tar.gz", "has_sig": false, "md5_digest": "01aaeb3eb736d02c3c56477d30c17e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5651, "upload_time": "2019-11-09T06:46:12", "upload_time_iso_8601": "2019-11-09T06:46:12.378353Z", "url": "https://files.pythonhosted.org/packages/10/71/0a3f1c96a4ca6ed725bb6aabbdb6ffd39861736430ec9cc7d12a5ce4dd68/clean-architecture-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c78da59d22754056cb74ed75bf80bb0e", "sha256": "8567774d3953c2aa06ebf0651607b6a41b5a13b92e2a3db77860ae983b1a10b9"}, "downloads": -1, "filename": "clean_architecture-0.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "c78da59d22754056cb74ed75bf80bb0e", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11947, "upload_time": "2019-11-09T06:46:09", "upload_time_iso_8601": "2019-11-09T06:46:09.390855Z", "url": "https://files.pythonhosted.org/packages/e9/97/2db7c48855ab2bb3a52d056cd546e71593f18f0206a925427745d9e617ef/clean_architecture-0.0.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "01aaeb3eb736d02c3c56477d30c17e64", "sha256": "d563326c11c0160b82c07bb4edcef86e7bcddc25fa1b9f73ddc8bdbd2022fb32"}, "downloads": -1, "filename": "clean-architecture-0.0.3.tar.gz", "has_sig": false, "md5_digest": "01aaeb3eb736d02c3c56477d30c17e64", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5651, "upload_time": "2019-11-09T06:46:12", "upload_time_iso_8601": "2019-11-09T06:46:12.378353Z", "url": "https://files.pythonhosted.org/packages/10/71/0a3f1c96a4ca6ed725bb6aabbdb6ffd39861736430ec9cc7d12a5ce4dd68/clean-architecture-0.0.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:06 2020"}