{"info": {"author": "Mozilla Identity Team", "author_email": "dev-identity@lists.mozilla.org", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Programming Language :: Python"], "description": "=====================================\nPyVEP has been renamed to PyBrowserID\n=====================================\n\nIn keeping with the new branding of the protocol, further development of\nthis project will take place under the name \"PyBrowserID\":\n\n    https://github.com/mozilla/PyBrowserID/\n\n    http://pypi.python.org/pypi/PyBrowserID/\n\n\n\n\n0.4.0 - 2012-03-13\n==================\n\n  * Renamed from PyVEP to PyBrowserID, in keeping with Mozilla branding.\n  * Audience checking now accepts glob-style patterns as well as fixed\n    audience strings.\n  * Verifier objects now accept a list of audience patterns as their first\n    argument.  This is designed to encourage doing the right thing rather than,\n    say, passing in the hostname from the request.\n  * Allowed LocalVerifier to use of a custom JWT parser.\n  * Removed browserid.verify_[remote|local|dummy] since they just cause\n    confusion.  You should either accept the defaults provided by the\n    browserid.verify function, or use a full-blown Verifier object.\n  * Split certificate loading and caching into a separate class, in\n    browserid.certificates:CertificatesManager.\n  * Removed the DummyVerifier class in favour of supporting functions\n    in browserid.tests.support.\n\n\n0.3.2 - 2012-02-03\n==================\n\n  * Fix segfaults on OSX.\n  * Update license to MPL 2.0.\n\n\n0.3.1 - 2012-01-24\n==================\n\n  * Update the audience-extraction code in RemoteVerifier to support the\n    new-style assertion format; thanks junkafarian.\n\n\n0.3.0 - 2012-01-06\n==================\n\n  * Support the \"new-style\" VEP assertion format.  This avoids double-b64-\n    encoding and generally results in smaller assertions.\n  * Warn rather than fail if we can't find the CA certificates.  This will\n    help new users get up and running more easily.\n  * Add shortcut functions for verification with the default options.\n    They are vep.verify(), vep.verify_remote(), vep.verify_local(), and \n    vep.verify_dummy().\n  * Add vep.utils.get_assertion_info(), which parses useful information out\n    of an assertion without actually verifying it.\n  * Make LocalVerifier expire cached public keys after 6 hours by default.\n  * Allow LocalVerifier to take a user-specified cache object so that public\n    keys can be stored in e.g. memcached.\n  * Update to the latest issuer-key-fetch protocol (using /.well-known/vep).\n  * Add InvalidIssuerError to report on invalid or untrusted issuers.\n  * Clean up the internal JWT interface.  It now uses module-level functions\n    rather than classmethods.\n\n\n0.2.1 - 2011-12-16\n==================\n\n * Use M2Crypto for faster DSA operations.\n * DummyVerifier: fix hex formatting for compatability with jwcrypto.\n * DummyVerifier: don't emit FutureWarning on initialisation.\n\n\n0.2.0 - 2011-12-07\n==================\n\n * do more validation of the assertion before checking the certificates,\n   to avoid expensive crypto ops for things we know to be invalid.\n * implement DummyVerifier class to aid in testing, both of this package\n   and of packages that are using PyVEP.\n * add exception hierarchy in vep.errors, so that calling code can easily\n   tell why verification failed.\n\n\n0.1.1 - 2011-12-01\n==================\n\n * add \"diresworb.org\" to default list of trusted secondaries.\n * implement additional signature algorithms.\n * if \"hostname/.well-known/host-meta\" gives a 404, fall back to \"hostname/pk\"\n   to find the public key.\n\n\n0.1.0 - 2011-11-23\n==================\n\n * initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mozilla/PyBrowserID", "keywords": "authentication browserid login email", "license": "MPLv2.0", "maintainer": null, "maintainer_email": null, "name": "PyVEP", "package_url": "https://pypi.org/project/PyVEP/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PyVEP/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mozilla/PyBrowserID"}, "release_url": "https://pypi.org/project/PyVEP/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "Python library for the Verified Email Protocol", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>In keeping with the new branding of the protocol, further development of\nthis project will take place under the name \u201cPyBrowserID\u201d:</p>\n<blockquote>\n<p><a href=\"https://github.com/mozilla/PyBrowserID/\" rel=\"nofollow\">https://github.com/mozilla/PyBrowserID/</a></p>\n<p><a href=\"http://pypi.python.org/pypi/PyBrowserID/\" rel=\"nofollow\">http://pypi.python.org/pypi/PyBrowserID/</a></p>\n</blockquote>\n<div id=\"id1\">\n<h2>0.4.0 - 2012-03-13</h2>\n<blockquote>\n<ul>\n<li>Renamed from PyVEP to PyBrowserID, in keeping with Mozilla branding.</li>\n<li>Audience checking now accepts glob-style patterns as well as fixed\naudience strings.</li>\n<li>Verifier objects now accept a list of audience patterns as their first\nargument.  This is designed to encourage doing the right thing rather than,\nsay, passing in the hostname from the request.</li>\n<li>Allowed LocalVerifier to use of a custom JWT parser.</li>\n<li>Removed browserid.verify_[remote|local|dummy] since they just cause\nconfusion.  You should either accept the defaults provided by the\nbrowserid.verify function, or use a full-blown Verifier object.</li>\n<li>Split certificate loading and caching into a separate class, in\nbrowserid.certificates:CertificatesManager.</li>\n<li>Removed the DummyVerifier class in favour of supporting functions\nin browserid.tests.support.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h2>0.3.2 - 2012-02-03</h2>\n<blockquote>\n<ul>\n<li>Fix segfaults on OSX.</li>\n<li>Update license to MPL 2.0.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id3\">\n<h2>0.3.1 - 2012-01-24</h2>\n<blockquote>\n<ul>\n<li>Update the audience-extraction code in RemoteVerifier to support the\nnew-style assertion format; thanks junkafarian.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id4\">\n<h2>0.3.0 - 2012-01-06</h2>\n<blockquote>\n<ul>\n<li>Support the \u201cnew-style\u201d VEP assertion format.  This avoids double-b64-\nencoding and generally results in smaller assertions.</li>\n<li>Warn rather than fail if we can\u2019t find the CA certificates.  This will\nhelp new users get up and running more easily.</li>\n<li>Add shortcut functions for verification with the default options.\nThey are vep.verify(), vep.verify_remote(), vep.verify_local(), and\nvep.verify_dummy().</li>\n<li>Add vep.utils.get_assertion_info(), which parses useful information out\nof an assertion without actually verifying it.</li>\n<li>Make LocalVerifier expire cached public keys after 6 hours by default.</li>\n<li>Allow LocalVerifier to take a user-specified cache object so that public\nkeys can be stored in e.g. memcached.</li>\n<li>Update to the latest issuer-key-fetch protocol (using /.well-known/vep).</li>\n<li>Add InvalidIssuerError to report on invalid or untrusted issuers.</li>\n<li>Clean up the internal JWT interface.  It now uses module-level functions\nrather than classmethods.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id5\">\n<h2>0.2.1 - 2011-12-16</h2>\n<blockquote>\n<ul>\n<li>Use M2Crypto for faster DSA operations.</li>\n<li>DummyVerifier: fix hex formatting for compatability with jwcrypto.</li>\n<li>DummyVerifier: don\u2019t emit FutureWarning on initialisation.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id6\">\n<h2>0.2.0 - 2011-12-07</h2>\n<blockquote>\n<ul>\n<li>do more validation of the assertion before checking the certificates,\nto avoid expensive crypto ops for things we know to be invalid.</li>\n<li>implement DummyVerifier class to aid in testing, both of this package\nand of packages that are using PyVEP.</li>\n<li>add exception hierarchy in vep.errors, so that calling code can easily\ntell why verification failed.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id7\">\n<h2>0.1.1 - 2011-12-01</h2>\n<blockquote>\n<ul>\n<li>add \u201cdiresworb.org\u201d to default list of trusted secondaries.</li>\n<li>implement additional signature algorithms.</li>\n<li>if \u201chostname/.well-known/host-meta\u201d gives a 404, fall back to \u201chostname/pk\u201d\nto find the public key.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id8\">\n<h2>0.1.0 - 2011-11-23</h2>\n<blockquote>\n<ul>\n<li>initial release.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 785398, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "03184b1f48e4abea099d40f6354f65b1", "sha256": "fdb9234648ac8bf91b5c141e91f60627e3da110d4578e78765e5021ec37a1f72"}, "downloads": -1, "filename": "PyVEP-0.1.0.tar.gz", "has_sig": false, "md5_digest": "03184b1f48e4abea099d40f6354f65b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15535, "upload_time": "2011-11-23T06:49:46", "upload_time_iso_8601": "2011-11-23T06:49:46.958930Z", "url": "https://files.pythonhosted.org/packages/92/1b/4367de8604e6ac47799dd091b9558fc162a06daee3981d483b93c607dd9c/PyVEP-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fcf5741a5552c704b415b2a5cd54b702", "sha256": "cb18af968ad16f2a840a312b169375a815e3128a8bf60740a9ec06ad8e814a5f"}, "downloads": -1, "filename": "PyVEP-0.1.1.tar.gz", "has_sig": false, "md5_digest": "fcf5741a5552c704b415b2a5cd54b702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15934, "upload_time": "2011-12-02T05:25:09", "upload_time_iso_8601": "2011-12-02T05:25:09.471920Z", "url": "https://files.pythonhosted.org/packages/35/11/5e208a634db860cb1915902b372a77533735c6229ad764d444f01f2f9319/PyVEP-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2b4b8d45a07fd7d5e7c62e98328ef3e9", "sha256": "9a400d2ce48d6ae898a29a280d50ee928746832ff9df54cab1efcadc53f50576"}, "downloads": -1, "filename": "PyVEP-0.2.0.tar.gz", "has_sig": false, "md5_digest": "2b4b8d45a07fd7d5e7c62e98328ef3e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21712, "upload_time": "2011-12-07T10:23:59", "upload_time_iso_8601": "2011-12-07T10:23:59.614533Z", "url": "https://files.pythonhosted.org/packages/49/c5/9ca594888da8eae16144de05c786e8bfb5a5f7e76b5cbc9c59ee3e51a418/PyVEP-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "dff3eb6c796452b65765539dec5a1832", "sha256": "8fea10daeacdf1e442623e16f3d53ebf1a5015a0c7ef0daaa2cb7cab2bc799d9"}, "downloads": -1, "filename": "PyVEP-0.2.1.tar.gz", "has_sig": false, "md5_digest": "dff3eb6c796452b65765539dec5a1832", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22747, "upload_time": "2011-12-16T04:35:27", "upload_time_iso_8601": "2011-12-16T04:35:27.036027Z", "url": "https://files.pythonhosted.org/packages/c4/cf/43061919e801efef5574334282c422d1ca1522a7104ea4d47ef4540868d3/PyVEP-0.2.1.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "0899c86f2cccf1ff3180b514626096ca", "sha256": "97abd262afb76aabada5fd22d5b15b8e78632045fea80781100b8d89ccc433fa"}, "downloads": -1, "filename": "PyVEP-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0899c86f2cccf1ff3180b514626096ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31213, "upload_time": "2012-01-05T23:21:39", "upload_time_iso_8601": "2012-01-05T23:21:39.920545Z", "url": "https://files.pythonhosted.org/packages/13/fd/ee1af155d2a9af8540d36cf645173662015c534daef51c22d50d00c37e80/PyVEP-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "c79c49252c08ca3f4b3473293a21f407", "sha256": "b8c5868f99ff747a568e9bd2687003adb1f8a2304b1a7ffc2b994711bee1e86a"}, "downloads": -1, "filename": "PyVEP-0.3.1.tar.gz", "has_sig": false, "md5_digest": "c79c49252c08ca3f4b3473293a21f407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30417, "upload_time": "2012-01-23T22:08:17", "upload_time_iso_8601": "2012-01-23T22:08:17.916443Z", "url": "https://files.pythonhosted.org/packages/4d/39/cb709c451a917034a6dab6f39e1e07b31cd995fadbfbef2086e31272c711/PyVEP-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "571d4783d11eb30f81488dd38f6f19eb", "sha256": "ee0749d8ca4ea7f22cec0d2580a02ce4b23571de294a0f6593167a2ddd3c54a3"}, "downloads": -1, "filename": "PyVEP-0.3.2.tar.gz", "has_sig": false, "md5_digest": "571d4783d11eb30f81488dd38f6f19eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30958, "upload_time": "2012-02-03T07:08:57", "upload_time_iso_8601": "2012-02-03T07:08:57.874363Z", "url": "https://files.pythonhosted.org/packages/da/db/10fa8a3a858b7cc35a8b10180565b62d3bdf8aa8f02ced8b18c719f9c799/PyVEP-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "571d4783d11eb30f81488dd38f6f19eb", "sha256": "ee0749d8ca4ea7f22cec0d2580a02ce4b23571de294a0f6593167a2ddd3c54a3"}, "downloads": -1, "filename": "PyVEP-0.3.2.tar.gz", "has_sig": false, "md5_digest": "571d4783d11eb30f81488dd38f6f19eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30958, "upload_time": "2012-02-03T07:08:57", "upload_time_iso_8601": "2012-02-03T07:08:57.874363Z", "url": "https://files.pythonhosted.org/packages/da/db/10fa8a3a858b7cc35a8b10180565b62d3bdf8aa8f02ced8b18c719f9c799/PyVEP-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:07 2020"}