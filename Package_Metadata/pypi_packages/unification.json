{"info": {"author": "Matthew Rocklin", "author_email": "mrocklin@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Unification\n===========\n\n|Build Status|\n\nStraightforward Unification, extensible via dispatch.\n\nExamples\n--------\n\n.. code-block:: python\n\n   >>> from unification import *\n   >>> unify(1, 1)\n   {}\n   >>> unify(1, 2)\n   False\n   >>> x = var('x')\n\n   >>> unify((1, x), (1, 2))\n   {~x: 2}\n\n   >>> unify((x, x), (1, 2))\n   False\n\n   @unifiable\n   class Account(object):\n       def __init__(self, id, name, balance):\n           self.id = id\n           self.name = name\n           self.balance = balance\n\n   data = [Account(1, 'Alice', 100),\n           Account(2, 'Bob', 0),\n           Account(2, 'Charlie', 0),\n           Account(2, 'Denis', 400),\n           Account(2, 'Edith', 500)]\n\n   id, name, balance = var('id'), var('name'), var('balance')\n\n   >>> [unify(Account(id, name, balance), acct) for acct in data]\n   [{~name: 'Alice', ~balance: 100, ~id: 1},\n    {~name: 'Bob', ~balance: 0, ~id: 2},\n    {~name: 'Charlie', ~balance: 0, ~id: 2},\n    {~name: 'Denis', ~balance: 400, ~id: 2},\n    {~name: 'Edith', ~balance: 500, ~id: 2}]\n\n   >>> [unify(Account(id, name, 0), acct) for acct in data]\n   [False,\n    {~name: 'Bob', ~id: 2},\n    {~name: 'Charlie', ~id: 2},\n    False,\n    False]\n\nFunction Dispatch\n-----------------\n\nUnification supports function dispatch through pattern matching.\n\n\n.. code-block:: python\n\n   from unification.match import *\n\n   n = var('n')\n   @match(0)\n   def fib(n):\n       return 0\n\n   @match(1)\n   def fib(n):\n       return 1\n\n   @match(n)\n   def fib(n):\n       return fib(n - 1) + fib(n - 2)\n\n   >>> map(fib, [0, 1, 2, 3, 4, 5, 6, 7, 8, 0])\n   [0, 1, 1, 2, 3, 5, 8, 13, 21, 34]\n\n\nThis patten matching can be fairly complex\n\n.. code-block:: python\n\n   name, amount = var('name'), var('amount')\n\n   @match({'status': 200, 'data': {'name': name, 'credit': amount}})\n   def respond(name, amount):\n       balance[name] +=  amount\n\n\n   @match({'status': 200, 'data': {'name': name, 'debit': amount}})\n   def respond(name, amount):\n       balance[name] -= amount\n\n\n   @match({'status': 404})\n   def respond():\n       print(\"Bad Request\")\n\n\nSee full example in the examples directory.\n\n\nPerformance and Reliability\n---------------------------\n\nThis was hacked together.  Unification stresses extensibility over performance,\npreliminary benchmarks show that this is 2-5x slower than straight tuple-based\nunification.\n\nThis is somewhat reliable, the only caveat is on set unification which is\nchallenging to do generally within this framework.  It should work well in\nmoderately complex cases but break down under very complex ones.\n\n\nHistory\n-------\n\nThis was carved out from the LogPy_ and `Multiple Dispatch`_ projects.\n\n\nAuthor\n------\n\n`Matthew Rocklin`_\n\n\n.. _LogPy: http://github.com/logpy/logpy/\n.. _`Multiple Dispatch`: http://github.com/mrocklin/multipledispatch/\n.. _`Matthew Rocklin`: http://matthewrocklin.com/\n.. |Build Status| image:: https://travis-ci.org/mrocklin/unification.png\n   :target: https://travis-ci.org/mrocklin/unification", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/mrocklin/unification/", "keywords": "unification logic-programming dispatch", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "unification", "package_url": "https://pypi.org/project/unification/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/unification/", "project_urls": {"Homepage": "http://github.com/mrocklin/unification/"}, "release_url": "https://pypi.org/project/unification/0.2.2/", "requires_dist": ["multipledispatch", "toolz"], "requires_python": "", "summary": "Unification", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/mrocklin/unification\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10f766165c77476ff21e43c66588b92753802183/68747470733a2f2f7472617669732d63692e6f72672f6d726f636b6c696e2f756e696669636174696f6e2e706e67\"></a></p>\n<p>Straightforward Unification, extensible via dispatch.</p>\n<div id=\"examples\">\n<h2>Examples</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">unification</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"p\">{}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"kc\">False</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'x'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">unify</span><span class=\"p\">((</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">unify</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">))</span>\n<span class=\"kc\">False</span>\n\n<span class=\"nd\">@unifiable</span>\n<span class=\"k\">class</span> <span class=\"nc\">Account</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">balance</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">=</span> <span class=\"nb\">id</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">name</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">balance</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'Alice'</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">),</span>\n        <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'Bob'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n        <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'Charlie'</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span>\n        <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'Denis'</span><span class=\"p\">,</span> <span class=\"mi\">400</span><span class=\"p\">),</span>\n        <span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'Edith'</span><span class=\"p\">,</span> <span class=\"mi\">500</span><span class=\"p\">)]</span>\n\n<span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">balance</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">),</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">),</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'balance'</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">balance</span><span class=\"p\">),</span> <span class=\"n\">acct</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">acct</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">]</span>\n<span class=\"p\">[{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Alice'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">balance</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Bob'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">balance</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Charlie'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">balance</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Denis'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">balance</span><span class=\"p\">:</span> <span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Edith'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"n\">balance</span><span class=\"p\">:</span> <span class=\"mi\">500</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">}]</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">unify</span><span class=\"p\">(</span><span class=\"n\">Account</span><span class=\"p\">(</span><span class=\"nb\">id</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"n\">acct</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">acct</span> <span class=\"ow\">in</span> <span class=\"n\">data</span><span class=\"p\">]</span>\n<span class=\"p\">[</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n <span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Bob'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n <span class=\"p\">{</span><span class=\"o\">~</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"s1\">'Charlie'</span><span class=\"p\">,</span> <span class=\"o\">~</span><span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span>\n <span class=\"kc\">False</span><span class=\"p\">,</span>\n <span class=\"kc\">False</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"function-dispatch\">\n<h2>Function Dispatch</h2>\n<p>Unification supports function dispatch through pattern matching.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">unification.match</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'n'</span><span class=\"p\">)</span>\n<span class=\"nd\">@match</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">0</span>\n\n<span class=\"nd\">@match</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"mi\">1</span>\n\n<span class=\"nd\">@match</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">fib</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">-</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">fib</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">13</span><span class=\"p\">,</span> <span class=\"mi\">21</span><span class=\"p\">,</span> <span class=\"mi\">34</span><span class=\"p\">]</span>\n</pre>\n<p>This patten matching can be fairly complex</p>\n<pre><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">amount</span> <span class=\"o\">=</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'name'</span><span class=\"p\">),</span> <span class=\"n\">var</span><span class=\"p\">(</span><span class=\"s1\">'amount'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@match</span><span class=\"p\">({</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s1\">'credit'</span><span class=\"p\">:</span> <span class=\"n\">amount</span><span class=\"p\">}})</span>\n<span class=\"k\">def</span> <span class=\"nf\">respond</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"p\">):</span>\n    <span class=\"n\">balance</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">+=</span>  <span class=\"n\">amount</span>\n\n\n<span class=\"nd\">@match</span><span class=\"p\">({</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"s1\">'debit'</span><span class=\"p\">:</span> <span class=\"n\">amount</span><span class=\"p\">}})</span>\n<span class=\"k\">def</span> <span class=\"nf\">respond</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">amount</span><span class=\"p\">):</span>\n    <span class=\"n\">balance</span><span class=\"p\">[</span><span class=\"n\">name</span><span class=\"p\">]</span> <span class=\"o\">-=</span> <span class=\"n\">amount</span>\n\n\n<span class=\"nd\">@match</span><span class=\"p\">({</span><span class=\"s1\">'status'</span><span class=\"p\">:</span> <span class=\"mi\">404</span><span class=\"p\">})</span>\n<span class=\"k\">def</span> <span class=\"nf\">respond</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Bad Request\"</span><span class=\"p\">)</span>\n</pre>\n<p>See full example in the examples directory.</p>\n</div>\n<div id=\"performance-and-reliability\">\n<h2>Performance and Reliability</h2>\n<p>This was hacked together.  Unification stresses extensibility over performance,\npreliminary benchmarks show that this is 2-5x slower than straight tuple-based\nunification.</p>\n<p>This is somewhat reliable, the only caveat is on set unification which is\nchallenging to do generally within this framework.  It should work well in\nmoderately complex cases but break down under very complex ones.</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<p>This was carved out from the <a href=\"http://github.com/logpy/logpy/\" rel=\"nofollow\">LogPy</a> and <a href=\"http://github.com/mrocklin/multipledispatch/\" rel=\"nofollow\">Multiple Dispatch</a> projects.</p>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p><a href=\"http://matthewrocklin.com/\" rel=\"nofollow\">Matthew Rocklin</a></p>\n</div>\n\n          </div>"}, "last_serial": 2046085, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "85f2cb81f5eccbd5f034610fc5bda033", "sha256": "bf600c8041d8e5afac04dbc53ea5b3e9813cade3cede0c565435ceeea4753f7d"}, "downloads": -1, "filename": "unification-0.2.0.tar.gz", "has_sig": false, "md5_digest": "85f2cb81f5eccbd5f034610fc5bda033", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6041, "upload_time": "2014-07-04T15:13:55", "upload_time_iso_8601": "2014-07-04T15:13:55.639024Z", "url": "https://files.pythonhosted.org/packages/f4/1e/59ab5efd620ee0168b5aa11e28669474594237cdd27e226615ac036a21fb/unification-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "ed46c07c9bdb039bb002148468e241d3", "sha256": "3089ce11f07f02ed45bc67398fec969a5956913e45128ef0e9111f4588b17f15"}, "downloads": -1, "filename": "unification-0.2.1.tar.gz", "has_sig": false, "md5_digest": "ed46c07c9bdb039bb002148468e241d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6495, "upload_time": "2014-07-04T16:14:47", "upload_time_iso_8601": "2014-07-04T16:14:47.548255Z", "url": "https://files.pythonhosted.org/packages/69/9b/a4176ae231068bcb2676c2c4f7dc3c594f2e420641da0e5552db09a4a13f/unification-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "dec42ab2e9c0130204e4fcec534d540c", "sha256": "fbf883f0ec618a34b806a830afae2f51833d9db013b520519707b34d7f20c282"}, "downloads": -1, "filename": "unification-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dec42ab2e9c0130204e4fcec534d540c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10087, "upload_time": "2016-04-05T01:02:50", "upload_time_iso_8601": "2016-04-05T01:02:50.150785Z", "url": "https://files.pythonhosted.org/packages/f2/6d/24285df596df88923ceea78d980f5dabd1c511e562d9ec1db305fc7c43cd/unification-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2f1723d75b0f5c34a7e9be4137eafbf", "sha256": "e83972eda9a365b51eee97d72436136bfd44b0146f06bb7e8a28cca3eafc79b3"}, "downloads": -1, "filename": "unification-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b2f1723d75b0f5c34a7e9be4137eafbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6832, "upload_time": "2016-04-05T01:02:57", "upload_time_iso_8601": "2016-04-05T01:02:57.350019Z", "url": "https://files.pythonhosted.org/packages/1c/26/432ea4a47aded7b0d64662fc265252da2b2a059f92af2eeb3321d60c9f8a/unification-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "dec42ab2e9c0130204e4fcec534d540c", "sha256": "fbf883f0ec618a34b806a830afae2f51833d9db013b520519707b34d7f20c282"}, "downloads": -1, "filename": "unification-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dec42ab2e9c0130204e4fcec534d540c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10087, "upload_time": "2016-04-05T01:02:50", "upload_time_iso_8601": "2016-04-05T01:02:50.150785Z", "url": "https://files.pythonhosted.org/packages/f2/6d/24285df596df88923ceea78d980f5dabd1c511e562d9ec1db305fc7c43cd/unification-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b2f1723d75b0f5c34a7e9be4137eafbf", "sha256": "e83972eda9a365b51eee97d72436136bfd44b0146f06bb7e8a28cca3eafc79b3"}, "downloads": -1, "filename": "unification-0.2.2.tar.gz", "has_sig": false, "md5_digest": "b2f1723d75b0f5c34a7e9be4137eafbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6832, "upload_time": "2016-04-05T01:02:57", "upload_time_iso_8601": "2016-04-05T01:02:57.350019Z", "url": "https://files.pythonhosted.org/packages/1c/26/432ea4a47aded7b0d64662fc265252da2b2a059f92af2eeb3321d60c9f8a/unification-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:40:34 2020"}