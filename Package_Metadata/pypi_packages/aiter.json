{"info": {"author": "Richard Kiss", "author_email": "him@richardkiss.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![Build Status](https://travis-ci.org/richardkiss/aiter.png?branch=master)](https://travis-ci.org/richardkiss/aiter)\n[![codecov.io](https://codecov.io/github/richardkiss/aiter/coverage.svg?branch=master)](https://codecov.io/github/richardkiss/aiter)\n[![Documentation Status](https://readthedocs.org/projects/aiter/badge/?version=latest)](https://aiter.readthedocs.io/en/latest/?badge=latest)\n\n\n\naiter -- Asynchronous Iterator Patterns\n=======================================\n\n\n[PEP 525](https://www.python.org/dev/peps/pep-0525/) describes *asynchronous iterators*, a merging of iterators with async functionality. Python 3.6 makes legal constructs such as\n\n```\nasync for event in peer.event_iterator:\n    await process_event(event)\n```\n\nwhich is a huge improvement over using `async.Queue` objects which have no built-in way to determine \"end-of-stream\" conditions.\n\nThis module implements some patterns useful for python asynchronous iterators.\n\nDocumentation available on [readthedocs.io](https://aiter.readthedocs.io/).\n\nA [tutorial](TUTORIAL.org) is available. [github version](https://github.com/richardkiss/aiter/blob/feature/tutorial/TUTORIAL.org)\n\n*CAVEAT* This project is still in its infancy, and I reserve the right to rename things and cause other breaking changes.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/richardkiss/aiter", "keywords": "", "license": "http://opensource.org/licenses/MIT", "maintainer": "", "maintainer_email": "", "name": "aiter", "package_url": "https://pypi.org/project/aiter/", "platform": "", "project_url": "https://pypi.org/project/aiter/", "project_urls": {"Homepage": "https://github.com/richardkiss/aiter"}, "release_url": "https://pypi.org/project/aiter/0.13.20191203/", "requires_dist": null, "requires_python": "", "summary": "Useful patterns building upon asynchronous iterators.", "version": "0.13.20191203", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/richardkiss/aiter\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1903aa31649126c5c306b3a05c86b5b93ed5a990/68747470733a2f2f7472617669732d63692e6f72672f726963686172646b6973732f61697465722e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/github/richardkiss/aiter\" rel=\"nofollow\"><img alt=\"codecov.io\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d216b54683517455bdad11f2b3e19579f03026f9/68747470733a2f2f636f6465636f762e696f2f6769746875622f726963686172646b6973732f61697465722f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://aiter.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/005e0e9d070f91ebf9e25e1b141fb774beffd3b1/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f61697465722f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<h1>aiter -- Asynchronous Iterator Patterns</h1>\n<p><a href=\"https://www.python.org/dev/peps/pep-0525/\" rel=\"nofollow\">PEP 525</a> describes <em>asynchronous iterators</em>, a merging of iterators with async functionality. Python 3.6 makes legal constructs such as</p>\n<pre><code>async for event in peer.event_iterator:\n    await process_event(event)\n</code></pre>\n<p>which is a huge improvement over using <code>async.Queue</code> objects which have no built-in way to determine \"end-of-stream\" conditions.</p>\n<p>This module implements some patterns useful for python asynchronous iterators.</p>\n<p>Documentation available on <a href=\"https://aiter.readthedocs.io/\" rel=\"nofollow\">readthedocs.io</a>.</p>\n<p>A <a href=\"TUTORIAL.org\" rel=\"nofollow\">tutorial</a> is available. <a href=\"https://github.com/richardkiss/aiter/blob/feature/tutorial/TUTORIAL.org\" rel=\"nofollow\">github version</a></p>\n<p><em>CAVEAT</em> This project is still in its infancy, and I reserve the right to rename things and cause other breaking changes.</p>\n\n          </div>"}, "last_serial": 6238619, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6c6340cda58ba6da39b707fe40f67aa3", "sha256": "62b29804d5ec9db989d9d8ebf7b0c3e1f88ed9fb5926ba854fe0fa2d1273cce9"}, "downloads": -1, "filename": "aiter-0.1.tar.gz", "has_sig": false, "md5_digest": "6c6340cda58ba6da39b707fe40f67aa3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4693, "upload_time": "2019-02-10T05:20:51", "upload_time_iso_8601": "2019-02-10T05:20:51.068883Z", "url": "https://files.pythonhosted.org/packages/18/d7/8520f826f6a38e489c930321a834b45095c18092de43f5312030c6826ed0/aiter-0.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "15b17c120e047a2340fecd6ac609459b", "sha256": "28104e3c6df6b15366d4edb0ccf072cde86b911957ee1f7574959ddce212fc6e"}, "downloads": -1, "filename": "aiter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "15b17c120e047a2340fecd6ac609459b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5481, "upload_time": "2019-02-10T05:59:25", "upload_time_iso_8601": "2019-02-10T05:59:25.243070Z", "url": "https://files.pythonhosted.org/packages/60/8c/f0bb392b394415a7231b44ee96b13624e1997e3fc14a22c90ecbba86cd0c/aiter-0.1.2.tar.gz", "yanked": false}], "0.13.20191203": [{"comment_text": "", "digests": {"md5": "833a00d7f4d02c91ba3a0bdd8f667d79", "sha256": "b99a5dcdceccc8f2c2c10b1327d462353f7ab1aedc8ae17fcd3d2331db5ff429"}, "downloads": -1, "filename": "aiter-0.13.20191203.tar.gz", "has_sig": false, "md5_digest": "833a00d7f4d02c91ba3a0bdd8f667d79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9327, "upload_time": "2019-12-04T01:49:34", "upload_time_iso_8601": "2019-12-04T01:49:34.834888Z", "url": "https://files.pythonhosted.org/packages/4c/c5/efb9abdb6b4e85bb0ff0b3c2e066e813de64db18a23789c22e638a019087/aiter-0.13.20191203.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "833a00d7f4d02c91ba3a0bdd8f667d79", "sha256": "b99a5dcdceccc8f2c2c10b1327d462353f7ab1aedc8ae17fcd3d2331db5ff429"}, "downloads": -1, "filename": "aiter-0.13.20191203.tar.gz", "has_sig": false, "md5_digest": "833a00d7f4d02c91ba3a0bdd8f667d79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9327, "upload_time": "2019-12-04T01:49:34", "upload_time_iso_8601": "2019-12-04T01:49:34.834888Z", "url": "https://files.pythonhosted.org/packages/4c/c5/efb9abdb6b4e85bb0ff0b3c2e066e813de64db18a23789c22e638a019087/aiter-0.13.20191203.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:21 2020"}