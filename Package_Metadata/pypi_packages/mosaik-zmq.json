{"info": {"author": "Jan Soeren Schwarz", "author_email": "schwarz at offis.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU Lesser General Public License v2 (LGPLv2)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Scientific/Engineering"], "description": "mosaik-zmq\n===========\n\nThis adapter was built to send mosaik simulation data to the data stream management system `Odysseus`__.\nOdysseus allows to process and visualise the simulation results online during the simulation.\nMore information can be found in the `mosaik documentation`__.\n\nBut due to the use of `ZeroMQ`__, which is a high-performance asynchronous messaging library,\nthe mosaik-zmq adapter can also be used to process or store results of a simulation in any software supporting ZeroMQ sockets.\n\n__ http://odysseus.offis.uni-oldenburg.de\n__ http://mosaik.readthedocs.org/en/latest/ecosystem/odysseus.html\n__ http://zguide.zeromq.org/py:all\n\nInstallation\n------------\n\n*mosaik-zmq* can be installed using pip:\n\n::\n\n    $ pip install mosaik-zmq\n\n__ https://pyzmq.readthedocs.org/en/latest/\n\n*mosaik-zmq* uses the `pyzmq`__ module. If you get an error during installation,\ninstall the python 3 headers and python-zmq package  (e.g., ``sudo apt-get install python3-dev python-zmq``)\n\nIf installation is still not working you may need to install a C compiler (e.g. ``sudo apt-get install\nbuild-essential``)\n\n\nUsage\n-----\n\nThe mosaik-zmq adapter can be added to a simulation scenario like any other component.\nFirst you have to add the following code to the *sim_config*:\n\n.. code-block:: python\n\n   sim_config = {\n      'ZMQ': {\n         'cmd': 'mosaik-zmq %(addr)s',\n      },\n   }\n\nInitialization\n^^^^^^^^^^^^^^\n\nWhen you start *mosaik-zmq*, you have to provide a *step_size* and a *duration*\nargument. The *step_size* defines how often data will be sent. The\n*duration* is the simulation end time in seconds.\n\nExample:\n\n.. code-block:: python\n\n   zmqModel = world.start('ZMQ', step_size=15*60, duration=15*60*24*30)\n\nModel instantiation\n^^^^^^^^^^^^^^^^^^^\n\nEvery instance of *mosaik-zmq* allows you to create instances of its\n*Socket* model. The *Socket* has the following parameters:\n\n- *host* (default: 'tcp://\\*:') is the address of the host the data will be sent to.\n\n- *port* (default: 5558) is the port on which the host will receive data.\n\n- *socket_type* (default: 'PUB') is the type of the ZeroMQ socket to open for connection between the adapter and the host. Two different patterns can be used. The default is 'PUB', which stands for the `publish subscribe pattern`__ . Alternatively the `push pull pattern`__ ('PUSH') can be used.\n\nExample code:\n\n.. code-block:: python\n\n   zmq = zmqModel.Socket(host='tcp://*:', port=5558, socket_type='PUB')\n\n__ http://zguide.zeromq.org/py:all#Getting-the-Message-Out\n__ http://zguide.zeromq.org/py:all#Divide-and-Conquer\n\nConnection\n^^^^^^^^^^\n\nTo get data sent to the host the zmq model has to be connected to an other model in the scenario definition.\nBased on the `mosaik-demo`__ the scenario could look like this:\n\n.. code-block:: python\n\n   pvsim = world.start('CSV', sim_start=START, datafile=PV_DATA)\n   pvs = pvsim.PV.create(20)\n\n   zmqModel = world.start('ZMQ', step_size=15*60, duration=15*60*24*30)\n   zmq = zmqModel.Socket(host='tcp://*:', port=5558, socket_type='PUB')\n\n   connect_many_to_one(world, pvs, zmq, 'P')\n\n__ https://bitbucket.org/mosaik/mosaik-demo\n\n\nGetting help\n------------\n\nIf you need help, please visit the `mosaik-users mailing list`__.\n\n__ https://mosaik.offis.de/mailinglist\n\n\nChangelog\n=========\n\n0.1.1 \u2013 2016-01-20\n------------------\n\n- Updated documentation\n\n0.1 \u2013 2015-12-16\n----------------\n\n- Initial release\n\n\nAuthors\n=======\n\nThe mosaik ZeroMQ connector was created by Jan S\u00f6ren Schwarz.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/mosaik/mosaik-zmq", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "mosaik-zmq", "package_url": "https://pypi.org/project/mosaik-zmq/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mosaik-zmq/", "project_urls": {"Homepage": "https://bitbucket.org/mosaik/mosaik-zmq"}, "release_url": "https://pypi.org/project/mosaik-zmq/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Sends mosaik simulation data to ZeroMQ socket.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"mosaik-zmq\">\n<h2>mosaik-zmq</h2>\n<p>This adapter was built to send mosaik simulation data to the data stream management system <a href=\"http://odysseus.offis.uni-oldenburg.de\" rel=\"nofollow\">Odysseus</a>.\nOdysseus allows to process and visualise the simulation results online during the simulation.\nMore information can be found in the <a href=\"http://mosaik.readthedocs.org/en/latest/ecosystem/odysseus.html\" rel=\"nofollow\">mosaik documentation</a>.</p>\n<p>But due to the use of <a href=\"http://zguide.zeromq.org/py:all\" rel=\"nofollow\">ZeroMQ</a>, which is a high-performance asynchronous messaging library,\nthe mosaik-zmq adapter can also be used to process or store results of a simulation in any software supporting ZeroMQ sockets.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><em>mosaik-zmq</em> can be installed using pip:</p>\n<pre>$ pip install mosaik-zmq\n</pre>\n<p><em>mosaik-zmq</em> uses the <a href=\"https://pyzmq.readthedocs.org/en/latest/\" rel=\"nofollow\">pyzmq</a> module. If you get an error during installation,\ninstall the python 3 headers and python-zmq package  (e.g., <tt>sudo <span class=\"pre\">apt-get</span> install <span class=\"pre\">python3-dev</span> <span class=\"pre\">python-zmq</span></tt>)</p>\n<p>If installation is still not working you may need to install a C compiler (e.g. <tt>sudo <span class=\"pre\">apt-get</span> install\n<span class=\"pre\">build-essential</span></tt>)</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>The mosaik-zmq adapter can be added to a simulation scenario like any other component.\nFirst you have to add the following code to the <em>sim_config</em>:</p>\n<pre><span class=\"n\">sim_config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n   <span class=\"s1\">'ZMQ'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"s1\">'cmd'</span><span class=\"p\">:</span> <span class=\"s1\">'mosaik-zmq </span><span class=\"si\">%(addr)s</span><span class=\"s1\">'</span><span class=\"p\">,</span>\n   <span class=\"p\">},</span>\n<span class=\"p\">}</span>\n</pre>\n<div id=\"initialization\">\n<h4>Initialization</h4>\n<p>When you start <em>mosaik-zmq</em>, you have to provide a <em>step_size</em> and a <em>duration</em>\nargument. The <em>step_size</em> defines how often data will be sent. The\n<em>duration</em> is the simulation end time in seconds.</p>\n<p>Example:</p>\n<pre><span class=\"n\">zmqModel</span> <span class=\"o\">=</span> <span class=\"n\">world</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'ZMQ'</span><span class=\"p\">,</span> <span class=\"n\">step_size</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"o\">*</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"model-instantiation\">\n<h4>Model instantiation</h4>\n<p>Every instance of <em>mosaik-zmq</em> allows you to create instances of its\n<em>Socket</em> model. The <em>Socket</em> has the following parameters:</p>\n<ul>\n<li><em>host</em> (default: \u2018<a>tcp://*</a>:\u2019) is the address of the host the data will be sent to.</li>\n<li><em>port</em> (default: 5558) is the port on which the host will receive data.</li>\n<li><em>socket_type</em> (default: \u2018PUB\u2019) is the type of the ZeroMQ socket to open for connection between the adapter and the host. Two different patterns can be used. The default is \u2018PUB\u2019, which stands for the <a href=\"http://zguide.zeromq.org/py:all#Getting-the-Message-Out\" rel=\"nofollow\">publish subscribe pattern</a> . Alternatively the <a href=\"http://zguide.zeromq.org/py:all#Divide-and-Conquer\" rel=\"nofollow\">push pull pattern</a> (\u2018PUSH\u2019) can be used.</li>\n</ul>\n<p>Example code:</p>\n<pre><span class=\"n\">zmq</span> <span class=\"o\">=</span> <span class=\"n\">zmqModel</span><span class=\"o\">.</span><span class=\"n\">Socket</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'tcp://*:'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5558</span><span class=\"p\">,</span> <span class=\"n\">socket_type</span><span class=\"o\">=</span><span class=\"s1\">'PUB'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"connection\">\n<h4>Connection</h4>\n<p>To get data sent to the host the zmq model has to be connected to an other model in the scenario definition.\nBased on the <a href=\"https://bitbucket.org/mosaik/mosaik-demo\" rel=\"nofollow\">mosaik-demo</a> the scenario could look like this:</p>\n<pre><span class=\"n\">pvsim</span> <span class=\"o\">=</span> <span class=\"n\">world</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'CSV'</span><span class=\"p\">,</span> <span class=\"n\">sim_start</span><span class=\"o\">=</span><span class=\"n\">START</span><span class=\"p\">,</span> <span class=\"n\">datafile</span><span class=\"o\">=</span><span class=\"n\">PV_DATA</span><span class=\"p\">)</span>\n<span class=\"n\">pvs</span> <span class=\"o\">=</span> <span class=\"n\">pvsim</span><span class=\"o\">.</span><span class=\"n\">PV</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">)</span>\n\n<span class=\"n\">zmqModel</span> <span class=\"o\">=</span> <span class=\"n\">world</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">(</span><span class=\"s1\">'ZMQ'</span><span class=\"p\">,</span> <span class=\"n\">step_size</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">duration</span><span class=\"o\">=</span><span class=\"mi\">15</span><span class=\"o\">*</span><span class=\"mi\">60</span><span class=\"o\">*</span><span class=\"mi\">24</span><span class=\"o\">*</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"n\">zmq</span> <span class=\"o\">=</span> <span class=\"n\">zmqModel</span><span class=\"o\">.</span><span class=\"n\">Socket</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'tcp://*:'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">5558</span><span class=\"p\">,</span> <span class=\"n\">socket_type</span><span class=\"o\">=</span><span class=\"s1\">'PUB'</span><span class=\"p\">)</span>\n\n<span class=\"n\">connect_many_to_one</span><span class=\"p\">(</span><span class=\"n\">world</span><span class=\"p\">,</span> <span class=\"n\">pvs</span><span class=\"p\">,</span> <span class=\"n\">zmq</span><span class=\"p\">,</span> <span class=\"s1\">'P'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"getting-help\">\n<h3>Getting help</h3>\n<p>If you need help, please visit the <a href=\"https://mosaik.offis.de/mailinglist\" rel=\"nofollow\">mosaik-users mailing list</a>.</p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id9\">\n<h3>0.1.1 \u2013 2016-01-20</h3>\n<ul>\n<li>Updated documentation</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.1 \u2013 2015-12-16</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<p>The mosaik ZeroMQ connector was created by Jan S\u00f6ren Schwarz.</p>\n</div>\n\n          </div>"}, "last_serial": 1952710, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "fe678fca562b7ab54bdaba5435dcc498", "sha256": "4967f526fa456e0f78b3292594b66525b47911397c2a229fab773b75520f0640"}, "downloads": -1, "filename": "mosaik_zmq-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fe678fca562b7ab54bdaba5435dcc498", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6505, "upload_time": "2016-02-12T10:06:04", "upload_time_iso_8601": "2016-02-12T10:06:04.254373Z", "url": "https://files.pythonhosted.org/packages/04/45/36a5284076f4380f861994e87351b28de9597589a9ebf85e2634a7a2d125/mosaik_zmq-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb158045f5a439307e676978ed507459", "sha256": "55d07d40ac536fc46624b94e40f129deef160e483e6e2c58047ca63ff0515ef2"}, "downloads": -1, "filename": "mosaik-zmq-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cb158045f5a439307e676978ed507459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12734, "upload_time": "2016-02-12T10:05:45", "upload_time_iso_8601": "2016-02-12T10:05:45.548753Z", "url": "https://files.pythonhosted.org/packages/04/62/803b81a08d2fffc2c1d5bd17e3ebc1cc08d154446257d2091dbf4a5bb5ac/mosaik-zmq-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fe678fca562b7ab54bdaba5435dcc498", "sha256": "4967f526fa456e0f78b3292594b66525b47911397c2a229fab773b75520f0640"}, "downloads": -1, "filename": "mosaik_zmq-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fe678fca562b7ab54bdaba5435dcc498", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6505, "upload_time": "2016-02-12T10:06:04", "upload_time_iso_8601": "2016-02-12T10:06:04.254373Z", "url": "https://files.pythonhosted.org/packages/04/45/36a5284076f4380f861994e87351b28de9597589a9ebf85e2634a7a2d125/mosaik_zmq-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cb158045f5a439307e676978ed507459", "sha256": "55d07d40ac536fc46624b94e40f129deef160e483e6e2c58047ca63ff0515ef2"}, "downloads": -1, "filename": "mosaik-zmq-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cb158045f5a439307e676978ed507459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12734, "upload_time": "2016-02-12T10:05:45", "upload_time_iso_8601": "2016-02-12T10:05:45.548753Z", "url": "https://files.pythonhosted.org/packages/04/62/803b81a08d2fffc2c1d5bd17e3ebc1cc08d154446257d2091dbf4a5bb5ac/mosaik-zmq-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:41 2020"}