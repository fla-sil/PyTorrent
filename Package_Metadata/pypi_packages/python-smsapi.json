{"info": {"author": "ELCODO", "author_email": "info@elcodo.pl", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=============\npython-smsapi\n=============\n\nPython client library for SMSAPI.pl.\n\nCurrently allows:\n\n* SMS sending\n* User sender (caller ID) manipulation (add, delete, check)\n* User subaccounts management\n* Address Book manipulation - adding, listing and deleting numbers and groups (suds library needed for SOAP API)\n\nAuthor\n------\n\n* Grzegorz Bia\u0142y (https://github.com/grzegorzbialy/)\n* ELCODO (http://elcodo.pl)\n\nInstall\n-------\nYou can do one of the following:\n\n* python setup.py install\n* copy smsapi.py to anywhere to your PYTHONPATH (e.g. your project directory)\n\nRequirements\n------------\n\n* Python 2.6+\n* (optional) suds library for SOAP API - AddressBook, etc.\n\nUsage\n-----\n\n*Init and get points (credits) quantity*::\n\n    from smsapi import SmsApi\n\n    username = \"<USERNAME>\"\n    password = \"<PASSWORD>\"\n\n    sms = SmsApi(username, password)\n\n    total_points = sms.get_points()['points']\n    print \"You have %s points left\" % total_points\n\n\n*SMS sending*::\n\n    # Send SMS message to +48123456789 - fill sender field \"SENDER\" and message with \"MESSAGE\"\n    sms = sms.send_sms(\n        recipient=\"48123456789\",\n        sender_name=\"SENDER\",\n        message=\"MESSAGE\",\n        eco=False,\n    )\n\n    # print sms\n    # expected result:\n    # {'cost': '0.1650', 'id': <X>, 'status': \"OK\"}\n\n*Address Book*::\n\n    # add group called \"Test Group\"\n    group_id = ab.add_group(u\"Test Group\")\n\n    # add test number\n    number = ab.add_number(u\"48123456789\", u\"Test Number\", group_id)\n\n    # get all groups and assign numbers to it\n    groups_and_numbers = {}\n    groups = ab.get_groups()\n    for g in groups:\n        groups_and_numbers[g['name']] = ab.get_numbers(g['id'])\n\n    # print groups_and_numbers\n    # expected result:\n    # {u'Test Group': [{'group_id': <X>, 'name': Test Number, 'number': 48123456789}]}\n\n\nLicense\n-------\nOSI - The BSD License (http://www.opensource.org/licenses/bsd-license.php)\n\nCopyright (c) 2012, Grzegorz Bialy, ELCODO.pl\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.\n* Neither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS \"AS IS\" AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/elcodo/python-smsapi", "keywords": "api,smsapi.pl,sms", "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "python-smsapi", "package_url": "https://pypi.org/project/python-smsapi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/python-smsapi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/elcodo/python-smsapi"}, "release_url": "https://pypi.org/project/python-smsapi/0.2/", "requires_dist": null, "requires_python": null, "summary": "Client library for SMSAPI.pl API.", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Python client library for SMSAPI.pl.</p>\n<p>Currently allows:</p>\n<ul>\n<li>SMS sending</li>\n<li>User sender (caller ID) manipulation (add, delete, check)</li>\n<li>User subaccounts management</li>\n<li>Address Book manipulation - adding, listing and deleting numbers and groups (suds library needed for SOAP API)</li>\n</ul>\n<div id=\"author\">\n<h2>Author</h2>\n<ul>\n<li>Grzegorz Bia\u0142y (<a href=\"https://github.com/grzegorzbialy/\" rel=\"nofollow\">https://github.com/grzegorzbialy/</a>)</li>\n<li>ELCODO (<a href=\"http://elcodo.pl\" rel=\"nofollow\">http://elcodo.pl</a>)</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>You can do one of the following:</p>\n<ul>\n<li>python setup.py install</li>\n<li>copy smsapi.py to anywhere to your PYTHONPATH (e.g. your project directory)</li>\n</ul>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.6+</li>\n<li>(optional) suds library for SOAP API - AddressBook, etc.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p><em>Init and get points (credits) quantity</em>:</p>\n<pre>from smsapi import SmsApi\n\nusername = \"&lt;USERNAME&gt;\"\npassword = \"&lt;PASSWORD&gt;\"\n\nsms = SmsApi(username, password)\n\ntotal_points = sms.get_points()['points']\nprint \"You have %s points left\" % total_points\n</pre>\n<p><em>SMS sending</em>:</p>\n<pre># Send SMS message to +48123456789 - fill sender field \"SENDER\" and message with \"MESSAGE\"\nsms = sms.send_sms(\n    recipient=\"48123456789\",\n    sender_name=\"SENDER\",\n    message=\"MESSAGE\",\n    eco=False,\n)\n\n# print sms\n# expected result:\n# {'cost': '0.1650', 'id': &lt;X&gt;, 'status': \"OK\"}\n</pre>\n<p><em>Address Book</em>:</p>\n<pre># add group called \"Test Group\"\ngroup_id = ab.add_group(u\"Test Group\")\n\n# add test number\nnumber = ab.add_number(u\"48123456789\", u\"Test Number\", group_id)\n\n# get all groups and assign numbers to it\ngroups_and_numbers = {}\ngroups = ab.get_groups()\nfor g in groups:\n    groups_and_numbers[g['name']] = ab.get_numbers(g['id'])\n\n# print groups_and_numbers\n# expected result:\n# {u'Test Group': [{'group_id': &lt;X&gt;, 'name': Test Number, 'number': 48123456789}]}\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>OSI - The BSD License (<a href=\"http://www.opensource.org/licenses/bsd-license.php\" rel=\"nofollow\">http://www.opensource.org/licenses/bsd-license.php</a>)</p>\n<p>Copyright (c) 2012, Grzegorz Bialy, ELCODO.pl\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<ul>\n<li>Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution.</li>\n<li>Neither the name of the author nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission.</li>\n</ul>\n<p>THIS SOFTWARE IS PROVIDED BY THE AUTHOR AND CONTRIBUTORS \u201cAS IS\u201d AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR CONTRIBUTORS BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 798082, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b09e6270ab34a27c769a07f46ed065ad", "sha256": "7725fa50a7f63929c4ad47cbdd9842dfc59ede76a32313e83e57b9a778055e01"}, "downloads": -1, "filename": "python-smsapi-0.1.tar.gz", "has_sig": false, "md5_digest": "b09e6270ab34a27c769a07f46ed065ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3170, "upload_time": "2011-12-04T19:57:58", "upload_time_iso_8601": "2011-12-04T19:57:58.999507Z", "url": "https://files.pythonhosted.org/packages/1a/06/14b1a5b1618fa554b56b64c31dde97e7da6af4c0765185767e756521b3f8/python-smsapi-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d1f18e94146e89dbb73c95f7226aa7ec", "sha256": "c91024b552ffc446d7c00dc806c10f10de06c8b0d336850c2c1f9a2fbd0d8450"}, "downloads": -1, "filename": "python-smsapi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d1f18e94146e89dbb73c95f7226aa7ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4216, "upload_time": "2011-12-05T22:58:48", "upload_time_iso_8601": "2011-12-05T22:58:48.529985Z", "url": "https://files.pythonhosted.org/packages/83/f7/5fcd48227ce81f71a0d41b54bedccab1e5d52027ef05925ea000344a02a9/python-smsapi-0.1.1.tar.gz", "yanked": false}], "0.2": []}, "urls": [], "timestamp": "Fri May  8 03:15:20 2020"}