{"info": {"author": "Joseph Girdwood", "author_email": "j.girdwood@herts.ac.uk", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Unix", "Programming Language :: Python :: 2.7"], "description": "# OPCunix #\nThis software is designed to comminicate with the universal cloud and aerosol sounding system (UCASS) optical particle counter (OPC) designed at the University of Hertfordshire.\n***\n## Hardware ##\nThis software has the ability to handle multiple UCASS units simultaneously, all units must be connected before the software is started. Use a USB-ISS interface to connect a unit to the computer, the interface must be connected to the SPI pins of the UCASS (this usually has a breakout connector attached for this purpose).\n***\n## Installation ##\nInstall this software using pip:\n\n`pip install UH-OPCunix-JGirdwood`\n\nUse your prefered downloader (wget used here) to download the main.py file from github into a directory of your choice:\n\n`wget https://github.com/JGirdwood/OPCunix/raw/master/main.py`\n\nThen run the main file directly, create a shortcut to where the 'main.py' file is located, or create a shell script with the following:\n\n`#!/bin/bash`  \n`python ${PATH_TO_MODULE}/main.py`\n\n### Dependancies ###\nThis module requires the following modules to be installed with pip, in addition to the default python modules:\n\n`pip install pyserial pyusbiss`\n\n***\n## Commands ##\nThe parent process in this software is a terminal program from which several different commands can be launched. Options can be specified with the commands using '-' e.g. '-n', '-p', etc. A full list of commands is displayed here:\n\n* `[OPC-unix] >> list ports`  - Lists all the serial ports available\n* `[OPC-unix] >> list ucass`  - Lists all the initialised UCASS units\n* `[OPC-unix] >> clear`       - Clears the screen\n* `[OPC-unix] >> exit`        - Exits the program\n* `[OPC-unix] >> ucass`       - The master for the commands associated with UCASS interfacing:\n    1. init                   - Initialises a UCASS unit and starts recording histogram data in a subprocess (new window)\n        *   Options:\n            1.  '-n'          - User specified name for the unit, used to keep track\n            2.  '-p'          - Port to start the comminications on (i.e. /dev/tty*)\n            3.  '-r'          - Record to file or not (boolean 1 or 0), this will also print config vars to log\n    2. del                    - Deletes a UCASS unit and shuts down the subprocess\n        *   Options:\n            1.  '-n'          - Specify the name of the unit (set during init) you want to delete\n    3.  conf                  - Read config vars and print in parent process\n        *   Options:\n            1.  '-p'          - Specify the port of the unit you want to read (note this cannot be in use with init)\n\n### Examples ###\n*Example given, to initialise a UCASS unit to print histogram data to a screen:*\n\n`[OPC-unix] >> list ports`\n\nThis will return a list of ports e.g.:\n\n`['/dev/ttyACM0']`\n\nNext, list the config vars so the bin bounderies are known or checked:\n\n`[OPC-unix] >> ucass config -p /dev/ttyACM0`\n\nThis will return the tab delimited configuration variables (and headers) printed to the terminal window. Next, start recording histogram data:\n\n`[OPC-unix] >> ucass init -n unit-E -p /dev/ttyACM0 -r 1`\n\nThis will initialise a UCASS with name 'unit-E' on port '/dev/ttyACM0' and start recording to a file in a directory specified by the 'default_path.txt' file in the module. By default this is ${HOME}/UCASS_LOG/ (the directory will be created automatically if it does not exist). This command will also start a new terminal window, which will be printing out data.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JGirdwood/OPCunix", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "UH-OPCunix-JGirdwood", "package_url": "https://pypi.org/project/UH-OPCunix-JGirdwood/", "platform": "", "project_url": "https://pypi.org/project/UH-OPCunix-JGirdwood/", "project_urls": {"Homepage": "https://github.com/JGirdwood/OPCunix"}, "release_url": "https://pypi.org/project/UH-OPCunix-JGirdwood/0.1.2/", "requires_dist": ["pyserial", "pyusbiss"], "requires_python": "", "summary": "A package to interface a UCASS with a linux computer via USB-ISS", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # OPCunix #<br>This software is designed to comminicate with the universal cloud and aerosol sounding system (UCASS) optical particle counter (OPC) designed at the University of Hertfordshire.<br>***<br>## Hardware ##<br>This software has the ability to handle multiple UCASS units simultaneously, all units must be connected before the software is started. Use a USB-ISS interface to connect a unit to the computer, the interface must be connected to the SPI pins of the UCASS (this usually has a breakout connector attached for this purpose).<br>***<br>## Installation ##<br>Install this software using pip:<br><br>`pip install UH-OPCunix-JGirdwood`<br><br>Use your prefered downloader (wget used here) to download the main.py file from github into a directory of your choice:<br><br>`wget https://github.com/JGirdwood/OPCunix/raw/master/main.py`<br><br>Then run the main file directly, create a shortcut to where the 'main.py' file is located, or create a shell script with the following:<br><br>`#!/bin/bash`  <br>`python ${PATH_TO_MODULE}/main.py`<br><br>### Dependancies ###<br>This module requires the following modules to be installed with pip, in addition to the default python modules:<br><br>`pip install pyserial pyusbiss`<br><br>***<br>## Commands ##<br>The parent process in this software is a terminal program from which several different commands can be launched. Options can be specified with the commands using '-' e.g. '-n', '-p', etc. A full list of commands is displayed here:<br><br>* `[OPC-unix] &gt;&gt; list ports`  - Lists all the serial ports available<br>* `[OPC-unix] &gt;&gt; list ucass`  - Lists all the initialised UCASS units<br>* `[OPC-unix] &gt;&gt; clear`       - Clears the screen<br>* `[OPC-unix] &gt;&gt; exit`        - Exits the program<br>* `[OPC-unix] &gt;&gt; ucass`       - The master for the commands associated with UCASS interfacing:<br>    1. init                   - Initialises a UCASS unit and starts recording histogram data in a subprocess (new window)<br>        *   Options:<br>            1.  '-n'          - User specified name for the unit, used to keep track<br>            2.  '-p'          - Port to start the comminications on (i.e. /dev/tty*)<br>            3.  '-r'          - Record to file or not (boolean 1 or 0), this will also print config vars to log<br>    2. del                    - Deletes a UCASS unit and shuts down the subprocess<br>        *   Options:<br>            1.  '-n'          - Specify the name of the unit (set during init) you want to delete<br>    3.  conf                  - Read config vars and print in parent process<br>        *   Options:<br>            1.  '-p'          - Specify the port of the unit you want to read (note this cannot be in use with init)<br><br>### Examples ###<br>*Example given, to initialise a UCASS unit to print histogram data to a screen:*<br><br>`[OPC-unix] &gt;&gt; list ports`<br><br>This will return a list of ports e.g.:<br><br>`['/dev/ttyACM0']`<br><br>Next, list the config vars so the bin bounderies are known or checked:<br><br>`[OPC-unix] &gt;&gt; ucass config -p /dev/ttyACM0`<br><br>This will return the tab delimited configuration variables (and headers) printed to the terminal window. Next, start recording histogram data:<br><br>`[OPC-unix] &gt;&gt; ucass init -n unit-E -p /dev/ttyACM0 -r 1`<br><br>This will initialise a UCASS with name 'unit-E' on port '/dev/ttyACM0' and start recording to a file in a directory specified by the 'default_path.txt' file in the module. By default this is ${HOME}/UCASS_LOG/ (the directory will be created automatically if it does not exist). This command will also start a new terminal window, which will be printing out data.<br><br><br><br><br><br><br><br><br><br><br><br><br><br><br><br>\n          </div>"}, "last_serial": 4972189, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cec5076342a2d5007d2ee085ad10c378", "sha256": "5d5f98ef0dbf27ddde90e098515f1679d2adb5735016cea34c0b5cbccc6c1446"}, "downloads": -1, "filename": "UH_OPCunix_JGirdwood-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "cec5076342a2d5007d2ee085ad10c378", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 10880, "upload_time": "2019-02-22T11:26:26", "upload_time_iso_8601": "2019-02-22T11:26:26.278158Z", "url": "https://files.pythonhosted.org/packages/1b/fd/df25ce2f44b4085c89ddefd15225362059aef471fefdb5ff058cc456f0ac/UH_OPCunix_JGirdwood-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c5962c27ac335b264a439f932bebfce", "sha256": "2e8da42933f992691642f4c04959b165c92347840d8bbb55345b6c12b1e9fb61"}, "downloads": -1, "filename": "UH-OPCunix-JGirdwood-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c5962c27ac335b264a439f932bebfce", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9075, "upload_time": "2019-02-22T11:26:28", "upload_time_iso_8601": "2019-02-22T11:26:28.471449Z", "url": "https://files.pythonhosted.org/packages/32/95/905e21e857105f94123850ff8149b67b0f5f2ebe3d18f3b41c45a27cc8d1/UH-OPCunix-JGirdwood-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "39ec6bf47bc41edcdd76649552303627", "sha256": "a5380c8f1d0b93c92493ceffd74cedd685aba2a448ed0f91cd666940b9ccd3b9"}, "downloads": -1, "filename": "UH-OPCunix-JGirdwood-0.1.1.tar.gz", "has_sig": false, "md5_digest": "39ec6bf47bc41edcdd76649552303627", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9075, "upload_time": "2019-02-22T11:43:56", "upload_time_iso_8601": "2019-02-22T11:43:56.687130Z", "url": "https://files.pythonhosted.org/packages/cd/7d/3233f6d75f50aa4a04b3cf41a9adcf5cc9f02d9a213e05681ad7de662e1f/UH-OPCunix-JGirdwood-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5656aa769f929f3fd7d96a164ef704c9", "sha256": "3624eb12545512d31ed7ff19dc12562a6ac62b45da468645c53a60fe39b19c38"}, "downloads": -1, "filename": "UH_OPCunix_JGirdwood-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "5656aa769f929f3fd7d96a164ef704c9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11824, "upload_time": "2019-03-22T09:53:22", "upload_time_iso_8601": "2019-03-22T09:53:22.729208Z", "url": "https://files.pythonhosted.org/packages/f6/66/0b1ced7c723ab78d40cf31d469b3d32504b134770a4bedcf58827d580d56/UH_OPCunix_JGirdwood-0.1.2-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5656aa769f929f3fd7d96a164ef704c9", "sha256": "3624eb12545512d31ed7ff19dc12562a6ac62b45da468645c53a60fe39b19c38"}, "downloads": -1, "filename": "UH_OPCunix_JGirdwood-0.1.2-py2-none-any.whl", "has_sig": false, "md5_digest": "5656aa769f929f3fd7d96a164ef704c9", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 11824, "upload_time": "2019-03-22T09:53:22", "upload_time_iso_8601": "2019-03-22T09:53:22.729208Z", "url": "https://files.pythonhosted.org/packages/f6/66/0b1ced7c723ab78d40cf31d469b3d32504b134770a4bedcf58827d580d56/UH_OPCunix_JGirdwood-0.1.2-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:41:29 2020"}