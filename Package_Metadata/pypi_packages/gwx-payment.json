{"info": {"author": "Jerric Calosor", "author_email": "jerric.calosor@groworx.com.au", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## GWX Payment\nPayment gateway integration bridge for python, specifically flask based applications.\n\n### Dependencies\n- Python 3.7^\n- PyYAML\n- stripe\n- Werkzeug 0.16^\n\n### Installation\n1. Install the package using pip, by executing:\n```python\npip install -U gwx-payment\n```\n\n2. Create the `<your_config_name>.yaml` file, this MUST follow the following convention:\n\n```yaml\n\n\n \n# This indicates the current `Active` payment service \nprovider: stripe\n\n\nstripe:\n  api_url: <api_url>\n  public_key: <public_key>\n  api_key: <api_key>\n  success_url: <success_url>\n  cancel_url: <cancel_url>\n\npaypal:\n  api_url: <api_url>\n  public_key: <public_key>\n  api_key: <api_key>\n  success_url: <success_url>\n  cancel_url: <cancel_url>\n```\n\n\n### Quickstart\nFirst import the Provider Service class\n\n```python\nfrom gwx_payment.provider_service import ProviderService\n``` \n\nThen instantiate the ProviderService class along with it's config dependencies:\n\n```python\npayment_variable = ProviderService('/path/to/config/dir', 'your_config_name.yaml').get_payment_service()\n```\n\nThe provider service accepts a `.yaml` file type as it's config file.\nViola! you can now use it for your payment transactions.\n\n### Usage\nThe following are the methods available within the AbstractPaymentService and their functionality.\n\n\n| Method Name                            | Functionality                                                              \n| -------------------------------------- | ---------------------------------------------------------------------\n|                                        |\n| **create_payment**                     | Checkout method, this will initiate the payment transaction.\n|                                        | :param kwargs: the parameters for the payment creation.\n|                                        | :return: structured value required for response composition.\n|                                        |\n| **get_payment**                        | Retrieve a specific payment record\n|                                        | :param payment_id: the primary id used to reference against an endpoint.\n|                                        | :return: the retrieved record, null if none found.\n|                                        |\n| **confirm_payment**                    | Confirm the payment, this states that the payment has been accepted,\n|                                        | and sent to the vendor.\n|                                        | :param kwargs: named payload parameters\n|                                        | :return: structured value required for response composition.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/groworxdigitalengineering/gwx-payment/src/master", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gwx-payment", "package_url": "https://pypi.org/project/gwx-payment/", "platform": "", "project_url": "https://pypi.org/project/gwx-payment/", "project_urls": {"Homepage": "https://bitbucket.org/groworxdigitalengineering/gwx-payment/src/master"}, "release_url": "https://pypi.org/project/gwx-payment/0.0.3/", "requires_dist": null, "requires_python": ">=3.7", "summary": "Payment gateway integration bridge for python, specifically flask based applications.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>GWX Payment</h2>\n<p>Payment gateway integration bridge for python, specifically flask based applications.</p>\n<h3>Dependencies</h3>\n<ul>\n<li>Python 3.7^</li>\n<li>PyYAML</li>\n<li>stripe</li>\n<li>Werkzeug 0.16^</li>\n</ul>\n<h3>Installation</h3>\n<ol>\n<li>Install the package using pip, by executing:</li>\n</ol>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"o\">-</span><span class=\"n\">U</span> <span class=\"n\">gwx</span><span class=\"o\">-</span><span class=\"n\">payment</span>\n</pre>\n<ol>\n<li>Create the <code>&lt;your_config_name&gt;.yaml</code> file, this MUST follow the following convention:</li>\n</ol>\n<pre> \n<span class=\"c1\"># This indicates the current `Active` payment service </span>\n<span class=\"nt\">provider</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">stripe</span>\n\n\n<span class=\"nt\">stripe</span><span class=\"p\">:</span>\n  <span class=\"nt\">api_url</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;api_url&gt;</span>\n  <span class=\"nt\">public_key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;public_key&gt;</span>\n  <span class=\"nt\">api_key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;api_key&gt;</span>\n  <span class=\"nt\">success_url</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;success_url&gt;</span>\n  <span class=\"nt\">cancel_url</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;cancel_url&gt;</span>\n\n<span class=\"nt\">paypal</span><span class=\"p\">:</span>\n  <span class=\"nt\">api_url</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;api_url&gt;</span>\n  <span class=\"nt\">public_key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;public_key&gt;</span>\n  <span class=\"nt\">api_key</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;api_key&gt;</span>\n  <span class=\"nt\">success_url</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;success_url&gt;</span>\n  <span class=\"nt\">cancel_url</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">&lt;cancel_url&gt;</span>\n</pre>\n<h3>Quickstart</h3>\n<p>First import the Provider Service class</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gwx_payment.provider_service</span> <span class=\"kn\">import</span> <span class=\"n\">ProviderService</span>\n</pre>\n<p>Then instantiate the ProviderService class along with it's config dependencies:</p>\n<pre><span class=\"n\">payment_variable</span> <span class=\"o\">=</span> <span class=\"n\">ProviderService</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/config/dir'</span><span class=\"p\">,</span> <span class=\"s1\">'your_config_name.yaml'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get_payment_service</span><span class=\"p\">()</span>\n</pre>\n<p>The provider service accepts a <code>.yaml</code> file type as it's config file.\nViola! you can now use it for your payment transactions.</p>\n<h3>Usage</h3>\n<p>The following are the methods available within the AbstractPaymentService and their functionality.</p>\n<table>\n<thead>\n<tr>\n<th>Method Name</th>\n<th>Functionality</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>create_payment</strong></td>\n<td>Checkout method, this will initiate the payment transaction.</td>\n</tr>\n<tr>\n<td></td>\n<td>:param kwargs: the parameters for the payment creation.</td>\n</tr>\n<tr>\n<td></td>\n<td>:return: structured value required for response composition.</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>get_payment</strong></td>\n<td>Retrieve a specific payment record</td>\n</tr>\n<tr>\n<td></td>\n<td>:param payment_id: the primary id used to reference against an endpoint.</td>\n</tr>\n<tr>\n<td></td>\n<td>:return: the retrieved record, null if none found.</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td><strong>confirm_payment</strong></td>\n<td>Confirm the payment, this states that the payment has been accepted,</td>\n</tr>\n<tr>\n<td></td>\n<td>and sent to the vendor.</td>\n</tr>\n<tr>\n<td></td>\n<td>:param kwargs: named payload parameters</td>\n</tr>\n<tr>\n<td></td>\n<td>:return: structured value required for response composition.</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 7134933, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "884845f4ad4b95196f4a7eaaa11f71f4", "sha256": "45e87a547581a2c574336a4fb163024327d5b50b5903773c6377ab7b36f2c1e3"}, "downloads": -1, "filename": "gwx_payment-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "884845f4ad4b95196f4a7eaaa11f71f4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 9382, "upload_time": "2020-03-12T13:35:47", "upload_time_iso_8601": "2020-03-12T13:35:47.107590Z", "url": "https://files.pythonhosted.org/packages/46/dd/3dd9e3346aac6c3dccb3523013e6d4e12eac23e9fd5e2826ac8669a957c2/gwx_payment-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c3c9a1b5ff6066473dde487162bd48c", "sha256": "9e12ceb7e31562e4b87d9adcb65df037e1174cef31a789c9ba3f534f7734697a"}, "downloads": -1, "filename": "gwx-payment-0.0.1.tar.gz", "has_sig": false, "md5_digest": "5c3c9a1b5ff6066473dde487162bd48c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 6900, "upload_time": "2020-03-12T13:35:49", "upload_time_iso_8601": "2020-03-12T13:35:49.971165Z", "url": "https://files.pythonhosted.org/packages/6d/52/103b0df0ebe2a074bc4fa38cb5d09359b6a678c0d4b7b94c67beead1d5b3/gwx-payment-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "f8f5467454b112acf805b28eb7e62b5b", "sha256": "b4f64dd14da1dbce62f3137b8aed922060fd498450fc9a09fddea042fce62b27"}, "downloads": -1, "filename": "gwx-payment-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f8f5467454b112acf805b28eb7e62b5b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 7118, "upload_time": "2020-04-28T08:07:25", "upload_time_iso_8601": "2020-04-28T08:07:25.555314Z", "url": "https://files.pythonhosted.org/packages/c6/ca/861666aa74671549a0dd44f6b1b875ab1558876b5433e56f36b096d54e15/gwx-payment-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "544bfe420a83ed57d73406ede3c11610", "sha256": "0bc3a5c6ebfb2978d1fdc2d8ea2781539cd81ed5bc53f1f4dbf32616472aa277"}, "downloads": -1, "filename": "gwx-payment-0.0.3.tar.gz", "has_sig": false, "md5_digest": "544bfe420a83ed57d73406ede3c11610", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5765, "upload_time": "2020-04-30T04:55:52", "upload_time_iso_8601": "2020-04-30T04:55:52.558526Z", "url": "https://files.pythonhosted.org/packages/37/52/2bb9b3da415ad8e1accc9b1e74b7e7405072481465a2a4a2f7e401393eff/gwx-payment-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "544bfe420a83ed57d73406ede3c11610", "sha256": "0bc3a5c6ebfb2978d1fdc2d8ea2781539cd81ed5bc53f1f4dbf32616472aa277"}, "downloads": -1, "filename": "gwx-payment-0.0.3.tar.gz", "has_sig": false, "md5_digest": "544bfe420a83ed57d73406ede3c11610", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 5765, "upload_time": "2020-04-30T04:55:52", "upload_time_iso_8601": "2020-04-30T04:55:52.558526Z", "url": "https://files.pythonhosted.org/packages/37/52/2bb9b3da415ad8e1accc9b1e74b7e7405072481465a2a4a2f7e401393eff/gwx-payment-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:04 2020"}