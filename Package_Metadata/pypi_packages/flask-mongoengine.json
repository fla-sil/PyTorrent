{"info": {"author": "Ross Lawley", "author_email": "ross.lawley@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-MongoEngine\n=================\n\nA Flask extension that provides integration with `MongoEngine <http://mongoengine.org/>`_.\nFor more information on MongoEngine please check out the `MongoEngine Documentation <http://docs.mongoengine.org/>`_.\n\nIt handles connection management for your app.\nYou can also use `WTForms <http://wtforms.simplecodes.com/>`_ as model forms for your models.\n\nInstalling Flask-MongoEngine\n============================\n\nInstall with **pip**::\n\n    pip install flask-mongoengine\n\nConfiguration\n=============\n\nBasic setup is easy, just fetch the extension::\n\n    from flask import Flask\n    from flask_mongoengine import MongoEngine\n\n    app = Flask(__name__)\n    app.config.from_pyfile('the-config.cfg')\n    db = MongoEngine(app)\n\nOr, if you are setting up your database before your app is initialized, as is the case with application factories::\n\n    from flask import Flask\n    from flask_mongoengine import MongoEngine\n    db = MongoEngine()\n    ...\n    app = Flask(__name__)\n    app.config.from_pyfile('the-config.cfg')\n    db.init_app(app)\n\n\nBy default, Flask-MongoEngine assumes that the :program:`mongod` instance is running\non **localhost** on port **27017**, and you wish to connect to the database named **test**.\n\nIf MongoDB is running elsewhere, you should provide the :attr:`host` and :attr:`port` settings\nin  the `'MONGODB_SETTINGS'` dictionary wih `app.config`.::\n\n    app.config['MONGODB_SETTINGS'] = {\n        'db': 'project1',\n        'host': '192.168.1.35',\n        'port': 12345\n    }\n\nIf the database requires authentication, the :attr:`username` and :attr:`password`\narguments should be provided `'MONGODB_SETTINGS'` dictionary wih `app.config`.::\n\n    app.config['MONGODB_SETTINGS'] = {\n        'db': 'project1',\n        'username':'webapp',\n        'password':'pwd123'\n    }\n\nUri style connections are also supported, just supply the uri as the :attr:`host`\nin the `'MONGODB_SETTINGS'` dictionary with `app.config`. **Note that database name from uri has priority over name.** ::\n\n    app.config['MONGODB_SETTINGS'] = {\n        'db': 'project1',\n        'host': 'mongodb://localhost/database_name'\n    }\n\nConnection settings may also be provided individually by prefixing the setting with `'MONGODB_'` in the `app.config`.::\n\n    app.config['MONGODB_DB'] = 'project1'\n    app.config['MONGODB_HOST'] = '192.168.1.35'\n    app.config['MONGODB_PORT'] = 12345\n    app.config['MONGODB_USERNAME'] = 'webapp'\n    app.config['MONGODB_PASSWORD'] = 'pwd123'\n\nBy default flask-mongoengine open the connection when extension is instanciated but you can configure it\nto open connection only on first database access by setting the ``MONGODB_SETTINGS['connect']`` parameter\nor its ``MONGODB_CONNECT`` flat equivalent to ``False``::\n\n    app.config['MONGODB_SETTINGS'] = {\n        'host': 'mongodb://localhost/database_name',\n        'connect': False,\n    }\n    # or\n    app.config['MONGODB_CONNECT'] = False\n\nCustom Queryset\n===============\n\nflask-mongoengine attaches the following methods to Mongoengine's default QuerySet:\n\n* **get_or_404**: works like .get(), but calls abort(404) if the object DoesNotExist.\n* **first_or_404**: same as above, except for .first().\n* **paginate**: paginates the QuerySet. Takes two arguments, *page* and *per_page*.\n* **paginate_field**: paginates a field from one document in the QuerySet.\n  Arguments: *field_name*, *doc_id*, *page*, *per_page*.\n\nExamples::\n\n    # 404 if object doesn't exist\n    def view_todo(todo_id):\n        todo = Todo.objects.get_or_404(_id=todo_id)\n    ..\n\n    # Paginate through todo\n    def view_todos(page=1):\n        paginated_todos = Todo.objects.paginate(page=page, per_page=10)\n\n    # Paginate through tags of todo\n    def view_todo_tags(todo_id, page=1):\n        todo = Todo.objects.get_or_404(_id=todo_id)\n        paginated_tags = todo.paginate_field('tags', page, per_page=10)\n\nProperties of the pagination object include: iter_pages, next, prev, has_next,\nhas_prev, next_num, prev_num.\n\nIn the template::\n\n    {# Display a page of todos #}\n    <ul>\n        {% for todo in paginated_todos.items %}\n            <li>{{ todo.title }}</li>\n        {% endfor %}\n    </ul>\n\n    {# Macro for creating navigation links #}\n    {% macro render_navigation(pagination, endpoint) %}\n      <div class=pagination>\n      {% for page in pagination.iter_pages() %}\n        {% if page %}\n          {% if page != pagination.page %}\n            <a href=\"{{ url_for(endpoint, page=page) }}\">{{ page }}</a>\n          {% else %}\n            <strong>{{ page }}</strong>\n          {% endif %}\n        {% else %}\n          <span class=ellipsis>\u2026</span>\n        {% endif %}\n      {% endfor %}\n      </div>\n    {% endmacro %}\n\n    {{ render_navigation(paginated_todos, 'view_todos') }}\n\n\nMongoEngine and WTForms\n=======================\n\nflask-mongoengine automatically generates WTForms from MongoEngine models::\n\n    from flask_mongoengine.wtf import model_form\n\n    class User(db.Document):\n        email = db.StringField(required=True)\n        first_name = db.StringField(max_length=50)\n        last_name = db.StringField(max_length=50)\n\n    class Content(db.EmbeddedDocument):\n        text = db.StringField()\n        lang = db.StringField(max_length=3)\n\n    class Post(db.Document):\n        title = db.StringField(max_length=120, required=True, validators=[validators.InputRequired(message=u'Missing title.'),])\n        author = db.ReferenceField(User)\n        tags = db.ListField(db.StringField(max_length=30))\n        content = db.EmbeddedDocumentField(Content)\n\n    PostForm = model_form(Post)\n\n    def add_post(request):\n        form = PostForm(request.POST)\n        if request.method == 'POST' and form.validate():\n            # do something\n            redirect('done')\n        return render_template('add_post.html', form=form)\n\nFor each MongoEngine field, the most appropriate WTForm field is used.\nParameters allow the user to provide hints if the conversion is not implicit::\n\n    PostForm = model_form(Post, field_args={'title': {'textarea': True}})\n\nSupported parameters:\n\nFor fields with `choices`:\n\n- `multiple` to use a SelectMultipleField\n- `radio` to use a RadioField\n\nFor `StringField`:\n\n- `password` to use a PasswordField\n- `textarea` to use a TextAreaField\n\n(By default, a StringField is converted into a TextAreaField if and only if it has no max_length.)\n\n\nSupported fields\n----------------\n\n* StringField\n* BinaryField\n* URLField\n* EmailField\n* IntField\n* FloatField\n* DecimalField\n* BooleanField\n* DateTimeField\n* **ListField** (using wtforms.fields.FieldList )\n* SortedListField (duplicate ListField)\n* **EmbeddedDocumentField** (using wtforms.fields.FormField and generating inline Form)\n* **ReferenceField** (using wtforms.fields.SelectFieldBase with options loaded from QuerySet or Document)\n* DictField\n\nNot currently supported field types:\n------------------------------------\n\n* ObjectIdField\n* GeoLocationField\n* GenericReferenceField\n\nSession Interface\n=================\n\nTo use MongoEngine as your session store simple configure the session interface::\n\n    from flask_mongoengine import MongoEngine, MongoEngineSessionInterface\n\n    app = Flask(__name__)\n    db = MongoEngine(app)\n    app.session_interface = MongoEngineSessionInterface(db)\n\n\nDebug Toolbar Panel\n===================\n\n.. image:: _static/debugtoolbar.png\n  :target: #debug-toolbar-panel\n\nIf you use the Flask-DebugToolbar you can add\n`'flask_mongoengine.panels.MongoDebugPanel'` to the `DEBUG_TB_PANELS` config\nlist and then it will automatically track your queries::\n\n    from flask import Flask\n    from flask_debugtoolbar import DebugToolbarExtension\n\n    app = Flask(__name__)\n    app.config['DEBUG_TB_PANELS'] = ['flask_mongoengine.panels.MongoDebugPanel']\n    db = MongoEngine(app)\n    toolbar = DebugToolbarExtension(app)\n\n\n\nUpgrading\n=========\n\n0.6 to 0.7\n----------\n\n`ListFieldPagination` order of arguments have been changed to be more logical::\n\n    # Old order\n    ListFieldPagination(self, queryset, field_name, doc_id, page, per_page, total)\n\n    # New order\n    ListFieldPagination(self, queryset, doc_id, field_name, page, per_page, total)\n\n\nCredits\n=======\n\nInspired by two repos:\n\n`danjac <https://bitbucket.org/danjac/flask-mongoengine>`_\n`maratfm <https://bitbucket.org/maratfm/wtforms>`_\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mongoengine/flask-mongoengine", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "flask-mongoengine", "package_url": "https://pypi.org/project/flask-mongoengine/", "platform": "any", "project_url": "https://pypi.org/project/flask-mongoengine/", "project_urls": {"Homepage": "https://github.com/mongoengine/flask-mongoengine"}, "release_url": "https://pypi.org/project/flask-mongoengine/0.9.5/", "requires_dist": ["Flask (>=0.8)", "Flask-WTF (>=0.13)", "mongoengine (>=0.8.0)", "six"], "requires_python": "", "summary": "Flask-MongoEngine is a Flask extension that provides integration with MongoEngine and WTF model forms.", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            Flask-MongoEngine<br>=================<br><br>A Flask extension that provides integration with `MongoEngine &lt;http://mongoengine.org/&gt;`_.<br>For more information on MongoEngine please check out the `MongoEngine Documentation &lt;http://docs.mongoengine.org/&gt;`_.<br><br>It handles connection management for your app.<br>You can also use `WTForms &lt;http://wtforms.simplecodes.com/&gt;`_ as model forms for your models.<br><br>Installing Flask-MongoEngine<br>============================<br><br>Install with **pip**::<br><br>    pip install flask-mongoengine<br><br>Configuration<br>=============<br><br>Basic setup is easy, just fetch the extension::<br><br>    from flask import Flask<br>    from flask_mongoengine import MongoEngine<br><br>    app = Flask(__name__)<br>    app.config.from_pyfile('the-config.cfg')<br>    db = MongoEngine(app)<br><br>Or, if you are setting up your database before your app is initialized, as is the case with application factories::<br><br>    from flask import Flask<br>    from flask_mongoengine import MongoEngine<br>    db = MongoEngine()<br>    ...<br>    app = Flask(__name__)<br>    app.config.from_pyfile('the-config.cfg')<br>    db.init_app(app)<br><br><br>By default, Flask-MongoEngine assumes that the :program:`mongod` instance is running<br>on **localhost** on port **27017**, and you wish to connect to the database named **test**.<br><br>If MongoDB is running elsewhere, you should provide the :attr:`host` and :attr:`port` settings<br>in  the `'MONGODB_SETTINGS'` dictionary wih `app.config`.::<br><br>    app.config['MONGODB_SETTINGS'] = {<br>        'db': 'project1',<br>        'host': '192.168.1.35',<br>        'port': 12345<br>    }<br><br>If the database requires authentication, the :attr:`username` and :attr:`password`<br>arguments should be provided `'MONGODB_SETTINGS'` dictionary wih `app.config`.::<br><br>    app.config['MONGODB_SETTINGS'] = {<br>        'db': 'project1',<br>        'username':'webapp',<br>        'password':'pwd123'<br>    }<br><br>Uri style connections are also supported, just supply the uri as the :attr:`host`<br>in the `'MONGODB_SETTINGS'` dictionary with `app.config`. **Note that database name from uri has priority over name.** ::<br><br>    app.config['MONGODB_SETTINGS'] = {<br>        'db': 'project1',<br>        'host': 'mongodb://localhost/database_name'<br>    }<br><br>Connection settings may also be provided individually by prefixing the setting with `'MONGODB_'` in the `app.config`.::<br><br>    app.config['MONGODB_DB'] = 'project1'<br>    app.config['MONGODB_HOST'] = '192.168.1.35'<br>    app.config['MONGODB_PORT'] = 12345<br>    app.config['MONGODB_USERNAME'] = 'webapp'<br>    app.config['MONGODB_PASSWORD'] = 'pwd123'<br><br>By default flask-mongoengine open the connection when extension is instanciated but you can configure it<br>to open connection only on first database access by setting the ``MONGODB_SETTINGS['connect']`` parameter<br>or its ``MONGODB_CONNECT`` flat equivalent to ``False``::<br><br>    app.config['MONGODB_SETTINGS'] = {<br>        'host': 'mongodb://localhost/database_name',<br>        'connect': False,<br>    }<br>    # or<br>    app.config['MONGODB_CONNECT'] = False<br><br>Custom Queryset<br>===============<br><br>flask-mongoengine attaches the following methods to Mongoengine's default QuerySet:<br><br>* **get_or_404**: works like .get(), but calls abort(404) if the object DoesNotExist.<br>* **first_or_404**: same as above, except for .first().<br>* **paginate**: paginates the QuerySet. Takes two arguments, *page* and *per_page*.<br>* **paginate_field**: paginates a field from one document in the QuerySet.<br>  Arguments: *field_name*, *doc_id*, *page*, *per_page*.<br><br>Examples::<br><br>    # 404 if object doesn't exist<br>    def view_todo(todo_id):<br>        todo = Todo.objects.get_or_404(_id=todo_id)<br>    ..<br><br>    # Paginate through todo<br>    def view_todos(page=1):<br>        paginated_todos = Todo.objects.paginate(page=page, per_page=10)<br><br>    # Paginate through tags of todo<br>    def view_todo_tags(todo_id, page=1):<br>        todo = Todo.objects.get_or_404(_id=todo_id)<br>        paginated_tags = todo.paginate_field('tags', page, per_page=10)<br><br>Properties of the pagination object include: iter_pages, next, prev, has_next,<br>has_prev, next_num, prev_num.<br><br>In the template::<br><br>    {# Display a page of todos #}<br>    &lt;ul&gt;<br>        {% for todo in paginated_todos.items %}<br>            &lt;li&gt;{{ todo.title }}&lt;/li&gt;<br>        {% endfor %}<br>    &lt;/ul&gt;<br><br>    {# Macro for creating navigation links #}<br>    {% macro render_navigation(pagination, endpoint) %}<br>      &lt;div class=pagination&gt;<br>      {% for page in pagination.iter_pages() %}<br>        {% if page %}<br>          {% if page != pagination.page %}<br>            &lt;a href=\"{{ url_for(endpoint, page=page) }}\"&gt;{{ page }}&lt;/a&gt;<br>          {% else %}<br>            &lt;strong&gt;{{ page }}&lt;/strong&gt;<br>          {% endif %}<br>        {% else %}<br>          &lt;span class=ellipsis&gt;\u2026&lt;/span&gt;<br>        {% endif %}<br>      {% endfor %}<br>      &lt;/div&gt;<br>    {% endmacro %}<br><br>    {{ render_navigation(paginated_todos, 'view_todos') }}<br><br><br>MongoEngine and WTForms<br>=======================<br><br>flask-mongoengine automatically generates WTForms from MongoEngine models::<br><br>    from flask_mongoengine.wtf import model_form<br><br>    class User(db.Document):<br>        email = db.StringField(required=True)<br>        first_name = db.StringField(max_length=50)<br>        last_name = db.StringField(max_length=50)<br><br>    class Content(db.EmbeddedDocument):<br>        text = db.StringField()<br>        lang = db.StringField(max_length=3)<br><br>    class Post(db.Document):<br>        title = db.StringField(max_length=120, required=True, validators=[validators.InputRequired(message=u'Missing title.'),])<br>        author = db.ReferenceField(User)<br>        tags = db.ListField(db.StringField(max_length=30))<br>        content = db.EmbeddedDocumentField(Content)<br><br>    PostForm = model_form(Post)<br><br>    def add_post(request):<br>        form = PostForm(request.POST)<br>        if request.method == 'POST' and form.validate():<br>            # do something<br>            redirect('done')<br>        return render_template('add_post.html', form=form)<br><br>For each MongoEngine field, the most appropriate WTForm field is used.<br>Parameters allow the user to provide hints if the conversion is not implicit::<br><br>    PostForm = model_form(Post, field_args={'title': {'textarea': True}})<br><br>Supported parameters:<br><br>For fields with `choices`:<br><br>- `multiple` to use a SelectMultipleField<br>- `radio` to use a RadioField<br><br>For `StringField`:<br><br>- `password` to use a PasswordField<br>- `textarea` to use a TextAreaField<br><br>(By default, a StringField is converted into a TextAreaField if and only if it has no max_length.)<br><br><br>Supported fields<br>----------------<br><br>* StringField<br>* BinaryField<br>* URLField<br>* EmailField<br>* IntField<br>* FloatField<br>* DecimalField<br>* BooleanField<br>* DateTimeField<br>* **ListField** (using wtforms.fields.FieldList )<br>* SortedListField (duplicate ListField)<br>* **EmbeddedDocumentField** (using wtforms.fields.FormField and generating inline Form)<br>* **ReferenceField** (using wtforms.fields.SelectFieldBase with options loaded from QuerySet or Document)<br>* DictField<br><br>Not currently supported field types:<br>------------------------------------<br><br>* ObjectIdField<br>* GeoLocationField<br>* GenericReferenceField<br><br>Session Interface<br>=================<br><br>To use MongoEngine as your session store simple configure the session interface::<br><br>    from flask_mongoengine import MongoEngine, MongoEngineSessionInterface<br><br>    app = Flask(__name__)<br>    db = MongoEngine(app)<br>    app.session_interface = MongoEngineSessionInterface(db)<br><br><br>Debug Toolbar Panel<br>===================<br><br>.. image:: _static/debugtoolbar.png<br>  :target: #debug-toolbar-panel<br><br>If you use the Flask-DebugToolbar you can add<br>`'flask_mongoengine.panels.MongoDebugPanel'` to the `DEBUG_TB_PANELS` config<br>list and then it will automatically track your queries::<br><br>    from flask import Flask<br>    from flask_debugtoolbar import DebugToolbarExtension<br><br>    app = Flask(__name__)<br>    app.config['DEBUG_TB_PANELS'] = ['flask_mongoengine.panels.MongoDebugPanel']<br>    db = MongoEngine(app)<br>    toolbar = DebugToolbarExtension(app)<br><br><br><br>Upgrading<br>=========<br><br>0.6 to 0.7<br>----------<br><br>`ListFieldPagination` order of arguments have been changed to be more logical::<br><br>    # Old order<br>    ListFieldPagination(self, queryset, field_name, doc_id, page, per_page, total)<br><br>    # New order<br>    ListFieldPagination(self, queryset, doc_id, field_name, page, per_page, total)<br><br><br>Credits<br>=======<br><br>Inspired by two repos:<br><br>`danjac &lt;https://bitbucket.org/danjac/flask-mongoengine&gt;`_<br>`maratfm &lt;https://bitbucket.org/maratfm/wtforms&gt;`_<br><br><br>\n          </div>"}, "last_serial": 3587287, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b8b0bff8f4e0b05ac538e1a90fb035ab", "sha256": "61a7d21efe4b1675b3fb2e938d69b8b76e6443499cc3bd096f10660839ad5842"}, "downloads": -1, "filename": "flask-mongoengine-0.1.tar.gz", "has_sig": false, "md5_digest": "b8b0bff8f4e0b05ac538e1a90fb035ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22904, "upload_time": "2012-05-17T16:21:38", "upload_time_iso_8601": "2012-05-17T16:21:38.866201Z", "url": "https://files.pythonhosted.org/packages/0c/de/c2cec9deea3b0c1d84715cd682f43cf2394cc36fda598ec8370bfa3b3295/flask-mongoengine-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "859319be841e4b147543cb1bf8acf5a3", "sha256": "38f5976c694a78a5d78441a0fded76d590f5fe20eb296e8e538f02575d8c3c4e"}, "downloads": -1, "filename": "flask-mongoengine-0.2.tar.gz", "has_sig": false, "md5_digest": "859319be841e4b147543cb1bf8acf5a3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23023, "upload_time": "2012-05-17T17:06:00", "upload_time_iso_8601": "2012-05-17T17:06:00.228677Z", "url": "https://files.pythonhosted.org/packages/e4/c4/4695b651bce73bb9c22ca2b6e8c12e079e8dd01a44ce2a9e3f794bf8e734/flask-mongoengine-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ab988a2c07893742ae646512d5b578dd", "sha256": "d4e1118a331ac7f9f23b5ed23bf5aaf84f088f6ee302c872b750b34365f92e5b"}, "downloads": -1, "filename": "flask-mongoengine-0.3.tar.gz", "has_sig": false, "md5_digest": "ab988a2c07893742ae646512d5b578dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100097, "upload_time": "2012-05-18T12:24:05", "upload_time_iso_8601": "2012-05-18T12:24:05.176978Z", "url": "https://files.pythonhosted.org/packages/f7/5c/4ca4efebabb13d4aecbdfe448a0055b7062d5dff0cd6aaef0d5674b3bf01/flask-mongoengine-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "1cf774263f9b700d1de4cd916ec17796", "sha256": "230149ec5ea42f0c0e48c68f485890541dd62fbefe77227d311e9c37b8b9eeaf"}, "downloads": -1, "filename": "flask-mongoengine-0.4.tar.gz", "has_sig": false, "md5_digest": "1cf774263f9b700d1de4cd916ec17796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100238, "upload_time": "2012-06-23T22:40:17", "upload_time_iso_8601": "2012-06-23T22:40:17.247047Z", "url": "https://files.pythonhosted.org/packages/98/3d/85d97beb278b66afc02bd8eb5644401e77d3a90d29152904cbcf44bf6ac5/flask-mongoengine-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "09d941d5ccfd13c6cec9c6b8f6f5088e", "sha256": "a257c6ffc33925cac4316f99a2a95a573479c55e35fa8a0ed5e98b2053fa702f"}, "downloads": -1, "filename": "flask-mongoengine-0.5.tar.gz", "has_sig": false, "md5_digest": "09d941d5ccfd13c6cec9c6b8f6f5088e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100445, "upload_time": "2012-07-10T18:20:49", "upload_time_iso_8601": "2012-07-10T18:20:49.869106Z", "url": "https://files.pythonhosted.org/packages/20/f0/e64f7e2ca454c3ef22d77f9e00b2d2da2f12dd635b9fbf00925e5f83c06c/flask-mongoengine-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "67f7d3e7032fb5c681fda894e018dabd", "sha256": "60c5eb5ed80e94dfd4170b82e03bd59aa8fab1174540fa39daadcf74611d6d84"}, "downloads": -1, "filename": "flask-mongoengine-0.6.tar.gz", "has_sig": false, "md5_digest": "67f7d3e7032fb5c681fda894e018dabd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101133, "upload_time": "2012-08-25T17:31:07", "upload_time_iso_8601": "2012-08-25T17:31:07.379573Z", "url": "https://files.pythonhosted.org/packages/d7/1c/21217cd6c81cf8765345d9ffc2d4490715423ada6cd77513eceba43f24a3/flask-mongoengine-0.6.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "9219a08bb4ca7503904bb941084fee52", "sha256": "e5031d1f812181699b10fec76d7c9c6633f19f8b686dcee48371e9216884f2b4"}, "downloads": -1, "filename": "flask-mongoengine-0.7.0.tar.gz", "has_sig": false, "md5_digest": "9219a08bb4ca7503904bb941084fee52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103676, "upload_time": "2013-05-20T16:07:21", "upload_time_iso_8601": "2013-05-20T16:07:21.659381Z", "url": "https://files.pythonhosted.org/packages/a4/bd/a84e5a2a2c5d88a628cd8808fadc6be442848c28485c181e28a168b276be/flask-mongoengine-0.7.0.tar.gz", "yanked": false}], "0.7.0RC1": [{"comment_text": "", "digests": {"md5": "0ec594155a0cd76b7af6f82e41d64617", "sha256": "60bb9f139918178df38a41a0c5896e9609e4edcb7b6ed3e9d07a9c8f2f6e2493"}, "downloads": -1, "filename": "flask-mongoengine-0.7.0RC1.tar.gz", "has_sig": false, "md5_digest": "0ec594155a0cd76b7af6f82e41d64617", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103649, "upload_time": "2013-05-07T12:26:40", "upload_time_iso_8601": "2013-05-07T12:26:40.354310Z", "url": "https://files.pythonhosted.org/packages/7f/8f/d0832a7b52e8a1aaf5f5bd21afebeb2f5f3936f07a47d51510c47f0ed0e2/flask-mongoengine-0.7.0RC1.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "6213d28a5aa786edc2ef41fc6597ab56", "sha256": "f1a33c6ad148259426f9b9927db3cf5074b2acf0473b93a5fb7d7c43e4ab951b"}, "downloads": -1, "filename": "flask_mongoengine-0.7.1-py2-none-any.whl", "has_sig": false, "md5_digest": "6213d28a5aa786edc2ef41fc6597ab56", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18134, "upload_time": "2014-08-10T12:20:33", "upload_time_iso_8601": "2014-08-10T12:20:33.255895Z", "url": "https://files.pythonhosted.org/packages/68/b6/557f956817b64fbc141103dba36c623794c13a3ff0341c7ec5138df41a5e/flask_mongoengine-0.7.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e64c736b8f206f01a1d55ee4ca6c5e6", "sha256": "8ab895611a92b1e16f8467ddda0d4e8addee0ccf478f61d161ff58417caa06f2"}, "downloads": -1, "filename": "flask-mongoengine-0.7.1.tar.gz", "has_sig": false, "md5_digest": "5e64c736b8f206f01a1d55ee4ca6c5e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 103947, "upload_time": "2014-08-10T12:20:30", "upload_time_iso_8601": "2014-08-10T12:20:30.360719Z", "url": "https://files.pythonhosted.org/packages/7c/8b/813e19aa29e5101485e5c570e861940d87ed8f360ec1d858afee7ee6b02f/flask-mongoengine-0.7.1.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "96969d0832b00aa00dcf481df373d49b", "sha256": "2eb7ef95be896b6318a619538d7764c6ee92b99be7d64bd0dec07db5214a5267"}, "downloads": -1, "filename": "flask-mongoengine-0.7.3.zip", "has_sig": false, "md5_digest": "96969d0832b00aa00dcf481df373d49b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115497, "upload_time": "2015-11-05T01:06:48", "upload_time_iso_8601": "2015-11-05T01:06:48.791311Z", "url": "https://files.pythonhosted.org/packages/99/f8/1e486baeb142c4fb732f0751096d4a8398542ad22a8f1ab7b947d4559eb5/flask-mongoengine-0.7.3.zip", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "b041d0e5981273a0820e4b1fbf3b1492", "sha256": "42b64f994a7ee4557a1b76f416e4a4b251ad282ff9ae4a0af0501f692c107bb5"}, "downloads": -1, "filename": "flask-mongoengine-0.7.4.tar.gz", "has_sig": false, "md5_digest": "b041d0e5981273a0820e4b1fbf3b1492", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110032, "upload_time": "2015-11-05T20:27:30", "upload_time_iso_8601": "2015-11-05T20:27:30.681081Z", "url": "https://files.pythonhosted.org/packages/39/5b/d9586e14da6e66ad7810b98459aa3f6cb73c5d30bec4b5a3ff01d78b7f94/flask-mongoengine-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "e207998d4ab5237582c4983cd18ab484", "sha256": "9181cc3971bdf7ac08d3ad0a513a1cd5c111386e99f74def82bbae797bb8ea76"}, "downloads": -1, "filename": "flask-mongoengine-0.7.5.tar.gz", "has_sig": false, "md5_digest": "e207998d4ab5237582c4983cd18ab484", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 110621, "upload_time": "2016-01-09T20:59:49", "upload_time_iso_8601": "2016-01-09T20:59:49.052981Z", "url": "https://files.pythonhosted.org/packages/f3/46/e527ea37dd53e5addae8167c2e5850029c7be98add465928cac7d1d10d0e/flask-mongoengine-0.7.5.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "3105f1db28245137ba702b88d2ed1e0c", "sha256": "24b30f3cfce95a53f0ad7ce14aa5eb24db7a6db756e1549056fb2b4b397b045e"}, "downloads": -1, "filename": "flask-mongoengine-0.8.tar.gz", "has_sig": false, "md5_digest": "3105f1db28245137ba702b88d2ed1e0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 115524, "upload_time": "2016-08-11T11:20:46", "upload_time_iso_8601": "2016-08-11T11:20:46.081456Z", "url": "https://files.pythonhosted.org/packages/b1/11/d419d68a249ab138780e787ccfdd3ad189ac0206b021eb64c887edbfee64/flask-mongoengine-0.8.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "3e75acb12110f191d92f4ecfd38278c8", "sha256": "c62ad2b670a360cd212f32e17dba4bfcf481a6a67b626a442a4291f5812401d5"}, "downloads": -1, "filename": "flask_mongoengine-0.8.1-py2-none-any.whl", "has_sig": false, "md5_digest": "3e75acb12110f191d92f4ecfd38278c8", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 27169, "upload_time": "2016-12-11T23:18:17", "upload_time_iso_8601": "2016-12-11T23:18:17.583420Z", "url": "https://files.pythonhosted.org/packages/aa/ce/18f60a1595b77cbfc5ec5b2339c4bae56f477ebd40b9b52f6147240b9e47/flask_mongoengine-0.8.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "511fcdd0db0859a55eb8d1ef2d0f04a1", "sha256": "7a038fa8aa46b5b4ed5245462200236fb577b00d0ca9bd3df2de39ac1c258267"}, "downloads": -1, "filename": "flask-mongoengine-0.8.1.tar.gz", "has_sig": false, "md5_digest": "511fcdd0db0859a55eb8d1ef2d0f04a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111276, "upload_time": "2016-12-11T23:18:14", "upload_time_iso_8601": "2016-12-11T23:18:14.542042Z", "url": "https://files.pythonhosted.org/packages/79/ec/d8a6764dcbde2e8e7a635eccba3aa7e3d11976479157d02d9882a74c024c/flask-mongoengine-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "29b2308fe5ad6a53c55122d7afc8d0b6", "sha256": "f2937413342adda842144c74cc8d7dedaeeed481f8064696f8ab5b74307783d8"}, "downloads": -1, "filename": "flask_mongoengine-0.8.2-py2-none-any.whl", "has_sig": false, "md5_digest": "29b2308fe5ad6a53c55122d7afc8d0b6", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 27173, "upload_time": "2016-12-11T23:43:03", "upload_time_iso_8601": "2016-12-11T23:43:03.208623Z", "url": "https://files.pythonhosted.org/packages/15/28/4e26d9888279124b24be32518917ecd9df940c6637f78fdf41fe519948c4/flask_mongoengine-0.8.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3867d415d0c2c9a242e9fabcc753acfc", "sha256": "f746e8ec78e40482f8861dd15427b714fb395b4461754521371819745cf0502a"}, "downloads": -1, "filename": "flask-mongoengine-0.8.2.tar.gz", "has_sig": false, "md5_digest": "3867d415d0c2c9a242e9fabcc753acfc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111367, "upload_time": "2016-12-11T23:43:00", "upload_time_iso_8601": "2016-12-11T23:43:00.737540Z", "url": "https://files.pythonhosted.org/packages/db/4d/7125aad7bac8278b857a26d88d563a6aef0291e2bfbd9fbf56329706b85a/flask-mongoengine-0.8.2.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "56784d82b1faf748f3f926d461733e02", "sha256": "df7e69c2b114987554e93b317a1a8c3b789b78e9e7f5c80bdde8acd1d501779f"}, "downloads": -1, "filename": "flask_mongoengine-0.9.0-py2-none-any.whl", "has_sig": false, "md5_digest": "56784d82b1faf748f3f926d461733e02", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 27309, "upload_time": "2017-02-16T15:36:12", "upload_time_iso_8601": "2017-02-16T15:36:12.526961Z", "url": "https://files.pythonhosted.org/packages/57/a0/6a9c9e97330d05b2776c4af5dc80a3e677b2dd0e905f8d7b5f56655dbb45/flask_mongoengine-0.9.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "699173fc88b4117ec14149e27421aa38", "sha256": "7acd36fdb4cb9e602e7cc1d77cd3868b672bc5473b24fa60b0542a1c157ccc22"}, "downloads": -1, "filename": "flask-mongoengine-0.9.0.tar.gz", "has_sig": false, "md5_digest": "699173fc88b4117ec14149e27421aa38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111909, "upload_time": "2017-02-16T15:36:10", "upload_time_iso_8601": "2017-02-16T15:36:10.581459Z", "url": "https://files.pythonhosted.org/packages/45/7f/e267c969fbb13683741afd5c3e0cc79574a0b1171f3e2e30b54f2eac8337/flask-mongoengine-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "93433ebd762c6f0bc3bc82784db908c7", "sha256": "63e62b8c9b4872272cdd0091cd11fa011156de8b0280458c7657036317968c89"}, "downloads": -1, "filename": "flask_mongoengine-0.9.1-py2-none-any.whl", "has_sig": false, "md5_digest": "93433ebd762c6f0bc3bc82784db908c7", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 27313, "upload_time": "2017-02-16T23:00:05", "upload_time_iso_8601": "2017-02-16T23:00:05.057433Z", "url": "https://files.pythonhosted.org/packages/d8/ac/80f904edcd36fecafd4f2965be3ccbcfc65bf79ed5e17347ecf0983e5a91/flask_mongoengine-0.9.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef4dea25f215b8a1c1d57d03313b797b", "sha256": "9e6e19f0e6f9b08b6d2c23b017f1333d66d7e1617f0bf5cab534f8f0fafd4792"}, "downloads": -1, "filename": "flask-mongoengine-0.9.1.tar.gz", "has_sig": false, "md5_digest": "ef4dea25f215b8a1c1d57d03313b797b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111945, "upload_time": "2017-02-16T23:00:03", "upload_time_iso_8601": "2017-02-16T23:00:03.529134Z", "url": "https://files.pythonhosted.org/packages/42/4b/4578d00ddaf7e86b09038a227c3678fde754f788010c17dc1abfcb077163/flask-mongoengine-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "d0584776bea7db5041902b80028dd4b6", "sha256": "9db3bd00c72537cd3fe59e0a4af53134388698f5b2ba4e7ec3090745423a9e74"}, "downloads": -1, "filename": "flask_mongoengine-0.9.2-py2-none-any.whl", "has_sig": false, "md5_digest": "d0584776bea7db5041902b80028dd4b6", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27306, "upload_time": "2017-02-16T23:36:10", "upload_time_iso_8601": "2017-02-16T23:36:10.215587Z", "url": "https://files.pythonhosted.org/packages/cd/f9/33e3655759a2d70f913df17668c0e0d5b412741173e88be5f9437bd75243/flask_mongoengine-0.9.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d52285c814dee0db172a79bcb76d71fc", "sha256": "fc0d7f146f6947fb34fe3ca0dc60cac331bef143d8b54079cb35bab97f631da4"}, "downloads": -1, "filename": "flask-mongoengine-0.9.2.tar.gz", "has_sig": false, "md5_digest": "d52285c814dee0db172a79bcb76d71fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 112133, "upload_time": "2017-02-16T23:36:12", "upload_time_iso_8601": "2017-02-16T23:36:12.348260Z", "url": "https://files.pythonhosted.org/packages/e8/59/0b48d9564436d89f6097bdb64ae75db1cd83801a960c3c44a90926d38735/flask-mongoengine-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "77ad4c1188a8ceaa0073d40ace8d8cd3", "sha256": "013bd05d9eac88f7a4e69c109858a7d78924211b27a9490470ac0076acc83b3b"}, "downloads": -1, "filename": "flask_mongoengine-0.9.3-py2-none-any.whl", "has_sig": false, "md5_digest": "77ad4c1188a8ceaa0073d40ace8d8cd3", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27481, "upload_time": "2017-05-14T16:42:14", "upload_time_iso_8601": "2017-05-14T16:42:14.560595Z", "url": "https://files.pythonhosted.org/packages/9d/99/5c2dc1ff1f4cfd72dc03953c8898e6b580ac6fbe56ebde03696ec110b247/flask_mongoengine-0.9.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7037ad4a91be04ea16749bc9201ed68e", "sha256": "01b66bd9bfdef9cc9e7e7102e1f86e772e6777c36d8577b3ef5c94ba3216bde8"}, "downloads": -1, "filename": "flask-mongoengine-0.9.3.tar.gz", "has_sig": false, "md5_digest": "7037ad4a91be04ea16749bc9201ed68e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111690, "upload_time": "2017-05-14T16:42:15", "upload_time_iso_8601": "2017-05-14T16:42:15.958741Z", "url": "https://files.pythonhosted.org/packages/84/4b/6bbd0f232fcc2b363addb847a498584f164a32c2559804c0701ae0de4108/flask-mongoengine-0.9.3.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "4aa08ab60be7d09189eb36679069b808", "sha256": "b6376b33cd1e624c09983a0884dc87303e54084f0e6b7f8df6794d56d35fa66f"}, "downloads": -1, "filename": "flask_mongoengine-0.9.5-py2-none-any.whl", "has_sig": false, "md5_digest": "4aa08ab60be7d09189eb36679069b808", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27827, "upload_time": "2018-02-16T12:34:55", "upload_time_iso_8601": "2018-02-16T12:34:55.974405Z", "url": "https://files.pythonhosted.org/packages/db/b4/b3c10470cbf1f83ba99ac20158d054cb8df4bfff2c269e83ce02ca5152ba/flask_mongoengine-0.9.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d97161c076bb7123a02f953fac542759", "sha256": "0f426aeafc4be2c37e9b4c0f8b5d02d012b7afc4b3b97a4119024684fe148fc1"}, "downloads": -1, "filename": "flask-mongoengine-0.9.5.tar.gz", "has_sig": false, "md5_digest": "d97161c076bb7123a02f953fac542759", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111970, "upload_time": "2018-02-16T12:34:57", "upload_time_iso_8601": "2018-02-16T12:34:57.205234Z", "url": "https://files.pythonhosted.org/packages/20/53/1bb8ad34ad5c2047a11651290325e55086bc18fce7cfdbbe6f5522bd0ae5/flask-mongoengine-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4aa08ab60be7d09189eb36679069b808", "sha256": "b6376b33cd1e624c09983a0884dc87303e54084f0e6b7f8df6794d56d35fa66f"}, "downloads": -1, "filename": "flask_mongoengine-0.9.5-py2-none-any.whl", "has_sig": false, "md5_digest": "4aa08ab60be7d09189eb36679069b808", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 27827, "upload_time": "2018-02-16T12:34:55", "upload_time_iso_8601": "2018-02-16T12:34:55.974405Z", "url": "https://files.pythonhosted.org/packages/db/b4/b3c10470cbf1f83ba99ac20158d054cb8df4bfff2c269e83ce02ca5152ba/flask_mongoengine-0.9.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d97161c076bb7123a02f953fac542759", "sha256": "0f426aeafc4be2c37e9b4c0f8b5d02d012b7afc4b3b97a4119024684fe148fc1"}, "downloads": -1, "filename": "flask-mongoengine-0.9.5.tar.gz", "has_sig": false, "md5_digest": "d97161c076bb7123a02f953fac542759", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 111970, "upload_time": "2018-02-16T12:34:57", "upload_time_iso_8601": "2018-02-16T12:34:57.205234Z", "url": "https://files.pythonhosted.org/packages/20/53/1bb8ad34ad5c2047a11651290325e55086bc18fce7cfdbbe6f5522bd0ae5/flask-mongoengine-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:37 2020"}