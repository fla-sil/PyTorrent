{"info": {"author": "Stefano Gariazzo", "author_email": "stefano.gariazzo@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# [PhysBiblio](https://github.com/steog88/PhysBiblio)\nBibliography manager in Python  \nby S. Gariazzo (stefano.gariazzo@gmail.com)\n\n[![License: GPL v3](https://img.shields.io/badge/License-GPLv3-blue.svg)](https://github.com/steog88/PhysBiblio/blob/master/LICENSE)\n[![PyPI version](https://img.shields.io/pypi/v/physbiblio.svg?style=flat-square)](https://pypi.org/project/physbiblio/)\n[![PyPI version](https://img.shields.io/pypi/pyversions/physbiblio.svg?style=flat-square)](https://pypi.org/project/physbiblio/)\n[![DOI](https://zenodo.org/badge/116858546.svg)](https://zenodo.org/badge/latestdoi/116858546)\n[![Code style: black](https://img.shields.io/badge/code%20style-black-000000.svg)](https://github.com/python/black)\n\nPhysBiblio is a program that helps to manage bibliography, with a particular focus on High Energy Physics tools.  \nIt is written in Python, it uses PySide2 for the graphical interface and Sqlite for the database management.\n\n\n## 1. Getting started\n\n### **WARNING:**\nPhysBiblio has been intensively tested only on Ubuntu (14.04LTS to 18.04 versions) and Sabayon Linux, using `python` version `2.7+` and `3.5+`.  \nSome tests on a virtual machine running MacOS (10.14, `python 3.7`) have been also performed.  \nIt should work equally well in other operating systems or with different python versions, but it has not been tested.  \nIn any case, several bugs are surely still present and the program may freeze or crash unexpectedly.\nPlease report any bug that you find [here](https://github.com/steog88/PhysBiblio/issues).\n\n### Installation\nTo install PhysBiblio into your computer, the easiest way is to use `pip` and the official python repositories.\nIf you do not have `pip` installed in your system, see [this page](https://pip.pypa.io/en/stable/installing/).\n\nPlease note that at the moment `PySide2` is only available for `python` versions 2.7+ and 3.5+.\nOther python versions are therefore not supported.\n\n#### Python2\nIf you use `python 2+`, simply use (system-wide install)\n```\nsudo pip install physbiblio\n```\nor (user only install)\n```\npip install --user physbiblio\n```\n\n#### Python3\nFor `python 3+`, the commands are nearly unchanged.\nIf `pip` points to your `python3` distribution, the above commands will do the job.\nOtherwise, use the same commands above but with `pip3` instead of `pip`.\n\n#### Conda\nHere you find a list of instructions to install and run `PhysBiblio.exe` using `conda` and related commands.\nNote that the following commands have not (yet) been tested with `PySide2`.\nRemember to use a python version 2.7+ or 3.5+.\n```\nconda create --name physbiblio\nconda activate physbiblio\npip install physbiblio\n```\nAt this point, the installation is complete.\nTo launch the main program correctly, once you have activated the appropriate `conda` environment (`conda activate physbiblio`), use:\n```\npython PhysBiblio.exe\n```\n(if you omit `python`, it will try to use the default Python installation instead of the Conda one, and fail due to missing libraries)\n\n#### Additional info\nAt this point, `PhysBiblio.exe` will be installed in your computer, in Linux it will be in some folder like `/usr/bin/`, `/usr/local/bin/` or `/your/user/folder/.local/bin/`.\nYou can find out the location where the package is installed with\n```\npip show -f physbiblio\n```\nThe primary director is under `Location`, you can combine with the information provided by the list of `Files`.\n\nTo upgrade from a previously installed version, add the option `-U` or `--upgrade` when running `pip`, for example:\n```\nsudo pip install -U physbiblio\n```\nor\n```\npip install -U physbiblio\n```\n\n### Test that everything works\nOnce you have installed the software, you may want to spend few minutes to run the test suite\nand check that everything works.  \nThe test suite is available through the same `PhysBiblio.exe` executable with the command `test`:\n`PhysBiblio.exe test`\nIf this does not work, check that the global variable PATH is correctly configured.\nThe other possibility is to point to the PhysBiblio script directly, using one of the following commands:\n```\n/path/to/PhysBiblio.exe test\npython /path/to/PhysBiblio.exe test\npython3 /path/to/PhysBiblio.exe test\n```\n\nThe entire suite of tests will check that all the functions work properly and should complete without errors and failures in a few minutes, depending on the internet connection speed.  \nA failure may be due to missing packages, incompatible package versions, particular inconsistencies due to specific operating systems and package versions, or missing internet connection (or bugs).\nIf you are not sure which is your case, and in any case to report any problem you find, please go [here](https://github.com/steog88/PhysBiblio/issues).\n\nIn case you want to run only part of the test suite, you can use the command line options (see `PhysBiblio.exe test -h`).\nAs an example, `PhysBiblio.exe test -o` will skip all the online tests.\n\nIf the tests cannot complete due to a segmentation fault, or present random behaviors, it may be a problem related with the python version. A known case includes crashes with python 3.5.5 in Sabayon Linux. No problems appear when python 3.6 is used instead.\n\n### Usage\nTo run the program, execute `PhysBiblio.exe` that have been installed.\nBy default it will run with `python2.x`.\nYou can choose a specific `python` version running it explicitely via command line, for example you may select `python3` with\n```\npython3 /path/to/PhysBiblio.exe\n```\n\nYou may want to create a menu shortcut to PhysBiblio.\nIn Ubuntu, you can simply create a new file `/your/home/.local/share/applications/PhysBiblio.desktop` with the editor of your choice, and insert the following lines:\n```\n[Desktop Entry]\nType=Application\nExec=/path/to/PhysBiblio.exe\nIcon=/path/to/physbiblio/icon.png\nName=PhysBiblio\n```\nThe icon may be located in `/usr/local/physbiblio/icon.png` or `/usr/physbiblio/icon.png`.\n\n### Default settings\nWhen you first open PhysBiblio, you will need to set up some configuration parameters.  \nIn particular, if you do not correctly set the web browser and the PDF reader, some features may not work when using the command line.\n\n### Dependencies\nPhysBiblio depends on several python packages:\n\n* sqlite3 (for the database)\n* pyside2 (for the graphical interface)\n* ads (package to interact with the ADS API)\n* appdirs (default paths)\n* argparse (arguments from command line)\n* bibtexparser (to manage bibtex entries)\n* dictdiffer (show differences between dictionaries)\n* feedparser (to deal with arXiv data)\n* matplotlib (to do some plots)\n* outdated (check if new versions are available)\n* pylatexenc (conversion of accented and other utf-8 characters to latex commands)\n* pymarc (to deal with arXiv data)\n* pyoai (for massively harvesting the INSPIRE-HEP database)\n* requests (download json pages)\n* six (compatibility between python2 and python3)\n* unittest2+mock (python2.x) / unittest (python3.x) (for testing the methods and functions)\n\n\n## 2. Features\nPhysBiblio has some nice features which may help to manage the bibliography. Some of them are listed here.\n\n### Profiles\nYou may manage different profiles, each with different settings and independent databases.\nIt may be useful if you want to maintain separate activities or collections independently one of the other.\n\n### Import\nThe default import interface can fetch and download information from [INSPIRE-HEP](http://inspirehep.net/).\nThe advanced import can also work with [ADS](https://ui.adsabs.harvard.edu/), [arXiv](www.arxiv.org), [dx.doi.org](dx.doi.org), [ISBN2bibtex](http://www.ebook.de/de/tools/isbn2bibtex).  \nIf an arXiv identifier is present, you can download the paper abstract from arXiv (there is an option to do this by default).\n\n### Export\nIt is very easy to export some entries into a `.bib` file.\nYou can export the entire bibtex database, a selection or let the program export only the entries that you need to compile a given `.tex` file.\nAll the functions are available in the `File` menu.\n\n### Update\nPhysBiblio can use [INSPIRE-HEP](http://inspirehep.net/) information in order to update the information of recently published entries.  \nYou will find very easy to keep your database up-to-date with journal info, you just have to occasionally run the `update` function on single papers or on the whole table.  \nYou can use this feature also to update the content of an existing `.bib` file.\n\n**Please note** that the use of the `update` functions on long lists of entries is discouraged by the maintainers of INSPIRE-HEP, as it creates a lot of load on the server.\nSee [here](#inspire-oai) for an alternative and much less demanding method.\n\n### Categories\nThe default database contains two categories: `Main` and `Tags`.\nYou can add subcategories in a tree structure and filter your bibtex entries according to the classification.\n\n### Experiments\nSeparately from categories, you can organize papers published by experiments or collaborations and insert links to the experiment web page.\nWhen you assign a paper to an experiment, it will be classified also in the same categories of the experiment itself.\n\n### PDF\nA \"Download from arXiv\" feature is present for all the papers with an arXiv identifier.  \nFor the other papers, you can manually assign a PDF that you have separately downloaded and it will be stored in a subfolder.  \nYou will not need to know where it is saved, because you will access it from the program, but in case you can use the function to copy th PDF wherever you want.\n\n### Marks\nYou can mark the entries to be able to easily see if they are good/bad, to notice which ones you need to read or the most interesting ones.\n\n### Search and replace\nEntries in the database can be searched using different field combinations, their associated categories or experiments, marks, entry types (reviews, proceedings, lectures, ...).\n\nThe search form should be easy to understand (if not, help me to improve it and submit an [issue](https://github.com/steog88/PhysBiblio/issues)).\nYou can play with the logical operators and add more fields if necessary.\nYou can also save a search or a replace that you need frequently, they will appear in a new menu for future use.\n\nA pretty powerful \"search and replace\" function, which can use regular expressions (regex), is also implemented.  \nThe search function is the same as in the search only case, but now you cannot select the limit and offset.  \nThe replace fields let you select from which field you want to take the input and in which one you want to store the new string.  \nAn additional filtering is performed when trying to match the regular expression. No match, no action.\n\nTwo (regex) search and replace examples:\n\n* To move the letter from \"volume\" to \"journal\" for the journals of the \"Phys.Rev.\" series, use:\n    - from: \"published\", `(Phys.Rev. [A-Z]{1})([0-9]{1,3}) .*`;\n    - To 1: \"journal\", `\\1`;\n    - To 2: \"volume\", `\\2`.\n    \n    If you want to match \"J.Phys. G\" or other journals, change the first part of the pattern string accordingly (e.g. `J.Phys. [A-Z]{1}`).\n\n* To remove the first two numbers from \"volume\" field of JHEP/JCAP entries, use:\n    - filter using [\"jhep\" or \"jcap\"] (\"add another line\" and use \"OR\") in \"bibtex\";\n    - replace `([0-9]{2})([0-9]{2})` in \"volume\" with `\\2`.\n\n**New in 0.5.0**: you can now save the searches/replaces you use more frequently. They will be re-usable with two clicks in the new menu and shared among all the profiles.\n\n**New in 0.9.5**: you can now re-use the recent searches/replaces that you have not explicitely saved but that have been stored temporarily in the database. They are available using the Up/Down arrows in the search/replace form.\n\n### INSPIRE-OAI\nINSPIRE-HEP has a dedicated interface for massive harvesting, see [this page](http://inspirehep.net/info/hep/api).  \nIn order to avoid heavy traffic on the server when using the `update` functions on a long list of entries, you should rely on the OAI functions.\nBasically instead of looking for each single entry, the code will download the information of all the entries modified in a given time interval and use what is needed in the local database.  \nIn this way, the amount of data traffic is higher, but the server-side load for INSPIRE-HEP is much more sustainable.\n\nThe easiest way to do this (in Linux) is to use a cron job that will run daily or weekly and the command `PhysBiblio.exe daily` or `PhysBiblio.exe weekly` (see also [3. Command line usage](#3-command-line-usage)).  \nThe `daily` (`weekly`) routines will download the updates of the last day (week) from the INSPIRE-HEP database and update the local database.\n\nTo set your cron job, use `crontab -e` and add one of the following lines:\n```\n0 7 * * * /path/to/PhysBiblio.exe daily > /path/to/log_daily_`date \"+\\%y\\%m\\%d\"`.log 2>&1\n0 7 * * sat /path/to/PhysBiblio.exe weekly > /path/to/log_weekly_`date \"+\\%y\\%m\\%d\"`.log 2>&1\n```\nThe syntax is simple: the `daily` (`weekly`) script will run every day (every saturday) at 7:00 and save a logfile in the desired folder.\n\nYou may then check the bottom of the logfile to see the modified entries and scroll the entire the content if you want to see the complete list of modifications.\n\nYou can also use the more generic `PhysBiblio.exe dates [date1[, date2]]` command, which enables you to fetch the content between the two given dates (which must be in the format `yyyy-mm-dd`).\nIf not given, the default dates are the same as for the `daily` command.\n\n### ADS by NASA\nThe ADS service by NASA is accessed by means of the API, using the [unofficial python client](https://github.com/andycasey/ads) maintained by Andy Casey.\nCurrently, it is only possible to download the bibtex entries from ADS, update of existing entries or other features are not yet available.\n\nThe search is performed through the API in the same way it could be performed by writing a complex search string in the [new UI version](https://ui.adsabs.harvard.edu/).\nFor a description of the syntax used in the ADS searches, see [this page](https://adsabs.github.io/help/search/search-syntax).\n\n\n## 3. Command line usage\nSome functions are available also as simple command line instructions,\nso they can be included in any non-graphical script.\n\nThe usage is simple:\n```\n/path/to/PhysBiblio.exe <command> [options]\n```\n\nThe list of available commands includes:\n\n* `gui`: run the graphical interface (default if no options are used).\n* `test`: execute the test suite.\n* `clean`: process all the bibtex entries in the database to remove bad characters and reformat them.\n* `cli`: internal command line interface to work with internal commands. Mainly intended for developing.\n* `daily`: see [here](#inspire-oai).\n* `dates`: see [here](#inspire-oai).\n* `export`:\n    export all the bibtex entries in the database, creating a file with the given `filename`.\n    If already existing, the file will be overwritten.\n* `tex`:\n    read one or more `.tex` files,\n    scanning for `\\cite` or similar commands, and generate a single `.bib` file\n    with the required bibtex entries to compile the set of `.tex` files.\n    If they are in the local database, the bibtexs are just copied into the output file,\n    otherwise the script will connect to INSPIRE-HEP to download the entries,\n    which will be stored in the database and in the output file.\n    If `outputfile` exists, a backup copy will be created.\n* `update`:\n    for each of the entries in the database, if required, get updated information from INSPIRE-HEP (publication info or title updates, for example).\n    You are encouraged not to use this function if you have a large database, see [here](#inspire-oai) instead.\n* `weekly`: see [here](#inspire-oai).\n\nThe best ways to know how to use the various sub-commands and options are\n```\n/path/to/PhysBiblio.exe -h\n/path/to/PhysBiblio.exe <command> -h\n```\n\n\n## 4. Data paths\nPhysBiblio now saves data, by default, in the directories specified by the `appdirs` package using `user_config_dir` and `user_data_dir`.\nBoth the directories are indicated at the beginning when launching `PhysBiblio.exe` via command line.\n\nThe stored configuration includes a `profiles.db` file, containing the information on the existing profiles.\n\nThe stored data include:\n\n* a `pdf/` subfolder, with the PDF for all the papers. This is usually shared among all the profiles, unless you set different paths in the configuration of each profile;\n* sets of `.db` and `.log` files, which contain the database and an error log for each profile.\n\nYou can change some of the paths and file names in the configuration.\nPlease note that changing the configuration **will not move** the existing files into the new locations.\n\n\n## 5. Acknowledgments\nThis software is part of a project that has received funding from the European Union's Horizon 2020 research and innovation programme, under the Marie Sk\u0142odowska-Curie grant agreement No 796941.\n\nIcons adopted in the GUI are mainly from the [Breeze-icons](https://github.com/KDE/breeze-icons) theme, from [KDE](https://www.kde.org/).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/steog88/PhysBiblio", "keywords": "bibliography,hep-ph,high-energy-physics,bibtex", "license": "GPL-3.0", "maintainer": "", "maintainer_email": "", "name": "physbiblio", "package_url": "https://pypi.org/project/physbiblio/", "platform": "", "project_url": "https://pypi.org/project/physbiblio/", "project_urls": {"Homepage": "https://github.com/steog88/PhysBiblio"}, "release_url": "https://pypi.org/project/physbiblio/1.5.2/", "requires_dist": null, "requires_python": "", "summary": "A bibliography manager in Python (using Sqlite and PySide2)", "version": "1.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><a href=\"https://github.com/steog88/PhysBiblio\" rel=\"nofollow\">PhysBiblio</a></h1>\n<p>Bibliography manager in Python<br>\nby S. Gariazzo (<a href=\"mailto:stefano.gariazzo@gmail.com\">stefano.gariazzo@gmail.com</a>)</p>\n<p><a href=\"https://github.com/steog88/PhysBiblio/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License: GPL v3\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8de17537dd1659a5a076ce547de301e27c839e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d47504c76332d626c75652e737667\"></a>\n<a href=\"https://pypi.org/project/physbiblio/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5f92631aef9940035ef581775c4497c480ad658/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f706879736269626c696f2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://pypi.org/project/physbiblio/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f829dcb2fd54d37ceef5dd1c972513f66ee4ef09/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f706879736269626c696f2e7376673f7374796c653d666c61742d737175617265\"></a>\n<a href=\"https://zenodo.org/badge/latestdoi/116858546\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ece241bfd311c7d58a6be5f20addfd1e1d52b08e/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f3131363835383534362e737667\"></a>\n<a href=\"https://github.com/python/black\" rel=\"nofollow\"><img alt=\"Code style: black\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a></p>\n<p>PhysBiblio is a program that helps to manage bibliography, with a particular focus on High Energy Physics tools.<br>\nIt is written in Python, it uses PySide2 for the graphical interface and Sqlite for the database management.</p>\n<h2>1. Getting started</h2>\n<h3><strong>WARNING:</strong></h3>\n<p>PhysBiblio has been intensively tested only on Ubuntu (14.04LTS to 18.04 versions) and Sabayon Linux, using <code>python</code> version <code>2.7+</code> and <code>3.5+</code>.<br>\nSome tests on a virtual machine running MacOS (10.14, <code>python 3.7</code>) have been also performed.<br>\nIt should work equally well in other operating systems or with different python versions, but it has not been tested.<br>\nIn any case, several bugs are surely still present and the program may freeze or crash unexpectedly.\nPlease report any bug that you find <a href=\"https://github.com/steog88/PhysBiblio/issues\" rel=\"nofollow\">here</a>.</p>\n<h3>Installation</h3>\n<p>To install PhysBiblio into your computer, the easiest way is to use <code>pip</code> and the official python repositories.\nIf you do not have <code>pip</code> installed in your system, see <a href=\"https://pip.pypa.io/en/stable/installing/\" rel=\"nofollow\">this page</a>.</p>\n<p>Please note that at the moment <code>PySide2</code> is only available for <code>python</code> versions 2.7+ and 3.5+.\nOther python versions are therefore not supported.</p>\n<h4>Python2</h4>\n<p>If you use <code>python 2+</code>, simply use (system-wide install)</p>\n<pre><code>sudo pip install physbiblio\n</code></pre>\n<p>or (user only install)</p>\n<pre><code>pip install --user physbiblio\n</code></pre>\n<h4>Python3</h4>\n<p>For <code>python 3+</code>, the commands are nearly unchanged.\nIf <code>pip</code> points to your <code>python3</code> distribution, the above commands will do the job.\nOtherwise, use the same commands above but with <code>pip3</code> instead of <code>pip</code>.</p>\n<h4>Conda</h4>\n<p>Here you find a list of instructions to install and run <code>PhysBiblio.exe</code> using <code>conda</code> and related commands.\nNote that the following commands have not (yet) been tested with <code>PySide2</code>.\nRemember to use a python version 2.7+ or 3.5+.</p>\n<pre><code>conda create --name physbiblio\nconda activate physbiblio\npip install physbiblio\n</code></pre>\n<p>At this point, the installation is complete.\nTo launch the main program correctly, once you have activated the appropriate <code>conda</code> environment (<code>conda activate physbiblio</code>), use:</p>\n<pre><code>python PhysBiblio.exe\n</code></pre>\n<p>(if you omit <code>python</code>, it will try to use the default Python installation instead of the Conda one, and fail due to missing libraries)</p>\n<h4>Additional info</h4>\n<p>At this point, <code>PhysBiblio.exe</code> will be installed in your computer, in Linux it will be in some folder like <code>/usr/bin/</code>, <code>/usr/local/bin/</code> or <code>/your/user/folder/.local/bin/</code>.\nYou can find out the location where the package is installed with</p>\n<pre><code>pip show -f physbiblio\n</code></pre>\n<p>The primary director is under <code>Location</code>, you can combine with the information provided by the list of <code>Files</code>.</p>\n<p>To upgrade from a previously installed version, add the option <code>-U</code> or <code>--upgrade</code> when running <code>pip</code>, for example:</p>\n<pre><code>sudo pip install -U physbiblio\n</code></pre>\n<p>or</p>\n<pre><code>pip install -U physbiblio\n</code></pre>\n<h3>Test that everything works</h3>\n<p>Once you have installed the software, you may want to spend few minutes to run the test suite\nand check that everything works.<br>\nThe test suite is available through the same <code>PhysBiblio.exe</code> executable with the command <code>test</code>:\n<code>PhysBiblio.exe test</code>\nIf this does not work, check that the global variable PATH is correctly configured.\nThe other possibility is to point to the PhysBiblio script directly, using one of the following commands:</p>\n<pre><code>/path/to/PhysBiblio.exe test\npython /path/to/PhysBiblio.exe test\npython3 /path/to/PhysBiblio.exe test\n</code></pre>\n<p>The entire suite of tests will check that all the functions work properly and should complete without errors and failures in a few minutes, depending on the internet connection speed.<br>\nA failure may be due to missing packages, incompatible package versions, particular inconsistencies due to specific operating systems and package versions, or missing internet connection (or bugs).\nIf you are not sure which is your case, and in any case to report any problem you find, please go <a href=\"https://github.com/steog88/PhysBiblio/issues\" rel=\"nofollow\">here</a>.</p>\n<p>In case you want to run only part of the test suite, you can use the command line options (see <code>PhysBiblio.exe test -h</code>).\nAs an example, <code>PhysBiblio.exe test -o</code> will skip all the online tests.</p>\n<p>If the tests cannot complete due to a segmentation fault, or present random behaviors, it may be a problem related with the python version. A known case includes crashes with python 3.5.5 in Sabayon Linux. No problems appear when python 3.6 is used instead.</p>\n<h3>Usage</h3>\n<p>To run the program, execute <code>PhysBiblio.exe</code> that have been installed.\nBy default it will run with <code>python2.x</code>.\nYou can choose a specific <code>python</code> version running it explicitely via command line, for example you may select <code>python3</code> with</p>\n<pre><code>python3 /path/to/PhysBiblio.exe\n</code></pre>\n<p>You may want to create a menu shortcut to PhysBiblio.\nIn Ubuntu, you can simply create a new file <code>/your/home/.local/share/applications/PhysBiblio.desktop</code> with the editor of your choice, and insert the following lines:</p>\n<pre><code>[Desktop Entry]\nType=Application\nExec=/path/to/PhysBiblio.exe\nIcon=/path/to/physbiblio/icon.png\nName=PhysBiblio\n</code></pre>\n<p>The icon may be located in <code>/usr/local/physbiblio/icon.png</code> or <code>/usr/physbiblio/icon.png</code>.</p>\n<h3>Default settings</h3>\n<p>When you first open PhysBiblio, you will need to set up some configuration parameters.<br>\nIn particular, if you do not correctly set the web browser and the PDF reader, some features may not work when using the command line.</p>\n<h3>Dependencies</h3>\n<p>PhysBiblio depends on several python packages:</p>\n<ul>\n<li>sqlite3 (for the database)</li>\n<li>pyside2 (for the graphical interface)</li>\n<li>ads (package to interact with the ADS API)</li>\n<li>appdirs (default paths)</li>\n<li>argparse (arguments from command line)</li>\n<li>bibtexparser (to manage bibtex entries)</li>\n<li>dictdiffer (show differences between dictionaries)</li>\n<li>feedparser (to deal with arXiv data)</li>\n<li>matplotlib (to do some plots)</li>\n<li>outdated (check if new versions are available)</li>\n<li>pylatexenc (conversion of accented and other utf-8 characters to latex commands)</li>\n<li>pymarc (to deal with arXiv data)</li>\n<li>pyoai (for massively harvesting the INSPIRE-HEP database)</li>\n<li>requests (download json pages)</li>\n<li>six (compatibility between python2 and python3)</li>\n<li>unittest2+mock (python2.x) / unittest (python3.x) (for testing the methods and functions)</li>\n</ul>\n<h2>2. Features</h2>\n<p>PhysBiblio has some nice features which may help to manage the bibliography. Some of them are listed here.</p>\n<h3>Profiles</h3>\n<p>You may manage different profiles, each with different settings and independent databases.\nIt may be useful if you want to maintain separate activities or collections independently one of the other.</p>\n<h3>Import</h3>\n<p>The default import interface can fetch and download information from <a href=\"http://inspirehep.net/\" rel=\"nofollow\">INSPIRE-HEP</a>.\nThe advanced import can also work with <a href=\"https://ui.adsabs.harvard.edu/\" rel=\"nofollow\">ADS</a>, <a href=\"www.arxiv.org\" rel=\"nofollow\">arXiv</a>, <a href=\"dx.doi.org\" rel=\"nofollow\">dx.doi.org</a>, <a href=\"http://www.ebook.de/de/tools/isbn2bibtex\" rel=\"nofollow\">ISBN2bibtex</a>.<br>\nIf an arXiv identifier is present, you can download the paper abstract from arXiv (there is an option to do this by default).</p>\n<h3>Export</h3>\n<p>It is very easy to export some entries into a <code>.bib</code> file.\nYou can export the entire bibtex database, a selection or let the program export only the entries that you need to compile a given <code>.tex</code> file.\nAll the functions are available in the <code>File</code> menu.</p>\n<h3>Update</h3>\n<p>PhysBiblio can use <a href=\"http://inspirehep.net/\" rel=\"nofollow\">INSPIRE-HEP</a> information in order to update the information of recently published entries.<br>\nYou will find very easy to keep your database up-to-date with journal info, you just have to occasionally run the <code>update</code> function on single papers or on the whole table.<br>\nYou can use this feature also to update the content of an existing <code>.bib</code> file.</p>\n<p><strong>Please note</strong> that the use of the <code>update</code> functions on long lists of entries is discouraged by the maintainers of INSPIRE-HEP, as it creates a lot of load on the server.\nSee <a href=\"#inspire-oai\" rel=\"nofollow\">here</a> for an alternative and much less demanding method.</p>\n<h3>Categories</h3>\n<p>The default database contains two categories: <code>Main</code> and <code>Tags</code>.\nYou can add subcategories in a tree structure and filter your bibtex entries according to the classification.</p>\n<h3>Experiments</h3>\n<p>Separately from categories, you can organize papers published by experiments or collaborations and insert links to the experiment web page.\nWhen you assign a paper to an experiment, it will be classified also in the same categories of the experiment itself.</p>\n<h3>PDF</h3>\n<p>A \"Download from arXiv\" feature is present for all the papers with an arXiv identifier.<br>\nFor the other papers, you can manually assign a PDF that you have separately downloaded and it will be stored in a subfolder.<br>\nYou will not need to know where it is saved, because you will access it from the program, but in case you can use the function to copy th PDF wherever you want.</p>\n<h3>Marks</h3>\n<p>You can mark the entries to be able to easily see if they are good/bad, to notice which ones you need to read or the most interesting ones.</p>\n<h3>Search and replace</h3>\n<p>Entries in the database can be searched using different field combinations, their associated categories or experiments, marks, entry types (reviews, proceedings, lectures, ...).</p>\n<p>The search form should be easy to understand (if not, help me to improve it and submit an <a href=\"https://github.com/steog88/PhysBiblio/issues\" rel=\"nofollow\">issue</a>).\nYou can play with the logical operators and add more fields if necessary.\nYou can also save a search or a replace that you need frequently, they will appear in a new menu for future use.</p>\n<p>A pretty powerful \"search and replace\" function, which can use regular expressions (regex), is also implemented.<br>\nThe search function is the same as in the search only case, but now you cannot select the limit and offset.<br>\nThe replace fields let you select from which field you want to take the input and in which one you want to store the new string.<br>\nAn additional filtering is performed when trying to match the regular expression. No match, no action.</p>\n<p>Two (regex) search and replace examples:</p>\n<ul>\n<li>\n<p>To move the letter from \"volume\" to \"journal\" for the journals of the \"Phys.Rev.\" series, use:</p>\n<ul>\n<li>from: \"published\", <code>(Phys.Rev. [A-Z]{1})([0-9]{1,3}) .*</code>;</li>\n<li>To 1: \"journal\", <code>\\1</code>;</li>\n<li>To 2: \"volume\", <code>\\2</code>.</li>\n</ul>\n<p>If you want to match \"J.Phys. G\" or other journals, change the first part of the pattern string accordingly (e.g. <code>J.Phys. [A-Z]{1}</code>).</p>\n</li>\n<li>\n<p>To remove the first two numbers from \"volume\" field of JHEP/JCAP entries, use:</p>\n<ul>\n<li>filter using [\"jhep\" or \"jcap\"] (\"add another line\" and use \"OR\") in \"bibtex\";</li>\n<li>replace <code>([0-9]{2})([0-9]{2})</code> in \"volume\" with <code>\\2</code>.</li>\n</ul>\n</li>\n</ul>\n<p><strong>New in 0.5.0</strong>: you can now save the searches/replaces you use more frequently. They will be re-usable with two clicks in the new menu and shared among all the profiles.</p>\n<p><strong>New in 0.9.5</strong>: you can now re-use the recent searches/replaces that you have not explicitely saved but that have been stored temporarily in the database. They are available using the Up/Down arrows in the search/replace form.</p>\n<h3>INSPIRE-OAI</h3>\n<p>INSPIRE-HEP has a dedicated interface for massive harvesting, see <a href=\"http://inspirehep.net/info/hep/api\" rel=\"nofollow\">this page</a>.<br>\nIn order to avoid heavy traffic on the server when using the <code>update</code> functions on a long list of entries, you should rely on the OAI functions.\nBasically instead of looking for each single entry, the code will download the information of all the entries modified in a given time interval and use what is needed in the local database.<br>\nIn this way, the amount of data traffic is higher, but the server-side load for INSPIRE-HEP is much more sustainable.</p>\n<p>The easiest way to do this (in Linux) is to use a cron job that will run daily or weekly and the command <code>PhysBiblio.exe daily</code> or <code>PhysBiblio.exe weekly</code> (see also <a href=\"#3-command-line-usage\" rel=\"nofollow\">3. Command line usage</a>).<br>\nThe <code>daily</code> (<code>weekly</code>) routines will download the updates of the last day (week) from the INSPIRE-HEP database and update the local database.</p>\n<p>To set your cron job, use <code>crontab -e</code> and add one of the following lines:</p>\n<pre><code>0 7 * * * /path/to/PhysBiblio.exe daily &gt; /path/to/log_daily_`date \"+\\%y\\%m\\%d\"`.log 2&gt;&amp;1\n0 7 * * sat /path/to/PhysBiblio.exe weekly &gt; /path/to/log_weekly_`date \"+\\%y\\%m\\%d\"`.log 2&gt;&amp;1\n</code></pre>\n<p>The syntax is simple: the <code>daily</code> (<code>weekly</code>) script will run every day (every saturday) at 7:00 and save a logfile in the desired folder.</p>\n<p>You may then check the bottom of the logfile to see the modified entries and scroll the entire the content if you want to see the complete list of modifications.</p>\n<p>You can also use the more generic <code>PhysBiblio.exe dates [date1[, date2]]</code> command, which enables you to fetch the content between the two given dates (which must be in the format <code>yyyy-mm-dd</code>).\nIf not given, the default dates are the same as for the <code>daily</code> command.</p>\n<h3>ADS by NASA</h3>\n<p>The ADS service by NASA is accessed by means of the API, using the <a href=\"https://github.com/andycasey/ads\" rel=\"nofollow\">unofficial python client</a> maintained by Andy Casey.\nCurrently, it is only possible to download the bibtex entries from ADS, update of existing entries or other features are not yet available.</p>\n<p>The search is performed through the API in the same way it could be performed by writing a complex search string in the <a href=\"https://ui.adsabs.harvard.edu/\" rel=\"nofollow\">new UI version</a>.\nFor a description of the syntax used in the ADS searches, see <a href=\"https://adsabs.github.io/help/search/search-syntax\" rel=\"nofollow\">this page</a>.</p>\n<h2>3. Command line usage</h2>\n<p>Some functions are available also as simple command line instructions,\nso they can be included in any non-graphical script.</p>\n<p>The usage is simple:</p>\n<pre><code>/path/to/PhysBiblio.exe &lt;command&gt; [options]\n</code></pre>\n<p>The list of available commands includes:</p>\n<ul>\n<li><code>gui</code>: run the graphical interface (default if no options are used).</li>\n<li><code>test</code>: execute the test suite.</li>\n<li><code>clean</code>: process all the bibtex entries in the database to remove bad characters and reformat them.</li>\n<li><code>cli</code>: internal command line interface to work with internal commands. Mainly intended for developing.</li>\n<li><code>daily</code>: see <a href=\"#inspire-oai\" rel=\"nofollow\">here</a>.</li>\n<li><code>dates</code>: see <a href=\"#inspire-oai\" rel=\"nofollow\">here</a>.</li>\n<li><code>export</code>:\nexport all the bibtex entries in the database, creating a file with the given <code>filename</code>.\nIf already existing, the file will be overwritten.</li>\n<li><code>tex</code>:\nread one or more <code>.tex</code> files,\nscanning for <code>\\cite</code> or similar commands, and generate a single <code>.bib</code> file\nwith the required bibtex entries to compile the set of <code>.tex</code> files.\nIf they are in the local database, the bibtexs are just copied into the output file,\notherwise the script will connect to INSPIRE-HEP to download the entries,\nwhich will be stored in the database and in the output file.\nIf <code>outputfile</code> exists, a backup copy will be created.</li>\n<li><code>update</code>:\nfor each of the entries in the database, if required, get updated information from INSPIRE-HEP (publication info or title updates, for example).\nYou are encouraged not to use this function if you have a large database, see <a href=\"#inspire-oai\" rel=\"nofollow\">here</a> instead.</li>\n<li><code>weekly</code>: see <a href=\"#inspire-oai\" rel=\"nofollow\">here</a>.</li>\n</ul>\n<p>The best ways to know how to use the various sub-commands and options are</p>\n<pre><code>/path/to/PhysBiblio.exe -h\n/path/to/PhysBiblio.exe &lt;command&gt; -h\n</code></pre>\n<h2>4. Data paths</h2>\n<p>PhysBiblio now saves data, by default, in the directories specified by the <code>appdirs</code> package using <code>user_config_dir</code> and <code>user_data_dir</code>.\nBoth the directories are indicated at the beginning when launching <code>PhysBiblio.exe</code> via command line.</p>\n<p>The stored configuration includes a <code>profiles.db</code> file, containing the information on the existing profiles.</p>\n<p>The stored data include:</p>\n<ul>\n<li>a <code>pdf/</code> subfolder, with the PDF for all the papers. This is usually shared among all the profiles, unless you set different paths in the configuration of each profile;</li>\n<li>sets of <code>.db</code> and <code>.log</code> files, which contain the database and an error log for each profile.</li>\n</ul>\n<p>You can change some of the paths and file names in the configuration.\nPlease note that changing the configuration <strong>will not move</strong> the existing files into the new locations.</p>\n<h2>5. Acknowledgments</h2>\n<p>This software is part of a project that has received funding from the European Union's Horizon 2020 research and innovation programme, under the Marie Sk\u0142odowska-Curie grant agreement No 796941.</p>\n<p>Icons adopted in the GUI are mainly from the <a href=\"https://github.com/KDE/breeze-icons\" rel=\"nofollow\">Breeze-icons</a> theme, from <a href=\"https://www.kde.org/\" rel=\"nofollow\">KDE</a>.</p>\n\n          </div>"}, "last_serial": 6919468, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "3c21608497c4e9a16ce791fceb43c250", "sha256": "c154237ce5bf65f64293f0ed0ff1fa553e4210a8528201e0eb75e1ccf5c848db"}, "downloads": -1, "filename": "physbiblio-0.2.0.tar.gz", "has_sig": false, "md5_digest": "3c21608497c4e9a16ce791fceb43c250", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 401466, "upload_time": "2018-04-21T14:37:18", "upload_time_iso_8601": "2018-04-21T14:37:18.506094Z", "url": "https://files.pythonhosted.org/packages/af/cb/df244319a9c5b0341d95ff670aff86aa3f35f6ba819e0bbfe9683ab35962/physbiblio-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cba01dad432e13dcbc895dc87936e00c", "sha256": "4dd143ba4bfc6e476c3d5d54bdc8b2dc041ff5d8587c05a40355c58871e6c06f"}, "downloads": -1, "filename": "physbiblio-0.2.1.tar.gz", "has_sig": false, "md5_digest": "cba01dad432e13dcbc895dc87936e00c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 404984, "upload_time": "2018-04-27T16:11:17", "upload_time_iso_8601": "2018-04-27T16:11:17.605403Z", "url": "https://files.pythonhosted.org/packages/52/d5/a705c3f5888680657f1ac64d6a119c50c2e5bb6d1b4acda4672d00680f1d/physbiblio-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "0d588ff0696940d384684f7e19efdc29", "sha256": "686d6904999b0290529237fc2d3565f53a3420afa3256801e91a4f2354502bcc"}, "downloads": -1, "filename": "physbiblio-0.2.2.tar.gz", "has_sig": false, "md5_digest": "0d588ff0696940d384684f7e19efdc29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 413030, "upload_time": "2018-05-01T20:11:03", "upload_time_iso_8601": "2018-05-01T20:11:03.157487Z", "url": "https://files.pythonhosted.org/packages/d6/61/baf3e7ec9b346cd442442c6181471a8803b45cd16e3aa477692a3b68a884/physbiblio-0.2.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "59f6b18c7718b3e98113f419909c6d0b", "sha256": "5fa7dd5eaa4deff7f8f2eee35fd3c242aa3041a39c6cc923ff631fef9cbb4e7f"}, "downloads": -1, "filename": "physbiblio-0.3.0.tar.gz", "has_sig": false, "md5_digest": "59f6b18c7718b3e98113f419909c6d0b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 414984, "upload_time": "2018-05-08T08:42:19", "upload_time_iso_8601": "2018-05-08T08:42:19.009735Z", "url": "https://files.pythonhosted.org/packages/25/13/302783f97fcf607dfc36b6d8b64a5f2d12748f2beb70b4a8962ab52422ba/physbiblio-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "d029b04b37582b45dd4403bd4003e0be", "sha256": "2bfc1114bbc7a5a1ff9741b54c43aa9fa3935f143c8ffbd1c2ed8d6daa0b70fd"}, "downloads": -1, "filename": "physbiblio-0.4.0.tar.gz", "has_sig": false, "md5_digest": "d029b04b37582b45dd4403bd4003e0be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 420390, "upload_time": "2018-05-20T20:27:49", "upload_time_iso_8601": "2018-05-20T20:27:49.244542Z", "url": "https://files.pythonhosted.org/packages/af/e1/a8c9c917c952505136ac7781ce7b3c6875da5b1e3f24cc7654a5d6280e55/physbiblio-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "83c5d3b126712247e10090b6754f26fe", "sha256": "d13951bfd2b2f32d24a935b159820043fa9c407cfaf2e9d633326e5a7ff13d8f"}, "downloads": -1, "filename": "physbiblio-0.4.1.tar.gz", "has_sig": false, "md5_digest": "83c5d3b126712247e10090b6754f26fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 420731, "upload_time": "2018-05-21T17:23:53", "upload_time_iso_8601": "2018-05-21T17:23:53.168087Z", "url": "https://files.pythonhosted.org/packages/3f/e9/5d757cc2097a8c4096c342827425a6816861b205a178420d7937318efe05/physbiblio-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "8612819366bd40e73d103cf7f3cdb922", "sha256": "b14c795ced357505924eaf7afcf945083068c2a1fdf68eb74bf611b725c49ce6"}, "downloads": -1, "filename": "physbiblio-0.4.2.tar.gz", "has_sig": false, "md5_digest": "8612819366bd40e73d103cf7f3cdb922", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 423222, "upload_time": "2018-05-24T13:41:46", "upload_time_iso_8601": "2018-05-24T13:41:46.512100Z", "url": "https://files.pythonhosted.org/packages/b0/4d/48331e16970e41c0a100ba1ac2714f1a054803cdfad39d35b21f3aef1c5e/physbiblio-0.4.2.tar.gz", "yanked": false}], "0.4.3.post0": [{"comment_text": "", "digests": {"md5": "dbe8d49db081a4fee963108cb94cb8b3", "sha256": "c9d911798eae46e96b04cdf65105b524ae08fd96075abb95535d2bbf7428d7da"}, "downloads": -1, "filename": "physbiblio-0.4.3.post0.tar.gz", "has_sig": false, "md5_digest": "dbe8d49db081a4fee963108cb94cb8b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 425615, "upload_time": "2018-05-28T21:58:03", "upload_time_iso_8601": "2018-05-28T21:58:03.718199Z", "url": "https://files.pythonhosted.org/packages/89/c3/daee6318d041762b2f840254b8eab3da9c107fa6f0420557414b9bf2086c/physbiblio-0.4.3.post0.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "baa693317eb47c678943f7224b147669", "sha256": "64014c62910b09ee4938e409d2511731daa3c9b676ec10d15ce6cd88f547d92c"}, "downloads": -1, "filename": "physbiblio-0.4.4.tar.gz", "has_sig": false, "md5_digest": "baa693317eb47c678943f7224b147669", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 426298, "upload_time": "2018-06-13T19:44:12", "upload_time_iso_8601": "2018-06-13T19:44:12.180741Z", "url": "https://files.pythonhosted.org/packages/8b/96/f2506a04814f1047bd3115edc24160a3e650ad48277a1d9a7fc91bac5f40/physbiblio-0.4.4.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "6311f96c6d98dd4be802385a973fcc4c", "sha256": "4bc320b7ffe189c67bb4596a27feabcd81065608bc20593a13db49176fb83480"}, "downloads": -1, "filename": "physbiblio-0.5.0.tar.gz", "has_sig": false, "md5_digest": "6311f96c6d98dd4be802385a973fcc4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 429728, "upload_time": "2018-06-24T15:33:19", "upload_time_iso_8601": "2018-06-24T15:33:19.334702Z", "url": "https://files.pythonhosted.org/packages/8f/c3/72667ab669460fa30713cf30e345bd12f3fb651416a374db996eabab1af3/physbiblio-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "607aebbe0d7e8df09aec0f3f8babe3c2", "sha256": "d4f5b0874a2f34e665a09c7a82ed6ea09ffa782ebbb03a3ff0dff92406aa736d"}, "downloads": -1, "filename": "physbiblio-0.5.1.tar.gz", "has_sig": false, "md5_digest": "607aebbe0d7e8df09aec0f3f8babe3c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 430248, "upload_time": "2018-07-02T17:04:10", "upload_time_iso_8601": "2018-07-02T17:04:10.280429Z", "url": "https://files.pythonhosted.org/packages/b4/d7/01500f48f79d6417e4bd5c36c20cc2cce2c0aef1e9f21f37d7e4fd057620/physbiblio-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "18fff9699391a2823b163619219a6f00", "sha256": "a2616265a94898159f0ae02e9ee4b8594d9ced878fe9e6aff595290f0b7e5729"}, "downloads": -1, "filename": "physbiblio-0.5.2.tar.gz", "has_sig": false, "md5_digest": "18fff9699391a2823b163619219a6f00", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 430625, "upload_time": "2018-07-05T13:24:56", "upload_time_iso_8601": "2018-07-05T13:24:56.895896Z", "url": "https://files.pythonhosted.org/packages/9f/54/21e735bf480cb686c949f4e997c9dd2696e26db854b6852f6988a42fb898/physbiblio-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "c8e53b8886f6bb5ee4ab16d138401e48", "sha256": "df54e4e73ad898aa876b4ca826fd7bf796c4bd99481d25768c8ffb9f4511353b"}, "downloads": -1, "filename": "physbiblio-0.5.3.tar.gz", "has_sig": false, "md5_digest": "c8e53b8886f6bb5ee4ab16d138401e48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 433242, "upload_time": "2018-09-04T07:55:47", "upload_time_iso_8601": "2018-09-04T07:55:47.092526Z", "url": "https://files.pythonhosted.org/packages/e5/87/6e422499e00cf54998d2bebe7360008e3ed17ecdfd9036441def8da60f45/physbiblio-0.5.3.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "fe24304b8e6b67010ad58c5926da1748", "sha256": "3d37449877dd93d3a5148a17a7f071629f74774b3e80c80fc4b9eb48c012f7ef"}, "downloads": -1, "filename": "physbiblio-0.6.0.tar.gz", "has_sig": false, "md5_digest": "fe24304b8e6b67010ad58c5926da1748", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 431322, "upload_time": "2018-10-03T16:06:46", "upload_time_iso_8601": "2018-10-03T16:06:46.529524Z", "url": "https://files.pythonhosted.org/packages/79/d0/8b87480c719ac87509d1f6628d76280b7deaa687ea4c53a949a6a9bbda33/physbiblio-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "177cb4ef8243d26c42214d6e047b142c", "sha256": "d47c3dcaf1b893ad426c7c9422546a6dac19421f6b39c1f1f29c30f7cbc813a4"}, "downloads": -1, "filename": "physbiblio-0.6.1.tar.gz", "has_sig": false, "md5_digest": "177cb4ef8243d26c42214d6e047b142c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 432962, "upload_time": "2018-10-09T14:02:34", "upload_time_iso_8601": "2018-10-09T14:02:34.732714Z", "url": "https://files.pythonhosted.org/packages/dd/d2/2a5cac95a316a4fdafd10fb5a9f2dc935ad55b6777e6c568737554ab425d/physbiblio-0.6.1.tar.gz", "yanked": false}], "0.9.0": [{"comment_text": "", "digests": {"md5": "e47e6222078a5359a378fc904a590041", "sha256": "3fe5b701f06c2598d9f2c613e314773cc8f7cfdce9bed2c7a7d442e0aafe218a"}, "downloads": -1, "filename": "physbiblio-0.9.0.tar.gz", "has_sig": false, "md5_digest": "e47e6222078a5359a378fc904a590041", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 367937, "upload_time": "2018-11-10T20:26:03", "upload_time_iso_8601": "2018-11-10T20:26:03.140229Z", "url": "https://files.pythonhosted.org/packages/5c/47/df01175b493c16c5809a5d4117a5b976eb8f8fe91ed2c7e1d984710b4b48/physbiblio-0.9.0.tar.gz", "yanked": false}], "0.9.1": [{"comment_text": "", "digests": {"md5": "4ee1d8190c12b2e67628886612a49e90", "sha256": "6fbc480e4c2adb9ab8d2dcd1dc0929d3208ce091dddbaace136feb93ce99021e"}, "downloads": -1, "filename": "physbiblio-0.9.1.tar.gz", "has_sig": false, "md5_digest": "4ee1d8190c12b2e67628886612a49e90", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 372373, "upload_time": "2018-11-20T15:58:26", "upload_time_iso_8601": "2018-11-20T15:58:26.655977Z", "url": "https://files.pythonhosted.org/packages/79/2d/27d843d771c1f4d1b2a3aa29901c0321702acfeb585ec780c310e6bcc889/physbiblio-0.9.1.tar.gz", "yanked": false}], "0.9.2": [{"comment_text": "", "digests": {"md5": "53027a5b4f8b991c641ca15de08ffbc5", "sha256": "3ac76b575d598862cd5f8b980dad46c075a4ab03b56290ecc85b79b861a29cf4"}, "downloads": -1, "filename": "physbiblio-0.9.2.tar.gz", "has_sig": false, "md5_digest": "53027a5b4f8b991c641ca15de08ffbc5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 371073, "upload_time": "2018-11-29T15:16:20", "upload_time_iso_8601": "2018-11-29T15:16:20.549794Z", "url": "https://files.pythonhosted.org/packages/d5/c4/7dad38a8feecc8204b79e8f62bd7c30d065afabc77414fe8fea6ec17c2ae/physbiblio-0.9.2.tar.gz", "yanked": false}], "0.9.3": [{"comment_text": "", "digests": {"md5": "116ab616c23da8db65796f52896daff1", "sha256": "e57baba827eb6bfa394c512218a2a9eff3105982c5631d566761d106194cb52c"}, "downloads": -1, "filename": "physbiblio-0.9.3.tar.gz", "has_sig": false, "md5_digest": "116ab616c23da8db65796f52896daff1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 371611, "upload_time": "2018-11-30T10:31:19", "upload_time_iso_8601": "2018-11-30T10:31:19.265843Z", "url": "https://files.pythonhosted.org/packages/73/06/005651ab2f24bff154970a6e2b0863b1313eeea43de67e721338a79aefed/physbiblio-0.9.3.tar.gz", "yanked": false}], "0.9.4": [{"comment_text": "", "digests": {"md5": "ced5267f75cef4b54bfefc2e22ce30a0", "sha256": "008964c367a24485b66064a2123172907f0d42c72ab8bf49aae7e0ac51319841"}, "downloads": -1, "filename": "physbiblio-0.9.4.tar.gz", "has_sig": false, "md5_digest": "ced5267f75cef4b54bfefc2e22ce30a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 375065, "upload_time": "2018-12-06T14:28:41", "upload_time_iso_8601": "2018-12-06T14:28:41.705360Z", "url": "https://files.pythonhosted.org/packages/dc/50/d34a75244847329a6566b9d1b59f48023fcbf92e5960d52badaf7175cc9b/physbiblio-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "f56e58f1d4cd97967c030c88629c9737", "sha256": "7b09878613dbd9d78d58ee90cb1a0203b9830dd70d5e8d3112ff85ddc63c9492"}, "downloads": -1, "filename": "physbiblio-0.9.5.tar.gz", "has_sig": false, "md5_digest": "f56e58f1d4cd97967c030c88629c9737", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 381083, "upload_time": "2018-12-28T20:28:28", "upload_time_iso_8601": "2018-12-28T20:28:28.231441Z", "url": "https://files.pythonhosted.org/packages/8b/5e/99ecd736ecea7b96faaf52f484ca4fc53d08eab77f04645bfc72a79da6e4/physbiblio-0.9.5.tar.gz", "yanked": false}], "0.9.6": [{"comment_text": "", "digests": {"md5": "b320113147f2e7530a1f63a211dd38d5", "sha256": "283ab22a9a300cb658d901a75848a683121ec325c760ec81abc630d4fe2fedf7"}, "downloads": -1, "filename": "physbiblio-0.9.6.tar.gz", "has_sig": false, "md5_digest": "b320113147f2e7530a1f63a211dd38d5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 382436, "upload_time": "2018-12-30T22:34:21", "upload_time_iso_8601": "2018-12-30T22:34:21.573915Z", "url": "https://files.pythonhosted.org/packages/bd/62/4036104ce915a58e0088b7ad058115b76be308a8a446fd7d630a3ecca0cc/physbiblio-0.9.6.tar.gz", "yanked": false}], "0.9.7": [{"comment_text": "", "digests": {"md5": "784df8bd5dedd8ae57abe720859e5384", "sha256": "7ac1302bd5029967d46cda4e774d6af74599443c7ed856544b6964880e6dd9d7"}, "downloads": -1, "filename": "physbiblio-0.9.7.tar.gz", "has_sig": false, "md5_digest": "784df8bd5dedd8ae57abe720859e5384", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 386811, "upload_time": "2019-01-26T23:45:43", "upload_time_iso_8601": "2019-01-26T23:45:43.552211Z", "url": "https://files.pythonhosted.org/packages/41/ad/bfbc6a2e7224b04031ef4886610025990d7ab866aad5170d3b53d829601d/physbiblio-0.9.7.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "1d735b125fafc9a7aeedf2554fd60597", "sha256": "c62d68bd1bee24e237e8e3a4237dc7a57b8acdabb6d7750adf2232cded9643c5"}, "downloads": -1, "filename": "physbiblio-1.0.0.tar.gz", "has_sig": false, "md5_digest": "1d735b125fafc9a7aeedf2554fd60597", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 389218, "upload_time": "2019-02-18T12:42:34", "upload_time_iso_8601": "2019-02-18T12:42:34.848312Z", "url": "https://files.pythonhosted.org/packages/29/1c/8c604a0a191dcace11e2b2b93c8398ff5eeb47dd58abe1383fe1e8aff91b/physbiblio-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "7f793927572bf5194cd1d867e9b6f226", "sha256": "15e1f8b816a4514dd1d57b3f2d610ca7b83fd335791d0c0fffa68513474e9c68"}, "downloads": -1, "filename": "physbiblio-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7f793927572bf5194cd1d867e9b6f226", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 390816, "upload_time": "2019-03-16T12:12:31", "upload_time_iso_8601": "2019-03-16T12:12:31.900812Z", "url": "https://files.pythonhosted.org/packages/26/a9/c078394ca02e3617b0bec68eea138baca8474286951eda77da626fe15e8a/physbiblio-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "3e5706e95d7a6ecd04899b5cdd34b6ea", "sha256": "a34058757899b91423f12aa3ad67ca562e34909a94c0e5e179f405397a4491a5"}, "downloads": -1, "filename": "physbiblio-1.1.1.tar.gz", "has_sig": false, "md5_digest": "3e5706e95d7a6ecd04899b5cdd34b6ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 391527, "upload_time": "2019-04-22T21:45:14", "upload_time_iso_8601": "2019-04-22T21:45:14.677383Z", "url": "https://files.pythonhosted.org/packages/a7/27/d3a3e89a2c911b8533670dff53c60665c48e1f56fc5822d36e4e64aabf13/physbiblio-1.1.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "25c261410e2bf8bf5cb9e6087935acac", "sha256": "213805970297247f0a7a9dc9f3355e1e0bd6696fd6a19b10990edd269ec98e51"}, "downloads": -1, "filename": "physbiblio-1.2.0.tar.gz", "has_sig": false, "md5_digest": "25c261410e2bf8bf5cb9e6087935acac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 506871, "upload_time": "2019-06-04T10:52:27", "upload_time_iso_8601": "2019-06-04T10:52:27.297967Z", "url": "https://files.pythonhosted.org/packages/a7/9a/dcc190073fca4842dfcaf622a1947cae16c7f6d5fb3bfcdfcbe8a72638bd/physbiblio-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "af780c933f0662ec7f57985230f4596e", "sha256": "0029d64aac68c8a6c5bd92245eda37ecf7976d8bac53338e12623bd5c17c6261"}, "downloads": -1, "filename": "physbiblio-1.2.1.tar.gz", "has_sig": false, "md5_digest": "af780c933f0662ec7f57985230f4596e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 506899, "upload_time": "2019-06-04T16:15:40", "upload_time_iso_8601": "2019-06-04T16:15:40.105416Z", "url": "https://files.pythonhosted.org/packages/76/63/34ec533ae1428b5f89d15acc4cd03909ac4c0fb27e189a67fc1a7cd22058/physbiblio-1.2.1.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "aab7fb43ab7f2487c979f2b2a244cbd7", "sha256": "2c9c924285bad36d1b7ba6c384899d9ea1ff4dbc2d7b724cf1aab8dabbe2b077"}, "downloads": -1, "filename": "physbiblio-1.3.0.tar.gz", "has_sig": false, "md5_digest": "aab7fb43ab7f2487c979f2b2a244cbd7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 509199, "upload_time": "2019-07-23T10:59:12", "upload_time_iso_8601": "2019-07-23T10:59:12.735026Z", "url": "https://files.pythonhosted.org/packages/cc/c1/11ac76c6dc10857d38fc0a32064579fb6fb8beddb5dad7e90b3ee7cd6087/physbiblio-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "1dbf8ff778ad13ceb0431fcd13917111", "sha256": "2b454c147e07b1ccb0134e4374a6b09f03e24a57301c38685f7e6a267ac6d5d4"}, "downloads": -1, "filename": "physbiblio-1.4.0.tar.gz", "has_sig": false, "md5_digest": "1dbf8ff778ad13ceb0431fcd13917111", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 518386, "upload_time": "2019-10-08T12:09:46", "upload_time_iso_8601": "2019-10-08T12:09:46.726779Z", "url": "https://files.pythonhosted.org/packages/1a/a4/ff6f0fc256c6b83e600cf9faf43e9dc571f3b1b564b8a87d4aac9668f347/physbiblio-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "8f1b5f6cbddfb44478331980460756e0", "sha256": "e695720ef5e6cde854e8db9cf669c5157c38947571c226c7fa48368d86b48cc4"}, "downloads": -1, "filename": "physbiblio-1.4.1.tar.gz", "has_sig": false, "md5_digest": "8f1b5f6cbddfb44478331980460756e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 518997, "upload_time": "2019-10-14T10:40:32", "upload_time_iso_8601": "2019-10-14T10:40:32.702621Z", "url": "https://files.pythonhosted.org/packages/a3/c4/8a1213b0fda861a8b9c58b6be886e92e5b8e69a42f1cea8d2f88758064d9/physbiblio-1.4.1.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "d6969188c126e84fd6087dad1a25b26f", "sha256": "fd2b6080974162c8e50ad4e0da4746ff7f7306613606001fe498029011814132"}, "downloads": -1, "filename": "physbiblio-1.4.2.tar.gz", "has_sig": false, "md5_digest": "d6969188c126e84fd6087dad1a25b26f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 520173, "upload_time": "2019-10-15T10:21:27", "upload_time_iso_8601": "2019-10-15T10:21:27.692368Z", "url": "https://files.pythonhosted.org/packages/0e/8c/79f6fbe0b942ff025b1bbf66f4e38c7f2cf46c954c9ed9cff5623a250c7c/physbiblio-1.4.2.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "8ccfe678061db30c226262db176bf7de", "sha256": "ad1378a8c3ce170d9b93d34d7a4e6b1eec2371bd988de72fe1bba98cc490cf50"}, "downloads": -1, "filename": "physbiblio-1.5.0.tar.gz", "has_sig": false, "md5_digest": "8ccfe678061db30c226262db176bf7de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 542063, "upload_time": "2020-02-01T04:36:48", "upload_time_iso_8601": "2020-02-01T04:36:48.837263Z", "url": "https://files.pythonhosted.org/packages/01/a8/7c9a6c86097711c22e4d6ad7716897f2be3197cf84fae53d0c3db19259d0/physbiblio-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "dbbd2360a4bcb6794476626b1f109284", "sha256": "1ff5a5ca73b589ad8b25f7ff89b706c9dddc1db00401056a1eec530949e3a03e"}, "downloads": -1, "filename": "physbiblio-1.5.1.tar.gz", "has_sig": false, "md5_digest": "dbbd2360a4bcb6794476626b1f109284", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544501, "upload_time": "2020-03-30T13:55:36", "upload_time_iso_8601": "2020-03-30T13:55:36.296138Z", "url": "https://files.pythonhosted.org/packages/be/bf/242e40300a8a0244caef37b21d22c491b90da4b4c81b253235acdcbe5ddd/physbiblio-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "3d3824331a43121920b5e182c1f6c59a", "sha256": "a60fca6f0e13cdabce45a0091b85b5ae538c0498062e2efea56b75543e4000c9"}, "downloads": -1, "filename": "physbiblio-1.5.2.tar.gz", "has_sig": false, "md5_digest": "3d3824331a43121920b5e182c1f6c59a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544640, "upload_time": "2020-03-31T11:20:08", "upload_time_iso_8601": "2020-03-31T11:20:08.407105Z", "url": "https://files.pythonhosted.org/packages/87/83/337f2a700e1cf52f80c47e7249fe3f0b209c489aadd68213a07297fb965f/physbiblio-1.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3d3824331a43121920b5e182c1f6c59a", "sha256": "a60fca6f0e13cdabce45a0091b85b5ae538c0498062e2efea56b75543e4000c9"}, "downloads": -1, "filename": "physbiblio-1.5.2.tar.gz", "has_sig": false, "md5_digest": "3d3824331a43121920b5e182c1f6c59a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 544640, "upload_time": "2020-03-31T11:20:08", "upload_time_iso_8601": "2020-03-31T11:20:08.407105Z", "url": "https://files.pythonhosted.org/packages/87/83/337f2a700e1cf52f80c47e7249fe3f0b209c489aadd68213a07297fb965f/physbiblio-1.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:13 2020"}