{"info": {"author": "Alpha Team @ DWX", "author_email": "content@darwinex.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business :: Financial :: Investment"], "description": "|PyVersion| |Status| |PyPiVersion| |License| |Docs| |Downloads|\n\nIntroduction\n============\n\nThis is the **D\u03b1rwinex APIs Python** package. \n\nWith this package you will be able to access all the different APIs that Darwinex offers\nand access all the functionality they actually implement.\n\nBear in mind that the APIs are in constant development and some things might evolve as time passes.\n\nBe sure to take a look at the\n`Darwinex API main website <https://www.darwinex.com/es/algorithmic-trading/darwin-api>`_,\nand the `API docs <https://api.darwinex.com/store/>`_.\n\nImportant Notes\n================\n\n**NOTE:** This package will evolve **A LOT** going forward, so be sure to hit the **Watch** button to stay tuned\non new developments and features.\n\n**NOTE 2:** As the package evolves, we will provide code examples that will deal with exception handling and practical use cases of it. At this point \nin time, the package is released **AS IS** and the user is responsible of handling any specific cases for their application.\n\nAPI Access Tokens\n==================\n\nIf you request access to all the APIs in the platform, the ``access_token`` will be valid for just a brief period of time (exactly\naround 3600 seconds). However, if you request access to just the data APIs the valid token will last for around six months.\n\nQuotes stating the same are the following:\n\n    * Access to all the APIs: The access token will be valid for a brief period of time. New tokens can automatically be generated through Refresh Token grant or requesting access again via this page.\n\n    * Access to the DARWIN data APIs: This token will be valid for around 6 months unless you cancel it.\n\nIf for some reason you would like to use the ``refresh_token`` to be able to generate new ``access_token`` when the expiration time reaches (i.e. the trading and Investor Accounts APIs are going to be used on a constant basis), this package implements the functionality to do so in the ``DWX_API_Auth`` module; it just checks if the expiration time has reached and it uses the ``refresh_token`` to get a new ``access_token``.\n\nExplanation\n===========\n\nThe **DARWIN API Suite** is composed of the following 5 APIs:\n\n* **DARWIN Info API** - access the entire universe of DARWIN quotes and scores\n* **DARWIN Trading API** - Buy/Sell DARWINs, set conditional SLs and TPs\n* **Investor Accounts API** - Monitor the evolution of your positions in real-time\n* **DARWIN Quotes API** - Stream tick-level DARWIN quotes in real-time.\n* **Quote Web Socket API** - Subscribe to real-time DARWIN quotes via Web Sockets.\n\nAlternatively, you will also find **TickData APIs** for traditional assets listed in Darwinex.\n\nAdding to this, there is also the **Darwin Data Analytics API** and you will find more information about it\nin the dedicated **README** in its own folder.\n\nFirst four APIs > **REST APIs (Info, Trading; Investor Accounts, Quotes)**\n=================================================================================\n\n**REST** is acronym for **REpresentational State Transfer**. A RESTful API is an application program interface (API) that uses HTTP requests to ``GET``, ``PUT``, ``POST`` and ``DELETE`` data. In most cases, the returned response is a JSON object holding all the neccesary data. As the communication protocol is HTTP, the REST APIs can be accessed from most modern programming languages.\n\nA **RESTful** web service request contains:\n\n* **An Endpoint URL**: An application implementing a RESTful API will define one or more URL endpoints with a domain, port, path, and/or querystring.\n\n* **The HTTP method**: Differing ``HTTP`` methods can be used on any endpoint which map to application create, read, update, and delete (CRUD) operations.\n\n* **HTTP headers**: Information such as authentication tokens or cookies can be contained in the ``HTTP`` request header.\n\n* **Body Data**: Data is normally transmitted in the ``HTTP`` body in an identical way to ``HTML`` <form> submissions or by sending a single JSON-encoded data string.\n\nFifth API > **WebSockets-based API**\n==================================================\n\n**WebSockets** provide a persistent connection between a client and server that both parties can use to start sending data at any time. The client establishes a WebSocket connection through a process known as the WebSocket handshake.\n\n**WebSocket** URLs use the ``ws`` scheme. There is also ``wss`` for secure WebSocket connections which is the equivalent of ``HTTPS``.\n\nThey are mostly use for streaming data without incurring in the software/hardware costs and overheads of ``HTTP`` resquest-response mechanism.\n\nInstallation\n============\n\nThe package can be installed via ``pip`` as follows:\n\n::\n\n    pip install darwinexapis\n\n    # If you would like to upgrade the version:\n\n    pip install -U darwinexapis \n\nIf you want to install the package in development mode, you just need to change your working directory to the ``/darwinexapis/`` and issue:\n\n::\n\n    pip install -e .\n\nExample DARWIN API Suite\n========================\n\nThe below code is a complete script to start playing with the different DARWIN Suite APIs.\n\nPrior to working with it, you should go to the Darwinex API icon in the Darwinex Platform and generate your TOKEN (the one that matters is the Access Token).\n\n.. code-block:: python\n\n    # Let's import the different classes:\n    from darwinexapis.API.InfoAPI.DWX_Info_API import DWX_Info_API\n    from darwinexapis.API.InvestorAccountInfoAPI.DWX_AccInfo_API import DWX_AccInfo_API\n    from darwinexapis.API.QuotesAPI.DWX_Quotes_API import DWX_Quotes_API\n    from darwinexapis.API.TradingAPI.DWX_Trading_API import DWX_Trading_API\n    from darwinexapis.API.WebSocketAPI.DWX_WebSocket_API import DWX_WebSocket_API\n\n    ### Let's create the authentication dictionary:\n    AUTH_CREDS = {'access_token': 'YOUR_ALPHA_TOKEN',\n                  'consumer_key': 'YOUR_ALPHA_TOKEN',\n                  'consumer_secret': 'YOUR_ALPHA_TOKEN',\n                  'refresh_token': 'YOUR_ALPHA_TOKEN'}\n\n    # Let's instantiate some API objects:\n    darwinexInfo = DWX_Info_API(AUTH_CREDS, _version=2.0, _demo=True)\n    darwinexInvestorAcc = DWX_AccInfo_API(AUTH_CREDS, _version=2.0, _demo=True)\n    darwinexQuotes = DWX_Quotes_API(AUTH_CREDS, _version=1.0)\n    darwinexTrading = DWX_Trading_API(AUTH_CREDS, _version=1.1, _demo=True)\n    darwinexWebSocket = DWX_WebSocket_API(AUTH_CREDS, _version=0.0)\n\n    # DWX_Info_API:\n    darwinUniverse = darwinexInfo._Get_DARWIN_Universe_(_status='ACTIVE', \n                                                        _iterate=True, \n                                                        _perPage=100)\n    print(darwinUniverse)\n\n    # DWX_AccInfo_API:\n    print(darwinexInvestorAcc._Get_Accounts_())\n\n    # DWX_Quotes_API:\n    darwinexQuotes._stream_quotes_()\n    darwinexQuotes._process_stream_(_symbols=[\"ENH.4.16\"], \n                                    _plot=False)\n\n    # DWX_Trading_API:\n    print(darwinexTrading._Get_Permitted_Operations_())\n    print(darwinexTrading._Get_Account_Leverage_(_id=0))\n\n    # DWX_WebSocket_API:\n    darwinexWebSocket.run(_symbols=[\"ENH.4.16\", \n                                    \"CIS.4.11\", \n                                    \"CGT.4.5\",\n                                    \"CDG.4.14\", \n                                    \"ABH.4.21\", \n                                    \"ENO.4.13\"])\n\nExample TickData APIs\n=====================\n\nThe below code is a complete script to start playing with the different TickData APIs.\n\nPrior to working with it, you should go to the Darwinex API icon in the Darwinex Platform and generate your TOKEN (the one that matters is the Access Token).\n\n.. code-block:: python\n\n    # Import the different classes:\n    from darwinexapis.API.TickDataAPI.DWX_TickData_Downloader_API import \\\n        DWX_TickData_Downloader_API\n\n    # Let's create the access token variable:\n    FTP_CRED = {\"username\": \"your_alpha_username\",\n                \"password\": \"your_alpha_password\",\n                \"ftpServer\": \"tickdata.darwinex.com\"}\n\n    # Downloader:\n    # Try other assets like: GDAXIm, SPN35, XAUUSD... > Watch out with the available dates!\n    DOWNLOADER = DWX_TickData_Downloader_API(dwx_ftp_user=FTP_CRED['username'], \n                                            dwx_ftp_pass=FTP_CRED['password'],\n                                            dwx_ftp_hostname=FTP_CRED['ftpServer'],\n                                            dwx_ftp_port=FTP_CRED['port'])\n\n    # Create the path you wish to save the data:                                         \n    path_to_save = 'EXAMPLE_DATA/'\n\n    ###################################################\n\n    # One hour data (be sure to put the hours with two characters > 0 == 00, 5 == 05, 23 ==23):\n    bid_hour_data = DOWNLOADER._download_one_hour_data_bid(_asset='WS30', \n                                                        _date='2018-10-01', \n                                                        _hour='22',\n                                                        _verbose=True)\n    DOWNLOADER._save_df_to_csv(bid_hour_data, which_path=path_to_save)                                                       \n    DOWNLOADER._save_df_to_pickle(bid_hour_data, which_path=path_to_save)\n\n    ask_hour_data = DOWNLOADER._download_one_hour_data_ask(_asset='WS30', \n                                                        _date='2018-10-01', \n                                                        _hour='22',\n                                                        _verbose=True)\n    DOWNLOADER._save_df_to_csv(ask_hour_data, which_path=path_to_save)                                                       \n    DOWNLOADER._save_df_to_pickle(ask_hour_data, which_path=path_to_save)\n\n    ###################################################\n\n    # One day data (be sure to also put the dates with two characters):\n    bid_day_data = DOWNLOADER._download_one_day_data_bid(_asset='WS30', \n                                                        _date='2018-10-01',\n                                                        _verbose=True)\n    DOWNLOADER._save_df_to_csv(bid_day_data, which_path=path_to_save)                                                     \n    DOWNLOADER._save_df_to_pickle(bid_day_data, which_path=path_to_save)                                                     \n\n    ask_day_data = DOWNLOADER._download_one_day_data_ask(_asset='WS30', \n                                                        _date='2018-10-01',\n                                                        _verbose=True)\n    DOWNLOADER._save_df_to_csv(ask_day_data, which_path=path_to_save)                                                     \n    DOWNLOADER._save_df_to_pickle(ask_day_data, which_path=path_to_save)                                                     \n\n    ###################################################\n\n    # Between two dates data:\n    bid_date_data = DOWNLOADER._download_month_data_bid(_asset='WS30', \n                                                        _start_date='2018-10-01', \n                                                        _end_date='2018-10-04', \n                                                        _verbose=True)\n    DOWNLOADER._save_df_to_csv(bid_date_data, which_path=path_to_save)                                                    \n    DOWNLOADER._save_df_to_pickle(bid_date_data, which_path=path_to_save)                                                    \n\n    ask_date_data = DOWNLOADER._download_month_data_ask(_asset='WS30', \n                                                        _start_date='2018-10-01', \n                                                        _end_date='2018-10-04', \n                                                        _verbose=True)\n    DOWNLOADER._save_df_to_csv(ask_date_data, which_path=path_to_save)                                                    \n    DOWNLOADER._save_df_to_pickle(ask_date_data, which_path=path_to_save)\n\n.. code-block:: python\n\n    # Import the different classes:\n    from darwinexapis.API.TickDataAPI.DWX_TickData_Reader_API import DWX_TickData_Reader_API\n\n    # Reader:\n    bid_file_pkl = 'EXAMPLE_DATA/WS30_BID_2018-10-01_23.pkl'\n    ask_file_pkl = 'EXAMPLE_DATA/WS30_ASK_2018-10-01_23.pkl'\n    path_to_save = 'EXAMPLE_DATA/'\n\n    # Generate the object: \n    READER = DWX_TickData_Reader_API(_bids_file=bid_file_pkl, \n                                    _asks_file=ask_file_pkl)\n\n    # Generate the dataframe: \n    readed_dataframe = READER._get_symbol_as_dataframe_(_convert_epochs=True,\n                                                        _check_integrity=True,\n                                                        _calc_spread=True,\n                                                        _reindex=['ask_price', \n                                                                  'bid_price', \n                                                                  'spread'],\n                                                        _precision='tick')\n\n    # Save it:                                                                                                    \n    READER._save_df_to_csv(readed_dataframe, which_path=path_to_save)\n\nDocumentation\n=============\n\nYou can find the complete `API documentation <https://api.darwinex.com/store/>`_ here. You will be able to understand the different exposed enpoints as well has play around with them to understand the returned JSON messages, whether they result in a succesfull request-response attempt or no.\n\nOther helpful links:\n\n    *  `Darwinex API FAQ and walkthrough <https://help.darwinex.com/api-walkthrough>`_\n    *  `Darwinex Help Center <https://help.darwinex.com/>`_\n\nDiscussion\n==========\n\nThe `Darwinex API Community Forum <https://https://community.darwinex.com/>`_ is one of the places to discuss\nDarwinex API and anything related to it.\n\nFurthermore, you can join the `Darwinex Collective Slack <https://join.slack.com/t/darwinex-collective/shared_invite/enQtNjg4MjA0ODUzODkyLWFiZWZlMDZjNGVmOGE2ZDBiZGI4ZWUxNjM5YTU0MjZkMTQ2NGZjNGIyN2QxZDY4NjUyZmVlNmU3N2E2NGE1Mjk>`_ for Q&A, debug and more.\n\nDisclaimer\n==========\n\nThe software is provided on the conditions of the BSD license that you can find inside the package.\n\n**\u00a1The \u03b1lpha's time has begun!**\n\n:Author: Darwinex Alpha Team <content@darwinex.com>\n\n.. |PyPiVersion| image:: https://img.shields.io/pypi/v/darwinexapis.svg\n   :alt: PyPi\n   :target: https://pypi.python.org/pypi/darwinexapis\n\n.. |PyVersion| image:: https://img.shields.io/badge/python-3.6+-blue.svg\n   :alt:\n\n.. |Status| image:: https://img.shields.io/badge/status-beta-green.svg\n   :alt:\n\n.. |License| image:: https://img.shields.io/badge/license-BSD-blue.svg\n   :alt:\n\n.. |Docs| image:: https://img.shields.io/badge/Documentation-green.svg\n   :alt: Documentation\n   :target: https://https://api.darwinex.com/store/\n\n.. |Downloads| image:: https://pepy.tech/badge/darwinexapis\n   :alt: Number of downloads\n   :target: https://pepy.tech/project/darwinexapis\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/darwinex/darwinexapis", "keywords": "darwinex algorithmic trading quant quantitative analysis asyncio websockets darwins async", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "darwinexapis", "package_url": "https://pypi.org/project/darwinexapis/", "platform": "any", "project_url": "https://pypi.org/project/darwinexapis/", "project_urls": {"Homepage": "https://github.com/darwinex/darwinexapis"}, "release_url": "https://pypi.org/project/darwinexapis/0.3.1/", "requires_dist": ["pandas", "plotly", "matplotlib", "requests", "websockets", "tqdm", "dash", "pyftpdlib", "tables"], "requires_python": ">=3.6", "summary": "Python wrapper for Darwinex APIs", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a042d910c74fbce532a01da853019c164ef42a8/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362b2d626c75652e737667\"> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/48a67e0d829ab96c87d5f7ab114a621c05b6738d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f7374617475732d626574612d677265656e2e737667\"> <a href=\"https://pypi.python.org/pypi/darwinexapis\" rel=\"nofollow\"><img alt=\"PyPi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b80a472799574a83a88092c14544c4d557efff7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f64617277696e6578617069732e737667\"></a> <img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b9171fec0f2756a39e1306c6dc870bf846e0b4f1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4253442d626c75652e737667\"> <a href=\"https://https://api.darwinex.com/store/\" rel=\"nofollow\"><img alt=\"Documentation\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a6072241fe47e7c106a604877b70e5c00da16c5f/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f446f63756d656e746174696f6e2d677265656e2e737667\"></a> <a href=\"https://pepy.tech/project/darwinexapis\" rel=\"nofollow\"><img alt=\"Number of downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df876d7faef194f0579a77b62aac85658c5c6bc7/68747470733a2f2f706570792e746563682f62616467652f64617277696e657861706973\"></a></p>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>This is the <strong>D\u03b1rwinex APIs Python</strong> package.</p>\n<p>With this package you will be able to access all the different APIs that Darwinex offers\nand access all the functionality they actually implement.</p>\n<p>Bear in mind that the APIs are in constant development and some things might evolve as time passes.</p>\n<p>Be sure to take a look at the\n<a href=\"https://www.darwinex.com/es/algorithmic-trading/darwin-api\" rel=\"nofollow\">Darwinex API main website</a>,\nand the <a href=\"https://api.darwinex.com/store/\" rel=\"nofollow\">API docs</a>.</p>\n</div>\n<div id=\"important-notes\">\n<h2>Important Notes</h2>\n<p><strong>NOTE:</strong> This package will evolve <strong>A LOT</strong> going forward, so be sure to hit the <strong>Watch</strong> button to stay tuned\non new developments and features.</p>\n<p><strong>NOTE 2:</strong> As the package evolves, we will provide code examples that will deal with exception handling and practical use cases of it. At this point\nin time, the package is released <strong>AS IS</strong> and the user is responsible of handling any specific cases for their application.</p>\n</div>\n<div id=\"api-access-tokens\">\n<h2>API Access Tokens</h2>\n<p>If you request access to all the APIs in the platform, the <tt>access_token</tt> will be valid for just a brief period of time (exactly\naround 3600 seconds). However, if you request access to just the data APIs the valid token will last for around six months.</p>\n<p>Quotes stating the same are the following:</p>\n<blockquote>\n<ul>\n<li>Access to all the APIs: The access token will be valid for a brief period of time. New tokens can automatically be generated through Refresh Token grant or requesting access again via this page.</li>\n<li>Access to the DARWIN data APIs: This token will be valid for around 6 months unless you cancel it.</li>\n</ul>\n</blockquote>\n<p>If for some reason you would like to use the <tt>refresh_token</tt> to be able to generate new <tt>access_token</tt> when the expiration time reaches (i.e. the trading and Investor Accounts APIs are going to be used on a constant basis), this package implements the functionality to do so in the <tt>DWX_API_Auth</tt> module; it just checks if the expiration time has reached and it uses the <tt>refresh_token</tt> to get a new <tt>access_token</tt>.</p>\n</div>\n<div id=\"explanation\">\n<h2>Explanation</h2>\n<p>The <strong>DARWIN API Suite</strong> is composed of the following 5 APIs:</p>\n<ul>\n<li><strong>DARWIN Info API</strong> - access the entire universe of DARWIN quotes and scores</li>\n<li><strong>DARWIN Trading API</strong> - Buy/Sell DARWINs, set conditional SLs and TPs</li>\n<li><strong>Investor Accounts API</strong> - Monitor the evolution of your positions in real-time</li>\n<li><strong>DARWIN Quotes API</strong> - Stream tick-level DARWIN quotes in real-time.</li>\n<li><strong>Quote Web Socket API</strong> - Subscribe to real-time DARWIN quotes via Web Sockets.</li>\n</ul>\n<p>Alternatively, you will also find <strong>TickData APIs</strong> for traditional assets listed in Darwinex.</p>\n<p>Adding to this, there is also the <strong>Darwin Data Analytics API</strong> and you will find more information about it\nin the dedicated <strong>README</strong> in its own folder.</p>\n</div>\n<div id=\"first-four-apis-rest-apis-info-trading-investor-accounts-quotes\">\n<h2>First four APIs &gt; <strong>REST APIs (Info, Trading; Investor Accounts, Quotes)</strong></h2>\n<p><strong>REST</strong> is acronym for <strong>REpresentational State Transfer</strong>. A RESTful API is an application program interface (API) that uses HTTP requests to <tt>GET</tt>, <tt>PUT</tt>, <tt>POST</tt> and <tt>DELETE</tt> data. In most cases, the returned response is a JSON object holding all the neccesary data. As the communication protocol is HTTP, the REST APIs can be accessed from most modern programming languages.</p>\n<p>A <strong>RESTful</strong> web service request contains:</p>\n<ul>\n<li><strong>An Endpoint URL</strong>: An application implementing a RESTful API will define one or more URL endpoints with a domain, port, path, and/or querystring.</li>\n<li><strong>The HTTP method</strong>: Differing <tt>HTTP</tt> methods can be used on any endpoint which map to application create, read, update, and delete (CRUD) operations.</li>\n<li><strong>HTTP headers</strong>: Information such as authentication tokens or cookies can be contained in the <tt>HTTP</tt> request header.</li>\n<li><strong>Body Data</strong>: Data is normally transmitted in the <tt>HTTP</tt> body in an identical way to <tt>HTML</tt> &lt;form&gt; submissions or by sending a single JSON-encoded data string.</li>\n</ul>\n</div>\n<div id=\"fifth-api-websockets-based-api\">\n<h2>Fifth API &gt; <strong>WebSockets-based API</strong></h2>\n<p><strong>WebSockets</strong> provide a persistent connection between a client and server that both parties can use to start sending data at any time. The client establishes a WebSocket connection through a process known as the WebSocket handshake.</p>\n<p><strong>WebSocket</strong> URLs use the <tt>ws</tt> scheme. There is also <tt>wss</tt> for secure WebSocket connections which is the equivalent of <tt>HTTPS</tt>.</p>\n<p>They are mostly use for streaming data without incurring in the software/hardware costs and overheads of <tt>HTTP</tt> resquest-response mechanism.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The package can be installed via <tt>pip</tt> as follows:</p>\n<pre>pip install darwinexapis\n\n# If you would like to upgrade the version:\n\npip install -U darwinexapis\n</pre>\n<p>If you want to install the package in development mode, you just need to change your working directory to the <tt>/darwinexapis/</tt> and issue:</p>\n<pre>pip install -e .\n</pre>\n</div>\n<div id=\"example-darwin-api-suite\">\n<h2>Example DARWIN API Suite</h2>\n<p>The below code is a complete script to start playing with the different DARWIN Suite APIs.</p>\n<p>Prior to working with it, you should go to the Darwinex API icon in the Darwinex Platform and generate your TOKEN (the one that matters is the Access Token).</p>\n<pre><span class=\"c1\"># Let's import the different classes:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.InfoAPI.DWX_Info_API</span> <span class=\"kn\">import</span> <span class=\"n\">DWX_Info_API</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.InvestorAccountInfoAPI.DWX_AccInfo_API</span> <span class=\"kn\">import</span> <span class=\"n\">DWX_AccInfo_API</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.QuotesAPI.DWX_Quotes_API</span> <span class=\"kn\">import</span> <span class=\"n\">DWX_Quotes_API</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.TradingAPI.DWX_Trading_API</span> <span class=\"kn\">import</span> <span class=\"n\">DWX_Trading_API</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.WebSocketAPI.DWX_WebSocket_API</span> <span class=\"kn\">import</span> <span class=\"n\">DWX_WebSocket_API</span>\n\n<span class=\"c1\">### Let's create the authentication dictionary:</span>\n<span class=\"n\">AUTH_CREDS</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'access_token'</span><span class=\"p\">:</span> <span class=\"s1\">'YOUR_ALPHA_TOKEN'</span><span class=\"p\">,</span>\n              <span class=\"s1\">'consumer_key'</span><span class=\"p\">:</span> <span class=\"s1\">'YOUR_ALPHA_TOKEN'</span><span class=\"p\">,</span>\n              <span class=\"s1\">'consumer_secret'</span><span class=\"p\">:</span> <span class=\"s1\">'YOUR_ALPHA_TOKEN'</span><span class=\"p\">,</span>\n              <span class=\"s1\">'refresh_token'</span><span class=\"p\">:</span> <span class=\"s1\">'YOUR_ALPHA_TOKEN'</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Let's instantiate some API objects:</span>\n<span class=\"n\">darwinexInfo</span> <span class=\"o\">=</span> <span class=\"n\">DWX_Info_API</span><span class=\"p\">(</span><span class=\"n\">AUTH_CREDS</span><span class=\"p\">,</span> <span class=\"n\">_version</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">_demo</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">darwinexInvestorAcc</span> <span class=\"o\">=</span> <span class=\"n\">DWX_AccInfo_API</span><span class=\"p\">(</span><span class=\"n\">AUTH_CREDS</span><span class=\"p\">,</span> <span class=\"n\">_version</span><span class=\"o\">=</span><span class=\"mf\">2.0</span><span class=\"p\">,</span> <span class=\"n\">_demo</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">darwinexQuotes</span> <span class=\"o\">=</span> <span class=\"n\">DWX_Quotes_API</span><span class=\"p\">(</span><span class=\"n\">AUTH_CREDS</span><span class=\"p\">,</span> <span class=\"n\">_version</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"n\">darwinexTrading</span> <span class=\"o\">=</span> <span class=\"n\">DWX_Trading_API</span><span class=\"p\">(</span><span class=\"n\">AUTH_CREDS</span><span class=\"p\">,</span> <span class=\"n\">_version</span><span class=\"o\">=</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"n\">_demo</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">darwinexWebSocket</span> <span class=\"o\">=</span> <span class=\"n\">DWX_WebSocket_API</span><span class=\"p\">(</span><span class=\"n\">AUTH_CREDS</span><span class=\"p\">,</span> <span class=\"n\">_version</span><span class=\"o\">=</span><span class=\"mf\">0.0</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># DWX_Info_API:</span>\n<span class=\"n\">darwinUniverse</span> <span class=\"o\">=</span> <span class=\"n\">darwinexInfo</span><span class=\"o\">.</span><span class=\"n\">_Get_DARWIN_Universe_</span><span class=\"p\">(</span><span class=\"n\">_status</span><span class=\"o\">=</span><span class=\"s1\">'ACTIVE'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_iterate</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_perPage</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">darwinUniverse</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># DWX_AccInfo_API:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">darwinexInvestorAcc</span><span class=\"o\">.</span><span class=\"n\">_Get_Accounts_</span><span class=\"p\">())</span>\n\n<span class=\"c1\"># DWX_Quotes_API:</span>\n<span class=\"n\">darwinexQuotes</span><span class=\"o\">.</span><span class=\"n\">_stream_quotes_</span><span class=\"p\">()</span>\n<span class=\"n\">darwinexQuotes</span><span class=\"o\">.</span><span class=\"n\">_process_stream_</span><span class=\"p\">(</span><span class=\"n\">_symbols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"ENH.4.16\"</span><span class=\"p\">],</span>\n                                <span class=\"n\">_plot</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># DWX_Trading_API:</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">darwinexTrading</span><span class=\"o\">.</span><span class=\"n\">_Get_Permitted_Operations_</span><span class=\"p\">())</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">darwinexTrading</span><span class=\"o\">.</span><span class=\"n\">_Get_Account_Leverage_</span><span class=\"p\">(</span><span class=\"n\">_id</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># DWX_WebSocket_API:</span>\n<span class=\"n\">darwinexWebSocket</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">_symbols</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"ENH.4.16\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"CIS.4.11\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"CGT.4.5\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"CDG.4.14\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"ABH.4.21\"</span><span class=\"p\">,</span>\n                                <span class=\"s2\">\"ENO.4.13\"</span><span class=\"p\">])</span>\n</pre>\n</div>\n<div id=\"example-tickdata-apis\">\n<h2>Example TickData APIs</h2>\n<p>The below code is a complete script to start playing with the different TickData APIs.</p>\n<p>Prior to working with it, you should go to the Darwinex API icon in the Darwinex Platform and generate your TOKEN (the one that matters is the Access Token).</p>\n<pre><span class=\"c1\"># Import the different classes:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.TickDataAPI.DWX_TickData_Downloader_API</span> <span class=\"kn\">import</span> \\\n    <span class=\"n\">DWX_TickData_Downloader_API</span>\n\n<span class=\"c1\"># Let's create the access token variable:</span>\n<span class=\"n\">FTP_CRED</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"username\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your_alpha_username\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"your_alpha_password\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"ftpServer\"</span><span class=\"p\">:</span> <span class=\"s2\">\"tickdata.darwinex.com\"</span><span class=\"p\">}</span>\n\n<span class=\"c1\"># Downloader:</span>\n<span class=\"c1\"># Try other assets like: GDAXIm, SPN35, XAUUSD... &gt; Watch out with the available dates!</span>\n<span class=\"n\">DOWNLOADER</span> <span class=\"o\">=</span> <span class=\"n\">DWX_TickData_Downloader_API</span><span class=\"p\">(</span><span class=\"n\">dwx_ftp_user</span><span class=\"o\">=</span><span class=\"n\">FTP_CRED</span><span class=\"p\">[</span><span class=\"s1\">'username'</span><span class=\"p\">],</span>\n                                        <span class=\"n\">dwx_ftp_pass</span><span class=\"o\">=</span><span class=\"n\">FTP_CRED</span><span class=\"p\">[</span><span class=\"s1\">'password'</span><span class=\"p\">],</span>\n                                        <span class=\"n\">dwx_ftp_hostname</span><span class=\"o\">=</span><span class=\"n\">FTP_CRED</span><span class=\"p\">[</span><span class=\"s1\">'ftpServer'</span><span class=\"p\">],</span>\n                                        <span class=\"n\">dwx_ftp_port</span><span class=\"o\">=</span><span class=\"n\">FTP_CRED</span><span class=\"p\">[</span><span class=\"s1\">'port'</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># Create the path you wish to save the data:</span>\n<span class=\"n\">path_to_save</span> <span class=\"o\">=</span> <span class=\"s1\">'EXAMPLE_DATA/'</span>\n\n<span class=\"c1\">###################################################</span>\n\n<span class=\"c1\"># One hour data (be sure to put the hours with two characters &gt; 0 == 00, 5 == 05, 23 ==23):</span>\n<span class=\"n\">bid_hour_data</span> <span class=\"o\">=</span> <span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_download_one_hour_data_bid</span><span class=\"p\">(</span><span class=\"n\">_asset</span><span class=\"o\">=</span><span class=\"s1\">'WS30'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-01'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_hour</span><span class=\"o\">=</span><span class=\"s1\">'22'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">bid_hour_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_pickle</span><span class=\"p\">(</span><span class=\"n\">bid_hour_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n\n<span class=\"n\">ask_hour_data</span> <span class=\"o\">=</span> <span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_download_one_hour_data_ask</span><span class=\"p\">(</span><span class=\"n\">_asset</span><span class=\"o\">=</span><span class=\"s1\">'WS30'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-01'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_hour</span><span class=\"o\">=</span><span class=\"s1\">'22'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">ask_hour_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_pickle</span><span class=\"p\">(</span><span class=\"n\">ask_hour_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###################################################</span>\n\n<span class=\"c1\"># One day data (be sure to also put the dates with two characters):</span>\n<span class=\"n\">bid_day_data</span> <span class=\"o\">=</span> <span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_download_one_day_data_bid</span><span class=\"p\">(</span><span class=\"n\">_asset</span><span class=\"o\">=</span><span class=\"s1\">'WS30'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-01'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">bid_day_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_pickle</span><span class=\"p\">(</span><span class=\"n\">bid_day_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n\n<span class=\"n\">ask_day_data</span> <span class=\"o\">=</span> <span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_download_one_day_data_ask</span><span class=\"p\">(</span><span class=\"n\">_asset</span><span class=\"o\">=</span><span class=\"s1\">'WS30'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-01'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">ask_day_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_pickle</span><span class=\"p\">(</span><span class=\"n\">ask_day_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n\n<span class=\"c1\">###################################################</span>\n\n<span class=\"c1\"># Between two dates data:</span>\n<span class=\"n\">bid_date_data</span> <span class=\"o\">=</span> <span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_download_month_data_bid</span><span class=\"p\">(</span><span class=\"n\">_asset</span><span class=\"o\">=</span><span class=\"s1\">'WS30'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_start_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-01'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_end_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-04'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">bid_date_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_pickle</span><span class=\"p\">(</span><span class=\"n\">bid_date_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n\n<span class=\"n\">ask_date_data</span> <span class=\"o\">=</span> <span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_download_month_data_ask</span><span class=\"p\">(</span><span class=\"n\">_asset</span><span class=\"o\">=</span><span class=\"s1\">'WS30'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_start_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-01'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_end_date</span><span class=\"o\">=</span><span class=\"s1\">'2018-10-04'</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">ask_date_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n<span class=\"n\">DOWNLOADER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_pickle</span><span class=\"p\">(</span><span class=\"n\">ask_date_data</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># Import the different classes:</span>\n<span class=\"kn\">from</span> <span class=\"nn\">darwinexapis.API.TickDataAPI.DWX_TickData_Reader_API</span> <span class=\"kn\">import</span> <span class=\"n\">DWX_TickData_Reader_API</span>\n\n<span class=\"c1\"># Reader:</span>\n<span class=\"n\">bid_file_pkl</span> <span class=\"o\">=</span> <span class=\"s1\">'EXAMPLE_DATA/WS30_BID_2018-10-01_23.pkl'</span>\n<span class=\"n\">ask_file_pkl</span> <span class=\"o\">=</span> <span class=\"s1\">'EXAMPLE_DATA/WS30_ASK_2018-10-01_23.pkl'</span>\n<span class=\"n\">path_to_save</span> <span class=\"o\">=</span> <span class=\"s1\">'EXAMPLE_DATA/'</span>\n\n<span class=\"c1\"># Generate the object:</span>\n<span class=\"n\">READER</span> <span class=\"o\">=</span> <span class=\"n\">DWX_TickData_Reader_API</span><span class=\"p\">(</span><span class=\"n\">_bids_file</span><span class=\"o\">=</span><span class=\"n\">bid_file_pkl</span><span class=\"p\">,</span>\n                                <span class=\"n\">_asks_file</span><span class=\"o\">=</span><span class=\"n\">ask_file_pkl</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Generate the dataframe:</span>\n<span class=\"n\">readed_dataframe</span> <span class=\"o\">=</span> <span class=\"n\">READER</span><span class=\"o\">.</span><span class=\"n\">_get_symbol_as_dataframe_</span><span class=\"p\">(</span><span class=\"n\">_convert_epochs</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_check_integrity</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_calc_spread</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n                                                    <span class=\"n\">_reindex</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'ask_price'</span><span class=\"p\">,</span>\n                                                              <span class=\"s1\">'bid_price'</span><span class=\"p\">,</span>\n                                                              <span class=\"s1\">'spread'</span><span class=\"p\">],</span>\n                                                    <span class=\"n\">_precision</span><span class=\"o\">=</span><span class=\"s1\">'tick'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save it:</span>\n<span class=\"n\">READER</span><span class=\"o\">.</span><span class=\"n\">_save_df_to_csv</span><span class=\"p\">(</span><span class=\"n\">readed_dataframe</span><span class=\"p\">,</span> <span class=\"n\">which_path</span><span class=\"o\">=</span><span class=\"n\">path_to_save</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>You can find the complete <a href=\"https://api.darwinex.com/store/\" rel=\"nofollow\">API documentation</a> here. You will be able to understand the different exposed enpoints as well has play around with them to understand the returned JSON messages, whether they result in a succesfull request-response attempt or no.</p>\n<p>Other helpful links:</p>\n<blockquote>\n<ul>\n<li><a href=\"https://help.darwinex.com/api-walkthrough\" rel=\"nofollow\">Darwinex API FAQ and walkthrough</a></li>\n<li><a href=\"https://help.darwinex.com/\" rel=\"nofollow\">Darwinex Help Center</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"discussion\">\n<h2>Discussion</h2>\n<p>The <a href=\"https://https://community.darwinex.com/\" rel=\"nofollow\">Darwinex API Community Forum</a> is one of the places to discuss\nDarwinex API and anything related to it.</p>\n<p>Furthermore, you can join the <a href=\"https://join.slack.com/t/darwinex-collective/shared_invite/enQtNjg4MjA0ODUzODkyLWFiZWZlMDZjNGVmOGE2ZDBiZGI4ZWUxNjM5YTU0MjZkMTQ2NGZjNGIyN2QxZDY4NjUyZmVlNmU3N2E2NGE1Mjk\" rel=\"nofollow\">Darwinex Collective Slack</a> for Q&amp;A, debug and more.</p>\n</div>\n<div id=\"disclaimer\">\n<h2>Disclaimer</h2>\n<p>The software is provided on the conditions of the BSD license that you can find inside the package.</p>\n<p><strong>\u00a1The \u03b1lpha\u2019s time has begun!</strong></p>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Author:</th><td>Darwinex Alpha Team &lt;<a href=\"mailto:content%40darwinex.com\">content<span>@</span>darwinex<span>.</span>com</a>&gt;</td>\n</tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 7179635, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "2a81c484edbad4451499b4a1df17e876", "sha256": "deb9feeed7bc47dae1b4474327e39697a0fd1f874462978c0acbdffe624c74e6"}, "downloads": -1, "filename": "darwinexapis-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2a81c484edbad4451499b4a1df17e876", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7227, "upload_time": "2020-05-04T15:15:44", "upload_time_iso_8601": "2020-05-04T15:15:44.098213Z", "url": "https://files.pythonhosted.org/packages/c3/75/bdbed24400ebbf8851713dc52773a56fc3d8c302663f79be0b104e23139d/darwinexapis-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2cb1e92d07ea9bdd9d73e7256c3a3f3", "sha256": "a0da0d0c2c21e39642350dd934401bc30cb5c438850e2ef46884884b919e2ec8"}, "downloads": -1, "filename": "darwinexapis-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d2cb1e92d07ea9bdd9d73e7256c3a3f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8172, "upload_time": "2020-05-04T15:15:46", "upload_time_iso_8601": "2020-05-04T15:15:46.630344Z", "url": "https://files.pythonhosted.org/packages/27/9d/bf2c8ed0f36a638cb84b4853dd09bbaa2791b75e35e9c542a277ff84181f/darwinexapis-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0a308a737b728ed8019e7cc16150b1d2", "sha256": "a32f48234dfeebc91816b924d141f40871cbd3112b039b4f9c1427ed58a55eaa"}, "downloads": -1, "filename": "darwinexapis-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "0a308a737b728ed8019e7cc16150b1d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7218, "upload_time": "2020-05-04T15:35:50", "upload_time_iso_8601": "2020-05-04T15:35:50.994796Z", "url": "https://files.pythonhosted.org/packages/f2/27/b944e425b6b2e6ea780f283086f5e28bff71182994beece2cd42e121947d/darwinexapis-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "507682d72fd511348255b5f2b86741c9", "sha256": "bf1c5be01d271486b89681a6db19a78c12c2045bf6e41cb9c7279c7d29a1577e"}, "downloads": -1, "filename": "darwinexapis-0.2.1.tar.gz", "has_sig": false, "md5_digest": "507682d72fd511348255b5f2b86741c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8183, "upload_time": "2020-05-04T15:35:52", "upload_time_iso_8601": "2020-05-04T15:35:52.670914Z", "url": "https://files.pythonhosted.org/packages/f2/7c/7efc9daf351fc64d2ef8bbdbf9aa9ba04e5ac4322d4abccac888a2bbddf6/darwinexapis-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "637ea5ee8781202da059130a993f246c", "sha256": "712d6dd29e89323c3801db933aed50b02db91bc2fce2a96d267220ac926e552d"}, "downloads": -1, "filename": "darwinexapis-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "637ea5ee8781202da059130a993f246c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7219, "upload_time": "2020-05-04T15:58:20", "upload_time_iso_8601": "2020-05-04T15:58:20.252046Z", "url": "https://files.pythonhosted.org/packages/14/86/8f1177241235cc90d823e3baaa94c8b63709fc17afe00fed729586e9a7df/darwinexapis-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e33eb0b0d21a9801452b5e0d8bd8ec5e", "sha256": "cdff5848926321b412e6b7cabb88a986f135b6b01a842dbdb8f77f356ffba010"}, "downloads": -1, "filename": "darwinexapis-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e33eb0b0d21a9801452b5e0d8bd8ec5e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8224, "upload_time": "2020-05-04T15:58:21", "upload_time_iso_8601": "2020-05-04T15:58:21.647360Z", "url": "https://files.pythonhosted.org/packages/78/cc/d851d3cbabce0b36b94146f5a25e58af408b5749763849ec32b40fbce1dd/darwinexapis-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "a3bd4d23f2a7b110f46dca6210ed3eb7", "sha256": "98d579416c8142d39a70be0e539a7a85361d1d9d63238f054153045d454a364a"}, "downloads": -1, "filename": "darwinexapis-0.2.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a3bd4d23f2a7b110f46dca6210ed3eb7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6812, "upload_time": "2020-05-04T16:21:13", "upload_time_iso_8601": "2020-05-04T16:21:13.530506Z", "url": "https://files.pythonhosted.org/packages/d4/3d/21b97ff6c49da2be499fc2cb15da3b4ea4c54c95ef465beb51ced6175dd4/darwinexapis-0.2.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5068363c6d56fda281d407108ad130cf", "sha256": "b6ff587336182aba7eeda6b852fa1e0ada2ba1d49add99289fc4e8fea68172cd"}, "downloads": -1, "filename": "darwinexapis-0.2.3.tar.gz", "has_sig": false, "md5_digest": "5068363c6d56fda281d407108ad130cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2740560, "upload_time": "2020-05-04T16:21:16", "upload_time_iso_8601": "2020-05-04T16:21:16.102410Z", "url": "https://files.pythonhosted.org/packages/25/40/4a6eb26895d7401d065b1488531b4bc952805bc133cc620a11384b067968/darwinexapis-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "1db1462e89801646dd3969b2b7de5623", "sha256": "339427da7806b9504cb074aa3187523c27eaab575a61ceb5d10c8221f75b8840"}, "downloads": -1, "filename": "darwinexapis-0.2.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1db1462e89801646dd3969b2b7de5623", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6811, "upload_time": "2020-05-04T16:24:15", "upload_time_iso_8601": "2020-05-04T16:24:15.158365Z", "url": "https://files.pythonhosted.org/packages/c8/c8/7eff9b5cea787a629b67d1947a8e61971a3ac04fdb179b2484a994d71d56/darwinexapis-0.2.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5d17a066120156b7a579a1a1a36868f", "sha256": "e2fad47833441d168f7caf27188fbae3c5911c47251ba1269b0710ebee193be9"}, "downloads": -1, "filename": "darwinexapis-0.2.4.tar.gz", "has_sig": false, "md5_digest": "a5d17a066120156b7a579a1a1a36868f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2740554, "upload_time": "2020-05-04T16:24:17", "upload_time_iso_8601": "2020-05-04T16:24:17.940739Z", "url": "https://files.pythonhosted.org/packages/45/4f/c5452540199aa1e187ca89e47a5d9271255b91fdf0950c09dc079671a029/darwinexapis-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "10fc77007dab132a9e12d2594e90e7df", "sha256": "963c5c516cc2661beef789cff685b00bc84381596da8c98fb5e4ea99a721fce0"}, "downloads": -1, "filename": "darwinexapis-0.2.5-py3-none-any.whl", "has_sig": false, "md5_digest": "10fc77007dab132a9e12d2594e90e7df", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865197, "upload_time": "2020-05-04T16:58:58", "upload_time_iso_8601": "2020-05-04T16:58:58.665179Z", "url": "https://files.pythonhosted.org/packages/ea/16/b0eb9848bb520bcf21120cb1bf8706612616fe334bd4c64239ab584dedd6/darwinexapis-0.2.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f458513794d070827461e7771cd453f2", "sha256": "339ae9cb23a535d6b45d34cf5083c997775a9609c50f94e65d375214bfbb8758"}, "downloads": -1, "filename": "darwinexapis-0.2.5.tar.gz", "has_sig": false, "md5_digest": "f458513794d070827461e7771cd453f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2744745, "upload_time": "2020-05-04T16:59:01", "upload_time_iso_8601": "2020-05-04T16:59:01.100661Z", "url": "https://files.pythonhosted.org/packages/5f/19/6f237d20aa735d23298c9c12fe266927bbda8e885c55696cd7afdb4a980d/darwinexapis-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "c9b2a21d2777d4319213a3769554966f", "sha256": "8ebbd85665f413ec4fb11f5006fef7c2a8c2bcfc0b57e22e13cb4b59bb9748ae"}, "downloads": -1, "filename": "darwinexapis-0.2.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c9b2a21d2777d4319213a3769554966f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865206, "upload_time": "2020-05-04T17:03:28", "upload_time_iso_8601": "2020-05-04T17:03:28.006087Z", "url": "https://files.pythonhosted.org/packages/4f/e1/51c54d1a02f0533c1ed49db4a069ceb0aaf25338312aa54470d387d98b83/darwinexapis-0.2.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03c4a6d33078d86011b9f68154834e40", "sha256": "1e55fdbee7e8704ce9fc498e97c195bcc5df5fc8f76327b1fbb3b39006c617dd"}, "downloads": -1, "filename": "darwinexapis-0.2.6.tar.gz", "has_sig": false, "md5_digest": "03c4a6d33078d86011b9f68154834e40", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2744759, "upload_time": "2020-05-04T17:03:31", "upload_time_iso_8601": "2020-05-04T17:03:31.675215Z", "url": "https://files.pythonhosted.org/packages/44/dd/882b3617f20e62c65407d1ae3c5c45cbad50419eb2bb9ce78737fec8ce7a/darwinexapis-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "749c7fe103ad47dc026db5aec0745d41", "sha256": "231273e85cb0fe8be253d249f7863c27298a1245c326dded76c6be779d7fc700"}, "downloads": -1, "filename": "darwinexapis-0.2.7-py3-none-any.whl", "has_sig": false, "md5_digest": "749c7fe103ad47dc026db5aec0745d41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865138, "upload_time": "2020-05-05T16:59:55", "upload_time_iso_8601": "2020-05-05T16:59:55.120976Z", "url": "https://files.pythonhosted.org/packages/43/11/8a98c2d9ba34c3a4891db1d8677cf4a827b6a538b5b731347cda99f228d9/darwinexapis-0.2.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "15f5365037b9ebfff8f7206a8a1ba4e2", "sha256": "c2baf02ea227844b527c1e8e7449d9cef93a1f4670864abfcfa599eff0329060"}, "downloads": -1, "filename": "darwinexapis-0.2.7.tar.gz", "has_sig": false, "md5_digest": "15f5365037b9ebfff8f7206a8a1ba4e2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2743455, "upload_time": "2020-05-05T16:59:57", "upload_time_iso_8601": "2020-05-05T16:59:57.822144Z", "url": "https://files.pythonhosted.org/packages/8c/98/9051cdee7901e5f7628ac36476cf2a0849d4206b61f97feb28160aac31f1/darwinexapis-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "7337afca7996d40fce2e59cef2f282b1", "sha256": "a49b0db1ed7a2ca2a4b13b05e24ed392b8804c2178d920ea25c68099d56dfe99"}, "downloads": -1, "filename": "darwinexapis-0.2.8-py3-none-any.whl", "has_sig": false, "md5_digest": "7337afca7996d40fce2e59cef2f282b1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865212, "upload_time": "2020-05-06T10:52:06", "upload_time_iso_8601": "2020-05-06T10:52:06.047906Z", "url": "https://files.pythonhosted.org/packages/4f/65/771ef8efc7c6c49904d03d3034e55ad041d2cad04f56d9f1cb53d67f89d9/darwinexapis-0.2.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1fe29f30d206a501afb37587e72381ef", "sha256": "464081593705643fcf368a7f15a17bd0c723ebb68be0d34a79dd705abf04b622"}, "downloads": -1, "filename": "darwinexapis-0.2.8.tar.gz", "has_sig": false, "md5_digest": "1fe29f30d206a501afb37587e72381ef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2743469, "upload_time": "2020-05-06T10:52:08", "upload_time_iso_8601": "2020-05-06T10:52:08.656407Z", "url": "https://files.pythonhosted.org/packages/74/09/9c1019b28dd1a366197950b2d110ac0bf2425a8bb5952c6c1c1c9e2b19ac/darwinexapis-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "0a9e5c17a4dcdd1614d54040b34a0e20", "sha256": "f30f1a07165eb27a7e36db3bde287071440511e07cfe1d6c29a14f3cbd9224ea"}, "downloads": -1, "filename": "darwinexapis-0.2.9-py3-none-any.whl", "has_sig": false, "md5_digest": "0a9e5c17a4dcdd1614d54040b34a0e20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865211, "upload_time": "2020-05-06T11:14:16", "upload_time_iso_8601": "2020-05-06T11:14:16.597050Z", "url": "https://files.pythonhosted.org/packages/85/56/5b224b450820abe50a3c9eed31cf6bd26ac2277843c511a99d99dce36767/darwinexapis-0.2.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0308c31b240091f27757bbd5ecf52a8d", "sha256": "f1bb4c06081e47ddfd8a6ad76434cfebdfc862e71026cbaba782a460dfb829af"}, "downloads": -1, "filename": "darwinexapis-0.2.9.tar.gz", "has_sig": false, "md5_digest": "0308c31b240091f27757bbd5ecf52a8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2743442, "upload_time": "2020-05-06T11:14:19", "upload_time_iso_8601": "2020-05-06T11:14:19.408060Z", "url": "https://files.pythonhosted.org/packages/00/f1/2cb3911ecc76326d82214aaf04b1a21f404500b9930437f6cdfa1a28ef2c/darwinexapis-0.2.9.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "251f71cb22be3acb74ff032e2bf7cbb0", "sha256": "12df72fd440698d3bbcd08e02ceed01c0955a86967ea50db0e1576a8389fe622"}, "downloads": -1, "filename": "darwinexapis-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "251f71cb22be3acb74ff032e2bf7cbb0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865215, "upload_time": "2020-05-06T11:25:30", "upload_time_iso_8601": "2020-05-06T11:25:30.728377Z", "url": "https://files.pythonhosted.org/packages/48/d1/4ef5fd24338b00bdd06f0222fa4a116bda1c3e11d1003045d0d5f78de6ac/darwinexapis-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f093ca10e0924e097f7c5156131cadef", "sha256": "818f8bbafeec8cadb4468e52651789ed1c47ce78afe4d0dc5404e192a5bbc95f"}, "downloads": -1, "filename": "darwinexapis-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f093ca10e0924e097f7c5156131cadef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2743457, "upload_time": "2020-05-06T11:25:32", "upload_time_iso_8601": "2020-05-06T11:25:32.929121Z", "url": "https://files.pythonhosted.org/packages/69/22/d867a3201b4e8d49767b51973786f87680e3a9f03783c3b390d46d79492f/darwinexapis-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "2e3b3b9be80b2108378547dd0822f2a1", "sha256": "b6f88719347152b5270293449c5a18c238a99c4ebe067e507a5df84490636e53"}, "downloads": -1, "filename": "darwinexapis-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e3b3b9be80b2108378547dd0822f2a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865134, "upload_time": "2020-05-06T11:38:42", "upload_time_iso_8601": "2020-05-06T11:38:42.107680Z", "url": "https://files.pythonhosted.org/packages/dd/9e/ba51315d8bb9d10dc7f10a1994e7648492643206fd3b5886cf9a406b3b9c/darwinexapis-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce5f6cdb848bf3694f766d919a25409f", "sha256": "b6772b141046646bf7d9baf6d9fdec4cdf438e08ea11c90b5c1f795bf8fa3a57"}, "downloads": -1, "filename": "darwinexapis-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ce5f6cdb848bf3694f766d919a25409f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2743373, "upload_time": "2020-05-06T11:38:44", "upload_time_iso_8601": "2020-05-06T11:38:44.335041Z", "url": "https://files.pythonhosted.org/packages/64/8d/c84a160b836cfb792f03eab0cef64fe04b416d6dc46a674f4b38ede2d424/darwinexapis-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e3b3b9be80b2108378547dd0822f2a1", "sha256": "b6f88719347152b5270293449c5a18c238a99c4ebe067e507a5df84490636e53"}, "downloads": -1, "filename": "darwinexapis-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2e3b3b9be80b2108378547dd0822f2a1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2865134, "upload_time": "2020-05-06T11:38:42", "upload_time_iso_8601": "2020-05-06T11:38:42.107680Z", "url": "https://files.pythonhosted.org/packages/dd/9e/ba51315d8bb9d10dc7f10a1994e7648492643206fd3b5886cf9a406b3b9c/darwinexapis-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce5f6cdb848bf3694f766d919a25409f", "sha256": "b6772b141046646bf7d9baf6d9fdec4cdf438e08ea11c90b5c1f795bf8fa3a57"}, "downloads": -1, "filename": "darwinexapis-0.3.1.tar.gz", "has_sig": false, "md5_digest": "ce5f6cdb848bf3694f766d919a25409f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2743373, "upload_time": "2020-05-06T11:38:44", "upload_time_iso_8601": "2020-05-06T11:38:44.335041Z", "url": "https://files.pythonhosted.org/packages/64/8d/c84a160b836cfb792f03eab0cef64fe04b416d6dc46a674f4b38ede2d424/darwinexapis-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:38 2020"}