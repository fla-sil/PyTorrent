{"info": {"author": "Jonny Gerig Meyer", "author_email": "jonny@oddbird.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "jQuery Ajax Loading Overlay plugin package for Django\n=====================================================\n\ndjango-ajax-loading-overy uses Javascript to add/remove a loading overlay to a target element during Ajax calls. It can be called on any element that should receive the loading overlay, and accepts options for class selectors and loading overlay text.\n\nDependencies\n------------\n\n- jQuery library (http://jquery.com/)\n\nInstallation\n------------\n\nIn your Django project settings, add \"ajax_loading_overlay\" to your INSTALLED_APPS.\n\nUsage\n-----\n\nLinking the JS::\n\n    <script src=\"{{ STATIC_URL }}ajax_loading_overlay/jquery.ajax-loading-overlay.js\"></script>\n\nCalling the plugin::\n\n    $('#target').loadingOverlay();\n\nRemoving the loading overlay (usually upon success of the Ajax call)::\n\n    $('#target').loadingOverlay('remove');\n\nOptions can be passed to override the default loading class ('loading'), overlay class ('overlay'), loading text('loading...'), and/or function to return loading text padding-top::\n\n    $('#target').loadingOverlay({\n        loadingClass: 'myLoadingClass',\n        overlayClass: 'myOverlayClass',\n        loadingText: 'Loading. Please Wait.',\n        paddingTop: function (target) {\n            return ((target.outerHeight() - parseInt(target.css('line-height'), 10)) / 2).toString() + 'px';\n        }\n    });\n\nIf `loadingClass` or `overlayClass` options are passed when initializing the loading overlay, the same options must be passed when removing that overlay::\n\n    $('#target').loadingOverlay('remove', {\n        loadingClass: 'myLoadingClass',\n        overlayClass: 'myOverlayClass'\n    });\n\nCHANGES\n=======\n\n0.1.2 (2012.07.24)\n------------------\n\n* Added paddingTop option for overlay text.\n\n0.1.1 (2011.07.14)\n------------------\n\n* JS cleanup; added JSLint options.\n\n0.1.0 (2011.06.26)\n------------------\n\n* Initial release.\n\n\n\nTODO\n====", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jgerigmeyer/django-ajax-loading-overlay/", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-ajax-loading-overlay", "package_url": "https://pypi.org/project/django-ajax-loading-overlay/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-ajax-loading-overlay/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jgerigmeyer/django-ajax-loading-overlay/"}, "release_url": "https://pypi.org/project/django-ajax-loading-overlay/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "Uses JS to add/remove a loading overlay during Ajax calls", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"jquery-ajax-loading-overlay-plugin-package-for-django\">\n<h2>jQuery Ajax Loading Overlay plugin package for Django</h2>\n<p>django-ajax-loading-overy uses Javascript to add/remove a loading overlay to a target element during Ajax calls. It can be called on any element that should receive the loading overlay, and accepts options for class selectors and loading overlay text.</p>\n<div id=\"dependencies\">\n<h3>Dependencies</h3>\n<ul>\n<li>jQuery library (<a href=\"http://jquery.com/\" rel=\"nofollow\">http://jquery.com/</a>)</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>In your Django project settings, add \u201cajax_loading_overlay\u201d to your INSTALLED_APPS.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Linking the JS:</p>\n<pre>&lt;script src=\"{{ STATIC_URL }}ajax_loading_overlay/jquery.ajax-loading-overlay.js\"&gt;&lt;/script&gt;\n</pre>\n<p>Calling the plugin:</p>\n<pre>$('#target').loadingOverlay();\n</pre>\n<p>Removing the loading overlay (usually upon success of the Ajax call):</p>\n<pre>$('#target').loadingOverlay('remove');\n</pre>\n<p>Options can be passed to override the default loading class (\u2018loading\u2019), overlay class (\u2018overlay\u2019), loading text(\u2018loading\u2026\u2019), and/or function to return loading text padding-top:</p>\n<pre>$('#target').loadingOverlay({\n    loadingClass: 'myLoadingClass',\n    overlayClass: 'myOverlayClass',\n    loadingText: 'Loading. Please Wait.',\n    paddingTop: function (target) {\n        return ((target.outerHeight() - parseInt(target.css('line-height'), 10)) / 2).toString() + 'px';\n    }\n});\n</pre>\n<p>If <cite>loadingClass</cite> or <cite>overlayClass</cite> options are passed when initializing the loading overlay, the same options must be passed when removing that overlay:</p>\n<pre>$('#target').loadingOverlay('remove', {\n    loadingClass: 'myLoadingClass',\n    overlayClass: 'myOverlayClass'\n});\n</pre>\n</div>\n</div>\n<div id=\"changes\">\n<h2>CHANGES</h2>\n<div id=\"id1\">\n<h3>0.1.2 (2012.07.24)</h3>\n<ul>\n<li>Added paddingTop option for overlay text.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2011.07.14)</h3>\n<ul>\n<li>JS cleanup; added JSLint options.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.0 (2011.06.26)</h3>\n<ul>\n<li>Initial release.</li>\n</ul>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n</div>\n\n          </div>"}, "last_serial": 707135, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "27c3c5f631e526f377b1f9e516c0f782", "sha256": "4ba9cfa4328cfe5d52f9e3c55ab70251fd69c2fae15f2179aeca81c4958d5632"}, "downloads": -1, "filename": "django-ajax-loading-overlay-0.1.0.tar.gz", "has_sig": false, "md5_digest": "27c3c5f631e526f377b1f9e516c0f782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4231, "upload_time": "2011-06-27T07:01:31", "upload_time_iso_8601": "2011-06-27T07:01:31.353780Z", "url": "https://files.pythonhosted.org/packages/4e/84/51b53a2fa1a57fcac5f3590e7ff5746c014378af8c65a1db0b2a3d48cdf8/django-ajax-loading-overlay-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4e9913a1376e3fc22aed4e89444eddb8", "sha256": "045ba9894c84bbed5869896886a0fda040bc7dfcd97e95e78e3b0abb0b8f310d"}, "downloads": -1, "filename": "django-ajax-loading-overlay-0.1.1.tar.gz", "has_sig": false, "md5_digest": "4e9913a1376e3fc22aed4e89444eddb8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4435, "upload_time": "2011-07-14T22:11:18", "upload_time_iso_8601": "2011-07-14T22:11:18.250750Z", "url": "https://files.pythonhosted.org/packages/3e/6f/74828ef08a9599b27bc875dd27774f66324506386f63c25c3a04f429d2f2/django-ajax-loading-overlay-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "f3fad4d019e75cb1b06a0788e1142c9c", "sha256": "75b02e8f604abe5ba73783f00f48803e90afec85923bc149974c342681b84234"}, "downloads": -1, "filename": "django-ajax-loading-overlay-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f3fad4d019e75cb1b06a0788e1142c9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4193, "upload_time": "2012-07-24T21:23:27", "upload_time_iso_8601": "2012-07-24T21:23:27.025079Z", "url": "https://files.pythonhosted.org/packages/b6/c9/e866593c77ec9268f13552879bd73d230fc73f7cfe8f04497f145700d505/django-ajax-loading-overlay-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f3fad4d019e75cb1b06a0788e1142c9c", "sha256": "75b02e8f604abe5ba73783f00f48803e90afec85923bc149974c342681b84234"}, "downloads": -1, "filename": "django-ajax-loading-overlay-0.1.2.tar.gz", "has_sig": false, "md5_digest": "f3fad4d019e75cb1b06a0788e1142c9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4193, "upload_time": "2012-07-24T21:23:27", "upload_time_iso_8601": "2012-07-24T21:23:27.025079Z", "url": "https://files.pythonhosted.org/packages/b6/c9/e866593c77ec9268f13552879bd73d230fc73f7cfe8f04497f145700d505/django-ajax-loading-overlay-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:44 2020"}