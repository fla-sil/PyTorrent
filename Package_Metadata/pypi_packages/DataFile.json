{"info": {"author": "JMA", "author_email": "jeanmichel.arbona@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering"], "description": "=========\nData File\n=========\n\nThis package provides an easy way to open a datafile\nby returning a \"modified\" dictionnary (see Guessing) of numpy arrays that corresponds\nto the differents columns.If the column contains strings it will return an array of strings.\n\nBy default it will try to guess the indexation from the commentaries, and if failed will index it \nfrom 0 to n::\n\n\n\t\t #!/usr/bin/env python\n\t\t \n\t\t from datafile.extractfile import dataFile\n\n\t\t f = dataFile(\"./datafile/test/testdocfile.txt\")\n\t\t # the index will be guessed and if not found it will\n\t\t # be indexed from 0 to n\n\t\t \n\t\t f = dataFile(\"./datafile/test/testdocfile.txt\",index=\"auto\")\n\t\t #f will be indexed from 0 to n\n\t\t \t\t \n\t\t #f[\"0\"] will return a numpy array of the first column.\n\t\t #f[\"0\",1] will return a numpy array of the index number 1 of the first column,\n\t\t # if the column is divided in index (ensemble of points separated by one or more space)\n\n\t\t f = dataFile(\"./datafile/test/testdocfile.txt\" , \"A B C D\")\n\t\t #f will be indexed on \"A\" \"B\" \"C\" (if three columns)\n\t\t f = dataFile(\"./datafile/test/testdocfile.txt\" , [\"A\", \"B\",\"C\",\"D\"]\n\t\t #f will be indexed on \"A\" \"B\" \"C\"\n\n\nGuessing\n========\n\nif the datafile contains in the commentaries a line like:\n#Lx(nm) Ly(nm) D(A)\nand the file at three column, it will index the three columns\nwith \"Lx(nm)\" \"Ly(nm)\" , \"D(A)\"::\n\t\t \n\t\t #!/usr/bin/env python\n\t\t f = dataFile(\"./file\")\n\t\t f[\"Lx\"]\n\t\t f[\"x\"]\n\t\t #both are going to return the first column\n\t\t f[\"nm\"]\n\t\t #will return a key error\t \n\n\nMain usage\n==========\n\nI use it with ipython to plot datas and explore them.\nLauching ipython -pylab will launch a ipython with\nmatplotlib loaded.\nAfter loading the file with dataFile you can plot the data\nwith only typping plot(f[\"A\"],f[\"B\"])\n\n\nemail : jeanmichel.arbona@gmail.com", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "LICENSE.txt", "maintainer": null, "maintainer_email": null, "name": "DataFile", "package_url": "https://pypi.org/project/DataFile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/DataFile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/DataFile/0.1.6/", "requires_dist": null, "requires_python": null, "summary": "Easy way to read data files", "version": "0.1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package provides an easy way to open a datafile\nby returning a \u201cmodified\u201d dictionnary (see Guessing) of numpy arrays that corresponds\nto the differents columns.If the column contains strings it will return an array of strings.</p>\n<p>By default it will try to guess the indexation from the commentaries, and if failed will index it\nfrom 0 to n:</p>\n<pre>#!/usr/bin/env python\n\nfrom datafile.extractfile import dataFile\n\nf = dataFile(\"./datafile/test/testdocfile.txt\")\n# the index will be guessed and if not found it will\n# be indexed from 0 to n\n\nf = dataFile(\"./datafile/test/testdocfile.txt\",index=\"auto\")\n#f will be indexed from 0 to n\n\n#f[\"0\"] will return a numpy array of the first column.\n#f[\"0\",1] will return a numpy array of the index number 1 of the first column,\n# if the column is divided in index (ensemble of points separated by one or more space)\n\nf = dataFile(\"./datafile/test/testdocfile.txt\" , \"A B C D\")\n#f will be indexed on \"A\" \"B\" \"C\" (if three columns)\nf = dataFile(\"./datafile/test/testdocfile.txt\" , [\"A\", \"B\",\"C\",\"D\"]\n#f will be indexed on \"A\" \"B\" \"C\"\n</pre>\n<div id=\"guessing\">\n<h2>Guessing</h2>\n<p>if the datafile contains in the commentaries a line like:\n#Lx(nm) Ly(nm) D(A)\nand the file at three column, it will index the three columns\nwith \u201cLx(nm)\u201d \u201cLy(nm)\u201d , \u201cD(A)\u201d:</p>\n<pre>#!/usr/bin/env python\nf = dataFile(\"./file\")\nf[\"Lx\"]\nf[\"x\"]\n#both are going to return the first column\nf[\"nm\"]\n#will return a key error\n</pre>\n</div>\n<div id=\"main-usage\">\n<h2>Main usage</h2>\n<p>I use it with ipython to plot datas and explore them.\nLauching ipython -pylab will launch a ipython with\nmatplotlib loaded.\nAfter loading the file with dataFile you can plot the data\nwith only typping plot(f[\u201cA\u201d],f[\u201cB\u201d])</p>\n<p>email : <a href=\"mailto:jeanmichel.arbona%40gmail.com\">jeanmichel<span>.</span>arbona<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 784069, "releases": {"0.1.6": [{"comment_text": "", "digests": {"md5": "ee238cbc5a8aa565771da72312db8dc5", "sha256": "d4cb6042b1d097898a8faa1790684b5a37634e80bee76ce32b1e5ebe75cf6e09"}, "downloads": -1, "filename": "DataFile-0.1.6.linux-x86_64.exe", "has_sig": false, "md5_digest": "ee238cbc5a8aa565771da72312db8dc5", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 68717, "upload_time": "2010-03-23T13:26:57", "upload_time_iso_8601": "2010-03-23T13:26:57.463099Z", "url": "https://files.pythonhosted.org/packages/97/7c/ea2ea529e27944b7965edb8053b5bf77a9ff1af36cfa15b9b4fd0191bd08/DataFile-0.1.6.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "d662415e074dea01accf29afd5953566", "sha256": "54368dc1528e2901fcaaa737534f2ce00bbecea57668d31408b25568e255de20"}, "downloads": -1, "filename": "DataFile-0.1.6.tar.gz", "has_sig": false, "md5_digest": "d662415e074dea01accf29afd5953566", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19745, "upload_time": "2010-03-23T13:26:56", "upload_time_iso_8601": "2010-03-23T13:26:56.934616Z", "url": "https://files.pythonhosted.org/packages/08/0c/de716b3be99ccff647de998d299851d6f945f576c2f31cf4d5c743e694e5/DataFile-0.1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ee238cbc5a8aa565771da72312db8dc5", "sha256": "d4cb6042b1d097898a8faa1790684b5a37634e80bee76ce32b1e5ebe75cf6e09"}, "downloads": -1, "filename": "DataFile-0.1.6.linux-x86_64.exe", "has_sig": false, "md5_digest": "ee238cbc5a8aa565771da72312db8dc5", "packagetype": "bdist_wininst", "python_version": "any", "requires_python": null, "size": 68717, "upload_time": "2010-03-23T13:26:57", "upload_time_iso_8601": "2010-03-23T13:26:57.463099Z", "url": "https://files.pythonhosted.org/packages/97/7c/ea2ea529e27944b7965edb8053b5bf77a9ff1af36cfa15b9b4fd0191bd08/DataFile-0.1.6.linux-x86_64.exe", "yanked": false}, {"comment_text": "", "digests": {"md5": "d662415e074dea01accf29afd5953566", "sha256": "54368dc1528e2901fcaaa737534f2ce00bbecea57668d31408b25568e255de20"}, "downloads": -1, "filename": "DataFile-0.1.6.tar.gz", "has_sig": false, "md5_digest": "d662415e074dea01accf29afd5953566", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19745, "upload_time": "2010-03-23T13:26:56", "upload_time_iso_8601": "2010-03-23T13:26:56.934616Z", "url": "https://files.pythonhosted.org/packages/08/0c/de716b3be99ccff647de998d299851d6f945f576c2f31cf4d5c743e694e5/DataFile-0.1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:24 2020"}