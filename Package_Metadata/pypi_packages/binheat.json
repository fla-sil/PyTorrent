{"info": {"author": "John Thorvald Wodder II", "author_email": "binheat@varonathe.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Multimedia :: Graphics"], "description": ".. image:: http://www.repostatus.org/badges/latest/active.svg\n    :target: http://www.repostatus.org/#active\n    :alt: Project Status: Active \u2014 The project has reached a stable, usable\n          state and is being actively developed.\n\n.. image:: https://img.shields.io/pypi/pyversions/binheat.svg\n    :target: https://pypi.org/project/binheat/\n\n.. image:: https://img.shields.io/github/license/jwodder/binheat.svg\n    :target: https://opensource.org/licenses/MIT\n    :alt: MIT License\n\n.. image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\n    :target: https://saythanks.io/to/jwodder\n\n`GitHub <https://github.com/jwodder/binheat>`_\n| `PyPI <https://pypi.org/project/binheat/>`_\n| `Issues <https://github.com/jwodder/binheat/issues>`_\n| `Changelog <https://github.com/jwodder/binheat/blob/master/CHANGELOG.md>`_\n\n``binheat`` converts a description of a binary relation into a PDF image of the\nrelation as a binary heat map (a.k.a. matrix display, adjacency matrix,\ncomparison chart, and probably a bunch of other names as well; see below for an\nexample).\n\nEach line of the input (except for blank lines and comments, which are ignored)\nmust be of the form ``x<TAB>y<TAB>z...``, denoting pairs ``(x, y)``, ``(x,\nz)``, etc. in the binary relation.\n\nIn the output table, the values from the first column of each input line become\nthe labels of the table's rows, and the values from the second input column\nonwards become the labels of the table's columns.  This can be reversed with\nthe ``--transpose`` option.\n\n\nInstallation\n============\n``binheat`` requires Python 3.4 or higher.  Just use `pip\n<https://pip.pypa.io>`_ for Python 3 (You have pip, right?) to install\n``binheat`` and its dependencies::\n\n    python3 -m pip install binheat\n\n\nUsage\n=====\n\n::\n\n    binheat [<OPTIONS>] [<infile> [<outfile>]]\n\nInput is read from ``<infile>`` (defaulting to standard input), and the\nresulting PDF is written to ``<outfile>`` (defaulting to ``<infile>`` with its\nfile extension changed to ``.pdf``, or to standard output if ``<infile>`` is\nstandard input).\n\n\nOptions\n-------\n\n- ``-C <file>``, ``--column-labels <file>`` \u2014 Use the lines in ``<file>``\n  (after discarding blank lines & comments) in the order they appear as column\n  labels (or row labels if ``--transpose`` is in effect).  Any pairs in the\n  input whose second column does not appear in ``<file>`` are discarded.\n\n- ``-F <font>``, ``--font <font>`` \u2014 Typeset text in the given font.\n  ``<font>`` must be either the name of a builtin PostScript font or the path\n  to a ``.ttf`` file.  By default, text is typeset in Times-Roman.\n\n- ``-f <size>``, ``--font-size <size>`` \u2014 Set the text size to ``<size>``\n  (default 12).\n\n- ``-R <file>``, ``--row-labels <file>`` \u2014 Use the lines in ``<file>`` (after\n  discarding blank lines & comments) in the order they appear as row labels (or\n  column labels if ``--transpose`` is in effect).  Any pairs in the input whose\n  first column does not appear in ``<file>`` are discarded.\n\n- ``--sort/--no-sort`` \u2014 Whether to list labels in the output in lexical order\n  rather than in the order in which they appear in the input file; default:\n  ``--no-sort``\n\n- ``-T``, ``--transpose`` \u2014 The output will be transposed \u2014 i.e., the first\n  column of the input will be used for the output table's column labels, and\n  the second input column onwards will be used for the table's row labels.\n\n\nExample\n=======\n\nThe following input file::\n\n    NUL (\\0, 0x00)<TAB>iscntrl\n    0x01..0x06<TAB>iscntrl\n    BEL (\\a, 0x07)<TAB>iscntrl\n    BS (\\b, 0x08)<TAB>iscntrl\n    TAB (\\t, 0x09)<TAB>iscntrl<TAB>isspace<TAB>isblank\n    LF (\\n, 0x0A)<TAB>iscntrl<TAB>isspace\n    VT (\\v, 0x0B)<TAB>iscntrl<TAB>isspace\n    FF (\\f, 0x0C)<TAB>iscntrl<TAB>isspace\n    CR (\\r, 0x0D)<TAB>iscntrl<TAB>isspace\n    0x0E..0x1F<TAB>iscntrl\n    SPACE (0x20)<TAB>isprint<TAB>isspace<TAB>isblank\n    !\"#$%&'()*+,-./<TAB>isprint<TAB>isgraph<TAB>ispunct\n    0123456789<TAB>isprint<TAB>isgraph<TAB>isalnum<TAB>isdigit<TAB>isxdigit\n    :;<=>?@<TAB>isprint<TAB>isgraph<TAB>ispunct\n    ABCDEF<TAB>isprint<TAB>isgraph<TAB>isalnum<TAB>isalpha<TAB>isupper<TAB>isxdigit\n    GHIJKLMNOPQRSTUVWXYZ<TAB>isprint<TAB>isgraph<TAB>isalnum<TAB>isalpha<TAB>isupper\n    [\\]^_`<TAB>isprint<TAB>isgraph<TAB>ispunct\n    abcdef<TAB>isprint<TAB>isgraph<TAB>isalnum<TAB>isalpha<TAB>islower<TAB>isxdigit\n    ghijklmnopqrstuvwxyz<TAB>isprint<TAB>isgraph<TAB>isalnum<TAB>isalpha<TAB>islower\n    {|}~<TAB>isprint<TAB>isgraph<TAB>ispunct\n    DEL (0x7F)<TAB>iscntrl\n\nproduces (using the default options) an output file that looks like this:\n\n.. image:: https://github.com/jwodder/binheat/raw/v0.2.0/examples/ctype.png\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jwodder/binheat", "keywords": "binary heat map,heat map,pdf", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "binheat", "package_url": "https://pypi.org/project/binheat/", "platform": "", "project_url": "https://pypi.org/project/binheat/", "project_urls": {"Bug Tracker": "https://github.com/jwodder/binheat/issues", "Homepage": "https://github.com/jwodder/binheat", "Say Thanks!": "https://saythanks.io/to/jwodder", "Source Code": "https://github.com/jwodder/binheat"}, "release_url": "https://pypi.org/project/binheat/0.2.0/", "requires_dist": ["click (~=7.0)", "reportlab (~=3.4)"], "requires_python": "~=3.4", "summary": "Binary heat map generator", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://www.repostatus.org/#active\" rel=\"nofollow\"><img alt=\"Project Status: Active \u2014 The project has reached a stable, usable state and is being actively developed.\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51adb09f202aea47725eca73a3fcf5e1ab47f2e9/687474703a2f2f7777772e7265706f7374617475732e6f72672f6261646765732f6c61746573742f6163746976652e737667\"></a>\n<a href=\"https://pypi.org/project/binheat/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/binheat.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc44e51204da3d82d3578beafb334304f45304ec/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f62696e686561742e737667\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2643901e75d05dc93b14d63f5f047a86c205e2a5/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6a776f646465722f62696e686561742e737667\"></a>\n<a href=\"https://saythanks.io/to/jwodder\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a>\n<p><a href=\"https://github.com/jwodder/binheat\" rel=\"nofollow\">GitHub</a>\n| <a href=\"https://pypi.org/project/binheat/\" rel=\"nofollow\">PyPI</a>\n| <a href=\"https://github.com/jwodder/binheat/issues\" rel=\"nofollow\">Issues</a>\n| <a href=\"https://github.com/jwodder/binheat/blob/master/CHANGELOG.md\" rel=\"nofollow\">Changelog</a></p>\n<p><tt>binheat</tt> converts a description of a binary relation into a PDF image of the\nrelation as a binary heat map (a.k.a. matrix display, adjacency matrix,\ncomparison chart, and probably a bunch of other names as well; see below for an\nexample).</p>\n<p>Each line of the input (except for blank lines and comments, which are ignored)\nmust be of the form <tt><span class=\"pre\">x&lt;TAB&gt;y&lt;TAB&gt;z...</span></tt>, denoting pairs <tt>(x, y)</tt>, <tt>(x,\nz)</tt>, etc. in the binary relation.</p>\n<p>In the output table, the values from the first column of each input line become\nthe labels of the table\u2019s rows, and the values from the second input column\nonwards become the labels of the table\u2019s columns.  This can be reversed with\nthe <tt><span class=\"pre\">--transpose</span></tt> option.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>binheat</tt> requires Python 3.4 or higher.  Just use <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a> for Python 3 (You have pip, right?) to install\n<tt>binheat</tt> and its dependencies:</p>\n<pre>python3 -m pip install binheat\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>binheat [&lt;OPTIONS&gt;] [&lt;infile&gt; [&lt;outfile&gt;]]\n</pre>\n<p>Input is read from <tt>&lt;infile&gt;</tt> (defaulting to standard input), and the\nresulting PDF is written to <tt>&lt;outfile&gt;</tt> (defaulting to <tt>&lt;infile&gt;</tt> with its\nfile extension changed to <tt>.pdf</tt>, or to standard output if <tt>&lt;infile&gt;</tt> is\nstandard input).</p>\n<div id=\"options\">\n<h3>Options</h3>\n<ul>\n<li><tt><span class=\"pre\">-C</span> &lt;file&gt;</tt>, <tt><span class=\"pre\">--column-labels</span> &lt;file&gt;</tt> \u2014 Use the lines in <tt>&lt;file&gt;</tt>\n(after discarding blank lines &amp; comments) in the order they appear as column\nlabels (or row labels if <tt><span class=\"pre\">--transpose</span></tt> is in effect).  Any pairs in the\ninput whose second column does not appear in <tt>&lt;file&gt;</tt> are discarded.</li>\n<li><tt><span class=\"pre\">-F</span> &lt;font&gt;</tt>, <tt><span class=\"pre\">--font</span> &lt;font&gt;</tt> \u2014 Typeset text in the given font.\n<tt>&lt;font&gt;</tt> must be either the name of a builtin PostScript font or the path\nto a <tt>.ttf</tt> file.  By default, text is typeset in Times-Roman.</li>\n<li><tt><span class=\"pre\">-f</span> &lt;size&gt;</tt>, <tt><span class=\"pre\">--font-size</span> &lt;size&gt;</tt> \u2014 Set the text size to <tt>&lt;size&gt;</tt>\n(default 12).</li>\n<li><tt><span class=\"pre\">-R</span> &lt;file&gt;</tt>, <tt><span class=\"pre\">--row-labels</span> &lt;file&gt;</tt> \u2014 Use the lines in <tt>&lt;file&gt;</tt> (after\ndiscarding blank lines &amp; comments) in the order they appear as row labels (or\ncolumn labels if <tt><span class=\"pre\">--transpose</span></tt> is in effect).  Any pairs in the input whose\nfirst column does not appear in <tt>&lt;file&gt;</tt> are discarded.</li>\n<li><tt><span class=\"pre\">--sort/--no-sort</span></tt> \u2014 Whether to list labels in the output in lexical order\nrather than in the order in which they appear in the input file; default:\n<tt><span class=\"pre\">--no-sort</span></tt></li>\n<li><tt><span class=\"pre\">-T</span></tt>, <tt><span class=\"pre\">--transpose</span></tt> \u2014 The output will be transposed \u2014 i.e., the first\ncolumn of the input will be used for the output table\u2019s column labels, and\nthe second input column onwards will be used for the table\u2019s row labels.</li>\n</ul>\n</div>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>The following input file:</p>\n<pre>NUL (\\0, 0x00)&lt;TAB&gt;iscntrl\n0x01..0x06&lt;TAB&gt;iscntrl\nBEL (\\a, 0x07)&lt;TAB&gt;iscntrl\nBS (\\b, 0x08)&lt;TAB&gt;iscntrl\nTAB (\\t, 0x09)&lt;TAB&gt;iscntrl&lt;TAB&gt;isspace&lt;TAB&gt;isblank\nLF (\\n, 0x0A)&lt;TAB&gt;iscntrl&lt;TAB&gt;isspace\nVT (\\v, 0x0B)&lt;TAB&gt;iscntrl&lt;TAB&gt;isspace\nFF (\\f, 0x0C)&lt;TAB&gt;iscntrl&lt;TAB&gt;isspace\nCR (\\r, 0x0D)&lt;TAB&gt;iscntrl&lt;TAB&gt;isspace\n0x0E..0x1F&lt;TAB&gt;iscntrl\nSPACE (0x20)&lt;TAB&gt;isprint&lt;TAB&gt;isspace&lt;TAB&gt;isblank\n!\"#$%&amp;'()*+,-./&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;ispunct\n0123456789&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;isalnum&lt;TAB&gt;isdigit&lt;TAB&gt;isxdigit\n:;&lt;=&gt;?@&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;ispunct\nABCDEF&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;isalnum&lt;TAB&gt;isalpha&lt;TAB&gt;isupper&lt;TAB&gt;isxdigit\nGHIJKLMNOPQRSTUVWXYZ&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;isalnum&lt;TAB&gt;isalpha&lt;TAB&gt;isupper\n[\\]^_`&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;ispunct\nabcdef&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;isalnum&lt;TAB&gt;isalpha&lt;TAB&gt;islower&lt;TAB&gt;isxdigit\nghijklmnopqrstuvwxyz&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;isalnum&lt;TAB&gt;isalpha&lt;TAB&gt;islower\n{|}~&lt;TAB&gt;isprint&lt;TAB&gt;isgraph&lt;TAB&gt;ispunct\nDEL (0x7F)&lt;TAB&gt;iscntrl\n</pre>\n<p>produces (using the default options) an output file that looks like this:</p>\n<img alt=\"https://github.com/jwodder/binheat/raw/v0.2.0/examples/ctype.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4c6c0ed520f3f1ff0e555d259db8a890f7c8db1d/68747470733a2f2f6769746875622e636f6d2f6a776f646465722f62696e686561742f7261772f76302e322e302f6578616d706c65732f63747970652e706e67\">\n</div>\n\n          </div>"}, "last_serial": 6515802, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "91ad70aa3442177049364725b5e00de6", "sha256": "092e2a0326ec000a4f22255ecb56cb2f5e8e16ee9e749ef8428455b1faa8e14e"}, "downloads": -1, "filename": "binheat-0.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "91ad70aa3442177049364725b5e00de6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 7912, "upload_time": "2019-04-15T19:35:28", "upload_time_iso_8601": "2019-04-15T19:35:28.355640Z", "url": "https://files.pythonhosted.org/packages/a4/79/da36593082aef8e6180ec0fb3904b88d7ef5c7eed51b890c4242b52516f7/binheat-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "57ff9d360e7da7984c72aa588f81ad4d", "sha256": "0e92dc9a14f43a11d75729a4e8ba06921921d7b074b068399ae1f6ec8dadd6e0"}, "downloads": -1, "filename": "binheat-0.1.0.tar.gz", "has_sig": true, "md5_digest": "57ff9d360e7da7984c72aa588f81ad4d", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 7585, "upload_time": "2019-04-15T19:35:30", "upload_time_iso_8601": "2019-04-15T19:35:30.491879Z", "url": "https://files.pythonhosted.org/packages/9d/f6/fb1a8b20404b594fc8041745f5b51ba5ac990249a5c0158ed4561c768301/binheat-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2650f0bde29d9bae8b3b467609af3016", "sha256": "e25fbf3484bc961991d499269e60f110f3db613e94e70ebf0696bd2f4a96435e"}, "downloads": -1, "filename": "binheat-0.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "2650f0bde29d9bae8b3b467609af3016", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 7914, "upload_time": "2020-01-24T20:52:54", "upload_time_iso_8601": "2020-01-24T20:52:54.319835Z", "url": "https://files.pythonhosted.org/packages/39/0b/b5fa9649ce394c5480aacc7b0a3f9d4238bbdc1c1d77ac31a92b1a3400db/binheat-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e0200fcc0e4c4659a4eb940b2434a97", "sha256": "348cb244ef8a97370b9c03159919bdfbae750573eab28e2c4b4818ce01f60219"}, "downloads": -1, "filename": "binheat-0.2.0.tar.gz", "has_sig": true, "md5_digest": "7e0200fcc0e4c4659a4eb940b2434a97", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 130644, "upload_time": "2020-01-24T20:52:56", "upload_time_iso_8601": "2020-01-24T20:52:56.349210Z", "url": "https://files.pythonhosted.org/packages/90/e5/dd207981c1f1ba0c888203dd613397cd46793900503360c58d4aa3a8c055/binheat-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2650f0bde29d9bae8b3b467609af3016", "sha256": "e25fbf3484bc961991d499269e60f110f3db613e94e70ebf0696bd2f4a96435e"}, "downloads": -1, "filename": "binheat-0.2.0-py3-none-any.whl", "has_sig": true, "md5_digest": "2650f0bde29d9bae8b3b467609af3016", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": "~=3.4", "size": 7914, "upload_time": "2020-01-24T20:52:54", "upload_time_iso_8601": "2020-01-24T20:52:54.319835Z", "url": "https://files.pythonhosted.org/packages/39/0b/b5fa9649ce394c5480aacc7b0a3f9d4238bbdc1c1d77ac31a92b1a3400db/binheat-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7e0200fcc0e4c4659a4eb940b2434a97", "sha256": "348cb244ef8a97370b9c03159919bdfbae750573eab28e2c4b4818ce01f60219"}, "downloads": -1, "filename": "binheat-0.2.0.tar.gz", "has_sig": true, "md5_digest": "7e0200fcc0e4c4659a4eb940b2434a97", "packagetype": "sdist", "python_version": "source", "requires_python": "~=3.4", "size": 130644, "upload_time": "2020-01-24T20:52:56", "upload_time_iso_8601": "2020-01-24T20:52:56.349210Z", "url": "https://files.pythonhosted.org/packages/90/e5/dd207981c1f1ba0c888203dd613397cd46793900503360c58d4aa3a8c055/binheat-0.2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:29 2020"}