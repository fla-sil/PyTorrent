{"info": {"author": "Tzu-ping Chung", "author_email": "uranusjr@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "=============================\ndjango-gunicorn\n=============================\n\nRun Django development server with Gunicorn.\n\n\nQuickstart\n----------\n\nInstall django-gunicorn::\n\n    pip install djgunicorn\n\nThen add it to your ``INSTALLED_APPS``. You will get a new command\n``gunserver`` (please forgive my little pun-loving self). It runs like\nDjango's development server, but the HTTP handling is backed by Gunicorn.\n\n\nFeatures\n--------\n\nYou can find available options with::\n\n    python manage.py help gunserver\n\nMost options work as the built-in ``runserver`` command (in\n``django.contrib.staticfiles``). Exceptions:\n\n* The ``verbosity`` and ``no-color`` settings are *not* passed to Gunicorn.\n  They still affect messages emitted by the command itself, however.\n* The ``nothreading`` option does not do anything.\n\n\nTodo\n----\n\n* Unit tests and CI.\n* Check how low we can support Django and Gunicorn versions.\n* Support for additional Gunicorn configs that may be useful. SSL seems to\n  be a common need.\n* Is it possible to conditionally replace the ``runserver`` command? By\n  installing an alternative app config, for example?\n* We now use ``DJANGO_SETTINGS_MODULE`` to relay where the settings module is\n  to the Gunicorn subprocess (and let Django loads it automatically). This\n  causes problems if ``settings.configure()`` is called manually without a\n  module, and will likely require some hacks to fix.\n\n\nInteresting Links\n-----------------\n\n* `#21978 (Add optional gunicorn support to runserver) <https://code.djangoproject.com/ticket/21978>`_\n* `Fixed #21978 -- Added optional gunicorn support to runserver. \u00b7 django/django <https://github.com/django/django/pull/3461/files>`_\n* `dj-static/dj_static.py \u00b7 kennethreitz/dj-static <https://github.com/kennethreitz/dj-static/blob/485d626/dj_static.py>`_\n* `SSL support for Django-admin runserver <https://groups.google.com/forum/#!topic/django-developers/PgBcSEiUdw0/discussion>`_\n* `Settings \u2014 Gunicorn documentation <http://docs.gunicorn.org/en/stable/settings.html>`_\n\n\nHistory\n-------\n\n0.3.0 (2016-04-13)\n++++++++++++++++++\n\n* Add Gunicorn config changing directory to where ``manage.py`` to avoid\n  problems when ``manage.py`` is run in another directory.\n* Info message is now displayed when Gunicorn reloads, as ``runserver`` does.\n* Enable extended ``runserver`` provided by ``staticfiles`` only if it is\n  installed (which is the default).\n* Gunicorn access logs are now coloured, as ``runserver``'s.\n* Get rid of a custom static handler in favour of Django's stock one.\n\n\n0.2.0 (2016-04-12)\n++++++++++++++++++\n\n* Gunicorn invocation is re-implemented with ``subprocess`` to handle reloading\n  gracefully. (`benoitc/gunicorn#935`_)\n\n\n0.1.1 (2016-04-11)\n++++++++++++++++++\n\n* Lazy-load WSGI handler in Gunicorn application to avoid race conditions.\n\n\n0.1.0 (2016-04-11)\n++++++++++++++++++\n\n* First release on PyPI.\n\n\n.. _`benoitc/gunicorn#935`: <https://github.com/benoitc/gunicorn/issues/935>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uranusjr/django-gunicorn", "keywords": "django-gunicorn", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "djgunicorn", "package_url": "https://pypi.org/project/djgunicorn/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/djgunicorn/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/uranusjr/django-gunicorn"}, "release_url": "https://pypi.org/project/djgunicorn/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Run Django development server with Gunicorn.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Run Django development server with Gunicorn.</p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>Install django-gunicorn:</p>\n<pre>pip install djgunicorn\n</pre>\n<p>Then add it to your <tt>INSTALLED_APPS</tt>. You will get a new command\n<tt>gunserver</tt> (please forgive my little pun-loving self). It runs like\nDjango\u2019s development server, but the HTTP handling is backed by Gunicorn.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>You can find available options with:</p>\n<pre>python manage.py help gunserver\n</pre>\n<p>Most options work as the built-in <tt>runserver</tt> command (in\n<tt>django.contrib.staticfiles</tt>). Exceptions:</p>\n<ul>\n<li>The <tt>verbosity</tt> and <tt><span class=\"pre\">no-color</span></tt> settings are <em>not</em> passed to Gunicorn.\nThey still affect messages emitted by the command itself, however.</li>\n<li>The <tt>nothreading</tt> option does not do anything.</li>\n</ul>\n</div>\n<div id=\"todo\">\n<h2>Todo</h2>\n<ul>\n<li>Unit tests and CI.</li>\n<li>Check how low we can support Django and Gunicorn versions.</li>\n<li>Support for additional Gunicorn configs that may be useful. SSL seems to\nbe a common need.</li>\n<li>Is it possible to conditionally replace the <tt>runserver</tt> command? By\ninstalling an alternative app config, for example?</li>\n<li>We now use <tt>DJANGO_SETTINGS_MODULE</tt> to relay where the settings module is\nto the Gunicorn subprocess (and let Django loads it automatically). This\ncauses problems if <tt>settings.configure()</tt> is called manually without a\nmodule, and will likely require some hacks to fix.</li>\n</ul>\n</div>\n<div id=\"interesting-links\">\n<h2>Interesting Links</h2>\n<ul>\n<li><a href=\"https://code.djangoproject.com/ticket/21978\" rel=\"nofollow\">#21978 (Add optional gunicorn support to runserver)</a></li>\n<li><a href=\"https://github.com/django/django/pull/3461/files\" rel=\"nofollow\">Fixed #21978 \u2013 Added optional gunicorn support to runserver. \u00b7 django/django</a></li>\n<li><a href=\"https://github.com/kennethreitz/dj-static/blob/485d626/dj_static.py\" rel=\"nofollow\">dj-static/dj_static.py \u00b7 kennethreitz/dj-static</a></li>\n<li><a href=\"https://groups.google.com/forum/#!topic/django-developers/PgBcSEiUdw0/discussion\" rel=\"nofollow\">SSL support for Django-admin runserver</a></li>\n<li><a href=\"http://docs.gunicorn.org/en/stable/settings.html\" rel=\"nofollow\">Settings \u2014 Gunicorn documentation</a></li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.3.0 (2016-04-13)</h3>\n<ul>\n<li>Add Gunicorn config changing directory to where <tt>manage.py</tt> to avoid\nproblems when <tt>manage.py</tt> is run in another directory.</li>\n<li>Info message is now displayed when Gunicorn reloads, as <tt>runserver</tt> does.</li>\n<li>Enable extended <tt>runserver</tt> provided by <tt>staticfiles</tt> only if it is\ninstalled (which is the default).</li>\n<li>Gunicorn access logs are now coloured, as <tt>runserver</tt>\u2019s.</li>\n<li>Get rid of a custom static handler in favour of Django\u2019s stock one.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2016-04-12)</h3>\n<ul>\n<li>Gunicorn invocation is re-implemented with <tt>subprocess</tt> to handle reloading\ngracefully. (<a href=\"&lt;https://github.com/benoitc/gunicorn/issues/935&gt;\" rel=\"nofollow\">benoitc/gunicorn#935</a>)</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.1 (2016-04-11)</h3>\n<ul>\n<li>Lazy-load WSGI handler in Gunicorn application to avoid race conditions.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0 (2016-04-11)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2059865, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "1a9862004e47dc1d948ee967a31ba32d", "sha256": "f94a0bba913496f066e461c86fd4ee75af3cef5c22a41d5a37e63ca76a796ac0"}, "downloads": -1, "filename": "djgunicorn-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1a9862004e47dc1d948ee967a31ba32d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5610, "upload_time": "2016-04-10T11:22:14", "upload_time_iso_8601": "2016-04-10T11:22:14.809462Z", "url": "https://files.pythonhosted.org/packages/cd/3f/9d17e8c4d41a131be4098b5ccbe133ba9ca7bce53eec5e5739929c35a5a0/djgunicorn-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1688722682e00de3d92e9059a275783a", "sha256": "d0a4b44f377ddec7d8b2ec6f7ce6ab798432d5e0e8e1384873de7a687031a4c5"}, "downloads": -1, "filename": "djgunicorn-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1688722682e00de3d92e9059a275783a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5636, "upload_time": "2016-04-10T12:18:48", "upload_time_iso_8601": "2016-04-10T12:18:48.945411Z", "url": "https://files.pythonhosted.org/packages/56/50/0cfa11e741bf650fb2356389559236b08f2df66c99a03a249cb9482d0090/djgunicorn-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "756154563cea428c3fe656b0c69c19d6", "sha256": "2da1d7efb7bc1f392efa44b31aef5b84467029d3d6101fb89e37483d6152f8f1"}, "downloads": -1, "filename": "djgunicorn-0.2.0.tar.gz", "has_sig": false, "md5_digest": "756154563cea428c3fe656b0c69c19d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6710, "upload_time": "2016-04-11T05:44:02", "upload_time_iso_8601": "2016-04-11T05:44:02.287555Z", "url": "https://files.pythonhosted.org/packages/a2/b6/feab022ea14781a6347be34185224833a6509e7a04588d9504cf108f6cea/djgunicorn-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "10e04a95f3340e4a2b004d1fad663a73", "sha256": "c50c0d05df0fb4c857544a9d9efab33dec45a3e1ac79aec29f407c57e2adcdac"}, "downloads": -1, "filename": "djgunicorn-0.3.0.tar.gz", "has_sig": false, "md5_digest": "10e04a95f3340e4a2b004d1fad663a73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8451, "upload_time": "2016-04-12T12:11:00", "upload_time_iso_8601": "2016-04-12T12:11:00.120731Z", "url": "https://files.pythonhosted.org/packages/c5/59/806e291bcfa584f4146c8dad28fa044f40e4ff3b2556ad9e7c14c818997e/djgunicorn-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "10e04a95f3340e4a2b004d1fad663a73", "sha256": "c50c0d05df0fb4c857544a9d9efab33dec45a3e1ac79aec29f407c57e2adcdac"}, "downloads": -1, "filename": "djgunicorn-0.3.0.tar.gz", "has_sig": false, "md5_digest": "10e04a95f3340e4a2b004d1fad663a73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8451, "upload_time": "2016-04-12T12:11:00", "upload_time_iso_8601": "2016-04-12T12:11:00.120731Z", "url": "https://files.pythonhosted.org/packages/c5/59/806e291bcfa584f4146c8dad28fa044f40e4ff3b2556ad9e7c14c818997e/djgunicorn-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:34 2020"}