{"info": {"author": "vaaaaanquish", "author_email": "6syun9@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "# Xontrib Powerline 2\n---\n\nxontrib-powerline fork by [santagada/xontrib-powerline](https://github.com/santagada/xontrib-powerline).\n\n<img src=\"https://github.com/6syun9/xontrib-powerline2/raw/master/img/example.png\" alt=\"example\" title=\"example\">\n\n# Install\n\n```\npip install xontrib-powerline2\n```\n\nAnd them load it on your ``.xonshrc``\n\n```\nxontrib load powerline2\n```\n\n\n# Configuration\n\nThere are two variables that can be set, ``$PROMPT`` for main prompt, ``$PL_PROMPT`` for the right prompt and ``$PL_TOOLBAR`` for the bottom toolbar.\nThey contain a list of sections that can be used separated by ``>``. The value ``!`` means not to use that prompt.\n\nExamples:\n\n```\n$PL_PROMPT='cwd>branch'\n$PL_RPROMPT = '!'  # for no toolbar\n$PL_TOOLBAR = 'who>virtualenv>branch>cwd>full_proc'\nxontrib load powerline\n```\n\n## Bulid prompt\n\nIf you want to override the settings after `xontrib load`, so commit changes to your prompt execute ``pl_build_prompt`` command.\n\n## Check config\n\nTo see all available sections type ``pl_available_sections`` command.\n\n<img src=\"https://github.com/6syun9/xontrib-powerline2/raw/master/img/example_available.png\" alt=\"example\" title=\"example_available\">\n\n## Default sections\n\n|section|description|\n|---|---|\n|who| {user}@{hostname} |\n|virtualenv| {env_name} |\n|branch| {curr_branch} |\n|cwd| $pwd using $pl_colors['cwd', 'git_root', 'git_sub_dir'] and $pl_parts |\n|short_cwd| {short_cwd} |\n|full_proc| run time of the previous command from history |\n|timing| diff from previous command's executed time |\n|time| strftime(' %h:%m ') |\n|history| len(\\_\\_xonsh\\_\\_.history) |\n|rtns| '!' if \\_\\_xonsh\\_\\_.history.rtns else none |\n|full_rtns| rtns[-1] if \\_\\_xonsh\\_\\_.history.rtns else none |\n\n\nIf you want to know about `{}` sections, please look [xonsh document](https://xon.sh/tutorial.html#customizing-the-prompt).\n\n\n## Custom sections\n\nWe can add customize origin section by `$PL_EXTRA_SEC`.\n```\n# func return [format string, text color, background color]\n$PL_EXTRA_SEC = {\"user\": lambda: [' I'm {user} ', 'BLACK', '#fd971f']}\n$PL_PROMPT='user>cwd>branch'\n$PL_TOOLBAR='!'\n$PL_RPROMPT='!'\nxontrib load powerline\n```\n<img src=\"https://github.com/6syun9/xontrib-powerline2/raw/master/img/example_custom_sec.png\" alt=\"example\" title=\"custom_sec\">\n\n\n## Section's color\n\nWe can change section color by `$PL_COLORS`.\n\n`$PL_COLORS` is `dict`. Basically, the value is `(text_color, background_color)`.\n|key|default value|description|\n|---|---|---|\n|who| (\"BLACK\", \"#a6e22e\") ||\n|venv| (\"BLACK\", \"INTENSE_GREEN\") ||\n|branch| (\"#333\") | background color from $PROMPT_FIELDS['branch_bg_color'] |\n|cwd| (\"WHITE\", \"#444\") ||\n|git_root| (\"BLACK\", \"#00adee\") | used by cwd |\n|git_sub_dir| (\"WHITE\", \"#00adee\") | used by cwd |\n|short_cwd| (\"WHITE\", \"#444\") ||\n|full_proc| (\"WHITE\", \"RED\", \"#444\") |There are two types of background depending on the situation|\n|timing| (\"WHITE\", \"#444\") ||\n|time| (\"BLACK\", \"#00adee\") ||\n|history| (\"WHITE\", \"#333333\") ||\n|rtns| (\"WHITE\", \"RED\") ||\n|full_rtns| (\"WHITE\", \"RED\", \"#444\") |There are two types of background depending on the situation|\n\n\n## Separate mode\n\nWe can change the way of separation mode by `$PL_SEP_MODE`.\n\n|mode|separate char|\n|---|---|\n|powerline| \ue0b0, \ue0b1, \ue0b2, \ue0b3|\n|round| \ue0b4, \ue0b5, \ue0b6, \ue0b7 |\n|down| \ue0b8, \ue0b9, \ue0ba, \ue0bb |\n|up| \ue0bc, \ue0bd, \ue0be, \ue0bf |\n|flame| \ue0c0, \ue0c1, \ue0c2, \ue0c3 |\n|squares| \ue0c6, \ue0c4, \ue0c7, \ue0c5 |\n|ruiny| \ue0c8, \ue0c1, \ue0ca, \ue0c3 |\n|lego| \ue0d1, \ue0d0 |\n\nFor example\n```\n# set $PL_SEP_MODE or using pl_set_mode alias\n$PL_SEP_MODE='round'\npl_set_mode round\n```\n<img src=\"https://github.com/6syun9/xontrib-powerline2/raw/master/img/example_round.png\" alt=\"example\" title=\"round\">\n\nIf you want to use original separeter, you can use `$PL_ORG_SEP`, `$PL_ORG_SEP_THIN`, `$PL_ORG_RSEP`.\n```\n$PL_ORG_SEP = '\u25a0'\n$PL_ORG_SEP_THIN = '\u25a1'\n$PL_ORG_RSEP = '\u25a0'\nxontrib load xontrib-powerline2\n```\n<img src=\"https://github.com/6syun9/xontrib-powerline2/raw/master/img/example_origin_sep.png\" alt=\"example\" title=\"origin_sep\">\n\n# Credits\n\n - `laerus/cookiecutter-xontrib`: https://github.com/laerus/cookiecutter-xontrib\n - `santagada/xontrib-powerline`: https://github.com/santagada/xontrib-powerline\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/6syun9/xontrib-powerline2", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "xontrib-powerline2", "package_url": "https://pypi.org/project/xontrib-powerline2/", "platform": "any", "project_url": "https://pypi.org/project/xontrib-powerline2/", "project_urls": {"Homepage": "https://github.com/6syun9/xontrib-powerline2"}, "release_url": "https://pypi.org/project/xontrib-powerline2/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Powerline for Xonsh shell", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Xontrib Powerline 2</h1>\n<hr>\n<p>xontrib-powerline fork by <a href=\"https://github.com/santagada/xontrib-powerline\" rel=\"nofollow\">santagada/xontrib-powerline</a>.</p>\n<img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0f5e6018f6bb6436f80e1eaaa6f08eb0d6bee535/68747470733a2f2f6769746875622e636f6d2f367379756e392f786f6e747269622d706f7765726c696e65322f7261772f6d61737465722f696d672f6578616d706c652e706e67\">\n<h1>Install</h1>\n<pre><code>pip install xontrib-powerline2\n</code></pre>\n<p>And them load it on your <code>.xonshrc</code></p>\n<pre><code>xontrib load powerline2\n</code></pre>\n<h1>Configuration</h1>\n<p>There are two variables that can be set, <code>$PROMPT</code> for main prompt, <code>$PL_PROMPT</code> for the right prompt and <code>$PL_TOOLBAR</code> for the bottom toolbar.\nThey contain a list of sections that can be used separated by <code>&gt;</code>. The value <code>!</code> means not to use that prompt.</p>\n<p>Examples:</p>\n<pre><code>$PL_PROMPT='cwd&gt;branch'\n$PL_RPROMPT = '!'  # for no toolbar\n$PL_TOOLBAR = 'who&gt;virtualenv&gt;branch&gt;cwd&gt;full_proc'\nxontrib load powerline\n</code></pre>\n<h2>Bulid prompt</h2>\n<p>If you want to override the settings after <code>xontrib load</code>, so commit changes to your prompt execute <code>pl_build_prompt</code> command.</p>\n<h2>Check config</h2>\n<p>To see all available sections type <code>pl_available_sections</code> command.</p>\n<img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/87bbc2139df692cb866a2beca2c127463fa2e31e/68747470733a2f2f6769746875622e636f6d2f367379756e392f786f6e747269622d706f7765726c696e65322f7261772f6d61737465722f696d672f6578616d706c655f617661696c61626c652e706e67\">\n<h2>Default sections</h2>\n<table>\n<thead>\n<tr>\n<th>section</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>who</td>\n<td>{user}@{hostname}</td>\n</tr>\n<tr>\n<td>virtualenv</td>\n<td>{env_name}</td>\n</tr>\n<tr>\n<td>branch</td>\n<td>{curr_branch}</td>\n</tr>\n<tr>\n<td>cwd</td>\n<td>$pwd using $pl_colors['cwd', 'git_root', 'git_sub_dir'] and $pl_parts</td>\n</tr>\n<tr>\n<td>short_cwd</td>\n<td>{short_cwd}</td>\n</tr>\n<tr>\n<td>full_proc</td>\n<td>run time of the previous command from history</td>\n</tr>\n<tr>\n<td>timing</td>\n<td>diff from previous command's executed time</td>\n</tr>\n<tr>\n<td>time</td>\n<td>strftime(' %h:%m ')</td>\n</tr>\n<tr>\n<td>history</td>\n<td>len(__xonsh__.history)</td>\n</tr>\n<tr>\n<td>rtns</td>\n<td>'!' if __xonsh__.history.rtns else none</td>\n</tr>\n<tr>\n<td>full_rtns</td>\n<td>rtns[-1] if __xonsh__.history.rtns else none</td>\n</tr></tbody></table>\n<p>If you want to know about <code>{}</code> sections, please look <a href=\"https://xon.sh/tutorial.html#customizing-the-prompt\" rel=\"nofollow\">xonsh document</a>.</p>\n<h2>Custom sections</h2>\n<p>We can add customize origin section by <code>$PL_EXTRA_SEC</code>.</p>\n<pre><code># func return [format string, text color, background color]\n$PL_EXTRA_SEC = {\"user\": lambda: [' I'm {user} ', 'BLACK', '#fd971f']}\n$PL_PROMPT='user&gt;cwd&gt;branch'\n$PL_TOOLBAR='!'\n$PL_RPROMPT='!'\nxontrib load powerline\n</code></pre>\n<img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15478ef37b5622b1001da39d15d033f620c8629f/68747470733a2f2f6769746875622e636f6d2f367379756e392f786f6e747269622d706f7765726c696e65322f7261772f6d61737465722f696d672f6578616d706c655f637573746f6d5f7365632e706e67\">\n<h2>Section's color</h2>\n<p>We can change section color by <code>$PL_COLORS</code>.</p>\n<p><code>$PL_COLORS</code> is <code>dict</code>. Basically, the value is <code>(text_color, background_color)</code>.\n|key|default value|description|\n|---|---|---|\n|who| (\"BLACK\", \"#a6e22e\") ||\n|venv| (\"BLACK\", \"INTENSE_GREEN\") ||\n|branch| (\"#333\") | background color from $PROMPT_FIELDS['branch_bg_color'] |\n|cwd| (\"WHITE\", \"#444\") ||\n|git_root| (\"BLACK\", \"#00adee\") | used by cwd |\n|git_sub_dir| (\"WHITE\", \"#00adee\") | used by cwd |\n|short_cwd| (\"WHITE\", \"#444\") ||\n|full_proc| (\"WHITE\", \"RED\", \"#444\") |There are two types of background depending on the situation|\n|timing| (\"WHITE\", \"#444\") ||\n|time| (\"BLACK\", \"#00adee\") ||\n|history| (\"WHITE\", \"#333333\") ||\n|rtns| (\"WHITE\", \"RED\") ||\n|full_rtns| (\"WHITE\", \"RED\", \"#444\") |There are two types of background depending on the situation|</p>\n<h2>Separate mode</h2>\n<p>We can change the way of separation mode by <code>$PL_SEP_MODE</code>.</p>\n<table>\n<thead>\n<tr>\n<th>mode</th>\n<th>separate char</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>powerline</td>\n<td>\ue0b0, \ue0b1, \ue0b2, \ue0b3</td>\n</tr>\n<tr>\n<td>round</td>\n<td>\ue0b4, \ue0b5, \ue0b6, \ue0b7</td>\n</tr>\n<tr>\n<td>down</td>\n<td>\ue0b8, \ue0b9, \ue0ba, \ue0bb</td>\n</tr>\n<tr>\n<td>up</td>\n<td>\ue0bc, \ue0bd, \ue0be, \ue0bf</td>\n</tr>\n<tr>\n<td>flame</td>\n<td>\ue0c0, \ue0c1, \ue0c2, \ue0c3</td>\n</tr>\n<tr>\n<td>squares</td>\n<td>\ue0c6, \ue0c4, \ue0c7, \ue0c5</td>\n</tr>\n<tr>\n<td>ruiny</td>\n<td>\ue0c8, \ue0c1, \ue0ca, \ue0c3</td>\n</tr>\n<tr>\n<td>lego</td>\n<td>\ue0d1, \ue0d0</td>\n</tr></tbody></table>\n<p>For example</p>\n<pre><code># set $PL_SEP_MODE or using pl_set_mode alias\n$PL_SEP_MODE='round'\npl_set_mode round\n</code></pre>\n<img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16b734ad2958f445a6966d4487947e145692ec19/68747470733a2f2f6769746875622e636f6d2f367379756e392f786f6e747269622d706f7765726c696e65322f7261772f6d61737465722f696d672f6578616d706c655f726f756e642e706e67\">\n<p>If you want to use original separeter, you can use <code>$PL_ORG_SEP</code>, <code>$PL_ORG_SEP_THIN</code>, <code>$PL_ORG_RSEP</code>.</p>\n<pre><code>$PL_ORG_SEP = '\u25a0'\n$PL_ORG_SEP_THIN = '\u25a1'\n$PL_ORG_RSEP = '\u25a0'\nxontrib load xontrib-powerline2\n</code></pre>\n<img alt=\"example\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7522d2406350a01261ca3ae5bbb4b3f4f65b0226/68747470733a2f2f6769746875622e636f6d2f367379756e392f786f6e747269622d706f7765726c696e65322f7261772f6d61737465722f696d672f6578616d706c655f6f726967696e5f7365702e706e67\">\n<h1>Credits</h1>\n<ul>\n<li><code>laerus/cookiecutter-xontrib</code>: <a href=\"https://github.com/laerus/cookiecutter-xontrib\" rel=\"nofollow\">https://github.com/laerus/cookiecutter-xontrib</a></li>\n<li><code>santagada/xontrib-powerline</code>: <a href=\"https://github.com/santagada/xontrib-powerline\" rel=\"nofollow\">https://github.com/santagada/xontrib-powerline</a></li>\n</ul>\n\n          </div>"}, "last_serial": 5763965, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "faa668772e0a3bbfc2a09da0107a29eb", "sha256": "2721248b79beb84f6d29ff7b3647be9289e8cc90a93317068b44046349ee8941"}, "downloads": -1, "filename": "xontrib_powerline2-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "faa668772e0a3bbfc2a09da0107a29eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6572, "upload_time": "2019-08-31T09:31:11", "upload_time_iso_8601": "2019-08-31T09:31:11.723992Z", "url": "https://files.pythonhosted.org/packages/31/2e/298dcc8305dcee5edbcd114b1b06dadac79dd9e58a7f6d47247b411d7920/xontrib_powerline2-1.0.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "faa668772e0a3bbfc2a09da0107a29eb", "sha256": "2721248b79beb84f6d29ff7b3647be9289e8cc90a93317068b44046349ee8941"}, "downloads": -1, "filename": "xontrib_powerline2-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "faa668772e0a3bbfc2a09da0107a29eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6572, "upload_time": "2019-08-31T09:31:11", "upload_time_iso_8601": "2019-08-31T09:31:11.723992Z", "url": "https://files.pythonhosted.org/packages/31/2e/298dcc8305dcee5edbcd114b1b06dadac79dd9e58a7f6d47247b411d7920/xontrib_powerline2-1.0.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:24:44 2020"}