{"info": {"author": "David Thenon", "author_email": "sveetch@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3"], "description": ".. _Nu Html Checker (v.Nu): https://github.com/validator/validator\n.. _Sitemap: http://www.sitemaps.org/\n\nPy Html Checker\n===============\n\nThis is an interface around `Nu Html Checker (v.Nu)`_ to check document\nvalidation either from a list of pages or a `Sitemap`_.\n\nLinks\n*****\n\n* Download its `PyPi package <http://pypi.python.org/pypi/py-html-checker>`_;\n* Clone it on its `Github repository <https://github.com/sveetch/py-html-checker>`_;\n\nRequires\n********\n\n* Python>=3.4;\n* Java>=8 (openjdk8 or oraclejdk8);\n* Virtualenv (recommended);\n* Pip (recommended);\n\nDependancies\n************\n\n* ``requests``;\n* ``click>=7.0,<8.0`` (CLI only);\n* ``colorama`` (CLI only);\n* ``colorlog`` (CLI only);\n* ``Jinja2>=2.10,<3.0`` (Jinja only);\n* ``Pygments`` (Jinja only);\n\nInstall\n*******\n\n::\n\n    pip install py-html-checker[cli,jinja]\n\nIf you don't plan to use it from command line (like as a module) or HTML export\nyou can avoid the ``cli`` and ``jinja`` parts: ::\n\n    pip install py-html-checker\n\nUsage\n*****\n\nValidate one or many pages\n--------------------------\n\nWith the command ``page`` you can validate one or many pages. Command accept\none or many path and each path can be either an URL or a filepath (absolute or\nrelative from your current location): ::\n\n    html-checker page ping.html\n    html-checker page http://perdu.com\n    html-checker page ping.html http://perdu.com foo/bar.html\n\nValidate all path from a sitemap\n--------------------------------\n\nWith the command ``site`` you can validate every page referenced in a\n``sitemap.xml`` file. Command accept only one argument for the sitemap path\nwhich can be either an URL or a filepath (absolute or relative from your\ncurrent location).\n\nNote than for a sitemap file, its referenced urls must be absolute or relative\nto your current location. For a sitemap url, its referenced urls must be an\nabsolute url (with leading ``http``): ::\n\n    html-checker site sitemap.xml\n    html-checker site http://perdu.com/sitemap.xml\n\nManage verbosity\n----------------\n\nDefault commandline verbosity is set to \"Info\" level, you may set it to \"Debug\"\nlevel to get also some more informations about command line work: ::\n\n    html-checker -v 5 site sitemap.xml\n\nOr a totally silent output (beware that not any error will be return to output\nexcept commandline critical error): ::\n\n    html-checker -v 0 site sitemap.xml\n\nCommon options\n--------------\n\n**--destination**\n    Directory path where to write report files. If destination is not given,\n    every files will be printed out. You can use a dot to write files to your\n    current directory, a relative path or an absolute path. Path can start\n    with `~` to point to your user home directory.\n**--exporter**\n    Select exporter format. Default format is ``logging``, it just printout\n    report messages. There is also a ``json`` format to create JSON files for\n    reports. And finally a ``html`` format to create HTML files.\n**--pack/--no-pack**\n    Pack reports into a single file or not. Default is to pack everything in\n    a single file. 'no-pack' will create a file for each report and then an\n    export summary. It is recommended to define a destination directory with\n    '--destination' if you don't plan to use packed export, else every files\n    will just be printed out in an unique output. This option has no effect\n    with ``logging`` format.\n**--safe**\n    Invalid paths won't break execution of script and it will be able to\n    continue to the end. This is mostly for rare usecase when invalid source\n    encounter a bug from report parsing or from validator.\n**--split**\n    Execute validation for each path in its own distinct instance. Useful for\n    very large path list which may take too long to display anything until\n    every path has been validated. However, for small or moderate path list it\n    will be longer than packed execution.\n**--user-agent**\n    A customer user-agent to use for every possible requests.\n**--Xss**\n    Java thread stack size. Useful in some case where you encounter error\n    'StackOverflowError' from validator. Set it to something like '512k'.\n\nSpecific formats options\n------------------------\n\nhtml\n....\n\n**--template-dir**\n    A path to a template directory for your custom templates. Your template\n    directory must contains the summary, report and audit main templates and\n    also a `main.css` file.\n\n\nSpecific 'site' options\n-----------------------\n\n**--sitemap-only**\n    For ``site`` command only. This will only get and parse given sitemap path\n    but without validating its items, useful to validate a sitemap before\n    using it for validations.\n\n\nCLI help\n--------\n\nSee commandline helps for more details : ::\n\n    html-checker -h\n    html-checker page -h\n    html-checker site -h", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sveetch/py-html-checker", "keywords": "Python", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "py-html-checker", "package_url": "https://pypi.org/project/py-html-checker/", "platform": "", "project_url": "https://pypi.org/project/py-html-checker/", "project_urls": {"Homepage": "https://github.com/sveetch/py-html-checker"}, "release_url": "https://pypi.org/project/py-html-checker/0.3.0/", "requires_dist": null, "requires_python": "", "summary": "A tool to raise quality issues about HTML pages", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is an interface around <a href=\"https://github.com/validator/validator\" rel=\"nofollow\">Nu Html Checker (v.Nu)</a> to check document\nvalidation either from a list of pages or a <a href=\"http://www.sitemaps.org/\" rel=\"nofollow\">Sitemap</a>.</p>\n<div id=\"links\">\n<h2>Links</h2>\n<ul>\n<li>Download its <a href=\"http://pypi.python.org/pypi/py-html-checker\" rel=\"nofollow\">PyPi package</a>;</li>\n<li>Clone it on its <a href=\"https://github.com/sveetch/py-html-checker\" rel=\"nofollow\">Github repository</a>;</li>\n</ul>\n</div>\n<div id=\"requires\">\n<h2>Requires</h2>\n<ul>\n<li>Python&gt;=3.4;</li>\n<li>Java&gt;=8 (openjdk8 or oraclejdk8);</li>\n<li>Virtualenv (recommended);</li>\n<li>Pip (recommended);</li>\n</ul>\n</div>\n<div id=\"dependancies\">\n<h2>Dependancies</h2>\n<ul>\n<li><tt>requests</tt>;</li>\n<li><tt><span class=\"pre\">click&gt;=7.0,&lt;8.0</span></tt> (CLI only);</li>\n<li><tt>colorama</tt> (CLI only);</li>\n<li><tt>colorlog</tt> (CLI only);</li>\n<li><tt><span class=\"pre\">Jinja2&gt;=2.10,&lt;3.0</span></tt> (Jinja only);</li>\n<li><tt>Pygments</tt> (Jinja only);</li>\n</ul>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install py-html-checker[cli,jinja]\n</pre>\n<p>If you don\u2019t plan to use it from command line (like as a module) or HTML export\nyou can avoid the <tt>cli</tt> and <tt>jinja</tt> parts:</p>\n<pre>pip install py-html-checker\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"validate-one-or-many-pages\">\n<h3>Validate one or many pages</h3>\n<p>With the command <tt>page</tt> you can validate one or many pages. Command accept\none or many path and each path can be either an URL or a filepath (absolute or\nrelative from your current location):</p>\n<pre>html-checker page ping.html\nhtml-checker page http://perdu.com\nhtml-checker page ping.html http://perdu.com foo/bar.html\n</pre>\n</div>\n<div id=\"validate-all-path-from-a-sitemap\">\n<h3>Validate all path from a sitemap</h3>\n<p>With the command <tt>site</tt> you can validate every page referenced in a\n<tt>sitemap.xml</tt> file. Command accept only one argument for the sitemap path\nwhich can be either an URL or a filepath (absolute or relative from your\ncurrent location).</p>\n<p>Note than for a sitemap file, its referenced urls must be absolute or relative\nto your current location. For a sitemap url, its referenced urls must be an\nabsolute url (with leading <tt>http</tt>):</p>\n<pre>html-checker site sitemap.xml\nhtml-checker site http://perdu.com/sitemap.xml\n</pre>\n</div>\n<div id=\"manage-verbosity\">\n<h3>Manage verbosity</h3>\n<p>Default commandline verbosity is set to \u201cInfo\u201d level, you may set it to \u201cDebug\u201d\nlevel to get also some more informations about command line work:</p>\n<pre>html-checker -v 5 site sitemap.xml\n</pre>\n<p>Or a totally silent output (beware that not any error will be return to output\nexcept commandline critical error):</p>\n<pre>html-checker -v 0 site sitemap.xml\n</pre>\n</div>\n<div id=\"common-options\">\n<h3>Common options</h3>\n<dl>\n<dt><strong>\u2013destination</strong></dt>\n<dd>Directory path where to write report files. If destination is not given,\nevery files will be printed out. You can use a dot to write files to your\ncurrent directory, a relative path or an absolute path. Path can start\nwith <cite>~</cite> to point to your user home directory.</dd>\n<dt><strong>\u2013exporter</strong></dt>\n<dd>Select exporter format. Default format is <tt>logging</tt>, it just printout\nreport messages. There is also a <tt>json</tt> format to create JSON files for\nreports. And finally a <tt>html</tt> format to create HTML files.</dd>\n<dt><strong>\u2013pack/\u2013no-pack</strong></dt>\n<dd>Pack reports into a single file or not. Default is to pack everything in\na single file. \u2018no-pack\u2019 will create a file for each report and then an\nexport summary. It is recommended to define a destination directory with\n\u2018\u2013destination\u2019 if you don\u2019t plan to use packed export, else every files\nwill just be printed out in an unique output. This option has no effect\nwith <tt>logging</tt> format.</dd>\n<dt><strong>\u2013safe</strong></dt>\n<dd>Invalid paths won\u2019t break execution of script and it will be able to\ncontinue to the end. This is mostly for rare usecase when invalid source\nencounter a bug from report parsing or from validator.</dd>\n<dt><strong>\u2013split</strong></dt>\n<dd>Execute validation for each path in its own distinct instance. Useful for\nvery large path list which may take too long to display anything until\nevery path has been validated. However, for small or moderate path list it\nwill be longer than packed execution.</dd>\n<dt><strong>\u2013user-agent</strong></dt>\n<dd>A customer user-agent to use for every possible requests.</dd>\n<dt><strong>\u2013Xss</strong></dt>\n<dd>Java thread stack size. Useful in some case where you encounter error\n\u2018StackOverflowError\u2019 from validator. Set it to something like \u2018512k\u2019.</dd>\n</dl>\n</div>\n<div id=\"specific-formats-options\">\n<h3>Specific formats options</h3>\n<h3 id=\"html\"><span class=\"section-subtitle\">html</span></h3>\n<dl>\n<dt><strong>\u2013template-dir</strong></dt>\n<dd>A path to a template directory for your custom templates. Your template\ndirectory must contains the summary, report and audit main templates and\nalso a <cite>main.css</cite> file.</dd>\n</dl>\n</div>\n<div id=\"specific-site-options\">\n<h3>Specific \u2018site\u2019 options</h3>\n<dl>\n<dt><strong>\u2013sitemap-only</strong></dt>\n<dd>For <tt>site</tt> command only. This will only get and parse given sitemap path\nbut without validating its items, useful to validate a sitemap before\nusing it for validations.</dd>\n</dl>\n</div>\n<div id=\"cli-help\">\n<h3>CLI help</h3>\n<p>See commandline helps for more details :</p>\n<pre>html-checker -h\nhtml-checker page -h\nhtml-checker site -h\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6600041, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "15ad57e178fd2b24eb5cc2e6f3cd5b25", "sha256": "b69e7d8effca3253a235bd98995d9e8b67772a9dfd7cb5166be2621d899df429"}, "downloads": -1, "filename": "py-html-checker-0.1.0.tar.gz", "has_sig": false, "md5_digest": "15ad57e178fd2b24eb5cc2e6f3cd5b25", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25485559, "upload_time": "2019-08-27T00:19:13", "upload_time_iso_8601": "2019-08-27T00:19:13.841955Z", "url": "https://files.pythonhosted.org/packages/ef/ff/4cd6eab0deb559c96df4be1a0ebbee569b0e868e74cc0f9bf20e095b4515/py-html-checker-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4f9a537a2087d77972c8101c488419ec", "sha256": "d257c5f513871829544e175284d3b0af16468dab74dbcec334d87d4e11528e73"}, "downloads": -1, "filename": "py-html-checker-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4f9a537a2087d77972c8101c488419ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25490768, "upload_time": "2019-12-25T10:53:12", "upload_time_iso_8601": "2019-12-25T10:53:12.576251Z", "url": "https://files.pythonhosted.org/packages/79/e2/42e0d7b61ee22f5ee60cea45d145a0bf47ce59d54b9c4b5449eeff500fee/py-html-checker-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "fd89c020fc823d95ba273719d51cf213", "sha256": "bf80c3a2c618816d08852e52c9cedc79860ab80c285ada799a377160603fb3a0"}, "downloads": -1, "filename": "py-html-checker-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fd89c020fc823d95ba273719d51cf213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25502268, "upload_time": "2020-02-10T02:30:58", "upload_time_iso_8601": "2020-02-10T02:30:58.803775Z", "url": "https://files.pythonhosted.org/packages/b6/c4/3c30652c356a4a4c4ef370cd3154a76b4ac0f6486004ff9db07fe15d567a/py-html-checker-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd89c020fc823d95ba273719d51cf213", "sha256": "bf80c3a2c618816d08852e52c9cedc79860ab80c285ada799a377160603fb3a0"}, "downloads": -1, "filename": "py-html-checker-0.3.0.tar.gz", "has_sig": false, "md5_digest": "fd89c020fc823d95ba273719d51cf213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25502268, "upload_time": "2020-02-10T02:30:58", "upload_time_iso_8601": "2020-02-10T02:30:58.803775Z", "url": "https://files.pythonhosted.org/packages/b6/c4/3c30652c356a4a4c4ef370cd3154a76b4ac0f6486004ff9db07fe15d567a/py-html-checker-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:18 2020"}