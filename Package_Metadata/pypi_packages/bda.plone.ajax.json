{"info": {"author": "Robert Niederreiter", "author_email": "dev@bluedynamics.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Plone", "Framework :: Plone :: 5.1", "Framework :: Plone :: 5.2", "Framework :: Plone :: Addon", "Framework :: Zope :: 2", "Framework :: Zope :: 4", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Integration package\n===================\n\nThis is the plone integration package for\n`bdajax <http://github.com/bluedynamics/bdajax/>`_.\n\n\nInstallation\n============\n\n- Make egg available in your instance.\n- Apply extension profile.\n\n\nUsage\n=====\n\nFor detailed documentation about ``bdajax`` please refer to\n`bdajax <http://github.com/bluedynamics/bdajax/>`_.\n\n\nImplement ajax action as browser view\n-------------------------------------\n\nAn ajax action can be implemented as simple browser view. The easiest way is to\nrender a template only. Create template ``tile_a.pt``:\n\n.. code-block:: xml\n\n    <div xmlns:ajax=\"http://namesspaces.bluedynamics.eu/ajax\" tal:omit-tag=\"\">\n\n      <!-- the tile -->\n      <div class=\"tile_a\"\n           style=\"background-color:#ffc261;\">\n\n        <h3>I am tile A</h3>\n\n        <!-- perform action directly. here we render tile_b, see below -->\n        <a href=\"\"\n           ajax:bind=\"click\"\n           ajax:action=\"bdajax_example_tile_b:.tile_a:replace\"\n           ajax:target=\"\"\n           tal:attributes=\"ajax:target context/absolute_url\">alter me</a>\n\n      </div>\n\n    </div>\n\nConfigure via ZCML:\n\n.. code-block:: xml\n\n    <browser:page\n      for=\"*\"\n      name=\"bdajax_example_tile_a\"\n      template=\"tile_a.pt\"\n      permission=\"zope2.View\" />\n\n\nImplement ajax action as content provider\n-----------------------------------------\n\nCreate a template ``tile_b.pt`` containing the markup:\n\n.. code-block:: xml\n\n    <div xmlns:ajax=\"http://namesspaces.bluedynamics.eu/ajax\" tal:omit-tag=\"\">\n\n      <!-- bind custom event to tile, perform action if event triggered -->\n      <!-- when event gets triggered, tile_a gets rendered, see above -->\n      <div class=\"tile_b\"\n           style=\"background-color:#61ff68;\"\n           ajax:bind=\"altertile\"\n           ajax:action=\"bdajax_example_tile_a:.tile_b:replace\">\n\n        <h3>I am tile B</h3>\n\n        <!-- bind element to click event and trigger custom event -->\n        <a href=\"\"\n           ajax:bind=\"click\"\n           ajax:event=\"altertile:.tile_b\"\n           ajax:target=\"\"\n           tal:attributes=\"ajax:target context/absolute_url\">alter me</a>\n\n      </div>\n\n    </div>\n\nCreate content provider in ``provider.py``:\n\n.. code-block:: python\n\n    from Acquisition import Explicit\n    from zope.interface import (\n        Interface,\n        implementer,\n    )\n    from zope.component import adapter\n    from zope.publisher.interfaces.browser import (\n        IBrowserRequest,\n        IBrowserView,\n    )\n    from zope.contentprovider.interfaces import IContentProvider\n    from Products.Five.browser.pagetemplatefile import ViewPageTemplateFile\n    from bda.plone.ajax import ajax_message\n\n\n    @implementer(IContentProvider)\n    @adapter(Interface, IBrowserRequest, IBrowserView)\n    class Provider(Explicit):\n        template = ViewPageTemplateFile(u'tile_b.pt')\n\n        def __init__(self, context, request, view):\n            self.__parent__ = view\n            self.context = context\n            self.request = request\n\n        def update(self):\n            pass\n\n        def render(self):\n            # set here continuation message. See bda.plone.ajax.__init__ for\n            # details.\n            ajax_message(self.request, 'Demo continuation message', flavor='info')\n            return self.template(self)\n\nConfigure provider via ZCML:\n\n.. code-block:: xml\n\n    <adapter\n      name=\"bdajax_example_tile_b\"\n      provides=\"zope.contentprovider.interfaces.IContentProvider\"\n      factory=\".provider.Provider\" />\n\n\nImplement a wrapper view\n------------------------\n\nThe two ajax action rendering snippets above each render a tile only. now we\nneed to wrap this inside a plone view. Create template ``ploneview.pt``:\n\n.. code-block:: xml\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\"\n          xmlns:tal=\"http://xml.zope.org/namespaces/tal\"\n          xmlns:metal=\"http://xml.zope.org/namespaces/metal\"\n          xmlns:i18n=\"http://xml.zope.org/namespaces/i18n\"\n          lang=\"en\"\n          metal:use-macro=\"here/main_template/macros/master\">\n    <body>\n\n      <metal:main fill-slot=\"main\">\n        <tal:main-macro metal:define-macro=\"main\">\n\n          <tal:tile replace=\"structure context/@@bdajax_example_tile_a\" />\n\n        </tal:main-macro>\n      </metal:main>\n\n    </body>\n    </html>\n\nAnd register via ZCML:\n\n.. code-block:: xml\n\n    <browser:page\n      for=\"*\"\n      name=\"bdajax_example_view\"\n      template=\"ploneview.pt\"\n      permission=\"zope2.View\" />\n\nNow start instance and navigate to ``@@bdajax_example_view``. You get initially\n``tile a`` rendered switching to ``tile b`` on click and vise versa. This code\nequates the one contained in examples folder.\n\n\nImplement an ajax form\n----------------------\n\nCreate a view which renders a form.\n\nCreate template named ``ajaxform.pt``. The attribute ``ajax:form`` tells\nbdajax to handle this form:\n\n.. code-block:: xml\n\n    <form xmlns:ajax=\"http://namesspaces.bluedynamics.eu/ajax\"\n          id=\"example_ajaxform\"\n          method=\"post\"\n          enctype=\"multipart/form-data\"\n          ajax:form=\"True\"\n          tal:define=\"error view/error\"\n          tal:attributes=\"action view/form_action\">\n\n      <label for=\"field\">Field</label>\n\n      <div tal:condition=\"error\"\n           tal:content=\"error\"\n           style=\"font-weight:bold;color:red;\">\n        Error Text\n      </div>\n\n      <input type=\"text\"\n             name=\"field\"\n             tal:attributes=\"value view/value\" />\n\n      <input type=\"submit\" name=\"submit\" value=\"Submit\" />\n\n    </form>\n\nCreate the view class:\n\n.. code-block:: python\n\n    from Products.Five import BrowserView\n    from bda.plone.ajax import ajax_continue\n    from bda.plone.ajax import ajax_form_fiddle\n    from bda.plone.ajax import AjaxMessage\n\n\n    class AjaxForm(BrowserView):\n\n        @property\n        def form_action(self):\n            return 'ajaxform?form_name=bdajax_example_form'\n\n        @property\n        def submitted(self):\n            return 'field' in self.request.form\n\n        @property\n        def error(self):\n            if not self.submitted:\n                return\n            if not self.request.form['field']:\n                return u'Field must not be empty'\n\n        @property\n        def value(self):\n            return self.request.form.get('field')\n\n        def __call__(self):\n            if self.submitted and not self.error:\n                ajax_continue(self.request, AjaxMessage('Success!', 'info', None))\n\nRegister view via ZCML:\n\n.. code-block:: xml\n\n    <browser:page\n      for=\"*\"\n      name=\"bdajax_example_form\"\n      class=\".AjaxForm\"\n      template=\"ajaxform.pt\"\n      permission=\"zope2.View\" />\n\nCreate wrapper view for form named ``ajaxformview.pt``:\n\n.. code-block:: xml\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\"\n          xmlns:tal=\"http://xml.zope.org/namespaces/tal\"\n          xmlns:metal=\"http://xml.zope.org/namespaces/metal\"\n          xmlns:i18n=\"http://xml.zope.org/namespaces/i18n\"\n          lang=\"en\"\n          metal:use-macro=\"here/main_template/macros/master\">\n    <body>\n\n      <metal:main fill-slot=\"main\">\n        <tal:main-macro metal:define-macro=\"main\">\n\n          <tal:tile replace=\"structure context/@@bdajax_example_form\" />\n\n        </tal:main-macro>\n      </metal:main>\n\n    </body>\n    </html>\n\nAnd register via ZCML:\n\n.. code-block:: xml\n\n    <browser:page\n      for=\"*\"\n      name=\"bdajax_example_form_view\"\n      template=\"ajaxformview.pt\"\n      permission=\"zope2.View\" />\n\nNow start instance and navigate to ``@@bdajax_example_form_view``.\n\n\nImplement ajax batch\n--------------------\n\nCreate a batch implementation in python, i.e. ``examplebatch.py`` calculating\nbatch vocab:\n\n.. code-block:: python\n\n    from Products.Five import BrowserView\n    from bda.plone.ajax.batch import Batch\n\n\n    RESULTLEN = 45\n    SLICESIZE = 10\n\n\n    class ExampleBatch(Batch):\n        batchname = 'examplebatch'\n\n        @property\n        def vocab(self):\n            ret = list()\n            # len result\n            count = RESULTLEN\n            # entries per page\n            slicesize = SLICESIZE\n            # number of batch pages\n            pages = count / slicesize\n            if count % slicesize != 0:\n                pages += 1\n            # current batch page\n            current = self.request.get('b_page', '0')\n            for i in range(pages):\n                # create query with page number\n                query = 'b_page=%s' % str(i)\n                # create batch target url\n                url = '%s?%s' % (self.context.absolute_url(), query)\n                # append batch page\n                ret.append({\n                    'page': '%i' % (i + 1),\n                    'current': current == str(i),\n                    'visible': True,\n                    'url': url,\n                })\n            return ret\n\nCreate batched result view:\n\n.. code-block:: python\n\n    class BatchedResult(BrowserView):\n\n        @property\n        def batch(self):\n            return ExampleBatch(self.context, self.request)()\n\n        @property\n        def slice(self):\n            result = range(RESULTLEN)\n            current = int(self.request.get('b_page', '0'))\n            start = current * SLICESIZE\n            end = start + SLICESIZE\n            return result[start:end]\n\nCreate batched result template, i.e. ``batchedresult.pt``:\n\n.. code-block:: xml\n\n    <div xmlns=\"http://www.w3.org/1999/xhtml\"\n         xml:lang=\"en\"\n         xmlns:tal=\"http://xml.zope.org/namespaces/tal\"\n         xmlns:i18n=\"http://xml.zope.org/namespaces/i18n\"\n         i18n:domain=\"bda.plone.ajax\"\n         class=\"examplebatchsensitiv\"\n         ajax:bind=\"batchclicked\"\n         tal:attributes=\"ajax:target context/absolute_url;\n                         ajax:action string:bdajax_example_batched_result:.examplebatchsensitiv:replace\">\n\n      <tal:listingbatch replace=\"structure view/batch\" />\n\n      <ul>\n        <li tal:repeat=\"item view/slice\" tal:content=\"item\">x</li>\n      </ul>\n\n      <tal:listingbatch replace=\"structure view/batch\" />\n\n    </div>\n\nCreate wrapper view, i.e. ``batchview.pt``:\n\n.. code-block:: xml\n\n    <html xmlns=\"http://www.w3.org/1999/xhtml\" xml:lang=\"en\"\n          xmlns:tal=\"http://xml.zope.org/namespaces/tal\"\n          xmlns:metal=\"http://xml.zope.org/namespaces/metal\"\n          xmlns:i18n=\"http://xml.zope.org/namespaces/i18n\"\n          lang=\"en\"\n          metal:use-macro=\"here/main_template/macros/master\"\n          i18n:domain=\"bda.plone.ajax\">\n    <body>\n\n      <metal:main fill-slot=\"main\">\n        <tal:main-macro metal:define-macro=\"main\">\n\n          <tal:tile replace=\"structure context/@@bdajax_example_batched_result\" />\n\n        </tal:main-macro>\n      </metal:main>\n\n    </body>\n    </html>\n\nAnd register views via ZCML:\n\n.. code-block:: xml\n\n    <browser:page\n      for=\"*\"\n      name=\"bdajax_example_batch\"\n      template=\"batchview.pt\"\n      permission=\"zope2.View\" />\n\n    <browser:page\n      for=\"*\"\n      name=\"bdajax_example_batched_result\"\n      class=\".examplebatch.BatchedResult\"\n      template=\"batchedresult.pt\"\n      permission=\"zope2.View\" />\n\nNow start instance and navigate to ``@@bdajax_example_batch``. You get an\nexample result rendered batched. This code equates the one contained in\nexamples folder.\n\n\nExamples\n--------\n\nThis package ships with examples, as explained above.\nTo enable examples include ``bda.plone.ajax.examples`` via ZCML.\n\n\nSource Code\n===========\n\nIf you want to help with the development (improvement, update, bug-fixing, ...) of ``bda.plone.ajax`` this is a great idea!\n\nThe code is located in the `github collective <http://github.com/collective/bda.plone.ajax>`_.\n\nYou can clone it or `get access to the github-collective <http://collective.github.com/>`_ and work directly on the project.\n\nMaintainers are Robert Niederreiter and the BlueDynamics Alliance developer team.\nWe appreciate any contribution and if a release is needed to be done on pypi, please just contact one of us:\n`dev@bluedynamics dot com <mailto:dev@bluedynamics.com>`_\n\n\nContributors\n============\n\n- Robert Niederreiter (Autor)\n- Jens W. Klein\n\nChanges\n=======\n\n2.0 (2019-03-10)\n----------------\n\n- Drop Plone 4 support (Needs 5.1+). \n  [agitator]\n  \n- Add Python 3 support.\n  [agitator]\n  \n- Minimal custom jquerytools with overlay added, no more dependency on ``plone.app.jquerytools``.\n  [agitator]\n\n\n1.8 (2019-02-08)\n----------------\n\n- Depend on ``Products.CMFPlone`` instead of ``Plone`` to not fetch unnecessary dependencies.\n  [thet]\n\n- Check whether child is null before searching for elements by tag name in\n  ajax form response.\n  [rnix]\n\n- Adopt to ``bdajax`` 1.10.\n  [rnix]\n\n\n1.7 (2017-03-10)\n----------------\n\n- Add ``_authenticator`` hidden field when rendering ajax forms in order to\n  make CSRF protection work properly.\n  [rnix]\n\n- Plone 5 Update, registered as legacy bundle\n  [agitator, rnix]\n\n\n1.6 (2015-06-25)\n----------------\n\n- give ``ajaxaction`` response explicit ``Content-Type: application/json``\n  [jensens, 2015-06-25]\n\n- log formerly catched and hidden exceptions with severity error to error log.\n  [jensens, 2015-06-25]\n\n- Disable diazo theming in ``ajaxaction`` and ``ajaxform`` browser views.\n  [rnix, 2014-12-10]\n\n- Add ``AjaxPath`` continuation. Can be used as of ``bdajax`` 1.6.\n  [rnix, 2014-12-10]\n\n\n1.5\n---\n\n- Add ajaxform convenience browser page.\n  [rnix, 2014-02-04]\n\n\n1.4\n---\n\n- Cleanup docs.\n  [rnix, 2013-10-21]\n\n- Do not load examples by default.\n  [rnix, 2013-10-21]\n\n- Add abstract batch for buidling ajax batches.\n  [rnix, 2013-10-20]\n\n\n1.3\n---\n\n- Provide overlay configuration.\n  [rnix, 2012-08-06]\n\n- Provide form continuation.\n  [rnix, 2012-08-06]\n\n\n1.2.2\n-----\n\n- render viewlet in IPortalTop, so it pops up centered and not at the end of\n  the site.\n  [jensens, 2011-12-02]\n\n- add z3c.autoinclude entry point.\n  [jensens, 2011-12-02]\n\n\n1.2.1\n-----\n\n- display ``bdajax.message`` with traceback if ``ajaxaction`` throws uncaught\n  exception.\n  [rnix]\n\n\n1.2\n---\n\n- add ajax continuation support and continuation helper objects and functions.\n  [rnix]\n\n\n1.1\n---\n\n- add examples.\n  [rnix]\n\n- add ajaxaction view.\n  [rnix]\n\n\n1.0\n---\n\n- make it work.\n  [rnix]\n\nLicense\n=======\n\nCopyright (c) 2010-2019, BlueDynamics Alliance, Austria\nAll rights reserved.\n\nRedistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:\n\n* Redistributions of source code must retain the above copyright notice, this\n  list of conditions and the following disclaimer.\n* Redistributions in binary form must reproduce the above copyright notice, this\n  list of conditions and the following disclaimer in the documentation and/or\n  other materials provided with the distribution.\n* Neither the name of the BlueDynamics Alliance nor the names of its\n  contributors may be used to endorse or promote products derived from this\n  software without specific prior written permission.\n\nTHIS SOFTWARE IS PROVIDED BY BlueDynamics Alliance ``AS IS`` AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL BlueDynamics Alliance BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.org/project/bda.plone.ajax/", "keywords": "plone ajax javascript bdajax", "license": "GNU General Public Licence", "maintainer": "", "maintainer_email": "", "name": "bda.plone.ajax", "package_url": "https://pypi.org/project/bda.plone.ajax/", "platform": "", "project_url": "https://pypi.org/project/bda.plone.ajax/", "project_urls": {"Homepage": "https://pypi.org/project/bda.plone.ajax/"}, "release_url": "https://pypi.org/project/bda.plone.ajax/2.0/", "requires_dist": null, "requires_python": "", "summary": "bdajax integration for Plone.", "version": "2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"integration-package\">\n<h2>Integration package</h2>\n<p>This is the plone integration package for\n<a href=\"http://github.com/bluedynamics/bdajax/\" rel=\"nofollow\">bdajax</a>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Make egg available in your instance.</li>\n<li>Apply extension profile.</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For detailed documentation about <tt>bdajax</tt> please refer to\n<a href=\"http://github.com/bluedynamics/bdajax/\" rel=\"nofollow\">bdajax</a>.</p>\n<div id=\"implement-ajax-action-as-browser-view\">\n<h3>Implement ajax action as browser view</h3>\n<p>An ajax action can be implemented as simple browser view. The easiest way is to\nrender a template only. Create template <tt>tile_a.pt</tt>:</p>\n<pre><span class=\"nt\">&lt;div</span> <span class=\"na\">xmlns:ajax=</span><span class=\"s\">\"http://namesspaces.bluedynamics.eu/ajax\"</span> <span class=\"na\">tal:omit-tag=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"c\">&lt;!-- the tile --&gt;</span>\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"tile_a\"</span>\n       <span class=\"na\">style=</span><span class=\"s\">\"background-color:#ffc261;\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"nt\">&lt;h3&gt;</span>I am tile A<span class=\"nt\">&lt;/h3&gt;</span>\n\n    <span class=\"c\">&lt;!-- perform action directly. here we render tile_b, see below --&gt;</span>\n    <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"\"</span>\n       <span class=\"na\">ajax:bind=</span><span class=\"s\">\"click\"</span>\n       <span class=\"na\">ajax:action=</span><span class=\"s\">\"bdajax_example_tile_b:.tile_a:replace\"</span>\n       <span class=\"na\">ajax:target=</span><span class=\"s\">\"\"</span>\n       <span class=\"na\">tal:attributes=</span><span class=\"s\">\"ajax:target context/absolute_url\"</span><span class=\"nt\">&gt;</span>alter me<span class=\"nt\">&lt;/a&gt;</span>\n\n  <span class=\"nt\">&lt;/div&gt;</span>\n\n<span class=\"nt\">&lt;/div&gt;</span>\n</pre>\n<p>Configure via ZCML:</p>\n<pre><span class=\"nt\">&lt;browser:page</span>\n  <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_tile_a\"</span>\n  <span class=\"na\">template=</span><span class=\"s\">\"tile_a.pt\"</span>\n  <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n</div>\n<div id=\"implement-ajax-action-as-content-provider\">\n<h3>Implement ajax action as content provider</h3>\n<p>Create a template <tt>tile_b.pt</tt> containing the markup:</p>\n<pre><span class=\"nt\">&lt;div</span> <span class=\"na\">xmlns:ajax=</span><span class=\"s\">\"http://namesspaces.bluedynamics.eu/ajax\"</span> <span class=\"na\">tal:omit-tag=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"c\">&lt;!-- bind custom event to tile, perform action if event triggered --&gt;</span>\n  <span class=\"c\">&lt;!-- when event gets triggered, tile_a gets rendered, see above --&gt;</span>\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">class=</span><span class=\"s\">\"tile_b\"</span>\n       <span class=\"na\">style=</span><span class=\"s\">\"background-color:#61ff68;\"</span>\n       <span class=\"na\">ajax:bind=</span><span class=\"s\">\"altertile\"</span>\n       <span class=\"na\">ajax:action=</span><span class=\"s\">\"bdajax_example_tile_a:.tile_b:replace\"</span><span class=\"nt\">&gt;</span>\n\n    <span class=\"nt\">&lt;h3&gt;</span>I am tile B<span class=\"nt\">&lt;/h3&gt;</span>\n\n    <span class=\"c\">&lt;!-- bind element to click event and trigger custom event --&gt;</span>\n    <span class=\"nt\">&lt;a</span> <span class=\"na\">href=</span><span class=\"s\">\"\"</span>\n       <span class=\"na\">ajax:bind=</span><span class=\"s\">\"click\"</span>\n       <span class=\"na\">ajax:event=</span><span class=\"s\">\"altertile:.tile_b\"</span>\n       <span class=\"na\">ajax:target=</span><span class=\"s\">\"\"</span>\n       <span class=\"na\">tal:attributes=</span><span class=\"s\">\"ajax:target context/absolute_url\"</span><span class=\"nt\">&gt;</span>alter me<span class=\"nt\">&lt;/a&gt;</span>\n\n  <span class=\"nt\">&lt;/div&gt;</span>\n\n<span class=\"nt\">&lt;/div&gt;</span>\n</pre>\n<p>Create content provider in <tt>provider.py</tt>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Acquisition</span> <span class=\"kn\">import</span> <span class=\"n\">Explicit</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope.interface</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">Interface</span><span class=\"p\">,</span>\n    <span class=\"n\">implementer</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope.component</span> <span class=\"kn\">import</span> <span class=\"n\">adapter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope.publisher.interfaces.browser</span> <span class=\"kn\">import</span> <span class=\"p\">(</span>\n    <span class=\"n\">IBrowserRequest</span><span class=\"p\">,</span>\n    <span class=\"n\">IBrowserView</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n<span class=\"kn\">from</span> <span class=\"nn\">zope.contentprovider.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">IContentProvider</span>\n<span class=\"kn\">from</span> <span class=\"nn\">Products.Five.browser.pagetemplatefile</span> <span class=\"kn\">import</span> <span class=\"n\">ViewPageTemplateFile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bda.plone.ajax</span> <span class=\"kn\">import</span> <span class=\"n\">ajax_message</span>\n\n\n<span class=\"nd\">@implementer</span><span class=\"p\">(</span><span class=\"n\">IContentProvider</span><span class=\"p\">)</span>\n<span class=\"nd\">@adapter</span><span class=\"p\">(</span><span class=\"n\">Interface</span><span class=\"p\">,</span> <span class=\"n\">IBrowserRequest</span><span class=\"p\">,</span> <span class=\"n\">IBrowserView</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Provider</span><span class=\"p\">(</span><span class=\"n\">Explicit</span><span class=\"p\">):</span>\n    <span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">ViewPageTemplateFile</span><span class=\"p\">(</span><span class=\"sa\">u</span><span class=\"s1\">'tile_b.pt'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">view</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">__parent__</span> <span class=\"o\">=</span> <span class=\"n\">view</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span> <span class=\"o\">=</span> <span class=\"n\">context</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span> <span class=\"o\">=</span> <span class=\"n\">request</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">update</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># set here continuation message. See bda.plone.ajax.__init__ for</span>\n        <span class=\"c1\"># details.</span>\n        <span class=\"n\">ajax_message</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'Demo continuation message'</span><span class=\"p\">,</span> <span class=\"n\">flavor</span><span class=\"o\">=</span><span class=\"s1\">'info'</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">template</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Configure provider via ZCML:</p>\n<pre><span class=\"nt\">&lt;adapter</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_tile_b\"</span>\n  <span class=\"na\">provides=</span><span class=\"s\">\"zope.contentprovider.interfaces.IContentProvider\"</span>\n  <span class=\"na\">factory=</span><span class=\"s\">\".provider.Provider\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n</div>\n<div id=\"implement-a-wrapper-view\">\n<h3>Implement a wrapper view</h3>\n<p>The two ajax action rendering snippets above each render a tile only. now we\nneed to wrap this inside a plone view. Create template <tt>ploneview.pt</tt>:</p>\n<pre><span class=\"nt\">&lt;html</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"na\">xml:lang=</span><span class=\"s\">\"en\"</span>\n      <span class=\"na\">xmlns:tal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/tal\"</span>\n      <span class=\"na\">xmlns:metal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/metal\"</span>\n      <span class=\"na\">xmlns:i18n=</span><span class=\"s\">\"http://xml.zope.org/namespaces/i18n\"</span>\n      <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span>\n      <span class=\"na\">metal:use-macro=</span><span class=\"s\">\"here/main_template/macros/master\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n\n  <span class=\"nt\">&lt;metal:main</span> <span class=\"na\">fill-slot=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;tal:main-macro</span> <span class=\"na\">metal:define-macro=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"nt\">&lt;tal:tile</span> <span class=\"na\">replace=</span><span class=\"s\">\"structure context/@@bdajax_example_tile_a\"</span> <span class=\"nt\">/&gt;</span>\n\n    <span class=\"nt\">&lt;/tal:main-macro&gt;</span>\n  <span class=\"nt\">&lt;/metal:main&gt;</span>\n\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre>\n<p>And register via ZCML:</p>\n<pre><span class=\"nt\">&lt;browser:page</span>\n  <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_view\"</span>\n  <span class=\"na\">template=</span><span class=\"s\">\"ploneview.pt\"</span>\n  <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n<p>Now start instance and navigate to <tt>@@bdajax_example_view</tt>. You get initially\n<tt>tile a</tt> rendered switching to <tt>tile b</tt> on click and vise versa. This code\nequates the one contained in examples folder.</p>\n</div>\n<div id=\"implement-an-ajax-form\">\n<h3>Implement an ajax form</h3>\n<p>Create a view which renders a form.</p>\n<p>Create template named <tt>ajaxform.pt</tt>. The attribute <tt>ajax:form</tt> tells\nbdajax to handle this form:</p>\n<pre><span class=\"nt\">&lt;form</span> <span class=\"na\">xmlns:ajax=</span><span class=\"s\">\"http://namesspaces.bluedynamics.eu/ajax\"</span>\n      <span class=\"na\">id=</span><span class=\"s\">\"example_ajaxform\"</span>\n      <span class=\"na\">method=</span><span class=\"s\">\"post\"</span>\n      <span class=\"na\">enctype=</span><span class=\"s\">\"multipart/form-data\"</span>\n      <span class=\"na\">ajax:form=</span><span class=\"s\">\"True\"</span>\n      <span class=\"na\">tal:define=</span><span class=\"s\">\"error view/error\"</span>\n      <span class=\"na\">tal:attributes=</span><span class=\"s\">\"action view/form_action\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"nt\">&lt;label</span> <span class=\"na\">for=</span><span class=\"s\">\"field\"</span><span class=\"nt\">&gt;</span>Field<span class=\"nt\">&lt;/label&gt;</span>\n\n  <span class=\"nt\">&lt;div</span> <span class=\"na\">tal:condition=</span><span class=\"s\">\"error\"</span>\n       <span class=\"na\">tal:content=</span><span class=\"s\">\"error\"</span>\n       <span class=\"na\">style=</span><span class=\"s\">\"font-weight:bold;color:red;\"</span><span class=\"nt\">&gt;</span>\n    Error Text\n  <span class=\"nt\">&lt;/div&gt;</span>\n\n  <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"text\"</span>\n         <span class=\"na\">name=</span><span class=\"s\">\"field\"</span>\n         <span class=\"na\">tal:attributes=</span><span class=\"s\">\"value view/value\"</span> <span class=\"nt\">/&gt;</span>\n\n  <span class=\"nt\">&lt;input</span> <span class=\"na\">type=</span><span class=\"s\">\"submit\"</span> <span class=\"na\">name=</span><span class=\"s\">\"submit\"</span> <span class=\"na\">value=</span><span class=\"s\">\"Submit\"</span> <span class=\"nt\">/&gt;</span>\n\n<span class=\"nt\">&lt;/form&gt;</span>\n</pre>\n<p>Create the view class:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Products.Five</span> <span class=\"kn\">import</span> <span class=\"n\">BrowserView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bda.plone.ajax</span> <span class=\"kn\">import</span> <span class=\"n\">ajax_continue</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bda.plone.ajax</span> <span class=\"kn\">import</span> <span class=\"n\">ajax_form_fiddle</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bda.plone.ajax</span> <span class=\"kn\">import</span> <span class=\"n\">AjaxMessage</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AjaxForm</span><span class=\"p\">(</span><span class=\"n\">BrowserView</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">form_action</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'ajaxform?form_name=bdajax_example_form'</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">submitted</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'field'</span> <span class=\"ow\">in</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">submitted</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span>\n        <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"p\">[</span><span class=\"s1\">'field'</span><span class=\"p\">]:</span>\n            <span class=\"k\">return</span> <span class=\"sa\">u</span><span class=\"s1\">'Field must not be empty'</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">value</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'field'</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__call__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">submitted</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">:</span>\n            <span class=\"n\">ajax_continue</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">AjaxMessage</span><span class=\"p\">(</span><span class=\"s1\">'Success!'</span><span class=\"p\">,</span> <span class=\"s1\">'info'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">))</span>\n</pre>\n<p>Register view via ZCML:</p>\n<pre><span class=\"nt\">&lt;browser:page</span>\n  <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_form\"</span>\n  <span class=\"na\">class=</span><span class=\"s\">\".AjaxForm\"</span>\n  <span class=\"na\">template=</span><span class=\"s\">\"ajaxform.pt\"</span>\n  <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n<p>Create wrapper view for form named <tt>ajaxformview.pt</tt>:</p>\n<pre><span class=\"nt\">&lt;html</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"na\">xml:lang=</span><span class=\"s\">\"en\"</span>\n      <span class=\"na\">xmlns:tal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/tal\"</span>\n      <span class=\"na\">xmlns:metal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/metal\"</span>\n      <span class=\"na\">xmlns:i18n=</span><span class=\"s\">\"http://xml.zope.org/namespaces/i18n\"</span>\n      <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span>\n      <span class=\"na\">metal:use-macro=</span><span class=\"s\">\"here/main_template/macros/master\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n\n  <span class=\"nt\">&lt;metal:main</span> <span class=\"na\">fill-slot=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;tal:main-macro</span> <span class=\"na\">metal:define-macro=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"nt\">&lt;tal:tile</span> <span class=\"na\">replace=</span><span class=\"s\">\"structure context/@@bdajax_example_form\"</span> <span class=\"nt\">/&gt;</span>\n\n    <span class=\"nt\">&lt;/tal:main-macro&gt;</span>\n  <span class=\"nt\">&lt;/metal:main&gt;</span>\n\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre>\n<p>And register via ZCML:</p>\n<pre><span class=\"nt\">&lt;browser:page</span>\n  <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_form_view\"</span>\n  <span class=\"na\">template=</span><span class=\"s\">\"ajaxformview.pt\"</span>\n  <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n<p>Now start instance and navigate to <tt>@@bdajax_example_form_view</tt>.</p>\n</div>\n<div id=\"implement-ajax-batch\">\n<h3>Implement ajax batch</h3>\n<p>Create a batch implementation in python, i.e. <tt>examplebatch.py</tt> calculating\nbatch vocab:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">Products.Five</span> <span class=\"kn\">import</span> <span class=\"n\">BrowserView</span>\n<span class=\"kn\">from</span> <span class=\"nn\">bda.plone.ajax.batch</span> <span class=\"kn\">import</span> <span class=\"n\">Batch</span>\n\n\n<span class=\"n\">RESULTLEN</span> <span class=\"o\">=</span> <span class=\"mi\">45</span>\n<span class=\"n\">SLICESIZE</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ExampleBatch</span><span class=\"p\">(</span><span class=\"n\">Batch</span><span class=\"p\">):</span>\n    <span class=\"n\">batchname</span> <span class=\"o\">=</span> <span class=\"s1\">'examplebatch'</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">vocab</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">ret</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">()</span>\n        <span class=\"c1\"># len result</span>\n        <span class=\"n\">count</span> <span class=\"o\">=</span> <span class=\"n\">RESULTLEN</span>\n        <span class=\"c1\"># entries per page</span>\n        <span class=\"n\">slicesize</span> <span class=\"o\">=</span> <span class=\"n\">SLICESIZE</span>\n        <span class=\"c1\"># number of batch pages</span>\n        <span class=\"n\">pages</span> <span class=\"o\">=</span> <span class=\"n\">count</span> <span class=\"o\">/</span> <span class=\"n\">slicesize</span>\n        <span class=\"k\">if</span> <span class=\"n\">count</span> <span class=\"o\">%</span> <span class=\"n\">slicesize</span> <span class=\"o\">!=</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">pages</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"c1\"># current batch page</span>\n        <span class=\"n\">current</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b_page'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">)</span>\n        <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">pages</span><span class=\"p\">):</span>\n            <span class=\"c1\"># create query with page number</span>\n            <span class=\"n\">query</span> <span class=\"o\">=</span> <span class=\"s1\">'b_page=</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">)</span>\n            <span class=\"c1\"># create batch target url</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\">?</span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"o\">.</span><span class=\"n\">absolute_url</span><span class=\"p\">(),</span> <span class=\"n\">query</span><span class=\"p\">)</span>\n            <span class=\"c1\"># append batch page</span>\n            <span class=\"n\">ret</span><span class=\"o\">.</span><span class=\"n\">append</span><span class=\"p\">({</span>\n                <span class=\"s1\">'page'</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">%i</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">i</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">),</span>\n                <span class=\"s1\">'current'</span><span class=\"p\">:</span> <span class=\"n\">current</span> <span class=\"o\">==</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">),</span>\n                <span class=\"s1\">'visible'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n                <span class=\"s1\">'url'</span><span class=\"p\">:</span> <span class=\"n\">url</span><span class=\"p\">,</span>\n            <span class=\"p\">})</span>\n        <span class=\"k\">return</span> <span class=\"n\">ret</span>\n</pre>\n<p>Create batched result view:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">BatchedResult</span><span class=\"p\">(</span><span class=\"n\">BrowserView</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">batch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">ExampleBatch</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">)()</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">RESULTLEN</span><span class=\"p\">)</span>\n        <span class=\"n\">current</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'b_page'</span><span class=\"p\">,</span> <span class=\"s1\">'0'</span><span class=\"p\">))</span>\n        <span class=\"n\">start</span> <span class=\"o\">=</span> <span class=\"n\">current</span> <span class=\"o\">*</span> <span class=\"n\">SLICESIZE</span>\n        <span class=\"n\">end</span> <span class=\"o\">=</span> <span class=\"n\">start</span> <span class=\"o\">+</span> <span class=\"n\">SLICESIZE</span>\n        <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"n\">start</span><span class=\"p\">:</span><span class=\"n\">end</span><span class=\"p\">]</span>\n</pre>\n<p>Create batched result template, i.e. <tt>batchedresult.pt</tt>:</p>\n<pre><span class=\"nt\">&lt;div</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/1999/xhtml\"</span>\n     <span class=\"na\">xml:lang=</span><span class=\"s\">\"en\"</span>\n     <span class=\"na\">xmlns:tal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/tal\"</span>\n     <span class=\"na\">xmlns:i18n=</span><span class=\"s\">\"http://xml.zope.org/namespaces/i18n\"</span>\n     <span class=\"na\">i18n:domain=</span><span class=\"s\">\"bda.plone.ajax\"</span>\n     <span class=\"na\">class=</span><span class=\"s\">\"examplebatchsensitiv\"</span>\n     <span class=\"na\">ajax:bind=</span><span class=\"s\">\"batchclicked\"</span>\n     <span class=\"na\">tal:attributes=</span><span class=\"s\">\"ajax:target context/absolute_url;\n                     ajax:action string:bdajax_example_batched_result:.examplebatchsensitiv:replace\"</span><span class=\"nt\">&gt;</span>\n\n  <span class=\"nt\">&lt;tal:listingbatch</span> <span class=\"na\">replace=</span><span class=\"s\">\"structure view/batch\"</span> <span class=\"nt\">/&gt;</span>\n\n  <span class=\"nt\">&lt;ul&gt;</span>\n    <span class=\"nt\">&lt;li</span> <span class=\"na\">tal:repeat=</span><span class=\"s\">\"item view/slice\"</span> <span class=\"na\">tal:content=</span><span class=\"s\">\"item\"</span><span class=\"nt\">&gt;</span>x<span class=\"nt\">&lt;/li&gt;</span>\n  <span class=\"nt\">&lt;/ul&gt;</span>\n\n  <span class=\"nt\">&lt;tal:listingbatch</span> <span class=\"na\">replace=</span><span class=\"s\">\"structure view/batch\"</span> <span class=\"nt\">/&gt;</span>\n\n<span class=\"nt\">&lt;/div&gt;</span>\n</pre>\n<p>Create wrapper view, i.e. <tt>batchview.pt</tt>:</p>\n<pre><span class=\"nt\">&lt;html</span> <span class=\"na\">xmlns=</span><span class=\"s\">\"http://www.w3.org/1999/xhtml\"</span> <span class=\"na\">xml:lang=</span><span class=\"s\">\"en\"</span>\n      <span class=\"na\">xmlns:tal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/tal\"</span>\n      <span class=\"na\">xmlns:metal=</span><span class=\"s\">\"http://xml.zope.org/namespaces/metal\"</span>\n      <span class=\"na\">xmlns:i18n=</span><span class=\"s\">\"http://xml.zope.org/namespaces/i18n\"</span>\n      <span class=\"na\">lang=</span><span class=\"s\">\"en\"</span>\n      <span class=\"na\">metal:use-macro=</span><span class=\"s\">\"here/main_template/macros/master\"</span>\n      <span class=\"na\">i18n:domain=</span><span class=\"s\">\"bda.plone.ajax\"</span><span class=\"nt\">&gt;</span>\n<span class=\"nt\">&lt;body&gt;</span>\n\n  <span class=\"nt\">&lt;metal:main</span> <span class=\"na\">fill-slot=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;tal:main-macro</span> <span class=\"na\">metal:define-macro=</span><span class=\"s\">\"main\"</span><span class=\"nt\">&gt;</span>\n\n      <span class=\"nt\">&lt;tal:tile</span> <span class=\"na\">replace=</span><span class=\"s\">\"structure context/@@bdajax_example_batched_result\"</span> <span class=\"nt\">/&gt;</span>\n\n    <span class=\"nt\">&lt;/tal:main-macro&gt;</span>\n  <span class=\"nt\">&lt;/metal:main&gt;</span>\n\n<span class=\"nt\">&lt;/body&gt;</span>\n<span class=\"nt\">&lt;/html&gt;</span>\n</pre>\n<p>And register views via ZCML:</p>\n<pre><span class=\"nt\">&lt;browser:page</span>\n  <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_batch\"</span>\n  <span class=\"na\">template=</span><span class=\"s\">\"batchview.pt\"</span>\n  <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span> <span class=\"nt\">/&gt;</span>\n\n<span class=\"nt\">&lt;browser:page</span>\n  <span class=\"na\">for=</span><span class=\"s\">\"*\"</span>\n  <span class=\"na\">name=</span><span class=\"s\">\"bdajax_example_batched_result\"</span>\n  <span class=\"na\">class=</span><span class=\"s\">\".examplebatch.BatchedResult\"</span>\n  <span class=\"na\">template=</span><span class=\"s\">\"batchedresult.pt\"</span>\n  <span class=\"na\">permission=</span><span class=\"s\">\"zope2.View\"</span> <span class=\"nt\">/&gt;</span>\n</pre>\n<p>Now start instance and navigate to <tt>@@bdajax_example_batch</tt>. You get an\nexample result rendered batched. This code equates the one contained in\nexamples folder.</p>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>This package ships with examples, as explained above.\nTo enable examples include <tt>bda.plone.ajax.examples</tt> via ZCML.</p>\n</div>\n</div>\n<div id=\"source-code\">\n<h2>Source Code</h2>\n<p>If you want to help with the development (improvement, update, bug-fixing, \u2026) of <tt>bda.plone.ajax</tt> this is a great idea!</p>\n<p>The code is located in the <a href=\"http://github.com/collective/bda.plone.ajax\" rel=\"nofollow\">github collective</a>.</p>\n<p>You can clone it or <a href=\"http://collective.github.com/\" rel=\"nofollow\">get access to the github-collective</a> and work directly on the project.</p>\n<p>Maintainers are Robert Niederreiter and the BlueDynamics Alliance developer team.\nWe appreciate any contribution and if a release is needed to be done on pypi, please just contact one of us:\n<a href=\"mailto:dev%40bluedynamics.com\">dev<span>@</span>bluedynamics dot com</a></p>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>Robert Niederreiter (Autor)</li>\n<li>Jens W. Klein</li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id2\">\n<h3>2.0 (2019-03-10)</h3>\n<ul>\n<li>Drop Plone 4 support (Needs 5.1+).\n[agitator]</li>\n<li>Add Python 3 support.\n[agitator]</li>\n<li>Minimal custom jquerytools with overlay added, no more dependency on <tt>plone.app.jquerytools</tt>.\n[agitator]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.8 (2019-02-08)</h3>\n<ul>\n<li>Depend on <tt>Products.CMFPlone</tt> instead of <tt>Plone</tt> to not fetch unnecessary dependencies.\n[thet]</li>\n<li>Check whether child is null before searching for elements by tag name in\najax form response.\n[rnix]</li>\n<li>Adopt to <tt>bdajax</tt> 1.10.\n[rnix]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.7 (2017-03-10)</h3>\n<ul>\n<li>Add <tt>_authenticator</tt> hidden field when rendering ajax forms in order to\nmake CSRF protection work properly.\n[rnix]</li>\n<li>Plone 5 Update, registered as legacy bundle\n[agitator, rnix]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.6 (2015-06-25)</h3>\n<ul>\n<li>give <tt>ajaxaction</tt> response explicit <tt><span class=\"pre\">Content-Type:</span> application/json</tt>\n[jensens, 2015-06-25]</li>\n<li>log formerly catched and hidden exceptions with severity error to error log.\n[jensens, 2015-06-25]</li>\n<li>Disable diazo theming in <tt>ajaxaction</tt> and <tt>ajaxform</tt> browser views.\n[rnix, 2014-12-10]</li>\n<li>Add <tt>AjaxPath</tt> continuation. Can be used as of <tt>bdajax</tt> 1.6.\n[rnix, 2014-12-10]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.5</h3>\n<ul>\n<li>Add ajaxform convenience browser page.\n[rnix, 2014-02-04]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.4</h3>\n<ul>\n<li>Cleanup docs.\n[rnix, 2013-10-21]</li>\n<li>Do not load examples by default.\n[rnix, 2013-10-21]</li>\n<li>Add abstract batch for buidling ajax batches.\n[rnix, 2013-10-20]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>1.3</h3>\n<ul>\n<li>Provide overlay configuration.\n[rnix, 2012-08-06]</li>\n<li>Provide form continuation.\n[rnix, 2012-08-06]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>1.2.2</h3>\n<ul>\n<li>render viewlet in IPortalTop, so it pops up centered and not at the end of\nthe site.\n[jensens, 2011-12-02]</li>\n<li>add z3c.autoinclude entry point.\n[jensens, 2011-12-02]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>1.2.1</h3>\n<ul>\n<li>display <tt>bdajax.message</tt> with traceback if <tt>ajaxaction</tt> throws uncaught\nexception.\n[rnix]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>1.2</h3>\n<ul>\n<li>add ajax continuation support and continuation helper objects and functions.\n[rnix]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>1.1</h3>\n<ul>\n<li>add examples.\n[rnix]</li>\n<li>add ajaxaction view.\n[rnix]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>1.0</h3>\n<ul>\n<li>make it work.\n[rnix]</li>\n</ul>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2010-2019, BlueDynamics Alliance, Austria\nAll rights reserved.</p>\n<p>Redistribution and use in source and binary forms, with or without\nmodification, are permitted provided that the following conditions are met:</p>\n<ul>\n<li>Redistributions of source code must retain the above copyright notice, this\nlist of conditions and the following disclaimer.</li>\n<li>Redistributions in binary form must reproduce the above copyright notice, this\nlist of conditions and the following disclaimer in the documentation and/or\nother materials provided with the distribution.</li>\n<li>Neither the name of the BlueDynamics Alliance nor the names of its\ncontributors may be used to endorse or promote products derived from this\nsoftware without specific prior written permission.</li>\n</ul>\n<p>THIS SOFTWARE IS PROVIDED BY BlueDynamics Alliance <tt>AS IS</tt> AND ANY\nEXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\nWARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\nDISCLAIMED. IN NO EVENT SHALL BlueDynamics Alliance BE LIABLE FOR ANY\nDIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES\n(INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;\nLOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND\nON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n(INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS\nSOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.</p>\n</div>\n\n          </div>"}, "last_serial": 4922853, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "7adde8babc3dbb3741694caa14102e9a", "sha256": "7f454e794a9b3345de9593aa0b19c0a766635fcd058e68bcdefe093c1116b75b"}, "downloads": -1, "filename": "bda.plone.ajax-1.0.tar.gz", "has_sig": false, "md5_digest": "7adde8babc3dbb3741694caa14102e9a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2738, "upload_time": "2010-07-01T12:06:15", "upload_time_iso_8601": "2010-07-01T12:06:15.054311Z", "url": "https://files.pythonhosted.org/packages/35/f0/a2625bdb42c6001199349f1921e0a394e31bfcd6fb75c38cc216f4748067/bda.plone.ajax-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "beaf6994d28fb181c90721615c4e50ef", "sha256": "4756153e1ebd5a5b45c98ea28ccb6c36ac42c911d8d82b602aa6666f9d27186a"}, "downloads": -1, "filename": "bda.plone.ajax-1.1.tar.gz", "has_sig": false, "md5_digest": "beaf6994d28fb181c90721615c4e50ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8533, "upload_time": "2011-01-14T11:43:52", "upload_time_iso_8601": "2011-01-14T11:43:52.987953Z", "url": "https://files.pythonhosted.org/packages/7b/aa/6da236aab3bf47381e2797672540d4363cd2f80a9ff573cf7814a699e57f/bda.plone.ajax-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "7213061a4dcb104f65faf5191f5d5524", "sha256": "c214372bc8734a9f9560a013f2829e51e145dd825b7d26170f8bfc299704373d"}, "downloads": -1, "filename": "bda.plone.ajax-1.2.tar.gz", "has_sig": false, "md5_digest": "7213061a4dcb104f65faf5191f5d5524", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7761, "upload_time": "2011-06-03T23:01:07", "upload_time_iso_8601": "2011-06-03T23:01:07.293430Z", "url": "https://files.pythonhosted.org/packages/3c/64/c106094b8fc825925fe948fc31312a2cfd54f0c2986013839a5979a1178a/bda.plone.ajax-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "95b2d187f0f30d1cfd3a34cc58bed2cb", "sha256": "d9e5869b8e3eb67784175fde48f17d7baf1e22f5e593093adbf9a3d2c0f343eb"}, "downloads": -1, "filename": "bda.plone.ajax-1.2.1.tar.gz", "has_sig": false, "md5_digest": "95b2d187f0f30d1cfd3a34cc58bed2cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7414, "upload_time": "2011-09-21T15:00:27", "upload_time_iso_8601": "2011-09-21T15:00:27.494293Z", "url": "https://files.pythonhosted.org/packages/fe/c3/06bff921af002f9c5acb9b29f61ad6f11a007e2d30ccb6178e01271ec3e5/bda.plone.ajax-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "a1a05a1df3be0b2d4c38f5287cca8c2c", "sha256": "3614273330d9e56139127481039127169894d488bec71533f4b9fe9f41082baf"}, "downloads": -1, "filename": "bda.plone.ajax-1.2.2.tar.gz", "has_sig": false, "md5_digest": "a1a05a1df3be0b2d4c38f5287cca8c2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6703, "upload_time": "2011-12-02T14:17:21", "upload_time_iso_8601": "2011-12-02T14:17:21.970308Z", "url": "https://files.pythonhosted.org/packages/a3/2c/195a1ee33c92716ca3f0c1d61d75fced47fc37c476ffe5c5c1a4ee7b333d/bda.plone.ajax-1.2.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "6d6469c6d257c1494e71ce8550634fd2", "sha256": "85edd0f84fefb7c407408460898aa52fd3d20f473597b42141ae27e90fadc8ae"}, "downloads": -1, "filename": "bda.plone.ajax-1.3.tar.gz", "has_sig": false, "md5_digest": "6d6469c6d257c1494e71ce8550634fd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9276, "upload_time": "2012-10-07T09:09:09", "upload_time_iso_8601": "2012-10-07T09:09:09.770457Z", "url": "https://files.pythonhosted.org/packages/7d/23/e88e4f1c1a37107c7443a72495b1c3ca2f6307b77328d980716bd4d7aae7/bda.plone.ajax-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "5faab54442d2fd9a701a23ca8ba7164d", "sha256": "4dedbdeda313fbd64978beac0872d7869c901f6b9d88ace0224458d9de13c945"}, "downloads": -1, "filename": "bda.plone.ajax-1.4.tar.gz", "has_sig": false, "md5_digest": "5faab54442d2fd9a701a23ca8ba7164d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17915, "upload_time": "2013-10-29T09:48:16", "upload_time_iso_8601": "2013-10-29T09:48:16.051603Z", "url": "https://files.pythonhosted.org/packages/d4/73/42d637f9426a7a710936597495fdbc2a6d1723f1b29eb8a4b94478db574f/bda.plone.ajax-1.4.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "dea9b0656206dd729b4f7f4be440d6dc", "sha256": "3e0e8efa4704820b3ffe523bc24ae0394e588fb81d17aea57cf8e3e481a218bd"}, "downloads": -1, "filename": "bda.plone.ajax-1.5.tar.gz", "has_sig": false, "md5_digest": "dea9b0656206dd729b4f7f4be440d6dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20482, "upload_time": "2014-02-04T17:44:17", "upload_time_iso_8601": "2014-02-04T17:44:17.296860Z", "url": "https://files.pythonhosted.org/packages/dc/69/a6fceffefa92d670a1ee1d5eb4e243f33ed0f4808e3ed1a3dd7a0281540d/bda.plone.ajax-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "bdb97528d02846c8ffa0e94dfc9228fa", "sha256": "e1d48d5af176880a7b3ffda79e919929a0ce3799c939602638146d50c5eafc72"}, "downloads": -1, "filename": "bda.plone.ajax-1.6.tar.gz", "has_sig": false, "md5_digest": "bdb97528d02846c8ffa0e94dfc9228fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20410, "upload_time": "2015-06-25T12:49:15", "upload_time_iso_8601": "2015-06-25T12:49:15.208623Z", "url": "https://files.pythonhosted.org/packages/18/d3/38648f0084b7618acdad43c4f4ea2bf7af7bb41ba3b80fcef771cf15af8f/bda.plone.ajax-1.6.tar.gz", "yanked": false}], "1.7": [{"comment_text": "", "digests": {"md5": "b4b9348128db50820ffcb0c601316911", "sha256": "390c92c7635aa39dd1e0efbbeec95713187ec0fd70f598d3cf44c491d7c27558"}, "downloads": -1, "filename": "bda.plone.ajax-1.7.tar.gz", "has_sig": false, "md5_digest": "b4b9348128db50820ffcb0c601316911", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22343, "upload_time": "2017-03-10T11:18:48", "upload_time_iso_8601": "2017-03-10T11:18:48.881483Z", "url": "https://files.pythonhosted.org/packages/d6/de/60cae903e9de86bf3758b69f29d1f7103a10473561e5efe10f3cb96ba181/bda.plone.ajax-1.7.tar.gz", "yanked": false}], "1.8": [{"comment_text": "", "digests": {"md5": "ce401a7f94bd1ea9cd5d338dcecb5292", "sha256": "5aef7c7acecf8b3f7d7159faa68d93f915c8ae47af6acc4cd98ad4830a535f55"}, "downloads": -1, "filename": "bda.plone.ajax-1.8.tar.gz", "has_sig": false, "md5_digest": "ce401a7f94bd1ea9cd5d338dcecb5292", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19521, "upload_time": "2019-02-08T09:20:45", "upload_time_iso_8601": "2019-02-08T09:20:45.688658Z", "url": "https://files.pythonhosted.org/packages/48/85/f5ff8a81444a2713f7334ac35cec27c8cfad37baed335c1803d0c1c3933b/bda.plone.ajax-1.8.tar.gz", "yanked": false}], "2.0": [{"comment_text": "", "digests": {"md5": "7ff5f1e573f30e29289463ad581fd525", "sha256": "f1fee66553cfd7f537e8e78822659eb76bc58bb708523cef3f3669023a40ede4"}, "downloads": -1, "filename": "bda.plone.ajax-2.0.tar.gz", "has_sig": false, "md5_digest": "7ff5f1e573f30e29289463ad581fd525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24712, "upload_time": "2019-03-10T22:07:02", "upload_time_iso_8601": "2019-03-10T22:07:02.764782Z", "url": "https://files.pythonhosted.org/packages/c6/f8/9835ffee5318bd4d51b191ffd5a94b246add7b72159f1245c34e74452ef4/bda.plone.ajax-2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ff5f1e573f30e29289463ad581fd525", "sha256": "f1fee66553cfd7f537e8e78822659eb76bc58bb708523cef3f3669023a40ede4"}, "downloads": -1, "filename": "bda.plone.ajax-2.0.tar.gz", "has_sig": false, "md5_digest": "7ff5f1e573f30e29289463ad581fd525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24712, "upload_time": "2019-03-10T22:07:02", "upload_time_iso_8601": "2019-03-10T22:07:02.764782Z", "url": "https://files.pythonhosted.org/packages/c6/f8/9835ffee5318bd4d51b191ffd5a94b246add7b72159f1245c34e74452ef4/bda.plone.ajax-2.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:35 2020"}