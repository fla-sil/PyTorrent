{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Database", "Topic :: Software Development", "Topic :: Software Development :: Testing"], "description": "About\n=====\n``testing.elasticsearch`` automatically setups a elasticsearch instance in a temporary directory, and destroys it after testing.\n\n.. image:: https://travis-ci.org/criteo-forks/testing.elasticsearch.svg?branch=master\n   :target: https://travis-ci.org/criteo-forks/testing.elasticsearch\n\n.. image:: https://coveralls.io/repos/criteo-forks/testing.elasticsearch/badge.png?branch=master\n   :target: https://coveralls.io/r/criteo-forks/testing.elasticsearch?branch=master\n\n.. image:: https://codeclimate.com/github/criteo-forks/testing.elasticsearch/badges/gpa.svg\n   :target: https://codeclimate.com/github/criteo-forks/testing.elasticsearch\n\n\nInstall\n=======\nUse pip::\n\n   $ pip install testing.elasticsearch6\n\nAnd ``testing.elasticsearch6`` requires Elasticsearch server in your PATH.\n\n\nUsage\n=====\nCreate Elasticsearch instance using ``testing.elasticsearch.Elasticsearch``::\n\n  import testing.elasticsearch\n  from sqlalchemy import create_engine\n\n  # Lanuch new Elasticsearch server\n  with testing.elasticsearch.Elasticsearch() as elasticsearch:\n      # connect to Elasticsearch (using elasticsearch-py)\n      es = Elasticsearch(**elasticsearch.dsn())\n\n      #\n      # do any tests using Elasticsearch...\n      #\n\n  # Elasticsearch server is terminated here\n\n\n``testing.elasticsearch.Elasticsearch`` generates temporary config files and data directories.\nOn deleting Elasticsearch object, it terminates Elasticsearch instance and removes temporary files and directories.\n\nIf you want a database including indexes and any fixtures for your apps,\nuse ``copy_data_from`` keyword::\n\n  # uses a copy of specified data directory of Elasticsearch.\n  elasticsearch = testing.elasticsearch.Elasticsearch(copy_data_from='/path/to/your/index')\n\n\nFor example, you can setup new Elasticsearch server for each testcases on setUp() method::\n\n  import unittest\n  import testing.elasticsearch\n\n  class MyTestCase(unittest.TestCase):\n      def setUp(self):\n          self.elasticsearch = testing.elasticsearch.Elasticsearch()\n\n      def tearDown(self):\n          self.elasticsearch.stop()\n\n\nRequirements\n============\n* Python 2.7, 3.6\n\nLicense\n=======\nApache License 2.0\n\n\nHistory\n=======\n\n1.0.0 (2016-08-20)\n-------------------\n* Drop python 2.6, 3.2 support\n* Depend on testing.common.database >= 2.0.0\n* Set booting timeout to 20sec\n* Fix bugs:\n\n  - #1: find_elasticsearch_yaml_path() does not refer elasticsearch_home argument\n  - #2: Make ES_PATH absolute\n\n0.9.1 (2016-02-04)\n-------------------\n* Depend on ``testing.common.database`` package\n\n0.9.0 (2015-12-13)\n-------------------\n* First release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/criteo-forks/testing.elasticsearch", "keywords": "", "license": "Apache License 2.0", "maintainer": "Criteo Observability Team", "maintainer_email": "sre-observability@criteo.com", "name": "testing.elasticsearch6", "package_url": "https://pypi.org/project/testing.elasticsearch6/", "platform": "", "project_url": "https://pypi.org/project/testing.elasticsearch6/", "project_urls": {"Homepage": "https://github.com/criteo-forks/testing.elasticsearch"}, "release_url": "https://pypi.org/project/testing.elasticsearch6/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "automatically setups a elasticsearch instance in a temporary directory, and destroys it after testing", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"about\">\n<h2>About</h2>\n<p><tt>testing.elasticsearch</tt> automatically setups a elasticsearch instance in a temporary directory, and destroys it after testing.</p>\n<a href=\"https://travis-ci.org/criteo-forks/testing.elasticsearch\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/criteo-forks/testing.elasticsearch.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f6f003c4565093f4f92e266578d3a48dff2e867/68747470733a2f2f7472617669732d63692e6f72672f63726974656f2d666f726b732f74657374696e672e656c61737469637365617263682e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/criteo-forks/testing.elasticsearch?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/criteo-forks/testing.elasticsearch/badge.png?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f48f1b0fe90ffe447d1699bca99a04ef8b43feb6/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f63726974656f2d666f726b732f74657374696e672e656c61737469637365617263682f62616467652e706e673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codeclimate.com/github/criteo-forks/testing.elasticsearch\" rel=\"nofollow\"><img alt=\"https://codeclimate.com/github/criteo-forks/testing.elasticsearch/badges/gpa.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/572e900923fc28b3d87bc1e3a00b2e9683409ea4/68747470733a2f2f636f6465636c696d6174652e636f6d2f6769746875622f63726974656f2d666f726b732f74657374696e672e656c61737469637365617263682f6261646765732f6770612e737667\"></a>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Use pip:</p>\n<pre>$ pip install testing.elasticsearch6\n</pre>\n<p>And <tt>testing.elasticsearch6</tt> requires Elasticsearch server in your PATH.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Create Elasticsearch instance using <tt>testing.elasticsearch.Elasticsearch</tt>:</p>\n<pre>import testing.elasticsearch\nfrom sqlalchemy import create_engine\n\n# Lanuch new Elasticsearch server\nwith testing.elasticsearch.Elasticsearch() as elasticsearch:\n    # connect to Elasticsearch (using elasticsearch-py)\n    es = Elasticsearch(**elasticsearch.dsn())\n\n    #\n    # do any tests using Elasticsearch...\n    #\n\n# Elasticsearch server is terminated here\n</pre>\n<p><tt>testing.elasticsearch.Elasticsearch</tt> generates temporary config files and data directories.\nOn deleting Elasticsearch object, it terminates Elasticsearch instance and removes temporary files and directories.</p>\n<p>If you want a database including indexes and any fixtures for your apps,\nuse <tt>copy_data_from</tt> keyword:</p>\n<pre># uses a copy of specified data directory of Elasticsearch.\nelasticsearch = testing.elasticsearch.Elasticsearch(copy_data_from='/path/to/your/index')\n</pre>\n<p>For example, you can setup new Elasticsearch server for each testcases on setUp() method:</p>\n<pre>import unittest\nimport testing.elasticsearch\n\nclass MyTestCase(unittest.TestCase):\n    def setUp(self):\n        self.elasticsearch = testing.elasticsearch.Elasticsearch()\n\n    def tearDown(self):\n        self.elasticsearch.stop()\n</pre>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li>Python 2.7, 3.6</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Apache License 2.0</p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>1.0.0 (2016-08-20)</h3>\n<ul>\n<li>Drop python 2.6, 3.2 support</li>\n<li>Depend on testing.common.database &gt;= 2.0.0</li>\n<li>Set booting timeout to 20sec</li>\n<li>Fix bugs:<ul>\n<li>#1: find_elasticsearch_yaml_path() does not refer elasticsearch_home argument</li>\n<li>#2: Make ES_PATH absolute</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.9.1 (2016-02-04)</h3>\n<ul>\n<li>Depend on <tt>testing.common.database</tt> package</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.9.0 (2015-12-13)</h3>\n<ul>\n<li>First release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7190250, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "936d7394571b7110812a997367cb1c52", "sha256": "889d77ab28195273393ba083134d143520a261f22b0079bae466594fe72a51b9"}, "downloads": -1, "filename": "testing.elasticsearch6-1.1.0.tar.gz", "has_sig": false, "md5_digest": "936d7394571b7110812a997367cb1c52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10153, "upload_time": "2018-07-10T14:16:47", "upload_time_iso_8601": "2018-07-10T14:16:47.682229Z", "url": "https://files.pythonhosted.org/packages/14/fc/1786a241a773c4003bcf3497959c48150330ea304422469cc1190a80e280/testing.elasticsearch6-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "936d7394571b7110812a997367cb1c52", "sha256": "889d77ab28195273393ba083134d143520a261f22b0079bae466594fe72a51b9"}, "downloads": -1, "filename": "testing.elasticsearch6-1.1.0.tar.gz", "has_sig": false, "md5_digest": "936d7394571b7110812a997367cb1c52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10153, "upload_time": "2018-07-10T14:16:47", "upload_time_iso_8601": "2018-07-10T14:16:47.682229Z", "url": "https://files.pythonhosted.org/packages/14/fc/1786a241a773c4003bcf3497959c48150330ea304422469cc1190a80e280/testing.elasticsearch6-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:32 2020"}