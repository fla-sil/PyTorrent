{"info": {"author": "AeroGear", "author_email": "aerogear-dev@lists.jboss.org", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: Apache Software License", "Topic :: Software Development :: Build Tools"], "description": "abcd - AeroGear build cli for Digger\n====================================\n\n|Build Status| |License|\n\nUsage\n-----\n\nFull documentation at\n`http://digger-build-cli.readthedocs.io <http://digger-build-cli.readthedocs.io/en/latest/>`__.\n\nRequirements\n~~~~~~~~~~~~\n\nIf running outside a container:\n\nDownload and install conda: http://conda.pydata.org/miniconda.html\n\nAfter cloning the repository run:\n\n.. code:: sh\n\n    conda env create -f env.yaml python=3.5.1\n\nTo activate the environment run (might need a new terminal window or\nreload bashrc/bash\\_profile):\n\n::\n\n    source activate digger\n\nYou will also need Node 4.x, NPM, Cordova >=6 and Java 8 on your\nmachine.\n\nSome requirements are needed to run it outside of a container:\n\nInstallation\n~~~~~~~~~~~~\n\n.. code:: sh\n\n    python setup.py install\n\nTests\n~~~~~\n\nRequirements\n^^^^^^^^^^^^\n\nInstalling development dependencies:\n\n.. code:: sh\n\n    pip install -r requirements.txt\n\nTests will download all templates from their Github repository (master\nbranch) and will try to build it.\n\nIf running outside of the container\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nPrepare\n^^^^^^^\n\n.. code:: sh\n\n    # create a folder for Gradle cache\n    mkdir /gradle-cache\n    # make sure you have write permissions\n    chown -R ${USER} /gradle-cache\n\nAlso, make sure you have Android SDK on your machine and\n``$ANDROID_HOME`` is set.\n\nsetup.py\n^^^^^^^^\n\n.. code:: sh\n\n    python setup.py test\n\nusing py.test directly (from digger project root folder)\n^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n.. code:: sh\n\n    py.test -s\n\nRunning an individual test\n^^^^^^^^^^^^^^^^^^^^^^^^^^\n\nFor example:\n\n.. code:: sh\n\n    py.test -s tests/test_build.py\n\n.. |Build Status| image:: https://travis-ci.org/aerogear/digger-build-cli.png\n   :target: https://travis-ci.org/aerogear/digger-build-cli\n.. |License| image:: https://img.shields.io/:license-Apache2-blue.svg\n   :target: http://www.apache.org/licenses/LICENSE-2.0", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/aerogear/digger-build-cli/tarball/0.3.0", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aerogear/digger-build-cli", "keywords": "application builds,gradle,ant,cordova,cli", "license": "LICENSE", "maintainer": null, "maintainer_email": null, "name": "abcd", "package_url": "https://pypi.org/project/abcd/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/abcd/", "project_urls": {"Download": "https://github.com/aerogear/digger-build-cli/tarball/0.3.0", "Homepage": "https://github.com/aerogear/digger-build-cli"}, "release_url": "https://pypi.org/project/abcd/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "AeroGear Build Cli for Digger", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/aerogear/digger-build-cli\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ee3e0539963baf559226120222efa70fd62cb42/68747470733a2f2f7472617669732d63692e6f72672f6165726f676561722f6469676765722d6275696c642d636c692e706e67\"></a> <a href=\"http://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9afe1db249cadde6031b8f81d5f80c256f86f1a6/68747470733a2f2f696d672e736869656c64732e696f2f3a6c6963656e73652d417061636865322d626c75652e737667\"></a></p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Full documentation at\n<a href=\"http://digger-build-cli.readthedocs.io/en/latest/\" rel=\"nofollow\">http://digger-build-cli.readthedocs.io</a>.</p>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p>If running outside a container:</p>\n<p>Download and install conda: <a href=\"http://conda.pydata.org/miniconda.html\" rel=\"nofollow\">http://conda.pydata.org/miniconda.html</a></p>\n<p>After cloning the repository run:</p>\n<pre>conda env create -f env.yaml <span class=\"nv\">python</span><span class=\"o\">=</span><span class=\"m\">3</span>.5.1\n</pre>\n<p>To activate the environment run (might need a new terminal window or\nreload bashrc/bash_profile):</p>\n<pre>source activate digger\n</pre>\n<p>You will also need Node 4.x, NPM, Cordova &gt;=6 and Java 8 on your\nmachine.</p>\n<p>Some requirements are needed to run it outside of a container:</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"tests\">\n<h3>Tests</h3>\n<h3 id=\"id1\"><span class=\"section-subtitle\">Requirements</span></h3>\n<p>Installing development dependencies:</p>\n<pre>pip install -r requirements.txt\n</pre>\n<p>Tests will download all templates from their Github repository (master\nbranch) and will try to build it.</p>\n</div>\n<div id=\"if-running-outside-of-the-container\">\n<h3>If running outside of the container</h3>\n<div id=\"prepare\">\n<h4>Prepare</h4>\n<pre><span class=\"c1\"># create a folder for Gradle cache\n</span>mkdir /gradle-cache\n<span class=\"c1\"># make sure you have write permissions\n</span>chown -R <span class=\"si\">${</span><span class=\"nv\">USER</span><span class=\"si\">}</span> /gradle-cache\n</pre>\n<p>Also, make sure you have Android SDK on your machine and\n<tt>$ANDROID_HOME</tt> is set.</p>\n</div>\n<div id=\"setup-py\">\n<h4>setup.py</h4>\n<pre>python setup.py <span class=\"nb\">test</span>\n</pre>\n</div>\n<div id=\"using-py-test-directly-from-digger-project-root-folder\">\n<h4>using py.test directly (from digger project root folder)</h4>\n<pre>py.test -s\n</pre>\n</div>\n<div id=\"running-an-individual-test\">\n<h4>Running an individual test</h4>\n<p>For example:</p>\n<pre>py.test -s tests/test_build.py\n</pre>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2404261, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "3a1634f591c4fbdeb7ff04c021578f94", "sha256": "94fb38ce1b1ad80f0b525e16dddf76075907875396881a951029f7046258e288"}, "downloads": -1, "filename": "abcd-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3a1634f591c4fbdeb7ff04c021578f94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13033, "upload_time": "2016-10-17T13:53:21", "upload_time_iso_8601": "2016-10-17T13:53:21.306372Z", "url": "https://files.pythonhosted.org/packages/06/8a/37aec7abf3ee477f9b7a1d5c6083d2b8fd8ef980da7bb3813724450f9eaf/abcd-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a1634f591c4fbdeb7ff04c021578f94", "sha256": "94fb38ce1b1ad80f0b525e16dddf76075907875396881a951029f7046258e288"}, "downloads": -1, "filename": "abcd-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3a1634f591c4fbdeb7ff04c021578f94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13033, "upload_time": "2016-10-17T13:53:21", "upload_time_iso_8601": "2016-10-17T13:53:21.306372Z", "url": "https://files.pythonhosted.org/packages/06/8a/37aec7abf3ee477f9b7a1d5c6083d2b8fd8ef980da7bb3813724450f9eaf/abcd-0.3.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 15:55:20 2020"}