{"info": {"author": "Miquel Vande Velde", "author_email": "miquel.vandevelde@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Football Data Api (Python Interface)\n\n## 1. Introduction\nThis tool was built using the api provided by [football-data.org](https://www.football-data.org/) so all kudos go to Daniel, \nthe creator of that tool.\n\nThe intend of the tool is to **simplify requests** to the api **for python** use. It does not rearrange any of the responses, it \nsimply offers an interface and returns the response in a dictionary format.\n\n## 2. How to install it.\n\n## 3. How to use it.\n#### 3.1 Starting\nAfter installing the package, simply create a CompetitionData object. The CompetitionData object accepts two optional\narguments: competition name and plan. Plan refers to the tier system that football-data.org uses to manage the payment \nsystem. You can find out more about plans [here](https://www.football-data.org/coverage). The default plan is Tier One\nwhich is the free tier. The default competition is an empty string. If you provide a competition name, make sure it has \nthe same name as on football-data.org.\n\nInstantiate CompetitionData object:\n\n    >>> from football_data_api import data_fetchers\n    >>> data = data_fetchers.CompetitionData()\n\n#### 3.2 Setting the competition\nIf you are not sure which competitions you can choose from or how the competition is named exactly, you can call the \nget_available_competitions method that will return a dictionary with all available competitions as keys and their id as values. The \navailable competitions to you will be based on the currently set plan.\n\n    >>> data.get_available_competitions()\n    {'s\u00c3\u00a9rie a': 2013, \n    'championship': 2016, \n    'premier league': 2021, \n    'european championship': 2018, \n    'uefa champions league': 2001, \n    'ligue 1': 2015, \n    'bundesliga': 2002, \n    'serie a': 2019, \n    'eredivisie': 2003, \n    'primeira liga': 2017, \n    'primera division': 2014, \n    'fifa world cup': 2000}\n\nIf there is ambiguity or you are not sure what competition the competition name relates to, you can find more details [here](https://www.football-data.org/coverage)\nTo set a competition you simply assign the competition name to the competition attribute of the CompetitionData object.\n\n    >>> data.competition = 'premier league'\n    >>> \n\nA KeyError will be raised if the competition name isn't available. The competition that is being set is the current\ncompetition, changing this is not supported at the moment.\n\nOnce you have set a competition, you can start querying information about that competition. Currently on a competition \nlevel, the information you can ask for relates to the competition itself, the teams in the competition and the \nmatches (games) in the competition.\n\nTo get information, the method get_info(type, filters as kwargs) should be called. The first (excluding self) argument\ntype refers to the type of information you are looking for. As said, three types are currently supported for competitions,\n'teams', 'matches', 'competition'. Other arguments passed, should be passed as keyword arguments and will be used to \nfilter the response. Common filters are: dateFrom=yyyy-mm-dd, dateTo=yyyy-mm-dd, id=int, matchday=int, status=string.\n\n    >>> teams_in_premier = data.get_info('teams')\n    >>> from datetime import datetime\n    >>> date_today = datetime.today()\n    >>> matches = data.get_info('matches', dateFrom='2018-08-01', dateTo=date_today)\n\nThe date filters can be passed in the format above or as python's datetime objects. id refers to the specific team id, \nmatchday refers to the matchday in the current season (e.g. matchday 1 of season 2018-2019), status is an important \nfilter for matches as it refers to the progress of games, you can use status to only get games that are in progress by \npassing status='IN_PLAY', a full description of match status can be found [here](https://www.football-data.org/assets/v2_status_diagram.png).\nWhen a filter is passed that is not supported by football-data.org a ValueError will be raised. A complete list of filters\nand how to use them can be found [here](https://www.football-data.org/documentation/quickstart). \n\n    >>> games_in_play = data.get_info('matches', status='IN_PLAY')\n\n_Note on filters: Not all filters work on all type of request (e.g. passing a matchday filter when looking up teams doesn't\nmake sense). Currently these checks are not included in the interface, when an invalid filter is passed, the api will \nsimply return an unfiltered result._\n\n## 4. Next Steps\nNext items to be included:\n  * Fetchers for info about teams and their players.\n  * Keep track of api request for heavy api use (Limit of 10 per minute at the moment which is not being checked by this\n  interface).\n  * Include possibility to set competition by id.\n\n#### N.B.\nPlease feel free to contribute to this project, I made this with my own needs in mind and therefore didn't include all \nuseful functionality.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/miquel-vv/football_data_api", "keywords": "football,data,football-data.org", "license": "", "maintainer": "", "maintainer_email": "", "name": "football-data-api", "package_url": "https://pypi.org/project/football-data-api/", "platform": "", "project_url": "https://pypi.org/project/football-data-api/", "project_urls": {"Homepage": "https://github.com/miquel-vv/football_data_api"}, "release_url": "https://pypi.org/project/football-data-api/0.0.6/", "requires_dist": ["requests"], "requires_python": "", "summary": "Python interface for the football-data.org api from Daniel.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Football Data Api (Python Interface)</h1>\n<h2>1. Introduction</h2>\n<p>This tool was built using the api provided by <a href=\"https://www.football-data.org/\" rel=\"nofollow\">football-data.org</a> so all kudos go to Daniel,\nthe creator of that tool.</p>\n<p>The intend of the tool is to <strong>simplify requests</strong> to the api <strong>for python</strong> use. It does not rearrange any of the responses, it\nsimply offers an interface and returns the response in a dictionary format.</p>\n<h2>2. How to install it.</h2>\n<h2>3. How to use it.</h2>\n<h4>3.1 Starting</h4>\n<p>After installing the package, simply create a CompetitionData object. The CompetitionData object accepts two optional\narguments: competition name and plan. Plan refers to the tier system that football-data.org uses to manage the payment\nsystem. You can find out more about plans <a href=\"https://www.football-data.org/coverage\" rel=\"nofollow\">here</a>. The default plan is Tier One\nwhich is the free tier. The default competition is an empty string. If you provide a competition name, make sure it has\nthe same name as on football-data.org.</p>\n<p>Instantiate CompetitionData object:</p>\n<pre><code>&gt;&gt;&gt; from football_data_api import data_fetchers\n&gt;&gt;&gt; data = data_fetchers.CompetitionData()\n</code></pre>\n<h4>3.2 Setting the competition</h4>\n<p>If you are not sure which competitions you can choose from or how the competition is named exactly, you can call the\nget_available_competitions method that will return a dictionary with all available competitions as keys and their id as values. The\navailable competitions to you will be based on the currently set plan.</p>\n<pre><code>&gt;&gt;&gt; data.get_available_competitions()\n{'s\u00c3\u00a9rie a': 2013, \n'championship': 2016, \n'premier league': 2021, \n'european championship': 2018, \n'uefa champions league': 2001, \n'ligue 1': 2015, \n'bundesliga': 2002, \n'serie a': 2019, \n'eredivisie': 2003, \n'primeira liga': 2017, \n'primera division': 2014, \n'fifa world cup': 2000}\n</code></pre>\n<p>If there is ambiguity or you are not sure what competition the competition name relates to, you can find more details <a href=\"https://www.football-data.org/coverage\" rel=\"nofollow\">here</a>\nTo set a competition you simply assign the competition name to the competition attribute of the CompetitionData object.</p>\n<pre><code>&gt;&gt;&gt; data.competition = 'premier league'\n&gt;&gt;&gt; \n</code></pre>\n<p>A KeyError will be raised if the competition name isn't available. The competition that is being set is the current\ncompetition, changing this is not supported at the moment.</p>\n<p>Once you have set a competition, you can start querying information about that competition. Currently on a competition\nlevel, the information you can ask for relates to the competition itself, the teams in the competition and the\nmatches (games) in the competition.</p>\n<p>To get information, the method get_info(type, filters as kwargs) should be called. The first (excluding self) argument\ntype refers to the type of information you are looking for. As said, three types are currently supported for competitions,\n'teams', 'matches', 'competition'. Other arguments passed, should be passed as keyword arguments and will be used to\nfilter the response. Common filters are: dateFrom=yyyy-mm-dd, dateTo=yyyy-mm-dd, id=int, matchday=int, status=string.</p>\n<pre><code>&gt;&gt;&gt; teams_in_premier = data.get_info('teams')\n&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; date_today = datetime.today()\n&gt;&gt;&gt; matches = data.get_info('matches', dateFrom='2018-08-01', dateTo=date_today)\n</code></pre>\n<p>The date filters can be passed in the format above or as python's datetime objects. id refers to the specific team id,\nmatchday refers to the matchday in the current season (e.g. matchday 1 of season 2018-2019), status is an important\nfilter for matches as it refers to the progress of games, you can use status to only get games that are in progress by\npassing status='IN_PLAY', a full description of match status can be found <a href=\"https://www.football-data.org/assets/v2_status_diagram.png\" rel=\"nofollow\">here</a>.\nWhen a filter is passed that is not supported by football-data.org a ValueError will be raised. A complete list of filters\nand how to use them can be found <a href=\"https://www.football-data.org/documentation/quickstart\" rel=\"nofollow\">here</a>.</p>\n<pre><code>&gt;&gt;&gt; games_in_play = data.get_info('matches', status='IN_PLAY')\n</code></pre>\n<p><em>Note on filters: Not all filters work on all type of request (e.g. passing a matchday filter when looking up teams doesn't\nmake sense). Currently these checks are not included in the interface, when an invalid filter is passed, the api will\nsimply return an unfiltered result.</em></p>\n<h2>4. Next Steps</h2>\n<p>Next items to be included:</p>\n<ul>\n<li>Fetchers for info about teams and their players.</li>\n<li>Keep track of api request for heavy api use (Limit of 10 per minute at the moment which is not being checked by this\ninterface).</li>\n<li>Include possibility to set competition by id.</li>\n</ul>\n<h4>N.B.</h4>\n<p>Please feel free to contribute to this project, I made this with my own needs in mind and therefore didn't include all\nuseful functionality.</p>\n\n          </div>"}, "last_serial": 4254070, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "68ea8e53413c7e0813680b143a01890b", "sha256": "db852075aeb4ec3b97447c3755d3fad17452e42dfe63ffa2d2ea2e119649e7ec"}, "downloads": -1, "filename": "football_data_api-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "68ea8e53413c7e0813680b143a01890b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7577, "upload_time": "2018-09-09T16:21:28", "upload_time_iso_8601": "2018-09-09T16:21:28.675492Z", "url": "https://files.pythonhosted.org/packages/0a/6a/236efa3458890fb2e9de13fd5bcfd6048d301e814690e8236f562de4a67b/football_data_api-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "269cfdefd95f127797e95755b835ba79", "sha256": "2dd40aec94c4d0df11ed2a6f5d2b6a0edc72b6dbf3c0f15121397cc0a8bd69ed"}, "downloads": -1, "filename": "football_data_api-0.0.3.tar.gz", "has_sig": false, "md5_digest": "269cfdefd95f127797e95755b835ba79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6299, "upload_time": "2018-09-09T15:33:42", "upload_time_iso_8601": "2018-09-09T15:33:42.823387Z", "url": "https://files.pythonhosted.org/packages/4f/e6/4a1766efb10bbbba4ffe7fc37a09bc870e9f4966721c390b71d38ee15254/football_data_api-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b0eb7fc6efdbac07b8a6c01283847c1a", "sha256": "5efd53e93079ce070c216014731699866a934fc427aa03f8a09415b8bc65453b"}, "downloads": -1, "filename": "football_data_api-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b0eb7fc6efdbac07b8a6c01283847c1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7578, "upload_time": "2018-09-09T16:23:38", "upload_time_iso_8601": "2018-09-09T16:23:38.084335Z", "url": "https://files.pythonhosted.org/packages/38/b5/4bb07f3c3737a2aca54408fad33cf98d9b21080c1e8561aece55c32150fe/football_data_api-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "35be9aa659b229294132ee3e5c0e047c", "sha256": "63b22e817ad963e0d4a3831de0e1dc7571f19e57bf3730e7dce20e05faade6f7"}, "downloads": -1, "filename": "football_data_api-0.0.4.tar.gz", "has_sig": false, "md5_digest": "35be9aa659b229294132ee3e5c0e047c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6299, "upload_time": "2018-09-09T16:25:22", "upload_time_iso_8601": "2018-09-09T16:25:22.286569Z", "url": "https://files.pythonhosted.org/packages/90/7c/86038bc1b316e23b89c7077257959bf06cf964b6ffc9497f997cd60dfb6e/football_data_api-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "ffe8cca50f9645a23b7730589e9ba60a", "sha256": "d8d79c2895e683eb9278e06c4533e05e90bc5aefdedf37cd4c4ea5582883fcaf"}, "downloads": -1, "filename": "football_data_api-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ffe8cca50f9645a23b7730589e9ba60a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7569, "upload_time": "2018-09-09T16:47:55", "upload_time_iso_8601": "2018-09-09T16:47:55.815219Z", "url": "https://files.pythonhosted.org/packages/26/b9/dab2ccd1322f992d0de1dc3b3a36bd6c0ef3998277882213b6459bc51734/football_data_api-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97c1491bdc508182bdbb4fea1099470c", "sha256": "60280e7efcf91d29a4c05a4daba8361574563a7c623c6eea5f408e9d1cfcd658"}, "downloads": -1, "filename": "football_data_api-0.0.5.tar.gz", "has_sig": false, "md5_digest": "97c1491bdc508182bdbb4fea1099470c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6780, "upload_time": "2018-09-09T16:47:57", "upload_time_iso_8601": "2018-09-09T16:47:57.118955Z", "url": "https://files.pythonhosted.org/packages/fe/8b/4f73439de6420bdf4462bfcf18e3f24cb0f4e7332065b8ca8b3ee1687204/football_data_api-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "1e26975cd63f735996c271b511f761bd", "sha256": "827bbf9e453eb1d472927b9b5a359506ea876fc8e3cd3f7cfff7af3a1efe3d4f"}, "downloads": -1, "filename": "football_data_api-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1e26975cd63f735996c271b511f761bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7584, "upload_time": "2018-09-09T17:18:50", "upload_time_iso_8601": "2018-09-09T17:18:50.799331Z", "url": "https://files.pythonhosted.org/packages/4e/b4/999b548aab7046bf28262f0a8a0ffc08843efd0a8820f14c74e8d866cd2c/football_data_api-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a09a398180ddc2172dcf5dd2ad5155b", "sha256": "59ac14266a615801a3aec48bc9481d5f3b3bcbe61b54733ab76d782ad949e18d"}, "downloads": -1, "filename": "football_data_api-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9a09a398180ddc2172dcf5dd2ad5155b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6821, "upload_time": "2018-09-09T17:18:52", "upload_time_iso_8601": "2018-09-09T17:18:52.156644Z", "url": "https://files.pythonhosted.org/packages/21/bd/e455cc48084265095be312d0787a8e85bc35398ed62eb937f02ec860720d/football_data_api-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1e26975cd63f735996c271b511f761bd", "sha256": "827bbf9e453eb1d472927b9b5a359506ea876fc8e3cd3f7cfff7af3a1efe3d4f"}, "downloads": -1, "filename": "football_data_api-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "1e26975cd63f735996c271b511f761bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7584, "upload_time": "2018-09-09T17:18:50", "upload_time_iso_8601": "2018-09-09T17:18:50.799331Z", "url": "https://files.pythonhosted.org/packages/4e/b4/999b548aab7046bf28262f0a8a0ffc08843efd0a8820f14c74e8d866cd2c/football_data_api-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a09a398180ddc2172dcf5dd2ad5155b", "sha256": "59ac14266a615801a3aec48bc9481d5f3b3bcbe61b54733ab76d782ad949e18d"}, "downloads": -1, "filename": "football_data_api-0.0.6.tar.gz", "has_sig": false, "md5_digest": "9a09a398180ddc2172dcf5dd2ad5155b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6821, "upload_time": "2018-09-09T17:18:52", "upload_time_iso_8601": "2018-09-09T17:18:52.156644Z", "url": "https://files.pythonhosted.org/packages/21/bd/e455cc48084265095be312d0787a8e85bc35398ed62eb937f02ec860720d/football_data_api-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:58 2020"}