{"info": {"author": "Jan Clemens", "author_email": "clemensjan@googlemail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License"], "description": "# Pythonic video reader\nWrapper around [opencv's][1] `cv2.VideoCapture` to simplify reading video files in python.\n\n## Installation\nIn a terminal window run:\n```shell\nconda install opencv\npip install pyvideoreader\n```\n\n## Usage\nOpen a video file and read frame 100:\n```python\nfrom videoreader import VideoReader  \nvr = VideoReader(video_file_name)\nprint(vr)  # prints video_file_name, number of frames, frame rate and frame size\nframe = vr[100]\nvr.close()\n```\n\nOr use a [context manger][2] which takes care of opening and closing the video:\n```python\nwith VideoReader(video_file_name) as vr:  # load the video\n    frame = vr[100]\n```\n\nSupports slice-syntax: `vr[start:end:step]`. To iterate over all frames you need to use `vr[:]`. To read every 100th frame, starting at frame 500 and ending at frame 10000 do this:\n```python\nfor frame in vr[500:10000:100]:\n    do_something_with(frame)\n```\nLists, tuples or ranges can also be passed as indices, e.g. `vr[(42, 314, 999)]`.\n\nNote that indexing returns a generator - each frame in the indices is read on demand which saves memory. If you need all frames at once you can convert it to a list `list(vr[start:end:frame])`.\n\nFor compatibility, `videoreader` can also be used like the underlying `cv2.VideoCapture`:\n```python\nret, frame = vr.read()  # read next frame\n```\n\n[1]: http://opencv.org\n[2]: https://jeffknupp.com/blog/2016/03/07/python-with-context-managers/\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/postpop/videoreader", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyvideoreader", "package_url": "https://pypi.org/project/pyvideoreader/", "platform": "", "project_url": "https://pypi.org/project/pyvideoreader/", "project_urls": {"Homepage": "https://github.com/postpop/videoreader"}, "release_url": "https://pypi.org/project/pyvideoreader/0.4.3/", "requires_dist": ["opencv-python>=3.0"], "requires_python": ">=3.5", "summary": "Pythonic wrapper around opencv's VideoCapture().", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pythonic video reader</h1>\n<p>Wrapper around <a href=\"http://opencv.org\" rel=\"nofollow\">opencv's</a> <code>cv2.VideoCapture</code> to simplify reading video files in python.</p>\n<h2>Installation</h2>\n<p>In a terminal window run:</p>\n<pre>conda install opencv\npip install pyvideoreader\n</pre>\n<h2>Usage</h2>\n<p>Open a video file and read frame 100:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">videoreader</span> <span class=\"kn\">import</span> <span class=\"n\">VideoReader</span>  \n<span class=\"n\">vr</span> <span class=\"o\">=</span> <span class=\"n\">VideoReader</span><span class=\"p\">(</span><span class=\"n\">video_file_name</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">vr</span><span class=\"p\">)</span>  <span class=\"c1\"># prints video_file_name, number of frames, frame rate and frame size</span>\n<span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">vr</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">]</span>\n<span class=\"n\">vr</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n</pre>\n<p>Or use a <a href=\"https://jeffknupp.com/blog/2016/03/07/python-with-context-managers/\" rel=\"nofollow\">context manger</a> which takes care of opening and closing the video:</p>\n<pre><span class=\"k\">with</span> <span class=\"n\">VideoReader</span><span class=\"p\">(</span><span class=\"n\">video_file_name</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">vr</span><span class=\"p\">:</span>  <span class=\"c1\"># load the video</span>\n    <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">vr</span><span class=\"p\">[</span><span class=\"mi\">100</span><span class=\"p\">]</span>\n</pre>\n<p>Supports slice-syntax: <code>vr[start:end:step]</code>. To iterate over all frames you need to use <code>vr[:]</code>. To read every 100th frame, starting at frame 500 and ending at frame 10000 do this:</p>\n<pre><span class=\"k\">for</span> <span class=\"n\">frame</span> <span class=\"ow\">in</span> <span class=\"n\">vr</span><span class=\"p\">[</span><span class=\"mi\">500</span><span class=\"p\">:</span><span class=\"mi\">10000</span><span class=\"p\">:</span><span class=\"mi\">100</span><span class=\"p\">]:</span>\n    <span class=\"n\">do_something_with</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n</pre>\n<p>Lists, tuples or ranges can also be passed as indices, e.g. <code>vr[(42, 314, 999)]</code>.</p>\n<p>Note that indexing returns a generator - each frame in the indices is read on demand which saves memory. If you need all frames at once you can convert it to a list <code>list(vr[start:end:frame])</code>.</p>\n<p>For compatibility, <code>videoreader</code> can also be used like the underlying <code>cv2.VideoCapture</code>:</p>\n<pre><span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">vr</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>  <span class=\"c1\"># read next frame</span>\n</pre>\n\n          </div>"}, "last_serial": 6217172, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "3418741ec2f42ec95b05c6d9b8898560", "sha256": "e791c7d27018b6475db1ec07c7d810ee1c6aa61310359612262c2ea84153c637"}, "downloads": -1, "filename": "pyvideoreader-0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "3418741ec2f42ec95b05c6d9b8898560", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15590, "upload_time": "2019-11-27T19:42:39", "upload_time_iso_8601": "2019-11-27T19:42:39.584503Z", "url": "https://files.pythonhosted.org/packages/01/e3/332bae5f1e42773d9cfb9fc62dc4007eb3c63b021de8a053a1a42e6a77ff/pyvideoreader-0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1883328d5c7ba10a28a733ff83874650", "sha256": "0e0868fe595501f17bd448a79ecfc0bb26a3100cd2b67d4c7fb62eab19e2fc65"}, "downloads": -1, "filename": "pyvideoreader-0.4.tar.gz", "has_sig": false, "md5_digest": "1883328d5c7ba10a28a733ff83874650", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7227, "upload_time": "2019-11-27T19:42:51", "upload_time_iso_8601": "2019-11-27T19:42:51.742505Z", "url": "https://files.pythonhosted.org/packages/83/27/4d3acdef8c403bd07508c169418a723a4f133747795e36a87274a4360a29/pyvideoreader-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "d791640a2277cfab480dd437a04c9a72", "sha256": "1402a0926980a329def82e646eb5863c42996c88968e317b3b60bc62aca99560"}, "downloads": -1, "filename": "pyvideoreader-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d791640a2277cfab480dd437a04c9a72", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16337, "upload_time": "2019-11-27T19:48:01", "upload_time_iso_8601": "2019-11-27T19:48:01.828285Z", "url": "https://files.pythonhosted.org/packages/bf/86/f0ce564a4f668ed4ec4d3f3066754d511ef4450b8a18531744e183580e28/pyvideoreader-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41723593cc411e97e5172644c42eda06", "sha256": "809eaaecf29fd7fab498ebb9ec417454a5ad70849f4650f9111aa1356cb32620"}, "downloads": -1, "filename": "pyvideoreader-0.4.1.tar.gz", "has_sig": false, "md5_digest": "41723593cc411e97e5172644c42eda06", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7244, "upload_time": "2019-11-27T19:48:10", "upload_time_iso_8601": "2019-11-27T19:48:10.641712Z", "url": "https://files.pythonhosted.org/packages/b9/0c/31ffed5f58ab0485262dc07cf76f94c39b70ea0da44426faa0041350be53/pyvideoreader-0.4.1.tar.gz", "yanked": false}], "0.4.1.1": [{"comment_text": "", "digests": {"md5": "cb0991ccb583d226b1244b0fc6e7e637", "sha256": "876de2b2292d956f80948dfa129b1895e38fe7b861a923931e8cbe18d3342ba7"}, "downloads": -1, "filename": "pyvideoreader-0.4.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cb0991ccb583d226b1244b0fc6e7e637", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16347, "upload_time": "2019-11-27T19:51:55", "upload_time_iso_8601": "2019-11-27T19:51:55.375113Z", "url": "https://files.pythonhosted.org/packages/ac/90/a8aa47147f0a6b4193fe2a0294e126316ccb9e843c2b3f602373a73222b0/pyvideoreader-0.4.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4050f4b1941398e47e4992f49d6625e", "sha256": "c358323584fb95ed142283d81883adfce1d50348a5763958823e31e073e2b2ca"}, "downloads": -1, "filename": "pyvideoreader-0.4.1.1.tar.gz", "has_sig": false, "md5_digest": "d4050f4b1941398e47e4992f49d6625e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7245, "upload_time": "2019-11-27T19:52:01", "upload_time_iso_8601": "2019-11-27T19:52:01.636239Z", "url": "https://files.pythonhosted.org/packages/2d/69/3cf990e46e27dbb8e4e5cd26fb0ad7687593714274314a5f787add2ede32/pyvideoreader-0.4.1.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "bcdca82cfcaf17ccf0f93fd8dbb0cc12", "sha256": "402b36daa4862ef603caa3a479bfaf9b03801777703a897e2b914af08413a9a6"}, "downloads": -1, "filename": "pyvideoreader-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bcdca82cfcaf17ccf0f93fd8dbb0cc12", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16324, "upload_time": "2019-11-29T08:17:20", "upload_time_iso_8601": "2019-11-29T08:17:20.879335Z", "url": "https://files.pythonhosted.org/packages/a6/7d/96f49e3add53222fec2f401c760d492020f937f9ba15fb14f4a21b9fb142/pyvideoreader-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f92dc1a9c56a3a7a7b942f6ec8d2a357", "sha256": "c72c4fee7069ad13f24c94a297bc0731b3fd0caabdb578ace3f9e0342b8b1f53"}, "downloads": -1, "filename": "pyvideoreader-0.4.2.tar.gz", "has_sig": false, "md5_digest": "f92dc1a9c56a3a7a7b942f6ec8d2a357", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7438, "upload_time": "2019-11-29T08:17:27", "upload_time_iso_8601": "2019-11-29T08:17:27.052707Z", "url": "https://files.pythonhosted.org/packages/4b/36/171935ab76de9b4427d56a51fb074d8922e0f6f92a078e5b274a19268551/pyvideoreader-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "18239e2eee378e3354de193b1ec1a874", "sha256": "843074c8ad1453c12a3e7b64337235b87c6ae8dd859a48da526e183d2da2f004"}, "downloads": -1, "filename": "pyvideoreader-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "18239e2eee378e3354de193b1ec1a874", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16325, "upload_time": "2019-11-29T08:20:24", "upload_time_iso_8601": "2019-11-29T08:20:24.713058Z", "url": "https://files.pythonhosted.org/packages/d7/cc/c23b199f2be3719deaa83e5a9af42e78453b84515632833d7edd064b97f3/pyvideoreader-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6bb654cbebe59b7dbcc95ce45a8a7c0", "sha256": "be8dbb3a92fcd42fd17ec14db8afc11a7499013d6869194fa95a46d55524bfec"}, "downloads": -1, "filename": "pyvideoreader-0.4.3.tar.gz", "has_sig": false, "md5_digest": "f6bb654cbebe59b7dbcc95ce45a8a7c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7417, "upload_time": "2019-11-29T08:20:30", "upload_time_iso_8601": "2019-11-29T08:20:30.142348Z", "url": "https://files.pythonhosted.org/packages/b2/00/3afe7bba1d718914ef8b3dedab0269d60998d59e65029ddb89d70e9253ec/pyvideoreader-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "18239e2eee378e3354de193b1ec1a874", "sha256": "843074c8ad1453c12a3e7b64337235b87c6ae8dd859a48da526e183d2da2f004"}, "downloads": -1, "filename": "pyvideoreader-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "18239e2eee378e3354de193b1ec1a874", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 16325, "upload_time": "2019-11-29T08:20:24", "upload_time_iso_8601": "2019-11-29T08:20:24.713058Z", "url": "https://files.pythonhosted.org/packages/d7/cc/c23b199f2be3719deaa83e5a9af42e78453b84515632833d7edd064b97f3/pyvideoreader-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f6bb654cbebe59b7dbcc95ce45a8a7c0", "sha256": "be8dbb3a92fcd42fd17ec14db8afc11a7499013d6869194fa95a46d55524bfec"}, "downloads": -1, "filename": "pyvideoreader-0.4.3.tar.gz", "has_sig": false, "md5_digest": "f6bb654cbebe59b7dbcc95ce45a8a7c0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 7417, "upload_time": "2019-11-29T08:20:30", "upload_time_iso_8601": "2019-11-29T08:20:30.142348Z", "url": "https://files.pythonhosted.org/packages/b2/00/3afe7bba1d718914ef8b3dedab0269d60998d59e65029ddb89d70e9253ec/pyvideoreader-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:00 2020"}