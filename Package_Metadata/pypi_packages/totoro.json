{"info": {"author": "Alex Lee", "author_email": "lyd.alexlee.public@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: Implementation :: CPython"], "description": "Totoro\n======\n.. image:: https://img.shields.io/pypi/v/totoro.svg\n    :target: https://pypi.python.org/pypi/totoro\n\n.. image:: https://img.shields.io/pypi/dm/totoro.svg\n    :target: https://pypi.python.org/pypi/totoro\n\nCelery integration with Tornado.\n\nInstallation\n------------\n\nYou can install Totoro either via the Python Package Index (PyPI) or from source.\n\nTo install using pip, simply:\n\n.. code-block:: bash\n\n    $ sudo pip install totoro\n\nor alternatively (you really should be using pip though):\n\n.. code-block:: bash\n\n    $ sudo easy_install totoro\n\nor from source:\n\n.. code-block:: bash\n\n    $ sudo python setup.py install\n\nTotoro can only support AMQP(RabbitMQ) by default. To use the Redis, you can specify the requirements on the pip comand-line by using brackets.\n\n.. code-block:: bash\n\n    $ sudo pip install totoro[redis]\n\nHello, world\n------------\n\nHere is a simple \"Hello, world!\" example for calling celery tasks from Tornado RequestHandler:\n\n.. code-block:: python\n\n    #!/usr/bin/env python\n    \n    import tornado.httpserver\n    import tornado.ioloop\n    import tornado.web\n    \n    from tornado import gen\n    import totoro\n    from totoro.test.celery_tasks import tasks\n    \n    \n    class MainHandler(tornado.web.RequestHandler):\n        @gen.coroutine\n        def get(self):\n            response = yield gen.Task(tasks.echo.apply_async, args=['Hello world!'])\n            self.write(response.result)\n    \n    \n    def main():\n        totoro.setup_producer()\n        application = tornado.web.Application([\n            (r\"/\", MainHandler),\n        ])\n        http_server = tornado.httpserver.HTTPServer(application)\n        http_server.listen(8888)\n        tornado.ioloop.IOLoop.instance().start()\n    \n    \n    if __name__ == \"__main__\":\n        main()\n\nTo run celery worker for the example:\n\n.. code-block:: bash\n\n    $ python -m totoro.test.runtasks worker -l INFO\n\nConfiguration and defaults\n--------------------------\n\nTOTORO_AMQP_CONNECTION_POOL\n^^^^^^^^^^^^^^^^^^^^^^^^^^^\n\n*New in version 0.1.2*\n\nThe setting must a dict that used to configure the AMQP(RabbitMQ) connection pool. It supporting the following keys:\n\n* max_idle_connections - Max number of keeping connections. Defaults to 3.\n* max_open_connections - Max number of opened connections, 0 means no limit. Defaults to 10.\n* max_recycle_sec - How long connections are recycled. Defaults to 3600.\n\nExample configuration:\n\n.. code-block:: python\n\n    celery = Celery(\"totoro_celery_tasks\")\n    celery.conf.update(\n        BROKER_URL='amqp://guest:guest@localhost:5672//',\n        CELERY_TASK_SERIALIZER='json',\n        CELERY_ACCEPT_CONTENT=['json'],  # Ignore other content\n        CELERY_RESULT_SERIALIZER='json',\n        CELERY_TIMEZONE='Asia/Shanghai',\n        CELERY_ENABLE_UTC=True,\n        TOTORO_AMQP_CONNECTION_POOL={\n            'max_idle_connections': 1,\n            'max_open_connections': 10,\n            'max_recycle_sec': 3600\n        },\n    )\n\nTests\n-----\n\nTo run the tests for the AMQP(broker/backend):\n\n.. code-block:: bash\n\n    $ python -m totoro.test.runtasks worker -l INFO\n    $ python -m totoro.test.runtests\n\nTo run the tests for the AMQP broker with the Redis backend:\n\n.. code-block:: bash\n\n    $ CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0  python -m totoro.test.runtasks worker -l INFO\n    $ CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0  python -m totoro.test.runtests\n\nTo run the tests for the Redis(broker/backend):\n\n.. code-block:: bash\n\n    $ BROKER_URL=redis://127.0.0.1:6379/0  CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0 python -m totoro.test.runtasks worker -l INFO\n    $ BROKER_URL=redis://127.0.0.1:6379/0  CELERY_RESULT_BACKEND=redis://127.0.0.1:6379/0 python -m totoro.test.runtests", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Strawhatfy/totoro", "keywords": "tornado,celery,amqp,redis", "license": "http://www.apache.org/licenses/LICENSE-2.0", "maintainer": null, "maintainer_email": null, "name": "totoro", "package_url": "https://pypi.org/project/totoro/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/totoro/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Strawhatfy/totoro"}, "release_url": "https://pypi.org/project/totoro/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Celery integration with Tornado", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/totoro\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/totoro.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3507041e3d7de676b15a59fecde42d004d607edc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f746f746f726f2e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/totoro\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/totoro.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05191d48bf59976d01a2846033038fb499f6048d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f746f746f726f2e737667\"></a>\n<p>Celery integration with Tornado.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install Totoro either via the Python Package Index (PyPI) or from source.</p>\n<p>To install using pip, simply:</p>\n<pre>$ sudo pip install totoro\n</pre>\n<p>or alternatively (you really should be using pip though):</p>\n<pre>$ sudo easy_install totoro\n</pre>\n<p>or from source:</p>\n<pre>$ sudo python setup.py install\n</pre>\n<p>Totoro can only support AMQP(RabbitMQ) by default. To use the Redis, you can specify the requirements on the pip comand-line by using brackets.</p>\n<pre>$ sudo pip install totoro<span class=\"o\">[</span>redis<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"hello-world\">\n<h2>Hello, world</h2>\n<p>Here is a simple \u201cHello, world!\u201d example for calling celery tasks from Tornado RequestHandler:</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">tornado.httpserver</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tornado.ioloop</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tornado.web</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tornado</span> <span class=\"kn\">import</span> <span class=\"n\">gen</span>\n<span class=\"kn\">import</span> <span class=\"nn\">totoro</span>\n<span class=\"kn\">from</span> <span class=\"nn\">totoro.test.celery_tasks</span> <span class=\"kn\">import</span> <span class=\"n\">tasks</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MainHandler</span><span class=\"p\">(</span><span class=\"n\">tornado</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">RequestHandler</span><span class=\"p\">):</span>\n    <span class=\"nd\">@gen</span><span class=\"o\">.</span><span class=\"n\">coroutine</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">yield</span> <span class=\"n\">gen</span><span class=\"o\">.</span><span class=\"n\">Task</span><span class=\"p\">(</span><span class=\"n\">tasks</span><span class=\"o\">.</span><span class=\"n\">echo</span><span class=\"o\">.</span><span class=\"n\">apply_async</span><span class=\"p\">,</span> <span class=\"n\">args</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'Hello world!'</span><span class=\"p\">])</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">result</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">totoro</span><span class=\"o\">.</span><span class=\"n\">setup_producer</span><span class=\"p\">()</span>\n    <span class=\"n\">application</span> <span class=\"o\">=</span> <span class=\"n\">tornado</span><span class=\"o\">.</span><span class=\"n\">web</span><span class=\"o\">.</span><span class=\"n\">Application</span><span class=\"p\">([</span>\n        <span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s2\">\"/\"</span><span class=\"p\">,</span> <span class=\"n\">MainHandler</span><span class=\"p\">),</span>\n    <span class=\"p\">])</span>\n    <span class=\"n\">http_server</span> <span class=\"o\">=</span> <span class=\"n\">tornado</span><span class=\"o\">.</span><span class=\"n\">httpserver</span><span class=\"o\">.</span><span class=\"n\">HTTPServer</span><span class=\"p\">(</span><span class=\"n\">application</span><span class=\"p\">)</span>\n    <span class=\"n\">http_server</span><span class=\"o\">.</span><span class=\"n\">listen</span><span class=\"p\">(</span><span class=\"mi\">8888</span><span class=\"p\">)</span>\n    <span class=\"n\">tornado</span><span class=\"o\">.</span><span class=\"n\">ioloop</span><span class=\"o\">.</span><span class=\"n\">IOLoop</span><span class=\"o\">.</span><span class=\"n\">instance</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>To run celery worker for the example:</p>\n<pre>$ python -m totoro.test.runtasks worker -l INFO\n</pre>\n</div>\n<div id=\"configuration-and-defaults\">\n<h2>Configuration and defaults</h2>\n<h2 id=\"totoro-amqp-connection-pool\"><span class=\"section-subtitle\">TOTORO_AMQP_CONNECTION_POOL</span></h2>\n<p><em>New in version 0.1.2</em></p>\n<p>The setting must a dict that used to configure the AMQP(RabbitMQ) connection pool. It supporting the following keys:</p>\n<ul>\n<li>max_idle_connections - Max number of keeping connections. Defaults to 3.</li>\n<li>max_open_connections - Max number of opened connections, 0 means no limit. Defaults to 10.</li>\n<li>max_recycle_sec - How long connections are recycled. Defaults to 3600.</li>\n</ul>\n<p>Example configuration:</p>\n<pre><span class=\"n\">celery</span> <span class=\"o\">=</span> <span class=\"n\">Celery</span><span class=\"p\">(</span><span class=\"s2\">\"totoro_celery_tasks\"</span><span class=\"p\">)</span>\n<span class=\"n\">celery</span><span class=\"o\">.</span><span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n    <span class=\"n\">BROKER_URL</span><span class=\"o\">=</span><span class=\"s1\">'amqp://guest:guest@localhost:5672//'</span><span class=\"p\">,</span>\n    <span class=\"n\">CELERY_TASK_SERIALIZER</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">,</span>\n    <span class=\"n\">CELERY_ACCEPT_CONTENT</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'json'</span><span class=\"p\">],</span>  <span class=\"c1\"># Ignore other content</span>\n    <span class=\"n\">CELERY_RESULT_SERIALIZER</span><span class=\"o\">=</span><span class=\"s1\">'json'</span><span class=\"p\">,</span>\n    <span class=\"n\">CELERY_TIMEZONE</span><span class=\"o\">=</span><span class=\"s1\">'Asia/Shanghai'</span><span class=\"p\">,</span>\n    <span class=\"n\">CELERY_ENABLE_UTC</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">TOTORO_AMQP_CONNECTION_POOL</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s1\">'max_idle_connections'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'max_open_connections'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span>\n        <span class=\"s1\">'max_recycle_sec'</span><span class=\"p\">:</span> <span class=\"mi\">3600</span>\n    <span class=\"p\">},</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"tests\">\n<h2>Tests</h2>\n<p>To run the tests for the AMQP(broker/backend):</p>\n<pre>$ python -m totoro.test.runtasks worker -l INFO\n$ python -m totoro.test.runtests\n</pre>\n<p>To run the tests for the AMQP broker with the Redis backend:</p>\n<pre>$ <span class=\"nv\">CELERY_RESULT_BACKEND</span><span class=\"o\">=</span>redis://127.0.0.1:6379/0  python -m totoro.test.runtasks worker -l INFO\n$ <span class=\"nv\">CELERY_RESULT_BACKEND</span><span class=\"o\">=</span>redis://127.0.0.1:6379/0  python -m totoro.test.runtests\n</pre>\n<p>To run the tests for the Redis(broker/backend):</p>\n<pre>$ <span class=\"nv\">BROKER_URL</span><span class=\"o\">=</span>redis://127.0.0.1:6379/0  <span class=\"nv\">CELERY_RESULT_BACKEND</span><span class=\"o\">=</span>redis://127.0.0.1:6379/0 python -m totoro.test.runtasks worker -l INFO\n$ <span class=\"nv\">BROKER_URL</span><span class=\"o\">=</span>redis://127.0.0.1:6379/0  <span class=\"nv\">CELERY_RESULT_BACKEND</span><span class=\"o\">=</span>redis://127.0.0.1:6379/0 python -m totoro.test.runtests\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1962686, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "458e5e9d60041185e19e2fbd60932da2", "sha256": "f5d06aed47327af3d656a482c6438121fe08e41b689b1c84d8419c84fd90c95c"}, "downloads": -1, "filename": "totoro-0.1.0-py27-none-any.whl", "has_sig": false, "md5_digest": "458e5e9d60041185e19e2fbd60932da2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 14006, "upload_time": "2015-12-28T13:22:58", "upload_time_iso_8601": "2015-12-28T13:22:58.262207Z", "url": "https://files.pythonhosted.org/packages/e5/2b/461ccdec212a8116f4f62a9e179920f6889b79da55b75e6450063c910f18/totoro-0.1.0-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "691e994c1f5b8d8350653f45543caf50", "sha256": "e1db156c1479b9849a4147a6c1e96b0058f5ec9a8eaff72cfbc379317631c4c5"}, "downloads": -1, "filename": "totoro-0.1.0.zip", "has_sig": false, "md5_digest": "691e994c1f5b8d8350653f45543caf50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21185, "upload_time": "2015-12-28T13:22:35", "upload_time_iso_8601": "2015-12-28T13:22:35.790075Z", "url": "https://files.pythonhosted.org/packages/dc/02/ad12121b3a732362d916e48fe69664ce5669762d57df44fc20dd3dcd540c/totoro-0.1.0.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7101810111aa91ef0537ec8125ce91bc", "sha256": "63aebc699e658f1d73a636bbe1dd485d49e9b3c611c147e6f7353290d7aabd81"}, "downloads": -1, "filename": "totoro-0.1.2-py27-none-any.whl", "has_sig": false, "md5_digest": "7101810111aa91ef0537ec8125ce91bc", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16043, "upload_time": "2016-01-04T10:18:13", "upload_time_iso_8601": "2016-01-04T10:18:13.743902Z", "url": "https://files.pythonhosted.org/packages/fd/4c/a012745d7a8e4aec663b741ebee384afddc90472073d8ef2d5a8aac8c3c1/totoro-0.1.2-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0ebebd6841e1b171732e22a0031d7c51", "sha256": "4375876117fff8285943637a1ffe4bf8da40b12aea87fd169c27742663bb7f82"}, "downloads": -1, "filename": "totoro-0.1.2.zip", "has_sig": false, "md5_digest": "0ebebd6841e1b171732e22a0031d7c51", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23945, "upload_time": "2016-01-04T10:19:34", "upload_time_iso_8601": "2016-01-04T10:19:34.882308Z", "url": "https://files.pythonhosted.org/packages/26/ba/503f0a0713d718881e4b1a2e162c6dfba2a4792d047eec3a3c23ce517b15/totoro-0.1.2.zip", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "575848f74f33db0cdbbe8b7ec0b5efa2", "sha256": "56d2967f26df930f1fe8a08021213a2880cefcacc4d046b375a13482860ed210"}, "downloads": -1, "filename": "totoro-0.1.3-py27-none-any.whl", "has_sig": false, "md5_digest": "575848f74f33db0cdbbe8b7ec0b5efa2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16196, "upload_time": "2016-02-18T06:39:14", "upload_time_iso_8601": "2016-02-18T06:39:14.402457Z", "url": "https://files.pythonhosted.org/packages/b6/bf/4dd368efe73606be5ecd8e2d1fbbca40a7e8679ae04e4d02dd12fd6e4eaf/totoro-0.1.3-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4ae6e531b352c6e8762dab3be8eca0a", "sha256": "219e33d694eaf452d6153027b31a069e0036a34554c3ee792a0a060ea324aa09"}, "downloads": -1, "filename": "totoro-0.1.3.zip", "has_sig": false, "md5_digest": "d4ae6e531b352c6e8762dab3be8eca0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24065, "upload_time": "2016-02-18T06:38:15", "upload_time_iso_8601": "2016-02-18T06:38:15.003227Z", "url": "https://files.pythonhosted.org/packages/00/5b/9f0f159bbe09512682b2b1954e5da11507a158ec0d87c44ff8386efc704c/totoro-0.1.3.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "575848f74f33db0cdbbe8b7ec0b5efa2", "sha256": "56d2967f26df930f1fe8a08021213a2880cefcacc4d046b375a13482860ed210"}, "downloads": -1, "filename": "totoro-0.1.3-py27-none-any.whl", "has_sig": false, "md5_digest": "575848f74f33db0cdbbe8b7ec0b5efa2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16196, "upload_time": "2016-02-18T06:39:14", "upload_time_iso_8601": "2016-02-18T06:39:14.402457Z", "url": "https://files.pythonhosted.org/packages/b6/bf/4dd368efe73606be5ecd8e2d1fbbca40a7e8679ae04e4d02dd12fd6e4eaf/totoro-0.1.3-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d4ae6e531b352c6e8762dab3be8eca0a", "sha256": "219e33d694eaf452d6153027b31a069e0036a34554c3ee792a0a060ea324aa09"}, "downloads": -1, "filename": "totoro-0.1.3.zip", "has_sig": false, "md5_digest": "d4ae6e531b352c6e8762dab3be8eca0a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24065, "upload_time": "2016-02-18T06:38:15", "upload_time_iso_8601": "2016-02-18T06:38:15.003227Z", "url": "https://files.pythonhosted.org/packages/00/5b/9f0f159bbe09512682b2b1954e5da11507a158ec0d87c44ff8386efc704c/totoro-0.1.3.zip", "yanked": false}], "timestamp": "Fri May  8 03:49:32 2020"}