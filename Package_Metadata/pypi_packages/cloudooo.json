{"info": {"author": "Gabriel M. Monnerat", "author_email": "gabriel@tiolive.com", "bugtrack_url": null, "classifiers": ["Framework :: Paste", "Natural Language :: English", "Programming Language :: Python :: 2.6", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: System :: Networking", "Topic :: System :: Operating System Kernels :: Linux"], "description": "Install Cloudooo\n================\n\n  $ python2.6 setup.py install\n\n  Warnings:\n      - you must have installed setuptools>=0.6c11 in this python.\n\nInstall LibreOffice / OpenOffice.org\n====================================\n\n  Install LibreOffice or OpenOffice.org.\n    - http://www.libreoffice.org/download/\n    - http://download.openoffice.org/\n\nCreate Configuration File\n=========================\n\n  The configuration file is used to start the application using paster.\n  $ cp ./cloudooo/samples/samples.conf . # Copy to current folder\n\n  The next step is define some attributes in cloudooo.conf:\n    - working_path - folder to run the application. This folder need be created.\n    - uno_path - folder where UNO library is installed (ex. /opt/libreoffice/basis-link/program/)\n    - soffice_binary_path - folder where soffice.bin is installed (ex. /opt/libreoffice/program/)\n\nRun Application\n===============\n\n  $ paster serve ./cloudooo.conf\n\n  or run as a daemon:\n\n  $ paster serve ./cloudoo.conf --daemon\n\n\nStop Application\n================\n\n  $ kill -1 PASTER_PID\n\n  Warning: always use SIGHUP because only with this signal all processes are\n  stopped correctly.\n\nCloudooo Description\n====================\n\n- XMLRPC + WSGI will be one bridge for easy access to LibreOffice / OpenOffice.org. This will implement one XMLRPC server into WSGI (Paster).\n\n- PyUno is used to connect to LibreOffice / OpenOffice.org stated with open socket. The features will be handled all by pyuno.\n\n- Only a process will have access to LibreOffice / OpenOffice.org by time.\n\n- All clients receive the same object(proxy) when connects with XMLRPC Server.\n\nManaging LibreOffice / OpenOffice.org process\n\n - start 'soffice.bin';\n   - Pyuno start 'soffice.bin' processes and the communication is through sockets;\n   - 'soffice.bin' processes run in brackground;\n - control 'soffice.bin';\n   - If the socket lose the connection, cloudooo kills the process, restartes processes and submit again the file;\n\nXMLRPC Server - XMLRPC + WSGI\n-----------------------------\n\n  - Send document to 'soffice.bin' and return the document converted with metadata;\n      - XMLRPC receives a file and connects to 'soffice.bin' process by pyuno;\n      - The pyuno opens a new document, write, add metadata and returns the document edited or converted to xmlrpc and it return the document to the user;\n      - When finalize the use of 'soffice.bin', should make sure that it was finalized;\n  - Export to another format;\n  - Invite document and return metadata only;\n  - Edit metadata of the document;\n  - Problems and possible solution\n     - 'soffice.bin' is stalled;\n       - finalize the process, start 'soffice.bin' and submit the document again(without restart the cloudooo);\n     - 'soffice.bin' is crashed;\n       - finalize the process, verify if all the process was killed, start 'soffice.bin' and submit the document again(without restart the cloudooo)\n     - 'soffice.bin' received the document and stalled;\n       - if 'soffice.bin' isn't responding, kill the process and start\n     - The document that was sent is corrupt;\n       - write in log the error and verify that the process aren't in memory\n\n1.2.3 (2010-04-01)\n==================\n  - Eggify handlers\n  - Configuration file tells to cloudooo which handler must be loaded\n  - Update interface (not implemented yet)\n\n1.2.2 (2010-02-07)\n==================\n  - No longer use Xvfb.\n\n1.2.1 (2010-01-21)\n==================\n  - Improve ERP5 compatibility.\n\n1.2.0 (2010-01-19)\n==================\n  - Support LibreOffice3.3rc3.\n\n1.1.0 (2010-01-13)\n===================\n  - Refactor runCloudOOoUnitTest.py to control better the daemon process\n  - Use argparse instead of optparse\n  - Refactor tests to use boolean asserts to validate True or False.\n  - Use python-magic to validate the output documents according to mimetype.\n  - Change folder structure of cloudooo to put handler, mimemapper, helpers\n    related to handler in same folder than handler.\n  - Refactor code to use json instead of jsonpickle.\n  - Add getTableItem, getTableItemList and getTableMatrix for OOGranulate\n  - Add getParagraphItemList and getParagraphItem for OOGranulate\n  - Add getImageItemList and getImage for OOGranulate\n  - Add OdfDocument\n  - Add granulate interface.\n\n1.0.9\n=====\n  - use pkg_resources to get helper scripts.\n  - move internal scripts to helper folder.\n  - removed cloudooo as dependency of internal scripts.\n  - modified way that the filters of OpenOffice.org are passed.\n\n1.0.8\n=====\n  - Remove all attributes that works with cloudooo script paths.\n  - Use all scripts according to your python eggs.\n  - Fixed problem when a spreadsheet will be converted to html.\n\n1.0.7\n=====\n  - Remove entry points, treat those as ordinary files.\n  - Search all script files using pkg_resources.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://svn.erp5.org/repos/public/erp5/trunk/utils/cloudooo", "keywords": "xmlrpc openoffice wsgi paste python", "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "cloudooo", "package_url": "https://pypi.org/project/cloudooo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cloudooo/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://svn.erp5.org/repos/public/erp5/trunk/utils/cloudooo"}, "release_url": "https://pypi.org/project/cloudooo/1.2.3/", "requires_dist": null, "requires_python": null, "summary": "XML-RPC document conversion server", "version": "1.2.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"install-cloudooo\">\n<h2>Install Cloudooo</h2>\n<blockquote>\n<p>$ python2.6 setup.py install</p>\n<dl>\n<dt>Warnings:</dt>\n<dd><ul>\n<li>you must have installed setuptools&gt;=0.6c11 in this python.</li>\n</ul>\n</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"install-libreoffice-openoffice-org\">\n<h2>Install LibreOffice / OpenOffice.org</h2>\n<blockquote>\n<dl>\n<dt>Install LibreOffice or OpenOffice.org.</dt>\n<dd><ul>\n<li><a href=\"http://www.libreoffice.org/download/\" rel=\"nofollow\">http://www.libreoffice.org/download/</a></li>\n<li><a href=\"http://download.openoffice.org/\" rel=\"nofollow\">http://download.openoffice.org/</a></li>\n</ul>\n</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"create-configuration-file\">\n<h2>Create Configuration File</h2>\n<blockquote>\n<p>The configuration file is used to start the application using paster.\n$ cp ./cloudooo/samples/samples.conf . # Copy to current folder</p>\n<dl>\n<dt>The next step is define some attributes in cloudooo.conf:</dt>\n<dd><ul>\n<li>working_path - folder to run the application. This folder need be created.</li>\n<li>uno_path - folder where UNO library is installed (ex. /opt/libreoffice/basis-link/program/)</li>\n<li>soffice_binary_path - folder where soffice.bin is installed (ex. /opt/libreoffice/program/)</li>\n</ul>\n</dd>\n</dl>\n</blockquote>\n</div>\n<div id=\"run-application\">\n<h2>Run Application</h2>\n<blockquote>\n<p>$ paster serve ./cloudooo.conf</p>\n<p>or run as a daemon:</p>\n<p>$ paster serve ./cloudoo.conf \u2013daemon</p>\n</blockquote>\n</div>\n<div id=\"stop-application\">\n<h2>Stop Application</h2>\n<blockquote>\n<p>$ kill -1 PASTER_PID</p>\n<p>Warning: always use SIGHUP because only with this signal all processes are\nstopped correctly.</p>\n</blockquote>\n</div>\n<div id=\"cloudooo-description\">\n<h2>Cloudooo Description</h2>\n<ul>\n<li>XMLRPC + WSGI will be one bridge for easy access to LibreOffice / OpenOffice.org. This will implement one XMLRPC server into WSGI (Paster).</li>\n<li>PyUno is used to connect to LibreOffice / OpenOffice.org stated with open socket. The features will be handled all by pyuno.</li>\n<li>Only a process will have access to LibreOffice / OpenOffice.org by time.</li>\n<li>All clients receive the same object(proxy) when connects with XMLRPC Server.</li>\n</ul>\n<p>Managing LibreOffice / OpenOffice.org process</p>\n<blockquote>\n<ul>\n<li>start \u2018soffice.bin\u2019;\n- Pyuno start \u2018soffice.bin\u2019 processes and the communication is through sockets;\n- \u2018soffice.bin\u2019 processes run in brackground;</li>\n<li>control \u2018soffice.bin\u2019;\n- If the socket lose the connection, cloudooo kills the process, restartes processes and submit again the file;</li>\n</ul>\n</blockquote>\n<div id=\"xmlrpc-server-xmlrpc-wsgi\">\n<h3>XMLRPC Server - XMLRPC + WSGI</h3>\n<blockquote>\n<ul>\n<li><dl>\n<dt>Send document to \u2018soffice.bin\u2019 and return the document converted with metadata;</dt>\n<dd><ul>\n<li>XMLRPC receives a file and connects to \u2018soffice.bin\u2019 process by pyuno;</li>\n<li>The pyuno opens a new document, write, add metadata and returns the document edited or converted to xmlrpc and it return the document to the user;</li>\n<li>When finalize the use of \u2018soffice.bin\u2019, should make sure that it was finalized;</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Export to another format;</li>\n<li>Invite document and return metadata only;</li>\n<li>Edit metadata of the document;</li>\n<li><dl>\n<dt>Problems and possible solution</dt>\n<dd><ul>\n<li>\u2018soffice.bin\u2019 is stalled;\n- finalize the process, start \u2018soffice.bin\u2019 and submit the document again(without restart the cloudooo);</li>\n<li>\u2018soffice.bin\u2019 is crashed;\n- finalize the process, verify if all the process was killed, start \u2018soffice.bin\u2019 and submit the document again(without restart the cloudooo)</li>\n<li>\u2018soffice.bin\u2019 received the document and stalled;\n- if \u2018soffice.bin\u2019 isn\u2019t responding, kill the process and start</li>\n<li>The document that was sent is corrupt;\n- write in log the error and verify that the process aren\u2019t in memory</li>\n</ul>\n</dd>\n</dl>\n</li>\n</ul>\n</blockquote>\n</div>\n</div>\n<div id=\"id1\">\n<h2>1.2.3 (2010-04-01)</h2>\n<blockquote>\n<ul>\n<li>Eggify handlers</li>\n<li>Configuration file tells to cloudooo which handler must be loaded</li>\n<li>Update interface (not implemented yet)</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id2\">\n<h2>1.2.2 (2010-02-07)</h2>\n<blockquote>\n<ul>\n<li>No longer use Xvfb.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id3\">\n<h2>1.2.1 (2010-01-21)</h2>\n<blockquote>\n<ul>\n<li>Improve ERP5 compatibility.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id4\">\n<h2>1.2.0 (2010-01-19)</h2>\n<blockquote>\n<ul>\n<li>Support LibreOffice3.3rc3.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id5\">\n<h2>1.1.0 (2010-01-13)</h2>\n<blockquote>\n<ul>\n<li>Refactor runCloudOOoUnitTest.py to control better the daemon process</li>\n<li>Use argparse instead of optparse</li>\n<li>Refactor tests to use boolean asserts to validate True or False.</li>\n<li>Use python-magic to validate the output documents according to mimetype.</li>\n<li>Change folder structure of cloudooo to put handler, mimemapper, helpers\nrelated to handler in same folder than handler.</li>\n<li>Refactor code to use json instead of jsonpickle.</li>\n<li>Add getTableItem, getTableItemList and getTableMatrix for OOGranulate</li>\n<li>Add getParagraphItemList and getParagraphItem for OOGranulate</li>\n<li>Add getImageItemList and getImage for OOGranulate</li>\n<li>Add OdfDocument</li>\n<li>Add granulate interface.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id6\">\n<h2>1.0.9</h2>\n<blockquote>\n<ul>\n<li>use pkg_resources to get helper scripts.</li>\n<li>move internal scripts to helper folder.</li>\n<li>removed cloudooo as dependency of internal scripts.</li>\n<li>modified way that the filters of OpenOffice.org are passed.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id7\">\n<h2>1.0.8</h2>\n<blockquote>\n<ul>\n<li>Remove all attributes that works with cloudooo script paths.</li>\n<li>Use all scripts according to your python eggs.</li>\n<li>Fixed problem when a spreadsheet will be converted to html.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"id8\">\n<h2>1.0.7</h2>\n<blockquote>\n<ul>\n<li>Remove entry points, treat those as ordinary files.</li>\n<li>Search all script files using pkg_resources.</li>\n</ul>\n</blockquote>\n</div>\n\n          </div>"}, "last_serial": 762600, "releases": {"1.0.9": [{"comment_text": "", "digests": {"md5": "6d2d8f3a1eb1a2b81b5581369d9bb543", "sha256": "a156526e569052856f32d21392d29c183121b4ec7fcd096cca13d4440de7409d"}, "downloads": -1, "filename": "cloudooo-1.0.9.tar.gz", "has_sig": false, "md5_digest": "6d2d8f3a1eb1a2b81b5581369d9bb543", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 260841, "upload_time": "2010-12-06T13:19:59", "upload_time_iso_8601": "2010-12-06T13:19:59.065834Z", "url": "https://files.pythonhosted.org/packages/d2/be/c9fd726e34c4b7a6cc45aa110bd193fd7ab930e6df5d80cdfe110e37b77c/cloudooo-1.0.9.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "77638a002781497aef7c9bd1ade06061", "sha256": "1d23fb6346d1b557198af4823161017559d2c6d95ce363ebb40587b271b40aed"}, "downloads": -1, "filename": "cloudooo-1.1.0.tar.gz", "has_sig": false, "md5_digest": "77638a002781497aef7c9bd1ade06061", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 305765, "upload_time": "2011-01-13T13:41:00", "upload_time_iso_8601": "2011-01-13T13:41:00.581929Z", "url": "https://files.pythonhosted.org/packages/cd/e3/e1f0f840823332ce51f371ed7a960c7b5e82d22700e14ec4b5b5d34ab365/cloudooo-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "5b2712aadd5ea269dfdd3bb8dfd5983a", "sha256": "2222b98ba943fb4d5202bf1be6120e30c04de3237b23bc21414065973c893d70"}, "downloads": -1, "filename": "cloudooo-1.2.0.tar.gz", "has_sig": false, "md5_digest": "5b2712aadd5ea269dfdd3bb8dfd5983a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 305759, "upload_time": "2011-01-19T13:37:25", "upload_time_iso_8601": "2011-01-19T13:37:25.018901Z", "url": "https://files.pythonhosted.org/packages/d2/22/7aeb53028dde5491a9b444b5cb7a0d572c3f38d72950ffb6f06eb61bf7b4/cloudooo-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "3eb88fbd0ffcecbf23addd1d63037127", "sha256": "664518547fc007ca7c8c6ce74645a1e9bdc240bfbc1002c3f7f23013e0264f28"}, "downloads": -1, "filename": "cloudooo-1.2.1.tar.gz", "has_sig": false, "md5_digest": "3eb88fbd0ffcecbf23addd1d63037127", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 306274, "upload_time": "2011-01-21T17:24:39", "upload_time_iso_8601": "2011-01-21T17:24:39.645119Z", "url": "https://files.pythonhosted.org/packages/83/aa/99bcfd353760383c7d28e376609e1debadb0c6dc64c0f0a227f0e9458b82/cloudooo-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "986fa1411f967fbf16fbf863c4b5609d", "sha256": "e5901c20cf066a48a00d5d89d69d46afa72baabca158d3e23798e79d2135f77c"}, "downloads": -1, "filename": "cloudooo-1.2.2.tar.gz", "has_sig": false, "md5_digest": "986fa1411f967fbf16fbf863c4b5609d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 304441, "upload_time": "2011-02-07T13:40:39", "upload_time_iso_8601": "2011-02-07T13:40:39.464848Z", "url": "https://files.pythonhosted.org/packages/49/2a/0139d11051d143e81d2182e8607843c23339077cdf0637131cb7210ebb47/cloudooo-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "724a761ed69e9dfbdaeb073b537cf017", "sha256": "4a06be64a57ebde41d6a8a9695fc95bc8ad990d947f559fdeeec3a20315f55cb"}, "downloads": -1, "filename": "cloudooo-1.2.3.tar.gz", "has_sig": false, "md5_digest": "724a761ed69e9dfbdaeb073b537cf017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21782, "upload_time": "2011-04-01T15:35:57", "upload_time_iso_8601": "2011-04-01T15:35:57.045636Z", "url": "https://files.pythonhosted.org/packages/17/bd/1fcbd197ede86dabdfdd24733dce907d8084909e12ab2cc24ad79f7ed8b8/cloudooo-1.2.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "724a761ed69e9dfbdaeb073b537cf017", "sha256": "4a06be64a57ebde41d6a8a9695fc95bc8ad990d947f559fdeeec3a20315f55cb"}, "downloads": -1, "filename": "cloudooo-1.2.3.tar.gz", "has_sig": false, "md5_digest": "724a761ed69e9dfbdaeb073b537cf017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21782, "upload_time": "2011-04-01T15:35:57", "upload_time_iso_8601": "2011-04-01T15:35:57.045636Z", "url": "https://files.pythonhosted.org/packages/17/bd/1fcbd197ede86dabdfdd24733dce907d8084909e12ab2cc24ad79f7ed8b8/cloudooo-1.2.3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:47 2020"}