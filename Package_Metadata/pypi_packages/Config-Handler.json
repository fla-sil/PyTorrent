{"info": {"author": "Amphinicy Technologies ltd", "author_email": "info@amphinicy.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Build Tools"], "description": "# Config Handler\n\nHandle config files in your projects the easy way.\n\n[![PyPI version](https://badge.fury.io/py/config-handler.svg)](https://badge.fury.io/py/config-handler)\n[![Build Status](https://travis-ci.com/amphinicy/config-handler.svg?branch=master)](https://travis-ci.com/amphinicy/config-handler)\n\n![GitHub issues](https://img.shields.io/github/issues/amphinicy/config-handler.svg)\n![GitHub closed issues](https://img.shields.io/github/issues-closed/amphinicy/config-handler.svg)\n![GitHub closed pull requests](https://img.shields.io/github/issues-pr-closed/amphinicy/config-handler.svg)\n\n![PyPI - Python Version](https://img.shields.io/pypi/pyversions/Marine-Traffic-API.svg)\n![GitHub](https://img.shields.io/github/license/amphinicy/config-handler.svg?color=blue)\n![GitHub last commit](https://img.shields.io/github/last-commit/amphinicy/config-handler.svg?color=blue)\n\n## Installation\n\n```bash\n> pip install config-handler\n```\n\n## Rules\n\n#### Rule #1  \nUse INI files for config.  \nRegarding that please follow INI file language: [https://en.wikipedia.org/wiki/INI_file](https://en.wikipedia.org/wiki/INI_file)\n\n#### Rule #2  \nUse only strings, integers and booleans.  \nIf you need to use anything else, the design isn't right.\n\n#### Rule #3  \nDon't put your config file (config.ini) in git repository.  \nInstead you have a config template file (config.ini.template).\n\n#### Rule #4  \nConfig file should contain ONLY the stuff that could be changed by user.  \nIf you have the data that will never change, use constants.\n\n## Config template file\n\nThis is how config.ini.template file should look like:  \n\n![Config template file](docs/images/config_template_file_1.png)\n\nconfig.ini.template file supports template variables (`${project_root_path}`).\n\n## Usage\n\n#### Scenario #1  \n\nYou are running your app for the first time and config.ini doesn't exist yet.  \nSo you need to create it from config.ini.template file (use template variables if needed):\n\n```python\nimport os\nfrom config_handler import ConfigHandler\n\ntemplate_config_variables = {\n    'project_root_path': os.path.join('path', 'to', 'project', 'root')\n}\nConfigHandler('./config.ini').sync(template_config_variables)\n``` \n\nAfter this call, config.ini file was created in the same directory where config.ini.template is located and should look like this:\n\n![Config file](docs/images/config_file_1.png)\n\n#### Scenario #2  \n\nNow read your newly created config.ini: \n\n```python\nfrom config_handler import ConfigHandler\n\nconfig = ConfigHandler('./config.ini').read()\n\nprint(config.sections())\n# >>> ['app1', 'app2']\n\nprint(dict(config['DEFAULT']))\n# >>> {'send_email': 'true', 'authenticate_user': 'true'}\n\nprint(dict(config['app1']))\n# >>> {'send_email': 'false', 'line_height': '12', 'input_path': 'path/to/project/root/input/app1', 'authenticate_user': 'true'}\n\nprint(config['DEFAULT']['send_email'])\n# >>> 'true'\n\nprint(config['app1']['front_page_title'])\n# >>> 'Hello World!'\n\nprint(config.getboolean('DEFAULT', 'send_email'))\n# >>> True\n\nprint(config.getboolean('app2', 'send_email'))\n# >>> False\n``` \n\n`.read()` returns `ConfigParser` objects from python's native [Configuration file parser lib](https://docs.python.org/3/library/configparser.html)  \n\n#### Scenario #3  \n\nUser made some changes in config.ini file:  \n\n![Config file](docs/images/config_file_2.png)\n\nAnd some changes are made in config.ini.template file by the developers:\n\n![Config template file](docs/images/config_template_file_2.png)  \n\nThen you need to run sync again:  \n\n```python\nimport os\nfrom config_handler import ConfigHandler\n\ntemplate_config_variables = {\n    'project_root_path': os.path.join('path', 'to', 'project', 'root')\n}\nConfigHandler('./config.ini').sync(template_config_variables)\n```  \n\nAfter the sync, config.ini file should look like this:  \n\n![Config file](docs/images/config_file_3.png)  \n\nSo, what user changes or adds stays in config.ini.  \nEverything new that was added in config.ini.template was added in config.ini as well.\n\n#### Scenario #4  \n\nYou can sync and read at the same time: \n\n```python\nfrom config_handler import ConfigHandler\n\nconfig = ConfigHandler('./config.ini').sync({...}).read()\n\n...\n``` \n\n## Exception handling\n\n```python\nfrom config_handler import (ConfigHandler, \n                            ConfigHandlerException,\n                            ConfigHandlerFileReadException)\n\ntry:\n    config = ConfigHandler('./config.ini').sync({...}).read()\n\nexcept ConfigHandlerFileReadException:\n    \"\"\"Read exceptions\"\"\"\n\nexcept ConfigHandlerException:\n    \"\"\"All Config Handler exceptions\"\"\"\n``` \n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/amphinicy/config-handler.git", "keywords": "config,config-handler,python,json", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Config-Handler", "package_url": "https://pypi.org/project/Config-Handler/", "platform": "", "project_url": "https://pypi.org/project/Config-Handler/", "project_urls": {"Homepage": "https://github.com/amphinicy/config-handler.git", "Source": "https://github.com/amphinicy/config-handler.git"}, "release_url": "https://pypi.org/project/Config-Handler/0.1.0/", "requires_dist": ["click (~=7.0)"], "requires_python": "", "summary": "Handle config files in your projects the easy way", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Config Handler</h1>\n<p>Handle config files in your projects the easy way.</p>\n<p><a href=\"https://badge.fury.io/py/config-handler\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9a3c905b228131cb6873247a7e0819ffb7ed49a/68747470733a2f2f62616467652e667572792e696f2f70792f636f6e6669672d68616e646c65722e737667\"></a>\n<a href=\"https://travis-ci.com/amphinicy/config-handler\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/613a4d0c4d4eabf501f9fcef53068152f7255269/68747470733a2f2f7472617669732d63692e636f6d2f616d7068696e6963792f636f6e6669672d68616e646c65722e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><img alt=\"GitHub issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0aa45a9e71005ba28fb36f671c4263bff0b9a403/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f616d7068696e6963792f636f6e6669672d68616e646c65722e737667\">\n<img alt=\"GitHub closed issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b92bc2700653750b7d81b11126d0a03fe04c09f1/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d636c6f7365642f616d7068696e6963792f636f6e6669672d68616e646c65722e737667\">\n<img alt=\"GitHub closed pull requests\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/223b991ebec83349ecd822f686f6a9795392cc09/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732d70722d636c6f7365642f616d7068696e6963792f636f6e6669672d68616e646c65722e737667\"></p>\n<p><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cbb03edc2dfae451d50364aafafaa15af7e78fa5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f4d6172696e652d547261666669632d4150492e737667\">\n<img alt=\"GitHub\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/03f4d62d98db6fe59663c828046d8ac3663bc8fb/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f616d7068696e6963792f636f6e6669672d68616e646c65722e7376673f636f6c6f723d626c7565\">\n<img alt=\"GitHub last commit\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60c56a1afd0aa339339477f6afad8ae310a32f0d/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6173742d636f6d6d69742f616d7068696e6963792f636f6e6669672d68616e646c65722e7376673f636f6c6f723d626c7565\"></p>\n<h2>Installation</h2>\n<pre>&gt; pip install config-handler\n</pre>\n<h2>Rules</h2>\n<h4>Rule #1</h4>\n<p>Use INI files for config.<br>\nRegarding that please follow INI file language: <a href=\"https://en.wikipedia.org/wiki/INI_file\" rel=\"nofollow\">https://en.wikipedia.org/wiki/INI_file</a></p>\n<h4>Rule #2</h4>\n<p>Use only strings, integers and booleans.<br>\nIf you need to use anything else, the design isn't right.</p>\n<h4>Rule #3</h4>\n<p>Don't put your config file (config.ini) in git repository.<br>\nInstead you have a config template file (config.ini.template).</p>\n<h4>Rule #4</h4>\n<p>Config file should contain ONLY the stuff that could be changed by user.<br>\nIf you have the data that will never change, use constants.</p>\n<h2>Config template file</h2>\n<p>This is how config.ini.template file should look like:</p>\n<p><img alt=\"Config template file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/074c902f574fb7da99433893c28469918823626d/646f63732f696d616765732f636f6e6669675f74656d706c6174655f66696c655f312e706e67\"></p>\n<p>config.ini.template file supports template variables (<code>${project_root_path}</code>).</p>\n<h2>Usage</h2>\n<h4>Scenario #1</h4>\n<p>You are running your app for the first time and config.ini doesn't exist yet.<br>\nSo you need to create it from config.ini.template file (use template variables if needed):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">config_handler</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigHandler</span>\n\n<span class=\"n\">template_config_variables</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'project_root_path'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'path'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">,</span> <span class=\"s1\">'project'</span><span class=\"p\">,</span> <span class=\"s1\">'root'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">ConfigHandler</span><span class=\"p\">(</span><span class=\"s1\">'./config.ini'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sync</span><span class=\"p\">(</span><span class=\"n\">template_config_variables</span><span class=\"p\">)</span>\n</pre>\n<p>After this call, config.ini file was created in the same directory where config.ini.template is located and should look like this:</p>\n<p><img alt=\"Config file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16c4c019fbd8ca1b4125affc164f0ed615d88032/646f63732f696d616765732f636f6e6669675f66696c655f312e706e67\"></p>\n<h4>Scenario #2</h4>\n<p>Now read your newly created config.ini:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">config_handler</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigHandler</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigHandler</span><span class=\"p\">(</span><span class=\"s1\">'./config.ini'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">sections</span><span class=\"p\">())</span>\n<span class=\"c1\"># &gt;&gt;&gt; ['app1', 'app2']</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'DEFAULT'</span><span class=\"p\">]))</span>\n<span class=\"c1\"># &gt;&gt;&gt; {'send_email': 'true', 'authenticate_user': 'true'}</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'app1'</span><span class=\"p\">]))</span>\n<span class=\"c1\"># &gt;&gt;&gt; {'send_email': 'false', 'line_height': '12', 'input_path': 'path/to/project/root/input/app1', 'authenticate_user': 'true'}</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'DEFAULT'</span><span class=\"p\">][</span><span class=\"s1\">'send_email'</span><span class=\"p\">])</span>\n<span class=\"c1\"># &gt;&gt;&gt; 'true'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s1\">'app1'</span><span class=\"p\">][</span><span class=\"s1\">'front_page_title'</span><span class=\"p\">])</span>\n<span class=\"c1\"># &gt;&gt;&gt; 'Hello World!'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">getboolean</span><span class=\"p\">(</span><span class=\"s1\">'DEFAULT'</span><span class=\"p\">,</span> <span class=\"s1\">'send_email'</span><span class=\"p\">))</span>\n<span class=\"c1\"># &gt;&gt;&gt; True</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">getboolean</span><span class=\"p\">(</span><span class=\"s1\">'app2'</span><span class=\"p\">,</span> <span class=\"s1\">'send_email'</span><span class=\"p\">))</span>\n<span class=\"c1\"># &gt;&gt;&gt; False</span>\n</pre>\n<p><code>.read()</code> returns <code>ConfigParser</code> objects from python's native <a href=\"https://docs.python.org/3/library/configparser.html\" rel=\"nofollow\">Configuration file parser lib</a></p>\n<h4>Scenario #3</h4>\n<p>User made some changes in config.ini file:</p>\n<p><img alt=\"Config file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/534b7757cb2cbed01cd80cb4320d2140f2201675/646f63732f696d616765732f636f6e6669675f66696c655f322e706e67\"></p>\n<p>And some changes are made in config.ini.template file by the developers:</p>\n<p><img alt=\"Config template file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b7e9c6673cd7b30d32cd26d92c88f4464ae50fbb/646f63732f696d616765732f636f6e6669675f74656d706c6174655f66696c655f322e706e67\"></p>\n<p>Then you need to run sync again:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">from</span> <span class=\"nn\">config_handler</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigHandler</span>\n\n<span class=\"n\">template_config_variables</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'project_root_path'</span><span class=\"p\">:</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'path'</span><span class=\"p\">,</span> <span class=\"s1\">'to'</span><span class=\"p\">,</span> <span class=\"s1\">'project'</span><span class=\"p\">,</span> <span class=\"s1\">'root'</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n<span class=\"n\">ConfigHandler</span><span class=\"p\">(</span><span class=\"s1\">'./config.ini'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sync</span><span class=\"p\">(</span><span class=\"n\">template_config_variables</span><span class=\"p\">)</span>\n</pre>\n<p>After the sync, config.ini file should look like this:</p>\n<p><img alt=\"Config file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e02fdae515886916fbe8e3a10ac901229fb105f/646f63732f696d616765732f636f6e6669675f66696c655f332e706e67\"></p>\n<p>So, what user changes or adds stays in config.ini.<br>\nEverything new that was added in config.ini.template was added in config.ini as well.</p>\n<h4>Scenario #4</h4>\n<p>You can sync and read at the same time:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">config_handler</span> <span class=\"kn\">import</span> <span class=\"n\">ConfigHandler</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigHandler</span><span class=\"p\">(</span><span class=\"s1\">'./config.ini'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sync</span><span class=\"p\">({</span><span class=\"o\">...</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"o\">...</span>\n</pre>\n<h2>Exception handling</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">config_handler</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">ConfigHandler</span><span class=\"p\">,</span> \n                            <span class=\"n\">ConfigHandlerException</span><span class=\"p\">,</span>\n                            <span class=\"n\">ConfigHandlerFileReadException</span><span class=\"p\">)</span>\n\n<span class=\"k\">try</span><span class=\"p\">:</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"n\">ConfigHandler</span><span class=\"p\">(</span><span class=\"s1\">'./config.ini'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">sync</span><span class=\"p\">({</span><span class=\"o\">...</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"k\">except</span> <span class=\"n\">ConfigHandlerFileReadException</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Read exceptions\"\"\"</span>\n\n<span class=\"k\">except</span> <span class=\"n\">ConfigHandlerException</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"All Config Handler exceptions\"\"\"</span>\n</pre>\n\n          </div>"}, "last_serial": 5128420, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7a2d6b5ae788ba798adead8cdb076c0c", "sha256": "6dd3ad8c27180a3267fd597bd7324b9b85bd9e2b76e390483ed348b346a403ec"}, "downloads": -1, "filename": "Config_Handler-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7a2d6b5ae788ba798adead8cdb076c0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6908, "upload_time": "2019-04-11T11:07:20", "upload_time_iso_8601": "2019-04-11T11:07:20.664141Z", "url": "https://files.pythonhosted.org/packages/7a/49/58812841be303a8006cdacd8306ef3bbf0af9c56bcd7e2a648baec339ac0/Config_Handler-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbe28bfd92263be2ddbd2302e5416afa", "sha256": "e3e355b6e3f1ee9a5fe0eb9e7f7e1aa8e5dc96511c24c828054c95d8a507d8b6"}, "downloads": -1, "filename": "Config Handler-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fbe28bfd92263be2ddbd2302e5416afa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4765, "upload_time": "2019-04-11T11:07:21", "upload_time_iso_8601": "2019-04-11T11:07:21.853016Z", "url": "https://files.pythonhosted.org/packages/a0/74/8d077b81e2afc57cc51097fcdbe3550353e6d94814fc15910641997df78e/Config%20Handler-0.1.0.tar.gz", "yanked": false}], "0.1.0.dev0": [{"comment_text": "", "digests": {"md5": "ba4021890b5a9b32ddc06599c9bfe869", "sha256": "366c2803c5d0ae93a4f520c201d850d1820e2d7bc3d46bf0d7f5000948399720"}, "downloads": -1, "filename": "Config_Handler-0.1.0.dev0-py3-none-any.whl", "has_sig": false, "md5_digest": "ba4021890b5a9b32ddc06599c9bfe869", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6791, "upload_time": "2019-04-10T14:55:31", "upload_time_iso_8601": "2019-04-10T14:55:31.961141Z", "url": "https://files.pythonhosted.org/packages/81/f7/a029113a5aa3bc557a897dcf1a1f2a427843f4ebd9406946e4933f3102a4/Config_Handler-0.1.0.dev0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fd4a45c70bd5891054571d8646809f9", "sha256": "f9c9832989d0bfe8ca5ed4a8c3841df4f6630eea86f43e7cdbe8cf438e3f2f1e"}, "downloads": -1, "filename": "Config Handler-0.1.0.dev0.tar.gz", "has_sig": false, "md5_digest": "5fd4a45c70bd5891054571d8646809f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4506, "upload_time": "2019-04-10T14:55:33", "upload_time_iso_8601": "2019-04-10T14:55:33.865170Z", "url": "https://files.pythonhosted.org/packages/e2/8f/7db0c66377cf92731427f474e49bdcf19874803b1b7914a942eb3c7e04e6/Config%20Handler-0.1.0.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a2d6b5ae788ba798adead8cdb076c0c", "sha256": "6dd3ad8c27180a3267fd597bd7324b9b85bd9e2b76e390483ed348b346a403ec"}, "downloads": -1, "filename": "Config_Handler-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7a2d6b5ae788ba798adead8cdb076c0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6908, "upload_time": "2019-04-11T11:07:20", "upload_time_iso_8601": "2019-04-11T11:07:20.664141Z", "url": "https://files.pythonhosted.org/packages/7a/49/58812841be303a8006cdacd8306ef3bbf0af9c56bcd7e2a648baec339ac0/Config_Handler-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fbe28bfd92263be2ddbd2302e5416afa", "sha256": "e3e355b6e3f1ee9a5fe0eb9e7f7e1aa8e5dc96511c24c828054c95d8a507d8b6"}, "downloads": -1, "filename": "Config Handler-0.1.0.tar.gz", "has_sig": false, "md5_digest": "fbe28bfd92263be2ddbd2302e5416afa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4765, "upload_time": "2019-04-11T11:07:21", "upload_time_iso_8601": "2019-04-11T11:07:21.853016Z", "url": "https://files.pythonhosted.org/packages/a0/74/8d077b81e2afc57cc51097fcdbe3550353e6d94814fc15910641997df78e/Config%20Handler-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:56 2020"}