{"info": {"author": "Floris Bruynooghe", "author_email": "flub@devork.be", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "============\nconda-workon\n============\n\nThis is a small tool which can be used to activate conda environments.\nIt is an alternative to using ``source activate <env>`` and instead\nuses a conda sub-command to spawn a new shell with the environment\nactivated.  Deactivating the environment is simply done by exiting\nthis sub-shell.  This is very similar to, and based on, the ``pew\nworkon`` command from pew_.  One major advantage of this is that it\ndoes not depend on the shell you use nor does it interact with the\nshell at all.  This means it is not restricted to bash and zsh.\n\n.. _pew: https://pypi.python.org/pypi/pew\n\nActivating an environment simply looks like this::\n\n   $ conda create -n py26 python=2.6\n   ...\n   $ conda info -e\n   # conda environments:\n   #\n   py26                     /home/flub/miniconda3/envs/py26\n   root                  *  /home/flub/miniconda3\n   $ conda workon py26\n   Launching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n   (py26) $ conda info -e\n   # conda environments:\n   #\n   py26                  *  /home/flub/miniconda3/envs/py26\n   root                     /home/flub/miniconda3\n   (py26) $ exit\n   $ conda info -e\n   # conda environments:\n   #\n   py26                     /home/flub/miniconda3/envs/py26\n   root                  *  /home/flub/miniconda3\n\nListing the available environments can be done using either ``conda\nworkon -l|--list`` or using the standard ``conda env list`` or ``conda\ninfo -e|--envs``.\n\nAnother feature is that it provides an easy throw-away temporary\nenvironment based on a package spec on the command line::\n\n   $ conda worktmp python=3.4 sphinx\n   Fetching package metadata: ..\n   Solving package specifications: .\n   Package plan for installation in environment /tmp/tmp7ua0_le9/env:\n   ...\n   Proceed ([y]/n)? y\n   ...\n   Launching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n   $ conda info | grep default\n     default environment : /tmp/tmp7ua0_le9/env\n   $ exit\n   $ conda info | grep default\n     default environment : /home/flub/miniconda3\n   $\n\nLikewise a temporary environment can be created from an\nenvironment.yml file::\n\n   $ conda worktmp -f path/to/environment.yml\n   ...\n   Launching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n\nIf ``-f|--file`` is used without an argument this will look for\n``environment.yml`` in the current directory.  When using ``worktmp``\none can also directly invoke ``pip -e <path>`` by using the\n``-e|--editable`` option.  This is convenient to start developing on a\npackage::\n\n   $ conda worktmp -f -e.\n   ...\n   Proceed ([y]/n)? y\n   ...\n     Running setup.py develop for foo\n   Successfully installed foo\n   Launching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n   $\n\n\nInstallation\n============\n\nThe ``conda-workon`` command needs to be installed in the root conda\nenvironment.\n\nUsing pip\n---------\n\nEnsure you have ``pip`` installed in the conda root environment using\n``conda install pip``.  Then making sure to use this version of pip\ninstall ``conda-workon`` using::\n\n  $ pip install conda-workon\n\nUsing conda\n-----------\n\nThe conda-forge project packages ``conda-workon`` so you can install\nit once you have added the conda-forge channels::\n\n   conda config --add channels conda-forge\n   conda install conda-workon\n\n\nConfiguring the Prompt\n======================\n\nThe ``conda-workon`` command does not interfere with the shell at all,\nit simply starts a new sub-shell with a modified path.  This means\nthat by default the prompt of the shell will not indicate which conda\nenvironment you are using.  However the currently activated conda\nenvironment is available in the ``CONDA_DEFAULT_ENV`` environment\nvariable, which allows you to easily configure your shell as you\nprefer.  A simple example using the fish shell is to include the\nfollowing fragment in the ``fish_prompt`` function::\n\n   # Show the conda environment, calculate __fish_prompt_conda only once\n   if set -q CONDA_DEFAULT_ENV\n       if not set -q __fish_prompt_conda\n           set -g __fish_prompt_conda (set_color --bold -b blue red)$CONDA_DEFAULT_ENV\"$__fish_prompt_normal \"\n       end\n       echo -n $__fish_prompt_conda\n   end\n\n\nChangelog\n=========\n\n0.4\n---\n\n* Split into two commands: ``conda-workon`` and ``conda-worktmp``.\n\n* Implement listing using ``conda-workon -l|--list``.\n\n* Add support for using environment.yml using ``conda-worktmp -f|--file``.\n\n* Add support for directly calling ``pip -e <path>`` using\n  ``conda-worktmp -e|--editable <path>``.\n\n\n0.3\n---\n\n* Add a ``--use-local`` option to use together with ``--tmp``.  This\n  will use ``conda create --use-local`` to create the environment.\n\n* Use the conda binary invoked rather then looking it up on the PATH.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/flub/conda-workon", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "conda-workon", "package_url": "https://pypi.org/project/conda-workon/", "platform": "", "project_url": "https://pypi.org/project/conda-workon/", "project_urls": {"Homepage": "https://bitbucket.org/flub/conda-workon"}, "release_url": "https://pypi.org/project/conda-workon/0.4.0/", "requires_dist": ["conda", "PyYAML; extra == 'yaml'"], "requires_python": "", "summary": "Activate conda environments in subshells", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a small tool which can be used to activate conda environments.\nIt is an alternative to using <tt>source activate &lt;env&gt;</tt> and instead\nuses a conda sub-command to spawn a new shell with the environment\nactivated.  Deactivating the environment is simply done by exiting\nthis sub-shell.  This is very similar to, and based on, the <tt>pew\nworkon</tt> command from <a href=\"https://pypi.python.org/pypi/pew\" rel=\"nofollow\">pew</a>.  One major advantage of this is that it\ndoes not depend on the shell you use nor does it interact with the\nshell at all.  This means it is not restricted to bash and zsh.</p>\n<p>Activating an environment simply looks like this:</p>\n<pre>$ conda create -n py26 python=2.6\n...\n$ conda info -e\n# conda environments:\n#\npy26                     /home/flub/miniconda3/envs/py26\nroot                  *  /home/flub/miniconda3\n$ conda workon py26\nLaunching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n(py26) $ conda info -e\n# conda environments:\n#\npy26                  *  /home/flub/miniconda3/envs/py26\nroot                     /home/flub/miniconda3\n(py26) $ exit\n$ conda info -e\n# conda environments:\n#\npy26                     /home/flub/miniconda3/envs/py26\nroot                  *  /home/flub/miniconda3\n</pre>\n<p>Listing the available environments can be done using either <tt>conda\nworkon <span class=\"pre\">-l|--list</span></tt> or using the standard <tt>conda env list</tt> or <tt>conda\ninfo <span class=\"pre\">-e|--envs</span></tt>.</p>\n<p>Another feature is that it provides an easy throw-away temporary\nenvironment based on a package spec on the command line:</p>\n<pre>$ conda worktmp python=3.4 sphinx\nFetching package metadata: ..\nSolving package specifications: .\nPackage plan for installation in environment /tmp/tmp7ua0_le9/env:\n...\nProceed ([y]/n)? y\n...\nLaunching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n$ conda info | grep default\n  default environment : /tmp/tmp7ua0_le9/env\n$ exit\n$ conda info | grep default\n  default environment : /home/flub/miniconda3\n$\n</pre>\n<p>Likewise a temporary environment can be created from an\nenvironment.yml file:</p>\n<pre>$ conda worktmp -f path/to/environment.yml\n...\nLaunching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n</pre>\n<p>If <tt><span class=\"pre\">-f|--file</span></tt> is used without an argument this will look for\n<tt>environment.yml</tt> in the current directory.  When using <tt>worktmp</tt>\none can also directly invoke <tt>pip <span class=\"pre\">-e</span> &lt;path&gt;</tt> by using the\n<tt><span class=\"pre\">-e|--editable</span></tt> option.  This is convenient to start developing on a\npackage:</p>\n<pre>$ conda worktmp -f -e.\n...\nProceed ([y]/n)? y\n...\n  Running setup.py develop for foo\nSuccessfully installed foo\nLaunching subshell in conda environment.  Type \"exit\" or \"Ctr-D\" to return.\n$\n</pre>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The <tt><span class=\"pre\">conda-workon</span></tt> command needs to be installed in the root conda\nenvironment.</p>\n<div id=\"using-pip\">\n<h3>Using pip</h3>\n<p>Ensure you have <tt>pip</tt> installed in the conda root environment using\n<tt>conda install pip</tt>.  Then making sure to use this version of pip\ninstall <tt><span class=\"pre\">conda-workon</span></tt> using:</p>\n<pre>$ pip install conda-workon\n</pre>\n</div>\n<div id=\"using-conda\">\n<h3>Using conda</h3>\n<p>The conda-forge project packages <tt><span class=\"pre\">conda-workon</span></tt> so you can install\nit once you have added the conda-forge channels:</p>\n<pre>conda config --add channels conda-forge\nconda install conda-workon\n</pre>\n</div>\n</div>\n<div id=\"configuring-the-prompt\">\n<h2>Configuring the Prompt</h2>\n<p>The <tt><span class=\"pre\">conda-workon</span></tt> command does not interfere with the shell at all,\nit simply starts a new sub-shell with a modified path.  This means\nthat by default the prompt of the shell will not indicate which conda\nenvironment you are using.  However the currently activated conda\nenvironment is available in the <tt>CONDA_DEFAULT_ENV</tt> environment\nvariable, which allows you to easily configure your shell as you\nprefer.  A simple example using the fish shell is to include the\nfollowing fragment in the <tt>fish_prompt</tt> function:</p>\n<pre># Show the conda environment, calculate __fish_prompt_conda only once\nif set -q CONDA_DEFAULT_ENV\n    if not set -q __fish_prompt_conda\n        set -g __fish_prompt_conda (set_color --bold -b blue red)$CONDA_DEFAULT_ENV\"$__fish_prompt_normal \"\n    end\n    echo -n $__fish_prompt_conda\nend\n</pre>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4</h3>\n<ul>\n<li>Split into two commands: <tt><span class=\"pre\">conda-workon</span></tt> and <tt><span class=\"pre\">conda-worktmp</span></tt>.</li>\n<li>Implement listing using <tt><span class=\"pre\">conda-workon</span> <span class=\"pre\">-l|--list</span></tt>.</li>\n<li>Add support for using environment.yml using <tt><span class=\"pre\">conda-worktmp</span> <span class=\"pre\">-f|--file</span></tt>.</li>\n<li>Add support for directly calling <tt>pip <span class=\"pre\">-e</span> &lt;path&gt;</tt> using\n<tt><span class=\"pre\">conda-worktmp</span> <span class=\"pre\">-e|--editable</span> &lt;path&gt;</tt>.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.3</h3>\n<ul>\n<li>Add a <tt><span class=\"pre\">--use-local</span></tt> option to use together with <tt><span class=\"pre\">--tmp</span></tt>.  This\nwill use <tt>conda create <span class=\"pre\">--use-local</span></tt> to create the environment.</li>\n<li>Use the conda binary invoked rather then looking it up on the PATH.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2488047, "releases": {"0.1.0": [], "0.2.0": [{"comment_text": "", "digests": {"md5": "5134be718e954d2b4b660734203d7629", "sha256": "09b3336c29052925fd2839321eafe069b8015ff8790f3092d8891d8ea12fb354"}, "downloads": -1, "filename": "conda_workon-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5134be718e954d2b4b660734203d7629", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6025, "upload_time": "2014-11-10T22:06:56", "upload_time_iso_8601": "2014-11-10T22:06:56.136330Z", "url": "https://files.pythonhosted.org/packages/1a/cf/9c98331df6260fd949c3f79cfc1a115e6f18be87b207826b3a8c9cc4b997/conda_workon-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "837e3ac7345772eaebef29cc1c5b2356", "sha256": "163144903ef417578cb4512ea8460d06e83c398194522a72f789a27cc4ceab68"}, "downloads": -1, "filename": "conda-workon-0.2.0.tar.gz", "has_sig": false, "md5_digest": "837e3ac7345772eaebef29cc1c5b2356", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3691, "upload_time": "2014-11-10T22:06:53", "upload_time_iso_8601": "2014-11-10T22:06:53.639144Z", "url": "https://files.pythonhosted.org/packages/fa/a6/44ef83f5cbc59448bd1e63253410f1cb5d014a7cf32b550639f01ad79e53/conda-workon-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "722490f35979474296f01b4e0c1f105f", "sha256": "af1ee8f744c5379afa0c2b8c4156a2c0bb282fe6461cc2b087c2b789c8bb90d3"}, "downloads": -1, "filename": "conda-workon-0.3.0.tar.gz", "has_sig": false, "md5_digest": "722490f35979474296f01b4e0c1f105f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3840, "upload_time": "2015-01-05T15:32:10", "upload_time_iso_8601": "2015-01-05T15:32:10.953411Z", "url": "https://files.pythonhosted.org/packages/4f/64/85e2931e9e3b3021df10bd8db330dd3c6833ff0fe5390d3c46b10ba8ecf4/conda-workon-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "8b68de8446bcc3ab3add3f1d05a01029", "sha256": "06eb6067a12c81862ba6a9a7f9f3c045508e1c0fa9916a910651a0e573c7ce81"}, "downloads": -1, "filename": "conda_workon-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b68de8446bcc3ab3add3f1d05a01029", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7816, "upload_time": "2016-11-28T18:36:58", "upload_time_iso_8601": "2016-11-28T18:36:58.844088Z", "url": "https://files.pythonhosted.org/packages/d4/7a/b7e18f06d323167fa59af98d2d28eb20b91b4ec8ad5528d953d676d1a887/conda_workon-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fae9b024c6bb936ddd15da60557303d", "sha256": "0f94909c703f2fa39c1f4830808205ba8f1303960bfb85687bd5fb7cc0580e1f"}, "downloads": -1, "filename": "conda-workon-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4fae9b024c6bb936ddd15da60557303d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5004, "upload_time": "2016-11-28T18:37:00", "upload_time_iso_8601": "2016-11-28T18:37:00.896115Z", "url": "https://files.pythonhosted.org/packages/e0/a3/65b2ecf122adf336a5fdb5d23e03ed14c9672445680560b5fedba11cef97/conda-workon-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b68de8446bcc3ab3add3f1d05a01029", "sha256": "06eb6067a12c81862ba6a9a7f9f3c045508e1c0fa9916a910651a0e573c7ce81"}, "downloads": -1, "filename": "conda_workon-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b68de8446bcc3ab3add3f1d05a01029", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7816, "upload_time": "2016-11-28T18:36:58", "upload_time_iso_8601": "2016-11-28T18:36:58.844088Z", "url": "https://files.pythonhosted.org/packages/d4/7a/b7e18f06d323167fa59af98d2d28eb20b91b4ec8ad5528d953d676d1a887/conda_workon-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fae9b024c6bb936ddd15da60557303d", "sha256": "0f94909c703f2fa39c1f4830808205ba8f1303960bfb85687bd5fb7cc0580e1f"}, "downloads": -1, "filename": "conda-workon-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4fae9b024c6bb936ddd15da60557303d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5004, "upload_time": "2016-11-28T18:37:00", "upload_time_iso_8601": "2016-11-28T18:37:00.896115Z", "url": "https://files.pythonhosted.org/packages/e0/a3/65b2ecf122adf336a5fdb5d23e03ed14c9672445680560b5fedba11cef97/conda-workon-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:02 2020"}