{"info": {"author": "Julian Berman", "author_email": "Julian@GrayVines.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "==========\njsonschema\n==========\n\n|PyPI| |Pythons| |Travis| |AppVeyor| |Codecov| |ReadTheDocs|\n\n.. |PyPI| image:: https://img.shields.io/pypi/v/jsonschema.svg\n   :alt: PyPI version\n   :target: https://pypi.org/project/jsonschema/\n\n.. |Pythons| image:: https://img.shields.io/pypi/pyversions/jsonschema.svg\n   :alt: Supported Python versions\n   :target: https://pypi.org/project/jsonschema/\n\n.. |Travis| image:: https://travis-ci.com/Julian/jsonschema.svg?branch=master\n   :alt: Travis build status\n   :target: https://travis-ci.com/Julian/jsonschema\n\n.. |AppVeyor| image:: https://ci.appveyor.com/api/projects/status/adtt0aiaihy6muyn/branch/master?svg=true\n   :alt: AppVeyor build status\n   :target: https://ci.appveyor.com/project/Julian/jsonschema\n\n.. |Codecov| image:: https://codecov.io/gh/Julian/jsonschema/branch/master/graph/badge.svg\n   :alt: Codecov Code coverage\n   :target: https://codecov.io/gh/Julian/jsonschema\n\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/python-jsonschema/badge/?version=stable&style=flat\n   :alt: ReadTheDocs status\n   :target: https://python-jsonschema.readthedocs.io/en/stable/\n\n\n``jsonschema`` is an implementation of `JSON Schema <https://json-schema.org>`_\nfor Python (supporting 2.7+ including Python 3).\n\n.. code-block:: python\n\n    >>> from jsonschema import validate\n\n    >>> # A sample schema, like what we'd get from json.load()\n    >>> schema = {\n    ...     \"type\" : \"object\",\n    ...     \"properties\" : {\n    ...         \"price\" : {\"type\" : \"number\"},\n    ...         \"name\" : {\"type\" : \"string\"},\n    ...     },\n    ... }\n\n    >>> # If no exception is raised by validate(), the instance is valid.\n    >>> validate(instance={\"name\" : \"Eggs\", \"price\" : 34.99}, schema=schema)\n\n    >>> validate(\n    ...     instance={\"name\" : \"Eggs\", \"price\" : \"Invalid\"}, schema=schema,\n    ... )                                   # doctest: +IGNORE_EXCEPTION_DETAIL\n    Traceback (most recent call last):\n        ...\n    ValidationError: 'Invalid' is not of type 'number'\n\nIt can also be used from console:\n\n.. code-block:: bash\n\n    $ jsonschema -i sample.json sample.schema\n\nFeatures\n--------\n\n* Full support for\n  `Draft 7 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft7Validator>`_,\n  `Draft 6 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft6Validator>`_,\n  `Draft 4 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft4Validator>`_\n  and\n  `Draft 3 <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft3Validator>`_\n\n* `Lazy validation <https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.IValidator.iter_errors>`_\n  that can iteratively report *all* validation errors.\n\n* `Programmatic querying <https://python-jsonschema.readthedocs.io/en/latest/errors/>`_\n  of which properties or items failed validation.\n\n\nInstallation\n------------\n\n``jsonschema`` is available on `PyPI <https://pypi.org/project/jsonschema/>`_. You can install using `pip <https://pip.pypa.io/en/stable/>`_:\n\n.. code-block:: bash\n\n    $ pip install jsonschema\n\n\nDemo\n----\n\nTry ``jsonschema`` interactively in this online demo:\n\n.. image:: https://user-images.githubusercontent.com/1155573/56745335-8b158a00-6750-11e9-8776-83fa675939c4.png\n    :target: https://notebooks.ai/demo/gh/Julian/jsonschema\n    :alt: Open Live Demo\n\n\nOnline demo Notebook will look similar to this:\n\n\n.. image:: https://user-images.githubusercontent.com/1155573/56820861-5c1c1880-6823-11e9-802a-ce01c5ec574f.gif\n    :alt: Open Live Demo\n    :width: 480 px\n\n\nRelease Notes\n-------------\n\nv3.1 brings support for ECMA 262 dialect regular expressions\nthroughout schemas, as recommended by the specification. Big\nthanks to @Zac-HD for authoring support in a new `js-regex\n<https://pypi.org/project/js-regex/>`_ library.\n\n\nRunning the Test Suite\n----------------------\n\nIf you have ``tox`` installed (perhaps via ``pip install tox`` or your\npackage manager), running ``tox`` in the directory of your source\ncheckout will run ``jsonschema``'s test suite on all of the versions\nof Python ``jsonschema`` supports. If you don't have all of the\nversions that ``jsonschema`` is tested under, you'll likely want to run\nusing ``tox``'s ``--skip-missing-interpreters`` option.\n\nOf course you're also free to just run the tests on a single version with your\nfavorite test runner. The tests live in the ``jsonschema.tests`` package.\n\n\nBenchmarks\n----------\n\n``jsonschema``'s benchmarks make use of `pyperf\n<https://pyperf.readthedocs.io>`_.\n\nRunning them can be done via ``tox -e perf``, or by invoking the ``pyperf``\ncommands externally (after ensuring that both it and ``jsonschema`` itself are\ninstalled)::\n\n    $ python -m pyperf jsonschema/benchmarks/test_suite.py --hist --output results.json\n\nTo compare to a previous run, use::\n\n    $ python -m pyperf compare_to --table reference.json results.json\n\nSee the ``pyperf`` documentation for more details.\n\n\nCommunity\n---------\n\nThere's a `mailing list <https://groups.google.com/forum/#!forum/jsonschema>`_\nfor this implementation on Google Groups.\n\nPlease join, and feel free to send questions there.\n\n\nContributing\n------------\n\nI'm Julian Berman.\n\n``jsonschema`` is on `GitHub <https://github.com/Julian/jsonschema>`_.\n\nGet in touch, via GitHub or otherwise, if you've got something to contribute,\nit'd be most welcome!\n\nYou can also generally find me on Freenode (nick: ``tos9``) in various\nchannels, including ``#python``.\n\nIf you feel overwhelmingly grateful, you can also woo me with beer money\nvia Google Pay with the email in my GitHub profile.\n\nAnd for companies who appreciate ``jsonschema`` and its continued support\nand growth, ``jsonschema`` is also now supportable via `TideLift\n<https://tidelift.com/subscription/pkg/pypi-jsonschema?utm_source=pypi-j\nsonschema&utm_medium=referral&utm_campaign=readme>`_.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/codelane/jsonschema", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "jsonschema-codelane", "package_url": "https://pypi.org/project/jsonschema-codelane/", "platform": "", "project_url": "https://pypi.org/project/jsonschema-codelane/", "project_urls": {"Docs": "https://python-jsonschema.readthedocs.io/en/latest/", "Homepage": "https://github.com/codelane/jsonschema"}, "release_url": "https://pypi.org/project/jsonschema-codelane/3.1.2b2/", "requires_dist": ["attrs (>=17.4.0)", "importlib-metadata", "pyrsistent (>=0.14.0)", "setuptools", "six (>=1.11.0)", "jsonpointer (>=2.0)", "functools32 ; python_version < \"3\"", "idna ; extra == 'format'", "rfc3987 ; extra == 'format'", "strict-rfc3339 ; extra == 'format'", "webcolors ; extra == 'format'"], "requires_python": "", "summary": "An implementation of JSON Schema validation for Python", "version": "3.1.2b2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/jsonschema/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a28b3023297c6c5cac127426135e97d32cf9cf4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6a736f6e736368656d612e737667\"></a> <a href=\"https://pypi.org/project/jsonschema/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71d74ed1b66ad0b480b892d179a639d8f50ef112/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6a736f6e736368656d612e737667\"></a> <a href=\"https://travis-ci.com/Julian/jsonschema\" rel=\"nofollow\"><img alt=\"Travis build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71d8dced770280ba5a92c9076d05339db3898180/68747470733a2f2f7472617669732d63692e636f6d2f4a756c69616e2f6a736f6e736368656d612e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://ci.appveyor.com/project/Julian/jsonschema\" rel=\"nofollow\"><img alt=\"AppVeyor build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/360feafaea0a52a08a0e2ae7eabc49e048e9013e/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6164747430616961696879366d75796e2f6272616e63682f6d61737465723f7376673d74727565\"></a> <a href=\"https://codecov.io/gh/Julian/jsonschema\" rel=\"nofollow\"><img alt=\"Codecov Code coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a807610fa90edb20a8a1efbbf477b4f75f218ac1/68747470733a2f2f636f6465636f762e696f2f67682f4a756c69616e2f6a736f6e736368656d612f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://python-jsonschema.readthedocs.io/en/stable/\" rel=\"nofollow\"><img alt=\"ReadTheDocs status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93ee6f3ef941fa8c2d1dfdbe6921b04003e4b64f/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974686f6e2d6a736f6e736368656d612f62616467652f3f76657273696f6e3d737461626c65267374796c653d666c6174\"></a></p>\n<p><tt>jsonschema</tt> is an implementation of <a href=\"https://json-schema.org\" rel=\"nofollow\">JSON Schema</a>\nfor Python (supporting 2.7+ including Python 3).</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">jsonschema</span> <span class=\"kn\">import</span> <span class=\"n\">validate</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># A sample schema, like what we'd get from json.load()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>     <span class=\"s2\">\"type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"object\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"s2\">\"properties\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"price\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>         <span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"type\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>     <span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">}</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"c1\"># If no exception is raised by validate(), the instance is valid.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate</span><span class=\"p\">(</span><span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Eggs\"</span><span class=\"p\">,</span> <span class=\"s2\">\"price\"</span> <span class=\"p\">:</span> <span class=\"mf\">34.99</span><span class=\"p\">},</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">schema</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">validate</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">instance</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Eggs\"</span><span class=\"p\">,</span> <span class=\"s2\">\"price\"</span> <span class=\"p\">:</span> <span class=\"s2\">\"Invalid\"</span><span class=\"p\">},</span> <span class=\"n\">schema</span><span class=\"o\">=</span><span class=\"n\">schema</span><span class=\"p\">,</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>                                   <span class=\"c1\"># doctest: +IGNORE_EXCEPTION_DETAIL</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n    <span class=\"o\">...</span>\n<span class=\"n\">ValidationError</span><span class=\"p\">:</span> <span class=\"s1\">'Invalid'</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">of</span> <span class=\"nb\">type</span> <span class=\"s1\">'number'</span>\n</pre>\n<p>It can also be used from console:</p>\n<pre>$ jsonschema -i sample.json sample.schema\n</pre>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Full support for\n<a href=\"https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft7Validator\" rel=\"nofollow\">Draft 7</a>,\n<a href=\"https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft6Validator\" rel=\"nofollow\">Draft 6</a>,\n<a href=\"https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft4Validator\" rel=\"nofollow\">Draft 4</a>\nand\n<a href=\"https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.Draft3Validator\" rel=\"nofollow\">Draft 3</a></li>\n<li><a href=\"https://python-jsonschema.readthedocs.io/en/latest/validate/#jsonschema.IValidator.iter_errors\" rel=\"nofollow\">Lazy validation</a>\nthat can iteratively report <em>all</em> validation errors.</li>\n<li><a href=\"https://python-jsonschema.readthedocs.io/en/latest/errors/\" rel=\"nofollow\">Programmatic querying</a>\nof which properties or items failed validation.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>jsonschema</tt> is available on <a href=\"https://pypi.org/project/jsonschema/\" rel=\"nofollow\">PyPI</a>. You can install using <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install jsonschema\n</pre>\n</div>\n<div id=\"demo\">\n<h2>Demo</h2>\n<p>Try <tt>jsonschema</tt> interactively in this online demo:</p>\n<a href=\"https://notebooks.ai/demo/gh/Julian/jsonschema\" rel=\"nofollow\"><img alt=\"Open Live Demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/544a18384382ea7bbdeb9b198fad82a99d687bae/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313135353537332f35363734353333352d38623135386130302d363735302d313165392d383737362d3833666136373539333963342e706e67\"></a>\n<p>Online demo Notebook will look similar to this:</p>\n<img alt=\"Open Live Demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/104b4b72e2bd9b15a7c8e502669ab1dc0ac906f6/68747470733a2f2f757365722d696d616765732e67697468756275736572636f6e74656e742e636f6d2f313135353537332f35363832303836312d35633163313838302d363832332d313165392d383032612d6365303163356563353734662e676966\" width=\"480px\">\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<p>v3.1 brings support for ECMA 262 dialect regular expressions\nthroughout schemas, as recommended by the specification. Big\nthanks to @Zac-HD for authoring support in a new <a href=\"https://pypi.org/project/js-regex/\" rel=\"nofollow\">js-regex</a> library.</p>\n</div>\n<div id=\"running-the-test-suite\">\n<h2>Running the Test Suite</h2>\n<p>If you have <tt>tox</tt> installed (perhaps via <tt>pip install tox</tt> or your\npackage manager), running <tt>tox</tt> in the directory of your source\ncheckout will run <tt>jsonschema</tt>\u2019s test suite on all of the versions\nof Python <tt>jsonschema</tt> supports. If you don\u2019t have all of the\nversions that <tt>jsonschema</tt> is tested under, you\u2019ll likely want to run\nusing <tt>tox</tt>\u2019s <tt><span class=\"pre\">--skip-missing-interpreters</span></tt> option.</p>\n<p>Of course you\u2019re also free to just run the tests on a single version with your\nfavorite test runner. The tests live in the <tt>jsonschema.tests</tt> package.</p>\n</div>\n<div id=\"benchmarks\">\n<h2>Benchmarks</h2>\n<p><tt>jsonschema</tt>\u2019s benchmarks make use of <a href=\"https://pyperf.readthedocs.io\" rel=\"nofollow\">pyperf</a>.</p>\n<p>Running them can be done via <tt>tox <span class=\"pre\">-e</span> perf</tt>, or by invoking the <tt>pyperf</tt>\ncommands externally (after ensuring that both it and <tt>jsonschema</tt> itself are\ninstalled):</p>\n<pre>$ python -m pyperf jsonschema/benchmarks/test_suite.py --hist --output results.json\n</pre>\n<p>To compare to a previous run, use:</p>\n<pre>$ python -m pyperf compare_to --table reference.json results.json\n</pre>\n<p>See the <tt>pyperf</tt> documentation for more details.</p>\n</div>\n<div id=\"community\">\n<h2>Community</h2>\n<p>There\u2019s a <a href=\"https://groups.google.com/forum/#!forum/jsonschema\" rel=\"nofollow\">mailing list</a>\nfor this implementation on Google Groups.</p>\n<p>Please join, and feel free to send questions there.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>I\u2019m Julian Berman.</p>\n<p><tt>jsonschema</tt> is on <a href=\"https://github.com/Julian/jsonschema\" rel=\"nofollow\">GitHub</a>.</p>\n<p>Get in touch, via GitHub or otherwise, if you\u2019ve got something to contribute,\nit\u2019d be most welcome!</p>\n<p>You can also generally find me on Freenode (nick: <tt>tos9</tt>) in various\nchannels, including <tt>#python</tt>.</p>\n<p>If you feel overwhelmingly grateful, you can also woo me with beer money\nvia Google Pay with the email in my GitHub profile.</p>\n<p>And for companies who appreciate <tt>jsonschema</tt> and its continued support\nand growth, <tt>jsonschema</tt> is also now supportable via <a href=\"https://tidelift.com/subscription/pkg/pypi-jsonschema?utm_source=pypi-jsonschema&amp;utm_medium=referral&amp;utm_campaign=readme\" rel=\"nofollow\">TideLift</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 6088342, "releases": {"3.1.2b0": [{"comment_text": "", "digests": {"md5": "e0747a3cbec88163b6ceafdb6333e093", "sha256": "16ccef3cc7525ff168bd6adc4a46f56b61c0eef4e85c13b172c67f88e13533b4"}, "downloads": -1, "filename": "jsonschema_codelane-3.1.2b0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e0747a3cbec88163b6ceafdb6333e093", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57792, "upload_time": "2019-11-06T15:58:34", "upload_time_iso_8601": "2019-11-06T15:58:34.842900Z", "url": "https://files.pythonhosted.org/packages/9a/a7/5bf3e387392d3524bd846aebf807811913a90d36f75adf107795e2cc28b3/jsonschema_codelane-3.1.2b0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0be1a869664c4e35953002fd25e3a867", "sha256": "9e18457a2e93f8c0b1813e2ea698063a8fa64ede30afe5edee3bf845be4b023f"}, "downloads": -1, "filename": "jsonschema-codelane-3.1.2b0.tar.gz", "has_sig": false, "md5_digest": "0be1a869664c4e35953002fd25e3a867", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 166821, "upload_time": "2019-11-06T15:58:41", "upload_time_iso_8601": "2019-11-06T15:58:41.811439Z", "url": "https://files.pythonhosted.org/packages/3b/9e/82e5b447cbfed5122a8c3f4a1d4435a41ee81e07dfff38e40e8bec5e59a0/jsonschema-codelane-3.1.2b0.tar.gz", "yanked": false}], "3.1.2b1": [{"comment_text": "", "digests": {"md5": "026f5230f877317a25a5785611e88aab", "sha256": "2fc6cdfae14436fcf78b15efcfe7e206b9b42d6cfc244604d5f8f75c3fb90e17"}, "downloads": -1, "filename": "jsonschema_codelane-3.1.2b1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "026f5230f877317a25a5785611e88aab", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57792, "upload_time": "2019-11-06T16:04:14", "upload_time_iso_8601": "2019-11-06T16:04:14.144419Z", "url": "https://files.pythonhosted.org/packages/70/c9/ca7ceec12b0f46ad39c21492e6feec23ffb3664bd836432bbd9d1e99f173/jsonschema_codelane-3.1.2b1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5af5f5cb8dc95aa6709e0ab10bdc7ec", "sha256": "a7ab8ff828e5055393669c7a5c0e2d34bbd6b8f0fc9a04f4beefef9ad1ddc0cc"}, "downloads": -1, "filename": "jsonschema-codelane-3.1.2b1.tar.gz", "has_sig": false, "md5_digest": "a5af5f5cb8dc95aa6709e0ab10bdc7ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 166827, "upload_time": "2019-11-06T16:04:16", "upload_time_iso_8601": "2019-11-06T16:04:16.110003Z", "url": "https://files.pythonhosted.org/packages/52/50/83b7af800247edd9dde44341863c09b0e0f7aef2e6453bb45198fb3e643a/jsonschema-codelane-3.1.2b1.tar.gz", "yanked": false}], "3.1.2b2": [{"comment_text": "", "digests": {"md5": "d13533e514bd0d0d4ce86f70f615183a", "sha256": "41f9b331b6424344266b4be411e96eed84204ed310bfb47dc0cc97f601a79078"}, "downloads": -1, "filename": "jsonschema_codelane-3.1.2b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d13533e514bd0d0d4ce86f70f615183a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57796, "upload_time": "2019-11-06T16:15:58", "upload_time_iso_8601": "2019-11-06T16:15:58.379148Z", "url": "https://files.pythonhosted.org/packages/c0/30/e580345043fecb5b1117837152278aa34f62ca49a2ba0469f4238d03f365/jsonschema_codelane-3.1.2b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "effd54e9aa6ff9bb3fd3a99cde8a718f", "sha256": "cfae6256a57f544aa72935d3f3b42884778a44e59059062d275d7eda4026871e"}, "downloads": -1, "filename": "jsonschema-codelane-3.1.2b2.tar.gz", "has_sig": false, "md5_digest": "effd54e9aa6ff9bb3fd3a99cde8a718f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 166858, "upload_time": "2019-11-06T16:16:00", "upload_time_iso_8601": "2019-11-06T16:16:00.588634Z", "url": "https://files.pythonhosted.org/packages/cd/c3/20d789a30addddcd66a8b2648efeaedc75029cfa56ffbdb55312ecbb7803/jsonschema-codelane-3.1.2b2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d13533e514bd0d0d4ce86f70f615183a", "sha256": "41f9b331b6424344266b4be411e96eed84204ed310bfb47dc0cc97f601a79078"}, "downloads": -1, "filename": "jsonschema_codelane-3.1.2b2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d13533e514bd0d0d4ce86f70f615183a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 57796, "upload_time": "2019-11-06T16:15:58", "upload_time_iso_8601": "2019-11-06T16:15:58.379148Z", "url": "https://files.pythonhosted.org/packages/c0/30/e580345043fecb5b1117837152278aa34f62ca49a2ba0469f4238d03f365/jsonschema_codelane-3.1.2b2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "effd54e9aa6ff9bb3fd3a99cde8a718f", "sha256": "cfae6256a57f544aa72935d3f3b42884778a44e59059062d275d7eda4026871e"}, "downloads": -1, "filename": "jsonschema-codelane-3.1.2b2.tar.gz", "has_sig": false, "md5_digest": "effd54e9aa6ff9bb3fd3a99cde8a718f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 166858, "upload_time": "2019-11-06T16:16:00", "upload_time_iso_8601": "2019-11-06T16:16:00.588634Z", "url": "https://files.pythonhosted.org/packages/cd/c3/20d789a30addddcd66a8b2648efeaedc75029cfa56ffbdb55312ecbb7803/jsonschema-codelane-3.1.2b2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:38 2020"}