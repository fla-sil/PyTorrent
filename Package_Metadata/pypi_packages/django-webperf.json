{"info": {"author": "Ilya Baryshev", "author_email": "baryshev@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python"], "description": "Django Web Performance\n======================\n\nA collection of stuff to improve django web performance.\n\nDomain sharding\n---------------\n`Domain sharding`_ is an optimization technique for parallelization of resource loading.\nIf you have a lot of media files on your page you might want them to be downloaded from\ndifferent domains, as web browsers have limits on how many files they can grab at once.\nDomain sharding reduces the overall page load time and is widley used on rich media sites,\nlike Facebook, Youtube, etc.\n\nIt works as a customized `django file storage`_, overriding standard url method.\n\n.. _domain sharding: http://www.stevesouders.com/blog/2009/05/12/sharding-dominant-domains/\n.. _django file storage: https://docs.djangoproject.com/en/dev/ref/files/storage/\n\nInstallation & setup\n--------------------\n\nRecommended way to install is pip::\n\n    pip install django-webperf\n\n\nMake sure to change your ``DEFAULT_FILE_STORAGE`` in ``settings.py`` to use sharding site-wide::\n\n    DEFAULT_FILE_STORAGE = 'web_performance.storage.DomainShardingStorage'\n\nSettings\n--------\n\nWEBPERF_MEDIA_TEMPLATE\n^^^^^^^^^^^^^^^^^^^^^^\n\n:Default: ``''`` (empty string)\n\nA pattern to generate media_urls with a standard format placeholder.\nE.g. `http://img{0}.example.com/media/`\n\nWEBPERF_DOMAINS_NUMBER\n^^^^^^^^^^^^^^^^^^^^^^\n\n:Default: ``2``\n\nNumber of domains you want to use to split your media content.\n\n    Don't use too many domains, becasue it will increase DNS lookup time.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coagulant/django-webperf", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-webperf", "package_url": "https://pypi.org/project/django-webperf/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-webperf/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/coagulant/django-webperf"}, "release_url": "https://pypi.org/project/django-webperf/0.1/", "requires_dist": null, "requires_python": null, "summary": "A collection of stuff to improve django web performance.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A collection of stuff to improve django web performance.</p>\n<div id=\"domain-sharding\">\n<h2>Domain sharding</h2>\n<p><a href=\"http://www.stevesouders.com/blog/2009/05/12/sharding-dominant-domains/\" rel=\"nofollow\">Domain sharding</a> is an optimization technique for parallelization of resource loading.\nIf you have a lot of media files on your page you might want them to be downloaded from\ndifferent domains, as web browsers have limits on how many files they can grab at once.\nDomain sharding reduces the overall page load time and is widley used on rich media sites,\nlike Facebook, Youtube, etc.</p>\n<p>It works as a customized <a href=\"https://docs.djangoproject.com/en/dev/ref/files/storage/\" rel=\"nofollow\">django file storage</a>, overriding standard url method.</p>\n</div>\n<div id=\"installation-setup\">\n<h2>Installation &amp; setup</h2>\n<p>Recommended way to install is pip:</p>\n<pre>pip install django-webperf\n</pre>\n<p>Make sure to change your <tt>DEFAULT_FILE_STORAGE</tt> in <tt>settings.py</tt> to use sharding site-wide:</p>\n<pre>DEFAULT_FILE_STORAGE = 'web_performance.storage.DomainShardingStorage'\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<div id=\"webperf-media-template\">\n<h3>WEBPERF_MEDIA_TEMPLATE</h3>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Default:</th><td><tt>''</tt> (empty string)</td>\n</tr>\n</tbody>\n</table>\n<p>A pattern to generate media_urls with a standard format placeholder.\nE.g. <cite>http://img{0}.example.com/media/</cite></p>\n</div>\n<div id=\"webperf-domains-number\">\n<h3>WEBPERF_DOMAINS_NUMBER</h3>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Default:</th><td><tt>2</tt></td>\n</tr>\n</tbody>\n</table>\n<p>Number of domains you want to use to split your media content.</p>\n<blockquote>\nDon\u2019t use too many domains, becasue it will increase DNS lookup time.</blockquote>\n</div>\n</div>\n\n          </div>"}, "last_serial": 791026, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7a129d3ab475a643cc0ea1755fa1a62e", "sha256": "cf24c92c4b4ad34d2653d9e6a90f4b8bfdda5b898a9a51589247ad2f82e6c602"}, "downloads": -1, "filename": "django-webperf-0.1.tar.gz", "has_sig": false, "md5_digest": "7a129d3ab475a643cc0ea1755fa1a62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4001, "upload_time": "2011-09-25T16:43:59", "upload_time_iso_8601": "2011-09-25T16:43:59.743266Z", "url": "https://files.pythonhosted.org/packages/55/62/fa443ed31f2f3cc17c782bd3edcc29db30b755087c0291147cde1040101b/django-webperf-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7a129d3ab475a643cc0ea1755fa1a62e", "sha256": "cf24c92c4b4ad34d2653d9e6a90f4b8bfdda5b898a9a51589247ad2f82e6c602"}, "downloads": -1, "filename": "django-webperf-0.1.tar.gz", "has_sig": false, "md5_digest": "7a129d3ab475a643cc0ea1755fa1a62e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4001, "upload_time": "2011-09-25T16:43:59", "upload_time_iso_8601": "2011-09-25T16:43:59.743266Z", "url": "https://files.pythonhosted.org/packages/55/62/fa443ed31f2f3cc17c782bd3edcc29db30b755087c0291147cde1040101b/django-webperf-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:55 2020"}