{"info": {"author": "Enigma Bridge", "author_email": "info@enigmabridge.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Security"], "description": "`Enigma Bridge <https://www.enigmabridge.com>`__ Python client\n==============================================================\n\nWith this repo you can use `Enigma\nBridge <https://www.enigmabridge.com>`__ encryption service.\n\nInstallation\n------------\n\n.. code:: bash\n\n    pip install ebclient.py\n\nUsage\n-----\n\nCalling processData():\n\n.. code:: python\n\n    from ebclient.process_data import ProcessData\n    from ebclient.uo import Configuration, Endpoint, SimpleRetry, UO\n    from ebclient.crypto_util import *\n\n    # Construct general configuration (endpoint, request config)\n    cfg = Configuration()\n    cfg.endpoint_process = Endpoint.url('https://site2.enigmabridge.com:11180')\n    cfg.api_key = 'API_TEST'\n\n    # UO you want to work with\n    uo_aes = UO(uo_id=0xee01,\n                uo_type=0x4,\n                enc_key=from_hex('e134567890123456789012345678901234567890123456789012345678901234'),\n                mac_key=from_hex('e224262820223456789012345678901234567890123456789012345678901234'),\n                configuration=cfg)\n\n    # ProcessData itself\n    pd = ProcessData(uo=uo_aes, config=cfg)\n    result = pd.call(from_hex('6bc1bee22e409f96e93d7e117393172a'))\n    print(from_hex('95c6bb9b6a1c3835f98cc56087a03e82') == result)\n\nFor more usage examples please refer to tests and our `API\ndocumentation <https://api.enigmabridge.com/api/?python>`__.\n\nDependencies\n------------\n\n.. code:: bash\n\n    pip install pycrypto requests\n\nOr to install to home directory\n\n.. code:: bash\n\n    pip install --user pycrypto requests\n\nIf the error ``ImportError: No module named Crypto`` is thrown it's\nneeded to run pip with ``--upgrade`` and update pycrypto to the latest\nversion.\n\nCompatibility\n-------------\n\nWe should be compatible with Python 2.6+ and Python 3+.\n\nTroubleshooting\n---------------\n\nError in installation of dependencies (cryptography, pyOpenSSL):\n``sorry, but this version only supports 100 named groups``\n[`100-named-groups <https://community.letsencrypt.org/t/certbot-auto-fails-while-setting-up-virtual-environment-complains-about-package-hashes/20529/18>`__]\n\nSolution: Install downgraded version of pycparser and pyOpenSSL:\n\n::\n\n    pip install pycparser==2.13\n    pip install pyOpenSSL==0.13\n    pip install cryptography\n\nYou may need to install some deps for the python packages\n\n::\n\n    yum install gcc g++ openssl-devel libffi-devel python-devel\n\nSNI on Python < 2.7.9\n~~~~~~~~~~~~~~~~~~~~~\n\nTLS SNI support was added to Python. For earlier versions SNI needs to\nbe added to Requests networking library.\n\n::\n\n    pip install urllib3\n    pip install pyopenssl\n    pip install ndg-httpsclient\n    pip install pyasn1\n\nMac OSX installation\n~~~~~~~~~~~~~~~~~~~~\n\nFor new OSX versions (El Capitan and above) the default system python\ninstallation cannot be modified with standard means. There are some\nworkarounds, but one can also use ``--user`` switch for pip.\n\n::\n\n    pip install --user cryptography", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/EnigmaBridge/client.py", "keywords": null, "license": "MIT License\n\nCopyright (c) 2016 Enigma bridge\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "ebclient.py", "package_url": "https://pypi.org/project/ebclient.py/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ebclient.py/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/EnigmaBridge/client.py"}, "release_url": "https://pypi.org/project/ebclient.py/0.1.22/", "requires_dist": null, "requires_python": null, "summary": "EnigmaBridge Python Client", "version": "0.1.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>With this repo you can use <a href=\"https://www.enigmabridge.com\" rel=\"nofollow\">Enigma\nBridge</a> encryption service.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install ebclient.py\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Calling processData():</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ebclient.process_data</span> <span class=\"kn\">import</span> <span class=\"n\">ProcessData</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ebclient.uo</span> <span class=\"kn\">import</span> <span class=\"n\">Configuration</span><span class=\"p\">,</span> <span class=\"n\">Endpoint</span><span class=\"p\">,</span> <span class=\"n\">SimpleRetry</span><span class=\"p\">,</span> <span class=\"n\">UO</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ebclient.crypto_util</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"c1\"># Construct general configuration (endpoint, request config)</span>\n<span class=\"n\">cfg</span> <span class=\"o\">=</span> <span class=\"n\">Configuration</span><span class=\"p\">()</span>\n<span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">endpoint_process</span> <span class=\"o\">=</span> <span class=\"n\">Endpoint</span><span class=\"o\">.</span><span class=\"n\">url</span><span class=\"p\">(</span><span class=\"s1\">'https://site2.enigmabridge.com:11180'</span><span class=\"p\">)</span>\n<span class=\"n\">cfg</span><span class=\"o\">.</span><span class=\"n\">api_key</span> <span class=\"o\">=</span> <span class=\"s1\">'API_TEST'</span>\n\n<span class=\"c1\"># UO you want to work with</span>\n<span class=\"n\">uo_aes</span> <span class=\"o\">=</span> <span class=\"n\">UO</span><span class=\"p\">(</span><span class=\"n\">uo_id</span><span class=\"o\">=</span><span class=\"mh\">0xee01</span><span class=\"p\">,</span>\n            <span class=\"n\">uo_type</span><span class=\"o\">=</span><span class=\"mh\">0x4</span><span class=\"p\">,</span>\n            <span class=\"n\">enc_key</span><span class=\"o\">=</span><span class=\"n\">from_hex</span><span class=\"p\">(</span><span class=\"s1\">'e134567890123456789012345678901234567890123456789012345678901234'</span><span class=\"p\">),</span>\n            <span class=\"n\">mac_key</span><span class=\"o\">=</span><span class=\"n\">from_hex</span><span class=\"p\">(</span><span class=\"s1\">'e224262820223456789012345678901234567890123456789012345678901234'</span><span class=\"p\">),</span>\n            <span class=\"n\">configuration</span><span class=\"o\">=</span><span class=\"n\">cfg</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># ProcessData itself</span>\n<span class=\"n\">pd</span> <span class=\"o\">=</span> <span class=\"n\">ProcessData</span><span class=\"p\">(</span><span class=\"n\">uo</span><span class=\"o\">=</span><span class=\"n\">uo_aes</span><span class=\"p\">,</span> <span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">cfg</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">from_hex</span><span class=\"p\">(</span><span class=\"s1\">'6bc1bee22e409f96e93d7e117393172a'</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">from_hex</span><span class=\"p\">(</span><span class=\"s1\">'95c6bb9b6a1c3835f98cc56087a03e82'</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">result</span><span class=\"p\">)</span>\n</pre>\n<p>For more usage examples please refer to tests and our <a href=\"https://api.enigmabridge.com/api/?python\" rel=\"nofollow\">API\ndocumentation</a>.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<pre>pip install pycrypto requests\n</pre>\n<p>Or to install to home directory</p>\n<pre>pip install --user pycrypto requests\n</pre>\n<p>If the error <tt>ImportError: No module named Crypto</tt> is thrown it\u2019s\nneeded to run pip with <tt><span class=\"pre\">--upgrade</span></tt> and update pycrypto to the latest\nversion.</p>\n</div>\n<div id=\"compatibility\">\n<h2>Compatibility</h2>\n<p>We should be compatible with Python 2.6+ and Python 3+.</p>\n</div>\n<div id=\"troubleshooting\">\n<h2>Troubleshooting</h2>\n<p>Error in installation of dependencies (cryptography, pyOpenSSL):\n<tt>sorry, but this version only supports 100 named groups</tt>\n[<a href=\"https://community.letsencrypt.org/t/certbot-auto-fails-while-setting-up-virtual-environment-complains-about-package-hashes/20529/18\" rel=\"nofollow\">100-named-groups</a>]</p>\n<p>Solution: Install downgraded version of pycparser and pyOpenSSL:</p>\n<pre>pip install pycparser==2.13\npip install pyOpenSSL==0.13\npip install cryptography\n</pre>\n<p>You may need to install some deps for the python packages</p>\n<pre>yum install gcc g++ openssl-devel libffi-devel python-devel\n</pre>\n<div id=\"sni-on-python-2-7-9\">\n<h3>SNI on Python &lt; 2.7.9</h3>\n<p>TLS SNI support was added to Python. For earlier versions SNI needs to\nbe added to Requests networking library.</p>\n<pre>pip install urllib3\npip install pyopenssl\npip install ndg-httpsclient\npip install pyasn1\n</pre>\n</div>\n<div id=\"mac-osx-installation\">\n<h3>Mac OSX installation</h3>\n<p>For new OSX versions (El Capitan and above) the default system python\ninstallation cannot be modified with standard means. There are some\nworkarounds, but one can also use <tt><span class=\"pre\">--user</span></tt> switch for pip.</p>\n<pre>pip install --user cryptography\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2659945, "releases": {"0.1.13": [{"comment_text": "", "digests": {"md5": "a4114dd9c7133045595d2b33ef020843", "sha256": "469ae4a5c8152210ef4c0ec39ccdce65ae07654bc59226529bbae4a658a09262"}, "downloads": -1, "filename": "ebclient.py-0.1.13.tar.gz", "has_sig": false, "md5_digest": "a4114dd9c7133045595d2b33ef020843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17185, "upload_time": "2016-10-31T17:06:13", "upload_time_iso_8601": "2016-10-31T17:06:13.112694Z", "url": "https://files.pythonhosted.org/packages/f4/a9/84f537854182ae1ab872190af20a03acc8cd410dc2409f7bf0e446ca79fe/ebclient.py-0.1.13.tar.gz", "yanked": false}], "0.1.14": [{"comment_text": "", "digests": {"md5": "234d2f49d64c102c825ab915ff710a52", "sha256": "a2c91228d7ae8dc04b202f44e50889ddffd508c3439d45f6ba866ac7e3c8a00a"}, "downloads": -1, "filename": "ebclient.py-0.1.14.tar.gz", "has_sig": false, "md5_digest": "234d2f49d64c102c825ab915ff710a52", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17724, "upload_time": "2016-11-16T17:12:20", "upload_time_iso_8601": "2016-11-16T17:12:20.227049Z", "url": "https://files.pythonhosted.org/packages/ff/3a/10edc908195ad61a9132000de390b8dcbe26584cf4025cb146b246708abe/ebclient.py-0.1.14.tar.gz", "yanked": false}], "0.1.15": [{"comment_text": "", "digests": {"md5": "4de01d298a6aa35082665a6df815588f", "sha256": "119bf3ff7472cac28791b15d362286df85b24675ae2b838114ac25a7d8c61b36"}, "downloads": -1, "filename": "ebclient.py-0.1.15.tar.gz", "has_sig": false, "md5_digest": "4de01d298a6aa35082665a6df815588f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17746, "upload_time": "2016-11-17T22:38:44", "upload_time_iso_8601": "2016-11-17T22:38:44.631303Z", "url": "https://files.pythonhosted.org/packages/66/e1/b2b1b56421d6ec8e3a7a41eb766ad97ccc1fbb65bd43355dc93067e962d8/ebclient.py-0.1.15.tar.gz", "yanked": false}], "0.1.16": [{"comment_text": "", "digests": {"md5": "e1c4f1989f7de2c0615c0b10bb885114", "sha256": "eea46b71a0f00996a055d4d26a79580a1b2d42fb07d3876b4971044ff7dea94d"}, "downloads": -1, "filename": "ebclient.py-0.1.16.tar.gz", "has_sig": false, "md5_digest": "e1c4f1989f7de2c0615c0b10bb885114", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19856, "upload_time": "2017-01-15T16:43:25", "upload_time_iso_8601": "2017-01-15T16:43:25.568269Z", "url": "https://files.pythonhosted.org/packages/13/df/53f4e213c3fd5b44c279a729d5944fbbd8c3f3238a9e7f6ef2ba51da5cea/ebclient.py-0.1.16.tar.gz", "yanked": false}], "0.1.17": [{"comment_text": "", "digests": {"md5": "e2e55d8e3fb04667e63556c0d80dbe22", "sha256": "77febd7b2d5b2536850e8186bbcae20b95b929376ce0b15ff9b209c0cdecd78f"}, "downloads": -1, "filename": "ebclient.py-0.1.17.tar.gz", "has_sig": false, "md5_digest": "e2e55d8e3fb04667e63556c0d80dbe22", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19864, "upload_time": "2017-01-15T16:44:27", "upload_time_iso_8601": "2017-01-15T16:44:27.375910Z", "url": "https://files.pythonhosted.org/packages/c2/ea/ce000b0684b4f72cdd5adc77392a73bd590f839ad31e178fb3a5444e33eb/ebclient.py-0.1.17.tar.gz", "yanked": false}], "0.1.18": [{"comment_text": "", "digests": {"md5": "bfc1ef1fefc536c883275400c6a9453e", "sha256": "2ebda2d84ae32d074ebde493e6a09ce636d49fbe79bfef2e2b8bc3227198fb96"}, "downloads": -1, "filename": "ebclient.py-0.1.18.tar.gz", "has_sig": false, "md5_digest": "bfc1ef1fefc536c883275400c6a9453e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19914, "upload_time": "2017-02-01T13:11:25", "upload_time_iso_8601": "2017-02-01T13:11:25.848447Z", "url": "https://files.pythonhosted.org/packages/9d/e5/255bbbf91ea571ef658efe0ee9e291c931943d0b9653913c0bc6c84d2aef/ebclient.py-0.1.18.tar.gz", "yanked": false}], "0.1.19": [{"comment_text": "", "digests": {"md5": "8752d3b4b64d620ab64fc7bdd3563c69", "sha256": "fac8cfa346b612171315c2fa06630ec5a19bf18211f68e7ba645f4e72e31bcf4"}, "downloads": -1, "filename": "ebclient.py-0.1.19.tar.gz", "has_sig": false, "md5_digest": "8752d3b4b64d620ab64fc7bdd3563c69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21117, "upload_time": "2017-02-10T00:23:24", "upload_time_iso_8601": "2017-02-10T00:23:24.372884Z", "url": "https://files.pythonhosted.org/packages/db/86/8d2dfbfcb1787954a1494b46547a53e10e1df87a22c183a5b3c378836552/ebclient.py-0.1.19.tar.gz", "yanked": false}], "0.1.20": [{"comment_text": "", "digests": {"md5": "aa08eb8cd7c528df2abc71f7ab2e7fb5", "sha256": "83732acfea744396ffb1025c77c086c0add746fe99d6dd8cf3336042f306a925"}, "downloads": -1, "filename": "ebclient.py-0.1.20.tar.gz", "has_sig": false, "md5_digest": "aa08eb8cd7c528df2abc71f7ab2e7fb5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21143, "upload_time": "2017-02-16T14:28:24", "upload_time_iso_8601": "2017-02-16T14:28:24.300335Z", "url": "https://files.pythonhosted.org/packages/0c/68/9edadc2e23398f9866057835693dbf519a814aa535ff247707bad3113b64/ebclient.py-0.1.20.tar.gz", "yanked": false}], "0.1.21": [{"comment_text": "", "digests": {"md5": "1fd2582a04f6d49973643e421d450d31", "sha256": "b147b6eb68d923c86a389659dde71ef4c5e6f32e052718d15ee59e3cc69eb7f7"}, "downloads": -1, "filename": "ebclient.py-0.1.21.tar.gz", "has_sig": false, "md5_digest": "1fd2582a04f6d49973643e421d450d31", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21279, "upload_time": "2017-02-20T13:22:29", "upload_time_iso_8601": "2017-02-20T13:22:29.732219Z", "url": "https://files.pythonhosted.org/packages/f6/b6/5ddb1b14ee3247fca0e137c763be9aed27d15b37048c521e96e25e2e4a8b/ebclient.py-0.1.21.tar.gz", "yanked": false}], "0.1.22": [{"comment_text": "", "digests": {"md5": "74bb0ef0e5e6d8592fb38d4635862973", "sha256": "2b6c88d61cf0dc8a39f54129a394fcb71c50f1a3730186eb9977216fa6892dbc"}, "downloads": -1, "filename": "ebclient.py-0.1.22.tar.gz", "has_sig": false, "md5_digest": "74bb0ef0e5e6d8592fb38d4635862973", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21372, "upload_time": "2017-02-22T08:46:54", "upload_time_iso_8601": "2017-02-22T08:46:54.398260Z", "url": "https://files.pythonhosted.org/packages/6b/c8/7e22f2bd8d46389f208e97e060e37f243d3a0c25ae49a94ccfc723ddd45b/ebclient.py-0.1.22.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "74bb0ef0e5e6d8592fb38d4635862973", "sha256": "2b6c88d61cf0dc8a39f54129a394fcb71c50f1a3730186eb9977216fa6892dbc"}, "downloads": -1, "filename": "ebclient.py-0.1.22.tar.gz", "has_sig": false, "md5_digest": "74bb0ef0e5e6d8592fb38d4635862973", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21372, "upload_time": "2017-02-22T08:46:54", "upload_time_iso_8601": "2017-02-22T08:46:54.398260Z", "url": "https://files.pythonhosted.org/packages/6b/c8/7e22f2bd8d46389f208e97e060e37f243d3a0c25ae49a94ccfc723ddd45b/ebclient.py-0.1.22.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:10 2020"}