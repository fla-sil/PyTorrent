{"info": {"author": "Ionel Cristian M\u0103rie\u0219", "author_email": "contact@ionelmc.ro", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "==========================\n        python-pth\n==========================\n\n.. image:: http://img.shields.io/travis/ionelmc/python-pth/master.png\n    :alt: Travis-CI Build Status\n    :target: https://travis-ci.org/ionelmc/python-pth\n\n.. image:: https://ci.appveyor.com/api/projects/status/49hd684jo3y461oo/branch/master\n    :alt: AppVeyor Build Status\n    :target: https://ci.appveyor.com/project/ionelmc/python-pth\n\n.. image:: http://img.shields.io/coveralls/ionelmc/python-pth/master.png\n    :alt: Coverage Status\n    :target: https://coveralls.io/r/ionelmc/python-pth\n\n.. image:: http://img.shields.io/pypi/v/pth.png\n    :alt: PYPI Package\n    :target: https://pypi.python.org/pypi/pth\n\n.. image:: http://img.shields.io/pypi/dm/pth.png\n    :alt: PYPI Package\n    :target: https://pypi.python.org/pypi/pth\n\n**Note:** This is in very alpha state.\n\nSimple and brief path traversal and filesystem access library. This library is a bit different that other path manipulation libraries:\n\n* Path are subclasses of strings. You can use them anyhere you would use a string.\n* Almost everything from ``os.path`` is available as a **property** with the same name except:\n\n  * ``os.path.relpath`` is a **method**\n  * ``os.path.getsize`` becomes a **property** named ``size``\n  * ``os.path.getatime`` becomes a **property** named ``atime``\n  * ``os.path.getctime`` becomes a **property** named ``ctime``\n  * ``os.path.getmtime`` becomes a **property** named ``mtime``\n  * ``os.path.split`` becomes a **method** name ``splitpath`` as ``split`` is already a string method\n  * ``os.path.join`` becomes a **method** name ``joinpath`` as ``join`` is already a string method\n  * ``os.path.commonprefix`` *is not implemented*\n  * ``os.path.basename`` becomes a **property** named ``name``\n  * ``os.path.dirname`` becomes a **property** named ``dir``\n  * ``os.listdir`` becomes a **property** named ``list``\n  * ``os.walk`` becomes a **property** named ``tree``\n\n* Calling a *Path* object calls ``open()`` on the path. Takes any argument ``open`` would take (except the filename ofcourse).\n* Transparent support for files in .zip files.\n\nBasically it is designed for extreme brevity. It shares `Unipath <https://pypi.python.org/pypi/Unipath/>`_'s\nstr-subclassing approach and and it has seamless zip support (like Twisted's `ZipPath\n<http://twistedmatrix.com/trac/browser/trunk/twisted/python/zippath.py>`_).\n\nUsage\n-----\n\nGetting started::\n\n    >>> import pth\n    >>> pth  # the module is a function!\n    <function pth at ...>\n    >>> p = pth(\"a.txt\")\n    >>> p\n    <Path 'a.txt'>\n    >>> p\n    <Path 'a.txt'>\n\n\nAPI\n---\n\n::\n\n    >>> p = pth('tests')\n    >>> p\n    <Path 'tests'>\n\nJoining paths::\n\n    >>> p/\"a\"/\"b\"/\"c\"/\"d\"\n    <Path 'tests/a/b/c/d'>\n\n    >>> p/\"/root\"\n    <Path '/root'>\n\nProperties::\n\n    >>> p.abspath\n    <Path '/.../tests'>\n\n    >>> p2 = p/'b.txt'\n    >>> p2\n    <Path 'tests/b.txt'>\n\n    >>> p.exists\n    True\n\n    >>> p2.isfile\n    True\n\n    >>> p2()\n    <...'tests/b.txt'...mode...'r'...>\n\n    >>> pth('bogus-doesnt-exist')()\n    Traceback (most recent call last):\n      ...\n    pth.PathMustBeFile: [Errno 2] No such file or directory: ...\n\nLooping over children, including files in .zip files::\n\n    >>> for i in sorted([i for i in p.tree]): print(i)\n    tests/a\n    tests/a/a.txt\n    tests/b.txt\n    tests/test.zip\n    tests/test.zip/1\n    tests/test.zip/1/1.txt\n    tests/test.zip/B.TXT\n    tests/test.zip/a.txt\n\n    >>> for i in sorted([i for i in p.files]): print(i)\n    tests/b.txt\n\n    >>> for i in sorted([i for i in p.dirs]): print(i)\n    tests/a\n    tests/test.zip\n\n    >>> for i in sorted([i for i in p.list]): print(i)\n    tests/a\n    tests/b.txt\n    tests/test.zip\n\n    >>> list(pth('bogus-doesnt-exist').tree)\n    Traceback (most recent call last):\n      ...\n    pth.PathMustBeDirectory: <Path 'bogus-doesnt-exist'> is not a directory nor a zip !\n\n\nTrying to access inexisting property::\n\n    >>> p.bogus\n    Traceback (most recent call last):\n    ...\n    AttributeError: 'Path' object has no attribute 'bogus'\n\nAutomatic wrapping of zips::\n\n    >>> p/'test.zip'\n    <ZipPath 'tests/test.zip' / ''>\n\nOther properties::\n\n    >>> p.abspath\n    <Path '/.../tests'>\n\n    >>> p.abs\n    <Path '/.../tests'>\n\n    >>> p.basename\n    <Path 'tests'>\n\n    >>> p.abs.basename\n    <Path 'tests'>\n\n    >>> p.name\n    <Path 'tests'>\n\n    >>> p.dirname\n    <Path ''>\n\n    >>> p.dir\n    <Path ''>\n\n    >>> p.exists\n    True\n\n    >>> pth('~root').expanduser\n    <Path '/root'>\n\n    >>> pth('~/stuff').expanduser\n    <Path '/home/.../stuff'>\n\n    >>> p.expandvars\n    <Path 'tests'>\n\n    >>> type(p.atime)\n    <... 'float'>\n\n    >>> type(p.ctime)\n    <... 'float'>\n\n    >>> type(p.size)\n    <... 'int'>\n\n    >>> p.isabs\n    False\n\n    >>> p.abs.isabs\n    True\n\n    >>> p.isdir\n    True\n\n    >>> p.isfile\n    False\n\n    >>> p.islink\n    False\n\n    >>> p.ismount\n    False\n\n    >>> p.lexists\n    True\n\n    >>> p.normcase\n    <Path 'tests'>\n\n    >>> p.normpath\n    <Path 'tests'>\n\n    >>> p.realpath\n    <Path '/.../tests'>\n\n    >>> p.splitpath\n    (<Path ''>, <Path 'tests'>)\n\n    >>> pth('a/b/c/d').splitpath\n    (<Path 'a/b/c'>, <Path 'd'>)\n\n    >>> pth('a/b/c/d').parts\n    [<Path 'a'>, <Path 'b'>, <Path 'c'>, <Path 'd'>]\n\n    >>> pth('/a/b/c/d').parts\n    [<Path '/'>, <Path 'a'>, <Path 'b'>, <Path 'c'>, <Path 'd'>]\n\n    >>> pth(*pth('/a/b/c/d').parts)\n    <Path '/a/b/c/d'>\n\n    >>> p.splitdrive\n    ('', <Path 'tests'>)\n\n    >>> p.drive\n    ''\n\n    >>> [i for i in (p/'xxx').tree]\n    Traceback (most recent call last):\n    ...\n    pth.PathMustBeDirectory: <Path 'tests/xxx'> is not a directory nor a zip !\n\n    >>> (p/'xxx').isfile\n    False\n\n    >>> (p/'xxx')()\n    Traceback (most recent call last):\n    ...\n    pth.PathMustBeFile: ... 2...\n\n    >>> p()\n    Traceback (most recent call last):\n    ...\n    pth.PathMustBeFile: <Path 'tests'> is not a file !\n\n    >>> pth('a.txt').splitext\n    (<Path 'a'>, '.txt')\n\n    >>> pth('a.txt').ext\n    '.txt'\n\n\nZip stuff::\n\n    >>> z = pth('tests/test.zip')\n    >>> z\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> z.abspath\n    <ZipPath '/.../tests/test.zip' / ''>\n\n    >>> z.abs\n    <ZipPath '/.../tests/test.zip' / ''>\n\n    >>> z.basename # transforms in normal path cauze zip is not accessible in current dir\n    <Path 'test.zip'>\n\n    >>> z.abs.basename # transforms in normal path cauze zip is not accessible in current dir\n    <Path 'test.zip'>\n\n    >>> import os\n    >>> os.chdir('tests')\n    >>> z.basename\n    <ZipPath 'test.zip' / ''>\n    >>> z.name\n    <ZipPath 'test.zip' / ''>\n    >>> os.chdir('..')\n\n    >>> z.dirname\n    <Path 'tests'>\n\n    >>> z.abs.dirname\n    <Path '/.../tests'>\n\n    >>> z.dir\n    <Path 'tests'>\n\n    >>> z.exists\n    True\n\n    >>> pth('~root').expanduser\n    <Path '/root'>\n\n    >>> pth('~/stuff').expanduser\n    <Path '/home/.../stuff'>\n\n    >>> z.expandvars\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> type(z.atime)\n    Traceback (most recent call last):\n    ...\n    AttributeError: Not available here.\n\n    >>> type(z.ctime)\n    <... 'float'>\n\n    >>> type(z.size)\n    <... 'int'>\n\n    >>> z.isabs\n    False\n\n    >>> z.abs.isabs\n    True\n\n    >>> z.isdir\n    True\n\n    >>> z.isfile\n    False\n\n    >>> z.islink\n    False\n\n    >>> z.ismount\n    False\n\n    >>> z.lexists\n    Traceback (most recent call last):\n    ...\n    AttributeError: Not available here.\n\n    >>> for i in z.tree: print((str(i), repr(i)))\n    ('tests/test.zip/1',...... \"<ZipPath 'tests/test.zip' / '1/'>\")\n    ('tests/test.zip/1/1.txt', \"<ZipPath 'tests/test.zip' / '1/1.txt'>\")\n    ('tests/test.zip/B.TXT',...\"<ZipPath 'tests/test.zip' / 'B.TXT'>\")\n    ('tests/test.zip/a.txt',...\"<ZipPath 'tests/test.zip' / 'a.txt'>\")\n\n    >>> for i in z.files: print((str(i), repr(i)))\n    ('tests/test.zip/B.TXT',...\"<ZipPath 'tests/test.zip' / 'B.TXT'>\")\n    ('tests/test.zip/a.txt',...\"<ZipPath 'tests/test.zip' / 'a.txt'>\")\n\n    >>> for i in z.dirs: print((str(i), repr(i)))\n    ('tests/test.zip/1',...... \"<ZipPath 'tests/test.zip' / '1/'>\")\n\n    >>> for i in z.list: print((str(i), repr(i)))\n    ('tests/test.zip/1',...... \"<ZipPath 'tests/test.zip' / '1/'>\")\n    ('tests/test.zip/B.TXT',...\"<ZipPath 'tests/test.zip' / 'B.TXT'>\")\n    ('tests/test.zip/a.txt',...\"<ZipPath 'tests/test.zip' / 'a.txt'>\")\n\n    >>> (z/'B.TXT')\n    <ZipPath 'tests/test.zip' / 'B.TXT'>\n\n    >>> str(z/'B.TXT')\n    'tests/test.zip/B.TXT'\n\n    >>> (z/'B.TXT').dirname\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> (z/'B.TXT').rel(z)\n    <Path 'B.TXT'>\n\n    >>> z.rel(z/'B.TXT')\n    <Path '..'>\n\n    >>> (z/'B.TXT').exists\n    True\n\n    >>> (z/'B.TXT').normcase\n    <ZipPath 'tests/test.zip' / 'B.TXT'>\n\n    >>> (z/'B.TXT').normpath\n    <ZipPath 'tests/test.zip' / 'B.TXT'>\n\n    >>> (z/'B.TXT').name\n    <Path 'B.TXT'>\n\n    >>> (z/'B.TXT').name\n    <Path 'B.TXT'>\n\n    >>> z.normcase\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> z.normpath\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> z.realpath\n    <ZipPath '/.../tests/test.zip' / ''>\n\n    >>> z.splitpath\n    (<Path 'tests'>, <Path 'test.zip'>)\n\n    >>> z.splitdrive\n    ('', <ZipPath 'tests/test.zip' / ''>)\n\n    >>> z.drive\n    ''\n\n    >>> pth('a.txt').splitext\n    (<Path 'a'>, '.txt')\n\n    >>> pth('a.txt').ext\n    '.txt'\n\nWorking with files in a .zip::\n\n    >>> p = z/'B.TXT'\n    >>> p.abspath\n    <ZipPath '/.../tests/test.zip' / 'B.TXT'>\n\n    >>> p.abs\n    <ZipPath '/.../tests/test.zip' / 'B.TXT'>\n\n    >>> p.basename\n    <Path 'B.TXT'>\n\n    >>> p.abs.basename\n    <Path 'B.TXT'>\n\n    >>> p.name\n    <Path 'B.TXT'>\n\n    >>> p.dirname\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> p.dir\n    <ZipPath 'tests/test.zip' / ''>\n\n    >>> p.exists\n    True\n\n    >>> type(p.atime)\n    Traceback (most recent call last):\n    ...\n    AttributeError: Not available here.\n\n    >>> type(p.ctime)\n    <... 'float'>\n\n    >>> type(p.size)\n    <... 'int'>\n\n    >>> p.isabs\n    False\n\n    >>> p.abs.isabs\n    True\n\n    >>> p.isdir\n    False\n\n    >>> p.isfile\n    True\n\n    >>> p.islink\n    False\n\n    >>> p.ismount\n    False\n\n    >>> p.lexists\n    Traceback (most recent call last):\n    ...\n    AttributeError: Not available here.\n\n    >>> p.normcase\n    <ZipPath 'tests/test.zip' / 'B.TXT'>\n\n    >>> p.normpath\n    <ZipPath 'tests/test.zip' / 'B.TXT'>\n\n    >>> p.realpath\n    <ZipPath '/.../tests/test.zip' / 'B.TXT'>\n\n    >>> p.splitpath\n    (<ZipPath 'tests/test.zip' / ''>, <Path 'B.TXT'>)\n\n    >>> pth.ZipPath.from_string('tests/test.zip/1/1.txt')\n    <ZipPath 'tests/test.zip' / '1/1.txt'>\n\n    >>> p.splitdrive\n    ('', <ZipPath 'tests/test.zip' / 'B.TXT'>)\n\n    >>> p.drive\n    ''\n\n    >>> p.splitext\n    (<ZipPath 'tests/test.zip' / 'B'>, '.TXT')\n\n    >>> p.ext\n    '.TXT'\n\n    >>> p.joinpath('tete')\n    <ZipPath 'tests/test.zip' / 'B.TXT/tete'>\n\n    >>> p.joinpath('tete').exists\n    False\n\n    >>> p.joinpath('tete').isdir\n    False\n\n    >>> p.joinpath('tete').isfile\n    False\n\n    >>> p.joinpath('tete').ctime\n    Traceback (most recent call last):\n    ...\n    pth.PathDoesNotExist: \"There is no item named 'B.TXT/tete' in the archive\"\n\n    >>> p.joinpath('tete').size\n    Traceback (most recent call last):\n    ...\n    pth.PathDoesNotExist: \"There is no item named 'B.TXT/tete' in the archive\"\n\n    >>> p.relpath('tests')\n    <Path 'test.zip/B.TXT'>\n\n    >>> p.joinpath('tete')('rb')\n    Traceback (most recent call last):\n    ...\n    pth.PathMustBeFile: <ZipPath 'tests/test.zip' / 'B.TXT/tete'> is not a file !\n\n    >>> p('r')\n    <zipfile.ZipExtFile ...>\n\n    >>> [i for i in p.tree]\n    Traceback (most recent call last):\n    ...\n    pth.PathMustBeDirectory: <ZipPath 'tests/test.zip' / 'B.TXT'> is not a directory !\n\n    >>> z('rb')\n    Traceback (most recent call last):\n    ...\n    pth.PathMustBeFile: <ZipPath 'tests/test.zip' / ''> is not a file !\n\nIterating though the contents of the zip::\n\n    >>> [i for i in z.tree]\n    [<ZipPath 'tests/test.zip' / '1/'>, <ZipPath 'tests/test.zip' / '1/1.txt'>, <ZipPath 'tests/test.zip' / 'B.TXT'>, <ZipPath 'tests/test.zip' / 'a.txt'>]\n\n    >>> [i for i in z.files]\n    [<ZipPath 'tests/test.zip' / 'B.TXT'>, <ZipPath 'tests/test.zip' / 'a.txt'>]\n\n    >>> [i for i in z.dirs]\n    [<ZipPath 'tests/test.zip' / '1/'>]\n\nNote that there's this inconsistency with joining absolute paths::\n\n    >>> z/pth('/root')\n    <Path '/root'>\n\nVs::\n\n    >>> z/'/root'\n    <ZipPath 'tests/test.zip' / '/root'>\n\nTODO: Make this nicer.\n\n::\n\n    >>> pth.ZipPath('tests', '', '')\n    <Path 'tests'>\n\n    >>> pth.ZipPath.from_string('/bogus/path/to/stuff/bla/bla/bla')\n    <Path '/bogus/path/to/stuff/bla/bla/bla'>\n\n    >>> pth.ZipPath.from_string('bogus')\n    <Path 'bogus'>\n\n    >>> pth.ZipPath.from_string('tests/test.zip/bogus/path/to/stuff/bla/bla/bla')\n    <ZipPath 'tests/test.zip' / 'bogus/path/to/stuff/bla/bla/bla'>\n\n    >>> pth.ZipPath.from_string('tests/1/bogus/path/to/stuff/bla/bla/bla')\n    <Path 'tests/1/bogus/path/to/stuff/bla/bla/bla'>\n\n    >>> pth.ZipPath.from_string('tests')\n    <Path 'tests'>\n\n    >>> pth.ZipPath.from_string('tests/bogus')\n    <Path 'tests/bogus'>\n\nAnd there's a *temporary path*::\n\n    >>> t = pth.TempPath()\n    >>> t\n    <TempPath '/tmp/...'>\n\n    >>> with t:\n    ...     with (t/\"booo.txt\")('w+') as f:\n    ...         _ = f.write(\"test\")\n    ...     print([i for i in t.tree])\n    [<Path '/tmp/.../booo.txt'>]\n\n    >>> t.exists\n    False\n\n\nChangelog\n=========\n\n0.1.0 (2014-06-10)\n-----------------------------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ionelmc/python-pth", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "pth", "package_url": "https://pypi.org/project/pth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pth/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ionelmc/python-pth"}, "release_url": "https://pypi.org/project/pth/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "Simple and brief path traversal and filesystem access library.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/ionelmc/python-pth\" rel=\"nofollow\"><img alt=\"Travis-CI Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e42eb021c4ce090ee88f632f903fb410e2e6a04c/687474703a2f2f696d672e736869656c64732e696f2f7472617669732f696f6e656c6d632f707974686f6e2d7074682f6d61737465722e706e67\"></a>\n<a href=\"https://ci.appveyor.com/project/ionelmc/python-pth\" rel=\"nofollow\"><img alt=\"AppVeyor Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df7e679b1c00b2b096d344bb9a03ba8413a6e8ba/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f343968643638346a6f33793436316f6f2f6272616e63682f6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/ionelmc/python-pth\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/858bf8fbde887f5d847e02acea9e39e7f5e2604b/687474703a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f696f6e656c6d632f707974686f6e2d7074682f6d61737465722e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/pth\" rel=\"nofollow\"><img alt=\"PYPI Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d2f3d14c2578d81d3c1906adcef53b389aec1613/687474703a2f2f696d672e736869656c64732e696f2f707970692f762f7074682e706e67\"></a>\n<a href=\"https://pypi.python.org/pypi/pth\" rel=\"nofollow\"><img alt=\"PYPI Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bc4920679013f1b5f23bdfd83c028bb15bf2232/687474703a2f2f696d672e736869656c64732e696f2f707970692f646d2f7074682e706e67\"></a>\n<p><strong>Note:</strong> This is in very alpha state.</p>\n<p>Simple and brief path traversal and filesystem access library. This library is a bit different that other path manipulation libraries:</p>\n<ul>\n<li>Path are subclasses of strings. You can use them anyhere you would use a string.</li>\n<li>Almost everything from <tt>os.path</tt> is available as a <strong>property</strong> with the same name except:<ul>\n<li><tt>os.path.relpath</tt> is a <strong>method</strong></li>\n<li><tt>os.path.getsize</tt> becomes a <strong>property</strong> named <tt>size</tt></li>\n<li><tt>os.path.getatime</tt> becomes a <strong>property</strong> named <tt>atime</tt></li>\n<li><tt>os.path.getctime</tt> becomes a <strong>property</strong> named <tt>ctime</tt></li>\n<li><tt>os.path.getmtime</tt> becomes a <strong>property</strong> named <tt>mtime</tt></li>\n<li><tt>os.path.split</tt> becomes a <strong>method</strong> name <tt>splitpath</tt> as <tt>split</tt> is already a string method</li>\n<li><tt>os.path.join</tt> becomes a <strong>method</strong> name <tt>joinpath</tt> as <tt>join</tt> is already a string method</li>\n<li><tt>os.path.commonprefix</tt> <em>is not implemented</em></li>\n<li><tt>os.path.basename</tt> becomes a <strong>property</strong> named <tt>name</tt></li>\n<li><tt>os.path.dirname</tt> becomes a <strong>property</strong> named <tt>dir</tt></li>\n<li><tt>os.listdir</tt> becomes a <strong>property</strong> named <tt>list</tt></li>\n<li><tt>os.walk</tt> becomes a <strong>property</strong> named <tt>tree</tt></li>\n</ul>\n</li>\n<li>Calling a <em>Path</em> object calls <tt>open()</tt> on the path. Takes any argument <tt>open</tt> would take (except the filename ofcourse).</li>\n<li>Transparent support for files in .zip files.</li>\n</ul>\n<p>Basically it is designed for extreme brevity. It shares <a href=\"https://pypi.python.org/pypi/Unipath/\" rel=\"nofollow\">Unipath</a>\u2019s\nstr-subclassing approach and and it has seamless zip support (like Twisted\u2019s <a href=\"http://twistedmatrix.com/trac/browser/trunk/twisted/python/zippath.py\" rel=\"nofollow\">ZipPath</a>).</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Getting started:</p>\n<pre>&gt;&gt;&gt; import pth\n&gt;&gt;&gt; pth  # the module is a function!\n&lt;function pth at ...&gt;\n&gt;&gt;&gt; p = pth(\"a.txt\")\n&gt;&gt;&gt; p\n&lt;Path 'a.txt'&gt;\n&gt;&gt;&gt; p\n&lt;Path 'a.txt'&gt;\n</pre>\n</div>\n<div id=\"api\">\n<h2>API</h2>\n<pre>&gt;&gt;&gt; p = pth('tests')\n&gt;&gt;&gt; p\n&lt;Path 'tests'&gt;\n</pre>\n<p>Joining paths:</p>\n<pre>&gt;&gt;&gt; p/\"a\"/\"b\"/\"c\"/\"d\"\n&lt;Path 'tests/a/b/c/d'&gt;\n\n&gt;&gt;&gt; p/\"/root\"\n&lt;Path '/root'&gt;\n</pre>\n<p>Properties:</p>\n<pre>&gt;&gt;&gt; p.abspath\n&lt;Path '/.../tests'&gt;\n\n&gt;&gt;&gt; p2 = p/'b.txt'\n&gt;&gt;&gt; p2\n&lt;Path 'tests/b.txt'&gt;\n\n&gt;&gt;&gt; p.exists\nTrue\n\n&gt;&gt;&gt; p2.isfile\nTrue\n\n&gt;&gt;&gt; p2()\n&lt;...'tests/b.txt'...mode...'r'...&gt;\n\n&gt;&gt;&gt; pth('bogus-doesnt-exist')()\nTraceback (most recent call last):\n  ...\npth.PathMustBeFile: [Errno 2] No such file or directory: ...\n</pre>\n<p>Looping over children, including files in .zip files:</p>\n<pre>&gt;&gt;&gt; for i in sorted([i for i in p.tree]): print(i)\ntests/a\ntests/a/a.txt\ntests/b.txt\ntests/test.zip\ntests/test.zip/1\ntests/test.zip/1/1.txt\ntests/test.zip/B.TXT\ntests/test.zip/a.txt\n\n&gt;&gt;&gt; for i in sorted([i for i in p.files]): print(i)\ntests/b.txt\n\n&gt;&gt;&gt; for i in sorted([i for i in p.dirs]): print(i)\ntests/a\ntests/test.zip\n\n&gt;&gt;&gt; for i in sorted([i for i in p.list]): print(i)\ntests/a\ntests/b.txt\ntests/test.zip\n\n&gt;&gt;&gt; list(pth('bogus-doesnt-exist').tree)\nTraceback (most recent call last):\n  ...\npth.PathMustBeDirectory: &lt;Path 'bogus-doesnt-exist'&gt; is not a directory nor a zip !\n</pre>\n<p>Trying to access inexisting property:</p>\n<pre>&gt;&gt;&gt; p.bogus\nTraceback (most recent call last):\n...\nAttributeError: 'Path' object has no attribute 'bogus'\n</pre>\n<p>Automatic wrapping of zips:</p>\n<pre>&gt;&gt;&gt; p/'test.zip'\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n</pre>\n<p>Other properties:</p>\n<pre>&gt;&gt;&gt; p.abspath\n&lt;Path '/.../tests'&gt;\n\n&gt;&gt;&gt; p.abs\n&lt;Path '/.../tests'&gt;\n\n&gt;&gt;&gt; p.basename\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; p.abs.basename\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; p.name\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; p.dirname\n&lt;Path ''&gt;\n\n&gt;&gt;&gt; p.dir\n&lt;Path ''&gt;\n\n&gt;&gt;&gt; p.exists\nTrue\n\n&gt;&gt;&gt; pth('~root').expanduser\n&lt;Path '/root'&gt;\n\n&gt;&gt;&gt; pth('~/stuff').expanduser\n&lt;Path '/home/.../stuff'&gt;\n\n&gt;&gt;&gt; p.expandvars\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; type(p.atime)\n&lt;... 'float'&gt;\n\n&gt;&gt;&gt; type(p.ctime)\n&lt;... 'float'&gt;\n\n&gt;&gt;&gt; type(p.size)\n&lt;... 'int'&gt;\n\n&gt;&gt;&gt; p.isabs\nFalse\n\n&gt;&gt;&gt; p.abs.isabs\nTrue\n\n&gt;&gt;&gt; p.isdir\nTrue\n\n&gt;&gt;&gt; p.isfile\nFalse\n\n&gt;&gt;&gt; p.islink\nFalse\n\n&gt;&gt;&gt; p.ismount\nFalse\n\n&gt;&gt;&gt; p.lexists\nTrue\n\n&gt;&gt;&gt; p.normcase\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; p.normpath\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; p.realpath\n&lt;Path '/.../tests'&gt;\n\n&gt;&gt;&gt; p.splitpath\n(&lt;Path ''&gt;, &lt;Path 'tests'&gt;)\n\n&gt;&gt;&gt; pth('a/b/c/d').splitpath\n(&lt;Path 'a/b/c'&gt;, &lt;Path 'd'&gt;)\n\n&gt;&gt;&gt; pth('a/b/c/d').parts\n[&lt;Path 'a'&gt;, &lt;Path 'b'&gt;, &lt;Path 'c'&gt;, &lt;Path 'd'&gt;]\n\n&gt;&gt;&gt; pth('/a/b/c/d').parts\n[&lt;Path '/'&gt;, &lt;Path 'a'&gt;, &lt;Path 'b'&gt;, &lt;Path 'c'&gt;, &lt;Path 'd'&gt;]\n\n&gt;&gt;&gt; pth(*pth('/a/b/c/d').parts)\n&lt;Path '/a/b/c/d'&gt;\n\n&gt;&gt;&gt; p.splitdrive\n('', &lt;Path 'tests'&gt;)\n\n&gt;&gt;&gt; p.drive\n''\n\n&gt;&gt;&gt; [i for i in (p/'xxx').tree]\nTraceback (most recent call last):\n...\npth.PathMustBeDirectory: &lt;Path 'tests/xxx'&gt; is not a directory nor a zip !\n\n&gt;&gt;&gt; (p/'xxx').isfile\nFalse\n\n&gt;&gt;&gt; (p/'xxx')()\nTraceback (most recent call last):\n...\npth.PathMustBeFile: ... 2...\n\n&gt;&gt;&gt; p()\nTraceback (most recent call last):\n...\npth.PathMustBeFile: &lt;Path 'tests'&gt; is not a file !\n\n&gt;&gt;&gt; pth('a.txt').splitext\n(&lt;Path 'a'&gt;, '.txt')\n\n&gt;&gt;&gt; pth('a.txt').ext\n'.txt'\n</pre>\n<p>Zip stuff:</p>\n<pre>&gt;&gt;&gt; z = pth('tests/test.zip')\n&gt;&gt;&gt; z\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; z.abspath\n&lt;ZipPath '/.../tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; z.abs\n&lt;ZipPath '/.../tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; z.basename # transforms in normal path cauze zip is not accessible in current dir\n&lt;Path 'test.zip'&gt;\n\n&gt;&gt;&gt; z.abs.basename # transforms in normal path cauze zip is not accessible in current dir\n&lt;Path 'test.zip'&gt;\n\n&gt;&gt;&gt; import os\n&gt;&gt;&gt; os.chdir('tests')\n&gt;&gt;&gt; z.basename\n&lt;ZipPath 'test.zip' / ''&gt;\n&gt;&gt;&gt; z.name\n&lt;ZipPath 'test.zip' / ''&gt;\n&gt;&gt;&gt; os.chdir('..')\n\n&gt;&gt;&gt; z.dirname\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; z.abs.dirname\n&lt;Path '/.../tests'&gt;\n\n&gt;&gt;&gt; z.dir\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; z.exists\nTrue\n\n&gt;&gt;&gt; pth('~root').expanduser\n&lt;Path '/root'&gt;\n\n&gt;&gt;&gt; pth('~/stuff').expanduser\n&lt;Path '/home/.../stuff'&gt;\n\n&gt;&gt;&gt; z.expandvars\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; type(z.atime)\nTraceback (most recent call last):\n...\nAttributeError: Not available here.\n\n&gt;&gt;&gt; type(z.ctime)\n&lt;... 'float'&gt;\n\n&gt;&gt;&gt; type(z.size)\n&lt;... 'int'&gt;\n\n&gt;&gt;&gt; z.isabs\nFalse\n\n&gt;&gt;&gt; z.abs.isabs\nTrue\n\n&gt;&gt;&gt; z.isdir\nTrue\n\n&gt;&gt;&gt; z.isfile\nFalse\n\n&gt;&gt;&gt; z.islink\nFalse\n\n&gt;&gt;&gt; z.ismount\nFalse\n\n&gt;&gt;&gt; z.lexists\nTraceback (most recent call last):\n...\nAttributeError: Not available here.\n\n&gt;&gt;&gt; for i in z.tree: print((str(i), repr(i)))\n('tests/test.zip/1',...... \"&lt;ZipPath 'tests/test.zip' / '1/'&gt;\")\n('tests/test.zip/1/1.txt', \"&lt;ZipPath 'tests/test.zip' / '1/1.txt'&gt;\")\n('tests/test.zip/B.TXT',...\"&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\")\n('tests/test.zip/a.txt',...\"&lt;ZipPath 'tests/test.zip' / 'a.txt'&gt;\")\n\n&gt;&gt;&gt; for i in z.files: print((str(i), repr(i)))\n('tests/test.zip/B.TXT',...\"&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\")\n('tests/test.zip/a.txt',...\"&lt;ZipPath 'tests/test.zip' / 'a.txt'&gt;\")\n\n&gt;&gt;&gt; for i in z.dirs: print((str(i), repr(i)))\n('tests/test.zip/1',...... \"&lt;ZipPath 'tests/test.zip' / '1/'&gt;\")\n\n&gt;&gt;&gt; for i in z.list: print((str(i), repr(i)))\n('tests/test.zip/1',...... \"&lt;ZipPath 'tests/test.zip' / '1/'&gt;\")\n('tests/test.zip/B.TXT',...\"&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\")\n('tests/test.zip/a.txt',...\"&lt;ZipPath 'tests/test.zip' / 'a.txt'&gt;\")\n\n&gt;&gt;&gt; (z/'B.TXT')\n&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; str(z/'B.TXT')\n'tests/test.zip/B.TXT'\n\n&gt;&gt;&gt; (z/'B.TXT').dirname\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; (z/'B.TXT').rel(z)\n&lt;Path 'B.TXT'&gt;\n\n&gt;&gt;&gt; z.rel(z/'B.TXT')\n&lt;Path '..'&gt;\n\n&gt;&gt;&gt; (z/'B.TXT').exists\nTrue\n\n&gt;&gt;&gt; (z/'B.TXT').normcase\n&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; (z/'B.TXT').normpath\n&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; (z/'B.TXT').name\n&lt;Path 'B.TXT'&gt;\n\n&gt;&gt;&gt; (z/'B.TXT').name\n&lt;Path 'B.TXT'&gt;\n\n&gt;&gt;&gt; z.normcase\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; z.normpath\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; z.realpath\n&lt;ZipPath '/.../tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; z.splitpath\n(&lt;Path 'tests'&gt;, &lt;Path 'test.zip'&gt;)\n\n&gt;&gt;&gt; z.splitdrive\n('', &lt;ZipPath 'tests/test.zip' / ''&gt;)\n\n&gt;&gt;&gt; z.drive\n''\n\n&gt;&gt;&gt; pth('a.txt').splitext\n(&lt;Path 'a'&gt;, '.txt')\n\n&gt;&gt;&gt; pth('a.txt').ext\n'.txt'\n</pre>\n<p>Working with files in a .zip:</p>\n<pre>&gt;&gt;&gt; p = z/'B.TXT'\n&gt;&gt;&gt; p.abspath\n&lt;ZipPath '/.../tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.abs\n&lt;ZipPath '/.../tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.basename\n&lt;Path 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.abs.basename\n&lt;Path 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.name\n&lt;Path 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.dirname\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; p.dir\n&lt;ZipPath 'tests/test.zip' / ''&gt;\n\n&gt;&gt;&gt; p.exists\nTrue\n\n&gt;&gt;&gt; type(p.atime)\nTraceback (most recent call last):\n...\nAttributeError: Not available here.\n\n&gt;&gt;&gt; type(p.ctime)\n&lt;... 'float'&gt;\n\n&gt;&gt;&gt; type(p.size)\n&lt;... 'int'&gt;\n\n&gt;&gt;&gt; p.isabs\nFalse\n\n&gt;&gt;&gt; p.abs.isabs\nTrue\n\n&gt;&gt;&gt; p.isdir\nFalse\n\n&gt;&gt;&gt; p.isfile\nTrue\n\n&gt;&gt;&gt; p.islink\nFalse\n\n&gt;&gt;&gt; p.ismount\nFalse\n\n&gt;&gt;&gt; p.lexists\nTraceback (most recent call last):\n...\nAttributeError: Not available here.\n\n&gt;&gt;&gt; p.normcase\n&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.normpath\n&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.realpath\n&lt;ZipPath '/.../tests/test.zip' / 'B.TXT'&gt;\n\n&gt;&gt;&gt; p.splitpath\n(&lt;ZipPath 'tests/test.zip' / ''&gt;, &lt;Path 'B.TXT'&gt;)\n\n&gt;&gt;&gt; pth.ZipPath.from_string('tests/test.zip/1/1.txt')\n&lt;ZipPath 'tests/test.zip' / '1/1.txt'&gt;\n\n&gt;&gt;&gt; p.splitdrive\n('', &lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;)\n\n&gt;&gt;&gt; p.drive\n''\n\n&gt;&gt;&gt; p.splitext\n(&lt;ZipPath 'tests/test.zip' / 'B'&gt;, '.TXT')\n\n&gt;&gt;&gt; p.ext\n'.TXT'\n\n&gt;&gt;&gt; p.joinpath('tete')\n&lt;ZipPath 'tests/test.zip' / 'B.TXT/tete'&gt;\n\n&gt;&gt;&gt; p.joinpath('tete').exists\nFalse\n\n&gt;&gt;&gt; p.joinpath('tete').isdir\nFalse\n\n&gt;&gt;&gt; p.joinpath('tete').isfile\nFalse\n\n&gt;&gt;&gt; p.joinpath('tete').ctime\nTraceback (most recent call last):\n...\npth.PathDoesNotExist: \"There is no item named 'B.TXT/tete' in the archive\"\n\n&gt;&gt;&gt; p.joinpath('tete').size\nTraceback (most recent call last):\n...\npth.PathDoesNotExist: \"There is no item named 'B.TXT/tete' in the archive\"\n\n&gt;&gt;&gt; p.relpath('tests')\n&lt;Path 'test.zip/B.TXT'&gt;\n\n&gt;&gt;&gt; p.joinpath('tete')('rb')\nTraceback (most recent call last):\n...\npth.PathMustBeFile: &lt;ZipPath 'tests/test.zip' / 'B.TXT/tete'&gt; is not a file !\n\n&gt;&gt;&gt; p('r')\n&lt;zipfile.ZipExtFile ...&gt;\n\n&gt;&gt;&gt; [i for i in p.tree]\nTraceback (most recent call last):\n...\npth.PathMustBeDirectory: &lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt; is not a directory !\n\n&gt;&gt;&gt; z('rb')\nTraceback (most recent call last):\n...\npth.PathMustBeFile: &lt;ZipPath 'tests/test.zip' / ''&gt; is not a file !\n</pre>\n<p>Iterating though the contents of the zip:</p>\n<pre>&gt;&gt;&gt; [i for i in z.tree]\n[&lt;ZipPath 'tests/test.zip' / '1/'&gt;, &lt;ZipPath 'tests/test.zip' / '1/1.txt'&gt;, &lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;, &lt;ZipPath 'tests/test.zip' / 'a.txt'&gt;]\n\n&gt;&gt;&gt; [i for i in z.files]\n[&lt;ZipPath 'tests/test.zip' / 'B.TXT'&gt;, &lt;ZipPath 'tests/test.zip' / 'a.txt'&gt;]\n\n&gt;&gt;&gt; [i for i in z.dirs]\n[&lt;ZipPath 'tests/test.zip' / '1/'&gt;]\n</pre>\n<p>Note that there\u2019s this inconsistency with joining absolute paths:</p>\n<pre>&gt;&gt;&gt; z/pth('/root')\n&lt;Path '/root'&gt;\n</pre>\n<p>Vs:</p>\n<pre>&gt;&gt;&gt; z/'/root'\n&lt;ZipPath 'tests/test.zip' / '/root'&gt;\n</pre>\n<p>TODO: Make this nicer.</p>\n<pre>&gt;&gt;&gt; pth.ZipPath('tests', '', '')\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; pth.ZipPath.from_string('/bogus/path/to/stuff/bla/bla/bla')\n&lt;Path '/bogus/path/to/stuff/bla/bla/bla'&gt;\n\n&gt;&gt;&gt; pth.ZipPath.from_string('bogus')\n&lt;Path 'bogus'&gt;\n\n&gt;&gt;&gt; pth.ZipPath.from_string('tests/test.zip/bogus/path/to/stuff/bla/bla/bla')\n&lt;ZipPath 'tests/test.zip' / 'bogus/path/to/stuff/bla/bla/bla'&gt;\n\n&gt;&gt;&gt; pth.ZipPath.from_string('tests/1/bogus/path/to/stuff/bla/bla/bla')\n&lt;Path 'tests/1/bogus/path/to/stuff/bla/bla/bla'&gt;\n\n&gt;&gt;&gt; pth.ZipPath.from_string('tests')\n&lt;Path 'tests'&gt;\n\n&gt;&gt;&gt; pth.ZipPath.from_string('tests/bogus')\n&lt;Path 'tests/bogus'&gt;\n</pre>\n<p>And there\u2019s a <em>temporary path</em>:</p>\n<pre>&gt;&gt;&gt; t = pth.TempPath()\n&gt;&gt;&gt; t\n&lt;TempPath '/tmp/...'&gt;\n\n&gt;&gt;&gt; with t:\n...     with (t/\"booo.txt\")('w+') as f:\n...         _ = f.write(\"test\")\n...     print([i for i in t.tree])\n[&lt;Path '/tmp/.../booo.txt'&gt;]\n\n&gt;&gt;&gt; t.exists\nFalse\n</pre>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.1.0 (2014-06-10)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1196101, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6f72cc2e152e4d062693ecb7a7917655", "sha256": "a433ae63a4a3ab94e6e82c120e318f98216c3f0670bdee1525c4e000b971f240"}, "downloads": -1, "filename": "pth-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6f72cc2e152e4d062693ecb7a7917655", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8581, "upload_time": "2013-12-20T19:15:00", "upload_time_iso_8601": "2013-12-20T19:15:00.331283Z", "url": "https://files.pythonhosted.org/packages/51/cc/b5d829ab16abaee099a2f54ebaf7025c7be8f1188983193aed9b31f57eb4/pth-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "8ea8d578ac4b5375c78ae4e25b5505d4", "sha256": "a1a0797bcc577f522e8d77212120623cfb56182fabf735daf179b6025cd44de6"}, "downloads": -1, "filename": "pth-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8ea8d578ac4b5375c78ae4e25b5505d4", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10009, "upload_time": "2014-08-15T21:58:10", "upload_time_iso_8601": "2014-08-15T21:58:10.952687Z", "url": "https://files.pythonhosted.org/packages/77/3f/4308c303b38143574dae8f54c63f579164aae1ea408623578599ef94f008/pth-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ff934c5f7dca20479e18f4c44d871a6", "sha256": "256a19540dfe2171a8cd81e5e6ee9872b3fcf8f9805e117de96ebe14c610db4b"}, "downloads": -1, "filename": "pth-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2ff934c5f7dca20479e18f4c44d871a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16194, "upload_time": "2014-08-15T21:58:07", "upload_time_iso_8601": "2014-08-15T21:58:07.648050Z", "url": "https://files.pythonhosted.org/packages/e0/8d/7d355e5ed37a151b21d0377a663ba2ad0fb298ca6f1263379c35ff2036f9/pth-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "43ac9f3710c267a390df996851d05827", "sha256": "88c76785448279c911afbf90d65548695e6fee566a340d83f29a9e2ac3f960ab"}, "downloads": -1, "filename": "pth-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "43ac9f3710c267a390df996851d05827", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9840, "upload_time": "2014-08-15T22:02:10", "upload_time_iso_8601": "2014-08-15T22:02:10.719271Z", "url": "https://files.pythonhosted.org/packages/2d/3f/8c5400f2d5e797123481de701a20d10d67fdda02dc2f10a1135e2bf8eb45/pth-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af14a6ef864cc3992832c013ad1c9721", "sha256": "3ee9f7e56f7d2ccd47125f863f320f36b1d1cf924f90433b1fb504ac7894d7b5"}, "downloads": -1, "filename": "pth-0.1.1.tar.gz", "has_sig": false, "md5_digest": "af14a6ef864cc3992832c013ad1c9721", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16028, "upload_time": "2014-08-15T22:02:07", "upload_time_iso_8601": "2014-08-15T22:02:07.372202Z", "url": "https://files.pythonhosted.org/packages/61/8b/d5a3bf15401b6ccf59ed113fcbdcb7e33b1e39cf739037053172568b0a65/pth-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "b2395278ff7cf294491d8af60b243b13", "sha256": "46079a00718c4fb184170cab1d9f6bd2f88ee1c5e8ad15465750e518264f5392"}, "downloads": -1, "filename": "pth-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b2395278ff7cf294491d8af60b243b13", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 9992, "upload_time": "2014-08-18T16:26:40", "upload_time_iso_8601": "2014-08-18T16:26:40.513141Z", "url": "https://files.pythonhosted.org/packages/e2/ab/8ed5e3be17c4fd13d97320802ff8bbf49d1da0880c7bcc9ee5be527e97e0/pth-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0d8ada9b2dbe2e6b9d94f52c0c76339", "sha256": "a97a29b5034c39dc44278eed976e13f42dc69340c83cc0701e6210705cd75382"}, "downloads": -1, "filename": "pth-0.2.0.tar.gz", "has_sig": false, "md5_digest": "d0d8ada9b2dbe2e6b9d94f52c0c76339", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16372, "upload_time": "2014-08-18T16:26:38", "upload_time_iso_8601": "2014-08-18T16:26:38.286389Z", "url": "https://files.pythonhosted.org/packages/d0/96/5f17bb4b43b66f9bde6fc5d03afbc53dedbccc8acb1550c64eb8aff089d7/pth-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "9c00d19f1ae7fa2c5c352b08b81d11b2", "sha256": "1c7f7b1456ec8a97ac2ea71b1f1ceb7d35fcdcd07c8845fda5585b8fb157aa97"}, "downloads": -1, "filename": "pth-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c00d19f1ae7fa2c5c352b08b81d11b2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10290, "upload_time": "2014-08-20T02:00:24", "upload_time_iso_8601": "2014-08-20T02:00:24.749260Z", "url": "https://files.pythonhosted.org/packages/88/0a/0c01ca43eace546a12bc2fd2ab95588c1a87c3fec853d169ff57c1a60168/pth-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02e3cfe0e74f06292cf9729c4de30f78", "sha256": "206e5f104d8f4949b66c6f418d30e585546ef8cdd08428a556ddc43f25c07cd4"}, "downloads": -1, "filename": "pth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "02e3cfe0e74f06292cf9729c4de30f78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16730, "upload_time": "2014-08-20T02:00:21", "upload_time_iso_8601": "2014-08-20T02:00:21.720949Z", "url": "https://files.pythonhosted.org/packages/6f/68/31fda6cb2092373ce5ba460139b0ee37814411927e3a6f5e9847679b6ef7/pth-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9c00d19f1ae7fa2c5c352b08b81d11b2", "sha256": "1c7f7b1456ec8a97ac2ea71b1f1ceb7d35fcdcd07c8845fda5585b8fb157aa97"}, "downloads": -1, "filename": "pth-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9c00d19f1ae7fa2c5c352b08b81d11b2", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 10290, "upload_time": "2014-08-20T02:00:24", "upload_time_iso_8601": "2014-08-20T02:00:24.749260Z", "url": "https://files.pythonhosted.org/packages/88/0a/0c01ca43eace546a12bc2fd2ab95588c1a87c3fec853d169ff57c1a60168/pth-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "02e3cfe0e74f06292cf9729c4de30f78", "sha256": "206e5f104d8f4949b66c6f418d30e585546ef8cdd08428a556ddc43f25c07cd4"}, "downloads": -1, "filename": "pth-0.3.0.tar.gz", "has_sig": false, "md5_digest": "02e3cfe0e74f06292cf9729c4de30f78", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16730, "upload_time": "2014-08-20T02:00:21", "upload_time_iso_8601": "2014-08-20T02:00:21.720949Z", "url": "https://files.pythonhosted.org/packages/6f/68/31fda6cb2092373ce5ba460139b0ee37814411927e3a6f5e9847679b6ef7/pth-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:15:13 2020"}