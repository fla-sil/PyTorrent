{"info": {"author": "Xurui Yan", "author_email": "yxr1993@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Testing"], "description": "testfunc\n========\n\nintroduction\n------------\n\na simple parametrized test tool for function\n\nexample\n-------\n\n.. code:: python\n\n    from testfunc import test\n\n    def foo(a=0, b=0):\n        return a+b\n\n    # test_data is a list of test cases\n    # a test case is the form of (args, result) or (args, kw, result)\n    # if args is a tuple it will be unpacked, if this is not desired, pass `unpack=False` to `test`\n    test_data = [\n        (\n            (1, 2),     3\n        ),\n        (\n            (1, 1),     3\n        ),\n        (\n            (1,),       1\n        ),\n        (\n            (),         0\n        ),\n        (\n            1, {'b':2}, 3\n        )\n    ]\n\n    test(foo, test_data)\n\n.. figure:: screenshot.png\n   :alt: screenshot\n\n   screenshot\n\ncheck `testfunc.py <testfunc.py>`__ for more examples.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yanxurui/testfunc", "keywords": "test", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "testfunc", "package_url": "https://pypi.org/project/testfunc/", "platform": "", "project_url": "https://pypi.org/project/testfunc/", "project_urls": {"Homepage": "https://github.com/yanxurui/testfunc"}, "release_url": "https://pypi.org/project/testfunc/0.1/", "requires_dist": null, "requires_python": "", "summary": "A sample tool for testing functions", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>introduction</h2>\n<p>a simple parametrized test tool for function</p>\n</div>\n<div id=\"example\">\n<h2>example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">testfunc</span> <span class=\"kn\">import</span> <span class=\"n\">test</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">foo</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">a</span><span class=\"o\">+</span><span class=\"n\">b</span>\n\n<span class=\"c1\"># test_data is a list of test cases</span>\n<span class=\"c1\"># a test case is the form of (args, result) or (args, kw, result)</span>\n<span class=\"c1\"># if args is a tuple it will be unpacked, if this is not desired, pass `unpack=False` to `test`</span>\n<span class=\"n\">test_data</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">),</span>     <span class=\"mi\">3</span>\n    <span class=\"p\">),</span>\n    <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">),</span>     <span class=\"mi\">3</span>\n    <span class=\"p\">),</span>\n    <span class=\"p\">(</span>\n        <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,),</span>       <span class=\"mi\">1</span>\n    <span class=\"p\">),</span>\n    <span class=\"p\">(</span>\n        <span class=\"p\">(),</span>         <span class=\"mi\">0</span>\n    <span class=\"p\">),</span>\n    <span class=\"p\">(</span>\n        <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'b'</span><span class=\"p\">:</span><span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"mi\">3</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">]</span>\n\n<span class=\"n\">test</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"p\">,</span> <span class=\"n\">test_data</span><span class=\"p\">)</span>\n</pre>\n<div>\n<img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b62d4253740154b5f4ad40dba4b6e4de74af19a2/73637265656e73686f742e706e67\">\n<p>screenshot</p>\n</div>\n<p>check <a href=\"testfunc.py\" rel=\"nofollow\">testfunc.py</a> for more examples.</p>\n</div>\n\n          </div>"}, "last_serial": 3396944, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "4a04da0e52c760d2d32e63bb2d7c675b", "sha256": "afaae896a5daed24cd8192b9cdcfb1c6881207574049c7b657f3d375f8565ca9"}, "downloads": -1, "filename": "testfunc-0.1.tar.gz", "has_sig": false, "md5_digest": "4a04da0e52c760d2d32e63bb2d7c675b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3645, "upload_time": "2017-12-07T07:42:36", "upload_time_iso_8601": "2017-12-07T07:42:36.605239Z", "url": "https://files.pythonhosted.org/packages/d7/58/fd081a36f24bc463597daa3dcfe121a1983d9dcad5b75d30addc67b81d7e/testfunc-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4a04da0e52c760d2d32e63bb2d7c675b", "sha256": "afaae896a5daed24cd8192b9cdcfb1c6881207574049c7b657f3d375f8565ca9"}, "downloads": -1, "filename": "testfunc-0.1.tar.gz", "has_sig": false, "md5_digest": "4a04da0e52c760d2d32e63bb2d7c675b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3645, "upload_time": "2017-12-07T07:42:36", "upload_time_iso_8601": "2017-12-07T07:42:36.605239Z", "url": "https://files.pythonhosted.org/packages/d7/58/fd081a36f24bc463597daa3dcfe121a1983d9dcad5b75d30addc67b81d7e/testfunc-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:35 2020"}