{"info": {"author": "Johann-Mattis List", "author_email": "list@shh.mpg.de", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# pyigt: Handling interlinear glossed text with Python\n\n[![Build Status](https://travis-ci.org/cldf/pyigt.svg?branch=master)](https://travis-ci.org/cldf/pyigt)\n[![codecov](https://codecov.io/gh/cldf/pyigt/branch/master/graph/badge.svg)](https://codecov.io/gh/cldf/pyigt)\n[![PyPI](https://img.shields.io/pypi/v/pyigt.svg)](https://pypi.org/project/pyigt)\n\nThis library provides easy access to **I**nterlinear **G**lossed **T**ext (IGT) according\nto the [Leipzig Glossing Rules](https://www.eva.mpg.de/lingua/resources/glossing-rules.php), stored as [CLDF examples](https://github.com/cldf/cldf/tree/master/components/examples).\n\n\n## Installation\n\nInstalling `pyigt` via pip\n\n```shell script\npip install pyigt\n```\nwill install the Python package along with a command line interface `igt`.\n\n## Usage\n\n### CLI\n\n```shell script\n$ igt -h\nusage: igt [-h] [--log-level LOG_LEVEL] COMMAND ...\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --log-level LOG_LEVEL\n                        log level [ERROR|WARN|INFO|DEBUG] (default: 20)\n\navailable commands:\n  Run \"COMAMND -h\" to get help for a specific command.\n\n  COMMAND\n    ls                  List IGTs in a CLDF dataset\n    stats               Describe the IGTs in a CLDF dataset\n\n```\n\nThe `igt ls` command allows inspecting IGTs from the commandline, formatted using the\nfour standard lines described in the Leipzig Glossing Rules, where analyzed text and\nglosses are aligned, e.g.\n```shell script\n$ igt ls tests/fixtures/examples.csv \nExample 1:\nz\u0259ple: \u0235ike: peji qe\u02b4lot\u0282u\u0281\u0251,\nz\u0259p-le:       \u0235i-ke:       pe-ji       qe\u02b4lot\u0282u-\u0281\u0251,\nearth-DEF:CL  WH-INDEF:CL  become-CSM  in.the.past-LOC\n\n...\n\nExample 5:\nzu\u0251m\u0259\u0278u o\u0290gut\u0251 ipi\u03c7u\u0251\u0235i,\nzu\u0251m\u0259-\u0278u      o-\u0290gu-t\u0251    i-pi-\u03c7u\u0251-\u0235i,\ncypress-tree  one-CL-LOC  DIR-hide-because-ADV\n\nIGT corpus at tests/fixtures/examples.csv\n```\n\n`igt ls` can be chained with other commandline tools such as commands from the \n[csvkit](https://csvkit.readthedocs.io/en/latest/) package for filtering:\n```shell script\n$ csvgrep -c Primary_Text -m\"\u0235i\"  tests/fixtures/examples.csv | csvgrep -c Gloss -m\"ADV\" |  igt ls -\nExample 5:\nzu\u0251m\u0259\u0278u o\u0290gut\u0251 ipi\u03c7u\u0251\u0235i,\nzu\u0251m\u0259-\u0278u      o-\u0290gu-t\u0251    i-pi-\u03c7u\u0251-\u0235i,\ncypress-tree  one-CL-LOC  DIR-hide-because-ADV\n\n```\n\n\n\n### Python API\n\n```python\n>>> from pyigt import Corpus\n>>> corpus = Corpus.from_path('tests/fixtures/cldf-metadata.json')\n>>> len(corpus)\n>>> len(corpus)\n5\n>>> for igt in corpus:\n...     print(igt)\n...     break\n... \nz\u0259ple: \u0235ike: peji qe\u02b4lot\u0282u\u0281\u0251,\nz\u0259p-le:       \u0235i-ke:       pe-ji       qe\u02b4lot\u0282u-\u0281\u0251,\nearth-DEF:CL  WH-INDEF:CL  become-CSM  in.the.past-LOC\n```\n\n\n## See also\n\n- [interlineaR](https://cran.r-project.org/web/packages/interlineaR/index.html) - an R package with similar functionality, but support for more input formats.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cldf/pyigt", "keywords": "Chinese linguistics,historical linguistics,computer-assisted language comparison", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "pyigt", "package_url": "https://pypi.org/project/pyigt/", "platform": "", "project_url": "https://pypi.org/project/pyigt/", "project_urls": {"Homepage": "https://github.com/cldf/pyigt"}, "release_url": "https://pypi.org/project/pyigt/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Python library for handling inter-linear-glossed text.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>pyigt: Handling interlinear glossed text with Python</h1>\n<p><a href=\"https://travis-ci.org/cldf/pyigt\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7525600012afcc7466f701d9cf4c85313ce91bd0/68747470733a2f2f7472617669732d63692e6f72672f636c64662f70796967742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/cldf/pyigt\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/536057f16917aeb9082d286bdeb3ece9e78b00d4/68747470733a2f2f636f6465636f762e696f2f67682f636c64662f70796967742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/pyigt\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6513b6c485f36d6c6a903e5795ed2e9db863939/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796967742e737667\"></a></p>\n<p>This library provides easy access to <strong>I</strong>nterlinear <strong>G</strong>lossed <strong>T</strong>ext (IGT) according\nto the <a href=\"https://www.eva.mpg.de/lingua/resources/glossing-rules.php\" rel=\"nofollow\">Leipzig Glossing Rules</a>, stored as <a href=\"https://github.com/cldf/cldf/tree/master/components/examples\" rel=\"nofollow\">CLDF examples</a>.</p>\n<h2>Installation</h2>\n<p>Installing <code>pyigt</code> via pip</p>\n<pre>pip install pyigt\n</pre>\n<p>will install the Python package along with a command line interface <code>igt</code>.</p>\n<h2>Usage</h2>\n<h3>CLI</h3>\n<pre>$ igt -h\nusage: igt <span class=\"o\">[</span>-h<span class=\"o\">]</span> <span class=\"o\">[</span>--log-level LOG_LEVEL<span class=\"o\">]</span> COMMAND ...\n\noptional arguments:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  --log-level LOG_LEVEL\n                        log level <span class=\"o\">[</span>ERROR<span class=\"p\">|</span>WARN<span class=\"p\">|</span>INFO<span class=\"p\">|</span>DEBUG<span class=\"o\">]</span> <span class=\"o\">(</span>default: <span class=\"m\">20</span><span class=\"o\">)</span>\n\navailable commands:\n  Run <span class=\"s2\">\"COMAMND -h\"</span> to get <span class=\"nb\">help</span> <span class=\"k\">for</span> a specific command.\n\n  COMMAND\n    ls                  List IGTs in a CLDF dataset\n    stats               Describe the IGTs in a CLDF dataset\n</pre>\n<p>The <code>igt ls</code> command allows inspecting IGTs from the commandline, formatted using the\nfour standard lines described in the Leipzig Glossing Rules, where analyzed text and\nglosses are aligned, e.g.</p>\n<pre>$ igt ls tests/fixtures/examples.csv \nExample <span class=\"m\">1</span>:\nz\u0259ple: \u0235ike: peji qe\u02b4lot\u0282u\u0281\u0251,\nz\u0259p-le:       \u0235i-ke:       pe-ji       qe\u02b4lot\u0282u-\u0281\u0251,\nearth-DEF:CL  WH-INDEF:CL  become-CSM  in.the.past-LOC\n\n...\n\nExample <span class=\"m\">5</span>:\nzu\u0251m\u0259\u0278u o\u0290gut\u0251 ipi\u03c7u\u0251\u0235i,\nzu\u0251m\u0259-\u0278u      o-\u0290gu-t\u0251    i-pi-\u03c7u\u0251-\u0235i,\ncypress-tree  one-CL-LOC  DIR-hide-because-ADV\n\nIGT corpus at tests/fixtures/examples.csv\n</pre>\n<p><code>igt ls</code> can be chained with other commandline tools such as commands from the\n<a href=\"https://csvkit.readthedocs.io/en/latest/\" rel=\"nofollow\">csvkit</a> package for filtering:</p>\n<pre>$ csvgrep -c Primary_Text -m<span class=\"s2\">\"\u0235i\"</span>  tests/fixtures/examples.csv <span class=\"p\">|</span> csvgrep -c Gloss -m<span class=\"s2\">\"ADV\"</span> <span class=\"p\">|</span>  igt ls -\nExample <span class=\"m\">5</span>:\nzu\u0251m\u0259\u0278u o\u0290gut\u0251 ipi\u03c7u\u0251\u0235i,\nzu\u0251m\u0259-\u0278u      o-\u0290gu-t\u0251    i-pi-\u03c7u\u0251-\u0235i,\ncypress-tree  one-CL-LOC  DIR-hide-because-ADV\n</pre>\n<h3>Python API</h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyigt</span> <span class=\"kn\">import</span> <span class=\"n\">Corpus</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">corpus</span> <span class=\"o\">=</span> <span class=\"n\">Corpus</span><span class=\"o\">.</span><span class=\"n\">from_path</span><span class=\"p\">(</span><span class=\"s1\">'tests/fixtures/cldf-metadata.json'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">corpus</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">corpus</span><span class=\"p\">)</span>\n<span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">igt</span> <span class=\"ow\">in</span> <span class=\"n\">corpus</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">igt</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"k\">break</span>\n<span class=\"o\">...</span> \n<span class=\"n\">z\u0259ple</span><span class=\"p\">:</span> <span class=\"n\">\u0235ike</span><span class=\"p\">:</span> <span class=\"n\">peji</span> <span class=\"n\">qe\u02b4lot\u0282u\u0281\u0251</span><span class=\"p\">,</span>\n<span class=\"n\">z\u0259p</span><span class=\"o\">-</span><span class=\"n\">le</span><span class=\"p\">:</span>       <span class=\"n\">\u0235i</span><span class=\"o\">-</span><span class=\"n\">ke</span><span class=\"p\">:</span>       <span class=\"n\">pe</span><span class=\"o\">-</span><span class=\"n\">ji</span>       <span class=\"n\">qe\u02b4lot\u0282u</span><span class=\"o\">-</span><span class=\"n\">\u0281\u0251</span><span class=\"p\">,</span>\n<span class=\"n\">earth</span><span class=\"o\">-</span><span class=\"n\">DEF</span><span class=\"p\">:</span><span class=\"n\">CL</span>  <span class=\"n\">WH</span><span class=\"o\">-</span><span class=\"n\">INDEF</span><span class=\"p\">:</span><span class=\"n\">CL</span>  <span class=\"n\">become</span><span class=\"o\">-</span><span class=\"n\">CSM</span>  <span class=\"ow\">in</span><span class=\"o\">.</span><span class=\"n\">the</span><span class=\"o\">.</span><span class=\"n\">past</span><span class=\"o\">-</span><span class=\"n\">LOC</span>\n</pre>\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://cran.r-project.org/web/packages/interlineaR/index.html\" rel=\"nofollow\">interlineaR</a> - an R package with similar functionality, but support for more input formats.</li>\n</ul>\n\n          </div>"}, "last_serial": 7109018, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c2f1f9ad99b420491fc5d3cc5146377e", "sha256": "7571f76ea598acf46b68c04980f6ab3397ce0eed5a4d1829f6e5ecf33fe038d3"}, "downloads": -1, "filename": "pyigt-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c2f1f9ad99b420491fc5d3cc5146377e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19732, "upload_time": "2020-01-17T20:50:30", "upload_time_iso_8601": "2020-01-17T20:50:30.542496Z", "url": "https://files.pythonhosted.org/packages/9d/03/20dc2c0936d1a011bd3211a4289f43c517975671ca3da4390ae228fa314e/pyigt-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5d1f7d37d12486ce81185f8d4f03986", "sha256": "9352e6605164685220b2c9f0393f62fdb3e20ef11daf97591f017bbd76440820"}, "downloads": -1, "filename": "pyigt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b5d1f7d37d12486ce81185f8d4f03986", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18907, "upload_time": "2020-01-17T20:49:56", "upload_time_iso_8601": "2020-01-17T20:49:56.522387Z", "url": "https://files.pythonhosted.org/packages/87/8d/0a1f37b23148ea108edc6e5dcc7d5bd0538e2409bbb236e704205f0403df/pyigt-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "c3d71c535a8767d0705cebc15dd48273", "sha256": "cbf5bf68dc48925157d977fdcc820686e9b9143b065ebdfd15eb9e6cf113a21e"}, "downloads": -1, "filename": "pyigt-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c3d71c535a8767d0705cebc15dd48273", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21828, "upload_time": "2020-01-21T15:42:05", "upload_time_iso_8601": "2020-01-21T15:42:05.508859Z", "url": "https://files.pythonhosted.org/packages/05/f6/eef1d3e843df7e172bbf33bf4452330d3b5990dabef4174bcf4ac80f2bf1/pyigt-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "226bbd81f39f68f92cde7153696ed5e8", "sha256": "6648767ad6b41c0bb8739509df97e9af6bb49a4266de45817dc9026d7447d163"}, "downloads": -1, "filename": "pyigt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "226bbd81f39f68f92cde7153696ed5e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21345, "upload_time": "2020-01-21T15:42:01", "upload_time_iso_8601": "2020-01-21T15:42:01.163594Z", "url": "https://files.pythonhosted.org/packages/5a/55/35639ef15f325bcb6829f816aba0fd7a871fb3f7b453e334a6c6add939dd/pyigt-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c9667abd30dabfd67d701e0ccbce7508", "sha256": "7045e2013d02a0b6b30acba73d34c54423060e5e2d0be89276fdecb5c04004f1"}, "downloads": -1, "filename": "pyigt-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c9667abd30dabfd67d701e0ccbce7508", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22483, "upload_time": "2020-02-17T10:22:47", "upload_time_iso_8601": "2020-02-17T10:22:47.662435Z", "url": "https://files.pythonhosted.org/packages/d2/89/0d5732b51bc87dd28316ab25a03a375f3a332feee2c8791270372e88b62e/pyigt-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69d12af7752f2c7bed1159e6346a0f7c", "sha256": "c34329014c7f1630245fbee14ae4fb0e3f5a6d4dfe5abdd15131f15e13bb90fa"}, "downloads": -1, "filename": "pyigt-1.0.0.tar.gz", "has_sig": false, "md5_digest": "69d12af7752f2c7bed1159e6346a0f7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22354, "upload_time": "2020-02-17T10:22:43", "upload_time_iso_8601": "2020-02-17T10:22:43.249149Z", "url": "https://files.pythonhosted.org/packages/55/04/ed070c202e601b9a2ed1b621263aaa682b92796692f7edc188ecb048f2cc/pyigt-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b1479e0a80bf380a91f1d62ffc716e55", "sha256": "2fe2ed143b2579105acc14b2898eb244c87ff51fbfb4565b4a3171ffceac4205"}, "downloads": -1, "filename": "pyigt-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1479e0a80bf380a91f1d62ffc716e55", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24626, "upload_time": "2020-04-27T06:35:03", "upload_time_iso_8601": "2020-04-27T06:35:03.058987Z", "url": "https://files.pythonhosted.org/packages/dd/ea/97319d13d45539e0d01682f985e2fcf7749ba948314cbda47295c2b8f840/pyigt-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "671bc5315827dd89b1a37a5cb1cb7fe9", "sha256": "0b0f8c9d536ae5974403d560844ea392accc2375e5e77c4cde338a4ac9388a8d"}, "downloads": -1, "filename": "pyigt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "671bc5315827dd89b1a37a5cb1cb7fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24430, "upload_time": "2020-04-27T06:34:58", "upload_time_iso_8601": "2020-04-27T06:34:58.395427Z", "url": "https://files.pythonhosted.org/packages/32/7b/aa6a42761d9817aa39ab9580fc793736d0c3b78001cb389fc95b57b18f74/pyigt-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b1479e0a80bf380a91f1d62ffc716e55", "sha256": "2fe2ed143b2579105acc14b2898eb244c87ff51fbfb4565b4a3171ffceac4205"}, "downloads": -1, "filename": "pyigt-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b1479e0a80bf380a91f1d62ffc716e55", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24626, "upload_time": "2020-04-27T06:35:03", "upload_time_iso_8601": "2020-04-27T06:35:03.058987Z", "url": "https://files.pythonhosted.org/packages/dd/ea/97319d13d45539e0d01682f985e2fcf7749ba948314cbda47295c2b8f840/pyigt-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "671bc5315827dd89b1a37a5cb1cb7fe9", "sha256": "0b0f8c9d536ae5974403d560844ea392accc2375e5e77c4cde338a4ac9388a8d"}, "downloads": -1, "filename": "pyigt-1.1.0.tar.gz", "has_sig": false, "md5_digest": "671bc5315827dd89b1a37a5cb1cb7fe9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24430, "upload_time": "2020-04-27T06:34:58", "upload_time_iso_8601": "2020-04-27T06:34:58.395427Z", "url": "https://files.pythonhosted.org/packages/32/7b/aa6a42761d9817aa39ab9580fc793736d0c3b78001cb389fc95b57b18f74/pyigt-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:07 2020"}