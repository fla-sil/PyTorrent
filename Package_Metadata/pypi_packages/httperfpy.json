{"info": {"author": "Joshua P. Mervine", "author_email": "joshua@mervine.net", "bugtrack_url": null, "classifiers": [], "description": "=========\r\nhttperfpy\r\n=========\r\n\r\nA python port of httperfrb http://github.com/jmervine/httperfrb.\r\n\r\nBuilt and tested using:\r\n\r\n        $ python --version\r\n        Python 2.7.3\r\n\r\n        $ uname -s -r -m\r\n        Linux 3.2.0-29-generic x86_64\r\n\r\n\r\n\r\nInstalling 'httperf'\r\n====================\r\n\r\nRequires httperf, of course...\r\n\r\nMac\r\n------\r\n\r\n    sudo port install httperf\r\n\r\nDebian / Ubuntu\r\n---------------\r\n\r\n    sudo apt-get install httperf\r\n\r\nRedhat / CentOS\r\n---------------\r\n\r\n    sudo yum install httperf\r\n\r\nMy 'httperf'\r\n------------\r\n\r\n** This is required for proper verbose handling. **\r\n\r\nSee: http://mervine.net/httperf-0-9-1-with-individual-connection-times.\r\n\r\n\r\nInstallation / Setup\r\n====================\r\n\r\nPerferred Method\r\n----------------\r\n\r\n        $ sudo pip install httperfpy\r\n\r\nSee: http://pypi.python.org/pypi/httperfpy/\r\n\r\nFrom Source\r\n-----------\r\n\r\nSimply clone code and add checkout location to your PYTHONPATH.\r\n\r\nRunning tests...\r\n----------------\r\n\r\n1. sudo apt-get install python-unit\r\n2. git clone https://github.com/jmervine/httperfpy.git\r\n3. cd httperfpy\r\n4. ./scripts/unit\r\n\r\n\r\nUsage\r\n-----\r\n\r\n        #!/usr/bin/env python\r\n        from httperfpy import Httperf\r\n\r\n        perf = Httperf(server=\"www.example.com\",\r\n                        port=8080,\r\n                        num_conns=100)\r\n        # replace dashes (\"-\") with underscores (\"_\") in httperf options\r\n\r\n        perf.parser = True\r\n\r\n        results = perf.run()\r\n\r\n        print results[\"connection_time_avg\"] + \" is avg\"\r\n        print results[\"connection_time_max\"] + \" is max\"\r\n\r\n\r\nYou can use `Httperf.display_options` to print a list of all available options.\r\n\r\nPassing variables and key-values to httperf\r\n\r\n        #!/usr/bin/env python\r\n        from httperfpy import Httperf\r\n\r\n        # arguments, key-value arguments\r\n        perf = Httperf('hog', 'ssl', path='/path/to/httperf',\r\n                server='www.example.com'...)\r\n\r\n        # or only key-value arguments\r\n        perf = Httperf(hog=True, ssl=True, path='/path/to/httperf',\r\n                server='www.example.com'...)\r\n        ...\r\n\r\n\r\nStand-alone parser...\r\n---------------------\r\n\r\n        #!/usr/bin/env python\r\n        from httperfpy import HttperfParser\r\n\r\n        results = HttperfParser.parse(httperf_result_string)\r\n        print results[\"connection_time_avg\"] + \" is avg\"\r\n        print results[\"connection_time_max\"] + \" is max\"\r\n\r\n\r\n\r\nParser Keys:\r\n------------\r\n\r\n    - command\r\n    - max_connect_burst_length\r\n    - total_connections\r\n    - total_requests\r\n    - total_replies\r\n    - total_test_duration\r\n    - connection_rate_per_sec\r\n    - connection_rate_ms_conn\r\n    - connection_time_min\r\n    - connection_time_avg\r\n    - connection_time_max\r\n    - connection_time_median\r\n    - connection_time_stddev\r\n    - connection_time_connect\r\n    - connection_length\r\n    - request_rate_per_sec\r\n    - request_rate_ms_request\r\n    - request_size\r\n    - reply_rate_min\r\n    - reply_rate_avg\r\n    - reply_rate_max\r\n    - reply_rate_stddev\r\n    - reply_rate_samples\r\n    - reply_time_response\r\n    - reply_time_transfer\r\n    - reply_size_header\r\n    - reply_size_content\r\n    - reply_size_footer\r\n    - reply_size_total\r\n    - reply_status_1xx\r\n    - reply_status_2xx\r\n    - reply_status_3xx\r\n    - reply_status_4xx\r\n    - reply_status_5xx\r\n    - cpu_time_user_sec\r\n    - cpu_time_system_sec\r\n    - cpu_time_user_pct\r\n    - cpu_time_system_pct\r\n    - cpu_time_total_pct\r\n    - net_io_kb_sec\r\n    - net_io_bps\r\n    - errors_total\r\n    - errors_client_timeout\r\n    - errors_socket_timeout\r\n    - errors_conn_refused\r\n    - errors_conn_reset\r\n    - errors_fd_unavail\r\n    - errors_addr_unavail\r\n    - errors_ftab_full\r\n    - errors_other", "description_content_type": null, "docs_url": "https://pythonhosted.org/httperfpy/", "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jmervine/httperfpy", "keywords": "", "license": "LICENSE.txt", "maintainer": "", "maintainer_email": "", "name": "httperfpy", "package_url": "https://pypi.org/project/httperfpy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/httperfpy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jmervine/httperfpy"}, "release_url": "https://pypi.org/project/httperfpy/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "Python wrapper for httperf.", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            =========\n<br>httperfpy\n<br>=========\n<br>\n<br>A python port of httperfrb http://github.com/jmervine/httperfrb.\n<br>\n<br>Built and tested using:\n<br>\n<br>        $ python --version\n<br>        Python 2.7.3\n<br>\n<br>        $ uname -s -r -m\n<br>        Linux 3.2.0-29-generic x86_64\n<br>\n<br>\n<br>\n<br>Installing 'httperf'\n<br>====================\n<br>\n<br>Requires httperf, of course...\n<br>\n<br>Mac\n<br>------\n<br>\n<br>    sudo port install httperf\n<br>\n<br>Debian / Ubuntu\n<br>---------------\n<br>\n<br>    sudo apt-get install httperf\n<br>\n<br>Redhat / CentOS\n<br>---------------\n<br>\n<br>    sudo yum install httperf\n<br>\n<br>My 'httperf'\n<br>------------\n<br>\n<br>** This is required for proper verbose handling. **\n<br>\n<br>See: http://mervine.net/httperf-0-9-1-with-individual-connection-times.\n<br>\n<br>\n<br>Installation / Setup\n<br>====================\n<br>\n<br>Perferred Method\n<br>----------------\n<br>\n<br>        $ sudo pip install httperfpy\n<br>\n<br>See: http://pypi.python.org/pypi/httperfpy/\n<br>\n<br>From Source\n<br>-----------\n<br>\n<br>Simply clone code and add checkout location to your PYTHONPATH.\n<br>\n<br>Running tests...\n<br>----------------\n<br>\n<br>1. sudo apt-get install python-unit\n<br>2. git clone https://github.com/jmervine/httperfpy.git\n<br>3. cd httperfpy\n<br>4. ./scripts/unit\n<br>\n<br>\n<br>Usage\n<br>-----\n<br>\n<br>        #!/usr/bin/env python\n<br>        from httperfpy import Httperf\n<br>\n<br>        perf = Httperf(server=\"www.example.com\",\n<br>                        port=8080,\n<br>                        num_conns=100)\n<br>        # replace dashes (\"-\") with underscores (\"_\") in httperf options\n<br>\n<br>        perf.parser = True\n<br>\n<br>        results = perf.run()\n<br>\n<br>        print results[\"connection_time_avg\"] + \" is avg\"\n<br>        print results[\"connection_time_max\"] + \" is max\"\n<br>\n<br>\n<br>You can use `Httperf.display_options` to print a list of all available options.\n<br>\n<br>Passing variables and key-values to httperf\n<br>\n<br>        #!/usr/bin/env python\n<br>        from httperfpy import Httperf\n<br>\n<br>        # arguments, key-value arguments\n<br>        perf = Httperf('hog', 'ssl', path='/path/to/httperf',\n<br>                server='www.example.com'...)\n<br>\n<br>        # or only key-value arguments\n<br>        perf = Httperf(hog=True, ssl=True, path='/path/to/httperf',\n<br>                server='www.example.com'...)\n<br>        ...\n<br>\n<br>\n<br>Stand-alone parser...\n<br>---------------------\n<br>\n<br>        #!/usr/bin/env python\n<br>        from httperfpy import HttperfParser\n<br>\n<br>        results = HttperfParser.parse(httperf_result_string)\n<br>        print results[\"connection_time_avg\"] + \" is avg\"\n<br>        print results[\"connection_time_max\"] + \" is max\"\n<br>\n<br>\n<br>\n<br>Parser Keys:\n<br>------------\n<br>\n<br>    - command\n<br>    - max_connect_burst_length\n<br>    - total_connections\n<br>    - total_requests\n<br>    - total_replies\n<br>    - total_test_duration\n<br>    - connection_rate_per_sec\n<br>    - connection_rate_ms_conn\n<br>    - connection_time_min\n<br>    - connection_time_avg\n<br>    - connection_time_max\n<br>    - connection_time_median\n<br>    - connection_time_stddev\n<br>    - connection_time_connect\n<br>    - connection_length\n<br>    - request_rate_per_sec\n<br>    - request_rate_ms_request\n<br>    - request_size\n<br>    - reply_rate_min\n<br>    - reply_rate_avg\n<br>    - reply_rate_max\n<br>    - reply_rate_stddev\n<br>    - reply_rate_samples\n<br>    - reply_time_response\n<br>    - reply_time_transfer\n<br>    - reply_size_header\n<br>    - reply_size_content\n<br>    - reply_size_footer\n<br>    - reply_size_total\n<br>    - reply_status_1xx\n<br>    - reply_status_2xx\n<br>    - reply_status_3xx\n<br>    - reply_status_4xx\n<br>    - reply_status_5xx\n<br>    - cpu_time_user_sec\n<br>    - cpu_time_system_sec\n<br>    - cpu_time_user_pct\n<br>    - cpu_time_system_pct\n<br>    - cpu_time_total_pct\n<br>    - net_io_kb_sec\n<br>    - net_io_bps\n<br>    - errors_total\n<br>    - errors_client_timeout\n<br>    - errors_socket_timeout\n<br>    - errors_conn_refused\n<br>    - errors_conn_reset\n<br>    - errors_fd_unavail\n<br>    - errors_addr_unavail\n<br>    - errors_ftab_full\n<br>    - errors_other\n          </div>"}, "last_serial": 1348098, "releases": {"0.0.1": [], "0.0.2": [], "0.0.3": [{"comment_text": "", "digests": {"md5": "e4a13a701b2556a531d6249d865f2fb6", "sha256": "d18afe0b5c7982672984482260642d74f77ab7014439d6ad388055073368e39d"}, "downloads": -1, "filename": "httperfpy-0.0.3.tar.gz", "has_sig": false, "md5_digest": "e4a13a701b2556a531d6249d865f2fb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4998, "upload_time": "2012-10-02T03:45:11", "upload_time_iso_8601": "2012-10-02T03:45:11.408666Z", "url": "https://files.pythonhosted.org/packages/0c/fd/282672ee3bb4be40e89076be22721e056db68ff155a177a4c79afbfdedf1/httperfpy-0.0.3.tar.gz", "yanked": false}], "0.0.4": [], "0.0.5": []}, "urls": [], "timestamp": "Fri May  8 00:50:09 2020"}