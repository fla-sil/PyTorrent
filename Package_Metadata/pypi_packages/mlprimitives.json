{"info": {"author": "MIT Data To AI Lab", "author_email": "dailabmit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "<p align=\"left\">\n<img width=25% src=\"https://dai.lids.mit.edu/wp-content/uploads/2018/06/Logo_DAI_highres.png\" alt=\u201cDAI-Lab\u201d />\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n\n\n\n[![PyPi Shield](https://img.shields.io/pypi/v/mlprimitives.svg)](https://pypi.python.org/pypi/mlprimitives)\n[![Travis CI Shield](https://travis-ci.org/HDI-Project/MLPrimitives.svg?branch=master)](https://travis-ci.org/HDI-Project/MLPrimitives)\n\n\n# MLPrimitives\n\nPipelines and primitives for machine learning and data science.\n\n- Free software: MIT license\n- Documentation: https://HDI-Project.github.io/MLPrimitives\n\n# Overview\n\nThis repository contains primitive annotations to be used by the MLBlocks library, as well as\nthe necessary Python code to make some of them fully compatible with the MLBlocks API requirements.\n\nThere is also a collection of custom primitives contributed directly to this library, which either\ncombine third party tools or implement new functionalities from scratch.\n\n## Why did we create this library?\n\n* Too many libraries in a fast growing field\n* Huge societal need to build machine learning apps\n* Domain expertise resides at several places (knowledge of math)\n* No documented information about hyperparameters, behavior...\n\n# Installation\n\n## Requirements\n\n**MLPrimitives** has been developed and tested on [Python 3.5, and 3.6](https://www.python.org/downloads/)\n\nAlso, although it is not strictly required, the usage of a\n[virtualenv](https://virtualenv.pypa.io/en/latest/) is highly recommended in order to avoid\ninterfering with other software installed in the system where **MLPrimitives** is run.\n\nThese are the minimum commands needed to create a virtualenv using python3.6 for **MLPrimitives**:\n\n```bash\npip install virtualenv\nvirtualenv -p $(which python3.6) mlprimitives-venv\n```\n\nAfterwards, you have to execute this command to have the virtualenv activated:\n\n```bash\nsource mlprimitives-venv/bin/activate\n```\n\nRemember about executing it every time you start a new console to work on **MLPrimitives**!\n\n## Install using Pip\n\nAfter creating the virtualenv and activating it, we recommend using\n[pip](https://pip.pypa.io/en/stable/) in order to install **MLPrimitives**:\n\n```bash\npip install mlprimitives\n```\n\nThis will pull and install the latest stable release from [PyPi](https://pypi.org/).\n\n## Install from Source\n\nAlternatively, with your virtualenv activated, you can clone the repository and install it from\nsource by running `make install` on the `stable` branch:\n\n```bash\ngit clone git@github.com:HDI-Project/MLPrimitives.git\ncd MLPrimitives\ngit checkout stable\nmake install\n```\n\n## Install for Development\n\nIf you want to contribute to the project, a few more steps are required to make the project ready\nfor development.\n\nFirst, please head to [the GitHub page of the project](https://github.com/HDI-Project/MLPrimitives)\nand make a fork of the project under you own username by clicking on the **fork** button on the\nupper right corner of the page.\n\nAfterwards, clone your fork and create a branch from master with a descriptive name that includes\nthe number of the issue that you are going to work on:\n\n```bash\ngit clone git@github.com:{your username}/MLPrimitives.git\ncd MLPrimitives\ngit branch issue-xx-cool-new-feature master\ngit checkout issue-xx-cool-new-feature\n```\n\nFinally, install the project with the following command, which will install some additional\ndependencies for code linting and testing.\n\n```bash\nmake install-develop\n```\n\nMake sure to use them regularly while developing by running the commands `make lint` and `make test`.\n\n# Quickstart\n\nThis section is a short series of tutorials to help you getting started with MLPrimitives.\n\nIn the following steps you will learn how to load and run a primitive on some data.\n\nLater on you will learn how to evaluate and improve the performance of a primitive by tuning\nits hyperparameters.\n\n## Running a Primitive\n\nIn this first tutorial, we will be executing a single primitive for data transformation.\n\n### 1. Load a Primitive\n\nThe first step in order to run a primitive is to load it.\n\nThis will be done using the `mlprimitives.load_primitive` function, which will\nload the indicated primitive as an [MLBlock Object from MLBlocks](https://hdi-project.github.io/MLBlocks/api/mlblocks.html#mlblocks.MLBlock)\n\nIn this case, we will load the `mlprimitives.custom.feature_extraction.CategoricalEncoder`\nprimitive.\n\n```python\nfrom mlprimitives import load_primitive\n\nprimitive = load_primitive('mlprimitives.custom.feature_extraction.CategoricalEncoder')\n```\n\n### 2. Load some data\n\nThe CategoricalEncoder is a transformation primitive which applies one-hot encoding to all the\ncategorical columns of a `pandas.DataFrame`.\n\nSo, in order to be able to run our primitive, we will first load some data that contains\ncategorical columns.\n\nThis can be done with the `mlprimitives.datasets.load_census` function:\n\n```python\nfrom mlprimitives.datasets import load_census\n\ndataset = load_census()\n```\n\nThis dataset object has an attribute `data` which contains a table with several categorical\ncolumns.\n\nWe can have a look at this table by executing `dataset.data.head()`, which will return a\ntable like this:\n\n```python\n                             0                    1                   2\nage                         39                   50                  38\nworkclass            State-gov     Self-emp-not-inc             Private\nfnlwgt                   77516                83311              215646\neducation            Bachelors            Bachelors             HS-grad\neducation-num               13                   13                   9\nmarital-status   Never-married   Married-civ-spouse            Divorced\noccupation        Adm-clerical      Exec-managerial   Handlers-cleaners\nrelationship     Not-in-family              Husband       Not-in-family\nrace                     White                White               White\nsex                       Male                 Male                Male\ncapital-gain              2174                    0                   0\ncapital-loss                 0                    0                   0\nhours-per-week              40                   13                  40\nnative-country   United-States        United-States       United-States\n```\n\n### 3. Fit the primitive\n\nIn order to run our pipeline, we first need to fit it.\n\nThis is the process where it analyzes the data to detect which columns are categorical\n\nThis is done by calling its `fit` method and assing the `dataset.data` as `X`.\n\n```python\nprimitive.fit(X=dataset.data)\n```\n\n### 4. Produce results\n\nOnce the pipeline is fit, we can process the data by calling the `produce` method of the\nprimitive instance and passing agin the `data` as `X`.\n\n```python\ntransformed = primitive.produce(X=dataset.data)\n```\n\nAfter this is done, we can see how the transformed data contains the newly generated\none-hot vectors:\n\n```\n                                                0      1       2       3       4\nage                                            39     50      38      53      28\nfnlwgt                                      77516  83311  215646  234721  338409\neducation-num                                  13     13       9       7      13\ncapital-gain                                 2174      0       0       0       0\ncapital-loss                                    0      0       0       0       0\nhours-per-week                                 40     13      40      40      40\nworkclass= Private                              0      0       1       1       1\nworkclass= Self-emp-not-inc                     0      1       0       0       0\nworkclass= Local-gov                            0      0       0       0       0\nworkclass= ?                                    0      0       0       0       0\nworkclass= State-gov                            1      0       0       0       0\nworkclass= Self-emp-inc                         0      0       0       0       0\n...                                             ...    ...     ...     ...     ...\n```\n\n## Tuning a Primitive\n\nIn this short tutorial we will teach you how to evaluate the performance of a primitive\nand improve its performance by modifying its hyperparameters.\n\nTo do so, we will load a primitive that can learn from the transformed data that we just\ngenerated and later on make predictions based on new data.\n\n### 1. Load another primitive\n\nFirs of all, we will load the `xgboost.XGBClassifier` primitive that we will use afterwards.\n\n```python\nprimitive = load_primitive('xgboost.XGBClassifier')\n```\n\n### 2. Split the dataset\n\nBefore being able to evaluate the primitive perfomance, we need to split the data in two\nparts: train, which will be used for the primitive to learn, and test, which will be used\nto make the predictions that later on will be evaluated.\n\nIn order to do this, we will get the first 75% of rows from the transformed data that we\nobtained above and call it `X_train`, and then set the next 25% of rows as `X_test`.\n\n```python\ntrain_size = int(len(transformed) * 0.75)\nX_train = transformed.iloc[:train_size]\nX_test = transformed.iloc[train_size:]\n```\n\nSimilarly, we need to obtain the `y_train` and `y_test` variables containing the corresponding\noutput values.\n\n```python\ny_train = dataset.target[:train_size]\ny_test = dataset.target[train_size:]\n```\n\n### 3. Fit the new primitive\n\nOnce we have have splitted the data, we can fit the primitive by passing `X_train` and `y_train`\nto its `fit` method.\n\n```python\nprimitive.fit(X=X_train, y=y_train)\n```\n\n### 4. Make predictions\n\nOnce the primitive has been fitted, we can produce predictions using the `X_test` data as input.\n\n```python\npredictions = primitive.produce(X=X_test)\n```\n\n### 5. Evalute the performance\n\nWe can now evaluate how good the predictions from our primitive are by using the `score`\nmethod from the `dataset` object on both the expected output and the real output from the\nprimitive:\n\n```python\ndataset.score(y_test, predictions)\n```\n\nThis will output a float value between 0 and 1 indicating how good the predicitons are, being\n0 the worst score possible and 1 the best one.\n\nIn this case we will obtain a score around 0.866\n\n### 6. Set new hyperparameter values\n\nIn order to improve the performance of our primitive we will try to modify a couple of its\nhyperparameters.\n\nFirst we will see which hyperparameter values the primitive has by calling its\n`get_hyperparameters` method.\n\n```python\nprimitive.get_hyperparameters()\n```\n\nwhich will return a dictionary like this:\n\n```python\n{\n    \"n_jobs\": -1,\n    \"n_estimators\": 100,\n    \"max_depth\": 3,\n    \"learning_rate\": 0.1,\n    \"gamma\": 0,\n    \"min_child_weight\": 1\n}\n```\n\nNext, we will see which are the valid values for each one of those hyperparameters by calling its\n`get_tunable_hyperparameters` method:\n\n```python\nprimitive.get_tunable_hyperparameters()\n```\n\nFor example, we will see that the `max_depth` hyperparameter has the following specification:\n\n```python\n{\n    \"type\": \"int\",\n    \"default\": 3,\n    \"range\": [\n        3,\n        10\n    ]\n}\n```\n\nNext, we will choose a valid value, for example 7, and set it into the pipeline using the\n`set_hyperparameters` method:\n\n```python\nprimitive.set_hyperparameters({'max_depth': 7})\n```\n\n### 7. Re-evaluate the performance\n\nOnce the new hyperparameter value has been set, we repeat the fit/train/score cycle to\nevaluate the performance of this new hyperparameter value:\n\n```python\nprimitive.fit(X=X_train, y=y_train)\npredictions = primitive.produce(X=X_test)\ndataset.score(y_test, predictions)\n```\n\nThis time we should see that the performance has improved to a value around 0.724\n\n## What's Next?\n\nDo you want to [learn more about how the project](https://hdi-project.github.io/MLPrimitives/getting_started/concepts.html),\nabout [how to contribute to it](https://hdi-project.github.io/MLPrimitives/community/contributing.html)\nor browse the [API Reference](https://hdi-project.github.io/MLPrimitives/api/mlprimitives.html)?\nPlease check the corresponding sections of the [documentation](https://hdi-project.github.io/MLPrimitives/)!\n\n\n# History\n\n## 0.2.4 - 2020-01-30\n\n### New Primitives\n\n* Add RangeScaler and RangeUnscaler primitives - [Issue #232](https://github.com/HDI-Project/MLPrimitives/issues/232) by @csala\n\n### Primitive Improvements\n\n* Extract input_shape from X in keras.Sequential - [Issue #223](https://github.com/HDI-Project/MLPrimitives/issues/223) by @csala\n\n### Bug Fixes\n\n* mlprimitives.custom.text.TextCleaner fails if text is empty - [Issue #228](https://github.com/HDI-Project/MLPrimitives/issues/228) by @csala\n* Error when loading the reviews dataset - [Issue #230](https://github.com/HDI-Project/MLPrimitives/issues/230) by @csala\n* Curate dependencies: specify an explicit prompt-toolkit version range - [Issue #224](https://github.com/HDI-Project/MLPrimitives/issues/224) by @csala\n\n## 0.2.3 - 2019-11-14\n\n### New Primitives\n\n* Add primitive to make window_sequences based on cutoff times - [Issue #217](https://github.com/HDI-Project/MLPrimitives/issues/217) by @csala\n* Create a keras LSTM based TimeSeriesClassifier primitive - [Issue #218](https://github.com/HDI-Project/MLPrimitives/issues/218) by @csala\n* Add pandas DataFrame primitives - [Issue #214](https://github.com/HDI-Project/MLPrimitives/issues/214) by @csala\n* Add featuretools.EntitySet.normalize_entity primitive - [Issue #209](https://github.com/HDI-Project/MLPrimitives/issues/209) by @csala\n\n### Primitive Improvements\n\n* Make featuretools.EntitySet.entity_from_dataframe entityset arg optional - [Issue #208](https://github.com/HDI-Project/MLPrimitives/issues/208) by @csala\n\n* Add text regression dataset - [Issue #206](https://github.com/HDI-Project/MLPrimitives/issues/206) by @csala\n\n### Bug Fixes\n\n* pandas.DataFrame.resample crash when grouping by integer columns - [Issue #211](https://github.com/HDI-Project/MLPrimitives/issues/211) by @csala\n\n## 0.2.2 - 2019-10-08\n\n### New Primitives\n\n* Add primitives for GAN based time-series anomaly detection - [Issue #200](https://github.com/HDI-Project/MLPrimitives/issues/200) by @AlexanderGeiger\n* Add `numpy.reshape` and `numpy.ravel` primitives - [Issue #197](https://github.com/HDI-Project/MLPrimitives/issues/197) by @AlexanderGeiger\n* Add feature selection primitive based on Lasso - [Issue #194](https://github.com/HDI-Project/MLPrimitives/issues/194) by @csala\n\n### Primitive Improvements\n\n* `feature_extraction.CategoricalEncoder` support dtype category - [Issue #196](https://github.com/HDI-Project/MLPrimitives/issues/196) by @csala\n\n## 0.2.1 - 2019-09-09\n\n### New Primitives\n\n* Timeseries Intervals to Mask Primitive - [Issue #186](https://github.com/HDI-Project/MLPrimitives/issues/186) by @AlexanderGeiger\n* Add new primitive: Arima model - [Issue #168](https://github.com/HDI-Project/MLPrimitives/issues/168) by @AlexanderGeiger\n\n### Primitive Improvements\n\n* Curate PCA primitive hyperparameters - [Issue #190](https://github.com/HDI-Project/MLPrimitives/issues/190) by @AlexanderGeiger\n* Add option to drop rolling window sequences - [Issue #186](https://github.com/HDI-Project/MLPrimitives/issues/186) by @AlexanderGeiger\n\n### Bug Fixes\n\n* scikit-image==0.14.3 crashes when installed on Mac - [Issue #188](https://github.com/HDI-Project/MLPrimitives/issues/188) by @csala\n\n## 0.2.0\n\n### New Features\n\n* Publish the pipelines as an `entry_point`\n[Issue #175](https://github.com/HDI-Project/MLPrimitives/issues/175) by @csala\n\n### Primitive Improvements\n\n* Improve pandas.DataFrame.resample primitive [Issue #177](https://github.com/HDI-Project/MLPrimitives/issues/177) by @csala\n* Improve `feature_extractor` primitives [Issue #183](https://github.com/HDI-Project/MLPrimitives/issues/183) by @csala\n* Improve `find_anomalies` primitive [Issue #180](https://github.com/HDI-Project/MLPrimitives/issues/180) by @AlexanderGeiger\n\n### Bug Fixes\n\n* Typo in the primitive keras.Sequential.LSTMTimeSeriesRegressor [Issue #176](https://github.com/HDI-Project/MLPrimitives/issues/176) by @DanielCalvoCerezo\n\n\n## 0.1.10\n\n### New Features\n\n* Add function to run primitives without a pipeline [Issue #43](https://github.com/HDI-Project/MLPrimitives/issues/43) by @csala\n\n### New Pipelines\n\n* Add pipelines for all the MLBlocks examples [Issue #162](https://github.com/HDI-Project/MLPrimitives/issues/162) by @csala\n\n### Primitive Improvements\n\n* Add Early Stopping to `keras.Sequential.LSTMTimeSeriesRegressor` primitive [Issue #156](https://github.com/HDI-Project/MLPrimitives/issues/156) by @csala\n* Make FeatureExtractor primitives accept Numpy arrays [Issue #165](https://github.com/HDI-Project/MLPrimitives/issues/165) by @csala\n* Add window size and pruning to the `timeseries_anomalies.find_anomalies` primitive [Issue #160](https://github.com/HDI-Project/MLPrimitives/issues/160) by @csala\n\n\n## 0.1.9\n\n### New Features\n\n* Add a single table binary classification dataset [Issue #141](https://github.com/HDI-Project/MLPrimitives/issues/141) by @csala\n\n### New Primitives\n\n* Add Multilayer Perceptron (MLP) primitive for binary classification [Issue #140](https://github.com/HDI-Project/MLPrimitives/issues/140) by @Hector-hedb12\n* Add primitive for Sequence classification with LSTM [Issue #150](https://github.com/HDI-Project/MLPrimitives/issues/150) by @Hector-hedb12\n* Add VGG-like convnet primitive [Issue #149](https://github.com/HDI-Project/MLPrimitives/issues/149) by @Hector-hedb12\n* Add Multilayer Perceptron (MLP) primitive for multi-class softmax classification [Issue #139](https://github.com/HDI-Project/MLPrimitives/issues/139) by @Hector-hedb12\n* Add primitive to count feature matrix columns [Issue #146](https://github.com/HDI-Project/MLPrimitives/issues/146) by @csala\n\n### Primitive Improvements\n\n* Add additional fit and predict arguments to keras.Sequential [Issue #161](https://github.com/HDI-Project/MLPrimitives/issues/161) by @csala\n* Add suport for keras.Sequential Callbacks [Issue #159](https://github.com/HDI-Project/MLPrimitives/issues/159) by @csala\n* Add fixed hyperparam to control keras.Sequential verbosity [Issue #143](https://github.com/HDI-Project/MLPrimitives/issues/143) by @csala\n\n## 0.1.8\n\n### New Primitives\n\n* mlprimitives.custom.timeseries_preprocessing.time_segments_average - [Issue #137](https://github.com/HDI-Project/MLPrimitives/issues/137)\n\n### New Features\n\n* Add target_index output in timseries_preprocessing.rolling_window_sequences - [Issue #136](https://github.com/HDI-Project/MLPrimitives/issues/136)\n\n## 0.1.7\n\n### General Improvements\n\n* Validate JSON format in `make lint` -  [Issue #133](https://github.com/HDI-Project/MLPrimitives/issues/133)\n* Add demo datasets - [Issue #131](https://github.com/HDI-Project/MLPrimitives/issues/131)\n* Improve featuretools.dfs primitive - [Issue #127](https://github.com/HDI-Project/MLPrimitives/issues/127)\n\n### New Primitives\n\n* pandas.DataFrame.resample - [Issue #123](https://github.com/HDI-Project/MLPrimitives/issues/123)\n* pandas.DataFrame.unstack - [Issue #124](https://github.com/HDI-Project/MLPrimitives/issues/124)\n* featuretools.EntitySet.add_relationship - [Issue #126](https://github.com/HDI-Project/MLPrimitives/issues/126)\n* featuretools.EntitySet.entity_from_dataframe - [Issue #126](https://github.com/HDI-Project/MLPrimitives/issues/126)\n\n### Bug Fixes\n\n* Bug in timeseries_anomalies.py - [Issue #119](https://github.com/HDI-Project/MLPrimitives/issues/119)\n\n## 0.1.6\n\n### General Improvements\n\n* Add Contributing Documentation\n* Remove upper bound in pandas version given new release of `featuretools` v0.6.1\n* Improve LSTMTimeSeriesRegressor hyperparameters\n\n### New Primitives\n\n* mlprimitives.candidates.dsp.SpectralMask\n* mlprimitives.custom.timeseries_anomalies.find_anomalies\n* mlprimitives.custom.timeseries_anomalies.regression_errors\n* mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences\n* mlprimitives.custom.timeseries_preprocessing.time_segments_average\n* sklearn.linear_model.ElasticNet\n* sklearn.linear_model.Lars\n* sklearn.linear_model.Lasso\n* sklearn.linear_model.MultiTaskLasso\n* sklearn.linear_model.Ridge\n\n## 0.1.5\n\n### New Primitives\n\n* sklearn.impute.SimpleImputer\n* sklearn.preprocessing.MinMaxScaler\n* sklearn.preprocessing.MaxAbsScaler\n* sklearn.preprocessing.RobustScaler\n* sklearn.linear_model.LinearRegression\n\n### General Improvements\n\n* Separate curated from candidate primitives\n* Setup `entry_points` in setup.py to improve compaitibility with MLBlocks\n* Add a test-pipelines command to test all the existing pipelines\n* Clean sklearn example pipelines\n* Change the `author` entry to a `contributors` list\n* Change the name of `mlblocks_primitives` folder\n* Pip install `requirements_dev.txt` fail documentation\n\n### Bug Fixes\n\n* Fix LSTMTimeSeriesRegressor primitive. Issue #90\n* Fix timeseries primitives. Issue #91\n* Negative index anomalies in `timeseries_errors`. Issue #89\n* Keep pandas version below 0.24.0. Issue #87\n\n## 0.1.4\n\n### New Primitives\n\n* mlprimitives.timeseries primitives for timeseries data preprocessing\n* mlprimitives.timeseres_error primitives for timeseries anomaly detection\n* keras.Sequential.LSTMTimeSeriesRegressor\n* sklearn.neighbors.KNeighbors Classifier and Regressor\n* several sklearn.decomposition primitives\n* several sklearn.ensemble primitives\n\n### Bug Fixes\n\n* Fix typo in mlprimitives.text.TextCleaner primitive\n* Fix bug in index handling in featuretools.dfs primitive\n* Fix bug in SingleLayerCNNImageClassifier annotation\n* Remove old vlaidation tags from JSON annotations\n\n## 0.1.3\n\n### New Features\n\n* Fix and re-enable featuretools.dfs primitive.\n\n## 0.1.2\n\n### New Features\n\n* Add pipeline specification language and Evaluation utilities.\n* Add pipelines for graph, text and tabular problems.\n* New primitives ClassEncoder and ClassDecoder\n* New primitives UniqueCounter and VocabularyCounter\n\n### Bug Fixes\n\n* Fix TrivialPredictor bug when working with numpy arrays\n* Change XGB default learning rate and number of estimators\n\n\n## 0.1.1\n\n### New Features\n\n* Add more keras.applications primitives.\n* Add a Text Cleanup primitive.\n\n### Bug Fixes\n\n* Add keywords to `keras.preprocessing` primtives.\n* Fix the `image_transform` method.\n* Add `epoch` as a fixed hyperparameter for `keras.Sequential` primitives.\n\n## 0.1.0\n\n* First release on PyPI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HDI-Project/MLPrimitives", "keywords": "mlblocks mlprimitives pipelines primitives machine learning data science", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "mlprimitives", "package_url": "https://pypi.org/project/mlprimitives/", "platform": "", "project_url": "https://pypi.org/project/mlprimitives/", "project_urls": {"Homepage": "https://github.com/HDI-Project/MLPrimitives"}, "release_url": "https://pypi.org/project/mlprimitives/0.2.4/", "requires_dist": ["Keras (<3,>=2.1.6)", "featuretools (<0.12,>=0.6.1)", "iso639 (<0.2,>=0.1.4)", "langdetect (<2,>=1.0.7)", "lightfm (<2,>=1.15)", "mlblocks (<0.4,>=0.3.4)", "networkx (<3,>=2.0)", "nltk (<4,>=3.3)", "numpy (<1.17,>=1.15.2)", "opencv-python (<5,>=3.4.0.12)", "pandas (<0.25,>=0.23.4)", "python-louvain (<0.14,>=0.10)", "scikit-image (!=0.14.3,<0.15,>=0.13.1)", "scikit-learn (<0.21,>=0.20.0)", "scipy (<2,>=1.1.0)", "setuptools (>=41.0.0)", "statsmodels (<1,>=0.9.0)", "tensorflow (<2,>=1.11.0)", "xgboost (<1,>=0.72.1)", "docutils (<0.16,>=0.10)", "mlblocks (>=0.3.0) ; extra == 'dev'", "pytest (>=3.4.2) ; extra == 'dev'", "pytest-cov (>=2.6.0) ; extra == 'dev'", "google-compute-engine (==2.8.12) ; extra == 'dev'", "bumpversion (>=0.5.3) ; extra == 'dev'", "pip (>=9.0.1) ; extra == 'dev'", "watchdog (>=0.8.3) ; extra == 'dev'", "m2r (>=0.2.0) ; extra == 'dev'", "Sphinx (>=1.7.1) ; extra == 'dev'", "sphinx-rtd-theme (>=0.2.4) ; extra == 'dev'", "ipython (>=6.5.0) ; extra == 'dev'", "flake8 (>=3.7.7) ; extra == 'dev'", "isort (>=4.3.4) ; extra == 'dev'", "autoflake (>=1.1) ; extra == 'dev'", "autopep8 (>=1.4.3) ; extra == 'dev'", "twine (>=1.10.0) ; extra == 'dev'", "wheel (>=0.30.0) ; extra == 'dev'", "coverage (>=4.5.1) ; extra == 'dev'", "tox (>=2.9.1) ; extra == 'dev'", "jupyter (>=1.0.0) ; extra == 'dev'", "prompt-toolkit (<2.1.0,>=2.0.0) ; extra == 'dev'", "mlblocks (>=0.3.0) ; extra == 'test'", "pytest (>=3.4.2) ; extra == 'test'", "pytest-cov (>=2.6.0) ; extra == 'test'", "google-compute-engine (==2.8.12) ; extra == 'test'"], "requires_python": ">=3.5", "summary": "Pipelines and primitives for machine learning and data science.", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p align=\"left\">\n<img alt=\"\u201cDAI-Lab\u201d\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/80df0970db0e9e95cce463bc9fa595caf90dd1c7/68747470733a2f2f6461692e6c6964732e6d69742e6564752f77702d636f6e74656e742f75706c6f6164732f323031382f30362f4c6f676f5f4441495f686967687265732e706e67\" width=\"25%\">\n<i>An open source project from Data to AI Lab at MIT.</i>\n</p>\n<p><a href=\"https://pypi.python.org/pypi/mlprimitives\" rel=\"nofollow\"><img alt=\"PyPi Shield\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17e2539523ceaab79cab839d7cbb7993d2f1da88/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6d6c7072696d6974697665732e737667\"></a>\n<a href=\"https://travis-ci.org/HDI-Project/MLPrimitives\" rel=\"nofollow\"><img alt=\"Travis CI Shield\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5afe6e59a0c16a96714457d438f3f94bf1de8b6a/68747470733a2f2f7472617669732d63692e6f72672f4844492d50726f6a6563742f4d4c5072696d6974697665732e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>MLPrimitives</h1>\n<p>Pipelines and primitives for machine learning and data science.</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://HDI-Project.github.io/MLPrimitives\" rel=\"nofollow\">https://HDI-Project.github.io/MLPrimitives</a></li>\n</ul>\n<h1>Overview</h1>\n<p>This repository contains primitive annotations to be used by the MLBlocks library, as well as\nthe necessary Python code to make some of them fully compatible with the MLBlocks API requirements.</p>\n<p>There is also a collection of custom primitives contributed directly to this library, which either\ncombine third party tools or implement new functionalities from scratch.</p>\n<h2>Why did we create this library?</h2>\n<ul>\n<li>Too many libraries in a fast growing field</li>\n<li>Huge societal need to build machine learning apps</li>\n<li>Domain expertise resides at several places (knowledge of math)</li>\n<li>No documented information about hyperparameters, behavior...</li>\n</ul>\n<h1>Installation</h1>\n<h2>Requirements</h2>\n<p><strong>MLPrimitives</strong> has been developed and tested on <a href=\"https://www.python.org/downloads/\" rel=\"nofollow\">Python 3.5, and 3.6</a></p>\n<p>Also, although it is not strictly required, the usage of a\n<a href=\"https://virtualenv.pypa.io/en/latest/\" rel=\"nofollow\">virtualenv</a> is highly recommended in order to avoid\ninterfering with other software installed in the system where <strong>MLPrimitives</strong> is run.</p>\n<p>These are the minimum commands needed to create a virtualenv using python3.6 for <strong>MLPrimitives</strong>:</p>\n<pre>pip install virtualenv\nvirtualenv -p <span class=\"k\">$(</span>which python3.6<span class=\"k\">)</span> mlprimitives-venv\n</pre>\n<p>Afterwards, you have to execute this command to have the virtualenv activated:</p>\n<pre><span class=\"nb\">source</span> mlprimitives-venv/bin/activate\n</pre>\n<p>Remember about executing it every time you start a new console to work on <strong>MLPrimitives</strong>!</p>\n<h2>Install using Pip</h2>\n<p>After creating the virtualenv and activating it, we recommend using\n<a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> in order to install <strong>MLPrimitives</strong>:</p>\n<pre>pip install mlprimitives\n</pre>\n<p>This will pull and install the latest stable release from <a href=\"https://pypi.org/\" rel=\"nofollow\">PyPi</a>.</p>\n<h2>Install from Source</h2>\n<p>Alternatively, with your virtualenv activated, you can clone the repository and install it from\nsource by running <code>make install</code> on the <code>stable</code> branch:</p>\n<pre>git clone git@github.com:HDI-Project/MLPrimitives.git\n<span class=\"nb\">cd</span> MLPrimitives\ngit checkout stable\nmake install\n</pre>\n<h2>Install for Development</h2>\n<p>If you want to contribute to the project, a few more steps are required to make the project ready\nfor development.</p>\n<p>First, please head to <a href=\"https://github.com/HDI-Project/MLPrimitives\" rel=\"nofollow\">the GitHub page of the project</a>\nand make a fork of the project under you own username by clicking on the <strong>fork</strong> button on the\nupper right corner of the page.</p>\n<p>Afterwards, clone your fork and create a branch from master with a descriptive name that includes\nthe number of the issue that you are going to work on:</p>\n<pre>git clone git@github.com:<span class=\"o\">{</span>your username<span class=\"o\">}</span>/MLPrimitives.git\n<span class=\"nb\">cd</span> MLPrimitives\ngit branch issue-xx-cool-new-feature master\ngit checkout issue-xx-cool-new-feature\n</pre>\n<p>Finally, install the project with the following command, which will install some additional\ndependencies for code linting and testing.</p>\n<pre>make install-develop\n</pre>\n<p>Make sure to use them regularly while developing by running the commands <code>make lint</code> and <code>make test</code>.</p>\n<h1>Quickstart</h1>\n<p>This section is a short series of tutorials to help you getting started with MLPrimitives.</p>\n<p>In the following steps you will learn how to load and run a primitive on some data.</p>\n<p>Later on you will learn how to evaluate and improve the performance of a primitive by tuning\nits hyperparameters.</p>\n<h2>Running a Primitive</h2>\n<p>In this first tutorial, we will be executing a single primitive for data transformation.</p>\n<h3>1. Load a Primitive</h3>\n<p>The first step in order to run a primitive is to load it.</p>\n<p>This will be done using the <code>mlprimitives.load_primitive</code> function, which will\nload the indicated primitive as an <a href=\"https://hdi-project.github.io/MLBlocks/api/mlblocks.html#mlblocks.MLBlock\" rel=\"nofollow\">MLBlock Object from MLBlocks</a></p>\n<p>In this case, we will load the <code>mlprimitives.custom.feature_extraction.CategoricalEncoder</code>\nprimitive.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlprimitives</span> <span class=\"kn\">import</span> <span class=\"n\">load_primitive</span>\n\n<span class=\"n\">primitive</span> <span class=\"o\">=</span> <span class=\"n\">load_primitive</span><span class=\"p\">(</span><span class=\"s1\">'mlprimitives.custom.feature_extraction.CategoricalEncoder'</span><span class=\"p\">)</span>\n</pre>\n<h3>2. Load some data</h3>\n<p>The CategoricalEncoder is a transformation primitive which applies one-hot encoding to all the\ncategorical columns of a <code>pandas.DataFrame</code>.</p>\n<p>So, in order to be able to run our primitive, we will first load some data that contains\ncategorical columns.</p>\n<p>This can be done with the <code>mlprimitives.datasets.load_census</code> function:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mlprimitives.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_census</span>\n\n<span class=\"n\">dataset</span> <span class=\"o\">=</span> <span class=\"n\">load_census</span><span class=\"p\">()</span>\n</pre>\n<p>This dataset object has an attribute <code>data</code> which contains a table with several categorical\ncolumns.</p>\n<p>We can have a look at this table by executing <code>dataset.data.head()</code>, which will return a\ntable like this:</p>\n<pre>                             <span class=\"mi\">0</span>                    <span class=\"mi\">1</span>                   <span class=\"mi\">2</span>\n<span class=\"n\">age</span>                         <span class=\"mi\">39</span>                   <span class=\"mi\">50</span>                  <span class=\"mi\">38</span>\n<span class=\"n\">workclass</span>            <span class=\"n\">State</span><span class=\"o\">-</span><span class=\"n\">gov</span>     <span class=\"n\">Self</span><span class=\"o\">-</span><span class=\"n\">emp</span><span class=\"o\">-</span><span class=\"ow\">not</span><span class=\"o\">-</span><span class=\"n\">inc</span>             <span class=\"n\">Private</span>\n<span class=\"n\">fnlwgt</span>                   <span class=\"mi\">77516</span>                <span class=\"mi\">83311</span>              <span class=\"mi\">215646</span>\n<span class=\"n\">education</span>            <span class=\"n\">Bachelors</span>            <span class=\"n\">Bachelors</span>             <span class=\"n\">HS</span><span class=\"o\">-</span><span class=\"n\">grad</span>\n<span class=\"n\">education</span><span class=\"o\">-</span><span class=\"n\">num</span>               <span class=\"mi\">13</span>                   <span class=\"mi\">13</span>                   <span class=\"mi\">9</span>\n<span class=\"n\">marital</span><span class=\"o\">-</span><span class=\"n\">status</span>   <span class=\"n\">Never</span><span class=\"o\">-</span><span class=\"n\">married</span>   <span class=\"n\">Married</span><span class=\"o\">-</span><span class=\"n\">civ</span><span class=\"o\">-</span><span class=\"n\">spouse</span>            <span class=\"n\">Divorced</span>\n<span class=\"n\">occupation</span>        <span class=\"n\">Adm</span><span class=\"o\">-</span><span class=\"n\">clerical</span>      <span class=\"n\">Exec</span><span class=\"o\">-</span><span class=\"n\">managerial</span>   <span class=\"n\">Handlers</span><span class=\"o\">-</span><span class=\"n\">cleaners</span>\n<span class=\"n\">relationship</span>     <span class=\"n\">Not</span><span class=\"o\">-</span><span class=\"ow\">in</span><span class=\"o\">-</span><span class=\"n\">family</span>              <span class=\"n\">Husband</span>       <span class=\"n\">Not</span><span class=\"o\">-</span><span class=\"ow\">in</span><span class=\"o\">-</span><span class=\"n\">family</span>\n<span class=\"n\">race</span>                     <span class=\"n\">White</span>                <span class=\"n\">White</span>               <span class=\"n\">White</span>\n<span class=\"n\">sex</span>                       <span class=\"n\">Male</span>                 <span class=\"n\">Male</span>                <span class=\"n\">Male</span>\n<span class=\"n\">capital</span><span class=\"o\">-</span><span class=\"n\">gain</span>              <span class=\"mi\">2174</span>                    <span class=\"mi\">0</span>                   <span class=\"mi\">0</span>\n<span class=\"n\">capital</span><span class=\"o\">-</span><span class=\"n\">loss</span>                 <span class=\"mi\">0</span>                    <span class=\"mi\">0</span>                   <span class=\"mi\">0</span>\n<span class=\"n\">hours</span><span class=\"o\">-</span><span class=\"n\">per</span><span class=\"o\">-</span><span class=\"n\">week</span>              <span class=\"mi\">40</span>                   <span class=\"mi\">13</span>                  <span class=\"mi\">40</span>\n<span class=\"n\">native</span><span class=\"o\">-</span><span class=\"n\">country</span>   <span class=\"n\">United</span><span class=\"o\">-</span><span class=\"n\">States</span>        <span class=\"n\">United</span><span class=\"o\">-</span><span class=\"n\">States</span>       <span class=\"n\">United</span><span class=\"o\">-</span><span class=\"n\">States</span>\n</pre>\n<h3>3. Fit the primitive</h3>\n<p>In order to run our pipeline, we first need to fit it.</p>\n<p>This is the process where it analyzes the data to detect which columns are categorical</p>\n<p>This is done by calling its <code>fit</code> method and assing the <code>dataset.data</code> as <code>X</code>.</p>\n<pre><span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<h3>4. Produce results</h3>\n<p>Once the pipeline is fit, we can process the data by calling the <code>produce</code> method of the\nprimitive instance and passing agin the <code>data</code> as <code>X</code>.</p>\n<pre><span class=\"n\">transformed</span> <span class=\"o\">=</span> <span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">produce</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<p>After this is done, we can see how the transformed data contains the newly generated\none-hot vectors:</p>\n<pre><code>                                                0      1       2       3       4\nage                                            39     50      38      53      28\nfnlwgt                                      77516  83311  215646  234721  338409\neducation-num                                  13     13       9       7      13\ncapital-gain                                 2174      0       0       0       0\ncapital-loss                                    0      0       0       0       0\nhours-per-week                                 40     13      40      40      40\nworkclass= Private                              0      0       1       1       1\nworkclass= Self-emp-not-inc                     0      1       0       0       0\nworkclass= Local-gov                            0      0       0       0       0\nworkclass= ?                                    0      0       0       0       0\nworkclass= State-gov                            1      0       0       0       0\nworkclass= Self-emp-inc                         0      0       0       0       0\n...                                             ...    ...     ...     ...     ...\n</code></pre>\n<h2>Tuning a Primitive</h2>\n<p>In this short tutorial we will teach you how to evaluate the performance of a primitive\nand improve its performance by modifying its hyperparameters.</p>\n<p>To do so, we will load a primitive that can learn from the transformed data that we just\ngenerated and later on make predictions based on new data.</p>\n<h3>1. Load another primitive</h3>\n<p>Firs of all, we will load the <code>xgboost.XGBClassifier</code> primitive that we will use afterwards.</p>\n<pre><span class=\"n\">primitive</span> <span class=\"o\">=</span> <span class=\"n\">load_primitive</span><span class=\"p\">(</span><span class=\"s1\">'xgboost.XGBClassifier'</span><span class=\"p\">)</span>\n</pre>\n<h3>2. Split the dataset</h3>\n<p>Before being able to evaluate the primitive perfomance, we need to split the data in two\nparts: train, which will be used for the primitive to learn, and test, which will be used\nto make the predictions that later on will be evaluated.</p>\n<p>In order to do this, we will get the first 75% of rows from the transformed data that we\nobtained above and call it <code>X_train</code>, and then set the next 25% of rows as <code>X_test</code>.</p>\n<pre><span class=\"n\">train_size</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">transformed</span><span class=\"p\">)</span> <span class=\"o\">*</span> <span class=\"mf\">0.75</span><span class=\"p\">)</span>\n<span class=\"n\">X_train</span> <span class=\"o\">=</span> <span class=\"n\">transformed</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[:</span><span class=\"n\">train_size</span><span class=\"p\">]</span>\n<span class=\"n\">X_test</span> <span class=\"o\">=</span> <span class=\"n\">transformed</span><span class=\"o\">.</span><span class=\"n\">iloc</span><span class=\"p\">[</span><span class=\"n\">train_size</span><span class=\"p\">:]</span>\n</pre>\n<p>Similarly, we need to obtain the <code>y_train</code> and <code>y_test</code> variables containing the corresponding\noutput values.</p>\n<pre><span class=\"n\">y_train</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">[:</span><span class=\"n\">train_size</span><span class=\"p\">]</span>\n<span class=\"n\">y_test</span> <span class=\"o\">=</span> <span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">target</span><span class=\"p\">[</span><span class=\"n\">train_size</span><span class=\"p\">:]</span>\n</pre>\n<h3>3. Fit the new primitive</h3>\n<p>Once we have have splitted the data, we can fit the primitive by passing <code>X_train</code> and <code>y_train</code>\nto its <code>fit</code> method.</p>\n<pre><span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y_train</span><span class=\"p\">)</span>\n</pre>\n<h3>4. Make predictions</h3>\n<p>Once the primitive has been fitted, we can produce predictions using the <code>X_test</code> data as input.</p>\n<pre><span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">produce</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n</pre>\n<h3>5. Evalute the performance</h3>\n<p>We can now evaluate how good the predictions from our primitive are by using the <code>score</code>\nmethod from the <code>dataset</code> object on both the expected output and the real output from the\nprimitive:</p>\n<pre><span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">y_test</span><span class=\"p\">,</span> <span class=\"n\">predictions</span><span class=\"p\">)</span>\n</pre>\n<p>This will output a float value between 0 and 1 indicating how good the predicitons are, being\n0 the worst score possible and 1 the best one.</p>\n<p>In this case we will obtain a score around 0.866</p>\n<h3>6. Set new hyperparameter values</h3>\n<p>In order to improve the performance of our primitive we will try to modify a couple of its\nhyperparameters.</p>\n<p>First we will see which hyperparameter values the primitive has by calling its\n<code>get_hyperparameters</code> method.</p>\n<pre><span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">get_hyperparameters</span><span class=\"p\">()</span>\n</pre>\n<p>which will return a dictionary like this:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"n_jobs\"</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"n_estimators\"</span><span class=\"p\">:</span> <span class=\"mi\">100</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"max_depth\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"learning_rate\"</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"gamma\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"min_child_weight\"</span><span class=\"p\">:</span> <span class=\"mi\">1</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Next, we will see which are the valid values for each one of those hyperparameters by calling its\n<code>get_tunable_hyperparameters</code> method:</p>\n<pre><span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">get_tunable_hyperparameters</span><span class=\"p\">()</span>\n</pre>\n<p>For example, we will see that the <code>max_depth</code> hyperparameter has the following specification:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"s2\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"int\"</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"default\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span>\n    <span class=\"s2\">\"range\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"mi\">3</span><span class=\"p\">,</span>\n        <span class=\"mi\">10</span>\n    <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Next, we will choose a valid value, for example 7, and set it into the pipeline using the\n<code>set_hyperparameters</code> method:</p>\n<pre><span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">set_hyperparameters</span><span class=\"p\">({</span><span class=\"s1\">'max_depth'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">})</span>\n</pre>\n<h3>7. Re-evaluate the performance</h3>\n<p>Once the new hyperparameter value has been set, we repeat the fit/train/score cycle to\nevaluate the performance of this new hyperparameter value:</p>\n<pre><span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y_train</span><span class=\"p\">)</span>\n<span class=\"n\">predictions</span> <span class=\"o\">=</span> <span class=\"n\">primitive</span><span class=\"o\">.</span><span class=\"n\">produce</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"o\">=</span><span class=\"n\">X_test</span><span class=\"p\">)</span>\n<span class=\"n\">dataset</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">y_test</span><span class=\"p\">,</span> <span class=\"n\">predictions</span><span class=\"p\">)</span>\n</pre>\n<p>This time we should see that the performance has improved to a value around 0.724</p>\n<h2>What's Next?</h2>\n<p>Do you want to <a href=\"https://hdi-project.github.io/MLPrimitives/getting_started/concepts.html\" rel=\"nofollow\">learn more about how the project</a>,\nabout <a href=\"https://hdi-project.github.io/MLPrimitives/community/contributing.html\" rel=\"nofollow\">how to contribute to it</a>\nor browse the <a href=\"https://hdi-project.github.io/MLPrimitives/api/mlprimitives.html\" rel=\"nofollow\">API Reference</a>?\nPlease check the corresponding sections of the <a href=\"https://hdi-project.github.io/MLPrimitives/\" rel=\"nofollow\">documentation</a>!</p>\n<h1>History</h1>\n<h2>0.2.4 - 2020-01-30</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>Add RangeScaler and RangeUnscaler primitives - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/232\" rel=\"nofollow\">Issue #232</a> by @csala</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li>Extract input_shape from X in keras.Sequential - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/223\" rel=\"nofollow\">Issue #223</a> by @csala</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>mlprimitives.custom.text.TextCleaner fails if text is empty - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/228\" rel=\"nofollow\">Issue #228</a> by @csala</li>\n<li>Error when loading the reviews dataset - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/230\" rel=\"nofollow\">Issue #230</a> by @csala</li>\n<li>Curate dependencies: specify an explicit prompt-toolkit version range - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/224\" rel=\"nofollow\">Issue #224</a> by @csala</li>\n</ul>\n<h2>0.2.3 - 2019-11-14</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>Add primitive to make window_sequences based on cutoff times - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/217\" rel=\"nofollow\">Issue #217</a> by @csala</li>\n<li>Create a keras LSTM based TimeSeriesClassifier primitive - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/218\" rel=\"nofollow\">Issue #218</a> by @csala</li>\n<li>Add pandas DataFrame primitives - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/214\" rel=\"nofollow\">Issue #214</a> by @csala</li>\n<li>Add featuretools.EntitySet.normalize_entity primitive - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/209\" rel=\"nofollow\">Issue #209</a> by @csala</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li>\n<p>Make featuretools.EntitySet.entity_from_dataframe entityset arg optional - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/208\" rel=\"nofollow\">Issue #208</a> by @csala</p>\n</li>\n<li>\n<p>Add text regression dataset - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/206\" rel=\"nofollow\">Issue #206</a> by @csala</p>\n</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>pandas.DataFrame.resample crash when grouping by integer columns - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/211\" rel=\"nofollow\">Issue #211</a> by @csala</li>\n</ul>\n<h2>0.2.2 - 2019-10-08</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>Add primitives for GAN based time-series anomaly detection - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/200\" rel=\"nofollow\">Issue #200</a> by @AlexanderGeiger</li>\n<li>Add <code>numpy.reshape</code> and <code>numpy.ravel</code> primitives - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/197\" rel=\"nofollow\">Issue #197</a> by @AlexanderGeiger</li>\n<li>Add feature selection primitive based on Lasso - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/194\" rel=\"nofollow\">Issue #194</a> by @csala</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li><code>feature_extraction.CategoricalEncoder</code> support dtype category - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/196\" rel=\"nofollow\">Issue #196</a> by @csala</li>\n</ul>\n<h2>0.2.1 - 2019-09-09</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>Timeseries Intervals to Mask Primitive - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/186\" rel=\"nofollow\">Issue #186</a> by @AlexanderGeiger</li>\n<li>Add new primitive: Arima model - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/168\" rel=\"nofollow\">Issue #168</a> by @AlexanderGeiger</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li>Curate PCA primitive hyperparameters - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/190\" rel=\"nofollow\">Issue #190</a> by @AlexanderGeiger</li>\n<li>Add option to drop rolling window sequences - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/186\" rel=\"nofollow\">Issue #186</a> by @AlexanderGeiger</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>scikit-image==0.14.3 crashes when installed on Mac - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/188\" rel=\"nofollow\">Issue #188</a> by @csala</li>\n</ul>\n<h2>0.2.0</h2>\n<h3>New Features</h3>\n<ul>\n<li>Publish the pipelines as an <code>entry_point</code>\n<a href=\"https://github.com/HDI-Project/MLPrimitives/issues/175\" rel=\"nofollow\">Issue #175</a> by @csala</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li>Improve pandas.DataFrame.resample primitive <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/177\" rel=\"nofollow\">Issue #177</a> by @csala</li>\n<li>Improve <code>feature_extractor</code> primitives <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/183\" rel=\"nofollow\">Issue #183</a> by @csala</li>\n<li>Improve <code>find_anomalies</code> primitive <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/180\" rel=\"nofollow\">Issue #180</a> by @AlexanderGeiger</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Typo in the primitive keras.Sequential.LSTMTimeSeriesRegressor <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/176\" rel=\"nofollow\">Issue #176</a> by @DanielCalvoCerezo</li>\n</ul>\n<h2>0.1.10</h2>\n<h3>New Features</h3>\n<ul>\n<li>Add function to run primitives without a pipeline <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/43\" rel=\"nofollow\">Issue #43</a> by @csala</li>\n</ul>\n<h3>New Pipelines</h3>\n<ul>\n<li>Add pipelines for all the MLBlocks examples <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/162\" rel=\"nofollow\">Issue #162</a> by @csala</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li>Add Early Stopping to <code>keras.Sequential.LSTMTimeSeriesRegressor</code> primitive <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/156\" rel=\"nofollow\">Issue #156</a> by @csala</li>\n<li>Make FeatureExtractor primitives accept Numpy arrays <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/165\" rel=\"nofollow\">Issue #165</a> by @csala</li>\n<li>Add window size and pruning to the <code>timeseries_anomalies.find_anomalies</code> primitive <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/160\" rel=\"nofollow\">Issue #160</a> by @csala</li>\n</ul>\n<h2>0.1.9</h2>\n<h3>New Features</h3>\n<ul>\n<li>Add a single table binary classification dataset <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/141\" rel=\"nofollow\">Issue #141</a> by @csala</li>\n</ul>\n<h3>New Primitives</h3>\n<ul>\n<li>Add Multilayer Perceptron (MLP) primitive for binary classification <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/140\" rel=\"nofollow\">Issue #140</a> by @Hector-hedb12</li>\n<li>Add primitive for Sequence classification with LSTM <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/150\" rel=\"nofollow\">Issue #150</a> by @Hector-hedb12</li>\n<li>Add VGG-like convnet primitive <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/149\" rel=\"nofollow\">Issue #149</a> by @Hector-hedb12</li>\n<li>Add Multilayer Perceptron (MLP) primitive for multi-class softmax classification <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/139\" rel=\"nofollow\">Issue #139</a> by @Hector-hedb12</li>\n<li>Add primitive to count feature matrix columns <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/146\" rel=\"nofollow\">Issue #146</a> by @csala</li>\n</ul>\n<h3>Primitive Improvements</h3>\n<ul>\n<li>Add additional fit and predict arguments to keras.Sequential <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/161\" rel=\"nofollow\">Issue #161</a> by @csala</li>\n<li>Add suport for keras.Sequential Callbacks <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/159\" rel=\"nofollow\">Issue #159</a> by @csala</li>\n<li>Add fixed hyperparam to control keras.Sequential verbosity <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/143\" rel=\"nofollow\">Issue #143</a> by @csala</li>\n</ul>\n<h2>0.1.8</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>mlprimitives.custom.timeseries_preprocessing.time_segments_average - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/137\" rel=\"nofollow\">Issue #137</a></li>\n</ul>\n<h3>New Features</h3>\n<ul>\n<li>Add target_index output in timseries_preprocessing.rolling_window_sequences - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/136\" rel=\"nofollow\">Issue #136</a></li>\n</ul>\n<h2>0.1.7</h2>\n<h3>General Improvements</h3>\n<ul>\n<li>Validate JSON format in <code>make lint</code> -  <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/133\" rel=\"nofollow\">Issue #133</a></li>\n<li>Add demo datasets - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/131\" rel=\"nofollow\">Issue #131</a></li>\n<li>Improve featuretools.dfs primitive - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/127\" rel=\"nofollow\">Issue #127</a></li>\n</ul>\n<h3>New Primitives</h3>\n<ul>\n<li>pandas.DataFrame.resample - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/123\" rel=\"nofollow\">Issue #123</a></li>\n<li>pandas.DataFrame.unstack - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/124\" rel=\"nofollow\">Issue #124</a></li>\n<li>featuretools.EntitySet.add_relationship - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/126\" rel=\"nofollow\">Issue #126</a></li>\n<li>featuretools.EntitySet.entity_from_dataframe - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/126\" rel=\"nofollow\">Issue #126</a></li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Bug in timeseries_anomalies.py - <a href=\"https://github.com/HDI-Project/MLPrimitives/issues/119\" rel=\"nofollow\">Issue #119</a></li>\n</ul>\n<h2>0.1.6</h2>\n<h3>General Improvements</h3>\n<ul>\n<li>Add Contributing Documentation</li>\n<li>Remove upper bound in pandas version given new release of <code>featuretools</code> v0.6.1</li>\n<li>Improve LSTMTimeSeriesRegressor hyperparameters</li>\n</ul>\n<h3>New Primitives</h3>\n<ul>\n<li>mlprimitives.candidates.dsp.SpectralMask</li>\n<li>mlprimitives.custom.timeseries_anomalies.find_anomalies</li>\n<li>mlprimitives.custom.timeseries_anomalies.regression_errors</li>\n<li>mlprimitives.custom.timeseries_preprocessing.rolling_window_sequences</li>\n<li>mlprimitives.custom.timeseries_preprocessing.time_segments_average</li>\n<li>sklearn.linear_model.ElasticNet</li>\n<li>sklearn.linear_model.Lars</li>\n<li>sklearn.linear_model.Lasso</li>\n<li>sklearn.linear_model.MultiTaskLasso</li>\n<li>sklearn.linear_model.Ridge</li>\n</ul>\n<h2>0.1.5</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>sklearn.impute.SimpleImputer</li>\n<li>sklearn.preprocessing.MinMaxScaler</li>\n<li>sklearn.preprocessing.MaxAbsScaler</li>\n<li>sklearn.preprocessing.RobustScaler</li>\n<li>sklearn.linear_model.LinearRegression</li>\n</ul>\n<h3>General Improvements</h3>\n<ul>\n<li>Separate curated from candidate primitives</li>\n<li>Setup <code>entry_points</code> in setup.py to improve compaitibility with MLBlocks</li>\n<li>Add a test-pipelines command to test all the existing pipelines</li>\n<li>Clean sklearn example pipelines</li>\n<li>Change the <code>author</code> entry to a <code>contributors</code> list</li>\n<li>Change the name of <code>mlblocks_primitives</code> folder</li>\n<li>Pip install <code>requirements_dev.txt</code> fail documentation</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Fix LSTMTimeSeriesRegressor primitive. Issue #90</li>\n<li>Fix timeseries primitives. Issue #91</li>\n<li>Negative index anomalies in <code>timeseries_errors</code>. Issue #89</li>\n<li>Keep pandas version below 0.24.0. Issue #87</li>\n</ul>\n<h2>0.1.4</h2>\n<h3>New Primitives</h3>\n<ul>\n<li>mlprimitives.timeseries primitives for timeseries data preprocessing</li>\n<li>mlprimitives.timeseres_error primitives for timeseries anomaly detection</li>\n<li>keras.Sequential.LSTMTimeSeriesRegressor</li>\n<li>sklearn.neighbors.KNeighbors Classifier and Regressor</li>\n<li>several sklearn.decomposition primitives</li>\n<li>several sklearn.ensemble primitives</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Fix typo in mlprimitives.text.TextCleaner primitive</li>\n<li>Fix bug in index handling in featuretools.dfs primitive</li>\n<li>Fix bug in SingleLayerCNNImageClassifier annotation</li>\n<li>Remove old vlaidation tags from JSON annotations</li>\n</ul>\n<h2>0.1.3</h2>\n<h3>New Features</h3>\n<ul>\n<li>Fix and re-enable featuretools.dfs primitive.</li>\n</ul>\n<h2>0.1.2</h2>\n<h3>New Features</h3>\n<ul>\n<li>Add pipeline specification language and Evaluation utilities.</li>\n<li>Add pipelines for graph, text and tabular problems.</li>\n<li>New primitives ClassEncoder and ClassDecoder</li>\n<li>New primitives UniqueCounter and VocabularyCounter</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Fix TrivialPredictor bug when working with numpy arrays</li>\n<li>Change XGB default learning rate and number of estimators</li>\n</ul>\n<h2>0.1.1</h2>\n<h3>New Features</h3>\n<ul>\n<li>Add more keras.applications primitives.</li>\n<li>Add a Text Cleanup primitive.</li>\n</ul>\n<h3>Bug Fixes</h3>\n<ul>\n<li>Add keywords to <code>keras.preprocessing</code> primtives.</li>\n<li>Fix the <code>image_transform</code> method.</li>\n<li>Add <code>epoch</code> as a fixed hyperparameter for <code>keras.Sequential</code> primitives.</li>\n</ul>\n<h2>0.1.0</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 6544972, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "97e5a830edf206fe81bdcf6e581a7311", "sha256": "c6a423955ea55af764809a7bb38b732349d9e65d428b6e272a38c0e53ba7f9ab"}, "downloads": -1, "filename": "mlprimitives-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "97e5a830edf206fe81bdcf6e581a7311", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 42652, "upload_time": "2018-08-17T17:25:55", "upload_time_iso_8601": "2018-08-17T17:25:55.052695Z", "url": "https://files.pythonhosted.org/packages/b2/41/09829e1e120f7cbb0f5f6cacb433f0ecbd87cb35da3867010eb8d04c6d56/mlprimitives-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d975f5ade30303da777b423cd173da7", "sha256": "dbc127093977d2cf1696635255cddae39b31b1960ebb148a84b3e3ea0e69bf99"}, "downloads": -1, "filename": "mlprimitives-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1d975f5ade30303da777b423cd173da7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 28172, "upload_time": "2018-08-17T17:25:56", "upload_time_iso_8601": "2018-08-17T17:25:56.855599Z", "url": "https://files.pythonhosted.org/packages/7e/aa/b53ab54c3c9336872be801778fb777591f761143712928a852b3f8791c5d/mlprimitives-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "fd7b2121bc522087b9e1f8edb7f236eb", "sha256": "6900ef9db5d3a7bc1e6d65a5dc0786998e8deec3b0edad352045ca2bf27ce7cd"}, "downloads": -1, "filename": "mlprimitives-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fd7b2121bc522087b9e1f8edb7f236eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 51694, "upload_time": "2018-09-21T17:48:08", "upload_time_iso_8601": "2018-09-21T17:48:08.172804Z", "url": "https://files.pythonhosted.org/packages/3d/95/aa56cd46bc1cb1cb77f61e4b4261b8aa5d5abe96af798a080b44f19ae240/mlprimitives-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "999b1ac8a18480aa9620ca5f988b9469", "sha256": "bc9db3be6b956552786fc6af6a1c7a240175655c545a491e2e1891a17c2a2b04"}, "downloads": -1, "filename": "mlprimitives-0.1.1.tar.gz", "has_sig": false, "md5_digest": "999b1ac8a18480aa9620ca5f988b9469", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 35063, "upload_time": "2018-09-21T17:48:10", "upload_time_iso_8601": "2018-09-21T17:48:10.496772Z", "url": "https://files.pythonhosted.org/packages/13/15/b25493486eb0446af78a3bbef9b997daa6a5eb017d2f74bc7954286d0390/mlprimitives-0.1.1.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "4f1911ccd36137fd6506c78c03fd8933", "sha256": "52aaa412056f3427e48f35a4713bcad38532cffd8c94de84beab93384175c604"}, "downloads": -1, "filename": "mlprimitives-0.1.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4f1911ccd36137fd6506c78c03fd8933", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 125413, "upload_time": "2019-05-22T18:18:09", "upload_time_iso_8601": "2019-05-22T18:18:09.520846Z", "url": "https://files.pythonhosted.org/packages/37/48/7463b4cff518c63f876257f57be507525251eada95964d0d0a95a10fc626/mlprimitives-0.1.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4f3ac12249604cb965b680cfd95c227e", "sha256": "9669dc86bab1b44bfc2184373ea879596fcebc926292f52675ec994e5a2fd989"}, "downloads": -1, "filename": "mlprimitives-0.1.10.tar.gz", "has_sig": false, "md5_digest": "4f3ac12249604cb965b680cfd95c227e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 85717, "upload_time": "2019-05-22T18:18:11", "upload_time_iso_8601": "2019-05-22T18:18:11.194410Z", "url": "https://files.pythonhosted.org/packages/13/8d/279357c192ae805ca8b2498d8f80dc455345634a86dc25518d0c1d5d127d/mlprimitives-0.1.10.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "45da2f920e3bcc469e413a7ecd140699", "sha256": "567afae1a65ed90f9d2cf2437f00920e19624d435fb886bda5a0d95cc5b5fb76"}, "downloads": -1, "filename": "mlprimitives-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "45da2f920e3bcc469e413a7ecd140699", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 57969, "upload_time": "2018-10-10T21:23:33", "upload_time_iso_8601": "2018-10-10T21:23:33.948320Z", "url": "https://files.pythonhosted.org/packages/59/39/e6bc5d4af0fdd21bc15a739d0c8dffd4999e88a7930a6789aa7e0a39b25b/mlprimitives-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fca5fbf8911a1612690605cb354d15fb", "sha256": "d01419f585533ac6ad42ba4fe477e56112ad9d9b82b719e889ba3e85b6404e62"}, "downloads": -1, "filename": "mlprimitives-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fca5fbf8911a1612690605cb354d15fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38156, "upload_time": "2018-10-10T21:23:35", "upload_time_iso_8601": "2018-10-10T21:23:35.944344Z", "url": "https://files.pythonhosted.org/packages/0d/0b/73d2c261c25bdfb080e1164093ee4d36869e3e02e3ed53ead15ed3c8f96a/mlprimitives-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "4d31cb89208fc93c12f3169e75f91da8", "sha256": "beb2f9cbc21b610f6e37f761f0dd87d3a34274673d52aa243aa886fd7054518d"}, "downloads": -1, "filename": "mlprimitives-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d31cb89208fc93c12f3169e75f91da8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 59936, "upload_time": "2018-10-21T23:29:33", "upload_time_iso_8601": "2018-10-21T23:29:33.626990Z", "url": "https://files.pythonhosted.org/packages/5e/da/4b851f4cc2ed8d3daa28cc0a033012d1d22a99b5cf44cc0edacb902ca3fd/mlprimitives-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a4474e6b4d200215306573f69c5562a3", "sha256": "2519ec109880588aec73eac198c94cae9b9b63dc9e0d216fc46fd19996b1c4b7"}, "downloads": -1, "filename": "mlprimitives-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a4474e6b4d200215306573f69c5562a3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38677, "upload_time": "2018-10-21T23:29:35", "upload_time_iso_8601": "2018-10-21T23:29:35.034101Z", "url": "https://files.pythonhosted.org/packages/54/c4/3cbe849792e0f8cee67ef339a798035a07917f3187703b6979b5d2e997be/mlprimitives-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "081626ae9a828a4d6b16c5f2a1f2fbd1", "sha256": "11f837347f5500dd9f86cdeb096eb276cd2ce265396effc430fe5486a9d2bade"}, "downloads": -1, "filename": "mlprimitives-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "081626ae9a828a4d6b16c5f2a1f2fbd1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 85216, "upload_time": "2019-01-04T16:47:16", "upload_time_iso_8601": "2019-01-04T16:47:16.038020Z", "url": "https://files.pythonhosted.org/packages/c2/ea/f26aa8f6126aa69cbb15caf963b5ae69497714a03dcc92fd56027112e597/mlprimitives-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d437b35c6e3c1024178b4ca7d76965e4", "sha256": "41eefd0fb369855d3168341f37ecce592a676c16316733b1d6e81a9c55919aee"}, "downloads": -1, "filename": "mlprimitives-0.1.4.tar.gz", "has_sig": false, "md5_digest": "d437b35c6e3c1024178b4ca7d76965e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 46753, "upload_time": "2019-01-04T16:47:18", "upload_time_iso_8601": "2019-01-04T16:47:18.219914Z", "url": "https://files.pythonhosted.org/packages/a9/76/00adc0fe0767e9321f50d0b603497bd27709065f2da22fdc027497cd441e/mlprimitives-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "5ccb9aa3b5c17a2f63f4771d3f1ab74c", "sha256": "427d9f7f2c35713176f5fc69b76d9429e4ae74eec308bf4c7283cb148b2087e8"}, "downloads": -1, "filename": "mlprimitives-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5ccb9aa3b5c17a2f63f4771d3f1ab74c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 86910, "upload_time": "2019-02-12T17:25:37", "upload_time_iso_8601": "2019-02-12T17:25:37.241921Z", "url": "https://files.pythonhosted.org/packages/75/28/0c6c99fa79409f311c18a8554486d9a93876bad5ee8ba5860c89a45ccac5/mlprimitives-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d978ff9c411fa8fac1a6f3f0d45fa8f", "sha256": "f4be2e8654fbedc10392a302e5706b60dd46ecc6192dc522145a83f33e7bc804"}, "downloads": -1, "filename": "mlprimitives-0.1.5.tar.gz", "has_sig": false, "md5_digest": "3d978ff9c411fa8fac1a6f3f0d45fa8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 49204, "upload_time": "2019-02-12T17:25:38", "upload_time_iso_8601": "2019-02-12T17:25:38.812606Z", "url": "https://files.pythonhosted.org/packages/cd/63/9e7de9bf33667031fbaf0754d1829cf28263b21385df7bb8fbe40781dec4/mlprimitives-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "cc2e32d02a259a52f7b336e11cbadcc4", "sha256": "2ebe8d5f01c5435356839654932f53d838f960ba89e597d7dacc7f98c74ed240"}, "downloads": -1, "filename": "mlprimitives-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cc2e32d02a259a52f7b336e11cbadcc4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 102607, "upload_time": "2019-02-28T22:05:07", "upload_time_iso_8601": "2019-02-28T22:05:07.530260Z", "url": "https://files.pythonhosted.org/packages/41/12/d5f1c1ae82e77bddbd8929223f9e351375792bf71e0f64418d45f4440fb6/mlprimitives-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f796cfd7731af79bbbb796dbbbb69ba", "sha256": "653e5ad440838e61e80627131f2502e1963002f0b15e8e3fc1a85cccd09c1fcb"}, "downloads": -1, "filename": "mlprimitives-0.1.6.tar.gz", "has_sig": false, "md5_digest": "1f796cfd7731af79bbbb796dbbbb69ba", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 900666, "upload_time": "2019-02-28T22:05:09", "upload_time_iso_8601": "2019-02-28T22:05:09.612586Z", "url": "https://files.pythonhosted.org/packages/c8/8f/ae5928416d024fb609e383df4a06e8566fcdca40920a46037e433495bfcf/mlprimitives-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "d2eb60cf1cc3b2755513e6f8d2258c98", "sha256": "b62cdb1bfd363b3980efee6bda16fc98a19208610327a383aac822f3e260447b"}, "downloads": -1, "filename": "mlprimitives-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2eb60cf1cc3b2755513e6f8d2258c98", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 113426, "upload_time": "2019-03-16T11:51:16", "upload_time_iso_8601": "2019-03-16T11:51:16.747541Z", "url": "https://files.pythonhosted.org/packages/37/fe/160ec1bec278a76fcb530e59132bf4a641eb4005b14a5cc42385c6e8e0b1/mlprimitives-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1223edc60a46c3bafb2307baf1a7fc4d", "sha256": "de04751d5816dc78f29f16723878c5c515ac697aaa899ed207108c55823b8a16"}, "downloads": -1, "filename": "mlprimitives-0.1.7.tar.gz", "has_sig": false, "md5_digest": "1223edc60a46c3bafb2307baf1a7fc4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 906821, "upload_time": "2019-03-16T11:51:33", "upload_time_iso_8601": "2019-03-16T11:51:33.549914Z", "url": "https://files.pythonhosted.org/packages/7c/d8/3ccbfa0ab87d959ba4511d53887753ff0518a0d150c91cb302166a1a015f/mlprimitives-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "869aac38b2732ab60052cc1362d4c963", "sha256": "6e03471d3b3ba47d253b2113c05c38fb04667a04a6d813b89fa60872b0f3280e"}, "downloads": -1, "filename": "mlprimitives-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "869aac38b2732ab60052cc1362d4c963", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 114729, "upload_time": "2019-03-22T13:29:57", "upload_time_iso_8601": "2019-03-22T13:29:57.402557Z", "url": "https://files.pythonhosted.org/packages/7a/50/475cc8cb44605bd75525449a4c5630bc39f6bb0fb87c6826bb4fb96fce6c/mlprimitives-0.1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5c1413224901f074544411dfd7442c7", "sha256": "7d99e5b075eb32bc20f25c1fb4b01c55cd0fcf5834cbf873eafed39fc2474c8d"}, "downloads": -1, "filename": "mlprimitives-0.1.8.tar.gz", "has_sig": false, "md5_digest": "a5c1413224901f074544411dfd7442c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 907911, "upload_time": "2019-03-22T13:30:13", "upload_time_iso_8601": "2019-03-22T13:30:13.922152Z", "url": "https://files.pythonhosted.org/packages/a9/13/d40a8f9df7b65fd932c0d88ae75544b8dea39b40f5116d6d9451e6ba9162/mlprimitives-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "ca55ff215bf0ca84ee47d0f7be54755b", "sha256": "38f347f269ee4c229a6e78832f9cba9ded5db9fa61b76e2ab9c7d70089f9f2df"}, "downloads": -1, "filename": "mlprimitives-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ca55ff215bf0ca84ee47d0f7be54755b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 123067, "upload_time": "2019-04-25T11:42:53", "upload_time_iso_8601": "2019-04-25T11:42:53.983509Z", "url": "https://files.pythonhosted.org/packages/ef/ae/3c0d71f5148e76d76573a654bb39ef2c1f8cd2f482560359f22a3c42dc1e/mlprimitives-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a21431277766b41b33f082bc93ca95d", "sha256": "033b4341c239eddaf7f5082927607c68e973f6eed618239118171faaaab8ee05"}, "downloads": -1, "filename": "mlprimitives-0.1.9.tar.gz", "has_sig": false, "md5_digest": "4a21431277766b41b33f082bc93ca95d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 912665, "upload_time": "2019-04-25T11:43:11", "upload_time_iso_8601": "2019-04-25T11:43:11.906778Z", "url": "https://files.pythonhosted.org/packages/2f/17/e2ec5b1f8258c5121888e4485962afebe3d9f4bcd8da0ea22a9c6226728a/mlprimitives-0.1.9.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "25d3a3ede4d079c783f1dfc6dc6d918e", "sha256": "8f9fccef175873eb533d354335618ee194de81d394dc941e2c0373ebeaaff071"}, "downloads": -1, "filename": "mlprimitives-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25d3a3ede4d079c783f1dfc6dc6d918e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 148909, "upload_time": "2019-07-11T20:20:05", "upload_time_iso_8601": "2019-07-11T20:20:05.855015Z", "url": "https://files.pythonhosted.org/packages/70/1e/ca7f8e346f2ac32ebfe57b96771620f15a6d1a7c7bc99f9b13fde3ab26de/mlprimitives-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cf3f3dc3a8c2e64731748f3c6c830de1", "sha256": "ec2a1a9822eff27583fd4ca6232f9ad9f16d687170fa1e2a98164eb45bd79488"}, "downloads": -1, "filename": "mlprimitives-0.2.0.tar.gz", "has_sig": false, "md5_digest": "cf3f3dc3a8c2e64731748f3c6c830de1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 91663, "upload_time": "2019-07-11T20:20:09", "upload_time_iso_8601": "2019-07-11T20:20:09.242848Z", "url": "https://files.pythonhosted.org/packages/91/9d/ee31a87cbfa072f7b8a635cc786e50c8da9f5b747096aa144f87931d81bc/mlprimitives-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "e61da19435ae8fdfa43412a582191036", "sha256": "afd8a5bc61a1d3098bdefe66e98828f4fdf5d0f4e5a622eba1fcb26f9cffe22c"}, "downloads": -1, "filename": "mlprimitives-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e61da19435ae8fdfa43412a582191036", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 152350, "upload_time": "2019-09-09T09:39:42", "upload_time_iso_8601": "2019-09-09T09:39:42.695867Z", "url": "https://files.pythonhosted.org/packages/7b/c3/0998d9ef18bbd2d024704d4f61fea72f2997a3b1e6d2acae56045b41b8e1/mlprimitives-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7328522b0fc371e168006c876f6b2b41", "sha256": "8ab717dbdb4dd47f5e112f564fb174e0b1a4c180c9c84e859a02a45e99c8c9dd"}, "downloads": -1, "filename": "mlprimitives-0.2.1.tar.gz", "has_sig": false, "md5_digest": "7328522b0fc371e168006c876f6b2b41", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 95621, "upload_time": "2019-09-09T09:39:46", "upload_time_iso_8601": "2019-09-09T09:39:46.419094Z", "url": "https://files.pythonhosted.org/packages/49/03/ca080a19c1309af2fcd9337e96257e48243934dbbb5f2fd60a80829193c7/mlprimitives-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "a61d3ebc8ba9a52b38c7a92b775a1212", "sha256": "37e7076456fb310199c3392834e14ca37fc4ed6e1728ddff6dc631fe8d71a390"}, "downloads": -1, "filename": "mlprimitives-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a61d3ebc8ba9a52b38c7a92b775a1212", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 161760, "upload_time": "2019-10-08T17:46:36", "upload_time_iso_8601": "2019-10-08T17:46:36.047685Z", "url": "https://files.pythonhosted.org/packages/33/10/eff37c7d475c08bcf940f54bcdf568ffa9d9a5fdb476492bbb3e367bed23/mlprimitives-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1d9890c90ab6c497191fc5032fe0e558", "sha256": "39fc1f4dde4455813974ef08dfec51861520278b9a875a8d9d64d72241c51966"}, "downloads": -1, "filename": "mlprimitives-0.2.2.tar.gz", "has_sig": false, "md5_digest": "1d9890c90ab6c497191fc5032fe0e558", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 102000, "upload_time": "2019-10-08T17:46:41", "upload_time_iso_8601": "2019-10-08T17:46:41.026875Z", "url": "https://files.pythonhosted.org/packages/ba/16/43c6066e48792e3ec106088b0c36bf0699203f2eab686206215d5576e183/mlprimitives-0.2.2.tar.gz", "yanked": false}], "0.2.2.dev0": [{"comment_text": "", "digests": {"md5": "a14735de58cad0c5809ce2ff5e9fc80f", "sha256": "09897ab942ad3f3dc2553a97f220691b2231ff9825586cb9b424329c7ca67344"}, "downloads": -1, "filename": "mlprimitives-0.2.2.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a14735de58cad0c5809ce2ff5e9fc80f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 156149, "upload_time": "2019-09-18T18:38:52", "upload_time_iso_8601": "2019-09-18T18:38:52.706574Z", "url": "https://files.pythonhosted.org/packages/2c/b6/91dbf53df5bea041e8fe0b237b5688bc9add269e34bd7c25eea02317fc99/mlprimitives-0.2.2.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5737c5be6e70d910c4f9f6429c22291c", "sha256": "444212ee12b22390a45c56d1579eb8ce885668b3d5b1e8199ddcdeeca2b812a7"}, "downloads": -1, "filename": "mlprimitives-0.2.2.dev0.tar.gz", "has_sig": false, "md5_digest": "5737c5be6e70d910c4f9f6429c22291c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 97845, "upload_time": "2019-09-18T18:38:55", "upload_time_iso_8601": "2019-09-18T18:38:55.456256Z", "url": "https://files.pythonhosted.org/packages/53/ca/08edbca2c493f45ce8b84cada8b292df3b18795d0b61b29f0fe2dfb3a142/mlprimitives-0.2.2.dev0.tar.gz", "yanked": false}], "0.2.2.dev1": [{"comment_text": "", "digests": {"md5": "183d79eeb93fce4b3b3041c6e9362555", "sha256": "337c70e3139f4ee0048cb13630f38293b6018e0fe881b6c67431481e28d0801f"}, "downloads": -1, "filename": "mlprimitives-0.2.2.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "183d79eeb93fce4b3b3041c6e9362555", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 161708, "upload_time": "2019-10-03T18:08:58", "upload_time_iso_8601": "2019-10-03T18:08:58.631016Z", "url": "https://files.pythonhosted.org/packages/de/7d/4dd8e80ec983e1c66cf75203de4f57beab3f4c7c32f6418aaa1ec1bf20d0/mlprimitives-0.2.2.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f28a50e0aa6c852be4cdfe0c6298a0a2", "sha256": "81b77cf1cf236f96e26059a08fef1c933ce189a35f81d1c15ab0e5098f4d3f50"}, "downloads": -1, "filename": "mlprimitives-0.2.2.dev1.tar.gz", "has_sig": false, "md5_digest": "f28a50e0aa6c852be4cdfe0c6298a0a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 101697, "upload_time": "2019-10-03T18:09:01", "upload_time_iso_8601": "2019-10-03T18:09:01.250602Z", "url": "https://files.pythonhosted.org/packages/a8/dd/96bb7d3027ff7790d2396604508eed0fdd0abd85dc785d85a6b9e3a8a67f/mlprimitives-0.2.2.dev1.tar.gz", "yanked": false}], "0.2.2.dev2": [{"comment_text": "", "digests": {"md5": "baf25adb07fa443254fef29e5f3db105", "sha256": "1592e4f6372a383d7485d40836b3954ca40c124283d54b3684b115ed8b58c3a5"}, "downloads": -1, "filename": "mlprimitives-0.2.2.dev2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "baf25adb07fa443254fef29e5f3db105", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 161711, "upload_time": "2019-10-03T18:59:53", "upload_time_iso_8601": "2019-10-03T18:59:53.331593Z", "url": "https://files.pythonhosted.org/packages/72/65/782eb1f76cb5757fabba9bd5f68ff69daf44173f8018f77a50462181f6dd/mlprimitives-0.2.2.dev2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad43bbdd7aec2689c3903a96a00442f8", "sha256": "c8b646cd5bacd71891186c001292fb5b9801c94525cb465120bc9930633b1b9e"}, "downloads": -1, "filename": "mlprimitives-0.2.2.dev2.tar.gz", "has_sig": false, "md5_digest": "ad43bbdd7aec2689c3903a96a00442f8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 101719, "upload_time": "2019-10-03T18:59:55", "upload_time_iso_8601": "2019-10-03T18:59:55.878780Z", "url": "https://files.pythonhosted.org/packages/e6/42/f53091c9e3484c0290f6776f732cdc6014c012df3ce6da20750489889975/mlprimitives-0.2.2.dev2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "b4a3dbff80f0e969d91c3d1704372be2", "sha256": "87ed05b35088e9b090914f9117e31e07f887bf9af4c7923c17fed41f6366aaaa"}, "downloads": -1, "filename": "mlprimitives-0.2.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4a3dbff80f0e969d91c3d1704372be2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 177725, "upload_time": "2019-11-14T17:03:16", "upload_time_iso_8601": "2019-11-14T17:03:16.183050Z", "url": "https://files.pythonhosted.org/packages/f4/3f/5694356187061867e41390ad33e8fc3c6d92cf1f712cc0165aae8136349f/mlprimitives-0.2.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd6ec856b949c970c5621d479e9d4fd1", "sha256": "83e16b2d8cbe71c430aff6392737c1df593f6aaeaa54cb93e3d6379a6fc17b69"}, "downloads": -1, "filename": "mlprimitives-0.2.3.tar.gz", "has_sig": false, "md5_digest": "dd6ec856b949c970c5621d479e9d4fd1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 109423, "upload_time": "2019-11-14T17:03:18", "upload_time_iso_8601": "2019-11-14T17:03:18.292123Z", "url": "https://files.pythonhosted.org/packages/6c/b2/eb0f8013d53672f63820e65296552d6e871f83948f50f6f43bf5de5ec5e9/mlprimitives-0.2.3.tar.gz", "yanked": false}], "0.2.3.dev0": [{"comment_text": "", "digests": {"md5": "0bb289ce4f3ad930eb95176f92c795e8", "sha256": "721c87288215bef8926d6eec8f830bbb9fe25e97bb4fa8a120364f3d5c2ba845"}, "downloads": -1, "filename": "mlprimitives-0.2.3.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0bb289ce4f3ad930eb95176f92c795e8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 162840, "upload_time": "2019-11-03T21:24:57", "upload_time_iso_8601": "2019-11-03T21:24:57.089784Z", "url": "https://files.pythonhosted.org/packages/9f/6c/31b0c615867a06985f95f659916afd02c969658c394cb22564236439425e/mlprimitives-0.2.3.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "75973677a51b92d01fa84a46b38b0919", "sha256": "f35bfa909463df74380186b5ffeadbeedbba24a820859a7a25725b6e9713ac33"}, "downloads": -1, "filename": "mlprimitives-0.2.3.dev0.tar.gz", "has_sig": false, "md5_digest": "75973677a51b92d01fa84a46b38b0919", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 102508, "upload_time": "2019-11-03T21:24:58", "upload_time_iso_8601": "2019-11-03T21:24:58.994782Z", "url": "https://files.pythonhosted.org/packages/d4/77/8ac6277df3beeb0650944b1226bbd198630702ec97e878db0f36fd0b36f8/mlprimitives-0.2.3.dev0.tar.gz", "yanked": false}], "0.2.3.dev1": [{"comment_text": "", "digests": {"md5": "d8f94961953d6ec837085f08371f3d1e", "sha256": "a159b3bfcc880a3d8434e8ce6bac070d756d9a9d08583f0a146e44b8104ea724"}, "downloads": -1, "filename": "mlprimitives-0.2.3.dev1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d8f94961953d6ec837085f08371f3d1e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 177623, "upload_time": "2019-11-04T23:06:39", "upload_time_iso_8601": "2019-11-04T23:06:39.447277Z", "url": "https://files.pythonhosted.org/packages/bb/2c/211f6bc49b2324b596d4f409058099fed7065730ceceac4082d15d7d836e/mlprimitives-0.2.3.dev1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9929a8976e1d48b623d225c1a71a2026", "sha256": "348aff9e18a214c1c7390b49339635dfa14ff3da6c082c64285acb5bf3ba8333"}, "downloads": -1, "filename": "mlprimitives-0.2.3.dev1.tar.gz", "has_sig": false, "md5_digest": "9929a8976e1d48b623d225c1a71a2026", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 109035, "upload_time": "2019-11-04T23:06:41", "upload_time_iso_8601": "2019-11-04T23:06:41.462636Z", "url": "https://files.pythonhosted.org/packages/a8/97/5e7a22f8ec381450d20428cb61131d86cca0533def00acd4d6ce6d3b3df9/mlprimitives-0.2.3.dev1.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "6fce22a716dc704790bf312c2afe6978", "sha256": "b1e808738b83f432e8a4c37c303a4c7bdd5b99c8786a7d2c06c60b9a49434797"}, "downloads": -1, "filename": "mlprimitives-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fce22a716dc704790bf312c2afe6978", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 179650, "upload_time": "2020-01-30T18:27:52", "upload_time_iso_8601": "2020-01-30T18:27:52.155291Z", "url": "https://files.pythonhosted.org/packages/84/68/7cc1fa7f1ef9f63515b587c848487b25d81034f39d2b461c1e46eafcc7bf/mlprimitives-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69a83388582b4c09173e0d9d8e51a181", "sha256": "a61898a2c60b7b26bf2d21f3b7b2f230a552cb504b4903ea9a204a77b7689b5a"}, "downloads": -1, "filename": "mlprimitives-0.2.4.tar.gz", "has_sig": false, "md5_digest": "69a83388582b4c09173e0d9d8e51a181", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 111694, "upload_time": "2020-01-30T18:27:54", "upload_time_iso_8601": "2020-01-30T18:27:54.297705Z", "url": "https://files.pythonhosted.org/packages/51/cd/6f89be2ab12f7c7c65c6d65600922da657fe2c58d51972e5ae8a3f70037a/mlprimitives-0.2.4.tar.gz", "yanked": false}], "0.2.4.dev0": [{"comment_text": "", "digests": {"md5": "e3f5f92ff9b27d335fbaa0215ca0d24c", "sha256": "5ed892c746c4caf90169d0537f12573f12737227b99226953321d546569d303c"}, "downloads": -1, "filename": "mlprimitives-0.2.4.dev0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e3f5f92ff9b27d335fbaa0215ca0d24c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 179584, "upload_time": "2020-01-30T15:08:08", "upload_time_iso_8601": "2020-01-30T15:08:08.628819Z", "url": "https://files.pythonhosted.org/packages/29/39/b091669440caa27f5234c0aceb082e1eadeab5edd2f9cf32994769998b81/mlprimitives-0.2.4.dev0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ce9911480db820c2d3f7e4313b3b2896", "sha256": "e84d39136caf932e3eb954e56af062a4a642136d12e16b481d194f7647e70676"}, "downloads": -1, "filename": "mlprimitives-0.2.4.dev0.tar.gz", "has_sig": false, "md5_digest": "ce9911480db820c2d3f7e4313b3b2896", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 111506, "upload_time": "2020-01-30T15:08:10", "upload_time_iso_8601": "2020-01-30T15:08:10.844260Z", "url": "https://files.pythonhosted.org/packages/9f/cd/179bd1461cdf1e4d043a9bef7cc06fd58325d454d1fd71b5411709223bf0/mlprimitives-0.2.4.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6fce22a716dc704790bf312c2afe6978", "sha256": "b1e808738b83f432e8a4c37c303a4c7bdd5b99c8786a7d2c06c60b9a49434797"}, "downloads": -1, "filename": "mlprimitives-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6fce22a716dc704790bf312c2afe6978", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.5", "size": 179650, "upload_time": "2020-01-30T18:27:52", "upload_time_iso_8601": "2020-01-30T18:27:52.155291Z", "url": "https://files.pythonhosted.org/packages/84/68/7cc1fa7f1ef9f63515b587c848487b25d81034f39d2b461c1e46eafcc7bf/mlprimitives-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69a83388582b4c09173e0d9d8e51a181", "sha256": "a61898a2c60b7b26bf2d21f3b7b2f230a552cb504b4903ea9a204a77b7689b5a"}, "downloads": -1, "filename": "mlprimitives-0.2.4.tar.gz", "has_sig": false, "md5_digest": "69a83388582b4c09173e0d9d8e51a181", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 111694, "upload_time": "2020-01-30T18:27:54", "upload_time_iso_8601": "2020-01-30T18:27:54.297705Z", "url": "https://files.pythonhosted.org/packages/51/cd/6f89be2ab12f7c7c65c6d65600922da657fe2c58d51972e5ae8a3f70037a/mlprimitives-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:24 2020"}