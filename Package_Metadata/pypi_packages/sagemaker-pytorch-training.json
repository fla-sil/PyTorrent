{"info": {"author": "Amazon Web Services", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "===========================\nSageMaker PyTorch Container\n===========================\n\nSageMaker PyTorch Container is an open source library for making the\nPyTorch framework run on Amazon SageMaker.\n\nThis repository also contains Dockerfiles which install this library, PyTorch, and dependencies\nfor building SageMaker PyTorch images.\n\nThe SageMaker team uses this repository to build its official PyTorch image. To use this image on SageMaker,\nsee `Python SDK <https://github.com/aws/sagemaker-python-sdk>`__.\nFor end users, this repository is typically of interest if you need implementation details for\nthe official image, or if you want to use it to build your own customized PyTorch image.\n\nFor information on running PyTorch jobs on SageMaker: `SageMaker PyTorch Estimators and Models\n<https://github.com/aws/sagemaker-python-sdk/tree/master/src/sagemaker/pytorch>`__.\n\nFor notebook examples: `SageMaker Notebook\nExamples <https://github.com/awslabs/amazon-sagemaker-examples>`__.\n\nTable of Contents\n-----------------\n\n#. `Getting Started <#getting-started>`__\n#. `Building your Image <#building-your-image>`__\n#. `Running the tests <#running-the-tests>`__\n\nGetting Started\n---------------\n\nPrerequisites\n~~~~~~~~~~~~~\n\nMake sure you have installed all of the following prerequisites on your\ndevelopment machine:\n\n- `Docker <https://www.docker.com/>`__\n\nFor Testing on GPU\n^^^^^^^^^^^^^^^^^^\n\n-  `Nvidia-Docker <https://github.com/NVIDIA/nvidia-docker>`__\n\nRecommended\n^^^^^^^^^^^\n\n-  A Python environment management tool (e.g.\n   `PyEnv <https://github.com/pyenv/pyenv>`__,\n   `VirtualEnv <https://virtualenv.pypa.io/en/stable/>`__)\n\nBuilding your image\n-------------------\n\n`Amazon SageMaker <https://aws.amazon.com/documentation/sagemaker/>`__\nutilizes Docker containers to run all training jobs & inference endpoints.\n\nThe Docker images are built from the Dockerfiles specified in\n`Docker/ <https://github.com/aws/sagemaker-pytorch-container/tree/master/docker>`__.\n\nThe Docker files are grouped based on PyTorch version and separated\nbased on Python version and processor type.\n\nThe Docker images, used to run training & inference jobs, are built from\nboth corresponding \"base\" and \"final\" Dockerfiles.\n\nBase Images\n~~~~~~~~~~~\n\nThe \"base\" Dockerfile encompass the installation of the framework and all of the dependencies\nneeded.\n\nTagging scheme is based on <PyTorch_version>-<processor>-py<python_version>. (e.g.1.0.0-cpu-py3)\n\nAll \"final\" Dockerfiles build images using base images that use the tagging scheme\nabove.\n\nIf you want to build your base docker image, then use:\n\n::\n\n    # All build instructions assume you're building from the root directory of the sagemaker-pytorch-container.\n\n    # CPU\n    docker build -t pytorch-base:<PyTorch_version>-cpu-py<python_version> -f docker/<PyTorch_version>/base/Dockerfile.cpu --build-arg py_version=<python_version> .\n\n    # GPU\n    docker build -t pytorch-base:<PyTorch_version>-gpu-py<python_version> -f docker/<PyTorch_version>/base/Dockerfile.gpu --build-arg py_version=<python_version> .\n\n::\n\n    # Example\n\n    # CPU\n    docker build -t pytorch-base:1.0.0-cpu-py3 -f docker/1.0.0/base/Dockerfile.cpu --build-arg py_version=3 .\n\n    # GPU\n    docker build -t pytorch-base:1.0.0-gpu-py3 -f docker/1.0.0/base/Dockerfile.gpu --build-arg py_version=3 .\n\nFinal Images\n~~~~~~~~~~~~\n\nThe \"final\" Dockerfiles encompass the installation of the SageMaker specific support code.\n\nAll \"final\" Dockerfiles use `base images for building <https://github.com/aws/sagemaker-pytorch-container/blob/master/docker/1.0.0/final/Dockerfile.cpu#L2>`__.\n\nThese \"base\" images are specified with the naming convention of\npytorch-base:<PyTorch_version>-<processor>-py<python_version>.\n\nBefore building \"final\" images:\n\nBuild your \"base\" image. Make sure it is named and tagged in accordance with your \"final\"\nDockerfile.\n\n\nIf you want to build \"final\" Docker images, then use:\n\n::\n\n    # All build instructions assume you're building from the root directory of the sagemaker-pytorch-container.\n\n    # CPU\n    docker build -t <image_name>:<tag> -f docker/<PyTorch_version>/final/Dockerfile.cpu --build-arg py_version=<python_version> .\n\n    # GPU\n    docker build -t <image_name>:<tag> -f docker/<PyTorch_version>/final/Dockerfile.gpu --build-arg py_version=<python_version> .\n\n::\n\n    # Example\n\n    # CPU\n    docker build -t preprod-pytorch:1.0.0-cpu-py3 -f docker/1.0.0/final/Dockerfile.cpu --build-arg py_version=3 .\n\n    # GPU\n    docker build -t preprod-pytorch:1.0.0-gpu-py3 -f docker/1.0.0/final/Dockerfile.gpu --build-arg py_version=3 .\n\n\nRunning the tests\n-----------------\n\nRunning the tests requires installation of the SageMaker PyTorch Container code and its test\ndependencies.\n\n::\n\n    git clone https://github.com/aws/sagemaker-pytorch-container.git\n    cd sagemaker-pytorch-container\n    pip install -e .[test]\n\nTests are defined in\n`test/ <https://github.com/aws/sagemaker-pytorch-container/tree/master/test>`__\nand include unit, local integration, and SageMaker integration tests.\n\nUnit Tests\n~~~~~~~~~~\n\nIf you want to run unit tests, then use:\n\n::\n\n    # All test instructions should be run from the top level directory\n\n    pytest test/unit\n\n    # or you can use tox to run unit tests as well as flake8 and code coverage\n\n    tox\n\n\nLocal Integration Tests\n~~~~~~~~~~~~~~~~~~~~~~~\n\nRunning local integration tests require `Docker <https://www.docker.com/>`__ and `AWS\ncredentials <https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-credentials.html>`__,\nas the local integration tests make calls to a couple AWS services. The local integration tests and\nSageMaker integration tests require configurations specified within their respective\n`conftest.py <https://github.com/aws/sagemaker-pytorch-container/blob/master/test/conftest.py>`__.\n\nLocal integration tests on GPU require `Nvidia-Docker <https://github.com/NVIDIA/nvidia-docker>`__.\n\nBefore running local integration tests:\n\n#. Build your Docker image.\n#. Pass in the correct pytest arguments to run tests against your Docker image.\n\nIf you want to run local integration tests, then use:\n\n::\n\n    # Required arguments for integration tests are found in test/conftest.py\n\n    pytest test/integration/local --docker-base-name <your_docker_image> \\\n                      --tag <your_docker_image_tag> \\\n                      --py-version <2_or_3> \\\n                      --framework-version <PyTorch_version> \\\n                      --processor <cpu_or_gpu>\n\n::\n\n    # Example\n    pytest test/integration/local --docker-base-name preprod-pytorch \\\n                      --tag 1.0 \\\n                      --py-version 3 \\\n                      --framework-version 1.0.0 \\\n                      --processor cpu\n\nSageMaker Integration Tests\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nSageMaker integration tests require your Docker image to be within an `Amazon ECR repository <https://docs\n.aws.amazon.com/AmazonECS/latest/developerguide/ECS_Console_Repositories.html>`__.\n\nThe Docker base name is your `ECR repository namespace <https://docs.aws.amazon\n.com/AmazonECR/latest/userguide/Repositories.html>`__.\n\nThe instance type is your specified `Amazon SageMaker Instance Type\n<https://aws.amazon.com/sagemaker/pricing/instance-types/>`__ that the SageMaker integration test will run on.\n\nBefore running SageMaker integration tests:\n\n#. Build your Docker image.\n#. Push the image to your ECR repository.\n#. Pass in the correct pytest arguments to run tests on SageMaker against the image within your ECR repository.\n\nIf you want to run a SageMaker integration end to end test on `Amazon\nSageMaker <https://aws.amazon.com/sagemaker/>`__, then use:\n\n::\n\n    # Required arguments for integration tests are found in test/conftest.py\n\n    pytest test/integration/sagemaker --aws-id <your_aws_id> \\\n                           --docker-base-name <your_docker_image> \\\n                           --instance-type <amazon_sagemaker_instance_type> \\\n                           --tag <your_docker_image_tag> \\\n\n::\n\n    # Example\n    pytest test/integration/sagemaker --aws-id 12345678910 \\\n                           --docker-base-name preprod-pytorch \\\n                           --instance-type ml.m4.xlarge \\\n                           --tag 1.0\n\nContributing\n------------\n\nPlease read\n`CONTRIBUTING.md <https://github.com/aws/sagemaker-pytorch-container/blob/master/CONTRIBUTING.md>`__\nfor details on our code of conduct, and the process for submitting pull\nrequests to us.\n\nLicense\n-------\n\nSageMaker PyTorch Container is licensed under the Apache 2.0 License. It is copyright 2018 Amazon\n.com, Inc. or its affiliates. All Rights Reserved. The license is available at:\nhttp://aws.amazon.com/apache2.0/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aws/sagemaker-pytorch-container", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "sagemaker-pytorch-training", "package_url": "https://pypi.org/project/sagemaker-pytorch-training/", "platform": "", "project_url": "https://pypi.org/project/sagemaker-pytorch-training/", "project_urls": {"Homepage": "https://github.com/aws/sagemaker-pytorch-container"}, "release_url": "https://pypi.org/project/sagemaker-pytorch-training/2.2.0/", "requires_dist": null, "requires_python": "", "summary": "Open source library for creating PyTorch containers to run on Amazon SageMaker.", "version": "2.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SageMaker PyTorch Container is an open source library for making the\nPyTorch framework run on Amazon SageMaker.</p>\n<p>This repository also contains Dockerfiles which install this library, PyTorch, and dependencies\nfor building SageMaker PyTorch images.</p>\n<p>The SageMaker team uses this repository to build its official PyTorch image. To use this image on SageMaker,\nsee <a href=\"https://github.com/aws/sagemaker-python-sdk\" rel=\"nofollow\">Python SDK</a>.\nFor end users, this repository is typically of interest if you need implementation details for\nthe official image, or if you want to use it to build your own customized PyTorch image.</p>\n<p>For information on running PyTorch jobs on SageMaker: <a href=\"https://github.com/aws/sagemaker-python-sdk/tree/master/src/sagemaker/pytorch\" rel=\"nofollow\">SageMaker PyTorch Estimators and Models</a>.</p>\n<p>For notebook examples: <a href=\"https://github.com/awslabs/amazon-sagemaker-examples\" rel=\"nofollow\">SageMaker Notebook\nExamples</a>.</p>\n<div id=\"table-of-contents\">\n<h2>Table of Contents</h2>\n<ol>\n<li><a href=\"#getting-started\" rel=\"nofollow\">Getting Started</a></li>\n<li><a href=\"#building-your-image\" rel=\"nofollow\">Building your Image</a></li>\n<li><a href=\"#running-the-tests\" rel=\"nofollow\">Running the tests</a></li>\n</ol>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<h2 id=\"prerequisites\"><span class=\"section-subtitle\">Prerequisites</span></h2>\n<p>Make sure you have installed all of the following prerequisites on your\ndevelopment machine:</p>\n<ul>\n<li><a href=\"https://www.docker.com/\" rel=\"nofollow\">Docker</a></li>\n</ul>\n<div id=\"for-testing-on-gpu\">\n<h3>For Testing on GPU</h3>\n<ul>\n<li><a href=\"https://github.com/NVIDIA/nvidia-docker\" rel=\"nofollow\">Nvidia-Docker</a></li>\n</ul>\n</div>\n<div id=\"recommended\">\n<h3>Recommended</h3>\n<ul>\n<li>A Python environment management tool (e.g.\n<a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">PyEnv</a>,\n<a href=\"https://virtualenv.pypa.io/en/stable/\" rel=\"nofollow\">VirtualEnv</a>)</li>\n</ul>\n</div>\n</div>\n<div id=\"building-your-image\">\n<h2>Building your image</h2>\n<p><a href=\"https://aws.amazon.com/documentation/sagemaker/\" rel=\"nofollow\">Amazon SageMaker</a>\nutilizes Docker containers to run all training jobs &amp; inference endpoints.</p>\n<p>The Docker images are built from the Dockerfiles specified in\n<a href=\"https://github.com/aws/sagemaker-pytorch-container/tree/master/docker\" rel=\"nofollow\">Docker/</a>.</p>\n<p>The Docker files are grouped based on PyTorch version and separated\nbased on Python version and processor type.</p>\n<p>The Docker images, used to run training &amp; inference jobs, are built from\nboth corresponding \u201cbase\u201d and \u201cfinal\u201d Dockerfiles.</p>\n<div id=\"base-images\">\n<h3>Base Images</h3>\n<p>The \u201cbase\u201d Dockerfile encompass the installation of the framework and all of the dependencies\nneeded.</p>\n<p>Tagging scheme is based on &lt;PyTorch_version&gt;-&lt;processor&gt;-py&lt;python_version&gt;. (e.g.1.0.0-cpu-py3)</p>\n<p>All \u201cfinal\u201d Dockerfiles build images using base images that use the tagging scheme\nabove.</p>\n<p>If you want to build your base docker image, then use:</p>\n<pre># All build instructions assume you're building from the root directory of the sagemaker-pytorch-container.\n\n# CPU\ndocker build -t pytorch-base:&lt;PyTorch_version&gt;-cpu-py&lt;python_version&gt; -f docker/&lt;PyTorch_version&gt;/base/Dockerfile.cpu --build-arg py_version=&lt;python_version&gt; .\n\n# GPU\ndocker build -t pytorch-base:&lt;PyTorch_version&gt;-gpu-py&lt;python_version&gt; -f docker/&lt;PyTorch_version&gt;/base/Dockerfile.gpu --build-arg py_version=&lt;python_version&gt; .\n</pre>\n<pre># Example\n\n# CPU\ndocker build -t pytorch-base:1.0.0-cpu-py3 -f docker/1.0.0/base/Dockerfile.cpu --build-arg py_version=3 .\n\n# GPU\ndocker build -t pytorch-base:1.0.0-gpu-py3 -f docker/1.0.0/base/Dockerfile.gpu --build-arg py_version=3 .\n</pre>\n</div>\n<div id=\"final-images\">\n<h3>Final Images</h3>\n<p>The \u201cfinal\u201d Dockerfiles encompass the installation of the SageMaker specific support code.</p>\n<p>All \u201cfinal\u201d Dockerfiles use <a href=\"https://github.com/aws/sagemaker-pytorch-container/blob/master/docker/1.0.0/final/Dockerfile.cpu#L2\" rel=\"nofollow\">base images for building</a>.</p>\n<p>These \u201cbase\u201d images are specified with the naming convention of\npytorch-base:&lt;PyTorch_version&gt;-&lt;processor&gt;-py&lt;python_version&gt;.</p>\n<p>Before building \u201cfinal\u201d images:</p>\n<p>Build your \u201cbase\u201d image. Make sure it is named and tagged in accordance with your \u201cfinal\u201d\nDockerfile.</p>\n<p>If you want to build \u201cfinal\u201d Docker images, then use:</p>\n<pre># All build instructions assume you're building from the root directory of the sagemaker-pytorch-container.\n\n# CPU\ndocker build -t &lt;image_name&gt;:&lt;tag&gt; -f docker/&lt;PyTorch_version&gt;/final/Dockerfile.cpu --build-arg py_version=&lt;python_version&gt; .\n\n# GPU\ndocker build -t &lt;image_name&gt;:&lt;tag&gt; -f docker/&lt;PyTorch_version&gt;/final/Dockerfile.gpu --build-arg py_version=&lt;python_version&gt; .\n</pre>\n<pre># Example\n\n# CPU\ndocker build -t preprod-pytorch:1.0.0-cpu-py3 -f docker/1.0.0/final/Dockerfile.cpu --build-arg py_version=3 .\n\n# GPU\ndocker build -t preprod-pytorch:1.0.0-gpu-py3 -f docker/1.0.0/final/Dockerfile.gpu --build-arg py_version=3 .\n</pre>\n</div>\n</div>\n<div id=\"running-the-tests\">\n<h2>Running the tests</h2>\n<p>Running the tests requires installation of the SageMaker PyTorch Container code and its test\ndependencies.</p>\n<pre>git clone https://github.com/aws/sagemaker-pytorch-container.git\ncd sagemaker-pytorch-container\npip install -e .[test]\n</pre>\n<p>Tests are defined in\n<a href=\"https://github.com/aws/sagemaker-pytorch-container/tree/master/test\" rel=\"nofollow\">test/</a>\nand include unit, local integration, and SageMaker integration tests.</p>\n<div id=\"unit-tests\">\n<h3>Unit Tests</h3>\n<p>If you want to run unit tests, then use:</p>\n<pre># All test instructions should be run from the top level directory\n\npytest test/unit\n\n# or you can use tox to run unit tests as well as flake8 and code coverage\n\ntox\n</pre>\n</div>\n<div id=\"local-integration-tests\">\n<h3>Local Integration Tests</h3>\n<p>Running local integration tests require <a href=\"https://www.docker.com/\" rel=\"nofollow\">Docker</a> and <a href=\"https://docs.aws.amazon.com/sdk-for-java/v1/developer-guide/setup-credentials.html\" rel=\"nofollow\">AWS\ncredentials</a>,\nas the local integration tests make calls to a couple AWS services. The local integration tests and\nSageMaker integration tests require configurations specified within their respective\n<a href=\"https://github.com/aws/sagemaker-pytorch-container/blob/master/test/conftest.py\" rel=\"nofollow\">conftest.py</a>.</p>\n<p>Local integration tests on GPU require <a href=\"https://github.com/NVIDIA/nvidia-docker\" rel=\"nofollow\">Nvidia-Docker</a>.</p>\n<p>Before running local integration tests:</p>\n<ol>\n<li>Build your Docker image.</li>\n<li>Pass in the correct pytest arguments to run tests against your Docker image.</li>\n</ol>\n<p>If you want to run local integration tests, then use:</p>\n<pre># Required arguments for integration tests are found in test/conftest.py\n\npytest test/integration/local --docker-base-name &lt;your_docker_image&gt; \\\n                  --tag &lt;your_docker_image_tag&gt; \\\n                  --py-version &lt;2_or_3&gt; \\\n                  --framework-version &lt;PyTorch_version&gt; \\\n                  --processor &lt;cpu_or_gpu&gt;\n</pre>\n<pre># Example\npytest test/integration/local --docker-base-name preprod-pytorch \\\n                  --tag 1.0 \\\n                  --py-version 3 \\\n                  --framework-version 1.0.0 \\\n                  --processor cpu\n</pre>\n</div>\n<div id=\"sagemaker-integration-tests\">\n<h3>SageMaker Integration Tests</h3>\n<p>SageMaker integration tests require your Docker image to be within an <a href=\"https://docs.aws.amazon.com/AmazonECS/latest/developerguide/ECS_Console_Repositories.html\" rel=\"nofollow\">Amazon ECR repository</a>.</p>\n<p>The Docker base name is your <a href=\"https://docs.aws.amazon.com/AmazonECR/latest/userguide/Repositories.html\" rel=\"nofollow\">ECR repository namespace</a>.</p>\n<p>The instance type is your specified <a href=\"https://aws.amazon.com/sagemaker/pricing/instance-types/\" rel=\"nofollow\">Amazon SageMaker Instance Type</a> that the SageMaker integration test will run on.</p>\n<p>Before running SageMaker integration tests:</p>\n<ol>\n<li>Build your Docker image.</li>\n<li>Push the image to your ECR repository.</li>\n<li>Pass in the correct pytest arguments to run tests on SageMaker against the image within your ECR repository.</li>\n</ol>\n<p>If you want to run a SageMaker integration end to end test on <a href=\"https://aws.amazon.com/sagemaker/\" rel=\"nofollow\">Amazon\nSageMaker</a>, then use:</p>\n<pre># Required arguments for integration tests are found in test/conftest.py\n\npytest test/integration/sagemaker --aws-id &lt;your_aws_id&gt; \\\n                       --docker-base-name &lt;your_docker_image&gt; \\\n                       --instance-type &lt;amazon_sagemaker_instance_type&gt; \\\n                       --tag &lt;your_docker_image_tag&gt; \\\n</pre>\n<pre># Example\npytest test/integration/sagemaker --aws-id 12345678910 \\\n                       --docker-base-name preprod-pytorch \\\n                       --instance-type ml.m4.xlarge \\\n                       --tag 1.0\n</pre>\n</div>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Please read\n<a href=\"https://github.com/aws/sagemaker-pytorch-container/blob/master/CONTRIBUTING.md\" rel=\"nofollow\">CONTRIBUTING.md</a>\nfor details on our code of conduct, and the process for submitting pull\nrequests to us.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>SageMaker PyTorch Container is licensed under the Apache 2.0 License. It is copyright 2018 Amazon\n.com, Inc. or its affiliates. All Rights Reserved. The license is available at:\n<a href=\"http://aws.amazon.com/apache2.0/\" rel=\"nofollow\">http://aws.amazon.com/apache2.0/</a></p>\n</div>\n\n          </div>"}, "last_serial": 7189436, "releases": {"1.1.0": [{"comment_text": "", "digests": {"md5": "28e27a0833e664be15bec3fd30534892", "sha256": "8640138d1e124e5f5453026f6cc7a7f3897f87bbd38ca4fa20364ed87a72bc2a"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.1.0.tar.gz", "has_sig": true, "md5_digest": "28e27a0833e664be15bec3fd30534892", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10417, "upload_time": "2020-02-09T01:21:01", "upload_time_iso_8601": "2020-02-09T01:21:01.429768Z", "url": "https://files.pythonhosted.org/packages/86/1b/6ed7fadd9cf9074428b90f4c161378cb5ea42341ade9e49457c30b90e37d/sagemaker_pytorch_training-1.1.0.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "f74c856fde36c312c00d908657247213", "sha256": "75e1509ec6027acf50e286ac8e8beb6d1a9f7f873c67561ddecedab92ea0b6b9"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.2.0.tar.gz", "has_sig": true, "md5_digest": "f74c856fde36c312c00d908657247213", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10377, "upload_time": "2020-02-27T22:08:59", "upload_time_iso_8601": "2020-02-27T22:08:59.886079Z", "url": "https://files.pythonhosted.org/packages/2d/9f/847000374907da171b6cafea14f541bcd05192fd9f8dbb0376659e0313f1/sagemaker_pytorch_training-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "28465fcf7616d48e7a1c559b672cf5ed", "sha256": "f9f9cbca2a3447dd3c109b606a4bcc7409d7ca8e983e61ea3899fcb2d72a1763"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.2.1.tar.gz", "has_sig": true, "md5_digest": "28465fcf7616d48e7a1c559b672cf5ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10382, "upload_time": "2020-03-09T15:21:10", "upload_time_iso_8601": "2020-03-09T15:21:10.179183Z", "url": "https://files.pythonhosted.org/packages/83/10/beb5bf01acd077b7396b612d92bc4bb86fd834091f828750a8e960c8047b/sagemaker_pytorch_training-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "16daebf856330d5ec7478f16c0845cb4", "sha256": "937d47516c9b19791ed8debd09b8d017a40e5a3e2a9dc853838ef0a67015469b"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.2.2.tar.gz", "has_sig": true, "md5_digest": "16daebf856330d5ec7478f16c0845cb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10398, "upload_time": "2020-03-10T15:21:06", "upload_time_iso_8601": "2020-03-10T15:21:06.882790Z", "url": "https://files.pythonhosted.org/packages/91/8a/425f2b7166dccc2bb8a1543a95e8ce9b8775b432667b5b7c07374d8dd85e/sagemaker_pytorch_training-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "b2471ed0ba2bde1ab29fb7bbfe963c10", "sha256": "efee4fcf914bbb4a88b939e6de70ac8d974839b558a09b9da3a5db9d6588a6cc"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.2.3.tar.gz", "has_sig": true, "md5_digest": "b2471ed0ba2bde1ab29fb7bbfe963c10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10422, "upload_time": "2020-03-11T15:20:34", "upload_time_iso_8601": "2020-03-11T15:20:34.065849Z", "url": "https://files.pythonhosted.org/packages/5a/62/82d70638fc60ccb3ecc7b1d1459d420ee5b19324b11006296340fadc0fee/sagemaker_pytorch_training-1.2.3.tar.gz", "yanked": false}], "1.2.4": [{"comment_text": "", "digests": {"md5": "093b566701c6893ab84584e23f02bb87", "sha256": "df4dd2516f911a8e4412d7b46e8e1f67fd6f9379c9c7693aead5c141165162bd"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.2.4.tar.gz", "has_sig": true, "md5_digest": "093b566701c6893ab84584e23f02bb87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10393, "upload_time": "2020-03-12T15:21:48", "upload_time_iso_8601": "2020-03-12T15:21:48.900337Z", "url": "https://files.pythonhosted.org/packages/cb/21/34f778e4d8a8557c63667fca77e9448dab35f972dd05180d8b2823d3ac9a/sagemaker_pytorch_training-1.2.4.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "66b1d702d7e13880bec69620e53f3f40", "sha256": "0ffc2ef11a8181feac105969d8529ff1b6aac1ef58e58d9ac55b4682b7dc98a2"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.3.0.tar.gz", "has_sig": true, "md5_digest": "66b1d702d7e13880bec69620e53f3f40", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10359, "upload_time": "2020-03-23T19:57:08", "upload_time_iso_8601": "2020-03-23T19:57:08.410070Z", "url": "https://files.pythonhosted.org/packages/dd/28/c0309e56549a5567e20fde787a0033e9e86bad4a2afb9a450e2ad99dc62f/sagemaker_pytorch_training-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "39ee11ba340c5829028d1d1cb6f59e4c", "sha256": "c908fb6c5def0595bb29436762cfad0673d8492c4df15df2b3f37b89c9218485"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.3.1.tar.gz", "has_sig": true, "md5_digest": "39ee11ba340c5829028d1d1cb6f59e4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10365, "upload_time": "2020-04-02T15:21:43", "upload_time_iso_8601": "2020-04-02T15:21:43.254938Z", "url": "https://files.pythonhosted.org/packages/30/b9/577b0c51a8ad19cd4419d2ccd9ff1fbe19343be1b219557b6cbb1cc389ad/sagemaker_pytorch_training-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "d97ed4b92f139fb81ac43e418f113994", "sha256": "b87711fcc28e4ea689cd383a60127f12b1996fc3d0584920aa5093bd08ff5146"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.3.2.tar.gz", "has_sig": true, "md5_digest": "d97ed4b92f139fb81ac43e418f113994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10366, "upload_time": "2020-04-07T15:21:37", "upload_time_iso_8601": "2020-04-07T15:21:37.865250Z", "url": "https://files.pythonhosted.org/packages/28/c4/0b78f11e229a47f9cdb916fdcd38f77c8382b761a0c24faa53cb7f6c362e/sagemaker_pytorch_training-1.3.2.tar.gz", "yanked": false}], "1.3.3": [{"comment_text": "", "digests": {"md5": "cfeab5682b0bf9158d631a8fdcee807a", "sha256": "54f259dfbed374d98c10adcb5e9b0f07c94deabae25d32062b0185e79b0ed4f6"}, "downloads": -1, "filename": "sagemaker_pytorch_training-1.3.3.tar.gz", "has_sig": true, "md5_digest": "cfeab5682b0bf9158d631a8fdcee807a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10367, "upload_time": "2020-04-16T15:21:38", "upload_time_iso_8601": "2020-04-16T15:21:38.245841Z", "url": "https://files.pythonhosted.org/packages/26/b6/2415590489b77914709fefa4e268efaa06738ddc82132973aff14dbac399/sagemaker_pytorch_training-1.3.3.tar.gz", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "0832a3d2ed6ad1752b19e5386fe57fcb", "sha256": "144a9b625c788fe0d06c3ee53a2177029f6af003d9f4f03f0bdddb4a10b7e568"}, "downloads": -1, "filename": "sagemaker_pytorch_training-2.0.0.tar.gz", "has_sig": true, "md5_digest": "0832a3d2ed6ad1752b19e5386fe57fcb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10354, "upload_time": "2020-04-27T15:27:19", "upload_time_iso_8601": "2020-04-27T15:27:19.736742Z", "url": "https://files.pythonhosted.org/packages/f7/b6/c742b4aaa48be18fd3da640b25da6e05c3c09f4e97e45fd8c3dfcf994c55/sagemaker_pytorch_training-2.0.0.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "ec62b5e78a1b200075bdc8928878587a", "sha256": "19cf710ebf041bd16674a808f121fbd55472bfc5a2db775f64047881eefd7d53"}, "downloads": -1, "filename": "sagemaker_pytorch_training-2.1.0.tar.gz", "has_sig": true, "md5_digest": "ec62b5e78a1b200075bdc8928878587a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10356, "upload_time": "2020-05-04T15:22:23", "upload_time_iso_8601": "2020-05-04T15:22:23.161772Z", "url": "https://files.pythonhosted.org/packages/61/ff/77c95c7e4d7566e36554a1d2a0a37d6d55c7004bd446dd3e84a6ffc61636/sagemaker_pytorch_training-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "5c3f3145d602865b09c8bb037cd9c440", "sha256": "271847a39980289f320c7e95d3999ae1d3699045bc1f194ddaa08f95e015490d"}, "downloads": -1, "filename": "sagemaker_pytorch_training-2.1.1.tar.gz", "has_sig": true, "md5_digest": "5c3f3145d602865b09c8bb037cd9c440", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10357, "upload_time": "2020-05-05T15:22:26", "upload_time_iso_8601": "2020-05-05T15:22:26.829654Z", "url": "https://files.pythonhosted.org/packages/26/c3/b77f502944f0ad751d5fa4945493d61cdc31cfa88d881f0787891ed452c3/sagemaker_pytorch_training-2.1.1.tar.gz", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "f1aaa8e44a0da60d597a569dbc6377e9", "sha256": "ce4c45f52e2c62d8701bb1622f61dc5511a42105b31133d95b18f1f8400fb233"}, "downloads": -1, "filename": "sagemaker_pytorch_training-2.2.0.tar.gz", "has_sig": true, "md5_digest": "f1aaa8e44a0da60d597a569dbc6377e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10368, "upload_time": "2020-05-07T15:23:59", "upload_time_iso_8601": "2020-05-07T15:23:59.012744Z", "url": "https://files.pythonhosted.org/packages/2a/31/dc04a9ce82a33ae82e8afdebeace2585252cec364c362e33b545a460cac0/sagemaker_pytorch_training-2.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f1aaa8e44a0da60d597a569dbc6377e9", "sha256": "ce4c45f52e2c62d8701bb1622f61dc5511a42105b31133d95b18f1f8400fb233"}, "downloads": -1, "filename": "sagemaker_pytorch_training-2.2.0.tar.gz", "has_sig": true, "md5_digest": "f1aaa8e44a0da60d597a569dbc6377e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10368, "upload_time": "2020-05-07T15:23:59", "upload_time_iso_8601": "2020-05-07T15:23:59.012744Z", "url": "https://files.pythonhosted.org/packages/2a/31/dc04a9ce82a33ae82e8afdebeace2585252cec364c362e33b545a460cac0/sagemaker_pytorch_training-2.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:17 2020"}