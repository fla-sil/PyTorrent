{"info": {"author": "Nicholas McKibben", "author_email": "nicholas.bgp@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "SSFP\n====\n\nSimple steady-state free precession simulation.  The goal is to\nprovide a simple to use, pip-installable solution for simulating and\nworking with this wonderful pulse sequence.\n\nIn this package:\n\n- bSSFP: `bssfp()`\n- GS solution: `gs_recon()`\n- PLANET: `planet()`\n- 3D Region Growing Phase Correction: `rgphcorr3d()`\n- Robust Coil Combination: `robustcc()`\n\nInstallation\n============\n\nShould be as easy as:\n\n.. code-block:: bash\n\n    pip install ssfp\n\nUsage\n=====\n\nSee `ssfp.examples` for typical usage.  You can run examples like:\n\n.. code-block:: bash\n\n    python -m ssfp.examples.basic_bssfp\n\nBalanced steady-state free precession can be called through `bssfp()`.\nThis is an implementation of equations [1--2] in [1]_.  These\nequations are based on the Ernst-Anderson derivation [2]_ where\noff-resonance is assumed to be subtracted as opposed to added (as in\nthe Freeman-Hill derivation [3]_).  Hoff actually gets Mx and My\nflipped in the paper, so we fix that here.  We also assume that\nthe field map will be provided given the Freeman-Hill convention.\n\n.. code-block:: python\n\n    from ssfp import bssfp\n\n    # Here's the simplest usage, see docstring for all the possible\n    # function arguments\n    sig = bssfp(T1, T2, TR, alpha)\n\nWe can also easily get the Geometric Solution to the elliptical\nsignal model as described in [1]_ as follows:\n\n.. code-block:: python\n\n    from ssfp import gs_recon\n    recon = gs_recon(phased_cycled_images, pc_axis=-1)\n\n    # Notice that we can specify the axis where the phase-cycles live\n\nPLANET [4]_ is a method for simultaneous T1, T2 fitting for bSSFP\nphase-cycled data.  Call like this:\n\n.. code-block:: python\n\n    from ssfp import planet\n\n    # For a single pixel:\n    Meff, T1, T2 = planet(\n        phased_cycled_pixels, alpha, TR, T1_guess,\n        pcs=np.deg2rad([0, 90, 180, 270, etc...]))\n\n3D Region Growing Phase Correction [5]_ is an algorithm for\ndetermining water and fat images from a single bSSFP acquisition.\nIt can be called like this:\n\n.. code-block:: python\n\n    from ssfp import rgphcorr3d\n    phase_corrected = rgphcorr3d(\n        dataset3d, cellsize=(4, 4, 4), slice_axis=-1)\n\n    # see ssfp.examples.basic_rgphcorr for full usage example\n\nRobust Coil Combination for bSSFP Elliptical Signal Model [6]_ is a\ncoil combination method that preserves the elliptical relationships\nbetween phase-cycled pixels.  It has two variants: simple and full.\nBy default, the simple method is called.  The full method is very\nslow and only used for validation of the simple method.\nRobust coil combination can be called like this:\n\n.. code-block:: python\n\n    from ssfp import robustcc\n\n    sx, sy, sz, num_pc, num_coils = data.shape[:]\n    coil_combined = robustcc(data, pc_axis=-2, coil_axis=-1)\n\n    # see ssfp.examples.basic_robustcc for more usage examples\n\nReferences\n==========\n.. [1] Xiang, Qing\u2010San, and Michael N. Hoff. \"Banding artifact\n       removal for bSSFP imaging with an elliptical signal\n       model.\" Magnetic resonance in medicine 71.3 (2014):\n       927-933.\n.. [2] Ernst, Richard R., and Weston A. Anderson. \"Application of\n       Fourier transform spectroscopy to magnetic resonance.\"\n       Review of Scientific Instruments 37.1 (1966): 93-102.\n.. [3] Freeman R, Hill H. Phase and intensity anomalies in\n       fourier transform NMR. J Magn Reson 1971;4:366\u2013383.\n.. [4] Shcherbakova, Yulia, et al. \"PLANET: an ellipse fitting\n       approach for simultaneous T1 and T2 mapping using\n       phase\u2010cycled balanced steady\u2010state free precession.\"\n       Magnetic resonance in medicine 79.2 (2018): 711-722.\n.. [5] Hargreaves, Brian A., et al. \"Fat\u2010suppressed steady\u2010state\n       free precession imaging using phase detection.\" Magnetic\n       Resonance in Medicine: An Official Journal of the\n       International Society for Magnetic Resonance in Medicine\n       50.1 (2003): 210-213.\n.. [6] N. McKibben, G. Tarbox, E. DiBella, and N. K. Bangerter,\n       \"Robust Coil Combination for bSSFP Elliptical Signal\n       Model,\" Proceedings of the 28th Annual Meeting of the\n       ISMRM; Sydney, NSW, Australia, 2020.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mckib2/ssfp", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "ssfp", "package_url": "https://pypi.org/project/ssfp/", "platform": "", "project_url": "https://pypi.org/project/ssfp/", "project_urls": {"Homepage": "https://github.com/mckib2/ssfp"}, "release_url": "https://pypi.org/project/ssfp/0.4.2/", "requires_dist": ["numpy (>=1.18.1)", "matplotlib (>=3.0.0)", "scikit-image (>=0.15.0)", "phantominator (>=0.6.1)", "tqdm (>=4.42.0)"], "requires_python": ">=3.5", "summary": "SSFP simulation", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ssfp\">\n<h2>SSFP</h2>\n<p>Simple steady-state free precession simulation.  The goal is to\nprovide a simple to use, pip-installable solution for simulating and\nworking with this wonderful pulse sequence.</p>\n<p>In this package:</p>\n<ul>\n<li>bSSFP: <cite>bssfp()</cite></li>\n<li>GS solution: <cite>gs_recon()</cite></li>\n<li>PLANET: <cite>planet()</cite></li>\n<li>3D Region Growing Phase Correction: <cite>rgphcorr3d()</cite></li>\n<li>Robust Coil Combination: <cite>robustcc()</cite></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Should be as easy as:</p>\n<pre>pip install ssfp\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>See <cite>ssfp.examples</cite> for typical usage.  You can run examples like:</p>\n<pre>python -m ssfp.examples.basic_bssfp\n</pre>\n<p>Balanced steady-state free precession can be called through <cite>bssfp()</cite>.\nThis is an implementation of equations [1\u20132] in <a href=\"#id8\" id=\"id1\" rel=\"nofollow\">[1]</a>.  These\nequations are based on the Ernst-Anderson derivation <a href=\"#id9\" id=\"id2\" rel=\"nofollow\">[2]</a> where\noff-resonance is assumed to be subtracted as opposed to added (as in\nthe Freeman-Hill derivation <a href=\"#id10\" id=\"id3\" rel=\"nofollow\">[3]</a>).  Hoff actually gets Mx and My\nflipped in the paper, so we fix that here.  We also assume that\nthe field map will be provided given the Freeman-Hill convention.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssfp</span> <span class=\"kn\">import</span> <span class=\"n\">bssfp</span>\n\n<span class=\"c1\"># Here's the simplest usage, see docstring for all the possible</span>\n<span class=\"c1\"># function arguments</span>\n<span class=\"n\">sig</span> <span class=\"o\">=</span> <span class=\"n\">bssfp</span><span class=\"p\">(</span><span class=\"n\">T1</span><span class=\"p\">,</span> <span class=\"n\">T2</span><span class=\"p\">,</span> <span class=\"n\">TR</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">)</span>\n</pre>\n<p>We can also easily get the Geometric Solution to the elliptical\nsignal model as described in <a href=\"#id8\" id=\"id4\" rel=\"nofollow\">[1]</a> as follows:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssfp</span> <span class=\"kn\">import</span> <span class=\"n\">gs_recon</span>\n<span class=\"n\">recon</span> <span class=\"o\">=</span> <span class=\"n\">gs_recon</span><span class=\"p\">(</span><span class=\"n\">phased_cycled_images</span><span class=\"p\">,</span> <span class=\"n\">pc_axis</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Notice that we can specify the axis where the phase-cycles live</span>\n</pre>\n<p>PLANET <a href=\"#id11\" id=\"id5\" rel=\"nofollow\">[4]</a> is a method for simultaneous T1, T2 fitting for bSSFP\nphase-cycled data.  Call like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssfp</span> <span class=\"kn\">import</span> <span class=\"n\">planet</span>\n\n<span class=\"c1\"># For a single pixel:</span>\n<span class=\"n\">Meff</span><span class=\"p\">,</span> <span class=\"n\">T1</span><span class=\"p\">,</span> <span class=\"n\">T2</span> <span class=\"o\">=</span> <span class=\"n\">planet</span><span class=\"p\">(</span>\n    <span class=\"n\">phased_cycled_pixels</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"p\">,</span> <span class=\"n\">TR</span><span class=\"p\">,</span> <span class=\"n\">T1_guess</span><span class=\"p\">,</span>\n    <span class=\"n\">pcs</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">deg2rad</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">90</span><span class=\"p\">,</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mi\">270</span><span class=\"p\">,</span> <span class=\"n\">etc</span><span class=\"o\">...</span><span class=\"p\">]))</span>\n</pre>\n<p>3D Region Growing Phase Correction <a href=\"#id12\" id=\"id6\" rel=\"nofollow\">[5]</a> is an algorithm for\ndetermining water and fat images from a single bSSFP acquisition.\nIt can be called like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssfp</span> <span class=\"kn\">import</span> <span class=\"n\">rgphcorr3d</span>\n<span class=\"n\">phase_corrected</span> <span class=\"o\">=</span> <span class=\"n\">rgphcorr3d</span><span class=\"p\">(</span>\n    <span class=\"n\">dataset3d</span><span class=\"p\">,</span> <span class=\"n\">cellsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">),</span> <span class=\"n\">slice_axis</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># see ssfp.examples.basic_rgphcorr for full usage example</span>\n</pre>\n<p>Robust Coil Combination for bSSFP Elliptical Signal Model <a href=\"#id13\" id=\"id7\" rel=\"nofollow\">[6]</a> is a\ncoil combination method that preserves the elliptical relationships\nbetween phase-cycled pixels.  It has two variants: simple and full.\nBy default, the simple method is called.  The full method is very\nslow and only used for validation of the simple method.\nRobust coil combination can be called like this:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ssfp</span> <span class=\"kn\">import</span> <span class=\"n\">robustcc</span>\n\n<span class=\"n\">sx</span><span class=\"p\">,</span> <span class=\"n\">sy</span><span class=\"p\">,</span> <span class=\"n\">sz</span><span class=\"p\">,</span> <span class=\"n\">num_pc</span><span class=\"p\">,</span> <span class=\"n\">num_coils</span> <span class=\"o\">=</span> <span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">shape</span><span class=\"p\">[:]</span>\n<span class=\"n\">coil_combined</span> <span class=\"o\">=</span> <span class=\"n\">robustcc</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"n\">pc_axis</span><span class=\"o\">=-</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">coil_axis</span><span class=\"o\">=-</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># see ssfp.examples.basic_robustcc for more usage examples</span>\n</pre>\n</div>\n<div id=\"references\">\n<h2>References</h2>\n<table id=\"id8\">\n<col><col>\n<tbody>\n<tr><td>[1]</td><td><em>(<a href=\"#id1\" rel=\"nofollow\">1</a>, <a href=\"#id4\" rel=\"nofollow\">2</a>)</em> Xiang, Qing\u2010San, and Michael N. Hoff. \u201cBanding artifact\nremoval for bSSFP imaging with an elliptical signal\nmodel.\u201d Magnetic resonance in medicine 71.3 (2014):\n927-933.</td></tr>\n</tbody>\n</table>\n<table id=\"id9\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[2]</a></td><td>Ernst, Richard R., and Weston A. Anderson. \u201cApplication of\nFourier transform spectroscopy to magnetic resonance.\u201d\nReview of Scientific Instruments 37.1 (1966): 93-102.</td></tr>\n</tbody>\n</table>\n<table id=\"id10\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[3]</a></td><td>Freeman R, Hill H. Phase and intensity anomalies in\nfourier transform NMR. J Magn Reson 1971;4:366\u2013383.</td></tr>\n</tbody>\n</table>\n<table id=\"id11\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id5\" rel=\"nofollow\">[4]</a></td><td>Shcherbakova, Yulia, et al. \u201cPLANET: an ellipse fitting\napproach for simultaneous T1 and T2 mapping using\nphase\u2010cycled balanced steady\u2010state free precession.\u201d\nMagnetic resonance in medicine 79.2 (2018): 711-722.</td></tr>\n</tbody>\n</table>\n<table id=\"id12\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id6\" rel=\"nofollow\">[5]</a></td><td>Hargreaves, Brian A., et al. \u201cFat\u2010suppressed steady\u2010state\nfree precession imaging using phase detection.\u201d Magnetic\nResonance in Medicine: An Official Journal of the\nInternational Society for Magnetic Resonance in Medicine\n50.1 (2003): 210-213.</td></tr>\n</tbody>\n</table>\n<table id=\"id13\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id7\" rel=\"nofollow\">[6]</a></td><td>N. McKibben, G. Tarbox, E. DiBella, and N. K. Bangerter,\n\u201cRobust Coil Combination for bSSFP Elliptical Signal\nModel,\u201d Proceedings of the 28th Annual Meeting of the\nISMRM; Sydney, NSW, Australia, 2020.</td></tr>\n</tbody>\n</table>\n</div>\n\n          </div>"}, "last_serial": 7102180, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "30df08b021e190956a5b14625f98a7f5", "sha256": "bee3f1ce13d8a3176f767b578114a74f2fca0f83379f77e0d7a9db655ee370e6"}, "downloads": -1, "filename": "ssfp-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "30df08b021e190956a5b14625f98a7f5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18154, "upload_time": "2019-09-26T16:12:59", "upload_time_iso_8601": "2019-09-26T16:12:59.795914Z", "url": "https://files.pythonhosted.org/packages/da/0c/e37ca2799c3da47686e1cd03620814fe997646f109e41e5636664781209f/ssfp-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d9a9d54a6e4da5021db603c9d90990bc", "sha256": "fc77acb53774e6fb393009714985c069fa8eefd571a74ae6801dcf1e445bbbb6"}, "downloads": -1, "filename": "ssfp-0.0.1.tar.gz", "has_sig": false, "md5_digest": "d9a9d54a6e4da5021db603c9d90990bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4785, "upload_time": "2019-09-26T16:13:04", "upload_time_iso_8601": "2019-09-26T16:13:04.263030Z", "url": "https://files.pythonhosted.org/packages/a7/8a/75975952c23a4103955bad88730f34da9b3a35674cd35c5388f38ae1307a/ssfp-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "07bbbfe0d6a7ab1bcb2e13c70fb549ef", "sha256": "dd6a32f1a56197891a9cbec64fa2abd4b10f8acae682cdb7b8b3d726d6105a9f"}, "downloads": -1, "filename": "ssfp-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "07bbbfe0d6a7ab1bcb2e13c70fb549ef", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 22230, "upload_time": "2019-09-26T17:02:37", "upload_time_iso_8601": "2019-09-26T17:02:37.683265Z", "url": "https://files.pythonhosted.org/packages/24/c6/fd4369919f4d6c423951b50aef0ac1c62175fa0a2cce0443c7c8f9bca298/ssfp-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e650066674fbd40ce1a8db1683b5fe17", "sha256": "c786c6218ce708442d2f4d6fd3deaaa07c703c4f1896a50281d17504e1941bb2"}, "downloads": -1, "filename": "ssfp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e650066674fbd40ce1a8db1683b5fe17", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8022, "upload_time": "2019-09-26T17:02:39", "upload_time_iso_8601": "2019-09-26T17:02:39.950777Z", "url": "https://files.pythonhosted.org/packages/1f/e9/67fce5edfa59bcff179140025190c69eeba02a2e4ad56c4c6bace1e33926/ssfp-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "37b2bde9ebfb9caf4ea192a7442bd6c8", "sha256": "077c10f4e67a7f6ab322b60afca4c8f010a2db1ca7a6a263078136486c46e6a9"}, "downloads": -1, "filename": "ssfp-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "37b2bde9ebfb9caf4ea192a7442bd6c8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 28307, "upload_time": "2019-09-27T15:21:30", "upload_time_iso_8601": "2019-09-27T15:21:30.034783Z", "url": "https://files.pythonhosted.org/packages/da/3b/cd78083976193de364d3d7a2a5a1a6726f6157662277c345620c6c0d7a76/ssfp-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e5b54c7e47991be99f1d3d1ecd50c21", "sha256": "02af2e2af20e88d81f931e6c393576ef6c686c4278b742782bfff0ed39168b03"}, "downloads": -1, "filename": "ssfp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "0e5b54c7e47991be99f1d3d1ecd50c21", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13486, "upload_time": "2019-09-27T15:21:32", "upload_time_iso_8601": "2019-09-27T15:21:32.160524Z", "url": "https://files.pythonhosted.org/packages/e4/b5/9bafa4606b924059997dd85bdc19a1440c0f0b8c1dfd4ae5036ab2aa1cd1/ssfp-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "cdbe36169f70d36ef200694b6ea144f0", "sha256": "a98f7595e6e76ea55fcd9708e133fd0bdc424aa3acbbc0a2754005af945268a0"}, "downloads": -1, "filename": "ssfp-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cdbe36169f70d36ef200694b6ea144f0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38620, "upload_time": "2019-12-28T03:09:58", "upload_time_iso_8601": "2019-12-28T03:09:58.398738Z", "url": "https://files.pythonhosted.org/packages/d4/47/baa8e3745f5bf89afa86e471ab76f3ca475f5b3903964f48112d223e824d/ssfp-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f17f3e2737fd49ffa7912d90e5939657", "sha256": "28895f7ff3ba7ac9aaacc16a03b8bc40afd98b0017840d2bf6e38054011989bd"}, "downloads": -1, "filename": "ssfp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "f17f3e2737fd49ffa7912d90e5939657", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21343, "upload_time": "2019-12-28T03:10:00", "upload_time_iso_8601": "2019-12-28T03:10:00.574791Z", "url": "https://files.pythonhosted.org/packages/c6/b3/a7183b1c2c00bba7342b13c3d2a2e9387b03b88de985ecb0650fbc2be69a/ssfp-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "4de7bce828a3da8f86f3b310e094cc47", "sha256": "415a3c74beb5e6c78fffaf30726de90c11e36edac14c2a2e9c9693ce4446b428"}, "downloads": -1, "filename": "ssfp-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4de7bce828a3da8f86f3b310e094cc47", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 42281, "upload_time": "2020-02-01T22:16:33", "upload_time_iso_8601": "2020-02-01T22:16:33.618099Z", "url": "https://files.pythonhosted.org/packages/15/8c/b4ac1eb6cc011f30666cfe1e65c132d5c9341b29c57503c39630d118fd8e/ssfp-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8129f69df60a7f8055cdc13849b6a5d8", "sha256": "a48f8b961ba2498d7c312bae1ac2ca42d8ab20f9483a67c181fc41c631d8844d"}, "downloads": -1, "filename": "ssfp-0.4.0.tar.gz", "has_sig": false, "md5_digest": "8129f69df60a7f8055cdc13849b6a5d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24104, "upload_time": "2020-02-01T22:16:35", "upload_time_iso_8601": "2020-02-01T22:16:35.354574Z", "url": "https://files.pythonhosted.org/packages/10/9d/fb2e4e333be281563dc7a26a956d398bee618f9a05a4ad3e34f912e29b3a/ssfp-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6ba575bc20ea3893850b0c00c9b1635c", "sha256": "89dbbe1bdd090740f38c7861aa1a9b1b255266257e5bb5223549a490e47459ef"}, "downloads": -1, "filename": "ssfp-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "6ba575bc20ea3893850b0c00c9b1635c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 44196, "upload_time": "2020-02-02T21:49:12", "upload_time_iso_8601": "2020-02-02T21:49:12.232207Z", "url": "https://files.pythonhosted.org/packages/74/89/841ce082ecfb0f21b604106592c401520296e8e66cd9facf34b77c45e718/ssfp-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2c856524d650c8e121a61c0934930c7", "sha256": "9268d0fb887b33611cdd2d6a0fc90b94e49e00b90d542116d0739c457ed6ec69"}, "downloads": -1, "filename": "ssfp-0.4.1.tar.gz", "has_sig": false, "md5_digest": "d2c856524d650c8e121a61c0934930c7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 25002, "upload_time": "2020-02-02T21:49:14", "upload_time_iso_8601": "2020-02-02T21:49:14.358876Z", "url": "https://files.pythonhosted.org/packages/56/0f/e6e87eb6653a2c2a0bcf4d8a17151ec9a84947f4229ce803e54e40501c48/ssfp-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "ea08b07a131d721eb1a9ebcd9db0caf6", "sha256": "ad5b239af14c80e7401890b4d37f75a118f8af21bed09c982e3e31c86ed71806"}, "downloads": -1, "filename": "ssfp-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea08b07a131d721eb1a9ebcd9db0caf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 44195, "upload_time": "2020-04-26T01:42:16", "upload_time_iso_8601": "2020-04-26T01:42:16.305206Z", "url": "https://files.pythonhosted.org/packages/77/72/de7646c734c26d5f3c23036c6876db7b7569b7f1baf01b7e1cf860762510/ssfp-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d90a0eba0c96f339fe71a91617fd4c99", "sha256": "1c152d8b895dba6b3e68a98e1fcbceeba67bbb531569023f8206e0966ddf284d"}, "downloads": -1, "filename": "ssfp-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d90a0eba0c96f339fe71a91617fd4c99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25012, "upload_time": "2020-04-26T01:42:17", "upload_time_iso_8601": "2020-04-26T01:42:17.602660Z", "url": "https://files.pythonhosted.org/packages/58/95/710ccde23b272901775a0f96732b7988f859259d6c85873495d7299d3324/ssfp-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea08b07a131d721eb1a9ebcd9db0caf6", "sha256": "ad5b239af14c80e7401890b4d37f75a118f8af21bed09c982e3e31c86ed71806"}, "downloads": -1, "filename": "ssfp-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ea08b07a131d721eb1a9ebcd9db0caf6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 44195, "upload_time": "2020-04-26T01:42:16", "upload_time_iso_8601": "2020-04-26T01:42:16.305206Z", "url": "https://files.pythonhosted.org/packages/77/72/de7646c734c26d5f3c23036c6876db7b7569b7f1baf01b7e1cf860762510/ssfp-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d90a0eba0c96f339fe71a91617fd4c99", "sha256": "1c152d8b895dba6b3e68a98e1fcbceeba67bbb531569023f8206e0966ddf284d"}, "downloads": -1, "filename": "ssfp-0.4.2.tar.gz", "has_sig": false, "md5_digest": "d90a0eba0c96f339fe71a91617fd4c99", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25012, "upload_time": "2020-04-26T01:42:17", "upload_time_iso_8601": "2020-04-26T01:42:17.602660Z", "url": "https://files.pythonhosted.org/packages/58/95/710ccde23b272901775a0f96732b7988f859259d6c85873495d7299d3324/ssfp-0.4.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:12 2020"}