{"info": {"author": "David Glick, Groundwire", "author_email": "davidglick@groundwire.org", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python :: 2.4", "Programming Language :: Python :: 2.5", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.2", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Detailed Documentation\n**********************\n\nIntroduction\n============\n\nNamespace packages offer the huge benefit of being able to distribute parts of a large\nsystem in small, self-contained pieces.  However, they can be somewhat clunky to navigate,\nsince you end up with a large list of eggs in your egg cache, and then a seemingly endless\nseries of directories you need to open to actually find the contents of your egg.\n\nThis recipe sets up a directory structure that mirrors the actual python namespaces, with\nsymlinks to the egg contents.  So, instead of this...::\n\n    egg-cache/\n        my.egg.one-1.0-py2.7.egg/\n            my/\n                egg/\n                    one/\n                        (contents of first egg)\n        my.egg.two-1.0-py2.7.egg/\n            my/\n                egg/\n                    two/\n                        (contents of second egg)\n\n...you get this::\n\n    omelette/\n        my/\n            egg/\n                one/\n                    (contents of first egg)\n                two/\n                    (contents of second egg)\n\n\nYou can also include non-eggified python packages in the omelette.  This makes it simple to\nget a single path that you can add to your PYTHONPATH for use with specialized python environments\nlike when running under mod_wsgi or PyDev.\n\n\nTypical usage with Zope and Plone\n=================================\n\nFor a typical Plone buildout, with a part named \"instance\" that uses the plone.recipe.zope2instance recipe and a\npart named \"zope2\" that uses the plone.recipe.zope2install recipe, the following additions to buildout.cfg will\nresult in an omelette including all eggs and old-style Products used by the Zope instance as well as all of the\npackages from Zope's lib/python. It is important that omelette come last if you want it to find everything::\n\n    [buildout]\n    parts =\n        ...(other parts)...\n        omelette\n        \n    ...\n        \n    [omelette]\n    recipe = collective.recipe.omelette\n    eggs = ${instance:eggs}\n    products = ${instance:products}\n    packages = ${zope2:location}/lib/python ./\n    \n(Note: If your instance part lacks a 'products' variable, omit it from the omelette section as well, or\nthe omelette will silently fail to build.)\n\n    \nSupported options\n=================\n\nThe recipe supports the following options:\n\neggs\n    List of eggs which should be included in the omelette.\n\nlocation\n    (optional) Override the directory in which the omelette is created (default is parts/[name of buildout part])\n\nignore-develop\n    (optional) Ignore eggs that you are currently developing (listed in ${buildout:develop}). Default is False\n\nignores\n    (optional) List of eggs to ignore when preparing your omelette.\n\npackages\n    List of Python packages whose contents should be included in the omelette.  Each line should be in the format\n    [package_location] [target_directory], where package_location is the real location of the package, and\n    target_directory is the (relative) location where the package should be inserted into the omelette (defaults\n    to top level).\n\nproducts\n    (optional) List of old Zope 2-style products directories whose contents should be included in the omelette,\n    one per line.  (For backwards-compatibility -- equivalent to using packages with Products as the target\n    directory.)\n\n\nWindows support\n===============\n\nUsing omelette on Windows requires the junction_ utility to make links.  Junction.exe must be present in\nyour PATH when you run omelette.\n\n.. _junction: http://www.microsoft.com/technet/sysinternals/fileanddisk/junction.mspx\n\n\nUsing omelette with eggtractor\n==============================\n\nMustapha Benali's buildout.eggtractor_ provides a handy way for buildout to automatically find\ndevelopment eggs without having to edit buildout.cfg.  However, if you use it, the omelette recipe\nwon't be aware of your eggs unless you a) manually add them to the omelette part's eggs option, or\nb) add the name of the omelette part to the buildout part's tractor-target-parts option.\n\n.. _buildout.eggtractor: http://pypi.python.org/pypi/buildout.eggtractor/\n\n\nUsing omelette with zipped eggs\n===============================\n\nOmelette doesn't currently know how to deal with eggs that are zipped.  If it encounters one, you'll\nsee a warning something like the following::\n\n    omelette: Warning: (While processing egg elementtree) Egg contents not found at\n    /Users/davidg/.buildout/eggs/elementtree-1.2.7_20070827_preview-py2.4.egg/elementtree.  Skipping.\n\nYou can tell buildout to unzip all eggs by setting the unzip = true flag in the [buildout] section.\n(Note that this will only take effect for eggs downloaded after the flag is set.)\n\n\nRunning the tests\n=================\n\nJust grab the recipe from svn and run::\n\n    python setup.py test\n\nKnown issue: The tests run buildout in a separate process, so it's currently\nimpossible to put a pdb breakpoint in the recipe and debug during the test.\nIf you need to do this, set up another buildout which installs an omelette\npart and includes collective.recipe.omelette as a development egg.\n\n\nReporting bugs or asking questions\n==================================\n\nThere is a shared bugtracker and help desk on Launchpad:\nhttps://bugs.launchpad.net/collective.buildout/\n\nChange history\n**************\n\n0.16 (2013-02-18)\n=================\n\n- Fix packaging error.\n  [davisagli]\n\n- Fix tests to work with buildout 2.\n  [davisagli]\n\n0.15 (2012-05-12)\n=================\n\n- Integration with Travis CI for running tests and pep8/pyflakes.\n  [hvelarde]\n\n- PEP 8/Pyflakes.\n  [hvelarde]\n\n- Optimized unlinking of junctioned dirs on Windows.\n  [lck]\n\n0.14 (2012-04-30)\n=================\n\n- Change the approach to building the omelette using NTFS junctions\n  on Windows. This is now done via the ``ntfsutils`` package, rather\n  than relying on junction.exe.\n  [lck]\n\n0.13 (2012-04-14)\n=================\n\n- Added forward-compatibility with Python 3.\n  [mitchell]\n\n0.12 (2011-09-08)\n=================\n\n- Replaced os.popen with subprocess equivalent\n  [tom_gross]\n\n- Quote path on windows to handle paths with spaces correctly\n  [tom_gross]\n\n0.11 (2011-07-18)\n=================\n\n- Sort top_level metadata to avoid error building omelette if they are out of\n  order.  Fixes https://bugs.launchpad.net/collective.buildout/+bug/553005.\n  Thanks to Leonardo Rochael Almeida.\n  [davisagli]\n\n0.10 (2010-11-22)\n=================\n\n- Provide an update function (equivalent to install) to avoid spurious \"recipe\n  \"doesn't define an update method\" warning.\n  [davisagli]\n\n- Print a warning rather than aborting the buildout if junction.exe is missing\n  on Windows.\n  [davisagli]\n\n- Made the tests compatible with a zc.buildout installed with Distribute \n  rather than Setuptools.\n  [pumazi]\n\n- Handle OSErrors on symlink and warn the user. MacOSX can raise OSError due \n  to an existing file here even if os.path.exists returns False.\n  [MatthewWilkes]\n\n- Include modules from namespace packages in the omelette. (Namespace packages\n  cannot define anything in __init__.py, but they can contain modules.)\n  [hathawsh]\n\n- Made the tests compatible with virtualenv.\n  [hathawsh]\n\n0.9 (2009-04-11)\n================\n\n- Adjusted log-levels to be slightly less verbose for non-critical\n  errors. [malthe]\n\n0.8 (2009-01-14)\n================\n\n- Fixed 'OSError [Errno 20] Not a directory' on zipped eggs, for\n  example when adding the z3c.sqlalchemy==1.3.5 egg.\n  [maurits]\n\n0.7 (2008-09-10)\n================\n\n- Actually add namespace declarations to generated __init__.py files.\n  [davisagli]\n\n- Use egg-info instead of guessing paths from package name. This also fixes\n  eggs which have a name different from the contents.\n  [fschulze]\n\n0.6 (2008-08-11)\n================\n\n- Documentation changes only.\n  [davisagli]\n\n0.5 (2008-05-29)\n================\n\n- Added uninstall entry point so that the omelette can be uninstalled on \n  Windows without clobbering things outside the omelette path.\n  [optilude]\n\n- Support Windows using NTFS junctions (see\n  http://www.microsoft.com/technet/sysinternals/FileAndDisk/Junction.mspx)\n  [optilude]\n\n- Ignore zipped eggs and fakezope2eggs-created links.\n  [davisagli]\n\n- Added 'packages' option to allow merging non-eggified Python packages to \n  any directory in the omelette (so that, for instance, the contents of \n  Zope's lib/python can be merged flexibly).\n  [davisagli]\n\n0.4 (2008-04-07)\n================\n\n- Added option to include Products directories.\n  [davisagli]\n\n- Fixed ignore-develop option.\n  [davisagli]\n\n0.3 (2008-03-30)\n================\n\n- Fixed test infrastructure.\n  [davisagli]\n\n- Added option to ignore develop eggs\n  [claytron]\n\n- Added option to ignore eggs\n  [claytron]\n\n- Added option to override the default omelette location.\n  [davisagli]\n\n0.2 (2008-03-16)\n================\n\n- Fixed so created directories are not normalized to lowercase.\n  [davisagli]\n\n0.1 (2008-03-10)\n================\n\n- Initial basic implementation.\n  [davisagli]\n\n- Created recipe with ZopeSkel.\n  [davisagli]\n\nContributors\n************\n\n- David Glick [davisagli]\n- Clayton Parker [claytron]\n- Martin Aspeli [optilude]\n- Florian Schulze [fschulze]\n- Maurits van Rees [maurits]\n- Malthe Borch [malthe]\n- Matthew Wilkes [MatthewWilkes]\n- Michael Mulich [pumazi]\n- Shane Hathaway [hathawsh]\n- Leonardo Rochael Almeida [LeoRochael]\n- Tom Gross [tom_gross]\n- Richard Mitchell [mitchell]\n- Roman Lacko [lck]\n- Hector Velarde [hvelarde]", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.recipe.omelette", "keywords": "buildout eggs namespace", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.recipe.omelette", "package_url": "https://pypi.org/project/collective.recipe.omelette/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.recipe.omelette/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.recipe.omelette"}, "release_url": "https://pypi.org/project/collective.recipe.omelette/0.16/", "requires_dist": null, "requires_python": null, "summary": "Creates a unified directory structure of installed packages, symlinking to the actual contents, in order to ease navigation.", "version": "0.16", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"detailed-documentation\">\n<h2>Detailed Documentation</h2>\n<div id=\"introduction\">\n<h3>Introduction</h3>\n<p>Namespace packages offer the huge benefit of being able to distribute parts of a large\nsystem in small, self-contained pieces.  However, they can be somewhat clunky to navigate,\nsince you end up with a large list of eggs in your egg cache, and then a seemingly endless\nseries of directories you need to open to actually find the contents of your egg.</p>\n<p>This recipe sets up a directory structure that mirrors the actual python namespaces, with\nsymlinks to the egg contents.  So, instead of this\u2026:</p>\n<pre>egg-cache/\n    my.egg.one-1.0-py2.7.egg/\n        my/\n            egg/\n                one/\n                    (contents of first egg)\n    my.egg.two-1.0-py2.7.egg/\n        my/\n            egg/\n                two/\n                    (contents of second egg)\n</pre>\n<p>\u2026you get this:</p>\n<pre>omelette/\n    my/\n        egg/\n            one/\n                (contents of first egg)\n            two/\n                (contents of second egg)\n</pre>\n<p>You can also include non-eggified python packages in the omelette.  This makes it simple to\nget a single path that you can add to your PYTHONPATH for use with specialized python environments\nlike when running under mod_wsgi or PyDev.</p>\n</div>\n<div id=\"typical-usage-with-zope-and-plone\">\n<h3>Typical usage with Zope and Plone</h3>\n<p>For a typical Plone buildout, with a part named \u201cinstance\u201d that uses the plone.recipe.zope2instance recipe and a\npart named \u201czope2\u201d that uses the plone.recipe.zope2install recipe, the following additions to buildout.cfg will\nresult in an omelette including all eggs and old-style Products used by the Zope instance as well as all of the\npackages from Zope\u2019s lib/python. It is important that omelette come last if you want it to find everything:</p>\n<pre>[buildout]\nparts =\n    ...(other parts)...\n    omelette\n\n...\n\n[omelette]\nrecipe = collective.recipe.omelette\neggs = ${instance:eggs}\nproducts = ${instance:products}\npackages = ${zope2:location}/lib/python ./\n</pre>\n<p>(Note: If your instance part lacks a \u2018products\u2019 variable, omit it from the omelette section as well, or\nthe omelette will silently fail to build.)</p>\n</div>\n<div id=\"supported-options\">\n<h3>Supported options</h3>\n<p>The recipe supports the following options:</p>\n<dl>\n<dt>eggs</dt>\n<dd>List of eggs which should be included in the omelette.</dd>\n<dt>location</dt>\n<dd>(optional) Override the directory in which the omelette is created (default is parts/[name of buildout part])</dd>\n<dt>ignore-develop</dt>\n<dd>(optional) Ignore eggs that you are currently developing (listed in ${buildout:develop}). Default is False</dd>\n<dt>ignores</dt>\n<dd>(optional) List of eggs to ignore when preparing your omelette.</dd>\n<dt>packages</dt>\n<dd>List of Python packages whose contents should be included in the omelette.  Each line should be in the format\n[package_location] [target_directory], where package_location is the real location of the package, and\ntarget_directory is the (relative) location where the package should be inserted into the omelette (defaults\nto top level).</dd>\n<dt>products</dt>\n<dd>(optional) List of old Zope 2-style products directories whose contents should be included in the omelette,\none per line.  (For backwards-compatibility \u2013 equivalent to using packages with Products as the target\ndirectory.)</dd>\n</dl>\n</div>\n<div id=\"windows-support\">\n<h3>Windows support</h3>\n<p>Using omelette on Windows requires the <a href=\"http://www.microsoft.com/technet/sysinternals/fileanddisk/junction.mspx\" rel=\"nofollow\">junction</a> utility to make links.  Junction.exe must be present in\nyour PATH when you run omelette.</p>\n</div>\n<div id=\"using-omelette-with-eggtractor\">\n<h3>Using omelette with eggtractor</h3>\n<p>Mustapha Benali\u2019s <a href=\"http://pypi.python.org/pypi/buildout.eggtractor/\" rel=\"nofollow\">buildout.eggtractor</a> provides a handy way for buildout to automatically find\ndevelopment eggs without having to edit buildout.cfg.  However, if you use it, the omelette recipe\nwon\u2019t be aware of your eggs unless you a) manually add them to the omelette part\u2019s eggs option, or\nb) add the name of the omelette part to the buildout part\u2019s tractor-target-parts option.</p>\n</div>\n<div id=\"using-omelette-with-zipped-eggs\">\n<h3>Using omelette with zipped eggs</h3>\n<p>Omelette doesn\u2019t currently know how to deal with eggs that are zipped.  If it encounters one, you\u2019ll\nsee a warning something like the following:</p>\n<pre>omelette: Warning: (While processing egg elementtree) Egg contents not found at\n/Users/davidg/.buildout/eggs/elementtree-1.2.7_20070827_preview-py2.4.egg/elementtree.  Skipping.\n</pre>\n<p>You can tell buildout to unzip all eggs by setting the unzip = true flag in the [buildout] section.\n(Note that this will only take effect for eggs downloaded after the flag is set.)</p>\n</div>\n<div id=\"running-the-tests\">\n<h3>Running the tests</h3>\n<p>Just grab the recipe from svn and run:</p>\n<pre>python setup.py test\n</pre>\n<p>Known issue: The tests run buildout in a separate process, so it\u2019s currently\nimpossible to put a pdb breakpoint in the recipe and debug during the test.\nIf you need to do this, set up another buildout which installs an omelette\npart and includes collective.recipe.omelette as a development egg.</p>\n</div>\n<div id=\"reporting-bugs-or-asking-questions\">\n<h3>Reporting bugs or asking questions</h3>\n<p>There is a shared bugtracker and help desk on Launchpad:\n<a href=\"https://bugs.launchpad.net/collective.buildout/\" rel=\"nofollow\">https://bugs.launchpad.net/collective.buildout/</a></p>\n</div>\n</div>\n<div id=\"change-history\">\n<h2>Change history</h2>\n<div id=\"id1\">\n<h3>0.16 (2013-02-18)</h3>\n<ul>\n<li>Fix packaging error.\n[davisagli]</li>\n<li>Fix tests to work with buildout 2.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.15 (2012-05-12)</h3>\n<ul>\n<li>Integration with Travis CI for running tests and pep8/pyflakes.\n[hvelarde]</li>\n<li>PEP 8/Pyflakes.\n[hvelarde]</li>\n<li>Optimized unlinking of junctioned dirs on Windows.\n[lck]</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.14 (2012-04-30)</h3>\n<ul>\n<li>Change the approach to building the omelette using NTFS junctions\non Windows. This is now done via the <tt>ntfsutils</tt> package, rather\nthan relying on junction.exe.\n[lck]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.13 (2012-04-14)</h3>\n<ul>\n<li>Added forward-compatibility with Python 3.\n[mitchell]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.12 (2011-09-08)</h3>\n<ul>\n<li>Replaced os.popen with subprocess equivalent\n[tom_gross]</li>\n<li>Quote path on windows to handle paths with spaces correctly\n[tom_gross]</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.11 (2011-07-18)</h3>\n<ul>\n<li>Sort top_level metadata to avoid error building omelette if they are out of\norder.  Fixes <a href=\"https://bugs.launchpad.net/collective.buildout/+bug/553005\" rel=\"nofollow\">https://bugs.launchpad.net/collective.buildout/+bug/553005</a>.\nThanks to Leonardo Rochael Almeida.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.10 (2010-11-22)</h3>\n<ul>\n<li>Provide an update function (equivalent to install) to avoid spurious \u201crecipe\n\u201cdoesn\u2019t define an update method\u201d warning.\n[davisagli]</li>\n<li>Print a warning rather than aborting the buildout if junction.exe is missing\non Windows.\n[davisagli]</li>\n<li>Made the tests compatible with a zc.buildout installed with Distribute\nrather than Setuptools.\n[pumazi]</li>\n<li>Handle OSErrors on symlink and warn the user. MacOSX can raise OSError due\nto an existing file here even if os.path.exists returns False.\n[MatthewWilkes]</li>\n<li>Include modules from namespace packages in the omelette. (Namespace packages\ncannot define anything in __init__.py, but they can contain modules.)\n[hathawsh]</li>\n<li>Made the tests compatible with virtualenv.\n[hathawsh]</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.9 (2009-04-11)</h3>\n<ul>\n<li>Adjusted log-levels to be slightly less verbose for non-critical\nerrors. [malthe]</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.8 (2009-01-14)</h3>\n<ul>\n<li>Fixed \u2018OSError [Errno 20] Not a directory\u2019 on zipped eggs, for\nexample when adding the z3c.sqlalchemy==1.3.5 egg.\n[maurits]</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.7 (2008-09-10)</h3>\n<ul>\n<li>Actually add namespace declarations to generated __init__.py files.\n[davisagli]</li>\n<li>Use egg-info instead of guessing paths from package name. This also fixes\neggs which have a name different from the contents.\n[fschulze]</li>\n</ul>\n</div>\n<div id=\"id11\">\n<h3>0.6 (2008-08-11)</h3>\n<ul>\n<li>Documentation changes only.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id12\">\n<h3>0.5 (2008-05-29)</h3>\n<ul>\n<li>Added uninstall entry point so that the omelette can be uninstalled on\nWindows without clobbering things outside the omelette path.\n[optilude]</li>\n<li>Support Windows using NTFS junctions (see\n<a href=\"http://www.microsoft.com/technet/sysinternals/FileAndDisk/Junction.mspx\" rel=\"nofollow\">http://www.microsoft.com/technet/sysinternals/FileAndDisk/Junction.mspx</a>)\n[optilude]</li>\n<li>Ignore zipped eggs and fakezope2eggs-created links.\n[davisagli]</li>\n<li>Added \u2018packages\u2019 option to allow merging non-eggified Python packages to\nany directory in the omelette (so that, for instance, the contents of\nZope\u2019s lib/python can be merged flexibly).\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id13\">\n<h3>0.4 (2008-04-07)</h3>\n<ul>\n<li>Added option to include Products directories.\n[davisagli]</li>\n<li>Fixed ignore-develop option.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id14\">\n<h3>0.3 (2008-03-30)</h3>\n<ul>\n<li>Fixed test infrastructure.\n[davisagli]</li>\n<li>Added option to ignore develop eggs\n[claytron]</li>\n<li>Added option to ignore eggs\n[claytron]</li>\n<li>Added option to override the default omelette location.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id15\">\n<h3>0.2 (2008-03-16)</h3>\n<ul>\n<li>Fixed so created directories are not normalized to lowercase.\n[davisagli]</li>\n</ul>\n</div>\n<div id=\"id16\">\n<h3>0.1 (2008-03-10)</h3>\n<ul>\n<li>Initial basic implementation.\n[davisagli]</li>\n<li>Created recipe with ZopeSkel.\n[davisagli]</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2>Contributors</h2>\n<ul>\n<li>David Glick [davisagli]</li>\n<li>Clayton Parker [claytron]</li>\n<li>Martin Aspeli [optilude]</li>\n<li>Florian Schulze [fschulze]</li>\n<li>Maurits van Rees [maurits]</li>\n<li>Malthe Borch [malthe]</li>\n<li>Matthew Wilkes [MatthewWilkes]</li>\n<li>Michael Mulich [pumazi]</li>\n<li>Shane Hathaway [hathawsh]</li>\n<li>Leonardo Rochael Almeida [LeoRochael]</li>\n<li>Tom Gross [tom_gross]</li>\n<li>Richard Mitchell [mitchell]</li>\n<li>Roman Lacko [lck]</li>\n<li>Hector Velarde [hvelarde]</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1196474, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "07ea68baadf2d922cfa3bd29aec5c374", "sha256": "4dd6638fa11b3d8451903a5943a3e4b4921a6fb33194597ebf72b4f9ca1905bc"}, "downloads": -1, "filename": "collective.recipe.omelette-0.1-py2.4.egg", "has_sig": false, "md5_digest": "07ea68baadf2d922cfa3bd29aec5c374", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10212, "upload_time": "2008-03-11T04:56:05", "upload_time_iso_8601": "2008-03-11T04:56:05Z", "url": "https://files.pythonhosted.org/packages/76/96/9a04240589a1668d1f4e55acadd0b930c58e488680f6da7681fa64d1bf6b/collective.recipe.omelette-0.1-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2abf6f3e3418dc26443866bce372ff35", "sha256": "2d05aeab962e81e676bdf3f289dc613b6d5671b5d7390da3fe070710d27cf8af"}, "downloads": -1, "filename": "collective.recipe.omelette-0.1.tar.gz", "has_sig": false, "md5_digest": "2abf6f3e3418dc26443866bce372ff35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5665, "upload_time": "2008-03-11T04:56:03", "upload_time_iso_8601": "2008-03-11T04:56:03Z", "url": "https://files.pythonhosted.org/packages/b7/98/3a1fbca3b58b699d4bffae741d9d2ae1c5bf5364b57f54eea2157e4e0c35/collective.recipe.omelette-0.1.tar.gz", "yanked": false}], "0.10": [{"comment_text": "", "digests": {"md5": "b45ff4fa71c2119aa48016200b2de6c2", "sha256": "12ae0e3e90cba207a3e31ce18f82119a822e59ed3425e60067f32adfdc679181"}, "downloads": -1, "filename": "collective.recipe.omelette-0.10.zip", "has_sig": true, "md5_digest": "b45ff4fa71c2119aa48016200b2de6c2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27923, "upload_time": "2010-11-23T07:58:07", "upload_time_iso_8601": "2010-11-23T07:58:07.431412Z", "url": "https://files.pythonhosted.org/packages/f3/6f/eadaf2c145f64fb5847e0b00c6fd54fb4d2d857ed163f4616bd02da577fa/collective.recipe.omelette-0.10.zip", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "8f1babc6b539be8cbfdc69596aa807be", "sha256": "7b736faafe533762e52b80ccf939c6a0601d04eda3bb6e7307a5ff1fe7ce6cf6"}, "downloads": -1, "filename": "collective.recipe.omelette-0.11.zip", "has_sig": false, "md5_digest": "8f1babc6b539be8cbfdc69596aa807be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28293, "upload_time": "2011-07-19T07:12:45", "upload_time_iso_8601": "2011-07-19T07:12:45.759494Z", "url": "https://files.pythonhosted.org/packages/de/6f/b9f292de26c198e09316e136b3d30cdc9d0957826cca382b4622698369ec/collective.recipe.omelette-0.11.zip", "yanked": false}], "0.12": [{"comment_text": "", "digests": {"md5": "7a2ed9f757a2673262239dbb2f3b85df", "sha256": "9abba2b54beff902d477351b8b20a1e34cd547dd9fddce74c9a7412c46eda633"}, "downloads": -1, "filename": "collective.recipe.omelette-0.12.zip", "has_sig": false, "md5_digest": "7a2ed9f757a2673262239dbb2f3b85df", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28577, "upload_time": "2011-09-08T18:15:09", "upload_time_iso_8601": "2011-09-08T18:15:09.902449Z", "url": "https://files.pythonhosted.org/packages/a3/ad/b6db2cd413698c8da4b0a4b30c3827ba9b8404ab022f43381119a0a1d00f/collective.recipe.omelette-0.12.zip", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "385f740f0f791b350626eea61c5a2af4", "sha256": "529e1ca005454fd8cf665d3c520d9cc4de67a6eab3b0a3735b6fadc236443db1"}, "downloads": -1, "filename": "collective.recipe.omelette-0.13.zip", "has_sig": false, "md5_digest": "385f740f0f791b350626eea61c5a2af4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1039895, "upload_time": "2012-04-15T03:54:59", "upload_time_iso_8601": "2012-04-15T03:54:59.985788Z", "url": "https://files.pythonhosted.org/packages/22/9b/45a0c2c65e6ec406f199e424054bbd5cca41d8e3c3985df960b834308f5c/collective.recipe.omelette-0.13.zip", "yanked": false}], "0.14": [{"comment_text": "", "digests": {"md5": "0fc87ed948e24525d2bb380dd4033e1f", "sha256": "3e652547ed531f4a6e406f599a4dcc76e689c27166462d8fd3cfd75ce5cc98e8"}, "downloads": -1, "filename": "collective.recipe.omelette-0.14.zip", "has_sig": false, "md5_digest": "0fc87ed948e24525d2bb380dd4033e1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1039882, "upload_time": "2012-05-01T04:58:18", "upload_time_iso_8601": "2012-05-01T04:58:18.451211Z", "url": "https://files.pythonhosted.org/packages/b3/ce/e4bc3e8e4174257a980ddb84fabf4753bb06f55dbb520aa76e67594e06ea/collective.recipe.omelette-0.14.zip", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "088bcf60754bead215573ce114207939", "sha256": "488eacfdc077e08e576125bdddc3ab2dc0676754e00ca6e54f60cbc0d9e9def5"}, "downloads": -1, "filename": "collective.recipe.omelette-0.15.zip", "has_sig": false, "md5_digest": "088bcf60754bead215573ce114207939", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1039985, "upload_time": "2012-05-12T20:14:09", "upload_time_iso_8601": "2012-05-12T20:14:09.703318Z", "url": "https://files.pythonhosted.org/packages/ed/e1/5577c7386f5741262c162e25e789f2a70e654ccbb928db9947bd225197ad/collective.recipe.omelette-0.15.zip", "yanked": false}], "0.16": [{"comment_text": "", "digests": {"md5": "16477973ebcdf3c70c3fdb3fb2192595", "sha256": "df4ca639bdb8f5a56832aa59278b4cdfa6fe9b06839040be0f580debb267af4a"}, "downloads": -1, "filename": "collective.recipe.omelette-0.16.zip", "has_sig": false, "md5_digest": "16477973ebcdf3c70c3fdb3fb2192595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32894, "upload_time": "2013-02-19T00:37:40", "upload_time_iso_8601": "2013-02-19T00:37:40.820596Z", "url": "https://files.pythonhosted.org/packages/67/20/0bcdc249e3582743c47f1df21aa8bf09a29c115179ed46541f74caa2ca2f/collective.recipe.omelette-0.16.zip", "yanked": false}], "0.16dev": [], "0.2": [{"comment_text": "", "digests": {"md5": "9abd5bf275027b445bc4b688f4a55a94", "sha256": "9ba88a958b35b9648570d0c34505c66daed0b8cef45d32872cd64507233fe2f8"}, "downloads": -1, "filename": "collective.recipe.omelette-0.2-py2.4.egg", "has_sig": false, "md5_digest": "9abd5bf275027b445bc4b688f4a55a94", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 10235, "upload_time": "2008-03-17T01:37:07", "upload_time_iso_8601": "2008-03-17T01:37:07Z", "url": "https://files.pythonhosted.org/packages/0b/c1/b1a505714a715ab8077d3c71bc36a1bd44c06fa96003f602cbf62097f754/collective.recipe.omelette-0.2-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a7fbc7e7bcbb9ffec8b992ee6ce97f", "sha256": "79cee3a81207e92afa41439b2f17cfd42c85eac58484d6435091b7b55f299c16"}, "downloads": -1, "filename": "collective.recipe.omelette-0.2.tar.gz", "has_sig": false, "md5_digest": "c4a7fbc7e7bcbb9ffec8b992ee6ce97f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5761, "upload_time": "2008-03-17T01:37:06", "upload_time_iso_8601": "2008-03-17T01:37:06Z", "url": "https://files.pythonhosted.org/packages/1c/34/4562d43e087506a93a50d10757bcd285c05900c9ef7436cebb2b597c6746/collective.recipe.omelette-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "15bafeecb6165e162e7522f250a542d0", "sha256": "7dbcbb22d25d279098a812e9b8b2751036c22b0e240503bcd1e75e9c756dd988"}, "downloads": -1, "filename": "collective.recipe.omelette-0.3-py2.4.egg", "has_sig": false, "md5_digest": "15bafeecb6165e162e7522f250a542d0", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 11975, "upload_time": "2008-03-31T06:57:44", "upload_time_iso_8601": "2008-03-31T06:57:44Z", "url": "https://files.pythonhosted.org/packages/c6/1e/8773a63a416a30c29285d51c22850374c0011d6d81ba64ba76c632b0fb5c/collective.recipe.omelette-0.3-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "73801675cbe84bac1eea7a32b76ad221", "sha256": "37c8cccec751bb649fbb36f004beedb8930ed4a38b9d04d778126b54b3d02813"}, "downloads": -1, "filename": "collective.recipe.omelette-0.3.tar.gz", "has_sig": false, "md5_digest": "73801675cbe84bac1eea7a32b76ad221", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6816, "upload_time": "2008-03-31T06:57:43", "upload_time_iso_8601": "2008-03-31T06:57:43Z", "url": "https://files.pythonhosted.org/packages/d0/c4/3c0d7f57412da52693b8b801ed7188cd0ee0934e7771576a9aae5a0eae42/collective.recipe.omelette-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6058c9ab0f1bea5bbd4c7ed62ad60910", "sha256": "9901e1f12a64a70676993d3a2299dbc7ae5ec4aff319dbc46c87291cf65c92ef"}, "downloads": -1, "filename": "collective.recipe.omelette-0.4-py2.4.egg", "has_sig": false, "md5_digest": "6058c9ab0f1bea5bbd4c7ed62ad60910", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 12781, "upload_time": "2008-04-08T05:40:03", "upload_time_iso_8601": "2008-04-08T05:40:03Z", "url": "https://files.pythonhosted.org/packages/6c/79/d60d76f7799f335a26b502c9ee2426c9c0c2a71b9c5d17237ee5bfdf2f38/collective.recipe.omelette-0.4-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "36eb2ee57d29aa282db4c7f6a7fb2ce0", "sha256": "d3b964db23bc1e95838c437fec87a428b0e3bc3e2fd873379745edc64ef6e1c8"}, "downloads": -1, "filename": "collective.recipe.omelette-0.4.tar.gz", "has_sig": false, "md5_digest": "36eb2ee57d29aa282db4c7f6a7fb2ce0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7420, "upload_time": "2008-04-08T05:40:01", "upload_time_iso_8601": "2008-04-08T05:40:01Z", "url": "https://files.pythonhosted.org/packages/d6/5c/86bd3be525c9160159e6d4a183a9227aa03de9ec11eac64ea55c3c5dab37/collective.recipe.omelette-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "bd33f9290f3d20810969e0570bb22c62", "sha256": "db019e9a53e327ad0a26929c162290fdb64b686e4c312eda9d33b3a7d2f9194b"}, "downloads": -1, "filename": "collective.recipe.omelette-0.5-py2.4.egg", "has_sig": false, "md5_digest": "bd33f9290f3d20810969e0570bb22c62", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 25681, "upload_time": "2008-05-29T07:16:01", "upload_time_iso_8601": "2008-05-29T07:16:01Z", "url": "https://files.pythonhosted.org/packages/e6/a0/d4a459e71b2e3f12afe07c8cae3207c28ebc1935053bc20b11640d06d054/collective.recipe.omelette-0.5-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "8772f1591a9dd8cf04c79319573ede06", "sha256": "b6fb5b0040de5b94c3d3a5e5cc3f3ce107b86c25f5c1c652988f9450db79759c"}, "downloads": -1, "filename": "collective.recipe.omelette-0.5.tar.gz", "has_sig": false, "md5_digest": "8772f1591a9dd8cf04c79319573ede06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11925, "upload_time": "2008-05-29T07:15:59", "upload_time_iso_8601": "2008-05-29T07:15:59Z", "url": "https://files.pythonhosted.org/packages/8c/81/7d7accafff1051bd41e9b57abfbc7cf0c8f1350ea5bea2dcbb814173947f/collective.recipe.omelette-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "07e495daaa75039d8cc4450a985fbc80", "sha256": "4d91976843459e28953297bf89b2ce424268123a92d5cab20e7ec70830205c94"}, "downloads": -1, "filename": "collective.recipe.omelette-0.6-py2.4.egg", "has_sig": false, "md5_digest": "07e495daaa75039d8cc4450a985fbc80", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 26242, "upload_time": "2008-08-12T05:59:14", "upload_time_iso_8601": "2008-08-12T05:59:14Z", "url": "https://files.pythonhosted.org/packages/60/bc/87249ee45594cd94f9ed54c97cd70c6f8c94209d924874fced6a5491a96d/collective.recipe.omelette-0.6-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "63ee78eb332f69a1f3770cf01c54695a", "sha256": "1a2b40fe5b55df8b63a5cc500e7927384a1a65536be0f54edac226e6624af3e2"}, "downloads": -1, "filename": "collective.recipe.omelette-0.6.tar.gz", "has_sig": false, "md5_digest": "63ee78eb332f69a1f3770cf01c54695a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12493, "upload_time": "2008-08-12T05:59:12", "upload_time_iso_8601": "2008-08-12T05:59:12Z", "url": "https://files.pythonhosted.org/packages/35/f0/09a20e32963a8ff7f53082839bacc82338b9546cf285b1451c4a59ee6d99/collective.recipe.omelette-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "2e3ce90caa5cfca8f0257650287dccdd", "sha256": "31c1bc4db445c8428f5024f3d77af56b361adfe225e95654b0ac048caf058397"}, "downloads": -1, "filename": "collective.recipe.omelette-0.7.tar.gz", "has_sig": false, "md5_digest": "2e3ce90caa5cfca8f0257650287dccdd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13756, "upload_time": "2008-09-10T14:28:57", "upload_time_iso_8601": "2008-09-10T14:28:57Z", "url": "https://files.pythonhosted.org/packages/39/6e/32eefbc4a8eb8164305855b2ff1051e1ec4f28bdee279ca66e45cdfda44f/collective.recipe.omelette-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "5a4c5042501fb38bb6ff5c7b4797a51b", "sha256": "3a761df426f0ee0ab27617dbc2a51293de1b4af18ac448571c1c44e35b6729f9"}, "downloads": -1, "filename": "collective.recipe.omelette-0.8-py2.4.egg", "has_sig": false, "md5_digest": "5a4c5042501fb38bb6ff5c7b4797a51b", "packagetype": "bdist_egg", "python_version": "2.4", "requires_python": null, "size": 28174, "upload_time": "2009-01-14T20:04:30", "upload_time_iso_8601": "2009-01-14T20:04:30Z", "url": "https://files.pythonhosted.org/packages/8c/fe/fad714fe0494788d363dff0ba6b1dbc968d2a90e4f36ceda2a06e13c627e/collective.recipe.omelette-0.8-py2.4.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "dec849485b0ca483b622576acd1a25ae", "sha256": "746c8d7e5e30c1d7d1ea6ea37e2d5da21491430f884a1c1f66ad8daf5cb2defa"}, "downloads": -1, "filename": "collective.recipe.omelette-0.8.tar.gz", "has_sig": false, "md5_digest": "dec849485b0ca483b622576acd1a25ae", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13383, "upload_time": "2009-01-14T20:04:29", "upload_time_iso_8601": "2009-01-14T20:04:29Z", "url": "https://files.pythonhosted.org/packages/a6/1e/5d9014efda7a937a5cf3eaece47addd7988cdb343304b92d7a2e89bb7b6e/collective.recipe.omelette-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "884dbaf575ad0c16b2c4444b9a3fbeb3", "sha256": "158d83b359549ca105a1a02d90012f4a49dc47f1e498747ea784381519036ca8"}, "downloads": -1, "filename": "collective.recipe.omelette-0.9.tar.gz", "has_sig": false, "md5_digest": "884dbaf575ad0c16b2c4444b9a3fbeb3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13514, "upload_time": "2009-04-12T00:38:57", "upload_time_iso_8601": "2009-04-12T00:38:57.970657Z", "url": "https://files.pythonhosted.org/packages/f9/8c/ef50b0ab2f10b561aaee95b151a7395c530f138752211a1d66e078d91098/collective.recipe.omelette-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "16477973ebcdf3c70c3fdb3fb2192595", "sha256": "df4ca639bdb8f5a56832aa59278b4cdfa6fe9b06839040be0f580debb267af4a"}, "downloads": -1, "filename": "collective.recipe.omelette-0.16.zip", "has_sig": false, "md5_digest": "16477973ebcdf3c70c3fdb3fb2192595", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32894, "upload_time": "2013-02-19T00:37:40", "upload_time_iso_8601": "2013-02-19T00:37:40.820596Z", "url": "https://files.pythonhosted.org/packages/67/20/0bcdc249e3582743c47f1df21aa8bf09a29c115179ed46541f74caa2ca2f/collective.recipe.omelette-0.16.zip", "yanked": false}], "timestamp": "Fri May  8 00:44:55 2020"}