{"info": {"author": "Josh Izaac", "author_email": "josh@iza.ac", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing"], "description": "Embedly-Cards\r\n===============\r\n\r\nEmbedly-cards is a Pelican_ plugin providing restucturedText directives to allow\r\neasy embedding of external content using `Embed.ly Cards <http://embed.ly/cards>`_.\r\n\r\n`ReST <http://iza.ac/posts/2014/03/embedly-cards/>`_ and\r\n`markdown <http://iza.ac/posts/2014/04/embedly-cards-v02-markdown-support/>`_\r\nlive examples can also be viewed from a Pelican-built website.\r\n\r\n.. _Pelican: http://getpelican.com\r\n\r\n\r\nFeatures\r\n============\r\nEmbed content within a page or blog post easily, simply by specifying the URL of\r\nthe target page. Content is automatically recognised, extracted, and formatted as\r\na 'card'; this may contain a short article preview, embedded video, picture etc.\r\n\r\nTo preview a card, they can be generated online using `Embed.ly <http://embed.ly/cards>`_.\r\nAlmost any site is compatible, including YouTube, Flickr, Google+, Maps, Wordpress etc.\r\n\r\nInstallation\r\n============\r\nEmbedly-cards can be installed using `pip`\r\n\r\n.. code-block:: bash\r\n    \r\n    $ pip install embedly-cards\r\n\r\nor manually from the source code\r\n\r\n.. code-block:: bash\r\n\r\n    $ python setup.py install\r\n\r\nOnce installed, simply add it to your ``pelicanconf.py`` configuration file:\r\n\r\n.. code-block:: python\r\n\r\n    PLUGINS = [\r\n        # ...\r\n        'embedly_cards'\r\n    ]\r\n\r\nIf you are planning on embedding content in markdown ``.md`` files,\r\nyou must also add it to the ``MD_EXTENSIONS`` options, like so:\r\n\r\n.. code-block:: python\r\n\r\n    from embedly_cards import EmbedlyCardExtension\r\n    MD_EXTENSIONS = ['codehilite(css_class=highlight)',\r\n                     'extra',\r\n                     # ...\r\n                     EmbedlyCardExtension()]\r\n\r\n.. important::\r\n    If creating the ``MD_EXTENSIONS`` variable for the first time,\r\n    ensure that the Pelican ``'codehilite(css_class=highlight)'``\r\n    and ``'extra'`` markdown extensions are included in the list.\r\n\r\nUsage\r\n============\r\n\r\nFor example, to embed a YouTube video in ReStructuredText:\r\n\r\n.. code-block:: ReST\r\n\r\n    .. embedly-card:: https://www.youtube.com/watch?v=ZlfIVEy_YOA\r\n\r\nor in markdown:\r\n\r\n.. code-block:: md\r\n\r\n    [!embedlycard](https://www.youtube.com/watch?v=ZlfIVEy_YOA)\r\n\r\nOr to embed an article/webpage in ReStructuredText:\r\n\r\n.. code-block:: ReST\r\n    \r\n    .. embedly-card:: http://physics.stackexchange.com/questions/5265/cooling-a-cup-of-coffee-with-help-of-a-spoon\r\n    \r\nor in markdown:\r\n\r\n.. code-block:: md\r\n\r\n    [!embedlycard](http://physics.stackexchange.com/questions/5265/cooling-a-cup-of-coffee-with-help-of-a-spoon)\r\n\r\nOptions\r\n========\r\n\r\nThe ``card-chrome`` (ReST) or ``chrome`` (markdown) option, if provided, specifies\r\nwhether or not to preserve the border around the card. By default, the border\r\nwill be removed automatically *if Embed.ly supports it*; however to force the\r\nborder to remain, you may pass ``:card-chrome: 1`` (ReST),\r\n\r\n.. code-block:: ReST\r\n\r\n    .. embedly-card:: https://www.youtube.com/watch?v=ZlfIVEy_YOA\r\n        :card-chrome: 1\r\n\r\nor ``chrome=1`` (markdown):\r\n\r\n.. code-block:: md\r\n\r\n    [!embedlycard?chrome=1](https://www.youtube.com/watch?v=ZlfIVEy_YOA)", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/josh146/embedly_cards/archive/0.2.0.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/josh146/embedly_cards", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "embedly_cards", "package_url": "https://pypi.org/project/embedly_cards/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/embedly_cards/", "project_urls": {"Download": "https://github.com/josh146/embedly_cards/archive/0.2.0.zip", "Homepage": "https://github.com/josh146/embedly_cards"}, "release_url": "https://pypi.org/project/embedly_cards/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Pelican plugin for embedding external content using Embed.ly Cards", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"embedly-cards\">\n<h2>Embedly-Cards</h2>\n<p>Embedly-cards is a <a href=\"http://getpelican.com\" rel=\"nofollow\">Pelican</a> plugin providing restucturedText directives to allow\neasy embedding of external content using <a href=\"http://embed.ly/cards\" rel=\"nofollow\">Embed.ly Cards</a>.</p>\n<p><a href=\"http://iza.ac/posts/2014/03/embedly-cards/\" rel=\"nofollow\">ReST</a> and\n<a href=\"http://iza.ac/posts/2014/04/embedly-cards-v02-markdown-support/\" rel=\"nofollow\">markdown</a>\nlive examples can also be viewed from a Pelican-built website.</p>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Embed content within a page or blog post easily, simply by specifying the URL of\nthe target page. Content is automatically recognised, extracted, and formatted as\na \u2018card\u2019; this may contain a short article preview, embedded video, picture etc.</p>\n<p>To preview a card, they can be generated online using <a href=\"http://embed.ly/cards\" rel=\"nofollow\">Embed.ly</a>.\nAlmost any site is compatible, including YouTube, Flickr, Google+, Maps, Wordpress etc.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Embedly-cards can be installed using <cite>pip</cite></p>\n<pre>$ pip install embedly-cards\n</pre>\n<p>or manually from the source code</p>\n<pre>$ python setup.py install\n</pre>\n<p>Once installed, simply add it to your <tt>pelicanconf.py</tt> configuration file:</p>\n<pre><span class=\"n\">PLUGINS</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"c1\"># ...</span>\n    <span class=\"s1\">'embedly_cards'</span>\n<span class=\"p\">]</span>\n</pre>\n<p>If you are planning on embedding content in markdown <tt>.md</tt> files,\nyou must also add it to the <tt>MD_EXTENSIONS</tt> options, like so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">embedly_cards</span> <span class=\"kn\">import</span> <span class=\"n\">EmbedlyCardExtension</span>\n<span class=\"n\">MD_EXTENSIONS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'codehilite(css_class=highlight)'</span><span class=\"p\">,</span>\n                 <span class=\"s1\">'extra'</span><span class=\"p\">,</span>\n                 <span class=\"c1\"># ...</span>\n                 <span class=\"n\">EmbedlyCardExtension</span><span class=\"p\">()]</span>\n</pre>\n<div>\n<p>Important</p>\n<p>If creating the <tt>MD_EXTENSIONS</tt> variable for the first time,\nensure that the Pelican <tt>'codehilite(css_class=highlight)'</tt>\nand <tt>'extra'</tt> markdown extensions are included in the list.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>For example, to embed a YouTube video in ReStructuredText:</p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">embedly-card</span><span class=\"p\">::</span> https://www.youtube.com/watch?v=ZlfIVEy_YOA\n</pre>\n<p>or in markdown:</p>\n<pre>[<span class=\"nt\">!embedlycard</span>](<span class=\"na\">https://www.youtube.com/watch?v=ZlfIVEy_YOA</span>)\n</pre>\n<p>Or to embed an article/webpage in ReStructuredText:</p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">embedly-card</span><span class=\"p\">::</span> http://physics.stackexchange.com/questions/5265/cooling-a-cup-of-coffee-with-help-of-a-spoon\n</pre>\n<p>or in markdown:</p>\n<pre>[<span class=\"nt\">!embedlycard</span>](<span class=\"na\">http://physics.stackexchange.com/questions/5265/cooling-a-cup-of-coffee-with-help-of-a-spoon</span>)\n</pre>\n</div>\n<div id=\"options\">\n<h2>Options</h2>\n<p>The <tt><span class=\"pre\">card-chrome</span></tt> (ReST) or <tt>chrome</tt> (markdown) option, if provided, specifies\nwhether or not to preserve the border around the card. By default, the border\nwill be removed automatically <em>if Embed.ly supports it</em>; however to force the\nborder to remain, you may pass <tt><span class=\"pre\">:card-chrome:</span> 1</tt> (ReST),</p>\n<pre><span class=\"p\">..</span> <span class=\"ow\">embedly-card</span><span class=\"p\">::</span> https://www.youtube.com/watch?v=ZlfIVEy_YOA\n    <span class=\"nc\">:card-chrome:</span> 1\n</pre>\n<p>or <tt>chrome=1</tt> (markdown):</p>\n<pre>[<span class=\"nt\">!embedlycard?chrome=1</span>](<span class=\"na\">https://www.youtube.com/watch?v=ZlfIVEy_YOA</span>)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 1053399, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9cdc964780d4715925cf20b22e135460", "sha256": "2cfa9b4ddda0c214e066eda37e386c0e56e580ebeb0c9a5a7910186f5df146b4"}, "downloads": -1, "filename": "embedly_cards-0.1.0-py27-none-any.whl", "has_sig": false, "md5_digest": "9cdc964780d4715925cf20b22e135460", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 5386, "upload_time": "2014-03-22T14:23:59", "upload_time_iso_8601": "2014-03-22T14:23:59.484477Z", "url": "https://files.pythonhosted.org/packages/cf/25/dad2f76dc01f9345c6b66992479f95dc7616525eb4117ff971072f2ebfec/embedly_cards-0.1.0-py27-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b7bff8b742d0d3a27a591ea7c6b57dd", "sha256": "a68685afe4f94c9d8ee696408a16289507958b0f5beda1150e448194d639bd73"}, "downloads": -1, "filename": "embedly_cards-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1b7bff8b742d0d3a27a591ea7c6b57dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16287, "upload_time": "2014-03-22T14:23:55", "upload_time_iso_8601": "2014-03-22T14:23:55.771272Z", "url": "https://files.pythonhosted.org/packages/5a/02/3042eb851293d35a8da742f478595abc87a7225b833bb720e36a5eb31d86/embedly_cards-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2ae3da56967fd85af05249131b5db735", "sha256": "c56bcf1627ef172d55a9fbc4dba10474291e376b8d8be556c4981555da4fb144"}, "downloads": -1, "filename": "embedly_cards-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "2ae3da56967fd85af05249131b5db735", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7050, "upload_time": "2014-04-07T07:18:10", "upload_time_iso_8601": "2014-04-07T07:18:10.840009Z", "url": "https://files.pythonhosted.org/packages/42/41/53a9a3ffa614e68c057304c35040bd799d7b42ab27f7237f23e3d89d3055/embedly_cards-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6275fee8c1cb25123829dd04c93f7e6c", "sha256": "7add462cbf5c4b038ab3697bf5396c8acb7ddfdabf31a6b30814472f3bd08b00"}, "downloads": -1, "filename": "embedly_cards-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6275fee8c1cb25123829dd04c93f7e6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16562, "upload_time": "2014-04-07T07:15:30", "upload_time_iso_8601": "2014-04-07T07:15:30.832160Z", "url": "https://files.pythonhosted.org/packages/c2/9e/a12ed77e0cccfbd9da4810fa2112330e56a075ba77bf8c5c3e5852ba3abd/embedly_cards-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2ae3da56967fd85af05249131b5db735", "sha256": "c56bcf1627ef172d55a9fbc4dba10474291e376b8d8be556c4981555da4fb144"}, "downloads": -1, "filename": "embedly_cards-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "2ae3da56967fd85af05249131b5db735", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7050, "upload_time": "2014-04-07T07:18:10", "upload_time_iso_8601": "2014-04-07T07:18:10.840009Z", "url": "https://files.pythonhosted.org/packages/42/41/53a9a3ffa614e68c057304c35040bd799d7b42ab27f7237f23e3d89d3055/embedly_cards-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6275fee8c1cb25123829dd04c93f7e6c", "sha256": "7add462cbf5c4b038ab3697bf5396c8acb7ddfdabf31a6b30814472f3bd08b00"}, "downloads": -1, "filename": "embedly_cards-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6275fee8c1cb25123829dd04c93f7e6c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16562, "upload_time": "2014-04-07T07:15:30", "upload_time_iso_8601": "2014-04-07T07:15:30.832160Z", "url": "https://files.pythonhosted.org/packages/c2/9e/a12ed77e0cccfbd9da4810fa2112330e56a075ba77bf8c5c3e5852ba3abd/embedly_cards-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:40 2020"}