{"info": {"author": "Branden Colen", "author_email": "brandencolen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# gsheet-api\nEasily and efficiently manage a Google Sheet.\n\n## Install\n```sh\npip install gsheet-api\n```\n\n## Notes\n- Credentials required are the Google Service account json file\n  - [Creating a Google Serivice Key](https://cloud.google.com/iam/docs/creating-managing-service-account-keys)\n- Sheet must be shared with edit access to the `client_email` found the the service account\n- Credentials can be entered as a dictionary or a file path to a json file, both will work.\n\n## Usage Example\n**\\*\\*Required arguments are defined in the \"Available Methods\" section**\n```python\nfrom gsheet_api import GSheetAPI\n\ngsheet = GSheetAPI(**)        # initialize the class\ngsheet.sheet_to_df(**)        # import data from the sheet to a Pandas DataFrame\n\ngsheet.change_gsheet(**)      # switch to a new Google Sheet to work off of\ngsheet.get_cell(**)           # get the contents of a single cell\n\ngsheet.change_tab(**)         # switch to a new tab in the current working Google Sheet\ngsheet.set_cell(**)           # set the value of a single cell\ngsheet.df_to_sheet(**)        # export a Pandas DataFrame to the current working sheet\ngsheet.timestamp_to_cell(**)  # export a timestamp to a single cell in the sheet\n```\n\n## Available Methods\n```\n__init__(self, credentials, sheet_id, tab_name)\n    Initializes the GSheetAPI and sets the current working sheet and current working tab\n    :param dict|str credentials: Dictionary containing your Google Service Account json blob or a file\n        path entered as a string\n    :param str sheet_id: Sheet id found in the Google Sheet URL\n    :param str tab_name: Name of the tab to use within the Google Sheet\n\nchange_gsheet(self, sheet_id, tab_name)\n    Changes the current working sheet\n    :param str sheet_id: Sheet id found in the Google Sheet URL\n    :param str tab_name: Name of the tab to use within the Google Sheet\n\nchange_tab(self, tab_name)\n    Changes the working tab name within the current sheet\n    :param str tab_name: Name of the tab to use within the Google Sheet\n\ndf_to_sheet(self, df_input, row_start, col_start, clear_sheet=False, clear_range=None, allow_formulas=True, \n            include_index=False, resize=False, include_column_header=True)\n    Exports a Pandas DataFrame to a Google Sheet\n    :param pandas.DataFrame df_input: DataFrame to export\n    :param int row_start: Integer value of the row (starting at 1)\n    :param int col_start: Integer value of the column (starting at 1)\n    :param bool clear_sheet: (default False) If the entire sheet should be cleared before dumping data\n    :param bool clear_range: (default None) A range that should be cleared (eg. 'A1:B12')\n    :param bool allow_formulas: (default True) Whether or not formulas should be executed or shown as a raw string\n    :param bool include_index: (default False) Whether or not the DataFrame index should be shown in the sheet\n    :param bool resize: (default False) If the sheet should resize when the data is too large to fit in the sheet\n    :param bool include_column_header: (default True) If the data header should be dumped into the sheet\n\nget_cell(self, cell)\n    Gets the current value of a given cell in the sheet\n    :param str cell: Cell reference (eg. 'A2')\n    :return: The current contents of the cell\n\nset_cell(self, cell, cell_content)\n    Sets a cell to a given value\n    :param str cell: Cell reference (eg. 'A2')\n    :param str cell_content: Desired cell content\n\nsheet_to_df(self, col_list, header, evaluate_formulas)\n    Grabs data from a Google Sheet and returns it as a Pandas DataFrame\n    :param list col_list: List of ints representing the column number to extract (eg. range(0, 4) for [0, 1, 2, 3])\n    :param int header: Integer of the row to use as a column (0 indexed)\n    :param bool evaluate_formulas: Whether or not the formulas should be computed before extracting the cell content\n    :return pandas.DataFrame: The sheet contents as a DataFrame object\n\ntimestamp_to_cell(self, cell, fmt='%Y-%m-%d %H:%M %Z', tz='US/Central')\n    Exports a timestamp to a single cell in the Google Sheet\n    :param str cell:\n    :param str fmt: (default \"%Y-%m-%d %H:%M %Z\")\n    :param str tz: (default \"US/Central\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/brandenc40/gsheet-api", "keywords": "google sheet api pandas dataframe", "license": "", "maintainer": "", "maintainer_email": "", "name": "gsheet-api", "package_url": "https://pypi.org/project/gsheet-api/", "platform": "", "project_url": "https://pypi.org/project/gsheet-api/", "project_urls": {"Homepage": "https://github.com/brandenc40/gsheet-api"}, "release_url": "https://pypi.org/project/gsheet-api/0.1.4/", "requires_dist": ["gspread", "gspread-dataframe", "pytz", "oauth2client"], "requires_python": "", "summary": "Easily and efficiently manage a Google Sheet", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gsheet-api</h1>\n<p>Easily and efficiently manage a Google Sheet.</p>\n<h2>Install</h2>\n<pre>pip install gsheet-api\n</pre>\n<h2>Notes</h2>\n<ul>\n<li>Credentials required are the Google Service account json file\n<ul>\n<li><a href=\"https://cloud.google.com/iam/docs/creating-managing-service-account-keys\" rel=\"nofollow\">Creating a Google Serivice Key</a></li>\n</ul>\n</li>\n<li>Sheet must be shared with edit access to the <code>client_email</code> found the the service account</li>\n<li>Credentials can be entered as a dictionary or a file path to a json file, both will work.</li>\n</ul>\n<h2>Usage Example</h2>\n<p><strong>**Required arguments are defined in the \"Available Methods\" section</strong></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gsheet_api</span> <span class=\"kn\">import</span> <span class=\"n\">GSheetAPI</span>\n\n<span class=\"n\">gsheet</span> <span class=\"o\">=</span> <span class=\"n\">GSheetAPI</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>        <span class=\"c1\"># initialize the class</span>\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">sheet_to_df</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>        <span class=\"c1\"># import data from the sheet to a Pandas DataFrame</span>\n\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">change_gsheet</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>      <span class=\"c1\"># switch to a new Google Sheet to work off of</span>\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">get_cell</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>           <span class=\"c1\"># get the contents of a single cell</span>\n\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">change_tab</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>         <span class=\"c1\"># switch to a new tab in the current working Google Sheet</span>\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">set_cell</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>           <span class=\"c1\"># set the value of a single cell</span>\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">df_to_sheet</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>        <span class=\"c1\"># export a Pandas DataFrame to the current working sheet</span>\n<span class=\"n\">gsheet</span><span class=\"o\">.</span><span class=\"n\">timestamp_to_cell</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"p\">)</span>  <span class=\"c1\"># export a timestamp to a single cell in the sheet</span>\n</pre>\n<h2>Available Methods</h2>\n<pre><code>__init__(self, credentials, sheet_id, tab_name)\n    Initializes the GSheetAPI and sets the current working sheet and current working tab\n    :param dict|str credentials: Dictionary containing your Google Service Account json blob or a file\n        path entered as a string\n    :param str sheet_id: Sheet id found in the Google Sheet URL\n    :param str tab_name: Name of the tab to use within the Google Sheet\n\nchange_gsheet(self, sheet_id, tab_name)\n    Changes the current working sheet\n    :param str sheet_id: Sheet id found in the Google Sheet URL\n    :param str tab_name: Name of the tab to use within the Google Sheet\n\nchange_tab(self, tab_name)\n    Changes the working tab name within the current sheet\n    :param str tab_name: Name of the tab to use within the Google Sheet\n\ndf_to_sheet(self, df_input, row_start, col_start, clear_sheet=False, clear_range=None, allow_formulas=True, \n            include_index=False, resize=False, include_column_header=True)\n    Exports a Pandas DataFrame to a Google Sheet\n    :param pandas.DataFrame df_input: DataFrame to export\n    :param int row_start: Integer value of the row (starting at 1)\n    :param int col_start: Integer value of the column (starting at 1)\n    :param bool clear_sheet: (default False) If the entire sheet should be cleared before dumping data\n    :param bool clear_range: (default None) A range that should be cleared (eg. 'A1:B12')\n    :param bool allow_formulas: (default True) Whether or not formulas should be executed or shown as a raw string\n    :param bool include_index: (default False) Whether or not the DataFrame index should be shown in the sheet\n    :param bool resize: (default False) If the sheet should resize when the data is too large to fit in the sheet\n    :param bool include_column_header: (default True) If the data header should be dumped into the sheet\n\nget_cell(self, cell)\n    Gets the current value of a given cell in the sheet\n    :param str cell: Cell reference (eg. 'A2')\n    :return: The current contents of the cell\n\nset_cell(self, cell, cell_content)\n    Sets a cell to a given value\n    :param str cell: Cell reference (eg. 'A2')\n    :param str cell_content: Desired cell content\n\nsheet_to_df(self, col_list, header, evaluate_formulas)\n    Grabs data from a Google Sheet and returns it as a Pandas DataFrame\n    :param list col_list: List of ints representing the column number to extract (eg. range(0, 4) for [0, 1, 2, 3])\n    :param int header: Integer of the row to use as a column (0 indexed)\n    :param bool evaluate_formulas: Whether or not the formulas should be computed before extracting the cell content\n    :return pandas.DataFrame: The sheet contents as a DataFrame object\n\ntimestamp_to_cell(self, cell, fmt='%Y-%m-%d %H:%M %Z', tz='US/Central')\n    Exports a timestamp to a single cell in the Google Sheet\n    :param str cell:\n    :param str fmt: (default \"%Y-%m-%d %H:%M %Z\")\n    :param str tz: (default \"US/Central\")\n</code></pre>\n\n          </div>"}, "last_serial": 5603125, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "c508a8ee3efb3274da4b136c123dbf18", "sha256": "ddf4a6a04d23e6ec1df83ca713ecd44e3de5647edc47a75e31cf20eab0dc4d47"}, "downloads": -1, "filename": "gsheet_api-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c508a8ee3efb3274da4b136c123dbf18", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4060, "upload_time": "2019-07-30T02:33:24", "upload_time_iso_8601": "2019-07-30T02:33:24.943657Z", "url": "https://files.pythonhosted.org/packages/6b/a7/bbc2ab2489467d87a5a4fed25056507706ec2d0f175a6108a9af542c4d4b/gsheet_api-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bfc652288a34cef4f4acbe9b8d64418d", "sha256": "41907764861cc8bf4c4aebe5aaaa913d0f351279c03e631c4ed6e8b41f5d4ff6"}, "downloads": -1, "filename": "gsheet_api-0.1.tar.gz", "has_sig": false, "md5_digest": "bfc652288a34cef4f4acbe9b8d64418d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3362, "upload_time": "2019-07-30T02:33:27", "upload_time_iso_8601": "2019-07-30T02:33:27.086385Z", "url": "https://files.pythonhosted.org/packages/65/09/72dc5f31c1a9e9b7e2757f559776541dac71a744f59060d5a3eb81f3432a/gsheet_api-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "8d605f8c34c75bf1bc51d85a6cf44b88", "sha256": "6ff68bb0d0c0c60bcfa4d206ddcae4edb16e2b6e8c3ae6361257f614eae22377"}, "downloads": -1, "filename": "gsheet_api-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8d605f8c34c75bf1bc51d85a6cf44b88", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4172, "upload_time": "2019-07-30T02:42:37", "upload_time_iso_8601": "2019-07-30T02:42:37.759285Z", "url": "https://files.pythonhosted.org/packages/41/84/f556bda8acaf9bf0cb7029707177bc4e78b9bf5687cfb1ef483d4441f6c7/gsheet_api-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd13d1a1c8fc78d05f21344ee58a5a02", "sha256": "bc1841459a81ad44e4c9bd21030e18adab23433b37c7cb79a6f0c471699ec417"}, "downloads": -1, "filename": "gsheet_api-0.1.1.tar.gz", "has_sig": false, "md5_digest": "bd13d1a1c8fc78d05f21344ee58a5a02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3510, "upload_time": "2019-07-30T02:42:39", "upload_time_iso_8601": "2019-07-30T02:42:39.335290Z", "url": "https://files.pythonhosted.org/packages/99/08/d67ac14a432b9d396bac8d3ba10411de5b4cfb68f814cc460dcd016055ca/gsheet_api-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "58c086e50b248938ce93cb1b5a65df3c", "sha256": "bc783e20155c173af947185021569ea9f69ba178235c299d182c8f9c727a4d4f"}, "downloads": -1, "filename": "gsheet_api-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "58c086e50b248938ce93cb1b5a65df3c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4978, "upload_time": "2019-07-30T02:54:02", "upload_time_iso_8601": "2019-07-30T02:54:02.252088Z", "url": "https://files.pythonhosted.org/packages/ec/97/f12804acbab684518f974238fb861ded5c4950a1bcb707d02632c79c9943/gsheet_api-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "17a7dbbe4549a9274ae14e3af76ae59b", "sha256": "6a64668fe2d834320e41b23130163a4d731161a0f097b744716c7146d7f071f8"}, "downloads": -1, "filename": "gsheet_api-0.1.2.tar.gz", "has_sig": false, "md5_digest": "17a7dbbe4549a9274ae14e3af76ae59b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3498, "upload_time": "2019-07-30T02:54:03", "upload_time_iso_8601": "2019-07-30T02:54:03.753369Z", "url": "https://files.pythonhosted.org/packages/f0/e7/6425b384344bfd44a0d494faf163d9abcbe4173b749a3c5057e6ea4e949a/gsheet_api-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b7360583f02229ec03ad8d6e0d05bbbc", "sha256": "db06036455d99569cc4ee5eca63961e0e7015c778c049cf0e118d1bea8ea405d"}, "downloads": -1, "filename": "gsheet_api-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b7360583f02229ec03ad8d6e0d05bbbc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5013, "upload_time": "2019-07-30T02:58:07", "upload_time_iso_8601": "2019-07-30T02:58:07.949772Z", "url": "https://files.pythonhosted.org/packages/a3/a9/b28a3ac3de76f308ef58f0f137245df1b0ac86e8a662e0281cb0985302a0/gsheet_api-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "93cf556b7002b142e7b4e64dac61dc7c", "sha256": "c1d22e0cbbe2bc3f815dc73fabd0fe203e855bfcc4fea0b2d41834b126ad66e6"}, "downloads": -1, "filename": "gsheet_api-0.1.3.tar.gz", "has_sig": false, "md5_digest": "93cf556b7002b142e7b4e64dac61dc7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3566, "upload_time": "2019-07-30T02:58:09", "upload_time_iso_8601": "2019-07-30T02:58:09.555858Z", "url": "https://files.pythonhosted.org/packages/df/3d/f0cd59df3249fff6497b65a5ef5b3094b4107dfe0192fe07fec6bb67c90b/gsheet_api-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "ac44bd272fad19c5c530e6e4405e84ce", "sha256": "22d5a736fed59fe3dbbc40518736f044cecc489c264bca9ce14568f0d09c0277"}, "downloads": -1, "filename": "gsheet_api-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ac44bd272fad19c5c530e6e4405e84ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5954, "upload_time": "2019-07-30T03:20:34", "upload_time_iso_8601": "2019-07-30T03:20:34.565103Z", "url": "https://files.pythonhosted.org/packages/9a/c2/b013750e19f94039bfa6fd42a2583659cbd26a10807b4dd8761d66d2a8c8/gsheet_api-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2df0fa286af7ae07ec58288ec17498f", "sha256": "d141f3546c2e704349a9265b3f58c06b3b84ce2cdb40180daf3324d34d69f2b4"}, "downloads": -1, "filename": "gsheet_api-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c2df0fa286af7ae07ec58288ec17498f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4060, "upload_time": "2019-07-30T03:20:36", "upload_time_iso_8601": "2019-07-30T03:20:36.135184Z", "url": "https://files.pythonhosted.org/packages/c7/89/d17c45bd33225a755785579ac7a6ede6203442251a451f5382cef82900d5/gsheet_api-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ac44bd272fad19c5c530e6e4405e84ce", "sha256": "22d5a736fed59fe3dbbc40518736f044cecc489c264bca9ce14568f0d09c0277"}, "downloads": -1, "filename": "gsheet_api-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ac44bd272fad19c5c530e6e4405e84ce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5954, "upload_time": "2019-07-30T03:20:34", "upload_time_iso_8601": "2019-07-30T03:20:34.565103Z", "url": "https://files.pythonhosted.org/packages/9a/c2/b013750e19f94039bfa6fd42a2583659cbd26a10807b4dd8761d66d2a8c8/gsheet_api-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2df0fa286af7ae07ec58288ec17498f", "sha256": "d141f3546c2e704349a9265b3f58c06b3b84ce2cdb40180daf3324d34d69f2b4"}, "downloads": -1, "filename": "gsheet_api-0.1.4.tar.gz", "has_sig": false, "md5_digest": "c2df0fa286af7ae07ec58288ec17498f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4060, "upload_time": "2019-07-30T03:20:36", "upload_time_iso_8601": "2019-07-30T03:20:36.135184Z", "url": "https://files.pythonhosted.org/packages/c7/89/d17c45bd33225a755785579ac7a6ede6203442251a451f5382cef82900d5/gsheet_api-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:41 2020"}