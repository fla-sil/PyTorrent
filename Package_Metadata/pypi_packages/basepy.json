{"info": {"author": "Wei Zhuo", "author_email": "zeaphoo@qq.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# basepy\nBasic library for python 3.6+, includes:\n\n* config loader\n* structure logger\n* program metrics (statsd)\n* exception logger (via sentry)\n* datastructures for asyncio\n\n## log\n\nVery simple and powerful log system, support structure log. It's not depends on python builtin `logging` module.\n\n```python\nimport asyncio\nfrom basepy.asynclog import logger\n\nlogger.add(\"stdout\")\n\nasync def main():\n    await logger.info(\"hello\")\n    await logger.info(\"stuct\", a=1, b=2, hello='world')\n\n\nasyncio.run(main())\n\n```\n\nAnd the code will generated.\n\n```\n[2020-02-01 11:42:07 +0800] [local.72267] [INFO] [hello]\n[2020-02-01 11:42:07 +0800] [local.72267] [INFO] [stuct] [a = 1] [b = 2] [hello = \"world\"]\n```\n\n## config\n\nConfig module is easy and powerful settings configuration with following features.\n\n1. keep secrets related in sperate file `.secrets.toml`\n2. keep local config in sperate file `settings.local.toml` or `.secrets.local.toml`, the local settings will override the settings for the same key.\n\nSo, config files should looks like\n\n```\napplication\n\u251c\u2500\u2500 .secrets.local.toml\n\u251c\u2500\u2500 .secrets.toml\n\u251c\u2500\u2500 settings.local.toml\n\u2514\u2500\u2500 settings.toml\n```\n\nThe `.secrets.toml` should contains several keys, like\n\n```toml\nsigning_secret = \"local_a\"\naccess_token = \"local_b\"\n```\n\nTo access secrets in program, just use `settings.secrets`\n\n```python\nfrom basepy.config import settings\n\nprint(settings.secrets.signing_secret) # will print \"local_a\"\n\n```\n\nThe `settings.toml` can contains very complex setting, for example\n\n```toml\n[log]\n    handlers = [\"stdout\", \"local_fluent\"]\n\n    [log.stdout]\n    handler_type = \"stdout\"\n    level = \"debug\"\n\n    [log.local_fluent]\n    handler_type = \"fluent\"\n    host = \"127.0.0.1\"\n    port = 24224\n    tag = \"basepy\"\n    level = \"info\"\n```\n\nTo access normal setting, just use `settings.key`\n\n```\nfrom basepy.config import setting\nprint(setting.log.handlers)\n```\n\n## more\nPlease refer the docs directory.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pyflow/basepy/", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "basepy", "package_url": "https://pypi.org/project/basepy/", "platform": "any", "project_url": "https://pypi.org/project/basepy/", "project_urls": {"Homepage": "https://github.com/pyflow/basepy/"}, "release_url": "https://pypi.org/project/basepy/0.3.2/", "requires_dist": ["msgpack", "toml", "python-box (<4.0.0)", "PyYAML", "pytest (>=3) ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Base library of python 3.6+ and asyncio, include log, config, event, metric etc.", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>basepy</h1>\n<p>Basic library for python 3.6+, includes:</p>\n<ul>\n<li>config loader</li>\n<li>structure logger</li>\n<li>program metrics (statsd)</li>\n<li>exception logger (via sentry)</li>\n<li>datastructures for asyncio</li>\n</ul>\n<h2>log</h2>\n<p>Very simple and powerful log system, support structure log. It's not depends on python builtin <code>logging</code> module.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">from</span> <span class=\"nn\">basepy.asynclog</span> <span class=\"kn\">import</span> <span class=\"n\">logger</span>\n\n<span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"s2\">\"stdout\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"k\">await</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"hello\"</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span><span class=\"s2\">\"stuct\"</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">hello</span><span class=\"o\">=</span><span class=\"s1\">'world'</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<p>And the code will generated.</p>\n<pre><code>[2020-02-01 11:42:07 +0800] [local.72267] [INFO] [hello]\n[2020-02-01 11:42:07 +0800] [local.72267] [INFO] [stuct] [a = 1] [b = 2] [hello = \"world\"]\n</code></pre>\n<h2>config</h2>\n<p>Config module is easy and powerful settings configuration with following features.</p>\n<ol>\n<li>keep secrets related in sperate file <code>.secrets.toml</code></li>\n<li>keep local config in sperate file <code>settings.local.toml</code> or <code>.secrets.local.toml</code>, the local settings will override the settings for the same key.</li>\n</ol>\n<p>So, config files should looks like</p>\n<pre><code>application\n\u251c\u2500\u2500 .secrets.local.toml\n\u251c\u2500\u2500 .secrets.toml\n\u251c\u2500\u2500 settings.local.toml\n\u2514\u2500\u2500 settings.toml\n</code></pre>\n<p>The <code>.secrets.toml</code> should contains several keys, like</p>\n<pre><span class=\"n\">signing_secret</span> <span class=\"o\">=</span> <span class=\"s\">\"local_a\"</span>\n<span class=\"n\">access_token</span> <span class=\"o\">=</span> <span class=\"s\">\"local_b\"</span>\n</pre>\n<p>To access secrets in program, just use <code>settings.secrets</code></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">basepy.config</span> <span class=\"kn\">import</span> <span class=\"n\">settings</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">secrets</span><span class=\"o\">.</span><span class=\"n\">signing_secret</span><span class=\"p\">)</span> <span class=\"c1\"># will print \"local_a\"</span>\n</pre>\n<p>The <code>settings.toml</code> can contains very complex setting, for example</p>\n<pre><span class=\"k\">[log]</span>\n    <span class=\"n\">handlers</span> <span class=\"o\">=</span> <span class=\"k\">[\"stdout\", \"local_fluent\"]</span>\n\n    <span class=\"k\">[log.stdout]</span>\n    <span class=\"n\">handler_type</span> <span class=\"o\">=</span> <span class=\"s\">\"stdout\"</span>\n    <span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"s\">\"debug\"</span>\n\n    <span class=\"k\">[log.local_fluent]</span>\n    <span class=\"n\">handler_type</span> <span class=\"o\">=</span> <span class=\"s\">\"fluent\"</span>\n    <span class=\"n\">host</span> <span class=\"o\">=</span> <span class=\"s\">\"127.0.0.1\"</span>\n    <span class=\"n\">port</span> <span class=\"o\">=</span> <span class=\"mi\">24224</span>\n    <span class=\"n\">tag</span> <span class=\"o\">=</span> <span class=\"s\">\"basepy\"</span>\n    <span class=\"n\">level</span> <span class=\"o\">=</span> <span class=\"s\">\"info\"</span>\n</pre>\n<p>To access normal setting, just use <code>settings.key</code></p>\n<pre><code>from basepy.config import setting\nprint(setting.log.handlers)\n</code></pre>\n<h2>more</h2>\n<p>Please refer the docs directory.</p>\n\n          </div>"}, "last_serial": 6752994, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "c5d38ed1894c8bdd7191940f09da3582", "sha256": "3c743a04a490d11fc77d9af19136950f415f1e8ad53935701dded1cfe311d01c"}, "downloads": -1, "filename": "basepy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c5d38ed1894c8bdd7191940f09da3582", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14068, "upload_time": "2020-02-04T04:35:49", "upload_time_iso_8601": "2020-02-04T04:35:49.767184Z", "url": "https://files.pythonhosted.org/packages/20/15/746d323236d7cdc71e8094059477bd9b707133f428e280cde526ceff8006/basepy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5f9f2a355dd84e160c00169cdf05733c", "sha256": "13791eb32dc5edcd726c4e49ef5bd5e0f083f74a20a986207cb14c4765d84ea9"}, "downloads": -1, "filename": "basepy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "5f9f2a355dd84e160c00169cdf05733c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12685, "upload_time": "2020-02-04T04:35:51", "upload_time_iso_8601": "2020-02-04T04:35:51.817755Z", "url": "https://files.pythonhosted.org/packages/23/f2/644383aad232b0ee39fa2132bb86a5d3017f18a09eea0c0ec0281cb22a18/basepy-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9573b7c737729d3757b0589306b023eb", "sha256": "1622066f8cdd030431c335fa74a59751af0b5abaa8ee956c9ca52e0ff5e7a701"}, "downloads": -1, "filename": "basepy-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9573b7c737729d3757b0589306b023eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15894, "upload_time": "2020-02-15T06:26:11", "upload_time_iso_8601": "2020-02-15T06:26:11.436193Z", "url": "https://files.pythonhosted.org/packages/8d/e9/e1c669db0757dc3078c59b47b101461997b219b146a7a02cd12a16d7fcf9/basepy-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f7178a571c2088ba7040b6043203ee0", "sha256": "194814075ef05706f8b9d151546d121f2d1584b58452817f474226cb73d9fcfc"}, "downloads": -1, "filename": "basepy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6f7178a571c2088ba7040b6043203ee0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13924, "upload_time": "2020-02-15T06:26:13", "upload_time_iso_8601": "2020-02-15T06:26:13.402500Z", "url": "https://files.pythonhosted.org/packages/23/36/4fc80718bc181fd23538adc89f34da5bdcb10cb2c88fd3a455ea1a6602d2/basepy-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "aedf97027fb4dca4775e52faba360aa3", "sha256": "cdb29f1f100588fb815e19454d6d0d425005291a7fdfb69e2c4543dfa1667e2f"}, "downloads": -1, "filename": "basepy-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "aedf97027fb4dca4775e52faba360aa3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32407, "upload_time": "2020-02-29T02:30:50", "upload_time_iso_8601": "2020-02-29T02:30:50.886848Z", "url": "https://files.pythonhosted.org/packages/ce/c5/d3e8a20745096f901a800398ea67dfece7678be88561aaaa4b52cdfe26c2/basepy-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd5b1d9d16d207472c43869d225c173d", "sha256": "d5472b7e8e13e492296fdbb662091212c90ba03b5699e0dd9ac882460bdcb489"}, "downloads": -1, "filename": "basepy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "dd5b1d9d16d207472c43869d225c173d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18715, "upload_time": "2020-02-29T02:30:52", "upload_time_iso_8601": "2020-02-29T02:30:52.322552Z", "url": "https://files.pythonhosted.org/packages/fd/28/650a7d71ea56396bdf3dfd75cc2bcc16ea067dad67532ef74b16684f9025/basepy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "716953c651b8cf84e7a83dd03c65abb1", "sha256": "28c237ee8328c84864f10302bc2676330b1b7bfe07550ecc62b6247186078bec"}, "downloads": -1, "filename": "basepy-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "716953c651b8cf84e7a83dd03c65abb1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32692, "upload_time": "2020-02-29T02:35:37", "upload_time_iso_8601": "2020-02-29T02:35:37.186799Z", "url": "https://files.pythonhosted.org/packages/02/67/3a109d70f71f8af2acc45bb384cb4399adb9d259ec4d6b970a5a789bba06/basepy-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a7cba06ffea0ad14a46e3e6b32e9b91", "sha256": "bc7637135a3c5eb24cb20a01eba66e404d7675bf87236fbb7eb285e4f65261ad"}, "downloads": -1, "filename": "basepy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7a7cba06ffea0ad14a46e3e6b32e9b91", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18924, "upload_time": "2020-02-29T02:35:39", "upload_time_iso_8601": "2020-02-29T02:35:39.334871Z", "url": "https://files.pythonhosted.org/packages/12/7f/507249791893a17aa524e6f1763c6e2c3758313fc92221b7076e07df4517/basepy-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "bd0f0bde84a1f2196960de15526d7244", "sha256": "3573f7072461cef1fa99bb7decc2fdf6d2054f15d7ddc64810a79ac1c52c4d6a"}, "downloads": -1, "filename": "basepy-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bd0f0bde84a1f2196960de15526d7244", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34050, "upload_time": "2020-03-05T03:35:44", "upload_time_iso_8601": "2020-03-05T03:35:44.345834Z", "url": "https://files.pythonhosted.org/packages/60/6b/bdb48a2d211dac96506f71742cce97f3f04b02a81716edc712d781780f42/basepy-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae0210d0f070aa09c517ad0b2cd20e8d", "sha256": "ec7aab99a0f5f685225eb9fa7caea2ba06677823de841390a3980887598f11de"}, "downloads": -1, "filename": "basepy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ae0210d0f070aa09c517ad0b2cd20e8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20652, "upload_time": "2020-03-05T03:35:46", "upload_time_iso_8601": "2020-03-05T03:35:46.674264Z", "url": "https://files.pythonhosted.org/packages/6b/44/d57fad914377612202649ff62c02662f421bdc6296d4e099b0674d0d3adf/basepy-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd0f0bde84a1f2196960de15526d7244", "sha256": "3573f7072461cef1fa99bb7decc2fdf6d2054f15d7ddc64810a79ac1c52c4d6a"}, "downloads": -1, "filename": "basepy-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bd0f0bde84a1f2196960de15526d7244", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 34050, "upload_time": "2020-03-05T03:35:44", "upload_time_iso_8601": "2020-03-05T03:35:44.345834Z", "url": "https://files.pythonhosted.org/packages/60/6b/bdb48a2d211dac96506f71742cce97f3f04b02a81716edc712d781780f42/basepy-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae0210d0f070aa09c517ad0b2cd20e8d", "sha256": "ec7aab99a0f5f685225eb9fa7caea2ba06677823de841390a3980887598f11de"}, "downloads": -1, "filename": "basepy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "ae0210d0f070aa09c517ad0b2cd20e8d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20652, "upload_time": "2020-03-05T03:35:46", "upload_time_iso_8601": "2020-03-05T03:35:46.674264Z", "url": "https://files.pythonhosted.org/packages/6b/44/d57fad914377612202649ff62c02662f421bdc6296d4e099b0674d0d3adf/basepy-0.3.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:49 2020"}