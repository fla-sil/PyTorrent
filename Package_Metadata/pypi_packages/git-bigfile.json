{"info": {"author": "Benjamin Bertrand", "author_email": "beenje@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Topic :: Software Development"], "description": "===========\ngit-bigfile\n===========\n\ngit-bigfile is a port to python / fork of Scott Chacon git-media_.\nIt allows you to use Git with large files without storing the file in Git itself.\n\n.. _git-media: https://github.com/schacon/git-media\n\nConfiguration\n-------------\n\nConfigure the filter and transport\n++++++++++++++++++++++++++++++++++\n\nBy running::\n\n    $ git bigfile config [--global]\n\nOr manually:\n\nFirst setup the attributes filter settings::\n\n    (once after install)\n    $ git config --global filter.bigfile.clean \"git-bigfile filter-clean\"\n    $ git config --global filter.bigfile.smudge \"git-bigfile filter-smudge\"\n\nNext you need to configure git to tell it where you want to store the large files.\nThere are two options:\n\n1. Storing locally in a filesystem path\n2. Storing remotely via sftp (should work with any SSH server - requires\n   paramiko)\n\nHere are the relevant sections that should go either in ~/.gitconfig (for global settings)\nor in clone/.git/config (for per-repo settings)::\n\n    [git-bigfile]\n        transport = <local|sftp>\n\n    # settings for local transport\n    [git-bigfile \"local\"]\n        path = <local_filesystem_path>\n\n    # settings for sftp transport\n    [git-bigfile \"sftp\"]\n        hostname = <host>\n        username = <user>\n        path = <path_on_remote_server>\n\nAll sftp settings (except path) will be passed to paramiko.SSHClient connect\nmethod. You can set: port, password, pkey, key_filename, timeout... Refer to\nparamiko API.\n\n\nSetup the .gitattributes file to map extensions to the filter\n+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++\n\n::\n\n    (in repo - once)\n    $ echo \"*.tar.gz filter=bigfile -crlf\" > .gitattributes\n\nStaging files with those extensions will automatically copy them to the\nbigfile cache area (.git/bigfile) until you run 'git bigfile push' wherein they\nare uploaded.  Checkouts that reference bigfile you don't have yet will try to\nretrieve them from cache, otherwise they are downloaded when you run 'git\nbigfile pull'.\n\n\nUsage\n-----\n\nTo configure the filter and/or the transport to use::\n\n    $ git bigfile config\n\nThen::\n\n    (in repo - repeatedly)\n    $ (hack, stage, commit)\n\nTo push to the server any committed bigfile::\n\n    $ git bigfile push\n\nYou can also check the status of your bigfiles via::\n\n    $ git bigfile status\n\nWhich will show you files that are waiting to be uploaded and how much data\nthat is. If you want to delete the local cache of uploaded bigfiles, run::\n\n    $ git bigfile clear\n\nYou can add a bigfile that doesn't match the extensions defined in\nthe .gitattributes by running::\n\n    $ git bigfile add <huge_file>\n\nWhich will add <huge_file> to .gitattributes and to the index.\n\nTo expand a bigfile you don't have locally, run::\n\n    $ git bigfile pull\n\n\nInstalling\n----------\n\ngit-bigfile requires Python 2.5, 2.6 or 2.7.\nIt has been tested on MacOS X and linux.\n\nTo install, run::\n\n    $ pip install paramiko (to use sftp transport)\n    $ pip install git-bigfile\n\n\nCopyright\n---------\n\nOriginal work Copyright (c) 2009 Scott Chacon.\nModified work Copyright (c) 2012-2013 Benjamin Bertrand.\nSee LICENSE for details.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/beenje/git-bigfile", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "git-bigfile", "package_url": "https://pypi.org/project/git-bigfile/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/git-bigfile/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/beenje/git-bigfile"}, "release_url": "https://pypi.org/project/git-bigfile/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "git-bigfile allows you to use Git with large files without storing the file in Git itself", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>git-bigfile is a port to python / fork of Scott Chacon <a href=\"https://github.com/schacon/git-media\" rel=\"nofollow\">git-media</a>.\nIt allows you to use Git with large files without storing the file in Git itself.</p>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<div id=\"configure-the-filter-and-transport\">\n<h3>Configure the filter and transport</h3>\n<p>By running:</p>\n<pre>$ git bigfile config [--global]\n</pre>\n<p>Or manually:</p>\n<p>First setup the attributes filter settings:</p>\n<pre>(once after install)\n$ git config --global filter.bigfile.clean \"git-bigfile filter-clean\"\n$ git config --global filter.bigfile.smudge \"git-bigfile filter-smudge\"\n</pre>\n<p>Next you need to configure git to tell it where you want to store the large files.\nThere are two options:</p>\n<ol>\n<li>Storing locally in a filesystem path</li>\n<li>Storing remotely via sftp (should work with any SSH server - requires\nparamiko)</li>\n</ol>\n<p>Here are the relevant sections that should go either in ~/.gitconfig (for global settings)\nor in clone/.git/config (for per-repo settings):</p>\n<pre>[git-bigfile]\n    transport = &lt;local|sftp&gt;\n\n# settings for local transport\n[git-bigfile \"local\"]\n    path = &lt;local_filesystem_path&gt;\n\n# settings for sftp transport\n[git-bigfile \"sftp\"]\n    hostname = &lt;host&gt;\n    username = &lt;user&gt;\n    path = &lt;path_on_remote_server&gt;\n</pre>\n<p>All sftp settings (except path) will be passed to paramiko.SSHClient connect\nmethod. You can set: port, password, pkey, key_filename, timeout\u2026 Refer to\nparamiko API.</p>\n</div>\n<div id=\"setup-the-gitattributes-file-to-map-extensions-to-the-filter\">\n<h3>Setup the .gitattributes file to map extensions to the filter</h3>\n<pre>(in repo - once)\n$ echo \"*.tar.gz filter=bigfile -crlf\" &gt; .gitattributes\n</pre>\n<p>Staging files with those extensions will automatically copy them to the\nbigfile cache area (.git/bigfile) until you run \u2018git bigfile push\u2019 wherein they\nare uploaded.  Checkouts that reference bigfile you don\u2019t have yet will try to\nretrieve them from cache, otherwise they are downloaded when you run \u2018git\nbigfile pull\u2019.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To configure the filter and/or the transport to use:</p>\n<pre>$ git bigfile config\n</pre>\n<p>Then:</p>\n<pre>(in repo - repeatedly)\n$ (hack, stage, commit)\n</pre>\n<p>To push to the server any committed bigfile:</p>\n<pre>$ git bigfile push\n</pre>\n<p>You can also check the status of your bigfiles via:</p>\n<pre>$ git bigfile status\n</pre>\n<p>Which will show you files that are waiting to be uploaded and how much data\nthat is. If you want to delete the local cache of uploaded bigfiles, run:</p>\n<pre>$ git bigfile clear\n</pre>\n<p>You can add a bigfile that doesn\u2019t match the extensions defined in\nthe .gitattributes by running:</p>\n<pre>$ git bigfile add &lt;huge_file&gt;\n</pre>\n<p>Which will add &lt;huge_file&gt; to .gitattributes and to the index.</p>\n<p>To expand a bigfile you don\u2019t have locally, run:</p>\n<pre>$ git bigfile pull\n</pre>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>git-bigfile requires Python 2.5, 2.6 or 2.7.\nIt has been tested on MacOS X and linux.</p>\n<p>To install, run:</p>\n<pre>$ pip install paramiko (to use sftp transport)\n$ pip install git-bigfile\n</pre>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Original work Copyright (c) 2009 Scott Chacon.\nModified work Copyright (c) 2012-2013 Benjamin Bertrand.\nSee LICENSE for details.</p>\n</div>\n\n          </div>"}, "last_serial": 832824, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8ea8ecf74f387486c93561143403544a", "sha256": "df47f4add0f80d6ddb0e2bae9e4627796e6d20385b491c495d22c8754b31f71d"}, "downloads": -1, "filename": "git-bigfile-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8ea8ecf74f387486c93561143403544a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8524, "upload_time": "2012-11-19T22:31:19", "upload_time_iso_8601": "2012-11-19T22:31:19.034840Z", "url": "https://files.pythonhosted.org/packages/be/55/01fc45b535ddf74e860ed7a519482d54948c27fa981abbdc10b33963ad3c/git-bigfile-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "d157b43f8bcea76b0d3a8a25989b72ee", "sha256": "050236d192c9f299c20793b604b709e6f76cc0e776cb28986f33f2613add4529"}, "downloads": -1, "filename": "git-bigfile-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d157b43f8bcea76b0d3a8a25989b72ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8632, "upload_time": "2013-02-23T16:52:34", "upload_time_iso_8601": "2013-02-23T16:52:34.276547Z", "url": "https://files.pythonhosted.org/packages/da/42/c75878b60861a804c50d4389d3e3912cbdc2934099426a1ffada6e8fb066/git-bigfile-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3c157a4d309bcbbd9f865b79ea67f796", "sha256": "4554b4f7e1a6b095acc514b5e10f1e1052b6589cbab536180f3202c1be3024ce"}, "downloads": -1, "filename": "git-bigfile-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3c157a4d309bcbbd9f865b79ea67f796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8809, "upload_time": "2013-08-05T18:16:06", "upload_time_iso_8601": "2013-08-05T18:16:06.870151Z", "url": "https://files.pythonhosted.org/packages/9f/02/fa18b8914e03616296a298402c8dde1670fee63b960c408649e3077e5304/git-bigfile-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3c157a4d309bcbbd9f865b79ea67f796", "sha256": "4554b4f7e1a6b095acc514b5e10f1e1052b6589cbab536180f3202c1be3024ce"}, "downloads": -1, "filename": "git-bigfile-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3c157a4d309bcbbd9f865b79ea67f796", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8809, "upload_time": "2013-08-05T18:16:06", "upload_time_iso_8601": "2013-08-05T18:16:06.870151Z", "url": "https://files.pythonhosted.org/packages/9f/02/fa18b8914e03616296a298402c8dde1670fee63b960c408649e3077e5304/git-bigfile-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:10 2020"}