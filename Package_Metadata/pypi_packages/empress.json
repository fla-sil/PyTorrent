{"info": {"author": "empress development team", "author_email": "cantrell.kalen@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "License :: OSI Approved :: BSD License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3 :: Only", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Software Development :: Libraries"], "description": "Empress is still in early development and new features to add are currently being explored. If you would like to suggest\nsomething you can email kcantrel@ucsd.edu.\n\n# Installation\nPlease install the following packages in order to run Empress\n\n```\nconda create -n empress pip tornado\nsource activate empress\nconda install -c conda-forge scikit-bio\npip install git+https://github.com/biocore/empress.git\n```\n\n# Run\nType the following commands in the terminal for more information\n\n```\nempress --help\n```\n\nA bit of preprocessing occurs after empress is ran. The following message will appear in the terminal when empress is ready\nto be used. \n\n```\nbuild web server\nserver started at port 8080\n```\n\nThen enter the following in a browsers search bar to launch empress.\n\n```\nhttp://localhost:8080/\n```\n\n# Input Formats\nEmpress takes in as input a Newick file for the tree and a tabular mapping file for the feature metadata.\n\nAn example of a feature metadata file would look like something as follows\n\n```\nID           Genome_size     Phyla\nOTU_1001     100000          Proteobacteria\nOTU_1002     150201          Firmicutes\nOTU_2001     502051          Actinobacteria\n```\nThe first column of the metadata files must match the ids in the newick file. In the above example ID is what\nthe newick file would use to name the nodes..\nIf a node does not have a name in the newick file, empress will assign it \"yid\" where id is a number corresponding to its\nposition in the tree.\nNote: to make processing metadata easier, empress will remane the first column of the metadata file to Node_id. So in the \nabove example, ID will show up as Node_id in empress.\n\n# To run sample data set\nTo download sample data enter the following in terminal or go into data/primates and manually download the files.\n\n```\nsvn export https://github.com/biocore/empress.git/trunk/data\n```\n\nBoth leaf_metadata.txt and internal_node_metadata.txt are space delimited. To make combining the metadata files easier,\nempress will rename #SequenceID will show up as Node_id in empress.\n\nHere is an exmple of how internal_node_metadata.txt if formatted.\n\n```\nNode_id Intercept_effect_size   Phyl_Group[T.Lemur]_effect_size ...\ny0  0.02256030930979693 -0.12709112380267737 ...\ny1  -0.15122058716686135    0.1629544435889327 ...\n.\n.\n.\n```\n\nTo run empress type the following command from within the directory where you downloaded the data file\n\n```\nempress --tree-file tree.nwk --metadata leaf_metadata.txt --additional-metadata internal_node_metadata.txt --clade-field Node_id --main-seperator \" \" --additional-seperator \" \"\n```\n--clade-field is what empress will use in its \"clade color\" feature. Node_id was choosen to better demonstrate this feature.\n\nNote: It doesn't matter which metadata is passed in as metadata and which one is passed in as additional-metadata \n\nAfter a couple of seconds the following will display in the terminal.\n\n```\nbuild web server\nserver started at port 8080\n```\n\nOpen up a browser and type the following into the search bar.\n\n```\nhttp://localhost:8080/\n```", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "BSD", "maintainer": "empress development team", "maintainer_email": "cantrell.kalen@gmail.com", "name": "empress", "package_url": "https://pypi.org/project/empress/", "platform": "", "project_url": "https://pypi.org/project/empress/", "project_urls": null, "release_url": "https://pypi.org/project/empress/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Phylogenetic visualizations", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Empress is still in early development and new features to add are currently being explored. If you would like to suggest\nsomething you can email <a href=\"mailto:kcantrel%40ucsd.edu\">kcantrel<span>@</span>ucsd<span>.</span>edu</a>.</p>\n<p># Installation\nPlease install the following packages in order to run Empress</p>\n<p><tt>`\nconda create <span class=\"pre\">-n</span> empress pip tornado\nsource activate empress\nconda install <span class=\"pre\">-c</span> <span class=\"pre\">conda-forge</span> <span class=\"pre\">scikit-bio</span>\npip install <span class=\"pre\">git+https://github.com/biocore/empress.git</span>\n`</tt></p>\n<p># Run\nType the following commands in the terminal for more information</p>\n<p><tt>`\nempress <span class=\"pre\">--help</span>\n`</tt></p>\n<p>A bit of preprocessing occurs after empress is ran. The following message will appear in the terminal when empress is ready\nto be used.</p>\n<p><tt>`\nbuild web server\nserver started at port 8080\n`</tt></p>\n<p>Then enter the following in a browsers search bar to launch empress.</p>\n<p><tt>`\n<span class=\"pre\">http://localhost:8080/</span>\n`</tt></p>\n<p># Input Formats\nEmpress takes in as input a Newick file for the tree and a tabular mapping file for the feature metadata.</p>\n<p>An example of a feature metadata file would look like something as follows</p>\n<p><tt>`\nID\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Genome_size\u00a0\u00a0\u00a0\u00a0 Phyla\nOTU_1001\u00a0\u00a0\u00a0\u00a0 100000\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Proteobacteria\nOTU_1002\u00a0\u00a0\u00a0\u00a0 150201\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Firmicutes\nOTU_2001\u00a0\u00a0\u00a0\u00a0 502051\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0\u00a0 Actinobacteria\n`</tt>\nThe first column of the metadata files must match the ids in the newick file. In the above example ID is what\nthe newick file would use to name the nodes..\nIf a node does not have a name in the newick file, empress will assign it \u201cyid\u201d where id is a number corresponding to its\nposition in the tree.\nNote: to make processing metadata easier, empress will remane the first column of the metadata file to Node_id. So in the\nabove example, ID will show up as Node_id in empress.</p>\n<p># To run sample data set\nTo download sample data enter the following in terminal or go into data/primates and manually download the files.</p>\n<p><tt>`\nsvn export <span class=\"pre\">https://github.com/biocore/empress.git/trunk/data</span>\n`</tt></p>\n<p>Both leaf_metadata.txt and internal_node_metadata.txt are space delimited. To make combining the metadata files easier,\nempress will rename #SequenceID will show up as Node_id in empress.</p>\n<p>Here is an exmple of how internal_node_metadata.txt if formatted.</p>\n<p><tt>`\nNode_id Intercept_effect_size\u00a0\u00a0 Phyl_Group[T.Lemur]_effect_size ...\ny0\u00a0 0.02256030930979693 <span class=\"pre\">-0.12709112380267737</span> ...\ny1\u00a0 <span class=\"pre\">-0.15122058716686135</span>\u00a0\u00a0\u00a0 0.1629544435889327 ...\n.\n.\n.\n`</tt></p>\n<p>To run empress type the following command from within the directory where you downloaded the data file</p>\n<p><tt>`\nempress <span class=\"pre\">--tree-file</span> tree.nwk <span class=\"pre\">--metadata</span> leaf_metadata.txt <span class=\"pre\">--additional-metadata</span> internal_node_metadata.txt <span class=\"pre\">--clade-field</span> Node_id <span class=\"pre\">--main-seperator</span> \" \" <span class=\"pre\">--additional-seperator</span> \" \"\n`</tt>\n\u2013clade-field is what empress will use in its \u201cclade color\u201d feature. Node_id was choosen to better demonstrate this feature.</p>\n<p>Note: It doesn\u2019t matter which metadata is passed in as metadata and which one is passed in as additional-metadata</p>\n<p>After a couple of seconds the following will display in the terminal.</p>\n<p><tt>`\nbuild web server\nserver started at port 8080\n`</tt></p>\n<p>Open up a browser and type the following into the search bar.</p>\n<p><tt>`\n<span class=\"pre\">http://localhost:8080/</span>\n`</tt></p>\n\n          </div>"}, "last_serial": 4305837, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "afe9cbed007d1ea5ab2e5a3339738afe", "sha256": "e2702dd07aa452ec647d6eb84b65edaf75ac359f2a877ca9053391195cb5b5d1"}, "downloads": -1, "filename": "empress-0.0.2.tar.gz", "has_sig": false, "md5_digest": "afe9cbed007d1ea5ab2e5a3339738afe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104133, "upload_time": "2018-09-24T19:10:16", "upload_time_iso_8601": "2018-09-24T19:10:16.720432Z", "url": "https://files.pythonhosted.org/packages/45/58/1c4f3af93703e8bc5ce47df9d0b70979a215d147427fa1083999d5554c59/empress-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "afe9cbed007d1ea5ab2e5a3339738afe", "sha256": "e2702dd07aa452ec647d6eb84b65edaf75ac359f2a877ca9053391195cb5b5d1"}, "downloads": -1, "filename": "empress-0.0.2.tar.gz", "has_sig": false, "md5_digest": "afe9cbed007d1ea5ab2e5a3339738afe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 104133, "upload_time": "2018-09-24T19:10:16", "upload_time_iso_8601": "2018-09-24T19:10:16.720432Z", "url": "https://files.pythonhosted.org/packages/45/58/1c4f3af93703e8bc5ce47df9d0b70979a215d147427fa1083999d5554c59/empress-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:32 2020"}