{"info": {"author": "Scott Rothbarth", "author_email": "srserves85@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "==============\navro-to-python\n==============\n\navro-to-python is a light tool for compiling avro schema files (.avsc) to python classes making using avro schemata easy.\n\n\n* Free software: MIT license\n* Documentation: https://avro-to-python.readthedocs.io.\n\nInstallation\n^^^^^^^^^^^^\n\nPip install (recommended)\n-------------------------\nTo install avro-to-python, run this command in your terminal:\n\n.. code-block:: console\n\n    $ pip install avro-to-python\n\nInstall From Source ()\n----------------------\n\nThe sources for avro-to-python can be downloaded source as well.\n\nClone the public repository:\n\n.. code-block:: console\n\n    $ git clone git://github.com/srserves85/avro-to-python\n\n\nOnce you have a copy of the source, you can install it with:\n\n\n.. code-block:: console\n\n    $ python setup.py install\n\nor\n\n.. code-block:: console\n\n    $ pip install -e .\n\n\nExamples\n^^^^^^^^\n\nMajority of the use of avro-to-python is assumed to be used as a cli, but you can still import and use the python classes under the hood as well.\n\nCLI (without --pip)\n-------------------\nTo use the cli, here is the available cli commands:\n\n.. code-block:: bash\n\n    avro-to-python [source] [target]\n        Options:\n            --pip TEXT              make package pip installable using this name\n            --author TEXT           author name of the pip installable package\n            --package_version TEXT  version of the pip intallable package  [default: 0.1.0]\n            --help                  Show this message and exit\n\n\nThe above will compile the avsc files and convert the to python classes found in [path_to_target_directory]\n\nAn example of doing this is the following:\n\n.. code-block:: bash\n\n    avro-to-python [path_to_source_avsc_files] [path_to_target_directory]\n\n\nIf you run the above on a valid avro avsc file, you should then be able to import them as you would in the avro idl namespace Here is an example of a single avsc record from the namespace: *name.space* and name: *RecordClass*:\n\n.. code-block:: python\n\n    from name.space import RecordClass\n\n    record = RecordClass({'foo': True, 'bar': 'true', 'baz': 10, 'food': 'CHOCOLATE'})\n\n\nCLI (with --pip)\n----------------\nYou can also choose to make compiled avro packages ***pip installable*** by adding the \"--pip\" flags. An example of this is the following:\n.. code-block:: bash\n\n    avro-to-python [path_to_source_avsc_files] [path_to_target_directory] --pip test_avro\n\nBy running this, you should be able to pip install the above package you created from the target directory you specified by running:\n\n.. code-block:: bash\n\n    pip install -e path_to_target_directory\n\nNow that you have the package installed, you can import it by it's package name and namespace. Here is the same example of the same avsc from above, only with a pip package of *test_avro*:\n\n.. code-block:: python\n\n    from test_avro.name.space import RecordClass\n\n    record = RecordClass({'foo': True, 'bar': 'true', 'baz': 10, 'food': 'CHOCOLATE'})\n\n\navro-to-python in a Script\n--------------------------\nYou can also use the reader and writer packages in avro-to-python as you would any other python package. Avro to python is split between a *reader* and *writer* classes. avro-to-python treates namespaces as acyclic trees and uses depth first search to ensure no duplication or namespace collisions on read and write. An example useage is below:\n\n.. code-block:: python\n\n    from avro_to_python.reader import AvscReader\n    from avro_to_python.writer import AvroWriter\n\n    # initialize the reader object\n    reader = AvscReader(directory='tests/avsc/records/')\n\n    # generate the acyclic tree object\n    reader.read()\n\n    # initialize the writer object\n    writer = AvroWriter(reader.file_tree, pip='test_pip')\n\n    # compile python files using 'tests/test_records as the namespace root'\n    writer.write(root_dir='tests/test_records')\n\n\n\nRoadmap\n^^^^^^^\n\nReader\n\n- [X] Create Namespace Trees on nested namespaces\n- [X] Read Record and Enum File\n- [X] Primitive types\n- [X] Array Types\n- [X] Union types\n- [X] References to other files\n- [X] Map Types\n- [ ] Logical Types (Currently just converts to primitive types)\n\nWriter\n\n- [X] Base Schema Writer\n- [X] Base Record Schema\n- [X] Base Enum Schema\n- [X] Primitive Types Schema\n- [X] Array Types Schema\n- [X] Union Types Schema\n- [X] Map Types\n- [ ] Logical Types Schema (Currently just converts to primitive types)\n- [X] Add configs to pip install package\n\nCLI\n\n- [X] Wrap Writer and Reader into one cli commmit\n- [X] Add pip install option (would include all files to pip install compiled package)\n- [ ] Add better --help documentation\n\nDocumentation\n\n- [ ] Document reader class\n- [ ] Document writer class\n- [ ] Document cli\n\n=======\nHistory\n=======\n\n0.2.2 (2020-03-22)\n^^^^^^^^^^^^^^^^^^\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/srserves85/avro-to-python", "keywords": "avro-to-python", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "avro-to-python", "package_url": "https://pypi.org/project/avro-to-python/", "platform": "", "project_url": "https://pypi.org/project/avro-to-python/", "project_urls": {"Homepage": "https://github.com/srserves85/avro-to-python"}, "release_url": "https://pypi.org/project/avro-to-python/0.2.2/", "requires_dist": ["Jinja2 (==2.10.3)", "Click (==7.0)"], "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "avro-to-python is a light tool for compiling avro schema files (.avsc) to python classes making using avro schemata easy.", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"avro-to-python\">\n<h2>avro-to-python</h2>\n<p>avro-to-python is a light tool for compiling avro schema files (.avsc) to python classes making using avro schemata easy.</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://avro-to-python.readthedocs.io\" rel=\"nofollow\">https://avro-to-python.readthedocs.io</a>.</li>\n</ul>\n<div id=\"installation\">\n<h3>Installation</h3>\n<div id=\"pip-install-recommended\">\n<h4>Pip install (recommended)</h4>\n<p>To install avro-to-python, run this command in your terminal:</p>\n<pre><span class=\"gp\">$</span> pip install avro-to-python\n</pre>\n</div>\n<div id=\"install-from-source\">\n<h4>Install From Source ()</h4>\n<p>The sources for avro-to-python can be downloaded source as well.</p>\n<p>Clone the public repository:</p>\n<pre><span class=\"gp\">$</span> git clone git://github.com/srserves85/avro-to-python\n</pre>\n<p>Once you have a copy of the source, you can install it with:</p>\n<pre><span class=\"gp\">$</span> python setup.py install\n</pre>\n<p>or</p>\n<pre><span class=\"gp\">$</span> pip install -e .\n</pre>\n</div>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Majority of the use of avro-to-python is assumed to be used as a cli, but you can still import and use the python classes under the hood as well.</p>\n<div id=\"cli-without-pip\">\n<h4>CLI (without \u2013pip)</h4>\n<p>To use the cli, here is the available cli commands:</p>\n<pre>avro-to-python <span class=\"o\">[</span>source<span class=\"o\">]</span> <span class=\"o\">[</span>target<span class=\"o\">]</span>\n    Options:\n        --pip TEXT              make package pip installable using this name\n        --author TEXT           author name of the pip installable package\n        --package_version TEXT  version of the pip intallable package  <span class=\"o\">[</span>default: <span class=\"m\">0</span>.1.0<span class=\"o\">]</span>\n        --help                  Show this message and <span class=\"nb\">exit</span>\n</pre>\n<p>The above will compile the avsc files and convert the to python classes found in [path_to_target_directory]</p>\n<p>An example of doing this is the following:</p>\n<pre>avro-to-python <span class=\"o\">[</span>path_to_source_avsc_files<span class=\"o\">]</span> <span class=\"o\">[</span>path_to_target_directory<span class=\"o\">]</span>\n</pre>\n<p>If you run the above on a valid avro avsc file, you should then be able to import them as you would in the avro idl namespace Here is an example of a single avsc record from the namespace: <em>name.space</em> and name: <em>RecordClass</em>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">name.space</span> <span class=\"kn\">import</span> <span class=\"n\">RecordClass</span>\n\n<span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"n\">RecordClass</span><span class=\"p\">({</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"s1\">'baz'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'food'</span><span class=\"p\">:</span> <span class=\"s1\">'CHOCOLATE'</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"cli-with-pip\">\n<h4>CLI (with \u2013pip)</h4>\n<p>You can also choose to make compiled avro packages <strong>*pip installable*</strong> by adding the \u201c\u2013pip\u201d flags. An example of this is the following:\n.. code-block:: bash</p>\n<blockquote>\navro-to-python [path_to_source_avsc_files] [path_to_target_directory] \u2013pip test_avro</blockquote>\n<p>By running this, you should be able to pip install the above package you created from the target directory you specified by running:</p>\n<pre>pip install -e path_to_target_directory\n</pre>\n<p>Now that you have the package installed, you can import it by it\u2019s package name and namespace. Here is the same example of the same avsc from above, only with a pip package of <em>test_avro</em>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">test_avro.name.space</span> <span class=\"kn\">import</span> <span class=\"n\">RecordClass</span>\n\n<span class=\"n\">record</span> <span class=\"o\">=</span> <span class=\"n\">RecordClass</span><span class=\"p\">({</span><span class=\"s1\">'foo'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"s1\">'bar'</span><span class=\"p\">:</span> <span class=\"s1\">'true'</span><span class=\"p\">,</span> <span class=\"s1\">'baz'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'food'</span><span class=\"p\">:</span> <span class=\"s1\">'CHOCOLATE'</span><span class=\"p\">})</span>\n</pre>\n</div>\n<div id=\"avro-to-python-in-a-script\">\n<h4>avro-to-python in a Script</h4>\n<p>You can also use the reader and writer packages in avro-to-python as you would any other python package. Avro to python is split between a <em>reader</em> and <em>writer</em> classes. avro-to-python treates namespaces as acyclic trees and uses depth first search to ensure no duplication or namespace collisions on read and write. An example useage is below:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">avro_to_python.reader</span> <span class=\"kn\">import</span> <span class=\"n\">AvscReader</span>\n<span class=\"kn\">from</span> <span class=\"nn\">avro_to_python.writer</span> <span class=\"kn\">import</span> <span class=\"n\">AvroWriter</span>\n\n<span class=\"c1\"># initialize the reader object</span>\n<span class=\"n\">reader</span> <span class=\"o\">=</span> <span class=\"n\">AvscReader</span><span class=\"p\">(</span><span class=\"n\">directory</span><span class=\"o\">=</span><span class=\"s1\">'tests/avsc/records/'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># generate the acyclic tree object</span>\n<span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># initialize the writer object</span>\n<span class=\"n\">writer</span> <span class=\"o\">=</span> <span class=\"n\">AvroWriter</span><span class=\"p\">(</span><span class=\"n\">reader</span><span class=\"o\">.</span><span class=\"n\">file_tree</span><span class=\"p\">,</span> <span class=\"n\">pip</span><span class=\"o\">=</span><span class=\"s1\">'test_pip'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># compile python files using 'tests/test_records as the namespace root'</span>\n<span class=\"n\">writer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">root_dir</span><span class=\"o\">=</span><span class=\"s1\">'tests/test_records'</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"roadmap\">\n<h3>Roadmap</h3>\n<p>Reader</p>\n<ul>\n<li>[X] Create Namespace Trees on nested namespaces</li>\n<li>[X] Read Record and Enum File</li>\n<li>[X] Primitive types</li>\n<li>[X] Array Types</li>\n<li>[X] Union types</li>\n<li>[X] References to other files</li>\n<li>[X] Map Types</li>\n<li>[ ] Logical Types (Currently just converts to primitive types)</li>\n</ul>\n<p>Writer</p>\n<ul>\n<li>[X] Base Schema Writer</li>\n<li>[X] Base Record Schema</li>\n<li>[X] Base Enum Schema</li>\n<li>[X] Primitive Types Schema</li>\n<li>[X] Array Types Schema</li>\n<li>[X] Union Types Schema</li>\n<li>[X] Map Types</li>\n<li>[ ] Logical Types Schema (Currently just converts to primitive types)</li>\n<li>[X] Add configs to pip install package</li>\n</ul>\n<p>CLI</p>\n<ul>\n<li>[X] Wrap Writer and Reader into one cli commmit</li>\n<li>[X] Add pip install option (would include all files to pip install compiled package)</li>\n<li>[ ] Add better \u2013help documentation</li>\n</ul>\n<p>Documentation</p>\n<ul>\n<li>[ ] Document reader class</li>\n<li>[ ] Document writer class</li>\n<li>[ ] Document cli</li>\n</ul>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<h2 id=\"id1\"><span class=\"section-subtitle\">0.2.2 (2020-03-22)</span></h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7010412, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "c375ba5082557f3134590ab96001da22", "sha256": "2a613d6da102e9e67b82e14b137548c099774a335a67f2a135d4b5ba9cc7bfb8"}, "downloads": -1, "filename": "avro_to_python-0.1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c375ba5082557f3134590ab96001da22", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20452, "upload_time": "2020-01-03T19:34:45", "upload_time_iso_8601": "2020-01-03T19:34:45.695489Z", "url": "https://files.pythonhosted.org/packages/05/7d/6813431cbf81ebea3364b210d7134a87d2c3e90db2ba9cdfd66d0b7bda63/avro_to_python-0.1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d76f6ab71bff82a1c692276edc98bf7b", "sha256": "881cfceb036d979cd18069d7f4e34723509787620b2de64649312e28a8da98fc"}, "downloads": -1, "filename": "avro_to_python-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d76f6ab71bff82a1c692276edc98bf7b", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 30675, "upload_time": "2020-01-03T19:34:47", "upload_time_iso_8601": "2020-01-03T19:34:47.175247Z", "url": "https://files.pythonhosted.org/packages/ce/36/8c633e2a93472697bfd02906964fe614178298a27e816c403d88d8ee12f0/avro_to_python-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "0b414361a68f77b9a8f4fe9e847e3810", "sha256": "31fbda3c75747bf57cb944c7b314cde85de7db24080806d3cffd8ac09023da05"}, "downloads": -1, "filename": "avro_to_python-0.1.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0b414361a68f77b9a8f4fe9e847e3810", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 28824, "upload_time": "2020-01-06T18:28:50", "upload_time_iso_8601": "2020-01-06T18:28:50.482952Z", "url": "https://files.pythonhosted.org/packages/a6/e3/79a25fd7312e89c1b02ae7c05c1603405317c4ecded473c74c2e9a516d2e/avro_to_python-0.1.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "805974770f300768d7dcef9e6f2b4bd5", "sha256": "925ae495c8c4e5846ad4a2669a8b466cab2f1a6337fad412a3d7a792ece8c470"}, "downloads": -1, "filename": "avro_to_python-0.1.2.tar.gz", "has_sig": false, "md5_digest": "805974770f300768d7dcef9e6f2b4bd5", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 37938, "upload_time": "2020-01-06T18:28:51", "upload_time_iso_8601": "2020-01-06T18:28:51.941795Z", "url": "https://files.pythonhosted.org/packages/93/79/fd1f1efd430733f6777ab7dfc80d9567514f304a7e275cf417e830707dea/avro_to_python-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "da67754d6a05d9740d859e45490368b4", "sha256": "1d4aff28b8b226f0b0aa5a47ea90bbec489f221fdd7aaf24217a6519d1d89049"}, "downloads": -1, "filename": "avro_to_python-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "da67754d6a05d9740d859e45490368b4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 28805, "upload_time": "2020-01-09T19:10:51", "upload_time_iso_8601": "2020-01-09T19:10:51.317380Z", "url": "https://files.pythonhosted.org/packages/e2/08/d0b06b7d44e86a193587d02a3e072bfc42ca51c1f628a7f8ff7930b1bbf4/avro_to_python-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b18278f28ceef40b5e3a92da2342da7", "sha256": "8417e68e06d4f5f7e412258954675004d9499d17eeebf37fd354496bd057d165"}, "downloads": -1, "filename": "avro_to_python-0.1.3.tar.gz", "has_sig": false, "md5_digest": "6b18278f28ceef40b5e3a92da2342da7", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 34106, "upload_time": "2020-01-09T19:10:53", "upload_time_iso_8601": "2020-01-09T19:10:53.412247Z", "url": "https://files.pythonhosted.org/packages/48/00/3fdca37902e6234df84299d1dc773be25c39d4c52f5b5ae8662a0c140123/avro_to_python-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "59bf4c5a78689d233580e11228293270", "sha256": "9bb5dbfea2bee60672fb6dc15d77db00655fd7f0573ba90c6d4346af0a65b6d4"}, "downloads": -1, "filename": "avro_to_python-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "59bf4c5a78689d233580e11228293270", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32679, "upload_time": "2020-02-06T22:58:26", "upload_time_iso_8601": "2020-02-06T22:58:26.044696Z", "url": "https://files.pythonhosted.org/packages/4b/93/00181c6f6c7b7b1d6801068a261682dadff7102f67c66409b5bc80887a18/avro_to_python-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ba222fc7ad0ab38cc45f42a64e4aab01", "sha256": "376f43510a5578819ca651b33156656bcc689de3a72a552ad17cfc17838e6265"}, "downloads": -1, "filename": "avro_to_python-0.1.4.tar.gz", "has_sig": false, "md5_digest": "ba222fc7ad0ab38cc45f42a64e4aab01", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 36904, "upload_time": "2020-02-06T22:58:27", "upload_time_iso_8601": "2020-02-06T22:58:27.226227Z", "url": "https://files.pythonhosted.org/packages/d4/44/d73d936616f27c367e0c8cc0f6cd7cdeca3728583a4dcfc007ee36a60c37/avro_to_python-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "7b642c20c96e05165cee23e58047fd31", "sha256": "d2eb0de8cd51f2f7024c43960b246c4d607722540f689049dd77fcb8a0198855"}, "downloads": -1, "filename": "avro_to_python-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7b642c20c96e05165cee23e58047fd31", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32683, "upload_time": "2020-02-21T22:25:24", "upload_time_iso_8601": "2020-02-21T22:25:24.256658Z", "url": "https://files.pythonhosted.org/packages/07/84/90be560cd7c2a928cdc5f6d73cbffbf7ea64173474036ad18c12d938ea12/avro_to_python-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "466993e911b4a17fb81fbc9181c1ccf1", "sha256": "62120e5cf28af6ae6a5e84bb91ace97b348dc538233f5bf59b12f3aa40bf822c"}, "downloads": -1, "filename": "avro_to_python-0.1.5.tar.gz", "has_sig": false, "md5_digest": "466993e911b4a17fb81fbc9181c1ccf1", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 36993, "upload_time": "2020-02-21T22:25:25", "upload_time_iso_8601": "2020-02-21T22:25:25.632817Z", "url": "https://files.pythonhosted.org/packages/b8/5c/cba04d57d611278eae4d35a580059f2ba814b601e9fb58d5f4638220318d/avro_to_python-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "af9f67356ffbe6fe2d16ca23788dfdf2", "sha256": "a43ee442058cac88942a3288a674df7af93553331a96e8b7bf3f07646389962c"}, "downloads": -1, "filename": "avro_to_python-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "af9f67356ffbe6fe2d16ca23788dfdf2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32884, "upload_time": "2020-03-20T22:22:16", "upload_time_iso_8601": "2020-03-20T22:22:16.601350Z", "url": "https://files.pythonhosted.org/packages/37/5c/e22e7736be40afbb153bd92b8b6f5066de83e4a101985c206b4307469d00/avro_to_python-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3e1a9df57329e45653d67ec92541cfe3", "sha256": "c5cc9cf0bd77403cc3bc5227805d53eaf0b0e8a8ce2626b4367598d8785c85a9"}, "downloads": -1, "filename": "avro_to_python-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3e1a9df57329e45653d67ec92541cfe3", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 37578, "upload_time": "2020-03-20T22:22:17", "upload_time_iso_8601": "2020-03-20T22:22:17.859243Z", "url": "https://files.pythonhosted.org/packages/0d/27/79eea9c1eddd40a8983cac6d94c50a5b58b9f34b090d061448790e140940/avro_to_python-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "f366f231b2c2ec67ec5ad62a28a49173", "sha256": "6fdd135a281328243ce92a89b2e8e8632dc563c76bd836954cd87fe2ce3e7486"}, "downloads": -1, "filename": "avro_to_python-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f366f231b2c2ec67ec5ad62a28a49173", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 32993, "upload_time": "2020-03-23T01:23:13", "upload_time_iso_8601": "2020-03-23T01:23:13.312282Z", "url": "https://files.pythonhosted.org/packages/f0/7d/1bb25c1649e7267df538dc588f4d9c47b960ab931573db24d9ff33587c73/avro_to_python-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "db6d00940127817f11df14ed1314203c", "sha256": "0fb9ce6450b97d20c54ab7242bccb1441cfeb527ab26baafdf68d77a26496e7f"}, "downloads": -1, "filename": "avro_to_python-0.1.7.tar.gz", "has_sig": false, "md5_digest": "db6d00940127817f11df14ed1314203c", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 37702, "upload_time": "2020-03-23T01:23:14", "upload_time_iso_8601": "2020-03-23T01:23:14.457578Z", "url": "https://files.pythonhosted.org/packages/67/bd/483f872218b7401fadcac76c0ef9d92d400aa698ffbf3f192f34baf7a2ad/avro_to_python-0.1.7.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "17455876b061713f09921b6a3f99497f", "sha256": "123b6635d084fd69ea2116ad1d4284e6bc58144d446a40192fa66ea67589636b"}, "downloads": -1, "filename": "avro_to_python-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "17455876b061713f09921b6a3f99497f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 33303, "upload_time": "2020-04-13T14:55:00", "upload_time_iso_8601": "2020-04-13T14:55:00.752891Z", "url": "https://files.pythonhosted.org/packages/fc/86/620272a069d8a4691b868e6af866c504cc09cda375f8399262b602445d10/avro_to_python-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab5ea68737a91de4603d26c3a173a6a5", "sha256": "f3056edca6a315cdadd673ab64e3bb5eaca31b0fab02a31f9f0bc8bf7778e08c"}, "downloads": -1, "filename": "avro_to_python-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ab5ea68737a91de4603d26c3a173a6a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 37867, "upload_time": "2020-04-13T14:55:02", "upload_time_iso_8601": "2020-04-13T14:55:02.236731Z", "url": "https://files.pythonhosted.org/packages/c2/01/7b4b5dcdbdba571e32e908930ff6b3a42f7cd1a3e11f88c1031ce1c97c98/avro_to_python-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "17455876b061713f09921b6a3f99497f", "sha256": "123b6635d084fd69ea2116ad1d4284e6bc58144d446a40192fa66ea67589636b"}, "downloads": -1, "filename": "avro_to_python-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "17455876b061713f09921b6a3f99497f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 33303, "upload_time": "2020-04-13T14:55:00", "upload_time_iso_8601": "2020-04-13T14:55:00.752891Z", "url": "https://files.pythonhosted.org/packages/fc/86/620272a069d8a4691b868e6af866c504cc09cda375f8399262b602445d10/avro_to_python-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ab5ea68737a91de4603d26c3a173a6a5", "sha256": "f3056edca6a315cdadd673ab64e3bb5eaca31b0fab02a31f9f0bc8bf7778e08c"}, "downloads": -1, "filename": "avro_to_python-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ab5ea68737a91de4603d26c3a173a6a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 37867, "upload_time": "2020-04-13T14:55:02", "upload_time_iso_8601": "2020-04-13T14:55:02.236731Z", "url": "https://files.pythonhosted.org/packages/c2/01/7b4b5dcdbdba571e32e908930ff6b3a42f7cd1a3e11f88c1031ce1c97c98/avro_to_python-0.2.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:02 2020"}