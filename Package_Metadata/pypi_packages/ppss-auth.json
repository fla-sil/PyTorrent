{"info": {"author": "pdepmcp", "author_email": "d.cariboni@pingpongstars.it", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Framework :: Pyramid", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP :: Session"], "description": "This package aims to give and easy pluggable module to provide authentication and user maintennance in a Pyramid web application.\nIt relies the Pyramid+SQLAlchemy+Mako stack. Implementation for other template languages is on the roadmap.\n\n\n# Installation and setup\n\n## Install the package\nInstall the package with:\n```sh\n  pip install ppss_auth\n```\nor put ppss_auth in your app dependencies (setup.py, in the install_requires list of packages)\n\n\n\nTo activate the package, in your main *\\_\\_init\\_\\_.py* file, inside the main function, add this line: \n```python\n  config.include('ppss_auth')\n```\n\nin your models include the ppss_auth's models with this line:\n```python\nfrom ppss_auth.models import *\n```\n\n\n\n## Configure the database\nThis can be a zero-db-conf module:\nrun the app with _ppss_auth.initdb_ set to True (that is the default for the params, so you can even leave it blank: see configuration, below). You are done with this, unless you need more in-depth initialization (follow reading)\n\n\n### You want to do it yourself\n\nTo init the Tables manually, in the initialization script (usually in *scripts/intializedb.py*), add this row:\n```python\n  from ppss_auth import (models as ppssmodels)\n```\n\nand while creating the default data (in the \"with transaction.manager\" block of code), use something like:\n```python\n  ppssmodels.initdb(dbsession,createdefault=False)\n```\nThis creates the tables and, if *createdefault* evaulates to True, it create a default admin/admin user with the admin permission. \nPlease change the password to avoid secuirity issues.\n\n\nYou can create some data as well. Refer to [models] section, below, for more info.\n\n## Requirements\nWhen a user login, *essionauthpolicy* is used to store her informations (userid and user groups). \n\n\n## ini file configuration \nppss_auth use these info from the ini file:\n\n*default user*\n- ppss_auth.adminname - the name of a sueruser. Deafult to \"admin\"\n- ppss_auth.adminpass - the corresponding password. If not provided the admin is not allowed to log in (with the ini credentials. It may exist in database)\n\n*db stuff*\n- ppss_auth.initdb [True] - true/false value, tells the lib to init db automatically on first run.\n\n\n*routes*\n- ppss_auth.login_url [/login] - url for login.\n- ppss_auth.logout_url [/logout]- url for logout.\n\n*where to land after succesfull login/logout*\n- ppss_auth.post_login_follow - try to redirect the browser back to where it came from after successful login (use true case insensitive to activate it). It's useful if combined with the forbidden pattern\n- ppss_auth.post_login_route [home] - name of the route where to send the browser after user logged in. Ignored if ppss_auth.post_login_follow is set to true AND there is a referer to go to.\n- ppss_auth.post_logout_route - name of the route where to send the browser after log out. Defaults to home\n\n*templates stuff*\nYou can override all this values and even provide a mako-free environment. This can be a litlle tricky, but there is no hard-coded dependency to mako, just the defaults.\n\n- ppss_auth.logintemplate - name of the login template. It defaults to the internal template: \"ppss_auth:/templates/login.mako\"\n- ppss_auth.changepasswordtemplate - name of the change password template. Defaults to: ppss_auth:/templates/change.mako\n- ppss_auth.modifyusertemplate - Defaults to: ppss_auth:/templates/modifyuser.mako\n- ppss_auth.listusertemplate - Defaults to: ppss_auth:/templates/listuser.mako\n- ppss_auth.logintemplateinherit - Defaults to: ppss_auth:/templates/layout.mako\n\n\n*look and feel*\n\n- ppss_auth.bootstrapversion - Should 3 or 4, accordind to the the version of bootstrap that the hosting site uses. Defaults to 4\n\n# Things to know (devs only)\n\n## database\nThi package provide the creation and usage of 3 main tables (and the other tables required for ER consistency):\n- ppss_user - containing basic information about the users (username, hashed password and related data )\n- ppss_group - user groups to allow for easier handling of user groups and permissions\n- ppss_permission - a list of permissions (just an id and a name)\n\n## models\n\n### PPSsuser\n\nThis represents the user of your application.\nShe has a _username_, a _password_ and relation to her _groups_. She also has a _enabled_ property and some timestamps (creation times, and similar times).\n\nUse the _setPassword(password)_ method on PPSsuser instances to change the password, providing the new password.\n\n_todict(self)_ is a commodity method to get a dict of the main properties.\n\n### PPSsgroup\n\nThis class represnts the groups of your users. It's a many-to-many relation: each user can belong to many groups, and each group can gather many users.\nOther than a _name_ and the _enabled_ flag (integer with 1 for enabled), its main user is the many-to-many relation to permissions. This means that all users in the same group share (at least) all the permissions given to the group.\n\n### PPSspermission\n\nThis class represents the permissions of the application. You can create new permissions and link them to group. You can use those permissions in the _permission_ attribute of the _view\\_config_ decorator to restrict usage of some methods using ACL, or you can check it whenever needed.\n\n\n\nThis package aims to give and easy pluggable module to provide authentication and user maintennance in a Pyramid web application.\nIt relies the Pyramid+SQLAlchemy+Mako stack. Implementation for other template languages is on the roadmap.\n\n\n# Installation and setup\n\n## Install the package\nInstall the package with:\n```sh\n  pip install ppss_auth\n```\nor put ppss_auth in your app dependencies (setup.py, in the install_requires list of packages)\n\n\n\nTo activate the package, in your main *\\_\\_init\\_\\_.py* file, inside the main function, add this line: \n```python\n  config.include('ppss_auth')\n```\n\nin your models include the ppss_auth's models with this line:\n```python\nfrom ppss_auth.models import *\n```\n\n\n\n## Configure the database\nThis can be a zero-db-conf module:\nrun the app with _ppss_auth.initdb_ set to True (that is the default for the params, so you can even leave it blank: see configuration, below). You are done with this, unless you need more in-depth initialization (follow reading)\n\n\n### You want to do it yourself\n\nTo init the Tables manually, in the initialization script (usually in *scripts/intializedb.py*), add this row:\n```python\n  from ppss_auth import (models as ppssmodels)\n```\n\nand while creating the default data (in the \"with transaction.manager\" block of code), use something like:\n```python\n  ppssmodels.initdb(dbsession,createdefault=False)\n```\nThis creates the tables and, if *createdefault* evaulates to True, it create a default admin/admin user with the admin permission. \nPlease change the password to avoid secuirity issues.\n\n\nYou can create some data as well. Refer to [models] section, below, for more info.\n\n## Requirements\nWhen a user login, *essionauthpolicy* is used to store her informations (userid and user groups). \n\n\n## ini file configuration \nppss_auth use these info from the ini file:\n\n*default user*\n- ppss_auth.adminname - the name of a sueruser. Deafult to \"admin\"\n- ppss_auth.adminpass - the corresponding password. If not provided the admin is not allowed to log in (with the ini credentials. It may exist in database)\n\n*db stuff*\n- ppss_auth.initdb [True] - true/false value, tells the lib to init db automatically on first run.\n\n\n*routes*\n- ppss_auth.login_url [/login] - url for login.\n- ppss_auth.logout_url [/logout]- url for logout.\n\n*where to land after succesfull login/logout*\n- ppss_auth.post_login_follow - try to redirect the browser back to where it came from after successful login (use true case insensitive to activate it). It's useful if combined with the forbidden pattern\n- ppss_auth.post_login_route [home] - name of the route where to send the browser after user logged in. Ignored if ppss_auth.post_login_follow is set to true AND there is a referer to go to.\n- ppss_auth.post_logout_route - name of the route where to send the browser after log out. Defaults to home\n\n*templates stuff*\nYou can override all this values and even provide a mako-free environment. This can be a litlle tricky, but there is no hard-coded dependency to mako, just the defaults.\n\n- ppss_auth.logintemplate - name of the login template. It defaults to the internal template: \"ppss_auth:/templates/login.mako\"\n- ppss_auth.changepasswordtemplate - name of the change password template. Defaults to: ppss_auth:/templates/change.mako\n- ppss_auth.modifyusertemplate - Defaults to: ppss_auth:/templates/modifyuser.mako\n- ppss_auth.listusertemplate - Defaults to: ppss_auth:/templates/listuser.mako\n- ppss_auth.logintemplateinherit - Defaults to: ppss_auth:/templates/layout.mako\n\n\n*look and feel*\n\n- ppss_auth.bootstrapversion - Should 3 or 4, accordind to the the version of bootstrap that the hosting site uses. Defaults to 4\n\n# Things to know (devs only)\n\n## database\nThi package provide the creation and usage of 3 main tables (and the other tables required for ER consistency):\n- ppss_user - containing basic information about the users (username, hashed password and related data )\n- ppss_group - user groups to allow for easier handling of user groups and permissions\n- ppss_permission - a list of permissions (just an id and a name)\n\n## models\n\n### PPSsuser\n\nThis represents the user of your application.\nShe has a _username_, a _password_ and relation to her _groups_. She also has a _enabled_ property and some timestamps (creation times, and similar times).\n\nUse the _setPassword(password)_ method on PPSsuser instances to change the password, providing the new password.\n\n_todict(self)_ is a commodity method to get a dict of the main properties.\n\n### PPSsgroup\n\nThis class represnts the groups of your users. It's a many-to-many relation: each user can belong to many groups, and each group can gather many users.\nOther than a _name_ and the _enabled_ flag (integer with 1 for enabled), its main user is the many-to-many relation to permissions. This means that all users in the same group share (at least) all the permissions given to the group.\n\n### PPSspermission\n\nThis class represents the permissions of the application. You can create new permissions and link them to group. You can use those permissions in the _permission_ attribute of the _view\\_config_ decorator to restrict usage of some methods using ACL, or you can check it whenever needed.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.pingpongstars.it", "keywords": "pyramid module authentication accelerator", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ppss-auth", "package_url": "https://pypi.org/project/ppss-auth/", "platform": "", "project_url": "https://pypi.org/project/ppss-auth/", "project_urls": {"Homepage": "http://www.pingpongstars.it"}, "release_url": "https://pypi.org/project/ppss-auth/0.7.4.1/", "requires_dist": null, "requires_python": ">=2.7", "summary": "simple auth scheme for pyramid, based on Mako template and sqlalchemy backend", "version": "0.7.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package aims to give and easy pluggable module to provide authentication and user maintennance in a Pyramid web application.\nIt relies the Pyramid+SQLAlchemy+Mako stack. Implementation for other template languages is on the roadmap.</p>\n<h1>Installation and setup</h1>\n<h2>Install the package</h2>\n<p>Install the package with:</p>\n<pre>  pip install ppss_auth\n</pre>\n<p>or put ppss_auth in your app dependencies (setup.py, in the install_requires list of packages)</p>\n<p>To activate the package, in your main <em>__init__.py</em> file, inside the main function, add this line:</p>\n<pre>  <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'ppss_auth'</span><span class=\"p\">)</span>\n</pre>\n<p>in your models include the ppss_auth's models with this line:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ppss_auth.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<h2>Configure the database</h2>\n<p>This can be a zero-db-conf module:\nrun the app with <em>ppss_auth.initdb</em> set to True (that is the default for the params, so you can even leave it blank: see configuration, below). You are done with this, unless you need more in-depth initialization (follow reading)</p>\n<h3>You want to do it yourself</h3>\n<p>To init the Tables manually, in the initialization script (usually in <em>scripts/intializedb.py</em>), add this row:</p>\n<pre>  <span class=\"kn\">from</span> <span class=\"nn\">ppss_auth</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">models</span> <span class=\"k\">as</span> <span class=\"n\">ppssmodels</span><span class=\"p\">)</span>\n</pre>\n<p>and while creating the default data (in the \"with transaction.manager\" block of code), use something like:</p>\n<pre>  <span class=\"n\">ppssmodels</span><span class=\"o\">.</span><span class=\"n\">initdb</span><span class=\"p\">(</span><span class=\"n\">dbsession</span><span class=\"p\">,</span><span class=\"n\">createdefault</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>This creates the tables and, if <em>createdefault</em> evaulates to True, it create a default admin/admin user with the admin permission.\nPlease change the password to avoid secuirity issues.</p>\n<p>You can create some data as well. Refer to [models] section, below, for more info.</p>\n<h2>Requirements</h2>\n<p>When a user login, <em>essionauthpolicy</em> is used to store her informations (userid and user groups).</p>\n<h2>ini file configuration</h2>\n<p>ppss_auth use these info from the ini file:</p>\n<p><em>default user</em></p>\n<ul>\n<li>ppss_auth.adminname - the name of a sueruser. Deafult to \"admin\"</li>\n<li>ppss_auth.adminpass - the corresponding password. If not provided the admin is not allowed to log in (with the ini credentials. It may exist in database)</li>\n</ul>\n<p><em>db stuff</em></p>\n<ul>\n<li>ppss_auth.initdb [True] - true/false value, tells the lib to init db automatically on first run.</li>\n</ul>\n<p><em>routes</em></p>\n<ul>\n<li>ppss_auth.login_url [/login] - url for login.</li>\n<li>ppss_auth.logout_url [/logout]- url for logout.</li>\n</ul>\n<p><em>where to land after succesfull login/logout</em></p>\n<ul>\n<li>ppss_auth.post_login_follow - try to redirect the browser back to where it came from after successful login (use true case insensitive to activate it). It's useful if combined with the forbidden pattern</li>\n<li>ppss_auth.post_login_route [home] - name of the route where to send the browser after user logged in. Ignored if ppss_auth.post_login_follow is set to true AND there is a referer to go to.</li>\n<li>ppss_auth.post_logout_route - name of the route where to send the browser after log out. Defaults to home</li>\n</ul>\n<p><em>templates stuff</em>\nYou can override all this values and even provide a mako-free environment. This can be a litlle tricky, but there is no hard-coded dependency to mako, just the defaults.</p>\n<ul>\n<li>ppss_auth.logintemplate - name of the login template. It defaults to the internal template: \"ppss_auth:/templates/login.mako\"</li>\n<li>ppss_auth.changepasswordtemplate - name of the change password template. Defaults to: ppss_auth:/templates/change.mako</li>\n<li>ppss_auth.modifyusertemplate - Defaults to: ppss_auth:/templates/modifyuser.mako</li>\n<li>ppss_auth.listusertemplate - Defaults to: ppss_auth:/templates/listuser.mako</li>\n<li>ppss_auth.logintemplateinherit - Defaults to: ppss_auth:/templates/layout.mako</li>\n</ul>\n<p><em>look and feel</em></p>\n<ul>\n<li>ppss_auth.bootstrapversion - Should 3 or 4, accordind to the the version of bootstrap that the hosting site uses. Defaults to 4</li>\n</ul>\n<h1>Things to know (devs only)</h1>\n<h2>database</h2>\n<p>Thi package provide the creation and usage of 3 main tables (and the other tables required for ER consistency):</p>\n<ul>\n<li>ppss_user - containing basic information about the users (username, hashed password and related data )</li>\n<li>ppss_group - user groups to allow for easier handling of user groups and permissions</li>\n<li>ppss_permission - a list of permissions (just an id and a name)</li>\n</ul>\n<h2>models</h2>\n<h3>PPSsuser</h3>\n<p>This represents the user of your application.\nShe has a <em>username</em>, a <em>password</em> and relation to her <em>groups</em>. She also has a <em>enabled</em> property and some timestamps (creation times, and similar times).</p>\n<p>Use the <em>setPassword(password)</em> method on PPSsuser instances to change the password, providing the new password.</p>\n<p><em>todict(self)</em> is a commodity method to get a dict of the main properties.</p>\n<h3>PPSsgroup</h3>\n<p>This class represnts the groups of your users. It's a many-to-many relation: each user can belong to many groups, and each group can gather many users.\nOther than a <em>name</em> and the <em>enabled</em> flag (integer with 1 for enabled), its main user is the many-to-many relation to permissions. This means that all users in the same group share (at least) all the permissions given to the group.</p>\n<h3>PPSspermission</h3>\n<p>This class represents the permissions of the application. You can create new permissions and link them to group. You can use those permissions in the <em>permission</em> attribute of the <em>view_config</em> decorator to restrict usage of some methods using ACL, or you can check it whenever needed.</p>\n<p>This package aims to give and easy pluggable module to provide authentication and user maintennance in a Pyramid web application.\nIt relies the Pyramid+SQLAlchemy+Mako stack. Implementation for other template languages is on the roadmap.</p>\n<h1>Installation and setup</h1>\n<h2>Install the package</h2>\n<p>Install the package with:</p>\n<pre>  pip install ppss_auth\n</pre>\n<p>or put ppss_auth in your app dependencies (setup.py, in the install_requires list of packages)</p>\n<p>To activate the package, in your main <em>__init__.py</em> file, inside the main function, add this line:</p>\n<pre>  <span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'ppss_auth'</span><span class=\"p\">)</span>\n</pre>\n<p>in your models include the ppss_auth's models with this line:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ppss_auth.models</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n</pre>\n<h2>Configure the database</h2>\n<p>This can be a zero-db-conf module:\nrun the app with <em>ppss_auth.initdb</em> set to True (that is the default for the params, so you can even leave it blank: see configuration, below). You are done with this, unless you need more in-depth initialization (follow reading)</p>\n<h3>You want to do it yourself</h3>\n<p>To init the Tables manually, in the initialization script (usually in <em>scripts/intializedb.py</em>), add this row:</p>\n<pre>  <span class=\"kn\">from</span> <span class=\"nn\">ppss_auth</span> <span class=\"kn\">import</span> <span class=\"p\">(</span><span class=\"n\">models</span> <span class=\"k\">as</span> <span class=\"n\">ppssmodels</span><span class=\"p\">)</span>\n</pre>\n<p>and while creating the default data (in the \"with transaction.manager\" block of code), use something like:</p>\n<pre>  <span class=\"n\">ppssmodels</span><span class=\"o\">.</span><span class=\"n\">initdb</span><span class=\"p\">(</span><span class=\"n\">dbsession</span><span class=\"p\">,</span><span class=\"n\">createdefault</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>This creates the tables and, if <em>createdefault</em> evaulates to True, it create a default admin/admin user with the admin permission.\nPlease change the password to avoid secuirity issues.</p>\n<p>You can create some data as well. Refer to [models] section, below, for more info.</p>\n<h2>Requirements</h2>\n<p>When a user login, <em>essionauthpolicy</em> is used to store her informations (userid and user groups).</p>\n<h2>ini file configuration</h2>\n<p>ppss_auth use these info from the ini file:</p>\n<p><em>default user</em></p>\n<ul>\n<li>ppss_auth.adminname - the name of a sueruser. Deafult to \"admin\"</li>\n<li>ppss_auth.adminpass - the corresponding password. If not provided the admin is not allowed to log in (with the ini credentials. It may exist in database)</li>\n</ul>\n<p><em>db stuff</em></p>\n<ul>\n<li>ppss_auth.initdb [True] - true/false value, tells the lib to init db automatically on first run.</li>\n</ul>\n<p><em>routes</em></p>\n<ul>\n<li>ppss_auth.login_url [/login] - url for login.</li>\n<li>ppss_auth.logout_url [/logout]- url for logout.</li>\n</ul>\n<p><em>where to land after succesfull login/logout</em></p>\n<ul>\n<li>ppss_auth.post_login_follow - try to redirect the browser back to where it came from after successful login (use true case insensitive to activate it). It's useful if combined with the forbidden pattern</li>\n<li>ppss_auth.post_login_route [home] - name of the route where to send the browser after user logged in. Ignored if ppss_auth.post_login_follow is set to true AND there is a referer to go to.</li>\n<li>ppss_auth.post_logout_route - name of the route where to send the browser after log out. Defaults to home</li>\n</ul>\n<p><em>templates stuff</em>\nYou can override all this values and even provide a mako-free environment. This can be a litlle tricky, but there is no hard-coded dependency to mako, just the defaults.</p>\n<ul>\n<li>ppss_auth.logintemplate - name of the login template. It defaults to the internal template: \"ppss_auth:/templates/login.mako\"</li>\n<li>ppss_auth.changepasswordtemplate - name of the change password template. Defaults to: ppss_auth:/templates/change.mako</li>\n<li>ppss_auth.modifyusertemplate - Defaults to: ppss_auth:/templates/modifyuser.mako</li>\n<li>ppss_auth.listusertemplate - Defaults to: ppss_auth:/templates/listuser.mako</li>\n<li>ppss_auth.logintemplateinherit - Defaults to: ppss_auth:/templates/layout.mako</li>\n</ul>\n<p><em>look and feel</em></p>\n<ul>\n<li>ppss_auth.bootstrapversion - Should 3 or 4, accordind to the the version of bootstrap that the hosting site uses. Defaults to 4</li>\n</ul>\n<h1>Things to know (devs only)</h1>\n<h2>database</h2>\n<p>Thi package provide the creation and usage of 3 main tables (and the other tables required for ER consistency):</p>\n<ul>\n<li>ppss_user - containing basic information about the users (username, hashed password and related data )</li>\n<li>ppss_group - user groups to allow for easier handling of user groups and permissions</li>\n<li>ppss_permission - a list of permissions (just an id and a name)</li>\n</ul>\n<h2>models</h2>\n<h3>PPSsuser</h3>\n<p>This represents the user of your application.\nShe has a <em>username</em>, a <em>password</em> and relation to her <em>groups</em>. She also has a <em>enabled</em> property and some timestamps (creation times, and similar times).</p>\n<p>Use the <em>setPassword(password)</em> method on PPSsuser instances to change the password, providing the new password.</p>\n<p><em>todict(self)</em> is a commodity method to get a dict of the main properties.</p>\n<h3>PPSsgroup</h3>\n<p>This class represnts the groups of your users. It's a many-to-many relation: each user can belong to many groups, and each group can gather many users.\nOther than a <em>name</em> and the <em>enabled</em> flag (integer with 1 for enabled), its main user is the many-to-many relation to permissions. This means that all users in the same group share (at least) all the permissions given to the group.</p>\n<h3>PPSspermission</h3>\n<p>This class represents the permissions of the application. You can create new permissions and link them to group. You can use those permissions in the <em>permission</em> attribute of the <em>view_config</em> decorator to restrict usage of some methods using ACL, or you can check it whenever needed.</p>\n\n          </div>"}, "last_serial": 6879833, "releases": {"0.2.8": [{"comment_text": "", "digests": {"md5": "73a8b7f94e8d18d8ee686ca5a4837c10", "sha256": "447e245e5a34cd9bf8767d6e8d55e4a131574f9c5358c72b6b4c389a06a8b4fc"}, "downloads": -1, "filename": "ppss_auth-0.2.8.tar.gz", "has_sig": false, "md5_digest": "73a8b7f94e8d18d8ee686ca5a4837c10", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2699, "upload_time": "2017-10-30T00:02:13", "upload_time_iso_8601": "2017-10-30T00:02:13.678479Z", "url": "https://files.pythonhosted.org/packages/62/b2/3b4db7345a67c5519440440dd65315c4601329a0a01ff40817cf45a1052d/ppss_auth-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "f7ee3462e313272b61641a472eccbece", "sha256": "4f01752bf843fe0cd46cc17bb70e1ffd4046e3ea9d3cb00efdf50068f13d19e6"}, "downloads": -1, "filename": "ppss_auth-0.2.9.tar.gz", "has_sig": false, "md5_digest": "f7ee3462e313272b61641a472eccbece", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3041, "upload_time": "2017-10-30T00:42:04", "upload_time_iso_8601": "2017-10-30T00:42:04.010479Z", "url": "https://files.pythonhosted.org/packages/d4/bb/22435a2ab4552e6f06e833101bdeef355f540f9683f63c4ba9ba19fde078/ppss_auth-0.2.9.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "f21b64b7c7b0393d3ca328f3617093e2", "sha256": "23ed2c124b6046e58131c19d2ce7992a6f52996f0d6a5b538695c5fbdbd56cca"}, "downloads": -1, "filename": "ppss_auth-0.4.tar.gz", "has_sig": false, "md5_digest": "f21b64b7c7b0393d3ca328f3617093e2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4856, "upload_time": "2017-12-16T16:26:36", "upload_time_iso_8601": "2017-12-16T16:26:36.154939Z", "url": "https://files.pythonhosted.org/packages/fa/96/a670d8d17a88e1c462c8d7a8fcde7ee9b5dee4fbe335cb8bef6e46f60f8a/ppss_auth-0.4.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "e77bce5e25bad65f81772accc2669310", "sha256": "7c54c7df2b8c021bcb58d034816a4f7dc94543a2647b55b3758f79ffe7f0d5ab"}, "downloads": -1, "filename": "ppss_auth-0.4.1.tar.gz", "has_sig": false, "md5_digest": "e77bce5e25bad65f81772accc2669310", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5051, "upload_time": "2017-12-16T16:35:08", "upload_time_iso_8601": "2017-12-16T16:35:08.022045Z", "url": "https://files.pythonhosted.org/packages/89/21/a40bca924197032ff7f2286fa0b5d94f9eeff1df45909a24c7716d96000f/ppss_auth-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "448cd8dde3dcaebc9723e29730f12023", "sha256": "6b7f22db7dfcd013100b69f513aaf03ab31b0311fcb585b1b733a42cac21a132"}, "downloads": -1, "filename": "ppss_auth-0.5.0.tar.gz", "has_sig": false, "md5_digest": "448cd8dde3dcaebc9723e29730f12023", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5237, "upload_time": "2018-05-11T17:07:05", "upload_time_iso_8601": "2018-05-11T17:07:05.074299Z", "url": "https://files.pythonhosted.org/packages/1a/58/417678fe4aaae7136e145afa00566275b1d588fe89fc66bbb83fb44eacd9/ppss_auth-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "31aac61aa7157a1a6cf6b4241fbf9231", "sha256": "addd9a3e5fc381a85409e0bea866861a47f176af16a83df4de39599268845391"}, "downloads": -1, "filename": "ppss_auth-0.5.1.tar.gz", "has_sig": false, "md5_digest": "31aac61aa7157a1a6cf6b4241fbf9231", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6971, "upload_time": "2018-05-15T12:08:51", "upload_time_iso_8601": "2018-05-15T12:08:51.489141Z", "url": "https://files.pythonhosted.org/packages/50/20/e53e37f4d003f8dedb6beaeeb09d73cfe54380ed9b91bf731b050474488c/ppss_auth-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "c674a76225bd40b6e023781984470032", "sha256": "ee32377c94632e5e6744409b3901a5818cbf9e5aa63e34626040cc5a3d0a63ff"}, "downloads": -1, "filename": "ppss_auth-0.5.2.tar.gz", "has_sig": false, "md5_digest": "c674a76225bd40b6e023781984470032", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8844, "upload_time": "2018-05-16T15:28:04", "upload_time_iso_8601": "2018-05-16T15:28:04.971049Z", "url": "https://files.pythonhosted.org/packages/11/0c/6665b8163532e5d43706fd311f49cfe56978a42e7f423b7cdc62aab665e6/ppss_auth-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "81d7b076301dd913f1e245703ec7120e", "sha256": "d953efe87c625ec0f81d58075c70bed0710a0c33c2f90ded55a74565767a44a3"}, "downloads": -1, "filename": "ppss_auth-0.5.3.tar.gz", "has_sig": false, "md5_digest": "81d7b076301dd913f1e245703ec7120e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8926, "upload_time": "2018-05-16T17:16:03", "upload_time_iso_8601": "2018-05-16T17:16:03.036354Z", "url": "https://files.pythonhosted.org/packages/d1/57/4bda86bda89b29509e03d4ccb11cd2b87493420f5eb64bfa41cefc256767/ppss_auth-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "f22dbd6721180d813d219c5f045b58f6", "sha256": "5672cc1d9460d7467fb9d776c420a4429a4c9102059e0eb3b7d9b6bfc09dd590"}, "downloads": -1, "filename": "ppss_auth-0.5.4.tar.gz", "has_sig": false, "md5_digest": "f22dbd6721180d813d219c5f045b58f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8749, "upload_time": "2018-06-13T12:32:32", "upload_time_iso_8601": "2018-06-13T12:32:32.340003Z", "url": "https://files.pythonhosted.org/packages/c4/41/0fadf54e91efef7097052045e0f7632be29c0b569b1a98a6ff91e7b69f3f/ppss_auth-0.5.4.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "db164f9098324be726a81dd902e05f2f", "sha256": "bfc65a09a7fab12272f13ca5f12cfbbda797b3c4b753dd1479df474337ab9715"}, "downloads": -1, "filename": "ppss_auth-0.6.0.tar.gz", "has_sig": false, "md5_digest": "db164f9098324be726a81dd902e05f2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11843, "upload_time": "2018-09-25T14:32:22", "upload_time_iso_8601": "2018-09-25T14:32:22.639885Z", "url": "https://files.pythonhosted.org/packages/29/b9/e27951cca4b5c73f915c9fca2f841537aa32e90939c0cbaa13900a1a9c5e/ppss_auth-0.6.0.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "3b7f579972d9efbc5b953fb09f8745a4", "sha256": "4b02ed025f9bcae831a8cced42f1716d2cb96575abb823061d38e2d8928404ea"}, "downloads": -1, "filename": "ppss_auth-0.6.2.tar.gz", "has_sig": false, "md5_digest": "3b7f579972d9efbc5b953fb09f8745a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14665, "upload_time": "2019-03-20T14:38:22", "upload_time_iso_8601": "2019-03-20T14:38:22.402828Z", "url": "https://files.pythonhosted.org/packages/58/df/f8ed614420eb95bd69e3e9500fcff9bc1e480af71db2d6b6ccc2fa215fb4/ppss_auth-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "df9748fac75b2bf689e29e410aaa81df", "sha256": "1f9fd2a4ea55be12caa9934cb75339759cfa9c6a47b34bbb13b9265f9e3d523c"}, "downloads": -1, "filename": "ppss_auth-0.6.3.tar.gz", "has_sig": false, "md5_digest": "df9748fac75b2bf689e29e410aaa81df", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <3", "size": 14780, "upload_time": "2019-03-20T15:00:56", "upload_time_iso_8601": "2019-03-20T15:00:56.288624Z", "url": "https://files.pythonhosted.org/packages/50/6d/86b1a9b309350855ec3ce8773e21cd315a5da710cd2d36ef7c6c67bca756/ppss_auth-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "6ed36cb96cb4da09cf71c4f396ce69bd", "sha256": "16a45f4db8dbccaa0f95cbfe8d5863cc65039626df44bb7e233118aea2884f6f"}, "downloads": -1, "filename": "ppss_auth-0.6.4.tar.gz", "has_sig": false, "md5_digest": "6ed36cb96cb4da09cf71c4f396ce69bd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, <3", "size": 15956, "upload_time": "2019-03-22T16:25:50", "upload_time_iso_8601": "2019-03-22T16:25:50.762940Z", "url": "https://files.pythonhosted.org/packages/b2/0e/652a1261452e13eda3da69d525d0bf466dea802d59a10639c45a2bab6a88/ppss_auth-0.6.4.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "1e061c62248c4d9a3f1d70e6d50ad4b4", "sha256": "80944482bdcb0e8f204f3feea4c0eb1d6bedddb271e13c17d36441f3229b12bb"}, "downloads": -1, "filename": "ppss_auth-0.7.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "1e061c62248c4d9a3f1d70e6d50ad4b4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, >=3.6", "size": 29188, "upload_time": "2019-03-28T13:57:16", "upload_time_iso_8601": "2019-03-28T13:57:16.430548Z", "url": "https://files.pythonhosted.org/packages/c2/b9/d479df71ec3a7d64dda6d3ade2e121811a48a494741275777059052e8851/ppss_auth-0.7.linux-x86_64.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "2bf70d1c91888e5d72dd9d8f724ea6a4", "sha256": "602acd11872e54617fea18131153dc081afaedf20679150912f8a95fda535079"}, "downloads": -1, "filename": "ppss_auth-0.7.1.tar.gz", "has_sig": false, "md5_digest": "2bf70d1c91888e5d72dd9d8f724ea6a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16423, "upload_time": "2019-03-28T14:09:34", "upload_time_iso_8601": "2019-03-28T14:09:34.220232Z", "url": "https://files.pythonhosted.org/packages/49/da/31345e4673298cdb42f351007a21586abe2a2aece016c5f768e4e18b5b96/ppss_auth-0.7.1.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "f8cbff2af7f409994d79e1098e75fe4c", "sha256": "4b580f7016fd13c8ed040449e08e469a9524991e5f9cf9b5dd8d3f8b1d8c68c9"}, "downloads": -1, "filename": "ppss_auth-0.7.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "f8cbff2af7f409994d79e1098e75fe4c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 29008, "upload_time": "2019-04-03T14:12:00", "upload_time_iso_8601": "2019-04-03T14:12:00.084626Z", "url": "https://files.pythonhosted.org/packages/6e/90/006e1c7007028b0151f1b9f3030c3851d42d13f6362c24c385db2e95e3ed/ppss_auth-0.7.2.linux-x86_64.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "341fa04e5d0a93e3000ef9f83daf44cd", "sha256": "dddaf39702c0d86032f0492dc34f4806fe7d7cc332056f7adb6013436724bf86"}, "downloads": -1, "filename": "ppss_auth-0.7.3.tar.gz", "has_sig": false, "md5_digest": "341fa04e5d0a93e3000ef9f83daf44cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16570, "upload_time": "2019-04-04T10:50:55", "upload_time_iso_8601": "2019-04-04T10:50:55.146827Z", "url": "https://files.pythonhosted.org/packages/e8/3e/5ddbf0ecadec30aec0a726adba456ea78a5093b734e22affa27f55623dc7/ppss_auth-0.7.3.tar.gz", "yanked": false}], "0.7.3.1": [{"comment_text": "", "digests": {"md5": "e40d34fe4c16bbd12d0898d245c10572", "sha256": "a4c9bf753e1276a092b866e4963416589aa6b7e08018a67b5f279c8f50073ac0"}, "downloads": -1, "filename": "ppss_auth-0.7.3.1.tar.gz", "has_sig": false, "md5_digest": "e40d34fe4c16bbd12d0898d245c10572", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16591, "upload_time": "2019-04-12T07:10:52", "upload_time_iso_8601": "2019-04-12T07:10:52.958485Z", "url": "https://files.pythonhosted.org/packages/2a/48/2f70cf4e6c89f6b8426c3b7deeddd2c5e6e8b1a039dea9709a6fdd56344e/ppss_auth-0.7.3.1.tar.gz", "yanked": false}], "0.7.3.2": [{"comment_text": "", "digests": {"md5": "a66690fc12d0d9036cf38f576f7ace31", "sha256": "d5c8303660e7cb6006469c70843a0946d3806d03692ad62f91b7c8134ef161f5"}, "downloads": -1, "filename": "ppss_auth-0.7.3.2.tar.gz", "has_sig": false, "md5_digest": "a66690fc12d0d9036cf38f576f7ace31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16731, "upload_time": "2019-04-18T13:51:45", "upload_time_iso_8601": "2019-04-18T13:51:45.838454Z", "url": "https://files.pythonhosted.org/packages/63/91/37ec4830a917d9e0d49a71b207eab85bb4a2e28893b80e213932f52c00a7/ppss_auth-0.7.3.2.tar.gz", "yanked": false}], "0.7.3.3": [{"comment_text": "", "digests": {"md5": "ec846992214fb117610be2fa9325c52e", "sha256": "6a5fd72f184cde787ac2bbae0794c0dd6ce75d6dbd9dc7dc23e6d51b6a961e3f"}, "downloads": -1, "filename": "ppss_auth-0.7.3.3.tar.gz", "has_sig": false, "md5_digest": "ec846992214fb117610be2fa9325c52e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16774, "upload_time": "2019-10-23T09:52:33", "upload_time_iso_8601": "2019-10-23T09:52:33.289954Z", "url": "https://files.pythonhosted.org/packages/39/75/d775c955e97a6fdf18db5bc755eac66eb3ad47187087c351ff5b11430ca3/ppss_auth-0.7.3.3.tar.gz", "yanked": false}], "0.7.3.4": [{"comment_text": "", "digests": {"md5": "ebc976329bfcc28c1d2bbccace788531", "sha256": "f3da45805b8809993b4038be4f19abb458784c15d8eb94e3e6b9ea9325fcd0ff"}, "downloads": -1, "filename": "ppss_auth-0.7.3.4.tar.gz", "has_sig": false, "md5_digest": "ebc976329bfcc28c1d2bbccace788531", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 16783, "upload_time": "2019-10-23T10:07:24", "upload_time_iso_8601": "2019-10-23T10:07:24.634131Z", "url": "https://files.pythonhosted.org/packages/ce/3c/143890acf7f1f114e7fb3ed0d00ed63c1611f4b94f2866ecd7dd771c8f7d/ppss_auth-0.7.3.4.tar.gz", "yanked": false}], "0.7.3.5": [{"comment_text": "", "digests": {"md5": "e7b045c2d765207506aabcfb3b329f26", "sha256": "2a338dc24486347bb29b894dd89db99a6d8af3fd4f9d28f67030f0eebe825444"}, "downloads": -1, "filename": "ppss_auth-0.7.3.5.tar.gz", "has_sig": false, "md5_digest": "e7b045c2d765207506aabcfb3b329f26", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 17278, "upload_time": "2020-01-10T16:15:45", "upload_time_iso_8601": "2020-01-10T16:15:45.209777Z", "url": "https://files.pythonhosted.org/packages/ce/b7/519862b9afc73c99c87db4c5cd9acf111abfbdd0380f3026b220b22cfd96/ppss_auth-0.7.3.5.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "1ae3f5fabc8a00a818889c3d752e1228", "sha256": "db5689b932f1271a4224be452d1c132f872c54898b799f826441c53d0346c45d"}, "downloads": -1, "filename": "ppss_auth-0.7.4.tar.gz", "has_sig": false, "md5_digest": "1ae3f5fabc8a00a818889c3d752e1228", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 20558, "upload_time": "2020-01-15T16:50:41", "upload_time_iso_8601": "2020-01-15T16:50:41.908475Z", "url": "https://files.pythonhosted.org/packages/0f/27/8c5ff8a50636262a636c8e6b5ed16941900a96ba37ad1952ffda2d924619/ppss_auth-0.7.4.tar.gz", "yanked": false}], "0.7.4.1": [{"comment_text": "", "digests": {"md5": "1c415ea1f572d863e31ff1d379c5c910", "sha256": "e728d89c2fadbc087e9d4c5be33e81bb38ea7484fc37c3e7706db2bdcdfaa99f"}, "downloads": -1, "filename": "ppss_auth-0.7.4.1.tar.gz", "has_sig": false, "md5_digest": "1c415ea1f572d863e31ff1d379c5c910", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 22038, "upload_time": "2020-03-25T10:49:45", "upload_time_iso_8601": "2020-03-25T10:49:45.590426Z", "url": "https://files.pythonhosted.org/packages/58/ce/8455eb376e9dae12371b5b3c22aff0a07ea3f104752175539db90e33ce7e/ppss_auth-0.7.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c415ea1f572d863e31ff1d379c5c910", "sha256": "e728d89c2fadbc087e9d4c5be33e81bb38ea7484fc37c3e7706db2bdcdfaa99f"}, "downloads": -1, "filename": "ppss_auth-0.7.4.1.tar.gz", "has_sig": false, "md5_digest": "1c415ea1f572d863e31ff1d379c5c910", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 22038, "upload_time": "2020-03-25T10:49:45", "upload_time_iso_8601": "2020-03-25T10:49:45.590426Z", "url": "https://files.pythonhosted.org/packages/58/ce/8455eb376e9dae12371b5b3c22aff0a07ea3f104752175539db90e33ce7e/ppss_auth-0.7.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:22 2020"}