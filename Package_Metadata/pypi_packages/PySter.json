{"info": {"author": "Jeffrey McLarty", "author_email": "jeffrey.mclarty@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Operating System :: Microsoft :: Windows :: Windows 7", "Programming Language :: Python :: 2.7"], "description": "======\nPySter\n======\nPython anywhere\n---------------\n\nDemo\n====\nWatch a demo, be sure to enable HD, on `Vimeo <https://vimeo.com/121615286>`_\n\nRequirements & Mandatory Dependencies\n=====================================\n* Windows 7\n* Python 2.7 32-bit\n* rrsm - ``pip install rrsm``\n* PyHook - See `SourceForge.net <http://sourceforge.net/projects/pyhook/>`_.\n* PyWin32 - See `Gohlke's binaries <http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywin32>`_.\n\nOptional Dependencies\n=====================\nJust remove any reference to dataframes, if you don't have pandas.\n\n* pandas - http://pandas.pydata.org\n\nInstallation & Use\n==================\n1. download & extract or clone or ``pip install pyster``\n2. python engine.py\n3. Type \">>>\", some python, then press the right arrow key to \"execute\".\n4. Optionally, edit pyster/pyster_extensions/functionality.py to suite, then re-run.\n\nPSA\n===\nThis software should only be sourced from places/formats which allow you to review the code.  It's recommended to \nonly use this software on closed or low-priority systems.  PySter is basically a keylogger (without the logging/saving)\ncombined with all of the risks exposed by exec() and/or compile().\n\nKnown Issues & Bugs\n===================\nThis software is barely beta level quality.  There are a variety of problems that need to be fixed, prior to an \ninitial release of PySter.  \n\nThese are the known ones:\n\n1. Certain rare exceptions thrown from exec(), and compile(), mainly of the TypeError variety, can cause PySter to enter an unhandled/unrecoverable/unresponsive state.\n2. An issue associated with with memory usage, timing, or a bug in PyWin32, cause strange integer type errors at strange times.\n3. The string representation of many objects often need PySter wrappers to display properly.  Eg. p2e().\n4. Many forms of software mutilate the keyboard input;  these programs often won't work as expected with PySter. Eg. Spyder, for things like line breaks.\n\nSee the various branches of this repo for starts of attempts to handle 1 and 2.", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/jnmclarty/pyster/tarball/0.1.0beta", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jnmclarty/pyster", "keywords": "pyster", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "PySter", "package_url": "https://pypi.org/project/PySter/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PySter/", "project_urls": {"Download": "https://github.com/jnmclarty/pyster/tarball/0.1.0beta", "Homepage": "https://github.com/jnmclarty/pyster"}, "release_url": "https://pypi.org/project/PySter/0.1.0beta/", "requires_dist": null, "requires_python": null, "summary": "Python anywhere", "version": "0.1.0beta", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"demo\">\n<h2>Demo</h2>\n<p>Watch a demo, be sure to enable HD, on <a href=\"https://vimeo.com/121615286\" rel=\"nofollow\">Vimeo</a></p>\n</div>\n<div id=\"requirements-mandatory-dependencies\">\n<h2>Requirements &amp; Mandatory Dependencies</h2>\n<ul>\n<li>Windows 7</li>\n<li>Python 2.7 32-bit</li>\n<li>rrsm - <tt>pip install rrsm</tt></li>\n<li>PyHook - See <a href=\"http://sourceforge.net/projects/pyhook/\" rel=\"nofollow\">SourceForge.net</a>.</li>\n<li>PyWin32 - See <a href=\"http://www.lfd.uci.edu/~gohlke/pythonlibs/#pywin32\" rel=\"nofollow\">Gohlke\u2019s binaries</a>.</li>\n</ul>\n</div>\n<div id=\"optional-dependencies\">\n<h2>Optional Dependencies</h2>\n<p>Just remove any reference to dataframes, if you don\u2019t have pandas.</p>\n<ul>\n<li>pandas - <a href=\"http://pandas.pydata.org\" rel=\"nofollow\">http://pandas.pydata.org</a></li>\n</ul>\n</div>\n<div id=\"installation-use\">\n<h2>Installation &amp; Use</h2>\n<ol>\n<li>download &amp; extract or clone or <tt>pip install pyster</tt></li>\n<li>python engine.py</li>\n<li>Type \u201c&gt;&gt;&gt;\u201d, some python, then press the right arrow key to \u201cexecute\u201d.</li>\n<li>Optionally, edit pyster/pyster_extensions/functionality.py to suite, then re-run.</li>\n</ol>\n</div>\n<div id=\"psa\">\n<h2>PSA</h2>\n<p>This software should only be sourced from places/formats which allow you to review the code.  It\u2019s recommended to\nonly use this software on closed or low-priority systems.  PySter is basically a keylogger (without the logging/saving)\ncombined with all of the risks exposed by exec() and/or compile().</p>\n</div>\n<div id=\"known-issues-bugs\">\n<h2>Known Issues &amp; Bugs</h2>\n<p>This software is barely beta level quality.  There are a variety of problems that need to be fixed, prior to an\ninitial release of PySter.</p>\n<p>These are the known ones:</p>\n<ol>\n<li>Certain rare exceptions thrown from exec(), and compile(), mainly of the TypeError variety, can cause PySter to enter an unhandled/unrecoverable/unresponsive state.</li>\n<li>An issue associated with with memory usage, timing, or a bug in PyWin32, cause strange integer type errors at strange times.</li>\n<li>The string representation of many objects often need PySter wrappers to display properly.  Eg. p2e().</li>\n<li>Many forms of software mutilate the keyboard input;  these programs often won\u2019t work as expected with PySter. Eg. Spyder, for things like line breaks.</li>\n</ol>\n<p>See the various branches of this repo for starts of attempts to handle 1 and 2.</p>\n</div>\n\n          </div>"}, "last_serial": 1455158, "releases": {"0.1.0beta": []}, "urls": [], "timestamp": "Fri May  8 02:55:58 2020"}