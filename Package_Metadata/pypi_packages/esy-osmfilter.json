{"info": {"author": "Adam Pluta", "author_email": "Adam.Pluta@dlr.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "# esy-osmfilter\n\n`esy-osmfilter` is a Python library to read and filter [OpenStreetMap](https://www.openstreetmap.org) data files in the [Protocol\nBuffers (PBF)](https://developers.google.com/protocol-buffers/) format and export them to a Python dictionary and/or JSON file.\n\n## Install\n\n```console\nfoo@bar:~$ pip install esy-osmfilter\n```\n\n## Usage\n\nIn the following example the prefilter of esy-osmfilter is used to extract all pipelines from Liechtenstein.\nThe easiest way to run esy-osmfilter is to download the sample.py \nfrom https://gitlab.com/dlr-ve-esy/esy-osmfilter and run it.\nIt is quite similar to the more detailed desription below.\n\n\nIn this example, we start by importing all necessary libraries and methods. \n\n```python\n\n>>> import configparser, contextlib\n>>> import os, sys\n>>> from esy.osmfilter import osm_colors as CC\n>>> from esy.osmfilter import run_filter \n>>> from esy.osmfilter import Node, Way, Relation\n\n```\nThereafter, the IO filepaths are defined, assuming the osm-pbf file is already downloaded.\n\n```python\n>>> PBF_inputfile = os.path.join(os.getcwd(),\n...                              'tests/input/liechtenstein-191101.osm.pbf')\n>>> JSON_outputfile = os.path.join(os.getcwd(),\n...                              'tests/output/LI/liechtenstein-191101.json')\n\n```\n\nAlternatively, you could also make use of urllib library to retrieve a OSM file:\n\n```python\n\n>>> import urllib.request\n>>> if not os.path.exists('tests/input/liechtenstein-191101.osm.pbf'):\n...    filename, headers = urllib.request.urlretrieve(\n...        'https://download.geofabrik.de/europe/liechtenstein-191101.osm.pbf',\n...        filename='liechtenstein-191101.osm.pbf'\n...    )\n...    PBF_inputfile = filename\n\n```\n\n\n\nIn the next step, a prefilter for all pipeline objects is defined.\nWith the prefilter, we accept all way-items that have \"man_made\" as key and \"pipeline\" as value in their taglist.\nThe white and black filter are left empty for the moment.\n\n```python\n\n>>> prefilter   = {Node: {}, Way: {\"man_made\":[\"pipeline\",],}, Relation: {}}\n>>> whitefilter = []\n>>> blackfilter = []\n\n```\n\nThe run_filter function will allow to filter for OSM items from a pbf-file. \nWe confirm the prefilter phase by setting the boolean variable NewPreFilterData=True. \n\n```python\n>>> [Data,_]=run_filter('noname',\n...                     PBF_inputfile, \n...                     JSON_outputfile, \n...                     prefilter,\n...                     whitefilter, \n...                     blackfilter, \n...                     NewPreFilterData=True, \n...                     CreateElements=False, \n...                     LoadElements=False,\n...                     verbose=True)\n\n```\nThe prefilter returns the filter results to the `Data` dictionary.\nThis means all OSM way-items with the tag \"man_made\"=\"pipeline\" are stored there.\nBut not enough, additionally, all referenced node items of these pipelines are stored there too.\n\n```python\n>>> len(Data['Node'])\n13\n>>> len(Data['Relation'])\n0\n>>> len(Data['Way'])\n2\n\n```\nIn this example, we have only found two pipelines and their correspondent 13 nodes.\n\n\n***PLEASE NOTICE:***  \nYou can also set *\"man_made\":True* to accept items independently of a key value.\n\n\nIn the next step we use run_filter to load the `Data` dictionary and specify the main filtering results.\nIn this example, we use the blackfilter to exclude possible pipelines substations from our prefiltering results.\n\n```python\n>>> blackfilter = [(\"pipeline\",\"substation\"),]\n\n```\nWe further only accept the drain pipelines that have the really great name \"W\u00e4schgr\u00e4bli\".\n\n```python\n>>> whitefilter =[((\"waterway\",\"drain\"),(\"name\",\"W\u00e4schgr\u00e4ble\")), ]\n\n```\n\nWe initiate the mainfilter phase by setting CreateElements=True.\n\n\n```python\n>>> [_,Elements]=run_filter('funny-waterway-pipelines',\n...                            PBF_inputfile, \n...                            JSON_outputfile, \n...                            prefilter,\n...                            whitefilter, \n...                            blackfilter, \n...                            NewPreFilterData=False, \n...                            CreateElements=True, \n...                            LoadElements=False,\n...                            verbose=True)\n>>> len(Elements['funny-waterway-pipelines']['Node'])\n0\n>>> len(Elements['funny-waterway-pipelines']['Relation'])\n0\n>>> len(Elements['funny-waterway-pipelines']['Way'])\n1\n\n```\nWe see, that there is only one way-item left in the `Elements` dictionary, the other has been filtered out.\nThere are no referenced nodes (or relation members) of the remaining way-item passed to the `Elements` dictionary.\n\nHowever, these are still accessible in the `Data` dictionary.\n\n\nEsy-osmfilter comes with an export function for GeoJSON files (not implemented for relations yet) which will \nmake thinks a lot easier:\n\n```python\n>>> from esy.osmfilter import export_geojson\n>>> export_geojson(Elements['funny-waterway-pipelines']['Way'],Data,\n... filename='test.geojson',jsontype='Line')\n{'location': 'underground', 'man_made': 'pipeline', 'name': 'W\u00e4schgr\u00e4ble', 'waterway': 'drain'}\n\n```\n\nTo visualize the output-file just open http://geojson.io and drag it on the screen.\n\n![image](docs/images/graeble.png)\n\nFor more details, jump to the\n[documentation](https://dlr-ve-esy.gitlab.io/esy-osmfilter/).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pypa/osmfilter", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "esy-osmfilter", "package_url": "https://pypi.org/project/esy-osmfilter/", "platform": "", "project_url": "https://pypi.org/project/esy-osmfilter/", "project_urls": {"Homepage": "https://github.com/pypa/osmfilter"}, "release_url": "https://pypi.org/project/esy-osmfilter/1.0.7/", "requires_dist": ["protobuf (<4,>=3)", "esy-osm-pbf (>=0)"], "requires_python": ">=3.6", "summary": "Filtering of OSM pbf-files and exporting to geojson", "version": "1.0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>esy-osmfilter</h1>\n<p><code>esy-osmfilter</code> is a Python library to read and filter <a href=\"https://www.openstreetmap.org\" rel=\"nofollow\">OpenStreetMap</a> data files in the <a href=\"https://developers.google.com/protocol-buffers/\" rel=\"nofollow\">Protocol\nBuffers (PBF)</a> format and export them to a Python dictionary and/or JSON file.</p>\n<h2>Install</h2>\n<pre><span class=\"gp\">foo@bar:~$</span> pip install esy-osmfilter\n</pre>\n<h2>Usage</h2>\n<p>In the following example the prefilter of esy-osmfilter is used to extract all pipelines from Liechtenstein.\nThe easiest way to run esy-osmfilter is to download the sample.py\nfrom <a href=\"https://gitlab.com/dlr-ve-esy/esy-osmfilter\" rel=\"nofollow\">https://gitlab.com/dlr-ve-esy/esy-osmfilter</a> and run it.\nIt is quite similar to the more detailed desription below.</p>\n<p>In this example, we start by importing all necessary libraries and methods.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">configparser</span><span class=\"o\">,</span> <span class=\"nn\">contextlib</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">os</span><span class=\"o\">,</span> <span class=\"nn\">sys</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">esy.osmfilter</span> <span class=\"kn\">import</span> <span class=\"n\">osm_colors</span> <span class=\"k\">as</span> <span class=\"n\">CC</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">esy.osmfilter</span> <span class=\"kn\">import</span> <span class=\"n\">run_filter</span> \n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">esy.osmfilter</span> <span class=\"kn\">import</span> <span class=\"n\">Node</span><span class=\"p\">,</span> <span class=\"n\">Way</span><span class=\"p\">,</span> <span class=\"n\">Relation</span>\n</pre>\n<p>Thereafter, the IO filepaths are defined, assuming the osm-pbf file is already downloaded.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">PBF_inputfile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span>\n<span class=\"o\">...</span>                              <span class=\"s1\">'tests/input/liechtenstein-191101.osm.pbf'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">JSON_outputfile</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span>\n<span class=\"o\">...</span>                              <span class=\"s1\">'tests/output/LI/liechtenstein-191101.json'</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, you could also make use of urllib library to retrieve a OSM file:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">urllib.request</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">exists</span><span class=\"p\">(</span><span class=\"s1\">'tests/input/liechtenstein-191101.osm.pbf'</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>    <span class=\"n\">filename</span><span class=\"p\">,</span> <span class=\"n\">headers</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">urlretrieve</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>        <span class=\"s1\">'https://download.geofabrik.de/europe/liechtenstein-191101.osm.pbf'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>        <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'liechtenstein-191101.osm.pbf'</span>\n<span class=\"o\">...</span>    <span class=\"p\">)</span>\n<span class=\"o\">...</span>    <span class=\"n\">PBF_inputfile</span> <span class=\"o\">=</span> <span class=\"n\">filename</span>\n</pre>\n<p>In the next step, a prefilter for all pipeline objects is defined.\nWith the prefilter, we accept all way-items that have \"man_made\" as key and \"pipeline\" as value in their taglist.\nThe white and black filter are left empty for the moment.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">prefilter</span>   <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">Node</span><span class=\"p\">:</span> <span class=\"p\">{},</span> <span class=\"n\">Way</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"man_made\"</span><span class=\"p\">:[</span><span class=\"s2\">\"pipeline\"</span><span class=\"p\">,],},</span> <span class=\"n\">Relation</span><span class=\"p\">:</span> <span class=\"p\">{}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">whitefilter</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blackfilter</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n</pre>\n<p>The run_filter function will allow to filter for OSM items from a pbf-file.\nWe confirm the prefilter phase by setting the boolean variable NewPreFilterData=True.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">Data</span><span class=\"p\">,</span><span class=\"n\">_</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">run_filter</span><span class=\"p\">(</span><span class=\"s1\">'noname'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                     <span class=\"n\">PBF_inputfile</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                     <span class=\"n\">JSON_outputfile</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                     <span class=\"n\">prefilter</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                     <span class=\"n\">whitefilter</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                     <span class=\"n\">blackfilter</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                     <span class=\"n\">NewPreFilterData</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                     <span class=\"n\">CreateElements</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                     <span class=\"n\">LoadElements</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                     <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>The prefilter returns the filter results to the <code>Data</code> dictionary.\nThis means all OSM way-items with the tag \"man_made\"=\"pipeline\" are stored there.\nBut not enough, additionally, all referenced node items of these pipelines are stored there too.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"s1\">'Node'</span><span class=\"p\">])</span>\n<span class=\"mi\">13</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"s1\">'Relation'</span><span class=\"p\">])</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Data</span><span class=\"p\">[</span><span class=\"s1\">'Way'</span><span class=\"p\">])</span>\n<span class=\"mi\">2</span>\n</pre>\n<p>In this example, we have only found two pipelines and their correspondent 13 nodes.</p>\n<p><em><strong>PLEASE NOTICE:</strong></em><br>\nYou can also set <em>\"man_made\":True</em> to accept items independently of a key value.</p>\n<p>In the next step we use run_filter to load the <code>Data</code> dictionary and specify the main filtering results.\nIn this example, we use the blackfilter to exclude possible pipelines substations from our prefiltering results.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">blackfilter</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"pipeline\"</span><span class=\"p\">,</span><span class=\"s2\">\"substation\"</span><span class=\"p\">),]</span>\n</pre>\n<p>We further only accept the drain pipelines that have the really great name \"W\u00e4schgr\u00e4bli\".</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">whitefilter</span> <span class=\"o\">=</span><span class=\"p\">[((</span><span class=\"s2\">\"waterway\"</span><span class=\"p\">,</span><span class=\"s2\">\"drain\"</span><span class=\"p\">),(</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span><span class=\"s2\">\"W\u00e4schgr\u00e4ble\"</span><span class=\"p\">)),</span> <span class=\"p\">]</span>\n</pre>\n<p>We initiate the mainfilter phase by setting CreateElements=True.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"p\">[</span><span class=\"n\">_</span><span class=\"p\">,</span><span class=\"n\">Elements</span><span class=\"p\">]</span><span class=\"o\">=</span><span class=\"n\">run_filter</span><span class=\"p\">(</span><span class=\"s1\">'funny-waterway-pipelines'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                            <span class=\"n\">PBF_inputfile</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                            <span class=\"n\">JSON_outputfile</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                            <span class=\"n\">prefilter</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                            <span class=\"n\">whitefilter</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                            <span class=\"n\">blackfilter</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                            <span class=\"n\">NewPreFilterData</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                            <span class=\"n\">CreateElements</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> \n<span class=\"o\">...</span>                            <span class=\"n\">LoadElements</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>                            <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Elements</span><span class=\"p\">[</span><span class=\"s1\">'funny-waterway-pipelines'</span><span class=\"p\">][</span><span class=\"s1\">'Node'</span><span class=\"p\">])</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Elements</span><span class=\"p\">[</span><span class=\"s1\">'funny-waterway-pipelines'</span><span class=\"p\">][</span><span class=\"s1\">'Relation'</span><span class=\"p\">])</span>\n<span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">Elements</span><span class=\"p\">[</span><span class=\"s1\">'funny-waterway-pipelines'</span><span class=\"p\">][</span><span class=\"s1\">'Way'</span><span class=\"p\">])</span>\n<span class=\"mi\">1</span>\n</pre>\n<p>We see, that there is only one way-item left in the <code>Elements</code> dictionary, the other has been filtered out.\nThere are no referenced nodes (or relation members) of the remaining way-item passed to the <code>Elements</code> dictionary.</p>\n<p>However, these are still accessible in the <code>Data</code> dictionary.</p>\n<p>Esy-osmfilter comes with an export function for GeoJSON files (not implemented for relations yet) which will\nmake thinks a lot easier:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">esy.osmfilter</span> <span class=\"kn\">import</span> <span class=\"n\">export_geojson</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">export_geojson</span><span class=\"p\">(</span><span class=\"n\">Elements</span><span class=\"p\">[</span><span class=\"s1\">'funny-waterway-pipelines'</span><span class=\"p\">][</span><span class=\"s1\">'Way'</span><span class=\"p\">],</span><span class=\"n\">Data</span><span class=\"p\">,</span>\n<span class=\"o\">...</span> <span class=\"n\">filename</span><span class=\"o\">=</span><span class=\"s1\">'test.geojson'</span><span class=\"p\">,</span><span class=\"n\">jsontype</span><span class=\"o\">=</span><span class=\"s1\">'Line'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'location'</span><span class=\"p\">:</span> <span class=\"s1\">'underground'</span><span class=\"p\">,</span> <span class=\"s1\">'man_made'</span><span class=\"p\">:</span> <span class=\"s1\">'pipeline'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'W\u00e4schgr\u00e4ble'</span><span class=\"p\">,</span> <span class=\"s1\">'waterway'</span><span class=\"p\">:</span> <span class=\"s1\">'drain'</span><span class=\"p\">}</span>\n</pre>\n<p>To visualize the output-file just open <a href=\"http://geojson.io\" rel=\"nofollow\">http://geojson.io</a> and drag it on the screen.</p>\n<p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e6f3649c7bde39a92fefff456f687354997ee2b9/646f63732f696d616765732f67726165626c652e706e67\"></p>\n<p>For more details, jump to the\n<a href=\"https://dlr-ve-esy.gitlab.io/esy-osmfilter/\" rel=\"nofollow\">documentation</a>.</p>\n\n          </div>"}, "last_serial": 6608056, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "dddb76a1b59a82338155b0beedce4f4b", "sha256": "c0c075d3e25a8be02c49c01f3020e372ce7909bf42890f3b639d493e28ebee13"}, "downloads": -1, "filename": "esy_osmfilter-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dddb76a1b59a82338155b0beedce4f4b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15923, "upload_time": "2019-11-22T09:36:07", "upload_time_iso_8601": "2019-11-22T09:36:07.511096Z", "url": "https://files.pythonhosted.org/packages/b9/a8/633383fda5a13d5b7200b1d4101c390636fc042973fa954e2856b64bb861/esy_osmfilter-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a06d3692979462f5555b9862ea29703a", "sha256": "ee7fb9ce8e48dc07f42efa14ef481060f7c4676fd5f63a5c26cea1fbd34679b8"}, "downloads": -1, "filename": "esy-osmfilter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a06d3692979462f5555b9862ea29703a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13515, "upload_time": "2019-11-22T09:36:12", "upload_time_iso_8601": "2019-11-22T09:36:12.807625Z", "url": "https://files.pythonhosted.org/packages/89/8d/2c1dfd5263703ca2cf82404d52fdaedb9bcf378c89bb36bf77c08b41dcbf/esy-osmfilter-0.0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "4784862201dbe3d837e83f011229a860", "sha256": "bd3372d42b94fc7a398bc5eaa6c459858e63427f7f2acc8e963deb1e18712475"}, "downloads": -1, "filename": "esy_osmfilter-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4784862201dbe3d837e83f011229a860", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15923, "upload_time": "2019-11-22T09:36:11", "upload_time_iso_8601": "2019-11-22T09:36:11.146148Z", "url": "https://files.pythonhosted.org/packages/71/b2/28ddd4ae05aa7ae4700dd64623af9452a7549b71188d3fc9d74de8be8150/esy_osmfilter-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e8f6394e2e4cd442a300eb63967e39f3", "sha256": "dabd88c6e3eb89b74eb1100772e9c631e987b2fbab86701bc2313ea25346acb1"}, "downloads": -1, "filename": "esy-osmfilter-0.1.1.tar.gz", "has_sig": false, "md5_digest": "e8f6394e2e4cd442a300eb63967e39f3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13507, "upload_time": "2019-11-22T09:36:14", "upload_time_iso_8601": "2019-11-22T09:36:14.255399Z", "url": "https://files.pythonhosted.org/packages/99/15/a8ebc7ebb0f927a32ec8c7416959d673379b91a0d4b01b11997a92c0605b/esy-osmfilter-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "bfb5f48f010f2769c80aa7ca1fd9d836", "sha256": "9f90c5cca17941f9b220e0218dad322103cb04deda9431dcb932b04d9f0dc02a"}, "downloads": -1, "filename": "esy_osmfilter-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "bfb5f48f010f2769c80aa7ca1fd9d836", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15922, "upload_time": "2019-11-22T13:41:02", "upload_time_iso_8601": "2019-11-22T13:41:02.826655Z", "url": "https://files.pythonhosted.org/packages/32/98/e7aea6ed45a7346f707353e7c0082484c3880e94ceed3a67c272970acce1/esy_osmfilter-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20f466fe9e94f6cb14991675f24297f7", "sha256": "dddb1bb99bd78a4b14df9d6756180a1db2540863457c799b4d9b84aab8dac26d"}, "downloads": -1, "filename": "esy-osmfilter-0.1.2.tar.gz", "has_sig": false, "md5_digest": "20f466fe9e94f6cb14991675f24297f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 13520, "upload_time": "2019-11-22T13:41:07", "upload_time_iso_8601": "2019-11-22T13:41:07.297101Z", "url": "https://files.pythonhosted.org/packages/09/b3/9596c0b4b0bd487a0368e62ec331dd26f4e803bcf962cc860eacaa30b2b0/esy-osmfilter-0.1.2.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "d4cdcda16de10c7488786c5874cf47bd", "sha256": "2f441fa5ea9282c951ef983759d7750163c72e91e10cfd57c83c8bf1d32977c9"}, "downloads": -1, "filename": "esy_osmfilter-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d4cdcda16de10c7488786c5874cf47bd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17420, "upload_time": "2020-01-08T17:48:26", "upload_time_iso_8601": "2020-01-08T17:48:26.300664Z", "url": "https://files.pythonhosted.org/packages/c1/d1/e56b1d555a43add634fca9bc0ec649cac91dde9a978e61948f2a004f52a5/esy_osmfilter-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6918104620ba7ef470da2d0e5793d448", "sha256": "64dd46bbb707fea4073c87acb9bf69ef09cbb6befa3d8c0b19728f04dc5de54e"}, "downloads": -1, "filename": "esy-osmfilter-1.0.0.tar.gz", "has_sig": false, "md5_digest": "6918104620ba7ef470da2d0e5793d448", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 16941, "upload_time": "2020-01-08T17:48:30", "upload_time_iso_8601": "2020-01-08T17:48:30.220574Z", "url": "https://files.pythonhosted.org/packages/ae/a3/270c23676ce8b2cb6893d6aeb62c36174d878cf44d109291f668c806adc5/esy-osmfilter-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "53d36be0082e7d2477dedfcf208671b4", "sha256": "5e7b4cb22214d97341bdf468afec3a4e3d65cb3c0aa6ad96edbc047f89382b8e"}, "downloads": -1, "filename": "esy_osmfilter-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "53d36be0082e7d2477dedfcf208671b4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17534, "upload_time": "2020-01-10T08:56:00", "upload_time_iso_8601": "2020-01-10T08:56:00.129213Z", "url": "https://files.pythonhosted.org/packages/e9/64/1cce3ae1104aba3509291ea6047660fd715730dfaa2563b17765944c5a4b/esy_osmfilter-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "084bb9f6cb62568ca4c7b55de5508430", "sha256": "749907725691b3d9fa3ebfd8e4fc6f767241e48737e4839d40281937b958aa2e"}, "downloads": -1, "filename": "esy-osmfilter-1.0.1.tar.gz", "has_sig": false, "md5_digest": "084bb9f6cb62568ca4c7b55de5508430", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17186, "upload_time": "2020-01-10T08:56:04", "upload_time_iso_8601": "2020-01-10T08:56:04.214144Z", "url": "https://files.pythonhosted.org/packages/48/a1/ba14292927b972ff25f78d45646160eabd7f1e254ac9e1d0d92bf30bd99c/esy-osmfilter-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "3112a16684a158ede2915c768e5f459b", "sha256": "24737b47459e93e9374ffcb3e54b9983a38e7c13279d4cd5b9a10e259f4ee527"}, "downloads": -1, "filename": "esy_osmfilter-1.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "3112a16684a158ede2915c768e5f459b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17782, "upload_time": "2020-01-13T13:57:27", "upload_time_iso_8601": "2020-01-13T13:57:27.061278Z", "url": "https://files.pythonhosted.org/packages/34/6d/b36d0a9bef7381173c593714da774d3930ec8c4e45f0b36c48c4c8df2ddb/esy_osmfilter-1.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72505e0d2be02afbc6428465a184ebe4", "sha256": "b4ae025af9c769af01ac7ba5a59a987ea11b1a6732b3f7dcdb38b2c4edd5dc82"}, "downloads": -1, "filename": "esy-osmfilter-1.0.2.tar.gz", "has_sig": false, "md5_digest": "72505e0d2be02afbc6428465a184ebe4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17326, "upload_time": "2020-01-13T13:57:28", "upload_time_iso_8601": "2020-01-13T13:57:28.535490Z", "url": "https://files.pythonhosted.org/packages/d2/99/2fee13776c96a03ac265fb298af3dad3837b611eb02de627ee7b4e5e047e/esy-osmfilter-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "850207960c74583b0c40a9b28044c0f2", "sha256": "19aaf44720a79245a45b2bd780babb0686a4078526355c682d08b5310093db57"}, "downloads": -1, "filename": "esy_osmfilter-1.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "850207960c74583b0c40a9b28044c0f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17949, "upload_time": "2020-01-23T12:50:37", "upload_time_iso_8601": "2020-01-23T12:50:37.635141Z", "url": "https://files.pythonhosted.org/packages/b9/9a/f431d1ccf986f003b03e088dc17a0bac1dc340d7e2e7718e7994ec37f140/esy_osmfilter-1.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dff594c288281f812ed26de1cb07fabd", "sha256": "a266ddc94433fd30a71934ce19a9b55fd88ae58b23c472d79d56147e1485a439"}, "downloads": -1, "filename": "esy-osmfilter-1.0.3.tar.gz", "has_sig": false, "md5_digest": "dff594c288281f812ed26de1cb07fabd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17408, "upload_time": "2020-01-23T12:50:39", "upload_time_iso_8601": "2020-01-23T12:50:39.960140Z", "url": "https://files.pythonhosted.org/packages/b2/79/5cf2b6c334ef435f57595ffdbe9dab9e16bc9115d4f48bca76e739ce7961/esy-osmfilter-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "1467b02ccec094d9861695343633f8ee", "sha256": "e283d50905b9d28acf4f0a46a87b6ff37d1c784473bbcfb4216071e4cae888e2"}, "downloads": -1, "filename": "esy_osmfilter-1.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "1467b02ccec094d9861695343633f8ee", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18051, "upload_time": "2020-02-04T06:57:19", "upload_time_iso_8601": "2020-02-04T06:57:19.933814Z", "url": "https://files.pythonhosted.org/packages/9b/fc/f268092b5daedb05e464de3dbf842c7c5d0d2e5b57d3fd041023b15a680a/esy_osmfilter-1.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89c5b4ad78e5b30b7b49989c7cfd1573", "sha256": "5003ee3c65145d77b8d9eb8f3e748de2adada4ce88f7aa78b13d141348292a9e"}, "downloads": -1, "filename": "esy-osmfilter-1.0.4.tar.gz", "has_sig": false, "md5_digest": "89c5b4ad78e5b30b7b49989c7cfd1573", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17484, "upload_time": "2020-02-04T06:57:21", "upload_time_iso_8601": "2020-02-04T06:57:21.987128Z", "url": "https://files.pythonhosted.org/packages/83/cf/a2a5977d043a76422745a789c44d58d2798557ce319d65f60caf265721f2/esy-osmfilter-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "81a65518476019901cf13e42d4c8d349", "sha256": "787b64af012c0dce25d9b3b308c8f248b24123377068f2f6c382039c7e9c0eeb"}, "downloads": -1, "filename": "esy_osmfilter-1.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "81a65518476019901cf13e42d4c8d349", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18075, "upload_time": "2020-02-04T09:10:35", "upload_time_iso_8601": "2020-02-04T09:10:35.412800Z", "url": "https://files.pythonhosted.org/packages/78/9a/8e2f8c5e94762b62bff059f716ad9fd7c39569e80cb15b324588e35cdb5a/esy_osmfilter-1.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d0e62a26094d1622a6fb952e7e94188d", "sha256": "1cc5c766a559e704ed991091356e32bd5f52bd46bce318b4711a2133493c91a3"}, "downloads": -1, "filename": "esy-osmfilter-1.0.5.tar.gz", "has_sig": false, "md5_digest": "d0e62a26094d1622a6fb952e7e94188d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17493, "upload_time": "2020-02-04T09:10:37", "upload_time_iso_8601": "2020-02-04T09:10:37.434685Z", "url": "https://files.pythonhosted.org/packages/9f/d2/92050e0e8a66c0f2244c3c77c81deec134214f045dbb759fb258b08f6e44/esy-osmfilter-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "cd25b7cfb5dcf4d63094b2f0e1b3738a", "sha256": "affdddfcc6dfe16fba9e98d28cfc1881e017e8e46ae8236e83ece9709c673e5e"}, "downloads": -1, "filename": "esy_osmfilter-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "cd25b7cfb5dcf4d63094b2f0e1b3738a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18252, "upload_time": "2020-02-05T07:20:55", "upload_time_iso_8601": "2020-02-05T07:20:55.184807Z", "url": "https://files.pythonhosted.org/packages/2c/31/694b0fbc6a7a39f2a6f3686cb78b05208348bef8a09d5a5f02406a27f67c/esy_osmfilter-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7139e05311a65d12d1c7ac77ec12e0c", "sha256": "67a7a6cf971dc4a88411ad58fe2d79d79aa51787305067e9035c4d70dfe103f4"}, "downloads": -1, "filename": "esy-osmfilter-1.0.6.tar.gz", "has_sig": false, "md5_digest": "d7139e05311a65d12d1c7ac77ec12e0c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17654, "upload_time": "2020-02-05T07:20:57", "upload_time_iso_8601": "2020-02-05T07:20:57.027343Z", "url": "https://files.pythonhosted.org/packages/00/86/eca8cb83bc3e9bf602ea67051fac145b9d7ebc344a37bcba219185166d5a/esy-osmfilter-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "02286bbe5f77896da2f5dd12689a2294", "sha256": "2cb1629372c7e2961644d812729a6fe452b9359ed9f031ff122471a51a487ecf"}, "downloads": -1, "filename": "esy_osmfilter-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "02286bbe5f77896da2f5dd12689a2294", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18274, "upload_time": "2020-02-11T09:03:33", "upload_time_iso_8601": "2020-02-11T09:03:33.705054Z", "url": "https://files.pythonhosted.org/packages/31/a9/0ea1d8a27a0c0c22e65da7d8505d99149807661ffcaea4f69193fb7fe540/esy_osmfilter-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a0003f74fa399838560dd46be346f7", "sha256": "6b57dd628cf38e3c1d1ce296da94f944667b6e3ac88ce94416483e8590351b85"}, "downloads": -1, "filename": "esy-osmfilter-1.0.7.tar.gz", "has_sig": false, "md5_digest": "c4a0003f74fa399838560dd46be346f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17684, "upload_time": "2020-02-11T09:03:35", "upload_time_iso_8601": "2020-02-11T09:03:35.181864Z", "url": "https://files.pythonhosted.org/packages/2d/a1/9ed24467788d2c727521554e1abc09c9f2acb312753e44d9b9fec7427395/esy-osmfilter-1.0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "02286bbe5f77896da2f5dd12689a2294", "sha256": "2cb1629372c7e2961644d812729a6fe452b9359ed9f031ff122471a51a487ecf"}, "downloads": -1, "filename": "esy_osmfilter-1.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "02286bbe5f77896da2f5dd12689a2294", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18274, "upload_time": "2020-02-11T09:03:33", "upload_time_iso_8601": "2020-02-11T09:03:33.705054Z", "url": "https://files.pythonhosted.org/packages/31/a9/0ea1d8a27a0c0c22e65da7d8505d99149807661ffcaea4f69193fb7fe540/esy_osmfilter-1.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c4a0003f74fa399838560dd46be346f7", "sha256": "6b57dd628cf38e3c1d1ce296da94f944667b6e3ac88ce94416483e8590351b85"}, "downloads": -1, "filename": "esy-osmfilter-1.0.7.tar.gz", "has_sig": false, "md5_digest": "c4a0003f74fa399838560dd46be346f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17684, "upload_time": "2020-02-11T09:03:35", "upload_time_iso_8601": "2020-02-11T09:03:35.181864Z", "url": "https://files.pythonhosted.org/packages/2d/a1/9ed24467788d2c727521554e1abc09c9f2acb312753e44d9b9fec7427395/esy-osmfilter-1.0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:33 2020"}