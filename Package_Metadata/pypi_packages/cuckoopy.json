{"info": {"author": "Rajath Agasthya", "author_email": "rajathagasthya@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "cuckoopy: Pure Python implementation of Cuckoo Filter\n=====================================================\n\n.. image:: https://img.shields.io/pypi/v/cuckoopy.svg\n    :target: https://pypi.python.org/pypi/cuckoopy\n\n.. image:: https://img.shields.io/pypi/l/cuckoopy.svg\n    :target: https://pypi.python.org/pypi/cuckoopy\n\n.. image:: https://img.shields.io/pypi/wheel/cuckoopy.svg\n    :target: https://pypi.python.org/pypi/cuckoopy\n\n.. image:: https://img.shields.io/pypi/pyversions/cuckoopy.svg\n    :target: https://pypi.python.org/pypi/cuckoopy\n\n.. image:: https://travis-ci.org/rajathagasthya/cuckoopy.svg?branch=master\n    :target: https://travis-ci.org/rajathagasthya/cuckoopy\n\n\nCuckoo Filter, like Bloom Filter, is a probabilistic data structure for fast,\napproximate set membership queries, with some small false positive probability.\nWhile Bloom Filters are space efficient and are widely used, they do not\nsupport deletion of items from the set without rebuilding the entire filter.\nThis can be overcome with several extensions to Bloom Filters such as\nCounting Bloom Filters, but with significant space overhead.\n\nCuckoo Filters support adding and removing items dynamically while achieving\nhigher performance than Bloom filters. A Cuckoo Filter is based on partial-key\ncuckoo hashing that stores only fingerprint of each item inserted. Cuckoo\nFilters provide higher lookup performance than Bloom Filters and uses less\nspace than Bloom Filters if the target false positive rate is < 3%.\n\nThe original research paper `Cuckoo Filter: Practically Better Than Bloom\n<https://www.cs.cmu.edu/~dga/papers/cuckoo-conext2014.pdf>`_ by Bin Fan,\nDavid G. Andersen, Michael Kaminsky and Michael D. Mitzenmacher\ndescribes the data structure in more detail.\n\n\nInstallation\n------------\nMake sure you have Python_ (3.5+) installed on your system. If you don't have\nit, follow `these instructions <https://docs.python.org/3/using/index.html>`_\nto install it.\n\n.. _Python: https://www.python.org/\n\nInstall cuckoopy using:\n\n.. code-block::\n\n    $ pip install cuckoopy\n\n\nUsage\n-----\n.. code-block:: python\n\n    >>> from cuckoopy import CuckooFilter\n    # Initialize a cuckoo filter with 10000 buckets with bucket size 4 and fingerprint size of 1 byte\n    >>> cf = CuckooFilter(capacity=10000, bucket_size=4, fingerprint_size=1)\n\nInsert an item into the filter:\n\n.. code-block:: python\n\n    >>> cf.insert('Hello!')\n    True\n\nLookup an item in the filter:\n\n.. code-block:: python\n\n    >>> cf.contains('Hello!')\n    True\n    >>> 'Hello!' in cf\n    True\n\nDelete an item from the filter:\n\n.. code-block:: python\n\n    >>> cf.delete('Hello!')\n    True\n\nGet the size (number of items present) of the filter:\n\n.. code-block:: python\n\n    >>> cf.size\n    4\n    >>> len(cf)\n    4\n\n\nRunning tests locally\n---------------------\nThis project uses `pytest <http://docs.pytest.org>`_ for tests. Make sure you\nhave ``tox`` installed on your local machine and from the root directory of the\nproject, run:\n\n.. code-block::\n\n    $ tox\n\nThis command runs unit tests in python 3.5 and python 3.6 environments with\ncode coverage details. It also runs pep8 (flake8) checks. To run tox against a\nspecific environment (py35, py36 or pep8), use the ``-e`` option.\n\n\nLicense\n-------\n`MIT License <https://github.com/rajathagasthya/cuckoopy/blob/master/LICENSE>`_\n\n\nUseful Links\n------------\n* `Probabilistic Filters By Example <https://bdupras.github.io/filter-tutorial/>`_\n* `Original C++ implementation by the authors of the research paper <https://github.com/efficient/cuckoofilter/>`_", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rajathagasthya/cuckoopy", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cuckoopy", "package_url": "https://pypi.org/project/cuckoopy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cuckoopy/", "project_urls": {"Homepage": "https://github.com/rajathagasthya/cuckoopy"}, "release_url": "https://pypi.org/project/cuckoopy/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Cuckoo Filter implementation in Python", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/cuckoopy\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/cuckoopy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d297ebae40ffe35c26f0e687b709a0e5a4a02d0c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6375636b6f6f70792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cuckoopy\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/cuckoopy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7e5e3a310468a235e3d8796b42ab9c550f9d15c2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6375636b6f6f70792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cuckoopy\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/wheel/cuckoopy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7535fec29d6f477654c99aa11ad537072de9e30/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f6375636b6f6f70792e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/cuckoopy\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/cuckoopy.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fc555c3eef81f22c56fbfe98c4bc864bd88a59cd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6375636b6f6f70792e737667\"></a>\n<a href=\"https://travis-ci.org/rajathagasthya/cuckoopy\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/rajathagasthya/cuckoopy.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/10692aad6b0ef089a76a0b51ebd48ba9886c3a76/68747470733a2f2f7472617669732d63692e6f72672f72616a61746861676173746879612f6375636b6f6f70792e7376673f6272616e63683d6d6173746572\"></a>\n<p>Cuckoo Filter, like Bloom Filter, is a probabilistic data structure for fast,\napproximate set membership queries, with some small false positive probability.\nWhile Bloom Filters are space efficient and are widely used, they do not\nsupport deletion of items from the set without rebuilding the entire filter.\nThis can be overcome with several extensions to Bloom Filters such as\nCounting Bloom Filters, but with significant space overhead.</p>\n<p>Cuckoo Filters support adding and removing items dynamically while achieving\nhigher performance than Bloom filters. A Cuckoo Filter is based on partial-key\ncuckoo hashing that stores only fingerprint of each item inserted. Cuckoo\nFilters provide higher lookup performance than Bloom Filters and uses less\nspace than Bloom Filters if the target false positive rate is &lt; 3%.</p>\n<p>The original research paper <a href=\"https://www.cs.cmu.edu/~dga/papers/cuckoo-conext2014.pdf\" rel=\"nofollow\">Cuckoo Filter: Practically Better Than Bloom</a> by Bin Fan,\nDavid G. Andersen, Michael Kaminsky and Michael D. Mitzenmacher\ndescribes the data structure in more detail.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Make sure you have <a href=\"https://www.python.org/\" rel=\"nofollow\">Python</a> (3.5+) installed on your system. If you don\u2019t have\nit, follow <a href=\"https://docs.python.org/3/using/index.html\" rel=\"nofollow\">these instructions</a>\nto install it.</p>\n<p>Install cuckoopy using:</p>\n<pre>$ pip install cuckoopy\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">cuckoopy</span> <span class=\"kn\">import</span> <span class=\"n\">CuckooFilter</span>\n<span class=\"c1\"># Initialize a cuckoo filter with 10000 buckets with bucket size 4 and fingerprint size of 1 byte</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CuckooFilter</span><span class=\"p\">(</span><span class=\"n\">capacity</span><span class=\"o\">=</span><span class=\"mi\">10000</span><span class=\"p\">,</span> <span class=\"n\">bucket_size</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">fingerprint_size</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<p>Insert an item into the filter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"s1\">'Hello!'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Lookup an item in the filter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">contains</span><span class=\"p\">(</span><span class=\"s1\">'Hello!'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"s1\">'Hello!'</span> <span class=\"ow\">in</span> <span class=\"n\">cf</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Delete an item from the filter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"s1\">'Hello!'</span><span class=\"p\">)</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>Get the size (number of items present) of the filter:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">size</span>\n<span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">cf</span><span class=\"p\">)</span>\n<span class=\"mi\">4</span>\n</pre>\n</div>\n<div id=\"running-tests-locally\">\n<h2>Running tests locally</h2>\n<p>This project uses <a href=\"http://docs.pytest.org\" rel=\"nofollow\">pytest</a> for tests. Make sure you\nhave <tt>tox</tt> installed on your local machine and from the root directory of the\nproject, run:</p>\n<pre>$ tox\n</pre>\n<p>This command runs unit tests in python 3.5 and python 3.6 environments with\ncode coverage details. It also runs pep8 (flake8) checks. To run tox against a\nspecific environment (py35, py36 or pep8), use the <tt><span class=\"pre\">-e</span></tt> option.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p><a href=\"https://github.com/rajathagasthya/cuckoopy/blob/master/LICENSE\" rel=\"nofollow\">MIT License</a></p>\n</div>\n<div id=\"useful-links\">\n<h2>Useful Links</h2>\n<ul>\n<li><a href=\"https://bdupras.github.io/filter-tutorial/\" rel=\"nofollow\">Probabilistic Filters By Example</a></li>\n<li><a href=\"https://github.com/efficient/cuckoofilter/\" rel=\"nofollow\">Original C++ implementation by the authors of the research paper</a></li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2632454, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d9532d3c474a4592027b667c3ede77d9", "sha256": "704549e651ca03e17ffecf4f5810ee63896dcc6c452c3c4d3a9fd51b3c788aff"}, "downloads": -1, "filename": "cuckoopy-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d9532d3c474a4592027b667c3ede77d9", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 9155, "upload_time": "2017-02-09T08:27:10", "upload_time_iso_8601": "2017-02-09T08:27:10.276251Z", "url": "https://files.pythonhosted.org/packages/0b/c6/429b387caf14466ff34808d19c6c717e53f2962c5ffe445604d23c42869a/cuckoopy-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47bfb849b03d5d45b5b37216ae6218f6", "sha256": "e67f601d9417bbd8bcae54a994882f598636e876e3148f0c27720f34a7056b05"}, "downloads": -1, "filename": "cuckoopy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "47bfb849b03d5d45b5b37216ae6218f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5598, "upload_time": "2017-02-09T08:27:08", "upload_time_iso_8601": "2017-02-09T08:27:08.852904Z", "url": "https://files.pythonhosted.org/packages/4c/c9/0a4ea7930bc565df4a8f7dd8a9bba27cbdba83b0904e09e36b1005bcc70c/cuckoopy-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b945723575f7017b15c6cd9941c04a5d", "sha256": "7c9a13420753d357df7ced76e8ecc11da1d2e91ede7a546f4ecc6d3de2b50746"}, "downloads": -1, "filename": "cuckoopy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b945723575f7017b15c6cd9941c04a5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7899, "upload_time": "2017-02-10T04:44:24", "upload_time_iso_8601": "2017-02-10T04:44:24.983664Z", "url": "https://files.pythonhosted.org/packages/37/44/4ce1f48668c48808e5458d16f3e771146c3d32dfb62d8b5d4a355dd2a9e4/cuckoopy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cad3533bd02d7c64d85c01b11f936479", "sha256": "f89e64ce38414f98c7e032a7590bffd540e422798270f839889e0e479018a8b2"}, "downloads": -1, "filename": "cuckoopy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cad3533bd02d7c64d85c01b11f936479", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5626, "upload_time": "2017-02-10T04:44:26", "upload_time_iso_8601": "2017-02-10T04:44:26.885853Z", "url": "https://files.pythonhosted.org/packages/8e/41/65cdc4812f7771c0ee3618ea3f676cadab78261f1eef132f3af4a930f35b/cuckoopy-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b945723575f7017b15c6cd9941c04a5d", "sha256": "7c9a13420753d357df7ced76e8ecc11da1d2e91ede7a546f4ecc6d3de2b50746"}, "downloads": -1, "filename": "cuckoopy-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "b945723575f7017b15c6cd9941c04a5d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7899, "upload_time": "2017-02-10T04:44:24", "upload_time_iso_8601": "2017-02-10T04:44:24.983664Z", "url": "https://files.pythonhosted.org/packages/37/44/4ce1f48668c48808e5458d16f3e771146c3d32dfb62d8b5d4a355dd2a9e4/cuckoopy-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cad3533bd02d7c64d85c01b11f936479", "sha256": "f89e64ce38414f98c7e032a7590bffd540e422798270f839889e0e479018a8b2"}, "downloads": -1, "filename": "cuckoopy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cad3533bd02d7c64d85c01b11f936479", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5626, "upload_time": "2017-02-10T04:44:26", "upload_time_iso_8601": "2017-02-10T04:44:26.885853Z", "url": "https://files.pythonhosted.org/packages/8e/41/65cdc4812f7771c0ee3618ea3f676cadab78261f1eef132f3af4a930f35b/cuckoopy-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:27 2020"}