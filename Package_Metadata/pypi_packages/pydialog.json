{"info": {"author": "Nic Roland", "author_email": "nicroland9@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: User Interfaces"], "description": "# pydialog\n\n__Command line dialogs made easy.__\n\n## Installation\n\nFrom github:\n\n```\ngit clone https://github.com/nicr9/pydialog.git\ncd pydialog\nsudo python2.7 setup.py install\n```\n\n## Examples\n\nFirst things first, import `Dialog`:\n\n```\nfrom pydialog import Dialog\n```\n\nThis is used to make a variety of different dialogs for collecting user input.\n\nFor example, asking user for a string:\n\n```\nd = Dialog(\"What's your name?\")\nd.input() # This blocks until user answers\n\nprint \"Hello %s\" % d.result\n```\n\nYou can also ask the user to choose from a selection:\n\n```\nd = Dialog(\"Which do you prefer?\")\nd.choose(['cake', 'chocolate'])\n\nprint \"I like %s too!\" % d.result\n```\n\nOr maybe you just want the answer to a yes/no question?:\n\n```\nd = Dialog(\"Do you want to quit?\")\nd.yesno()\n\nif d.result:\n    quit()\n```\n\nFinally, you can also ask users for passwords. This is like the `Dialog.input()`\nmethod shown above but it doesn't display what the user is typing:\n\n```\nd = Dialog(\"Please enter your password\")\nd.secret()\n\nsign_in(username, d.result)\n```\n\n## Author\n\nName: Nic Roland<br>\nTwitter: [@nicr9_](https://twitter.com/nicr9_)<br>\nemail: nicroland9@gmail.com\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/nicr9/pydialog/tarball/v0.1", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nicr9/pydialog", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pydialog", "package_url": "https://pypi.org/project/pydialog/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pydialog/", "project_urls": {"Download": "https://github.com/nicr9/pydialog/tarball/v0.1", "Homepage": "https://github.com/nicr9/pydialog"}, "release_url": "https://pypi.org/project/pydialog/v0.1/", "requires_dist": null, "requires_python": null, "summary": "Command line dialogs made easy.", "version": "v0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # pydialog<br><br>__Command line dialogs made easy.__<br><br>## Installation<br><br>From github:<br><br>```<br>git clone https://github.com/nicr9/pydialog.git<br>cd pydialog<br>sudo python2.7 setup.py install<br>```<br><br>## Examples<br><br>First things first, import `Dialog`:<br><br>```<br>from pydialog import Dialog<br>```<br><br>This is used to make a variety of different dialogs for collecting user input.<br><br>For example, asking user for a string:<br><br>```<br>d = Dialog(\"What's your name?\")<br>d.input() # This blocks until user answers<br><br>print \"Hello %s\" % d.result<br>```<br><br>You can also ask the user to choose from a selection:<br><br>```<br>d = Dialog(\"Which do you prefer?\")<br>d.choose(['cake', 'chocolate'])<br><br>print \"I like %s too!\" % d.result<br>```<br><br>Or maybe you just want the answer to a yes/no question?:<br><br>```<br>d = Dialog(\"Do you want to quit?\")<br>d.yesno()<br><br>if d.result:<br>    quit()<br>```<br><br>Finally, you can also ask users for passwords. This is like the `Dialog.input()`<br>method shown above but it doesn't display what the user is typing:<br><br>```<br>d = Dialog(\"Please enter your password\")<br>d.secret()<br><br>sign_in(username, d.result)<br>```<br><br>## Author<br><br>Name: Nic Roland&lt;br&gt;<br>Twitter: [@nicr9_](https://twitter.com/nicr9_)&lt;br&gt;<br>email: nicroland9@gmail.com<br>\n          </div>"}, "last_serial": 1549818, "releases": {"v0.1": [{"comment_text": "", "digests": {"md5": "1575814c3fb4c7c89bb139225a8347ab", "sha256": "0cf733849d794cc25467ce00329fe2170898408901e9e82430f939379f66f7ff"}, "downloads": -1, "filename": "pydialog-v0.1.tar.gz", "has_sig": false, "md5_digest": "1575814c3fb4c7c89bb139225a8347ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3004, "upload_time": "2015-05-16T19:04:26", "upload_time_iso_8601": "2015-05-16T19:04:26.698017Z", "url": "https://files.pythonhosted.org/packages/41/11/adfd88cdcc3d519a78e03a9a43191638fc404bd20dfb3f7cb946bce2aabe/pydialog-v0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1575814c3fb4c7c89bb139225a8347ab", "sha256": "0cf733849d794cc25467ce00329fe2170898408901e9e82430f939379f66f7ff"}, "downloads": -1, "filename": "pydialog-v0.1.tar.gz", "has_sig": false, "md5_digest": "1575814c3fb4c7c89bb139225a8347ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3004, "upload_time": "2015-05-16T19:04:26", "upload_time_iso_8601": "2015-05-16T19:04:26.698017Z", "url": "https://files.pythonhosted.org/packages/41/11/adfd88cdcc3d519a78e03a9a43191638fc404bd20dfb3f7cb946bce2aabe/pydialog-v0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:03 2020"}