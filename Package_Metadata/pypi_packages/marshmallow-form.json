{"info": {"author": "podhmo", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: Implementation :: CPython"], "description": "marshmallow-form\n========================================\n\nmotivation\n----------------------------------------\n\nform library is not validation library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWhat is form library?\n\n- anyone says, 'it is validation library for post/get data'\n- another says, 'it is rendering library for form element'\n\nmarshmallow-form is not above one.\nform library is 'a container for presentation metadata'. so, form object is just a container.\n\n- 'rendering form element', it is a task of template library(mako, jinja2, ...).\n- 'validation post/get data', it is a task of schema library(colander, marshmallow, ...).\n\nmarshmallow-form is just a metadata container.\n\nfeatures\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- having metadata anywhere\n- nested field support\n- accessing schema\n- building your own form library\n\n\ngetting started\n----------------------------------------\n\ninstall\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nfrom pypi package repository.\n\n::\n\n   # pip install marshmallow-form\n\nfrom repository\n\n::\n\n   git clone git@github.com/podhmo/marshmallow-form.git\n   cd marshmallow-form\n   python setup.py develop\n\n\nform class definition\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nthe way of form definition.\n\n.. code-block:: python\n\n  import marshmallow_form as mf\n\n\n  class PersonForm(mf.Form):\n      name = mf.String(label=\"\u540d\u524d\", placeholder=\"foo\", widget=\"str\")\n      age = mf.Integer(label=\"\u5e74\u9f62\", placeholder=\"0\", widget=\"int\")\n\n\n  class ParentsForm(mf.Form):\n      father = mf.Nested(PersonForm, label=\"\u7236\u89aa\")\n      mother = mf.Nested(PersonForm, label=\"\u6bcd\u89aa\")\n\n- define form class with marshmallow_form.Form\n- using field classes, define form fields.\n- label and placeholder is metadata for presentation\n\n\nwith template library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nwith template library, form is just a metadata container.\nso, a above definition, using form as metadata container.\n\n\n.. code-block:: python\n\n  print(form.father.name[\"label\"]) # => '\u540d\u524d'  # 'name' in japanese\n  print(form.father.name[\"placeholder\"]) # => 'foo'\n  print(form.name.value) # => 'foo'\n\n- accessing metadata with `__getitem__`.\n- accessing initial data or passed data with `.value`\n\n\nwith template(mako). deciding rendering method, using `widget` metadata.\n\n.. code-block:: python\n\n  from mako.template import Template\n\n  template = Template(\"\"\"\n  <%def name=\"field(f)\">\\\n    ${getattr(self, \"field_\" + f[\"widget\"])(f)}\n  </%def>\n\n  <%def name=\"field_str(f)\">\\\n    <input type=\"text\" name=\"${f.name}\" value=\"${f.value}\" placeholder=\"${f[\"placeholder\"]}\"/>\n  </%def>\n\n  <%def name=\"field_int(f)\">\\\n    <input type=\"number\" name=\"${f.name}\" value=\"${f.value}\" placeholder=\"${f[\"placeholder\"]}\"/>\n  </%def>\n\n  <form action=\"#\" method=\"POST\">\n  %for f in form:\n  ${field(f)}\n  %endfor\n  </form>\n  \"\"\")\n\n  print(template.render(form=form))\n\noutput.\n\n.. code-block:: html\n\n  <form action=\"#\" method=\"POST\">\n      <input type=\"text\" name=\"father.name\" value=\"\" placeholder=\"foo\"/>\n      <input type=\"number\" name=\"father.age\" value=\"0\" placeholder=\"0\"/>\n      <input type=\"text\" name=\"mother.name\" value=\"\" placeholder=\"foo\"/>\n      <input type=\"number\" name=\"mother.age\" value=\"0\" placeholder=\"0\"/>\n  </form>\n\nvalidation\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code-block:: python\n\n  from marshmallow.validate import Length\n  from marshmallow import ValidationError\n\n\n  class MLength(Length):\n      message_min = 'Too short! {min}.'\n      message_max = 'Too long! {max}.'\n\n\n  class AuthenticationForm(mf.Form):\n      name = mf.String()\n      password = mf.String(validate=MLength(5))\n      password_confirm = mf.String()\n\n      @mf.Form.validator\n      def same(schema, data):\n          if data[\"password\"] != data[\"password_confirm\"]:\n              raise ValidationError(\"not same!\", \"password\")\n\n\n  input_data = {\"name\": \"foo\", \"password\": \"*\", \"password_confirm\": \"+\"}\n  form = AuthenticationForm(input_data)\n  print(form.validate())  # False\n  print(form.errors) # {'password': ['Too short! 5.', 'not same!']}\n  {'password': ['Too short! 5.', 'not same!']}\n\n\ndetail\n----------------------------------------\n\nhaving metadata anywhere\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- form metadata\n- field metadata\n- metadata inheritance\n- metadata override\n\nform metadata\n\n.. code-block:: python\n\n  import marshmallow_form as mf\n\n\n  class MyForm(mf.Form):\n      name = mf.Str()\n\n      class Meta:\n          metadata = {\"action\": \"#\"}\n\n  form = MyForm()\n  form[\"action\"]  # => #\n  form.metadata[\"method\"] = \"post\"\n  form[\"method\"]  # => \"post\"\n\n  MyForm()[\"method\"]  # => \"\"\n\n\nfield metadata\n\n.. code-block:: python\n\n  class MyForm2(mf.Form):\n      name = mf.Str()\n      ctime = mf.DateTime(disable=True)\n\n\n  form = MyForm2()\n  form.ctime[\"disable\"]  # => True\n\nmetadata inheritance\n\n.. code-block:: python\n\n  from functools import partial\n  DateTime = partial(mf.DateTime, widget=\"tdcalendar\")\n\n\n  class MyForm3(mf.Form):\n      ctime = DateTime()\n      utime = DateTime()\n\n  form = MyForm3()\n  form.ctime[\"widget\"]  # => \"tdcalendar\"\n  form.utime[\"widget\"]  # => \"tdcalendar\"\n\nmetadata override\n\n.. code-block:: python\n\n  class MyForm4(MyForm3):\n      class Meta:\n          overrides = {\"ctime\": {\"widget\": \"mycalendar\"}}\n\n\n  form = MyForm4()\n  form.ctime[\"widget\"]  # => \"mycalendar\"\n  form.utime[\"widget\"]  # => \"tdcalendar\"\n\nor with nested\n\n.. code-block:: python\n\n  class PersonForm(mf.Form):\n      name = mf.String(label=\"\u540d\u524d\", placeholder=\"foo\", widget=\"str\")\n      age = mf.Integer(label=\"\u5e74\u9f62\", placeholder=\"0\", widget=\"int\")\n\n\n  class ParentsForm(mf.Form):\n      father = mf.Nested(PersonForm, label=\"\u7236\u89aa\", overrides={\"name\": {\"label\": \"\u7236\u89aa\u306e\u540d\u524d\"}})\n      mother = mf.Nested(PersonForm, label=\"\u6bcd\u89aa\")\n\n  form = ParentsForm()\n  form.father[\"label\"]  # => \"\u7236\u89aa\"\n  form.father.name[\"label\"]  # => \"\u7236\u89aa\u306e\u540d\u524d\"\n  form.mother.name[\"label\"]  # => \"\u540d\u524d\"\n\n\ndynamic form\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- modify field\n- add field\n- remove field\n\nmodify field\n\n.. code-block:: python\n\n  form = StudentForm()\n  form.color.metadata[\"pairs\"] = [(\"red\", \"red\"), (\"blue\", \"blue\")]\n  form.color[\"pairs\"]  # => [('red', 'red'), ('blue', 'blue')]\n\n\nadd field\n\n.. code-block:: python\n\n  class StudentForm(mf.Form):\n      color = mf.Select([])\n      name = mf.Str()\n\n  form = StudentForm(initial={\"grade\": 3})\n  form.add_field(\"grade\", mf.Int(label=\"\u5b66\u5e74\"))\n  form.grade.value  # => 3\n  form.grade[\"label\"]  # => \"\u5b66\u5e74\"\n\n  [f.name for f in form]  # => ['color', 'name', 'grade']\n\nremove field\n\n.. code-block:: python\n\n  form = StudentForm()\n  form.remove_field(\"color\")\n\n  [f.name for f in form]  # => ['name']\n\n\n\naccessing schema\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- schema class\n- schema instance\n\nschema class\n\n.. code-block:: python\n\n  from collections import namedtuple\n  Person = namedtuple(\"Person\", \"name age\")\n\n\n  class PersonForm(mf.Form):\n      name = mf.Str()\n      age = mf.Int()\n\n      def make_object(self, data):\n          return Person(**data)\n\n  PersonForm.Schema  # => <class 'marshmallow.schema.PersonSchema'>\n\n  schema = PersonForm.Schema(many=True)\n  schema.dump([Person(\"foo\", 20), Person(\"bar\", 20)]).data\n  # => OrderedDict([('name', 'foo'), ('age', 20)]), OrderedDict([('name', 'bar'), ('age', 20)])\n\nschema instance\n\n.. code-block:: python\n\n  form = PersonForm()\n  form.schema.load({\"name\": \"foo\", \"age\": 20}).data  # => Person(name='foo', age=20)\n\n\nbuilding your own form library\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- define your form field class\n- define the way of rendering\n\ndefine your form field class\n\nif just only adding default metadata, using functools.partial.\n\n.. code-block:: python\n\n  import functools\n  PositiveInt = functools.partial(mf.Int, validate=lambda x: x > 0)\n\n  class Form(mf.Form):\n      x = PositiveInt()\n\n  print(Form({\"x\": \"-10\"}).load())\n  # UnmarshalResult(data=OrderedDict([('x', None)]), errors={'x': ['Validator <lambda>(-10) is False']})\n\nif define your own field class\n\n.. code-block:: python\n\n  from marshmallow.fields import Field\n  from marshmallow.exceptions import UnmarshallingError\n  import base64\n\n\n  class Base64(Field):\n      \"\"\" tiny base64 field\"\"\"\n      def __init__(self, *args, **kwargs):\n          super(Base64, self).__init__(*args, **kwargs)\n\n      def _serialize(self, value, attr, obj):\n          return base64.encodebytes(value)\n\n      def _deserialize(self, value):\n          try:\n              return base64.decodebytes(value.encode(\"utf-8\"))\n          except:\n              raise UnmarshallingError(\"oops\")\n\n  MyBase64 = mf.field_factory(Base64)\n\n\n  class Form(mf.Form):\n      x = MyBase64(label=\"this is broken\")\n\n  form = Form({\"x\": \"MTEx\"})\n  print(form.load())\n  # UnmarshalResult(data=OrderedDict([('x', b'111')]), errors={})\n\ndefine the way of rendering\n\n.. code-block:: python\n\n  def input(field, placeholder=\"\"):\n      fmt = '<input name=\"{name}\" value=\"{value}\" placeholder=\"{placeholder}\">'\n      return fmt.format(name=field[\"name\"], value=field.value, placeholder=placeholder)\n\n\n  class Form(mf.Form):\n      name = mf.Str(__call__=input)\n\n  form = Form()\n  print(form.name(placeholder=\"foo\"))\n  # => <input name=\"\" value=\"\" placeholder=\"foo\">", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/podhmo/marshmallow-form", "keywords": "marshmallow,form", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "marshmallow-form", "package_url": "https://pypi.org/project/marshmallow-form/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/marshmallow-form/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/podhmo/marshmallow-form"}, "release_url": "https://pypi.org/project/marshmallow-form/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "a wrapper of marshmallow for form library like behavior", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"motivation\">\n<h2>motivation</h2>\n<div id=\"form-library-is-not-validation-library\">\n<h3>form library is not validation library</h3>\n<p>What is form library?</p>\n<ul>\n<li>anyone says, \u2018it is validation library for post/get data\u2019</li>\n<li>another says, \u2018it is rendering library for form element\u2019</li>\n</ul>\n<p>marshmallow-form is not above one.\nform library is \u2018a container for presentation metadata\u2019. so, form object is just a container.</p>\n<ul>\n<li>\u2018rendering form element\u2019, it is a task of template library(mako, jinja2, \u2026).</li>\n<li>\u2018validation post/get data\u2019, it is a task of schema library(colander, marshmallow, \u2026).</li>\n</ul>\n<p>marshmallow-form is just a metadata container.</p>\n</div>\n<div id=\"features\">\n<h3>features</h3>\n<ul>\n<li>having metadata anywhere</li>\n<li>nested field support</li>\n<li>accessing schema</li>\n<li>building your own form library</li>\n</ul>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>getting started</h2>\n<div id=\"install\">\n<h3>install</h3>\n<p>from pypi package repository.</p>\n<pre># pip install marshmallow-form\n</pre>\n<p>from repository</p>\n<pre>git clone git@github.com/podhmo/marshmallow-form.git\ncd marshmallow-form\npython setup.py develop\n</pre>\n</div>\n<div id=\"form-class-definition\">\n<h3>form class definition</h3>\n<p>the way of form definition.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">marshmallow_form</span> <span class=\"k\">as</span> <span class=\"nn\">mf</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u540d\u524d\"</span><span class=\"p\">,</span> <span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"s2\">\"str\"</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u5e74\u9f62\"</span><span class=\"p\">,</span> <span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"s2\">\"0\"</span><span class=\"p\">,</span> <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"s2\">\"int\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ParentsForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">father</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Nested</span><span class=\"p\">(</span><span class=\"n\">PersonForm</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u7236\u89aa\"</span><span class=\"p\">)</span>\n    <span class=\"n\">mother</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Nested</span><span class=\"p\">(</span><span class=\"n\">PersonForm</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u6bcd\u89aa\"</span><span class=\"p\">)</span>\n</pre>\n<ul>\n<li>define form class with marshmallow_form.Form</li>\n<li>using field classes, define form fields.</li>\n<li>label and placeholder is metadata for presentation</li>\n</ul>\n</div>\n<div id=\"with-template-library\">\n<h3>with template library</h3>\n<p>with template library, form is just a metadata container.\nso, a above definition, using form as metadata container.</p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">father</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"s2\">\"label\"</span><span class=\"p\">])</span> <span class=\"c1\"># =&gt; '\u540d\u524d'  # 'name' in japanese</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">father</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"s2\">\"placeholder\"</span><span class=\"p\">])</span> <span class=\"c1\"># =&gt; 'foo'</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">)</span> <span class=\"c1\"># =&gt; 'foo'</span>\n</pre>\n<ul>\n<li>accessing metadata with <cite>__getitem__</cite>.</li>\n<li>accessing initial data or passed data with <cite>.value</cite></li>\n</ul>\n<p>with template(mako). deciding rendering method, using <cite>widget</cite> metadata.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mako.template</span> <span class=\"kn\">import</span> <span class=\"n\">Template</span>\n\n<span class=\"n\">template</span> <span class=\"o\">=</span> <span class=\"n\">Template</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"\n&lt;</span><span class=\"si\">%d</span><span class=\"s2\">ef name=\"field(f)\"&gt;</span><span class=\"se\">\\\n</span><span class=\"s2\">  ${getattr(self, \"field_\" + f[\"widget\"])(f)}\n&lt;/</span><span class=\"si\">%d</span><span class=\"s2\">ef&gt;\n\n&lt;</span><span class=\"si\">%d</span><span class=\"s2\">ef name=\"field_str(f)\"&gt;</span><span class=\"se\">\\\n</span><span class=\"s2\">  &lt;input type=\"text\" name=\"$</span><span class=\"si\">{f.name}</span><span class=\"s2\">\" value=\"$</span><span class=\"si\">{f.value}</span><span class=\"s2\">\" placeholder=\"$</span><span class=\"si\">{f[\"placeholder\"]}</span><span class=\"s2\">\"/&gt;\n&lt;/</span><span class=\"si\">%d</span><span class=\"s2\">ef&gt;\n\n&lt;</span><span class=\"si\">%d</span><span class=\"s2\">ef name=\"field_int(f)\"&gt;</span><span class=\"se\">\\\n</span><span class=\"s2\">  &lt;input type=\"number\" name=\"$</span><span class=\"si\">{f.name}</span><span class=\"s2\">\" value=\"$</span><span class=\"si\">{f.value}</span><span class=\"s2\">\" placeholder=\"$</span><span class=\"si\">{f[\"placeholder\"]}</span><span class=\"s2\">\"/&gt;\n&lt;/</span><span class=\"si\">%d</span><span class=\"s2\">ef&gt;\n\n&lt;form action=\"#\" method=\"POST\"&gt;\n</span><span class=\"si\">%f</span><span class=\"s2\">or f in form:\n${field(f)}\n</span><span class=\"si\">%e</span><span class=\"s2\">ndfor\n&lt;/form&gt;\n\"\"\"</span><span class=\"p\">)</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">template</span><span class=\"o\">.</span><span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">=</span><span class=\"n\">form</span><span class=\"p\">))</span>\n</pre>\n<p>output.</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">action</span><span class=\"o\">=</span><span class=\"s\">\"#\"</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">\"POST\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"father.name\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"\"</span> <span class=\"na\">placeholder</span><span class=\"o\">=</span><span class=\"s\">\"foo\"</span><span class=\"p\">/&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"number\"</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"father.age\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"0\"</span> <span class=\"na\">placeholder</span><span class=\"o\">=</span><span class=\"s\">\"0\"</span><span class=\"p\">/&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"text\"</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"mother.name\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"\"</span> <span class=\"na\">placeholder</span><span class=\"o\">=</span><span class=\"s\">\"foo\"</span><span class=\"p\">/&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">input</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"number\"</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"mother.age\"</span> <span class=\"na\">value</span><span class=\"o\">=</span><span class=\"s\">\"0\"</span> <span class=\"na\">placeholder</span><span class=\"o\">=</span><span class=\"s\">\"0\"</span><span class=\"p\">/&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"validation\">\n<h3>validation</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">marshmallow.validate</span> <span class=\"kn\">import</span> <span class=\"n\">Length</span>\n<span class=\"kn\">from</span> <span class=\"nn\">marshmallow</span> <span class=\"kn\">import</span> <span class=\"n\">ValidationError</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MLength</span><span class=\"p\">(</span><span class=\"n\">Length</span><span class=\"p\">):</span>\n    <span class=\"n\">message_min</span> <span class=\"o\">=</span> <span class=\"s1\">'Too short! </span><span class=\"si\">{min}</span><span class=\"s1\">.'</span>\n    <span class=\"n\">message_max</span> <span class=\"o\">=</span> <span class=\"s1\">'Too long! </span><span class=\"si\">{max}</span><span class=\"s1\">.'</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AuthenticationForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">validate</span><span class=\"o\">=</span><span class=\"n\">MLength</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n    <span class=\"n\">password_confirm</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">()</span>\n\n    <span class=\"nd\">@mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"o\">.</span><span class=\"n\">validator</span>\n    <span class=\"k\">def</span> <span class=\"nf\">same</span><span class=\"p\">(</span><span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"password\"</span><span class=\"p\">]</span> <span class=\"o\">!=</span> <span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"password_confirm\"</span><span class=\"p\">]:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">ValidationError</span><span class=\"p\">(</span><span class=\"s2\">\"not same!\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">input_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password\"</span><span class=\"p\">:</span> <span class=\"s2\">\"*\"</span><span class=\"p\">,</span> <span class=\"s2\">\"password_confirm\"</span><span class=\"p\">:</span> <span class=\"s2\">\"+\"</span><span class=\"p\">}</span>\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">AuthenticationForm</span><span class=\"p\">(</span><span class=\"n\">input_data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">validate</span><span class=\"p\">())</span>  <span class=\"c1\"># False</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">errors</span><span class=\"p\">)</span> <span class=\"c1\"># {'password': ['Too short! 5.', 'not same!']}</span>\n<span class=\"p\">{</span><span class=\"s1\">'password'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'Too short! 5.'</span><span class=\"p\">,</span> <span class=\"s1\">'not same!'</span><span class=\"p\">]}</span>\n</pre>\n</div>\n</div>\n<div id=\"detail\">\n<h2>detail</h2>\n<div id=\"having-metadata-anywhere\">\n<h3>having metadata anywhere</h3>\n<ul>\n<li>form metadata</li>\n<li>field metadata</li>\n<li>metadata inheritance</li>\n<li>metadata override</li>\n</ul>\n<p>form metadata</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">marshmallow_form</span> <span class=\"k\">as</span> <span class=\"nn\">mf</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Str</span><span class=\"p\">()</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"#\"</span><span class=\"p\">}</span>\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">MyForm</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"p\">[</span><span class=\"s2\">\"action\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; #</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s2\">\"method\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"post\"</span>\n<span class=\"n\">form</span><span class=\"p\">[</span><span class=\"s2\">\"method\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"post\"</span>\n\n<span class=\"n\">MyForm</span><span class=\"p\">()[</span><span class=\"s2\">\"method\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"\"</span>\n</pre>\n<p>field metadata</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyForm2</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Str</span><span class=\"p\">()</span>\n    <span class=\"n\">ctime</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">DateTime</span><span class=\"p\">(</span><span class=\"n\">disable</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">MyForm2</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">[</span><span class=\"s2\">\"disable\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; True</span>\n</pre>\n<p>metadata inheritance</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">functools</span> <span class=\"kn\">import</span> <span class=\"n\">partial</span>\n<span class=\"n\">DateTime</span> <span class=\"o\">=</span> <span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">DateTime</span><span class=\"p\">,</span> <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"s2\">\"tdcalendar\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">MyForm3</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">ctime</span> <span class=\"o\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">()</span>\n    <span class=\"n\">utime</span> <span class=\"o\">=</span> <span class=\"n\">DateTime</span><span class=\"p\">()</span>\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">MyForm3</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">[</span><span class=\"s2\">\"widget\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"tdcalendar\"</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">utime</span><span class=\"p\">[</span><span class=\"s2\">\"widget\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"tdcalendar\"</span>\n</pre>\n<p>metadata override</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">MyForm4</span><span class=\"p\">(</span><span class=\"n\">MyForm3</span><span class=\"p\">):</span>\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">overrides</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"ctime\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"widget\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mycalendar\"</span><span class=\"p\">}}</span>\n\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">MyForm4</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">ctime</span><span class=\"p\">[</span><span class=\"s2\">\"widget\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"mycalendar\"</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">utime</span><span class=\"p\">[</span><span class=\"s2\">\"widget\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"tdcalendar\"</span>\n</pre>\n<p>or with nested</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">PersonForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">String</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u540d\u524d\"</span><span class=\"p\">,</span> <span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"s2\">\"str\"</span><span class=\"p\">)</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u5e74\u9f62\"</span><span class=\"p\">,</span> <span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"s2\">\"0\"</span><span class=\"p\">,</span> <span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"s2\">\"int\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">ParentsForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">father</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Nested</span><span class=\"p\">(</span><span class=\"n\">PersonForm</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u7236\u89aa\"</span><span class=\"p\">,</span> <span class=\"n\">overrides</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"label\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\u7236\u89aa\u306e\u540d\u524d\"</span><span class=\"p\">}})</span>\n    <span class=\"n\">mother</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Nested</span><span class=\"p\">(</span><span class=\"n\">PersonForm</span><span class=\"p\">,</span> <span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u6bcd\u89aa\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">ParentsForm</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">father</span><span class=\"p\">[</span><span class=\"s2\">\"label\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"\u7236\u89aa\"</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">father</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"s2\">\"label\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"\u7236\u89aa\u306e\u540d\u524d\"</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">mother</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">[</span><span class=\"s2\">\"label\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"\u540d\u524d\"</span>\n</pre>\n</div>\n<div id=\"dynamic-form\">\n<h3>dynamic form</h3>\n<ul>\n<li>modify field</li>\n<li>add field</li>\n<li>remove field</li>\n</ul>\n<p>modify field</p>\n<pre><span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">StudentForm</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s2\">\"pairs\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s2\">\"red\"</span><span class=\"p\">,</span> <span class=\"s2\">\"red\"</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s2\">\"blue\"</span><span class=\"p\">,</span> <span class=\"s2\">\"blue\"</span><span class=\"p\">)]</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">color</span><span class=\"p\">[</span><span class=\"s2\">\"pairs\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; [('red', 'red'), ('blue', 'blue')]</span>\n</pre>\n<p>add field</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">StudentForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">color</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Select</span><span class=\"p\">([])</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Str</span><span class=\"p\">()</span>\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">StudentForm</span><span class=\"p\">(</span><span class=\"n\">initial</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"grade\"</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">})</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">add_field</span><span class=\"p\">(</span><span class=\"s2\">\"grade\"</span><span class=\"p\">,</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"\u5b66\u5e74\"</span><span class=\"p\">))</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">grade</span><span class=\"o\">.</span><span class=\"n\">value</span>  <span class=\"c1\"># =&gt; 3</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">grade</span><span class=\"p\">[</span><span class=\"s2\">\"label\"</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; \"\u5b66\u5e74\"</span>\n\n<span class=\"p\">[</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">form</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; ['color', 'name', 'grade']</span>\n</pre>\n<p>remove field</p>\n<pre><span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">StudentForm</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">remove_field</span><span class=\"p\">(</span><span class=\"s2\">\"color\"</span><span class=\"p\">)</span>\n\n<span class=\"p\">[</span><span class=\"n\">f</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"n\">form</span><span class=\"p\">]</span>  <span class=\"c1\"># =&gt; ['name']</span>\n</pre>\n</div>\n<div id=\"accessing-schema\">\n<h3>accessing schema</h3>\n<ul>\n<li>schema class</li>\n<li>schema instance</li>\n</ul>\n<p>schema class</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">namedtuple</span>\n<span class=\"n\">Person</span> <span class=\"o\">=</span> <span class=\"n\">namedtuple</span><span class=\"p\">(</span><span class=\"s2\">\"Person\"</span><span class=\"p\">,</span> <span class=\"s2\">\"name age\"</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">PersonForm</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Str</span><span class=\"p\">()</span>\n    <span class=\"n\">age</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">make_object</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"n\">PersonForm</span><span class=\"o\">.</span><span class=\"n\">Schema</span>  <span class=\"c1\"># =&gt; &lt;class 'marshmallow.schema.PersonSchema'&gt;</span>\n\n<span class=\"n\">schema</span> <span class=\"o\">=</span> <span class=\"n\">PersonForm</span><span class=\"o\">.</span><span class=\"n\">Schema</span><span class=\"p\">(</span><span class=\"n\">many</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">([</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">),</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"s2\">\"bar\"</span><span class=\"p\">,</span> <span class=\"mi\">20</span><span class=\"p\">)])</span><span class=\"o\">.</span><span class=\"n\">data</span>\n<span class=\"c1\"># =&gt; OrderedDict([('name', 'foo'), ('age', 20)]), OrderedDict([('name', 'bar'), ('age', 20)])</span>\n</pre>\n<p>schema instance</p>\n<pre><span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">PersonForm</span><span class=\"p\">()</span>\n<span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">schema</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">({</span><span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"foo\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">:</span> <span class=\"mi\">20</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">data</span>  <span class=\"c1\"># =&gt; Person(name='foo', age=20)</span>\n</pre>\n</div>\n<div id=\"building-your-own-form-library\">\n<h3>building your own form library</h3>\n<ul>\n<li>define your form field class</li>\n<li>define the way of rendering</li>\n</ul>\n<p>define your form field class</p>\n<p>if just only adding default metadata, using functools.partial.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">functools</span>\n<span class=\"n\">PositiveInt</span> <span class=\"o\">=</span> <span class=\"n\">functools</span><span class=\"o\">.</span><span class=\"n\">partial</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Int</span><span class=\"p\">,</span> <span class=\"n\">validate</span><span class=\"o\">=</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Form</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">PositiveInt</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">Form</span><span class=\"p\">({</span><span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"s2\">\"-10\"</span><span class=\"p\">})</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">())</span>\n<span class=\"c1\"># UnmarshalResult(data=OrderedDict([('x', None)]), errors={'x': ['Validator &lt;lambda&gt;(-10) is False']})</span>\n</pre>\n<p>if define your own field class</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">marshmallow.fields</span> <span class=\"kn\">import</span> <span class=\"n\">Field</span>\n<span class=\"kn\">from</span> <span class=\"nn\">marshmallow.exceptions</span> <span class=\"kn\">import</span> <span class=\"n\">UnmarshallingError</span>\n<span class=\"kn\">import</span> <span class=\"nn\">base64</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Base64</span><span class=\"p\">(</span><span class=\"n\">Field</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\" tiny base64 field\"\"\"</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">(</span><span class=\"n\">Base64</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_serialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">attr</span><span class=\"p\">,</span> <span class=\"n\">obj</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">encodebytes</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">_deserialize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">base64</span><span class=\"o\">.</span><span class=\"n\">decodebytes</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s2\">\"utf-8\"</span><span class=\"p\">))</span>\n        <span class=\"k\">except</span><span class=\"p\">:</span>\n            <span class=\"k\">raise</span> <span class=\"n\">UnmarshallingError</span><span class=\"p\">(</span><span class=\"s2\">\"oops\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">MyBase64</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">field_factory</span><span class=\"p\">(</span><span class=\"n\">Base64</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Form</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">MyBase64</span><span class=\"p\">(</span><span class=\"n\">label</span><span class=\"o\">=</span><span class=\"s2\">\"this is broken\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">Form</span><span class=\"p\">({</span><span class=\"s2\">\"x\"</span><span class=\"p\">:</span> <span class=\"s2\">\"MTEx\"</span><span class=\"p\">})</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">())</span>\n<span class=\"c1\"># UnmarshalResult(data=OrderedDict([('x', b'111')]), errors={})</span>\n</pre>\n<p>define the way of rendering</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">input</span><span class=\"p\">(</span><span class=\"n\">field</span><span class=\"p\">,</span> <span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"s2\">\"\"</span><span class=\"p\">):</span>\n    <span class=\"n\">fmt</span> <span class=\"o\">=</span> <span class=\"s1\">'&lt;input name=\"</span><span class=\"si\">{name}</span><span class=\"s1\">\" value=\"</span><span class=\"si\">{value}</span><span class=\"s1\">\" placeholder=\"</span><span class=\"si\">{placeholder}</span><span class=\"s1\">\"&gt;'</span>\n    <span class=\"k\">return</span> <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">],</span> <span class=\"n\">value</span><span class=\"o\">=</span><span class=\"n\">field</span><span class=\"o\">.</span><span class=\"n\">value</span><span class=\"p\">,</span> <span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"n\">placeholder</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Form</span><span class=\"p\">(</span><span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Form</span><span class=\"p\">):</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">mf</span><span class=\"o\">.</span><span class=\"n\">Str</span><span class=\"p\">(</span><span class=\"fm\">__call__</span><span class=\"o\">=</span><span class=\"nb\">input</span><span class=\"p\">)</span>\n\n<span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">Form</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">(</span><span class=\"n\">placeholder</span><span class=\"o\">=</span><span class=\"s2\">\"foo\"</span><span class=\"p\">))</span>\n<span class=\"c1\"># =&gt; &lt;input name=\"\" value=\"\" placeholder=\"foo\"&gt;</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1531323, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "895badcedd3c0c637b67f4354048abe2", "sha256": "4eb3a09b82e90485dc8ec1b8a1ba0933bb87235e6274bd7ca9154a0139fcc8a2"}, "downloads": -1, "filename": "marshmallow-form-0.1.tar.gz", "has_sig": false, "md5_digest": "895badcedd3c0c637b67f4354048abe2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14241, "upload_time": "2015-03-30T14:28:59", "upload_time_iso_8601": "2015-03-30T14:28:59.586892Z", "url": "https://files.pythonhosted.org/packages/b0/2a/320c24df9bfdc4c4fa1da47c02a80b66ed9676beddc00adc13effa24b67b/marshmallow-form-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a9004bf1baec9c69b1e9c9e1d55be74f", "sha256": "aca64f216486eca357369c7e0f657f361fffc58953792714eeb407708d473f74"}, "downloads": -1, "filename": "marshmallow-form-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9004bf1baec9c69b1e9c9e1d55be74f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14998, "upload_time": "2015-05-03T10:15:43", "upload_time_iso_8601": "2015-05-03T10:15:43.277520Z", "url": "https://files.pythonhosted.org/packages/ca/e5/044b27fe396c2dca92fc6af1fc9666fc923f1481ff4cd6b36c01a096b365/marshmallow-form-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9004bf1baec9c69b1e9c9e1d55be74f", "sha256": "aca64f216486eca357369c7e0f657f361fffc58953792714eeb407708d473f74"}, "downloads": -1, "filename": "marshmallow-form-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9004bf1baec9c69b1e9c9e1d55be74f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14998, "upload_time": "2015-05-03T10:15:43", "upload_time_iso_8601": "2015-05-03T10:15:43.277520Z", "url": "https://files.pythonhosted.org/packages/ca/e5/044b27fe396c2dca92fc6af1fc9666fc923f1481ff4cd6b36c01a096b365/marshmallow-form-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:36 2020"}