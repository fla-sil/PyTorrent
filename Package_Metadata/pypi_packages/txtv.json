{"info": {"author": "Isak Lindh\u00e9", "author_email": "isak.e.lindhe@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Natural Language :: Swedish", "Operating System :: MacOS", "Operating System :: POSIX", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: News/Diary"], "description": "# txtv - A client for reading swedish text tv in the terminal\n\nText-tv is great! plaintext and to-the-point news with no filler.\nNow you can read it without touching your mouse or your tv-remote :)\n\n![screenshot](https://raw.githubusercontent.com/voidcase/txtv/master/screenshot.png)\n\n## Installation\n\nIf you have Python 3.6 or later with pip installed, just run\n\n\tpip install --user txtv\n\nCurrently wont work natively on the Windows command line because of [readline](https://docs.python.org/3/library/readline.html); but you can use it with [Ubuntu for Windows](https://tutorials.ubuntu.com/tutorial/tutorial-ubuntu-on-windows#0).\n\n## Usage\n\nRunning with no arguments will enter interactive mode.\n\n\ttxtv\n\nFrom there you can run any of these commands:\n\n\thelp | h | ? -- show this help text.\n\tquit | q | exit -- quit the program (duh)\n\tlist | ls | l -- list all articles\n\tnext | n | > -- show next available page.\n\tprevious | prev | p | < -- show previous available page.\n\t<PAGE NUMBER> -- show the page at the specified number\n\nYou can also give any of these commands as an argument on the normal command line to run un-interactively. Except for `quit`, `next`, and `previous`, because that would make no sense.\n\n\ttxtv 100  # show page 100\n\n\ttxtv ls   # list all news articles\n\n## Configuration\n\ntxtv.py will automatically generate a config file at `~/.config/txtv/txtv.cfg` with default values. It uses format of [configparser](https://docs.python.org/3/library/configparser.html#supported-ini-file-structure).\n\n### alias\n\nunder the alias category you can specify any number of aliases for txtv commands. These will work both in interactive mode and as subcommands when calling txtv from your shell.\n\nexample:\n\n\t[alias]\n\t\tall=list\n\nwill let you list all articles from shell with\n\n\ttxtv all\n\nor by typing `all` in interactive mode.\n\n### general\n\nSo far there is only one option here, named `prompt`. It is just the prompt string used in interactive mode.\n\nexample:\n\n\t[general]\n\t\tprompt = kommandor\u00f6relse>\n\n### show\n\nHere you can filter out some parts of the pages you might find unnecessary or distracting. These are all boolean variables and the accepted values are those that [configparser accepts as true/false](https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.BOOLEAN_STATES):\n\n> ... config parsers consider the following values True: '1', 'yes', 'true', 'on' and the following values False: '0', 'no', 'false', 'off'.\n\nthese are all on by default.\n\n\n| Option | Description |\n| ------ | ----------- |\n| svt_header | The line at the top that looks like `100 SVT Text         Fredag 12 apr 2019`. Keep in mind that turning this off might make it hard to keep track of what page you are on in interactive mode. HMU or make a PR if you would like to see only the page number.|\n| publicerad_header | The blue line that says when the article was published (`INRIKES PUBLICERAD  12 APRIL`) |\n| navigation_footer | The bottom line that usually says `Inrikes 101 Utrikes 104 Inneh\u00e5ll 700`. If it does not follow this format (like when the article continues on the next page) it will still be shown. |\n\n\nRight now the most interesting thing there is aliases which work both in CLI mode and interactive mode. You can also change what your interactive prompt looks like if you care about that.\n\n\n## Links\n\nHere is the trello for the development of txtv: https://trello.com/b/aBI0DpN3/txtv\n\nHere is where it's scraping data from: https://www.svt.se/svttext/web/pages/100.html", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/voidcase/txtv/archive/v1.2.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/voidcase/txtv", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "txtv", "package_url": "https://pypi.org/project/txtv/", "platform": "", "project_url": "https://pypi.org/project/txtv/", "project_urls": {"Download": "https://github.com/voidcase/txtv/archive/v1.2.1.tar.gz", "Homepage": "https://github.com/voidcase/txtv"}, "release_url": "https://pypi.org/project/txtv/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "CLI for reading swedish text-tv", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>txtv - A client for reading swedish text tv in the terminal</h1>\n<p>Text-tv is great! plaintext and to-the-point news with no filler.\nNow you can read it without touching your mouse or your tv-remote :)</p>\n<p><img alt=\"screenshot\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/96d61b6926f071e2625a2991bd4fbc79e5f9afb6/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f766f6964636173652f747874762f6d61737465722f73637265656e73686f742e706e67\"></p>\n<h2>Installation</h2>\n<p>If you have Python 3.6 or later with pip installed, just run</p>\n<pre><code>pip install --user txtv\n</code></pre>\n<p>Currently wont work natively on the Windows command line because of <a href=\"https://docs.python.org/3/library/readline.html\" rel=\"nofollow\">readline</a>; but you can use it with <a href=\"https://tutorials.ubuntu.com/tutorial/tutorial-ubuntu-on-windows#0\" rel=\"nofollow\">Ubuntu for Windows</a>.</p>\n<h2>Usage</h2>\n<p>Running with no arguments will enter interactive mode.</p>\n<pre><code>txtv\n</code></pre>\n<p>From there you can run any of these commands:</p>\n<pre><code>help | h | ? -- show this help text.\nquit | q | exit -- quit the program (duh)\nlist | ls | l -- list all articles\nnext | n | &gt; -- show next available page.\nprevious | prev | p | &lt; -- show previous available page.\n&lt;PAGE NUMBER&gt; -- show the page at the specified number\n</code></pre>\n<p>You can also give any of these commands as an argument on the normal command line to run un-interactively. Except for <code>quit</code>, <code>next</code>, and <code>previous</code>, because that would make no sense.</p>\n<pre><code>txtv 100  # show page 100\n\ntxtv ls   # list all news articles\n</code></pre>\n<h2>Configuration</h2>\n<p>txtv.py will automatically generate a config file at <code>~/.config/txtv/txtv.cfg</code> with default values. It uses format of <a href=\"https://docs.python.org/3/library/configparser.html#supported-ini-file-structure\" rel=\"nofollow\">configparser</a>.</p>\n<h3>alias</h3>\n<p>under the alias category you can specify any number of aliases for txtv commands. These will work both in interactive mode and as subcommands when calling txtv from your shell.</p>\n<p>example:</p>\n<pre><code>[alias]\n\tall=list\n</code></pre>\n<p>will let you list all articles from shell with</p>\n<pre><code>txtv all\n</code></pre>\n<p>or by typing <code>all</code> in interactive mode.</p>\n<h3>general</h3>\n<p>So far there is only one option here, named <code>prompt</code>. It is just the prompt string used in interactive mode.</p>\n<p>example:</p>\n<pre><code>[general]\n\tprompt = kommandor\u00f6relse&gt;\n</code></pre>\n<h3>show</h3>\n<p>Here you can filter out some parts of the pages you might find unnecessary or distracting. These are all boolean variables and the accepted values are those that <a href=\"https://docs.python.org/3/library/configparser.html#configparser.ConfigParser.BOOLEAN_STATES\" rel=\"nofollow\">configparser accepts as true/false</a>:</p>\n<blockquote>\n<p>... config parsers consider the following values True: '1', 'yes', 'true', 'on' and the following values False: '0', 'no', 'false', 'off'.</p>\n</blockquote>\n<p>these are all on by default.</p>\n<table>\n<thead>\n<tr>\n<th>Option</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>svt_header</td>\n<td>The line at the top that looks like <code>100 SVT Text Fredag 12 apr 2019</code>. Keep in mind that turning this off might make it hard to keep track of what page you are on in interactive mode. HMU or make a PR if you would like to see only the page number.</td>\n</tr>\n<tr>\n<td>publicerad_header</td>\n<td>The blue line that says when the article was published (<code>INRIKES PUBLICERAD 12 APRIL</code>)</td>\n</tr>\n<tr>\n<td>navigation_footer</td>\n<td>The bottom line that usually says <code>Inrikes 101 Utrikes 104 Inneh\u00e5ll 700</code>. If it does not follow this format (like when the article continues on the next page) it will still be shown.</td>\n</tr></tbody></table>\n<p>Right now the most interesting thing there is aliases which work both in CLI mode and interactive mode. You can also change what your interactive prompt looks like if you care about that.</p>\n<h2>Links</h2>\n<p>Here is the trello for the development of txtv: <a href=\"https://trello.com/b/aBI0DpN3/txtv\" rel=\"nofollow\">https://trello.com/b/aBI0DpN3/txtv</a></p>\n<p>Here is where it's scraping data from: <a href=\"https://www.svt.se/svttext/web/pages/100.html\" rel=\"nofollow\">https://www.svt.se/svttext/web/pages/100.html</a></p>\n\n          </div>"}, "last_serial": 5769951, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "8c550dcbe8c4c76d65a9d9a476fba91b", "sha256": "1e287f5c057265b0f12136e5d3fcf84506cbd786aae882e030b14cbd998f7f65"}, "downloads": -1, "filename": "txtv-1.0.0.tar.gz", "has_sig": false, "md5_digest": "8c550dcbe8c4c76d65a9d9a476fba91b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5698, "upload_time": "2019-03-20T15:08:20", "upload_time_iso_8601": "2019-03-20T15:08:20.382338Z", "url": "https://files.pythonhosted.org/packages/a2/73/4d27b892f7d8cefe6158378341967a9258c485b1568e4730d4e781905f76/txtv-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "6c948ddc1adf12a8f08f53a82f1dad57", "sha256": "5e3a0044b041da4d8b821e4004edef852a4a011081713d1d8ee342d6c5ca8948"}, "downloads": -1, "filename": "txtv-1.0.1.tar.gz", "has_sig": false, "md5_digest": "6c948ddc1adf12a8f08f53a82f1dad57", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5712, "upload_time": "2019-03-31T10:04:37", "upload_time_iso_8601": "2019-03-31T10:04:37.324420Z", "url": "https://files.pythonhosted.org/packages/c8/ea/d744633b170e510038d47c6334ffa28e2a32e4c3eef027680c9988c6555e/txtv-1.0.1.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "a8c826c2499abaf7c5245de150d97f2a", "sha256": "df96cc4f4806fc3dbd33a75c0b0362d6c3dc5f318acaf46a4bbd08d1820562ac"}, "downloads": -1, "filename": "txtv-1.2.0.tar.gz", "has_sig": false, "md5_digest": "a8c826c2499abaf7c5245de150d97f2a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7232, "upload_time": "2019-09-02T07:22:12", "upload_time_iso_8601": "2019-09-02T07:22:12.969892Z", "url": "https://files.pythonhosted.org/packages/d5/50/89a3f36143875a2e82521949c1bb798c843ed9fe10d63f4123eec23301e3/txtv-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "8feb0f68193289521d7efcb5ddbba53e", "sha256": "e3d15ef04340619597130395effe9f63b1013d67bce0e874a82ddbbf233a50a6"}, "downloads": -1, "filename": "txtv-1.2.1.tar.gz", "has_sig": false, "md5_digest": "8feb0f68193289521d7efcb5ddbba53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7251, "upload_time": "2019-09-02T09:45:24", "upload_time_iso_8601": "2019-09-02T09:45:24.863402Z", "url": "https://files.pythonhosted.org/packages/01/ed/18ea7b3153a23d571cb880c83d90f9976ca0111e136e4dc01c29749bddea/txtv-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8feb0f68193289521d7efcb5ddbba53e", "sha256": "e3d15ef04340619597130395effe9f63b1013d67bce0e874a82ddbbf233a50a6"}, "downloads": -1, "filename": "txtv-1.2.1.tar.gz", "has_sig": false, "md5_digest": "8feb0f68193289521d7efcb5ddbba53e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7251, "upload_time": "2019-09-02T09:45:24", "upload_time_iso_8601": "2019-09-02T09:45:24.863402Z", "url": "https://files.pythonhosted.org/packages/01/ed/18ea7b3153a23d571cb880c83d90f9976ca0111e136e4dc01c29749bddea/txtv-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:02 2020"}