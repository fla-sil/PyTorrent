{"info": {"author": "kenny1992", "author_email": "apolevki09@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Django", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# Capybara forms\nDynamic Django forms and filters using JSON schema.\n\nIf you have 2 models: Category and Entry.\nAnd some entry features depends on it's category.\nUsing this library, you will obtain easy-to-configure\nschema with form, filter and entry fields generators.\nAlso, it can work with model fields.\n\n# Quick start\n<span>1.</span> Define your models\n```python\nfrom django.db import models\nfrom capybara_forms.models import CapybaraFormsCategory, CapybaraFormsModel\n\n\nclass Category(CapybaraFormsCategory):\n    title = models.CharField(max_length=100)\n\nclass Advert(CapybaraFormsModel(Category)):\n    # Global model fields\n    title = models.CharField(max_length=100)\n    price = models.PositiveSmallIntegerField()\n    # Rest fields will be stored in JSON 'data' field\n```\n\n<span>2.</span> Write schema for category 'Cats'\n```json\n[\n  {\n    \"name\": \"breed\",\n    \"type\": \"string\",\n    \"required\": true,\n    \"display_name\": \"Breed\",\n    \"placeholder\": \"Enter breed of your cat\"\n  },\n  {\n    \"name\": \"year\",\n    \"type\": \"number\",\n    \"required\": true,\n    \"max_value\": 2020,\n    \"min_value\": 1980,\n    \"placeholder\": \"Enter birth year of your cat\",\n    \"display_name\": \"Birth year\"\n  },\n  {\n    \"name\": \"weight\",\n    \"type\": \"number\",\n    \"placeholder\": \"Enter the weight of your cat\",\n    \"display_name\": \"Weight\"\n  },\n  {\n    \"name\": \"height\",\n    \"type\": \"number\",\n    \"placeholder\": \"Height (only placeholder, without display name)\"\n  },\n  {\n    \"type\": \"color\",\n    \"display_name\": \"Cat's color\"\n  },\n  {\n    \"name\": \"name\",\n    \"type\": \"string\",\n    \"placeholder\": \"Enter cat nickname\",\n    \"display_name\": \"Name\"\n  },\n  {\n    \"name\": \"vaccinated\",\n    \"type\": \"checkbox\",\n    \"display_name\": \"is vaccinated\"\n  }\n]\n```\n\n<span>3.</span> Create form. It's a basic rendering object\n```python\nfrom django import forms\nfrom capybara_forms.forms import CapybaraFormsModelForm\nfrom .models import Advert\n\n\nclass AdvertForm(CapybaraFormsModelForm):\n    # This fields from model will be rendered using form.render_form\n    fields_in_model = ['title', 'price']\n\n    # For custom placeholder\n    title = forms.CharField(widget=forms.TextInput(attrs={'placeholder': 'Enter title'}))\n\n    class Meta:\n        model = Advert\n        fields = ('title', 'price')\n```\n\n<span>4.</span> Use this form in your view\n```python\nfrom django.shortcuts import render, get_object_or_404, redirect\n\nfrom .models import Category\nfrom .forms import AdvertForm\n\n\ndef add(request, category_id):\n    category = get_object_or_404(Category, pk=category_id)\n    if request.method == 'POST':\n        form = AdvertForm(category, request.POST.dict())\n        if form.is_valid():\n            form.save()\n            return redirect('/{0}/'.format(category_id))\n    else:\n        form = AdvertForm(category)\n\n    return render(request, 'add.html', {\n        'form': form,\n    })\n```\n\n<span>5.</span> Render form in your template.\nNote, that library uses [parsley](http://parsleyjs.org/)\nfor validation. All dependencies listed below\n```html\n<form method=\"POST\" data-parsley-validate>\n    {% csrf_token %}\n    {{ form.render_form | safe }}\n\n    <button type=\"submit\">Submit</button>\n</form>\n```\n\nResult form: <br/>\n![Form image](images/form_image.png)\n\nResult filter, with similar schema, plus some in-form configuration: <br/>\n![Filter image](images/filter_image.png)\n\n\n# Dependencies\n1. [Django](https://www.djangoproject.com/)\n2. [jQuery](https://jquery.com/) (version 3.3.1 included)\n3. [JSON editor](http://jsoneditoronline.org/) \n(version 5.9.6 included)\n4. [parsley](http://parsleyjs.org/) (version 2.8.1 included)\n\n# Documentation and full example\nSee [readthedocs](capybara-forms.readthedocs.io) for\nAPI, advanced usage cases, parameters definition\nand more information \n\nSee [example project](https://github.com/kenny1992/capybara_forms_example) \nfor all features, used in worked application\n\n\n# Slogan\n> _With goal to simplify, with love to capybaras_\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kenny1992/capybara_forms", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "capybara-forms", "package_url": "https://pypi.org/project/capybara-forms/", "platform": "", "project_url": "https://pypi.org/project/capybara-forms/", "project_urls": {"Homepage": "https://github.com/kenny1992/capybara_forms"}, "release_url": "https://pypi.org/project/capybara-forms/0.0.2/", "requires_dist": ["Django"], "requires_python": "", "summary": "Dynamic Django forms and filters using JSON schema", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Capybara forms</h1>\n<p>Dynamic Django forms and filters using JSON schema.</p>\n<p>If you have 2 models: Category and Entry.\nAnd some entry features depends on it's category.\nUsing this library, you will obtain easy-to-configure\nschema with form, filter and entry fields generators.\nAlso, it can work with model fields.</p>\n<h1>Quick start</h1>\n<p><span>1.</span> Define your models</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">capybara_forms.models</span> <span class=\"kn\">import</span> <span class=\"n\">CapybaraFormsCategory</span><span class=\"p\">,</span> <span class=\"n\">CapybaraFormsModel</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Category</span><span class=\"p\">(</span><span class=\"n\">CapybaraFormsCategory</span><span class=\"p\">):</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Advert</span><span class=\"p\">(</span><span class=\"n\">CapybaraFormsModel</span><span class=\"p\">(</span><span class=\"n\">Category</span><span class=\"p\">)):</span>\n    <span class=\"c1\"># Global model fields</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">max_length</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n    <span class=\"n\">price</span> <span class=\"o\">=</span> <span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">PositiveSmallIntegerField</span><span class=\"p\">()</span>\n    <span class=\"c1\"># Rest fields will be stored in JSON 'data' field</span>\n</pre>\n<p><span>2.</span> Write schema for category 'Cats'</p>\n<pre><span class=\"p\">[</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"breed\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Breed\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"placeholder\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter breed of your cat\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"year\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"required\"</span><span class=\"p\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"max_value\"</span><span class=\"p\">:</span> <span class=\"mi\">2020</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"min_value\"</span><span class=\"p\">:</span> <span class=\"mi\">1980</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"placeholder\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter birth year of your cat\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Birth year\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"weight\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"placeholder\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter the weight of your cat\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Weight\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"height\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"number\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"placeholder\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Height (only placeholder, without display name)\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"color\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Cat's color\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"name\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"string\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"placeholder\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Enter cat nickname\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Name\"</span>\n  <span class=\"p\">},</span>\n  <span class=\"p\">{</span>\n    <span class=\"nt\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"vaccinated\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"checkbox\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"display_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"is vaccinated\"</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p><span>3.</span> Create form. It's a basic rendering object</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django</span> <span class=\"kn\">import</span> <span class=\"n\">forms</span>\n<span class=\"kn\">from</span> <span class=\"nn\">capybara_forms.forms</span> <span class=\"kn\">import</span> <span class=\"n\">CapybaraFormsModelForm</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Advert</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">AdvertForm</span><span class=\"p\">(</span><span class=\"n\">CapybaraFormsModelForm</span><span class=\"p\">):</span>\n    <span class=\"c1\"># This fields from model will be rendered using form.render_form</span>\n    <span class=\"n\">fields_in_model</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'price'</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># For custom placeholder</span>\n    <span class=\"n\">title</span> <span class=\"o\">=</span> <span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">CharField</span><span class=\"p\">(</span><span class=\"n\">widget</span><span class=\"o\">=</span><span class=\"n\">forms</span><span class=\"o\">.</span><span class=\"n\">TextInput</span><span class=\"p\">(</span><span class=\"n\">attrs</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'placeholder'</span><span class=\"p\">:</span> <span class=\"s1\">'Enter title'</span><span class=\"p\">}))</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Meta</span><span class=\"p\">:</span>\n        <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Advert</span>\n        <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'title'</span><span class=\"p\">,</span> <span class=\"s1\">'price'</span><span class=\"p\">)</span>\n</pre>\n<p><span>4.</span> Use this form in your view</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.shortcuts</span> <span class=\"kn\">import</span> <span class=\"n\">render</span><span class=\"p\">,</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">,</span> <span class=\"n\">redirect</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">.models</span> <span class=\"kn\">import</span> <span class=\"n\">Category</span>\n<span class=\"kn\">from</span> <span class=\"nn\">.forms</span> <span class=\"kn\">import</span> <span class=\"n\">AdvertForm</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">add</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">category_id</span><span class=\"p\">):</span>\n    <span class=\"n\">category</span> <span class=\"o\">=</span> <span class=\"n\">get_object_or_404</span><span class=\"p\">(</span><span class=\"n\">Category</span><span class=\"p\">,</span> <span class=\"n\">pk</span><span class=\"o\">=</span><span class=\"n\">category_id</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"o\">==</span> <span class=\"s1\">'POST'</span><span class=\"p\">:</span>\n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">AdvertForm</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">POST</span><span class=\"o\">.</span><span class=\"n\">dict</span><span class=\"p\">())</span>\n        <span class=\"k\">if</span> <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">is_valid</span><span class=\"p\">():</span>\n            <span class=\"n\">form</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n            <span class=\"k\">return</span> <span class=\"n\">redirect</span><span class=\"p\">(</span><span class=\"s1\">'/</span><span class=\"si\">{0}</span><span class=\"s1\">/'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">category_id</span><span class=\"p\">))</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">form</span> <span class=\"o\">=</span> <span class=\"n\">AdvertForm</span><span class=\"p\">(</span><span class=\"n\">category</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"n\">render</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"s1\">'add.html'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'form'</span><span class=\"p\">:</span> <span class=\"n\">form</span><span class=\"p\">,</span>\n    <span class=\"p\">})</span>\n</pre>\n<p><span>5.</span> Render form in your template.\nNote, that library uses <a href=\"http://parsleyjs.org/\" rel=\"nofollow\">parsley</a>\nfor validation. All dependencies listed below</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">form</span> <span class=\"na\">method</span><span class=\"o\">=</span><span class=\"s\">\"POST\"</span> <span class=\"na\">data-parsley-validate</span><span class=\"p\">&gt;</span>\n    {% csrf_token %}\n    {{ form.render_form | safe }}\n\n    <span class=\"p\">&lt;</span><span class=\"nt\">button</span> <span class=\"na\">type</span><span class=\"o\">=</span><span class=\"s\">\"submit\"</span><span class=\"p\">&gt;</span>Submit<span class=\"p\">&lt;/</span><span class=\"nt\">button</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">form</span><span class=\"p\">&gt;</span>\n</pre>\n<p>Result form: <br>\n<img alt=\"Form image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/117da011e755153859557053d72636166e7447c3/696d616765732f666f726d5f696d6167652e706e67\"></p>\n<p>Result filter, with similar schema, plus some in-form configuration: <br>\n<img alt=\"Filter image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1014509fb9d00e9a50410573754217634ba2818e/696d616765732f66696c7465725f696d6167652e706e67\"></p>\n<h1>Dependencies</h1>\n<ol>\n<li><a href=\"https://www.djangoproject.com/\" rel=\"nofollow\">Django</a></li>\n<li><a href=\"https://jquery.com/\" rel=\"nofollow\">jQuery</a> (version 3.3.1 included)</li>\n<li><a href=\"http://jsoneditoronline.org/\" rel=\"nofollow\">JSON editor</a>\n(version 5.9.6 included)</li>\n<li><a href=\"http://parsleyjs.org/\" rel=\"nofollow\">parsley</a> (version 2.8.1 included)</li>\n</ol>\n<h1>Documentation and full example</h1>\n<p>See <a href=\"capybara-forms.readthedocs.io\" rel=\"nofollow\">readthedocs</a> for\nAPI, advanced usage cases, parameters definition\nand more information</p>\n<p>See <a href=\"https://github.com/kenny1992/capybara_forms_example\" rel=\"nofollow\">example project</a>\nfor all features, used in worked application</p>\n<h1>Slogan</h1>\n<blockquote>\n<p><em>With goal to simplify, with love to capybaras</em></p>\n</blockquote>\n\n          </div>"}, "last_serial": 4657191, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "d01adfcc9878eb918d16a1050bd1edfd", "sha256": "4f5610197811910c8647b46acd938ee3ceb54107fbb6a7bcf5cd2239aaedd470"}, "downloads": -1, "filename": "capybara_forms-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d01adfcc9878eb918d16a1050bd1edfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 244282, "upload_time": "2019-01-03T17:43:54", "upload_time_iso_8601": "2019-01-03T17:43:54.967809Z", "url": "https://files.pythonhosted.org/packages/3a/cd/5085f39867e944ed146aab179eb1c5dc867a718f1ac30fb1bbc8e75e3818/capybara_forms-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d94df38d7633e3911e1c61da61bddb8a", "sha256": "fbde67ae0ec667df3da5c61d48a8a5014584d49fa5ce2db0e0282071e495837e"}, "downloads": -1, "filename": "capybara_forms-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d94df38d7633e3911e1c61da61bddb8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234442, "upload_time": "2019-01-03T17:43:57", "upload_time_iso_8601": "2019-01-03T17:43:57.345480Z", "url": "https://files.pythonhosted.org/packages/73/05/aeb406575fdc31a7f1e4db504760c8d0e5d6b0aa080555e08dcc2658dee4/capybara_forms-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d01adfcc9878eb918d16a1050bd1edfd", "sha256": "4f5610197811910c8647b46acd938ee3ceb54107fbb6a7bcf5cd2239aaedd470"}, "downloads": -1, "filename": "capybara_forms-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "d01adfcc9878eb918d16a1050bd1edfd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 244282, "upload_time": "2019-01-03T17:43:54", "upload_time_iso_8601": "2019-01-03T17:43:54.967809Z", "url": "https://files.pythonhosted.org/packages/3a/cd/5085f39867e944ed146aab179eb1c5dc867a718f1ac30fb1bbc8e75e3818/capybara_forms-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d94df38d7633e3911e1c61da61bddb8a", "sha256": "fbde67ae0ec667df3da5c61d48a8a5014584d49fa5ce2db0e0282071e495837e"}, "downloads": -1, "filename": "capybara_forms-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d94df38d7633e3911e1c61da61bddb8a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234442, "upload_time": "2019-01-03T17:43:57", "upload_time_iso_8601": "2019-01-03T17:43:57.345480Z", "url": "https://files.pythonhosted.org/packages/73/05/aeb406575fdc31a7f1e4db504760c8d0e5d6b0aa080555e08dcc2658dee4/capybara_forms-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:26 2020"}