{"info": {"author": "Jack Nicholson", "author_email": "kern.ce.ce++@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: Message Boards", "Topic :: Internet :: WWW/HTTP :: Dynamic Content :: News/Diary", "Topic :: Text Processing :: Filters", "Topic :: Text Processing :: Markup :: HTML"], "description": "Unicode Emojis for Python-Markdown\n==================================\n\nConverts defined emoticon symbols to Unicode emojis, supported on a\nvariety of devices\n`1 <http://apps.timwhitlock.info/emoji/tables/unicode#block-1-emoticons>`_.\n\nUsage:\n\n::\n\n    >>> from __future__ import print_function\n    >>> from markdown import markdown\n    >>> text = 'I <3 you! Just kidding. :P'\n    >>> print(markdown(text, ['unimoji']))    # doctest: +NORMALIZE_WHITESPACE\n    <p>I <span class=\"emoji\" style=\"color:red\">\u2764</span> you! \\\n    Just kidding. <span class=\"emoji\">\ud83d\ude1b</span></p>\n\n**NOTE**: The emojis are only replaced when whitespace-delimited on both\nsides!\n\nThe following options are accepted:\n\n-  ``emoji``, the emoticon-to-list-of-aliases mapping,\n-  ``span_class``, the class name of the encompassing ``<span>`` element\n   (default: 'emoji'). No element is created if ``None``.\n\nAn example with these custom settings:\n\n::\n\n    >>> from mdx_unimoji import UnimojiExtension\n    >>> img_heart = '<img alt=\"love\" src=\"heart.png\"/>'\n    >>> img_tongue = '<img alt=\":P\" src=\"tongue.png\"/>'\n    >>> overrides = UnimojiExtension.EMOJI\n    >>> overrides.update({img_heart: ['<3'],\n    ...                   img_tongue: ':p :P :-p :-P'.split()})\n    >>> print(markdown(text,\n    ...                extensions=[UnimojiExtension(span_class='other',\n    ...                                             emoji=overrides)]))\n    ... # doctest: +NORMALIZE_WHITESPACE\n    <p>I <img alt=\"love\" class=\"other\" src=\"heart.png\" /> you! \\\n    Just kidding. <img alt=\":P\" class=\"other\" src=\"tongue.png\" /></p>\n\nYou can use the ``span_class`` value in your CSS, e.g.:\n\n::\n\n    .emoji {\n        font-family: \"Apple Color Emoji\", \"Segoe UI Emoji\",\n                     \"Noto Color Emoji\", EmojiSymbols, \"DejaVu Sans\", Symbola;\n    }\n\nInstall\n-------\n\nTo install and make available to Markdown, you can issue:\n\n::\n\n    pip install mdx_unimoji\n\nor\n\n::\n\n    pip install --upgrade git+git://github.com/kernc/mdx_unimoji.git\n\nThen use the above provided examples to figure your way around.\n\nHF!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/kernc/mdx_unimoji", "keywords": "markdown unicode emoji emoticon", "license": "GPLv3+", "maintainer": null, "maintainer_email": null, "name": "mdx_unimoji", "package_url": "https://pypi.org/project/mdx_unimoji/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mdx_unimoji/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/kernc/mdx_unimoji"}, "release_url": "https://pypi.org/project/mdx_unimoji/1.0/", "requires_dist": null, "requires_python": null, "summary": "Python-Markdown extension that replaces common smileys with their Unicode emoji emoticons. ;)", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Converts defined emoticon symbols to Unicode emojis, supported on a\nvariety of devices\n<a href=\"http://apps.timwhitlock.info/emoji/tables/unicode#block-1-emoticons\" rel=\"nofollow\">1</a>.</p>\n<p>Usage:</p>\n<pre>&gt;&gt;&gt; from __future__ import print_function\n&gt;&gt;&gt; from markdown import markdown\n&gt;&gt;&gt; text = 'I &lt;3 you! Just kidding. :P'\n&gt;&gt;&gt; print(markdown(text, ['unimoji']))    # doctest: +NORMALIZE_WHITESPACE\n&lt;p&gt;I &lt;span class=\"emoji\" style=\"color:red\"&gt;\u2764&lt;/span&gt; you! \\\nJust kidding. &lt;span class=\"emoji\"&gt;\ud83d\ude1b&lt;/span&gt;&lt;/p&gt;\n</pre>\n<p><strong>NOTE</strong>: The emojis are only replaced when whitespace-delimited on both\nsides!</p>\n<p>The following options are accepted:</p>\n<ul>\n<li><tt>emoji</tt>, the emoticon-to-list-of-aliases mapping,</li>\n<li><tt>span_class</tt>, the class name of the encompassing <tt>&lt;span&gt;</tt> element\n(default: \u2018emoji\u2019). No element is created if <tt>None</tt>.</li>\n</ul>\n<p>An example with these custom settings:</p>\n<pre>&gt;&gt;&gt; from mdx_unimoji import UnimojiExtension\n&gt;&gt;&gt; img_heart = '&lt;img alt=\"love\" src=\"heart.png\"/&gt;'\n&gt;&gt;&gt; img_tongue = '&lt;img alt=\":P\" src=\"tongue.png\"/&gt;'\n&gt;&gt;&gt; overrides = UnimojiExtension.EMOJI\n&gt;&gt;&gt; overrides.update({img_heart: ['&lt;3'],\n...                   img_tongue: ':p :P :-p :-P'.split()})\n&gt;&gt;&gt; print(markdown(text,\n...                extensions=[UnimojiExtension(span_class='other',\n...                                             emoji=overrides)]))\n... # doctest: +NORMALIZE_WHITESPACE\n&lt;p&gt;I &lt;img alt=\"love\" class=\"other\" src=\"heart.png\" /&gt; you! \\\nJust kidding. &lt;img alt=\":P\" class=\"other\" src=\"tongue.png\" /&gt;&lt;/p&gt;\n</pre>\n<p>You can use the <tt>span_class</tt> value in your CSS, e.g.:</p>\n<pre>.emoji {\n    font-family: \"Apple Color Emoji\", \"Segoe UI Emoji\",\n                 \"Noto Color Emoji\", EmojiSymbols, \"DejaVu Sans\", Symbola;\n}\n</pre>\n<div id=\"install\">\n<h2>Install</h2>\n<p>To install and make available to Markdown, you can issue:</p>\n<pre>pip install mdx_unimoji\n</pre>\n<p>or</p>\n<pre>pip install --upgrade git+git://github.com/kernc/mdx_unimoji.git\n</pre>\n<p>Then use the above provided examples to figure your way around.</p>\n<p>HF!</p>\n</div>\n\n          </div>"}, "last_serial": 2343421, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "3f2b9568e84b6bee9a682f8267280d54", "sha256": "2edb2c2de494dfe1460d4062c8ac360ff8b91ff8110be51629c2f7d17a5937bd"}, "downloads": -1, "filename": "mdx_unimoji-1.0.tar.gz", "has_sig": false, "md5_digest": "3f2b9568e84b6bee9a682f8267280d54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3915, "upload_time": "2016-09-15T01:23:41", "upload_time_iso_8601": "2016-09-15T01:23:41.266351Z", "url": "https://files.pythonhosted.org/packages/41/42/558dcdf1aa1e8a25fc1e02b99ba294f3d4c1b83d3b50e2326918f89fa472/mdx_unimoji-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f2b9568e84b6bee9a682f8267280d54", "sha256": "2edb2c2de494dfe1460d4062c8ac360ff8b91ff8110be51629c2f7d17a5937bd"}, "downloads": -1, "filename": "mdx_unimoji-1.0.tar.gz", "has_sig": false, "md5_digest": "3f2b9568e84b6bee9a682f8267280d54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3915, "upload_time": "2016-09-15T01:23:41", "upload_time_iso_8601": "2016-09-15T01:23:41.266351Z", "url": "https://files.pythonhosted.org/packages/41/42/558dcdf1aa1e8a25fc1e02b99ba294f3d4c1b83d3b50e2326918f89fa472/mdx_unimoji-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:43 2020"}