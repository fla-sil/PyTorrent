{"info": {"author": "ailabuser", "author_email": "lab@ailab.space", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows :: Windows 10", "Operating System :: Unix", "Programming Language :: Python :: 3"], "description": "## Automatic Installation\n\nYou can install the hybrid MROI face detection wrapper using `pip`:\n\n```\npip install mroi-fd\n```\n\n## Manual Installation\n\nThis project is developed and tested on python version `3.7.4`. Please check\nyour python version using `python --version`. If your system has a different\npython version, you may want to consider using\n[pyenv](https://github.com/pyenv/pyenv) (See [Using pyenv](#using-pyenv-linux-windows-macos))\n\nFirst, clone and `cd` into the repository:\n\n```\ngit clone https://gitlab.com/ailabuser/bacha_hybrid_mroi_face_detection\ncd bacha_hybrid_mroi_face_detection\n```\n\n### On Windows:\n\nCreate a python virtual environment:\n\n```\nmkvirtualenv venv\n```\n\nActivate the virtual environment (`deactivate` to deactivate the virtual\nenvironment):\n\n```\nworkon venv\n```\n\nInstall all the required dependencies while still having the virtual environment\nactive:\n\n```\npip install -r requirements.txt\n```\n\n\n### On Linux:\n\nCreate a python virtual environment:\n\n```\nvirtualenv -p /usr/bin/python3 venv\n```\n\nActivate the virtual environment (`deactivate` to deactivate the virtual\nenvironment):\n\n```\nsource venv/bin/activate\n```\n\nInstall all the required dependencies while still having the virtual environment\nactive:\n\n```\npip install -r requirements.txt\n```\n\n### Using pyenv (Linux, Windows, MacOS)\n\nIf your python version is not 3.7.4, you may want to use\n[pyenv](https://github.com/pyenv/pyenv). After you have installed `pyenv`,\ninstall the specific python version. On Linux, this can be done by running the\nfollowing command:\n\n```\nenv PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.4\n```\n\nThen, create a virtual environment:\n\n```\npyenv virtualenv 3.7.4 bacha_mroi_face_detection\n```\n\nYou can activate the virtual environment using `pyenv` like so:\n\n```\npyenv activate bacha_mroi_face_detection\n```\n\n## Description \n\nThe face detection technique used hybrid margin-based region of interest (MROI)\napproach. It is hybrid in the sense that the implementation runs one main\nroutine to detect a face, but switch to an escape routine when the main routine\nfails. Using MROI increase the face detection speed by having the selected face\ndetection algorithm to only consider a sub-region (where a face was previously\ndetected) instead of the full frame.\n\nThere are three pre-defined selection of main routines available for you to use:\n\n1. Haar cascade classifier\n2. Joint cascade\n3. Multi-task Convolutional Neural Network (MTCNN)\n\nWhen the main routine failed to detect a face, the implementation switch to the\nescape routine which runs template matching algorithm.\n\n# Example\n\n## Using the hybrid MROI for your face detection implementation\n\nIn order to use your face detection algorithm with the hybrid MROI face\ndetector, you need to create a subclass which inherit the `FaceDetector` class,\nand override its `detect` method. The implementation requires the`detect`\nmethod to return either a face ROI or `None`; otherwise, the hybrid MROI face\ndetector may fail.\n\nHere's an example, in which we use a [python implementation of\nMTCNN](https://pypi.org/project/mtcnn/):\n\n```python\nimport cv2\nfrom mtcnn.mtcnn import MTCNN\nfrom mroi_fd import FaceDetector\n\nclass MROI_MTCNN(FaceDetector):\n\n    def __init__(self):\n\n    \t# The main routine face detector object used to detect faces.\n        fd_obj = MTCNN()\n\n\t# Initialize using base class constructor. We pass the face detector\n\t# object (fd_obj) and use the MROI with fixed-margin approach with\n\t# a template matching escape routine.\n        super().__init__(fd_obj, mode=FaceDetector.FMTM)\n\n    @staticmethod\n    def detect(fd_obj, image):\n\n        rgb_src = cv2.cvtColor(image, cv2.COLOR_BGR2RGB)\n        result = fd_obj.detect_faces(rgb_src)\n\n        if len(result) > 0:\n            return result[0]['box']\n        else:\n            return None\n```\n\nInternally, this was basically how the pre-defined hyrbid MROI face detectors\n(i.e., `MROI_HaarCascade` and `MROI_MTCNN`) was defined. Simply import them with\n\n```python\nfrom mroi_fd import MROI_HaarCascade, MROI_MTCNN\n```\n\n## Running the face detector\n\nTo use the face detector, simply instantiate the hybrid MROI face detector and\nrun it by invoking its `run` method. Below is a simple script that runs the\nface detector and feed it images in a loop.\n\n```python\nfd = MROI_MTCNN()\nfd.run() # This runs the face detector in the background.\n\ncap = cv2.VideoCapture(\"/path/to/video/file\")\n\nwhile True:\n\tret, frame = cap.read()\n\n\t# No more images; exit.\n\tif not ret:\n\t\tbreak\n\n\t# Feed the image into the face detector.\n\tfd.input_image(frame)\n\n\t# Get the ROI containing the face. This will be `None` if no face is\n\t# detected.\n\tROI = fd.get_face_region()\n\n\tif ROI is not None:\n\t\tx, y, w, h = ROI\n\t\tcv2.rectangle(frame, (x, y), (x+w, y+h), (0, 255, 0), 2)\n\n\tcv2.imshow(\"MROI_MTCNN Face Detector\", frame)\n\n\tif cv2.waitKey(1) == ord('q'):\n\t\tbreak\n\nfd.clean()\ncap.release()\ncv2.destroyAllWindows()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/ailabuser/bacha-hybrid-mroi-face-detection", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "mroi-fd", "package_url": "https://pypi.org/project/mroi-fd/", "platform": "", "project_url": "https://pypi.org/project/mroi-fd/", "project_urls": {"Homepage": "https://gitlab.com/ailabuser/bacha-hybrid-mroi-face-detection"}, "release_url": "https://pypi.org/project/mroi-fd/1.0.0.post3/", "requires_dist": ["opencv-python (>=4.1.1.26)", "numpy (>=1.17.2)", "mtcnn (>=0.1.0)", "pandas (>=0.25.2)", "llist (>=0.6)", "tensorflow (>=2.0.0)"], "requires_python": ">=3.7.0", "summary": " Face detection wrapper using hybrid margin-based region of interest (MROI) approach.\"", "version": "1.0.0.post3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Automatic Installation</h2>\n<p>You can install the hybrid MROI face detection wrapper using <code>pip</code>:</p>\n<pre><code>pip install mroi-fd\n</code></pre>\n<h2>Manual Installation</h2>\n<p>This project is developed and tested on python version <code>3.7.4</code>. Please check\nyour python version using <code>python --version</code>. If your system has a different\npython version, you may want to consider using\n<a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a> (See <a href=\"#using-pyenv-linux-windows-macos\" rel=\"nofollow\">Using pyenv</a>)</p>\n<p>First, clone and <code>cd</code> into the repository:</p>\n<pre><code>git clone https://gitlab.com/ailabuser/bacha_hybrid_mroi_face_detection\ncd bacha_hybrid_mroi_face_detection\n</code></pre>\n<h3>On Windows:</h3>\n<p>Create a python virtual environment:</p>\n<pre><code>mkvirtualenv venv\n</code></pre>\n<p>Activate the virtual environment (<code>deactivate</code> to deactivate the virtual\nenvironment):</p>\n<pre><code>workon venv\n</code></pre>\n<p>Install all the required dependencies while still having the virtual environment\nactive:</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<h3>On Linux:</h3>\n<p>Create a python virtual environment:</p>\n<pre><code>virtualenv -p /usr/bin/python3 venv\n</code></pre>\n<p>Activate the virtual environment (<code>deactivate</code> to deactivate the virtual\nenvironment):</p>\n<pre><code>source venv/bin/activate\n</code></pre>\n<p>Install all the required dependencies while still having the virtual environment\nactive:</p>\n<pre><code>pip install -r requirements.txt\n</code></pre>\n<h3>Using pyenv (Linux, Windows, MacOS)</h3>\n<p>If your python version is not 3.7.4, you may want to use\n<a href=\"https://github.com/pyenv/pyenv\" rel=\"nofollow\">pyenv</a>. After you have installed <code>pyenv</code>,\ninstall the specific python version. On Linux, this can be done by running the\nfollowing command:</p>\n<pre><code>env PYTHON_CONFIGURE_OPTS=\"--enable-shared\" pyenv install 3.7.4\n</code></pre>\n<p>Then, create a virtual environment:</p>\n<pre><code>pyenv virtualenv 3.7.4 bacha_mroi_face_detection\n</code></pre>\n<p>You can activate the virtual environment using <code>pyenv</code> like so:</p>\n<pre><code>pyenv activate bacha_mroi_face_detection\n</code></pre>\n<h2>Description</h2>\n<p>The face detection technique used hybrid margin-based region of interest (MROI)\napproach. It is hybrid in the sense that the implementation runs one main\nroutine to detect a face, but switch to an escape routine when the main routine\nfails. Using MROI increase the face detection speed by having the selected face\ndetection algorithm to only consider a sub-region (where a face was previously\ndetected) instead of the full frame.</p>\n<p>There are three pre-defined selection of main routines available for you to use:</p>\n<ol>\n<li>Haar cascade classifier</li>\n<li>Joint cascade</li>\n<li>Multi-task Convolutional Neural Network (MTCNN)</li>\n</ol>\n<p>When the main routine failed to detect a face, the implementation switch to the\nescape routine which runs template matching algorithm.</p>\n<h1>Example</h1>\n<h2>Using the hybrid MROI for your face detection implementation</h2>\n<p>In order to use your face detection algorithm with the hybrid MROI face\ndetector, you need to create a subclass which inherit the <code>FaceDetector</code> class,\nand override its <code>detect</code> method. The implementation requires the<code>detect</code>\nmethod to return either a face ROI or <code>None</code>; otherwise, the hybrid MROI face\ndetector may fail.</p>\n<p>Here's an example, in which we use a <a href=\"https://pypi.org/project/mtcnn/\" rel=\"nofollow\">python implementation of\nMTCNN</a>:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cv2</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mtcnn.mtcnn</span> <span class=\"kn\">import</span> <span class=\"n\">MTCNN</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mroi_fd</span> <span class=\"kn\">import</span> <span class=\"n\">FaceDetector</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MROI_MTCNN</span><span class=\"p\">(</span><span class=\"n\">FaceDetector</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n\n    \t<span class=\"c1\"># The main routine face detector object used to detect faces.</span>\n        <span class=\"n\">fd_obj</span> <span class=\"o\">=</span> <span class=\"n\">MTCNN</span><span class=\"p\">()</span>\n\n\t<span class=\"c1\"># Initialize using base class constructor. We pass the face detector</span>\n\t<span class=\"c1\"># object (fd_obj) and use the MROI with fixed-margin approach with</span>\n\t<span class=\"c1\"># a template matching escape routine.</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">fd_obj</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">FaceDetector</span><span class=\"o\">.</span><span class=\"n\">FMTM</span><span class=\"p\">)</span>\n\n    <span class=\"nd\">@staticmethod</span>\n    <span class=\"k\">def</span> <span class=\"nf\">detect</span><span class=\"p\">(</span><span class=\"n\">fd_obj</span><span class=\"p\">,</span> <span class=\"n\">image</span><span class=\"p\">):</span>\n\n        <span class=\"n\">rgb_src</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">cvtColor</span><span class=\"p\">(</span><span class=\"n\">image</span><span class=\"p\">,</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">COLOR_BGR2RGB</span><span class=\"p\">)</span>\n        <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">fd_obj</span><span class=\"o\">.</span><span class=\"n\">detect_faces</span><span class=\"p\">(</span><span class=\"n\">rgb_src</span><span class=\"p\">)</span>\n\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"n\">result</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'box'</span><span class=\"p\">]</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"k\">return</span> <span class=\"kc\">None</span>\n</pre>\n<p>Internally, this was basically how the pre-defined hyrbid MROI face detectors\n(i.e., <code>MROI_HaarCascade</code> and <code>MROI_MTCNN</code>) was defined. Simply import them with</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">mroi_fd</span> <span class=\"kn\">import</span> <span class=\"n\">MROI_HaarCascade</span><span class=\"p\">,</span> <span class=\"n\">MROI_MTCNN</span>\n</pre>\n<h2>Running the face detector</h2>\n<p>To use the face detector, simply instantiate the hybrid MROI face detector and\nrun it by invoking its <code>run</code> method. Below is a simple script that runs the\nface detector and feed it images in a loop.</p>\n<pre><span class=\"n\">fd</span> <span class=\"o\">=</span> <span class=\"n\">MROI_MTCNN</span><span class=\"p\">()</span>\n<span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span> <span class=\"c1\"># This runs the face detector in the background.</span>\n\n<span class=\"n\">cap</span> <span class=\"o\">=</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">VideoCapture</span><span class=\"p\">(</span><span class=\"s2\">\"/path/to/video/file\"</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n\t<span class=\"n\">ret</span><span class=\"p\">,</span> <span class=\"n\">frame</span> <span class=\"o\">=</span> <span class=\"n\">cap</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n\t<span class=\"c1\"># No more images; exit.</span>\n\t<span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">ret</span><span class=\"p\">:</span>\n\t\t<span class=\"k\">break</span>\n\n\t<span class=\"c1\"># Feed the image into the face detector.</span>\n\t<span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">input_image</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">)</span>\n\n\t<span class=\"c1\"># Get the ROI containing the face. This will be `None` if no face is</span>\n\t<span class=\"c1\"># detected.</span>\n\t<span class=\"n\">ROI</span> <span class=\"o\">=</span> <span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">get_face_region</span><span class=\"p\">()</span>\n\n\t<span class=\"k\">if</span> <span class=\"n\">ROI</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n\t\t<span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">h</span> <span class=\"o\">=</span> <span class=\"n\">ROI</span>\n\t\t<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">rectangle</span><span class=\"p\">(</span><span class=\"n\">frame</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">+</span><span class=\"n\">w</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">+</span><span class=\"n\">h</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">255</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">),</span> <span class=\"mi\">2</span><span class=\"p\">)</span>\n\n\t<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">imshow</span><span class=\"p\">(</span><span class=\"s2\">\"MROI_MTCNN Face Detector\"</span><span class=\"p\">,</span> <span class=\"n\">frame</span><span class=\"p\">)</span>\n\n\t<span class=\"k\">if</span> <span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">waitKey</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"nb\">ord</span><span class=\"p\">(</span><span class=\"s1\">'q'</span><span class=\"p\">):</span>\n\t\t<span class=\"k\">break</span>\n\n<span class=\"n\">fd</span><span class=\"o\">.</span><span class=\"n\">clean</span><span class=\"p\">()</span>\n<span class=\"n\">cap</span><span class=\"o\">.</span><span class=\"n\">release</span><span class=\"p\">()</span>\n<span class=\"n\">cv2</span><span class=\"o\">.</span><span class=\"n\">destroyAllWindows</span><span class=\"p\">()</span>\n</pre>\n\n          </div>"}, "last_serial": 6285522, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9eb666a9f2933ea4f9cdc606b6703e3b", "sha256": "d912bee6498652881615d1c3abb10ed9af5ea5dbd930055f556f5c1beaf7fe9c"}, "downloads": -1, "filename": "mroi_fd-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9eb666a9f2933ea4f9cdc606b6703e3b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12060, "upload_time": "2019-12-09T07:21:56", "upload_time_iso_8601": "2019-12-09T07:21:56.943356Z", "url": "https://files.pythonhosted.org/packages/0d/42/8796ab574796faa8c6a56e796f2cd63c32f1f659f509301a444e85ab72fa/mroi_fd-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3065103a2c7f87d87afe1ebec0ccda66", "sha256": "a656e497b1eff9bc9bf101da89fa38d526ec8c63b6a2f407682fb6fadbc96a54"}, "downloads": -1, "filename": "mroi-fd-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3065103a2c7f87d87afe1ebec0ccda66", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8519, "upload_time": "2019-12-09T07:22:21", "upload_time_iso_8601": "2019-12-09T07:22:21.517883Z", "url": "https://files.pythonhosted.org/packages/fe/2f/37f3545e906d223913fdc01d4251eaa1cd3165cdc542892b71b8da08fc61/mroi-fd-0.0.1.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "4945a23e87d59899a1002c5f6ba7d83d", "sha256": "e96ff0a0e163b86974dd036691483aab0eba7a33938c30fe3ec31267cb7a2348"}, "downloads": -1, "filename": "mroi_fd-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "4945a23e87d59899a1002c5f6ba7d83d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12061, "upload_time": "2019-12-09T07:22:00", "upload_time_iso_8601": "2019-12-09T07:22:00.338096Z", "url": "https://files.pythonhosted.org/packages/08/76/617fce19e76aac9624d437c4d7ac6fe4cec4ae8fb118509e1e0a27a3a2f3/mroi_fd-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "36dfef66174863e0b53a873dcdbf8bc4", "sha256": "aaffd7f671709eff7a94cc876cfb8c582314bb9bd98b0724621cc35e8250faa7"}, "downloads": -1, "filename": "mroi-fd-0.0.4.tar.gz", "has_sig": false, "md5_digest": "36dfef66174863e0b53a873dcdbf8bc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8518, "upload_time": "2019-12-09T07:22:23", "upload_time_iso_8601": "2019-12-09T07:22:23.977313Z", "url": "https://files.pythonhosted.org/packages/cd/8f/eb0eac54035aa3bfde49278ddc313900fb1d698de21d687c3d7c6dd04524/mroi-fd-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "a7f5f9b52b274d706b38c580f3f4b1fd", "sha256": "e6e2114c47d7a7564d09ca5ecbd9eafc86bee8aa510934bb47bbd346f944d025"}, "downloads": -1, "filename": "mroi_fd-0.0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "a7f5f9b52b274d706b38c580f3f4b1fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12096, "upload_time": "2019-12-09T07:22:02", "upload_time_iso_8601": "2019-12-09T07:22:02.674405Z", "url": "https://files.pythonhosted.org/packages/a1/32/728ada9bd14781c1ce91fda64f2001b2aac7f40ce318d83f252b1b243bd1/mroi_fd-0.0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ef0560d29564f904ac93cfeb464b2f4d", "sha256": "947628d5e75f18395ecaabb459c8e415bdb2965ea28413d5fff63af1fa7529e9"}, "downloads": -1, "filename": "mroi-fd-0.0.5.tar.gz", "has_sig": false, "md5_digest": "ef0560d29564f904ac93cfeb464b2f4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8564, "upload_time": "2019-12-09T07:22:26", "upload_time_iso_8601": "2019-12-09T07:22:26.024074Z", "url": "https://files.pythonhosted.org/packages/ea/4f/481f38a48d9c817120970a9293fc66d78ea18945769ab971020407cc6932/mroi-fd-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "e44adccbec3dcd75a669260c88ae8c6a", "sha256": "58707082c8a865a1431901ab2de6dabd2971079522ee042dfb7331c442bb6642"}, "downloads": -1, "filename": "mroi_fd-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "e44adccbec3dcd75a669260c88ae8c6a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12161, "upload_time": "2019-12-09T07:22:05", "upload_time_iso_8601": "2019-12-09T07:22:05.139402Z", "url": "https://files.pythonhosted.org/packages/d5/51/118371fc0506ec74ef3ea91913923f94f47d15cdd20c692333bbda2ee88a/mroi_fd-0.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ec07bf00d3f1dee3e73c8868e83936c", "sha256": "956d8230b048bba973b0143a2bc762f7b6beaa8ec8f873df08c9ec98b14ec6ae"}, "downloads": -1, "filename": "mroi-fd-0.0.6.tar.gz", "has_sig": false, "md5_digest": "7ec07bf00d3f1dee3e73c8868e83936c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8722, "upload_time": "2019-12-09T07:22:27", "upload_time_iso_8601": "2019-12-09T07:22:27.693349Z", "url": "https://files.pythonhosted.org/packages/6b/f7/d054017dc236cd504f21d7819dbe1cd3b5565891716d144e662625a696ab/mroi-fd-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "efecfaa19662e212352df24a59713473", "sha256": "183b9e81c9bc5a7c91708808db9c167428dda9b7719303efb4a97e914305fc41"}, "downloads": -1, "filename": "mroi_fd-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "efecfaa19662e212352df24a59713473", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12169, "upload_time": "2019-12-09T07:22:09", "upload_time_iso_8601": "2019-12-09T07:22:09.638777Z", "url": "https://files.pythonhosted.org/packages/c9/80/0bdc21e7c2f01e95bf6382f2c18946c600fb815dccfdf5d387dc9ada337c/mroi_fd-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4ecbc5bdab563250d3a1dd8cc8ea52f2", "sha256": "9b7837a8111eddb1668ac98ac62c28563bd505b4578bd3933848e9d011627082"}, "downloads": -1, "filename": "mroi-fd-0.0.7.tar.gz", "has_sig": false, "md5_digest": "4ecbc5bdab563250d3a1dd8cc8ea52f2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8736, "upload_time": "2019-12-09T07:22:32", "upload_time_iso_8601": "2019-12-09T07:22:32.171244Z", "url": "https://files.pythonhosted.org/packages/d1/eb/d84a6e0a9008cdd83d884d0743fdef666e210bd81b0382a0c4feea3536a8/mroi-fd-0.0.7.tar.gz", "yanked": false}], "0.0.7a1": [{"comment_text": "", "digests": {"md5": "62a7dc45dd7002fbe7790923b0ca63a0", "sha256": "c5c7dec2dd5dbbde475166a60d85a501f6e2f36730845ccb7d57fdce5390e0a0"}, "downloads": -1, "filename": "mroi_fd-0.0.7a1-py3-none-any.whl", "has_sig": false, "md5_digest": "62a7dc45dd7002fbe7790923b0ca63a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12201, "upload_time": "2019-12-09T07:22:07", "upload_time_iso_8601": "2019-12-09T07:22:07.592288Z", "url": "https://files.pythonhosted.org/packages/0a/75/6aeda03a21dad9c2fa517f152de4c97aa55e9ff638cd089de98da48f8a56/mroi_fd-0.0.7a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e6adc970919bd534ae8d21882857f2b", "sha256": "14b502a92a8f8ee2d238a961e7af6dc6644d3bf4f17e857fdee90f54d42a9bf4"}, "downloads": -1, "filename": "mroi-fd-0.0.7a1.tar.gz", "has_sig": false, "md5_digest": "0e6adc970919bd534ae8d21882857f2b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8746, "upload_time": "2019-12-09T07:22:29", "upload_time_iso_8601": "2019-12-09T07:22:29.711097Z", "url": "https://files.pythonhosted.org/packages/53/7c/dafc43e7952afdfde3571e42516b187e34afe7161a6ab1fc0d93bed65e7f/mroi-fd-0.0.7a1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "c19c391b056c7b902598425c9824170b", "sha256": "f96550f4a9c01bb8ded4cf215bd3920351d02f35fb6cc67d3fb3781e74fbc1b3"}, "downloads": -1, "filename": "mroi_fd-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c19c391b056c7b902598425c9824170b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12249, "upload_time": "2019-12-09T07:27:22", "upload_time_iso_8601": "2019-12-09T07:27:22.581708Z", "url": "https://files.pythonhosted.org/packages/60/cb/8c6f7b65d5fa9aab17a001460b83fbbfc1f31971c4e67edbf6c464e8a89b/mroi_fd-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b8446baf79de04ca821a0731ae8431f1", "sha256": "ca12adfb881a1eb7caddb3dd1a8a4c3c4e00286f454e29754c3ceda6621c8878"}, "downloads": -1, "filename": "mroi-fd-1.0.0.tar.gz", "has_sig": false, "md5_digest": "b8446baf79de04ca821a0731ae8431f1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8789, "upload_time": "2019-12-09T07:27:38", "upload_time_iso_8601": "2019-12-09T07:27:38.241121Z", "url": "https://files.pythonhosted.org/packages/66/94/d36447f7e433e22cde7a379af37a3f46ed9824ea22430bc72b62032423bd/mroi-fd-1.0.0.tar.gz", "yanked": false}], "1.0.0.post1": [{"comment_text": "", "digests": {"md5": "fa9cd3f9b5573c2661768b40db5d087f", "sha256": "57f3a23e57ed0ee3e3622b160505312241a8ac785bbdfa8e1899a5ba404f2a65"}, "downloads": -1, "filename": "mroi_fd-1.0.0.post1-py3-none-any.whl", "has_sig": false, "md5_digest": "fa9cd3f9b5573c2661768b40db5d087f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 11997, "upload_time": "2019-12-09T07:37:21", "upload_time_iso_8601": "2019-12-09T07:37:21.531069Z", "url": "https://files.pythonhosted.org/packages/75/74/004cfb180a3854676b887f6892b2625afd36666ec0c468d3f3ee075c5919/mroi_fd-1.0.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "133bfb3ee5c66e001d2b16a1224a9a46", "sha256": "64553e2a25ac1388e3d681601868afe720d3364793ca8e886a438e1106af1022"}, "downloads": -1, "filename": "mroi-fd-1.0.0.post1.tar.gz", "has_sig": false, "md5_digest": "133bfb3ee5c66e001d2b16a1224a9a46", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8258, "upload_time": "2019-12-09T07:37:33", "upload_time_iso_8601": "2019-12-09T07:37:33.710127Z", "url": "https://files.pythonhosted.org/packages/47/7e/6e7cd069b60a1aae2f6835855e2d7105eb3a88cd796e663a4fc7e954e48a/mroi-fd-1.0.0.post1.tar.gz", "yanked": false}], "1.0.0.post2": [{"comment_text": "", "digests": {"md5": "b37ebbbb01a0e4a6c23d14034c5bfb46", "sha256": "d4fd23109bd607e04bd2008689b2c711a7cc63eb7ff1280693540bd0625c7c4a"}, "downloads": -1, "filename": "mroi_fd-1.0.0.post2-py3-none-any.whl", "has_sig": false, "md5_digest": "b37ebbbb01a0e4a6c23d14034c5bfb46", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 11997, "upload_time": "2019-12-12T11:53:30", "upload_time_iso_8601": "2019-12-12T11:53:30.779504Z", "url": "https://files.pythonhosted.org/packages/ed/83/973c0384549d892ccd1a3e5f9ae576fd01ec4dc1be1b0300c272496f52a3/mroi_fd-1.0.0.post2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "634f906eeccc919803d465ea1df4f930", "sha256": "ded1eb407a0f574c357ed3f97a4d2aa4644e3424da3b484b82cf4e04d68484ef"}, "downloads": -1, "filename": "mroi-fd-1.0.0.post2.tar.gz", "has_sig": false, "md5_digest": "634f906eeccc919803d465ea1df4f930", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 8266, "upload_time": "2019-12-12T11:53:34", "upload_time_iso_8601": "2019-12-12T11:53:34.964329Z", "url": "https://files.pythonhosted.org/packages/54/c4/e2bb1c0adcc2ad9a20859ed3cc1a1943b38a37f368a9091f8f513fb82d8c/mroi-fd-1.0.0.post2.tar.gz", "yanked": false}], "1.0.0.post3": [{"comment_text": "", "digests": {"md5": "c139536a567b097e74909230773d0fbe", "sha256": "ddd7744705f1a210d813b2c5e293c13ed8da9868ace0455867e083cb0da7fa67"}, "downloads": -1, "filename": "mroi_fd-1.0.0.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "c139536a567b097e74909230773d0fbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 11991, "upload_time": "2019-12-12T11:53:32", "upload_time_iso_8601": "2019-12-12T11:53:32.755871Z", "url": "https://files.pythonhosted.org/packages/f5/be/9e386e0b6289a8895dde8598c65cae606840fc7f1e7f508196368cc3cee7/mroi_fd-1.0.0.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bded07f35b0b51eea7ed17687c59088d", "sha256": "3f62508ea4290270aa2950f9068aae709514e05693cd3d2ce436e5fa7e77069a"}, "downloads": -1, "filename": "mroi-fd-1.0.0.post3.tar.gz", "has_sig": false, "md5_digest": "bded07f35b0b51eea7ed17687c59088d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 8256, "upload_time": "2019-12-12T11:53:36", "upload_time_iso_8601": "2019-12-12T11:53:36.698681Z", "url": "https://files.pythonhosted.org/packages/bb/89/817c6eea6fd364ae4cbba6eeee45efe9135f6dbe158fd1602c8378d1235e/mroi-fd-1.0.0.post3.tar.gz", "yanked": false}], "1a1": [{"comment_text": "", "digests": {"md5": "371c9572e6cf3cd07d85071d500cbbad", "sha256": "9e667f538c99cdb7719f5ec34a55d495e816514ce45841158faf9760b282de3f"}, "downloads": -1, "filename": "mroi_fd-1a1-py3-none-any.whl", "has_sig": false, "md5_digest": "371c9572e6cf3cd07d85071d500cbbad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.4", "size": 12228, "upload_time": "2019-12-09T07:22:11", "upload_time_iso_8601": "2019-12-09T07:22:11.524128Z", "url": "https://files.pythonhosted.org/packages/73/df/bd4c2f6298b08391c0c2457a9c6f576c664f814d19e232a2d518d0fb0b34/mroi_fd-1a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a835b92a5cfcaeab913af405b8f0e418", "sha256": "29e3a7050f2f6a1e31f9589ad881924cc5edb84c0b5c33a4644179e20a500ebd"}, "downloads": -1, "filename": "mroi-fd-1a1.tar.gz", "has_sig": false, "md5_digest": "a835b92a5cfcaeab913af405b8f0e418", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.4", "size": 8817, "upload_time": "2019-12-09T07:22:34", "upload_time_iso_8601": "2019-12-09T07:22:34.071351Z", "url": "https://files.pythonhosted.org/packages/40/0c/59e500e312182b2e759d1a25c3e08d7180a2b4f38f858b0d30f8e5fa76ed/mroi-fd-1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c139536a567b097e74909230773d0fbe", "sha256": "ddd7744705f1a210d813b2c5e293c13ed8da9868ace0455867e083cb0da7fa67"}, "downloads": -1, "filename": "mroi_fd-1.0.0.post3-py3-none-any.whl", "has_sig": false, "md5_digest": "c139536a567b097e74909230773d0fbe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.0", "size": 11991, "upload_time": "2019-12-12T11:53:32", "upload_time_iso_8601": "2019-12-12T11:53:32.755871Z", "url": "https://files.pythonhosted.org/packages/f5/be/9e386e0b6289a8895dde8598c65cae606840fc7f1e7f508196368cc3cee7/mroi_fd-1.0.0.post3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bded07f35b0b51eea7ed17687c59088d", "sha256": "3f62508ea4290270aa2950f9068aae709514e05693cd3d2ce436e5fa7e77069a"}, "downloads": -1, "filename": "mroi-fd-1.0.0.post3.tar.gz", "has_sig": false, "md5_digest": "bded07f35b0b51eea7ed17687c59088d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.0", "size": 8256, "upload_time": "2019-12-12T11:53:36", "upload_time_iso_8601": "2019-12-12T11:53:36.698681Z", "url": "https://files.pythonhosted.org/packages/bb/89/817c6eea6fd364ae4cbba6eeee45efe9135f6dbe158fd1602c8378d1235e/mroi-fd-1.0.0.post3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:00 2020"}