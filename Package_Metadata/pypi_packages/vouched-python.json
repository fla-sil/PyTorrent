{"info": {"author": "John Cao", "author_email": "cao@vouched.id", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Academic Free License (AFL)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# vouched-python\n\nInstall the wheel on Python 3:\n\n```sh\npip install --user vouched_python\n```\n\nCreate update `.env` with the following test environment values:\n\n```python\nVOUCHED_SERVER=https://verify.woollylabs.com/graphql\nTEST_API_KEY_NO_PROD_DANGER=test_key\nTEST_JOB_ID=<ID>\nAPI_KEY=api_key\nJOB_ID=<ID>\n```\n\n\nRun tests in the Python 3.7:\n\n```sh\npytest\n```\n\n## Build Package\n\nTo build python package , the wheel will be created in the `dist` folder. Run:\n\n```\npython setup.py sdist bdist_wheel\n```\n\n## Quick start\nHere's a very simple server using Vouched for Node.js for authentication\n\n### Create the Vouched client\n\n```python\nfrom vouched.api import Client\nclient = Client(secret_app_key)\n```\n\n#### Arguments\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| key | String | * | Secret Application Key |\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| key | String | * | Secret Application Key |\n\n#### Errors\n\n[`InvalidRequestError`](#InvalidRequestError)\n\n\n### Update client key\n\n```python\ncret_client_key = <SECRET>\ndata = client.update_secret_client_key(secret_client_key=secret_client_key)\n```\n\n#### Arguments\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| secretClientKey | String | * | The secret key to be included in the header X-Api-Key of the webhook call. |\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| secretClientKey | String | * | The updated secretClientKey |\n\n#### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n\n### Submit a verification job\n\n```python\nfrom vouched.utils import image_to_base64\n\nuser_photo_base64 = image_to_base64('/opt/app/tests/data/selfie.png')\nid_photo_base64 = image_to_base64('/opt/app/tests/data/id.jpg')\njob = client.submit(\n    user_photo=user_photo_base64,\n    id_photo=id_photo_base64,\n    properties=[\n      dict(name='internal_id',value='iid'),\n      dict(name='internal_username',value='bob'),\n    ],\n    type='id-verification',\n    first_name='Janice',\n    dob='06/22/1990',\n    last_name='Way'\n)\n\n```\n\n#### Arguments\n\n|type|String|*|Type of AI job (\"id-verification\")}|\n| ----------- | ----------- | ----------- | ----------- |\n|callbackURL|String||Upon the jobs completion, Vouched will POST the job results to the webhook. If the callbackURL is not given, Vouch will process the job in realtime.|\n|`properties`|Object||Arbitrary properties to add to the job, i.e. application ids. Described below.|\n|`parameters`|Object|*|Object for id-verification. Described below.|\n\n#### `properties` - arbitrary properties to add to the job, i.e. application ids\n\n|type|String|*|Type of AI job (\"id-verification\")}|\n| ----------- | ----------- | ----------- | ----------- |\n|name|String||Name of the property|\n|value|String||Value of the property|\n\n#### `parameters` - object for id-verification.\n\n|type|String|*|Type of AI job (\"id-verification\")|\n| ----------- | ----------- | ----------- | ----------- |\n|userPhoto|String| Buffer||The users id comparison photo. Supported types include image/png, image/jpeg|\n|idPhoto|String| Buffer|*|The users official identification photo. Supported types include image/png, image/jpeg|\n|idPhotoBack|String| Buffer|*|The users official back of the identification photo. Supported types include image/png, image/jpeg.|\n|firstName|String|*|The users first name.|\n|lastName|String|*|The users last name.|\n|dob|String|*|Date in the format MM/DD/YYYY.|\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| job | Job | * | The newly created job. |\n\n#### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n\n### Remove a job\n\n```python\njob = client.remove_job(\n    id='USkjk33'\n)\n```\n\n#### Arguments\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| id | String | * | ID of the job to remove. |\n\n#### Returns\n\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n| job | Job | * | The newly created job. |\n\n#### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n\n### Provide results on jobs\n```python\nparams := map[string]interface{}{\n  \"page\":       1,\n  \"sortBy\":     \"date\",\n  \"sortOrder\":  \"desc\",\n  \"from\":       \"1990-12-24T04:44:00+00:00\",\n  \"to\":         \"2020-12-24T04:44:00+00:00\",\n  \"type\":       \"id-verification\",\n  \"token\":       \"SESSION_TOKEN\",\n  \"status\":     \"active\",\n  \"withPhotos\": false,\n  \"pageSize\":   2,\n}\nif resp, err := c.Jobs(params); err != nil {\n  fmt.Printf(\"Error: %+v\\n\", err)\n} else {\n  fmt.Printf(\"Jobs: %+v\\n\", resp)\n}\n\njobs = client.jobs(\n    page=1,\n    page_size=2,\n    type='id-verification',\n    token=<TOKEN_FROM_WEB_CLIENT>,\n    status='active',\n    sort_by='date',\n    sort_order='desc',\n    with_photos=True,\n    from_date='2017-01-24T04:44:00+00:00',\n    to_date='2020-12-24T04:44:00+00:00'\n )\n```\n\n#### Arguments\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|id|String|*|ID of the job to remove.|\n|type|String||Type of job (\"id-verification\").|\n|ids|[ID]||Filter by a list of job IDs.|\n|page|String||Paginate list by page where the page starts at 1, defaults to 1.|\n|pageSize|String||The number of items for a page, max 1000, defaults to 100.|\n|sortBy|String||Sort the list from (\"date\", \"status\").|\n|sortOrder|String||Order the sort from (\"asc\", \"desc\").|\n|status|String||Filter by status from (\"active\",\"completed\")|\n|to|String||Filter by submitted to ISO8601 date.|\n|from|String||Filter by submitted from ISO8601 date.|\n|withPhotos|Boolean||Defaults to False. The returned job will contain detailed information idPhoto, idPhotoBack, and userPhoto.|\n\n#### Returns\n| Parameter\t| Type | Required | Description |\n| ------ | ------ | ------ | ------ |\n|jobs|[Job]|*|The removed job.|\n|totalPages|Int|*|Total number of pages of jobs.|\n|pageSize|Int|*|The requested page size.|\n|page|Int|*|The requested page.|\n|total|Int|*|Total number of filtered jobs.|\n\n### Errors\n[`AuthenticationError`](#AuthenticationError)\n[`ConnectionError`](#ConnectionError)\n[`InvalidRequestError`](#InvalidRequestError)\n[`UnknownSystemError`](#UnknownSystemError)\n\n## Types\n### Errors\n\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|`type`|String|*||\n|message|String|*|Type of job (\"id-verification\").|\n|suggestion|[ID]||A suggestion for matching name, John Smith, Jon Smith.|\n|errors|[Error]|InvalidRequestError contains a sub list of errors|\n\n#### `type`\n`InvalidRequestError` - The request is invalid.\n`FaceMatchError` - Face match felled below the threshold\n`NameMatchError` - Name match felled below the threshold\n`BirthDateMatchError` - Birth date match felled below the threshold\n`InvalidIdPhotoError` - The ID is invalid\n`InvalidUserPhotoError` - The user photo (selfie) is invalid\n`UNAUTHENTICATED`/`AuthenticationError` - The request could not be authenticated\n`ConnectionError` - A connection error occurred while communicating to the Vouched service\n`InvalidIdBackPhotoError` - The back of the ID is invalid\n`UnknownSystemError` - A unknown system error occurred\n`InvalidIdError` - The ID is invalid\n\n### Job\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|id|ID |*|Job ID|\n|status|String|*|Job status from (\"active\",\"completed\")|\n|submitted|String||ISO8601 date\n|`request`|Object||Object for 'id-verification'.|\n|`result`|Object||Object of 'id-verification'.|\n|errors|[Error] ||List of errors for unsuccessful completed jobs.|\n\n#### `request`\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|type |String |* |Job type|\n|callbackURL |String ||POST enabled webhook|\n|parameters |JobParameters |* |Object for 'id-verification'|\n\n#### `result`\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|success|Boolean|*|Did the id verification completed successfully?|\n|type|String||The id type|\n|callbackURL|String||POST enabled webhook|\n|state|String||The issuing state of the id if applicable|\n|country|String||The issuing country of the id|\n|id|String||The verified id number of the id|\n|expireDate|String||The verified expired date in the format MM/DD/YYYY|\n|birthDate|String||The verified date in the format MM/DD/YYYY|\n|firstName|String||The user's verified first name.|\n|lastName|String||The user's verified last name|\n|confidences|Confidences||Confidence scores|\n\n### Confidences\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|id|Float |*|Confidence score for an id photo, 0-1.0|\n|backId|Float |*|Confidence score for the back of the id photo, 0-1.0|\n|selfie|Float |*|Confidence score for a selfie photo, 0-1.0|\n|idMatch|Float |*|Confidence score for matching data on the id, 0-1.0|\n|faceMatch|Float |*|Confidence score for matching faces, 0-1.0|\n\n### JobParameters\n|Parameter|Type|Required|Description|\n| ------ | ------ | ------ | ------ |\n|idPhoto|String |*|The user's official identification photo in base64.|\n|userPhoto|String ||The user's id comparison photo in base64.|\n|twicPhoto|String ||The user's id twic id photo in base64.|\n|carInsurancePhoto|String ||The user's id car insurance photo in base64.|\n|dotPhoto|String |*|The user's id dot letter photo in base64.|\n|idPhotoBack|String ||The user's official back of the identification photo in base64.|\n|dob|String ||Date in the format MM/DD/YYYY.|\n|firstName|String ||The user's first name.|\n|lastName|String ||The user's last name.|\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vouched/vouched-python", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "vouched-python", "package_url": "https://pypi.org/project/vouched-python/", "platform": "", "project_url": "https://pypi.org/project/vouched-python/", "project_urls": {"Homepage": "https://github.com/vouched/vouched-python"}, "release_url": "https://pypi.org/project/vouched-python/0.0.5b10/", "requires_dist": ["wheel (==0.32.2)", "opencv-python (==3.4.4.19)", "gql (==0.1.0)", "pyopenssl (==18.0.0)", "ndg-httpsclient (==0.5.1)", "pyasn1 (==0.4.4)", "python-magic (==0.4.15)", "pytest (==3.9.2)", "requests[security] (==2.20.0)", "requests-mock (==1.5.2)"], "requires_python": "", "summary": "Vouched Client", "version": "0.0.5b10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>vouched-python</h1>\n<p>Install the wheel on Python 3:</p>\n<pre>pip install --user vouched_python\n</pre>\n<p>Create update <code>.env</code> with the following test environment values:</p>\n<pre><span class=\"n\">VOUCHED_SERVER</span><span class=\"o\">=</span><span class=\"n\">https</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">verify</span><span class=\"o\">.</span><span class=\"n\">woollylabs</span><span class=\"o\">.</span><span class=\"n\">com</span><span class=\"o\">/</span><span class=\"n\">graphql</span>\n<span class=\"n\">TEST_API_KEY_NO_PROD_DANGER</span><span class=\"o\">=</span><span class=\"n\">test_key</span>\n<span class=\"n\">TEST_JOB_ID</span><span class=\"o\">=&lt;</span><span class=\"n\">ID</span><span class=\"o\">&gt;</span>\n<span class=\"n\">API_KEY</span><span class=\"o\">=</span><span class=\"n\">api_key</span>\n<span class=\"n\">JOB_ID</span><span class=\"o\">=&lt;</span><span class=\"n\">ID</span><span class=\"o\">&gt;</span>\n</pre>\n<p>Run tests in the Python 3.7:</p>\n<pre>pytest\n</pre>\n<h2>Build Package</h2>\n<p>To build python package , the wheel will be created in the <code>dist</code> folder. Run:</p>\n<pre><code>python setup.py sdist bdist_wheel\n</code></pre>\n<h2>Quick start</h2>\n<p>Here's a very simple server using Vouched for Node.js for authentication</p>\n<h3>Create the Vouched client</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vouched.api</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n<span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">secret_app_key</span><span class=\"p\">)</span>\n</pre>\n<h4>Arguments</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>String</td>\n<td>*</td>\n<td>Secret Application Key</td>\n</tr></tbody></table>\n<h4>Returns</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>key</td>\n<td>String</td>\n<td>*</td>\n<td>Secret Application Key</td>\n</tr></tbody></table>\n<h4>Errors</h4>\n<p><a href=\"#InvalidRequestError\" rel=\"nofollow\"><code>InvalidRequestError</code></a></p>\n<h3>Update client key</h3>\n<pre><span class=\"n\">cret_client_key</span> <span class=\"o\">=</span> <span class=\"o\">&lt;</span><span class=\"n\">SECRET</span><span class=\"o\">&gt;</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">update_secret_client_key</span><span class=\"p\">(</span><span class=\"n\">secret_client_key</span><span class=\"o\">=</span><span class=\"n\">secret_client_key</span><span class=\"p\">)</span>\n</pre>\n<h4>Arguments</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>secretClientKey</td>\n<td>String</td>\n<td>*</td>\n<td>The secret key to be included in the header X-Api-Key of the webhook call.</td>\n</tr></tbody></table>\n<h4>Returns</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>secretClientKey</td>\n<td>String</td>\n<td>*</td>\n<td>The updated secretClientKey</td>\n</tr></tbody></table>\n<h4>Errors</h4>\n<p><a href=\"#AuthenticationError\" rel=\"nofollow\"><code>AuthenticationError</code></a>\n<a href=\"#ConnectionError\" rel=\"nofollow\"><code>ConnectionError</code></a>\n<a href=\"#InvalidRequestError\" rel=\"nofollow\"><code>InvalidRequestError</code></a>\n<a href=\"#UnknownSystemError\" rel=\"nofollow\"><code>UnknownSystemError</code></a></p>\n<h3>Submit a verification job</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">vouched.utils</span> <span class=\"kn\">import</span> <span class=\"n\">image_to_base64</span>\n\n<span class=\"n\">user_photo_base64</span> <span class=\"o\">=</span> <span class=\"n\">image_to_base64</span><span class=\"p\">(</span><span class=\"s1\">'/opt/app/tests/data/selfie.png'</span><span class=\"p\">)</span>\n<span class=\"n\">id_photo_base64</span> <span class=\"o\">=</span> <span class=\"n\">image_to_base64</span><span class=\"p\">(</span><span class=\"s1\">'/opt/app/tests/data/id.jpg'</span><span class=\"p\">)</span>\n<span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">submit</span><span class=\"p\">(</span>\n    <span class=\"n\">user_photo</span><span class=\"o\">=</span><span class=\"n\">user_photo_base64</span><span class=\"p\">,</span>\n    <span class=\"n\">id_photo</span><span class=\"o\">=</span><span class=\"n\">id_photo_base64</span><span class=\"p\">,</span>\n    <span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"p\">[</span>\n      <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'internal_id'</span><span class=\"p\">,</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'iid'</span><span class=\"p\">),</span>\n      <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'internal_username'</span><span class=\"p\">,</span><span class=\"n\">value</span><span class=\"o\">=</span><span class=\"s1\">'bob'</span><span class=\"p\">),</span>\n    <span class=\"p\">],</span>\n    <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'id-verification'</span><span class=\"p\">,</span>\n    <span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s1\">'Janice'</span><span class=\"p\">,</span>\n    <span class=\"n\">dob</span><span class=\"o\">=</span><span class=\"s1\">'06/22/1990'</span><span class=\"p\">,</span>\n    <span class=\"n\">last_name</span><span class=\"o\">=</span><span class=\"s1\">'Way'</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>Arguments</h4>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>String</th>\n<th>*</th>\n<th>Type of AI job (\"id-verification\")}</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>callbackURL</td>\n<td>String</td>\n<td></td>\n<td>Upon the jobs completion, Vouched will POST the job results to the webhook. If the callbackURL is not given, Vouch will process the job in realtime.</td>\n</tr>\n<tr>\n<td><code>properties</code></td>\n<td>Object</td>\n<td></td>\n<td>Arbitrary properties to add to the job, i.e. application ids. Described below.</td>\n</tr>\n<tr>\n<td><code>parameters</code></td>\n<td>Object</td>\n<td>*</td>\n<td>Object for id-verification. Described below.</td>\n</tr></tbody></table>\n<h4><code>properties</code> - arbitrary properties to add to the job, i.e. application ids</h4>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>String</th>\n<th>*</th>\n<th>Type of AI job (\"id-verification\")}</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>name</td>\n<td>String</td>\n<td></td>\n<td>Name of the property</td>\n</tr>\n<tr>\n<td>value</td>\n<td>String</td>\n<td></td>\n<td>Value of the property</td>\n</tr></tbody></table>\n<h4><code>parameters</code> - object for id-verification.</h4>\n<table>\n<thead>\n<tr>\n<th>type</th>\n<th>String</th>\n<th>*</th>\n<th>Type of AI job (\"id-verification\")</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>userPhoto</td>\n<td>String</td>\n<td>Buffer</td>\n<td></td>\n</tr>\n<tr>\n<td>idPhoto</td>\n<td>String</td>\n<td>Buffer</td>\n<td>*</td>\n</tr>\n<tr>\n<td>idPhotoBack</td>\n<td>String</td>\n<td>Buffer</td>\n<td>*</td>\n</tr>\n<tr>\n<td>firstName</td>\n<td>String</td>\n<td>*</td>\n<td>The users first name.</td>\n</tr>\n<tr>\n<td>lastName</td>\n<td>String</td>\n<td>*</td>\n<td>The users last name.</td>\n</tr>\n<tr>\n<td>dob</td>\n<td>String</td>\n<td>*</td>\n<td>Date in the format MM/DD/YYYY.</td>\n</tr></tbody></table>\n<h4>Returns</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>job</td>\n<td>Job</td>\n<td>*</td>\n<td>The newly created job.</td>\n</tr></tbody></table>\n<h4>Errors</h4>\n<p><a href=\"#AuthenticationError\" rel=\"nofollow\"><code>AuthenticationError</code></a>\n<a href=\"#ConnectionError\" rel=\"nofollow\"><code>ConnectionError</code></a>\n<a href=\"#InvalidRequestError\" rel=\"nofollow\"><code>InvalidRequestError</code></a>\n<a href=\"#UnknownSystemError\" rel=\"nofollow\"><code>UnknownSystemError</code></a></p>\n<h3>Remove a job</h3>\n<pre><span class=\"n\">job</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">remove_job</span><span class=\"p\">(</span>\n    <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'USkjk33'</span>\n<span class=\"p\">)</span>\n</pre>\n<h4>Arguments</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>String</td>\n<td>*</td>\n<td>ID of the job to remove.</td>\n</tr></tbody></table>\n<h4>Returns</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>job</td>\n<td>Job</td>\n<td>*</td>\n<td>The newly created job.</td>\n</tr></tbody></table>\n<h4>Errors</h4>\n<p><a href=\"#AuthenticationError\" rel=\"nofollow\"><code>AuthenticationError</code></a>\n<a href=\"#ConnectionError\" rel=\"nofollow\"><code>ConnectionError</code></a>\n<a href=\"#InvalidRequestError\" rel=\"nofollow\"><code>InvalidRequestError</code></a>\n<a href=\"#UnknownSystemError\" rel=\"nofollow\"><code>UnknownSystemError</code></a></p>\n<h3>Provide results on jobs</h3>\n<pre><span class=\"n\">params</span> <span class=\"o\">:=</span> <span class=\"nb\">map</span><span class=\"p\">[</span><span class=\"n\">string</span><span class=\"p\">]</span><span class=\"n\">interface</span><span class=\"p\">{}{</span>\n  <span class=\"s2\">\"page\"</span><span class=\"p\">:</span>       <span class=\"mi\">1</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"sortBy\"</span><span class=\"p\">:</span>     <span class=\"s2\">\"date\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"sortOrder\"</span><span class=\"p\">:</span>  <span class=\"s2\">\"desc\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"from\"</span><span class=\"p\">:</span>       <span class=\"s2\">\"1990-12-24T04:44:00+00:00\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"to\"</span><span class=\"p\">:</span>         <span class=\"s2\">\"2020-12-24T04:44:00+00:00\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"type\"</span><span class=\"p\">:</span>       <span class=\"s2\">\"id-verification\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"token\"</span><span class=\"p\">:</span>       <span class=\"s2\">\"SESSION_TOKEN\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"status\"</span><span class=\"p\">:</span>     <span class=\"s2\">\"active\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"withPhotos\"</span><span class=\"p\">:</span> <span class=\"n\">false</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"pageSize\"</span><span class=\"p\">:</span>   <span class=\"mi\">2</span><span class=\"p\">,</span>\n<span class=\"p\">}</span>\n<span class=\"k\">if</span> <span class=\"n\">resp</span><span class=\"p\">,</span> <span class=\"n\">err</span> <span class=\"o\">:=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Jobs</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"p\">);</span> <span class=\"n\">err</span> <span class=\"o\">!=</span> <span class=\"n\">nil</span> <span class=\"p\">{</span>\n  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s2\">\"Error: %+v</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">err</span><span class=\"p\">)</span>\n<span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n  <span class=\"n\">fmt</span><span class=\"o\">.</span><span class=\"n\">Printf</span><span class=\"p\">(</span><span class=\"s2\">\"Jobs: %+v</span><span class=\"se\">\\n</span><span class=\"s2\">\"</span><span class=\"p\">,</span> <span class=\"n\">resp</span><span class=\"p\">)</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">jobs</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">jobs</span><span class=\"p\">(</span>\n    <span class=\"n\">page</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n    <span class=\"n\">page_size</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span>\n    <span class=\"nb\">type</span><span class=\"o\">=</span><span class=\"s1\">'id-verification'</span><span class=\"p\">,</span>\n    <span class=\"n\">token</span><span class=\"o\">=&lt;</span><span class=\"n\">TOKEN_FROM_WEB_CLIENT</span><span class=\"o\">&gt;</span><span class=\"p\">,</span>\n    <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"s1\">'active'</span><span class=\"p\">,</span>\n    <span class=\"n\">sort_by</span><span class=\"o\">=</span><span class=\"s1\">'date'</span><span class=\"p\">,</span>\n    <span class=\"n\">sort_order</span><span class=\"o\">=</span><span class=\"s1\">'desc'</span><span class=\"p\">,</span>\n    <span class=\"n\">with_photos</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">from_date</span><span class=\"o\">=</span><span class=\"s1\">'2017-01-24T04:44:00+00:00'</span><span class=\"p\">,</span>\n    <span class=\"n\">to_date</span><span class=\"o\">=</span><span class=\"s1\">'2020-12-24T04:44:00+00:00'</span>\n <span class=\"p\">)</span>\n</pre>\n<h4>Arguments</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>String</td>\n<td>*</td>\n<td>ID of the job to remove.</td>\n</tr>\n<tr>\n<td>type</td>\n<td>String</td>\n<td></td>\n<td>Type of job (\"id-verification\").</td>\n</tr>\n<tr>\n<td>ids</td>\n<td>[ID]</td>\n<td></td>\n<td>Filter by a list of job IDs.</td>\n</tr>\n<tr>\n<td>page</td>\n<td>String</td>\n<td></td>\n<td>Paginate list by page where the page starts at 1, defaults to 1.</td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>String</td>\n<td></td>\n<td>The number of items for a page, max 1000, defaults to 100.</td>\n</tr>\n<tr>\n<td>sortBy</td>\n<td>String</td>\n<td></td>\n<td>Sort the list from (\"date\", \"status\").</td>\n</tr>\n<tr>\n<td>sortOrder</td>\n<td>String</td>\n<td></td>\n<td>Order the sort from (\"asc\", \"desc\").</td>\n</tr>\n<tr>\n<td>status</td>\n<td>String</td>\n<td></td>\n<td>Filter by status from (\"active\",\"completed\")</td>\n</tr>\n<tr>\n<td>to</td>\n<td>String</td>\n<td></td>\n<td>Filter by submitted to ISO8601 date.</td>\n</tr>\n<tr>\n<td>from</td>\n<td>String</td>\n<td></td>\n<td>Filter by submitted from ISO8601 date.</td>\n</tr>\n<tr>\n<td>withPhotos</td>\n<td>Boolean</td>\n<td></td>\n<td>Defaults to False. The returned job will contain detailed information idPhoto, idPhotoBack, and userPhoto.</td>\n</tr></tbody></table>\n<h4>Returns</h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>jobs</td>\n<td>[Job]</td>\n<td>*</td>\n<td>The removed job.</td>\n</tr>\n<tr>\n<td>totalPages</td>\n<td>Int</td>\n<td>*</td>\n<td>Total number of pages of jobs.</td>\n</tr>\n<tr>\n<td>pageSize</td>\n<td>Int</td>\n<td>*</td>\n<td>The requested page size.</td>\n</tr>\n<tr>\n<td>page</td>\n<td>Int</td>\n<td>*</td>\n<td>The requested page.</td>\n</tr>\n<tr>\n<td>total</td>\n<td>Int</td>\n<td>*</td>\n<td>Total number of filtered jobs.</td>\n</tr></tbody></table>\n<h3>Errors</h3>\n<p><a href=\"#AuthenticationError\" rel=\"nofollow\"><code>AuthenticationError</code></a>\n<a href=\"#ConnectionError\" rel=\"nofollow\"><code>ConnectionError</code></a>\n<a href=\"#InvalidRequestError\" rel=\"nofollow\"><code>InvalidRequestError</code></a>\n<a href=\"#UnknownSystemError\" rel=\"nofollow\"><code>UnknownSystemError</code></a></p>\n<h2>Types</h2>\n<h3>Errors</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>type</code></td>\n<td>String</td>\n<td>*</td>\n<td></td>\n</tr>\n<tr>\n<td>message</td>\n<td>String</td>\n<td>*</td>\n<td>Type of job (\"id-verification\").</td>\n</tr>\n<tr>\n<td>suggestion</td>\n<td>[ID]</td>\n<td></td>\n<td>A suggestion for matching name, John Smith, Jon Smith.</td>\n</tr>\n<tr>\n<td>errors</td>\n<td>[Error]</td>\n<td>InvalidRequestError contains a sub list of errors</td>\n<td></td>\n</tr></tbody></table>\n<h4><code>type</code></h4>\n<p><code>InvalidRequestError</code> - The request is invalid.\n<code>FaceMatchError</code> - Face match felled below the threshold\n<code>NameMatchError</code> - Name match felled below the threshold\n<code>BirthDateMatchError</code> - Birth date match felled below the threshold\n<code>InvalidIdPhotoError</code> - The ID is invalid\n<code>InvalidUserPhotoError</code> - The user photo (selfie) is invalid\n<code>UNAUTHENTICATED</code>/<code>AuthenticationError</code> - The request could not be authenticated\n<code>ConnectionError</code> - A connection error occurred while communicating to the Vouched service\n<code>InvalidIdBackPhotoError</code> - The back of the ID is invalid\n<code>UnknownSystemError</code> - A unknown system error occurred\n<code>InvalidIdError</code> - The ID is invalid</p>\n<h3>Job</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>ID</td>\n<td>*</td>\n<td>Job ID</td>\n</tr>\n<tr>\n<td>status</td>\n<td>String</td>\n<td>*</td>\n<td>Job status from (\"active\",\"completed\")</td>\n</tr>\n<tr>\n<td>submitted</td>\n<td>String</td>\n<td></td>\n<td>ISO8601 date</td>\n</tr>\n<tr>\n<td><code>request</code></td>\n<td>Object</td>\n<td></td>\n<td>Object for 'id-verification'.</td>\n</tr>\n<tr>\n<td><code>result</code></td>\n<td>Object</td>\n<td></td>\n<td>Object of 'id-verification'.</td>\n</tr>\n<tr>\n<td>errors</td>\n<td>[Error]</td>\n<td></td>\n<td>List of errors for unsuccessful completed jobs.</td>\n</tr></tbody></table>\n<h4><code>request</code></h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>type</td>\n<td>String</td>\n<td>*</td>\n<td>Job type</td>\n</tr>\n<tr>\n<td>callbackURL</td>\n<td>String</td>\n<td></td>\n<td>POST enabled webhook</td>\n</tr>\n<tr>\n<td>parameters</td>\n<td>JobParameters</td>\n<td>*</td>\n<td>Object for 'id-verification'</td>\n</tr></tbody></table>\n<h4><code>result</code></h4>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>success</td>\n<td>Boolean</td>\n<td>*</td>\n<td>Did the id verification completed successfully?</td>\n</tr>\n<tr>\n<td>type</td>\n<td>String</td>\n<td></td>\n<td>The id type</td>\n</tr>\n<tr>\n<td>callbackURL</td>\n<td>String</td>\n<td></td>\n<td>POST enabled webhook</td>\n</tr>\n<tr>\n<td>state</td>\n<td>String</td>\n<td></td>\n<td>The issuing state of the id if applicable</td>\n</tr>\n<tr>\n<td>country</td>\n<td>String</td>\n<td></td>\n<td>The issuing country of the id</td>\n</tr>\n<tr>\n<td>id</td>\n<td>String</td>\n<td></td>\n<td>The verified id number of the id</td>\n</tr>\n<tr>\n<td>expireDate</td>\n<td>String</td>\n<td></td>\n<td>The verified expired date in the format MM/DD/YYYY</td>\n</tr>\n<tr>\n<td>birthDate</td>\n<td>String</td>\n<td></td>\n<td>The verified date in the format MM/DD/YYYY</td>\n</tr>\n<tr>\n<td>firstName</td>\n<td>String</td>\n<td></td>\n<td>The user's verified first name.</td>\n</tr>\n<tr>\n<td>lastName</td>\n<td>String</td>\n<td></td>\n<td>The user's verified last name</td>\n</tr>\n<tr>\n<td>confidences</td>\n<td>Confidences</td>\n<td></td>\n<td>Confidence scores</td>\n</tr></tbody></table>\n<h3>Confidences</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>id</td>\n<td>Float</td>\n<td>*</td>\n<td>Confidence score for an id photo, 0-1.0</td>\n</tr>\n<tr>\n<td>backId</td>\n<td>Float</td>\n<td>*</td>\n<td>Confidence score for the back of the id photo, 0-1.0</td>\n</tr>\n<tr>\n<td>selfie</td>\n<td>Float</td>\n<td>*</td>\n<td>Confidence score for a selfie photo, 0-1.0</td>\n</tr>\n<tr>\n<td>idMatch</td>\n<td>Float</td>\n<td>*</td>\n<td>Confidence score for matching data on the id, 0-1.0</td>\n</tr>\n<tr>\n<td>faceMatch</td>\n<td>Float</td>\n<td>*</td>\n<td>Confidence score for matching faces, 0-1.0</td>\n</tr></tbody></table>\n<h3>JobParameters</h3>\n<table>\n<thead>\n<tr>\n<th>Parameter</th>\n<th>Type</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>idPhoto</td>\n<td>String</td>\n<td>*</td>\n<td>The user's official identification photo in base64.</td>\n</tr>\n<tr>\n<td>userPhoto</td>\n<td>String</td>\n<td></td>\n<td>The user's id comparison photo in base64.</td>\n</tr>\n<tr>\n<td>twicPhoto</td>\n<td>String</td>\n<td></td>\n<td>The user's id twic id photo in base64.</td>\n</tr>\n<tr>\n<td>carInsurancePhoto</td>\n<td>String</td>\n<td></td>\n<td>The user's id car insurance photo in base64.</td>\n</tr>\n<tr>\n<td>dotPhoto</td>\n<td>String</td>\n<td>*</td>\n<td>The user's id dot letter photo in base64.</td>\n</tr>\n<tr>\n<td>idPhotoBack</td>\n<td>String</td>\n<td></td>\n<td>The user's official back of the identification photo in base64.</td>\n</tr>\n<tr>\n<td>dob</td>\n<td>String</td>\n<td></td>\n<td>Date in the format MM/DD/YYYY.</td>\n</tr>\n<tr>\n<td>firstName</td>\n<td>String</td>\n<td></td>\n<td>The user's first name.</td>\n</tr>\n<tr>\n<td>lastName</td>\n<td>String</td>\n<td></td>\n<td>The user's last name.</td>\n</tr></tbody></table>\n\n          </div>"}, "last_serial": 6532480, "releases": {"0.0.5b10": [{"comment_text": "", "digests": {"md5": "87e0b7ec47aef284df11e4181b2803a6", "sha256": "c337b68edab87c9984e4ab114a9a365db2c3ea8072be09d11b44d28c7c6bd040"}, "downloads": -1, "filename": "vouched_python-0.0.5b10-py3-none-any.whl", "has_sig": false, "md5_digest": "87e0b7ec47aef284df11e4181b2803a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17205, "upload_time": "2020-01-28T14:27:32", "upload_time_iso_8601": "2020-01-28T14:27:32.492350Z", "url": "https://files.pythonhosted.org/packages/dd/fb/28ac2892a5849232044eb8d69a73722f54a194fc707dce03f8309df23869/vouched_python-0.0.5b10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94d9eec00791611ddf434437460763d2", "sha256": "6d515da7a0a8bc9d4bd914d8fe8f1d8e7e55f579436ca0629c21e13252c20c04"}, "downloads": -1, "filename": "vouched-python-0.0.5b10.tar.gz", "has_sig": false, "md5_digest": "94d9eec00791611ddf434437460763d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13073, "upload_time": "2020-01-28T14:27:34", "upload_time_iso_8601": "2020-01-28T14:27:34.978787Z", "url": "https://files.pythonhosted.org/packages/54/05/dbea5f22064fc0aedc86670359a18c4cb348b1c944b3be307a0f4947bb4c/vouched-python-0.0.5b10.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87e0b7ec47aef284df11e4181b2803a6", "sha256": "c337b68edab87c9984e4ab114a9a365db2c3ea8072be09d11b44d28c7c6bd040"}, "downloads": -1, "filename": "vouched_python-0.0.5b10-py3-none-any.whl", "has_sig": false, "md5_digest": "87e0b7ec47aef284df11e4181b2803a6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 17205, "upload_time": "2020-01-28T14:27:32", "upload_time_iso_8601": "2020-01-28T14:27:32.492350Z", "url": "https://files.pythonhosted.org/packages/dd/fb/28ac2892a5849232044eb8d69a73722f54a194fc707dce03f8309df23869/vouched_python-0.0.5b10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "94d9eec00791611ddf434437460763d2", "sha256": "6d515da7a0a8bc9d4bd914d8fe8f1d8e7e55f579436ca0629c21e13252c20c04"}, "downloads": -1, "filename": "vouched-python-0.0.5b10.tar.gz", "has_sig": false, "md5_digest": "94d9eec00791611ddf434437460763d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13073, "upload_time": "2020-01-28T14:27:34", "upload_time_iso_8601": "2020-01-28T14:27:34.978787Z", "url": "https://files.pythonhosted.org/packages/54/05/dbea5f22064fc0aedc86670359a18c4cb348b1c944b3be307a0f4947bb4c/vouched-python-0.0.5b10.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:34:18 2020"}