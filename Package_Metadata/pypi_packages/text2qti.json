{"info": {"author": "Geoffrey M. Poore", "author_email": "gpoore@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Education", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Education :: Testing"], "description": "# text2qti \u2013 Create quizzes in QTI format from Markdown-based plain text\n\ntext2qti converts\n[Markdown](https://daringfireball.net/projects/markdown/)-based plain text\nfiles into quizzes in QTI format, which can be imported by\n[Canvas](https://www.instructure.com/canvas/) and other educational software.\nIt supports multiple-choice, true/false, numerical, and essay questions.\nIt includes basic support for LaTeX math within Markdown, and allows a limited\nsubset of [siunitx](https://ctan.org/pkg/siunitx) notation for units and for\nnumbers in scientific notation.\n\n\n\n## Examples\n\ntext2qti allows quick and efficient quiz creation.  Example plain-text quiz\nquestion that can be converted to QTI and then imported by Canvas:\n\n```\n1.  What is 2+3?\na)  6\nb)  1\n*c) 5\n```\n\nA **question** is created by a line that starts with a number followed by a\nperiod and one or more spaces or tabs (\"`1. `\").  Possible **choices** are\ncreated by lines that start with a letter followed by a closing parenthesis\nand one or more spaces or tabs (\"`a) `\").  Numbers and letters do not have to\nbe ordered or unique.  The **correct** choice is designated with an asterisk\n(\"`*c) `\").  All question and choice text is processed as\n[Markdown](https://daringfireball.net/projects/markdown/).\n\nThere is also support for a quiz title, a quiz description, and feedback.\nNote that unlike all other text, the title is treated as plain text, not\nMarkdown, due to the QTI format.\n\n```\nQuiz title: Addition\nQuiz description: Checking addition.\n\n1.  What is 2+3?\n... General question feedback.\n+   Feedback for correct answer.\n-   Feedback for incorrect answer.\na)  6\n... Feedback for this particular answer.\nb)  1\n... Feedback for this particular answer.\n*c) 5\n... Feedback for this particular answer.\n```\n\n**Numerical questions** are indicated by an equals sign followed by one or\nmore spaces or tabs followed by the numerical answer.  Acceptable answers can\nbe designated as a range of the form `[<min>, <max>]` or as a correct answer\nwith a specified acceptable margin of error `<ans> +- <margin>`.  When the\nlatter form is used, `<margin>` can be either a number or a percentage.\n`<margin>` can be omitted when the answer is an integer and an exact answer is\nrequired.  In this case, scientific notation is not permitted, but the\nunderscore can be used as a digit separator; for example, `1000` and `1_000`\nare both valid, but `1e3` is not.  An exact answer can be required for\nfloating-point numbers, but this requires an explicit `+- 0`, since a range is\ntypically more appropriate for floating-point values.  Numerical questions\nhave the limitation that the absolute value of the smallest acceptable answer\nmust be greater than or equal to 0.0001 (1e-4).\n\n```\n1.  What is the square root of 2?\n=   1.4142 +- 0.0001\n\n2.  What is the cube root of 2?\n=   [1.2598, 1.2600]\n\n3.  What is 2+3?\n=   5\n```\n\n\n**Essay questions** are indicated by a sequence of three or more underscores.\nThey do not support feedback.\n\n```\n1.  Write an essay.\n____\n````\n\n\n\n## Installation\n\nInstall **Python 3.6+** if it is not already available on your machine.  See\nhttps://www.python.org/, or use the package manager or app store for your\noperating system.  Depending on your use case, you may want to consider a\nPython distribution like [Anaconda](https://www.anaconda.com/distribution/)\ninstead.\n\nInstall\n[setuptools](https://packaging.python.org/tutorials/installing-packages/)\nfor Python if it is not already installed.  This can be accomplished by\nrunning\n```\npython -m pip install setuptools\n```\non the command line.  Depending on your system, you may need to use `python3`\ninstead of `python`.  This will often be the case for Linux and OS X.\n\nInstall text2qti by running this on the command line:\n```\npython -m pip install text2qti\n```\nDepending on your system, you may need to use `python3` instead of `python`.\nThis will often be the case for Linux and OS X.\n\n\n### Upgrading\n\n```\npython -m pip install text2qti --upgrade\n```\nDepending on your system, you may need to use `python3` instead of `python`.\nThis will often be the case for Linux and OS X.\n\n\n### Installing the development version\n\nIf you want to install the development version to use the latest features,\ndownload `text2qti` from [GitHub](https://github.com/gpoore/text2qti), extract\nthe files, and then run\n```\npython setup.py install\n```\nDepending on your system, you may need to use `python3` instead of `python`.\nThis will often be the case for Linux and OS X.\n\n\n\n## Usage\n\ntext2qti has been designed to create QTI files for use with\n[Canvas](https://www.instructure.com/canvas/).  Some features may not be\nsupported by other educational software.  You should **always preview**\nquizzes or assessments after converting them to QTI and importing them.\n\nWrite your quiz or assessment in a plain text file.  You can use a basic\neditor like Notepad or gedit, or a code editor like\n[VS Code](https://code.visualstudio.com/).  You can even use Microsoft Word,\nas long as you save your file as plain text (*.txt).\n\ntext2qti is a command-line application.  Open a command line in the same\nfolder or directory as your quiz file.  Under Windows, you can hold the SHIFT\nbutton down on the keyboard, then right click next to your file, and select\n\"Open PowerShell window here\" or \"Open command window here\".  You can also\nlaunch \"Command Prompt\" or \"PowerShell\" through the Start menu, and then\nnavigate to your file using `cd`.\n\nRun the `text2qti` application using a command like this:\n```\ntext2qti quiz.txt\n```\nReplace \"quiz.txt\" with the name of your file.  This will create a file like\n`quiz.zip` (with \"quiz\" replaced by the name of your file) which is the\nconverted quiz in QTI format.\n\nInstructions for using the QTI file with Canvas:\n  * Go to the course in which you want to use the quiz.\n  * Go to Settings, click on \"Import Course Content\", select \"QTI .zip file\",\n    choose your file, and click \"Import\".  Typically you should not need to\n    select a question bank; that should be managed automatically.\n  * While the quiz upload will often be very fast, there is an additional\n    processing step that can take up to several minutes.  The status will\n    probably appear under \"Current Jobs\" after upload.\n  * Once the quiz import is marked as \"Completed\", the imported quiz should be\n    available under Quizzes.  If the imported quiz does not appear after\n    several minutes, there may be an error in your quiz file or a bug in\n    `text2qti`.  When Canvas encounters an invalid quiz file, it tends to fail\n    silently; instead of reporting an error in the quiz file, it just never\n    creates a quiz based on the invalid file.\n  * You should **always preview the quiz before use**.  text2qti can detect a\n    number of potential issues, but not everything.\n\nTypically, you should start your quizzes with a title, like this:\n```\nQuiz title: Title here\n```\nOtherwise, all quizzes will have the default title \"Quiz\", so it will be\ndifficult to tell them apart.  Another option is to rename quizzes after\nimporting them.  Note that unlike all other text, the title is treated as\nplain text, not Markdown, due to the QTI format.\n\nWhen you run `text2qti` for the first time, it will attempt to create a\nconfiguration file called `.text2qti.bespon` in your home or user directory.\nIt will also ask for an institutional LaTeX rendering URL.  This is only\nneeded if you plan to use LaTeX math; if not, simply press ENTER to continue.\n * If you use Canvas, log into your account and look in the browser address\n   bar.  You will typically see an address that starts with something like\n   `institution.instructure.com/` or `canvas.institution.edu/`, with\n   `institution` replaced by the name of your school or an abbreviation for\n   it.  The LateX rendering URL that you want to use will then be something\n   like `https://institution.instructure.com/equation_images/` or\n   `https://canvas.institution.edu/equation_images/`, with `institution`\n   replaced by the appropriate value for your school.  If the URL is like the\n   second form, you may need to replace the `.edu` domain with the appropriate\n   value for your institution.\n * If you use other educational software that handles LaTeX in a manner\n   compatible with Canvas, consult the documentation for your software.  Or\n   perhaps create a simple quiz within the software using its built-in tools,\n   then export the quiz to QTI and look through the resulting output to find\n   the URL.\n * If you are using educational software that does not handle LaTeX in a\n   manner compatible with Canvas, please open an issue requesting support for\n   that software, and include as much information as possible about how that\n   software processes LaTeX.\n\n\n\n## Additional features\n\n### Question groups\n\nA question group contains multiple questions, and only a specified number of\nthese are randomly selected and used each time a quiz is taken.\n\n```\nGROUP\npick: 1\npoints per question: 1\n\n1.  A question.\n*a) true\nb)  false\n\n2.  Another question.\n*a) true\nb)  false\n\nEND_GROUP\n```\n\nThe number of questions from the group that are used is specified with\n`pick:`.  If this is omitted, it defaults to `1`.  The points assigned per\nquestion is specified with `points per question:`.  If this is omitted, it\ndefaults to `1`.  All questions within a group must be worth the same number\nof points.\n\n\n### Executable code blocks\n\ntext2qti can execute the code in Markdown-style fenced code blocks.  Code can\nbe used to generate questions within a quiz.  Everything written to stdout by\nthe executed code is included in the quiz file; the code block is replaced by\nstdout.\n\n``````\n```{.python .run}\nimport textwrap\nfor x in [2, 3]:\n    print(textwrap.dedent(rf\"\"\"\n        1.  What is ${x}\\times 5$?\n        *a) ${x*5}$\n        b)  ${x+1}$\n        \"\"\"))\n```\n``````\n\n\nFor code to be executed, there are a few requirements:\n* The code block fences (` ``` `) must not be indented; the code block must be\n  at the top level of the document, not part of a question, choice, or\n  feedback.\n* As a security measure, code execution is disabled by default, so executable\n  code blocks will trigger an error.  Run `text2qti` with the option\n  `--run-code-blocks` to enable code execution, or set `run_code_blocks =\n  true` in the text2qti config file in your user or home directory.\n* The text immediately after the opening fence must have the form `{.lang\n  .run}`.  This is inspired by the code-block attributes in\n  [Pandoc Markdown](https://pandoc.org/MANUAL.html).  `lang` must designate an\n  executable that can run the code once the code has been saved to a file.  In\n  the example above, `python` is extracted from the first line\n  (` ```{.python .run}`),  code is saved in a temporary file, and then the\n  file is executed via `python <file>`.\n\nEach code block is executed in its own process, so data and variables are not\nshared between code blocks.\n\nIf an executable code block generates multiple questions that are identical,\nor multiple choices for a single question that are identical, this will be\ndetected by `text2qti` and an error will be reported.  Questions or choices\nthat may be equivalent, but are not represented by exactly the same text,\ncannot be detected (for example, things like `100` versus `1e2`, or `answer`\nversus `Answer`).\n\n\n\n\n## Details for writing quiz text\n\ntext2qti processes almost all text as\n[Markdown](https://daringfireball.net/projects/markdown/), using\n[Python-Markdown](https://python-markdown.github.io/).  (The only exception is\nthe quiz title, which is processed as plain text due to the QTI format.)  For\nexample, `*emphasized*` produces emphasized text, which typically appears as\nitalics.  Text can be styled using Markdown notation, or with HTML.  Remember\nto preview quizzes after conversion to QTI, especially when using any\nsignificant amount of HTML.\n\n\n### Titles\n\nTitles are limited to a single paragraph.  If this paragraph is wrapped over\nmultiple lines, all lines after the first must be indented to the same level\nas the start of the paragraph text on the initial line.  All tabs are expanded\nto 4 spaces before indentation is compared, following the typical Markdown\napproach.\n\n\n### Descriptions, questions, choices, and feedback\n\nDescriptions, questions, choices, and feedback may span multiple paragraphs\nand include arbitrary Markdown content like code blocks or quotations.\nEverything must be indented to at least the same level as the start of the\nfirst paragraph on the initial line.  All tabs are expanded to 4 spaces before\nindentation is compared, following the typical Markdown approach.  For\nexample,\n```\n1.  A question paragraph that is long enough to wrap onto a second line.\n    The second line must be indented to match up with the start of the\n    paragraph text on the first line.\n\n    Another paragraph.\n```\n\n\n### Images\n\nImages are included with the standard Markdown syntax:\n```\n![alt_text](image_file)\n```\nIt will typically be easiest to put your image files in the same folder or\ndirectory as the quiz file, so you can use something like `![alt](image.jpg)`.\nHowever, file paths are supported, including `~` user expansion under all\noperating systems.  All image paths not starting with `http://` or `https://`\nare assumed to refer to local image files (files on your machine), and will\nresult in errors if these files are not found.\n\n\n### LaTeX\n\ntext2qti supports inline LaTeX math within dollar signs `$`.  There must be a\nnon-space character immediately after the opening `$` and immediately before\nthe closing `$`.  For example, `$F = ma$`.  LaTeX math is limited to what is\nsupported by Canvas or whatever other educational software you are using.  It\nis usually a good idea to preview imported quizzes before assigning them,\nbecause text2qti cannot detect LaTeX incompatibilities or limitations.  There\nis currently not support for block LaTeX math; only inline math is supported.\n\nWhen using Canvas with LaTeX math, be aware that in some cases Canvas's\nvertical alignment of math leaves much to be desired.  Sometimes this can be\nimproved by including `\\vphantom{fg}` or `\\strut` at the beginning of an\nequation.  An alternative is simply to use LaTeX for all question or choice\ntext (via `\\text`, etc.).\n\ntext2tqi supports a limited subset of LaTeX\n[siunitx](https://ctan.org/pkg/siunitx) notation.  You can use notation like\n`\\num{1.23e5}` to enter numbers in scientific notation.  This would result in\n`1.23\u00d710\u2075`.  You can use notation like `\\si{m/s}` or `\\si{N.m}` to enter\nunits.  These would result in `m/s` and `N\u00b7m`.  Unit macros currently are not\nsupported, with these exceptions: `\\degree`, `\\celsius`, `\\fahrenheit`,\n`\\ohm`, `\\micro`.  Finally, numbers and units can be combined with notation\nlike `\\SI{1.23e5}{m/s}`.  All of these can be used inside or outside LaTeX\nmath.\n\nTechnical note: LaTeX and siunitx support are currently implemented as\npreprocessors that are used separately from Python-Markdown.  In rare cases,\nthis may lead to conflicts with Markdown syntax.  These features may be\nreimplemented as Python-Markdown extensions in the future.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/gpoore/text2qti", "keywords": "QTI,IMS Question & Test Interoperability,quiz,test,exam,assessment,markdown,LaTeX,plain text", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "text2qti", "package_url": "https://pypi.org/project/text2qti/", "platform": "", "project_url": "https://pypi.org/project/text2qti/", "project_urls": {"Homepage": "http://github.com/gpoore/text2qti"}, "release_url": "https://pypi.org/project/text2qti/0.2.0/", "requires_dist": ["bespon (>=0.4)", "markdown"], "requires_python": ">=3.6", "summary": "Create quizzes in QTI format from Markdown-based plain text", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>text2qti \u2013 Create quizzes in QTI format from Markdown-based plain text</h1>\n<p>text2qti converts\n<a href=\"https://daringfireball.net/projects/markdown/\" rel=\"nofollow\">Markdown</a>-based plain text\nfiles into quizzes in QTI format, which can be imported by\n<a href=\"https://www.instructure.com/canvas/\" rel=\"nofollow\">Canvas</a> and other educational software.\nIt supports multiple-choice, true/false, numerical, and essay questions.\nIt includes basic support for LaTeX math within Markdown, and allows a limited\nsubset of <a href=\"https://ctan.org/pkg/siunitx\" rel=\"nofollow\">siunitx</a> notation for units and for\nnumbers in scientific notation.</p>\n<h2>Examples</h2>\n<p>text2qti allows quick and efficient quiz creation.  Example plain-text quiz\nquestion that can be converted to QTI and then imported by Canvas:</p>\n<pre><code>1.  What is 2+3?\na)  6\nb)  1\n*c) 5\n</code></pre>\n<p>A <strong>question</strong> is created by a line that starts with a number followed by a\nperiod and one or more spaces or tabs (\"<code>1.</code>\").  Possible <strong>choices</strong> are\ncreated by lines that start with a letter followed by a closing parenthesis\nand one or more spaces or tabs (\"<code>a)</code>\").  Numbers and letters do not have to\nbe ordered or unique.  The <strong>correct</strong> choice is designated with an asterisk\n(\"<code>*c)</code>\").  All question and choice text is processed as\n<a href=\"https://daringfireball.net/projects/markdown/\" rel=\"nofollow\">Markdown</a>.</p>\n<p>There is also support for a quiz title, a quiz description, and feedback.\nNote that unlike all other text, the title is treated as plain text, not\nMarkdown, due to the QTI format.</p>\n<pre><code>Quiz title: Addition\nQuiz description: Checking addition.\n\n1.  What is 2+3?\n... General question feedback.\n+   Feedback for correct answer.\n-   Feedback for incorrect answer.\na)  6\n... Feedback for this particular answer.\nb)  1\n... Feedback for this particular answer.\n*c) 5\n... Feedback for this particular answer.\n</code></pre>\n<p><strong>Numerical questions</strong> are indicated by an equals sign followed by one or\nmore spaces or tabs followed by the numerical answer.  Acceptable answers can\nbe designated as a range of the form <code>[&lt;min&gt;, &lt;max&gt;]</code> or as a correct answer\nwith a specified acceptable margin of error <code>&lt;ans&gt; +- &lt;margin&gt;</code>.  When the\nlatter form is used, <code>&lt;margin&gt;</code> can be either a number or a percentage.\n<code>&lt;margin&gt;</code> can be omitted when the answer is an integer and an exact answer is\nrequired.  In this case, scientific notation is not permitted, but the\nunderscore can be used as a digit separator; for example, <code>1000</code> and <code>1_000</code>\nare both valid, but <code>1e3</code> is not.  An exact answer can be required for\nfloating-point numbers, but this requires an explicit <code>+- 0</code>, since a range is\ntypically more appropriate for floating-point values.  Numerical questions\nhave the limitation that the absolute value of the smallest acceptable answer\nmust be greater than or equal to 0.0001 (1e-4).</p>\n<pre><code>1.  What is the square root of 2?\n=   1.4142 +- 0.0001\n\n2.  What is the cube root of 2?\n=   [1.2598, 1.2600]\n\n3.  What is 2+3?\n=   5\n</code></pre>\n<p><strong>Essay questions</strong> are indicated by a sequence of three or more underscores.\nThey do not support feedback.</p>\n<pre><code>1.  Write an essay.\n____\n</code></pre>\n<h2>Installation</h2>\n<p>Install <strong>Python 3.6+</strong> if it is not already available on your machine.  See\n<a href=\"https://www.python.org/\" rel=\"nofollow\">https://www.python.org/</a>, or use the package manager or app store for your\noperating system.  Depending on your use case, you may want to consider a\nPython distribution like <a href=\"https://www.anaconda.com/distribution/\" rel=\"nofollow\">Anaconda</a>\ninstead.</p>\n<p>Install\n<a href=\"https://packaging.python.org/tutorials/installing-packages/\" rel=\"nofollow\">setuptools</a>\nfor Python if it is not already installed.  This can be accomplished by\nrunning</p>\n<pre><code>python -m pip install setuptools\n</code></pre>\n<p>on the command line.  Depending on your system, you may need to use <code>python3</code>\ninstead of <code>python</code>.  This will often be the case for Linux and OS X.</p>\n<p>Install text2qti by running this on the command line:</p>\n<pre><code>python -m pip install text2qti\n</code></pre>\n<p>Depending on your system, you may need to use <code>python3</code> instead of <code>python</code>.\nThis will often be the case for Linux and OS X.</p>\n<h3>Upgrading</h3>\n<pre><code>python -m pip install text2qti --upgrade\n</code></pre>\n<p>Depending on your system, you may need to use <code>python3</code> instead of <code>python</code>.\nThis will often be the case for Linux and OS X.</p>\n<h3>Installing the development version</h3>\n<p>If you want to install the development version to use the latest features,\ndownload <code>text2qti</code> from <a href=\"https://github.com/gpoore/text2qti\" rel=\"nofollow\">GitHub</a>, extract\nthe files, and then run</p>\n<pre><code>python setup.py install\n</code></pre>\n<p>Depending on your system, you may need to use <code>python3</code> instead of <code>python</code>.\nThis will often be the case for Linux and OS X.</p>\n<h2>Usage</h2>\n<p>text2qti has been designed to create QTI files for use with\n<a href=\"https://www.instructure.com/canvas/\" rel=\"nofollow\">Canvas</a>.  Some features may not be\nsupported by other educational software.  You should <strong>always preview</strong>\nquizzes or assessments after converting them to QTI and importing them.</p>\n<p>Write your quiz or assessment in a plain text file.  You can use a basic\neditor like Notepad or gedit, or a code editor like\n<a href=\"https://code.visualstudio.com/\" rel=\"nofollow\">VS Code</a>.  You can even use Microsoft Word,\nas long as you save your file as plain text (*.txt).</p>\n<p>text2qti is a command-line application.  Open a command line in the same\nfolder or directory as your quiz file.  Under Windows, you can hold the SHIFT\nbutton down on the keyboard, then right click next to your file, and select\n\"Open PowerShell window here\" or \"Open command window here\".  You can also\nlaunch \"Command Prompt\" or \"PowerShell\" through the Start menu, and then\nnavigate to your file using <code>cd</code>.</p>\n<p>Run the <code>text2qti</code> application using a command like this:</p>\n<pre><code>text2qti quiz.txt\n</code></pre>\n<p>Replace \"quiz.txt\" with the name of your file.  This will create a file like\n<code>quiz.zip</code> (with \"quiz\" replaced by the name of your file) which is the\nconverted quiz in QTI format.</p>\n<p>Instructions for using the QTI file with Canvas:</p>\n<ul>\n<li>Go to the course in which you want to use the quiz.</li>\n<li>Go to Settings, click on \"Import Course Content\", select \"QTI .zip file\",\nchoose your file, and click \"Import\".  Typically you should not need to\nselect a question bank; that should be managed automatically.</li>\n<li>While the quiz upload will often be very fast, there is an additional\nprocessing step that can take up to several minutes.  The status will\nprobably appear under \"Current Jobs\" after upload.</li>\n<li>Once the quiz import is marked as \"Completed\", the imported quiz should be\navailable under Quizzes.  If the imported quiz does not appear after\nseveral minutes, there may be an error in your quiz file or a bug in\n<code>text2qti</code>.  When Canvas encounters an invalid quiz file, it tends to fail\nsilently; instead of reporting an error in the quiz file, it just never\ncreates a quiz based on the invalid file.</li>\n<li>You should <strong>always preview the quiz before use</strong>.  text2qti can detect a\nnumber of potential issues, but not everything.</li>\n</ul>\n<p>Typically, you should start your quizzes with a title, like this:</p>\n<pre><code>Quiz title: Title here\n</code></pre>\n<p>Otherwise, all quizzes will have the default title \"Quiz\", so it will be\ndifficult to tell them apart.  Another option is to rename quizzes after\nimporting them.  Note that unlike all other text, the title is treated as\nplain text, not Markdown, due to the QTI format.</p>\n<p>When you run <code>text2qti</code> for the first time, it will attempt to create a\nconfiguration file called <code>.text2qti.bespon</code> in your home or user directory.\nIt will also ask for an institutional LaTeX rendering URL.  This is only\nneeded if you plan to use LaTeX math; if not, simply press ENTER to continue.</p>\n<ul>\n<li>If you use Canvas, log into your account and look in the browser address\nbar.  You will typically see an address that starts with something like\n<code>institution.instructure.com/</code> or <code>canvas.institution.edu/</code>, with\n<code>institution</code> replaced by the name of your school or an abbreviation for\nit.  The LateX rendering URL that you want to use will then be something\nlike <code>https://institution.instructure.com/equation_images/</code> or\n<code>https://canvas.institution.edu/equation_images/</code>, with <code>institution</code>\nreplaced by the appropriate value for your school.  If the URL is like the\nsecond form, you may need to replace the <code>.edu</code> domain with the appropriate\nvalue for your institution.</li>\n<li>If you use other educational software that handles LaTeX in a manner\ncompatible with Canvas, consult the documentation for your software.  Or\nperhaps create a simple quiz within the software using its built-in tools,\nthen export the quiz to QTI and look through the resulting output to find\nthe URL.</li>\n<li>If you are using educational software that does not handle LaTeX in a\nmanner compatible with Canvas, please open an issue requesting support for\nthat software, and include as much information as possible about how that\nsoftware processes LaTeX.</li>\n</ul>\n<h2>Additional features</h2>\n<h3>Question groups</h3>\n<p>A question group contains multiple questions, and only a specified number of\nthese are randomly selected and used each time a quiz is taken.</p>\n<pre><code>GROUP\npick: 1\npoints per question: 1\n\n1.  A question.\n*a) true\nb)  false\n\n2.  Another question.\n*a) true\nb)  false\n\nEND_GROUP\n</code></pre>\n<p>The number of questions from the group that are used is specified with\n<code>pick:</code>.  If this is omitted, it defaults to <code>1</code>.  The points assigned per\nquestion is specified with <code>points per question:</code>.  If this is omitted, it\ndefaults to <code>1</code>.  All questions within a group must be worth the same number\nof points.</p>\n<h3>Executable code blocks</h3>\n<p>text2qti can execute the code in Markdown-style fenced code blocks.  Code can\nbe used to generate questions within a quiz.  Everything written to stdout by\nthe executed code is included in the quiz file; the code block is replaced by\nstdout.</p>\n<pre><code>```{.python .run}\nimport textwrap\nfor x in [2, 3]:\n    print(textwrap.dedent(rf\"\"\"\n        1.  What is ${x}\\times 5$?\n        *a) ${x*5}$\n        b)  ${x+1}$\n        \"\"\"))\n```\n</code></pre>\n<p>For code to be executed, there are a few requirements:</p>\n<ul>\n<li>The code block fences (<code>```</code>) must not be indented; the code block must be\nat the top level of the document, not part of a question, choice, or\nfeedback.</li>\n<li>As a security measure, code execution is disabled by default, so executable\ncode blocks will trigger an error.  Run <code>text2qti</code> with the option\n<code>--run-code-blocks</code> to enable code execution, or set <code>run_code_blocks = true</code> in the text2qti config file in your user or home directory.</li>\n<li>The text immediately after the opening fence must have the form <code>{.lang .run}</code>.  This is inspired by the code-block attributes in\n<a href=\"https://pandoc.org/MANUAL.html\" rel=\"nofollow\">Pandoc Markdown</a>.  <code>lang</code> must designate an\nexecutable that can run the code once the code has been saved to a file.  In\nthe example above, <code>python</code> is extracted from the first line\n(<code>```{.python .run}</code>),  code is saved in a temporary file, and then the\nfile is executed via <code>python &lt;file&gt;</code>.</li>\n</ul>\n<p>Each code block is executed in its own process, so data and variables are not\nshared between code blocks.</p>\n<p>If an executable code block generates multiple questions that are identical,\nor multiple choices for a single question that are identical, this will be\ndetected by <code>text2qti</code> and an error will be reported.  Questions or choices\nthat may be equivalent, but are not represented by exactly the same text,\ncannot be detected (for example, things like <code>100</code> versus <code>1e2</code>, or <code>answer</code>\nversus <code>Answer</code>).</p>\n<h2>Details for writing quiz text</h2>\n<p>text2qti processes almost all text as\n<a href=\"https://daringfireball.net/projects/markdown/\" rel=\"nofollow\">Markdown</a>, using\n<a href=\"https://python-markdown.github.io/\" rel=\"nofollow\">Python-Markdown</a>.  (The only exception is\nthe quiz title, which is processed as plain text due to the QTI format.)  For\nexample, <code>*emphasized*</code> produces emphasized text, which typically appears as\nitalics.  Text can be styled using Markdown notation, or with HTML.  Remember\nto preview quizzes after conversion to QTI, especially when using any\nsignificant amount of HTML.</p>\n<h3>Titles</h3>\n<p>Titles are limited to a single paragraph.  If this paragraph is wrapped over\nmultiple lines, all lines after the first must be indented to the same level\nas the start of the paragraph text on the initial line.  All tabs are expanded\nto 4 spaces before indentation is compared, following the typical Markdown\napproach.</p>\n<h3>Descriptions, questions, choices, and feedback</h3>\n<p>Descriptions, questions, choices, and feedback may span multiple paragraphs\nand include arbitrary Markdown content like code blocks or quotations.\nEverything must be indented to at least the same level as the start of the\nfirst paragraph on the initial line.  All tabs are expanded to 4 spaces before\nindentation is compared, following the typical Markdown approach.  For\nexample,</p>\n<pre><code>1.  A question paragraph that is long enough to wrap onto a second line.\n    The second line must be indented to match up with the start of the\n    paragraph text on the first line.\n\n    Another paragraph.\n</code></pre>\n<h3>Images</h3>\n<p>Images are included with the standard Markdown syntax:</p>\n<pre><code>![alt_text](image_file)\n</code></pre>\n<p>It will typically be easiest to put your image files in the same folder or\ndirectory as the quiz file, so you can use something like <code>![alt](image.jpg)</code>.\nHowever, file paths are supported, including <code>~</code> user expansion under all\noperating systems.  All image paths not starting with <code>http://</code> or <code>https://</code>\nare assumed to refer to local image files (files on your machine), and will\nresult in errors if these files are not found.</p>\n<h3>LaTeX</h3>\n<p>text2qti supports inline LaTeX math within dollar signs <code>$</code>.  There must be a\nnon-space character immediately after the opening <code>$</code> and immediately before\nthe closing <code>$</code>.  For example, <code>$F = ma$</code>.  LaTeX math is limited to what is\nsupported by Canvas or whatever other educational software you are using.  It\nis usually a good idea to preview imported quizzes before assigning them,\nbecause text2qti cannot detect LaTeX incompatibilities or limitations.  There\nis currently not support for block LaTeX math; only inline math is supported.</p>\n<p>When using Canvas with LaTeX math, be aware that in some cases Canvas's\nvertical alignment of math leaves much to be desired.  Sometimes this can be\nimproved by including <code>\\vphantom{fg}</code> or <code>\\strut</code> at the beginning of an\nequation.  An alternative is simply to use LaTeX for all question or choice\ntext (via <code>\\text</code>, etc.).</p>\n<p>text2tqi supports a limited subset of LaTeX\n<a href=\"https://ctan.org/pkg/siunitx\" rel=\"nofollow\">siunitx</a> notation.  You can use notation like\n<code>\\num{1.23e5}</code> to enter numbers in scientific notation.  This would result in\n<code>1.23\u00d710\u2075</code>.  You can use notation like <code>\\si{m/s}</code> or <code>\\si{N.m}</code> to enter\nunits.  These would result in <code>m/s</code> and <code>N\u00b7m</code>.  Unit macros currently are not\nsupported, with these exceptions: <code>\\degree</code>, <code>\\celsius</code>, <code>\\fahrenheit</code>,\n<code>\\ohm</code>, <code>\\micro</code>.  Finally, numbers and units can be combined with notation\nlike <code>\\SI{1.23e5}{m/s}</code>.  All of these can be used inside or outside LaTeX\nmath.</p>\n<p>Technical note: LaTeX and siunitx support are currently implemented as\npreprocessors that are used separately from Python-Markdown.  In rare cases,\nthis may lead to conflicts with Markdown syntax.  These features may be\nreimplemented as Python-Markdown extensions in the future.</p>\n\n          </div>"}, "last_serial": 7089259, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "c3ca1775f00f9664fe6eb51ee5f651e0", "sha256": "2aa036d55ad4b3a9941af39df2d48290b41fc4f77c8d6fff14c01a1965b4a869"}, "downloads": -1, "filename": "text2qti-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "c3ca1775f00f9664fe6eb51ee5f651e0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 24508, "upload_time": "2020-04-01T21:08:37", "upload_time_iso_8601": "2020-04-01T21:08:37.072855Z", "url": "https://files.pythonhosted.org/packages/c5/ce/a76d497f4eb3964a08d61fea7e6252f57078c04360a98c9fd93bdff2decb/text2qti-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6974a2f825ad8e35ff39536bc74edddd", "sha256": "a69b1aebf749b0327dc91eaf123f16b0452587a6ff793579ab512122cf000686"}, "downloads": -1, "filename": "text2qti-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6974a2f825ad8e35ff39536bc74edddd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24327, "upload_time": "2020-04-01T21:08:38", "upload_time_iso_8601": "2020-04-01T21:08:38.981058Z", "url": "https://files.pythonhosted.org/packages/01/af/b5c4a707f03d344c033c90ef736f7e8320ede412b29d174ac6eb4963dc79/text2qti-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "ff510bae0258c9dbb0df98082392672a", "sha256": "a4ec7a9e432e2a7b0ea7217ecb39846f9caeaf7e6daac8690010c82cfd7ff761"}, "downloads": -1, "filename": "text2qti-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff510bae0258c9dbb0df98082392672a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31743, "upload_time": "2020-04-24T02:04:47", "upload_time_iso_8601": "2020-04-24T02:04:47.229713Z", "url": "https://files.pythonhosted.org/packages/b1/4f/fdda92049d3e29581b2badaaefd2b1992bf3cba733695e2e03ab851babd7/text2qti-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6295f3924cce0bd50314a7a188d18194", "sha256": "4a8a6e6bac0ad037a2c5fc7bdc511ab88336c0bed165467f99d99225ad0b429b"}, "downloads": -1, "filename": "text2qti-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6295f3924cce0bd50314a7a188d18194", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34300, "upload_time": "2020-04-24T02:04:48", "upload_time_iso_8601": "2020-04-24T02:04:48.431664Z", "url": "https://files.pythonhosted.org/packages/53/a4/00115725b0d4bd41e1d9266f0dd44e6228c6e5519edb6a83492c3b5a9b3e/text2qti-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ff510bae0258c9dbb0df98082392672a", "sha256": "a4ec7a9e432e2a7b0ea7217ecb39846f9caeaf7e6daac8690010c82cfd7ff761"}, "downloads": -1, "filename": "text2qti-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ff510bae0258c9dbb0df98082392672a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 31743, "upload_time": "2020-04-24T02:04:47", "upload_time_iso_8601": "2020-04-24T02:04:47.229713Z", "url": "https://files.pythonhosted.org/packages/b1/4f/fdda92049d3e29581b2badaaefd2b1992bf3cba733695e2e03ab851babd7/text2qti-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6295f3924cce0bd50314a7a188d18194", "sha256": "4a8a6e6bac0ad037a2c5fc7bdc511ab88336c0bed165467f99d99225ad0b429b"}, "downloads": -1, "filename": "text2qti-0.2.0.tar.gz", "has_sig": false, "md5_digest": "6295f3924cce0bd50314a7a188d18194", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 34300, "upload_time": "2020-04-24T02:04:48", "upload_time_iso_8601": "2020-04-24T02:04:48.431664Z", "url": "https://files.pythonhosted.org/packages/53/a4/00115725b0d4bd41e1d9266f0dd44e6228c6e5519edb6a83492c3b5a9b3e/text2qti-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:08 2020"}