{"info": {"author": "Michael Merickel", "author_email": "michael@merickel.org", "bugtrack_url": null, "classifiers": ["Framework :: Pyramid", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "NON OFFICIAL FIXES on velruse \n\nSee: https://github.com/frgomes/velruse/tree/feature.kotti_auth\n\n----\n\n\nVelruse is a set of authentication routines that provide a unified way\nto have a website user authenticate to a variety of different identity\nproviders and/or a variety of different authentication schemes.\n\nIt is similar in some ways to RPXnow with the exception of being\nopen-source, locally installable, and easily pluggable for custom\nidentity providers and authentication schemes.\n\nYou can run Velruse as a stand-alone service for use with your websites\nregardless of the language they're written in. While Velruse itself is\nwritten in Python, since it can interact with your website purely via\nHTTP POST's.\n\nVelruse can:\n\n* Normalize identity information from varying provider sources\n  (OpenID, Google, Facebook, etc.) to Portable Contacts.\n* Simplify complex authentication protocols by providing a simple\n  consistent API.\n* Provide extension points for other authentication systems, write your\n  own auth provider to handle CAS, LDAP, and use it with ease.\n* Integrate with most web applications regardless of the language used\n  to write the website.\n\n----\n\nOverview\n\nVelruse aims to simplify authenticating a user. It provides auth\nproviders that handle authenticating to a variety of identity providers\nwith multiple authentication schemes (LDAP, SAML, etc.).\n\nEventually, Velruse will include widgets similar to RPXNow that allow\none to customize a login/registration widget so that a website user can\nselect a preferred identity provider to use to sign-in.\n\nIn the mean-time, effort is focused on increasing the available auth\nproviders for the commonly used authentication schemes and identity\nproviders (Facebook, Google, OpenID, etc).\n\nUnlike other authentication libraries for use with web applications, a\nwebsite using Velruse for authentication does not have to be written in\nany particular language.\n\nAPI\n\nVelruse implements an API similar to RPXNow to standardize the way a\nweb application handles user authentication.\n\nVelruse Authentication flow\n\n1. Website sends a POST to the auth provider\u2018s URL with an endpoint that\n   the user should be redirected back to when authentication is complete\n   and includes any additional parameters that the auth provider requires.\n2. When the auth provider finishes the authentication, the user is\n   redirected back to the endpoint specified with a POST, which includes\n   a unique token.\n3. Website then makes a query to the UserStore using the token that was\n   provided. The user\u2019s identity information will be returned, or an\n   error if the authentication was unsuccessful.\n\nIf the website is unable to directly access the UserStore then Step 3 can\nbe replaced by issuing a HTTP POST in the background to the auth provider\nrequesting the user\u2019s information with the token.\n\n\n1.1.1 (2013-08-29)\n==================\n\nThis release primarily includes various unicode improvements as we approach\npy3k support.\n\nBug Fixes\n---------\n\n- [twitter] Fix bug when twitter sends a `null` value for `utc_offset`.\n\n1.1 (2013-06-27)\n================\n\nNew Features\n------------\n\n- Minimal Py3k compatibility.\n\n  - Switch dependency to 'python3-openid' for Py3k.\n\n- [bitbucket] Add an extra query to populate the `emails` and `verifiedEmail`\n  keys in the profile.\n\n- [douban] The douban provider now uses their OAuth2 API instead of OAuth1.0.\n\n- [facebook] Support optional `display` parameter for facebook logins.\n\n- [linkedin] Add support for email address.\n\n- [linkedin] Standardize the default login and callback urls to be similar\n  to all of the other providers by using the `/login/{provider}` prefix.\n\n- [twitter] Support more portable contacts keys including `preferredUsername`.\n\n- [weibo] Add support for the `scope` parameter.\n\nBackward Incompatibilities\n--------------------------\n\n- Standardize birthdays to YYYY-MM-DD format as specified by Portable\n  Contacts instead of using Python date objects. This was done to follow\n  the spec more closely and keep the standalone app's serialized profile\n  the same as the plugin's profile.\n\n- [douban] The douban provider now uses their OAuth2 API instead of OAuth1.0.\n\n- [facebook] Profile keys `gender`, `emails` and `verifiedEmail` will not be\n  present in the profile if they are not available.\n\n- [openid, google_hybrid, yahoo] The default OpenID store is now stateless,\n  changed from the previous default\n  :class:`openid.store.memstore.MemoryStore`. The provider can be updated\n  by specifying the `store` opention when creating creating each provider.\n\nDependencies\n------------\n\n- Switch to using oauthlib instead of python-oauth2 for\n  OAuth1-based providers.\n\n1.0.3 (2012-10-11)\n==================\n\n- [google_hybrid] Modified the type of the\n  :class:`~velruse.providers.google_hybrid.GoogleAuthenticationComplete`\n  to be ``google_hybrid`` instead of ``google``.\n\n1.0.2 (2012-10-11)\n==================\n\n- [facebook,github,weibo] Fix bug in CSRF checking where Velruse would pass\n  the CSRF check if a session had not been started.\n\n- [google_hybrid] Renamed the Google OpenID+OAuth1.0 hybrid module to\n  ``google_hybrid``. There are bw-compat shims left in\n  ``velruse.providers.google``. This will be deprecated in a future release.\n\n- [google_oauth2] Added support for Google's OAuth2.0 protocol.\n\n- [mailru] Added a new provider for mail.ru.\n\n- [vk] Added a new provider for vk.com (Vkontakte).\n\n- [yandex] Added a new provider for yandex.ru.\n\n1.0.1 (2012-08-30)\n==================\n\n- [facebook] Modified handling of timezone offsets in user profiles to be more\n  robust to different \"minute\" values.\n\n1.0 (2012-08-14)\n================\n\nVersion 0.3 is classified as an older release than the previous 0.20\nin the semantic versioning scheme. Thus 0.3 was a brownbag and 1.0 will\ncorrect that issue.\n\nThis release is also an opportunity to promote Velruse's new API and\nprovide confidence that it will try to maintain backward compatibility\ngoing forward.\n\n0.3b3 (2012-08-06)\n==================\n\n- 0.3b2 was a brownbag\n\n0.3b2 (2012-08-06)\n==================\n\n- [github] Add CSRF checks to the provider as they started requiring the\n  OAuth state variable to be used.\n\n0.3b1 (2012-08-03)\n==================\n\n- Complete rewrite of the Velruse internal API. It is now written as a\n  fully supported Pyramid plugin.\n\n- Overhaul of documentation.\n\n  + Individually documented the standalone service application and\n    the Pyramid plugin API.\n\n- Removed support for Twitter's authorization API. This will be brought\n  back in a future release.\n\n- Added support for several new OAuth2.0 providers.\n\n  + douban\n  + github\n  + linkedin\n  + qq\n  + renren (http://renren.com)\n  + taobao\n  + weibo\n\n0.20a1 (2011-05-25)\n===================\n\n- Minor bug fixes.\n\n0.1 (2010-04-30)\n================\n\n- Initial release.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://velruse.readthedocs.org/en/latest/index.html", "keywords": "oauth openid social auth facebook google pyramid rest", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "rgomes_velruse", "package_url": "https://pypi.org/project/rgomes_velruse/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/rgomes_velruse/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://velruse.readthedocs.org/en/latest/index.html"}, "release_url": "https://pypi.org/project/rgomes_velruse/1.1.2/", "requires_dist": null, "requires_python": null, "summary": "Simplifying third-party authentication for web applications.", "version": "1.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            NON OFFICIAL FIXES on velruse <br><br>See: https://github.com/frgomes/velruse/tree/feature.kotti_auth<br><br>----<br><br><br>Velruse is a set of authentication routines that provide a unified way<br>to have a website user authenticate to a variety of different identity<br>providers and/or a variety of different authentication schemes.<br><br>It is similar in some ways to RPXnow with the exception of being<br>open-source, locally installable, and easily pluggable for custom<br>identity providers and authentication schemes.<br><br>You can run Velruse as a stand-alone service for use with your websites<br>regardless of the language they're written in. While Velruse itself is<br>written in Python, since it can interact with your website purely via<br>HTTP POST's.<br><br>Velruse can:<br><br>* Normalize identity information from varying provider sources<br>  (OpenID, Google, Facebook, etc.) to Portable Contacts.<br>* Simplify complex authentication protocols by providing a simple<br>  consistent API.<br>* Provide extension points for other authentication systems, write your<br>  own auth provider to handle CAS, LDAP, and use it with ease.<br>* Integrate with most web applications regardless of the language used<br>  to write the website.<br><br>----<br><br>Overview<br><br>Velruse aims to simplify authenticating a user. It provides auth<br>providers that handle authenticating to a variety of identity providers<br>with multiple authentication schemes (LDAP, SAML, etc.).<br><br>Eventually, Velruse will include widgets similar to RPXNow that allow<br>one to customize a login/registration widget so that a website user can<br>select a preferred identity provider to use to sign-in.<br><br>In the mean-time, effort is focused on increasing the available auth<br>providers for the commonly used authentication schemes and identity<br>providers (Facebook, Google, OpenID, etc).<br><br>Unlike other authentication libraries for use with web applications, a<br>website using Velruse for authentication does not have to be written in<br>any particular language.<br><br>API<br><br>Velruse implements an API similar to RPXNow to standardize the way a<br>web application handles user authentication.<br><br>Velruse Authentication flow<br><br>1. Website sends a POST to the auth provider\u2018s URL with an endpoint that<br>   the user should be redirected back to when authentication is complete<br>   and includes any additional parameters that the auth provider requires.<br>2. When the auth provider finishes the authentication, the user is<br>   redirected back to the endpoint specified with a POST, which includes<br>   a unique token.<br>3. Website then makes a query to the UserStore using the token that was<br>   provided. The user\u2019s identity information will be returned, or an<br>   error if the authentication was unsuccessful.<br><br>If the website is unable to directly access the UserStore then Step 3 can<br>be replaced by issuing a HTTP POST in the background to the auth provider<br>requesting the user\u2019s information with the token.<br><br><br>1.1.1 (2013-08-29)<br>==================<br><br>This release primarily includes various unicode improvements as we approach<br>py3k support.<br><br>Bug Fixes<br>---------<br><br>- [twitter] Fix bug when twitter sends a `null` value for `utc_offset`.<br><br>1.1 (2013-06-27)<br>================<br><br>New Features<br>------------<br><br>- Minimal Py3k compatibility.<br><br>  - Switch dependency to 'python3-openid' for Py3k.<br><br>- [bitbucket] Add an extra query to populate the `emails` and `verifiedEmail`<br>  keys in the profile.<br><br>- [douban] The douban provider now uses their OAuth2 API instead of OAuth1.0.<br><br>- [facebook] Support optional `display` parameter for facebook logins.<br><br>- [linkedin] Add support for email address.<br><br>- [linkedin] Standardize the default login and callback urls to be similar<br>  to all of the other providers by using the `/login/{provider}` prefix.<br><br>- [twitter] Support more portable contacts keys including `preferredUsername`.<br><br>- [weibo] Add support for the `scope` parameter.<br><br>Backward Incompatibilities<br>--------------------------<br><br>- Standardize birthdays to YYYY-MM-DD format as specified by Portable<br>  Contacts instead of using Python date objects. This was done to follow<br>  the spec more closely and keep the standalone app's serialized profile<br>  the same as the plugin's profile.<br><br>- [douban] The douban provider now uses their OAuth2 API instead of OAuth1.0.<br><br>- [facebook] Profile keys `gender`, `emails` and `verifiedEmail` will not be<br>  present in the profile if they are not available.<br><br>- [openid, google_hybrid, yahoo] The default OpenID store is now stateless,<br>  changed from the previous default<br>  :class:`openid.store.memstore.MemoryStore`. The provider can be updated<br>  by specifying the `store` opention when creating creating each provider.<br><br>Dependencies<br>------------<br><br>- Switch to using oauthlib instead of python-oauth2 for<br>  OAuth1-based providers.<br><br>1.0.3 (2012-10-11)<br>==================<br><br>- [google_hybrid] Modified the type of the<br>  :class:`~velruse.providers.google_hybrid.GoogleAuthenticationComplete`<br>  to be ``google_hybrid`` instead of ``google``.<br><br>1.0.2 (2012-10-11)<br>==================<br><br>- [facebook,github,weibo] Fix bug in CSRF checking where Velruse would pass<br>  the CSRF check if a session had not been started.<br><br>- [google_hybrid] Renamed the Google OpenID+OAuth1.0 hybrid module to<br>  ``google_hybrid``. There are bw-compat shims left in<br>  ``velruse.providers.google``. This will be deprecated in a future release.<br><br>- [google_oauth2] Added support for Google's OAuth2.0 protocol.<br><br>- [mailru] Added a new provider for mail.ru.<br><br>- [vk] Added a new provider for vk.com (Vkontakte).<br><br>- [yandex] Added a new provider for yandex.ru.<br><br>1.0.1 (2012-08-30)<br>==================<br><br>- [facebook] Modified handling of timezone offsets in user profiles to be more<br>  robust to different \"minute\" values.<br><br>1.0 (2012-08-14)<br>================<br><br>Version 0.3 is classified as an older release than the previous 0.20<br>in the semantic versioning scheme. Thus 0.3 was a brownbag and 1.0 will<br>correct that issue.<br><br>This release is also an opportunity to promote Velruse's new API and<br>provide confidence that it will try to maintain backward compatibility<br>going forward.<br><br>0.3b3 (2012-08-06)<br>==================<br><br>- 0.3b2 was a brownbag<br><br>0.3b2 (2012-08-06)<br>==================<br><br>- [github] Add CSRF checks to the provider as they started requiring the<br>  OAuth state variable to be used.<br><br>0.3b1 (2012-08-03)<br>==================<br><br>- Complete rewrite of the Velruse internal API. It is now written as a<br>  fully supported Pyramid plugin.<br><br>- Overhaul of documentation.<br><br>  + Individually documented the standalone service application and<br>    the Pyramid plugin API.<br><br>- Removed support for Twitter's authorization API. This will be brought<br>  back in a future release.<br><br>- Added support for several new OAuth2.0 providers.<br><br>  + douban<br>  + github<br>  + linkedin<br>  + qq<br>  + renren (http://renren.com)<br>  + taobao<br>  + weibo<br><br>0.20a1 (2011-05-25)<br>===================<br><br>- Minor bug fixes.<br><br>0.1 (2010-04-30)<br>================<br><br>- Initial release.\n          </div>"}, "last_serial": 907690, "releases": {"1.1.2": [{"comment_text": "", "digests": {"md5": "ea16b82b00cc9732102120de5140443d", "sha256": "ddd1267d10db990235014e6f2003c5d24f285050c14481b26e3b8b9a23a50b5a"}, "downloads": -1, "filename": "rgomes_velruse-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ea16b82b00cc9732102120de5140443d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98606, "upload_time": "2013-10-30T20:13:28", "upload_time_iso_8601": "2013-10-30T20:13:28.337019Z", "url": "https://files.pythonhosted.org/packages/ef/70/2794f2e601e0c554be1dfb0d86526b7e9b0e2eee3c0d50b609e0affc04d5/rgomes_velruse-1.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ea16b82b00cc9732102120de5140443d", "sha256": "ddd1267d10db990235014e6f2003c5d24f285050c14481b26e3b8b9a23a50b5a"}, "downloads": -1, "filename": "rgomes_velruse-1.1.2.tar.gz", "has_sig": false, "md5_digest": "ea16b82b00cc9732102120de5140443d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98606, "upload_time": "2013-10-30T20:13:28", "upload_time_iso_8601": "2013-10-30T20:13:28.337019Z", "url": "https://files.pythonhosted.org/packages/ef/70/2794f2e601e0c554be1dfb0d86526b7e9b0e2eee3c0d50b609e0affc04d5/rgomes_velruse-1.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:02 2020"}