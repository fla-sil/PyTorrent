{"info": {"author": "Younes JAAIDI", "author_email": "yjaaidi@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: Software Development :: Code Generators", "Topic :: Utilities"], "description": "Be synthetic with PySynthetic\n#############################\n\n**PySynthetic** is a set of tools that aims to make writing Python classes shorter and \"cleaner\".\n\nFor instance, one can add properties and accessors *(getters/setters)* to a class with only one line of code *(using respectively* ``synthesize_property`` *and* ``synthesize_member`` *decorators)*, thus making the code more than 5 times shorter *(see* `examples`_ *)*. One can even avoid the laborious task of members initialization by using the ``synthesize_constructor`` decorator that takes care of writing the ``__init__`` method.\n\n**PySynthetic** is also useful for applying strict type checking with no pain just by using the decorators' ``contract`` argument *(see* `PyContracts <http://andreacensi.github.com/contracts/>`_ *)*.\n\nHelp and ideas are appreciated! Thank you!\n\n.. image:: https://api.flattr.com/button/flattr-badge-large.png\n    :target: https://flattr.com/thing/1167227/\n\n.. image:: https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif\n    :target: https://www.paypal.com/cgi-bin/webscr?cmd=_donations&business=yjaaidi%40gmail%2ecom&lc=US&item_name=yjaaidi&currency_code=EUR&bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\n\nResources\n*********\n\n* `Documentation <http://pysynthetic.readthedocs.org/>`_\n* `Bug Tracker <http://github.com/yjaaidi/pysynthetic/issues>`_\n* `Code <http://github.com/yjaaidi/pysynthetic>`_\n* `Mailing List <https://groups.google.com/group/pysynthetic>`_ <pysynthetic@googlegroups.com>\n\nInstallation\n************\n\n.. code-block:: shell\n\n    pip install pysynthetic\n\nOr simply from the tarball or source code if you are not using *pip*.\n\n.. code-block:: shell\n\n    python setup.py install\n\nExamples\n********\n\nSynthetic properties\n====================\n\nWith **PySynthetic**, the following code *(8 lines)*...\n\n.. code-block:: python\n\n    from synthetic import synthesize_constructor, synthesize_property\n    \n    @synthesize_property('a', contract = int)\n    @synthesize_property('b', contract = list)\n    @synthesize_property('c', default = \"\", contract = str, read_only = True)\n    @synthesize_constructor()\n    class ShortAndClean(object):\n        pass\n\n... replaces this *(43 lines)*:\n\n.. code-block:: python\n\n    from contracts import contract\n    \n    class ThisHurtsMyKeyboard(object):\n    \n        @contract\n        def __init__(self, a, b, c = \"\"):\n            \"\"\"\n        :type a: int\n        :type b: list\n        :type c: str\n    \"\"\"\n            self._a = a\n            self._b = b\n            self._c = c\n            \n        @property\n        def a(self):\n            return self._a\n        \n        @a.setter\n        @contract\n        def a(self, value):\n            \"\"\"\n        :type value: int\n    \"\"\"\n            self._a = value\n        \n        @property\n        def b(self):\n            return self._b\n        \n        @b.setter\n        @contract\n        def b(self, value):\n            \"\"\"\n        :type value: list\n    \"\"\"\n            self._b = value\n        \n        @property \n        def c(self):\n            return self._c\n\nSynthetic accessors\n===================\n\nBut, if you are more into accessors than properties, you can use ``synthesize_member`` decorator instead.\n\nThis way, the following code *(8 lines)*...\n\n.. code-block:: python\n\n    from synthetic import synthesize_constructor, synthesize_member\n    \n    @synthesize_member('a', contract = int)\n    @synthesize_member('b', contract = list)\n    @synthesize_member('c', default = \"\", contract = str, read_only = True)\n    @synthesize_constructor()\n    class ShortAndClean(object):\n        pass\n\n...will replace this *(37 lines)*:\n\n.. code-block:: python\n\n    from contracts import contract\n    \n    class ThisHurtsMyKeyboard(object):\n    \n        @contract\n        def __init__(self, a, b, c = \"\"):\n            \"\"\"\n        :type a: int\n        :type b: list\n        :type c: str\n    \"\"\"\n            self._a = a\n            self._b = b\n            self._c = c\n            \n        def a(self):\n            return self._a\n        \n        @contract\n        def set_a(self, value):\n            \"\"\"\n        :type value: int\n    \"\"\"\n            self._a = value\n        \n        def b(self):\n            return self._b\n        \n        @contract\n        def set_b(self, value):\n            \"\"\"\n        :type value: list\n    \"\"\"\n            self._b = value\n        \n        def c(self):\n            return self._c\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://pypi.python.org/pypi/pysynthetic/", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yjaaidi/pysynthetic", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pysynthetic", "package_url": "https://pypi.org/project/pysynthetic/", "platform": "any", "project_url": "https://pypi.org/project/pysynthetic/", "project_urls": {"Download": "https://pypi.python.org/pypi/pysynthetic/", "Homepage": "https://github.com/yjaaidi/pysynthetic"}, "release_url": "https://pypi.org/project/pysynthetic/0.5.2/", "requires_dist": null, "requires_python": "", "summary": "Easy Python class writing and type checking", "version": "0.5.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><strong>PySynthetic</strong> is a set of tools that aims to make writing Python classes shorter and \u201ccleaner\u201d.</p>\n<p>For instance, one can add properties and accessors <em>(getters/setters)</em> to a class with only one line of code <em>(using respectively</em> <tt>synthesize_property</tt> <em>and</em> <tt>synthesize_member</tt> <em>decorators)</em>, thus making the code more than 5 times shorter <em>(see</em> <a href=\"#examples\" rel=\"nofollow\">examples</a> <em>)</em>. One can even avoid the laborious task of members initialization by using the <tt>synthesize_constructor</tt> decorator that takes care of writing the <tt>__init__</tt> method.</p>\n<p><strong>PySynthetic</strong> is also useful for applying strict type checking with no pain just by using the decorators\u2019 <tt>contract</tt> argument <em>(see</em> <a href=\"http://andreacensi.github.com/contracts/\" rel=\"nofollow\">PyContracts</a> <em>)</em>.</p>\n<p>Help and ideas are appreciated! Thank you!</p>\n<a href=\"https://flattr.com/thing/1167227/\" rel=\"nofollow\"><img alt=\"https://api.flattr.com/button/flattr-badge-large.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b42550eca8c42d3bee354bdba548e69c6d743f2a/68747470733a2f2f6170692e666c617474722e636f6d2f627574746f6e2f666c617474722d62616467652d6c617267652e706e67\"></a>\n<a href=\"https://www.paypal.com/cgi-bin/webscr?cmd=_donations&amp;business=yjaaidi%40gmail%2ecom&amp;lc=US&amp;item_name=yjaaidi&amp;currency_code=EUR&amp;bn=PP%2dDonationsBF%3abtn_donate_SM%2egif%3aNonHosted\" rel=\"nofollow\"><img alt=\"https://www.paypalobjects.com/en_US/i/btn/btn_donate_SM.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a6e002416a636e257fe18512353f3a7e0f62f3e/68747470733a2f2f7777772e70617970616c6f626a656374732e636f6d2f656e5f55532f692f62746e2f62746e5f646f6e6174655f534d2e676966\"></a>\n<div id=\"resources\">\n<h2>Resources</h2>\n<ul>\n<li><a href=\"http://pysynthetic.readthedocs.org/\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"http://github.com/yjaaidi/pysynthetic/issues\" rel=\"nofollow\">Bug Tracker</a></li>\n<li><a href=\"http://github.com/yjaaidi/pysynthetic\" rel=\"nofollow\">Code</a></li>\n<li><a href=\"https://groups.google.com/group/pysynthetic\" rel=\"nofollow\">Mailing List</a> &lt;<a href=\"mailto:pysynthetic%40googlegroups.com\">pysynthetic<span>@</span>googlegroups<span>.</span>com</a>&gt;</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install pysynthetic\n</pre>\n<p>Or simply from the tarball or source code if you are not using <em>pip</em>.</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<div id=\"synthetic-properties\">\n<h3>Synthetic properties</h3>\n<p>With <strong>PySynthetic</strong>, the following code <em>(8 lines)</em>\u2026</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">synthetic</span> <span class=\"kn\">import</span> <span class=\"n\">synthesize_constructor</span><span class=\"p\">,</span> <span class=\"n\">synthesize_property</span>\n\n<span class=\"nd\">@synthesize_property</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"nd\">@synthesize_property</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">)</span>\n<span class=\"nd\">@synthesize_property</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">read_only</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nd\">@synthesize_constructor</span><span class=\"p\">()</span>\n<span class=\"k\">class</span> <span class=\"nc\">ShortAndClean</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>\u2026 replaces this <em>(43 lines)</em>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">contracts</span> <span class=\"kn\">import</span> <span class=\"n\">contract</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ThisHurtsMyKeyboard</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@contract</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n    :type a: int\n    :type b: list\n    :type c: str\n\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_a</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_b</span> <span class=\"o\">=</span> <span class=\"n\">b</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_c</span> <span class=\"o\">=</span> <span class=\"n\">c</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_a</span>\n\n    <span class=\"nd\">@a</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@contract</span>\n    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n    :type value: int\n\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_a</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_b</span>\n\n    <span class=\"nd\">@b</span><span class=\"o\">.</span><span class=\"n\">setter</span>\n    <span class=\"nd\">@contract</span>\n    <span class=\"k\">def</span> <span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n    :type value: list\n\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_b</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"nd\">@property</span>\n    <span class=\"k\">def</span> <span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_c</span>\n</pre>\n</div>\n<div id=\"synthetic-accessors\">\n<h3>Synthetic accessors</h3>\n<p>But, if you are more into accessors than properties, you can use <tt>synthesize_member</tt> decorator instead.</p>\n<p>This way, the following code <em>(8 lines)</em>\u2026</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">synthetic</span> <span class=\"kn\">import</span> <span class=\"n\">synthesize_constructor</span><span class=\"p\">,</span> <span class=\"n\">synthesize_member</span>\n\n<span class=\"nd\">@synthesize_member</span><span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"nb\">int</span><span class=\"p\">)</span>\n<span class=\"nd\">@synthesize_member</span><span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"nb\">list</span><span class=\"p\">)</span>\n<span class=\"nd\">@synthesize_member</span><span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">default</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">,</span> <span class=\"n\">contract</span> <span class=\"o\">=</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">read_only</span> <span class=\"o\">=</span> <span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nd\">@synthesize_constructor</span><span class=\"p\">()</span>\n<span class=\"k\">class</span> <span class=\"nc\">ShortAndClean</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>\u2026will replace this <em>(37 lines)</em>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">contracts</span> <span class=\"kn\">import</span> <span class=\"n\">contract</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">ThisHurtsMyKeyboard</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"nd\">@contract</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">a</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"p\">,</span> <span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n    :type a: int\n    :type b: list\n    :type c: str\n\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_a</span> <span class=\"o\">=</span> <span class=\"n\">a</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_b</span> <span class=\"o\">=</span> <span class=\"n\">b</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_c</span> <span class=\"o\">=</span> <span class=\"n\">c</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_a</span>\n\n    <span class=\"nd\">@contract</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_a</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n    :type value: int\n\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_a</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_b</span>\n\n    <span class=\"nd\">@contract</span>\n    <span class=\"k\">def</span> <span class=\"nf\">set_b</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">value</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n    :type value: list\n\"\"\"</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_b</span> <span class=\"o\">=</span> <span class=\"n\">value</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">c</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_c</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2814490, "releases": {"0.4.10": [{"comment_text": "", "digests": {"md5": "6435045e7ccf834a1cdf15cc1f865ba0", "sha256": "ed4acbcaa98145b9e51b34a2b240db4fd9b5dfd150f639cfe1022001051e4c9a"}, "downloads": -1, "filename": "pysynthetic-0.4.10.tar.gz", "has_sig": false, "md5_digest": "6435045e7ccf834a1cdf15cc1f865ba0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151553, "upload_time": "2013-04-11T23:27:40", "upload_time_iso_8601": "2013-04-11T23:27:40.266910Z", "url": "https://files.pythonhosted.org/packages/cd/6b/80a3a2d4605608b5a669c18ff3a50b45c1820fa1957b7eb0b96579f8f81b/pysynthetic-0.4.10.tar.gz", "yanked": false}], "0.4.11": [{"comment_text": "", "digests": {"md5": "e8d51be37cdc5ee4b3dbec6397b69a81", "sha256": "b864564061dea75af69b2db2f2b582181e6f4b2c9810235f9e6776d7a3e01387"}, "downloads": -1, "filename": "pysynthetic-0.4.11.tar.gz", "has_sig": false, "md5_digest": "e8d51be37cdc5ee4b3dbec6397b69a81", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148350, "upload_time": "2015-01-31T20:43:36", "upload_time_iso_8601": "2015-01-31T20:43:36.198182Z", "url": "https://files.pythonhosted.org/packages/fd/d6/c864d0275ff178ee3af3df48f80ffbdc1f49fdf325ba4c720331053db85f/pysynthetic-0.4.11.tar.gz", "yanked": false}], "0.4.12": [{"comment_text": "", "digests": {"md5": "75bb937634b7523d7195307eb459b53c", "sha256": "bf150c1439833eeca0b108f12e7d1d3240d217875129198149a01f9ae8ab8290"}, "downloads": -1, "filename": "pysynthetic-0.4.12.tar.gz", "has_sig": false, "md5_digest": "75bb937634b7523d7195307eb459b53c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148330, "upload_time": "2015-11-16T16:03:36", "upload_time_iso_8601": "2015-11-16T16:03:36.542196Z", "url": "https://files.pythonhosted.org/packages/ef/0b/22b46e16ae506f107057f9c7e1ff6be55a09fefd878e94d2bed135eb8e35/pysynthetic-0.4.12.tar.gz", "yanked": false}], "0.4.13": [{"comment_text": "", "digests": {"md5": "5a7160b7d5ab1215373d29ada652de93", "sha256": "6a6a5a7ccf17513769bab4af9f5129e3f9d9065406ed9391a9de5f8af159bb57"}, "downloads": -1, "filename": "pysynthetic-0.4.13.tar.gz", "has_sig": false, "md5_digest": "5a7160b7d5ab1215373d29ada652de93", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148336, "upload_time": "2015-11-16T18:10:43", "upload_time_iso_8601": "2015-11-16T18:10:43.860983Z", "url": "https://files.pythonhosted.org/packages/c5/2e/95bbca84415eb71be643c90c24a6b2e690f857fbafa7960eb602124efeea/pysynthetic-0.4.13.tar.gz", "yanked": false}], "0.4.14": [{"comment_text": "", "digests": {"md5": "dd5330bd649037d8cdf25909411f2eac", "sha256": "52d1c4a51ab18b2c47e2b3dd797957fff01af78853c333dd67f8045e2d754f8f"}, "downloads": -1, "filename": "pysynthetic-0.4.14.tar.gz", "has_sig": false, "md5_digest": "dd5330bd649037d8cdf25909411f2eac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 148503, "upload_time": "2016-03-17T23:05:18", "upload_time_iso_8601": "2016-03-17T23:05:18.253288Z", "url": "https://files.pythonhosted.org/packages/aa/40/a6d559eeced08d90671225da041209209901fcd287ee98e29bd44221aa71/pysynthetic-0.4.14.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "826f1e419a41edac9ae842c625df1259", "sha256": "4a7242fa4d406c918cbcdb48c67a770cc12a43938c2778ce35593b1323db896c"}, "downloads": -1, "filename": "pysynthetic-0.4.8.tar.gz", "has_sig": false, "md5_digest": "826f1e419a41edac9ae842c625df1259", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 147876, "upload_time": "2013-03-09T23:16:57", "upload_time_iso_8601": "2013-03-09T23:16:57.099307Z", "url": "https://files.pythonhosted.org/packages/85/01/f838b7070c18978a9898475b57b0229d66a359e48959ab6ebf61584d6d66/pysynthetic-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "63993d69cad7bb3f29d146d7c98f8dcd", "sha256": "125d5eb6befaeaa8aac37fde3f2287de9d3203ad20de67105922acb09c6bf3cb"}, "downloads": -1, "filename": "pysynthetic-0.4.9.tar.gz", "has_sig": false, "md5_digest": "63993d69cad7bb3f29d146d7c98f8dcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 151710, "upload_time": "2013-03-10T23:25:32", "upload_time_iso_8601": "2013-03-10T23:25:32.369052Z", "url": "https://files.pythonhosted.org/packages/e6/17/d5a71b0208ff70a95eb3cadb0f426a2d2d28711459d78db849e259aa6781/pysynthetic-0.4.9.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "ba67851e04083d57a94473dabeaf8499", "sha256": "1392d77c5d1a7fce1071f12f1955ee1f235413af64f237d100fb7bbc080d07da"}, "downloads": -1, "filename": "pysynthetic-0.5.0.tar.gz", "has_sig": false, "md5_digest": "ba67851e04083d57a94473dabeaf8499", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150264, "upload_time": "2016-11-02T09:55:12", "upload_time_iso_8601": "2016-11-02T09:55:12.304249Z", "url": "https://files.pythonhosted.org/packages/7c/19/39af5a34f322f43469572f26c0234c96c6de2df1e794077e499ed2907832/pysynthetic-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "0c62ae3de0f37f958f40d773b098848e", "sha256": "c6d668ffef9074b25c618b0e1786e7b46542b54f3897b0af35137dab63a54807"}, "downloads": -1, "filename": "pysynthetic-0.5.1.tar.gz", "has_sig": false, "md5_digest": "0c62ae3de0f37f958f40d773b098848e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150274, "upload_time": "2016-12-14T11:25:06", "upload_time_iso_8601": "2016-12-14T11:25:06.281746Z", "url": "https://files.pythonhosted.org/packages/1a/b1/eae5d8a0aabd6209d36a600c1ac2a8f2beae58f8cbaa7102002721c8e4ea/pysynthetic-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "f31bea019791a2ceef8cf025bc08fa62", "sha256": "919635566e58a94f1e60e553aaa610a55b3e55d9abaddbf96f6d49bd667989a1"}, "downloads": -1, "filename": "pysynthetic-0.5.2.tar.gz", "has_sig": false, "md5_digest": "f31bea019791a2ceef8cf025bc08fa62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150347, "upload_time": "2017-04-19T16:14:13", "upload_time_iso_8601": "2017-04-19T16:14:13.037209Z", "url": "https://files.pythonhosted.org/packages/11/33/5891af4d9b4794319c33e37552807446e06a790cd2d75f6e15073c3e2e99/pysynthetic-0.5.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f31bea019791a2ceef8cf025bc08fa62", "sha256": "919635566e58a94f1e60e553aaa610a55b3e55d9abaddbf96f6d49bd667989a1"}, "downloads": -1, "filename": "pysynthetic-0.5.2.tar.gz", "has_sig": false, "md5_digest": "f31bea019791a2ceef8cf025bc08fa62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150347, "upload_time": "2017-04-19T16:14:13", "upload_time_iso_8601": "2017-04-19T16:14:13.037209Z", "url": "https://files.pythonhosted.org/packages/11/33/5891af4d9b4794319c33e37552807446e06a790cd2d75f6e15073c3e2e99/pysynthetic-0.5.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:43 2020"}