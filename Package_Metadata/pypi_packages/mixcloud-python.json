{"info": {"author": "Said Ali", "author_email": "said.ali@msn.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "mixcloud-python\n===============\n\n\nA Python wrapper around the Mixcloud API\n\n    It allows you to create Python objects of Mixcloud resources such as User, Categories, Tags etc.\n    All Mixcloud resources are converted from JSON to Python objects.\n\n    For more info check\n    * www.mixcloud.com/developers/documentation/\n\n\nInstallation\n------------\nTo install mixcloud-python: ::\n\n    pip install mixcloud-python\n\nUsage\n-----\nTo use mixcloud-python, you must first create a `Client` instance,\n\n    import mixcloud\n\n    client = mixcloud.Client()\n\n    user = client.get_user('Kasa007')\n\n    user.name\n\nResources\n-----\nHere is a list of classes and their methods.\n\n**User**\n\nclient.get_user('Kasa007') # Pass a user\n\nInstance :\n\nExample of available Instance of a user object:\n\n    client = mixcloud.Client()\n\n    user = client.get_user('Kasa007')\n\n    user.username\n\n    user.city\n\n    user.url\n\n\nCheck Mixcloud documentation for all available user fields\n\n\n**Categories**\n\ndeep_house_categorie = client.get_categories('deep-house') # Pass a Categorie\n\nInstance :\n\nExample of available Instance of a Categories object:\n\n    client = mixcloud.Client()\n\n    deep_house_categorie = client.get_categories('deep-house')\n\n    deep_house_categorie.url\n\n    deep_house_categorie.slug\n\n    deep_house_categorie.format\n\n\nCheck Mixcloud documentation for all available categories fields\n\n**Tags**\n\ndeep_house_categorie = client.get_tag('funk') # Pass a tag\n\nInstance :\n\nExample of available Instance of a Categories object:\n\n    client = mixcloud.Client()\n\n    funk_tag = client.get_tag('funk')\n\n    funk_tag.url\n\n    funk_tag.name\n\n    funk_tag.key\n\n\nCheck Mixcloud documentation for all available Tags fields\n\n**Popular**\n\npopular_songs = client.get_popular(limit=2) # Pass a limit optional\n\nInstance :\n\nExample of available Instance of a Popular object:\n\n    client = mixcloud.Client()\n\n    popular_songs = client.get_popular(limit=2)\n\n    popular_songs.data[0].name\n\n    popular_songs.data[0].url\n\n    popular_songs.data[0].tags[0].name\n\n    popular_songs.data[0].tags[0].url\n\n\nCheck Mixcloud documentation for all available Popular fields\n\n\n**Hot**\n\npopular_songs = client.get_hot(limit=2) # Pass a limit optional\n\nInstance :\n\nExample of available Instance of a Popular object:\n\n    client = mixcloud.Client()\n\n    hot_songs = client.get_hot(limit=2)\n\n    hot_songs.data[0].name\n\n    hot_songs.data[0].url\n\n    hot_songs.data[0].tags[0].name\n\n    hot_songs.data[0].tags[0].url\n\n\nCheck Mixcloud documentation for all available Hot fields\n\n**New**\n\npopular_songs = client.get_new(limit=2) # Pass a limit optional\n\nInstance :\n\nExample of available Instance of a Popular object:\n\n    client = mixcloud.Client()\n\n    new_songs = client.get_new(limit=2)\n\n    new_songs.data[0].name\n\n    new_songs.data[0].url\n\n    new_songs.data[0].tags[0].name\n\n    new_songs.data[0].tags[0].url\n\nGet next page:\n\n    new_songs.next_paging()\n\nGet pervious page:\n\n    new_songs.previous_paging()\n\n\nCheck Mixcloud documentation for all available New fields\n\n\n**Search**\n\npopular_songs = client.search('kasa007', 'user') # Pass type and query\n\nInstance :\n\nExample of available Instance of a Popular object:\n\n    client = mixcloud.Client()\n\n    search_user = client.search('kasa007', 'user')\n\n    search_user.data[0].name\n\n    search_user.data[0].url\n\n\nCheck Mixcloud documentation for all available Search fields\n\nCreate Object from resource\n------------\n\nLet's say you want to make a python object of the city London, and the url is https://api.mixcloud.com/discover/city:london/\n\nExample of creating an object out of this url:\n\n    client = mixcloud.Client()\n\n    discover_london = client.get_url('https://api.mixcloud.com/discover/city:london/')\n\n    discover_london.url\n\n    discover_london.name\n\n    discover_london.key\n\nRequirements\n^^^^^^^^^^^^\n#. Python 2.7+ or  Python 3 +\n#. `Requests 2.7.0+ <http://docs.python-requests.org/en/master//>`_\n#. `Six 1.4.1+ <https://pythonhosted.org/six/>`_\n\n\nRunning the test\n-----------------\nRun test:\n    python mixcloud/tests.py\n\n\nAuthors\n-------\n\n`mixcloud-python` was written by `Said Ali <said.ali@msn.com>`_.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Said007/mixcloud-python", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "mixcloud-python", "package_url": "https://pypi.org/project/mixcloud-python/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mixcloud-python/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/Said007/mixcloud-python"}, "release_url": "https://pypi.org/project/mixcloud-python/0.2/", "requires_dist": null, "requires_python": null, "summary": "A Python wrapper around the Mixcloud API", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            mixcloud-python<br>===============<br><br><br>A Python wrapper around the Mixcloud API<br><br>    It allows you to create Python objects of Mixcloud resources such as User, Categories, Tags etc.<br>    All Mixcloud resources are converted from JSON to Python objects.<br><br>    For more info check<br>    * www.mixcloud.com/developers/documentation/<br><br><br>Installation<br>------------<br>To install mixcloud-python: ::<br><br>    pip install mixcloud-python<br><br>Usage<br>-----<br>To use mixcloud-python, you must first create a `Client` instance,<br><br>    import mixcloud<br><br>    client = mixcloud.Client()<br><br>    user = client.get_user('Kasa007')<br><br>    user.name<br><br>Resources<br>-----<br>Here is a list of classes and their methods.<br><br>**User**<br><br>client.get_user('Kasa007') # Pass a user<br><br>Instance :<br><br>Example of available Instance of a user object:<br><br>    client = mixcloud.Client()<br><br>    user = client.get_user('Kasa007')<br><br>    user.username<br><br>    user.city<br><br>    user.url<br><br><br>Check Mixcloud documentation for all available user fields<br><br><br>**Categories**<br><br>deep_house_categorie = client.get_categories('deep-house') # Pass a Categorie<br><br>Instance :<br><br>Example of available Instance of a Categories object:<br><br>    client = mixcloud.Client()<br><br>    deep_house_categorie = client.get_categories('deep-house')<br><br>    deep_house_categorie.url<br><br>    deep_house_categorie.slug<br><br>    deep_house_categorie.format<br><br><br>Check Mixcloud documentation for all available categories fields<br><br>**Tags**<br><br>deep_house_categorie = client.get_tag('funk') # Pass a tag<br><br>Instance :<br><br>Example of available Instance of a Categories object:<br><br>    client = mixcloud.Client()<br><br>    funk_tag = client.get_tag('funk')<br><br>    funk_tag.url<br><br>    funk_tag.name<br><br>    funk_tag.key<br><br><br>Check Mixcloud documentation for all available Tags fields<br><br>**Popular**<br><br>popular_songs = client.get_popular(limit=2) # Pass a limit optional<br><br>Instance :<br><br>Example of available Instance of a Popular object:<br><br>    client = mixcloud.Client()<br><br>    popular_songs = client.get_popular(limit=2)<br><br>    popular_songs.data[0].name<br><br>    popular_songs.data[0].url<br><br>    popular_songs.data[0].tags[0].name<br><br>    popular_songs.data[0].tags[0].url<br><br><br>Check Mixcloud documentation for all available Popular fields<br><br><br>**Hot**<br><br>popular_songs = client.get_hot(limit=2) # Pass a limit optional<br><br>Instance :<br><br>Example of available Instance of a Popular object:<br><br>    client = mixcloud.Client()<br><br>    hot_songs = client.get_hot(limit=2)<br><br>    hot_songs.data[0].name<br><br>    hot_songs.data[0].url<br><br>    hot_songs.data[0].tags[0].name<br><br>    hot_songs.data[0].tags[0].url<br><br><br>Check Mixcloud documentation for all available Hot fields<br><br>**New**<br><br>popular_songs = client.get_new(limit=2) # Pass a limit optional<br><br>Instance :<br><br>Example of available Instance of a Popular object:<br><br>    client = mixcloud.Client()<br><br>    new_songs = client.get_new(limit=2)<br><br>    new_songs.data[0].name<br><br>    new_songs.data[0].url<br><br>    new_songs.data[0].tags[0].name<br><br>    new_songs.data[0].tags[0].url<br><br>Get next page:<br><br>    new_songs.next_paging()<br><br>Get pervious page:<br><br>    new_songs.previous_paging()<br><br><br>Check Mixcloud documentation for all available New fields<br><br><br>**Search**<br><br>popular_songs = client.search('kasa007', 'user') # Pass type and query<br><br>Instance :<br><br>Example of available Instance of a Popular object:<br><br>    client = mixcloud.Client()<br><br>    search_user = client.search('kasa007', 'user')<br><br>    search_user.data[0].name<br><br>    search_user.data[0].url<br><br><br>Check Mixcloud documentation for all available Search fields<br><br>Create Object from resource<br>------------<br><br>Let's say you want to make a python object of the city London, and the url is https://api.mixcloud.com/discover/city:london/<br><br>Example of creating an object out of this url:<br><br>    client = mixcloud.Client()<br><br>    discover_london = client.get_url('https://api.mixcloud.com/discover/city:london/')<br><br>    discover_london.url<br><br>    discover_london.name<br><br>    discover_london.key<br><br>Requirements<br>^^^^^^^^^^^^<br>#. Python 2.7+ or  Python 3 +<br>#. `Requests 2.7.0+ &lt;http://docs.python-requests.org/en/master//&gt;`_<br>#. `Six 1.4.1+ &lt;https://pythonhosted.org/six/&gt;`_<br><br><br>Running the test<br>-----------------<br>Run test:<br>    python mixcloud/tests.py<br><br><br>Authors<br>-------<br><br>`mixcloud-python` was written by `Said Ali &lt;said.ali@msn.com&gt;`_.\n          </div>"}, "last_serial": 2053657, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a0faf1aa4ef89372a447ff84b5e08160", "sha256": "60e0d6e1c92d9fd7ced41b992216ca4a08261025744921a5ca423f72bf183d98"}, "downloads": -1, "filename": "mixcloud-python-0.1.tar.gz", "has_sig": false, "md5_digest": "a0faf1aa4ef89372a447ff84b5e08160", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4608, "upload_time": "2016-04-08T14:00:14", "upload_time_iso_8601": "2016-04-08T14:00:14.806374Z", "url": "https://files.pythonhosted.org/packages/7e/e9/7a1b5f4f7182faf80abe49f171ebacbaf4d78cc177eb2c654bb6c2e9b29b/mixcloud-python-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "13160631abc145ee2771100b1e49fd1c", "sha256": "976ef7201f745541c6482e20e4d01c2b4debabfae2f94b0c2c0ba022c564566e"}, "downloads": -1, "filename": "mixcloud-python-0.2.tar.gz", "has_sig": false, "md5_digest": "13160631abc145ee2771100b1e49fd1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4483, "upload_time": "2016-04-08T15:00:18", "upload_time_iso_8601": "2016-04-08T15:00:18.540992Z", "url": "https://files.pythonhosted.org/packages/b9/9a/f159bb031fb2623e0e6fa0316c3389b90e1ccc35a39812323321972db5a4/mixcloud-python-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13160631abc145ee2771100b1e49fd1c", "sha256": "976ef7201f745541c6482e20e4d01c2b4debabfae2f94b0c2c0ba022c564566e"}, "downloads": -1, "filename": "mixcloud-python-0.2.tar.gz", "has_sig": false, "md5_digest": "13160631abc145ee2771100b1e49fd1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4483, "upload_time": "2016-04-08T15:00:18", "upload_time_iso_8601": "2016-04-08T15:00:18.540992Z", "url": "https://files.pythonhosted.org/packages/b9/9a/f159bb031fb2623e0e6fa0316c3389b90e1ccc35a39812323321972db5a4/mixcloud-python-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:56 2020"}