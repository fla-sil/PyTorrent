{"info": {"author": "Darko Poljak", "author_email": "darko.poljak@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "==========\nAnonsurvey\n==========\n\nAnonsurvey is a Django app to create Web-based anonymous surveys.\n\nQuick start\n-----------\n\n1. Add \"anonsurvey\" to your INSTALLED_APPS setting like this::\n\n      INSTALLED_APPS = (\n          ...\n          'anonsurvey',\n      )\n\n   Anonsurvey admin also depends on:\n    'tinymce',\n    'sorl.thumbnail',\n    'mce_filebrowser',\n\n2. Include the anonsurvey URLconf in your project urls.py like this::\n\n      url(r'^survey/', include('anonsurvey.urls')),\n\n3. Run `python manage.py syncdb` to create the anonsurvey models.\n\n4. Start the development server and visit http://127.0.0.1:8000/admin/\n   to create a survey (you'll need the Admin app enabled).\n\n5. Visit http://127.0.0.1:8000/survey/ to list surveys.\n\n\nCreating survey\n---------------\nFirst you enter survey main data:\n\n    * title\n    * name (which is a slug initialy created from title)\n    * introduction text\n    * active state (False by default).\n\nThen you can enter question. For each question you can enter the\nquestion group the question belongs to. Question group is optinal.\nQuestion data are:\n\n    * survey the question belongs to\n    * optional question group\n    * type of the question:\n        - input - input type text\n        - choice - input type radio group\n        - multiple choice - input type checkboxes\n        - choice with input - input type radio group with one radio \n          input with type text\n        - multiple choice with input - input type checkboxes with one\n          checkbox with input type text\n    * text of the question\n    * requires answer\n    * sort index - questions are sorted by this number ascending.\n\nQuestion group contains of the survey it belongs to and question group\ntext.\n\nFor each question you define answer or multiple offered answers.\nAnswer data are:\n\n    * type - input or choice - it is relevant only for choice with \n      input and multiple choice with input question types\n    * text prefix - displayed before input field of input type answer\n    * text - displayed for choice type of answer\n    * text sufix - displayed after input field of input type answer\n    * default value - for input type of answer\n    * validation regex - for input type of answer; regex is a valid\n      python regex\n    * sort index - answers are sorted by this number ascending.\n\nDepending on survey definition survey questions and offered answers are\nrendered differently.\n\nFirst, survey title and intro text are displayed.\nThen questions are rendered in ordering depending on sort index value.\nIf question belongs to question group then group's title is displayed.\nThen each quesiton for group is rendered inside that group.\nIf question belongs to none group then its alone is rendered.\nFor each question its text is displayed.\nUnder the question answers are rendered in ordering defined by sort\nindex value.\nIf question type is input then input field is rendered.\nBefore input field text prefix is displayed. After input field text\nsufix is displayed. If default value is defined that value is rendered\ninside input field.\nIf question type is choice then offered answers are displayed as\nradio group. Each radio is one offered answer and its text is displayed.\nIf question type is multiple choice then offered answers are displayed\nas checkbox. Each checkbox is one offered answer and its text is\ndisplayed.\nIf quesiton type is choice with input or multiple choice with input\nthen each answer is displayed as above for choice or multiple choice\ntype of question. Here answer's answer type is relevant. If type is\ninput then its radio or checkbox contains of input field which is\nrendered the same as for input type of question.\n\nWhen submiting completed survey validations are performed:\n\n    * if question requires answer then answer must be suplied\n    * if answer type is input and validation regex is supplied\n      then answer value must match defined regex (note that\n      regex is prefixed and sufixe with ^ and $ so that whole string\n      match is checked).\n\nSubmitted answers data are:\n\n    * client_id - in the format <current_timestamp>@<remote_ip>\n      (by this value you can group answers to one client that\n      completed the survey)\n    * datetime - current timestamp answer is saved\n    * answer - foreign key to offered answer that is input/selected\n    * text - input value for input type of offered answer.\n\nWithin package there are simplest templates you can use to make your\nown.\nFor survey display \n{% include \"anonsurvey/survey_form.thml\" with survey=survey %} is used.\nThis template provides a way for rendering the survey form depending\non survey definition. You can use it as is or you can use it as a\ntemplate for constructing yours.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/darko-poljak/django-anonsurvey", "keywords": null, "license": "GPLv3", "maintainer": null, "maintainer_email": null, "name": "django-anonsurvey", "package_url": "https://pypi.org/project/django-anonsurvey/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-anonsurvey/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/darko-poljak/django-anonsurvey"}, "release_url": "https://pypi.org/project/django-anonsurvey/0.2.4/", "requires_dist": null, "requires_python": null, "summary": "A Django app to create Web-based anonymous surveys", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Anonsurvey is a Django app to create Web-based anonymous surveys.</p>\n<div id=\"quick-start\">\n<h2>Quick start</h2>\n<ol>\n<li><p>Add \u201canonsurvey\u201d to your INSTALLED_APPS setting like this:</p>\n<pre>INSTALLED_APPS = (\n    ...\n    'anonsurvey',\n)\n</pre>\n<dl>\n<dt>Anonsurvey admin also depends on:</dt>\n<dd><p>\u2018tinymce\u2019,\n\u2018sorl.thumbnail\u2019,\n\u2018mce_filebrowser\u2019,</p>\n</dd>\n</dl>\n</li>\n<li><p>Include the anonsurvey URLconf in your project urls.py like this:</p>\n<pre>url(r'^survey/', include('anonsurvey.urls')),\n</pre>\n</li>\n<li><p>Run <cite>python manage.py syncdb</cite> to create the anonsurvey models.</p>\n</li>\n<li><p>Start the development server and visit <a href=\"http://127.0.0.1:8000/admin/\" rel=\"nofollow\">http://127.0.0.1:8000/admin/</a>\nto create a survey (you\u2019ll need the Admin app enabled).</p>\n</li>\n<li><p>Visit <a href=\"http://127.0.0.1:8000/survey/\" rel=\"nofollow\">http://127.0.0.1:8000/survey/</a> to list surveys.</p>\n</li>\n</ol>\n</div>\n<div id=\"creating-survey\">\n<h2>Creating survey</h2>\n<p>First you enter survey main data:</p>\n<blockquote>\n<ul>\n<li>title</li>\n<li>name (which is a slug initialy created from title)</li>\n<li>introduction text</li>\n<li>active state (False by default).</li>\n</ul>\n</blockquote>\n<p>Then you can enter question. For each question you can enter the\nquestion group the question belongs to. Question group is optinal.\nQuestion data are:</p>\n<blockquote>\n<ul>\n<li>survey the question belongs to</li>\n<li>optional question group</li>\n<li><dl>\n<dt>type of the question:</dt>\n<dd><ul>\n<li>input - input type text</li>\n<li>choice - input type radio group</li>\n<li>multiple choice - input type checkboxes</li>\n<li>choice with input - input type radio group with one radio\ninput with type text</li>\n<li>multiple choice with input - input type checkboxes with one\ncheckbox with input type text</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>text of the question</li>\n<li>requires answer</li>\n<li>sort index - questions are sorted by this number ascending.</li>\n</ul>\n</blockquote>\n<p>Question group contains of the survey it belongs to and question group\ntext.</p>\n<p>For each question you define answer or multiple offered answers.\nAnswer data are:</p>\n<blockquote>\n<ul>\n<li>type - input or choice - it is relevant only for choice with\ninput and multiple choice with input question types</li>\n<li>text prefix - displayed before input field of input type answer</li>\n<li>text - displayed for choice type of answer</li>\n<li>text sufix - displayed after input field of input type answer</li>\n<li>default value - for input type of answer</li>\n<li>validation regex - for input type of answer; regex is a valid\npython regex</li>\n<li>sort index - answers are sorted by this number ascending.</li>\n</ul>\n</blockquote>\n<p>Depending on survey definition survey questions and offered answers are\nrendered differently.</p>\n<p>First, survey title and intro text are displayed.\nThen questions are rendered in ordering depending on sort index value.\nIf question belongs to question group then group\u2019s title is displayed.\nThen each quesiton for group is rendered inside that group.\nIf question belongs to none group then its alone is rendered.\nFor each question its text is displayed.\nUnder the question answers are rendered in ordering defined by sort\nindex value.\nIf question type is input then input field is rendered.\nBefore input field text prefix is displayed. After input field text\nsufix is displayed. If default value is defined that value is rendered\ninside input field.\nIf question type is choice then offered answers are displayed as\nradio group. Each radio is one offered answer and its text is displayed.\nIf question type is multiple choice then offered answers are displayed\nas checkbox. Each checkbox is one offered answer and its text is\ndisplayed.\nIf quesiton type is choice with input or multiple choice with input\nthen each answer is displayed as above for choice or multiple choice\ntype of question. Here answer\u2019s answer type is relevant. If type is\ninput then its radio or checkbox contains of input field which is\nrendered the same as for input type of question.</p>\n<p>When submiting completed survey validations are performed:</p>\n<blockquote>\n<ul>\n<li>if question requires answer then answer must be suplied</li>\n<li>if answer type is input and validation regex is supplied\nthen answer value must match defined regex (note that\nregex is prefixed and sufixe with ^ and $ so that whole string\nmatch is checked).</li>\n</ul>\n</blockquote>\n<p>Submitted answers data are:</p>\n<blockquote>\n<ul>\n<li>client_id - in the format &lt;current_timestamp&gt;@&lt;remote_ip&gt;\n(by this value you can group answers to one client that\ncompleted the survey)</li>\n<li>datetime - current timestamp answer is saved</li>\n<li>answer - foreign key to offered answer that is input/selected</li>\n<li>text - input value for input type of offered answer.</li>\n</ul>\n</blockquote>\n<p>Within package there are simplest templates you can use to make your\nown.\nFor survey display\n{% include \u201canonsurvey/survey_form.thml\u201d with survey=survey %} is used.\nThis template provides a way for rendering the survey form depending\non survey definition. You can use it as is or you can use it as a\ntemplate for constructing yours.</p>\n</div>\n\n          </div>"}, "last_serial": 1129537, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "3256f83829faa3b9a30996f1410db6e4", "sha256": "db143cc1e95acce79ef51fcccd8ebda6c8c7f6b4389ae2ca4f8dac0a55416f9a"}, "downloads": -1, "filename": "django-anonsurvey-0.1.tar.gz", "has_sig": false, "md5_digest": "3256f83829faa3b9a30996f1410db6e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21468, "upload_time": "2014-03-01T23:34:16", "upload_time_iso_8601": "2014-03-01T23:34:16.612825Z", "url": "https://files.pythonhosted.org/packages/4f/fb/de1bfb6cad5d19c2f557486fea99161dabbc8369526801a641feaae61f98/django-anonsurvey-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "63698b36512e1551e7c447ca4ddf6283", "sha256": "fb3f68093f45be2d72f9958dac3e8980bfc08178580f67956f710b97faaa8a98"}, "downloads": -1, "filename": "django-anonsurvey-0.2.tar.gz", "has_sig": false, "md5_digest": "63698b36512e1551e7c447ca4ddf6283", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21504, "upload_time": "2014-03-09T16:55:04", "upload_time_iso_8601": "2014-03-09T16:55:04.182107Z", "url": "https://files.pythonhosted.org/packages/13/51/badc62e2b3ebf965c680286e54e565b638a0a91052c7fbc63cff752fbfa9/django-anonsurvey-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "4b8566fe7c5ae78adedd690bad42a35d", "sha256": "7ed978dd8211fb66fa6d6550cd9bab2b91ded11305c208c8af1d207c8760b323"}, "downloads": -1, "filename": "django-anonsurvey-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4b8566fe7c5ae78adedd690bad42a35d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21542, "upload_time": "2014-03-09T20:15:12", "upload_time_iso_8601": "2014-03-09T20:15:12.980356Z", "url": "https://files.pythonhosted.org/packages/54/0d/889ebe296c82612046623e521b60b44ee54b5e116d6b8e8f8a8ee81e34d4/django-anonsurvey-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "ed6f08392a1d3e5bf095a0a43d86224b", "sha256": "20d5f6ef8ccabf94c476410c73bb2a2032652168b176432c3de3c5dd3b728247"}, "downloads": -1, "filename": "django-anonsurvey-0.2.2.tar.gz", "has_sig": false, "md5_digest": "ed6f08392a1d3e5bf095a0a43d86224b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23411, "upload_time": "2014-03-10T07:12:02", "upload_time_iso_8601": "2014-03-10T07:12:02.640894Z", "url": "https://files.pythonhosted.org/packages/50/9b/a5ba2ac2fb1f22cb2850f681f95780f8d21db956b2238ddc03841a902162/django-anonsurvey-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "30c8b0386f612ed24f40a35d3d5a8644", "sha256": "45ddb9ddf94f371fad70dbae45c3369c8d22e769203ca19a220a9826166b5a64"}, "downloads": -1, "filename": "django-anonsurvey-0.2.3.tar.gz", "has_sig": false, "md5_digest": "30c8b0386f612ed24f40a35d3d5a8644", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21554, "upload_time": "2014-06-18T20:00:35", "upload_time_iso_8601": "2014-06-18T20:00:35.683507Z", "url": "https://files.pythonhosted.org/packages/84/c8/853ad2315d1202ffb02e257847343de4f01e39533d42ffc495ba1bf1d137/django-anonsurvey-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "611fa3f32eef36567155c8d845cf0bcd", "sha256": "cc50e0f680203cb7204effb7ed8bb41dadbe874f48a738fe934b1afbb48bf6f6"}, "downloads": -1, "filename": "django-anonsurvey-0.2.4.tar.gz", "has_sig": false, "md5_digest": "611fa3f32eef36567155c8d845cf0bcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21552, "upload_time": "2014-06-18T20:06:42", "upload_time_iso_8601": "2014-06-18T20:06:42.748136Z", "url": "https://files.pythonhosted.org/packages/1c/3c/5001934169ba9c5523f5cb427ddb83c0e5f4c76f044d30a5affba763214a/django-anonsurvey-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "611fa3f32eef36567155c8d845cf0bcd", "sha256": "cc50e0f680203cb7204effb7ed8bb41dadbe874f48a738fe934b1afbb48bf6f6"}, "downloads": -1, "filename": "django-anonsurvey-0.2.4.tar.gz", "has_sig": false, "md5_digest": "611fa3f32eef36567155c8d845cf0bcd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21552, "upload_time": "2014-06-18T20:06:42", "upload_time_iso_8601": "2014-06-18T20:06:42.748136Z", "url": "https://files.pythonhosted.org/packages/1c/3c/5001934169ba9c5523f5cb427ddb83c0e5f4c76f044d30a5affba763214a/django-anonsurvey-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:41 2020"}