{"info": {"author": "Yash Maheshwari, Glynn Morrison", "author_email": "yash.maheshwari@gmail.com, glynn@zenefits.com, django.query.profiler@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.0", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Framework :: Django :: 3.0", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Utilities"], "description": "======================\nDjango Query Profiler\n======================\n\n.. image:: https://img.shields.io/pypi/l/django.svg\n   :target: https://raw.githubusercontent.com/django-query-profiler/django-query-profiler/master/LICENSE\n\n.. image:: https://travis-ci.com/django-query-profiler/django-query-profiler.svg?branch=master\n    :target: https://travis-ci.com/django-query-profiler/django-query-profiler\n\n.. image:: https://codecov.io/gh/django-query-profiler/django-query-profiler/branch/master/graph/badge.svg?token=1Cv7WsOi2W\n  :target: https://codecov.io/gh/django-query-profiler/django-query-profiler\n\n.. image:: https://readthedocs.org/projects/django-query-profiler/badge/?version=latest\n  :target: https://django-query-profiler.readthedocs.io/en/latest/index.html\n\n.. image:: https://img.shields.io/pypi/pyversions/django-query-profiler.svg\n  :target: https://pypi.org/project/django-query-profiler/\n\n.. image:: https://img.shields.io/pypi/djversions/django-query-profiler\n  :target: https://pypi.org/project/django-query-profiler/\n\n.. image:: https://badge.fury.io/py/django-query-profiler.svg\n    :target: https://pypi.org/project/django-query-profiler/\n\n\n\nThis is a query profiler for Django applications, for helping developers answer the question \"My Django code/page/API is slow, How do I find out why?\"\n\nBelow are some of the features of the profiler:\n\n1. Shows code paths making N+1 sql calls:  Shows the sql with stack_trace which is making N+1 calls, along with sql count\n2. Shows the proposed solution: If the solution to reduce sql is to simply apply a select_related or a prefetch_related, this is highlighted as a suggestion\n3. Shows exact sql duplicates: Count of the queries where (sql, parameters) is exactly the same.  This is the kind of sql where implementing a query cache would help\n4. Flame Graph visualisation: Collects all the stack traces together to allow quickly identifying which area(s) of code is causing the load to the database\n5. Command line or chrome plugin: The profiler can be called from command line via context manager, or can be invoked via a middleware, and output shown in a chrome plugin\n6. Super easy to configure in any application:  The only changes are in settings.py file and in urls.py file\n\nThis is the `repo <https://github.com/django-query-profiler/django-query-profiler-chrome-plugin>`_ for the chrome plugin\n\nRequirements\n============\n\nThis works with any version of django >= 2.0, and running on python >= 3.6\n\n\nProfiler in Action\n==================\n\nas a chrome plugin\n------------------\n\nThis image shows how the chrome plugin would display profiled data, once it is configured & installed\n\n.. image:: https://raw.githubusercontent.com/django-query-profiler/django-query-profiler/master/docs/_static/django_query_profiler_in_action.gif\n\non command line\n---------------\n\nSee this `file\n<https://github.com/django-query-profiler/django-tip-02/blob/18785d9e44b5f542ce26f555a4bcf18124f788d0/DJANGO_QUERY_PROFILER.md>`_ in the PR to see how to use the context manager, and how easy it is to find performance issues :-)\n\nThe output of Django query profiler is same for the command line or the chrome plugin.   In fact, chrome plugin displays the output set by the middleware - which is just a plain wrapper around context manager.\n\nGetting Started\n===============\n\ninstallation\n------------\n\nThe simplest way to getting started is to install the django query profiler from pip, and get the chrome plugin from\nchrome web store.\n\nPython package::\n\n  pip install django-query-profiler\n\n\n\nChrome Plugin:\n\nDownload from `chrome webstore <https://chrome.google.com/webstore/detail/django-query-profiler/ejdgfhecpkhdnpdmdheacfmknaegicff>`__\n\n\nThis is covered in detail in the `installation <https://django-query-profiler.readthedocs.io/en/latest/installation.html>`__ section in the docs\n\nconfiguration:\n--------------\n\nThis configuration is when we want to use the profiler along with the chrome plugin.  If we want to just use it on the\ncommand line, the configuration is much more simpler (two lines of change to settings.py file) - that is covered in the `docs <https://django-query-profiler.readthedocs.io/en/latest/configuration_instructions.html#as-context-manager>`__\n\n**settings.py**::\n\n  from django_query_profiler.settings import *\n\n  INSTALLED_APPS = (\n      ...\n      'django_query_profiler',\n      ...\n  )\n\n  MIDDLEWARE = (\n      ...\n       # Request and all middleware that come after our middleware, would be profiled\n      'django_query_profiler.client.middleware.QueryProfilerMiddleware',\n      ...\n  )\n\n  DATABASES = (\n      ...\n      # Adding django_query_profiler as a prefix to your ENGINE setting\n      # Assuming old ENGINE was \"django.db.backends.sqlite3\", this would be the new one\n      \"ENGINE\": \"django_query_profiler.django.db.backends.sqlite3\",\n  )\n\n**urls.py**::\n\n  # Add this line to existing urls.py\n  path('django_query_profiler/', include('django_query_profiler.client.urls'))\n\n\nSee this `PR\n<https://github.com/django-query-profiler/django-query-profiler-sample-app/pull/1>`__ on how to configure this in your application,\nand how the plugin is going to look like after your configuration\n\n.. image:: https://raw.githubusercontent.com/django-query-profiler/django-query-profiler/master/docs/_static/chrome_plugin.png\n\n\nThis is covered in detail in the `configuration instructions <https://django-query-profiler.readthedocs.io/en/latest/configuration_instructions.html>`__ section in the docs\n\nHow the profiler works\n======================\n\nThis is also covered in detail in the documentation at `how the profiler works <https://django-query-profiler.readthedocs.io/en/latest/how_it_works.html>`__ section in the docs,\nalong with how the code is organized.\n\nThe docs also contain references to various links which helped us to lear about internals of Django, and to various projects which helped us to learn on how to add hooks when Django executes a query\n\n\nChoosing Profiler levels\n========================\n\nWe have two levels of profiler, and each of them have a different overhead.  The two levels are:\n\n1. QUERY_SIGNATURE:   This is the mode where we capture the query as well as the stack-trace.  This mode figures out the N+1 code paths and also tells us the proposed solution\n2. QUERY: This is the mode where we just capture queries, and not the stack-trace\n\n\n\nCustomizing the profiler\n========================\n\nWe have tried to make the profiler customizable by providing hooks at various points.   Some of the use cases are covered\nhere in the `customizing the defaults <https://django-query-profiler.readthedocs.io/en/latest/customizing_defaults.html>`__ section in docs.\n\nWe plan to add more hooks for customizing the profiler as we gather more feedback from real world use cases.\n\n\nFor contributors\n================\n\n.. image:: https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n   :target: http://makeapullrequest.com\n\nThe django query profiler is released under the BSD license, like Django itself.\n\nIf you like it, please consider contributing!  The docs cover everything from how to setup locally, to how the code is organized to running tests.\n\n\nDocumentation\n=============\n\nFull documentation is available at `readthedocs <https://django-query-profiler.readthedocs.io/en/latest/index.html>`__\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/django-query-profiler/django-query-profiler", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "django-query-profiler", "package_url": "https://pypi.org/project/django-query-profiler/", "platform": "", "project_url": "https://pypi.org/project/django-query-profiler/", "project_urls": {"Homepage": "https://github.com/django-query-profiler/django-query-profiler"}, "release_url": "https://pypi.org/project/django-query-profiler/0.4/", "requires_dist": ["setuptools", "django", "moz-sql-parser", "redis", "mmh3", "isort", "dataclasses ; python_version < \"3.7\""], "requires_python": ">=3.6", "summary": "Django query profiler", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://raw.githubusercontent.com/django-query-profiler/django-query-profiler/master/LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/django.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4b5ad22984cd67515c45b6a49a9bee43d1dd1a3f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a616e676f2e737667\"></a>\n<a href=\"https://travis-ci.com/django-query-profiler/django-query-profiler\" rel=\"nofollow\"><img alt=\"https://travis-ci.com/django-query-profiler/django-query-profiler.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5bb53fadbcc494a290bba26567c032c53febe45/68747470733a2f2f7472617669732d63692e636f6d2f646a616e676f2d71756572792d70726f66696c65722f646a616e676f2d71756572792d70726f66696c65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/django-query-profiler/django-query-profiler\" rel=\"nofollow\"><img alt=\"https://codecov.io/gh/django-query-profiler/django-query-profiler/branch/master/graph/badge.svg?token=1Cv7WsOi2W\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ccbb1b457224e5c1a4ce3027a8bab4b2e836485/68747470733a2f2f636f6465636f762e696f2f67682f646a616e676f2d71756572792d70726f66696c65722f646a616e676f2d71756572792d70726f66696c65722f6272616e63682f6d61737465722f67726170682f62616467652e7376673f746f6b656e3d3143763757734f693257\"></a>\n<a href=\"https://django-query-profiler.readthedocs.io/en/latest/index.html\" rel=\"nofollow\"><img alt=\"https://readthedocs.org/projects/django-query-profiler/badge/?version=latest\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c0050d9e16853718af5934eb16f3b671ea5fe287/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f646a616e676f2d71756572792d70726f66696c65722f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pypi.org/project/django-query-profiler/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/django-query-profiler.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c8c5d887d2120f888f92b8350ac667477ae93674/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f646a616e676f2d71756572792d70726f66696c65722e737667\"></a>\n<a href=\"https://pypi.org/project/django-query-profiler/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/djversions/django-query-profiler\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e7da8a759c094fb93b3d80b7b86b56e77e522cea/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646a76657273696f6e732f646a616e676f2d71756572792d70726f66696c6572\"></a>\n<a href=\"https://pypi.org/project/django-query-profiler/\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/django-query-profiler.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/077269979df11ba0f4999a541b14c565c965b16e/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d71756572792d70726f66696c65722e737667\"></a>\n<p>This is a query profiler for Django applications, for helping developers answer the question \u201cMy Django code/page/API is slow, How do I find out why?\u201d</p>\n<p>Below are some of the features of the profiler:</p>\n<ol>\n<li>Shows code paths making N+1 sql calls:  Shows the sql with stack_trace which is making N+1 calls, along with sql count</li>\n<li>Shows the proposed solution: If the solution to reduce sql is to simply apply a select_related or a prefetch_related, this is highlighted as a suggestion</li>\n<li>Shows exact sql duplicates: Count of the queries where (sql, parameters) is exactly the same.  This is the kind of sql where implementing a query cache would help</li>\n<li>Flame Graph visualisation: Collects all the stack traces together to allow quickly identifying which area(s) of code is causing the load to the database</li>\n<li>Command line or chrome plugin: The profiler can be called from command line via context manager, or can be invoked via a middleware, and output shown in a chrome plugin</li>\n<li>Super easy to configure in any application:  The only changes are in settings.py file and in urls.py file</li>\n</ol>\n<p>This is the <a href=\"https://github.com/django-query-profiler/django-query-profiler-chrome-plugin\" rel=\"nofollow\">repo</a> for the chrome plugin</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>This works with any version of django &gt;= 2.0, and running on python &gt;= 3.6</p>\n</div>\n<div id=\"profiler-in-action\">\n<h2>Profiler in Action</h2>\n<div id=\"as-a-chrome-plugin\">\n<h3>as a chrome plugin</h3>\n<p>This image shows how the chrome plugin would display profiled data, once it is configured &amp; installed</p>\n<img alt=\"https://raw.githubusercontent.com/django-query-profiler/django-query-profiler/master/docs/_static/django_query_profiler_in_action.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71acb2e957d617dad6fb366569e15d0680268697/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f646a616e676f2d71756572792d70726f66696c65722f646a616e676f2d71756572792d70726f66696c65722f6d61737465722f646f63732f5f7374617469632f646a616e676f5f71756572795f70726f66696c65725f696e5f616374696f6e2e676966\">\n</div>\n<div id=\"on-command-line\">\n<h3>on command line</h3>\n<p>See this <a href=\"https://github.com/django-query-profiler/django-tip-02/blob/18785d9e44b5f542ce26f555a4bcf18124f788d0/DJANGO_QUERY_PROFILER.md\" rel=\"nofollow\">file</a> in the PR to see how to use the context manager, and how easy it is to find performance issues :-)</p>\n<p>The output of Django query profiler is same for the command line or the chrome plugin.   In fact, chrome plugin displays the output set by the middleware - which is just a plain wrapper around context manager.</p>\n</div>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<div id=\"installation\">\n<h3>installation</h3>\n<p>The simplest way to getting started is to install the django query profiler from pip, and get the chrome plugin from\nchrome web store.</p>\n<p>Python package:</p>\n<pre>pip install django-query-profiler\n</pre>\n<p>Chrome Plugin:</p>\n<p>Download from <a href=\"https://chrome.google.com/webstore/detail/django-query-profiler/ejdgfhecpkhdnpdmdheacfmknaegicff\" rel=\"nofollow\">chrome webstore</a></p>\n<p>This is covered in detail in the <a href=\"https://django-query-profiler.readthedocs.io/en/latest/installation.html\" rel=\"nofollow\">installation</a> section in the docs</p>\n</div>\n<div id=\"configuration\">\n<h3>configuration:</h3>\n<p>This configuration is when we want to use the profiler along with the chrome plugin.  If we want to just use it on the\ncommand line, the configuration is much more simpler (two lines of change to settings.py file) - that is covered in the <a href=\"https://django-query-profiler.readthedocs.io/en/latest/configuration_instructions.html#as-context-manager\" rel=\"nofollow\">docs</a></p>\n<p><strong>settings.py</strong>:</p>\n<pre>from django_query_profiler.settings import *\n\nINSTALLED_APPS = (\n    ...\n    'django_query_profiler',\n    ...\n)\n\nMIDDLEWARE = (\n    ...\n     # Request and all middleware that come after our middleware, would be profiled\n    'django_query_profiler.client.middleware.QueryProfilerMiddleware',\n    ...\n)\n\nDATABASES = (\n    ...\n    # Adding django_query_profiler as a prefix to your ENGINE setting\n    # Assuming old ENGINE was \"django.db.backends.sqlite3\", this would be the new one\n    \"ENGINE\": \"django_query_profiler.django.db.backends.sqlite3\",\n)\n</pre>\n<p><strong>urls.py</strong>:</p>\n<pre># Add this line to existing urls.py\npath('django_query_profiler/', include('django_query_profiler.client.urls'))\n</pre>\n<p>See this <a href=\"https://github.com/django-query-profiler/django-query-profiler-sample-app/pull/1\" rel=\"nofollow\">PR</a> on how to configure this in your application,\nand how the plugin is going to look like after your configuration</p>\n<img alt=\"https://raw.githubusercontent.com/django-query-profiler/django-query-profiler/master/docs/_static/chrome_plugin.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/07a8b36ef809eae77991c0a9a03380b6057d2072/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f646a616e676f2d71756572792d70726f66696c65722f646a616e676f2d71756572792d70726f66696c65722f6d61737465722f646f63732f5f7374617469632f6368726f6d655f706c7567696e2e706e67\">\n<p>This is covered in detail in the <a href=\"https://django-query-profiler.readthedocs.io/en/latest/configuration_instructions.html\" rel=\"nofollow\">configuration instructions</a> section in the docs</p>\n</div>\n</div>\n<div id=\"how-the-profiler-works\">\n<h2>How the profiler works</h2>\n<p>This is also covered in detail in the documentation at <a href=\"https://django-query-profiler.readthedocs.io/en/latest/how_it_works.html\" rel=\"nofollow\">how the profiler works</a> section in the docs,\nalong with how the code is organized.</p>\n<p>The docs also contain references to various links which helped us to lear about internals of Django, and to various projects which helped us to learn on how to add hooks when Django executes a query</p>\n</div>\n<div id=\"choosing-profiler-levels\">\n<h2>Choosing Profiler levels</h2>\n<p>We have two levels of profiler, and each of them have a different overhead.  The two levels are:</p>\n<ol>\n<li>QUERY_SIGNATURE:   This is the mode where we capture the query as well as the stack-trace.  This mode figures out the N+1 code paths and also tells us the proposed solution</li>\n<li>QUERY: This is the mode where we just capture queries, and not the stack-trace</li>\n</ol>\n</div>\n<div id=\"customizing-the-profiler\">\n<h2>Customizing the profiler</h2>\n<p>We have tried to make the profiler customizable by providing hooks at various points.   Some of the use cases are covered\nhere in the <a href=\"https://django-query-profiler.readthedocs.io/en/latest/customizing_defaults.html\" rel=\"nofollow\">customizing the defaults</a> section in docs.</p>\n<p>We plan to add more hooks for customizing the profiler as we gather more feedback from real world use cases.</p>\n</div>\n<div id=\"for-contributors\">\n<h2>For contributors</h2>\n<a href=\"http://makeapullrequest.com\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8897c5f5e8a5eacb8ddf983bb640b73cc10464c/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5052732d77656c636f6d652d627269676874677265656e2e7376673f7374796c653d666c61742d737175617265\"></a>\n<p>The django query profiler is released under the BSD license, like Django itself.</p>\n<p>If you like it, please consider contributing!  The docs cover everything from how to setup locally, to how the code is organized to running tests.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Full documentation is available at <a href=\"https://django-query-profiler.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">readthedocs</a></p>\n</div>\n\n          </div>"}, "last_serial": 6774033, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "fb5f6e319290da0f352f3aa93708fb19", "sha256": "44c7c58f3942e225550bd58b06e18a9ea6fc6c0d49bf188eec2a8acc0cca1a78"}, "downloads": -1, "filename": "django_query_profiler-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "fb5f6e319290da0f352f3aa93708fb19", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 77911, "upload_time": "2020-02-24T00:46:09", "upload_time_iso_8601": "2020-02-24T00:46:09.510223Z", "url": "https://files.pythonhosted.org/packages/e7/81/6add9bbfe1dfc9f3d0f575c00e941e0105e2189595cedd109ad93b6df625/django_query_profiler-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50985aa3ab2529ca4529c8fd13f05b03", "sha256": "942d2aa1500bc11a6413fc21d493ae4bec37344003aed12305ad8720f62329e4"}, "downloads": -1, "filename": "django-query-profiler-0.2.tar.gz", "has_sig": false, "md5_digest": "50985aa3ab2529ca4529c8fd13f05b03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 49884, "upload_time": "2020-02-24T00:46:11", "upload_time_iso_8601": "2020-02-24T00:46:11.867504Z", "url": "https://files.pythonhosted.org/packages/24/b0/2a0131ef3a1dcf32f0146777b59943f1e3a84f8ff6e246be6e9947b4b175/django-query-profiler-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "b7c053d7363109f4499bf545fbe29cdf", "sha256": "0ca433b16ebcf48b53063a4767e509e5e65d4e361eeccee409da0157eabac62b"}, "downloads": -1, "filename": "django_query_profiler-0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b7c053d7363109f4499bf545fbe29cdf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 79662, "upload_time": "2020-03-08T22:55:08", "upload_time_iso_8601": "2020-03-08T22:55:08.386853Z", "url": "https://files.pythonhosted.org/packages/18/87/a5cc0d73cd4c6fd9b35db2bde204064d73af0953c93951861b2e5f9a6a99/django_query_profiler-0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ec5260f5683322e9f276aca62dc674e", "sha256": "a5a39da21612ce9ace5a99b791efaa8a26ccd62138181b958e93822ea4f11e0b"}, "downloads": -1, "filename": "django-query-profiler-0.3.tar.gz", "has_sig": false, "md5_digest": "3ec5260f5683322e9f276aca62dc674e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53339, "upload_time": "2020-03-08T22:55:10", "upload_time_iso_8601": "2020-03-08T22:55:10.324854Z", "url": "https://files.pythonhosted.org/packages/3b/5a/71d8a568224bb0f5a078d37e94f05b804880f3e7e99dbb2c6aec16f95882/django-query-profiler-0.3.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "6d1e11f7b20b3aebdf25b163ed7d49ec", "sha256": "c47304cbb89350ed217ece93d6091e4aacef5c724dd5f6eb67d18252cc93a6c7"}, "downloads": -1, "filename": "django_query_profiler-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d1e11f7b20b3aebdf25b163ed7d49ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 79730, "upload_time": "2020-03-08T23:40:28", "upload_time_iso_8601": "2020-03-08T23:40:28.324041Z", "url": "https://files.pythonhosted.org/packages/85/df/1e0748ee68e0aee7866f9dd150ff45dab0855647c1b32bb51168e3121334/django_query_profiler-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b25e90a7948e599efba46611f2464936", "sha256": "e1736f3815a28157df986b66029d722164e4c7a949cba57e3078d8c9fa081177"}, "downloads": -1, "filename": "django-query-profiler-0.4.tar.gz", "has_sig": false, "md5_digest": "b25e90a7948e599efba46611f2464936", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53436, "upload_time": "2020-03-08T23:40:30", "upload_time_iso_8601": "2020-03-08T23:40:30.139591Z", "url": "https://files.pythonhosted.org/packages/55/9a/d709b78cedc92e0f593bbcc95a374505446312342ea227b3e1b8ce333103/django-query-profiler-0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "6d1e11f7b20b3aebdf25b163ed7d49ec", "sha256": "c47304cbb89350ed217ece93d6091e4aacef5c724dd5f6eb67d18252cc93a6c7"}, "downloads": -1, "filename": "django_query_profiler-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6d1e11f7b20b3aebdf25b163ed7d49ec", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 79730, "upload_time": "2020-03-08T23:40:28", "upload_time_iso_8601": "2020-03-08T23:40:28.324041Z", "url": "https://files.pythonhosted.org/packages/85/df/1e0748ee68e0aee7866f9dd150ff45dab0855647c1b32bb51168e3121334/django_query_profiler-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b25e90a7948e599efba46611f2464936", "sha256": "e1736f3815a28157df986b66029d722164e4c7a949cba57e3078d8c9fa081177"}, "downloads": -1, "filename": "django-query-profiler-0.4.tar.gz", "has_sig": false, "md5_digest": "b25e90a7948e599efba46611f2464936", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 53436, "upload_time": "2020-03-08T23:40:30", "upload_time_iso_8601": "2020-03-08T23:40:30.139591Z", "url": "https://files.pythonhosted.org/packages/55/9a/d709b78cedc92e0f593bbcc95a374505446312342ea227b3e1b8ce333103/django-query-profiler-0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:29 2020"}