{"info": {"author": "Philip Buhr", "author_email": "philip.buhr@buhrwerk.de", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# RandomCSV\n\nThis library let's you generate CSV files with a specific structure, but \nrandom data. These CSVs can be used as test data when developing data pipelines.\n\n## Usage\n```python\nfrom randomcsv import *\n\n\ngenerator = CsvGenerator()\n\n# adds a column filled with integers, starting at 100, incrementing\ngenerator.add_column(IntColumn(\"Integers\", start=100))  \n\n# adds a column filled with strings, currently first names from the firstNames.txt dictionary\ngenerator.add_column(StringColumn(\"Names\"))\n\n# add a column filled with random float values between 10 and 20 rounded to 2 digits.\ngenerator.add_column(RandomNumberColumn(\"Random\", low=10, high=20, digits=2))\n\n# adds a column, values are randomly picked from the provided list\ngenerator.add_column(CategoryColumn(\"Categories\", [1, 2, 3, 4]))\n\n# adds a column with name \"Calculated\", based on Columns Integers and Class\n# the arguments of the given function must match order and type of the values of the columns\ngenerator.calculate_column(\"Calculated\", [\"Integers\", \"Categories\"],\n                           lambda number, category: f'{number} {category}')\n\n# creates pandas DataFrame with 5 rows\ndata_frame = generator.generate_data_frame(5) \n# creates CSV file in directory \"output\"\ngenerator.create_csv(5, \"test.csv\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/PhilipBuhr/randomCsv/archive/0.1.0.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PhilipBuhr/randomCsv", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "randomcsv", "package_url": "https://pypi.org/project/randomcsv/", "platform": "", "project_url": "https://pypi.org/project/randomcsv/", "project_urls": {"Download": "https://github.com/PhilipBuhr/randomCsv/archive/0.1.0.tar.gz", "Homepage": "https://github.com/PhilipBuhr/randomCsv"}, "release_url": "https://pypi.org/project/randomcsv/0.1.3/", "requires_dist": ["pandas", "requests", "pytest", "numpy"], "requires_python": ">=3.6", "summary": "For generating specific CSVs for testing data piplines", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>RandomCSV</h1>\n<p>This library let's you generate CSV files with a specific structure, but\nrandom data. These CSVs can be used as test data when developing data pipelines.</p>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomcsv</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n\n<span class=\"n\">generator</span> <span class=\"o\">=</span> <span class=\"n\">CsvGenerator</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># adds a column filled with integers, starting at 100, incrementing</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">IntColumn</span><span class=\"p\">(</span><span class=\"s2\">\"Integers\"</span><span class=\"p\">,</span> <span class=\"n\">start</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">))</span>  \n\n<span class=\"c1\"># adds a column filled with strings, currently first names from the firstNames.txt dictionary</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">StringColumn</span><span class=\"p\">(</span><span class=\"s2\">\"Names\"</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># add a column filled with random float values between 10 and 20 rounded to 2 digits.</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">RandomNumberColumn</span><span class=\"p\">(</span><span class=\"s2\">\"Random\"</span><span class=\"p\">,</span> <span class=\"n\">low</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">high</span><span class=\"o\">=</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"n\">digits</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">))</span>\n\n<span class=\"c1\"># adds a column, values are randomly picked from the provided list</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">add_column</span><span class=\"p\">(</span><span class=\"n\">CategoryColumn</span><span class=\"p\">(</span><span class=\"s2\">\"Categories\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">]))</span>\n\n<span class=\"c1\"># adds a column with name \"Calculated\", based on Columns Integers and Class</span>\n<span class=\"c1\"># the arguments of the given function must match order and type of the values of the columns</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">calculate_column</span><span class=\"p\">(</span><span class=\"s2\">\"Calculated\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"Integers\"</span><span class=\"p\">,</span> <span class=\"s2\">\"Categories\"</span><span class=\"p\">],</span>\n                           <span class=\"k\">lambda</span> <span class=\"n\">number</span><span class=\"p\">,</span> <span class=\"n\">category</span><span class=\"p\">:</span> <span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"n\">number</span><span class=\"si\">}</span><span class=\"s1\"> </span><span class=\"si\">{</span><span class=\"n\">category</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># creates pandas DataFrame with 5 rows</span>\n<span class=\"n\">data_frame</span> <span class=\"o\">=</span> <span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">generate_data_frame</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span> \n<span class=\"c1\"># creates CSV file in directory \"output\"</span>\n<span class=\"n\">generator</span><span class=\"o\">.</span><span class=\"n\">create_csv</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s2\">\"test.csv\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 6446345, "releases": {"0.1.3": [{"comment_text": "", "digests": {"md5": "d1065e9d0ddcf42e9112d940074ee649", "sha256": "a9ce63bfcef85a029bb4ac13e7a86c335a4c24db3bfeaf35fbff0b5d5aee7ee0"}, "downloads": -1, "filename": "randomcsv-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d1065e9d0ddcf42e9112d940074ee649", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13703, "upload_time": "2020-01-13T19:28:43", "upload_time_iso_8601": "2020-01-13T19:28:43.902778Z", "url": "https://files.pythonhosted.org/packages/9f/9f/52b7e991ee149ad8ff1dcb11140cbfe4e22912be9d96f143cf63ea28797a/randomcsv-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cceb34d0737305dcf411ed03c7bb62c", "sha256": "32ed02b5c7d97ec3777005d0d7885e1e4be75ebb9404bf1aaa782be0aeb959cf"}, "downloads": -1, "filename": "randomcsv-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4cceb34d0737305dcf411ed03c7bb62c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9845, "upload_time": "2020-01-13T19:28:45", "upload_time_iso_8601": "2020-01-13T19:28:45.729853Z", "url": "https://files.pythonhosted.org/packages/be/db/453f3a4773a8b3894e417e23879e251c5092ee389711a9739c91e35ba8e9/randomcsv-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d1065e9d0ddcf42e9112d940074ee649", "sha256": "a9ce63bfcef85a029bb4ac13e7a86c335a4c24db3bfeaf35fbff0b5d5aee7ee0"}, "downloads": -1, "filename": "randomcsv-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d1065e9d0ddcf42e9112d940074ee649", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13703, "upload_time": "2020-01-13T19:28:43", "upload_time_iso_8601": "2020-01-13T19:28:43.902778Z", "url": "https://files.pythonhosted.org/packages/9f/9f/52b7e991ee149ad8ff1dcb11140cbfe4e22912be9d96f143cf63ea28797a/randomcsv-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4cceb34d0737305dcf411ed03c7bb62c", "sha256": "32ed02b5c7d97ec3777005d0d7885e1e4be75ebb9404bf1aaa782be0aeb959cf"}, "downloads": -1, "filename": "randomcsv-0.1.3.tar.gz", "has_sig": false, "md5_digest": "4cceb34d0737305dcf411ed03c7bb62c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9845, "upload_time": "2020-01-13T19:28:45", "upload_time_iso_8601": "2020-01-13T19:28:45.729853Z", "url": "https://files.pythonhosted.org/packages/be/db/453f3a4773a8b3894e417e23879e251c5092ee389711a9739c91e35ba8e9/randomcsv-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:39 2020"}