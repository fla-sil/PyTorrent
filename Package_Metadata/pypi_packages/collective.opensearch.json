{"info": {"author": "Christian Ledermann", "author_email": "christian.ledermann@gmail.com", "bugtrack_url": null, "classifiers": ["Framework :: Plone", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License (GPL)", "Topic :: Internet :: WWW/HTTP :: Indexing/Search"], "description": "Project Description\n===================\n\nProduce Open Search Feeds\n-------------------------\n\ncollective.opensearch adds the possibility to add OpenSearch compatible search results to your Plone site.\n\n* site wide: this is a simple copy of the plone search so all option\n  that you may pass to the standard /search will be recognized as well.\n* for a collection/topic: You can search inside a topic, i.e. you\n  define a 'base query' as a topic and additional parameters of the query\n  are applied additional.\n\n\nOpenSearch is a collection of simple formats for the sharing of search results.\n\nOpenSearch helps search engines and search clients communicate by\nintroducing a common set of formats to perform search requests and\nsyndicate search results. OpenSearch helps search engines and search\nclients communicate by introducing a common set of formats to perform\nsearch requests and syndicate search results. The OpenSearch description\ndocument format can be used to describe a search engine so that it can\nbe used by search client applications. The OpenSearch response elements\ncan be used to extend existing syndication formats, such as RSS and\nAtom, with the extra metadata needed to return search results\n\ncollective.opensearch enables you to syndicate the search results of\nyour plone site by formatting them in the RSS or Atom formats, augmented\nwith OpenSearch response elements.\n\nImplemented extensions and conventions\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- opensearch\n- relevance\n- opensearch description for autodiscovery\n- suggestions so that browsers can autocomplete\n- response elements and first, previous, next, last links\n\n\nConsume Open Search Feeds\n-------------------------\n\ncollective.opensearch adds a view to the link type that lets you\nsearch OpenSearch (or other searches that return RSS or Atom, pretty\nmuch any other format feed parser supports and KML) compatible search\nproviders within your site. The feeds do not need to implement\nthe opensearch extensions it suffices that they are valid feeds (e.g you\ncan query yahoo, bing, google site search or any plone site). When you\nadd a link with an open search url this view will be automatically set.\nTo search e.g. plone.org from your site add a Link with the url:\n``http://plone.org/search_rss?SearchableText={searchTerms}``\n\nYou can combine several open search links as a metasearch. All\nOpenSearch links inside a folder will be queried and their results\ndisplayed when you change the view of a folder to 'Open Search View'\n\n\n\nUsage:\n------\n\n1) A single remote search\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nIf you add a link content type with a open search description\ncompatible url (i.e. it has a parameter {searchTerms} in the querystring)\nthe view of the link will be set when the link is saved.\n\nThe view consits of a simple searchform and the results of the query\n\n\n\n2) search multiple sources at once\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nTo build a simple metasearch create a folder and add your query links to it.\nChange the view of the folder to 'Open Search View'.\nThe view consist of a search form (currently only for full text search)\nwhich input will be appied to all open search links (i.e. any link that\nhas  'Open Search View' set as its view). The results of the\nsearches will be displayed in tabs beneath the form. The queries are\nexecuted asynchronously via AJAX, so you do not have to wait until the\nlast query has finished.\n\n\n\nAbusing collective.opensearch to display miscelaneous feeds\n-----------------------------------------------------------\n\n3) display an abritary 'static' feed\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAllthough the main focus of this product is to produce and display\nsearch feeds you may use it to display any valid feed. If the url of the\nlink you added does not contain the {searchTerms} parameter and  'Open Search View'\n(you have to select the view manually from the 'display' menu) is\nselected as the view of the link, the feed will be fetched regardless of\nthe presence of a query parameter and its results will be displayed.\nThe search form will not be displayed in the absence of the\n``{searchTerms}`` parameter.\n\n4) display multiple feeds\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAdd your feeds to display to a folder (as in [2]) and select  'Open Search View'\nas the display view of the folder All feeds that do not have a\n``{searchTerms}`` parameter in their url will be fetched immediately,\nregardless if a search input was provided. The search form will only be\ndisplayed if at least one of the links inside the folder has a\n``{searchTerms}`` parameter.\n\n\n\n5) Use collective.opensearch to search inside your collections\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nAs opensearch results are added to all collections you may use it as a\nsearchform to search inside your collections. if you use a relative\nlink (e.g. /mycollection/SearchableText={searchTerms}) you have to\nchoose  'Open Search View' manually to display the search results.\n\nKnown limitations issues and caveats\n------------------------------------\n\n- Currently only the {searchTerms} parameter for full text search is recognized and supported\n- add '<match path=\"regex:^.*/opensearchresults.html*\" abort=\"1\" />' to your deliverance/xdv/diazo rules\n- internal searches as described in [5] will always be executed as 'anonymous'\n\n\n- Code repository: https://github.com/collective/collective.opensearch\n- Report bugs at https://github.com/collective/collective.opensearch/issues\n\n\nChangelog\n=========\n\n1.6 (2017-11-20)\n----------------\n\n- ElementTree fixes\n\n1.5 (2014/01/08)\n----------------\n\n- add JSON Results view\n\n1.4 (2011/06/17)\n----------------\n\n- plone 4.1 compatible\n- give diazo/deliverance a hint not to style the ajax response\n\n1.3 (2011/05/19)\n----------------\n\n- support http://www.eprints.org/ result feeds (not open search compliant but widely used)\n\n1.2 (2011/05/18)\n----------------\n\n- catch all exceptions in AutoDiscovery viewlet\n\n1.1 (2011/05/11)\n----------------\n\n- cache feeds when fetching remote searchresults\n- display opensearch:totalresults when available\n- show different opensearchdescriptions for site and topic\n- add opensearch views to topics, search inside topics\n- add configuration what indexes to use for categorization, abstract atom\n- and rss view entries\n\n1.0 (2011/03/29)\n----------------\n\n- Created recipe with ZopeSkel\n- implement all functionality from PLOS and JaoP\n- add opensearch view for link\n- add opensearch view for folder, all opensearch links inside that folder act as a metasearch\n\nJaoP  0.1 (Sep 23, 2008)\n------------------------\n\n- First Jaop release with the default opensearch properties\n- Added default autodiscovery page ( need some changes ) for Firefox / IE\n- Implemented the rss view\n- Implemented the alpha version of suggestions\n\n\nPLOS 0.2 (Jul 21, 2007)\n-----------------------\n\n- Enable Plone to search OpenSearch compliant search providers\n- added search feed content type\n- additions to the RSS and ATOM responses\n\n\nPLOS 0.1 (May 24, 2007)\n-----------------------\n\n- initial release", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://plone.org/products/plos", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "collective.opensearch", "package_url": "https://pypi.org/project/collective.opensearch/", "platform": "", "project_url": "https://pypi.org/project/collective.opensearch/", "project_urls": {"Homepage": "http://plone.org/products/plos"}, "release_url": "https://pypi.org/project/collective.opensearch/1.6/", "requires_dist": null, "requires_python": "", "summary": "Collective Opensearch Collective.opensearch adds the ability to produce search results in the simple OpenSearch format.", "version": "1.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"project-description\">\n<h2>Project Description</h2>\n<div id=\"produce-open-search-feeds\">\n<h3>Produce Open Search Feeds</h3>\n<p>collective.opensearch adds the possibility to add OpenSearch compatible search results to your Plone site.</p>\n<ul>\n<li>site wide: this is a simple copy of the plone search so all option\nthat you may pass to the standard /search will be recognized as well.</li>\n<li>for a collection/topic: You can search inside a topic, i.e. you\ndefine a \u2018base query\u2019 as a topic and additional parameters of the query\nare applied additional.</li>\n</ul>\n<p>OpenSearch is a collection of simple formats for the sharing of search results.</p>\n<p>OpenSearch helps search engines and search clients communicate by\nintroducing a common set of formats to perform search requests and\nsyndicate search results. OpenSearch helps search engines and search\nclients communicate by introducing a common set of formats to perform\nsearch requests and syndicate search results. The OpenSearch description\ndocument format can be used to describe a search engine so that it can\nbe used by search client applications. The OpenSearch response elements\ncan be used to extend existing syndication formats, such as RSS and\nAtom, with the extra metadata needed to return search results</p>\n<p>collective.opensearch enables you to syndicate the search results of\nyour plone site by formatting them in the RSS or Atom formats, augmented\nwith OpenSearch response elements.</p>\n<div id=\"implemented-extensions-and-conventions\">\n<h4>Implemented extensions and conventions</h4>\n<ul>\n<li>opensearch</li>\n<li>relevance</li>\n<li>opensearch description for autodiscovery</li>\n<li>suggestions so that browsers can autocomplete</li>\n<li>response elements and first, previous, next, last links</li>\n</ul>\n</div>\n</div>\n<div id=\"consume-open-search-feeds\">\n<h3>Consume Open Search Feeds</h3>\n<p>collective.opensearch adds a view to the link type that lets you\nsearch OpenSearch (or other searches that return RSS or Atom, pretty\nmuch any other format feed parser supports and KML) compatible search\nproviders within your site. The feeds do not need to implement\nthe opensearch extensions it suffices that they are valid feeds (e.g you\ncan query yahoo, bing, google site search or any plone site). When you\nadd a link with an open search url this view will be automatically set.\nTo search e.g. plone.org from your site add a Link with the url:\n<tt><span class=\"pre\">http://plone.org/search_rss?SearchableText={searchTerms}</span></tt></p>\n<p>You can combine several open search links as a metasearch. All\nOpenSearch links inside a folder will be queried and their results\ndisplayed when you change the view of a folder to \u2018Open Search View\u2019</p>\n</div>\n<div id=\"usage\">\n<h3>Usage:</h3>\n<div id=\"a-single-remote-search\">\n<h4>1) A single remote search</h4>\n<p>If you add a link content type with a open search description\ncompatible url (i.e. it has a parameter {searchTerms} in the querystring)\nthe view of the link will be set when the link is saved.</p>\n<p>The view consits of a simple searchform and the results of the query</p>\n</div>\n<div id=\"search-multiple-sources-at-once\">\n<h4>2) search multiple sources at once</h4>\n<p>To build a simple metasearch create a folder and add your query links to it.\nChange the view of the folder to \u2018Open Search View\u2019.\nThe view consist of a search form (currently only for full text search)\nwhich input will be appied to all open search links (i.e. any link that\nhas  \u2018Open Search View\u2019 set as its view). The results of the\nsearches will be displayed in tabs beneath the form. The queries are\nexecuted asynchronously via AJAX, so you do not have to wait until the\nlast query has finished.</p>\n</div>\n</div>\n<div id=\"abusing-collective-opensearch-to-display-miscelaneous-feeds\">\n<h3>Abusing collective.opensearch to display miscelaneous feeds</h3>\n<div id=\"display-an-abritary-static-feed\">\n<h4>3) display an abritary \u2018static\u2019 feed</h4>\n<p>Allthough the main focus of this product is to produce and display\nsearch feeds you may use it to display any valid feed. If the url of the\nlink you added does not contain the {searchTerms} parameter and  \u2018Open Search View\u2019\n(you have to select the view manually from the \u2018display\u2019 menu) is\nselected as the view of the link, the feed will be fetched regardless of\nthe presence of a query parameter and its results will be displayed.\nThe search form will not be displayed in the absence of the\n<tt>{searchTerms}</tt> parameter.</p>\n</div>\n<div id=\"display-multiple-feeds\">\n<h4>4) display multiple feeds</h4>\n<p>Add your feeds to display to a folder (as in [2]) and select  \u2018Open Search View\u2019\nas the display view of the folder All feeds that do not have a\n<tt>{searchTerms}</tt> parameter in their url will be fetched immediately,\nregardless if a search input was provided. The search form will only be\ndisplayed if at least one of the links inside the folder has a\n<tt>{searchTerms}</tt> parameter.</p>\n</div>\n<div id=\"use-collective-opensearch-to-search-inside-your-collections\">\n<h4>5) Use collective.opensearch to search inside your collections</h4>\n<p>As opensearch results are added to all collections you may use it as a\nsearchform to search inside your collections. if you use a relative\nlink (e.g. /mycollection/SearchableText={searchTerms}) you have to\nchoose  \u2018Open Search View\u2019 manually to display the search results.</p>\n</div>\n</div>\n<div id=\"known-limitations-issues-and-caveats\">\n<h3>Known limitations issues and caveats</h3>\n<ul>\n<li>Currently only the {searchTerms} parameter for full text search is recognized and supported</li>\n<li>add \u2018&lt;match path=\u201dregex:^.*/opensearchresults.html*\u201d abort=\u201d1\u201d /&gt;\u2019 to your deliverance/xdv/diazo rules</li>\n<li>internal searches as described in [5] will always be executed as \u2018anonymous\u2019</li>\n<li>Code repository: <a href=\"https://github.com/collective/collective.opensearch\" rel=\"nofollow\">https://github.com/collective/collective.opensearch</a></li>\n<li>Report bugs at <a href=\"https://github.com/collective/collective.opensearch/issues\" rel=\"nofollow\">https://github.com/collective/collective.opensearch/issues</a></li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>1.6 (2017-11-20)</h3>\n<ul>\n<li>ElementTree fixes</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.5 (2014/01/08)</h3>\n<ul>\n<li>add JSON Results view</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>1.4 (2011/06/17)</h3>\n<ul>\n<li>plone 4.1 compatible</li>\n<li>give diazo/deliverance a hint not to style the ajax response</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>1.3 (2011/05/19)</h3>\n<ul>\n<li>support <a href=\"http://www.eprints.org/\" rel=\"nofollow\">http://www.eprints.org/</a> result feeds (not open search compliant but widely used)</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>1.2 (2011/05/18)</h3>\n<ul>\n<li>catch all exceptions in AutoDiscovery viewlet</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>1.1 (2011/05/11)</h3>\n<ul>\n<li>cache feeds when fetching remote searchresults</li>\n<li>display opensearch:totalresults when available</li>\n<li>show different opensearchdescriptions for site and topic</li>\n<li>add opensearch views to topics, search inside topics</li>\n<li>add configuration what indexes to use for categorization, abstract atom</li>\n<li>and rss view entries</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>1.0 (2011/03/29)</h3>\n<ul>\n<li>Created recipe with ZopeSkel</li>\n<li>implement all functionality from PLOS and JaoP</li>\n<li>add opensearch view for link</li>\n<li>add opensearch view for folder, all opensearch links inside that folder act as a metasearch</li>\n</ul>\n</div>\n<div id=\"jaop-0-1-sep-23-2008\">\n<h3>JaoP  0.1 (Sep 23, 2008)</h3>\n<ul>\n<li>First Jaop release with the default opensearch properties</li>\n<li>Added default autodiscovery page ( need some changes ) for Firefox / IE</li>\n<li>Implemented the rss view</li>\n<li>Implemented the alpha version of suggestions</li>\n</ul>\n</div>\n<div id=\"plos-0-2-jul-21-2007\">\n<h3>PLOS 0.2 (Jul 21, 2007)</h3>\n<ul>\n<li>Enable Plone to search OpenSearch compliant search providers</li>\n<li>added search feed content type</li>\n<li>additions to the RSS and ATOM responses</li>\n</ul>\n</div>\n<div id=\"plos-0-1-may-24-2007\">\n<h3>PLOS 0.1 (May 24, 2007)</h3>\n<ul>\n<li>initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3348777, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "969e751b664d8b61edfc8a6782856b8e", "sha256": "913f8352f85ce1db22997aa0636849fefca292ba15f42543a84c9b712dcb4cc4"}, "downloads": -1, "filename": "collective.opensearch-1.0.tar.gz", "has_sig": false, "md5_digest": "969e751b664d8b61edfc8a6782856b8e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28956, "upload_time": "2011-03-29T15:15:57", "upload_time_iso_8601": "2011-03-29T15:15:57.967379Z", "url": "https://files.pythonhosted.org/packages/b3/cd/bbbf4031b13b5f43545d16b5aa5706b46ea0cfd93aef6fa69b8134d26fac/collective.opensearch-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "5814fd3582292fefbfda231307cba797", "sha256": "cd1b7e8f90daeb644a497b740e0f4b2c1eb5dd906f63f96c3ddaf5ce6d9b4bfc"}, "downloads": -1, "filename": "collective.opensearch-1.1.tar.gz", "has_sig": false, "md5_digest": "5814fd3582292fefbfda231307cba797", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35908, "upload_time": "2011-05-11T10:30:54", "upload_time_iso_8601": "2011-05-11T10:30:54.156294Z", "url": "https://files.pythonhosted.org/packages/ee/f6/b8c442fe0b9368e65d43895bf1e100a2374e1de4ad0e5bd53f83878e1ed8/collective.opensearch-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "a9bbc5983fd88b02aed50aa935d662a9", "sha256": "de519141fe9ba0a9f854c21372533d172e98d44d6ea6c2597b5cdaa943f466bb"}, "downloads": -1, "filename": "collective.opensearch-1.2.tar.gz", "has_sig": false, "md5_digest": "a9bbc5983fd88b02aed50aa935d662a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37429, "upload_time": "2011-05-18T12:42:39", "upload_time_iso_8601": "2011-05-18T12:42:39.957811Z", "url": "https://files.pythonhosted.org/packages/45/27/512d494dc6fc13c953cd13a016f97495297bf3156e9cf2abab84580698cc/collective.opensearch-1.2.tar.gz", "yanked": false}], "1.3": [{"comment_text": "", "digests": {"md5": "13a3888283defdf8d2fa79d8ae34efb2", "sha256": "756e39daac75c3e66d0cff6941a1842e6955453408a3ba6516b57fe2bc8dddc6"}, "downloads": -1, "filename": "collective.opensearch-1.3.tar.gz", "has_sig": false, "md5_digest": "13a3888283defdf8d2fa79d8ae34efb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37638, "upload_time": "2011-05-19T07:14:24", "upload_time_iso_8601": "2011-05-19T07:14:24.241841Z", "url": "https://files.pythonhosted.org/packages/c9/1b/247bc112505ecdb7d0d9e1b6e1cb39fcf6f1f39941f0680413c30e9033ff/collective.opensearch-1.3.tar.gz", "yanked": false}], "1.4": [{"comment_text": "", "digests": {"md5": "f85ba7b8164d8696d669337ff5bd204f", "sha256": "7697fe68b8e70d82ce8955ac1205aa7662bdd8eb80355719c700571e1ca3931b"}, "downloads": -1, "filename": "collective.opensearch-1.4.tar.gz", "has_sig": false, "md5_digest": "f85ba7b8164d8696d669337ff5bd204f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34982, "upload_time": "2011-06-17T13:47:33", "upload_time_iso_8601": "2011-06-17T13:47:33.272696Z", "url": "https://files.pythonhosted.org/packages/92/b2/23ba8ae94aecb906d564cc7c37cbdadc15af9eaa31086d464556946d2022/collective.opensearch-1.4.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "e6a0559685db81a07ec13c54246ae035", "sha256": "27b349a46d506b4f4f8f1cc145465e3255bf323ebd53f5f38f321846a94956db"}, "downloads": -1, "filename": "collective.opensearch-1.4.1.tar.gz", "has_sig": false, "md5_digest": "e6a0559685db81a07ec13c54246ae035", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35163, "upload_time": "2011-11-30T12:46:45", "upload_time_iso_8601": "2011-11-30T12:46:45.597952Z", "url": "https://files.pythonhosted.org/packages/e0/d3/06888395228399c823927cac299f63f1c02742303b90ad72367b62039782/collective.opensearch-1.4.1.tar.gz", "yanked": false}], "1.5": [{"comment_text": "", "digests": {"md5": "a3d8077e56c579e797fae9978244603c", "sha256": "c372927e3205b19808cfd47a1e46523f17986c3098505fe37ebb36f2b4eba872"}, "downloads": -1, "filename": "collective.opensearch-1.5.tar.gz", "has_sig": false, "md5_digest": "a3d8077e56c579e797fae9978244603c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34932, "upload_time": "2014-01-08T14:18:37", "upload_time_iso_8601": "2014-01-08T14:18:37.744126Z", "url": "https://files.pythonhosted.org/packages/d6/10/fee049cb1d5c31cc421d9ae8876d26a858c276d910d2e04629eef5715083/collective.opensearch-1.5.tar.gz", "yanked": false}], "1.6": [{"comment_text": "", "digests": {"md5": "badb3e2cce32c2bbc0c7957df3d77b28", "sha256": "ce47ae1f4a85569f91d52369b527cadbfc03fbe0f24468f9eaa7a06458d7491f"}, "downloads": -1, "filename": "collective.opensearch-1.6.tar.gz", "has_sig": false, "md5_digest": "badb3e2cce32c2bbc0c7957df3d77b28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36113, "upload_time": "2017-11-20T12:48:43", "upload_time_iso_8601": "2017-11-20T12:48:43.731990Z", "url": "https://files.pythonhosted.org/packages/0c/c2/4403e5cc09ffc650c47c5a21041b5ca1950fda46959368414ee0e4292617/collective.opensearch-1.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "badb3e2cce32c2bbc0c7957df3d77b28", "sha256": "ce47ae1f4a85569f91d52369b527cadbfc03fbe0f24468f9eaa7a06458d7491f"}, "downloads": -1, "filename": "collective.opensearch-1.6.tar.gz", "has_sig": false, "md5_digest": "badb3e2cce32c2bbc0c7957df3d77b28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36113, "upload_time": "2017-11-20T12:48:43", "upload_time_iso_8601": "2017-11-20T12:48:43.731990Z", "url": "https://files.pythonhosted.org/packages/0c/c2/4403e5cc09ffc650c47c5a21041b5ca1950fda46959368414ee0e4292617/collective.opensearch-1.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:04 2020"}