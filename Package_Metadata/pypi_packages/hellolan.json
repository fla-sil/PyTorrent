{"info": {"author": "Bea Steers", "author_email": "bea.steers@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# hellolan\nIntuitive port scanning! This module is just a couple functions that wrap nmap and are exposed as command line tools.\n\nBasically, I made this because I often need to scan for raspberry pi's on my local network and was always frustrated about remembering the correct commands. Then I needed to do some automated scanning in Python, so I just wrapped it all up in a few python functions with a cli.\n\n## Install\n\n```bash\npip install hellolan\n```\n\n## Usage\n\n```bash\n# by default, we scan ports 21-443\nhellolan scan\n\n# there are some presets too\nhellolan ssh # --port=22\nhellolan web # --port=80,443\n```\nExample output:\n```\n$ hellolan ssh\nhostname           ip             ports\n-----------------  -------------  -------\n                   192.168.1.127  [22]\nnode-b827e9j315hf  192.168.1.236  [22]\n-\nTook 3.3 seconds\n```\n\nThere's more:\n```bash\n# you can filter the results too\nhellolan ssh node- # match a partial hostname\nhellolan ssh 'host*' --ignore='badhost-*' # matching glob\nhellolan ssh 192.168.1.84 # match an exact ip\n# NOTE: lmk if you'd prefer regex over fnmatch\n\n# you can change the net hosts to scan.\n# by default it's the local router subnet --net=192.168.1.0/24\n# so it's not exclusively for lan ...!! helloevbody!\nhellolan scan --net=scanme.nmap.org\nhellolan scan --net=198.116.0-255.1-127\nhellolan scan --net=216.163.128.20/20\n\n# you can also poll localhost:\n# here I'm checking what I have for jupyter lab instances running.\n# they autoincrement ports as 8888 + i. I'm assuming I don't have\n# more than 7.\nhellolan scan --net=localhost --port=8888-8893\n# Outputs:\n#     hostname    ip         ports\n#     ----------  ---------  ------------\n#     localhost   127.0.0.1  [8888, 8889]\n#     -\n#     Took 11.4 seconds\n```\n\nYou can print it out in more parseable formats\n```bash\n$ hellolan ssh -ip\n# 192.168.1.127\n# 192.168.1.236\n$ hellolan ssh -ip -json\n# [\"192.168.1.127\", \"192.168.1.236\"]\n$ hellolan ssh -json\n# [{\"hostname\": \"\", \"ip\": \"192.168.1.127\", \"ports\": [22]}, {\"hostname\": \"raspberrypi\", \"ip\": \"192.168.1.236\", \"ports\": [22]}]\n```\n\n#### Now you can use the command to directly ssh into a device !!!\nHow it works - it will split by the '@' symbol, poll for a device who's host matches 'abc' and replaces 'abc' with the found ip address.\n```bash\nhellolan ssh- user@abc\n```\nSo for example:\n```bash\nmbp $ hellolan ssh- user@abc\n#\n# Multiple hosts found:\n#     hostname  ip             ports\n# --  --------  -------------  -------\n#  0  abcdejkl  192.168.1.127  [22]\n#  1  abcdefgh  192.168.1.236  [22]\n#\n# Which host to use? [0]: >> 1\n# Using host: abcdefgh\n#\n# ---------------------\n# Starting SSH Session: $ ssh sonyc@192.168.1.236\n# ---------------------\n#\n# Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent\n# permitted by applicable law.\n# Last login: Wed Apr 15 18:40:32 2020 from 192.168.1.214\nuser@abcdefgh:~ $ hostname\nabcdefgh\nuser@abcdefgh:~ $ exit\nlogout\nConnection to 192.168.1.236 closed.\n#\n# -------------------\n# Ended SSH Session. (ssh sonyc@192.168.1.236)\n# -------------------\n#\nmbp $\n```\n\n#### It's also importable!\n\n```python\nimport hellolan\n\nfor d in hellolan.scan(port='21-22'):\n    print('{hostname} ({ip}) - {ports}'.format(**d))\n```\n\n## Notes\n - this uses the default `nmap.PortScanner().scan(host, ports=ports)` setup. I'm not sure I'm knowledgeable enough to pick better defaults, but there may be ways to speed it up.\n\n - Update: after playing around with settings, there are indeed ways of speeding it up.\n    - I made version checking optional. nmap.PortScanner.scan does version checking by default (`-sV`). I removed that and now you can re-enable it using `--services`. I haven't seen any lost information and the queries are now waaaay faster.\n    - if you are trying to speed up `--services`, you can specify version intensity (`--intensity 0-9`) with `0` using fewer checks (faster) and `9` using the most (comprehensive). I noticed significant decrease in runtime when using `--services` with `--intensity 0`\n    - You can specify how many of the top ports to use (default is `--top 200`), fewer is faster, (nmap default is `1000`).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/beasteers/hellolan", "keywords": "port scanning filter hostname ip lan wan localhost 192.168 192.168.1.0 192.168.1.1", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "hellolan", "package_url": "https://pypi.org/project/hellolan/", "platform": "", "project_url": "https://pypi.org/project/hellolan/", "project_urls": {"Homepage": "https://github.com/beasteers/hellolan"}, "release_url": "https://pypi.org/project/hellolan/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Scan and filter devices on your local network.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>hellolan</h1>\n<p>Intuitive port scanning! This module is just a couple functions that wrap nmap and are exposed as command line tools.</p>\n<p>Basically, I made this because I often need to scan for raspberry pi's on my local network and was always frustrated about remembering the correct commands. Then I needed to do some automated scanning in Python, so I just wrapped it all up in a few python functions with a cli.</p>\n<h2>Install</h2>\n<pre>pip install hellolan\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"c1\"># by default, we scan ports 21-443</span>\nhellolan scan\n\n<span class=\"c1\"># there are some presets too</span>\nhellolan ssh <span class=\"c1\"># --port=22</span>\nhellolan web <span class=\"c1\"># --port=80,443</span>\n</pre>\n<p>Example output:</p>\n<pre><code>$ hellolan ssh\nhostname           ip             ports\n-----------------  -------------  -------\n                   192.168.1.127  [22]\nnode-b827e9j315hf  192.168.1.236  [22]\n-\nTook 3.3 seconds\n</code></pre>\n<p>There's more:</p>\n<pre><span class=\"c1\"># you can filter the results too</span>\nhellolan ssh node- <span class=\"c1\"># match a partial hostname</span>\nhellolan ssh <span class=\"s1\">'host*'</span> --ignore<span class=\"o\">=</span><span class=\"s1\">'badhost-*'</span> <span class=\"c1\"># matching glob</span>\nhellolan ssh <span class=\"m\">192</span>.168.1.84 <span class=\"c1\"># match an exact ip</span>\n<span class=\"c1\"># NOTE: lmk if you'd prefer regex over fnmatch</span>\n\n<span class=\"c1\"># you can change the net hosts to scan.</span>\n<span class=\"c1\"># by default it's the local router subnet --net=192.168.1.0/24</span>\n<span class=\"c1\"># so it's not exclusively for lan ...!! helloevbody!</span>\nhellolan scan --net<span class=\"o\">=</span>scanme.nmap.org\nhellolan scan --net<span class=\"o\">=</span><span class=\"m\">198</span>.116.0-255.1-127\nhellolan scan --net<span class=\"o\">=</span><span class=\"m\">216</span>.163.128.20/20\n\n<span class=\"c1\"># you can also poll localhost:</span>\n<span class=\"c1\"># here I'm checking what I have for jupyter lab instances running.</span>\n<span class=\"c1\"># they autoincrement ports as 8888 + i. I'm assuming I don't have</span>\n<span class=\"c1\"># more than 7.</span>\nhellolan scan --net<span class=\"o\">=</span>localhost --port<span class=\"o\">=</span><span class=\"m\">8888</span>-8893\n<span class=\"c1\"># Outputs:</span>\n<span class=\"c1\">#     hostname    ip         ports</span>\n<span class=\"c1\">#     ----------  ---------  ------------</span>\n<span class=\"c1\">#     localhost   127.0.0.1  [8888, 8889]</span>\n<span class=\"c1\">#     -</span>\n<span class=\"c1\">#     Took 11.4 seconds</span>\n</pre>\n<p>You can print it out in more parseable formats</p>\n<pre>$ hellolan ssh -ip\n<span class=\"c1\"># 192.168.1.127</span>\n<span class=\"c1\"># 192.168.1.236</span>\n$ hellolan ssh -ip -json\n<span class=\"c1\"># [\"192.168.1.127\", \"192.168.1.236\"]</span>\n$ hellolan ssh -json\n<span class=\"c1\"># [{\"hostname\": \"\", \"ip\": \"192.168.1.127\", \"ports\": [22]}, {\"hostname\": \"raspberrypi\", \"ip\": \"192.168.1.236\", \"ports\": [22]}]</span>\n</pre>\n<h4>Now you can use the command to directly ssh into a device !!!</h4>\n<p>How it works - it will split by the '@' symbol, poll for a device who's host matches 'abc' and replaces 'abc' with the found ip address.</p>\n<pre>hellolan ssh- user@abc\n</pre>\n<p>So for example:</p>\n<pre>mbp $ hellolan ssh- user@abc\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Multiple hosts found:</span>\n<span class=\"c1\">#     hostname  ip             ports</span>\n<span class=\"c1\"># --  --------  -------------  -------</span>\n<span class=\"c1\">#  0  abcdejkl  192.168.1.127  [22]</span>\n<span class=\"c1\">#  1  abcdefgh  192.168.1.236  [22]</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Which host to use? [0]: &gt;&gt; 1</span>\n<span class=\"c1\"># Using host: abcdefgh</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># ---------------------</span>\n<span class=\"c1\"># Starting SSH Session: $ ssh sonyc@192.168.1.236</span>\n<span class=\"c1\"># ---------------------</span>\n<span class=\"c1\">#</span>\n<span class=\"c1\"># Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span>\n<span class=\"c1\"># permitted by applicable law.</span>\n<span class=\"c1\"># Last login: Wed Apr 15 18:40:32 2020 from 192.168.1.214</span>\nuser@abcdefgh:~ $ hostname\nabcdefgh\nuser@abcdefgh:~ $ <span class=\"nb\">exit</span>\n<span class=\"nb\">logout</span>\nConnection to <span class=\"m\">192</span>.168.1.236 closed.\n<span class=\"c1\">#</span>\n<span class=\"c1\"># -------------------</span>\n<span class=\"c1\"># Ended SSH Session. (ssh sonyc@192.168.1.236)</span>\n<span class=\"c1\"># -------------------</span>\n<span class=\"c1\">#</span>\nmbp $\n</pre>\n<h4>It's also importable!</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">hellolan</span>\n\n<span class=\"k\">for</span> <span class=\"n\">d</span> <span class=\"ow\">in</span> <span class=\"n\">hellolan</span><span class=\"o\">.</span><span class=\"n\">scan</span><span class=\"p\">(</span><span class=\"n\">port</span><span class=\"o\">=</span><span class=\"s1\">'21-22'</span><span class=\"p\">):</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">{hostname}</span><span class=\"s1\"> (</span><span class=\"si\">{ip}</span><span class=\"s1\">) - </span><span class=\"si\">{ports}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">d</span><span class=\"p\">))</span>\n</pre>\n<h2>Notes</h2>\n<ul>\n<li>\n<p>this uses the default <code>nmap.PortScanner().scan(host, ports=ports)</code> setup. I'm not sure I'm knowledgeable enough to pick better defaults, but there may be ways to speed it up.</p>\n</li>\n<li>\n<p>Update: after playing around with settings, there are indeed ways of speeding it up.</p>\n<ul>\n<li>I made version checking optional. nmap.PortScanner.scan does version checking by default (<code>-sV</code>). I removed that and now you can re-enable it using <code>--services</code>. I haven't seen any lost information and the queries are now waaaay faster.</li>\n<li>if you are trying to speed up <code>--services</code>, you can specify version intensity (<code>--intensity 0-9</code>) with <code>0</code> using fewer checks (faster) and <code>9</code> using the most (comprehensive). I noticed significant decrease in runtime when using <code>--services</code> with <code>--intensity 0</code></li>\n<li>You can specify how many of the top ports to use (default is <code>--top 200</code>), fewer is faster, (nmap default is <code>1000</code>).</li>\n</ul>\n</li>\n</ul>\n\n          </div>"}, "last_serial": 7072382, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "974822485ac40339dcc871e9633336c4", "sha256": "08520dd8a333f3b10c8c715ffc15fb08b9c0d249a918ccc10b0b0db226f61d97"}, "downloads": -1, "filename": "hellolan-0.0.1.tar.gz", "has_sig": false, "md5_digest": "974822485ac40339dcc871e9633336c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3647, "upload_time": "2020-04-10T01:29:27", "upload_time_iso_8601": "2020-04-10T01:29:27.353925Z", "url": "https://files.pythonhosted.org/packages/41/6f/3093eb783b164aa99c54935afa015e5709ba64434ffb8ab1c68afa1aa6cd/hellolan-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "b8400b61338df13a527f2edf6699def9", "sha256": "a239bfa4d75df81a29a9ffcd32707efba863003fcca17252e5bfbe9a6ef7e15c"}, "downloads": -1, "filename": "hellolan-0.0.2.tar.gz", "has_sig": false, "md5_digest": "b8400b61338df13a527f2edf6699def9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3732, "upload_time": "2020-04-10T01:56:57", "upload_time_iso_8601": "2020-04-10T01:56:57.540632Z", "url": "https://files.pythonhosted.org/packages/d5/55/d4379fd0ab6f4a961e522819df703eb18494531f9b21040da9a33ec78083/hellolan-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "a92a888d8cbf8ff57a39fce6f1f4e9b4", "sha256": "ab3d30ca8258e740f8b9b1aff627827ae9620eabc58f24816fc04ee96e5ccbbb"}, "downloads": -1, "filename": "hellolan-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a92a888d8cbf8ff57a39fce6f1f4e9b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5008, "upload_time": "2020-04-15T18:29:35", "upload_time_iso_8601": "2020-04-15T18:29:35.192827Z", "url": "https://files.pythonhosted.org/packages/15/43/f92d51bd505be58a6fb46a82101a3d0121fa534a135e28d06518e62ea368/hellolan-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "27a2b296d8afe028fbac221f8ccb9b86", "sha256": "985173a7942a3941e941e99be8afd39d173bcb2c911fd9a63b6c7933833b1760"}, "downloads": -1, "filename": "hellolan-0.0.4.tar.gz", "has_sig": false, "md5_digest": "27a2b296d8afe028fbac221f8ccb9b86", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5773, "upload_time": "2020-04-17T00:25:15", "upload_time_iso_8601": "2020-04-17T00:25:15.867901Z", "url": "https://files.pythonhosted.org/packages/ca/02/d257cde88734a2888ad98296729ada158dc4a0e549555f27f2529b76b2fd/hellolan-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "d2f8a6070f14e324e62e411d07084d4e", "sha256": "56441fd4e1bd3e84687472a3704fa3467cca02ec56b5a1502f05fcd592ec9424"}, "downloads": -1, "filename": "hellolan-0.0.5.tar.gz", "has_sig": false, "md5_digest": "d2f8a6070f14e324e62e411d07084d4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5777, "upload_time": "2020-04-17T01:38:22", "upload_time_iso_8601": "2020-04-17T01:38:22.719133Z", "url": "https://files.pythonhosted.org/packages/63/e4/2cae1a785494eb934b3f68e2c70846f38ca126e02f6c81cfcb9cdb054d9c/hellolan-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "5685394bb7a96be0ac105ca40d753742", "sha256": "2cb137042b92f201b544db8fe4bde2bd2cb3248fdcce68aae059899e11318522"}, "downloads": -1, "filename": "hellolan-0.0.6.tar.gz", "has_sig": false, "md5_digest": "5685394bb7a96be0ac105ca40d753742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5804, "upload_time": "2020-04-21T23:41:35", "upload_time_iso_8601": "2020-04-21T23:41:35.685515Z", "url": "https://files.pythonhosted.org/packages/38/c6/61d33f04ae942dfbdd377eb29d724ccfa09719d840608eac8d4803b83d1f/hellolan-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5685394bb7a96be0ac105ca40d753742", "sha256": "2cb137042b92f201b544db8fe4bde2bd2cb3248fdcce68aae059899e11318522"}, "downloads": -1, "filename": "hellolan-0.0.6.tar.gz", "has_sig": false, "md5_digest": "5685394bb7a96be0ac105ca40d753742", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5804, "upload_time": "2020-04-21T23:41:35", "upload_time_iso_8601": "2020-04-21T23:41:35.685515Z", "url": "https://files.pythonhosted.org/packages/38/c6/61d33f04ae942dfbdd377eb29d724ccfa09719d840608eac8d4803b83d1f/hellolan-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:44 2020"}