{"info": {"author": "Ask Solem", "author_email": "askh@opera.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "============================================================================\nghettoq - Ghetto Queue using Redis or Django Models.\n============================================================================\n\n:version: 0.4.5\n\nIntroduction\n============\n\nghettoq is a ghetto queue framework, used to implement Redis, MongoDB, \nBeanstalk, CouchDB, and Django database support for\n`carrot`_\n\n.. _`carrot`: http://pypi.python.org/pypi/carrot\n\nInstallation\n============\n\nYou can install ``ghettoq`` either via the Python Package Index (PyPI)\nor from source.\n\nTo install using ``pip``,::\n\n    $ pip install ghettoq\n\n\nTo install using ``easy_install``,::\n\n    $ easy_install ghettoq\n\n\nIf you have downloaded a source tarball you can install it\nby doing the following,::\n\n    $ python setup.py build\n    # python setup.py install # as root\n\nExamples\n========\n\n    >>> from ghettoq.simple import Connection\n    >>> import simplejson\n\n    >>> conn = Connection(\"redis\", host=\"localhost\", database=1)\n\n    >>> # Publishing messages\n    >>> q = conn.Queue(\"tasks\")\n    >>> payload = {\"name\": \"George Constanza\"}\n    >>> q.put(simplejson.dumps(payload))\n\n    >>> # Consuming messages\n    >>> message = q.get()\n    >>> simplejson.loads(message)\n    {\"name\": \"George Constanza\"}\n\n    # Empty raises ghettoq.messaging.Empty\n    >>> q.get()\n    Empty\n\n\nUsing Django database support\n-----------------------------\n\nIf settings is already configured you don't have to specify any\nconnection options.\n\n    >>> from ghettoq.simple import Connection\n\n    >>> conn = Connection(\"database\")\n    >>> queue = conn.Queue(name=\"tasks\")\n    >>> queue.put(\"To whom it may concern\")\n    >>> queue.get()\n    \"To whom it may concern\"\n\nUsing MongoDB support\n-----------------------------\n\nIf settings is already configured you don't have to specify any\nconnection options. The settings attrs used are:\n\n* BROKER_HOST: '127.0.0.1' if not set\n* BROKER_PORT: 27017 if not set\n* BROKER_VHOST (Database Name): 'ghettoq' if not set\n* Collection name: \"messages\"... should be added support for BROKER_COL settings var?\n\n    >>> from ghettoq.simple import Connection\n\n    >>> conn = Connection(\"mongodb\")\n    >>> queue = conn.Queue(name=\"tasks\")\n    >>> queue.put(\"To whom it may concern\")\n    >>> queue.get()\n    \"To whom it may concern\"\n\nUsing Beanstalk support\n-----------------------------\n\nRequires the beanstalkc python library. If settings is already configured you \ndon't have to specify any connection options. The settings attrs used are:\n\n* BROKER_HOST: 'localhost' if not set\n* BROKER_PORT: 11300 if not set\n* BROKER_VHOST: 'ghettoq' if not set\n\n    >>> from ghettoq.simple import Connection\n\n    >>> conn = Connection(\"beanstalk\")\n    >>> queue = conn.Queue(name=\"tasks\")\n    >>> queue.put(\"To whom it may concern\")\n    >>> queue.get()\n    \"To whom it may concern\"\n\nBeanstalk also supports priorities. Jobs with lower priory numbers are\nexecuted before jobs with higher numbers. This number defaults to 0\nand ranges from 0 to 2**32 - 1.\n\n\t>>> queue.put(\"spam\", priority=3)\n\t>>> queue.get()\n\t\"spam\"\n\nUsing CouchDB support\n-----------------------------\n\nIf settings is already configured you don't have to specify any\nconnection options. The settings attrs used are:\n\n* BROKER_HOST: '127.0.0.1' if not set\n* BROKER_PORT: 5984 if not set\n* BROKER_VHOST (Database Name): 'ghettoq' if not set\n* View name: \"ghettoq/messages\"\n\n    >>> from ghettoq.simple import Connection\n\n    >>> conn = Connection(\"couchdb\")\n    >>> queue = conn.Queue(name=\"tasks\")\n    >>> queue.put(\"To whom it may concern\")\n    >>> queue.get()\n    \"To whom it may concern\"\n\nThe couchdb backend requires the couchdb python module.\n\nLicense\n=======\n\nThis software is licensed under the ``New BSD License``. See the ``LICENSE``\nfile in the top distribution directory for the full license text.\n\n.. # vim: syntax=rst expandtab tabstop=4 shiftwidth=4 shiftround", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/ask/ghettoq/", "keywords": null, "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "ghettoq", "package_url": "https://pypi.org/project/ghettoq/", "platform": "any", "project_url": "https://pypi.org/project/ghettoq/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/ask/ghettoq/"}, "release_url": "https://pypi.org/project/ghettoq/0.4.5/", "requires_dist": null, "requires_python": null, "summary": "Ghetto Queue using Redis or Django Models.", "version": "0.4.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Version:</th>\n<td>0.4.5</td></tr>\n</tbody>\n</table>\n<div id=\"introduction\">\n<h2>Introduction</h2>\n<p>ghettoq is a ghetto queue framework, used to implement Redis, MongoDB,\nBeanstalk, CouchDB, and Django database support for\n<a href=\"http://pypi.python.org/pypi/carrot\" rel=\"nofollow\">carrot</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>You can install <tt>ghettoq</tt> either via the Python Package Index (PyPI)\nor from source.</p>\n<p>To install using <tt>pip</tt>,:</p>\n<pre>$ pip install ghettoq\n</pre>\n<p>To install using <tt>easy_install</tt>,:</p>\n<pre>$ easy_install ghettoq\n</pre>\n<p>If you have downloaded a source tarball you can install it\nby doing the following,:</p>\n<pre>$ python setup.py build\n# python setup.py install # as root\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<blockquote>\n<pre>&gt;&gt;&gt; from ghettoq.simple import Connection\n&gt;&gt;&gt; import simplejson\n</pre>\n<pre>&gt;&gt;&gt; conn = Connection(\"redis\", host=\"localhost\", database=1)\n</pre>\n<pre>&gt;&gt;&gt; # Publishing messages\n&gt;&gt;&gt; q = conn.Queue(\"tasks\")\n&gt;&gt;&gt; payload = {\"name\": \"George Constanza\"}\n&gt;&gt;&gt; q.put(simplejson.dumps(payload))\n</pre>\n<pre>&gt;&gt;&gt; # Consuming messages\n&gt;&gt;&gt; message = q.get()\n&gt;&gt;&gt; simplejson.loads(message)\n{\"name\": \"George Constanza\"}\n</pre>\n<p># Empty raises ghettoq.messaging.Empty\n&gt;&gt;&gt; q.get()\nEmpty</p>\n</blockquote>\n<div id=\"using-django-database-support\">\n<h3>Using Django database support</h3>\n<p>If settings is already configured you don\u2019t have to specify any\nconnection options.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from ghettoq.simple import Connection\n</pre>\n<pre>&gt;&gt;&gt; conn = Connection(\"database\")\n&gt;&gt;&gt; queue = conn.Queue(name=\"tasks\")\n&gt;&gt;&gt; queue.put(\"To whom it may concern\")\n&gt;&gt;&gt; queue.get()\n\"To whom it may concern\"\n</pre>\n</blockquote>\n</div>\n<div id=\"using-mongodb-support\">\n<h3>Using MongoDB support</h3>\n<p>If settings is already configured you don\u2019t have to specify any\nconnection options. The settings attrs used are:</p>\n<ul>\n<li><p>BROKER_HOST: \u2018127.0.0.1\u2019 if not set</p>\n</li>\n<li><p>BROKER_PORT: 27017 if not set</p>\n</li>\n<li><p>BROKER_VHOST (Database Name): \u2018ghettoq\u2019 if not set</p>\n</li>\n<li><p>Collection name: \u201cmessages\u201d\u2026 should be added support for BROKER_COL settings var?</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from ghettoq.simple import Connection\n</pre>\n<pre>&gt;&gt;&gt; conn = Connection(\"mongodb\")\n&gt;&gt;&gt; queue = conn.Queue(name=\"tasks\")\n&gt;&gt;&gt; queue.put(\"To whom it may concern\")\n&gt;&gt;&gt; queue.get()\n\"To whom it may concern\"\n</pre>\n</blockquote>\n</li>\n</ul>\n</div>\n<div id=\"using-beanstalk-support\">\n<h3>Using Beanstalk support</h3>\n<p>Requires the beanstalkc python library. If settings is already configured you\ndon\u2019t have to specify any connection options. The settings attrs used are:</p>\n<ul>\n<li><p>BROKER_HOST: \u2018localhost\u2019 if not set</p>\n</li>\n<li><p>BROKER_PORT: 11300 if not set</p>\n</li>\n<li><p>BROKER_VHOST: \u2018ghettoq\u2019 if not set</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from ghettoq.simple import Connection\n</pre>\n<pre>&gt;&gt;&gt; conn = Connection(\"beanstalk\")\n&gt;&gt;&gt; queue = conn.Queue(name=\"tasks\")\n&gt;&gt;&gt; queue.put(\"To whom it may concern\")\n&gt;&gt;&gt; queue.get()\n\"To whom it may concern\"\n</pre>\n</blockquote>\n</li>\n</ul>\n<p>Beanstalk also supports priorities. Jobs with lower priory numbers are\nexecuted before jobs with higher numbers. This number defaults to 0\nand ranges from 0 to 2**32 - 1.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; queue.put(\"spam\", priority=3)\n&gt;&gt;&gt; queue.get()\n\"spam\"\n</pre>\n</blockquote>\n</div>\n<div id=\"using-couchdb-support\">\n<h3>Using CouchDB support</h3>\n<p>If settings is already configured you don\u2019t have to specify any\nconnection options. The settings attrs used are:</p>\n<ul>\n<li><p>BROKER_HOST: \u2018127.0.0.1\u2019 if not set</p>\n</li>\n<li><p>BROKER_PORT: 5984 if not set</p>\n</li>\n<li><p>BROKER_VHOST (Database Name): \u2018ghettoq\u2019 if not set</p>\n</li>\n<li><p>View name: \u201cghettoq/messages\u201d</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from ghettoq.simple import Connection\n</pre>\n<pre>&gt;&gt;&gt; conn = Connection(\"couchdb\")\n&gt;&gt;&gt; queue = conn.Queue(name=\"tasks\")\n&gt;&gt;&gt; queue.put(\"To whom it may concern\")\n&gt;&gt;&gt; queue.get()\n\"To whom it may concern\"\n</pre>\n</blockquote>\n</li>\n</ul>\n<p>The couchdb backend requires the couchdb python module.</p>\n</div>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This software is licensed under the <tt>New BSD License</tt>. See the <tt>LICENSE</tt>\nfile in the top distribution directory for the full license text.</p>\n</div>\n\n          </div>"}, "last_serial": 792403, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "9c66a5b6a2e323698d43905a57b31b47", "sha256": "71c77b23083a7a607d67a62af3e7d6d7abf17da40ca1d4bfe1a179211c0c98ae"}, "downloads": -1, "filename": "ghettoq-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9c66a5b6a2e323698d43905a57b31b47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24996, "upload_time": "2009-11-09T13:07:08", "upload_time_iso_8601": "2009-11-09T13:07:08.276174Z", "url": "https://files.pythonhosted.org/packages/f7/53/95e6289eec3abfcaac3fe816bebf0d143c63fef9c45a2c4a6ed1b3930c2c/ghettoq-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "3a19c5bce81faeea4274a15f5f7d4456", "sha256": "9111ca8970d08ccd7c59e19e633cf4f7a7020a7d06a4a8be0d122e819a87ef77"}, "downloads": -1, "filename": "ghettoq-0.1.2.tar.gz", "has_sig": false, "md5_digest": "3a19c5bce81faeea4274a15f5f7d4456", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15694, "upload_time": "2010-02-23T16:55:24", "upload_time_iso_8601": "2010-02-23T16:55:24.289957Z", "url": "https://files.pythonhosted.org/packages/9e/59/7ac7ec9d4086c66a1940714a751be4956bada84e8648e021786d3f86beff/ghettoq-0.1.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a6d86a7d9810595eaff26e2db93068b3", "sha256": "6507f7110f1b87eb774d34c5acd178d12aac132c335fe98cf737018e5dffaae9"}, "downloads": -1, "filename": "ghettoq-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a6d86a7d9810595eaff26e2db93068b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18682, "upload_time": "2010-07-14T11:15:28", "upload_time_iso_8601": "2010-07-14T11:15:28.421369Z", "url": "https://files.pythonhosted.org/packages/d5/a0/2b563efd56eb01e33182fe8d988b8abbe23de90beb4228535ea9857f4ff8/ghettoq-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "5d5794ef52932ca180f794be4548984d", "sha256": "ba2b4825134656bbe4071d9a5414e5e3ef9688a1947bae81782c08e7265e5ea6"}, "downloads": -1, "filename": "ghettoq-0.4.1.tar.gz", "has_sig": false, "md5_digest": "5d5794ef52932ca180f794be4548984d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35398, "upload_time": "2010-07-20T07:24:51", "upload_time_iso_8601": "2010-07-20T07:24:51.059203Z", "url": "https://files.pythonhosted.org/packages/6a/bf/27004cd39d4945507c6f62e1724120cafd1e5b4a8257304de63779902202/ghettoq-0.4.1.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "d37bced8b80d810fb453ebdc17523e43", "sha256": "8e49f6c1ad52cea96ff62043c363256699a3c6b5c31fea8379204d4cf1ccf0cd"}, "downloads": -1, "filename": "ghettoq-0.4.3.tar.gz", "has_sig": false, "md5_digest": "d37bced8b80d810fb453ebdc17523e43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30259, "upload_time": "2010-08-27T12:27:15", "upload_time_iso_8601": "2010-08-27T12:27:15.204128Z", "url": "https://files.pythonhosted.org/packages/e5/ec/8b5add6770ad157406669099d0f70b19d2049550b2db3d3c430f1dddca5b/ghettoq-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "21fb376dbbf6d5d34624821a0ac3f5c8", "sha256": "a6b5138f7c206e5ef2fe7543cfdc57a36448f41814ea04586d7d92dc949723bc"}, "downloads": -1, "filename": "ghettoq-0.4.4.tar.gz", "has_sig": false, "md5_digest": "21fb376dbbf6d5d34624821a0ac3f5c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34954, "upload_time": "2010-08-27T14:38:12", "upload_time_iso_8601": "2010-08-27T14:38:12.523006Z", "url": "https://files.pythonhosted.org/packages/1a/a5/831c111af34a61047f06c8211862256e5c6b78e19625fc6e08bd4739ce87/ghettoq-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "7975bd7115a06766bbe62c85f9b86390", "sha256": "e43c04065f51abccf76e3df56f7095005e54c829f9248874d514177acc649d7e"}, "downloads": -1, "filename": "ghettoq-0.4.5.tar.gz", "has_sig": false, "md5_digest": "7975bd7115a06766bbe62c85f9b86390", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21315, "upload_time": "2010-09-29T10:08:28", "upload_time_iso_8601": "2010-09-29T10:08:28.817126Z", "url": "https://files.pythonhosted.org/packages/2e/2b/2a07ffec06a1e68fe3669bb8bce2b44874713d8dc2099764a02b2386d9e6/ghettoq-0.4.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7975bd7115a06766bbe62c85f9b86390", "sha256": "e43c04065f51abccf76e3df56f7095005e54c829f9248874d514177acc649d7e"}, "downloads": -1, "filename": "ghettoq-0.4.5.tar.gz", "has_sig": false, "md5_digest": "7975bd7115a06766bbe62c85f9b86390", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21315, "upload_time": "2010-09-29T10:08:28", "upload_time_iso_8601": "2010-09-29T10:08:28.817126Z", "url": "https://files.pythonhosted.org/packages/2e/2b/2a07ffec06a1e68fe3669bb8bce2b44874713d8dc2099764a02b2386d9e6/ghettoq-0.4.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:33 2020"}