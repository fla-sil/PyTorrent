{"info": {"author": "Lee Treveil", "author_email": "leetreveil@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "##########\npys3upload\n##########\n\n.. image:: https://travis-ci.org/leetreveil/pys3upload.png\n        :target: https://travis-ci.org/leetreveil/pys3upload\n\nA python module for uploading data to s3 using the multipart API.\n\nInstallation\n------------\n\nInstall via `pip`_:\n\n.. code:: bash\n\n    $ pip install s3upload\n\n\nCLI\n---\n\nUse the s3upload CLI to upload from stdin or from data provided on the command line.\n\n.. code:: bash\n\n    Usage: s3upload [options]\n\n    Options:\n      -h, --help            show this help message and exit\n      -b BUCKET, --bucket=BUCKET\n                            the s3 bucket to upload to\n      -k KEY, --key=KEY     the name of the key to create in the bucket\n      -K AWS_KEY, --aws_key=AWS_KEY\n                            aws access key\n      -s AWS_SECRET, --aws_secret=AWS_SECRET\n                            aws secret key\n      -d DATA, --data=DATA  the data to upload to s3 -- if left blank will be read\n                            from STDIN\n      -t THREADS, --threads=THREADS\n                            number of threads to use while uploading in parallel\n\nModule\n------\n\nYou can also interface with the module from python:\n\n.. code:: python\n\n    >>> from s3upload import upload\n\n.. code:: python\n\n    def upload(bucket, aws_access_key, aws_secret_key,\n           iterable, key, progress_cb=None,\n           threads=5, replace=False, secure=True):\n    ''' Upload data to s3 using the s3 multipart upload API.\n\n        Args:\n            bucket: name of s3 bucket\n            aws_access_key: aws access key\n            aws_secret_key: aws secret key\n            iterable: The data to upload. Each 'part' in the list\n            will be uploaded in parallel. Each part must be at\n            least 5242880 bytes (5mb).\n            key: the name of the key to create in the s3 bucket\n            progress_cb: will be called with (part_no, uploaded, total)\n            each time a progress update is available.\n            threads: the number of threads to use while uploading.\n            replace: will replace the key in s3 if set to true. (Default is false)\n            secure: use ssl when talking to s3. (Default is true)\n    '''\n\nLicence\n-------\nMIT\n\n.. _pip: http://www.pip-installer.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/leetreveil/pys3upload", "keywords": "s3,multipart,upload,amazon", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "s3upload", "package_url": "https://pypi.org/project/s3upload/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/s3upload/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/leetreveil/pys3upload"}, "release_url": "https://pypi.org/project/s3upload/0.2.4/", "requires_dist": null, "requires_python": null, "summary": "A python module for uploading data to s3 using the s3 multipart API", "version": "0.2.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/leetreveil/pys3upload\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/leetreveil/pys3upload.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/768b241829d45aca3c3347797becb7fd58e8a421/68747470733a2f2f7472617669732d63692e6f72672f6c65657472657665696c2f7079733375706c6f61642e706e67\"></a>\n<p>A python module for uploading data to s3 using the multipart API.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install via <a href=\"http://www.pip-installer.org/\" rel=\"nofollow\">pip</a>:</p>\n<pre>$ pip install s3upload\n</pre>\n</div>\n<div id=\"cli\">\n<h2>CLI</h2>\n<p>Use the s3upload CLI to upload from stdin or from data provided on the command line.</p>\n<pre>Usage: s3upload <span class=\"o\">[</span>options<span class=\"o\">]</span>\n\nOptions:\n  -h, --help            show this <span class=\"nb\">help</span> message and <span class=\"nb\">exit</span>\n  -b BUCKET, --bucket<span class=\"o\">=</span>BUCKET\n                        the s3 bucket to upload to\n  -k KEY, --key<span class=\"o\">=</span>KEY     the name of the key to create in the bucket\n  -K AWS_KEY, --aws_key<span class=\"o\">=</span>AWS_KEY\n                        aws access key\n  -s AWS_SECRET, --aws_secret<span class=\"o\">=</span>AWS_SECRET\n                        aws secret key\n  -d DATA, --data<span class=\"o\">=</span>DATA  the data to upload to s3 -- <span class=\"k\">if</span> left blank will be <span class=\"nb\">read</span>\n                        from STDIN\n  -t THREADS, --threads<span class=\"o\">=</span>THREADS\n                        number of threads to use <span class=\"k\">while</span> uploading in parallel\n</pre>\n</div>\n<div id=\"module\">\n<h2>Module</h2>\n<p>You can also interface with the module from python:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">s3upload</span> <span class=\"kn\">import</span> <span class=\"n\">upload</span>\n</pre>\n<pre><span class=\"k\">def</span> <span class=\"nf\">upload</span><span class=\"p\">(</span><span class=\"n\">bucket</span><span class=\"p\">,</span> <span class=\"n\">aws_access_key</span><span class=\"p\">,</span> <span class=\"n\">aws_secret_key</span><span class=\"p\">,</span>\n       <span class=\"n\">iterable</span><span class=\"p\">,</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">progress_cb</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span>\n       <span class=\"n\">threads</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">replace</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"n\">secure</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">):</span>\n<span class=\"sd\">''' Upload data to s3 using the s3 multipart upload API.\n\n    Args:\n        bucket: name of s3 bucket\n        aws_access_key: aws access key\n        aws_secret_key: aws secret key\n        iterable: The data to upload. Each 'part' in the list\n        will be uploaded in parallel. Each part must be at\n        least 5242880 bytes (5mb).\n        key: the name of the key to create in the s3 bucket\n        progress_cb: will be called with (part_no, uploaded, total)\n        each time a progress update is available.\n        threads: the number of threads to use while uploading.\n        replace: will replace the key in s3 if set to true. (Default is false)\n        secure: use ssl when talking to s3. (Default is true)\n'''</span>\n</pre>\n</div>\n<div id=\"licence\">\n<h2>Licence</h2>\n<p>MIT</p>\n</div>\n\n          </div>"}, "last_serial": 1017321, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "c939deb5882ffc1b56f34380c46a830b", "sha256": "6de4abdbe05bdf29d3f2c5a63e9ac491ffaf4cc7cb265e81d88e881d074fac27"}, "downloads": -1, "filename": "s3upload-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c939deb5882ffc1b56f34380c46a830b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2256, "upload_time": "2013-08-05T12:40:11", "upload_time_iso_8601": "2013-08-05T12:40:11.521343Z", "url": "https://files.pythonhosted.org/packages/ca/82/89f3d64dda037882fedca8258675f41c383b190b64343360417a12e01c9e/s3upload-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9498a0ccd564f5279e4d6dcbfe708dac", "sha256": "f3fae742eb0514cb80c21744615d323c606ebf47d56b00ae8ff8de125a970ecd"}, "downloads": -1, "filename": "s3upload-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9498a0ccd564f5279e4d6dcbfe708dac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2374, "upload_time": "2013-08-05T12:50:56", "upload_time_iso_8601": "2013-08-05T12:50:56.915791Z", "url": "https://files.pythonhosted.org/packages/c7/d2/bad1cbdee2fa31bd314b4391f489c0f10aface8d04ffab9f957dddb6ce1f/s3upload-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "553464efffdd9c076dd16bf29c2d8173", "sha256": "75ba478c128f0d164e6c489008bca24c43b258088e3451f0c764a904379f7376"}, "downloads": -1, "filename": "s3upload-0.2.3.tar.gz", "has_sig": false, "md5_digest": "553464efffdd9c076dd16bf29c2d8173", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2381, "upload_time": "2013-08-05T13:18:03", "upload_time_iso_8601": "2013-08-05T13:18:03.077367Z", "url": "https://files.pythonhosted.org/packages/29/23/ffead9e982ed340946fe503e3f86c91df18da93a61e73a85a66274b680b6/s3upload-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "5ea8f280599bb8a32bff1f7fc3b4a44a", "sha256": "6672af1a079abeff96c5efd9125054461b25338233b58893ef87544bd1b00f20"}, "downloads": -1, "filename": "s3upload-0.2.4.tar.gz", "has_sig": false, "md5_digest": "5ea8f280599bb8a32bff1f7fc3b4a44a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3539, "upload_time": "2014-03-03T14:48:17", "upload_time_iso_8601": "2014-03-03T14:48:17.607937Z", "url": "https://files.pythonhosted.org/packages/2e/ef/0b0510523b13fa22abcc1068a4156c4027043d9199154ef4ca794279e21e/s3upload-0.2.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5ea8f280599bb8a32bff1f7fc3b4a44a", "sha256": "6672af1a079abeff96c5efd9125054461b25338233b58893ef87544bd1b00f20"}, "downloads": -1, "filename": "s3upload-0.2.4.tar.gz", "has_sig": false, "md5_digest": "5ea8f280599bb8a32bff1f7fc3b4a44a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3539, "upload_time": "2014-03-03T14:48:17", "upload_time_iso_8601": "2014-03-03T14:48:17.607937Z", "url": "https://files.pythonhosted.org/packages/2e/ef/0b0510523b13fa22abcc1068a4156c4027043d9199154ef4ca794279e21e/s3upload-0.2.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:33 2020"}