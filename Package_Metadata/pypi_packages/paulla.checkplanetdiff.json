{"info": {"author": "Jean-Philippe Camguilhem", "author_email": "jp.camguilhem+eggs@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": ".. contents::\n\nIntroduction\n============\n\n\ncheck_planet.diff is a 'Nagios like' (Nagios|Icinga|Centreon|Shinken) probe checking the delay of your OSM Planet with offical, based on minute-diff state files.\n\nMore infos here http://wiki.openstreetmap.org/wiki/Minutely_Mapnik\n\n- Code repository: https://github.com/paulla/paulla.checkplanetdiff\n\n\nInstall\n-------\n\neasy_install | pip witthin or not a virtualenv::\n    \n    pip install | easy_install paulla.check_planetdiff\n\nzc.buildout users just add paulla.check_planetdiff to your eggs list as usual.\n\nYou could simply run install or tests with::\n     \n     bin/python setup.py install\n     bin/python setup.py test\n\nMayba add a symbolic link from bin/check_planetdiff to your nagios/plugins/ directory\n\n\n\nNagios like configuration\n---------------------------\n\ncheck_planetdiff could be called localy or remotely via check_by_ssh or NRPE.\n\nhere a sample definition to check remotely by ssh \n\nCommand definition ::\n    \n    # 'check_ssh_planetdiff' command definition\n    define command {\n            command_name    check_ssh_planetdiff\n            command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C \"/usr/lib/nagios/plugins/check_planetdiff -w $ARG1$ -c $ARG2$ --state-file $ARG3$ -p\" \n    }\n\nNotice the last -p arg for performance data is optionnal, remove it if don't needed.\n\nthe service itself::\n    \n     # planet diff delay\n     define service {\n            use                             paulla-service\n            service_description             delay planet diff\n            check_command                   check_ssh_planetdiff!0.0:3600.0!0.0:21600.0!/home/mapnik/.osmosis/state.txt\n            host_name                       biscaou\n     }\n\n\n\n\nNagios like' synchronise delay OSM Planet check\n=================================================\n\n\nUse case\n\n\nThe check is simple and robust, no database query.\n\nDelay is just datetime.datetime.utcnow() - OSM timestamp in state.txt (usaualy /home/mapnik.osmosis/state.txt)\n\nMore infos here http://wiki.openstreetmap.org/wiki/Minutely_Mapnik\n\nWe fake 3 state files with three different timestamp (see tests/ directory). \n\nWe have to fake now according to tests files states.\n\nnow = datetime(2012, 10, 23, 20, 4, 30) # see test function\n\nReal check is datetime.datetime.utcnow()\n\nWarning and critical thresholds are respectively 3600 and 21600 seconds (1 and 6 hours)\n\nTime to work\n\nnecessary stuff::\n    \n    >>> import glob\n    >>> import subprocess\n    >>> from datetime import datetime\n    >>> from pprint import pprint\n\na funtion to get lines from fake state files::\n    \n    >>> def get_lines_from_file(filename):\n    ...     with open(filename) as state_file:\n    ...         return state_file.read().splitlines()\n    ...\n    \n\nUsage\n------\n\n-h option ::\n    \n    >>> cmd_h = \"bin/test_check_planetdiff -h\"\n    >>> p_help = subprocess.Popen(cmd_h.split(), stdout=subprocess.PIPE)\n    >>> pprint(p_help.stdout.readlines())\n    ['Usage: test_check_planetdiff [options]\\n',\n     '\\n',\n     'Options:\\n',\n     '  --state-file=STATEFILE\\n',\n     '  -p                    return performance data\\n',\n     '  -v, --verbose         \\n',\n     '  -H HOSTNAME, --hostname=HOSTNAME\\n',\n     '  -w WARNING, --warning=WARNING\\n',\n     '  -c CRITICAL, --critical=CRITICAL\\n',\n     '  -t TIMEOUT, --timeout=TIMEOUT\\n',\n     '  -h, --help            show this help message and exit\\n']\n\n\nChecks\n--------\n\nLess than 1 hour returns OK::\n    \n    >>> state_file_ok = \"src/paulla/checkplanetdiff/tests/state_ok.txt\"\n    >>> pprint(get_lines_from_file(state_file_ok))\n    ['#Tue Oct 23 22:05:12 CEST 2012',\n     'sequenceNumber=59592',\n     'timestamp=2012-10-23T20\\\\:04\\\\:02Z']\n\n    >>> cmd_ok = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s\" % state_file_ok\n    >>> p_ok = subprocess.Popen(cmd_ok.split(), stdout=subprocess.PIPE)\n\nStatus code is 0 -> OK::\n    \n    >>> p_ok.wait()\n    0\n\nString output::\n    \n    >>> p_ok.stdout.read()\n    'OK: delay : 28, sequence number : 59592\\n'\n\nwith perfdata option::\n    \n    >>> cmd_ok = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s -p\" % state_file_ok \n    >>> p_ok = subprocess.Popen(cmd_ok.split(), stdout=subprocess.PIPE)\n    >>> p_ok.stdout.read()\n    'OK: delay : 28, sequence number : 59592|delayed=28s;3600;21600;;\\n'\n\nDelay between 1 hour and 6 returns WARNING::\n    \n    >>> state_file_warn = \"src/paulla/checkplanetdiff/tests/state_warning.txt\"\n    >>> pprint(get_lines_from_file(state_file_warn))\n    ['#Tue Oct 23 18:25:07 CEST 2012',\n     'sequenceNumber=59372',\n     'timestamp=2012-10-23T16\\\\:24\\\\:03Z']\n\n    >>> cmd_warn = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s\" % state_file_warn\n    >>> p_warn = subprocess.Popen(cmd_warn.split(), stdout=subprocess.PIPE)\n\nStatus code is 1 -> WARNING::\n    \n    >>> p_warn.wait()\n    1\n\nString output::\n    \n    >>> p_warn.stdout.read()\n    'WARN: delay : 13227, sequence number : 59372\\n'\n\nwith perfdata option::\n    \n    >>> cmd_warn = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s -p\" % state_file_warn\n    >>> p_warn = subprocess.Popen(cmd_warn.split(), stdout=subprocess.PIPE)\n    >>> p_warn.stdout.read()\n    'WARN: delay : 13227, sequence number : 59372|delayed=13227s;3600;21600;;\\n'\n\nMore than 6 hours returns CRITICAL::\n    \n    >>> state_file_crit = \"src/paulla/checkplanetdiff/tests/state_critical.txt\"\n    >>> pprint(get_lines_from_file(state_file_crit))\n    ['#Tue Oct 23 12:25:07 CEST 2012',\n     'sequenceNumber=59012',\n     'timestamp=2012-10-23T10\\\\:24\\\\:03Z']\n    \n    >>> cmd_crit = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s\" % state_file_crit\n    >>> p_crit = subprocess.Popen(cmd_crit.split(), stdout=subprocess.PIPE)\n\nStatus code is 2 -> CRITICAL::\n    \n    >>> p_crit.wait()\n    2\n\nString output::\n    \n    >>> p_crit.stdout.read()\n    'CRIT: delay : 34827, sequence number : 59012\\n'\n\nwith perfdata option::\n    \n    >>> cmd_crit = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s -p\" % state_file_crit\n    >>> p_crit = subprocess.Popen(cmd_crit.split(), stdout=subprocess.PIPE)\n    >>> p_crit.stdout.read()\n    'CRIT: delay : 34827, sequence number : 59012|delayed=34827s;3600;21600;;\\n'\n\nNon existant state file returns CRITICAL::\n    \n    >>> cmd_crit_non_exist_file = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file src/non_existant.txt\"\n    >>> p_crit_nonexist = subprocess.Popen(cmd_crit_non_exist_file.split(), stdout=subprocess.PIPE)\n\nStatus code is 2 -> CRITICAL::\n    \n    >>> p_crit_nonexist.wait()\n    2\n\nString output::\n    \n    >>> p_crit_nonexist.stdout.read()\n    'CRIT: delay : 21601, sequence number : 0\\n'\n\nwith perfdata option::\n    \n    >>> cmd_crit_non_exist_file = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file src/non_existant.txt -p\"\n    >>> p_crit_nonexist = subprocess.Popen(cmd_crit_non_exist_file.split(), stdout=subprocess.PIPE)\n    >>> p_crit_nonexist.stdout.read()\n    'CRIT: delay : 21601, sequence number : 0|delayed=21601s;3600;21600;;\\n'\n\n\n\nChangelog\n=========\n\n\n0.4 (2012-10-27)\n----------------\n\n- fix README error\n\n\n0.3 (2012-10-27)\n----------------\n\n- Nothing changed yet.\n\n\n0.2 (2012-10-27)\n----------------\n\n-  improve help usage and corresponding tests\n\n\n0.1 (2012-10-26)\n----------------\n\n- Firts version used in production at http://www.paulla.asso.org\n  [Jean-Philippe Camguilhem]\n\n\n\nCredits\n========\n|paulla|_\n\n  * `PauLLA <http://www.paulla.asso.fr>`_\n  * `Contact us <mailto:contact@paulla.asso.fr>`_\n\n.. |paulla| image:: http://www.paulla.asso.fr/logo.png\n.. _paulla:  http://www.paulla.asso.fr\n\n\nContributors\n=============\nJean-Philippe Camguilhem, Author", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.paulla.asso.fr", "keywords": "Nagios Icinga OSM", "license": "bsd", "maintainer": null, "maintainer_email": null, "name": "paulla.checkplanetdiff", "package_url": "https://pypi.org/project/paulla.checkplanetdiff/", "platform": "any", "project_url": "https://pypi.org/project/paulla.checkplanetdiff/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.paulla.asso.fr"}, "release_url": "https://pypi.org/project/paulla.checkplanetdiff/0.4/", "requires_dist": null, "requires_python": null, "summary": "A nagios|icinga plugin to check diff delay with the official OpenStreetMap Planet.", "version": "0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#introduction\" id=\"id6\" rel=\"nofollow\">Introduction</a><ul>\n<li><a href=\"#install\" id=\"id7\" rel=\"nofollow\">Install</a></li>\n<li><a href=\"#nagios-like-configuration\" id=\"id8\" rel=\"nofollow\">Nagios like configuration</a></li>\n</ul>\n</li>\n<li><a href=\"#nagios-like-synchronise-delay-osm-planet-check\" id=\"id9\" rel=\"nofollow\">Nagios like\u2019 synchronise delay OSM Planet check</a><ul>\n<li><a href=\"#usage\" id=\"id10\" rel=\"nofollow\">Usage</a></li>\n<li><a href=\"#checks\" id=\"id11\" rel=\"nofollow\">Checks</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id12\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id13\" rel=\"nofollow\">0.4 (2012-10-27)</a></li>\n<li><a href=\"#id2\" id=\"id14\" rel=\"nofollow\">0.3 (2012-10-27)</a></li>\n<li><a href=\"#id3\" id=\"id15\" rel=\"nofollow\">0.2 (2012-10-27)</a></li>\n<li><a href=\"#id4\" id=\"id16\" rel=\"nofollow\">0.1 (2012-10-26)</a></li>\n</ul>\n</li>\n<li><a href=\"#credits\" id=\"id17\" rel=\"nofollow\">Credits</a></li>\n<li><a href=\"#contributors\" id=\"id18\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n</div>\n<div id=\"introduction\">\n<h2><a href=\"#id6\" rel=\"nofollow\">Introduction</a></h2>\n<p>check_planet.diff is a \u2018Nagios like\u2019 (Nagios|Icinga|Centreon|Shinken) probe checking the delay of your OSM Planet with offical, based on minute-diff state files.</p>\n<p>More infos here <a href=\"http://wiki.openstreetmap.org/wiki/Minutely_Mapnik\" rel=\"nofollow\">http://wiki.openstreetmap.org/wiki/Minutely_Mapnik</a></p>\n<ul>\n<li>Code repository: <a href=\"https://github.com/paulla/paulla.checkplanetdiff\" rel=\"nofollow\">https://github.com/paulla/paulla.checkplanetdiff</a></li>\n</ul>\n<div id=\"install\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Install</a></h3>\n<p>easy_install | pip witthin or not a virtualenv:</p>\n<pre>pip install | easy_install paulla.check_planetdiff\n</pre>\n<p>zc.buildout users just add paulla.check_planetdiff to your eggs list as usual.</p>\n<p>You could simply run install or tests with:</p>\n<pre>bin/python setup.py install\nbin/python setup.py test\n</pre>\n<p>Mayba add a symbolic link from bin/check_planetdiff to your nagios/plugins/ directory</p>\n</div>\n<div id=\"nagios-like-configuration\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Nagios like configuration</a></h3>\n<p>check_planetdiff could be called localy or remotely via check_by_ssh or NRPE.</p>\n<p>here a sample definition to check remotely by ssh</p>\n<p>Command definition</p>\n<pre># 'check_ssh_planetdiff' command definition\ndefine command {\n        command_name    check_ssh_planetdiff\n        command_line    $USER1$/check_by_ssh -H $HOSTADDRESS$ -C \"/usr/lib/nagios/plugins/check_planetdiff -w $ARG1$ -c $ARG2$ --state-file $ARG3$ -p\"\n}\n</pre>\n<p>Notice the last -p arg for performance data is optionnal, remove it if don\u2019t needed.</p>\n<p>the service itself:</p>\n<pre># planet diff delay\ndefine service {\n       use                             paulla-service\n       service_description             delay planet diff\n       check_command                   check_ssh_planetdiff!0.0:3600.0!0.0:21600.0!/home/mapnik/.osmosis/state.txt\n       host_name                       biscaou\n}\n</pre>\n</div>\n</div>\n<div id=\"nagios-like-synchronise-delay-osm-planet-check\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Nagios like\u2019 synchronise delay OSM Planet check</a></h2>\n<p>Use case</p>\n<p>The check is simple and robust, no database query.</p>\n<p>Delay is just datetime.datetime.utcnow() - OSM timestamp in state.txt (usaualy /home/mapnik.osmosis/state.txt)</p>\n<p>More infos here <a href=\"http://wiki.openstreetmap.org/wiki/Minutely_Mapnik\" rel=\"nofollow\">http://wiki.openstreetmap.org/wiki/Minutely_Mapnik</a></p>\n<p>We fake 3 state files with three different timestamp (see tests/ directory).</p>\n<p>We have to fake now according to tests files states.</p>\n<p>now = datetime(2012, 10, 23, 20, 4, 30) # see test function</p>\n<p>Real check is datetime.datetime.utcnow()</p>\n<p>Warning and critical thresholds are respectively 3600 and 21600 seconds (1 and 6 hours)</p>\n<p>Time to work</p>\n<p>necessary stuff:</p>\n<pre>&gt;&gt;&gt; import glob\n&gt;&gt;&gt; import subprocess\n&gt;&gt;&gt; from datetime import datetime\n&gt;&gt;&gt; from pprint import pprint\n</pre>\n<p>a funtion to get lines from fake state files:</p>\n<pre>&gt;&gt;&gt; def get_lines_from_file(filename):\n...     with open(filename) as state_file:\n...         return state_file.read().splitlines()\n...\n</pre>\n<div id=\"usage\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Usage</a></h3>\n<p>-h option</p>\n<pre>&gt;&gt;&gt; cmd_h = \"bin/test_check_planetdiff -h\"\n&gt;&gt;&gt; p_help = subprocess.Popen(cmd_h.split(), stdout=subprocess.PIPE)\n&gt;&gt;&gt; pprint(p_help.stdout.readlines())\n['Usage: test_check_planetdiff [options]\\n',\n '\\n',\n 'Options:\\n',\n '  --state-file=STATEFILE\\n',\n '  -p                    return performance data\\n',\n '  -v, --verbose         \\n',\n '  -H HOSTNAME, --hostname=HOSTNAME\\n',\n '  -w WARNING, --warning=WARNING\\n',\n '  -c CRITICAL, --critical=CRITICAL\\n',\n '  -t TIMEOUT, --timeout=TIMEOUT\\n',\n '  -h, --help            show this help message and exit\\n']\n</pre>\n</div>\n<div id=\"checks\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Checks</a></h3>\n<p>Less than 1 hour returns OK:</p>\n<pre>&gt;&gt;&gt; state_file_ok = \"src/paulla/checkplanetdiff/tests/state_ok.txt\"\n&gt;&gt;&gt; pprint(get_lines_from_file(state_file_ok))\n['#Tue Oct 23 22:05:12 CEST 2012',\n 'sequenceNumber=59592',\n 'timestamp=2012-10-23T20\\\\:04\\\\:02Z']\n\n&gt;&gt;&gt; cmd_ok = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s\" % state_file_ok\n&gt;&gt;&gt; p_ok = subprocess.Popen(cmd_ok.split(), stdout=subprocess.PIPE)\n</pre>\n<p>Status code is 0 -&gt; OK:</p>\n<pre>&gt;&gt;&gt; p_ok.wait()\n0\n</pre>\n<p>String output:</p>\n<pre>&gt;&gt;&gt; p_ok.stdout.read()\n'OK: delay : 28, sequence number : 59592\\n'\n</pre>\n<p>with perfdata option:</p>\n<pre>&gt;&gt;&gt; cmd_ok = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s -p\" % state_file_ok\n&gt;&gt;&gt; p_ok = subprocess.Popen(cmd_ok.split(), stdout=subprocess.PIPE)\n&gt;&gt;&gt; p_ok.stdout.read()\n'OK: delay : 28, sequence number : 59592|delayed=28s;3600;21600;;\\n'\n</pre>\n<p>Delay between 1 hour and 6 returns WARNING:</p>\n<pre>&gt;&gt;&gt; state_file_warn = \"src/paulla/checkplanetdiff/tests/state_warning.txt\"\n&gt;&gt;&gt; pprint(get_lines_from_file(state_file_warn))\n['#Tue Oct 23 18:25:07 CEST 2012',\n 'sequenceNumber=59372',\n 'timestamp=2012-10-23T16\\\\:24\\\\:03Z']\n\n&gt;&gt;&gt; cmd_warn = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s\" % state_file_warn\n&gt;&gt;&gt; p_warn = subprocess.Popen(cmd_warn.split(), stdout=subprocess.PIPE)\n</pre>\n<p>Status code is 1 -&gt; WARNING:</p>\n<pre>&gt;&gt;&gt; p_warn.wait()\n1\n</pre>\n<p>String output:</p>\n<pre>&gt;&gt;&gt; p_warn.stdout.read()\n'WARN: delay : 13227, sequence number : 59372\\n'\n</pre>\n<p>with perfdata option:</p>\n<pre>&gt;&gt;&gt; cmd_warn = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s -p\" % state_file_warn\n&gt;&gt;&gt; p_warn = subprocess.Popen(cmd_warn.split(), stdout=subprocess.PIPE)\n&gt;&gt;&gt; p_warn.stdout.read()\n'WARN: delay : 13227, sequence number : 59372|delayed=13227s;3600;21600;;\\n'\n</pre>\n<p>More than 6 hours returns CRITICAL:</p>\n<pre>&gt;&gt;&gt; state_file_crit = \"src/paulla/checkplanetdiff/tests/state_critical.txt\"\n&gt;&gt;&gt; pprint(get_lines_from_file(state_file_crit))\n['#Tue Oct 23 12:25:07 CEST 2012',\n 'sequenceNumber=59012',\n 'timestamp=2012-10-23T10\\\\:24\\\\:03Z']\n\n&gt;&gt;&gt; cmd_crit = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s\" % state_file_crit\n&gt;&gt;&gt; p_crit = subprocess.Popen(cmd_crit.split(), stdout=subprocess.PIPE)\n</pre>\n<p>Status code is 2 -&gt; CRITICAL:</p>\n<pre>&gt;&gt;&gt; p_crit.wait()\n2\n</pre>\n<p>String output:</p>\n<pre>&gt;&gt;&gt; p_crit.stdout.read()\n'CRIT: delay : 34827, sequence number : 59012\\n'\n</pre>\n<p>with perfdata option:</p>\n<pre>&gt;&gt;&gt; cmd_crit = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file %s -p\" % state_file_crit\n&gt;&gt;&gt; p_crit = subprocess.Popen(cmd_crit.split(), stdout=subprocess.PIPE)\n&gt;&gt;&gt; p_crit.stdout.read()\n'CRIT: delay : 34827, sequence number : 59012|delayed=34827s;3600;21600;;\\n'\n</pre>\n<p>Non existant state file returns CRITICAL:</p>\n<pre>&gt;&gt;&gt; cmd_crit_non_exist_file = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file src/non_existant.txt\"\n&gt;&gt;&gt; p_crit_nonexist = subprocess.Popen(cmd_crit_non_exist_file.split(), stdout=subprocess.PIPE)\n</pre>\n<p>Status code is 2 -&gt; CRITICAL:</p>\n<pre>&gt;&gt;&gt; p_crit_nonexist.wait()\n2\n</pre>\n<p>String output:</p>\n<pre>&gt;&gt;&gt; p_crit_nonexist.stdout.read()\n'CRIT: delay : 21601, sequence number : 0\\n'\n</pre>\n<p>with perfdata option:</p>\n<pre>&gt;&gt;&gt; cmd_crit_non_exist_file = \"bin/test_check_planetdiff -w 0.0:3600.0 -c 0.0:21600.0 --state-file src/non_existant.txt -p\"\n&gt;&gt;&gt; p_crit_nonexist = subprocess.Popen(cmd_crit_non_exist_file.split(), stdout=subprocess.PIPE)\n&gt;&gt;&gt; p_crit_nonexist.stdout.read()\n'CRIT: delay : 21601, sequence number : 0|delayed=21601s;3600;21600;;\\n'\n</pre>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id12\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id13\" rel=\"nofollow\">0.4 (2012-10-27)</a></h3>\n<ul>\n<li>fix README error</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id14\" rel=\"nofollow\">0.3 (2012-10-27)</a></h3>\n<ul>\n<li>Nothing changed yet.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id15\" rel=\"nofollow\">0.2 (2012-10-27)</a></h3>\n<ul>\n<li>improve help usage and corresponding tests</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id16\" rel=\"nofollow\">0.1 (2012-10-26)</a></h3>\n<ul>\n<li>Firts version used in production at <a href=\"http://www.paulla.asso.org\" rel=\"nofollow\">http://www.paulla.asso.org</a>\n[Jean-Philippe Camguilhem]</li>\n</ul>\n</div>\n</div>\n<div id=\"credits\">\n<h2><a href=\"#id17\" rel=\"nofollow\">Credits</a></h2>\n<p><a href=\"http://www.paulla.asso.fr\" rel=\"nofollow\"><img alt=\"paulla\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/55d230ee97881ec2fde3c36124b9e73221482501/687474703a2f2f7777772e7061756c6c612e6173736f2e66722f6c6f676f2e706e67\"></a></p>\n<blockquote>\n<ul>\n<li><a href=\"http://www.paulla.asso.fr\" rel=\"nofollow\">PauLLA</a></li>\n<li><a href=\"mailto:contact%40paulla.asso.fr\">Contact us</a></li>\n</ul>\n</blockquote>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id18\" rel=\"nofollow\">Contributors</a></h2>\n<p>Jean-Philippe Camguilhem, Author</p>\n</div>\n\n          </div>"}, "last_serial": 796068, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "9759654b5fac0cf09f2eb534ab0647fe", "sha256": "775f6d8ed53e5fda0ec6f34fb917202b944b3a383d099ed1b8e9c1491fcfd556"}, "downloads": -1, "filename": "paulla.checkplanetdiff-0.1.zip", "has_sig": false, "md5_digest": "9759654b5fac0cf09f2eb534ab0647fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15427, "upload_time": "2012-10-26T16:23:05", "upload_time_iso_8601": "2012-10-26T16:23:05.363998Z", "url": "https://files.pythonhosted.org/packages/3e/d5/dd7bfd9e0cd91cf2f12eb6eacb2fe3c363bf74c322cbaf26ec7c8f30d05a/paulla.checkplanetdiff-0.1.zip", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "5e3aced4b76f720f521d90038a2790dc", "sha256": "4bcc3b10b24bb40069345be7fa04a7862595d420b9c15a611f84a7470843d2aa"}, "downloads": -1, "filename": "paulla.checkplanetdiff-0.4.zip", "has_sig": false, "md5_digest": "5e3aced4b76f720f521d90038a2790dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16481, "upload_time": "2012-10-27T09:54:04", "upload_time_iso_8601": "2012-10-27T09:54:04.902037Z", "url": "https://files.pythonhosted.org/packages/a3/36/ea2df336a715c38f739b89242309dc653ca5278eb742f5269e241f8b6e8e/paulla.checkplanetdiff-0.4.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5e3aced4b76f720f521d90038a2790dc", "sha256": "4bcc3b10b24bb40069345be7fa04a7862595d420b9c15a611f84a7470843d2aa"}, "downloads": -1, "filename": "paulla.checkplanetdiff-0.4.zip", "has_sig": false, "md5_digest": "5e3aced4b76f720f521d90038a2790dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16481, "upload_time": "2012-10-27T09:54:04", "upload_time_iso_8601": "2012-10-27T09:54:04.902037Z", "url": "https://files.pythonhosted.org/packages/a3/36/ea2df336a715c38f739b89242309dc653ca5278eb742f5269e241f8b6e8e/paulla.checkplanetdiff-0.4.zip", "yanked": false}], "timestamp": "Fri May  8 02:57:46 2020"}