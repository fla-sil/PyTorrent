{"info": {"author": "Khaled Al-Ansari", "author_email": "khaledelansari@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.7", "Framework :: Django :: 1.8", "Framework :: Django :: 1.9", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "Django-Truncate\r\n===============\r\n\r\nDjango-Truncate is a simple library that will add the ability to empty\r\nany given model in any app within your django project, in a more SQL related\r\nwords it will **TRUNCATE** the **TABLE** with a simple command::\r\n\r\n    python manage.py truncate --apps myapp --models model1 model2\r\n\r\nInstallation\r\n------------\r\n\r\nAfter you move to your django project main directory follow these simple steps\r\n\r\n1. In your terminal/command line run the following command::\r\n\r\n        pip install django-truncate\r\n\r\n2. Add \"django-truncate\" to your **INSTALLED_APPS** in the settings.py file::\r\n\r\n        INSTALLED_APPS = [\r\n          ...\r\n          'django_truncate',\r\n        ]\r\n\r\n3. And that's it! you're now ready to use it.\r\n\r\nUsage & Options\r\n---------------\r\n\r\n1. You can truncate all of the tables in one app or multiple apps using **--apps**::\r\n\r\n        python manage.py truncate --apps appone apptwo\r\n\r\n2. If you want you can truncate a specific table(s) in an app using **--models**::\r\n\r\n        python manage.py truncate --apps appone --models Model3\r\n\r\n   Note if you don't write the name of the app the truncate will stop and you'll see an error message in the terminal\r\n\r\nRemember you can always see the instructions by running::\r\n\r\n    python manage.py truncate -h\r\n\r\nLicense\r\n-------\r\n\r\nThis project is under the BSD License.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/KhaledElAnsari/django-truncate", "keywords": "django truncate database sql command-line terminal", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-truncate", "package_url": "https://pypi.org/project/django-truncate/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-truncate/", "project_urls": {"Homepage": "https://github.com/KhaledElAnsari/django-truncate"}, "release_url": "https://pypi.org/project/django-truncate/0.1/", "requires_dist": null, "requires_python": null, "summary": "A simple Django app to help developers truncate specific models.", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Django-Truncate is a simple library that will add the ability to empty\nany given model in any app within your django project, in a more SQL related\nwords it will <strong>TRUNCATE</strong> the <strong>TABLE</strong> with a simple command:</p>\n<pre>python manage.py truncate --apps myapp --models model1 model2\n</pre>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>After you move to your django project main directory follow these simple steps</p>\n<ol>\n<li><p>In your terminal/command line run the following command:</p>\n<pre>pip install django-truncate\n</pre>\n</li>\n<li><p>Add \u201cdjango-truncate\u201d to your <strong>INSTALLED_APPS</strong> in the settings.py file:</p>\n<pre>INSTALLED_APPS = [\n  ...\n  'django_truncate',\n]\n</pre>\n</li>\n<li><p>And that\u2019s it! you\u2019re now ready to use it.</p>\n</li>\n</ol>\n</div>\n<div id=\"usage-options\">\n<h2>Usage &amp; Options</h2>\n<ol>\n<li><p>You can truncate all of the tables in one app or multiple apps using <strong>\u2013apps</strong>:</p>\n<pre>python manage.py truncate --apps appone apptwo\n</pre>\n</li>\n<li><p>If you want you can truncate a specific table(s) in an app using <strong>\u2013models</strong>:</p>\n<pre>python manage.py truncate --apps appone --models Model3\n</pre>\n<p>Note if you don\u2019t write the name of the app the truncate will stop and you\u2019ll see an error message in the terminal</p>\n</li>\n</ol>\n<p>Remember you can always see the instructions by running:</p>\n<pre>python manage.py truncate -h\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is under the BSD License.</p>\n</div>\n\n          </div>"}, "last_serial": 2090865, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "1b6f9fb1fefb853cafff0005ada2f2b3", "sha256": "e6b153145ee898c792bc460031727ddc3518bc7594a58c8935dc4d45c46f06b5"}, "downloads": -1, "filename": "django-truncate-0.1.tar.gz", "has_sig": false, "md5_digest": "1b6f9fb1fefb853cafff0005ada2f2b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4277, "upload_time": "2016-04-24T22:44:21", "upload_time_iso_8601": "2016-04-24T22:44:21.361992Z", "url": "https://files.pythonhosted.org/packages/21/56/451a87bc8ee084c6600cce91d334cae642c5da2d067b944eb54f816d1f1b/django-truncate-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b6f9fb1fefb853cafff0005ada2f2b3", "sha256": "e6b153145ee898c792bc460031727ddc3518bc7594a58c8935dc4d45c46f06b5"}, "downloads": -1, "filename": "django-truncate-0.1.tar.gz", "has_sig": false, "md5_digest": "1b6f9fb1fefb853cafff0005ada2f2b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4277, "upload_time": "2016-04-24T22:44:21", "upload_time_iso_8601": "2016-04-24T22:44:21.361992Z", "url": "https://files.pythonhosted.org/packages/21/56/451a87bc8ee084c6600cce91d334cae642c5da2d067b944eb54f816d1f1b/django-truncate-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:18 2020"}