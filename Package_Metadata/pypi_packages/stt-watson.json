{"info": {"author": "Arthur Halet", "author_email": "arthurh.halet@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Topic :: Multimedia :: Sound/Audio :: Analysis", "Topic :: Multimedia :: Sound/Audio :: Capture/Recording", "Topic :: Software Development :: Libraries"], "description": "# stt-watson\nContinuous speech to text using watson in python with websocket and record from microphone\n\n## Requirements\n\n- **Python 2.7**\n- **Pip**\n- **portaudio**, can be installed with `brew install portaudio` (mac) or `apt-get install portaudio19-dev`(linux)\n\n## Installation\n\nInstall with pip: `pip install stt-watson`\n\n## Run the playground\n\nSimply run in command line: `stt-watson`\n\n**At the first launch it will create a config file located to `~/.config-stt-watson.yml` and ask you your watson credentials**\n\n## Usage for developers\n\nBootstrap example:\n\n```python\nfrom stt_watson.SttWatson import SttWatson\nfrom stt_watson.SttWatsonAbstractListener import SttWatsonAbstractListener\n\n\"\"\"\nExample of listener to use data given by stt-watson (stt-watson notify hypothesis to his listeners when he receive it)\n\nHypothesis format:\n{\n    'confidence': '0.1' // confidence of the sentence or words if exist\n    'transcript': 'the transcription of your voice'\n}\n\"\"\"\nclass MyListener(SttWatsonAbstractListener):\n    def __init__(self):\n        pass\n    \"\"\"\n    This give hypothesis from watson when your sentence is finished\n    \"\"\"\n    def listenHypothesis(self, hypothesis):\n        print \"Hypothesis: {0}\".format(hypothesis)\n\n    \"\"\"\n    This give the json received from watson\n    \"\"\"\n    def listenPayload(self, payload):\n        print(u\"Text message received: {0}\".format(payload))\n    \"\"\"\n    This give hypothesis from watson when your sentence is not finished\n    \"\"\"\n    def listenInterimHypothesis(self, interimHypothesis):\n        print \"Interim hypothesis: {0}\".format(interimHypothesis)\n\n\nmyListener = MyListener()\nsttWatson = SttWatson('watson_user', 'watson_password')\nsttWatson.addListener(myListener)\nsttWatson.run()\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/HomeHabbit/stt-watson", "keywords": "text-to-speech watson websocket", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "stt-watson", "package_url": "https://pypi.org/project/stt-watson/", "platform": "ALL", "project_url": "https://pypi.org/project/stt-watson/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/HomeHabbit/stt-watson"}, "release_url": "https://pypi.org/project/stt-watson/1.0.3/", "requires_dist": null, "requires_python": null, "summary": "Continuous speech to text using watson in python with websocket and record from microphone", "version": "1.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            # stt-watson<br>Continuous speech to text using watson in python with websocket and record from microphone<br><br>## Requirements<br><br>- **Python 2.7**<br>- **Pip**<br>- **portaudio**, can be installed with `brew install portaudio` (mac) or `apt-get install portaudio19-dev`(linux)<br><br>## Installation<br><br>Install with pip: `pip install stt-watson`<br><br>## Run the playground<br><br>Simply run in command line: `stt-watson`<br><br>**At the first launch it will create a config file located to `~/.config-stt-watson.yml` and ask you your watson credentials**<br><br>## Usage for developers<br><br>Bootstrap example:<br><br>```python<br>from stt_watson.SttWatson import SttWatson<br>from stt_watson.SttWatsonAbstractListener import SttWatsonAbstractListener<br><br>\"\"\"<br>Example of listener to use data given by stt-watson (stt-watson notify hypothesis to his listeners when he receive it)<br><br>Hypothesis format:<br>{<br>    'confidence': '0.1' // confidence of the sentence or words if exist<br>    'transcript': 'the transcription of your voice'<br>}<br>\"\"\"<br>class MyListener(SttWatsonAbstractListener):<br>    def __init__(self):<br>        pass<br>    \"\"\"<br>    This give hypothesis from watson when your sentence is finished<br>    \"\"\"<br>    def listenHypothesis(self, hypothesis):<br>        print \"Hypothesis: {0}\".format(hypothesis)<br><br>    \"\"\"<br>    This give the json received from watson<br>    \"\"\"<br>    def listenPayload(self, payload):<br>        print(u\"Text message received: {0}\".format(payload))<br>    \"\"\"<br>    This give hypothesis from watson when your sentence is not finished<br>    \"\"\"<br>    def listenInterimHypothesis(self, interimHypothesis):<br>        print \"Interim hypothesis: {0}\".format(interimHypothesis)<br><br><br>myListener = MyListener()<br>sttWatson = SttWatson('watson_user', 'watson_password')<br>sttWatson.addListener(myListener)<br>sttWatson.run()<br>```\n          </div>"}, "last_serial": 1929371, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "b4a9950b99528ba27d2a4176676cc6b0", "sha256": "2d6693577239d1f52a2ae475bb007748bbbc61126f9922820dfa12ec9972af78"}, "downloads": -1, "filename": "stt_watson-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b4a9950b99528ba27d2a4176676cc6b0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14812, "upload_time": "2016-01-10T05:31:54", "upload_time_iso_8601": "2016-01-10T05:31:54.678530Z", "url": "https://files.pythonhosted.org/packages/11/6b/90ff9c99c62374ec431940786e9649ca2ff8c6db3e633cac394aba7dcfbd/stt_watson-1.0.1-py2.py3-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ce743688eca22800cb6b59a855a12e03", "sha256": "4dbd12c7e39fed7ff487e673771328e0eff3e9ae0ab7b4c4950e295aedc12916"}, "downloads": -1, "filename": "stt_watson-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce743688eca22800cb6b59a855a12e03", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14802, "upload_time": "2016-01-29T14:15:53", "upload_time_iso_8601": "2016-01-29T14:15:53.845630Z", "url": "https://files.pythonhosted.org/packages/df/7b/31b6e01b1e30333b2a345bb9c45f315ccabd9e307f14c89a1a9a4b665636/stt_watson-1.0.3-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce743688eca22800cb6b59a855a12e03", "sha256": "4dbd12c7e39fed7ff487e673771328e0eff3e9ae0ab7b4c4950e295aedc12916"}, "downloads": -1, "filename": "stt_watson-1.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce743688eca22800cb6b59a855a12e03", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14802, "upload_time": "2016-01-29T14:15:53", "upload_time_iso_8601": "2016-01-29T14:15:53.845630Z", "url": "https://files.pythonhosted.org/packages/df/7b/31b6e01b1e30333b2a345bb9c45f315ccabd9e307f14c89a1a9a4b665636/stt_watson-1.0.3-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:00:59 2020"}