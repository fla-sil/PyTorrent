{"info": {"author": "Samuel Monnier", "author_email": "samuel.monnier@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "timeseriescv\n------------\n\nThis package implements two cross-validation algorithms suitable to evaluate machine learning models based on time series\ndatasets where each sample is tagged with a prediction time and an evaluation time.\n\nRessources\n~~~~~~~~~~\n\n* `A Medium post <https://medium.com/@samuel.monnier/cross-validation-tools-for-time-series-ffa1a5a09bf9>`_  providing some motivation and explaining the cross-validation algorithms implemented here in more detail.\n\n* `Advances in financial machine learning <https://www.wiley.com/en-us/Advances+in+Financial+Machine+Learning-p-9781119482086>`_ by Marcos Lopez de Prado. An excellent book that inspired this package.\n\n* `Github repository <https://github.com/sam31415/timeseriescv/>`_\n\n\nInstallation\n~~~~~~~~~~~~\n\ntimeseriescv can be installed using pip:\n\n    >>> pip install timeseriescv\n\nContent\n~~~~~~~\n\nFor now the package contains two main classes handling cross-validation:\n\n* ``PurgedWalkForwardCV``: Walk-forward cross-validation with purging.\n* ``CombPurgedKFoldCV``: Combinatorial cross-validation with purging and embargoing.\n\nRemarks concerning the API\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe API is as similar to the scikit-learn API as possible. Like the scikit-learn cross-validation classes, the ``split``\nmethod is a generator that yields a pair of numpy arrays containing the positional indices of the samples in the train\nand validation set, respectively. The main differences with the scikit-learn API are:\n\n* The ``split`` method takes as arguments not only the predictor values ``X``, but also the prediction times ``pred_times`` and the evaluation times ``eval_times`` of each sample.\n* To stay as close to the scikit-learn API as possible, this data is passed as separate parameters. But in order to ensure that they are properly aligned, ``X``, ``pred_times`` and ``eval_times`` are required to be pandas DataFrames/Series sharing the same index.\n\nCheck the docstrings of the cross-validation classes for more information.\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sam31415/timeseriescv", "keywords": "machine-learning cross-validation scikit-learn time-series", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "timeseriescv", "package_url": "https://pypi.org/project/timeseriescv/", "platform": "", "project_url": "https://pypi.org/project/timeseriescv/", "project_urls": {"Homepage": "https://github.com/sam31415/timeseriescv"}, "release_url": "https://pypi.org/project/timeseriescv/0.2/", "requires_dist": null, "requires_python": "", "summary": "Scikit-learn style cross-validation classes for time series data", "version": "0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This package implements two cross-validation algorithms suitable to evaluate machine learning models based on time series\ndatasets where each sample is tagged with a prediction time and an evaluation time.</p>\n<div id=\"ressources\">\n<h2>Ressources</h2>\n<ul>\n<li><a href=\"https://medium.com/@samuel.monnier/cross-validation-tools-for-time-series-ffa1a5a09bf9\" rel=\"nofollow\">A Medium post</a>  providing some motivation and explaining the cross-validation algorithms implemented here in more detail.</li>\n<li><a href=\"https://www.wiley.com/en-us/Advances+in+Financial+Machine+Learning-p-9781119482086\" rel=\"nofollow\">Advances in financial machine learning</a> by Marcos Lopez de Prado. An excellent book that inspired this package.</li>\n<li><a href=\"https://github.com/sam31415/timeseriescv/\" rel=\"nofollow\">Github repository</a></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>timeseriescv can be installed using pip:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; pip install timeseriescv\n</pre>\n</blockquote>\n</div>\n<div id=\"content\">\n<h2>Content</h2>\n<p>For now the package contains two main classes handling cross-validation:</p>\n<ul>\n<li><tt>PurgedWalkForwardCV</tt>: Walk-forward cross-validation with purging.</li>\n<li><tt>CombPurgedKFoldCV</tt>: Combinatorial cross-validation with purging and embargoing.</li>\n</ul>\n</div>\n<div id=\"remarks-concerning-the-api\">\n<h2>Remarks concerning the API</h2>\n<p>The API is as similar to the scikit-learn API as possible. Like the scikit-learn cross-validation classes, the <tt>split</tt>\nmethod is a generator that yields a pair of numpy arrays containing the positional indices of the samples in the train\nand validation set, respectively. The main differences with the scikit-learn API are:</p>\n<ul>\n<li>The <tt>split</tt> method takes as arguments not only the predictor values <tt>X</tt>, but also the prediction times <tt>pred_times</tt> and the evaluation times <tt>eval_times</tt> of each sample.</li>\n<li>To stay as close to the scikit-learn API as possible, this data is passed as separate parameters. But in order to ensure that they are properly aligned, <tt>X</tt>, <tt>pred_times</tt> and <tt>eval_times</tt> are required to be pandas DataFrames/Series sharing the same index.</li>\n</ul>\n<p>Check the docstrings of the cross-validation classes for more information.</p>\n</div>\n\n          </div>"}, "last_serial": 4249786, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "bc64557af0bec1811fbf18d46a6f130d", "sha256": "15c249987d870fa1c0d926c57e51203247891f81082e7709c6da9eb8d7ec1df7"}, "downloads": -1, "filename": "timeseriescv-0.1.tar.gz", "has_sig": false, "md5_digest": "bc64557af0bec1811fbf18d46a6f130d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5980, "upload_time": "2018-09-06T22:21:40", "upload_time_iso_8601": "2018-09-06T22:21:40.447037Z", "url": "https://files.pythonhosted.org/packages/da/83/ab312c12618f1b0f6d16cc0c86fd28d829d0f8acfb221bd12a8228a4d016/timeseriescv-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "87787d78e9af155d7f41426f5b402905", "sha256": "6937e6b10eb5c7dcc0cf790f4c40b6abdcf925f1f67358f917d605a2f8c5cf5e"}, "downloads": -1, "filename": "timeseriescv-0.2.tar.gz", "has_sig": false, "md5_digest": "87787d78e9af155d7f41426f5b402905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6733, "upload_time": "2018-09-07T19:42:59", "upload_time_iso_8601": "2018-09-07T19:42:59.860599Z", "url": "https://files.pythonhosted.org/packages/a2/13/37fe80a5f6ddac54899ad4ccc4aea1a838a1d7bc2b9342bd4a2a42ea0680/timeseriescv-0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "87787d78e9af155d7f41426f5b402905", "sha256": "6937e6b10eb5c7dcc0cf790f4c40b6abdcf925f1f67358f917d605a2f8c5cf5e"}, "downloads": -1, "filename": "timeseriescv-0.2.tar.gz", "has_sig": false, "md5_digest": "87787d78e9af155d7f41426f5b402905", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6733, "upload_time": "2018-09-07T19:42:59", "upload_time_iso_8601": "2018-09-07T19:42:59.860599Z", "url": "https://files.pythonhosted.org/packages/a2/13/37fe80a5f6ddac54899ad4ccc4aea1a838a1d7bc2b9342bd4a2a42ea0680/timeseriescv-0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:53:26 2020"}