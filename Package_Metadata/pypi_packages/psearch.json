{"info": {"author": "Alina Kutlushina, Pavel Polishchuk", "author_email": "alina.kutlushina@pharminnotech.com, pavel_polishchuk@ukr.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Chemistry"], "description": "# PSearch - 3D ligand-based pharmacophore modeling\n\nPSearch is a tool to generate 3D ligand-based pharmacophore models and perform virtual screening with them.\n\n## Installation\n\n```bash\npip install psearch\n```\n\n## Dependency\n\n`pmapper >= 0.3.1`\n\n## Example\n\n### Creation of ligand-based pharmacophore models\nIt is recommended to create an empty dir which would be your `$PROJECT_DIR` and copy an input file to that location.  \nThere are two steps of pharmacophore model generation.  \n\n1. Dataset preparation. \n\n```python\nprepare_datatset -i $PROJECT_DIR/input.smi -c 4\n```\n`-i` - path to the input file  \n`-c` - number of CPUs to use  \nThere are some other arguments which one can use. Invoke script with `-h` key to get full information.  \n\nThe script takes as input a tab-separated SMILES file containing `SMILES`, `compound id`, `activity` columns without a header. \nThe third column should contain a word `active` or `inactive`.\nThe script splits input compounds on active and inactive subsets, generates stereoisomers and conformers, creates databases of active and inactive compounds with labeled pharmacophore features.  \n\n2. Model building.  \n\n```python\npsearch -p $PROJECT_DIR -c 4\n```\n`-p` - path to the project dir  \n`-c`- number of CPUs to use\n\nThere are two other arguments which are worth to mention:  \n`-t` - threshold for compound clustering to create training sets. Default: 0.4.  \n`-ts` - strategies to create training sets. `1` - a single training set will be created from centroids of individual clusters (capturing a common binding mode for all compounds). `2` - multiple training sets will be created, one per cluster (capturing individual binding modes for compound clusters).\nBy default both strategies are used.  \n\n### Virtual screening with pharmacophore models \n\n1. Database creation. \n\nThe script takes as input a tab-separated SMILES file containing `SMILES` and `compound id` columns.\n\n```python\nprepare_db -i compounds.smi -o compounds.db -c 4 -v\n```\n`-i` - path to the input file  \n`-c` - number of CPUs to use\n`-v` - print progress  \nThere are other arguments available to tweak database generation. To get the full list of arguments invoke `-h` key.\n\n2. Virtual screening.\n\n```python\nscreen_db -d compounds.db -q $PROJECT_DIR/models/ -o screen_results/ -c 4\n```\n`-d` - input generated SQLite database  \n`-q` - pharmacophore model or models or a directory with models   \nIf a directory would be specified all pma- and xyz-files will be recognized as pharmacophores and will be used for screening  \n`-o` - path to an output directory if multiple models were supplied for screening or a path to a text file    \n`-c`- number of CPUs to use\n\n## Documentation\n\nAll scripts have `-h` argument to retrieve descriptions of all available options and arguments.\n\n## Authors\nAlina Kutlushina, Pavel Polishchuk\n\n## Citation\nLigand-Based Pharmacophore Modeling Using Novel 3D Pharmacophore Signatures  \nAlina Kutlushina, Aigul Khakimova, Timur Madzhidov, Pavel Polishchuk  \n*Molecules* **2018**, 23(12), 3094  \nhttps://doi.org/10.3390/molecules23123094\n\n## License\nBSD-3 clause\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/meddwl/psearch", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "psearch", "package_url": "https://pypi.org/project/psearch/", "platform": "", "project_url": "https://pypi.org/project/psearch/", "project_urls": {"Homepage": "https://github.com/meddwl/psearch"}, "release_url": "https://pypi.org/project/psearch/0.0.4/", "requires_dist": ["pmapper (>=0.3)"], "requires_python": ">=3.6", "summary": "PSearch: ligand-based pharmacophore modeling and screening", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PSearch - 3D ligand-based pharmacophore modeling</h1>\n<p>PSearch is a tool to generate 3D ligand-based pharmacophore models and perform virtual screening with them.</p>\n<h2>Installation</h2>\n<pre>pip install psearch\n</pre>\n<h2>Dependency</h2>\n<p><code>pmapper &gt;= 0.3.1</code></p>\n<h2>Example</h2>\n<h3>Creation of ligand-based pharmacophore models</h3>\n<p>It is recommended to create an empty dir which would be your <code>$PROJECT_DIR</code> and copy an input file to that location.<br>\nThere are two steps of pharmacophore model generation.</p>\n<ol>\n<li>Dataset preparation.</li>\n</ol>\n<pre><span class=\"n\">prepare_datatset</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"err\">$</span><span class=\"n\">PROJECT_DIR</span><span class=\"o\">/</span><span class=\"nb\">input</span><span class=\"o\">.</span><span class=\"n\">smi</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"mi\">4</span>\n</pre>\n<p><code>-i</code> - path to the input file<br>\n<code>-c</code> - number of CPUs to use<br>\nThere are some other arguments which one can use. Invoke script with <code>-h</code> key to get full information.</p>\n<p>The script takes as input a tab-separated SMILES file containing <code>SMILES</code>, <code>compound id</code>, <code>activity</code> columns without a header.\nThe third column should contain a word <code>active</code> or <code>inactive</code>.\nThe script splits input compounds on active and inactive subsets, generates stereoisomers and conformers, creates databases of active and inactive compounds with labeled pharmacophore features.</p>\n<ol>\n<li>Model building.</li>\n</ol>\n<pre><span class=\"n\">psearch</span> <span class=\"o\">-</span><span class=\"n\">p</span> <span class=\"err\">$</span><span class=\"n\">PROJECT_DIR</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"mi\">4</span>\n</pre>\n<p><code>-p</code> - path to the project dir<br>\n<code>-c</code>- number of CPUs to use</p>\n<p>There are two other arguments which are worth to mention:<br>\n<code>-t</code> - threshold for compound clustering to create training sets. Default: 0.4.<br>\n<code>-ts</code> - strategies to create training sets. <code>1</code> - a single training set will be created from centroids of individual clusters (capturing a common binding mode for all compounds). <code>2</code> - multiple training sets will be created, one per cluster (capturing individual binding modes for compound clusters).\nBy default both strategies are used.</p>\n<h3>Virtual screening with pharmacophore models</h3>\n<ol>\n<li>Database creation.</li>\n</ol>\n<p>The script takes as input a tab-separated SMILES file containing <code>SMILES</code> and <code>compound id</code> columns.</p>\n<pre><span class=\"n\">prepare_db</span> <span class=\"o\">-</span><span class=\"n\">i</span> <span class=\"n\">compounds</span><span class=\"o\">.</span><span class=\"n\">smi</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">compounds</span><span class=\"o\">.</span><span class=\"n\">db</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"mi\">4</span> <span class=\"o\">-</span><span class=\"n\">v</span>\n</pre>\n<p><code>-i</code> - path to the input file<br>\n<code>-c</code> - number of CPUs to use\n<code>-v</code> - print progress<br>\nThere are other arguments available to tweak database generation. To get the full list of arguments invoke <code>-h</code> key.</p>\n<ol>\n<li>Virtual screening.</li>\n</ol>\n<pre><span class=\"n\">screen_db</span> <span class=\"o\">-</span><span class=\"n\">d</span> <span class=\"n\">compounds</span><span class=\"o\">.</span><span class=\"n\">db</span> <span class=\"o\">-</span><span class=\"n\">q</span> <span class=\"err\">$</span><span class=\"n\">PROJECT_DIR</span><span class=\"o\">/</span><span class=\"n\">models</span><span class=\"o\">/</span> <span class=\"o\">-</span><span class=\"n\">o</span> <span class=\"n\">screen_results</span><span class=\"o\">/</span> <span class=\"o\">-</span><span class=\"n\">c</span> <span class=\"mi\">4</span>\n</pre>\n<p><code>-d</code> - input generated SQLite database<br>\n<code>-q</code> - pharmacophore model or models or a directory with models<br>\nIf a directory would be specified all pma- and xyz-files will be recognized as pharmacophores and will be used for screening<br>\n<code>-o</code> - path to an output directory if multiple models were supplied for screening or a path to a text file<br>\n<code>-c</code>- number of CPUs to use</p>\n<h2>Documentation</h2>\n<p>All scripts have <code>-h</code> argument to retrieve descriptions of all available options and arguments.</p>\n<h2>Authors</h2>\n<p>Alina Kutlushina, Pavel Polishchuk</p>\n<h2>Citation</h2>\n<p>Ligand-Based Pharmacophore Modeling Using Novel 3D Pharmacophore Signatures<br>\nAlina Kutlushina, Aigul Khakimova, Timur Madzhidov, Pavel Polishchuk<br>\n<em>Molecules</em> <strong>2018</strong>, 23(12), 3094<br>\n<a href=\"https://doi.org/10.3390/molecules23123094\" rel=\"nofollow\">https://doi.org/10.3390/molecules23123094</a></p>\n<h2>License</h2>\n<p>BSD-3 clause</p>\n\n          </div>"}, "last_serial": 6696643, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "ade2d4705814262b21b8e971e7c0defc", "sha256": "98978cbb6ecae23fb8fb17544bbb5dd8c7811fbd50f4af389ac2df28044fe585"}, "downloads": -1, "filename": "psearch-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ade2d4705814262b21b8e971e7c0defc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37474, "upload_time": "2019-11-02T12:53:04", "upload_time_iso_8601": "2019-11-02T12:53:04.528518Z", "url": "https://files.pythonhosted.org/packages/5a/b3/4cbbb635050d94a5a78a5927514267db942c729a3c62e9146732e91dfcac/psearch-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "54d07b284ff2ec3312a5e5464bc43a3f", "sha256": "82278c0c62f73269561d90bef7aadbab4795922778fef04b0724684464e626f0"}, "downloads": -1, "filename": "psearch-0.0.1.tar.gz", "has_sig": false, "md5_digest": "54d07b284ff2ec3312a5e5464bc43a3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26605, "upload_time": "2019-11-02T12:53:07", "upload_time_iso_8601": "2019-11-02T12:53:07.206863Z", "url": "https://files.pythonhosted.org/packages/ba/73/9b660447390233c0e864aa7956253c7f2f1c0a7e6c51bb39291f0060c491/psearch-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "900a2584bd09c9d57a25ec90d82e2ca8", "sha256": "51e9717f55d81e19721e3b25b849a9ca65301d68de3c7cebedb27d6279d1efb0"}, "downloads": -1, "filename": "psearch-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "900a2584bd09c9d57a25ec90d82e2ca8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 37492, "upload_time": "2019-11-02T13:01:27", "upload_time_iso_8601": "2019-11-02T13:01:27.467524Z", "url": "https://files.pythonhosted.org/packages/9f/ae/7078703d7c2b5473272ee3e155eedc3b0d4198a385fe1d2a6c6e39bc0bb8/psearch-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f375d5dcfa813ad8ee910fc623c4da03", "sha256": "65f44c055abc796491b6856900d632d7191273e3a98bca0ed73f6929d4094fd2"}, "downloads": -1, "filename": "psearch-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f375d5dcfa813ad8ee910fc623c4da03", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26634, "upload_time": "2019-11-02T13:01:29", "upload_time_iso_8601": "2019-11-02T13:01:29.413959Z", "url": "https://files.pythonhosted.org/packages/eb/33/e3bb0d73b8936ff72f9737aeac222a053e708d7afc74c03fb577291ff528/psearch-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b71d01ccc7e24174c3413737c6ea1186", "sha256": "b528af215ab3e95a7c9ca65c372ecac6eaf609dd7f77fac4ac4f9b3734d8b8b6"}, "downloads": -1, "filename": "psearch-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "b71d01ccc7e24174c3413737c6ea1186", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38055, "upload_time": "2020-01-14T20:56:54", "upload_time_iso_8601": "2020-01-14T20:56:54.707830Z", "url": "https://files.pythonhosted.org/packages/d4/2c/aadcb2eb081afb85a4e7a3142099ca77e5144a5166c06d0ecbe95106bbd9/psearch-0.0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bec0f95d8beb40dcc1620ca1fd6c12d", "sha256": "f7cde434b20fa454c7f7ea88c3f09be035e5506849f3cfe38405d71fc503b3d1"}, "downloads": -1, "filename": "psearch-0.0.3.tar.gz", "has_sig": false, "md5_digest": "8bec0f95d8beb40dcc1620ca1fd6c12d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27467, "upload_time": "2020-01-14T20:56:56", "upload_time_iso_8601": "2020-01-14T20:56:56.563317Z", "url": "https://files.pythonhosted.org/packages/b7/67/1e319f34e2eeb0557c810fbd61cecf845976fa188685e8d2c14bc31fdf49/psearch-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "c49a26bc1b388132746025d53d2dcf15", "sha256": "c6a444d343b66ad85e0c01c92cc8f17383ef08f799c0eac572808e8fbbac1bf7"}, "downloads": -1, "filename": "psearch-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c49a26bc1b388132746025d53d2dcf15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38092, "upload_time": "2020-02-25T13:54:08", "upload_time_iso_8601": "2020-02-25T13:54:08.951439Z", "url": "https://files.pythonhosted.org/packages/26/aa/89a3d679a953ca0b06553d2377439e79585a05f4fcd94ac8b84b740388f5/psearch-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad6cb1cc818fbbbb81bd5ac9f5e3aad4", "sha256": "7e5e41d2597f9a46638454c88c633167b556eccf271c0f9e20cbd2dde73da049"}, "downloads": -1, "filename": "psearch-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ad6cb1cc818fbbbb81bd5ac9f5e3aad4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27495, "upload_time": "2020-02-25T13:54:10", "upload_time_iso_8601": "2020-02-25T13:54:10.378779Z", "url": "https://files.pythonhosted.org/packages/6d/c3/b2d50c294a56e52209ced6754483908663ae3d85fa8129e011d15753f4e0/psearch-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c49a26bc1b388132746025d53d2dcf15", "sha256": "c6a444d343b66ad85e0c01c92cc8f17383ef08f799c0eac572808e8fbbac1bf7"}, "downloads": -1, "filename": "psearch-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c49a26bc1b388132746025d53d2dcf15", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 38092, "upload_time": "2020-02-25T13:54:08", "upload_time_iso_8601": "2020-02-25T13:54:08.951439Z", "url": "https://files.pythonhosted.org/packages/26/aa/89a3d679a953ca0b06553d2377439e79585a05f4fcd94ac8b84b740388f5/psearch-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad6cb1cc818fbbbb81bd5ac9f5e3aad4", "sha256": "7e5e41d2597f9a46638454c88c633167b556eccf271c0f9e20cbd2dde73da049"}, "downloads": -1, "filename": "psearch-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ad6cb1cc818fbbbb81bd5ac9f5e3aad4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 27495, "upload_time": "2020-02-25T13:54:10", "upload_time_iso_8601": "2020-02-25T13:54:10.378779Z", "url": "https://files.pythonhosted.org/packages/6d/c3/b2d50c294a56e52209ced6754483908663ae3d85fa8129e011d15753f4e0/psearch-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:00 2020"}