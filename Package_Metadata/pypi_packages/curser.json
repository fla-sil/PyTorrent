{"info": {"author": "Eddie Bruggemann", "author_email": "mrcyberfighter@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "==========\n**curser**\n==========\n--------------------------------\n**the turtle module for pygame**\n--------------------------------\n    +-----------------------------------------------------------------------------------+\n    |                                DESCRIPTION                                        |\n    +===================================================================================+\n    |                                                                                   |    \n    |    curser is a python module based and complementary to pygame,                   |    \n    |    who will give you analog functions as the turtle module implement              |\n    |    in a pygame display to make easier the generation and the animation of         |\n    |    forms like polygons, spirals, fractals and so soon.                            | \n    |    With abstraction of the coordinates computing throught an curser object,       |\n    |    analog to the turtle, whose orientation is setable throught rotation functions |\n    |    to the left or to the right from the number of wanted degrees with progressiv  |\n    |    animated stroke drawing or not animated functions whose color and width are    |\n    |    configurable.                                                                  |\n    |                                                                                   |\n    +-----------------------------------------------------------------------------------+\n        \n        - Instanciate the Curser class with the following arguments:\n        \n            * start_x: \n            \n                + the start x coordinate from the curser start position.\n                                                                                               \n            * start_y: \n            \n                + the start y coordinate from the curser start position.                 \n                                                                                       \n            * start_angle (default = 0)  : \n            \n                + the start orientation from the curser.            \n                                                                                            \n            * color (default = (0, 0, 0)): \n            \n                + the stroke and curser color given as a 3-elements tuple (red,green,blue).                              \n                                                                                             \n            * bg_color (default = (255, 255, 255)): \n            \n                + the display background color given as a 3-elements tuple (red,green,blue).          \n                    \n            * stroke_width (default = 1): \n            \n                + the stroke width in pixel(s) given as an integer.\n                     \n            * curser_down (default = True): \n            \n                + a boolean value if the curser is down. \n        \n        - to get an curser object who implement the following methods:\n        \n        - The module curser implement following functions for the displaying \n          of the curser, the strokes attributes and the background display screen:\n            \n            * show_curser()\n                \n                + Show the curser but does not put him down.\n                  \n                  ! The curser is visible per default. \n                  \n            * hide_curser()\n                \n                + Hide the curser but does not raise him up, \n                  is simply to hide the curser for driving.\n            \n            * set_stroke_color(color)\n                \n                + set stroke and curser color to the argument color                      \n                  who must be an 3-elements tuple (red,green,blue)  \n                      \n            * set_stroke_width(stroke_width)\n              \n                + set the stroke width to the stroke_width argument in pixels.\n                  \n                  ! The curser size will increase or decrease    \n                  if you change the stroke width.              \n                 \n            * set_bg_color(bg_color)\n            \n                + Change the display background.                                                                \n                  \n                  ! You have to set the show_hook() method in the\n                  mainloop to make it effectiv if you work with it.\n           \n        - The module curser implement following curser control functions \n          for the turtle curser control:\n            \n            * curser_up()\n            \n                + Raise the curser up and any curser moving method will not                                    \n                  draw but the direction changings are effectiv.                     \n                \n                  ! This method does not hide the curser.\n                \n                                             \n            * curser_down()\n                \n                + Put the curser down any moving method will draw on the display.              \n                  \n                  ! This method do not show the curser if he is hidden.          \n            \n            * set_curser_pos(x,y)\n            \n                + Set the curser position to the coordinates x,y.\n            \n        - The module curser implement following turtle moving and orientation functions:\n\n            * mv_forward(px)\n            \n                + Move the curser forward in the current direction from px pixels.\n                \n            * mv_backward(px)\n            \n                + Move the curser backward in the opposite direction to the current from px pixels.\n                \n            * mv_left(degrees)\n                \n                + Turn the curser left from argument degrees degrees and update the current direction.\n\n            * mv_right(degrees)\n            \n                + Turn the curser right from argument degrees degrees and update the current direction.\n                 \n            * anim_forward(px,speed)\n            \n                + Move the curser forward in current direction from one pixel every speed seconds (or fraction) from px pixels far what create an stroke drawning animation effect.\n                \n            * anim_backward(px,speed)  \n            \n                + move the curser backward in the opposite direction from one pixel every speed seconds (or fraction) from px pixels far what create an stroke drawning animation effect.\n\n        - The module curser implement following functions for use of personnalized \n          coordinates container(s) giving you the control for the displayed forms were\n          you can use to store your forms coordinates:\n\n            * get_coords_forward(px)\n            \n                + Return the coordinates for a forward moving result from px pixels without drawing a stroke or move the curser.\n                  \n                  ! Use this method with your own coordinates container.\n                \n            * get_coords_backward(px)\n            \n                + Return the coordinates for a backward moving result from px pixels without drawing a stroke or move the curser.\n                  \n                  ! Use this method with your own coordinates container. \n\n            * get_curser_pos()\n             \n                + return the current curser position as (x,y). \n            \n\n\n                                             \n        - Import the module with the import directive: \n                                        \n        ::  \n    \n            ###########################################################################\n            # Python 2.7.3 (default, Apr 20 2012, 22:39:59)                           #\n            # [GCC 4.6.3] on linux2                                                   #\n            # Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.  #\n            # >>> import curser                                                       #\n            # >>> # instanciate the Curser class like this                            #\n            # >>> turtle=curser.Curser(800/2,600/2)                                   #\n            # >>> # the object turtle will contains all the methods from the module   #\n            ###########################################################################\n  \n        - or import the Curser class with the from import directive:\n \n        :: \n       \n            ###########################################################################\n            # Python 2.7.3 (default, Apr 20 2012, 22:39:59)                           #\n            # [GCC 4.6.3] on linux2                                                   #\n            # Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.  #\n            # >>> from curser import Curser                                           #\n            # >>> turtle=Curser(800/2,600/2)                                          #\n            # >>> # the object turtle will contains all the methods from the module   #\n            ###########################################################################\n    \n\n        - And enjoy to use this module, master and animate many forms with curser: \n          the turtle module for pygame.\n        \n        - Some examples scripts are deliver with the module to show you the power of curser.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mrcyberfighter/curser", "keywords": null, "license": "GPL3", "maintainer": null, "maintainer_email": null, "name": "curser", "package_url": "https://pypi.org/project/curser/", "platform": "Linux,Windows", "project_url": "https://pypi.org/project/curser/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/mrcyberfighter/curser"}, "release_url": "https://pypi.org/project/curser/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "curser is a module based and complementary to pygame:\n      an turtle implementation for the pygame module.\n      With appeareance,control,drawing,orientation and coordinates retrieving functions.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <blockquote>\n<table>\n<colgroup>\n<col>\n</colgroup>\n<thead>\n<tr><th>DESCRIPTION</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>curser is a python module based and complementary to pygame,\nwho will give you analog functions as the turtle module implement\nin a pygame display to make easier the generation and the animation of\nforms like polygons, spirals, fractals and so soon.\nWith abstraction of the coordinates computing throught an curser object,\nanalog to the turtle, whose orientation is setable throught rotation functions\nto the left or to the right from the number of wanted degrees with progressiv\nanimated stroke drawing or not animated functions whose color and width are\nconfigurable.</td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<ul>\n<li><p>Instanciate the Curser class with the following arguments:</p>\n<blockquote>\n<ul>\n<li><p>start_x:</p>\n<blockquote>\n<ul>\n<li>the start x coordinate from the curser start position.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>start_y:</p>\n<blockquote>\n<ul>\n<li>the start y coordinate from the curser start position.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>start_angle (default = 0)  :</p>\n<blockquote>\n<ul>\n<li>the start orientation from the curser.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>color (default = (0, 0, 0)):</p>\n<blockquote>\n<ul>\n<li>the stroke and curser color given as a 3-elements tuple (red,green,blue).</li>\n</ul>\n</blockquote>\n</li>\n<li><p>bg_color (default = (255, 255, 255)):</p>\n<blockquote>\n<ul>\n<li>the display background color given as a 3-elements tuple (red,green,blue).</li>\n</ul>\n</blockquote>\n</li>\n<li><p>stroke_width (default = 1):</p>\n<blockquote>\n<ul>\n<li>the stroke width in pixel(s) given as an integer.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>curser_down (default = True):</p>\n<blockquote>\n<ul>\n<li>a boolean value if the curser is down.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>to get an curser object who implement the following methods:</p>\n</li>\n<li><p>The module curser implement following functions for the displaying\nof the curser, the strokes attributes and the background display screen:</p>\n<blockquote>\n<ul>\n<li><p>show_curser()</p>\n<blockquote>\n<ul>\n<li><p>Show the curser but does not put him down.</p>\n<p>! The curser is visible per default.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>hide_curser()</p>\n<blockquote>\n<ul>\n<li>Hide the curser but does not raise him up,\nis simply to hide the curser for driving.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>set_stroke_color(color)</p>\n<blockquote>\n<ul>\n<li>set stroke and curser color to the argument color\nwho must be an 3-elements tuple (red,green,blue)</li>\n</ul>\n</blockquote>\n</li>\n<li><p>set_stroke_width(stroke_width)</p>\n<blockquote>\n<ul>\n<li><p>set the stroke width to the stroke_width argument in pixels.</p>\n<p>! The curser size will increase or decrease\nif you change the stroke width.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>set_bg_color(bg_color)</p>\n<blockquote>\n<ul>\n<li><p>Change the display background.</p>\n<p>! You have to set the show_hook() method in the\nmainloop to make it effectiv if you work with it.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>The module curser implement following curser control functions\nfor the turtle curser control:</p>\n<blockquote>\n<ul>\n<li><p>curser_up()</p>\n<blockquote>\n<ul>\n<li><p>Raise the curser up and any curser moving method will not\ndraw but the direction changings are effectiv.</p>\n<p>! This method does not hide the curser.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>curser_down()</p>\n<blockquote>\n<ul>\n<li><p>Put the curser down any moving method will draw on the display.</p>\n<p>! This method do not show the curser if he is hidden.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>set_curser_pos(x,y)</p>\n<blockquote>\n<ul>\n<li>Set the curser position to the coordinates x,y.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>The module curser implement following turtle moving and orientation functions:</p>\n<blockquote>\n<ul>\n<li><p>mv_forward(px)</p>\n<blockquote>\n<ul>\n<li>Move the curser forward in the current direction from px pixels.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>mv_backward(px)</p>\n<blockquote>\n<ul>\n<li>Move the curser backward in the opposite direction to the current from px pixels.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>mv_left(degrees)</p>\n<blockquote>\n<ul>\n<li>Turn the curser left from argument degrees degrees and update the current direction.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>mv_right(degrees)</p>\n<blockquote>\n<ul>\n<li>Turn the curser right from argument degrees degrees and update the current direction.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>anim_forward(px,speed)</p>\n<blockquote>\n<ul>\n<li>Move the curser forward in current direction from one pixel every speed seconds (or fraction) from px pixels far what create an stroke drawning animation effect.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>anim_backward(px,speed)</p>\n<blockquote>\n<ul>\n<li>move the curser backward in the opposite direction from one pixel every speed seconds (or fraction) from px pixels far what create an stroke drawning animation effect.</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>The module curser implement following functions for use of personnalized\ncoordinates container(s) giving you the control for the displayed forms were\nyou can use to store your forms coordinates:</p>\n<blockquote>\n<ul>\n<li><p>get_coords_forward(px)</p>\n<blockquote>\n<ul>\n<li><p>Return the coordinates for a forward moving result from px pixels without drawing a stroke or move the curser.</p>\n<p>! Use this method with your own coordinates container.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>get_coords_backward(px)</p>\n<blockquote>\n<ul>\n<li><p>Return the coordinates for a backward moving result from px pixels without drawing a stroke or move the curser.</p>\n<p>! Use this method with your own coordinates container.</p>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>get_curser_pos()</p>\n<blockquote>\n<ul>\n<li>return the current curser position as (x,y).</li>\n</ul>\n</blockquote>\n</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Import the module with the import directive:</p>\n</li>\n</ul>\n<pre>###########################################################################\n# Python 2.7.3 (default, Apr 20 2012, 22:39:59)                           #\n# [GCC 4.6.3] on linux2                                                   #\n# Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.  #\n# &gt;&gt;&gt; import curser                                                       #\n# &gt;&gt;&gt; # instanciate the Curser class like this                            #\n# &gt;&gt;&gt; turtle=curser.Curser(800/2,600/2)                                   #\n# &gt;&gt;&gt; # the object turtle will contains all the methods from the module   #\n###########################################################################\n</pre>\n<ul>\n<li>or import the Curser class with the from import directive:</li>\n</ul>\n<pre>###########################################################################\n# Python 2.7.3 (default, Apr 20 2012, 22:39:59)                           #\n# [GCC 4.6.3] on linux2                                                   #\n# Type \"help\", \"copyright\", \"credits\" or \"license\" for more information.  #\n# &gt;&gt;&gt; from curser import Curser                                           #\n# &gt;&gt;&gt; turtle=Curser(800/2,600/2)                                          #\n# &gt;&gt;&gt; # the object turtle will contains all the methods from the module   #\n###########################################################################\n</pre>\n<ul>\n<li>And enjoy to use this module, master and animate many forms with curser:\nthe turtle module for pygame.</li>\n<li>Some examples scripts are deliver with the module to show you the power of curser.</li>\n</ul>\n</blockquote>\n</blockquote>\n\n          </div>"}, "last_serial": 1196158, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6d4b77f6faca9061361dc0c4e92edd03", "sha256": "44836c90b85348f28ee37252c6f671f108ab2bfa49a0223c19ac87b0a4a07003"}, "downloads": -1, "filename": "curser-1.0.0.zip", "has_sig": false, "md5_digest": "6d4b77f6faca9061361dc0c4e92edd03", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38673, "upload_time": "2014-01-11T22:09:31", "upload_time_iso_8601": "2014-01-11T22:09:31.061846Z", "url": "https://files.pythonhosted.org/packages/01/79/e8fa25faf334efb1b45d59798803d0637b101aabbcec3ab4ba0aab5b9b12/curser-1.0.0.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "c681de1a3b33440145624ccf22817259", "sha256": "b37b9aa2ae4a0d2bab2c3d6a679e3b2be8ef6ac9701c40a13bc5c6a17a02941d"}, "downloads": -1, "filename": "curser-1.0.1.zip", "has_sig": false, "md5_digest": "c681de1a3b33440145624ccf22817259", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 191149, "upload_time": "2014-08-20T05:42:57", "upload_time_iso_8601": "2014-08-20T05:42:57.424138Z", "url": "https://files.pythonhosted.org/packages/0d/65/30cbd7feb935c09d7a897ef1e3e7dcd4dc0ae6c65483856c9d498abd4215/curser-1.0.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c681de1a3b33440145624ccf22817259", "sha256": "b37b9aa2ae4a0d2bab2c3d6a679e3b2be8ef6ac9701c40a13bc5c6a17a02941d"}, "downloads": -1, "filename": "curser-1.0.1.zip", "has_sig": false, "md5_digest": "c681de1a3b33440145624ccf22817259", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 191149, "upload_time": "2014-08-20T05:42:57", "upload_time_iso_8601": "2014-08-20T05:42:57.424138Z", "url": "https://files.pythonhosted.org/packages/0d/65/30cbd7feb935c09d7a897ef1e3e7dcd4dc0ae6c65483856c9d498abd4215/curser-1.0.1.zip", "yanked": false}], "timestamp": "Fri May  8 00:41:20 2020"}