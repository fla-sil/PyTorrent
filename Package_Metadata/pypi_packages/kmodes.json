{"info": {"author": "Nico de Vos", "author_email": "njdevos@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": ".. image:: https://img.shields.io/pypi/v/kmodes.svg\n    :target: https://pypi.python.org/pypi/kmodes/\n    :alt: Version\n.. image:: https://travis-ci.org/nicodv/kmodes.svg?branch=master\n    :target: https://travis-ci.org/nicodv/kmodes\n    :alt: Test Status\n.. image:: https://coveralls.io/repos/nicodv/kmodes/badge.svg\n    :target: https://coveralls.io/r/nicodv/kmodes\n    :alt: Test Coverage\n.. image:: https://api.codacy.com/project/badge/Grade/cb19f1f1093a44fa845ebfdaf76975f6\n   :alt: Codacy Badge\n   :target: https://app.codacy.com/app/nicodv/kmodes?utm_source=github.com&utm_medium=referral&utm_content=nicodv/kmodes&utm_campaign=Badge_Grade_Dashboard\n.. image:: https://requires.io/github/nicodv/kmodes/requirements.svg\n     :target: https://requires.io/github/nicodv/kmodes/requirements/\n     :alt: Requirements Status\n.. image:: https://img.shields.io/pypi/pyversions/kmodes.svg\n    :target: https://pypi.python.org/pypi/kmodes/\n    :alt: Supported Python versions\n.. image:: https://img.shields.io/github/stars/nicodv/kmodes.svg\n    :target: https://github.com/nicodv/kmodes/\n    :alt: Github stars\n.. image:: https://img.shields.io/pypi/l/kmodes.svg\n    :target: https://github.com/nicodv/kmodes/blob/master/LICENSE\n    :alt: License\n\nkmodes\n======\n\nDescription\n-----------\n\nPython implementations of the k-modes and k-prototypes clustering\nalgorithms. Relies on numpy for a lot of the heavy lifting.\n\nk-modes is used for clustering categorical variables. It defines clusters\nbased on the number of matching categories between data points. (This is\nin contrast to the more well-known k-means algorithm, which clusters\nnumerical data based on Euclidean distance.) The k-prototypes algorithm\ncombines k-modes and k-means and is able to cluster mixed numerical /\ncategorical data.\n\nImplemented are:\n\n- k-modes [HUANG97]_ [HUANG98]_\n- k-modes with initialization based on density [CAO09]_\n- k-prototypes [HUANG97]_\n\nThe code is modeled after the clustering algorithms in :code:`scikit-learn`\nand has the same familiar interface.\n\nI would love to have more people play around with this and give me\nfeedback on my implementation. If you come across any issues in running or\ninstalling kmodes,\n`please submit a bug report <https://github.com/nicodv/kmodes/issues>`_.\n\nEnjoy!\n\nInstallation\n------------\n\nkmodes can be installed using pip:\n\n.. code:: bash\n\n    pip install kmodes\n\nTo upgrade to the latest version (recommended), run it like this:\n\n.. code:: bash\n\n    pip install --upgrade kmodes\n\nAlternatively, you can build the latest development version from source:\n\n.. code:: bash\n\n    git clone https://github.com/nicodv/kmodes.git\n    cd kmodes\n    python setup.py install\n\nUsage\n-----\n.. code:: python\n\n    import numpy as np\n    from kmodes.kmodes import KModes\n\n    # random categorical data\n    data = np.random.choice(20, (100, 10))\n\n    km = KModes(n_clusters=4, init='Huang', n_init=5, verbose=1)\n\n    clusters = km.fit_predict(data)\n\n    # Print the cluster centroids\n    print(km.cluster_centroids_)\n\nThe examples directory showcases simple use cases of both k-modes\n('soybean.py') and k-prototypes ('stocks.py').\n\nMissing / unseen data\n_____________________\n\nThe k-modes algorithm accepts :code:`np.NaN` values as missing values in\nthe :code:`X` matrix. However, users are strongly suggested to consider\nfilling in the missing data themselves in a way that makes sense for\nthe problem at hand. This is especially important in case of many missing\nvalues.\n\nThe k-modes algorithm currently handles missing data as follows. When\nfitting the model, :code:`np.NaN` values are encoded into their own\ncategory (let's call it \"unknown values\"). When predicting, the model\ntreats any values in :code:`X` that (1) it has not seen before during\ntraining, or (2) are missing, as being a member of the \"unknown values\"\ncategory. Simply put, the algorithm treats any missing / unseen data as\nmatching with each other but mismatching with non-missing / seen data\nwhen determining similarity between points.\n\nThe k-prototypes also accepts :code:`np.NaN` values as missing values for\nthe categorical variables, but does *not* accept missing values for the\nnumerical values. It is up to the user to come up with a way of\nhandling these missing data that is appropriate for the problem at hand.\n\nParallel execution\n------------------\n\nThe k-modes and k-prototypes implementations both offer support for\nmultiprocessing via the \n`joblib library <https://pythonhosted.org/joblib/generated/joblib.Parallel.html>`_,\nsimilar to e.g.\u00a0scikit-learn's implementation of k-means, using the\n:code:`n_jobs` parameter. It generally does not make sense to set more jobs\nthan there are processor cores available on your system.\n\nThis potentially speeds up any execution with more than one initialization try,\n:code:`n_init > 1`, which may be helpful to reduce the execution time for\nlarger problems. Note that it depends on your problem whether multiprocessing\nactually helps, so be sure to try that out first. You can check out the\nexamples for some benchmarks.\n\nFAQ\n---\n\nQ: I'm seeing errors such as :code:`TypeError: '<' not supported between instances of 'str' and 'float'`\nwhen using the :code:`kprototypes` algorithm.\n\nA: One or more of your numerical feature columns have string values in them. Make sure that all \ncolumns have consistent data types.\n\nQ: How does k-protypes know which of my features are numerical and which are categorical?\n\nA: You tell it which column indices are categorical using the :code:`categorical` argument. All others are assumed numerical. E.g., :code:`clusters = KPrototypes().fit_predict(X, categorical=[1, 2])`\n\nReferences\n----------\n\n.. [HUANG97] Huang, Z.: Clustering large data sets with mixed numeric and\n   categorical values, Proceedings of the First Pacific Asia Knowledge\n   Discovery and Data Mining Conference, Singapore, pp. 21-34, 1997.\n\n.. [HUANG98] Huang, Z.: Extensions to the k-modes algorithm for clustering\n   large data sets with categorical values, Data Mining and Knowledge\n   Discovery 2(3), pp. 283-304, 1998.\n\n.. [CAO09] Cao, F., Liang, J, Bai, L.: A new initialization method for\n   categorical data clustering, Expert Systems with Applications 36(7),\n   pp. 10223-10228., 2009.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nicodv/kmodes", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "kmodes", "package_url": "https://pypi.org/project/kmodes/", "platform": "", "project_url": "https://pypi.org/project/kmodes/", "project_urls": {"Homepage": "https://github.com/nicodv/kmodes"}, "release_url": "https://pypi.org/project/kmodes/0.10.2/", "requires_dist": ["numpy (>=1.10.4)", "scikit-learn (>=0.19.0)", "scipy (>=0.13.3)", "joblib (>=0.11)"], "requires_python": "", "summary": "Python implementations of the k-modes and k-prototypes clustering algorithms for clustering categorical data.", "version": "0.10.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/kmodes/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bd064759b5eb968ace78fb75ed4dc7537f763c34/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6b6d6f6465732e737667\"></a>\n<a href=\"https://travis-ci.org/nicodv/kmodes\" rel=\"nofollow\"><img alt=\"Test Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/83fd9a5c7f7c3c6113e1444368beb399dd3e6648/68747470733a2f2f7472617669732d63692e6f72672f6e69636f64762f6b6d6f6465732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/r/nicodv/kmodes\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4def498a13e5f08dbbee4eb625bb64bec4629a50/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6e69636f64762f6b6d6f6465732f62616467652e737667\"></a>\n<a href=\"https://app.codacy.com/app/nicodv/kmodes?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=nicodv/kmodes&amp;utm_campaign=Badge_Grade_Dashboard\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f17d96caf2243473208cad4741dc843fb937a14c/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f6362313966316631303933613434666138343565626664616637363937356636\"></a>\n<a href=\"https://requires.io/github/nicodv/kmodes/requirements/\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cb0255e7c6242406760b626fdeb003c16f32e6f1/68747470733a2f2f72657175697265732e696f2f6769746875622f6e69636f64762f6b6d6f6465732f726571756972656d656e74732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/kmodes/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c3ae0edd168f1a78f6b9d8e94b4fb23317cf7cc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f6b6d6f6465732e737667\"></a>\n<a href=\"https://github.com/nicodv/kmodes/\" rel=\"nofollow\"><img alt=\"Github stars\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d92f44a2ecabb3db2d59048e70b92c81df1628a9/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f73746172732f6e69636f64762f6b6d6f6465732e737667\"></a>\n<a href=\"https://github.com/nicodv/kmodes/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2f3f608fd653e7c2426c3fd817e71d5ae7f08219/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6b6d6f6465732e737667\"></a>\n<div id=\"kmodes\">\n<h2>kmodes</h2>\n<div id=\"description\">\n<h3>Description</h3>\n<p>Python implementations of the k-modes and k-prototypes clustering\nalgorithms. Relies on numpy for a lot of the heavy lifting.</p>\n<p>k-modes is used for clustering categorical variables. It defines clusters\nbased on the number of matching categories between data points. (This is\nin contrast to the more well-known k-means algorithm, which clusters\nnumerical data based on Euclidean distance.) The k-prototypes algorithm\ncombines k-modes and k-means and is able to cluster mixed numerical /\ncategorical data.</p>\n<p>Implemented are:</p>\n<ul>\n<li>k-modes <a href=\"#huang97\" id=\"id1\" rel=\"nofollow\">[HUANG97]</a> <a href=\"#huang98\" id=\"id2\" rel=\"nofollow\">[HUANG98]</a></li>\n<li>k-modes with initialization based on density <a href=\"#cao09\" id=\"id3\" rel=\"nofollow\">[CAO09]</a></li>\n<li>k-prototypes <a href=\"#huang97\" id=\"id4\" rel=\"nofollow\">[HUANG97]</a></li>\n</ul>\n<p>The code is modeled after the clustering algorithms in <code>scikit-learn</code>\nand has the same familiar interface.</p>\n<p>I would love to have more people play around with this and give me\nfeedback on my implementation. If you come across any issues in running or\ninstalling kmodes,\n<a href=\"https://github.com/nicodv/kmodes/issues\" rel=\"nofollow\">please submit a bug report</a>.</p>\n<p>Enjoy!</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>kmodes can be installed using pip:</p>\n<pre>pip install kmodes\n</pre>\n<p>To upgrade to the latest version (recommended), run it like this:</p>\n<pre>pip install --upgrade kmodes\n</pre>\n<p>Alternatively, you can build the latest development version from source:</p>\n<pre>git clone https://github.com/nicodv/kmodes.git\n<span class=\"nb\">cd</span> kmodes\npython setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">kmodes.kmodes</span> <span class=\"kn\">import</span> <span class=\"n\">KModes</span>\n\n<span class=\"c1\"># random categorical data</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">choice</span><span class=\"p\">(</span><span class=\"mi\">20</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">))</span>\n\n<span class=\"n\">km</span> <span class=\"o\">=</span> <span class=\"n\">KModes</span><span class=\"p\">(</span><span class=\"n\">n_clusters</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">init</span><span class=\"o\">=</span><span class=\"s1\">'Huang'</span><span class=\"p\">,</span> <span class=\"n\">n_init</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n<span class=\"n\">clusters</span> <span class=\"o\">=</span> <span class=\"n\">km</span><span class=\"o\">.</span><span class=\"n\">fit_predict</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Print the cluster centroids</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">km</span><span class=\"o\">.</span><span class=\"n\">cluster_centroids_</span><span class=\"p\">)</span>\n</pre>\n<p>The examples directory showcases simple use cases of both k-modes\n(\u2018soybean.py\u2019) and k-prototypes (\u2018stocks.py\u2019).</p>\n<div id=\"missing-unseen-data\">\n<h4>Missing / unseen data</h4>\n<p>The k-modes algorithm accepts <code>np.NaN</code> values as missing values in\nthe <code>X</code> matrix. However, users are strongly suggested to consider\nfilling in the missing data themselves in a way that makes sense for\nthe problem at hand. This is especially important in case of many missing\nvalues.</p>\n<p>The k-modes algorithm currently handles missing data as follows. When\nfitting the model, <code>np.NaN</code> values are encoded into their own\ncategory (let\u2019s call it \u201cunknown values\u201d). When predicting, the model\ntreats any values in <code>X</code> that (1) it has not seen before during\ntraining, or (2) are missing, as being a member of the \u201cunknown values\u201d\ncategory. Simply put, the algorithm treats any missing / unseen data as\nmatching with each other but mismatching with non-missing / seen data\nwhen determining similarity between points.</p>\n<p>The k-prototypes also accepts <code>np.NaN</code> values as missing values for\nthe categorical variables, but does <em>not</em> accept missing values for the\nnumerical values. It is up to the user to come up with a way of\nhandling these missing data that is appropriate for the problem at hand.</p>\n</div>\n</div>\n<div id=\"parallel-execution\">\n<h3>Parallel execution</h3>\n<p>The k-modes and k-prototypes implementations both offer support for\nmultiprocessing via the\n<a href=\"https://pythonhosted.org/joblib/generated/joblib.Parallel.html\" rel=\"nofollow\">joblib library</a>,\nsimilar to e.g.\u00a0scikit-learn\u2019s implementation of k-means, using the\n<code>n_jobs</code> parameter. It generally does not make sense to set more jobs\nthan there are processor cores available on your system.</p>\n<p>This potentially speeds up any execution with more than one initialization try,\n<code>n_init &gt; 1</code>, which may be helpful to reduce the execution time for\nlarger problems. Note that it depends on your problem whether multiprocessing\nactually helps, so be sure to try that out first. You can check out the\nexamples for some benchmarks.</p>\n</div>\n<div id=\"faq\">\n<h3>FAQ</h3>\n<p>Q: I\u2019m seeing errors such as <code>TypeError: '&lt;' not supported between instances of 'str' and 'float'</code>\nwhen using the <code>kprototypes</code> algorithm.</p>\n<p>A: One or more of your numerical feature columns have string values in them. Make sure that all\ncolumns have consistent data types.</p>\n<p>Q: How does k-protypes know which of my features are numerical and which are categorical?</p>\n<p>A: You tell it which column indices are categorical using the <code>categorical</code> argument. All others are assumed numerical. E.g., <code>clusters = KPrototypes().fit_predict(X, categorical=[1, 2])</code></p>\n</div>\n<div id=\"references\">\n<h3>References</h3>\n<table id=\"huang97\">\n<col><col>\n<tbody>\n<tr><td>[HUANG97]</td><td><em>(<a href=\"#id1\" rel=\"nofollow\">1</a>, <a href=\"#id4\" rel=\"nofollow\">2</a>)</em> Huang, Z.: Clustering large data sets with mixed numeric and\ncategorical values, Proceedings of the First Pacific Asia Knowledge\nDiscovery and Data Mining Conference, Singapore, pp. 21-34, 1997.</td></tr>\n</tbody>\n</table>\n<table id=\"huang98\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id2\" rel=\"nofollow\">[HUANG98]</a></td><td>Huang, Z.: Extensions to the k-modes algorithm for clustering\nlarge data sets with categorical values, Data Mining and Knowledge\nDiscovery 2(3), pp. 283-304, 1998.</td></tr>\n</tbody>\n</table>\n<table id=\"cao09\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[CAO09]</a></td><td>Cao, F., Liang, J, Bai, L.: A new initialization method for\ncategorical data clustering, Expert Systems with Applications 36(7),\npp. 10223-10228., 2009.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6698996, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "54ce7de30b11661986afdbe7abd8cea2", "sha256": "8a80cd81be09418c3e960707b3dae53bb0567988392dae67dd8f30bf6ec841fa"}, "downloads": -1, "filename": "kmodes-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "54ce7de30b11661986afdbe7abd8cea2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13185, "upload_time": "2016-02-28T02:53:57", "upload_time_iso_8601": "2016-02-28T02:53:57.480780Z", "url": "https://files.pythonhosted.org/packages/19/b1/645c6d6087413e728cb03a1eece82f4a4f6695341dc7882bdedc2fbfb174/kmodes-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0807067de37d4ec1eb0ec26a2fa4bc26", "sha256": "4b287d3d1d597cbeba225eeb50698194a82d45059be9c69b1b9240bfc9cda7e9"}, "downloads": -1, "filename": "kmodes-0.1.tar.gz", "has_sig": false, "md5_digest": "0807067de37d4ec1eb0ec26a2fa4bc26", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9179, "upload_time": "2016-02-28T02:54:10", "upload_time_iso_8601": "2016-02-28T02:54:10.300068Z", "url": "https://files.pythonhosted.org/packages/74/b9/e3d2169a69fdfb610db4e15b510425581fae712c2d61ef340be41cf9307f/kmodes-0.1.tar.gz", "yanked": false}], "0.10.0": [{"comment_text": "", "digests": {"md5": "bf53baacfef28488bfee32a5e0da1f5e", "sha256": "6b58ba09654a7c5919caf93e9190ba6bfa3208edd30fe0f7a4e185ab363043a0"}, "downloads": -1, "filename": "kmodes-0.10.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bf53baacfef28488bfee32a5e0da1f5e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17333, "upload_time": "2019-04-04T17:23:24", "upload_time_iso_8601": "2019-04-04T17:23:24.954890Z", "url": "https://files.pythonhosted.org/packages/56/23/568339f89723c07b349440c18fda932bb20d79923b141e4c259a5d469c5c/kmodes-0.10.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ad5d3ea5ef36b67da06437b8dd0273be", "sha256": "501cc6a49c0e92dda4dfe94bbe0a5cea1dd6a25e3e3f576026ec94c4f618812a"}, "downloads": -1, "filename": "kmodes-0.10.0.tar.gz", "has_sig": false, "md5_digest": "ad5d3ea5ef36b67da06437b8dd0273be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13593, "upload_time": "2019-04-04T17:23:26", "upload_time_iso_8601": "2019-04-04T17:23:26.441472Z", "url": "https://files.pythonhosted.org/packages/9b/5b/3eae93487063c997f2ae6c4fa25f274af11550215fb680266d3ab7dd343c/kmodes-0.10.0.tar.gz", "yanked": false}], "0.10.1": [{"comment_text": "", "digests": {"md5": "14a3b381013303ccd33e539444ccba46", "sha256": "bce1108382bffc09902c2fe5e1acb1cbb10736634efce2af88f195b4998f7c5e"}, "downloads": -1, "filename": "kmodes-0.10.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14a3b381013303ccd33e539444ccba46", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17834, "upload_time": "2019-04-23T16:39:48", "upload_time_iso_8601": "2019-04-23T16:39:48.627788Z", "url": "https://files.pythonhosted.org/packages/79/c0/f7d8a0eb41ac6f302b4bc100f91b6e0f2558425ccfefaa0ec0430f77ee97/kmodes-0.10.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d8be7c0db5a99df92a1678532e87bd2", "sha256": "3222c2f672a6356be353955c02d1e38472d9f6074744b4ffb0c058e8c2235ea1"}, "downloads": -1, "filename": "kmodes-0.10.1.tar.gz", "has_sig": false, "md5_digest": "0d8be7c0db5a99df92a1678532e87bd2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13943, "upload_time": "2019-04-23T16:39:50", "upload_time_iso_8601": "2019-04-23T16:39:50.052037Z", "url": "https://files.pythonhosted.org/packages/1f/d2/30cf21fe6f108e11fcf3f3a26b265756c3769fbbd5ea2079319ee293652c/kmodes-0.10.1.tar.gz", "yanked": false}], "0.10.2": [{"comment_text": "", "digests": {"md5": "8edc25c1b72db8150b921c5a3f336fc7", "sha256": "038b270aca1feebb98367894b3c87ea2b0e0107de7a8d6e0884066f4da8d97cc"}, "downloads": -1, "filename": "kmodes-0.10.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8edc25c1b72db8150b921c5a3f336fc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18403, "upload_time": "2020-02-25T21:30:28", "upload_time_iso_8601": "2020-02-25T21:30:28.458415Z", "url": "https://files.pythonhosted.org/packages/b2/55/d8ec1ae1f7e1e202a8a4184c6852a3ee993b202b0459672c699d0ac18fc8/kmodes-0.10.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04427b217b998f83fc21eef5eda2f599", "sha256": "2ae2e8dbc7b317f81354b951811df911ba2875d31a45bda4c6275e5eb35b84f2"}, "downloads": -1, "filename": "kmodes-0.10.2.tar.gz", "has_sig": false, "md5_digest": "04427b217b998f83fc21eef5eda2f599", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14408, "upload_time": "2020-02-25T21:30:30", "upload_time_iso_8601": "2020-02-25T21:30:30.142386Z", "url": "https://files.pythonhosted.org/packages/57/72/4c2fd32d52e8d134df963e601970d3d22ad7f9c857fe6e4ff2640830f53b/kmodes-0.10.2.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e8ded61ca3c07b36ded7ba2c2849f832", "sha256": "0f7cfc7a5e1901e88623cfa38ce916f39354a7a2589184310cb9b320763d07a2"}, "downloads": -1, "filename": "kmodes-0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e8ded61ca3c07b36ded7ba2c2849f832", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13422, "upload_time": "2016-03-02T20:50:03", "upload_time_iso_8601": "2016-03-02T20:50:03.898252Z", "url": "https://files.pythonhosted.org/packages/22/c7/ce0be8fbfcb413dac15fc914e4491d5ee379d93b2cee9eed1eda7271928b/kmodes-0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6c05344efaac7f39df7e4d4ed57061f5", "sha256": "7d5ca27fd24fd251fe38a10d07102792593a39728e080f5db649806533fd418a"}, "downloads": -1, "filename": "kmodes-0.2.tar.gz", "has_sig": false, "md5_digest": "6c05344efaac7f39df7e4d4ed57061f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9424, "upload_time": "2016-03-02T20:50:30", "upload_time_iso_8601": "2016-03-02T20:50:30.876237Z", "url": "https://files.pythonhosted.org/packages/7d/ce/550fda8c97d08d5ac38099eee0f506332edfb2e4e5b5db4515e4deec77aa/kmodes-0.2.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "4dd7330df5ae1c42c706fef8da0dfbda", "sha256": "6bd6b20a33fd7f4d320235e55b2bac72947c4a76921f8642a1f0fc6422379bb4"}, "downloads": -1, "filename": "kmodes-0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4dd7330df5ae1c42c706fef8da0dfbda", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 13788, "upload_time": "2016-03-14T21:15:47", "upload_time_iso_8601": "2016-03-14T21:15:47.824469Z", "url": "https://files.pythonhosted.org/packages/d7/4f/3e6b4a538c16f607c582017a8efa8c39d9d44d599b2a0b97090be91e3a62/kmodes-0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b373c0670cc093aadfba68067b3e18c9", "sha256": "0602dcc585c8f650cc732dba644f1e8334fe1107f75edcde9282e8cda860500e"}, "downloads": -1, "filename": "kmodes-0.4.tar.gz", "has_sig": false, "md5_digest": "b373c0670cc093aadfba68067b3e18c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9837, "upload_time": "2016-03-14T21:15:55", "upload_time_iso_8601": "2016-03-14T21:15:55.593018Z", "url": "https://files.pythonhosted.org/packages/65/bc/9beac91d3d997bc85f238e977ddb8c50b3dfaca129e5c689de057c451e4f/kmodes-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "be11e6f128add1eb99b90a06fdb0f79e", "sha256": "4c5166878acc5142062108f8bdd483ddc518cd9a8432dfa414c85524947fddd7"}, "downloads": -1, "filename": "kmodes-0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "be11e6f128add1eb99b90a06fdb0f79e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 14309, "upload_time": "2016-05-27T19:48:48", "upload_time_iso_8601": "2016-05-27T19:48:48.143819Z", "url": "https://files.pythonhosted.org/packages/53/ea/616ed969206d24159486687745ba48aacde6b35cc414d77ffa6708718ae1/kmodes-0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71a3ca831a14b8ff23725efe61f74843", "sha256": "fa1796c57dcb015f393528c969aa0fd040c42211a904cdb8c1a0941e4a4c5869"}, "downloads": -1, "filename": "kmodes-0.5.tar.gz", "has_sig": false, "md5_digest": "71a3ca831a14b8ff23725efe61f74843", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10345, "upload_time": "2016-05-27T19:48:55", "upload_time_iso_8601": "2016-05-27T19:48:55.498414Z", "url": "https://files.pythonhosted.org/packages/36/04/366f7f5b3674a41f06a99edfe4cfcf620f67e1b68180e454fef0fc0635d0/kmodes-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "877e276481bdc2d28d71e92525aea52d", "sha256": "d5ba99bd39b1452e81de551cdfca689c05fe2b8db927831e1c9609c1353d3e80"}, "downloads": -1, "filename": "kmodes-0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "877e276481bdc2d28d71e92525aea52d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16005, "upload_time": "2016-06-08T15:22:46", "upload_time_iso_8601": "2016-06-08T15:22:46.657966Z", "url": "https://files.pythonhosted.org/packages/cb/d1/a025c0ef91af63f77b2e44b7bce0c1380c752a94aa42aa2fc9715b4d7ad0/kmodes-0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f1ed8ca10caddaa18c0bcd4d3c52b76b", "sha256": "14eab4ae818e143177b4e195d45ef260a6789f2c9f889b1a1e07cbf108e78be4"}, "downloads": -1, "filename": "kmodes-0.6.tar.gz", "has_sig": false, "md5_digest": "f1ed8ca10caddaa18c0bcd4d3c52b76b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11440, "upload_time": "2016-06-08T15:22:50", "upload_time_iso_8601": "2016-06-08T15:22:50.988392Z", "url": "https://files.pythonhosted.org/packages/44/eb/0b07bb150b8b725bfe997b4a1199c095191a1f433da1b0a10b04e2be497a/kmodes-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "7c12cabb8a1334a0434d04fa3bd5675c", "sha256": "75ed3b73ac1fd3549c8dabc1698f0dab2e36ccc6bd20210ed6e77e65b033c34d"}, "downloads": -1, "filename": "kmodes-0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7c12cabb8a1334a0434d04fa3bd5675c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17838, "upload_time": "2017-03-30T17:42:16", "upload_time_iso_8601": "2017-03-30T17:42:16.065756Z", "url": "https://files.pythonhosted.org/packages/c8/59/c1e993d211926609c1345ea030505f378acc33aff9e6e8d4a57ffbaf09e0/kmodes-0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5353ccf57dbd8bbee79131c9412affcf", "sha256": "2c3f86028e5bff5213a5ac77544c79a1eb59389de59c410a22f5ac0501e85bec"}, "downloads": -1, "filename": "kmodes-0.7.tar.gz", "has_sig": false, "md5_digest": "5353ccf57dbd8bbee79131c9412affcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11435, "upload_time": "2017-03-30T17:42:18", "upload_time_iso_8601": "2017-03-30T17:42:18.299683Z", "url": "https://files.pythonhosted.org/packages/09/24/a3c870c74f5ef511f8c4a63b03cdb933d2818f1cf37cfc2aa8ef85c9985c/kmodes-0.7.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "e45784894e5b38cf6702c2f9f2e014a1", "sha256": "83ff6db3e142c3b92f00445f6aa1405031587a0eb704bafcc9a525e21bfa4646"}, "downloads": -1, "filename": "kmodes-0.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e45784894e5b38cf6702c2f9f2e014a1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18818, "upload_time": "2017-11-15T20:12:21", "upload_time_iso_8601": "2017-11-15T20:12:21.035801Z", "url": "https://files.pythonhosted.org/packages/cd/e1/6c0c370093da91207b7a4d5547fc2dc1c0219b492002a3519234768bcecd/kmodes-0.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d7f3ee8d56b06e8aff185d791d657ddb", "sha256": "5c4a2bc035b6a2bba824bd697cdddd31bc626327d7514da84fc4cdc2eb6ce601"}, "downloads": -1, "filename": "kmodes-0.8.tar.gz", "has_sig": false, "md5_digest": "d7f3ee8d56b06e8aff185d791d657ddb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12548, "upload_time": "2017-11-15T20:12:22", "upload_time_iso_8601": "2017-11-15T20:12:22.032330Z", "url": "https://files.pythonhosted.org/packages/54/70/b9449c133353e4ccb8bed0a5e560d086437f597e852324e53d410636a67d/kmodes-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "e45bc62b1ab97a0c8d8a22c321c82a80", "sha256": "29e101445feacd9b62c1eb4e54260e8c7db983c9bf9dbffcc865611ab356aff0"}, "downloads": -1, "filename": "kmodes-0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e45bc62b1ab97a0c8d8a22c321c82a80", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 15741, "upload_time": "2018-05-02T22:46:49", "upload_time_iso_8601": "2018-05-02T22:46:49.787404Z", "url": "https://files.pythonhosted.org/packages/1a/d5/54e0efa2ddf33234761f8c35471f4a2280bb4cef44fd39fa08f1e663946a/kmodes-0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3621b47a3b842ba7dd52f6d0f0161e3", "sha256": "c90f2cc3ebeb4d9f81f689250537c0de8825b54fb6887579d3f27c349a7807cd"}, "downloads": -1, "filename": "kmodes-0.9.tar.gz", "has_sig": false, "md5_digest": "b3621b47a3b842ba7dd52f6d0f0161e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12418, "upload_time": "2018-05-02T22:46:51", "upload_time_iso_8601": "2018-05-02T22:46:51.457065Z", "url": "https://files.pythonhosted.org/packages/1e/f3/59a84cc0edf9bd542ed334833af94edae91e391397652ed84938afb800d7/kmodes-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8edc25c1b72db8150b921c5a3f336fc7", "sha256": "038b270aca1feebb98367894b3c87ea2b0e0107de7a8d6e0884066f4da8d97cc"}, "downloads": -1, "filename": "kmodes-0.10.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8edc25c1b72db8150b921c5a3f336fc7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 18403, "upload_time": "2020-02-25T21:30:28", "upload_time_iso_8601": "2020-02-25T21:30:28.458415Z", "url": "https://files.pythonhosted.org/packages/b2/55/d8ec1ae1f7e1e202a8a4184c6852a3ee993b202b0459672c699d0ac18fc8/kmodes-0.10.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "04427b217b998f83fc21eef5eda2f599", "sha256": "2ae2e8dbc7b317f81354b951811df911ba2875d31a45bda4c6275e5eb35b84f2"}, "downloads": -1, "filename": "kmodes-0.10.2.tar.gz", "has_sig": false, "md5_digest": "04427b217b998f83fc21eef5eda2f599", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14408, "upload_time": "2020-02-25T21:30:30", "upload_time_iso_8601": "2020-02-25T21:30:30.142386Z", "url": "https://files.pythonhosted.org/packages/57/72/4c2fd32d52e8d134df963e601970d3d22ad7f9c857fe6e4ff2640830f53b/kmodes-0.10.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:49:16 2020"}