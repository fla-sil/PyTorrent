{"info": {"author": "Ted Petrou", "author_email": "petrou.theodore@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "pandas\\_lite\n============\n\nA simpler alternative to pandas\n\nMain Goals\n==========\n\n-  A very minimal set of features\n-  Be as explicit as possible\n-  There should be one-- and preferably only one --obvious way to do it.\n\nData Structures\n~~~~~~~~~~~~~~~\n\n-  Only DataFrames\n-  No Series\n\nData Types\n~~~~~~~~~~\n\n-  Only primitive types - int, float, boolean, numpy.unicode\n-  No object data types\n\nRow and Column Labels\n~~~~~~~~~~~~~~~~~~~~~\n\n-  No index, meaning no row labels\n-  No hierarchical index\n-  Column names must be strings\n-  Column names must be unique\n-  Columns stored in a numpy array\n\nSubset Selection\n~~~~~~~~~~~~~~~~\n\n-  Only one way to select data - ``[ ]``\n-  Subset selection will be explicit and necessitate both rows and\n   columns\n-  Rows will be selected only by integer location\n-  Columns will be selected by either label or integer location. Since\n   columns must be strings, this will not be amibguous\n-  Column names cannot be duplicated\n\nAll selections and operations copy\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n-  All selections and operations provide new copies of the data\n-  This will avoid any chained indexing confusion\n\nDevelopment\n~~~~~~~~~~~\n\n-  Must use type hints\n-  Must use 3.6 - fstrings\n-  Must have numpy, bottleneck, numexpr\n\nSmall feature set\n~~~~~~~~~~~~~~~~~\n\n-  Implement as few attributes and methods as possible\n-  Focus on good idiomatic cookbook examples for doing more complex\n   tasks\n\nOnly Scalar Data Types\n~~~~~~~~~~~~~~~~~~~~~~\n\nNo complex Python data types - [x] bool - always 8 bits, not-null - [x]\nint - always 64 bits, not-null - [x] float - always 64 bits, nulls\nallowed - [x] str - A python unicode object, nulls allowed - [ ]\ncategorical - [ ] datetime - [ ] timedelta\n\nAttributes to implement\n^^^^^^^^^^^^^^^^^^^^^^^\n\n-  [x] size\n-  [x] shape\n-  [x] values\n-  [x] dtypes\n\nMay not implement any of the binary operators as methods (add, sub, mul,\netc...)\n\nMethods\n^^^^^^^\n\n**Stats** - [x] abs - [x] all - [x] any - [x] argmax - [x] argmin - [x]\nclip - [ ] corr - [x] count - [ ] cov - [x] cummax - [x] cummin - [ ]\ncumprod - [x] cumsum - [ ] describe - [x] max - [x] min - [x] median -\n[x] mean - [ ] mode - [ ] nlargest - [ ] nsmallest - [ ] quantile - [ ]\nrank - [x] std - [x] sum - [x] var - [ ] unique - [ ] nunique\n\n**Selection** - [ ] drop - [ ] drop\\_duplicates - [x] head - [ ] isin -\n[ ] sample - [x] select\\_dtypes - [x] tail - [ ] where\n\n**Missing Data** - [ ] isna - [ ] dropna - [ ] fillna - [ ] interpolate\n\n**Other** - [ ] append - [ ] apply - [ ] assign - [x] astype - [ ]\ngroupby - [ ] info - [ ] melt - [ ] memory\\_usage - [ ] merge - [ ]\npivot - [ ] replace - [ ] rolling - [ ] sort\\_values\n\n**Functions** - [ ] read\\_csv - [ ] read\\_sql - [ ] concat\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tdpetrou/pandas_lite", "keywords": "data pandas aggregation", "license": "BSD 3-clause", "maintainer": "", "maintainer_email": "", "name": "pandas-lite", "package_url": "https://pypi.org/project/pandas-lite/", "platform": "", "project_url": "https://pypi.org/project/pandas-lite/", "project_urls": {"Homepage": "https://github.com/tdpetrou/pandas_lite"}, "release_url": "https://pypi.org/project/pandas-lite/0.1.2/", "requires_dist": ["numpy"], "requires_python": ">=3.6", "summary": "A lighter version of pandas. No Series, No hierarchical indexing, only one indexer [ ]", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pandas-lite\">\n<h2>pandas_lite</h2>\n<p>A simpler alternative to pandas</p>\n</div>\n<div id=\"main-goals\">\n<h2>Main Goals</h2>\n<ul>\n<li>A very minimal set of features</li>\n<li>Be as explicit as possible</li>\n<li>There should be one\u2013 and preferably only one \u2013obvious way to do it.</li>\n</ul>\n<div id=\"data-structures\">\n<h3>Data Structures</h3>\n<ul>\n<li>Only DataFrames</li>\n<li>No Series</li>\n</ul>\n</div>\n<div id=\"data-types\">\n<h3>Data Types</h3>\n<ul>\n<li>Only primitive types - int, float, boolean, numpy.unicode</li>\n<li>No object data types</li>\n</ul>\n</div>\n<div id=\"row-and-column-labels\">\n<h3>Row and Column Labels</h3>\n<ul>\n<li>No index, meaning no row labels</li>\n<li>No hierarchical index</li>\n<li>Column names must be strings</li>\n<li>Column names must be unique</li>\n<li>Columns stored in a numpy array</li>\n</ul>\n</div>\n<div id=\"subset-selection\">\n<h3>Subset Selection</h3>\n<ul>\n<li>Only one way to select data - <tt>[ ]</tt></li>\n<li>Subset selection will be explicit and necessitate both rows and\ncolumns</li>\n<li>Rows will be selected only by integer location</li>\n<li>Columns will be selected by either label or integer location. Since\ncolumns must be strings, this will not be amibguous</li>\n<li>Column names cannot be duplicated</li>\n</ul>\n</div>\n<div id=\"all-selections-and-operations-copy\">\n<h3>All selections and operations copy</h3>\n<ul>\n<li>All selections and operations provide new copies of the data</li>\n<li>This will avoid any chained indexing confusion</li>\n</ul>\n</div>\n<div id=\"development\">\n<h3>Development</h3>\n<ul>\n<li>Must use type hints</li>\n<li>Must use 3.6 - fstrings</li>\n<li>Must have numpy, bottleneck, numexpr</li>\n</ul>\n</div>\n<div id=\"small-feature-set\">\n<h3>Small feature set</h3>\n<ul>\n<li>Implement as few attributes and methods as possible</li>\n<li>Focus on good idiomatic cookbook examples for doing more complex\ntasks</li>\n</ul>\n</div>\n<div id=\"only-scalar-data-types\">\n<h3>Only Scalar Data Types</h3>\n<p>No complex Python data types - [x] bool - always 8 bits, not-null - [x]\nint - always 64 bits, not-null - [x] float - always 64 bits, nulls\nallowed - [x] str - A python unicode object, nulls allowed - [ ]\ncategorical - [ ] datetime - [ ] timedelta</p>\n<div id=\"attributes-to-implement\">\n<h4>Attributes to implement</h4>\n<ul>\n<li>[x] size</li>\n<li>[x] shape</li>\n<li>[x] values</li>\n<li>[x] dtypes</li>\n</ul>\n<p>May not implement any of the binary operators as methods (add, sub, mul,\netc\u2026)</p>\n</div>\n<div id=\"methods\">\n<h4>Methods</h4>\n<p><strong>Stats</strong> - [x] abs - [x] all - [x] any - [x] argmax - [x] argmin - [x]\nclip - [ ] corr - [x] count - [ ] cov - [x] cummax - [x] cummin - [ ]\ncumprod - [x] cumsum - [ ] describe - [x] max - [x] min - [x] median -\n[x] mean - [ ] mode - [ ] nlargest - [ ] nsmallest - [ ] quantile - [ ]\nrank - [x] std - [x] sum - [x] var - [ ] unique - [ ] nunique</p>\n<p><strong>Selection</strong> - [ ] drop - [ ] drop_duplicates - [x] head - [ ] isin -\n[ ] sample - [x] select_dtypes - [x] tail - [ ] where</p>\n<p><strong>Missing Data</strong> - [ ] isna - [ ] dropna - [ ] fillna - [ ] interpolate</p>\n<p><strong>Other</strong> - [ ] append - [ ] apply - [ ] assign - [x] astype - [ ]\ngroupby - [ ] info - [ ] melt - [ ] memory_usage - [ ] merge - [ ]\npivot - [ ] replace - [ ] rolling - [ ] sort_values</p>\n<p><strong>Functions</strong> - [ ] read_csv - [ ] read_sql - [ ] concat</p>\n</div>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3478793, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "b6556d2db09ec53b54ff2e52dcdbdfd4", "sha256": "fb30d5b826fe5c69618e1088bfd47b88bfef8e36fe221d04020cbeaae96bc191"}, "downloads": -1, "filename": "pandas_lite-0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b6556d2db09ec53b54ff2e52dcdbdfd4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 6888, "upload_time": "2017-12-19T20:03:50", "upload_time_iso_8601": "2017-12-19T20:03:50.661841Z", "url": "https://files.pythonhosted.org/packages/64/64/01503e00fe14cfd56d0b457bca699a4d9967eb831c78807b3dd829df6ac8/pandas_lite-0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "086bf3e7bea9d5a34a20d85b2629730e", "sha256": "7aa2834a0d7d8f5e06d7c1f6d63cbcec160abe0ed825fcdd0f1f84a8a240909e"}, "downloads": -1, "filename": "pandas_lite-0.1.tar.gz", "has_sig": false, "md5_digest": "086bf3e7bea9d5a34a20d85b2629730e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6622, "upload_time": "2017-12-19T20:03:51", "upload_time_iso_8601": "2017-12-19T20:03:51.692489Z", "url": "https://files.pythonhosted.org/packages/0b/b1/e866bddda30d72b6cd72a5113937744629a8d1d8b9a6a595527fa71acbd8/pandas_lite-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "82709d1baebe11b01eafd344035464c7", "sha256": "88a689d4d873ca4f5084b59045bdaab5cbef36cfc950834cf403af9ae5b3f69f"}, "downloads": -1, "filename": "pandas_lite-0.1.1-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "82709d1baebe11b01eafd344035464c7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 291003, "upload_time": "2018-01-10T20:33:45", "upload_time_iso_8601": "2018-01-10T20:33:45.346051Z", "url": "https://files.pythonhosted.org/packages/cf/e8/5af14366389fdfbfd4425fe328f4f0e527ffbf92aeed76434190f4550f06/pandas_lite-0.1.1-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cd6196fab407669ee523ba7cee5272b9", "sha256": "9860ea310243f74c1176b4b601aa99a7cd9a426468f8d2df24374c90781edb42"}, "downloads": -1, "filename": "pandas_lite-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "cd6196fab407669ee523ba7cee5272b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 10119, "upload_time": "2017-12-21T02:50:50", "upload_time_iso_8601": "2017-12-21T02:50:50.010138Z", "url": "https://files.pythonhosted.org/packages/70/50/8a08b0e9b39e44e670569d98604c285ca0471e5202598c96cd5f5ce8b003/pandas_lite-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "39eb26a910895f7d1e818b843d5cda77", "sha256": "2de365912574eb42a4951a77161c3f8c8f339e7d6d61f403a43a39cc948a4116"}, "downloads": -1, "filename": "pandas_lite-0.1.1.tar.gz", "has_sig": false, "md5_digest": "39eb26a910895f7d1e818b843d5cda77", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9652, "upload_time": "2017-12-21T02:50:51", "upload_time_iso_8601": "2017-12-21T02:50:51.035768Z", "url": "https://files.pythonhosted.org/packages/31/de/7eee9b97fb04c5ebde8017f4551f935194ebee9a3e34300730f86b08eab9/pandas_lite-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "00bafda3b5362cbe5dddc9bb16323251", "sha256": "a3f39f86b30241ffac9aca06825553d9ce069ede80caf1d5abb8529d66c861d3"}, "downloads": -1, "filename": "pandas_lite-0.1.2-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "00bafda3b5362cbe5dddc9bb16323251", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 291001, "upload_time": "2018-01-10T20:33:49", "upload_time_iso_8601": "2018-01-10T20:33:49.199835Z", "url": "https://files.pythonhosted.org/packages/c8/57/7e8f26c5459aa7cdd673ebded037772179273a0e1506263f3adb9ef695f5/pandas_lite-0.1.2-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "00bafda3b5362cbe5dddc9bb16323251", "sha256": "a3f39f86b30241ffac9aca06825553d9ce069ede80caf1d5abb8529d66c861d3"}, "downloads": -1, "filename": "pandas_lite-0.1.2-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "00bafda3b5362cbe5dddc9bb16323251", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": ">=3.6", "size": 291001, "upload_time": "2018-01-10T20:33:49", "upload_time_iso_8601": "2018-01-10T20:33:49.199835Z", "url": "https://files.pythonhosted.org/packages/c8/57/7e8f26c5459aa7cdd673ebded037772179273a0e1506263f3adb9ef695f5/pandas_lite-0.1.2-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:30 2020"}