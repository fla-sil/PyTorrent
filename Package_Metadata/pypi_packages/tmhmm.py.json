{"info": {"author": "Dan S\u00f8ndergaard", "author_email": "das@birc.au.dk", "bugtrack_url": null, "classifiers": [], "description": "# Introduction\n\nThis repository houses a Python 3.5+ implementation of transmembrane helix\nhidden Markov model ([TMHMM](http://www.cbs.dtu.dk/services/TMHMM/)) originally\ndescribed in:\n\nE\\. L.L. Sonnhammer, G. von Heijne, and A. Krogh. **A hidden Markov model for\npredicting transmembrane helices in protein sequences**. In J. Glasgow,\nT. Littlejohn, F. Major, R. Lathrop, D. Sankoff, and C. Sensen, editors,\nProceedings of the Sixth International Conference on Intelligent Systems for\nMolecular Biology, pages 175-182, Menlo Park, CA, 1998. AAAI Press.\n\n# Why?\n\nI did this for a few reasons:\n\n- the source code is not available as part of the publication,\n- the downloadable binaries are Linux-only,\n- the downloadable binaries may not be redistributed, so it's not possible to\n  put them in a Docker image or a VM for other people to use,\n- the need to predict transmembrane helices on a large dataset, which rules\n  out the web service.\n\nThis Python implementation includes a parser for the undocumented file format\nused to describe the model and a pretty fast Cython implementation of the\nViterbi algorithm used to perform the annotation. The tool will output files\nsimilar to the files produced by the original TMHMM implementation.\n\n# Incompatibilities\n\n* The original TMHMM implementation handles ambigious characters and gaps in an\n  undocumented way. However, tmhmm.py does not attempt to handle such\n  characters at all and will fail. A possible fix is to replace those\n  characters with something also based on expert/domain knowledge. For details,\n  see issue #9.\n\n# Installation\n\nThis package supports Python 3.5, 3.6, and 3.7. Install with:\n\n    $ pip install tmhmm.py\n\nOnly Linux is supported at the moment.\n\n# Usage\n\n    $ tmhmm -h\n      usage: tmhmm [-h] -f SEQUENCE_FILE [-m MODEL_FILE] [-p]\n\n      optional arguments:\n        -h, --help            show this help message and exit\n        -f SEQUENCE_FILE, --file SEQUENCE_FILE\n                              path to file in fasta format with sequences\n        -m MODEL_FILE, --model MODEL_FILE\n                              path to the model to use\n        -p, --plot            plot posterior probabilies\n\nThe `-p`/`--plot` option will only be available if `matplotlib` is installed\nand importable.\n\nSay we have the following sequence in FASTA format in a file called `test.fa`:\n\n    >B9DFX7|1B|HMA8_ARATH Copper-transporting ATPase PAA2, chloroplastic  [Arabidopsis thaliana ]\n    MASNLLRFPLPPPSSLHIRPSKFLVNRCFPRLRRSRIRRHCSRPFFLVSNSVEISTQSFESTESSIESVKSITSDTPIL\n    LDVSGMMCGGCVARVKSVLMSDDRVASAVVNMLTETAAVKFKPEVEVTADTAESLAKRLTESGFEAKRRVSGMGVAENV\n    KKWKEMVSKKEDLLVKSRNRVAFAWTLVALCCGSHTSHILHSLGIHIAHGGIWDLLHNSYVKGGLAVGALLGPGRELLF\n    DGIKAFGKRSPNMNSLVGLGSMAAFSISLISLVNPELEWDASFFDEPVMLLGFVLLGRSLEERAKLQASTDMNELLSLI\n    STQSRLVITSSDNNTPVDSVLSSDSICINVSVDDIRVGDSLLVLPGETFPVDGSVLAGRSVVDESMLTGESLPVFKEEG\n    CSVSAGTINWDGPLRIKASSTGSNSTISKIVRMVEDAQGNAAPVQRLADAIAGPFVYTIMSLSAMTFAFWYYVGSHIFP\n    DVLLNDIAGPDGDALALSLKLAVDVLVVSCPCALGLATPTAILIGTSLGAKRGYLIRGGDVLERLASIDCVALDKTGTL\n    TEGRPVVSGVASLGYEEQEVLKMAAAVEKTATHPIAKAIVNEAESLNLKTPETRGQLTEPGFGTLAEIDGRFVAVGSLE\n    WVSDRFLKKNDSSDMVKLESLLDHKLSNTSSTSRYSKTVVYVGREGEGIIGAIAISDCLRQDAEFTVARLQEKGIKTVL\n    LSGDREGAVATVAKNVGIKSESTNYSLSPEKKFEFISNLQSSGHRVAMVGDGINDAPSLAQADVGIALKIEAQENAASN\n    AASVILVRNKLSHVVDALSLAQATMSKVYQNLAWAIAYNVISIPIAAGVLLPQYDFAMTPSLSGGLMALSSIFVVSNSL\n    LLQLHKSETSKNSL\n\nWe can then run tmhmm.py on this file using the following command:\n\n    $ tmhmm -m TMHMM2.0.model -f test.fa\n\nThis produces a bunch of files. One is the summary:\n\n    $ cat B9DFX7|1B|HMA8_ARATH.summary\n    0-444: outside\n    445-467: transmembrane helix\n    468-820: inside\n    821-843: transmembrane helix\n    844-852: outside\n    853-870: transmembrane helix\n    871-882: inside\n\nAn annotation in FASTA format:\n\n    $ cat B9DFX7|1B|HMA8_ARATH.annotation\n    >B9DFX7|1B|HMA8_ARATH Copper-transporting ATPase PAA2, chloroplastic  [Arabidopsis thaliana ]\n    OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n    OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n    OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n    OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n    OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\n    OOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOMMMMMMMMMMMMMMMMMMMMMMMiiiiii\n    iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n    iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n    iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n    iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\n    iiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiMMMMMMMMMMMMMMMMMMMMMMMoooooooooMMMMMMMMMMMMMMMM\n    MMiiiiiiiiiiii\n\nAnd finally a file containing the posterior probabilities for each label for\nplotting.\n\n    $ cat B9DFX7|1B|HMA8_ARATH.plot\n    inside membrane outside\n    0.20341044516 0.0 0.79658955484\n    0.210104176071 2.77194446172e-08 0.78989579621\n    0.189291062167 3.11365191554e-08 0.810708906697\n    0.253334801857 7.17866017044e-07 0.746664480277\n    0.126185012808 1.34197873962e-05 0.873801567405\n    ...\n\nIf the `-p` flag is set a plot in PDF format will also be produced, following\nthe same naming scheme as the other output files.\n\n# API\n\nYou can also use tmhmm.py as a library:\n\n    import tmhmm\n    annotation, posterior = tmhmm.predict(sequence, 'mymodel.model')\n\nThis returns the annotation as a string and the posterior probabilities for\neach label as a numpy array with shape `(len(sequence), 3)` where column 0, 1\nand 2 corresponds to being inside, transmembrane and outside, respectively.\n\nIf you don't need the posterior probabilities set `compute_posterior=False`,\nthis will save quite a lot of computation:\n\n    annotation, posterior = tmhmm.predict(\n        sequence, 'mymodel.model', compute_posterior=False\n    )\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dansondergaard/tmhmm.py/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tmhmm.py", "package_url": "https://pypi.org/project/tmhmm.py/", "platform": "", "project_url": "https://pypi.org/project/tmhmm.py/", "project_urls": {"Homepage": "https://github.com/dansondergaard/tmhmm.py/"}, "release_url": "https://pypi.org/project/tmhmm.py/1.3.1/", "requires_dist": ["numpy (>=1.9)", "matplotlib; extra == 'plotting'"], "requires_python": "", "summary": "A transmembrane helix finder.", "version": "1.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Introduction</h1>\n<p>This repository houses a Python 3.5+ implementation of transmembrane helix\nhidden Markov model (<a href=\"http://www.cbs.dtu.dk/services/TMHMM/\" rel=\"nofollow\">TMHMM</a>) originally\ndescribed in:</p>\n<p>E. L.L. Sonnhammer, G. von Heijne, and A. Krogh. <strong>A hidden Markov model for\npredicting transmembrane helices in protein sequences</strong>. In J. Glasgow,\nT. Littlejohn, F. Major, R. Lathrop, D. Sankoff, and C. Sensen, editors,\nProceedings of the Sixth International Conference on Intelligent Systems for\nMolecular Biology, pages 175-182, Menlo Park, CA, 1998. AAAI Press.</p>\n<h1>Why?</h1>\n<p>I did this for a few reasons:</p>\n<ul>\n<li>the source code is not available as part of the publication,</li>\n<li>the downloadable binaries are Linux-only,</li>\n<li>the downloadable binaries may not be redistributed, so it's not possible to\nput them in a Docker image or a VM for other people to use,</li>\n<li>the need to predict transmembrane helices on a large dataset, which rules\nout the web service.</li>\n</ul>\n<p>This Python implementation includes a parser for the undocumented file format\nused to describe the model and a pretty fast Cython implementation of the\nViterbi algorithm used to perform the annotation. The tool will output files\nsimilar to the files produced by the original TMHMM implementation.</p>\n<h1>Incompatibilities</h1>\n<ul>\n<li>The original TMHMM implementation handles ambigious characters and gaps in an\nundocumented way. However, tmhmm.py does not attempt to handle such\ncharacters at all and will fail. A possible fix is to replace those\ncharacters with something also based on expert/domain knowledge. For details,\nsee issue #9.</li>\n</ul>\n<h1>Installation</h1>\n<p>This package supports Python 3.5, 3.6, and 3.7. Install with:</p>\n<pre><code>$ pip install tmhmm.py\n</code></pre>\n<p>Only Linux is supported at the moment.</p>\n<h1>Usage</h1>\n<pre><code>$ tmhmm -h\n  usage: tmhmm [-h] -f SEQUENCE_FILE [-m MODEL_FILE] [-p]\n\n  optional arguments:\n    -h, --help            show this help message and exit\n    -f SEQUENCE_FILE, --file SEQUENCE_FILE\n                          path to file in fasta format with sequences\n    -m MODEL_FILE, --model MODEL_FILE\n                          path to the model to use\n    -p, --plot            plot posterior probabilies\n</code></pre>\n<p>The <code>-p</code>/<code>--plot</code> option will only be available if <code>matplotlib</code> is installed\nand importable.</p>\n<p>Say we have the following sequence in FASTA format in a file called <code>test.fa</code>:</p>\n<pre><code>&gt;B9DFX7|1B|HMA8_ARATH Copper-transporting ATPase PAA2, chloroplastic  [Arabidopsis thaliana ]\nMASNLLRFPLPPPSSLHIRPSKFLVNRCFPRLRRSRIRRHCSRPFFLVSNSVEISTQSFESTESSIESVKSITSDTPIL\nLDVSGMMCGGCVARVKSVLMSDDRVASAVVNMLTETAAVKFKPEVEVTADTAESLAKRLTESGFEAKRRVSGMGVAENV\nKKWKEMVSKKEDLLVKSRNRVAFAWTLVALCCGSHTSHILHSLGIHIAHGGIWDLLHNSYVKGGLAVGALLGPGRELLF\nDGIKAFGKRSPNMNSLVGLGSMAAFSISLISLVNPELEWDASFFDEPVMLLGFVLLGRSLEERAKLQASTDMNELLSLI\nSTQSRLVITSSDNNTPVDSVLSSDSICINVSVDDIRVGDSLLVLPGETFPVDGSVLAGRSVVDESMLTGESLPVFKEEG\nCSVSAGTINWDGPLRIKASSTGSNSTISKIVRMVEDAQGNAAPVQRLADAIAGPFVYTIMSLSAMTFAFWYYVGSHIFP\nDVLLNDIAGPDGDALALSLKLAVDVLVVSCPCALGLATPTAILIGTSLGAKRGYLIRGGDVLERLASIDCVALDKTGTL\nTEGRPVVSGVASLGYEEQEVLKMAAAVEKTATHPIAKAIVNEAESLNLKTPETRGQLTEPGFGTLAEIDGRFVAVGSLE\nWVSDRFLKKNDSSDMVKLESLLDHKLSNTSSTSRYSKTVVYVGREGEGIIGAIAISDCLRQDAEFTVARLQEKGIKTVL\nLSGDREGAVATVAKNVGIKSESTNYSLSPEKKFEFISNLQSSGHRVAMVGDGINDAPSLAQADVGIALKIEAQENAASN\nAASVILVRNKLSHVVDALSLAQATMSKVYQNLAWAIAYNVISIPIAAGVLLPQYDFAMTPSLSGGLMALSSIFVVSNSL\nLLQLHKSETSKNSL\n</code></pre>\n<p>We can then run tmhmm.py on this file using the following command:</p>\n<pre><code>$ tmhmm -m TMHMM2.0.model -f test.fa\n</code></pre>\n<p>This produces a bunch of files. One is the summary:</p>\n<pre><code>$ cat B9DFX7|1B|HMA8_ARATH.summary\n0-444: outside\n445-467: transmembrane helix\n468-820: inside\n821-843: transmembrane helix\n844-852: outside\n853-870: transmembrane helix\n871-882: inside\n</code></pre>\n<p>An annotation in FASTA format:</p>\n<pre><code>$ cat B9DFX7|1B|HMA8_ARATH.annotation\n&gt;B9DFX7|1B|HMA8_ARATH Copper-transporting ATPase PAA2, chloroplastic  [Arabidopsis thaliana ]\nOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\nOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\nOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\nOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\nOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO\nOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOMMMMMMMMMMMMMMMMMMMMMMMiiiiii\niiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiii\niiiiiiiiiiiiiiiiiiiiiiiiiiiiiiiMMMMMMMMMMMMMMMMMMMMMMMoooooooooMMMMMMMMMMMMMMMM\nMMiiiiiiiiiiii\n</code></pre>\n<p>And finally a file containing the posterior probabilities for each label for\nplotting.</p>\n<pre><code>$ cat B9DFX7|1B|HMA8_ARATH.plot\ninside membrane outside\n0.20341044516 0.0 0.79658955484\n0.210104176071 2.77194446172e-08 0.78989579621\n0.189291062167 3.11365191554e-08 0.810708906697\n0.253334801857 7.17866017044e-07 0.746664480277\n0.126185012808 1.34197873962e-05 0.873801567405\n...\n</code></pre>\n<p>If the <code>-p</code> flag is set a plot in PDF format will also be produced, following\nthe same naming scheme as the other output files.</p>\n<h1>API</h1>\n<p>You can also use tmhmm.py as a library:</p>\n<pre><code>import tmhmm\nannotation, posterior = tmhmm.predict(sequence, 'mymodel.model')\n</code></pre>\n<p>This returns the annotation as a string and the posterior probabilities for\neach label as a numpy array with shape <code>(len(sequence), 3)</code> where column 0, 1\nand 2 corresponds to being inside, transmembrane and outside, respectively.</p>\n<p>If you don't need the posterior probabilities set <code>compute_posterior=False</code>,\nthis will save quite a lot of computation:</p>\n<pre><code>annotation, posterior = tmhmm.predict(\n    sequence, 'mymodel.model', compute_posterior=False\n)\n</code></pre>\n\n          </div>"}, "last_serial": 6804041, "releases": {"1.2": [{"comment_text": "", "digests": {"md5": "186748d69decc6b96084d10be1796c51", "sha256": "7e944ca0e9ca1f44cefcb6ddc0e0506b9673d0a33b4b7365c5acaf349b72a52a"}, "downloads": -1, "filename": "tmhmm.py-1.2-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "186748d69decc6b96084d10be1796c51", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 52406, "upload_time": "2019-02-19T13:09:46", "upload_time_iso_8601": "2019-02-19T13:09:46.456772Z", "url": "https://files.pythonhosted.org/packages/b0/44/5d92d255c328939afc38b7d8f19bc4eee95f3403e42b67464f6bc18b82e2/tmhmm.py-1.2-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47c78e3298d9580e942c583e9a963c79", "sha256": "eca7749914a9516a429e8d0f731402209b2dba2c34c19d7a82fb995e10af69fe"}, "downloads": -1, "filename": "tmhmm.py-1.2.tar.gz", "has_sig": false, "md5_digest": "47c78e3298d9580e942c583e9a963c79", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12041, "upload_time": "2019-02-19T13:09:48", "upload_time_iso_8601": "2019-02-19T13:09:48.745610Z", "url": "https://files.pythonhosted.org/packages/fb/cd/36160cb2ec92fb48de5b9b3d337d8984a8314798b26e69f6530b0a52c496/tmhmm.py-1.2.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "59e5b65e68cc1a02c4cbb406bccd3ddf", "sha256": "e0e4ea10caba4c974c7d21f7680f05d91b29e0cd79cbe9c4500dc11ac7f7a6e3"}, "downloads": -1, "filename": "tmhmm.py-1.2.1-cp36-cp36m-macosx_10_7_x86_64.whl", "has_sig": false, "md5_digest": "59e5b65e68cc1a02c4cbb406bccd3ddf", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 57714, "upload_time": "2019-02-19T13:13:58", "upload_time_iso_8601": "2019-02-19T13:13:58.989867Z", "url": "https://files.pythonhosted.org/packages/f2/97/9ea2eb4409f2dae653a9be95349c0b552135aaccd22f37e47f96abffc54f/tmhmm.py-1.2.1-cp36-cp36m-macosx_10_7_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1bb7b79d81deb4cd9b478d60752eea1c", "sha256": "1264b497ecfa295b2e3046f462a345c1e545e81d06e133e37ca0c692d7e7e4c6"}, "downloads": -1, "filename": "tmhmm.py-1.2.1.tar.gz", "has_sig": false, "md5_digest": "1bb7b79d81deb4cd9b478d60752eea1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12545, "upload_time": "2019-02-19T13:14:00", "upload_time_iso_8601": "2019-02-19T13:14:00.322206Z", "url": "https://files.pythonhosted.org/packages/49/a4/64341a6e281402eaad4ee5d4b0b862ca186b125d0034ca41948b6ccf756c/tmhmm.py-1.2.1.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "fa1a355dc9ab78561dd5cc2836caa475", "sha256": "10008ea84ab54f40298fa825a5cd6c1397258a5b20c422eb4d5d75c62749ccbd"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fa1a355dc9ab78561dd5cc2836caa475", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 181107, "upload_time": "2020-03-13T07:04:49", "upload_time_iso_8601": "2020-03-13T07:04:49.490537Z", "url": "https://files.pythonhosted.org/packages/d3/76/9a94a92246c3f94304f11b7503c29b77dd52478255d344b296679326a635/tmhmm.py-1.3.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b8e1c348f4864b6698a7dd4be63cd0b", "sha256": "800933dbe335bd8a8e4869d4e17df70508ef55a2d03e25a21ed9f3d1edc53785"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "1b8e1c348f4864b6698a7dd4be63cd0b", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 181112, "upload_time": "2020-03-13T07:04:50", "upload_time_iso_8601": "2020-03-13T07:04:50.737793Z", "url": "https://files.pythonhosted.org/packages/b4/1c/874fe00b89980f23299e8a51c2b3a89fdd10f9e4b3f4f7179204ce591c06/tmhmm.py-1.3.1-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8e26841016fab025b90e9d79be83ac6", "sha256": "526e3bf31dcd4d2c27a64135bc266c6ac1498c035f6a0bde18c855fe99a02ed0"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c8e26841016fab025b90e9d79be83ac6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 181523, "upload_time": "2020-03-13T07:04:51", "upload_time_iso_8601": "2020-03-13T07:04:51.912609Z", "url": "https://files.pythonhosted.org/packages/d3/2a/1ffa9b01966e1250e442451068834a8061b2b2fcd70061a905928e1384ce/tmhmm.py-1.3.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08ab1401932e1c00f77c78088ddb240f", "sha256": "ceb3743237d76ada06d2135cd69dd028193253b6c1ee539ff74d9ab2d34739b2"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "08ab1401932e1c00f77c78088ddb240f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 181527, "upload_time": "2020-03-13T07:04:53", "upload_time_iso_8601": "2020-03-13T07:04:53.075560Z", "url": "https://files.pythonhosted.org/packages/78/15/a7f7460b3c1c8a1cf4f1335c9428dd0b339ad20cd286109e9c2f54a7e81f/tmhmm.py-1.3.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b181382aabb370f260aff60bd2e73166", "sha256": "9214a4943967deab0c48984a40947c44d6642ce106047b89943d8cc3735d4d11"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b181382aabb370f260aff60bd2e73166", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 182524, "upload_time": "2020-03-13T07:04:53", "upload_time_iso_8601": "2020-03-13T07:04:53.974780Z", "url": "https://files.pythonhosted.org/packages/5c/8a/cac83a3b8acead85abe3aa1cfe8dd30f62915b1c1acbf298c0a42b850dee/tmhmm.py-1.3.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99a09973e4ca4f7fe1ea0f867f332ee1", "sha256": "7314684aecc88a0c5519a92f425bdf7bb7a77350c0c329011a383f5a65afb3a2"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "99a09973e4ca4f7fe1ea0f867f332ee1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 182529, "upload_time": "2020-03-13T07:04:55", "upload_time_iso_8601": "2020-03-13T07:04:55.183272Z", "url": "https://files.pythonhosted.org/packages/b0/b6/8f59e68107d577c5f0ac70549e3ea8ba784be96280679876946f2d223278/tmhmm.py-1.3.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa1a355dc9ab78561dd5cc2836caa475", "sha256": "10008ea84ab54f40298fa825a5cd6c1397258a5b20c422eb4d5d75c62749ccbd"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp35-cp35m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "fa1a355dc9ab78561dd5cc2836caa475", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 181107, "upload_time": "2020-03-13T07:04:49", "upload_time_iso_8601": "2020-03-13T07:04:49.490537Z", "url": "https://files.pythonhosted.org/packages/d3/76/9a94a92246c3f94304f11b7503c29b77dd52478255d344b296679326a635/tmhmm.py-1.3.1-cp35-cp35m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b8e1c348f4864b6698a7dd4be63cd0b", "sha256": "800933dbe335bd8a8e4869d4e17df70508ef55a2d03e25a21ed9f3d1edc53785"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp35-cp35m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "1b8e1c348f4864b6698a7dd4be63cd0b", "packagetype": "bdist_wheel", "python_version": "cp35", "requires_python": null, "size": 181112, "upload_time": "2020-03-13T07:04:50", "upload_time_iso_8601": "2020-03-13T07:04:50.737793Z", "url": "https://files.pythonhosted.org/packages/b4/1c/874fe00b89980f23299e8a51c2b3a89fdd10f9e4b3f4f7179204ce591c06/tmhmm.py-1.3.1-cp35-cp35m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c8e26841016fab025b90e9d79be83ac6", "sha256": "526e3bf31dcd4d2c27a64135bc266c6ac1498c035f6a0bde18c855fe99a02ed0"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp36-cp36m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "c8e26841016fab025b90e9d79be83ac6", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 181523, "upload_time": "2020-03-13T07:04:51", "upload_time_iso_8601": "2020-03-13T07:04:51.912609Z", "url": "https://files.pythonhosted.org/packages/d3/2a/1ffa9b01966e1250e442451068834a8061b2b2fcd70061a905928e1384ce/tmhmm.py-1.3.1-cp36-cp36m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08ab1401932e1c00f77c78088ddb240f", "sha256": "ceb3743237d76ada06d2135cd69dd028193253b6c1ee539ff74d9ab2d34739b2"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp36-cp36m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "08ab1401932e1c00f77c78088ddb240f", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 181527, "upload_time": "2020-03-13T07:04:53", "upload_time_iso_8601": "2020-03-13T07:04:53.075560Z", "url": "https://files.pythonhosted.org/packages/78/15/a7f7460b3c1c8a1cf4f1335c9428dd0b339ad20cd286109e9c2f54a7e81f/tmhmm.py-1.3.1-cp36-cp36m-manylinux2010_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b181382aabb370f260aff60bd2e73166", "sha256": "9214a4943967deab0c48984a40947c44d6642ce106047b89943d8cc3735d4d11"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp37-cp37m-manylinux1_x86_64.whl", "has_sig": false, "md5_digest": "b181382aabb370f260aff60bd2e73166", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 182524, "upload_time": "2020-03-13T07:04:53", "upload_time_iso_8601": "2020-03-13T07:04:53.974780Z", "url": "https://files.pythonhosted.org/packages/5c/8a/cac83a3b8acead85abe3aa1cfe8dd30f62915b1c1acbf298c0a42b850dee/tmhmm.py-1.3.1-cp37-cp37m-manylinux1_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99a09973e4ca4f7fe1ea0f867f332ee1", "sha256": "7314684aecc88a0c5519a92f425bdf7bb7a77350c0c329011a383f5a65afb3a2"}, "downloads": -1, "filename": "tmhmm.py-1.3.1-cp37-cp37m-manylinux2010_x86_64.whl", "has_sig": false, "md5_digest": "99a09973e4ca4f7fe1ea0f867f332ee1", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 182529, "upload_time": "2020-03-13T07:04:55", "upload_time_iso_8601": "2020-03-13T07:04:55.183272Z", "url": "https://files.pythonhosted.org/packages/b0/b6/8f59e68107d577c5f0ac70549e3ea8ba784be96280679876946f2d223278/tmhmm.py-1.3.1-cp37-cp37m-manylinux2010_x86_64.whl", "yanked": false}], "timestamp": "Fri May  8 03:52:12 2020"}