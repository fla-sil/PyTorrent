{"info": {"author": "Uku Raudvere", "author_email": "biit.support@ut.ee", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "# gprofiler\n\n## Project description\n\nThe official Python 3 interface to the [g:Profiler](https://biit.cs.ut.ee/gprofiler/) \ntoolkit for enrichment analysis of functional (GO and other) terms, \nconversion between identifier namespaces and mapping orhologous genes in related organisms. \n\nIt has an optional dependency on pandas.\n\n### Installing gprofiler\n\nthe recommended way of installing gprofiler is using pip\n```bash\npip install gprofiler-official\n```\n\n### Legacy version \n\nThe `0.3.x` series of gprofiler-official is incompatible with the `1.0.x` series. We changed the major version number to \nsignify the breaking changes in the API. To install the previous version of `gprofiler-official`, use the command\n```bash\npip install gprofiler-official==0.3.5\n```\n\n## Tools:\n\nTo use any of the tools in the g:Profiler toolkit, first initialize the GProfiler object.\n\n```python\nfrom gprofiler import GProfiler\ngp = GProfiler(\n    user_agent='ExampleTool', #optional user agent\n    return_dataframe=True, #return pandas dataframe or plain python structures    \n)\n```\n\n\n### g:GOSt (profile)\n\n```python\nfrom gprofiler import GProfiler\n\ngp = GProfiler(return_dataframe=True)\ngp.profile(organism='hsapiens',\n            query=['NR1H4','TRIP12','UBC','FCRL3','PLXNA3','GDNF','VPS11'])\n```\n\nOutput:\n```\nsource      native                                            name   p_value  significant                                        description  term_size  query_size  intersection_size  effective_domain_size  precision    recall    query                               parents\nGO:BP  GO:0048585     negative regulation of response to stimulus  0.004229         True  \"Any process that stops, prevents, or reduces ...       1610           7                  6                  17622   0.857143  0.003727  query_1  [GO:0048583, GO:0048519, GO:0050896]\nGO:BP  GO:0002224            toll-like receptor signaling pathway  0.016351         True  \"Any series of molecular signals generated as ...        133           7                  3                  17622   0.428571  0.022556  query_1                          [GO:0002221]\nGO:BP  GO:0048486      parasympathetic nervous system development  0.026199         True  \"The process whose specific outcome is the pro...         19           7                  2                  17622   0.285714  0.105263  query_1              [GO:0048483, GO:0048731]\nGO:BP  GO:0034162          toll-like receptor 9 signaling pathway  0.038733         True  \"Any series of molecular signals generated as ...         23           7                  2                  17622   0.285714  0.086957  query_1                          [GO:0002224]\nGO:BP  GO:0002221  pattern recognition receptor signaling pathway  0.039782         True  \"Any series of molecular signals generated as ...        179           7                  3                  17622   0.428571  0.016760  query_1                          [GO:0002758]\nCORUM  CORUM:5669                           PlexinA3-Nrp1 complex  0.049767         True                              PlexinA3-Nrp1 complex          2           2                  1                   3620   0.500000  0.500000  query_1                       [CORUM:0000000]\nCORUM  CORUM:5759                           PLXNA3-RANBPM complex  0.049767         True                              PLXNA3-RANBPM complex          2           2                  1                   3620   0.500000  0.500000  query_1                       [CORUM:0000000]\n```\n\n* `source` is the code for the datasource\n* `native` is the ID for the enriched term/functional category in its native namespace.\n* `name` is the readable name for the enriched term, `description` is the longer description if available.\n* `p_value` is the corrected p-value for the \n* `term_size`, `query_size`, `intersection_size`, `effective_domain_size` are parameters to the hypergeometric test.\n* `query` is the name of the query and is significant if multiple queries were made in one call (e.g `gp.profile(query={'query1':['NR1H4'], 'query2':['NR1H4','TRIP12']})`)\n\nSetting the parameter `no_evidences=False` would add the column `intersections` (a list of genes that are annotated to the term and are present in the query )\nand the column `evidences` (a list of lists of GO evidence codes for the intersecting genes)\n\n\n\n\nNB! the parameter `combined` significantly changes the output structure by packing the results of distinct queries together.\nFor example:\n\n```python\ngp.profile(query={'query1':['NR1H4'], 'query2':['NR1H4','TRIP12']}, combined=True)\n```\nOutput (truncated):\n```\nsource      native                                               name                                     p_values                                        description  term_size query_sizes intersection_sizes  effective_domain_size                                           parents\nGO:MF  GO:1902122                      chenodeoxycholic acid binding  [0.024822026073022193, 0.04964405214614093]  \"Interacting selectively and non-covalently wi...          1      [1, 2]             [1, 1]                  17516                          [GO:0032052, GO:0005496]\nGO:MF  GO:0035257                   nuclear hormone receptor binding                  [1.0, 0.033391754400990514]  \"Interacting selectively and non-covalently wi...        154      [1, 2]             [1, 2]                  17516                          [GO:0051427, GO:0061629]\nGO:MF  GO:0051427                           hormone receptor binding                   [1.0, 0.04929258983003374]  \"Interacting selectively and non-covalently wi...        187      [1, 2]             [1, 2]                  17516                                      [GO:0005102]\n```\n\n\n### g:Convert (convert)\n\n```python\nfrom gprofiler import GProfiler\n\ngp = GProfiler(return_dataframe=True)\ngp.convert(organism='hsapiens',\n            query=['NR1H4','TRIP12','UBC','FCRL3','PLXNA3','GDNF','VPS11'],\n            target_namespace='ENTREZGENE_ACC')\n\n```\n\nOutput:\n```\nincoming converted  n_incoming  n_converted    name                                        description                           namespaces    query\n  NR1H4      9971           1            1   NR1H4  nuclear receptor subfamily 1 group H member 4 ...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n TRIP12      9320           2            1  TRIP12  thyroid hormone receptor interactor 12 [Source...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n    UBC      7316           3            1     UBC    ubiquitin C [Source:HGNC Symbol;Acc:HGNC:12468]  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n  FCRL3    115352           4            1   FCRL3  Fc receptor like 3 [Source:HGNC Symbol;Acc:HGN...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n PLXNA3     55558           5            1  PLXNA3       plexin A3 [Source:HGNC Symbol;Acc:HGNC:9101]             ENTREZGENE,HGNC,WIKIGENE  query_1\n   GDNF      2668           6            1    GDNF  glial cell derived neurotrophic factor [Source...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n  VPS11     55823           7            1   VPS11  VPS11, CORVET/HOPS core subunit [Source:HGNC S...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n PLXNA3     55558           5            1  PLXNA3       plexin A3 [Source:HGNC Symbol;Acc:HGNC:9101]             ENTREZGENE,HGNC,WIKIGENE  query_1\n```\n\n`incoming` column lists the input gene, `converted` lists the gene in the target namespace (Entrez Gene accession number in this case). \n\n\n\n### g:Orth (orth)\n\n```python\nfrom gprofiler import GProfiler\n\ngp = GProfiler(return_dataframe=True)\ngp.orth(organism='hsapiens',\n            query=['NR1H4','TRIP12','UBC','FCRL3','PLXNA3','GDNF','VPS11'],\n            target='mmusculus')\n\n```\nOutput:\n```\nincoming        converted       ortholog_ensg  n_incoming  n_converted  n_result    name                                        description                           namespaces\n  NR1H4  ENSG00000012504  ENSMUSG00000047638           1            1         1   Nr1h4  nuclear receptor subfamily 1, group H, member ...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n TRIP12  ENSG00000153827  ENSMUSG00000026219           2            1         1  Trip12  thyroid hormone receptor interactor 12 [Source...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n    UBC  ENSG00000150991  ENSMUSG00000008348           3            1         1     Ubc      ubiquitin C [Source:MGI Symbol;Acc:MGI:98889]  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n  FCRL3  ENSG00000160856                 N/A           4            1         1     N/A                                                N/A  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n PLXNA3  ENSG00000130827  ENSMUSG00000031398           5            1         1  Plxna3       plexin A3 [Source:MGI Symbol;Acc:MGI:107683]             ENTREZGENE,HGNC,WIKIGENE\n   GDNF  ENSG00000168621  ENSMUSG00000022144           6            1         1    Gdnf  glial cell line derived neurotrophic factor [S...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n  VPS11  ENSG00000160695  ENSMUSG00000032127           7            1         1   Vps11  VPS11, CORVET/HOPS core subunit [Source:MGI Sy...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n\n```\n\n`incoming` is the input gene, `converted` is the canonical Ensembl ID for the input gene, \n`ortholog_ensg` is the canonical Ensembl ID for the orthologous gene in the target organism.\n\n### g:SNPense (snpense)\n\n```python\nfrom gprofiler import GProfiler\n\ngp = GProfiler(return_dataframe=True)\ngp.snpense(query=['rs11734132', 'rs7961894', 'rs4305276', 'rs17396340'])\n```\nOutput:\n\n```\nrs_id chromosome strand      start        end              ensgs gene_names                                           variants\nrs11734132                           -1         -1                 []         []  {'intron_variant': 0, 'non_coding_transcript_v...\n rs7961894         12      +  121927677  121927677  [ENSG00000158023]    [WDR66]  {'intron_variant': 3, 'non_coding_transcript_v...\n rs4305276          2      +  240555596  240555596  [ENSG00000144504]   [ANKMY1]  {'intron_variant': 57, 'non_coding_transcript_...\nrs17396340          1      +   10226118   10226118  [ENSG00000054523]    [KIF1B]  {'intron_variant': 8, 'non_coding_transcript_v...\n\n```\n* `rs_id` is the input rs-number\n* `chromosome`, `strand`, `start` and `end` encode the position of the variation\n* `ensgs` and `gene_names` are lists of protein-encoding genes associated with the rs-number.\n* `variants` are predicted variant effects.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://biit.cs.ut.ee/gprofiler/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gprofiler-official", "package_url": "https://pypi.org/project/gprofiler-official/", "platform": "", "project_url": "https://pypi.org/project/gprofiler-official/", "project_urls": {"Homepage": "https://biit.cs.ut.ee/gprofiler/"}, "release_url": "https://pypi.org/project/gprofiler-official/1.0.0/", "requires_dist": ["requests"], "requires_python": "", "summary": "Functional enrichment analysis and more via the g:Profiler toolkit", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gprofiler</h1>\n<h2>Project description</h2>\n<p>The official Python 3 interface to the <a href=\"https://biit.cs.ut.ee/gprofiler/\" rel=\"nofollow\">g:Profiler</a>\ntoolkit for enrichment analysis of functional (GO and other) terms,\nconversion between identifier namespaces and mapping orhologous genes in related organisms.</p>\n<p>It has an optional dependency on pandas.</p>\n<h3>Installing gprofiler</h3>\n<p>the recommended way of installing gprofiler is using pip</p>\n<pre>pip install gprofiler-official\n</pre>\n<h3>Legacy version</h3>\n<p>The <code>0.3.x</code> series of gprofiler-official is incompatible with the <code>1.0.x</code> series. We changed the major version number to\nsignify the breaking changes in the API. To install the previous version of <code>gprofiler-official</code>, use the command</p>\n<pre>pip install gprofiler-official<span class=\"o\">==</span><span class=\"m\">0</span>.3.5\n</pre>\n<h2>Tools:</h2>\n<p>To use any of the tools in the g:Profiler toolkit, first initialize the GProfiler object.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gprofiler</span> <span class=\"kn\">import</span> <span class=\"n\">GProfiler</span>\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GProfiler</span><span class=\"p\">(</span>\n    <span class=\"n\">user_agent</span><span class=\"o\">=</span><span class=\"s1\">'ExampleTool'</span><span class=\"p\">,</span> <span class=\"c1\">#optional user agent</span>\n    <span class=\"n\">return_dataframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span> <span class=\"c1\">#return pandas dataframe or plain python structures    </span>\n<span class=\"p\">)</span>\n</pre>\n<h3>g:GOSt (profile)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gprofiler</span> <span class=\"kn\">import</span> <span class=\"n\">GProfiler</span>\n\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GProfiler</span><span class=\"p\">(</span><span class=\"n\">return_dataframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">(</span><span class=\"n\">organism</span><span class=\"o\">=</span><span class=\"s1\">'hsapiens'</span><span class=\"p\">,</span>\n            <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'NR1H4'</span><span class=\"p\">,</span><span class=\"s1\">'TRIP12'</span><span class=\"p\">,</span><span class=\"s1\">'UBC'</span><span class=\"p\">,</span><span class=\"s1\">'FCRL3'</span><span class=\"p\">,</span><span class=\"s1\">'PLXNA3'</span><span class=\"p\">,</span><span class=\"s1\">'GDNF'</span><span class=\"p\">,</span><span class=\"s1\">'VPS11'</span><span class=\"p\">])</span>\n</pre>\n<p>Output:</p>\n<pre><code>source      native                                            name   p_value  significant                                        description  term_size  query_size  intersection_size  effective_domain_size  precision    recall    query                               parents\nGO:BP  GO:0048585     negative regulation of response to stimulus  0.004229         True  \"Any process that stops, prevents, or reduces ...       1610           7                  6                  17622   0.857143  0.003727  query_1  [GO:0048583, GO:0048519, GO:0050896]\nGO:BP  GO:0002224            toll-like receptor signaling pathway  0.016351         True  \"Any series of molecular signals generated as ...        133           7                  3                  17622   0.428571  0.022556  query_1                          [GO:0002221]\nGO:BP  GO:0048486      parasympathetic nervous system development  0.026199         True  \"The process whose specific outcome is the pro...         19           7                  2                  17622   0.285714  0.105263  query_1              [GO:0048483, GO:0048731]\nGO:BP  GO:0034162          toll-like receptor 9 signaling pathway  0.038733         True  \"Any series of molecular signals generated as ...         23           7                  2                  17622   0.285714  0.086957  query_1                          [GO:0002224]\nGO:BP  GO:0002221  pattern recognition receptor signaling pathway  0.039782         True  \"Any series of molecular signals generated as ...        179           7                  3                  17622   0.428571  0.016760  query_1                          [GO:0002758]\nCORUM  CORUM:5669                           PlexinA3-Nrp1 complex  0.049767         True                              PlexinA3-Nrp1 complex          2           2                  1                   3620   0.500000  0.500000  query_1                       [CORUM:0000000]\nCORUM  CORUM:5759                           PLXNA3-RANBPM complex  0.049767         True                              PLXNA3-RANBPM complex          2           2                  1                   3620   0.500000  0.500000  query_1                       [CORUM:0000000]\n</code></pre>\n<ul>\n<li><code>source</code> is the code for the datasource</li>\n<li><code>native</code> is the ID for the enriched term/functional category in its native namespace.</li>\n<li><code>name</code> is the readable name for the enriched term, <code>description</code> is the longer description if available.</li>\n<li><code>p_value</code> is the corrected p-value for the</li>\n<li><code>term_size</code>, <code>query_size</code>, <code>intersection_size</code>, <code>effective_domain_size</code> are parameters to the hypergeometric test.</li>\n<li><code>query</code> is the name of the query and is significant if multiple queries were made in one call (e.g <code>gp.profile(query={'query1':['NR1H4'], 'query2':['NR1H4','TRIP12']})</code>)</li>\n</ul>\n<p>Setting the parameter <code>no_evidences=False</code> would add the column <code>intersections</code> (a list of genes that are annotated to the term and are present in the query )\nand the column <code>evidences</code> (a list of lists of GO evidence codes for the intersecting genes)</p>\n<p>NB! the parameter <code>combined</code> significantly changes the output structure by packing the results of distinct queries together.\nFor example:</p>\n<pre><span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">profile</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'query1'</span><span class=\"p\">:[</span><span class=\"s1\">'NR1H4'</span><span class=\"p\">],</span> <span class=\"s1\">'query2'</span><span class=\"p\">:[</span><span class=\"s1\">'NR1H4'</span><span class=\"p\">,</span><span class=\"s1\">'TRIP12'</span><span class=\"p\">]},</span> <span class=\"n\">combined</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Output (truncated):</p>\n<pre><code>source      native                                               name                                     p_values                                        description  term_size query_sizes intersection_sizes  effective_domain_size                                           parents\nGO:MF  GO:1902122                      chenodeoxycholic acid binding  [0.024822026073022193, 0.04964405214614093]  \"Interacting selectively and non-covalently wi...          1      [1, 2]             [1, 1]                  17516                          [GO:0032052, GO:0005496]\nGO:MF  GO:0035257                   nuclear hormone receptor binding                  [1.0, 0.033391754400990514]  \"Interacting selectively and non-covalently wi...        154      [1, 2]             [1, 2]                  17516                          [GO:0051427, GO:0061629]\nGO:MF  GO:0051427                           hormone receptor binding                   [1.0, 0.04929258983003374]  \"Interacting selectively and non-covalently wi...        187      [1, 2]             [1, 2]                  17516                                      [GO:0005102]\n</code></pre>\n<h3>g:Convert (convert)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gprofiler</span> <span class=\"kn\">import</span> <span class=\"n\">GProfiler</span>\n\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GProfiler</span><span class=\"p\">(</span><span class=\"n\">return_dataframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">convert</span><span class=\"p\">(</span><span class=\"n\">organism</span><span class=\"o\">=</span><span class=\"s1\">'hsapiens'</span><span class=\"p\">,</span>\n            <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'NR1H4'</span><span class=\"p\">,</span><span class=\"s1\">'TRIP12'</span><span class=\"p\">,</span><span class=\"s1\">'UBC'</span><span class=\"p\">,</span><span class=\"s1\">'FCRL3'</span><span class=\"p\">,</span><span class=\"s1\">'PLXNA3'</span><span class=\"p\">,</span><span class=\"s1\">'GDNF'</span><span class=\"p\">,</span><span class=\"s1\">'VPS11'</span><span class=\"p\">],</span>\n            <span class=\"n\">target_namespace</span><span class=\"o\">=</span><span class=\"s1\">'ENTREZGENE_ACC'</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>incoming converted  n_incoming  n_converted    name                                        description                           namespaces    query\n  NR1H4      9971           1            1   NR1H4  nuclear receptor subfamily 1 group H member 4 ...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n TRIP12      9320           2            1  TRIP12  thyroid hormone receptor interactor 12 [Source...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n    UBC      7316           3            1     UBC    ubiquitin C [Source:HGNC Symbol;Acc:HGNC:12468]  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n  FCRL3    115352           4            1   FCRL3  Fc receptor like 3 [Source:HGNC Symbol;Acc:HGN...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n PLXNA3     55558           5            1  PLXNA3       plexin A3 [Source:HGNC Symbol;Acc:HGNC:9101]             ENTREZGENE,HGNC,WIKIGENE  query_1\n   GDNF      2668           6            1    GDNF  glial cell derived neurotrophic factor [Source...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n  VPS11     55823           7            1   VPS11  VPS11, CORVET/HOPS core subunit [Source:HGNC S...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE  query_1\n PLXNA3     55558           5            1  PLXNA3       plexin A3 [Source:HGNC Symbol;Acc:HGNC:9101]             ENTREZGENE,HGNC,WIKIGENE  query_1\n</code></pre>\n<p><code>incoming</code> column lists the input gene, <code>converted</code> lists the gene in the target namespace (Entrez Gene accession number in this case).</p>\n<h3>g:Orth (orth)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gprofiler</span> <span class=\"kn\">import</span> <span class=\"n\">GProfiler</span>\n\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GProfiler</span><span class=\"p\">(</span><span class=\"n\">return_dataframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">orth</span><span class=\"p\">(</span><span class=\"n\">organism</span><span class=\"o\">=</span><span class=\"s1\">'hsapiens'</span><span class=\"p\">,</span>\n            <span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'NR1H4'</span><span class=\"p\">,</span><span class=\"s1\">'TRIP12'</span><span class=\"p\">,</span><span class=\"s1\">'UBC'</span><span class=\"p\">,</span><span class=\"s1\">'FCRL3'</span><span class=\"p\">,</span><span class=\"s1\">'PLXNA3'</span><span class=\"p\">,</span><span class=\"s1\">'GDNF'</span><span class=\"p\">,</span><span class=\"s1\">'VPS11'</span><span class=\"p\">],</span>\n            <span class=\"n\">target</span><span class=\"o\">=</span><span class=\"s1\">'mmusculus'</span><span class=\"p\">)</span>\n</pre>\n<p>Output:</p>\n<pre><code>incoming        converted       ortholog_ensg  n_incoming  n_converted  n_result    name                                        description                           namespaces\n  NR1H4  ENSG00000012504  ENSMUSG00000047638           1            1         1   Nr1h4  nuclear receptor subfamily 1, group H, member ...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n TRIP12  ENSG00000153827  ENSMUSG00000026219           2            1         1  Trip12  thyroid hormone receptor interactor 12 [Source...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n    UBC  ENSG00000150991  ENSMUSG00000008348           3            1         1     Ubc      ubiquitin C [Source:MGI Symbol;Acc:MGI:98889]  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n  FCRL3  ENSG00000160856                 N/A           4            1         1     N/A                                                N/A  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n PLXNA3  ENSG00000130827  ENSMUSG00000031398           5            1         1  Plxna3       plexin A3 [Source:MGI Symbol;Acc:MGI:107683]             ENTREZGENE,HGNC,WIKIGENE\n   GDNF  ENSG00000168621  ENSMUSG00000022144           6            1         1    Gdnf  glial cell line derived neurotrophic factor [S...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n  VPS11  ENSG00000160695  ENSMUSG00000032127           7            1         1   Vps11  VPS11, CORVET/HOPS core subunit [Source:MGI Sy...  ENTREZGENE,HGNC,UNIPROT_GN,WIKIGENE\n\n</code></pre>\n<p><code>incoming</code> is the input gene, <code>converted</code> is the canonical Ensembl ID for the input gene,\n<code>ortholog_ensg</code> is the canonical Ensembl ID for the orthologous gene in the target organism.</p>\n<h3>g:SNPense (snpense)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">gprofiler</span> <span class=\"kn\">import</span> <span class=\"n\">GProfiler</span>\n\n<span class=\"n\">gp</span> <span class=\"o\">=</span> <span class=\"n\">GProfiler</span><span class=\"p\">(</span><span class=\"n\">return_dataframe</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">gp</span><span class=\"o\">.</span><span class=\"n\">snpense</span><span class=\"p\">(</span><span class=\"n\">query</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'rs11734132'</span><span class=\"p\">,</span> <span class=\"s1\">'rs7961894'</span><span class=\"p\">,</span> <span class=\"s1\">'rs4305276'</span><span class=\"p\">,</span> <span class=\"s1\">'rs17396340'</span><span class=\"p\">])</span>\n</pre>\n<p>Output:</p>\n<pre><code>rs_id chromosome strand      start        end              ensgs gene_names                                           variants\nrs11734132                           -1         -1                 []         []  {'intron_variant': 0, 'non_coding_transcript_v...\n rs7961894         12      +  121927677  121927677  [ENSG00000158023]    [WDR66]  {'intron_variant': 3, 'non_coding_transcript_v...\n rs4305276          2      +  240555596  240555596  [ENSG00000144504]   [ANKMY1]  {'intron_variant': 57, 'non_coding_transcript_...\nrs17396340          1      +   10226118   10226118  [ENSG00000054523]    [KIF1B]  {'intron_variant': 8, 'non_coding_transcript_v...\n\n</code></pre>\n<ul>\n<li><code>rs_id</code> is the input rs-number</li>\n<li><code>chromosome</code>, <code>strand</code>, <code>start</code> and <code>end</code> encode the position of the variation</li>\n<li><code>ensgs</code> and <code>gene_names</code> are lists of protein-encoding genes associated with the rs-number.</li>\n<li><code>variants</code> are predicted variant effects.</li>\n</ul>\n\n          </div>"}, "last_serial": 5049085, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "f05b3a99bd4f34ca4146d956fd8ce272", "sha256": "72dceb37401b1b6b0455cb10fd822119c7180cc17ff51679cd8adc1e729d2746"}, "downloads": -1, "filename": "gprofiler-official-0.1.tar.gz", "has_sig": false, "md5_digest": "f05b3a99bd4f34ca4146d956fd8ce272", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5058, "upload_time": "2016-02-02T18:03:34", "upload_time_iso_8601": "2016-02-02T18:03:34.899878Z", "url": "https://files.pythonhosted.org/packages/3a/c8/209341cd41e3f6a916089700482b50de57bada25aadccca2fc9ec2d9f1d1/gprofiler-official-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "9c0e4e57ae13bec41e395a8f578be782", "sha256": "baea739254c94411395c4b5e37d06c7440af5c24b1b70b4a2e72d52764646b8b"}, "downloads": -1, "filename": "gprofiler-official-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9c0e4e57ae13bec41e395a8f578be782", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5232, "upload_time": "2016-02-04T13:14:22", "upload_time_iso_8601": "2016-02-04T13:14:22.170256Z", "url": "https://files.pythonhosted.org/packages/49/4a/519356af319c6825222e3dc301a60581ad6cb2e546d6983eaecaf2ac0638/gprofiler-official-0.1.1.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5b0804cfe57f0e7cab99aed5040ed4da", "sha256": "fb8a5cdc93e35a27e00184b9ffd014809d240974b40a4ade699f8d803f948249"}, "downloads": -1, "filename": "gprofiler-official-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5b0804cfe57f0e7cab99aed5040ed4da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17501, "upload_time": "2016-05-25T16:04:35", "upload_time_iso_8601": "2016-05-25T16:04:35.055528Z", "url": "https://files.pythonhosted.org/packages/e3/87/632c311ec7d1943c64ce581a305353b76db1fc6e04897ec36d3a0eb25f59/gprofiler-official-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "e140cdb6a9aeefdfd55b56ccd825ea8c", "sha256": "024c7446879fb0a07b9bbe500cafebf67367b99e3a34c6c10c784f879b63e755"}, "downloads": -1, "filename": "gprofiler-official-0.2.2.tar.gz", "has_sig": false, "md5_digest": "e140cdb6a9aeefdfd55b56ccd825ea8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18035, "upload_time": "2016-06-07T18:39:54", "upload_time_iso_8601": "2016-06-07T18:39:54.542560Z", "url": "https://files.pythonhosted.org/packages/93/97/643b33130684e8332478539a0078caf8620e6ba4f648fb027a268d15fc15/gprofiler-official-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "71e98ce80b311ad19af1d4de2fea37db", "sha256": "6e5101b15daf624f7a592b6f3de826d9154e2f697a40c3ec73bee8bc06c093ef"}, "downloads": -1, "filename": "gprofiler-official-0.2.3.tar.gz", "has_sig": false, "md5_digest": "71e98ce80b311ad19af1d4de2fea37db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20821, "upload_time": "2016-06-07T18:57:11", "upload_time_iso_8601": "2016-06-07T18:57:11.049983Z", "url": "https://files.pythonhosted.org/packages/fa/67/92a393d6518fb46a5e5f17133598e25482a9a9f3901c05da1f6a1f3d4fbe/gprofiler-official-0.2.3.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ce4e4c65828183c231380ec91d8ca6bf", "sha256": "2b8a76cc98aaed08ef8ad2ce9ccd7ac653460402011027dbd62dd7ed4b8121b4"}, "downloads": -1, "filename": "gprofiler-official-0.3.tar.gz", "has_sig": false, "md5_digest": "ce4e4c65828183c231380ec91d8ca6bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21428, "upload_time": "2017-01-18T17:15:08", "upload_time_iso_8601": "2017-01-18T17:15:08.802528Z", "url": "https://files.pythonhosted.org/packages/7d/c0/eadd992fd952e99fc7efb074e864ea389596a6811c5b28851f1e57a998e7/gprofiler-official-0.3.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "92ecfe7401478a6a57d41ef5ad5f9596", "sha256": "a9ad85b9c642617fa046dd56a217e820878f28652dfe088cbeb5ed2516d2dc7d"}, "downloads": -1, "filename": "gprofiler-official-0.3.3.tar.gz", "has_sig": false, "md5_digest": "92ecfe7401478a6a57d41ef5ad5f9596", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21502, "upload_time": "2017-01-19T14:11:33", "upload_time_iso_8601": "2017-01-19T14:11:33.604995Z", "url": "https://files.pythonhosted.org/packages/a2/4e/4bdf40945b9ec37d2c7371d079c7f5b0e9bc829f9cbbe4a025aa4bab460d/gprofiler-official-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "0e2a1154816387618797c635dfa14ded", "sha256": "fc4218d561925ca287e5bad88408e067ccade3c3ce898bcb27cf35aba07b6cd8"}, "downloads": -1, "filename": "gprofiler-official-0.3.4.tar.gz", "has_sig": false, "md5_digest": "0e2a1154816387618797c635dfa14ded", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21391, "upload_time": "2017-01-23T15:35:10", "upload_time_iso_8601": "2017-01-23T15:35:10.694817Z", "url": "https://files.pythonhosted.org/packages/0d/b4/77b2e2e879c1641cc0def754547bac8e7c57674174ff8168db04226c1ba6/gprofiler-official-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "716ade63340c86a4475655b9195f1530", "sha256": "64facf0d7bcbf91e69ad4c0d736d9e2378024f12b772bc330618a08b9f4fc20d"}, "downloads": -1, "filename": "gprofiler-official-0.3.5.tar.gz", "has_sig": false, "md5_digest": "716ade63340c86a4475655b9195f1530", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21363, "upload_time": "2018-03-14T12:07:10", "upload_time_iso_8601": "2018-03-14T12:07:10.657386Z", "url": "https://files.pythonhosted.org/packages/8d/24/78022677f79f45912798d4daf063eaeb2c17fc06fe76cf54d0dfcfcb194d/gprofiler-official-0.3.5.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "a31adb48d09059958b1f48cf0d356879", "sha256": "c582baf728e5a6cddac964e4085ca385e082c4ef0279e3af1a16a9af07ab5395"}, "downloads": -1, "filename": "gprofiler_official-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a31adb48d09059958b1f48cf0d356879", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9277, "upload_time": "2019-04-02T10:52:17", "upload_time_iso_8601": "2019-04-02T10:52:17.769447Z", "url": "https://files.pythonhosted.org/packages/df/1b/5a87c1a1da8f601c00a0ce4dedb5aab8a5cad6a0f4a5062c4da22a045072/gprofiler_official-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27af90e2bdce5603262f6b23f97679b0", "sha256": "5015b47f10fbdcb59c57e342e815c9c07afbe57cd3984154f75b845ddef2445d"}, "downloads": -1, "filename": "gprofiler-official-1.0.0.tar.gz", "has_sig": false, "md5_digest": "27af90e2bdce5603262f6b23f97679b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9584, "upload_time": "2019-04-02T10:52:19", "upload_time_iso_8601": "2019-04-02T10:52:19.527145Z", "url": "https://files.pythonhosted.org/packages/ec/c1/d9252620d09a064247d1623ebc4732d624921a2ed80a677f8b9ce61810dd/gprofiler-official-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a31adb48d09059958b1f48cf0d356879", "sha256": "c582baf728e5a6cddac964e4085ca385e082c4ef0279e3af1a16a9af07ab5395"}, "downloads": -1, "filename": "gprofiler_official-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a31adb48d09059958b1f48cf0d356879", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9277, "upload_time": "2019-04-02T10:52:17", "upload_time_iso_8601": "2019-04-02T10:52:17.769447Z", "url": "https://files.pythonhosted.org/packages/df/1b/5a87c1a1da8f601c00a0ce4dedb5aab8a5cad6a0f4a5062c4da22a045072/gprofiler_official-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "27af90e2bdce5603262f6b23f97679b0", "sha256": "5015b47f10fbdcb59c57e342e815c9c07afbe57cd3984154f75b845ddef2445d"}, "downloads": -1, "filename": "gprofiler-official-1.0.0.tar.gz", "has_sig": false, "md5_digest": "27af90e2bdce5603262f6b23f97679b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9584, "upload_time": "2019-04-02T10:52:19", "upload_time_iso_8601": "2019-04-02T10:52:19.527145Z", "url": "https://files.pythonhosted.org/packages/ec/c1/d9252620d09a064247d1623ebc4732d624921a2ed80a677f8b9ce61810dd/gprofiler-official-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:12 2020"}