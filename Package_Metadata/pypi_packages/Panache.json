{"info": {"author": "Sebastian Bogan", "author_email": "sebogh@qibli.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Programming Language :: Python :: 3.5", "Topic :: Text Processing :: Markup"], "description": "panache\n=======\n\n`build-status <https://travis-ci.org/sebogh/panache>`__\n`codefactor <https://www.codefactor.io/repository/github/sebogh/panache>`__\n`Pypi <https://pypi.org/project/Panache/>`__ `Known\nVulnerabilities <https://snyk.io/test/github/sebogh/panache>`__\n\nOverview\n--------\n\npanache adds styles to `Pandoc <https://pandoc.org>`__.\n\nThe idea of panache is similar to that of\n`panzer <https://github.com/msprev/panzer>`__ and\n`Pandocomatic <https://heerdebeer.org/Software/markdown/pandocomatic/>`__.\nIt is yet another Pandoc wrapper, that allows to assemble\nPandoc-commandline options, -metadata and -filter into styles. Through\nthat, panache simplifies Pandoc calls and ensures consistency across\ndocuments.\n\npanache is similar to others in that cascading styles may be defined in\nseparate YAML-files and within documents.\n\npanache is different in that its styles may contain variables and that\ndocuments may specify multiple styles / context-dependable styles.\n\nContext Dependable Styles\n-------------------------\n\nOften a Markdown document is the source for different targets. For\nexample a single document may be converted to HTML as part of a Wiki, a\ndraft HTML file may be used while writing the document, and a standalone\nand self-contained HTML-file may be send via email. At the same time,\nall version should be rendered using the private style (as oposed to\n(for example) a company style).\n\nTo address this situation, panache allows documents to specify multiple\nstyles, which get selected depending on the selected medium.\n\nAssume, for example, a document with the following metadata-block:\n\n.. code:: yaml\n\n   ---\n   styles_:\n     drafthtml: privatedrafthtml\n     finalhtml: privatefinalhtml\n     wiki: wikihtml\n   ---\n\nDepending on the value of the command line option ``--medium``\n(``darfthtml``, ``finalhtml``, or ``wiki``), panache would select either\nthe ``privatedrafthtml``-, ``privatefinalhtml``- or ``wikihtml``-style.\nIt would then compute the commandline (options, filters and metadata)\nfor the selected style and finally call Pandoc.\n\nCascading Style Definition\n--------------------------\n\npanache allows to define styles in separate YAML-files and within\ndocuments. The definition for a style with the name ``wikihtml`` might\nlook like the following:\n\n.. code:: yaml\n\n   ---\n   styledef_:\n     wikihtml:\n       commandline:\n         template: /home/sebastian/templates/wiki-en.html\n       metadata:\n         build-os: Linux\n       filter:\n         run: pandoc-citeproc\n   ---\n\nA second \u2013 derived \u2013 style, that changes the template (``template``),\nmay be defined by adding:\n\n.. code:: yaml\n\n   ---\n   germanwikihtml:\n     parent: wikihtml\n     commandline:\n         template: /home/sebastian/pandoc-templates/templates/wiki-de.html\n   ---\n\nto the previous ``styledef_`` or by adding it to a separate\n``styledef_`` in another file.\n\nStyle Variables\n---------------\n\nObviously, the style definitions above may work for the user\n``sebastian`` but are likely to fail for a different user. This is where\nparameterized style definitions come into play.\n\npanache uses `{{ mustache\n}} <https://github.com/mustache/mustache.github.com>`__ as template\nengine for style files. Through that, panache allows to use \u201ckeywords\u201d\nin style definitions, wich are substituted based on commandline options\nand some defaults. Using this, the above definition of the\n``germanwikihtml``-style may be rewritten as follows:\n\n.. code:: yaml\n\n   ---\n   germanwikihtml:\n     parent: wikihtml\n     commandline:\n         template: {{home}}/pandoc-templates/wiki-de.html\n   ---\n\nNow, if ``--style-var=home:/home/sebastian`` would be passed to panache,\nthen ``template`` would be resolved to\n``/home/sebastian/pandoc-templates/wiki-de.html`` (and as\n``--template=/home/sebastian/pandoc-templates/wiki-de.html`` passed to\nPandoc). Obviously, using ``--style-var=home:~`` makes the panache-call\nuser agnostic (in Bash).\n\nUsing regular `{{ mustache\n}}-syntax <http://mustache.github.io/mustache.5.html>`__ one may express\nconditions and repetitions.\n\nInstallation\n============\n\nOptions\n-------\n\nThere are two options for using panache:\n\n-  running the Python source\n-  running a binary version\n\nBoth options will be described below.\n\nPython Source\n-------------\n\nMake sure the following requirements are satisfied:\n\n-  `Pandoc <https://pandoc.org>`__ >= 2.1\n-  Python >= 3.5\n\nUse ``pip`` to install panache:\n\n-  globally\n\n   .. code:: bash\n\n      pip install panache\n      # /usr/lib/python3/dist-packages/panache/panache.py --version\n\n   or locally:\n\n   .. code:: bash\n\n      mkdir panache\n      cd panache/\n      virtualenv -p /usr/bin/python3 venv\n      source venv/bin/activate\n      pip install panache\n      # python3 ./venv/lib/python3.6/site-packages/panache/panache.py --version\n\nBinary\n------\n\nMake sure the following requirement is satisfied:\n\n-  `Pandoc <https://pandoc.org>`__ >= 2.1\n\nDowload an appropriate binary from the `releases\npage <https://github.com/sebogh/panache/releases/latest>`__.\n\nDetails\n=======\n\nDefault Style- and Meta-Variables\n---------------------------------\n\nThe following Style- and Meta-Variables will be added by default, if\ninput comes from file or STDIN:\n\n+-------------+--------------------------------------------------------+\n| Variable    | Description                                            |\n+=============+========================================================+\n| ``panache_d | directory of the panache script                        |\n| ir``        |                                                        |\n+-------------+--------------------------------------------------------+\n| ``panache_v | panache version where ``X``, ``Y``, ``Z`` are major,   |\n| ersion_X.Y. | minor and patch (see `Semantic                         |\n| Z``         | Versioning <https://semver.org/>`__)                   |\n+-------------+--------------------------------------------------------+\n| ``os_X``    | os type where ``X`` is one of ``posix``, ``nt``,       |\n|             | ``ce``, ``java``.                                      |\n+-------------+--------------------------------------------------------+\n| ``build_dat | the date and time when panache was invoked (in the     |\n| e``         | form ``YYYY-mm-ddTHH:MM:SSZ``)                         |\n+-------------+--------------------------------------------------------+\n\nIf input comes from a file the following additional Style- and\nMeta-Variables will be added by default:\n\n+------------------------------+----------------------------------------------+\n| Variable                     | Description                                  |\n+==============================+==============================================+\n| ``input_dir``                | directory of the input file                  |\n+------------------------------+----------------------------------------------+\n| ``input_basename``           | basename of the input file                   |\n+------------------------------+----------------------------------------------+\n| ``input_basename_root``      | basename without extension of the input file |\n+------------------------------+----------------------------------------------+\n| ``input_basename_extension`` | extension of the basename                    |\n+------------------------------+----------------------------------------------+\n| ``vcsreference``             | vcs reference of the file                    |\n+------------------------------+----------------------------------------------+\n| ``vcsdate``                  | vcs date (last change)                       |\n+------------------------------+----------------------------------------------+\n\nMORE\n----\n\ntbd.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sebogh/panache", "keywords": "", "license": "BSD 3-Clause License", "maintainer": "", "maintainer_email": "", "name": "Panache", "package_url": "https://pypi.org/project/Panache/", "platform": "", "project_url": "https://pypi.org/project/Panache/", "project_urls": {"Homepage": "https://github.com/sebogh/panache"}, "release_url": "https://pypi.org/project/Panache/0.2.12/", "requires_dist": ["pyyaml (>=4.2b1)", "pystache", "defusedxml"], "requires_python": ">3.5.0", "summary": "Pandoc wrapped in styles", "version": "0.2.12", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"panache\">\n<h2>panache</h2>\n<p><a href=\"https://travis-ci.org/sebogh/panache\" rel=\"nofollow\">build-status</a>\n<a href=\"https://www.codefactor.io/repository/github/sebogh/panache\" rel=\"nofollow\">codefactor</a>\n<a href=\"https://pypi.org/project/Panache/\" rel=\"nofollow\">Pypi</a> <a href=\"https://snyk.io/test/github/sebogh/panache\" rel=\"nofollow\">Known\nVulnerabilities</a></p>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>panache adds styles to <a href=\"https://pandoc.org\" rel=\"nofollow\">Pandoc</a>.</p>\n<p>The idea of panache is similar to that of\n<a href=\"https://github.com/msprev/panzer\" rel=\"nofollow\">panzer</a> and\n<a href=\"https://heerdebeer.org/Software/markdown/pandocomatic/\" rel=\"nofollow\">Pandocomatic</a>.\nIt is yet another Pandoc wrapper, that allows to assemble\nPandoc-commandline options, -metadata and -filter into styles. Through\nthat, panache simplifies Pandoc calls and ensures consistency across\ndocuments.</p>\n<p>panache is similar to others in that cascading styles may be defined in\nseparate YAML-files and within documents.</p>\n<p>panache is different in that its styles may contain variables and that\ndocuments may specify multiple styles / context-dependable styles.</p>\n</div>\n<div id=\"context-dependable-styles\">\n<h3>Context Dependable Styles</h3>\n<p>Often a Markdown document is the source for different targets. For\nexample a single document may be converted to HTML as part of a Wiki, a\ndraft HTML file may be used while writing the document, and a standalone\nand self-contained HTML-file may be send via email. At the same time,\nall version should be rendered using the private style (as oposed to\n(for example) a company style).</p>\n<p>To address this situation, panache allows documents to specify multiple\nstyles, which get selected depending on the selected medium.</p>\n<p>Assume, for example, a document with the following metadata-block:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">styles_</span><span class=\"p\">:</span>\n  <span class=\"nt\">drafthtml</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">privatedrafthtml</span>\n  <span class=\"nt\">finalhtml</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">privatefinalhtml</span>\n  <span class=\"nt\">wiki</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">wikihtml</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>Depending on the value of the command line option <tt><span class=\"pre\">--medium</span></tt>\n(<tt>darfthtml</tt>, <tt>finalhtml</tt>, or <tt>wiki</tt>), panache would select either\nthe <tt>privatedrafthtml</tt>-, <tt>privatefinalhtml</tt>- or <tt>wikihtml</tt>-style.\nIt would then compute the commandline (options, filters and metadata)\nfor the selected style and finally call Pandoc.</p>\n</div>\n<div id=\"cascading-style-definition\">\n<h3>Cascading Style Definition</h3>\n<p>panache allows to define styles in separate YAML-files and within\ndocuments. The definition for a style with the name <tt>wikihtml</tt> might\nlook like the following:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">styledef_</span><span class=\"p\">:</span>\n  <span class=\"nt\">wikihtml</span><span class=\"p\">:</span>\n    <span class=\"nt\">commandline</span><span class=\"p\">:</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/home/sebastian/templates/wiki-en.html</span>\n    <span class=\"nt\">metadata</span><span class=\"p\">:</span>\n      <span class=\"nt\">build-os</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">Linux</span>\n    <span class=\"nt\">filter</span><span class=\"p\">:</span>\n      <span class=\"nt\">run</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">pandoc-citeproc</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>A second \u2013 derived \u2013 style, that changes the template (<tt>template</tt>),\nmay be defined by adding:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">germanwikihtml</span><span class=\"p\">:</span>\n  <span class=\"nt\">parent</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">wikihtml</span>\n  <span class=\"nt\">commandline</span><span class=\"p\">:</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">/home/sebastian/pandoc-templates/templates/wiki-de.html</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>to the previous <tt>styledef_</tt> or by adding it to a separate\n<tt>styledef_</tt> in another file.</p>\n</div>\n<div id=\"style-variables\">\n<h3>Style Variables</h3>\n<p>Obviously, the style definitions above may work for the user\n<tt>sebastian</tt> but are likely to fail for a different user. This is where\nparameterized style definitions come into play.</p>\n<p>panache uses <a href=\"https://github.com/mustache/mustache.github.com\" rel=\"nofollow\">{{ mustache\n}}</a> as template\nengine for style files. Through that, panache allows to use \u201ckeywords\u201d\nin style definitions, wich are substituted based on commandline options\nand some defaults. Using this, the above definition of the\n<tt>germanwikihtml</tt>-style may be rewritten as follows:</p>\n<pre><span class=\"nn\">---</span>\n<span class=\"nt\">germanwikihtml</span><span class=\"p\">:</span>\n  <span class=\"nt\">parent</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">wikihtml</span>\n  <span class=\"nt\">commandline</span><span class=\"p\">:</span>\n      <span class=\"nt\">template</span><span class=\"p\">:</span> <span class=\"p-Indicator\">{{</span><span class=\"nv\">home</span><span class=\"p-Indicator\">}}</span><span class=\"l-Scalar-Plain\">/pandoc-templates/wiki-de.html</span>\n<span class=\"nn\">---</span>\n</pre>\n<p>Now, if <tt><span class=\"pre\">--style-var=home:/home/sebastian</span></tt> would be passed to panache,\nthen <tt>template</tt> would be resolved to\n<tt><span class=\"pre\">/home/sebastian/pandoc-templates/wiki-de.html</span></tt> (and as\n<tt><span class=\"pre\">--template=/home/sebastian/pandoc-templates/wiki-de.html</span></tt> passed to\nPandoc). Obviously, using <tt><span class=\"pre\">--style-var=home:~</span></tt> makes the panache-call\nuser agnostic (in Bash).</p>\n<p>Using regular <a href=\"http://mustache.github.io/mustache.5.html\" rel=\"nofollow\">{{ mustache\n}}-syntax</a> one may express\nconditions and repetitions.</p>\n</div>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<div id=\"options\">\n<h3>Options</h3>\n<p>There are two options for using panache:</p>\n<ul>\n<li>running the Python source</li>\n<li>running a binary version</li>\n</ul>\n<p>Both options will be described below.</p>\n</div>\n<div id=\"python-source\">\n<h3>Python Source</h3>\n<p>Make sure the following requirements are satisfied:</p>\n<ul>\n<li><a href=\"https://pandoc.org\" rel=\"nofollow\">Pandoc</a> &gt;= 2.1</li>\n<li>Python &gt;= 3.5</li>\n</ul>\n<p>Use <tt>pip</tt> to install panache:</p>\n<ul>\n<li><p>globally</p>\n<pre>pip install panache\n<span class=\"c1\"># /usr/lib/python3/dist-packages/panache/panache.py --version</span>\n</pre>\n<p>or locally:</p>\n<pre>mkdir panache\n<span class=\"nb\">cd</span> panache/\nvirtualenv -p /usr/bin/python3 venv\n<span class=\"nb\">source</span> venv/bin/activate\npip install panache\n<span class=\"c1\"># python3 ./venv/lib/python3.6/site-packages/panache/panache.py --version</span>\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"binary\">\n<h3>Binary</h3>\n<p>Make sure the following requirement is satisfied:</p>\n<ul>\n<li><a href=\"https://pandoc.org\" rel=\"nofollow\">Pandoc</a> &gt;= 2.1</li>\n</ul>\n<p>Dowload an appropriate binary from the <a href=\"https://github.com/sebogh/panache/releases/latest\" rel=\"nofollow\">releases\npage</a>.</p>\n</div>\n</div>\n<div id=\"details\">\n<h2>Details</h2>\n<div id=\"default-style-and-meta-variables\">\n<h3>Default Style- and Meta-Variables</h3>\n<p>The following Style- and Meta-Variables will be added by default, if\ninput comes from file or STDIN:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>panache_d\nir</tt></td>\n<td>directory of the panache script</td>\n</tr>\n<tr><td><tt>panache_v\nersion_X.Y.\nZ</tt></td>\n<td>panache version where <tt>X</tt>, <tt>Y</tt>, <tt>Z</tt> are major,\nminor and patch (see <a href=\"https://semver.org/\" rel=\"nofollow\">Semantic\nVersioning</a>)</td>\n</tr>\n<tr><td><tt>os_X</tt></td>\n<td>os type where <tt>X</tt> is one of <tt>posix</tt>, <tt>nt</tt>,\n<tt>ce</tt>, <tt>java</tt>.</td>\n</tr>\n<tr><td><tt>build_dat\ne</tt></td>\n<td>the date and time when panache was invoked (in the\nform <tt><span class=\"pre\">YYYY-mm-ddTHH:MM:SSZ</span></tt>)</td>\n</tr>\n</tbody>\n</table>\n<p>If input comes from a file the following additional Style- and\nMeta-Variables will be added by default:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Variable</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>input_dir</tt></td>\n<td>directory of the input file</td>\n</tr>\n<tr><td><tt>input_basename</tt></td>\n<td>basename of the input file</td>\n</tr>\n<tr><td><tt>input_basename_root</tt></td>\n<td>basename without extension of the input file</td>\n</tr>\n<tr><td><tt>input_basename_extension</tt></td>\n<td>extension of the basename</td>\n</tr>\n<tr><td><tt>vcsreference</tt></td>\n<td>vcs reference of the file</td>\n</tr>\n<tr><td><tt>vcsdate</tt></td>\n<td>vcs date (last change)</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"more\">\n<h3>MORE</h3>\n<p>tbd.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4156059, "releases": {"0.2.11": [{"comment_text": "", "digests": {"md5": "157c15bd1cfd6874e820de0f3ad82a22", "sha256": "f0fd92d4a34d12c51e67177eb2d56e386344f9b7a5914a999668632bb22a40cc"}, "downloads": -1, "filename": "Panache-0.2.11-py3-none-any.whl", "has_sig": false, "md5_digest": "157c15bd1cfd6874e820de0f3ad82a22", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.0", "size": 10471, "upload_time": "2018-07-25T13:32:16", "upload_time_iso_8601": "2018-07-25T13:32:16.604072Z", "url": "https://files.pythonhosted.org/packages/22/ea/f002a06abfa8ae7d07a01d0a893694ee7281c8e14744c8223813a9158d26/Panache-0.2.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "499026b49915b40d332fea319bcf0163", "sha256": "af6c572ae8cbf949e2ce4577eb79132cf3e4af45847c38d4ca044ca371bcaa7a"}, "downloads": -1, "filename": "Panache-0.2.11.tar.gz", "has_sig": false, "md5_digest": "499026b49915b40d332fea319bcf0163", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.5.0", "size": 10690, "upload_time": "2018-07-25T13:32:18", "upload_time_iso_8601": "2018-07-25T13:32:18.132015Z", "url": "https://files.pythonhosted.org/packages/b8/f3/a974532483e407aabfa7a67cfbe7352325285edf139ea54f1e0d0cbb9f20/Panache-0.2.11.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "f8915b2d78c64a6fbba2e673bd5f5f38", "sha256": "7e2384c0e886e0034eec439fb4d251b3f546dc3017b6742853773ea53e2b83b3"}, "downloads": -1, "filename": "Panache-0.2.12-py3-none-any.whl", "has_sig": false, "md5_digest": "f8915b2d78c64a6fbba2e673bd5f5f38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.0", "size": 10554, "upload_time": "2018-08-10T09:29:09", "upload_time_iso_8601": "2018-08-10T09:29:09.585262Z", "url": "https://files.pythonhosted.org/packages/08/22/8136d2ae99cb2d7309f19933cef66dc0c6c4d23699e80db4b8ea0c5d81ce/Panache-0.2.12-py3-none-any.whl", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "2e217107e8b7d8865fbe0e58da287059", "sha256": "b565dc6a0e4dc9bcf4a63af0efa241b0d185d6e5869ff56459806a484406e5fa"}, "downloads": -1, "filename": "Panache-0.2.6.tar.gz", "has_sig": false, "md5_digest": "2e217107e8b7d8865fbe0e58da287059", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11442, "upload_time": "2018-07-24T18:54:01", "upload_time_iso_8601": "2018-07-24T18:54:01.078363Z", "url": "https://files.pythonhosted.org/packages/3c/64/e023da4fd304a0307f6de352b1a92d6e55205cb89646c00fde2d1068ed95/Panache-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "0b5134d52abb547f077fe6e11311f03f", "sha256": "c16d2dc26aa9dc3c57a90c7479b04647648517ca9f69098eb9a789bab6f99264"}, "downloads": -1, "filename": "Panache-0.2.7.tar.gz", "has_sig": false, "md5_digest": "0b5134d52abb547f077fe6e11311f03f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11620, "upload_time": "2018-07-24T19:16:26", "upload_time_iso_8601": "2018-07-24T19:16:26.051620Z", "url": "https://files.pythonhosted.org/packages/4f/31/d90a2c83d3d10d148d34feb48dd9d4a57b6caae4245272c9e7b2129c1151/Panache-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f8915b2d78c64a6fbba2e673bd5f5f38", "sha256": "7e2384c0e886e0034eec439fb4d251b3f546dc3017b6742853773ea53e2b83b3"}, "downloads": -1, "filename": "Panache-0.2.12-py3-none-any.whl", "has_sig": false, "md5_digest": "f8915b2d78c64a6fbba2e673bd5f5f38", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">3.5.0", "size": 10554, "upload_time": "2018-08-10T09:29:09", "upload_time_iso_8601": "2018-08-10T09:29:09.585262Z", "url": "https://files.pythonhosted.org/packages/08/22/8136d2ae99cb2d7309f19933cef66dc0c6c4d23699e80db4b8ea0c5d81ce/Panache-0.2.12-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:59:41 2020"}