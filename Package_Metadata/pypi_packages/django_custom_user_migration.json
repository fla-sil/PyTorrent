{"info": {"author": "Luke Plant", "author_email": "L.Plant.98@cantab.net", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "===============================\ndjango_custom_user_migration\n===============================\n\n.. image:: https://img.shields.io/pypi/v/django_custom_user_migration.svg\n        :target: https://pypi.python.org/pypi/django_custom_user_migration\n\n\ndjango_custom_user_migration creates migrations for you to move an existing\nDjango project that uses ``django.contrib.auth.models.User`` to using a custom user\nmodel.\n\nFree software: BSD license\n\nUse case\n--------\n\nYou are currently using Django's ``django.contrib.auth.models.User`` model in a\ndeployed project, but want to migrate to a model that is under your own control, or\nprovided by a 3rd party.\n\nPrerequisites\n-------------\n\n* Django 1.8 or later\n* Python 2.7 or Python 3.3+\n\nYou must have ensured that everywhere in your project (including 3rd party\nlibraries) you are using ``AUTH_USER_MODEL`` and\n``django.contrib.auth.get_user_model()`` rather than ``\"auth.User\"`` and\n``django.contrib.auth.models.User``.\n\n\nUsage\n-----\n\nThere are a lot of steps below, but it is almost all copy/paste, and with no\ncomplications you could be done in 5 minutes. It assumed you will perform all\nthese steps apart from the last in your development environment.\n\n1. Install ``django_custom_user_migration`` to your project::\n\n     pip install django_custom_user_migration\n\n2. Add ``\"django_custom_user_migration\"`` to your ``INSTALLED_APPS``.\n\n   You now have some management commands for creating migrations that we\n   will use later.\n\n3. Create a custom user model which is identical to Django's ``auth.User``, but\n   in an app in your own project. For this process to work correctly, you will\n   need to create a new app for this model - we'll call it ``accounts`` from now\n   on::\n\n     # accounts/models.py\n\n     from django_custom_user_migration.models import AbstractUser\n\n     class User(AbstractUser):\n         pass\n\n   The model can be called anything you want. Remember to add this app to your\n   ``INSTALLED_APPS``.\n\n   Don't add additional fields at this point, and don't change\n   ``AUTH_USER_MODEL`` yet.\n\n   We avoid using ``django.contrib.auth.models.AbstractUser`` at this point, or\n   a user model from some 3rd party library, because we get problems with\n   ``related_name`` clashes that we can't work around. Later on, we'll change to\n   inheriting from ``django.contrib.auth.AbstractUser``, and then to another model\n   if necessary.\n\n4. Create a normal migration to create the table for this::\n\n     ./manage.py makemigrations accounts\n\n   This migration must be ``0001_initial`` or you will have problems later on,\n   as mentioned in the docs for `AUTH_USER_MODEL\n   <https://docs.djangoproject.com/en/1.8/ref/settings/#auth-user-model>`_.\n\n   The migration will also create M2M tables for the M2M fields specified\n   on ``AbstractUser`` itself.\n\n5. Create a data migration that will populate these tables from ``auth.User``::\n\n     ./manage.py create_custom_user_populate_migration auth.User accounts.User\n\n   All the commands to create migrations take arguments <from_model> <to_model> like this.\n\n6. Create a schema migration that will alter every FK that points at ``auth.User``\n   to point at your model instead::\n\n     ./manage.py create_custom_user_schema_migration auth.User accounts.User\n\n7. Create a data migration that will fix up the contenttypes tables::\n\n     ./manage.py create_custom_user_contenttypes_migration auth.User accounts.User\n\n8. Change the ``AbstractUser`` import in your models.py to::\n\n      from django.contrib.auth.models import AbstractUser\n\n9. Change ``AUTH_USER_MODEL`` to ``\"accounts.User\"`` in your settings.\n\n10. Run ``makemigrations`` again::\n\n      ./manage.py makemigrations accounts\n\n    This creates a migration that doesn't actually change fields, but is needed\n    for Django to think that everything lines up again.\n\n11. Do related changes for admin etc. as described in Django docs:\n    https://docs.djangoproject.com/en/dev/topics/auth/customizing/#extending-django-s-default-user\n\n    Simplest version::\n\n      # accounts/admin.py\n\n      from django.contrib import admin\n      from django.contrib.auth.admin import UserAdmin\n      from . models import User\n\n      admin.site.register(User, UserAdmin)\n\n12. Create a migration that empties the ``auth.User`` table::\n\n      ./manage.py create_custom_user_empty_migration auth.User accounts.User\n\n13. Run all the migrations::\n\n      ./manage.py migrate\n\n14. Test everything!\n\n    Note that all migrations generated are reversible, but before running them\n    in reverse you should set AUTH_USER_MODEL back to ``\"auth.User\"``, and you\n    will also therefore need to use the\n    ``django_custom_user_migration.models.AbstractModel`` as a base class or you\n    will get validation errors that prevent migrations from running.\n\n    When running Django unit tests, you may have problems when Django attempts\n    to run your migrations in a test database. Since your AUTH_USER_MODEL no\n    longer points to ``auth.User``, that table won't be created and the\n    migrations which expect it to exist will fail.\n\n    In the short term, this can be fixed as per this advice:\n    http://stackoverflow.com/a/28560805/182604\n\n    Long term, this can be fixed by squashing the ``accounts`` migrations up to\n    step 12 into a single migration. Use the ``squashmigrations`` command to do\n    this, then manually edit it to remove all but the initial ``CreateModel``\n    operation. So the migration created should be the same as accounts\n    ``0001_initial``, but it will have a ``replaces`` attribute that marks it as\n    squashing the others. You may also need to adjust (remove) some of its\n    dependencies.\n\n15. Uninstall ``django_custom_user_migration``, and remove it from your\n    ``INSTALLED_APPS``, you don't need it any more. The migrations generated\n    run without it being installed.\n\n16. You can now deploy these migrations to your production environment and run\n    them in the normal way using ``./manage.py migrate``.\n\nYou can now customise your ``User`` model as required in the normal way, using\nmigrations etc. You could even make it inherit from ``AbstractBaseUser`` or some\nother model instead of ``AbstractUser``, provided that you write/generate the\nnecessary data migrations to cope with missing fields, and update your admin and\napplication accordingly.\n\n\nOther notes\n-----------\n\n* Use at own risk, make sure you back up your data first, etc. etc.\n\n* Tested on sqlite and postgres\n\n* If you have other tables with FKs to ``auth.User`` that Django doesn't know\n  about, you will have to deal with those manually with a custom migration. (In\n  really old Django projects, you might have old tables like 'auth_message'\n  kicking around which you'll need to delete).\n\n* Almost everything included in this library is generic regarding the models\n  involved, and uses introspection rather than hard-coding things about\n  ``auth.User``. The main exception is\n  ``django_custom_user_migration.models.AbstractUser``, which is a copy-paste\n  job from Django sources.\n\n  This means that you may be able to use the code here to migrate other\n  swappable models. This has not been tested however.\n\n\n\nHistory\n-------\n\n0.3.0 (2016-04-04)\n------------------\n\n* Fixed crasher on Django 1.9\n\n0.2.0 (2015-08-20)\n------------------\n\n* Fixed Postgres bug with sequences not being set correctly, which\n  caused any subsequent inserts to fail.\n\n* Expanded tests to actually test against Postgres\n\n0.1.0 (2015-08-14)\n------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.com/spookylukey/django_custom_user_migration", "keywords": "Django custom user model migration", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django_custom_user_migration", "package_url": "https://pypi.org/project/django_custom_user_migration/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django_custom_user_migration/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.com/spookylukey/django_custom_user_migration"}, "release_url": "https://pypi.org/project/django_custom_user_migration/0.3.0/", "requires_dist": null, "requires_python": null, "summary": "django_custom_user_migration will help you create a migration to using a custom User model with Django", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/django_custom_user_migration\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/django_custom_user_migration.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6c1979fd55535f9179bbc78f02061b18e4c2f38c/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a616e676f5f637573746f6d5f757365725f6d6967726174696f6e2e737667\"></a>\n<p>django_custom_user_migration creates migrations for you to move an existing\nDjango project that uses <tt>django.contrib.auth.models.User</tt> to using a custom user\nmodel.</p>\n<p>Free software: BSD license</p>\n<div id=\"use-case\">\n<h2>Use case</h2>\n<p>You are currently using Django\u2019s <tt>django.contrib.auth.models.User</tt> model in a\ndeployed project, but want to migrate to a model that is under your own control, or\nprovided by a 3rd party.</p>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<ul>\n<li>Django 1.8 or later</li>\n<li>Python 2.7 or Python 3.3+</li>\n</ul>\n<p>You must have ensured that everywhere in your project (including 3rd party\nlibraries) you are using <tt>AUTH_USER_MODEL</tt> and\n<tt>django.contrib.auth.get_user_model()</tt> rather than <tt>\"auth.User\"</tt> and\n<tt>django.contrib.auth.models.User</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>There are a lot of steps below, but it is almost all copy/paste, and with no\ncomplications you could be done in 5 minutes. It assumed you will perform all\nthese steps apart from the last in your development environment.</p>\n<ol>\n<li><p>Install <tt>django_custom_user_migration</tt> to your project:</p>\n<pre>pip install django_custom_user_migration\n</pre>\n</li>\n<li><p>Add <tt>\"django_custom_user_migration\"</tt> to your <tt>INSTALLED_APPS</tt>.</p>\n<p>You now have some management commands for creating migrations that we\nwill use later.</p>\n</li>\n<li><p>Create a custom user model which is identical to Django\u2019s <tt>auth.User</tt>, but\nin an app in your own project. For this process to work correctly, you will\nneed to create a new app for this model - we\u2019ll call it <tt>accounts</tt> from now\non:</p>\n<pre># accounts/models.py\n\nfrom django_custom_user_migration.models import AbstractUser\n\nclass User(AbstractUser):\n    pass\n</pre>\n<p>The model can be called anything you want. Remember to add this app to your\n<tt>INSTALLED_APPS</tt>.</p>\n<p>Don\u2019t add additional fields at this point, and don\u2019t change\n<tt>AUTH_USER_MODEL</tt> yet.</p>\n<p>We avoid using <tt>django.contrib.auth.models.AbstractUser</tt> at this point, or\na user model from some 3rd party library, because we get problems with\n<tt>related_name</tt> clashes that we can\u2019t work around. Later on, we\u2019ll change to\ninheriting from <tt>django.contrib.auth.AbstractUser</tt>, and then to another model\nif necessary.</p>\n</li>\n<li><p>Create a normal migration to create the table for this:</p>\n<pre>./manage.py makemigrations accounts\n</pre>\n<p>This migration must be <tt>0001_initial</tt> or you will have problems later on,\nas mentioned in the docs for <a href=\"https://docs.djangoproject.com/en/1.8/ref/settings/#auth-user-model\" rel=\"nofollow\">AUTH_USER_MODEL</a>.</p>\n<p>The migration will also create M2M tables for the M2M fields specified\non <tt>AbstractUser</tt> itself.</p>\n</li>\n<li><p>Create a data migration that will populate these tables from <tt>auth.User</tt>:</p>\n<pre>./manage.py create_custom_user_populate_migration auth.User accounts.User\n</pre>\n<p>All the commands to create migrations take arguments &lt;from_model&gt; &lt;to_model&gt; like this.</p>\n</li>\n<li><p>Create a schema migration that will alter every FK that points at <tt>auth.User</tt>\nto point at your model instead:</p>\n<pre>./manage.py create_custom_user_schema_migration auth.User accounts.User\n</pre>\n</li>\n<li><p>Create a data migration that will fix up the contenttypes tables:</p>\n<pre>./manage.py create_custom_user_contenttypes_migration auth.User accounts.User\n</pre>\n</li>\n<li><p>Change the <tt>AbstractUser</tt> import in your models.py to:</p>\n<pre>from django.contrib.auth.models import AbstractUser\n</pre>\n</li>\n<li><p>Change <tt>AUTH_USER_MODEL</tt> to <tt>\"accounts.User\"</tt> in your settings.</p>\n</li>\n<li><p>Run <tt>makemigrations</tt> again:</p>\n<pre>./manage.py makemigrations accounts\n</pre>\n<p>This creates a migration that doesn\u2019t actually change fields, but is needed\nfor Django to think that everything lines up again.</p>\n</li>\n<li><p>Do related changes for admin etc. as described in Django docs:\n<a href=\"https://docs.djangoproject.com/en/dev/topics/auth/customizing/#extending-django-s-default-user\" rel=\"nofollow\">https://docs.djangoproject.com/en/dev/topics/auth/customizing/#extending-django-s-default-user</a></p>\n<p>Simplest version:</p>\n<pre># accounts/admin.py\n\nfrom django.contrib import admin\nfrom django.contrib.auth.admin import UserAdmin\nfrom . models import User\n\nadmin.site.register(User, UserAdmin)\n</pre>\n</li>\n<li><p>Create a migration that empties the <tt>auth.User</tt> table:</p>\n<pre>./manage.py create_custom_user_empty_migration auth.User accounts.User\n</pre>\n</li>\n<li><p>Run all the migrations:</p>\n<pre>./manage.py migrate\n</pre>\n</li>\n<li><p>Test everything!</p>\n<p>Note that all migrations generated are reversible, but before running them\nin reverse you should set AUTH_USER_MODEL back to <tt>\"auth.User\"</tt>, and you\nwill also therefore need to use the\n<tt>django_custom_user_migration.models.AbstractModel</tt> as a base class or you\nwill get validation errors that prevent migrations from running.</p>\n<p>When running Django unit tests, you may have problems when Django attempts\nto run your migrations in a test database. Since your AUTH_USER_MODEL no\nlonger points to <tt>auth.User</tt>, that table won\u2019t be created and the\nmigrations which expect it to exist will fail.</p>\n<p>In the short term, this can be fixed as per this advice:\n<a href=\"http://stackoverflow.com/a/28560805/182604\" rel=\"nofollow\">http://stackoverflow.com/a/28560805/182604</a></p>\n<p>Long term, this can be fixed by squashing the <tt>accounts</tt> migrations up to\nstep 12 into a single migration. Use the <tt>squashmigrations</tt> command to do\nthis, then manually edit it to remove all but the initial <tt>CreateModel</tt>\noperation. So the migration created should be the same as accounts\n<tt>0001_initial</tt>, but it will have a <tt>replaces</tt> attribute that marks it as\nsquashing the others. You may also need to adjust (remove) some of its\ndependencies.</p>\n</li>\n<li><p>Uninstall <tt>django_custom_user_migration</tt>, and remove it from your\n<tt>INSTALLED_APPS</tt>, you don\u2019t need it any more. The migrations generated\nrun without it being installed.</p>\n</li>\n<li><p>You can now deploy these migrations to your production environment and run\nthem in the normal way using <tt>./manage.py migrate</tt>.</p>\n</li>\n</ol>\n<p>You can now customise your <tt>User</tt> model as required in the normal way, using\nmigrations etc. You could even make it inherit from <tt>AbstractBaseUser</tt> or some\nother model instead of <tt>AbstractUser</tt>, provided that you write/generate the\nnecessary data migrations to cope with missing fields, and update your admin and\napplication accordingly.</p>\n</div>\n<div id=\"other-notes\">\n<h2>Other notes</h2>\n<ul>\n<li><p>Use at own risk, make sure you back up your data first, etc. etc.</p>\n</li>\n<li><p>Tested on sqlite and postgres</p>\n</li>\n<li><p>If you have other tables with FKs to <tt>auth.User</tt> that Django doesn\u2019t know\nabout, you will have to deal with those manually with a custom migration. (In\nreally old Django projects, you might have old tables like \u2018auth_message\u2019\nkicking around which you\u2019ll need to delete).</p>\n</li>\n<li><p>Almost everything included in this library is generic regarding the models\ninvolved, and uses introspection rather than hard-coding things about\n<tt>auth.User</tt>. The main exception is\n<tt>django_custom_user_migration.models.AbstractUser</tt>, which is a copy-paste\njob from Django sources.</p>\n<p>This means that you may be able to use the code here to migrate other\nswappable models. This has not been tested however.</p>\n</li>\n</ul>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n</div>\n<div id=\"id1\">\n<h2>0.3.0 (2016-04-04)</h2>\n<ul>\n<li>Fixed crasher on Django 1.9</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h2>0.2.0 (2015-08-20)</h2>\n<ul>\n<li>Fixed Postgres bug with sequences not being set correctly, which\ncaused any subsequent inserts to fail.</li>\n<li>Expanded tests to actually test against Postgres</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h2>0.1.0 (2015-08-14)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2044874, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4d96ea1dfda97a5f361732924266891c", "sha256": "6a778796129b1c1ad4d35c81d011b57991d3b17a06cafbb5d6e1bc49ad631d64"}, "downloads": -1, "filename": "django_custom_user_migration-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d96ea1dfda97a5f361732924266891c", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 16317, "upload_time": "2015-08-18T16:46:06", "upload_time_iso_8601": "2015-08-18T16:46:06.201727Z", "url": "https://files.pythonhosted.org/packages/ee/69/9d69eb908d98cfb469f83ee1905ebe1a1e7ff768432731e5a765ac69750b/django_custom_user_migration-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6cd3b076f0e2032c4426ff278803a528", "sha256": "c4fabad5f597a729182757f3984f1c489a7b7f47ca43186c86c242caf89a5dc5"}, "downloads": -1, "filename": "django_custom_user_migration-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6cd3b076f0e2032c4426ff278803a528", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16753, "upload_time": "2015-08-18T16:45:56", "upload_time_iso_8601": "2015-08-18T16:45:56.771549Z", "url": "https://files.pythonhosted.org/packages/72/93/179af0213f39eba20672b987e7f1a17ca628579763921ca6ed73879ae972/django_custom_user_migration-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "14eec09f1bb94b6f4bd834e0b17af83e", "sha256": "4075456e532792817abf65e4ea06a93a03d410e0c5a500b93bc3e6609c03496f"}, "downloads": -1, "filename": "django_custom_user_migration-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "14eec09f1bb94b6f4bd834e0b17af83e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 17144, "upload_time": "2015-08-20T11:46:48", "upload_time_iso_8601": "2015-08-20T11:46:48.895123Z", "url": "https://files.pythonhosted.org/packages/19/ad/d202405765911cfb69eadd37889a22617a0dbc9bd3f3b6d4dd7fffa9fd5e/django_custom_user_migration-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "79a32c2cc95fa09a5baeba0288398c5c", "sha256": "cb3d350110ba280a6b93c841449bec6ea08445105648da0514ef9168ae18e4bc"}, "downloads": -1, "filename": "django_custom_user_migration-0.2.0.tar.gz", "has_sig": false, "md5_digest": "79a32c2cc95fa09a5baeba0288398c5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17714, "upload_time": "2015-08-20T11:46:43", "upload_time_iso_8601": "2015-08-20T11:46:43.040555Z", "url": "https://files.pythonhosted.org/packages/ec/29/cd6b8aa7b4c3678e9232b7d625c8845f91b8c19f6d5c8deaf35fb1a5afe7/django_custom_user_migration-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "58bb4dd7b744c824aa6d4884de3e1589", "sha256": "b4eafe0f513544a50c1f9861ad3f0b455064c6d28254891b2db25a6a83bf4eaf"}, "downloads": -1, "filename": "django_custom_user_migration-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58bb4dd7b744c824aa6d4884de3e1589", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18259, "upload_time": "2016-04-04T15:28:37", "upload_time_iso_8601": "2016-04-04T15:28:37.887970Z", "url": "https://files.pythonhosted.org/packages/ce/eb/91984d46d8eebd4ef244297458bdcff48424234c66dd9f770cfca8a5253c/django_custom_user_migration-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d849a391911f325ad1d91491e936e83a", "sha256": "1f27543ff0fc7700026baefa3968631d189083d38de21398ea60e616f6ac203f"}, "downloads": -1, "filename": "django_custom_user_migration-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d849a391911f325ad1d91491e936e83a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18494, "upload_time": "2016-04-04T15:26:40", "upload_time_iso_8601": "2016-04-04T15:26:40.515495Z", "url": "https://files.pythonhosted.org/packages/c7/6a/0059f0bf5416b66a827fd83d7e725a938a35fc0835e6d075bbe308019651/django_custom_user_migration-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "58bb4dd7b744c824aa6d4884de3e1589", "sha256": "b4eafe0f513544a50c1f9861ad3f0b455064c6d28254891b2db25a6a83bf4eaf"}, "downloads": -1, "filename": "django_custom_user_migration-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58bb4dd7b744c824aa6d4884de3e1589", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 18259, "upload_time": "2016-04-04T15:28:37", "upload_time_iso_8601": "2016-04-04T15:28:37.887970Z", "url": "https://files.pythonhosted.org/packages/ce/eb/91984d46d8eebd4ef244297458bdcff48424234c66dd9f770cfca8a5253c/django_custom_user_migration-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d849a391911f325ad1d91491e936e83a", "sha256": "1f27543ff0fc7700026baefa3968631d189083d38de21398ea60e616f6ac203f"}, "downloads": -1, "filename": "django_custom_user_migration-0.3.0.tar.gz", "has_sig": false, "md5_digest": "d849a391911f325ad1d91491e936e83a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18494, "upload_time": "2016-04-04T15:26:40", "upload_time_iso_8601": "2016-04-04T15:26:40.515495Z", "url": "https://files.pythonhosted.org/packages/c7/6a/0059f0bf5416b66a827fd83d7e725a938a35fc0835e6d075bbe308019651/django_custom_user_migration-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:44 2020"}