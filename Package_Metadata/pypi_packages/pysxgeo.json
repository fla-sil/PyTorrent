{"info": {"author": "Nikolay Gumanov", "author_email": "morgenpurple@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "pysxgeo\n========\n\nDescription\n___________\n\npysxgeo is an API that provides access to Sypex Geo (2.2) databases (country and city).\nThe databases provides an information about geolocation by ip-address.\nFor information about databases please visit `sypexgeo.net <https://sypexgeo.net/>`_.\n\nRequirements\n____________\n\nPython 3.x\n\nSypex Geo City (or Country) `database <https://sypexgeo.net/ru/download/>`_\n\n\nInstallation\n____________\n\n.. code-block:: bash\n\n    $ pip install pysxgeo\n\nUsage\n_____\n\nSome examples:\n\n.. code-block:: pycon\n\n    >>> from pysxgeo import sxgeo\n    >>>\n    >>> ip = '77.236.97.247'\n    >>> db = '/path/to/db' # City or Country\n    >>> # AVAILABLE MODES: SXGEO_FILE, SXGEO_MEMORY, SXGEO_BATCH\n    >>> info = sxgeo.SxGeo(db_file=db, mode=sxgeo.SXGEO_BATCH)\n    >>> info.get_city(ip, full=True)\n    {'country': {'id': 56, 'lon': 10.5, 'lat': 51.5,\n                 'name_en': 'Germany', 'iso': 'DE', 'name_ru': '\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f'},\n     'region': {'id': 2861876, 'iso': 'DE-NW',\n                'name_en': 'Land Nordrhein-Westfalen',\n                'name_ru': '\u0421\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0420\u0435\u0439\u043d-\u0412\u0435\u0441\u0442\u0444\u0430\u043b\u0438\u044f'},\n     'city': {'id': 2831105, 'lon': 6.36667, 'name_ru': 'Sonsbeck',\n              'name_en': 'Sonsbeck', 'lat': 51.61667}}\n    >>> info.get_country(ip)\n    'DE'\n    >>> info.get_country_id(ip)\n    56\n    >>> # Quick usage. The answer depends of your database choice.\n    >>> info.get(ip)\n    {'city': {'name_en': 'Sonsbeck', 'lon': 6.36667,\n          'name_ru': 'Sonsbeck', 'id': 2831105, 'lat': 51.61667},\n     'country': {'iso': 'DE', 'id': 56}},\n    >>> # Get coordinates tuple(latitude, longitude)\n    >>> info.get_coords() # For the last ip\n    (51.61667, 6.36667)\n    >>> info.get_coords(ip) # For the new ip\n    (51.61667, 6.36667)\n    >>> # Get db info:\n    >>> info.about()\n\nNotes\n_____\n\nProcessing of the DB with charset 'utf-8' is faster than processing DB with charset 'cp1251'.", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/niklak/pysxgeo/", "keywords": "geolocation", "license": null, "maintainer": null, "maintainer_email": null, "name": "pysxgeo", "package_url": "https://pypi.org/project/pysxgeo/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pysxgeo/", "project_urls": {"Homepage": "https://bitbucket.org/niklak/pysxgeo/"}, "release_url": "https://pypi.org/project/pysxgeo/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "This API provides access to Sypex Geo 2.2 databases. The databases available from https://sypexgeo.net/", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"description\">\n<h2>Description</h2>\n<p>pysxgeo is an API that provides access to Sypex Geo (2.2) databases (country and city).\nThe databases provides an information about geolocation by ip-address.\nFor information about databases please visit <a href=\"https://sypexgeo.net/\" rel=\"nofollow\">sypexgeo.net</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python 3.x</p>\n<p>Sypex Geo City (or Country) <a href=\"https://sypexgeo.net/ru/download/\" rel=\"nofollow\">database</a></p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>$ pip install pysxgeo\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Some examples:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">pysxgeo</span> <span class=\"kn\">import</span> <span class=\"n\">sxgeo</span>\n<span class=\"go\">&gt;&gt;&gt;\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">ip</span> <span class=\"o\">=</span> <span class=\"s1\">'77.236.97.247'</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">db</span> <span class=\"o\">=</span> <span class=\"s1\">'/path/to/db'</span> <span class=\"c1\"># City or Country</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># AVAILABLE MODES: SXGEO_FILE, SXGEO_MEMORY, SXGEO_BATCH</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span> <span class=\"o\">=</span> <span class=\"n\">sxgeo</span><span class=\"o\">.</span><span class=\"n\">SxGeo</span><span class=\"p\">(</span><span class=\"n\">db_file</span><span class=\"o\">=</span><span class=\"n\">db</span><span class=\"p\">,</span> <span class=\"n\">mode</span><span class=\"o\">=</span><span class=\"n\">sxgeo</span><span class=\"o\">.</span><span class=\"n\">SXGEO_BATCH</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">get_city</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">,</span> <span class=\"n\">full</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"go\">{'country': {'id': 56, 'lon': 10.5, 'lat': 51.5,\n             'name_en': 'Germany', 'iso': 'DE', 'name_ru': '\u0413\u0435\u0440\u043c\u0430\u043d\u0438\u044f'},\n 'region': {'id': 2861876, 'iso': 'DE-NW',\n            'name_en': 'Land Nordrhein-Westfalen',\n            'name_ru': '\u0421\u0435\u0432\u0435\u0440\u043d\u044b\u0439 \u0420\u0435\u0439\u043d-\u0412\u0435\u0441\u0442\u0444\u0430\u043b\u0438\u044f'},\n 'city': {'id': 2831105, 'lon': 6.36667, 'name_ru': 'Sonsbeck',\n          'name_en': 'Sonsbeck', 'lat': 51.61667}}\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">get_country</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">)</span>\n<span class=\"go\">'DE'\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">get_country_id</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">)</span>\n<span class=\"go\">56\n</span><span class=\"c1\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Quick usage. The answer depends of your database choice.</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">)</span>\n<span class=\"go\">{'city': {'name_en': 'Sonsbeck', 'lon': 6.36667,\n      'name_ru': 'Sonsbeck', 'id': 2831105, 'lat': 51.61667},\n 'country': {'iso': 'DE', 'id': 56}},\n</span><span class=\"c1\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get coordinates tuple(latitude, longitude)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">get_coords</span><span class=\"p\">()</span> <span class=\"c1\"># For the last ip</span>\n<span class=\"go\">(51.61667, 6.36667)\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">get_coords</span><span class=\"p\">(</span><span class=\"n\">ip</span><span class=\"p\">)</span> <span class=\"c1\"># For the new ip</span>\n<span class=\"go\">(51.61667, 6.36667)\n</span><span class=\"c1\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"c1\"># Get db info:</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">info</span><span class=\"o\">.</span><span class=\"n\">about</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<p>Processing of the DB with charset \u2018utf-8\u2019 is faster than processing DB with charset \u2018cp1251\u2019.</p>\n</div>\n\n          </div>"}, "last_serial": 1574520, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "75a738dc3b93f9b88313143da7a89b2f", "sha256": "21751dcf0c94394160f5ca83d17a7cc4b38d250516b367b9945a57a4af1ac5c7"}, "downloads": -1, "filename": "pysxgeo-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "75a738dc3b93f9b88313143da7a89b2f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7513, "upload_time": "2015-05-30T11:52:51", "upload_time_iso_8601": "2015-05-30T11:52:51.639949Z", "url": "https://files.pythonhosted.org/packages/00/f6/7a875e325abe85462597fff4d7bc40f50c0469ad5494541d3d852da5f771/pysxgeo-0.0.1-py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "0d5108cb534e363e19cf4483aebccae3", "sha256": "caf047b2a50b903bce35239df7508047c365f0e5104b197fc37071c2907be528"}, "downloads": -1, "filename": "pysxgeo-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "0d5108cb534e363e19cf4483aebccae3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7739, "upload_time": "2015-06-01T11:50:05", "upload_time_iso_8601": "2015-06-01T11:50:05.474221Z", "url": "https://files.pythonhosted.org/packages/81/e8/75a43503188f3c93505df74f01438b97db01260af1235a8784c25d684db5/pysxgeo-0.0.2-py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "d9b7f2c069c32bfb91512ca045128ecd", "sha256": "2e3a95668fb2088d8a4e67687bdc81fe6fe73f80f22f64776319fff97741792a"}, "downloads": -1, "filename": "pysxgeo-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d9b7f2c069c32bfb91512ca045128ecd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7952, "upload_time": "2015-06-02T08:43:10", "upload_time_iso_8601": "2015-06-02T08:43:10.250173Z", "url": "https://files.pythonhosted.org/packages/f0/5c/ab212a83fee8ede408d3e48abedd9f5757b4fd1689576e2b864404385998/pysxgeo-0.0.3-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d9b7f2c069c32bfb91512ca045128ecd", "sha256": "2e3a95668fb2088d8a4e67687bdc81fe6fe73f80f22f64776319fff97741792a"}, "downloads": -1, "filename": "pysxgeo-0.0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "d9b7f2c069c32bfb91512ca045128ecd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7952, "upload_time": "2015-06-02T08:43:10", "upload_time_iso_8601": "2015-06-02T08:43:10.250173Z", "url": "https://files.pythonhosted.org/packages/f0/5c/ab212a83fee8ede408d3e48abedd9f5757b4fd1689576e2b864404385998/pysxgeo-0.0.3-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:45 2020"}