{"info": {"author": "Geoff MacGill", "author_email": "skippydev007@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing :: Markup"], "description": "figtree\n=======\n\n.. image:: https://badge.fury.io/py/figtree.svg\n    :target: https://badge.fury.io/py/figtree\n.. image:: https://travis-ci.org/skippyprime/configs.svg?branch=master\n    :target: https://travis-ci.org/skippyprime/configs\n.. image:: https://coveralls.io/repos/github/skippyprime/configs/badge.svg?branch=master\n    :target: https://coveralls.io/github/skippyprime/configs?branch=master\n.. image:: https://requires.io/github/skippyprime/configs/requirements.svg?branch=master\n     :target: https://requires.io/github/skippyprime/configs/requirements/?branch=master\n     :alt: Requirements Status\n\nFigtree is a multi-format configuration file loader that normalizes all\nvalues into dictionaries and supports merging multiple configuration\nfiles into a single source. The later can be useful if you have multiple\nconfiguration sources and either want to load the first found or\noverride default settings (such as having a system wide and per user\nconfiguration file).\n\nFigtree supports the following configuration file formats:\n\n-  YAML\n-  JSON\n-  XML (Currently ignores attributes)\n-  INI (Currently does not support dictionaries within lists)\n\nThe Figtree API is also easily extensible to support new structured file\nformats through automatic registration of format handlers.\n\nSimple Example\n--------------\n\nConfiguration source: /etc/myproject/settings.yml\n\n.. code:: yaml\n\n    section:\n      debug: on\n      complex:\n        structure:\n          value: 100\n          multi:\n            - 1\n            - 2\n            - 3\n    flag: off\n\nLoading and access data.\n\n.. code:: python\n\n    import figtree\n\n    conf = figtree.load_config('@/etc/myproject/settings.yml')\n\n    # configuration instances are dictionary like\n    flag_set = conf['flag']\n\n    # nested structures are also dictionary like\n    is_debugging = conf['section']['debug']\n\n    # easier lookups to avoid intermediate key checks\n    is_debugging = conf['section.debug']\n    is_debugging = conf.get('section.debug', False)\n\n    # sub-dictionaries can be accessed the same way\n    conf_section = conf['section']\n    value = conf_section['complex.structure.value']\n\nLoading Options\n---------------\n\nConfiguration files can be loaded from the following sources:\n\n-  Files (Local and HTTP accessible)\n-  String Literals\n-  Dictionary Objects\n\nMerge Settings\n~~~~~~~~~~~~~~\n\nLoad in order and merge settings. The last item has overrides others.\n\n.. code:: python\n\n    import figtree\n\n    conf = figtree.load_config(\n        (\n            {\n                'section': {\n                    'debug': True\n                },\n                'flag': False\n            },\n            '/etc/myproject/settings.yml',\n            'https://mydomain.test/settings',\n            figtree.LiteralConfigSource('flag: off', hint='yaml')\n        )\n    )\n\nFirst Found\n~~~~~~~~~~~\n\nLoad the first found source. Mostly useful for file based sources.\n\n.. code:: python\n\n    import figtree\n\n    conf = figtree.load_first_found_config(\n        (\n            'settings.yml',\n            '~/.settings.yml',\n            '/etc/myproject/settings.yml'\n        )\n    )", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/skippyprime/configs", "keywords": "config,configuration", "license": "Apache 2.0", "maintainer": null, "maintainer_email": null, "name": "figtree", "package_url": "https://pypi.org/project/figtree/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/figtree/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/skippyprime/configs"}, "release_url": "https://pypi.org/project/figtree/0.2.2/", "requires_dist": null, "requires_python": null, "summary": "Multi-format configuration assembler", "version": "0.2.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://badge.fury.io/py/figtree\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/figtree.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a803ec4913fbb6468f78d80282864352fa24df16/68747470733a2f2f62616467652e667572792e696f2f70792f666967747265652e737667\"></a>\n<a href=\"https://travis-ci.org/skippyprime/configs\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/skippyprime/configs.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/493b00afe099be9e4914f7a5d6b63c36ef947509/68747470733a2f2f7472617669732d63692e6f72672f736b697070797072696d652f636f6e666967732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/skippyprime/configs?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/github/skippyprime/configs/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9836d10ce155bbd620135f6ac8efa9022a1f21de/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f736b697070797072696d652f636f6e666967732f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://requires.io/github/skippyprime/configs/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/71344b9892361d2d68cb2237be8df2aed4e829d2/68747470733a2f2f72657175697265732e696f2f6769746875622f736b697070797072696d652f636f6e666967732f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<p>Figtree is a multi-format configuration file loader that normalizes all\nvalues into dictionaries and supports merging multiple configuration\nfiles into a single source. The later can be useful if you have multiple\nconfiguration sources and either want to load the first found or\noverride default settings (such as having a system wide and per user\nconfiguration file).</p>\n<p>Figtree supports the following configuration file formats:</p>\n<ul>\n<li>YAML</li>\n<li>JSON</li>\n<li>XML (Currently ignores attributes)</li>\n<li>INI (Currently does not support dictionaries within lists)</li>\n</ul>\n<p>The Figtree API is also easily extensible to support new structured file\nformats through automatic registration of format handlers.</p>\n<div id=\"simple-example\">\n<h2>Simple Example</h2>\n<p>Configuration source: /etc/myproject/settings.yml</p>\n<pre><span class=\"nt\">section</span><span class=\"p\">:</span>\n  <span class=\"nt\">debug</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">on</span>\n  <span class=\"nt\">complex</span><span class=\"p\">:</span>\n    <span class=\"nt\">structure</span><span class=\"p\">:</span>\n      <span class=\"nt\">value</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">100</span>\n      <span class=\"nt\">multi</span><span class=\"p\">:</span>\n        <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">1</span>\n        <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">2</span>\n        <span class=\"p-Indicator\">-</span> <span class=\"l-Scalar-Plain\">3</span>\n<span class=\"nt\">flag</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">off</span>\n</pre>\n<p>Loading and access data.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">figtree</span>\n\n<span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"n\">figtree</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"s1\">'@/etc/myproject/settings.yml'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># configuration instances are dictionary like</span>\n<span class=\"n\">flag_set</span> <span class=\"o\">=</span> <span class=\"n\">conf</span><span class=\"p\">[</span><span class=\"s1\">'flag'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># nested structures are also dictionary like</span>\n<span class=\"n\">is_debugging</span> <span class=\"o\">=</span> <span class=\"n\">conf</span><span class=\"p\">[</span><span class=\"s1\">'section'</span><span class=\"p\">][</span><span class=\"s1\">'debug'</span><span class=\"p\">]</span>\n\n<span class=\"c1\"># easier lookups to avoid intermediate key checks</span>\n<span class=\"n\">is_debugging</span> <span class=\"o\">=</span> <span class=\"n\">conf</span><span class=\"p\">[</span><span class=\"s1\">'section.debug'</span><span class=\"p\">]</span>\n<span class=\"n\">is_debugging</span> <span class=\"o\">=</span> <span class=\"n\">conf</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'section.debug'</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># sub-dictionaries can be accessed the same way</span>\n<span class=\"n\">conf_section</span> <span class=\"o\">=</span> <span class=\"n\">conf</span><span class=\"p\">[</span><span class=\"s1\">'section'</span><span class=\"p\">]</span>\n<span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"n\">conf_section</span><span class=\"p\">[</span><span class=\"s1\">'complex.structure.value'</span><span class=\"p\">]</span>\n</pre>\n</div>\n<div id=\"loading-options\">\n<h2>Loading Options</h2>\n<p>Configuration files can be loaded from the following sources:</p>\n<ul>\n<li>Files (Local and HTTP accessible)</li>\n<li>String Literals</li>\n<li>Dictionary Objects</li>\n</ul>\n<div id=\"merge-settings\">\n<h3>Merge Settings</h3>\n<p>Load in order and merge settings. The last item has overrides others.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">figtree</span>\n\n<span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"n\">figtree</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span>\n        <span class=\"p\">{</span>\n            <span class=\"s1\">'section'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"s1\">'debug'</span><span class=\"p\">:</span> <span class=\"kc\">True</span>\n            <span class=\"p\">},</span>\n            <span class=\"s1\">'flag'</span><span class=\"p\">:</span> <span class=\"kc\">False</span>\n        <span class=\"p\">},</span>\n        <span class=\"s1\">'/etc/myproject/settings.yml'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'https://mydomain.test/settings'</span><span class=\"p\">,</span>\n        <span class=\"n\">figtree</span><span class=\"o\">.</span><span class=\"n\">LiteralConfigSource</span><span class=\"p\">(</span><span class=\"s1\">'flag: off'</span><span class=\"p\">,</span> <span class=\"n\">hint</span><span class=\"o\">=</span><span class=\"s1\">'yaml'</span><span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"first-found\">\n<h3>First Found</h3>\n<p>Load the first found source. Mostly useful for file based sources.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">figtree</span>\n\n<span class=\"n\">conf</span> <span class=\"o\">=</span> <span class=\"n\">figtree</span><span class=\"o\">.</span><span class=\"n\">load_first_found_config</span><span class=\"p\">(</span>\n    <span class=\"p\">(</span>\n        <span class=\"s1\">'settings.yml'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'~/.settings.yml'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'/etc/myproject/settings.yml'</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2284849, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "0b35284aa0eaa9ae3d65af75348e43a5", "sha256": "c870194d103785993f6f005e4bee5a3352428849c3e368784b46225055e0f0f3"}, "downloads": -1, "filename": "figtree-0.2.tar.gz", "has_sig": false, "md5_digest": "0b35284aa0eaa9ae3d65af75348e43a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7338, "upload_time": "2016-08-16T18:18:34", "upload_time_iso_8601": "2016-08-16T18:18:34.202198Z", "url": "https://files.pythonhosted.org/packages/8d/31/dea10ddbaf0591b881e9382f741e4af86673d2c092a0a797a37229cc08e1/figtree-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "c3e4022cd034565f3448b67552002321", "sha256": "50da954b4640103219c946c50e47a0a10ce1fefaa6fc2be4f6b58a294ac8c44e"}, "downloads": -1, "filename": "figtree-0.2.1.tar.gz", "has_sig": false, "md5_digest": "c3e4022cd034565f3448b67552002321", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7514, "upload_time": "2016-08-16T18:35:04", "upload_time_iso_8601": "2016-08-16T18:35:04.691348Z", "url": "https://files.pythonhosted.org/packages/c3/f9/099be9dc609d59c912b5320555c8f877fbdcf2c697686d6659a9ad3322e0/figtree-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "9249e837db4b401fb5ad3bd97151d7bb", "sha256": "df764785c4fae7cfe7fef3158be7d527ef951788c76d518b56b7739fa917a352"}, "downloads": -1, "filename": "figtree-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9249e837db4b401fb5ad3bd97151d7bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7739, "upload_time": "2016-08-16T19:31:34", "upload_time_iso_8601": "2016-08-16T19:31:34.489867Z", "url": "https://files.pythonhosted.org/packages/05/e2/818e3d2cec249fb38f7c2d58bbc2373024a0f55c46568e630e1396c4cf1f/figtree-0.2.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9249e837db4b401fb5ad3bd97151d7bb", "sha256": "df764785c4fae7cfe7fef3158be7d527ef951788c76d518b56b7739fa917a352"}, "downloads": -1, "filename": "figtree-0.2.2.tar.gz", "has_sig": false, "md5_digest": "9249e837db4b401fb5ad3bd97151d7bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7739, "upload_time": "2016-08-16T19:31:34", "upload_time_iso_8601": "2016-08-16T19:31:34.489867Z", "url": "https://files.pythonhosted.org/packages/05/e2/818e3d2cec249fb38f7c2d58bbc2373024a0f55c46568e630e1396c4cf1f/figtree-0.2.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:38 2020"}