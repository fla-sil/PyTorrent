{"info": {"author": "Xitong Gao", "author_email": "gxtfmx@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "patmat\n======\n\nFunctional-style recursive pattern matching in Python. Crazy stuff.\n\n\nInstall\n-------\n.. code-block:: sh\n\n    pip install patmat\n\n\nUsage\n-----\n\nPattern matching with `patmat`:\n\n.. code-block:: python\n\n    >>> from patmat import *\n    >>> Mimic({(1, Val('k')): (3, Val('v'))}).match({(1, 2): (3, 4)})\n    {'k': 2, 'v': 4}\n\nMultiple dispatch generic functions:\n\n.. code-block:: python\n\n    >>> from patmat import *\n    >>>\n    >>> @case\n    >>> def func(match, l=[Val('head'), ..., 3, Val('tail')]):\n    ...     print('a list with a head {} and a tail {}'.format(match.head, match.tail))\n    >>>\n    >>> @case\n    >>> def func(match, l=Val('item')):\n    ...     print('an item {}'.format(match.item))\n    >>>\n    >>> func([1, 2, 3, 4])\n    a list with a head 1 and a tail 4\n    >>> func(5)\n    an item: 5\n\nMore dispatch examples:\n\n.. code-block:: python\n\n    >>> @case\n    >>> def func(_, x=int):\n    ...     print('Do something with an integer.')\n    >>>\n    >>> @case\n    >>> def func(_, x=float):\n    ...     print('Do something with a float.')\n    >>>\n    >>> func(1)\n    Do something with an integer\n    >>> func(1.0)\n    Do something with a float\n\nMatches ``list``, ``tuple``, ``dict``, types, classes with attributes. Brace\nyourself for the power of recursive pattern matching:\n\n.. code-block:: python\n\n    >>> from patmat import *\n    >>> m = Mimic([\n    ...     1, Type(int, Val(2)),\n    ...     Mimic(a=3, b=[4, Val(5), 6], c=Val(7)),\n    ...     Val(8), {Val(9): 10, Val(11): 12},\n    ... ])\n    >>> class A: \n    ...     __init__ = lambda self, **kwargs: self.__dict__.update(kwargs)\n    >>> m.match([1, 2, A(a=3, b=[4, 5, 6], c=7), 8, {9: 10, 11: 12}])\n    {2: 2, 5: 5, 7: 7, 8: 8, 9: 9, 11: 11}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/admk/patmat", "keywords": "python,funtional programming,pattern matching", "license": "The MIT License (MIT)\n\nCopyright (c) 2013 Xitong Gao\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of\nthis software and associated documentation files (the \"Software\"), to deal in\nthe Software without restriction, including without limitation the rights to\nuse, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of\nthe Software, and to permit persons to whom the Software is furnished to do so,\nsubject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS\nFOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR\nCOPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER\nIN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN\nCONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "maintainer": null, "maintainer_email": null, "name": "patmat", "package_url": "https://pypi.org/project/patmat/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/patmat/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/admk/patmat"}, "release_url": "https://pypi.org/project/patmat/1.0.1/", "requires_dist": null, "requires_python": null, "summary": "Functional-style recursive pattern matching in Python. Crazy stuff.", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Functional-style recursive pattern matching in Python. Crazy stuff.</p>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install patmat\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Pattern matching with <cite>patmat</cite>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">patmat</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">Mimic</span><span class=\"p\">({(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"s1\">'k'</span><span class=\"p\">)):</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"s1\">'v'</span><span class=\"p\">))})</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">({(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">):</span> <span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">)})</span>\n<span class=\"p\">{</span><span class=\"s1\">'k'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'v'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">}</span>\n</pre>\n<p>Multiple dispatch generic functions:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">patmat</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@case</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"s1\">'head'</span><span class=\"p\">),</span> <span class=\"o\">...</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"s1\">'tail'</span><span class=\"p\">)]):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'a list with a head </span><span class=\"si\">{}</span><span class=\"s1\"> and a tail </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">head</span><span class=\"p\">,</span> <span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">tail</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@case</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"p\">,</span> <span class=\"n\">l</span><span class=\"o\">=</span><span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"s1\">'item'</span><span class=\"p\">)):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'an item </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">match</span><span class=\"o\">.</span><span class=\"n\">item</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">])</span>\n<span class=\"n\">a</span> <span class=\"nb\">list</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"n\">head</span> <span class=\"mi\">1</span> <span class=\"ow\">and</span> <span class=\"n\">a</span> <span class=\"n\">tail</span> <span class=\"mi\">4</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"n\">an</span> <span class=\"n\">item</span><span class=\"p\">:</span> <span class=\"mi\">5</span>\n</pre>\n<p>More dispatch examples:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@case</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"nb\">int</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Do something with an integer.'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nd\">@case</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">func</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Do something with a float.'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">Do</span> <span class=\"n\">something</span> <span class=\"k\">with</span> <span class=\"n\">an</span> <span class=\"n\">integer</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">func</span><span class=\"p\">(</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"n\">Do</span> <span class=\"n\">something</span> <span class=\"k\">with</span> <span class=\"n\">a</span> <span class=\"nb\">float</span>\n</pre>\n<p>Matches <tt>list</tt>, <tt>tuple</tt>, <tt>dict</tt>, types, classes with attributes. Brace\nyourself for the power of recursive pattern matching:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">patmat</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span> <span class=\"o\">=</span> <span class=\"n\">Mimic</span><span class=\"p\">([</span>\n<span class=\"o\">...</span>     <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">(</span><span class=\"nb\">int</span><span class=\"p\">,</span> <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Mimic</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"mi\">7</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">),</span> <span class=\"p\">{</span><span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">):</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">Val</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">):</span> <span class=\"mi\">12</span><span class=\"p\">},</span>\n<span class=\"o\">...</span> <span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">class</span> <span class=\"nc\">A</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"fm\">__init__</span> <span class=\"o\">=</span> <span class=\"k\">lambda</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">:</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"vm\">__dict__</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">m</span><span class=\"o\">.</span><span class=\"n\">match</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">A</span><span class=\"p\">(</span><span class=\"n\">a</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">b</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">],</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mi\">7</span><span class=\"p\">),</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"mi\">9</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">:</span> <span class=\"mi\">12</span><span class=\"p\">}])</span>\n<span class=\"p\">{</span><span class=\"mi\">2</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">11</span><span class=\"p\">:</span> <span class=\"mi\">11</span><span class=\"p\">}</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 912095, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "18eefe7bc0e0288c8231bc9a74d5c752", "sha256": "c4149f53c7e3bed8f62a244b457a1780ba2d6d113e964e82293c486f527f100b"}, "downloads": -1, "filename": "patmat-1.0.0.tar.gz", "has_sig": false, "md5_digest": "18eefe7bc0e0288c8231bc9a74d5c752", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5506, "upload_time": "2013-11-05T23:38:01", "upload_time_iso_8601": "2013-11-05T23:38:01.987262Z", "url": "https://files.pythonhosted.org/packages/a5/09/18f85b1d65813e0d42a7a6936be69e310617bf418437d7bbe2efb61bbb99/patmat-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "386af56bdf3d38c06752c7581139400a", "sha256": "bcc55351e329b7ce89d9df4fe7e6bee4a7d8f57ba185f8af0aaad0751bf28502"}, "downloads": -1, "filename": "patmat-1.0.1.tar.gz", "has_sig": false, "md5_digest": "386af56bdf3d38c06752c7581139400a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5671, "upload_time": "2013-11-06T01:29:16", "upload_time_iso_8601": "2013-11-06T01:29:16.482382Z", "url": "https://files.pythonhosted.org/packages/04/34/d988505c225efdd87ae8853b8cd01babf25d690002ac7f4af96e208f0681/patmat-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "386af56bdf3d38c06752c7581139400a", "sha256": "bcc55351e329b7ce89d9df4fe7e6bee4a7d8f57ba185f8af0aaad0751bf28502"}, "downloads": -1, "filename": "patmat-1.0.1.tar.gz", "has_sig": false, "md5_digest": "386af56bdf3d38c06752c7581139400a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5671, "upload_time": "2013-11-06T01:29:16", "upload_time_iso_8601": "2013-11-06T01:29:16.482382Z", "url": "https://files.pythonhosted.org/packages/04/34/d988505c225efdd87ae8853b8cd01babf25d690002ac7f4af96e208f0681/patmat-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:49 2020"}