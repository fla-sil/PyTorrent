{"info": {"author": "Eugene Ershov", "author_email": "fogaprod@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Object Brokering", "Typing :: Typed"], "description": "# jarpc\n\n## Warning: project is in early development stage, expect bugs and frequent breaking changes\n\njarpc - Just another python RPC library based on redis pubsub. It is built with [aioredis](https://github.com/aio-libs/aioredis).\n\n<img src=\"https://raw.github.com/IOMirea/jarpc/master/docs/logo.svg?sanitize=true\" height=\"100\">\n\n[![Documentation Status](https://readthedocs.org/projects/jarpc/badge/?version=latest)](https://jarpc.readthedocs.io/en/latest/?badge=latest)\n[![Build Status](https://travis-ci.org/IOMirea/jarpc.svg?branch=master)](https://travis-ci.org/IOMirea/jarpc)\n[![codecov](https://codecov.io/gh/IOMirea/jarpc/branch/master/graph/badge.svg)](https://codecov.io/gh/IOMirea/jarpc)\n\n### Features\n- `Client`, `Server` and `Slient` connection modes.\n\n|                    | Client | Server | Slient |\n| :----------------- | :----: | :----: | :----: |\n| Calling commands   |   yes  |   no   |   yes  |\n| Receiving commands |   no   |   yes  |   yes  |\n\n- asyncronous response processing (AsyncIterator).\n- encoding customization (marshal (default), json, msgpack, pickle, ...).\n\n### Installation\nLibrary can be installed from PyPi: `pip install jarpc`\nOr from repository: `pip install git+https://github.com/IOMirea/jarpc.git#egg=jarpc`\n\n### Examples\n\n#### Client\n```python\nimport asyncio\n\nfrom jarpc import Client\n\nREDIS_HOST = \"localhost\"\nREDIS_PORT = 6379\n\nCOMMAND_PING = 0\nCOMMAND_SLOW_PING = 1\nCOMMAND_FIX_BUGS = 42\n\n\nasync def main() -> None:\n    client = Client(\"example\", default_timeout=5, default_expect_responses=1)\n\n\n    asyncio.create_task(client.start((REDIS_HOST, REDIS_PORT)))\n\n    await client.wait_until_ready()\n\n    ping_data = {\"message\": input(\"Enter message to send or leave blank: \")}\n\n    print(\"PING      ->\", await client.call(COMMAND_PING, ping_data))\n    print(\"SLOW_PING ->\", await client.call(COMMAND_SLOW_PING, timeout=1))\n    print(\"FIX_BUGS  ->\", await client.call(COMMAND_FIX_BUGS))\n\n    # exit\n    client.close()\n\n\nif __name__ == \"__main__\":\n    asyncio.run(main())\n```\n\n\n#### Server\n```python\nimport os\nimport asyncio\n\nfrom jarpc import Server, Request\n\nREDIS_HOST = \"localhost\"\nREDIS_PORT = 6379\n\nCOMMAND_PING = 0\nCOMMAND_SLOW_PING = 1\n\nserver = Server(\"example\", node=f\"example-{os.getpid()}\")\n\n\n@server.command(COMMAND_PING)\nasync def ping(req: Request, message: str = \"\") -> str:\n    \"\"\"Responds with provided message argument or 'pong'.\"\"\"\n\n    print(\"Received PING command\")\n\n    return \"pong\" if message == \"\" else message\n\n\n@server.command(COMMAND_SLOW_PING)\nasync def slow_ping(req: Request) -> str:\n    \"\"\"Responds with 'pong' after 2 seconds, too slow...\"\"\"\n\n    print(\"Received SLOW_PING command\")\n\n    await asyncio.sleep(2)\n\n    return \"pong\"\n\n\nif __name__ == \"__main__\":\n    server.run((REDIS_HOST, REDIS_PORT))\n```\n\n#### Slient\n```python\nimport os\nimport asyncio\n\nfrom jarpc import Slient, Request\n\nREDIS_HOST = \"localhost\"\nREDIS_PORT = 6379\n\nCOMMAND_PING = 0\n\nloop = asyncio.get_event_loop()\n\nslient = Slient(\n    \"example\",\n    loop=loop,\n    node=f\"example-{os.getpid()}\",\n    default_timeout=5,\n    default_expect_responses=1,\n)\n\n\n@slient.command(COMMAND_PING)\nasync def ping(req: Request, message: str = \"\") -> str:\n    \"\"\"Responds with provided message argument or 'pong'.\"\"\"\n\n    print(\"Received PING command\")\n\n    return \"pong\" if message == \"\" else message\n\n\nasync def call_ping(slient: Slient) -> None:\n    await slient.wait_until_ready()\n\n    print(\"PING ->\", await slient.call(COMMAND_PING))\n\n\nif __name__ == \"__main__\":\n    loop.create_task(slient.start((REDIS_HOST, REDIS_PORT)))\n    loop.create_task(call_ping(slient))\n\n    # continue listening for commands\n    loop.run_forever()\n```\n\nMore examples can be found in [examples folder](https://github.com/IOMirea/jarpc/blob/master/examples).\n\n### Dependencies\n- Python >= 3.6\n- [aioredis](https://github.com/aio-libs/aioredis)\n\n### Documentation\nDocumentation is available at https://jarpc.readthedocs.io\n\n### Source code\nSource code is available on GitHub: https://github.com/IOMirea/jarpc\n\n### Protocol specification\nSoon\n\n## Contributing\nFeel free to open an issue or submit a pull request.  \n\n## License\nSource code is available under GPL v3.0 license, you can see it [here](https://github.com/IOMirea/jarpc/blob/master/LICENSE).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/IOMirea/jarpc", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "jarpc", "package_url": "https://pypi.org/project/jarpc/", "platform": "", "project_url": "https://pypi.org/project/jarpc/", "project_urls": {"Homepage": "https://github.com/IOMirea/jarpc"}, "release_url": "https://pypi.org/project/jarpc/0.3.1/", "requires_dist": ["aioredis"], "requires_python": ">=3.6", "summary": "RPC over redis communication library", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>jarpc</h1>\n<h2>Warning: project is in early development stage, expect bugs and frequent breaking changes</h2>\n<p>jarpc - Just another python RPC library based on redis pubsub. It is built with <a href=\"https://github.com/aio-libs/aioredis\" rel=\"nofollow\">aioredis</a>.</p>\n<img height=\"100\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce493c7b9d5ef1cdee362e9292653c118ffe45fe/68747470733a2f2f7261772e6769746875622e636f6d2f494f4d697265612f6a617270632f6d61737465722f646f63732f6c6f676f2e7376673f73616e6974697a653d74727565\">\n<p><a href=\"https://jarpc.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0518819a6ca60f695c13b3d447d3a006989a0315/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6a617270632f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/IOMirea/jarpc\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86c545c381a09499dfa93429188321a53bc6640b/68747470733a2f2f7472617669732d63692e6f72672f494f4d697265612f6a617270632e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/IOMirea/jarpc\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/acf961dcabaf9e86a86900e81e4aa64276c898b8/68747470733a2f2f636f6465636f762e696f2f67682f494f4d697265612f6a617270632f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a></p>\n<h3>Features</h3>\n<ul>\n<li><code>Client</code>, <code>Server</code> and <code>Slient</code> connection modes.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th align=\"left\"></th>\n<th align=\"center\">Client</th>\n<th align=\"center\">Server</th>\n<th align=\"center\">Slient</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">Calling commands</td>\n<td align=\"center\">yes</td>\n<td align=\"center\">no</td>\n<td align=\"center\">yes</td>\n</tr>\n<tr>\n<td align=\"left\">Receiving commands</td>\n<td align=\"center\">no</td>\n<td align=\"center\">yes</td>\n<td align=\"center\">yes</td>\n</tr></tbody></table>\n<ul>\n<li>asyncronous response processing (AsyncIterator).</li>\n<li>encoding customization (marshal (default), json, msgpack, pickle, ...).</li>\n</ul>\n<h3>Installation</h3>\n<p>Library can be installed from PyPi: <code>pip install jarpc</code>\nOr from repository: <code>pip install git+https://github.com/IOMirea/jarpc.git#egg=jarpc</code></p>\n<h3>Examples</h3>\n<h4>Client</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">jarpc</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">REDIS_HOST</span> <span class=\"o\">=</span> <span class=\"s2\">\"localhost\"</span>\n<span class=\"n\">REDIS_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">6379</span>\n\n<span class=\"n\">COMMAND_PING</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">COMMAND_SLOW_PING</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"n\">COMMAND_FIX_BUGS</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">()</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"s2\">\"example\"</span><span class=\"p\">,</span> <span class=\"n\">default_timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"n\">default_expect_responses</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">((</span><span class=\"n\">REDIS_HOST</span><span class=\"p\">,</span> <span class=\"n\">REDIS_PORT</span><span class=\"p\">)))</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">wait_until_ready</span><span class=\"p\">()</span>\n\n    <span class=\"n\">ping_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Enter message to send or leave blank: \"</span><span class=\"p\">)}</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"PING      -&gt;\"</span><span class=\"p\">,</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">COMMAND_PING</span><span class=\"p\">,</span> <span class=\"n\">ping_data</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"SLOW_PING -&gt;\"</span><span class=\"p\">,</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">COMMAND_SLOW_PING</span><span class=\"p\">,</span> <span class=\"n\">timeout</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"FIX_BUGS  -&gt;\"</span><span class=\"p\">,</span> <span class=\"k\">await</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">COMMAND_FIX_BUGS</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># exit</span>\n    <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">close</span><span class=\"p\">()</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">main</span><span class=\"p\">())</span>\n</pre>\n<h4>Server</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">jarpc</span> <span class=\"kn\">import</span> <span class=\"n\">Server</span><span class=\"p\">,</span> <span class=\"n\">Request</span>\n\n<span class=\"n\">REDIS_HOST</span> <span class=\"o\">=</span> <span class=\"s2\">\"localhost\"</span>\n<span class=\"n\">REDIS_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">6379</span>\n\n<span class=\"n\">COMMAND_PING</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">COMMAND_SLOW_PING</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">Server</span><span class=\"p\">(</span><span class=\"s2\">\"example\"</span><span class=\"p\">,</span> <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">\"example-</span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getpid</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"n\">COMMAND_PING</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Responds with provided message argument or 'pong'.\"\"\"</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received PING command\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"s2\">\"pong\"</span> <span class=\"k\">if</span> <span class=\"n\">message</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">message</span>\n\n\n<span class=\"nd\">@server</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"n\">COMMAND_SLOW_PING</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">slow_ping</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Responds with 'pong' after 2 seconds, too slow...\"\"\"</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received SLOW_PING command\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"s2\">\"pong\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">server</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">((</span><span class=\"n\">REDIS_HOST</span><span class=\"p\">,</span> <span class=\"n\">REDIS_PORT</span><span class=\"p\">))</span>\n</pre>\n<h4>Slient</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">jarpc</span> <span class=\"kn\">import</span> <span class=\"n\">Slient</span><span class=\"p\">,</span> <span class=\"n\">Request</span>\n\n<span class=\"n\">REDIS_HOST</span> <span class=\"o\">=</span> <span class=\"s2\">\"localhost\"</span>\n<span class=\"n\">REDIS_PORT</span> <span class=\"o\">=</span> <span class=\"mi\">6379</span>\n\n<span class=\"n\">COMMAND_PING</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"n\">loop</span> <span class=\"o\">=</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">get_event_loop</span><span class=\"p\">()</span>\n\n<span class=\"n\">slient</span> <span class=\"o\">=</span> <span class=\"n\">Slient</span><span class=\"p\">(</span>\n    <span class=\"s2\">\"example\"</span><span class=\"p\">,</span>\n    <span class=\"n\">loop</span><span class=\"o\">=</span><span class=\"n\">loop</span><span class=\"p\">,</span>\n    <span class=\"n\">node</span><span class=\"o\">=</span><span class=\"sa\">f</span><span class=\"s2\">\"example-</span><span class=\"si\">{</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getpid</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">,</span>\n    <span class=\"n\">default_timeout</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n    <span class=\"n\">default_expect_responses</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span>\n<span class=\"p\">)</span>\n\n\n<span class=\"nd\">@slient</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"n\">COMMAND_PING</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">ping</span><span class=\"p\">(</span><span class=\"n\">req</span><span class=\"p\">:</span> <span class=\"n\">Request</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"nb\">str</span><span class=\"p\">:</span>\n    <span class=\"sd\">\"\"\"Responds with provided message argument or 'pong'.\"\"\"</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Received PING command\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"s2\">\"pong\"</span> <span class=\"k\">if</span> <span class=\"n\">message</span> <span class=\"o\">==</span> <span class=\"s2\">\"\"</span> <span class=\"k\">else</span> <span class=\"n\">message</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">call_ping</span><span class=\"p\">(</span><span class=\"n\">slient</span><span class=\"p\">:</span> <span class=\"n\">Slient</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n    <span class=\"k\">await</span> <span class=\"n\">slient</span><span class=\"o\">.</span><span class=\"n\">wait_until_ready</span><span class=\"p\">()</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"PING -&gt;\"</span><span class=\"p\">,</span> <span class=\"k\">await</span> <span class=\"n\">slient</span><span class=\"o\">.</span><span class=\"n\">call</span><span class=\"p\">(</span><span class=\"n\">COMMAND_PING</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">slient</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">((</span><span class=\"n\">REDIS_HOST</span><span class=\"p\">,</span> <span class=\"n\">REDIS_PORT</span><span class=\"p\">)))</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">create_task</span><span class=\"p\">(</span><span class=\"n\">call_ping</span><span class=\"p\">(</span><span class=\"n\">slient</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># continue listening for commands</span>\n    <span class=\"n\">loop</span><span class=\"o\">.</span><span class=\"n\">run_forever</span><span class=\"p\">()</span>\n</pre>\n<p>More examples can be found in <a href=\"https://github.com/IOMirea/jarpc/blob/master/examples\" rel=\"nofollow\">examples folder</a>.</p>\n<h3>Dependencies</h3>\n<ul>\n<li>Python &gt;= 3.6</li>\n<li><a href=\"https://github.com/aio-libs/aioredis\" rel=\"nofollow\">aioredis</a></li>\n</ul>\n<h3>Documentation</h3>\n<p>Documentation is available at <a href=\"https://jarpc.readthedocs.io\" rel=\"nofollow\">https://jarpc.readthedocs.io</a></p>\n<h3>Source code</h3>\n<p>Source code is available on GitHub: <a href=\"https://github.com/IOMirea/jarpc\" rel=\"nofollow\">https://github.com/IOMirea/jarpc</a></p>\n<h3>Protocol specification</h3>\n<p>Soon</p>\n<h2>Contributing</h2>\n<p>Feel free to open an issue or submit a pull request.</p>\n<h2>License</h2>\n<p>Source code is available under GPL v3.0 license, you can see it <a href=\"https://github.com/IOMirea/jarpc/blob/master/LICENSE\" rel=\"nofollow\">here</a>.</p>\n\n          </div>"}, "last_serial": 6075548, "releases": {"0.3.0": [{"comment_text": "", "digests": {"md5": "5bbe4bd32ea6495a7428c86354e8eb0c", "sha256": "b39c4f3c86478724a6f955722835c4ce981ed2862c29d74945ac9c66c79bb88b"}, "downloads": -1, "filename": "jarpc-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5bbe4bd32ea6495a7428c86354e8eb0c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29696, "upload_time": "2019-11-04T12:21:16", "upload_time_iso_8601": "2019-11-04T12:21:16.035051Z", "url": "https://files.pythonhosted.org/packages/c5/b0/b345f0f98d76294b4beec2be3935753588d2fd2c98a6391d8532c8b859e7/jarpc-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "214643f51d86defefc8f01335e3a27d7", "sha256": "531d57ab6caff7090c503ac268708ce0ea96177dd4af00c8c34c1b523ae666b1"}, "downloads": -1, "filename": "jarpc-0.3.0.tar.gz", "has_sig": false, "md5_digest": "214643f51d86defefc8f01335e3a27d7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9445, "upload_time": "2019-11-04T12:21:17", "upload_time_iso_8601": "2019-11-04T12:21:17.435165Z", "url": "https://files.pythonhosted.org/packages/58/44/8b575f3c7219b68662096c62e9c76e614e633dcf96aa8df096e4f4740e28/jarpc-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "20fe3a8b2e26da9721c97cfff6699dbd", "sha256": "29b48f104edf7cd28d72e348a52a56ec41acb96f0ad1771efca6367c18b62665"}, "downloads": -1, "filename": "jarpc-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "20fe3a8b2e26da9721c97cfff6699dbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29813, "upload_time": "2019-11-04T13:42:26", "upload_time_iso_8601": "2019-11-04T13:42:26.770332Z", "url": "https://files.pythonhosted.org/packages/10/12/10197ea7e58b1f3eb1ffc9d23e0d6e81b398a61c5a68826265c9f64aac25/jarpc-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "358d1da051b7c137934eb5199882b4cf", "sha256": "714c02e8ae1f99a1c7943a016b700529e6c78004cf34c2aa67bdcc41cf29bcad"}, "downloads": -1, "filename": "jarpc-0.3.1.tar.gz", "has_sig": false, "md5_digest": "358d1da051b7c137934eb5199882b4cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9556, "upload_time": "2019-11-04T13:42:28", "upload_time_iso_8601": "2019-11-04T13:42:28.393518Z", "url": "https://files.pythonhosted.org/packages/24/50/a9e2c2f1320a78b1c5c9d2f419303d6c7cf3dd4ee93538252d1a1797acf5/jarpc-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "20fe3a8b2e26da9721c97cfff6699dbd", "sha256": "29b48f104edf7cd28d72e348a52a56ec41acb96f0ad1771efca6367c18b62665"}, "downloads": -1, "filename": "jarpc-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "20fe3a8b2e26da9721c97cfff6699dbd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 29813, "upload_time": "2019-11-04T13:42:26", "upload_time_iso_8601": "2019-11-04T13:42:26.770332Z", "url": "https://files.pythonhosted.org/packages/10/12/10197ea7e58b1f3eb1ffc9d23e0d6e81b398a61c5a68826265c9f64aac25/jarpc-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "358d1da051b7c137934eb5199882b4cf", "sha256": "714c02e8ae1f99a1c7943a016b700529e6c78004cf34c2aa67bdcc41cf29bcad"}, "downloads": -1, "filename": "jarpc-0.3.1.tar.gz", "has_sig": false, "md5_digest": "358d1da051b7c137934eb5199882b4cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9556, "upload_time": "2019-11-04T13:42:28", "upload_time_iso_8601": "2019-11-04T13:42:28.393518Z", "url": "https://files.pythonhosted.org/packages/24/50/a9e2c2f1320a78b1c5c9d2f419303d6c7cf3dd4ee93538252d1a1797acf5/jarpc-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:07 2020"}