{"info": {"author": "Samuel Colvin", "author_email": "s@muelcolvin.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: System :: Archiving :: Compression"], "description": "xdelta3-python\n==============\n\n|BuildStatus| |Coverage| |pypi|\n\nFast delta encoding in python using xdelta3.\n\nRequirements\n------------\n\n* **Python 3.5 or 3.6** - it's 2017, you should be using python 3.6 by now anyway.\n* **linux** - compilation only tested on ubuntu, might work on other platform.\n\nInstallation\n------------\n\n.. code:: shell\n\n    pip install xdelta3\n\nUsage\n-----\n\n.. code:: python\n\n    import xdelta3\n    value_one = b'wonderful string to demonstrate xdelta3, much of these two strings is the same.'\n    value_two = b'different string to demonstrate xdelta3, much of these two strings is the same.'\n    delta = xdelta3.encode(value_one, value_two)\n    # delta is an unreadable byte string: b'\\xd6\\xc3 ... \\x01different\\n\\x13F\\x00'\n\n    print(f'New string length: {len(value_two)}, delta length: {len(delta)}')\n    value_two_rebuilt = xdelta3.decode(value_one, delta)\n    if value_two_rebuilt == value_two:\n        print('Boo Ya! Delta encoding successful.')\n\n*(with xdelta3 installed this code should run \"as is\", just copy it into ipython or a file and run)*\n\nHow fast?\n---------\n\n*xdelta3-python* is a thin wrapper around `xdelta 3.1.1 <https://github.com/jmacd/xdelta/>`_\nwhich is a highly optimised c library for delta calculation and compression.\nIt can encode a delta and decode it again for 5 small changes in a 5.5 million character string\n(the complete works of shakespeare) in around 10ms (or 30ms with the highest compression level). Boom.\nSee `performance.py <https://github.com/samuelcolvin/xdelta3-python/blob/master/performance.py>`_.\n\n.. |BuildStatus| image:: https://travis-ci.org/samuelcolvin/xdelta3-python.svg?branch=master\n   :target: https://travis-ci.org/samuelcolvin/xdelta3-python\n.. |Coverage| image:: https://codecov.io/gh/samuelcolvin/xdelta3-python/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/samuelcolvin/xdelta3-python\n.. |pypi| image:: https://img.shields.io/pypi/v/xdelta3.svg\n   :target: https://pypi.python.org/pypi/xdelta3", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/samuelcolvin/xdelta3-python", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "xdelta3-accemate", "package_url": "https://pypi.org/project/xdelta3-accemate/", "platform": "", "project_url": "https://pypi.org/project/xdelta3-accemate/", "project_urls": {"Homepage": "https://github.com/samuelcolvin/xdelta3-python"}, "release_url": "https://pypi.org/project/xdelta3-accemate/0.0.6a3/", "requires_dist": null, "requires_python": "", "summary": "Fast delta encoding using xdelta3", "version": "0.0.6a3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/samuelcolvin/xdelta3-python\" rel=\"nofollow\"><img alt=\"BuildStatus\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/702bc104907ce23eb2a1932272f310fa694befc5/68747470733a2f2f7472617669732d63692e6f72672f73616d75656c636f6c76696e2f7864656c7461332d707974686f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://codecov.io/gh/samuelcolvin/xdelta3-python\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78322e08d1e704a88578dc402f0254b59477b215/68747470733a2f2f636f6465636f762e696f2f67682f73616d75656c636f6c76696e2f7864656c7461332d707974686f6e2f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a> <a href=\"https://pypi.python.org/pypi/xdelta3\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17106fc328bfd05425f6520e0436a79e60450ec7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7864656c7461332e737667\"></a></p>\n<p>Fast delta encoding in python using xdelta3.</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><strong>Python 3.5 or 3.6</strong> - it\u2019s 2017, you should be using python 3.6 by now anyway.</li>\n<li><strong>linux</strong> - compilation only tested on ubuntu, might work on other platform.</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install xdelta3\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">xdelta3</span>\n<span class=\"n\">value_one</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'wonderful string to demonstrate xdelta3, much of these two strings is the same.'</span>\n<span class=\"n\">value_two</span> <span class=\"o\">=</span> <span class=\"sa\">b</span><span class=\"s1\">'different string to demonstrate xdelta3, much of these two strings is the same.'</span>\n<span class=\"n\">delta</span> <span class=\"o\">=</span> <span class=\"n\">xdelta3</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"n\">value_one</span><span class=\"p\">,</span> <span class=\"n\">value_two</span><span class=\"p\">)</span>\n<span class=\"c1\"># delta is an unreadable byte string: b'\\xd6\\xc3 ... \\x01different\\n\\x13F\\x00'</span>\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'New string length: </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">value_two</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\">, delta length: </span><span class=\"si\">{</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">)</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n<span class=\"n\">value_two_rebuilt</span> <span class=\"o\">=</span> <span class=\"n\">xdelta3</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">(</span><span class=\"n\">value_one</span><span class=\"p\">,</span> <span class=\"n\">delta</span><span class=\"p\">)</span>\n<span class=\"k\">if</span> <span class=\"n\">value_two_rebuilt</span> <span class=\"o\">==</span> <span class=\"n\">value_two</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'Boo Ya! Delta encoding successful.'</span><span class=\"p\">)</span>\n</pre>\n<p><em>(with xdelta3 installed this code should run \u201cas is\u201d, just copy it into ipython or a file and run)</em></p>\n</div>\n<div id=\"how-fast\">\n<h2>How fast?</h2>\n<p><em>xdelta3-python</em> is a thin wrapper around <a href=\"https://github.com/jmacd/xdelta/\" rel=\"nofollow\">xdelta 3.1.1</a>\nwhich is a highly optimised c library for delta calculation and compression.\nIt can encode a delta and decode it again for 5 small changes in a 5.5 million character string\n(the complete works of shakespeare) in around 10ms (or 30ms with the highest compression level). Boom.\nSee <a href=\"https://github.com/samuelcolvin/xdelta3-python/blob/master/performance.py\" rel=\"nofollow\">performance.py</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 4522002, "releases": {"0.0.6a2": [{"comment_text": "", "digests": {"md5": "7ee84ffa7f5e072a6c4df5e96518251f", "sha256": "0a18c0196f4b515f7018de9cab53c6953ae68ece5c105f8fddf8cd8a87e241a6"}, "downloads": -1, "filename": "xdelta3_accemate-0.0.6a2.tar.gz", "has_sig": false, "md5_digest": "7ee84ffa7f5e072a6c4df5e96518251f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122373, "upload_time": "2018-11-23T20:27:19", "upload_time_iso_8601": "2018-11-23T20:27:19.118465Z", "url": "https://files.pythonhosted.org/packages/b3/a8/0991b717d7517b20464b065b8a9bfd1a8e1ac84b56a438b27dfa3481a266/xdelta3_accemate-0.0.6a2.tar.gz", "yanked": false}], "0.0.6a3": [{"comment_text": "", "digests": {"md5": "bd7d533e78355e2c09c550de221c47f3", "sha256": "9fd228c2c686bc8ef5695b7081f49b528d469698c06dfb73be536445fb66cc44"}, "downloads": -1, "filename": "xdelta3_accemate-0.0.6a3.tar.gz", "has_sig": false, "md5_digest": "bd7d533e78355e2c09c550de221c47f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122390, "upload_time": "2018-11-23T23:19:43", "upload_time_iso_8601": "2018-11-23T23:19:43.344926Z", "url": "https://files.pythonhosted.org/packages/aa/f7/eacdeb3c38d37aa03808db70ad49f816299a7cac3756588e232efd2a00d7/xdelta3_accemate-0.0.6a3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bd7d533e78355e2c09c550de221c47f3", "sha256": "9fd228c2c686bc8ef5695b7081f49b528d469698c06dfb73be536445fb66cc44"}, "downloads": -1, "filename": "xdelta3_accemate-0.0.6a3.tar.gz", "has_sig": false, "md5_digest": "bd7d533e78355e2c09c550de221c47f3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 122390, "upload_time": "2018-11-23T23:19:43", "upload_time_iso_8601": "2018-11-23T23:19:43.344926Z", "url": "https://files.pythonhosted.org/packages/aa/f7/eacdeb3c38d37aa03808db70ad49f816299a7cac3756588e232efd2a00d7/xdelta3_accemate-0.0.6a3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:25:57 2020"}