{"info": {"author": "Zachary Ferguson", "author_email": "zfergus@nyu.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering"], "description": "# TopOpt \u2014 Topology Optimization in Python\n\n**A Python Library for Topology Optimization**\n\n<!-- <a href=\"https://pypi.org/project/topopt/\">\n    <img src=\"https://img.shields.io/pypi/v/topopt.svg?color=brightgreen&logo=python&logoColor=white\">\n</a> -->\n[![Build Status](https://travis-ci.com/zfergus/topopt.svg?token=ywnAuxJpUxbDrucLsj6b&branch=master)](https://travis-ci.com/zfergus/topopt)\n[![Documentation Status](https://readthedocs.org/projects/pytopopt/badge/?version=latest)](https://pytopopt.readthedocs.io/en/latest/?badge=latest)\n[![License](https://img.shields.io/github/license/zfergus/topopt.svg?color=blue)](https://opensource.org/licenses/MIT)\n\n**Warning:** this library is in early stages of development and consequently\nthe API may change to better improve usability.\n\n[Topology optimization](https://en.wikipedia.org/wiki/Topology_optimization)\nis a form of structure optimization where the design variable is the topology\nof the structure. Topological changes are achieved by optimizing the material\ndistribution within a given design space.\n\nTopOpt is a python library for topology optimization. TopOpt contains common\ndesign problems (e.g. minimum compliance) solved using advanced methods\n(e.g. Method of Moving Asymptotes (MMA)). Using TopOpt we can optimize the\nclassic Messerschmitt\u2013B\u00f6lkow\u2013Blohm (MBB) beam in a few lines of code:\n\n```python\nimport numpy\nfrom topopt.boundary_conditions import MBBBeamBoundaryConditions\nfrom topopt.problems import ComplianceProblem\nfrom topopt.solvers import TopOptSolver\nfrom topopt.filters import DensityBasedFilter\nfrom topopt.guis import GUI\n\nnelx, nely = 180, 60  # Number of elements in the x and y\nvolfrac = 0.4  # Volume fraction for constraints\npenal = 3.0  # Penalty for SIMP\nrmin = 5.4  # Filter radius\n\n# Initial solution\nx = volfrac * numpy.ones(nely * nelx, dtype=float)\n\n# Boundary conditions defining the loads and fixed points\nbc = MBBBeamBoundaryConditions(nelx, nely)\n\n# Problem to optimize given objective and constraints\nproblem = ComplianceProblem(bc, penal)\ngui = GUI(problem, \"Topology Optimization Example\")\ntopopt_filter = DensityBasedFilter(nelx, nely, rmin)\nsolver = TopOptSolver(problem, volfrac, topopt_filter, gui)\nx_opt = solver.optimize(x)\n\ninput(\"Press enter...\")\n```\n\n**Output:**\n\n<p align=\"center\">\n<img src=\"https://raw.githubusercontent.com/zfergus/topopt/master/assets/imgs//mmb-beam-example.png\">\n</p>\n\n## Development Status\n\nTopOpt is in early stages of development and only features a limited set of\nfinite element mesh options, optimization problems, and solvers. The following\nis a list of current and future features of TopOpt:\n\n### Meshes\n* [x] 2D regular grid\n* [ ] 2D general mesh\n    * [ ] triangle mesh\n    * [ ] quadrilateral mesh\n* [ ] 3D regular grid\n* [ ] 3D general mesh\n    * [ ] tetrahedron mesh\n    * [ ] hexahedron mesh\n\n### Problems\n* [ ] compliance\n    * [x] linear elasticity\n    * [ ] non-linear elasticity\n* [ ] stress\n* [ ] thermal conductivity\n* [ ] fluid flow\n\n### Solvers\n* [ ] [optimality criterion](https://en.wikipedia.org/wiki/Optimality_criterion)\n* [x] Method of Moving Asymptotes (MMA)\n* [ ]  [genetic algorithms](https://en.wikipedia.org/wiki/Genetic_algorithm)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/zfergus/topopt", "keywords": "Topology Optimization,Sturctural Optimization,Simulation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "topopt", "package_url": "https://pypi.org/project/topopt/", "platform": "", "project_url": "https://pypi.org/project/topopt/", "project_urls": {"Bug Reports": "https://github.com/zfergus/topopt/issues", "Homepage": "https://github.com/zfergus/topopt", "Source": "https://github.com/zfergus/topopt/"}, "release_url": "https://pypi.org/project/topopt/0.0.1a1/", "requires_dist": null, "requires_python": ">= 3.5", "summary": "A Python Library for Topology Optimization", "version": "0.0.1a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>TopOpt \u2014 Topology Optimization in Python</h1>\n<p><strong>A Python Library for Topology Optimization</strong></p>\n\n<p><a href=\"https://travis-ci.com/zfergus/topopt\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fd6076fe49159f6edaed90fd0e2f0b8342d3b4f/68747470733a2f2f7472617669732d63692e636f6d2f7a6665726775732f746f706f70742e7376673f746f6b656e3d79776e4175784a70557862447275634c736a3662266272616e63683d6d6173746572\"></a>\n<a href=\"https://pytopopt.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/68e4434ddb3ec21d2a6ac9a90d3dea7062aa85ad/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7079746f706f70742f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/93b11335d2abe677fe48a026c052a0fad48a58e7/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f7a6665726775732f746f706f70742e7376673f636f6c6f723d626c7565\"></a></p>\n<p><strong>Warning:</strong> this library is in early stages of development and consequently\nthe API may change to better improve usability.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Topology_optimization\" rel=\"nofollow\">Topology optimization</a>\nis a form of structure optimization where the design variable is the topology\nof the structure. Topological changes are achieved by optimizing the material\ndistribution within a given design space.</p>\n<p>TopOpt is a python library for topology optimization. TopOpt contains common\ndesign problems (e.g. minimum compliance) solved using advanced methods\n(e.g. Method of Moving Asymptotes (MMA)). Using TopOpt we can optimize the\nclassic Messerschmitt\u2013B\u00f6lkow\u2013Blohm (MBB) beam in a few lines of code:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n<span class=\"kn\">from</span> <span class=\"nn\">topopt.boundary_conditions</span> <span class=\"kn\">import</span> <span class=\"n\">MBBBeamBoundaryConditions</span>\n<span class=\"kn\">from</span> <span class=\"nn\">topopt.problems</span> <span class=\"kn\">import</span> <span class=\"n\">ComplianceProblem</span>\n<span class=\"kn\">from</span> <span class=\"nn\">topopt.solvers</span> <span class=\"kn\">import</span> <span class=\"n\">TopOptSolver</span>\n<span class=\"kn\">from</span> <span class=\"nn\">topopt.filters</span> <span class=\"kn\">import</span> <span class=\"n\">DensityBasedFilter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">topopt.guis</span> <span class=\"kn\">import</span> <span class=\"n\">GUI</span>\n\n<span class=\"n\">nelx</span><span class=\"p\">,</span> <span class=\"n\">nely</span> <span class=\"o\">=</span> <span class=\"mi\">180</span><span class=\"p\">,</span> <span class=\"mi\">60</span>  <span class=\"c1\"># Number of elements in the x and y</span>\n<span class=\"n\">volfrac</span> <span class=\"o\">=</span> <span class=\"mf\">0.4</span>  <span class=\"c1\"># Volume fraction for constraints</span>\n<span class=\"n\">penal</span> <span class=\"o\">=</span> <span class=\"mf\">3.0</span>  <span class=\"c1\"># Penalty for SIMP</span>\n<span class=\"n\">rmin</span> <span class=\"o\">=</span> <span class=\"mf\">5.4</span>  <span class=\"c1\"># Filter radius</span>\n\n<span class=\"c1\"># Initial solution</span>\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">volfrac</span> <span class=\"o\">*</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">ones</span><span class=\"p\">(</span><span class=\"n\">nely</span> <span class=\"o\">*</span> <span class=\"n\">nelx</span><span class=\"p\">,</span> <span class=\"n\">dtype</span><span class=\"o\">=</span><span class=\"nb\">float</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Boundary conditions defining the loads and fixed points</span>\n<span class=\"n\">bc</span> <span class=\"o\">=</span> <span class=\"n\">MBBBeamBoundaryConditions</span><span class=\"p\">(</span><span class=\"n\">nelx</span><span class=\"p\">,</span> <span class=\"n\">nely</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Problem to optimize given objective and constraints</span>\n<span class=\"n\">problem</span> <span class=\"o\">=</span> <span class=\"n\">ComplianceProblem</span><span class=\"p\">(</span><span class=\"n\">bc</span><span class=\"p\">,</span> <span class=\"n\">penal</span><span class=\"p\">)</span>\n<span class=\"n\">gui</span> <span class=\"o\">=</span> <span class=\"n\">GUI</span><span class=\"p\">(</span><span class=\"n\">problem</span><span class=\"p\">,</span> <span class=\"s2\">\"Topology Optimization Example\"</span><span class=\"p\">)</span>\n<span class=\"n\">topopt_filter</span> <span class=\"o\">=</span> <span class=\"n\">DensityBasedFilter</span><span class=\"p\">(</span><span class=\"n\">nelx</span><span class=\"p\">,</span> <span class=\"n\">nely</span><span class=\"p\">,</span> <span class=\"n\">rmin</span><span class=\"p\">)</span>\n<span class=\"n\">solver</span> <span class=\"o\">=</span> <span class=\"n\">TopOptSolver</span><span class=\"p\">(</span><span class=\"n\">problem</span><span class=\"p\">,</span> <span class=\"n\">volfrac</span><span class=\"p\">,</span> <span class=\"n\">topopt_filter</span><span class=\"p\">,</span> <span class=\"n\">gui</span><span class=\"p\">)</span>\n<span class=\"n\">x_opt</span> <span class=\"o\">=</span> <span class=\"n\">solver</span><span class=\"o\">.</span><span class=\"n\">optimize</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n\n<span class=\"nb\">input</span><span class=\"p\">(</span><span class=\"s2\">\"Press enter...\"</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Output:</strong></p>\n<p align=\"center\">\n<img src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f9770935a5e1dcfcfd6c9f3833af6a0a95a52113/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f7a6665726775732f746f706f70742f6d61737465722f6173736574732f696d67732f2f6d6d622d6265616d2d6578616d706c652e706e67\">\n</p>\n<h2>Development Status</h2>\n<p>TopOpt is in early stages of development and only features a limited set of\nfinite element mesh options, optimization problems, and solvers. The following\nis a list of current and future features of TopOpt:</p>\n<h3>Meshes</h3>\n<ul>\n<li>[x] 2D regular grid</li>\n<li>[ ] 2D general mesh\n<ul>\n<li>[ ] triangle mesh</li>\n<li>[ ] quadrilateral mesh</li>\n</ul>\n</li>\n<li>[ ] 3D regular grid</li>\n<li>[ ] 3D general mesh\n<ul>\n<li>[ ] tetrahedron mesh</li>\n<li>[ ] hexahedron mesh</li>\n</ul>\n</li>\n</ul>\n<h3>Problems</h3>\n<ul>\n<li>[ ] compliance\n<ul>\n<li>[x] linear elasticity</li>\n<li>[ ] non-linear elasticity</li>\n</ul>\n</li>\n<li>[ ] stress</li>\n<li>[ ] thermal conductivity</li>\n<li>[ ] fluid flow</li>\n</ul>\n<h3>Solvers</h3>\n<ul>\n<li>[ ] <a href=\"https://en.wikipedia.org/wiki/Optimality_criterion\" rel=\"nofollow\">optimality criterion</a></li>\n<li>[x] Method of Moving Asymptotes (MMA)</li>\n<li>[ ]  <a href=\"https://en.wikipedia.org/wiki/Genetic_algorithm\" rel=\"nofollow\">genetic algorithms</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6613292, "releases": {"0.0.1a1": [{"comment_text": "", "digests": {"md5": "3a795a79d764137d6596be43428f7464", "sha256": "1d5745c353bee69a3f4b359f5a5e2c5c654e9ab60fbdb553baf2f8e30b1c65e3"}, "downloads": -1, "filename": "topopt-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "3a795a79d764137d6596be43428f7464", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 19617, "upload_time": "2020-02-11T23:43:28", "upload_time_iso_8601": "2020-02-11T23:43:28.279118Z", "url": "https://files.pythonhosted.org/packages/28/e6/b58bd21ec780ef0c4fcb31da04e300cf00e5854c20c01b980bf112a109b0/topopt-0.0.1a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3a795a79d764137d6596be43428f7464", "sha256": "1d5745c353bee69a3f4b359f5a5e2c5c654e9ab60fbdb553baf2f8e30b1c65e3"}, "downloads": -1, "filename": "topopt-0.0.1a1.tar.gz", "has_sig": false, "md5_digest": "3a795a79d764137d6596be43428f7464", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 19617, "upload_time": "2020-02-11T23:43:28", "upload_time_iso_8601": "2020-02-11T23:43:28.279118Z", "url": "https://files.pythonhosted.org/packages/28/e6/b58bd21ec780ef0c4fcb31da04e300cf00e5854c20c01b980bf112a109b0/topopt-0.0.1a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:50:47 2020"}