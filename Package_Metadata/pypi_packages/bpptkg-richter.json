{"info": {"author": "Indra Rudianto", "author_email": "indrarudianto.official@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "Natural Language :: English", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# bpptkg-richter\n\nPython library for computing Richter local magnitude scales on BPPTKG seismic\nnetwork.\n\n## Requirements\n\n* Python 3.5+\n* numpy\n* python-dateutil\n\n## Installation\n\n**bpptkg-richter** is available on PyPI, you can install it by typing this\ncommand:\n\n    pip install -U bpptkg-richter\n\n## Richter Magnitude Scales\n\nThis package also provides a method for computing Richter local magnitude scales\non BPPTKG seismic network (`VG`). Currently supported stations are `MEDEL`,\n`MELAB`, `MEPAS`, `MEPUS` and only support `Z` component.\n\nYou may want to install [ObsPy](https://www.obspy.org/) package, because\nthis package only work on ObsPy stream type. Default network is `VG` and\ndefault component is `Z`:\n\n```python\nfrom obspy import read\nimport richter\n\nstream = read('/path/to/stream.mseed')\n\n# Compute Richter local magnitude for station MEPAS\nml = richter.compute_ml(stream, 'MEPAS', network='VG', component='Z')\n\n# Compute Wood-Anderson zero-to-peak amplitude in meter for station MEPAS\nwa_ampl = richter.compute_wa(stream, 'MEPAS', network='VG', component='Z')\n\n# Compute count amplitude peak-to-peak for station MEPAS\napp = richter.compute_app(stream, 'MEPAS', network='VG', component='Z')\n```\n\nor for short:\n\n```python\nfrom obspy import read\nimport richter\n\nstream = read('/path/to/stream.mseed')\n\nml = richter.compute_ml(stream, 'MEPAS')\nwa_ampl = richter.compute_wa(stream, 'MEPAS')\napp = richter.compute_app(stream, 'MEPAS')\n```\n\nFor current version, on computing local magnitude (`compute_ml`) and\nWood-Anderson amplitude(`compute_wa`), the only supported component is `Z`\ncomponent.\n\n`compute_app` support other components, for example:\n\n```python\napp = richter.compute_app(stream, 'MELAB', component='E')\n```\n\n## Documentation\n\nFull documentation and guides are available at `docs/` directory. You can build\nthe documentation by running these commands:\n\n    cd /path/to/bpptkg-richter/\n    pip install -r requirements.txt\n    sphinx-build -b html docs/ /path/to/build/\n\n## Support\n\nThis project is maintained by Indra Rudianto. If you have any question about\nthis project, you can contact him at <indrarudianto.official@gmail.com>.\n\n## License\n\nBy contributing to the project, you agree that your contributions will be\nlicensed under its MIT license. See\n[LICENSE](https://gitlab.com/bpptkg/bpptkg-richter/blob/master/LICENSE) for\ndetails.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/bpptkg/bpptkg-richter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "bpptkg-richter", "package_url": "https://pypi.org/project/bpptkg-richter/", "platform": "", "project_url": "https://pypi.org/project/bpptkg-richter/", "project_urls": {"Homepage": "https://gitlab.com/bpptkg/bpptkg-richter"}, "release_url": "https://pypi.org/project/bpptkg-richter/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Python library for computing Richter local magnitude scales on BPPTKG seismic network", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>bpptkg-richter</h1>\n<p>Python library for computing Richter local magnitude scales on BPPTKG seismic\nnetwork.</p>\n<h2>Requirements</h2>\n<ul>\n<li>Python 3.5+</li>\n<li>numpy</li>\n<li>python-dateutil</li>\n</ul>\n<h2>Installation</h2>\n<p><strong>bpptkg-richter</strong> is available on PyPI, you can install it by typing this\ncommand:</p>\n<pre><code>pip install -U bpptkg-richter\n</code></pre>\n<h2>Richter Magnitude Scales</h2>\n<p>This package also provides a method for computing Richter local magnitude scales\non BPPTKG seismic network (<code>VG</code>). Currently supported stations are <code>MEDEL</code>,\n<code>MELAB</code>, <code>MEPAS</code>, <code>MEPUS</code> and only support <code>Z</code> component.</p>\n<p>You may want to install <a href=\"https://www.obspy.org/\" rel=\"nofollow\">ObsPy</a> package, because\nthis package only work on ObsPy stream type. Default network is <code>VG</code> and\ndefault component is <code>Z</code>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">obspy</span> <span class=\"kn\">import</span> <span class=\"n\">read</span>\n<span class=\"kn\">import</span> <span class=\"nn\">richter</span>\n\n<span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/stream.mseed'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Compute Richter local magnitude for station MEPAS</span>\n<span class=\"n\">ml</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_ml</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MEPAS'</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'VG'</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s1\">'Z'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Compute Wood-Anderson zero-to-peak amplitude in meter for station MEPAS</span>\n<span class=\"n\">wa_ampl</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_wa</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MEPAS'</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'VG'</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s1\">'Z'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Compute count amplitude peak-to-peak for station MEPAS</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_app</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MEPAS'</span><span class=\"p\">,</span> <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'VG'</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s1\">'Z'</span><span class=\"p\">)</span>\n</pre>\n<p>or for short:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">obspy</span> <span class=\"kn\">import</span> <span class=\"n\">read</span>\n<span class=\"kn\">import</span> <span class=\"nn\">richter</span>\n\n<span class=\"n\">stream</span> <span class=\"o\">=</span> <span class=\"n\">read</span><span class=\"p\">(</span><span class=\"s1\">'/path/to/stream.mseed'</span><span class=\"p\">)</span>\n\n<span class=\"n\">ml</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_ml</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MEPAS'</span><span class=\"p\">)</span>\n<span class=\"n\">wa_ampl</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_wa</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MEPAS'</span><span class=\"p\">)</span>\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_app</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MEPAS'</span><span class=\"p\">)</span>\n</pre>\n<p>For current version, on computing local magnitude (<code>compute_ml</code>) and\nWood-Anderson amplitude(<code>compute_wa</code>), the only supported component is <code>Z</code>\ncomponent.</p>\n<p><code>compute_app</code> support other components, for example:</p>\n<pre><span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">richter</span><span class=\"o\">.</span><span class=\"n\">compute_app</span><span class=\"p\">(</span><span class=\"n\">stream</span><span class=\"p\">,</span> <span class=\"s1\">'MELAB'</span><span class=\"p\">,</span> <span class=\"n\">component</span><span class=\"o\">=</span><span class=\"s1\">'E'</span><span class=\"p\">)</span>\n</pre>\n<h2>Documentation</h2>\n<p>Full documentation and guides are available at <code>docs/</code> directory. You can build\nthe documentation by running these commands:</p>\n<pre><code>cd /path/to/bpptkg-richter/\npip install -r requirements.txt\nsphinx-build -b html docs/ /path/to/build/\n</code></pre>\n<h2>Support</h2>\n<p>This project is maintained by Indra Rudianto. If you have any question about\nthis project, you can contact him at <a href=\"mailto:indrarudianto.official@gmail.com\">indrarudianto.official@gmail.com</a>.</p>\n<h2>License</h2>\n<p>By contributing to the project, you agree that your contributions will be\nlicensed under its MIT license. See\n<a href=\"https://gitlab.com/bpptkg/bpptkg-richter/blob/master/LICENSE\" rel=\"nofollow\">LICENSE</a> for\ndetails.</p>\n\n          </div>"}, "last_serial": 6864187, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b5a86b4f77a131222365242bb16c3bcf", "sha256": "afe6d6be395fcc0c148734a167019fde17ede87aec8936bc287eb46f6de3a8d1"}, "downloads": -1, "filename": "bpptkg-richter-0.1.0.tar.gz", "has_sig": false, "md5_digest": "b5a86b4f77a131222365242bb16c3bcf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9713, "upload_time": "2019-09-08T12:01:58", "upload_time_iso_8601": "2019-09-08T12:01:58.023756Z", "url": "https://files.pythonhosted.org/packages/4e/f2/48dd5d707445e6a30605146408e673716b1b3836b7142cf5f9ee937de2da/bpptkg-richter-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e689598dd7c16ac9e4e7c23706643525", "sha256": "8fbbea819e14c0430ce8e679651f0ba2e2f22ccb619c0c2817267d4a9b2ef051"}, "downloads": -1, "filename": "bpptkg-richter-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e689598dd7c16ac9e4e7c23706643525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10090, "upload_time": "2019-11-02T10:06:53", "upload_time_iso_8601": "2019-11-02T10:06:53.237970Z", "url": "https://files.pythonhosted.org/packages/75/a7/6845050230a10e6259a8384f27341f2cc240feef5c1186b74c3ed1b81da1/bpptkg-richter-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "37d200cce24367452e0986cce1cd3faf", "sha256": "99c60757f7e36d6a3ba0ee073a6500fffb728d79354df9e50e3ae17a4cd1f4ab"}, "downloads": -1, "filename": "bpptkg-richter-0.3.0.tar.gz", "has_sig": false, "md5_digest": "37d200cce24367452e0986cce1cd3faf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10516, "upload_time": "2020-02-18T01:27:16", "upload_time_iso_8601": "2020-02-18T01:27:16.535836Z", "url": "https://files.pythonhosted.org/packages/b0/56/93e86bb47e0bd6b1ba8584719115830140af805fa7b5e74d6872fe76f6f5/bpptkg-richter-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "91c00daa764377eeda2679f2ca054948", "sha256": "9211f193ce781da98eb3459cc153390a60d7375093ef17ec8c13b8f941e09678"}, "downloads": -1, "filename": "bpptkg-richter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "91c00daa764377eeda2679f2ca054948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10722, "upload_time": "2020-03-23T08:54:19", "upload_time_iso_8601": "2020-03-23T08:54:19.648928Z", "url": "https://files.pythonhosted.org/packages/13/9b/5b921c91a5721295d9ff3511ea760a47d97e6e2fac72d13a3d7e1573f9b4/bpptkg-richter-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91c00daa764377eeda2679f2ca054948", "sha256": "9211f193ce781da98eb3459cc153390a60d7375093ef17ec8c13b8f941e09678"}, "downloads": -1, "filename": "bpptkg-richter-0.4.0.tar.gz", "has_sig": false, "md5_digest": "91c00daa764377eeda2679f2ca054948", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10722, "upload_time": "2020-03-23T08:54:19", "upload_time_iso_8601": "2020-03-23T08:54:19.648928Z", "url": "https://files.pythonhosted.org/packages/13/9b/5b921c91a5721295d9ff3511ea760a47d97e6e2fac72d13a3d7e1573f9b4/bpptkg-richter-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:27 2020"}