{"info": {"author": "Jay Flaherty", "author_email": "jayflaherty@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# phishnet_api_v3\n\nphishnet_api_v3 is a Python client for v3 of the [Phish.net API](http://api.phish.net).  It works with either Python 3 and supports all of the endpoints provided by api.phish.net/v3.\n\n# Installation\n\nYou guessed it...\n\n```\npip install phishnet_api_v3\n```\n\n# Getting Started\n\nVersion 3 of the API is a complete rewrite. Access to all endpoints require an apikey. To get one go to https://api.phish.net/keys/ to request one. You can have up to 5 unique apikeys for your applications.\n\nAs you browse the [Phish.net API documentation](https://phishnet.api-docs.io/v3/the-phish-net-api/welcome) you will see that Version 3 also introduced a new security scheme via a unique hash generated on a client to retrieve an authorization key. Like the previous version of our API, there are API methods designated as writable that require a special per-user, per-app authorization key called an \"authkey\" that must match a uid and your apikey. To obtain this key,  the user you want to access one of these \"writeable\" endpoints on behalf of must go to https://phish.net/authorize?appid=<<appid>>&uid=<<uid>> to authorize your application. You will need to provide them your application id available at https://api.phish.net (you must be logged in to phish.net )\n\n## Public API Methods\n\nFor API calls that do not require a authkey, you simply need to instantiate the PhishNetAPI class, and call the methods for each of the API methods. There are 2 ways to set the apikey. The easiest way is to create a .env file in the current directory you are calling this API wrapper (see .env.SAMPLE in the root directory of this project.) it should look like this:\n\n```\nexport APIKEY=<<YOURAPIKEYHERE>>\nexport APPID=<<YOURAPPIDHERE>>\nexport PRIVATE_SALT=<<YOURPRIVATESALTHERE>>\n```\nthe PRIVATE_SALT is also available from https://api.phish.net/keys/ and is used to retrieve the authkey from the /authorize/get endpoint. The other way to set the apikey is to pass it into the constructor:\n\n``` python\n>>> from phishnet_api_v3 import PhishNetAPI\n>>> api = PhishNetAPI(<YOURAPIKEYHERE>)\n>>> artists = api.get_artists()\n>>> artists\n{'error_code': 0, 'error_message': None, 'response': {'count': 5, 'data': {'1': {'artistid': 1, 'name': 'Phish', 'link': 'http://phish.net/setlists/phish'}, '2': {'artistid': 2, 'name': 'Phish', 'link': 'http://phish.net/setlists/trey'}, '6': {'artistid': 6, 'name': 'Phish', 'link': 'http://phish.net/setlists/mike'}, '7': {'artistid': 7, 'name': 'Phish', 'link': 'http://phish.net/setlists/fish'}, '9': {'artistid': 9, 'name': 'Phish', 'link': 'http://phish.net/setlists/page'}}}}\n```\n\nAttempting to call protected methods without calling authorize(<<uid>>) first will raise `phishnet_api_v3.exceptions.PhishNetAPIError`. If you have your private_salt in .env then authorize() will be called for you. Once you authorize a user then authkey is available in the object for future use. If you change the uid then authorize() will be rerun to get the new authkey. Below is an example of trying to get the authkey of a user who has not authorized your application for his uid:\n\n``` python\n>>> from phishnet_api_v3.api_client import PhishNetAPI\n>>> api = PhishNetAPI()\n>>> api.authorize(1)\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\", line 89, in authorize\n    self.authkey = self.get_authkey(uid)\n  File \"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\", line 103, in get_authkey\n    return self._authority_get(uid)\n  File \"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\", line 122, in _authority_get\n    response = self.post(function='_authority_get',\n  File \"/home/fty/git/phishnet_api_v3/phishnet_api_v3/decorators.py\", line 37, in wrapper\n    return f(*args, **kwargs)\n  File \"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\", line 422, in post\n    raise PhishNetAPIError(\nphishnet_api_v3.exceptions.PhishNetAPIError: phish.net API error: authority/get, 3, Invalid authorization key, this application is not writable\n```\n\n## API Methods\n\nStarting with v3 of the phish.net API, all methods are considered \"protected\" API methods\nand require an API key. You can have this as a OS environment variable via your OS mechanisms or via the .env file or you can pass the API key into the constuctor.  \n\n``` python\n>>> from phishnet_api_v3 import PhishNetAPI\n>>> my_api_key = \"<MY API KEY>\" # Private API key from http://api.phish.net/keys/\n>>> api = PhishNetAPI(my_api_key)\n>>> api.get_user_details(80)\n{'error_code': 0, 'error_message': None, 'response': {'count': 1, 'data': {'80': {'uid': 80, 'username': 'wsppan', 'realname': 'Jay Flaherty', 'joined': '2009-09-29', 'member_since': '10 years ago', 'avatar': 'https://smedia.pnet-static.com/avatars/default_avatar.png', 'link': 'http://phish.net/user/wsppan', 'isconfirmed': 'Yes', 'bio': 'My name is Jay and I am a Phishaholic', 'website': 'http://'}}}}\n\n### get_recent_blogs\n```python\nPhishNetAPI.get_recent_blogs(self)\n```\n\nGet a list of recently posted entries to the phish.net blog (last 15 entries).\n:return: json response object of recent blog entries - see tests/data/recent_blogs.json\n\n### get_blogs\n```python\nPhishNetAPI.get_blogs(self, **kwargs)\n```\n\nFind all blogs that match the params below (maximum of 15 results)\n:param **kwargs. Made up of at least one of the the following keys:\n    month: The month of the year as as integer\n    day: The day of the month as as integer\n    year: The year as as integer\n    monthname: month of the year (i.e. January)\n    username: The username of the author\n    author: the uid of the author\n:return: json response object of blogs that match the query(see get_recent_blogs())\n\n### get_artists\n```python\nPhishNetAPI.get_artists(self)\n```\n\nThe artists/all endpoint returns an array of artists whose setlists are tracked\nin the Phish.net setlist database, along with the associated artistid.\n:return: json response object of all artists - see tests/data/all_artists.json\n\n### get_show_attendees\n```python\nPhishNetAPI.get_show_attendees(self, **kwargs)\n```\n\nFind all attendees for a specific show\n:param **kwargs: Made up of at least one of the the following keys:\n    showid: the id for a specific show\n    showdate: The date for a specific show\n:return: json response object of attendees for a specific show.\n    - see tests/data/show_attendees.json\n\n### query_collections\n```python\nPhishNetAPI.query_collections(self, **kwargs)\n```\n\nQuery user collections from the /collections/query endpoint.\n:params **kwargs comprised of the following keys: collectionid, uid, contains.\n    contains is a comma separated string of showid's\n:returns: json response object with a list of collections.\n\n### get_collection\n```python\nPhishNetAPI.get_collection(self, collectionid)\n```\n\nGet the details of a collection from the /collections/get endpoint.\n:param collection_id: the collectionid associated with the collection.\n:returns: json object of a collection detail. - see tests/data/get_collection.json\n\n### get_all_jamcharts\n```python\nPhishNetAPI.get_all_jamcharts(self)\n```\n\nGet an array of songs that have jamcharts, song, songid, name, link, and number\nfrom the /jamcharts/all endpoint.\n:return: json response object of all jamcharts - see tests/data/all_jamcharts.json\n\n### get_jamchart\n```python\nPhishNetAPI.get_jamchart(self, songid)\n```\n\nGet the details of a jamchart from the /jamcharts/get endpoint.\n:param song_id: the songid associated with the jamchart.\n:returns: json object of a jamchart detail. - see tests/data/get_jamchart.json\n\n### get_all_people\n```python\nPhishNetAPI.get_all_people(self)\n```\n\nGet a list of personid, name, type, and a link to all shows in which a person is featured\nfrom the people/all endpoint.\n:returns: json object of all people - see tests/data/all_people.json\n\n### get_all_people_types\n```python\nPhishNetAPI.get_all_people_types(self)\n```\n\nGet a dict of all people types from the people/get endpoint.\n:returns: json object of all people types - see tests/data/all_people_types.json\n\n### get_people_by_show\n```python\nPhishNetAPI.get_people_by_show(self, showid)\n```\n\nGet list of performers at a show from the /people/byshow endpoint.\n:param show_id: the showid associated with the show.\n:returns: json object of a list of performers for a show.\n    - see tests/data/people_by_show.json\n\n### get_appearances\n```python\nPhishNetAPI.get_appearances(self, personid, year=None)\n```\n\nGet list of appearances for a particular performer from the /people/appearances endpoint.\n:param person_id: the personid associated with the appearances.\n:param year: optional parameter to narrow the list by year (>=1983)\n:returns: json object of a list of appearances for a performer.\n    - see tests/data/get_appearances.json\n\n### get_relationships\n```python\nPhishNetAPI.get_relationships(self, uid)\n```\n\nReturns an array of friends & fans from the /relationships/get endpoint.\n:param uid: the uid associated with the relationship.\n:returns: json object of a user's relationships. - see tests/data/get_relationships.json\n\n### query_reviews\n```python\nPhishNetAPI.query_reviews(self, **kwargs)\n```\n\nQuery user reviews from the /reviews/query endpoint.\n:params **kwargs comprised of the following keys: showid, uid,\n    posted_on, posted_after, posted_before.\n:returns: json response object with a list of reviews.\n\n### get_latest_setlist\n```python\nPhishNetAPI.get_latest_setlist(self)\n```\n\nGet an array with the most recent Phish setlist\n:returns: json object of the latest setlist - see tests/data/latest_setlist.json\n\n### get_setlist\n```python\nPhishNetAPI.get_setlist(self, showid=None, showdate=None)\n```\n\nGet an array with the Phish setlist that matches the showid or showdate.\nIf both parameters are passed in, showid takes precedence. If no params are\npassed in then it returns the latest setlist.\n:returns: json object of matching setlist - see tests/data/latest_setlist.json\n\n### get_recent_setlists\n```python\nPhishNetAPI.get_recent_setlists(self)\n```\n\nGet an array with the 10 most recent Phish setlists\n:returns: json object of the 10 most recent setlist - see tests/data/recent_setlists.json\n\n### get_tiph_setlist\n```python\nPhishNetAPI.get_tiph_setlist(self)\n```\n\nGet an array with a random setlist from today's date (MM/DD) in Phish history\n:returns: json object of the setlist - see tests/data/tiph_setlist.json\n\n### get_random_setlist\n```python\nPhishNetAPI.get_random_setlist(self)\n```\n\nGet an array with a random setlist in Phish history\n:returns: json object of the setlist - see tests/data/tiph_setlist.json\n\n### get_in_progress_setlist\n```python\nPhishNetAPI.get_in_progress_setlist(self)\n```\n\nGet the Most Recent Setlist, Including in Progress.\n:returns: json object of the setlist - see tests/data/tiph_setlist.json\n\n### get_show_links\n```python\nPhishNetAPI.get_show_links(self, showid)\n```\n\nGet links associated with a show, including LivePhish links, Phish.net recaps, photos, and more.\n:returns: json object of show links - see tests/data/get_show_links.json\n\n### get_upcoming_shows\n```python\nPhishNetAPI.get_upcoming_shows(self)\n```\n\nGet an array of upcoming shows.\n:returns: json object of upcoming shows - see tests/data/get_upcoming_shows.json\n\n### query_shows\n```python\nPhishNetAPI.query_shows(self, **kwargs)\n```\n\nQuery the show list via one or more parameters. If no paramters are fed,\nreturns error_code 3. Please note that you cannot send an argument of\n\"showdate\" or \"date\" to this endpoint. If you know the showdate for which\nyou want details, please use get_setlist()\n\n### get_user_details\n```python\nPhishNetAPI.get_user_details(self, uid)\n```\n\nReturns an array of publically available details about a user. Requires\nan authkey from an authorized user of your application. See authorize().\n:return: json response object with details for a registered phish.net user.\n\n### get_all_venues\n```python\nPhishNetAPI.get_all_venues(self)\n```\n\nReturns an array of venues.\n:return: json response object with all venues - see tests/data/all_venues.json.\n\n### get_venue\n```python\nPhishNetAPI.get_venue(self, venueid)\n```\n\nreturns an array of values, including geographical location about a single venue and,\nif its an alias, the current name.\n:return: json response object with the details abount a venue -- see tests/data/get_venue.json\n\n\n### Methods requiring user authorization\n\nSome protected methods additionally require an authkey to take actions on behalf of specific users.  This includes adding and removing a show to \"My Shows\". In order to make authorized API calls on \nbehalf of a user, the user needs to be registered with phish.net and they need to go to \nhttps://phish.net/authorize?appid=<<your appid>>&uid=<<their UID>>. Your appid is available from \nhttps://api.phish.net/keys/\n\nOnce those attributes have been set, you can make user-authorized API calls.  For example, lets add, and then remove [11/30/1997](http://phish.net/setlists/?d=1997-11-30) to userid 80's list of shows.\n\n``` python\n>>> from phishnet_api_v3.api_client import PhishNetAPI\n>>> api = PhishNetAPI()\n>>> api.authorize(80)\n>>> response = api.query_shows(year=1997, month=11, day=30)\n>>> response['response']['data']['showid']\n>>> response['response']['data'][0]['showid']\n1252691618\n>>> api.update_show_attendance(api.uid, showid=1252691618, update='add')\n{\"error_code\": 0, \"error_message\": \"Successfully added 1997-11-30\", \"response\": {\"count\": 4, \"data\": {\"action\": \"add\", \"showdate\": \"1997-11-30\", \"showid\": 1252691618, \"shows_seen\": \"140\"}}}\n>>> api.update_show_attendance(api.uid, showid=1252691618, update='remove')\n{\"error_code\": 0, \"error_message\": \"Successfully removed 1997-11-30\", \"response\": {\"count\": 4, \"data\": {\"action\": \"remove\", \"showdate\": \"1997-11-30\", \"showid\": 1252691618, \"shows_seen\": \"139\"}}}\n```\n\n### authorize\n```python\nPhishNetAPI.authorize(self, uid, private_salt=None)\n```\n\nAuthorize the current instance to be able to make privileged API calls on behalf of a selected user.\nIn order to use this method, The phish.net registered user must have gone to\nhttps://phish.net/authorize?appid=X&uid=Y to authorize themselves with your app and allow you to get\nthier authkey via the authority/get endpoint.\n\n:param uid: The uid to authorize on behalf of.\n:param private_salt: The private_salt associated with the apikey. If None, will check\nenvironment variable (set either via the OS environment or .env file.)\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jflaherty/phishnet_api_v3", "keywords": "Phish,REST,API", "license": "", "maintainer": "", "maintainer_email": "", "name": "phishnet-api-v3", "package_url": "https://pypi.org/project/phishnet-api-v3/", "platform": "", "project_url": "https://pypi.org/project/phishnet-api-v3/", "project_urls": {"Homepage": "https://github.com/jflaherty/phishnet_api_v3", "Repository": "https://github.com/jflaherty/phishnet_api_v3"}, "release_url": "https://pypi.org/project/phishnet-api-v3/0.1.0/", "requires_dist": ["requests (>=2.22.0,<3.0.0)", "python-dotenv (>=0.10.3,<0.11.0)"], "requires_python": ">=3.5,<4.0", "summary": "Python3 client to interface with v3 of the api.phish.net REST endpoints.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>phishnet_api_v3</h1>\n<p>phishnet_api_v3 is a Python client for v3 of the <a href=\"http://api.phish.net\" rel=\"nofollow\">Phish.net API</a>.  It works with either Python 3 and supports all of the endpoints provided by api.phish.net/v3.</p>\n<h1>Installation</h1>\n<p>You guessed it...</p>\n<pre><code>pip install phishnet_api_v3\n</code></pre>\n<h1>Getting Started</h1>\n<p>Version 3 of the API is a complete rewrite. Access to all endpoints require an apikey. To get one go to <a href=\"https://api.phish.net/keys/\" rel=\"nofollow\">https://api.phish.net/keys/</a> to request one. You can have up to 5 unique apikeys for your applications.</p>\n<p>As you browse the <a href=\"https://phishnet.api-docs.io/v3/the-phish-net-api/welcome\" rel=\"nofollow\">Phish.net API documentation</a> you will see that Version 3 also introduced a new security scheme via a unique hash generated on a client to retrieve an authorization key. Like the previous version of our API, there are API methods designated as writable that require a special per-user, per-app authorization key called an \"authkey\" that must match a uid and your apikey. To obtain this key,  the user you want to access one of these \"writeable\" endpoints on behalf of must go to <a href=\"https://phish.net/authorize?appid=\" rel=\"nofollow\">https://phish.net/authorize?appid=</a>&lt;&lt;appid&gt;&gt;&amp;uid=&lt;&lt;uid&gt;&gt; to authorize your application. You will need to provide them your application id available at <a href=\"https://api.phish.net\" rel=\"nofollow\">https://api.phish.net</a> (you must be logged in to phish.net )</p>\n<h2>Public API Methods</h2>\n<p>For API calls that do not require a authkey, you simply need to instantiate the PhishNetAPI class, and call the methods for each of the API methods. There are 2 ways to set the apikey. The easiest way is to create a .env file in the current directory you are calling this API wrapper (see .env.SAMPLE in the root directory of this project.) it should look like this:</p>\n<pre><code>export APIKEY=&lt;&lt;YOURAPIKEYHERE&gt;&gt;\nexport APPID=&lt;&lt;YOURAPPIDHERE&gt;&gt;\nexport PRIVATE_SALT=&lt;&lt;YOURPRIVATESALTHERE&gt;&gt;\n</code></pre>\n<p>the PRIVATE_SALT is also available from <a href=\"https://api.phish.net/keys/\" rel=\"nofollow\">https://api.phish.net/keys/</a> and is used to retrieve the authkey from the /authorize/get endpoint. The other way to set the apikey is to pass it into the constructor:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnet_api_v3</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">(</span><span class=\"o\">&lt;</span><span class=\"n\">YOURAPIKEYHERE</span><span class=\"o\">&gt;</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">artists</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_artists</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">artists</span>\n<span class=\"p\">{</span><span class=\"s1\">'error_code'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'error_message'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">'response'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'1'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Phish'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'http://phish.net/setlists/phish'</span><span class=\"p\">},</span> <span class=\"s1\">'2'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Phish'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'http://phish.net/setlists/trey'</span><span class=\"p\">},</span> <span class=\"s1\">'6'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Phish'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'http://phish.net/setlists/mike'</span><span class=\"p\">},</span> <span class=\"s1\">'7'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Phish'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'http://phish.net/setlists/fish'</span><span class=\"p\">},</span> <span class=\"s1\">'9'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'artistid'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'Phish'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'http://phish.net/setlists/page'</span><span class=\"p\">}}}}</span>\n</pre>\n<p>Attempting to call protected methods without calling authorize(&lt;&lt;uid&gt;&gt;) first will raise <code>phishnet_api_v3.exceptions.PhishNetAPIError</code>. If you have your private_salt in .env then authorize() will be called for you. Once you authorize a user then authkey is available in the object for future use. If you change the uid then authorize() will be rerun to get the new authkey. Below is an example of trying to get the authkey of a user who has not authorized your application for his uid:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnet_api_v3.api_client</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"&lt;stdin&gt;\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"o\">&lt;</span><span class=\"n\">module</span><span class=\"o\">&gt;</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">89</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">authorize</span>\n    <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">authkey</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_authkey</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">103</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">get_authkey</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_authority_get</span><span class=\"p\">(</span><span class=\"n\">uid</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">122</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">_authority_get</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">function</span><span class=\"o\">=</span><span class=\"s1\">'_authority_get'</span><span class=\"p\">,</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"/home/fty/git/phishnet_api_v3/phishnet_api_v3/decorators.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">37</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">wrapper</span>\n    <span class=\"k\">return</span> <span class=\"n\">f</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n  <span class=\"n\">File</span> <span class=\"s2\">\"/home/fty/git/phishnet_api_v3/phishnet_api_v3/api_client.py\"</span><span class=\"p\">,</span> <span class=\"n\">line</span> <span class=\"mi\">422</span><span class=\"p\">,</span> <span class=\"ow\">in</span> <span class=\"n\">post</span>\n    <span class=\"k\">raise</span> <span class=\"n\">PhishNetAPIError</span><span class=\"p\">(</span>\n<span class=\"n\">phishnet_api_v3</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">PhishNetAPIError</span><span class=\"p\">:</span> <span class=\"n\">phish</span><span class=\"o\">.</span><span class=\"n\">net</span> <span class=\"n\">API</span> <span class=\"n\">error</span><span class=\"p\">:</span> <span class=\"n\">authority</span><span class=\"o\">/</span><span class=\"n\">get</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">Invalid</span> <span class=\"n\">authorization</span> <span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">this</span> <span class=\"n\">application</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"n\">writable</span>\n</pre>\n<h2>API Methods</h2>\n<p>Starting with v3 of the phish.net API, all methods are considered \"protected\" API methods\nand require an API key. You can have this as a OS environment variable via your OS mechanisms or via the .env file or you can pass the API key into the constuctor.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnet_api_v3</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">my_api_key</span> <span class=\"o\">=</span> <span class=\"s2\">\"&lt;MY API KEY&gt;\"</span> <span class=\"c1\"># Private API key from http://api.phish.net/keys/</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">(</span><span class=\"n\">my_api_key</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">get_user_details</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s1\">'error_code'</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s1\">'error_message'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"s1\">'response'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'count'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'80'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'uid'</span><span class=\"p\">:</span> <span class=\"mi\">80</span><span class=\"p\">,</span> <span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'wsppan'</span><span class=\"p\">,</span> <span class=\"s1\">'realname'</span><span class=\"p\">:</span> <span class=\"s1\">'Jay Flaherty'</span><span class=\"p\">,</span> <span class=\"s1\">'joined'</span><span class=\"p\">:</span> <span class=\"s1\">'2009-09-29'</span><span class=\"p\">,</span> <span class=\"s1\">'member_since'</span><span class=\"p\">:</span> <span class=\"s1\">'10 years ago'</span><span class=\"p\">,</span> <span class=\"s1\">'avatar'</span><span class=\"p\">:</span> <span class=\"s1\">'https://smedia.pnet-static.com/avatars/default_avatar.png'</span><span class=\"p\">,</span> <span class=\"s1\">'link'</span><span class=\"p\">:</span> <span class=\"s1\">'http://phish.net/user/wsppan'</span><span class=\"p\">,</span> <span class=\"s1\">'isconfirmed'</span><span class=\"p\">:</span> <span class=\"s1\">'Yes'</span><span class=\"p\">,</span> <span class=\"s1\">'bio'</span><span class=\"p\">:</span> <span class=\"s1\">'My name is Jay and I am a Phishaholic'</span><span class=\"p\">,</span> <span class=\"s1\">'website'</span><span class=\"p\">:</span> <span class=\"s1\">'http://'</span><span class=\"p\">}}}}</span>\n\n<span class=\"c1\">### get_recent_blogs</span>\n<span class=\"err\">```</span><span class=\"n\">python</span>\n<span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_recent_blogs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get a list of recently posted entries to the phish.net blog (last 15 entries).\n:return: json response object of recent blog entries - see tests/data/recent_blogs.json</p>\n<h3>get_blogs</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_blogs</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Find all blogs that match the params below (maximum of 15 results)\n:param **kwargs. Made up of at least one of the the following keys:\nmonth: The month of the year as as integer\nday: The day of the month as as integer\nyear: The year as as integer\nmonthname: month of the year (i.e. January)\nusername: The username of the author\nauthor: the uid of the author\n:return: json response object of blogs that match the query(see get_recent_blogs())</p>\n<h3>get_artists</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_artists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>The artists/all endpoint returns an array of artists whose setlists are tracked\nin the Phish.net setlist database, along with the associated artistid.\n:return: json response object of all artists - see tests/data/all_artists.json</p>\n<h3>get_show_attendees</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_show_attendees</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Find all attendees for a specific show\n:param **kwargs: Made up of at least one of the the following keys:\nshowid: the id for a specific show\nshowdate: The date for a specific show\n:return: json response object of attendees for a specific show.\n- see tests/data/show_attendees.json</p>\n<h3>query_collections</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">query_collections</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Query user collections from the /collections/query endpoint.\n:params **kwargs comprised of the following keys: collectionid, uid, contains.\ncontains is a comma separated string of showid's\n:returns: json response object with a list of collections.</p>\n<h3>get_collection</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_collection</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">collectionid</span><span class=\"p\">)</span>\n</pre>\n<p>Get the details of a collection from the /collections/get endpoint.\n:param collection_id: the collectionid associated with the collection.\n:returns: json object of a collection detail. - see tests/data/get_collection.json</p>\n<h3>get_all_jamcharts</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_all_jamcharts</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array of songs that have jamcharts, song, songid, name, link, and number\nfrom the /jamcharts/all endpoint.\n:return: json response object of all jamcharts - see tests/data/all_jamcharts.json</p>\n<h3>get_jamchart</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_jamchart</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">songid</span><span class=\"p\">)</span>\n</pre>\n<p>Get the details of a jamchart from the /jamcharts/get endpoint.\n:param song_id: the songid associated with the jamchart.\n:returns: json object of a jamchart detail. - see tests/data/get_jamchart.json</p>\n<h3>get_all_people</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_all_people</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get a list of personid, name, type, and a link to all shows in which a person is featured\nfrom the people/all endpoint.\n:returns: json object of all people - see tests/data/all_people.json</p>\n<h3>get_all_people_types</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_all_people_types</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get a dict of all people types from the people/get endpoint.\n:returns: json object of all people types - see tests/data/all_people_types.json</p>\n<h3>get_people_by_show</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_people_by_show</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">showid</span><span class=\"p\">)</span>\n</pre>\n<p>Get list of performers at a show from the /people/byshow endpoint.\n:param show_id: the showid associated with the show.\n:returns: json object of a list of performers for a show.\n- see tests/data/people_by_show.json</p>\n<h3>get_appearances</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_appearances</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">personid</span><span class=\"p\">,</span> <span class=\"n\">year</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Get list of appearances for a particular performer from the /people/appearances endpoint.\n:param person_id: the personid associated with the appearances.\n:param year: optional parameter to narrow the list by year (&gt;=1983)\n:returns: json object of a list of appearances for a performer.\n- see tests/data/get_appearances.json</p>\n<h3>get_relationships</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_relationships</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"p\">)</span>\n</pre>\n<p>Returns an array of friends &amp; fans from the /relationships/get endpoint.\n:param uid: the uid associated with the relationship.\n:returns: json object of a user's relationships. - see tests/data/get_relationships.json</p>\n<h3>query_reviews</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">query_reviews</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Query user reviews from the /reviews/query endpoint.\n:params **kwargs comprised of the following keys: showid, uid,\nposted_on, posted_after, posted_before.\n:returns: json response object with a list of reviews.</p>\n<h3>get_latest_setlist</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_latest_setlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array with the most recent Phish setlist\n:returns: json object of the latest setlist - see tests/data/latest_setlist.json</p>\n<h3>get_setlist</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_setlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">showid</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"n\">showdate</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array with the Phish setlist that matches the showid or showdate.\nIf both parameters are passed in, showid takes precedence. If no params are\npassed in then it returns the latest setlist.\n:returns: json object of matching setlist - see tests/data/latest_setlist.json</p>\n<h3>get_recent_setlists</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_recent_setlists</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array with the 10 most recent Phish setlists\n:returns: json object of the 10 most recent setlist - see tests/data/recent_setlists.json</p>\n<h3>get_tiph_setlist</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_tiph_setlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array with a random setlist from today's date (MM/DD) in Phish history\n:returns: json object of the setlist - see tests/data/tiph_setlist.json</p>\n<h3>get_random_setlist</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_random_setlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array with a random setlist in Phish history\n:returns: json object of the setlist - see tests/data/tiph_setlist.json</p>\n<h3>get_in_progress_setlist</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_in_progress_setlist</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get the Most Recent Setlist, Including in Progress.\n:returns: json object of the setlist - see tests/data/tiph_setlist.json</p>\n<h3>get_show_links</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_show_links</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">showid</span><span class=\"p\">)</span>\n</pre>\n<p>Get links associated with a show, including LivePhish links, Phish.net recaps, photos, and more.\n:returns: json object of show links - see tests/data/get_show_links.json</p>\n<h3>get_upcoming_shows</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_upcoming_shows</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Get an array of upcoming shows.\n:returns: json object of upcoming shows - see tests/data/get_upcoming_shows.json</p>\n<h3>query_shows</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">query_shows</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Query the show list via one or more parameters. If no paramters are fed,\nreturns error_code 3. Please note that you cannot send an argument of\n\"showdate\" or \"date\" to this endpoint. If you know the showdate for which\nyou want details, please use get_setlist()</p>\n<h3>get_user_details</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_user_details</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"p\">)</span>\n</pre>\n<p>Returns an array of publically available details about a user. Requires\nan authkey from an authorized user of your application. See authorize().\n:return: json response object with details for a registered phish.net user.</p>\n<h3>get_all_venues</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_all_venues</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span>\n</pre>\n<p>Returns an array of venues.\n:return: json response object with all venues - see tests/data/all_venues.json.</p>\n<h3>get_venue</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">get_venue</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">venueid</span><span class=\"p\">)</span>\n</pre>\n<p>returns an array of values, including geographical location about a single venue and,\nif its an alias, the current name.\n:return: json response object with the details abount a venue -- see tests/data/get_venue.json</p>\n<h3>Methods requiring user authorization</h3>\n<p>Some protected methods additionally require an authkey to take actions on behalf of specific users.  This includes adding and removing a show to \"My Shows\". In order to make authorized API calls on\nbehalf of a user, the user needs to be registered with phish.net and they need to go to\n<a href=\"https://phish.net/authorize?appid=\" rel=\"nofollow\">https://phish.net/authorize?appid=</a>&lt;&lt;your appid&gt;&gt;&amp;uid=&lt;&lt;their UID&gt;&gt;. Your appid is available from\n<a href=\"https://api.phish.net/keys/\" rel=\"nofollow\">https://api.phish.net/keys/</a></p>\n<p>Once those attributes have been set, you can make user-authorized API calls.  For example, lets add, and then remove <a href=\"http://phish.net/setlists/?d=1997-11-30\" rel=\"nofollow\">11/30/1997</a> to userid 80's list of shows.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">phishnet_api_v3.api_client</span> <span class=\"kn\">import</span> <span class=\"n\">PhishNetAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PhishNetAPI</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"mi\">80</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">query_shows</span><span class=\"p\">(</span><span class=\"n\">year</span><span class=\"o\">=</span><span class=\"mi\">1997</span><span class=\"p\">,</span> <span class=\"n\">month</span><span class=\"o\">=</span><span class=\"mi\">11</span><span class=\"p\">,</span> <span class=\"n\">day</span><span class=\"o\">=</span><span class=\"mi\">30</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'response'</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"s1\">'showid'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">response</span><span class=\"p\">[</span><span class=\"s1\">'response'</span><span class=\"p\">][</span><span class=\"s1\">'data'</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'showid'</span><span class=\"p\">]</span>\n<span class=\"mi\">1252691618</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">update_show_attendance</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span> <span class=\"n\">showid</span><span class=\"o\">=</span><span class=\"mi\">1252691618</span><span class=\"p\">,</span> <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"s1\">'add'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s2\">\"error_code\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"error_message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Successfully added 1997-11-30\"</span><span class=\"p\">,</span> <span class=\"s2\">\"response\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"count\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s2\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"add\"</span><span class=\"p\">,</span> <span class=\"s2\">\"showdate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1997-11-30\"</span><span class=\"p\">,</span> <span class=\"s2\">\"showid\"</span><span class=\"p\">:</span> <span class=\"mi\">1252691618</span><span class=\"p\">,</span> <span class=\"s2\">\"shows_seen\"</span><span class=\"p\">:</span> <span class=\"s2\">\"140\"</span><span class=\"p\">}}}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">update_show_attendance</span><span class=\"p\">(</span><span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">uid</span><span class=\"p\">,</span> <span class=\"n\">showid</span><span class=\"o\">=</span><span class=\"mi\">1252691618</span><span class=\"p\">,</span> <span class=\"n\">update</span><span class=\"o\">=</span><span class=\"s1\">'remove'</span><span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"s2\">\"error_code\"</span><span class=\"p\">:</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"s2\">\"error_message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Successfully removed 1997-11-30\"</span><span class=\"p\">,</span> <span class=\"s2\">\"response\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"count\"</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"s2\">\"data\"</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s2\">\"action\"</span><span class=\"p\">:</span> <span class=\"s2\">\"remove\"</span><span class=\"p\">,</span> <span class=\"s2\">\"showdate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1997-11-30\"</span><span class=\"p\">,</span> <span class=\"s2\">\"showid\"</span><span class=\"p\">:</span> <span class=\"mi\">1252691618</span><span class=\"p\">,</span> <span class=\"s2\">\"shows_seen\"</span><span class=\"p\">:</span> <span class=\"s2\">\"139\"</span><span class=\"p\">}}}</span>\n</pre>\n<h3>authorize</h3>\n<pre><span class=\"n\">PhishNetAPI</span><span class=\"o\">.</span><span class=\"n\">authorize</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">uid</span><span class=\"p\">,</span> <span class=\"n\">private_salt</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n</pre>\n<p>Authorize the current instance to be able to make privileged API calls on behalf of a selected user.\nIn order to use this method, The phish.net registered user must have gone to\n<a href=\"https://phish.net/authorize?appid=X&amp;uid=Y\" rel=\"nofollow\">https://phish.net/authorize?appid=X&amp;uid=Y</a> to authorize themselves with your app and allow you to get\nthier authkey via the authority/get endpoint.</p>\n<p>:param uid: The uid to authorize on behalf of.\n:param private_salt: The private_salt associated with the apikey. If None, will check\nenvironment variable (set either via the OS environment or .env file.)</p>\n\n          </div>"}, "last_serial": 6402349, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d3023644cf42a2e78916b8746469e6f2", "sha256": "9c5c89576de92b5980e1d4f6c413725148d3543db68a1d8b59d4959aaceba869"}, "downloads": -1, "filename": "phishnet_api_v3-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3023644cf42a2e78916b8746469e6f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 26315, "upload_time": "2020-01-06T13:44:55", "upload_time_iso_8601": "2020-01-06T13:44:55.069914Z", "url": "https://files.pythonhosted.org/packages/7c/c2/93fbe3c619781d2da4bc094f3dab9a37223c2ab5f10358240072a6251722/phishnet_api_v3-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e4d0e9d7997bf61c127bc721745f2f5", "sha256": "0300c37fe73f0798a6e8bdee85edc39fa2415eed3f523956dee2c64a6e16717f"}, "downloads": -1, "filename": "phishnet_api_v3-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8e4d0e9d7997bf61c127bc721745f2f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 27834, "upload_time": "2020-01-06T13:44:57", "upload_time_iso_8601": "2020-01-06T13:44:57.433020Z", "url": "https://files.pythonhosted.org/packages/cc/f1/e3b5c44738cae70d2c5c1a115cd6849b234a31d03c45489fa9b3a678241f/phishnet_api_v3-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d3023644cf42a2e78916b8746469e6f2", "sha256": "9c5c89576de92b5980e1d4f6c413725148d3543db68a1d8b59d4959aaceba869"}, "downloads": -1, "filename": "phishnet_api_v3-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d3023644cf42a2e78916b8746469e6f2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5,<4.0", "size": 26315, "upload_time": "2020-01-06T13:44:55", "upload_time_iso_8601": "2020-01-06T13:44:55.069914Z", "url": "https://files.pythonhosted.org/packages/7c/c2/93fbe3c619781d2da4bc094f3dab9a37223c2ab5f10358240072a6251722/phishnet_api_v3-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8e4d0e9d7997bf61c127bc721745f2f5", "sha256": "0300c37fe73f0798a6e8bdee85edc39fa2415eed3f523956dee2c64a6e16717f"}, "downloads": -1, "filename": "phishnet_api_v3-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8e4d0e9d7997bf61c127bc721745f2f5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5,<4.0", "size": 27834, "upload_time": "2020-01-06T13:44:57", "upload_time_iso_8601": "2020-01-06T13:44:57.433020Z", "url": "https://files.pythonhosted.org/packages/cc/f1/e3b5c44738cae70d2c5c1a115cd6849b234a31d03c45489fa9b3a678241f/phishnet_api_v3-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:55:30 2020"}