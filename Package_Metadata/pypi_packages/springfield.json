{"info": {"author": "Mike Thornton", "author_email": "six8@devdetails.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "===========\nSpringField\n===========\n\n.. image:: https://secure.travis-ci.org/plynth/springfield.png\n    :target: http://travis-ci.org/plynth/springfield\n    :alt: Build Status\n\nSpringField makes API data easy.\n\nSpringField makes it simple to model structured data. Once the data is\nmodeled, SpringField can parse API responses into easy to use Python objects\nand types. It can also generate the same structured data for making API\nrequest.\n\nSpringField is ideal for:\n\n- Restful JSON API data structures\n- Parsing CSV data structures from ``csv.DictReader``\n- Turning anything Python can parse into a ``dict`` or ``list`` into a\n  structured object\n\nThere is also a helper library for using SpringField with Mongo: `springfield-\nmongo <https://github.com/six8/springfield-mongo>`_\n\n\nQuickstart\n----------\n\nTo define an ``springfield.Entity``, subclass\n``springfield.Entity``. Define your attributes by specifying\n``fields``. This library provides the follow self-describing fields to\nstart with:\n\n- ``IntField``\n- ``FloatField``\n- ``BooleanField``\n- ``StringField``\n- ``BytesField``\n- ``DateTimeField``\n- ``EmailField``\n- ``UrlField``\n- ``EntityField``\n- ``CollectionField``\n\n\nA quick example:\n\n\n::\n\n    #!/usr/bin/env python\n    from springfield import Entity, fields\n    from springfield.timeutil import utcnow\n\n\n    class Bookmark(Entity):\n        uri = fields.UrlField(doc='The bookmark uri.')\n        verified = fields.BooleanField(doc='Whether or not this bookmark URI has been verified to exist.')\n        added = fields.DateTimeField()\n\n\n    class User(Entity):\n        id = fields.IntField(doc='Auto-incremented database id.')\n        email = fields.EmailField(doc='The user\\'s email address.')\n        bookmarks = fields.CollectionField(fields.EntityField(Bookmark))\n        created = fields.DateTimeField()\n\n\n    if __name__ == '__main__':\n        user = User()\n        user.id = 5\n        user.email = 'foobar@example.com'\n        user.bookmarks = [\n            {'uri': 'https://github.com'},\n            {'uri': 'ftp://google.com', 'verified': True}\n        ]\n        user.created = utcnow()\n        data = user.to_json()\n        # `data` is suitable to return in something like a JSON API.\n        print data\n\n        # Similarly, `data` can be adapted from a JSON API request body.\n        user = User.from_json(data)\n        print user.email\n        print user.created\n        print user.bookmarks\n\n\nWill print (the json was prettified to protect the innocent):\n\n::\n\n    {\n        \"bookmarks\":[\n            {\n                \"uri\":\"https://github.com\"\n            },\n            {\n                \"uri\":\"ftp://google.com\",\n                \"verified\":true\n            }\n        ],\n        \"created\":\"2017-01-25T20:25:54Z\",\n        \"email\":\"foobar@example.com\",\n        \"id\":5\n    }\n    foobar@example.com\n    2017-01-25 20:47:37+00:00\n    [<Bookmark {uri: https://github.com}>, <Bookmark {verified: True, uri: ftp://google.com}>]\n\n\nNotice a few things:\n\n- Not every field is required for an entity. This is useful for doing sparse\n  updates on an API.\n- SpringField will adapt types in a non-destructive way.\n- You can also create entities by adapting JSON, which is really handy at API\n  boundaries.\n\n\nField Validation\n----------------\n\nSpringField does field validation when constructing entities, according to the\ntypes defined by the fields on that entity. For example:\n\n..\n    >>> from springfield import Entity, fields\n    >>>\n    >>> class Foo(Entity):\n    ...     bar = fields.IntField()\n    ...\n    >>> x = Foo()\n    >>> x.bar = 'baz'\n    Traceback (most recent call last):\n      File \"<stdin>\", line 1, in <module>\n      File \"/Users/jongartman/dev/personal/springfield/src/springfield/entity.py\", line 201, in __setattr__\n        object.__setattr__(self, name, value)\n      File \"/Users/jongartman/dev/personal/springfield/src/springfield/fields.py\", line 40, in __set__\n        new_value = self.field.set(instance, self.name, value)\n      File \"/Users/jongartman/dev/personal/springfield/src/springfield/fields.py\", line 87, in set\n        instance.__values__[name] = self.adapt(value)\n      File \"/Users/jongartman/dev/personal/springfield/src/springfield/fields.py\", line 199, in adapt\n        return int(value)\n    ValueError: invalid literal for int() with base 10: 'baz'\n\n\nYou can define more complex field adaptation behavior by subclassing\n``springfield.fields.Field`` and implementing your own fields. See\nthe documentation on ``springfield.fields.Field`` for more\ninformation.\n\nSimilar Projects\n----------------\n\n* `schematics (formerly dictshield) <https://github.com/j2labs/schematics>`_\n* `attrs <https://github.com/hynek/attrs>`_\n\n\nBuilding Documentation\n----------------------\n\nTo build documentation, first install the requirements:\n\n..\n    cd docs/\n    pip install -r requirements.txt\n\n\nNow you can build requirements with ``make``:\n\n..\n    make html\n\n\nRunning Tests\n-------------\n\nTo run tests, first install the test requirements:\n\n    pip install -r test_requirements.txt\n\n\nTests can be run with ./src/tests/runtests.py:\n\n    python src/tests/runtests.py\n\n---------\nChangelog\n---------\n\n0.8.0\n=====\n\n* Added support for Python 3.6+\n* Dropped support for Python <2.7\n\n0.7.17\n======\n\n* Fix packages for pytest plugin\n\n0.7.16\n======\n\n* Allow EntityFields to use dotted-name class strings. This was done to allow circular references in entities that may refer to one another.\n* Added BytesField\n\n0.7.15\n======\n\nBug Fixes\n---------\n\n* Allow empty values for URL\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "http://github.com/plynth/springfield", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://springfield.readthedocs.org", "keywords": "orm", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "springfield", "package_url": "https://pypi.org/project/springfield/", "platform": "", "project_url": "https://pypi.org/project/springfield/", "project_urls": {"Download": "http://github.com/plynth/springfield", "Homepage": "http://springfield.readthedocs.org"}, "release_url": "https://pypi.org/project/springfield/0.8.0/", "requires_dist": ["anticipate (>=0.9.1)", "future (==0.17.1)"], "requires_python": "", "summary": "A backend agnostic data modeling entity library", "version": "0.8.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://travis-ci.org/plynth/springfield\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/04afbc50f4ae06e30ea53eaa9011a6ed4347a8d8/68747470733a2f2f7365637572652e7472617669732d63692e6f72672f706c796e74682f737072696e676669656c642e706e67\"></a>\n<p>SpringField makes API data easy.</p>\n<p>SpringField makes it simple to model structured data. Once the data is\nmodeled, SpringField can parse API responses into easy to use Python objects\nand types. It can also generate the same structured data for making API\nrequest.</p>\n<p>SpringField is ideal for:</p>\n<ul>\n<li>Restful JSON API data structures</li>\n<li>Parsing CSV data structures from <tt>csv.DictReader</tt></li>\n<li>Turning anything Python can parse into a <tt>dict</tt> or <tt>list</tt> into a\nstructured object</li>\n</ul>\n<p>There is also a helper library for using SpringField with Mongo: <a href=\"https://github.com/six8/springfield-mongo\" rel=\"nofollow\">springfield-\nmongo</a></p>\n<div id=\"quickstart\">\n<h2>Quickstart</h2>\n<p>To define an <tt>springfield.Entity</tt>, subclass\n<tt>springfield.Entity</tt>. Define your attributes by specifying\n<tt>fields</tt>. This library provides the follow self-describing fields to\nstart with:</p>\n<ul>\n<li><tt>IntField</tt></li>\n<li><tt>FloatField</tt></li>\n<li><tt>BooleanField</tt></li>\n<li><tt>StringField</tt></li>\n<li><tt>BytesField</tt></li>\n<li><tt>DateTimeField</tt></li>\n<li><tt>EmailField</tt></li>\n<li><tt>UrlField</tt></li>\n<li><tt>EntityField</tt></li>\n<li><tt>CollectionField</tt></li>\n</ul>\n<p>A quick example:</p>\n<pre>#!/usr/bin/env python\nfrom springfield import Entity, fields\nfrom springfield.timeutil import utcnow\n\n\nclass Bookmark(Entity):\n    uri = fields.UrlField(doc='The bookmark uri.')\n    verified = fields.BooleanField(doc='Whether or not this bookmark URI has been verified to exist.')\n    added = fields.DateTimeField()\n\n\nclass User(Entity):\n    id = fields.IntField(doc='Auto-incremented database id.')\n    email = fields.EmailField(doc='The user\\'s email address.')\n    bookmarks = fields.CollectionField(fields.EntityField(Bookmark))\n    created = fields.DateTimeField()\n\n\nif __name__ == '__main__':\n    user = User()\n    user.id = 5\n    user.email = 'foobar@example.com'\n    user.bookmarks = [\n        {'uri': 'https://github.com'},\n        {'uri': 'ftp://google.com', 'verified': True}\n    ]\n    user.created = utcnow()\n    data = user.to_json()\n    # `data` is suitable to return in something like a JSON API.\n    print data\n\n    # Similarly, `data` can be adapted from a JSON API request body.\n    user = User.from_json(data)\n    print user.email\n    print user.created\n    print user.bookmarks\n</pre>\n<p>Will print (the json was prettified to protect the innocent):</p>\n<pre>{\n    \"bookmarks\":[\n        {\n            \"uri\":\"https://github.com\"\n        },\n        {\n            \"uri\":\"ftp://google.com\",\n            \"verified\":true\n        }\n    ],\n    \"created\":\"2017-01-25T20:25:54Z\",\n    \"email\":\"foobar@example.com\",\n    \"id\":5\n}\nfoobar@example.com\n2017-01-25 20:47:37+00:00\n[&lt;Bookmark {uri: https://github.com}&gt;, &lt;Bookmark {verified: True, uri: ftp://google.com}&gt;]\n</pre>\n<p>Notice a few things:</p>\n<ul>\n<li>Not every field is required for an entity. This is useful for doing sparse\nupdates on an API.</li>\n<li>SpringField will adapt types in a non-destructive way.</li>\n<li>You can also create entities by adapting JSON, which is really handy at API\nboundaries.</li>\n</ul>\n</div>\n<div id=\"field-validation\">\n<h2>Field Validation</h2>\n<p>SpringField does field validation when constructing entities, according to the\ntypes defined by the fields on that entity. For example:</p>\n<p>You can define more complex field adaptation behavior by subclassing\n<tt>springfield.fields.Field</tt> and implementing your own fields. See\nthe documentation on <tt>springfield.fields.Field</tt> for more\ninformation.</p>\n</div>\n<div id=\"similar-projects\">\n<h2>Similar Projects</h2>\n<ul>\n<li><a href=\"https://github.com/j2labs/schematics\" rel=\"nofollow\">schematics (formerly dictshield)</a></li>\n<li><a href=\"https://github.com/hynek/attrs\" rel=\"nofollow\">attrs</a></li>\n</ul>\n</div>\n<div id=\"building-documentation\">\n<h2>Building Documentation</h2>\n<p>To build documentation, first install the requirements:</p>\n<p>Now you can build requirements with <tt>make</tt>:</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>To run tests, first install the test requirements:</p>\n<blockquote>\npip install -r test_requirements.txt</blockquote>\n<p>Tests can be run with ./src/tests/runtests.py:</p>\n<blockquote>\npython src/tests/runtests.py</blockquote>\n<div id=\"changelog\">\n<h3>Changelog</h3>\n<div id=\"id1\">\n<h4>0.8.0</h4>\n<ul>\n<li>Added support for Python 3.6+</li>\n<li>Dropped support for Python &lt;2.7</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h4>0.7.17</h4>\n<ul>\n<li>Fix packages for pytest plugin</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h4>0.7.16</h4>\n<ul>\n<li>Allow EntityFields to use dotted-name class strings. This was done to allow circular references in entities that may refer to one another.</li>\n<li>Added BytesField</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h4>0.7.15</h4>\n</div>\n</div>\n</div>\n<div id=\"bug-fixes\">\n<h2>Bug Fixes</h2>\n<ul>\n<li>Allow empty values for URL</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 5674328, "releases": {"0.7.10": [{"comment_text": "", "digests": {"md5": "d6c5cccc987cffdd028c62344ff7d3d0", "sha256": "55c9918cb6bb1a66c0ccc6e242843935745d04a46ec89a868b7508b201399f4f"}, "downloads": -1, "filename": "springfield-0.7.10.tar.gz", "has_sig": false, "md5_digest": "d6c5cccc987cffdd028c62344ff7d3d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16648, "upload_time": "2012-11-18T00:55:00", "upload_time_iso_8601": "2012-11-18T00:55:00.487861Z", "url": "https://files.pythonhosted.org/packages/65/1c/42b7d33c5c9699dbc3c3a8a19753f4b7a4b491175612789a09b3b1bd2589/springfield-0.7.10.tar.gz", "yanked": false}], "0.7.11": [{"comment_text": "", "digests": {"md5": "63a453231c117e39ae124e3bb3cf8501", "sha256": "6eeef3057fcff09db56e01cb7c80e75b29e1a16a7f8ee5ca7f92b51e1820acec"}, "downloads": -1, "filename": "springfield-0.7.11.tar.gz", "has_sig": false, "md5_digest": "63a453231c117e39ae124e3bb3cf8501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16722, "upload_time": "2012-11-18T22:26:50", "upload_time_iso_8601": "2012-11-18T22:26:50.204383Z", "url": "https://files.pythonhosted.org/packages/4b/4b/c7ee5a86258ed6a8b0affe8f8dbd391a1427787b3338088b3556d937e3eb/springfield-0.7.11.tar.gz", "yanked": false}], "0.7.12": [{"comment_text": "", "digests": {"md5": "9a1d2e2bc3bd27dfd54bce95b92b6b3e", "sha256": "dfdd0bb6cfc0bd591236ed96031d0d9bcc2d3774d50675b2646b9dffb10c2963"}, "downloads": -1, "filename": "springfield-0.7.12.tar.gz", "has_sig": false, "md5_digest": "9a1d2e2bc3bd27dfd54bce95b92b6b3e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16864, "upload_time": "2014-02-22T06:00:48", "upload_time_iso_8601": "2014-02-22T06:00:48.674069Z", "url": "https://files.pythonhosted.org/packages/d7/f1/df3dd3fc785b14628467a7f19f7320ba8325555431a3c5dff4f39e8cece3/springfield-0.7.12.tar.gz", "yanked": false}], "0.7.13": [{"comment_text": "", "digests": {"md5": "180cd6c6fc97d60f6d061c2d1f0d649c", "sha256": "e51e72a49b060c6a2888a331af825a8a75ada73c7f3b607fee6c918b1249e853"}, "downloads": -1, "filename": "springfield-0.7.13.tar.gz", "has_sig": false, "md5_digest": "180cd6c6fc97d60f6d061c2d1f0d649c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15786, "upload_time": "2015-11-03T23:11:08", "upload_time_iso_8601": "2015-11-03T23:11:08.288728Z", "url": "https://files.pythonhosted.org/packages/da/d4/292c4d96c5d4fdf2abad70a3a42048764202106c79b61981b099400836ad/springfield-0.7.13.tar.gz", "yanked": false}], "0.7.14": [{"comment_text": "", "digests": {"md5": "1779b5226eaa8037f85e3de4f615a7b1", "sha256": "70a90d36b1d19c68e6099d94ecbe637ab36362231463146fa0e4c75a6acca602"}, "downloads": -1, "filename": "springfield-0.7.14.tar.gz", "has_sig": false, "md5_digest": "1779b5226eaa8037f85e3de4f615a7b1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17837, "upload_time": "2016-02-17T00:10:12", "upload_time_iso_8601": "2016-02-17T00:10:12.022390Z", "url": "https://files.pythonhosted.org/packages/f6/f2/2949b783514a125e0073d8e10848939b3406795534abdc0eac22c7930955/springfield-0.7.14.tar.gz", "yanked": false}], "0.7.15": [{"comment_text": "", "digests": {"md5": "faf84b69019954bca2b22c79b357c745", "sha256": "9d455cc0bd4b7d337cfe74c3f902f4be3a004806086b6ab2664e081f61f38daa"}, "downloads": -1, "filename": "springfield-0.7.15.tar.gz", "has_sig": false, "md5_digest": "faf84b69019954bca2b22c79b357c745", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17849, "upload_time": "2016-02-17T00:15:35", "upload_time_iso_8601": "2016-02-17T00:15:35.988019Z", "url": "https://files.pythonhosted.org/packages/7f/b2/93e972a45c03e45fc57b398fc5096831e484b16976ecc241f58bfaa91297/springfield-0.7.15.tar.gz", "yanked": false}], "0.7.16": [{"comment_text": "", "digests": {"md5": "b2ef4ac17e3bc20ba454ab1a3e6ec3c9", "sha256": "c766394cb4e2776ffef5ee0eec54e040fb0653a5d7c757865e7a935185110e4a"}, "downloads": -1, "filename": "springfield-0.7.16.tar.gz", "has_sig": false, "md5_digest": "b2ef4ac17e3bc20ba454ab1a3e6ec3c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21069, "upload_time": "2017-04-19T17:18:40", "upload_time_iso_8601": "2017-04-19T17:18:40.363464Z", "url": "https://files.pythonhosted.org/packages/0e/ad/0f12dd7dd66e18303e8e69ab5498a9a938d1c94c2aa2fe0ff4388f03f36f/springfield-0.7.16.tar.gz", "yanked": false}], "0.7.17": [{"comment_text": "", "digests": {"md5": "09e669be5bae2b87499a1484690d2602", "sha256": "cedf917657837f74ab3dfc50e4162aca0c53e65c8ebbdea27ed8af053cf4f848"}, "downloads": -1, "filename": "springfield-0.7.17.tar.gz", "has_sig": false, "md5_digest": "09e669be5bae2b87499a1484690d2602", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21098, "upload_time": "2017-05-03T17:07:02", "upload_time_iso_8601": "2017-05-03T17:07:02.504781Z", "url": "https://files.pythonhosted.org/packages/e0/f5/56d5eb5c9fbfbfd719184fb4f9a24bd7e342ef93c90368b4d23c94de5174/springfield-0.7.17.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "871a85c4818e3d3a5f90621e498adceb", "sha256": "5233c4256fdf46dbfbe54b53c00b3aa26d11f830f753da3f7833280d2ea55d8c"}, "downloads": -1, "filename": "springfield-0.7.9.tar.gz", "has_sig": false, "md5_digest": "871a85c4818e3d3a5f90621e498adceb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16330, "upload_time": "2012-11-17T18:07:13", "upload_time_iso_8601": "2012-11-17T18:07:13.243836Z", "url": "https://files.pythonhosted.org/packages/a7/63/7f482c1b79fdc66e34799e26f1952130de412ee8fcb79c1eabdc83fbdc79/springfield-0.7.9.tar.gz", "yanked": false}], "0.8.0": [{"comment_text": "", "digests": {"md5": "1fecfc72640036e62a8202166023f6d3", "sha256": "eb86c1572abba895fa1e0ca9c4e55f2a5f046e11ba32ade96c6972e704be93a8"}, "downloads": -1, "filename": "springfield-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1fecfc72640036e62a8202166023f6d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16344, "upload_time": "2019-05-14T16:46:20", "upload_time_iso_8601": "2019-05-14T16:46:20.930896Z", "url": "https://files.pythonhosted.org/packages/72/ee/71589442bdf86d45e42b556f1f5fa696cfd8b1aa24890694c6292250d412/springfield-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "256db674422ce32f6603ff8ba29d67c5", "sha256": "157e98d42776be2e6075f9bb23690d5f8ed344c16a83e44ba528c59ae88ab87d"}, "downloads": -1, "filename": "springfield-0.8.0.tar.gz", "has_sig": false, "md5_digest": "256db674422ce32f6603ff8ba29d67c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25072, "upload_time": "2019-05-21T21:02:18", "upload_time_iso_8601": "2019-05-21T21:02:18.658961Z", "url": "https://files.pythonhosted.org/packages/ae/fc/0f5cd20ffe9002e45796edd47963824045a67f02c95f8daf100193d63b65/springfield-0.8.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1fecfc72640036e62a8202166023f6d3", "sha256": "eb86c1572abba895fa1e0ca9c4e55f2a5f046e11ba32ade96c6972e704be93a8"}, "downloads": -1, "filename": "springfield-0.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1fecfc72640036e62a8202166023f6d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16344, "upload_time": "2019-05-14T16:46:20", "upload_time_iso_8601": "2019-05-14T16:46:20.930896Z", "url": "https://files.pythonhosted.org/packages/72/ee/71589442bdf86d45e42b556f1f5fa696cfd8b1aa24890694c6292250d412/springfield-0.8.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "256db674422ce32f6603ff8ba29d67c5", "sha256": "157e98d42776be2e6075f9bb23690d5f8ed344c16a83e44ba528c59ae88ab87d"}, "downloads": -1, "filename": "springfield-0.8.0.tar.gz", "has_sig": false, "md5_digest": "256db674422ce32f6603ff8ba29d67c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25072, "upload_time": "2019-05-21T21:02:18", "upload_time_iso_8601": "2019-05-21T21:02:18.658961Z", "url": "https://files.pythonhosted.org/packages/ae/fc/0f5cd20ffe9002e45796edd47963824045a67f02c95f8daf100193d63b65/springfield-0.8.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:23 2020"}