{"info": {"author": "Dario Varotto", "author_email": "dario.varotto@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "sing\n====\n\n|pypi| |build| |Documentation Status| |Updates|\n\nEnsure a single process is running. Using lockfile and process checking.\n\nWhy?\n----\n\nSometime you want that a process runs at most once, for example a\nscheduled cron job that should always finish before starting again. That\nwas my case.\n\nInstall\n-------\n\n.. code:: bash\n\n    pip install sing\n\nExamples\n--------\n\nNormally, at the beginning of the file, you may want to declare, that\nyou want to be the single instance:\n\n.. code:: python\n\n    from sing import single\n\n    assert single()\n\nThat's it, for most of the use case, you don't need anything else. The\nassert will fail if the lock is already taken.\n\nThis uses a pid lockfile, in a temporary folder to ensure this. More on\nthat in ``sing.py``\n\nYou may want to grant all the lock from the same process, in that case\nyou'll need.\n\n.. code:: python\n\n    assert single(allow_all_from_this_process=True)\n\nYou may have different subsections, and you want to have different\nlocks, even if you're on the same process, both of them will return\nTrue:\n\n.. code:: python\n\n    single(flavor='first')\n    single(flavor='second')\n\nFinally, if a PID file is there, but the process died, you may want to\ngrant the lock. Use the ``ensure_process_running`` to check it.\n\nNotes\n-----\n\n-  Free software: MIT license\n-  Documentation: https://python-sing.readthedocs.io.\n\nCredits\n-------\n\nThis package was created with\n`Cookiecutter <https://github.com/audreyr/cookiecutter>`__ and the\n`audreyr/cookiecutter-pypackage <https://github.com/audreyr/cookiecutter-pypackage>`__\nproject template.\n\nLot of inspiration comes from\n`pycontribs/tendo <https://github.com/pycontribs/tendo>`__ that serves\nthe same purpose. I needed PID file, and allow same process grants, so I\nmade this package.\n\n.. |pypi| image:: https://img.shields.io/pypi/v/sing.svg\n   :target: https://pypi.python.org/pypi/sing\n.. |build| image:: https://img.shields.io/travis/dariosky/python-sing.svg\n   :target: https://travis-ci.org/dariosky/python-sing\n.. |Documentation Status| image:: https://readthedocs.org/projects/python-sing/badge/?version=latest\n   :target: https://python-sing.readthedocs.io/en/latest/?badge=latest\n.. |Updates| image:: https://pyup.io/repos/github/dariosky/python-sing/shield.svg\n   :target: https://pyup.io/repos/github/dariosky/sing/\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-02-25)\n------------------\n\n* First release on PyPI.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dariosky/python-sing", "keywords": "sing", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "sing", "package_url": "https://pypi.org/project/sing/", "platform": "", "project_url": "https://pypi.org/project/sing/", "project_urls": {"Homepage": "https://github.com/dariosky/python-sing"}, "release_url": "https://pypi.org/project/sing/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "Ensure a single process is running. Using lockfile and process checking.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/sing\" rel=\"nofollow\"><img alt=\"pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/804396bc37ed7a1e56bd19f304e74c47870f64dd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f73696e672e737667\"></a> <a href=\"https://travis-ci.org/dariosky/python-sing\" rel=\"nofollow\"><img alt=\"build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cf11cd280eddd1511fcb6f13d06b7803342a950d/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f646172696f736b792f707974686f6e2d73696e672e737667\"></a> <a href=\"https://python-sing.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c259d0e0a7cc6cce817304bd2aca170a14747a0a/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f707974686f6e2d73696e672f62616467652f3f76657273696f6e3d6c6174657374\"></a> <a href=\"https://pyup.io/repos/github/dariosky/sing/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0c93be77f8c8c36c894b151445eed8a4e4dbba29/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f646172696f736b792f707974686f6e2d73696e672f736869656c642e737667\"></a></p>\n<p>Ensure a single process is running. Using lockfile and process checking.</p>\n<div id=\"why\">\n<h2>Why?</h2>\n<p>Sometime you want that a process runs at most once, for example a\nscheduled cron job that should always finish before starting again. That\nwas my case.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<pre>pip install sing\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Normally, at the beginning of the file, you may want to declare, that\nyou want to be the single instance:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sing</span> <span class=\"kn\">import</span> <span class=\"n\">single</span>\n\n<span class=\"k\">assert</span> <span class=\"n\">single</span><span class=\"p\">()</span>\n</pre>\n<p>That\u2019s it, for most of the use case, you don\u2019t need anything else. The\nassert will fail if the lock is already taken.</p>\n<p>This uses a pid lockfile, in a temporary folder to ensure this. More on\nthat in <tt>sing.py</tt></p>\n<p>You may want to grant all the lock from the same process, in that case\nyou\u2019ll need.</p>\n<pre><span class=\"k\">assert</span> <span class=\"n\">single</span><span class=\"p\">(</span><span class=\"n\">allow_all_from_this_process</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>You may have different subsections, and you want to have different\nlocks, even if you\u2019re on the same process, both of them will return\nTrue:</p>\n<pre><span class=\"n\">single</span><span class=\"p\">(</span><span class=\"n\">flavor</span><span class=\"o\">=</span><span class=\"s1\">'first'</span><span class=\"p\">)</span>\n<span class=\"n\">single</span><span class=\"p\">(</span><span class=\"n\">flavor</span><span class=\"o\">=</span><span class=\"s1\">'second'</span><span class=\"p\">)</span>\n</pre>\n<p>Finally, if a PID file is there, but the process died, you may want to\ngrant the lock. Use the <tt>ensure_process_running</tt> to check it.</p>\n</div>\n<div id=\"notes\">\n<h2>Notes</h2>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://python-sing.readthedocs.io\" rel=\"nofollow\">https://python-sing.readthedocs.io</a>.</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This package was created with\n<a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the\n<a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a>\nproject template.</p>\n<p>Lot of inspiration comes from\n<a href=\"https://github.com/pycontribs/tendo\" rel=\"nofollow\">pycontribs/tendo</a> that serves\nthe same purpose. I needed PID file, and allow same process grants, so I\nmade this package.</p>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2>0.1.0 (2018-02-25)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3617143, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4e7ec1ccbeaf1db995d096bb15f443d1", "sha256": "f0ea2468909afeae1d39075547efedf2c4d1c297ea5f115170efc5c9edff5a0e"}, "downloads": -1, "filename": "sing-0.1.0.tar.gz", "has_sig": false, "md5_digest": "4e7ec1ccbeaf1db995d096bb15f443d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8918, "upload_time": "2018-02-25T13:35:38", "upload_time_iso_8601": "2018-02-25T13:35:38.540198Z", "url": "https://files.pythonhosted.org/packages/cd/7d/d13e2784e2dd0e3b575749db8d453161d1f8afac0b794e4ee828caaba682/sing-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "b7118e54b2baf124476e650c87a11184", "sha256": "9367f85cbe324cba3f0abadf7c1fe647d738d83ee98746494d7902181117fdb1"}, "downloads": -1, "filename": "sing-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b7118e54b2baf124476e650c87a11184", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9579, "upload_time": "2018-02-25T14:03:30", "upload_time_iso_8601": "2018-02-25T14:03:30.687070Z", "url": "https://files.pythonhosted.org/packages/ca/a7/a0ab361ccb874d09ecbf45c250f4c0705fe745e94a7fcd4da901915189c4/sing-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "cbc1b658b2f1b583ecfcf229266fe46f", "sha256": "229b06a52d7b962736cf2aa933a23e90a513b2dbac37773996cecf3a19899ddb"}, "downloads": -1, "filename": "sing-0.1.2.tar.gz", "has_sig": false, "md5_digest": "cbc1b658b2f1b583ecfcf229266fe46f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9586, "upload_time": "2018-02-25T14:20:44", "upload_time_iso_8601": "2018-02-25T14:20:44.386143Z", "url": "https://files.pythonhosted.org/packages/74/ad/5d088ce83efebfcf5623b1c059cd53aceb40c9347e47646abe64ec0c3750/sing-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fbdabe7b328709c8107ebb37e166b6cf", "sha256": "639b07de797130db1268236b5fbe311e80f227e3d09eb539925b6515ada2d568"}, "downloads": -1, "filename": "sing-0.1.3.tar.gz", "has_sig": false, "md5_digest": "fbdabe7b328709c8107ebb37e166b6cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9643, "upload_time": "2018-02-26T10:01:35", "upload_time_iso_8601": "2018-02-26T10:01:35.647858Z", "url": "https://files.pythonhosted.org/packages/80/55/1f6fc060bbc4bed8b9b50742ce6621a0e68c642e02aff75b40c1cea1f952/sing-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "9874be432fba8b19d4124c7e3b999322", "sha256": "c701ce0fe97d25dfd3f365b19dac5ab053bb459ca518e4be1c6da622124a6029"}, "downloads": -1, "filename": "sing-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9874be432fba8b19d4124c7e3b999322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9904, "upload_time": "2018-02-26T12:55:39", "upload_time_iso_8601": "2018-02-26T12:55:39.222152Z", "url": "https://files.pythonhosted.org/packages/3b/8d/02dc7737292ef97d2330e30f6f60644b898d0d9a4416b69133baad3b8c72/sing-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9874be432fba8b19d4124c7e3b999322", "sha256": "c701ce0fe97d25dfd3f365b19dac5ab053bb459ca518e4be1c6da622124a6029"}, "downloads": -1, "filename": "sing-0.1.4.tar.gz", "has_sig": false, "md5_digest": "9874be432fba8b19d4124c7e3b999322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9904, "upload_time": "2018-02-26T12:55:39", "upload_time_iso_8601": "2018-02-26T12:55:39.222152Z", "url": "https://files.pythonhosted.org/packages/3b/8d/02dc7737292ef97d2330e30f6f60644b898d0d9a4416b69133baad3b8c72/sing-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:32 2020"}