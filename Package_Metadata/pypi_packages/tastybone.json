{"info": {"author": "Brandon R. Stoner", "author_email": "monokrome@limpidtech.com", "bugtrack_url": null, "classifiers": [], "description": "TastyBone\n=========\n\nExpose TastyPie to your client. Nicely.\n\nDependencies\n------------\n\nBefore including this script, make sure that you have included the following\nscripts in your document. Without them, this thing is going to misbehave like\nyou wouldn't believe!\n\n- jQuery\n- underscore.js\n- backbone.js\n\nNote that I did not introduce any of these dependencies (aside from the obvious\nbackbone.js dependency). These are all dependencies required by any site using\nbackbone.js to grab data over AJAX - which is exactly what we need for\nTastyBone.\n\nHow does it work?\n-----------------\n\nTastyBone allows you to easily connect backbone.js to your Django TastyPie\nAPIs. It can understand all of your resources with a single line - which\nlooks like this:\n\n    bone = new TastyBone.Bone('/api/v1/');\n\nThis will connect to the current origin at the URL /api/v1, and it will\nuse the root URL to find all endpoints which exist on your site. After\nthese endpoints are found, the bone object will fire a ready event.\n\nSo, if you had exposed a User resource at /api/v1/user/ - you could get a\ncollection of user models as such:\n\n\tbone = new TastyBone.Bone('/api/v1/');\n\n\tbone.on('ready', function get_collections() {\n\t\tusers = new bone.collections.UserCollection();\n\n\t\tusers.fetch({\n\t\t\t'success': function get_users(response) {\n\t\t\t\t// Hooray! We found our users.\n\t\t\t\tconsole.dir(response);\n\t\t\t},\n\t\t\t'error': function get_users_error(response) {\n\t\t\t\tconsole.log('Oh, no! An error!');\n\t\t\t}\n\t\t});\n\t};\n\nDjango support\n--------------\n\nTastyBone is already in pip, and provides a super simple app that will append\ntastybone.js and tastybone.min.js to your static files. Simply install\ntastybone from pypi with your favorite frontend. Here's how it looks with pip:\n\n\tpip install tastybone\n\nAfter this is done installing, append the tastybone module to your\nINSTALLED_APPS setting:\n\n\tINSTALLED_APPS = (\n\t\t# All of your other awesomely fancy apps here.\n\t\t'tastybone',\n\t)\n\nNow, (after having run `manage.py collectstatic` if necessary) you should be\nable to access *tastybone.js* or *tastybone.min.js* under your STATIC_URL. For\ninstance, if STATIC_URL is equal to '/static/' then you'd find the script here:\n\n\t<script src=\"/static/scripts/tastypie.min.js\"></script>\n\nThings that still need done\n---------------------------\n\n- Proper authentication/authorization support for TastyPie's built-in types.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/LimpidTech/TastyBone", "keywords": "django tastypie", "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "tastybone", "package_url": "https://pypi.org/project/tastybone/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tastybone/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/LimpidTech/TastyBone"}, "release_url": "https://pypi.org/project/tastybone/0.0.4/", "requires_dist": null, "requires_python": null, "summary": "Expose TastyPie to your client. Nicely.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            TastyBone<br>=========<br><br>Expose TastyPie to your client. Nicely.<br><br>Dependencies<br>------------<br><br>Before including this script, make sure that you have included the following<br>scripts in your document. Without them, this thing is going to misbehave like<br>you wouldn't believe!<br><br>- jQuery<br>- underscore.js<br>- backbone.js<br><br>Note that I did not introduce any of these dependencies (aside from the obvious<br>backbone.js dependency). These are all dependencies required by any site using<br>backbone.js to grab data over AJAX - which is exactly what we need for<br>TastyBone.<br><br>How does it work?<br>-----------------<br><br>TastyBone allows you to easily connect backbone.js to your Django TastyPie<br>APIs. It can understand all of your resources with a single line - which<br>looks like this:<br><br>    bone = new TastyBone.Bone('/api/v1/');<br><br>This will connect to the current origin at the URL /api/v1, and it will<br>use the root URL to find all endpoints which exist on your site. After<br>these endpoints are found, the bone object will fire a ready event.<br><br>So, if you had exposed a User resource at /api/v1/user/ - you could get a<br>collection of user models as such:<br><br>\tbone = new TastyBone.Bone('/api/v1/');<br><br>\tbone.on('ready', function get_collections() {<br>\t\tusers = new bone.collections.UserCollection();<br><br>\t\tusers.fetch({<br>\t\t\t'success': function get_users(response) {<br>\t\t\t\t// Hooray! We found our users.<br>\t\t\t\tconsole.dir(response);<br>\t\t\t},<br>\t\t\t'error': function get_users_error(response) {<br>\t\t\t\tconsole.log('Oh, no! An error!');<br>\t\t\t}<br>\t\t});<br>\t};<br><br>Django support<br>--------------<br><br>TastyBone is already in pip, and provides a super simple app that will append<br>tastybone.js and tastybone.min.js to your static files. Simply install<br>tastybone from pypi with your favorite frontend. Here's how it looks with pip:<br><br>\tpip install tastybone<br><br>After this is done installing, append the tastybone module to your<br>INSTALLED_APPS setting:<br><br>\tINSTALLED_APPS = (<br>\t\t# All of your other awesomely fancy apps here.<br>\t\t'tastybone',<br>\t)<br><br>Now, (after having run `manage.py collectstatic` if necessary) you should be<br>able to access *tastybone.js* or *tastybone.min.js* under your STATIC_URL. For<br>instance, if STATIC_URL is equal to '/static/' then you'd find the script here:<br><br>\t&lt;script src=\"/static/scripts/tastypie.min.js\"&gt;&lt;/script&gt;<br><br>Things that still need done<br>---------------------------<br><br>- Proper authentication/authorization support for TastyPie's built-in types.\n          </div>"}, "last_serial": 800374, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "6226b64317e350c0cec7d48b8c48af32", "sha256": "293aab2d8d9adf1a83ac74db7d4c5e52f0d3c5fa30b612fd9c88470fa9dc6369"}, "downloads": -1, "filename": "tastybone-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6226b64317e350c0cec7d48b8c48af32", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3871, "upload_time": "2012-06-21T13:25:53", "upload_time_iso_8601": "2012-06-21T13:25:53.138022Z", "url": "https://files.pythonhosted.org/packages/e0/75/56091f0f1910baa56d8978e8c6fba4b7ee06592fa081ab40eabdc984b447/tastybone-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "e7387a3387d34d1a46783c6a90d91657", "sha256": "169ae256ce8a9fab267afb72f24456e11cfb25f5fc5a31bc4722b5e69bba26cf"}, "downloads": -1, "filename": "tastybone-0.0.2.tar.gz", "has_sig": false, "md5_digest": "e7387a3387d34d1a46783c6a90d91657", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4099, "upload_time": "2012-06-21T23:42:11", "upload_time_iso_8601": "2012-06-21T23:42:11.254979Z", "url": "https://files.pythonhosted.org/packages/94/85/94d1e98a6722ba26949333771df7edf103ee6fc5af68638c2663477757de/tastybone-0.0.2.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "3de6bef89c88fc36f10475fbc682e1af", "sha256": "9dd4143e89cb61d21dee3ca5b4eb0524644f1cf5823d02f36158d9cf316edf32"}, "downloads": -1, "filename": "tastybone-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3de6bef89c88fc36f10475fbc682e1af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5049, "upload_time": "2012-07-13T01:53:35", "upload_time_iso_8601": "2012-07-13T01:53:35.199815Z", "url": "https://files.pythonhosted.org/packages/48/e4/0f02c97d69e9953cb955b3a3680ea722b440981522c8691470688d123245/tastybone-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3de6bef89c88fc36f10475fbc682e1af", "sha256": "9dd4143e89cb61d21dee3ca5b4eb0524644f1cf5823d02f36158d9cf316edf32"}, "downloads": -1, "filename": "tastybone-0.0.4.tar.gz", "has_sig": false, "md5_digest": "3de6bef89c88fc36f10475fbc682e1af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5049, "upload_time": "2012-07-13T01:53:35", "upload_time_iso_8601": "2012-07-13T01:53:35.199815Z", "url": "https://files.pythonhosted.org/packages/48/e4/0f02c97d69e9953cb955b3a3680ea722b440981522c8691470688d123245/tastybone-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:41 2020"}