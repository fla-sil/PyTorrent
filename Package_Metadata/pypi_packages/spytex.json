{"info": {"author": "rrobby86", "author_email": "rrobby86@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "SPyTEx\n======\n\n_(this is still in early development, features will be added mostly according\nto internal needs, see planned features section at the end)_\n\n[![PyPI](https://img.shields.io/pypi/v/spytex)](https://pypi.org/project/spytex/)\n[![Build Status](https://travis-ci.org/rrobby86/spytex.svg?branch=master)](https://travis-ci.org/rrobby86/spytex)\n\n**SPyTEx** (_Simple Python Task Executor_) is a small library and CLI utility\nallowing to run arbitrary tasks defined in your Python code as ordinary\nfunctions and configured through simple but flexible JSON-based specifications.\n\nWarning\n-------\n\nArbitrary Python code can be run through SPyTEx, even malicious!\n**Never run SPyTEx on untrusted input files!**\n\nMotivation\n----------\n\nSPyTEx has been created for use in dynamic codebases which do not have one or\nfew well-defined and stable entry points, but contain a large amount of\ninterrelated functions and classes which can represent either single tasks by\nthemselves or be used as parts of larger tasks.\n\nThe goal of SPyTEx is to provide a single entry point from which users can run\nall these tasks, without the need to create a command line interface (CLI) for\neach of them. Once SPyTEx is deployed alongside with your codebase, e.g. in a\nPython package distribution or in a Docker container, you can use its CLI to\ncall arbitrary functions with arbitrary arguments, even if they were not\nplanned to be used as entry points. Function and arguments are specified in a\nJSON file, with a specific syntax allowing to create complex Python objects as\narguments.\n\nWhile simple Python scripts can be used to launch arbitrary functions inside a\ncodebase, SPyTEx allows to define tasks in form of JSON files which are a more\nstandard format and provide some short notations for functionality such as\nunpickling objects from local or remote files.\n\nInstallation\n------------\n\n```\npip install spytex\n```\n\nTask specification\n------------------\n\nA task is a call to a function (or any callable object). SPyTEx represents\ncalls in JSON as an object with a `!` entry specifying the full dotted name\n(i.e. `package.subpackage.module.name`) of the function to be invoked.\n\n```\n{\"!\": \"acme.learn.train_model\"}\n```\n\nThis would be equivalent to launch a Python script like\n\n```\nfrom acme.learn import train_model\ntrain_model()\n```\n\nTo pass keyword arguments, just add them as entries to the same object.\n\n```\n{\n  \"!\": \"acme.learn.train_model\",\n  \"data\": \"trainset.csv\",\n  \"model\": \"svm\"\n}\n\n# equivalent to:\nfrom acme.learn import train_model\ntrain_model(data='trainset.csv', model='svm')\n```\n\nTo pass positional arguments, pass a list with `*` as key.\n\n```\n{\n  \"!\": \"acme.learn.train_model\",\n  \"*\": [\"data1.csv\", \"data2.csv\"],\n  \"model\": \"svm\"\n}\n\n# equivalent to:\nfrom acme.learn import train_model\ntrain_model('data1.csv', 'data2.csv', model='svm')\n```\n\nIf you have exactly one positional argument and no keyword arguments, you can\nuse a shorter equivalent syntax (unless there is a clash with a magic function\nname, see below).\n\n```\n{\"!acme.learn.train_model\": \"trainset.csv\"}\n\n# equivalent to:\nfrom acme.learn import train_model\ntrain_model('trainset.csv')\n```\n\nIn order to pass more complex objects as arguments, a nested invocation can be\nspecified in place of a single value: such invocation can be a class\ninstantiation. In the example below we instantiate a [scikit-learn] classifier.\n\n```\n{\n  \"!\": \"acme.learn.train_model\",\n  \"data\": \"trainset.csv\",\n  \"model\": {\n    \"!\": \"sklearn.svm.SVC\",\n    \"C\": 0.1,\n    \"kernel\": \"poly\",\n    \"degree\": 3\n  }\n}\n\n# equivalent to:\nfrom acme.learn import train_model\nfrom sklearn.svm import SVC\ntrain_model(data='trainset.csv', model=SVC(C=0.1, kernel='poly', degree=3))\n```\n\nTo get a named object without calling it (e.g. a constant or a function to be\npassed to an higher-order one), use `{\".\": \"dotted.name\"}`.\n\n```\n{\n  \"!\": \"acme.learn.train_model\",\n  \"data\": \"trainset.csv\",\n  \"model_class\": {\".\": \"sklearn.svm.SVC\"}\n}\n\n# equivalent to:\nfrom acme.learn import train_model\nfrom sklearn.svm import SVC\ntrain_model(data='trainset.csv', model_class=SVC)\n```\n\nSome convenient \"magic\" calls in the form `{\"!name\": \"argument\"}` are provided\nfor common operations. Currently supported magic functions are:\n\n- `!run`: invokes the task in the specified file and returns its result\n- `!env`: returns the value of the specified environment variable (`None` if\n  undefined)\n- `!unpickle`: returns an object deserialized from given file using\n  `pickle.load` **(do not unpickle untrusted files!)**\n\nExample usage for `!unpickle`:\n\n```\n{\n  \"!\": \"acme.learn.validate_model\",\n  \"data\": \"testset.csv\",\n  \"model\": {\"!unpickle\": \"model.bin\"}\n}\n\n# equivalent to:\nimport pickle\nfrom acme.learn import validate_model\nwith open('model.bin', 'rb') as f:\n    model = pickle.load(f)\nvalidate_model(data='testset.csv', model=model)\n```\n\nRunning a task\n--------------\n\nOnce you have a `task_file.json` following the syntax above, just run\n\n```\nspytex task_file.json\n```\n\nIf the function returns a non-`None` object, it will be `print`ed to standard\noutput, unless you add a `-q`/`--quiet` flag. Use the `-p file.bin`/`--pickle\nfile.bin` option to `pickle.dump` the returned object to a given file.\n\nUse `spytex -h`/`spytex --help` to get the list of all options.\n\nRemote files\n------------\n\nSPyTEx uses [smart-open] to open file names specified both in the JSON files\nand in the CLI: this allows to fetch and write files from HTTP[S] (read only),\n[Amazon S3] and other non-local sources. Refer to the\n[smart-open documentation][smart-open] for more information.\n\nInternals\n---------\n\nThe `spytex` command performs the following key steps:\n\n1. the indicated source file is parsed using Python standard `json` module into\n   an object graph made of standard Python objects (dicts, lists, ...);\n2. such graph is _compiled_ into a graph of `Definition` objects, which\n   formally represent the operators used in SPyTEx JSON (function calls, raw\n   values, ...)\n3. the `Definition`s in the graph are recursively _resolved_: each of them is\n   turned into the object it represents (function calls are executed, raw\n   values are unwrapped, ...)\n\nPlanned features\n----------------\n\n_(in rough priority order)_\n\n- additional operators in JSON, e.g. to pass a date in \"YYYY-MM-DD\" format\n- command-line parameters (referenceable from JSON file) and more options (e.g.\n  logging configuration)\n- support for different syntaxes (e.g. using keywords in place of symbols)\n  and/or for JSON alternatives (e.g. [TOML])\n- proper documentation\n\n[scikit-learn]: https://scikit-learn.org/\n[smart-open]: https://pypi.org/project/smart-open/\n[Amazon S3]: https://aws.amazon.com/s3/\n[TOML]: https://github.com/toml-lang/toml\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rrobby86/spytex", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "spytex", "package_url": "https://pypi.org/project/spytex/", "platform": "", "project_url": "https://pypi.org/project/spytex/", "project_urls": {"Homepage": "https://github.com/rrobby86/spytex"}, "release_url": "https://pypi.org/project/spytex/0.1.8/", "requires_dist": ["smart-open (>=1.8.1)"], "requires_python": "", "summary": "Run arbitrary Python functions indicated by JSON specs", "version": "0.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SPyTEx</h1>\n<p><em>(this is still in early development, features will be added mostly according\nto internal needs, see planned features section at the end)</em></p>\n<p><a href=\"https://pypi.org/project/spytex/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b27940d49ed546b024ec222023999aca26e49f6e/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f737079746578\"></a>\n<a href=\"https://travis-ci.org/rrobby86/spytex\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cddd90a0491d53e2c8b5e9e20f381974dec63a38/68747470733a2f2f7472617669732d63692e6f72672f72726f62627938362f7370797465782e7376673f6272616e63683d6d6173746572\"></a></p>\n<p><strong>SPyTEx</strong> (<em>Simple Python Task Executor</em>) is a small library and CLI utility\nallowing to run arbitrary tasks defined in your Python code as ordinary\nfunctions and configured through simple but flexible JSON-based specifications.</p>\n<h2>Warning</h2>\n<p>Arbitrary Python code can be run through SPyTEx, even malicious!\n<strong>Never run SPyTEx on untrusted input files!</strong></p>\n<h2>Motivation</h2>\n<p>SPyTEx has been created for use in dynamic codebases which do not have one or\nfew well-defined and stable entry points, but contain a large amount of\ninterrelated functions and classes which can represent either single tasks by\nthemselves or be used as parts of larger tasks.</p>\n<p>The goal of SPyTEx is to provide a single entry point from which users can run\nall these tasks, without the need to create a command line interface (CLI) for\neach of them. Once SPyTEx is deployed alongside with your codebase, e.g. in a\nPython package distribution or in a Docker container, you can use its CLI to\ncall arbitrary functions with arbitrary arguments, even if they were not\nplanned to be used as entry points. Function and arguments are specified in a\nJSON file, with a specific syntax allowing to create complex Python objects as\narguments.</p>\n<p>While simple Python scripts can be used to launch arbitrary functions inside a\ncodebase, SPyTEx allows to define tasks in form of JSON files which are a more\nstandard format and provide some short notations for functionality such as\nunpickling objects from local or remote files.</p>\n<h2>Installation</h2>\n<pre><code>pip install spytex\n</code></pre>\n<h2>Task specification</h2>\n<p>A task is a call to a function (or any callable object). SPyTEx represents\ncalls in JSON as an object with a <code>!</code> entry specifying the full dotted name\n(i.e. <code>package.subpackage.module.name</code>) of the function to be invoked.</p>\n<pre><code>{\"!\": \"acme.learn.train_model\"}\n</code></pre>\n<p>This would be equivalent to launch a Python script like</p>\n<pre><code>from acme.learn import train_model\ntrain_model()\n</code></pre>\n<p>To pass keyword arguments, just add them as entries to the same object.</p>\n<pre><code>{\n  \"!\": \"acme.learn.train_model\",\n  \"data\": \"trainset.csv\",\n  \"model\": \"svm\"\n}\n\n# equivalent to:\nfrom acme.learn import train_model\ntrain_model(data='trainset.csv', model='svm')\n</code></pre>\n<p>To pass positional arguments, pass a list with <code>*</code> as key.</p>\n<pre><code>{\n  \"!\": \"acme.learn.train_model\",\n  \"*\": [\"data1.csv\", \"data2.csv\"],\n  \"model\": \"svm\"\n}\n\n# equivalent to:\nfrom acme.learn import train_model\ntrain_model('data1.csv', 'data2.csv', model='svm')\n</code></pre>\n<p>If you have exactly one positional argument and no keyword arguments, you can\nuse a shorter equivalent syntax (unless there is a clash with a magic function\nname, see below).</p>\n<pre><code>{\"!acme.learn.train_model\": \"trainset.csv\"}\n\n# equivalent to:\nfrom acme.learn import train_model\ntrain_model('trainset.csv')\n</code></pre>\n<p>In order to pass more complex objects as arguments, a nested invocation can be\nspecified in place of a single value: such invocation can be a class\ninstantiation. In the example below we instantiate a <a href=\"https://scikit-learn.org/\" rel=\"nofollow\">scikit-learn</a> classifier.</p>\n<pre><code>{\n  \"!\": \"acme.learn.train_model\",\n  \"data\": \"trainset.csv\",\n  \"model\": {\n    \"!\": \"sklearn.svm.SVC\",\n    \"C\": 0.1,\n    \"kernel\": \"poly\",\n    \"degree\": 3\n  }\n}\n\n# equivalent to:\nfrom acme.learn import train_model\nfrom sklearn.svm import SVC\ntrain_model(data='trainset.csv', model=SVC(C=0.1, kernel='poly', degree=3))\n</code></pre>\n<p>To get a named object without calling it (e.g. a constant or a function to be\npassed to an higher-order one), use <code>{\".\": \"dotted.name\"}</code>.</p>\n<pre><code>{\n  \"!\": \"acme.learn.train_model\",\n  \"data\": \"trainset.csv\",\n  \"model_class\": {\".\": \"sklearn.svm.SVC\"}\n}\n\n# equivalent to:\nfrom acme.learn import train_model\nfrom sklearn.svm import SVC\ntrain_model(data='trainset.csv', model_class=SVC)\n</code></pre>\n<p>Some convenient \"magic\" calls in the form <code>{\"!name\": \"argument\"}</code> are provided\nfor common operations. Currently supported magic functions are:</p>\n<ul>\n<li><code>!run</code>: invokes the task in the specified file and returns its result</li>\n<li><code>!env</code>: returns the value of the specified environment variable (<code>None</code> if\nundefined)</li>\n<li><code>!unpickle</code>: returns an object deserialized from given file using\n<code>pickle.load</code> <strong>(do not unpickle untrusted files!)</strong></li>\n</ul>\n<p>Example usage for <code>!unpickle</code>:</p>\n<pre><code>{\n  \"!\": \"acme.learn.validate_model\",\n  \"data\": \"testset.csv\",\n  \"model\": {\"!unpickle\": \"model.bin\"}\n}\n\n# equivalent to:\nimport pickle\nfrom acme.learn import validate_model\nwith open('model.bin', 'rb') as f:\n    model = pickle.load(f)\nvalidate_model(data='testset.csv', model=model)\n</code></pre>\n<h2>Running a task</h2>\n<p>Once you have a <code>task_file.json</code> following the syntax above, just run</p>\n<pre><code>spytex task_file.json\n</code></pre>\n<p>If the function returns a non-<code>None</code> object, it will be <code>print</code>ed to standard\noutput, unless you add a <code>-q</code>/<code>--quiet</code> flag. Use the <code>-p file.bin</code>/<code>--pickle file.bin</code> option to <code>pickle.dump</code> the returned object to a given file.</p>\n<p>Use <code>spytex -h</code>/<code>spytex --help</code> to get the list of all options.</p>\n<h2>Remote files</h2>\n<p>SPyTEx uses <a href=\"https://pypi.org/project/smart-open/\" rel=\"nofollow\">smart-open</a> to open file names specified both in the JSON files\nand in the CLI: this allows to fetch and write files from HTTP[S] (read only),\n<a href=\"https://aws.amazon.com/s3/\" rel=\"nofollow\">Amazon S3</a> and other non-local sources. Refer to the\n<a href=\"https://pypi.org/project/smart-open/\" rel=\"nofollow\">smart-open documentation</a> for more information.</p>\n<h2>Internals</h2>\n<p>The <code>spytex</code> command performs the following key steps:</p>\n<ol>\n<li>the indicated source file is parsed using Python standard <code>json</code> module into\nan object graph made of standard Python objects (dicts, lists, ...);</li>\n<li>such graph is <em>compiled</em> into a graph of <code>Definition</code> objects, which\nformally represent the operators used in SPyTEx JSON (function calls, raw\nvalues, ...)</li>\n<li>the <code>Definition</code>s in the graph are recursively <em>resolved</em>: each of them is\nturned into the object it represents (function calls are executed, raw\nvalues are unwrapped, ...)</li>\n</ol>\n<h2>Planned features</h2>\n<p><em>(in rough priority order)</em></p>\n<ul>\n<li>additional operators in JSON, e.g. to pass a date in \"YYYY-MM-DD\" format</li>\n<li>command-line parameters (referenceable from JSON file) and more options (e.g.\nlogging configuration)</li>\n<li>support for different syntaxes (e.g. using keywords in place of symbols)\nand/or for JSON alternatives (e.g. <a href=\"https://github.com/toml-lang/toml\" rel=\"nofollow\">TOML</a>)</li>\n<li>proper documentation</li>\n</ul>\n\n          </div>"}, "last_serial": 6262512, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9f333ba77ea76aff8fd8e9b355cbba8c", "sha256": "71efe34a68a7098459ac6b32e4d19a31017eb4aa93b975d971ab2a717ce4fb9a"}, "downloads": -1, "filename": "spytex-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9f333ba77ea76aff8fd8e9b355cbba8c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7217, "upload_time": "2019-11-28T11:37:59", "upload_time_iso_8601": "2019-11-28T11:37:59.673080Z", "url": "https://files.pythonhosted.org/packages/58/f6/1d0ebe92d54b019eeac74b4fc314e8eadff984649f9664c0ad84cb282651/spytex-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5c9eda08677b9a19cf44355de228e46", "sha256": "597f41de760bbe16ab6cfc5d51c5477cf4d0765f4d1141f842d5a874cc66e8d4"}, "downloads": -1, "filename": "spytex-0.0.1.tar.gz", "has_sig": false, "md5_digest": "b5c9eda08677b9a19cf44355de228e46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5555, "upload_time": "2019-11-28T11:38:02", "upload_time_iso_8601": "2019-11-28T11:38:02.408876Z", "url": "https://files.pythonhosted.org/packages/ee/0c/93ace367d7ee5364594d8a4d9b2a0735149b3ea0afcb06523f289dfb9e99/spytex-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "2cb395dbcc40c679714c78916cd8d7fb", "sha256": "149c21a311d02b110c73da22741b844c07983b9b567de5c5c3cad0493738fce7"}, "downloads": -1, "filename": "spytex-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "2cb395dbcc40c679714c78916cd8d7fb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7823, "upload_time": "2019-11-28T14:56:02", "upload_time_iso_8601": "2019-11-28T14:56:02.658731Z", "url": "https://files.pythonhosted.org/packages/78/2e/9729bd5fd31cac673b330ff9ae550bda98309c44cee8b2a085c66b860187/spytex-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "76dd8bcf1a866d2ea1e4021776710d27", "sha256": "645a96b94597553db480297e75714e6b52c3fdcc265d58fe0eef2027b6d2f964"}, "downloads": -1, "filename": "spytex-0.0.2.tar.gz", "has_sig": false, "md5_digest": "76dd8bcf1a866d2ea1e4021776710d27", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6312, "upload_time": "2019-11-28T14:56:04", "upload_time_iso_8601": "2019-11-28T14:56:04.033031Z", "url": "https://files.pythonhosted.org/packages/ef/a9/13b33353bb6edfb0de823891255e1e3a8faea695152552507d797fe58da5/spytex-0.0.2.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "966b73a2a14b23724bcafdd1aed15d2c", "sha256": "8c759e2e667804e50b29600977de14c4fe3a18e05d203f2b0a08aeb39218fbd9"}, "downloads": -1, "filename": "spytex-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "966b73a2a14b23724bcafdd1aed15d2c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8885, "upload_time": "2019-11-29T15:42:30", "upload_time_iso_8601": "2019-11-29T15:42:30.761846Z", "url": "https://files.pythonhosted.org/packages/14/f8/95117da80e052b3068db443daf90e4449e564be3466c2db40b8e2945e827/spytex-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "847e9eb78d82586447c94470ba67c5cb", "sha256": "c01d897bf04a9566bfa3d0bcba4a747d20f6f722978de3c369b12ac3b545ec95"}, "downloads": -1, "filename": "spytex-0.1.0.tar.gz", "has_sig": false, "md5_digest": "847e9eb78d82586447c94470ba67c5cb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6902, "upload_time": "2019-11-29T15:42:32", "upload_time_iso_8601": "2019-11-29T15:42:32.290085Z", "url": "https://files.pythonhosted.org/packages/3b/37/fccafbd3b023428050b83270eab973f739abdfc77eb2f6e8c11419e0f8a0/spytex-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a9f736bf773a4b9b5e63111f930d5136", "sha256": "b1f1da0f8bc2f5f3100a99a461d3ed408b0ffb67fb4f7ed9c94fc67d29015fb4"}, "downloads": -1, "filename": "spytex-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a9f736bf773a4b9b5e63111f930d5136", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8827, "upload_time": "2019-11-30T01:58:05", "upload_time_iso_8601": "2019-11-30T01:58:05.095221Z", "url": "https://files.pythonhosted.org/packages/fd/15/a0d916c447738df980e3cb5fcd24c7e25002664b6ab0cef61cc3c15f4165/spytex-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d79056a7de5bb1d25aeb4431b54ff694", "sha256": "bcd83668adb5f76173a3891cb80eebc396d7a384d80f6bca40ecc42c8695d0a1"}, "downloads": -1, "filename": "spytex-0.1.1.tar.gz", "has_sig": false, "md5_digest": "d79056a7de5bb1d25aeb4431b54ff694", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6899, "upload_time": "2019-11-30T01:58:06", "upload_time_iso_8601": "2019-11-30T01:58:06.726432Z", "url": "https://files.pythonhosted.org/packages/d8/22/e5346a92fb97fccecb7fb2e8fe8f9aeb2befdbaf6f6797d42ccbf33b2f7e/spytex-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "134b770334c397b48245d2afd4391850", "sha256": "d34a542aea97bac3b4496a1768c795e33d5feac69cd17ff56c7283f3b99996dc"}, "downloads": -1, "filename": "spytex-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "134b770334c397b48245d2afd4391850", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9016, "upload_time": "2019-12-02T23:35:30", "upload_time_iso_8601": "2019-12-02T23:35:30.710617Z", "url": "https://files.pythonhosted.org/packages/c6/73/b8c3bdabd70a0d7e794f83a1a6fe4caf7f2f070503c1958b3a7fdc400f18/spytex-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1ca764f3d13e8907eae99d5f297038f0", "sha256": "823d189d254a623b34618a19f9821d8044b375cea28e0e4b0e3a1b5f8173bb4c"}, "downloads": -1, "filename": "spytex-0.1.2.tar.gz", "has_sig": false, "md5_digest": "1ca764f3d13e8907eae99d5f297038f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7158, "upload_time": "2019-12-02T23:35:32", "upload_time_iso_8601": "2019-12-02T23:35:32.366847Z", "url": "https://files.pythonhosted.org/packages/7e/ac/fc9c1df47a9ecda7321bc4c2e8d66f973acd7318bdd6fb5c93ec2d412fcf/spytex-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "578750b5271b4090ba353b47201b06c1", "sha256": "7d9b0f4b0dc3d4f0b1ae3f13668ea1febc922bc602421dd4995e8d0415b808a8"}, "downloads": -1, "filename": "spytex-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "578750b5271b4090ba353b47201b06c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9046, "upload_time": "2019-12-03T14:08:48", "upload_time_iso_8601": "2019-12-03T14:08:48.161798Z", "url": "https://files.pythonhosted.org/packages/27/91/bd579cdd60643956a427c278ca6c7572fe48d0cb1ea07bbb40ff3dcd112e/spytex-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bc2ffdda839c5e44287eab881f77f9f1", "sha256": "3460520edf0cbb1c409757d24cc63bab73db1b34fe85ad00de7467f5163ea529"}, "downloads": -1, "filename": "spytex-0.1.3.tar.gz", "has_sig": false, "md5_digest": "bc2ffdda839c5e44287eab881f77f9f1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7183, "upload_time": "2019-12-03T14:08:49", "upload_time_iso_8601": "2019-12-03T14:08:49.759892Z", "url": "https://files.pythonhosted.org/packages/2d/76/44aaa3b29f6cdbe260a53df774459b1c1c599c0556f6f3a8fc74e5c788a8/spytex-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "0b556d44340f8c2b8a7aa8512062c218", "sha256": "95c8ed0d7181ad69decd05a9bde18017cbe644fe0d62afe60a5335895da1c47e"}, "downloads": -1, "filename": "spytex-0.1.4-py3-none-any.whl", "has_sig": false, "md5_digest": "0b556d44340f8c2b8a7aa8512062c218", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9121, "upload_time": "2019-12-03T18:56:40", "upload_time_iso_8601": "2019-12-03T18:56:40.722647Z", "url": "https://files.pythonhosted.org/packages/2a/65/6a7b54938e1cffda84b1b9cf6fa072c4d05b4ff88fc9918ff90e135c393f/spytex-0.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9afd82c3cd39b9c5dee4bfef55063ed", "sha256": "91cff7bb7572eb65aedee812d68a43fceef805507fdef33aa32e9bc992d8dffa"}, "downloads": -1, "filename": "spytex-0.1.4.tar.gz", "has_sig": false, "md5_digest": "a9afd82c3cd39b9c5dee4bfef55063ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7142, "upload_time": "2019-12-03T18:56:42", "upload_time_iso_8601": "2019-12-03T18:56:42.030043Z", "url": "https://files.pythonhosted.org/packages/a2/75/1bf7be16f70127941e78171c332195e86095ad24768fb2e7fdc6309fd006/spytex-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "3a9f2d86ed1f000d89a649c270643c7f", "sha256": "0ad91356bae01ca58401a8337b6df0556696416280515b8186b77a191c2dc56c"}, "downloads": -1, "filename": "spytex-0.1.5-py3-none-any.whl", "has_sig": false, "md5_digest": "3a9f2d86ed1f000d89a649c270643c7f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9346, "upload_time": "2019-12-05T00:38:59", "upload_time_iso_8601": "2019-12-05T00:38:59.267383Z", "url": "https://files.pythonhosted.org/packages/73/35/08105841af3928aa9d3cdea12f8829379c996f23fb1cd47e5f394ee1020c/spytex-0.1.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d10bfe7af5494138325606e5120a0de7", "sha256": "6cbecab9ea12d56f8cbc20e7e4ed65daa70787d6161f9c088d12e5dbdfd27af2"}, "downloads": -1, "filename": "spytex-0.1.5.tar.gz", "has_sig": false, "md5_digest": "d10bfe7af5494138325606e5120a0de7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7352, "upload_time": "2019-12-05T00:39:00", "upload_time_iso_8601": "2019-12-05T00:39:00.415997Z", "url": "https://files.pythonhosted.org/packages/55/f8/02fd65d7786a75be85e73448f33fb6a0df9a482021e3ffc5e009e91157ed/spytex-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "c61be28c170d6b08f23409984e6f2434", "sha256": "0db4479dc550ee94bf7eb9699a83cf702fdb3a56c73c992e1a73c05bc553144e"}, "downloads": -1, "filename": "spytex-0.1.6-py3-none-any.whl", "has_sig": false, "md5_digest": "c61be28c170d6b08f23409984e6f2434", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9421, "upload_time": "2019-12-06T15:31:27", "upload_time_iso_8601": "2019-12-06T15:31:27.760207Z", "url": "https://files.pythonhosted.org/packages/4c/bb/09d2e57f065da48fbe709c40204cf3fde38d07b9468f1ae7f685d53dfe08/spytex-0.1.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ee37c441ab7e321a95e05713be01ef8c", "sha256": "c93a749f384f33d2260cf1ef779c8bb2911ef300727c392774ff7e789beaeaad"}, "downloads": -1, "filename": "spytex-0.1.6.tar.gz", "has_sig": false, "md5_digest": "ee37c441ab7e321a95e05713be01ef8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7451, "upload_time": "2019-12-06T15:31:28", "upload_time_iso_8601": "2019-12-06T15:31:28.989652Z", "url": "https://files.pythonhosted.org/packages/fb/51/d4a30ca7d9b0f476ead5cb0a34531e9bec69e9df475eb3b2c259841504b3/spytex-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "17eb9cada45a7882b7148f08e4218dd9", "sha256": "f0bd08759bf2d32aadc3433ad3b828ed7b67c9b70c21ea0ad66096184fbf370e"}, "downloads": -1, "filename": "spytex-0.1.7-py3-none-any.whl", "has_sig": false, "md5_digest": "17eb9cada45a7882b7148f08e4218dd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9473, "upload_time": "2019-12-06T16:44:18", "upload_time_iso_8601": "2019-12-06T16:44:18.395561Z", "url": "https://files.pythonhosted.org/packages/99/9e/6fb126569a84b38e51cf5e54e6b9dd1e0c12ea78ac14a7b922a71f93b906/spytex-0.1.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "250f98277696e5dc5d05637134529df0", "sha256": "d358d7bf80473e9801c9e9ed4627250332dcda723b37b522d20baebe901e651a"}, "downloads": -1, "filename": "spytex-0.1.7.tar.gz", "has_sig": false, "md5_digest": "250f98277696e5dc5d05637134529df0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7499, "upload_time": "2019-12-06T16:44:19", "upload_time_iso_8601": "2019-12-06T16:44:19.685067Z", "url": "https://files.pythonhosted.org/packages/0e/5a/54805b029aca4b96ec6619d619612e239cf5e8615ad4dc3dba0bda7b2c81/spytex-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "8efcd89628e2e6433f9989104276256f", "sha256": "1249111ae52120425b7698797d44ae2c2ae56499e3ac03b381a924afed120ef1"}, "downloads": -1, "filename": "spytex-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8efcd89628e2e6433f9989104276256f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9836, "upload_time": "2019-12-08T15:52:02", "upload_time_iso_8601": "2019-12-08T15:52:02.035522Z", "url": "https://files.pythonhosted.org/packages/8b/c8/d029af1d77f7f3ca5624efd3bd787cb1222c18cb173cd127d20521480f4c/spytex-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00398e1813e57d048f66ac5dc8f435a1", "sha256": "b6664e5d1773682c92ec657bf61e876b6af416ae078f98ef4bc4bacbbdc77962"}, "downloads": -1, "filename": "spytex-0.1.8.tar.gz", "has_sig": false, "md5_digest": "00398e1813e57d048f66ac5dc8f435a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7812, "upload_time": "2019-12-08T15:52:03", "upload_time_iso_8601": "2019-12-08T15:52:03.255365Z", "url": "https://files.pythonhosted.org/packages/64/f4/c3e894a170c8334e295583edd45c4ce2973b351ec1915a1fc3ef30938379/spytex-0.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8efcd89628e2e6433f9989104276256f", "sha256": "1249111ae52120425b7698797d44ae2c2ae56499e3ac03b381a924afed120ef1"}, "downloads": -1, "filename": "spytex-0.1.8-py3-none-any.whl", "has_sig": false, "md5_digest": "8efcd89628e2e6433f9989104276256f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9836, "upload_time": "2019-12-08T15:52:02", "upload_time_iso_8601": "2019-12-08T15:52:02.035522Z", "url": "https://files.pythonhosted.org/packages/8b/c8/d029af1d77f7f3ca5624efd3bd787cb1222c18cb173cd127d20521480f4c/spytex-0.1.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "00398e1813e57d048f66ac5dc8f435a1", "sha256": "b6664e5d1773682c92ec657bf61e876b6af416ae078f98ef4bc4bacbbdc77962"}, "downloads": -1, "filename": "spytex-0.1.8.tar.gz", "has_sig": false, "md5_digest": "00398e1813e57d048f66ac5dc8f435a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7812, "upload_time": "2019-12-08T15:52:03", "upload_time_iso_8601": "2019-12-08T15:52:03.255365Z", "url": "https://files.pythonhosted.org/packages/64/f4/c3e894a170c8334e295583edd45c4ce2973b351ec1915a1fc3ef30938379/spytex-0.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:04 2020"}