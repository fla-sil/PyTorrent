{"info": {"author": "Katherine Ratliff", "author_email": "k.ratliff@duke.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Scientific/Engineering :: Physics"], "description": "====================================================\nRAFEM: River Avulsion and Floodplain Evolution Model\n====================================================\n\n.. image:: https://img.shields.io/travis/sequence-dev/sequence.svg\n        :target: https://travis-ci.org/sequence-dev/sequence\n\n.. image:: https://ci.appveyor.com/api/projects/status/380ox1dv8hekefq9?svg=true\n    :target: https://ci.appveyor.com/project/mcflugen/sequence/branch/develop\n\n.. image:: https://readthedocs.org/projects/sequence/badge/?version=latest\n        :target: https://sequence.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\nAbout\n-----\n\nThe River Avulsion and Floodplain Evolution Model (RAFEM) is a morphodynamic\nmodel designed to be coupled with the Coastline Evolution Model (CEM).\n\nDocumentation is currently being updated (5/9/19). Please see our paper,\n`Exploring Wave and Sea\u2010Level Rise Effects on Delta Morphodynamics With a Coupled River\u2010Ocean Model <https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/2018JF004757>`_ for a detailed model description. \n\n\nRequirements\n------------\n\n*Rafem* requires Python 3.\n\nApart from Python, *Rafem* has a number of other requirements, all of which\ncan be obtained through either *pip* or *conda*, that will be automatically\ninstalled when you install *Rafem*.\n\nTo see a full listing of the requirements, have a look at the project's\n*requirements.txt* file.\n\nIf you are a developer of *Rafem* you will also want to install\nadditional dependencies for running *Rafem*'s tests to make sure\nthat things are working as they should. These dependencies are listed\nin *requirements-testing.txt*.\n\nInstallation\n------------\n\nTo install *Rafem*, first create a new environment in\nwhich *Rafem* will be installed. This, although not necessary, will\nisolate the installation so that there won't be conflicts with your\nbase *Python* installation. This can be done with *conda* as::\n\n  $ conda create -n rafem python=3\n  $ conda activate rafem\n\nStable Release\n++++++++++++++\n\n*Rafem*, and its dependencies, can be installed either with *pip*\nor *conda*. Using *pip*::\n\n    $ pip install rafem\n\nUsing *conda*::\n\n    $ conda install rafem -c conda-forge\n\nFrom Source\n+++++++++++\n\nAfter downloading the *Rafem* source code, run the following from\n*Rafem*'s top-level folder (the one that contains *setup.py*) to\ninstall *Rafem* into the current environment::\n\n  $ pip install -e .\n\nInput Files\n-----------\n\nRafem Parameter File\n++++++++++++++++++++\n\nThe main *Rafem* input file is a yaml-formatted text file that lists\nparameter values for the various components. Running the following will\nprint a sample *Rafem* parameter file::\n\n  $ rafem show rafem\n\n..code :: yaml\n\n  shape:\n  - 120\n  - 200\n  spacing:\n  - 0.1\n  - 0.1\n  n0: 5.0\n  nslope: 0.001\n  max_rand: 0.1\n  days: 7\n  dt_day: 0.01\n  rand_seed: 623\n  Initial_SL: 0.0\n  SLRR_m: 0.0\n  SubRate_m: 0.0\n  Sub_Start: 0\n  ch_width: 10.0\n  ch_depth: 1.0\n  ch_discharge: 10.0\n  A: 1.0\n  c_f: 0.01\n  C_0: 1.0\n  sed_sg: 2.65\n  init_cut_frac: 1\n  super_ratio: 1.0\n  short_path: 1\n  WL_Z: 0.0\n  WL_dist: 0\n  blanket_rate_m: 0.0\n  fine_dep_frac: 0.0\n  splay_type: 2\n  saveavulsions: false\n  savecourseupdates: false\n\nOutput Files\n------------\n\nThere are three main sets of output files. These are writen to the \n*output* folder as the model is running.\n*  *output/elevation*: elevations of the entire model grid.\n*  *output/profile*: elevations along the river profile\n*  *output/river*: x, and y coordinates of the river profile\n\nEach of these files is a CSV formatted text file. To create a plot\nof one of these output files, use the *plot* subcommand. For example::\n\n  $ rafem plot elevation\n\nwill plot the final elevations for the simulation in the current directory.\nUse *rafem plot --help* to see further options.\n\nExamples\n--------\n\nTo run a simulation using the sample input files described above, you first\nneed to create a set of sample files. This can be done by hand or by running\n`rafem setup` to get a default set of parameters that you can then edit.\nFor example::\n\n  $ mkdir example\n  $ cd example\n  $ rafem setup\n\nThis command has created a new file, *rafem.yaml*, that you can edit for your\nsimulation.  To run *rafem* using this file::\n\n  $ rafem run\n\nThis will have create a new folder, *output*, that contains the output files.\nYou can look at some of the output with the *plot* subcommand. For example,\nthe following will create a plot the final elevations::\n\n  $ rafem plot elevation\n\nUse the *--help* option to get help about other command line options.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/katmratliff/avulsion-bmi", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "rafem", "package_url": "https://pypi.org/project/rafem/", "platform": "", "project_url": "https://pypi.org/project/rafem/", "project_urls": {"Homepage": "https://github.com/katmratliff/avulsion-bmi"}, "release_url": "https://pypi.org/project/rafem/0.4.3/", "requires_dist": null, "requires_python": "", "summary": "River Avulsion Flooplain Evolution Model", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/sequence-dev/sequence\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/sequence-dev/sequence.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ffbf4d638e351536568813f0c03ab37f2f9765f3/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f73657175656e63652d6465762f73657175656e63652e737667\"></a>\n<a href=\"https://ci.appveyor.com/project/mcflugen/sequence/branch/develop\" rel=\"nofollow\"><img alt=\"https://ci.appveyor.com/api/projects/status/380ox1dv8hekefq9?svg=true\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f829d113ae0d34f81539fa7b0b89dee292f45841/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f3338306f783164763868656b656671393f7376673d74727565\"></a>\n<a href=\"https://sequence.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9e375f3384aaabeff9bf310e398fd60f0b05e7eb/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f73657175656e63652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<div id=\"about\">\n<h2>About</h2>\n<p>The River Avulsion and Floodplain Evolution Model (RAFEM) is a morphodynamic\nmodel designed to be coupled with the Coastline Evolution Model (CEM).</p>\n<p>Documentation is currently being updated (5/9/19). Please see our paper,\n<a href=\"https://agupubs.onlinelibrary.wiley.com/doi/abs/10.1029/2018JF004757\" rel=\"nofollow\">Exploring Wave and Sea\u2010Level Rise Effects on Delta Morphodynamics With a Coupled River\u2010Ocean Model</a> for a detailed model description.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p><em>Rafem</em> requires Python 3.</p>\n<p>Apart from Python, <em>Rafem</em> has a number of other requirements, all of which\ncan be obtained through either <em>pip</em> or <em>conda</em>, that will be automatically\ninstalled when you install <em>Rafem</em>.</p>\n<p>To see a full listing of the requirements, have a look at the project\u2019s\n<em>requirements.txt</em> file.</p>\n<p>If you are a developer of <em>Rafem</em> you will also want to install\nadditional dependencies for running <em>Rafem</em>\u2019s tests to make sure\nthat things are working as they should. These dependencies are listed\nin <em>requirements-testing.txt</em>.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <em>Rafem</em>, first create a new environment in\nwhich <em>Rafem</em> will be installed. This, although not necessary, will\nisolate the installation so that there won\u2019t be conflicts with your\nbase <em>Python</em> installation. This can be done with <em>conda</em> as:</p>\n<pre>$ conda create -n rafem python=3\n$ conda activate rafem\n</pre>\n<div id=\"stable-release\">\n<h3>Stable Release</h3>\n<p><em>Rafem</em>, and its dependencies, can be installed either with <em>pip</em>\nor <em>conda</em>. Using <em>pip</em>:</p>\n<pre>$ pip install rafem\n</pre>\n<p>Using <em>conda</em>:</p>\n<pre>$ conda install rafem -c conda-forge\n</pre>\n</div>\n<div id=\"from-source\">\n<h3>From Source</h3>\n<p>After downloading the <em>Rafem</em> source code, run the following from\n<em>Rafem</em>\u2019s top-level folder (the one that contains <em>setup.py</em>) to\ninstall <em>Rafem</em> into the current environment:</p>\n<pre>$ pip install -e .\n</pre>\n</div>\n</div>\n<div id=\"input-files\">\n<h2>Input Files</h2>\n<h2 id=\"rafem-parameter-file\"><span class=\"section-subtitle\">Rafem Parameter File</span></h2>\n<p>The main <em>Rafem</em> input file is a yaml-formatted text file that lists\nparameter values for the various components. Running the following will\nprint a sample <em>Rafem</em> parameter file:</p>\n<pre>$ rafem show rafem\n</pre>\n<p>..code :: yaml</p>\n<blockquote>\nshape:\n- 120\n- 200\nspacing:\n- 0.1\n- 0.1\nn0: 5.0\nnslope: 0.001\nmax_rand: 0.1\ndays: 7\ndt_day: 0.01\nrand_seed: 623\nInitial_SL: 0.0\nSLRR_m: 0.0\nSubRate_m: 0.0\nSub_Start: 0\nch_width: 10.0\nch_depth: 1.0\nch_discharge: 10.0\nA: 1.0\nc_f: 0.01\nC_0: 1.0\nsed_sg: 2.65\ninit_cut_frac: 1\nsuper_ratio: 1.0\nshort_path: 1\nWL_Z: 0.0\nWL_dist: 0\nblanket_rate_m: 0.0\nfine_dep_frac: 0.0\nsplay_type: 2\nsaveavulsions: false\nsavecourseupdates: false</blockquote>\n</div>\n<div id=\"output-files\">\n<h2>Output Files</h2>\n<p>There are three main sets of output files. These are writen to the\n<em>output</em> folder as the model is running.\n*  <em>output/elevation</em>: elevations of the entire model grid.\n*  <em>output/profile</em>: elevations along the river profile\n*  <em>output/river</em>: x, and y coordinates of the river profile</p>\n<p>Each of these files is a CSV formatted text file. To create a plot\nof one of these output files, use the <em>plot</em> subcommand. For example:</p>\n<pre>$ rafem plot elevation\n</pre>\n<p>will plot the final elevations for the simulation in the current directory.\nUse <em>rafem plot \u2013help</em> to see further options.</p>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>To run a simulation using the sample input files described above, you first\nneed to create a set of sample files. This can be done by hand or by running\n<cite>rafem setup</cite> to get a default set of parameters that you can then edit.\nFor example:</p>\n<pre>$ mkdir example\n$ cd example\n$ rafem setup\n</pre>\n<p>This command has created a new file, <em>rafem.yaml</em>, that you can edit for your\nsimulation.  To run <em>rafem</em> using this file:</p>\n<pre>$ rafem run\n</pre>\n<p>This will have create a new folder, <em>output</em>, that contains the output files.\nYou can look at some of the output with the <em>plot</em> subcommand. For example,\nthe following will create a plot the final elevations:</p>\n<pre>$ rafem plot elevation\n</pre>\n<p>Use the <em>\u2013help</em> option to get help about other command line options.</p>\n</div>\n\n          </div>"}, "last_serial": 6833273, "releases": {"0.4.0": [{"comment_text": "", "digests": {"md5": "61ece1f34731ff0384f6fd05baf26031", "sha256": "e446b7524b7ed145356893cfbd24bc2ae1db9648f7a00a3c2febe6a44a11d8a6"}, "downloads": -1, "filename": "rafem-0.4.0.macosx-10.9-x86_64.tar.gz", "has_sig": false, "md5_digest": "61ece1f34731ff0384f6fd05baf26031", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43864, "upload_time": "2019-05-09T17:49:14", "upload_time_iso_8601": "2019-05-09T17:49:14.215518Z", "url": "https://files.pythonhosted.org/packages/38/47/c44dd384aad7712497c4ae8653e6a2a02dfc5d86385acb30ef03c57e0992/rafem-0.4.0.macosx-10.9-x86_64.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "8993d436247cb3c81b1a45d7fb33e3a6", "sha256": "06b8c5248fcb0c1cb3bc28d0b07f2eb7ff26f3a61e941273958fc48bbed58bba"}, "downloads": -1, "filename": "rafem-0.4.1.tar.gz", "has_sig": false, "md5_digest": "8993d436247cb3c81b1a45d7fb33e3a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 35989, "upload_time": "2019-05-09T18:05:34", "upload_time_iso_8601": "2019-05-09T18:05:34.109687Z", "url": "https://files.pythonhosted.org/packages/57/d7/d73c5d1baef0a85275905c8da103a07ea0b5f09e709456b6cb4945c7bba4/rafem-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "e09d6daed87e268112bcc12772d030da", "sha256": "5cca579ee1919c31677eee49f0d6dc0cfe5b430bdb78212c1cc2fbcdccd1732c"}, "downloads": -1, "filename": "rafem-0.4.2.tar.gz", "has_sig": false, "md5_digest": "e09d6daed87e268112bcc12772d030da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36680, "upload_time": "2019-05-10T15:00:28", "upload_time_iso_8601": "2019-05-10T15:00:28.127917Z", "url": "https://files.pythonhosted.org/packages/68/25/b1574d87104c3113a79def1110ea3b7462adbbb389cee1ddaa1da0ab1c36/rafem-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "b6e14e171ff9e9101655b4e7994a39a6", "sha256": "0fed7a0a52411d3d72de8607b3517e188ceedea76b5a42eb932ef883e9930fa6"}, "downloads": -1, "filename": "rafem-0.4.3.tar.gz", "has_sig": false, "md5_digest": "b6e14e171ff9e9101655b4e7994a39a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43069, "upload_time": "2020-03-18T04:22:30", "upload_time_iso_8601": "2020-03-18T04:22:30.751749Z", "url": "https://files.pythonhosted.org/packages/93/2c/5f301ad0af2b2af51cb81c617d2ff37474bbfbfb67d46e22a6be41d3ff0c/rafem-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b6e14e171ff9e9101655b4e7994a39a6", "sha256": "0fed7a0a52411d3d72de8607b3517e188ceedea76b5a42eb932ef883e9930fa6"}, "downloads": -1, "filename": "rafem-0.4.3.tar.gz", "has_sig": false, "md5_digest": "b6e14e171ff9e9101655b4e7994a39a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43069, "upload_time": "2020-03-18T04:22:30", "upload_time_iso_8601": "2020-03-18T04:22:30.751749Z", "url": "https://files.pythonhosted.org/packages/93/2c/5f301ad0af2b2af51cb81c617d2ff37474bbfbfb67d46e22a6be41d3ff0c/rafem-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:54 2020"}