{"info": {"author": "Saylermb", "author_email": "Saylermb@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Topic :: Education :: Testing", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Text Processing", "Topic :: Utilities"], "description": "## Randomize\n\nLiberty for generate random data. \n\n### Docs \n\n\n\n#### Randomize\nClass for create custom random list.\n\n```python\nfrom randomizer import Randomize\nr = Randomize(['try', 'this', 'class'])\nr.element() # -> 'class'\nr.elements(3) #  ['this', 'try', 'try']\nr.group_elements(2)  # -> 'try class' \n# pop del rundom element and return him\nr.pop() # -> 'this'\n# if pass index number, pop will be used as list.pop () \nr.pop(0) # -> 'try'\n```\n\n#### random_text_unicode\nGenerates random strings with unicode symbol.\n\n *param size*: size of returned text\n \n *param random_size*: if True, return random size [0*size]\n \n *return*: unicode text\n\n```python\nfrom randomizer import random_text_unicode\nrandom_text_unicode(10)  # -> 'aT\u0743\u043f\u07910\u057dY\u05c5a\nrandom_text_unicode(10, random_size=True)  # -> '\u02580\u036f\u0142\u018f'\n\n```\n#### random_text\n\nGenerates random strings.\n\n *param size*: size of returned text\n \n *param random_size*: if True, return random size [0:size]\n \n *return*: text\n\n\n```python\nfrom randomizer import random_text\nrandom_text(10)  # -> 'v 9\u043593\u043a\u04421O'\nrandom_text(10, random_size=True)  # -> 'R\u041fkF'\n```\n\n#### random_byte\n\nGenerates random int with calculation random(2 ** size).\n\n *param size*: size of returned int\n \n *return*: int (int range 0 <= int < 2**size)\n\n\n```python\nfrom randomizer import random_byte\nrandom_byte(2)  # -> 3\nrandom_byte(8)  # -> '111'\n```\n\n\n \n#### random_float\n\n *param a*: start digit\n \n *param b*: end digit\n \n *return*: random float with 14 digit after coma\n\n```python\nfrom randomizer import random_float\nrandom_float(1.1, 2.2) # -> 1.4524252884290065\n```\n#### random_datetime\n\n *param a*: start datetime\n \n *param b*: end datetime\n \n *return*: random datetime with timezone of 'a' parameter\n\n```python\nfrom randomizer import random_datetime\nfrom datetime import datetime\nrandom_datetime(datetime(2007,1,2,3,4,5), datetime.now())\n# -> datetime.datetime(2019, 10, 11, 23, 1, 11, 296813)\n```\n#### random_list_element\n\n *param array*: list of elements\n \n *return*: random element of array\n\n```python\nfrom randomizer import random_list_element\nrandom_list_element([1,2,3,4,5]) # -> 4 \n```\n#### random_bool\n\n *return*: return random bool value\n\n```python\nfrom randomizer import random_bool\nrandom_bool() # -> True\n```\n#### random_unix_time\n\n *return*: a float value from 0 to the current time with 7 digit after coma\n\n```python\nfrom randomizer import random_unix_time\nrandom_unix_time() # -> 785009993.9438592\n```\n \n#### random_dt_now\n\n *return*: a datetime object from 1.1.1980 to the current datetime without timezone\n\n```python\nfrom randomizer import random_dt_now\nrandom_dt_now() # -> datetime.datetime(1986, 4, 23, 3, 46, 12, 133432)\n```\n#### random_positive_float\n\n *param max_value*: maximum value\n \n *return*: random positive float with 14 digit after come\n\n```python\nfrom randomizer import random_positive_float\nrandom_positive_float(1.123) # -> 0.6647791533497713\n```\n\n### INT\n\nreturn random digit, from \u2193 table\n\n```text\nType          Bytes         Minimum               Maximum\n__________________________________________________________\nTINYINT\t        1\t    -128\t\t   127\nSMALLINT\t2\t    -32768\t\t   32767\nMEDIUMINT\t3\t    -8388608\t           8388607\nINT\t        4\t    -2147483648\t           2147483647\nBIGINT\t        8\t    -2*63\t\t   (2*63)-1\n```\n  \n#### random_tinyint\n```python\nfrom randomizer import random_tinyint\nrandom_tinyint() # -> 62\n```\n  \n#### random_smallint\n```python\nfrom randomizer import random_smallint\nrandom_smallint() # -> 17031\n```\n#### random_mediumint\n```python\nfrom  randomizer import random_mediumint\nrandom_mediumint() # -> 5518123\n```\n#### random_int\n```python\nfrom randomizer import random_int\nrandom_int() # -> -1572638799\n```\n#### random_bigint\n```python\nfrom  randomizer import random_bigint\nrandom_bigint() # -> -475732340272717339\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Saylermb/randomizer", "keywords": "", "license": "The MIT License: http://www.opensource.org/licenses/mit-license.php", "maintainer": "", "maintainer_email": "", "name": "randomizer", "package_url": "https://pypi.org/project/randomizer/", "platform": "", "project_url": "https://pypi.org/project/randomizer/", "project_urls": {"Homepage": "https://github.com/Saylermb/randomizer"}, "release_url": "https://pypi.org/project/randomizer/0.21/", "requires_dist": null, "requires_python": ">3.6.2", "summary": "Liberty for generate random data.", "version": "0.21", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Randomize</h2>\n<p>Liberty for generate random data.</p>\n<h3>Docs</h3>\n<h4>Randomize</h4>\n<p>Class for create custom random list.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">Randomize</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Randomize</span><span class=\"p\">([</span><span class=\"s1\">'try'</span><span class=\"p\">,</span> <span class=\"s1\">'this'</span><span class=\"p\">,</span> <span class=\"s1\">'class'</span><span class=\"p\">])</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">element</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; 'class'</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">elements</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span> <span class=\"c1\">#  ['this', 'try', 'try']</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">group_elements</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; 'try class' </span>\n<span class=\"c1\"># pop del rundom element and return him</span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; 'this'</span>\n<span class=\"c1\"># if pass index number, pop will be used as list.pop () </span>\n<span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">pop</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"c1\"># -&gt; 'try'</span>\n</pre>\n<h4>random_text_unicode</h4>\n<p>Generates random strings with unicode symbol.</p>\n<p><em>param size</em>: size of returned text</p>\n<p><em>param random_size</em>: if True, return random size [0*size]</p>\n<p><em>return</em>: unicode text</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_text_unicode</span>\n<span class=\"n\">random_text_unicode</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; 'aT\u0743\u043f\u07910\u057dY\u05c5a</span>\n<span class=\"n\">random_text_unicode</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">random_size</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; '\u02580\u036f\u0142\u018f'</span>\n</pre>\n<h4>random_text</h4>\n<p>Generates random strings.</p>\n<p><em>param size</em>: size of returned text</p>\n<p><em>param random_size</em>: if True, return random size [0:size]</p>\n<p><em>return</em>: text</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_text</span>\n<span class=\"n\">random_text</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; 'v 9\u043593\u043a\u04421O'</span>\n<span class=\"n\">random_text</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">random_size</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; 'R\u041fkF'</span>\n</pre>\n<h4>random_byte</h4>\n<p>Generates random int with calculation random(2 ** size).</p>\n<p><em>param size</em>: size of returned int</p>\n<p><em>return</em>: int (int range 0 &lt;= int &lt; 2**size)</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_byte</span>\n<span class=\"n\">random_byte</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; 3</span>\n<span class=\"n\">random_byte</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>  <span class=\"c1\"># -&gt; '111'</span>\n</pre>\n<h4>random_float</h4>\n<p><em>param a</em>: start digit</p>\n<p><em>param b</em>: end digit</p>\n<p><em>return</em>: random float with 14 digit after coma</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_float</span>\n<span class=\"n\">random_float</span><span class=\"p\">(</span><span class=\"mf\">1.1</span><span class=\"p\">,</span> <span class=\"mf\">2.2</span><span class=\"p\">)</span> <span class=\"c1\"># -&gt; 1.4524252884290065</span>\n</pre>\n<h4>random_datetime</h4>\n<p><em>param a</em>: start datetime</p>\n<p><em>param b</em>: end datetime</p>\n<p><em>return</em>: random datetime with timezone of 'a' parameter</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">datetime</span> <span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n<span class=\"n\">random_datetime</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2007</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">now</span><span class=\"p\">())</span>\n<span class=\"c1\"># -&gt; datetime.datetime(2019, 10, 11, 23, 1, 11, 296813)</span>\n</pre>\n<h4>random_list_element</h4>\n<p><em>param array</em>: list of elements</p>\n<p><em>return</em>: random element of array</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_list_element</span>\n<span class=\"n\">random_list_element</span><span class=\"p\">([</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">3</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">])</span> <span class=\"c1\"># -&gt; 4 </span>\n</pre>\n<h4>random_bool</h4>\n<p><em>return</em>: return random bool value</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_bool</span>\n<span class=\"n\">random_bool</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; True</span>\n</pre>\n<h4>random_unix_time</h4>\n<p><em>return</em>: a float value from 0 to the current time with 7 digit after coma</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_unix_time</span>\n<span class=\"n\">random_unix_time</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; 785009993.9438592</span>\n</pre>\n<h4>random_dt_now</h4>\n<p><em>return</em>: a datetime object from 1.1.1980 to the current datetime without timezone</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_dt_now</span>\n<span class=\"n\">random_dt_now</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; datetime.datetime(1986, 4, 23, 3, 46, 12, 133432)</span>\n</pre>\n<h4>random_positive_float</h4>\n<p><em>param max_value</em>: maximum value</p>\n<p><em>return</em>: random positive float with 14 digit after come</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_positive_float</span>\n<span class=\"n\">random_positive_float</span><span class=\"p\">(</span><span class=\"mf\">1.123</span><span class=\"p\">)</span> <span class=\"c1\"># -&gt; 0.6647791533497713</span>\n</pre>\n<h3>INT</h3>\n<p>return random digit, from \u2193 table</p>\n<pre>Type          Bytes         Minimum               Maximum\n__________________________________________________________\nTINYINT\t        1\t    -128\t\t   127\nSMALLINT\t2\t    -32768\t\t   32767\nMEDIUMINT\t3\t    -8388608\t           8388607\nINT\t        4\t    -2147483648\t           2147483647\nBIGINT\t        8\t    -2*63\t\t   (2*63)-1\n</pre>\n<h4>random_tinyint</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_tinyint</span>\n<span class=\"n\">random_tinyint</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; 62</span>\n</pre>\n<h4>random_smallint</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_smallint</span>\n<span class=\"n\">random_smallint</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; 17031</span>\n</pre>\n<h4>random_mediumint</h4>\n<pre><span class=\"kn\">from</span>  <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_mediumint</span>\n<span class=\"n\">random_mediumint</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; 5518123</span>\n</pre>\n<h4>random_int</h4>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_int</span>\n<span class=\"n\">random_int</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; -1572638799</span>\n</pre>\n<h4>random_bigint</h4>\n<pre><span class=\"kn\">from</span>  <span class=\"nn\">randomizer</span> <span class=\"kn\">import</span> <span class=\"n\">random_bigint</span>\n<span class=\"n\">random_bigint</span><span class=\"p\">()</span> <span class=\"c1\"># -&gt; -475732340272717339</span>\n</pre>\n\n          </div>"}, "last_serial": 6233434, "releases": {"0.12": [{"comment_text": "", "digests": {"md5": "a2e3d311ff005ac4f234e047e6b34e1f", "sha256": "39dcf3315af989a7915972084ce79e9b00f536bd536afe3ef8e1f02962014724"}, "downloads": -1, "filename": "randomizer-0.12.tar.gz", "has_sig": false, "md5_digest": "a2e3d311ff005ac4f234e047e6b34e1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.2", "size": 8642, "upload_time": "2019-10-25T08:40:23", "upload_time_iso_8601": "2019-10-25T08:40:23.069245Z", "url": "https://files.pythonhosted.org/packages/86/77/ced333f73bd5503cc82227f26d2a97fcbee17777abe680e98cdc7eef5f68/randomizer-0.12.tar.gz", "yanked": false}], "0.13": [{"comment_text": "", "digests": {"md5": "8b70651ddf978ee4cd29913407b6bede", "sha256": "180fe4bf750daedf6fd1e2c4827e6acf249a2897349fe9be35e4801cfd67ac5b"}, "downloads": -1, "filename": "randomizer-0.13.tar.gz", "has_sig": false, "md5_digest": "8b70651ddf978ee4cd29913407b6bede", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.2", "size": 8638, "upload_time": "2019-10-25T08:42:34", "upload_time_iso_8601": "2019-10-25T08:42:34.162797Z", "url": "https://files.pythonhosted.org/packages/40/35/e19633a66fd62a2f5f05a7497617980ed654b6d1ee86d9df72619ec03071/randomizer-0.13.tar.gz", "yanked": false}], "0.15": [{"comment_text": "", "digests": {"md5": "cfcb4b18ee8d2fe6ccb215a20d67276f", "sha256": "01e66914b9ce75a07678a7365e4d7a29646923ae91faecf96c7895b2122ae958"}, "downloads": -1, "filename": "randomizer-0.15.tar.gz", "has_sig": false, "md5_digest": "cfcb4b18ee8d2fe6ccb215a20d67276f", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.2", "size": 8779, "upload_time": "2019-10-25T09:03:58", "upload_time_iso_8601": "2019-10-25T09:03:58.602168Z", "url": "https://files.pythonhosted.org/packages/5d/fc/e5cf6a958d1fd249bc781be3adbd1783ff450a76bc3e33ee5e1ebd8e3c87/randomizer-0.15.tar.gz", "yanked": false}], "0.21": [{"comment_text": "", "digests": {"md5": "a8f9cf073f694f0b37cb9dcfeda86068", "sha256": "1e1e9ca345d925b1b8ea4fceddd6b7e7ed2a5397fc487ca78b35f0efff467061"}, "downloads": -1, "filename": "randomizer-0.21.tar.gz", "has_sig": false, "md5_digest": "a8f9cf073f694f0b37cb9dcfeda86068", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.2", "size": 8880, "upload_time": "2019-12-03T07:16:58", "upload_time_iso_8601": "2019-12-03T07:16:58.158666Z", "url": "https://files.pythonhosted.org/packages/f1/e9/91c5f47e01f675d8b7509442e9aced1d7c3089300edb15473d052bcc4885/randomizer-0.21.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8f9cf073f694f0b37cb9dcfeda86068", "sha256": "1e1e9ca345d925b1b8ea4fceddd6b7e7ed2a5397fc487ca78b35f0efff467061"}, "downloads": -1, "filename": "randomizer-0.21.tar.gz", "has_sig": false, "md5_digest": "a8f9cf073f694f0b37cb9dcfeda86068", "packagetype": "sdist", "python_version": "source", "requires_python": ">3.6.2", "size": 8880, "upload_time": "2019-12-03T07:16:58", "upload_time_iso_8601": "2019-12-03T07:16:58.158666Z", "url": "https://files.pythonhosted.org/packages/f1/e9/91c5f47e01f675d8b7509442e9aced1d7c3089300edb15473d052bcc4885/randomizer-0.21.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:37 2020"}