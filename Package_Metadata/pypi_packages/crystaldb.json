{"info": {"author": "Zhichang Fu", "author_email": "fuzctc@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "![image](doc/crystaldb.jpg)\n\n\nCrystalDB\n========\nCrystalDB is a simple and small ORM. It has few concepts, making it easy to learn and intuitive to use.\n\n* a small, expressive ORM, and no need to provide a model, so it will not be difficult for the problem of sub-library or sub-tables. \n* python3.\n* need mysql-client or pymysql or mysql.connector.\n* currently only supports mysql.\n\n\nInstallation\n=========\nFrom PyPi:\n\n    $ pip install crysyaldb\n\n\nBasic Usage\n=========\n* **Connect to the database:**\n\n    ```python\n    import crystaldb\n\n    db_host = '127.0.0.1'\n    db_port = 3306\n    db_user = 'root'\n    db_pass = '123'\n    db_database = 'testdb'\n\n    db_handle = crystaldb.database(\n        dbn='mysql',\n        host=db_host,\n        port=db_port,\n        user=db_user,\n        passwd=db_pass,\n        db=db_database,\n        debug=True)\n    ```\n\n* **Create table:** (Temporarily not supported, need to be completed by yourself) \n\n   for example:\n\n    ```python\n    CREATE TABLE `user` (\n      `id` int(11) unsigned NOT NULL AUTO_INCREMENT,\n      `gender` varchar(16) DEFAULT NULL,\n      `name` varchar(16) DEFAULT NULL,\n      `birthday` varchar(16) DEFAULT NULL,\n      `age` int(11) unsigned DEFAULT NULL,\n      PRIMARY KEY (`id`)\n    ) ENGINE=InnoDB DEFAULT CHARSET=utf8;\n    ```  \n\n* **Create row:**\n    ```python\n    values = {\n            'gender': 'girl',\n            'name': 'xiaoli_orm',\n            'birthday': '1982-08-02',\n            'age': 36\n        }\n    result = db_handle.operator(\"user\").insert(**values)\n    print(result) # ==> 1\n    # If debug is True, the following log will be printed, time unit ms.\n    # 0.3162 (1): INSERT INTO user (age, birthday, gender, name) VALUES (36, '1982-08-02', 'girl', 'xiaoli_orm')\n    ```\n\n* **Querying:**\n    ```python\n    result = db_handle.select(\"user\", [\"name\", \"age\"]).filter(\n            age=36, gender=\"girl\").query()\n    print(result.__len__()) # count \n    print(result) # <crystaldb.utils.IterBetter object at 0x1115246a0>\n    for item in result:\n        print(item)  # <Storage {'name': 'xiaowang', 'age': 36}>\n        print(item.name) # xiaowang\n    # If debug is True, the following log will be printed, time unit ms.\n    # 0.8579 (5): SELECT user.name, user.age FROM user WHERE user.age = 36 AND user.gender = 'girl'\n    ```\n\n* **Update row:**\n    ```python\n    where = dict(name=\"xiaoli_orm\")\n    values = {'gender': 'boy', 'birthday': '1981-08-02', 'age': 37}\n    result = db_handle.operator(\"user\").update(where, **values)\n    print(result) # 1\n    # If debug is True, the following log will be printed, time unit ms.\n    # 0.4399 (1): UPDATE user SET age = 37, birthday = '1981-08-02', gender = 'boy' WHERE name = 'xiaoli_orm';\n    ```\n\n* **Delete row:**\n    ```python\n    where = dict(name=\"xiaoyu\", age=27)\n    result = db_handle.operator(\"user\").delete(where)\n    # If debug is True, the following log will be printed, time unit ms.\n    # 0.3782 (1): DELETE FROM user WHERE age = 27 AND name = 'xiaoyu';\n    ```\n\n* **Get Debug Queries:**\n  ```python\n  print(db_handle.get_debug_queries_info)\n  # {'run_time': '0.8247', 'sql': \"SELECT user.name, user.age FROM user WHERE user.age = 36 AND user.gender = 'girl'\"}\n  ```    \n\n\nDocumentation\n===============\n* [Insert](./doc/insert.md)\n* [Update](./doc/update.md)\n* [Querying](./doc/query.md)\n* [Delete](./doc/delete.md)\n\n\nLearning more\n===============\nCheck the documentation for more examples or read test cases in unit test code.\n\n\nChange Log\n===============\n[Change Log](https://github.com/CrystalSkyZ/crystaldb.py/releases)\n\n\nDiscussing\n===============\n* submit issue\n* email: fuzctc@gmail.com\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fuzctc/crystaldb.py.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "crystaldb", "package_url": "https://pypi.org/project/crystaldb/", "platform": "", "project_url": "https://pypi.org/project/crystaldb/", "project_urls": {"Homepage": "https://github.com/fuzctc/crystaldb.py.git"}, "release_url": "https://pypi.org/project/crystaldb/1.1.1/", "requires_dist": ["mysqlclient", "DBUtils"], "requires_python": "", "summary": "CrystalDB is a simple and small ORM and  no need to provide a model.", "version": "1.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ec23d22c8a4d1e156d21f9d7d69f7d2f64698e9/646f632f6372797374616c64622e6a7067\"></p>\n<h1>CrystalDB</h1>\n<p>CrystalDB is a simple and small ORM. It has few concepts, making it easy to learn and intuitive to use.</p>\n<ul>\n<li>a small, expressive ORM, and no need to provide a model, so it will not be difficult for the problem of sub-library or sub-tables.</li>\n<li>python3.</li>\n<li>need mysql-client or pymysql or mysql.connector.</li>\n<li>currently only supports mysql.</li>\n</ul>\n<h1>Installation</h1>\n<p>From PyPi:</p>\n<pre><code>$ pip install crysyaldb\n</code></pre>\n<h1>Basic Usage</h1>\n<ul>\n<li>\n<p><strong>Connect to the database:</strong></p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">crystaldb</span>\n\n<span class=\"n\">db_host</span> <span class=\"o\">=</span> <span class=\"s1\">'127.0.0.1'</span>\n<span class=\"n\">db_port</span> <span class=\"o\">=</span> <span class=\"mi\">3306</span>\n<span class=\"n\">db_user</span> <span class=\"o\">=</span> <span class=\"s1\">'root'</span>\n<span class=\"n\">db_pass</span> <span class=\"o\">=</span> <span class=\"s1\">'123'</span>\n<span class=\"n\">db_database</span> <span class=\"o\">=</span> <span class=\"s1\">'testdb'</span>\n\n<span class=\"n\">db_handle</span> <span class=\"o\">=</span> <span class=\"n\">crystaldb</span><span class=\"o\">.</span><span class=\"n\">database</span><span class=\"p\">(</span>\n    <span class=\"n\">dbn</span><span class=\"o\">=</span><span class=\"s1\">'mysql'</span><span class=\"p\">,</span>\n    <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"n\">db_host</span><span class=\"p\">,</span>\n    <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"n\">db_port</span><span class=\"p\">,</span>\n    <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">db_user</span><span class=\"p\">,</span>\n    <span class=\"n\">passwd</span><span class=\"o\">=</span><span class=\"n\">db_pass</span><span class=\"p\">,</span>\n    <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"n\">db_database</span><span class=\"p\">,</span>\n    <span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li>\n<p><strong>Create table:</strong> (Temporarily not supported, need to be completed by yourself)</p>\n<p>for example:</p>\n<pre><span class=\"n\">CREATE</span> <span class=\"n\">TABLE</span> <span class=\"err\">`</span><span class=\"n\">user</span><span class=\"err\">`</span> <span class=\"p\">(</span>\n  <span class=\"err\">`</span><span class=\"nb\">id</span><span class=\"err\">`</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"n\">unsigned</span> <span class=\"n\">NOT</span> <span class=\"n\">NULL</span> <span class=\"n\">AUTO_INCREMENT</span><span class=\"p\">,</span>\n  <span class=\"err\">`</span><span class=\"n\">gender</span><span class=\"err\">`</span> <span class=\"n\">varchar</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"n\">DEFAULT</span> <span class=\"n\">NULL</span><span class=\"p\">,</span>\n  <span class=\"err\">`</span><span class=\"n\">name</span><span class=\"err\">`</span> <span class=\"n\">varchar</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"n\">DEFAULT</span> <span class=\"n\">NULL</span><span class=\"p\">,</span>\n  <span class=\"err\">`</span><span class=\"n\">birthday</span><span class=\"err\">`</span> <span class=\"n\">varchar</span><span class=\"p\">(</span><span class=\"mi\">16</span><span class=\"p\">)</span> <span class=\"n\">DEFAULT</span> <span class=\"n\">NULL</span><span class=\"p\">,</span>\n  <span class=\"err\">`</span><span class=\"n\">age</span><span class=\"err\">`</span> <span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"mi\">11</span><span class=\"p\">)</span> <span class=\"n\">unsigned</span> <span class=\"n\">DEFAULT</span> <span class=\"n\">NULL</span><span class=\"p\">,</span>\n  <span class=\"n\">PRIMARY</span> <span class=\"n\">KEY</span> <span class=\"p\">(</span><span class=\"err\">`</span><span class=\"nb\">id</span><span class=\"err\">`</span><span class=\"p\">)</span>\n<span class=\"p\">)</span> <span class=\"n\">ENGINE</span><span class=\"o\">=</span><span class=\"n\">InnoDB</span> <span class=\"n\">DEFAULT</span> <span class=\"n\">CHARSET</span><span class=\"o\">=</span><span class=\"n\">utf8</span><span class=\"p\">;</span>\n</pre>\n</li>\n<li>\n<p><strong>Create row:</strong></p>\n<pre><span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'gender'</span><span class=\"p\">:</span> <span class=\"s1\">'girl'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'xiaoli_orm'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'birthday'</span><span class=\"p\">:</span> <span class=\"s1\">'1982-08-02'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">36</span>\n    <span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db_handle</span><span class=\"o\">.</span><span class=\"n\">operator</span><span class=\"p\">(</span><span class=\"s2\">\"user\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">values</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># ==&gt; 1</span>\n<span class=\"c1\"># If debug is True, the following log will be printed, time unit ms.</span>\n<span class=\"c1\"># 0.3162 (1): INSERT INTO user (age, birthday, gender, name) VALUES (36, '1982-08-02', 'girl', 'xiaoli_orm')</span>\n</pre>\n</li>\n<li>\n<p><strong>Querying:</strong></p>\n<pre><span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db_handle</span><span class=\"o\">.</span><span class=\"n\">select</span><span class=\"p\">(</span><span class=\"s2\">\"user\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"name\"</span><span class=\"p\">,</span> <span class=\"s2\">\"age\"</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span>\n        <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">36</span><span class=\"p\">,</span> <span class=\"n\">gender</span><span class=\"o\">=</span><span class=\"s2\">\"girl\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"o\">.</span><span class=\"fm\">__len__</span><span class=\"p\">())</span> <span class=\"c1\"># count </span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># &lt;crystaldb.utils.IterBetter object at 0x1115246a0&gt;</span>\n<span class=\"k\">for</span> <span class=\"n\">item</span> <span class=\"ow\">in</span> <span class=\"n\">result</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"p\">)</span>  <span class=\"c1\"># &lt;Storage {'name': 'xiaowang', 'age': 36}&gt;</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">item</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">)</span> <span class=\"c1\"># xiaowang</span>\n<span class=\"c1\"># If debug is True, the following log will be printed, time unit ms.</span>\n<span class=\"c1\"># 0.8579 (5): SELECT user.name, user.age FROM user WHERE user.age = 36 AND user.gender = 'girl'</span>\n</pre>\n</li>\n<li>\n<p><strong>Update row:</strong></p>\n<pre><span class=\"n\">where</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"xiaoli_orm\"</span><span class=\"p\">)</span>\n<span class=\"n\">values</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'gender'</span><span class=\"p\">:</span> <span class=\"s1\">'boy'</span><span class=\"p\">,</span> <span class=\"s1\">'birthday'</span><span class=\"p\">:</span> <span class=\"s1\">'1981-08-02'</span><span class=\"p\">,</span> <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">37</span><span class=\"p\">}</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db_handle</span><span class=\"o\">.</span><span class=\"n\">operator</span><span class=\"p\">(</span><span class=\"s2\">\"user\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span><span class=\"n\">where</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">values</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">result</span><span class=\"p\">)</span> <span class=\"c1\"># 1</span>\n<span class=\"c1\"># If debug is True, the following log will be printed, time unit ms.</span>\n<span class=\"c1\"># 0.4399 (1): UPDATE user SET age = 37, birthday = '1981-08-02', gender = 'boy' WHERE name = 'xiaoli_orm';</span>\n</pre>\n</li>\n<li>\n<p><strong>Delete row:</strong></p>\n<pre><span class=\"n\">where</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s2\">\"xiaoyu\"</span><span class=\"p\">,</span> <span class=\"n\">age</span><span class=\"o\">=</span><span class=\"mi\">27</span><span class=\"p\">)</span>\n<span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">db_handle</span><span class=\"o\">.</span><span class=\"n\">operator</span><span class=\"p\">(</span><span class=\"s2\">\"user\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">where</span><span class=\"p\">)</span>\n<span class=\"c1\"># If debug is True, the following log will be printed, time unit ms.</span>\n<span class=\"c1\"># 0.3782 (1): DELETE FROM user WHERE age = 27 AND name = 'xiaoyu';</span>\n</pre>\n</li>\n<li>\n<p><strong>Get Debug Queries:</strong></p>\n<pre><span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">db_handle</span><span class=\"o\">.</span><span class=\"n\">get_debug_queries_info</span><span class=\"p\">)</span>\n<span class=\"c1\"># {'run_time': '0.8247', 'sql': \"SELECT user.name, user.age FROM user WHERE user.age = 36 AND user.gender = 'girl'\"}</span>\n</pre>\n</li>\n</ul>\n<h1>Documentation</h1>\n<ul>\n<li><a href=\"./doc/insert.md\" rel=\"nofollow\">Insert</a></li>\n<li><a href=\"./doc/update.md\" rel=\"nofollow\">Update</a></li>\n<li><a href=\"./doc/query.md\" rel=\"nofollow\">Querying</a></li>\n<li><a href=\"./doc/delete.md\" rel=\"nofollow\">Delete</a></li>\n</ul>\n<h1>Learning more</h1>\n<p>Check the documentation for more examples or read test cases in unit test code.</p>\n<h1>Change Log</h1>\n<p><a href=\"https://github.com/CrystalSkyZ/crystaldb.py/releases\" rel=\"nofollow\">Change Log</a></p>\n<h1>Discussing</h1>\n<ul>\n<li>submit issue</li>\n<li>email: <a href=\"mailto:fuzctc@gmail.com\">fuzctc@gmail.com</a></li>\n</ul>\n\n          </div>"}, "last_serial": 6724311, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "52233dc74736251ff511ae75e5d81db5", "sha256": "269c9e8b75e63c70e6ab04622221490a9e04ce65ddc140299bdbb8658a049191"}, "downloads": -1, "filename": "crystaldb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "52233dc74736251ff511ae75e5d81db5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16888, "upload_time": "2018-10-06T08:29:19", "upload_time_iso_8601": "2018-10-06T08:29:19.805023Z", "url": "https://files.pythonhosted.org/packages/a5/a1/8da72c118906fe9f9aef5e50afbdb012913bbe9f03ca87fd02a26b81d973/crystaldb-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3fc115291573678bf2522df6b2272a65", "sha256": "2e261bb3811d2ccb5a87f76aeda599fb9ca2ec8c1aad3fca279fa239286aa262"}, "downloads": -1, "filename": "crystaldb-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3fc115291573678bf2522df6b2272a65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20655, "upload_time": "2018-10-07T14:07:13", "upload_time_iso_8601": "2018-10-07T14:07:13.805752Z", "url": "https://files.pythonhosted.org/packages/9e/fd/21d855b72a3b6c15b5922a0eb46c0bc18cf4ca178927634a713539fda01a/crystaldb-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "760f34179798190b415ae5810ef39630", "sha256": "c57020fe83308e353272ed9f16bec8f1b42d2b9be2092ebee98cad6d2919efa8"}, "downloads": -1, "filename": "crystaldb-1.0.2.tar.gz", "has_sig": false, "md5_digest": "760f34179798190b415ae5810ef39630", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20719, "upload_time": "2018-10-17T08:39:55", "upload_time_iso_8601": "2018-10-17T08:39:55.956852Z", "url": "https://files.pythonhosted.org/packages/e0/7a/86220cea9e69659c38fe9642a8b96dd0f2ebcbad93cca6fda797d5859b72/crystaldb-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "84150209a550e7d3444584fea208e2d6", "sha256": "a26a675d6e7620cc1d3d5c9ff03bc30cad5a65361719292eb0f1ec47a94d018d"}, "downloads": -1, "filename": "crystaldb-1.0.3.tar.gz", "has_sig": false, "md5_digest": "84150209a550e7d3444584fea208e2d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22734, "upload_time": "2019-02-24T14:57:53", "upload_time_iso_8601": "2019-02-24T14:57:53.077627Z", "url": "https://files.pythonhosted.org/packages/60/e4/b8f9ccda011dd19d1988556232ef2b201e77d6c2d8aa1f1e3420ab007d3a/crystaldb-1.0.3.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "325b4d17672fad56a6f6f48d3c8cd86b", "sha256": "0c504c2e9d1013f0749bb25417aa3a9528a5b72954a671f48f15a6b3f7a23e6a"}, "downloads": -1, "filename": "crystaldb-1.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "325b4d17672fad56a6f6f48d3c8cd86b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19701, "upload_time": "2020-02-15T15:25:43", "upload_time_iso_8601": "2020-02-15T15:25:43.514812Z", "url": "https://files.pythonhosted.org/packages/33/2a/e1d7d53930fc67d541a5b046e6ef3dd094fa3dd17c157b031327d54f70b2/crystaldb-1.0.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8cfca7bc41c781b242095ee0909a6bb9", "sha256": "43f3dd68eaa480c1667146c01ce012664a87365e51d2b5eadbba2ffcf9475fd3"}, "downloads": -1, "filename": "crystaldb-1.0.6.tar.gz", "has_sig": false, "md5_digest": "8cfca7bc41c781b242095ee0909a6bb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22167, "upload_time": "2020-02-15T15:25:45", "upload_time_iso_8601": "2020-02-15T15:25:45.679587Z", "url": "https://files.pythonhosted.org/packages/13/79/8ac510d87c1fa8227c2b22a835277fee838a2c917aa4565e9c25c1307aa3/crystaldb-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b61fa20f882ab3469c264cfa21a97b2a", "sha256": "2ceb453df8da5e16382260b72a1167207224fc7a25ed88fff88203377f63bbf4"}, "downloads": -1, "filename": "crystaldb-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b61fa20f882ab3469c264cfa21a97b2a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20865, "upload_time": "2020-02-28T13:34:13", "upload_time_iso_8601": "2020-02-28T13:34:13.199165Z", "url": "https://files.pythonhosted.org/packages/cb/8c/bfdcb1989406dab081024a83f60f60751f4ae430ae3f0ea5768127e5eceb/crystaldb-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84012a1f5c5f6f72b0ce34a6c4ccc24d", "sha256": "e1697af4fe901ee8aae24634bffc09b17128b6e24897d08cb79c74542ae1dbce"}, "downloads": -1, "filename": "crystaldb-1.1.0.tar.gz", "has_sig": false, "md5_digest": "84012a1f5c5f6f72b0ce34a6c4ccc24d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23351, "upload_time": "2020-02-28T13:34:15", "upload_time_iso_8601": "2020-02-28T13:34:15.478581Z", "url": "https://files.pythonhosted.org/packages/a9/b5/ea6057230e1b4d80dfddd72f1844cf2da248075c9e27a2b9a54c8e9265d2/crystaldb-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "5140deff215f7efbd034910d0b759cad", "sha256": "790f2aa254c9d41de087d035af01b84aa6b7b2677121c79014d932b48cd411ac"}, "downloads": -1, "filename": "crystaldb-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5140deff215f7efbd034910d0b759cad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20929, "upload_time": "2020-02-29T13:22:15", "upload_time_iso_8601": "2020-02-29T13:22:15.862188Z", "url": "https://files.pythonhosted.org/packages/bc/81/20087519b037d8196c419e4eecac74639a16b0b62a2aa2eb721883ae8d62/crystaldb-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1d7f671e38769a3a654fed42b000322", "sha256": "8d713961fa93e2545c9790a703616c76b4dafff59b78a21c3471b539eb8d160d"}, "downloads": -1, "filename": "crystaldb-1.1.1.tar.gz", "has_sig": false, "md5_digest": "d1d7f671e38769a3a654fed42b000322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23444, "upload_time": "2020-02-29T13:22:17", "upload_time_iso_8601": "2020-02-29T13:22:17.623562Z", "url": "https://files.pythonhosted.org/packages/58/81/9b48eda934b6ac81c02bedc015f0b3a10e5bd981d5986d645098bd32e71c/crystaldb-1.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5140deff215f7efbd034910d0b759cad", "sha256": "790f2aa254c9d41de087d035af01b84aa6b7b2677121c79014d932b48cd411ac"}, "downloads": -1, "filename": "crystaldb-1.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5140deff215f7efbd034910d0b759cad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 20929, "upload_time": "2020-02-29T13:22:15", "upload_time_iso_8601": "2020-02-29T13:22:15.862188Z", "url": "https://files.pythonhosted.org/packages/bc/81/20087519b037d8196c419e4eecac74639a16b0b62a2aa2eb721883ae8d62/crystaldb-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d1d7f671e38769a3a654fed42b000322", "sha256": "8d713961fa93e2545c9790a703616c76b4dafff59b78a21c3471b539eb8d160d"}, "downloads": -1, "filename": "crystaldb-1.1.1.tar.gz", "has_sig": false, "md5_digest": "d1d7f671e38769a3a654fed42b000322", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23444, "upload_time": "2020-02-29T13:22:17", "upload_time_iso_8601": "2020-02-29T13:22:17.623562Z", "url": "https://files.pythonhosted.org/packages/58/81/9b48eda934b6ac81c02bedc015f0b3a10e5bd981d5986d645098bd32e71c/crystaldb-1.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:56 2020"}