{"info": {"author": "Daniel Domingo-Fern\u00e1ndez and Charles Tapley Hoyt", "author_email": "daniel.domingo.fernandez@scai.fraunhofer.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "ComPath |build| |coverage| |docs| |zenodo|\n==========================================\nAn integrative and extensible web application for exploring, analyzing, and curating pathway databases. ComPath is publicly available at https://compath.scai.fraunhofer.de/.\n\nThis package exposes the Bio2BEL pathway packages into a web application containing multiple built-in visualization and\nanalytics tools allowing for their analysis and comparison. By default, this packages wraps the following default\npackages:\n\n- `Bio2BEL KEGG <https://github.com/bio2bel/kegg>`_\n- `Bio2BEL Reactome <https://github.com/bio2bel/reactome>`_\n- `Bio2BEL WikiPathways <https://github.com/bio2bel/wikipathways>`_\n- `Bio2BEL MSig <https://github.com/bio2bel/msig>`_\n\nNew pathway/gene signatures resources can be added by forking the `ComPath Template Repository <https://github.com/compath/compath_template>`_.\n\nCitation\n--------\nIf you use ComPath in your work, please cite [1]_:\n\n.. [1] Domingo-Fern\u00e1ndez, D., *et al.* (2019). `ComPath: An ecosystem for exploring, analyzing, and curating mappings across pathway databases <https://doi.org/10.1038/s41540-018-0078-8>`_. *npj Syst Biol Appl.*, 5(1):3.\n\nInstallation |pypi_version| |python_versions| |pypi_license|\n------------------------------------------------------------\n``compath`` can be installed easily from `PyPI <https://pypi.python.org/pypi/compath>`_ with the\nfollowing code in your favorite terminal:\n\n.. code-block:: sh\n\n    python3 -m pip install compath\n\nor from the latest code on `GitHub <https://github.com/compath/compath>`_ with:\n\n.. code-block:: sh\n\n    python3 -m pip install git+https://github.com/bio2bel/compath.git@master\n\nSetup\n-----\nEasiest\n~~~~~~~\nAfter installing ``compath``, run from the command line:\n\n.. code-block:: sh\n\n    python3 -m compath populate\n\nThis command populates all of the relevant Bio2BEL repositories for the default list, and if any optional ComPath\nrepositories have been registered with entry points, will also populated.\n\nFor Developers\n~~~~~~~~~~~~~~\nIf you just cloned the repo and installed it from the source code, you can run the sh script ``load_compath.sh`` by\ntyping :code:`sh load_compath.sh` in your terminal. This script will first install all packages and later populate the\ndatabase.\n\nIf you have already installed the packages, but not loaded the data. First, load\n`Bio2BEL HGNC <https://github.com/bio2bel/hgnc>`_ (see 'Mapping across gene/protein identifiers' section). Next, load all individual pathway database\npackages KEGG, Reactome, WikiPathways, and MSigDB  with :code:`python3 -m compath populate`. This command assumes that\nthese packages are already installed in your Python environment. You can check the packages installed by running\n:code:`python3 -m compath ls` in your terminal. Alternatively, you can populate each package independently by running:\n:code:`python3 -m bio2bel_kegg populate`, :code:`python3 -m bio2bel_reactome populate`,\n:code:`python3 -m bio2bel_wikipathways populate`, or :code:`python3 -m bio2bel_msig populate`.\n\nMapping across gene/protein identifiers\n---------------------------------------\nIn order to load the gene sets from default packages, ComPath assumes that `Bio2BEL HGNC <https://github.com/bio2bel/hgnc>`_\nhas been already installed and populated. This package is required to perform the mapping from multiple Protein/Gene identifiers to HGNC symbols. The following steps are needed to install Bio2BEL HGNC:\n\n1. :code:`python3 -m pip install bio2bel_hgnc`\n2. :code:`python3 -m bio2bel_hgnc populate`\n\n\nRunning the Web Application\n---------------------------\nThe application can be run simply with\n\n.. code-block:: bash\n\n    python3 -m compath web\n\nThis command the Flask development server locally, by default on port 5000 (http://localhost:5000).\n\n\nCuration Interface\n------------------\nLoad mappings between pathways directly from the `ComPath Curation <https://github.com/compath/curation>`_ package.\n\n.. code-block:: sh\n\n    python3 -m compath load_mappings --connection=\"sqlite:////data/bio2bel.db\"\n\nLoad hierarchical mappings from a pathway database already containing that information (e.g., Reactome).\n\n.. code-block:: sh\n\n    python3 -m compath load_hierarchies --connection=\"sqlite:////data/bio2bel.db\"\n\n\nCreate a user.\n\n.. code-block:: sh\n\n    python3 -m compath manage --connection=\"sqlite:////data/bio2bel.db\" users make_user  'email' 'password'\n\nMake user admin.\n\n.. code-block:: sh\n\n    python3 -m compath manage --connection=\"sqlite:////data/bio2bel.db\" users make_admin 'email'\n\nDocker Instructions\n-------------------\n\nDeployment of ComPath with Docker\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n1. Build the container with compath as a name.\n\n.. code-block:: sh\n\n    docker build -t compath:0.0.1 .\n\n\n2. Create the data container in which the data will be located.\n\n.. code::\n\n    docker create -v /data --name compath-data compath:0.0.1\n\n\n\n3. Run docker container and connect it with the data container\n\n.. code::\n\n    docker run --name=compath --volumes-from compath-data --restart=always -d compath:0.0.1\n\n\n``For admin purposes and deploying ComPath inside Fraunhofer you can also run the following command``\n\n.. code-block:: sh\n\n    sh create_and_build_container.sh\n\nLoad Data\n~~~~~~~~~\n\nLoads the KEGG, Reactome, and WikiPathways modules into ComPath.\n\n.. code-block:: sh\n\n    docker exec -t -it compath /opt/compath/src/bin/load_data.sh\n\nRestart Container\n~~~~~~~~~~~~~~~~~\n\nRestarts the compath container\n\n.. code-block:: sh\n\n    docker restart compath\n\n\n.. |build| image:: https://travis-ci.org/ComPath/ComPath.svg?branch=master\n    :target: https://travis-ci.org/ComPath/ComPath\n    :alt: Build Status\n\n.. |coverage| image:: https://codecov.io/gh/ComPath/ComPath/coverage.svg?branch=master\n    :target: https://codecov.io/gh/ComPath/ComPath?branch=master\n    :alt: Coverage Status\n\n.. |docs| image:: http://readthedocs.org/projects/compath/badge/?version=latest\n    :target: https://compath.readthedocs.io/en/latest/\n    :alt: Documentation Status\n\n.. |climate| image:: https://codeclimate.com/github/compath/compath/badges/gpa.svg\n    :target: https://codeclimate.com/github/compath/compath\n    :alt: Code Climate\n\n.. |python_versions| image:: https://img.shields.io/pypi/pyversions/compath.svg\n    :alt: Stable Supported Python Versions\n\n.. |pypi_version| image:: https://img.shields.io/pypi/v/compath.svg\n    :alt: Current version on PyPI\n\n.. |pypi_license| image:: https://img.shields.io/pypi/l/compath.svg\n    :alt: MIT License\n\n.. |zenodo| image:: https://zenodo.org/badge/118578699.svg\n    :target: https://zenodo.org/badge/latestdoi/118578699", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ComPath/ComPath", "keywords": "Pathways,Systems Biology,Networks Biology", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "compath", "package_url": "https://pypi.org/project/compath/", "platform": "", "project_url": "https://pypi.org/project/compath/", "project_urls": {"Homepage": "https://github.com/ComPath/ComPath"}, "release_url": "https://pypi.org/project/compath/0.1.2/", "requires_dist": null, "requires_python": "", "summary": "A web application for exploring and comparing the overlaps across pathway resources", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>An integrative and extensible web application for exploring, analyzing, and curating pathway databases. ComPath is publicly available at <a href=\"https://compath.scai.fraunhofer.de/\" rel=\"nofollow\">https://compath.scai.fraunhofer.de/</a>.</p>\n<p>This package exposes the Bio2BEL pathway packages into a web application containing multiple built-in visualization and\nanalytics tools allowing for their analysis and comparison. By default, this packages wraps the following default\npackages:</p>\n<ul>\n<li><a href=\"https://github.com/bio2bel/kegg\" rel=\"nofollow\">Bio2BEL KEGG</a></li>\n<li><a href=\"https://github.com/bio2bel/reactome\" rel=\"nofollow\">Bio2BEL Reactome</a></li>\n<li><a href=\"https://github.com/bio2bel/wikipathways\" rel=\"nofollow\">Bio2BEL WikiPathways</a></li>\n<li><a href=\"https://github.com/bio2bel/msig\" rel=\"nofollow\">Bio2BEL MSig</a></li>\n</ul>\n<p>New pathway/gene signatures resources can be added by forking the <a href=\"https://github.com/compath/compath_template\" rel=\"nofollow\">ComPath Template Repository</a>.</p>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>If you use ComPath in your work, please cite <a href=\"#id2\" id=\"id1\" rel=\"nofollow\">[1]</a>:</p>\n<table id=\"id2\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td>Domingo-Fern\u00e1ndez, D., <em>et al.</em> (2019). <a href=\"https://doi.org/10.1038/s41540-018-0078-8\" rel=\"nofollow\">ComPath: An ecosystem for exploring, analyzing, and curating mappings across pathway databases</a>. <em>npj Syst Biol Appl.</em>, 5(1):3.</td></tr>\n</tbody>\n</table>\n</div>\n<div id=\"installation-pypi-version-python-versions-pypi-license\">\n<h2>Installation <img alt=\"Current version on PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ef2852edfbc030e9c1a652f9fbc67b085a27802/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6d706174682e737667\"> <img alt=\"Stable Supported Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8e237983fc6f21c85637836b7ee6fad5861bdbf7/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6d706174682e737667\"> <img alt=\"MIT License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c03e24eb67a5af4af5d313fc82790f7cb77f52c6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f636f6d706174682e737667\"></h2>\n<p><tt>compath</tt> can be installed easily from <a href=\"https://pypi.python.org/pypi/compath\" rel=\"nofollow\">PyPI</a> with the\nfollowing code in your favorite terminal:</p>\n<pre>python3 -m pip install compath\n</pre>\n<p>or from the latest code on <a href=\"https://github.com/compath/compath\" rel=\"nofollow\">GitHub</a> with:</p>\n<pre>python3 -m pip install git+https://github.com/bio2bel/compath.git@master\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<div id=\"easiest\">\n<h3>Easiest</h3>\n<p>After installing <tt>compath</tt>, run from the command line:</p>\n<pre>python3 -m compath populate\n</pre>\n<p>This command populates all of the relevant Bio2BEL repositories for the default list, and if any optional ComPath\nrepositories have been registered with entry points, will also populated.</p>\n</div>\n<div id=\"for-developers\">\n<h3>For Developers</h3>\n<p>If you just cloned the repo and installed it from the source code, you can run the sh script <tt>load_compath.sh</tt> by\ntyping <code>sh load_compath.sh</code> in your terminal. This script will first install all packages and later populate the\ndatabase.</p>\n<p>If you have already installed the packages, but not loaded the data. First, load\n<a href=\"https://github.com/bio2bel/hgnc\" rel=\"nofollow\">Bio2BEL HGNC</a> (see \u2018Mapping across gene/protein identifiers\u2019 section). Next, load all individual pathway database\npackages KEGG, Reactome, WikiPathways, and MSigDB  with <code>python3 -m compath populate</code>. This command assumes that\nthese packages are already installed in your Python environment. You can check the packages installed by running\n<code>python3 -m compath ls</code> in your terminal. Alternatively, you can populate each package independently by running:\n<code>python3 -m bio2bel_kegg populate</code>, <code>python3 -m bio2bel_reactome populate</code>,\n<code>python3 -m bio2bel_wikipathways populate</code>, or <code>python3 -m bio2bel_msig populate</code>.</p>\n</div>\n</div>\n<div id=\"mapping-across-gene-protein-identifiers\">\n<h2>Mapping across gene/protein identifiers</h2>\n<p>In order to load the gene sets from default packages, ComPath assumes that <a href=\"https://github.com/bio2bel/hgnc\" rel=\"nofollow\">Bio2BEL HGNC</a>\nhas been already installed and populated. This package is required to perform the mapping from multiple Protein/Gene identifiers to HGNC symbols. The following steps are needed to install Bio2BEL HGNC:</p>\n<ol>\n<li><code>python3 -m pip install bio2bel_hgnc</code></li>\n<li><code>python3 -m bio2bel_hgnc populate</code></li>\n</ol>\n</div>\n<div id=\"running-the-web-application\">\n<h2>Running the Web Application</h2>\n<p>The application can be run simply with</p>\n<pre>python3 -m compath web\n</pre>\n<p>This command the Flask development server locally, by default on port 5000 (<a href=\"http://localhost:5000\" rel=\"nofollow\">http://localhost:5000</a>).</p>\n</div>\n<div id=\"curation-interface\">\n<h2>Curation Interface</h2>\n<p>Load mappings between pathways directly from the <a href=\"https://github.com/compath/curation\" rel=\"nofollow\">ComPath Curation</a> package.</p>\n<pre>python3 -m compath load_mappings --connection<span class=\"o\">=</span><span class=\"s2\">\"sqlite:////data/bio2bel.db\"</span>\n</pre>\n<p>Load hierarchical mappings from a pathway database already containing that information (e.g., Reactome).</p>\n<pre>python3 -m compath load_hierarchies --connection<span class=\"o\">=</span><span class=\"s2\">\"sqlite:////data/bio2bel.db\"</span>\n</pre>\n<p>Create a user.</p>\n<pre>python3 -m compath manage --connection<span class=\"o\">=</span><span class=\"s2\">\"sqlite:////data/bio2bel.db\"</span> users make_user  <span class=\"s1\">'email'</span> <span class=\"s1\">'password'</span>\n</pre>\n<p>Make user admin.</p>\n<pre>python3 -m compath manage --connection<span class=\"o\">=</span><span class=\"s2\">\"sqlite:////data/bio2bel.db\"</span> users make_admin <span class=\"s1\">'email'</span>\n</pre>\n</div>\n<div id=\"docker-instructions\">\n<h2>Docker Instructions</h2>\n<div id=\"deployment-of-compath-with-docker\">\n<h3>Deployment of ComPath with Docker</h3>\n<ol>\n<li>Build the container with compath as a name.</li>\n</ol>\n<pre>docker build -t compath:0.0.1 .\n</pre>\n<ol>\n<li>Create the data container in which the data will be located.</li>\n</ol>\n<pre>docker create -v /data --name compath-data compath:0.0.1\n</pre>\n<ol>\n<li>Run docker container and connect it with the data container</li>\n</ol>\n<pre>docker run --name=compath --volumes-from compath-data --restart=always -d compath:0.0.1\n</pre>\n<p><tt>For admin purposes and deploying ComPath inside Fraunhofer you can also run the following command</tt></p>\n<pre>sh create_and_build_container.sh\n</pre>\n</div>\n<div id=\"load-data\">\n<h3>Load Data</h3>\n<p>Loads the KEGG, Reactome, and WikiPathways modules into ComPath.</p>\n<pre>docker <span class=\"nb\">exec</span> -t -it compath /opt/compath/src/bin/load_data.sh\n</pre>\n</div>\n<div id=\"restart-container\">\n<h3>Restart Container</h3>\n<p>Restarts the compath container</p>\n<pre>docker restart compath\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 5179360, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "2ca67cfc3027bc279b98fa29c8f82fd9", "sha256": "1ac4c95c4a7115fa8fa4f750b19b591f15639793ef27444e02131d68cd03d494"}, "downloads": -1, "filename": "compath-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "2ca67cfc3027bc279b98fa29c8f82fd9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 35554, "upload_time": "2018-05-07T16:37:30", "upload_time_iso_8601": "2018-05-07T16:37:30.523652Z", "url": "https://files.pythonhosted.org/packages/8a/51/81c9c35687315899a837503e74ec64d18af3077717e3cf957f0529caebae/compath-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1122886510404bf8a4c6d0ce686b5f2", "sha256": "d7d76ddc1c71227ef54d0758eedc82b809746bd2321f4d8e89fc145e8165c751"}, "downloads": -1, "filename": "compath-0.0.1.tar.gz", "has_sig": false, "md5_digest": "a1122886510404bf8a4c6d0ce686b5f2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7462011, "upload_time": "2018-05-07T16:39:56", "upload_time_iso_8601": "2018-05-07T16:39:56.425119Z", "url": "https://files.pythonhosted.org/packages/d2/5d/fdf998b086dcd18b313d565950cf1c2b876d64a20737773eeb2db6c49d8a/compath-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "173f7ed077a18fc36c123d74fe8ac658", "sha256": "55ce5acadbf510a6f509750c850f3c6395cac563362ace1db6b585440288bf60"}, "downloads": -1, "filename": "compath-0.0.2.tar.gz", "has_sig": false, "md5_digest": "173f7ed077a18fc36c123d74fe8ac658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13683030, "upload_time": "2018-06-06T12:19:24", "upload_time_iso_8601": "2018-06-06T12:19:24.252088Z", "url": "https://files.pythonhosted.org/packages/17/a3/268f21f8df2736af33479a6bb972c0215507e605ac13dff8a32f76f8e77d/compath-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "b88c5613e72d68955c6e71aa926ff0f8", "sha256": "3ac7e1c017f497b8d01956cea8672f30d89fc3e2b5d6043e5119088da16b7b01"}, "downloads": -1, "filename": "compath-0.0.3.tar.gz", "has_sig": false, "md5_digest": "b88c5613e72d68955c6e71aa926ff0f8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13686071, "upload_time": "2018-06-21T13:06:23", "upload_time_iso_8601": "2018-06-21T13:06:23.893760Z", "url": "https://files.pythonhosted.org/packages/8a/fc/1f1d9c634d5f8497912f050331e78cb034b2c5447bbda59a737df255411a/compath-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "54d9f15d5c5f19c6ee3cb66cc13db3fe", "sha256": "8dd9fd8839027702724e687a058d344718d2d333bb68a3a2ccaa739f12695408"}, "downloads": -1, "filename": "compath-0.0.4.tar.gz", "has_sig": false, "md5_digest": "54d9f15d5c5f19c6ee3cb66cc13db3fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13694013, "upload_time": "2018-07-03T12:42:09", "upload_time_iso_8601": "2018-07-03T12:42:09.586806Z", "url": "https://files.pythonhosted.org/packages/cf/e3/04ac28d76a48c43b8621f3a6d87e1d035dd3b54dfbae361c02823c6d81a9/compath-0.0.4.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "7ade835c8893e00a8acdf5cc880b9cc3", "sha256": "824c8344b1783c68e7bb5d496521f310e5e6f57e1636a53650f5c8abbfc73dcc"}, "downloads": -1, "filename": "compath-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7ade835c8893e00a8acdf5cc880b9cc3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7905226, "upload_time": "2018-08-13T16:09:34", "upload_time_iso_8601": "2018-08-13T16:09:34.878825Z", "url": "https://files.pythonhosted.org/packages/48/4d/f68d15b6c841760915a412a27ab6c209e8d59b5b582f9df9721536c897f3/compath-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "eee12dd7dd2a2094dbc2411329cec54b", "sha256": "e8a74989c2fd3520c9cfa8b878681ef5ebe92b746f7a46d6de0ee51f16197bf1"}, "downloads": -1, "filename": "compath-0.1.0.tar.gz", "has_sig": false, "md5_digest": "eee12dd7dd2a2094dbc2411329cec54b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7483957, "upload_time": "2018-08-13T16:10:02", "upload_time_iso_8601": "2018-08-13T16:10:02.445344Z", "url": "https://files.pythonhosted.org/packages/d6/51/510211cb3215e8d08769cb2ee6290a67b944c7a8063a7606116e9c561a52/compath-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "2ac9a0f67ddd2c65064fc7ffbc54f723", "sha256": "404a0913debe4f7cafb505637581262810de48488a9b31a571337678d1e820c5"}, "downloads": -1, "filename": "compath-0.1.1.tar.gz", "has_sig": false, "md5_digest": "2ac9a0f67ddd2c65064fc7ffbc54f723", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7717035, "upload_time": "2018-10-13T13:05:13", "upload_time_iso_8601": "2018-10-13T13:05:13.291227Z", "url": "https://files.pythonhosted.org/packages/51/68/5303f7c6b8f4b2f928e213caf55f0fbb8fa3f3b6e990cd77b0aa6040bdf4/compath-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "c7f755f96134bf8521053862738f5f36", "sha256": "03c9f2d57b439a7b13d786f03e6777624a8f918001a3084ca6ce62fdbe2a2515"}, "downloads": -1, "filename": "compath-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c7f755f96134bf8521053862738f5f36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7717303, "upload_time": "2019-04-23T21:37:22", "upload_time_iso_8601": "2019-04-23T21:37:22.067390Z", "url": "https://files.pythonhosted.org/packages/32/21/a77f052089b2e3526bd92e950eb117e317fdc75aca2c85ca63bc222be4e2/compath-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c7f755f96134bf8521053862738f5f36", "sha256": "03c9f2d57b439a7b13d786f03e6777624a8f918001a3084ca6ce62fdbe2a2515"}, "downloads": -1, "filename": "compath-0.1.2.tar.gz", "has_sig": false, "md5_digest": "c7f755f96134bf8521053862738f5f36", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7717303, "upload_time": "2019-04-23T21:37:22", "upload_time_iso_8601": "2019-04-23T21:37:22.067390Z", "url": "https://files.pythonhosted.org/packages/32/21/a77f052089b2e3526bd92e950eb117e317fdc75aca2c85ca63bc222be4e2/compath-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:16 2020"}