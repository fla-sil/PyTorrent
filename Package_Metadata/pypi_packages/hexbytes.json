{"info": {"author": "The Ethereum Foundation", "author_email": "snakecharmers@ethereum.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# HexBytes\n\n[![Join the chat at https://gitter.im/ethereum/web3.py](https://badges.gitter.im/ethereum/web3.py.svg)](https://gitter.im/ethereum/web3.py?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![Build Status](https://circleci.com/gh/ethereum/hexbytes.svg?style=shield)](https://circleci.com/gh/ethereum/hexbytes)\n[![PyPI version](https://badge.fury.io/py/hexbytes.svg)](https://badge.fury.io/py/hexbytes)\n[![Python versions](https://img.shields.io/pypi/pyversions/hexbytes.svg)](https://pypi.python.org/pypi/hexbytes)\n[![Docs build](https://readthedocs.org/projects/hexbytes/badge/?version=latest)](http://hexbytes.readthedocs.io/en/latest/?badge=latest)\n\n\nPython `bytes` subclass that decodes hex, with a readable console output\n\nRead more in the [documentation on ReadTheDocs](http://hexbytes.readthedocs.io/). [View the change log](http://hexbytes.readthedocs.io/en/latest/releases.html).\n\n## Quickstart\n\n```sh\npip install hexbytes\n```\n\n```py\n# convert from bytes to a prettier representation at the console\n>>> HexBytes(b\"\\x03\\x08wf\\xbfh\\xe7\\x86q\\xd1\\xeaCj\\xe0\\x87\\xdat\\xa1'a\\xda\\xc0 \\x01\\x1a\\x9e\\xdd\\xc4\\x90\\x0b\\xf1;\")\nHexBytes('0x03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b')\n\n# HexBytes accepts the hex string representation as well, ignoring case and 0x prefixes\n>>> hb = HexBytes('03087766BF68E78671D1EA436AE087DA74A12761DAC020011A9EDDC4900BF13B')\nHexBytes('0x03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b')\n\n# get the first byte:\n>>> hb[0]\n3\n\n# show how many bytes are in the value\n>>> len(hb)\n32\n\n# cast back to the basic `bytes` type\n>>> bytes(hb)\nb\"\\x03\\x08wf\\xbfh\\xe7\\x86q\\xd1\\xeaCj\\xe0\\x87\\xdat\\xa1'a\\xda\\xc0 \\x01\\x1a\\x9e\\xdd\\xc4\\x90\\x0b\\xf1;\"\n```\n\n## Developer Setup\n\nIf you would like to hack on hexbytes, please check out the [Snake Charmers\nTactical Manual](https://github.com/ethereum/snake-charmers-tactical-manual)\nfor information on how we do:\n\n- Testing\n- Pull Requests\n- Code Style\n- Documentation\n\n### Development Environment Setup\n\nYou can set up your dev environment with:\n\n```sh\ngit clone git@github.com:carver/hexbytes.git\ncd hexbytes\nvirtualenv -p python3 venv\n. venv/bin/activate\npip install -e .[dev]\n```\n\n### Testing Setup\n\nDuring development, you might like to have tests run on every file save.\n\nShow flake8 errors on file change:\n\n```sh\n# Test flake8\nwhen-changed -v -s -r -1 hexbytes/ tests/ -c \"clear; flake8 hexbytes tests && echo 'flake8 success' || echo 'error'\"\n```\n\nRun multi-process tests in one command, but without color:\n\n```sh\n# in the project root:\npytest --numprocesses=4 --looponfail --maxfail=1\n# the same thing, succinctly:\npytest -n 4 -f --maxfail=1\n```\n\nRun in one thread, with color and desktop notifications:\n\n```sh\ncd venv\nptw --onfail \"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on hexbytes failed'\" ../tests ../hexbytes\n```\n\n### Release setup\n\nFor Debian-like systems:\n```\napt install pandoc\n```\n\nTo release a new version:\n\n```sh\nmake release bump=$$VERSION_PART_TO_BUMP$$\n```\n\n#### How to bumpversion\n\nThe version format for this repo is `{major}.{minor}.{patch}` for stable, and\n`{major}.{minor}.{patch}-{stage}.{devnum}` for unstable (`stage` can be alpha or beta).\n\nTo issue the next version in line, specify which part to bump,\nlike `make release bump=minor` or `make release bump=devnum`. This is typically done from the\nmaster branch, except when releasing a beta (in which case the beta is released from master,\nand the previous stable branch is released from said branch). To include changes made with each\nrelease, update \"docs/releases.rst\" with the changes, and apply commit directly to master \nbefore release.\n\nIf you are in a beta version, `make release bump=stage` will switch to a stable.\n\nTo issue an unstable version when the current version is stable, specify the\nnew version explicitly, like `make release bump=\"--new-version 4.0.0-alpha.1 devnum\"`\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ethereum/hexbytes", "keywords": "ethereum", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "hexbytes", "package_url": "https://pypi.org/project/hexbytes/", "platform": "", "project_url": "https://pypi.org/project/hexbytes/", "project_urls": {"Homepage": "https://github.com/ethereum/hexbytes"}, "release_url": "https://pypi.org/project/hexbytes/0.2.0/", "requires_dist": ["eth-utils (<2,>=1.0.1)", "bumpversion (<1,>=0.5.3) ; extra == 'dev'", "pytest-watch (<5,>=4.1.0) ; extra == 'dev'", "wheel ; extra == 'dev'", "twine ; extra == 'dev'", "ipython ; extra == 'dev'", "pytest (>=3.6.0) ; extra == 'dev'", "pytest-xdist ; extra == 'dev'", "tox (<3,>=2.9.1) ; extra == 'dev'", "hypothesis (<4,>=3.44.24) ; extra == 'dev'", "eth-hash[pycryptodome] ; extra == 'dev'", "flake8 (==3.4.1) ; extra == 'dev'", "isort (<5,>=4.2.15) ; extra == 'dev'", "mypy (==0.701) ; extra == 'dev'", "pydocstyle (<4,>=3.0.0) ; extra == 'dev'", "Sphinx (<2,>=1.6.5) ; extra == 'dev'", "sphinx-rtd-theme (>=0.1.9) ; extra == 'dev'", "Sphinx (<2,>=1.6.5) ; extra == 'doc'", "sphinx-rtd-theme (>=0.1.9) ; extra == 'doc'", "flake8 (==3.4.1) ; extra == 'lint'", "isort (<5,>=4.2.15) ; extra == 'lint'", "mypy (==0.701) ; extra == 'lint'", "pydocstyle (<4,>=3.0.0) ; extra == 'lint'", "pytest (>=3.6.0) ; extra == 'test'", "pytest-xdist ; extra == 'test'", "tox (<3,>=2.9.1) ; extra == 'test'", "hypothesis (<4,>=3.44.24) ; extra == 'test'", "eth-hash[pycryptodome] ; extra == 'test'"], "requires_python": ">=3.6, <4", "summary": "hexbytes: Python `bytes` subclass that decodes hex, with a readable console output", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>HexBytes</h1>\n<p><a href=\"https://gitter.im/ethereum/web3.py?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\" rel=\"nofollow\"><img alt=\"Join the chat at https://gitter.im/ethereum/web3.py\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37b701cf1456eeea86ea95693158a9ba78773e25/68747470733a2f2f6261646765732e6769747465722e696d2f657468657265756d2f776562332e70792e737667\"></a>\n<a href=\"https://circleci.com/gh/ethereum/hexbytes\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/32739e388559f404f2b8471bb9e776c1f3f9f0e9/68747470733a2f2f636972636c6563692e636f6d2f67682f657468657265756d2f68657862797465732e7376673f7374796c653d736869656c64\"></a>\n<a href=\"https://badge.fury.io/py/hexbytes\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/722693c4451bf5081c4550c49f05b071a9599533/68747470733a2f2f62616467652e667572792e696f2f70792f68657862797465732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/hexbytes\" rel=\"nofollow\"><img alt=\"Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6034258654fc4c40c8b81655beb01c6e7ee87586/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f68657862797465732e737667\"></a>\n<a href=\"http://hexbytes.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Docs build\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3591f9a993b0b35943c9ed0b1f829750d4f542aa/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f68657862797465732f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<p>Python <code>bytes</code> subclass that decodes hex, with a readable console output</p>\n<p>Read more in the <a href=\"http://hexbytes.readthedocs.io/\" rel=\"nofollow\">documentation on ReadTheDocs</a>. <a href=\"http://hexbytes.readthedocs.io/en/latest/releases.html\" rel=\"nofollow\">View the change log</a>.</p>\n<h2>Quickstart</h2>\n<pre>pip install hexbytes\n</pre>\n<pre><span class=\"c1\"># convert from bytes to a prettier representation at the console</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">HexBytes</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s2\">\"</span><span class=\"se\">\\x03\\x08</span><span class=\"s2\">wf</span><span class=\"se\">\\xbf</span><span class=\"s2\">h</span><span class=\"se\">\\xe7\\x86</span><span class=\"s2\">q</span><span class=\"se\">\\xd1\\xea</span><span class=\"s2\">Cj</span><span class=\"se\">\\xe0\\x87\\xda</span><span class=\"s2\">t</span><span class=\"se\">\\xa1</span><span class=\"s2\">'a</span><span class=\"se\">\\xda\\xc0</span><span class=\"s2\"> </span><span class=\"se\">\\x01\\x1a\\x9e\\xdd\\xc4\\x90\\x0b\\xf1</span><span class=\"s2\">;\"</span><span class=\"p\">)</span>\n<span class=\"n\">HexBytes</span><span class=\"p\">(</span><span class=\"s1\">'0x03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># HexBytes accepts the hex string representation as well, ignoring case and 0x prefixes</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hb</span> <span class=\"o\">=</span> <span class=\"n\">HexBytes</span><span class=\"p\">(</span><span class=\"s1\">'03087766BF68E78671D1EA436AE087DA74A12761DAC020011A9EDDC4900BF13B'</span><span class=\"p\">)</span>\n<span class=\"n\">HexBytes</span><span class=\"p\">(</span><span class=\"s1\">'0x03087766bf68e78671d1ea436ae087da74a12761dac020011a9eddc4900bf13b'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># get the first byte:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">hb</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"mi\">3</span>\n\n<span class=\"c1\"># show how many bytes are in the value</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">hb</span><span class=\"p\">)</span>\n<span class=\"mi\">32</span>\n\n<span class=\"c1\"># cast back to the basic `bytes` type</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">bytes</span><span class=\"p\">(</span><span class=\"n\">hb</span><span class=\"p\">)</span>\n<span class=\"sa\">b</span><span class=\"s2\">\"</span><span class=\"se\">\\x03\\x08</span><span class=\"s2\">wf</span><span class=\"se\">\\xbf</span><span class=\"s2\">h</span><span class=\"se\">\\xe7\\x86</span><span class=\"s2\">q</span><span class=\"se\">\\xd1\\xea</span><span class=\"s2\">Cj</span><span class=\"se\">\\xe0\\x87\\xda</span><span class=\"s2\">t</span><span class=\"se\">\\xa1</span><span class=\"s2\">'a</span><span class=\"se\">\\xda\\xc0</span><span class=\"s2\"> </span><span class=\"se\">\\x01\\x1a\\x9e\\xdd\\xc4\\x90\\x0b\\xf1</span><span class=\"s2\">;\"</span>\n</pre>\n<h2>Developer Setup</h2>\n<p>If you would like to hack on hexbytes, please check out the <a href=\"https://github.com/ethereum/snake-charmers-tactical-manual\" rel=\"nofollow\">Snake Charmers\nTactical Manual</a>\nfor information on how we do:</p>\n<ul>\n<li>Testing</li>\n<li>Pull Requests</li>\n<li>Code Style</li>\n<li>Documentation</li>\n</ul>\n<h3>Development Environment Setup</h3>\n<p>You can set up your dev environment with:</p>\n<pre>git clone git@github.com:carver/hexbytes.git\n<span class=\"nb\">cd</span> hexbytes\nvirtualenv -p python3 venv\n. venv/bin/activate\npip install -e .<span class=\"o\">[</span>dev<span class=\"o\">]</span>\n</pre>\n<h3>Testing Setup</h3>\n<p>During development, you might like to have tests run on every file save.</p>\n<p>Show flake8 errors on file change:</p>\n<pre><span class=\"c1\"># Test flake8</span>\nwhen-changed -v -s -r -1 hexbytes/ tests/ -c <span class=\"s2\">\"clear; flake8 hexbytes tests &amp;&amp; echo 'flake8 success' || echo 'error'\"</span>\n</pre>\n<p>Run multi-process tests in one command, but without color:</p>\n<pre><span class=\"c1\"># in the project root:</span>\npytest --numprocesses<span class=\"o\">=</span><span class=\"m\">4</span> --looponfail --maxfail<span class=\"o\">=</span><span class=\"m\">1</span>\n<span class=\"c1\"># the same thing, succinctly:</span>\npytest -n <span class=\"m\">4</span> -f --maxfail<span class=\"o\">=</span><span class=\"m\">1</span>\n</pre>\n<p>Run in one thread, with color and desktop notifications:</p>\n<pre><span class=\"nb\">cd</span> venv\nptw --onfail <span class=\"s2\">\"notify-send -t 5000 'Test failure \u26a0\u26a0\u26a0\u26a0\u26a0' 'python 3 test on hexbytes failed'\"</span> ../tests ../hexbytes\n</pre>\n<h3>Release setup</h3>\n<p>For Debian-like systems:</p>\n<pre><code>apt install pandoc\n</code></pre>\n<p>To release a new version:</p>\n<pre>make release <span class=\"nv\">bump</span><span class=\"o\">=</span><span class=\"nv\">$$</span>VERSION_PART_TO_BUMP<span class=\"nv\">$$</span>\n</pre>\n<h4>How to bumpversion</h4>\n<p>The version format for this repo is <code>{major}.{minor}.{patch}</code> for stable, and\n<code>{major}.{minor}.{patch}-{stage}.{devnum}</code> for unstable (<code>stage</code> can be alpha or beta).</p>\n<p>To issue the next version in line, specify which part to bump,\nlike <code>make release bump=minor</code> or <code>make release bump=devnum</code>. This is typically done from the\nmaster branch, except when releasing a beta (in which case the beta is released from master,\nand the previous stable branch is released from said branch). To include changes made with each\nrelease, update \"docs/releases.rst\" with the changes, and apply commit directly to master\nbefore release.</p>\n<p>If you are in a beta version, <code>make release bump=stage</code> will switch to a stable.</p>\n<p>To issue an unstable version when the current version is stable, specify the\nnew version explicitly, like <code>make release bump=\"--new-version 4.0.0-alpha.1 devnum\"</code></p>\n\n          </div>"}, "last_serial": 5354272, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "b1b1498ee5a36fa684c440aae30177cd", "sha256": "27cc227ae95fc20d44325ac0329a0293d656a05230da079650705030c7d7a819"}, "downloads": -1, "filename": "hexbytes-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "b1b1498ee5a36fa684c440aae30177cd", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 6808, "upload_time": "2018-03-01T21:41:05", "upload_time_iso_8601": "2018-03-01T21:41:05.206099Z", "url": "https://files.pythonhosted.org/packages/18/bd/21697d93ee2153c8c12253262b740f571e94341d4cee411504032fff3f56/hexbytes-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50d2542e7c0a62a9b6cd03318781ed92", "sha256": "67e5608cb4a14d0a4ced058e595bb1f70c207ef2b5219fdc82af10e54bcf38de"}, "downloads": -1, "filename": "hexbytes-0.1.0.tar.gz", "has_sig": false, "md5_digest": "50d2542e7c0a62a9b6cd03318781ed92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3807, "upload_time": "2018-03-01T21:41:03", "upload_time_iso_8601": "2018-03-01T21:41:03.660568Z", "url": "https://files.pythonhosted.org/packages/81/15/fcd3a5ad583673ce52f0aac8e1246b91e7c88acbeae47863c30bfb264436/hexbytes-0.1.0.tar.gz", "yanked": false}], "0.1.0a1": [{"comment_text": "", "digests": {"md5": "a6c1830cc6353a8048ed11e2045f3acd", "sha256": "45c732b3141611326b1246809c56ba5e7e6e74177d69e2f15f489ed7d12a93df"}, "downloads": -1, "filename": "hexbytes-0.1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "a6c1830cc6353a8048ed11e2045f3acd", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 4948, "upload_time": "2018-01-25T00:59:08", "upload_time_iso_8601": "2018-01-25T00:59:08.575829Z", "url": "https://files.pythonhosted.org/packages/bb/4f/59cb3c9dbcb27916f57455cbcb64707122cbcffc6aec30183bf6c89eaa29/hexbytes-0.1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5c73d364c9a329253d88a67873c621b", "sha256": "da1fe061960fb6ab9b2a353c4ac4ff49082926e9d832a4ca7297a7cabbfd8fbb"}, "downloads": -1, "filename": "hexbytes-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "b5c73d364c9a329253d88a67873c621b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3055, "upload_time": "2018-01-25T00:59:07", "upload_time_iso_8601": "2018-01-25T00:59:07.140740Z", "url": "https://files.pythonhosted.org/packages/ca/98/afed8d5958e1b1111f19a2910d0d47edc05952d3aa629d777abcb47015fb/hexbytes-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "30c4a3a3cce45c674cc1a7f3b7bd89f8", "sha256": "95ef9679ca95b8965168617a2594158b71fa1a1fcae5f646ff3597e36280daaf"}, "downloads": -1, "filename": "hexbytes-0.1.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "30c4a3a3cce45c674cc1a7f3b7bd89f8", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6522, "upload_time": "2018-01-30T19:09:52", "upload_time_iso_8601": "2018-01-30T19:09:52.134165Z", "url": "https://files.pythonhosted.org/packages/33/3d/50a92b3ae206ddf18b5457393acb8164bb669cafd3bc68a921e44cad591c/hexbytes-0.1.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5153fe3e44eb89846534f09c2bc2b994", "sha256": "52d16aed1f765d399a1d1bf44e3db1af70723851038ed8c471279a553c6c7f6f"}, "downloads": -1, "filename": "hexbytes-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "5153fe3e44eb89846534f09c2bc2b994", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4050, "upload_time": "2018-01-30T19:09:50", "upload_time_iso_8601": "2018-01-30T19:09:50.152777Z", "url": "https://files.pythonhosted.org/packages/eb/84/2c04a629c21963e525a9aeb5bcf06ea86fac48795458e5fc1d6254870986/hexbytes-0.1.0a2.tar.gz", "yanked": false}], "0.1.0b0": [{"comment_text": "", "digests": {"md5": "6e0c91b42231fc640c2c025e9d833e8f", "sha256": "dea11e487b72dbba5218d9aa19cb38fb7784a1c83d38113ccf6cebd063e18c69"}, "downloads": -1, "filename": "hexbytes-0.1.0b0-py3-none-any.whl", "has_sig": false, "md5_digest": "6e0c91b42231fc640c2c025e9d833e8f", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 6524, "upload_time": "2018-01-30T22:55:03", "upload_time_iso_8601": "2018-01-30T22:55:03.986938Z", "url": "https://files.pythonhosted.org/packages/a4/21/d51d371a90703c28861250664189984dbf58010c99b55b2755b317b6da1b/hexbytes-0.1.0b0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a06acb14d255240c0d44fe6bfde3c63", "sha256": "08f6ace1710bc262c2bf97755b677d200b3cff51676bf225c7b8f0de7db91fbe"}, "downloads": -1, "filename": "hexbytes-0.1.0b0.tar.gz", "has_sig": false, "md5_digest": "7a06acb14d255240c0d44fe6bfde3c63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4045, "upload_time": "2018-01-30T22:55:02", "upload_time_iso_8601": "2018-01-30T22:55:02.648375Z", "url": "https://files.pythonhosted.org/packages/8d/55/5bfb25df1b2eae1d9cc6d0932895274260bdeea6b1ac7b5e23c71120bbcb/hexbytes-0.1.0b0.tar.gz", "yanked": false}], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "452ba90ed7af30f771cea33dcbde1ced", "sha256": "5948f6fd58cfb1159742013262cba11743883535689614aaaff95f23fd172d45"}, "downloads": -1, "filename": "hexbytes-0.1.0b1-py3-none-any.whl", "has_sig": false, "md5_digest": "452ba90ed7af30f771cea33dcbde1ced", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 6835, "upload_time": "2018-02-22T05:21:39", "upload_time_iso_8601": "2018-02-22T05:21:39.298647Z", "url": "https://files.pythonhosted.org/packages/e8/93/2d52a5eb301066b0d21942fd415b802b0a66803548c3093e56243f7730c7/hexbytes-0.1.0b1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "84e16f3c74db86e7d44d09848fa946e5", "sha256": "e7c4e9bc35a5d31b20cd6d758934b1cea0d91ce892595166fb859e266e7556e5"}, "downloads": -1, "filename": "hexbytes-0.1.0b1.tar.gz", "has_sig": false, "md5_digest": "84e16f3c74db86e7d44d09848fa946e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3812, "upload_time": "2018-02-22T05:21:37", "upload_time_iso_8601": "2018-02-22T05:21:37.971365Z", "url": "https://files.pythonhosted.org/packages/0a/28/d8809364ed236bccfae5c37dda8f2f56e0b4eabdc7c1f1cfb066f6645079/hexbytes-0.1.0b1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "fa91508a211f361bcf1def8c7bca7fbf", "sha256": "438ba9a28dfcda2c2276954b4310f9af1604fb198bfe5ac44c6518feaf6d376a"}, "downloads": -1, "filename": "hexbytes-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fa91508a211f361bcf1def8c7bca7fbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 5282, "upload_time": "2019-06-03T20:20:58", "upload_time_iso_8601": "2019-06-03T20:20:58.450786Z", "url": "https://files.pythonhosted.org/packages/4e/99/7e0c9a2f74f2a0b4512bd4491334537f4a3418a4daec6ae90ed5cd8d6b89/hexbytes-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "364095c5f1c786d9565c7d3c0978d523", "sha256": "9e8b3e3dc4a7de23c0cf1bb3c3edfcc1f0df4b78927bad63816c27a027b8b7d1"}, "downloads": -1, "filename": "hexbytes-0.2.0.tar.gz", "has_sig": false, "md5_digest": "364095c5f1c786d9565c7d3c0978d523", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 4587, "upload_time": "2019-06-03T20:20:59", "upload_time_iso_8601": "2019-06-03T20:20:59.828319Z", "url": "https://files.pythonhosted.org/packages/6c/96/c76cd573e7c3e38af32aa3e4ee9d9103efe33847b72f0507ac6d7a824307/hexbytes-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fa91508a211f361bcf1def8c7bca7fbf", "sha256": "438ba9a28dfcda2c2276954b4310f9af1604fb198bfe5ac44c6518feaf6d376a"}, "downloads": -1, "filename": "hexbytes-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "fa91508a211f361bcf1def8c7bca7fbf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6, <4", "size": 5282, "upload_time": "2019-06-03T20:20:58", "upload_time_iso_8601": "2019-06-03T20:20:58.450786Z", "url": "https://files.pythonhosted.org/packages/4e/99/7e0c9a2f74f2a0b4512bd4491334537f4a3418a4daec6ae90ed5cd8d6b89/hexbytes-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "364095c5f1c786d9565c7d3c0978d523", "sha256": "9e8b3e3dc4a7de23c0cf1bb3c3edfcc1f0df4b78927bad63816c27a027b8b7d1"}, "downloads": -1, "filename": "hexbytes-0.2.0.tar.gz", "has_sig": false, "md5_digest": "364095c5f1c786d9565c7d3c0978d523", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6, <4", "size": 4587, "upload_time": "2019-06-03T20:20:59", "upload_time_iso_8601": "2019-06-03T20:20:59.828319Z", "url": "https://files.pythonhosted.org/packages/6c/96/c76cd573e7c3e38af32aa3e4ee9d9103efe33847b72f0507ac6d7a824307/hexbytes-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:28 2020"}