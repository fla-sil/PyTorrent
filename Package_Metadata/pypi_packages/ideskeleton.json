{"info": {"author": "Javier Ruiz Aranguren", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Text Editors :: Integrated Development Environments (IDE)"], "description": "ideskeleton\n===========\n\n.. image:: https://travis-ci.org/jruizaranguren/ideskeleton.svg\n    :target: https://travis-ci.org/jruizaranguren/ideskeleton\n\nScaffolding of IDE project files such as Visual Studio from Python existing folder structure.\n\nRationale\n---------\nIt is common practice in Python open source projects not relying on any IDE. \nThis tool allows you to have a clean folder structure that can be shared in GIT repositories\nwhile being able to work with your favorite IDE in your workstation.\n\nInstall\n-------\n\n\t``pip install ideskeleton`` \n\nBasic usage\n-----------\nYou can execute the package from the command line::\n\n\tpython -m ideskeleton -f your-full-path\n\nThis will generate all needed files such as solution and project files for the Visual Studio case.\n\nOff course, you can also import the package and customize the behavior as desired::\n\n\tfrom ideskeleton import builder\n\tbuilder.build(\"your_path\", overwrite=True, ide=\"vstudio\")\n\nFor normal use, all you have to do::\n\n\timport ideskeleton\n\nThis will import:\n\n- The **build** function that allows to build the files needed for IDE\n\nCommand line options\n--------------------\n\nIn order to build the IDE files from command line you just type::\n\n\tpython -m ideskeleton [-h] [-f] [-i {vstudio}] source_path\n\n**positional arguments:**\n  source_path:          path of the folder structure used to generate the IDE                         skeleton\n\n**optional arguments:**\n  -h, --help\t\t\tshow this help message and exit\n  -f, --force\t\t\tforce overwrite existing solution and project files\n  -i, --ide\t\t\t\tchoose IDE {vstudio}\n\nAPI docs\n--------------\n\nCan find api documentation at readthedocs_.\n\n.. _readthedocs: http://ideskeleton.readthedocs.org/en/latest/\n\nImportant notes\n---------------\nJust Visual Studio is supported so far, although adding new IDE's is pretty easy.\n\nA number of opinionated conventions are enforced:\n\n- .gitignore file is used to decide which files to consider\n- Just ``*.py`` files are added with compile action.\n- Any not ignored folder in the first level is added as a python project.\n- Any not ignored folder in higher than first level are added as project folder.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/jruizaranguren/ideskeleton", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ideskeleton", "package_url": "https://pypi.org/project/ideskeleton/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ideskeleton/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/jruizaranguren/ideskeleton"}, "release_url": "https://pypi.org/project/ideskeleton/0.13/", "requires_dist": null, "requires_python": null, "summary": "Scaffolding of IDE project files such as Visual Studio from Python existingfolder structure", "version": "0.13", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/jruizaranguren/ideskeleton\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/jruizaranguren/ideskeleton.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/25883e5b1c141fd21de29de7ca55259cec153a63/68747470733a2f2f7472617669732d63692e6f72672f6a7275697a6172616e677572656e2f696465736b656c65746f6e2e737667\"></a>\n<p>Scaffolding of IDE project files such as Visual Studio from Python existing folder structure.</p>\n<div id=\"rationale\">\n<h2>Rationale</h2>\n<p>It is common practice in Python open source projects not relying on any IDE.\nThis tool allows you to have a clean folder structure that can be shared in GIT repositories\nwhile being able to work with your favorite IDE in your workstation.</p>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<blockquote>\n<tt>pip install ideskeleton</tt></blockquote>\n</div>\n<div id=\"basic-usage\">\n<h2>Basic usage</h2>\n<p>You can execute the package from the command line:</p>\n<pre>python -m ideskeleton -f your-full-path\n</pre>\n<p>This will generate all needed files such as solution and project files for the Visual Studio case.</p>\n<p>Off course, you can also import the package and customize the behavior as desired:</p>\n<pre>from ideskeleton import builder\nbuilder.build(\"your_path\", overwrite=True, ide=\"vstudio\")\n</pre>\n<p>For normal use, all you have to do:</p>\n<pre>import ideskeleton\n</pre>\n<p>This will import:</p>\n<ul>\n<li>The <strong>build</strong> function that allows to build the files needed for IDE</li>\n</ul>\n</div>\n<div id=\"command-line-options\">\n<h2>Command line options</h2>\n<p>In order to build the IDE files from command line you just type:</p>\n<pre>python -m ideskeleton [-h] [-f] [-i {vstudio}] source_path\n</pre>\n<dl>\n<dt><strong>positional arguments:</strong></dt>\n<dd>source_path:          path of the folder structure used to generate the IDE                         skeleton</dd>\n<dt><strong>optional arguments:</strong></dt>\n<dd><table>\n<col>\n<col>\n<tbody>\n<tr><td>\n<kbd><span class=\"option\">-h</span>, <span class=\"option\">--help</span></kbd></td>\n<td>show this help message and exit</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-f</span>, <span class=\"option\">--force</span></kbd></td>\n<td>force overwrite existing solution and project files</td></tr>\n<tr><td>\n<kbd><span class=\"option\">-i</span>, <span class=\"option\">--ide</span></kbd></td>\n<td>choose IDE {vstudio}</td></tr>\n</tbody>\n</table>\n</dd>\n</dl>\n</div>\n<div id=\"api-docs\">\n<h2>API docs</h2>\n<p>Can find api documentation at <a href=\"http://ideskeleton.readthedocs.org/en/latest/\" rel=\"nofollow\">readthedocs</a>.</p>\n</div>\n<div id=\"important-notes\">\n<h2>Important notes</h2>\n<p>Just Visual Studio is supported so far, although adding new IDE\u2019s is pretty easy.</p>\n<p>A number of opinionated conventions are enforced:</p>\n<ul>\n<li>.gitignore file is used to decide which files to consider</li>\n<li>Just <tt>*.py</tt> files are added with compile action.</li>\n<li>Any not ignored folder in the first level is added as a python project.</li>\n<li>Any not ignored folder in higher than first level are added as project folder.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 1748759, "releases": {"0.13": [{"comment_text": "", "digests": {"md5": "13578e70c78b3403aee59a5390802fb1", "sha256": "a5f9a9fe98d69e7add2cce2b5ed3157e7f14104a23bc96369ef2e1d9c442c38f"}, "downloads": -1, "filename": "ideskeleton-0.13.zip", "has_sig": false, "md5_digest": "13578e70c78b3403aee59a5390802fb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28372, "upload_time": "2015-10-02T08:14:29", "upload_time_iso_8601": "2015-10-02T08:14:29.116163Z", "url": "https://files.pythonhosted.org/packages/14/f4/350a0ff2fc16e1bfaac06d87728704f7384c7519ca384d22666ad58e7cb4/ideskeleton-0.13.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "13578e70c78b3403aee59a5390802fb1", "sha256": "a5f9a9fe98d69e7add2cce2b5ed3157e7f14104a23bc96369ef2e1d9c442c38f"}, "downloads": -1, "filename": "ideskeleton-0.13.zip", "has_sig": false, "md5_digest": "13578e70c78b3403aee59a5390802fb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28372, "upload_time": "2015-10-02T08:14:29", "upload_time_iso_8601": "2015-10-02T08:14:29.116163Z", "url": "https://files.pythonhosted.org/packages/14/f4/350a0ff2fc16e1bfaac06d87728704f7384c7519ca384d22666ad58e7cb4/ideskeleton-0.13.zip", "yanked": false}], "timestamp": "Fri May  8 00:48:54 2020"}