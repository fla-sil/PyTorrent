{"info": {"author": "Maarten De Paepe", "author_email": "\"maarten.de.paepe@gmail.com\"", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: Python", "Programming Language :: Python :: 3.6"], "description": "# flask-restless-client\n\n[![Build Status](https://travis-ci.com/maarten-dp/flask-restless-client.svg?branch=master)](https://travis-ci.com/maarten-dp/flask-restless-client)\n[![Codecov](https://codecov.io/gh/maarten-dp/flask-restless-client/branch/master/graph/badge.svg)](https://codecov.io/gh/maarten-dp/flask-restless-client)\n[![PyPI](https://badge.fury.io/py/flask-restless-client.svg)](https://pypi.python.org/pypi/flask-restless-client/)\n\n## Intoduction\n\nThe flask-restless-client is the second part of a two part library. The first being the [flask-restless-datamodel](https://github.com/maarten-dp/flask-restless-datamodel/tree/master). Together with the flask-restless-datamodel, this library serves as a goal to provide a CRUD/RPC client for Flask/SQLAlchemy applications, over HTTP using flask-restless.\n\nTaking advantage of the easy integration offered by [Flask-Restless](https://github.com/jfinkels/flask-restless) to expose a REST CRUD interface over HTTP, this library uses its power to provide a dynamic python client. Reading the data format generated by the flask-restless-datamodel, the restless-client is able to build itself and provide you with objects that aim to mirror an SQLAlchemy-like interface on the client side.\n\nThis includes RPC possibilities to run object methods of the SQLA models defined server-side. Some setup is required to achieve a smooth interaction with the RPC part of this library.\n\nThe developer will be required to:\n- write serializers from and to python natives to transfer complex objects to the server\n- overwrite authentication method if the chosen authentication method is not supported by this library.\n\nAs such, it's advised to use this library as a base for a custom client for your application.\nMost likely, it will be a thin layer on top of the flask-restless-client setting up some configuration.\n\n\n## Installation\n\n``` bash\n    pip install flask-restless-client\n```\n\n## Setting up the client\n\n### Exposing your model server side\n\nThe first step is to enable the flask-restless-datamodel on the server side.\nYou can visit [flask-restless-datamodel](https://github.com/maarten-dp/flask-restless-datamodel/tree/master) to see how to do this.\n\n### Authenticating\n\nAs this library is intented to be useable out of the box, some built in authentication is provided.\nCurrent out of the box authentication types are Bearer and Basic Authentication.\n\nBy default, the client will use the Bearer session, but the Basic Authentication session is importable from `restless_client.ext.auth`.\n\nYou are also able to give your own (pre-authenticated) session as a parameter when initializing the client.\n\nEnvironment variables can be set to speed up authentication setup. Using the prefix `RESTLESS_CLIENT_` you can set anything involving authentication, including setting which type of session to use.\n\n### (De)Serialization of complex objects\n\nPart of supporting an RPC-like client is making sure the objects arrive at their destination in the same way they are sent from the source. We all know deserialisation isn't always true to what you initially put in. Therefore you can register your own (de)serializer for complex objects.\n\n```python\nfrom cereal_lazer import register_class\nimport pandas as pd\n\nregister_class(\n    'DataFrame', # Register the object as this name\n    pd.DataFrame, # Register the class\n    lambda x: x.to_json(), # Register a serializer\n    lambda x: pd.read_json(x) # Register a deserializer\n)\n```\n\nThese objects are registered in a global context using the `cereal_lazer` library. The client is then using the library to (de)serialize.\n\n## Using the client\n\n\nIt's important tot re-iterate on the fact that this is a self-building client. That means the way you interract with this client depends on external input.\nTo have a practical example, consider the following SQLA models defined server-side:\n\n```python\nclass Person(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.Unicode, unique=True)\n    birth_date = db.Column(db.Date)\n\nclass Computer(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.Unicode, unique=True)\n    vendor = db.Column(db.Unicode)\n    purchase_time = db.Column(db.DateTime)\n    owner_id = db.Column(db.Integer, db.ForeignKey('person.id'))\n    owner = db.relationship(\n        'Person', backref=db.backref('computers', lazy='dynamic'))\n    owner_name = association_proxy('owner', 'name')\n    peers = association_proxy('owner', 'computers')\n```\n\nBased on these models, flask-restless-datamodel will generate the input for the client to build itself, allowing for an SQLA-like interface.\n\nif we hook up our client to our server app, we'll be able to do all neat kinds of stuff\n\n### C is for Crayon\n\nNow that we have some server side models exposed, the models will be available on the client side and we can jump right in and create some objects.\n\n```python\nfrom restless_client import Client\n\nc = Client(url='http://localhost:5000/api')\nmaurice = c.Person(name='Maurice')\nroy = c.Person(name='Roy')\n\nbeast = c.Computer(name='TheBeast', vendor='Pear', owner=maurice)\nserver = c.Computer(name='Server', vendor='Pingu', owner=maurice)\npc = c.Computer(name='pc', vendor='Doors', owner=roy)\n\n# Save objects on the server\nc.save()\n\n# Alternatively, you can save on a per-instance basis\nbeast.save()\n```\nNote that if we disregard the `c.save()` statement, and run `beast.save()` instead, that the `maurice` instance is a dependency of `beast.owner` and will be unsaved at the time we call `beast.save()`.\nThe client should be able to resolve these unsaved dependencies and will save them first\n\n### R is for Rainbow\n\nLoading objects can be done in serveral ways. The object models have a `query` attribute that is accessible to perform all read operations\n\n#### Getting all instances from a given class\n\n```python\neveryone = c.Person.query.all()\n```\n\n#### Getting an instance based on the id\n\n```python\nmaurice = c.Person.query.get(1)\n```\n\n#### Shorthand for all/get\n\nDue to `all` and `get` being often used methods, they have been enabled with a shorthand on the object model itself\n\n```python\neveryone = c.Person.all()\nmaurice = c.Person.get(1)\n```\n\n#### Filtering\n\n```python\nmaurice = c.Person.query.filter(c.Person.name == 'Maurice')\nmaurice = c.Person.query.filter_by(name='Maurice')\n# limit the results to 3\nsome_people = c.Person.query.limit(3).all()\n# offset results, ignoring the first 2\nsome_people = c.Person.query.offset(2).all()\n# order by name\neveryone = c.Person.query.order_by(name='asc').all()\n# get the first instance\nmaurice = c.Person.query.first()\n# get the last instance\nmaurice = c.Person.query.last()\n# expect only one result\nmaurice = c.Person.query.one()\n# expect only one result, or no result\nmaurice = c.Person.query.one_or_none()\n\n# filtering over relations, get all people that own a computer with Pear vendor\nmaurice = c.Person.query.filter(c.Person.computers.has_(c.Computer.vendor == 'Pear'))\n```\n\n### U is for you and me\n\nUpdating is just as easy as creating objects. The library is built in a way that it flags dirty attributes, and only sends the necessary data to the server.\n\n```python\ncmptr = c.Computer.query.one()\ncmptr.vendor = 'Robot'\ncmptr.save()\n```\n\n\n### D is for ... delete\n\n```python\ncmptr = c.Computer.query.one()\ncmptr.delete()\n```\n\nNote that executing `delete` is instant, and calling the save is not needed.\n\n## Running remote object methods\n\nAs promised, this library provides an RPC-like feature that allows you to run the methods defined on your SQLA models. It's nearly nowhere as advanced as other RPCs out there, but it at least provides a way to emulate the interaction on models as if you were working with them on a server context.\n\nThe sending and receiving of complex objects does require some setup, but once this is done, doing remote method calls should run smoothly. (Although there are plenty of scenarios where remote execution might fail).\n\nAnyway here's wonderwall\n\nOn the server we would define a model with the following method\n```python\nclass Person(db.Model):\n    id = db.Column(db.Integer, primary_key=True)\n    name = db.Column(db.Unicode, unique=True)\n\n    def speak(self, what_to_say):\n        return \"Errr... uh... ehm... {}?\".format(what_to_say)\n```\n\nWhich we can then remotely run by doing\n```python\nmaurice = c.Person.query.filter(c.Person.name == 'Maurice')\nprint(maurice.speak(\"I'd rather send an email\"))\n```\n\n### Future plans for running remote methods\n\nCurrently the client will crash if it tries to (de)serialize a complex object that is not yet registered.\nGoing forward, it would be desired to apply a \"no-crash\" policy. The idea behind this is that the data is there, and it's not because (de)serialization failed, that the program should halt execution.\n\nIf a (de)serializer was not registered for a complex object, one will be emulated from the data available. Accessing data that is known to it will allow you to interact with it without issue, accessing functions or data that is unknown to the emulated object will result in an exception.\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maarten-dp/flask-restless-client", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "flask-restless-client", "package_url": "https://pypi.org/project/flask-restless-client/", "platform": "", "project_url": "https://pypi.org/project/flask-restless-client/", "project_urls": {"Homepage": "https://github.com/maarten-dp/flask-restless-client"}, "release_url": "https://pypi.org/project/flask-restless-client/0.4.9/", "requires_dist": ["cereal-lazer", "crayons", "dateutils", "ordered-set (==3.1)", "packaging", "pbr", "prettytable", "requests"], "requires_python": "", "summary": "CRUD/RPC client over flask-restless", "version": "0.4.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flask-restless-client</h1>\n<p><a href=\"https://travis-ci.com/maarten-dp/flask-restless-client\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8562a1e5f594e97182a87706c6d076ff0198ce8c/68747470733a2f2f7472617669732d63692e636f6d2f6d61617274656e2d64702f666c61736b2d726573746c6573732d636c69656e742e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/maarten-dp/flask-restless-client\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c700c7068975c168fa49a86801e839d5b0c3eca1/68747470733a2f2f636f6465636f762e696f2f67682f6d61617274656e2d64702f666c61736b2d726573746c6573732d636c69656e742f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/flask-restless-client/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/406888791f349cb0b5d0beb42a53f8b2d938e8fe/68747470733a2f2f62616467652e667572792e696f2f70792f666c61736b2d726573746c6573732d636c69656e742e737667\"></a></p>\n<h2>Intoduction</h2>\n<p>The flask-restless-client is the second part of a two part library. The first being the <a href=\"https://github.com/maarten-dp/flask-restless-datamodel/tree/master\" rel=\"nofollow\">flask-restless-datamodel</a>. Together with the flask-restless-datamodel, this library serves as a goal to provide a CRUD/RPC client for Flask/SQLAlchemy applications, over HTTP using flask-restless.</p>\n<p>Taking advantage of the easy integration offered by <a href=\"https://github.com/jfinkels/flask-restless\" rel=\"nofollow\">Flask-Restless</a> to expose a REST CRUD interface over HTTP, this library uses its power to provide a dynamic python client. Reading the data format generated by the flask-restless-datamodel, the restless-client is able to build itself and provide you with objects that aim to mirror an SQLAlchemy-like interface on the client side.</p>\n<p>This includes RPC possibilities to run object methods of the SQLA models defined server-side. Some setup is required to achieve a smooth interaction with the RPC part of this library.</p>\n<p>The developer will be required to:</p>\n<ul>\n<li>write serializers from and to python natives to transfer complex objects to the server</li>\n<li>overwrite authentication method if the chosen authentication method is not supported by this library.</li>\n</ul>\n<p>As such, it's advised to use this library as a base for a custom client for your application.\nMost likely, it will be a thin layer on top of the flask-restless-client setting up some configuration.</p>\n<h2>Installation</h2>\n<pre>    pip install flask-restless-client\n</pre>\n<h2>Setting up the client</h2>\n<h3>Exposing your model server side</h3>\n<p>The first step is to enable the flask-restless-datamodel on the server side.\nYou can visit <a href=\"https://github.com/maarten-dp/flask-restless-datamodel/tree/master\" rel=\"nofollow\">flask-restless-datamodel</a> to see how to do this.</p>\n<h3>Authenticating</h3>\n<p>As this library is intented to be useable out of the box, some built in authentication is provided.\nCurrent out of the box authentication types are Bearer and Basic Authentication.</p>\n<p>By default, the client will use the Bearer session, but the Basic Authentication session is importable from <code>restless_client.ext.auth</code>.</p>\n<p>You are also able to give your own (pre-authenticated) session as a parameter when initializing the client.</p>\n<p>Environment variables can be set to speed up authentication setup. Using the prefix <code>RESTLESS_CLIENT_</code> you can set anything involving authentication, including setting which type of session to use.</p>\n<h3>(De)Serialization of complex objects</h3>\n<p>Part of supporting an RPC-like client is making sure the objects arrive at their destination in the same way they are sent from the source. We all know deserialisation isn't always true to what you initially put in. Therefore you can register your own (de)serializer for complex objects.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">cereal_lazer</span> <span class=\"kn\">import</span> <span class=\"n\">register_class</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pandas</span> <span class=\"k\">as</span> <span class=\"nn\">pd</span>\n\n<span class=\"n\">register_class</span><span class=\"p\">(</span>\n    <span class=\"s1\">'DataFrame'</span><span class=\"p\">,</span> <span class=\"c1\"># Register the object as this name</span>\n    <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">DataFrame</span><span class=\"p\">,</span> <span class=\"c1\"># Register the class</span>\n    <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">(),</span> <span class=\"c1\"># Register a serializer</span>\n    <span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">pd</span><span class=\"o\">.</span><span class=\"n\">read_json</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"c1\"># Register a deserializer</span>\n<span class=\"p\">)</span>\n</pre>\n<p>These objects are registered in a global context using the <code>cereal_lazer</code> library. The client is then using the library to (de)serialize.</p>\n<h2>Using the client</h2>\n<p>It's important tot re-iterate on the fact that this is a self-building client. That means the way you interract with this client depends on external input.\nTo have a practical example, consider the following SQLA models defined server-side:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Unicode</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">birth_date</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Date</span><span class=\"p\">)</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Computer</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Unicode</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">vendor</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Unicode</span><span class=\"p\">)</span>\n    <span class=\"n\">purchase_time</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">DateTime</span><span class=\"p\">)</span>\n    <span class=\"n\">owner_id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">ForeignKey</span><span class=\"p\">(</span><span class=\"s1\">'person.id'</span><span class=\"p\">))</span>\n    <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">relationship</span><span class=\"p\">(</span>\n        <span class=\"s1\">'Person'</span><span class=\"p\">,</span> <span class=\"n\">backref</span><span class=\"o\">=</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">backref</span><span class=\"p\">(</span><span class=\"s1\">'computers'</span><span class=\"p\">,</span> <span class=\"n\">lazy</span><span class=\"o\">=</span><span class=\"s1\">'dynamic'</span><span class=\"p\">))</span>\n    <span class=\"n\">owner_name</span> <span class=\"o\">=</span> <span class=\"n\">association_proxy</span><span class=\"p\">(</span><span class=\"s1\">'owner'</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">)</span>\n    <span class=\"n\">peers</span> <span class=\"o\">=</span> <span class=\"n\">association_proxy</span><span class=\"p\">(</span><span class=\"s1\">'owner'</span><span class=\"p\">,</span> <span class=\"s1\">'computers'</span><span class=\"p\">)</span>\n</pre>\n<p>Based on these models, flask-restless-datamodel will generate the input for the client to build itself, allowing for an SQLA-like interface.</p>\n<p>if we hook up our client to our server app, we'll be able to do all neat kinds of stuff</p>\n<h3>C is for Crayon</h3>\n<p>Now that we have some server side models exposed, the models will be available on the client side and we can jump right in and create some objects.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">restless_client</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"n\">c</span> <span class=\"o\">=</span> <span class=\"n\">Client</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"o\">=</span><span class=\"s1\">'http://localhost:5000/api'</span><span class=\"p\">)</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Maurice'</span><span class=\"p\">)</span>\n<span class=\"n\">roy</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Roy'</span><span class=\"p\">)</span>\n\n<span class=\"n\">beast</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'TheBeast'</span><span class=\"p\">,</span> <span class=\"n\">vendor</span><span class=\"o\">=</span><span class=\"s1\">'Pear'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">maurice</span><span class=\"p\">)</span>\n<span class=\"n\">server</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Server'</span><span class=\"p\">,</span> <span class=\"n\">vendor</span><span class=\"o\">=</span><span class=\"s1\">'Pingu'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">maurice</span><span class=\"p\">)</span>\n<span class=\"n\">pc</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'pc'</span><span class=\"p\">,</span> <span class=\"n\">vendor</span><span class=\"o\">=</span><span class=\"s1\">'Doors'</span><span class=\"p\">,</span> <span class=\"n\">owner</span><span class=\"o\">=</span><span class=\"n\">roy</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Save objects on the server</span>\n<span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Alternatively, you can save on a per-instance basis</span>\n<span class=\"n\">beast</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<p>Note that if we disregard the <code>c.save()</code> statement, and run <code>beast.save()</code> instead, that the <code>maurice</code> instance is a dependency of <code>beast.owner</code> and will be unsaved at the time we call <code>beast.save()</code>.\nThe client should be able to resolve these unsaved dependencies and will save them first</p>\n<h3>R is for Rainbow</h3>\n<p>Loading objects can be done in serveral ways. The object models have a <code>query</code> attribute that is accessible to perform all read operations</p>\n<h4>Getting all instances from a given class</h4>\n<pre><span class=\"n\">everyone</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n</pre>\n<h4>Getting an instance based on the id</h4>\n<pre><span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h4>Shorthand for all/get</h4>\n<p>Due to <code>all</code> and <code>get</code> being often used methods, they have been enabled with a shorthand on the object model itself</p>\n<pre><span class=\"n\">everyone</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n</pre>\n<h4>Filtering</h4>\n<pre><span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">'Maurice'</span><span class=\"p\">)</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter_by</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Maurice'</span><span class=\"p\">)</span>\n<span class=\"c1\"># limit the results to 3</span>\n<span class=\"n\">some_people</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">limit</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"c1\"># offset results, ignoring the first 2</span>\n<span class=\"n\">some_people</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">offset</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"c1\"># order by name</span>\n<span class=\"n\">everyone</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">order_by</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'asc'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">()</span>\n<span class=\"c1\"># get the first instance</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">first</span><span class=\"p\">()</span>\n<span class=\"c1\"># get the last instance</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">last</span><span class=\"p\">()</span>\n<span class=\"c1\"># expect only one result</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">()</span>\n<span class=\"c1\"># expect only one result, or no result</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">one_or_none</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># filtering over relations, get all people that own a computer with Pear vendor</span>\n<span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">computers</span><span class=\"o\">.</span><span class=\"n\">has_</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">==</span> <span class=\"s1\">'Pear'</span><span class=\"p\">))</span>\n</pre>\n<h3>U is for you and me</h3>\n<p>Updating is just as easy as creating objects. The library is built in a way that it flags dirty attributes, and only sends the necessary data to the server.</p>\n<pre><span class=\"n\">cmptr</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">()</span>\n<span class=\"n\">cmptr</span><span class=\"o\">.</span><span class=\"n\">vendor</span> <span class=\"o\">=</span> <span class=\"s1\">'Robot'</span>\n<span class=\"n\">cmptr</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<h3>D is for ... delete</h3>\n<pre><span class=\"n\">cmptr</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Computer</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">one</span><span class=\"p\">()</span>\n<span class=\"n\">cmptr</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">()</span>\n</pre>\n<p>Note that executing <code>delete</code> is instant, and calling the save is not needed.</p>\n<h2>Running remote object methods</h2>\n<p>As promised, this library provides an RPC-like feature that allows you to run the methods defined on your SQLA models. It's nearly nowhere as advanced as other RPCs out there, but it at least provides a way to emulate the interaction on models as if you were working with them on a server context.</p>\n<p>The sending and receiving of complex objects does require some setup, but once this is done, doing remote method calls should run smoothly. (Although there are plenty of scenarios where remote execution might fail).</p>\n<p>Anyway here's wonderwall</p>\n<p>On the server we would define a model with the following method</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Unicode</span><span class=\"p\">,</span> <span class=\"n\">unique</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">speak</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">what_to_say</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s2\">\"Errr... uh... ehm... </span><span class=\"si\">{}</span><span class=\"s2\">?\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">what_to_say</span><span class=\"p\">)</span>\n</pre>\n<p>Which we can then remotely run by doing</p>\n<pre><span class=\"n\">maurice</span> <span class=\"o\">=</span> <span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"o\">.</span><span class=\"n\">Person</span><span class=\"o\">.</span><span class=\"n\">name</span> <span class=\"o\">==</span> <span class=\"s1\">'Maurice'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">maurice</span><span class=\"o\">.</span><span class=\"n\">speak</span><span class=\"p\">(</span><span class=\"s2\">\"I'd rather send an email\"</span><span class=\"p\">))</span>\n</pre>\n<h3>Future plans for running remote methods</h3>\n<p>Currently the client will crash if it tries to (de)serialize a complex object that is not yet registered.\nGoing forward, it would be desired to apply a \"no-crash\" policy. The idea behind this is that the data is there, and it's not because (de)serialization failed, that the program should halt execution.</p>\n<p>If a (de)serializer was not registered for a complex object, one will be emulated from the data available. Accessing data that is known to it will allow you to interact with it without issue, accessing functions or data that is unknown to the emulated object will result in an exception.</p>\n\n          </div>"}, "last_serial": 7136094, "releases": {"0.0.10": [{"comment_text": "", "digests": {"md5": "46708e1d94355474dca73eadba7eebaa", "sha256": "08881449610c711beb9cf936ba25b6eca3e47e300930f2ef08078e144b471814"}, "downloads": -1, "filename": "flask_restless_client-0.0.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "46708e1d94355474dca73eadba7eebaa", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19676, "upload_time": "2019-12-17T12:56:24", "upload_time_iso_8601": "2019-12-17T12:56:24.305645Z", "url": "https://files.pythonhosted.org/packages/b5/5c/06949a0c542e611c55cde8cacb5543fe8e56e31792270b6572142be63d4b/flask_restless_client-0.0.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "51d5e17aec238a905447b6131d52709a", "sha256": "b51fb59a326bbe3e54dc7f3d0a694baa00af46cae9dacead1964123e7415a59a"}, "downloads": -1, "filename": "flask-restless-client-0.0.10.tar.gz", "has_sig": false, "md5_digest": "51d5e17aec238a905447b6131d52709a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24684, "upload_time": "2019-12-17T12:56:25", "upload_time_iso_8601": "2019-12-17T12:56:25.657249Z", "url": "https://files.pythonhosted.org/packages/70/56/180f7b83a17507e5f75a512ac45d8bd42708a09ffb816bbd980346ece8fe/flask-restless-client-0.0.10.tar.gz", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "dd94dd39abf7651d00e8d621f8d1c2eb", "sha256": "41902804360450b371b4ff0862180fd87014938b0754678e01eafb3138a4299d"}, "downloads": -1, "filename": "flask_restless_client-0.0.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "dd94dd39abf7651d00e8d621f8d1c2eb", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19676, "upload_time": "2019-12-17T15:53:47", "upload_time_iso_8601": "2019-12-17T15:53:47.329641Z", "url": "https://files.pythonhosted.org/packages/b2/e6/d836691cdcbd2f1f4d957170fed084b5fb0114f26ef5663dc6e46de00224/flask_restless_client-0.0.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e253a126d91fbccaa35beca647973a4e", "sha256": "d0cc329183eacc90423622dfb973f70070b73ee0a3a7bd3a1342302d55dd4b9b"}, "downloads": -1, "filename": "flask-restless-client-0.0.11.tar.gz", "has_sig": false, "md5_digest": "e253a126d91fbccaa35beca647973a4e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24699, "upload_time": "2019-12-17T15:53:48", "upload_time_iso_8601": "2019-12-17T15:53:48.615074Z", "url": "https://files.pythonhosted.org/packages/71/9d/40cff581365cebd3b369d367541f7722c05d48e7d5987c02fd2d9d171c92/flask-restless-client-0.0.11.tar.gz", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "25c8f25448d44d6d168efb36883d5e42", "sha256": "212bd127979b823372751be9690ea0446bf598e106029b6f7c181edb5a3ec70a"}, "downloads": -1, "filename": "flask_restless_client-0.0.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "25c8f25448d44d6d168efb36883d5e42", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19674, "upload_time": "2019-12-18T20:14:53", "upload_time_iso_8601": "2019-12-18T20:14:53.626318Z", "url": "https://files.pythonhosted.org/packages/5f/28/c89c0cbe6c3ab412fb8b230040c33ecd444231fb359451b37e3d2c88ba4d/flask_restless_client-0.0.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ed10bed07b694008b3c431e3f7c5bf8", "sha256": "622cafa40bd32cba319ede39e39c0f447e6b24b4db90e0ccd7b8b354d7328576"}, "downloads": -1, "filename": "flask-restless-client-0.0.12.tar.gz", "has_sig": false, "md5_digest": "7ed10bed07b694008b3c431e3f7c5bf8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24719, "upload_time": "2019-12-18T20:14:55", "upload_time_iso_8601": "2019-12-18T20:14:55.314200Z", "url": "https://files.pythonhosted.org/packages/08/87/8c5a4260f05bdd6b1b425d601ddf9c9613913e0b34dca14fea4151dcf07b/flask-restless-client-0.0.12.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "95ceb4e562c04343676baeffed276ec7", "sha256": "b0b47d7d1c9f3c5773f47e425ae1004b4b5bd9705931ec230154f5660ba075e3"}, "downloads": -1, "filename": "flask_restless_client-0.0.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "95ceb4e562c04343676baeffed276ec7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 16003, "upload_time": "2019-11-08T16:04:38", "upload_time_iso_8601": "2019-11-08T16:04:38.750279Z", "url": "https://files.pythonhosted.org/packages/b7/22/6a9dcb968d4e15fd30f6fa606660c92c792728b95330c7316fe4116f4cda/flask_restless_client-0.0.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b977c36ac8acb14540f009f6feaf0640", "sha256": "3a286f90d09d58e428616e8f9cb70f4c0c07e231c32b7d62933573dfa4b160d1"}, "downloads": -1, "filename": "flask-restless-client-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b977c36ac8acb14540f009f6feaf0640", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20021, "upload_time": "2019-11-08T16:04:40", "upload_time_iso_8601": "2019-11-08T16:04:40.899852Z", "url": "https://files.pythonhosted.org/packages/64/ff/8479fe40f15a480d5b19ebbfd743a42c2364e7d12724ac074dcf6aa4acd0/flask-restless-client-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "4dbe869ef7aa734c3cef6fdf33dd400d", "sha256": "fcf6e8f6a448d599205763b9b5697e929d465ef3ffa4d286bb311c1e9ee64e78"}, "downloads": -1, "filename": "flask_restless_client-0.0.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4dbe869ef7aa734c3cef6fdf33dd400d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19238, "upload_time": "2019-11-12T22:19:59", "upload_time_iso_8601": "2019-11-12T22:19:59.948953Z", "url": "https://files.pythonhosted.org/packages/ff/2d/c908a2ab9ef23545d90e36d1aa1da697fe263c2cd3dbd3a8773780dd5c50/flask_restless_client-0.0.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "71c3aa608693b1d046718e8d90e3e083", "sha256": "5bf66fec162d07eba7f013e31d4dfe8e8fe2b02018d055e0e1d252722bb03b4b"}, "downloads": -1, "filename": "flask-restless-client-0.0.5.tar.gz", "has_sig": false, "md5_digest": "71c3aa608693b1d046718e8d90e3e083", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24042, "upload_time": "2019-11-12T22:20:01", "upload_time_iso_8601": "2019-11-12T22:20:01.646781Z", "url": "https://files.pythonhosted.org/packages/23/73/b40bbd3f48bc92682909621c53354ffd992aa9a67390094cf103e9d8dbac/flask-restless-client-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "7abc59b52ad719d89e5b46a9f324cba6", "sha256": "e5a81c9eb2bbc676129ca43fa0c0523e88d84ce55167c5e2446319d5ea861b1e"}, "downloads": -1, "filename": "flask_restless_client-0.0.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7abc59b52ad719d89e5b46a9f324cba6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19304, "upload_time": "2019-11-13T20:26:42", "upload_time_iso_8601": "2019-11-13T20:26:42.283429Z", "url": "https://files.pythonhosted.org/packages/a9/ca/7fcdc2c2ef62224f1a84d40bf458d9c1c357625d63144280e78c9c8cbc5c/flask_restless_client-0.0.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "065b8cb5ea31676b1e59ed8b2587922b", "sha256": "2925f38cfe8b9391915af0484994e9a387f8167b3234eccbb2a63dd12a64b044"}, "downloads": -1, "filename": "flask-restless-client-0.0.6.tar.gz", "has_sig": false, "md5_digest": "065b8cb5ea31676b1e59ed8b2587922b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24188, "upload_time": "2019-11-13T20:26:43", "upload_time_iso_8601": "2019-11-13T20:26:43.708530Z", "url": "https://files.pythonhosted.org/packages/29/9a/a4fb78dc4909de3488005e56e68dd1eb010ae272a8f7f7a38b256973b91e/flask-restless-client-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "d4c06ad7837638a27aa36d85c212e586", "sha256": "293c8e47ecabde3c917ec5528082d8568637a57aee48d07d350df7abb7bcceab"}, "downloads": -1, "filename": "flask_restless_client-0.0.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d4c06ad7837638a27aa36d85c212e586", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19486, "upload_time": "2019-11-15T10:05:06", "upload_time_iso_8601": "2019-11-15T10:05:06.347206Z", "url": "https://files.pythonhosted.org/packages/98/c4/954f5904b51061b9884fb902d2a7baf52dbdc948806f76b9a775953a235b/flask_restless_client-0.0.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "575dd18c01488343d1bf1f3a886da0dd", "sha256": "7a023190a1c649956b062b4602a686d134a3052196c6d0222508e4b37b56d48c"}, "downloads": -1, "filename": "flask-restless-client-0.0.7.tar.gz", "has_sig": false, "md5_digest": "575dd18c01488343d1bf1f3a886da0dd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24487, "upload_time": "2019-11-15T10:05:07", "upload_time_iso_8601": "2019-11-15T10:05:07.782785Z", "url": "https://files.pythonhosted.org/packages/6a/5d/a636b5413dcdb5a15b978ae637aaccbde192d511770c68626eeb839b09cc/flask-restless-client-0.0.7.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "8b66b8cb5930833e3c4b9f8594ec2baf", "sha256": "a70dccc034bee73fd4f8f22fbc9d90fa0a937a2221298ae23b70e508956014fb"}, "downloads": -1, "filename": "flask_restless_client-0.0.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b66b8cb5930833e3c4b9f8594ec2baf", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19656, "upload_time": "2019-12-17T12:32:56", "upload_time_iso_8601": "2019-12-17T12:32:56.243040Z", "url": "https://files.pythonhosted.org/packages/01/a7/6fd43d42840921d824192cd57630f86ed68a73e19ac76f4fe0dedbb33fb6/flask_restless_client-0.0.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9aee639fcfa4d17ade7a88bc6ff263c9", "sha256": "bf08fd7804faec2401389b3a7ea2a84d6e3efc190cb04d8522c9ee34a74eb747"}, "downloads": -1, "filename": "flask-restless-client-0.0.9.tar.gz", "has_sig": false, "md5_digest": "9aee639fcfa4d17ade7a88bc6ff263c9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24666, "upload_time": "2019-12-17T12:32:57", "upload_time_iso_8601": "2019-12-17T12:32:57.855187Z", "url": "https://files.pythonhosted.org/packages/78/82/5a76cc1d8b073744c670ce2377c7139c8536ca93c3adf7b06d69674119f7/flask-restless-client-0.0.9.tar.gz", "yanked": false}], "0.1.13": [{"comment_text": "", "digests": {"md5": "4d02f7073a9e8ce5ee38746545a0eaa0", "sha256": "162c7652a5d0e7c6a5cf84a426f7c1e286bbe1a093b966f3fe28b3712f900bdd"}, "downloads": -1, "filename": "flask_restless_client-0.1.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4d02f7073a9e8ce5ee38746545a0eaa0", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19703, "upload_time": "2020-01-09T09:48:46", "upload_time_iso_8601": "2020-01-09T09:48:46.534762Z", "url": "https://files.pythonhosted.org/packages/cb/b7/eb255bd51e0f3508a4578d4c8f264bbbbae3df6bc384d2fc578bb2ba63e0/flask_restless_client-0.1.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10a0fc89b5edf785c95023e7b8d3f4aa", "sha256": "db40974d822b72cf753de9adeb7693842f76420e18125e47880c373c304c4127"}, "downloads": -1, "filename": "flask-restless-client-0.1.13.tar.gz", "has_sig": false, "md5_digest": "10a0fc89b5edf785c95023e7b8d3f4aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24853, "upload_time": "2020-01-09T09:48:48", "upload_time_iso_8601": "2020-01-09T09:48:48.359303Z", "url": "https://files.pythonhosted.org/packages/61/59/f7c84df3ce5e7880c39e87aa98268e8d40a6114029bb163024f75757c9a7/flask-restless-client-0.1.13.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "69894d178b1f300b2779bc716b2ffe50", "sha256": "cc53376d2c8e6979d437204a9a451a67f926ca23c903e7008fa848e715de6e38"}, "downloads": -1, "filename": "flask_restless_client-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "69894d178b1f300b2779bc716b2ffe50", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 19787, "upload_time": "2020-01-13T17:15:14", "upload_time_iso_8601": "2020-01-13T17:15:14.368734Z", "url": "https://files.pythonhosted.org/packages/86/d7/fd4b4209c0e371879b0e7ba27ab62943259fea6931dd27332ff345002551/flask_restless_client-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7b7b15d3cd4a44452e1e8b342e3a83fc", "sha256": "1e20a215b800923ac2885684966ce145dd220629eb287e006dfd227997fdcf0b"}, "downloads": -1, "filename": "flask-restless-client-0.2.0.tar.gz", "has_sig": false, "md5_digest": "7b7b15d3cd4a44452e1e8b342e3a83fc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25084, "upload_time": "2020-01-13T17:15:15", "upload_time_iso_8601": "2020-01-13T17:15:15.877130Z", "url": "https://files.pythonhosted.org/packages/b1/f0/8e7a6d9e414280f28e2a45f6ac8a94e69d544e3102c7b476b1cb571f032b/flask-restless-client-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d0808d879c7e2de030039c6eaa08897b", "sha256": "6a9e391a16f70a89752240317a9d59c88a41945a7ae5d7115f871fbeadff8730"}, "downloads": -1, "filename": "flask_restless_client-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d0808d879c7e2de030039c6eaa08897b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 20562, "upload_time": "2020-03-17T12:43:13", "upload_time_iso_8601": "2020-03-17T12:43:13.979412Z", "url": "https://files.pythonhosted.org/packages/d1/89/88d70a5c8e1252f8f4af14bab8e41b6d9302e3e79dccc2eec578e8378ec4/flask_restless_client-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a52319fc519a39dd3de75df79e277bab", "sha256": "0af01d98d361662448d0c5d66bb44de15b9a429045525bb4a971cec3273f1f3c"}, "downloads": -1, "filename": "flask-restless-client-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a52319fc519a39dd3de75df79e277bab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26110, "upload_time": "2020-03-17T12:43:15", "upload_time_iso_8601": "2020-03-17T12:43:15.457661Z", "url": "https://files.pythonhosted.org/packages/d2/7e/f77acf1b68e15740b8a9ea77aceb20caa2b03f3da734d14f1b7210a32a43/flask-restless-client-0.2.1.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "dbffa4afdb42775545cf03f143e1be30", "sha256": "7951f3035e1969dcbdfb6e88dfba0a42ed5f7c5f20aad274d5b8c76c19f930db"}, "downloads": -1, "filename": "flask-restless-client-0.2.3.tar.gz", "has_sig": false, "md5_digest": "dbffa4afdb42775545cf03f143e1be30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27512, "upload_time": "2020-04-06T15:09:49", "upload_time_iso_8601": "2020-04-06T15:09:49.887396Z", "url": "https://files.pythonhosted.org/packages/e3/4a/7c69b15ba9bad3a3e2bc1353bed429dbcb099906ffae766687c85d6f1662/flask-restless-client-0.2.3.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "c341cf636d22b02b11000e3264843980", "sha256": "d82f789e361111e91e757c9b1a3180d31f2ff71bd8baa549b894451b72bbb775"}, "downloads": -1, "filename": "flask_restless_client-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c341cf636d22b02b11000e3264843980", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 21986, "upload_time": "2020-04-01T11:05:44", "upload_time_iso_8601": "2020-04-01T11:05:44.359548Z", "url": "https://files.pythonhosted.org/packages/17/ca/f3cec0f7e313e72a98c39b5b7e306034c4f341bc6ebd4331bf627b966719/flask_restless_client-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a1870a6e5977a93c2d1a1a80f7534353", "sha256": "d0b863e7a49b92da176c755bf48e55af10614bd31f16c035f280d9a5c3f466b7"}, "downloads": -1, "filename": "flask-restless-client-0.3.0.tar.gz", "has_sig": false, "md5_digest": "a1870a6e5977a93c2d1a1a80f7534353", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27298, "upload_time": "2020-04-01T11:05:45", "upload_time_iso_8601": "2020-04-01T11:05:45.536102Z", "url": "https://files.pythonhosted.org/packages/28/e8/0db422f0e984956bd3a832bad668abb0c83e78cae58b2088abc9773597f7/flask-restless-client-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a8d7fcf13a304fdc26a740542089f20b", "sha256": "f1ce4519a78552f7c215e0359a2ac216a7e42d57eb42ae997028cca5a4730384"}, "downloads": -1, "filename": "flask_restless_client-0.4.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a8d7fcf13a304fdc26a740542089f20b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22937, "upload_time": "2020-04-02T13:47:58", "upload_time_iso_8601": "2020-04-02T13:47:58.003409Z", "url": "https://files.pythonhosted.org/packages/60/26/12137557798e10e91833c84e74e8d909773ca046f2fa36a8779229ced73b/flask_restless_client-0.4.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0d695726a96f138d1277c901706207eb", "sha256": "e28f9fa41b2eebde3196a6e1fd984117e55ee30f35667abb5d3d5e04955f260f"}, "downloads": -1, "filename": "flask-restless-client-0.4.0.tar.gz", "has_sig": false, "md5_digest": "0d695726a96f138d1277c901706207eb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28210, "upload_time": "2020-04-02T13:47:59", "upload_time_iso_8601": "2020-04-02T13:47:59.206113Z", "url": "https://files.pythonhosted.org/packages/66/d1/6f3c5ac2240ead4b8bff9856b90c5ac60bd9481af9e06a452e56387dd466/flask-restless-client-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "19f1f117deb26a8022ff50bdbe350b13", "sha256": "dd77dec60047d35a5c92ff41f550cfd6c45649753e7e70c957d6416857e67133"}, "downloads": -1, "filename": "flask_restless_client-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "19f1f117deb26a8022ff50bdbe350b13", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22937, "upload_time": "2020-04-02T13:56:34", "upload_time_iso_8601": "2020-04-02T13:56:34.879688Z", "url": "https://files.pythonhosted.org/packages/2a/68/c158ce85f251eeef4b10c955097b71cf18c82437ceed2cfbc7909be55666/flask_restless_client-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bd3bf45d14b210ff699e219f6459a270", "sha256": "cfa4e16cfa8a09f95293a55830a1e0638ce9cdcdf05f4b50cebc0add4bb5228b"}, "downloads": -1, "filename": "flask-restless-client-0.4.1.tar.gz", "has_sig": false, "md5_digest": "bd3bf45d14b210ff699e219f6459a270", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28258, "upload_time": "2020-04-02T13:56:37", "upload_time_iso_8601": "2020-04-02T13:56:37.157681Z", "url": "https://files.pythonhosted.org/packages/44/fb/f3b473dc08a0ef869d6ee0ce136eb5926398c0a6dab189e046d4b4535fcf/flask-restless-client-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "6dd8ad8e15f314f30830f9bc64faf508", "sha256": "0eeadb6a491021b027bbb3acc2cb317e136d472232896be84e230f33f9727c4d"}, "downloads": -1, "filename": "flask_restless_client-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "6dd8ad8e15f314f30830f9bc64faf508", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22940, "upload_time": "2020-04-03T13:04:57", "upload_time_iso_8601": "2020-04-03T13:04:57.550491Z", "url": "https://files.pythonhosted.org/packages/d6/81/3b273ed8102e6a81e56e67932ab73bfa1bbcc247609127851b68ce78bdd1/flask_restless_client-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "03fbf84d9a61d65b140950516c9c038a", "sha256": "4b6398ac11f41bae9636257d830843b241cc4a12c2cbe819369a834db6ee1318"}, "downloads": -1, "filename": "flask-restless-client-0.4.2.tar.gz", "has_sig": false, "md5_digest": "03fbf84d9a61d65b140950516c9c038a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28297, "upload_time": "2020-04-03T13:04:59", "upload_time_iso_8601": "2020-04-03T13:04:59.140707Z", "url": "https://files.pythonhosted.org/packages/b1/a8/eb8c8ff7a80a72879a33ee8bd40cad98bb19f6095e7b8c5d4ec33da83149/flask-restless-client-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "62aba5c3f8f66a29ace6c5590a8e62e1", "sha256": "3fc231c828efed7c31ec4f66a1c74a181f592f8efe5f0a0eff437509c78143e7"}, "downloads": -1, "filename": "flask_restless_client-0.4.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "62aba5c3f8f66a29ace6c5590a8e62e1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 22969, "upload_time": "2020-04-06T08:56:20", "upload_time_iso_8601": "2020-04-06T08:56:20.033900Z", "url": "https://files.pythonhosted.org/packages/01/71/71c215787f024d579ef333e276332704a3228b27290a3a5588a362706d31/flask_restless_client-0.4.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2f04c17fbbcf01d801bf52a993735c8f", "sha256": "5f019c826cde929b42369c9627bc164aee398c87b6bc02523bbcee7d292b5d45"}, "downloads": -1, "filename": "flask-restless-client-0.4.3.tar.gz", "has_sig": false, "md5_digest": "2f04c17fbbcf01d801bf52a993735c8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28357, "upload_time": "2020-04-06T08:56:21", "upload_time_iso_8601": "2020-04-06T08:56:21.576695Z", "url": "https://files.pythonhosted.org/packages/57/40/9f42d11699b2a29dbea61d10b6fd7c2b5d1faae53569d6ccba3054a1036b/flask-restless-client-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "aca2243937a1c25978089a214d95b018", "sha256": "940c86086cfc9b34af356154b9f16dc43e729e3f771c869d38eb1795d105ad70"}, "downloads": -1, "filename": "flask_restless_client-0.4.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "aca2243937a1c25978089a214d95b018", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23001, "upload_time": "2020-04-06T15:27:08", "upload_time_iso_8601": "2020-04-06T15:27:08.526712Z", "url": "https://files.pythonhosted.org/packages/8d/a9/aafdc55ead6de1aab25423d968ce09bb01ced39953c089832ec6936a16f8/flask_restless_client-0.4.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b80730a32344d4a864d6970a9884f29", "sha256": "c047c488de69b24176f8cf988d9a905ce7c1690a7b9f7dd57aba8e5cb63af19b"}, "downloads": -1, "filename": "flask-restless-client-0.4.4.tar.gz", "has_sig": false, "md5_digest": "2b80730a32344d4a864d6970a9884f29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28389, "upload_time": "2020-04-06T15:27:09", "upload_time_iso_8601": "2020-04-06T15:27:09.721130Z", "url": "https://files.pythonhosted.org/packages/6c/40/8af444b69018b6471fdafd1302ed4eff2d6a2dfd12466d479a7fb2067fcb/flask-restless-client-0.4.4.tar.gz", "yanked": false}], "0.4.5": [{"comment_text": "", "digests": {"md5": "cb78ae8e52eca6527dab568c084cd044", "sha256": "71560b88d0a8f26c9b3bf6ff026b490c541f18e89f0670e73c26d88385c7a054"}, "downloads": -1, "filename": "flask_restless_client-0.4.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cb78ae8e52eca6527dab568c084cd044", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23174, "upload_time": "2020-04-20T10:09:42", "upload_time_iso_8601": "2020-04-20T10:09:42.192012Z", "url": "https://files.pythonhosted.org/packages/51/83/9e9ed5be0b7c802ea9d6365b2a301aed89a3024178c391af0656212bfb88/flask_restless_client-0.4.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "50a146f9d4ca01d350a550d3e4eb078e", "sha256": "35153f62fddb0872c2437e6d70c7ba4cbbc479b917fa43dd25403dfd4877a5d2"}, "downloads": -1, "filename": "flask-restless-client-0.4.5.tar.gz", "has_sig": false, "md5_digest": "50a146f9d4ca01d350a550d3e4eb078e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28605, "upload_time": "2020-04-20T10:09:43", "upload_time_iso_8601": "2020-04-20T10:09:43.770784Z", "url": "https://files.pythonhosted.org/packages/2c/51/d7e99edd03feaab6f9aa18dac27e5b96148b4f66a955298111edbe206e25/flask-restless-client-0.4.5.tar.gz", "yanked": false}], "0.4.6": [{"comment_text": "", "digests": {"md5": "532c0b6a1a10fc6756ae588d585ff358", "sha256": "a85d806442c8c04a9e49127f56775912292ed2cb82c54140e2ee74afcef27bbc"}, "downloads": -1, "filename": "flask_restless_client-0.4.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "532c0b6a1a10fc6756ae588d585ff358", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23178, "upload_time": "2020-04-20T12:32:58", "upload_time_iso_8601": "2020-04-20T12:32:58.804310Z", "url": "https://files.pythonhosted.org/packages/18/e4/5e49e242a1cf4476c50a45e7547147afad2706c3e1eb2821d415053584a8/flask_restless_client-0.4.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f3c0403a26c570bd878f95ac437ecba2", "sha256": "3590eb4ba81b38e92a22a5f054a75f972e79b7aaccbe831d3244b6a6706b8f54"}, "downloads": -1, "filename": "flask-restless-client-0.4.6.tar.gz", "has_sig": false, "md5_digest": "f3c0403a26c570bd878f95ac437ecba2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28631, "upload_time": "2020-04-20T12:33:00", "upload_time_iso_8601": "2020-04-20T12:33:00.393734Z", "url": "https://files.pythonhosted.org/packages/d0/50/f487eca98d19438fa7994327022508141590f557f1d83ba34147dcd4a841/flask-restless-client-0.4.6.tar.gz", "yanked": false}], "0.4.7": [{"comment_text": "", "digests": {"md5": "a5d1ac8281e585071face8d5a7d454c3", "sha256": "41be91bc7df023776f19477639b329a24448799ad70f58b2c57cce91f586667b"}, "downloads": -1, "filename": "flask_restless_client-0.4.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a5d1ac8281e585071face8d5a7d454c3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23176, "upload_time": "2020-04-21T12:16:10", "upload_time_iso_8601": "2020-04-21T12:16:10.428417Z", "url": "https://files.pythonhosted.org/packages/18/1c/0c65e09390484852baf4987d4c2005b8d780e1c7d8587c523d16c331a2dc/flask_restless_client-0.4.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "998ff70b777c7efe014c05b86482c2c8", "sha256": "62e596e1684578b2e1da40855e51612e3023f3d5603db4d05bb24733bdccff69"}, "downloads": -1, "filename": "flask-restless-client-0.4.7.tar.gz", "has_sig": false, "md5_digest": "998ff70b777c7efe014c05b86482c2c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28630, "upload_time": "2020-04-21T12:16:11", "upload_time_iso_8601": "2020-04-21T12:16:11.913490Z", "url": "https://files.pythonhosted.org/packages/e8/bb/182d0a7fce450ae6229d6937933763255560ce46a1ebcbf9f02f212f3764/flask-restless-client-0.4.7.tar.gz", "yanked": false}], "0.4.8": [{"comment_text": "", "digests": {"md5": "3f070f66fc17e0c2501ca25c917ab4b9", "sha256": "cdaccac5cf08c2680101cf13bf98fb0309786aaa833046d8e74ac2a4028e36f7"}, "downloads": -1, "filename": "flask_restless_client-0.4.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3f070f66fc17e0c2501ca25c917ab4b9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23175, "upload_time": "2020-04-28T07:30:11", "upload_time_iso_8601": "2020-04-28T07:30:11.588496Z", "url": "https://files.pythonhosted.org/packages/7c/58/2f0529eb0a6cfc3275525d35e0efba5e440a9b66b9346df97ec481c84726/flask_restless_client-0.4.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "931d42f1fd55e800afbce1a541d0902c", "sha256": "e75834e8698256dfe62f474c327eeb037734cef008c3a864ce02dc82b9bc935e"}, "downloads": -1, "filename": "flask-restless-client-0.4.8.tar.gz", "has_sig": false, "md5_digest": "931d42f1fd55e800afbce1a541d0902c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28652, "upload_time": "2020-04-28T07:30:12", "upload_time_iso_8601": "2020-04-28T07:30:12.790670Z", "url": "https://files.pythonhosted.org/packages/64/29/9b34ffa4160cc1de2f22abb26f3c3bcad3de44bd23e28b83618a22351d51/flask-restless-client-0.4.8.tar.gz", "yanked": false}], "0.4.9": [{"comment_text": "", "digests": {"md5": "44c74e10f9f5c9b2673b4514680aea85", "sha256": "86925b4bbd2ebba9f8e0742aacdc7a5b626caebf994e5d725a1adafcbeaf947c"}, "downloads": -1, "filename": "flask_restless_client-0.4.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "44c74e10f9f5c9b2673b4514680aea85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23226, "upload_time": "2020-04-30T09:29:10", "upload_time_iso_8601": "2020-04-30T09:29:10.733057Z", "url": "https://files.pythonhosted.org/packages/3e/a9/ec1a5944725ebeaf8987e1bb78837b449c03361fab46489dab2ebe8eecd3/flask_restless_client-0.4.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d137e61ad798572a37910d77d482221", "sha256": "47cafc54aa3a27f09bb77fcc2f4dc7250037749958e66ec4649de07f80ff5d6a"}, "downloads": -1, "filename": "flask-restless-client-0.4.9.tar.gz", "has_sig": false, "md5_digest": "4d137e61ad798572a37910d77d482221", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28697, "upload_time": "2020-04-30T09:29:11", "upload_time_iso_8601": "2020-04-30T09:29:11.820553Z", "url": "https://files.pythonhosted.org/packages/6e/cc/d43c44c2b2389721dc120a705a934fd22a73ac790000ada423509f2f8428/flask-restless-client-0.4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "44c74e10f9f5c9b2673b4514680aea85", "sha256": "86925b4bbd2ebba9f8e0742aacdc7a5b626caebf994e5d725a1adafcbeaf947c"}, "downloads": -1, "filename": "flask_restless_client-0.4.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "44c74e10f9f5c9b2673b4514680aea85", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 23226, "upload_time": "2020-04-30T09:29:10", "upload_time_iso_8601": "2020-04-30T09:29:10.733057Z", "url": "https://files.pythonhosted.org/packages/3e/a9/ec1a5944725ebeaf8987e1bb78837b449c03361fab46489dab2ebe8eecd3/flask_restless_client-0.4.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d137e61ad798572a37910d77d482221", "sha256": "47cafc54aa3a27f09bb77fcc2f4dc7250037749958e66ec4649de07f80ff5d6a"}, "downloads": -1, "filename": "flask-restless-client-0.4.9.tar.gz", "has_sig": false, "md5_digest": "4d137e61ad798572a37910d77d482221", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28697, "upload_time": "2020-04-30T09:29:11", "upload_time_iso_8601": "2020-04-30T09:29:11.820553Z", "url": "https://files.pythonhosted.org/packages/6e/cc/d43c44c2b2389721dc120a705a934fd22a73ac790000ada423509f2f8428/flask-restless-client-0.4.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:25 2020"}