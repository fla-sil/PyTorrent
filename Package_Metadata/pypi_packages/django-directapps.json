{"info": {"author": "Grigoriy Kramarenko", "author_email": "root@rosix.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Natural Language :: Russian", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "DirectApps\n==========\n\nThis is a little application for direct access to all the models and their\ndata in a project. By default, the application has access for users with\n`is_staff` mark. But this and much more can be changed.\n\nIt might interest you if you use Django as the backend to some kind of\nexternal client application. There are no templates for formatting and\ndisplaying of data on the client. Only JSON. Only direct data. All quickly and\nsharply.\n\n.. important::\n    The client application must support cookies, parse \"csrftoken\" and send\n    it as `X-CSRFToken` header in `POST`, `PUT`, `PATCH` and `DELETE` requests.\n\nInstallation\n------------\n\n.. code-block:: shell\n\n    pip install django-directapps\n\nChange your next project files.\n\n.. code-block:: python\n\n    # settins.py\n    INSTALLED_APPS = (\n        ...\n        'directapps',\n        ...\n    )\n\n    # urls.py\n    urlpatterns = [\n        ...\n        url(r'^apps/', include('directapps.urls', namespace=\"directapps\")),\n        ...\n    ]\n\nStart the development server Django, if it is not running.\n\nNow you can open a browser to this address to see a list of available\napplications and links to data schematics for each.\n\n\nEnjoy!\n\n\nUsing the REST API\n------------------\n\nGeneral information\n~~~~~~~~~~~~~~~~~~~\n\nThe REST API endpoints are built as follows:\n\n.. code-block::\n\n    /<list_apps>/<app>/<model>[.<model_using>]/<object_id>/<relation>[.<relation_using>]/<relation_id>/\n\nYou can perform actions on endpoints by specifying them with an underscore:\n\n.. code-block::\n\n    .../<model>[.<model_using>]/_<model_action>/\n    .../<model>[.<model_using>]/<object_id>/_<object_action>/\n\n.. code-block::\n\n    .../<relation>[.<relation_using>]/_<relation_action>/\n    .../<relation>[.<relation_using>]/<relation_id>/_<relation_object_action>/\n\nParameters **<model_using>** and **<relation_using>** is define a database\nconnection by its ID.\n\n.. note::\n    The parameter **<model_using>** is useless when you work with relations,\n    but you can it remain for convenience.\n\nFor data sets (**<model>** and **<relation>**) apply the following GET-parameters::\n\n    1. 'o' - ordering key (by default is from models definition)\n    2. 'c' - columns key (by default is all from allowed)\n    3. 'l' - limit key (by default is 10)\n    4. 'p' - page key (by default is 1)\n    5. 'q' - search key\n    6. 'f' - foreign key (used in conjunction with the search key, see bellow)\n\nAll these keys can be overridden either together or separately in controller.\nYou can check their names in the full scheme of model.\n\n.. note::\n    Unlike many of the application with REST, a description of the data for\n    client applications is not transmitted with every call, and exists as a\n    separate resource, allowing you to do everything faster. This is a\n    characteristic feature of this app and it means that:\n\n    1. The client gets the list of available applications.\n    2. Gets application schema which describes what data can be provided\n       and on what resource they are.\n    3. And only then begin to work with the data.\n    4. The client application is responsible for the maintenance of relations\n       between data models for fields with external links have the attribute\n       \"relation\" that contains the full name of the relation.\n\nLet's analyze it on the example of `django.contrib.auth` application.\n\n\nGetting the scheme of available applications and models\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nShort scheme as list applications with version and checksum:\n\n.. code-block::\n\n    GET /apps/\n\nFull scheme as list models in application:\n\n.. code-block::\n\n    GET /apps/auth/\n\n.. note::\n    In the response the permissions for the superuser are marked with just\n    the text \"all\", and for other users there will be a list.\n\n\nCreating the data\n~~~~~~~~~~~~~~~~~\n\nMake groups:\n\n.. code-block::\n\n    POST /apps/auth/group/ {'name': 'Administrators'}\n    POST /apps/auth/group/_create/ {'name': 'Managers'}\n    POST /apps/auth/group/_add/ {'name': 'Operators'}\n\n\nGetting the data\n~~~~~~~~~~~~~~~~\n\nWhen you use several databases, you should use the indication of the database\nfrom which you want to get the object. To do this, use **<model_using>** and\n**<relation_using>** parameters.\n\nGet the list users:\n\n.. code-block::\n\n    GET /apps/auth/user/\n    GET /apps/auth/user/?o=-id,username\n    GET /apps/auth/user/?o=-id&l=1\n    GET /apps/auth/user/?q=blabla\n\n.. code-block::\n\n    GET /apps/auth/group/1/user/\n    GET /apps/auth/group/1/user/?o=-id,username\n    GET /apps/auth/group/1/user/?o=-id&l=1\n    GET /apps/auth/group/1/user/?q=blabla\n\nGet the user by ID=1:\n\n.. code-block::\n\n    GET /apps/auth/user/1/\n\n.. code-block::\n\n    GET /apps/auth/group/1/user/1/\n\nUse *foreign key* for search available groups in ManyToManyField:\n\n.. code-block::\n\n    GET /apps/auth/user/_fkey/?f=groups\n    GET /apps/auth/user/_fkey/?f=groups&q=rator\n    GET /apps/auth/user/_fkey/?f=groups&q=rator&o=-id&l=1\n\nOf course, the *foreign key* you can use with ForeignKey or OneToOneField too:\n\n.. code-block::\n\n    GET /apps/auth/permission/_fkey/?f=content_type\n\nModify data:\n\n.. code-block::\n\n    PATCH /apps/auth/user/1/ { first_name: 'Johnny' }\n    PUT /apps/auth/user/1/ { first_name: 'John' }\n    POST /apps/auth/user/1/_patch/ { first_name: 'John Bo' }\n    POST /apps/auth/user/1/_put/ { first_name: 'John Bon' }\n    POST /apps/auth/user/1/_update/ { last_name: 'Jovi' }\n\nDelete data:\n\n.. code-block::\n\n    DELETE /apps/auth/user/1/\n    POST /apps/auth/user/1/_delete/\n\n\nUsing in browser\n----------------\n\nYou can look at the example works in the JavaScript console and use it as a test.\n\n.. code-block:: javascript\n\n    function getCookie(cname) {\n        var name = cname + '=';\n        var ca = document.cookie.split(';');\n        for (var i = 0; i < ca.length; i++) {\n            var c = ca[i];\n            while (c.charAt(0) === ' ') c = c.substring(1);\n            if (c.indexOf(name) === 0) return c.substring(name.length, c.length);\n        }\n        return '';\n    }\n\n    function makeRequest(method, url, data, content_type) {\n        var xhr = new XMLHttpRequest(),\n            content_type = content_type || 'application/x-www-form-urlencoded';\n        xhr.open(method, url, false);\n        if (!(/^(GET|HEAD|OPTIONS|TRACE)$/.test(method.toUpperCase()))) {\n            xhr.setRequestHeader('Content-Type', content_type);\n            xhr.setRequestHeader('X-CSRFToken', getCookie('csrftoken'));\n        }\n        xhr.send(data);\n        if (xhr.status === 200) return JSON.parse(xhr.responseText);\n        console.error(xhr.responseText);\n    }\n\n    var group1 = makeRequest('post', '/apps/auth/group/', 'name=Operators 1'),\n        group2 = makeRequest('post', '/apps/auth/group/',\n                             JSON.stringify({ name: 'Operators 2' }),\n                             'application/json');\n\n    makeRequest('get', '/apps/auth/group/?o=name,-id&q=operators&p=1&l=3&id__gte=1');\n    makeRequest('put', '/apps/auth/group/' + group1.pk + '/', 'name=Operators 11');\n    makeRequest('patch', '/apps/auth/group/' + group2.pk + '/', 'name=Operators 22');\n    makeRequest('get', '/apps/auth/group/?o=name,-id&q=operators&p=1&l=3&id__gte=1');\n    makeRequest('delete', '/apps/auth/group/', 'id=' + group1.pk + ',' + group2.pk);\n    makeRequest('delete', '/apps/auth/group/',\n                JSON.stringify({ id: [ group1.pk, group2.pk ] }),\n                'application/json');\n\n\nSettings\n--------\n\nAll next settings must be within the dictionary `DIRECTAPPS`, when you\ndefine them in the file settings.py\n\nACCESS_FUNCTION\n~~~~~~~~~~~~~~~\nFunction that checks access to resources. You may want to use:\n\n1. `directapps.access.authenticated` - for authenticated users.\n2. `directapps.access.staff` - for employers and superusers.\n3. `directapps.access.superuser` - for superusers only.\n4. `directapps.access.view_users` - for users with view permission for User\n   model.\n5. any custom function.\n\nThe default is the internal function `directapps.access.staff`.\n\nATTRIBUTE_NAME\n~~~~~~~~~~~~~~\nThe name of the attribute in the model that is bound to the controller.\nBy default is `directapps_controller`.\n\nCHECKSUM_VERSION\n~~~~~~~~~~~~~~~~\nThe options for the checksum compilation of the scheme.\nBy default is `\"1\"`.\n\nCONTROLLERS\n~~~~~~~~~~~\nDictionary own controllers for models of third-party applications.\nBy default is blank.\n\nEXCLUDE_APPS\n~~~~~~~~~~~~\nThe list of excluded applications.\nBy default is blank.\n\nEXCLUDE_MODELS\n~~~~~~~~~~~~~~\nThe list of excluded models.\nBy default is blank.\n\nJSON_DUMPS_PARAMS\n~~~~~~~~~~~~~~~~~\nThe options for creating JSON.\nBy default is ``{'indent': 2, 'ensure_ascii': False}``.\n\nMASK_PASSWORD_FIELDS\n~~~~~~~~~~~~~~~~~~~~\nThe options for masking all the fields with the name \"password\".\nBy default is `True`.\n\nMASTER_CONTROLLER\n~~~~~~~~~~~~~~~~~\nClass (as string for import) of the master controller, which is used by default.\nBy default is `None` and uses internal class.\n\nUSE_TIME_ISOFORMAT\n~~~~~~~~~~~~~~~~~~\nThe options for the using ISO time with microseconds into `JSONEncoder`.\nBy default is `False` and `JSONEncoder` used ECMA-262 format.\n\nSEARCH_KEY\n~~~~~~~~~~\nThe key by which data is received for search.\nBy default is 'q'.\n\nFOREIGN_KEY\n~~~~~~~~~~~\nThe key by which the name of the field or column with a relation\n(for the \"_fkey\" action) is received from the client.\nBy default is 'f'.\n\nCOLUMNS_KEY\n~~~~~~~~~~~\nThe key by which the list of fields for rendering is received.\nBy default is 'c'.\n\nORDERING_KEY\n~~~~~~~~~~~~\nThe key by which sorting is accepted from the client.\nBy default is 'o'.\n\nLIMIT_KEY\n~~~~~~~~~\nThe key by which the limit of records is accepted from the client.\nBy default is 'l'.\n\nPAGE_KEY\n~~~~~~~~\nThe key by which the client receives the page number.\nBy default is 'p'.\n\nLIMIT\n~~~~~\nThe global working limit of returned records.\nBy default is 10.\n\nMAX_LIMIT\n~~~~~~~~~\nThe global maximum limit of returned records, which does not allow to kill the\nserver with huge data sets.\nBy default is 50.\n\n\nCustomizing of controllers\n--------------------------\n\nTo change the behavior globally for all your controllers, make your main\ncontroller based on the built-in and connect it:\n\n.. code-block:: python\n\n    # myapp/controllers.py\n\n    import logging\n    from directapps import controllers\n\n    logger = logging.getLogger(__name__)\n\n\n    class CustomModelController(controllers.ModelController):\n        # of course, your may be do it in the settings, but just for example :)\n        search_key = 'search'\n        limit = 50\n        max_limit = 1000\n\n\n    class CustomObjectController(controllers.ObjectController):\n\n        def action_get(self, request, object, *args, **kwargs):\n            logger.info(\n              '%s open %s with ID=%s', request.user, self, object,\n            )\n            return super().action_get(request, object, *args, **kwargs)\n\n\n    class CustomMasterController(controllers.MasterController):\n\n        model_ctrl_class = CustomModelController\n        object_ctrl_class = CustomObjectController\n\n\n.. code-block:: python\n\n    # settings.py\n\n    DIRECTAPPS = {\n        'MASTER_CONTROLLER': 'myapp.controllers.CustomMasterController'\n    }\n\n\nTo change the behavior of only one controller, make your own based on the\nbuilt-in and connect it like this:\n\n.. code-block:: python\n\n    # myapp/controllers.py\n\n    from django.db.models import Count\n    from directapps import controllers\n\n\n    class UserModelController(controllers.ModelController):\n        annotations = (\n            # Method or property on instance of model.\n            'get_full_name',\n            'get_short_name',\n            # QuerySet annotation.\n            'groups__count',\n        )\n\n        def get_queryset(self, *args, **kwargs):\n            \"\"\"Returns modified QuerySet.\"\"\"\n            qs = super().get_queryset(*args, **kwargs)\n            qs = qs.annotate(Count('groups'))\n            return qs\n\n        def info(self, request, qs):\n            \"\"\"Returns information about the set. Redefined method.\"\"\"\n            all_users = self.get_queryset(request, using=qs.using)\n            return {\n                'total': all_users.count()\n            }\n\n\n    class UserController(controllers.MasterController):\n\n        model_ctrl_class = UserModelController\n\n\n.. code-block:: python\n\n    # settins.py\n\n    DIRECTAPPS = {\n        'CONTROLLERS': {\n            'auth.user': 'myapp.controllers.UserController',\n        }\n    }\n\n\nContributing\n------------\nIf you want to translate the app into your language or to offer a more\ncompetent application code, you can do so using the \"Pull Requests\" on `gitlab`_.\n\n.. _gitlab: https://gitlab.com/djbaldey/django-directapps/\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/djbaldey/django-directapps/", "keywords": "", "license": "BSD License", "maintainer": "", "maintainer_email": "", "name": "django-directapps", "package_url": "https://pypi.org/project/django-directapps/", "platform": "any", "project_url": "https://pypi.org/project/django-directapps/", "project_urls": {"Homepage": "https://gitlab.com/djbaldey/django-directapps/"}, "release_url": "https://pypi.org/project/django-directapps/0.7/", "requires_dist": null, "requires_python": "", "summary": "Django app for direct client access to all models.", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a little application for direct access to all the models and their\ndata in a project. By default, the application has access for users with\n<cite>is_staff</cite> mark. But this and much more can be changed.</p>\n<p>It might interest you if you use Django as the backend to some kind of\nexternal client application. There are no templates for formatting and\ndisplaying of data on the client. Only JSON. Only direct data. All quickly and\nsharply.</p>\n<div>\n<p>Important</p>\n<p>The client application must support cookies, parse \u201ccsrftoken\u201d and send\nit as <cite>X-CSRFToken</cite> header in <cite>POST</cite>, <cite>PUT</cite>, <cite>PATCH</cite> and <cite>DELETE</cite> requests.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install django-directapps\n</pre>\n<p>Change your next project files.</p>\n<pre><span class=\"c1\"># settins.py</span>\n<span class=\"n\">INSTALLED_APPS</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'directapps'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">)</span>\n\n<span class=\"c1\"># urls.py</span>\n<span class=\"n\">urlpatterns</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"n\">url</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'^apps/'</span><span class=\"p\">,</span> <span class=\"n\">include</span><span class=\"p\">(</span><span class=\"s1\">'directapps.urls'</span><span class=\"p\">,</span> <span class=\"n\">namespace</span><span class=\"o\">=</span><span class=\"s2\">\"directapps\"</span><span class=\"p\">)),</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Start the development server Django, if it is not running.</p>\n<p>Now you can open a browser to this address to see a list of available\napplications and links to data schematics for each.</p>\n<p>Enjoy!</p>\n</div>\n<div id=\"using-the-rest-api\">\n<h2>Using the REST API</h2>\n<div id=\"general-information\">\n<h3>General information</h3>\n<p>The REST API endpoints are built as follows:</p>\n<pre>/&lt;list_apps&gt;/&lt;app&gt;/&lt;model&gt;[.&lt;model_using&gt;]/&lt;object_id&gt;/&lt;relation&gt;[.&lt;relation_using&gt;]/&lt;relation_id&gt;/\n</pre>\n<p>You can perform actions on endpoints by specifying them with an underscore:</p>\n<pre>.../&lt;model&gt;[.&lt;model_using&gt;]/_&lt;model_action&gt;/\n.../&lt;model&gt;[.&lt;model_using&gt;]/&lt;object_id&gt;/_&lt;object_action&gt;/\n</pre>\n<pre>.../&lt;relation&gt;[.&lt;relation_using&gt;]/_&lt;relation_action&gt;/\n.../&lt;relation&gt;[.&lt;relation_using&gt;]/&lt;relation_id&gt;/_&lt;relation_object_action&gt;/\n</pre>\n<p>Parameters <strong>&lt;model_using&gt;</strong> and <strong>&lt;relation_using&gt;</strong> is define a database\nconnection by its ID.</p>\n<div>\n<p>Note</p>\n<p>The parameter <strong>&lt;model_using&gt;</strong> is useless when you work with relations,\nbut you can it remain for convenience.</p>\n</div>\n<p>For data sets (<strong>&lt;model&gt;</strong> and <strong>&lt;relation&gt;</strong>) apply the following GET-parameters:</p>\n<pre>1. 'o' - ordering key (by default is from models definition)\n2. 'c' - columns key (by default is all from allowed)\n3. 'l' - limit key (by default is 10)\n4. 'p' - page key (by default is 1)\n5. 'q' - search key\n6. 'f' - foreign key (used in conjunction with the search key, see bellow)\n</pre>\n<p>All these keys can be overridden either together or separately in controller.\nYou can check their names in the full scheme of model.</p>\n<div>\n<p>Note</p>\n<p>Unlike many of the application with REST, a description of the data for\nclient applications is not transmitted with every call, and exists as a\nseparate resource, allowing you to do everything faster. This is a\ncharacteristic feature of this app and it means that:</p>\n<ol>\n<li>The client gets the list of available applications.</li>\n<li>Gets application schema which describes what data can be provided\nand on what resource they are.</li>\n<li>And only then begin to work with the data.</li>\n<li>The client application is responsible for the maintenance of relations\nbetween data models for fields with external links have the attribute\n\u201crelation\u201d that contains the full name of the relation.</li>\n</ol>\n</div>\n<p>Let\u2019s analyze it on the example of <cite>django.contrib.auth</cite> application.</p>\n</div>\n<div id=\"getting-the-scheme-of-available-applications-and-models\">\n<h3>Getting the scheme of available applications and models</h3>\n<p>Short scheme as list applications with version and checksum:</p>\n<pre>GET /apps/\n</pre>\n<p>Full scheme as list models in application:</p>\n<pre>GET /apps/auth/\n</pre>\n<div>\n<p>Note</p>\n<p>In the response the permissions for the superuser are marked with just\nthe text \u201call\u201d, and for other users there will be a list.</p>\n</div>\n</div>\n<div id=\"creating-the-data\">\n<h3>Creating the data</h3>\n<p>Make groups:</p>\n<pre>POST /apps/auth/group/ {'name': 'Administrators'}\nPOST /apps/auth/group/_create/ {'name': 'Managers'}\nPOST /apps/auth/group/_add/ {'name': 'Operators'}\n</pre>\n</div>\n<div id=\"getting-the-data\">\n<h3>Getting the data</h3>\n<p>When you use several databases, you should use the indication of the database\nfrom which you want to get the object. To do this, use <strong>&lt;model_using&gt;</strong> and\n<strong>&lt;relation_using&gt;</strong> parameters.</p>\n<p>Get the list users:</p>\n<pre>GET /apps/auth/user/\nGET /apps/auth/user/?o=-id,username\nGET /apps/auth/user/?o=-id&amp;l=1\nGET /apps/auth/user/?q=blabla\n</pre>\n<pre>GET /apps/auth/group/1/user/\nGET /apps/auth/group/1/user/?o=-id,username\nGET /apps/auth/group/1/user/?o=-id&amp;l=1\nGET /apps/auth/group/1/user/?q=blabla\n</pre>\n<p>Get the user by ID=1:</p>\n<pre>GET /apps/auth/user/1/\n</pre>\n<pre>GET /apps/auth/group/1/user/1/\n</pre>\n<p>Use <em>foreign key</em> for search available groups in ManyToManyField:</p>\n<pre>GET /apps/auth/user/_fkey/?f=groups\nGET /apps/auth/user/_fkey/?f=groups&amp;q=rator\nGET /apps/auth/user/_fkey/?f=groups&amp;q=rator&amp;o=-id&amp;l=1\n</pre>\n<p>Of course, the <em>foreign key</em> you can use with ForeignKey or OneToOneField too:</p>\n<pre>GET /apps/auth/permission/_fkey/?f=content_type\n</pre>\n<p>Modify data:</p>\n<pre>PATCH /apps/auth/user/1/ { first_name: 'Johnny' }\nPUT /apps/auth/user/1/ { first_name: 'John' }\nPOST /apps/auth/user/1/_patch/ { first_name: 'John Bo' }\nPOST /apps/auth/user/1/_put/ { first_name: 'John Bon' }\nPOST /apps/auth/user/1/_update/ { last_name: 'Jovi' }\n</pre>\n<p>Delete data:</p>\n<pre>DELETE /apps/auth/user/1/\nPOST /apps/auth/user/1/_delete/\n</pre>\n</div>\n</div>\n<div id=\"using-in-browser\">\n<h2>Using in browser</h2>\n<p>You can look at the example works in the JavaScript console and use it as a test.</p>\n<pre><span class=\"kd\">function</span> <span class=\"nx\">getCookie</span><span class=\"p\">(</span><span class=\"nx\">cname</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">name</span> <span class=\"o\">=</span> <span class=\"nx\">cname</span> <span class=\"o\">+</span> <span class=\"s1\">'='</span><span class=\"p\">;</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">ca</span> <span class=\"o\">=</span> <span class=\"nb\">document</span><span class=\"p\">.</span><span class=\"nx\">cookie</span><span class=\"p\">.</span><span class=\"nx\">split</span><span class=\"p\">(</span><span class=\"s1\">';'</span><span class=\"p\">);</span>\n    <span class=\"k\">for</span> <span class=\"p\">(</span><span class=\"kd\">var</span> <span class=\"nx\">i</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">;</span> <span class=\"nx\">i</span> <span class=\"o\">&lt;</span> <span class=\"nx\">ca</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">;</span> <span class=\"nx\">i</span><span class=\"o\">++</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n        <span class=\"kd\">var</span> <span class=\"nx\">c</span> <span class=\"o\">=</span> <span class=\"nx\">ca</span><span class=\"p\">[</span><span class=\"nx\">i</span><span class=\"p\">];</span>\n        <span class=\"k\">while</span> <span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">charAt</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"o\">===</span> <span class=\"s1\">' '</span><span class=\"p\">)</span> <span class=\"nx\">c</span> <span class=\"o\">=</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">substring</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">);</span>\n        <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">indexOf</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">)</span> <span class=\"o\">===</span> <span class=\"mi\">0</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">substring</span><span class=\"p\">(</span><span class=\"nx\">name</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">,</span> <span class=\"nx\">c</span><span class=\"p\">.</span><span class=\"nx\">length</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n    <span class=\"k\">return</span> <span class=\"s1\">''</span><span class=\"p\">;</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">function</span> <span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"nx\">method</span><span class=\"p\">,</span> <span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"nx\">data</span><span class=\"p\">,</span> <span class=\"nx\">content_type</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n    <span class=\"kd\">var</span> <span class=\"nx\">xhr</span> <span class=\"o\">=</span> <span class=\"k\">new</span> <span class=\"nx\">XMLHttpRequest</span><span class=\"p\">(),</span>\n        <span class=\"nx\">content_type</span> <span class=\"o\">=</span> <span class=\"nx\">content_type</span> <span class=\"o\">||</span> <span class=\"s1\">'application/x-www-form-urlencoded'</span><span class=\"p\">;</span>\n    <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">open</span><span class=\"p\">(</span><span class=\"nx\">method</span><span class=\"p\">,</span> <span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"kc\">false</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"o\">!</span><span class=\"p\">(</span><span class=\"sr\">/^(GET|HEAD|OPTIONS|TRACE)$/</span><span class=\"p\">.</span><span class=\"nx\">test</span><span class=\"p\">(</span><span class=\"nx\">method</span><span class=\"p\">.</span><span class=\"nx\">toUpperCase</span><span class=\"p\">())))</span> <span class=\"p\">{</span>\n        <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">,</span> <span class=\"nx\">content_type</span><span class=\"p\">);</span>\n        <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">setRequestHeader</span><span class=\"p\">(</span><span class=\"s1\">'X-CSRFToken'</span><span class=\"p\">,</span> <span class=\"nx\">getCookie</span><span class=\"p\">(</span><span class=\"s1\">'csrftoken'</span><span class=\"p\">));</span>\n    <span class=\"p\">}</span>\n    <span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">send</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">);</span>\n    <span class=\"k\">if</span> <span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">status</span> <span class=\"o\">===</span> <span class=\"mi\">200</span><span class=\"p\">)</span> <span class=\"k\">return</span> <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">parse</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">);</span>\n    <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">(</span><span class=\"nx\">xhr</span><span class=\"p\">.</span><span class=\"nx\">responseText</span><span class=\"p\">);</span>\n<span class=\"p\">}</span>\n\n<span class=\"kd\">var</span> <span class=\"nx\">group1</span> <span class=\"o\">=</span> <span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'post'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/'</span><span class=\"p\">,</span> <span class=\"s1\">'name=Operators 1'</span><span class=\"p\">),</span>\n    <span class=\"nx\">group2</span> <span class=\"o\">=</span> <span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'post'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/'</span><span class=\"p\">,</span>\n                         <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">({</span> <span class=\"nx\">name</span><span class=\"o\">:</span> <span class=\"s1\">'Operators 2'</span> <span class=\"p\">}),</span>\n                         <span class=\"s1\">'application/json'</span><span class=\"p\">);</span>\n\n<span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'get'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/?o=name,-id&amp;q=operators&amp;p=1&amp;l=3&amp;id__gte=1'</span><span class=\"p\">);</span>\n<span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'put'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/'</span> <span class=\"o\">+</span> <span class=\"nx\">group1</span><span class=\"p\">.</span><span class=\"nx\">pk</span> <span class=\"o\">+</span> <span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"s1\">'name=Operators 11'</span><span class=\"p\">);</span>\n<span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'patch'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/'</span> <span class=\"o\">+</span> <span class=\"nx\">group2</span><span class=\"p\">.</span><span class=\"nx\">pk</span> <span class=\"o\">+</span> <span class=\"s1\">'/'</span><span class=\"p\">,</span> <span class=\"s1\">'name=Operators 22'</span><span class=\"p\">);</span>\n<span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'get'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/?o=name,-id&amp;q=operators&amp;p=1&amp;l=3&amp;id__gte=1'</span><span class=\"p\">);</span>\n<span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'delete'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/'</span><span class=\"p\">,</span> <span class=\"s1\">'id='</span> <span class=\"o\">+</span> <span class=\"nx\">group1</span><span class=\"p\">.</span><span class=\"nx\">pk</span> <span class=\"o\">+</span> <span class=\"s1\">','</span> <span class=\"o\">+</span> <span class=\"nx\">group2</span><span class=\"p\">.</span><span class=\"nx\">pk</span><span class=\"p\">);</span>\n<span class=\"nx\">makeRequest</span><span class=\"p\">(</span><span class=\"s1\">'delete'</span><span class=\"p\">,</span> <span class=\"s1\">'/apps/auth/group/'</span><span class=\"p\">,</span>\n            <span class=\"nx\">JSON</span><span class=\"p\">.</span><span class=\"nx\">stringify</span><span class=\"p\">({</span> <span class=\"nx\">id</span><span class=\"o\">:</span> <span class=\"p\">[</span> <span class=\"nx\">group1</span><span class=\"p\">.</span><span class=\"nx\">pk</span><span class=\"p\">,</span> <span class=\"nx\">group2</span><span class=\"p\">.</span><span class=\"nx\">pk</span> <span class=\"p\">]</span> <span class=\"p\">}),</span>\n            <span class=\"s1\">'application/json'</span><span class=\"p\">);</span>\n</pre>\n</div>\n<div id=\"settings\">\n<h2>Settings</h2>\n<p>All next settings must be within the dictionary <cite>DIRECTAPPS</cite>, when you\ndefine them in the file settings.py</p>\n<div id=\"access-function\">\n<h3>ACCESS_FUNCTION</h3>\n<p>Function that checks access to resources. You may want to use:</p>\n<ol>\n<li><cite>directapps.access.authenticated</cite> - for authenticated users.</li>\n<li><cite>directapps.access.staff</cite> - for employers and superusers.</li>\n<li><cite>directapps.access.superuser</cite> - for superusers only.</li>\n<li><cite>directapps.access.view_users</cite> - for users with view permission for User\nmodel.</li>\n<li>any custom function.</li>\n</ol>\n<p>The default is the internal function <cite>directapps.access.staff</cite>.</p>\n</div>\n<div id=\"attribute-name\">\n<h3>ATTRIBUTE_NAME</h3>\n<p>The name of the attribute in the model that is bound to the controller.\nBy default is <cite>directapps_controller</cite>.</p>\n</div>\n<div id=\"checksum-version\">\n<h3>CHECKSUM_VERSION</h3>\n<p>The options for the checksum compilation of the scheme.\nBy default is <cite>\u201c1\u201d</cite>.</p>\n</div>\n<div id=\"controllers\">\n<h3>CONTROLLERS</h3>\n<p>Dictionary own controllers for models of third-party applications.\nBy default is blank.</p>\n</div>\n<div id=\"exclude-apps\">\n<h3>EXCLUDE_APPS</h3>\n<p>The list of excluded applications.\nBy default is blank.</p>\n</div>\n<div id=\"exclude-models\">\n<h3>EXCLUDE_MODELS</h3>\n<p>The list of excluded models.\nBy default is blank.</p>\n</div>\n<div id=\"json-dumps-params\">\n<h3>JSON_DUMPS_PARAMS</h3>\n<p>The options for creating JSON.\nBy default is <tt>{'indent': 2, 'ensure_ascii': False}</tt>.</p>\n</div>\n<div id=\"mask-password-fields\">\n<h3>MASK_PASSWORD_FIELDS</h3>\n<p>The options for masking all the fields with the name \u201cpassword\u201d.\nBy default is <cite>True</cite>.</p>\n</div>\n<div id=\"master-controller\">\n<h3>MASTER_CONTROLLER</h3>\n<p>Class (as string for import) of the master controller, which is used by default.\nBy default is <cite>None</cite> and uses internal class.</p>\n</div>\n<div id=\"use-time-isoformat\">\n<h3>USE_TIME_ISOFORMAT</h3>\n<p>The options for the using ISO time with microseconds into <cite>JSONEncoder</cite>.\nBy default is <cite>False</cite> and <cite>JSONEncoder</cite> used ECMA-262 format.</p>\n</div>\n<div id=\"search-key\">\n<h3>SEARCH_KEY</h3>\n<p>The key by which data is received for search.\nBy default is \u2018q\u2019.</p>\n</div>\n<div id=\"foreign-key\">\n<h3>FOREIGN_KEY</h3>\n<p>The key by which the name of the field or column with a relation\n(for the \u201c_fkey\u201d action) is received from the client.\nBy default is \u2018f\u2019.</p>\n</div>\n<div id=\"columns-key\">\n<h3>COLUMNS_KEY</h3>\n<p>The key by which the list of fields for rendering is received.\nBy default is \u2018c\u2019.</p>\n</div>\n<div id=\"ordering-key\">\n<h3>ORDERING_KEY</h3>\n<p>The key by which sorting is accepted from the client.\nBy default is \u2018o\u2019.</p>\n</div>\n<div id=\"limit-key\">\n<h3>LIMIT_KEY</h3>\n<p>The key by which the limit of records is accepted from the client.\nBy default is \u2018l\u2019.</p>\n</div>\n<div id=\"page-key\">\n<h3>PAGE_KEY</h3>\n<p>The key by which the client receives the page number.\nBy default is \u2018p\u2019.</p>\n</div>\n<div id=\"limit\">\n<h3>LIMIT</h3>\n<p>The global working limit of returned records.\nBy default is 10.</p>\n</div>\n<div id=\"max-limit\">\n<h3>MAX_LIMIT</h3>\n<p>The global maximum limit of returned records, which does not allow to kill the\nserver with huge data sets.\nBy default is 50.</p>\n</div>\n</div>\n<div id=\"customizing-of-controllers\">\n<h2>Customizing of controllers</h2>\n<p>To change the behavior globally for all your controllers, make your main\ncontroller based on the built-in and connect it:</p>\n<pre><span class=\"c1\"># myapp/controllers.py</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">directapps</span> <span class=\"kn\">import</span> <span class=\"n\">controllers</span>\n\n<span class=\"n\">logger</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">getLogger</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomModelController</span><span class=\"p\">(</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">ModelController</span><span class=\"p\">):</span>\n    <span class=\"c1\"># of course, your may be do it in the settings, but just for example :)</span>\n    <span class=\"n\">search_key</span> <span class=\"o\">=</span> <span class=\"s1\">'search'</span>\n    <span class=\"n\">limit</span> <span class=\"o\">=</span> <span class=\"mi\">50</span>\n    <span class=\"n\">max_limit</span> <span class=\"o\">=</span> <span class=\"mi\">1000</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomObjectController</span><span class=\"p\">(</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">ObjectController</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">action_get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"n\">logger</span><span class=\"o\">.</span><span class=\"n\">info</span><span class=\"p\">(</span>\n          <span class=\"s1\">'</span><span class=\"si\">%s</span><span class=\"s1\"> open </span><span class=\"si\">%s</span><span class=\"s1\"> with ID=</span><span class=\"si\">%s</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">,</span>\n        <span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">action_get</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"nb\">object</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomMasterController</span><span class=\"p\">(</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">MasterController</span><span class=\"p\">):</span>\n\n    <span class=\"n\">model_ctrl_class</span> <span class=\"o\">=</span> <span class=\"n\">CustomModelController</span>\n    <span class=\"n\">object_ctrl_class</span> <span class=\"o\">=</span> <span class=\"n\">CustomObjectController</span>\n</pre>\n<pre><span class=\"c1\"># settings.py</span>\n\n<span class=\"n\">DIRECTAPPS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'MASTER_CONTROLLER'</span><span class=\"p\">:</span> <span class=\"s1\">'myapp.controllers.CustomMasterController'</span>\n<span class=\"p\">}</span>\n</pre>\n<p>To change the behavior of only one controller, make your own based on the\nbuilt-in and connect it like this:</p>\n<pre><span class=\"c1\"># myapp/controllers.py</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">django.db.models</span> <span class=\"kn\">import</span> <span class=\"n\">Count</span>\n<span class=\"kn\">from</span> <span class=\"nn\">directapps</span> <span class=\"kn\">import</span> <span class=\"n\">controllers</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserModelController</span><span class=\"p\">(</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">ModelController</span><span class=\"p\">):</span>\n    <span class=\"n\">annotations</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n        <span class=\"c1\"># Method or property on instance of model.</span>\n        <span class=\"s1\">'get_full_name'</span><span class=\"p\">,</span>\n        <span class=\"s1\">'get_short_name'</span><span class=\"p\">,</span>\n        <span class=\"c1\"># QuerySet annotation.</span>\n        <span class=\"s1\">'groups__count'</span><span class=\"p\">,</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">get_queryset</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Returns modified QuerySet.\"\"\"</span>\n        <span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n        <span class=\"n\">qs</span> <span class=\"o\">=</span> <span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">annotate</span><span class=\"p\">(</span><span class=\"n\">Count</span><span class=\"p\">(</span><span class=\"s1\">'groups'</span><span class=\"p\">))</span>\n        <span class=\"k\">return</span> <span class=\"n\">qs</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">info</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">qs</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"Returns information about the set. Redefined method.\"\"\"</span>\n        <span class=\"n\">all_users</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">get_queryset</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">using</span><span class=\"o\">=</span><span class=\"n\">qs</span><span class=\"o\">.</span><span class=\"n\">using</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'total'</span><span class=\"p\">:</span> <span class=\"n\">all_users</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">()</span>\n        <span class=\"p\">}</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">UserController</span><span class=\"p\">(</span><span class=\"n\">controllers</span><span class=\"o\">.</span><span class=\"n\">MasterController</span><span class=\"p\">):</span>\n\n    <span class=\"n\">model_ctrl_class</span> <span class=\"o\">=</span> <span class=\"n\">UserModelController</span>\n</pre>\n<pre><span class=\"c1\"># settins.py</span>\n\n<span class=\"n\">DIRECTAPPS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'CONTROLLERS'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'auth.user'</span><span class=\"p\">:</span> <span class=\"s1\">'myapp.controllers.UserController'</span><span class=\"p\">,</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>If you want to translate the app into your language or to offer a more\ncompetent application code, you can do so using the \u201cPull Requests\u201d on <a href=\"https://gitlab.com/djbaldey/django-directapps/\" rel=\"nofollow\">gitlab</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 5191063, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "94641bbe40c297bc73595d4e0c03b558", "sha256": "55935036c338bd7b18a79383f5e7c775eb3099984a1a61ffdae41b452a174517"}, "downloads": -1, "filename": "django-directapps-0.1.tar.gz", "has_sig": false, "md5_digest": "94641bbe40c297bc73595d4e0c03b558", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30217, "upload_time": "2016-03-20T07:34:58", "upload_time_iso_8601": "2016-03-20T07:34:58.275704Z", "url": "https://files.pythonhosted.org/packages/61/24/b01c0798d8f8975e1cf3d5e5e4676e1e85caca0c0214bd8b8ab144c80ece/django-directapps-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a94a9aacda50f0c1580fb7d9c70500f7", "sha256": "f38016b864f8af42f3768bad7336b6a023b9f6d88d5abf4bcd963f29b3f365b6"}, "downloads": -1, "filename": "django-directapps-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a94a9aacda50f0c1580fb7d9c70500f7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32105, "upload_time": "2016-03-20T15:35:18", "upload_time_iso_8601": "2016-03-20T15:35:18.433415Z", "url": "https://files.pythonhosted.org/packages/cc/6a/70493282274efc13939b4248d5e08270045bae6667037a6cd18ac1a41b03/django-directapps-0.1.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "a5d51a1be2892631312f4de592381d05", "sha256": "5c719f58926f09f367bc5386ba4e3babb86612b9453359a5214763ab34a230b5"}, "downloads": -1, "filename": "django-directapps-0.2.tar.gz", "has_sig": false, "md5_digest": "a5d51a1be2892631312f4de592381d05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33389, "upload_time": "2016-05-27T04:43:25", "upload_time_iso_8601": "2016-05-27T04:43:25.633527Z", "url": "https://files.pythonhosted.org/packages/e9/b6/7cbae9d185db32d30f92818a6d23d80f20200ba01f698ce2b579ea65b14d/django-directapps-0.2.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "e417db62b5cb6ae684a39a4f16fd0c47", "sha256": "703d2c40ff1a45fa9b3bcfdc7311867304167dd71c141f2c508cd10eb45babd1"}, "downloads": -1, "filename": "django-directapps-0.5.tar.gz", "has_sig": false, "md5_digest": "e417db62b5cb6ae684a39a4f16fd0c47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37514, "upload_time": "2016-12-17T03:15:26", "upload_time_iso_8601": "2016-12-17T03:15:26.466579Z", "url": "https://files.pythonhosted.org/packages/45/de/aee15ac06d198e14e27cf2f1be91d8155dfa6e639e544ea4a602480cffc8/django-directapps-0.5.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "fa417b935d0aa4eb9b9214c8ed4e5ead", "sha256": "f6ef6d6d581b3f4b766e8515f5d4d3a9bd56dbb4fbcb81ac2ca7e7c97da42777"}, "downloads": -1, "filename": "django-directapps-0.5.2.tar.gz", "has_sig": false, "md5_digest": "fa417b935d0aa4eb9b9214c8ed4e5ead", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33947, "upload_time": "2018-01-09T13:33:16", "upload_time_iso_8601": "2018-01-09T13:33:16.425232Z", "url": "https://files.pythonhosted.org/packages/df/19/0110de9e57f873d0bd55708e54ff4e646b4a841ce69c65e26693954ee034/django-directapps-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "b9db70598fc63bae89c1409707875401", "sha256": "dd21f22ef290e3cc395934273490924cf344a20d5dc4e19ddb28ae95a1389dc2"}, "downloads": -1, "filename": "django-directapps-0.5.3.tar.gz", "has_sig": false, "md5_digest": "b9db70598fc63bae89c1409707875401", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34519, "upload_time": "2018-05-17T12:44:34", "upload_time_iso_8601": "2018-05-17T12:44:34.318124Z", "url": "https://files.pythonhosted.org/packages/ac/a6/2a6f86d490020cf7a55a644687d1078d3c2affebe6985afd59307b7b1dbb/django-directapps-0.5.3.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "e15e217dd51f4c9e3749c995feaf4426", "sha256": "7ce1a7e640d4d0e3ea032c860e5c754476afd95d3b583353688f63c29449a596"}, "downloads": -1, "filename": "django-directapps-0.6.1.tar.gz", "has_sig": false, "md5_digest": "e15e217dd51f4c9e3749c995feaf4426", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 34886, "upload_time": "2019-04-08T08:12:39", "upload_time_iso_8601": "2019-04-08T08:12:39.575364Z", "url": "https://files.pythonhosted.org/packages/40/f8/cf8c3f0bfa282b545692103214c0ec6b6282fbc0d235116c7b64631fa6f1/django-directapps-0.6.1.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "1316d0fdda53e824649584d9b95cfbd0", "sha256": "6dc61e633cc90c75e17f6e93ef5021a0d9b454c79ac303ceb0cabed82ece1e50"}, "downloads": -1, "filename": "django-directapps-0.7.tar.gz", "has_sig": false, "md5_digest": "1316d0fdda53e824649584d9b95cfbd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24507, "upload_time": "2019-04-26T05:23:08", "upload_time_iso_8601": "2019-04-26T05:23:08.474867Z", "url": "https://files.pythonhosted.org/packages/5b/43/b9f24eaaa87938aa1ee9b2396886587612fd5398a0d96c1d869330e00c05/django-directapps-0.7.tar.gz", "yanked": false}], "0.7b0": [{"comment_text": "", "digests": {"md5": "d82dd5493e0c7d94288ca26589d6dd2c", "sha256": "1d0eb6acabea9d58b30aca21605c7e238ac30281376dd9dbacb4975a059c8ceb"}, "downloads": -1, "filename": "django-directapps-0.7b0.tar.gz", "has_sig": false, "md5_digest": "d82dd5493e0c7d94288ca26589d6dd2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23626, "upload_time": "2019-04-08T08:18:33", "upload_time_iso_8601": "2019-04-08T08:18:33.377932Z", "url": "https://files.pythonhosted.org/packages/93/d0/0368db9e1ab8cefe116bfae08a9123a126c121fcf6488ee0e72d369d19da/django-directapps-0.7b0.tar.gz", "yanked": false}], "0.7rc1": [{"comment_text": "", "digests": {"md5": "da8abc32d6fb5d40a31bc54f15774650", "sha256": "3eb140dfb4fb73353535b26c780471d569f4d45a009ac78a4a07ce37bd4ae478"}, "downloads": -1, "filename": "django_directapps-0.7rc1-py3-none-any.whl", "has_sig": false, "md5_digest": "da8abc32d6fb5d40a31bc54f15774650", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32181, "upload_time": "2019-04-21T06:36:24", "upload_time_iso_8601": "2019-04-21T06:36:24.446126Z", "url": "https://files.pythonhosted.org/packages/f0/04/8df4fb18ae44b2b7578dbf61c436cc67f5311f09adc654bde11d4a6df947/django_directapps-0.7rc1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1316d0fdda53e824649584d9b95cfbd0", "sha256": "6dc61e633cc90c75e17f6e93ef5021a0d9b454c79ac303ceb0cabed82ece1e50"}, "downloads": -1, "filename": "django-directapps-0.7.tar.gz", "has_sig": false, "md5_digest": "1316d0fdda53e824649584d9b95cfbd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24507, "upload_time": "2019-04-26T05:23:08", "upload_time_iso_8601": "2019-04-26T05:23:08.474867Z", "url": "https://files.pythonhosted.org/packages/5b/43/b9f24eaaa87938aa1ee9b2396886587612fd5398a0d96c1d869330e00c05/django-directapps-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:34 2020"}