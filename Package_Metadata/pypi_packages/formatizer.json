{"info": {"author": "Fotis Gimian", "author_email": "fgimiansoftware@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries", "Topic :: Utilities"], "description": "Formatizer\n==========\n\n|Build Status| |Coverage Status|\n\n.. |Build Status| image:: https://travis-ci.org/fgimian/formatizer.svg?branch=master\n   :target: https://travis-ci.org/fgimian/formatizer\n.. |Coverage Status| image:: https://coveralls.io/repos/fgimian/formatizer/badge.png\n   :target: https://coveralls.io/r/fgimian/formatizer\n\n.. image:: https://raw.githubusercontent.com/fgimian/formatizer/master/images/formatizer-logo.png\n   :height: 225px\n   :alt: Formatizer Logo\n\nAwesome artwork provided courtesy of `Open Clip Art\nLibrary <https://openclipart.org/detail/75799/registry-book>`__\n\nFormatizer provides literal string formatting for Python versions older\nthan 3.6. This replaces the need for substitution using ``%`` or the\n``format`` function.\n\nFormatizer is covered by unit tests and Flake8 compliance. Please note\nthat this library does use ``eval`` to perform its expression\nprocessing.\n\nQuick Start\n-----------\n\nInstall Formatizer in your virtualenv as follows:\n\n.. code:: bash\n\n    pip install formatizer\n\nAnd now, go ahead and use the f function similarly to `PEP\n498 <https://www.python.org/dev/peps/pep-0498/>`__:\n\n.. code:: python\n\n    from __future__ import print_function\n    from formatizer import f\n\n    GREETING = 'hi'\n\n    def main():\n        name = 'Fotis'\n        print(f('My name is {name}, I say {GREETING} and 1 + 2 is {1 + 2}'))\n\n    if __name__ == '__main__':\n        main()\n\nAll local and global variables will be recognised by the ``f`` function\nand complete Python expressions are also allowed between the braces much\nlike Python 3.6.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fgimian/formatizer", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "formatizer", "package_url": "https://pypi.org/project/formatizer/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/formatizer/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/fgimian/formatizer"}, "release_url": "https://pypi.org/project/formatizer/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Literal string formatting for Python versions older than 3.6", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/fgimian/formatizer\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c870e586e7a3f8341f7360d8c614b78806858050/68747470733a2f2f7472617669732d63692e6f72672f6667696d69616e2f666f726d6174697a65722e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/fgimian/formatizer\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fee95c59710afd73c8e1778475b6bd1b3a8528a3/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6667696d69616e2f666f726d6174697a65722f62616467652e706e67\"></a></p>\n<img alt=\"Formatizer Logo\" height=\"225px\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e97849d1b89504ebbe3b64bfd4fd71aea83efaaf/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6667696d69616e2f666f726d6174697a65722f6d61737465722f696d616765732f666f726d6174697a65722d6c6f676f2e706e67\">\n<p>Awesome artwork provided courtesy of <a href=\"https://openclipart.org/detail/75799/registry-book\" rel=\"nofollow\">Open Clip Art\nLibrary</a></p>\n<p>Formatizer provides literal string formatting for Python versions older\nthan 3.6. This replaces the need for substitution using <tt>%</tt> or the\n<tt>format</tt> function.</p>\n<p>Formatizer is covered by unit tests and Flake8 compliance. Please note\nthat this library does use <tt>eval</tt> to perform its expression\nprocessing.</p>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Install Formatizer in your virtualenv as follows:</p>\n<pre>pip install formatizer\n</pre>\n<p>And now, go ahead and use the f function similarly to <a href=\"https://www.python.org/dev/peps/pep-0498/\" rel=\"nofollow\">PEP\n498</a>:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"kn\">from</span> <span class=\"nn\">formatizer</span> <span class=\"kn\">import</span> <span class=\"n\">f</span>\n\n<span class=\"n\">GREETING</span> <span class=\"o\">=</span> <span class=\"s1\">'hi'</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'Fotis'</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">(</span><span class=\"s1\">'My name is </span><span class=\"si\">{name}</span><span class=\"s1\">, I say </span><span class=\"si\">{GREETING}</span><span class=\"s1\"> and 1 + 2 is {1 + 2}'</span><span class=\"p\">))</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>All local and global variables will be recognised by the <tt>f</tt> function\nand complete Python expressions are also allowed between the braces much\nlike Python 3.6.</p>\n</div>\n\n          </div>"}, "last_serial": 2142413, "releases": {"0.1": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "38ba4770383e7018c246b7ac3f0a164c", "sha256": "3061ced1daa08f1836b79f4a3de16a33a54179331273e0b9c757d27ab339c29f"}, "downloads": -1, "filename": "formatizer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "38ba4770383e7018c246b7ac3f0a164c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3694, "upload_time": "2016-05-31T11:34:19", "upload_time_iso_8601": "2016-05-31T11:34:19.928921Z", "url": "https://files.pythonhosted.org/packages/60/ff/06524217a4497224022576f39f12f72a108921ac0033f69660abd24346ae/formatizer-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38ba4770383e7018c246b7ac3f0a164c", "sha256": "3061ced1daa08f1836b79f4a3de16a33a54179331273e0b9c757d27ab339c29f"}, "downloads": -1, "filename": "formatizer-0.1.1.tar.gz", "has_sig": false, "md5_digest": "38ba4770383e7018c246b7ac3f0a164c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3694, "upload_time": "2016-05-31T11:34:19", "upload_time_iso_8601": "2016-05-31T11:34:19.928921Z", "url": "https://files.pythonhosted.org/packages/60/ff/06524217a4497224022576f39f12f72a108921ac0033f69660abd24346ae/formatizer-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:00:49 2020"}