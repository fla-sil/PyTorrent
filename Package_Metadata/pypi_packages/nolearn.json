{"info": {"author": "Daniel Nouri", "author_email": "daniel.nouri@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4"], "description": "*nolearn* contains a number of wrappers and abstractions around\nexisting neural network libraries, most notably `Lasagne\n<http://lasagne.readthedocs.org/>`_, along with a few machine learning\nutility modules.  All code is written to be compatible with\n`scikit-learn <http://scikit-learn.org/>`_.\n\n.. note::\n\n  nolearn is currently unmaintained.  However, if you follow the\n  installation instructions, you should still be able to get it to\n  work (namely with library versions that are outdated at this point).\n\n  If you're looking for an alternative to *nolearn.lasagne*, a library\n  that integrates neural networks with scikit-learn, then take a look\n  at `skorch <https://github.com/skorch-dev/skorch>`_, which wraps\n  PyTorch for scikit-learn.\n\n\n.. image:: https://travis-ci.org/dnouri/nolearn.svg?branch=master\n    :target: https://travis-ci.org/dnouri/nolearn\n\nInstallation\n============\n\nWe recommend using `venv\n<https://docs.python.org/3/library/venv.html>`_ (when using Python 3)\nor `virtualenv\n<http://www.dabapps.com/blog/introduction-to-pip-and-virtualenv-python/>`_\n(Python 2) to install nolearn.\n\nnolearn comes with a list of known good versions of dependencies that\nwe test with in ``requirements.txt``.  To install the latest version\nof nolearn from Git along with these known good dependencies, run\nthese two commands::\n\n  pip install -r https://raw.githubusercontent.com/dnouri/nolearn/master/requirements.txt\n  pip install git+https://github.com/dnouri/nolearn.git\n\nDocumentation\n=============\n\nIf you're looking for how to use *nolearn.lasagne*, then there's two\nintroductory tutorials that you can choose from:\n\n- `Using convolutional neural nets to detect facial keypoints tutorial\n  <http://danielnouri.org/notes/2014/12/17/using-convolutional-neural-nets-to-detect-facial-keypoints-tutorial/>`_\n  with `code <https://github.com/dnouri/kfkd-tutorial>`__\n\n- `Training convolutional neural networks with nolearn\n  <http://nbviewer.ipython.org/github/dnouri/nolearn/blob/master/docs/notebooks/CNN_tutorial.ipynb>`_\n  \nFor specifics around classes and functions out of the *lasagne*\npackage, such as layers, updates, and nonlinearities, you'll want to\nlook at the `Lasagne project's documentation\n<http://lasagne.readthedocs.org/>`_.\n\n*nolearn.lasagne* comes with a `number of tests\n<https://github.com/dnouri/nolearn/tree/master/nolearn/lasagne/tests>`__\nthat demonstrate some of the more advanced features, such as networks\nwith merge layers, and networks with multiple inputs.\n\n`nolearn's own documentation <http://packages.python.org/nolearn/>`__\nis somewhat out of date at this point.  But there's more resources\nonline.\n\nFinally, there's a few presentations and examples from around the web.\nNote that some of these might need a specific version of nolearn and\nLasange to run:\n\n- Oliver D\u00fcrr's `Convolutional Neural Nets II Hands On\n  <https://home.zhaw.ch/~dueo/bbs/files/ConvNets_24_April.pdf>`_ with\n  `code <https://github.com/oduerr/dl_tutorial/tree/master/lasagne>`__\n\n- Roelof Pieters' presentation `Python for Image Understanding\n  <http://www.slideshare.net/roelofp/python-for-image-understanding-deep-learning-with-convolutional-neural-nets>`_\n  comes with nolearn.lasagne code examples\n\n- Benjamin Bossan's `Otto Group Product Classification Challenge\n  using nolearn/lasagne\n  <https://github.com/ottogroup/kaggle/blob/master/Otto_Group_Competition.ipynb>`_\n\n- Kaggle's `instructions on how to set up an AWS GPU instance to run\n  nolearn.lasagne\n  <https://www.kaggle.com/c/facial-keypoints-detection/details/deep-learning-tutorial>`_\n  and the facial keypoint detection tutorial\n\n- `An example convolutional autoencoder\n  <https://github.com/mikesj-public/convolutional_autoencoder/blob/master/mnist_conv_autoencode.ipynb>`_\n\n- Winners of the saliency prediction task in the 2015 `LSUN Challenge\n  <http://lsun.cs.princeton.edu/>`_ have published their\n  `lasagne/nolearn-based code\n  <https://imatge.upc.edu/web/resources/end-end-convolutional-networks-saliency-prediction-software>`__.\n\n- The winners of the 2nd place in the `Kaggle Diabetic Retinopathy Detection\n  challenge <https://www.kaggle.com/c/diabetic-retinopathy-detection>`_ have\n  published their `lasagne/nolearn-based code\n  <https://github.com/sveitser/kaggle_diabetic>`__.\n\n- The winner of the 2nd place in the `Kaggle Right Whale Recognition\n  challenge <https://www.kaggle.com/c/noaa-right-whale-recognition>`_ has\n  published his `lasagne/nolearn-based code\n  <https://github.com/felixlaumon/kaggle-right-whale>`__.\n\nSupport\n=======\n\nIf you're seeing a bug with nolearn, please submit a bug report to the\n`nolearn issue tracker <https://github.com/dnouri/nolearn/issues>`_.\nMake sure to include information such as:\n\n- how to reproduce the error: show us how to trigger the bug using a\n  minimal example\n\n- what versions you are using: include the Git revision and/or version\n  of nolearn (and possibly Lasagne) that you're using\n\nPlease also make sure to search the issue tracker to see if your issue\nhas been encountered before or fixed.\n\nIf you believe that you're seeing an issue with Lasagne, which is a\ndifferent software project, please use the `Lasagne issue tracker\n<https://github.com/Lasagne/Lasagne/issues>`_ instead.\n\nThere's currently no user mailing list for nolearn.  However, if you\nhave a question related to Lasagne, you might want to try the `Lasagne\nusers list <https://groups.google.com/d/forum/lasagne-users>`_, or use\nStack Overflow.  Please refrain from contacting the authors for\nnon-commercial support requests directly; public forums are the right\nplace for these.\n\nCitation\n========\n\nCitations are welcome:\n\n    Daniel Nouri. 2014. *nolearn: scikit-learn compatible neural\n    network library* https://github.com/dnouri/nolearn\n\nLicense\n=======\n\nSee the `LICENSE.txt <LICENSE.txt>`_ file for license rights and\nlimitations (MIT).\n\n\nChange History\n==============\n\n0.6.1 - 2019-11-05\n------------------\n\nSee Github for a list of changes between this release and the last:\nhttps://github.com/dnouri/nolearn/pulls?q=is%3Apr+is%3Aclosed\n\n0.6.0 - 2016-08-27\n------------------\n\nThanks to @BenjaminBossan, @cancan101, @DanChianucci who greatly\ncontributed to this release.\n\n- lasagne: Many improvements to the nolearn.lasagne interface.  Some\n  of the more important changes:\n\n  - Add basic support for multiple outputs\n    https://github.com/dnouri/nolearn/pull/278\n\n  - Extra scores can now be computed as part of Theano computation\n    graph\n    https://github.com/dnouri/nolearn/pull/261\n\n  - Fix excessive memory usage in batch iterator when using shuffle\n    https://github.com/dnouri/nolearn/pull/238\n\n  - Add visualization code for saliency maps\n    https://github.com/dnouri/nolearn/pull/223\n\n  - Add method for convenient access of network's intermediate layer\n    output\n    https://github.com/dnouri/nolearn/pull/196\n\n  - Allow gradients to be scaled per layer\n    https://github.com/dnouri/nolearn/pull/195\n\n  - Add shuffling to BatchIterator\n    https://github.com/dnouri/nolearn/pull/193\n\n  - Add l1 and l2 regularization to default objective\n    https://github.com/dnouri/nolearn/pull/169\n\n  - Add RememberBestWeights handler: restores best weights after\n    training\n    https://github.com/dnouri/nolearn/pull/155\n\n  - Passing Lasagne layer instances to 'layers' parameter of NeuralNet\n    is now possible\n    https://github.com/dnouri/nolearn/pull/146\n\n  - Add feature visualization functions plot_loss, plot_weights,\n    plot_activity, and plot_occlusion.  The latter shows for image\n    samples, which part of the images are crucial for the prediction\n    https://github.com/dnouri/nolearn/pull/74\n\n  - Add SaveWeights handler that saves weights to disk every n epochs\n    https://github.com/dnouri/nolearn/pull/91\n\n  - In verbose mode, print out more detailed layer information before\n    starting with training\n    https://github.com/dnouri/nolearn/pull/85\n\n  - List of NeuralNet's 'layers' parameter may now be formatted to\n    contain '(layer_factory, layer_kwargs)' tuples\n    https://github.com/dnouri/nolearn/pull/73\n\n- dbn: Added back module dbn because there's a few online articles\n  referencing it.  Works with Python 2 only.\n\n- Removed deprecated modules.  Also deprecate grid_search module.\n\n0.5 - 2015-01-22\n----------------\n\n- Deprecated modules console, dataset, dbn, and model.\n\n- lasagne: Added scikit-learn compatible wrapper around the `Lasagne`\n  neural network library for building simple feed-forward networks.\n\n0.5b1 - 2014-08-09\n------------------\n\n- overfeat: Add OverFeat-based feature extractor.\n\n- caffe: Add feature extractor based on ImageNet-pretrained nets found\n  in caffe.\n\n0.4 - 2014-01-15\n----------------\n\n- cache: Use joblib's `numpy_pickle` instead of `cPickle` to persist.\n\n0.3.1 - 2013-11-18\n------------------\n\n- convnet: Add `center_only` and `classify_direct` options.\n\n0.3 - 2013-11-02\n----------------\n\n- convnet: Add scikit-learn estimator based on Jia and Donahue's\n  `DeCAF`.\n\n- dbn: Change default args of `use_re_lu=True` and `nesterov=True`.\n\n0.2 - 2013-03-03\n----------------\n\n- dbn: Add parameters `learn_rate_decays` and `learn_rate_minimums`,\n  which allow for decreasing the learning after each epoch of\n  fine-tuning.\n\n- dbn: Allow `-1` as the value of the input and output layers of the\n  neural network.  The shapes of `X` and `y` will then be used to\n  determine those.\n\n- dbn: Add support for processing sparse input data matrices.\n\n- dbn: Improve miserable speed of `DBN.predict_proba`.\n\n0.2b1 - 2012-12-30\n------------------\n\n- Added a scikit-learn estimator based on George Dahl's `gdbn` in\n  `nolearn.dbn`.\n", "description_content_type": "", "docs_url": "https://pythonhosted.org/nolearn/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dnouri/nolearn", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "nolearn", "package_url": "https://pypi.org/project/nolearn/", "platform": "", "project_url": "https://pypi.org/project/nolearn/", "project_urls": {"Homepage": "https://github.com/dnouri/nolearn"}, "release_url": "https://pypi.org/project/nolearn/0.6.1/", "requires_dist": null, "requires_python": "", "summary": "scikit-learn compatible neural network library", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><em>nolearn</em> contains a number of wrappers and abstractions around\nexisting neural network libraries, most notably <a href=\"http://lasagne.readthedocs.org/\" rel=\"nofollow\">Lasagne</a>, along with a few machine learning\nutility modules.  All code is written to be compatible with\n<a href=\"http://scikit-learn.org/\" rel=\"nofollow\">scikit-learn</a>.</p>\n<div>\n<p>Note</p>\n<p>nolearn is currently unmaintained.  However, if you follow the\ninstallation instructions, you should still be able to get it to\nwork (namely with library versions that are outdated at this point).</p>\n<p>If you\u2019re looking for an alternative to <em>nolearn.lasagne</em>, a library\nthat integrates neural networks with scikit-learn, then take a look\nat <a href=\"https://github.com/skorch-dev/skorch\" rel=\"nofollow\">skorch</a>, which wraps\nPyTorch for scikit-learn.</p>\n</div>\n<a href=\"https://travis-ci.org/dnouri/nolearn\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/dnouri/nolearn.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b8efad99788f824886cc91901e3843d4b1e4cc76/68747470733a2f2f7472617669732d63692e6f72672f646e6f7572692f6e6f6c6561726e2e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>We recommend using <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">venv</a> (when using Python 3)\nor <a href=\"http://www.dabapps.com/blog/introduction-to-pip-and-virtualenv-python/\" rel=\"nofollow\">virtualenv</a>\n(Python 2) to install nolearn.</p>\n<p>nolearn comes with a list of known good versions of dependencies that\nwe test with in <tt>requirements.txt</tt>.  To install the latest version\nof nolearn from Git along with these known good dependencies, run\nthese two commands:</p>\n<pre>pip install -r https://raw.githubusercontent.com/dnouri/nolearn/master/requirements.txt\npip install git+https://github.com/dnouri/nolearn.git\n</pre>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>If you\u2019re looking for how to use <em>nolearn.lasagne</em>, then there\u2019s two\nintroductory tutorials that you can choose from:</p>\n<ul>\n<li><a href=\"http://danielnouri.org/notes/2014/12/17/using-convolutional-neural-nets-to-detect-facial-keypoints-tutorial/\" rel=\"nofollow\">Using convolutional neural nets to detect facial keypoints tutorial</a>\nwith <a href=\"https://github.com/dnouri/kfkd-tutorial\" rel=\"nofollow\">code</a></li>\n<li><a href=\"http://nbviewer.ipython.org/github/dnouri/nolearn/blob/master/docs/notebooks/CNN_tutorial.ipynb\" rel=\"nofollow\">Training convolutional neural networks with nolearn</a></li>\n</ul>\n<p>For specifics around classes and functions out of the <em>lasagne</em>\npackage, such as layers, updates, and nonlinearities, you\u2019ll want to\nlook at the <a href=\"http://lasagne.readthedocs.org/\" rel=\"nofollow\">Lasagne project\u2019s documentation</a>.</p>\n<p><em>nolearn.lasagne</em> comes with a <a href=\"https://github.com/dnouri/nolearn/tree/master/nolearn/lasagne/tests\" rel=\"nofollow\">number of tests</a>\nthat demonstrate some of the more advanced features, such as networks\nwith merge layers, and networks with multiple inputs.</p>\n<p><a href=\"http://packages.python.org/nolearn/\" rel=\"nofollow\">nolearn\u2019s own documentation</a>\nis somewhat out of date at this point.  But there\u2019s more resources\nonline.</p>\n<p>Finally, there\u2019s a few presentations and examples from around the web.\nNote that some of these might need a specific version of nolearn and\nLasange to run:</p>\n<ul>\n<li>Oliver D\u00fcrr\u2019s <a href=\"https://home.zhaw.ch/~dueo/bbs/files/ConvNets_24_April.pdf\" rel=\"nofollow\">Convolutional Neural Nets II Hands On</a> with\n<a href=\"https://github.com/oduerr/dl_tutorial/tree/master/lasagne\" rel=\"nofollow\">code</a></li>\n<li>Roelof Pieters\u2019 presentation <a href=\"http://www.slideshare.net/roelofp/python-for-image-understanding-deep-learning-with-convolutional-neural-nets\" rel=\"nofollow\">Python for Image Understanding</a>\ncomes with nolearn.lasagne code examples</li>\n<li>Benjamin Bossan\u2019s <a href=\"https://github.com/ottogroup/kaggle/blob/master/Otto_Group_Competition.ipynb\" rel=\"nofollow\">Otto Group Product Classification Challenge\nusing nolearn/lasagne</a></li>\n<li>Kaggle\u2019s <a href=\"https://www.kaggle.com/c/facial-keypoints-detection/details/deep-learning-tutorial\" rel=\"nofollow\">instructions on how to set up an AWS GPU instance to run\nnolearn.lasagne</a>\nand the facial keypoint detection tutorial</li>\n<li><a href=\"https://github.com/mikesj-public/convolutional_autoencoder/blob/master/mnist_conv_autoencode.ipynb\" rel=\"nofollow\">An example convolutional autoencoder</a></li>\n<li>Winners of the saliency prediction task in the 2015 <a href=\"http://lsun.cs.princeton.edu/\" rel=\"nofollow\">LSUN Challenge</a> have published their\n<a href=\"https://imatge.upc.edu/web/resources/end-end-convolutional-networks-saliency-prediction-software\" rel=\"nofollow\">lasagne/nolearn-based code</a>.</li>\n<li>The winners of the 2nd place in the <a href=\"https://www.kaggle.com/c/diabetic-retinopathy-detection\" rel=\"nofollow\">Kaggle Diabetic Retinopathy Detection\nchallenge</a> have\npublished their <a href=\"https://github.com/sveitser/kaggle_diabetic\" rel=\"nofollow\">lasagne/nolearn-based code</a>.</li>\n<li>The winner of the 2nd place in the <a href=\"https://www.kaggle.com/c/noaa-right-whale-recognition\" rel=\"nofollow\">Kaggle Right Whale Recognition\nchallenge</a> has\npublished his <a href=\"https://github.com/felixlaumon/kaggle-right-whale\" rel=\"nofollow\">lasagne/nolearn-based code</a>.</li>\n</ul>\n</div>\n<div id=\"support\">\n<h2>Support</h2>\n<p>If you\u2019re seeing a bug with nolearn, please submit a bug report to the\n<a href=\"https://github.com/dnouri/nolearn/issues\" rel=\"nofollow\">nolearn issue tracker</a>.\nMake sure to include information such as:</p>\n<ul>\n<li>how to reproduce the error: show us how to trigger the bug using a\nminimal example</li>\n<li>what versions you are using: include the Git revision and/or version\nof nolearn (and possibly Lasagne) that you\u2019re using</li>\n</ul>\n<p>Please also make sure to search the issue tracker to see if your issue\nhas been encountered before or fixed.</p>\n<p>If you believe that you\u2019re seeing an issue with Lasagne, which is a\ndifferent software project, please use the <a href=\"https://github.com/Lasagne/Lasagne/issues\" rel=\"nofollow\">Lasagne issue tracker</a> instead.</p>\n<p>There\u2019s currently no user mailing list for nolearn.  However, if you\nhave a question related to Lasagne, you might want to try the <a href=\"https://groups.google.com/d/forum/lasagne-users\" rel=\"nofollow\">Lasagne\nusers list</a>, or use\nStack Overflow.  Please refrain from contacting the authors for\nnon-commercial support requests directly; public forums are the right\nplace for these.</p>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>Citations are welcome:</p>\n<blockquote>\nDaniel Nouri. 2014. <em>nolearn: scikit-learn compatible neural\nnetwork library</em> <a href=\"https://github.com/dnouri/nolearn\" rel=\"nofollow\">https://github.com/dnouri/nolearn</a></blockquote>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See the <a href=\"LICENSE.txt\" rel=\"nofollow\">LICENSE.txt</a> file for license rights and\nlimitations (MIT).</p>\n</div>\n<div id=\"change-history\">\n<h2>Change History</h2>\n<div id=\"id1\">\n<h3>0.6.1 - 2019-11-05</h3>\n<p>See Github for a list of changes between this release and the last:\n<a href=\"https://github.com/dnouri/nolearn/pulls?q=is%3Apr+is%3Aclosed\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pulls?q=is%3Apr+is%3Aclosed</a></p>\n</div>\n<div id=\"id2\">\n<h3>0.6.0 - 2016-08-27</h3>\n<p>Thanks to @BenjaminBossan, @cancan101, @DanChianucci who greatly\ncontributed to this release.</p>\n<ul>\n<li>lasagne: Many improvements to the nolearn.lasagne interface.  Some\nof the more important changes:<ul>\n<li>Add basic support for multiple outputs\n<a href=\"https://github.com/dnouri/nolearn/pull/278\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/278</a></li>\n<li>Extra scores can now be computed as part of Theano computation\ngraph\n<a href=\"https://github.com/dnouri/nolearn/pull/261\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/261</a></li>\n<li>Fix excessive memory usage in batch iterator when using shuffle\n<a href=\"https://github.com/dnouri/nolearn/pull/238\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/238</a></li>\n<li>Add visualization code for saliency maps\n<a href=\"https://github.com/dnouri/nolearn/pull/223\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/223</a></li>\n<li>Add method for convenient access of network\u2019s intermediate layer\noutput\n<a href=\"https://github.com/dnouri/nolearn/pull/196\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/196</a></li>\n<li>Allow gradients to be scaled per layer\n<a href=\"https://github.com/dnouri/nolearn/pull/195\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/195</a></li>\n<li>Add shuffling to BatchIterator\n<a href=\"https://github.com/dnouri/nolearn/pull/193\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/193</a></li>\n<li>Add l1 and l2 regularization to default objective\n<a href=\"https://github.com/dnouri/nolearn/pull/169\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/169</a></li>\n<li>Add RememberBestWeights handler: restores best weights after\ntraining\n<a href=\"https://github.com/dnouri/nolearn/pull/155\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/155</a></li>\n<li>Passing Lasagne layer instances to \u2018layers\u2019 parameter of NeuralNet\nis now possible\n<a href=\"https://github.com/dnouri/nolearn/pull/146\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/146</a></li>\n<li>Add feature visualization functions plot_loss, plot_weights,\nplot_activity, and plot_occlusion.  The latter shows for image\nsamples, which part of the images are crucial for the prediction\n<a href=\"https://github.com/dnouri/nolearn/pull/74\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/74</a></li>\n<li>Add SaveWeights handler that saves weights to disk every n epochs\n<a href=\"https://github.com/dnouri/nolearn/pull/91\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/91</a></li>\n<li>In verbose mode, print out more detailed layer information before\nstarting with training\n<a href=\"https://github.com/dnouri/nolearn/pull/85\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/85</a></li>\n<li>List of NeuralNet\u2019s \u2018layers\u2019 parameter may now be formatted to\ncontain \u2018(layer_factory, layer_kwargs)\u2019 tuples\n<a href=\"https://github.com/dnouri/nolearn/pull/73\" rel=\"nofollow\">https://github.com/dnouri/nolearn/pull/73</a></li>\n</ul>\n</li>\n<li>dbn: Added back module dbn because there\u2019s a few online articles\nreferencing it.  Works with Python 2 only.</li>\n<li>Removed deprecated modules.  Also deprecate grid_search module.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.5 - 2015-01-22</h3>\n<ul>\n<li>Deprecated modules console, dataset, dbn, and model.</li>\n<li>lasagne: Added scikit-learn compatible wrapper around the <cite>Lasagne</cite>\nneural network library for building simple feed-forward networks.</li>\n</ul>\n</div>\n<div id=\"b1-2014-08-09\">\n<h3>0.5b1 - 2014-08-09</h3>\n<ul>\n<li>overfeat: Add OverFeat-based feature extractor.</li>\n<li>caffe: Add feature extractor based on ImageNet-pretrained nets found\nin caffe.</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.4 - 2014-01-15</h3>\n<ul>\n<li>cache: Use joblib\u2019s <cite>numpy_pickle</cite> instead of <cite>cPickle</cite> to persist.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.3.1 - 2013-11-18</h3>\n<ul>\n<li>convnet: Add <cite>center_only</cite> and <cite>classify_direct</cite> options.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3 - 2013-11-02</h3>\n<ul>\n<li>convnet: Add scikit-learn estimator based on Jia and Donahue\u2019s\n<cite>DeCAF</cite>.</li>\n<li>dbn: Change default args of <cite>use_re_lu=True</cite> and <cite>nesterov=True</cite>.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.2 - 2013-03-03</h3>\n<ul>\n<li>dbn: Add parameters <cite>learn_rate_decays</cite> and <cite>learn_rate_minimums</cite>,\nwhich allow for decreasing the learning after each epoch of\nfine-tuning.</li>\n<li>dbn: Allow <cite>-1</cite> as the value of the input and output layers of the\nneural network.  The shapes of <cite>X</cite> and <cite>y</cite> will then be used to\ndetermine those.</li>\n<li>dbn: Add support for processing sparse input data matrices.</li>\n<li>dbn: Improve miserable speed of <cite>DBN.predict_proba</cite>.</li>\n</ul>\n</div>\n<div id=\"b1-2012-12-30\">\n<h3>0.2b1 - 2012-12-30</h3>\n<ul>\n<li>Added a scikit-learn estimator based on George Dahl\u2019s <cite>gdbn</cite> in\n<cite>nolearn.dbn</cite>.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6079825, "releases": {"0.1b1": [{"comment_text": "", "digests": {"md5": "25e762291b60603dad99a9d36907c6d4", "sha256": "adce4967ef02248528f3931dc0e78839cefcaebe9a2376bc07e489406e57a51c"}, "downloads": -1, "filename": "nolearn-0.1b1.tar.gz", "has_sig": false, "md5_digest": "25e762291b60603dad99a9d36907c6d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11205, "upload_time": "2012-11-22T23:08:16", "upload_time_iso_8601": "2012-11-22T23:08:16.817083Z", "url": "https://files.pythonhosted.org/packages/c7/90/d5f64b239bb2c4a78f0eca6d478fff656c007de047e9bcedc433b7d263f9/nolearn-0.1b1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "5c7aa9cc42c83da8d2e06c99443a445b", "sha256": "357602da73025a6654829185083d8d7492772737aa89b6b701b88f6b29985f62"}, "downloads": -1, "filename": "nolearn-0.2.tar.gz", "has_sig": false, "md5_digest": "5c7aa9cc42c83da8d2e06c99443a445b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24070, "upload_time": "2013-03-03T20:39:42", "upload_time_iso_8601": "2013-03-03T20:39:42.372397Z", "url": "https://files.pythonhosted.org/packages/f6/74/68e1246bbccb1df6033e1900dc8dd64b3f77588c65195256560287c61037/nolearn-0.2.tar.gz", "yanked": false}], "0.2b1": [{"comment_text": "", "digests": {"md5": "752e3f279a3319af05710c0ff747ed3c", "sha256": "2afbcc77612ef72aab35384a327e52ad806372c494754c59d25e54c5cc2df681"}, "downloads": -1, "filename": "nolearn-0.2b1.tar.gz", "has_sig": false, "md5_digest": "752e3f279a3319af05710c0ff747ed3c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19897, "upload_time": "2012-12-30T18:38:45", "upload_time_iso_8601": "2012-12-30T18:38:45.855866Z", "url": "https://files.pythonhosted.org/packages/d2/da/5510fb67329a23ea12d20c87de048f49e9d91e38fc0e34bfdb0288950d8f/nolearn-0.2b1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "ece63bd2f4565bd3ea84420be8e29add", "sha256": "e6f6b5af7adcf3c3e7bf8acfd8c46e58c9582fc53c6e3276fcd50747002cc690"}, "downloads": -1, "filename": "nolearn-0.3.tar.gz", "has_sig": false, "md5_digest": "ece63bd2f4565bd3ea84420be8e29add", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24931, "upload_time": "2013-11-02T17:33:37", "upload_time_iso_8601": "2013-11-02T17:33:37.037231Z", "url": "https://files.pythonhosted.org/packages/85/56/5a091ca611187c492714d2050e927987ed141889d28c0fcb5da130645e18/nolearn-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0e6c73edf46ade719bbbc8b6c44c7c8d", "sha256": "c4fd10b1ef06f69e2515fe1f7961bf625d571c3a9d745dadabdd6f9ac12a6d0b"}, "downloads": -1, "filename": "nolearn-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0e6c73edf46ade719bbbc8b6c44c7c8d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25700, "upload_time": "2013-11-18T12:13:47", "upload_time_iso_8601": "2013-11-18T12:13:47.999595Z", "url": "https://files.pythonhosted.org/packages/d4/a9/38b9be409722d2d9ebf2d753f8c86df241ce16c4322e3eb24276a28fe140/nolearn-0.3.1.tar.gz", "yanked": false}], "0.4": [{"comment_text": "", "digests": {"md5": "3eee29918f740a85bf8a19c729551177", "sha256": "b4077c8a94e7f1a0fc817136ab289c7f0d237470bdb122b7f1edb436891bd3a5"}, "downloads": -1, "filename": "nolearn-0.4.tar.gz", "has_sig": false, "md5_digest": "3eee29918f740a85bf8a19c729551177", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 27113, "upload_time": "2014-01-15T21:57:37", "upload_time_iso_8601": "2014-01-15T21:57:37.003816Z", "url": "https://files.pythonhosted.org/packages/2c/34/d24cb0ce39c366ddd75e22216e3f6f22534aad5a91eba9c3de9d69e3ba0b/nolearn-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "29bfdb3d021d7769b2efec70af21d380", "sha256": "0bfec2f2ec0eea19fc91e457b4f8cc19276702daf7adb2bf0b1347d566bf17a2"}, "downloads": -1, "filename": "nolearn-0.5.tar.gz", "has_sig": false, "md5_digest": "29bfdb3d021d7769b2efec70af21d380", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37276, "upload_time": "2015-01-22T22:08:09", "upload_time_iso_8601": "2015-01-22T22:08:09.181506Z", "url": "https://files.pythonhosted.org/packages/04/2c/9bc44d868589b457828ec61739c306c2cd8157e41ba1c1d0c0da2fdff7c8/nolearn-0.5.tar.gz", "yanked": false}], "0.5b1": [{"comment_text": "", "digests": {"md5": "1824f5ec0f4ea3dbd4648bf69ce071a8", "sha256": "f2d964c831a5a84723818f03e71fd69cfa3db15fdb9b678c1949e1e3164d29d9"}, "downloads": -1, "filename": "nolearn-0.5b1.tar.gz", "has_sig": false, "md5_digest": "1824f5ec0f4ea3dbd4648bf69ce071a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30998, "upload_time": "2014-08-29T19:41:25", "upload_time_iso_8601": "2014-08-29T19:41:25.182778Z", "url": "https://files.pythonhosted.org/packages/9a/e0/055462c55ee9831f34c0060adb2f42d39bd93ac962ad9447b2ea8ab2d420/nolearn-0.5b1.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "c075f557ecf6c81d85cbf89a8aba59cf", "sha256": "a7779c7d7d4bcf34d4db439df249eadbba04f3dd09ee7579f07ddf24e5bfc579"}, "downloads": -1, "filename": "nolearn-0.6.0.tar.gz", "has_sig": false, "md5_digest": "c075f557ecf6c81d85cbf89a8aba59cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 320150, "upload_time": "2016-08-27T05:58:28", "upload_time_iso_8601": "2016-08-27T05:58:28.656261Z", "url": "https://files.pythonhosted.org/packages/ff/69/2882491c14c58431c06d5a12a007eefcc4fb3f5ac7af624a5d212b0bbdd4/nolearn-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "712db01f9de7ffb7debca488096a28c3", "sha256": "bab2dc2aeb9560264791298f1d206b78fd9b345cecdd500b34f469d367765158"}, "downloads": -1, "filename": "nolearn-0.6.1.tar.gz", "has_sig": false, "md5_digest": "712db01f9de7ffb7debca488096a28c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38554, "upload_time": "2019-11-05T08:33:27", "upload_time_iso_8601": "2019-11-05T08:33:27.896121Z", "url": "https://files.pythonhosted.org/packages/bf/3a/8e3b18a0074f26904b73f435a1d9d5e09b8e5dba3b1c004711cf76787a3e/nolearn-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "712db01f9de7ffb7debca488096a28c3", "sha256": "bab2dc2aeb9560264791298f1d206b78fd9b345cecdd500b34f469d367765158"}, "downloads": -1, "filename": "nolearn-0.6.1.tar.gz", "has_sig": false, "md5_digest": "712db01f9de7ffb7debca488096a28c3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38554, "upload_time": "2019-11-05T08:33:27", "upload_time_iso_8601": "2019-11-05T08:33:27.896121Z", "url": "https://files.pythonhosted.org/packages/bf/3a/8e3b18a0074f26904b73f435a1d9d5e09b8e5dba3b1c004711cf76787a3e/nolearn-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:55 2020"}