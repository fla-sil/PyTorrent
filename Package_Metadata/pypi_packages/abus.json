{"info": {"author": "Cornelius Grotjahn", "author_email": "s1@tempaddr.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: System :: Archiving :: Backup"], "description": "ABuS is a script for backing up (and restoring) your files to a local disk.\n\nThe backups are encrypted, compressed, and deduplicated.\nIt is assumed that another program (e.g. rsync) is used to make off-site\ncopies of the backups (see below).\n\nContent of this document:\n\n- Caveats_\n- Installation_\n- Documentation_\n\n  - Purging_\n  - Restoring_\n  - `Off-site copies`_\n  - `Index Database`_\n  - `Configuration file`_\n  - `Command line switches`_\n- `History`_\n\n\n=======\nCaveats\n=======\n\nABuS only works on Windows.\n\nABuS only backs up file content. In particular the backups do not\ninclude permissions, symbolic links, hard links, or special files.\n\nIf you use ABuS in anger (inspite of the lack of guarantees in the licence),\nplease pay particular attention to what the documentation below says about\n\n- off-site backups\n- the ``password`` option\n\n\n============\nInstallation\n============\n\n1. Install Python 3.6 from python.org\n\n   - include pip\n   - it helps to add python to path\n\n2. From the command line, \"as administrator\" if python has been\n   installed \"for all users\"::\n\n    c:\\path\\to\\python36\\scripts\\pip install abus\n\n3. Create minimal config file, e.g.::\n\n    logfile c:/my/home/abus.log\n    archive e:/backups\n    password password1234 just kidding!\n    [include]\n    c:/my/home\n\n4. Initialise the backup directory and the index database with::\n\n    c:\\path\\to\\python36\\scripts\\abus.exe -f c:/my/home/abus.cfg --init\n\n5. Add to Task Scheduler::\n\n    c:\\path\\to\\python36\\scripts\\abus.exe -f c:/my/home/abus.cfg --backup\n\n   If there are any problems that prevent ABuS from getting as far as opening\n   the log file (and Windows permissions can cause many such problems), then\n   use cmd.exe to allow redirection::\n\n    cmd /c\n      c:\\path\\to\\python36\\scripts\\abus.exe -f c:/my/home/abus.cfg --backup\n      >c:\\abus.err 2>&1\n\n\n=============\nDocumentation\n=============\n\nOverview\n++++++++\n\nABuS is a single script for handling backups. Its command line parameters\ndetermine whether the backups are to be created, listed, or restored. The\nbackups are stored in subdirectories of the *backup directory* which must be on\na local filesystem. For off-site copies another program is to be used, for\nexample rsync.\n\n**Warning:** Off-site copies must be made correctly to minimise the risk of\npropagating any local corruption (see below).\n\nA configuration file is used to point to the backup directory, define the backup\nset, and some options. ABuS finds the configuration file either via a command\nline parameter or an environment variable.\n\n\nPurging\n+++++++\n\nOld backup files are deleted after every backup.\nIn order to determine which backups are deleted, time is divided into slots and\nonly the latest version of a file in each slot is retained while the others are\nsubject to purging. As slots get old they are combined into bigger slots.\n\nThe configuration file defines the slot sizes using *freq*/*age* pairs of\nnumbers, which define that 1 version in *freq* days is to be retained for\nbackups up to *age* days old.\n\nFor example, if the retention values are 1 7, 7 30, 28 150, then\nfor each file one version a day is kept from the versions that are up\nto 7 days old, one a week is kept for versions up to 30 days old, and one every\nfour weeks is kept up to 150 days.\n\nThere is also a single slot older than the highest *age* defined, called \"slot 0\".\nIn the example above one file older than 150 days will be kept as well.\n\nPurging of deleted files\n------------------------\n\nThe time that a file deletion is detected\n(i.e. a file previously backed up no longer exists)\nmust fall into slot 0\nbefore the last backup of the file is purged.\nE.g. with default retention values,\n150 days after a file is deleted its backups will be purged.\n\n\nRestoring\n+++++++++\n\nBackup files can be restored from the backups using the `--restore` command line option.\n\nBy default the backups to be restored are the latest version of each known file.\nThe set of files can be restricted using \"glob\" positional arguments. As for\nexclusions, a `*` matches the directory separator. A backup is restored if its\npath matches any of the glob arguments.\nSlashes and backslashes can be used interchangeably.\n\nWith the `-d` option the latest version of each backup before the given time is\nrestored rather than the latest version before now.\nWith `-a` all versions (before the cut-off time) are restored and a timestamp is\nadded to the restored files' names.\n\nAfter the set of restore files has been determined, ABuS removes the common part\nof their paths and creates the remaining relative paths in the current\ndirectory. E.g. if these the files were to be restored::\n\n c:/home/project/file_a\n c:/home/project/src/file_b\n c:/home/project/src/file_c\n\nThen they would be restored as::\n\n ./file_a\n ./src/file_b\n ./src/file_c\n\nDeletions\n---------\n\nFiles that have been deleted at the cut-off time are not restored.\nNote, however, that ABuS does not track historic deletions; for example, assume\na certain file was last changed on Monday, deleted on Tuesday, and recreated on\nWednesday. A restore with an end-of-Tuesday cut-off would restore the Monday\nversion.\n\nListing\n-------\n\nThe `--listing` option lists backed up files. It takes the same options as\n`--restore` and lists exactly those backup versions that would be restored.\n\nThe `--listing` option is implied if any of the restore filters are used without a\n`--restore`.\n\n\nOff-site copies\n+++++++++++++++\n\nABuS only backs up to local filesystems. This means that the backups themselves\nare at risk of corruption, for example from ramsomware. It is important that\nanother copy of the backup is made and that it fulfills these criteria:\n\n* It must not be on a locally accessible filesystem or network share, so that\n  the machine being backed up cannot corrupt it.\n* Files must never be overwritten, once created, so that any local corruption\n  does not propagate.\n* As a consequence, partially transferred files must be removed at the\n  destination.\n\nThe following is an example of an rsync command that would copy the local\nbackup directory to an off-site location::\n\n rsync --recursive --ignore-existing            \\\n       --exclude index.sl3 --exclude '*.part'   \\\n       /my/local/backups/  me@offsite:/backups/\n\n``index.sl3`` need not be transferred because it changes and it can be rebuilt\nfrom the static files. Files with ``.part`` extension are backup files that are\ncurrently being written and will be renamed once complete. Excluding them\nensures that incomplete backup files are not transferred.\n\nOff-site purging\n----------------\n\nSince it is not advisable to propagate changed files - and therefor deletions -\nto the off-site copy of the backup files, these must be purged independently.\n\nTo that end ABuS creates a *content file* in the backup directory which lists\nall backup files. The content file is compressed with gzip and its file name is\nthat of the last backup run with a .gz\nextension. When such a file is written, the previous one is\nremoved. Since the run names are basically ISO dates, a script on the off-site\nserver can easily pick up the latest and remove all backup files that are not\nlisted in it.\n\n**N.B.:** The following is only an outline of such a script to convey the idea.\nYou must not use it without checking it first::\n\n cd .../offsite-copy\n keep_list=$(ls *.gz | tail -n 1)\n (find -type f -printf '%P\\n'; zcat $keep_list $keep_list) | sort | uniq -u >/tmp/remove\n [[ $(wc -l /tmp/remove) -lt 50 ]] || exit # sanity check\n xargs rm </tmp/remove\n\n\nIndex Database\n++++++++++++++\n\nThe index database duplicates backup meta data for quicker access.\nSince it is changed during normal operation, it cannot be included in the\noff-site copy.\nThere are therefore command line options to rebuild the index database from the\nbackup files.\n\n**Important:** Before rebuilding the index database, check the integrity of the\ncontent file, for example by comparing it with its off-site copy.\n\nIt is important that the index database be not rebuilt from corrupt backup data.\nSince the backup files are encrypted, corruption would normally show,\nbut a *missing* backup file would not.\nThe integrity of the content file (see `Off-site purging`_ above),\nwhich is not encrypted,\nmust therefore be ascertained before rebuilding the index database.\n\n\nConfiguration file\n++++++++++++++++++\n\nThe file has three sections\n\n* parameters at the beginning\n* inclusions\n* exclusions\n\nABuS uses slashes as path separators internally. All filenames given in the\nconfig file or on the command line may use backslashes or slashes; all\nbackslashes are converted to slashes.\n\nParameters\n----------\nThe first word of each line is a parameter name, the following words form the\nvalue. Leading and trailing spaces are trimmed while spaces within the value are\npreserved.\n\n``logfile``\n   Specifies the path of a file to which all log entries are made. The parameter\n   should be given first so that any subsequent errors in the configuration can\n   be reported to the log.\n\n``archive``\n   Specifies the path to the root backup directory containing all backup files.\n\n``indexdb``\n   Specifies the path to the index database. By default this is ``index.sl3``\n   inside the backup directory, but it might be preferable to place it on a\n   faster disk, for example.\n\n``password``\n   Specifies the encryption password to be used for all backup files. The\n   encryption allows copying the backup archive to an off-site location.\n\n   **N.B.:** Make sure the the config file is UTF-8 encoded, so that any special\n   characters in the password are interpreted in a well-defined way.\n\n   **N.B.:** Once a backup has been created the password must not be changed,\n   since ABuS does no keep track of which backup files use which password (obviously).\n   If you want to change the password, you need to create a new archive.\n\n``retain``\n   Specifies how old backups are pruned. The keyword is followed by a\n   space-separated list of numbers forming *freq* and *age* pairs, meaning:\n   \"keep one backup per *freq* days for files up to *age* days old\". See\n   Purging_ above.\n\n   The *age* values must not repeat and the *freq* values must be multiples of\n   each other. *freq* can be a float, e.g. ``0.25`` for six hours.\n\n   The retention values default to::\n\n    retain  1 7  56 150\n\n``compressed_extensions``\n   Space-separated list of file extensions that ABuS assumes belong to files\n   that are already compressed. All other files will be compressed before they\n   are encrypted.\n\n   The extensions are shell global patterns and are matched ignoring case. Thus\n   ``jp*g`` is matched by ``jpg``, ``JPG``, and ``jpeg``;\n   ``*`` would switch compression off completely.\n\n   Defaults to:\n\n    7z arj avi bz2 flac gif gz jar jpeg jpg lz lzmo lzo\n    mov mp3 mp4 png rar tgz tif tiff wma xz zip\n\n``threads``\n   Sets the maximum number simultaneous backups in order to limit the strain on CPU,\n   IO, and memory. The default value is one less than the number of hardware threads\n   on the system, but at most 8.\n\nInclusions\n----------\nA line containing the header ``[include]`` starts the inclusion section,\neach line of which is a directory path which will be backed up recursively.\nThere must be at least one inclusion.\n\nExclusions\n----------\nA line containing the header ``[exclude]`` starts the exclusion section,\neach line of which is a shell global pattern. All file paths that would be\nbacked up (or directory paths that would be searched for files) are skipped if\nthey match any of the patterns.\n\nA * in the patterns also matches the directory separators.\n``*.bak`` ignores any file with the extension .bak;\n``*/~*`` ignores any file or directory starting with a tilde.\n\n\nCommand line switches\n+++++++++++++++++++++\n\nRun ``abus --help`` for detailed command line switch help.\n\n\n=======\nHistory\n=======\n\nv11 2018-06-21\n\n- Configuration option for maximum number of simultaneous backups\n  (fixes MemoryError in lzma module on 32-bit Python)\n- fix: possible ZeroDivisionError at restore \"progress bar\"\n\nv10 2018-06-17\n\n- configuration option for extensions of already-compressed files\n- fix: matching of already-compressed extensions was case-sensitive\n- fix: uncaught exceptions when writing encrypted files\n\nv9 2017-12-31\n\n- handling deletions correctly at list, restore, and rebuild\n- default action is to report version rather than list all files\n- list/restore glob argument now case-insensitive and allows backslashes\n- fix: list and restore were not including all files when used without a date\n  argument\n- fix: restore did not allow restoring single file\n\nv8 (beta) 2017-12-10\n\n- purges backups of deleted files (see above)\n- much reduced size of index database\n\nv7 (beta) 2017-11-19\n\n- fix: index database on different drive caused exception at purge\n- fix: restore could not handle paths from different drives\n- fix: exception for u64 file numbers\n\nv6 (beta) 2017-11-12\n\n- retries if file changes while reading\n- config file option \"indexdb\" to set location of index database\n- improved restore performance\n- progress indicators during restore\n- fix: exception when no files matched during restore\n\nv5 (beta) 2017-11-05\n\n- feature: content files allow safe purging of off-site copies\n- index database upgrades ifself on startup\n- fix: spaces in filenames caused index-rebuild to fall over\n\nv4 (alpha) 2017-10-22\n\n- feature: purging of old backups\n- fix: -a and -d options didn't work with --list\n- fix: timestamp rounding error at index-rebuild\n- fix: --init could not create backup directory\n\nv3 (alpha) 2017-10-15\n\n- feature: rebuilding of index database from backup meta data\n\nv2 (alpha) 2017-10-07\n\n- not excruciatingly slow any more\n\nv1 (alpha) 2017-10-04\n\n- first version\n\n.. vim:tw=80:ft=rst\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://pypi.python.org/pypi/abus", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "abus", "package_url": "https://pypi.org/project/abus/", "platform": "", "project_url": "https://pypi.org/project/abus/", "project_urls": {"Homepage": "https://pypi.python.org/pypi/abus"}, "release_url": "https://pypi.org/project/abus/11/", "requires_dist": null, "requires_python": "", "summary": "Abingdon Backup Script", "version": "11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>ABuS is a script for backing up (and restoring) your files to a local disk.</p>\n<p>The backups are encrypted, compressed, and deduplicated.\nIt is assumed that another program (e.g. rsync) is used to make off-site\ncopies of the backups (see below).</p>\n<p>Content of this document:</p>\n<ul>\n<li><a href=\"#caveats\" rel=\"nofollow\">Caveats</a></li>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"#documentation\" rel=\"nofollow\">Documentation</a><ul>\n<li><a href=\"#purging\" rel=\"nofollow\">Purging</a></li>\n<li><a href=\"#restoring\" rel=\"nofollow\">Restoring</a></li>\n<li><a href=\"#off-site-copies\" rel=\"nofollow\">Off-site copies</a></li>\n<li><a href=\"#index-database\" rel=\"nofollow\">Index Database</a></li>\n<li><a href=\"#configuration-file\" rel=\"nofollow\">Configuration file</a></li>\n<li><a href=\"#command-line-switches\" rel=\"nofollow\">Command line switches</a></li>\n</ul>\n</li>\n<li><a href=\"#history\" rel=\"nofollow\">History</a></li>\n</ul>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<p>ABuS only works on Windows.</p>\n<p>ABuS only backs up file content. In particular the backups do not\ninclude permissions, symbolic links, hard links, or special files.</p>\n<p>If you use ABuS in anger (inspite of the lack of guarantees in the licence),\nplease pay particular attention to what the documentation below says about</p>\n<ul>\n<li>off-site backups</li>\n<li>the <tt>password</tt> option</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ol>\n<li><p>Install Python 3.6 from python.org</p>\n<ul>\n<li>include pip</li>\n<li>it helps to add python to path</li>\n</ul>\n</li>\n<li><p>From the command line, \u201cas administrator\u201d if python has been\ninstalled \u201cfor all users\u201d:</p>\n<pre>c:\\path\\to\\python36\\scripts\\pip install abus\n</pre>\n</li>\n<li><p>Create minimal config file, e.g.:</p>\n<pre>logfile c:/my/home/abus.log\narchive e:/backups\npassword password1234 just kidding!\n[include]\nc:/my/home\n</pre>\n</li>\n<li><p>Initialise the backup directory and the index database with:</p>\n<pre>c:\\path\\to\\python36\\scripts\\abus.exe -f c:/my/home/abus.cfg --init\n</pre>\n</li>\n<li><p>Add to Task Scheduler:</p>\n<pre>c:\\path\\to\\python36\\scripts\\abus.exe -f c:/my/home/abus.cfg --backup\n</pre>\n<p>If there are any problems that prevent ABuS from getting as far as opening\nthe log file (and Windows permissions can cause many such problems), then\nuse cmd.exe to allow redirection:</p>\n<pre>cmd /c\n  c:\\path\\to\\python36\\scripts\\abus.exe -f c:/my/home/abus.cfg --backup\n  &gt;c:\\abus.err 2&gt;&amp;1\n</pre>\n</li>\n</ol>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<div id=\"overview\">\n<h3>Overview</h3>\n<p>ABuS is a single script for handling backups. Its command line parameters\ndetermine whether the backups are to be created, listed, or restored. The\nbackups are stored in subdirectories of the <em>backup directory</em> which must be on\na local filesystem. For off-site copies another program is to be used, for\nexample rsync.</p>\n<p><strong>Warning:</strong> Off-site copies must be made correctly to minimise the risk of\npropagating any local corruption (see below).</p>\n<p>A configuration file is used to point to the backup directory, define the backup\nset, and some options. ABuS finds the configuration file either via a command\nline parameter or an environment variable.</p>\n</div>\n<div id=\"purging\">\n<h3>Purging</h3>\n<p>Old backup files are deleted after every backup.\nIn order to determine which backups are deleted, time is divided into slots and\nonly the latest version of a file in each slot is retained while the others are\nsubject to purging. As slots get old they are combined into bigger slots.</p>\n<p>The configuration file defines the slot sizes using <em>freq</em>/<em>age</em> pairs of\nnumbers, which define that 1 version in <em>freq</em> days is to be retained for\nbackups up to <em>age</em> days old.</p>\n<p>For example, if the retention values are 1 7, 7 30, 28 150, then\nfor each file one version a day is kept from the versions that are up\nto 7 days old, one a week is kept for versions up to 30 days old, and one every\nfour weeks is kept up to 150 days.</p>\n<p>There is also a single slot older than the highest <em>age</em> defined, called \u201cslot 0\u201d.\nIn the example above one file older than 150 days will be kept as well.</p>\n<div id=\"purging-of-deleted-files\">\n<h4>Purging of deleted files</h4>\n<p>The time that a file deletion is detected\n(i.e. a file previously backed up no longer exists)\nmust fall into slot 0\nbefore the last backup of the file is purged.\nE.g. with default retention values,\n150 days after a file is deleted its backups will be purged.</p>\n</div>\n</div>\n<div id=\"restoring\">\n<h3>Restoring</h3>\n<p>Backup files can be restored from the backups using the <cite>\u2013restore</cite> command line option.</p>\n<p>By default the backups to be restored are the latest version of each known file.\nThe set of files can be restricted using \u201cglob\u201d positional arguments. As for\nexclusions, a <cite>*</cite> matches the directory separator. A backup is restored if its\npath matches any of the glob arguments.\nSlashes and backslashes can be used interchangeably.</p>\n<p>With the <cite>-d</cite> option the latest version of each backup before the given time is\nrestored rather than the latest version before now.\nWith <cite>-a</cite> all versions (before the cut-off time) are restored and a timestamp is\nadded to the restored files\u2019 names.</p>\n<p>After the set of restore files has been determined, ABuS removes the common part\nof their paths and creates the remaining relative paths in the current\ndirectory. E.g. if these the files were to be restored:</p>\n<pre>c:/home/project/file_a\nc:/home/project/src/file_b\nc:/home/project/src/file_c\n</pre>\n<p>Then they would be restored as:</p>\n<pre>./file_a\n./src/file_b\n./src/file_c\n</pre>\n<div id=\"deletions\">\n<h4>Deletions</h4>\n<p>Files that have been deleted at the cut-off time are not restored.\nNote, however, that ABuS does not track historic deletions; for example, assume\na certain file was last changed on Monday, deleted on Tuesday, and recreated on\nWednesday. A restore with an end-of-Tuesday cut-off would restore the Monday\nversion.</p>\n</div>\n<div id=\"listing\">\n<h4>Listing</h4>\n<p>The <cite>\u2013listing</cite> option lists backed up files. It takes the same options as\n<cite>\u2013restore</cite> and lists exactly those backup versions that would be restored.</p>\n<p>The <cite>\u2013listing</cite> option is implied if any of the restore filters are used without a\n<cite>\u2013restore</cite>.</p>\n</div>\n</div>\n<div id=\"off-site-copies\">\n<h3>Off-site copies</h3>\n<p>ABuS only backs up to local filesystems. This means that the backups themselves\nare at risk of corruption, for example from ramsomware. It is important that\nanother copy of the backup is made and that it fulfills these criteria:</p>\n<ul>\n<li>It must not be on a locally accessible filesystem or network share, so that\nthe machine being backed up cannot corrupt it.</li>\n<li>Files must never be overwritten, once created, so that any local corruption\ndoes not propagate.</li>\n<li>As a consequence, partially transferred files must be removed at the\ndestination.</li>\n</ul>\n<p>The following is an example of an rsync command that would copy the local\nbackup directory to an off-site location:</p>\n<pre>rsync --recursive --ignore-existing            \\\n      --exclude index.sl3 --exclude '*.part'   \\\n      /my/local/backups/  me@offsite:/backups/\n</pre>\n<p><tt>index.sl3</tt> need not be transferred because it changes and it can be rebuilt\nfrom the static files. Files with <tt>.part</tt> extension are backup files that are\ncurrently being written and will be renamed once complete. Excluding them\nensures that incomplete backup files are not transferred.</p>\n<div id=\"off-site-purging\">\n<h4>Off-site purging</h4>\n<p>Since it is not advisable to propagate changed files - and therefor deletions -\nto the off-site copy of the backup files, these must be purged independently.</p>\n<p>To that end ABuS creates a <em>content file</em> in the backup directory which lists\nall backup files. The content file is compressed with gzip and its file name is\nthat of the last backup run with a .gz\nextension. When such a file is written, the previous one is\nremoved. Since the run names are basically ISO dates, a script on the off-site\nserver can easily pick up the latest and remove all backup files that are not\nlisted in it.</p>\n<p><strong>N.B.:</strong> The following is only an outline of such a script to convey the idea.\nYou must not use it without checking it first:</p>\n<pre>cd .../offsite-copy\nkeep_list=$(ls *.gz | tail -n 1)\n(find -type f -printf '%P\\n'; zcat $keep_list $keep_list) | sort | uniq -u &gt;/tmp/remove\n[[ $(wc -l /tmp/remove) -lt 50 ]] || exit # sanity check\nxargs rm &lt;/tmp/remove\n</pre>\n</div>\n</div>\n<div id=\"index-database\">\n<h3>Index Database</h3>\n<p>The index database duplicates backup meta data for quicker access.\nSince it is changed during normal operation, it cannot be included in the\noff-site copy.\nThere are therefore command line options to rebuild the index database from the\nbackup files.</p>\n<p><strong>Important:</strong> Before rebuilding the index database, check the integrity of the\ncontent file, for example by comparing it with its off-site copy.</p>\n<p>It is important that the index database be not rebuilt from corrupt backup data.\nSince the backup files are encrypted, corruption would normally show,\nbut a <em>missing</em> backup file would not.\nThe integrity of the content file (see <a href=\"#off-site-purging\" rel=\"nofollow\">Off-site purging</a> above),\nwhich is not encrypted,\nmust therefore be ascertained before rebuilding the index database.</p>\n</div>\n<div id=\"configuration-file\">\n<h3>Configuration file</h3>\n<p>The file has three sections</p>\n<ul>\n<li>parameters at the beginning</li>\n<li>inclusions</li>\n<li>exclusions</li>\n</ul>\n<p>ABuS uses slashes as path separators internally. All filenames given in the\nconfig file or on the command line may use backslashes or slashes; all\nbackslashes are converted to slashes.</p>\n<div id=\"parameters\">\n<h4>Parameters</h4>\n<p>The first word of each line is a parameter name, the following words form the\nvalue. Leading and trailing spaces are trimmed while spaces within the value are\npreserved.</p>\n<dl>\n<dt><tt>logfile</tt></dt>\n<dd>Specifies the path of a file to which all log entries are made. The parameter\nshould be given first so that any subsequent errors in the configuration can\nbe reported to the log.</dd>\n<dt><tt>archive</tt></dt>\n<dd>Specifies the path to the root backup directory containing all backup files.</dd>\n<dt><tt>indexdb</tt></dt>\n<dd>Specifies the path to the index database. By default this is <tt>index.sl3</tt>\ninside the backup directory, but it might be preferable to place it on a\nfaster disk, for example.</dd>\n<dt><tt>password</tt></dt>\n<dd><p>Specifies the encryption password to be used for all backup files. The\nencryption allows copying the backup archive to an off-site location.</p>\n<p><strong>N.B.:</strong> Make sure the the config file is UTF-8 encoded, so that any special\ncharacters in the password are interpreted in a well-defined way.</p>\n<p><strong>N.B.:</strong> Once a backup has been created the password must not be changed,\nsince ABuS does no keep track of which backup files use which password (obviously).\nIf you want to change the password, you need to create a new archive.</p>\n</dd>\n<dt><tt>retain</tt></dt>\n<dd><p>Specifies how old backups are pruned. The keyword is followed by a\nspace-separated list of numbers forming <em>freq</em> and <em>age</em> pairs, meaning:\n\u201ckeep one backup per <em>freq</em> days for files up to <em>age</em> days old\u201d. See\n<a href=\"#purging\" rel=\"nofollow\">Purging</a> above.</p>\n<p>The <em>age</em> values must not repeat and the <em>freq</em> values must be multiples of\neach other. <em>freq</em> can be a float, e.g. <tt>0.25</tt> for six hours.</p>\n<p>The retention values default to:</p>\n<pre>retain  1 7  56 150\n</pre>\n</dd>\n<dt><tt>compressed_extensions</tt></dt>\n<dd><p>Space-separated list of file extensions that ABuS assumes belong to files\nthat are already compressed. All other files will be compressed before they\nare encrypted.</p>\n<p>The extensions are shell global patterns and are matched ignoring case. Thus\n<tt>jp*g</tt> is matched by <tt>jpg</tt>, <tt>JPG</tt>, and <tt>jpeg</tt>;\n<tt>*</tt> would switch compression off completely.</p>\n<p>Defaults to:</p>\n<blockquote>\n7z arj avi bz2 flac gif gz jar jpeg jpg lz lzmo lzo\nmov mp3 mp4 png rar tgz tif tiff wma xz zip</blockquote>\n</dd>\n<dt><tt>threads</tt></dt>\n<dd>Sets the maximum number simultaneous backups in order to limit the strain on CPU,\nIO, and memory. The default value is one less than the number of hardware threads\non the system, but at most 8.</dd>\n</dl>\n</div>\n<div id=\"inclusions\">\n<h4>Inclusions</h4>\n<p>A line containing the header <tt>[include]</tt> starts the inclusion section,\neach line of which is a directory path which will be backed up recursively.\nThere must be at least one inclusion.</p>\n</div>\n<div id=\"exclusions\">\n<h4>Exclusions</h4>\n<p>A line containing the header <tt>[exclude]</tt> starts the exclusion section,\neach line of which is a shell global pattern. All file paths that would be\nbacked up (or directory paths that would be searched for files) are skipped if\nthey match any of the patterns.</p>\n<p>A * in the patterns also matches the directory separators.\n<tt>*.bak</tt> ignores any file with the extension .bak;\n<tt><span class=\"pre\">*/~*</span></tt> ignores any file or directory starting with a tilde.</p>\n</div>\n</div>\n<div id=\"command-line-switches\">\n<h3>Command line switches</h3>\n<p>Run <tt>abus <span class=\"pre\">--help</span></tt> for detailed command line switch help.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<p>v11 2018-06-21</p>\n<ul>\n<li>Configuration option for maximum number of simultaneous backups\n(fixes MemoryError in lzma module on 32-bit Python)</li>\n<li>fix: possible ZeroDivisionError at restore \u201cprogress bar\u201d</li>\n</ul>\n<p>v10 2018-06-17</p>\n<ul>\n<li>configuration option for extensions of already-compressed files</li>\n<li>fix: matching of already-compressed extensions was case-sensitive</li>\n<li>fix: uncaught exceptions when writing encrypted files</li>\n</ul>\n<p>v9 2017-12-31</p>\n<ul>\n<li>handling deletions correctly at list, restore, and rebuild</li>\n<li>default action is to report version rather than list all files</li>\n<li>list/restore glob argument now case-insensitive and allows backslashes</li>\n<li>fix: list and restore were not including all files when used without a date\nargument</li>\n<li>fix: restore did not allow restoring single file</li>\n</ul>\n<p>v8 (beta) 2017-12-10</p>\n<ul>\n<li>purges backups of deleted files (see above)</li>\n<li>much reduced size of index database</li>\n</ul>\n<p>v7 (beta) 2017-11-19</p>\n<ul>\n<li>fix: index database on different drive caused exception at purge</li>\n<li>fix: restore could not handle paths from different drives</li>\n<li>fix: exception for u64 file numbers</li>\n</ul>\n<p>v6 (beta) 2017-11-12</p>\n<ul>\n<li>retries if file changes while reading</li>\n<li>config file option \u201cindexdb\u201d to set location of index database</li>\n<li>improved restore performance</li>\n<li>progress indicators during restore</li>\n<li>fix: exception when no files matched during restore</li>\n</ul>\n<p>v5 (beta) 2017-11-05</p>\n<ul>\n<li>feature: content files allow safe purging of off-site copies</li>\n<li>index database upgrades ifself on startup</li>\n<li>fix: spaces in filenames caused index-rebuild to fall over</li>\n</ul>\n<p>v4 (alpha) 2017-10-22</p>\n<ul>\n<li>feature: purging of old backups</li>\n<li>fix: -a and -d options didn\u2019t work with \u2013list</li>\n<li>fix: timestamp rounding error at index-rebuild</li>\n<li>fix: \u2013init could not create backup directory</li>\n</ul>\n<p>v3 (alpha) 2017-10-15</p>\n<ul>\n<li>feature: rebuilding of index database from backup meta data</li>\n</ul>\n<p>v2 (alpha) 2017-10-07</p>\n<ul>\n<li>not excruciatingly slow any more</li>\n</ul>\n<p>v1 (alpha) 2017-10-04</p>\n<ul>\n<li>first version</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 3986975, "releases": {"1": [{"comment_text": "", "digests": {"md5": "b0966c3a779be5d4bdfe5983c3c16f92", "sha256": "99ea0289a5c91f1975b88bc0a1335fe3a338d51fa816896344ddd0a2fa474c84"}, "downloads": -1, "filename": "abus-1.tar.gz", "has_sig": false, "md5_digest": "b0966c3a779be5d4bdfe5983c3c16f92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14528, "upload_time": "2017-10-04T18:33:33", "upload_time_iso_8601": "2017-10-04T18:33:33.293384Z", "url": "https://files.pythonhosted.org/packages/a7/28/139344975445be83ff5efdd581bbfcda46bda25aa8e1117edf5904f8cf3a/abus-1.tar.gz", "yanked": false}], "10": [{"comment_text": "", "digests": {"md5": "2707d9079844a47b807951edef0f02a2", "sha256": "edf61b6618cb8ec746edea7856be598da90fd24106e897e72e5b3d802500c42a"}, "downloads": -1, "filename": "abus-10.tar.gz", "has_sig": false, "md5_digest": "2707d9079844a47b807951edef0f02a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 51067, "upload_time": "2018-06-17T19:28:05", "upload_time_iso_8601": "2018-06-17T19:28:05.140612Z", "url": "https://files.pythonhosted.org/packages/59/19/4488cc9b7861aca72bff85b927a7ab0ba98d1c45d792dd694c7dba846284/abus-10.tar.gz", "yanked": false}], "11": [{"comment_text": "", "digests": {"md5": "7d1f98d78d0d0cd6b873e6af771ce688", "sha256": "3590123b69e071bddca2a0073bf8966519a870c95ade3a93403274d1b80abba6"}, "downloads": -1, "filename": "abus-11.tar.gz", "has_sig": false, "md5_digest": "7d1f98d78d0d0cd6b873e6af771ce688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52391, "upload_time": "2018-06-21T20:57:44", "upload_time_iso_8601": "2018-06-21T20:57:44.451745Z", "url": "https://files.pythonhosted.org/packages/10/da/dedd03dfa2ba1023f0f0db78d9b7c626ad1d3c6740a41573ed3777c36173/abus-11.tar.gz", "yanked": false}], "2": [{"comment_text": "", "digests": {"md5": "3c4cb685b33965fb2d823f1c1681960e", "sha256": "2fc9e5f4230eb6b628498162016083d1b03be387e7e982187feb3f04664efe0e"}, "downloads": -1, "filename": "abus-2.tar.gz", "has_sig": false, "md5_digest": "3c4cb685b33965fb2d823f1c1681960e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16014, "upload_time": "2017-10-06T23:22:01", "upload_time_iso_8601": "2017-10-06T23:22:01.341163Z", "url": "https://files.pythonhosted.org/packages/ef/fc/d2c007ad13efc9b893e766d7d4cfb5f2b00717db4d1a0ce101dc6cc11d77/abus-2.tar.gz", "yanked": false}], "3": [{"comment_text": "", "digests": {"md5": "c788b9eca8a2015c0b3680d1ada0a86f", "sha256": "828af29f5bc92e357c5f60b1b2274ca61998d852d1d14ac6681d66f4bf48cc30"}, "downloads": -1, "filename": "abus-3.tar.gz", "has_sig": false, "md5_digest": "c788b9eca8a2015c0b3680d1ada0a86f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20828, "upload_time": "2017-10-15T22:44:29", "upload_time_iso_8601": "2017-10-15T22:44:29.332595Z", "url": "https://files.pythonhosted.org/packages/f8/97/b8c4c9576c16bed3c78cc2775ed500daf5ca019c2a0be92c14852ceace76/abus-3.tar.gz", "yanked": false}], "4": [{"comment_text": "", "digests": {"md5": "ac0c826551ad7de9e959a5dc8f34dd92", "sha256": "b0b50df31c70b3db7a54e9f9316a2349169475d260060c9e72b6908b6692338a"}, "downloads": -1, "filename": "abus-4.tar.gz", "has_sig": false, "md5_digest": "ac0c826551ad7de9e959a5dc8f34dd92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25293, "upload_time": "2017-10-22T17:34:56", "upload_time_iso_8601": "2017-10-22T17:34:56.205379Z", "url": "https://files.pythonhosted.org/packages/f3/9e/92c52d838167a2892eefb4b63b4c8d6b6bc642642f5c43c377d93a482fd6/abus-4.tar.gz", "yanked": false}], "5": [{"comment_text": "", "digests": {"md5": "299f50f0808c2cfcbffb6f3c97f06262", "sha256": "9b8558eff8ede48e3f1137442be81237bc25a5cf04a041dc923f75d2a5cb6ba8"}, "downloads": -1, "filename": "abus-5.tar.gz", "has_sig": false, "md5_digest": "299f50f0808c2cfcbffb6f3c97f06262", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37403, "upload_time": "2017-11-05T22:14:02", "upload_time_iso_8601": "2017-11-05T22:14:02.457425Z", "url": "https://files.pythonhosted.org/packages/f9/3e/f87e989b6f3f4ac2480a9a694f5568af147ef2e99ae00e814a02ca298a1b/abus-5.tar.gz", "yanked": false}], "6": [{"comment_text": "", "digests": {"md5": "6ebe0bcdfe0c00236b30e4650f4de50a", "sha256": "8eb68e6e4c50321e507a8a675cb285d13b8904e338e4278acd168ae080d7be5a"}, "downloads": -1, "filename": "abus-6.tar.gz", "has_sig": false, "md5_digest": "6ebe0bcdfe0c00236b30e4650f4de50a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39411, "upload_time": "2017-11-12T19:05:09", "upload_time_iso_8601": "2017-11-12T19:05:09.715420Z", "url": "https://files.pythonhosted.org/packages/fc/dd/fb10ba5c34e69f5c6cef6e6a3d2b273224d7d82594873004333327882c21/abus-6.tar.gz", "yanked": false}], "7": [{"comment_text": "", "digests": {"md5": "c65d0c2ea22c4f58d104625addcfd407", "sha256": "0d888f6c1522b7a91262af4c16d1422052e9e665fb1ab643fbdcf783eefd6ab1"}, "downloads": -1, "filename": "abus-7.tar.gz", "has_sig": false, "md5_digest": "c65d0c2ea22c4f58d104625addcfd407", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 39878, "upload_time": "2017-11-19T15:44:41", "upload_time_iso_8601": "2017-11-19T15:44:41.289318Z", "url": "https://files.pythonhosted.org/packages/d4/36/9ed0327a11129c77f421e2bf49e4a42a39718bc03f1153119636d5e1f4fb/abus-7.tar.gz", "yanked": false}], "8": [{"comment_text": "", "digests": {"md5": "f7b5f425536e4dc7a771c205377a1c62", "sha256": "d53113be94fde906b01106f73f1a967f19e3b5ab8c4d3e7a1cbf3f307a5d64da"}, "downloads": -1, "filename": "abus-8.tar.gz", "has_sig": false, "md5_digest": "f7b5f425536e4dc7a771c205377a1c62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45003, "upload_time": "2017-12-10T19:07:35", "upload_time_iso_8601": "2017-12-10T19:07:35.375631Z", "url": "https://files.pythonhosted.org/packages/81/7a/4447f195fb9fda43d62ece08fc1d13748b4555a9fec6b79035771ab5287e/abus-8.tar.gz", "yanked": false}], "9": [{"comment_text": "", "digests": {"md5": "4305d184f86be092f16b35b8d957eead", "sha256": "d1a9063489ed227a59d9460e5b77d8d31927696ba0ee1674e1a8bf22e62a7d32"}, "downloads": -1, "filename": "abus-9.tar.gz", "has_sig": false, "md5_digest": "4305d184f86be092f16b35b8d957eead", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 49239, "upload_time": "2017-12-31T14:01:28", "upload_time_iso_8601": "2017-12-31T14:01:28.429886Z", "url": "https://files.pythonhosted.org/packages/58/41/a1832c75d198c4602e367a03859191ad63b8c1a45117bb82d75f3a812641/abus-9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d1f98d78d0d0cd6b873e6af771ce688", "sha256": "3590123b69e071bddca2a0073bf8966519a870c95ade3a93403274d1b80abba6"}, "downloads": -1, "filename": "abus-11.tar.gz", "has_sig": false, "md5_digest": "7d1f98d78d0d0cd6b873e6af771ce688", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52391, "upload_time": "2018-06-21T20:57:44", "upload_time_iso_8601": "2018-06-21T20:57:44.451745Z", "url": "https://files.pythonhosted.org/packages/10/da/dedd03dfa2ba1023f0f0db78d9b7c626ad1d3c6740a41573ed3777c36173/abus-11.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:24:55 2020"}