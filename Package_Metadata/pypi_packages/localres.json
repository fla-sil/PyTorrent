{"info": {"author": "Guillaume Gaullier", "author_email": "contact@gaullier.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Visualization"], "description": "# localres\n\n[![DOI](https://zenodo.org/badge/DOI/10.5281/zenodo.3575229.svg)](https://doi.org/10.5281/zenodo.3575229)\n\nPlot a local resolution histogram from a local resolution map and a mask.\n\nFrom a cryo-EM reconstruction, one can calculate local resolution and generate a\ncolor-coded 3D map showing local resolution across the 3D reconstruction (or\nwithin slices of it). This command-line tool complements this by allowing one to\nquantitatively answer the question \"how many map voxels inside the mask have a\ngiven local resolution?\". This tool generates a histogram of local resolution\nvalues from a local resolution map and a mask (`relion_locres.mrc` and\n`mask.mrc` files from RELION, respectively; `cryosparc_*_map_locres.mrc` and\n`cryosparc_*_volume_mask_refine.mrc` from cryoSPARC, respectively).\n\n## FAQ\n\n**Q:** Doesn't RELION already do this?\n\n**A:** Yes, RELION-3.1 already prints out this histogram. This tool, however,\ndoesn't require an installation of RELION, allowing one to inspect files quickly\nfrom a different computer. This tool also lets you adjust the number of bins in\nthe histogram, and save the histogram as an SVG file (which is useful for\nadjusting styling to make a pretty figure).\n\n**Q:** Doesn't cryoSPARC already do this?\n\n**A:** Yes, cryoSPARC already prints out this histogram. This tool, however,\ndoesn't require an installation of cryoSPARC, allowing one to inspect files\nquickly from a different computer. This tool also lets you adjust the number of\nbins in the histogram, and save the histogram as an SVG file (which is useful\nfor adjusting styling to make a pretty figure).\n\n**Q:** Will it work with MRC files produced by my favorite software (not RELION\nor cryoSPARC)?\n\n**A:** If these MRC files have the same structure, then yes. But I don't know\nfor sure, because this tool has only been tested with files produced by RELION\nand cryoSPARC.\n\n## Acknowledgments\n\nI reused code suggested by\n[@biochem_fan](https://twitter.com/biochem_fan/status/1161347681110962177). My\ncontribution was simply to package it into a command-line tool that's documented\nand easy to install.\n\n## Installation\n\n```\n$ pip install localres\n```\n\n## Usage\n\n```\n$ localres --help\nUsage: localres [OPTIONS] <relion_locres.mrc> <mask.mrc>\n\n  Plots a histogram of local resolution values from a local resolution map\n  and a mask both produced by RELION.\n\n  For meaningful results, the mask.mrc file must be the one used for the 3D\n  refinement and post-processing jobs that produced the relion_locres.mrc\n  file.\n\nOptions:\n  -t, --title TEXT    Title of the histogram (default: no title).\n  -b, --bins INTEGER  Number of bins in the histogram (default: 100).\n  -o, --output TEXT   File name to save the histogram (optional: with no file\n                      name, simply display the histogram on screen without\n                      saving it; recommended file formats: .png, .pdf, .svg or\n                      any format supported by matplotlib).\n  -h, --help          Show this message and exit.\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Guillawme/localres", "keywords": "cryo-EM map local resolution histogram visualization", "license": "", "maintainer": "", "maintainer_email": "", "name": "localres", "package_url": "https://pypi.org/project/localres/", "platform": "", "project_url": "https://pypi.org/project/localres/", "project_urls": {"Bug Reports": "https://github.com/Guillawme/localres/issues", "Homepage": "https://github.com/Guillawme/localres", "Source": "https://github.com/Guillawme/localres"}, "release_url": "https://pypi.org/project/localres/1.2/", "requires_dist": ["click (>=7.0)", "matplotlib (>=3.1.1)", "mrcfile (>=1.1.2)", "numpy (>=1.17.3)"], "requires_python": ">=3.7", "summary": "Plot the histogram of local resolution values of a cryo-EM reconstruction.", "version": "1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>localres</h1>\n<p><a href=\"https://doi.org/10.5281/zenodo.3575229\" rel=\"nofollow\"><img alt=\"DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf2e56dc4ffc6a156c720592bac1da016e72e488/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f444f492f31302e353238312f7a656e6f646f2e333537353232392e737667\"></a></p>\n<p>Plot a local resolution histogram from a local resolution map and a mask.</p>\n<p>From a cryo-EM reconstruction, one can calculate local resolution and generate a\ncolor-coded 3D map showing local resolution across the 3D reconstruction (or\nwithin slices of it). This command-line tool complements this by allowing one to\nquantitatively answer the question \"how many map voxels inside the mask have a\ngiven local resolution?\". This tool generates a histogram of local resolution\nvalues from a local resolution map and a mask (<code>relion_locres.mrc</code> and\n<code>mask.mrc</code> files from RELION, respectively; <code>cryosparc_*_map_locres.mrc</code> and\n<code>cryosparc_*_volume_mask_refine.mrc</code> from cryoSPARC, respectively).</p>\n<h2>FAQ</h2>\n<p><strong>Q:</strong> Doesn't RELION already do this?</p>\n<p><strong>A:</strong> Yes, RELION-3.1 already prints out this histogram. This tool, however,\ndoesn't require an installation of RELION, allowing one to inspect files quickly\nfrom a different computer. This tool also lets you adjust the number of bins in\nthe histogram, and save the histogram as an SVG file (which is useful for\nadjusting styling to make a pretty figure).</p>\n<p><strong>Q:</strong> Doesn't cryoSPARC already do this?</p>\n<p><strong>A:</strong> Yes, cryoSPARC already prints out this histogram. This tool, however,\ndoesn't require an installation of cryoSPARC, allowing one to inspect files\nquickly from a different computer. This tool also lets you adjust the number of\nbins in the histogram, and save the histogram as an SVG file (which is useful\nfor adjusting styling to make a pretty figure).</p>\n<p><strong>Q:</strong> Will it work with MRC files produced by my favorite software (not RELION\nor cryoSPARC)?</p>\n<p><strong>A:</strong> If these MRC files have the same structure, then yes. But I don't know\nfor sure, because this tool has only been tested with files produced by RELION\nand cryoSPARC.</p>\n<h2>Acknowledgments</h2>\n<p>I reused code suggested by\n<a href=\"https://twitter.com/biochem_fan/status/1161347681110962177\" rel=\"nofollow\">@biochem_fan</a>. My\ncontribution was simply to package it into a command-line tool that's documented\nand easy to install.</p>\n<h2>Installation</h2>\n<pre><code>$ pip install localres\n</code></pre>\n<h2>Usage</h2>\n<pre><code>$ localres --help\nUsage: localres [OPTIONS] &lt;relion_locres.mrc&gt; &lt;mask.mrc&gt;\n\n  Plots a histogram of local resolution values from a local resolution map\n  and a mask both produced by RELION.\n\n  For meaningful results, the mask.mrc file must be the one used for the 3D\n  refinement and post-processing jobs that produced the relion_locres.mrc\n  file.\n\nOptions:\n  -t, --title TEXT    Title of the histogram (default: no title).\n  -b, --bins INTEGER  Number of bins in the histogram (default: 100).\n  -o, --output TEXT   File name to save the histogram (optional: with no file\n                      name, simply display the histogram on screen without\n                      saving it; recommended file formats: .png, .pdf, .svg or\n                      any format supported by matplotlib).\n  -h, --help          Show this message and exit.\n</code></pre>\n\n          </div>"}, "last_serial": 6930382, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "e58fe01d1308aec27bb622243a40f407", "sha256": "56aa62da690a8652609890c6c7a13fec2ced901c7f3932cad39a6ebdcac0ae10"}, "downloads": -1, "filename": "localres-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e58fe01d1308aec27bb622243a40f407", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4628, "upload_time": "2019-12-14T00:19:53", "upload_time_iso_8601": "2019-12-14T00:19:53.840127Z", "url": "https://files.pythonhosted.org/packages/cb/8e/9ef8e9a114dd17cb8afc421708f8454bc188c2f43eb7d65c18648e7b6d8b/localres-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a46cd37eb306dd9057cafb6bcc290ac7", "sha256": "3b0af86db624766e63e8563a50a0fead82f8468d78b0c48cc352f6f723063e9e"}, "downloads": -1, "filename": "localres-1.0.tar.gz", "has_sig": false, "md5_digest": "a46cd37eb306dd9057cafb6bcc290ac7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3720, "upload_time": "2019-12-14T00:19:56", "upload_time_iso_8601": "2019-12-14T00:19:56.022075Z", "url": "https://files.pythonhosted.org/packages/30/08/79f0b6e7734eedb9e6b46dc844282e6a75a49f2740a98ed617fd443d641d/localres-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "50e6c7cb1c468ee6e44f152e1db62e8e", "sha256": "aff073da0f7b13b62840d2379f17e78a7e6444bd449c2384b3799c11aafba89e"}, "downloads": -1, "filename": "localres-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "50e6c7cb1c468ee6e44f152e1db62e8e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4780, "upload_time": "2019-12-17T22:11:32", "upload_time_iso_8601": "2019-12-17T22:11:32.211770Z", "url": "https://files.pythonhosted.org/packages/bc/60/bec5f55f34aebc2acc3a284e44f6a1a5ecb6b37884c2e77b9946d730ef50/localres-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "472dede25b5cec56d5fc6b86f0c0dcc4", "sha256": "032f4f4fe1a7fba35de63e50748f87d564a7995ab53488426e185dfdf83a67a3"}, "downloads": -1, "filename": "localres-1.1.tar.gz", "has_sig": false, "md5_digest": "472dede25b5cec56d5fc6b86f0c0dcc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3681, "upload_time": "2019-12-17T22:11:33", "upload_time_iso_8601": "2019-12-17T22:11:33.682361Z", "url": "https://files.pythonhosted.org/packages/08/e3/bb296c026adde5ef2fe4d20474fe305cc729b6e55186f77fc9e88bd61a39/localres-1.1.tar.gz", "yanked": false}], "1.2": [{"comment_text": "", "digests": {"md5": "e1050727b2684482af31c90338149b84", "sha256": "b79a3bd0b84290581c8fcc3e2ddac4b1f5da1b6e1608ea567e2292c6120da8f1"}, "downloads": -1, "filename": "localres-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1050727b2684482af31c90338149b84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4861, "upload_time": "2020-04-01T19:50:27", "upload_time_iso_8601": "2020-04-01T19:50:27.003962Z", "url": "https://files.pythonhosted.org/packages/fc/91/237b440150d55dbaf7b947826026a387e3dde605e0a365854586e07b80e7/localres-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f20b6b293d1ae8763d498e508d72a3c1", "sha256": "33829eb9bccab57a927f9752829701f1042eadf8a5a136d478344199151b4a03"}, "downloads": -1, "filename": "localres-1.2.tar.gz", "has_sig": false, "md5_digest": "f20b6b293d1ae8763d498e508d72a3c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3795, "upload_time": "2020-04-01T19:50:28", "upload_time_iso_8601": "2020-04-01T19:50:28.455405Z", "url": "https://files.pythonhosted.org/packages/91/16/ed98315c393d5b4d70f2760c46349ef1da398a87fea61c42724d6ba5516c/localres-1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1050727b2684482af31c90338149b84", "sha256": "b79a3bd0b84290581c8fcc3e2ddac4b1f5da1b6e1608ea567e2292c6120da8f1"}, "downloads": -1, "filename": "localres-1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e1050727b2684482af31c90338149b84", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7", "size": 4861, "upload_time": "2020-04-01T19:50:27", "upload_time_iso_8601": "2020-04-01T19:50:27.003962Z", "url": "https://files.pythonhosted.org/packages/fc/91/237b440150d55dbaf7b947826026a387e3dde605e0a365854586e07b80e7/localres-1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f20b6b293d1ae8763d498e508d72a3c1", "sha256": "33829eb9bccab57a927f9752829701f1042eadf8a5a136d478344199151b4a03"}, "downloads": -1, "filename": "localres-1.2.tar.gz", "has_sig": false, "md5_digest": "f20b6b293d1ae8763d498e508d72a3c1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3795, "upload_time": "2020-04-01T19:50:28", "upload_time_iso_8601": "2020-04-01T19:50:28.455405Z", "url": "https://files.pythonhosted.org/packages/91/16/ed98315c393d5b4d70f2760c46349ef1da398a87fea61c42724d6ba5516c/localres-1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:37 2020"}