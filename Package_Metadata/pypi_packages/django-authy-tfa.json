{"info": {"author": "Rajtilak Indrajit", "author_email": "rt.indru@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.7", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "=====\nDjango Two Factor Authentication\n=====\n\nDjango TFA is a simple Django app to add two factor authentication to your Django projects super quickly! It's as simple as adding a decorator your views!\n\nDetailed documentation is in the \"docs\" directory.\n\nQuick start\n-----------\n\n1. Add \"django_twilio_tfa\" to your INSTALLED_APPS setting like this::\n\n    INSTALLED_APPS = [\n        ...\n        'django_twilio_tfa',\n    ]\n\n2. Include the polls URLconf in your project urls.py like this::\n\n    url(r'^tfa/', include('django_twilio_tfa.urls')),\n\n\n3. Add \"AUTHY_API_KEY\" to settings.py\n\n4. Add \"USER_PROFILE_MODEL\" to your settings.py. The \"USER_PROFILE_MODEL\" should have a one-to-one field with the User model.\n\n5. The following fields should be available on the USER_PROFILE_MODEL defined above. To edit the field names add the following to settings.py:\n    a. USER_UID_FIELD: Defaults to \"uid\" - This field should be writable.\n    b. USER_EMAIL_FIELD: Defaults to \"email\"\n    c. USER_PHONE_FIELD: Defaults to \"phone\"\n    d. USER_CC_FIELD: Defaults to \"country_code\"", "description_content_type": null, "docs_url": null, "download_url": null, "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "django-authy-tfa", "package_url": "https://pypi.org/project/django-authy-tfa/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-authy-tfa/", "project_urls": {"Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/django-authy-tfa/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Pluggable Django module to quickly enable Two Factor Authentication", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            =====<br>Django Two Factor Authentication<br>=====<br><br>Django TFA is a simple Django app to add two factor authentication to your Django projects super quickly! It's as simple as adding a decorator your views!<br><br>Detailed documentation is in the \"docs\" directory.<br><br>Quick start<br>-----------<br><br>1. Add \"django_twilio_tfa\" to your INSTALLED_APPS setting like this::<br><br>    INSTALLED_APPS = [<br>        ...<br>        'django_twilio_tfa',<br>    ]<br><br>2. Include the polls URLconf in your project urls.py like this::<br><br>    url(r'^tfa/', include('django_twilio_tfa.urls')),<br><br><br>3. Add \"AUTHY_API_KEY\" to settings.py<br><br>4. Add \"USER_PROFILE_MODEL\" to your settings.py. The \"USER_PROFILE_MODEL\" should have a one-to-one field with the User model.<br><br>5. The following fields should be available on the USER_PROFILE_MODEL defined above. To edit the field names add the following to settings.py:<br>    a. USER_UID_FIELD: Defaults to \"uid\" - This field should be writable.<br>    b. USER_EMAIL_FIELD: Defaults to \"email\"<br>    c. USER_PHONE_FIELD: Defaults to \"phone\"<br>    d. USER_CC_FIELD: Defaults to \"country_code\"\n          </div>"}, "last_serial": 2348775, "releases": {"0.1.1": []}, "urls": [], "timestamp": "Fri May  8 00:37:32 2020"}