{"info": {"author": "Miguel de Dios Matias", "author_email": "tres.14159@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Console", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# POWERLINE SWISSARMYKNIFE\n\nA [Powerline](https://powerline.readthedocs.io/en/master/) segment. This segment shows the execution of complex command line defined by user.\n\nBy [Miguel de Dios Matias](https://github.com/mdtrooper).\n\n## Installation\n\n### Using pip\n\n```\npip install powerline-swissarmyknife\n```\n\n## Configuration\n\nYou can activate the Powerline Slotmachine segment by adding it to your segment configuration,\nfor example in `.config/powerline/themes/shell/default.json`:\n\n```json\n{\n    \"function\": \"powerline_swissarmyknife.execute\",\n    \"priority\": 30,\n    \"args\": {\n        \"commandLine\": \"ps aux --no-headers | wc -l\",\n        \"postContent\": \"\u2699\ufe0f\"\n    }\n},\n```\n\nShow the number of processes running in your system.\n\n![screenshot number processes](https://raw.githubusercontent.com/mdtrooper/powerline_swissarmyknife/master/powerline_swissarmyknife_number_processes.jpg \"screenshot number processes\")\n\n### Arguments\n* **commandLine (string)**: The command line to execute, it can be complex (with pipes) (remember python3 runs as /bin/sh, not bash).\n* **line (string)**: The string to format the content of segment.\n  * Default: \"{preContent}{output}{err}{postContent}\"\n* **preContent (string)**: The string to show before the result.\n  * Default: \"\"\n* **postContent (string)**: The string to show after the result.\n  * Default: \"\ud83e\udd16\"\n* **successCodes (list(int) or None)**: The values are success code return (normally 0), the background change to critical success.\n  * Default: None\n* **failureCodes (list(int) or None)**: The values are fail code return, the background change to critical failture. \n  * Default: None\n\n### Examples\n\nShows the upload and download rate and count of torrents download in Deluge.\n\n```json\n{\n    \"function\": \"powerline_swissarmyknife.execute\",\n    \"priority\": 30,\n    \"args\": {\n        \"commandLine\": \"deluge-console status | awk '/Total upload:/{print $3$4} /Total download:/{print $3$4} /Downloading:/{print $2\\\"D\\\"}' | tr '\\n' ' '\",\n        \"postContent\": \"\ufe0f\"\n    }\n},\n```\n\n\n![screenshot deluge](https://raw.githubusercontent.com/mdtrooper/powerline_dice/master/powerline_deluge.jpg \"screenshot deluge\")\n\nShow a random pornstar from redtube api.\n\n```json\n{\n    \"function\": \"powerline_swissarmyknife.execute\",\n    \"priority\": 30,\n    \"args\": {\n        \"commandLine\": \"if [ -f /tmp/list.redtube.json ]; then list=$(cat /tmp/list.redtube.json); else list=$(curl 'https://api.redtube.com/?data=redtube.Stars.getStarList&output=json'); echo $list > /tmp/list.redtube.json; fi; list_length=$(echo $list | jq '.stars | length'); rand=$(echo 'ibase=16;' $(openssl rand -hex 4 | tr '[a-z]' '[A-Z]')  | bc); echo $list | jq \\\".stars[$(echo \\\\\\\"$rand % $list_length\\\\\\\" | bc)].star.star_name\\\" -r\",\n        \"postContent\": \" \ud83c\udfa5\"\n    }\n},\n```\n\n![screenshot pornstar](https://raw.githubusercontent.com/mdtrooper/powerline_dice/master/powerline_pornstar.jpg \"screenshot pornstar\")\n\n## License\n\nLicensed under [the GPL3 License](https://github.com/mdtrooper/powerline_slotmachine/blob/master/LICENSE).\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mdtrooper/powerline_swissarmyknife", "keywords": "", "license": "GPLv3+", "maintainer": "", "maintainer_email": "", "name": "powerline-swissarmyknife", "package_url": "https://pypi.org/project/powerline-swissarmyknife/", "platform": "any", "project_url": "https://pypi.org/project/powerline-swissarmyknife/", "project_urls": {"Homepage": "https://github.com/mdtrooper/powerline_swissarmyknife"}, "release_url": "https://pypi.org/project/powerline-swissarmyknife/1.0.0/", "requires_dist": null, "requires_python": ">=3.7", "summary": "A Powerline segment.This segment shows the execution of complex command line defined by user.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>POWERLINE SWISSARMYKNIFE</h1>\n<p>A <a href=\"https://powerline.readthedocs.io/en/master/\" rel=\"nofollow\">Powerline</a> segment. This segment shows the execution of complex command line defined by user.</p>\n<p>By <a href=\"https://github.com/mdtrooper\" rel=\"nofollow\">Miguel de Dios Matias</a>.</p>\n<h2>Installation</h2>\n<h3>Using pip</h3>\n<pre><code>pip install powerline-swissarmyknife\n</code></pre>\n<h2>Configuration</h2>\n<p>You can activate the Powerline Slotmachine segment by adding it to your segment configuration,\nfor example in <code>.config/powerline/themes/shell/default.json</code>:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"function\"</span><span class=\"p\">:</span> <span class=\"s2\">\"powerline_swissarmyknife.execute\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"priority\"</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"commandLine\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ps aux --no-headers | wc -l\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"postContent\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\u2699\ufe0f\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n</pre>\n<p>Show the number of processes running in your system.</p>\n<p><img alt=\"screenshot number processes\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3cc79dbffb472542a26eaf1d0b1de7b80acb4fc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6474726f6f7065722f706f7765726c696e655f737769737361726d796b6e6966652f6d61737465722f706f7765726c696e655f737769737361726d796b6e6966655f6e756d6265725f70726f6365737365732e6a7067\"></p>\n<h3>Arguments</h3>\n<ul>\n<li><strong>commandLine (string)</strong>: The command line to execute, it can be complex (with pipes) (remember python3 runs as /bin/sh, not bash).</li>\n<li><strong>line (string)</strong>: The string to format the content of segment.\n<ul>\n<li>Default: \"{preContent}{output}{err}{postContent}\"</li>\n</ul>\n</li>\n<li><strong>preContent (string)</strong>: The string to show before the result.\n<ul>\n<li>Default: \"\"</li>\n</ul>\n</li>\n<li><strong>postContent (string)</strong>: The string to show after the result.\n<ul>\n<li>Default: \"\ud83e\udd16\"</li>\n</ul>\n</li>\n<li><strong>successCodes (list(int) or None)</strong>: The values are success code return (normally 0), the background change to critical success.\n<ul>\n<li>Default: None</li>\n</ul>\n</li>\n<li><strong>failureCodes (list(int) or None)</strong>: The values are fail code return, the background change to critical failture.\n<ul>\n<li>Default: None</li>\n</ul>\n</li>\n</ul>\n<h3>Examples</h3>\n<p>Shows the upload and download rate and count of torrents download in Deluge.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"function\"</span><span class=\"p\">:</span> <span class=\"s2\">\"powerline_swissarmyknife.execute\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"priority\"</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"commandLine\"</span><span class=\"p\">:</span> <span class=\"s2\">\"deluge-console status | awk '/Total upload:/{print $3$4} /Total download:/{print $3$4} /Downloading:/{print $2\\\"D\\\"}' | tr '\\n' ' '\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"postContent\"</span><span class=\"p\">:</span> <span class=\"s2\">\"\ufe0f\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n</pre>\n<p><img alt=\"screenshot deluge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a09b687704691d83c7962200ced0b550f135c0b/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6474726f6f7065722f706f7765726c696e655f646963652f6d61737465722f706f7765726c696e655f64656c7567652e6a7067\"></p>\n<p>Show a random pornstar from redtube api.</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"function\"</span><span class=\"p\">:</span> <span class=\"s2\">\"powerline_swissarmyknife.execute\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"priority\"</span><span class=\"p\">:</span> <span class=\"mi\">30</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"commandLine\"</span><span class=\"p\">:</span> <span class=\"s2\">\"if [ -f /tmp/list.redtube.json ]; then list=$(cat /tmp/list.redtube.json); else list=$(curl 'https://api.redtube.com/?data=redtube.Stars.getStarList&amp;output=json'); echo $list &gt; /tmp/list.redtube.json; fi; list_length=$(echo $list | jq '.stars | length'); rand=$(echo 'ibase=16;' $(openssl rand -hex 4 | tr '[a-z]' '[A-Z]')  | bc); echo $list | jq \\\".stars[$(echo \\\\\\\"$rand % $list_length\\\\\\\" | bc)].star.star_name\\\" -r\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"postContent\"</span><span class=\"p\">:</span> <span class=\"s2\">\" \ud83c\udfa5\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span><span class=\"err\">,</span>\n</pre>\n<p><img alt=\"screenshot pornstar\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efe93c4c0cfb3a476d8530721b07c7d0df414231/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f6d6474726f6f7065722f706f7765726c696e655f646963652f6d61737465722f706f7765726c696e655f706f726e737461722e6a7067\"></p>\n<h2>License</h2>\n<p>Licensed under <a href=\"https://github.com/mdtrooper/powerline_slotmachine/blob/master/LICENSE\" rel=\"nofollow\">the GPL3 License</a>.</p>\n\n          </div>"}, "last_serial": 6166409, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0134f10cc36fbb4300ff3900e9ec9087", "sha256": "4d8e135111d31f44595ba823364e7db0fc68134664cb3a86424f9e2a7aecdb11"}, "downloads": -1, "filename": "powerline_swissarmyknife-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0134f10cc36fbb4300ff3900e9ec9087", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.7", "size": 16850, "upload_time": "2019-11-20T03:24:42", "upload_time_iso_8601": "2019-11-20T03:24:42.172781Z", "url": "https://files.pythonhosted.org/packages/d5/57/9d07948c4990e36af6b28e2c243de1daa6b024303965966cf31d61eb25e6/powerline_swissarmyknife-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc385c80efb582c0be7ed10a3253f261", "sha256": "0dc56711bd7c5058283457075f9dd2b6d4f6c1b26ff317ea8f20d6eb550b8391"}, "downloads": -1, "filename": "powerline_swissarmyknife-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fc385c80efb582c0be7ed10a3253f261", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3470, "upload_time": "2019-11-20T03:24:59", "upload_time_iso_8601": "2019-11-20T03:24:59.963719Z", "url": "https://files.pythonhosted.org/packages/3d/62/58e50220aa2f6a0e4a67d8d2e3f1e2a3582f37f79fd85c2144e977bce6ce/powerline_swissarmyknife-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0134f10cc36fbb4300ff3900e9ec9087", "sha256": "4d8e135111d31f44595ba823364e7db0fc68134664cb3a86424f9e2a7aecdb11"}, "downloads": -1, "filename": "powerline_swissarmyknife-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0134f10cc36fbb4300ff3900e9ec9087", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=3.7", "size": 16850, "upload_time": "2019-11-20T03:24:42", "upload_time_iso_8601": "2019-11-20T03:24:42.172781Z", "url": "https://files.pythonhosted.org/packages/d5/57/9d07948c4990e36af6b28e2c243de1daa6b024303965966cf31d61eb25e6/powerline_swissarmyknife-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc385c80efb582c0be7ed10a3253f261", "sha256": "0dc56711bd7c5058283457075f9dd2b6d4f6c1b26ff317ea8f20d6eb550b8391"}, "downloads": -1, "filename": "powerline_swissarmyknife-1.0.0.tar.gz", "has_sig": false, "md5_digest": "fc385c80efb582c0be7ed10a3253f261", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7", "size": 3470, "upload_time": "2019-11-20T03:24:59", "upload_time_iso_8601": "2019-11-20T03:24:59.963719Z", "url": "https://files.pythonhosted.org/packages/3d/62/58e50220aa2f6a0e4a67d8d2e3f1e2a3582f37f79fd85c2144e977bce6ce/powerline_swissarmyknife-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:20:40 2020"}