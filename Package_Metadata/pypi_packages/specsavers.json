{"info": {"author": "Alex Ward", "author_email": "alxwrd@googlemail.com", "bugtrack_url": null, "classifiers": [], "description": "# Specsavers :eyeglasses:\n_A Python wrapper around the Specsavers appointment booking API_\n\n[![Build Status](https://travis-ci.org/alxwrd/specsavers.svg?branch=master)](https://travis-ci.org/alxwrd/specsavers)\n\n> **IMPORTANT**: This project is NOT affiliated with Specsavers. Specsavers, nor this\nlibrary, should not be held responsible for any misinformation gained regarding\nappointment information during the use of this library. \n\n> **NOTE**: Whilst this is a toy project, the endpoints it connects to are very real.\nPlease be responsible if you use this library: don't spam requests, and don't spam bookings.\n\n## Example\n\n```python\n>>> import specsavers\n\n# Find local stores\n>>> stores = specsavers.locate(latitude=51.507879, longitude=0.087732)\n\n# Closest / first store\n>>> stores[0]\n<Store name='londonwall'>\n\n# Store by name\n>>> stores[\"strand\"]\n<Store name='strand'>\n\n# Lookup directly by name\n>>>other_store = specsavers.find(\"nottingham\")\n\n>>> other_store.appointments() # Implies today\n[<Appointment date='Jan 9', time='11:45'>, <Appointment date='Jan 9', time='15:00'>]\n\n>>> other_store.appointments(\"tomorrow\")[0]\n<Appointment date='Jan 10', time='09:20'>\n```\n\n## What?\n\nThe Specsavers booking site is powered by a RESTful API. This library\naims to provide a simple, easy, and Pythonic interface to that service.\n\n\n## Why?\n\nI recently needed an eye test, and Specsavers has the ability to book online.\nI needed an appointment fairly last minute (two days before), but fortunately,\nthere was _one_ slot left. I proceeded to make the appointment, but in the\ntime it had taken to fill in my details: it had already been taken.\n\nI wanted to watch for new appointments to pop up, but frustratingly, every\ntime I refreshed the page, I was taken back to the first step of the process.\n\nSo I did some digging in the browsers dev tools. To my delight, I realised\nthat the Specsavers booking site is powered by a RESTful API. I wrote some\ncode to fetch appointments for the desired date; so I could watch to see if\nanother appointment became available.\n\nIn the end, I got an appointment for the day I wanted. I didn't want to let\nmy learnings about the API go to waste though, so I created this package!\n\n\n## Using\n\n### Installing\n\n_Not yet_.\n\n\n## Contributing\n\nIf you find any problems, you should open an\n[issue](https://github.com/alxwrd/specsavers/issues).\n\nIf you can fix an issue you've found, or another issue, you should open\na [pull request](https://github.com/alxwrd/specsavers/pulls).\n\n1. Fork this repository on GitHub to start making your changes to the master\nbranch (or branch off of it).\n2. Write a test which shows that the bug was fixed or that the feature works as expected.\n3. Send a pull request!\n\n### Development setup\n\nThis project uses [pipenv](https://docs.pipenv.org/) to manage\ndependencies, the standard library [unittest](https://docs.python.org/3/library/unittest.html)\nfor tests, and [pycodestyle](https://github.com/PyCQA/pycodestyle) (formerly pep8)\nfor style checks.\n\n```bash\n$ pip install pipenv  # Install pipenv not installed\n\n$ git clone https://github.com/<yourname>/specsavers.git  # Clone the repo from your fork\n$ cd specsavers\n$ pipenv install --dev  # Install all dependencies\n$ pipenv shell  # Start the new virtual enviroment\n\n$ # Make changes\n\n$ python -m unittest discover tests  # Run tests\n$ pycodestyle specsavers/ tests/  # Check style\n```", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alxwrd/specsavers", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "specsavers", "package_url": "https://pypi.org/project/specsavers/", "platform": "", "project_url": "https://pypi.org/project/specsavers/", "project_urls": {"Homepage": "https://github.com/alxwrd/specsavers"}, "release_url": "https://pypi.org/project/specsavers/1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A Python wrapper around the Specsavers appointment booking API", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Specsavers :eyeglasses:<br>_A Python wrapper around the Specsavers appointment booking API_<br><br>[![Build Status](https://travis-ci.org/alxwrd/specsavers.svg?branch=master)](https://travis-ci.org/alxwrd/specsavers)<br><br>&gt; **IMPORTANT**: This project is NOT affiliated with Specsavers. Specsavers, nor this<br>library, should not be held responsible for any misinformation gained regarding<br>appointment information during the use of this library. <br><br>&gt; **NOTE**: Whilst this is a toy project, the endpoints it connects to are very real.<br>Please be responsible if you use this library: don't spam requests, and don't spam bookings.<br><br>## Example<br><br>```python<br>&gt;&gt;&gt; import specsavers<br><br># Find local stores<br>&gt;&gt;&gt; stores = specsavers.locate(latitude=51.507879, longitude=0.087732)<br><br># Closest / first store<br>&gt;&gt;&gt; stores[0]<br>&lt;Store name='londonwall'&gt;<br><br># Store by name<br>&gt;&gt;&gt; stores[\"strand\"]<br>&lt;Store name='strand'&gt;<br><br># Lookup directly by name<br>&gt;&gt;&gt;other_store = specsavers.find(\"nottingham\")<br><br>&gt;&gt;&gt; other_store.appointments() # Implies today<br>[&lt;Appointment date='Jan 9', time='11:45'&gt;, &lt;Appointment date='Jan 9', time='15:00'&gt;]<br><br>&gt;&gt;&gt; other_store.appointments(\"tomorrow\")[0]<br>&lt;Appointment date='Jan 10', time='09:20'&gt;<br>```<br><br>## What?<br><br>The Specsavers booking site is powered by a RESTful API. This library<br>aims to provide a simple, easy, and Pythonic interface to that service.<br><br><br>## Why?<br><br>I recently needed an eye test, and Specsavers has the ability to book online.<br>I needed an appointment fairly last minute (two days before), but fortunately,<br>there was _one_ slot left. I proceeded to make the appointment, but in the<br>time it had taken to fill in my details: it had already been taken.<br><br>I wanted to watch for new appointments to pop up, but frustratingly, every<br>time I refreshed the page, I was taken back to the first step of the process.<br><br>So I did some digging in the browsers dev tools. To my delight, I realised<br>that the Specsavers booking site is powered by a RESTful API. I wrote some<br>code to fetch appointments for the desired date; so I could watch to see if<br>another appointment became available.<br><br>In the end, I got an appointment for the day I wanted. I didn't want to let<br>my learnings about the API go to waste though, so I created this package!<br><br><br>## Using<br><br>### Installing<br><br>_Not yet_.<br><br><br>## Contributing<br><br>If you find any problems, you should open an<br>[issue](https://github.com/alxwrd/specsavers/issues).<br><br>If you can fix an issue you've found, or another issue, you should open<br>a [pull request](https://github.com/alxwrd/specsavers/pulls).<br><br>1. Fork this repository on GitHub to start making your changes to the master<br>branch (or branch off of it).<br>2. Write a test which shows that the bug was fixed or that the feature works as expected.<br>3. Send a pull request!<br><br>### Development setup<br><br>This project uses [pipenv](https://docs.pipenv.org/) to manage<br>dependencies, the standard library [unittest](https://docs.python.org/3/library/unittest.html)<br>for tests, and [pycodestyle](https://github.com/PyCQA/pycodestyle) (formerly pep8)<br>for style checks.<br><br>```bash<br>$ pip install pipenv  # Install pipenv not installed<br><br>$ git clone https://github.com/&lt;yourname&gt;/specsavers.git  # Clone the repo from your fork<br>$ cd specsavers<br>$ pipenv install --dev  # Install all dependencies<br>$ pipenv shell  # Start the new virtual enviroment<br><br>$ # Make changes<br><br>$ python -m unittest discover tests  # Run tests<br>$ pycodestyle specsavers/ tests/  # Check style<br>```\n          </div>"}, "last_serial": 3789368, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "50765d0f8fc80842ca60edaaee7f54d1", "sha256": "f7ad78b04e5b633fe5b49907757fac95c60c9f17d1182764e58bbfdf3ff0bd4b"}, "downloads": -1, "filename": "specsavers-1.0.tar.gz", "has_sig": false, "md5_digest": "50765d0f8fc80842ca60edaaee7f54d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5091, "upload_time": "2018-04-22T17:15:26", "upload_time_iso_8601": "2018-04-22T17:15:26.297791Z", "url": "https://files.pythonhosted.org/packages/ed/c0/b2610c2574fff7393c6742ad92c7b67fdb1456b2a97ee150728bceb33cc1/specsavers-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "50765d0f8fc80842ca60edaaee7f54d1", "sha256": "f7ad78b04e5b633fe5b49907757fac95c60c9f17d1182764e58bbfdf3ff0bd4b"}, "downloads": -1, "filename": "specsavers-1.0.tar.gz", "has_sig": false, "md5_digest": "50765d0f8fc80842ca60edaaee7f54d1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5091, "upload_time": "2018-04-22T17:15:26", "upload_time_iso_8601": "2018-04-22T17:15:26.297791Z", "url": "https://files.pythonhosted.org/packages/ed/c0/b2610c2574fff7393c6742ad92c7b67fdb1456b2a97ee150728bceb33cc1/specsavers-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:05:40 2020"}