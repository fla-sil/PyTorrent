{"info": {"author": "Tom Caruso", "author_email": "carusot42@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython"], "description": "\n## fiona-settings\n\nLightweight wrapper for `fiona` settings & schemas to make it a little easier to manipulate.\nFiona includes a lot of \"magic strings\" representings GDAL drivers, CRS values, data types, and more. \nWhile it's all quite intuitive and relatively simple, I have always wished there\nwas a neater way to manage them all, and so I wrote this.\n\n\n## install\n\nRequires Python3.6+.\n\nwith pip:\n\n```bash\npip install fiona-settings\n```\n\nfrom source:\n\n```bash\ngit clone git@github.com:tomplex/fiona_settings.git\npip install fiona_settings/\n```\n\n## examples\n\n```python\nimport fiona\nfrom fiona_settings import Settings, Type, Driver, CRS\n\nsrc = fiona.open('my_file.shp')\n# from_collection copies the following settings from an already opened collection:\n# - driver\n# - schema\n# - crs\n# - encoding\nsettings = Settings.from_collection(src)\n# add a string column with width 25\nsettings += ('my_column', Type.str(width=25))\nsettings += ('my_other_column', 'float')  # don't need to use Enum types\n# Remove a column by name\nsettings -= 'column_i_dont_want'\n\n# unpack the settings directly into the fiona.open() function\nsink = fiona.open('my_output_file.shp', 'w', **settings)\n\n# Override any option which would be copied with a kwarg. Either\n# string or enum values will work.\nnew_settings = Settings.from_collection(src, driver=Driver.GeoJSON)\nsink = fiona.open('my_file.geojson', 'w', **new_settings)\n```\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tomplex/fiona_settings", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fiona-settings", "package_url": "https://pypi.org/project/fiona-settings/", "platform": "", "project_url": "https://pypi.org/project/fiona-settings/", "project_urls": {"Homepage": "https://github.com/tomplex/fiona_settings"}, "release_url": "https://pypi.org/project/fiona-settings/0.1.0/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Wrappers for fiona settings.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>fiona-settings</h2>\n<p>Lightweight wrapper for <code>fiona</code> settings &amp; schemas to make it a little easier to manipulate.\nFiona includes a lot of \"magic strings\" representings GDAL drivers, CRS values, data types, and more.\nWhile it's all quite intuitive and relatively simple, I have always wished there\nwas a neater way to manage them all, and so I wrote this.</p>\n<h2>install</h2>\n<p>Requires Python3.6+.</p>\n<p>with pip:</p>\n<pre>pip install fiona-settings\n</pre>\n<p>from source:</p>\n<pre>git clone git@github.com:tomplex/fiona_settings.git\npip install fiona_settings/\n</pre>\n<h2>examples</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">fiona</span>\n<span class=\"kn\">from</span> <span class=\"nn\">fiona_settings</span> <span class=\"kn\">import</span> <span class=\"n\">Settings</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"p\">,</span> <span class=\"n\">Driver</span><span class=\"p\">,</span> <span class=\"n\">CRS</span>\n\n<span class=\"n\">src</span> <span class=\"o\">=</span> <span class=\"n\">fiona</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'my_file.shp'</span><span class=\"p\">)</span>\n<span class=\"c1\"># from_collection copies the following settings from an already opened collection:</span>\n<span class=\"c1\"># - driver</span>\n<span class=\"c1\"># - schema</span>\n<span class=\"c1\"># - crs</span>\n<span class=\"c1\"># - encoding</span>\n<span class=\"n\">settings</span> <span class=\"o\">=</span> <span class=\"n\">Settings</span><span class=\"o\">.</span><span class=\"n\">from_collection</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">)</span>\n<span class=\"c1\"># add a string column with width 25</span>\n<span class=\"n\">settings</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"s1\">'my_column'</span><span class=\"p\">,</span> <span class=\"n\">Type</span><span class=\"o\">.</span><span class=\"n\">str</span><span class=\"p\">(</span><span class=\"n\">width</span><span class=\"o\">=</span><span class=\"mi\">25</span><span class=\"p\">))</span>\n<span class=\"n\">settings</span> <span class=\"o\">+=</span> <span class=\"p\">(</span><span class=\"s1\">'my_other_column'</span><span class=\"p\">,</span> <span class=\"s1\">'float'</span><span class=\"p\">)</span>  <span class=\"c1\"># don't need to use Enum types</span>\n<span class=\"c1\"># Remove a column by name</span>\n<span class=\"n\">settings</span> <span class=\"o\">-=</span> <span class=\"s1\">'column_i_dont_want'</span>\n\n<span class=\"c1\"># unpack the settings directly into the fiona.open() function</span>\n<span class=\"n\">sink</span> <span class=\"o\">=</span> <span class=\"n\">fiona</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'my_output_file.shp'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">settings</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Override any option which would be copied with a kwarg. Either</span>\n<span class=\"c1\"># string or enum values will work.</span>\n<span class=\"n\">new_settings</span> <span class=\"o\">=</span> <span class=\"n\">Settings</span><span class=\"o\">.</span><span class=\"n\">from_collection</span><span class=\"p\">(</span><span class=\"n\">src</span><span class=\"p\">,</span> <span class=\"n\">driver</span><span class=\"o\">=</span><span class=\"n\">Driver</span><span class=\"o\">.</span><span class=\"n\">GeoJSON</span><span class=\"p\">)</span>\n<span class=\"n\">sink</span> <span class=\"o\">=</span> <span class=\"n\">fiona</span><span class=\"o\">.</span><span class=\"n\">open</span><span class=\"p\">(</span><span class=\"s1\">'my_file.geojson'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">new_settings</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7117116, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "52568095b4468602f0ab1dde02dd502b", "sha256": "9efe23c63e2838c778a2a057495b2af533f9f8aaf6be7b6d5d6a313a6321d069"}, "downloads": -1, "filename": "fiona_settings-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52568095b4468602f0ab1dde02dd502b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 10003, "upload_time": "2020-04-28T04:41:37", "upload_time_iso_8601": "2020-04-28T04:41:37.399565Z", "url": "https://files.pythonhosted.org/packages/8e/34/22685d437295bc56e43ecd8881db9229ebdc69471d9c9e18c2e1073fa7a8/fiona_settings-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89d34421651c6797ed349c3ed766a62e", "sha256": "95ad66473b3e1c028a51b920881e6f1ccc7b23b249b14ed93bc4cd6ab87ca46e"}, "downloads": -1, "filename": "fiona_settings-0.1.0.tar.gz", "has_sig": false, "md5_digest": "89d34421651c6797ed349c3ed766a62e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5365, "upload_time": "2020-04-28T04:41:39", "upload_time_iso_8601": "2020-04-28T04:41:39.423559Z", "url": "https://files.pythonhosted.org/packages/65/20/6f8535a844ff0fffe25fb4b7beb13b1e662b38b6c025442db486d106398e/fiona_settings-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "52568095b4468602f0ab1dde02dd502b", "sha256": "9efe23c63e2838c778a2a057495b2af533f9f8aaf6be7b6d5d6a313a6321d069"}, "downloads": -1, "filename": "fiona_settings-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "52568095b4468602f0ab1dde02dd502b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.0", "size": 10003, "upload_time": "2020-04-28T04:41:37", "upload_time_iso_8601": "2020-04-28T04:41:37.399565Z", "url": "https://files.pythonhosted.org/packages/8e/34/22685d437295bc56e43ecd8881db9229ebdc69471d9c9e18c2e1073fa7a8/fiona_settings-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89d34421651c6797ed349c3ed766a62e", "sha256": "95ad66473b3e1c028a51b920881e6f1ccc7b23b249b14ed93bc4cd6ab87ca46e"}, "downloads": -1, "filename": "fiona_settings-0.1.0.tar.gz", "has_sig": false, "md5_digest": "89d34421651c6797ed349c3ed766a62e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 5365, "upload_time": "2020-04-28T04:41:39", "upload_time_iso_8601": "2020-04-28T04:41:39.423559Z", "url": "https://files.pythonhosted.org/packages/65/20/6f8535a844ff0fffe25fb4b7beb13b1e662b38b6c025442db486d106398e/fiona_settings-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:18 2020"}