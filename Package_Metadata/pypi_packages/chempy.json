{"info": {"author": "Bjoern I. Dahlgren", "author_email": "bjodah@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Chemistry"], "description": "ChemPy\n======\n\n.. image:: http://hera.physchem.kth.se:8080/api/badges/bjodah/chempy/status.svg\n   :target: http://hera.physchem.kth.se:8080/bjodah/chempy\n   :alt: Build status\n.. image:: https://img.shields.io/pypi/v/chempy.svg\n   :target: https://pypi.python.org/pypi/chempy\n   :alt: PyPI version\n.. image:: https://img.shields.io/badge/python-3.6,3.7-blue.svg\n   :target: https://www.python.org/\n   :alt: Python version\n.. image:: https://img.shields.io/pypi/l/chempy.svg\n   :target: https://github.com/bjodah/chempy/blob/master/LICENSE\n   :alt: License\n.. image:: http://img.shields.io/badge/benchmarked%20by-asv-green.svg?style=flat\n   :target: http://hera.physchem.kth.se/~chempy/benchmarks\n   :alt: airspeedvelocity\n.. image:: http://hera.physchem.kth.se/~chempy/branches/master/htmlcov/coverage.svg\n   :target: http://hera.physchem.kth.se/~chempy/branches/master/htmlcov\n   :alt: coverage\n.. image:: http://joss.theoj.org/papers/10.21105/joss.00565/status.svg\n   :target: https://doi.org/10.21105/joss.00565\n   :alt: Journal of Open Source Software DOI\n\n.. contents::\n\n\nAbout ChemPy\n------------\nChemPy is a `Python <https://www.python.org>`_ package useful for\nchemistry (mainly physical/inorganic/analytical chemistry). Currently it includes:\n\n- Numerical integration routines for chemical kinetics (ODE solver front-end)\n- Integrated rate expressions (and convenience fitting routines)\n- Solver for equilibria (including multiphase systems)\n- Relations in physical chemistry:\n\n  - Debye-H\u00fcckel expressions\n  - Arrhenius & Eyring equation\n  - Einstein-Smoluchowski equation\n\n- Properties (pure python implementations from the literature)\n\n  - water density as function of temperature\n  - water permittivity as function of temperature and pressure\n  - water diffusivity as function of temperature\n  - water viscosity as function of temperature\n  - sulfuric acid density as function of temperature & weight fraction H\u2082SO\u2084\n  - More to come... (and contributions are most welcome!)\n\n\nDocumentation\n-------------\nThe easiest way to get started is to have a look at the examples in this README,\nand also the jupyter notebooks_. In addition there is auto-generated API documentation\nfor the latest `stable release here <https://bjodah.github.io/chempy/latest>`_\n(and `here are <http://hera.physchem.kth.se/~chempy/branches/master/html>`_ the API docs for the development version).\n\n.. _notebooks: http://hera.physchem.kth.se/~chempy/branches/master/examples\n\nInstallation\n------------\nSimplest way to install ChemPy and its (optional) dependencies is to use the\n`conda package manager <https://conda.pydata.org/docs/>`_::\n\n   $ conda install -c bjodah chempy pytest\n   $ pytest -rs -W ignore::chempy.ChemPyDeprecationWarning --pyargs chempy\n\ncurrently conda packages are only provided for Linux. On Windows and OS X\nyou will need to use ``pip`` instead::\n\n   $ python3 -m pip install chempy pytest\n   $ python3 -m pytest -rs -W ignore::chempy.ChemPyDeprecationWarning --pyargs chempy\n\nthere will a few tests which will be skipped due to some missing optional\nbackends in addition to those in SciPy (used for solving systems of non-linear\nequations and ordinary differential equations).\n\nIf you are still using Python 2 you can use the long-term-support 0.6.x branch\nof ChemPy which will continue to receive bugfixes::\n\n   $ python2 -m pip install \"chempy<0.7\"\n\n\nOptional dependencies\n~~~~~~~~~~~~~~~~~~~~~\nIf you used ``conda`` to install ChemPy you can skip this section.\nBut if you use ``pip`` the default installation is achieved by writing::\n\n   $ python3 -m pip install --user --upgrade chempy pytest\n   $ python3 -m pytest -rs --pyargs chempy\n\nyou can skip the ``--user`` flag if you have got root permissions.\nYou may be interested in using additional backends (in addition to those provided by SciPy)\nfor solving ODE-systems and non-linear optimization problems::\n\n   $ python3 -m pip install chempy[all]\n\nNote that this option will install the following libraries\n(some of which require additional libraries to be present on your system):\n\n- `pygslodeiv2 <https://github.com/bjodah/pygslodeiv2>`_: solving initial value problems, requires GSL_. (>=1.16).\n- `pyodeint <https://github.com/bjodah/pyodeint>`_: solving initial value problems, requires boost_ (>=1.65.0).\n- `pycvodes <https://github.com/bjodah/pycvodes>`_: solving initial value problems, requires SUNDIALS_ (>=2.7.0).\n- `pykinsol <https://github.com/bjodah/pykinsol>`_: solving non-linear root-finding, requires SUNDIALS_ (>=2.7.0).\n- `pycompilation <https://github.com/bjodah/pycompilation>`_: python front-end for calling compilers, requires gcc/clang/icpc.\n- `pycodeexport <https://github.com/bjodah/pycodeexport>`_: package for code-generation, used when generating C++ code.\n\n.. _GSL: https://www.gnu.org/software/gsl/\n.. _boost: http://www.boost.org/\n.. _SUNDIALS: https://computation.llnl.gov/projects/sundials\n\nif you want to see what packages need to be installed on a Debian based system you may look at this\n`Dockerfile <scripts/environment/Dockerfile>`_.\n\nUsing Docker\n~~~~~~~~~~~~\nIf you have `Docker <https://www.docker.com>`_ installed, you may use it to host a jupyter\nnotebook server::\n\n  $ ./scripts/host-jupyter-using-docker.sh . 8888\n\nthe first time you run the command, some dependencies will be downloaded. When the installation\nis complete there will be a link visible which you can open in your browser. You can also run\nthe test suite using the same docker-image::\n\n  $ ./scripts/host-jupyter-using-docker.sh . 0\n\nthere will be a few skipped test (due to some dependencies not being installed by default) and\nquite a few warnings.\n\n\nExamples\n--------\nSee demonstration scripts in `examples/ <https://github.com/bjodah/chempy/tree/master/examples>`_,\nand some rendered jupyter notebooks_.\nYou may also browse the documentation for more examples. Below you will find a few code snippets:\n\nParsing formulae\n~~~~~~~~~~~~~~~~\n.. code:: python\n\n   >>> from chempy import Substance\n   >>> ferricyanide = Substance.from_formula('Fe(CN)6-3')\n   >>> ferricyanide.composition == {0: -3, 26: 1, 6: 6, 7: 6}  # 0 for charge\n   True\n   >>> print(ferricyanide.unicode_name)\n   Fe(CN)\u2086\u00b3\u207b\n   >>> print(ferricyanide.latex_name + \", \" + ferricyanide.html_name)\n   Fe(CN)_{6}^{3-}, Fe(CN)<sub>6</sub><sup>3-</sup>\n   >>> print('%.3f' % ferricyanide.mass)\n   211.955\n\n\nas you see, in composition, the atomic numbers (and 0 for charge) is used as\nkeys and the count of each kind became respective value.\n\nBalancing stoichiometry of a chemical reaction\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n   >>> from chempy import balance_stoichiometry  # Main reaction in NASA's booster rockets:\n   >>> reac, prod = balance_stoichiometry({'NH4ClO4', 'Al'}, {'Al2O3', 'HCl', 'H2O', 'N2'})\n   >>> from pprint import pprint\n   >>> pprint(dict(reac))\n   {'Al': 10, 'NH4ClO4': 6}\n   >>> pprint(dict(prod))\n   {'Al2O3': 5, 'H2O': 9, 'HCl': 6, 'N2': 3}\n   >>> from chempy import mass_fractions\n   >>> for fractions in map(mass_fractions, [reac, prod]):\n   ...     pprint({k: '{0:.3g} wt%'.format(v*100) for k, v in fractions.items()})\n   ...\n   {'Al': '27.7 wt%', 'NH4ClO4': '72.3 wt%'}\n   {'Al2O3': '52.3 wt%', 'H2O': '16.6 wt%', 'HCl': '22.4 wt%', 'N2': '8.62 wt%'}\n\n\nChemPy can also balance reactions where the reacting species are more complex and\nare better described in other terms than their molecular formula. A silly, yet\nillustrative example would be how to make pancakes without any partially used packages:\n\n.. code:: python\n\n   >>> substances = {s.name: s for s in [\n   ...     Substance('pancake', composition=dict(eggs=1, spoons_of_flour=2, cups_of_milk=1)),\n   ...     Substance('eggs_6pack', composition=dict(eggs=6)),\n   ...     Substance('milk_carton', composition=dict(cups_of_milk=4)),\n   ...     Substance('flour_bag', composition=dict(spoons_of_flour=60))\n   ... ]}\n   >>> pprint([dict(_) for _ in balance_stoichiometry({'eggs_6pack', 'milk_carton', 'flour_bag'},\n   ...                                                {'pancake'}, substances=substances)])\n   [{'eggs_6pack': 10, 'flour_bag': 2, 'milk_carton': 15}, {'pancake': 60}]\n\n\nChemPy can even handle reactions with linear dependencies (underdetermined systems), e.g.:\n\n.. code:: python\n\n   >>> pprint([dict(_) for _ in balance_stoichiometry({'C', 'O2'}, {'CO2', 'CO'})])  # doctest: +SKIP\n   [{'C': x1 + 2, 'O2': x1 + 1}, {'CO': 2, 'CO2': x1}]\n\n\nthe ``x1`` object above is an instance of SymPy's Symbol_. If we prefer to get a solution\nwith minimal (non-zero) integer coefficients we can pass ``underdetermined=None``:\n\n.. code:: python\n\n   >>> pprint([dict(_) for _ in balance_stoichiometry({'C', 'O2'}, {'CO2', 'CO'}, underdetermined=None)])\n   [{'C': 3, 'O2': 2}, {'CO': 2, 'CO2': 1}]\n\n\nnote however that even though this solution is in some sense \"canonical\",\nit is merely one of an inifite number of solutions (``x1`` from earlier may be any integer).\n\n\n.. _Symbol: http://docs.sympy.org/latest/modules/core.html#sympy.core.symbol.Symbol\n\n\nBalancing reactions\n~~~~~~~~~~~~~~~~~~~\n.. code:: python\n\n   >>> from chempy import Equilibrium\n   >>> from sympy import symbols\n   >>> K1, K2, Kw = symbols('K1 K2 Kw')\n   >>> e1 = Equilibrium({'MnO4-': 1, 'H+': 8, 'e-': 5}, {'Mn+2': 1, 'H2O': 4}, K1)\n   >>> e2 = Equilibrium({'O2': 1, 'H2O': 2, 'e-': 4}, {'OH-': 4}, K2)\n   >>> coeff = Equilibrium.eliminate([e1, e2], 'e-')\n   >>> coeff\n   [4, -5]\n   >>> redox = e1*coeff[0] + e2*coeff[1]\n   >>> print(redox)\n   32 H+ + 4 MnO4- + 20 OH- = 26 H2O + 4 Mn+2 + 5 O2; K1**4/K2**5\n   >>> autoprot = Equilibrium({'H2O': 1}, {'H+': 1, 'OH-': 1}, Kw)\n   >>> n = redox.cancel(autoprot)\n   >>> n\n   20\n   >>> redox2 = redox + n*autoprot\n   >>> print(redox2)\n   12 H+ + 4 MnO4- = 6 H2O + 4 Mn+2 + 5 O2; K1**4*Kw**20/K2**5\n\nWorking with units\n~~~~~~~~~~~~~~~~~~\nFunctions and objects useful\nfor working with units are available from the ``chempy.units`` module. Here is an\nexample of how ChemPy can check consistency of units:\n\n.. code:: python\n\n   >>> from chempy import Reaction\n   >>> r = Reaction.from_string(\"H2O -> H+ + OH-; 1e-4/M/s\")\n   Traceback (most recent call last):\n   ...\n   ValueError: Unable to convert between units of \"1/M\" and \"dimensionless\"\n   >>> r = Reaction.from_string(\"H2O -> H+ + OH-; 1e-4/s\")\n   >>> from chempy.units import to_unitless, default_units as u\n   >>> to_unitless(r.param, 1/u.minute)\n   0.006\n\nright now the ``.units`` module wraps the quantities_ package with some minor\nadditions and work-arounds. However, there is no guarantee that the underlying\npackage will not change in a future version of ChemPy (there are many packages\nfor dealing with units in the scientific Python ecosystem).\n\n.. _quantities: http://python-quantities.readthedocs.io/en/latest/\n\n\nChemical equilibria\n~~~~~~~~~~~~~~~~~~~\nIf we want to predict pH of a bicarbonate solution we simply just need pKa and pKw values:\n\n.. code:: python\n\n   >>> from collections import defaultdict\n   >>> from chempy.equilibria import EqSystem\n   >>> eqsys = EqSystem.from_string(\"\"\"HCO3- = H+ + CO3-2; 10**-10.3\n   ... H2CO3 = H+ + HCO3-; 10**-6.3\n   ... H2O = H+ + OH-; 10**-14/55.4\n   ... \"\"\")  # pKa1(H2CO3) = 6.3 (implicitly incl. CO2(aq)), pKa2=10.3 & pKw=14\n   >>> arr, info, sane = eqsys.root(defaultdict(float, {'H2O': 55.4, 'HCO3-': 1e-2}))\n   >>> conc = dict(zip(eqsys.substances, arr))\n   >>> from math import log10\n   >>> print(\"pH: %.2f\" % -log10(conc['H+']))\n   pH: 8.30\n\nhere is another example for ammonia:\n\n.. code:: python\n\n   >>> from chempy import Equilibrium\n   >>> from chempy.chemistry import Species\n   >>> water_autop = Equilibrium({'H2O'}, {'H+', 'OH-'}, 10**-14)  # unit \"molar\" assumed\n   >>> ammonia_prot = Equilibrium({'NH4+'}, {'NH3', 'H+'}, 10**-9.24)  # same here\n   >>> substances = [Species.from_formula(f) for f in 'H2O OH- H+ NH3 NH4+'.split()]\n   >>> eqsys = EqSystem([water_autop, ammonia_prot], substances)\n   >>> print('\\n'.join(map(str, eqsys.rxns)))  # \"rxns\" short for \"reactions\"\n   H2O = H+ + OH-; 1e-14\n   NH4+ = H+ + NH3; 5.75e-10\n   >>> init_conc = defaultdict(float, {'H2O': 1, 'NH3': 0.1})\n   >>> x, sol, sane = eqsys.root(init_conc)\n   >>> assert sol['success'] and sane\n   >>> print(', '.join('%.2g' % v for v in x))\n   1, 0.0013, 7.6e-12, 0.099, 0.0013\n\n\nConcepts\n~~~~~~~~~\nChemPy collects equations and utility functions for working with\nconcepts such as `ionic strength <https://en.wikipedia.org/wiki/Ionic_strength>`_:\n\n.. code:: python\n\n   >>> from chempy.electrolytes import ionic_strength\n   >>> ionic_strength({'Fe+3': 0.050, 'ClO4-': 0.150}) == .3\n   True\n\nnote how ChemPy parsed the charges from the names of the substances. There are\nalso e.g. empirical equations and convenience classes for them available, e.g.:\n\n.. code:: python\n\n   >>> from chempy.henry import Henry\n   >>> kH_O2 = Henry(1.2e-3, 1800, ref='carpenter_1966')\n   >>> print('%.1e' % kH_O2(298.15))\n   1.2e-03\n\nto get more information about e.g. this class, you may can look at the `API documentation`_.\n\n.. _API documentation: https://bjodah.github.io/chempy/latest/chempy.html#module-chempy.henry\n\n\nChemical kinetics (system of ordinary differential equations)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\nA common task when modelling problems in chemistry is to investigate the time dependence\nof a system. This branch of study is known as\n`chemical kinetics <https://en.wikipedia.org/wiki/Chemical_kinetics>`_, and ChemPy has\nsome classes and functions for working with such problems:\n\n.. code:: python\n\n   >>> from chempy import ReactionSystem  # The rate constants below are arbitrary\n   >>> rsys = ReactionSystem.from_string(\"\"\"2 Fe+2 + H2O2 -> 2 Fe+3 + 2 OH-; 42\n   ...     2 Fe+3 + H2O2 -> 2 Fe+2 + O2 + 2 H+; 17\n   ...     H+ + OH- -> H2O; 1e10\n   ...     H2O -> H+ + OH-; 1e-4\"\"\")  # \"[H2O]\" = 1.0 (actually 55.4 at RT)\n   >>> from chempy.kinetics.ode import get_odesys\n   >>> odesys, extra = get_odesys(rsys)\n   >>> from collections import defaultdict\n   >>> import numpy as np\n   >>> tout = sorted(np.concatenate((np.linspace(0, 23), np.logspace(-8, 1))))\n   >>> c0 = defaultdict(float, {'Fe+2': 0.05, 'H2O2': 0.1, 'H2O': 1.0, 'H+': 1e-2, 'OH-': 1e-12})\n   >>> result = odesys.integrate(tout, c0, atol=1e-12, rtol=1e-14)\n   >>> import matplotlib.pyplot as plt\n   >>> fig, axes = plt.subplots(1, 2, figsize=(12, 5))\n   >>> for ax in axes:\n   ...     _ = result.plot(names=[k for k in rsys.substances if k != 'H2O'], ax=ax)\n   ...     _ = ax.legend(loc='best', prop={'size': 9})\n   ...     _ = ax.set_xlabel('Time')\n   ...     _ = ax.set_ylabel('Concentration')\n   >>> _ = axes[1].set_ylim([1e-13, 1e-1])\n   >>> _ = axes[1].set_xscale('log')\n   >>> _ = axes[1].set_yscale('log')\n   >>> _ = fig.tight_layout()\n   >>> _ = fig.savefig('examples/kinetics.png', dpi=72)\n\n.. image:: https://raw.githubusercontent.com/bjodah/chempy/master/examples/kinetics.png\n\nProperties\n~~~~~~~~~~\nOne of the fundamental tasks in science is the careful collection of data about the world\naround us. ChemPy contains a growing collection of parametrizations from the scientific\nliterature with relevance in chemistry. Here is how you use one of these formulations:\n\n.. code:: python\n\n   >>> from chempy import Substance\n   >>> from chempy.properties.water_density_tanaka_2001 import water_density as rho\n   >>> from chempy.units import to_unitless, default_units as u\n   >>> water = Substance.from_formula('H2O')\n   >>> for T_C in (15, 25, 35):\n   ...     concentration_H2O = rho(T=(273.15 + T_C)*u.kelvin, units=u)/water.molar_mass(units=u)\n   ...     print('[H2O] = %.2f M (at %d \u00b0C)' % (to_unitless(concentration_H2O, u.molar), T_C))\n   ...\n   [H2O] = 55.46 M (at 15 \u00b0C)\n   [H2O] = 55.35 M (at 25 \u00b0C)\n   [H2O] = 55.18 M (at 35 \u00b0C)\n\n\nRun notebooks using binder\n~~~~~~~~~~~~~~~~~~~~~~~~~~\nUsing only a web-browser (and an internet connection) it is possible to explore the\nnotebooks here: (by the courtesy of the people behind mybinder)\n\n.. image:: http://mybinder.org/badge.svg\n   :target: https://mybinder.org/v2/gh/bjodah/chempy/v0.6.6?filepath=index.ipynb\n   :alt: Binder\n\n\nCiting\n------\nIf you make use of ChemPy in e.g. academic work you may cite the following peer-reviewed publication:\n\n.. image:: http://joss.theoj.org/papers/10.21105/joss.00565/status.svg\n   :target: https://doi.org/10.21105/joss.00565\n   :alt: Journal of Open Source Software DOI\n\nDepending on what underlying solver you are using you should also cite the appropriate paper\n(you can look at the list of references in the JOSS article). If you need to reference,\nin addition to the paper, a specific point version of ChemPy (for e.g. reproducibility)\nyou can get per-version DOIs from the zendodo archive:\n\n.. image:: https://zenodo.org/badge/8840/bjodah/chempy.svg\n   :target: https://zenodo.org/badge/latestdoi/8840/bjodah/chempy\n   :alt: Zenodo DOI\n\nLicensing\n---------\nThe source code is Open Source and is released under the very permissive\n`\"simplified (2-clause) BSD license\" <https://opensource.org/licenses/BSD-2-Clause>`_.\nSee `LICENSE <LICENSE>`_ for further details.\n\nSee also\n--------\n- `SymPy <https://github.com/sympy/sympy>`_\n- `pyneqsys <https://github.com/bjodah/pyneqsys>`_\n- `pyodesys <https://github.com/bjodah/pyodesys>`_\n- `thermo <https://github.com/CalebBell/thermo>`_\n\nContributing\n------------\nContributors are welcome to suggest improvements at https://github.com/bjodah/chempy\n(see further details `here <CONTRIBUTING.rst>`_).\n\n\nAuthor\n------\nBj\u00f6rn I. Dahlgren, contact:\n - gmail address: bjodah", "description_content_type": "", "docs_url": "https://pythonhosted.org/chempy/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bjodah/chempy", "keywords": "chemistry,water properties,physical chemistry", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "chempy", "package_url": "https://pypi.org/project/chempy/", "platform": "", "project_url": "https://pypi.org/project/chempy/", "project_urls": {"Homepage": "https://github.com/bjodah/chempy"}, "release_url": "https://pypi.org/project/chempy/0.7.10/", "requires_dist": null, "requires_python": ">=3.6", "summary": "ChemPy is a Python package useful for solving problems in chemistry.", "version": "0.7.10", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"http://hera.physchem.kth.se:8080/bjodah/chempy\" rel=\"nofollow\"><img alt=\"Build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5cb28507e47596a5a243b7b0ddd9ff09f4ef1ab4/687474703a2f2f686572612e706879736368656d2e6b74682e73653a383038302f6170692f6261646765732f626a6f6461682f6368656d70792f7374617475732e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/chempy\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b3a4c24d3ef02ff65d103ce5c5c66517395ef853/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f6368656d70792e737667\"></a>\n<a href=\"https://www.python.org/\" rel=\"nofollow\"><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0a294d2c3f20dc678eb914cc644b9dc17e80f1bd/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e362c332e372d626c75652e737667\"></a>\n<a href=\"https://github.com/bjodah/chempy/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3700cf29afc6b19fbfc977e188899de6c88c2ec0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f6368656d70792e737667\"></a>\n<a href=\"http://hera.physchem.kth.se/~chempy/benchmarks\" rel=\"nofollow\"><img alt=\"airspeedvelocity\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c91088b668bb9aabc9b5cdf9ba1ae61a11b109e2/687474703a2f2f696d672e736869656c64732e696f2f62616467652f62656e63686d61726b656425323062792d6173762d677265656e2e7376673f7374796c653d666c6174\"></a>\n<a href=\"http://hera.physchem.kth.se/~chempy/branches/master/htmlcov\" rel=\"nofollow\"><img alt=\"coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/846ae2fe6752d12bf3d2a29a585a312c067ba089/687474703a2f2f686572612e706879736368656d2e6b74682e73652f7e6368656d70792f6272616e636865732f6d61737465722f68746d6c636f762f636f7665726167652e737667\"></a>\n<a href=\"https://doi.org/10.21105/joss.00565\" rel=\"nofollow\"><img alt=\"Journal of Open Source Software DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23ac37d0c655731f78d2ff34fea91240afe745c9/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303536352f7374617475732e737667\"></a>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#about-chempy\" id=\"id2\" rel=\"nofollow\">About ChemPy</a></li>\n<li><a href=\"#documentation\" id=\"id3\" rel=\"nofollow\">Documentation</a></li>\n<li><a href=\"#installation\" id=\"id4\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#optional-dependencies\" id=\"id5\" rel=\"nofollow\">Optional dependencies</a></li>\n<li><a href=\"#using-docker\" id=\"id6\" rel=\"nofollow\">Using Docker</a></li>\n</ul>\n</li>\n<li><a href=\"#examples\" id=\"id7\" rel=\"nofollow\">Examples</a><ul>\n<li><a href=\"#parsing-formulae\" id=\"id8\" rel=\"nofollow\">Parsing formulae</a></li>\n<li><a href=\"#balancing-stoichiometry-of-a-chemical-reaction\" id=\"id9\" rel=\"nofollow\">Balancing stoichiometry of a chemical reaction</a></li>\n<li><a href=\"#balancing-reactions\" id=\"id10\" rel=\"nofollow\">Balancing reactions</a></li>\n<li><a href=\"#working-with-units\" id=\"id11\" rel=\"nofollow\">Working with units</a></li>\n<li><a href=\"#chemical-equilibria\" id=\"id12\" rel=\"nofollow\">Chemical equilibria</a></li>\n<li><a href=\"#concepts\" id=\"id13\" rel=\"nofollow\">Concepts</a></li>\n<li><a href=\"#chemical-kinetics-system-of-ordinary-differential-equations\" id=\"id14\" rel=\"nofollow\">Chemical kinetics (system of ordinary differential equations)</a></li>\n<li><a href=\"#properties\" id=\"id15\" rel=\"nofollow\">Properties</a></li>\n<li><a href=\"#run-notebooks-using-binder\" id=\"id16\" rel=\"nofollow\">Run notebooks using binder</a></li>\n</ul>\n</li>\n<li><a href=\"#citing\" id=\"id17\" rel=\"nofollow\">Citing</a></li>\n<li><a href=\"#licensing\" id=\"id18\" rel=\"nofollow\">Licensing</a></li>\n<li><a href=\"#see-also\" id=\"id19\" rel=\"nofollow\">See also</a></li>\n<li><a href=\"#contributing\" id=\"id20\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#author\" id=\"id21\" rel=\"nofollow\">Author</a></li>\n</ul>\n</div>\n<div id=\"about-chempy\">\n<h2><a href=\"#id2\" rel=\"nofollow\">About ChemPy</a></h2>\n<p>ChemPy is a <a href=\"https://www.python.org\" rel=\"nofollow\">Python</a> package useful for\nchemistry (mainly physical/inorganic/analytical chemistry). Currently it includes:</p>\n<ul>\n<li>Numerical integration routines for chemical kinetics (ODE solver front-end)</li>\n<li>Integrated rate expressions (and convenience fitting routines)</li>\n<li>Solver for equilibria (including multiphase systems)</li>\n<li>Relations in physical chemistry:<ul>\n<li>Debye-H\u00fcckel expressions</li>\n<li>Arrhenius &amp; Eyring equation</li>\n<li>Einstein-Smoluchowski equation</li>\n</ul>\n</li>\n<li>Properties (pure python implementations from the literature)<ul>\n<li>water density as function of temperature</li>\n<li>water permittivity as function of temperature and pressure</li>\n<li>water diffusivity as function of temperature</li>\n<li>water viscosity as function of temperature</li>\n<li>sulfuric acid density as function of temperature &amp; weight fraction H\u2082SO\u2084</li>\n<li>More to come\u2026 (and contributions are most welcome!)</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"documentation\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Documentation</a></h2>\n<p>The easiest way to get started is to have a look at the examples in this README,\nand also the jupyter <a href=\"http://hera.physchem.kth.se/~chempy/branches/master/examples\" rel=\"nofollow\">notebooks</a>. In addition there is auto-generated API documentation\nfor the latest <a href=\"https://bjodah.github.io/chempy/latest\" rel=\"nofollow\">stable release here</a>\n(and <a href=\"http://hera.physchem.kth.se/~chempy/branches/master/html\" rel=\"nofollow\">here are</a> the API docs for the development version).</p>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id4\" rel=\"nofollow\">Installation</a></h2>\n<p>Simplest way to install ChemPy and its (optional) dependencies is to use the\n<a href=\"https://conda.pydata.org/docs/\" rel=\"nofollow\">conda package manager</a>:</p>\n<pre>$ conda install -c bjodah chempy pytest\n$ pytest -rs -W ignore::chempy.ChemPyDeprecationWarning --pyargs chempy\n</pre>\n<p>currently conda packages are only provided for Linux. On Windows and OS X\nyou will need to use <tt>pip</tt> instead:</p>\n<pre>$ python3 -m pip install chempy pytest\n$ python3 -m pytest -rs -W ignore::chempy.ChemPyDeprecationWarning --pyargs chempy\n</pre>\n<p>there will a few tests which will be skipped due to some missing optional\nbackends in addition to those in SciPy (used for solving systems of non-linear\nequations and ordinary differential equations).</p>\n<p>If you are still using Python 2 you can use the long-term-support 0.6.x branch\nof ChemPy which will continue to receive bugfixes:</p>\n<pre>$ python2 -m pip install \"chempy&lt;0.7\"\n</pre>\n<div id=\"optional-dependencies\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Optional dependencies</a></h3>\n<p>If you used <tt>conda</tt> to install ChemPy you can skip this section.\nBut if you use <tt>pip</tt> the default installation is achieved by writing:</p>\n<pre>$ python3 -m pip install --user --upgrade chempy pytest\n$ python3 -m pytest -rs --pyargs chempy\n</pre>\n<p>you can skip the <tt><span class=\"pre\">--user</span></tt> flag if you have got root permissions.\nYou may be interested in using additional backends (in addition to those provided by SciPy)\nfor solving ODE-systems and non-linear optimization problems:</p>\n<pre>$ python3 -m pip install chempy[all]\n</pre>\n<p>Note that this option will install the following libraries\n(some of which require additional libraries to be present on your system):</p>\n<ul>\n<li><a href=\"https://github.com/bjodah/pygslodeiv2\" rel=\"nofollow\">pygslodeiv2</a>: solving initial value problems, requires <a href=\"https://www.gnu.org/software/gsl/\" rel=\"nofollow\">GSL</a>. (&gt;=1.16).</li>\n<li><a href=\"https://github.com/bjodah/pyodeint\" rel=\"nofollow\">pyodeint</a>: solving initial value problems, requires <a href=\"http://www.boost.org/\" rel=\"nofollow\">boost</a> (&gt;=1.65.0).</li>\n<li><a href=\"https://github.com/bjodah/pycvodes\" rel=\"nofollow\">pycvodes</a>: solving initial value problems, requires <a href=\"https://computation.llnl.gov/projects/sundials\" rel=\"nofollow\">SUNDIALS</a> (&gt;=2.7.0).</li>\n<li><a href=\"https://github.com/bjodah/pykinsol\" rel=\"nofollow\">pykinsol</a>: solving non-linear root-finding, requires <a href=\"https://computation.llnl.gov/projects/sundials\" rel=\"nofollow\">SUNDIALS</a> (&gt;=2.7.0).</li>\n<li><a href=\"https://github.com/bjodah/pycompilation\" rel=\"nofollow\">pycompilation</a>: python front-end for calling compilers, requires gcc/clang/icpc.</li>\n<li><a href=\"https://github.com/bjodah/pycodeexport\" rel=\"nofollow\">pycodeexport</a>: package for code-generation, used when generating C++ code.</li>\n</ul>\n<p>if you want to see what packages need to be installed on a Debian based system you may look at this\n<a href=\"scripts/environment/Dockerfile\" rel=\"nofollow\">Dockerfile</a>.</p>\n</div>\n<div id=\"using-docker\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Using Docker</a></h3>\n<p>If you have <a href=\"https://www.docker.com\" rel=\"nofollow\">Docker</a> installed, you may use it to host a jupyter\nnotebook server:</p>\n<pre>$ ./scripts/host-jupyter-using-docker.sh . 8888\n</pre>\n<p>the first time you run the command, some dependencies will be downloaded. When the installation\nis complete there will be a link visible which you can open in your browser. You can also run\nthe test suite using the same docker-image:</p>\n<pre>$ ./scripts/host-jupyter-using-docker.sh . 0\n</pre>\n<p>there will be a few skipped test (due to some dependencies not being installed by default) and\nquite a few warnings.</p>\n</div>\n</div>\n<div id=\"examples\">\n<h2><a href=\"#id7\" rel=\"nofollow\">Examples</a></h2>\n<p>See demonstration scripts in <a href=\"https://github.com/bjodah/chempy/tree/master/examples\" rel=\"nofollow\">examples/</a>,\nand some rendered jupyter <a href=\"http://hera.physchem.kth.se/~chempy/branches/master/examples\" rel=\"nofollow\">notebooks</a>.\nYou may also browse the documentation for more examples. Below you will find a few code snippets:</p>\n<div id=\"parsing-formulae\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Parsing formulae</a></h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">Substance</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ferricyanide</span> <span class=\"o\">=</span> <span class=\"n\">Substance</span><span class=\"o\">.</span><span class=\"n\">from_formula</span><span class=\"p\">(</span><span class=\"s1\">'Fe(CN)6-3'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ferricyanide</span><span class=\"o\">.</span><span class=\"n\">composition</span> <span class=\"o\">==</span> <span class=\"p\">{</span><span class=\"mi\">0</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">26</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">}</span>  <span class=\"c1\"># 0 for charge</span>\n<span class=\"kc\">True</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ferricyanide</span><span class=\"o\">.</span><span class=\"n\">unicode_name</span><span class=\"p\">)</span>\n<span class=\"n\">Fe</span><span class=\"p\">(</span><span class=\"n\">CN</span><span class=\"p\">)</span><span class=\"err\">\u2086\u00b3\u207b</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ferricyanide</span><span class=\"o\">.</span><span class=\"n\">latex_name</span> <span class=\"o\">+</span> <span class=\"s2\">\", \"</span> <span class=\"o\">+</span> <span class=\"n\">ferricyanide</span><span class=\"o\">.</span><span class=\"n\">html_name</span><span class=\"p\">)</span>\n<span class=\"n\">Fe</span><span class=\"p\">(</span><span class=\"n\">CN</span><span class=\"p\">)</span><span class=\"n\">_</span><span class=\"p\">{</span><span class=\"mi\">6</span><span class=\"p\">}</span><span class=\"o\">^</span><span class=\"p\">{</span><span class=\"mi\">3</span><span class=\"o\">-</span><span class=\"p\">},</span> <span class=\"n\">Fe</span><span class=\"p\">(</span><span class=\"n\">CN</span><span class=\"p\">)</span><span class=\"o\">&lt;</span><span class=\"n\">sub</span><span class=\"o\">&gt;</span><span class=\"mi\">6</span><span class=\"o\">&lt;/</span><span class=\"n\">sub</span><span class=\"o\">&gt;&lt;</span><span class=\"n\">sup</span><span class=\"o\">&gt;</span><span class=\"mi\">3</span><span class=\"o\">-&lt;/</span><span class=\"n\">sup</span><span class=\"o\">&gt;</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%.3f</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">ferricyanide</span><span class=\"o\">.</span><span class=\"n\">mass</span><span class=\"p\">)</span>\n<span class=\"mf\">211.955</span>\n</pre>\n<p>as you see, in composition, the atomic numbers (and 0 for charge) is used as\nkeys and the count of each kind became respective value.</p>\n</div>\n<div id=\"balancing-stoichiometry-of-a-chemical-reaction\">\n<h3><a href=\"#id9\" rel=\"nofollow\">Balancing stoichiometry of a chemical reaction</a></h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">balance_stoichiometry</span>  <span class=\"c1\"># Main reaction in NASA's booster rockets:</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">reac</span><span class=\"p\">,</span> <span class=\"n\">prod</span> <span class=\"o\">=</span> <span class=\"n\">balance_stoichiometry</span><span class=\"p\">({</span><span class=\"s1\">'NH4ClO4'</span><span class=\"p\">,</span> <span class=\"s1\">'Al'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'Al2O3'</span><span class=\"p\">,</span> <span class=\"s1\">'HCl'</span><span class=\"p\">,</span> <span class=\"s1\">'H2O'</span><span class=\"p\">,</span> <span class=\"s1\">'N2'</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pprint</span> <span class=\"kn\">import</span> <span class=\"n\">pprint</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">reac</span><span class=\"p\">))</span>\n<span class=\"p\">{</span><span class=\"s1\">'Al'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'NH4ClO4'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">(</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">prod</span><span class=\"p\">))</span>\n<span class=\"p\">{</span><span class=\"s1\">'Al2O3'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"s1\">'HCl'</span><span class=\"p\">:</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"s1\">'N2'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">mass_fractions</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">fractions</span> <span class=\"ow\">in</span> <span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"n\">mass_fractions</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">reac</span><span class=\"p\">,</span> <span class=\"n\">prod</span><span class=\"p\">]):</span>\n<span class=\"o\">...</span>     <span class=\"n\">pprint</span><span class=\"p\">({</span><span class=\"n\">k</span><span class=\"p\">:</span> <span class=\"s1\">'</span><span class=\"si\">{0:.3g}</span><span class=\"s1\"> wt%'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">v</span><span class=\"o\">*</span><span class=\"mi\">100</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">k</span><span class=\"p\">,</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">fractions</span><span class=\"o\">.</span><span class=\"n\">items</span><span class=\"p\">()})</span>\n<span class=\"o\">...</span>\n<span class=\"p\">{</span><span class=\"s1\">'Al'</span><span class=\"p\">:</span> <span class=\"s1\">'27.7 wt%'</span><span class=\"p\">,</span> <span class=\"s1\">'NH4ClO4'</span><span class=\"p\">:</span> <span class=\"s1\">'72.3 wt%'</span><span class=\"p\">}</span>\n<span class=\"p\">{</span><span class=\"s1\">'Al2O3'</span><span class=\"p\">:</span> <span class=\"s1\">'52.3 wt%'</span><span class=\"p\">,</span> <span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"s1\">'16.6 wt%'</span><span class=\"p\">,</span> <span class=\"s1\">'HCl'</span><span class=\"p\">:</span> <span class=\"s1\">'22.4 wt%'</span><span class=\"p\">,</span> <span class=\"s1\">'N2'</span><span class=\"p\">:</span> <span class=\"s1\">'8.62 wt%'</span><span class=\"p\">}</span>\n</pre>\n<p>ChemPy can also balance reactions where the reacting species are more complex and\nare better described in other terms than their molecular formula. A silly, yet\nillustrative example would be how to make pancakes without any partially used packages:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">substances</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">s</span> <span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"p\">[</span>\n<span class=\"o\">...</span>     <span class=\"n\">Substance</span><span class=\"p\">(</span><span class=\"s1\">'pancake'</span><span class=\"p\">,</span> <span class=\"n\">composition</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">eggs</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">spoons_of_flour</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">cups_of_milk</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Substance</span><span class=\"p\">(</span><span class=\"s1\">'eggs_6pack'</span><span class=\"p\">,</span> <span class=\"n\">composition</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">eggs</span><span class=\"o\">=</span><span class=\"mi\">6</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Substance</span><span class=\"p\">(</span><span class=\"s1\">'milk_carton'</span><span class=\"p\">,</span> <span class=\"n\">composition</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">cups_of_milk</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)),</span>\n<span class=\"o\">...</span>     <span class=\"n\">Substance</span><span class=\"p\">(</span><span class=\"s1\">'flour_bag'</span><span class=\"p\">,</span> <span class=\"n\">composition</span><span class=\"o\">=</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">spoons_of_flour</span><span class=\"o\">=</span><span class=\"mi\">60</span><span class=\"p\">))</span>\n<span class=\"o\">...</span> <span class=\"p\">]}</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">([</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">balance_stoichiometry</span><span class=\"p\">({</span><span class=\"s1\">'eggs_6pack'</span><span class=\"p\">,</span> <span class=\"s1\">'milk_carton'</span><span class=\"p\">,</span> <span class=\"s1\">'flour_bag'</span><span class=\"p\">},</span>\n<span class=\"o\">...</span>                                                <span class=\"p\">{</span><span class=\"s1\">'pancake'</span><span class=\"p\">},</span> <span class=\"n\">substances</span><span class=\"o\">=</span><span class=\"n\">substances</span><span class=\"p\">)])</span>\n<span class=\"p\">[{</span><span class=\"s1\">'eggs_6pack'</span><span class=\"p\">:</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"s1\">'flour_bag'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'milk_carton'</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'pancake'</span><span class=\"p\">:</span> <span class=\"mi\">60</span><span class=\"p\">}]</span>\n</pre>\n<p>ChemPy can even handle reactions with linear dependencies (underdetermined systems), e.g.:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">([</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">balance_stoichiometry</span><span class=\"p\">({</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'O2'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'CO2'</span><span class=\"p\">,</span> <span class=\"s1\">'CO'</span><span class=\"p\">})])</span>  <span class=\"c1\"># doctest: +SKIP</span>\n<span class=\"p\">[{</span><span class=\"s1\">'C'</span><span class=\"p\">:</span> <span class=\"n\">x1</span> <span class=\"o\">+</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'O2'</span><span class=\"p\">:</span> <span class=\"n\">x1</span> <span class=\"o\">+</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'CO'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'CO2'</span><span class=\"p\">:</span> <span class=\"n\">x1</span><span class=\"p\">}]</span>\n</pre>\n<p>the <tt>x1</tt> object above is an instance of SymPy\u2019s <a href=\"http://docs.sympy.org/latest/modules/core.html#sympy.core.symbol.Symbol\" rel=\"nofollow\">Symbol</a>. If we prefer to get a solution\nwith minimal (non-zero) integer coefficients we can pass <tt>underdetermined=None</tt>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pprint</span><span class=\"p\">([</span><span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"n\">_</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"n\">balance_stoichiometry</span><span class=\"p\">({</span><span class=\"s1\">'C'</span><span class=\"p\">,</span> <span class=\"s1\">'O2'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'CO2'</span><span class=\"p\">,</span> <span class=\"s1\">'CO'</span><span class=\"p\">},</span> <span class=\"n\">underdetermined</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">)])</span>\n<span class=\"p\">[{</span><span class=\"s1\">'C'</span><span class=\"p\">:</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"s1\">'O2'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'CO'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'CO2'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">}]</span>\n</pre>\n<p>note however that even though this solution is in some sense \u201ccanonical\u201d,\nit is merely one of an inifite number of solutions (<tt>x1</tt> from earlier may be any integer).</p>\n</div>\n<div id=\"balancing-reactions\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Balancing reactions</a></h3>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">Equilibrium</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">sympy</span> <span class=\"kn\">import</span> <span class=\"n\">symbols</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">K1</span><span class=\"p\">,</span> <span class=\"n\">K2</span><span class=\"p\">,</span> <span class=\"n\">Kw</span> <span class=\"o\">=</span> <span class=\"n\">symbols</span><span class=\"p\">(</span><span class=\"s1\">'K1 K2 Kw'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">e1</span> <span class=\"o\">=</span> <span class=\"n\">Equilibrium</span><span class=\"p\">({</span><span class=\"s1\">'MnO4-'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'H+'</span><span class=\"p\">:</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"s1\">'e-'</span><span class=\"p\">:</span> <span class=\"mi\">5</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'Mn+2'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">},</span> <span class=\"n\">K1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">e2</span> <span class=\"o\">=</span> <span class=\"n\">Equilibrium</span><span class=\"p\">({</span><span class=\"s1\">'O2'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"s1\">'e-'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'OH-'</span><span class=\"p\">:</span> <span class=\"mi\">4</span><span class=\"p\">},</span> <span class=\"n\">K2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">coeff</span> <span class=\"o\">=</span> <span class=\"n\">Equilibrium</span><span class=\"o\">.</span><span class=\"n\">eliminate</span><span class=\"p\">([</span><span class=\"n\">e1</span><span class=\"p\">,</span> <span class=\"n\">e2</span><span class=\"p\">],</span> <span class=\"s1\">'e-'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">coeff</span>\n<span class=\"p\">[</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"o\">-</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">redox</span> <span class=\"o\">=</span> <span class=\"n\">e1</span><span class=\"o\">*</span><span class=\"n\">coeff</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"n\">e2</span><span class=\"o\">*</span><span class=\"n\">coeff</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">redox</span><span class=\"p\">)</span>\n<span class=\"mi\">32</span> <span class=\"n\">H</span><span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"mi\">4</span> <span class=\"n\">MnO4</span><span class=\"o\">-</span> <span class=\"o\">+</span> <span class=\"mi\">20</span> <span class=\"n\">OH</span><span class=\"o\">-</span> <span class=\"o\">=</span> <span class=\"mi\">26</span> <span class=\"n\">H2O</span> <span class=\"o\">+</span> <span class=\"mi\">4</span> <span class=\"n\">Mn</span><span class=\"o\">+</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">5</span> <span class=\"n\">O2</span><span class=\"p\">;</span> <span class=\"n\">K1</span><span class=\"o\">**</span><span class=\"mi\">4</span><span class=\"o\">/</span><span class=\"n\">K2</span><span class=\"o\">**</span><span class=\"mi\">5</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">autoprot</span> <span class=\"o\">=</span> <span class=\"n\">Equilibrium</span><span class=\"p\">({</span><span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'H+'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'OH-'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">},</span> <span class=\"n\">Kw</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"n\">redox</span><span class=\"o\">.</span><span class=\"n\">cancel</span><span class=\"p\">(</span><span class=\"n\">autoprot</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">n</span>\n<span class=\"mi\">20</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">redox2</span> <span class=\"o\">=</span> <span class=\"n\">redox</span> <span class=\"o\">+</span> <span class=\"n\">n</span><span class=\"o\">*</span><span class=\"n\">autoprot</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">redox2</span><span class=\"p\">)</span>\n<span class=\"mi\">12</span> <span class=\"n\">H</span><span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"mi\">4</span> <span class=\"n\">MnO4</span><span class=\"o\">-</span> <span class=\"o\">=</span> <span class=\"mi\">6</span> <span class=\"n\">H2O</span> <span class=\"o\">+</span> <span class=\"mi\">4</span> <span class=\"n\">Mn</span><span class=\"o\">+</span><span class=\"mi\">2</span> <span class=\"o\">+</span> <span class=\"mi\">5</span> <span class=\"n\">O2</span><span class=\"p\">;</span> <span class=\"n\">K1</span><span class=\"o\">**</span><span class=\"mi\">4</span><span class=\"o\">*</span><span class=\"n\">Kw</span><span class=\"o\">**</span><span class=\"mi\">20</span><span class=\"o\">/</span><span class=\"n\">K2</span><span class=\"o\">**</span><span class=\"mi\">5</span>\n</pre>\n</div>\n<div id=\"working-with-units\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Working with units</a></h3>\n<p>Functions and objects useful\nfor working with units are available from the <tt>chempy.units</tt> module. Here is an\nexample of how ChemPy can check consistency of units:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">Reaction</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Reaction</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">\"H2O -&gt; H+ + OH-; 1e-4/M/s\"</span><span class=\"p\">)</span>\n<span class=\"n\">Traceback</span> <span class=\"p\">(</span><span class=\"n\">most</span> <span class=\"n\">recent</span> <span class=\"n\">call</span> <span class=\"n\">last</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>\n<span class=\"ne\">ValueError</span><span class=\"p\">:</span> <span class=\"n\">Unable</span> <span class=\"n\">to</span> <span class=\"n\">convert</span> <span class=\"n\">between</span> <span class=\"n\">units</span> <span class=\"n\">of</span> <span class=\"s2\">\"1/M\"</span> <span class=\"ow\">and</span> <span class=\"s2\">\"dimensionless\"</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">Reaction</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">\"H2O -&gt; H+ + OH-; 1e-4/s\"</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.units</span> <span class=\"kn\">import</span> <span class=\"n\">to_unitless</span><span class=\"p\">,</span> <span class=\"n\">default_units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">to_unitless</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">minute</span><span class=\"p\">)</span>\n<span class=\"mf\">0.006</span>\n</pre>\n<p>right now the <tt>.units</tt> module wraps the <a href=\"http://python-quantities.readthedocs.io/en/latest/\" rel=\"nofollow\">quantities</a> package with some minor\nadditions and work-arounds. However, there is no guarantee that the underlying\npackage will not change in a future version of ChemPy (there are many packages\nfor dealing with units in the scientific Python ecosystem).</p>\n</div>\n<div id=\"chemical-equilibria\">\n<h3><a href=\"#id12\" rel=\"nofollow\">Chemical equilibria</a></h3>\n<p>If we want to predict pH of a bicarbonate solution we simply just need pKa and pKw values:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.equilibria</span> <span class=\"kn\">import</span> <span class=\"n\">EqSystem</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">eqsys</span> <span class=\"o\">=</span> <span class=\"n\">EqSystem</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"HCO3- = H+ + CO3-2; 10**-10.3\n... H2CO3 = H+ + HCO3-; 10**-6.3\n... H2O = H+ + OH-; 10**-14/55.4\n... \"\"\"</span><span class=\"p\">)</span>  <span class=\"c1\"># pKa1(H2CO3) = 6.3 (implicitly incl. CO2(aq)), pKa2=10.3 &amp; pKw=14</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">arr</span><span class=\"p\">,</span> <span class=\"n\">info</span><span class=\"p\">,</span> <span class=\"n\">sane</span> <span class=\"o\">=</span> <span class=\"n\">eqsys</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">(</span><span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mf\">55.4</span><span class=\"p\">,</span> <span class=\"s1\">'HCO3-'</span><span class=\"p\">:</span> <span class=\"mf\">1e-2</span><span class=\"p\">}))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">conc</span> <span class=\"o\">=</span> <span class=\"nb\">dict</span><span class=\"p\">(</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"n\">eqsys</span><span class=\"o\">.</span><span class=\"n\">substances</span><span class=\"p\">,</span> <span class=\"n\">arr</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">math</span> <span class=\"kn\">import</span> <span class=\"n\">log10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"pH: </span><span class=\"si\">%.2f</span><span class=\"s2\">\"</span> <span class=\"o\">%</span> <span class=\"o\">-</span><span class=\"n\">log10</span><span class=\"p\">(</span><span class=\"n\">conc</span><span class=\"p\">[</span><span class=\"s1\">'H+'</span><span class=\"p\">]))</span>\n<span class=\"n\">pH</span><span class=\"p\">:</span> <span class=\"mf\">8.30</span>\n</pre>\n<p>here is another example for ammonia:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">Equilibrium</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.chemistry</span> <span class=\"kn\">import</span> <span class=\"n\">Species</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">water_autop</span> <span class=\"o\">=</span> <span class=\"n\">Equilibrium</span><span class=\"p\">({</span><span class=\"s1\">'H2O'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'H+'</span><span class=\"p\">,</span> <span class=\"s1\">'OH-'</span><span class=\"p\">},</span> <span class=\"mi\">10</span><span class=\"o\">**-</span><span class=\"mi\">14</span><span class=\"p\">)</span>  <span class=\"c1\"># unit \"molar\" assumed</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ammonia_prot</span> <span class=\"o\">=</span> <span class=\"n\">Equilibrium</span><span class=\"p\">({</span><span class=\"s1\">'NH4+'</span><span class=\"p\">},</span> <span class=\"p\">{</span><span class=\"s1\">'NH3'</span><span class=\"p\">,</span> <span class=\"s1\">'H+'</span><span class=\"p\">},</span> <span class=\"mi\">10</span><span class=\"o\">**-</span><span class=\"mf\">9.24</span><span class=\"p\">)</span>  <span class=\"c1\"># same here</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">substances</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Species</span><span class=\"o\">.</span><span class=\"n\">from_formula</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">f</span> <span class=\"ow\">in</span> <span class=\"s1\">'H2O OH- H+ NH3 NH4+'</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">()]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">eqsys</span> <span class=\"o\">=</span> <span class=\"n\">EqSystem</span><span class=\"p\">([</span><span class=\"n\">water_autop</span><span class=\"p\">,</span> <span class=\"n\">ammonia_prot</span><span class=\"p\">],</span> <span class=\"n\">substances</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"nb\">map</span><span class=\"p\">(</span><span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">eqsys</span><span class=\"o\">.</span><span class=\"n\">rxns</span><span class=\"p\">)))</span>  <span class=\"c1\"># \"rxns\" short for \"reactions\"</span>\n<span class=\"n\">H2O</span> <span class=\"o\">=</span> <span class=\"n\">H</span><span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"n\">OH</span><span class=\"o\">-</span><span class=\"p\">;</span> <span class=\"mf\">1e-14</span>\n<span class=\"n\">NH4</span><span class=\"o\">+</span> <span class=\"o\">=</span> <span class=\"n\">H</span><span class=\"o\">+</span> <span class=\"o\">+</span> <span class=\"n\">NH3</span><span class=\"p\">;</span> <span class=\"mf\">5.75e-10</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">init_conc</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"s1\">'NH3'</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">sol</span><span class=\"p\">,</span> <span class=\"n\">sane</span> <span class=\"o\">=</span> <span class=\"n\">eqsys</span><span class=\"o\">.</span><span class=\"n\">root</span><span class=\"p\">(</span><span class=\"n\">init_conc</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">assert</span> <span class=\"n\">sol</span><span class=\"p\">[</span><span class=\"s1\">'success'</span><span class=\"p\">]</span> <span class=\"ow\">and</span> <span class=\"n\">sane</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">', '</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%.2g</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">v</span> <span class=\"k\">for</span> <span class=\"n\">v</span> <span class=\"ow\">in</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n<span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mf\">0.0013</span><span class=\"p\">,</span> <span class=\"mf\">7.6e-12</span><span class=\"p\">,</span> <span class=\"mf\">0.099</span><span class=\"p\">,</span> <span class=\"mf\">0.0013</span>\n</pre>\n</div>\n<div id=\"concepts\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Concepts</a></h3>\n<p>ChemPy collects equations and utility functions for working with\nconcepts such as <a href=\"https://en.wikipedia.org/wiki/Ionic_strength\" rel=\"nofollow\">ionic strength</a>:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.electrolytes</span> <span class=\"kn\">import</span> <span class=\"n\">ionic_strength</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ionic_strength</span><span class=\"p\">({</span><span class=\"s1\">'Fe+3'</span><span class=\"p\">:</span> <span class=\"mf\">0.050</span><span class=\"p\">,</span> <span class=\"s1\">'ClO4-'</span><span class=\"p\">:</span> <span class=\"mf\">0.150</span><span class=\"p\">})</span> <span class=\"o\">==</span> <span class=\"o\">.</span><span class=\"mi\">3</span>\n<span class=\"kc\">True</span>\n</pre>\n<p>note how ChemPy parsed the charges from the names of the substances. There are\nalso e.g. empirical equations and convenience classes for them available, e.g.:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.henry</span> <span class=\"kn\">import</span> <span class=\"n\">Henry</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">kH_O2</span> <span class=\"o\">=</span> <span class=\"n\">Henry</span><span class=\"p\">(</span><span class=\"mf\">1.2e-3</span><span class=\"p\">,</span> <span class=\"mi\">1800</span><span class=\"p\">,</span> <span class=\"n\">ref</span><span class=\"o\">=</span><span class=\"s1\">'carpenter_1966'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'</span><span class=\"si\">%.1e</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"n\">kH_O2</span><span class=\"p\">(</span><span class=\"mf\">298.15</span><span class=\"p\">))</span>\n<span class=\"mf\">1.2e-03</span>\n</pre>\n<p>to get more information about e.g. this class, you may can look at the <a href=\"https://bjodah.github.io/chempy/latest/chempy.html#module-chempy.henry\" rel=\"nofollow\">API documentation</a>.</p>\n</div>\n<div id=\"chemical-kinetics-system-of-ordinary-differential-equations\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Chemical kinetics (system of ordinary differential equations)</a></h3>\n<p>A common task when modelling problems in chemistry is to investigate the time dependence\nof a system. This branch of study is known as\n<a href=\"https://en.wikipedia.org/wiki/Chemical_kinetics\" rel=\"nofollow\">chemical kinetics</a>, and ChemPy has\nsome classes and functions for working with such problems:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">ReactionSystem</span>  <span class=\"c1\"># The rate constants below are arbitrary</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">rsys</span> <span class=\"o\">=</span> <span class=\"n\">ReactionSystem</span><span class=\"o\">.</span><span class=\"n\">from_string</span><span class=\"p\">(</span><span class=\"s2\">\"\"\"2 Fe+2 + H2O2 -&gt; 2 Fe+3 + 2 OH-; 42\n...     2 Fe+3 + H2O2 -&gt; 2 Fe+2 + O2 + 2 H+; 17\n...     H+ + OH- -&gt; H2O; 1e10\n...     H2O -&gt; H+ + OH-; 1e-4\"\"\"</span><span class=\"p\">)</span>  <span class=\"c1\"># \"[H2O]\" = 1.0 (actually 55.4 at RT)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.kinetics.ode</span> <span class=\"kn\">import</span> <span class=\"n\">get_odesys</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">odesys</span><span class=\"p\">,</span> <span class=\"n\">extra</span> <span class=\"o\">=</span> <span class=\"n\">get_odesys</span><span class=\"p\">(</span><span class=\"n\">rsys</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">defaultdict</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tout</span> <span class=\"o\">=</span> <span class=\"nb\">sorted</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">concatenate</span><span class=\"p\">((</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">23</span><span class=\"p\">),</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">logspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">c0</span> <span class=\"o\">=</span> <span class=\"n\">defaultdict</span><span class=\"p\">(</span><span class=\"nb\">float</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"s1\">'Fe+2'</span><span class=\"p\">:</span> <span class=\"mf\">0.05</span><span class=\"p\">,</span> <span class=\"s1\">'H2O2'</span><span class=\"p\">:</span> <span class=\"mf\">0.1</span><span class=\"p\">,</span> <span class=\"s1\">'H2O'</span><span class=\"p\">:</span> <span class=\"mf\">1.0</span><span class=\"p\">,</span> <span class=\"s1\">'H+'</span><span class=\"p\">:</span> <span class=\"mf\">1e-2</span><span class=\"p\">,</span> <span class=\"s1\">'OH-'</span><span class=\"p\">:</span> <span class=\"mf\">1e-12</span><span class=\"p\">})</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">result</span> <span class=\"o\">=</span> <span class=\"n\">odesys</span><span class=\"o\">.</span><span class=\"n\">integrate</span><span class=\"p\">(</span><span class=\"n\">tout</span><span class=\"p\">,</span> <span class=\"n\">c0</span><span class=\"p\">,</span> <span class=\"n\">atol</span><span class=\"o\">=</span><span class=\"mf\">1e-12</span><span class=\"p\">,</span> <span class=\"n\">rtol</span><span class=\"o\">=</span><span class=\"mf\">1e-14</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">axes</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">ax</span> <span class=\"ow\">in</span> <span class=\"n\">axes</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">result</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">names</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"n\">k</span> <span class=\"k\">for</span> <span class=\"n\">k</span> <span class=\"ow\">in</span> <span class=\"n\">rsys</span><span class=\"o\">.</span><span class=\"n\">substances</span> <span class=\"k\">if</span> <span class=\"n\">k</span> <span class=\"o\">!=</span> <span class=\"s1\">'H2O'</span><span class=\"p\">],</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">ax</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">legend</span><span class=\"p\">(</span><span class=\"n\">loc</span><span class=\"o\">=</span><span class=\"s1\">'best'</span><span class=\"p\">,</span> <span class=\"n\">prop</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'size'</span><span class=\"p\">:</span> <span class=\"mi\">9</span><span class=\"p\">})</span>\n<span class=\"o\">...</span>     <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">'Time'</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"s1\">'Concentration'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_ylim</span><span class=\"p\">([</span><span class=\"mf\">1e-13</span><span class=\"p\">,</span> <span class=\"mf\">1e-1</span><span class=\"p\">])</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xscale</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">axes</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_yscale</span><span class=\"p\">(</span><span class=\"s1\">'log'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">tight_layout</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">fig</span><span class=\"o\">.</span><span class=\"n\">savefig</span><span class=\"p\">(</span><span class=\"s1\">'examples/kinetics.png'</span><span class=\"p\">,</span> <span class=\"n\">dpi</span><span class=\"o\">=</span><span class=\"mi\">72</span><span class=\"p\">)</span>\n</pre>\n<img alt=\"https://raw.githubusercontent.com/bjodah/chempy/master/examples/kinetics.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a2d24f48e5cf34b05fe665c3fc3659c17fc19dc/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f626a6f6461682f6368656d70792f6d61737465722f6578616d706c65732f6b696e65746963732e706e67\">\n</div>\n<div id=\"properties\">\n<h3><a href=\"#id15\" rel=\"nofollow\">Properties</a></h3>\n<p>One of the fundamental tasks in science is the careful collection of data about the world\naround us. ChemPy contains a growing collection of parametrizations from the scientific\nliterature with relevance in chemistry. Here is how you use one of these formulations:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy</span> <span class=\"kn\">import</span> <span class=\"n\">Substance</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.properties.water_density_tanaka_2001</span> <span class=\"kn\">import</span> <span class=\"n\">water_density</span> <span class=\"k\">as</span> <span class=\"n\">rho</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">chempy.units</span> <span class=\"kn\">import</span> <span class=\"n\">to_unitless</span><span class=\"p\">,</span> <span class=\"n\">default_units</span> <span class=\"k\">as</span> <span class=\"n\">u</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">water</span> <span class=\"o\">=</span> <span class=\"n\">Substance</span><span class=\"o\">.</span><span class=\"n\">from_formula</span><span class=\"p\">(</span><span class=\"s1\">'H2O'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">T_C</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">,</span> <span class=\"mi\">25</span><span class=\"p\">,</span> <span class=\"mi\">35</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">concentration_H2O</span> <span class=\"o\">=</span> <span class=\"n\">rho</span><span class=\"p\">(</span><span class=\"n\">T</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"mf\">273.15</span> <span class=\"o\">+</span> <span class=\"n\">T_C</span><span class=\"p\">)</span><span class=\"o\">*</span><span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">kelvin</span><span class=\"p\">,</span> <span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"p\">)</span><span class=\"o\">/</span><span class=\"n\">water</span><span class=\"o\">.</span><span class=\"n\">molar_mass</span><span class=\"p\">(</span><span class=\"n\">units</span><span class=\"o\">=</span><span class=\"n\">u</span><span class=\"p\">)</span>\n<span class=\"o\">...</span>     <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'[H2O] = </span><span class=\"si\">%.2f</span><span class=\"s1\"> M (at </span><span class=\"si\">%d</span><span class=\"s1\"> \u00b0C)'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">to_unitless</span><span class=\"p\">(</span><span class=\"n\">concentration_H2O</span><span class=\"p\">,</span> <span class=\"n\">u</span><span class=\"o\">.</span><span class=\"n\">molar</span><span class=\"p\">),</span> <span class=\"n\">T_C</span><span class=\"p\">))</span>\n<span class=\"o\">...</span>\n<span class=\"p\">[</span><span class=\"n\">H2O</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">55.46</span> <span class=\"n\">M</span> <span class=\"p\">(</span><span class=\"n\">at</span> <span class=\"mi\">15</span> <span class=\"err\">\u00b0</span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">H2O</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">55.35</span> <span class=\"n\">M</span> <span class=\"p\">(</span><span class=\"n\">at</span> <span class=\"mi\">25</span> <span class=\"err\">\u00b0</span><span class=\"n\">C</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"n\">H2O</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mf\">55.18</span> <span class=\"n\">M</span> <span class=\"p\">(</span><span class=\"n\">at</span> <span class=\"mi\">35</span> <span class=\"err\">\u00b0</span><span class=\"n\">C</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"run-notebooks-using-binder\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Run notebooks using binder</a></h3>\n<p>Using only a web-browser (and an internet connection) it is possible to explore the\nnotebooks here: (by the courtesy of the people behind mybinder)</p>\n<a href=\"https://mybinder.org/v2/gh/bjodah/chempy/v0.6.6?filepath=index.ipynb\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2fc4d785962e064a2e013c6bf57d9b39101a123d/687474703a2f2f6d7962696e6465722e6f72672f62616467652e737667\"></a>\n</div>\n</div>\n<div id=\"citing\">\n<h2><a href=\"#id17\" rel=\"nofollow\">Citing</a></h2>\n<p>If you make use of ChemPy in e.g. academic work you may cite the following peer-reviewed publication:</p>\n<a href=\"https://doi.org/10.21105/joss.00565\" rel=\"nofollow\"><img alt=\"Journal of Open Source Software DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/23ac37d0c655731f78d2ff34fea91240afe745c9/687474703a2f2f6a6f73732e7468656f6a2e6f72672f7061706572732f31302e32313130352f6a6f73732e30303536352f7374617475732e737667\"></a>\n<p>Depending on what underlying solver you are using you should also cite the appropriate paper\n(you can look at the list of references in the JOSS article). If you need to reference,\nin addition to the paper, a specific point version of ChemPy (for e.g. reproducibility)\nyou can get per-version DOIs from the zendodo archive:</p>\n<a href=\"https://zenodo.org/badge/latestdoi/8840/bjodah/chempy\" rel=\"nofollow\"><img alt=\"Zenodo DOI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4487e3ac473f238885398035686dd33f763ea1bf/68747470733a2f2f7a656e6f646f2e6f72672f62616467652f383834302f626a6f6461682f6368656d70792e737667\"></a>\n</div>\n<div id=\"licensing\">\n<h2><a href=\"#id18\" rel=\"nofollow\">Licensing</a></h2>\n<p>The source code is Open Source and is released under the very permissive\n<a href=\"https://opensource.org/licenses/BSD-2-Clause\" rel=\"nofollow\">\u201csimplified (2-clause) BSD license\u201d</a>.\nSee <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> for further details.</p>\n</div>\n<div id=\"see-also\">\n<h2><a href=\"#id19\" rel=\"nofollow\">See also</a></h2>\n<ul>\n<li><a href=\"https://github.com/sympy/sympy\" rel=\"nofollow\">SymPy</a></li>\n<li><a href=\"https://github.com/bjodah/pyneqsys\" rel=\"nofollow\">pyneqsys</a></li>\n<li><a href=\"https://github.com/bjodah/pyodesys\" rel=\"nofollow\">pyodesys</a></li>\n<li><a href=\"https://github.com/CalebBell/thermo\" rel=\"nofollow\">thermo</a></li>\n</ul>\n</div>\n<div id=\"contributing\">\n<h2><a href=\"#id20\" rel=\"nofollow\">Contributing</a></h2>\n<p>Contributors are welcome to suggest improvements at <a href=\"https://github.com/bjodah/chempy\" rel=\"nofollow\">https://github.com/bjodah/chempy</a>\n(see further details <a href=\"CONTRIBUTING.rst\" rel=\"nofollow\">here</a>).</p>\n</div>\n<div id=\"author\">\n<h2><a href=\"#id21\" rel=\"nofollow\">Author</a></h2>\n<dl>\n<dt>Bj\u00f6rn I. Dahlgren, contact:</dt>\n<dd><ul>\n<li>gmail address: bjodah</li>\n</ul>\n</dd>\n</dl>\n</div>\n\n          </div>"}, "last_serial": 6743857, "releases": {"0.0.0": [], "0.1.0": [{"comment_text": "", "digests": {"md5": "8d9e73a3b09aa402f4812aa99cb5ac5c", "sha256": "4bf87aae8ff65c99dc3a2eab7153b26814b50b3a676594a3ae285df4dce4b6de"}, "downloads": -1, "filename": "chempy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8d9e73a3b09aa402f4812aa99cb5ac5c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19530, "upload_time": "2015-10-06T12:57:52", "upload_time_iso_8601": "2015-10-06T12:57:52.306795Z", "url": "https://files.pythonhosted.org/packages/a7/23/d81d76e67e60111d716f1685fffddd932380e0db42210fd55b98c3d195a7/chempy-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "1eceb052b114ce187422624576e8f743", "sha256": "217b428bb80c0a05c1c557c4cf1cac991c1cec176064758173ccf513edd461f4"}, "downloads": -1, "filename": "chempy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "1eceb052b114ce187422624576e8f743", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38971, "upload_time": "2016-01-26T15:06:47", "upload_time_iso_8601": "2016-01-26T15:06:47.176982Z", "url": "https://files.pythonhosted.org/packages/11/ef/c27ce5640c2a7687835999abd3b9453e43c09573e2a1cba7a86c0d414cc1/chempy-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "ceef76861100afdb5dc191bf0d654397", "sha256": "d4964fc63226b2f41c0ad7763b36d8129df8ea25367788a731928cf57116fac5"}, "downloads": -1, "filename": "chempy-0.3.0.tar.gz", "has_sig": false, "md5_digest": "ceef76861100afdb5dc191bf0d654397", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46897, "upload_time": "2016-02-11T18:22:10", "upload_time_iso_8601": "2016-02-11T18:22:10.919191Z", "url": "https://files.pythonhosted.org/packages/be/c9/b263a79f81a46e5a8278db6575a4e23904a5644796d330ff212cca27b7b5/chempy-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "bcbf2bf984e7830a9a2923b05b91128b", "sha256": "e1b9be97c5cb32562140607efd95ed44f5f02976b513c1aba599adb9522dd72b"}, "downloads": -1, "filename": "chempy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "bcbf2bf984e7830a9a2923b05b91128b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 54048, "upload_time": "2016-02-18T10:34:40", "upload_time_iso_8601": "2016-02-18T10:34:40.832132Z", "url": "https://files.pythonhosted.org/packages/28/ba/2c30e7636dc742cd09c64147623279f7c8ce7b31cfbfce484ebc107c0c87/chempy-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "105ee8384e4653b28d8e25e8683cec43", "sha256": "bf2aa16ea6a4f0d11fa6c0fbf64f71a7fd5731e012402f6c8f2b9179223527de"}, "downloads": -1, "filename": "chempy-0.3.2.tar.gz", "has_sig": false, "md5_digest": "105ee8384e4653b28d8e25e8683cec43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56940, "upload_time": "2016-03-23T12:55:59", "upload_time_iso_8601": "2016-03-23T12:55:59.706467Z", "url": "https://files.pythonhosted.org/packages/8a/ac/b6645fb5d12ad0196070ff7979e1f990b01f1b6e58377db365c8fea36bbe/chempy-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "94ba7472e40391ca3ae6692f2264a15f", "sha256": "4b8d4f3162879ed6f143ccb9aaac30ea5ba7eb145b17216328ff5be2c3f7e7c9"}, "downloads": -1, "filename": "chempy-0.3.3.tar.gz", "has_sig": false, "md5_digest": "94ba7472e40391ca3ae6692f2264a15f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57115, "upload_time": "2016-03-29T13:15:27", "upload_time_iso_8601": "2016-03-29T13:15:27.618715Z", "url": "https://files.pythonhosted.org/packages/22/fc/fc218fd66b97a3b53164d713dcbe7bf30cecaee2cfaa1132981fc7211b83/chempy-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "9ec913d018f6a6d86d088d54e583bfd0", "sha256": "48ad55709ce8c6c31639feb815eb32287f55d950ec952366459bb2debcb05c82"}, "downloads": -1, "filename": "chempy-0.3.4.tar.gz", "has_sig": false, "md5_digest": "9ec913d018f6a6d86d088d54e583bfd0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57453, "upload_time": "2016-04-02T22:00:13", "upload_time_iso_8601": "2016-04-02T22:00:13.760625Z", "url": "https://files.pythonhosted.org/packages/d2/cd/c850322d145989c650f746c1701fa80cd8487ef0108f54e5db7d83b600d5/chempy-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "a6d697fae7cd370a917c10ede42d8c62", "sha256": "2882b5cf8dac8dd15800b923e6c677ceb30d49c7d0e7f220c9176d78cf3c7b5b"}, "downloads": -1, "filename": "chempy-0.3.5.tar.gz", "has_sig": false, "md5_digest": "a6d697fae7cd370a917c10ede42d8c62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57456, "upload_time": "2016-04-02T22:09:09", "upload_time_iso_8601": "2016-04-02T22:09:09.383337Z", "url": "https://files.pythonhosted.org/packages/20/9b/528636756859e8d26b777701fe51ae420099648fa739eae8499ce89ac686/chempy-0.3.5.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "e11f6bea2730ac0015ff266a4452a0a6", "sha256": "c1b96f7b28e258ac9a31c444ea17f1bed9995cc6dc9257ea001eeafb66923c3b"}, "downloads": -1, "filename": "chempy-0.4.0.tar.gz", "has_sig": false, "md5_digest": "e11f6bea2730ac0015ff266a4452a0a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 100683, "upload_time": "2016-05-30T14:54:52", "upload_time_iso_8601": "2016-05-30T14:54:52.100267Z", "url": "https://files.pythonhosted.org/packages/23/2a/24dd86ba63ce0f4ef4adfa1ef5b5aff4d03596b76ab4369eedcfd5539e52/chempy-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "6537920c8424e2174060206d6e881552", "sha256": "25b8950a98bc0145a79b5d1bcafb636e1a32b70f94e31bee46fdd87684574aef"}, "downloads": -1, "filename": "chempy-0.4.1.tar.gz", "has_sig": false, "md5_digest": "6537920c8424e2174060206d6e881552", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 101698, "upload_time": "2016-06-02T15:03:26", "upload_time_iso_8601": "2016-06-02T15:03:26.269638Z", "url": "https://files.pythonhosted.org/packages/63/69/032c4d2fd86e2ae258676f3bbdf3cc9243beeaee0436fe3d22d01da2701d/chempy-0.4.1.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "d552c6593c07aa0732b3cd9ef8db9abf", "sha256": "82ca9c4a72e0ef566cc8ece63e7f9b5f34d095a705e6341425b8bfed7c7b7c9d"}, "downloads": -1, "filename": "chempy-0.5.0.tar.gz", "has_sig": false, "md5_digest": "d552c6593c07aa0732b3cd9ef8db9abf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 121926, "upload_time": "2017-02-07T07:58:01", "upload_time_iso_8601": "2017-02-07T07:58:01.859851Z", "url": "https://files.pythonhosted.org/packages/4b/41/c93f4f3eda828e678519afa9e0e44b105b26e6fd39fae0ed6e3523ff6b30/chempy-0.5.0.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "482f4153bb9317b4229fdd6c1e685eaf", "sha256": "22b52a9a28f43fee6bf6b3293f328ea4bcd5b93962023988dd7ba897358fa0ab"}, "downloads": -1, "filename": "chempy-0.5.1.tar.gz", "has_sig": false, "md5_digest": "482f4153bb9317b4229fdd6c1e685eaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 129836, "upload_time": "2017-04-03T13:01:06", "upload_time_iso_8601": "2017-04-03T13:01:06.679145Z", "url": "https://files.pythonhosted.org/packages/ab/8f/e0b437e55d0a067cc11d80737b88d60f975a362b13d77a3e38226278cc9d/chempy-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "c5238e38bbc7dc26035304455f4b5a7c", "sha256": "32326a7c1d90f8781342af14ff54f5b70bdd5216be39449c663ac13e1fa1660f"}, "downloads": -1, "filename": "chempy-0.5.2.tar.gz", "has_sig": false, "md5_digest": "c5238e38bbc7dc26035304455f4b5a7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 132033, "upload_time": "2017-09-14T16:26:43", "upload_time_iso_8601": "2017-09-14T16:26:43.962362Z", "url": "https://files.pythonhosted.org/packages/ea/b2/f40746f71d63cf2b146f70bbbdd5d8c7713c88c99379dc26c97db9569ef6/chempy-0.5.2.tar.gz", "yanked": false}], "0.5.3": [{"comment_text": "", "digests": {"md5": "6e9ca2dae0dbc79696a1d2b9f925ecfd", "sha256": "8fe2416fbbb213f2948a923301d75315a8beb03fbef9a47510669a37cdbab78c"}, "downloads": -1, "filename": "chempy-0.5.3.tar.gz", "has_sig": false, "md5_digest": "6e9ca2dae0dbc79696a1d2b9f925ecfd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 133226, "upload_time": "2017-10-03T11:01:53", "upload_time_iso_8601": "2017-10-03T11:01:53.980171Z", "url": "https://files.pythonhosted.org/packages/cf/88/94188ae958d30d59f53fa64515571a9e706de79d7335856c526539dceb89/chempy-0.5.3.tar.gz", "yanked": false}], "0.5.4": [{"comment_text": "", "digests": {"md5": "31b2dd89a875f4c89ea88820abba7bb2", "sha256": "b36a4e55039faa9220d9e591b0a18cb93fadd1958ac24f063872ba1a88dfec69"}, "downloads": -1, "filename": "chempy-0.5.4.tar.gz", "has_sig": false, "md5_digest": "31b2dd89a875f4c89ea88820abba7bb2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 138172, "upload_time": "2017-10-16T14:36:37", "upload_time_iso_8601": "2017-10-16T14:36:37.798354Z", "url": "https://files.pythonhosted.org/packages/83/2d/419ef46053f714dbb65345473aeeefaf726a81aa0bede5e2720371192fd5/chempy-0.5.4.tar.gz", "yanked": false}], "0.5.5": [{"comment_text": "", "digests": {"md5": "e4a49c46257beaa81832f23c46446b72", "sha256": "aaafd3084a5553dcb44d4d0f94482903403827a7c58e2237bb8f96c75eac6b12"}, "downloads": -1, "filename": "chempy-0.5.5.tar.gz", "has_sig": false, "md5_digest": "e4a49c46257beaa81832f23c46446b72", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 134656, "upload_time": "2017-10-18T14:45:48", "upload_time_iso_8601": "2017-10-18T14:45:48.167292Z", "url": "https://files.pythonhosted.org/packages/f5/61/c3ff69b8435dbebe00c404046958c24d6cb06fc142ae2ef9a0b81f068412/chempy-0.5.5.tar.gz", "yanked": false}], "0.5.6": [{"comment_text": "", "digests": {"md5": "27e29a1a4a12b4053db0619bc95b1ad9", "sha256": "2a24bc5fc322c2ea31807f67cb7b93d0ef84b56f699f62ac691eaab8ba698e1f"}, "downloads": -1, "filename": "chempy-0.5.6.tar.gz", "has_sig": false, "md5_digest": "27e29a1a4a12b4053db0619bc95b1ad9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 140176, "upload_time": "2017-12-03T21:48:02", "upload_time_iso_8601": "2017-12-03T21:48:02.662990Z", "url": "https://files.pythonhosted.org/packages/bb/61/e8d485062d36b962b26825bfabd59de3de6dda4cca7a1d176d7d25a6c798/chempy-0.5.6.tar.gz", "yanked": false}], "0.5.7": [{"comment_text": "", "digests": {"md5": "4656e0dce78689d75f1578308ecb6a7d", "sha256": "dcdb6b334457865b9d64c54c37392178d278e9ae06d772e935000925aacfab11"}, "downloads": -1, "filename": "chempy-0.5.7.tar.gz", "has_sig": false, "md5_digest": "4656e0dce78689d75f1578308ecb6a7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 137277, "upload_time": "2017-12-04T15:01:07", "upload_time_iso_8601": "2017-12-04T15:01:07.286952Z", "url": "https://files.pythonhosted.org/packages/10/f3/e5498c44efed8a1a8d2cb2fc1b8bb4490cc1669fcd04d8ae9ccf7d22d8ce/chempy-0.5.7.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "71d17304dc454ff49b2bab853f1e28c8", "sha256": "5b2ea294a2edb001dc360e784fc0df1de999aec61622f853d37201a017fbd951"}, "downloads": -1, "filename": "chempy-0.6.0.tar.gz", "has_sig": false, "md5_digest": "71d17304dc454ff49b2bab853f1e28c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154243, "upload_time": "2018-01-22T22:58:47", "upload_time_iso_8601": "2018-01-22T22:58:47.256065Z", "url": "https://files.pythonhosted.org/packages/67/5c/417b8e07ae605287f3e33290ea0ffe750b90e8a9d67a90f2b39f5696ec62/chempy-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "e6ac493afa2b6180f0d7db423a83df7d", "sha256": "44a6af35a741102cfe2740781ad0ef6eca64c052ef1705e6c874de21525351a8"}, "downloads": -1, "filename": "chempy-0.6.1.tar.gz", "has_sig": false, "md5_digest": "e6ac493afa2b6180f0d7db423a83df7d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154304, "upload_time": "2018-01-22T23:21:14", "upload_time_iso_8601": "2018-01-22T23:21:14.151724Z", "url": "https://files.pythonhosted.org/packages/4e/8e/37fb5a53718d51192e8cb20a300de311e73aeb788cc3a77e3d7a7633f12f/chempy-0.6.1.tar.gz", "yanked": false}], "0.6.10": [{"comment_text": "", "digests": {"md5": "c0d3b09d8596415da73dcc1c483fce21", "sha256": "f1d41c9486919274a8a337ea70569d17cd9762f58438c5acd30c0d5b80cbd1ca"}, "downloads": -1, "filename": "chempy-0.6.10.tar.gz", "has_sig": false, "md5_digest": "c0d3b09d8596415da73dcc1c483fce21", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161347, "upload_time": "2018-09-17T10:42:18", "upload_time_iso_8601": "2018-09-17T10:42:18.427071Z", "url": "https://files.pythonhosted.org/packages/18/d7/e6d7118742106bf790544bd5473df3307acb1a044584bbc942fe7c57929b/chempy-0.6.10.tar.gz", "yanked": false}], "0.6.11": [{"comment_text": "", "digests": {"md5": "03dab7b6675a6ce74ac3354aea16b042", "sha256": "43f94de18d6df3e494a41df1a3ae8300c78804fe2ff81d979ec61d03401b1740"}, "downloads": -1, "filename": "chempy-0.6.11.tar.gz", "has_sig": false, "md5_digest": "03dab7b6675a6ce74ac3354aea16b042", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161363, "upload_time": "2018-09-20T15:09:45", "upload_time_iso_8601": "2018-09-20T15:09:45.624108Z", "url": "https://files.pythonhosted.org/packages/3c/67/a5db79776a5624ed947a88adff52531fd59b2093b137fb662dc6ff68fa49/chempy-0.6.11.tar.gz", "yanked": false}], "0.6.12": [{"comment_text": "", "digests": {"md5": "22aca7a64b3c95c793fe56241e16e266", "sha256": "97b860ad49cb9be25cade31eb8f7efa95cd299240f59810aac734d3307d3322d"}, "downloads": -1, "filename": "chempy-0.6.12.tar.gz", "has_sig": false, "md5_digest": "22aca7a64b3c95c793fe56241e16e266", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161796, "upload_time": "2018-10-17T22:48:42", "upload_time_iso_8601": "2018-10-17T22:48:42.407443Z", "url": "https://files.pythonhosted.org/packages/2a/61/e08ca57054a1477f41b724be82eabe20a4688fe1749659fd12626cb8f473/chempy-0.6.12.tar.gz", "yanked": false}], "0.6.13": [{"comment_text": "", "digests": {"md5": "c0db79e45faa8863b22c343128ec3315", "sha256": "e3bad445c2ac2988a47ea436bd254d30f2dc3f1f6ba34dd7de493ae3d9f94482"}, "downloads": -1, "filename": "chempy-0.6.13.tar.gz", "has_sig": false, "md5_digest": "c0db79e45faa8863b22c343128ec3315", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161879, "upload_time": "2018-10-27T14:40:58", "upload_time_iso_8601": "2018-10-27T14:40:58.040453Z", "url": "https://files.pythonhosted.org/packages/3d/ed/ab043ae3ca3d4e547647c85945f41716e60ac074b13fb784cdcdbda55bff/chempy-0.6.13.tar.gz", "yanked": false}], "0.6.14": [{"comment_text": "", "digests": {"md5": "a0903aaf2547d3c0d003bf79b4060de5", "sha256": "682f0e269e957825b28c5be319b4b4cff721770f38c5d66a3f1ee05812cdef13"}, "downloads": -1, "filename": "chempy-0.6.14.tar.gz", "has_sig": false, "md5_digest": "a0903aaf2547d3c0d003bf79b4060de5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162520, "upload_time": "2018-10-29T10:56:50", "upload_time_iso_8601": "2018-10-29T10:56:50.034641Z", "url": "https://files.pythonhosted.org/packages/a5/91/d90e5146c282e1799d5e6c3196af125f9449936364121cfaac6c6115d09b/chempy-0.6.14.tar.gz", "yanked": false}], "0.6.15": [{"comment_text": "", "digests": {"md5": "a582b18f84fc7cddaf0879e19e568be5", "sha256": "6e1967b5d3ac1a9f2fa39b0aaef420e6960e32d8cf028b3064c3c97c18f9d032"}, "downloads": -1, "filename": "chempy-0.6.15.tar.gz", "has_sig": false, "md5_digest": "a582b18f84fc7cddaf0879e19e568be5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162532, "upload_time": "2018-10-29T15:07:30", "upload_time_iso_8601": "2018-10-29T15:07:30.921766Z", "url": "https://files.pythonhosted.org/packages/7d/96/c5ce22e24c5130dc97beb7b17e5a7347290e4c39ad67b5e44a0977efb50b/chempy-0.6.15.tar.gz", "yanked": false}], "0.6.16": [{"comment_text": "", "digests": {"md5": "5814dd69fd8691635f10c0a14fcfb6a9", "sha256": "823ddc133b7c4c000e386ef8e346491657c485c3133b55a878a79ab664ea0839"}, "downloads": -1, "filename": "chempy-0.6.16.tar.gz", "has_sig": false, "md5_digest": "5814dd69fd8691635f10c0a14fcfb6a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 156830, "upload_time": "2018-12-04T11:04:29", "upload_time_iso_8601": "2018-12-04T11:04:29.865410Z", "url": "https://files.pythonhosted.org/packages/42/61/113639c8f051c2bc05de385ed5a6b426cda8381daf2b9128c732dd393ea3/chempy-0.6.16.tar.gz", "yanked": false}], "0.6.17": [{"comment_text": "", "digests": {"md5": "2abc61a6709edfc1bb5cf05fc23ff140", "sha256": "c9409fb558a47e90cc91005a0a13a5867e0296677a1317eb3ac73d68eb032473"}, "downloads": -1, "filename": "chempy-0.6.17.tar.gz", "has_sig": false, "md5_digest": "2abc61a6709edfc1bb5cf05fc23ff140", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 168116, "upload_time": "2019-04-28T21:28:25", "upload_time_iso_8601": "2019-04-28T21:28:25.454859Z", "url": "https://files.pythonhosted.org/packages/02/07/03811b9977d38503b4638a0d5886f48a321c835dc64dae6c4567f89c745d/chempy-0.6.17.tar.gz", "yanked": false}], "0.6.18": [{"comment_text": "", "digests": {"md5": "8d5e2c5452bf73ac3f6c27b1edc5f7fa", "sha256": "634de8ff0b1b275ff6bb59252f3d49e4f54bb424676a58b22f7c4c66b20c442d"}, "downloads": -1, "filename": "chempy-0.6.18.tar.gz", "has_sig": false, "md5_digest": "8d5e2c5452bf73ac3f6c27b1edc5f7fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162040, "upload_time": "2019-04-30T14:24:08", "upload_time_iso_8601": "2019-04-30T14:24:08.863636Z", "url": "https://files.pythonhosted.org/packages/b6/d5/5206a084cd5f30097d685c693c80c62076af15970360eb3d6ee8010b908f/chempy-0.6.18.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "05b1d79c5202a0f3555b8392e159b927", "sha256": "29110dd9917c565e94afd3e07e96ede9616b6b0248eb8f7ace3ad7f98f256398"}, "downloads": -1, "filename": "chempy-0.6.2.tar.gz", "has_sig": false, "md5_digest": "05b1d79c5202a0f3555b8392e159b927", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154347, "upload_time": "2018-01-23T00:19:15", "upload_time_iso_8601": "2018-01-23T00:19:15.056709Z", "url": "https://files.pythonhosted.org/packages/d2/ba/a5ee3d45eec19a0b4dff893f267de41a59e46d99af98921f01900fc1d4f6/chempy-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "288a3471dddc0eb0d17f21ce028b637f", "sha256": "2b7ae1f8f6579b7c352b4ec08e6c5cd2814136bf10acfedd600fca38394869a6"}, "downloads": -1, "filename": "chempy-0.6.3.tar.gz", "has_sig": false, "md5_digest": "288a3471dddc0eb0d17f21ce028b637f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 149566, "upload_time": "2018-01-24T17:42:44", "upload_time_iso_8601": "2018-01-24T17:42:44.419199Z", "url": "https://files.pythonhosted.org/packages/9c/19/b80922b646786657cdf60e29fbc9efe53c1cc41c482e70e7fa34d1b936bd/chempy-0.6.3.tar.gz", "yanked": false}], "0.6.4": [{"comment_text": "", "digests": {"md5": "3744b2d8d6c5bee8f04d48669f49eabe", "sha256": "c0cd9e4dde43e83965b38fee5f98c30f68651df8626a32bcac3ee64ee40af442"}, "downloads": -1, "filename": "chempy-0.6.4.tar.gz", "has_sig": false, "md5_digest": "3744b2d8d6c5bee8f04d48669f49eabe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150700, "upload_time": "2018-01-29T17:03:53", "upload_time_iso_8601": "2018-01-29T17:03:53.009078Z", "url": "https://files.pythonhosted.org/packages/12/6e/7c90a76be1ea0a06954ef5b360afeb835b5cec25b65e762fc0e435f6134c/chempy-0.6.4.tar.gz", "yanked": false}], "0.6.5": [{"comment_text": "", "digests": {"md5": "767906563bcfab6dfbdecd310abb5760", "sha256": "7852b9ea09d2c91e083b0918bbf67395d679bc3690deda193bf86f8c2b2bcca2"}, "downloads": -1, "filename": "chempy-0.6.5.tar.gz", "has_sig": false, "md5_digest": "767906563bcfab6dfbdecd310abb5760", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 150744, "upload_time": "2018-02-06T14:55:37", "upload_time_iso_8601": "2018-02-06T14:55:37.482201Z", "url": "https://files.pythonhosted.org/packages/c3/95/7602bf364722e30a943d9abca47ea973cbe2258b7f15ecbdf323e04e4986/chempy-0.6.5.tar.gz", "yanked": false}], "0.6.6": [{"comment_text": "", "digests": {"md5": "6eccc1b6d29b0cab6e85118dabc18e60", "sha256": "c39d79a0bd6ee4a166aa627f04f5c01863ea7bcdafe6db27a159177b5537e8bd"}, "downloads": -1, "filename": "chempy-0.6.6.tar.gz", "has_sig": false, "md5_digest": "6eccc1b6d29b0cab6e85118dabc18e60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 152581, "upload_time": "2018-03-28T16:07:34", "upload_time_iso_8601": "2018-03-28T16:07:34.155718Z", "url": "https://files.pythonhosted.org/packages/21/0a/728be43d9994a536b87686f7ae795f00d88358ce7d6a5d55af3bdcf9b932/chempy-0.6.6.tar.gz", "yanked": false}], "0.6.7": [{"comment_text": "", "digests": {"md5": "d606c831edb4600d0a69776ae796bdea", "sha256": "c1caa4a20a574439d8172dd43267334d136633a2b343aca7965076882e675ceb"}, "downloads": -1, "filename": "chempy-0.6.7.tar.gz", "has_sig": false, "md5_digest": "d606c831edb4600d0a69776ae796bdea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 158515, "upload_time": "2018-04-04T15:31:14", "upload_time_iso_8601": "2018-04-04T15:31:14.373153Z", "url": "https://files.pythonhosted.org/packages/8d/e0/2d9c9f3619ff894d19ac7f6ddd715c24ea511d14a7705c31d43cb13c553b/chempy-0.6.7.tar.gz", "yanked": false}], "0.6.8": [{"comment_text": "", "digests": {"md5": "8edc88e0d935a9465560a1a1d248857a", "sha256": "b9090bfae0439507c56fe3f111d00a3e781940b4a7b5f55f3b53dc49d9822a37"}, "downloads": -1, "filename": "chempy-0.6.8.tar.gz", "has_sig": false, "md5_digest": "8edc88e0d935a9465560a1a1d248857a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 154133, "upload_time": "2018-08-12T16:39:54", "upload_time_iso_8601": "2018-08-12T16:39:54.271494Z", "url": "https://files.pythonhosted.org/packages/4f/2c/c627c95890f8d8c882f3f5f9e52ab361e71f35497f5d7b3a8221bb32f813/chempy-0.6.8.tar.gz", "yanked": false}], "0.6.9": [{"comment_text": "", "digests": {"md5": "9f5a7792a89e70cd908002b221090af9", "sha256": "a0f2bf048c148e717dc2bc8b8b98b6db82e24fef688b091afe020d7721b27bc7"}, "downloads": -1, "filename": "chempy-0.6.9.tar.gz", "has_sig": false, "md5_digest": "9f5a7792a89e70cd908002b221090af9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 160958, "upload_time": "2018-08-31T13:22:49", "upload_time_iso_8601": "2018-08-31T13:22:49.675561Z", "url": "https://files.pythonhosted.org/packages/0c/39/0448f1ced68e3fbdff5d84342e502f6604d09b9c4eab6f6f1376fb136022/chempy-0.6.9.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "0aa7f4f81302472897e4f49e4b9b387b", "sha256": "13b6503778f05a1268930e3228dbc57e3cacea7564f2888cbb04aae0d42dbe7e"}, "downloads": -1, "filename": "chempy-0.7.0.tar.gz", "has_sig": false, "md5_digest": "0aa7f4f81302472897e4f49e4b9b387b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161010, "upload_time": "2018-08-30T11:44:13", "upload_time_iso_8601": "2018-08-30T11:44:13.821482Z", "url": "https://files.pythonhosted.org/packages/dc/38/493cf9f408f3d869f19ed6c208ccecfeb949daa56d29a548fead6daa35c9/chempy-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "e3c032cc7586d0beb31d7abdfe27652a", "sha256": "d2de78827b43efaaeb5f0761f6ae6f51473329a8eb2dc8476377fc2e8c504862"}, "downloads": -1, "filename": "chempy-0.7.1.tar.gz", "has_sig": false, "md5_digest": "e3c032cc7586d0beb31d7abdfe27652a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 161194, "upload_time": "2018-08-31T13:28:39", "upload_time_iso_8601": "2018-08-31T13:28:39.584568Z", "url": "https://files.pythonhosted.org/packages/46/9f/c0dab342efe328a7c058b978d3661128fb9d5e841ed3dd89dd1271dda246/chempy-0.7.1.tar.gz", "yanked": false}], "0.7.10": [{"comment_text": "", "digests": {"md5": "88286d905b6eda69ee240ce97be044cf", "sha256": "a874f069392fb04f1cb54be32244fe711a92c3664de9eeece99207bb7d6e9388"}, "downloads": -1, "filename": "chempy-0.7.10.tar.gz", "has_sig": false, "md5_digest": "88286d905b6eda69ee240ce97be044cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 167336, "upload_time": "2020-03-03T22:18:28", "upload_time_iso_8601": "2020-03-03T22:18:28.235164Z", "url": "https://files.pythonhosted.org/packages/e3/e1/2951b7ebe18e8ac7ee439a3bc34fc9fd89c45ce1f1979b08dbfe33da4373/chempy-0.7.10.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "a925d5c7d4729a0311591f0927750eab", "sha256": "1dd9bc1d2a69c1e61c5b042d73d9bf00804b3d60f46510fbca878c5ead2d62f0"}, "downloads": -1, "filename": "chempy-0.7.2.tar.gz", "has_sig": false, "md5_digest": "a925d5c7d4729a0311591f0927750eab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162100, "upload_time": "2018-09-17T10:47:15", "upload_time_iso_8601": "2018-09-17T10:47:15.193058Z", "url": "https://files.pythonhosted.org/packages/85/c0/b2c9807a923623d03d8c3a800f763f2653f40b8f479ec273f2e7a597b8cc/chempy-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "0462831c596d336f6d1e38c4a037146d", "sha256": "002a6a78914f26d4a10c7834f811aa26a435b2287ab26804bed8b5aa69e5f97f"}, "downloads": -1, "filename": "chempy-0.7.3.tar.gz", "has_sig": false, "md5_digest": "0462831c596d336f6d1e38c4a037146d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 162098, "upload_time": "2018-09-20T15:08:16", "upload_time_iso_8601": "2018-09-20T15:08:16.485919Z", "url": "https://files.pythonhosted.org/packages/25/95/d5a30713b5d109dc0d5402cb9f6cfcd914103647926c378deb5e213f69fe/chempy-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "e1ba78c02d845026e1256c001fe3b496", "sha256": "1b360c33c4f2fb0659ba679e0e0de9f3ca773b2323f1b15657104ac13e99f66d"}, "downloads": -1, "filename": "chempy-0.7.4.tar.gz", "has_sig": false, "md5_digest": "e1ba78c02d845026e1256c001fe3b496", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 162474, "upload_time": "2018-10-17T23:14:18", "upload_time_iso_8601": "2018-10-17T23:14:18.170251Z", "url": "https://files.pythonhosted.org/packages/27/72/c442465d9d6e5593b83666d851dd31f50c9b9329106ba96fb86bfd695ec5/chempy-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "45092f53de308b445af57a808843b610", "sha256": "3fed979931d5c5a9fb776033072a743204debb4f528cc9cdf87ff3b4e38dec1e"}, "downloads": -1, "filename": "chempy-0.7.5.tar.gz", "has_sig": false, "md5_digest": "45092f53de308b445af57a808843b610", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 155956, "upload_time": "2018-10-19T09:50:56", "upload_time_iso_8601": "2018-10-19T09:50:56.094817Z", "url": "https://files.pythonhosted.org/packages/9b/28/3a4e5bcdbdd23e1814710eeb67cddac4ffe1aaa2c24e597af9701cbc0ed0/chempy-0.7.5.tar.gz", "yanked": false}], "0.7.6": [{"comment_text": "", "digests": {"md5": "393c73a94d46567fa62263dad4c35707", "sha256": "07484905d40c267f9c5e4c498b93a3d5a4de50a0ad51943b5d9a735769c98ac3"}, "downloads": -1, "filename": "chempy-0.7.6.tar.gz", "has_sig": false, "md5_digest": "393c73a94d46567fa62263dad4c35707", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 163303, "upload_time": "2018-10-26T14:35:01", "upload_time_iso_8601": "2018-10-26T14:35:01.058596Z", "url": "https://files.pythonhosted.org/packages/c6/05/6e08c9030e60af9992785fd5586e2df003edc5ace6cc2aa5eb9d36270c2b/chempy-0.7.6.tar.gz", "yanked": false}], "0.7.7": [{"comment_text": "", "digests": {"md5": "2086c5c7a3df58fc52f0dc1409999f04", "sha256": "9d27f9a9f96d87c40c939660a89861142b49049e89e41b73b91ac17c6a05ec19"}, "downloads": -1, "filename": "chempy-0.7.7.tar.gz", "has_sig": false, "md5_digest": "2086c5c7a3df58fc52f0dc1409999f04", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 157143, "upload_time": "2018-12-04T10:27:53", "upload_time_iso_8601": "2018-12-04T10:27:53.374304Z", "url": "https://files.pythonhosted.org/packages/9a/ee/df9b17318a5cebec2afdb0051cee19c32910eccfc152eefb3fe6632dfecc/chempy-0.7.7.tar.gz", "yanked": false}], "0.7.8": [{"comment_text": "", "digests": {"md5": "e7c1c103ebc3da9f3312d2da42f2be7e", "sha256": "7ad32d16c0848e505eb67b1d1a1df2948d8cfb6b74ade0af05d3500f50c38e9e"}, "downloads": -1, "filename": "chempy-0.7.8.tar.gz", "has_sig": false, "md5_digest": "e7c1c103ebc3da9f3312d2da42f2be7e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 162049, "upload_time": "2019-04-11T16:15:12", "upload_time_iso_8601": "2019-04-11T16:15:12.618186Z", "url": "https://files.pythonhosted.org/packages/75/af/cf329f599751db51a1c5cd723bcc31cb1eb203b63bcc95977eebc57c9208/chempy-0.7.8.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "b30eb651ea19ef8e3c01d0d8e6f591c5", "sha256": "c076da8c2abadad7557352553d4928a7be590b804fa527c9d71b5b46f235a147"}, "downloads": -1, "filename": "chempy-0.7.9.tar.gz", "has_sig": false, "md5_digest": "b30eb651ea19ef8e3c01d0d8e6f591c5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 167497, "upload_time": "2019-10-01T14:21:00", "upload_time_iso_8601": "2019-10-01T14:21:00.878780Z", "url": "https://files.pythonhosted.org/packages/3a/dd/36e928518bffe65e6f088830f229f00ca089ff07062737ebd6d695935560/chempy-0.7.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "88286d905b6eda69ee240ce97be044cf", "sha256": "a874f069392fb04f1cb54be32244fe711a92c3664de9eeece99207bb7d6e9388"}, "downloads": -1, "filename": "chempy-0.7.10.tar.gz", "has_sig": false, "md5_digest": "88286d905b6eda69ee240ce97be044cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 167336, "upload_time": "2020-03-03T22:18:28", "upload_time_iso_8601": "2020-03-03T22:18:28.235164Z", "url": "https://files.pythonhosted.org/packages/e3/e1/2951b7ebe18e8ac7ee439a3bc34fc9fd89c45ce1f1979b08dbfe33da4373/chempy-0.7.10.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:39 2020"}