{"info": {"author": "Joshua Fialkoff", "author_email": "joshua.fialkoff@setaris.com", "bugtrack_url": null, "classifiers": [], "description": "Phaxio\n======\n\nA Python module for interacting with the `Phaxio API`_.\n\nInstallation\n------------\n\nVia pip:\n\n::\n\n    $ pip install pyphaxio\n\nUsage\n-----\n\nSend a fax to multiple people using HTML message:\n\n.. code:: python\n\n    from phaxio import PhaxioApi\n\n    api = PhaxioApi(key, secret)\n    r = api.send(to=['4141234567', '5141234567', '6151234567'],\n        string_data='Hello World!',\n        string_data_type='text')\n    print(r.get('faxId'))\n\nGenerally, each supported method takes keyword arguments with the exact\nsame names of the API method parameters as they\u2019re described in the\n`documentation`_. One exception to this rule is that ``filename`` is\ninstead referred to as ``files``. For example, to send a fax using\nfiles:\n\n.. code:: python\n\n    llama = os.path.join(os.path.dirname(__file__), 'tests/llama.pdf')\n    alpaca = os.path.join(os.path.dirname(__file__), 'tests/alpaca.pdf')\n    f = open(alpaca, 'rb')\n    r = api.send(to='4141234567', files=(llama, f))\n\nSee the `tests`_ for additional examples.\n\nError Handling\n~~~~~~~~~~~~~~\n\nBy default, the api calls return a dictionary. However, you can use\n``PhaxioApi(key, secret, raise_errors=True)`` which will raise the\nfollowing errors: \\* ``AuthenticationError`` - key/secret are invalid \\*\n``APIError`` - error with api call \\* ``ServerError`` - server had an\nerror and could not complete your request\n\nErrors can be imported from the ``phaxio.exceptions`` module.\n\nCurrently Supported API Calls\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nImplemented and tested:\n\n-  send\n-  testReceive\n-  faxStatus\n-  faxFile\n\nImplemented and untested:\n\n-  attachPhaxCodeToPdf\n-  createPhaxCode\n-  getHostedDocument\n-  provisionNumber\n-  releaseNumber\n-  numberList\n-  faxList\n-  faxCancel\n-  accountStatus\n\nTesting\n-------\n\n::\n\n    python setup.py test\n\nYou will be prompted for a test api key and secret\n\nContributing\n------------\n\n1. Fork it\n2. Create your feature branch (``git checkout -b my-new-feature``)\n3. Commit your changes (``git commit -am 'Added some feature'``)\n4. Push to the branch (``git push origin my-new-feature``)\n5. Create new Pull Request\n\n.. _Phaxio API: https://www.phaxio.com/docs\n.. _documentation: https://www.phaxio.com/docs\n.. _tests: tests/test_api.py", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jfialkoff/pyphaxio", "keywords": "python phaxio fax api", "license": "MIT License", "maintainer": null, "maintainer_email": null, "name": "pyphaxio", "package_url": "https://pypi.org/project/pyphaxio/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyphaxio/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/jfialkoff/pyphaxio"}, "release_url": "https://pypi.org/project/pyphaxio/0.11/", "requires_dist": null, "requires_python": null, "summary": "Python client for Phaxio", "version": "0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A Python module for interacting with the <a href=\"https://www.phaxio.com/docs\" rel=\"nofollow\">Phaxio API</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Via pip:</p>\n<pre>$ pip install pyphaxio\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Send a fax to multiple people using HTML message:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">phaxio</span> <span class=\"kn\">import</span> <span class=\"n\">PhaxioApi</span>\n\n<span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">PhaxioApi</span><span class=\"p\">(</span><span class=\"n\">key</span><span class=\"p\">,</span> <span class=\"n\">secret</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">to</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'4141234567'</span><span class=\"p\">,</span> <span class=\"s1\">'5141234567'</span><span class=\"p\">,</span> <span class=\"s1\">'6151234567'</span><span class=\"p\">],</span>\n    <span class=\"n\">string_data</span><span class=\"o\">=</span><span class=\"s1\">'Hello World!'</span><span class=\"p\">,</span>\n    <span class=\"n\">string_data_type</span><span class=\"o\">=</span><span class=\"s1\">'text'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'faxId'</span><span class=\"p\">))</span>\n</pre>\n<p>Generally, each supported method takes keyword arguments with the exact\nsame names of the API method parameters as they\u2019re described in the\n<a href=\"https://www.phaxio.com/docs\" rel=\"nofollow\">documentation</a>. One exception to this rule is that <tt>filename</tt> is\ninstead referred to as <tt>files</tt>. For example, to send a fax using\nfiles:</p>\n<pre><span class=\"n\">llama</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">'tests/llama.pdf'</span><span class=\"p\">)</span>\n<span class=\"n\">alpaca</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">dirname</span><span class=\"p\">(</span><span class=\"vm\">__file__</span><span class=\"p\">),</span> <span class=\"s1\">'tests/alpaca.pdf'</span><span class=\"p\">)</span>\n<span class=\"n\">f</span> <span class=\"o\">=</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">alpaca</span><span class=\"p\">,</span> <span class=\"s1\">'rb'</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">send</span><span class=\"p\">(</span><span class=\"n\">to</span><span class=\"o\">=</span><span class=\"s1\">'4141234567'</span><span class=\"p\">,</span> <span class=\"n\">files</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">llama</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">))</span>\n</pre>\n<p>See the <a href=\"tests/test_api.py\" rel=\"nofollow\">tests</a> for additional examples.</p>\n<div id=\"error-handling\">\n<h3>Error Handling</h3>\n<p>By default, the api calls return a dictionary. However, you can use\n<tt>PhaxioApi(key, secret, raise_errors=True)</tt> which will raise the\nfollowing errors: * <tt>AuthenticationError</tt> - key/secret are invalid *\n<tt>APIError</tt> - error with api call * <tt>ServerError</tt> - server had an\nerror and could not complete your request</p>\n<p>Errors can be imported from the <tt>phaxio.exceptions</tt> module.</p>\n</div>\n<div id=\"currently-supported-api-calls\">\n<h3>Currently Supported API Calls</h3>\n<p>Implemented and tested:</p>\n<ul>\n<li>send</li>\n<li>testReceive</li>\n<li>faxStatus</li>\n<li>faxFile</li>\n</ul>\n<p>Implemented and untested:</p>\n<ul>\n<li>attachPhaxCodeToPdf</li>\n<li>createPhaxCode</li>\n<li>getHostedDocument</li>\n<li>provisionNumber</li>\n<li>releaseNumber</li>\n<li>numberList</li>\n<li>faxList</li>\n<li>faxCancel</li>\n<li>accountStatus</li>\n</ul>\n</div>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<pre>python setup.py test\n</pre>\n<p>You will be prompted for a test api key and secret</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<ol>\n<li>Fork it</li>\n<li>Create your feature branch (<tt>git checkout <span class=\"pre\">-b</span> <span class=\"pre\">my-new-feature</span></tt>)</li>\n<li>Commit your changes (<tt>git commit <span class=\"pre\">-am</span> 'Added some feature'</tt>)</li>\n<li>Push to the branch (<tt>git push origin <span class=\"pre\">my-new-feature</span></tt>)</li>\n<li>Create new Pull Request</li>\n</ol>\n</div>\n\n          </div>"}, "last_serial": 2118969, "releases": {"0.10": [{"comment_text": "", "digests": {"md5": "f0f13ff1cb3c29ef2fa9310c3386eb47", "sha256": "418d164a28a26ad90758685901d08c36a211bc81c384aaeaafdd00b0cf266ebe"}, "downloads": -1, "filename": "pyphaxio-0.10-py2-none-any.whl", "has_sig": false, "md5_digest": "f0f13ff1cb3c29ef2fa9310c3386eb47", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7872, "upload_time": "2015-09-30T05:40:20", "upload_time_iso_8601": "2015-09-30T05:40:20.859979Z", "url": "https://files.pythonhosted.org/packages/6c/7d/d2eb566d34f5375dd6b39c8c9ef66e774ca8df496f830fa7f81bf01f16c4/pyphaxio-0.10-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b89a1f182f9b13f338169289e9055036", "sha256": "e9801c67e0e98b0a7c59e5523aca6bddb5ba71e0d4b93882ff8c0332efe57a42"}, "downloads": -1, "filename": "pyphaxio-0.10.tar.gz", "has_sig": false, "md5_digest": "b89a1f182f9b13f338169289e9055036", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4655, "upload_time": "2015-09-30T05:40:17", "upload_time_iso_8601": "2015-09-30T05:40:17.146360Z", "url": "https://files.pythonhosted.org/packages/5a/69/7009799015435543496e0c41a1186ba802062e5118337136dd3a0726e1a4/pyphaxio-0.10.tar.gz", "yanked": false}], "0.11": [{"comment_text": "", "digests": {"md5": "8931b7f6c8a699ba036ae5fa8b07ec71", "sha256": "f952e4c1fac5ee502d18ac686c55dcf2837f4819d160fdfafff104dcf56dbfe9"}, "downloads": -1, "filename": "pyphaxio-0.11-py2-none-any.whl", "has_sig": false, "md5_digest": "8931b7f6c8a699ba036ae5fa8b07ec71", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7760, "upload_time": "2016-05-17T02:00:29", "upload_time_iso_8601": "2016-05-17T02:00:29.928368Z", "url": "https://files.pythonhosted.org/packages/67/d8/0f04f25e47c69659c078709615c12fa31321da0b2fcc225f6802efda8e7c/pyphaxio-0.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8740933a22c75f6ad1f49981f49023dc", "sha256": "bdbf63c5542c5c7f52bb2520fd090a0598b44791cf9547afbecac6cf78a966ae"}, "downloads": -1, "filename": "pyphaxio-0.11.tar.gz", "has_sig": false, "md5_digest": "8740933a22c75f6ad1f49981f49023dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4709, "upload_time": "2016-05-17T02:00:21", "upload_time_iso_8601": "2016-05-17T02:00:21.477433Z", "url": "https://files.pythonhosted.org/packages/c2/26/fc4c381cff019c5e269a1d61c0bee55d2a7484e4c62270763de67721cc96/pyphaxio-0.11.tar.gz", "yanked": false}], "0.8": [{"comment_text": "", "digests": {"md5": "a82784741d548c16c59f6b37949313c5", "sha256": "f018e9d3739f3f42c657a672984ea430b7cf904c8f4030b97d0f5fb2af5f7dcf"}, "downloads": -1, "filename": "pyphaxio-0.8.tar.gz", "has_sig": false, "md5_digest": "a82784741d548c16c59f6b37949313c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2499, "upload_time": "2013-08-16T16:31:19", "upload_time_iso_8601": "2013-08-16T16:31:19.775661Z", "url": "https://files.pythonhosted.org/packages/d8/2a/06f007195ffb1fd5d341fd7ea9067a2d78ed2837c98bcc78b4513389dbf9/pyphaxio-0.8.tar.gz", "yanked": false}], "0.9": [{"comment_text": "", "digests": {"md5": "0ee9e638b349b73b61cbe905e3c9d725", "sha256": "02efcc529daba4108b18eea0e8cbc732aaf4114c3b34e1011064fc3ed6008326"}, "downloads": -1, "filename": "pyphaxio-0.9.tar.gz", "has_sig": false, "md5_digest": "0ee9e638b349b73b61cbe905e3c9d725", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2492, "upload_time": "2013-08-22T12:34:24", "upload_time_iso_8601": "2013-08-22T12:34:24.229660Z", "url": "https://files.pythonhosted.org/packages/75/df/a5d18e4abc423627bdc50c9e246694b97e393d3e0e4f3117191e93423f5d/pyphaxio-0.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8931b7f6c8a699ba036ae5fa8b07ec71", "sha256": "f952e4c1fac5ee502d18ac686c55dcf2837f4819d160fdfafff104dcf56dbfe9"}, "downloads": -1, "filename": "pyphaxio-0.11-py2-none-any.whl", "has_sig": false, "md5_digest": "8931b7f6c8a699ba036ae5fa8b07ec71", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7760, "upload_time": "2016-05-17T02:00:29", "upload_time_iso_8601": "2016-05-17T02:00:29.928368Z", "url": "https://files.pythonhosted.org/packages/67/d8/0f04f25e47c69659c078709615c12fa31321da0b2fcc225f6802efda8e7c/pyphaxio-0.11-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8740933a22c75f6ad1f49981f49023dc", "sha256": "bdbf63c5542c5c7f52bb2520fd090a0598b44791cf9547afbecac6cf78a966ae"}, "downloads": -1, "filename": "pyphaxio-0.11.tar.gz", "has_sig": false, "md5_digest": "8740933a22c75f6ad1f49981f49023dc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4709, "upload_time": "2016-05-17T02:00:21", "upload_time_iso_8601": "2016-05-17T02:00:21.477433Z", "url": "https://files.pythonhosted.org/packages/c2/26/fc4c381cff019c5e269a1d61c0bee55d2a7484e4c62270763de67721cc96/pyphaxio-0.11.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:40 2020"}