{"info": {"author": "SillyGoat", "author_email": "fake.me.now.and.forever@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# teslacam\nTesla Camera\n\nThis is a very simple python 3 script to help me consolidate my Tesla's raw camera data into nicely formatted videos.  It tries to maintain the same resolution as the original with the same video quality by default.\n\nThis also makes use of nvidia video card GPUs to accelerate encoding.\n\nInstallation:\n\nDownload FFMpeg here:\nhttps://ffmpeg.org/download.html\n\nRun:\n```\npython -m pip install teslacam\n```\nCommand line usage\n```\npython -m teslacam --help\n```\n```\nusage: teslacam [-h] [--codec {hevc_nvenc,libx265}] [--preset PRESET] [--reduce REDUCE] [--layout {pyramid,tall_diamond,short_diamond,cross}] [--keep_temp_folder KEEP_TEMP_FOLDER]\n                ffprobe_file_path ffmpeg_file_path input_folder_path output_folder_path\n\npositional arguments:\n  ffprobe_file_path     full path to ffprobe binary\n  ffmpeg_file_path      full path to ffmpeg binary\n  input_folder_path     full path to the video folder containing timestamped folders\n  output_folder_path    full path of the output folder for merged files and temporary work folder\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --codec {hevc_nvenc,libx265}\n                        codec to use for encoding\n  --preset PRESET       preset to use for encoding\n  --reduce REDUCE       percent to reduce video to\n  --layout {pyramid,tall_diamond,short_diamond,cross}\n                        camera layout\n  --keep_temp_folder KEEP_TEMP_FOLDER\n                        keep temporary working folder after extraction\n```\nAPI Usage\n```\nimport teslacam\nfrom teslacam import *\n\ndef main():\n  print(f\"Available layouts: {', '.join(teslacam.constants.LAYOUT.keys())}\")\n  print(f'Available codecs: {teslacam.constants.CODEC_OPTIONS.items()}')\n\n  extract_videos(\n    FFMpegPaths(\n      r'some_ffmpeg_path\\ffprobe.exe', # path to ffprobe\n      r'some_ffmpeg_path\\ffmpeg.exe'   # path to ffmpeg\n    ),\n    LayoutOptions(\n      'hevc_nvenc', # Codec name\n      'fast',       # Codec preset\n      'pyramid',    # Layout name\n      DONT_REDUCE   # Percentage value from 1-100 (or DONT_REDUCE constant)\n    ),\n    BaseFolderPaths(\n      r'g:\\TeslaCam\\SentryClips',   # Path to your USB stick\n      r'c:\\users\\user\\videos\\tesla' # Destination path\n    ),\n    True  # Keep temporary working folder\n  )\n\nif __name__ == '__main__':\n  main()\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/SillyGoat/teslacam", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "teslacam", "package_url": "https://pypi.org/project/teslacam/", "platform": "", "project_url": "https://pypi.org/project/teslacam/", "project_urls": {"Homepage": "https://github.com/SillyGoat/teslacam"}, "release_url": "https://pypi.org/project/teslacam/1.0.1/", "requires_dist": null, "requires_python": ">=3.8", "summary": "Consolidate and format Tesla vehicle camera video data", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>teslacam</h1>\n<p>Tesla Camera</p>\n<p>This is a very simple python 3 script to help me consolidate my Tesla's raw camera data into nicely formatted videos.  It tries to maintain the same resolution as the original with the same video quality by default.</p>\n<p>This also makes use of nvidia video card GPUs to accelerate encoding.</p>\n<p>Installation:</p>\n<p>Download FFMpeg here:\n<a href=\"https://ffmpeg.org/download.html\" rel=\"nofollow\">https://ffmpeg.org/download.html</a></p>\n<p>Run:</p>\n<pre><code>python -m pip install teslacam\n</code></pre>\n<p>Command line usage</p>\n<pre><code>python -m teslacam --help\n</code></pre>\n<pre><code>usage: teslacam [-h] [--codec {hevc_nvenc,libx265}] [--preset PRESET] [--reduce REDUCE] [--layout {pyramid,tall_diamond,short_diamond,cross}] [--keep_temp_folder KEEP_TEMP_FOLDER]\n                ffprobe_file_path ffmpeg_file_path input_folder_path output_folder_path\n\npositional arguments:\n  ffprobe_file_path     full path to ffprobe binary\n  ffmpeg_file_path      full path to ffmpeg binary\n  input_folder_path     full path to the video folder containing timestamped folders\n  output_folder_path    full path of the output folder for merged files and temporary work folder\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --codec {hevc_nvenc,libx265}\n                        codec to use for encoding\n  --preset PRESET       preset to use for encoding\n  --reduce REDUCE       percent to reduce video to\n  --layout {pyramid,tall_diamond,short_diamond,cross}\n                        camera layout\n  --keep_temp_folder KEEP_TEMP_FOLDER\n                        keep temporary working folder after extraction\n</code></pre>\n<p>API Usage</p>\n<pre><code>import teslacam\nfrom teslacam import *\n\ndef main():\n  print(f\"Available layouts: {', '.join(teslacam.constants.LAYOUT.keys())}\")\n  print(f'Available codecs: {teslacam.constants.CODEC_OPTIONS.items()}')\n\n  extract_videos(\n    FFMpegPaths(\n      r'some_ffmpeg_path\\ffprobe.exe', # path to ffprobe\n      r'some_ffmpeg_path\\ffmpeg.exe'   # path to ffmpeg\n    ),\n    LayoutOptions(\n      'hevc_nvenc', # Codec name\n      'fast',       # Codec preset\n      'pyramid',    # Layout name\n      DONT_REDUCE   # Percentage value from 1-100 (or DONT_REDUCE constant)\n    ),\n    BaseFolderPaths(\n      r'g:\\TeslaCam\\SentryClips',   # Path to your USB stick\n      r'c:\\users\\user\\videos\\tesla' # Destination path\n    ),\n    True  # Keep temporary working folder\n  )\n\nif __name__ == '__main__':\n  main()\n</code></pre>\n\n          </div>"}, "last_serial": 6128029, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9cb946e79f9a57ecae9abd44e2bebaca", "sha256": "bad589738a9de07f21db1e264ded15de5f1bd5585b8a0e919c3c5d8905e144cf"}, "downloads": -1, "filename": "teslacam-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "9cb946e79f9a57ecae9abd44e2bebaca", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11115, "upload_time": "2019-10-31T05:18:08", "upload_time_iso_8601": "2019-10-31T05:18:08.852890Z", "url": "https://files.pythonhosted.org/packages/1a/2e/bddde1e6de0a8ca1db3e120f4e6f2a4d21ede0bb9269b1fb16975ac4b54c/teslacam-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "21b7bfcbdb317e158c2d4eec5643cb4a", "sha256": "9a24b08672d0f9fc8e259d8214e40639fc5aae137056d9793d29778c08f89e3b"}, "downloads": -1, "filename": "teslacam-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "21b7bfcbdb317e158c2d4eec5643cb4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11480, "upload_time": "2019-11-13T05:28:53", "upload_time_iso_8601": "2019-11-13T05:28:53.968898Z", "url": "https://files.pythonhosted.org/packages/57/db/fac65e95469b04e764d94d8884245de3f476cdeb6edd1cd4afc2daccb33a/teslacam-1.0.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "21b7bfcbdb317e158c2d4eec5643cb4a", "sha256": "9a24b08672d0f9fc8e259d8214e40639fc5aae137056d9793d29778c08f89e3b"}, "downloads": -1, "filename": "teslacam-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "21b7bfcbdb317e158c2d4eec5643cb4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.8", "size": 11480, "upload_time": "2019-11-13T05:28:53", "upload_time_iso_8601": "2019-11-13T05:28:53.968898Z", "url": "https://files.pythonhosted.org/packages/57/db/fac65e95469b04e764d94d8884245de3f476cdeb6edd1cd4afc2daccb33a/teslacam-1.0.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 02:55:44 2020"}