{"info": {"author": "Dennis Terhorst", "author_email": "d.terhorst@fz-juelich.de", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "# Reporter\n\n   This tool helps in gathering and formatting of data into a report. The tool\n   `reporter.py` basically combines YAML data files with Jinja2-based\n   templates.  In this way simple markup versions of your report can be\n   produced. Together with a format converter like [Pandoc](http://pandoc.org)\n   the produced output can then be converted to various target formats (HTML,\n   PDF, ...).\n\n   To keep a good overview which data is acquired for different parts of the\n   report, it is probably a good step to automate the whole workflow with a\n   tool like [snakemake](https://snakemake.readthedocs.io/en/stable/) or other\n   make-like tools.\n\n\n# Install\n\n   The fastest way to install datareport is to use your systems tools:\n\n    pip install datareport\n\n   To use the latest test version check out the test.pypi server:\n\n    pip install --index-url https://test.pypi.org/simple datareport\n\n\n## Requirements\n\n   All required packages are listed in `environment.yaml`. In case you\n   installed datareport via a package management system like pip, anaconda,\n   miniconda, ... all dependencies should already be installed automatically.\n\n\n# Getting Started\n\n   For easing your first steps with datareport a small set of [documented\n   examples](examples/README.md) can be found in the `examples/` folder. The\n   README file gives an overview and you can find the right place to start.\n\n\n## Further reading\n\n   For designing reports you need to know about the templating language and\n   since you will want to use some automation for the reporting process, also a\n   make-like tool is very helpful. Look at the excellent `snakemake` for that!\n\n   * [Jinja2](http://jinja.pocoo.org/docs/2.10/) (\u2192 [templating\n     language](http://jinja.pocoo.org/docs/2.10/templates/))\n\n   * [Snakemake](https://pypi.org/project/snakemake/) (\u2192 [writing\n     rules](https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html))\n\n   As data inputs you can use different formats. For understanding the details\n   about each format you find a lot of information on the web, especially:\n\n   * YAML (\u2192 [specification](http://yaml.org/spec/)) and the\n     [ruamel.yaml](https://yaml.readthedocs.io/en/latest/basicuse.html)\n     package.\n   * JSON (\u2192 [specification](https://json.org/))\n\n\n# Developing datareport\n\n   Contributions are very welcome! Write issues for feature requests or\n   directly file a pull-request with your contribution and/or contact me\n   directly!\n\n\n## Tests\n\n   This project uses the [PyTest framework](https://docs.pytest.org/en/latest/)\n   with tests defined in the [tests/](tests/) sudirectory. It is added into the\n   setuptools config, so that it can be run with\n\n    python setup.py test\n\n   This automatically tests a temporarily packaged version.\n\n   Alternatively you can run `pytest` manually with all it [glory\n   details](https://docs.pytest.org/en/latest/usage.html).\n\n\n## Releases\n\n   The release workflow is mostly automated and is in the [release/](release/)\n   folder.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/INM-6/datareport", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "datareport", "package_url": "https://pypi.org/project/datareport/", "platform": "", "project_url": "https://pypi.org/project/datareport/", "project_urls": {"Homepage": "https://github.com/INM-6/datareport"}, "release_url": "https://pypi.org/project/datareport/0.1.7/", "requires_dist": null, "requires_python": "", "summary": "Tool to combine YAML datasets with Jinja2-based templates.", "version": "0.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Reporter</p>\n<blockquote>\n<p>This tool helps in gathering and formatting of data into a report. The tool\n<cite>reporter.py</cite> basically combines YAML data files with Jinja2-based\ntemplates.  In this way simple markup versions of your report can be\nproduced. Together with a format converter like [Pandoc](<a href=\"http://pandoc.org\" rel=\"nofollow\">http://pandoc.org</a>)\nthe produced output can then be converted to various target formats (HTML,\nPDF, \u2026).</p>\n<p>To keep a good overview which data is acquired for different parts of the\nreport, it is probably a good step to automate the whole workflow with a\ntool like [snakemake](<a href=\"https://snakemake.readthedocs.io/en/stable/\" rel=\"nofollow\">https://snakemake.readthedocs.io/en/stable/</a>) or other\nmake-like tools.</p>\n</blockquote>\n<p># Install</p>\n<blockquote>\n<p>The fastest way to install datareport is to use your systems tools:</p>\n<blockquote>\npip install datareport</blockquote>\n<p>To use the latest test version check out the test.pypi server:</p>\n<blockquote>\npip install \u2013index-url <a href=\"https://test.pypi.org/simple\" rel=\"nofollow\">https://test.pypi.org/simple</a> datareport</blockquote>\n</blockquote>\n<p>## Requirements</p>\n<blockquote>\nAll required packages are listed in <cite>environment.yaml</cite>. In case you\ninstalled datareport via a package management system like pip, anaconda,\nminiconda, \u2026 all dependencies should already be installed automatically.</blockquote>\n<p># Getting Started</p>\n<blockquote>\nFor easing your first steps with datareport a small set of [documented\nexamples](examples/README.md) can be found in the <cite>examples/</cite> folder. The\nREADME file gives an overview and you can find the right place to start.</blockquote>\n<p>## Further reading</p>\n<blockquote>\n<p>For designing reports you need to know about the templating language and\nsince you will want to use some automation for the reporting process, also a\nmake-like tool is very helpful. Look at the excellent <cite>snakemake</cite> for that!</p>\n<ul>\n<li>[Jinja2](<a href=\"http://jinja.pocoo.org/docs/2.10/\" rel=\"nofollow\">http://jinja.pocoo.org/docs/2.10/</a>) (\u2192 [templating\nlanguage](<a href=\"http://jinja.pocoo.org/docs/2.10/templates/\" rel=\"nofollow\">http://jinja.pocoo.org/docs/2.10/templates/</a>))</li>\n<li>[Snakemake](<a href=\"https://pypi.org/project/snakemake/\" rel=\"nofollow\">https://pypi.org/project/snakemake/</a>) (\u2192 [writing\nrules](<a href=\"https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html\" rel=\"nofollow\">https://snakemake.readthedocs.io/en/stable/snakefiles/rules.html</a>))</li>\n</ul>\n<p>As data inputs you can use different formats. For understanding the details\nabout each format you find a lot of information on the web, especially:</p>\n<ul>\n<li>YAML (\u2192 [specification](<a href=\"http://yaml.org/spec/\" rel=\"nofollow\">http://yaml.org/spec/</a>)) and the\n[ruamel.yaml](<a href=\"https://yaml.readthedocs.io/en/latest/basicuse.html\" rel=\"nofollow\">https://yaml.readthedocs.io/en/latest/basicuse.html</a>)\npackage.</li>\n<li>JSON (\u2192 [specification](<a href=\"https://json.org/\" rel=\"nofollow\">https://json.org/</a>))</li>\n</ul>\n</blockquote>\n<p># Developing datareport</p>\n<blockquote>\nContributions are very welcome! Write issues for feature requests or\ndirectly file a pull-request with your contribution and/or contact me\ndirectly!</blockquote>\n<p>## Tests</p>\n<blockquote>\n<p>This project uses the [PyTest framework](<a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">https://docs.pytest.org/en/latest/</a>)\nwith tests defined in the [tests/](tests/) sudirectory. It is added into the\nsetuptools config, so that it can be run with</p>\n<blockquote>\npython setup.py test</blockquote>\n<p>This automatically tests a temporarily packaged version.</p>\n<p>Alternatively you can run <cite>pytest</cite> manually with all it [glory\ndetails](<a href=\"https://docs.pytest.org/en/latest/usage.html\" rel=\"nofollow\">https://docs.pytest.org/en/latest/usage.html</a>).</p>\n</blockquote>\n<p>## Releases</p>\n<blockquote>\nThe release workflow is mostly automated and is in the [release/](release/)\nfolder.</blockquote>\n\n          </div>"}, "last_serial": 5118857, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "5015f9f269b99ef1a0798d1cb3bb137b", "sha256": "e4390529aee64d5b2111535f970e5451f69c5c6a945b53be9c93192dfe387700"}, "downloads": -1, "filename": "datareport-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5015f9f269b99ef1a0798d1cb3bb137b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6131, "upload_time": "2018-08-20T13:46:34", "upload_time_iso_8601": "2018-08-20T13:46:34.475487Z", "url": "https://files.pythonhosted.org/packages/e2/57/45976cf63311ecf88d916960c65cc88f987f4f49f7fe8a2f13b2786c4551/datareport-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b038ab89e00c602d5c5f6dbcd058f203", "sha256": "0dba6aa2460865eff3514e0fc27186d1610ba339a4f9567e7b71c3f475dbdb6b"}, "downloads": -1, "filename": "datareport-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b038ab89e00c602d5c5f6dbcd058f203", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6205, "upload_time": "2018-08-20T15:26:00", "upload_time_iso_8601": "2018-08-20T15:26:00.661992Z", "url": "https://files.pythonhosted.org/packages/eb/8a/1fe3666a3ee0062b290e29b7c4b08c44b8df7e051caf6e4c853201501522/datareport-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "04dd9d6c25f1ee1408088fdff5a56907", "sha256": "6a945bd90388e0b0a5257751a7d123dbc179d2171f504d0bdd8a4ad14a01dd99"}, "downloads": -1, "filename": "datareport-0.1.4.tar.gz", "has_sig": false, "md5_digest": "04dd9d6c25f1ee1408088fdff5a56907", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6839, "upload_time": "2018-09-23T13:19:42", "upload_time_iso_8601": "2018-09-23T13:19:42.020307Z", "url": "https://files.pythonhosted.org/packages/90/30/c4419602277e98cde026eecde8f319f16256ad79f80bd6a739d0b6c2c588/datareport-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b7ed6d6b8d210b975abc8ad2f01ed66d", "sha256": "d7c459dd2d11257f3cf25b01fea9299d3501e6289bf5265abedde8b402cbb33b"}, "downloads": -1, "filename": "datareport-0.1.5.tar.gz", "has_sig": false, "md5_digest": "b7ed6d6b8d210b975abc8ad2f01ed66d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7191, "upload_time": "2018-09-27T17:09:40", "upload_time_iso_8601": "2018-09-27T17:09:40.329205Z", "url": "https://files.pythonhosted.org/packages/96/a9/16cab5dff8f772f7178139b8fe77b6484154c790768dfa553f456c294092/datareport-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "84fb4ee9127ce558bf2ee6f1b18e66e4", "sha256": "4cf2133ac3b37906589c623245a7c558fc50afec3c14ccc20ffb5a39bd2d669e"}, "downloads": -1, "filename": "datareport-0.1.6.tar.gz", "has_sig": false, "md5_digest": "84fb4ee9127ce558bf2ee6f1b18e66e4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7480, "upload_time": "2018-09-28T13:13:09", "upload_time_iso_8601": "2018-09-28T13:13:09.021030Z", "url": "https://files.pythonhosted.org/packages/34/df/7197d8c8c1270407318ec33f564116a2c4d88d3f9f01b91e9789c70783d4/datareport-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "8c642d0cd6a6225df1665de9fefedc29", "sha256": "5b3620697acb723ebc486a40509141958519831195add1813eb02017436dfa86"}, "downloads": -1, "filename": "datareport-0.1.7.tar.gz", "has_sig": false, "md5_digest": "8c642d0cd6a6225df1665de9fefedc29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7475, "upload_time": "2019-04-09T13:53:56", "upload_time_iso_8601": "2019-04-09T13:53:56.834523Z", "url": "https://files.pythonhosted.org/packages/06/27/26952ee47a1a3ab312b055edf64d010d013135c7c90cedf4cc52af436e97/datareport-0.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8c642d0cd6a6225df1665de9fefedc29", "sha256": "5b3620697acb723ebc486a40509141958519831195add1813eb02017436dfa86"}, "downloads": -1, "filename": "datareport-0.1.7.tar.gz", "has_sig": false, "md5_digest": "8c642d0cd6a6225df1665de9fefedc29", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7475, "upload_time": "2019-04-09T13:53:56", "upload_time_iso_8601": "2019-04-09T13:53:56.834523Z", "url": "https://files.pythonhosted.org/packages/06/27/26952ee47a1a3ab312b055edf64d010d013135c7c90cedf4cc52af436e97/datareport-0.1.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:14 2020"}