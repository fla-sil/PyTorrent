{"info": {"author": "Will Farley", "author_email": "a.will.farley@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development"], "description": "Cookiecutter-webpack\n====================\n\nBoilerplate for setting up webpack 2 configuration with hot reloading, babel for es6 modules, react + redux.\n\n\nGetting Started\n---------------\n\nDownload `cookiecutter` to a global python path\n\n    $ pip install cookiecutter\n\nIn your project directory run\n\n    $ cookiecutter git@github.com:hzdg/cookiecutter-webpack.git\n\nAnswer the prompts then `cd` into your newly created project directory.\n\nInstall npm packages\n\n    $ npm install\n\nStart the server\n\n    $ npm start\n\nYou will have a React / Redux counter app running with redux dev-tools. See the generated `README.md` for an explanation of the react / redux project structure.\n\nIntegrating into existing projects\n----------------------------------\n\nYou can chain this into an existing cookiecutter project by installing via the projects `./hooks/post_gen_project.py` file or just installing it via the command line.\n\n### Using post hooks\nHere is a django project post hook example that chains this through a django cookiecutter project.\n\n\tfrom cookiecutter.main import cookiecutter\n\n    cookiecutter(\n        'git@github.com:hzdg/cookiecutter-webpack.git',\n        replay=False, overwrite_if_exists=True, output_dir='../',\n        checkout=None, no_input=True, extra_context={\n            'project_name': '{{ cookiecutter.project_name }}',\n            'repo_name': '{{ cookiecutter.repo_name }}',\n            'repo_owner': 'hzdg',\n            'static_root': '{{ cookiecutter.project_dir }}/static/{{ cookiecutter.project_dir }}',\n            'local_output_path': '{{ cookiecutter.project_dir }}/static/{{ cookiecutter.project_dir }}/bundles/',\n            'production_output_path': '{{ cookiecutter.project_dir }}/static/{{ cookiecutter.project_dir }}/dist/',\n            'author_name': '{{ cookiecutter.author_name }}',\n            'email': '{{ cookiecutter.email }}',\n            'description': '{{ cookiecutter.description }}',\n            'version': '{{ cookiecutter.version }}',\n            'existing_project': 'y'\n        })\n\nThe flag `existing_project` will move/remove some files and dependencies and also add supporting configurations for a django project.\n\n### Using command line\nJust make sure you use the `--overwrite-if-exists` [ or `-f`] flag so cookiecutter can work within your existing project structure. You will also probably want to point to your existing projects parent directory and make sure you use the same `repo_name` as the project directory so your `package.json` files are installed at the project root.\n\n\tcookiecutter -f -output-dir ../ git@github.com:hzdg/cookiecutter-webpack.git\n\n\nContributing\n------------\n\nAccepting pull requests!\n\nClone the project:\n```sh\n$ git clone git@github.com:hzdg/cookiecutter-webpack.git\n```\nInstall python and npm dependencies:\n```sh\n$ pip install -r requirements.txt && npm install\n```\nRun build tests:\n```sh\n$ npm test\n```\n\n\n# Change Log\nAll enhancements and patches to Cookiecutter Django will be documented in this file.\nThis project adheres to [Semantic Versioning](http://semver.org/).\n\n\n### [2016-06-07]\n### Added\n- Eslint ignore for tests (@goldhand)\n- Eslint-loader to local config (@goldhand)\n- Dependencies (pypi and npm) (@goldhand)\n- Py.tests for default and existing_project builds (@golhand)\n- Py.tests to check builds comply to their .eslint config (@goldhand)\n\n### Changed\n- Webpack configs are nested in `./config/` directory (@goldhand)\n\n\n### [2016-05-29]\n### Fix\n- Lint errors on webpack configs (@goldhand)\n\n### Removed\n- Redux DevTools from production (@goldhand)\n- Devtools filter monitor (@goldhand)\n\n\n### [2016-05-05]\n### Added\n- React-devtools notes to Readme (@goldhand)\n- Force-case-sensitivity-webpack-plugin to webpack local config (@goldhand)\n- Less and less loader to requirements (@goldhand)\n- Less file to counter demo (@goldhand)\n\n### Fix\n- App.js casing (@goldhand)\n\n### Changed\n- Counter demo component to have its own directory (@goldhand)\n\n\n### [2016-05-04]\n### Added\n- Redux-react configurations (@goldhand)\n- Test commands to npm (@goldhand)\n- Package requirements to include redux-react requirements (@goldhand)\n- Redux-react counter demo application (@goldhand)\n- Redux dev tools (@goldhand)\n\n### Changed\n- Readme to reflect redux-react application structure (@goldhand)", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hzdg/cookiecutter-webpack", "keywords": "cookiecutter,Python,projects,project templates,django,skeleton,scaffolding,project directory,setup.py", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "cookiecutter-webpack", "package_url": "https://pypi.org/project/cookiecutter-webpack/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cookiecutter-webpack/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hzdg/cookiecutter-webpack"}, "release_url": "https://pypi.org/project/cookiecutter-webpack/0.2.0/", "requires_dist": null, "requires_python": null, "summary": "Boilerplate for setting up webpack 2 configuration with hot reloading, babel for es6 modules, react + redux.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Cookiecutter-webpack<br>====================<br><br>Boilerplate for setting up webpack 2 configuration with hot reloading, babel for es6 modules, react + redux.<br><br><br>Getting Started<br>---------------<br><br>Download `cookiecutter` to a global python path<br><br>    $ pip install cookiecutter<br><br>In your project directory run<br><br>    $ cookiecutter git@github.com:hzdg/cookiecutter-webpack.git<br><br>Answer the prompts then `cd` into your newly created project directory.<br><br>Install npm packages<br><br>    $ npm install<br><br>Start the server<br><br>    $ npm start<br><br>You will have a React / Redux counter app running with redux dev-tools. See the generated `README.md` for an explanation of the react / redux project structure.<br><br>Integrating into existing projects<br>----------------------------------<br><br>You can chain this into an existing cookiecutter project by installing via the projects `./hooks/post_gen_project.py` file or just installing it via the command line.<br><br>### Using post hooks<br>Here is a django project post hook example that chains this through a django cookiecutter project.<br><br>\tfrom cookiecutter.main import cookiecutter<br><br>    cookiecutter(<br>        'git@github.com:hzdg/cookiecutter-webpack.git',<br>        replay=False, overwrite_if_exists=True, output_dir='../',<br>        checkout=None, no_input=True, extra_context={<br>            'project_name': '{{ cookiecutter.project_name }}',<br>            'repo_name': '{{ cookiecutter.repo_name }}',<br>            'repo_owner': 'hzdg',<br>            'static_root': '{{ cookiecutter.project_dir }}/static/{{ cookiecutter.project_dir }}',<br>            'local_output_path': '{{ cookiecutter.project_dir }}/static/{{ cookiecutter.project_dir }}/bundles/',<br>            'production_output_path': '{{ cookiecutter.project_dir }}/static/{{ cookiecutter.project_dir }}/dist/',<br>            'author_name': '{{ cookiecutter.author_name }}',<br>            'email': '{{ cookiecutter.email }}',<br>            'description': '{{ cookiecutter.description }}',<br>            'version': '{{ cookiecutter.version }}',<br>            'existing_project': 'y'<br>        })<br><br>The flag `existing_project` will move/remove some files and dependencies and also add supporting configurations for a django project.<br><br>### Using command line<br>Just make sure you use the `--overwrite-if-exists` [ or `-f`] flag so cookiecutter can work within your existing project structure. You will also probably want to point to your existing projects parent directory and make sure you use the same `repo_name` as the project directory so your `package.json` files are installed at the project root.<br><br>\tcookiecutter -f -output-dir ../ git@github.com:hzdg/cookiecutter-webpack.git<br><br><br>Contributing<br>------------<br><br>Accepting pull requests!<br><br>Clone the project:<br>```sh<br>$ git clone git@github.com:hzdg/cookiecutter-webpack.git<br>```<br>Install python and npm dependencies:<br>```sh<br>$ pip install -r requirements.txt &amp;&amp; npm install<br>```<br>Run build tests:<br>```sh<br>$ npm test<br>```<br><br><br># Change Log<br>All enhancements and patches to Cookiecutter Django will be documented in this file.<br>This project adheres to [Semantic Versioning](http://semver.org/).<br><br><br>### [2016-06-07]<br>### Added<br>- Eslint ignore for tests (@goldhand)<br>- Eslint-loader to local config (@goldhand)<br>- Dependencies (pypi and npm) (@goldhand)<br>- Py.tests for default and existing_project builds (@golhand)<br>- Py.tests to check builds comply to their .eslint config (@goldhand)<br><br>### Changed<br>- Webpack configs are nested in `./config/` directory (@goldhand)<br><br><br>### [2016-05-29]<br>### Fix<br>- Lint errors on webpack configs (@goldhand)<br><br>### Removed<br>- Redux DevTools from production (@goldhand)<br>- Devtools filter monitor (@goldhand)<br><br><br>### [2016-05-05]<br>### Added<br>- React-devtools notes to Readme (@goldhand)<br>- Force-case-sensitivity-webpack-plugin to webpack local config (@goldhand)<br>- Less and less loader to requirements (@goldhand)<br>- Less file to counter demo (@goldhand)<br><br>### Fix<br>- App.js casing (@goldhand)<br><br>### Changed<br>- Counter demo component to have its own directory (@goldhand)<br><br><br>### [2016-05-04]<br>### Added<br>- Redux-react configurations (@goldhand)<br>- Test commands to npm (@goldhand)<br>- Package requirements to include redux-react requirements (@goldhand)<br>- Redux-react counter demo application (@goldhand)<br>- Redux dev tools (@goldhand)<br><br>### Changed<br>- Readme to reflect redux-react application structure (@goldhand)\n          </div>"}, "last_serial": 2155836, "releases": {"0.2.0": []}, "urls": [], "timestamp": "Fri May  8 00:43:23 2020"}