{"info": {"author": "hs_seo", "author_email": "fluorite118@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "This is Python Library for Oozie Web service api.\n\nThis project follows the [Oozie 4.2.0 WebServicesAPI](https://oozie.apache.org/docs/4.2.0/WebServicesAPI.html) document.\n\nUsage\n=====\n\nInstall it::\n\n    pip install oozie-webservice-api\n\nUsage::\n\n    from oozie import OozieWebService\n    import json\n    '''\n    Ooize Web Service Test\n\n    @author: hs_seo\n    @since: 2019.06.18\n    '''\n\n\n    if __name__ == \"__main__\":\n\n        rerun_xml = '''<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <configuration>\n        <property><name>user.name</name><value>hadoop</value></property>\n    </configuration>\n    '''\n\n        submit_xml = '''<?xml version=\"1.0\" encoding=\"UTF-8\"?>\n    <property><name>user.name</name><value>hadoop</value></property>\n    </configuration>\n    '''\n\n        update_xml = \"\"\"<configuration>\n    <property><name>user.name</name><value>hadoop</value></property>\n    </configuration>\"\"\"\n\n\n        # https://oozie.apache.org/docs/4.2.0/WebServicesAPI.html\n        oozie = OozieWebService(\"http://localhost:11000\")\n\n        ## Versions - all json return\n        return_obj = oozie.version.oozie_versions()\n\n        ## Admin - all json return\n        return_obj = oozie.admin.status()\n        return_obj = oozie.admin.status('NORMAL')\n        return_obj = oozie.admin.os_env()\n        return_obj = oozie.admin.java_sys_properties()\n        return_obj = oozie.admin.configuration()\n        return_obj = oozie.admin.instrumentation()\n        return_obj = oozie.admin.metrics()    # if metric enable\n        return_obj = oozie.admin.build_version()\n        return_obj = oozie.admin.available_timezones()\n        return_obj = oozie.admin.queue_dump()\n        return_obj = oozie.admin.available_oozie_servers()\n        return_obj = oozie.admin.list_sharelib()\n        return_obj = oozie.admin.list_sharelib(\"pig\")\n        return_obj = oozie.admin.update_sharelib()\n\n        ## Jobs\n        #filters = oozie.jobs.Filters()\n\n        # Job Submission\n        return_obj = oozie.jobs.submit_job(submit_xml)                           # start ok\n        return_obj = oozie.jobs.submit_job(submit_xml, job_type=\"mapreduce\")    # start ok\n        return_obj = oozie.jobs.info()\n        return_obj = oozie.jobs.info(filters)\n        return_obj = oozie.jobs.managing_jobs(\"kill\", \"coordinator\", filters)      \n\n        ## Job\n        # Managing a Job\n        #co_id = \"C-ID\"\n        #wf_id = \"W-ID\"\n        return_obj = oozie.job.managing_job(wf_id, 'start')                 # start ok\n        return_obj = oozie.job.managing_rerun_workflow(wf_id, rerun_xml)    # rerun ok\n        return_obj = oozie.job.rerun_coordinator_on_action(co_id, \"1\")      # rerun ok\n        return_obj = oozie.job.rerun_coordinator_on_date(co_id, \"2019-05-22T16:00Z\", \"2019-05-22T16:00Z\")    # rerun ok\n        return_obj = oozie.job.change_coordinator_concurrency(co_id, 2)\n        return_obj = oozie.job.change_coordinator_endtime(co_id, \"2019-06-02T16:00Z\")\n        return_obj = oozie.job.change_coordinator_pausetime(co_id, \"2019-06-01T16:00Z\")\n        return_obj = oozie.job.update_coordinator(co_id, update_xml)\n\n        # filter\n        #filters = oozie.job.Filters()\n        #filters.len = 100\n\n        # Log Fiter\n        #log_filters = oozie.job.LogFilters()\n\n        return_obj = oozie.job.job_info(wf_id)\n        return_obj = oozie.job.job_info(co_id)\n        return_obj = oozie.job.job_info(co_id, filters)\n        return_obj = oozie.job.coordinator_allruns(co_id, \"1\")\n        return_obj = oozie.job.coordinator_allruns(co_id, \"1\", filters)\n\n        return_obj = oozie.job.job_definition(wf_id)\n        return_obj = oozie.job.job_log(wf_id)  # txt return\n        return_obj = oozie.job.job_log(wf_id)  # txt return\n        return_obj = oozie.job.job_log(wf_id, filters=log_filters)  # txt return\n        return_obj = oozie.job.job_log(wf_id, \"errorlog\")  # txt return\n        return_obj = oozie.job.job_log(wf_id, \"auditlog\")  # txt return\n        return_obj = oozie.job.job_status(wf_id)\n        return_obj = oozie.job.job_graph(wf_id, file_over_write=True)\n\n\n        if return_obj.isok:\n            print(return_obj.info.url)\n\n            if \"Content-Type\" in return_obj.headers and \"application/json\" in return_obj.headers[\"Content-Type\"]:\n                json_obj = json.loads(return_obj.body)\n                print(json.dumps(json_obj, indent=4, sort_keys=True))\n            else:\n                print(return_obj.body)\n        else:\n            print(return_obj.info.filename)\n            print(return_obj.info.headers['oozie-error-code'])\n            print(return_obj.info.headers['oozie-error-message'])\n            print(return_obj.body)\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/developer-sdk/oozie-webservice-api/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/developer-sdk/oozie-webservice-api", "keywords": "oozie,webservice,api", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "oozie-webservice-api", "package_url": "https://pypi.org/project/oozie-webservice-api/", "platform": "", "project_url": "https://pypi.org/project/oozie-webservice-api/", "project_urls": {"Download": "https://github.com/developer-sdk/oozie-webservice-api/archive/master.zip", "Homepage": "https://github.com/developer-sdk/oozie-webservice-api"}, "release_url": "https://pypi.org/project/oozie-webservice-api/1.2.0/", "requires_dist": null, "requires_python": "", "summary": "Python wrapper for Oozie Webservice REST API", "version": "1.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is Python Library for Oozie Web service api.</p>\n<p>This project follows the [Oozie 4.2.0 WebServicesAPI](<a href=\"https://oozie.apache.org/docs/4.2.0/WebServicesAPI.html\" rel=\"nofollow\">https://oozie.apache.org/docs/4.2.0/WebServicesAPI.html</a>) document.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Install it:</p>\n<pre>pip install oozie-webservice-api\n</pre>\n<p>Usage:</p>\n<pre>from oozie import OozieWebService\nimport json\n'''\nOoize Web Service Test\n\n@author: hs_seo\n@since: 2019.06.18\n'''\n\n\nif __name__ == \"__main__\":\n\n    rerun_xml = '''&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;configuration&gt;\n    &lt;property&gt;&lt;name&gt;user.name&lt;/name&gt;&lt;value&gt;hadoop&lt;/value&gt;&lt;/property&gt;\n&lt;/configuration&gt;\n'''\n\n    submit_xml = '''&lt;?xml version=\"1.0\" encoding=\"UTF-8\"?&gt;\n&lt;property&gt;&lt;name&gt;user.name&lt;/name&gt;&lt;value&gt;hadoop&lt;/value&gt;&lt;/property&gt;\n&lt;/configuration&gt;\n'''\n\n    update_xml = \"\"\"&lt;configuration&gt;\n&lt;property&gt;&lt;name&gt;user.name&lt;/name&gt;&lt;value&gt;hadoop&lt;/value&gt;&lt;/property&gt;\n&lt;/configuration&gt;\"\"\"\n\n\n    # https://oozie.apache.org/docs/4.2.0/WebServicesAPI.html\n    oozie = OozieWebService(\"http://localhost:11000\")\n\n    ## Versions - all json return\n    return_obj = oozie.version.oozie_versions()\n\n    ## Admin - all json return\n    return_obj = oozie.admin.status()\n    return_obj = oozie.admin.status('NORMAL')\n    return_obj = oozie.admin.os_env()\n    return_obj = oozie.admin.java_sys_properties()\n    return_obj = oozie.admin.configuration()\n    return_obj = oozie.admin.instrumentation()\n    return_obj = oozie.admin.metrics()    # if metric enable\n    return_obj = oozie.admin.build_version()\n    return_obj = oozie.admin.available_timezones()\n    return_obj = oozie.admin.queue_dump()\n    return_obj = oozie.admin.available_oozie_servers()\n    return_obj = oozie.admin.list_sharelib()\n    return_obj = oozie.admin.list_sharelib(\"pig\")\n    return_obj = oozie.admin.update_sharelib()\n\n    ## Jobs\n    #filters = oozie.jobs.Filters()\n\n    # Job Submission\n    return_obj = oozie.jobs.submit_job(submit_xml)                           # start ok\n    return_obj = oozie.jobs.submit_job(submit_xml, job_type=\"mapreduce\")    # start ok\n    return_obj = oozie.jobs.info()\n    return_obj = oozie.jobs.info(filters)\n    return_obj = oozie.jobs.managing_jobs(\"kill\", \"coordinator\", filters)\n\n    ## Job\n    # Managing a Job\n    #co_id = \"C-ID\"\n    #wf_id = \"W-ID\"\n    return_obj = oozie.job.managing_job(wf_id, 'start')                 # start ok\n    return_obj = oozie.job.managing_rerun_workflow(wf_id, rerun_xml)    # rerun ok\n    return_obj = oozie.job.rerun_coordinator_on_action(co_id, \"1\")      # rerun ok\n    return_obj = oozie.job.rerun_coordinator_on_date(co_id, \"2019-05-22T16:00Z\", \"2019-05-22T16:00Z\")    # rerun ok\n    return_obj = oozie.job.change_coordinator_concurrency(co_id, 2)\n    return_obj = oozie.job.change_coordinator_endtime(co_id, \"2019-06-02T16:00Z\")\n    return_obj = oozie.job.change_coordinator_pausetime(co_id, \"2019-06-01T16:00Z\")\n    return_obj = oozie.job.update_coordinator(co_id, update_xml)\n\n    # filter\n    #filters = oozie.job.Filters()\n    #filters.len = 100\n\n    # Log Fiter\n    #log_filters = oozie.job.LogFilters()\n\n    return_obj = oozie.job.job_info(wf_id)\n    return_obj = oozie.job.job_info(co_id)\n    return_obj = oozie.job.job_info(co_id, filters)\n    return_obj = oozie.job.coordinator_allruns(co_id, \"1\")\n    return_obj = oozie.job.coordinator_allruns(co_id, \"1\", filters)\n\n    return_obj = oozie.job.job_definition(wf_id)\n    return_obj = oozie.job.job_log(wf_id)  # txt return\n    return_obj = oozie.job.job_log(wf_id)  # txt return\n    return_obj = oozie.job.job_log(wf_id, filters=log_filters)  # txt return\n    return_obj = oozie.job.job_log(wf_id, \"errorlog\")  # txt return\n    return_obj = oozie.job.job_log(wf_id, \"auditlog\")  # txt return\n    return_obj = oozie.job.job_status(wf_id)\n    return_obj = oozie.job.job_graph(wf_id, file_over_write=True)\n\n\n    if return_obj.isok:\n        print(return_obj.info.url)\n\n        if \"Content-Type\" in return_obj.headers and \"application/json\" in return_obj.headers[\"Content-Type\"]:\n            json_obj = json.loads(return_obj.body)\n            print(json.dumps(json_obj, indent=4, sort_keys=True))\n        else:\n            print(return_obj.body)\n    else:\n        print(return_obj.info.filename)\n        print(return_obj.info.headers['oozie-error-code'])\n        print(return_obj.info.headers['oozie-error-message'])\n        print(return_obj.body)\n</pre>\n</div>\n\n          </div>"}, "last_serial": 5507451, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "2067999642ebdae48bc7ea09c7124608", "sha256": "659e3bee4347f22a4c862260b0daf1e78907af59732653cb87605b137fc005ee"}, "downloads": -1, "filename": "oozie_webservice_api-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "2067999642ebdae48bc7ea09c7124608", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 14601, "upload_time": "2018-10-16T11:18:01", "upload_time_iso_8601": "2018-10-16T11:18:01.692220Z", "url": "https://files.pythonhosted.org/packages/f2/8e/1617e310ae465063744b25a1fe77ff43d1dfe8da5ccd9fa4ac0387c740e4/oozie_webservice_api-0.2-py2-none-any.whl", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "8356d1f2f20211e0737d8fd7af229869", "sha256": "9434e25db2b5d72133b0968c3e5c29c61ab65917a43020f4fad425dbef14173f"}, "downloads": -1, "filename": "oozie_webservice_api-0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "8356d1f2f20211e0737d8fd7af229869", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13666, "upload_time": "2018-10-16T11:37:13", "upload_time_iso_8601": "2018-10-16T11:37:13.708828Z", "url": "https://files.pythonhosted.org/packages/bf/7c/d9e0bd01a9c489570490d64cfd1f98390fd9f66207510aaa193c4d9d856e/oozie_webservice_api-0.3-py2-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "9b36da2e0b3953b4eaaffdd24d9cd585", "sha256": "0006b549f3cb2bc1faa41140da97b5b8be0aae52c869538b46c4eabe887fb24f"}, "downloads": -1, "filename": "oozie_webservice_api-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b36da2e0b3953b4eaaffdd24d9cd585", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8327, "upload_time": "2019-07-09T14:23:23", "upload_time_iso_8601": "2019-07-09T14:23:23.906943Z", "url": "https://files.pythonhosted.org/packages/8f/25/622c1660ae8c964b68f4d28dae47f90b708b83730a31ff775055b1f3521a/oozie_webservice_api-1.1.0-py2.py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "07e7ad0611993b7b567e08a81de3ef92", "sha256": "12b8712201564b9bc4454aa173c334f204ddd97ed04c0c104cc3f4867a84eabc"}, "downloads": -1, "filename": "oozie_webservice_api-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07e7ad0611993b7b567e08a81de3ef92", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8327, "upload_time": "2019-07-09T14:27:52", "upload_time_iso_8601": "2019-07-09T14:27:52.662801Z", "url": "https://files.pythonhosted.org/packages/54/2b/9994e636b19bfdeb4c1821f060b9ba71e0787b40d4bdfcec1fd892b7a282/oozie_webservice_api-1.2.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "07e7ad0611993b7b567e08a81de3ef92", "sha256": "12b8712201564b9bc4454aa173c334f204ddd97ed04c0c104cc3f4867a84eabc"}, "downloads": -1, "filename": "oozie_webservice_api-1.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "07e7ad0611993b7b567e08a81de3ef92", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8327, "upload_time": "2019-07-09T14:27:52", "upload_time_iso_8601": "2019-07-09T14:27:52.662801Z", "url": "https://files.pythonhosted.org/packages/54/2b/9994e636b19bfdeb4c1821f060b9ba71e0787b40d4bdfcec1fd892b7a282/oozie_webservice_api-1.2.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:03:39 2020"}