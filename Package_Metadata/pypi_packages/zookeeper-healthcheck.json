{"info": {"author": "Shawn Seymour", "author_email": "shawn@devshawn.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Unix", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Software Development", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# zookeeper-healthcheck\n\n[![Build Status](https://travis-ci.org/devshawn/zookeeper-healthcheck.svg?branch=master)](https://travis-ci.org/devshawn/zookeeper-healthcheck) ![PyPI](https://img.shields.io/pypi/v/zookeeper-healthcheck.svg?color=blue) ![PyPI - Python Version](https://img.shields.io/pypi/pyversions/zookeeper-healthcheck.svg) [![License](https://img.shields.io/badge/License-Apache%202.0-blue.svg)](LICENSE)\n\nA simple healthcheck wrapper to monitor ZooKeeper.\n\nZooKeeper Healthcheck is a simple server that provides a singular API endpoint to determine the health of a ZooKeeper instance. This can be used to alert or take action on unhealthy ZooKeeper instances.\n\nThe service checks the health by sending `netcat` commands as well as checking that ZooKeeper is in a desired mode. It utilizes the commands `echo ruok | nc zookeeper-host zookeeper-port` and `echo stat | nc zookeeper-host zookeeper-port | grep Mode` to do so.\n\nBy default, the root endpoint `/` will return `200 OK` healthy if ZooKeeper responds `imok` and is in mode `leader` or `follower`. It will return `503 Service Unavailable` if ZooKeeper does not respond with `imok` or if its in an undesired mode (by default `standalone`).\n\n## Usage\nZooKeeper Healthcheck can be installed via `pip`. Both `python` and `pip` are required, as well as `echo`, `nc` and `grep`. \n\n### Command-Line\nInstall `zookeeper-healthcheck` via `pip`:\n\n```bash\npip install zookeeper-healthcheck\n```\n\nTo start the healthcheck server, run:\n\n```bash\nzookeeper-healthcheck\n```\n\nThe server will now be running on [localhost:12181][localhost].\n\n## Configuration\nZooKeeper Healthcheck can be configured via command-line arguments or by environment variables. \n\n#### Port\nThe port for the `zookeeper-healthcheck` API.\n\n| Usage                 | Value              |\n|-----------------------|--------------------|\n| Environment Variable  | `HEALTHCHECK_PORT` |\n| Command-Line Argument | `--port`           |\n| Default Value         | `12181`            |\n\n#### ZooKeeper Host\nThe host of the ZooKeeper instance to run the health check against. This is used with `nc`.\n\n| Usage                 | Value                        |\n|-----------------------|------------------------------|\n| Environment Variable  | `HEALTHCHECK_ZOOKEEPER_HOST` |\n| Command-Line Argument | `--zookeeper-host`           |\n| Default Value         | `localhost`                  |\n\n#### ZooKeeper Port\nThe port of the ZooKeeper instance to run the health check against. This is used with `nc`.\n\n| Usage                 | Value                        |\n|-----------------------|------------------------------|\n| Environment Variable  | `HEALTHCHECK_ZOOKEEPER_PORT` |\n| Command-Line Argument | `--zookeeper-port`           |\n| Default Value         | `2181`                       |\n\n#### Healthy Modes\nA comma-separated list of ZooKeeper modes to be marked as healthy. Any modes not in this list will mark ZooKeeper as unhealthy. \n\n| Usage                 | Value                                       |\n|-----------------------|---------------------------------------------|\n| Environment Variable  | `HEALTHCHECK_HEALTHY_MODES`                 |\n| Command-Line Argument | `--healthy-modes`                           |\n| Default Value         | `leader,follower`                           |\n| Valid Values          | `leader`, `follower`, `standalone`          |\n\n#### Log Level\nThe level of logs to be shown by the application.\n\n| Usage                 | Value                                       |\n|-----------------------|---------------------------------------------|\n| Environment Variable  | `HEALTHCHECK_LOG_LEVEL`                     |\n| Command-Line Argument | `--log-level`                               |\n| Default Value         | `INFO`                                      |\n| Valid Values          | `DEBUG`, `INFO`, `WARNING`, `ERROR`         |\n\nAll healthy responses are logged at `INFO`. Unhealthy responses are logged at `WARNING`. Any unexpected errors are logged at `ERROR`.\n\n## License\nCopyright (c) 2019 Shawn Seymour.\n\nLicensed under the [Apache 2.0 license][license].\n\n[localhost]: http://localhost:12181\n[license]: LICENSE\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/devshawn/zookeeper-healthcheck", "keywords": "zookeeper,health,healthcheck,wrapper,monitor", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "zookeeper-healthcheck", "package_url": "https://pypi.org/project/zookeeper-healthcheck/", "platform": "", "project_url": "https://pypi.org/project/zookeeper-healthcheck/", "project_urls": {"Homepage": "https://github.com/devshawn/zookeeper-healthcheck"}, "release_url": "https://pypi.org/project/zookeeper-healthcheck/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "A simple healthcheck wrapper to monitor zookeeper.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>zookeeper-healthcheck</h1>\n<p><a href=\"https://travis-ci.org/devshawn/zookeeper-healthcheck\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/eb7adaf883602dbc8512f8cd212b4d12933ec09e/68747470733a2f2f7472617669732d63692e6f72672f646576736861776e2f7a6f6f6b65657065722d6865616c7468636865636b2e7376673f6272616e63683d6d6173746572\"></a> <img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6d8ae2c242c48443e437bbe734e2861273d27ede/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7a6f6f6b65657065722d6865616c7468636865636b2e7376673f636f6c6f723d626c7565\"> <img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df5251d44f19de5eee27ee43ecfa6e55fe58b7cd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7a6f6f6b65657065722d6865616c7468636865636b2e737667\"> <a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b97ca76cf5d8fd16c7bc4731270e0bbe53df7aa1/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d417061636865253230322e302d626c75652e737667\"></a></p>\n<p>A simple healthcheck wrapper to monitor ZooKeeper.</p>\n<p>ZooKeeper Healthcheck is a simple server that provides a singular API endpoint to determine the health of a ZooKeeper instance. This can be used to alert or take action on unhealthy ZooKeeper instances.</p>\n<p>The service checks the health by sending <code>netcat</code> commands as well as checking that ZooKeeper is in a desired mode. It utilizes the commands <code>echo ruok | nc zookeeper-host zookeeper-port</code> and <code>echo stat | nc zookeeper-host zookeeper-port | grep Mode</code> to do so.</p>\n<p>By default, the root endpoint <code>/</code> will return <code>200 OK</code> healthy if ZooKeeper responds <code>imok</code> and is in mode <code>leader</code> or <code>follower</code>. It will return <code>503 Service Unavailable</code> if ZooKeeper does not respond with <code>imok</code> or if its in an undesired mode (by default <code>standalone</code>).</p>\n<h2>Usage</h2>\n<p>ZooKeeper Healthcheck can be installed via <code>pip</code>. Both <code>python</code> and <code>pip</code> are required, as well as <code>echo</code>, <code>nc</code> and <code>grep</code>.</p>\n<h3>Command-Line</h3>\n<p>Install <code>zookeeper-healthcheck</code> via <code>pip</code>:</p>\n<pre>pip install zookeeper-healthcheck\n</pre>\n<p>To start the healthcheck server, run:</p>\n<pre>zookeeper-healthcheck\n</pre>\n<p>The server will now be running on <a href=\"http://localhost:12181\" rel=\"nofollow\">localhost:12181</a>.</p>\n<h2>Configuration</h2>\n<p>ZooKeeper Healthcheck can be configured via command-line arguments or by environment variables.</p>\n<h4>Port</h4>\n<p>The port for the <code>zookeeper-healthcheck</code> API.</p>\n<table>\n<thead>\n<tr>\n<th>Usage</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Environment Variable</td>\n<td><code>HEALTHCHECK_PORT</code></td>\n</tr>\n<tr>\n<td>Command-Line Argument</td>\n<td><code>--port</code></td>\n</tr>\n<tr>\n<td>Default Value</td>\n<td><code>12181</code></td>\n</tr></tbody></table>\n<h4>ZooKeeper Host</h4>\n<p>The host of the ZooKeeper instance to run the health check against. This is used with <code>nc</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Usage</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Environment Variable</td>\n<td><code>HEALTHCHECK_ZOOKEEPER_HOST</code></td>\n</tr>\n<tr>\n<td>Command-Line Argument</td>\n<td><code>--zookeeper-host</code></td>\n</tr>\n<tr>\n<td>Default Value</td>\n<td><code>localhost</code></td>\n</tr></tbody></table>\n<h4>ZooKeeper Port</h4>\n<p>The port of the ZooKeeper instance to run the health check against. This is used with <code>nc</code>.</p>\n<table>\n<thead>\n<tr>\n<th>Usage</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Environment Variable</td>\n<td><code>HEALTHCHECK_ZOOKEEPER_PORT</code></td>\n</tr>\n<tr>\n<td>Command-Line Argument</td>\n<td><code>--zookeeper-port</code></td>\n</tr>\n<tr>\n<td>Default Value</td>\n<td><code>2181</code></td>\n</tr></tbody></table>\n<h4>Healthy Modes</h4>\n<p>A comma-separated list of ZooKeeper modes to be marked as healthy. Any modes not in this list will mark ZooKeeper as unhealthy.</p>\n<table>\n<thead>\n<tr>\n<th>Usage</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Environment Variable</td>\n<td><code>HEALTHCHECK_HEALTHY_MODES</code></td>\n</tr>\n<tr>\n<td>Command-Line Argument</td>\n<td><code>--healthy-modes</code></td>\n</tr>\n<tr>\n<td>Default Value</td>\n<td><code>leader,follower</code></td>\n</tr>\n<tr>\n<td>Valid Values</td>\n<td><code>leader</code>, <code>follower</code>, <code>standalone</code></td>\n</tr></tbody></table>\n<h4>Log Level</h4>\n<p>The level of logs to be shown by the application.</p>\n<table>\n<thead>\n<tr>\n<th>Usage</th>\n<th>Value</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Environment Variable</td>\n<td><code>HEALTHCHECK_LOG_LEVEL</code></td>\n</tr>\n<tr>\n<td>Command-Line Argument</td>\n<td><code>--log-level</code></td>\n</tr>\n<tr>\n<td>Default Value</td>\n<td><code>INFO</code></td>\n</tr>\n<tr>\n<td>Valid Values</td>\n<td><code>DEBUG</code>, <code>INFO</code>, <code>WARNING</code>, <code>ERROR</code></td>\n</tr></tbody></table>\n<p>All healthy responses are logged at <code>INFO</code>. Unhealthy responses are logged at <code>WARNING</code>. Any unexpected errors are logged at <code>ERROR</code>.</p>\n<h2>License</h2>\n<p>Copyright (c) 2019 Shawn Seymour.</p>\n<p>Licensed under the <a href=\"LICENSE\" rel=\"nofollow\">Apache 2.0 license</a>.</p>\n\n          </div>"}, "last_serial": 5178626, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "92336876d97ca8a3eac344a8b441768d", "sha256": "e6320f0a1df567107cd8b008b6751062fb7ec78d7c90f489d6d689340509e000"}, "downloads": -1, "filename": "zookeeper_healthcheck-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "92336876d97ca8a3eac344a8b441768d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12815, "upload_time": "2019-04-23T18:06:29", "upload_time_iso_8601": "2019-04-23T18:06:29.849605Z", "url": "https://files.pythonhosted.org/packages/83/8e/cf2bc57d4fc9e1d0d6c8ae238ba8ea70c82ad7a7ede2f8b7338c58ab55ba/zookeeper_healthcheck-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f52e5d1427b05ac076916bbacf4384a", "sha256": "361b96b45ed5b8e82fd2ec30af1aa5f24767a90e07facd35742ba10e1fba8dc5"}, "downloads": -1, "filename": "zookeeper-healthcheck-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6f52e5d1427b05ac076916bbacf4384a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5833, "upload_time": "2019-04-23T18:06:32", "upload_time_iso_8601": "2019-04-23T18:06:32.214786Z", "url": "https://files.pythonhosted.org/packages/e3/57/64f274eeaa4960fa08e39f0972bda3e4149cd5e60d97106c37b5ed760b41/zookeeper-healthcheck-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "92336876d97ca8a3eac344a8b441768d", "sha256": "e6320f0a1df567107cd8b008b6751062fb7ec78d7c90f489d6d689340509e000"}, "downloads": -1, "filename": "zookeeper_healthcheck-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "92336876d97ca8a3eac344a8b441768d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12815, "upload_time": "2019-04-23T18:06:29", "upload_time_iso_8601": "2019-04-23T18:06:29.849605Z", "url": "https://files.pythonhosted.org/packages/83/8e/cf2bc57d4fc9e1d0d6c8ae238ba8ea70c82ad7a7ede2f8b7338c58ab55ba/zookeeper_healthcheck-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6f52e5d1427b05ac076916bbacf4384a", "sha256": "361b96b45ed5b8e82fd2ec30af1aa5f24767a90e07facd35742ba10e1fba8dc5"}, "downloads": -1, "filename": "zookeeper-healthcheck-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6f52e5d1427b05ac076916bbacf4384a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5833, "upload_time": "2019-04-23T18:06:32", "upload_time_iso_8601": "2019-04-23T18:06:32.214786Z", "url": "https://files.pythonhosted.org/packages/e3/57/64f274eeaa4960fa08e39f0972bda3e4149cd5e60d97106c37b5ed760b41/zookeeper-healthcheck-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:14:55 2020"}