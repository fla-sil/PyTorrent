{"info": {"author": "Mikko Ohtamaa", "author_email": "mikko@opensourcehacker.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Framework :: Pyramid", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: WSGI", "Topic :: Internet :: WWW/HTTP :: WSGI :: Application"], "description": "This is a newsletter addon for `Websauna framework <https://websauna.org>`_. It is intended for automatic newsletter generation from the site content.\n\n.. |ci| image:: https://img.shields.io/travis/websauna/websauna.newsletter/master.svg?style=flat-square\n    :target: https://travis-ci.org/websauna/websauna.newsletter/\n\n.. |latest| image:: https://img.shields.io/pypi/v/websauna.newsletter.svg\n    :target: https://pypi.python.org/pypi/websauna.newsletter/\n    :alt: Latest Version\n\n.. |license| image:: https://img.shields.io/pypi/l/websauna.newsletter.svg\n    :target: https://pypi.python.org/pypi/websauna.newsletter/\n    :alt: License\n\n.. |versions| image:: https://img.shields.io/pypi/pyversions/websauna.newsletter.svg\n    :target: https://pypi.python.org/pypi/websauna.newsletter/\n    :alt: Supported Python versions\n\n+-----------+-----------+\n| |versions|| |latest|  |\n+-----------+-----------+\n| |ci|      | |license| |\n+-----------+-----------+\n\n.. image:: https://websauna.org/theme/images/logo-768.png\n\n.. contents:: :local:\n\nFeatures\n========\n\n* Automatic newsletter generation from site content\n\n* Admin interface for newsletter preview and send\n\n* Import all site users as newsletter subscribers\n\n* Outbound email through `Mailgun <http://mailgun.com/>`_\n\n* Unsubscribe management through Mailgun\n\n* Redis based newsletter state management (when the last letter went out, etc.)\n\n* Websauna's Celery based task subsystem is used to run long running operations asynchronously\n\nInstallation\n============\n\nTo run this package you need Python 3.4+, PostgresSQL and Redis.\n\nYou need to provide your own site-specific INewsletter implementation that populates the news letter content.\n\nInstalling Python package\n-------------------------\n\nInstall this package using ``pip``.\n\nSetup newsletter renderer\n-------------------------\n\nYou need to register a site specific newsletter that is responsible for rendering your newsletter HTML payload. Do this in your ``Initializer.configure_views``. Example:\n\n.. code-block:: python\n\n        # Configure newsletter renderer\n        from mysite.views.newsletter import NewsletterRenderer\n        from websauna.newsletter.interfaces import INewsletterGenerator\n        registry = self.config.registry\n        registry.registerAdapter(factory=NewsletterRenderer, required=(IRequest,), provided=INewsletterGenerator)\n\nFor more information see ``demo.py``.\n\nUnsubscription link\n-------------------\n\nIn your renderer HTML code you can use Mailgun unsubscription management:\n\n.. code-block:: html\n\n  <p class=\"details\">\n    {# For Mailgun #}\n    <a href=\"%mailing_list_unsubscribe_url%\">Unsubscribe from TokenMarket newsletter.</a>\n  </p>\n\nSetting up the secrets\n----------------------\n\nAdd Mailgun API keys and such in ``myapp/conf/development-secrets.ini``.\n\nExample:\n\n.. code-block:: ini\n\n    [mailgun]\n    # Get from Mailgun\n    api_key = x\n\n    # What is the mailing list we use in the test suite\n    mailing_list = unit-testing@mailgun.websauna.org\n\n    # Outbound domain used for the newslettering\n    domain = mailgun.websauna.org\n\n    # From: email we use to send the newsletter\n    from = MyApp Newsletter <newsletter-demo@websauna.org>\n\nCreate Mailgun mailing list object\n----------------------------------\n\nEasiest to do this through ``ws-shell`` using production configuraition::\n\n    ws-shell tokenmarket/conf/production.ini\n\nThen using ``%cpaste`` notebook shell command::\n\n    from websauna.system.core.utils import get_secrets\n    from websauna.newsletter.mailgun import Mailgun\n    secrets = get_secrets(request.registry)\n    list_address = secrets[\"mailgun.mailing_list\"]\n    mailgun = Mailgun(request.registry)\n    mailgun.create_list(list_address, \"MyApp newsletter\")\n\nYou get a reply::\n\n    {'list': {'access_level': 'readonly',\n      'address': 'newsletter@example.com',\n      'created_at': 'Wed, 25 Jan 2017 17:08:56 -0000',\n      'description': 'TokenMarket newsletter',\n      'members_count': 0,\n      'name': ''},\n     'message': 'Mailing list has been created'}\n\nIntegration subscription for on your site\n-----------------------------------------\n\nA boostrap based mini subscription form is provided with the packag. It is ideal e.g. to place in the site footer.\n\nSimply in your template do::\n\n    <h3>Follow</h3>\n    {% include \"newsletter/subscription_form.html\" %}\n\n\nFor more information run the demo and view ``demotemplates/site/footer.html``.\n\nUsage\n=====\n\nSending and preview\n-------------------\n\nVisit *Newsletter* tab in the admin interface to preview and send out newsletters.\n\nResetting the news collection date\n----------------------------------\n\nYou can manually set the newsletter state, when the last newsletter was sent, from shell:\n\n.. code-block:: python\n\n    import datetime\n    from websauna.newsletter.state import NewsletterState\n\n    state = NewsletterState(request)\n    state.set_last_send_timestamp(datetime.datetime(2016, 12, 24).replace(tzinfo=datetime.timezone.utc))\n\nState is managed in Redis.\n\nExporting subscribers\n---------------------\n\nIn console:\n\n.. code-block:: python\n\n    from websauna.system.core.utils import get_secrets\n    from websauna.newsletter.mailgun import Mailgun\n    secrets = get_secrets(request.registry)\n    list_address = secrets[\"mailgun.mailing_list\"]\n    mailgun = Mailgun(request.registry)\n    print(mailgun.list_members(list_address))  # TODO: pagination\n\nImporting email subscribers\n---------------------------\n\nNote that importing website users is supported in the admin interface.\n\nExample:\n\n.. code-block:: python\n\n    subscribers = \"\"\"\n    mikko@example.com\n    pete@example.com\n    \"\"\"\n\n    from websauna.system.core.utils import get_secrets\n    from websauna.newsletter.mailgun import Mailgun\n    from websauna.newsletter.views import subscribe_email\n\n    secrets = get_secrets(request.registry)\n    list_address = secrets[\"mailgun.mailing_list\"]\n    mailgun = Mailgun(request.registry)\n\n    for s in subscribers.split():\n        s = s.strip()\n        if s:\n            subscribe_email(request, s)\n\nLocal development mode\n======================\n\nYou can development this addon locally.\n\nActivate the virtual environment of your Websauna application.\n\nThen:\n\n.. code-block:: console\n\n    cd newsletter  # This is the folder with setup.py file\n    pip install -e .\n    psql create newsletter_dev\n    ws-sync-db  ws://websauna/newsletter/conf/development.ini\n    pserve  ws://websauna/newsletter/conf/development.ini --reload\n\nRunning the test suite\n======================\n\nFirst create test database::\n\n    # Create database used for unit testing\n    psql create newsletter_test\n\nInstall test and dev dependencies (run in the folder with ``setup.py``)::\n\n    pip install -e \".[dev,test]\"\n\nRun test suite using py.test running::\n\n    py.test\n\nManually testing with Celery\n----------------------------\n\nMake sure Celery is not eager in ``development.ini``::\n\n    websauna.celery_config =\n        {\n            \"broker_url\":  \"redis://localhost:6379/15\",\n            \"task_always_eager\": False,\n        }\n\nStart demo (Terminal 1)::\n\n    pserve ws://websauna/newsletter/conf/development.ini\n\nStart Celery (Terminal 2)::\n\n    ws-celery  ws://websauna/newsletter/conf/development.ini -- worker\n\n\n\n\nTODO\n====\n\n    * Double confirmation to the mailing list subscription\n\nMore information\n================\n\nPlease see https://websauna.org/\n\nChangelog for Websauna Newsletter\n=================================\n\n1.0a3 (2018-10-03)\n------------------\n\n- After subscription, redirect user back to original url.\n\n- Support for Python 3.7.\n\n\n1.0a2 (2018-04-22)\n------------------\n\n- Fix missing 'namespace_packages'.\n\n\n1.0a1 (2018-03-06)\n------------------\n\n- Initial Release\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://websauna.org", "keywords": "web websauna pyramid", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "websauna.newsletter", "package_url": "https://pypi.org/project/websauna.newsletter/", "platform": "", "project_url": "https://pypi.org/project/websauna.newsletter/", "project_urls": {"Homepage": "https://websauna.org"}, "release_url": "https://pypi.org/project/websauna.newsletter/1.0a3/", "requires_dist": ["websauna[celery]", "websauna.magiclogin", "websauna[test,dev]; extra == 'dev'", "codecov; extra == 'test'", "flake8; extra == 'test'", "pytest (>=3.0); extra == 'test'", "pytest-runner; extra == 'test'", "coverage; extra == 'test'", "flaky; extra == 'test'", "isort; extra == 'test'", "pytest-cov; extra == 'test'", "pytest-runner; extra == 'test'", "pytest-splinter; extra == 'test'", "pytest-timeout; extra == 'test'", "webtest; extra == 'test'"], "requires_python": ">=3.5.2", "summary": "Newsletter add on for Websauna", "version": "1.0a3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is a newsletter addon for <a href=\"https://websauna.org\" rel=\"nofollow\">Websauna framework</a>. It is intended for automatic newsletter generation from the site content.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td><a href=\"https://pypi.python.org/pypi/websauna.newsletter/\" rel=\"nofollow\"><img alt=\"Supported Python versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a7ee130628c620e508869a42b4ba310ceff8b91/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f7765627361756e612e6e6577736c65747465722e737667\"></a></td>\n<td><a href=\"https://pypi.python.org/pypi/websauna.newsletter/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/53ff614ab254e6c75f8891b3033153423fe32c23/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7765627361756e612e6e6577736c65747465722e737667\"></a></td>\n</tr>\n<tr><td><a href=\"https://travis-ci.org/websauna/websauna.newsletter/\" rel=\"nofollow\"><img alt=\"ci\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59d0565acc9eaf20286d42d1a2a7124659b8cedb/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f7765627361756e612f7765627361756e612e6e6577736c65747465722f6d61737465722e7376673f7374796c653d666c61742d737175617265\"></a></td>\n<td><a href=\"https://pypi.python.org/pypi/websauna.newsletter/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5a285248730ec248befe272aeea7d5a03e5f665/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f7765627361756e612e6e6577736c65747465722e737667\"></a></td>\n</tr>\n</tbody>\n</table>\n<img alt=\"https://websauna.org/theme/images/logo-768.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/047c340503098eacc9f992e6c8b4feb89e3d78d7/68747470733a2f2f7765627361756e612e6f72672f7468656d652f696d616765732f6c6f676f2d3736382e706e67\">\n<div id=\"contents\">\n<ul>\n<li><a href=\"#features\" id=\"id1\" rel=\"nofollow\">Features</a></li>\n<li><a href=\"#installation\" id=\"id2\" rel=\"nofollow\">Installation</a><ul>\n<li><a href=\"#installing-python-package\" id=\"id3\" rel=\"nofollow\">Installing Python package</a></li>\n<li><a href=\"#setup-newsletter-renderer\" id=\"id4\" rel=\"nofollow\">Setup newsletter renderer</a></li>\n<li><a href=\"#unsubscription-link\" id=\"id5\" rel=\"nofollow\">Unsubscription link</a></li>\n<li><a href=\"#setting-up-the-secrets\" id=\"id6\" rel=\"nofollow\">Setting up the secrets</a></li>\n<li><a href=\"#create-mailgun-mailing-list-object\" id=\"id7\" rel=\"nofollow\">Create Mailgun mailing list object</a></li>\n<li><a href=\"#integration-subscription-for-on-your-site\" id=\"id8\" rel=\"nofollow\">Integration subscription for on your site</a></li>\n</ul>\n</li>\n<li><a href=\"#usage\" id=\"id9\" rel=\"nofollow\">Usage</a><ul>\n<li><a href=\"#sending-and-preview\" id=\"id10\" rel=\"nofollow\">Sending and preview</a></li>\n<li><a href=\"#resetting-the-news-collection-date\" id=\"id11\" rel=\"nofollow\">Resetting the news collection date</a></li>\n<li><a href=\"#exporting-subscribers\" id=\"id12\" rel=\"nofollow\">Exporting subscribers</a></li>\n<li><a href=\"#importing-email-subscribers\" id=\"id13\" rel=\"nofollow\">Importing email subscribers</a></li>\n</ul>\n</li>\n<li><a href=\"#local-development-mode\" id=\"id14\" rel=\"nofollow\">Local development mode</a></li>\n<li><a href=\"#running-the-test-suite\" id=\"id15\" rel=\"nofollow\">Running the test suite</a><ul>\n<li><a href=\"#manually-testing-with-celery\" id=\"id16\" rel=\"nofollow\">Manually testing with Celery</a></li>\n</ul>\n</li>\n<li><a href=\"#todo\" id=\"id17\" rel=\"nofollow\">TODO</a></li>\n<li><a href=\"#more-information\" id=\"id18\" rel=\"nofollow\">More information</a></li>\n<li><a href=\"#changelog-for-websauna-newsletter\" id=\"id19\" rel=\"nofollow\">Changelog for Websauna Newsletter</a><ul>\n<li><a href=\"#a3-2018-10-03\" id=\"id20\" rel=\"nofollow\">1.0a3 (2018-10-03)</a></li>\n<li><a href=\"#a2-2018-04-22\" id=\"id21\" rel=\"nofollow\">1.0a2 (2018-04-22)</a></li>\n<li><a href=\"#a1-2018-03-06\" id=\"id22\" rel=\"nofollow\">1.0a1 (2018-03-06)</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2><a href=\"#id1\" rel=\"nofollow\">Features</a></h2>\n<ul>\n<li>Automatic newsletter generation from site content</li>\n<li>Admin interface for newsletter preview and send</li>\n<li>Import all site users as newsletter subscribers</li>\n<li>Outbound email through <a href=\"http://mailgun.com/\" rel=\"nofollow\">Mailgun</a></li>\n<li>Unsubscribe management through Mailgun</li>\n<li>Redis based newsletter state management (when the last letter went out, etc.)</li>\n<li>Websauna\u2019s Celery based task subsystem is used to run long running operations asynchronously</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2><a href=\"#id2\" rel=\"nofollow\">Installation</a></h2>\n<p>To run this package you need Python 3.4+, PostgresSQL and Redis.</p>\n<p>You need to provide your own site-specific INewsletter implementation that populates the news letter content.</p>\n<div id=\"installing-python-package\">\n<h3><a href=\"#id3\" rel=\"nofollow\">Installing Python package</a></h3>\n<p>Install this package using <tt>pip</tt>.</p>\n</div>\n<div id=\"setup-newsletter-renderer\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Setup newsletter renderer</a></h3>\n<p>You need to register a site specific newsletter that is responsible for rendering your newsletter HTML payload. Do this in your <tt>Initializer.configure_views</tt>. Example:</p>\n<pre><span class=\"c1\"># Configure newsletter renderer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">mysite.views.newsletter</span> <span class=\"kn\">import</span> <span class=\"n\">NewsletterRenderer</span>\n<span class=\"kn\">from</span> <span class=\"nn\">websauna.newsletter.interfaces</span> <span class=\"kn\">import</span> <span class=\"n\">INewsletterGenerator</span>\n<span class=\"n\">registry</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"o\">.</span><span class=\"n\">registry</span>\n<span class=\"n\">registry</span><span class=\"o\">.</span><span class=\"n\">registerAdapter</span><span class=\"p\">(</span><span class=\"n\">factory</span><span class=\"o\">=</span><span class=\"n\">NewsletterRenderer</span><span class=\"p\">,</span> <span class=\"n\">required</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">IRequest</span><span class=\"p\">,),</span> <span class=\"n\">provided</span><span class=\"o\">=</span><span class=\"n\">INewsletterGenerator</span><span class=\"p\">)</span>\n</pre>\n<p>For more information see <tt>demo.py</tt>.</p>\n</div>\n<div id=\"unsubscription-link\">\n<h3><a href=\"#id5\" rel=\"nofollow\">Unsubscription link</a></h3>\n<p>In your renderer HTML code you can use Mailgun unsubscription management:</p>\n<pre><span class=\"p\">&lt;</span><span class=\"nt\">p</span> <span class=\"na\">class</span><span class=\"o\">=</span><span class=\"s\">\"details\"</span><span class=\"p\">&gt;</span>\n  {# For Mailgun #}\n  <span class=\"p\">&lt;</span><span class=\"nt\">a</span> <span class=\"na\">href</span><span class=\"o\">=</span><span class=\"s\">\"%mailing_list_unsubscribe_url%\"</span><span class=\"p\">&gt;</span>Unsubscribe from TokenMarket newsletter.<span class=\"p\">&lt;/</span><span class=\"nt\">a</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">p</span><span class=\"p\">&gt;</span>\n</pre>\n</div>\n<div id=\"setting-up-the-secrets\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Setting up the secrets</a></h3>\n<p>Add Mailgun API keys and such in <tt><span class=\"pre\">myapp/conf/development-secrets.ini</span></tt>.</p>\n<p>Example:</p>\n<pre><span class=\"k\">[mailgun]</span>\n<span class=\"c1\"># Get from Mailgun</span>\n<span class=\"na\">api_key</span> <span class=\"o\">=</span> <span class=\"s\">x</span>\n\n<span class=\"c1\"># What is the mailing list we use in the test suite</span>\n<span class=\"na\">mailing_list</span> <span class=\"o\">=</span> <span class=\"s\">unit-testing@mailgun.websauna.org</span>\n\n<span class=\"c1\"># Outbound domain used for the newslettering</span>\n<span class=\"na\">domain</span> <span class=\"o\">=</span> <span class=\"s\">mailgun.websauna.org</span>\n\n<span class=\"c1\"># From: email we use to send the newsletter</span>\n<span class=\"na\">from</span> <span class=\"o\">=</span> <span class=\"s\">MyApp Newsletter &lt;newsletter-demo@websauna.org&gt;</span>\n</pre>\n</div>\n<div id=\"create-mailgun-mailing-list-object\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Create Mailgun mailing list object</a></h3>\n<p>Easiest to do this through <tt><span class=\"pre\">ws-shell</span></tt> using production configuraition:</p>\n<pre>ws-shell tokenmarket/conf/production.ini\n</pre>\n<p>Then using <tt>%cpaste</tt> notebook shell command:</p>\n<pre>from websauna.system.core.utils import get_secrets\nfrom websauna.newsletter.mailgun import Mailgun\nsecrets = get_secrets(request.registry)\nlist_address = secrets[\"mailgun.mailing_list\"]\nmailgun = Mailgun(request.registry)\nmailgun.create_list(list_address, \"MyApp newsletter\")\n</pre>\n<p>You get a reply:</p>\n<pre>{'list': {'access_level': 'readonly',\n  'address': 'newsletter@example.com',\n  'created_at': 'Wed, 25 Jan 2017 17:08:56 -0000',\n  'description': 'TokenMarket newsletter',\n  'members_count': 0,\n  'name': ''},\n 'message': 'Mailing list has been created'}\n</pre>\n</div>\n<div id=\"integration-subscription-for-on-your-site\">\n<h3><a href=\"#id8\" rel=\"nofollow\">Integration subscription for on your site</a></h3>\n<p>A boostrap based mini subscription form is provided with the packag. It is ideal e.g. to place in the site footer.</p>\n<p>Simply in your template do:</p>\n<pre>&lt;h3&gt;Follow&lt;/h3&gt;\n{% include \"newsletter/subscription_form.html\" %}\n</pre>\n<p>For more information run the demo and view <tt>demotemplates/site/footer.html</tt>.</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2><a href=\"#id9\" rel=\"nofollow\">Usage</a></h2>\n<div id=\"sending-and-preview\">\n<h3><a href=\"#id10\" rel=\"nofollow\">Sending and preview</a></h3>\n<p>Visit <em>Newsletter</em> tab in the admin interface to preview and send out newsletters.</p>\n</div>\n<div id=\"resetting-the-news-collection-date\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Resetting the news collection date</a></h3>\n<p>You can manually set the newsletter state, when the last newsletter was sent, from shell:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">datetime</span>\n<span class=\"kn\">from</span> <span class=\"nn\">websauna.newsletter.state</span> <span class=\"kn\">import</span> <span class=\"n\">NewsletterState</span>\n\n<span class=\"n\">state</span> <span class=\"o\">=</span> <span class=\"n\">NewsletterState</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">)</span>\n<span class=\"n\">state</span><span class=\"o\">.</span><span class=\"n\">set_last_send_timestamp</span><span class=\"p\">(</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">datetime</span><span class=\"p\">(</span><span class=\"mi\">2016</span><span class=\"p\">,</span> <span class=\"mi\">12</span><span class=\"p\">,</span> <span class=\"mi\">24</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">replace</span><span class=\"p\">(</span><span class=\"n\">tzinfo</span><span class=\"o\">=</span><span class=\"n\">datetime</span><span class=\"o\">.</span><span class=\"n\">timezone</span><span class=\"o\">.</span><span class=\"n\">utc</span><span class=\"p\">))</span>\n</pre>\n<p>State is managed in Redis.</p>\n</div>\n<div id=\"exporting-subscribers\">\n<h3><a href=\"#id12\" rel=\"nofollow\">Exporting subscribers</a></h3>\n<p>In console:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">websauna.system.core.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_secrets</span>\n<span class=\"kn\">from</span> <span class=\"nn\">websauna.newsletter.mailgun</span> <span class=\"kn\">import</span> <span class=\"n\">Mailgun</span>\n<span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"n\">get_secrets</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"p\">)</span>\n<span class=\"n\">list_address</span> <span class=\"o\">=</span> <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">\"mailgun.mailing_list\"</span><span class=\"p\">]</span>\n<span class=\"n\">mailgun</span> <span class=\"o\">=</span> <span class=\"n\">Mailgun</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">mailgun</span><span class=\"o\">.</span><span class=\"n\">list_members</span><span class=\"p\">(</span><span class=\"n\">list_address</span><span class=\"p\">))</span>  <span class=\"c1\"># TODO: pagination</span>\n</pre>\n</div>\n<div id=\"importing-email-subscribers\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Importing email subscribers</a></h3>\n<p>Note that importing website users is supported in the admin interface.</p>\n<p>Example:</p>\n<pre><span class=\"n\">subscribers</span> <span class=\"o\">=</span> <span class=\"s2\">\"\"\"\nmikko@example.com\npete@example.com\n\"\"\"</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">websauna.system.core.utils</span> <span class=\"kn\">import</span> <span class=\"n\">get_secrets</span>\n<span class=\"kn\">from</span> <span class=\"nn\">websauna.newsletter.mailgun</span> <span class=\"kn\">import</span> <span class=\"n\">Mailgun</span>\n<span class=\"kn\">from</span> <span class=\"nn\">websauna.newsletter.views</span> <span class=\"kn\">import</span> <span class=\"n\">subscribe_email</span>\n\n<span class=\"n\">secrets</span> <span class=\"o\">=</span> <span class=\"n\">get_secrets</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"p\">)</span>\n<span class=\"n\">list_address</span> <span class=\"o\">=</span> <span class=\"n\">secrets</span><span class=\"p\">[</span><span class=\"s2\">\"mailgun.mailing_list\"</span><span class=\"p\">]</span>\n<span class=\"n\">mailgun</span> <span class=\"o\">=</span> <span class=\"n\">Mailgun</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">registry</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">s</span> <span class=\"ow\">in</span> <span class=\"n\">subscribers</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">():</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span><span class=\"o\">.</span><span class=\"n\">strip</span><span class=\"p\">()</span>\n    <span class=\"k\">if</span> <span class=\"n\">s</span><span class=\"p\">:</span>\n        <span class=\"n\">subscribe_email</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">s</span><span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"local-development-mode\">\n<h2><a href=\"#id14\" rel=\"nofollow\">Local development mode</a></h2>\n<p>You can development this addon locally.</p>\n<p>Activate the virtual environment of your Websauna application.</p>\n<p>Then:</p>\n<pre><span class=\"go\">cd newsletter  # This is the folder with setup.py file\npip install -e .\npsql create newsletter_dev\nws-sync-db  ws://websauna/newsletter/conf/development.ini\npserve  ws://websauna/newsletter/conf/development.ini --reload</span>\n</pre>\n</div>\n<div id=\"running-the-test-suite\">\n<h2><a href=\"#id15\" rel=\"nofollow\">Running the test suite</a></h2>\n<p>First create test database:</p>\n<pre># Create database used for unit testing\npsql create newsletter_test\n</pre>\n<p>Install test and dev dependencies (run in the folder with <tt>setup.py</tt>):</p>\n<pre>pip install -e \".[dev,test]\"\n</pre>\n<p>Run test suite using py.test running:</p>\n<pre>py.test\n</pre>\n<div id=\"manually-testing-with-celery\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Manually testing with Celery</a></h3>\n<p>Make sure Celery is not eager in <tt>development.ini</tt>:</p>\n<pre>websauna.celery_config =\n    {\n        \"broker_url\":  \"redis://localhost:6379/15\",\n        \"task_always_eager\": False,\n    }\n</pre>\n<p>Start demo (Terminal 1):</p>\n<pre>pserve ws://websauna/newsletter/conf/development.ini\n</pre>\n<p>Start Celery (Terminal 2):</p>\n<pre>ws-celery  ws://websauna/newsletter/conf/development.ini -- worker\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2><a href=\"#id17\" rel=\"nofollow\">TODO</a></h2>\n<blockquote>\n<ul>\n<li>Double confirmation to the mailing list subscription</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"more-information\">\n<h2><a href=\"#id18\" rel=\"nofollow\">More information</a></h2>\n<p>Please see <a href=\"https://websauna.org/\" rel=\"nofollow\">https://websauna.org/</a></p>\n</div>\n<div id=\"changelog-for-websauna-newsletter\">\n<h2><a href=\"#id19\" rel=\"nofollow\">Changelog for Websauna Newsletter</a></h2>\n<div id=\"a3-2018-10-03\">\n<h3><a href=\"#id20\" rel=\"nofollow\">1.0a3 (2018-10-03)</a></h3>\n<ul>\n<li>After subscription, redirect user back to original url.</li>\n<li>Support for Python 3.7.</li>\n</ul>\n</div>\n<div id=\"a2-2018-04-22\">\n<h3><a href=\"#id21\" rel=\"nofollow\">1.0a2 (2018-04-22)</a></h3>\n<ul>\n<li>Fix missing \u2018namespace_packages\u2019.</li>\n</ul>\n</div>\n<div id=\"a1-2018-03-06\">\n<h3><a href=\"#id22\" rel=\"nofollow\">1.0a1 (2018-03-06)</a></h3>\n<ul>\n<li>Initial Release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6181902, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "3bb6becea05ef9c111617f912e3aae1e", "sha256": "8bb9a56fa19b4c4d7d5e532a709616552484605a91f4e9d4c6ee3704f467913d"}, "downloads": -1, "filename": "websauna.newsletter-1.0a1-py3-none-any.whl", "has_sig": false, "md5_digest": "3bb6becea05ef9c111617f912e3aae1e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38136, "upload_time": "2018-03-06T22:33:35", "upload_time_iso_8601": "2018-03-06T22:33:35.579419Z", "url": "https://files.pythonhosted.org/packages/03/63/c22c06adacdda9d1ed7416fd8d7e83266c3833151f6eb71205722320d53e/websauna.newsletter-1.0a1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e08acb823b3cea4366219201eeb9adb7", "sha256": "6d8f6dfbf1fa9ce3b0934ce8783928594528552f16cac3ca180ec8406fd823ad"}, "downloads": -1, "filename": "websauna.newsletter-1.0a1.tar.gz", "has_sig": false, "md5_digest": "e08acb823b3cea4366219201eeb9adb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32848, "upload_time": "2018-03-06T22:33:37", "upload_time_iso_8601": "2018-03-06T22:33:37.542397Z", "url": "https://files.pythonhosted.org/packages/ee/67/9d41c14771448e6919ffd563acc4d6ff1be1d8788c44cb8051a51b286743/websauna.newsletter-1.0a1.tar.gz", "yanked": false}], "1.0a2": [{"comment_text": "", "digests": {"md5": "ec428c3835ff9811705590f3822f0a1a", "sha256": "24db9391cfed36b773a7344c51a68960713554837b378ffd63fa2e324db759e5"}, "downloads": -1, "filename": "websauna.newsletter-1.0a2-py3-none-any.whl", "has_sig": false, "md5_digest": "ec428c3835ff9811705590f3822f0a1a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 38670, "upload_time": "2018-04-22T19:09:33", "upload_time_iso_8601": "2018-04-22T19:09:33.859077Z", "url": "https://files.pythonhosted.org/packages/02/0e/efaed0fb43d25328bc409087d7255d042d582219c194e34c61e0d645f2d7/websauna.newsletter-1.0a2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2b32a27cde0decf4719162da9f2fb8a7", "sha256": "6e77e71410cbabb476002d0e083b1a37919aac6079c626da082c516cc480bcd7"}, "downloads": -1, "filename": "websauna.newsletter-1.0a2.tar.gz", "has_sig": false, "md5_digest": "2b32a27cde0decf4719162da9f2fb8a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 33002, "upload_time": "2018-04-22T19:09:35", "upload_time_iso_8601": "2018-04-22T19:09:35.464228Z", "url": "https://files.pythonhosted.org/packages/f2/13/ce01b7e4e2aa124648a8a57b8bb61960b40983b24da6690f3751d5e2611c/websauna.newsletter-1.0a2.tar.gz", "yanked": false}], "1.0a3": [{"comment_text": "", "digests": {"md5": "db630a393c5f48bc3c8a4c0de4f77043", "sha256": "6bb8df431bcf1301102f00b80232f1d2397861a00a119406115696741058ead6"}, "downloads": -1, "filename": "websauna.newsletter-1.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "db630a393c5f48bc3c8a4c0de4f77043", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 35743, "upload_time": "2018-10-03T21:13:00", "upload_time_iso_8601": "2018-10-03T21:13:00.910824Z", "url": "https://files.pythonhosted.org/packages/e2/df/760bbde4f76de8b9b8ab4bc1441a6830eb213eebf136fb5ea472872bdd15/websauna.newsletter-1.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4261cc03780e6108a7522c88c47b4ef0", "sha256": "83f871d82506ddda66fcf46bd687ae57c233bd66dc9281482ce7963dbcad782b"}, "downloads": -1, "filename": "websauna.newsletter-1.0a3.tar.gz", "has_sig": false, "md5_digest": "4261cc03780e6108a7522c88c47b4ef0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 34942, "upload_time": "2018-10-03T21:13:02", "upload_time_iso_8601": "2018-10-03T21:13:02.633145Z", "url": "https://files.pythonhosted.org/packages/e6/67/d4801fadfaec6ee85b8bd03c274607f2f78c09d385b4bd793cef3bd0457e/websauna.newsletter-1.0a3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "db630a393c5f48bc3c8a4c0de4f77043", "sha256": "6bb8df431bcf1301102f00b80232f1d2397861a00a119406115696741058ead6"}, "downloads": -1, "filename": "websauna.newsletter-1.0a3-py3-none-any.whl", "has_sig": false, "md5_digest": "db630a393c5f48bc3c8a4c0de4f77043", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5.2", "size": 35743, "upload_time": "2018-10-03T21:13:00", "upload_time_iso_8601": "2018-10-03T21:13:00.910824Z", "url": "https://files.pythonhosted.org/packages/e2/df/760bbde4f76de8b9b8ab4bc1441a6830eb213eebf136fb5ea472872bdd15/websauna.newsletter-1.0a3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4261cc03780e6108a7522c88c47b4ef0", "sha256": "83f871d82506ddda66fcf46bd687ae57c233bd66dc9281482ce7963dbcad782b"}, "downloads": -1, "filename": "websauna.newsletter-1.0a3.tar.gz", "has_sig": false, "md5_digest": "4261cc03780e6108a7522c88c47b4ef0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5.2", "size": 34942, "upload_time": "2018-10-03T21:13:02", "upload_time_iso_8601": "2018-10-03T21:13:02.633145Z", "url": "https://files.pythonhosted.org/packages/e6/67/d4801fadfaec6ee85b8bd03c274607f2f78c09d385b4bd793cef3bd0457e/websauna.newsletter-1.0a3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:50 2020"}