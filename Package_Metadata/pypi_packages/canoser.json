{"info": {"author": "yuan xinyu", "author_email": "yuan_xin_yu@hotmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "A python implementation of the canonical serialization for the Libra network.\n\nCanonical serialization guarantees byte consistency when serializing an in-memory\ndata structure. It is useful for situations where two parties want to efficiently compare\ndata structures they independently maintain. It happens in consensus where\nindependent validators need to agree on the state they independently compute. A cryptographic\nhash of the serialized data structure is what ultimately gets compared. In order for\nthis to work, the serialization of the same data structures must be identical when computed\nby independent validators potentially running different implementations\nof the same spec in different languages.\n\n## Installation\n\nRequire python 3.6 or above installed.\n\n```sh\n$ python3 -m pip install canoser\n```\n\n\n## Usage\n\nFirst define a data structure with Canoser, that is, write a class that inherits from \"canoser.Struct\", and then define the fields owned by the structure through the \"\\_fields\" array. This structure naturally has the ability to canonical serialize and deserialize types. For example, the following AccountResource defines a data structure of the same name in the Libra code\uff1a\n```python\n  #python code\uff0cdefine canoser data structure\nfrom canoser import Struct, Uint8, Uint64\nclass AccountResource(Struct):\n    _fields = [\n        ('authentication_key', [Uint8]),\n        ('balance', Uint64),\n        ('delegated_withdrawal_capability', bool),\n        ('received_events', EventHandle),\n        ('sent_events', EventHandle),\n        ('sequence_number', Uint64)\n    ]\n```\n\nHere is the code that defines this data structure and serialization in Libra code:\n```rust\n// rust code in Libra\n// define the data structure\npub struct AccountResource {\n    balance: u64,\n    sequence_number: u64,\n    authentication_key: ByteArray,\n    sent_events: EventHandle,\n    received_events: EventHandle,\n    delegated_withdrawal_capability: bool,\n}\n// serialization\nimpl CanonicalSerialize for AccountResource {\n    fn serialize(&self, serializer: &mut impl CanonicalSerializer) -> Result<()> {\n        serializer\n            .encode_struct(&self.authentication_key)?\n            .encode_u64(self.balance)?\n            .encode_bool(self.delegated_withdrawal_capability)?\n            .encode_struct(self.received_events)?\n            .encode_struct(self.sent_events)?\n            .encode_u64(self.sequence_number)?;\n        Ok(())\n    }\n}\n```\n~~In the rust language used by Libra, it is necessary to manually write code to serialize/deserialize the data structure, and the order of the fields in the data structure and the order of serialization are not necessarily the same.~~\n\nIn Canoser, after defining the data structure, you don't need to write code to implement serialization and deserialization. Note that the order of the data structures in Canoser is defined in the order in which they are serialized in Libra.\n\n### Supported field types\n\n| field type | optionl sub type | description |\n| ------ | ------ | ------ |\n| canoser.Uint8 |  | Unsigned 8-bit integer |\n| canoser.Uint16 |  | Unsigned 16-bit integer|\n| canoser.Uint32 |  | Unsigned 32-bit integer |\n| canoser.Uint64 |  | Unsigned 64-bit integer |\n| canoser.Uint128 |  | Unsigned 128-bit integer |\n| canoser.Int8 |  | Signed 8-bit integer |\n| canoser.Int16 |  | Signed 16-bit integer|\n| canoser.Int32 |  | Signed 32-bit integer |\n| canoser.Int64 |  | Signed 64-bit integer |\n| canoser.Int128 |  | Signed 128-bit integer |\n| bool |  | Boolean |\n| str |  | String |\n| bytes |  | Binary String |\n| [] | supported | Array Type |\n| {} | supported |  Map Type |\n| () | supported |  Tuple Type |\n| canoser.Struct |  | Another structure nested (cannot be recycled) |\n| RustEnum |  | Enum type |\n| RustOptional |  | Optional type |\n\n### About Array Type\nThe default data type (if not defined) in the array is Uint8. The following two definitions are equivalent:\n```python\n  class Arr1(Struct):\n      _fields = [(addr, [])]\n\n\n  class Arr2(Struct):\n      _fields = [(addr, [Uint8])]\n\n```\nArrays can also define lengths to represent fixed length data. For example, the address in Libra is 256 bits, which is 32 bytes, so it can be defined as follows:\n```python\n  class Address(Struct):\n      _fields = [(addr, [Uint8, 32])]\n```\nWhen the fixed length data is serialized, you can skip the length information written to the output. For example, following code will generate 32 bytes without writing the length of the addr during serialization.\n\n```python\n  class Address(Struct):\n      _fields = [(addr, [Uint8, 32, False])]\n```\n\n\n### About map type\nThe default data type (if not defined) in the map is an array of Uint8 in Libra, both of key and value.\nBut the python language dosn't support the array data type to be the key of a dict, so we change the key type from array of Uint8 to bytes in python, the type of value is unchanged.\nThe following two definitions are equivalent:\n```python\n  class Map1(Struct):\n    _fields = [(addr, {})]\n\n\n  class Map2(Struct):\n    _fields = [(addr, {bytes : [Uint8] })]\n\n```\n\n### About enum type\nIn python and C, enum is just enumerated constants. But in Libra(Rust), a enum has a type constant and a optional Value. A rust enumeration is typically represented as:\n\n```\nenum SomeDataType {\n  type0(u32),\n  type1(u64),\n  type2\n}\n```\n\nTo define a enum with Canoser, first write a class that inherits from \"canoser.RustEnum\", and then define the types owned by the enum through the \"\\_enums\" array.\nFor example, the following TransactionArgument defines a data structure of the same name in the Libra code. The argument of a transaction can be one of the four types: Uint64 or Address or String or IntArray.\uff1a\n\n```python\nclass TransactionArgument(RustEnum):\n    _enums = [\n        ('U64', Uint64),\n        ('Address', [Uint8, ADDRESS_LENGTH]),\n        ('String', str),\n        ('ByteArray', [Uint8])\n    ]\n```\nYou can instantiate an enum obj and call its method and properties like this:\n\n```python\n    arg2 = TransactionArgument('String', 'abc')\n    assert arg2.index == 2\n    assert arg2.value == 'abc'\n    assert arg2.String == True\n    assert arg2.U64 == False\n```\n\nEvery RustEnum object has an `index` property and a `value` property. After instantiated, the `index` can't be modified. You can only modify the `value` of an enum with correct data type.\n\nFor example, the following code is valid:\n\n```python\n    arg2 = TransactionArgument('String', 'abc')\n    arg2.value == 'Bcd'\n```\n\nFor example, the following code is invalid:\n```python\n    arg2.index = 0      #raise an exception\n    arg2.value = [3]    #raise an exception\n```\n\nThe RustEnum can have a enum without value type, which represented by `None`.\n\n```python\nclass Enum1(RustEnum):\n    _enums = [('opt1', [Uint8]), ('opt2', None)]\n\ne2 = Enum1('opt2', None)\n#or\ne2 = Enum1('opt2')\n```\n\nYou can also instantiate a RustEnum object by index and value.\n\n```python\ne1 = Enum1.new(0, [5])\n# which is equivalent to\ne1 = Enum1('opt1', [5])\n```\n\n### About optional type\nAn optional type in libra is a nullable data either exists in its full representation or does not. For example,\n\n```\noptional_data: Option(uint8); // Rust/Libra\nuint8 *optional_data; // C\n```\nIt has similar semantics meaning with the following enum type:\n```\nenum Option<uint8> {\n    Some(uint8),\n    None,\n}\n```\n\nTo define a optional with Canoser, first write a class that inherits from \"canoser.RustOptional\", and then define the types owned by RustOptional through the \"\\_type\" field. For example,\n\n```python\nclass OptionUInt(RustOptional):\n    _type = Uint8\n\nnull = OptionUInt(None)\nobj = OptionUInt(8)\nassert obj.value == 8\n```\n\nHere's a complete example:\n\n```python\nclass OptionStr(RustOptional):\n    _type = str\n\nclass OptionTest(Struct):\n    _fields = [\n        ('message', OptionStr)\n    ]\n\n    def __init__(self, msg=None):\n        if msg is not None:\n            self.message = OptionStr(msg)\n        else:\n            self.message = OptionStr(None)\n\ntest = OptionTest('test_str')\nassert test.message.value == 'test_str'\n```\n\n\nThe RustOptional type in canoser is similar to `typing.Optional` in python. Note that this is not the same concept as an optional argument, which is one that has a default.\n\n\n### Nested data structure\nThe following is a complex example with three data structures:\n```python\nclass Addr(Struct):\n    _fields = [('addr', [Uint8, 32])]\n\n\nclass Bar(Struct):\n    _fields = [\n        ('a', Uint64),\n        ('b', [Uint8]),\n        ('c', Addr),\n        ('d', Uint32),\n    ]\n\nclass Foo(Struct):\n    _fields = [\n        ('a', Uint64),\n        ('b', [Uint8]),\n        ('c', Bar),\n        ('d', bool),\n        ('e', {}),\n    ]\n```\nThis example refers to the test code from canonical serialization in libra.\n\n\n### Serialization and deserialization\nAfter defining canoser.Struct, you don't need to implement serialization and deserialization code yourself, you can directly call the default implementation of the base class. Take the AccountResource structure as an example:\n\n```python\n# serialize an object\nobj = AccountResource(authentication_key=...,...)\nbbytes = obj.serialize()\n\n# deserialize an object from bytes\nobj = AccountResource.deserialize(bbytes)\n```\n\n### Json pretty print\n\nFor any canoser `Struct`, you can call the `to_json` method to get a formatted json string:\n\n```python\n# serialize an object\nprint(obj.to_json())\n\n```\n\n### Get field value from object\n\nFor all fields defined by the \"\\_fields\", the value of this field of an object can be obtained via field_name. such as:\n```python\nobj.authentication_key\n```\n\n\n## Rust Type Alias\nFor simple type alias in rust, such as:\n```rust\n// in rust\npub type Round = u64;\n```\n\nWe can define the alias like this:\n\n```python\n# in python\nRound = Uint64\n```\n\n\n## Rust Tuple Struct\n\nStruct like Address and ByteArray has no fields:\n\n```rust\npub struct Address([u8; ADDRESS_LENGTH]);\npub struct ByteArray(Vec<u8>);\n```\n\nThese struct called `tuple struct` in `Rust` programming language. Tuple struct is like `typedef` other than struct in `C` like programming languages.\n\nYou can just define them as a direct type, no struct. Just code like this:\n```python\nclass TransactionArgument(RustEnum):\n    _enums = [\n        ...\n        ('Address', [Uint8, ADDRESS_LENGTH]),\n        ...\n    ]\n```\n\nOr you can define an `Address` class which inherit from `canoser.DelegateT` and has a `delegate_type` field with type `[Uint8, ADDRESS_LENGTH]`:\n\n```python\nclass Address(DelegateT):\n    delegate_type = [Uint8, ADDRESS_LENGTH]\n\n\nclass TransactionArgument(RustEnum):\n    _enums = [\n        ...\n        ('Address', Address),\n        ...\n    ]\n```\n\nDo not instantiate a `canoser.DelegateT` type in assaignment, for example:\n\n```python\ntransactionArgument.address = [...] #ok\ntransactionArgument.address = Address([...])  #error\n```\n\n\n## Notice\n\n### Must define canoser struct by serialized fields and sequence, not the definition in the rust struct.\n\nFor example, the SignedTransaction in Libra is defined as following code:\n\n```rust\npub struct SignedTransaction {\n    raw_txn: RawTransaction,\n    public_key: Ed25519PublicKey,\n    signature: Ed25519Signature,\n    transaction_length: usize,\n}\n```\nBut field `transaction_length` doesn't write to the output.\n\n```rust\nimpl CanonicalSerialize for SignedTransaction {\n    fn serialize(&self, serializer: &mut impl CanonicalSerializer) -> Result<()> {\n        serializer\n            .encode_struct(&self.raw_txn)?\n            .encode_bytes(&self.public_key.to_bytes())?\n            .encode_bytes(&self.signature.to_bytes())?;\n        Ok(())\n    }\n}\n```\n\nSo we define SignedTransaction in canoser as following code:\n```python\nclass SignedTransaction(canoser.Struct):\n    _fields = [\n        ('raw_txn', RawTransaction),\n        ('public_key', [Uint8, ED25519_PUBLIC_KEY_LENGTH]),\n        ('signature', [Uint8, ED25519_SIGNATURE_LENGTH])\n    ]\n```\n\nHere is another example. The definition sequence and serialize sequence is opposite in  `WriteOp`\n\n```rust\npub enum WriteOp {\n    Value(Vec<u8>),\n    Deletion,\n}\n\nenum WriteOpType {\n    Deletion = 0,\n    Value = 1,\n}\n\nimpl CanonicalSerialize for WriteOp {\n    fn serialize(&self, serializer: &mut impl CanonicalSerializer) -> Result<()> {\n        match self {\n            WriteOp::Deletion => serializer.encode_u32(WriteOpType::Deletion as u32)?,\n            WriteOp::Value(value) => {\n                serializer.encode_u32(WriteOpType::Value as u32)?;\n                serializer.encode_vec(value)?\n            }\n        };\n        Ok(())\n    }\n}\n```\n\nSo, we define `WriteOp` as follow:\n```python\nclass WriteOp(RustEnum):\n    _enums = [\n        ('Deletion', None),\n        ('Value', [Uint8])\n    ]\n\n```\n\n## Related Projects\n\n[MoveOnLibra OpenAPI: make writing libra wallet & move program easier](https://www.MoveOnLibra.com)\n\n[A Ruby implementation of the LCS(Libra Canonical Serialization)](https://github.com/yuan-xy/canoser-ruby)\n\n[A Python implementation of client APIs and command-line tools for the Libra network](https://github.com/yuan-xy/libra-client)\n\n\n\n## License\n\nThe package is available as open source under the terms of the [MIT License](https://opensource.org/licenses/MIT).\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yuan-xy/canoser-python.git", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "canoser", "package_url": "https://pypi.org/project/canoser/", "platform": "", "project_url": "https://pypi.org/project/canoser/", "project_urls": {"Homepage": "https://github.com/yuan-xy/canoser-python.git"}, "release_url": "https://pypi.org/project/canoser/0.8.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A python implementation of the LCS(Libra Canonical Serialization) for the Libra network.", "version": "0.8.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A python implementation of the canonical serialization for the Libra network.</p>\n<p>Canonical serialization guarantees byte consistency when serializing an in-memory\ndata structure. It is useful for situations where two parties want to efficiently compare\ndata structures they independently maintain. It happens in consensus where\nindependent validators need to agree on the state they independently compute. A cryptographic\nhash of the serialized data structure is what ultimately gets compared. In order for\nthis to work, the serialization of the same data structures must be identical when computed\nby independent validators potentially running different implementations\nof the same spec in different languages.</p>\n<h2>Installation</h2>\n<p>Require python 3.6 or above installed.</p>\n<pre>$ python3 -m pip install canoser\n</pre>\n<h2>Usage</h2>\n<p>First define a data structure with Canoser, that is, write a class that inherits from \"canoser.Struct\", and then define the fields owned by the structure through the \"_fields\" array. This structure naturally has the ability to canonical serialize and deserialize types. For example, the following AccountResource defines a data structure of the same name in the Libra code\uff1a</p>\n<pre>  <span class=\"c1\">#python code\uff0cdefine canoser data structure</span>\n<span class=\"kn\">from</span> <span class=\"nn\">canoser</span> <span class=\"kn\">import</span> <span class=\"n\">Struct</span><span class=\"p\">,</span> <span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"n\">Uint64</span>\n<span class=\"k\">class</span> <span class=\"nc\">AccountResource</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'authentication_key'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">]),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'balance'</span><span class=\"p\">,</span> <span class=\"n\">Uint64</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'delegated_withdrawal_capability'</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'received_events'</span><span class=\"p\">,</span> <span class=\"n\">EventHandle</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'sent_events'</span><span class=\"p\">,</span> <span class=\"n\">EventHandle</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'sequence_number'</span><span class=\"p\">,</span> <span class=\"n\">Uint64</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Here is the code that defines this data structure and serialization in Libra code:</p>\n<pre><span class=\"c1\">// rust code in Libra</span>\n<span class=\"c1\">// define the data structure</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">AccountResource</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">balance</span>: <span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sequence_number</span>: <span class=\"kt\">u64</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">authentication_key</span>: <span class=\"nc\">ByteArray</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">sent_events</span>: <span class=\"nc\">EventHandle</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">received_events</span>: <span class=\"nc\">EventHandle</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">delegated_withdrawal_capability</span>: <span class=\"kt\">bool</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"c1\">// serialization</span>\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">CanonicalSerialize</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">AccountResource</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">serialize</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">serializer</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">CanonicalSerializer</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">serializer</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_struct</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">authentication_key</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_u64</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">balance</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_bool</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">delegated_withdrawal_capability</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_struct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">received_events</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_struct</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">sent_events</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_u64</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">sequence_number</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre>\n<p><del>In the rust language used by Libra, it is necessary to manually write code to serialize/deserialize the data structure, and the order of the fields in the data structure and the order of serialization are not necessarily the same.</del></p>\n<p>In Canoser, after defining the data structure, you don't need to write code to implement serialization and deserialization. Note that the order of the data structures in Canoser is defined in the order in which they are serialized in Libra.</p>\n<h3>Supported field types</h3>\n<table>\n<thead>\n<tr>\n<th>field type</th>\n<th>optionl sub type</th>\n<th>description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>canoser.Uint8</td>\n<td></td>\n<td>Unsigned 8-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Uint16</td>\n<td></td>\n<td>Unsigned 16-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Uint32</td>\n<td></td>\n<td>Unsigned 32-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Uint64</td>\n<td></td>\n<td>Unsigned 64-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Uint128</td>\n<td></td>\n<td>Unsigned 128-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Int8</td>\n<td></td>\n<td>Signed 8-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Int16</td>\n<td></td>\n<td>Signed 16-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Int32</td>\n<td></td>\n<td>Signed 32-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Int64</td>\n<td></td>\n<td>Signed 64-bit integer</td>\n</tr>\n<tr>\n<td>canoser.Int128</td>\n<td></td>\n<td>Signed 128-bit integer</td>\n</tr>\n<tr>\n<td>bool</td>\n<td></td>\n<td>Boolean</td>\n</tr>\n<tr>\n<td>str</td>\n<td></td>\n<td>String</td>\n</tr>\n<tr>\n<td>bytes</td>\n<td></td>\n<td>Binary String</td>\n</tr>\n<tr>\n<td>[]</td>\n<td>supported</td>\n<td>Array Type</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>supported</td>\n<td>Map Type</td>\n</tr>\n<tr>\n<td>()</td>\n<td>supported</td>\n<td>Tuple Type</td>\n</tr>\n<tr>\n<td>canoser.Struct</td>\n<td></td>\n<td>Another structure nested (cannot be recycled)</td>\n</tr>\n<tr>\n<td>RustEnum</td>\n<td></td>\n<td>Enum type</td>\n</tr>\n<tr>\n<td>RustOptional</td>\n<td></td>\n<td>Optional type</td>\n</tr></tbody></table>\n<h3>About Array Type</h3>\n<p>The default data type (if not defined) in the array is Uint8. The following two definitions are equivalent:</p>\n<pre>  <span class=\"k\">class</span> <span class=\"nc\">Arr1</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n      <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"p\">[])]</span>\n\n\n  <span class=\"k\">class</span> <span class=\"nc\">Arr2</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n      <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">])]</span>\n</pre>\n<p>Arrays can also define lengths to represent fixed length data. For example, the address in Libra is 256 bits, which is 32 bytes, so it can be defined as follows:</p>\n<pre>  <span class=\"k\">class</span> <span class=\"nc\">Address</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n      <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">])]</span>\n</pre>\n<p>When the fixed length data is serialized, you can skip the length information written to the output. For example, following code will generate 32 bytes without writing the length of the addr during serialization.</p>\n<pre>  <span class=\"k\">class</span> <span class=\"nc\">Address</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n      <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"kc\">False</span><span class=\"p\">])]</span>\n</pre>\n<h3>About map type</h3>\n<p>The default data type (if not defined) in the map is an array of Uint8 in Libra, both of key and value.\nBut the python language dosn't support the array data type to be the key of a dict, so we change the key type from array of Uint8 to bytes in python, the type of value is unchanged.\nThe following two definitions are equivalent:</p>\n<pre>  <span class=\"k\">class</span> <span class=\"nc\">Map1</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"p\">{})]</span>\n\n\n  <span class=\"k\">class</span> <span class=\"nc\">Map2</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"n\">addr</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"nb\">bytes</span> <span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">]</span> <span class=\"p\">})]</span>\n</pre>\n<h3>About enum type</h3>\n<p>In python and C, enum is just enumerated constants. But in Libra(Rust), a enum has a type constant and a optional Value. A rust enumeration is typically represented as:</p>\n<pre><code>enum SomeDataType {\n  type0(u32),\n  type1(u64),\n  type2\n}\n</code></pre>\n<p>To define a enum with Canoser, first write a class that inherits from \"canoser.RustEnum\", and then define the types owned by the enum through the \"_enums\" array.\nFor example, the following TransactionArgument defines a data structure of the same name in the Libra code. The argument of a transaction can be one of the four types: Uint64 or Address or String or IntArray.\uff1a</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TransactionArgument</span><span class=\"p\">(</span><span class=\"n\">RustEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">_enums</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'U64'</span><span class=\"p\">,</span> <span class=\"n\">Uint64</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'Address'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"n\">ADDRESS_LENGTH</span><span class=\"p\">]),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'String'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'ByteArray'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">])</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>You can instantiate an enum obj and call its method and properties like this:</p>\n<pre>    <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"n\">TransactionArgument</span><span class=\"p\">(</span><span class=\"s1\">'String'</span><span class=\"p\">,</span> <span class=\"s1\">'abc'</span><span class=\"p\">)</span>\n    <span class=\"k\">assert</span> <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">==</span> <span class=\"mi\">2</span>\n    <span class=\"k\">assert</span> <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"s1\">'abc'</span>\n    <span class=\"k\">assert</span> <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">String</span> <span class=\"o\">==</span> <span class=\"kc\">True</span>\n    <span class=\"k\">assert</span> <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">U64</span> <span class=\"o\">==</span> <span class=\"kc\">False</span>\n</pre>\n<p>Every RustEnum object has an <code>index</code> property and a <code>value</code> property. After instantiated, the <code>index</code> can't be modified. You can only modify the <code>value</code> of an enum with correct data type.</p>\n<p>For example, the following code is valid:</p>\n<pre>    <span class=\"n\">arg2</span> <span class=\"o\">=</span> <span class=\"n\">TransactionArgument</span><span class=\"p\">(</span><span class=\"s1\">'String'</span><span class=\"p\">,</span> <span class=\"s1\">'abc'</span><span class=\"p\">)</span>\n    <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"s1\">'Bcd'</span>\n</pre>\n<p>For example, the following code is invalid:</p>\n<pre>    <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">index</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>      <span class=\"c1\">#raise an exception</span>\n    <span class=\"n\">arg2</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"mi\">3</span><span class=\"p\">]</span>    <span class=\"c1\">#raise an exception</span>\n</pre>\n<p>The RustEnum can have a enum without value type, which represented by <code>None</code>.</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Enum1</span><span class=\"p\">(</span><span class=\"n\">RustEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">_enums</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'opt1'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">]),</span> <span class=\"p\">(</span><span class=\"s1\">'opt2'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)]</span>\n\n<span class=\"n\">e2</span> <span class=\"o\">=</span> <span class=\"n\">Enum1</span><span class=\"p\">(</span><span class=\"s1\">'opt2'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"c1\">#or</span>\n<span class=\"n\">e2</span> <span class=\"o\">=</span> <span class=\"n\">Enum1</span><span class=\"p\">(</span><span class=\"s1\">'opt2'</span><span class=\"p\">)</span>\n</pre>\n<p>You can also instantiate a RustEnum object by index and value.</p>\n<pre><span class=\"n\">e1</span> <span class=\"o\">=</span> <span class=\"n\">Enum1</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n<span class=\"c1\"># which is equivalent to</span>\n<span class=\"n\">e1</span> <span class=\"o\">=</span> <span class=\"n\">Enum1</span><span class=\"p\">(</span><span class=\"s1\">'opt1'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"mi\">5</span><span class=\"p\">])</span>\n</pre>\n<h3>About optional type</h3>\n<p>An optional type in libra is a nullable data either exists in its full representation or does not. For example,</p>\n<pre><code>optional_data: Option(uint8); // Rust/Libra\nuint8 *optional_data; // C\n</code></pre>\n<p>It has similar semantics meaning with the following enum type:</p>\n<pre><code>enum Option&lt;uint8&gt; {\n    Some(uint8),\n    None,\n}\n</code></pre>\n<p>To define a optional with Canoser, first write a class that inherits from \"canoser.RustOptional\", and then define the types owned by RustOptional through the \"_type\" field. For example,</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">OptionUInt</span><span class=\"p\">(</span><span class=\"n\">RustOptional</span><span class=\"p\">):</span>\n    <span class=\"n\">_type</span> <span class=\"o\">=</span> <span class=\"n\">Uint8</span>\n\n<span class=\"n\">null</span> <span class=\"o\">=</span> <span class=\"n\">OptionUInt</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n<span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">OptionUInt</span><span class=\"p\">(</span><span class=\"mi\">8</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"mi\">8</span>\n</pre>\n<p>Here's a complete example:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">OptionStr</span><span class=\"p\">(</span><span class=\"n\">RustOptional</span><span class=\"p\">):</span>\n    <span class=\"n\">_type</span> <span class=\"o\">=</span> <span class=\"nb\">str</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">OptionTest</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'message'</span><span class=\"p\">,</span> <span class=\"n\">OptionStr</span><span class=\"p\">)</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">msg</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n        <span class=\"k\">if</span> <span class=\"n\">msg</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">OptionStr</span><span class=\"p\">(</span><span class=\"n\">msg</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">OptionStr</span><span class=\"p\">(</span><span class=\"kc\">None</span><span class=\"p\">)</span>\n\n<span class=\"n\">test</span> <span class=\"o\">=</span> <span class=\"n\">OptionTest</span><span class=\"p\">(</span><span class=\"s1\">'test_str'</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">test</span><span class=\"o\">.</span><span class=\"n\">message</span><span class=\"o\">.</span><span class=\"n\">value</span> <span class=\"o\">==</span> <span class=\"s1\">'test_str'</span>\n</pre>\n<p>The RustOptional type in canoser is similar to <code>typing.Optional</code> in python. Note that this is not the same concept as an optional argument, which is one that has a default.</p>\n<h3>Nested data structure</h3>\n<p>The following is a complex example with three data structures:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Addr</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"s1\">'addr'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">])]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">Bar</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">Uint64</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">]),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">Addr</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'d'</span><span class=\"p\">,</span> <span class=\"n\">Uint32</span><span class=\"p\">),</span>\n    <span class=\"p\">]</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">(</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'a'</span><span class=\"p\">,</span> <span class=\"n\">Uint64</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'b'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">]),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'c'</span><span class=\"p\">,</span> <span class=\"n\">Bar</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'d'</span><span class=\"p\">,</span> <span class=\"nb\">bool</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'e'</span><span class=\"p\">,</span> <span class=\"p\">{}),</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>This example refers to the test code from canonical serialization in libra.</p>\n<h3>Serialization and deserialization</h3>\n<p>After defining canoser.Struct, you don't need to implement serialization and deserialization code yourself, you can directly call the default implementation of the base class. Take the AccountResource structure as an example:</p>\n<pre><span class=\"c1\"># serialize an object</span>\n<span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">AccountResource</span><span class=\"p\">(</span><span class=\"n\">authentication_key</span><span class=\"o\">=...</span><span class=\"p\">,</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"n\">bbytes</span> <span class=\"o\">=</span> <span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">serialize</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># deserialize an object from bytes</span>\n<span class=\"n\">obj</span> <span class=\"o\">=</span> <span class=\"n\">AccountResource</span><span class=\"o\">.</span><span class=\"n\">deserialize</span><span class=\"p\">(</span><span class=\"n\">bbytes</span><span class=\"p\">)</span>\n</pre>\n<h3>Json pretty print</h3>\n<p>For any canoser <code>Struct</code>, you can call the <code>to_json</code> method to get a formatted json string:</p>\n<pre><span class=\"c1\"># serialize an object</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">to_json</span><span class=\"p\">())</span>\n</pre>\n<h3>Get field value from object</h3>\n<p>For all fields defined by the \"_fields\", the value of this field of an object can be obtained via field_name. such as:</p>\n<pre><span class=\"n\">obj</span><span class=\"o\">.</span><span class=\"n\">authentication_key</span>\n</pre>\n<h2>Rust Type Alias</h2>\n<p>For simple type alias in rust, such as:</p>\n<pre><span class=\"c1\">// in rust</span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">type</span> <span class=\"nc\">Round</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"kt\">u64</span><span class=\"p\">;</span><span class=\"w\"></span>\n</pre>\n<p>We can define the alias like this:</p>\n<pre><span class=\"c1\"># in python</span>\n<span class=\"n\">Round</span> <span class=\"o\">=</span> <span class=\"n\">Uint64</span>\n</pre>\n<h2>Rust Tuple Struct</h2>\n<p>Struct like Address and ByteArray has no fields:</p>\n<pre><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">Address</span><span class=\"p\">([</span><span class=\"kt\">u8</span><span class=\"p\">;</span><span class=\"w\"> </span><span class=\"n\">ADDRESS_LENGTH</span><span class=\"p\">]);</span><span class=\"w\"></span>\n<span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">ByteArray</span><span class=\"p\">(</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">);</span><span class=\"w\"></span>\n</pre>\n<p>These struct called <code>tuple struct</code> in <code>Rust</code> programming language. Tuple struct is like <code>typedef</code> other than struct in <code>C</code> like programming languages.</p>\n<p>You can just define them as a direct type, no struct. Just code like this:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">TransactionArgument</span><span class=\"p\">(</span><span class=\"n\">RustEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">_enums</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"o\">...</span>\n        <span class=\"p\">(</span><span class=\"s1\">'Address'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"n\">ADDRESS_LENGTH</span><span class=\"p\">]),</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Or you can define an <code>Address</code> class which inherit from <code>canoser.DelegateT</code> and has a <code>delegate_type</code> field with type <code>[Uint8, ADDRESS_LENGTH]</code>:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Address</span><span class=\"p\">(</span><span class=\"n\">DelegateT</span><span class=\"p\">):</span>\n    <span class=\"n\">delegate_type</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"n\">ADDRESS_LENGTH</span><span class=\"p\">]</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">TransactionArgument</span><span class=\"p\">(</span><span class=\"n\">RustEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">_enums</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"o\">...</span>\n        <span class=\"p\">(</span><span class=\"s1\">'Address'</span><span class=\"p\">,</span> <span class=\"n\">Address</span><span class=\"p\">),</span>\n        <span class=\"o\">...</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Do not instantiate a <code>canoser.DelegateT</code> type in assaignment, for example:</p>\n<pre><span class=\"n\">transactionArgument</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"o\">...</span><span class=\"p\">]</span> <span class=\"c1\">#ok</span>\n<span class=\"n\">transactionArgument</span><span class=\"o\">.</span><span class=\"n\">address</span> <span class=\"o\">=</span> <span class=\"n\">Address</span><span class=\"p\">([</span><span class=\"o\">...</span><span class=\"p\">])</span>  <span class=\"c1\">#error</span>\n</pre>\n<h2>Notice</h2>\n<h3>Must define canoser struct by serialized fields and sequence, not the definition in the rust struct.</h3>\n<p>For example, the SignedTransaction in Libra is defined as following code:</p>\n<pre><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">struct</span> <span class=\"nc\">SignedTransaction</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">raw_txn</span>: <span class=\"nc\">RawTransaction</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">public_key</span>: <span class=\"nc\">Ed25519PublicKey</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">signature</span>: <span class=\"nc\">Ed25519Signature</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">transaction_length</span>: <span class=\"kt\">usize</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre>\n<p>But field <code>transaction_length</code> doesn't write to the output.</p>\n<pre><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">CanonicalSerialize</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">SignedTransaction</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">serialize</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">serializer</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">CanonicalSerializer</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"n\">serializer</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_struct</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">raw_txn</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_bytes</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">public_key</span><span class=\"p\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">.</span><span class=\"n\">encode_bytes</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">.</span><span class=\"n\">signature</span><span class=\"p\">.</span><span class=\"n\">to_bytes</span><span class=\"p\">())</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre>\n<p>So we define SignedTransaction in canoser as following code:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">SignedTransaction</span><span class=\"p\">(</span><span class=\"n\">canoser</span><span class=\"o\">.</span><span class=\"n\">Struct</span><span class=\"p\">):</span>\n    <span class=\"n\">_fields</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'raw_txn'</span><span class=\"p\">,</span> <span class=\"n\">RawTransaction</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'public_key'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"n\">ED25519_PUBLIC_KEY_LENGTH</span><span class=\"p\">]),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'signature'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">,</span> <span class=\"n\">ED25519_SIGNATURE_LENGTH</span><span class=\"p\">])</span>\n    <span class=\"p\">]</span>\n</pre>\n<p>Here is another example. The definition sequence and serialize sequence is opposite in  <code>WriteOp</code></p>\n<pre><span class=\"k\">pub</span><span class=\"w\"> </span><span class=\"k\">enum</span> <span class=\"nc\">WriteOp</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"nb\">Vec</span><span class=\"o\">&lt;</span><span class=\"kt\">u8</span><span class=\"o\">&gt;</span><span class=\"p\">),</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Deletion</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">enum</span> <span class=\"nc\">WriteOpType</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Deletion</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n\n<span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">CanonicalSerialize</span><span class=\"w\"> </span><span class=\"k\">for</span><span class=\"w\"> </span><span class=\"n\">WriteOp</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"k\">fn</span> <span class=\"nf\">serialize</span><span class=\"p\">(</span><span class=\"o\">&amp;</span><span class=\"bp\">self</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"n\">serializer</span>: <span class=\"kp\">&amp;</span><span class=\"nc\">mut</span><span class=\"w\"> </span><span class=\"k\">impl</span><span class=\"w\"> </span><span class=\"n\">CanonicalSerializer</span><span class=\"p\">)</span><span class=\"w\"> </span>-&gt; <span class=\"nb\">Result</span><span class=\"o\">&lt;</span><span class=\"p\">()</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"k\">match</span><span class=\"w\"> </span><span class=\"bp\">self</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">WriteOp</span>::<span class=\"n\">Deletion</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"n\">serializer</span><span class=\"p\">.</span><span class=\"n\">encode_u32</span><span class=\"p\">(</span><span class=\"n\">WriteOpType</span>::<span class=\"n\">Deletion</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">,</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"n\">WriteOp</span>::<span class=\"n\">Value</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span><span class=\"w\"> </span><span class=\"o\">=&gt;</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">serializer</span><span class=\"p\">.</span><span class=\"n\">encode_u32</span><span class=\"p\">(</span><span class=\"n\">WriteOpType</span>::<span class=\"n\">Value</span><span class=\"w\"> </span><span class=\"k\">as</span><span class=\"w\"> </span><span class=\"kt\">u32</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"w\">                </span><span class=\"n\">serializer</span><span class=\"p\">.</span><span class=\"n\">encode_vec</span><span class=\"p\">(</span><span class=\"n\">value</span><span class=\"p\">)</span><span class=\"o\">?</span><span class=\"w\"></span>\n<span class=\"w\">            </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"p\">};</span><span class=\"w\"></span>\n<span class=\"w\">        </span><span class=\"nb\">Ok</span><span class=\"p\">(())</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"p\">}</span><span class=\"w\"></span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</pre>\n<p>So, we define <code>WriteOp</code> as follow:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">WriteOp</span><span class=\"p\">(</span><span class=\"n\">RustEnum</span><span class=\"p\">):</span>\n    <span class=\"n\">_enums</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">(</span><span class=\"s1\">'Deletion'</span><span class=\"p\">,</span> <span class=\"kc\">None</span><span class=\"p\">),</span>\n        <span class=\"p\">(</span><span class=\"s1\">'Value'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"n\">Uint8</span><span class=\"p\">])</span>\n    <span class=\"p\">]</span>\n</pre>\n<h2>Related Projects</h2>\n<p><a href=\"https://www.MoveOnLibra.com\" rel=\"nofollow\">MoveOnLibra OpenAPI: make writing libra wallet &amp; move program easier</a></p>\n<p><a href=\"https://github.com/yuan-xy/canoser-ruby\" rel=\"nofollow\">A Ruby implementation of the LCS(Libra Canonical Serialization)</a></p>\n<p><a href=\"https://github.com/yuan-xy/libra-client\" rel=\"nofollow\">A Python implementation of client APIs and command-line tools for the Libra network</a></p>\n<h2>License</h2>\n<p>The package is available as open source under the terms of the <a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>.</p>\n\n          </div>"}, "last_serial": 6932946, "releases": {"0.1.2": [{"comment_text": "", "digests": {"md5": "f5b2ee62d1f6180b794df10ae28b24b3", "sha256": "9c48fee1a7a0a1f53d4ce4180dbf9a07d6b49b9e8c7aa97d6c828fdc3cdb0484"}, "downloads": -1, "filename": "canoser-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "f5b2ee62d1f6180b794df10ae28b24b3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7393, "upload_time": "2019-09-11T09:13:22", "upload_time_iso_8601": "2019-09-11T09:13:22.597213Z", "url": "https://files.pythonhosted.org/packages/0e/81/cc53a100760dd42ff228e3ce61d6637581a19a6995f5feab37fad932f7f4/canoser-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8d1de340c6926a55376078ecf925b322", "sha256": "52fe8064ec55783cd57cb1f22ef6ff0548d9e08659844a2c992f1d68cf9b2521"}, "downloads": -1, "filename": "canoser-0.1.2.tar.gz", "has_sig": false, "md5_digest": "8d1de340c6926a55376078ecf925b322", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7774, "upload_time": "2019-09-11T09:13:26", "upload_time_iso_8601": "2019-09-11T09:13:26.029690Z", "url": "https://files.pythonhosted.org/packages/4a/d4/7798075bed8497b6dd88ed3c115474e3a197ba0a40829968c6d9875f78ed/canoser-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "f3b8d6cb589a3bc9cfa718c08454028b", "sha256": "5417db448e660ef813da6af2dc7fa7a40636ed18c4dbad873ad2c9c1249ad874"}, "downloads": -1, "filename": "canoser-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "f3b8d6cb589a3bc9cfa718c08454028b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7371, "upload_time": "2019-09-14T01:43:49", "upload_time_iso_8601": "2019-09-14T01:43:49.266276Z", "url": "https://files.pythonhosted.org/packages/cb/89/3e49c7ee531379fae84732b92dcce76565036b64a76366c9442cab68d27c/canoser-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5f8de89924d837f2c864fd8ff59bad1", "sha256": "2a4d282ccde962039d1612deedd9a2ba03baa3a5d6f2b2996643886cd10c1905"}, "downloads": -1, "filename": "canoser-0.1.3.tar.gz", "has_sig": false, "md5_digest": "a5f8de89924d837f2c864fd8ff59bad1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 7726, "upload_time": "2019-09-14T01:43:51", "upload_time_iso_8601": "2019-09-14T01:43:51.190518Z", "url": "https://files.pythonhosted.org/packages/7c/4a/3b6112f2e04979bc5ff23931955ec5d51b263b01cc5908aa76d0b97425bb/canoser-0.1.3.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4aad3f32523d11333a9c944faaba026c", "sha256": "b131b3434ba76284dd835aee52f59d194c61550a7089139229773da7324ddf6d"}, "downloads": -1, "filename": "canoser-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4aad3f32523d11333a9c944faaba026c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9620, "upload_time": "2019-09-20T10:14:05", "upload_time_iso_8601": "2019-09-20T10:14:05.287892Z", "url": "https://files.pythonhosted.org/packages/07/2b/1378a1aa32fe4f0cffea51199e6dd08cffa6f9b6f48ed7c314e41ef4a2c9/canoser-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "150ce4801c7b425781da12c7a2522b35", "sha256": "fbcc32249a5e817e4b7778021ffe54ddc3b91534c61f7a2d160d272692665965"}, "downloads": -1, "filename": "canoser-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "150ce4801c7b425781da12c7a2522b35", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6293, "upload_time": "2019-09-21T23:56:45", "upload_time_iso_8601": "2019-09-21T23:56:45.050390Z", "url": "https://files.pythonhosted.org/packages/9a/8c/0d5ea3c8a16d5ea11ca075c7d4a71587859bc373162d3f056825fb13d908/canoser-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8c92fc5b09bc058846c17531d865ba14", "sha256": "6d2521845231d772f6f10402e47796e62730d92042ff7e57034c64859ca14459"}, "downloads": -1, "filename": "canoser-0.2.1.tar.gz", "has_sig": false, "md5_digest": "8c92fc5b09bc058846c17531d865ba14", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8490, "upload_time": "2019-09-21T23:56:46", "upload_time_iso_8601": "2019-09-21T23:56:46.390580Z", "url": "https://files.pythonhosted.org/packages/b2/77/df09cba9eaa8560d9a90c32891f2a45a618d3cfb45b070d05b90ceeb8f47/canoser-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "97bbd73193390692cc33c4890ed68148", "sha256": "1f4cf12c1a66b6140d6db5a810a7e97e0d89949b08ea6cfca6829590e08ac724"}, "downloads": -1, "filename": "canoser-0.2.2-py3-none-any.whl", "has_sig": false, "md5_digest": "97bbd73193390692cc33c4890ed68148", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 6965, "upload_time": "2019-09-22T00:55:04", "upload_time_iso_8601": "2019-09-22T00:55:04.864612Z", "url": "https://files.pythonhosted.org/packages/cf/dd/fe6173dea850610ce6b23a4b2a148d2635df06f822afe7d49fb3ed782f89/canoser-0.2.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c20de97066d26b8c51d45bdc2ac8daad", "sha256": "4fe884446d7aa2e68f0fbfd0e9014031ff605240f8778a02587bb07c81340b6c"}, "downloads": -1, "filename": "canoser-0.2.2.tar.gz", "has_sig": false, "md5_digest": "c20de97066d26b8c51d45bdc2ac8daad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8880, "upload_time": "2019-09-22T00:55:06", "upload_time_iso_8601": "2019-09-22T00:55:06.774602Z", "url": "https://files.pythonhosted.org/packages/80/74/90ac09e65ecd55c960763425638713d0ffc5fbe9a14bdb9971ab1b455763/canoser-0.2.2.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "e38c5889870b63a8847ad08a4de57286", "sha256": "31053faa3a3df907b4c42998b7faec9c05d7db2c341415c4357e04c7882523b0"}, "downloads": -1, "filename": "canoser-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "e38c5889870b63a8847ad08a4de57286", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7804, "upload_time": "2019-09-23T05:17:05", "upload_time_iso_8601": "2019-09-23T05:17:05.295555Z", "url": "https://files.pythonhosted.org/packages/27/89/2bd8bab5d47fbc991952909b4afd410aec189ceff7c36b6edf2f9bb746b6/canoser-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "166a8485d5b454c168edeb0e3e3a98cf", "sha256": "f2a50393e7430f789e18919e12360a28b66e2a9e328e4a5a7b5c5561f098ef1f"}, "downloads": -1, "filename": "canoser-0.3.1.tar.gz", "has_sig": false, "md5_digest": "166a8485d5b454c168edeb0e3e3a98cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9804, "upload_time": "2019-09-23T05:17:07", "upload_time_iso_8601": "2019-09-23T05:17:07.310783Z", "url": "https://files.pythonhosted.org/packages/69/67/66c00ec37c7aad781f9deabf9a6811098f0190db058e336756f01df0db7e/canoser-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "e6c3d153ef02ce5c7ceeb2be23bb1a60", "sha256": "77a66b38f5c757d584b618fbb2f6b055fe5e6c92ea9224203e3df762b49a4468"}, "downloads": -1, "filename": "canoser-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "e6c3d153ef02ce5c7ceeb2be23bb1a60", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7736, "upload_time": "2019-09-23T07:30:46", "upload_time_iso_8601": "2019-09-23T07:30:46.211912Z", "url": "https://files.pythonhosted.org/packages/7e/af/bf51ddfbee84f6a12ea304b3cff30668abbef93b60f6dc0518f1d00a73da/canoser-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a114e63be9d34fa2adf6d1ba9be829ca", "sha256": "e86601e39b69bb0eaacf778eb40487b6eb8970ef3f471007eddd347d571c2888"}, "downloads": -1, "filename": "canoser-0.3.2.tar.gz", "has_sig": false, "md5_digest": "a114e63be9d34fa2adf6d1ba9be829ca", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9758, "upload_time": "2019-09-23T07:30:48", "upload_time_iso_8601": "2019-09-23T07:30:48.383095Z", "url": "https://files.pythonhosted.org/packages/05/54/903a0b49f8ff77d02883f26049a9f5f919fdee8c1c672f9ad4dacb2db6fb/canoser-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "a09f8251ffaa7132e937174f3dee2a08", "sha256": "4bb1ccd1e2ce4fbe68356fd4b4029abab5f20403db6450691b579c74d34f8f59"}, "downloads": -1, "filename": "canoser-0.3.3-py3-none-any.whl", "has_sig": false, "md5_digest": "a09f8251ffaa7132e937174f3dee2a08", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8275, "upload_time": "2019-09-23T10:08:53", "upload_time_iso_8601": "2019-09-23T10:08:53.265513Z", "url": "https://files.pythonhosted.org/packages/22/9a/80cb3c041999a5dcc1538b91a25673d36bb910ce12d848be97cf232c286c/canoser-0.3.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b5f79a29001ec5f801649896af377375", "sha256": "d33dd1ae3f98e927da1e433afd9b3d8d661574da9224e174645bef8a11a20ba5"}, "downloads": -1, "filename": "canoser-0.3.3.tar.gz", "has_sig": false, "md5_digest": "b5f79a29001ec5f801649896af377375", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 9930, "upload_time": "2019-09-23T10:08:55", "upload_time_iso_8601": "2019-09-23T10:08:55.198781Z", "url": "https://files.pythonhosted.org/packages/64/30/be5dd13f12a6b9fb733971e960909fa8f82ef1a92d338cabd0d31e0997e7/canoser-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "b77d33df872003ded5cda75fff799f41", "sha256": "e9453369a6051a53e0ec57fd432aea878c43e4e8d0ba882b2dd48365ef9593fc"}, "downloads": -1, "filename": "canoser-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "b77d33df872003ded5cda75fff799f41", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 8372, "upload_time": "2019-09-27T00:41:07", "upload_time_iso_8601": "2019-09-27T00:41:07.516863Z", "url": "https://files.pythonhosted.org/packages/fe/4f/f4a557fb10366780ef5c55be0390c5baa44a48ce4d4273f41734904f32c7/canoser-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "14f94bd2e22bfac00ad1b1c05e8e80e4", "sha256": "e968de2816a71b293ae2b4eb0884a5e3d3ec6e83bb868579f9d54a88ba4233b1"}, "downloads": -1, "filename": "canoser-0.3.4.tar.gz", "has_sig": false, "md5_digest": "14f94bd2e22bfac00ad1b1c05e8e80e4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12803, "upload_time": "2019-09-27T00:41:09", "upload_time_iso_8601": "2019-09-27T00:41:09.442780Z", "url": "https://files.pythonhosted.org/packages/81/c4/c74978519e91b171d307133b70f08214bf24b9dccf2be60083fd40464e99/canoser-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "ada93bdefa3428eb7fa886301fbf0a4a", "sha256": "196d68996612be1580221c8f80676c849c1e166d107d34b131e1b1fcf9839c1b"}, "downloads": -1, "filename": "canoser-0.3.5-py3-none-any.whl", "has_sig": false, "md5_digest": "ada93bdefa3428eb7fa886301fbf0a4a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9302, "upload_time": "2019-10-02T11:31:50", "upload_time_iso_8601": "2019-10-02T11:31:50.196160Z", "url": "https://files.pythonhosted.org/packages/9f/4a/2f7bf8e8cdc481057ed088d871616f1fa7ab028c84d3e1bb5dd038ea271f/canoser-0.3.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bda0ede84956612c18762370e85ef5a9", "sha256": "a6802ef253f17594da2051c49f84b80c590230d3e3457b5fe9c1bc219773950c"}, "downloads": -1, "filename": "canoser-0.3.5.tar.gz", "has_sig": false, "md5_digest": "bda0ede84956612c18762370e85ef5a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14030, "upload_time": "2019-10-02T11:31:52", "upload_time_iso_8601": "2019-10-02T11:31:52.266244Z", "url": "https://files.pythonhosted.org/packages/93/f0/00a698efd862d80c868828b40dfe868ea7221460af2dc5a47471c81df071/canoser-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "6a0e2be6f26e817bb0b4d78e7db2af92", "sha256": "9da3ee2d241200db96f4e65b86a7acd0815831b869fc761a0ff9ae5cf3fedaf7"}, "downloads": -1, "filename": "canoser-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "6a0e2be6f26e817bb0b4d78e7db2af92", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9331, "upload_time": "2019-10-02T13:21:17", "upload_time_iso_8601": "2019-10-02T13:21:17.034097Z", "url": "https://files.pythonhosted.org/packages/dd/e4/e07e3922550af2d85b92ab08291e8e7da32050e89a91485ae13dd76882d5/canoser-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f8a7aa29899d264d47b6bc9fd5f0c54e", "sha256": "906a666dd06ed1e8c665313a742ab3c22282ba6191031de20ae3ec2acbfeb268"}, "downloads": -1, "filename": "canoser-0.3.6.tar.gz", "has_sig": false, "md5_digest": "f8a7aa29899d264d47b6bc9fd5f0c54e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14164, "upload_time": "2019-10-02T13:21:18", "upload_time_iso_8601": "2019-10-02T13:21:18.930779Z", "url": "https://files.pythonhosted.org/packages/5e/b0/0b7ead7e12c442b1cdbeb6d28598168da884067c168b08c50df3bf5381aa/canoser-0.3.6.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "c2c03b881b390e7cf3bf936dfb50dd69", "sha256": "d1f16f9fbb009feba05e6c5b140ebb53b4a963a2ebb273a23b878a4c3bdce2ca"}, "downloads": -1, "filename": "canoser-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c2c03b881b390e7cf3bf936dfb50dd69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 12800, "upload_time": "2019-10-03T23:26:00", "upload_time_iso_8601": "2019-10-03T23:26:00.251735Z", "url": "https://files.pythonhosted.org/packages/a3/37/cf2a629fa4101414e3c890576c13405c9cd897fbd490274f577c07c35288/canoser-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9e7c460a04fadea37f3c671d6eaed507", "sha256": "511bbac0b8976d41b4e130ce14aa6d3ef7f3d0e04f03265ee8785bf0feb456f9"}, "downloads": -1, "filename": "canoser-0.4.1.tar.gz", "has_sig": false, "md5_digest": "9e7c460a04fadea37f3c671d6eaed507", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 17832, "upload_time": "2019-10-03T23:26:03", "upload_time_iso_8601": "2019-10-03T23:26:03.922787Z", "url": "https://files.pythonhosted.org/packages/a5/be/9be15417ba2a620ca46ccb5c28c581b6cf243cc347c0d1838a0d36e69835/canoser-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "15bb6e527f6036a734f778e1a72f4c95", "sha256": "8a944b3c276f617c74b7680b83c3ab45931dd6452c26481d20911c36ff72c66f"}, "downloads": -1, "filename": "canoser-0.4.2-py3-none-any.whl", "has_sig": false, "md5_digest": "15bb6e527f6036a734f778e1a72f4c95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13270, "upload_time": "2019-10-05T11:03:48", "upload_time_iso_8601": "2019-10-05T11:03:48.131650Z", "url": "https://files.pythonhosted.org/packages/df/b0/f407cb758100eda11e3d92565ecfb1f0d1a7e7c7d2f0d7f31fd622a33ecb/canoser-0.4.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "609a02eaee71f9fe0079964e38a4e101", "sha256": "19d24c1dcd3c44baed1c2ca8cc3cfcaf0d6622dff1052657a4a8b2f4c8871c74"}, "downloads": -1, "filename": "canoser-0.4.2.tar.gz", "has_sig": false, "md5_digest": "609a02eaee71f9fe0079964e38a4e101", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18368, "upload_time": "2019-10-05T11:03:50", "upload_time_iso_8601": "2019-10-05T11:03:50.317960Z", "url": "https://files.pythonhosted.org/packages/ee/88/6b2fa227d5bdb46e95681de94c3205e960566d34c93243a524469ed1f647/canoser-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "7d5f074a58104bc4530e90278899c4e7", "sha256": "8c1ffda4c265aa091b00b13fa06ceda719b7ccd85eb2cf92f3b56dc041d0bbf9"}, "downloads": -1, "filename": "canoser-0.4.3-py3-none-any.whl", "has_sig": false, "md5_digest": "7d5f074a58104bc4530e90278899c4e7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13355, "upload_time": "2019-10-08T14:24:32", "upload_time_iso_8601": "2019-10-08T14:24:32.985920Z", "url": "https://files.pythonhosted.org/packages/ab/8d/bcf50dbe01eed232e4d193b730d294c728e3e7c3bca37989f8367dee7743/canoser-0.4.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "555595609a09ef11141a497aa0d4ce88", "sha256": "53fddfaf7687c0120804fb0540491181d06f74842e25ebef6e9d7cd5d40791ac"}, "downloads": -1, "filename": "canoser-0.4.3.tar.gz", "has_sig": false, "md5_digest": "555595609a09ef11141a497aa0d4ce88", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18616, "upload_time": "2019-10-08T14:24:35", "upload_time_iso_8601": "2019-10-08T14:24:35.074868Z", "url": "https://files.pythonhosted.org/packages/38/f0/b9b452b498de9252c5187cf432913f78c8cd7dfcf516f89502ec0deb85c4/canoser-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "ba71309a69f7fc129274dd8eb78e6a5e", "sha256": "b7ed781a317ffcce17650cd85fd2faf9444087e5cdda96f55219503c61db905a"}, "downloads": -1, "filename": "canoser-0.4.4-py3-none-any.whl", "has_sig": false, "md5_digest": "ba71309a69f7fc129274dd8eb78e6a5e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 13403, "upload_time": "2019-10-10T15:31:20", "upload_time_iso_8601": "2019-10-10T15:31:20.402788Z", "url": "https://files.pythonhosted.org/packages/f0/aa/69af37b60e1e43331fd0ad5a5245fa433bad061351b79bb2e103df2b7e40/canoser-0.4.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9402c02f9391dbe85c5a470431881d8", "sha256": "6888f860f69a82d521d601c9c460709758b30d67bf97f4220d41ff0c34ffb872"}, "downloads": -1, "filename": "canoser-0.4.4.tar.gz", "has_sig": false, "md5_digest": "f9402c02f9391dbe85c5a470431881d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18777, "upload_time": "2019-10-10T15:31:23", "upload_time_iso_8601": "2019-10-10T15:31:23.111076Z", "url": "https://files.pythonhosted.org/packages/c0/55/206b291b880fcce7e4d7e870bde582c2d2625014969831f6c56130513dfe/canoser-0.4.4.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "8bfe1670172b86ee0521e8550bb45858", "sha256": "46f9f4eb020a8dea50634f00cb01cde55e9c53cf519efe52b9a1f064a40e5bb4"}, "downloads": -1, "filename": "canoser-0.5.1-py3-none-any.whl", "has_sig": false, "md5_digest": "8bfe1670172b86ee0521e8550bb45858", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14050, "upload_time": "2019-10-17T03:31:24", "upload_time_iso_8601": "2019-10-17T03:31:24.182929Z", "url": "https://files.pythonhosted.org/packages/0c/4f/cb6916f9b527eddeb6fb3dd8c2f77197ff309c563ef4b9d49c19179039b6/canoser-0.5.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d180798fb0c0f8db97233a4cc0d9854c", "sha256": "96d3da38a0ce34ebec0a6e2f07020dc52ef7bda05187ef1ead26b097114e39fd"}, "downloads": -1, "filename": "canoser-0.5.1.tar.gz", "has_sig": false, "md5_digest": "d180798fb0c0f8db97233a4cc0d9854c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19572, "upload_time": "2019-10-17T03:31:37", "upload_time_iso_8601": "2019-10-17T03:31:37.756467Z", "url": "https://files.pythonhosted.org/packages/a4/59/1d79fea930b0e12f54f8b4ffbb525bdbf8bd410ed380f782c0dc6b1ab052/canoser-0.5.1.tar.gz", "yanked": false}], "0.5.2": [{"comment_text": "", "digests": {"md5": "9d4e59660859cd7f0b6216277ebfb1f9", "sha256": "f5a5c2d364a88586a5cd5127d5892fab9d7ccc5f6996164e633cdf1dc25e2e95"}, "downloads": -1, "filename": "canoser-0.5.2-py3-none-any.whl", "has_sig": false, "md5_digest": "9d4e59660859cd7f0b6216277ebfb1f9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14289, "upload_time": "2019-10-20T01:50:37", "upload_time_iso_8601": "2019-10-20T01:50:37.618427Z", "url": "https://files.pythonhosted.org/packages/87/33/5cc3ac723f821cb687a84aa8413d4e36e74e1204422f5c8862e7a220b668/canoser-0.5.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9250de9492e4cb8e8952acb2f37c2ae0", "sha256": "ad4bb7da5dcaa95c905232cdbb4758197458ef6035586aa395e014a9e39502a9"}, "downloads": -1, "filename": "canoser-0.5.2.tar.gz", "has_sig": false, "md5_digest": "9250de9492e4cb8e8952acb2f37c2ae0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 19916, "upload_time": "2019-10-20T01:50:39", "upload_time_iso_8601": "2019-10-20T01:50:39.968280Z", "url": "https://files.pythonhosted.org/packages/44/64/b2fcbd0c0283c70e63aa9cacf9ded060b36af0b8da465b5d62f74bc5b52d/canoser-0.5.2.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "5e1208ed2ff5a9b480e720f50f1ac88a", "sha256": "c7a186173f3ae3e70e72fe61e10254f9075e4b5329d295eb5d4721e4360fb912"}, "downloads": -1, "filename": "canoser-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "5e1208ed2ff5a9b480e720f50f1ac88a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14419, "upload_time": "2019-10-31T06:00:15", "upload_time_iso_8601": "2019-10-31T06:00:15.045904Z", "url": "https://files.pythonhosted.org/packages/8f/04/6162b3a4dd4ff0c263168aac3f24dcb919a3113bf0f07e3de35371b689f5/canoser-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72c20f69b7e0d77cc5df6a7321cdfadc", "sha256": "0cd7043fc37cade93948cb1eb416244d1edec416341eb25332bc642eeee29a77"}, "downloads": -1, "filename": "canoser-0.6.0.tar.gz", "has_sig": false, "md5_digest": "72c20f69b7e0d77cc5df6a7321cdfadc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20402, "upload_time": "2019-10-31T06:00:17", "upload_time_iso_8601": "2019-10-31T06:00:17.400730Z", "url": "https://files.pythonhosted.org/packages/92/1e/a222b0939cd19b01371f2197408ab01e4ba383cbc86a8c1d730b34a566d7/canoser-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "7fd6b99f819a75ba3938a22699ef3799", "sha256": "f0c221a0cf3b40d9a6b345e692799977752136b5cc10710691c895de95364159"}, "downloads": -1, "filename": "canoser-0.6.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7fd6b99f819a75ba3938a22699ef3799", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14434, "upload_time": "2019-11-04T01:39:51", "upload_time_iso_8601": "2019-11-04T01:39:51.821442Z", "url": "https://files.pythonhosted.org/packages/f3/4c/2d1c8a33d7e434c1b90a496cb93320ed0cb2a7953e364a9ce875e2057532/canoser-0.6.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "833712d432b5672cf2cae8e6d1f8200b", "sha256": "09a5a7fad7594f2d7897429d50d2b433e2aabacc832ae0fe4c712b42877f8221"}, "downloads": -1, "filename": "canoser-0.6.1.tar.gz", "has_sig": false, "md5_digest": "833712d432b5672cf2cae8e6d1f8200b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20538, "upload_time": "2019-11-04T01:39:53", "upload_time_iso_8601": "2019-11-04T01:39:53.631008Z", "url": "https://files.pythonhosted.org/packages/e2/18/bbc4977ab9a95fe8195dbc32f07040f30deeb494b2a53225745e57ffdc9c/canoser-0.6.1.tar.gz", "yanked": false}], "0.6.2": [{"comment_text": "", "digests": {"md5": "abaa1911253ea3a84f021f8924b44bdc", "sha256": "554c63aa8895e6953beac7af1ff6c025a365cb6b0fe8948aa6d987e3d4d863d9"}, "downloads": -1, "filename": "canoser-0.6.2-py3-none-any.whl", "has_sig": false, "md5_digest": "abaa1911253ea3a84f021f8924b44bdc", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14446, "upload_time": "2019-11-04T02:02:33", "upload_time_iso_8601": "2019-11-04T02:02:33.514779Z", "url": "https://files.pythonhosted.org/packages/89/02/901b5a94d70acf0e84c698f8fad4256bead336cd83f05d9060fe63e99377/canoser-0.6.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2d28c4cfb2329a8d0a9a0a5e078b576c", "sha256": "b00272b85812ae2d575665d3857da56297aec7a4acd788253affc8f5299ae522"}, "downloads": -1, "filename": "canoser-0.6.2.tar.gz", "has_sig": false, "md5_digest": "2d28c4cfb2329a8d0a9a0a5e078b576c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 20602, "upload_time": "2019-11-04T02:02:36", "upload_time_iso_8601": "2019-11-04T02:02:36.215970Z", "url": "https://files.pythonhosted.org/packages/f1/cd/d2c254686b82a18e17ecd255b95849694a341f01155f8f785bea1d9ddcd4/canoser-0.6.2.tar.gz", "yanked": false}], "0.6.3": [{"comment_text": "", "digests": {"md5": "8364726c724215d7fd53381cc1011374", "sha256": "e70c14d8cce4905e5953f48faaf3c0ea4aa748b6465ca5200629d703d4a86f32"}, "downloads": -1, "filename": "canoser-0.6.3-py3-none-any.whl", "has_sig": false, "md5_digest": "8364726c724215d7fd53381cc1011374", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 14720, "upload_time": "2019-11-27T02:51:04", "upload_time_iso_8601": "2019-11-27T02:51:04.687272Z", "url": "https://files.pythonhosted.org/packages/31/d2/85078bfcea57d4d57857bd08c2aab1b3d548168a56cbe1261899b1ca5f78/canoser-0.6.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4bbfdbbdb42be52cddd90d0724427fe9", "sha256": "7614afa4961a2e651f034d376685579c853b6582e3be06f90199465f6bcc97c1"}, "downloads": -1, "filename": "canoser-0.6.3.tar.gz", "has_sig": false, "md5_digest": "4bbfdbbdb42be52cddd90d0724427fe9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21018, "upload_time": "2019-11-27T02:51:06", "upload_time_iso_8601": "2019-11-27T02:51:06.940477Z", "url": "https://files.pythonhosted.org/packages/1b/a4/aff1d7df6b739c4d07f4a17593fe222a9fc19e3d05df32f8d6a4d7dbba6f/canoser-0.6.3.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "7c4bd59475adfeb1f9ed6381d6da9e43", "sha256": "ed0d49aa9d487636a6b98c49c7b622ea806dd8bbdfdbd4c7c1abf4a65e197e66"}, "downloads": -1, "filename": "canoser-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7c4bd59475adfeb1f9ed6381d6da9e43", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17398, "upload_time": "2019-12-19T11:07:05", "upload_time_iso_8601": "2019-12-19T11:07:05.898793Z", "url": "https://files.pythonhosted.org/packages/60/6e/89a22b394c48aa1d41446e5a8e996c5ad26a01fa1c6d275cfa4a5badd0a1/canoser-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e5ee4739c029092a72135688eec794cd", "sha256": "2d9a99e864054cfe8124196f5c1b39a84b346524dce93052c70c9b8b049c951f"}, "downloads": -1, "filename": "canoser-0.7.0.tar.gz", "has_sig": false, "md5_digest": "e5ee4739c029092a72135688eec794cd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21280, "upload_time": "2019-12-19T11:07:08", "upload_time_iso_8601": "2019-12-19T11:07:08.113183Z", "url": "https://files.pythonhosted.org/packages/9b/f2/361c1e953bf462e11e99e6a72503f4c245a5c48928478cd4c0d7dfe6e9ad/canoser-0.7.0.tar.gz", "yanked": false}], "0.7.1": [{"comment_text": "", "digests": {"md5": "767ccc4163c90e2187daa7a8ef9d5cc9", "sha256": "05a15d2176c871710cfd86e94c8f5cb818afb670390ac3fad06ac4f57324fac0"}, "downloads": -1, "filename": "canoser-0.7.1-py3-none-any.whl", "has_sig": false, "md5_digest": "767ccc4163c90e2187daa7a8ef9d5cc9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17471, "upload_time": "2019-12-19T12:13:32", "upload_time_iso_8601": "2019-12-19T12:13:32.344716Z", "url": "https://files.pythonhosted.org/packages/0f/9c/cbfc5e6306446385b8ac8fd6d4615c1fad0c9c6e5842cced3ea9e145b464/canoser-0.7.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7c4e4299f6d70ba14bbe44452b225c8f", "sha256": "40bcb534033101ccf3994c6843f9f459df1ac35c147f04993c56432b350b3096"}, "downloads": -1, "filename": "canoser-0.7.1.tar.gz", "has_sig": false, "md5_digest": "7c4e4299f6d70ba14bbe44452b225c8f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21353, "upload_time": "2019-12-19T12:13:34", "upload_time_iso_8601": "2019-12-19T12:13:34.435536Z", "url": "https://files.pythonhosted.org/packages/a9/2a/025cc8b2ac8ee1655abde46c9b187e096b3f029fceff4622832697a96e9b/canoser-0.7.1.tar.gz", "yanked": false}], "0.7.10": [{"comment_text": "", "digests": {"md5": "cafeb21d0217fa5582d213458eecf4cf", "sha256": "2100f98c9064c4261febf0c53d0f6047bb298d94b642fea485cc344ed8b16623"}, "downloads": -1, "filename": "canoser-0.7.10-py3-none-any.whl", "has_sig": false, "md5_digest": "cafeb21d0217fa5582d213458eecf4cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17472, "upload_time": "2020-02-24T01:56:13", "upload_time_iso_8601": "2020-02-24T01:56:13.950697Z", "url": "https://files.pythonhosted.org/packages/45/50/9d3be1ceed235d716be2f4730a5616d3271c4f06c7fb527842a830242053/canoser-0.7.10-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b02302126dd7175513913ccfe3049156", "sha256": "d8065b7ace4913a08b676f482458c6bf356d49c042db4d25b287ba5617922df5"}, "downloads": -1, "filename": "canoser-0.7.10.tar.gz", "has_sig": false, "md5_digest": "b02302126dd7175513913ccfe3049156", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24275, "upload_time": "2020-02-24T01:56:16", "upload_time_iso_8601": "2020-02-24T01:56:16.716951Z", "url": "https://files.pythonhosted.org/packages/fd/bf/ad2b44fa32e56c4fc49adf448084631f6e88d0ee07783804009c26e0fc7c/canoser-0.7.10.tar.gz", "yanked": false}], "0.7.11": [{"comment_text": "", "digests": {"md5": "aaef4f0ba702a81a39c3c5560b5cf88e", "sha256": "c2f27d5ea75f9b8d0d7499eb5fb4dc27e90588fe4e83200c8592e71f7cdeba9b"}, "downloads": -1, "filename": "canoser-0.7.11-py3-none-any.whl", "has_sig": false, "md5_digest": "aaef4f0ba702a81a39c3c5560b5cf88e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17599, "upload_time": "2020-03-18T12:26:26", "upload_time_iso_8601": "2020-03-18T12:26:26.938785Z", "url": "https://files.pythonhosted.org/packages/fd/bb/04658cd5ca5100aa4c8f32ac29de93e6701e68a5333c514de98ae997277c/canoser-0.7.11-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ea9c4e7df1b1fbd3f56649cbc4815f22", "sha256": "57040367b38c4ced6ef61b2893614a3a6ccf9df9e53c85008e33df6f4eac52a6"}, "downloads": -1, "filename": "canoser-0.7.11.tar.gz", "has_sig": false, "md5_digest": "ea9c4e7df1b1fbd3f56649cbc4815f22", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24425, "upload_time": "2020-03-18T12:26:30", "upload_time_iso_8601": "2020-03-18T12:26:30.265107Z", "url": "https://files.pythonhosted.org/packages/fb/94/88a515fef2432d141d7a58a845ca86e4517ef90973237df2120af302ade3/canoser-0.7.11.tar.gz", "yanked": false}], "0.7.2": [{"comment_text": "", "digests": {"md5": "09ac9c6ece285e88d6677a6af16e4c52", "sha256": "39c5b739ce45ea9fe25af36b7fc3723ebc4b1c42e8c02461a878cc7d84d69435"}, "downloads": -1, "filename": "canoser-0.7.2-py3-none-any.whl", "has_sig": false, "md5_digest": "09ac9c6ece285e88d6677a6af16e4c52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17556, "upload_time": "2019-12-29T14:19:51", "upload_time_iso_8601": "2019-12-29T14:19:51.355679Z", "url": "https://files.pythonhosted.org/packages/8c/7f/1d03d7bfe3740f81ec42e6168b0cd90f47ffd0c7c490aa8d10ef9b2113dc/canoser-0.7.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fd5423406c0f74d6efe5628f75f8e8c6", "sha256": "3865bd8500167db361da14e8963f32e689a9f141d16e2aed66b6e9cc0d12efe4"}, "downloads": -1, "filename": "canoser-0.7.2.tar.gz", "has_sig": false, "md5_digest": "fd5423406c0f74d6efe5628f75f8e8c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 21739, "upload_time": "2019-12-29T14:19:53", "upload_time_iso_8601": "2019-12-29T14:19:53.567956Z", "url": "https://files.pythonhosted.org/packages/09/f8/71cd573e92d247c2662af67d3d9f4f50fec71ca7beda1d25dcf12b3364c5/canoser-0.7.2.tar.gz", "yanked": false}], "0.7.3": [{"comment_text": "", "digests": {"md5": "e06881623db9b9fa3be5db627881e943", "sha256": "a4afbdad0bc478307a34de80d90637f80a8513d4d991ff6ba1ec1d0e432e5252"}, "downloads": -1, "filename": "canoser-0.7.3-py3-none-any.whl", "has_sig": false, "md5_digest": "e06881623db9b9fa3be5db627881e943", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16859, "upload_time": "2020-01-13T12:08:13", "upload_time_iso_8601": "2020-01-13T12:08:13.939835Z", "url": "https://files.pythonhosted.org/packages/0e/36/a310f7209d363cb1907f62c1055698a2a0b329714120517120637fb047c3/canoser-0.7.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "cbbf528aebd51c69932bea0ff021bfc5", "sha256": "cce6abf9a1cf133a967e7cdf67380ceca4362cf260ec1eb6e7e49395d06ffd8a"}, "downloads": -1, "filename": "canoser-0.7.3.tar.gz", "has_sig": false, "md5_digest": "cbbf528aebd51c69932bea0ff021bfc5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 18683, "upload_time": "2020-01-13T12:08:16", "upload_time_iso_8601": "2020-01-13T12:08:16.501218Z", "url": "https://files.pythonhosted.org/packages/b3/80/faa9a1be844b668fce149d76ef0b4e2e8f279b1be308fae961f52b0bdceb/canoser-0.7.3.tar.gz", "yanked": false}], "0.7.4": [{"comment_text": "", "digests": {"md5": "639426d00f5b1c1bbedcac61d1fb8bd5", "sha256": "d25c0f9f259a6b5891159258d1b091b569372c0d6e5b1bfd159d37ec04193825"}, "downloads": -1, "filename": "canoser-0.7.4-py3-none-any.whl", "has_sig": false, "md5_digest": "639426d00f5b1c1bbedcac61d1fb8bd5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16859, "upload_time": "2020-01-26T14:55:42", "upload_time_iso_8601": "2020-01-26T14:55:42.537104Z", "url": "https://files.pythonhosted.org/packages/99/71/e24cc203e0685f3a15a324f1835fcf32d2d942465cc03e3cb55b5a89a0e3/canoser-0.7.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5c12315daa1876f6bdceda454df9423", "sha256": "c92bd6f7f8fd93dd3176cefef14bf15d567c827ea946dc0b166b01ca5007c7f5"}, "downloads": -1, "filename": "canoser-0.7.4.tar.gz", "has_sig": false, "md5_digest": "f5c12315daa1876f6bdceda454df9423", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23251, "upload_time": "2020-01-26T14:55:45", "upload_time_iso_8601": "2020-01-26T14:55:45.306785Z", "url": "https://files.pythonhosted.org/packages/e5/be/a21d0f22b2fcd9c3f9f67070d53eddb99910899b1a6b97215610d67f2858/canoser-0.7.4.tar.gz", "yanked": false}], "0.7.5": [{"comment_text": "", "digests": {"md5": "90e1ad8b1eab979dfa5bf9cecab4f5fe", "sha256": "b015be4aaad8654c52e277d1fa882db75ac07c03bc91ac2131fce341d3a3c5cf"}, "downloads": -1, "filename": "canoser-0.7.5-py3-none-any.whl", "has_sig": false, "md5_digest": "90e1ad8b1eab979dfa5bf9cecab4f5fe", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 16846, "upload_time": "2020-01-27T06:02:06", "upload_time_iso_8601": "2020-01-27T06:02:06.381031Z", "url": "https://files.pythonhosted.org/packages/f5/8b/d0c1ee084b695d4b7aac0c7b83fa74cf1fda1d7a4f2a10010b7cf9ce670d/canoser-0.7.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1e2685f862bc7b898c3ca364dfc74015", "sha256": "ba89a17f43b3f66f62c0f340ce0696284fb095a1acc069a77c19f48bc18034ec"}, "downloads": -1, "filename": "canoser-0.7.5.tar.gz", "has_sig": false, "md5_digest": "1e2685f862bc7b898c3ca364dfc74015", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23275, "upload_time": "2020-01-27T06:02:09", "upload_time_iso_8601": "2020-01-27T06:02:09.065284Z", "url": "https://files.pythonhosted.org/packages/cf/74/0747e97e068408993a3a4d8add9b0f3f83b1d5b7a9df4bb42de669d77039/canoser-0.7.5.tar.gz", "yanked": false}], "0.7.6": [{"comment_text": "", "digests": {"md5": "62278e4f485076a4a7d939445bf50913", "sha256": "7939bfd80be3355024ddbe40f808ce16cc07d4220609cafea4e2a71f3b3ca931"}, "downloads": -1, "filename": "canoser-0.7.6-py3-none-any.whl", "has_sig": false, "md5_digest": "62278e4f485076a4a7d939445bf50913", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17058, "upload_time": "2020-01-29T08:53:37", "upload_time_iso_8601": "2020-01-29T08:53:37.809561Z", "url": "https://files.pythonhosted.org/packages/d9/2b/8a95b5f3617f79c5ae326cf9fd7c5ee34c4f77e3a75db304248f5c31dc98/canoser-0.7.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "605abf158d797837b7fb6414e5500824", "sha256": "68259a3f723679a7fab23dc6b48d23edda78c5b581916aa02f036adb2468f83c"}, "downloads": -1, "filename": "canoser-0.7.6.tar.gz", "has_sig": false, "md5_digest": "605abf158d797837b7fb6414e5500824", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23474, "upload_time": "2020-01-29T08:53:39", "upload_time_iso_8601": "2020-01-29T08:53:39.875114Z", "url": "https://files.pythonhosted.org/packages/e2/64/849933ed328283bc18c360e08b860a356f5d19f1a75246a8e9038995c32c/canoser-0.7.6.tar.gz", "yanked": false}], "0.7.7": [{"comment_text": "", "digests": {"md5": "d1567e2b7b59455c10de765e8118ca28", "sha256": "eafce7a045279e71dcbc2cfd04ae797ce5547af88a4b4f6a426cea86e9f2c171"}, "downloads": -1, "filename": "canoser-0.7.7-py3-none-any.whl", "has_sig": false, "md5_digest": "d1567e2b7b59455c10de765e8118ca28", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17125, "upload_time": "2020-02-08T05:56:39", "upload_time_iso_8601": "2020-02-08T05:56:39.520198Z", "url": "https://files.pythonhosted.org/packages/51/bb/7eda0d0b768149b5c3567b754b625796233c02ddd09e5933c96e0008f0c6/canoser-0.7.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10f8f46a7d06281d14f18bbcc540edaf", "sha256": "1493dbf04de10847dd6f8bc14e9aaedc1b5e63135908a765342f60a1aff75ae9"}, "downloads": -1, "filename": "canoser-0.7.7.tar.gz", "has_sig": false, "md5_digest": "10f8f46a7d06281d14f18bbcc540edaf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23710, "upload_time": "2020-02-08T05:56:41", "upload_time_iso_8601": "2020-02-08T05:56:41.483863Z", "url": "https://files.pythonhosted.org/packages/0e/2d/3c1c182bc823f8c47cdcc9c8e0ee3f09e264c984299ff73f19ff68a660af/canoser-0.7.7.tar.gz", "yanked": false}], "0.7.8": [{"comment_text": "", "digests": {"md5": "eda4f36b68b03293a8516acc85e87c69", "sha256": "9e583401eedc5a60ae671bdfdfd3b3174766b6d8867ed2d6f9d85adb3bf4e9d8"}, "downloads": -1, "filename": "canoser-0.7.8-py3-none-any.whl", "has_sig": false, "md5_digest": "eda4f36b68b03293a8516acc85e87c69", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17158, "upload_time": "2020-02-11T03:18:11", "upload_time_iso_8601": "2020-02-11T03:18:11.262886Z", "url": "https://files.pythonhosted.org/packages/72/2e/56e72bfef0d78d1b15717bfeb981787eb4958e1a1baf2fe178c09e0f2e91/canoser-0.7.8-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "29f32171af21329fb05eca3eb2f59b92", "sha256": "2a839369643f5efccce7965a63b98d00e75c0acd3da2730c928ab115389980f7"}, "downloads": -1, "filename": "canoser-0.7.8.tar.gz", "has_sig": false, "md5_digest": "29f32171af21329fb05eca3eb2f59b92", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23761, "upload_time": "2020-02-11T03:18:18", "upload_time_iso_8601": "2020-02-11T03:18:18.787318Z", "url": "https://files.pythonhosted.org/packages/66/bb/9bb07b062e0a8aee21fa6b21ce271c01712c336efbeb2ffcb22241bbf947/canoser-0.7.8.tar.gz", "yanked": false}], "0.7.9": [{"comment_text": "", "digests": {"md5": "3e3ef78c07d7f66ea43dee048b96fd86", "sha256": "d6209c93b49de63c439dcb0910f2ebd7991153ed1ddcb3dddea9c9225a4b16ee"}, "downloads": -1, "filename": "canoser-0.7.9-py3-none-any.whl", "has_sig": false, "md5_digest": "3e3ef78c07d7f66ea43dee048b96fd86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17242, "upload_time": "2020-02-17T09:52:22", "upload_time_iso_8601": "2020-02-17T09:52:22.918780Z", "url": "https://files.pythonhosted.org/packages/02/33/46f7196ab09a1fce84386a0129f8cdaf0304272fe9251ccd15e500c1cebb/canoser-0.7.9-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "83eb2c64925e6ec3bdab4666f2bfe8e9", "sha256": "11e299c768eb5ebeeb66707d3e43cb0700f03f0fd499f14e913b75f8843d98dc"}, "downloads": -1, "filename": "canoser-0.7.9.tar.gz", "has_sig": false, "md5_digest": "83eb2c64925e6ec3bdab4666f2bfe8e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23947, "upload_time": "2020-02-17T09:52:28", "upload_time_iso_8601": "2020-02-17T09:52:28.824862Z", "url": "https://files.pythonhosted.org/packages/b0/f8/5f04d16d05afaf2ad84128f831ff0c4e95a4adbe7e5e886f048b66d110f8/canoser-0.7.9.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "aa0a2c99fb79d893387f01eccd564a13", "sha256": "7b49eaef10015617fc55480c0f8d16f4fb002b893ae381b6b5292461070b2f9d"}, "downloads": -1, "filename": "canoser-0.8.1-py3-none-any.whl", "has_sig": false, "md5_digest": "aa0a2c99fb79d893387f01eccd564a13", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 17642, "upload_time": "2020-03-28T12:06:36", "upload_time_iso_8601": "2020-03-28T12:06:36.510833Z", "url": "https://files.pythonhosted.org/packages/23/a3/dcbf63a5d7f09a0b2ef0cf17a3fb2aeb6387f61a1a8bd3f7867fa493e813/canoser-0.8.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "637390858d975790b4fa8b92a9ece5ff", "sha256": "ceca43fbd399cd5fc990d0646a3bd9c3d763bd7e9ee68f8c6d81f4875a222f96"}, "downloads": -1, "filename": "canoser-0.8.1.tar.gz", "has_sig": false, "md5_digest": "637390858d975790b4fa8b92a9ece5ff", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 24516, "upload_time": "2020-03-28T12:06:40", "upload_time_iso_8601": "2020-03-28T12:06:40.907851Z", "url": "https://files.pythonhosted.org/packages/5b/c5/c97b063173e434eef1360e9c5d9dfe2c09312393731109da396fcd7ab0ae/canoser-0.8.1.tar.gz", "yanked": false}], "0.8.2": [{"comment_text": "", "digests": {"md5": "baa513b9a8f0b29776da6ac57ab060a3", "sha256": "d450810e57fb53e5807eda481098d629474bff18643b9ece2a6e9150b7c36cce"}, "downloads": -1, "filename": "canoser-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "baa513b9a8f0b29776da6ac57ab060a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18170, "upload_time": "2020-04-02T04:15:36", "upload_time_iso_8601": "2020-04-02T04:15:36.377730Z", "url": "https://files.pythonhosted.org/packages/5b/03/d6175731b6ee098dcd5989a0809345bd82dff1c2c8d1b3578bb37e5f034c/canoser-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b609b63d86439ef4cd106f65a2ac8cef", "sha256": "69a8f9d8d84aea353403642819df50cb7eb0282484cc5de67f34c85a8824151f"}, "downloads": -1, "filename": "canoser-0.8.2.tar.gz", "has_sig": false, "md5_digest": "b609b63d86439ef4cd106f65a2ac8cef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23464, "upload_time": "2020-04-02T04:15:39", "upload_time_iso_8601": "2020-04-02T04:15:39.501969Z", "url": "https://files.pythonhosted.org/packages/77/30/48a2561ce369ef5bab964fb6d9ed193c73016c8cf0829df9693581e42026/canoser-0.8.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "baa513b9a8f0b29776da6ac57ab060a3", "sha256": "d450810e57fb53e5807eda481098d629474bff18643b9ece2a6e9150b7c36cce"}, "downloads": -1, "filename": "canoser-0.8.2-py3-none-any.whl", "has_sig": false, "md5_digest": "baa513b9a8f0b29776da6ac57ab060a3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 18170, "upload_time": "2020-04-02T04:15:36", "upload_time_iso_8601": "2020-04-02T04:15:36.377730Z", "url": "https://files.pythonhosted.org/packages/5b/03/d6175731b6ee098dcd5989a0809345bd82dff1c2c8d1b3578bb37e5f034c/canoser-0.8.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b609b63d86439ef4cd106f65a2ac8cef", "sha256": "69a8f9d8d84aea353403642819df50cb7eb0282484cc5de67f34c85a8824151f"}, "downloads": -1, "filename": "canoser-0.8.2.tar.gz", "has_sig": false, "md5_digest": "b609b63d86439ef4cd106f65a2ac8cef", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23464, "upload_time": "2020-04-02T04:15:39", "upload_time_iso_8601": "2020-04-02T04:15:39.501969Z", "url": "https://files.pythonhosted.org/packages/77/30/48a2561ce369ef5bab964fb6d9ed193c73016c8cf0829df9693581e42026/canoser-0.8.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:35:30 2020"}