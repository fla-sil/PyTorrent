{"info": {"author": "uburuntu", "author_email": "bekbulatov.ramzan@ya.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: AsyncIO", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Typing :: Typed"], "description": "# Throttler\n\n[![Python](https://img.shields.io/badge/Python-3.6%20%7C%203.7%20%7C%203.8-blue.svg?longCache=true)]()\n[![PyPI](https://img.shields.io/pypi/v/throttler.svg)](https://pypi.python.org/pypi/throttler)\n[![License: MIT](https://img.shields.io/badge/License-MIT-green.svg)](https://github.com/uburuntu/throttler/blob/master/LICENSE)\n\n[![Build Status](https://travis-ci.org/uburuntu/throttler.svg?branch=master)](https://travis-ci.org/uburuntu/throttler)\n[![codecov](https://codecov.io/gh/uburuntu/throttler/branch/master/graph/badge.svg)](https://codecov.io/gh/uburuntu/throttler)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/82679eb03912475c8f7d14ee76ebf96e)](https://app.codacy.com/manual/uburuntu/throttler?utm_source=github.com&utm_medium=referral&utm_content=uburuntu/throttler&utm_campaign=Badge_Grade_Dashboard)\n\nZero-dependency Python package for simple throttling with asyncio support.\n\n## \u0440\u045f\u201c\u045c Table of Contents\n\n- \u0440\u045f\u040b\u2019 [Install](#-install)\n- \u0440\u045f\u203a\u00a0 [Usage Examples](#-usage-examples)\n  - [Throttler and ThrottlerSimultaneous](#throttler-and-throttlersimultaneous)\n    - [Simple Example](#simple-example)\n    - [API Example](#api-example)\n  - [ExecutionTimer](#executiontimer)\n  - [Timer](#timer)\n- \u0440\u045f\u2018\u0401\u0440\u045f\u040f\u00bb\u0432\u0402\u040c\u0440\u045f\u2019\u00bb [Author](#-author)\n- \u0440\u045f\u2019\u00ac [Contributing](#-contributing)\n- \u0440\u045f\u201c\u045c [License](#-license)\n\n## \u0440\u045f\u040b\u2019 Install\n\nJust\n```sh\npip install throttler\n```\n\n## \u0440\u045f\u203a\u00a0 Usage Examples\nAll run-ready examples are [here](examples).\n\n### Throttler and ThrottlerSimultaneous\n**Throttler**:\n> Context manager for limiting rate of accessing to context block.\n\n```python\nfrom throttler import Throttler\n\n# Limit to three calls per second\nt = Throttler(rate_limit=3, period=1.0)\nasync with t:\n    pass\n```\nOr\n```python\nimport asyncio\n\nfrom throttler import throttle\n\n# Limit to three calls per second\n@throttle(rate_limit=3, period=1.0)\nasync def task():\n    return await asyncio.sleep(0.1)\n```\n\n**ThrottlerSimultaneous**:\n> Context manager for limiting simultaneous count of accessing to context block.\n\n```python\nfrom throttler import ThrottlerSimultaneous\n\n# Limit to five simultaneous calls\nt = ThrottlerSimultaneous(count=5)\n```\nOr\n```python\nimport asyncio\n\nfrom throttler import throttle_simultaneous\n\n# Limit to five simultaneous calls\n@throttle_simultaneous(count=5)\nasync def task():\n    return await asyncio.sleep(0.1)\n```\n\n#### Simple Example\n```python\nimport asyncio\nimport time\n\nfrom throttler import throttle\n\n\n# Limit to two calls per second\n@throttle(rate_limit=2, period=1.0)\nasync def task():\n    return await asyncio.sleep(0.1)\n\n\nasync def many_tasks(count: int):\n    coros = [task() for _ in range(count)]\n    for coro in asyncio.as_completed(coros):\n        _ = await coro\n        print(f'Timestamp: {time.time()}')\n\nasyncio.run(many_tasks(10))\n```\n\nResult output:\n```text\nTimestamp: 1585183394.8141203\nTimestamp: 1585183394.8141203\nTimestamp: 1585183395.830335\nTimestamp: 1585183395.830335\nTimestamp: 1585183396.8460555\nTimestamp: 1585183396.8460555\n...\n```\n\n#### API Example\n\n```python\nimport asyncio\nimport time\n\nimport aiohttp\n\nfrom throttler import Throttler, ThrottlerSimultaneous\n\n\nclass SomeAPI:\n    api_url = 'https://example.com'\n\n    def __init__(self, throttler):\n        self.throttler = throttler\n\n    async def request(self, session: aiohttp.ClientSession):\n        async with self.throttler:\n            async with session.get(self.api_url) as resp:\n                return resp\n\n    async def many_requests(self, count: int):\n        async with aiohttp.ClientSession() as session:\n            coros = [self.request(session) for _ in range(count)]\n            for coro in asyncio.as_completed(coros):\n                response = await coro\n                print(f'{int(time.time())} | Result: {response.status}')\n\n\nasync def run():\n    # Throttler can be of any type\n    t = ThrottlerSimultaneous(count=5)        # Five simultaneous requests\n    t = Throttler(rate_limit=10, period=3.0)  # Ten requests in three seconds\n\n    api = SomeAPI(t)\n    await api.many_requests(100)\n\nasyncio.run(run())\n```\n\nResult output:\n```text\n1585182908 | Result: 200\n1585182908 | Result: 200\n1585182908 | Result: 200\n1585182909 | Result: 200\n1585182909 | Result: 200\n1585182909 | Result: 200\n1585182910 | Result: 200\n1585182910 | Result: 200\n1585182910 | Result: 200\n```\n\n### ExecutionTimer\n> Context manager for time limiting of accessing to context block. Simply sleep `period` secs before next accessing, not analog of `Throttler`. Also it can align to start of minutes.\n\n```python\nimport time\n\nfrom throttler import ExecutionTimer\n\net = ExecutionTimer(60, align_sleep=True)\n\nwhile True:\n    with et:\n        print(time.asctime(), '|', time.time())\n```\n\nOr\n```python\nimport time\n\nfrom throttler import execution_timer\n\n@execution_timer(60, align_sleep=True)\ndef f():\n    print(time.asctime(), '|', time.time())\n\nwhile True:\n    f()\n```\n\nResult output:\n```text\nThu Mar 26 00:56:17 2020 | 1585173377.1203406\nThu Mar 26 00:57:00 2020 | 1585173420.0006166\nThu Mar 26 00:58:00 2020 | 1585173480.002517\nThu Mar 26 00:59:00 2020 | 1585173540.001494\n```\n\n### Timer\n> Context manager for pretty printing start, end, elapsed and average times.\n\n```python\nimport random\nimport time\n\nfrom throttler import Timer\n\ntimer = Timer('My Timer', verbose=True)\n\nfor _ in range(3):\n    with timer:\n        time.sleep(random.random())\n```\n\nOr\n```python\nimport random\nimport time\n\nfrom throttler import timer\n\n@timer('My Timer', verbose=True)\ndef f():\n    time.sleep(random.random())\n\nfor _ in range(3):\n    f()\n```\n\nResult output:\n```text\n#1 | My Timer | begin: 2020-03-26 01:46:07.648661\n#1 | My Timer |   end: 2020-03-26 01:46:08.382135, elapsed: 0.73 sec, average: 0.73 sec\n#2 | My Timer | begin: 2020-03-26 01:46:08.382135\n#2 | My Timer |   end: 2020-03-26 01:46:08.599919, elapsed: 0.22 sec, average: 0.48 sec\n#3 | My Timer | begin: 2020-03-26 01:46:08.599919\n#3 | My Timer |   end: 2020-03-26 01:46:09.083370, elapsed: 0.48 sec, average: 0.48 sec\n```\n\n## \u0440\u045f\u2018\u0401\u0440\u045f\u040f\u00bb\u0432\u0402\u040c\u0440\u045f\u2019\u00bb Author\n\n**Ramzan Bekbulatov**:\n- Telegram: [@rm_bk](https://t.me/rm_bk)\n- Github: [@uburuntu](https://github.com/uburuntu)\n\n## \u0440\u045f\u2019\u00ac Contributing\n\nContributions, issues and feature requests are welcome! \n\n## \u0440\u045f\u201c\u045c License\n\nThis project is [MIT](https://github.com/uburuntu/throttler/blob/master/LICENSE) licensed.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/uburuntu/throttler/archive/master.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/uburuntu/throttler", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "throttler", "package_url": "https://pypi.org/project/throttler/", "platform": "", "project_url": "https://pypi.org/project/throttler/", "project_urls": {"Download": "https://github.com/uburuntu/throttler/archive/master.zip", "Homepage": "https://github.com/uburuntu/throttler"}, "release_url": "https://pypi.org/project/throttler/1.1/", "requires_dist": null, "requires_python": "", "summary": "Zero-dependency Python package for simple throttling with asyncio support", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Throttler</h1>\n<p><a href=\"\" rel=\"nofollow\"><img alt=\"Python\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d750cea171a0f617268505cd38694eeb0325d384/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f507974686f6e2d332e36253230253743253230332e37253230253743253230332e382d626c75652e7376673f6c6f6e6743616368653d74727565\"></a>\n<a href=\"https://pypi.python.org/pypi/throttler\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ad3748e986fc38ed47d4dc6484f17394968795eb/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7468726f74746c65722e737667\"></a>\n<a href=\"https://github.com/uburuntu/throttler/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aab1d039acf22567ba072834df6bce204ac48ad/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d677265656e2e737667\"></a></p>\n<p><a href=\"https://travis-ci.org/uburuntu/throttler\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3538f02967cc1eba6de8fffc5b7fed4f68dcf996/68747470733a2f2f7472617669732d63692e6f72672f75627572756e74752f7468726f74746c65722e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/uburuntu/throttler\" rel=\"nofollow\"><img alt=\"codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/77e4efe257762228220b411d0621f5db7eb534eb/68747470733a2f2f636f6465636f762e696f2f67682f75627572756e74752f7468726f74746c65722f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://app.codacy.com/manual/uburuntu/throttler?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=uburuntu/throttler&amp;utm_campaign=Badge_Grade_Dashboard\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f2a343859eceb12ab357f85084622177980e84a0/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3832363739656230333931323437356338663764313465653736656266393665\"></a></p>\n<p>Zero-dependency Python package for simple throttling with asyncio support.</p>\n<h2>\u0440\u045f\u201c\u045c Table of Contents</h2>\n<ul>\n<li>\u0440\u045f\u040b\u2019 <a href=\"#-install\" rel=\"nofollow\">Install</a></li>\n<li>\u0440\u045f\u203a\u00a0 <a href=\"#-usage-examples\" rel=\"nofollow\">Usage Examples</a>\n<ul>\n<li><a href=\"#throttler-and-throttlersimultaneous\" rel=\"nofollow\">Throttler and ThrottlerSimultaneous</a>\n<ul>\n<li><a href=\"#simple-example\" rel=\"nofollow\">Simple Example</a></li>\n<li><a href=\"#api-example\" rel=\"nofollow\">API Example</a></li>\n</ul>\n</li>\n<li><a href=\"#executiontimer\" rel=\"nofollow\">ExecutionTimer</a></li>\n<li><a href=\"#timer\" rel=\"nofollow\">Timer</a></li>\n</ul>\n</li>\n<li>\u0440\u045f\u2018\u0401\u0440\u045f\u040f\u00bb\u0432\u0402\u040c\u0440\u045f\u2019\u00bb <a href=\"#-author\" rel=\"nofollow\">Author</a></li>\n<li>\u0440\u045f\u2019\u00ac <a href=\"#-contributing\" rel=\"nofollow\">Contributing</a></li>\n<li>\u0440\u045f\u201c\u045c <a href=\"#-license\" rel=\"nofollow\">License</a></li>\n</ul>\n<h2>\u0440\u045f\u040b\u2019 Install</h2>\n<p>Just</p>\n<pre>pip install throttler\n</pre>\n<h2>\u0440\u045f\u203a\u00a0 Usage Examples</h2>\n<p>All run-ready examples are <a href=\"examples\" rel=\"nofollow\">here</a>.</p>\n<h3>Throttler and ThrottlerSimultaneous</h3>\n<p><strong>Throttler</strong>:</p>\n<blockquote>\n<p>Context manager for limiting rate of accessing to context block.</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">Throttler</span>\n\n<span class=\"c1\"># Limit to three calls per second</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Throttler</span><span class=\"p\">(</span><span class=\"n\">rate_limit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">t</span><span class=\"p\">:</span>\n    <span class=\"k\">pass</span>\n</pre>\n<p>Or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">throttle</span>\n\n<span class=\"c1\"># Limit to three calls per second</span>\n<span class=\"nd\">@throttle</span><span class=\"p\">(</span><span class=\"n\">rate_limit</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">task</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<p><strong>ThrottlerSimultaneous</strong>:</p>\n<blockquote>\n<p>Context manager for limiting simultaneous count of accessing to context block.</p>\n</blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">ThrottlerSimultaneous</span>\n\n<span class=\"c1\"># Limit to five simultaneous calls</span>\n<span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">ThrottlerSimultaneous</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n</pre>\n<p>Or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">throttle_simultaneous</span>\n\n<span class=\"c1\"># Limit to five simultaneous calls</span>\n<span class=\"nd\">@throttle_simultaneous</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">task</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n</pre>\n<h4>Simple Example</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">throttle</span>\n\n\n<span class=\"c1\"># Limit to two calls per second</span>\n<span class=\"nd\">@throttle</span><span class=\"p\">(</span><span class=\"n\">rate_limit</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mf\">1.0</span><span class=\"p\">)</span>\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">task</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"k\">await</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mf\">0.1</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">many_tasks</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n    <span class=\"n\">coros</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"n\">task</span><span class=\"p\">()</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)]</span>\n    <span class=\"k\">for</span> <span class=\"n\">coro</span> <span class=\"ow\">in</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">as_completed</span><span class=\"p\">(</span><span class=\"n\">coros</span><span class=\"p\">):</span>\n        <span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">coro</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'Timestamp: </span><span class=\"si\">{</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">()</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">many_tasks</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">))</span>\n</pre>\n<p>Result output:</p>\n<pre>Timestamp: 1585183394.8141203\nTimestamp: 1585183394.8141203\nTimestamp: 1585183395.830335\nTimestamp: 1585183395.830335\nTimestamp: 1585183396.8460555\nTimestamp: 1585183396.8460555\n...\n</pre>\n<h4>API Example</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">asyncio</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">aiohttp</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">Throttler</span><span class=\"p\">,</span> <span class=\"n\">ThrottlerSimultaneous</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">SomeAPI</span><span class=\"p\">:</span>\n    <span class=\"n\">api_url</span> <span class=\"o\">=</span> <span class=\"s1\">'https://example.com'</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">throttler</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">throttler</span> <span class=\"o\">=</span> <span class=\"n\">throttler</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">session</span><span class=\"p\">:</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">):</span>\n        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">throttler</span><span class=\"p\">:</span>\n            <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">api_url</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">resp</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"n\">resp</span>\n\n    <span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">many_requests</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">count</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"k\">async</span> <span class=\"k\">with</span> <span class=\"n\">aiohttp</span><span class=\"o\">.</span><span class=\"n\">ClientSession</span><span class=\"p\">()</span> <span class=\"k\">as</span> <span class=\"n\">session</span><span class=\"p\">:</span>\n            <span class=\"n\">coros</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">)</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"p\">)]</span>\n            <span class=\"k\">for</span> <span class=\"n\">coro</span> <span class=\"ow\">in</span> <span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">as_completed</span><span class=\"p\">(</span><span class=\"n\">coros</span><span class=\"p\">):</span>\n                <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"k\">await</span> <span class=\"n\">coro</span>\n                <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'</span><span class=\"si\">{</span><span class=\"nb\">int</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span><span class=\"si\">}</span><span class=\"s1\"> | Result: </span><span class=\"si\">{</span><span class=\"n\">response</span><span class=\"o\">.</span><span class=\"n\">status</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">async</span> <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">():</span>\n    <span class=\"c1\"># Throttler can be of any type</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">ThrottlerSimultaneous</span><span class=\"p\">(</span><span class=\"n\">count</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">)</span>        <span class=\"c1\"># Five simultaneous requests</span>\n    <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"n\">Throttler</span><span class=\"p\">(</span><span class=\"n\">rate_limit</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"n\">period</span><span class=\"o\">=</span><span class=\"mf\">3.0</span><span class=\"p\">)</span>  <span class=\"c1\"># Ten requests in three seconds</span>\n\n    <span class=\"n\">api</span> <span class=\"o\">=</span> <span class=\"n\">SomeAPI</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"p\">)</span>\n    <span class=\"k\">await</span> <span class=\"n\">api</span><span class=\"o\">.</span><span class=\"n\">many_requests</span><span class=\"p\">(</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n\n<span class=\"n\">asyncio</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">run</span><span class=\"p\">())</span>\n</pre>\n<p>Result output:</p>\n<pre>1585182908 | Result: 200\n1585182908 | Result: 200\n1585182908 | Result: 200\n1585182909 | Result: 200\n1585182909 | Result: 200\n1585182909 | Result: 200\n1585182910 | Result: 200\n1585182910 | Result: 200\n1585182910 | Result: 200\n</pre>\n<h3>ExecutionTimer</h3>\n<blockquote>\n<p>Context manager for time limiting of accessing to context block. Simply sleep <code>period</code> secs before next accessing, not analog of <code>Throttler</code>. Also it can align to start of minutes.</p>\n</blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">ExecutionTimer</span>\n\n<span class=\"n\">et</span> <span class=\"o\">=</span> <span class=\"n\">ExecutionTimer</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">align_sleep</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"k\">with</span> <span class=\"n\">et</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">asctime</span><span class=\"p\">(),</span> <span class=\"s1\">'|'</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n</pre>\n<p>Or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">execution_timer</span>\n\n<span class=\"nd\">@execution_timer</span><span class=\"p\">(</span><span class=\"mi\">60</span><span class=\"p\">,</span> <span class=\"n\">align_sleep</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">():</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">asctime</span><span class=\"p\">(),</span> <span class=\"s1\">'|'</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">time</span><span class=\"p\">())</span>\n\n<span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n    <span class=\"n\">f</span><span class=\"p\">()</span>\n</pre>\n<p>Result output:</p>\n<pre>Thu Mar 26 00:56:17 2020 | 1585173377.1203406\nThu Mar 26 00:57:00 2020 | 1585173420.0006166\nThu Mar 26 00:58:00 2020 | 1585173480.002517\nThu Mar 26 00:59:00 2020 | 1585173540.001494\n</pre>\n<h3>Timer</h3>\n<blockquote>\n<p>Context manager for pretty printing start, end, elapsed and average times.</p>\n</blockquote>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">Timer</span>\n\n<span class=\"n\">timer</span> <span class=\"o\">=</span> <span class=\"n\">Timer</span><span class=\"p\">(</span><span class=\"s1\">'My Timer'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"k\">with</span> <span class=\"n\">timer</span><span class=\"p\">:</span>\n        <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">())</span>\n</pre>\n<p>Or</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">random</span>\n<span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">throttler</span> <span class=\"kn\">import</span> <span class=\"n\">timer</span>\n\n<span class=\"nd\">@timer</span><span class=\"p\">(</span><span class=\"s1\">'My Timer'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">f</span><span class=\"p\">():</span>\n    <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"p\">())</span>\n\n<span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">):</span>\n    <span class=\"n\">f</span><span class=\"p\">()</span>\n</pre>\n<p>Result output:</p>\n<pre>#1 | My Timer | begin: 2020-03-26 01:46:07.648661\n#1 | My Timer |   end: 2020-03-26 01:46:08.382135, elapsed: 0.73 sec, average: 0.73 sec\n#2 | My Timer | begin: 2020-03-26 01:46:08.382135\n#2 | My Timer |   end: 2020-03-26 01:46:08.599919, elapsed: 0.22 sec, average: 0.48 sec\n#3 | My Timer | begin: 2020-03-26 01:46:08.599919\n#3 | My Timer |   end: 2020-03-26 01:46:09.083370, elapsed: 0.48 sec, average: 0.48 sec\n</pre>\n<h2>\u0440\u045f\u2018\u0401\u0440\u045f\u040f\u00bb\u0432\u0402\u040c\u0440\u045f\u2019\u00bb Author</h2>\n<p><strong>Ramzan Bekbulatov</strong>:</p>\n<ul>\n<li>Telegram: <a href=\"https://t.me/rm_bk\" rel=\"nofollow\">@rm_bk</a></li>\n<li>Github: <a href=\"https://github.com/uburuntu\" rel=\"nofollow\">@uburuntu</a></li>\n</ul>\n<h2>\u0440\u045f\u2019\u00ac Contributing</h2>\n<p>Contributions, issues and feature requests are welcome!</p>\n<h2>\u0440\u045f\u201c\u045c License</h2>\n<p>This project is <a href=\"https://github.com/uburuntu/throttler/blob/master/LICENSE\" rel=\"nofollow\">MIT</a> licensed.</p>\n\n          </div>"}, "last_serial": 6886103, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "294c9e501a411018a4454ccadb190ad0", "sha256": "42f664c2ede08d4d2e4e0f6f64ca9bbaea281d481977142ac168191e63b829f4"}, "downloads": -1, "filename": "throttler-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "294c9e501a411018a4454ccadb190ad0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5224, "upload_time": "2020-03-25T22:57:10", "upload_time_iso_8601": "2020-03-25T22:57:10.726933Z", "url": "https://files.pythonhosted.org/packages/0b/bf/7b151e2a62494425da58c7fe4c43e5ab316928e71bbc9795631c6ba9e075/throttler-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f58974109f65945fc5b21d7b9a55caa5", "sha256": "f2e95e7466e9ce4c3aa319b3cd050508bd138195480e4b1bd64aea6faab1256c"}, "downloads": -1, "filename": "throttler-0.1.tar.gz", "has_sig": false, "md5_digest": "f58974109f65945fc5b21d7b9a55caa5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3059, "upload_time": "2020-03-25T22:57:13", "upload_time_iso_8601": "2020-03-25T22:57:13.163317Z", "url": "https://files.pythonhosted.org/packages/4d/56/e7722042b3bb222c04b8fa010d8aef00423d8680171ccd03539f1f8de605/throttler-0.1.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "2093e24e3204dd813ee17fb8f21457c1", "sha256": "1309221bb02bfab3fe79c7e599eb371af24f926bd67d3581aca4b970956e8294"}, "downloads": -1, "filename": "throttler-1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2093e24e3204dd813ee17fb8f21457c1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5418, "upload_time": "2020-03-25T23:44:04", "upload_time_iso_8601": "2020-03-25T23:44:04.162784Z", "url": "https://files.pythonhosted.org/packages/17/70/b3af1598368c3631e3ea2a4351c98f382eabe90bf07838cab354dd306d00/throttler-1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "08ea447de072daf16b84c54d3e9e1411", "sha256": "53893b89ef887c98cc6b1908fb31d7dc70b435cc3900c47404b9f6099d0de2c2"}, "downloads": -1, "filename": "throttler-1.0.tar.gz", "has_sig": false, "md5_digest": "08ea447de072daf16b84c54d3e9e1411", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3252, "upload_time": "2020-03-25T23:44:12", "upload_time_iso_8601": "2020-03-25T23:44:12.774354Z", "url": "https://files.pythonhosted.org/packages/e0/35/fe76bd1ebabcef6d9e1f7943cca3994cddff29392fd92a5d2cab82239032/throttler-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "a8ef29848a653be3f1508c633086e887", "sha256": "3171bb215933df9f7890104d4b8e2ca52fe1cadf904644a7db5e17216689e82c"}, "downloads": -1, "filename": "throttler-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a8ef29848a653be3f1508c633086e887", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7410, "upload_time": "2020-03-26T01:23:12", "upload_time_iso_8601": "2020-03-26T01:23:12.524138Z", "url": "https://files.pythonhosted.org/packages/51/00/e39858e6a2d6b13e95262c06791bad626ee97045971cb317b5914471032c/throttler-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "299bfe0510c90c6be450ffa530122704", "sha256": "d0a0250d69bd65747e833882bb47efdddb3a33faa2d1135120c1eda6ddb1985e"}, "downloads": -1, "filename": "throttler-1.1.tar.gz", "has_sig": false, "md5_digest": "299bfe0510c90c6be450ffa530122704", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6646, "upload_time": "2020-03-26T01:23:14", "upload_time_iso_8601": "2020-03-26T01:23:14.155130Z", "url": "https://files.pythonhosted.org/packages/ab/bd/b24f6380452f22dc03a58c84be3aeeb0672d42e6ce0c4f2a23a7f9f5a2b7/throttler-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a8ef29848a653be3f1508c633086e887", "sha256": "3171bb215933df9f7890104d4b8e2ca52fe1cadf904644a7db5e17216689e82c"}, "downloads": -1, "filename": "throttler-1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a8ef29848a653be3f1508c633086e887", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 7410, "upload_time": "2020-03-26T01:23:12", "upload_time_iso_8601": "2020-03-26T01:23:12.524138Z", "url": "https://files.pythonhosted.org/packages/51/00/e39858e6a2d6b13e95262c06791bad626ee97045971cb317b5914471032c/throttler-1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "299bfe0510c90c6be450ffa530122704", "sha256": "d0a0250d69bd65747e833882bb47efdddb3a33faa2d1135120c1eda6ddb1985e"}, "downloads": -1, "filename": "throttler-1.1.tar.gz", "has_sig": false, "md5_digest": "299bfe0510c90c6be450ffa530122704", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6646, "upload_time": "2020-03-26T01:23:14", "upload_time_iso_8601": "2020-03-26T01:23:14.155130Z", "url": "https://files.pythonhosted.org/packages/ab/bd/b24f6380452f22dc03a58c84be3aeeb0672d42e6ce0c4f2a23a7f9f5a2b7/throttler-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:53:39 2020"}