{"info": {"author": "Kai Lautaportti", "author_email": "kai.lautaportti@hexagonit.fi", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "License :: OSI Approved :: Zope Public License", "Programming Language :: Python", "Topic :: Software Development :: Build Tools", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "=============================\ncollective.recipe.ant package\n=============================\n\n.. contents::\n\nWhat is collective.recipe.ant ?\n===============================\n\nCollective.recipie.ant executes an ant build. It assumes java, and and ant \nis installed on the system.\n\nSupported options:\n\nant \n    Specify the location of the ant application. This option is optional.\n    If not used the application is looked up in the default path.\n\nant-home\n    If ant is not located in your default ``PATH`` -environment variable\n    you can specify the location here.\n\nant-options\n    Specify the options ant should be called with. You may change the\n    buildfile with the ``-buildfile`` option for example.\n\nclasspath\n    Give some extra location for including java libraries.\n    I.e. junit, ...\n\nYou can debug the ant output by increasing the verbosity of buildout.\n\nSimple example\n==============\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = javaproject\n    ...\n    ... [javaproject]\n    ... recipe = collective.recipe.ant\n    ... \"\"\")\n\nOk, let's run the buildout:\n  \n    >>> print system(buildout)\n    Installing javaproject.\n    Build failed\n    While:\n      Installing javaproject.\n    Error: System error: Buildfile: build.xml does not exist!\n    <BLANKLINE>\n    <BLANKLINE>\n\nThis one failed. We didn't specify any options. Let's do that.\n\n    >>> from os.path import join, dirname\n    >>> buildfile = join(dirname(__file__), 'testdata', 'echo.xml')\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = javaproject\n    ...\n    ... [javaproject]\n    ... recipe = collective.recipe.ant\n    ... ant-options =\n    ...     echo \n    ...     -buildfile %s \n    ... \n    ... \"\"\" % buildfile)\n\nFetch the output of the ant process, when being extra verbose\n\n    >>> print system(buildout + ' -v')\n    Installing ...\n    <BLANKLINE>\n    echo:\n         [echo] Foo Bar\n    <BLANKLINE>\n    BUILD SUCCESSFUL\n    Total time: 0 seconds\n    <BLANKLINE>\n    javaproject: Build successful\n    <BLANKLINE>\n\n\nLet's see if the classpath verification works\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = javaproject\n    ...\n    ... [javaproject]\n    ... recipe = collective.recipe.ant\n    ... classpath = %s %s\n    ... ant-options =\n    ...     echo \n    ...     -buildfile %s \n    ... \n    ... \"\"\" % (join(dirname(__file__), 'testdata'),\n    ...        tmpdir('foo'),\n    ...        buildfile))\n\n    >>> print system(buildout)\n    Uninstalling javaproject.\n    Installing javaproject.\n    javaproject: Build successful\n    <BLANKLINE>\n\nNow we try to reference a (hopefully) nonexisting directory\n\n    >>> write(sample_buildout, 'buildout.cfg',\n    ... \"\"\"\n    ... [buildout]\n    ... parts = javaproject\n    ...\n    ... [javaproject]\n    ... recipe = collective.recipe.ant\n    ... classpath = %s\n    ... ant-options =\n    ...     echo \n    ...     -buildfile %s \n    ... \n    ... \"\"\" % (join(dirname(__file__), '__bogus__dir__'),\n    ...        buildfile))\n\n    >>> print system(buildout)\n    Uninstalling javaproject.\n    Installing javaproject.\n    While:\n      Installing javaproject.\n    Error: Classpath .../__bogus__dir__ does not exist.\n    <BLANKLINE>\n\n\nChangelog\n*********\n\n1.0 (2010-01-05)\n================\n\n - Initial Release [tom_gross]\n   \n - Removed path checks from __init__() since the required paths may\n   not be available at that time. [dokai]\n\n\n\nContributors\n***********************\n\nKai Lautaportti (dokai), Author - kai.lautaportti@hexagonit.fi\n\nTom Gross - itconsense@gmail.com\n\nDownload\n***********************", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://svn.plone.org/svn/collective/buildout/collective.recipe.ant/", "keywords": "", "license": "ZPL", "maintainer": null, "maintainer_email": null, "name": "collective.recipe.ant", "package_url": "https://pypi.org/project/collective.recipe.ant/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.recipe.ant/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://svn.plone.org/svn/collective/buildout/collective.recipe.ant/"}, "release_url": "https://pypi.org/project/collective.recipe.ant/1.0/", "requires_dist": null, "requires_python": null, "summary": "zc.buildout recipe for building ant (java) projects", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#what-is-collective-recipe-ant\" id=\"id2\" rel=\"nofollow\">What is collective.recipe.ant ?</a></li>\n<li><a href=\"#simple-example\" id=\"id3\" rel=\"nofollow\">Simple example</a><ul>\n<li><a href=\"#changelog\" id=\"id4\" rel=\"nofollow\">Changelog</a></li>\n</ul>\n</li>\n<li><a href=\"#id1\" id=\"id5\" rel=\"nofollow\">1.0 (2010-01-05)</a><ul>\n<li><a href=\"#contributors\" id=\"id6\" rel=\"nofollow\">Contributors</a></li>\n<li><a href=\"#download\" id=\"id7\" rel=\"nofollow\">Download</a></li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"what-is-collective-recipe-ant\">\n<h2><a href=\"#id2\" rel=\"nofollow\">What is collective.recipe.ant ?</a></h2>\n<p>Collective.recipie.ant executes an ant build. It assumes java, and and ant\nis installed on the system.</p>\n<p>Supported options:</p>\n<dl>\n<dt>ant</dt>\n<dd>Specify the location of the ant application. This option is optional.\nIf not used the application is looked up in the default path.</dd>\n<dt>ant-home</dt>\n<dd>If ant is not located in your default <tt>PATH</tt> -environment variable\nyou can specify the location here.</dd>\n<dt>ant-options</dt>\n<dd>Specify the options ant should be called with. You may change the\nbuildfile with the <tt><span class=\"pre\">-buildfile</span></tt> option for example.</dd>\n<dt>classpath</dt>\n<dd>Give some extra location for including java libraries.\nI.e. junit, \u2026</dd>\n</dl>\n<p>You can debug the ant output by increasing the verbosity of buildout.</p>\n</div>\n<div id=\"simple-example\">\n<h2><a href=\"#id3\" rel=\"nofollow\">Simple example</a></h2>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = javaproject\n...\n... [javaproject]\n... recipe = collective.recipe.ant\n... \"\"\")\n</pre>\n</blockquote>\n<p>Ok, let\u2019s run the buildout:</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print system(buildout)\nInstalling javaproject.\nBuild failed\nWhile:\n  Installing javaproject.\nError: System error: Buildfile: build.xml does not exist!\n&lt;BLANKLINE&gt;\n&lt;BLANKLINE&gt;\n</pre>\n</blockquote>\n<p>This one failed. We didn\u2019t specify any options. Let\u2019s do that.</p>\n<blockquote>\n<pre>&gt;&gt;&gt; from os.path import join, dirname\n&gt;&gt;&gt; buildfile = join(dirname(__file__), 'testdata', 'echo.xml')\n&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = javaproject\n...\n... [javaproject]\n... recipe = collective.recipe.ant\n... ant-options =\n...     echo\n...     -buildfile %s\n...\n... \"\"\" % buildfile)\n</pre>\n</blockquote>\n<p>Fetch the output of the ant process, when being extra verbose</p>\n<blockquote>\n<pre>&gt;&gt;&gt; print system(buildout + ' -v')\nInstalling ...\n&lt;BLANKLINE&gt;\necho:\n     [echo] Foo Bar\n&lt;BLANKLINE&gt;\nBUILD SUCCESSFUL\nTotal time: 0 seconds\n&lt;BLANKLINE&gt;\njavaproject: Build successful\n&lt;BLANKLINE&gt;\n</pre>\n</blockquote>\n<p>Let\u2019s see if the classpath verification works</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = javaproject\n...\n... [javaproject]\n... recipe = collective.recipe.ant\n... classpath = %s %s\n... ant-options =\n...     echo\n...     -buildfile %s\n...\n... \"\"\" % (join(dirname(__file__), 'testdata'),\n...        tmpdir('foo'),\n...        buildfile))\n</pre>\n<pre>&gt;&gt;&gt; print system(buildout)\nUninstalling javaproject.\nInstalling javaproject.\njavaproject: Build successful\n&lt;BLANKLINE&gt;\n</pre>\n</blockquote>\n<p>Now we try to reference a (hopefully) nonexisting directory</p>\n<blockquote>\n<pre>&gt;&gt;&gt; write(sample_buildout, 'buildout.cfg',\n... \"\"\"\n... [buildout]\n... parts = javaproject\n...\n... [javaproject]\n... recipe = collective.recipe.ant\n... classpath = %s\n... ant-options =\n...     echo\n...     -buildfile %s\n...\n... \"\"\" % (join(dirname(__file__), '__bogus__dir__'),\n...        buildfile))\n</pre>\n<pre>&gt;&gt;&gt; print system(buildout)\nUninstalling javaproject.\nInstalling javaproject.\nWhile:\n  Installing javaproject.\nError: Classpath .../__bogus__dir__ does not exist.\n&lt;BLANKLINE&gt;\n</pre>\n</blockquote>\n<div id=\"changelog\">\n<h3><a href=\"#id4\" rel=\"nofollow\">Changelog</a></h3>\n</div>\n</div>\n<div id=\"id1\">\n<h2><a href=\"#id5\" rel=\"nofollow\">1.0 (2010-01-05)</a></h2>\n<blockquote>\n<ul>\n<li>Initial Release [tom_gross]</li>\n<li>Removed path checks from __init__() since the required paths may\nnot be available at that time. [dokai]</li>\n</ul>\n</blockquote>\n<div id=\"contributors\">\n<h3><a href=\"#id6\" rel=\"nofollow\">Contributors</a></h3>\n<p>Kai Lautaportti (dokai), Author - <a href=\"mailto:kai.lautaportti%40hexagonit.fi\">kai<span>.</span>lautaportti<span>@</span>hexagonit<span>.</span>fi</a></p>\n<p>Tom Gross - <a href=\"mailto:itconsense%40gmail.com\">itconsense<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n<div id=\"download\">\n<h3><a href=\"#id7\" rel=\"nofollow\">Download</a></h3>\n</div>\n</div>\n\n          </div>"}, "last_serial": 788127, "releases": {"0.1dev-r57213": [{"comment_text": "", "digests": {"md5": "08e8f27abad2b29107fffafb9b653e47", "sha256": "f32762ae5dab67bd146a405196e3a822eeb1074b5ac9a1d148ecd372d0f6052f"}, "downloads": -1, "filename": "collective.recipe.ant-0.1dev-r57213.tar.gz", "has_sig": false, "md5_digest": "08e8f27abad2b29107fffafb9b653e47", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6121, "upload_time": "2008-01-19T22:26:12", "upload_time_iso_8601": "2008-01-19T22:26:12Z", "url": "https://files.pythonhosted.org/packages/38/02/09752b4ee28b29ea6ed60c4a26d32b3391ac2980fbd79dfbda62dde7f87e/collective.recipe.ant-0.1dev-r57213.tar.gz", "yanked": false}], "0.1dev-r57215": [], "0.1dev-r57216": [{"comment_text": "", "digests": {"md5": "940a42aa82e7805a55b5bc339d6f6102", "sha256": "c143c21a53011b31ea90d88e2b2a247a28f43ce1aafd997556b3984c316d9ad9"}, "downloads": -1, "filename": "collective.recipe.ant-0.1dev-r57216.tar.gz", "has_sig": false, "md5_digest": "940a42aa82e7805a55b5bc339d6f6102", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6158, "upload_time": "2008-01-19T22:36:20", "upload_time_iso_8601": "2008-01-19T22:36:20Z", "url": "https://files.pythonhosted.org/packages/d8/24/297c8885da543b1e810a27f3a491a9e4cd44ab3df46aac890c65720cbb09/collective.recipe.ant-0.1dev-r57216.tar.gz", "yanked": false}], "0.1dev-r57229": [{"comment_text": "", "digests": {"md5": "74c48a706df7ff2a42d8ba3a5855b2fb", "sha256": "342290b1657644dc1fc49d3e58f9c61b2d6ae9dd7c728c0e081a2a5f87e885e7"}, "downloads": -1, "filename": "collective.recipe.ant-0.1dev-r57229.tar.gz", "has_sig": false, "md5_digest": "74c48a706df7ff2a42d8ba3a5855b2fb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6146, "upload_time": "2008-01-20T17:11:03", "upload_time_iso_8601": "2008-01-20T17:11:03Z", "url": "https://files.pythonhosted.org/packages/29/cf/0197ac99a5a736d57dfa02b37c886b5fb09ffa50276d0a031668803f1804/collective.recipe.ant-0.1dev-r57229.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "8781d51e45e95d49f5e4dfe29c3cc9d4", "sha256": "711e62cb5993f347bb44cf58be97444a65b2dab7843d6c2de572a974cc64f026"}, "downloads": -1, "filename": "collective.recipe.ant-1.0.tar.gz", "has_sig": false, "md5_digest": "8781d51e45e95d49f5e4dfe29c3cc9d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6168, "upload_time": "2010-01-05T12:22:34", "upload_time_iso_8601": "2010-01-05T12:22:34.241754Z", "url": "https://files.pythonhosted.org/packages/c7/96/321d9e87020fa3d3e33ef013ca4348c7cd6d32bedd6290ab8c01179d070d/collective.recipe.ant-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8781d51e45e95d49f5e4dfe29c3cc9d4", "sha256": "711e62cb5993f347bb44cf58be97444a65b2dab7843d6c2de572a974cc64f026"}, "downloads": -1, "filename": "collective.recipe.ant-1.0.tar.gz", "has_sig": false, "md5_digest": "8781d51e45e95d49f5e4dfe29c3cc9d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6168, "upload_time": "2010-01-05T12:22:34", "upload_time_iso_8601": "2010-01-05T12:22:34.241754Z", "url": "https://files.pythonhosted.org/packages/c7/96/321d9e87020fa3d3e33ef013ca4348c7cd6d32bedd6290ab8c01179d070d/collective.recipe.ant-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:56 2020"}