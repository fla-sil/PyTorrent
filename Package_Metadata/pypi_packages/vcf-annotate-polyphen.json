{"info": {"author": "B. Arman Aksoy", "author_email": "arman@aksoy.org", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: ISC License (ISCL)", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "# vcf-annotate-polyphen\nA tool to annotate human VCF files with PolyPhen-2 effect measures.\nThis tool only works on human variants,\ncollects ClinVar scores,\nand assumes the VCF follows `hg19/GRCh37` conventions.\n\n## Install\n### via PyPi\n```\n$ pip install vcf-annotate-polyphen\n```\n\n### via Source Code\n```\n$ git checkout https://github.com/hammerlab/vcf-annotate-polyphen.git\n$ cd vcf-annotate-polyphen/\n$ python setup.py\n```\n\n## Usage\n### As a library\n```python\n  import vap  # Vcf-Annotate-Polyphen (VAP)\n\n  import sqlalchemy\n  from sqlalchemy import create_engine\n  engine = creative_engine('sqlite:///polyphen-2.2.2-whess-2011_12.sqlite')\n  conn = engine.connect()\n\n  annotation = vap.annotate_variant(conn, 'chr14', 20344588, 'C', 'A')\n  print (\"Gene: {}; Protein: {}; Change: {}; \"\n           \"HVar Prediction: {} (p: {}); HDiv Prediction: {} (p: {})\") \\\n           .format(\n            annotation.gene,\n            annotation.protein,\n            annotation.aa_change,\n            annotation.hvar_pred,\n            annotation.hvar_prob,\n            annotation.hdiv_pred,\n            annotation.hdiv_prob)\n  # Gene: OR4K2; Protein: Q8NGD2; Change: H54Q;\n  #  HVar Prediction: benign (p: 0.017); HDiv Prediction: benign (p: 0.008)\n```\n\n### Command line interface\nAfter installing the package, you can invoke the command line utility as follows:\n\n```\n$ vcf-annotate-polyphen --help\nUsage: vcf-annotate-polyphen polyphen.whess.sqlite input.vcf output.vcf\n\nOptions:\n  -h, --help  show this help message and exit\n```\n\nAs listed above in the help text, this tool expects three arguments from the user:\n\n1. [PolyPhen-2 WHESS](ftp://genetics.bwh.harvard.edu/pph2/whess) in SQLite format\n2. Input VCF to be annotated\n3. Output VCF to be written with annotations\n\nThe output file should have an additional `INFO` field as described below:\n\n```\n##INFO=<ID=PP2,Number=1,Type=String,Description=\"PolyPhen2 annotations in the following order:Gene name; UniProt id; Amino acid change; ClinVar effect category; Strength of effect (probability)\">\n```\n\nwhich manifests itself for each variant description:\n\n```\n...\n2\t165351172\t.\tT\tA\t.\tPASS\tSOMATIC;VT=SNP;PP2=.,.,.,.,.,.,.\tGT:AD:BQ:DP:FA:SS\t0:11,0:.:11:0.0:0\t0/1:3,5:30.0:8:0.625:2\n2\t179247908\t.\tC\tG\t.\tPASS\tSOMATIC;VT=SNP;PP2=OSBPL6,Q9BZF3,N593K,probably damaging,0.998,probably damaging,1.0\tGT:AD:BQ:DP:FA:SS\t0:27,2:.:29:0.069:0\t0/1:27,4:28.0:31:0.129:2\n...\n```\n\nHere is an annotated VCF: [example/TCGA-55-6543.annotated.vcf](example/TCGA-55-6543.annotated.vcf).\n\n### Example usage\n```\n$ cd example/\n# The following file is ~7 GB!!!\n$ wget \"ftp://genetics.bwh.harvard.edu/pph2/whess/polyphen-2.2.2-whess-2011_12.sqlite.bz2\"\n$ bunzip2 polyphen-2.2.2-whess-2011_12.sqlite.bz2\n$ vcf-annotate-polyphen ./polyphen-2.2.2-whess-2011_12.sqlite ./TCGA-55-6543.vcf ./TCGA-55-6543.annotated.vcf\n$ less ./TCGA-55-6543.annotated.vcf\n```", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hammerlab/vcf-annotate-polyphen", "keywords": "vcf-annotate-polyphen", "license": "http://www.apache.org/licenses/LICENSE-2.0.html", "maintainer": null, "maintainer_email": null, "name": "vcf-annotate-polyphen", "package_url": "https://pypi.org/project/vcf-annotate-polyphen/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/vcf-annotate-polyphen/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/hammerlab/vcf-annotate-polyphen"}, "release_url": "https://pypi.org/project/vcf-annotate-polyphen/0.1.2/", "requires_dist": null, "requires_python": null, "summary": "a tool to annotate human VCF files with PolyPhen2 effect measures", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            # vcf-annotate-polyphen<br>A tool to annotate human VCF files with PolyPhen-2 effect measures.<br>This tool only works on human variants,<br>collects ClinVar scores,<br>and assumes the VCF follows `hg19/GRCh37` conventions.<br><br>## Install<br>### via PyPi<br>```<br>$ pip install vcf-annotate-polyphen<br>```<br><br>### via Source Code<br>```<br>$ git checkout https://github.com/hammerlab/vcf-annotate-polyphen.git<br>$ cd vcf-annotate-polyphen/<br>$ python setup.py<br>```<br><br>## Usage<br>### As a library<br>```python<br>  import vap  # Vcf-Annotate-Polyphen (VAP)<br><br>  import sqlalchemy<br>  from sqlalchemy import create_engine<br>  engine = creative_engine('sqlite:///polyphen-2.2.2-whess-2011_12.sqlite')<br>  conn = engine.connect()<br><br>  annotation = vap.annotate_variant(conn, 'chr14', 20344588, 'C', 'A')<br>  print (\"Gene: {}; Protein: {}; Change: {}; \"<br>           \"HVar Prediction: {} (p: {}); HDiv Prediction: {} (p: {})\") \\<br>           .format(<br>            annotation.gene,<br>            annotation.protein,<br>            annotation.aa_change,<br>            annotation.hvar_pred,<br>            annotation.hvar_prob,<br>            annotation.hdiv_pred,<br>            annotation.hdiv_prob)<br>  # Gene: OR4K2; Protein: Q8NGD2; Change: H54Q;<br>  #  HVar Prediction: benign (p: 0.017); HDiv Prediction: benign (p: 0.008)<br>```<br><br>### Command line interface<br>After installing the package, you can invoke the command line utility as follows:<br><br>```<br>$ vcf-annotate-polyphen --help<br>Usage: vcf-annotate-polyphen polyphen.whess.sqlite input.vcf output.vcf<br><br>Options:<br>  -h, --help  show this help message and exit<br>```<br><br>As listed above in the help text, this tool expects three arguments from the user:<br><br>1. [PolyPhen-2 WHESS](ftp://genetics.bwh.harvard.edu/pph2/whess) in SQLite format<br>2. Input VCF to be annotated<br>3. Output VCF to be written with annotations<br><br>The output file should have an additional `INFO` field as described below:<br><br>```<br>##INFO=&lt;ID=PP2,Number=1,Type=String,Description=\"PolyPhen2 annotations in the following order:Gene name; UniProt id; Amino acid change; ClinVar effect category; Strength of effect (probability)\"&gt;<br>```<br><br>which manifests itself for each variant description:<br><br>```<br>...<br>2\t165351172\t.\tT\tA\t.\tPASS\tSOMATIC;VT=SNP;PP2=.,.,.,.,.,.,.\tGT:AD:BQ:DP:FA:SS\t0:11,0:.:11:0.0:0\t0/1:3,5:30.0:8:0.625:2<br>2\t179247908\t.\tC\tG\t.\tPASS\tSOMATIC;VT=SNP;PP2=OSBPL6,Q9BZF3,N593K,probably damaging,0.998,probably damaging,1.0\tGT:AD:BQ:DP:FA:SS\t0:27,2:.:29:0.069:0\t0/1:27,4:28.0:31:0.129:2<br>...<br>```<br><br>Here is an annotated VCF: [example/TCGA-55-6543.annotated.vcf](example/TCGA-55-6543.annotated.vcf).<br><br>### Example usage<br>```<br>$ cd example/<br># The following file is ~7 GB!!!<br>$ wget \"ftp://genetics.bwh.harvard.edu/pph2/whess/polyphen-2.2.2-whess-2011_12.sqlite.bz2\"<br>$ bunzip2 polyphen-2.2.2-whess-2011_12.sqlite.bz2<br>$ vcf-annotate-polyphen ./polyphen-2.2.2-whess-2011_12.sqlite ./TCGA-55-6543.vcf ./TCGA-55-6543.annotated.vcf<br>$ less ./TCGA-55-6543.annotated.vcf<br>```\n          </div>"}, "last_serial": 2095781, "releases": {"0.1.0": [], "0.1.1": [{"comment_text": "", "digests": {"md5": "a88faaf4d7833222942d3e54f068ce54", "sha256": "437e616c79e282264d81cfed77d55b785c33b519ca21c969a898babdbe6fcb95"}, "downloads": -1, "filename": "vcf-annotate-polyphen-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a88faaf4d7833222942d3e54f068ce54", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15700, "upload_time": "2016-05-01T17:37:47", "upload_time_iso_8601": "2016-05-01T17:37:47.526153Z", "url": "https://files.pythonhosted.org/packages/74/5b/cff17090cfd623e8d867dfa61dd03b17cec1711ee07bcb13befaf85cf08a/vcf-annotate-polyphen-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b904118da00dfe580efa3cbb668d6cb9", "sha256": "4e0505850c41d1866231ef417ca3a278256f82f2f351165beac7efdbd02db29d"}, "downloads": -1, "filename": "vcf-annotate-polyphen-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b904118da00dfe580efa3cbb668d6cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16279, "upload_time": "2016-05-02T21:12:32", "upload_time_iso_8601": "2016-05-02T21:12:32.539391Z", "url": "https://files.pythonhosted.org/packages/2c/b4/c826393476361a5a2e99be7f2434d5deb67c73eeee83a00ac1bb8effb363/vcf-annotate-polyphen-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b904118da00dfe580efa3cbb668d6cb9", "sha256": "4e0505850c41d1866231ef417ca3a278256f82f2f351165beac7efdbd02db29d"}, "downloads": -1, "filename": "vcf-annotate-polyphen-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b904118da00dfe580efa3cbb668d6cb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16279, "upload_time": "2016-05-02T21:12:32", "upload_time_iso_8601": "2016-05-02T21:12:32.539391Z", "url": "https://files.pythonhosted.org/packages/2c/b4/c826393476361a5a2e99be7f2434d5deb67c73eeee83a00ac1bb8effb363/vcf-annotate-polyphen-0.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:37:31 2020"}