{"info": {"author": "Ben Dichter", "author_email": "ben.dichter@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# tolias-lab-to-nwb\nCode for converting Tolias Lab data to NWB. The text metadata is stored in a YAML file, and must be edited with the correct fields to be added to the NWB file.\n\nauthor: Ben Dichter, ben.dichter@gmail.com\n\nThis software was put together in collaboration with the Tolias and Berens labs under the [DANDI project](https://dandiarchive.org/).\n\n## Installation\n```shell script\npip install tolias-lab-to-nwb\n```\n\n## Usage\nConvert all in python:\n```python\nfrom tolias_lab_to_nwb.convert import convert_all\n\nconvert_all(data_dir='/Volumes/easystore5T/data/Tolias/ephys',\n            metafile_fpath='metafile.yml',\n            out_dir='/Volumes/easystore5T/data/Tolias/nwb',\n            meta_csv_file='/Volumes/easystore5T/data/Tolias/ephys/mini-atlas-meta-data.csv')\n```\n\nConvert single session in python:\n```python\nimport os\n\nfrom dateutil import parser\nfrom ruamel import yaml\nfrom scipy.io import loadmat\n\nfrom tolias_lab_to_nwb.convert import ToliasNWBConverter\nfrom tolias_lab_to_nwb.data_prep import data_preparation\n\ninput_fpath = '/path/to/08 01 2019 sample 1.mat'\noutput_fpath = 'path/to/dest.nwb'\nmetafile_fpath = 'path/to/metafile.yml'\n\nfpath_base, fname = os.path.split(input_fpath)\nsession_id = os.path.splitext(fname)[0]\n\nwith open(metafile_fpath) as f:\n    metadata = yaml.safe_load(f)\n\nmetadata['NWBFile']['session_start_time'] = parser.parse(session_id[:10])\nmetadata['NWBFile']['session_id'] = session_id\n\ntolias_converter = ToliasNWBConverter(metadata)\n\ndata = loadmat(input_fpath)\ntime, current, voltage, curr_index_0 = data_preparation(data)\n\ntolias_converter.add_icephys_data(current, voltage, rate=25e3)\n\ntolias_converter.save(output_fpath)\n```\n\nin command line:\n```\nusage: convert.py [-h] [-o OUTPUT_FPATH] [-m METAFILE] input_fpath\n\nconvert .mat file to NWB\n\npositional arguments:\n  input_fpath           path of .mat file to convert\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT_FPATH, --output_fpath OUTPUT_FPATH\n                        path to save NWB file. If not provided, file will\n                        output as input_fname.nwb in the same directory \n                        as the input data.\n  -m METAFILE, --metafile METAFILE\n                        YAML file that contains metadata for experiment. \n                        If not provided, will look for metafile.yml in the\n                        same directory as the input data.\n\nexample usage:\n  python -m tolias_lab_to_nwb.convert '/path/to/08 01 2019 sample 1.mat'\n  python -m tolias_lab_to_nwb.convert '/path/to/08 01 2019 sample 1.mat' -m path/to/metafile.yml\n  python -m tolias_lab_to_nwb.convert '/path/to/08 01 2019 sample 1.mat' -m path/to/metafile.yml -o path/to/dest.nwb\n```\n\n### Reading the resulting NWB files in python\n\n```python\nfrom pynwb import NWBHDF5IO\nimport numpy as np\nimport matplotlib.pyplot as plt\n\nfpath = 'path/to/08 01 2019 sample 1.nwb'\n\nio = NWBHDF5IO(fpath, 'r')\n\nnwb = io.read()\n\ndef plot_sweep(sweep, ax=None):\n    if ax is None:\n        _, ax = plt.subplots()\n    dat = sweep.data[:]\n    yy = dat * sweep.conversion\n    xx = np.arange(len(dat))/sweep.rate\n\n    ax.plot(xx, yy)\n\n    ax.set_ylabel(sweep.unit)\n    ax.set_xlabel('time (s)')\n\ndef get_stim_and_response(nwb, stim_name):\n    stimulus = nwb.stimulus[stim_name]\n    df = nwb.sweep_table.to_dataframe()\n    stim_select = df['series'].apply(lambda x: x[0].object_id) == stimulus.object_id\n    sweep_number = df['sweep_number'][stim_select].values[0]\n    resp_select = df['sweep_number'] == sweep_number - stim_select\n    response = df['series'][resp_select].values[0][0]\n    return stimulus, response\n\nstimulus, response = get_stim_and_response(nwb, 'CurrentClampStimulusSeries002')\n\nfig, axs = plt.subplots(2,1, sharex=True)\nplot_sweep(stimulus, ax=axs[0])\nplot_sweep(response, ax=axs[1])\n_ = axs[0].set_xlabel('')\n```\n\n![](images/trace_plot.png)\n\n### reading data in MATLAB\n\n```matlab\n%% read\n\nfpath = '/Volumes/easystore5T/data/Tolias/08 01 2019 sample 1.nwb';\n\nnwb = nwbRead(fpath);\n\nstim_name = 'CurrentClampStimulusSeries002';\n\nstimulus = nwb.stimulus_presentation.get(stim_name);\n\nsweep_table = nwb.general_intracellular_ephys_sweep_table;\n\nsweep_numbers = sweep_table.sweep_number.data.load;\n\nfor i = 1:length(sweep_table.series.data)\n    obj = sweep_table.series.data(i);\n    if obj.refresh(nwb) == stimulus\n        sweep_number = sweep_numbers(i);\n        break;\n    end\nend\n\nind = find(sweep_numbers == sweep_number);\nind = ind(ind ~= i); % remove stim ind\n\nresponse = sweep_table.series.data(ind).refresh(nwb);\n\n%% plot\n\nyy = stimulus.data.load * stimulus.data_conversion;\nxx = (1:length(yy)) / stimulus.starting_time_rate;\n\nsubplot(2,1,1)\nplot(xx,yy)\nylabel(stimulus.data_unit)\n\n\nyy = response.data.load * response.data_conversion;\nxx = (1:length(yy)) / response.starting_time_rate;\n\nsubplot(2,1,2)\nplot(xx,yy)\nylabel(response.data_unit)\nxlabel('time (s)')\n```\n\n![](images/matlab_trace_plot.png)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "tolias-lab-to-nwb", "package_url": "https://pypi.org/project/tolias-lab-to-nwb/", "platform": "", "project_url": "https://pypi.org/project/tolias-lab-to-nwb/", "project_urls": null, "release_url": "https://pypi.org/project/tolias-lab-to-nwb/0.3.0/", "requires_dist": ["pandas", "numpy", "scipy", "ruamel.yaml", "pynwb", "nwbn-conversion-tools (==0.2.0)"], "requires_python": "", "summary": "tool to convert Tolias Lab matlab intracellular electrophysiology data into NWB:N format", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tolias-lab-to-nwb</h1>\n<p>Code for converting Tolias Lab data to NWB. The text metadata is stored in a YAML file, and must be edited with the correct fields to be added to the NWB file.</p>\n<p>author: Ben Dichter, <a href=\"mailto:ben.dichter@gmail.com\">ben.dichter@gmail.com</a></p>\n<p>This software was put together in collaboration with the Tolias and Berens labs under the <a href=\"https://dandiarchive.org/\" rel=\"nofollow\">DANDI project</a>.</p>\n<h2>Installation</h2>\n<pre>pip install tolias-lab-to-nwb\n</pre>\n<h2>Usage</h2>\n<p>Convert all in python:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">tolias_lab_to_nwb.convert</span> <span class=\"kn\">import</span> <span class=\"n\">convert_all</span>\n\n<span class=\"n\">convert_all</span><span class=\"p\">(</span><span class=\"n\">data_dir</span><span class=\"o\">=</span><span class=\"s1\">'/Volumes/easystore5T/data/Tolias/ephys'</span><span class=\"p\">,</span>\n            <span class=\"n\">metafile_fpath</span><span class=\"o\">=</span><span class=\"s1\">'metafile.yml'</span><span class=\"p\">,</span>\n            <span class=\"n\">out_dir</span><span class=\"o\">=</span><span class=\"s1\">'/Volumes/easystore5T/data/Tolias/nwb'</span><span class=\"p\">,</span>\n            <span class=\"n\">meta_csv_file</span><span class=\"o\">=</span><span class=\"s1\">'/Volumes/easystore5T/data/Tolias/ephys/mini-atlas-meta-data.csv'</span><span class=\"p\">)</span>\n</pre>\n<p>Convert single session in python:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">dateutil</span> <span class=\"kn\">import</span> <span class=\"n\">parser</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ruamel</span> <span class=\"kn\">import</span> <span class=\"n\">yaml</span>\n<span class=\"kn\">from</span> <span class=\"nn\">scipy.io</span> <span class=\"kn\">import</span> <span class=\"n\">loadmat</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tolias_lab_to_nwb.convert</span> <span class=\"kn\">import</span> <span class=\"n\">ToliasNWBConverter</span>\n<span class=\"kn\">from</span> <span class=\"nn\">tolias_lab_to_nwb.data_prep</span> <span class=\"kn\">import</span> <span class=\"n\">data_preparation</span>\n\n<span class=\"n\">input_fpath</span> <span class=\"o\">=</span> <span class=\"s1\">'/path/to/08 01 2019 sample 1.mat'</span>\n<span class=\"n\">output_fpath</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/dest.nwb'</span>\n<span class=\"n\">metafile_fpath</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/metafile.yml'</span>\n\n<span class=\"n\">fpath_base</span><span class=\"p\">,</span> <span class=\"n\">fname</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">split</span><span class=\"p\">(</span><span class=\"n\">input_fpath</span><span class=\"p\">)</span>\n<span class=\"n\">session_id</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">splitext</span><span class=\"p\">(</span><span class=\"n\">fname</span><span class=\"p\">)[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n\n<span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"n\">metafile_fpath</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n    <span class=\"n\">metadata</span> <span class=\"o\">=</span> <span class=\"n\">yaml</span><span class=\"o\">.</span><span class=\"n\">safe_load</span><span class=\"p\">(</span><span class=\"n\">f</span><span class=\"p\">)</span>\n\n<span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s1\">'NWBFile'</span><span class=\"p\">][</span><span class=\"s1\">'session_start_time'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">parser</span><span class=\"o\">.</span><span class=\"n\">parse</span><span class=\"p\">(</span><span class=\"n\">session_id</span><span class=\"p\">[:</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n<span class=\"n\">metadata</span><span class=\"p\">[</span><span class=\"s1\">'NWBFile'</span><span class=\"p\">][</span><span class=\"s1\">'session_id'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"n\">session_id</span>\n\n<span class=\"n\">tolias_converter</span> <span class=\"o\">=</span> <span class=\"n\">ToliasNWBConverter</span><span class=\"p\">(</span><span class=\"n\">metadata</span><span class=\"p\">)</span>\n\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">loadmat</span><span class=\"p\">(</span><span class=\"n\">input_fpath</span><span class=\"p\">)</span>\n<span class=\"n\">time</span><span class=\"p\">,</span> <span class=\"n\">current</span><span class=\"p\">,</span> <span class=\"n\">voltage</span><span class=\"p\">,</span> <span class=\"n\">curr_index_0</span> <span class=\"o\">=</span> <span class=\"n\">data_preparation</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n\n<span class=\"n\">tolias_converter</span><span class=\"o\">.</span><span class=\"n\">add_icephys_data</span><span class=\"p\">(</span><span class=\"n\">current</span><span class=\"p\">,</span> <span class=\"n\">voltage</span><span class=\"p\">,</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">25e3</span><span class=\"p\">)</span>\n\n<span class=\"n\">tolias_converter</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">(</span><span class=\"n\">output_fpath</span><span class=\"p\">)</span>\n</pre>\n<p>in command line:</p>\n<pre><code>usage: convert.py [-h] [-o OUTPUT_FPATH] [-m METAFILE] input_fpath\n\nconvert .mat file to NWB\n\npositional arguments:\n  input_fpath           path of .mat file to convert\n\noptional arguments:\n  -h, --help            show this help message and exit\n  -o OUTPUT_FPATH, --output_fpath OUTPUT_FPATH\n                        path to save NWB file. If not provided, file will\n                        output as input_fname.nwb in the same directory \n                        as the input data.\n  -m METAFILE, --metafile METAFILE\n                        YAML file that contains metadata for experiment. \n                        If not provided, will look for metafile.yml in the\n                        same directory as the input data.\n\nexample usage:\n  python -m tolias_lab_to_nwb.convert '/path/to/08 01 2019 sample 1.mat'\n  python -m tolias_lab_to_nwb.convert '/path/to/08 01 2019 sample 1.mat' -m path/to/metafile.yml\n  python -m tolias_lab_to_nwb.convert '/path/to/08 01 2019 sample 1.mat' -m path/to/metafile.yml -o path/to/dest.nwb\n</code></pre>\n<h3>Reading the resulting NWB files in python</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pynwb</span> <span class=\"kn\">import</span> <span class=\"n\">NWBHDF5IO</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n\n<span class=\"n\">fpath</span> <span class=\"o\">=</span> <span class=\"s1\">'path/to/08 01 2019 sample 1.nwb'</span>\n\n<span class=\"n\">io</span> <span class=\"o\">=</span> <span class=\"n\">NWBHDF5IO</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">,</span> <span class=\"s1\">'r'</span><span class=\"p\">)</span>\n\n<span class=\"n\">nwb</span> <span class=\"o\">=</span> <span class=\"n\">io</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">plot_sweep</span><span class=\"p\">(</span><span class=\"n\">sweep</span><span class=\"p\">,</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"kc\">None</span><span class=\"p\">):</span>\n    <span class=\"k\">if</span> <span class=\"n\">ax</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">_</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n    <span class=\"n\">dat</span> <span class=\"o\">=</span> <span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[:]</span>\n    <span class=\"n\">yy</span> <span class=\"o\">=</span> <span class=\"n\">dat</span> <span class=\"o\">*</span> <span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">conversion</span>\n    <span class=\"n\">xx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">dat</span><span class=\"p\">))</span><span class=\"o\">/</span><span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">rate</span>\n\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">,</span> <span class=\"n\">yy</span><span class=\"p\">)</span>\n\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_ylabel</span><span class=\"p\">(</span><span class=\"n\">sweep</span><span class=\"o\">.</span><span class=\"n\">unit</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">'time (s)'</span><span class=\"p\">)</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">get_stim_and_response</span><span class=\"p\">(</span><span class=\"n\">nwb</span><span class=\"p\">,</span> <span class=\"n\">stim_name</span><span class=\"p\">):</span>\n    <span class=\"n\">stimulus</span> <span class=\"o\">=</span> <span class=\"n\">nwb</span><span class=\"o\">.</span><span class=\"n\">stimulus</span><span class=\"p\">[</span><span class=\"n\">stim_name</span><span class=\"p\">]</span>\n    <span class=\"n\">df</span> <span class=\"o\">=</span> <span class=\"n\">nwb</span><span class=\"o\">.</span><span class=\"n\">sweep_table</span><span class=\"o\">.</span><span class=\"n\">to_dataframe</span><span class=\"p\">()</span>\n    <span class=\"n\">stim_select</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'series'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">apply</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"n\">x</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">object_id</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">stimulus</span><span class=\"o\">.</span><span class=\"n\">object_id</span>\n    <span class=\"n\">sweep_number</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'sweep_number'</span><span class=\"p\">][</span><span class=\"n\">stim_select</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">resp_select</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'sweep_number'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"n\">sweep_number</span> <span class=\"o\">-</span> <span class=\"n\">stim_select</span>\n    <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">df</span><span class=\"p\">[</span><span class=\"s1\">'series'</span><span class=\"p\">][</span><span class=\"n\">resp_select</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">values</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"k\">return</span> <span class=\"n\">stimulus</span><span class=\"p\">,</span> <span class=\"n\">response</span>\n\n<span class=\"n\">stimulus</span><span class=\"p\">,</span> <span class=\"n\">response</span> <span class=\"o\">=</span> <span class=\"n\">get_stim_and_response</span><span class=\"p\">(</span><span class=\"n\">nwb</span><span class=\"p\">,</span> <span class=\"s1\">'CurrentClampStimulusSeries002'</span><span class=\"p\">)</span>\n\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">axs</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">sharex</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">plot_sweep</span><span class=\"p\">(</span><span class=\"n\">stimulus</span><span class=\"p\">,</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">])</span>\n<span class=\"n\">plot_sweep</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">,</span> <span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">])</span>\n<span class=\"n\">_</span> <span class=\"o\">=</span> <span class=\"n\">axs</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">set_xlabel</span><span class=\"p\">(</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0a03df93fdd06cc46da2f0788674adc730a30d1/696d616765732f74726163655f706c6f742e706e67\"></p>\n<h3>reading data in MATLAB</h3>\n<pre><span class=\"c\">%% read</span>\n\n<span class=\"n\">fpath</span> <span class=\"p\">=</span> <span class=\"s\">'/Volumes/easystore5T/data/Tolias/08 01 2019 sample 1.nwb'</span><span class=\"p\">;</span>\n\n<span class=\"n\">nwb</span> <span class=\"p\">=</span> <span class=\"n\">nwbRead</span><span class=\"p\">(</span><span class=\"n\">fpath</span><span class=\"p\">);</span>\n\n<span class=\"n\">stim_name</span> <span class=\"p\">=</span> <span class=\"s\">'CurrentClampStimulusSeries002'</span><span class=\"p\">;</span>\n\n<span class=\"n\">stimulus</span> <span class=\"p\">=</span> <span class=\"n\">nwb</span><span class=\"p\">.</span><span class=\"n\">stimulus_presentation</span><span class=\"p\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">stim_name</span><span class=\"p\">);</span>\n\n<span class=\"n\">sweep_table</span> <span class=\"p\">=</span> <span class=\"n\">nwb</span><span class=\"p\">.</span><span class=\"n\">general_intracellular_ephys_sweep_table</span><span class=\"p\">;</span>\n\n<span class=\"n\">sweep_numbers</span> <span class=\"p\">=</span> <span class=\"n\">sweep_table</span><span class=\"p\">.</span><span class=\"n\">sweep_number</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">load</span><span class=\"p\">;</span>\n\n<span class=\"n\">for</span> <span class=\"s\">i</span> <span class=\"s\">=</span> <span class=\"s\">1:length(sweep_table.series.data)</span>\n    <span class=\"n\">obj</span> <span class=\"p\">=</span> <span class=\"n\">sweep_table</span><span class=\"p\">.</span><span class=\"n\">series</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"nb\">i</span><span class=\"p\">);</span>\n    <span class=\"n\">if</span> <span class=\"s\">obj.refresh(nwb)</span> <span class=\"s\">==</span> <span class=\"s\">stimulus</span>\n        <span class=\"n\">sweep_number</span> <span class=\"p\">=</span> <span class=\"n\">sweep_numbers</span><span class=\"p\">(</span><span class=\"nb\">i</span><span class=\"p\">);</span>\n        <span class=\"k\">break</span><span class=\"p\">;</span>\n    <span class=\"n\">end</span>\n<span class=\"s\">end</span>\n\n<span class=\"n\">ind</span> <span class=\"p\">=</span> <span class=\"nb\">find</span><span class=\"p\">(</span><span class=\"n\">sweep_numbers</span> <span class=\"o\">==</span> <span class=\"n\">sweep_number</span><span class=\"p\">);</span>\n<span class=\"n\">ind</span> <span class=\"p\">=</span> <span class=\"n\">ind</span><span class=\"p\">(</span><span class=\"n\">ind</span> <span class=\"o\">~=</span> <span class=\"nb\">i</span><span class=\"p\">);</span> <span class=\"c\">% remove stim ind</span>\n\n<span class=\"n\">response</span> <span class=\"p\">=</span> <span class=\"n\">sweep_table</span><span class=\"p\">.</span><span class=\"n\">series</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">(</span><span class=\"n\">ind</span><span class=\"p\">).</span><span class=\"n\">refresh</span><span class=\"p\">(</span><span class=\"n\">nwb</span><span class=\"p\">);</span>\n\n<span class=\"c\">%% plot</span>\n\n<span class=\"n\">yy</span> <span class=\"p\">=</span> <span class=\"n\">stimulus</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">load</span> <span class=\"o\">*</span> <span class=\"n\">stimulus</span><span class=\"p\">.</span><span class=\"n\">data_conversion</span><span class=\"p\">;</span>\n<span class=\"n\">xx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"nb\">length</span><span class=\"p\">(</span><span class=\"n\">yy</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"n\">stimulus</span><span class=\"p\">.</span><span class=\"n\">starting_time_rate</span><span class=\"p\">;</span>\n\n<span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">,</span><span class=\"n\">yy</span><span class=\"p\">)</span>\n<span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"n\">stimulus</span><span class=\"p\">.</span><span class=\"n\">data_unit</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">yy</span> <span class=\"p\">=</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">data</span><span class=\"p\">.</span><span class=\"n\">load</span> <span class=\"o\">*</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">data_conversion</span><span class=\"p\">;</span>\n<span class=\"n\">xx</span> <span class=\"p\">=</span> <span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">:</span><span class=\"nb\">length</span><span class=\"p\">(</span><span class=\"n\">yy</span><span class=\"p\">))</span> <span class=\"o\">/</span> <span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">starting_time_rate</span><span class=\"p\">;</span>\n\n<span class=\"n\">subplot</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">,</span><span class=\"n\">yy</span><span class=\"p\">)</span>\n<span class=\"n\">ylabel</span><span class=\"p\">(</span><span class=\"n\">response</span><span class=\"p\">.</span><span class=\"n\">data_unit</span><span class=\"p\">)</span>\n<span class=\"n\">xlabel</span><span class=\"p\">(</span><span class=\"s\">'time (s)'</span><span class=\"p\">)</span>\n</pre>\n<p><img alt=\"\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5235fd0cd50b2416c2bbcf131b30c60598cd6251/696d616765732f6d61746c61625f74726163655f706c6f742e706e67\"></p>\n\n          </div>"}, "last_serial": 6535110, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "4dda7202af1c11d038e913546719a241", "sha256": "06fa5b6c10170336da4c5da030b3259dbe4f6c5ff82435707651daab09ea76b5"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4dda7202af1c11d038e913546719a241", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30448, "upload_time": "2020-01-19T00:13:26", "upload_time_iso_8601": "2020-01-19T00:13:26.138460Z", "url": "https://files.pythonhosted.org/packages/fb/f9/abaf2958afa44f580174ca923c0bd26642a35bcac2ed885a68b646e0176f/tolias_lab_to_nwb-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9fe8c860d182a67520f0a3d669c13152", "sha256": "7ae717d9cde14906c9653b49f044443033fdcd8b19ca164b87e861b340f1cd35"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.1.1.tar.gz", "has_sig": false, "md5_digest": "9fe8c860d182a67520f0a3d669c13152", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29642, "upload_time": "2020-01-19T00:13:28", "upload_time_iso_8601": "2020-01-19T00:13:28.627192Z", "url": "https://files.pythonhosted.org/packages/b0/95/6c2eb335eb620f032fa69cd530b0f11c2193d44fc9c7c45b232d69a5b764/tolias_lab_to_nwb-0.1.1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "4a4c4cffc5fecf2cd14145fd10a6407d", "sha256": "081c5fdfc5b9249cb7dd11dfd0d022981ffa2cebbc9636601ff2bf557fb5f988"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4a4c4cffc5fecf2cd14145fd10a6407d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 30948, "upload_time": "2020-01-19T03:56:43", "upload_time_iso_8601": "2020-01-19T03:56:43.176887Z", "url": "https://files.pythonhosted.org/packages/59/17/ed5c60f82a60129c70819a833cd95e1ad74c07c044578ec9b020431ec2dc/tolias_lab_to_nwb-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "72fb836a06c1c9a8d9456c784917c4e5", "sha256": "bd335cef86ca5a0c121ecf2d733630cbc8927569bcc5f94e58e44a890e866b71"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.2.0.tar.gz", "has_sig": false, "md5_digest": "72fb836a06c1c9a8d9456c784917c4e5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30598, "upload_time": "2020-01-19T03:56:44", "upload_time_iso_8601": "2020-01-19T03:56:44.849491Z", "url": "https://files.pythonhosted.org/packages/0e/fb/7f6d235e60f5026d792259e7ee0cf18c6155219eab526e6fe5c41692849f/tolias_lab_to_nwb-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "d2ebbb38c4132121dd77a2d3b95c502d", "sha256": "409d3f48bc11c1f088778924ba14cb69a83272a2e734732547d974a19c665739"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d2ebbb38c4132121dd77a2d3b95c502d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32162, "upload_time": "2020-01-28T23:31:07", "upload_time_iso_8601": "2020-01-28T23:31:07.787331Z", "url": "https://files.pythonhosted.org/packages/39/7f/893c1a9a40f245fe67411af34b055f77cccebb18a14ae2c5cc63ba9272e9/tolias_lab_to_nwb-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69225455114b9e6d42fcde1eb211d987", "sha256": "f06396df1580c6ac4a47b8f77bad260662a0266985e5d30b3a3bc26484725daf"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.3.0.tar.gz", "has_sig": false, "md5_digest": "69225455114b9e6d42fcde1eb211d987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32416, "upload_time": "2020-01-28T23:31:09", "upload_time_iso_8601": "2020-01-28T23:31:09.151700Z", "url": "https://files.pythonhosted.org/packages/da/01/61cd4dc3476ecb2ee4c7fb5401823d4d124463c6818ceaddfc312501644c/tolias_lab_to_nwb-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d2ebbb38c4132121dd77a2d3b95c502d", "sha256": "409d3f48bc11c1f088778924ba14cb69a83272a2e734732547d974a19c665739"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d2ebbb38c4132121dd77a2d3b95c502d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 32162, "upload_time": "2020-01-28T23:31:07", "upload_time_iso_8601": "2020-01-28T23:31:07.787331Z", "url": "https://files.pythonhosted.org/packages/39/7f/893c1a9a40f245fe67411af34b055f77cccebb18a14ae2c5cc63ba9272e9/tolias_lab_to_nwb-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "69225455114b9e6d42fcde1eb211d987", "sha256": "f06396df1580c6ac4a47b8f77bad260662a0266985e5d30b3a3bc26484725daf"}, "downloads": -1, "filename": "tolias_lab_to_nwb-0.3.0.tar.gz", "has_sig": false, "md5_digest": "69225455114b9e6d42fcde1eb211d987", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 32416, "upload_time": "2020-01-28T23:31:09", "upload_time_iso_8601": "2020-01-28T23:31:09.151700Z", "url": "https://files.pythonhosted.org/packages/da/01/61cd4dc3476ecb2ee4c7fb5401823d4d124463c6818ceaddfc312501644c/tolias_lab_to_nwb-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:51:21 2020"}