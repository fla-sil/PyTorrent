{"info": {"author": "orsinium", "author_email": "master_fess@mail.ru", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Plugins", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: GNU Lesser General Public License v3 or later (LGPLv3+)", "Programming Language :: Python"], "description": "DjBrut\n======\n\n.. figure:: logo.png\n   :alt: DjBrut logo\n\n   DjBrut logo\n\n|Build Status| |PyPI version| |Status| |Code size| |License|\n\nDjBrut -- simple brutforce protection for Django project.\n\nDefault checkers:\n\n-  Max requests for IP.\n-  Max requests for user.\n-  Max requests for one CSRF-token (stupid but effective).\n-  Max requests frequency limitation.\n\nDjBrut use Redis as storage for all counters.\n\nInstallation\n------------\n\n::\n\n    pip install djbrut\n\nUsage\n-----\n\n.. code:: python\n\n    from django.http import HttpResponse\n    from djbrut import Attempt\n\n    def some_view(request):\n        attempt = Attempt('some rule type name', request)\n        # check\n        if not attempt.check():\n            # error\n            return HttpResponse(attempt.error)\n        # success\n        ...\n\nYou can see `example project <example/>`__ for more details.\n\nConfiguring\n-----------\n\nJust set up rules:\n\n.. code:: python\n\n    BRUTEFORCE_LIMITS = {\n        'default': Rule(\n            user=100,       # max requests for one user by BRUTEFORCE_TIMELIMIT\n            ip=300,         # max requests for one IP by BRUTEFORCE_TIMELIMIT\n            csrf=50,        # max requests with one CSRF token by BRUTEFORCE_TIMELIMIT\n            freq=0,         # max request frequency for client [seconds]\n        ),\n        'some rule type name': Rule(\n            user=100,       # max requests for one user by BRUTEFORCE_TIMELIMIT\n            ip=300,         # max requests for one IP by BRUTEFORCE_TIMELIMIT\n            csrf=50,        # max requests with one CSRF token by BRUTEFORCE_TIMELIMIT\n            freq=0,         # max request frequency for client [seconds]\n        ),\n    }\n\n``Attempt`` get rule type name as first arg. If rule type name not found\nin keys of BRUTEFORCE\\_LIMITS, 'default' will be used. If you don't set\ndefault rule then passed rule type must be exists in BRUTEFORCE\\_LIMITS\nkeys.\n\n``BRUTEFORCE_TIMELIMIT`` -- time to live for all attempts counters.\n\nYou can see `default settings <djbrut/default_settings.py>`__ for more\nparams such as custom error message.\n\n.. |Build Status| image:: https://travis-ci.org/orsinium/django-bruteforce-protection.svg?branch=master\n   :target: https://travis-ci.org/orsinium/django-bruteforce-protection\n.. |PyPI version| image:: https://img.shields.io/pypi/v/djbrut.svg\n   :target: https://pypi.python.org/pypi/djbrut\n.. |Status| image:: https://img.shields.io/pypi/status/djbrut.svg\n   :target: https://pypi.python.org/pypi/djbrut\n.. |Code size| image:: https://img.shields.io/github/languages/code-size/orsinium/django-bruteforce-protection.svg\n   :target: https://github.com/orsinium/django-bruteforce-protection\n.. |License| image:: https://img.shields.io/pypi/l/djbrut.svg\n   :target: LICENSE", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/orsinium/django-bruteforce-protection/tarball/master", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/orsinium/django-bruteforce-protection", "keywords": "djbrut django bruteforce protection security redis", "license": "GNU Lesser General Public License v3.0", "maintainer": "", "maintainer_email": "", "name": "djbrut", "package_url": "https://pypi.org/project/djbrut/", "platform": "", "project_url": "https://pypi.org/project/djbrut/", "project_urls": {"Download": "https://github.com/orsinium/django-bruteforce-protection/tarball/master", "Homepage": "https://github.com/orsinium/django-bruteforce-protection"}, "release_url": "https://pypi.org/project/djbrut/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "Framework for views in big projects on Django.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div>\n<img alt=\"DjBrut logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/388655114bc901a8aeb49270f41e805988057feb/6c6f676f2e706e67\">\n<p>DjBrut logo</p>\n</div>\n<p><a href=\"https://travis-ci.org/orsinium/django-bruteforce-protection\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5e574488e6ff933e49f002a3dec678de922d2353/68747470733a2f2f7472617669732d63692e6f72672f6f7273696e69756d2f646a616e676f2d6272757465666f7263652d70726f74656374696f6e2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/djbrut\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8b8b44241d1825fa91c421b0d14c7539fc080498/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f646a627275742e737667\"></a> <a href=\"https://pypi.python.org/pypi/djbrut\" rel=\"nofollow\"><img alt=\"Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7d3e34d6ce82d4cf097bb938cfd735cbcd653763/68747470733a2f2f696d672e736869656c64732e696f2f707970692f7374617475732f646a627275742e737667\"></a> <a href=\"https://github.com/orsinium/django-bruteforce-protection\" rel=\"nofollow\"><img alt=\"Code size\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/16eca6df34cdd118b1665625c0a57410f887ac86/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c616e6775616765732f636f64652d73697a652f6f7273696e69756d2f646a616e676f2d6272757465666f7263652d70726f74656374696f6e2e737667\"></a> <a href=\"LICENSE\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8660dd63b99f1b7342b5ef794fc487ed776239e3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f646a627275742e737667\"></a></p>\n<p>DjBrut \u2013 simple brutforce protection for Django project.</p>\n<p>Default checkers:</p>\n<ul>\n<li>Max requests for IP.</li>\n<li>Max requests for user.</li>\n<li>Max requests for one CSRF-token (stupid but effective).</li>\n<li>Max requests frequency limitation.</li>\n</ul>\n<p>DjBrut use Redis as storage for all counters.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<pre>pip install djbrut\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.http</span> <span class=\"kn\">import</span> <span class=\"n\">HttpResponse</span>\n<span class=\"kn\">from</span> <span class=\"nn\">djbrut</span> <span class=\"kn\">import</span> <span class=\"n\">Attempt</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">some_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"n\">attempt</span> <span class=\"o\">=</span> <span class=\"n\">Attempt</span><span class=\"p\">(</span><span class=\"s1\">'some rule type name'</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">)</span>\n    <span class=\"c1\"># check</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">attempt</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">():</span>\n        <span class=\"c1\"># error</span>\n        <span class=\"k\">return</span> <span class=\"n\">HttpResponse</span><span class=\"p\">(</span><span class=\"n\">attempt</span><span class=\"o\">.</span><span class=\"n\">error</span><span class=\"p\">)</span>\n    <span class=\"c1\"># success</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>You can see <a href=\"example/\" rel=\"nofollow\">example project</a> for more details.</p>\n</div>\n<div id=\"configuring\">\n<h2>Configuring</h2>\n<p>Just set up rules:</p>\n<pre><span class=\"n\">BRUTEFORCE_LIMITS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'default'</span><span class=\"p\">:</span> <span class=\"n\">Rule</span><span class=\"p\">(</span>\n        <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>       <span class=\"c1\"># max requests for one user by BRUTEFORCE_TIMELIMIT</span>\n        <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span>         <span class=\"c1\"># max requests for one IP by BRUTEFORCE_TIMELIMIT</span>\n        <span class=\"n\">csrf</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>        <span class=\"c1\"># max requests with one CSRF token by BRUTEFORCE_TIMELIMIT</span>\n        <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>         <span class=\"c1\"># max request frequency for client [seconds]</span>\n    <span class=\"p\">),</span>\n    <span class=\"s1\">'some rule type name'</span><span class=\"p\">:</span> <span class=\"n\">Rule</span><span class=\"p\">(</span>\n        <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"mi\">100</span><span class=\"p\">,</span>       <span class=\"c1\"># max requests for one user by BRUTEFORCE_TIMELIMIT</span>\n        <span class=\"n\">ip</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span>         <span class=\"c1\"># max requests for one IP by BRUTEFORCE_TIMELIMIT</span>\n        <span class=\"n\">csrf</span><span class=\"o\">=</span><span class=\"mi\">50</span><span class=\"p\">,</span>        <span class=\"c1\"># max requests with one CSRF token by BRUTEFORCE_TIMELIMIT</span>\n        <span class=\"n\">freq</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>         <span class=\"c1\"># max request frequency for client [seconds]</span>\n    <span class=\"p\">),</span>\n<span class=\"p\">}</span>\n</pre>\n<p><tt>Attempt</tt> get rule type name as first arg. If rule type name not found\nin keys of BRUTEFORCE_LIMITS, \u2018default\u2019 will be used. If you don\u2019t set\ndefault rule then passed rule type must be exists in BRUTEFORCE_LIMITS\nkeys.</p>\n<p><tt>BRUTEFORCE_TIMELIMIT</tt> \u2013 time to live for all attempts counters.</p>\n<p>You can see <a href=\"djbrut/default_settings.py\" rel=\"nofollow\">default settings</a> for more\nparams such as custom error message.</p>\n</div>\n\n          </div>"}, "last_serial": 3736933, "releases": {"0.8.0": [{"comment_text": "", "digests": {"md5": "5573fd67c02b7020fed623adf026f597", "sha256": "b6db7523bd63f918c01759a47044930292441a1978b804ada8aed3190ab50a82"}, "downloads": -1, "filename": "djbrut-0.8.0.tar.gz", "has_sig": false, "md5_digest": "5573fd67c02b7020fed623adf026f597", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6216, "upload_time": "2018-03-06T08:11:23", "upload_time_iso_8601": "2018-03-06T08:11:23.163013Z", "url": "https://files.pythonhosted.org/packages/67/75/be0e948b00bc25bfe9a1174940c855f7a10c89aed411986a92f795c2f5be/djbrut-0.8.0.tar.gz", "yanked": false}], "0.8.1": [{"comment_text": "", "digests": {"md5": "bcc39f36df2a215d237185faeddd6ac1", "sha256": "2ec6ca5f82d586e904142307037e02aecf76555b26e9846376ff73175412795a"}, "downloads": -1, "filename": "djbrut-0.8.1.tar.gz", "has_sig": false, "md5_digest": "bcc39f36df2a215d237185faeddd6ac1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7139, "upload_time": "2018-03-06T08:39:41", "upload_time_iso_8601": "2018-03-06T08:39:41.474010Z", "url": "https://files.pythonhosted.org/packages/6d/8c/df017c23eae64535d92a8d8ab3ed06ae6800fec42fb3b4313c569ad0591e/djbrut-0.8.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "da6d8ac05e4c88722e961df324f717da", "sha256": "b9dafe927e75b1718f0794d16212bde49b8e457d81c04adc8b6641218589208b"}, "downloads": -1, "filename": "djbrut-1.0.0.tar.gz", "has_sig": false, "md5_digest": "da6d8ac05e4c88722e961df324f717da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7706, "upload_time": "2018-04-05T10:22:00", "upload_time_iso_8601": "2018-04-05T10:22:00.946801Z", "url": "https://files.pythonhosted.org/packages/76/ba/f910e67250984909d7cc9dd5c501514ba66443d02ab5564e9b9137e8e4e0/djbrut-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "da6d8ac05e4c88722e961df324f717da", "sha256": "b9dafe927e75b1718f0794d16212bde49b8e457d81c04adc8b6641218589208b"}, "downloads": -1, "filename": "djbrut-1.0.0.tar.gz", "has_sig": false, "md5_digest": "da6d8ac05e4c88722e961df324f717da", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7706, "upload_time": "2018-04-05T10:22:00", "upload_time_iso_8601": "2018-04-05T10:22:00.946801Z", "url": "https://files.pythonhosted.org/packages/76/ba/f910e67250984909d7cc9dd5c501514ba66443d02ab5564e9b9137e8e4e0/djbrut-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:40 2020"}