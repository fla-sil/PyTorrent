{"info": {"author": "samstav", "author_email": "smlstvnh@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Environment :: OpenStack", "Intended Audience :: Developers", "Intended Audience :: Information Technology", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3"], "description": "Introduction\n============\n\nPBR is a library that injects some useful and sensible default behaviors\ninto your setuptools run. It started off life as the chunks of code that\nwere copied between all of the OpenStack projects. Around the time that\nOpenStack hit 18 different projects each with at least 3 active branches,\nit seems like a good time to make that code into a proper re-usable library.\n\nPBR is only mildly configurable. The basic idea is that there's a decent\nway to run things and if you do, you should reap the rewards, because then\nit's simple and repeatable. If you want to do things differently, cool! But\nyou've already got the power of python at your fingertips, so you don't\nreally need PBR.\n\nPBR builds on top of the work that `d2to1` started to provide for declarative\nconfiguration. `d2to1` is itself an implementation of the ideas behind\n`distutils2`. Although `distutils2` is now abandoned in favor of work towards\nPEP 426 and Metadata 2.0, declarative config is still a great idea and\nspecifically important in trying to distribute setup code as a library\nwhen that library itself will alter how the setup is processed. As Metadata\n2.0 and other modern Python packaging PEPs come out, `pbr` aims to support\nthem as quickly as possible.\n\nYou can read more in `the documentation`_.\n\nRunning Tests\n=============\nThe testing system is based on a combination of tox and testr. The canonical\napproach to running tests is to simply run the command `tox`. This will\ncreate virtual environments, populate them with depenedencies and run all of\nthe tests that OpenStack CI systems run. Behind the scenes, tox is running\n`testr run --parallel`, but is set up such that you can supply any additional\ntestr arguments that are needed to tox. For example, you can run:\n`tox -- --analyze-isolation` to cause tox to tell testr to add\n--analyze-isolation to its argument list.\n\nIt is also possible to run the tests inside of a virtual environment\nyou have created, or it is possible that you have all of the dependencies\ninstalled locally already. If you'd like to go this route, the requirements\nare listed in requirements.txt and the requirements for testing are in\ntest-requirements.txt. Installing them via pip, for instance, is simply::\n\n  pip install -r requirements.txt -r test-requirements.txt\n\nIn you go this route, you can interact with the testr command directly.\nRunning `testr run` will run the entire test suite. `testr run --parallel`\nwill run it in parallel (this is the default incantation tox uses.) More\ninformation about testr can be found at: http://wiki.openstack.org/testr\n\n.. _`the documentation`: http://docs.openstack.org/developer/pbr/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "pbr-samstav", "package_url": "https://pypi.org/project/pbr-samstav/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pbr-samstav/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/pbr-samstav/0.7.0.9.g22e96fe/", "requires_dist": null, "requires_python": null, "summary": "Python Build Reasonableness", "version": "0.7.0.9.g22e96fe", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>PBR is a library that injects some useful and sensible default behaviors\ninto your setuptools run. It started off life as the chunks of code that\nwere copied between all of the OpenStack projects. Around the time that\nOpenStack hit 18 different projects each with at least 3 active branches,\nit seems like a good time to make that code into a proper re-usable library.</p>\n<p>PBR is only mildly configurable. The basic idea is that there\u2019s a decent\nway to run things and if you do, you should reap the rewards, because then\nit\u2019s simple and repeatable. If you want to do things differently, cool! But\nyou\u2019ve already got the power of python at your fingertips, so you don\u2019t\nreally need PBR.</p>\n<p>PBR builds on top of the work that <cite>d2to1</cite> started to provide for declarative\nconfiguration. <cite>d2to1</cite> is itself an implementation of the ideas behind\n<cite>distutils2</cite>. Although <cite>distutils2</cite> is now abandoned in favor of work towards\nPEP 426 and Metadata 2.0, declarative config is still a great idea and\nspecifically important in trying to distribute setup code as a library\nwhen that library itself will alter how the setup is processed. As Metadata\n2.0 and other modern Python packaging PEPs come out, <cite>pbr</cite> aims to support\nthem as quickly as possible.</p>\n<p>You can read more in <a href=\"http://docs.openstack.org/developer/pbr/\" rel=\"nofollow\">the documentation</a>.</p>\n</div>\n<div id=\"running-tests\">\n<h2>Running Tests</h2>\n<p>The testing system is based on a combination of tox and testr. The canonical\napproach to running tests is to simply run the command <cite>tox</cite>. This will\ncreate virtual environments, populate them with depenedencies and run all of\nthe tests that OpenStack CI systems run. Behind the scenes, tox is running\n<cite>testr run \u2013parallel</cite>, but is set up such that you can supply any additional\ntestr arguments that are needed to tox. For example, you can run:\n<cite>tox \u2013 \u2013analyze-isolation</cite> to cause tox to tell testr to add\n\u2013analyze-isolation to its argument list.</p>\n<p>It is also possible to run the tests inside of a virtual environment\nyou have created, or it is possible that you have all of the dependencies\ninstalled locally already. If you\u2019d like to go this route, the requirements\nare listed in requirements.txt and the requirements for testing are in\ntest-requirements.txt. Installing them via pip, for instance, is simply:</p>\n<pre>pip install -r requirements.txt -r test-requirements.txt\n</pre>\n<p>In you go this route, you can interact with the testr command directly.\nRunning <cite>testr run</cite> will run the entire test suite. <cite>testr run \u2013parallel</cite>\nwill run it in parallel (this is the default incantation tox uses.) More\ninformation about testr can be found at: <a href=\"http://wiki.openstack.org/testr\" rel=\"nofollow\">http://wiki.openstack.org/testr</a></p>\n</div>\n\n          </div>"}, "last_serial": 1045609, "releases": {"0.7.0.9.g22e96fe": [{"comment_text": "", "digests": {"md5": "40c545555dbaa1100a0394acab618e82", "sha256": "89bd90dbe20d6e589fd1249e889f5cafb946619eb83f7f5c30fb6ca1e9a6b4a1"}, "downloads": -1, "filename": "pbr-samstav-0.7.0.9.g22e96fe.tar.gz", "has_sig": false, "md5_digest": "40c545555dbaa1100a0394acab618e82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78241, "upload_time": "2014-03-29T19:54:56", "upload_time_iso_8601": "2014-03-29T19:54:56.425273Z", "url": "https://files.pythonhosted.org/packages/98/84/bef9b966510ec7d73938d54072a8c9390519ed24a5f9ccf4306c40b7f01e/pbr-samstav-0.7.0.9.g22e96fe.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "40c545555dbaa1100a0394acab618e82", "sha256": "89bd90dbe20d6e589fd1249e889f5cafb946619eb83f7f5c30fb6ca1e9a6b4a1"}, "downloads": -1, "filename": "pbr-samstav-0.7.0.9.g22e96fe.tar.gz", "has_sig": false, "md5_digest": "40c545555dbaa1100a0394acab618e82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78241, "upload_time": "2014-03-29T19:54:56", "upload_time_iso_8601": "2014-03-29T19:54:56.425273Z", "url": "https://files.pythonhosted.org/packages/98/84/bef9b966510ec7d73938d54072a8c9390519ed24a5f9ccf4306c40b7f01e/pbr-samstav-0.7.0.9.g22e96fe.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:33 2020"}