{"info": {"author": "Pedro Gomes", "author_email": "pgomes92@gmail.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: Science/Research", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "![Image](./SampleFigures/pyhrv.png)\n\n![GitHub Version](https://img.shields.io/badge/GitHub-v.0.4.0-orange.svg)\n[![PyPi Version](https://img.shields.io/pypi/v/pyhrv.svg)](https://pypi.org/project/pyhrv/)\n![Python Versions](https://img.shields.io/pypi/pyversions/pyhrv.svg)\n[![Issues](https://img.shields.io/github/issues/PGomes92/pyhrv.svg)](https://github.com/PGomes92/pyhrv/issues)\n![Development](https://img.shields.io/badge/development-active-green.svg)\n[![Documentation Status](https://readthedocs.org/projects/pyhrv/badge/?version=latest)](https://pyhrv.readthedocs.io/en/latest/)\n![Downloads](https://img.shields.io/pypi/dm/pyhrv.svg)\n![License](https://img.shields.io/pypi/l/pyhrv.svg)\n\npyHRV is an open-source Python toolbox that computes state-of-the-art Heart Rate Variability (HRV) parameters from Electrocardiography (ECG), SpO2, Blood Volume Pulse (BVP), or other signals with heart rate indicators.\n\nWith pyHRV, we aim to provide a user-friendly and versatile Python toolbox for HRV dedicated education, research, and application development.\n\nIt provides provides comprehensible source code to help beginners understand the fundamentals of HRV parameter computation, while providing the most important HRV analysis functionalities for developers and publication-quality plots of the results for researchers.\n# Getting Started\n\n### Installation\nThis toolbox can be installed using the ```pip``` tool (works for Python 2 and 3):\n\n```python\npip install pyhrv\n```\n\nDependencies: [biosppy](https://github.com/PIA-Group/BioSPPy) | [numpy](http://www.numpy.org) | [scipy](http://scipy.org) | [matplotlib](https://matplotlib.org) | [nolds](https://github.com/CSchoel/nolds) | [spectrum](https://github.com/cokelaer/spectrum)\n\n### Documentation & Tutorials\nDetailed pyHRV documentation is available on ReadTheDocs:\n\n[pyHRV API Reference](https://pyhrv.readthedocs.io)\n\nAdditional tutorials can be found here:\n\n- [pyHRV Quickstart Guide](./pyhrv/README.md)\n\n- [Tutorial: From ECG acquisition to HRV analysis with pyHRV](https://pyhrv.readthedocs.io/en/latest/_pages/tutorials/bitalino.html)\n\n- [Tutorial: Bulk processing with pyHRV](https://pyhrv.readthedocs.io/en/latest/_pages/tutorials/bulk.html)\n\n### Scientific Background\nThe HRV algorithms have been developed and implemented according to the [Heart Rate Variability - Sandards of \nMeasurement, Physiological Interpretation, and Clinical Use Guidelines](https://www.ahajournals.org/doi/full/10.1161/01.CIR.93.5.1043). Other references are noted in the code and in the [pyHRV references](./pyhrv/files/references.txt).\n\n### Citing pyHRV\nPlease use the following conference paper to cite pyHRV in your work ([Conference Paper [PDF]](https://drive.google.com/open?id=1enItjdVXkTYX_h2DkgDl2v8vXAe09QJv), [Conference Proceedings [PDF]](https://etran.rs/2019/Proceedings_IcETRAN_ETRAN_2019.pdf)):\n\n*P. Gomes, P. Margaritoff, and H. P. da Silva, \u201cpyHRV: Development and evaluation of an open-source python toolbox for\n heart rate variability (HRV),\u201d in Proc. Int\u2019l Conf. on Electrical, Electronic and Computing Engineering (IcETRAN), pp. 822-828, 2019*\n\n```latex\n@inproceedings{Gomes2019,\n   author = {Gomes, Pedro and Margaritoff, Petra and Silva, Hugo},\n   booktitle = {Proc. Int'l Conf. on Electrical, Electronic and Computing Engineering (IcETRAN)},\n   pages = {822-828},\n   title = {{pyHRV: Development and evaluation of an open-source python toolbox for heart rate variability (HRV)}},\n   year = {2019}\n}\n```\n\n# pyHRV Core Features & HRV Parameter List\n\nWith pyHRV, you can compute up to 78 HRV parameters while using other useful non-parameter-specific tools to support \nyour HRV research.\n\n### Time Domain Parameters\n\n- Basic statistical parameters of a NNI series - ```pyhrv.time_domain.nni_parameters()``` \n- Basic statistical parameters of a \u0394NNI series - ```pyhrv.time_domain.nni_differences_parameters()```\n- Basic statistical parameters of a Heart Rate (HR) series - ```pyhrv.time_domain.hr_parameters()``` \n- Standard deviation of a NNI series (SDNN) - ```pyhrv.time_domain.sdnn()``` \n- Mean of the SDNN of 5 successive 5 minute segments extracted from long-term NNI series (SDNN<sub>index</sub>)- ```pyhrv.time_domain.sdnn_index()``` \n- Standard deviation of the mean of 5 minute segments extracted from long-term NNI series (SDANN) - ```pyhrv.time_domain.sdann()``` \n- Root mean square of successive difference (RMSSD) - ```pyhrv.time_domain.rmssd()``` \n- Standard deviation of successive differences (SDSD) - ```pyhrv.time_domain.sdsd()``` \n- NNx & pNNx parameters - ```pyhrv.time_domain.nnXX()``` \n- NN20 & pNN20 parameters - ```pyhrv.time_domain.nn20()``` \n- NN50 & pNN50 parameters - ```pyhrv.time_domain.nn50()``` \n- Triangular Index (Maximum of the Histogram / Width of the Histogram) - ```pyhrv.time_domain.triangular_index()``` \n- Triangular Interpolation Function (TINN)<sup>1</sup> - ```pyhrv.time_domain.tinn()```\n\n<sup><sup>1</sup> the current version of pyHRV has some bug which causes misleading and false results for the TINN \nfunction. [An issue has already been opened for this purpose...](https://github.com/PGomes92/pyhrv/issues/5)\n\n![Image](./SampleFigures/SampleHistogram.png)\n\n\n### Frequency Domain Parameters\nComputes the following Frequency Domain parameters from the Power Spectral Density (PSD) of a NNI series computed \nusing the following PSD methods:\n\n- Welch's Method - ```pyhrv.frequency_domain.welch_psd()```\n- Autoregressive - ```pyhrv.frequency_domain.ar_psd()```\n- Lomb-Scargle - ```pyhrv.frequency_domain.lomb_psd()```\n\nFrequency parameters:\n- Peak Frequencies\n- Absolute Powers\n- Logarithmic Powers\n- Relative Powers\n- Normalized Powers (LF and HF only)\n- LF/HF ratio\n\nThe parameters are computed for the Very Low Frequency (VLF), Low Frequency (LF), and High Frequency (HF) bands. The \nFrequency Bands can be customized, including an Ultra Low Frequency (ULF) band.\n\nSample plots of the resulting PSD plots and Frequency Domain parameters using pyHRV can be seen below:\n\n![Image](./SampleFigures/SampleWelch.png)\n![Image](./SampleFigures/SampleAR.png)\n![Image](./SampleFigures/SampleLomb.png)\n\n#### PSD Comparison Features - 2D Comparison Plot\nPlot PSDs from multiple NNI segments extracted from a NNI series (e.g. 5 minute segments of a 60 minute recording) in a 3D Waterfall Plot using the Welch, Autoregressive or Lomb-Scargle method and compute the Frequency Domain parameters from each segment - ```pyhrv.frequency_domain.psd_comparison()``` [[source](https://github.com/PGomes92/pyhrv/blob/b5c5baaa8bf1ad085dc2dfe46b477171fe153682/pyhrv/frequency_domain.py#L970)].\n\n![Image](./SampleFigures/SamplePSDComparisonWelch.png)\n![Image](./SampleFigures/SamplePSDComparisonAR.png)\n![Image](./SampleFigures/SamplePSDComparisonLomb.png)\n\n#### PSD Comparison Features - 3D Waterfall Plot\nPlot PSDs from multiple NNI segments extracted from a NNI series (e.g. 5 minute segments of a 60 minute recording) in a single plot using the Welch, Autoregressive or Lomb-Scargle method and compute the Frequency Domain parameters from each segment - ```pyhrv.frequency_domain.psd_waterfall()```\n\n![Image](./SampleFigures/SamplePSDWaterfallWelch.png)\n![Image](./SampleFigures/SamplePSDWaterfallAR.png)\n![Image](./SampleFigures/SamplePSDWaterfallLomb.png)\n\n## Nonlinear Parameters\nComputes the following Nonlinear Parameters and the respective plots:\n\n- Poincar\u00e9 Plot (SD1, SD2, fittes ellipse area, SD2/SD1 ratio) - ```pyhrv.nonlinear.poincare()```\n- Sample Entropy - ```pyhrv.nonlinear.sample_entropy()```\n- Detrended Fluctuation Analysis (short-term and long-term)- ```pyhrv.nonlinear.dfa()```\n\n![Image](./SampleFigures/SampleNonlinear.png)\n\n\n## HRV Support Tools & Other Features\n\n- Computation of NNI series - ```pyhrv.tools.nn_intervals()``` \n- Computation of \u2206NNI series - ```pyhrv.tools.nn_diff()```\n- Computation of HR series - ```pyhrv.tools.heart_rate()``` \n- ECG plotting on medical-grade-like ECG paper layout - ```pyhrv.tools.plot_ecg()``` \n- NNI Tachogram plotting - ```pyhrv.tools.tachogram()```\n- Heart Rate Heatplot, a visualization & classification of HR performance based on normal HR ranges by age and gender- ```pyhrv.tools.heart_rate_heatplot()```\n- Time varying plot of a HRV parameter over time - ```pyhrv.tools.time_varying()```\n- Dynamic Radar chart of HRV parameters - ```pyhrv.tools.radar_chart()```\n- Exporting HRV results into a JSON file [Sample File](./pyhrv/files/SampleExport.json)- ```pyhrv.tools.hrv_export()``` \n\n![Image](./SampleFigures/SampleECG.png)\n![Image](./SampleFigures/SampleTachogram.png)\n![Image](./SampleFigures/SampleHRHeatplot1.png)\n![Image](./SampleFigures/SampleRadarChart5.png)\n![Image](./SampleFigures/SampleRadarChart8.png)\n\n## HRV Reports\nGenerate HRV reports in .TXT, .CSV, and .PDF format (new in v.0.4!). Read the [README](./pyhrv/report/README.md) file of the pyHRV report submodule for more information about how to generate pyHRV reports as the following:\n\n- [pyHRV .TXT report](./pyhrv/files/SampleReport.txt)\n- [pyHRV .CSV report](./pyhrv/files/SampleReport.csv)\n- [pyHRV .PDF report](./pyhrv/files/SampleReport.pdf)\n\n\n## Utilities\nSeveral non-HRV specific utilities and general purpose functions which are used throughout this toolbox:\n- Loading NNI sample series for testing purposes - ```pyhrv.utils.load_sample_nni()```\n- Loading pyHRV's [hrv_keys.json](./pyhrv/files/hrv_keys.json) file - ```pyhrv.utils.load_hrv_keys_json()```\n- Format NNI series (ensure numpy array and convert data provided in seconds to ms - ```pyhrv.utils.nn_format()```\n- Segmentation of time series (e.g. NNI series) - ```pyhrv.utils.segmentation()```\n- and others...\n\n# Disclaimer\nThis program is distributed in the hope it will be useful and provided to you \"as is\", but WITHOUT ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. This program is NOT intended for medical diagnosis. We expressly disclaim any liability whatsoever for any direct, indirect, consequential, incidental or special damages, including, without limitation, lost revenues, lost profits, losses resulting from business interruption or loss of data, regardless of the form of action or legal theory under which the liability may be asserted, even if advised of the possibility of such damages.\n\nThis package has initially (up to version 0.3) been developed within the scope of my master thesis _\"Development of an \nOpen-Source Python Toolbox for Heart Rate Variability (HRV)\"_ at the [University of Applied Sciences Hamburg, Germany (Faculty Life Sciences, Department of Biomedical Engineering)](https://www.haw-hamburg.de/fakultaeten-und-departments/ls/studium-und-lehre/master-studiengaenge/mbme.html) and [PLUX wireless biosignals, S.A.](http://www.plux.info), Lisbon, Portugal.\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/PGomes92/pyhrv", "keywords": "Heart Rate Variability,HRV", "license": "", "maintainer": "", "maintainer_email": "", "name": "pyhrv", "package_url": "https://pypi.org/project/pyhrv/", "platform": "", "project_url": "https://pypi.org/project/pyhrv/", "project_urls": {"Homepage": "https://github.com/PGomes92/pyhrv"}, "release_url": "https://pypi.org/project/pyhrv/0.4.0/", "requires_dist": ["biosppy", "matplotlib", "numpy", "scipy", "nolds", "spectrum"], "requires_python": ">=2.7", "summary": "Python toolbox for Heart Rate Variability.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d236c6f1c6cb9c869edb894f718aff7e650562ae/2e2f53616d706c65466967757265732f70796872762e706e67\"></p>\n<p><img alt=\"GitHub Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/231d5bebe1d0c258ac3db5c774871b9adb60486d/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4769744875622d762e302e342e302d6f72616e67652e737667\">\n<a href=\"https://pypi.org/project/pyhrv/\" rel=\"nofollow\"><img alt=\"PyPi Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0655e951fa6a6da22b40fff2365110ae19f6d4b/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70796872762e737667\"></a>\n<img alt=\"Python Versions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbadd3419b6f9554bfe850a19daab5f4db6d6291/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f70796872762e737667\">\n<a href=\"https://github.com/PGomes92/pyhrv/issues\" rel=\"nofollow\"><img alt=\"Issues\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/69f41facf94701a1a59d967e479352cb9d97b370/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6973737565732f50476f6d657339322f70796872762e737667\"></a>\n<img alt=\"Development\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed12596b35dafa80d38bb993ed789c3f1d64639a/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646576656c6f706d656e742d6163746976652d677265656e2e737667\">\n<a href=\"https://pyhrv.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7aaaaf714b8ac72382842e2e02ace3dc1b1e2daa/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70796872762f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bea21a4ed9e84e30586df110f04520f22e8f750/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70796872762e737667\">\n<img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c528a2d31e20e0d78906c7dc5559ce09bd5adae8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f70796872762e737667\"></p>\n<p>pyHRV is an open-source Python toolbox that computes state-of-the-art Heart Rate Variability (HRV) parameters from Electrocardiography (ECG), SpO2, Blood Volume Pulse (BVP), or other signals with heart rate indicators.</p>\n<p>With pyHRV, we aim to provide a user-friendly and versatile Python toolbox for HRV dedicated education, research, and application development.</p>\n<p>It provides provides comprehensible source code to help beginners understand the fundamentals of HRV parameter computation, while providing the most important HRV analysis functionalities for developers and publication-quality plots of the results for researchers.</p>\n<h1>Getting Started</h1>\n<h3>Installation</h3>\n<p>This toolbox can be installed using the <code>pip</code> tool (works for Python 2 and 3):</p>\n<pre><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">pyhrv</span>\n</pre>\n<p>Dependencies: <a href=\"https://github.com/PIA-Group/BioSPPy\" rel=\"nofollow\">biosppy</a> | <a href=\"http://www.numpy.org\" rel=\"nofollow\">numpy</a> | <a href=\"http://scipy.org\" rel=\"nofollow\">scipy</a> | <a href=\"https://matplotlib.org\" rel=\"nofollow\">matplotlib</a> | <a href=\"https://github.com/CSchoel/nolds\" rel=\"nofollow\">nolds</a> | <a href=\"https://github.com/cokelaer/spectrum\" rel=\"nofollow\">spectrum</a></p>\n<h3>Documentation &amp; Tutorials</h3>\n<p>Detailed pyHRV documentation is available on ReadTheDocs:</p>\n<p><a href=\"https://pyhrv.readthedocs.io\" rel=\"nofollow\">pyHRV API Reference</a></p>\n<p>Additional tutorials can be found here:</p>\n<ul>\n<li>\n<p><a href=\"./pyhrv/README.md\" rel=\"nofollow\">pyHRV Quickstart Guide</a></p>\n</li>\n<li>\n<p><a href=\"https://pyhrv.readthedocs.io/en/latest/_pages/tutorials/bitalino.html\" rel=\"nofollow\">Tutorial: From ECG acquisition to HRV analysis with pyHRV</a></p>\n</li>\n<li>\n<p><a href=\"https://pyhrv.readthedocs.io/en/latest/_pages/tutorials/bulk.html\" rel=\"nofollow\">Tutorial: Bulk processing with pyHRV</a></p>\n</li>\n</ul>\n<h3>Scientific Background</h3>\n<p>The HRV algorithms have been developed and implemented according to the <a href=\"https://www.ahajournals.org/doi/full/10.1161/01.CIR.93.5.1043\" rel=\"nofollow\">Heart Rate Variability - Sandards of\nMeasurement, Physiological Interpretation, and Clinical Use Guidelines</a>. Other references are noted in the code and in the <a href=\"./pyhrv/files/references.txt\" rel=\"nofollow\">pyHRV references</a>.</p>\n<h3>Citing pyHRV</h3>\n<p>Please use the following conference paper to cite pyHRV in your work (<a href=\"https://drive.google.com/open?id=1enItjdVXkTYX_h2DkgDl2v8vXAe09QJv\" rel=\"nofollow\">Conference Paper [PDF]</a>, <a href=\"https://etran.rs/2019/Proceedings_IcETRAN_ETRAN_2019.pdf\" rel=\"nofollow\">Conference Proceedings [PDF]</a>):</p>\n<p><em>P. Gomes, P. Margaritoff, and H. P. da Silva, \u201cpyHRV: Development and evaluation of an open-source python toolbox for\nheart rate variability (HRV),\u201d in Proc. Int\u2019l Conf. on Electrical, Electronic and Computing Engineering (IcETRAN), pp. 822-828, 2019</em></p>\n<pre>@inproceedings<span class=\"nb\">{</span>Gomes2019,\n   author = <span class=\"nb\">{</span>Gomes, Pedro and Margaritoff, Petra and Silva, Hugo<span class=\"nb\">}</span>,\n   booktitle = <span class=\"nb\">{</span>Proc. Int'l Conf. on Electrical, Electronic and Computing Engineering (IcETRAN)<span class=\"nb\">}</span>,\n   pages = <span class=\"nb\">{</span>822-828<span class=\"nb\">}</span>,\n   title = <span class=\"nb\">{{</span>pyHRV: Development and evaluation of an open-source python toolbox for heart rate variability (HRV)<span class=\"nb\">}}</span>,\n   year = <span class=\"nb\">{</span>2019<span class=\"nb\">}</span>\n<span class=\"nb\">}</span>\n</pre>\n<h1>pyHRV Core Features &amp; HRV Parameter List</h1>\n<p>With pyHRV, you can compute up to 78 HRV parameters while using other useful non-parameter-specific tools to support\nyour HRV research.</p>\n<h3>Time Domain Parameters</h3>\n<ul>\n<li>Basic statistical parameters of a NNI series - <code>pyhrv.time_domain.nni_parameters()</code></li>\n<li>Basic statistical parameters of a \u0394NNI series - <code>pyhrv.time_domain.nni_differences_parameters()</code></li>\n<li>Basic statistical parameters of a Heart Rate (HR) series - <code>pyhrv.time_domain.hr_parameters()</code></li>\n<li>Standard deviation of a NNI series (SDNN) - <code>pyhrv.time_domain.sdnn()</code></li>\n<li>Mean of the SDNN of 5 successive 5 minute segments extracted from long-term NNI series (SDNN<sub>index</sub>)- <code>pyhrv.time_domain.sdnn_index()</code></li>\n<li>Standard deviation of the mean of 5 minute segments extracted from long-term NNI series (SDANN) - <code>pyhrv.time_domain.sdann()</code></li>\n<li>Root mean square of successive difference (RMSSD) - <code>pyhrv.time_domain.rmssd()</code></li>\n<li>Standard deviation of successive differences (SDSD) - <code>pyhrv.time_domain.sdsd()</code></li>\n<li>NNx &amp; pNNx parameters - <code>pyhrv.time_domain.nnXX()</code></li>\n<li>NN20 &amp; pNN20 parameters - <code>pyhrv.time_domain.nn20()</code></li>\n<li>NN50 &amp; pNN50 parameters - <code>pyhrv.time_domain.nn50()</code></li>\n<li>Triangular Index (Maximum of the Histogram / Width of the Histogram) - <code>pyhrv.time_domain.triangular_index()</code></li>\n<li>Triangular Interpolation Function (TINN)<sup>1</sup> - <code>pyhrv.time_domain.tinn()</code></li>\n</ul>\n<p><sup><sup>1</sup> the current version of pyHRV has some bug which causes misleading and false results for the TINN\nfunction. <a href=\"https://github.com/PGomes92/pyhrv/issues/5\" rel=\"nofollow\">An issue has already been opened for this purpose...</a></sup></p>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1c3bca2648fde35dd22957c5263e8d0fae697b24/2e2f53616d706c65466967757265732f53616d706c65486973746f6772616d2e706e67\"></p>\n<h3>Frequency Domain Parameters</h3>\n<p>Computes the following Frequency Domain parameters from the Power Spectral Density (PSD) of a NNI series computed\nusing the following PSD methods:</p>\n<ul>\n<li>Welch's Method - <code>pyhrv.frequency_domain.welch_psd()</code></li>\n<li>Autoregressive - <code>pyhrv.frequency_domain.ar_psd()</code></li>\n<li>Lomb-Scargle - <code>pyhrv.frequency_domain.lomb_psd()</code></li>\n</ul>\n<p>Frequency parameters:</p>\n<ul>\n<li>Peak Frequencies</li>\n<li>Absolute Powers</li>\n<li>Logarithmic Powers</li>\n<li>Relative Powers</li>\n<li>Normalized Powers (LF and HF only)</li>\n<li>LF/HF ratio</li>\n</ul>\n<p>The parameters are computed for the Very Low Frequency (VLF), Low Frequency (LF), and High Frequency (HF) bands. The\nFrequency Bands can be customized, including an Ultra Low Frequency (ULF) band.</p>\n<p>Sample plots of the resulting PSD plots and Frequency Domain parameters using pyHRV can be seen below:</p>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/afab25d2e3a88976133263cbbe1d7ae12e89f09f/2e2f53616d706c65466967757265732f53616d706c6557656c63682e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6923ea0bb3d6fa562703182f1098e3e984f0eb8/2e2f53616d706c65466967757265732f53616d706c6541522e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4758b6a62d54bf397be7aeb1cd4c9b0ded03ae5b/2e2f53616d706c65466967757265732f53616d706c654c6f6d622e706e67\"></p>\n<h4>PSD Comparison Features - 2D Comparison Plot</h4>\n<p>Plot PSDs from multiple NNI segments extracted from a NNI series (e.g. 5 minute segments of a 60 minute recording) in a 3D Waterfall Plot using the Welch, Autoregressive or Lomb-Scargle method and compute the Frequency Domain parameters from each segment - <code>pyhrv.frequency_domain.psd_comparison()</code> [<a href=\"https://github.com/PGomes92/pyhrv/blob/b5c5baaa8bf1ad085dc2dfe46b477171fe153682/pyhrv/frequency_domain.py#L970\" rel=\"nofollow\">source</a>].</p>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/574c0c167a2126b8a300f0539c1900ede1f9bc2e/2e2f53616d706c65466967757265732f53616d706c65505344436f6d70617269736f6e57656c63682e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7afff304134a841f4175c661645dd7aa3c715a9d/2e2f53616d706c65466967757265732f53616d706c65505344436f6d70617269736f6e41522e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9f3ebc0043c7d5fa8bb7b262095a2cf4d1c0e5d1/2e2f53616d706c65466967757265732f53616d706c65505344436f6d70617269736f6e4c6f6d622e706e67\"></p>\n<h4>PSD Comparison Features - 3D Waterfall Plot</h4>\n<p>Plot PSDs from multiple NNI segments extracted from a NNI series (e.g. 5 minute segments of a 60 minute recording) in a single plot using the Welch, Autoregressive or Lomb-Scargle method and compute the Frequency Domain parameters from each segment - <code>pyhrv.frequency_domain.psd_waterfall()</code></p>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c303a38fd3bb86c464ff66359f8aa96935fbd188/2e2f53616d706c65466967757265732f53616d706c65505344576174657266616c6c57656c63682e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f25b887c5bfb521aafce62fe25438b1f3f16ac94/2e2f53616d706c65466967757265732f53616d706c65505344576174657266616c6c41522e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/19a474f925b341d1b152fd77577fcfb372081f92/2e2f53616d706c65466967757265732f53616d706c65505344576174657266616c6c4c6f6d622e706e67\"></p>\n<h2>Nonlinear Parameters</h2>\n<p>Computes the following Nonlinear Parameters and the respective plots:</p>\n<ul>\n<li>Poincar\u00e9 Plot (SD1, SD2, fittes ellipse area, SD2/SD1 ratio) - <code>pyhrv.nonlinear.poincare()</code></li>\n<li>Sample Entropy - <code>pyhrv.nonlinear.sample_entropy()</code></li>\n<li>Detrended Fluctuation Analysis (short-term and long-term)- <code>pyhrv.nonlinear.dfa()</code></li>\n</ul>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c9ad94672f05f33fce0f9165faea3586d511602e/2e2f53616d706c65466967757265732f53616d706c654e6f6e6c696e6561722e706e67\"></p>\n<h2>HRV Support Tools &amp; Other Features</h2>\n<ul>\n<li>Computation of NNI series - <code>pyhrv.tools.nn_intervals()</code></li>\n<li>Computation of \u2206NNI series - <code>pyhrv.tools.nn_diff()</code></li>\n<li>Computation of HR series - <code>pyhrv.tools.heart_rate()</code></li>\n<li>ECG plotting on medical-grade-like ECG paper layout - <code>pyhrv.tools.plot_ecg()</code></li>\n<li>NNI Tachogram plotting - <code>pyhrv.tools.tachogram()</code></li>\n<li>Heart Rate Heatplot, a visualization &amp; classification of HR performance based on normal HR ranges by age and gender- <code>pyhrv.tools.heart_rate_heatplot()</code></li>\n<li>Time varying plot of a HRV parameter over time - <code>pyhrv.tools.time_varying()</code></li>\n<li>Dynamic Radar chart of HRV parameters - <code>pyhrv.tools.radar_chart()</code></li>\n<li>Exporting HRV results into a JSON file <a href=\"./pyhrv/files/SampleExport.json\" rel=\"nofollow\">Sample File</a>- <code>pyhrv.tools.hrv_export()</code></li>\n</ul>\n<p><img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/318f0fa69bb6242f6526c9e87ccc7f8ee4a192cd/2e2f53616d706c65466967757265732f53616d706c654543472e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d181a2a6a6328376270eb8971bc3f038342e7de7/2e2f53616d706c65466967757265732f53616d706c65546163686f6772616d2e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d98467e352e4762e7fbf07982bacffd1173b4d6d/2e2f53616d706c65466967757265732f53616d706c65485248656174706c6f74312e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0e0e791d4f4a400e7c7d9fa83c1a5b3f8ec9c978/2e2f53616d706c65466967757265732f53616d706c6552616461724368617274352e706e67\">\n<img alt=\"Image\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a052b233a0ef6456a7f9ace6bad8692542bc82d2/2e2f53616d706c65466967757265732f53616d706c6552616461724368617274382e706e67\"></p>\n<h2>HRV Reports</h2>\n<p>Generate HRV reports in .TXT, .CSV, and .PDF format (new in v.0.4!). Read the <a href=\"./pyhrv/report/README.md\" rel=\"nofollow\">README</a> file of the pyHRV report submodule for more information about how to generate pyHRV reports as the following:</p>\n<ul>\n<li><a href=\"./pyhrv/files/SampleReport.txt\" rel=\"nofollow\">pyHRV .TXT report</a></li>\n<li><a href=\"./pyhrv/files/SampleReport.csv\" rel=\"nofollow\">pyHRV .CSV report</a></li>\n<li><a href=\"./pyhrv/files/SampleReport.pdf\" rel=\"nofollow\">pyHRV .PDF report</a></li>\n</ul>\n<h2>Utilities</h2>\n<p>Several non-HRV specific utilities and general purpose functions which are used throughout this toolbox:</p>\n<ul>\n<li>Loading NNI sample series for testing purposes - <code>pyhrv.utils.load_sample_nni()</code></li>\n<li>Loading pyHRV's <a href=\"./pyhrv/files/hrv_keys.json\" rel=\"nofollow\">hrv_keys.json</a> file - <code>pyhrv.utils.load_hrv_keys_json()</code></li>\n<li>Format NNI series (ensure numpy array and convert data provided in seconds to ms - <code>pyhrv.utils.nn_format()</code></li>\n<li>Segmentation of time series (e.g. NNI series) - <code>pyhrv.utils.segmentation()</code></li>\n<li>and others...</li>\n</ul>\n<h1>Disclaimer</h1>\n<p>This program is distributed in the hope it will be useful and provided to you \"as is\", but WITHOUT ANY WARRANTY, without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. This program is NOT intended for medical diagnosis. We expressly disclaim any liability whatsoever for any direct, indirect, consequential, incidental or special damages, including, without limitation, lost revenues, lost profits, losses resulting from business interruption or loss of data, regardless of the form of action or legal theory under which the liability may be asserted, even if advised of the possibility of such damages.</p>\n<p>This package has initially (up to version 0.3) been developed within the scope of my master thesis <em>\"Development of an\nOpen-Source Python Toolbox for Heart Rate Variability (HRV)\"</em> at the <a href=\"https://www.haw-hamburg.de/fakultaeten-und-departments/ls/studium-und-lehre/master-studiengaenge/mbme.html\" rel=\"nofollow\">University of Applied Sciences Hamburg, Germany (Faculty Life Sciences, Department of Biomedical Engineering)</a> and <a href=\"http://www.plux.info\" rel=\"nofollow\">PLUX wireless biosignals, S.A.</a>, Lisbon, Portugal.</p>\n\n          </div>"}, "last_serial": 6127100, "releases": {"0.2": [{"comment_text": "", "digests": {"md5": "50283b4ee6f771b61ddb9c72ec47ea72", "sha256": "de2d047f0d85c66a912bc93a354a0d92ea577dd5b98e8b0065ced2494ee5e766"}, "downloads": -1, "filename": "pyhrv-0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "50283b4ee6f771b61ddb9c72ec47ea72", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7.10", "size": 40363, "upload_time": "2018-10-20T00:17:44", "upload_time_iso_8601": "2018-10-20T00:17:44.453696Z", "url": "https://files.pythonhosted.org/packages/6d/43/040aba4fba1d5bf1f98afccdc35d6db3607d3d318badd254f854f1b8526d/pyhrv-0.2-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1350a963eb9fa32d64f5f169a148a1a9", "sha256": "532c04dcbb1ec98c0afb5fc7b4c4bc00f9bb43a070db74e1d60ea373622ac8c4"}, "downloads": -1, "filename": "pyhrv-0.2.tar.gz", "has_sig": false, "md5_digest": "1350a963eb9fa32d64f5f169a148a1a9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.10", "size": 36355, "upload_time": "2018-10-20T00:17:46", "upload_time_iso_8601": "2018-10-20T00:17:46.731361Z", "url": "https://files.pythonhosted.org/packages/e2/22/912a2c4e4bbe4a301fd921e5607b72c48a300309b01e3cc04d95317dff13/pyhrv-0.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "850885bfd4792123546bab8e3bb8245b", "sha256": "f25ba93a90af6364e9d9774cc6f5da948dfd9a43566565d521561c030debcbef"}, "downloads": -1, "filename": "pyhrv-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "850885bfd4792123546bab8e3bb8245b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7.10", "size": 1731275, "upload_time": "2018-11-24T14:33:16", "upload_time_iso_8601": "2018-11-24T14:33:16.905027Z", "url": "https://files.pythonhosted.org/packages/7b/af/4deaca5ed310bbd237851ebbd2c804d6772a329d24c9e99a57307bad75e4/pyhrv-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e22c4d0658a9e05639c7030d4a8f24cc", "sha256": "9e068ccdb8f38e357e713745f967a7f3b97faeb66574799ee7dd6bdcf2055b4a"}, "downloads": -1, "filename": "pyhrv-0.3.0.tar.gz", "has_sig": false, "md5_digest": "e22c4d0658a9e05639c7030d4a8f24cc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7.10", "size": 41024, "upload_time": "2018-11-24T14:33:18", "upload_time_iso_8601": "2018-11-24T14:33:18.965401Z", "url": "https://files.pythonhosted.org/packages/c4/1e/799064547d23beb49466d41697bcd02cd1879e98c7742eff38a3f9899906/pyhrv-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0d54d72e4a715c83d1dd409e8e4d2761", "sha256": "72eb12bdca8a953f6007fdc3f1e4673dcb7ec2227b9997ac3621d2558b4959ba"}, "downloads": -1, "filename": "pyhrv-0.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0d54d72e4a715c83d1dd409e8e4d2761", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 1731286, "upload_time": "2019-01-22T15:21:54", "upload_time_iso_8601": "2019-01-22T15:21:54.555745Z", "url": "https://files.pythonhosted.org/packages/43/2f/92c6897d39a99bfb09ff2c59b013012bb201ccf241c7dcf5f5c9dd099ed4/pyhrv-0.3.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a787142f804cdff9406fa33ed737a49", "sha256": "ae1676e67275a1f26bc0488888b3b1362f788fbce6614262a618d1243b3ba89b"}, "downloads": -1, "filename": "pyhrv-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9a787142f804cdff9406fa33ed737a49", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 41363, "upload_time": "2019-01-22T15:21:56", "upload_time_iso_8601": "2019-01-22T15:21:56.909167Z", "url": "https://files.pythonhosted.org/packages/fa/04/cdaa37c162faa6d1ceb3a060c7918838664380ee5594b28a070176b1cabc/pyhrv-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "884a9270e1801f1f454eede4be01052d", "sha256": "5968cb7dab111aee1aae4a18090d161cb5610166be58e63233685aa6da84668f"}, "downloads": -1, "filename": "pyhrv-0.3.2-py3-none-any.whl", "has_sig": false, "md5_digest": "884a9270e1801f1f454eede4be01052d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 1733706, "upload_time": "2019-02-01T22:31:41", "upload_time_iso_8601": "2019-02-01T22:31:41.033666Z", "url": "https://files.pythonhosted.org/packages/a6/57/e07fd64ba429e49452d397b0114c754abaacedb6eee02dd0ea754a52afc2/pyhrv-0.3.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "19eeb34660d92fbc4a973d13d879166d", "sha256": "ff1e5658936d71f84fcbda203868a6123b4d8ac263b7abb004c5929d20e65bd8"}, "downloads": -1, "filename": "pyhrv-0.3.2.tar.gz", "has_sig": false, "md5_digest": "19eeb34660d92fbc4a973d13d879166d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 40584, "upload_time": "2019-02-01T22:31:44", "upload_time_iso_8601": "2019-02-01T22:31:44.208858Z", "url": "https://files.pythonhosted.org/packages/dd/cc/5fe5d57a4fc3707935f9d732773f565873de6b63e476b89006c183291ce7/pyhrv-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "cc12aa51f1379d6c7f04b390902d0913", "sha256": "198c770a792a6ff08263e9d4efc90f26b403eb3b8be384cef73173cbf35d1f7c"}, "downloads": -1, "filename": "pyhrv-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "cc12aa51f1379d6c7f04b390902d0913", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 3223586, "upload_time": "2019-11-12T23:20:30", "upload_time_iso_8601": "2019-11-12T23:20:30.777370Z", "url": "https://files.pythonhosted.org/packages/9c/25/1ab0d36f501966eec60ad3e6484fafed99f835f32d5ff122d5573b2de3a1/pyhrv-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2422b0168254b92512a829cbd3b560f", "sha256": "5e606f1589dfbe734505238c82d9326abf8ce4ad3b3c2aab4cfc4b088ecb8268"}, "downloads": -1, "filename": "pyhrv-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d2422b0168254b92512a829cbd3b560f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 3223585, "upload_time": "2019-11-12T23:20:35", "upload_time_iso_8601": "2019-11-12T23:20:35.391360Z", "url": "https://files.pythonhosted.org/packages/84/37/ef1528358e938dd063faed41087a0274fc5b39517b2267018f9dca372e00/pyhrv-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4ffa03be26a66539413b65c67af2cc4", "sha256": "037f05890fbb53cfbca01f9b0ec41c153fe26b29bbb234ec77dae5e41a401d3d"}, "downloads": -1, "filename": "pyhrv-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b4ffa03be26a66539413b65c67af2cc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 63237, "upload_time": "2019-11-12T23:20:37", "upload_time_iso_8601": "2019-11-12T23:20:37.592453Z", "url": "https://files.pythonhosted.org/packages/18/17/6213217ab91a4fb8300e2304932cc06e6671863facb63fc0e5cbaa2d23c7/pyhrv-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc12aa51f1379d6c7f04b390902d0913", "sha256": "198c770a792a6ff08263e9d4efc90f26b403eb3b8be384cef73173cbf35d1f7c"}, "downloads": -1, "filename": "pyhrv-0.4.0-py2-none-any.whl", "has_sig": false, "md5_digest": "cc12aa51f1379d6c7f04b390902d0913", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": ">=2.7", "size": 3223586, "upload_time": "2019-11-12T23:20:30", "upload_time_iso_8601": "2019-11-12T23:20:30.777370Z", "url": "https://files.pythonhosted.org/packages/9c/25/1ab0d36f501966eec60ad3e6484fafed99f835f32d5ff122d5573b2de3a1/pyhrv-0.4.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d2422b0168254b92512a829cbd3b560f", "sha256": "5e606f1589dfbe734505238c82d9326abf8ce4ad3b3c2aab4cfc4b088ecb8268"}, "downloads": -1, "filename": "pyhrv-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "d2422b0168254b92512a829cbd3b560f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=2.7", "size": 3223585, "upload_time": "2019-11-12T23:20:35", "upload_time_iso_8601": "2019-11-12T23:20:35.391360Z", "url": "https://files.pythonhosted.org/packages/84/37/ef1528358e938dd063faed41087a0274fc5b39517b2267018f9dca372e00/pyhrv-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b4ffa03be26a66539413b65c67af2cc4", "sha256": "037f05890fbb53cfbca01f9b0ec41c153fe26b29bbb234ec77dae5e41a401d3d"}, "downloads": -1, "filename": "pyhrv-0.4.0.tar.gz", "has_sig": false, "md5_digest": "b4ffa03be26a66539413b65c67af2cc4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 63237, "upload_time": "2019-11-12T23:20:37", "upload_time_iso_8601": "2019-11-12T23:20:37.592453Z", "url": "https://files.pythonhosted.org/packages/18/17/6213217ab91a4fb8300e2304932cc06e6671863facb63fc0e5cbaa2d23c7/pyhrv-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:18 2020"}