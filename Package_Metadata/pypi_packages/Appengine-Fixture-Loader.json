{"info": {"author": "Ricardo B\u00e1nffy", "author_email": "appengine-fixture-loader@autonomic.com.br", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "appengine-fixture-loader\n========================\n\nA simple way to load Django-like fixtures into the local development datastore, originally intended to be used by `testable_appengine <https://github.com/rbanffy/testable_appengine>`_.\n\n.. image:: https://img.shields.io/pypi/l/appengine-fixture-loader.svg\n    :target: ./LICENSE\n\n.. image:: https://badge.fury.io/py/appengine-fixture-loader.svg\n    :target: https://badge.fury.io/py/appengine-fixture-loader\n\n.. image:: https://api.travis-ci.org/rbanffy/appengine-fixture-loader.svg\n    :target: https://travis-ci.org/rbanffy/appengine-fixture-loader\n\n.. image:: https://img.shields.io/pypi/pyversions/appengine-fixture-loader.svg\n    :target: https://pypi.python.org/pypi/appengine-fixture-loader/\n\n.. image:: https://img.shields.io/pypi/dm/appengine-fixture-loader.svg\n    :target: https://pypi.python.org/pypi/appengine-fixture-loader/\n\n.. image:: https://coveralls.io/repos/rbanffy/appengine-fixture-loader/badge.svg?branch=master&service=github\n    :target: https://coveralls.io/github/rbanffy/appengine-fixture-loader?branch=master\n\nInstalling\n----------\n\nFor the less adventurous, Appengine-Fixture-Loader is available on PyPI at https://pypi.python.org/pypi/Appengine-Fixture-Loader.\n\nSingle-kind loads\n------------------\n\nLet's say you have a model like this:\n\n.. code-block:: python\n\n    class Person(ndb.Model):\n        \"\"\"Our sample class\"\"\"\n        first_name = ndb.StringProperty()\n        last_name = ndb.StringProperty()\n        born = ndb.DateTimeProperty()\n        userid = ndb.IntegerProperty()\n        thermostat_set_to = ndb.FloatProperty()\n        snores = ndb.BooleanProperty()\n        started_school = ndb.DateProperty()\n        sleeptime = ndb.TimeProperty()\n        favorite_movies = ndb.JsonProperty()\n        processed = ndb.BooleanProperty(default=False)\n\nIf you want to load a data file like this:\n\n.. code-block:: javascript\n\n    [\n        {\n            \"__id__\": \"jdoe\",\n            \"born\": \"1968-03-03T00:00:00\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"favorite_movies\": [\n                \"2001\",\n                \"The Day The Earth Stood Still (1951)\"\n            ],\n            \"snores\": false,\n            \"sleeptime\": \"23:00\",\n            \"started_school\": \"1974-02-15\",\n            \"thermostat_set_to\": 18.34,\n            \"userid\": 1\n        },\n\n    ...\n\n        {\n            \"born\": \"1980-05-25T00:00:00\",\n            \"first_name\": \"Bob\",\n            \"last_name\": \"Schneier\",\n            \"favorite_movies\": [\n                \"2001\",\n                \"Superman\"\n            ],\n            \"snores\": true,\n            \"sleeptime\": \"22:00\",\n            \"started_school\": \"1985-08-01\",\n            \"thermostat_set_to\": 18.34,\n            \"userid\": -5\n        }\n    ]\n\nAll you need to do is to:\n\n.. code-block:: python\n\n    from appengine_fixture_loader.loader import load_fixture\n\nand then:\n\n.. code-block:: python\n\n    loaded_data = load_fixture('tests/persons.json', kind=Person)\n\nIn our example, `loaded_data` will contain a list of already persisted Person models you can then manipulate and persist again.\n\nThe `__id__` attribute, when defined, will save the object with that given id. In our case, the key to the first object defined will be a `ndb.Key('Person', 'jdoe')`. The key may be defined on an object by object base - where the `__id__` parameter is omitted, an automatic id will be generated - the key to the second one will be something like `ndb.Key('Person', 1)`.\n\nMulti-kind loads\n----------------\n\nIt's convenient to be able to load multiple kinds of objects from a single file. For those cases, we provide a simple way to identify the kind of object being loaded and to provide a set of models to use when loading the objects.\n\nConsider our original example model:\n\n.. code-block:: python\n\n    class Person(ndb.Model):\n        \"\"\"Our sample class\"\"\"\n        first_name = ndb.StringProperty()\n        last_name = ndb.StringProperty()\n        born = ndb.DateTimeProperty()\n        userid = ndb.IntegerProperty()\n        thermostat_set_to = ndb.FloatProperty()\n        snores = ndb.BooleanProperty()\n        started_school = ndb.DateProperty()\n        sleeptime = ndb.TimeProperty()\n        favorite_movies = ndb.JsonProperty()\n        processed = ndb.BooleanProperty(default=False)\n\nand let's add a second one:\n\n.. code-block:: python\n\n    class Dog(ndb.Model):\n        \"\"\"Another sample class\"\"\"\n        name = ndb.StringProperty()\n\nNow, if we wanted to make a single file load objects of the two kinds, we'd need to use the `__kind__` attribute in the JSON:\n\n.. code-block:: javascript\n\n    [\n        {\n            \"__kind__\": \"Person\",\n            \"born\": \"1968-03-03T00:00:00\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n            \"favorite_movies\": [\n                \"2001\",\n                \"The Day The Earth Stood Still (1951)\"\n            ],\n            \"snores\": false,\n            \"sleeptime\": \"23:00\",\n            \"started_school\": \"1974-02-15\",\n            \"thermostat_set_to\": 18.34,\n            \"userid\": 1\n        },\n        {\n            \"__kind__\": \"Dog\",\n            \"name\": \"Fido\"\n        }\n    ]\n\nAnd, to load the file, we'd have to:\n\n.. code-block:: python\n\n    from appengine_fixture_loader.loader import load_fixture\n\nand:\n\n.. code-block:: python\n\n    loaded_data = load_fixture('tests/persons_and_dogs.json',\n                               kind={'Person': Person, 'Dog': Dog})\n\nwill result in a list of Persons and Dogs (in this case, one person and one dog).\n\nMulti-kind, multi-level loads\n-----------------------------\n\nAnther common case is having hierarchies of entities that you want to reconstruct for your tests.\n\nUsing slightly modified versions of our example classes:\n\n.. code-block:: python\n\n    class Person(ndb.Model):\n        \"\"\"Our sample class\"\"\"\n        first_name = ndb.StringProperty()\n        last_name = ndb.StringProperty()\n        born = ndb.DateTimeProperty()\n        userid = ndb.IntegerProperty()\n        thermostat_set_to = ndb.FloatProperty()\n        snores = ndb.BooleanProperty()\n        started_school = ndb.DateProperty()\n        sleeptime = ndb.TimeProperty()\n        favorite_movies = ndb.JsonProperty()\n        processed = ndb.BooleanProperty(default=False)\n        appropriate_adult = ndb.KeyProperty()\n\nand:\n\n.. code-block:: python\n\n    class Dog(ndb.Model):\n        \"\"\"Another sample class\"\"\"\n        name = ndb.StringProperty()\n        processed = ndb.BooleanProperty(default=False)\n        owner = ndb.KeyProperty()\n\nAnd using `__children__[attribute_name]__` like meta-attributes, as in:\n\n.. code-block:: javascript\n\n    [\n        {\n            \"__kind__\": \"Person\",\n            \"born\": \"1968-03-03T00:00:00\",\n            \"first_name\": \"John\",\n            \"last_name\": \"Doe\",\n\n            ...\n\n            \"__children__appropriate_adult__\": [\n                {\n                    \"__kind__\": \"Person\",\n                    \"born\": \"1970-04-27T00:00:00\",\n\n                    ...\n\n                    \"__children__appropriate_adult__\": [\n                        {\n                            \"__kind__\": \"Person\",\n                            \"born\": \"1980-05-25T00:00:00\",\n                            \"first_name\": \"Bob\",\n\n                            ...\n\n                            \"userid\": 3\n                        }\n                    ]\n                }\n            ]\n        },\n        {\n            \"__kind__\": \"Person\",\n            \"born\": \"1999-09-19T00:00:00\",\n            \"first_name\": \"Alice\",\n\n            ...\n\n            \"__children__appropriate_adult__\": [\n                {\n                    \"__kind__\": \"Person\",\n\n                    ...\n\n                    \"__children__owner__\": [\n                        {\n                            \"__kind__\": \"Dog\",\n                            \"name\": \"Fido\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n\nyou can reconstruct entire entity trees for your tests.\n\nParent/Ancestor-based relationships with automatic keys\n-------------------------------------------------------\n\nIt's also possible to set the `parent` by using the `__children__` attribute.\n\nFor our example classes, importing:\n\n.. code-block:: javascript\n\n    [\n        {\n            \"__kind__\": \"Person\",\n            \"first_name\": \"Alice\",\n\n            ...\n\n            \"__children__\": [\n                {\n                    \"__kind__\": \"Person\",\n                    \"first_name\": \"Bob\",\n                    ...\n\n                    \"__children__owner__\": [\n                        {\n                            \"__kind__\": \"Dog\",\n                            \"name\": \"Fido\"\n                        }\n                    ]\n                }\n            ]\n        }\n    ]\n\nshould be equivalent to:\n\n.. code-block:: python\n\n    alice = Person(first_name='Alice')\n    alice.put()\n    bob = Person(first_name='Bob', parent=alice)\n    bob.put()\n    fido = Dog(name='Fido', parent=bob)\n    fido.put()\n\nYou can then retrieve fido with:\n\n.. code-block:: python\n\n    fido = Dog.query(ancestor=alice.key).get()\n\n\nDevelopment\n===========\n\nThere are two recommended ways to work on this codebase. If you want to keep\none and only one App Engine SDK install, you may clone the repository and run\nthe tests by::\n\n    $ PYTHONPATH=path/to/appengine/library python setup.py test\n\nAlternatively, this project contains code and support files derived from the\ntestable_appengine project. Testable_appengine was conceived to make it easier\nto write (and run) tests for Google App Engine applications and to hook your\napplication to Travis CI. In essence, it creates a virtualenv and downloads the\nmost up-to-date SDK and other support tools into it. To use it, you run\n`make`. Calling `make help` will give you a quick list of available make\ntargets::\n\n    $ make venv\n    Running virtualenv with interpreter /usr/bin/python2\n    New python executable in /export/home/ricardo/projects/appengine-fixture-loader/.env/bin/python2\n    Also creating executable in /export/home/ricardo/projects/appengine-fixture-loader/.env/bin/python\n    (...)\n    \u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/bin/run_tests.py\u2019 -> \u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/lib/google_appengine/run_tests.py\u2019\n    \u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/bin/wrapper_util.py\u2019 -> \u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/lib/google_appengine/wrapper_util.py\u2019\n    $ source .env/bin/activate\n    (.env) $ nosetests\n    ..............\n    ----------------------------------------------------------------------\n    Ran 14 tests in 2.708s\n\n    OK\n\n\n\n\nHistory\n-------\n\n0.1.0 (2014-10-13)\n------------------\n\n* First release on GitHub.\n\n0.1.1 (2014-12-4)\n-----------------\n\n* Add support for multi-kind JSON files\n\n0.1.2 (2014-12-4)\n-----------------\n\n* Minor fixes\n\n0.1.3 (2014-12-5)\n-----------------\n\n* Added support for PropertyKey-based child entities\n\n0.1.4 (2015-2-4)\n-----------------\n\n* Fixed bug in which post-processor was called on every property change\n* Added section on development to README.rst\n\n0.1.5 (2015-2-11)\n-----------------\n\n* Added `__children__` support\n* Added manual key definition through the `__id__` attribute\n\n0.1.6 (2015-8-30)\n-----------------\n\n* Builds if you don't have `curl` installed\n* Minor documentation improvements\n\n0.1.7 (2015-11-3)\n-----------------\n\n* Syntax highlighting on the documentation\n* Coverage analysis using Coveralls\n\n0.1.8 (2016-02-05)\n------------------\n\n* New resources/Makefile\n\n0.1.9 (2016-12-19)\n------------------\n\n* Replace pep8 with pycodestyle\n* Update current SDK version detection to latest version", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/rbanffy/appengine-fixture-loader/", "keywords": "appengine,loader,fixture", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "Appengine-Fixture-Loader", "package_url": "https://pypi.org/project/Appengine-Fixture-Loader/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Appengine-Fixture-Loader/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/rbanffy/appengine-fixture-loader/"}, "release_url": "https://pypi.org/project/Appengine-Fixture-Loader/0.1.9/", "requires_dist": null, "requires_python": null, "summary": "Appengine fixture loader", "version": "0.1.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"appengine-fixture-loader\">\n<h2>appengine-fixture-loader</h2>\n<p>A simple way to load Django-like fixtures into the local development datastore, originally intended to be used by <a href=\"https://github.com/rbanffy/testable_appengine\" rel=\"nofollow\">testable_appengine</a>.</p>\n<a href=\"./LICENSE\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/l/appengine-fixture-loader.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5935aec17ef56b3978fe57513ad9f304ebf4bde5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f617070656e67696e652d666978747572652d6c6f616465722e737667\"></a>\n<a href=\"https://badge.fury.io/py/appengine-fixture-loader\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/appengine-fixture-loader.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ec3b73591a1fdac0b2301147532659385707ed52/68747470733a2f2f62616467652e667572792e696f2f70792f617070656e67696e652d666978747572652d6c6f616465722e737667\"></a>\n<a href=\"https://travis-ci.org/rbanffy/appengine-fixture-loader\" rel=\"nofollow\"><img alt=\"https://api.travis-ci.org/rbanffy/appengine-fixture-loader.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/110f8e760f1458e1a6765aa0cf3f5fb7a5afaaf2/68747470733a2f2f6170692e7472617669732d63692e6f72672f7262616e6666792f617070656e67696e652d666978747572652d6c6f616465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/appengine-fixture-loader/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/appengine-fixture-loader.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/bf0770c66f02458dc314797bd963641da8bd5abd/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f617070656e67696e652d666978747572652d6c6f616465722e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/appengine-fixture-loader/\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/dm/appengine-fixture-loader.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e14d1c1319ecff9d836bee8c5ee1db32fd1cd75/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f617070656e67696e652d666978747572652d6c6f616465722e737667\"></a>\n<a href=\"https://coveralls.io/github/rbanffy/appengine-fixture-loader?branch=master\" rel=\"nofollow\"><img alt=\"https://coveralls.io/repos/rbanffy/appengine-fixture-loader/badge.svg?branch=master&amp;service=github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9a6a7f01b207be5af6583058027f1e29eb8bc33d/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f7262616e6666792f617070656e67696e652d666978747572652d6c6f616465722f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a>\n<div id=\"installing\">\n<h3>Installing</h3>\n<p>For the less adventurous, Appengine-Fixture-Loader is available on PyPI at <a href=\"https://pypi.python.org/pypi/Appengine-Fixture-Loader\" rel=\"nofollow\">https://pypi.python.org/pypi/Appengine-Fixture-Loader</a>.</p>\n</div>\n<div id=\"single-kind-loads\">\n<h3>Single-kind loads</h3>\n<p>Let\u2019s say you have a model like this:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Our sample class\"\"\"</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">born</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">DateTimeProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">userid</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">IntegerProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">thermostat_set_to</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">FloatProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">snores</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">started_school</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">DateProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">sleeptime</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">TimeProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">favorite_movies</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">JsonProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">processed</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>If you want to load a data file like this:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"__id__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"jdoe\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1968-03-03T00:00:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"last_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"favorite_movies\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"2001\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"The Day The Earth Stood Still (1951)\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"s2\">\"snores\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"sleeptime\"</span><span class=\"o\">:</span> <span class=\"s2\">\"23:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"started_school\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1974-02-15\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"thermostat_set_to\"</span><span class=\"o\">:</span> <span class=\"mf\">18.34</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"userid\"</span><span class=\"o\">:</span> <span class=\"mi\">1</span>\n    <span class=\"p\">},</span>\n\n<span class=\"p\">...</span>\n\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1980-05-25T00:00:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"last_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Schneier\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"favorite_movies\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"2001\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"Superman\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"s2\">\"snores\"</span><span class=\"o\">:</span> <span class=\"kc\">true</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"sleeptime\"</span><span class=\"o\">:</span> <span class=\"s2\">\"22:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"started_school\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1985-08-01\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"thermostat_set_to\"</span><span class=\"o\">:</span> <span class=\"mf\">18.34</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"userid\"</span><span class=\"o\">:</span> <span class=\"o\">-</span><span class=\"mi\">5</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>All you need to do is to:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">appengine_fixture_loader.loader</span> <span class=\"kn\">import</span> <span class=\"n\">load_fixture</span>\n</pre>\n<p>and then:</p>\n<pre><span class=\"n\">loaded_data</span> <span class=\"o\">=</span> <span class=\"n\">load_fixture</span><span class=\"p\">(</span><span class=\"s1\">'tests/persons.json'</span><span class=\"p\">,</span> <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"n\">Person</span><span class=\"p\">)</span>\n</pre>\n<p>In our example, <cite>loaded_data</cite> will contain a list of already persisted Person models you can then manipulate and persist again.</p>\n<p>The <cite>__id__</cite> attribute, when defined, will save the object with that given id. In our case, the key to the first object defined will be a <cite>ndb.Key(\u2018Person\u2019, \u2018jdoe\u2019)</cite>. The key may be defined on an object by object base - where the <cite>__id__</cite> parameter is omitted, an automatic id will be generated - the key to the second one will be something like <cite>ndb.Key(\u2018Person\u2019, 1)</cite>.</p>\n</div>\n<div id=\"multi-kind-loads\">\n<h3>Multi-kind loads</h3>\n<p>It\u2019s convenient to be able to load multiple kinds of objects from a single file. For those cases, we provide a simple way to identify the kind of object being loaded and to provide a set of models to use when loading the objects.</p>\n<p>Consider our original example model:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Our sample class\"\"\"</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">born</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">DateTimeProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">userid</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">IntegerProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">thermostat_set_to</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">FloatProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">snores</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">started_school</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">DateProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">sleeptime</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">TimeProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">favorite_movies</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">JsonProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">processed</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n<p>and let\u2019s add a second one:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Dog</span><span class=\"p\">(</span><span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Another sample class\"\"\"</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n</pre>\n<p>Now, if we wanted to make a single file load objects of the two kinds, we\u2019d need to use the <cite>__kind__</cite> attribute in the JSON:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1968-03-03T00:00:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"last_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"favorite_movies\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"s2\">\"2001\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"The Day The Earth Stood Still (1951)\"</span>\n        <span class=\"p\">],</span>\n        <span class=\"s2\">\"snores\"</span><span class=\"o\">:</span> <span class=\"kc\">false</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"sleeptime\"</span><span class=\"o\">:</span> <span class=\"s2\">\"23:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"started_school\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1974-02-15\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"thermostat_set_to\"</span><span class=\"o\">:</span> <span class=\"mf\">18.34</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"userid\"</span><span class=\"o\">:</span> <span class=\"mi\">1</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Dog\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Fido\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>And, to load the file, we\u2019d have to:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">appengine_fixture_loader.loader</span> <span class=\"kn\">import</span> <span class=\"n\">load_fixture</span>\n</pre>\n<p>and:</p>\n<pre><span class=\"n\">loaded_data</span> <span class=\"o\">=</span> <span class=\"n\">load_fixture</span><span class=\"p\">(</span><span class=\"s1\">'tests/persons_and_dogs.json'</span><span class=\"p\">,</span>\n                           <span class=\"n\">kind</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'Person'</span><span class=\"p\">:</span> <span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"s1\">'Dog'</span><span class=\"p\">:</span> <span class=\"n\">Dog</span><span class=\"p\">})</span>\n</pre>\n<p>will result in a list of Persons and Dogs (in this case, one person and one dog).</p>\n</div>\n<div id=\"multi-kind-multi-level-loads\">\n<h3>Multi-kind, multi-level loads</h3>\n<p>Anther common case is having hierarchies of entities that you want to reconstruct for your tests.</p>\n<p>Using slightly modified versions of our example classes:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Our sample class\"\"\"</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">born</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">DateTimeProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">userid</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">IntegerProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">thermostat_set_to</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">FloatProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">snores</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">started_school</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">DateProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">sleeptime</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">TimeProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">favorite_movies</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">JsonProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">processed</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">appropriate_adult</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">KeyProperty</span><span class=\"p\">()</span>\n</pre>\n<p>and:</p>\n<pre><span class=\"k\">class</span> <span class=\"nc\">Dog</span><span class=\"p\">(</span><span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"Another sample class\"\"\"</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">StringProperty</span><span class=\"p\">()</span>\n    <span class=\"n\">processed</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">BooleanProperty</span><span class=\"p\">(</span><span class=\"n\">default</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n    <span class=\"n\">owner</span> <span class=\"o\">=</span> <span class=\"n\">ndb</span><span class=\"o\">.</span><span class=\"n\">KeyProperty</span><span class=\"p\">()</span>\n</pre>\n<p>And using <cite>__children__[attribute_name]__</cite> like meta-attributes, as in:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1968-03-03T00:00:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"John\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"last_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Doe\"</span><span class=\"p\">,</span>\n\n        <span class=\"p\">...</span>\n\n        <span class=\"s2\">\"__children__appropriate_adult__\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1970-04-27T00:00:00\"</span><span class=\"p\">,</span>\n\n                <span class=\"p\">...</span>\n\n                <span class=\"s2\">\"__children__appropriate_adult__\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1980-05-25T00:00:00\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span>\n\n                        <span class=\"p\">...</span>\n\n                        <span class=\"s2\">\"userid\"</span><span class=\"o\">:</span> <span class=\"mi\">3</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">},</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"born\"</span><span class=\"o\">:</span> <span class=\"s2\">\"1999-09-19T00:00:00\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Alice\"</span><span class=\"p\">,</span>\n\n        <span class=\"p\">...</span>\n\n        <span class=\"s2\">\"__children__appropriate_adult__\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n\n                <span class=\"p\">...</span>\n\n                <span class=\"s2\">\"__children__owner__\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Dog\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Fido\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>you can reconstruct entire entity trees for your tests.</p>\n</div>\n<div id=\"parent-ancestor-based-relationships-with-automatic-keys\">\n<h3>Parent/Ancestor-based relationships with automatic keys</h3>\n<p>It\u2019s also possible to set the <cite>parent</cite> by using the <cite>__children__</cite> attribute.</p>\n<p>For our example classes, importing:</p>\n<pre><span class=\"p\">[</span>\n    <span class=\"p\">{</span>\n        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Alice\"</span><span class=\"p\">,</span>\n\n        <span class=\"p\">...</span>\n\n        <span class=\"s2\">\"__children__\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span>\n                <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Person\"</span><span class=\"p\">,</span>\n                <span class=\"s2\">\"first_name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Bob\"</span><span class=\"p\">,</span>\n                <span class=\"p\">...</span>\n\n                <span class=\"s2\">\"__children__owner__\"</span><span class=\"o\">:</span> <span class=\"p\">[</span>\n                    <span class=\"p\">{</span>\n                        <span class=\"s2\">\"__kind__\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Dog\"</span><span class=\"p\">,</span>\n                        <span class=\"s2\">\"name\"</span><span class=\"o\">:</span> <span class=\"s2\">\"Fido\"</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">]</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">]</span>\n</pre>\n<p>should be equivalent to:</p>\n<pre><span class=\"n\">alice</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s1\">'Alice'</span><span class=\"p\">)</span>\n<span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">()</span>\n<span class=\"n\">bob</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">first_name</span><span class=\"o\">=</span><span class=\"s1\">'Bob'</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">alice</span><span class=\"p\">)</span>\n<span class=\"n\">bob</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">()</span>\n<span class=\"n\">fido</span> <span class=\"o\">=</span> <span class=\"n\">Dog</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"o\">=</span><span class=\"s1\">'Fido'</span><span class=\"p\">,</span> <span class=\"n\">parent</span><span class=\"o\">=</span><span class=\"n\">bob</span><span class=\"p\">)</span>\n<span class=\"n\">fido</span><span class=\"o\">.</span><span class=\"n\">put</span><span class=\"p\">()</span>\n</pre>\n<p>You can then retrieve fido with:</p>\n<pre><span class=\"n\">fido</span> <span class=\"o\">=</span> <span class=\"n\">Dog</span><span class=\"o\">.</span><span class=\"n\">query</span><span class=\"p\">(</span><span class=\"n\">ancestor</span><span class=\"o\">=</span><span class=\"n\">alice</span><span class=\"o\">.</span><span class=\"n\">key</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>There are two recommended ways to work on this codebase. If you want to keep\none and only one App Engine SDK install, you may clone the repository and run\nthe tests by:</p>\n<pre>$ PYTHONPATH=path/to/appengine/library python setup.py test\n</pre>\n<p>Alternatively, this project contains code and support files derived from the\ntestable_appengine project. Testable_appengine was conceived to make it easier\nto write (and run) tests for Google App Engine applications and to hook your\napplication to Travis CI. In essence, it creates a virtualenv and downloads the\nmost up-to-date SDK and other support tools into it. To use it, you run\n<cite>make</cite>. Calling <cite>make help</cite> will give you a quick list of available make\ntargets:</p>\n<pre>$ make venv\nRunning virtualenv with interpreter /usr/bin/python2\nNew python executable in /export/home/ricardo/projects/appengine-fixture-loader/.env/bin/python2\nAlso creating executable in /export/home/ricardo/projects/appengine-fixture-loader/.env/bin/python\n(...)\n\u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/bin/run_tests.py\u2019 -&gt; \u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/lib/google_appengine/run_tests.py\u2019\n\u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/bin/wrapper_util.py\u2019 -&gt; \u2018/export/home/ricardo/projects/appengine-fixture-loader/.env/lib/google_appengine/wrapper_util.py\u2019\n$ source .env/bin/activate\n(.env) $ nosetests\n..............\n----------------------------------------------------------------------\nRan 14 tests in 2.708s\n\nOK\n</pre>\n<div id=\"history\">\n<h3>History</h3>\n</div>\n<div id=\"id1\">\n<h3>0.1.0 (2014-10-13)</h3>\n<ul>\n<li>First release on GitHub.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.1.1 (2014-12-4)</h3>\n<ul>\n<li>Add support for multi-kind JSON files</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.2 (2014-12-4)</h3>\n<ul>\n<li>Minor fixes</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.3 (2014-12-5)</h3>\n<ul>\n<li>Added support for PropertyKey-based child entities</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.4 (2015-2-4)</h3>\n<ul>\n<li>Fixed bug in which post-processor was called on every property change</li>\n<li>Added section on development to README.rst</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.5 (2015-2-11)</h3>\n<ul>\n<li>Added <cite>__children__</cite> support</li>\n<li>Added manual key definition through the <cite>__id__</cite> attribute</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.1.6 (2015-8-30)</h3>\n<ul>\n<li>Builds if you don\u2019t have <cite>curl</cite> installed</li>\n<li>Minor documentation improvements</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1.7 (2015-11-3)</h3>\n<ul>\n<li>Syntax highlighting on the documentation</li>\n<li>Coverage analysis using Coveralls</li>\n</ul>\n</div>\n<div id=\"id9\">\n<h3>0.1.8 (2016-02-05)</h3>\n<ul>\n<li>New resources/Makefile</li>\n</ul>\n</div>\n<div id=\"id10\">\n<h3>0.1.9 (2016-12-19)</h3>\n<ul>\n<li>Replace pep8 with pycodestyle</li>\n<li>Update current SDK version detection to latest version</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2527976, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "788bed70b34391f63fea4a4a8681032f", "sha256": "565cf2af839a9a65b40bba68119e4439c1bfba18f007b86714a6fc76b8004fee"}, "downloads": -1, "filename": "Appengine_Fixture_Loader-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "788bed70b34391f63fea4a4a8681032f", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 4707, "upload_time": "2014-11-26T16:31:42", "upload_time_iso_8601": "2014-11-26T16:31:42.662513Z", "url": "https://files.pythonhosted.org/packages/57/00/a1e774c1a2a54736521c269fb3a1cfa67fb93c660b8c672b15f1c5196471/Appengine_Fixture_Loader-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a5ce97cd7b05671ef690235b9e24d69", "sha256": "9778f1d3826b139e93e170369e48787dc1a8474b7deaabb400b9e95c38dfe8b3"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1a5ce97cd7b05671ef690235b9e24d69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16308, "upload_time": "2014-11-26T17:03:11", "upload_time_iso_8601": "2014-11-26T17:03:11.651911Z", "url": "https://files.pythonhosted.org/packages/5e/1a/6e4d25ea277259567f5a6e1a9a790e6d41ab7c22de0968c7b7a99f4491a3/Appengine-Fixture-Loader-0.1.0.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "4d9002a06f15a03f8e8641c099507867", "sha256": "f5bcda6cf864a8d4fba3ba7191bfa24a5f2c4033e11befc782c63019c10bfc88"}, "downloads": -1, "filename": "Appengine_Fixture_Loader-0.1.2-py2.7.egg", "has_sig": false, "md5_digest": "4d9002a06f15a03f8e8641c099507867", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 5442, "upload_time": "2014-12-05T00:19:23", "upload_time_iso_8601": "2014-12-05T00:19:23.207579Z", "url": "https://files.pythonhosted.org/packages/77/e4/e40c0c5a9938b45df337e3adc25ef68bfe9fecee613e0be31f8cb4ef7549/Appengine_Fixture_Loader-0.1.2-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a74de9e79f7a8e4aa9c9e3edd7e220c", "sha256": "99b812dd5ad92948604800cd39c39f17b717dffa2886d1eb99c1cebb34662cb4"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a74de9e79f7a8e4aa9c9e3edd7e220c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18342, "upload_time": "2014-12-05T00:19:40", "upload_time_iso_8601": "2014-12-05T00:19:40.813996Z", "url": "https://files.pythonhosted.org/packages/c0/c3/6b2a1acbeb8bd5a8056c12090e23038bfb24530d120082b4434675cea229/Appengine-Fixture-Loader-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "fdbfcffdfdb6c2556f60bdf8da8ac1b9", "sha256": "77343ac8258b0341695d71ec4dbd758bb3dbefddde9733b8ffa6b1406742fd20"}, "downloads": -1, "filename": "Appengine_Fixture_Loader-0.1.3-py2.7.egg", "has_sig": false, "md5_digest": "fdbfcffdfdb6c2556f60bdf8da8ac1b9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6132, "upload_time": "2014-12-05T17:26:44", "upload_time_iso_8601": "2014-12-05T17:26:44.110956Z", "url": "https://files.pythonhosted.org/packages/e6/b7/9ebd982668325a216d7e652be575a193a1d3ab4fedca703461882529c70e/Appengine_Fixture_Loader-0.1.3-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "31725a7fb9ef0f8625e6d477c6e70097", "sha256": "ce04f46e72c65ff8900011afd3d5875c8f95370d9c7a5bf77ced2aff52e68cac"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.3.tar.gz", "has_sig": false, "md5_digest": "31725a7fb9ef0f8625e6d477c6e70097", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20165, "upload_time": "2014-12-05T17:26:26", "upload_time_iso_8601": "2014-12-05T17:26:26.558307Z", "url": "https://files.pythonhosted.org/packages/e2/4a/ab1d185a73683dff53286fb0fbf2be50e99a40e5fffd641ec9f1c52f16dc/Appengine-Fixture-Loader-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6fa0d5dbbb26eb1d4e78b406249f1457", "sha256": "442cc8f6155aa2dcde0f54f9f18f15533dccde487bfa6c271856b615a8bf34f9"}, "downloads": -1, "filename": "Appengine_Fixture_Loader-0.1.4-py2.7.egg", "has_sig": false, "md5_digest": "6fa0d5dbbb26eb1d4e78b406249f1457", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 6502, "upload_time": "2015-02-04T23:41:43", "upload_time_iso_8601": "2015-02-04T23:41:43.082869Z", "url": "https://files.pythonhosted.org/packages/9d/63/65dd76805a4560de7a87d32e2a127f88ad42316d86200af44db1915fae8f/Appengine_Fixture_Loader-0.1.4-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "563a1234ba51f066e15f4bffe8e71720", "sha256": "831b22021e9d9053eb13ea0f8408b5e1e9ac9d22cd23d4829d8f639dffb306d2"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.4.tar.gz", "has_sig": false, "md5_digest": "563a1234ba51f066e15f4bffe8e71720", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20018, "upload_time": "2015-02-04T23:41:53", "upload_time_iso_8601": "2015-02-04T23:41:53.267795Z", "url": "https://files.pythonhosted.org/packages/dd/62/d8412f2e9850d16cb55c6cad96c23fcdb6f7f639e84f0305fdc7be71d48a/Appengine-Fixture-Loader-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "48bcf2b25adb1a710a28be9ea9c6119d", "sha256": "3eae2016838b0d70848d8ea104b2ae6d2336abdca7befed8691206b5caeaddf2"}, "downloads": -1, "filename": "Appengine_Fixture_Loader-0.1.5-py2.7.egg", "has_sig": false, "md5_digest": "48bcf2b25adb1a710a28be9ea9c6119d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 7322, "upload_time": "2015-02-11T23:52:52", "upload_time_iso_8601": "2015-02-11T23:52:52.834027Z", "url": "https://files.pythonhosted.org/packages/94/2f/2a642d6d25edb75f19e78a2b975f0e74337dadc53e02ae0c7e137b994fcb/Appengine_Fixture_Loader-0.1.5-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "7bbe0c7af43a838bd00c74073d6247f9", "sha256": "cd11c701fd5917a0af84a03d52aec7a0f53aa3a235f722f7605e9c4dadd4f898"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.5.tar.gz", "has_sig": false, "md5_digest": "7bbe0c7af43a838bd00c74073d6247f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21903, "upload_time": "2015-02-11T23:52:37", "upload_time_iso_8601": "2015-02-11T23:52:37.382258Z", "url": "https://files.pythonhosted.org/packages/17/f3/05443c86e2865a4b1aeb70afa0fd51b21acddab3f2c457bf240614654183/Appengine-Fixture-Loader-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "built for Linux-3.19.0-28-generic-x86_64-with-glibc2.4", "digests": {"md5": "c1d74d87a3dad1b905e906d3cfc34d37", "sha256": "94b3905af075d45f90ae4ae7a71b1690271ee35eb20a889ccbc46c28670ea5de"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.6.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "c1d74d87a3dad1b905e906d3cfc34d37", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6699, "upload_time": "2015-09-11T19:17:01", "upload_time_iso_8601": "2015-09-11T19:17:01.651807Z", "url": "https://files.pythonhosted.org/packages/c1/fc/f54e0c4810f8d97d378ead5505a6966e6ef041d1b536d388d46626c0ffdc/Appengine-Fixture-Loader-0.1.6.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c0884dff9f32909996694317dd6d068b", "sha256": "8cfd487ad88c0283f6e0bf82f9ce970168c33789bd53897c084c101d56414cd5"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.6.tar.gz", "has_sig": false, "md5_digest": "c0884dff9f32909996694317dd6d068b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22589, "upload_time": "2015-09-11T19:16:53", "upload_time_iso_8601": "2015-09-11T19:16:53.948366Z", "url": "https://files.pythonhosted.org/packages/8f/71/07aa56f975798fb7150235e2db6cd61f4db7ae5163e45bb464859abe0e8c/Appengine-Fixture-Loader-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "built for Linux-3.19.0-31-generic-x86_64-with-glibc2.4", "digests": {"md5": "a3e79acc7f0da3d90ddf2d26d59ab544", "sha256": "9ec1db2c0f2dcac71293feb6e53a90498878de16a39c1d645cd4323f8464b811"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.7.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "a3e79acc7f0da3d90ddf2d26d59ab544", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6631, "upload_time": "2015-11-04T02:07:12", "upload_time_iso_8601": "2015-11-04T02:07:12.985522Z", "url": "https://files.pythonhosted.org/packages/77/4f/22eccb52a8191bf12b5501baebe15028f0259b6a05196fad41030005f677/Appengine-Fixture-Loader-0.1.7.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "575750b9e3fbac6f46bd814ab2e9d6fe", "sha256": "2e4e05e768496bf033f6b99c677ff4bfb0915ba40457a48c549e645aaf16a087"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.7.tar.gz", "has_sig": false, "md5_digest": "575750b9e3fbac6f46bd814ab2e9d6fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24210, "upload_time": "2015-11-04T02:07:24", "upload_time_iso_8601": "2015-11-04T02:07:24.921362Z", "url": "https://files.pythonhosted.org/packages/64/02/8e98545e779fd433430c3002d4f1c54e573e0a5ad709f30230751fba9f85/Appengine-Fixture-Loader-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "built for Linux-4.2.0-25-generic-x86_64-with-glibc2.4", "digests": {"md5": "ae1f3c3e3d7413a243457c47cb9e3074", "sha256": "addf5c251c867a9e66a90af3aeed207acd73e794136cb6031a7e87797ad8afa4"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.8.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "ae1f3c3e3d7413a243457c47cb9e3074", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6861, "upload_time": "2016-02-05T01:28:14", "upload_time_iso_8601": "2016-02-05T01:28:14.767821Z", "url": "https://files.pythonhosted.org/packages/7e/54/51216611b7c846d636a764e8fc50d9fb03d80b80cd468d238f7e3d0d501f/Appengine-Fixture-Loader-0.1.8.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c9ca401901219268c8245209df83b4c", "sha256": "590103493c51b74623aa3fc71016f8c2d4ccfd8699f8bd89d8ebea41189b39cc"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.8.tar.gz", "has_sig": false, "md5_digest": "1c9ca401901219268c8245209df83b4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24217, "upload_time": "2016-02-05T01:28:02", "upload_time_iso_8601": "2016-02-05T01:28:02.862301Z", "url": "https://files.pythonhosted.org/packages/55/da/11a6c9e3889c2c1e18c6eec895b43408932f57e9a65c6fe5f38572f0c46a/Appengine-Fixture-Loader-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "built for Darwin-15.6.0", "digests": {"md5": "1d45ea9f48f7c30e61f0a3f374d1ef43", "sha256": "ff567950c17e0ceb4a534f96712b549d84b921b8ed5995bbcec596fdcbfb4022"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.9.macosx-10.11-intel.tar.gz", "has_sig": false, "md5_digest": "1d45ea9f48f7c30e61f0a3f374d1ef43", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6923, "upload_time": "2016-12-19T11:42:34", "upload_time_iso_8601": "2016-12-19T11:42:34.922554Z", "url": "https://files.pythonhosted.org/packages/5c/2b/1b988d9926a05120b6e6008710e9fc5dd676cabc6adfac6ccc6ae4c29a23/Appengine-Fixture-Loader-0.1.9.macosx-10.11-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c72e4153642e2bb810477c57ae243684", "sha256": "da0868215b34bcbbcf53d6d645fccace74825b49e7cb942a518fd5207f363c25"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.9.tar.gz", "has_sig": false, "md5_digest": "c72e4153642e2bb810477c57ae243684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23401, "upload_time": "2016-12-19T11:42:32", "upload_time_iso_8601": "2016-12-19T11:42:32.842276Z", "url": "https://files.pythonhosted.org/packages/93/0a/051f49a34d0d5fc7f514d79a218fa35d4c0e7c19ffb9cd6c21a2a2c869dd/Appengine-Fixture-Loader-0.1.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "built for Darwin-15.6.0", "digests": {"md5": "1d45ea9f48f7c30e61f0a3f374d1ef43", "sha256": "ff567950c17e0ceb4a534f96712b549d84b921b8ed5995bbcec596fdcbfb4022"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.9.macosx-10.11-intel.tar.gz", "has_sig": false, "md5_digest": "1d45ea9f48f7c30e61f0a3f374d1ef43", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 6923, "upload_time": "2016-12-19T11:42:34", "upload_time_iso_8601": "2016-12-19T11:42:34.922554Z", "url": "https://files.pythonhosted.org/packages/5c/2b/1b988d9926a05120b6e6008710e9fc5dd676cabc6adfac6ccc6ae4c29a23/Appengine-Fixture-Loader-0.1.9.macosx-10.11-intel.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "c72e4153642e2bb810477c57ae243684", "sha256": "da0868215b34bcbbcf53d6d645fccace74825b49e7cb942a518fd5207f363c25"}, "downloads": -1, "filename": "Appengine-Fixture-Loader-0.1.9.tar.gz", "has_sig": false, "md5_digest": "c72e4153642e2bb810477c57ae243684", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23401, "upload_time": "2016-12-19T11:42:32", "upload_time_iso_8601": "2016-12-19T11:42:32.842276Z", "url": "https://files.pythonhosted.org/packages/93/0a/051f49a34d0d5fc7f514d79a218fa35d4c0e7c19ffb9cd6c21a2a2c869dd/Appengine-Fixture-Loader-0.1.9.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:40 2020"}