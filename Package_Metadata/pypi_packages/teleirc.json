{"info": {"author": "David Francos Cuartero", "author_email": "opensource@davidfrancos.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU General Public License (GPL)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3 :: Only"], "description": "TeleIRC - IRC<->telegram gateway\n---------------------------------\n\nNot my best proyect name, I know.\n\n.. warning:: This is a 3h project. I actually invested\n             3h in writting it all (except this readme,\n             of course).\n             It works, but it'll probably lack things\n             you want\n\n\nThis project is a telegram to irc gateway (and vice-versa)\nsimilar bitlbee + libpurple + telegram-purple setup.\n\nAfter a few hours trying to make bitlbee + telegram-libpurple\nto work on my rpi3, I decided that writing my own would probably\nbe easier (and it actually was).\n\nCurrently, you need to have telegram-cli installed, and\nthe user authenticated. Only one user per system user is allowed\nat a time, and probably port collision will happen if you do it\non multiple users (irc port is hardcoded, as well as default\nport for telegram-cli in pytg).\n\nUsage\n------\n\nUsage is pretty simple:\n\n- Install telegram_cli\n- Run telegram_cli and authenticate your user\n- Run ``teleirc``\n- Connect your irc server to localhost:6666 and join #telegram\n  channel\n\nNow, you'll see some users have a # before their names on the\n#telegram channel. That's so you can use autocomplete on\n/join to not miss the channels name, but they're not actually\nusers and talking to them directly from the #telegram channel\nwill probably work not-so-fine.\n\nAlso, I'd recommend not using #telegram channel at all except\nfor the userlist, as user responses will always go on private\nqueries...\n\nApart from that, joining, querying and receiving messages work\nas usual on IRC\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/XayOn/teleirc", "keywords": "", "license": "Apache-2", "maintainer": "", "maintainer_email": "", "name": "teleirc", "package_url": "https://pypi.org/project/teleirc/", "platform": "", "project_url": "https://pypi.org/project/teleirc/", "project_urls": {"Homepage": "https://github.com/XayOn/teleirc"}, "release_url": "https://pypi.org/project/teleirc/0.0.0/", "requires_dist": null, "requires_python": "", "summary": "Telegram IRC", "version": "0.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"teleirc-irc-telegram-gateway\">\n<h2>TeleIRC - IRC&lt;-&gt;telegram gateway</h2>\n<p>Not my best proyect name, I know.</p>\n<div>\n<p>Warning</p>\n<p>This is a 3h project. I actually invested\n3h in writting it all (except this readme,\nof course).\nIt works, but it\u2019ll probably lack things\nyou want</p>\n</div>\n<p>This project is a telegram to irc gateway (and vice-versa)\nsimilar bitlbee + libpurple + telegram-purple setup.</p>\n<p>After a few hours trying to make bitlbee + telegram-libpurple\nto work on my rpi3, I decided that writing my own would probably\nbe easier (and it actually was).</p>\n<p>Currently, you need to have telegram-cli installed, and\nthe user authenticated. Only one user per system user is allowed\nat a time, and probably port collision will happen if you do it\non multiple users (irc port is hardcoded, as well as default\nport for telegram-cli in pytg).</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Usage is pretty simple:</p>\n<ul>\n<li>Install telegram_cli</li>\n<li>Run telegram_cli and authenticate your user</li>\n<li>Run <tt>teleirc</tt></li>\n<li>Connect your irc server to localhost:6666 and join #telegram\nchannel</li>\n</ul>\n<p>Now, you\u2019ll see some users have a # before their names on the\n#telegram channel. That\u2019s so you can use autocomplete on\n/join to not miss the channels name, but they\u2019re not actually\nusers and talking to them directly from the #telegram channel\nwill probably work not-so-fine.</p>\n<p>Also, I\u2019d recommend not using #telegram channel at all except\nfor the userlist, as user responses will always go on private\nqueries\u2026</p>\n<p>Apart from that, joining, querying and receiving messages work\nas usual on IRC</p>\n</div>\n\n          </div>"}, "last_serial": 2553355, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "7b0b7d47ad5ea80373013bf94bcda97e", "sha256": "5c5594685dad66be768ed2a0bf221c6bdc1862d60eb649b471fcc8dc9f64dd91"}, "downloads": -1, "filename": "teleirc-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7b0b7d47ad5ea80373013bf94bcda97e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4743, "upload_time": "2017-01-04T10:42:32", "upload_time_iso_8601": "2017-01-04T10:42:32.994714Z", "url": "https://files.pythonhosted.org/packages/60/bf/bf234b511b4ef1085744fd9a28f2dd8550c6263cbe200078c1d5dc1a8f86/teleirc-0.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7b0b7d47ad5ea80373013bf94bcda97e", "sha256": "5c5594685dad66be768ed2a0bf221c6bdc1862d60eb649b471fcc8dc9f64dd91"}, "downloads": -1, "filename": "teleirc-0.0.0.tar.gz", "has_sig": false, "md5_digest": "7b0b7d47ad5ea80373013bf94bcda97e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4743, "upload_time": "2017-01-04T10:42:32", "upload_time_iso_8601": "2017-01-04T10:42:32.994714Z", "url": "https://files.pythonhosted.org/packages/60/bf/bf234b511b4ef1085744fd9a28f2dd8550c6263cbe200078c1d5dc1a8f86/teleirc-0.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:53 2020"}