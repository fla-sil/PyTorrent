{"info": {"author": "Kirill V. Belyayev", "author_email": "kbelyayev@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Barcode Capture\n\n## Introduction\nThis code was made to extract any barcode using your web camera.\nAs of now it utilizes `pyzbar` and `pylibdmtx` libraries. Which have their own set of\nrecognizable barcodes. Mainly, we were targeting QR codes and data matrix codes. But it will\nrecognize other popular formats supported by those libraries.\n\nUnder the hood, this code takes each frame from the camera like so\n\n![Web Camera Frame](https://raw.githubusercontent.com/Barmaley13/BarcodeCapture/master/images/barcode1.jpg)\n\nAnd detects barcode if it present.\nAnd finally provides output as a string like so\n```\noutput: Wikipedia, the free encyclopedia\n```\n\nThere is a probability that algorithm will fail during one of those steps. In such case the code will not \nproduce any output. Also, there is a small possibility that the algorithm will provide incorrect output. So keep \nthat in mind while capturing barcodes!\n\n## Requirements\nThis code has been tested on Windows machine. Most likely it will work on alternative OS but we have not\ntested it on any other OS.\n\nOtherwise, you will need:\n\n* Python 3\n* OpenCV 2\n* pyzbar\n* pylibdmtx\n* Web Camera\n\n## Easy installation\nUse pip to install this library, fast and easy!!!\n```bash\npip install barcap\n```\n\n## Manual installation\n### Install libraries\nOn Linux, you have to install some extra packages:\n```bash\nsudo apt-get install libzbar0\nsudo apt-get install libdmtx0a\n```\n\nOn MAC, that be a little different:\n```bash\nbrew install zbar\nbrew install libdmtx\n```\n\nOn Windows, everything should happen automatically. \nIf you have any dll problems, please install \n[Visual C++ Redistributable Packages for Visual Studio 2013](https://www.microsoft.com/en-US/download/details.aspx?id=40784)\nand see if that resolves those issues.\n\n### Install python packages\nYou can install requirements using\n```bash\npip install -r requirements.txt\n```\n\n## Further instructions\n* https://pypi.org/project/pyzbar/\n* https://pypi.org/project/pylibdmtx/\n\n\n## Most Basic Barcode Capture\nThis is the simplest way to get you started. Also this is the best way to make sure that your setup works properly.\nSimply run in a shell:\n\n```bash\npython -m barcap\n```\n\nWindow with your default camera is going to pop up and capture algorithm will be running in a while loop.\nIf everything is successful you will see output periodically printed out in the shell.\n\n### Manual Capture\nOnce again start while capture loop by running:\n```\n$ python -m barcap\n```\n\nFirst of all, make sure your capture window is selected.\nOnce, you have a good image in the window with barcode occupying most of the screen press `'s'` key to save this frame.\nOpen `barcode.jpg` and confirm that the frame has been written. Kill the loop by pressing `'q'` or `Esc`.\n\n#### If it does not work...\n* Do you have camera connected?\n* Is computer even on?\n* If nothing helps fix your hardware in the software!\n\nAll jokes aside most likely the libraries do not support this barcode or something wrong with a setup.\n\n### Final Thoughts\nAt this point you probably understand how my routine works so you can try modifying it if things are not working out. \n\nOtherwise, **Congratulations!!! You got it working!!!**\n \n## Importing Barcode Capture into your own python script\nIf you look closely, you will see that capture loop is inside `CaptureProcess` class based on `Process` class \nfrom `multiprocessing` module.\n\nThe idea is to run this process and capture frames from a web camera.\nNext, those frames will be processed to get desired output.\n\nYou could use this class to build your own capturing algorithm.\nFor examples, look closely at `barcode.py`, `ocr.py` and `ocr_plus.py`.\n\nAnd finally, the user of the capture process would start a process and\nget results via shared memory.\n\nHere is how you can take advantage of those in your own script.\n\nTo **create** a capture instance do following:\n```python\nfrom barcap.barcode import BarcodeCapture     \ncapture = BarcodeCapture(camera=0)\n```\n\nTo **start** capturing process:\n```python\ncapture.start()\n```\n\nTo **stop** capturing process:\n```python\ncapture.stop()\n```\nor\n```python\ncapture.terminate()\n```\n\nTo **check** if capturing is still happening:\n```python\ncapture.is_alive()\n```\n\nTo **read** decoded output:\n```python\noutput = capture.ouput\nprint(f'output: {output}')\n```\n\nTo **fetch** epoch time of the last decoding:\n```python\nimport time\n\nepoch = capture.last_epoch\ntime_stamp = time.strftime('%Y-%m-%d %H:%M:%S', time.localtime(epoch))\nprint(f'last capture: {time_stamp}')\n```\n\nYou can also check if **new** output is available\n```python\nif capture.new:\n    print(f'output: {capture.output}')\n```\nEvery time you read output it resets the `new` flag.\n\nLook closely at `main.py` to get a complete example.\n\nFinally, `device_list.py` facilitates in selecting right camera. In case\nyou might have multiple cameras connected to your computer.\n\n## Device List\nThere is a little device utility that can help you discover connected cameras to the\ncomputer. As of right now the sub package works only on Windows. Also, we decided\nthat this is optional addition so it won't be compiled by default.\n\nIn order to compile navigate to `setup.py` script and uncomment lines for the\n`WindowsDevice` extension. Reinstall `barcap` using `setup.py` script.\n\n## Additional Info and Questions\n\nShoot me email at `kirill at kbelyayev.com` if you have any questions, suggestions, improvements, additions and etc.\nI would love to help you with this script if you hire me as a contractor. I might help you free of charge if \nyou contribute to this distribution or ask politely. Beer donations are welcome too!\n\n**Good luck! Happy coding and hacking!**", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Barmaley13/barcap", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "barcap", "package_url": "https://pypi.org/project/barcap/", "platform": "", "project_url": "https://pypi.org/project/barcap/", "project_urls": {"Homepage": "https://github.com/Barmaley13/barcap"}, "release_url": "https://pypi.org/project/barcap/0.2.7/", "requires_dist": null, "requires_python": ">=3.6.0", "summary": "Extract any barcode using your web camera", "version": "0.2.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Barcode Capture</h1>\n<h2>Introduction</h2>\n<p>This code was made to extract any barcode using your web camera.\nAs of now it utilizes <code>pyzbar</code> and <code>pylibdmtx</code> libraries. Which have their own set of\nrecognizable barcodes. Mainly, we were targeting QR codes and data matrix codes. But it will\nrecognize other popular formats supported by those libraries.</p>\n<p>Under the hood, this code takes each frame from the camera like so</p>\n<p><img alt=\"Web Camera Frame\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ca9b71ddaf4230444e2a68118413b1fbd46ce54/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4261726d616c657931332f426172636f6465436170747572652f6d61737465722f696d616765732f626172636f6465312e6a7067\"></p>\n<p>And detects barcode if it present.\nAnd finally provides output as a string like so</p>\n<pre><code>output: Wikipedia, the free encyclopedia\n</code></pre>\n<p>There is a probability that algorithm will fail during one of those steps. In such case the code will not\nproduce any output. Also, there is a small possibility that the algorithm will provide incorrect output. So keep\nthat in mind while capturing barcodes!</p>\n<h2>Requirements</h2>\n<p>This code has been tested on Windows machine. Most likely it will work on alternative OS but we have not\ntested it on any other OS.</p>\n<p>Otherwise, you will need:</p>\n<ul>\n<li>Python 3</li>\n<li>OpenCV 2</li>\n<li>pyzbar</li>\n<li>pylibdmtx</li>\n<li>Web Camera</li>\n</ul>\n<h2>Easy installation</h2>\n<p>Use pip to install this library, fast and easy!!!</p>\n<pre>pip install barcap\n</pre>\n<h2>Manual installation</h2>\n<h3>Install libraries</h3>\n<p>On Linux, you have to install some extra packages:</p>\n<pre>sudo apt-get install libzbar0\nsudo apt-get install libdmtx0a\n</pre>\n<p>On MAC, that be a little different:</p>\n<pre>brew install zbar\nbrew install libdmtx\n</pre>\n<p>On Windows, everything should happen automatically.\nIf you have any dll problems, please install\n<a href=\"https://www.microsoft.com/en-US/download/details.aspx?id=40784\" rel=\"nofollow\">Visual C++ Redistributable Packages for Visual Studio 2013</a>\nand see if that resolves those issues.</p>\n<h3>Install python packages</h3>\n<p>You can install requirements using</p>\n<pre>pip install -r requirements.txt\n</pre>\n<h2>Further instructions</h2>\n<ul>\n<li><a href=\"https://pypi.org/project/pyzbar/\" rel=\"nofollow\">https://pypi.org/project/pyzbar/</a></li>\n<li><a href=\"https://pypi.org/project/pylibdmtx/\" rel=\"nofollow\">https://pypi.org/project/pylibdmtx/</a></li>\n</ul>\n<h2>Most Basic Barcode Capture</h2>\n<p>This is the simplest way to get you started. Also this is the best way to make sure that your setup works properly.\nSimply run in a shell:</p>\n<pre>python -m barcap\n</pre>\n<p>Window with your default camera is going to pop up and capture algorithm will be running in a while loop.\nIf everything is successful you will see output periodically printed out in the shell.</p>\n<h3>Manual Capture</h3>\n<p>Once again start while capture loop by running:</p>\n<pre><code>$ python -m barcap\n</code></pre>\n<p>First of all, make sure your capture window is selected.\nOnce, you have a good image in the window with barcode occupying most of the screen press <code>'s'</code> key to save this frame.\nOpen <code>barcode.jpg</code> and confirm that the frame has been written. Kill the loop by pressing <code>'q'</code> or <code>Esc</code>.</p>\n<h4>If it does not work...</h4>\n<ul>\n<li>Do you have camera connected?</li>\n<li>Is computer even on?</li>\n<li>If nothing helps fix your hardware in the software!</li>\n</ul>\n<p>All jokes aside most likely the libraries do not support this barcode or something wrong with a setup.</p>\n<h3>Final Thoughts</h3>\n<p>At this point you probably understand how my routine works so you can try modifying it if things are not working out.</p>\n<p>Otherwise, <strong>Congratulations!!! You got it working!!!</strong></p>\n<h2>Importing Barcode Capture into your own python script</h2>\n<p>If you look closely, you will see that capture loop is inside <code>CaptureProcess</code> class based on <code>Process</code> class\nfrom <code>multiprocessing</code> module.</p>\n<p>The idea is to run this process and capture frames from a web camera.\nNext, those frames will be processed to get desired output.</p>\n<p>You could use this class to build your own capturing algorithm.\nFor examples, look closely at <code>barcode.py</code>, <code>ocr.py</code> and <code>ocr_plus.py</code>.</p>\n<p>And finally, the user of the capture process would start a process and\nget results via shared memory.</p>\n<p>Here is how you can take advantage of those in your own script.</p>\n<p>To <strong>create</strong> a capture instance do following:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">barcap.barcode</span> <span class=\"kn\">import</span> <span class=\"n\">BarcodeCapture</span>     \n<span class=\"n\">capture</span> <span class=\"o\">=</span> <span class=\"n\">BarcodeCapture</span><span class=\"p\">(</span><span class=\"n\">camera</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n</pre>\n<p>To <strong>start</strong> capturing process:</p>\n<pre><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<p>To <strong>stop</strong> capturing process:</p>\n<pre><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">stop</span><span class=\"p\">()</span>\n</pre>\n<p>or</p>\n<pre><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">terminate</span><span class=\"p\">()</span>\n</pre>\n<p>To <strong>check</strong> if capturing is still happening:</p>\n<pre><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">is_alive</span><span class=\"p\">()</span>\n</pre>\n<p>To <strong>read</strong> decoded output:</p>\n<pre><span class=\"n\">output</span> <span class=\"o\">=</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">ouput</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'output: </span><span class=\"si\">{</span><span class=\"n\">output</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<p>To <strong>fetch</strong> epoch time of the last decoding:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">time</span>\n\n<span class=\"n\">epoch</span> <span class=\"o\">=</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">last_epoch</span>\n<span class=\"n\">time_stamp</span> <span class=\"o\">=</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">strftime</span><span class=\"p\">(</span><span class=\"s1\">'%Y-%m-</span><span class=\"si\">%d</span><span class=\"s1\"> %H:%M:%S'</span><span class=\"p\">,</span> <span class=\"n\">time</span><span class=\"o\">.</span><span class=\"n\">localtime</span><span class=\"p\">(</span><span class=\"n\">epoch</span><span class=\"p\">))</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'last capture: </span><span class=\"si\">{</span><span class=\"n\">time_stamp</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<p>You can also check if <strong>new</strong> output is available</p>\n<pre><span class=\"k\">if</span> <span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">new</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'output: </span><span class=\"si\">{</span><span class=\"n\">capture</span><span class=\"o\">.</span><span class=\"n\">output</span><span class=\"si\">}</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n</pre>\n<p>Every time you read output it resets the <code>new</code> flag.</p>\n<p>Look closely at <code>main.py</code> to get a complete example.</p>\n<p>Finally, <code>device_list.py</code> facilitates in selecting right camera. In case\nyou might have multiple cameras connected to your computer.</p>\n<h2>Device List</h2>\n<p>There is a little device utility that can help you discover connected cameras to the\ncomputer. As of right now the sub package works only on Windows. Also, we decided\nthat this is optional addition so it won't be compiled by default.</p>\n<p>In order to compile navigate to <code>setup.py</code> script and uncomment lines for the\n<code>WindowsDevice</code> extension. Reinstall <code>barcap</code> using <code>setup.py</code> script.</p>\n<h2>Additional Info and Questions</h2>\n<p>Shoot me email at <code>kirill at kbelyayev.com</code> if you have any questions, suggestions, improvements, additions and etc.\nI would love to help you with this script if you hire me as a contractor. I might help you free of charge if\nyou contribute to this distribution or ask politely. Beer donations are welcome too!</p>\n<p><strong>Good luck! Happy coding and hacking!</strong></p>\n\n          </div>"}, "last_serial": 6605213, "releases": {"0.1.10": [{"comment_text": "", "digests": {"md5": "0a63031ae26a3eacd86a0fa81eb8dabc", "sha256": "bad436947e5fbb1600536d6dc171da2fde77e7dce0973702b2eeee1333894ce2"}, "downloads": -1, "filename": "barcap-0.1.10.tar.gz", "has_sig": false, "md5_digest": "0a63031ae26a3eacd86a0fa81eb8dabc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 627126, "upload_time": "2019-09-26T22:11:56", "upload_time_iso_8601": "2019-09-26T22:11:56.208670Z", "url": "https://files.pythonhosted.org/packages/e9/fd/4fcfbaa6be545a00b0e78f4579b9d03435855103d2f56a1a06f7e8f4ffbe/barcap-0.1.10.tar.gz", "yanked": false}], "0.1.11": [{"comment_text": "", "digests": {"md5": "0b9b367eaa0693f4667d7f456bcd60fa", "sha256": "af29116276eebf4bba65cf8d165b9987fa4fd2a7739f3cd2c68849bc68d72ffd"}, "downloads": -1, "filename": "barcap-0.1.11-py3.6.egg", "has_sig": false, "md5_digest": "0b9b367eaa0693f4667d7f456bcd60fa", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 522743, "upload_time": "2019-09-27T17:26:54", "upload_time_iso_8601": "2019-09-27T17:26:54.125327Z", "url": "https://files.pythonhosted.org/packages/f7/09/ecc947bc8a9dc34769e05e3e5ce32782e45f4459fcc5210751a60e40519f/barcap-0.1.11-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "36885f1b698677ad2f87f61b8b0bc856", "sha256": "9e2997811a2431042f65f17b263c96dfae758c3826e55148e6506cc88079d502"}, "downloads": -1, "filename": "barcap-0.1.11.tar.gz", "has_sig": false, "md5_digest": "36885f1b698677ad2f87f61b8b0bc856", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 628237, "upload_time": "2019-09-27T17:26:56", "upload_time_iso_8601": "2019-09-27T17:26:56.398145Z", "url": "https://files.pythonhosted.org/packages/44/2b/d59e202952e5e8ba2ccc780ce5bb1ae8376484f422f05e527a99793dec72/barcap-0.1.11.tar.gz", "yanked": false}], "0.1.12": [{"comment_text": "", "digests": {"md5": "667d598c2fd137c9f9a6e0fc46a828ab", "sha256": "fafd953fc1a6b03608e064578d5c186fd042079ab50408f2102c15d09feab4fa"}, "downloads": -1, "filename": "barcap-0.1.12-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "667d598c2fd137c9f9a6e0fc46a828ab", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 541792, "upload_time": "2019-10-09T22:52:33", "upload_time_iso_8601": "2019-10-09T22:52:33.198871Z", "url": "https://files.pythonhosted.org/packages/17/2d/15e28f1dcc6d34504a2bf97f5223c811b534b7c724d4c872491d2d6af89d/barcap-0.1.12-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5031b9b6e1d64ca56137236f69b25b4d", "sha256": "bd06d93a2fb626812a2a9ba01f170bff61ee63e46384e8c69ff467e1a5ea68ee"}, "downloads": -1, "filename": "barcap-0.1.12.tar.gz", "has_sig": false, "md5_digest": "5031b9b6e1d64ca56137236f69b25b4d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 628293, "upload_time": "2019-10-09T22:52:35", "upload_time_iso_8601": "2019-10-09T22:52:35.634054Z", "url": "https://files.pythonhosted.org/packages/55/b9/0681f56ccea7cb36540016a61626698a68d6cfeb4c99ceccb050465931b7/barcap-0.1.12.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b61e27c8bf748eef9f411a3dce58b14d", "sha256": "f0c40e26e71f06853059fcc0b05385317055af03bed4d5b09c646a66e5af65bf"}, "downloads": -1, "filename": "barcap-0.1.5.tar.gz", "has_sig": false, "md5_digest": "b61e27c8bf748eef9f411a3dce58b14d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 624681, "upload_time": "2019-09-26T19:54:37", "upload_time_iso_8601": "2019-09-26T19:54:37.672552Z", "url": "https://files.pythonhosted.org/packages/a7/6b/50f01d152591389b872d1c3ff186ab454ba3439d4f85e0891e6f93be595d/barcap-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "413433f68028717d339160cd9038959d", "sha256": "5dd48e34682fe490d6191045c3cf64349c49f0a2fbdf8c2e860c473e2bddf468"}, "downloads": -1, "filename": "barcap-0.1.6-py3.6.egg", "has_sig": false, "md5_digest": "413433f68028717d339160cd9038959d", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 520785, "upload_time": "2019-09-26T20:18:58", "upload_time_iso_8601": "2019-09-26T20:18:58.301170Z", "url": "https://files.pythonhosted.org/packages/79/3b/89fb8d5296721776c15c607fc23d2b63150608ec2fd169ec0f6b12fe8163/barcap-0.1.6-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "2cbec59f25b1e2c2d3c06bc0a541943f", "sha256": "1b23b215202bb647a94779fa26c5771179935de6b0b5c71a4086c7f68e28e222"}, "downloads": -1, "filename": "barcap-0.1.6.tar.gz", "has_sig": false, "md5_digest": "2cbec59f25b1e2c2d3c06bc0a541943f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 624985, "upload_time": "2019-09-26T20:19:02", "upload_time_iso_8601": "2019-09-26T20:19:02.126136Z", "url": "https://files.pythonhosted.org/packages/5a/4a/2a5d983d32a9ac753b9dc8171500dc872d3bf386c1b790092921205a1e79/barcap-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "f312d85a261aa729afd0ba9746609db5", "sha256": "8111c28d1a49becdf1c8ef7146d62f4ae300004524e021e78a558d27fe7f124c"}, "downloads": -1, "filename": "barcap-0.1.7-py3.6.egg", "has_sig": false, "md5_digest": "f312d85a261aa729afd0ba9746609db5", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 520797, "upload_time": "2019-09-26T21:31:22", "upload_time_iso_8601": "2019-09-26T21:31:22.903532Z", "url": "https://files.pythonhosted.org/packages/02/9b/a383abc02de22fa3a9e17a0f5b1fcd77d06134baeba7d29a66200ec8bd04/barcap-0.1.7-py3.6.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "e7a2fdbee0bd108be6e894fd39d70a92", "sha256": "a758f3c479c99ed90d8fcde8dd6d46162e85462000b93e07434d6f7d5ae4c893"}, "downloads": -1, "filename": "barcap-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e7a2fdbee0bd108be6e894fd39d70a92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 625187, "upload_time": "2019-09-26T20:24:32", "upload_time_iso_8601": "2019-09-26T20:24:32.500453Z", "url": "https://files.pythonhosted.org/packages/da/b3/d3e9a9dd54452c78be1da7048bb7a3fa3a211847bb15823a599dcf255a76/barcap-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "7698e935bacb0290529e9a8b4b88d367", "sha256": "4278950ceaa7cef34406c994b2f5ad706b75f62568ab18d4c6230d161ab7d7b7"}, "downloads": -1, "filename": "barcap-0.1.8.tar.gz", "has_sig": false, "md5_digest": "7698e935bacb0290529e9a8b4b88d367", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 625235, "upload_time": "2019-09-26T21:33:21", "upload_time_iso_8601": "2019-09-26T21:33:21.511252Z", "url": "https://files.pythonhosted.org/packages/0e/d9/4c02048d0c509d3847e865c7e4a9ffe6ac03913da0b82d54e86df60531c3/barcap-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "b9731100355ed466646f9bb0b06b5949", "sha256": "79cf7dc4f1da08e35aaf48467d144a4664f818a4e163cf6f61873bca0892dcdf"}, "downloads": -1, "filename": "barcap-0.1.9.tar.gz", "has_sig": false, "md5_digest": "b9731100355ed466646f9bb0b06b5949", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 626992, "upload_time": "2019-09-26T22:06:26", "upload_time_iso_8601": "2019-09-26T22:06:26.199593Z", "url": "https://files.pythonhosted.org/packages/b2/b7/4a026821c3f5a728e9ce0c45d84cc0c0b5e738b31a0dc536ee3f7e22c5a2/barcap-0.1.9.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "cc6e39adffc7a2662068b993cc9c3905", "sha256": "fad9bc7a8264252621ec3ab4f1cefc0ddc591f079013f2ac952f5302b398065c"}, "downloads": -1, "filename": "barcap-0.2.1-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "cc6e39adffc7a2662068b993cc9c3905", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 550232, "upload_time": "2020-02-05T01:19:45", "upload_time_iso_8601": "2020-02-05T01:19:45.802129Z", "url": "https://files.pythonhosted.org/packages/b8/d2/fc9c8e959f2607fd52ba897961ad72ddb8e3c4c14873547970d2a4986601/barcap-0.2.1-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a54fea50af5f62f572590de95aaf4c8b", "sha256": "acc10d2e857a8cd79621e3e2be1ae95148f84b55beb05404a70a4132fe434723"}, "downloads": -1, "filename": "barcap-0.2.1.tar.gz", "has_sig": false, "md5_digest": "a54fea50af5f62f572590de95aaf4c8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 631224, "upload_time": "2020-02-05T01:19:48", "upload_time_iso_8601": "2020-02-05T01:19:48.031953Z", "url": "https://files.pythonhosted.org/packages/8c/b9/6dfcb415794766ae6eee245221fa58b85bcf24afc96c28da70bf906f5c18/barcap-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "f436e789823710eb48c6dfd87bb894d7", "sha256": "0beb83c23b13ea7d06f37883a6d0894dc3bf596332c13525cc0f246f8a9eda4d"}, "downloads": -1, "filename": "barcap-0.2.2-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "f436e789823710eb48c6dfd87bb894d7", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 550430, "upload_time": "2020-02-05T02:11:35", "upload_time_iso_8601": "2020-02-05T02:11:35.985689Z", "url": "https://files.pythonhosted.org/packages/44/b9/33bf95a1c4d7e73fd9ae404a0ffc95e3a2451f880b9a8f30e62b11372f6e/barcap-0.2.2-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f7b75115089eb1593e016a7eb5fe18a4", "sha256": "9277b25b61e711024712c19f9bbfabdf673574a81392b6c8d4921a7e9409f740"}, "downloads": -1, "filename": "barcap-0.2.2.tar.gz", "has_sig": false, "md5_digest": "f7b75115089eb1593e016a7eb5fe18a4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 631325, "upload_time": "2020-02-05T02:11:38", "upload_time_iso_8601": "2020-02-05T02:11:38.742908Z", "url": "https://files.pythonhosted.org/packages/d1/ee/3a7b9b6a1c5c900edd8e14632974c899109354029e2a2e4626bae54c073b/barcap-0.2.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "204f2e0e732cfb1be81e8a479fc8c71d", "sha256": "33bb52bab8fea945d0771a2c3b3b5e4bb808c41f09701b4212a12e8c3d13cfc3"}, "downloads": -1, "filename": "barcap-0.2.4-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "204f2e0e732cfb1be81e8a479fc8c71d", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 550611, "upload_time": "2020-02-05T20:31:12", "upload_time_iso_8601": "2020-02-05T20:31:12.955741Z", "url": "https://files.pythonhosted.org/packages/37/79/ef91cfb418b7b5e237ec3dc0c5bcb6d8715ddabca7d38ac1d59d0c1e3786/barcap-0.2.4-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fc57a22a455752de161e45229f118f4", "sha256": "b51dbcc531fb57b17f48fd72e54766cb29e0ebbd5cf7678f4fadb1d6f719f94e"}, "downloads": -1, "filename": "barcap-0.2.4.tar.gz", "has_sig": false, "md5_digest": "4fc57a22a455752de161e45229f118f4", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 631594, "upload_time": "2020-02-05T20:31:14", "upload_time_iso_8601": "2020-02-05T20:31:14.870952Z", "url": "https://files.pythonhosted.org/packages/74/dc/eeab5dbb5ec3bc46a7fd933531a3dbd84e2b047d330874c15584f4ea9774/barcap-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "d06487582a2b645a737974e61ba43c13", "sha256": "666626c7dede8203b3bd08ab56ab9c87ed56d26c0bc75fdc53cd462a213acfad"}, "downloads": -1, "filename": "barcap-0.2.5-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "d06487582a2b645a737974e61ba43c13", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 551602, "upload_time": "2020-02-05T20:54:45", "upload_time_iso_8601": "2020-02-05T20:54:45.197575Z", "url": "https://files.pythonhosted.org/packages/c3/2a/01660ea24028b41275dc31b45d2cf25b8fea1ea2b2c73b1643100b67ffb4/barcap-0.2.5-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "610fc9d778196ff07d401980c6d8300c", "sha256": "8d2bba966d3486c3dae50ecd34c636518208240aa39e8157eaca0debada7e88b"}, "downloads": -1, "filename": "barcap-0.2.5.tar.gz", "has_sig": false, "md5_digest": "610fc9d778196ff07d401980c6d8300c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 631781, "upload_time": "2020-02-05T20:54:46", "upload_time_iso_8601": "2020-02-05T20:54:46.998780Z", "url": "https://files.pythonhosted.org/packages/7c/35/caa9c051dc4cbe1595add7d1c4abaae15ad703df06fd654111e78380deab/barcap-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "afc8dc3962c8f0d316b7d0d3147e2e93", "sha256": "6fdcb37c2f493ca6a55583167fb5727421b4727c9e3e15205f546b220867d3ad"}, "downloads": -1, "filename": "barcap-0.2.6-py3.6-win-amd64.egg", "has_sig": false, "md5_digest": "afc8dc3962c8f0d316b7d0d3147e2e93", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": ">=3.6.0", "size": 551859, "upload_time": "2020-02-06T20:09:25", "upload_time_iso_8601": "2020-02-06T20:09:25.031014Z", "url": "https://files.pythonhosted.org/packages/16/3a/9ab6e35acc58f0137ecd7ef57e0f6b0b232d89ff6227626fa0be3460eb47/barcap-0.2.6-py3.6-win-amd64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5258ac11edd6892b011a59402d62d1e", "sha256": "808172cebaf6f7ff7fd39c782ff0faa6cc986709bbb34404681fdecd7a1e2958"}, "downloads": -1, "filename": "barcap-0.2.6.tar.gz", "has_sig": false, "md5_digest": "a5258ac11edd6892b011a59402d62d1e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 631948, "upload_time": "2020-02-06T20:09:27", "upload_time_iso_8601": "2020-02-06T20:09:27.205639Z", "url": "https://files.pythonhosted.org/packages/6a/b6/0f6722a6630e9ae23df7433945ddb771cc73913604966b0db9db4509818d/barcap-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "7d847659a63e89393eec187af86784f7", "sha256": "0169236d33b61bbfb932bbe7c0d89aab493b9c9a8511bff0794d906b7581a70c"}, "downloads": -1, "filename": "barcap-0.2.7.tar.gz", "has_sig": false, "md5_digest": "7d847659a63e89393eec187af86784f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 632454, "upload_time": "2020-02-10T22:05:18", "upload_time_iso_8601": "2020-02-10T22:05:18.696710Z", "url": "https://files.pythonhosted.org/packages/14/9d/2ca957c090f8828eaab631defb32210fb81890ebb674b081340626283d2a/barcap-0.2.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7d847659a63e89393eec187af86784f7", "sha256": "0169236d33b61bbfb932bbe7c0d89aab493b9c9a8511bff0794d906b7581a70c"}, "downloads": -1, "filename": "barcap-0.2.7.tar.gz", "has_sig": false, "md5_digest": "7d847659a63e89393eec187af86784f7", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 632454, "upload_time": "2020-02-10T22:05:18", "upload_time_iso_8601": "2020-02-10T22:05:18.696710Z", "url": "https://files.pythonhosted.org/packages/14/9d/2ca957c090f8828eaab631defb32210fb81890ebb674b081340626283d2a/barcap-0.2.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:53 2020"}