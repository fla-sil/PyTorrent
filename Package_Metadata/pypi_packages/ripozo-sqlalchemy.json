{"info": {"author": "Tim Martin", "author_email": "tim.martin@vertical-knowledge.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: GNU General Public License v2 (GPLv2)", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "ripozo-sqlalchemy\n=================\n\n.. image:: https://travis-ci.org/vertical-knowledge/ripozo-sqlalchemy.svg?branch=master&style=flat\n    :target: https://travis-ci.org/vertical-knowledge/ripozo-sqlalchemy\n    :alt: test status\n\n.. image:: https://coveralls.io/repos/vertical-knowledge/ripozo-sqlalchemy/badge.svg?branch=master&style=flat\n    :target: https://coveralls.io/r/vertical-knowledge/ripozo-sqlalchemy?branch=master\n    :alt: test coverage\n\n.. image:: https://readthedocs.org/projects/ripozo-sqlalchemy/badge/?version=latest&style=flat\n    :target: https://ripozo-sqlalchemy.readthedocs.org/\n    :alt: Documentation Status\n\n..\n    .. image:: https://pypip.in/version/ripozo-sqlalchemy/badge.svg?style=flat\n        :target: https://pypi.python.org/pypi/ripozo-sqlalchemy/\n        :alt: current version\n        \n    .. image:: https://pypip.in/d/ripozo-sqlalchemy/badge.png?style=flat\n        :target: https://crate.io/packages/ripozo-sqlalchemy/\n        :alt: Number of PyPI downloads\n\n    .. image:: https://pypip.in/py_versions/ripozo-sqlalchemy/badge.svg?style=flat\n        :target: https://pypi.python.org/pypi/ripozo-sqlalchemy/\n        :alt: python versions\n    \nThis package is a ripozo extension that provides a Manager that integrate\nSQLAlchemy with ripozo.  It provides convience functions for generating resources.\nIn particular, it focuses on creating shortcuts for CRUD type operations.  It fully\nimplements the BaseManager_ class that is provided in the\nripozo_ package.\n\n`Full Documentation <http://ripozo-sqlalchemy.readthedocs.org/en/latest/>`_\n\nExample\n=======\n\nThis is a minimal example of creating ripozo managers\nwith ripozo-sqlalchemy and integrating them with a \nresource.\n\nFirst we need to setup our SQLAlchemy model.\n\n.. code-block:: python\n\n    from ripozo import apimethod, ResourceBase\n\n    from sqlalchemy import Column, Integer, String, create_engine\n    from sqlalchemy.ext.declarative import declarative_base\n    \n    # Setup the database with sqlalchemy\n    engine = create_engine('sqlite:///:memory:', echo=True)\n    Base = declarative_base()\n    \n    # Declare your ORM model\n    class Person(Base):\n        __tablename__ = 'person'\n        id = Column(Integer, primary_key=True)\n        first_name = Column(String)\n        last_name = Column(String)\n        \n    # Sync the models wiht the database\n    Base.metadata.create_all()\n\nNow we can get to the ripozo-sqlalchemy part.\n\n.. code-block:: python\n\n    from ripozo_sqlalchemy import AlchemyManager, ScopedSessionHandler\n\n    # A session handler if responsible for getting\n    # And handling a session after either a successful or unsuccessful request\n    session_handler = ScopedSessionHandler(engine)\n    \n    # This is the code that is specific to ripozo-sqlalchemy\n    # You give it the session, a SQLAlchemy Model, and the fields\n    # You wish to serialize at a minimum.\n    class PersonManager(AlchemyManager):\n        model = Person\n        fields = ('id', 'first_name', 'last_name')\n        \n        \n    # This is the ripozo specific part.\n    # This creates a resource class that can be given\n    # to a dispatcher (e.g. the flask-ripozo package's FlaskDispatcher)\n    class PersonResource(ResourceBase):\n        manager = PersonManager(session_handler)\n        pks = ['id']\n        namespace = '/api'\n        \n        # A retrieval method that will operate on the '/api/person/<id>' route\n        # It retrieves the id, first_name, and last_name properties for the\n        # resource as identified by the url parameter id.\n        @apimethod(methods=['GET'])\n        def get_person(cls, request):\n            properties = cls.manager.retrieve(request.url_params)\n            return cls(properties=properties)\n            \nEasy Resources\n^^^^^^^^^^^^^^\n        \nAlternatively, we could use the create_resource method which\nwill automatically create a manager and resource that corresponds\nto the manager.\n\n.. code-block:: python\n\n    from ripozo import restmixins\n    from ripozo_sqlalchemy import ScopedSessionHandler, create_resource\n\n    session_handler = ScopedSessionHandler(engine)\n    PersonResource = create_resource(Person, session_handler)\n\nBy default create_resource will give you full CRUD+L (Create, Retrieve, Update, Delete, List).\nAlthough there are many options that you can pass to create_resource to modify exactly how\nthe resource class is constructed.\n\nAfter you create your resource class, you will need to load it into a dispatcher\ncorresponding to your framework.  For example, in flask-ripozo\n\n.. code-block:: python\n\n    from flask import Flask\n    from flask_ripozo import FlaskDispatcher\n    from ripozo.adapters import SirenAdapter, HalAdapter # These are the potential formats to return\n\n    app = Flask(__name__)\n    dispatcher = FlaskDispatcher(app)\n    dispatcher.register_adapters(SirenAdapter, HalAdapter)\n    dispatcher.register_resources(PersonResource)\n\n    app.run()\n    \n\n.. _BaseManager: https://ripozo.readthedocs.org/en/latest/API/ripozo.managers.html#ripozo.managers.base.BaseManager\n\n.. _ripozo: https://ripozo.readthedocs.org/\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/vertical-knowledge/ripozo-sqlalchemy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ripozo-sqlalchemy", "package_url": "https://pypi.org/project/ripozo-sqlalchemy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ripozo-sqlalchemy/", "project_urls": {"Homepage": "https://github.com/vertical-knowledge/ripozo-sqlalchemy"}, "release_url": "https://pypi.org/project/ripozo-sqlalchemy/1.0.2/", "requires_dist": null, "requires_python": "", "summary": "Integrates SQLAlchemy with ripozo to easily create sqlalchemy backed Hypermedia/HATEOAS/REST apis", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ripozo-sqlalchemy\">\n<h2>ripozo-sqlalchemy</h2>\n<a href=\"https://travis-ci.org/vertical-knowledge/ripozo-sqlalchemy\" rel=\"nofollow\"><img alt=\"test status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9c47ff1f6ca3512b6f80298f9a2172076078d4f3/68747470733a2f2f7472617669732d63692e6f72672f766572746963616c2d6b6e6f776c656467652f7269706f7a6f2d73716c616c6368656d792e7376673f6272616e63683d6d6173746572267374796c653d666c6174\"></a>\n<a href=\"https://coveralls.io/r/vertical-knowledge/ripozo-sqlalchemy?branch=master\" rel=\"nofollow\"><img alt=\"test coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70e042c359588bb9526986e412f7deb49f9d60c4/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f766572746963616c2d6b6e6f776c656467652f7269706f7a6f2d73716c616c6368656d792f62616467652e7376673f6272616e63683d6d6173746572267374796c653d666c6174\"></a>\n<a href=\"https://ripozo-sqlalchemy.readthedocs.org/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cdda1c90d383e5b5ea303d83f92c937c2152d824/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f7269706f7a6f2d73716c616c6368656d792f62616467652f3f76657273696f6e3d6c6174657374267374796c653d666c6174\"></a>\n<p>This package is a ripozo extension that provides a Manager that integrate\nSQLAlchemy with ripozo.  It provides convience functions for generating resources.\nIn particular, it focuses on creating shortcuts for CRUD type operations.  It fully\nimplements the <a href=\"https://ripozo.readthedocs.org/en/latest/API/ripozo.managers.html#ripozo.managers.base.BaseManager\" rel=\"nofollow\">BaseManager</a> class that is provided in the\n<a href=\"https://ripozo.readthedocs.org/\" rel=\"nofollow\">ripozo</a> package.</p>\n<p><a href=\"http://ripozo-sqlalchemy.readthedocs.org/en/latest/\" rel=\"nofollow\">Full Documentation</a></p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>This is a minimal example of creating ripozo managers\nwith ripozo-sqlalchemy and integrating them with a\nresource.</p>\n<p>First we need to setup our SQLAlchemy model.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ripozo</span> <span class=\"kn\">import</span> <span class=\"n\">apimethod</span><span class=\"p\">,</span> <span class=\"n\">ResourceBase</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">Column</span><span class=\"p\">,</span> <span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">String</span><span class=\"p\">,</span> <span class=\"n\">create_engine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.ext.declarative</span> <span class=\"kn\">import</span> <span class=\"n\">declarative_base</span>\n\n<span class=\"c1\"># Setup the database with sqlalchemy</span>\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s1\">'sqlite:///:memory:'</span><span class=\"p\">,</span> <span class=\"n\">echo</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"n\">Base</span> <span class=\"o\">=</span> <span class=\"n\">declarative_base</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Declare your ORM model</span>\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">Base</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'person'</span>\n    <span class=\"nb\">id</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">Integer</span><span class=\"p\">,</span> <span class=\"n\">primary_key</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">first_name</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)</span>\n    <span class=\"n\">last_name</span> <span class=\"o\">=</span> <span class=\"n\">Column</span><span class=\"p\">(</span><span class=\"n\">String</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Sync the models wiht the database</span>\n<span class=\"n\">Base</span><span class=\"o\">.</span><span class=\"n\">metadata</span><span class=\"o\">.</span><span class=\"n\">create_all</span><span class=\"p\">()</span>\n</pre>\n<p>Now we can get to the ripozo-sqlalchemy part.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ripozo_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">AlchemyManager</span><span class=\"p\">,</span> <span class=\"n\">ScopedSessionHandler</span>\n\n<span class=\"c1\"># A session handler if responsible for getting</span>\n<span class=\"c1\"># And handling a session after either a successful or unsuccessful request</span>\n<span class=\"n\">session_handler</span> <span class=\"o\">=</span> <span class=\"n\">ScopedSessionHandler</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># This is the code that is specific to ripozo-sqlalchemy</span>\n<span class=\"c1\"># You give it the session, a SQLAlchemy Model, and the fields</span>\n<span class=\"c1\"># You wish to serialize at a minimum.</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonManager</span><span class=\"p\">(</span><span class=\"n\">AlchemyManager</span><span class=\"p\">):</span>\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Person</span>\n    <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"s1\">'id'</span><span class=\"p\">,</span> <span class=\"s1\">'first_name'</span><span class=\"p\">,</span> <span class=\"s1\">'last_name'</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># This is the ripozo specific part.</span>\n<span class=\"c1\"># This creates a resource class that can be given</span>\n<span class=\"c1\"># to a dispatcher (e.g. the flask-ripozo package's FlaskDispatcher)</span>\n<span class=\"k\">class</span> <span class=\"nc\">PersonResource</span><span class=\"p\">(</span><span class=\"n\">ResourceBase</span><span class=\"p\">):</span>\n    <span class=\"n\">manager</span> <span class=\"o\">=</span> <span class=\"n\">PersonManager</span><span class=\"p\">(</span><span class=\"n\">session_handler</span><span class=\"p\">)</span>\n    <span class=\"n\">pks</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n    <span class=\"n\">namespace</span> <span class=\"o\">=</span> <span class=\"s1\">'/api'</span>\n\n    <span class=\"c1\"># A retrieval method that will operate on the '/api/person/&lt;id&gt;' route</span>\n    <span class=\"c1\"># It retrieves the id, first_name, and last_name properties for the</span>\n    <span class=\"c1\"># resource as identified by the url parameter id.</span>\n    <span class=\"nd\">@apimethod</span><span class=\"p\">(</span><span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_person</span><span class=\"p\">(</span><span class=\"bp\">cls</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n        <span class=\"n\">properties</span> <span class=\"o\">=</span> <span class=\"bp\">cls</span><span class=\"o\">.</span><span class=\"n\">manager</span><span class=\"o\">.</span><span class=\"n\">retrieve</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">url_params</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">cls</span><span class=\"p\">(</span><span class=\"n\">properties</span><span class=\"o\">=</span><span class=\"n\">properties</span><span class=\"p\">)</span>\n</pre>\n<div id=\"easy-resources\">\n<h3>Easy Resources</h3>\n<p>Alternatively, we could use the create_resource method which\nwill automatically create a manager and resource that corresponds\nto the manager.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">ripozo</span> <span class=\"kn\">import</span> <span class=\"n\">restmixins</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ripozo_sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"n\">ScopedSessionHandler</span><span class=\"p\">,</span> <span class=\"n\">create_resource</span>\n\n<span class=\"n\">session_handler</span> <span class=\"o\">=</span> <span class=\"n\">ScopedSessionHandler</span><span class=\"p\">(</span><span class=\"n\">engine</span><span class=\"p\">)</span>\n<span class=\"n\">PersonResource</span> <span class=\"o\">=</span> <span class=\"n\">create_resource</span><span class=\"p\">(</span><span class=\"n\">Person</span><span class=\"p\">,</span> <span class=\"n\">session_handler</span><span class=\"p\">)</span>\n</pre>\n<p>By default create_resource will give you full CRUD+L (Create, Retrieve, Update, Delete, List).\nAlthough there are many options that you can pass to create_resource to modify exactly how\nthe resource class is constructed.</p>\n<p>After you create your resource class, you will need to load it into a dispatcher\ncorresponding to your framework.  For example, in flask-ripozo</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_ripozo</span> <span class=\"kn\">import</span> <span class=\"n\">FlaskDispatcher</span>\n<span class=\"kn\">from</span> <span class=\"nn\">ripozo.adapters</span> <span class=\"kn\">import</span> <span class=\"n\">SirenAdapter</span><span class=\"p\">,</span> <span class=\"n\">HalAdapter</span> <span class=\"c1\"># These are the potential formats to return</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"n\">dispatcher</span> <span class=\"o\">=</span> <span class=\"n\">FlaskDispatcher</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n<span class=\"n\">dispatcher</span><span class=\"o\">.</span><span class=\"n\">register_adapters</span><span class=\"p\">(</span><span class=\"n\">SirenAdapter</span><span class=\"p\">,</span> <span class=\"n\">HalAdapter</span><span class=\"p\">)</span>\n<span class=\"n\">dispatcher</span><span class=\"o\">.</span><span class=\"n\">register_resources</span><span class=\"p\">(</span><span class=\"n\">PersonResource</span><span class=\"p\">)</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2035050, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "5e577907b319f8fef2299e2541cf9d01", "sha256": "91d35224a60c13d1c0e2ff4fa18df4004ec8430d9babed210771f0f84e4c3587"}, "downloads": -1, "filename": "ripozo-sqlalchemy-0.1.0.tar.gz", "has_sig": false, "md5_digest": "5e577907b319f8fef2299e2541cf9d01", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4376, "upload_time": "2015-03-06T20:22:16", "upload_time_iso_8601": "2015-03-06T20:22:16.703711Z", "url": "https://files.pythonhosted.org/packages/d7/d8/0f5caf9447a3526c7f6aa5efec00ecff3b69f88503d08197cdd7458cdb63/ripozo-sqlalchemy-0.1.0.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "87132911112ebf7bcda78278cb9f40c5", "sha256": "8f791cf805f0fb0d0e9485abc2828e619b0739561d3f452db05627f7cadab983"}, "downloads": -1, "filename": "ripozo-sqlalchemy-0.1.5.zip", "has_sig": false, "md5_digest": "87132911112ebf7bcda78278cb9f40c5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15980, "upload_time": "2015-04-28T21:23:58", "upload_time_iso_8601": "2015-04-28T21:23:58.910821Z", "url": "https://files.pythonhosted.org/packages/21/c5/53539a103941463ae70f60ffe6d39ad6515ecb0055240b5641425be9e783/ripozo-sqlalchemy-0.1.5.zip", "yanked": false}], "0.1.6b1": [{"comment_text": "", "digests": {"md5": "bc7f0fd61306f7ff4b7a6fdd01a626ed", "sha256": "56866a079c39b28eaa0f7465d0eb292015f8d847d4ad225de3431663211ff36a"}, "downloads": -1, "filename": "ripozo-sqlalchemy-0.1.6b1.zip", "has_sig": false, "md5_digest": "bc7f0fd61306f7ff4b7a6fdd01a626ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16096, "upload_time": "2015-06-04T14:47:43", "upload_time_iso_8601": "2015-06-04T14:47:43.747881Z", "url": "https://files.pythonhosted.org/packages/5a/89/5173d40c9f4574213fa259cdfeea0aeabc6a1cb3c707022ee73962a6854c/ripozo-sqlalchemy-0.1.6b1.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "224c87618734f9902d3715c7f89e8f7b", "sha256": "9cc893f109663f4f7f918dade809a4f55384c06e054d0e9560cef78391d3509b"}, "downloads": -1, "filename": "ripozo-sqlalchemy-0.2.0.zip", "has_sig": false, "md5_digest": "224c87618734f9902d3715c7f89e8f7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17319, "upload_time": "2015-06-08T21:32:45", "upload_time_iso_8601": "2015-06-08T21:32:45.399487Z", "url": "https://files.pythonhosted.org/packages/d6/f7/2b578e92736e1b98c692fcc4b82a078b86b1868e80a53441da20c3ab42dd/ripozo-sqlalchemy-0.2.0.zip", "yanked": false}], "0.2.0b1": [{"comment_text": "", "digests": {"md5": "0bb9333d9b31717db75895423637fe0c", "sha256": "f60111a59c1e4a44406b23801997958cdbe605e28a9cff62e050d1f1e1968a4b"}, "downloads": -1, "filename": "ripozo-sqlalchemy-0.2.0b1.zip", "has_sig": false, "md5_digest": "0bb9333d9b31717db75895423637fe0c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17394, "upload_time": "2015-06-05T19:42:30", "upload_time_iso_8601": "2015-06-05T19:42:30.935486Z", "url": "https://files.pythonhosted.org/packages/02/e5/0295b49f71b7f0ff0f50af82691702307f3cf8a7f12b4692cc9237203518/ripozo-sqlalchemy-0.2.0b1.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ba7c5550e7eb267f26185b61ef10c12d", "sha256": "6b75e01f60c472c1e13ac8a80ccd3bdc7eaf9be0a96a672e9ecec77dde1c4f7b"}, "downloads": -1, "filename": "ripozo-sqlalchemy-1.0.0.zip", "has_sig": false, "md5_digest": "ba7c5550e7eb267f26185b61ef10c12d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26369, "upload_time": "2015-06-30T17:30:39", "upload_time_iso_8601": "2015-06-30T17:30:39.077393Z", "url": "https://files.pythonhosted.org/packages/84/a1/fedad2a713613faa6c3f9d3f60fcea4aeb4c3bdaab0b71cc720b46d4b5c1/ripozo-sqlalchemy-1.0.0.zip", "yanked": false}], "1.0.0b1": [{"comment_text": "", "digests": {"md5": "416d16c48ea9ae7e13673cc6676285bb", "sha256": "c6abe9c64311681283c39937838a6c106ed51008a1bee97fbd8e94a72ffb2a1e"}, "downloads": -1, "filename": "ripozo-sqlalchemy-1.0.0b1.zip", "has_sig": false, "md5_digest": "416d16c48ea9ae7e13673cc6676285bb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26414, "upload_time": "2015-06-30T02:51:55", "upload_time_iso_8601": "2015-06-30T02:51:55.368407Z", "url": "https://files.pythonhosted.org/packages/53/85/7ec1b7f7f166d94738468dffe4c3bb7b6e0476f80c8e9637c3442b88a6d5/ripozo-sqlalchemy-1.0.0b1.zip", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "240bc527c94e114587f66f0a35acea1c", "sha256": "056156f14072a539b6bc599c5c6c9c13825b514966a6571d6e3a4904331367d6"}, "downloads": -1, "filename": "ripozo-sqlalchemy-1.0.1.zip", "has_sig": false, "md5_digest": "240bc527c94e114587f66f0a35acea1c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26734, "upload_time": "2015-12-02T01:24:30", "upload_time_iso_8601": "2015-12-02T01:24:30.355950Z", "url": "https://files.pythonhosted.org/packages/fb/7d/7f915ae98c928fdd6409dd26d9f97561958543cde9348aa839c1d4ae7627/ripozo-sqlalchemy-1.0.1.zip", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b803e5856e7035d41ba987375b93f8ef", "sha256": "a72288f6faf90808978d256c3b657cc973b813060eafbfdd51c64d86c18727cc"}, "downloads": -1, "filename": "ripozo-sqlalchemy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b803e5856e7035d41ba987375b93f8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9323, "upload_time": "2016-03-30T00:29:17", "upload_time_iso_8601": "2016-03-30T00:29:17.238288Z", "url": "https://files.pythonhosted.org/packages/e4/87/00c2f0e2a3589e035c06bd53227077ebba673b3b1f7cf033a75730b066d8/ripozo-sqlalchemy-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b803e5856e7035d41ba987375b93f8ef", "sha256": "a72288f6faf90808978d256c3b657cc973b813060eafbfdd51c64d86c18727cc"}, "downloads": -1, "filename": "ripozo-sqlalchemy-1.0.2.tar.gz", "has_sig": false, "md5_digest": "b803e5856e7035d41ba987375b93f8ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9323, "upload_time": "2016-03-30T00:29:17", "upload_time_iso_8601": "2016-03-30T00:29:17.238288Z", "url": "https://files.pythonhosted.org/packages/e4/87/00c2f0e2a3589e035c06bd53227077ebba673b3b1f7cf033a75730b066d8/ripozo-sqlalchemy-1.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:28 2020"}