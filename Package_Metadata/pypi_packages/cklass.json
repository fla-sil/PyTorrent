{"info": {"author": "Artur Tamborski", "author_email": "tamborskiartur@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3", "Topic :: Software Development"], "description": "## cklass\n\n**Hierarchical config loader from files and env variables to class.**\n\nThis module takes care of loading configuration files, secret files \nand environment variables to single configuration class without a hassle!\n\n\n### Features:\n\n- easy to use (just one function!) and configure\n- comes with sane defaults\n- logical hierarchical order of importance\n- supports infinite number of file formats via custom format loaders\n- automatic lookup of config and secret files in specified directories\n\n\n### Constraints:\n\n- all keys are case-insensitive\n\n\n### Installation\n```bash\npip install cklass\n```\n\n### Usage\n\nAll you have to do is to create a class and call function\n`cklass.load_config()` with it as an argument.\n\n\n#### Case Sensitivity\n\nClass name (and nested classes which represent dictionaries)\nhave to be upper-cased or title-cased, eg. `Config` or `CONFIG`\nwill work, but `config` won't.\n\nAll variables that you want to search and match have to be upper-cased.\nThis also means that all keys are **not** case sensitive.\n\nFor example:\n```yaml\n# config.yaml\nlogin:    'this will be ignored'\npassword: 'this will be ignored'\n\nuSER:\n    logIN: 'pi'\n    paSSwoRD: 'raspberry'\n```\n```yaml\n# secret.yaml\nUser:\n    # this will overwrite `logIN` and `pasSSwoRD` from above\n    login: 'root' \n    password: 'yrrebpsar'\n```\n```bash\n# env variable\nEXPORT USER__PASSWORD='mytopsecretpassword'\n```\n```python\n# python\nimport cklass \n\nclass User:\n    LOGIN = 'this string will be overwritten'\n    password = 'this will NOT be overwritten'\n    Password = 'this will NOT be overwritten'\n    PASSWORD = 'default password, will be overwritten'\n\n    other_variable_kinda_like_private = 42\n\ncklass.load_config(User)\n``` \n\n\n#### Hierarchy\n\nEvery class-level keys have to be nested in top-level dictionary named\nsame as the class. Only class attributes will be overwritten,\nthere is _no_ possibility to add new attributes only by defining\nthem in configuration files.\n\nEach class loaded by `cklass.load_config()` will have it's attributes\noverwritten according to order specified below:\n\n1. All values defined in class code are considered as default\n2. Function will look for first config file with filename defined in \n`_config_filename` and found in `_config_filepath` list of dirs \nwill be taken into account and overwrite the values set in (1).\n3. Function will look for first secret file with filename defined in \n`_secret_filename` and found in `_secret_filepath` list of dirs \nwill be taken into account and overwrite the values set in (1) and (2).\n4. Function will look for matching environment variables of type `str`\nwith optional prefix defined in `_environ_prefix` and overwrite the values\nset in (1), (2) and (3).\n\n\n```python\n# python\nimport cklass\n\n# any name will work\nclass Config:\n\n    PATH_TO_SOMETHING = '/etc/default/path/'\n\n    class User:\n        NAME  = ''\n        EMAIL = ''\n        PASS  = ''\n\n    DEBUG = False\n\n    class SERVER:\n      OPEN_PORTS = ['80']\n\n    SECRET_KEY = ''\n\n    _type_safe = True\n    _environ_prefix = 'MYAPP'\n    _config_filename = 'config.yaml'\n    _secret_filename = 'secret.json'\n    _config_filepath = ['/etc/myapp/conf/']\n    _secret_filepath = ['.']\n    _format_loaders  = {\n        'json': ['jsonlib',  'read'],\n        'yaml': ['metayaml', 'read'],\n    }\n\n\ncklass.load_config(Config)\n```\n```yaml\n# config.yaml\nconfig:\n    path-to-something: /etc/app/\n    debug: True\n\n    server:\n      open-ports:\n        - '22'\n        - '80'\n        - '443'\n```\n```yaml\n# secret.yaml\nconfig:\n    user:\n        name: Your Secret Name\n        email: example@example.com\n```\n```bash\n# envvars.sh\nexport MYAPP__CONFIG__SECRET_KEY=\"supersecretkey\"\nexport MYAPP__CONFIG__USER__PASS=\"secretpassword\"\n```\n\n\n#### Default Values\n\nEvery class passed to `cklass.load_config()` can define below variables with appropriate\ntype for some manipulating it's behaviour.\n\nAll values specified below are considered as default. Any of these variables can be omitted.\n\n\n##### Type Safety\n\n```python\n_type_safe = True\n```\nThis will compare and ensure that all keys overwritten in config/secret file have the same\ntype as the variables defined in class except `None`. If set to `False` this check \nwill be skipped.\nExample:  \n`Config.VALIDATE_ME = True` will match only `bool` type from config file.  \n`Config.DOESNT_MATTER = None` will match any type from config file and environment variable\n`CONFIG__DOESNT_MATTER`.\n\n\n##### Environment Prefix\n\n```python\n_environ_prefix = ''\n```\nThis allows you to define custom environment variable prefix to act as a namespace.\nYou could for example set this to `'MYAPP'` which would cause to look up only\nenvironment variables starting with such prefix, like `MYAPP__CONFIG__HOME_DIR`.\nClass and nesting is defined with two underscores `__`, hence key names may contain\nonly single underscores - eg. `CORRECT_NAME`, `INCORRECT___NAME`.\n\nEnvironment variables support three types: bool converted from string `TRUE` / `FALSE`,\nnumbers converted from string with numbers and string if two previous conversions failed.\n\n\n##### Config / Secret File Names\n\n```python\n_config_filename = 'config.yaml'\n_secret_filename = 'secret.yaml'\n```\nFile name of the config. Extension has to match the defined one in `_format_loaders`.\n\n\n##### Config / Secret File Paths\n\n```python\n_config_filepath = ['.']\n_secret_filepath = ['.']\n```\nList of paths where function will look for `_config__filename` and `_secret_filename`.\nFor example, You could change it to `['~', '.']` which would cause the function to \nsearch for `config.yaml` in `$HOME/config.yaml` and then in `$PWD/config.yaml`.\nOnly the first file which will be successfully opened will be taken into account.\n\n\n##### Format Loaders\n```python\n_format_loaders  = {\n    'ini':  ['ini',  'load'],\n    'json': ['json', 'load'],\n    'toml': ['toml', 'load'],\n    'yaml': ['yaml', 'safe_load'],\n}\n```\n\nFormat loaders consists of a nested dictionary with key matching file extension\nand value defined as a two-element list. Default format loader enables the usage\nof `ini`, `json`, `toml` and `yaml` file types.\nIn order for this to work you need to have installed appropriate python packages\nspecified in the list.  \nExample: `yaml: ['metayaml', 'read']` says that for any config/secret file\nwith `yaml` extension will be loaded via `read` function defined in `metayaml` module.\n\n\n#### Real-Live Example\n\nSee [examples](https://github.com/arturtamborski/cklass/tree/master/examples) directory.\n\n```python\n# config.py\nimport cklass\n\nclass Root:\n    _environ_prefix = 'SIMPLEWEBAPP'\n    _config_filepath = ['./conf']\n    _secret_filepath = ['./conf']\n\nclass Common(Root):\n    NAME = 'Simple Web App'\n    DEBUG = True\n    DATE = ''\n\n    BASE_DIR = '/app'\n    SRC_DIR = './src'\n\n    ALLOWED_HOSTS = []\n\n    class Secret:\n        KEY = ''\n\n    _config_filename = 'common.yaml'\n    _secret_filename = 'common.json'\n\nclass Database(Root):\n    ENGINE = 'sqlite3'\n    HOST = 'localhost'\n    NAME = 'simplewebapp_db'\n    PORT = 1111\n\n    class Credentials:\n        USER = 'readonly'\n        PASS = 'readonly'\n\n    _config_filename = 'database.yaml'\n    _secret_filename = 'database.json'\n\ncklass.load_config(Common)\ncklass.load_config(Database)\n\n\nprint(f'''\nCommon:\n    NAME = '{Common.NAME}'\n    DEBUG = {Common.DEBUG}\n    DATE = '{Common.DATE}'\n\n    BASE_DIR = '{Common.BASE_DIR}'\n    SRC_DIR = '.{Common.SRC_DIR}'\n\n    ALLOWED_HOSTS = {Common.ALLOWED_HOSTS}\n\n    Secret:\n        KEY = '{Common.Secret.KEY}'\n\n\nDatabase:\n    ENGINE = '{Database.ENGINE}'\n    HOST = '{Database.HOST}'\n    NAME = '{Database.NAME}'\n    PORT = {Database.PORT}\n\n    Credentials:\n        USER = {Database.Credentials.USER}'\n        PASS = '{Database.Credentials.PASS}'\n''')\n``` \n```yaml\n# conf/common.yaml \nCommon:\n  debug: no\n  allowed-hosts:\n    - 'localhost'\n    - '127.0.0.1'\n    - 'mydomain.local'\n```\n```json\n# conf/common.json\n{\n  \"Common\": {\n    \"Secret\": {\n      \"key\": \"AAAAAAAA\"\n    }\n  }\n} \n``` \n```yaml\n# conf/database.yaml\nDatabase:\n  engine: postgresql\n  host: psql://localhost\n``` \n```json\n# conf/database.json\n{\n  \"database\": {\n    \"credentials\": {\n      \"user\": \"dbuser\",\n      \"pass\": \"pbpass\"\n    }\n  }\n} \n``` \n```bash\n# conf/environment.sh\n#!/bin/bash\n\nexport SIMPLEWEBAPP__COMMON__DEBUG=TRUE\nexport SIMPLEWEBAPP__COMMON__DATE=\"$(date)\"\nexport SIMPLEWEBAPP__COMMON__SECRET__KEY=\"seckey\"\n\nexport SIMPLEWEBAPP__DATABASE__PORT=6621\nexport SIMPLEWEBAPP__DATABASE__CREDENTIALS__PASS=\"supersecretdbpass\"\n```\n\n##### Result\n```bash\nsource conf/environment.sh\npython3 config.py\n```\n```python\nCommon:\n    NAME = 'Simple Web App'\n\n    # overwritten in conf/common.yaml\n    # then overwritten by environment variable\n    DEBUG = True\n\n    # overwritten by environment variable\n    DATE = 'Mon Apr 15 12:35:39 CEST 2019'\n\n    BASE_DIR = '/app'\n    SRC_DIR = './src'\n\n    # overwritten in conf/common.yaml\n    ALLOWED_HOSTS = ['localhost', '127.0.0.1', 'mydomain.local']\n\n    class Secret:\n        # overwritten in conf/common.json\n        # then overwritten by environment variable\n        KEY = 'seckey'\n\nDatabase:\n    # overwritten in conf/database.yaml\n    ENGINE = 'postgresql'\n    HOST = 'psql://localhost'\n    NAME = 'simplewebapp_db'\n\n    # overwritten by environment variable\n    PORT = 6621\n\n    class Credentials:\n        # overwritten in conf/database.json\n        USER = 'dbuser'\n\n        # overwritten in conf/database.json\n        # then overwritten by environment variable\n        PASS = 'supersecretdbpass'\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/arturtamborski/cklass/archive/0.0.8.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/arturtamborski/cklass", "keywords": "configuration config loader", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cklass", "package_url": "https://pypi.org/project/cklass/", "platform": "", "project_url": "https://pypi.org/project/cklass/", "project_urls": {"Download": "https://github.com/arturtamborski/cklass/archive/0.0.8.tar.gz", "Homepage": "https://github.com/arturtamborski/cklass"}, "release_url": "https://pypi.org/project/cklass/0.0.8/", "requires_dist": null, "requires_python": "", "summary": "Python module for loading config from files and env variables to class", "version": "0.0.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>cklass</h2>\n<p><strong>Hierarchical config loader from files and env variables to class.</strong></p>\n<p>This module takes care of loading configuration files, secret files\nand environment variables to single configuration class without a hassle!</p>\n<h3>Features:</h3>\n<ul>\n<li>easy to use (just one function!) and configure</li>\n<li>comes with sane defaults</li>\n<li>logical hierarchical order of importance</li>\n<li>supports infinite number of file formats via custom format loaders</li>\n<li>automatic lookup of config and secret files in specified directories</li>\n</ul>\n<h3>Constraints:</h3>\n<ul>\n<li>all keys are case-insensitive</li>\n</ul>\n<h3>Installation</h3>\n<pre>pip install cklass\n</pre>\n<h3>Usage</h3>\n<p>All you have to do is to create a class and call function\n<code>cklass.load_config()</code> with it as an argument.</p>\n<h4>Case Sensitivity</h4>\n<p>Class name (and nested classes which represent dictionaries)\nhave to be upper-cased or title-cased, eg. <code>Config</code> or <code>CONFIG</code>\nwill work, but <code>config</code> won't.</p>\n<p>All variables that you want to search and match have to be upper-cased.\nThis also means that all keys are <strong>not</strong> case sensitive.</p>\n<p>For example:</p>\n<pre><span class=\"c1\"># config.yaml</span>\n<span class=\"nt\">login</span><span class=\"p\">:</span>    <span class=\"s\">'this</span><span class=\"nv\"> </span><span class=\"s\">will</span><span class=\"nv\"> </span><span class=\"s\">be</span><span class=\"nv\"> </span><span class=\"s\">ignored'</span>\n<span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"s\">'this</span><span class=\"nv\"> </span><span class=\"s\">will</span><span class=\"nv\"> </span><span class=\"s\">be</span><span class=\"nv\"> </span><span class=\"s\">ignored'</span>\n\n<span class=\"nt\">uSER</span><span class=\"p\">:</span>\n    <span class=\"nt\">logIN</span><span class=\"p\">:</span> <span class=\"s\">'pi'</span>\n    <span class=\"nt\">paSSwoRD</span><span class=\"p\">:</span> <span class=\"s\">'raspberry'</span>\n</pre>\n<pre><span class=\"c1\"># secret.yaml</span>\n<span class=\"nt\">User</span><span class=\"p\">:</span>\n    <span class=\"c1\"># this will overwrite `logIN` and `pasSSwoRD` from above</span>\n    <span class=\"nt\">login</span><span class=\"p\">:</span> <span class=\"s\">'root'</span> \n    <span class=\"nt\">password</span><span class=\"p\">:</span> <span class=\"s\">'yrrebpsar'</span>\n</pre>\n<pre><span class=\"c1\"># env variable</span>\nEXPORT <span class=\"nv\">USER__PASSWORD</span><span class=\"o\">=</span><span class=\"s1\">'mytopsecretpassword'</span>\n</pre>\n<pre><span class=\"c1\"># python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cklass</span> \n\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">:</span>\n    <span class=\"n\">LOGIN</span> <span class=\"o\">=</span> <span class=\"s1\">'this string will be overwritten'</span>\n    <span class=\"n\">password</span> <span class=\"o\">=</span> <span class=\"s1\">'this will NOT be overwritten'</span>\n    <span class=\"n\">Password</span> <span class=\"o\">=</span> <span class=\"s1\">'this will NOT be overwritten'</span>\n    <span class=\"n\">PASSWORD</span> <span class=\"o\">=</span> <span class=\"s1\">'default password, will be overwritten'</span>\n\n    <span class=\"n\">other_variable_kinda_like_private</span> <span class=\"o\">=</span> <span class=\"mi\">42</span>\n\n<span class=\"n\">cklass</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">User</span><span class=\"p\">)</span>\n</pre>\n<h4>Hierarchy</h4>\n<p>Every class-level keys have to be nested in top-level dictionary named\nsame as the class. Only class attributes will be overwritten,\nthere is <em>no</em> possibility to add new attributes only by defining\nthem in configuration files.</p>\n<p>Each class loaded by <code>cklass.load_config()</code> will have it's attributes\noverwritten according to order specified below:</p>\n<ol>\n<li>All values defined in class code are considered as default</li>\n<li>Function will look for first config file with filename defined in\n<code>_config_filename</code> and found in <code>_config_filepath</code> list of dirs\nwill be taken into account and overwrite the values set in (1).</li>\n<li>Function will look for first secret file with filename defined in\n<code>_secret_filename</code> and found in <code>_secret_filepath</code> list of dirs\nwill be taken into account and overwrite the values set in (1) and (2).</li>\n<li>Function will look for matching environment variables of type <code>str</code>\nwith optional prefix defined in <code>_environ_prefix</code> and overwrite the values\nset in (1), (2) and (3).</li>\n</ol>\n<pre><span class=\"c1\"># python</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cklass</span>\n\n<span class=\"c1\"># any name will work</span>\n<span class=\"k\">class</span> <span class=\"nc\">Config</span><span class=\"p\">:</span>\n\n    <span class=\"n\">PATH_TO_SOMETHING</span> <span class=\"o\">=</span> <span class=\"s1\">'/etc/default/path/'</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">:</span>\n        <span class=\"n\">NAME</span>  <span class=\"o\">=</span> <span class=\"s1\">''</span>\n        <span class=\"n\">EMAIL</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n        <span class=\"n\">PASS</span>  <span class=\"o\">=</span> <span class=\"s1\">''</span>\n\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">False</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">SERVER</span><span class=\"p\">:</span>\n      <span class=\"n\">OPEN_PORTS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'80'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">SECRET_KEY</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n\n    <span class=\"n\">_type_safe</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">_environ_prefix</span> <span class=\"o\">=</span> <span class=\"s1\">'MYAPP'</span>\n    <span class=\"n\">_config_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'config.yaml'</span>\n    <span class=\"n\">_secret_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'secret.json'</span>\n    <span class=\"n\">_config_filepath</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'/etc/myapp/conf/'</span><span class=\"p\">]</span>\n    <span class=\"n\">_secret_filepath</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.'</span><span class=\"p\">]</span>\n    <span class=\"n\">_format_loaders</span>  <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s1\">'json'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'jsonlib'</span><span class=\"p\">,</span>  <span class=\"s1\">'read'</span><span class=\"p\">],</span>\n        <span class=\"s1\">'yaml'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'metayaml'</span><span class=\"p\">,</span> <span class=\"s1\">'read'</span><span class=\"p\">],</span>\n    <span class=\"p\">}</span>\n\n\n<span class=\"n\">cklass</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">Config</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># config.yaml</span>\n<span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">path-to-something</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">/etc/app/</span>\n    <span class=\"nt\">debug</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">True</span>\n\n    <span class=\"nt\">server</span><span class=\"p\">:</span>\n      <span class=\"nt\">open-ports</span><span class=\"p\">:</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"s\">'22'</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"s\">'80'</span>\n        <span class=\"p p-Indicator\">-</span> <span class=\"s\">'443'</span>\n</pre>\n<pre><span class=\"c1\"># secret.yaml</span>\n<span class=\"nt\">config</span><span class=\"p\">:</span>\n    <span class=\"nt\">user</span><span class=\"p\">:</span>\n        <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">Your Secret Name</span>\n        <span class=\"nt\">email</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">example@example.com</span>\n</pre>\n<pre><span class=\"c1\"># envvars.sh</span>\n<span class=\"nb\">export</span> <span class=\"nv\">MYAPP__CONFIG__SECRET_KEY</span><span class=\"o\">=</span><span class=\"s2\">\"supersecretkey\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">MYAPP__CONFIG__USER__PASS</span><span class=\"o\">=</span><span class=\"s2\">\"secretpassword\"</span>\n</pre>\n<h4>Default Values</h4>\n<p>Every class passed to <code>cklass.load_config()</code> can define below variables with appropriate\ntype for some manipulating it's behaviour.</p>\n<p>All values specified below are considered as default. Any of these variables can be omitted.</p>\n<h5>Type Safety</h5>\n<pre><span class=\"n\">_type_safe</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n</pre>\n<p>This will compare and ensure that all keys overwritten in config/secret file have the same\ntype as the variables defined in class except <code>None</code>. If set to <code>False</code> this check\nwill be skipped.\nExample:<br>\n<code>Config.VALIDATE_ME = True</code> will match only <code>bool</code> type from config file.<br>\n<code>Config.DOESNT_MATTER = None</code> will match any type from config file and environment variable\n<code>CONFIG__DOESNT_MATTER</code>.</p>\n<h5>Environment Prefix</h5>\n<pre><span class=\"n\">_environ_prefix</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n</pre>\n<p>This allows you to define custom environment variable prefix to act as a namespace.\nYou could for example set this to <code>'MYAPP'</code> which would cause to look up only\nenvironment variables starting with such prefix, like <code>MYAPP__CONFIG__HOME_DIR</code>.\nClass and nesting is defined with two underscores <code>__</code>, hence key names may contain\nonly single underscores - eg. <code>CORRECT_NAME</code>, <code>INCORRECT___NAME</code>.</p>\n<p>Environment variables support three types: bool converted from string <code>TRUE</code> / <code>FALSE</code>,\nnumbers converted from string with numbers and string if two previous conversions failed.</p>\n<h5>Config / Secret File Names</h5>\n<pre><span class=\"n\">_config_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'config.yaml'</span>\n<span class=\"n\">_secret_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'secret.yaml'</span>\n</pre>\n<p>File name of the config. Extension has to match the defined one in <code>_format_loaders</code>.</p>\n<h5>Config / Secret File Paths</h5>\n<pre><span class=\"n\">_config_filepath</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.'</span><span class=\"p\">]</span>\n<span class=\"n\">_secret_filepath</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.'</span><span class=\"p\">]</span>\n</pre>\n<p>List of paths where function will look for <code>_config__filename</code> and <code>_secret_filename</code>.\nFor example, You could change it to <code>['~', '.']</code> which would cause the function to\nsearch for <code>config.yaml</code> in <code>$HOME/config.yaml</code> and then in <code>$PWD/config.yaml</code>.\nOnly the first file which will be successfully opened will be taken into account.</p>\n<h5>Format Loaders</h5>\n<pre><span class=\"n\">_format_loaders</span>  <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'ini'</span><span class=\"p\">:</span>  <span class=\"p\">[</span><span class=\"s1\">'ini'</span><span class=\"p\">,</span>  <span class=\"s1\">'load'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'json'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'json'</span><span class=\"p\">,</span> <span class=\"s1\">'load'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'toml'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'toml'</span><span class=\"p\">,</span> <span class=\"s1\">'load'</span><span class=\"p\">],</span>\n    <span class=\"s1\">'yaml'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"s1\">'yaml'</span><span class=\"p\">,</span> <span class=\"s1\">'safe_load'</span><span class=\"p\">],</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Format loaders consists of a nested dictionary with key matching file extension\nand value defined as a two-element list. Default format loader enables the usage\nof <code>ini</code>, <code>json</code>, <code>toml</code> and <code>yaml</code> file types.\nIn order for this to work you need to have installed appropriate python packages\nspecified in the list.<br>\nExample: <code>yaml: ['metayaml', 'read']</code> says that for any config/secret file\nwith <code>yaml</code> extension will be loaded via <code>read</code> function defined in <code>metayaml</code> module.</p>\n<h4>Real-Live Example</h4>\n<p>See <a href=\"https://github.com/arturtamborski/cklass/tree/master/examples\" rel=\"nofollow\">examples</a> directory.</p>\n<pre><span class=\"c1\"># config.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cklass</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Root</span><span class=\"p\">:</span>\n    <span class=\"n\">_environ_prefix</span> <span class=\"o\">=</span> <span class=\"s1\">'SIMPLEWEBAPP'</span>\n    <span class=\"n\">_config_filepath</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'./conf'</span><span class=\"p\">]</span>\n    <span class=\"n\">_secret_filepath</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'./conf'</span><span class=\"p\">]</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Common</span><span class=\"p\">(</span><span class=\"n\">Root</span><span class=\"p\">):</span>\n    <span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'Simple Web App'</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n    <span class=\"n\">DATE</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n\n    <span class=\"n\">BASE_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'/app'</span>\n    <span class=\"n\">SRC_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'./src'</span>\n\n    <span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[]</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Secret</span><span class=\"p\">:</span>\n        <span class=\"n\">KEY</span> <span class=\"o\">=</span> <span class=\"s1\">''</span>\n\n    <span class=\"n\">_config_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'common.yaml'</span>\n    <span class=\"n\">_secret_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'common.json'</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Database</span><span class=\"p\">(</span><span class=\"n\">Root</span><span class=\"p\">):</span>\n    <span class=\"n\">ENGINE</span> <span class=\"o\">=</span> <span class=\"s1\">'sqlite3'</span>\n    <span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"s1\">'localhost'</span>\n    <span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'simplewebapp_db'</span>\n    <span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">1111</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Credentials</span><span class=\"p\">:</span>\n        <span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"s1\">'readonly'</span>\n        <span class=\"n\">PASS</span> <span class=\"o\">=</span> <span class=\"s1\">'readonly'</span>\n\n    <span class=\"n\">_config_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'database.yaml'</span>\n    <span class=\"n\">_secret_filename</span> <span class=\"o\">=</span> <span class=\"s1\">'database.json'</span>\n\n<span class=\"n\">cklass</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">Common</span><span class=\"p\">)</span>\n<span class=\"n\">cklass</span><span class=\"o\">.</span><span class=\"n\">load_config</span><span class=\"p\">(</span><span class=\"n\">Database</span><span class=\"p\">)</span>\n\n\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s1\">'''</span>\n<span class=\"s1\">Common:</span>\n<span class=\"s1\">    NAME = '</span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">    DEBUG = </span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">DEBUG</span><span class=\"si\">}</span><span class=\"s1\"></span>\n<span class=\"s1\">    DATE = '</span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">DATE</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n\n<span class=\"s1\">    BASE_DIR = '</span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">BASE_DIR</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">    SRC_DIR = '.</span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">SRC_DIR</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n\n<span class=\"s1\">    ALLOWED_HOSTS = </span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">ALLOWED_HOSTS</span><span class=\"si\">}</span><span class=\"s1\"></span>\n\n<span class=\"s1\">    Secret:</span>\n<span class=\"s1\">        KEY = '</span><span class=\"si\">{</span><span class=\"n\">Common</span><span class=\"o\">.</span><span class=\"n\">Secret</span><span class=\"o\">.</span><span class=\"n\">KEY</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n\n\n<span class=\"s1\">Database:</span>\n<span class=\"s1\">    ENGINE = '</span><span class=\"si\">{</span><span class=\"n\">Database</span><span class=\"o\">.</span><span class=\"n\">ENGINE</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">    HOST = '</span><span class=\"si\">{</span><span class=\"n\">Database</span><span class=\"o\">.</span><span class=\"n\">HOST</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">    NAME = '</span><span class=\"si\">{</span><span class=\"n\">Database</span><span class=\"o\">.</span><span class=\"n\">NAME</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">    PORT = </span><span class=\"si\">{</span><span class=\"n\">Database</span><span class=\"o\">.</span><span class=\"n\">PORT</span><span class=\"si\">}</span><span class=\"s1\"></span>\n\n<span class=\"s1\">    Credentials:</span>\n<span class=\"s1\">        USER = </span><span class=\"si\">{</span><span class=\"n\">Database</span><span class=\"o\">.</span><span class=\"n\">Credentials</span><span class=\"o\">.</span><span class=\"n\">USER</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">        PASS = '</span><span class=\"si\">{</span><span class=\"n\">Database</span><span class=\"o\">.</span><span class=\"n\">Credentials</span><span class=\"o\">.</span><span class=\"n\">PASS</span><span class=\"si\">}</span><span class=\"s1\">'</span>\n<span class=\"s1\">'''</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"c1\"># conf/common.yaml </span>\n<span class=\"nt\">Common</span><span class=\"p\">:</span>\n  <span class=\"nt\">debug</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">no</span>\n  <span class=\"nt\">allowed-hosts</span><span class=\"p\">:</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">'localhost'</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">'127.0.0.1'</span>\n    <span class=\"p p-Indicator\">-</span> <span class=\"s\">'mydomain.local'</span>\n</pre>\n<pre><span class=\"err\">#</span> <span class=\"err\">conf/common.json</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"Common\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"Secret\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"key\"</span><span class=\"p\">:</span> <span class=\"s2\">\"AAAAAAAA\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span> \n</pre>\n<pre><span class=\"c1\"># conf/database.yaml</span>\n<span class=\"nt\">Database</span><span class=\"p\">:</span>\n  <span class=\"nt\">engine</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">postgresql</span>\n  <span class=\"nt\">host</span><span class=\"p\">:</span> <span class=\"l l-Scalar l-Scalar-Plain\">psql://localhost</span>\n</pre>\n<pre><span class=\"err\">#</span> <span class=\"err\">conf/database.json</span>\n<span class=\"p\">{</span>\n  <span class=\"nt\">\"database\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n    <span class=\"nt\">\"credentials\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n      <span class=\"nt\">\"user\"</span><span class=\"p\">:</span> <span class=\"s2\">\"dbuser\"</span><span class=\"p\">,</span>\n      <span class=\"nt\">\"pass\"</span><span class=\"p\">:</span> <span class=\"s2\">\"pbpass\"</span>\n    <span class=\"p\">}</span>\n  <span class=\"p\">}</span>\n<span class=\"p\">}</span> \n</pre>\n<pre><span class=\"c1\"># conf/environment.sh</span>\n<span class=\"c1\">#!/bin/bash</span>\n\n<span class=\"nb\">export</span> <span class=\"nv\">SIMPLEWEBAPP__COMMON__DEBUG</span><span class=\"o\">=</span>TRUE\n<span class=\"nb\">export</span> <span class=\"nv\">SIMPLEWEBAPP__COMMON__DATE</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"k\">$(</span>date<span class=\"k\">)</span><span class=\"s2\">\"</span>\n<span class=\"nb\">export</span> <span class=\"nv\">SIMPLEWEBAPP__COMMON__SECRET__KEY</span><span class=\"o\">=</span><span class=\"s2\">\"seckey\"</span>\n\n<span class=\"nb\">export</span> <span class=\"nv\">SIMPLEWEBAPP__DATABASE__PORT</span><span class=\"o\">=</span><span class=\"m\">6621</span>\n<span class=\"nb\">export</span> <span class=\"nv\">SIMPLEWEBAPP__DATABASE__CREDENTIALS__PASS</span><span class=\"o\">=</span><span class=\"s2\">\"supersecretdbpass\"</span>\n</pre>\n<h5>Result</h5>\n<pre><span class=\"nb\">source</span> conf/environment.sh\npython3 config.py\n</pre>\n<pre><span class=\"n\">Common</span><span class=\"p\">:</span>\n    <span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'Simple Web App'</span>\n\n    <span class=\"c1\"># overwritten in conf/common.yaml</span>\n    <span class=\"c1\"># then overwritten by environment variable</span>\n    <span class=\"n\">DEBUG</span> <span class=\"o\">=</span> <span class=\"kc\">True</span>\n\n    <span class=\"c1\"># overwritten by environment variable</span>\n    <span class=\"n\">DATE</span> <span class=\"o\">=</span> <span class=\"s1\">'Mon Apr 15 12:35:39 CEST 2019'</span>\n\n    <span class=\"n\">BASE_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'/app'</span>\n    <span class=\"n\">SRC_DIR</span> <span class=\"o\">=</span> <span class=\"s1\">'./src'</span>\n\n    <span class=\"c1\"># overwritten in conf/common.yaml</span>\n    <span class=\"n\">ALLOWED_HOSTS</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"s1\">'127.0.0.1'</span><span class=\"p\">,</span> <span class=\"s1\">'mydomain.local'</span><span class=\"p\">]</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Secret</span><span class=\"p\">:</span>\n        <span class=\"c1\"># overwritten in conf/common.json</span>\n        <span class=\"c1\"># then overwritten by environment variable</span>\n        <span class=\"n\">KEY</span> <span class=\"o\">=</span> <span class=\"s1\">'seckey'</span>\n\n<span class=\"n\">Database</span><span class=\"p\">:</span>\n    <span class=\"c1\"># overwritten in conf/database.yaml</span>\n    <span class=\"n\">ENGINE</span> <span class=\"o\">=</span> <span class=\"s1\">'postgresql'</span>\n    <span class=\"n\">HOST</span> <span class=\"o\">=</span> <span class=\"s1\">'psql://localhost'</span>\n    <span class=\"n\">NAME</span> <span class=\"o\">=</span> <span class=\"s1\">'simplewebapp_db'</span>\n\n    <span class=\"c1\"># overwritten by environment variable</span>\n    <span class=\"n\">PORT</span> <span class=\"o\">=</span> <span class=\"mi\">6621</span>\n\n    <span class=\"k\">class</span> <span class=\"nc\">Credentials</span><span class=\"p\">:</span>\n        <span class=\"c1\"># overwritten in conf/database.json</span>\n        <span class=\"n\">USER</span> <span class=\"o\">=</span> <span class=\"s1\">'dbuser'</span>\n\n        <span class=\"c1\"># overwritten in conf/database.json</span>\n        <span class=\"c1\"># then overwritten by environment variable</span>\n        <span class=\"n\">PASS</span> <span class=\"o\">=</span> <span class=\"s1\">'supersecretdbpass'</span>\n</pre>\n\n          </div>"}, "last_serial": 5245996, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3587f11b22d8eb74b91896493adc6f20", "sha256": "08502de174a88ee90f9d5e092a7fc543bbb3e62bf02bd03e5fd7df6e89d4a87c"}, "downloads": -1, "filename": "cklass-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3587f11b22d8eb74b91896493adc6f20", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 5860, "upload_time": "2019-04-15T10:54:45", "upload_time_iso_8601": "2019-04-15T10:54:45.671258Z", "url": "https://files.pythonhosted.org/packages/77/07/0be2b3eb0cc984578dec52f99045728f44f154e9d601b0b440147f34609a/cklass-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6579d11ebcafb26b05702417f50a694f", "sha256": "ce608bfcc4565a6dfb25901e009ba7c5ec533b8dc20e1791e64adb6784fbfdd8"}, "downloads": -1, "filename": "cklass-0.0.1.tar.gz", "has_sig": false, "md5_digest": "6579d11ebcafb26b05702417f50a694f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5814, "upload_time": "2019-04-15T10:54:47", "upload_time_iso_8601": "2019-04-15T10:54:47.578186Z", "url": "https://files.pythonhosted.org/packages/fe/f8/292c7e98475e1b8123344124f5e53babae8efbe79c5be849516d29535057/cklass-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "4fe6680759aaadaebd966819ffeccfde", "sha256": "f57993c4eb3a77319a113686fdd3774e3c8cf7b4697c828dfcc2acafd1156a37"}, "downloads": -1, "filename": "cklass-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4fe6680759aaadaebd966819ffeccfde", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5888, "upload_time": "2019-04-16T07:05:52", "upload_time_iso_8601": "2019-04-16T07:05:52.550871Z", "url": "https://files.pythonhosted.org/packages/06/eb/ce38e1fa32e1b50eebfd622a99bbb81337b1a5a3294afccbd6890ea70c82/cklass-0.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4d9e2df572538eac0e221e3a78a5b332", "sha256": "49f4bde4cc10b6b23feb9a28002989aec98e6048a99330d207db46c156963b06"}, "downloads": -1, "filename": "cklass-0.0.2.tar.gz", "has_sig": false, "md5_digest": "4d9e2df572538eac0e221e3a78a5b332", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5841, "upload_time": "2019-04-16T07:05:53", "upload_time_iso_8601": "2019-04-16T07:05:53.836185Z", "url": "https://files.pythonhosted.org/packages/17/1a/7e56115a77d411384ef767182037a74156b5311df6f4c0005dc572e7eed5/cklass-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "eb2ddeb05074cc4daee628988c76af3e", "sha256": "9b67cd76aaaf6ad3d8fe283aeafbd7fe8c8e3e9d64050aa8185e2f880fde6844"}, "downloads": -1, "filename": "cklass-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "eb2ddeb05074cc4daee628988c76af3e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6022, "upload_time": "2019-04-16T07:55:51", "upload_time_iso_8601": "2019-04-16T07:55:51.522160Z", "url": "https://files.pythonhosted.org/packages/69/41/f989c5af11368336ea9a3855aeae5297284bebde3bb8f73cced4f60f5f93/cklass-0.0.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "61472b44a4cfcfb28526fb33c2a6d48e", "sha256": "3010a8ef1bcbf4c3b2a673f92a3a500d9d22599d43164792e0b74a84d624ea84"}, "downloads": -1, "filename": "cklass-0.0.3.tar.gz", "has_sig": false, "md5_digest": "61472b44a4cfcfb28526fb33c2a6d48e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5978, "upload_time": "2019-04-16T07:55:52", "upload_time_iso_8601": "2019-04-16T07:55:52.958765Z", "url": "https://files.pythonhosted.org/packages/b6/15/fc47b35467203d4f68eb8d13533f7b58a5bf26a1b17ed27ffcff5c3fadad/cklass-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "ab971bcb2ecd77c6eb7debb6b967559b", "sha256": "099b9d734af305fbf9109f50b0b08a58ef9ec01342f83ac08823959dceb2d13f"}, "downloads": -1, "filename": "cklass-0.0.4.tar.gz", "has_sig": false, "md5_digest": "ab971bcb2ecd77c6eb7debb6b967559b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5973, "upload_time": "2019-04-23T01:55:52", "upload_time_iso_8601": "2019-04-23T01:55:52.891964Z", "url": "https://files.pythonhosted.org/packages/d5/63/146c348de12ab0ca0299255d5343d633d77cd39ee08b52097032ef3b7fa7/cklass-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "9143049fc5cc01a3be924507e159c525", "sha256": "3ba1bc244eb7eb7af1c24bad56b2541f38e1bc000ec249e77ba18753ed0d46cb"}, "downloads": -1, "filename": "cklass-0.0.5.tar.gz", "has_sig": false, "md5_digest": "9143049fc5cc01a3be924507e159c525", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5970, "upload_time": "2019-04-23T02:02:50", "upload_time_iso_8601": "2019-04-23T02:02:50.050929Z", "url": "https://files.pythonhosted.org/packages/61/9e/246c07174a94653c6afa619c04fdd1e75f498bf2f0aae1ae21f7f16ce33e/cklass-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "8e15f95034d7ab112c9812f99967c746", "sha256": "5b39ad7d6b830190506f22c04a5d4c4672a98b5e409b6a173b0e2f0f968d87d1"}, "downloads": -1, "filename": "cklass-0.0.6-py3-none-any.whl", "has_sig": false, "md5_digest": "8e15f95034d7ab112c9812f99967c746", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6019, "upload_time": "2019-04-23T02:12:48", "upload_time_iso_8601": "2019-04-23T02:12:48.513047Z", "url": "https://files.pythonhosted.org/packages/cd/3d/1630c58bdf695064c2178f2e35bd0972a3727cb7d833c0fbecbd120e28e8/cklass-0.0.6-py3-none-any.whl", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "7a108cc11f60ae998466c3e5d8902b79", "sha256": "9054b291277b6bb3954d50c444a174b1f87054bdf9b9a8577c2f83280065cc9b"}, "downloads": -1, "filename": "cklass-0.0.7-py3-none-any.whl", "has_sig": false, "md5_digest": "7a108cc11f60ae998466c3e5d8902b79", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6206, "upload_time": "2019-05-07T17:44:00", "upload_time_iso_8601": "2019-05-07T17:44:00.654309Z", "url": "https://files.pythonhosted.org/packages/79/c2/14b4de2266e29c9fbb21abd6fccb357a0249340f85626d8ad6ad35977bed/cklass-0.0.7-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5bdf5500db3df71a6968f2f775eb9f96", "sha256": "7812efd0b69ca02face23d2d422d43c51711ede50ba0fe946afa7bfa075d9287"}, "downloads": -1, "filename": "cklass-0.0.7.tar.gz", "has_sig": false, "md5_digest": "5bdf5500db3df71a6968f2f775eb9f96", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6154, "upload_time": "2019-05-07T17:44:02", "upload_time_iso_8601": "2019-05-07T17:44:02.171747Z", "url": "https://files.pythonhosted.org/packages/68/e7/dc485a991569a9257def1ec511a8a1bfa573c51b607a37b30d9194c847f1/cklass-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "4bdbc57a99b623a3880d1af23adc40ab", "sha256": "19799598bd1fac68803e00531a78be01200f492fbc9baf34429b99c7799a5303"}, "downloads": -1, "filename": "cklass-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "4bdbc57a99b623a3880d1af23adc40ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6190, "upload_time": "2019-05-09T07:21:58", "upload_time_iso_8601": "2019-05-09T07:21:58.052391Z", "url": "https://files.pythonhosted.org/packages/03/7d/bfe9e65e4788514614c17d7be295e392778f3467aa90f74412f99430f904/cklass-0.0.8-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4bdbc57a99b623a3880d1af23adc40ab", "sha256": "19799598bd1fac68803e00531a78be01200f492fbc9baf34429b99c7799a5303"}, "downloads": -1, "filename": "cklass-0.0.8-py3-none-any.whl", "has_sig": false, "md5_digest": "4bdbc57a99b623a3880d1af23adc40ab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6190, "upload_time": "2019-05-09T07:21:58", "upload_time_iso_8601": "2019-05-09T07:21:58.052391Z", "url": "https://files.pythonhosted.org/packages/03/7d/bfe9e65e4788514614c17d7be295e392778f3467aa90f74412f99430f904/cklass-0.0.8-py3-none-any.whl", "yanked": false}], "timestamp": "Thu May  7 22:19:12 2020"}