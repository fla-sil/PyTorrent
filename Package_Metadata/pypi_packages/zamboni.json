{"info": {"author": "Greg Troszak", "author_email": "gdtroszak@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "Zamboni: NHL play-by-play scraping\n==================================\n\nOverview\n--------\n\nZamboni makes it easy to scrape play-by-play data from National Hockey League\n(NHL) games.\n\nWant to scrape all of the plays from a game that's already been played? No\nproblem.\n\nWhat about a game that's currently being played? Yeah, it can do that to - it\nwill 'stream' them for you.\n\nWhat if you only want to grab plays from games that happened on a specific\ndate? Or involved a specific team? Sure thing. It's simple to filter games\nbased on attributes.\n\nUsage\n-----\n\n    import zamboni\n\n    # Grab all of the games in a season\n    season = zamboni.get_season('20152016')\n\n    # Filter the games that have been played \n    played_games = season.played_games()\n\n    # Get the play-by-play data for all of the played games\n    for game in played_games:\n        game.get_plays()\n\n    # Do something with the play-by-play data...\n    print(played_games[0].plays)\n\nYou can also grab a single game directly if you know the game id.\n\n    game = zamboni.get_game('2015020578')\n\nIf the game has been played it will grab all of the play-by-play data for the game. If it hasn't been played...\n\nInstallation\n------------\n\n    pip install zamboni\n\nContribute\n----------\n\nPlease do!", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gdtroszak/zamboni", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "zamboni", "package_url": "https://pypi.org/project/zamboni/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zamboni/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/gdtroszak/zamboni"}, "release_url": "https://pypi.org/project/zamboni/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Scrape play-by-play data from NHL games with ease.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Zamboni: NHL play-by-play scraping<br>==================================<br><br>Overview<br>--------<br><br>Zamboni makes it easy to scrape play-by-play data from National Hockey League<br>(NHL) games.<br><br>Want to scrape all of the plays from a game that's already been played? No<br>problem.<br><br>What about a game that's currently being played? Yeah, it can do that to - it<br>will 'stream' them for you.<br><br>What if you only want to grab plays from games that happened on a specific<br>date? Or involved a specific team? Sure thing. It's simple to filter games<br>based on attributes.<br><br>Usage<br>-----<br><br>    import zamboni<br><br>    # Grab all of the games in a season<br>    season = zamboni.get_season('20152016')<br><br>    # Filter the games that have been played <br>    played_games = season.played_games()<br><br>    # Get the play-by-play data for all of the played games<br>    for game in played_games:<br>        game.get_plays()<br><br>    # Do something with the play-by-play data...<br>    print(played_games[0].plays)<br><br>You can also grab a single game directly if you know the game id.<br><br>    game = zamboni.get_game('2015020578')<br><br>If the game has been played it will grab all of the play-by-play data for the game. If it hasn't been played...<br><br>Installation<br>------------<br><br>    pip install zamboni<br><br>Contribute<br>----------<br><br>Please do!\n          </div>"}, "last_serial": 2027163, "releases": {"0.0.1": []}, "urls": [], "timestamp": "Fri May  8 03:19:55 2020"}