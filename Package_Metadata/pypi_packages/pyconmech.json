{"info": {"author": "Yijiang Huang", "author_email": "yijiangh@mit.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: Microsoft :: Windows", "Operating System :: Unix", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Scientific/Engineering"], "description": "=======\nconmech\n=======\n\n\n\n.. Write project description\n\n**conmech** is a stiffness checker that performs elastic deformation analysis for 3D frame structures. \nIt is designed for construction sequencing applications, which involves testing\nthe partially assembled structure (subset of element permutation) many times.\n\n**conmech** is written in C++11 and wrapped friendly with Python via `pybind11 <https://github.com/pybind/pybind11>`_.\n\nInstallation\n------------\n\n::\n\n  pip install pyconmech\n\n\nBuild from source\n-----------------\n\nBuild python bindings\n^^^^^^^^^^^^^^^^^^^^^\n\nPrerequisites\n\"\"\"\"\"\"\"\"\"\"\"\"\"\n\nThe following dependencies come from pybind11 for building the python wrappers.\n\n**On Unix (Linux, OS X)**\n\n* A compiler with C++11 support\n* CMake >= 3.1\n\n**On Windows**\n\n* Visual Studio 2015 (required for all Python versions, see notes below)\n* CMake >= 3.1\n\nThen, clone this repository and pip install.\n\n::\n\n  cd conmech\n  python pip install .\n  # or python3\n\nWith the ``setup.py`` file included in the base folder, the pip install command will invoke CMake and build the pybind11 module as specified in CMakeLists.txt.\n\n**Note:**\n\n*conmech*'s python bindings are built with a CMake-based build system via pybind11.\nTake a look at `cmake_example for pybind11 <https://github.com/pybind/cmake_example>`_ \nif you want to learn more about this.\n\n*conmech* depends on `Eigen <http://eigen.tuxfamily.org/index.php?title=Main_Page>`_ for linear algebra \nand `nlohmann::json <https://github.com/nlohmann/json>`_ \nfor json (de-)serialization, both of which are handled automatically by cmake for downloading.\n\nBuild C++ code\n^^^^^^^^^^^^^^\n\n::\n\n  mkdir build\n  cd build\n  cmake ..\n  make -j2 # Unix\n\nOr on Windows, replace the last line with\n\n::\n\n  cmake --build .\n\n\n=========\nChangelog\n=========\n\nAll notable changes to this project will be documented in this file.\n\nThe format is based on `Keep a Changelog <https://keepachangelog.com/en/1.0.0/>`_\nand this project adheres to `Semantic Versioning <https://semver.org/spec/v2.0.0.html>`_.\n\n0.4.3\n-----------\n\n**Changed**\n\n- Changed ``-DCONMECH_BUILD_TESTS=OFF`` in ``setup_cmake_utils.py`` to disable cpp test building in ``python setup.py build``\n\n0.4.0\n-----------\n\n**Added**\n\n- Added ``StiffnessChecker`` class method, directly construct from frame data, without saving data to a temp json\n- Added some initial cpp unit tests, test data fed in by CMake and tests organized by ``Catch2``\n\n**Changed**\n\n- Changed ``rapidjson`` to ``nlohmann::json``\n\n**Removed**\n\n- Removed the `Frame` data structure in Stiffness checker's cpp backend\n- Removed all the git submodule and used CMake download external instead\n\n**Fixed**\n\n- Fixed the memory leak caused by the smart pointer cycle dependency in ``Frame``\n\n0.3.1\n----------\n\n**Added**\n\n- Added unit tests for `std::throw` in parsing material properties\n\n0.3.0\n----------\n\n**Changed**\n\n- Changed `try/catch` in the C++ file parsing to `std::throw` \n\n0.2.0\n-----\n\n**Changed**\n\n- The original ``stiffness_checker`` extension module is wrapper as ``_stiffness_checker``.\n  All the cpp modules are wrapper under a top-level python classes/functions, to give more\n  flexibility.\n- **API change**: ``stiffness_checker`` class is renamed to ``StiffnessChecker`` to conform\n    to the class naming convention. All other APIs within this class are left unchanged.\n- Delete ``radius`` entry from ``material_properties``.\n\n\n**Added**\n\n- documentation is hosted on readthedocs!\n- add grasshopper examples - parse/save files, karamba comparsion, solve/get result in GH via ghpython-remote\n- supports material / cross sectional properties for each element. \n- supports uniformly distributed load\n- add gravity magnitude and direction\n\n0.1.0\n-----\n\nInitial version", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yijiangh/conmech", "keywords": "3D frame analysis,Finite Element Analysis,Structural Analysis", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "pyconmech", "package_url": "https://pypi.org/project/pyconmech/", "platform": "", "project_url": "https://pypi.org/project/pyconmech/", "project_urls": {"Homepage": "https://github.com/yijiangh/conmech"}, "release_url": "https://pypi.org/project/pyconmech/0.4.3/", "requires_dist": null, "requires_python": "", "summary": "py bindings for conmech: a C++ lib for 3D frame elastis deformation analysis.", "version": "0.4.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"conmech\">\n<h2>conmech</h2>\n<p><strong>conmech</strong> is a stiffness checker that performs elastic deformation analysis for 3D frame structures.\nIt is designed for construction sequencing applications, which involves testing\nthe partially assembled structure (subset of element permutation) many times.</p>\n<p><strong>conmech</strong> is written in C++11 and wrapped friendly with Python via <a href=\"https://github.com/pybind/pybind11\" rel=\"nofollow\">pybind11</a>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre>pip install pyconmech\n</pre>\n</div>\n<div id=\"build-from-source\">\n<h3>Build from source</h3>\n<div id=\"build-python-bindings\">\n<h4>Build python bindings</h4>\n<h4 id=\"prerequisites\"><span class=\"section-subtitle\">Prerequisites</span></h4>\n<p>The following dependencies come from pybind11 for building the python wrappers.</p>\n<p><strong>On Unix (Linux, OS X)</strong></p>\n<ul>\n<li>A compiler with C++11 support</li>\n<li>CMake &gt;= 3.1</li>\n</ul>\n<p><strong>On Windows</strong></p>\n<ul>\n<li>Visual Studio 2015 (required for all Python versions, see notes below)</li>\n<li>CMake &gt;= 3.1</li>\n</ul>\n<p>Then, clone this repository and pip install.</p>\n<pre>cd conmech\npython pip install .\n# or python3\n</pre>\n<p>With the <tt>setup.py</tt> file included in the base folder, the pip install command will invoke CMake and build the pybind11 module as specified in CMakeLists.txt.</p>\n<p><strong>Note:</strong></p>\n<p><em>conmech</em>\u2019s python bindings are built with a CMake-based build system via pybind11.\nTake a look at <a href=\"https://github.com/pybind/cmake_example\" rel=\"nofollow\">cmake_example for pybind11</a>\nif you want to learn more about this.</p>\n<p><em>conmech</em> depends on <a href=\"http://eigen.tuxfamily.org/index.php?title=Main_Page\" rel=\"nofollow\">Eigen</a> for linear algebra\nand <a href=\"https://github.com/nlohmann/json\" rel=\"nofollow\">nlohmann::json</a>\nfor json (de-)serialization, both of which are handled automatically by cmake for downloading.</p>\n</div>\n<div id=\"build-c-code\">\n<h4>Build C++ code</h4>\n<pre>mkdir build\ncd build\ncmake ..\nmake -j2 # Unix\n</pre>\n<p>Or on Windows, replace the last line with</p>\n<pre>cmake --build .\n</pre>\n</div>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>All notable changes to this project will be documented in this file.</p>\n<p>The format is based on <a href=\"https://keepachangelog.com/en/1.0.0/\" rel=\"nofollow\">Keep a Changelog</a>\nand this project adheres to <a href=\"https://semver.org/spec/v2.0.0.html\" rel=\"nofollow\">Semantic Versioning</a>.</p>\n<div id=\"id1\">\n<h3>0.4.3</h3>\n<p><strong>Changed</strong></p>\n<ul>\n<li>Changed <tt><span class=\"pre\">-DCONMECH_BUILD_TESTS=OFF</span></tt> in <tt>setup_cmake_utils.py</tt> to disable cpp test building in <tt>python setup.py build</tt></li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4.0</h3>\n<p><strong>Added</strong></p>\n<ul>\n<li>Added <tt>StiffnessChecker</tt> class method, directly construct from frame data, without saving data to a temp json</li>\n<li>Added some initial cpp unit tests, test data fed in by CMake and tests organized by <tt>Catch2</tt></li>\n</ul>\n<p><strong>Changed</strong></p>\n<ul>\n<li>Changed <tt>rapidjson</tt> to <tt><span class=\"pre\">nlohmann::json</span></tt></li>\n</ul>\n<p><strong>Removed</strong></p>\n<ul>\n<li>Removed the <cite>Frame</cite> data structure in Stiffness checker\u2019s cpp backend</li>\n<li>Removed all the git submodule and used CMake download external instead</li>\n</ul>\n<p><strong>Fixed</strong></p>\n<ul>\n<li>Fixed the memory leak caused by the smart pointer cycle dependency in <tt>Frame</tt></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.3.1</h3>\n<p><strong>Added</strong></p>\n<ul>\n<li>Added unit tests for <cite>std::throw</cite> in parsing material properties</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.3.0</h3>\n<p><strong>Changed</strong></p>\n<ul>\n<li>Changed <cite>try/catch</cite> in the C++ file parsing to <cite>std::throw</cite></li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.0</h3>\n<p><strong>Changed</strong></p>\n<ul>\n<li>The original <tt>stiffness_checker</tt> extension module is wrapper as <tt>_stiffness_checker</tt>.\nAll the cpp modules are wrapper under a top-level python classes/functions, to give more\nflexibility.</li>\n<li><dl>\n<dt><strong>API change</strong>: <tt>stiffness_checker</tt> class is renamed to <tt>StiffnessChecker</tt> to conform</dt>\n<dd>to the class naming convention. All other APIs within this class are left unchanged.</dd>\n</dl>\n</li>\n<li>Delete <tt>radius</tt> entry from <tt>material_properties</tt>.</li>\n</ul>\n<p><strong>Added</strong></p>\n<ul>\n<li>documentation is hosted on readthedocs!</li>\n<li>add grasshopper examples - parse/save files, karamba comparsion, solve/get result in GH via ghpython-remote</li>\n<li>supports material / cross sectional properties for each element.</li>\n<li>supports uniformly distributed load</li>\n<li>add gravity magnitude and direction</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.0</h3>\n<p>Initial version</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6745474, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "1bf8154d7fa01bb6e197d0f3725634d5", "sha256": "423a17187513b1e23abfbba0ae3ca1789c6be4e156b104c4a46c713070235239"}, "downloads": -1, "filename": "pyconmech-0.1.1-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "1bf8154d7fa01bb6e197d0f3725634d5", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 192017, "upload_time": "2019-07-25T18:46:46", "upload_time_iso_8601": "2019-07-25T18:46:46.661095Z", "url": "https://files.pythonhosted.org/packages/fb/6e/112d567c97144d9d418beb2396af48afabead828706b2552919f8a27524b/pyconmech-0.1.1-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1122ae4c8404dde871e0c9c36c616f80", "sha256": "199aa18bc6f47c8fe160cdbdd5153adcbadb650564cd43455a9712d46a93ccd2"}, "downloads": -1, "filename": "pyconmech-0.1.1.tar.gz", "has_sig": false, "md5_digest": "1122ae4c8404dde871e0c9c36c616f80", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3832290, "upload_time": "2019-07-25T18:46:49", "upload_time_iso_8601": "2019-07-25T18:46:49.920803Z", "url": "https://files.pythonhosted.org/packages/f0/6e/86183d190996988bc84e8f54e82eda2c6a84768987b7c254ca7e38980f05/pyconmech-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "e9c16fd13e6872500967a6586d1e919b", "sha256": "5007f66cd553b30915e1a2bc59cbd558ec32f76e41d25c8a4298f539e32134a2"}, "downloads": -1, "filename": "pyconmech-0.1.2.tar.gz", "has_sig": false, "md5_digest": "e9c16fd13e6872500967a6586d1e919b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16648761, "upload_time": "2019-08-15T04:42:19", "upload_time_iso_8601": "2019-08-15T04:42:19.463925Z", "url": "https://files.pythonhosted.org/packages/53/85/7494e6d366c71d6f7abfee65f395e72ea867818067ebc39848b36a1bc3a5/pyconmech-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e84b94cc0d83baf5fb1c6a4d9c861476", "sha256": "378f36c69593862f94a9cb1e4360df917ea29a64348564996fbbc988732b3df8"}, "downloads": -1, "filename": "pyconmech-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e84b94cc0d83baf5fb1c6a4d9c861476", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1271718, "upload_time": "2019-08-28T15:58:18", "upload_time_iso_8601": "2019-08-28T15:58:18.506387Z", "url": "https://files.pythonhosted.org/packages/17/58/f14fdbc6b7e1bddcecec14f1b947975ab68ed9bd473683c77e4ac838b0c9/pyconmech-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "01371e4755e5cc4eaaf05ea9b4495e85", "sha256": "9dfab12fe6c775725b353c0008e30e526c112c8e766eae66156f5c1ff4503add"}, "downloads": -1, "filename": "pyconmech-0.3.0.tar.gz", "has_sig": false, "md5_digest": "01371e4755e5cc4eaaf05ea9b4495e85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1274307, "upload_time": "2020-01-20T04:22:48", "upload_time_iso_8601": "2020-01-20T04:22:48.743824Z", "url": "https://files.pythonhosted.org/packages/54/6b/fb12c005b74c42e144c6ad22c9bf553438bf5e2a20af532c79b30efbe233/pyconmech-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "a3886b1ab52471a97cbb84985f5013bf", "sha256": "4606872d3cadd772c9dc66eaacb06a125faba3cc479dedfc6f12d069fbf56ea1"}, "downloads": -1, "filename": "pyconmech-0.3.1.tar.gz", "has_sig": false, "md5_digest": "a3886b1ab52471a97cbb84985f5013bf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1275185, "upload_time": "2020-01-20T12:57:18", "upload_time_iso_8601": "2020-01-20T12:57:18.148017Z", "url": "https://files.pythonhosted.org/packages/7e/9e/e5d406ef139007ae2d51b8d67a23bf30bd9271454304fef23a8593337ea5/pyconmech-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "66fcb6698d7ac734fa1de015bb67e48a", "sha256": "1c03e425afed8ec6a0bb4f0962125e57c9f7a40a60b46539129f6a9524230a08"}, "downloads": -1, "filename": "pyconmech-0.4.0.tar.gz", "has_sig": false, "md5_digest": "66fcb6698d7ac734fa1de015bb67e48a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 167083, "upload_time": "2020-03-02T22:42:54", "upload_time_iso_8601": "2020-03-02T22:42:54.320371Z", "url": "https://files.pythonhosted.org/packages/f6/01/8709c33460825795130b6b9c698a77de74061a965e1ef89966f48ef1135c/pyconmech-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "8ed008c1b500845b1045ed459caac537", "sha256": "3d7f34bd07257ebb47f548ce3c26953674f8a854d1a11aaf5c3b80369d848aae"}, "downloads": -1, "filename": "pyconmech-0.4.1.tar.gz", "has_sig": false, "md5_digest": "8ed008c1b500845b1045ed459caac537", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1472424, "upload_time": "2020-03-03T01:53:29", "upload_time_iso_8601": "2020-03-03T01:53:29.354860Z", "url": "https://files.pythonhosted.org/packages/b6/18/d336fe419f39f80f8780a3ea3783bab011f1faaa698fb868e87644d63731/pyconmech-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "60a462104dcbea3246314bb3620a11c0", "sha256": "3d1a989773e700195ec06314380f8652858eaa61121a9daebc4375d52579f938"}, "downloads": -1, "filename": "pyconmech-0.4.2.tar.gz", "has_sig": false, "md5_digest": "60a462104dcbea3246314bb3620a11c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 421092, "upload_time": "2020-03-04T05:42:44", "upload_time_iso_8601": "2020-03-04T05:42:44.541216Z", "url": "https://files.pythonhosted.org/packages/c3/cc/ece6988d4c46d537dd8d7c462809a908f509ad60070b1449aa703fab5e88/pyconmech-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "c8d73fadb82cc73bacda45584db21906", "sha256": "102e164d6ded9d28100de3e9990cadf96748701362f5f5e1f89e060dd1e9a8b0"}, "downloads": -1, "filename": "pyconmech-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c8d73fadb82cc73bacda45584db21906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 688618, "upload_time": "2020-03-04T05:42:43", "upload_time_iso_8601": "2020-03-04T05:42:43.232018Z", "url": "https://files.pythonhosted.org/packages/cc/31/df1b185e2aca4b0c542ee451831f89bbe6c9628bae9d65d96e1f131c31bd/pyconmech-0.4.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8d73fadb82cc73bacda45584db21906", "sha256": "102e164d6ded9d28100de3e9990cadf96748701362f5f5e1f89e060dd1e9a8b0"}, "downloads": -1, "filename": "pyconmech-0.4.3.tar.gz", "has_sig": false, "md5_digest": "c8d73fadb82cc73bacda45584db21906", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 688618, "upload_time": "2020-03-04T05:42:43", "upload_time_iso_8601": "2020-03-04T05:42:43.232018Z", "url": "https://files.pythonhosted.org/packages/cc/31/df1b185e2aca4b0c542ee451831f89bbe6c9628bae9d65d96e1f131c31bd/pyconmech-0.4.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:07 2020"}