{"info": {"author": "Adam Brenecki", "author_email": "abrenecki@sbtc.org.au", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Framework :: Django", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "mezzanine-events\n================\n\nThis plugin gives you an \"Event\" page type for your Mezzanine sites.\n\nFeatures\n--------\n\n-  Show your visitors where to go\n\n   -  Embed a map of the location in one line of code with the Google\n      Static Maps template tag\n   -  Provide a \"Get Directions\" link so users can go there in one click\n\n-  Let your visitors add a single event or subscribe to all future\n   events in Google Calendar, Outlook, iCal and more with Google\n   Calendar and webcal:// URLs and iCalendar files\n-  The usual stuff - dates, times, speakers, rsvp\n\nScreenshots\n-----------\n\nThese screenshots show what the plugin looks like with the default\ntemplates. To see it in action with custom templates, look at the\n`Events page of the St Barnabas'\nwebsite <http://www.sbtc.org.au/events/>`__.\n\n-  `An event container containing one\n   event <https://raw.github.com/stbarnabas/mezzanine-events/master/screenshots/eventcontainer.png>`__\n-  `An example event\n   page <https://raw.github.com/stbarnabas/mezzanine-events/master/screenshots/event.png>`__\n\nInstallation\n------------\n\n-  Run ``pip install mezzanine-events`` (or, if you want to hack on\n   mezzanine-events, clone it and run ``pip install -e path/to/repo``)\n-  Add ``\"mezzanine_events\"`` to your ``INSTALLED_APPS``\n-  Add ``(\"^\", include(\"mezzanine_events.urls\"))`` to your ``urls.py``\n   (this is so that mezzanine-events can serve up iCalendar files).\n-  Set either the ``TIME_ZONE`` or ``MZEVENTS_TIME_ZONE`` settings. (If\n   neither of these settings are set, the Google Calendar links will not\n   work as expected.)\n-  Migrate your database\n\nUsage\n-----\n\nmezzanine-events provides two page types: \"Event Container\" and \"Event\".\nThe Event Container page type is the 'Events' (note plural) page on your\nwebsite; you'll probably want it to have a list of events. The Event\npage type represents a single event.\n\nCreate an Event Container page in the Mezzanine admin (naming it\nsomething like \"Events\"), then create your first Event page inside it\n(naming it with the name of your event).\n\nCreating Templates\n------------------\n\nIn addition to the documentation here, take a look at how the default\ntemplates in the ``mezzanine_events/templates`` directory are written.\n\nEvent pages\n~~~~~~~~~~~\n\nThe template for an Event page is ``templates/pages/event.html``.\n\nThe Event object is available at ``page.event``. It has the following\nproperties:\n\n-  Dates and times: ``date``, ``start_time``, ``end_time``\n-  Location info: ``location``, ``mappable_location``, ``lat``, ``lon``\n-  Text data: ``speakers``, ``rsvp``\n-  ``speakers_list`` - the speakers as a list you can iterate over\n-  Generated start and end datetimes at ``start_datetime`` and\n   ``end_datetime``\n\nThe following template tags and filters can be used:\n\n-  ``{{ page.event.rsvp|link_emails }}`` - Wraps anything that looks\n   like an email in a ``mailto:`` link.\n-  ``{{ page.event|google_calendar_url }}`` - Returns a Google Calendar\n   template URL. Google Calendar users can click a link to this URL to\n   add the event to their calendar.\n-  ``{{ page.event|icalendar_url }}`` - Returns the URL to an iCalendar\n   file containing this event. Upon downloading this file, most calendar\n   software including Outlook and iCal will handle this by adding it to\n   their calendars.\n-  ``{{ page.event|google_nav_url }}`` - Returns the URL to a page on\n   Google Maps showing the location .\n-  ``{{ google_static_map page.event <width> <height> <zoom> }}`` -\n   Produces a Google static map centred around the event location,\n   zoomed to the specified level. Produces the entire ``img`` tag, not\n   just the URL.\n-  ``{% for speaker in page.speakers_list %} - Iterate over the speakers listed, e.g. to put them in``\n\n   .. raw:: html\n\n      <li>\n\n   \\`s.\n\nEvent pages default to being not visible in navigation, unless \"show\nevents in navigation\" is checked in their parent EventContainer.\n\nEvent Container pages\n~~~~~~~~~~~~~~~~~~~~~\n\nThe template for an Event Container page is\n``templates/pages/eventcontainer.html``.\n\nIterate over ``page.eventcontainer.events`` to get at the events inside\nthe container. You can then use all of the properties and template tags\nlisted above on these objects.\n\nThe template filter ``{{ page.eventcontainer|icalendar_url:\"webcal\" }}``\ncan be used to produce a webcal URL. When a link containing this URL is\nclicked, the user's default calendaring app will subscribe to events in\nthis eventcontainer.\n\nNotes\n~~~~~\n\nThe ``icalendar_url`` template filter actually takes one optional,\narbitrary string argument that specifies the protocol to use in the URL\nit gives, defaulting to ``http``. This means that you can generate\n``webcal`` URLs for single events and downloadable ``.ics`` files for\nevent containers.\n\nIn practice, most clients *import* downloaded iCalendar files into an\nexisting calendar, and add webcal URLs as a *separate calendar*, so the\nbehaviour described above is usually the desired one.\n\nSettings\n--------\n\n-  ``MZEVENTS_GOOGLE_MAPS_DOMAIN`` - The Google Maps country domain to\n   query for geocoding. Setting this accurately improves results when\n   users forget to enter a country in the mappable address. Default:\n   ``'maps.google.com.au'``.\n-  ``MZEVENTS_HIDPI_STATIC_MAPS`` - Whether the\n   ``{% google_static_map %}`` template tag generates a map suitable for\n   high DPI displays such as the MacBook Pro with Retina Display and\n   many newer smartphones. Default: ``True``.\n-  ``MZEVENTS_TIME_ZONE`` - The time zone that the event dates and times\n   are in. Either this or the ``TIME_ZONE`` setting needs to be set.\n\nLicense\n-------\n\nCopyright (C) 2012 St Barnabas Theological College\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/stbarnabas/mezzanine-events", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "mezzanine-events", "package_url": "https://pypi.org/project/mezzanine-events/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/mezzanine-events/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/stbarnabas/mezzanine-events"}, "release_url": "https://pypi.org/project/mezzanine-events/0.1.4/", "requires_dist": null, "requires_python": null, "summary": "Event pages for the Mezzanine CMS", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            mezzanine-events<br>================<br><br>This plugin gives you an \"Event\" page type for your Mezzanine sites.<br><br>Features<br>--------<br><br>-  Show your visitors where to go<br><br>   -  Embed a map of the location in one line of code with the Google<br>      Static Maps template tag<br>   -  Provide a \"Get Directions\" link so users can go there in one click<br><br>-  Let your visitors add a single event or subscribe to all future<br>   events in Google Calendar, Outlook, iCal and more with Google<br>   Calendar and webcal:// URLs and iCalendar files<br>-  The usual stuff - dates, times, speakers, rsvp<br><br>Screenshots<br>-----------<br><br>These screenshots show what the plugin looks like with the default<br>templates. To see it in action with custom templates, look at the<br>`Events page of the St Barnabas'<br>website &lt;http://www.sbtc.org.au/events/&gt;`__.<br><br>-  `An event container containing one<br>   event &lt;https://raw.github.com/stbarnabas/mezzanine-events/master/screenshots/eventcontainer.png&gt;`__<br>-  `An example event<br>   page &lt;https://raw.github.com/stbarnabas/mezzanine-events/master/screenshots/event.png&gt;`__<br><br>Installation<br>------------<br><br>-  Run ``pip install mezzanine-events`` (or, if you want to hack on<br>   mezzanine-events, clone it and run ``pip install -e path/to/repo``)<br>-  Add ``\"mezzanine_events\"`` to your ``INSTALLED_APPS``<br>-  Add ``(\"^\", include(\"mezzanine_events.urls\"))`` to your ``urls.py``<br>   (this is so that mezzanine-events can serve up iCalendar files).<br>-  Set either the ``TIME_ZONE`` or ``MZEVENTS_TIME_ZONE`` settings. (If<br>   neither of these settings are set, the Google Calendar links will not<br>   work as expected.)<br>-  Migrate your database<br><br>Usage<br>-----<br><br>mezzanine-events provides two page types: \"Event Container\" and \"Event\".<br>The Event Container page type is the 'Events' (note plural) page on your<br>website; you'll probably want it to have a list of events. The Event<br>page type represents a single event.<br><br>Create an Event Container page in the Mezzanine admin (naming it<br>something like \"Events\"), then create your first Event page inside it<br>(naming it with the name of your event).<br><br>Creating Templates<br>------------------<br><br>In addition to the documentation here, take a look at how the default<br>templates in the ``mezzanine_events/templates`` directory are written.<br><br>Event pages<br>~~~~~~~~~~~<br><br>The template for an Event page is ``templates/pages/event.html``.<br><br>The Event object is available at ``page.event``. It has the following<br>properties:<br><br>-  Dates and times: ``date``, ``start_time``, ``end_time``<br>-  Location info: ``location``, ``mappable_location``, ``lat``, ``lon``<br>-  Text data: ``speakers``, ``rsvp``<br>-  ``speakers_list`` - the speakers as a list you can iterate over<br>-  Generated start and end datetimes at ``start_datetime`` and<br>   ``end_datetime``<br><br>The following template tags and filters can be used:<br><br>-  ``{{ page.event.rsvp|link_emails }}`` - Wraps anything that looks<br>   like an email in a ``mailto:`` link.<br>-  ``{{ page.event|google_calendar_url }}`` - Returns a Google Calendar<br>   template URL. Google Calendar users can click a link to this URL to<br>   add the event to their calendar.<br>-  ``{{ page.event|icalendar_url }}`` - Returns the URL to an iCalendar<br>   file containing this event. Upon downloading this file, most calendar<br>   software including Outlook and iCal will handle this by adding it to<br>   their calendars.<br>-  ``{{ page.event|google_nav_url }}`` - Returns the URL to a page on<br>   Google Maps showing the location .<br>-  ``{{ google_static_map page.event &lt;width&gt; &lt;height&gt; &lt;zoom&gt; }}`` -<br>   Produces a Google static map centred around the event location,<br>   zoomed to the specified level. Produces the entire ``img`` tag, not<br>   just the URL.<br>-  ``{% for speaker in page.speakers_list %} - Iterate over the speakers listed, e.g. to put them in``<br><br>   .. raw:: html<br><br>      &lt;li&gt;<br><br>   \\`s.<br><br>Event pages default to being not visible in navigation, unless \"show<br>events in navigation\" is checked in their parent EventContainer.<br><br>Event Container pages<br>~~~~~~~~~~~~~~~~~~~~~<br><br>The template for an Event Container page is<br>``templates/pages/eventcontainer.html``.<br><br>Iterate over ``page.eventcontainer.events`` to get at the events inside<br>the container. You can then use all of the properties and template tags<br>listed above on these objects.<br><br>The template filter ``{{ page.eventcontainer|icalendar_url:\"webcal\" }}``<br>can be used to produce a webcal URL. When a link containing this URL is<br>clicked, the user's default calendaring app will subscribe to events in<br>this eventcontainer.<br><br>Notes<br>~~~~~<br><br>The ``icalendar_url`` template filter actually takes one optional,<br>arbitrary string argument that specifies the protocol to use in the URL<br>it gives, defaulting to ``http``. This means that you can generate<br>``webcal`` URLs for single events and downloadable ``.ics`` files for<br>event containers.<br><br>In practice, most clients *import* downloaded iCalendar files into an<br>existing calendar, and add webcal URLs as a *separate calendar*, so the<br>behaviour described above is usually the desired one.<br><br>Settings<br>--------<br><br>-  ``MZEVENTS_GOOGLE_MAPS_DOMAIN`` - The Google Maps country domain to<br>   query for geocoding. Setting this accurately improves results when<br>   users forget to enter a country in the mappable address. Default:<br>   ``'maps.google.com.au'``.<br>-  ``MZEVENTS_HIDPI_STATIC_MAPS`` - Whether the<br>   ``{% google_static_map %}`` template tag generates a map suitable for<br>   high DPI displays such as the MacBook Pro with Retina Display and<br>   many newer smartphones. Default: ``True``.<br>-  ``MZEVENTS_TIME_ZONE`` - The time zone that the event dates and times<br>   are in. Either this or the ``TIME_ZONE`` setting needs to be set.<br><br>License<br>-------<br><br>Copyright (C) 2012 St Barnabas Theological College<br><br>Permission is hereby granted, free of charge, to any person obtaining a<br>copy of this software and associated documentation files (the<br>\"Software\"), to deal in the Software without restriction, including<br>without limitation the rights to use, copy, modify, merge, publish,<br>distribute, sublicense, and/or sell copies of the Software, and to<br>permit persons to whom the Software is furnished to do so, subject to<br>the following conditions:<br><br>The above copyright notice and this permission notice shall be included<br>in all copies or substantial portions of the Software.<br><br>THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS<br>OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF<br>MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.<br>IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY<br>CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,<br>TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE<br>SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n          </div>"}, "last_serial": 1023785, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6acd8f913ba87d8148d470e43880d9e9", "sha256": "aa31ad7ecaf649f491634bcbfbd7717389b15b87e4c1a0a907ff732dcf45bcc3"}, "downloads": -1, "filename": "mezzanine-events-0.1.tar.gz", "has_sig": false, "md5_digest": "6acd8f913ba87d8148d470e43880d9e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18891, "upload_time": "2013-01-08T03:23:14", "upload_time_iso_8601": "2013-01-08T03:23:14.117431Z", "url": "https://files.pythonhosted.org/packages/15/fd/f20aecb9cd0c3c31547c4d4b09b8d46df36f1d7fd8eb8dbbc33943cdc7db/mezzanine-events-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "3ba9edbd314f56d65587e5ca1b02d295", "sha256": "fc8f2883dc748d50bc81394e733c5c3c93a0f4be15094ce12bd198206a4c278a"}, "downloads": -1, "filename": "mezzanine-events-0.1.1.tar.gz", "has_sig": false, "md5_digest": "3ba9edbd314f56d65587e5ca1b02d295", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18736, "upload_time": "2013-04-05T05:34:19", "upload_time_iso_8601": "2013-04-05T05:34:19.714586Z", "url": "https://files.pythonhosted.org/packages/7f/41/31200a7036a04aa03700e46a105902c96e611ce79559da5aa3298c7a228e/mezzanine-events-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "9f1ca5b939f889a2f672b54e29c3a958", "sha256": "e899922b4df0d3858a893ee749dd5cf3c4d347c83bb8b69850dbc7a28926500a"}, "downloads": -1, "filename": "mezzanine-events-0.1.2.tar.gz", "has_sig": false, "md5_digest": "9f1ca5b939f889a2f672b54e29c3a958", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19035, "upload_time": "2013-05-03T06:39:52", "upload_time_iso_8601": "2013-05-03T06:39:52.266347Z", "url": "https://files.pythonhosted.org/packages/d9/3c/be28fb3139dd84dcc2007660680ad15bb80896caa0c8ae88609b9da148ca/mezzanine-events-0.1.2.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "6a3f20d50d5085224c2015c9e732abdf", "sha256": "2b8bbdaadbcb47baf16af64d95648a597bf32fee8e6cd34bae34eadb0d853ec9"}, "downloads": -1, "filename": "mezzanine-events-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6a3f20d50d5085224c2015c9e732abdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19085, "upload_time": "2014-03-09T07:51:24", "upload_time_iso_8601": "2014-03-09T07:51:24.326363Z", "url": "https://files.pythonhosted.org/packages/a3/71/29661b5298834812fe570dc461f231f9eff63b6596dfba0f74052227eaa3/mezzanine-events-0.1.4.tar.gz", "yanked": false}], "0.1beta1": [{"comment_text": "", "digests": {"md5": "e21fdc23215a29ecc89313c8beeac417", "sha256": "0ad370345dc7d659ca2c15633d12d80d0fda64986028c9fdde0ac986598de072"}, "downloads": -1, "filename": "mezzanine-events-0.1beta1.tar.gz", "has_sig": false, "md5_digest": "e21fdc23215a29ecc89313c8beeac417", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10631, "upload_time": "2012-11-21T04:37:02", "upload_time_iso_8601": "2012-11-21T04:37:02.119282Z", "url": "https://files.pythonhosted.org/packages/5d/0a/bf4af92c0760011f730f9d52d928d587842f670e619d9b5b124c0142a434/mezzanine-events-0.1beta1.tar.gz", "yanked": false}], "0.1beta2": [{"comment_text": "", "digests": {"md5": "c7a2a1053adb1c7c07ddd705db9f981a", "sha256": "013df3467e67fa8f3fe6295a6bec6062a24c8202307f40b43dd801e76e0cd4ac"}, "downloads": -1, "filename": "mezzanine-events-0.1beta2.tar.gz", "has_sig": false, "md5_digest": "c7a2a1053adb1c7c07ddd705db9f981a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10909, "upload_time": "2012-11-21T05:46:05", "upload_time_iso_8601": "2012-11-21T05:46:05.636367Z", "url": "https://files.pythonhosted.org/packages/95/93/6a620615888f7cfd350a753d47fa884eca50e8cf61397a7a9881890df8fe/mezzanine-events-0.1beta2.tar.gz", "yanked": false}], "0.1beta3": [{"comment_text": "", "digests": {"md5": "ac6e000b2a5def532ab4648edb79823c", "sha256": "07c83d9d0957011a6c20f84275a97b51a7980cb39772beaa7c970d494db5a554"}, "downloads": -1, "filename": "mezzanine-events-0.1beta3.tar.gz", "has_sig": false, "md5_digest": "ac6e000b2a5def532ab4648edb79823c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10894, "upload_time": "2012-11-28T23:48:45", "upload_time_iso_8601": "2012-11-28T23:48:45.390295Z", "url": "https://files.pythonhosted.org/packages/80/91/6fc9c4624da8018e2e43880fa4f62df00f01fa80f3bd2749816c0c1b458e/mezzanine-events-0.1beta3.tar.gz", "yanked": false}], "0.1beta4": [{"comment_text": "", "digests": {"md5": "5320491382c4bee975c44bcbac9dd9c0", "sha256": "6afc935fc1d480c01e7bf86751917b456f783b7fcfd554112f095587eb94c41d"}, "downloads": -1, "filename": "mezzanine-events-0.1beta4.tar.gz", "has_sig": false, "md5_digest": "5320491382c4bee975c44bcbac9dd9c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10904, "upload_time": "2012-11-30T03:54:02", "upload_time_iso_8601": "2012-11-30T03:54:02.579633Z", "url": "https://files.pythonhosted.org/packages/68/2c/d50f7c5da8c05bc9f5fe66de710aa923408c2945d996540a5ac578348dab/mezzanine-events-0.1beta4.tar.gz", "yanked": false}], "0.1pre": []}, "urls": [{"comment_text": "", "digests": {"md5": "6a3f20d50d5085224c2015c9e732abdf", "sha256": "2b8bbdaadbcb47baf16af64d95648a597bf32fee8e6cd34bae34eadb0d853ec9"}, "downloads": -1, "filename": "mezzanine-events-0.1.4.tar.gz", "has_sig": false, "md5_digest": "6a3f20d50d5085224c2015c9e732abdf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19085, "upload_time": "2014-03-09T07:51:24", "upload_time_iso_8601": "2014-03-09T07:51:24.326363Z", "url": "https://files.pythonhosted.org/packages/a3/71/29661b5298834812fe570dc461f231f9eff63b6596dfba0f74052227eaa3/mezzanine-events-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:33 2020"}