{"info": {"author": "altescy", "author_email": "altescy@fastmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.7"], "description": "colt\n===\n\n[![Actions Status](https://github.com/altescy/colt/workflows/build/badge.svg)](https://github.com/altescy/colt)\n[![Python version](https://img.shields.io/pypi/pyversions/colt)](https://github.com/altescy/colt)\n[![pypi version](https://img.shields.io/pypi/v/colt)](https://pypi.org/project/colt/)\n[![license](https://img.shields.io/github/license/altescy/colt)](https://github.com/altescy/colt/blob/master/LICENSE)\n\n## Quick Links\n\n- [Installation](#Installation)\n- [Basic Examples](Examples)\n- [kaggle Titanic Example](https://github.com/altescy/colt/tree/master/examples/titanic)\n\n## Introduction\n\n`colt` is a configuration utility for Python objects.\n`colt` constructs Python objects from a configuration dict which is convertable into JSON.\n(Inspired by [AllenNLP](https://github.com/allenai/allennlp))\n\n\n## Installation\n\n```\npip install colt\n```\n\n## Examples\n\n#### Basic Usage\n\n```python\nimport typing as tp\nimport colt\n\n@colt.register(\"foo\")\nclass Foo:\n    def __init__(self, message: str) -> None:\n        self.message = message\n\n@colt.register(\"bar\")\nclass Bar:\n    def __init__(self, foos: tp.List[Foo]) -> None:\n        self.foos = foos\n\nif __name__ == \"__main__\":\n    config = {\n        \"@type\": \"bar\",  # specify type name with `@type`\n        \"foos\": [\n            {\"message\": \"hello\"},  # type of this is inferred from type-hint\n            {\"message\": \"world\"},\n        ]\n    }\n\n    bar = colt.build(config)\n\n    assert isinstance(bar, Bar)\n\n    print(\" \".join(foo.message for foo in bar.foos))\n        # => \"hello world\"\n```\n\n#### `scikit-learn` Configuration\n\n```python\nimport colt\n\nfrom sklearn.datasets import load_iris\nfrom sklearn.model_selection import train_test_split\n\nif __name__ == \"__main__\":\n    config = {\n        # import types automatically if type name is not registerd\n        \"@type\": \"sklearn.ensemble.VotingClassifier\",\n        \"estimators\": [\n            (\"rfc\", { \"@type\": \"sklearn.ensemble.RandomForestClassifier\",\n                      \"n_estimators\": 10 }),\n            (\"svc\", { \"@type\": \"sklearn.svm.SVC\",\n                      \"gamma\": \"scale\" }),\n        ]\n    }\n\n    X, y = load_iris(return_X_y=True)\n    X_train, X_valid, y_train, y_valid = train_test_split(X, y)\n\n    model = colt.build(config)\n    model.fit(X_train, y_train)\n\n    valid_accuracy = model.score(X_valid, y_valid)\n    print(f\"valid_accuracy: {valid_accuracy}\")\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/altescy/colt", "keywords": "config python object", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "colt", "package_url": "https://pypi.org/project/colt/", "platform": "", "project_url": "https://pypi.org/project/colt/", "project_urls": {"Homepage": "https://github.com/altescy/colt"}, "release_url": "https://pypi.org/project/colt/0.4.0/", "requires_dist": null, "requires_python": ">=3.7.3", "summary": "A configuration utility for Python object.", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>colt</h1>\n<p><a href=\"https://github.com/altescy/colt\" rel=\"nofollow\"><img alt=\"Actions Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd2a6794298fadc1033765b677ad6ece3fbaab37/68747470733a2f2f6769746875622e636f6d2f616c74657363792f636f6c742f776f726b666c6f77732f6275696c642f62616467652e737667\"></a>\n<a href=\"https://github.com/altescy/colt\" rel=\"nofollow\"><img alt=\"Python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f909e7fa48cf6ab0d02525dda06409dc5e84b301/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f636f6c74\"></a>\n<a href=\"https://pypi.org/project/colt/\" rel=\"nofollow\"><img alt=\"pypi version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4ec108d9155b4081e46c12fe1942f7fc1531e730/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f636f6c74\"></a>\n<a href=\"https://github.com/altescy/colt/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5c3295ee4b629292f327813324db840f19e8a3fa/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f616c74657363792f636f6c74\"></a></p>\n<h2>Quick Links</h2>\n<ul>\n<li><a href=\"#Installation\" rel=\"nofollow\">Installation</a></li>\n<li><a href=\"Examples\" rel=\"nofollow\">Basic Examples</a></li>\n<li><a href=\"https://github.com/altescy/colt/tree/master/examples/titanic\" rel=\"nofollow\">kaggle Titanic Example</a></li>\n</ul>\n<h2>Introduction</h2>\n<p><code>colt</code> is a configuration utility for Python objects.\n<code>colt</code> constructs Python objects from a configuration dict which is convertable into JSON.\n(Inspired by <a href=\"https://github.com/allenai/allennlp\" rel=\"nofollow\">AllenNLP</a>)</p>\n<h2>Installation</h2>\n<pre><code>pip install colt\n</code></pre>\n<h2>Examples</h2>\n<h4>Basic Usage</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">typing</span> <span class=\"k\">as</span> <span class=\"nn\">tp</span>\n<span class=\"kn\">import</span> <span class=\"nn\">colt</span>\n\n<span class=\"nd\">@colt</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">\"foo\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Foo</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">message</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"o\">=</span> <span class=\"n\">message</span>\n\n<span class=\"nd\">@colt</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"s2\">\"bar\"</span><span class=\"p\">)</span>\n<span class=\"k\">class</span> <span class=\"nc\">Bar</span><span class=\"p\">:</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">foos</span><span class=\"p\">:</span> <span class=\"n\">tp</span><span class=\"o\">.</span><span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Foo</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">foos</span> <span class=\"o\">=</span> <span class=\"n\">foos</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"@type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"bar\"</span><span class=\"p\">,</span>  <span class=\"c1\"># specify type name with `@type`</span>\n        <span class=\"s2\">\"foos\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"hello\"</span><span class=\"p\">},</span>  <span class=\"c1\"># type of this is inferred from type-hint</span>\n            <span class=\"p\">{</span><span class=\"s2\">\"message\"</span><span class=\"p\">:</span> <span class=\"s2\">\"world\"</span><span class=\"p\">},</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">bar</span> <span class=\"o\">=</span> <span class=\"n\">colt</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n\n    <span class=\"k\">assert</span> <span class=\"nb\">isinstance</span><span class=\"p\">(</span><span class=\"n\">bar</span><span class=\"p\">,</span> <span class=\"n\">Bar</span><span class=\"p\">)</span>\n\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\" \"</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">foo</span><span class=\"o\">.</span><span class=\"n\">message</span> <span class=\"k\">for</span> <span class=\"n\">foo</span> <span class=\"ow\">in</span> <span class=\"n\">bar</span><span class=\"o\">.</span><span class=\"n\">foos</span><span class=\"p\">))</span>\n        <span class=\"c1\"># =&gt; \"hello world\"</span>\n</pre>\n<h4><code>scikit-learn</code> Configuration</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">colt</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.datasets</span> <span class=\"kn\">import</span> <span class=\"n\">load_iris</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sklearn.model_selection</span> <span class=\"kn\">import</span> <span class=\"n\">train_test_split</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s2\">\"__main__\"</span><span class=\"p\">:</span>\n    <span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"c1\"># import types automatically if type name is not registerd</span>\n        <span class=\"s2\">\"@type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sklearn.ensemble.VotingClassifier\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"estimators\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n            <span class=\"p\">(</span><span class=\"s2\">\"rfc\"</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"s2\">\"@type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sklearn.ensemble.RandomForestClassifier\"</span><span class=\"p\">,</span>\n                      <span class=\"s2\">\"n_estimators\"</span><span class=\"p\">:</span> <span class=\"mi\">10</span> <span class=\"p\">}),</span>\n            <span class=\"p\">(</span><span class=\"s2\">\"svc\"</span><span class=\"p\">,</span> <span class=\"p\">{</span> <span class=\"s2\">\"@type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"sklearn.svm.SVC\"</span><span class=\"p\">,</span>\n                      <span class=\"s2\">\"gamma\"</span><span class=\"p\">:</span> <span class=\"s2\">\"scale\"</span> <span class=\"p\">}),</span>\n        <span class=\"p\">]</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">load_iris</span><span class=\"p\">(</span><span class=\"n\">return_X_y</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">X_valid</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">,</span> <span class=\"n\">y_valid</span> <span class=\"o\">=</span> <span class=\"n\">train_test_split</span><span class=\"p\">(</span><span class=\"n\">X</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span>\n\n    <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">colt</span><span class=\"o\">.</span><span class=\"n\">build</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"p\">)</span>\n    <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">fit</span><span class=\"p\">(</span><span class=\"n\">X_train</span><span class=\"p\">,</span> <span class=\"n\">y_train</span><span class=\"p\">)</span>\n\n    <span class=\"n\">valid_accuracy</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">score</span><span class=\"p\">(</span><span class=\"n\">X_valid</span><span class=\"p\">,</span> <span class=\"n\">y_valid</span><span class=\"p\">)</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"valid_accuracy: </span><span class=\"si\">{</span><span class=\"n\">valid_accuracy</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 7162159, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4c5520df72822e7a177d55a5869bb5f8", "sha256": "3058252c54c23bcf99d934363e99ebffc7179d526c38758ec19b167cd00cbabb"}, "downloads": -1, "filename": "colt-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4c5520df72822e7a177d55a5869bb5f8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.3", "size": 4793, "upload_time": "2020-01-26T08:50:26", "upload_time_iso_8601": "2020-01-26T08:50:26.453453Z", "url": "https://files.pythonhosted.org/packages/f8/e1/d5361a4daf1760f7bc6eb5fa1a21570436c45f9a9f164dd9be6cf134daf0/colt-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2ca6a286cbe31f99aebe01a5b6a9e36d", "sha256": "cb4c6d35df819cd20f96ee0060b2b0eb1852dcd9c72f6c49191b40248cb65b65"}, "downloads": -1, "filename": "colt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "2ca6a286cbe31f99aebe01a5b6a9e36d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.3", "size": 3123, "upload_time": "2020-01-26T08:50:29", "upload_time_iso_8601": "2020-01-26T08:50:29.592535Z", "url": "https://files.pythonhosted.org/packages/e2/36/9395d46e14e5684983ae3d3788d3ae53a873262c5764d68a1eeff2fd4fe9/colt-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "a37a834dc5e46a8a6c8268df7fc04509", "sha256": "4d83652b44681fbc7514ac7485bacd889ffe170de9528b3d36cb3327dc3465dc"}, "downloads": -1, "filename": "colt-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "a37a834dc5e46a8a6c8268df7fc04509", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.3", "size": 5060, "upload_time": "2020-02-08T04:29:41", "upload_time_iso_8601": "2020-02-08T04:29:41.379822Z", "url": "https://files.pythonhosted.org/packages/9d/f2/2b39faf5e3d1dee26b5307506eabab0e1e79625e6b155aac584a236dd021/colt-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "80a9c40319479e2b7f1021efefa67abe", "sha256": "30d4a2af3250f7734b41fea2b818b01eb4e25dae7419a901c9121bb516388e9f"}, "downloads": -1, "filename": "colt-0.2.0.tar.gz", "has_sig": false, "md5_digest": "80a9c40319479e2b7f1021efefa67abe", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.3", "size": 3624, "upload_time": "2020-02-08T04:29:43", "upload_time_iso_8601": "2020-02-08T04:29:43.285687Z", "url": "https://files.pythonhosted.org/packages/0d/eb/17ec974e89785f98dd12347dd588fb35a69a5f325972d520af3c45ded432/colt-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "7f39e4c8492d720718e5edf9827c05b9", "sha256": "dd8a92403b230d234ea633538099154daae0ed0b0e51dbd9322d84b95f3ba0a0"}, "downloads": -1, "filename": "colt-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "7f39e4c8492d720718e5edf9827c05b9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.3", "size": 6350, "upload_time": "2020-05-03T10:42:41", "upload_time_iso_8601": "2020-05-03T10:42:41.149773Z", "url": "https://files.pythonhosted.org/packages/15/fd/31f3c97e9a37c4619bc43e9d7dc482fbca54b852fddf78e0519a7b8bc845/colt-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5691c44f386235889e6b7b745031b1ad", "sha256": "940f00a5fe4117c77203347fbe72b048e15e5413259b09e7f49677ceedde2deb"}, "downloads": -1, "filename": "colt-0.3.0.tar.gz", "has_sig": false, "md5_digest": "5691c44f386235889e6b7b745031b1ad", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.3", "size": 4800, "upload_time": "2020-05-03T10:42:42", "upload_time_iso_8601": "2020-05-03T10:42:42.678073Z", "url": "https://files.pythonhosted.org/packages/26/38/d4f9262943dfc06e238bda749f2da5541d416aaf8bce4bdf92c262baf1b6/colt-0.3.0.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "2b1c368c47563471a49f8cd533da6863", "sha256": "7f9498515ffa1810ec59d29daceb70517b6cf7e05a1035d66af410ac18fe51f2"}, "downloads": -1, "filename": "colt-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1c368c47563471a49f8cd533da6863", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.3", "size": 6454, "upload_time": "2020-05-04T08:18:44", "upload_time_iso_8601": "2020-05-04T08:18:44.582724Z", "url": "https://files.pythonhosted.org/packages/cf/e3/c8e6650e22d8d8f241bbbb968abbf677ac20448bc9c975c4a7af84b23e43/colt-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff0784088dbf76c390196bdb2b034299", "sha256": "1bf1a0d76a7b9b4c5295747adf327e0e22871cf8d86e5933e06be4230f3be058"}, "downloads": -1, "filename": "colt-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ff0784088dbf76c390196bdb2b034299", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.3", "size": 4890, "upload_time": "2020-05-04T08:18:46", "upload_time_iso_8601": "2020-05-04T08:18:46.050002Z", "url": "https://files.pythonhosted.org/packages/8a/92/e84cf8a05641dcd7a3f202c99210712d3224a68f15a162de975950a2af9d/colt-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b1c368c47563471a49f8cd533da6863", "sha256": "7f9498515ffa1810ec59d29daceb70517b6cf7e05a1035d66af410ac18fe51f2"}, "downloads": -1, "filename": "colt-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2b1c368c47563471a49f8cd533da6863", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7.3", "size": 6454, "upload_time": "2020-05-04T08:18:44", "upload_time_iso_8601": "2020-05-04T08:18:44.582724Z", "url": "https://files.pythonhosted.org/packages/cf/e3/c8e6650e22d8d8f241bbbb968abbf677ac20448bc9c975c4a7af84b23e43/colt-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ff0784088dbf76c390196bdb2b034299", "sha256": "1bf1a0d76a7b9b4c5295747adf327e0e22871cf8d86e5933e06be4230f3be058"}, "downloads": -1, "filename": "colt-0.4.0.tar.gz", "has_sig": false, "md5_digest": "ff0784088dbf76c390196bdb2b034299", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7.3", "size": 4890, "upload_time": "2020-05-04T08:18:46", "upload_time_iso_8601": "2020-05-04T08:18:46.050002Z", "url": "https://files.pythonhosted.org/packages/8a/92/e84cf8a05641dcd7a3f202c99210712d3224a68f15a162de975950a2af9d/colt-0.4.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}