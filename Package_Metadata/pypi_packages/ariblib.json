{"info": {"author": "Chisa Youzaka", "author_email": "ariblib@txqz.net", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: Japanese", "Programming Language :: Python :: 3"], "description": "ariblib\n=======\n\n\u901f\u5ea6\u512a\u5148\u306e Transport Stream \u30d1\u30fc\u30b5\u3067\u3059\u3002\nPython 3.2 \u3067\u306e\u52d5\u4f5c\u304c\u524d\u63d0\u3067\u3059\u304c\u30013.1 \u3067\u3082\u52d5\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002\n\n```\n$ sudo python3.2 setup.py install\n```\n\nARIB-STD \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u306a\u308b\u3079\u304f\u8fd1\u3044\u5f62\u3067\nPython \u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002\n\n\u305f\u3068\u3048\u3070\u3001 Program Map Section \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306f ARIB-STD-B10 \u7b2c2\u90e8\u4ed8\u9332E \u8868E-3 \u3067\n\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059:\n\n```\nTS_program_map_section(){\n    table_id                   8  uimsbf\n    section_syntax_indicator   1  bslbf\n    \u20180\u2019                        1  bslbf\n    reserved                   2  bslbf\n    section_length            12  uimsbf\n    program_number            16  uimsbf\n    reserved                   2  bslbf\n    version_number             5  uimsbf\n    current_next_indicator     1  bslbf\n    section_number             8  uimsbf\n    last_section_number        8  uimsbf\n    reserved                   3  bslbf\n    PCR_PID                   13  uimsbf\n    reserved                   4  bslbf\n    program_info_length       12  uimsbf\n    for (i=0;i<N;i++){\n        descriptor()\n    }\n    for (i=0;i<N1;i++){\n        stream_type            8  uimsbf\n        reserved               3  bslbf\n        elementary_PID        13  uimsbf\n        reserved               4  bslbf\n        ES_info_length        12  uimsbf\n        for (i=0;i<N2;i++){\n            descriptor()\n        }\n    }\n    CRC_32                    32 rpchof\n```\n\u3053\u308c\u3092 ariblib \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002 (\u8aac\u660e\u306b\u5fc5\u8981\u3067\u306a\u3044\u884c\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059)\n```python\n\nclass ProgramMapSection(Section):\n    table_id = uimsbf(8)\n    section_syntax_indicator = bslbf(1)\n    reserved_future_use = bslbf(1)\n    reserved_1 = bslbf(2)\n    section_length = uimsbf(12)\n    program_number = uimsbf(16)\n    reserved_2 = bslbf(2)\n    version_number = uimsbf(5)\n    current_next_indicator = bslbf(1)\n    section_number = uimsbf(8)\n    last_section_number = uimsbf(8)\n    reserved_3 = bslbf(3)\n    PCR_PID = uimsbf(13)\n    reserved_4 = bslbf(4)\n    program_info_length = uimsbf(12)\n    descriptors = descriptors(program_info_length)\n\n    @loop(lambda self: self.section_length - (13 + self.program_info_length))\n    class maps(Syntax):\n        stream_type = uimsbf(8)\n        reserved_1 = bslbf(3)\n        elementary_PID = uimsbf(13)\n        reserved_2 = bslbf(4)\n        ES_info_length = uimsbf(12)\n        descriptors = descriptors(ES_info_length)\n\n    CRC_32 = rpchof(32)\n```\n\n\u30d3\u30c3\u30c8\u5217\u8868\u8a18\u3092\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3068\u3057\u3066\u5b9f\u88c5\u3057\u305f\u308a\u3001\u7e70\u308a\u8fd4\u3057\u69cb\u9020\u3084\u5236\u5fa1\u69cb\u9020\u3092\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u3057\u3066\u5b9f\u88c5\u3057\u305f\u308a\n\u3059\u308b\u3053\u3068\u3067\u3001\u306a\u308b\u3079\u304f\u4ed5\u69d8\u66f8\u306b\u8fd1\u3044\u5f62\u3067\u30af\u30e9\u30b9\u306e\u8868\u8a18\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002\n\n\u4f7f\u3044\u65b9\u4f8b1 \u5b57\u5e55\u3092\u8868\u793a\n```python\n\nfrom ariblib import tsopen\nfrom ariblib.caption import captions\n\nimport sys\n\nwith tsopen(sys.argv[1]) as ts:\n    for caption in captions(ts, color=True):\n        body = str(caption.body)\n\n        # \u30a2\u30c0\u30d7\u30c6\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30fc\u30eb\u30c9\u306e PCR \u306e\u5024\u3068\u3001\u305d\u3053\u304b\u3089\u4e00\u756a\u8fd1\u3044 TOT \u30c6\u30fc\u30d6\u30eb\u306e\u5024\u304b\u3089\u3001\n        # \u5b57\u5e55\u306e\u8868\u793a\u3055\u308c\u305f\u6642\u523b\u3092\u8a08\u7b97\u3057\u307e\u3059 (\u82e5\u5e72\u8aa4\u5dee\u304c\u51fa\u307e\u3059)\n        # PCR \u304c\u4e00\u5468\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093\n        datetime = caption.datetime.strftime('%Y-%m-%d %H:%M:%S')\n        print('\\033[35m' + datetime + '\\33[37m')\n        print(body)\n```\n\n\u4f7f\u3044\u65b9\u4f8b2 \u3044\u307e\u653e\u9001\u4e2d\u306e\u756a\u7d44\u3068\u6b21\u306e\u756a\u7d44\u3092\u8868\u793a\n```python\n\nimport sys\n\nfrom ariblib import tsopen\nfrom ariblib.descriptors import ShortEventDescriptor\nfrom ariblib.sections import EventInformationSection\n\ndef show_program(eit):\n    event = eit.events.__next__()\n    program_title = event.descriptors[ShortEventDescriptor][0].event_name_char\n    start = event.start_time\n    return \"{} {}\".format(program_title, start)\n\nwith tsopen(sys.argv[1]) as ts:\n    # \u81ea\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u73fe\u5728\u3068\u6b21\u306e\u756a\u7d44\u3092\u8868\u793a\u3059\u308b\n    EventInformationSection._table_ids = [0x4E]\n    current = next(table for table in ts.sections(EventInformationSection)\n                   if table.section_number == 0)\n    following = next(table for table in ts.sections(EventInformationSection)\n                     if table.section_number == 1)\n    print('\u4eca\u306e\u756a\u7d44', show_program(current))\n    print('\u6b21\u306e\u756a\u7d44', show_program(following))\n```\n\n\u4f7f\u3044\u65b9\u4f8b3: \u653e\u9001\u5c40\u540d\u306e\u4e00\u6b04\u3092\u8868\u793a\n(\u5730\u4e0a\u6ce2\u3067\u306f\u305d\u306e\u5c40, BS\u3067\u306f\u5168\u5c40\u304c\u8868\u793a\u3055\u308c\u308b)\n```python\n\nimport sys\n\nfrom ariblib import tsopen\nfrom ariblib.constant import SERVICE_TYPES\nfrom ariblib.descriptors import ServiceDescriptor\nfrom ariblib.sections import ServiceDescriptionSection\n\nwith tsopen(sys.argv[1]) as ts:\n    for sdt in ts.sections(ServiceDescriptionSection):\n        for service in sdt.services:\n            for sd in service.descriptors[ServiceDescriptor]:\n                print(service.service_id, SERVICE_TYPE[sd.service_type],\n                      sd.service_provider_name, sd.service_name)\n```\n\n\u4f7f\u3044\u65b9\u4f8b4: \u52d5\u753b\u30d1\u30b1\u30c3\u30c8\u306e PID \u3068\u305d\u306e\u52d5\u753b\u306e\u89e3\u50cf\u5ea6\u3092\u8868\u793a\n```python\n\nimport sys\n\nfrom ariblib import tsopen\nfrom ariblib.constants import VIDEO_ENCODE_FORMATS\nfrom ariblib.descriptors import VideoDecodeControlDescriptor\nfrom ariblib.sections import ProgramAssociationSection, ProgramMapSection\n\nwith tsopen(sys.argv[1]) as ts:\n    pat = next(ts.sections(ProgramAssociationSection))\n    ProgramMapSection._pids = list(pat.pmt_pids)\n    for pmt in ts.sections(ProgramMapSection):\n        for tsmap in pmt.maps:\n            for vd in tsmap.descriptors.get(VideoDecodeControlDescriptor, []):\n                print(tsmap.elementary_PID, VIDEO_ENCODE_FORMAT[vd.video_encode_format])\n```\n\n\u4f7f\u3044\u65b9\u4f8b5: EPG\u60c5\u5831\u306e\u8868\u793a\n```python\nfrom ariblib import tsopen\nfrom ariblib.event import events\n\nimport sys\n\nwith tsopen(sys.argv[1]) as ts:\n    for event in events(ts):\n        max_len = max(map(len, event.__dict__.keys()))\n        template = \"{:%ds}  {}\" % max_len\n        for key, value in event.__dict__.items():\n            print(template.format(key, value))\n        print('-' * 80)\n```\n\n\u4f7f\u3044\u65b9\u4f8b6: \u6df1\u591c\u30a2\u30cb\u30e1\u306e\u51fa\u529b\n```python\n\nimport sys\n\nfrom ariblib import tsopen\nfrom ariblib.descriptors import ContentDescriptor, ShortEventDescriptor\nfrom ariblib.sections import EventInformationSection\n\nwith tsopen(sys.argv[1]) as ts:\n    EventInformationSection._table_ids = range(0x50, 0x70)\n    for eit in ts.sections(EventInformationSection):\n        for event in eit.events:\n            for genre in event.descriptors.get(ContentDescriptor, []):\n                nibble = genre.nibbles[0]\n                # \u30b8\u30e3\u30f3\u30eb\u304c\u30a2\u30cb\u30e1\u3067\u306a\u3044\u30a4\u30d9\u30f3\u30c8\u3001\u30a2\u30cb\u30e1\u3067\u3042\u3063\u3066\u3082\u653e\u9001\u958b\u59cb\u6642\u523b\u304c5\u6642\u304b\u308921\u6642\u306e\u3082\u306e\u3092\u9664\u304d\u307e\u3059\n                if nibble.content_nibble_level_1 != 0x07 or 4 < event.start_time.hour < 22:\n                    continue\n                for sed in event.descriptors.get(ShortEventDescriptor, []):\n                    print(eit.service_id, event.event_id, event.start_time,\n                          event.duration, sed.event_name_char, sed.text_char)\n```\n\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/youzaka/ariblib", "keywords": null, "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ariblib", "package_url": "https://pypi.org/project/ariblib/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ariblib/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/youzaka/ariblib"}, "release_url": "https://pypi.org/project/ariblib/0.0.5/", "requires_dist": null, "requires_python": null, "summary": "python implementation of arib-std-b10 and arib-std-b24", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            ariblib<br>=======<br><br>\u901f\u5ea6\u512a\u5148\u306e Transport Stream \u30d1\u30fc\u30b5\u3067\u3059\u3002<br>Python 3.2 \u3067\u306e\u52d5\u4f5c\u304c\u524d\u63d0\u3067\u3059\u304c\u30013.1 \u3067\u3082\u52d5\u304f\u304b\u3082\u3057\u308c\u307e\u305b\u3093\u3002<br><br>```<br>$ sudo python3.2 setup.py install<br>```<br><br>ARIB-STD \u3067\u5b9a\u7fa9\u3055\u308c\u3066\u3044\u308b\u30c7\u30fc\u30bf\u69cb\u9020\u3092\u306a\u308b\u3079\u304f\u8fd1\u3044\u5f62\u3067<br>Python \u30b3\u30fc\u30c9\u3068\u3057\u3066\u8a18\u8ff0\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u3044\u307e\u3059\u3002<br><br>\u305f\u3068\u3048\u3070\u3001 Program Map Section \u306e\u30c7\u30fc\u30bf\u69cb\u9020\u306f ARIB-STD-B10 \u7b2c2\u90e8\u4ed8\u9332E \u8868E-3 \u3067<br>\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3055\u308c\u3066\u3044\u307e\u3059:<br><br>```<br>TS_program_map_section(){<br>    table_id                   8  uimsbf<br>    section_syntax_indicator   1  bslbf<br>    \u20180\u2019                        1  bslbf<br>    reserved                   2  bslbf<br>    section_length            12  uimsbf<br>    program_number            16  uimsbf<br>    reserved                   2  bslbf<br>    version_number             5  uimsbf<br>    current_next_indicator     1  bslbf<br>    section_number             8  uimsbf<br>    last_section_number        8  uimsbf<br>    reserved                   3  bslbf<br>    PCR_PID                   13  uimsbf<br>    reserved                   4  bslbf<br>    program_info_length       12  uimsbf<br>    for (i=0;i&lt;N;i++){<br>        descriptor()<br>    }<br>    for (i=0;i&lt;N1;i++){<br>        stream_type            8  uimsbf<br>        reserved               3  bslbf<br>        elementary_PID        13  uimsbf<br>        reserved               4  bslbf<br>        ES_info_length        12  uimsbf<br>        for (i=0;i&lt;N2;i++){<br>            descriptor()<br>        }<br>    }<br>    CRC_32                    32 rpchof<br>```<br>\u3053\u308c\u3092 ariblib \u3067\u306f\u4ee5\u4e0b\u306e\u3088\u3046\u306b\u8a18\u8ff0\u3057\u307e\u3059\u3002 (\u8aac\u660e\u306b\u5fc5\u8981\u3067\u306a\u3044\u884c\u306f\u7701\u7565\u3057\u3066\u3044\u307e\u3059)<br>```python<br><br>class ProgramMapSection(Section):<br>    table_id = uimsbf(8)<br>    section_syntax_indicator = bslbf(1)<br>    reserved_future_use = bslbf(1)<br>    reserved_1 = bslbf(2)<br>    section_length = uimsbf(12)<br>    program_number = uimsbf(16)<br>    reserved_2 = bslbf(2)<br>    version_number = uimsbf(5)<br>    current_next_indicator = bslbf(1)<br>    section_number = uimsbf(8)<br>    last_section_number = uimsbf(8)<br>    reserved_3 = bslbf(3)<br>    PCR_PID = uimsbf(13)<br>    reserved_4 = bslbf(4)<br>    program_info_length = uimsbf(12)<br>    descriptors = descriptors(program_info_length)<br><br>    @loop(lambda self: self.section_length - (13 + self.program_info_length))<br>    class maps(Syntax):<br>        stream_type = uimsbf(8)<br>        reserved_1 = bslbf(3)<br>        elementary_PID = uimsbf(13)<br>        reserved_2 = bslbf(4)<br>        ES_info_length = uimsbf(12)<br>        descriptors = descriptors(ES_info_length)<br><br>    CRC_32 = rpchof(32)<br>```<br><br>\u30d3\u30c3\u30c8\u5217\u8868\u8a18\u3092\u30c7\u30a3\u30b9\u30af\u30ea\u30d7\u30bf\u3068\u3057\u3066\u5b9f\u88c5\u3057\u305f\u308a\u3001\u7e70\u308a\u8fd4\u3057\u69cb\u9020\u3084\u5236\u5fa1\u69cb\u9020\u3092\u30c7\u30b3\u30ec\u30fc\u30bf\u3068\u3057\u3066\u5b9f\u88c5\u3057\u305f\u308a<br>\u3059\u308b\u3053\u3068\u3067\u3001\u306a\u308b\u3079\u304f\u4ed5\u69d8\u66f8\u306b\u8fd1\u3044\u5f62\u3067\u30af\u30e9\u30b9\u306e\u8868\u8a18\u304c\u3067\u304d\u308b\u3088\u3046\u306b\u3057\u3066\u307e\u3059\u3002<br><br>\u4f7f\u3044\u65b9\u4f8b1 \u5b57\u5e55\u3092\u8868\u793a<br>```python<br><br>from ariblib import tsopen<br>from ariblib.caption import captions<br><br>import sys<br><br>with tsopen(sys.argv[1]) as ts:<br>    for caption in captions(ts, color=True):<br>        body = str(caption.body)<br><br>        # \u30a2\u30c0\u30d7\u30c6\u30fc\u30b7\u30e7\u30f3\u30d5\u30a3\u30fc\u30eb\u30c9\u306e PCR \u306e\u5024\u3068\u3001\u305d\u3053\u304b\u3089\u4e00\u756a\u8fd1\u3044 TOT \u30c6\u30fc\u30d6\u30eb\u306e\u5024\u304b\u3089\u3001<br>        # \u5b57\u5e55\u306e\u8868\u793a\u3055\u308c\u305f\u6642\u523b\u3092\u8a08\u7b97\u3057\u307e\u3059 (\u82e5\u5e72\u8aa4\u5dee\u304c\u51fa\u307e\u3059)<br>        # PCR \u304c\u4e00\u5468\u3057\u305f\u5834\u5408\u306e\u51e6\u7406\u306f\u5b9f\u88c5\u3055\u308c\u3066\u3044\u307e\u305b\u3093<br>        datetime = caption.datetime.strftime('%Y-%m-%d %H:%M:%S')<br>        print('\\033[35m' + datetime + '\\33[37m')<br>        print(body)<br>```<br><br>\u4f7f\u3044\u65b9\u4f8b2 \u3044\u307e\u653e\u9001\u4e2d\u306e\u756a\u7d44\u3068\u6b21\u306e\u756a\u7d44\u3092\u8868\u793a<br>```python<br><br>import sys<br><br>from ariblib import tsopen<br>from ariblib.descriptors import ShortEventDescriptor<br>from ariblib.sections import EventInformationSection<br><br>def show_program(eit):<br>    event = eit.events.__next__()<br>    program_title = event.descriptors[ShortEventDescriptor][0].event_name_char<br>    start = event.start_time<br>    return \"{} {}\".format(program_title, start)<br><br>with tsopen(sys.argv[1]) as ts:<br>    # \u81ea\u30b9\u30c8\u30ea\u30fc\u30e0\u306e\u73fe\u5728\u3068\u6b21\u306e\u756a\u7d44\u3092\u8868\u793a\u3059\u308b<br>    EventInformationSection._table_ids = [0x4E]<br>    current = next(table for table in ts.sections(EventInformationSection)<br>                   if table.section_number == 0)<br>    following = next(table for table in ts.sections(EventInformationSection)<br>                     if table.section_number == 1)<br>    print('\u4eca\u306e\u756a\u7d44', show_program(current))<br>    print('\u6b21\u306e\u756a\u7d44', show_program(following))<br>```<br><br>\u4f7f\u3044\u65b9\u4f8b3: \u653e\u9001\u5c40\u540d\u306e\u4e00\u6b04\u3092\u8868\u793a<br>(\u5730\u4e0a\u6ce2\u3067\u306f\u305d\u306e\u5c40, BS\u3067\u306f\u5168\u5c40\u304c\u8868\u793a\u3055\u308c\u308b)<br>```python<br><br>import sys<br><br>from ariblib import tsopen<br>from ariblib.constant import SERVICE_TYPES<br>from ariblib.descriptors import ServiceDescriptor<br>from ariblib.sections import ServiceDescriptionSection<br><br>with tsopen(sys.argv[1]) as ts:<br>    for sdt in ts.sections(ServiceDescriptionSection):<br>        for service in sdt.services:<br>            for sd in service.descriptors[ServiceDescriptor]:<br>                print(service.service_id, SERVICE_TYPE[sd.service_type],<br>                      sd.service_provider_name, sd.service_name)<br>```<br><br>\u4f7f\u3044\u65b9\u4f8b4: \u52d5\u753b\u30d1\u30b1\u30c3\u30c8\u306e PID \u3068\u305d\u306e\u52d5\u753b\u306e\u89e3\u50cf\u5ea6\u3092\u8868\u793a<br>```python<br><br>import sys<br><br>from ariblib import tsopen<br>from ariblib.constants import VIDEO_ENCODE_FORMATS<br>from ariblib.descriptors import VideoDecodeControlDescriptor<br>from ariblib.sections import ProgramAssociationSection, ProgramMapSection<br><br>with tsopen(sys.argv[1]) as ts:<br>    pat = next(ts.sections(ProgramAssociationSection))<br>    ProgramMapSection._pids = list(pat.pmt_pids)<br>    for pmt in ts.sections(ProgramMapSection):<br>        for tsmap in pmt.maps:<br>            for vd in tsmap.descriptors.get(VideoDecodeControlDescriptor, []):<br>                print(tsmap.elementary_PID, VIDEO_ENCODE_FORMAT[vd.video_encode_format])<br>```<br><br>\u4f7f\u3044\u65b9\u4f8b5: EPG\u60c5\u5831\u306e\u8868\u793a<br>```python<br>from ariblib import tsopen<br>from ariblib.event import events<br><br>import sys<br><br>with tsopen(sys.argv[1]) as ts:<br>    for event in events(ts):<br>        max_len = max(map(len, event.__dict__.keys()))<br>        template = \"{:%ds}  {}\" % max_len<br>        for key, value in event.__dict__.items():<br>            print(template.format(key, value))<br>        print('-' * 80)<br>```<br><br>\u4f7f\u3044\u65b9\u4f8b6: \u6df1\u591c\u30a2\u30cb\u30e1\u306e\u51fa\u529b<br>```python<br><br>import sys<br><br>from ariblib import tsopen<br>from ariblib.descriptors import ContentDescriptor, ShortEventDescriptor<br>from ariblib.sections import EventInformationSection<br><br>with tsopen(sys.argv[1]) as ts:<br>    EventInformationSection._table_ids = range(0x50, 0x70)<br>    for eit in ts.sections(EventInformationSection):<br>        for event in eit.events:<br>            for genre in event.descriptors.get(ContentDescriptor, []):<br>                nibble = genre.nibbles[0]<br>                # \u30b8\u30e3\u30f3\u30eb\u304c\u30a2\u30cb\u30e1\u3067\u306a\u3044\u30a4\u30d9\u30f3\u30c8\u3001\u30a2\u30cb\u30e1\u3067\u3042\u3063\u3066\u3082\u653e\u9001\u958b\u59cb\u6642\u523b\u304c5\u6642\u304b\u308921\u6642\u306e\u3082\u306e\u3092\u9664\u304d\u307e\u3059<br>                if nibble.content_nibble_level_1 != 0x07 or 4 &lt; event.start_time.hour &lt; 22:<br>                    continue<br>                for sed in event.descriptors.get(ShortEventDescriptor, []):<br>                    print(eit.service_id, event.event_id, event.start_time,<br>                          event.duration, sed.event_name_char, sed.text_char)<br>```<br><br>\n          </div>"}, "last_serial": 1943902, "releases": {"0.0.1": [], "0.0.2": [{"comment_text": "", "digests": {"md5": "7e5460e5b57470c0b63f7de10fab223b", "sha256": "d108087129e38394b86746d9081b782ed3fdebecedb9aedb1bef81990fdc5669"}, "downloads": -1, "filename": "ariblib-0.0.2-py3.2.egg", "has_sig": false, "md5_digest": "7e5460e5b57470c0b63f7de10fab223b", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 79582, "upload_time": "2012-09-28T13:44:43", "upload_time_iso_8601": "2012-09-28T13:44:43.244075Z", "url": "https://files.pythonhosted.org/packages/f2/70/2eb21c495a472f0eeee6fcd140ad0aa6e6e313d35d9ce13b42621493bc89/ariblib-0.0.2-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "f5a9fa7c578b566b5d7d99bfeff16ef1", "sha256": "8ecaf6dba54ce0d541ed77ca5dada935c58f4e359d3560f828a3cd84c9f630a9"}, "downloads": -1, "filename": "ariblib-0.0.2.tar.gz", "has_sig": false, "md5_digest": "f5a9fa7c578b566b5d7d99bfeff16ef1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 26739, "upload_time": "2012-09-28T13:44:41", "upload_time_iso_8601": "2012-09-28T13:44:41.553799Z", "url": "https://files.pythonhosted.org/packages/ce/af/047d444206bccf85781e7781e099d782129015afcc99256be8e7ca187dbe/ariblib-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "built for Darwin-10.8.0", "digests": {"md5": "8bd254e211511924a8e934a5cf8096c1", "sha256": "f44d9743e0b5fbf192575591432f4c15f0b75cd10f38674a8c684a9718300493"}, "downloads": -1, "filename": "ariblib-0.0.3.macosx-10.4-x86_64.tar.gz", "has_sig": false, "md5_digest": "8bd254e211511924a8e934a5cf8096c1", "packagetype": "bdist_dumb", "python_version": "any", "requires_python": null, "size": 68001, "upload_time": "2012-10-21T09:58:13", "upload_time_iso_8601": "2012-10-21T09:58:13.550354Z", "url": "https://files.pythonhosted.org/packages/78/f2/5752c5969d9ba01b6963940c16cdf5026fd67c602cf91dca061195f42cfe/ariblib-0.0.3.macosx-10.4-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "95a5cb0392532534b9ec8ca34c3330a7", "sha256": "0788c5871dd974a284987ae7fc02c84a6fa83c0c5c7155b7a52290dd8563f490"}, "downloads": -1, "filename": "ariblib-0.0.3-py3.2.egg", "has_sig": false, "md5_digest": "95a5cb0392532534b9ec8ca34c3330a7", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 84466, "upload_time": "2012-10-21T09:58:16", "upload_time_iso_8601": "2012-10-21T09:58:16.121259Z", "url": "https://files.pythonhosted.org/packages/95/6d/53d73c897f567b8acc60952e8e40ab57ae568003ecca26609a3e2696dcb5/ariblib-0.0.3-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "a2654db977f22d4bf4cf40a9e33bcc2e", "sha256": "7806855e97ad3965332390977242fd287a515e40265374642597a8fc92df0673"}, "downloads": -1, "filename": "ariblib-0.0.3.tar.gz", "has_sig": false, "md5_digest": "a2654db977f22d4bf4cf40a9e33bcc2e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28676, "upload_time": "2012-10-21T09:58:11", "upload_time_iso_8601": "2012-10-21T09:58:11.158187Z", "url": "https://files.pythonhosted.org/packages/7d/f0/96b0f23613852a9804107d34958ba37f7db3f45d26075c1a132c3061596f/ariblib-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "8d001f426d2452f019c5119e43eb05c1", "sha256": "b5805a192f679527f14a074ec1e2d292712d5b59732ecea04f6eb641832cf276"}, "downloads": -1, "filename": "ariblib-0.0.4-py3.2.egg", "has_sig": false, "md5_digest": "8d001f426d2452f019c5119e43eb05c1", "packagetype": "bdist_egg", "python_version": "3.2", "requires_python": null, "size": 83382, "upload_time": "2012-11-15T16:34:37", "upload_time_iso_8601": "2012-11-15T16:34:37.161382Z", "url": "https://files.pythonhosted.org/packages/fa/90/9f177cbbe507083b1ec89d2b6fae5a61b9a6d328be615e0710b7d47f7c37/ariblib-0.0.4-py3.2.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ad814aa49a1a5e5e69fc083d8d184a6", "sha256": "d2ffa22c5ecaef033b4389026030ccbe2d1e3982245b76701fa6b902d22ba829"}, "downloads": -1, "filename": "ariblib-0.0.4.tar.gz", "has_sig": false, "md5_digest": "5ad814aa49a1a5e5e69fc083d8d184a6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 31171, "upload_time": "2012-11-15T16:34:32", "upload_time_iso_8601": "2012-11-15T16:34:32.100380Z", "url": "https://files.pythonhosted.org/packages/31/d8/5f6af7218e73827f5bbf0a20d5d7ac896c7adefeaa1624f2fcef276ecb3c/ariblib-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "c3777f19c51a805c25d299507e0413e1", "sha256": "0fc13019b0350dc64cb8cccb4ba6c2e452acacd0221fe5f8cc0ddfe64fd91032"}, "downloads": -1, "filename": "ariblib-0.0.5.tar.gz", "has_sig": false, "md5_digest": "c3777f19c51a805c25d299507e0413e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37794, "upload_time": "2016-02-07T07:18:57", "upload_time_iso_8601": "2016-02-07T07:18:57.474419Z", "url": "https://files.pythonhosted.org/packages/8f/e0/f3ebdc38ad639167a4545e30c9bc3d3004c75e162589abb7d080692b6e37/ariblib-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c3777f19c51a805c25d299507e0413e1", "sha256": "0fc13019b0350dc64cb8cccb4ba6c2e452acacd0221fe5f8cc0ddfe64fd91032"}, "downloads": -1, "filename": "ariblib-0.0.5.tar.gz", "has_sig": false, "md5_digest": "c3777f19c51a805c25d299507e0413e1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37794, "upload_time": "2016-02-07T07:18:57", "upload_time_iso_8601": "2016-02-07T07:18:57.474419Z", "url": "https://files.pythonhosted.org/packages/8f/e0/f3ebdc38ad639167a4545e30c9bc3d3004c75e162589abb7d080692b6e37/ariblib-0.0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:15 2020"}