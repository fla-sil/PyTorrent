{"info": {"author": "maticstric", "author_email": "maticjecar@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# ebukafy\n\nThe `ebukafy` utility will convert a plain text file into a nicely \nformatted html file to be used as a chapter in an epub.\n\n## Usage\nIt is recommended that you use `ebukafy` in conjunction with Calibre. If \nyou do, read the [Use with Calibre](#use-with-calibre) section first.\n\n`Usage: ebukafy [-h] [-p paragraph-separator] [-s section-separator] \nfilename...`\n\n### Options\n1. `paragraph-separator`: sequence of characters that will \ndelimit paragraphs. Default value: \"\\t\".\n\n2. `section-seperator`: the sequence of characters that will delimit \na section (the things I'm calling 'sections' are usually delimited by an \nempty line in paper books. In other words, sections are the chunks \nbigger than paragraphs and smaller than chapters). Default value: \n\"\\n\\n\". If the text only has one section, just make this something\nrandom that won't appear in the text.\n\nNOTE: If you want to change these two separators, make sure to use ANSI\nC like strings. These are used like so: `$'string'`. For example: if you \nwant to use `ebukafy` with `\\n\\n` as the `paragraph-separator` and \n`\\n\\n\\n` as the `section-separator`, you would call it like so:\n\n`ebukafy -p $'\\n\\n' -s $'\\n\\n\\n' filename...`\n\n3. `-h`: print out usage statement\n\n### Args\nAfter these options, include as many files as you want to `ebukafy`.\n\n### Output\nThe output of this utility will be a folder called `ebukafy_index` \nfilled with files named `index_n.html`, with n starting at 1 and \nincrementing for each `filename` you include when calling `ebukafy`. \nThese are the nicely formatted html files that you can use in your \nepub. Additionally, the folder will include a copy of \n`stylesheet_additions.css` that you can find in this repository.\n\n## Use with Calibre\nThis utility is meant to be used in conjunction with [Calibre](\nhttps://calibre-ebook.com/).\n\n1. Create an empty txt file anywhere.\n2. In Calibre, in the upper left corner, click \"Add books\", which should \nopen a file selector.\n3. In the file selector, navigate to the empty txt file you created, and \nopen it.\n4. This should create a new empty book in Calibre. If you want to, you \ncan add the metadata for the book such as the title, author, cover, etc.\n5. In Calibre, convert the book you created to an EPUB.\n6. After converting, select the book in the library and click \"Edit \nbook\" in the top right corner.\n7. On the left side you'll see the files that were created. Remove the \none called index.html, if one exists. You probably want to keep the \ntitle page (titlepage.xhtml) since most books need a cover.\n8. **IMPORTANT**: All EPUBs use a css file called stylesheet.css to give \ngreater control over the formatting of the book. `ebukafy` uses its own \nstylesheet to format the html. To find it, look at the \n`stylesheet_additions.css` file in this repo (or in the `ebukafy_index`\nfolder created by `ebukafy` after you run it) and add its contents to \nthe stylesheet.css of the EPUB. In Calibre, you can find this stylesheet \nin the \"Edit book\" editor.\n\n9. At this point, the boilerplate code is set up and you need to run \n`ebukafy`. Look at [Usage](#usage) section.\n\n10. Click the \"Add file\" button in the top left of the \"Edit book\" \neditor. You should name it `index_n.html` where n is a number that \nincrements with each file you add (first file is `index_1.html`, second \nfile is `index_2.html`, etc.). Into each file, you put the html created \nby `ebukafy`.\n\n## Use without Calibre\n`ebukafy` generates nicely formatted html documents based on a provided\ntxt file. Though it is much easier to put these files into an actual\nepub with Calibre, it is not necessary if you know what you're doing.\nJust make sure to read the [Usage](#usage) section.\n\n**IMPORTANT**: All EPUBs use a css file called stylesheet.css to give \ngreater control over the formatting of the book. `ebukafy` uses its own \nstylesheet to format the html. To find it, look at the \n`stylesheet_additions.css` file in this repo (or in the`ebukafy_index` \nfolder created by `ebukafy` after you run it) and add its contents to \nthe stylesheet.css of the EPUB. \n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maticstric/ebukafy", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ebukafy", "package_url": "https://pypi.org/project/ebukafy/", "platform": "", "project_url": "https://pypi.org/project/ebukafy/", "project_urls": {"Homepage": "https://github.com/maticstric/ebukafy"}, "release_url": "https://pypi.org/project/ebukafy/0.0.2/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Turn a text file into an epub chapter", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ebukafy</h1>\n<p>The <code>ebukafy</code> utility will convert a plain text file into a nicely\nformatted html file to be used as a chapter in an epub.</p>\n<h2>Usage</h2>\n<p>It is recommended that you use <code>ebukafy</code> in conjunction with Calibre. If\nyou do, read the <a href=\"#use-with-calibre\" rel=\"nofollow\">Use with Calibre</a> section first.</p>\n<p><code>Usage: ebukafy [-h] [-p paragraph-separator] [-s section-separator] filename...</code></p>\n<h3>Options</h3>\n<ol>\n<li>\n<p><code>paragraph-separator</code>: sequence of characters that will\ndelimit paragraphs. Default value: \"\\t\".</p>\n</li>\n<li>\n<p><code>section-seperator</code>: the sequence of characters that will delimit\na section (the things I'm calling 'sections' are usually delimited by an\nempty line in paper books. In other words, sections are the chunks\nbigger than paragraphs and smaller than chapters). Default value:\n\"\\n\\n\". If the text only has one section, just make this something\nrandom that won't appear in the text.</p>\n</li>\n</ol>\n<p>NOTE: If you want to change these two separators, make sure to use ANSI\nC like strings. These are used like so: <code>$'string'</code>. For example: if you\nwant to use <code>ebukafy</code> with <code>\\n\\n</code> as the <code>paragraph-separator</code> and\n<code>\\n\\n\\n</code> as the <code>section-separator</code>, you would call it like so:</p>\n<p><code>ebukafy -p $'\\n\\n' -s $'\\n\\n\\n' filename...</code></p>\n<ol>\n<li><code>-h</code>: print out usage statement</li>\n</ol>\n<h3>Args</h3>\n<p>After these options, include as many files as you want to <code>ebukafy</code>.</p>\n<h3>Output</h3>\n<p>The output of this utility will be a folder called <code>ebukafy_index</code>\nfilled with files named <code>index_n.html</code>, with n starting at 1 and\nincrementing for each <code>filename</code> you include when calling <code>ebukafy</code>.\nThese are the nicely formatted html files that you can use in your\nepub. Additionally, the folder will include a copy of\n<code>stylesheet_additions.css</code> that you can find in this repository.</p>\n<h2>Use with Calibre</h2>\n<p>This utility is meant to be used in conjunction with <a href=\"https://calibre-ebook.com/\" rel=\"nofollow\">Calibre</a>.</p>\n<ol>\n<li>\n<p>Create an empty txt file anywhere.</p>\n</li>\n<li>\n<p>In Calibre, in the upper left corner, click \"Add books\", which should\nopen a file selector.</p>\n</li>\n<li>\n<p>In the file selector, navigate to the empty txt file you created, and\nopen it.</p>\n</li>\n<li>\n<p>This should create a new empty book in Calibre. If you want to, you\ncan add the metadata for the book such as the title, author, cover, etc.</p>\n</li>\n<li>\n<p>In Calibre, convert the book you created to an EPUB.</p>\n</li>\n<li>\n<p>After converting, select the book in the library and click \"Edit\nbook\" in the top right corner.</p>\n</li>\n<li>\n<p>On the left side you'll see the files that were created. Remove the\none called index.html, if one exists. You probably want to keep the\ntitle page (titlepage.xhtml) since most books need a cover.</p>\n</li>\n<li>\n<p><strong>IMPORTANT</strong>: All EPUBs use a css file called stylesheet.css to give\ngreater control over the formatting of the book. <code>ebukafy</code> uses its own\nstylesheet to format the html. To find it, look at the\n<code>stylesheet_additions.css</code> file in this repo (or in the <code>ebukafy_index</code>\nfolder created by <code>ebukafy</code> after you run it) and add its contents to\nthe stylesheet.css of the EPUB. In Calibre, you can find this stylesheet\nin the \"Edit book\" editor.</p>\n</li>\n<li>\n<p>At this point, the boilerplate code is set up and you need to run\n<code>ebukafy</code>. Look at <a href=\"#usage\" rel=\"nofollow\">Usage</a> section.</p>\n</li>\n<li>\n<p>Click the \"Add file\" button in the top left of the \"Edit book\"\neditor. You should name it <code>index_n.html</code> where n is a number that\nincrements with each file you add (first file is <code>index_1.html</code>, second\nfile is <code>index_2.html</code>, etc.). Into each file, you put the html created\nby <code>ebukafy</code>.</p>\n</li>\n</ol>\n<h2>Use without Calibre</h2>\n<p><code>ebukafy</code> generates nicely formatted html documents based on a provided\ntxt file. Though it is much easier to put these files into an actual\nepub with Calibre, it is not necessary if you know what you're doing.\nJust make sure to read the <a href=\"#usage\" rel=\"nofollow\">Usage</a> section.</p>\n<p><strong>IMPORTANT</strong>: All EPUBs use a css file called stylesheet.css to give\ngreater control over the formatting of the book. <code>ebukafy</code> uses its own\nstylesheet to format the html. To find it, look at the\n<code>stylesheet_additions.css</code> file in this repo (or in the<code>ebukafy_index</code>\nfolder created by <code>ebukafy</code> after you run it) and add its contents to\nthe stylesheet.css of the EPUB.</p>\n\n          </div>"}, "last_serial": 6585409, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "95f0210f101262ec6fa7274ae97f0249", "sha256": "fb3cbf9e9ad17e7037200574f7423a630f65b257525e1d4a231adb61cb98bd6c"}, "downloads": -1, "filename": "ebukafy-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "95f0210f101262ec6fa7274ae97f0249", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3697, "upload_time": "2020-02-04T23:35:30", "upload_time_iso_8601": "2020-02-04T23:35:30.415750Z", "url": "https://files.pythonhosted.org/packages/26/89/c0a8798bd8e692f87e1280185af908e57a5e92199ad8623bd8654ecf7702/ebukafy-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e02d6a1b197f79c0da473fd277179513", "sha256": "482c32cde987032147ab15b4632b88dea3fe7f28bcd6d108c76d9767bfe4ec0c"}, "downloads": -1, "filename": "ebukafy-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e02d6a1b197f79c0da473fd277179513", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 2970, "upload_time": "2020-02-04T23:35:32", "upload_time_iso_8601": "2020-02-04T23:35:32.720469Z", "url": "https://files.pythonhosted.org/packages/6a/89/23378442d4f6e171c7d139f264334a8d94b5a608f7bb9fe05f57df18d772/ebukafy-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "14b6987013278a6209d197e01f9df112", "sha256": "04a30a88d0fa25b585bb555c627f0f976ea3db739dd4531275cd626d43099751"}, "downloads": -1, "filename": "ebukafy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14b6987013278a6209d197e01f9df112", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3764, "upload_time": "2020-02-06T23:39:06", "upload_time_iso_8601": "2020-02-06T23:39:06.944096Z", "url": "https://files.pythonhosted.org/packages/f4/a4/b064b518e409f70a07b2e9c9b4b444456977c5751ad5504d9dbc7af5675c/ebukafy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a494db4c4b812a7cd4d7a699686eedd", "sha256": "8f88ddb1d97dbcda33af975d6ae53034a11bc023964f57911d91b16574742906"}, "downloads": -1, "filename": "ebukafy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7a494db4c4b812a7cd4d7a699686eedd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3040, "upload_time": "2020-02-06T23:39:09", "upload_time_iso_8601": "2020-02-06T23:39:09.167145Z", "url": "https://files.pythonhosted.org/packages/0a/26/e404ecd6c0217b7082be75ec41200361be780f187079e4c2d9b5028e5fa0/ebukafy-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "14b6987013278a6209d197e01f9df112", "sha256": "04a30a88d0fa25b585bb555c627f0f976ea3db739dd4531275cd626d43099751"}, "downloads": -1, "filename": "ebukafy-0.0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "14b6987013278a6209d197e01f9df112", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 3764, "upload_time": "2020-02-06T23:39:06", "upload_time_iso_8601": "2020-02-06T23:39:06.944096Z", "url": "https://files.pythonhosted.org/packages/f4/a4/b064b518e409f70a07b2e9c9b4b444456977c5751ad5504d9dbc7af5675c/ebukafy-0.0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7a494db4c4b812a7cd4d7a699686eedd", "sha256": "8f88ddb1d97dbcda33af975d6ae53034a11bc023964f57911d91b16574742906"}, "downloads": -1, "filename": "ebukafy-0.0.2.tar.gz", "has_sig": false, "md5_digest": "7a494db4c4b812a7cd4d7a699686eedd", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3040, "upload_time": "2020-02-06T23:39:09", "upload_time_iso_8601": "2020-02-06T23:39:09.167145Z", "url": "https://files.pythonhosted.org/packages/0a/26/e404ecd6c0217b7082be75ec41200361be780f187079e4c2d9b5028e5fa0/ebukafy-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:48:07 2020"}