{"info": {"author": "Andreas Zweili", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\n# Borg-Qt\n\nBorg-Qt is a Python 3 based graphical frontend for the backup tool\n[BorgBackup](https://github.com/borgbackup/borg) as its name implies it is\nusing the Qt5 Framework. Currently it works only on Linux.\n\n\n## Motivation\n\nI think Borg is a great backup tool which should be available to many more\nusers. Since command line tools can be a bit scary for less experienced users I\ndecided to write a GUI as my \"thesis\" during my final semester at\nthe IBZ school in Aarau, Switzerland.\n\n## Getting Started\n\nThese instructions will get you a copy of the project up and running on your\nlocal machine.\n\n### Prerequisites\n\nYou need to have Borg installed in order to have Borg-Qt working. You can get a\nbinary for your operating system here:\nhttps://github.com/borgbackup/borg/releases\n\nOn a Debian based system you can install it by copying to `~/.local/bin/`. Borg\nneeds to be able to get executed by calling the command `borg`.\n\n``` bash\ncp ~/Downloads/borg-linux64 ~/.local/bin/borg\nchmod +x ~/.local/bin/borg\n```\n\nFor other systems check their\n[documenation](https://borgbackup.readthedocs.io/en/stable/).\n\n### Installing\n\n1. Installing Borg-Qt is very simple. Download the binary for your operating\nsystem here: <https://github.com/borgqt/borg-qt/releases> or install it with pip:\n``` bash\npip3 install borg-qt\n```\n\n2. Copy the config file from\n[docs/borg_qt.conf.example](https://github.com/borg-qt/borg-qt/blob/master/docs/borg_qt.conf.example)\nto `~/.config/borg_qt/borg_qt.conf` and edit it to contain a valid path to\nyour BorgBackup repository and the password. Put all your changes into the\n`[borgqt]` section. As of now there is no automated way to setup Borg-Qt.\n\n3. Run the binary by double clicking on it or by copying it to\n`~/.local/bin/` like Borg. If you do that you might want to create a desktop\nfile for it. Puth the following code into a `borg-qt.desktop` file in\n`~/.local/share/applications/`.\n\n```\n[Desktop Entry]\nVersion=1.0\nName=Borg-Qt\nExec=/home/username/.local/bin/borg-qt\nTerminal=false\nType=Application\nCategories=Tools\nMimeType=x-scheme-handler/tg;\n```\n\nMake sure the file is executable:\n\n``` bash\nchmod +x ~/.local/share/applications/borg-qt.desktop\n```\n\nNow you should find Borg-Qt in your desktop's start menu.\n\nIf you installed Borg-Qt with pip you can either run `borg_qt` from the\ncommand line or edit the desktop file to exec `borg_qt` instead of the full\npath.\n\n## Development\n\nTo start working on Borg-Qt first clone the git repository and install\nBorgBackup as described in [Prerequisites].\n\n```bash\ngit clone https://github.com/borg-qt/borg-qt.git\n```\n\nNow create a virtual environment.\n\n```bash\ncd borg-qt\npython3 -m venv venv\n```\n\nAnd activate it.\n\n```bash\nsource venv/bin/activate\n```\n\nFinally you can install Borg-Qt and it's dependencies.\n\n```bash\npip3 install -e .\n```\n\nYou're now all set to work on Borg-Qt. It's a good idea to run the tests before\nstarting. You can do this with the following command from the root of the\nrepository.\n\n```bash\nmake test\n```\n\nTo make testing the application while programming a bit easier there's a script\nwhich reloads the application everytime a file changes in the `borg_qt`\ndirectory. You to use it run the following command from the root of the\nrepository.\n\n```bash\n./scripts/debugging.sh\n```\n\n### ToDos\n\nTo have a look at all the planned tasks you can have a look at the planned\nfeatures here: [todos.md](docs/todos.md)\n\n## Used packages\n\n- [PyQt5](https://pyqt.readthedocs.io/en/latest/) - the GUI framework\n- [PyInstaller](https://pyinstaller.readthedocs.io/en/stable/) - used for\n  creating the binary\n- [pytest](https://docs.pytest.org/en/latest/) - used for testing\n- [pytest-cov](https://pytest-cov.readthedocs.io/en/latest/) - used for\n  coverage analysis\n\n## Contributing\n\nEveryone is welcome to submit pull requests and reports issues.\nPlease follow PEP8 and remove unnecessary white space when you contribute code.\nAnd most importantly make sure that you don't break any tests and if possible\nwrite tests for your code.\n\n## Versioning\n\nCurrently there is no versioning as such. In the future a versioning scheme\nbased on [semantic versioning](http://semver.org/) might get used. The master\nbranch is considered to be the stable branch. Other branches might be highly\nexperimental.\n\n## Authors\n\n-   Andreas Zweili - *Initial work* -\n    [Nebucatnetzer](https://github.com/Nebucatnetzer)\n\n## License\n\nThis project is licensed under the GPLv3 License - see the <LICENSE> file\nfor details.\n\n## Acknowledgments\n\n- Thanks to PurpleBooth for her [README\n  template](https://gist.github.com/PurpleBooth/109311bb0361f32d87a2).\n- Thanks to [Back in Time](https://github.com/bit-team/backintime) for the\n  inspiration.\n- Thanks to [Feather Icons](https://github.com/feathericons/feather) for their\n  great icon set.\n- Thanks to [Kenneth Reitz](https://github.com/kennethreitz/setup.py)  for the\n  example repo for setup.py\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/borg-qt/borg-qt.git", "keywords": "", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "borg-qt", "package_url": "https://pypi.org/project/borg-qt/", "platform": "", "project_url": "https://pypi.org/project/borg-qt/", "project_urls": {"Homepage": "https://github.com/borg-qt/borg-qt.git"}, "release_url": "https://pypi.org/project/borg-qt/2019.5.30.1/", "requires_dist": ["PyQt5"], "requires_python": ">=3.6.0", "summary": "A graphical frontend for BorgBackup.", "version": "2019.5.30.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Borg-Qt</h1>\n<p>Borg-Qt is a Python 3 based graphical frontend for the backup tool\n<a href=\"https://github.com/borgbackup/borg\" rel=\"nofollow\">BorgBackup</a> as its name implies it is\nusing the Qt5 Framework. Currently it works only on Linux.</p>\n<h2>Motivation</h2>\n<p>I think Borg is a great backup tool which should be available to many more\nusers. Since command line tools can be a bit scary for less experienced users I\ndecided to write a GUI as my \"thesis\" during my final semester at\nthe IBZ school in Aarau, Switzerland.</p>\n<h2>Getting Started</h2>\n<p>These instructions will get you a copy of the project up and running on your\nlocal machine.</p>\n<h3>Prerequisites</h3>\n<p>You need to have Borg installed in order to have Borg-Qt working. You can get a\nbinary for your operating system here:\n<a href=\"https://github.com/borgbackup/borg/releases\" rel=\"nofollow\">https://github.com/borgbackup/borg/releases</a></p>\n<p>On a Debian based system you can install it by copying to <code>~/.local/bin/</code>. Borg\nneeds to be able to get executed by calling the command <code>borg</code>.</p>\n<pre>cp ~/Downloads/borg-linux64 ~/.local/bin/borg\nchmod +x ~/.local/bin/borg\n</pre>\n<p>For other systems check their\n<a href=\"https://borgbackup.readthedocs.io/en/stable/\" rel=\"nofollow\">documenation</a>.</p>\n<h3>Installing</h3>\n<ol>\n<li>Installing Borg-Qt is very simple. Download the binary for your operating\nsystem here: <a href=\"https://github.com/borgqt/borg-qt/releases\" rel=\"nofollow\">https://github.com/borgqt/borg-qt/releases</a> or install it with pip:</li>\n</ol>\n<pre>pip3 install borg-qt\n</pre>\n<ol>\n<li>\n<p>Copy the config file from\n<a href=\"https://github.com/borg-qt/borg-qt/blob/master/docs/borg_qt.conf.example\" rel=\"nofollow\">docs/borg_qt.conf.example</a>\nto <code>~/.config/borg_qt/borg_qt.conf</code> and edit it to contain a valid path to\nyour BorgBackup repository and the password. Put all your changes into the\n<code>[borgqt]</code> section. As of now there is no automated way to setup Borg-Qt.</p>\n</li>\n<li>\n<p>Run the binary by double clicking on it or by copying it to\n<code>~/.local/bin/</code> like Borg. If you do that you might want to create a desktop\nfile for it. Puth the following code into a <code>borg-qt.desktop</code> file in\n<code>~/.local/share/applications/</code>.</p>\n</li>\n</ol>\n<pre><code>[Desktop Entry]\nVersion=1.0\nName=Borg-Qt\nExec=/home/username/.local/bin/borg-qt\nTerminal=false\nType=Application\nCategories=Tools\nMimeType=x-scheme-handler/tg;\n</code></pre>\n<p>Make sure the file is executable:</p>\n<pre>chmod +x ~/.local/share/applications/borg-qt.desktop\n</pre>\n<p>Now you should find Borg-Qt in your desktop's start menu.</p>\n<p>If you installed Borg-Qt with pip you can either run <code>borg_qt</code> from the\ncommand line or edit the desktop file to exec <code>borg_qt</code> instead of the full\npath.</p>\n<h2>Development</h2>\n<p>To start working on Borg-Qt first clone the git repository and install\nBorgBackup as described in [Prerequisites].</p>\n<pre>git clone https://github.com/borg-qt/borg-qt.git\n</pre>\n<p>Now create a virtual environment.</p>\n<pre><span class=\"nb\">cd</span> borg-qt\npython3 -m venv venv\n</pre>\n<p>And activate it.</p>\n<pre><span class=\"nb\">source</span> venv/bin/activate\n</pre>\n<p>Finally you can install Borg-Qt and it's dependencies.</p>\n<pre>pip3 install -e .\n</pre>\n<p>You're now all set to work on Borg-Qt. It's a good idea to run the tests before\nstarting. You can do this with the following command from the root of the\nrepository.</p>\n<pre>make <span class=\"nb\">test</span>\n</pre>\n<p>To make testing the application while programming a bit easier there's a script\nwhich reloads the application everytime a file changes in the <code>borg_qt</code>\ndirectory. You to use it run the following command from the root of the\nrepository.</p>\n<pre>./scripts/debugging.sh\n</pre>\n<h3>ToDos</h3>\n<p>To have a look at all the planned tasks you can have a look at the planned\nfeatures here: <a href=\"docs/todos.md\" rel=\"nofollow\">todos.md</a></p>\n<h2>Used packages</h2>\n<ul>\n<li><a href=\"https://pyqt.readthedocs.io/en/latest/\" rel=\"nofollow\">PyQt5</a> - the GUI framework</li>\n<li><a href=\"https://pyinstaller.readthedocs.io/en/stable/\" rel=\"nofollow\">PyInstaller</a> - used for\ncreating the binary</li>\n<li><a href=\"https://docs.pytest.org/en/latest/\" rel=\"nofollow\">pytest</a> - used for testing</li>\n<li><a href=\"https://pytest-cov.readthedocs.io/en/latest/\" rel=\"nofollow\">pytest-cov</a> - used for\ncoverage analysis</li>\n</ul>\n<h2>Contributing</h2>\n<p>Everyone is welcome to submit pull requests and reports issues.\nPlease follow PEP8 and remove unnecessary white space when you contribute code.\nAnd most importantly make sure that you don't break any tests and if possible\nwrite tests for your code.</p>\n<h2>Versioning</h2>\n<p>Currently there is no versioning as such. In the future a versioning scheme\nbased on <a href=\"http://semver.org/\" rel=\"nofollow\">semantic versioning</a> might get used. The master\nbranch is considered to be the stable branch. Other branches might be highly\nexperimental.</p>\n<h2>Authors</h2>\n<ul>\n<li>Andreas Zweili - <em>Initial work</em> -\n<a href=\"https://github.com/Nebucatnetzer\" rel=\"nofollow\">Nebucatnetzer</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is licensed under the GPLv3 License - see the &lt;LICENSE&gt; file\nfor details.</p>\n<h2>Acknowledgments</h2>\n<ul>\n<li>Thanks to PurpleBooth for her <a href=\"https://gist.github.com/PurpleBooth/109311bb0361f32d87a2\" rel=\"nofollow\">README\ntemplate</a>.</li>\n<li>Thanks to <a href=\"https://github.com/bit-team/backintime\" rel=\"nofollow\">Back in Time</a> for the\ninspiration.</li>\n<li>Thanks to <a href=\"https://github.com/feathericons/feather\" rel=\"nofollow\">Feather Icons</a> for their\ngreat icon set.</li>\n<li>Thanks to <a href=\"https://github.com/kennethreitz/setup.py\" rel=\"nofollow\">Kenneth Reitz</a>  for the\nexample repo for setup.py</li>\n</ul>\n\n          </div>"}, "last_serial": 5341826, "releases": {"2019.5.30": [{"comment_text": "", "digests": {"md5": "5f52942221fce4eb086014053f5272db", "sha256": "fedc6152074a896f4cc00c5af9a8e27e9b62e83acd8c08f49073b48b53429515"}, "downloads": -1, "filename": "borg_qt-2019.5.30-py3-none-any.whl", "has_sig": false, "md5_digest": "5f52942221fce4eb086014053f5272db", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 131726, "upload_time": "2019-05-31T08:47:46", "upload_time_iso_8601": "2019-05-31T08:47:46.119251Z", "url": "https://files.pythonhosted.org/packages/f8/e1/5ea3a6a0d72b2a1914c09dea2cd6bba637c67afcc138c6dc5369f3ef6691/borg_qt-2019.5.30-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d38c661fd226e51987064821a3794318", "sha256": "6906d5d1f45f864e6ca58325e9df6f63b158b357bb377084edc0ddddbc482a76"}, "downloads": -1, "filename": "borg_qt-2019.5.30.tar.gz", "has_sig": false, "md5_digest": "d38c661fd226e51987064821a3794318", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 123903, "upload_time": "2019-05-31T08:47:48", "upload_time_iso_8601": "2019-05-31T08:47:48.741493Z", "url": "https://files.pythonhosted.org/packages/32/23/ce2f5bd488e1d3e8377743786b033990ed6b824ffbc0b878334ad8211ff1/borg_qt-2019.5.30.tar.gz", "yanked": false}], "2019.5.30.1": [{"comment_text": "", "digests": {"md5": "38633fa408b1dce29cef59fb0c434338", "sha256": "565211a15d69029c901e3c6cc2c4dfdce1f07c614b7cb476f190e382a019d435"}, "downloads": -1, "filename": "borg_qt-2019.5.30.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38633fa408b1dce29cef59fb0c434338", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 131857, "upload_time": "2019-05-31T09:03:18", "upload_time_iso_8601": "2019-05-31T09:03:18.995921Z", "url": "https://files.pythonhosted.org/packages/51/4d/3525288616885ab204b901e30d502e58909124b027724915e0f25d33a76b/borg_qt-2019.5.30.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6648b4c519c8b5be582f1c15791546bc", "sha256": "8e560346be865a143142383af26dbcdab87162e7bc692b476f72502eb2a45b4d"}, "downloads": -1, "filename": "borg_qt-2019.5.30.1.tar.gz", "has_sig": false, "md5_digest": "6648b4c519c8b5be582f1c15791546bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 124186, "upload_time": "2019-05-31T09:03:20", "upload_time_iso_8601": "2019-05-31T09:03:20.606706Z", "url": "https://files.pythonhosted.org/packages/df/de/8294dda944cb0534c3359d253539c93a17945d9831614eb816ce6b692a36/borg_qt-2019.5.30.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38633fa408b1dce29cef59fb0c434338", "sha256": "565211a15d69029c901e3c6cc2c4dfdce1f07c614b7cb476f190e382a019d435"}, "downloads": -1, "filename": "borg_qt-2019.5.30.1-py3-none-any.whl", "has_sig": false, "md5_digest": "38633fa408b1dce29cef59fb0c434338", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.0", "size": 131857, "upload_time": "2019-05-31T09:03:18", "upload_time_iso_8601": "2019-05-31T09:03:18.995921Z", "url": "https://files.pythonhosted.org/packages/51/4d/3525288616885ab204b901e30d502e58909124b027724915e0f25d33a76b/borg_qt-2019.5.30.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6648b4c519c8b5be582f1c15791546bc", "sha256": "8e560346be865a143142383af26dbcdab87162e7bc692b476f72502eb2a45b4d"}, "downloads": -1, "filename": "borg_qt-2019.5.30.1.tar.gz", "has_sig": false, "md5_digest": "6648b4c519c8b5be582f1c15791546bc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.0", "size": 124186, "upload_time": "2019-05-31T09:03:20", "upload_time_iso_8601": "2019-05-31T09:03:20.606706Z", "url": "https://files.pythonhosted.org/packages/df/de/8294dda944cb0534c3359d253539c93a17945d9831614eb816ce6b692a36/borg_qt-2019.5.30.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:41 2020"}