{"info": {"author": "Justin Engel", "author_email": "jtengel08@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3"], "description": "Numpy Read Write Buffer\n=======================\n\nThis library was created to help store audio data in a numpy array. It allows for writing lists and numpy arrays into a circular buffer. You can read the data from the buffer with overlap to perform smooth FFTs.\nThe buffer is a wrapper around a numpy ndarray. It contains a start and end position to keep track of where to read and write the data.\n\nMain Functions:\n  * clear() - Clear the length, start, and end indexes\n  * get_data() - Return a copy of the data without moving indexes\n  * set_data(data) - Set the data and change the shape of the buffer to this data shape\n  * write(data, error) - Write data into the buffer and move the end index\n  * read(amount) - Read data from the buffer and move the start index. If the amount is greater that what is in the buffer return a 0 length buffer\n\nExtra Functions to help with the start and end pointers:\n  * expanding_write(data, error) - Write data into the buffer. If the data is larger than the buffer expand the buffer\n  * growing_write(data) - Write data into the buffer if there is not enough space make the buffer larger\n  * read_remaining(amount) - Read the amount or read all of the data available to read\n  * read_overlap(amount, increment) - Read the amount of data given, but only increment the start index by the increment amount. This makes the next read, read some duplicate data (hence overlap)\n\nBuffer Control Functions:\n  * maxsize - (property) change the amount of samples that can be held\n  * columns - (property) Number of columns that the array contains (shape[1])\n  * shape - (property) Change the shape of the buffer\n  * dtype - (property) Change the data type for the numpy buffer\n  * get_indexes(start, length) - Return a list of indexes for reading and writing (this makes the buffer circular)\n  * move_start(amount, error) - Move the start index (read)\n  * move_end(amount, error) - Move the end index (write)\n  * get_available_space() - return the amount of data that the buffer can still hold\n\n\nExample - simple example\n------------------------\nSimple reading and writing. See test_buffer for tests and usage.\n\n.. code-block:: python\n\n    import numpy as np\n    import np_rw_buffer\n\n    buffer = np_rw_buffer.RingBuffer(10)\n\n    buffer.write(np.arange(5))\n    r = buffer.read(4)\n    assert np.all(r == np.arange(4).reshape((-1, 1)))\n\n    # Not enough data, don't read anything (use read_remaining or get_data)\n    d = np.arange(5).reshape((-1, 1))\n    buffer.write(d)\n    r = buffer.read(10)\n    assert len(r) == 0\n    assert len(buffer) == 6\n\n    r = buffer.read()\n    assert len(r) == 6\n    assert np.all(r == np.vstack((d[-1:], d)))\n\n    buffer.write(np.arange(6))\n    # buffer.write(np.arange(5))  # Raises an OverflowError\n    buffer.write(np.arange(5), False)\n\n\nExample - AudioFramingBuffer\n----------------------------\nThe AudioFramingBuffer is slightly different from the RingBuffer. It has a sample_rate, seconds, and buffer_delay.\n\nIt's main differences are how it reads and writes. The start and end pointers are completely different and decoupled. \nThe start pointer can underrun the end pointer and back fills with 0's. The end pointer can overrun the start pointer.\n\n.. code-block:: python\n\n    import numpy as np\n    from np_rw_buffer import AudioFramingBuffer\n\n    buffer = AudioFramingBuffer(2000, 1)\n    buffer.write(np.array([(i,) for i in range(10)]))\n    # Buffer: [(read ptr)0, 1, 2, 3, 4, 5, 6, 7, 8, 9, (write ptr) 0, 0, 0, 0, 0]\n    assert buffer._end == 10\n    assert buffer._start == 0\n\n    # [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, (write ptr) 0, 0, 0, 0, 0] (read ptr at end)\n    assert np.all(buffer.read(15) == np.array([0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0]).reshape((-1, 1)))\n    assert buffer._start == 15\n    assert buffer._end == 10\n\n    buffer.write(np.array([(i,) for i in range(10)])) # This will write in the position after 19\n    # Buffer: [0, 0, 0, 0, 0, 0, 0, 0, 0, (was 9) 0, 0, 1, 2, 3, 4, (read ptr) 5, 6, 7, 8, 9] (write ptr at end)\n    assert buffer._end == 20\n    assert buffer._start == 15\n\n    # [5, 6, 7, 8, 9, (write ptr) 0, 0, 0, 0, 0] (read ptr at end)\n    assert np.all(buffer.read(10) == np.array([5, 6, 7, 8, 9, 0, 0, 0, 0, 0]).reshape((-1, 1)))\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/justengel/np_rw_buffer/archive/v1.1.8.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/justengel/np_rw_buffer", "keywords": "read write ring circular buffer", "license": "Proprietary", "maintainer": "", "maintainer_email": "", "name": "np-rw-buffer", "package_url": "https://pypi.org/project/np-rw-buffer/", "platform": "", "project_url": "https://pypi.org/project/np-rw-buffer/", "project_urls": {"Download": "https://github.com/justengel/np_rw_buffer/archive/v1.1.8.tar.gz", "Homepage": "https://github.com/justengel/np_rw_buffer"}, "release_url": "https://pypi.org/project/np-rw-buffer/1.1.8/", "requires_dist": ["numpy (>=1.13.0)"], "requires_python": "", "summary": "Library to help store audio data in a circular buffer.", "version": "1.1.8", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This library was created to help store audio data in a numpy array. It allows for writing lists and numpy arrays into a circular buffer. You can read the data from the buffer with overlap to perform smooth FFTs.\nThe buffer is a wrapper around a numpy ndarray. It contains a start and end position to keep track of where to read and write the data.</p>\n<dl>\n<dt>Main Functions:</dt>\n<dd><ul>\n<li>clear() - Clear the length, start, and end indexes</li>\n<li>get_data() - Return a copy of the data without moving indexes</li>\n<li>set_data(data) - Set the data and change the shape of the buffer to this data shape</li>\n<li>write(data, error) - Write data into the buffer and move the end index</li>\n<li>read(amount) - Read data from the buffer and move the start index. If the amount is greater that what is in the buffer return a 0 length buffer</li>\n</ul>\n</dd>\n<dt>Extra Functions to help with the start and end pointers:</dt>\n<dd><ul>\n<li>expanding_write(data, error) - Write data into the buffer. If the data is larger than the buffer expand the buffer</li>\n<li>growing_write(data) - Write data into the buffer if there is not enough space make the buffer larger</li>\n<li>read_remaining(amount) - Read the amount or read all of the data available to read</li>\n<li>read_overlap(amount, increment) - Read the amount of data given, but only increment the start index by the increment amount. This makes the next read, read some duplicate data (hence overlap)</li>\n</ul>\n</dd>\n<dt>Buffer Control Functions:</dt>\n<dd><ul>\n<li>maxsize - (property) change the amount of samples that can be held</li>\n<li>columns - (property) Number of columns that the array contains (shape[1])</li>\n<li>shape - (property) Change the shape of the buffer</li>\n<li>dtype - (property) Change the data type for the numpy buffer</li>\n<li>get_indexes(start, length) - Return a list of indexes for reading and writing (this makes the buffer circular)</li>\n<li>move_start(amount, error) - Move the start index (read)</li>\n<li>move_end(amount, error) - Move the end index (write)</li>\n<li>get_available_space() - return the amount of data that the buffer can still hold</li>\n</ul>\n</dd>\n</dl>\n<div id=\"example-simple-example\">\n<h2>Example - simple example</h2>\n<p>Simple reading and writing. See test_buffer for tests and usage.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">import</span> <span class=\"nn\">np_rw_buffer</span>\n\n<span class=\"n\">buffer</span> <span class=\"o\">=</span> <span class=\"n\">np_rw_buffer</span><span class=\"o\">.</span><span class=\"n\">RingBuffer</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n\n<span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">))</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">==</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n\n<span class=\"c1\"># Not enough data, don't read anything (use read_remaining or get_data)</span>\n<span class=\"n\">d</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">))</span>\n<span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">d</span><span class=\"p\">)</span>\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">6</span>\n\n<span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">()</span>\n<span class=\"k\">assert</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">r</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">6</span>\n<span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">r</span> <span class=\"o\">==</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">vstack</span><span class=\"p\">((</span><span class=\"n\">d</span><span class=\"p\">[</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">:],</span> <span class=\"n\">d</span><span class=\"p\">)))</span>\n\n<span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">6</span><span class=\"p\">))</span>\n<span class=\"c1\"># buffer.write(np.arange(5))  # Raises an OverflowError</span>\n<span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">arange</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">),</span> <span class=\"kc\">False</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"example-audioframingbuffer\">\n<h2>Example - AudioFramingBuffer</h2>\n<p>The AudioFramingBuffer is slightly different from the RingBuffer. It has a sample_rate, seconds, and buffer_delay.</p>\n<p>It\u2019s main differences are how it reads and writes. The start and end pointers are completely different and decoupled.\nThe start pointer can underrun the end pointer and back fills with 0\u2019s. The end pointer can overrun the start pointer.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"kn\">from</span> <span class=\"nn\">np_rw_buffer</span> <span class=\"kn\">import</span> <span class=\"n\">AudioFramingBuffer</span>\n\n<span class=\"n\">buffer</span> <span class=\"o\">=</span> <span class=\"n\">AudioFramingBuffer</span><span class=\"p\">(</span><span class=\"mi\">2000</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([(</span><span class=\"n\">i</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]))</span>\n<span class=\"c1\"># Buffer: [(read ptr)0, 1, 2, 3, 4, 5, 6, 7, 8, 9, (write ptr) 0, 0, 0, 0, 0]</span>\n<span class=\"k\">assert</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">_end</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n<span class=\"k\">assert</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">_start</span> <span class=\"o\">==</span> <span class=\"mi\">0</span>\n\n<span class=\"c1\"># [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, (write ptr) 0, 0, 0, 0, 0] (read ptr at end)</span>\n<span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">15</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">,</span> <span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n<span class=\"k\">assert</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">_start</span> <span class=\"o\">==</span> <span class=\"mi\">15</span>\n<span class=\"k\">assert</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">_end</span> <span class=\"o\">==</span> <span class=\"mi\">10</span>\n\n<span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([(</span><span class=\"n\">i</span><span class=\"p\">,)</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)]))</span> <span class=\"c1\"># This will write in the position after 19</span>\n<span class=\"c1\"># Buffer: [0, 0, 0, 0, 0, 0, 0, 0, 0, (was 9) 0, 0, 1, 2, 3, 4, (read ptr) 5, 6, 7, 8, 9] (write ptr at end)</span>\n<span class=\"k\">assert</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">_end</span> <span class=\"o\">==</span> <span class=\"mi\">20</span>\n<span class=\"k\">assert</span> <span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">_start</span> <span class=\"o\">==</span> <span class=\"mi\">15</span>\n\n<span class=\"c1\"># [5, 6, 7, 8, 9, (write ptr) 0, 0, 0, 0, 0] (read ptr at end)</span>\n<span class=\"k\">assert</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">all</span><span class=\"p\">(</span><span class=\"n\">buffer</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">array</span><span class=\"p\">([</span><span class=\"mi\">5</span><span class=\"p\">,</span> <span class=\"mi\">6</span><span class=\"p\">,</span> <span class=\"mi\">7</span><span class=\"p\">,</span> <span class=\"mi\">8</span><span class=\"p\">,</span> <span class=\"mi\">9</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">])</span><span class=\"o\">.</span><span class=\"n\">reshape</span><span class=\"p\">((</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">)))</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6670607, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "21d532d6f4f864437721c926420a369a", "sha256": "117676b32d0a54ca0f5e714cac3b9f67d85387f094cf52c813a2fb7446c7cbf9"}, "downloads": -1, "filename": "np_rw_buffer-1.0.0.tar.gz", "has_sig": false, "md5_digest": "21d532d6f4f864437721c926420a369a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7755, "upload_time": "2018-05-03T12:25:56", "upload_time_iso_8601": "2018-05-03T12:25:56.953923Z", "url": "https://files.pythonhosted.org/packages/61/dd/ee4d95a9929e621398bd7077dd65cdeb6e3aec79250ad880f516882b94a9/np_rw_buffer-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "4e4006e7fe962ddcb17d7ba75cb808b3", "sha256": "ccc4b69d592e418d60fe89dfd720f8c8f7c01b92189e8cee160302a25c9e426c"}, "downloads": -1, "filename": "np_rw_buffer-1.0.1.tar.gz", "has_sig": false, "md5_digest": "4e4006e7fe962ddcb17d7ba75cb808b3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7856, "upload_time": "2018-05-04T21:39:57", "upload_time_iso_8601": "2018-05-04T21:39:57.371468Z", "url": "https://files.pythonhosted.org/packages/ec/81/fc80d8be07149efec24789b1be1b7862392dbf08245196cded95b9aae1f5/np_rw_buffer-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a159bbb10249782a570e87d36c19eab3", "sha256": "d5fe1e8d58cd49d6a4365e1f853927c880b523dfa20be377880c3c007079a5fc"}, "downloads": -1, "filename": "np_rw_buffer-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a159bbb10249782a570e87d36c19eab3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7761, "upload_time": "2018-05-04T22:37:22", "upload_time_iso_8601": "2018-05-04T22:37:22.323609Z", "url": "https://files.pythonhosted.org/packages/43/c2/13d47953b4d2d57c6a0b16b40bc77dc68289dfb344e9228c92e5a2eb503c/np_rw_buffer-1.0.2.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "a191914190673510d91b45600b7cc591", "sha256": "50cd3c24b5576218193d7662cf54574ce5cddb558e8523ad5ec91922488bf653"}, "downloads": -1, "filename": "np_rw_buffer-1.1.0.tar.gz", "has_sig": false, "md5_digest": "a191914190673510d91b45600b7cc591", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10430, "upload_time": "2018-05-11T00:56:11", "upload_time_iso_8601": "2018-05-11T00:56:11.123145Z", "url": "https://files.pythonhosted.org/packages/2b/62/2d39dfeb755dfea3133754b07139383ba772c82bf4a45d494a39cf54ac18/np_rw_buffer-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "9f347fa438ecc00f3452791ab03b9db2", "sha256": "5d44e9996abc5a6752736fb48b2f7330e4505feb3912d1a2ce18916f9e258dfb"}, "downloads": -1, "filename": "np_rw_buffer-1.1.1.tar.gz", "has_sig": false, "md5_digest": "9f347fa438ecc00f3452791ab03b9db2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10420, "upload_time": "2018-05-12T12:23:51", "upload_time_iso_8601": "2018-05-12T12:23:51.286482Z", "url": "https://files.pythonhosted.org/packages/29/db/25a1e553c30982da584e1574b1b75a22f8c9991abf3b784878a6d5851723/np_rw_buffer-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "c6a2e6ece6797b5a3bef24c3b317e40f", "sha256": "ef3f6ecee5e1178256b431b14a8267504678c4778ca038ee987b2e36be2b1e04"}, "downloads": -1, "filename": "np_rw_buffer-1.1.2.tar.gz", "has_sig": false, "md5_digest": "c6a2e6ece6797b5a3bef24c3b317e40f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10437, "upload_time": "2018-06-18T20:44:36", "upload_time_iso_8601": "2018-06-18T20:44:36.322387Z", "url": "https://files.pythonhosted.org/packages/4e/e9/07b7142466532f80d6d448debf99d52988e2047b49a1cb9b5f821186c558/np_rw_buffer-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "bd6126f4cafd419d73fd1a9eb255e6c0", "sha256": "c28053989a373357192017b3b2b33b531527658d171a4ff04d94ee945598ae13"}, "downloads": -1, "filename": "np_rw_buffer-1.1.3.tar.gz", "has_sig": false, "md5_digest": "bd6126f4cafd419d73fd1a9eb255e6c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10919, "upload_time": "2018-08-28T15:44:25", "upload_time_iso_8601": "2018-08-28T15:44:25.888903Z", "url": "https://files.pythonhosted.org/packages/24/c2/25bfa85554442367943edc89b12151e930e0d51cfd2ad0b38fb6c4609279/np_rw_buffer-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "283b9b11bf72cec5fb74eff44edb9413", "sha256": "8573783e50c2cb24146ece0449659c492a5c8cad723bcaccfb4f7993d63bfdf8"}, "downloads": -1, "filename": "np_rw_buffer-1.1.4.tar.gz", "has_sig": false, "md5_digest": "283b9b11bf72cec5fb74eff44edb9413", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11017, "upload_time": "2018-08-28T16:48:09", "upload_time_iso_8601": "2018-08-28T16:48:09.843540Z", "url": "https://files.pythonhosted.org/packages/f7/e6/5e42f2ab96d5490e3c2039721899cc77ab2f3f22c81142fbf3136b228976/np_rw_buffer-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "57886a767b6228884fe33bf46114e202", "sha256": "c51bc608da80453ae5d660fdcf4725c46f5fbbcef285b317f6188b86252be4c1"}, "downloads": -1, "filename": "np_rw_buffer-1.1.5.tar.gz", "has_sig": false, "md5_digest": "57886a767b6228884fe33bf46114e202", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11100, "upload_time": "2018-10-01T22:42:43", "upload_time_iso_8601": "2018-10-01T22:42:43.995156Z", "url": "https://files.pythonhosted.org/packages/7c/89/8b0e478a026bf5886f0acaeda13a5e5c252b1079657d2c72f76f85f73890/np_rw_buffer-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "b5f45739331e3c45d0f80b816e0e9ca6", "sha256": "c550036cc4fd0099c75f0c131a0a217b60def6a751c79cb05a01e4e0c8e1c506"}, "downloads": -1, "filename": "np_rw_buffer-1.1.6.tar.gz", "has_sig": false, "md5_digest": "b5f45739331e3c45d0f80b816e0e9ca6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11205, "upload_time": "2018-10-08T20:18:13", "upload_time_iso_8601": "2018-10-08T20:18:13.247694Z", "url": "https://files.pythonhosted.org/packages/de/2d/a92be741869d3d925a59243d68e25763013bf155aa6c40fe599c71958956/np_rw_buffer-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "e01a975d51338c7732c3a2528055e4b7", "sha256": "053c828d7c0993a4a2eea0f9773140c4c3bc7dd5a1bc4d519fe494abd2840b5d"}, "downloads": -1, "filename": "np_rw_buffer-1.1.7.tar.gz", "has_sig": false, "md5_digest": "e01a975d51338c7732c3a2528055e4b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11224, "upload_time": "2018-11-13T17:43:00", "upload_time_iso_8601": "2018-11-13T17:43:00.064340Z", "url": "https://files.pythonhosted.org/packages/1b/b3/0e7885a12e28b4a3a5afaf86f0599863b28662ec55b0293a3e4d0893ac61/np_rw_buffer-1.1.7.tar.gz", "yanked": false}], "1.1.8": [{"comment_text": "", "digests": {"md5": "8b37f41ec5afef1621ff63d9d2ff8964", "sha256": "26d8793ad1871a29243772fac16fc0206a2e37a1abdf414039a7a32d4052e108"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp34-cp34m-win32.whl", "has_sig": false, "md5_digest": "8b37f41ec5afef1621ff63d9d2ff8964", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 54900, "upload_time": "2020-02-20T21:02:37", "upload_time_iso_8601": "2020-02-20T21:02:37.214778Z", "url": "https://files.pythonhosted.org/packages/39/67/de7d5a9aaa567c0b5be0ffa434e54f3e6b99bf370c18125bf632430e4da6/np_rw_buffer-1.1.8-cp34-cp34m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da8190f53e575afc825482020619ff3d", "sha256": "48d53e5bcb5bff2b610948d66d2aad633899c6da9c46432ef94b333349eb2415"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp34-cp34m-win_amd64.whl", "has_sig": false, "md5_digest": "da8190f53e575afc825482020619ff3d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 54717, "upload_time": "2020-02-20T21:02:39", "upload_time_iso_8601": "2020-02-20T21:02:39.031670Z", "url": "https://files.pythonhosted.org/packages/a0/e6/95002367ca280544364a1368fb9f6c11a45e4600314574ea8093019abed7/np_rw_buffer-1.1.8-cp34-cp34m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89e6507871e02fddbfb373af10b290a7", "sha256": "0d8cb0592b746809ee2b857e385082ae50895b2588c8936315697d5bf085125d"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "89e6507871e02fddbfb373af10b290a7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 45182, "upload_time": "2020-02-20T21:02:40", "upload_time_iso_8601": "2020-02-20T21:02:40.549693Z", "url": "https://files.pythonhosted.org/packages/af/06/5f17aab8e3ced92ebc690f0ca42e8c7e50b45a17433166c5e83597359426/np_rw_buffer-1.1.8-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "327b146aa953c41755a4ab23d0e9f676", "sha256": "efa14d91fde3c518ff38686a55cd9ef59bbfbd2fb0b1ff7e0002ba418f9fd77c"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "327b146aa953c41755a4ab23d0e9f676", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 39731, "upload_time": "2020-02-20T21:02:42", "upload_time_iso_8601": "2020-02-20T21:02:42.049250Z", "url": "https://files.pythonhosted.org/packages/3d/12/cfb64709b698535633565675f325f5b5e2c229d02f26936f432ba067121c/np_rw_buffer-1.1.8-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fba13c63b8392d061775d23a2f78333", "sha256": "b55ae4e9079d000b6fe9718ee9cd509859d2d920c2917a68ea954c0622f0e358"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "4fba13c63b8392d061775d23a2f78333", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 50638, "upload_time": "2020-02-20T21:02:43", "upload_time_iso_8601": "2020-02-20T21:02:43.677412Z", "url": "https://files.pythonhosted.org/packages/db/87/266295f894384d2c0f3da02ec81b0df2582df66dc36d51a71e3396e0ce1b/np_rw_buffer-1.1.8-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "014ea14e29f2603edcecafd04cc01141", "sha256": "41b719a629a0cf2ee85005b9a340da0d2d9500e64858acda37d7d7906df10242"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "014ea14e29f2603edcecafd04cc01141", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 56747, "upload_time": "2020-02-20T21:02:44", "upload_time_iso_8601": "2020-02-20T21:02:44.914112Z", "url": "https://files.pythonhosted.org/packages/57/72/6da21c3cd10b7bc85b50233aa9800b2bcfbffd3603d577ffa3367b5bea2a/np_rw_buffer-1.1.8-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "925294ef50222913e0acf27988123a36", "sha256": "40b31a41fa3966a003b5dae03f245752bb69d122da50a326ba24ad8cc995fbc6"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp38-cp38-win32.whl", "has_sig": false, "md5_digest": "925294ef50222913e0acf27988123a36", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 56128, "upload_time": "2020-02-20T21:02:46", "upload_time_iso_8601": "2020-02-20T21:02:46.639067Z", "url": "https://files.pythonhosted.org/packages/e7/40/f886e7e27616847d176d6079cf3272f05a86ecaf3be5e14d100d839102b9/np_rw_buffer-1.1.8-cp38-cp38-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0468d87bab0fb829eb769bf728177a83", "sha256": "e010aa3d83668794a764b73db677b2ec54b843f47f8835dd5b88be104aca6e12"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "0468d87bab0fb829eb769bf728177a83", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 56774, "upload_time": "2020-02-20T21:02:47", "upload_time_iso_8601": "2020-02-20T21:02:47.868181Z", "url": "https://files.pythonhosted.org/packages/22/1f/e4db2e707dce979f4188c1b9ef417f844aa413d447f3a9c0d9a310df9462/np_rw_buffer-1.1.8-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "028ffd0e176462cbf1b68353fec7af15", "sha256": "aea1ffdd3cb2ce2f4214c185d8b55d738a35a480d0d88974dc3237ab768cdc23"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8.tar.gz", "has_sig": false, "md5_digest": "028ffd0e176462cbf1b68353fec7af15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15067, "upload_time": "2020-02-20T21:02:49", "upload_time_iso_8601": "2020-02-20T21:02:49.756021Z", "url": "https://files.pythonhosted.org/packages/bd/a0/3845f00d785bc87a688f0cde17c2189007372a6bca3aec5f0ea1497e3720/np_rw_buffer-1.1.8.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b37f41ec5afef1621ff63d9d2ff8964", "sha256": "26d8793ad1871a29243772fac16fc0206a2e37a1abdf414039a7a32d4052e108"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp34-cp34m-win32.whl", "has_sig": false, "md5_digest": "8b37f41ec5afef1621ff63d9d2ff8964", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 54900, "upload_time": "2020-02-20T21:02:37", "upload_time_iso_8601": "2020-02-20T21:02:37.214778Z", "url": "https://files.pythonhosted.org/packages/39/67/de7d5a9aaa567c0b5be0ffa434e54f3e6b99bf370c18125bf632430e4da6/np_rw_buffer-1.1.8-cp34-cp34m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da8190f53e575afc825482020619ff3d", "sha256": "48d53e5bcb5bff2b610948d66d2aad633899c6da9c46432ef94b333349eb2415"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp34-cp34m-win_amd64.whl", "has_sig": false, "md5_digest": "da8190f53e575afc825482020619ff3d", "packagetype": "bdist_wheel", "python_version": "cp34", "requires_python": null, "size": 54717, "upload_time": "2020-02-20T21:02:39", "upload_time_iso_8601": "2020-02-20T21:02:39.031670Z", "url": "https://files.pythonhosted.org/packages/a0/e6/95002367ca280544364a1368fb9f6c11a45e4600314574ea8093019abed7/np_rw_buffer-1.1.8-cp34-cp34m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "89e6507871e02fddbfb373af10b290a7", "sha256": "0d8cb0592b746809ee2b857e385082ae50895b2588c8936315697d5bf085125d"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp36-cp36m-win32.whl", "has_sig": false, "md5_digest": "89e6507871e02fddbfb373af10b290a7", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 45182, "upload_time": "2020-02-20T21:02:40", "upload_time_iso_8601": "2020-02-20T21:02:40.549693Z", "url": "https://files.pythonhosted.org/packages/af/06/5f17aab8e3ced92ebc690f0ca42e8c7e50b45a17433166c5e83597359426/np_rw_buffer-1.1.8-cp36-cp36m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "327b146aa953c41755a4ab23d0e9f676", "sha256": "efa14d91fde3c518ff38686a55cd9ef59bbfbd2fb0b1ff7e0002ba418f9fd77c"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp36-cp36m-win_amd64.whl", "has_sig": false, "md5_digest": "327b146aa953c41755a4ab23d0e9f676", "packagetype": "bdist_wheel", "python_version": "cp36", "requires_python": null, "size": 39731, "upload_time": "2020-02-20T21:02:42", "upload_time_iso_8601": "2020-02-20T21:02:42.049250Z", "url": "https://files.pythonhosted.org/packages/3d/12/cfb64709b698535633565675f325f5b5e2c229d02f26936f432ba067121c/np_rw_buffer-1.1.8-cp36-cp36m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fba13c63b8392d061775d23a2f78333", "sha256": "b55ae4e9079d000b6fe9718ee9cd509859d2d920c2917a68ea954c0622f0e358"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp37-cp37m-win32.whl", "has_sig": false, "md5_digest": "4fba13c63b8392d061775d23a2f78333", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 50638, "upload_time": "2020-02-20T21:02:43", "upload_time_iso_8601": "2020-02-20T21:02:43.677412Z", "url": "https://files.pythonhosted.org/packages/db/87/266295f894384d2c0f3da02ec81b0df2582df66dc36d51a71e3396e0ce1b/np_rw_buffer-1.1.8-cp37-cp37m-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "014ea14e29f2603edcecafd04cc01141", "sha256": "41b719a629a0cf2ee85005b9a340da0d2d9500e64858acda37d7d7906df10242"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp37-cp37m-win_amd64.whl", "has_sig": false, "md5_digest": "014ea14e29f2603edcecafd04cc01141", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": null, "size": 56747, "upload_time": "2020-02-20T21:02:44", "upload_time_iso_8601": "2020-02-20T21:02:44.914112Z", "url": "https://files.pythonhosted.org/packages/57/72/6da21c3cd10b7bc85b50233aa9800b2bcfbffd3603d577ffa3367b5bea2a/np_rw_buffer-1.1.8-cp37-cp37m-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "925294ef50222913e0acf27988123a36", "sha256": "40b31a41fa3966a003b5dae03f245752bb69d122da50a326ba24ad8cc995fbc6"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp38-cp38-win32.whl", "has_sig": false, "md5_digest": "925294ef50222913e0acf27988123a36", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 56128, "upload_time": "2020-02-20T21:02:46", "upload_time_iso_8601": "2020-02-20T21:02:46.639067Z", "url": "https://files.pythonhosted.org/packages/e7/40/f886e7e27616847d176d6079cf3272f05a86ecaf3be5e14d100d839102b9/np_rw_buffer-1.1.8-cp38-cp38-win32.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0468d87bab0fb829eb769bf728177a83", "sha256": "e010aa3d83668794a764b73db677b2ec54b843f47f8835dd5b88be104aca6e12"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8-cp38-cp38-win_amd64.whl", "has_sig": false, "md5_digest": "0468d87bab0fb829eb769bf728177a83", "packagetype": "bdist_wheel", "python_version": "cp38", "requires_python": null, "size": 56774, "upload_time": "2020-02-20T21:02:47", "upload_time_iso_8601": "2020-02-20T21:02:47.868181Z", "url": "https://files.pythonhosted.org/packages/22/1f/e4db2e707dce979f4188c1b9ef417f844aa413d447f3a9c0d9a310df9462/np_rw_buffer-1.1.8-cp38-cp38-win_amd64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "028ffd0e176462cbf1b68353fec7af15", "sha256": "aea1ffdd3cb2ce2f4214c185d8b55d738a35a480d0d88974dc3237ab768cdc23"}, "downloads": -1, "filename": "np_rw_buffer-1.1.8.tar.gz", "has_sig": false, "md5_digest": "028ffd0e176462cbf1b68353fec7af15", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15067, "upload_time": "2020-02-20T21:02:49", "upload_time_iso_8601": "2020-02-20T21:02:49.756021Z", "url": "https://files.pythonhosted.org/packages/bd/a0/3845f00d785bc87a688f0cde17c2189007372a6bca3aec5f0ea1497e3720/np_rw_buffer-1.1.8.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:31 2020"}