{"info": {"author": "Martin J. Levy", "author_email": "martin@cloudflare.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.2", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "cloudflare-python\n=================\n\nInstallation\n------------\n\nTwo methods are provided to install this software. Use PyPi (see\n`package <https://pypi.python.org/pypi/cloudflare>`__ details) or GitHub\n(see `package <https://github.com/cloudflare/python-cloudflare>`__\ndetails).\n\nVia PyPI\n~~~~~~~~\n\n.. code:: bash\n\n        $ sudo pip install cloudflare\n        $\n\nYes - that simple! (the sudo may not be needed in some cases).\n\nVia github\n~~~~~~~~~~\n\n.. code:: bash\n\n        $ git clone https://github.com/cloudflare/python-cloudflare\n        $ cd python-cloudflare\n        $ ./setup.py build\n        $ sudo ./setup.py install\n        $\n\nOr whatever variance of that you want to use. There is a Makefile\nincluded.\n\nCloudflare name change - dropping the capital F\n-----------------------------------------------\n\nIn Sepember/October 2016 the company modified its company name and\ndropped the capital F. However, for now (and for backward compatibility\nreasons) the class name stays the same.\n\nCloudflare API version 4\n------------------------\n\nThe Cloudflare API can be found `here <https://api.cloudflare.com/>`__.\nEach API call is provided via a similarly named function within the\n**CloudFlare** class. A full list is provided below.\n\nExample code\n------------\n\nAll example code is available on GitHub (see\n`package <https://github.com/cloudflare/python-cloudflare>`__ in the\n`examples <https://github.com/cloudflare/python-cloudflare/tree/master/examples>`__\nfolder).\n\nBlog\n----\n\nThis package was initially introduced\n`here <https://blog.cloudflare.com/python-cloudflare/>`__ via\nCloudflare's `blog <https://blog.cloudflare.com/>`__.\n\nGetting Started\n---------------\n\nA very simple listing of zones within your account; including the IPv6\nstatus of the zone.\n\n.. code:: python\n\n    import CloudFlare\n\n    def main():\n        cf = CloudFlare.CloudFlare()\n        zones = cf.zones.get()\n        for zone in zones:\n            zone_id = zone['id']\n            zone_name = zone['name']\n            print zone_id, zone_name\n\n    if __name__ == '__main__':\n        main()\n\nThis example works when there are less than 50 zones (50 is the default\nnumber of values returned from a query like this).\n\nNow lets expand on that and add code to show the IPv6 and SSL status of\nthe zones. Lets also query 100 zones.\n\n.. code:: python\n\n    import CloudFlare\n\n    def main():\n        cf = CloudFlare.CloudFlare()\n        zones = cf.zones.get(params = {'per_page':100})\n        for zone in zones:\n            zone_id = zone['id']\n            zone_name = zone['name']\n\n            settings_ssl = cf.zones.settings.ssl.get(zone_id)\n            ssl_status = settings_ssl['value']\n\n            settings_ipv6 = cf.zones.settings.ipv6.get(zone_id)\n            ipv6_status = settings_ipv6['value']\n\n            print zone_id, zone_name, ssl_status, ipv6_status\n\n    if __name__ == '__main__':\n        main()\n\nIn order to query more than a single page of zones, we would have to use\nthe raw mode (described more below). We can loop over many get calls and\npass the page parameter to facilitate the paging.\n\nRaw mode is only needed when a get request has the possibility of\nreturning many items.\n\n.. code:: python\n\n    import CloudFlare\n\n    def main():\n        cf = CloudFlare.CloudFlare(raw=True)\n        page_number = 0\n        while True:\n            page_number += 1\n            raw_results = cf.zones.get(params={'per_page':5,'page':page_number})\n            zones = raw_results['result']\n\n            for zone in zones:\n                zone_id = zone['id']\n                zone_name = zone['name']\n                print zone_id, zone_name\n\n            total_pages = raw_results['result_info']['total_pages']\n            if page_number == total_pages:\n                break\n\n    if __name__ == '__main__':\n        main()\n\nA more complex example follows.\n\n.. code:: python\n\n    import CloudFlare\n\n    def main():\n        zone_name = 'example.com'\n\n        cf = CloudFlare.CloudFlare()\n\n        # query for the zone name and expect only one value back\n        try:\n            zones = cf.zones.get(params = {'name':zone_name,'per_page':1})\n        except CloudFlare.exceptions.CloudFlareAPIError as e:\n            exit('/zones.get %d %s - api call failed' % (e, e))\n        except Exception as e:\n            exit('/zones.get - %s - api call failed' % (e))\n\n        if len(zones) == 0:\n            exit('No zones found')\n\n        # extract the zone_id which is needed to process that zone\n        zone = zones[0]\n        zone_id = zone['id']\n\n        # request the DNS records from that zone\n        try:\n            dns_records = cf.zones.dns_records.get(zone_id)\n        except CloudFlare.exceptions.CloudFlareAPIError as e:\n            exit('/zones/dns_records.get %d %s - api call failed' % (e, e))\n\n        # print the results - first the zone name\n        print zone_id, zone_name\n\n        # then all the DNS records for that zone\n        for dns_record in dns_records:\n            r_name = dns_record['name']\n            r_type = dns_record['type']\n            r_value = dns_record['content']\n            r_id = dns_record['id']\n            print '\\t', r_id, r_name, r_type, r_value\n\n        exit(0)\n\n    if __name__ == '__main__':\n        main()\n\nProviding Cloudflare Username and API Key\n-----------------------------------------\n\nWhen you create a **CloudFlare** class you can pass up to four\nparameters.\n\n-  API Token or API Key\n-  Account email (only if an API Key is being used)\n-  Optional Origin-CA Certificate Token\n-  Optional Debug flag (True/False)\n\n.. code:: python\n\n    import CloudFlare\n\n        # A minimal call - reading values from environment variables or configuration file\n        cf = CloudFlare.CloudFlare()\n\n        # A minimal call with debug enabled\n        cf = CloudFlare.CloudFlare(debug=True))\n\n        # An authenticated call using an API Token (note the missing email)\n        cf = CloudFlare.CloudFlare(token='00000000000000000000000000000000')\n\n        # An authenticated call using an API Key\n        cf = CloudFlare.CloudFlare(email='user@example.com', token='00000000000000000000000000000000')\n\n        # An authenticated call using an API Key and CA-Origin info\n        cf = CloudFlare.CloudFlare(email='user@example.com', token='00000000000000000000000000000000', certtoken='v1.0-...')\n\n        # An authenticated call using using a stored profile (see below)\n        cf = CloudFlare.CloudFlare(profile=\"CompanyX\"))\n\nIf the account email and API key are not passed when you create the\nclass, then they are retrieved from either the users exported shell\nenvironment variables or the .cloudflare.cfg or ~/.cloudflare.cfg or\n~/.cloudflare/cloudflare.cfg files, in that order.\n\nIf you're using an API Token, any ``cloudflare.cfg`` file must either\nnot contain an ``email`` attribute or be a zero length string and the\n``CF_API_EMAIL`` environment variable must be unset or be a zero length\nstring, otherwise the token will be treated as a key and will throw an\nerror.\n\nThere is one call that presently doesn't need any email or token\ncertification (the */ips* call); hence you can test without any values\nsaved away.\n\nUsing shell environment variables\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ export CF_API_EMAIL='user@example.com' # Do not set if using an API Token\n    $ export CF_API_KEY='00000000000000000000000000000000'\n    $ export CF_API_CERTKEY='v1.0-...'\n    $\n\nThese are optional environment variables; however, they do override the\nvalues set within a configuration file.\n\nUsing configuration file to store email and keys\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ cat ~/.cloudflare/cloudflare.cfg\n    [CloudFlare]\n    email = user@example.com # Do not set if using an API Token\n    token = 00000000000000000000000000000000\n    certtoken = v1.0-...\n    extras =\n    $\n\nMore than one profile can be stored within that file. Here's an example\nfor a work and home setup (in this example work has an API Token and\nhome uses email/token).\n\n.. code:: bash\n\n    $ cat ~/.cloudflare/cloudflare.cfg\n    [Work]\n    token = 00000000000000000000000000000000\n    [Home]\n    email = home@example.com\n    token = 00000000000000000000000000000000\n    $\n\nTo select a profile, use the ``--profile profile-name`` option for\n``cli4`` command or use ``profile=\"profile-name\"`` in the library call.\n\n.. code:: bash\n\n    $ cli4 --profile Work /zones | jq '.[]|.name' | wc -l\n          13\n    $\n\n    $ cli4 --profile Home /zones | jq '.[]|.name' | wc -l\n           1\n    $\n\nHere is the same in code.\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import CloudFlare\n\n    def main():\n        cf = CloudFlare.CloudFlare(profile=\"Work\")\n        ...\n\nAdvanced use of configuration file for authentication based on method\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe configuration file can have values that are both generic and\nspecific to the method. Here's an example where a project has a\ndifferent API Token for reading and writing values.\n\n.. code:: bash\n\n    $ cat ~/.cloudflare/cloudflare.cfg\n    [Work]\n    token = 0000000000000000000000000000000000000000\n    token.get = 0123456789012345678901234567890123456789\n    $\n\nWhen a GET call is processed then the second token is used. For all\nother calls the first token is used. Here's a more explict verion of\nthat config:\n\n.. code:: bash\n\n    $ cat ~/.cloudflare/cloudflare.cfg\n    [Work]\n    token.delete = 0000000000000000000000000000000000000000\n    token.get = 0123456789012345678901234567890123456789\n    token.patch = 0000000000000000000000000000000000000000\n    token.post = 0000000000000000000000000000000000000000\n    token.put = 0000000000000000000000000000000000000000\n    $\n\nThis can be used with email values also.\n\nAbout /certificates and certtoken\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe *CF\\_API\\_CERTKEY* or *certtoken* values are used for the Origin-CA\n*/certificates* API calls. You can leave *certtoken* in the\nconfiguration with a blank value (or omit the option variable fully).\n\nThe *extras* values are used when adding API calls outside of the core\ncodebase. Technically, this is only useful for internal testing within\nCloudflare. You can leave *extras* in the configuration with a blank\nvalue (or omit the option variable fully).\n\nExceptions and return values\n----------------------------\n\nResponse data\n~~~~~~~~~~~~~\n\nThe response is build from the JSON in the API call. It contains the\n**results** values; but does not contain the paging values.\n\nYou can return all the paging values by calling the class with raw=True.\nHere's an example without paging.\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import json\n    import CloudFlare\n\n    def main():\n        cf = CloudFlare.CloudFlare()\n        zones = cf.zones.get(params={'per_page':5})\n        print len(zones)\n\n    if __name__ == '__main__':\n        main()\n\nThe results are as follows.\n\n::\n\n    5\n\nWhen you add the raw option; the APIs full structure is returned. This\nmeans the paging values can be seen.\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import json\n    import CloudFlare\n\n    def main():\n        cf = CloudFlare.CloudFlare(raw=True)\n        zones = cf.zones.get(params={'per_page':5})\n        print zones.length()\n        print json.dumps(zones, indent=4, sort_keys=True)\n\n    if __name__ == '__main__':\n        main()\n\nThis produces.\n\n::\n\n    5\n    {\n        \"result\": [\n            ...\n        ],\n        \"result_info\": {\n            \"count\": 5,\n            \"page\": 1,\n            \"per_page\": 5,\n            \"total_count\": 31,\n            \"total_pages\": 7\n        }\n    }\n\nA full example of paging is provided below.\n\nExceptions\n~~~~~~~~~~\n\nThe library will raise **CloudFlareAPIError** when the API call fails.\nThe exception returns both an integer and textual message in one value.\n\n.. code:: python\n\n    import CloudFlare\n\n        ...\n        try\n            r = ...\n        except CloudFlare.exceptions.CloudFlareAPIError as e:\n            exit('api error: %d %s' % (e, e))\n        ...\n\nThe other raised response is **CloudFlareInternalError** which can\nhappen when calling an invalid method.\n\nIn some cases more than one error is returned. In this case the return\nvalue **e** is also an array. You can iterate over that array to see the\nadditional error.\n\n.. code:: python\n\n    import sys\n    import CloudFlare\n\n        ...\n        try\n            r = ...\n        except CloudFlare.exceptions.CloudFlareAPIError as e:\n            if len(e) > 0:\n                sys.stderr.write('api error - more than one error value returned!\\n')\n                for x in e:\n                    sys.stderr.write('api error: %d %s\\n' % (x, x))\n            exit('api error: %d %s' % (e, e))\n        ...\n\nException examples\n~~~~~~~~~~~~~~~~~~\n\nHere's examples using the CLI command cli4 of the responses passed back\nin exceptions.\n\nFirst a simple get with a clean (non-error) response.\n\n::\n\n    $ cli4 /zones/:example.com/dns_records | jq -c '.[]|{\"name\":.name,\"type\":.type,\"content\":.content}'\n    {\"name\":\"example.com\",\"type\":\"MX\",\"content\":\"something.example.com\"}\n    {\"name\":\"something.example.com\",\"type\":\"A\",\"content\":\"10.10.10.10\"}\n    $\n\nNext a simple/single error response. This is simulated by providing\nincorrect authentication information.\n\n::\n\n    $ CF_API_EMAIL='someone@example.com' cli4 /zones/\n    cli4: /zones - 9103 Unknown X-Auth-Key or X-Auth-Email\n    $\n\nMore than one call can be done on the same command line. In this mode,\nthe connection is preserved between calls.\n\n::\n\n    $ cli4 /user/organizations /user/invites\n    ...\n    $\n\nNote that the output is presently two JSON structures one after the\nother - so less useful that you may think.\n\nFinally, a command that provides more than one error response. This is\nsimulated by passing an invalid IPv4 address to a DNS record creation.\n\n::\n\n    $ cli4 --post name='foo' type=A content=\"1\" /zones/:example.com/dns_records\n    cli4: /zones/:example.com/dns_records - 9005 Content for A record is invalid. Must be a valid IPv4 address\n    cli4: /zones/:example.com/dns_records - 1004 DNS Validation Error\n    $\n\nIncluded example code\n---------------------\n\nThe\n`examples <https://github.com/cloudflare/python-cloudflare/tree/master/examples>`__\nfolder contains many examples in both simple and verbose formats.\n\nA DNS zone code example\n-----------------------\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import sys\n    import CloudFlare\n\n    def main():\n        zone_name = sys.argv[1]\n        cf = CloudFlare.CloudFlare()\n        zone_info = cf.zones.post(data={'jump_start':False, 'name': zone_name})\n        zone_id = zone_info['id']\n\n        dns_records = [\n            {'name':'foo', 'type':'AAAA', 'content':'2001:d8b::1'},\n            {'name':'foo', 'type':'A', 'content':'192.168.0.1'},\n            {'name':'duh', 'type':'A', 'content':'10.0.0.1', 'ttl':120},\n            {'name':'bar', 'type':'CNAME', 'content':'foo'},\n            {'name':'shakespeare', 'type':'TXT', 'content':\"What's in a name? That which we call a rose by any other name ...\"}\n        ]\n\n        for dns_record in dns_records:\n            r = cf.zones.dns_records.post(zone_id, data=dns_record)\n        exit(0)\n\n    if __name__ == '__main__':\n        main()\n\nA DNS zone delete code example (be careful)\n-------------------------------------------\n\n.. code:: python\n\n    #!/usr/bin/env python\n\n    import sys\n    import CloudFlare\n\n    def main():\n        zone_name = sys.argv[1]\n        cf = CloudFlare.CloudFlare()\n        zone_info = cf.zones.get(params={'name': zone_name})\n        zone_id = zone_info['id']\n\n        dns_name = sys.argv[2]\n        dns_records = cf.zones.dns_records.get(zone_id, params={'name':dns_name + '.' + zone_name})\n        for dns_record in dns_records:\n            dns_record_id = dns_record['id']\n            r = cf.zones.dns_records.delete(zone_id, dns_record_id)\n        exit(0)\n\n    if __name__ == '__main__':\n        main()\n\nCLI\n---\n\nAll API calls can be called from the command line. The command will\nconvert domain names prefixed with a colon (``:``) into\nzone\\_identifiers: e.g. to view ``example.com`` you must use\n``cli4 /zones/:example.com`` (the zone ID cannot be used).\n\n.. code:: bash\n\n    $ cli4 [-V|--version] [-h|--help] [-v|--verbose] [-q|--quiet] [-j|--json] [-y|--yaml] [-r|--raw] [-d|--dump] [--get|--patch|--post|--put|--delete] [item=value ...] /command...\n\nCLI parameters for POST/PUT/PATCH\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFor API calls that need to pass data or parameters there is various\nformats to use.\n\nThe simplest form is ``item=value``. This passes the value as a string\nwithin the APIs JSON data.\n\nIf you need a numeric value passed then **==** can be used to force the\nvalue to be treated as a numeric value within the APIs JSON data. For\nexample: ``item==value``.\n\nif you need to pass a list of items; then **[]** can be used. For\nexample:\n\n::\n\n    pool_id1=\"11111111111111111111111111111111\"\n    pool_id2=\"22222222222222222222222222222222\"\n    pool_id3=\"33333333333333333333333333333333\"\n    cli4 --post global_pools=\"[ ${pool_id1}, ${pool_id2}, ${pool_id3} ]\" region_pools=\"[ ]\" /user/load_balancers/maps\n\nData or parameters can be either named or unnamed. It can not be both.\nNamed is the majority format; as described above. Unnamed parameters\nsimply don't have anything before the **=** sign, as in ``=value``. This\nformat is presently only used by the Cloudflare Load Balancer API calls.\nFor example:\n\n::\n\n    cli4 --put =\"00000000000000000000000000000000\" /user/load_balancers/maps/:00000000000000000000000000000000/region/:WNAM\n\nData can also be uploaded from file contents. Using the\n``item=@filename`` format will open the file and the contents uploaded\nin the POST.\n\nCLI output\n~~~~~~~~~~\n\nThe output from the CLI command is in JSON or YAML format (and human\nreadable). This is controled by the **--yaml** or **--json** flags (JSON\nis the default).\n\nSimple CLI examples\n~~~~~~~~~~~~~~~~~~~\n\n-  ``cli4 /user/billing/profile``\n-  ``cli4 /user/invites``\n\n-  ``cli4 /zones/:example.com``\n-  ``cli4 /zones/:example.com/dnssec``\n-  ``cli4 /zones/:example.com/settings/ipv6``\n-  ``cli4 --put /zones/:example.com/activation_check``\n-  ``cli4 /zones/:example.com/keyless_certificates``\n\n-  ``cli4 /zones/:example.com/analytics/dashboard``\n\nMore complex CLI examples\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHere is the creation of a DNS entry, followed by a listing of that entry\nand then the deletion of that entry.\n\n.. code:: bash\n\n    $ $ cli4 --post name=\"test\" type=\"A\" content=\"10.0.0.1\" /zones/:example.com/dns_records\n    {\n        \"id\": \"00000000000000000000000000000000\",\n        \"name\": \"test.example.com\",\n        \"type\": \"A\",\n        \"content\": \"10.0.0.1\",\n        ...\n    }\n    $\n\n    $ cli4 /zones/:example.com/dns_records/:test.example.com | jq '{\"id\":.id,\"name\":.name,\"type\":.type,\"content\":.content}'\n    {\n      \"id\": \"00000000000000000000000000000000\",\n      \"name\": \"test.example.com\",\n      \"type\": \"A\",\n      \"content\": \"10.0.0.1\"\n    }\n\n    $ cli4 --delete /zones/:example.com/dns_records/:test.example.com | jq -c .\n    {\"id\":\"00000000000000000000000000000000\"}\n    $\n\nThere's the ability to handle dns entries with multiple values. This\nproduces more than one API call within the command.\n\n::\n\n    $ cli4 /zones/:example.com/dns_records/:test.example.com | jq -c '.[]|{\"id\":.id,\"name\":.name,\"type\":.type,\"content\":.content}'\n    {\"id\":\"00000000000000000000000000000000\",\"name\":\"test.example.com\",\"type\":\"A\",\"content\":\"192.168.0.1\"}\n    {\"id\":\"00000000000000000000000000000000\",\"name\":\"test.example.com\",\"type\":\"AAAA\",\"content\":\"2001:d8b::1\"}\n    $\n\nHere are the cache purging commands.\n\n.. code:: bash\n\n    $ cli4 --delete purge_everything=true /zones/:example.com/purge_cache | jq -c .\n    {\"id\":\"00000000000000000000000000000000\"}\n    $\n\n    $ cli4 --delete files='[http://example.com/css/styles.css]' /zones/:example.com/purge_cache | jq -c .\n    {\"id\":\"00000000000000000000000000000000\"}\n    $\n\n    $ cli4 --delete files='[http://example.com/css/styles.css,http://example.com/js/script.js]' /zones/:example.com/purge_cache | jq -c .\n    {\"id\":\"00000000000000000000000000000000\"}\n    $\n\n    $ cli4 --delete tags='[tag1,tag2,tag3]' /zones/:example.com/purge_cache | jq -c .\n    cli4: /zones/:example.com/purge_cache - 1107 Only enterprise zones can purge by tag.\n    $\n\nA somewhat useful listing of available plans for a specific zone.\n\n.. code:: bash\n\n    $ cli4 /zones/:example.com/available_plans | jq -c '.[]|{\"id\":.id,\"name\":.name}'\n    {\"id\":\"00000000000000000000000000000000\",\"name\":\"Pro Website\"}\n    {\"id\":\"00000000000000000000000000000000\",\"name\":\"Business Website\"}\n    {\"id\":\"00000000000000000000000000000000\",\"name\":\"Enterprise Website\"}\n    {\"id\":\"0feeeeeeeeeeeeeeeeeeeeeeeeeeeeee\",\"name\":\"Free Website\"}\n    $\n\nCloudflare CA CLI examples\n~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nHere's some Cloudflare CA examples. Note the need of the zone\\_id=\nparameter with the basic **/certificates** call.\n\n.. code:: bash\n\n    $ cli4 /zones/:example.com | jq -c '.|{\"id\":.id,\"name\":.name}'\n    {\"id\":\"12345678901234567890123456789012\",\"name\":\"example.com\"}\n    $\n\n    $ cli4 zone_id=12345678901234567890123456789012 /certificates | jq -c '.[]|{\"id\":.id,\"expires_on\":.expires_on,\"hostnames\":.hostnames,\"certificate\":.certificate}'\n    {\"id\":\"123456789012345678901234567890123456789012345678\",\"expires_on\":\"2032-01-29 22:36:00 +0000 UTC\",\"hostnames\":[\"*.example.com\",\"example.com\"],\"certificate\":\"-----BEGIN CERTIFICATE-----\\n ... \"}\n    {\"id\":\"123456789012345678901234567890123456789012345678\",\"expires_on\":\"2032-01-28 23:23:00 +0000 UTC\",\"hostnames\":[\"*.example.com\",\"example.com\"],\"certificate\":\"-----BEGIN CERTIFICATE-----\\n ... \"}\n    {\"id\":\"123456789012345678901234567890123456789012345678\",\"expires_on\":\"2032-01-28 23:20:00 +0000 UTC\",\"hostnames\":[\"*.example.com\",\"example.com\"],\"certificate\":\"-----BEGIN CERTIFICATE-----\\n ... \"}\n    $\n\nA certificate can be viewed via a simple GET request.\n\n.. code:: bash\n\n    $ cli4 /certificates/:123456789012345678901234567890123456789012345678\n    {\n        \"certificate\": \"-----BEGIN CERTIFICATE-----\\n ... \",\n        \"expires_on\": \"2032-01-29 22:36:00 +0000 UTC\",\n        \"hostnames\": [\n            \"*.example.com\",\n            \"example.com\"\n        ],\n        \"id\": \"123456789012345678901234567890123456789012345678\",\n        \"request_type\": \"origin-rsa\"\n    }\n    $\n\nCreating a certificate. This is done with a **POST** request. Note the\nuse of **==** in order to pass a decimal number (vs. string) in JSON.\nThe CSR is not shown for simplicity sake.\n\n.. code:: bash\n\n    $ CSR=`cat example.com.csr`\n    $ cli4 --post hostnames='[\"example.com\",\"*.example.com\"]' requested_validity==365 request_type=\"origin-ecc\" csr=\"$CSR\" /certificates\n    {\n        \"certificate\": \"-----BEGIN CERTIFICATE-----\\n ... \",\n        \"csr\": \"-----BEGIN CERTIFICATE REQUEST-----\\n ... \",\n        \"expires_on\": \"2018-09-27 21:47:00 +0000 UTC\",\n        \"hostnames\": [\n            \"*.example.com\",\n            \"example.com\"\n        ],\n        \"id\": \"123456789012345678901234567890123456789012345678\",\n        \"request_type\": \"origin-ecc\",\n        \"requested_validity\": 365\n    }\n    $\n\nDeleting a certificate can be done with a **DELETE** call.\n\n.. code:: bash\n\n    $ cli4 --delete /certificates/:123456789012345678901234567890123456789012345678\n    {\n        \"id\": \"123456789012345678901234567890123456789012345678\",\n        \"revoked_at\": \"0000-00-00T00:00:00Z\"\n    }\n    $\n\nPaging CLI examples\n~~~~~~~~~~~~~~~~~~~\n\nThe **--raw** command provides access to the paging returned values. See\nthe API documentation for all the info. Here's an example of how to page\nthru a list of zones (it's included in the examples folder as\n**example\\_paging\\_thru\\_zones.sh**).\n\n.. code:: bash\n\n    :\n    tmp=/tmp/$$_\n    trap \"rm ${tmp}; exit 0\" 0 1 2 15\n    PAGE=0\n    while true\n    do\n        cli4 --raw per_page=5 page=${PAGE} /zones > ${tmp}\n        domains=`jq -c '.|.result|.[]|.name' < ${tmp} | tr -d '\"'`\n        result_info=`jq -c '.|.result_info' < ${tmp}`\n        COUNT=`      echo \"${result_info}\" | jq .count`\n        PAGE=`       echo \"${result_info}\" | jq .page`\n        PER_PAGE=`   echo \"${result_info}\" | jq .per_page`\n        TOTAL_COUNT=`echo \"${result_info}\" | jq .total_count`\n        TOTAL_PAGES=`echo \"${result_info}\" | jq .total_pages`\n        echo COUNT=${COUNT} PAGE=${PAGE} PER_PAGE=${PER_PAGE} TOTAL_COUNT=${TOTAL_COUNT} TOTAL_PAGES=${TOTAL_PAGES} -- ${domains}\n        if [ \"${PAGE}\" == \"${TOTAL_PAGES}\" ]\n        then\n            ## last section\n            break\n        fi\n        # grab the next page\n        PAGE=`expr ${PAGE} + 1`\n    done\n\nIt produces the following results.\n\n::\n\n    COUNT=5 PAGE=1 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- accumsan.example auctor.example consectetur.example dapibus.example elementum.example\n    COUNT=5 PAGE=2 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- felis.example iaculis.example ipsum.example justo.example lacus.example\n    COUNT=5 PAGE=3 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- lectus.example lobortis.example maximus.example morbi.example pharetra.example\n    COUNT=5 PAGE=4 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- porttitor.example potenti.example pretium.example purus.example quisque.example\n    COUNT=5 PAGE=5 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- sagittis.example semper.example sollicitudin.example suspendisse.example tortor.example\n    COUNT=1 PAGE=7 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- varius.example vehicula.example velit.example velit.example vitae.example\n    COUNT=5 PAGE=6 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- vivamus.example\n\nDNSSEC CLI examples\n~~~~~~~~~~~~~~~~~~~\n\n.. code:: bash\n\n    $ cli4 /zones/:example.com/dnssec | jq -c '{\"status\":.status}'\n    {\"status\":\"disabled\"}\n    $\n\n    $ cli4 --patch status=active /zones/:example.com/dnssec | jq -c '{\"status\":.status}'\n    {\"status\":\"pending\"}\n    $\n\n    $ cli4 /zones/:example.com/dnssec\n    {\n        \"algorithm\": \"13\",\n        \"digest\": \"41600621c65065b09230ebc9556ced937eb7fd86e31635d0025326ccf09a7194\",\n        \"digest_algorithm\": \"SHA256\",\n        \"digest_type\": \"2\",\n        \"ds\": \"example.com. 3600 IN DS 2371 13 2 41600621c65065b09230ebc9556ced937eb7fd86e31635d0025326ccf09a7194\",\n        \"flags\": 257,\n        \"key_tag\": 2371,\n        \"key_type\": \"ECDSAP256SHA256\",\n        \"modified_on\": \"2016-05-01T22:42:15.591158Z\",\n        \"public_key\": \"mdsswUyr3DPW132mOi8V9xESWE8jTo0dxCjjnopKl+GqJxpVXckHAeF+KkxLbxILfDLUT0rAK9iUzy1L53eKGQ==\",\n        \"status\": \"pending\"\n    }\n    $\n\nZone file upload and download CLI examples (uses BIND format files)\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nRefer to `Import DNS\nrecords <https://api.cloudflare.com/#dns-records-for-a-zone-import-dns-records>`__\non API documentation for this feature.\n\n.. code:: bash\n\n    $ cat zone.txt\n    example.com.            IN      SOA     somewhere.example.com. someone.example.com. (\n                                    2017010101\n                                    3H\n                                    15\n                                    1w\n                                    3h\n                            )\n\n    record1.example.com.    IN      A       10.0.0.1\n    record2.example.com.    IN      AAAA    2001:d8b::2\n    record3.example.com.    IN      CNAME   record1.example.com.\n    record4.example.com.    IN      TXT     \"some text\"\n    $\n\n    $ cli4 --post file=@zone.txt /zones/:example.com/dns_records/import\n    {\n        \"recs_added\": 4,\n        \"total_records_parsed\": 4\n    }\n    $\n\nThe following is documented within the **Advanced** option of the DNS\npage within the Cloudflare portal.\n\n::\n\n    $ cli4 /zones/:example.com/dns_records/export | egrep -v '^;;|^$'\n    $ORIGIN .\n    @   3600    IN  SOA example.com.    root.example.com.   (\n            2025552311  ; serial\n            7200        ; refresh\n            3600        ; retry\n            86400       ; expire\n            3600)       ; minimum\n    example.com.    300 IN  NS  REPLACE&ME$WITH^YOUR@NAMESERVER.\n    record4.example.com.    300 IN  TXT \"some text\"\n    record3.example.com.    300 IN  CNAME   record1.example.com.\n    record1.example.com.    300 IN  A   10.0.0.1\n    record2.example.com.    300 IN  AAAA    2001:d8b::2\n    $\n\nThe egrep is used for documentation brevity.\n\nThis can also be done via Python code with the following example.\n\n::\n\n    #!/usr/bin/env python\n    import sys\n    import CloudFlare\n\n    def main():\n        zone_name = sys.argv[1]\n        cf = CloudFlare.CloudFlare()\n\n        zones = cf.zones.get(params={'name': zone_name})\n        zone_id = zones[0]['id']\n\n        dns_records = cf.zones.dns_records.export.get(zone_id)\n        for l in dns_records.splitlines():\n            if len(l) == 0 or l[0] == ';':\n                continue\n            print l\n        exit(0)\n\n    if __name__ == '__main__':\n        main()\n\nCloudflare Workers\n~~~~~~~~~~~~~~~~~~\n\nCloudflare Workers are described on the Cloudflare blog at\n`here <https://blog.cloudflare.com/introducing-cloudflare-workers/>`__\nand\n`here <https://blog.cloudflare.com/code-everywhere-cloudflare-workers/>`__,\nwith the beta release announced\n`here <https://blog.cloudflare.com/cloudflare-workers-is-now-on-open-beta/>`__.\n\nThe Python libraries now support the Cloudflare Workers API calls. The\nfollowing javascript is lifted from https://cloudflareworkers.com/ and\nslightly modified.\n\n::\n\n    $ cat modify-body.js\n    addEventListener(\"fetch\", event => {\n      event.respondWith(fetchAndModify(event.request));\n    });\n\n    async function fetchAndModify(request) {\n      console.log(\"got a request:\", request);\n\n      // Send the request on to the origin server.\n      const response = await fetch(request);\n\n      // Read response body.\n      const text = await response.text();\n\n      // Modify it.\n      const modified = text.replace(\n      \"<body>\",\n      \"<body style=\\\"background: #ff0;\\\">\");\n\n      // Return modified response.\n      return new Response(modified, {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers\n      });\n    }\n    $\n\nHere's the website with it's simple ``<body>`` statement\n\n::\n\n    $ curl -sS https://example.com/ | fgrep '<body'\n      <body>\n    $\n\nNow lets add the script. Looking above, you will see that it's simple\naction is to modify the ``<body>`` statement and make the background\nyellow.\n\n::\n\n    $ cli4 --put @- /zones/:example.com/workers/script < modify-body.js\n    {\n        \"etag\": \"1234567890123456789012345678901234567890123456789012345678901234\",\n        \"id\": \"example-com\",\n        \"modified_on\": \"2018-02-15T00:00:00.000000Z\",\n        \"script\": \"addEventListener(\\\"fetch\\\", event => {\\n  event.respondWith(fetchAndModify(event.request));\\n});\\n\\nasync function fetchAndModify(request) {\\n  console.log(\\\"got a request:\\\", request);\\n\\n  // Send the request on to the origin server.\\n  const response = await fetch(request);\\n\\n  // Read response body.\\n  const text = await response.text();\\n\\n  // Modify it.\\n  const modified = text.replace(\\n  \\\"<body>\\\",\\n  \\\"<body style=\\\\\\\"background: #ff0;\\\\\\\">\\\");\\n\\n  // Return modified response.\\n  return new Response(modified, {\\n    status: response.status,\\n    statusText: response.statusText,\\n    headers: response.headers\\n  });\\n}\\n\",\n        \"size\": 603\n    }\n    $\n\nThe following call checks that the script is associated with the zone.\nIn this case, it's the only script added by this user.\n\n::\n\n    $ cli4 /user/workers/scripts\n    [\n        {\n            \"created_on\": \"2018-02-15T00:00:00.000000Z\",\n            \"etag\": \"1234567890123456789012345678901234567890123456789012345678901234\",\n            \"id\": \"example-com\",\n            \"modified_on\": \"2018-02-15T00:00:00.000000Z\"\n        }\n    ]\n    $\n\nNext step is to make sure a route is added for that script on that zone.\n\n::\n\n    $ cli4 --post pattern=\"example.com/*\" script=\"example-com\" /zones/:example.com/workers/routes\n    {\n        \"id\": \"12345678901234567890123456789012\"\n    }\n    $\n\n    $ cli4 /zones/:example.com/workers/routes\n    [\n        {\n            \"id\": \"12345678901234567890123456789012\",\n            \"pattern\": \"example.com/*\",\n            \"script\": \"example-com\"\n        }\n    ]\n    $\n\nWith that script added to the zone and the route added, we can now see\nthe website has been modified because of the Cloudflare Worker.\n\n::\n\n    $ curl -sS https://example.com/ | fgrep '<body'\n      <body style=\"background: #ff0;\">\n    $\n\nAll this can be removed; hence bringing the website back to its initial\nstate.\n\n::\n\n    $ cli4 --delete /zones/:example.com/workers/script\n    12345678901234567890123456789012\n    $ cli4 --delete /zones/:example.com/workers/routes/:12345678901234567890123456789012\n    true\n    $\n\n    $ curl -sS https://example.com/ | fgrep '<body'\n      <body>\n    $\n\nRefer to the Cloudflare Workers API documentation for more information.\n\nImplemented API calls\n---------------------\n\nThe **--dump** argument to cli4 will produce a list of all the call\nimplemented within the library.\n\n.. code:: bash\n\n    $ cli4 --dump\n    /certificates\n    /ips\n    /organizations\n    ...\n    /zones/ssl/analyze\n    /zones/ssl/certificate_packs\n    /zones/ssl/verification\n    $\n\nTable of commands\n~~~~~~~~~~~~~~~~~\n\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   | ``PUT``   | ``POST``   | ``PATCH``   | ``DELETE``   | API call                                                      |\n+===========+===========+============+=============+==============+===============================================================+\n| ``GET``   |           | ``POST``   |             | ``DELETE``   | /certificates                                                 |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /ips                                                          |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /organizations                                                |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /organizations/:identifier/firewall/access\\_rules/rules       |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n|           |           |            | ``PATCH``   |              | /organizations/:identifier/invite                             |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   |             | ``DELETE``   | /organizations/:identifier/invites                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   | ``DELETE``   | /organizations/:identifier/members                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /organizations/:identifier/railguns                           |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /organizations/:identifier/railguns/:identifier/zones         |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /organizations/:identifier/roles                              |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /organizations/:identifier/virtual\\_dns                       |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /railguns                                                     |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /railguns/:identifier/zones                                   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /user                                                         |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /user/billing/history                                         |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /user/billing/profile                                         |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /user/billing/subscriptions/apps                              |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /user/billing/subscriptions/zones                             |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /user/firewall/access\\_rules/rules                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /user/invites                                                 |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             | ``DELETE``   | /user/organizations                                           |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /user/virtual\\_dns                                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /zones                                                        |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n|           | ``PUT``   |            |             |              | /zones/:identifier/activation\\_check                          |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /zones/:identifier/analytics/colos                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /zones/:identifier/analytics/dashboard                        |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /zones/:identifier/available\\_plans                           |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n|           | ``PUT``   |            |             |              | /zones/:identifier/custom\\_certificates/prioritize            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /zones/:identifier/custom\\_certificates                       |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   | ``PUT``   |            |             |              | /zones/:identifier/custom\\_pages                              |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   | ``PUT``   | ``POST``   |             | ``DELETE``   | /zones/:identifier/dns\\_records                               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/firewall/waf/packages/:identifier/groups   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/firewall/waf/packages/:identifier/rules    |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/firewall/waf/packages                      |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /zones/:identifier/firewall/access\\_rules/rules               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           | ``POST``   | ``PATCH``   | ``DELETE``   | /zones/:identifier/keyless\\_certificates                      |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   | ``PUT``   | ``POST``   | ``PATCH``   | ``DELETE``   | /zones/:identifier/pagerules                                  |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n|           |           |            |             | ``DELETE``   | /zones/:identifier/purge\\_cache                               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /zones/:identifier/railguns/:identifier/diagnose              |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/railguns                                   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings                                   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            |             |              | /zones/:identifier/settings/advanced\\_ddos                    |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/always\\_online                    |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/browser\\_cache\\_ttl               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/browser\\_check                    |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/cache\\_level                      |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/challenge\\_ttl                    |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/development\\_mode                 |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/email\\_obfuscation                |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/hotlink\\_protection               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/ip\\_geolocation                   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/ipv6                              |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/minify                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/mirage                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/mobile\\_redirect                  |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/origin\\_error\\_page\\_pass\\_thru   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/polish                            |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/prefetch\\_preload                 |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/response\\_buffering               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/rocket\\_loader                    |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/security\\_header                  |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/security\\_level                   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/server\\_side\\_exclude             |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/sort\\_query\\_string\\_for\\_cache   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/ssl                               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/tls\\_1\\_2\\_only                   |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/tls\\_client\\_auth                 |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/true\\_client\\_ip\\_header          |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n| ``GET``   |           |            | ``PATCH``   |              | /zones/:identifier/settings/waf                               |\n+-----------+-----------+------------+-------------+--------------+---------------------------------------------------------------+\n\nAdding extra API calls manually\n-------------------------------\n\nExtra API calls can be added via the configuration file\n\n.. code:: bash\n\n    $ cat ~/.cloudflare/cloudflare.cfg\n    [CloudFlare]\n    extras =\n        /client/v4/command\n        /client/v4/command/:command_identifier\n        /client/v4/command/:command_identifier/settings\n    $\n\nWhile it's easy to call anything within Cloudflare's API, it's not very\nuseful to add items in here as they will simply return API URL errors.\nTechnically, this is only useful for internal testing within Cloudflare.\n\nIssues\n------\n\nThe following error can be caused by an out of date SSL/TLS library\nand/or out of date Python.\n\n::\n\n    /usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/util/ssl_.py:318: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#snimissingwarning.\n      SNIMissingWarning\n    /usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/util/ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n      InsecurePlatformWarning\n\nThe solution can be found\n`here <https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning>`__\nand/or\n`here <http://stackoverflow.com/questions/35144550/how-to-install-cryptography-on-ubuntu>`__.\n\nPython 2.x vs 3.x support\n-------------------------\n\nAs of May/June 2016 the code is now tested against pylint. This was\nrequired in order to move the codebase into Python 3.x. The motivation\nfor this came from `Danielle Madeley\n(danni) <https://github.com/danni>`__.\n\n[STRIKEOUT:While the codebase has been edited to run on Python 3.x,\nthere's not been enough Python 3.x testing performed.] [STRIKEOUT:If you\ncan help in this regard; please contact the maintainers.]\n\nAs of January 2020 the code is Python3 clean.\n\nAs of January 2020 the code is shipped up to pypi with Python2 support\nremoved.\n\nAs of January 2020 the code is Python3.8 clean. The new\n``SyntaxWarning`` messages (i.e.\n``SyntaxWarning: \"is\" with a literal. Did you mean \"==\"?``) meant minor\nedits were needed.\n\nCredit\n------\n\nThis is based on work by `Felix Wong\n(gnowxilef) <https://github.com/gnowxilef>`__ found\n`here <https://github.com/cloudflare-api/python-cloudflare-v4>`__. It\nhas been seriously expanded upon.\n\nCopyright\n---------\n\nPortions copyright `Felix Wong\n(gnowxilef) <https://github.com/gnowxilef>`__ 2015 and Cloudflare 2016.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/cloudflare/python-cloudflare", "keywords": "cloudflare", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cloudflare", "package_url": "https://pypi.org/project/cloudflare/", "platform": "", "project_url": "https://pypi.org/project/cloudflare/", "project_urls": {"Homepage": "https://github.com/cloudflare/python-cloudflare"}, "release_url": "https://pypi.org/project/cloudflare/2.6.5/", "requires_dist": null, "requires_python": "", "summary": "Python wrapper for the Cloudflare v4 API", "version": "2.6.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installation\">\n<h2>Installation</h2>\n<p>Two methods are provided to install this software. Use PyPi (see\n<a href=\"https://pypi.python.org/pypi/cloudflare\" rel=\"nofollow\">package</a> details) or GitHub\n(see <a href=\"https://github.com/cloudflare/python-cloudflare\" rel=\"nofollow\">package</a>\ndetails).</p>\n<div id=\"via-pypi\">\n<h3>Via PyPI</h3>\n<pre>$ sudo pip install cloudflare\n$\n</pre>\n<p>Yes - that simple! (the sudo may not be needed in some cases).</p>\n</div>\n<div id=\"via-github\">\n<h3>Via github</h3>\n<pre>$ git clone https://github.com/cloudflare/python-cloudflare\n$ <span class=\"nb\">cd</span> python-cloudflare\n$ ./setup.py build\n$ sudo ./setup.py install\n$\n</pre>\n<p>Or whatever variance of that you want to use. There is a Makefile\nincluded.</p>\n</div>\n</div>\n<div id=\"cloudflare-name-change-dropping-the-capital-f\">\n<h2>Cloudflare name change - dropping the capital F</h2>\n<p>In Sepember/October 2016 the company modified its company name and\ndropped the capital F. However, for now (and for backward compatibility\nreasons) the class name stays the same.</p>\n</div>\n<div id=\"cloudflare-api-version-4\">\n<h2>Cloudflare API version 4</h2>\n<p>The Cloudflare API can be found <a href=\"https://api.cloudflare.com/\" rel=\"nofollow\">here</a>.\nEach API call is provided via a similarly named function within the\n<strong>CloudFlare</strong> class. A full list is provided below.</p>\n</div>\n<div id=\"example-code\">\n<h2>Example code</h2>\n<p>All example code is available on GitHub (see\n<a href=\"https://github.com/cloudflare/python-cloudflare\" rel=\"nofollow\">package</a> in the\n<a href=\"https://github.com/cloudflare/python-cloudflare/tree/master/examples\" rel=\"nofollow\">examples</a>\nfolder).</p>\n</div>\n<div id=\"blog\">\n<h2>Blog</h2>\n<p>This package was initially introduced\n<a href=\"https://blog.cloudflare.com/python-cloudflare/\" rel=\"nofollow\">here</a> via\nCloudflare\u2019s <a href=\"https://blog.cloudflare.com/\" rel=\"nofollow\">blog</a>.</p>\n</div>\n<div id=\"getting-started\">\n<h2>Getting Started</h2>\n<p>A very simple listing of zones within your account; including the IPv6\nstatus of the zone.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n    <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">zone</span> <span class=\"ow\">in</span> <span class=\"n\">zones</span><span class=\"p\">:</span>\n        <span class=\"n\">zone_id</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n        <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span> <span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">zone_name</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>This example works when there are less than 50 zones (50 is the default\nnumber of values returned from a query like this).</p>\n<p>Now lets expand on that and add code to show the IPv6 and SSL status of\nthe zones. Lets also query 100 zones.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n    <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'per_page'</span><span class=\"p\">:</span><span class=\"mi\">100</span><span class=\"p\">})</span>\n    <span class=\"k\">for</span> <span class=\"n\">zone</span> <span class=\"ow\">in</span> <span class=\"n\">zones</span><span class=\"p\">:</span>\n        <span class=\"n\">zone_id</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n        <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n\n        <span class=\"n\">settings_ssl</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">ssl</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">zone_id</span><span class=\"p\">)</span>\n        <span class=\"n\">ssl_status</span> <span class=\"o\">=</span> <span class=\"n\">settings_ssl</span><span class=\"p\">[</span><span class=\"s1\">'value'</span><span class=\"p\">]</span>\n\n        <span class=\"n\">settings_ipv6</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"o\">.</span><span class=\"n\">ipv6</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">zone_id</span><span class=\"p\">)</span>\n        <span class=\"n\">ipv6_status</span> <span class=\"o\">=</span> <span class=\"n\">settings_ipv6</span><span class=\"p\">[</span><span class=\"s1\">'value'</span><span class=\"p\">]</span>\n\n        <span class=\"nb\">print</span> <span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">zone_name</span><span class=\"p\">,</span> <span class=\"n\">ssl_status</span><span class=\"p\">,</span> <span class=\"n\">ipv6_status</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>In order to query more than a single page of zones, we would have to use\nthe raw mode (described more below). We can loop over many get calls and\npass the page parameter to facilitate the paging.</p>\n<p>Raw mode is only needed when a get request has the possibility of\nreturning many items.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">page_number</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n    <span class=\"k\">while</span> <span class=\"kc\">True</span><span class=\"p\">:</span>\n        <span class=\"n\">page_number</span> <span class=\"o\">+=</span> <span class=\"mi\">1</span>\n        <span class=\"n\">raw_results</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'per_page'</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"s1\">'page'</span><span class=\"p\">:</span><span class=\"n\">page_number</span><span class=\"p\">})</span>\n        <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"n\">raw_results</span><span class=\"p\">[</span><span class=\"s1\">'result'</span><span class=\"p\">]</span>\n\n        <span class=\"k\">for</span> <span class=\"n\">zone</span> <span class=\"ow\">in</span> <span class=\"n\">zones</span><span class=\"p\">:</span>\n            <span class=\"n\">zone_id</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n            <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n            <span class=\"nb\">print</span> <span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">zone_name</span>\n\n        <span class=\"n\">total_pages</span> <span class=\"o\">=</span> <span class=\"n\">raw_results</span><span class=\"p\">[</span><span class=\"s1\">'result_info'</span><span class=\"p\">][</span><span class=\"s1\">'total_pages'</span><span class=\"p\">]</span>\n        <span class=\"k\">if</span> <span class=\"n\">page_number</span> <span class=\"o\">==</span> <span class=\"n\">total_pages</span><span class=\"p\">:</span>\n            <span class=\"k\">break</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>A more complex example follows.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"s1\">'example.com'</span>\n\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># query for the zone name and expect only one value back</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">params</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"n\">zone_name</span><span class=\"p\">,</span><span class=\"s1\">'per_page'</span><span class=\"p\">:</span><span class=\"mi\">1</span><span class=\"p\">})</span>\n    <span class=\"k\">except</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">CloudFlareAPIError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">'/zones.get </span><span class=\"si\">%d</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\"> - api call failed'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">))</span>\n    <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">'/zones.get - </span><span class=\"si\">%s</span><span class=\"s1\"> - api call failed'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">))</span>\n\n    <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">zones</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n        <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">'No zones found'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># extract the zone_id which is needed to process that zone</span>\n    <span class=\"n\">zone</span> <span class=\"o\">=</span> <span class=\"n\">zones</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n    <span class=\"n\">zone_id</span> <span class=\"o\">=</span> <span class=\"n\">zone</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n\n    <span class=\"c1\"># request the DNS records from that zone</span>\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"n\">dns_records</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">dns_records</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">zone_id</span><span class=\"p\">)</span>\n    <span class=\"k\">except</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">CloudFlareAPIError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">'/zones/dns_records.get </span><span class=\"si\">%d</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\"> - api call failed'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># print the results - first the zone name</span>\n    <span class=\"nb\">print</span> <span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">zone_name</span>\n\n    <span class=\"c1\"># then all the DNS records for that zone</span>\n    <span class=\"k\">for</span> <span class=\"n\">dns_record</span> <span class=\"ow\">in</span> <span class=\"n\">dns_records</span><span class=\"p\">:</span>\n        <span class=\"n\">r_name</span> <span class=\"o\">=</span> <span class=\"n\">dns_record</span><span class=\"p\">[</span><span class=\"s1\">'name'</span><span class=\"p\">]</span>\n        <span class=\"n\">r_type</span> <span class=\"o\">=</span> <span class=\"n\">dns_record</span><span class=\"p\">[</span><span class=\"s1\">'type'</span><span class=\"p\">]</span>\n        <span class=\"n\">r_value</span> <span class=\"o\">=</span> <span class=\"n\">dns_record</span><span class=\"p\">[</span><span class=\"s1\">'content'</span><span class=\"p\">]</span>\n        <span class=\"n\">r_id</span> <span class=\"o\">=</span> <span class=\"n\">dns_record</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n        <span class=\"nb\">print</span> <span class=\"s1\">'</span><span class=\"se\">\\t</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"n\">r_id</span><span class=\"p\">,</span> <span class=\"n\">r_name</span><span class=\"p\">,</span> <span class=\"n\">r_type</span><span class=\"p\">,</span> <span class=\"n\">r_value</span>\n\n    <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"providing-cloudflare-username-and-api-key\">\n<h2>Providing Cloudflare Username and API Key</h2>\n<p>When you create a <strong>CloudFlare</strong> class you can pass up to four\nparameters.</p>\n<ul>\n<li>API Token or API Key</li>\n<li>Account email (only if an API Key is being used)</li>\n<li>Optional Origin-CA Certificate Token</li>\n<li>Optional Debug flag (True/False)</li>\n</ul>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n    <span class=\"c1\"># A minimal call - reading values from environment variables or configuration file</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n\n    <span class=\"c1\"># A minimal call with debug enabled</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">))</span>\n\n    <span class=\"c1\"># An authenticated call using an API Token (note the missing email)</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'00000000000000000000000000000000'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># An authenticated call using an API Key</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'user@example.com'</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'00000000000000000000000000000000'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># An authenticated call using an API Key and CA-Origin info</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"o\">=</span><span class=\"s1\">'user@example.com'</span><span class=\"p\">,</span> <span class=\"n\">token</span><span class=\"o\">=</span><span class=\"s1\">'00000000000000000000000000000000'</span><span class=\"p\">,</span> <span class=\"n\">certtoken</span><span class=\"o\">=</span><span class=\"s1\">'v1.0-...'</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># An authenticated call using using a stored profile (see below)</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s2\">\"CompanyX\"</span><span class=\"p\">))</span>\n</pre>\n<p>If the account email and API key are not passed when you create the\nclass, then they are retrieved from either the users exported shell\nenvironment variables or the .cloudflare.cfg or ~/.cloudflare.cfg or\n~/.cloudflare/cloudflare.cfg files, in that order.</p>\n<p>If you\u2019re using an API Token, any <tt>cloudflare.cfg</tt> file must either\nnot contain an <tt>email</tt> attribute or be a zero length string and the\n<tt>CF_API_EMAIL</tt> environment variable must be unset or be a zero length\nstring, otherwise the token will be treated as a key and will throw an\nerror.</p>\n<p>There is one call that presently doesn\u2019t need any email or token\ncertification (the <em>/ips</em> call); hence you can test without any values\nsaved away.</p>\n<div id=\"using-shell-environment-variables\">\n<h3>Using shell environment variables</h3>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">CF_API_EMAIL</span><span class=\"o\">=</span><span class=\"s1\">'user@example.com'</span> <span class=\"c1\"># Do not set if using an API Token\n</span>$ <span class=\"nb\">export</span> <span class=\"nv\">CF_API_KEY</span><span class=\"o\">=</span><span class=\"s1\">'00000000000000000000000000000000'</span>\n$ <span class=\"nb\">export</span> <span class=\"nv\">CF_API_CERTKEY</span><span class=\"o\">=</span><span class=\"s1\">'v1.0-...'</span>\n$\n</pre>\n<p>These are optional environment variables; however, they do override the\nvalues set within a configuration file.</p>\n</div>\n<div id=\"using-configuration-file-to-store-email-and-keys\">\n<h3>Using configuration file to store email and keys</h3>\n<pre>$ cat ~/.cloudflare/cloudflare.cfg\n<span class=\"o\">[</span>CloudFlare<span class=\"o\">]</span>\n<span class=\"nv\">email</span> <span class=\"o\">=</span> user@example.com <span class=\"c1\"># Do not set if using an API Token\n</span><span class=\"nv\">token</span> <span class=\"o\">=</span> <span class=\"m\">00000000000000000000000000000000</span>\n<span class=\"nv\">certtoken</span> <span class=\"o\">=</span> v1.0-...\n<span class=\"nv\">extras</span> <span class=\"o\">=</span>\n$\n</pre>\n<p>More than one profile can be stored within that file. Here\u2019s an example\nfor a work and home setup (in this example work has an API Token and\nhome uses email/token).</p>\n<pre>$ cat ~/.cloudflare/cloudflare.cfg\n<span class=\"o\">[</span>Work<span class=\"o\">]</span>\n<span class=\"nv\">token</span> <span class=\"o\">=</span> <span class=\"m\">00000000000000000000000000000000</span>\n<span class=\"o\">[</span>Home<span class=\"o\">]</span>\n<span class=\"nv\">email</span> <span class=\"o\">=</span> home@example.com\n<span class=\"nv\">token</span> <span class=\"o\">=</span> <span class=\"m\">00000000000000000000000000000000</span>\n$\n</pre>\n<p>To select a profile, use the <tt><span class=\"pre\">--profile</span> <span class=\"pre\">profile-name</span></tt> option for\n<tt>cli4</tt> command or use <tt><span class=\"pre\">profile=\"profile-name\"</span></tt> in the library call.</p>\n<pre>$ cli4 --profile Work /zones <span class=\"p\">|</span> jq <span class=\"s1\">'.[]|.name'</span> <span class=\"p\">|</span> wc -l\n      <span class=\"m\">13</span>\n$\n\n$ cli4 --profile Home /zones <span class=\"p\">|</span> jq <span class=\"s1\">'.[]|.name'</span> <span class=\"p\">|</span> wc -l\n       <span class=\"m\">1</span>\n$\n</pre>\n<p>Here is the same in code.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">profile</span><span class=\"o\">=</span><span class=\"s2\">\"Work\"</span><span class=\"p\">)</span>\n    <span class=\"o\">...</span>\n</pre>\n</div>\n<div id=\"advanced-use-of-configuration-file-for-authentication-based-on-method\">\n<h3>Advanced use of configuration file for authentication based on method</h3>\n<p>The configuration file can have values that are both generic and\nspecific to the method. Here\u2019s an example where a project has a\ndifferent API Token for reading and writing values.</p>\n<pre>$ cat ~/.cloudflare/cloudflare.cfg\n<span class=\"o\">[</span>Work<span class=\"o\">]</span>\n<span class=\"nv\">token</span> <span class=\"o\">=</span> <span class=\"m\">0000000000000000000000000000000000000000</span>\ntoken.get <span class=\"o\">=</span> <span class=\"m\">0123456789012345678901234567890123456789</span>\n$\n</pre>\n<p>When a GET call is processed then the second token is used. For all\nother calls the first token is used. Here\u2019s a more explict verion of\nthat config:</p>\n<pre>$ cat ~/.cloudflare/cloudflare.cfg\n<span class=\"o\">[</span>Work<span class=\"o\">]</span>\ntoken.delete <span class=\"o\">=</span> <span class=\"m\">0000000000000000000000000000000000000000</span>\ntoken.get <span class=\"o\">=</span> <span class=\"m\">0123456789012345678901234567890123456789</span>\ntoken.patch <span class=\"o\">=</span> <span class=\"m\">0000000000000000000000000000000000000000</span>\ntoken.post <span class=\"o\">=</span> <span class=\"m\">0000000000000000000000000000000000000000</span>\ntoken.put <span class=\"o\">=</span> <span class=\"m\">0000000000000000000000000000000000000000</span>\n$\n</pre>\n<p>This can be used with email values also.</p>\n</div>\n<div id=\"about-certificates-and-certtoken\">\n<h3>About /certificates and certtoken</h3>\n<p>The <em>CF_API_CERTKEY</em> or <em>certtoken</em> values are used for the Origin-CA\n<em>/certificates</em> API calls. You can leave <em>certtoken</em> in the\nconfiguration with a blank value (or omit the option variable fully).</p>\n<p>The <em>extras</em> values are used when adding API calls outside of the core\ncodebase. Technically, this is only useful for internal testing within\nCloudflare. You can leave <em>extras</em> in the configuration with a blank\nvalue (or omit the option variable fully).</p>\n</div>\n</div>\n<div id=\"exceptions-and-return-values\">\n<h2>Exceptions and return values</h2>\n<div id=\"response-data\">\n<h3>Response data</h3>\n<p>The response is build from the JSON in the API call. It contains the\n<strong>results</strong> values; but does not contain the paging values.</p>\n<p>You can return all the paging values by calling the class with raw=True.\nHere\u2019s an example without paging.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n    <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'per_page'</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">})</span>\n    <span class=\"nb\">print</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">zones</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>The results are as follows.</p>\n<pre>5\n</pre>\n<p>When you add the raw option; the APIs full structure is returned. This\nmeans the paging values can be seen.</p>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">json</span>\n<span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">(</span><span class=\"n\">raw</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n    <span class=\"n\">zones</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'per_page'</span><span class=\"p\">:</span><span class=\"mi\">5</span><span class=\"p\">})</span>\n    <span class=\"nb\">print</span> <span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">length</span><span class=\"p\">()</span>\n    <span class=\"nb\">print</span> <span class=\"n\">json</span><span class=\"o\">.</span><span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">zones</span><span class=\"p\">,</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span> <span class=\"n\">sort_keys</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>This produces.</p>\n<pre>5\n{\n    \"result\": [\n        ...\n    ],\n    \"result_info\": {\n        \"count\": 5,\n        \"page\": 1,\n        \"per_page\": 5,\n        \"total_count\": 31,\n        \"total_pages\": 7\n    }\n}\n</pre>\n<p>A full example of paging is provided below.</p>\n</div>\n<div id=\"exceptions\">\n<h3>Exceptions</h3>\n<p>The library will raise <strong>CloudFlareAPIError</strong> when the API call fails.\nThe exception returns both an integer and textual message in one value.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n    <span class=\"o\">...</span>\n    <span class=\"k\">try</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n    <span class=\"k\">except</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">CloudFlareAPIError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">'api error: </span><span class=\"si\">%d</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">))</span>\n    <span class=\"o\">...</span>\n</pre>\n<p>The other raised response is <strong>CloudFlareInternalError</strong> which can\nhappen when calling an invalid method.</p>\n<p>In some cases more than one error is returned. In this case the return\nvalue <strong>e</strong> is also an array. You can iterate over that array to see the\nadditional error.</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n    <span class=\"o\">...</span>\n    <span class=\"k\">try</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n    <span class=\"k\">except</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">exceptions</span><span class=\"o\">.</span><span class=\"n\">CloudFlareAPIError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"nb\">len</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span> <span class=\"o\">&gt;</span> <span class=\"mi\">0</span><span class=\"p\">:</span>\n            <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'api error - more than one error value returned!</span><span class=\"se\">\\n</span><span class=\"s1\">'</span><span class=\"p\">)</span>\n            <span class=\"k\">for</span> <span class=\"n\">x</span> <span class=\"ow\">in</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stderr</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"s1\">'api error: </span><span class=\"si\">%d</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"se\">\\n</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"p\">))</span>\n        <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"s1\">'api error: </span><span class=\"si\">%d</span><span class=\"s1\"> </span><span class=\"si\">%s</span><span class=\"s1\">'</span> <span class=\"o\">%</span> <span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"p\">))</span>\n    <span class=\"o\">...</span>\n</pre>\n</div>\n<div id=\"exception-examples\">\n<h3>Exception examples</h3>\n<p>Here\u2019s examples using the CLI command cli4 of the responses passed back\nin exceptions.</p>\n<p>First a simple get with a clean (non-error) response.</p>\n<pre>$ cli4 /zones/:example.com/dns_records | jq -c '.[]|{\"name\":.name,\"type\":.type,\"content\":.content}'\n{\"name\":\"example.com\",\"type\":\"MX\",\"content\":\"something.example.com\"}\n{\"name\":\"something.example.com\",\"type\":\"A\",\"content\":\"10.10.10.10\"}\n$\n</pre>\n<p>Next a simple/single error response. This is simulated by providing\nincorrect authentication information.</p>\n<pre>$ CF_API_EMAIL='someone@example.com' cli4 /zones/\ncli4: /zones - 9103 Unknown X-Auth-Key or X-Auth-Email\n$\n</pre>\n<p>More than one call can be done on the same command line. In this mode,\nthe connection is preserved between calls.</p>\n<pre>$ cli4 /user/organizations /user/invites\n...\n$\n</pre>\n<p>Note that the output is presently two JSON structures one after the\nother - so less useful that you may think.</p>\n<p>Finally, a command that provides more than one error response. This is\nsimulated by passing an invalid IPv4 address to a DNS record creation.</p>\n<pre>$ cli4 --post name='foo' type=A content=\"1\" /zones/:example.com/dns_records\ncli4: /zones/:example.com/dns_records - 9005 Content for A record is invalid. Must be a valid IPv4 address\ncli4: /zones/:example.com/dns_records - 1004 DNS Validation Error\n$\n</pre>\n</div>\n</div>\n<div id=\"included-example-code\">\n<h2>Included example code</h2>\n<p>The\n<a href=\"https://github.com/cloudflare/python-cloudflare/tree/master/examples\" rel=\"nofollow\">examples</a>\nfolder contains many examples in both simple and verbose formats.</p>\n</div>\n<div id=\"a-dns-zone-code-example\">\n<h2>A DNS zone code example</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n    <span class=\"n\">zone_info</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'jump_start'</span><span class=\"p\">:</span><span class=\"kc\">False</span><span class=\"p\">,</span> <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">zone_name</span><span class=\"p\">})</span>\n    <span class=\"n\">zone_id</span> <span class=\"o\">=</span> <span class=\"n\">zone_info</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">dns_records</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n        <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'AAAA'</span><span class=\"p\">,</span> <span class=\"s1\">'content'</span><span class=\"p\">:</span><span class=\"s1\">'2001:d8b::1'</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'foo'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'content'</span><span class=\"p\">:</span><span class=\"s1\">'192.168.0.1'</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'duh'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'A'</span><span class=\"p\">,</span> <span class=\"s1\">'content'</span><span class=\"p\">:</span><span class=\"s1\">'10.0.0.1'</span><span class=\"p\">,</span> <span class=\"s1\">'ttl'</span><span class=\"p\">:</span><span class=\"mi\">120</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'bar'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'CNAME'</span><span class=\"p\">,</span> <span class=\"s1\">'content'</span><span class=\"p\">:</span><span class=\"s1\">'foo'</span><span class=\"p\">},</span>\n        <span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"s1\">'shakespeare'</span><span class=\"p\">,</span> <span class=\"s1\">'type'</span><span class=\"p\">:</span><span class=\"s1\">'TXT'</span><span class=\"p\">,</span> <span class=\"s1\">'content'</span><span class=\"p\">:</span><span class=\"s2\">\"What's in a name? That which we call a rose by any other name ...\"</span><span class=\"p\">}</span>\n    <span class=\"p\">]</span>\n\n    <span class=\"k\">for</span> <span class=\"n\">dns_record</span> <span class=\"ow\">in</span> <span class=\"n\">dns_records</span><span class=\"p\">:</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">dns_records</span><span class=\"o\">.</span><span class=\"n\">post</span><span class=\"p\">(</span><span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">dns_record</span><span class=\"p\">)</span>\n    <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"a-dns-zone-delete-code-example-be-careful\">\n<h2>A DNS zone delete code example (be careful)</h2>\n<pre><span class=\"ch\">#!/usr/bin/env python</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">import</span> <span class=\"nn\">CloudFlare</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">zone_name</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">1</span><span class=\"p\">]</span>\n    <span class=\"n\">cf</span> <span class=\"o\">=</span> <span class=\"n\">CloudFlare</span><span class=\"o\">.</span><span class=\"n\">CloudFlare</span><span class=\"p\">()</span>\n    <span class=\"n\">zone_info</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"n\">zone_name</span><span class=\"p\">})</span>\n    <span class=\"n\">zone_id</span> <span class=\"o\">=</span> <span class=\"n\">zone_info</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n\n    <span class=\"n\">dns_name</span> <span class=\"o\">=</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">argv</span><span class=\"p\">[</span><span class=\"mi\">2</span><span class=\"p\">]</span>\n    <span class=\"n\">dns_records</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">dns_records</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'name'</span><span class=\"p\">:</span><span class=\"n\">dns_name</span> <span class=\"o\">+</span> <span class=\"s1\">'.'</span> <span class=\"o\">+</span> <span class=\"n\">zone_name</span><span class=\"p\">})</span>\n    <span class=\"k\">for</span> <span class=\"n\">dns_record</span> <span class=\"ow\">in</span> <span class=\"n\">dns_records</span><span class=\"p\">:</span>\n        <span class=\"n\">dns_record_id</span> <span class=\"o\">=</span> <span class=\"n\">dns_record</span><span class=\"p\">[</span><span class=\"s1\">'id'</span><span class=\"p\">]</span>\n        <span class=\"n\">r</span> <span class=\"o\">=</span> <span class=\"n\">cf</span><span class=\"o\">.</span><span class=\"n\">zones</span><span class=\"o\">.</span><span class=\"n\">dns_records</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span><span class=\"n\">zone_id</span><span class=\"p\">,</span> <span class=\"n\">dns_record_id</span><span class=\"p\">)</span>\n    <span class=\"n\">exit</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"cli\">\n<h2>CLI</h2>\n<p>All API calls can be called from the command line. The command will\nconvert domain names prefixed with a colon (<tt>:</tt>) into\nzone_identifiers: e.g. to view <tt>example.com</tt> you must use\n<tt>cli4 <span class=\"pre\">/zones/:example.com</span></tt> (the zone ID cannot be used).</p>\n<pre>$ cli4 <span class=\"o\">[</span>-V<span class=\"p\">|</span>--version<span class=\"o\">]</span> <span class=\"o\">[</span>-h<span class=\"p\">|</span>--help<span class=\"o\">]</span> <span class=\"o\">[</span>-v<span class=\"p\">|</span>--verbose<span class=\"o\">]</span> <span class=\"o\">[</span>-q<span class=\"p\">|</span>--quiet<span class=\"o\">]</span> <span class=\"o\">[</span>-j<span class=\"p\">|</span>--json<span class=\"o\">]</span> <span class=\"o\">[</span>-y<span class=\"p\">|</span>--yaml<span class=\"o\">]</span> <span class=\"o\">[</span>-r<span class=\"p\">|</span>--raw<span class=\"o\">]</span> <span class=\"o\">[</span>-d<span class=\"p\">|</span>--dump<span class=\"o\">]</span> <span class=\"o\">[</span>--get<span class=\"p\">|</span>--patch<span class=\"p\">|</span>--post<span class=\"p\">|</span>--put<span class=\"p\">|</span>--delete<span class=\"o\">]</span> <span class=\"o\">[</span><span class=\"nv\">item</span><span class=\"o\">=</span>value ...<span class=\"o\">]</span> /command...\n</pre>\n<div id=\"cli-parameters-for-post-put-patch\">\n<h3>CLI parameters for POST/PUT/PATCH</h3>\n<p>For API calls that need to pass data or parameters there is various\nformats to use.</p>\n<p>The simplest form is <tt>item=value</tt>. This passes the value as a string\nwithin the APIs JSON data.</p>\n<p>If you need a numeric value passed then <strong>==</strong> can be used to force the\nvalue to be treated as a numeric value within the APIs JSON data. For\nexample: <tt><span class=\"pre\">item==value</span></tt>.</p>\n<p>if you need to pass a list of items; then <strong>[]</strong> can be used. For\nexample:</p>\n<pre>pool_id1=\"11111111111111111111111111111111\"\npool_id2=\"22222222222222222222222222222222\"\npool_id3=\"33333333333333333333333333333333\"\ncli4 --post global_pools=\"[ ${pool_id1}, ${pool_id2}, ${pool_id3} ]\" region_pools=\"[ ]\" /user/load_balancers/maps\n</pre>\n<p>Data or parameters can be either named or unnamed. It can not be both.\nNamed is the majority format; as described above. Unnamed parameters\nsimply don\u2019t have anything before the <strong>=</strong> sign, as in <tt>=value</tt>. This\nformat is presently only used by the Cloudflare Load Balancer API calls.\nFor example:</p>\n<pre>cli4 --put =\"00000000000000000000000000000000\" /user/load_balancers/maps/:00000000000000000000000000000000/region/:WNAM\n</pre>\n<p>Data can also be uploaded from file contents. Using the\n<tt><span class=\"pre\">item=@filename</span></tt> format will open the file and the contents uploaded\nin the POST.</p>\n</div>\n<div id=\"cli-output\">\n<h3>CLI output</h3>\n<p>The output from the CLI command is in JSON or YAML format (and human\nreadable). This is controled by the <strong>\u2013yaml</strong> or <strong>\u2013json</strong> flags (JSON\nis the default).</p>\n</div>\n<div id=\"simple-cli-examples\">\n<h3>Simple CLI examples</h3>\n<ul>\n<li><tt>cli4 /user/billing/profile</tt></li>\n<li><tt>cli4 /user/invites</tt></li>\n<li><tt>cli4 <span class=\"pre\">/zones/:example.com</span></tt></li>\n<li><tt>cli4 <span class=\"pre\">/zones/:example.com/dnssec</span></tt></li>\n<li><tt>cli4 <span class=\"pre\">/zones/:example.com/settings/ipv6</span></tt></li>\n<li><tt>cli4 <span class=\"pre\">--put</span> <span class=\"pre\">/zones/:example.com/activation_check</span></tt></li>\n<li><tt>cli4 <span class=\"pre\">/zones/:example.com/keyless_certificates</span></tt></li>\n<li><tt>cli4 <span class=\"pre\">/zones/:example.com/analytics/dashboard</span></tt></li>\n</ul>\n</div>\n<div id=\"more-complex-cli-examples\">\n<h3>More complex CLI examples</h3>\n<p>Here is the creation of a DNS entry, followed by a listing of that entry\nand then the deletion of that entry.</p>\n<pre>$ $ cli4 --post <span class=\"nv\">name</span><span class=\"o\">=</span><span class=\"s2\">\"test\"</span> <span class=\"nv\">type</span><span class=\"o\">=</span><span class=\"s2\">\"A\"</span> <span class=\"nv\">content</span><span class=\"o\">=</span><span class=\"s2\">\"10.0.0.1\"</span> /zones/:example.com/dns_records\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"00000000000000000000000000000000\"</span>,\n    <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"test.example.com\"</span>,\n    <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"A\"</span>,\n    <span class=\"s2\">\"content\"</span>: <span class=\"s2\">\"10.0.0.1\"</span>,\n    ...\n<span class=\"o\">}</span>\n$\n\n$ cli4 /zones/:example.com/dns_records/:test.example.com <span class=\"p\">|</span> jq <span class=\"s1\">'{\"id\":.id,\"name\":.name,\"type\":.type,\"content\":.content}'</span>\n<span class=\"o\">{</span>\n  <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"00000000000000000000000000000000\"</span>,\n  <span class=\"s2\">\"name\"</span>: <span class=\"s2\">\"test.example.com\"</span>,\n  <span class=\"s2\">\"type\"</span>: <span class=\"s2\">\"A\"</span>,\n  <span class=\"s2\">\"content\"</span>: <span class=\"s2\">\"10.0.0.1\"</span>\n<span class=\"o\">}</span>\n\n$ cli4 --delete /zones/:example.com/dns_records/:test.example.com <span class=\"p\">|</span> jq -c .\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span><span class=\"o\">}</span>\n$\n</pre>\n<p>There\u2019s the ability to handle dns entries with multiple values. This\nproduces more than one API call within the command.</p>\n<pre>$ cli4 /zones/:example.com/dns_records/:test.example.com | jq -c '.[]|{\"id\":.id,\"name\":.name,\"type\":.type,\"content\":.content}'\n{\"id\":\"00000000000000000000000000000000\",\"name\":\"test.example.com\",\"type\":\"A\",\"content\":\"192.168.0.1\"}\n{\"id\":\"00000000000000000000000000000000\",\"name\":\"test.example.com\",\"type\":\"AAAA\",\"content\":\"2001:d8b::1\"}\n$\n</pre>\n<p>Here are the cache purging commands.</p>\n<pre>$ cli4 --delete <span class=\"nv\">purge_everything</span><span class=\"o\">=</span><span class=\"nb\">true</span> /zones/:example.com/purge_cache <span class=\"p\">|</span> jq -c .\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span><span class=\"o\">}</span>\n$\n\n$ cli4 --delete <span class=\"nv\">files</span><span class=\"o\">=</span><span class=\"s1\">'[http://example.com/css/styles.css]'</span> /zones/:example.com/purge_cache <span class=\"p\">|</span> jq -c .\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span><span class=\"o\">}</span>\n$\n\n$ cli4 --delete <span class=\"nv\">files</span><span class=\"o\">=</span><span class=\"s1\">'[http://example.com/css/styles.css,http://example.com/js/script.js]'</span> /zones/:example.com/purge_cache <span class=\"p\">|</span> jq -c .\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span><span class=\"o\">}</span>\n$\n\n$ cli4 --delete <span class=\"nv\">tags</span><span class=\"o\">=</span><span class=\"s1\">'[tag1,tag2,tag3]'</span> /zones/:example.com/purge_cache <span class=\"p\">|</span> jq -c .\ncli4: /zones/:example.com/purge_cache - <span class=\"m\">1107</span> Only enterprise zones can purge by tag.\n$\n</pre>\n<p>A somewhat useful listing of available plans for a specific zone.</p>\n<pre>$ cli4 /zones/:example.com/available_plans <span class=\"p\">|</span> jq -c <span class=\"s1\">'.[]|{\"id\":.id,\"name\":.name}'</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span>,<span class=\"s2\">\"name\"</span>:<span class=\"s2\">\"Pro Website\"</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span>,<span class=\"s2\">\"name\"</span>:<span class=\"s2\">\"Business Website\"</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"00000000000000000000000000000000\"</span>,<span class=\"s2\">\"name\"</span>:<span class=\"s2\">\"Enterprise Website\"</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"0feeeeeeeeeeeeeeeeeeeeeeeeeeeeee\"</span>,<span class=\"s2\">\"name\"</span>:<span class=\"s2\">\"Free Website\"</span><span class=\"o\">}</span>\n$\n</pre>\n</div>\n<div id=\"cloudflare-ca-cli-examples\">\n<h3>Cloudflare CA CLI examples</h3>\n<p>Here\u2019s some Cloudflare CA examples. Note the need of the zone_id=\nparameter with the basic <strong>/certificates</strong> call.</p>\n<pre>$ cli4 /zones/:example.com <span class=\"p\">|</span> jq -c <span class=\"s1\">'.|{\"id\":.id,\"name\":.name}'</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"12345678901234567890123456789012\"</span>,<span class=\"s2\">\"name\"</span>:<span class=\"s2\">\"example.com\"</span><span class=\"o\">}</span>\n$\n\n$ cli4 <span class=\"nv\">zone_id</span><span class=\"o\">=</span><span class=\"m\">12345678901234567890123456789012</span> /certificates <span class=\"p\">|</span> jq -c <span class=\"s1\">'.[]|{\"id\":.id,\"expires_on\":.expires_on,\"hostnames\":.hostnames,\"certificate\":.certificate}'</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"123456789012345678901234567890123456789012345678\"</span>,<span class=\"s2\">\"expires_on\"</span>:<span class=\"s2\">\"2032-01-29 22:36:00 +0000 UTC\"</span>,<span class=\"s2\">\"hostnames\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"*.example.com\"</span>,<span class=\"s2\">\"example.com\"</span><span class=\"o\">]</span>,<span class=\"s2\">\"certificate\"</span>:<span class=\"s2\">\"-----BEGIN CERTIFICATE-----\\n ... \"</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"123456789012345678901234567890123456789012345678\"</span>,<span class=\"s2\">\"expires_on\"</span>:<span class=\"s2\">\"2032-01-28 23:23:00 +0000 UTC\"</span>,<span class=\"s2\">\"hostnames\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"*.example.com\"</span>,<span class=\"s2\">\"example.com\"</span><span class=\"o\">]</span>,<span class=\"s2\">\"certificate\"</span>:<span class=\"s2\">\"-----BEGIN CERTIFICATE-----\\n ... \"</span><span class=\"o\">}</span>\n<span class=\"o\">{</span><span class=\"s2\">\"id\"</span>:<span class=\"s2\">\"123456789012345678901234567890123456789012345678\"</span>,<span class=\"s2\">\"expires_on\"</span>:<span class=\"s2\">\"2032-01-28 23:20:00 +0000 UTC\"</span>,<span class=\"s2\">\"hostnames\"</span>:<span class=\"o\">[</span><span class=\"s2\">\"*.example.com\"</span>,<span class=\"s2\">\"example.com\"</span><span class=\"o\">]</span>,<span class=\"s2\">\"certificate\"</span>:<span class=\"s2\">\"-----BEGIN CERTIFICATE-----\\n ... \"</span><span class=\"o\">}</span>\n$\n</pre>\n<p>A certificate can be viewed via a simple GET request.</p>\n<pre>$ cli4 /certificates/:123456789012345678901234567890123456789012345678\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"certificate\"</span>: <span class=\"s2\">\"-----BEGIN CERTIFICATE-----\\n ... \"</span>,\n    <span class=\"s2\">\"expires_on\"</span>: <span class=\"s2\">\"2032-01-29 22:36:00 +0000 UTC\"</span>,\n    <span class=\"s2\">\"hostnames\"</span>: <span class=\"o\">[</span>\n        <span class=\"s2\">\"*.example.com\"</span>,\n        <span class=\"s2\">\"example.com\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"123456789012345678901234567890123456789012345678\"</span>,\n    <span class=\"s2\">\"request_type\"</span>: <span class=\"s2\">\"origin-rsa\"</span>\n<span class=\"o\">}</span>\n$\n</pre>\n<p>Creating a certificate. This is done with a <strong>POST</strong> request. Note the\nuse of <strong>==</strong> in order to pass a decimal number (vs. string) in JSON.\nThe CSR is not shown for simplicity sake.</p>\n<pre>$ <span class=\"nv\">CSR</span><span class=\"o\">=</span><span class=\"sb\">`</span>cat example.com.csr<span class=\"sb\">`</span>\n$ cli4 --post <span class=\"nv\">hostnames</span><span class=\"o\">=</span><span class=\"s1\">'[\"example.com\",\"*.example.com\"]'</span> <span class=\"nv\">requested_validity</span><span class=\"o\">==</span><span class=\"m\">365</span> <span class=\"nv\">request_type</span><span class=\"o\">=</span><span class=\"s2\">\"origin-ecc\"</span> <span class=\"nv\">csr</span><span class=\"o\">=</span><span class=\"s2\">\"</span><span class=\"nv\">$CSR</span><span class=\"s2\">\"</span> /certificates\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"certificate\"</span>: <span class=\"s2\">\"-----BEGIN CERTIFICATE-----\\n ... \"</span>,\n    <span class=\"s2\">\"csr\"</span>: <span class=\"s2\">\"-----BEGIN CERTIFICATE REQUEST-----\\n ... \"</span>,\n    <span class=\"s2\">\"expires_on\"</span>: <span class=\"s2\">\"2018-09-27 21:47:00 +0000 UTC\"</span>,\n    <span class=\"s2\">\"hostnames\"</span>: <span class=\"o\">[</span>\n        <span class=\"s2\">\"*.example.com\"</span>,\n        <span class=\"s2\">\"example.com\"</span>\n    <span class=\"o\">]</span>,\n    <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"123456789012345678901234567890123456789012345678\"</span>,\n    <span class=\"s2\">\"request_type\"</span>: <span class=\"s2\">\"origin-ecc\"</span>,\n    <span class=\"s2\">\"requested_validity\"</span>: <span class=\"m\">365</span>\n<span class=\"o\">}</span>\n$\n</pre>\n<p>Deleting a certificate can be done with a <strong>DELETE</strong> call.</p>\n<pre>$ cli4 --delete /certificates/:123456789012345678901234567890123456789012345678\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"id\"</span>: <span class=\"s2\">\"123456789012345678901234567890123456789012345678\"</span>,\n    <span class=\"s2\">\"revoked_at\"</span>: <span class=\"s2\">\"0000-00-00T00:00:00Z\"</span>\n<span class=\"o\">}</span>\n$\n</pre>\n</div>\n<div id=\"paging-cli-examples\">\n<h3>Paging CLI examples</h3>\n<p>The <strong>\u2013raw</strong> command provides access to the paging returned values. See\nthe API documentation for all the info. Here\u2019s an example of how to page\nthru a list of zones (it\u2019s included in the examples folder as\n<strong>example_paging_thru_zones.sh</strong>).</p>\n<pre>:\n<span class=\"nv\">tmp</span><span class=\"o\">=</span>/tmp/<span class=\"nv\">$$</span>_\n<span class=\"nb\">trap</span> <span class=\"s2\">\"rm </span><span class=\"si\">${</span><span class=\"nv\">tmp</span><span class=\"si\">}</span><span class=\"s2\">; exit 0\"</span> <span class=\"m\">0</span> <span class=\"m\">1</span> <span class=\"m\">2</span> <span class=\"m\">15</span>\n<span class=\"nv\">PAGE</span><span class=\"o\">=</span><span class=\"m\">0</span>\n<span class=\"k\">while</span> <span class=\"nb\">true</span>\n<span class=\"k\">do</span>\n    cli4 --raw <span class=\"nv\">per_page</span><span class=\"o\">=</span><span class=\"m\">5</span> <span class=\"nv\">page</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">PAGE</span><span class=\"si\">}</span> /zones &gt; <span class=\"si\">${</span><span class=\"nv\">tmp</span><span class=\"si\">}</span>\n    <span class=\"nv\">domains</span><span class=\"o\">=</span><span class=\"sb\">`</span>jq -c <span class=\"s1\">'.|.result|.[]|.name'</span> &lt; <span class=\"si\">${</span><span class=\"nv\">tmp</span><span class=\"si\">}</span> <span class=\"p\">|</span> tr -d <span class=\"s1\">'\"'</span><span class=\"sb\">`</span>\n    <span class=\"nv\">result_info</span><span class=\"o\">=</span><span class=\"sb\">`</span>jq -c <span class=\"s1\">'.|.result_info'</span> &lt; <span class=\"si\">${</span><span class=\"nv\">tmp</span><span class=\"si\">}</span><span class=\"sb\">`</span>\n    <span class=\"nv\">COUNT</span><span class=\"o\">=</span><span class=\"sb\">`</span>      <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">result_info</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">|</span> jq .count<span class=\"sb\">`</span>\n    <span class=\"nv\">PAGE</span><span class=\"o\">=</span><span class=\"sb\">`</span>       <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">result_info</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">|</span> jq .page<span class=\"sb\">`</span>\n    <span class=\"nv\">PER_PAGE</span><span class=\"o\">=</span><span class=\"sb\">`</span>   <span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">result_info</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">|</span> jq .per_page<span class=\"sb\">`</span>\n    <span class=\"nv\">TOTAL_COUNT</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">result_info</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">|</span> jq .total_count<span class=\"sb\">`</span>\n    <span class=\"nv\">TOTAL_PAGES</span><span class=\"o\">=</span><span class=\"sb\">`</span><span class=\"nb\">echo</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">result_info</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"p\">|</span> jq .total_pages<span class=\"sb\">`</span>\n    <span class=\"nb\">echo</span> <span class=\"nv\">COUNT</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">COUNT</span><span class=\"si\">}</span> <span class=\"nv\">PAGE</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">PAGE</span><span class=\"si\">}</span> <span class=\"nv\">PER_PAGE</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">PER_PAGE</span><span class=\"si\">}</span> <span class=\"nv\">TOTAL_COUNT</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">TOTAL_COUNT</span><span class=\"si\">}</span> <span class=\"nv\">TOTAL_PAGES</span><span class=\"o\">=</span><span class=\"si\">${</span><span class=\"nv\">TOTAL_PAGES</span><span class=\"si\">}</span> -- <span class=\"si\">${</span><span class=\"nv\">domains</span><span class=\"si\">}</span>\n    <span class=\"k\">if</span> <span class=\"o\">[</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">PAGE</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"o\">==</span> <span class=\"s2\">\"</span><span class=\"si\">${</span><span class=\"nv\">TOTAL_PAGES</span><span class=\"si\">}</span><span class=\"s2\">\"</span> <span class=\"o\">]</span>\n    <span class=\"k\">then</span>\n        <span class=\"c1\">## last section\n</span>        <span class=\"nb\">break</span>\n    <span class=\"k\">fi</span>\n    <span class=\"c1\"># grab the next page\n</span>    <span class=\"nv\">PAGE</span><span class=\"o\">=</span><span class=\"sb\">`</span>expr <span class=\"si\">${</span><span class=\"nv\">PAGE</span><span class=\"si\">}</span> + <span class=\"m\">1</span><span class=\"sb\">`</span>\n<span class=\"k\">done</span>\n</pre>\n<p>It produces the following results.</p>\n<pre>COUNT=5 PAGE=1 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- accumsan.example auctor.example consectetur.example dapibus.example elementum.example\nCOUNT=5 PAGE=2 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- felis.example iaculis.example ipsum.example justo.example lacus.example\nCOUNT=5 PAGE=3 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- lectus.example lobortis.example maximus.example morbi.example pharetra.example\nCOUNT=5 PAGE=4 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- porttitor.example potenti.example pretium.example purus.example quisque.example\nCOUNT=5 PAGE=5 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- sagittis.example semper.example sollicitudin.example suspendisse.example tortor.example\nCOUNT=1 PAGE=7 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- varius.example vehicula.example velit.example velit.example vitae.example\nCOUNT=5 PAGE=6 PER_PAGE=5 TOTAL_COUNT=31 TOTAL_PAGES=7 -- vivamus.example\n</pre>\n</div>\n<div id=\"dnssec-cli-examples\">\n<h3>DNSSEC CLI examples</h3>\n<pre>$ cli4 /zones/:example.com/dnssec <span class=\"p\">|</span> jq -c <span class=\"s1\">'{\"status\":.status}'</span>\n<span class=\"o\">{</span><span class=\"s2\">\"status\"</span>:<span class=\"s2\">\"disabled\"</span><span class=\"o\">}</span>\n$\n\n$ cli4 --patch <span class=\"nv\">status</span><span class=\"o\">=</span>active /zones/:example.com/dnssec <span class=\"p\">|</span> jq -c <span class=\"s1\">'{\"status\":.status}'</span>\n<span class=\"o\">{</span><span class=\"s2\">\"status\"</span>:<span class=\"s2\">\"pending\"</span><span class=\"o\">}</span>\n$\n\n$ cli4 /zones/:example.com/dnssec\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"algorithm\"</span>: <span class=\"s2\">\"13\"</span>,\n    <span class=\"s2\">\"digest\"</span>: <span class=\"s2\">\"41600621c65065b09230ebc9556ced937eb7fd86e31635d0025326ccf09a7194\"</span>,\n    <span class=\"s2\">\"digest_algorithm\"</span>: <span class=\"s2\">\"SHA256\"</span>,\n    <span class=\"s2\">\"digest_type\"</span>: <span class=\"s2\">\"2\"</span>,\n    <span class=\"s2\">\"ds\"</span>: <span class=\"s2\">\"example.com. 3600 IN DS 2371 13 2 41600621c65065b09230ebc9556ced937eb7fd86e31635d0025326ccf09a7194\"</span>,\n    <span class=\"s2\">\"flags\"</span>: <span class=\"m\">257</span>,\n    <span class=\"s2\">\"key_tag\"</span>: <span class=\"m\">2371</span>,\n    <span class=\"s2\">\"key_type\"</span>: <span class=\"s2\">\"ECDSAP256SHA256\"</span>,\n    <span class=\"s2\">\"modified_on\"</span>: <span class=\"s2\">\"2016-05-01T22:42:15.591158Z\"</span>,\n    <span class=\"s2\">\"public_key\"</span>: <span class=\"s2\">\"mdsswUyr3DPW132mOi8V9xESWE8jTo0dxCjjnopKl+GqJxpVXckHAeF+KkxLbxILfDLUT0rAK9iUzy1L53eKGQ==\"</span>,\n    <span class=\"s2\">\"status\"</span>: <span class=\"s2\">\"pending\"</span>\n<span class=\"o\">}</span>\n$\n</pre>\n</div>\n<div id=\"zone-file-upload-and-download-cli-examples-uses-bind-format-files\">\n<h3>Zone file upload and download CLI examples (uses BIND format files)</h3>\n<p>Refer to <a href=\"https://api.cloudflare.com/#dns-records-for-a-zone-import-dns-records\" rel=\"nofollow\">Import DNS\nrecords</a>\non API documentation for this feature.</p>\n<pre>$ cat zone.txt\nexample.com.            IN      SOA     somewhere.example.com. someone.example.com. <span class=\"o\">(</span>\n                                <span class=\"m\">2017010101</span>\n                                3H\n                                <span class=\"m\">15</span>\n                                1w\n                                3h\n                        <span class=\"o\">)</span>\n\nrecord1.example.com.    IN      A       <span class=\"m\">10</span>.0.0.1\nrecord2.example.com.    IN      AAAA    <span class=\"m\">2001</span>:d8b::2\nrecord3.example.com.    IN      CNAME   record1.example.com.\nrecord4.example.com.    IN      TXT     <span class=\"s2\">\"some text\"</span>\n$\n\n$ cli4 --post <span class=\"nv\">file</span><span class=\"o\">=</span>@zone.txt /zones/:example.com/dns_records/import\n<span class=\"o\">{</span>\n    <span class=\"s2\">\"recs_added\"</span>: <span class=\"m\">4</span>,\n    <span class=\"s2\">\"total_records_parsed\"</span>: <span class=\"m\">4</span>\n<span class=\"o\">}</span>\n$\n</pre>\n<p>The following is documented within the <strong>Advanced</strong> option of the DNS\npage within the Cloudflare portal.</p>\n<pre>$ cli4 /zones/:example.com/dns_records/export | egrep -v '^;;|^$'\n$ORIGIN .\n@   3600    IN  SOA example.com.    root.example.com.   (\n        2025552311  ; serial\n        7200        ; refresh\n        3600        ; retry\n        86400       ; expire\n        3600)       ; minimum\nexample.com.    300 IN  NS  REPLACE&amp;ME$WITH^YOUR@NAMESERVER.\nrecord4.example.com.    300 IN  TXT \"some text\"\nrecord3.example.com.    300 IN  CNAME   record1.example.com.\nrecord1.example.com.    300 IN  A   10.0.0.1\nrecord2.example.com.    300 IN  AAAA    2001:d8b::2\n$\n</pre>\n<p>The egrep is used for documentation brevity.</p>\n<p>This can also be done via Python code with the following example.</p>\n<pre>#!/usr/bin/env python\nimport sys\nimport CloudFlare\n\ndef main():\n    zone_name = sys.argv[1]\n    cf = CloudFlare.CloudFlare()\n\n    zones = cf.zones.get(params={'name': zone_name})\n    zone_id = zones[0]['id']\n\n    dns_records = cf.zones.dns_records.export.get(zone_id)\n    for l in dns_records.splitlines():\n        if len(l) == 0 or l[0] == ';':\n            continue\n        print l\n    exit(0)\n\nif __name__ == '__main__':\n    main()\n</pre>\n</div>\n<div id=\"cloudflare-workers\">\n<h3>Cloudflare Workers</h3>\n<p>Cloudflare Workers are described on the Cloudflare blog at\n<a href=\"https://blog.cloudflare.com/introducing-cloudflare-workers/\" rel=\"nofollow\">here</a>\nand\n<a href=\"https://blog.cloudflare.com/code-everywhere-cloudflare-workers/\" rel=\"nofollow\">here</a>,\nwith the beta release announced\n<a href=\"https://blog.cloudflare.com/cloudflare-workers-is-now-on-open-beta/\" rel=\"nofollow\">here</a>.</p>\n<p>The Python libraries now support the Cloudflare Workers API calls. The\nfollowing javascript is lifted from <a href=\"https://cloudflareworkers.com/\" rel=\"nofollow\">https://cloudflareworkers.com/</a> and\nslightly modified.</p>\n<pre>$ cat modify-body.js\naddEventListener(\"fetch\", event =&gt; {\n  event.respondWith(fetchAndModify(event.request));\n});\n\nasync function fetchAndModify(request) {\n  console.log(\"got a request:\", request);\n\n  // Send the request on to the origin server.\n  const response = await fetch(request);\n\n  // Read response body.\n  const text = await response.text();\n\n  // Modify it.\n  const modified = text.replace(\n  \"&lt;body&gt;\",\n  \"&lt;body style=\\\"background: #ff0;\\\"&gt;\");\n\n  // Return modified response.\n  return new Response(modified, {\n    status: response.status,\n    statusText: response.statusText,\n    headers: response.headers\n  });\n}\n$\n</pre>\n<p>Here\u2019s the website with it\u2019s simple <tt>&lt;body&gt;</tt> statement</p>\n<pre>$ curl -sS https://example.com/ | fgrep '&lt;body'\n  &lt;body&gt;\n$\n</pre>\n<p>Now lets add the script. Looking above, you will see that it\u2019s simple\naction is to modify the <tt>&lt;body&gt;</tt> statement and make the background\nyellow.</p>\n<pre>$ cli4 --put @- /zones/:example.com/workers/script &lt; modify-body.js\n{\n    \"etag\": \"1234567890123456789012345678901234567890123456789012345678901234\",\n    \"id\": \"example-com\",\n    \"modified_on\": \"2018-02-15T00:00:00.000000Z\",\n    \"script\": \"addEventListener(\\\"fetch\\\", event =&gt; {\\n  event.respondWith(fetchAndModify(event.request));\\n});\\n\\nasync function fetchAndModify(request) {\\n  console.log(\\\"got a request:\\\", request);\\n\\n  // Send the request on to the origin server.\\n  const response = await fetch(request);\\n\\n  // Read response body.\\n  const text = await response.text();\\n\\n  // Modify it.\\n  const modified = text.replace(\\n  \\\"&lt;body&gt;\\\",\\n  \\\"&lt;body style=\\\\\\\"background: #ff0;\\\\\\\"&gt;\\\");\\n\\n  // Return modified response.\\n  return new Response(modified, {\\n    status: response.status,\\n    statusText: response.statusText,\\n    headers: response.headers\\n  });\\n}\\n\",\n    \"size\": 603\n}\n$\n</pre>\n<p>The following call checks that the script is associated with the zone.\nIn this case, it\u2019s the only script added by this user.</p>\n<pre>$ cli4 /user/workers/scripts\n[\n    {\n        \"created_on\": \"2018-02-15T00:00:00.000000Z\",\n        \"etag\": \"1234567890123456789012345678901234567890123456789012345678901234\",\n        \"id\": \"example-com\",\n        \"modified_on\": \"2018-02-15T00:00:00.000000Z\"\n    }\n]\n$\n</pre>\n<p>Next step is to make sure a route is added for that script on that zone.</p>\n<pre>$ cli4 --post pattern=\"example.com/*\" script=\"example-com\" /zones/:example.com/workers/routes\n{\n    \"id\": \"12345678901234567890123456789012\"\n}\n$\n\n$ cli4 /zones/:example.com/workers/routes\n[\n    {\n        \"id\": \"12345678901234567890123456789012\",\n        \"pattern\": \"example.com/*\",\n        \"script\": \"example-com\"\n    }\n]\n$\n</pre>\n<p>With that script added to the zone and the route added, we can now see\nthe website has been modified because of the Cloudflare Worker.</p>\n<pre>$ curl -sS https://example.com/ | fgrep '&lt;body'\n  &lt;body style=\"background: #ff0;\"&gt;\n$\n</pre>\n<p>All this can be removed; hence bringing the website back to its initial\nstate.</p>\n<pre>$ cli4 --delete /zones/:example.com/workers/script\n12345678901234567890123456789012\n$ cli4 --delete /zones/:example.com/workers/routes/:12345678901234567890123456789012\ntrue\n$\n\n$ curl -sS https://example.com/ | fgrep '&lt;body'\n  &lt;body&gt;\n$\n</pre>\n<p>Refer to the Cloudflare Workers API documentation for more information.</p>\n</div>\n</div>\n<div id=\"implemented-api-calls\">\n<h2>Implemented API calls</h2>\n<p>The <strong>\u2013dump</strong> argument to cli4 will produce a list of all the call\nimplemented within the library.</p>\n<pre>$ cli4 --dump\n/certificates\n/ips\n/organizations\n...\n/zones/ssl/analyze\n/zones/ssl/certificate_packs\n/zones/ssl/verification\n$\n</pre>\n<div id=\"table-of-commands\">\n<h3>Table of commands</h3>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th><tt>GET</tt></th>\n<th><tt>PUT</tt></th>\n<th><tt>POST</tt></th>\n<th><tt>PATCH</tt></th>\n<th><tt>DELETE</tt></th>\n<th>API call</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td>\u00a0</td>\n<td><tt>DELETE</tt></td>\n<td>/certificates</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/ips</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/organizations</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/organizations/:identifier/firewall/access_rules/rules</td>\n</tr>\n<tr><td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/organizations/:identifier/invite</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td>\u00a0</td>\n<td><tt>DELETE</tt></td>\n<td>/organizations/:identifier/invites</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/organizations/:identifier/members</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/organizations/:identifier/railguns</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/organizations/:identifier/railguns/:identifier/zones</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/organizations/:identifier/roles</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/organizations/:identifier/virtual_dns</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/railguns</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/railguns/:identifier/zones</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/user</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/user/billing/history</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/user/billing/profile</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/user/billing/subscriptions/apps</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/user/billing/subscriptions/zones</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/user/firewall/access_rules/rules</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/user/invites</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>DELETE</tt></td>\n<td>/user/organizations</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/user/virtual_dns</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/zones</td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>PUT</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/activation_check</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/analytics/colos</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/analytics/dashboard</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/available_plans</td>\n</tr>\n<tr><td>\u00a0</td>\n<td><tt>PUT</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/custom_certificates/prioritize</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/zones/:identifier/custom_certificates</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td><tt>PUT</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/custom_pages</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td><tt>PUT</tt></td>\n<td><tt>POST</tt></td>\n<td>\u00a0</td>\n<td><tt>DELETE</tt></td>\n<td>/zones/:identifier/dns_records</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/firewall/waf/packages/:identifier/groups</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/firewall/waf/packages/:identifier/rules</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/firewall/waf/packages</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/zones/:identifier/firewall/access_rules/rules</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/zones/:identifier/keyless_certificates</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td><tt>PUT</tt></td>\n<td><tt>POST</tt></td>\n<td><tt>PATCH</tt></td>\n<td><tt>DELETE</tt></td>\n<td>/zones/:identifier/pagerules</td>\n</tr>\n<tr><td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>DELETE</tt></td>\n<td>/zones/:identifier/purge_cache</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/railguns/:identifier/diagnose</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/railguns</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/advanced_ddos</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/always_online</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/browser_cache_ttl</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/browser_check</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/cache_level</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/challenge_ttl</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/development_mode</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/email_obfuscation</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/hotlink_protection</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/ip_geolocation</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/ipv6</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/minify</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/mirage</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/mobile_redirect</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/origin_error_page_pass_thru</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/polish</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/prefetch_preload</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/response_buffering</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/rocket_loader</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/security_header</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/security_level</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/server_side_exclude</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/sort_query_string_for_cache</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/ssl</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/tls_1_2_only</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/tls_client_auth</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/true_client_ip_header</td>\n</tr>\n<tr><td><tt>GET</tt></td>\n<td>\u00a0</td>\n<td>\u00a0</td>\n<td><tt>PATCH</tt></td>\n<td>\u00a0</td>\n<td>/zones/:identifier/settings/waf</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"adding-extra-api-calls-manually\">\n<h2>Adding extra API calls manually</h2>\n<p>Extra API calls can be added via the configuration file</p>\n<pre>$ cat ~/.cloudflare/cloudflare.cfg\n<span class=\"o\">[</span>CloudFlare<span class=\"o\">]</span>\n<span class=\"nv\">extras</span> <span class=\"o\">=</span>\n    /client/v4/command\n    /client/v4/command/:command_identifier\n    /client/v4/command/:command_identifier/settings\n$\n</pre>\n<p>While it\u2019s easy to call anything within Cloudflare\u2019s API, it\u2019s not very\nuseful to add items in here as they will simply return API URL errors.\nTechnically, this is only useful for internal testing within Cloudflare.</p>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>The following error can be caused by an out of date SSL/TLS library\nand/or out of date Python.</p>\n<pre>/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/util/ssl_.py:318: SNIMissingWarning: An HTTPS request has been made, but the SNI (Subject Name Indication) extension to TLS is not available on this platform. This may cause the server to present an incorrect TLS certificate, which can cause validation failures. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#snimissingwarning.\n  SNIMissingWarning\n/usr/local/lib/python2.7/dist-packages/requests/packages/urllib3/util/ssl_.py:122: InsecurePlatformWarning: A true SSLContext object is not available. This prevents urllib3 from configuring SSL appropriately and may cause certain SSL connections to fail. You can upgrade to a newer version of Python to solve this. For more information, see https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning.\n  InsecurePlatformWarning\n</pre>\n<p>The solution can be found\n<a href=\"https://urllib3.readthedocs.org/en/latest/security.html#insecureplatformwarning\" rel=\"nofollow\">here</a>\nand/or\n<a href=\"http://stackoverflow.com/questions/35144550/how-to-install-cryptography-on-ubuntu\" rel=\"nofollow\">here</a>.</p>\n</div>\n<div id=\"python-2-x-vs-3-x-support\">\n<h2>Python 2.x vs 3.x support</h2>\n<p>As of May/June 2016 the code is now tested against pylint. This was\nrequired in order to move the codebase into Python 3.x. The motivation\nfor this came from <a href=\"https://github.com/danni\" rel=\"nofollow\">Danielle Madeley\n(danni)</a>.</p>\n<p>[STRIKEOUT:While the codebase has been edited to run on Python 3.x,\nthere\u2019s not been enough Python 3.x testing performed.] [STRIKEOUT:If you\ncan help in this regard; please contact the maintainers.]</p>\n<p>As of January 2020 the code is Python3 clean.</p>\n<p>As of January 2020 the code is shipped up to pypi with Python2 support\nremoved.</p>\n<p>As of January 2020 the code is Python3.8 clean. The new\n<tt>SyntaxWarning</tt> messages (i.e.\n<tt>SyntaxWarning: \"is\" with a literal. Did you mean <span class=\"pre\">\"==\"?</span></tt>) meant minor\nedits were needed.</p>\n</div>\n<div id=\"credit\">\n<h2>Credit</h2>\n<p>This is based on work by <a href=\"https://github.com/gnowxilef\" rel=\"nofollow\">Felix Wong\n(gnowxilef)</a> found\n<a href=\"https://github.com/cloudflare-api/python-cloudflare-v4\" rel=\"nofollow\">here</a>. It\nhas been seriously expanded upon.</p>\n</div>\n<div id=\"copyright\">\n<h2>Copyright</h2>\n<p>Portions copyright <a href=\"https://github.com/gnowxilef\" rel=\"nofollow\">Felix Wong\n(gnowxilef)</a> 2015 and Cloudflare 2016.</p>\n</div>\n\n          </div>"}, "last_serial": 6982659, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "18cfbda8afe167ae42603e600d73242c", "sha256": "39e03236849c5a60e20cdcf8d5fbbba5717f04a3bb311f6c4745932d8efc9e47"}, "downloads": -1, "filename": "cloudflare-1.0.1.tar.gz", "has_sig": true, "md5_digest": "18cfbda8afe167ae42603e600d73242c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17848, "upload_time": "2016-05-13T01:18:43", "upload_time_iso_8601": "2016-05-13T01:18:43.056071Z", "url": "https://files.pythonhosted.org/packages/f7/01/eb1adaf861355805c73c152fd73f01ebacaca98f9e4e2aab5bc768d150b2/cloudflare-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "b92aa5ada1c77da4b978c2c4149a23d4", "sha256": "e862c603ec3b735918e970f7a47373aae26352e1dc2357edd9e5fc10074de2de"}, "downloads": -1, "filename": "cloudflare-1.0.2.tar.gz", "has_sig": true, "md5_digest": "b92aa5ada1c77da4b978c2c4149a23d4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18020, "upload_time": "2016-05-17T01:53:16", "upload_time_iso_8601": "2016-05-17T01:53:16.492358Z", "url": "https://files.pythonhosted.org/packages/e5/67/b2dfa47b737f69a13a2e3ea1ce132011ed43a81a9ed1ac7b22ec63f9deef/cloudflare-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "2b023dd5e5d2809ae0b26968f5111676", "sha256": "5d05d23778d4e50f7d532cc22a832ddb17c7295f450474dbec25e2021b977cbf"}, "downloads": -1, "filename": "cloudflare-1.0.3.tar.gz", "has_sig": true, "md5_digest": "2b023dd5e5d2809ae0b26968f5111676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18044, "upload_time": "2016-05-17T08:19:55", "upload_time_iso_8601": "2016-05-17T08:19:55.844830Z", "url": "https://files.pythonhosted.org/packages/6c/16/18ae2d30716f246c978ed3c9809d76000a668680333308241f52bed621d8/cloudflare-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "1966b479d6ba7aee5066ce16cfa3a903", "sha256": "7f845aa17a672e7159f91df9166e8b036b9c5100b1b10c88ec71c1bf26c9fd90"}, "downloads": -1, "filename": "cloudflare-1.0.4.tar.gz", "has_sig": true, "md5_digest": "1966b479d6ba7aee5066ce16cfa3a903", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20166, "upload_time": "2016-05-17T15:27:34", "upload_time_iso_8601": "2016-05-17T15:27:34.996169Z", "url": "https://files.pythonhosted.org/packages/4c/11/89a9cb46c53df82b14ebf78a41e33b0e4d03befc3b4dec61d2e9f1e34009/cloudflare-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "53728b008daf0d798e934e769e17b130", "sha256": "a87f35cf3f059a0b4662ff71ffadb18d067530da5d0ca425b303f9a649c25f5e"}, "downloads": -1, "filename": "cloudflare-1.0.5.tar.gz", "has_sig": true, "md5_digest": "53728b008daf0d798e934e769e17b130", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21662, "upload_time": "2016-05-17T21:30:16", "upload_time_iso_8601": "2016-05-17T21:30:16.423365Z", "url": "https://files.pythonhosted.org/packages/3c/ad/8574acdf6b3119898c4263d6b8fd0744d21bb87fa682812e266c18c4cadc/cloudflare-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "523a827970737473615380e1397960cc", "sha256": "3b1a055e2532bdd143d95b9e0623751afa2c878805f42c180f95e9ff7c8aca37"}, "downloads": -1, "filename": "cloudflare-1.0.6.tar.gz", "has_sig": true, "md5_digest": "523a827970737473615380e1397960cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22619, "upload_time": "2016-05-18T10:28:58", "upload_time_iso_8601": "2016-05-18T10:28:58.395025Z", "url": "https://files.pythonhosted.org/packages/c4/cb/2cda1ee60eb6df93504460e9aa2ba2bc763ae96c8d05dda639de6ab586bf/cloudflare-1.0.6.tar.gz", "yanked": false}], "1.0.7": [{"comment_text": "", "digests": {"md5": "75208970b8f153805a8b508b92ca31e3", "sha256": "bba7ad6697f578de2dd28db24ac73b9402b2429eb790c2ca03a65a3ae2e867b2"}, "downloads": -1, "filename": "cloudflare-1.0.7.tar.gz", "has_sig": true, "md5_digest": "75208970b8f153805a8b508b92ca31e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 22625, "upload_time": "2016-05-18T12:48:19", "upload_time_iso_8601": "2016-05-18T12:48:19.173689Z", "url": "https://files.pythonhosted.org/packages/5f/48/b363d1c0e442860b13b89a890a3030e5fce9e1870d296bd87b0495dc2b6d/cloudflare-1.0.7.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "b719bbc2bf2c45be2596abd61a23981c", "sha256": "b0a6e626ca620223ec64eea1018f270d2bd9d080ff16704fc034a311266ffb6d"}, "downloads": -1, "filename": "cloudflare-1.1.0.tar.gz", "has_sig": true, "md5_digest": "b719bbc2bf2c45be2596abd61a23981c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24718, "upload_time": "2016-06-14T22:27:05", "upload_time_iso_8601": "2016-06-14T22:27:05.509978Z", "url": "https://files.pythonhosted.org/packages/f7/79/01dc5859b44c6dc2d0142dc191e52b7e2587c3d38bc15791fb84ecc7975b/cloudflare-1.1.0.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "96e7ba390697cff3fac4996769bac8a5", "sha256": "29be6562b46939dca59e00139e8f3228d642bbf87cea9b4b84fbde8d8d55a9d7"}, "downloads": -1, "filename": "cloudflare-1.1.2.tar.gz", "has_sig": true, "md5_digest": "96e7ba390697cff3fac4996769bac8a5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 24681, "upload_time": "2016-06-18T21:04:17", "upload_time_iso_8601": "2016-06-18T21:04:17.364740Z", "url": "https://files.pythonhosted.org/packages/5c/f6/d266b73be13add74d38f7d9a70490918010eaada3d55053abbd65ae39cfd/cloudflare-1.1.2.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "3a8ec3283c214bc3b51ae90e8617e2fd", "sha256": "ea36b2d73e0ffc4e9e8ede891def59c94e8717a2e06657aa604a19ce1b68b454"}, "downloads": -1, "filename": "cloudflare-1.1.4.tar.gz", "has_sig": true, "md5_digest": "3a8ec3283c214bc3b51ae90e8617e2fd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25820, "upload_time": "2016-06-22T02:12:19", "upload_time_iso_8601": "2016-06-22T02:12:19.739741Z", "url": "https://files.pythonhosted.org/packages/d6/8f/bdc56ceedb2730bf7e3d0db851aa3447b26b9180b5d1646f5ebfe4983c7b/cloudflare-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "899da9327403f0de5b9da0a0004e0de1", "sha256": "655c6767478cdc19cda373860457761336984f93ec9c4ac8fa9f530a2d491cd5"}, "downloads": -1, "filename": "cloudflare-1.1.5.tar.gz", "has_sig": true, "md5_digest": "899da9327403f0de5b9da0a0004e0de1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 25839, "upload_time": "2016-07-05T00:19:33", "upload_time_iso_8601": "2016-07-05T00:19:33.580348Z", "url": "https://files.pythonhosted.org/packages/82/1a/8209865df0b6266873f87125969e7aa1090a80216448f3ef760a5026c369/cloudflare-1.1.5.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "ab3416c9014ba3fe916810d502b1a2f5", "sha256": "65bc87e0d06542f8e050982d4cd171a95e711222f24b6caeb1815ceb6362ef62"}, "downloads": -1, "filename": "cloudflare-1.2.1.tar.gz", "has_sig": true, "md5_digest": "ab3416c9014ba3fe916810d502b1a2f5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29750, "upload_time": "2016-10-17T18:22:15", "upload_time_iso_8601": "2016-10-17T18:22:15.493480Z", "url": "https://files.pythonhosted.org/packages/6c/b8/43ea44a96c8f1026f9aa1c5f348c8eafadc179617025274eea6b6cfe2b2c/cloudflare-1.2.1.tar.gz", "yanked": false}], "1.2.2": [{"comment_text": "", "digests": {"md5": "10ac209ea8ea8cc60b7560e0af720884", "sha256": "2cfd0ecfee1f7c6edb24db5cb50b9f79a31301c2674666803cb12da55b10bf3d"}, "downloads": -1, "filename": "cloudflare-1.2.2.tar.gz", "has_sig": true, "md5_digest": "10ac209ea8ea8cc60b7560e0af720884", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30044, "upload_time": "2016-10-18T00:20:00", "upload_time_iso_8601": "2016-10-18T00:20:00.893825Z", "url": "https://files.pythonhosted.org/packages/3f/f4/c11fc1518c8626f8c873c76d7e96060b164a4ee95b9006ddc7ae81e86138/cloudflare-1.2.2.tar.gz", "yanked": false}], "1.2.3": [{"comment_text": "", "digests": {"md5": "c3b30c7cb57722c3a3a5a801252e3ed9", "sha256": "2db4b58160a0bda1bd9208068096b78515a3ebe0f22ac830aa9a5368c464da2a"}, "downloads": -1, "filename": "cloudflare-1.2.3.tar.gz", "has_sig": true, "md5_digest": "c3b30c7cb57722c3a3a5a801252e3ed9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 30534, "upload_time": "2016-10-19T01:19:35", "upload_time_iso_8601": "2016-10-19T01:19:35.341661Z", "url": "https://files.pythonhosted.org/packages/dc/f9/969ffe0285a79094766dc5f5bbe69fee806bccbfcc95800fad425928673a/cloudflare-1.2.3.tar.gz", "yanked": false}], "1.2.6": [{"comment_text": "", "digests": {"md5": "cf51951165372abbdd4fc6f3f87a954c", "sha256": "83a62b0edf453ea0fce999272542939e3cd3f7ba8470a61cfdac39ec289cef83"}, "downloads": -1, "filename": "cloudflare-1.2.6.tar.gz", "has_sig": true, "md5_digest": "cf51951165372abbdd4fc6f3f87a954c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37606, "upload_time": "2016-10-21T19:56:38", "upload_time_iso_8601": "2016-10-21T19:56:38.589913Z", "url": "https://files.pythonhosted.org/packages/bc/a2/aa4a9e927a87b33d607481c8979d99d90328e03a4cbef8860fee2d20d337/cloudflare-1.2.6.tar.gz", "yanked": false}], "1.2.7": [{"comment_text": "", "digests": {"md5": "d12268a32cf1f91054788934cf9dc784", "sha256": "c439261652c55f18434659537678aa152c7049298ff75e3f563704338ecf1c0c"}, "downloads": -1, "filename": "cloudflare-1.2.7.tar.gz", "has_sig": true, "md5_digest": "d12268a32cf1f91054788934cf9dc784", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38598, "upload_time": "2016-10-21T20:47:46", "upload_time_iso_8601": "2016-10-21T20:47:46.303224Z", "url": "https://files.pythonhosted.org/packages/19/32/48d46ac03359988b0e31ebecf6b53fff96e2ac2ebb81653490818a6c34a3/cloudflare-1.2.7.tar.gz", "yanked": false}], "1.2.8": [{"comment_text": "", "digests": {"md5": "93b0c724c74c7932e5fa7a8fe5551b9b", "sha256": "5bebc89f10539fa33e732de8ca71fc1f8e4d8b7be57e5a23a4226434570ad2d4"}, "downloads": -1, "filename": "cloudflare-1.2.8.tar.gz", "has_sig": true, "md5_digest": "93b0c724c74c7932e5fa7a8fe5551b9b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37642, "upload_time": "2016-10-21T20:54:07", "upload_time_iso_8601": "2016-10-21T20:54:07.043231Z", "url": "https://files.pythonhosted.org/packages/4a/2c/c02d08bbcc72af6027eb128b40f2fcabfceab5cb16f7e105269f0c79dbde/cloudflare-1.2.8.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "dea5e27bbb6c1f5934c81193876e6a39", "sha256": "6b1dbb28772387f83b7d2d25874c6d7b135709dacb880f26b5c44de7452ec65f"}, "downloads": -1, "filename": "cloudflare-1.3.0.tar.gz", "has_sig": true, "md5_digest": "dea5e27bbb6c1f5934c81193876e6a39", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37681, "upload_time": "2016-10-21T21:11:16", "upload_time_iso_8601": "2016-10-21T21:11:16.867472Z", "url": "https://files.pythonhosted.org/packages/70/d8/072f1d0cb003ffcd0a9440bd7ab5ec4090a751138c045d9e1eba8ca87a96/cloudflare-1.3.0.tar.gz", "yanked": false}], "1.3.1": [{"comment_text": "", "digests": {"md5": "046589dca631aa67ffe0b6eb0eb1ac2b", "sha256": "cf94a5d40d9121e5ca60ef9015d6650a05a06c097bb8350d171ddf130a83f933"}, "downloads": -1, "filename": "cloudflare-1.3.1.tar.gz", "has_sig": true, "md5_digest": "046589dca631aa67ffe0b6eb0eb1ac2b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37966, "upload_time": "2016-10-25T12:33:42", "upload_time_iso_8601": "2016-10-25T12:33:42.478230Z", "url": "https://files.pythonhosted.org/packages/ef/00/1e5f9faab343de34887a49d32a9e874716e21bd0bc2bb7d8d736452f4e8e/cloudflare-1.3.1.tar.gz", "yanked": false}], "1.3.2": [{"comment_text": "", "digests": {"md5": "4ebf60744171acfafb80c20743b1e057", "sha256": "7b86daca7c018f0216841a7f9df09e199aa1b02599e7c2e18c30e330a786d924"}, "downloads": -1, "filename": "cloudflare-1.3.2.tar.gz", "has_sig": true, "md5_digest": "4ebf60744171acfafb80c20743b1e057", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 40867, "upload_time": "2016-10-30T23:24:59", "upload_time_iso_8601": "2016-10-30T23:24:59.396814Z", "url": "https://files.pythonhosted.org/packages/28/07/2e52dad1f172893c5c2cc98c0259f98dfe30137c9282d50efcd61d3d149e/cloudflare-1.3.2.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "3bc22074f9ce5e1104358b1624f0da85", "sha256": "4047c7f763d55721d7c02ead71a293dbd0f44c2cc2a9f9462b104fd98fbe6b9b"}, "downloads": -1, "filename": "cloudflare-1.4.0.tar.gz", "has_sig": true, "md5_digest": "3bc22074f9ce5e1104358b1624f0da85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42984, "upload_time": "2016-12-05T19:05:17", "upload_time_iso_8601": "2016-12-05T19:05:17.231587Z", "url": "https://files.pythonhosted.org/packages/0b/f9/21fe368771b05ae15f3c7e90b011405dd3ce9de81b5bf23021f7f1203da7/cloudflare-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "10043ee6bebe76e2347db97bb78ec7c6", "sha256": "daf242d64e20c9cc02cd85e3495ffc6076c1a9204f87e93f4f58cef466066651"}, "downloads": -1, "filename": "cloudflare-1.4.1.tar.gz", "has_sig": true, "md5_digest": "10043ee6bebe76e2347db97bb78ec7c6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43038, "upload_time": "2016-12-10T23:43:22", "upload_time_iso_8601": "2016-12-10T23:43:22.722770Z", "url": "https://files.pythonhosted.org/packages/1d/ff/d3e28fff13f193bf37264c607babae6febea240ea07ec4b0fb7b0734c75f/cloudflare-1.4.1.tar.gz", "yanked": false}], "1.4.10": [{"comment_text": "", "digests": {"md5": "3e0e7ab91da51c29e2ccd0d812c9e97e", "sha256": "d9ada592d08d233f2c04fdf59e8ec09326c264d987095f96a4e7fa97a90568f1"}, "downloads": -1, "filename": "cloudflare-1.4.10.tar.gz", "has_sig": true, "md5_digest": "3e0e7ab91da51c29e2ccd0d812c9e97e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43332, "upload_time": "2016-12-29T20:31:22", "upload_time_iso_8601": "2016-12-29T20:31:22.747648Z", "url": "https://files.pythonhosted.org/packages/1b/91/9abfd897aef5cb91daa99a6fdb25f3fb467149ffbb93cc3548b2b417b4f2/cloudflare-1.4.10.tar.gz", "yanked": false}], "1.4.11": [{"comment_text": "", "digests": {"md5": "59c3af7fc42957c48a4a7f97f7903574", "sha256": "eb15e7052d5c9fc7ea93155569756d2014ab6bb16e6d4efd1dd4f45fcc555ef7"}, "downloads": -1, "filename": "cloudflare-1.4.11.tar.gz", "has_sig": true, "md5_digest": "59c3af7fc42957c48a4a7f97f7903574", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43424, "upload_time": "2016-12-30T04:25:37", "upload_time_iso_8601": "2016-12-30T04:25:37.571075Z", "url": "https://files.pythonhosted.org/packages/19/4f/7ef643bcc14c9fef825f314676809f816ed4d7394aa381e446860264f118/cloudflare-1.4.11.tar.gz", "yanked": false}], "1.4.2": [{"comment_text": "", "digests": {"md5": "dc4118cfa12760b60e94a336f1977049", "sha256": "270d204b0cfffaf0b1c7e2fbe229f76292f8b0ce755ce9b0b969c5d736d0dce9"}, "downloads": -1, "filename": "cloudflare-1.4.2.tar.gz", "has_sig": true, "md5_digest": "dc4118cfa12760b60e94a336f1977049", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43214, "upload_time": "2016-12-11T20:24:52", "upload_time_iso_8601": "2016-12-11T20:24:52.538331Z", "url": "https://files.pythonhosted.org/packages/88/34/b405b9593eb8917508604881608c685a0114066cf6c020e8aa8039a88487/cloudflare-1.4.2.tar.gz", "yanked": false}], "1.4.4": [{"comment_text": "", "digests": {"md5": "25d98aa50b23ca40cb2b0a4839fd2234", "sha256": "b6960b93a83b71cc13c8fa1369a771ac387353f7fd5aa88022499b988e0d1dd1"}, "downloads": -1, "filename": "cloudflare-1.4.4.tar.gz", "has_sig": true, "md5_digest": "25d98aa50b23ca40cb2b0a4839fd2234", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43287, "upload_time": "2016-12-22T22:31:42", "upload_time_iso_8601": "2016-12-22T22:31:42.419470Z", "url": "https://files.pythonhosted.org/packages/ae/fb/1825b26f6b5a2eb1939ee34e24748490058cb20e16ebf7486849fef2d0e3/cloudflare-1.4.4.tar.gz", "yanked": false}], "1.4.5": [{"comment_text": "", "digests": {"md5": "5a18e4a44e9be6d2b4ff9c144ca45d65", "sha256": "622d0d7be3f9873053c4debd3a842ee84d20e4d951a2c8f08e4f9e1819b77fca"}, "downloads": -1, "filename": "cloudflare-1.4.5.tar.gz", "has_sig": true, "md5_digest": "5a18e4a44e9be6d2b4ff9c144ca45d65", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43531, "upload_time": "2016-12-27T18:28:40", "upload_time_iso_8601": "2016-12-27T18:28:40.358658Z", "url": "https://files.pythonhosted.org/packages/10/f4/469f4f7f868adef55c103e62a1e39d2600dc30dca9c96832f32a550dbd53/cloudflare-1.4.5.tar.gz", "yanked": false}], "1.4.7": [{"comment_text": "", "digests": {"md5": "c315d0fd2e4092f22af762606a78f5af", "sha256": "53655f384ecba9dc1ad63472ba121fae7fc8934911cba45218e6638deaf4a12a"}, "downloads": -1, "filename": "cloudflare-1.4.7.tar.gz", "has_sig": true, "md5_digest": "c315d0fd2e4092f22af762606a78f5af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43283, "upload_time": "2016-12-29T04:42:54", "upload_time_iso_8601": "2016-12-29T04:42:54.579306Z", "url": "https://files.pythonhosted.org/packages/4f/15/e124801e133e421b101c357cb73d95a26bb1cb9bbaa75dcc5af156474f97/cloudflare-1.4.7.tar.gz", "yanked": false}], "1.4.8": [{"comment_text": "", "digests": {"md5": "38af6d8787c9a1cc4f8986e301debcfe", "sha256": "a368b65cc3a038b93af4728bdef96046616dafd2f0d66b879749353c2bc167e1"}, "downloads": -1, "filename": "cloudflare-1.4.8.tar.gz", "has_sig": true, "md5_digest": "38af6d8787c9a1cc4f8986e301debcfe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43315, "upload_time": "2016-12-29T04:56:47", "upload_time_iso_8601": "2016-12-29T04:56:47.720652Z", "url": "https://files.pythonhosted.org/packages/3c/ec/05717e504309ba48d736bef4975a46be1ff6b360dd88c667a8333f89ff66/cloudflare-1.4.8.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "c5c3239ae2e500758579533678572fc7", "sha256": "e9600495d373b306d56f28b2f55fafa33000d060a8e6e3a3a6e15497c7d53f65"}, "downloads": -1, "filename": "cloudflare-1.5.1.tar.gz", "has_sig": true, "md5_digest": "c5c3239ae2e500758579533678572fc7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42194, "upload_time": "2016-12-30T18:34:56", "upload_time_iso_8601": "2016-12-30T18:34:56.244588Z", "url": "https://files.pythonhosted.org/packages/40/c4/af743b84254e08f934165e77dcc1560b3b482e53e151b8059a4fe2e711dd/cloudflare-1.5.1.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "f34fd4efa8d048785abb18f822f59154", "sha256": "e404d66711d5de32d193797199d3b55676b6db43d199f73aa6476bea2aeeab64"}, "downloads": -1, "filename": "cloudflare-1.6.0.tar.gz", "has_sig": true, "md5_digest": "f34fd4efa8d048785abb18f822f59154", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42136, "upload_time": "2017-08-22T11:57:34", "upload_time_iso_8601": "2017-08-22T11:57:34.207736Z", "url": "https://files.pythonhosted.org/packages/c5/b1/d04630976c2a321992a4675083b2f7b82b9846697ba73992b269621b17ac/cloudflare-1.6.0.tar.gz", "yanked": false}], "1.6.2": [{"comment_text": "", "digests": {"md5": "ed7c28026a5b50c9041864a41228615a", "sha256": "d86112eeedb535d1370b05a26f30ce85565650dfaa3e31909905211ebe909ca2"}, "downloads": -1, "filename": "cloudflare-1.6.2.tar.gz", "has_sig": true, "md5_digest": "ed7c28026a5b50c9041864a41228615a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 42734, "upload_time": "2017-08-23T10:00:25", "upload_time_iso_8601": "2017-08-23T10:00:25.035189Z", "url": "https://files.pythonhosted.org/packages/9c/91/a1629ecaff20e0ea29a840183381ef314b1ee93b3ca6edcd56f8ee8b28e1/cloudflare-1.6.2.tar.gz", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "c4a219ce7877921ab415464c73e1d6fe", "sha256": "5cc1ded001b00bc29b7d0fbdaf9fbd150b19772a560918cc39ec524a83e6122d"}, "downloads": -1, "filename": "cloudflare-1.7.0.tar.gz", "has_sig": true, "md5_digest": "c4a219ce7877921ab415464c73e1d6fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43993, "upload_time": "2017-08-27T06:51:41", "upload_time_iso_8601": "2017-08-27T06:51:41.788538Z", "url": "https://files.pythonhosted.org/packages/98/aa/fa841cfe4de5d6432d07949e3e6973b98b8b8232cd13af2e52193b948c68/cloudflare-1.7.0.tar.gz", "yanked": false}], "1.7.1": [{"comment_text": "", "digests": {"md5": "ba37a72bbd351d3a304c1108f72bf591", "sha256": "3c1ba5750be56cadf7709656e9369c23407337505662cecb30007194004104ae"}, "downloads": -1, "filename": "cloudflare-1.7.1.tar.gz", "has_sig": true, "md5_digest": "ba37a72bbd351d3a304c1108f72bf591", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 43976, "upload_time": "2017-08-27T16:29:58", "upload_time_iso_8601": "2017-08-27T16:29:58.462373Z", "url": "https://files.pythonhosted.org/packages/d9/6a/a7c4c141c461cc18cb25cdefb3c9c1ddbe5c0699e902c09a28d4070cee47/cloudflare-1.7.1.tar.gz", "yanked": false}], "1.7.2": [{"comment_text": "", "digests": {"md5": "6523c9659b7126774de0356ec6935618", "sha256": "eba8174ad50016a5c8dc2a81fd14dcda44851be33aef3271a64554899a9d7087"}, "downloads": -1, "filename": "cloudflare-1.7.2.tar.gz", "has_sig": true, "md5_digest": "6523c9659b7126774de0356ec6935618", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 45016, "upload_time": "2017-08-27T17:49:29", "upload_time_iso_8601": "2017-08-27T17:49:29.832162Z", "url": "https://files.pythonhosted.org/packages/b3/73/595cecef248a85180af49af40cea3d65da71ce9368e48bbad4bdacf42928/cloudflare-1.7.2.tar.gz", "yanked": false}], "1.7.3": [{"comment_text": "", "digests": {"md5": "36ea6dc164e1c6d2aac45c02412bf963", "sha256": "dded1f5e2d1b97b75b2518cd7b5bb491a527fdbaef001f31b118b9c27d0af845"}, "downloads": -1, "filename": "cloudflare-1.7.3.tar.gz", "has_sig": true, "md5_digest": "36ea6dc164e1c6d2aac45c02412bf963", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46025, "upload_time": "2017-08-27T18:04:27", "upload_time_iso_8601": "2017-08-27T18:04:27.325357Z", "url": "https://files.pythonhosted.org/packages/e7/3d/84f919530c97d8678904fcc642d8e3e274a8e7edad19726733d23c216452/cloudflare-1.7.3.tar.gz", "yanked": false}], "1.7.4": [{"comment_text": "", "digests": {"md5": "11e72875f37fdb23ddf271ce7f6ed4d2", "sha256": "0f8777b32df17428f187639fca13cab379ef84c237fdf329adb5b49fc78c0caa"}, "downloads": -1, "filename": "cloudflare-1.7.4.tar.gz", "has_sig": true, "md5_digest": "11e72875f37fdb23ddf271ce7f6ed4d2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46101, "upload_time": "2017-08-27T18:54:39", "upload_time_iso_8601": "2017-08-27T18:54:39.072974Z", "url": "https://files.pythonhosted.org/packages/40/f0/042a7475bc66aaca15a35f24de79e69f6d84fae4626ae6cc0557b1d071dd/cloudflare-1.7.4.tar.gz", "yanked": false}], "1.7.5": [{"comment_text": "", "digests": {"md5": "6bed47a5edd747bf81186ee3bf733af6", "sha256": "0342e6f1a090fca504be510ae0d722afd7e43afe3ebb50eaf32339b3bace82c5"}, "downloads": -1, "filename": "cloudflare-1.7.5.tar.gz", "has_sig": true, "md5_digest": "6bed47a5edd747bf81186ee3bf733af6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46505, "upload_time": "2017-09-12T07:18:40", "upload_time_iso_8601": "2017-09-12T07:18:40.005650Z", "url": "https://files.pythonhosted.org/packages/5d/02/7f318a2bb111a7f7c592982f19792109a9e72be8cd6ef2622cfee7e342bc/cloudflare-1.7.5.tar.gz", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "97d88b54c6791a3251dd1af1f1a791b7", "sha256": "cc7a932c9beb0913d21f75284ad04e0c8c0a0a468ceb9b1dcd7353456d243d8c"}, "downloads": -1, "filename": "cloudflare-1.8.0.tar.gz", "has_sig": true, "md5_digest": "97d88b54c6791a3251dd1af1f1a791b7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48154, "upload_time": "2017-09-27T22:14:38", "upload_time_iso_8601": "2017-09-27T22:14:38.252319Z", "url": "https://files.pythonhosted.org/packages/cc/77/a504c4c0cf7920d1648aa06937ecec2afb40ba6d9037034e0659a737132d/cloudflare-1.8.0.tar.gz", "yanked": false}], "1.8.1": [{"comment_text": "", "digests": {"md5": "5150b766b046fb6bb1f2fa2623786b8f", "sha256": "3d73cb071a14d443a8d3ef19a0c6a4cbbfea784de3144666ecbcd35ddfc9b5c2"}, "downloads": -1, "filename": "cloudflare-1.8.1.tar.gz", "has_sig": true, "md5_digest": "5150b766b046fb6bb1f2fa2623786b8f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 48493, "upload_time": "2017-10-31T11:49:27", "upload_time_iso_8601": "2017-10-31T11:49:27.986605Z", "url": "https://files.pythonhosted.org/packages/35/fd/6e11929d3a767e530ac05f6d9391c884ec7f264fa489b7c2b68b60be11cb/cloudflare-1.8.1.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "0fc8ae0637baaae22f7ca30b5bcc3a5a", "sha256": "60e261a62b0390bd29b0c1e91f1382e8778ed09b92de3eac270c1435819d8b45"}, "downloads": -1, "filename": "cloudflare-2.0.2.tar.gz", "has_sig": true, "md5_digest": "0fc8ae0637baaae22f7ca30b5bcc3a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50148, "upload_time": "2018-02-15T03:45:24", "upload_time_iso_8601": "2018-02-15T03:45:24.546894Z", "url": "https://files.pythonhosted.org/packages/c6/b0/9bdab3ea3e9e96be78ccbcf29174c542acc30c9eb728822d5a2372769b9c/cloudflare-2.0.2.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "ae7f0118dd0793ec48911a542e8a4ae3", "sha256": "ff408b44785df84fc67cf9de1f3815c296ee8a10df5ae6780742cccb139f0fda"}, "downloads": -1, "filename": "cloudflare-2.0.4.tar.gz", "has_sig": true, "md5_digest": "ae7f0118dd0793ec48911a542e8a4ae3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53411, "upload_time": "2018-02-15T06:23:28", "upload_time_iso_8601": "2018-02-15T06:23:28.129157Z", "url": "https://files.pythonhosted.org/packages/48/a6/1cfaaec1f1d228bbbeba6c1603da1f2cfc62816f9d370906c4c8003f1b6d/cloudflare-2.0.4.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "4a05aaed22611225f300602c95776eeb", "sha256": "29ac4abe4451557053d4591f2604426a16f59bacd1740ea85c67d6808150eb1e"}, "downloads": -1, "filename": "cloudflare-2.1.0.tar.gz", "has_sig": true, "md5_digest": "4a05aaed22611225f300602c95776eeb", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53351, "upload_time": "2018-02-25T11:44:52", "upload_time_iso_8601": "2018-02-25T11:44:52.944662Z", "url": "https://files.pythonhosted.org/packages/ea/44/910d1f5f1dde2f961c6ed667c2861cec20c1f5cb19a160ce1e6f558454a0/cloudflare-2.1.0.tar.gz", "yanked": false}], "2.3.0": [{"comment_text": "", "digests": {"md5": "356d82cca1e0558e2cb2c5c1ee03f65e", "sha256": "5978a6aa29bc31e077a6ccf7e39c1a96cad925b76bccea85f076d7708a40a898"}, "downloads": -1, "filename": "cloudflare-2.3.0.tar.gz", "has_sig": true, "md5_digest": "356d82cca1e0558e2cb2c5c1ee03f65e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 52746, "upload_time": "2019-05-20T15:35:03", "upload_time_iso_8601": "2019-05-20T15:35:03.713928Z", "url": "https://files.pythonhosted.org/packages/57/a8/10eea5162fe2d3e60e439c73da33b18d054a0b2682bfce4d9df6684e8fcc/cloudflare-2.3.0.tar.gz", "yanked": false}], "2.3.1": [{"comment_text": "", "digests": {"md5": "a3b9b91e993516507f740e6a55044977", "sha256": "f46a5de7405adc7b254a901181e7e1dd8001d91327479bc8a31efe31efed4172"}, "downloads": -1, "filename": "cloudflare-2.3.1.tar.gz", "has_sig": true, "md5_digest": "a3b9b91e993516507f740e6a55044977", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53228, "upload_time": "2019-11-20T18:38:19", "upload_time_iso_8601": "2019-11-20T18:38:19.736959Z", "url": "https://files.pythonhosted.org/packages/9b/8c/973e3726c2aa73821bb4272717c6f9f6fc74e69d41ba871bdf97fc671782/cloudflare-2.3.1.tar.gz", "yanked": false}], "2.4.0": [{"comment_text": "", "digests": {"md5": "0040c3a3934d45a4723b47b55cb7172a", "sha256": "0f2cf3fcab819df1d2bf23935c9d6bd97a956e4d23b85f21f843e6f20440434a"}, "downloads": -1, "filename": "cloudflare-2.4.0.tar.gz", "has_sig": true, "md5_digest": "0040c3a3934d45a4723b47b55cb7172a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53985, "upload_time": "2020-01-08T22:58:38", "upload_time_iso_8601": "2020-01-08T22:58:38.432904Z", "url": "https://files.pythonhosted.org/packages/ca/43/9bcc6d988aa801b9a08b1633ac1943a0bb950c2b8b5b30ac36f7d020dd39/cloudflare-2.4.0.tar.gz", "yanked": false}], "2.4.1": [{"comment_text": "", "digests": {"md5": "572b7584ef74dbb4e2ab10350855624d", "sha256": "29ff66e0255929259b04bb80a230eb789a557213a02b73eaa025ff0ed2a685c9"}, "downloads": -1, "filename": "cloudflare-2.4.1.tar.gz", "has_sig": true, "md5_digest": "572b7584ef74dbb4e2ab10350855624d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55490, "upload_time": "2020-01-14T04:23:24", "upload_time_iso_8601": "2020-01-14T04:23:24.096266Z", "url": "https://files.pythonhosted.org/packages/56/a7/c6f21f10a34aee3bfeb5191c9087a05ee7c59d0b75087a544b800fdc5290/cloudflare-2.4.1.tar.gz", "yanked": false}], "2.4.2": [{"comment_text": "", "digests": {"md5": "d9f4c56e4198cd51ce1331c09f769731", "sha256": "d5b8c463d4574f8c1cfea4b442ae7869999cec1611dae2cdde4030ca83e7fda1"}, "downloads": -1, "filename": "cloudflare-2.4.2.tar.gz", "has_sig": true, "md5_digest": "d9f4c56e4198cd51ce1331c09f769731", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55505, "upload_time": "2020-01-14T05:36:06", "upload_time_iso_8601": "2020-01-14T05:36:06.544335Z", "url": "https://files.pythonhosted.org/packages/e3/bf/fe5a614cffce140a56cf6a176a51f9af3472901f4c778e5d7c4c9625b6a6/cloudflare-2.4.2.tar.gz", "yanked": false}], "2.4.3": [{"comment_text": "", "digests": {"md5": "fb3c949310acdfa53af5b69b81ee8b87", "sha256": "0cd9e2e6fc7850b889e013bb7fdb29ca445460d8240df36028dc83968a758e25"}, "downloads": -1, "filename": "cloudflare-2.4.3.tar.gz", "has_sig": true, "md5_digest": "fb3c949310acdfa53af5b69b81ee8b87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55697, "upload_time": "2020-01-14T06:22:13", "upload_time_iso_8601": "2020-01-14T06:22:13.398780Z", "url": "https://files.pythonhosted.org/packages/2a/54/7797a9a6b0e0dbce98dcd0d229a466ff132fa8fac8665d143ca94e10a7d2/cloudflare-2.4.3.tar.gz", "yanked": false}], "2.4.4": [{"comment_text": "", "digests": {"md5": "071163c1d303362e9b3451d4261618f6", "sha256": "cc39f0175462600dd6a2ed1a591d24f17db2cb22284064de22b0a5ed4ecbf3ce"}, "downloads": -1, "filename": "cloudflare-2.4.4.tar.gz", "has_sig": true, "md5_digest": "071163c1d303362e9b3451d4261618f6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 55775, "upload_time": "2020-01-14T21:43:40", "upload_time_iso_8601": "2020-01-14T21:43:40.338747Z", "url": "https://files.pythonhosted.org/packages/40/40/936340272f12ab32c874085bf4c22cdcdf59b2370ae9c57ca1236857a50d/cloudflare-2.4.4.tar.gz", "yanked": false}], "2.4.5": [{"comment_text": "", "digests": {"md5": "983be1304dba01603922db7b3ef7ff58", "sha256": "52930d94b1fb7ab589182fd0935011e69b58efdb30de11ce775ab84b25d33271"}, "downloads": -1, "filename": "cloudflare-2.4.5.tar.gz", "has_sig": true, "md5_digest": "983be1304dba01603922db7b3ef7ff58", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 56051, "upload_time": "2020-01-14T22:40:08", "upload_time_iso_8601": "2020-01-14T22:40:08.653697Z", "url": "https://files.pythonhosted.org/packages/78/2d/56ba1e4c4f50c791d058e6804b61f11e314163abdcdb0a637f2e2eb30d53/cloudflare-2.4.5.tar.gz", "yanked": false}], "2.5.0": [{"comment_text": "", "digests": {"md5": "63cee8f50e74fb7e00f41c08cd54c908", "sha256": "c993f4d97edddc340c1324b01e5334adce7fcb8c12c96fa5897738cf5b15a712"}, "downloads": -1, "filename": "cloudflare-2.5.0.tar.gz", "has_sig": true, "md5_digest": "63cee8f50e74fb7e00f41c08cd54c908", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57053, "upload_time": "2020-01-15T19:59:11", "upload_time_iso_8601": "2020-01-15T19:59:11.837613Z", "url": "https://files.pythonhosted.org/packages/fb/9b/6e89c0350e95c910ec7963004e86bd3f9bdaab09d2a1c35afced3991b368/cloudflare-2.5.0.tar.gz", "yanked": false}], "2.5.1": [{"comment_text": "", "digests": {"md5": "e6f69da79ef3f9cec12863d8e7d5a441", "sha256": "2628a2b173c37a9bbbd2ae5773e4190fe67683e613fd570e0a77801c093430f6"}, "downloads": -1, "filename": "cloudflare-2.5.1.tar.gz", "has_sig": true, "md5_digest": "e6f69da79ef3f9cec12863d8e7d5a441", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 57233, "upload_time": "2020-01-15T23:43:17", "upload_time_iso_8601": "2020-01-15T23:43:17.457590Z", "url": "https://files.pythonhosted.org/packages/dd/cd/bbcbc9a631377be072563d3a07f8286ac6a5d590cc701a723b8b8f345497/cloudflare-2.5.1.tar.gz", "yanked": false}], "2.6.0": [{"comment_text": "", "digests": {"md5": "88ce2d1c7f8226834422762526351d14", "sha256": "667c4b6e20e8c07cfbe56ba6dbbe3896523bd83c0e6a901bacdc027b8b1f2b48"}, "downloads": -1, "filename": "cloudflare-2.6.0.tar.gz", "has_sig": true, "md5_digest": "88ce2d1c7f8226834422762526351d14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 58702, "upload_time": "2020-01-18T06:02:18", "upload_time_iso_8601": "2020-01-18T06:02:18.870574Z", "url": "https://files.pythonhosted.org/packages/6d/14/eba41d09754963a33343130d70705912ea8d5a28f371fd49b580b2fdb9d3/cloudflare-2.6.0.tar.gz", "yanked": false}], "2.6.1": [{"comment_text": "", "digests": {"md5": "f050576e70965198ae239ca38beeafb9", "sha256": "e1fab742f020d2c4d0b4e627f6f5b09f4b078325b1ea945a3b3707216d69f667"}, "downloads": -1, "filename": "cloudflare-2.6.1.tar.gz", "has_sig": true, "md5_digest": "f050576e70965198ae239ca38beeafb9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59023, "upload_time": "2020-02-06T02:21:06", "upload_time_iso_8601": "2020-02-06T02:21:06.736762Z", "url": "https://files.pythonhosted.org/packages/f7/53/c726f5372d96b744c9aed9cc370b1ef6b88d50070a659e04dee2e25077a2/cloudflare-2.6.1.tar.gz", "yanked": false}], "2.6.3": [{"comment_text": "", "digests": {"md5": "ba7212bbe50d419017fbb3d0f6047ccf", "sha256": "0f67bf20bfe112a15aabea55daaaa87eeaec41ce55d30e36e7257da71751a7ac"}, "downloads": -1, "filename": "cloudflare-2.6.3.tar.gz", "has_sig": true, "md5_digest": "ba7212bbe50d419017fbb3d0f6047ccf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59136, "upload_time": "2020-02-09T21:14:56", "upload_time_iso_8601": "2020-02-09T21:14:56.434929Z", "url": "https://files.pythonhosted.org/packages/8f/d3/9d5f3714a487418c690e330d7ca814ce312611d34f212ba4a890d3791a4e/cloudflare-2.6.3.tar.gz", "yanked": false}], "2.6.4": [{"comment_text": "", "digests": {"md5": "fafbd3457d09e757bd1863fb3492d317", "sha256": "d51669dc4fdb74575a33ae0e6c9010a1cc78bf0ba7382975a490ef75077a4868"}, "downloads": -1, "filename": "cloudflare-2.6.4.tar.gz", "has_sig": true, "md5_digest": "fafbd3457d09e757bd1863fb3492d317", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59475, "upload_time": "2020-04-09T00:52:58", "upload_time_iso_8601": "2020-04-09T00:52:58.852980Z", "url": "https://files.pythonhosted.org/packages/31/ff/c916726ecc605ff49dfa250e29a00750693c82de319eb8eafe9e2021b9c0/cloudflare-2.6.4.tar.gz", "yanked": false}], "2.6.5": [{"comment_text": "", "digests": {"md5": "244452e185293d229f19791a61dbad14", "sha256": "4463d5f2927338384169315f34c2a8ac0840075b59489f8d1d773b91caba6c39"}, "downloads": -1, "filename": "cloudflare-2.6.5.tar.gz", "has_sig": true, "md5_digest": "244452e185293d229f19791a61dbad14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59582, "upload_time": "2020-04-09T01:16:28", "upload_time_iso_8601": "2020-04-09T01:16:28.776756Z", "url": "https://files.pythonhosted.org/packages/98/48/710a72c45e77080dd9b85f21636fc222b5cad6b7475d970213a7c068ba98/cloudflare-2.6.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "244452e185293d229f19791a61dbad14", "sha256": "4463d5f2927338384169315f34c2a8ac0840075b59489f8d1d773b91caba6c39"}, "downloads": -1, "filename": "cloudflare-2.6.5.tar.gz", "has_sig": true, "md5_digest": "244452e185293d229f19791a61dbad14", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 59582, "upload_time": "2020-04-09T01:16:28", "upload_time_iso_8601": "2020-04-09T01:16:28.776756Z", "url": "https://files.pythonhosted.org/packages/98/48/710a72c45e77080dd9b85f21636fc222b5cad6b7475d970213a7c068ba98/cloudflare-2.6.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:18:51 2020"}