{"info": {"author": "Navin Mohan", "author_email": "navinmohan81@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Pychromepdf\n\nPychromepdf is a Python package that lets you easily create PDFs by rendering HTML content using Chrome or Chromium as backend. It works without any external dependecies except a working installation of Chrome or Chromium that supports headless mode.\n\n# Installation\n\n```bash\npip install pychromepdf\n```\n\n## Usage\n\n### Rendering HTML bytestring to PDF\n\n```python\nfrom pychromepdf import ChromePDF\n\n# change to your chrome executable path\nPATH_TO_CHROME_EXE = '/usr/bin/google-chrome-stable'\n\nif __name__ == '__main__':\n    # initialize chromepdf object\n    cpdf = ChromePDF(PATH_TO_CHROME_EXE)\n\n    # the html that need to be rendered into pdf\n    html_bytestring = '''\n    <!doctype html>\n    <html>\n        <head>\n            <style>\n            @media print {\n                @page { margin: 0; }\n                body { margin: 1.6cm; }\n            }\n            </style>\n        </head>\n        <body>\n            <h1>Hello, World</h1>\n            <h5> Generated using headless chrome </h5>\n        </body>\n    </html>\n    '''\n\n    # create a file and write the pdf to it\n    with open('test.pdf','w') as output_file:\n        if cpdf.html_to_pdf(html_bytestring,output_file):\n            print(\"Successfully generated the pdf: {}\".format(output_file.name))\n        else:\n            print(\"Error generating pdf\")\n\n```\n\n### Rendering a flask template into PDF\n\n```python\nfrom flask import Flask, render_template, send_file\nimport tempfile\nfrom pychromepdf import ChromePDF\n\napp = Flask(__name__)\n\n# change to your chrome executable path\nPATH_TO_CHROME_EXE = '/usr/bin/google-chrome-stable'\n\n# initialize a chromepdf object\ncpdf = ChromePDF(PATH_TO_CHROME_EXE)\n\n# home route\n@app.route('/')\ndef index():\n    return render_template('index.html',username=\"John\")\n\n# custom pdf route\n@app.route('/getpdf',defaults={'username': 'John'})\n@app.route('/getpdf/<username>')\ndef getpdf(username):\n\n    # get the rendered html as string using the template\n    rendered_html = render_template('index.html',username=username)\n\n    # create a temporary output file which will be deleted when closed\n    with tempfile.NamedTemporaryFile(suffix='.pdf') as output_file:\n\n        # create a pdf from the rendered html and write it to output_file\n        if cpdf.html_to_pdf(rendered_html,output_file):\n            print(\"PDF generated successfully: {0}\".format(output_file.name))\n\n            try:\n                # send the file to user\n                return send_file(output_file.name,attachment_filename='awesome.pdf')\n            except Exception as e:\n                return str(e)\n        else:\n            print(\"Error creating PDF\")\n\n    return \"Error\"\n                \n\nif __name__ == '__main__':\n    app.run(debug=True)\n\n```\n\nTemplate\n\n```html\n{# templates/index.html #}\n\n<!DOCTYPE html>\n<html>\n<head>\n    <meta charset=\"utf-8\" />\n    <meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\n    <title>Example</title>\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n    <style>\n        @media print {\n            @page { margin: 0; }\n            body { margin: 1.6cm; }\n        }\n    </style>    \n</head>\n<body>\n    <h1>Hello {{ username }}!</h1>\n    <h4>Generated using ChromePDF</h4>\n</body>\n</html>\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nvnmo/pychromepdf", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "pychromepdf", "package_url": "https://pypi.org/project/pychromepdf/", "platform": "", "project_url": "https://pypi.org/project/pychromepdf/", "project_urls": {"Homepage": "https://github.com/nvnmo/pychromepdf"}, "release_url": "https://pypi.org/project/pychromepdf/0.0.4/", "requires_dist": null, "requires_python": "", "summary": "Creates PDFs from HTML rendered using chrome or chromium", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Pychromepdf</h1>\n<p>Pychromepdf is a Python package that lets you easily create PDFs by rendering HTML content using Chrome or Chromium as backend. It works without any external dependecies except a working installation of Chrome or Chromium that supports headless mode.</p>\n<h1>Installation</h1>\n<pre>pip install pychromepdf\n</pre>\n<h2>Usage</h2>\n<h3>Rendering HTML bytestring to PDF</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pychromepdf</span> <span class=\"kn\">import</span> <span class=\"n\">ChromePDF</span>\n\n<span class=\"c1\"># change to your chrome executable path</span>\n<span class=\"n\">PATH_TO_CHROME_EXE</span> <span class=\"o\">=</span> <span class=\"s1\">'/usr/bin/google-chrome-stable'</span>\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"c1\"># initialize chromepdf object</span>\n    <span class=\"n\">cpdf</span> <span class=\"o\">=</span> <span class=\"n\">ChromePDF</span><span class=\"p\">(</span><span class=\"n\">PATH_TO_CHROME_EXE</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># the html that need to be rendered into pdf</span>\n    <span class=\"n\">html_bytestring</span> <span class=\"o\">=</span> <span class=\"s1\">'''</span>\n<span class=\"s1\">    &lt;!doctype html&gt;</span>\n<span class=\"s1\">    &lt;html&gt;</span>\n<span class=\"s1\">        &lt;head&gt;</span>\n<span class=\"s1\">            &lt;style&gt;</span>\n<span class=\"s1\">            @media print {</span>\n<span class=\"s1\">                @page { margin: 0; }</span>\n<span class=\"s1\">                body { margin: 1.6cm; }</span>\n<span class=\"s1\">            }</span>\n<span class=\"s1\">            &lt;/style&gt;</span>\n<span class=\"s1\">        &lt;/head&gt;</span>\n<span class=\"s1\">        &lt;body&gt;</span>\n<span class=\"s1\">            &lt;h1&gt;Hello, World&lt;/h1&gt;</span>\n<span class=\"s1\">            &lt;h5&gt; Generated using headless chrome &lt;/h5&gt;</span>\n<span class=\"s1\">        &lt;/body&gt;</span>\n<span class=\"s1\">    &lt;/html&gt;</span>\n<span class=\"s1\">    '''</span>\n\n    <span class=\"c1\"># create a file and write the pdf to it</span>\n    <span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'test.pdf'</span><span class=\"p\">,</span><span class=\"s1\">'w'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">output_file</span><span class=\"p\">:</span>\n        <span class=\"k\">if</span> <span class=\"n\">cpdf</span><span class=\"o\">.</span><span class=\"n\">html_to_pdf</span><span class=\"p\">(</span><span class=\"n\">html_bytestring</span><span class=\"p\">,</span><span class=\"n\">output_file</span><span class=\"p\">):</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Successfully generated the pdf: </span><span class=\"si\">{}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">output_file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Error generating pdf\"</span><span class=\"p\">)</span>\n</pre>\n<h3>Rendering a flask template into PDF</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">render_template</span><span class=\"p\">,</span> <span class=\"n\">send_file</span>\n<span class=\"kn\">import</span> <span class=\"nn\">tempfile</span>\n<span class=\"kn\">from</span> <span class=\"nn\">pychromepdf</span> <span class=\"kn\">import</span> <span class=\"n\">ChromePDF</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># change to your chrome executable path</span>\n<span class=\"n\">PATH_TO_CHROME_EXE</span> <span class=\"o\">=</span> <span class=\"s1\">'/usr/bin/google-chrome-stable'</span>\n\n<span class=\"c1\"># initialize a chromepdf object</span>\n<span class=\"n\">cpdf</span> <span class=\"o\">=</span> <span class=\"n\">ChromePDF</span><span class=\"p\">(</span><span class=\"n\">PATH_TO_CHROME_EXE</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># home route</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">index</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'index.html'</span><span class=\"p\">,</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s2\">\"John\"</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># custom pdf route</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/getpdf'</span><span class=\"p\">,</span><span class=\"n\">defaults</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'username'</span><span class=\"p\">:</span> <span class=\"s1\">'John'</span><span class=\"p\">})</span>\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/getpdf/&lt;username&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">getpdf</span><span class=\"p\">(</span><span class=\"n\">username</span><span class=\"p\">):</span>\n\n    <span class=\"c1\"># get the rendered html as string using the template</span>\n    <span class=\"n\">rendered_html</span> <span class=\"o\">=</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'index.html'</span><span class=\"p\">,</span><span class=\"n\">username</span><span class=\"o\">=</span><span class=\"n\">username</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># create a temporary output file which will be deleted when closed</span>\n    <span class=\"k\">with</span> <span class=\"n\">tempfile</span><span class=\"o\">.</span><span class=\"n\">NamedTemporaryFile</span><span class=\"p\">(</span><span class=\"n\">suffix</span><span class=\"o\">=</span><span class=\"s1\">'.pdf'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">output_file</span><span class=\"p\">:</span>\n\n        <span class=\"c1\"># create a pdf from the rendered html and write it to output_file</span>\n        <span class=\"k\">if</span> <span class=\"n\">cpdf</span><span class=\"o\">.</span><span class=\"n\">html_to_pdf</span><span class=\"p\">(</span><span class=\"n\">rendered_html</span><span class=\"p\">,</span><span class=\"n\">output_file</span><span class=\"p\">):</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"PDF generated successfully: </span><span class=\"si\">{0}</span><span class=\"s2\">\"</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">output_file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">))</span>\n\n            <span class=\"k\">try</span><span class=\"p\">:</span>\n                <span class=\"c1\"># send the file to user</span>\n                <span class=\"k\">return</span> <span class=\"n\">send_file</span><span class=\"p\">(</span><span class=\"n\">output_file</span><span class=\"o\">.</span><span class=\"n\">name</span><span class=\"p\">,</span><span class=\"n\">attachment_filename</span><span class=\"o\">=</span><span class=\"s1\">'awesome.pdf'</span><span class=\"p\">)</span>\n            <span class=\"k\">except</span> <span class=\"ne\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n                <span class=\"k\">return</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n        <span class=\"k\">else</span><span class=\"p\">:</span>\n            <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"Error creating PDF\"</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"s2\">\"Error\"</span>\n                \n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">debug</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Template</p>\n<pre>{# templates/index.html #}\n\n<span class=\"cp\">&lt;!DOCTYPE html&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">charset</span><span class=\"o\">=</span><span class=\"s\">\"utf-8\"</span> <span class=\"p\">/&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">http-equiv</span><span class=\"o\">=</span><span class=\"s\">\"X-UA-Compatible\"</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">\"IE=edge\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>Example<span class=\"p\">&lt;/</span><span class=\"nt\">title</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">meta</span> <span class=\"na\">name</span><span class=\"o\">=</span><span class=\"s\">\"viewport\"</span> <span class=\"na\">content</span><span class=\"o\">=</span><span class=\"s\">\"width=device-width, initial-scale=1\"</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>\n        <span class=\"p\">@</span><span class=\"k\">media</span> <span class=\"nt\">print</span> <span class=\"p\">{</span>\n            <span class=\"p\">@</span><span class=\"k\">page</span> <span class=\"p\">{</span> <span class=\"nt\">margin</span><span class=\"o\">:</span> <span class=\"nt\">0</span><span class=\"o\">;</span> <span class=\"p\">}</span>\n            <span class=\"nt\">body</span> <span class=\"p\">{</span> <span class=\"k\">margin</span><span class=\"p\">:</span> <span class=\"mf\">1.6</span><span class=\"kt\">cm</span><span class=\"p\">;</span> <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">&lt;/</span><span class=\"nt\">style</span><span class=\"p\">&gt;</span>    \n<span class=\"p\">&lt;/</span><span class=\"nt\">head</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>Hello {{ username }}!<span class=\"p\">&lt;/</span><span class=\"nt\">h1</span><span class=\"p\">&gt;</span>\n    <span class=\"p\">&lt;</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>Generated using ChromePDF<span class=\"p\">&lt;/</span><span class=\"nt\">h4</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">body</span><span class=\"p\">&gt;</span>\n<span class=\"p\">&lt;/</span><span class=\"nt\">html</span><span class=\"p\">&gt;</span>\n</pre>\n\n          </div>"}, "last_serial": 4828162, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "1518c4fb1045b52fd45fc121ea7369ee", "sha256": "d110df516b44bcedf356f26d9000441d6e2da33bac45cf39a7194f49bd9cb6c8"}, "downloads": -1, "filename": "pychromepdf-0.0.3.tar.gz", "has_sig": false, "md5_digest": "1518c4fb1045b52fd45fc121ea7369ee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3306, "upload_time": "2019-02-15T04:59:38", "upload_time_iso_8601": "2019-02-15T04:59:38.814000Z", "url": "https://files.pythonhosted.org/packages/1a/fc/f24438b817c2e627d74ba9cc38c0972dd7dc4e444e3af8b2d830ba3aba51/pychromepdf-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "557cb48523d3e2ccc2c9c7a044721c38", "sha256": "efe2856267a07cb72799484235556a4734730b6b7e135a115f9223f832444b38"}, "downloads": -1, "filename": "pychromepdf-0.0.4.tar.gz", "has_sig": false, "md5_digest": "557cb48523d3e2ccc2c9c7a044721c38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2019-02-16T08:01:41", "upload_time_iso_8601": "2019-02-16T08:01:41.240993Z", "url": "https://files.pythonhosted.org/packages/64/ea/9fbb64f1c4953ca8a1b41b3b4376dec4034ea4b7f4064648b7f587e71ce3/pychromepdf-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "557cb48523d3e2ccc2c9c7a044721c38", "sha256": "efe2856267a07cb72799484235556a4734730b6b7e135a115f9223f832444b38"}, "downloads": -1, "filename": "pychromepdf-0.0.4.tar.gz", "has_sig": false, "md5_digest": "557cb48523d3e2ccc2c9c7a044721c38", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3348, "upload_time": "2019-02-16T08:01:41", "upload_time_iso_8601": "2019-02-16T08:01:41.240993Z", "url": "https://files.pythonhosted.org/packages/64/ea/9fbb64f1c4953ca8a1b41b3b4376dec4034ea4b7f4064648b7f587e71ce3/pychromepdf-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:30 2020"}