{"info": {"author": "Waqas Younas", "author_email": "waqas.younas@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Text Processing :: Linguistic"], "description": "# Homer\n\nHomer is a Python package that can help make your text more clear, simple and useful for the reader.\n\nIt provides information on an overall text as well as on individual paragraphs. It gives insights into readability, length of paragraphs, length of sentences, average sentences per paragraph, average words in a sentence, etc. It also tries to identify certain kind of vague words. It also tracks the frequency of \"and\" words in the text. (More information on all of these follows in the `Acknowledgements` section.)\n\nThis software package grew out of a personal need. Since I am not a native English speaker but am interested in writing, I designed and have been using Homer to improve my writing. I hope others will find it useful.\n\nPlease note that this is not a strict guide to control your writing. At least, I don't use it that way. I use it as a guide to make my writing as simple as possible. I strive to write concise paragraphs and sentences as well as use fewer unclear words, and Homer has been helping me.\n\nI have only used it to analyze my blogs and essays and not the large corpus of text. As this software is new, you may well spot bugs, in which case please feel free to open up issues/pull-requests.\n\nYou can use Homer as a stand-alone package or on the command line. If you run it on the command line, you can get general stats on your article or essay as well as paragraph stats.\n\n## Features\n\n#####  Article/Essay Stats\n\nRunning Homer from the command line gives the following insights about the article/essay:\n\n* Reading time in minutes (although this will vary some from reader to reader).\n* Readability scores (Flesch reading ease and Dale Chall readability scores).\n* Total paragraphs, sentences, and words.\n* Average sentences per paragraph.\n* Average words per sentence.\n* \"and\" frequency.\n* Number and list of compulsive hedgers, intensifiers, vague words.\n\n\n![Article stats](https://drive.google.com/uc?export=view&id=19E7MDoMObkwGrN2FceXv9qjZLzBLBg6U)\n\n##### Paragraph Stats\n\nParagraph stats point out the following information for _each paragraph_:\n\n* Number of sentences and words.\n* Average words per sentence.\n* The longest sentence in the paragraph.\n* Readability scores (Flesch reading ease and Dale Chall readability scores).\n* If the number of sentences is more than five in a paragraph, then Homer gives a warning highlighted in red.\n* Similarly, when the number of words is more than 25 in a sentence, then a warning highlighted in red is given.\n\n\n![Paragraph stats](https://drive.google.com/uc?export=view&id=1tnXSEh7nWQrtO3glDbtsoD_N-Q-xt2-h)\n\n## Installation\n\n### Python\nI built this on Python 3.4.5. So first we need to install Python.\n\nOn Mac, I used Homebrew to install Python e.g. one can use this command:\n\n```bash\nbrew install python3\n```\n\nTo install on Windows, you can download the installer from [here](https://www.python.org/downloads/windows/). Once downloaded this installer can be run to complete Python's installation.\n\nFor Ubuntu you might find this [resource](https://askubuntu.com/questions/802279/how-to-install-python-3-4-5-from-apt) useful.\n\n\n### Virtual environment\n\nNow it's time to create a virtual environment (assuming you cloned the code under `~/code/homer`).\n\n ```bash\n~/code/homer> python3 -m venv venv\n~/code/homer> source venv/bin/activate\n```\nFirst line in the above snippet creates a virtual environment named `venv` under `~/code/homer`. The second command activates the virtual environment.\n\nIn case you need more help with creating a virtual environment this [resource](https://docs.python.org/3/library/venv.html) can prove to be useful.\n\n### Installing `Homer` via Pip\n\nInstall using Pip:\n\n```bash\n\n~/code/homer> pip install homer-text\n```\n\nAnd that's it.\n\n\n## Usage\n\n### Command line\n\nA command line utility, under the `homer` directory, has been provided. Here is an example showing how to use it:\n\n```bash\n> python homer_cmd.py --name article_name --author lalala --file_path=/correct/path/to/file.txt\n```\n\nBoth `--name` and `--author` are optional whereas `file_path` is mandatory.\n\n### Code\n\nYou can also use Homer in your code. Here is an example:\n\n```python\nfrom homer.analyzer import Article\n\narticle = Article('Article name', 'Author', open('/file/path/article.txt').read())\narticle.print_article_stats()\narticle.print_paragraph_stats()\n```\n\n## Tests\n\nTests can be run from the `tests` directory.\n\n## Authors\n\n* [Waqas Younas](http://blog.wyounas.com) (waqas.younas@gmail.com)\n\n\n## Acknowledgements\n\n* Steven Pinker's [The Sense of Style: The Thinking Person's Guide to Writing in the 21st Century](https://www.amazon.com/Sense-Style-Thinking-Persons-Writing/dp/0143127799). This book gave me quite a few insights. It also prompted me to include tracking of vague words, complex hedgers and intensifiers.\n\n  - Complex hedgers: These are words such as _apparently, almost, fairly, nearly, partially, predominantly, presumably, rather, relative, seemingly, etc._\n\n  - Intensifiers: Words such as _very, highly, extremely_.\n\n* Bankspeak:\nThe Language\nof World Bank Reports,\n1946\u20132012: https://litlab.stanford.edu/LiteraryLabPamphlet9.pdf. This source also gave me a few ideas. The idea to keep track of \"and\" and the vague words in a text was taken from here.\n\n    -  \"and\" frequency: Basically it is the number of times the word \"and\" is used in the text (given as a percentage of total text). I try to keep it under 3 %.\n\n    - Vague words is a list of words I compiled after reading the above report.  Using these words unnecessarily, or without giving them the proper context, can make a text more abstract. These are words such as _derivative, fair value, portfolio, evaluation, strategy, competitiveness, reform, growth, capacity, progress, stability, protection, access, sustainable, etc._\n\n\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate. Also, add your name under `Authors` section of the `readme` file.\n\n## License\n[MIT](https://choosealicense.com/licenses/mit/)\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/wyounas/homer", "keywords": "text analyzer", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "homer-text", "package_url": "https://pypi.org/project/homer-text/", "platform": "", "project_url": "https://pypi.org/project/homer-text/", "project_urls": {"Bug Tracker": "https://github.com/wyounas/homer/issues", "Documentation": "https://github.com/wyounas/homer", "Homepage": "https://github.com/wyounas/homer", "Source Code": "https://github.com/wyounas/homer"}, "release_url": "https://pypi.org/project/homer-text/0.4.1/", "requires_dist": ["Click (==7.0)", "colorclass (==2.2.0)", "nltk (==3.4.1)", "Pyphen (==0.9.5)", "repoze.lru (==0.7)", "six (==1.12.0)", "terminaltables (==3.1.0)", "textstat (==0.5.6)"], "requires_python": "", "summary": "Homer, a text analyser in Python, can help make your text more clear, simple and useful for your readers.", "version": "0.4.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Homer</h1>\n<p>Homer is a Python package that can help make your text more clear, simple and useful for the reader.</p>\n<p>It provides information on an overall text as well as on individual paragraphs. It gives insights into readability, length of paragraphs, length of sentences, average sentences per paragraph, average words in a sentence, etc. It also tries to identify certain kind of vague words. It also tracks the frequency of \"and\" words in the text. (More information on all of these follows in the <code>Acknowledgements</code> section.)</p>\n<p>This software package grew out of a personal need. Since I am not a native English speaker but am interested in writing, I designed and have been using Homer to improve my writing. I hope others will find it useful.</p>\n<p>Please note that this is not a strict guide to control your writing. At least, I don't use it that way. I use it as a guide to make my writing as simple as possible. I strive to write concise paragraphs and sentences as well as use fewer unclear words, and Homer has been helping me.</p>\n<p>I have only used it to analyze my blogs and essays and not the large corpus of text. As this software is new, you may well spot bugs, in which case please feel free to open up issues/pull-requests.</p>\n<p>You can use Homer as a stand-alone package or on the command line. If you run it on the command line, you can get general stats on your article or essay as well as paragraph stats.</p>\n<h2>Features</h2>\n<h5>Article/Essay Stats</h5>\n<p>Running Homer from the command line gives the following insights about the article/essay:</p>\n<ul>\n<li>Reading time in minutes (although this will vary some from reader to reader).</li>\n<li>Readability scores (Flesch reading ease and Dale Chall readability scores).</li>\n<li>Total paragraphs, sentences, and words.</li>\n<li>Average sentences per paragraph.</li>\n<li>Average words per sentence.</li>\n<li>\"and\" frequency.</li>\n<li>Number and list of compulsive hedgers, intensifiers, vague words.</li>\n</ul>\n<p><img alt=\"Article stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/60f7b95364bbacf84a6034e7ac0221f7ef2ad599/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d313945374d446f4d4f626b7747724e32466365587639716a5a4c7a424c42673655\"></p>\n<h5>Paragraph Stats</h5>\n<p>Paragraph stats point out the following information for <em>each paragraph</em>:</p>\n<ul>\n<li>Number of sentences and words.</li>\n<li>Average words per sentence.</li>\n<li>The longest sentence in the paragraph.</li>\n<li>Readability scores (Flesch reading ease and Dale Chall readability scores).</li>\n<li>If the number of sentences is more than five in a paragraph, then Homer gives a warning highlighted in red.</li>\n<li>Similarly, when the number of words is more than 25 in a sentence, then a warning highlighted in red is given.</li>\n</ul>\n<p><img alt=\"Paragraph stats\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0ef0d8f407a13ba82da4fe27d39715d6866d7011/68747470733a2f2f64726976652e676f6f676c652e636f6d2f75633f6578706f72743d766965772669643d31746e58534568376e575172744f33676c446274736f445f4e2d512d7874322d68\"></p>\n<h2>Installation</h2>\n<h3>Python</h3>\n<p>I built this on Python 3.4.5. So first we need to install Python.</p>\n<p>On Mac, I used Homebrew to install Python e.g. one can use this command:</p>\n<pre>brew install python3\n</pre>\n<p>To install on Windows, you can download the installer from <a href=\"https://www.python.org/downloads/windows/\" rel=\"nofollow\">here</a>. Once downloaded this installer can be run to complete Python's installation.</p>\n<p>For Ubuntu you might find this <a href=\"https://askubuntu.com/questions/802279/how-to-install-python-3-4-5-from-apt\" rel=\"nofollow\">resource</a> useful.</p>\n<h3>Virtual environment</h3>\n<p>Now it's time to create a virtual environment (assuming you cloned the code under <code>~/code/homer</code>).</p>\n<pre>~/code/homer&gt; python3 -m venv venv\n~/code/homer&gt; <span class=\"nb\">source</span> venv/bin/activate\n</pre>\n<p>First line in the above snippet creates a virtual environment named <code>venv</code> under <code>~/code/homer</code>. The second command activates the virtual environment.</p>\n<p>In case you need more help with creating a virtual environment this <a href=\"https://docs.python.org/3/library/venv.html\" rel=\"nofollow\">resource</a> can prove to be useful.</p>\n<h3>Installing <code>Homer</code> via Pip</h3>\n<p>Install using Pip:</p>\n<pre>~/code/homer&gt; pip install homer-text\n</pre>\n<p>And that's it.</p>\n<h2>Usage</h2>\n<h3>Command line</h3>\n<p>A command line utility, under the <code>homer</code> directory, has been provided. Here is an example showing how to use it:</p>\n<pre>&gt; python homer_cmd.py --name article_name --author lalala --file_path<span class=\"o\">=</span>/correct/path/to/file.txt\n</pre>\n<p>Both <code>--name</code> and <code>--author</code> are optional whereas <code>file_path</code> is mandatory.</p>\n<h3>Code</h3>\n<p>You can also use Homer in your code. Here is an example:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">homer.analyzer</span> <span class=\"kn\">import</span> <span class=\"n\">Article</span>\n\n<span class=\"n\">article</span> <span class=\"o\">=</span> <span class=\"n\">Article</span><span class=\"p\">(</span><span class=\"s1\">'Article name'</span><span class=\"p\">,</span> <span class=\"s1\">'Author'</span><span class=\"p\">,</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'/file/path/article.txt'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">read</span><span class=\"p\">())</span>\n<span class=\"n\">article</span><span class=\"o\">.</span><span class=\"n\">print_article_stats</span><span class=\"p\">()</span>\n<span class=\"n\">article</span><span class=\"o\">.</span><span class=\"n\">print_paragraph_stats</span><span class=\"p\">()</span>\n</pre>\n<h2>Tests</h2>\n<p>Tests can be run from the <code>tests</code> directory.</p>\n<h2>Authors</h2>\n<ul>\n<li><a href=\"http://blog.wyounas.com\" rel=\"nofollow\">Waqas Younas</a> (<a href=\"mailto:waqas.younas@gmail.com\">waqas.younas@gmail.com</a>)</li>\n</ul>\n<h2>Acknowledgements</h2>\n<ul>\n<li>\n<p>Steven Pinker's <a href=\"https://www.amazon.com/Sense-Style-Thinking-Persons-Writing/dp/0143127799\" rel=\"nofollow\">The Sense of Style: The Thinking Person's Guide to Writing in the 21st Century</a>. This book gave me quite a few insights. It also prompted me to include tracking of vague words, complex hedgers and intensifiers.</p>\n<ul>\n<li>\n<p>Complex hedgers: These are words such as <em>apparently, almost, fairly, nearly, partially, predominantly, presumably, rather, relative, seemingly, etc.</em></p>\n</li>\n<li>\n<p>Intensifiers: Words such as <em>very, highly, extremely</em>.</p>\n</li>\n</ul>\n</li>\n<li>\n<p>Bankspeak:\nThe Language\nof World Bank Reports,\n1946\u20132012: <a href=\"https://litlab.stanford.edu/LiteraryLabPamphlet9.pdf\" rel=\"nofollow\">https://litlab.stanford.edu/LiteraryLabPamphlet9.pdf</a>. This source also gave me a few ideas. The idea to keep track of \"and\" and the vague words in a text was taken from here.</p>\n<ul>\n<li>\n<p>\"and\" frequency: Basically it is the number of times the word \"and\" is used in the text (given as a percentage of total text). I try to keep it under 3 %.</p>\n</li>\n<li>\n<p>Vague words is a list of words I compiled after reading the above report.  Using these words unnecessarily, or without giving them the proper context, can make a text more abstract. These are words such as <em>derivative, fair value, portfolio, evaluation, strategy, competitiveness, reform, growth, capacity, progress, stability, protection, access, sustainable, etc.</em></p>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate. Also, add your name under <code>Authors</code> section of the <code>readme</code> file.</p>\n<h2>License</h2>\n<p><a href=\"https://choosealicense.com/licenses/mit/\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 5829014, "releases": {"0.4.1": [{"comment_text": "", "digests": {"md5": "ce1e1282e47626a4c12a3b738fe95fd1", "sha256": "ed733d9d0a45d70293e8ea47587e897cada1d700711c826916b535c08e1c4499"}, "downloads": -1, "filename": "homer_text-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce1e1282e47626a4c12a3b738fe95fd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12584, "upload_time": "2019-09-14T10:20:59", "upload_time_iso_8601": "2019-09-14T10:20:59.843063Z", "url": "https://files.pythonhosted.org/packages/79/4f/ea560f56ef683c07a4eaa093399b1a355a607a499d00d339bd5c0dd01624/homer_text-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1df9730eca511f192d4ea56c0817b576", "sha256": "601b8aef9f1f6017590b91c32a7292ba10e5a21e9ce0555472a5e86bc7deca2f"}, "downloads": -1, "filename": "homer_text-0.4.1.tar.gz", "has_sig": false, "md5_digest": "1df9730eca511f192d4ea56c0817b576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13243, "upload_time": "2019-09-14T10:21:03", "upload_time_iso_8601": "2019-09-14T10:21:03.216538Z", "url": "https://files.pythonhosted.org/packages/13/71/f2dee093bf1ba792b9a9d31a177c55fee5e6c49b60cea7019db761966d37/homer_text-0.4.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce1e1282e47626a4c12a3b738fe95fd1", "sha256": "ed733d9d0a45d70293e8ea47587e897cada1d700711c826916b535c08e1c4499"}, "downloads": -1, "filename": "homer_text-0.4.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ce1e1282e47626a4c12a3b738fe95fd1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12584, "upload_time": "2019-09-14T10:20:59", "upload_time_iso_8601": "2019-09-14T10:20:59.843063Z", "url": "https://files.pythonhosted.org/packages/79/4f/ea560f56ef683c07a4eaa093399b1a355a607a499d00d339bd5c0dd01624/homer_text-0.4.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1df9730eca511f192d4ea56c0817b576", "sha256": "601b8aef9f1f6017590b91c32a7292ba10e5a21e9ce0555472a5e86bc7deca2f"}, "downloads": -1, "filename": "homer_text-0.4.1.tar.gz", "has_sig": false, "md5_digest": "1df9730eca511f192d4ea56c0817b576", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13243, "upload_time": "2019-09-14T10:21:03", "upload_time_iso_8601": "2019-09-14T10:21:03.216538Z", "url": "https://files.pythonhosted.org/packages/13/71/f2dee093bf1ba792b9a9d31a177c55fee5e6c49b60cea7019db761966d37/homer_text-0.4.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:43 2020"}