{"info": {"author": "Josue Ortega", "author_email": "josueortega@protonmail.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Multimedia :: Sound/Audio"], "description": "# lobster -- Split audio files into tracks with a single command\nSometimes we have found an amazing album but it is not splittedd in a proper way, just a big long song...\nwith lobster you can retrieve the long audio file (local or download audio from Youtube video) and divide\nit into mp3 files and store them into their album directory just with one simple command:\n\n```\n$ lobster --artist=\"Samsara Blues Experiment\" --album=\"Long Distance Trip\" --tracks=/tmp/tracks \\ \n           --source=youtube --input=https://www.youtube.com/watch?v=6vpOHq8bkzA --output=/tmp/\n```\nMaybe you are wondering where did you specify where to divide the track, all magic happens in the file which \nwe send as parameter to the ```--tracks``` argument.\nThe file ```/tmp/tracks``` looks as follows:\n```\nSingata Mystic Queen|00:00\nArmy of Ignorance|11:37\nFor the Lost Souls|16:12\nCenter of the Sun|26:11\nWheel of Life|39:18\nDouble Freedom|43:47\n\n```\n\nYou can find an example file under the examples directory.\n\n## Usage\n\nBut if you do not want to an input file or write all those arguments, There is\nwizard mode for you, run lobster as Wizard and forgot about all the above syntax\n\n```\n$ lobster -m wizard\n\n<lobster>  (\\/) (\u00b0,,,\u00b0) (\\/) -- woop woop woop\n<lobster>  Enter artist name: Gorilla Pulp  \n<lobster>  Enter album name: Heavy Lips\n<lobster>  Enter the source y=Youtube|l=local: [Y/l]\n<lobster>  Enter Video URL: https://www.youtube.com/watch?v=W1vY6qVTqkM\n<lobster>  Enter the destination directory: /tmp\n<lobster>  Enter Number of tracks: 8\n<lobster>  Enter Track Number 1 Name: Bless The Moon\n<lobster>  Enter Time where Track 1 starts: (e.g: 04:20) 00:00\n<lobster>  Enter Track Number 2 Name: In your waters\n<lobster>  Enter Time where Track 2 starts: (e.g: 04:20) 04:34\n<lobster>  Enter Track Number 3 Name: The Witches Twirl\n<lobster>  Enter Time where Track 3 starts: (e.g: 04:20) 8:07\n<lobster>  Enter Track Number 4 Name: Heavy Lips\n<lobster>  Enter Time where Track 4 starts: (e.g: 04:20) 12:04\n<lobster>  Enter Track Number 5 Name: Cactus Killer\n<lobster>  Enter Time where Track 5 starts: (e.g: 04:20) 18:14\n<lobster>  Enter Track Number 6 Name: Prey On Your Mind\n<lobster>  Enter Time where Track 6 starts: (e.g: 04:20) 22:37\n<lobster>  Enter Track Number 7 Name: The Low Song\n<lobster>  Enter Time where Track 7 starts: (e.g: 04:20) 27:18\n<lobster>  Enter Track Number 8 Name: Ape Eyes\n<lobster>  Enter Time where Track 8 starts: (e.g: 04:20) 32:48\n<lobster>\n information:\n artist: Gorilla Pulp\n album: Heavy Lips\n source: youtube\n input: https://www.youtube.com/watch?v=W1vY6qVTqkM\n output: /tmp\n name: Bless The Moon poisition: 1\n initial time: 00:00\n\n---------------\n name: In your waters\n poisition: 2\n initial time: 04:34\n\n---------------\n name: The Witches Twirl \n poisition: 3 \n initial time: 8:07 \n \n---------------\n name: Heavy Lips \n poisition: 4 \n initial time: 12:04 \n \n---------------\n name: Cactus Killer \n poisition: 5 \n initial time: 18:14 \n \n---------------\n name: Prey On Your Mind \n poisition: 6 \n initial time: 22:37 \n \n---------------\n name: The Low Song \n poisition: 7 \n initial time: 27:18 \n \n---------------\n name: Ape Eyes \n poisition: 8 \n initial time: 32:48 \n \n---------------\n\nIs the above information correct: [Y/n]\n\n\n```\n\n## Usage for Nerds\n\n```\n$ lobster -h\nusage: lobster [-h] --artist ARTIST --album ALBUM --tracks TRACKS --source\n               {local,youtube} --input INPUT --output OUTPUT [--format FORMAT]\n\nCut audio files with a single command\n\noptional arguments:\n  -h, --help            show this help message and exit\n  --artist ARTIST, -ar ARTIST\n                        Name of the artist of the track this will be used to\n                        name the output directory\n  --album ALBUM, -al ALBUM\n                        Name of the album, this will be used to name the\n                        output directory\n  --tracks TRACKS, -t TRACKS\n                        File containing the information to build the tracks\n  --source {local,youtube}, -s {local,youtube}\n                        Name of the media file source\n  --input INPUT, -i INPUT\n                        Path to the source media file\n  --output OUTPUT, -o OUTPUT\n                        Path to the utput directory\n  --format FORMAT       Input media file format\n  --mode MODE, -m MODE  Launch Lobster in Wizard or Command mode,`wizard` will\n                        launch the Wizard mode, `cmd` will lauch Command mode,\n                        `cmd` is the current default\n  ```\n\nYou can install the lobster via the package manager:\n\n```\n$ sudo pip install lobster \n```\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/noahfx/lobster", "keywords": "audio track edit cut youtube ffmpeg mp3 ogg split music download", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "lobster", "package_url": "https://pypi.org/project/lobster/", "platform": "", "project_url": "https://pypi.org/project/lobster/", "project_urls": {"Homepage": "https://github.com/noahfx/lobster"}, "release_url": "https://pypi.org/project/lobster/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "Split audio files into tracks with a single command", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # lobster -- Split audio files into tracks with a single command<br>Sometimes we have found an amazing album but it is not splittedd in a proper way, just a big long song...<br>with lobster you can retrieve the long audio file (local or download audio from Youtube video) and divide<br>it into mp3 files and store them into their album directory just with one simple command:<br><br>```<br>$ lobster --artist=\"Samsara Blues Experiment\" --album=\"Long Distance Trip\" --tracks=/tmp/tracks \\ <br>           --source=youtube --input=https://www.youtube.com/watch?v=6vpOHq8bkzA --output=/tmp/<br>```<br>Maybe you are wondering where did you specify where to divide the track, all magic happens in the file which <br>we send as parameter to the ```--tracks``` argument.<br>The file ```/tmp/tracks``` looks as follows:<br>```<br>Singata Mystic Queen|00:00<br>Army of Ignorance|11:37<br>For the Lost Souls|16:12<br>Center of the Sun|26:11<br>Wheel of Life|39:18<br>Double Freedom|43:47<br><br>```<br><br>You can find an example file under the examples directory.<br><br>## Usage<br><br>But if you do not want to an input file or write all those arguments, There is<br>wizard mode for you, run lobster as Wizard and forgot about all the above syntax<br><br>```<br>$ lobster -m wizard<br><br>&lt;lobster&gt;  (\\/) (\u00b0,,,\u00b0) (\\/) -- woop woop woop<br>&lt;lobster&gt;  Enter artist name: Gorilla Pulp  <br>&lt;lobster&gt;  Enter album name: Heavy Lips<br>&lt;lobster&gt;  Enter the source y=Youtube|l=local: [Y/l]<br>&lt;lobster&gt;  Enter Video URL: https://www.youtube.com/watch?v=W1vY6qVTqkM<br>&lt;lobster&gt;  Enter the destination directory: /tmp<br>&lt;lobster&gt;  Enter Number of tracks: 8<br>&lt;lobster&gt;  Enter Track Number 1 Name: Bless The Moon<br>&lt;lobster&gt;  Enter Time where Track 1 starts: (e.g: 04:20) 00:00<br>&lt;lobster&gt;  Enter Track Number 2 Name: In your waters<br>&lt;lobster&gt;  Enter Time where Track 2 starts: (e.g: 04:20) 04:34<br>&lt;lobster&gt;  Enter Track Number 3 Name: The Witches Twirl<br>&lt;lobster&gt;  Enter Time where Track 3 starts: (e.g: 04:20) 8:07<br>&lt;lobster&gt;  Enter Track Number 4 Name: Heavy Lips<br>&lt;lobster&gt;  Enter Time where Track 4 starts: (e.g: 04:20) 12:04<br>&lt;lobster&gt;  Enter Track Number 5 Name: Cactus Killer<br>&lt;lobster&gt;  Enter Time where Track 5 starts: (e.g: 04:20) 18:14<br>&lt;lobster&gt;  Enter Track Number 6 Name: Prey On Your Mind<br>&lt;lobster&gt;  Enter Time where Track 6 starts: (e.g: 04:20) 22:37<br>&lt;lobster&gt;  Enter Track Number 7 Name: The Low Song<br>&lt;lobster&gt;  Enter Time where Track 7 starts: (e.g: 04:20) 27:18<br>&lt;lobster&gt;  Enter Track Number 8 Name: Ape Eyes<br>&lt;lobster&gt;  Enter Time where Track 8 starts: (e.g: 04:20) 32:48<br>&lt;lobster&gt;<br> information:<br> artist: Gorilla Pulp<br> album: Heavy Lips<br> source: youtube<br> input: https://www.youtube.com/watch?v=W1vY6qVTqkM<br> output: /tmp<br> name: Bless The Moon poisition: 1<br> initial time: 00:00<br><br>---------------<br> name: In your waters<br> poisition: 2<br> initial time: 04:34<br><br>---------------<br> name: The Witches Twirl <br> poisition: 3 <br> initial time: 8:07 <br> <br>---------------<br> name: Heavy Lips <br> poisition: 4 <br> initial time: 12:04 <br> <br>---------------<br> name: Cactus Killer <br> poisition: 5 <br> initial time: 18:14 <br> <br>---------------<br> name: Prey On Your Mind <br> poisition: 6 <br> initial time: 22:37 <br> <br>---------------<br> name: The Low Song <br> poisition: 7 <br> initial time: 27:18 <br> <br>---------------<br> name: Ape Eyes <br> poisition: 8 <br> initial time: 32:48 <br> <br>---------------<br><br>Is the above information correct: [Y/n]<br><br><br>```<br><br>## Usage for Nerds<br><br>```<br>$ lobster -h<br>usage: lobster [-h] --artist ARTIST --album ALBUM --tracks TRACKS --source<br>               {local,youtube} --input INPUT --output OUTPUT [--format FORMAT]<br><br>Cut audio files with a single command<br><br>optional arguments:<br>  -h, --help            show this help message and exit<br>  --artist ARTIST, -ar ARTIST<br>                        Name of the artist of the track this will be used to<br>                        name the output directory<br>  --album ALBUM, -al ALBUM<br>                        Name of the album, this will be used to name the<br>                        output directory<br>  --tracks TRACKS, -t TRACKS<br>                        File containing the information to build the tracks<br>  --source {local,youtube}, -s {local,youtube}<br>                        Name of the media file source<br>  --input INPUT, -i INPUT<br>                        Path to the source media file<br>  --output OUTPUT, -o OUTPUT<br>                        Path to the utput directory<br>  --format FORMAT       Input media file format<br>  --mode MODE, -m MODE  Launch Lobster in Wizard or Command mode,`wizard` will<br>                        launch the Wizard mode, `cmd` will lauch Command mode,<br>                        `cmd` is the current default<br>  ```<br><br>You can install the lobster via the package manager:<br><br>```<br>$ sudo pip install lobster <br>```<br>\n          </div>"}, "last_serial": 3450267, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "034b60458df45c31de8293766c58a9cd", "sha256": "59948cdb0e6ac928d22ff0f2db28141c26021b822b95c546be26b64594a01687"}, "downloads": -1, "filename": "lobster-0.1.0.tar.gz", "has_sig": false, "md5_digest": "034b60458df45c31de8293766c58a9cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5549, "upload_time": "2017-05-28T23:55:50", "upload_time_iso_8601": "2017-05-28T23:55:50.169658Z", "url": "https://files.pythonhosted.org/packages/f9/1d/6347960afdf481ae3650a5524202ec1006bfb51a51cfe98a61d123c5966e/lobster-0.1.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "23b64d17063869eb2078a184c9b8c008", "sha256": "83f8de2a4fb4984837617e252f4a14d4887e83c490768eaad4f68caf09132571"}, "downloads": -1, "filename": "lobster-0.3.0.tar.gz", "has_sig": false, "md5_digest": "23b64d17063869eb2078a184c9b8c008", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10974, "upload_time": "2017-10-15T23:57:56", "upload_time_iso_8601": "2017-10-15T23:57:56.829953Z", "url": "https://files.pythonhosted.org/packages/55/28/ec61ff5bb08047fdfe6265acc64b024c3b8955d1d792b279c58fb26f9f1e/lobster-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "8876f6f5a80c1a67fa42a92437c801c4", "sha256": "5a34b265d5b613811d10a4b0ec3d5694d0c629cf7e277dee7fc91b13837ca7dc"}, "downloads": -1, "filename": "lobster-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8876f6f5a80c1a67fa42a92437c801c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11030, "upload_time": "2017-12-29T16:28:07", "upload_time_iso_8601": "2017-12-29T16:28:07.709774Z", "url": "https://files.pythonhosted.org/packages/10/d7/796fac4b9c1b500c0792307fa708bacb0f4201509171328238c61575ccfc/lobster-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8876f6f5a80c1a67fa42a92437c801c4", "sha256": "5a34b265d5b613811d10a4b0ec3d5694d0c629cf7e277dee7fc91b13837ca7dc"}, "downloads": -1, "filename": "lobster-0.3.1.tar.gz", "has_sig": false, "md5_digest": "8876f6f5a80c1a67fa42a92437c801c4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11030, "upload_time": "2017-12-29T16:28:07", "upload_time_iso_8601": "2017-12-29T16:28:07.709774Z", "url": "https://files.pythonhosted.org/packages/10/d7/796fac4b9c1b500c0792307fa708bacb0f4201509171328238c61575ccfc/lobster-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:44:40 2020"}