{"info": {"author": "Jonathan Moss", "author_email": "open-sourc@snowballone.com.au", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: Unix", "Programming Language :: Python"], "description": "Addressify Python Client\n========================\n\n.. image:: https://travis-ci.org/snowball-one/addressify.svg\n    :target: https://travis-ci.org/snowball-one/addressify\n\n\nThis is a simply Python client for the `addressify.com.au`_ API.\n\n*\"Addressify is a cloud based web API that allows web site, web application and\ndesktop application developers to easily implement free address verification,\nvalidation, checking, parsing and autocomplete for Australia in their\napplications.\"*\n\n.. _addressify.com.au: http://www.addressify.com.au\n\nInstallation\n------------\n\nSince the Python addressify client has not yet been released to pypi, you will\nneed to install it from git. This can still be done using pip::\n\n    pip install git+https://github.com/snowball-one/addressify.git\n\n\n\nUsage Quickstart\n----------------\n\nThe Addressify Python client currently covers all the available api calls of\n`addressify.com.au`_. e.g.:\n\n.. code-block:: Python\n    from addressify import Client\n\n    client = Client(your_api_key)\n    results = client.auto_complete('109/175 Sturt Street, SOUTH')\n\n\nAPI Calls Available\n-------------------\n\nclient.auto_complete\n++++++++++++++++++++\n\nGets a list of addresses that begin with the given term.\n\nArguments:\n\nterm (Required)\n   The start of an address.\n\nstate (Optional)\n   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',\n   'WA', 'NT', 'TAS')\n\npostcode (Optional)\n   The postcode to search for addresses in.\n\nmax_results (Optional)\n   The maximum number of results to return (minumum: 1, maximum: 20,\n   default: 10).\n\n\nExample Response::\n\n    [\n        \"1 GEORGE ST, TAHMOOR NSW 2573\",\n        \"1 GEORGE ST, TELARAH NSW 2320\",\n        \"1 GEORGE ST, TEMORA NSW 2666\",\n        \"1 GEORGE ST, TENTERFIELD NSW 2372\",\n        \"1 GEORGE ST, THE ROCKS NSW 2000\"\n    ]\n\n\nclient.address_line_auto_complete\n+++++++++++++++++++++++++++++++++\n\nGets a list of address lines that begin with the given term.\n\nArguments:\n\nterm (Required)\n   The start of an address line.\n\nstate (Optional)\n   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',\n   'WA', 'NT', 'TAS')\n\npostcode (Optional)\n   The postcode to search for addresses in.\n\nmax_results (Optional)\n   The maximum number of results to return (minumum: 1, maximum: 20,\n   default: 10).\n\nExample Response::\n\n    [\n        \"1 GEORDIE ST\",\n        \"1 GEORGANN ST\",\n        \"1 GEORGE AVE\",\n        \"1 GEORGE CL\",\n        \"1 GEORGE CRES\"\n    ]\n\nclient.suburb_auto_complete\n++++++++++++++++++++++++++++\n\nGets a list of suburbs that begin with the given term.\n\nArguments:\n\nterm (Required)\n   The start of a suburb name\n\nstate (Optional)\n   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',\n   'WA', 'NT', 'TAS')\n\npostcode (Optional)\n   The postcode to search for addresses in.\n\nmax_results (Optional)\n   The maximum number of results to return (minumum: 1, maximum: 20,\n   default: 10).\n\nExample Response::\n\n    [\n        \"SUFFOLK PARK\",\n        \"SUGARLOAF\",\n        \"SUMMER HILL\",\n        \"SUMMER HILL CREEK\",\n        \"SUMMER ISLAND\"\n    ]\n\nclient.suburb_state_postcode_auto_complete\n++++++++++++++++++++++++++++++++++++++++++\n\nGets a list of suburbs and postcodes where the suburb begins with the given\nterm.\n\nArguments:\n\nterm (Required)\n   The start of a suburb name.\n\nstate (Optional)\n   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',\n   'WA', 'NT', 'TAS')\n\npostcode (Optional)\n   The postcode to search for addresses in.\n\nmax_results (Optional)\n   The maximum number of results to return (minumum: 1, maximum: 20,\n   default: 10).\n\n\nExample Response::\n\n    [\n        \"SUMMER HILL, NSW 2130\",\n        \"SUMMER HILL, NSW 2421\",\n        \"SUMMER HILL CREEK, NSW 2800\",\n        \"SUMMER ISLAND, NSW 2440\",\n        \"SUMMERHILL, TAS 7250\"\n    ]\n\nclient.suburbs_for_postcode\n+++++++++++++++++++++++++++\n\nGets a list of suburbs for the given postcode.\n\nArguments:\n\npostcode (Required)\n   The postcode.\n\n\nExample Response::\n\n    [\n        \"BARANGAROO, NSW 2000\",\n        \"DAWES POINT, NSW 2000\",\n        \"HAYMARKET, NSW 2000\",\n        \"MILLERS POINT, NSW 2000\",\n        \"SYDNEY, NSW 2000\",\n        \"SYDNEY SOUTH, NSW 2000\",\n        \"THE ROCKS, NSW 2000\"\n    ]\n\nclient.state_for_postcode\n+++++++++++++++++++++++++\n\nGets the state in which the given postcode is located.\n\nArguments:\n\npostcode (Required)\n   The postcode.\n\nExample Response::\n    \"NSW\"\n\n\nclient.parse_address\n++++++++++++++++++++\n\nParses the given address into it's individual address fields.\n\nArguments:\n\naddress_line (Required)\n   The address to parse.\n\nExample Response::\n\n    addressify.client.Address(\n        number=\"680\",\n        street=\"GEORGE\",\n        street_type=\"ST\",\n        suburb=\"SYDNEY\",\n        street_suffix=None,\n        state=\"NSW\",\n        street_line=\"680 GEORGE ST\",\n        unit_type=None\n        unit_number=None,\n        postcode=\"2000\"\n    )\n\nclient.get_similar\n++++++++++++++++++\n\nGets a list of valid addresses that are similar to the given term, can be used\nto match invalid addresses to valid addresses.\n\nArguments:\n\naddress_line (Required)\n   The address to find similar addresses for\n\nmax_results (Optional)\n   The maximum number of results to return (minumum: 1, maximum: 10,\n   default: 10).\n\nExample Response::\n\n    [\n        \"1 GEORGE ST, SYDNEY NSW 2000\"\n    ]\n\nclient.validate\n+++++++++++++++\n\nChecks whether the given address is valid. Please note that validation is only\nperformed on the street, suburb, state and postcode. Street and unit numbers\nare not checked for validity.\n\nArguments\n\naddress_line (Required)\n   The address to validate.\n\nExample Response::\n    true\n\nclient.daily_call_count\n+++++++++++++++++++++++\n\nGets the current daily API call count for your account. This counter will reset\nat midnight AEST. When this counter reaches the daily API call limit for your\naccount type all other Addressify API calls will fail until the counter resets.\n\nWill return -1 if the api_key does not exist.\n\nExample Response::\n    1000", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/snowball-one/addressify", "keywords": "wrapper,addresses,addressify,post,Australia", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "addressify", "package_url": "https://pypi.org/project/addressify/", "platform": "linux", "project_url": "https://pypi.org/project/addressify/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/snowball-one/addressify"}, "release_url": "https://pypi.org/project/addressify/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "A Python wrapper around Addressify.com.au's APIs", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            Addressify Python Client<br>========================<br><br>.. image:: https://travis-ci.org/snowball-one/addressify.svg<br>    :target: https://travis-ci.org/snowball-one/addressify<br><br><br>This is a simply Python client for the `addressify.com.au`_ API.<br><br>*\"Addressify is a cloud based web API that allows web site, web application and<br>desktop application developers to easily implement free address verification,<br>validation, checking, parsing and autocomplete for Australia in their<br>applications.\"*<br><br>.. _addressify.com.au: http://www.addressify.com.au<br><br>Installation<br>------------<br><br>Since the Python addressify client has not yet been released to pypi, you will<br>need to install it from git. This can still be done using pip::<br><br>    pip install git+https://github.com/snowball-one/addressify.git<br><br><br><br>Usage Quickstart<br>----------------<br><br>The Addressify Python client currently covers all the available api calls of<br>`addressify.com.au`_. e.g.:<br><br>.. code-block:: Python<br>    from addressify import Client<br><br>    client = Client(your_api_key)<br>    results = client.auto_complete('109/175 Sturt Street, SOUTH')<br><br><br>API Calls Available<br>-------------------<br><br>client.auto_complete<br>++++++++++++++++++++<br><br>Gets a list of addresses that begin with the given term.<br><br>Arguments:<br><br>term (Required)<br>   The start of an address.<br><br>state (Optional)<br>   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',<br>   'WA', 'NT', 'TAS')<br><br>postcode (Optional)<br>   The postcode to search for addresses in.<br><br>max_results (Optional)<br>   The maximum number of results to return (minumum: 1, maximum: 20,<br>   default: 10).<br><br><br>Example Response::<br><br>    [<br>        \"1 GEORGE ST, TAHMOOR NSW 2573\",<br>        \"1 GEORGE ST, TELARAH NSW 2320\",<br>        \"1 GEORGE ST, TEMORA NSW 2666\",<br>        \"1 GEORGE ST, TENTERFIELD NSW 2372\",<br>        \"1 GEORGE ST, THE ROCKS NSW 2000\"<br>    ]<br><br><br>client.address_line_auto_complete<br>+++++++++++++++++++++++++++++++++<br><br>Gets a list of address lines that begin with the given term.<br><br>Arguments:<br><br>term (Required)<br>   The start of an address line.<br><br>state (Optional)<br>   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',<br>   'WA', 'NT', 'TAS')<br><br>postcode (Optional)<br>   The postcode to search for addresses in.<br><br>max_results (Optional)<br>   The maximum number of results to return (minumum: 1, maximum: 20,<br>   default: 10).<br><br>Example Response::<br><br>    [<br>        \"1 GEORDIE ST\",<br>        \"1 GEORGANN ST\",<br>        \"1 GEORGE AVE\",<br>        \"1 GEORGE CL\",<br>        \"1 GEORGE CRES\"<br>    ]<br><br>client.suburb_auto_complete<br>++++++++++++++++++++++++++++<br><br>Gets a list of suburbs that begin with the given term.<br><br>Arguments:<br><br>term (Required)<br>   The start of a suburb name<br><br>state (Optional)<br>   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',<br>   'WA', 'NT', 'TAS')<br><br>postcode (Optional)<br>   The postcode to search for addresses in.<br><br>max_results (Optional)<br>   The maximum number of results to return (minumum: 1, maximum: 20,<br>   default: 10).<br><br>Example Response::<br><br>    [<br>        \"SUFFOLK PARK\",<br>        \"SUGARLOAF\",<br>        \"SUMMER HILL\",<br>        \"SUMMER HILL CREEK\",<br>        \"SUMMER ISLAND\"<br>    ]<br><br>client.suburb_state_postcode_auto_complete<br>++++++++++++++++++++++++++++++++++++++++++<br><br>Gets a list of suburbs and postcodes where the suburb begins with the given<br>term.<br><br>Arguments:<br><br>term (Required)<br>   The start of a suburb name.<br><br>state (Optional)<br>   The state to search for addresses in. ('NSW', 'ACT', 'VIC', 'QLD', 'SA',<br>   'WA', 'NT', 'TAS')<br><br>postcode (Optional)<br>   The postcode to search for addresses in.<br><br>max_results (Optional)<br>   The maximum number of results to return (minumum: 1, maximum: 20,<br>   default: 10).<br><br><br>Example Response::<br><br>    [<br>        \"SUMMER HILL, NSW 2130\",<br>        \"SUMMER HILL, NSW 2421\",<br>        \"SUMMER HILL CREEK, NSW 2800\",<br>        \"SUMMER ISLAND, NSW 2440\",<br>        \"SUMMERHILL, TAS 7250\"<br>    ]<br><br>client.suburbs_for_postcode<br>+++++++++++++++++++++++++++<br><br>Gets a list of suburbs for the given postcode.<br><br>Arguments:<br><br>postcode (Required)<br>   The postcode.<br><br><br>Example Response::<br><br>    [<br>        \"BARANGAROO, NSW 2000\",<br>        \"DAWES POINT, NSW 2000\",<br>        \"HAYMARKET, NSW 2000\",<br>        \"MILLERS POINT, NSW 2000\",<br>        \"SYDNEY, NSW 2000\",<br>        \"SYDNEY SOUTH, NSW 2000\",<br>        \"THE ROCKS, NSW 2000\"<br>    ]<br><br>client.state_for_postcode<br>+++++++++++++++++++++++++<br><br>Gets the state in which the given postcode is located.<br><br>Arguments:<br><br>postcode (Required)<br>   The postcode.<br><br>Example Response::<br>    \"NSW\"<br><br><br>client.parse_address<br>++++++++++++++++++++<br><br>Parses the given address into it's individual address fields.<br><br>Arguments:<br><br>address_line (Required)<br>   The address to parse.<br><br>Example Response::<br><br>    addressify.client.Address(<br>        number=\"680\",<br>        street=\"GEORGE\",<br>        street_type=\"ST\",<br>        suburb=\"SYDNEY\",<br>        street_suffix=None,<br>        state=\"NSW\",<br>        street_line=\"680 GEORGE ST\",<br>        unit_type=None<br>        unit_number=None,<br>        postcode=\"2000\"<br>    )<br><br>client.get_similar<br>++++++++++++++++++<br><br>Gets a list of valid addresses that are similar to the given term, can be used<br>to match invalid addresses to valid addresses.<br><br>Arguments:<br><br>address_line (Required)<br>   The address to find similar addresses for<br><br>max_results (Optional)<br>   The maximum number of results to return (minumum: 1, maximum: 10,<br>   default: 10).<br><br>Example Response::<br><br>    [<br>        \"1 GEORGE ST, SYDNEY NSW 2000\"<br>    ]<br><br>client.validate<br>+++++++++++++++<br><br>Checks whether the given address is valid. Please note that validation is only<br>performed on the street, suburb, state and postcode. Street and unit numbers<br>are not checked for validity.<br><br>Arguments<br><br>address_line (Required)<br>   The address to validate.<br><br>Example Response::<br>    true<br><br>client.daily_call_count<br>+++++++++++++++++++++++<br><br>Gets the current daily API call count for your account. This counter will reset<br>at midnight AEST. When this counter reaches the daily API call limit for your<br>account type all other Addressify API calls will fail until the counter resets.<br><br>Will return -1 if the api_key does not exist.<br><br>Example Response::<br>    1000\n          </div>"}, "last_serial": 1252357, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "e76d001e2328fadd265f43c5d625cde5", "sha256": "7b6bd2e05c12b7f2e8a1e8ae80826cc12f85eb2e51d377dceb31748812eceb3e"}, "downloads": -1, "filename": "addressify-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e76d001e2328fadd265f43c5d625cde5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7683, "upload_time": "2014-10-08T21:47:45", "upload_time_iso_8601": "2014-10-08T21:47:45.243480Z", "url": "https://files.pythonhosted.org/packages/fd/14/aced569fff712e688959202a6643922cb29679f18178163a9016ffd928e9/addressify-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fceead8bed9d7ac9a726a231264e5c43", "sha256": "47a0233d5c2f62c521359a05c684db43340eace1b0e1f5bf34a291d4a18506e2"}, "downloads": -1, "filename": "addressify-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fceead8bed9d7ac9a726a231264e5c43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5734, "upload_time": "2014-10-08T21:47:07", "upload_time_iso_8601": "2014-10-08T21:47:07.741115Z", "url": "https://files.pythonhosted.org/packages/63/53/084a89ddc21556a0ba4bf8d95d94e4ead9f4b16ebfe3877c654469aa6532/addressify-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e76d001e2328fadd265f43c5d625cde5", "sha256": "7b6bd2e05c12b7f2e8a1e8ae80826cc12f85eb2e51d377dceb31748812eceb3e"}, "downloads": -1, "filename": "addressify-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "e76d001e2328fadd265f43c5d625cde5", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 7683, "upload_time": "2014-10-08T21:47:45", "upload_time_iso_8601": "2014-10-08T21:47:45.243480Z", "url": "https://files.pythonhosted.org/packages/fd/14/aced569fff712e688959202a6643922cb29679f18178163a9016ffd928e9/addressify-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fceead8bed9d7ac9a726a231264e5c43", "sha256": "47a0233d5c2f62c521359a05c684db43340eace1b0e1f5bf34a291d4a18506e2"}, "downloads": -1, "filename": "addressify-0.0.1.tar.gz", "has_sig": false, "md5_digest": "fceead8bed9d7ac9a726a231264e5c43", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5734, "upload_time": "2014-10-08T21:47:07", "upload_time_iso_8601": "2014-10-08T21:47:07.741115Z", "url": "https://files.pythonhosted.org/packages/63/53/084a89ddc21556a0ba4bf8d95d94e4ead9f4b16ebfe3877c654469aa6532/addressify-0.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:23:29 2020"}