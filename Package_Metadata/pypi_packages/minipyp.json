{"info": {"author": "Ryan Garber", "author_email": "ryanmichaelgarber@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: System Administrators", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Internet :: WWW/HTTP :: HTTP Servers"], "description": "#######\nMiniPyP\n#######\nA more traditional web server in Python\n\n.. image:: https://badge.fury.io/py/minipyp.svg\n    :target: https://badge.fury.io/py/minipyp\n    :alt: Release Status\n.. image:: https://readthedocs.org/projects/minipyp/badge/?version=latest\n    :target: http://minipyp.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://travis-ci.org/RyanGarber/minipyp.svg?branch=master\n    :target: https://travis-ci.org/RyanGarber/minipyp\n    :alt: Build Status\n\nAbout the project\n=================\nMiniPyP (pronounced ``mini\u00c2\u00b7pipe``) is an event-driven web server written in pure Python. **However, MiniPyP is not an application framework**. It's a full web server, with virtual hosts, reverse proxies, and everything else you need. MiniPyP is intended to replace Apache and nginx, so you can use Python without the performance hit of CGI.\n\nMiniPyP has some more advanced features right out of the box, too. For example, when a user goes to ``/some/url`` on your server, and the directory's ``static`` option is set to False (default), the server will look for the file ``/some/url``. If it doesn't exist, but the file ``/some`` does, that file will be served. Extensions do not need to be specified with the ``static`` option set to False. In addition, if a file does not exist but a file named ``catchall`` exists, it will be served instead of a 404. This makes creating a single-page application that much more elegant.\n\nSetup\n=====\nFirst, install MiniPyP via pip.\n\n.. code-block:: bash\n\n  pip install minipyp\n\nTo start a server within a Python program, specify a config like so (you may alternatively give a file location as the ``config``):\n\n.. code-block:: python\n\n  from minipyp import MiniPyP\n\n  config = {\n      'host': '0.0.0.0',\n      'port': 80,\n      'root': '/var/www/html',\n      'timeout': 15,\n      'error_pages': {\n          404: {\n              'html': '<p>The file <code>{uri}</code> could not be found.</p>'\n          }\n      }\n  }\n\n  MiniPyP(config=config).start()\n\n\nYou may also start a server via the command line. Unless specified, the config will be created and loaded from ``/etc/minipyp/minipyp.conf`` on Mac/Linux and ``%APPDATA%\\MiniPyP\\minipyp.conf`` on Windows.\n\n.. code-block:: bash\n\n  minipyp start [-c CONFIG]\n\n\nCreating a page\n===============\n\nTo create a page (e.g. 'https://mysite.com/test'), create a file called ``test.py`` in mysite.com's root with the following:\n\n.. code-block:: python\n\n  def render(server, request):\n      return '<p>You requested the page <code>' + request.uri + '</code>.</p>'\n\n\nLearn more\n==========\nSee the full documentation at https://minipyp.readthedocs.io\n\n.. :changelog:\n\nHistory\n=======\n\n0.2.0\n-----\n* Daemon mode\n* Logging (+ log files)\n* Global config file (minipyp.conf)\n* Directory-specific config files (.minipyp)\n\n0.1.0b1\n-------\n* Now tracking changes", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/RyanGarber/minipyp/archive/0.2.0a1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://minipyp.readthedocs.io/en/latest/", "keywords": "http https web cgi fast-cgi fpm ssl tls socket proxy reverse", "license": "", "maintainer": "", "maintainer_email": "", "name": "minipyp", "package_url": "https://pypi.org/project/minipyp/", "platform": "", "project_url": "https://pypi.org/project/minipyp/", "project_urls": {"Download": "https://github.com/RyanGarber/minipyp/archive/0.2.0a1.tar.gz", "Homepage": "https://minipyp.readthedocs.io/en/latest/"}, "release_url": "https://pypi.org/project/minipyp/0.2.0a1/", "requires_dist": null, "requires_python": "", "summary": "A more traditional web server", "version": "0.2.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A more traditional web server in Python</p>\n<a href=\"https://badge.fury.io/py/minipyp\" rel=\"nofollow\"><img alt=\"Release Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ed7830dd0e1e18d9358c41d0a3bd8ea3c5f5a8b7/68747470733a2f2f62616467652e667572792e696f2f70792f6d696e697079702e737667\"></a>\n<a href=\"http://minipyp.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f7688b1f6953a08b406b1f4f31cdf53f0ea6bd25/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6d696e697079702f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://travis-ci.org/RyanGarber/minipyp\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8769280d4ce65b749266fc389083bb720e4c00d4/68747470733a2f2f7472617669732d63692e6f72672f5279616e4761726265722f6d696e697079702e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"about-the-project\">\n<h2>About the project</h2>\n<p>MiniPyP (pronounced <tt>mini\u00c2\u00b7pipe</tt>) is an event-driven web server written in pure Python. <strong>However, MiniPyP is not an application framework</strong>. It\u2019s a full web server, with virtual hosts, reverse proxies, and everything else you need. MiniPyP is intended to replace Apache and nginx, so you can use Python without the performance hit of CGI.</p>\n<p>MiniPyP has some more advanced features right out of the box, too. For example, when a user goes to <tt>/some/url</tt> on your server, and the directory\u2019s <tt>static</tt> option is set to False (default), the server will look for the file <tt>/some/url</tt>. If it doesn\u2019t exist, but the file <tt>/some</tt> does, that file will be served. Extensions do not need to be specified with the <tt>static</tt> option set to False. In addition, if a file does not exist but a file named <tt>catchall</tt> exists, it will be served instead of a 404. This makes creating a single-page application that much more elegant.</p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>First, install MiniPyP via pip.</p>\n<pre>pip install minipyp\n</pre>\n<p>To start a server within a Python program, specify a config like so (you may alternatively give a file location as the <tt>config</tt>):</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">minipyp</span> <span class=\"kn\">import</span> <span class=\"n\">MiniPyP</span>\n\n<span class=\"n\">config</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'host'</span><span class=\"p\">:</span> <span class=\"s1\">'0.0.0.0'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'port'</span><span class=\"p\">:</span> <span class=\"mi\">80</span><span class=\"p\">,</span>\n    <span class=\"s1\">'root'</span><span class=\"p\">:</span> <span class=\"s1\">'/var/www/html'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'timeout'</span><span class=\"p\">:</span> <span class=\"mi\">15</span><span class=\"p\">,</span>\n    <span class=\"s1\">'error_pages'</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"mi\">404</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n            <span class=\"s1\">'html'</span><span class=\"p\">:</span> <span class=\"s1\">'&lt;p&gt;The file &lt;code&gt;</span><span class=\"si\">{uri}</span><span class=\"s1\">&lt;/code&gt; could not be found.&lt;/p&gt;'</span>\n        <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n\n<span class=\"n\">MiniPyP</span><span class=\"p\">(</span><span class=\"n\">config</span><span class=\"o\">=</span><span class=\"n\">config</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">()</span>\n</pre>\n<p>You may also start a server via the command line. Unless specified, the config will be created and loaded from <tt>/etc/minipyp/minipyp.conf</tt> on Mac/Linux and <tt><span class=\"pre\">%APPDATA%\\MiniPyP\\minipyp.conf</span></tt> on Windows.</p>\n<pre>minipyp start <span class=\"o\">[</span>-c CONFIG<span class=\"o\">]</span>\n</pre>\n</div>\n<div id=\"creating-a-page\">\n<h2>Creating a page</h2>\n<p>To create a page (e.g. \u2018<a href=\"https://mysite.com/test\" rel=\"nofollow\">https://mysite.com/test</a>\u2019), create a file called <tt>test.py</tt> in mysite.com\u2019s root with the following:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">render</span><span class=\"p\">(</span><span class=\"n\">server</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"s1\">'&lt;p&gt;You requested the page &lt;code&gt;'</span> <span class=\"o\">+</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">uri</span> <span class=\"o\">+</span> <span class=\"s1\">'&lt;/code&gt;.&lt;/p&gt;'</span>\n</pre>\n</div>\n<div id=\"learn-more\">\n<h2>Learn more</h2>\n<p>See the full documentation at <a href=\"https://minipyp.readthedocs.io\" rel=\"nofollow\">https://minipyp.readthedocs.io</a></p>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.2.0</h3>\n<ul>\n<li>Daemon mode</li>\n<li>Logging (+ log files)</li>\n<li>Global config file (minipyp.conf)</li>\n<li>Directory-specific config files (.minipyp)</li>\n</ul>\n</div>\n<div id=\"b1\">\n<h3>0.1.0b1</h3>\n<ul>\n<li>Now tracking changes</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3549867, "releases": {"0.1.0a1": [{"comment_text": "", "digests": {"md5": "68da8cff28596ffb2e128f5713b9b47a", "sha256": "dd53add5a2104d2198cb9e254c2ac09e3a1e760f2bc408787aee60df746e0929"}, "downloads": -1, "filename": "minipyp-0.1.0a1.tar.gz", "has_sig": false, "md5_digest": "68da8cff28596ffb2e128f5713b9b47a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7207, "upload_time": "2018-01-18T09:55:50", "upload_time_iso_8601": "2018-01-18T09:55:50.291140Z", "url": "https://files.pythonhosted.org/packages/61/53/1d4a88755d86221534789d391287cb04c345398cb4fc8761db56d6a08183/minipyp-0.1.0a1.tar.gz", "yanked": false}], "0.1.0a2": [{"comment_text": "", "digests": {"md5": "fcdd9652dc657ef7875c3435cb0718af", "sha256": "2d8fa6cbcdb2d4e408271246d49c08e71ab65995dc916834fe1aa52a6b1b8c4a"}, "downloads": -1, "filename": "minipyp-0.1.0a2.tar.gz", "has_sig": false, "md5_digest": "fcdd9652dc657ef7875c3435cb0718af", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7737, "upload_time": "2018-01-19T23:29:14", "upload_time_iso_8601": "2018-01-19T23:29:14.189860Z", "url": "https://files.pythonhosted.org/packages/31/11/e2daffc46ade31112efec90dafcc6e1b3aa25baa8128361fd9d64fdc921a/minipyp-0.1.0a2.tar.gz", "yanked": false}], "0.1.0b1": [{"comment_text": "", "digests": {"md5": "8c18e4960cb33c7dd0d93de644377161", "sha256": "1bcb10bf040230567725d8f9230501d956d7a77bf68abc17e3a4c595dd436f53"}, "downloads": -1, "filename": "minipyp-0.1.0b1.tar.gz", "has_sig": false, "md5_digest": "8c18e4960cb33c7dd0d93de644377161", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8104, "upload_time": "2018-01-25T05:48:47", "upload_time_iso_8601": "2018-01-25T05:48:47.000438Z", "url": "https://files.pythonhosted.org/packages/98/a6/a3092461d9b702700b118ed498f55914938236015ae5896dd2ca37e8fecb/minipyp-0.1.0b1.tar.gz", "yanked": false}], "0.2.0a1": [{"comment_text": "", "digests": {"md5": "1c2a818c2c3d99556cf9daaa5a235a33", "sha256": "174bf40889157d740a8c33fcba6c7c1c47cc45e9d952ba3d7530ad7ca32cd20f"}, "downloads": -1, "filename": "minipyp-0.2.0a1.tar.gz", "has_sig": false, "md5_digest": "1c2a818c2c3d99556cf9daaa5a235a33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20495, "upload_time": "2018-02-04T07:34:44", "upload_time_iso_8601": "2018-02-04T07:34:44.394775Z", "url": "https://files.pythonhosted.org/packages/18/1c/2d4b8d45b9871aa196f23bc6617fd489e9c8002806c042715829f424d1f0/minipyp-0.2.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1c2a818c2c3d99556cf9daaa5a235a33", "sha256": "174bf40889157d740a8c33fcba6c7c1c47cc45e9d952ba3d7530ad7ca32cd20f"}, "downloads": -1, "filename": "minipyp-0.2.0a1.tar.gz", "has_sig": false, "md5_digest": "1c2a818c2c3d99556cf9daaa5a235a33", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20495, "upload_time": "2018-02-04T07:34:44", "upload_time_iso_8601": "2018-02-04T07:34:44.394775Z", "url": "https://files.pythonhosted.org/packages/18/1c/2d4b8d45b9871aa196f23bc6617fd489e9c8002806c042715829f424d1f0/minipyp-0.2.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:20 2020"}