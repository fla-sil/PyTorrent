{"info": {"author": "Softbank Robotics Europe", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Mozilla Public License 2.0 (MPL 2.0)", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# lib-python-astr\n\n[![PyPI version](https://badge.fury.io/py/libastr.svg)](https://badge.fury.io/py/libastr)\n[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)\n\nThis Source Code Form is subject to the terms of the Mozilla Public\nLicense, v. 2.0. If a copy of the MPL was not distributed with this\nfile, You can obtain one at http://mozilla.org/MPL/2.0/.\n\n### Purpose\n\nLibastr is a **Python3** library designed to ease python scripting with \nthe API of A.S.T.R. (Archiving System Truly RESTful). \nIt includes multiple features like browsing, downloading and uploading archives.\n\n### Installation\n\n1. Git clone the repository.\n\n2. Install the library with pip. It is advised to use \n  [virtualenv](http://virtualenvwrapper.readthedocs.io/en/latest/):\n      ```\n      pip install lib-python-astr\n      ```\n\n### Configuration\n\nTo communicate with the ASTR server, three parameters must be given to the\nan instance of the class `AstrClient`:\n  * base_url: ASTR instance base url (e.g. http://my-astr-server:8000)\n  * email: a user email\n  * token: a token of this user (to be generated on the website)\n\n```python\nfrom libastr import AstrClient\nclient = AstrClient(base_url, email, token)\n```\n\nOr, to avoid giving all these parameters manually, they can be stored in\nenvironment variables:\n\n```\nexport LIBASTR_URL='http://my-astr-server:8000'\nexport LIBASTR_EMAIL='john.doe@my-email.com'\nexport LIBASTR_TOKEN='b4b71bf6-a3dd-4975-85b8-03de05096fc0'\n```\n\nThen, if you make an instance of `AstrClient` without giving arguments, it\nwill fetch these environment variables by default.\n\n### Basic usage\n\n```python\nfrom libastr import Browser\n\n# If you use environment variables to connect to the server...\nbrowser = Browser()\n# Or if yo use custom variables...\nfrom libastr import AstrClient\nclient = AstrClient(base_url, email, token)\nbrowser = Browser(client)\n\n# Retrieve some archives\nmy_archives = browser.get_archives_by_args(\n                               author=\"John DOE\",\n                               category=\"MY CATEGORY\",\n                               descriptors={\"my_desc\": \"MY VALUE\"})\n\n# download an archive\nmy_archives[0].download(local_path=\"/home/john.doe/Documents/\")\n\n# Retrieve all categories\ncat = browser.get_all_archive_categories()\n\n# Get descriptors of one category\ncat[0].get_descriptors()\n```\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/aldebaran/lib-python-astr", "keywords": "", "license": "MPL-2.0", "maintainer": "", "maintainer_email": "", "name": "libastr", "package_url": "https://pypi.org/project/libastr/", "platform": "", "project_url": "https://pypi.org/project/libastr/", "project_urls": {"Homepage": "https://github.com/aldebaran/lib-python-astr"}, "release_url": "https://pypi.org/project/libastr/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "A Python library to interact with ASTR servers.", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            # lib-python-astr<br><br>[![PyPI version](https://badge.fury.io/py/libastr.svg)](https://badge.fury.io/py/libastr)<br>[![License: MPL 2.0](https://img.shields.io/badge/License-MPL%202.0-brightgreen.svg)](https://opensource.org/licenses/MPL-2.0)<br><br>This Source Code Form is subject to the terms of the Mozilla Public<br>License, v. 2.0. If a copy of the MPL was not distributed with this<br>file, You can obtain one at http://mozilla.org/MPL/2.0/.<br><br>### Purpose<br><br>Libastr is a **Python3** library designed to ease python scripting with <br>the API of A.S.T.R. (Archiving System Truly RESTful). <br>It includes multiple features like browsing, downloading and uploading archives.<br><br>### Installation<br><br>1. Git clone the repository.<br><br>2. Install the library with pip. It is advised to use <br>  [virtualenv](http://virtualenvwrapper.readthedocs.io/en/latest/):<br>      ```<br>      pip install lib-python-astr<br>      ```<br><br>### Configuration<br><br>To communicate with the ASTR server, three parameters must be given to the<br>an instance of the class `AstrClient`:<br>  * base_url: ASTR instance base url (e.g. http://my-astr-server:8000)<br>  * email: a user email<br>  * token: a token of this user (to be generated on the website)<br><br>```python<br>from libastr import AstrClient<br>client = AstrClient(base_url, email, token)<br>```<br><br>Or, to avoid giving all these parameters manually, they can be stored in<br>environment variables:<br><br>```<br>export LIBASTR_URL='http://my-astr-server:8000'<br>export LIBASTR_EMAIL='john.doe@my-email.com'<br>export LIBASTR_TOKEN='b4b71bf6-a3dd-4975-85b8-03de05096fc0'<br>```<br><br>Then, if you make an instance of `AstrClient` without giving arguments, it<br>will fetch these environment variables by default.<br><br>### Basic usage<br><br>```python<br>from libastr import Browser<br><br># If you use environment variables to connect to the server...<br>browser = Browser()<br># Or if yo use custom variables...<br>from libastr import AstrClient<br>client = AstrClient(base_url, email, token)<br>browser = Browser(client)<br><br># Retrieve some archives<br>my_archives = browser.get_archives_by_args(<br>                               author=\"John DOE\",<br>                               category=\"MY CATEGORY\",<br>                               descriptors={\"my_desc\": \"MY VALUE\"})<br><br># download an archive<br>my_archives[0].download(local_path=\"/home/john.doe/Documents/\")<br><br># Retrieve all categories<br>cat = browser.get_all_archive_categories()<br><br># Get descriptors of one category<br>cat[0].get_descriptors()<br>```<br><br><br>\n          </div>"}, "last_serial": 4382164, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "5e230f3f2fe787749c785c30184bb4aa", "sha256": "502a18d7681705ff8a86e45cec65f71ed6d2c989dc7a3c689039b3d4826f958c"}, "downloads": -1, "filename": "libastr-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5e230f3f2fe787749c785c30184bb4aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9980, "upload_time": "2018-09-10T16:04:50", "upload_time_iso_8601": "2018-09-10T16:04:50.021180Z", "url": "https://files.pythonhosted.org/packages/f1/a2/30f12f5195b6bf421b791e70bb5578ba5a711d32ee2cae7b91cc0c91ff66/libastr-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "95fd879a406f2a5fa5fec486d20ccd3b", "sha256": "d70afd775147384eeae2a5b8c3ced2a31786c76f4974266d5689283e93f63329"}, "downloads": -1, "filename": "libastr-1.0.1.tar.gz", "has_sig": false, "md5_digest": "95fd879a406f2a5fa5fec486d20ccd3b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7896, "upload_time": "2018-09-10T16:04:51", "upload_time_iso_8601": "2018-09-10T16:04:51.373369Z", "url": "https://files.pythonhosted.org/packages/a9/6d/3426856c89d2ac1554e868475ea9dd4f5bd46c42b9e885dab73abeff1f10/libastr-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2efbaab83a6c03f1ef80941c6578e782", "sha256": "adcb80d352f0d765acb74941f6f9e7879ffefaede2b4e7fc087b2239b07b156f"}, "downloads": -1, "filename": "libastr-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2efbaab83a6c03f1ef80941c6578e782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10570, "upload_time": "2018-10-16T15:34:53", "upload_time_iso_8601": "2018-10-16T15:34:53.986985Z", "url": "https://files.pythonhosted.org/packages/57/b0/b578bae3b0c8c6c8bf4f355d36ef100e90f5abfbb98e976cb34cd174d914/libastr-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ed91857e0020cca4640d1187d0fe892", "sha256": "458331c0ba7f50cb4bcf52a1f12553d3c6f085ad35cfed43b070605b8b51a328"}, "downloads": -1, "filename": "libastr-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7ed91857e0020cca4640d1187d0fe892", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8481, "upload_time": "2018-10-16T15:34:55", "upload_time_iso_8601": "2018-10-16T15:34:55.301021Z", "url": "https://files.pythonhosted.org/packages/7e/6b/374fef3dbf453dcd69fcc068f35ef5e6365027eb22b3c27d25568fa17148/libastr-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2efbaab83a6c03f1ef80941c6578e782", "sha256": "adcb80d352f0d765acb74941f6f9e7879ffefaede2b4e7fc087b2239b07b156f"}, "downloads": -1, "filename": "libastr-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2efbaab83a6c03f1ef80941c6578e782", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10570, "upload_time": "2018-10-16T15:34:53", "upload_time_iso_8601": "2018-10-16T15:34:53.986985Z", "url": "https://files.pythonhosted.org/packages/57/b0/b578bae3b0c8c6c8bf4f355d36ef100e90f5abfbb98e976cb34cd174d914/libastr-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ed91857e0020cca4640d1187d0fe892", "sha256": "458331c0ba7f50cb4bcf52a1f12553d3c6f085ad35cfed43b070605b8b51a328"}, "downloads": -1, "filename": "libastr-1.1.0.tar.gz", "has_sig": false, "md5_digest": "7ed91857e0020cca4640d1187d0fe892", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8481, "upload_time": "2018-10-16T15:34:55", "upload_time_iso_8601": "2018-10-16T15:34:55.301021Z", "url": "https://files.pythonhosted.org/packages/7e/6b/374fef3dbf453dcd69fcc068f35ef5e6365027eb22b3c27d25568fa17148/libastr-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:41 2020"}