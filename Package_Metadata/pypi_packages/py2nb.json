{"info": {"author": "Will Handley", "author_email": "wh260@cam.ac.uk", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6"], "description": "==================================================\npy2nb: convert python scripts to jupyter notebooks\n==================================================\n:py2nb: convert python scripts to jupyter notebooks\n:Author: Will Handley\n:Version: 1.0.0\n:Homepage: https://github.com/williamjameshandley/py2nb\n\n.. image:: https://badge.fury.io/py/py2nb.svg\n   :target: https://badge.fury.io/py/py2nb\n   :alt: PyPi location\n\nDescription\n===========\n\n``py2nb`` is a python package for converting python scripts with minimal\nmarkdown to jupyter notebooks.\n\nMarkdown cells are rendered from comments beginning with ``#|``, splits between\ncode cells are created by comment lines beginning with ``#-``\n\n``nb2py`` converts from jupyter notebooks to python\n\nInstallation\n============\n\nUsers can install using pip:\n\n.. code:: bash\n\n   pip install py2nb\n\nfrom source:\n\n.. code:: bash\n\n   git clone https://github.com/williamjameshandley/py2nb\n   cd py2nb\n   python setup.py install\n\nor for those on `Arch linux <https://www.archlinux.org/>`__ it is\navailable on the\n`AUR <https://aur.archlinux.org/packages/python-py2nb/>`__\n\nExample\n=======\n\nIf one has a script named ``example.py`` containing the code:\n\n.. code:: python\n\n    #| # Testing ipython notebook\n    #| This is designed to demonstrate a simple script that converts a script into\n    #| a jupyter notebook with a simple additional markdown format.\n    #|\n    #| Code by default will be put into code cells\n    #|\n    #| * To make a markdown cell, prefix the comment line with with '#|' or '# |'\n    #| * To split a code cell, add a line beginning with '#-' or '# -'\n\n    import matplotlib.pyplot as plt\n    import numpy\n\n    %matplotlib inline\n\n    #| Here is a markdown cell.\n    #| Maths is also possible: $A=B$\n    #|\n    #| There are code cells below, split by `'#-'`:\n\n    # | Here is another markdown cell\n\n    x = numpy.random.rand(5)\n\n    #-------------------------------\n\n    y = numpy.random.rand(4)\n    z = numpy.random.rand(3)\n\n    #| Here are some plots\n\n    x = numpy.linspace(-2,2,1000)\n    y = x**3\n    fig, ax = plt.subplots()\n    ax.plot(x,y)\n\n    # -------------------------------\n\n    # | Here is another plot\n\n    x = np.linspace(-np.pi, np.pi, 201)\n    fig, ax = plt.subplots()\n    ax.plot(x,np.sin(x))\n\n\nthen running\n\n.. code :: bash\n\n   py2nb example.py\n\nproduces the notebook `example.ipynb <https://github.com/williamjameshandley/py2nb/blob/master/example.ipynb>`_\n\nTo do\n=====\n- evaluation option for script produced\n- vim syntax highlighting for markdown code blocks\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/williamjameshandley/py2nb", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "py2nb", "package_url": "https://pypi.org/project/py2nb/", "platform": "", "project_url": "https://pypi.org/project/py2nb/", "project_urls": {"Homepage": "https://github.com/williamjameshandley/py2nb"}, "release_url": "https://pypi.org/project/py2nb/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "py2nb: convert python scripts to jupyter notebooks", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>py2nb:</th><td>convert python scripts to jupyter notebooks</td>\n</tr>\n<tr><th>Author:</th>\n<td>Will Handley</td></tr>\n<tr><th>Version:</th>\n<td>1.0.0</td></tr>\n<tr><th>Homepage:</th><td><a href=\"https://github.com/williamjameshandley/py2nb\" rel=\"nofollow\">https://github.com/williamjameshandley/py2nb</a></td>\n</tr>\n</tbody>\n</table>\n<a href=\"https://badge.fury.io/py/py2nb\" rel=\"nofollow\"><img alt=\"PyPi location\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/15ad4584ae5e9d6857dff337745c2f485246be63/68747470733a2f2f62616467652e667572792e696f2f70792f7079326e622e737667\"></a>\n<div id=\"description\">\n<h2>Description</h2>\n<p><tt>py2nb</tt> is a python package for converting python scripts with minimal\nmarkdown to jupyter notebooks.</p>\n<p>Markdown cells are rendered from comments beginning with <tt>#|</tt>, splits between\ncode cells are created by comment lines beginning with <tt>#-</tt></p>\n<p><tt>nb2py</tt> converts from jupyter notebooks to python</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Users can install using pip:</p>\n<pre>pip install py2nb\n</pre>\n<p>from source:</p>\n<pre>git clone https://github.com/williamjameshandley/py2nb\n<span class=\"nb\">cd</span> py2nb\npython setup.py install\n</pre>\n<p>or for those on <a href=\"https://www.archlinux.org/\" rel=\"nofollow\">Arch linux</a> it is\navailable on the\n<a href=\"https://aur.archlinux.org/packages/python-py2nb/\" rel=\"nofollow\">AUR</a></p>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>If one has a script named <tt>example.py</tt> containing the code:</p>\n<pre><span class=\"c1\">#| # Testing ipython notebook</span>\n<span class=\"c1\">#| This is designed to demonstrate a simple script that converts a script into</span>\n<span class=\"c1\">#| a jupyter notebook with a simple additional markdown format.</span>\n<span class=\"c1\">#|</span>\n<span class=\"c1\">#| Code by default will be put into code cells</span>\n<span class=\"c1\">#|</span>\n<span class=\"c1\">#| * To make a markdown cell, prefix the comment line with with '#|' or '# |'</span>\n<span class=\"c1\">#| * To split a code cell, add a line beginning with '#-' or '# -'</span>\n\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span>\n\n<span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n\n<span class=\"c1\">#| Here is a markdown cell.</span>\n<span class=\"c1\">#| Maths is also possible: $A=B$</span>\n<span class=\"c1\">#|</span>\n<span class=\"c1\">#| There are code cells below, split by `'#-'`:</span>\n\n<span class=\"c1\"># | Here is another markdown cell</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#-------------------------------</span>\n\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">random</span><span class=\"o\">.</span><span class=\"n\">rand</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n\n<span class=\"c1\">#| Here are some plots</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">numpy</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">x</span><span class=\"o\">**</span><span class=\"mi\">3</span>\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">y</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># -------------------------------</span>\n\n<span class=\"c1\"># | Here is another plot</span>\n\n<span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mi\">201</span><span class=\"p\">)</span>\n<span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">))</span>\n</pre>\n<p>then running</p>\n<pre>py2nb example.py\n</pre>\n<p>produces the notebook <a href=\"https://github.com/williamjameshandley/py2nb/blob/master/example.ipynb\" rel=\"nofollow\">example.ipynb</a></p>\n</div>\n<div id=\"to-do\">\n<h2>To do</h2>\n<ul>\n<li>evaluation option for script produced</li>\n<li>vim syntax highlighting for markdown code blocks</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6542352, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "83b9f3ad3552b66b6f160dd98f30bcb1", "sha256": "55d8f4617e10eb5328ec0d95fe8b7b5cd44039b1b4497a338e62e6ad07118500"}, "downloads": -1, "filename": "py2nb-0.0.0.tar.gz", "has_sig": false, "md5_digest": "83b9f3ad3552b66b6f160dd98f30bcb1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2577, "upload_time": "2018-11-05T07:10:27", "upload_time_iso_8601": "2018-11-05T07:10:27.452164Z", "url": "https://files.pythonhosted.org/packages/b2/48/926cc023520dce7fe9e7a8124aa162c564a384db5a85987be4a13f2f4d26/py2nb-0.0.0.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "eee12683c48d12294e9b2e2c2fbc0d1a", "sha256": "e03f5cb58e10f356cfb65d569699b3bb74b6e3a690d9eaceafe3050b1a6344ff"}, "downloads": -1, "filename": "py2nb-0.0.2.tar.gz", "has_sig": false, "md5_digest": "eee12683c48d12294e9b2e2c2fbc0d1a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2855, "upload_time": "2018-11-05T07:30:42", "upload_time_iso_8601": "2018-11-05T07:30:42.870594Z", "url": "https://files.pythonhosted.org/packages/cc/15/d5338c3a3978f8a533b5c685d6e20a358b48b22a13b242948755d1ba69e0/py2nb-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5aa32cb16504e3000361d33222cbc480", "sha256": "cf8bf4bc02d683ccc7ef8f75f8ad19d6a2684c8f4c59c489004fdea40081618f"}, "downloads": -1, "filename": "py2nb-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5aa32cb16504e3000361d33222cbc480", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3012, "upload_time": "2018-11-05T08:47:39", "upload_time_iso_8601": "2018-11-05T08:47:39.232285Z", "url": "https://files.pythonhosted.org/packages/8b/ff/f44682cc8a928db1a3380324c8f7d2e48f2094add2d6bd9a6fb204e7e0f1/py2nb-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "b4918c9850a7122e3a061cf9bd4908db", "sha256": "9b081142cc9e51fc2f741e698d28b4d5eaad79ba69af252b53454236db828b0e"}, "downloads": -1, "filename": "py2nb-0.0.4.tar.gz", "has_sig": false, "md5_digest": "b4918c9850a7122e3a061cf9bd4908db", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3289, "upload_time": "2018-11-05T19:27:08", "upload_time_iso_8601": "2018-11-05T19:27:08.657868Z", "url": "https://files.pythonhosted.org/packages/82/33/81862f5aacdee7b3dfeb44818ba146f87667098d85693de209cb0df22d39/py2nb-0.0.4.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "773e758c9640d2ed3e06a0a8f715e860", "sha256": "d250d734407d635288d38b8fd5ab434b9caa38047258fb4a567bd4feeb3248c9"}, "downloads": -1, "filename": "py2nb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "773e758c9640d2ed3e06a0a8f715e860", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3734, "upload_time": "2020-01-30T09:30:39", "upload_time_iso_8601": "2020-01-30T09:30:39.484783Z", "url": "https://files.pythonhosted.org/packages/a9/72/a2e63be57d6c16775105dfd17bd4054775bd64326851d1731e3bbd66907a/py2nb-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "773e758c9640d2ed3e06a0a8f715e860", "sha256": "d250d734407d635288d38b8fd5ab434b9caa38047258fb4a567bd4feeb3248c9"}, "downloads": -1, "filename": "py2nb-1.0.0.tar.gz", "has_sig": false, "md5_digest": "773e758c9640d2ed3e06a0a8f715e860", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3734, "upload_time": "2020-01-30T09:30:39", "upload_time_iso_8601": "2020-01-30T09:30:39.484783Z", "url": "https://files.pythonhosted.org/packages/a9/72/a2e63be57d6c16775105dfd17bd4054775bd64326851d1731e3bbd66907a/py2nb-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:12:31 2020"}