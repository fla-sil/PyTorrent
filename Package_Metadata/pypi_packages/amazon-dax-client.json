{"info": {"author": "Amazon Web Services", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "============================\nAmazon DAX Client for Python\n============================\n\nThe Amazon DAX Client for Python is used to access `Amazon DAX`_ clusters from\nPython. It is nearly source-compatible with Boto3, with only a small change\nneeded to the client initialization to use DAX instead of DynamoDB.\n\n.. _`Amazon DAX`: https://aws.amazon.com/dynamodb/dax/\n\nInstallation\n------------\nInstall Amazon DAX Client using pip:\n\n.. code-block:: sh\n\n    $ pip install amazon-dax-client\n\nQuick Start\n-----------\nBoto3 has two different interfaces, the *resource interface* and the botocore\n*client interface*. Both are supported by the Amazon DAX client, with slightly\ndifferent client initialization.\n\nFor the resource API, change from:\n\n.. code-block:: python\n\n    ddb = boto3.resource('dynamodb')\n\nto\n\n.. code-block:: python\n\n    dax = AmazonDaxClient.resource(\n        endpoint_url='dax.abcdef.us-east-1.amazon.com')\n\nAll other ``boto3.resource()`` arguments are accepted.\n\nFor the botocore client API, change from:\n\n.. code-block:: python\n\n    session = botocore.session.get_session()\n    ddb = session.create_client('dynamodb', ...)\n\nto\n\n.. code-block:: python\n\n    session = botocore.session.get_session()\n    dax = AmazonDaxClient(session, ...)\n\nFor Boto3 client API, change from:\n\n.. code-block:: python\n\n    ddb = boto3.client('dynamodb')\n\nto\n\n.. code-block:: python\n\n    dax = AmazonDaxClient(endpoint_url='dax.abcdef.us-east-1.amazon.com')\n\nThe Boto3 and botocore client APIs are exactly the same.\n\nUnsupported Features\n--------------------\nThe Amazon DAX client does not support table operations. Any table manipulation\noperations must use the regular Boto3 or botocore DynamoDB client.\n\nPaginators are not currently supported for DAX.\n\nDocumentation\n-------------\nOnce created, the interface is the same as the Boto3/botocore DynamoDB clients.\n\n* `Boto3 DynamoDB resource API <http://boto3.readthedocs.io/en/latest/reference/services/dynamodb.html>`__\n* `botocore DynamoDB client API <http://botocore.readthedocs.io/en/latest/reference/services/dynamodb.html>`__\n\n\nFor acomplete example, follow the guide to `create a sample app`_.\n\n.. _`create a sample app`: https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.client.sample-app.html\n\nGetting Help\n------------\nPlease use these community resources for getting help.\n\n* Ask a question on `StackOverflow <https://stackoverflow.com/>`__ and tag it with `amazon-dynamodb-dax <https://stackoverflow.com/questions/tagged/amazon-dynamodb-dax>`__\n* Ask a question on `the AWS DynamoDB forum <https://forums.aws.amazon.com/forum.jspa?forumID=131&start=0>`__\n* Open a support ticket with `AWS Support <https://console.aws.amazon.com/support/home#/>`__\n\n\nChanges\n-------\n**v1.1.7**\n\n* Minor bug fixes\n\n**v1.1.6**\n\n* Linting fixes\n* Updated logging to log on Logger objects\n\n**v1.1.5**\n\n* Add jitter and backoff for retryable exceptions\n\n**v1.1.4**\n\n* Fixes bug starting with clusters of less than 3 nodes.\n\n**v1.1.3**\n\n* Fixes and improvements to service discovery logic.\n* Add support for Python 3.8.\n* Fix ``'RetryHandler' object has no attribute '_cluster': AttributeError``\n  problem reported in the AWS Forums.\n* Fix problems found by static analysis.\n\n**v1.1.2**\n\n* Fixes a bug that can result in a failure to update the roster when it\n  changes, which can later result in a ``NoRouteException``.\n\n**v1.1.1**\n\n* Fixes a bug that can result in an infinite loop on node failure.\n* Update TransactWriteItem test item limit to 25.\n\n**v1.1.0**\n\n* Adds support for transact-get-items and transact-write-items APIs for DyanamoDB transactions.\n* Improved efficiency of connection pooling.\n\n**v1.0.7**\n\n* Fix scheduling of background tasks.\n\n**v1.0.6**\n\n* Properly de-anonymize UnprocessedItems results from BatchWrite.\n* Raise a proper error if no backends are available.\n\n**v1.0.5**\n\n* Fix UpdateItem result parsing with a subset of attributes changed\n\n**v1.0.4**\n\n* Use user-specified timeouts\n* Fix issue with update response if the item is not changed\n* Fix error decoding BatchWrite UnprocessedItems.\n\n**v1.0.3**\n\n* Fix AmazonDaxClient.resource() when using batch_get_items or batch_write_items.\n\n**v1.0.2**\n\n* Fix Python 2 encoding issues\n* Fix decoding of ConsumedCapacity, ItemCollectionMetrics in batch operations\n\n**v1.0.1**\n\n* Initial release", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://aws.amazon.com/dynamodb/dax/", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "amazon-dax-client", "package_url": "https://pypi.org/project/amazon-dax-client/", "platform": "", "project_url": "https://pypi.org/project/amazon-dax-client/", "project_urls": {"Homepage": "https://aws.amazon.com/dynamodb/dax/"}, "release_url": "https://pypi.org/project/amazon-dax-client/1.1.7/", "requires_dist": null, "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "summary": "Amazon DAX Client for Python", "version": "1.1.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The Amazon DAX Client for Python is used to access <a href=\"https://aws.amazon.com/dynamodb/dax/\" rel=\"nofollow\">Amazon DAX</a> clusters from\nPython. It is nearly source-compatible with Boto3, with only a small change\nneeded to the client initialization to use DAX instead of DynamoDB.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install Amazon DAX Client using pip:</p>\n<pre>$ pip install amazon-dax-client\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>Boto3 has two different interfaces, the <em>resource interface</em> and the botocore\n<em>client interface</em>. Both are supported by the Amazon DAX client, with slightly\ndifferent client initialization.</p>\n<p>For the resource API, change from:</p>\n<pre><span class=\"n\">ddb</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span><span class=\"s1\">'dynamodb'</span><span class=\"p\">)</span>\n</pre>\n<p>to</p>\n<pre><span class=\"n\">dax</span> <span class=\"o\">=</span> <span class=\"n\">AmazonDaxClient</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"p\">(</span>\n    <span class=\"n\">endpoint_url</span><span class=\"o\">=</span><span class=\"s1\">'dax.abcdef.us-east-1.amazon.com'</span><span class=\"p\">)</span>\n</pre>\n<p>All other <tt>boto3.resource()</tt> arguments are accepted.</p>\n<p>For the botocore client API, change from:</p>\n<pre><span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">botocore</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get_session</span><span class=\"p\">()</span>\n<span class=\"n\">ddb</span> <span class=\"o\">=</span> <span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">create_client</span><span class=\"p\">(</span><span class=\"s1\">'dynamodb'</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<p>to</p>\n<pre><span class=\"n\">session</span> <span class=\"o\">=</span> <span class=\"n\">botocore</span><span class=\"o\">.</span><span class=\"n\">session</span><span class=\"o\">.</span><span class=\"n\">get_session</span><span class=\"p\">()</span>\n<span class=\"n\">dax</span> <span class=\"o\">=</span> <span class=\"n\">AmazonDaxClient</span><span class=\"p\">(</span><span class=\"n\">session</span><span class=\"p\">,</span> <span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n<p>For Boto3 client API, change from:</p>\n<pre><span class=\"n\">ddb</span> <span class=\"o\">=</span> <span class=\"n\">boto3</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"p\">(</span><span class=\"s1\">'dynamodb'</span><span class=\"p\">)</span>\n</pre>\n<p>to</p>\n<pre><span class=\"n\">dax</span> <span class=\"o\">=</span> <span class=\"n\">AmazonDaxClient</span><span class=\"p\">(</span><span class=\"n\">endpoint_url</span><span class=\"o\">=</span><span class=\"s1\">'dax.abcdef.us-east-1.amazon.com'</span><span class=\"p\">)</span>\n</pre>\n<p>The Boto3 and botocore client APIs are exactly the same.</p>\n</div>\n<div id=\"unsupported-features\">\n<h2>Unsupported Features</h2>\n<p>The Amazon DAX client does not support table operations. Any table manipulation\noperations must use the regular Boto3 or botocore DynamoDB client.</p>\n<p>Paginators are not currently supported for DAX.</p>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>Once created, the interface is the same as the Boto3/botocore DynamoDB clients.</p>\n<ul>\n<li><a href=\"http://boto3.readthedocs.io/en/latest/reference/services/dynamodb.html\" rel=\"nofollow\">Boto3 DynamoDB resource API</a></li>\n<li><a href=\"http://botocore.readthedocs.io/en/latest/reference/services/dynamodb.html\" rel=\"nofollow\">botocore DynamoDB client API</a></li>\n</ul>\n<p>For acomplete example, follow the guide to <a href=\"https://docs.aws.amazon.com/amazondynamodb/latest/developerguide/DAX.client.sample-app.html\" rel=\"nofollow\">create a sample app</a>.</p>\n</div>\n<div id=\"getting-help\">\n<h2>Getting Help</h2>\n<p>Please use these community resources for getting help.</p>\n<ul>\n<li>Ask a question on <a href=\"https://stackoverflow.com/\" rel=\"nofollow\">StackOverflow</a> and tag it with <a href=\"https://stackoverflow.com/questions/tagged/amazon-dynamodb-dax\" rel=\"nofollow\">amazon-dynamodb-dax</a></li>\n<li>Ask a question on <a href=\"https://forums.aws.amazon.com/forum.jspa?forumID=131&amp;start=0\" rel=\"nofollow\">the AWS DynamoDB forum</a></li>\n<li>Open a support ticket with <a href=\"https://console.aws.amazon.com/support/home#/\" rel=\"nofollow\">AWS Support</a></li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<p><strong>v1.1.7</strong></p>\n<ul>\n<li>Minor bug fixes</li>\n</ul>\n<p><strong>v1.1.6</strong></p>\n<ul>\n<li>Linting fixes</li>\n<li>Updated logging to log on Logger objects</li>\n</ul>\n<p><strong>v1.1.5</strong></p>\n<ul>\n<li>Add jitter and backoff for retryable exceptions</li>\n</ul>\n<p><strong>v1.1.4</strong></p>\n<ul>\n<li>Fixes bug starting with clusters of less than 3 nodes.</li>\n</ul>\n<p><strong>v1.1.3</strong></p>\n<ul>\n<li>Fixes and improvements to service discovery logic.</li>\n<li>Add support for Python 3.8.</li>\n<li>Fix <tt>'RetryHandler' object has no attribute '_cluster': AttributeError</tt>\nproblem reported in the AWS Forums.</li>\n<li>Fix problems found by static analysis.</li>\n</ul>\n<p><strong>v1.1.2</strong></p>\n<ul>\n<li>Fixes a bug that can result in a failure to update the roster when it\nchanges, which can later result in a <tt>NoRouteException</tt>.</li>\n</ul>\n<p><strong>v1.1.1</strong></p>\n<ul>\n<li>Fixes a bug that can result in an infinite loop on node failure.</li>\n<li>Update TransactWriteItem test item limit to 25.</li>\n</ul>\n<p><strong>v1.1.0</strong></p>\n<ul>\n<li>Adds support for transact-get-items and transact-write-items APIs for DyanamoDB transactions.</li>\n<li>Improved efficiency of connection pooling.</li>\n</ul>\n<p><strong>v1.0.7</strong></p>\n<ul>\n<li>Fix scheduling of background tasks.</li>\n</ul>\n<p><strong>v1.0.6</strong></p>\n<ul>\n<li>Properly de-anonymize UnprocessedItems results from BatchWrite.</li>\n<li>Raise a proper error if no backends are available.</li>\n</ul>\n<p><strong>v1.0.5</strong></p>\n<ul>\n<li>Fix UpdateItem result parsing with a subset of attributes changed</li>\n</ul>\n<p><strong>v1.0.4</strong></p>\n<ul>\n<li>Use user-specified timeouts</li>\n<li>Fix issue with update response if the item is not changed</li>\n<li>Fix error decoding BatchWrite UnprocessedItems.</li>\n</ul>\n<p><strong>v1.0.3</strong></p>\n<ul>\n<li>Fix AmazonDaxClient.resource() when using batch_get_items or batch_write_items.</li>\n</ul>\n<p><strong>v1.0.2</strong></p>\n<ul>\n<li>Fix Python 2 encoding issues</li>\n<li>Fix decoding of ConsumedCapacity, ItemCollectionMetrics in batch operations</li>\n</ul>\n<p><strong>v1.0.1</strong></p>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6916908, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "7591ac8b955dcf4504b3d775b93a25a7", "sha256": "7cd1ada353c9bb05b48dd00054e66b870aa7578ab7714539931d63af0901a028"}, "downloads": -1, "filename": "amazon-dax-client-1.0.1.tar.gz", "has_sig": false, "md5_digest": "7591ac8b955dcf4504b3d775b93a25a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83332, "upload_time": "2018-02-13T17:55:54", "upload_time_iso_8601": "2018-02-13T17:55:54.927966Z", "url": "https://files.pythonhosted.org/packages/4c/20/f3284a43894f6843376f7f12f33734e0c8d3248cce8de8e87c6e7e712e63/amazon-dax-client-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "85009818180b9859e8dc1fc980f79a89", "sha256": "32708dfc3b5ca1e33c65315cef81cb70f04c35567c3415403b81995f6bbec96b"}, "downloads": -1, "filename": "amazon_dax_client-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "85009818180b9859e8dc1fc980f79a89", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 103077, "upload_time": "2018-03-20T18:01:13", "upload_time_iso_8601": "2018-03-20T18:01:13.516551Z", "url": "https://files.pythonhosted.org/packages/63/04/2dcb0583093c326e3ae76a232635d0c978d3ed3beaf37591d9de72b4279a/amazon_dax_client-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "12842d7e928e03958ebc2efa3a925271", "sha256": "39b6202a0659102c562ec99f60ff12a6aa9e3c2debada5621f942c2e405da9f4"}, "downloads": -1, "filename": "amazon-dax-client-1.0.2.tar.gz", "has_sig": false, "md5_digest": "12842d7e928e03958ebc2efa3a925271", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83675, "upload_time": "2018-03-20T18:01:15", "upload_time_iso_8601": "2018-03-20T18:01:15.539389Z", "url": "https://files.pythonhosted.org/packages/18/06/79a1b0fb9ef8d1c836551879142d91face80d4d5501136bd7b44d2b748f5/amazon-dax-client-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "ab6305007113fadc24b5c6e4ed35ff84", "sha256": "09d21d121ccf76354d1d5dc79d67367e2d3095c1794d0e22e08d4c85b10ce378"}, "downloads": -1, "filename": "amazon-dax-client-1.0.3.tar.gz", "has_sig": false, "md5_digest": "ab6305007113fadc24b5c6e4ed35ff84", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 84711, "upload_time": "2018-04-12T18:49:06", "upload_time_iso_8601": "2018-04-12T18:49:06.942683Z", "url": "https://files.pythonhosted.org/packages/d5/aa/0793bf09a9b4b45ef6611ac9262bb62f85e2a5042ff40e2c5849966f9dd7/amazon-dax-client-1.0.3.tar.gz", "yanked": false}], "1.0.4": [{"comment_text": "", "digests": {"md5": "429e1541c0cfffe99dbec9eaa575a3fc", "sha256": "485589917163cbfefb11e070156394bc8b84cf5aa799700da02438588f60c18b"}, "downloads": -1, "filename": "amazon-dax-client-1.0.4.tar.gz", "has_sig": false, "md5_digest": "429e1541c0cfffe99dbec9eaa575a3fc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 84786, "upload_time": "2018-05-11T16:52:57", "upload_time_iso_8601": "2018-05-11T16:52:57.376809Z", "url": "https://files.pythonhosted.org/packages/72/a7/52067ed12ce42ed30e767a3d2320373aa2b9a2f43b1cb6949373563e7925/amazon-dax-client-1.0.4.tar.gz", "yanked": false}], "1.0.5": [{"comment_text": "", "digests": {"md5": "208a0e35a3b0c925e2ebed51dee7b21d", "sha256": "e1b3a4d5ba6966307e9444232eec187618bcadc6df2ee434f6d4b43ba44d9602"}, "downloads": -1, "filename": "amazon-dax-client-1.0.5.tar.gz", "has_sig": false, "md5_digest": "208a0e35a3b0c925e2ebed51dee7b21d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 84864, "upload_time": "2018-06-01T17:34:06", "upload_time_iso_8601": "2018-06-01T17:34:06.599407Z", "url": "https://files.pythonhosted.org/packages/1f/b3/a85ed3ace87c28c50e28538dccee167e42e3a27c98e0f930faa419705d3d/amazon-dax-client-1.0.5.tar.gz", "yanked": false}], "1.0.6": [{"comment_text": "", "digests": {"md5": "27b2207e0a862ed1a1d5266cee612ba0", "sha256": "ef9ea62c427cf23e5413611f6ef64c2bb082b9ea7960d53596a00ba1f1e3c502"}, "downloads": -1, "filename": "amazon-dax-client-1.0.6.tar.gz", "has_sig": false, "md5_digest": "27b2207e0a862ed1a1d5266cee612ba0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 85230, "upload_time": "2018-07-19T16:12:32", "upload_time_iso_8601": "2018-07-19T16:12:32.453069Z", "url": "https://files.pythonhosted.org/packages/8d/9f/974d962ecec112a73f6a27471753d43d012d4e58872158379cf701a4614a/amazon-dax-client-1.0.6.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "bc658782c98e3067ecce71039aaea242", "sha256": "1a6d6b294c4f788a9e1e766daf2e07ea8722e552ae9c6302ff19b00b79b14bcb"}, "downloads": -1, "filename": "amazon-dax-client-1.1.0.tar.gz", "has_sig": false, "md5_digest": "bc658782c98e3067ecce71039aaea242", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 91588, "upload_time": "2019-02-14T17:07:10", "upload_time_iso_8601": "2019-02-14T17:07:10.356450Z", "url": "https://files.pythonhosted.org/packages/75/b7/8f1bc2d30079013c6c7a72f2225b90b2493bbaac2ba2cde4e51add1f92f6/amazon-dax-client-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "030f32ae04ff47b3179a5ce25c347336", "sha256": "6362243ac9ade7acf88888dd347040fb8901e90889febeab37146fc73447d18c"}, "downloads": -1, "filename": "amazon-dax-client-1.1.1.tar.gz", "has_sig": false, "md5_digest": "030f32ae04ff47b3179a5ce25c347336", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 92412, "upload_time": "2019-09-12T16:36:27", "upload_time_iso_8601": "2019-09-12T16:36:27.685737Z", "url": "https://files.pythonhosted.org/packages/5f/f3/f39afbc891de5053d42a13aafabbbb7c336634af19563a13b17b30849097/amazon-dax-client-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "119c58f2459ed9bc214451dd16b8ced5", "sha256": "08fe58878fe1e8e8e7657e56065884bd9ecd500f3d89f3d1cfdee4d0937991ba"}, "downloads": -1, "filename": "amazon-dax-client-1.1.2.tar.gz", "has_sig": false, "md5_digest": "119c58f2459ed9bc214451dd16b8ced5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 92556, "upload_time": "2019-09-16T23:40:17", "upload_time_iso_8601": "2019-09-16T23:40:17.347482Z", "url": "https://files.pythonhosted.org/packages/6e/c0/d42a8349dc3941ae4262c524503e3d41ea0033f697df5341268ebb1aa493/amazon-dax-client-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "8f51752c74ca3f060ecc7829b1dada9c", "sha256": "5e095f397df59a31dd9b635a237e162a94861cf01a238ad28a31207c45a1864b"}, "downloads": -1, "filename": "amazon-dax-client-1.1.3.tar.gz", "has_sig": false, "md5_digest": "8f51752c74ca3f060ecc7829b1dada9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 94095, "upload_time": "2019-12-06T00:35:11", "upload_time_iso_8601": "2019-12-06T00:35:11.345739Z", "url": "https://files.pythonhosted.org/packages/3b/0f/4751e68721dd3447cc00cb6e0a88bbab6a44133efc89f7e8b88bd7ef6869/amazon-dax-client-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "dbf675fce32d2f098a7d7230ccf31c9f", "sha256": "ba0c8490d097403b18fb6ef28f74ed8fcd01380ea51775c85ca260067124f0ea"}, "downloads": -1, "filename": "amazon-dax-client-1.1.4.tar.gz", "has_sig": false, "md5_digest": "dbf675fce32d2f098a7d7230ccf31c9f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 94141, "upload_time": "2019-12-11T01:35:50", "upload_time_iso_8601": "2019-12-11T01:35:50.731678Z", "url": "https://files.pythonhosted.org/packages/e7/29/acc05b27121c376b1d4c62798d13b10e731e3a0a18e7fd3dde91ef90c4be/amazon-dax-client-1.1.4.tar.gz", "yanked": false}], "1.1.5": [{"comment_text": "", "digests": {"md5": "3e3e59cf3f9fb9becb2faa423d97a9be", "sha256": "80e31a8a3b9e7b2f25cfbfd1b90c6add2ef9240d312f847895f7988fc093ecd5"}, "downloads": -1, "filename": "amazon-dax-client-1.1.5.tar.gz", "has_sig": false, "md5_digest": "3e3e59cf3f9fb9becb2faa423d97a9be", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 93757, "upload_time": "2020-01-17T17:08:16", "upload_time_iso_8601": "2020-01-17T17:08:16.478629Z", "url": "https://files.pythonhosted.org/packages/6c/9b/0d0a204e2ad48fe3b3209de3c69a39984f5efee6a3b63098df203233946a/amazon-dax-client-1.1.5.tar.gz", "yanked": false}], "1.1.6": [{"comment_text": "", "digests": {"md5": "8fbcf1293628929a38a49a9b30c842bb", "sha256": "3fa9ed3542e8150fffa48f74a6100f7ce17fc8a277ceac8bc00ef09dcc92484c"}, "downloads": -1, "filename": "amazon-dax-client-1.1.6.tar.gz", "has_sig": false, "md5_digest": "8fbcf1293628929a38a49a9b30c842bb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 93870, "upload_time": "2020-02-27T19:28:37", "upload_time_iso_8601": "2020-02-27T19:28:37.958820Z", "url": "https://files.pythonhosted.org/packages/a6/90/f3b9b19aa73802f7358b50b5b9a90a8aa69ac58675ddd4727e9648e4944d/amazon-dax-client-1.1.6.tar.gz", "yanked": false}], "1.1.7": [{"comment_text": "", "digests": {"md5": "27169e6a1f2acc983098936752d91d4e", "sha256": "c04edd83e40d6a1523fc63c5865c4a04cff40d4b892cc17bbbfc206a96ba6e3c"}, "downloads": -1, "filename": "amazon-dax-client-1.1.7.tar.gz", "has_sig": false, "md5_digest": "27169e6a1f2acc983098936752d91d4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 93728, "upload_time": "2020-03-30T23:46:22", "upload_time_iso_8601": "2020-03-30T23:46:22.489010Z", "url": "https://files.pythonhosted.org/packages/86/92/0358c4cb7a8b2298c10505c54a422a622c0b68c979a69521e39482bbd4ad/amazon-dax-client-1.1.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "27169e6a1f2acc983098936752d91d4e", "sha256": "c04edd83e40d6a1523fc63c5865c4a04cff40d4b892cc17bbbfc206a96ba6e3c"}, "downloads": -1, "filename": "amazon-dax-client-1.1.7.tar.gz", "has_sig": false, "md5_digest": "27169e6a1f2acc983098936752d91d4e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7,!=3.0.*,!=3.1.*,!=3.2.*,!=3.3.*,!=3.4.*", "size": 93728, "upload_time": "2020-03-30T23:46:22", "upload_time_iso_8601": "2020-03-30T23:46:22.489010Z", "url": "https://files.pythonhosted.org/packages/86/92/0358c4cb7a8b2298c10505c54a422a622c0b68c979a69521e39482bbd4ad/amazon-dax-client-1.1.7.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:18:24 2020"}