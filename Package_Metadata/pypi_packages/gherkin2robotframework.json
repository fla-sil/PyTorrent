{"info": {"author": "Maurice Koster", "author_email": "maurice@mauricekoster.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# gherkin2robotframework\n\n## Description\n\nThis tool can be used to facilitate the usage of Cucumber feature files in a RobotFramework Test Automation solution.\nAlthough RobotFramework supports BDD style test cases, this support is limited to Given/When/Then keywords. \nFeatures like datatables and docstrings are not supported in RobotFramework.\nThis tool will 'compile' Gherkin feature files into RobotFramework test cases and scaffolding for step definitions \naka User Keywords.\n\n## Usage\n\n### Example feature\n\n```gherkin\nFeature: Examples\n\n  As a tester\n  I want to specify feature files and translate it to RobotFramework\n  So I can use the best of both worlds\n\n  Background:\n    Given some background stuff\n\n  Scenario: Greeter\n    Given a greeter\n    When greeting the following persons:\n      | Name  | Greeting   |\n      | Joe   | Hello      |\n      | Mary  | Hi, there! |\n    Then the wold is a better place\n\n  @tag\n  Scenario Outline: Repetitive stuff\n    A nice description\n    on multiple lines\n    Given a thing with \"<thingy>\"\n    When some action\n    Then this happened: <stuff>\n\n    @A\n    Examples: A\n      Documentation for\n      example A\n      | thingy  | stuff |\n      | AAA     | 123   |\n      | BBB     | 456   |\n\n    @B\n    Examples: B\n      Documentation for example B\n      | thingy  | stuff |\n      | CCC     | 789   |\n      | DDD     | 000   |\n\n```\n\n### First time generation\nAfter creating your feature files you can translate these into RobotFrame test scripts with the following command:\n\n    gherkin2robotframework example.feature\n\n\nTwo files will be generated: *example.robot* containing the test cases and *example_step_definitions.robot* containing \nthe user keywords implement the steps. For the default english gherkins the Given/When/Then will be stripped \nfrom the keyword names.\n\n*example.robot*\n```robotframework\n*** Settings ***\nDocumentation    As a tester\n...      I want to specify feature files and translate it to RobotFramework\n...      So I can use the best of both worlds\nResource    ./examples_step_definitions.robot\nMetadata    Feature    Examples\nMetadata    Generated by    _gherkin2robotframework on 2020-01-31T13:23:34.958405_\n\n*** Test Cases ***\nGreeter\n    Background\n    Given a greeter\n    ${DataTable}=    Create List\n    FOR    ${Name}    ${Greeting}    IN\n    ...    Joe    Hello\n    ...    Mary    Hi, there!\n        ${entry}=    Create Dictionary    Name=${Name}    Greeting=${Greeting}\n        Append To List    ${DataTable}    ${entry}\n    END\n    When greeting the following persons:    @{DataTable}\n    Then the wold is a better place\n\nRepetitive stuff: A\n    [Documentation]    Documentation for\n    ...    example A\n    [Tags]    tag    A\n    [Template]    Scenario Outline Repetitive stuff\n    AAA    123\n    BBB    456\n\nRepetitive stuff: B\n    [Documentation]    Documentation for example B\n    [Tags]    tag    B\n    [Template]    Scenario Outline Repetitive stuff\n    CCC    789\n    DDD    000\n\n\n*** Keywords ***\nBackground\n    Given some background stuff\n\nScenario Outline Repetitive stuff\n    [Documentation]    A nice description\n    ...    on multiple lines\n    [Arguments]    ${thingy}    ${stuff}\n    Background\n    Given a thing with \"${thingy}\"\n    When some action\n    Then this happened: ${stuff}\n\n```\n\n*example_step_definitions.robot*\n```robotframework\n*** Settings ***\nDocumentation    Generated by    _gherkin2robotframework on 2020-01-31T12:14:13.397524_\nLibrary    Collections\n\n*** Keywords ***\nsome background stuff\n    Fail    Keyword \"some background stuff\" Not Implemented Yet\n\na greeter\n    Fail    Keyword \"a greeter\" Not Implemented Yet\n\ngreeting the following persons:\n    [Arguments]    @{DataTable}\n    Fail    Keyword \"greeting the following persons:\" Not Implemented Yet\n\nthe wold is a better place\n    Fail    Keyword \"the wold is a better place\" Not Implemented Yet\n\na thing with \"${thingy}\"\n    Fail    Keyword \"a thing with \"${thingy}\"\" Not Implemented Yet\n\nsome action\n    Fail    Keyword \"some action\" Not Implemented Yet\n\nthis happened: ${stuff}\n    Fail    Keyword \"this happened: ${stuff}\" Not Implemented Yet\n\n```\n\n### Regeneration\n\nIn case your feature file is changed the .robot files needs to be regenerated.\n\n```gherkin\n...\n    Scenario: Greeter\n        Given a greeter\n        When greeting the following persons:\n          | Name  | Greeting   |\n          | Joe   | Hello      |\n          | Mary  | Hi, there! |\n        Then the wold is a better place\n        And the sun will shine                    #  <-- New step\n...\n\n```\n\nThe files can be regenerated with the same command:\n\n    gherkin2robotframework example.feature\n\n\nHowever, only the example.robot file will be generated (overwritten). The step definition will be parsed and \nmissing keywords will be generated to the console. \n\n```\nProcessing gherkin: E:\\GitHubProjects\\gherkin2robotframework\\examples\\examples.feature\n\nMissing keywords for: E:\\GitHubProjects\\gherkin2robotframework\\examples\\examples_step_definitions.robot\n\nthe sun will shine\n    Fail    Keyword \"the sun will shine\" Not Implemented Yet\n\n```\n\n## Limitations and considerations\n\n### Background support\nThe `Background` keyword is generated to implement the background part of the feature file. Each test case will\ninclude this keyword. Using `[Test setup]` will not work for `Scenario Outline` with Examples.\nIn Cucumber the Background is applied to each example and in RobotFramework the `[Test setup]` is only applied to \nthe Test case and *NOT* to each line in the test case with `[Test Template]`.\n\n### Language support\n\n`#language:xx` is supported, but because the gherkin3 dependency is not recently updated on PyPI. \nTherefore some keywords (and aliases) are not included.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mauricekoster/gherkin2robotframework/", "keywords": "gherkin robotframework", "license": "", "maintainer": "", "maintainer_email": "", "name": "gherkin2robotframework", "package_url": "https://pypi.org/project/gherkin2robotframework/", "platform": "", "project_url": "https://pypi.org/project/gherkin2robotframework/", "project_urls": {"Homepage": "https://github.com/mauricekoster/gherkin2robotframework/"}, "release_url": "https://pypi.org/project/gherkin2robotframework/0.3/", "requires_dist": ["gherkin3 (==3.1.2)", "pyyaml"], "requires_python": ">=3.6", "summary": "Translate Gherkin feature files into RobotFramework tests", "version": "0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>gherkin2robotframework</h1>\n<h2>Description</h2>\n<p>This tool can be used to facilitate the usage of Cucumber feature files in a RobotFramework Test Automation solution.\nAlthough RobotFramework supports BDD style test cases, this support is limited to Given/When/Then keywords.\nFeatures like datatables and docstrings are not supported in RobotFramework.\nThis tool will 'compile' Gherkin feature files into RobotFramework test cases and scaffolding for step definitions\naka User Keywords.</p>\n<h2>Usage</h2>\n<h3>Example feature</h3>\n<pre><span class=\"k\">Feature:</span><span class=\"nf\"> Examples</span>\n\n<span class=\"nf\">  As a tester</span>\n<span class=\"nf\">  I want to specify feature files and translate it to RobotFramework</span>\n<span class=\"nf\">  So I can use the best of both worlds</span>\n\n<span class=\"nf\">  </span><span class=\"k\">Background:</span><span class=\"nf\"></span>\n<span class=\"k\">    Given </span><span class=\"nf\">some background stuff</span>\n\n<span class=\"nf\">  </span><span class=\"k\">Scenario:</span><span class=\"nf\"> Greeter</span>\n<span class=\"k\">    Given </span><span class=\"nf\">a greeter</span>\n<span class=\"nf\">    </span><span class=\"k\">When </span><span class=\"nf\">greeting the following persons:</span>\n<span class=\"k\">      |</span><span class=\"s\"> Name</span><span class=\"k\">  |</span><span class=\"s\"> Greeting</span><span class=\"k\">   |</span><span class=\"nf\"></span>\n<span class=\"k\">      |</span><span class=\"s\"> Joe</span><span class=\"k\">   |</span><span class=\"s\"> Hello</span><span class=\"k\">      |</span><span class=\"nf\"></span>\n<span class=\"k\">      |</span><span class=\"s\"> Mary</span><span class=\"k\">  |</span><span class=\"s\"> Hi, there!</span><span class=\"k\"> |</span><span class=\"nf\"></span>\n<span class=\"nf\">    </span><span class=\"k\">Then </span><span class=\"nf\">the wold is a better place</span>\n\n<span class=\"nf\">  </span><span class=\"nt\">@tag</span><span class=\"nf\"></span>\n<span class=\"nf\">  </span><span class=\"k\">Scenario Outline:</span><span class=\"nf\"> Repetitive stuff</span>\n<span class=\"k\">    A </span><span class=\"nf\">nice description</span>\n<span class=\"nf\">    on multiple lines</span>\n<span class=\"nf\">    </span><span class=\"k\">Given </span><span class=\"nf\">a thing with \"</span><span class=\"nv\">&lt;thingy&gt;</span><span class=\"nf\">\"</span>\n<span class=\"nf\">    </span><span class=\"k\">When </span><span class=\"nf\">some action</span>\n<span class=\"nf\">    </span><span class=\"k\">Then </span><span class=\"nf\">this happened: </span><span class=\"nv\">&lt;stuff&gt;</span><span class=\"nf\"></span>\n\n<span class=\"nf\">    </span><span class=\"nt\">@A</span><span class=\"nf\"></span>\n<span class=\"nf\">    </span><span class=\"k\">Examples:</span><span class=\"nf\"> A</span>\n<span class=\"nf\">      Documentation for</span>\n<span class=\"nf\">      example A</span><span class=\"k\"></span>\n<span class=\"k\">      |</span><span class=\"nv\"> thingy</span><span class=\"k\">  |</span><span class=\"nv\"> stuff</span><span class=\"k\"> |</span><span class=\"nf\"></span>\n<span class=\"k\">      |</span><span class=\"s\"> AAA</span><span class=\"k\">     |</span><span class=\"s\"> 123</span><span class=\"k\">   |</span><span class=\"nf\"></span>\n<span class=\"k\">      |</span><span class=\"s\"> BBB</span><span class=\"k\">     |</span><span class=\"s\"> 456</span><span class=\"k\">   |</span>\n\n<span class=\"nf\">    </span><span class=\"nt\">@B</span><span class=\"nf\"></span>\n<span class=\"nf\">    </span><span class=\"k\">Examples:</span><span class=\"nf\"> B</span>\n<span class=\"nf\">      Documentation for example B</span><span class=\"k\"></span>\n<span class=\"k\">      |</span><span class=\"nv\"> thingy</span><span class=\"k\">  |</span><span class=\"nv\"> stuff</span><span class=\"k\"> |</span><span class=\"nf\"></span>\n<span class=\"k\">      |</span><span class=\"s\"> CCC</span><span class=\"k\">     |</span><span class=\"s\"> 789</span><span class=\"k\">   |</span><span class=\"nf\"></span>\n<span class=\"k\">      |</span><span class=\"s\"> DDD</span><span class=\"k\">     |</span><span class=\"s\"> 000</span><span class=\"k\">   |</span>\n</pre>\n<h3>First time generation</h3>\n<p>After creating your feature files you can translate these into RobotFrame test scripts with the following command:</p>\n<pre><code>gherkin2robotframework example.feature\n</code></pre>\n<p>Two files will be generated: <em>example.robot</em> containing the test cases and <em>example_step_definitions.robot</em> containing\nthe user keywords implement the steps. For the default english gherkins the Given/When/Then will be stripped\nfrom the keyword names.</p>\n<p><em>example.robot</em></p>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\"></span>\n<span class=\"kn\">Documentation</span><span class=\"p\">    </span><span class=\"s\">As a tester</span><span class=\"p\"></span>\n<span class=\"p\">...      </span><span class=\"s\">I want to specify feature files and translate it to RobotFramework</span><span class=\"p\"></span>\n<span class=\"p\">...      </span><span class=\"s\">So I can use the best of both worlds</span><span class=\"p\"></span>\n<span class=\"kn\">Resource</span><span class=\"p\">    </span><span class=\"nn\">./examples_step_definitions.robot</span><span class=\"p\"></span>\n<span class=\"kn\">Metadata</span><span class=\"p\">    </span><span class=\"s\">Feature</span><span class=\"p\">    </span><span class=\"s\">Examples</span><span class=\"p\"></span>\n<span class=\"kn\">Metadata</span><span class=\"p\">    </span><span class=\"s\">Generated by</span><span class=\"p\">    </span><span class=\"s\">_gherkin2robotframework on 2020-01-31T13:23:34.958405_</span><span class=\"p\"></span>\n\n<span class=\"gh\">*** Test Cases ***</span><span class=\"p\"></span>\n<span class=\"gu\">Greeter</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Background</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"ge\">Given </span><span class=\"nf\">a greeter</span><span class=\"p\"></span>\n<span class=\"p\">    ${</span><span class=\"nv\">DataTable</span><span class=\"p\">}=    </span><span class=\"nf\">Create List</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">FOR</span><span class=\"p\">    ${</span><span class=\"nv\">Name</span><span class=\"p\">}    ${</span><span class=\"nv\">Greeting</span><span class=\"p\">}    </span><span class=\"s\">IN</span><span class=\"p\"></span>\n<span class=\"p\">    ...    </span><span class=\"s\">Joe</span><span class=\"p\">    </span><span class=\"s\">Hello</span><span class=\"p\"></span>\n<span class=\"p\">    ...    </span><span class=\"s\">Mary</span><span class=\"p\">    </span><span class=\"s\">Hi, there!</span><span class=\"p\"></span>\n<span class=\"p\">        ${</span><span class=\"nv\">entry</span><span class=\"p\">}=    </span><span class=\"nf\">Create Dictionary</span><span class=\"p\">    </span><span class=\"s\">Name=</span><span class=\"p\">${</span><span class=\"nv\">Name</span><span class=\"p\">}    </span><span class=\"s\">Greeting=</span><span class=\"p\">${</span><span class=\"nv\">Greeting</span><span class=\"p\">}</span>\n<span class=\"p\">        </span><span class=\"nf\">Append To List</span><span class=\"p\">    ${</span><span class=\"nv\">DataTable</span><span class=\"p\">}    ${</span><span class=\"nv\">entry</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">END</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"ge\">When </span><span class=\"nf\">greeting the following persons:</span><span class=\"p\">    @{</span><span class=\"nv\">DataTable</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"ge\">Then </span><span class=\"nf\">the wold is a better place</span><span class=\"p\"></span>\n\n<span class=\"gu\">Repetitive stuff: A</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]    </span><span class=\"s\">Documentation for</span><span class=\"p\"></span>\n<span class=\"p\">    ...    </span><span class=\"s\">example A</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Tags</span><span class=\"p\">]    </span><span class=\"s\">tag</span><span class=\"p\">    </span><span class=\"s\">A</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Template</span><span class=\"p\">]    </span><span class=\"nf\">Scenario Outline Repetitive stuff</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"s\">AAA</span><span class=\"p\">    </span><span class=\"s\">123</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"s\">BBB</span><span class=\"p\">    </span><span class=\"s\">456</span><span class=\"p\"></span>\n\n<span class=\"gu\">Repetitive stuff: B</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]    </span><span class=\"s\">Documentation for example B</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Tags</span><span class=\"p\">]    </span><span class=\"s\">tag</span><span class=\"p\">    </span><span class=\"s\">B</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Template</span><span class=\"p\">]    </span><span class=\"nf\">Scenario Outline Repetitive stuff</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"s\">CCC</span><span class=\"p\">    </span><span class=\"s\">789</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"s\">DDD</span><span class=\"p\">    </span><span class=\"s\">000</span><span class=\"p\"></span>\n\n\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\"></span>\n<span class=\"gu\">Background</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"ge\">Given </span><span class=\"nf\">some background stuff</span><span class=\"p\"></span>\n\n<span class=\"gu\">Scenario Outline Repetitive stuff</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]    </span><span class=\"s\">A nice description</span><span class=\"p\"></span>\n<span class=\"p\">    ...    </span><span class=\"s\">on multiple lines</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]    ${</span><span class=\"nv\">thingy</span><span class=\"p\">}    ${</span><span class=\"nv\">stuff</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">Background</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"ge\">Given </span><span class=\"nf\">a thing with \"</span><span class=\"p\">${</span><span class=\"nv\">thingy</span><span class=\"p\">}</span><span class=\"nf\">\"</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"ge\">When </span><span class=\"nf\">some action</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"ge\">Then </span><span class=\"nf\">this happened: </span><span class=\"p\">${</span><span class=\"nv\">stuff</span><span class=\"p\">}</span>\n</pre>\n<p><em>example_step_definitions.robot</em></p>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\"></span>\n<span class=\"kn\">Documentation</span><span class=\"p\">    </span><span class=\"s\">Generated by</span><span class=\"p\">    </span><span class=\"s\">_gherkin2robotframework on 2020-01-31T12:14:13.397524_</span><span class=\"p\"></span>\n<span class=\"kn\">Library</span><span class=\"p\">    </span><span class=\"nn\">Collections</span><span class=\"p\"></span>\n\n<span class=\"gh\">*** Keywords ***</span><span class=\"p\"></span>\n<span class=\"gu\">some background stuff</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"some background stuff\" Not Implemented Yet</span><span class=\"p\"></span>\n\n<span class=\"gu\">a greeter</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"a greeter\" Not Implemented Yet</span><span class=\"p\"></span>\n\n<span class=\"gu\">greeting the following persons:</span><span class=\"p\"></span>\n<span class=\"p\">    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]    @{</span><span class=\"nv\">DataTable</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"greeting the following persons:\" Not Implemented Yet</span><span class=\"p\"></span>\n\n<span class=\"gu\">the wold is a better place</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"the wold is a better place\" Not Implemented Yet</span><span class=\"p\"></span>\n\n<span class=\"gu\">a thing with \"</span><span class=\"p\">${</span><span class=\"nv\">thingy</span><span class=\"p\">}</span><span class=\"gu\">\"</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"a thing with \"</span><span class=\"p\">${</span><span class=\"nv\">thingy</span><span class=\"p\">}</span><span class=\"s\">\"\" Not Implemented Yet</span><span class=\"p\"></span>\n\n<span class=\"gu\">some action</span><span class=\"p\"></span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"some action\" Not Implemented Yet</span><span class=\"p\"></span>\n\n<span class=\"gu\">this happened: </span><span class=\"p\">${</span><span class=\"nv\">stuff</span><span class=\"p\">}</span>\n<span class=\"p\">    </span><span class=\"nf\">Fail</span><span class=\"p\">    </span><span class=\"s\">Keyword \"this happened: </span><span class=\"p\">${</span><span class=\"nv\">stuff</span><span class=\"p\">}</span><span class=\"s\">\" Not Implemented Yet</span><span class=\"p\"></span>\n</pre>\n<h3>Regeneration</h3>\n<p>In case your feature file is changed the .robot files needs to be regenerated.</p>\n<pre><span class=\"nf\">...</span>\n<span class=\"nf\">    </span><span class=\"k\">Scenario:</span><span class=\"nf\"> Greeter</span>\n<span class=\"k\">        Given </span><span class=\"nf\">a greeter</span>\n<span class=\"nf\">        </span><span class=\"k\">When </span><span class=\"nf\">greeting the following persons:</span>\n<span class=\"k\">          |</span><span class=\"s\"> Name</span><span class=\"k\">  |</span><span class=\"s\"> Greeting</span><span class=\"k\">   |</span><span class=\"nf\"></span>\n<span class=\"k\">          |</span><span class=\"s\"> Joe</span><span class=\"k\">   |</span><span class=\"s\"> Hello</span><span class=\"k\">      |</span><span class=\"nf\"></span>\n<span class=\"k\">          |</span><span class=\"s\"> Mary</span><span class=\"k\">  |</span><span class=\"s\"> Hi, there!</span><span class=\"k\"> |</span><span class=\"nf\"></span>\n<span class=\"nf\">        </span><span class=\"k\">Then </span><span class=\"nf\">the wold is a better place</span>\n<span class=\"nf\">        </span><span class=\"k\">And </span><span class=\"nf\">the sun will shine                    #  &lt;-- New step</span>\n<span class=\"nf\">...</span>\n</pre>\n<p>The files can be regenerated with the same command:</p>\n<pre><code>gherkin2robotframework example.feature\n</code></pre>\n<p>However, only the example.robot file will be generated (overwritten). The step definition will be parsed and\nmissing keywords will be generated to the console.</p>\n<pre><code>Processing gherkin: E:\\GitHubProjects\\gherkin2robotframework\\examples\\examples.feature\n\nMissing keywords for: E:\\GitHubProjects\\gherkin2robotframework\\examples\\examples_step_definitions.robot\n\nthe sun will shine\n    Fail    Keyword \"the sun will shine\" Not Implemented Yet\n\n</code></pre>\n<h2>Limitations and considerations</h2>\n<h3>Background support</h3>\n<p>The <code>Background</code> keyword is generated to implement the background part of the feature file. Each test case will\ninclude this keyword. Using <code>[Test setup]</code> will not work for <code>Scenario Outline</code> with Examples.\nIn Cucumber the Background is applied to each example and in RobotFramework the <code>[Test setup]</code> is only applied to\nthe Test case and <em>NOT</em> to each line in the test case with <code>[Test Template]</code>.</p>\n<h3>Language support</h3>\n<p><code>#language:xx</code> is supported, but because the gherkin3 dependency is not recently updated on PyPI.\nTherefore some keywords (and aliases) are not included.</p>\n\n          </div>"}, "last_serial": 6550039, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fb8b1d11cd508bdb942b5c9d40f3cdf8", "sha256": "f759988fa32ca10dd61f4fbc6b77da63e9de52b17e57ce9222a3ec5448cda56c"}, "downloads": -1, "filename": "gherkin2robotframework-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "fb8b1d11cd508bdb942b5c9d40f3cdf8", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7722, "upload_time": "2020-01-16T20:44:16", "upload_time_iso_8601": "2020-01-16T20:44:16.030030Z", "url": "https://files.pythonhosted.org/packages/4c/5d/dbea1ae0d635a7316a9f7d864e4083e585e77bfecf4a27f719201472d307/gherkin2robotframework-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5a60f576fd36cab61ed510d4b2889a58", "sha256": "cb87e926344d66443b44c9115fb862ce8d1c40d21dabd017c8cadb9d99fdf110"}, "downloads": -1, "filename": "gherkin2robotframework-0.1.tar.gz", "has_sig": false, "md5_digest": "5a60f576fd36cab61ed510d4b2889a58", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6018, "upload_time": "2020-01-16T20:44:18", "upload_time_iso_8601": "2020-01-16T20:44:18.463213Z", "url": "https://files.pythonhosted.org/packages/93/dc/6c9cc4e5a925480fe5804b5fb5379903b047e90fb6922e73eb155fbeaef3/gherkin2robotframework-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "b84ae36e7d0b361eb528a03a5c3cee93", "sha256": "aec9aa3ea18380ee5abc5e4755af010815965fac011aff7064b5e9ee57286ab5"}, "downloads": -1, "filename": "gherkin2robotframework-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "b84ae36e7d0b361eb528a03a5c3cee93", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7698, "upload_time": "2020-01-20T18:10:13", "upload_time_iso_8601": "2020-01-20T18:10:13.699724Z", "url": "https://files.pythonhosted.org/packages/72/24/e1b2c8c723677ad61f9ac889a1c74adce447702aa2b2571a534b6eb79ccb/gherkin2robotframework-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d152dc0ed07a28254aa44c333aff91ce", "sha256": "b52305e22be5ec8fc97c21a6cbe40d5aaf7c9cef443a99d944fb02541af4534f"}, "downloads": -1, "filename": "gherkin2robotframework-0.2.tar.gz", "has_sig": false, "md5_digest": "d152dc0ed07a28254aa44c333aff91ce", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 5994, "upload_time": "2020-01-20T18:10:15", "upload_time_iso_8601": "2020-01-20T18:10:15.253212Z", "url": "https://files.pythonhosted.org/packages/11/65/0560fdaf71fe06c6bf23f655524cc7e2959d7932f27b515a98fffa033ade/gherkin2robotframework-0.2.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "91c292908bbadee8db50bbc64cb3adfa", "sha256": "a11e40e7aa1691c3d76e2be5a7dabc8500a810edcf2d25ea70422a7829474d60"}, "downloads": -1, "filename": "gherkin2robotframework-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "91c292908bbadee8db50bbc64cb3adfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9023, "upload_time": "2020-01-31T15:24:08", "upload_time_iso_8601": "2020-01-31T15:24:08.066130Z", "url": "https://files.pythonhosted.org/packages/90/c6/535d2072a22b7cc6d694c42e297c6c5a4ac0521a3c77639405421a3a7d44/gherkin2robotframework-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9bb153317ebb9732b8c8348e42ec420", "sha256": "55a863b2ec97a7a5a1da0669fd89f37bc949d14c77b46c9986943d08cbdf1775"}, "downloads": -1, "filename": "gherkin2robotframework-0.3.tar.gz", "has_sig": false, "md5_digest": "f9bb153317ebb9732b8c8348e42ec420", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8245, "upload_time": "2020-01-31T15:24:09", "upload_time_iso_8601": "2020-01-31T15:24:09.334994Z", "url": "https://files.pythonhosted.org/packages/16/84/02373741ae245d82beb745726da5b5c37c1fec11a93bd44c7a39bb4620ef/gherkin2robotframework-0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "91c292908bbadee8db50bbc64cb3adfa", "sha256": "a11e40e7aa1691c3d76e2be5a7dabc8500a810edcf2d25ea70422a7829474d60"}, "downloads": -1, "filename": "gherkin2robotframework-0.3-py3-none-any.whl", "has_sig": false, "md5_digest": "91c292908bbadee8db50bbc64cb3adfa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 9023, "upload_time": "2020-01-31T15:24:08", "upload_time_iso_8601": "2020-01-31T15:24:08.066130Z", "url": "https://files.pythonhosted.org/packages/90/c6/535d2072a22b7cc6d694c42e297c6c5a4ac0521a3c77639405421a3a7d44/gherkin2robotframework-0.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f9bb153317ebb9732b8c8348e42ec420", "sha256": "55a863b2ec97a7a5a1da0669fd89f37bc949d14c77b46c9986943d08cbdf1775"}, "downloads": -1, "filename": "gherkin2robotframework-0.3.tar.gz", "has_sig": false, "md5_digest": "f9bb153317ebb9732b8c8348e42ec420", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 8245, "upload_time": "2020-01-31T15:24:09", "upload_time_iso_8601": "2020-01-31T15:24:09.334994Z", "url": "https://files.pythonhosted.org/packages/16/84/02373741ae245d82beb745726da5b5c37c1fec11a93bd44c7a39bb4620ef/gherkin2robotframework-0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:33 2020"}