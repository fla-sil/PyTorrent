{"info": {"author": "James E. Blair", "author_email": "corvus@gnu.org", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Information Technology", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)", "Programming Language :: Python", "Topic :: Multimedia :: Graphics :: Presentation"], "description": "Editty\n======\n\nEditty is a terminal-based non-linear editor for terminal recordings.\n\nInstallation\n------------\n\nSource\n~~~~~~\n\nWhen installing from source, it is recommended (but not required) to\ninstall Editty in a virtualenv.  To set one up::\n\n  virtualenv --python=python3 editty-env\n  source editty-env/bin/activate\n\nTo install the latest version from pypi::\n\n  pip install editty\n\nTo install from a git checkout::\n\n  pip install .\n\nIn order to use the dissolve transition, you must run Editty in a\n256-color capable terminal, such as gnome-terminal or xterm.\n\nUsage\n-----\n\nAfter installing Editty, you should be able to run it by invoking\n``editty``.  If you installed it in a virtualenv, you can invoke it\nwithout activating the virtualenv with ``/path/to/editty-venv/bin/editty``.\nwhich you may wish to add to your shell aliases.  Use ``editty\n--help`` to see a list of command line options available.\n\nOnce running, pressing the F1 key will show help text.\n\nEditty can load recordings in the formats produced by the ``script``\nand ``ttyrec`` commands.  It renders output in ``ttyrec`` format.\n\nEditty does not modify the original source files, but rather\nreferences them by path name.  Editty stores the edit decision list in\nits own JSON-based file format (use the ``.edit`` extension).\n\nTo exit, press CTRL-q.\n\nSource\n------\n\nGit repo: http://git.inaugust.com/cgit/editty/\n\nContributing\n------------\n\nTo send your latest commit as a patch, run::\n\n  git send-email --to corvus@gnu.org --annotate -1\n\nOr, if you don't have ``git send-email`` configured, run::\n\n  git format-patch --stdout HEAD~1 > /tmp/editty.patch\n\nAnd send `/tmp/editty.patch` to corvus@gnu.org using your email\nclient.\n\nLicense\n-------\n\nEditty is licensed under the GPLv3 or later.  Please see the COPYING\nfile for details.\n\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "editty", "package_url": "https://pypi.org/project/editty/", "platform": "", "project_url": "https://pypi.org/project/editty/", "project_urls": null, "release_url": "https://pypi.org/project/editty/0.0.1/", "requires_dist": ["pbr (>=1.0.0)", "urwid"], "requires_python": "", "summary": "Terminal-based non-linear editor for terminal recordings", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Editty is a terminal-based non-linear editor for terminal recordings.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<h2 id=\"source\"><span class=\"section-subtitle\">Source</span></h2>\n<p>When installing from source, it is recommended (but not required) to\ninstall Editty in a virtualenv.  To set one up:</p>\n<pre>virtualenv --python=python3 editty-env\nsource editty-env/bin/activate\n</pre>\n<p>To install the latest version from pypi:</p>\n<pre>pip install editty\n</pre>\n<p>To install from a git checkout:</p>\n<pre>pip install .\n</pre>\n<p>In order to use the dissolve transition, you must run Editty in a\n256-color capable terminal, such as gnome-terminal or xterm.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>After installing Editty, you should be able to run it by invoking\n<tt>editty</tt>.  If you installed it in a virtualenv, you can invoke it\nwithout activating the virtualenv with <tt><span class=\"pre\">/path/to/editty-venv/bin/editty</span></tt>.\nwhich you may wish to add to your shell aliases.  Use <tt>editty\n<span class=\"pre\">--help</span></tt> to see a list of command line options available.</p>\n<p>Once running, pressing the F1 key will show help text.</p>\n<p>Editty can load recordings in the formats produced by the <tt>script</tt>\nand <tt>ttyrec</tt> commands.  It renders output in <tt>ttyrec</tt> format.</p>\n<p>Editty does not modify the original source files, but rather\nreferences them by path name.  Editty stores the edit decision list in\nits own JSON-based file format (use the <tt>.edit</tt> extension).</p>\n<p>To exit, press CTRL-q.</p>\n</div>\n<div id=\"id1\">\n<h2>Source</h2>\n<p>Git repo: <a href=\"http://git.inaugust.com/cgit/editty/\" rel=\"nofollow\">http://git.inaugust.com/cgit/editty/</a></p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>To send your latest commit as a patch, run:</p>\n<pre>git send-email --to corvus@gnu.org --annotate -1\n</pre>\n<p>Or, if you don\u2019t have <tt>git <span class=\"pre\">send-email</span></tt> configured, run:</p>\n<pre>git format-patch --stdout HEAD~1 &gt; /tmp/editty.patch\n</pre>\n<p>And send <cite>/tmp/editty.patch</cite> to <a href=\"mailto:corvus%40gnu.org\">corvus<span>@</span>gnu<span>.</span>org</a> using your email\nclient.</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Editty is licensed under the GPLv3 or later.  Please see the COPYING\nfile for details.</p>\n</div>\n\n          </div>"}, "last_serial": 5199982, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "08d856032c765e957fd3e51356ad0e0d", "sha256": "6a96d277e6ea91e76f44507f6325427f3d53e4412d46ca0c8396bd0069112f95"}, "downloads": -1, "filename": "editty-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "08d856032c765e957fd3e51356ad0e0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19269, "upload_time": "2019-04-28T15:48:06", "upload_time_iso_8601": "2019-04-28T15:48:06.513789Z", "url": "https://files.pythonhosted.org/packages/37/f2/df166bb804101a19ac667a392d72961e0b9c7b9013640f746c7cc482b5a1/editty-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e975cc2b2e17c7de87a04f0334999c5d", "sha256": "7bb374baf8ed6b9b2e940dab9e0815e1b8fea7bc29d9f4f8add94d89f4e4f123"}, "downloads": -1, "filename": "editty-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e975cc2b2e17c7de87a04f0334999c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17787, "upload_time": "2019-04-28T15:48:18", "upload_time_iso_8601": "2019-04-28T15:48:18.602782Z", "url": "https://files.pythonhosted.org/packages/26/3b/846317f251062d016f5df602718e655b3f739aa764d25aa163743e1ee2d5/editty-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "08d856032c765e957fd3e51356ad0e0d", "sha256": "6a96d277e6ea91e76f44507f6325427f3d53e4412d46ca0c8396bd0069112f95"}, "downloads": -1, "filename": "editty-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "08d856032c765e957fd3e51356ad0e0d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 19269, "upload_time": "2019-04-28T15:48:06", "upload_time_iso_8601": "2019-04-28T15:48:06.513789Z", "url": "https://files.pythonhosted.org/packages/37/f2/df166bb804101a19ac667a392d72961e0b9c7b9013640f746c7cc482b5a1/editty-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e975cc2b2e17c7de87a04f0334999c5d", "sha256": "7bb374baf8ed6b9b2e940dab9e0815e1b8fea7bc29d9f4f8add94d89f4e4f123"}, "downloads": -1, "filename": "editty-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e975cc2b2e17c7de87a04f0334999c5d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17787, "upload_time": "2019-04-28T15:48:18", "upload_time_iso_8601": "2019-04-28T15:48:18.602782Z", "url": "https://files.pythonhosted.org/packages/26/3b/846317f251062d016f5df602718e655b3f739aa764d25aa163743e1ee2d5/editty-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:47:43 2020"}