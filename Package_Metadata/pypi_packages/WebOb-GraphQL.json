{"info": {"author": "Syrus Akbary", "author_email": "me@syrusakbary.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Software Development :: Libraries"], "description": "WebOb-GraphQL\n=============\n\n|Build Status| |Coverage Status| |PyPI version|\n\nAdds GraphQL support to your WebOb (Pyramid, Pylons, ...) application.\n\nInstallation\n------------\n\nFor instaling WebOb-GraphQL, just run this command in your shell\n\n.. code:: bash\n\n    pip install \"webob-graphql>=1.0.dev\"\n\nUsage\n-----\n\nJust use the ``serve_graphql_request`` function from ``webob_graphql``\n\nPyramid\n~~~~~~~\n\n.. code:: python\n\n    from pyramid.view import view_config\n\n    from webob_graphql import serve_graphql_request\n\n\n    @view_config(\n        route_name='graphql',\n        # The serve_graphql_request method will detect what's the best renderer\n        # to use, so it will do the json render automatically.\n        # In summary, don't use the renderer='json' here :)\n    )\n    def graphql_view(request):\n        return serve_graphql_request(request, schema)\n\n        # Optional, for adding batch query support (used in Apollo-Client)\n        return serve_graphql_request(request, schema, batch_enabled=True)\n\nSupported options\n~~~~~~~~~~~~~~~~~\n\n-  ``schema``: The ``GraphQLSchema`` object that you want the view to\n   execute when it gets a valid request.\n-  ``context``: A value to pass as the ``context`` to the ``graphql()``\n   function.\n-  ``root_value``: The ``root_value`` you want to provide to\n   ``executor.execute``.\n-  ``format_error``: If you want to use a custom error formatter.\n-  ``pretty``: Whether or not you want the response to be pretty printed\n   JSON.\n-  ``executor``: The ``Executor`` that you want to use to execute\n   queries.\n-  ``graphiql_enabled``: If ``True`` (default), may present\n   `GraphiQL <https://github.com/graphql/graphiql>`__ when loaded\n   directly from a browser (a useful tool for debugging and\n   exploration).\n-  ``render_graphiql``: A custom function for rendering GraphiQL (this\n   function should have the arguments ``result`` and ``params``).\n-  ``batch_enabled``: Enable batch support (for using in\n   `Apollo-Client <http://dev.apollodata.com/core/network.html#query-batching>`__\n   or\n   `ReactRelayNetworkLayer <https://github.com/nodkz/react-relay-network-layer>`__)\n\n.. |Build Status| image:: https://travis-ci.org/graphql-python/webob-graphql.svg?branch=master\n   :target: https://travis-ci.org/graphql-python/webob-graphql\n.. |Coverage Status| image:: https://coveralls.io/repos/graphql-python/webob-graphql/badge.svg?branch=master&service=github\n   :target: https://coveralls.io/github/graphql-python/webob-graphql?branch=master\n.. |PyPI version| image:: https://badge.fury.io/py/webob-graphql.svg\n   :target: https://badge.fury.io/py/webob-graphql\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/graphql-python/webob-graphql/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/graphql-python/webob-graphql", "keywords": "api graphql protocol rest webob", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "WebOb-GraphQL", "package_url": "https://pypi.org/project/WebOb-GraphQL/", "platform": "any", "project_url": "https://pypi.org/project/WebOb-GraphQL/", "project_urls": {"Download": "https://github.com/graphql-python/webob-graphql/releases", "Homepage": "https://github.com/graphql-python/webob-graphql"}, "release_url": "https://pypi.org/project/WebOb-GraphQL/1.0/", "requires_dist": null, "requires_python": "", "summary": "Adds GraphQL support to your WebOb (Pyramid/Pylons/...) application", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/graphql-python/webob-graphql\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a9114d6d30f80ab1f33c8d8671dc99b744f576ff/68747470733a2f2f7472617669732d63692e6f72672f6772617068716c2d707974686f6e2f7765626f622d6772617068716c2e7376673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/github/graphql-python/webob-graphql?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d277c42160657438f7cce538ede098fa5123c34a/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6772617068716c2d707974686f6e2f7765626f622d6772617068716c2f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://badge.fury.io/py/webob-graphql\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/88fe2619188910fd881c20597923f4813fefbf10/68747470733a2f2f62616467652e667572792e696f2f70792f7765626f622d6772617068716c2e737667\"></a></p>\n<p>Adds GraphQL support to your WebOb (Pyramid, Pylons, \u2026) application.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>For instaling WebOb-GraphQL, just run this command in your shell</p>\n<pre>pip install <span class=\"s2\">\"webob-graphql&gt;=1.0.dev\"</span>\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Just use the <tt>serve_graphql_request</tt> function from <tt>webob_graphql</tt></p>\n<div id=\"pyramid\">\n<h3>Pyramid</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyramid.view</span> <span class=\"kn\">import</span> <span class=\"n\">view_config</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">webob_graphql</span> <span class=\"kn\">import</span> <span class=\"n\">serve_graphql_request</span>\n\n\n<span class=\"nd\">@view_config</span><span class=\"p\">(</span>\n    <span class=\"n\">route_name</span><span class=\"o\">=</span><span class=\"s1\">'graphql'</span><span class=\"p\">,</span>\n    <span class=\"c1\"># The serve_graphql_request method will detect what's the best renderer</span>\n    <span class=\"c1\"># to use, so it will do the json render automatically.</span>\n    <span class=\"c1\"># In summary, don't use the renderer='json' here :)</span>\n<span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">graphql_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"k\">return</span> <span class=\"n\">serve_graphql_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"p\">)</span>\n\n    <span class=\"c1\"># Optional, for adding batch query support (used in Apollo-Client)</span>\n    <span class=\"k\">return</span> <span class=\"n\">serve_graphql_request</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">,</span> <span class=\"n\">schema</span><span class=\"p\">,</span> <span class=\"n\">batch_enabled</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"supported-options\">\n<h3>Supported options</h3>\n<ul>\n<li><tt>schema</tt>: The <tt>GraphQLSchema</tt> object that you want the view to\nexecute when it gets a valid request.</li>\n<li><tt>context</tt>: A value to pass as the <tt>context</tt> to the <tt>graphql()</tt>\nfunction.</li>\n<li><tt>root_value</tt>: The <tt>root_value</tt> you want to provide to\n<tt>executor.execute</tt>.</li>\n<li><tt>format_error</tt>: If you want to use a custom error formatter.</li>\n<li><tt>pretty</tt>: Whether or not you want the response to be pretty printed\nJSON.</li>\n<li><tt>executor</tt>: The <tt>Executor</tt> that you want to use to execute\nqueries.</li>\n<li><tt>graphiql_enabled</tt>: If <tt>True</tt> (default), may present\n<a href=\"https://github.com/graphql/graphiql\" rel=\"nofollow\">GraphiQL</a> when loaded\ndirectly from a browser (a useful tool for debugging and\nexploration).</li>\n<li><tt>render_graphiql</tt>: A custom function for rendering GraphiQL (this\nfunction should have the arguments <tt>result</tt> and <tt>params</tt>).</li>\n<li><tt>batch_enabled</tt>: Enable batch support (for using in\n<a href=\"http://dev.apollodata.com/core/network.html#query-batching\" rel=\"nofollow\">Apollo-Client</a>\nor\n<a href=\"https://github.com/nodkz/react-relay-network-layer\" rel=\"nofollow\">ReactRelayNetworkLayer</a>)</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6327037, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "4ce46f650d538bd2792da630eeafde50", "sha256": "1e1f117bc923dd32862c61c7058dc2ba3104428d8e8713a1e27f0c4586378161"}, "downloads": -1, "filename": "WebOb-GraphQL-1.0.tar.gz", "has_sig": false, "md5_digest": "4ce46f650d538bd2792da630eeafde50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2017-06-30T02:38:59", "upload_time_iso_8601": "2017-06-30T02:38:59.621039Z", "url": "https://files.pythonhosted.org/packages/a7/79/e40d2c212e5c800716c182173ade1185cdb836dd60a3ab04e2316d8a9375/WebOb-GraphQL-1.0.tar.gz", "yanked": false}], "1.0.dev20170404001": [{"comment_text": "", "digests": {"md5": "ba7f801efa94fdd564a4991b7eb60857", "sha256": "28401d9b88b8d92a999e96efede784e29a8783525cbe478a2fa0c9315884fd82"}, "downloads": -1, "filename": "WebOb-GraphQL-1.0.dev20170404001.tar.gz", "has_sig": false, "md5_digest": "ba7f801efa94fdd564a4991b7eb60857", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7142, "upload_time": "2017-04-05T07:07:07", "upload_time_iso_8601": "2017-04-05T07:07:07.389212Z", "url": "https://files.pythonhosted.org/packages/80/93/b0cf39ff70b61a572cab64e47ebc37b1687d8496f16f2f42cf2616490a81/WebOb-GraphQL-1.0.dev20170404001.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ce46f650d538bd2792da630eeafde50", "sha256": "1e1f117bc923dd32862c61c7058dc2ba3104428d8e8713a1e27f0c4586378161"}, "downloads": -1, "filename": "WebOb-GraphQL-1.0.tar.gz", "has_sig": false, "md5_digest": "4ce46f650d538bd2792da630eeafde50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2017-06-30T02:38:59", "upload_time_iso_8601": "2017-06-30T02:38:59.621039Z", "url": "https://files.pythonhosted.org/packages/a7/79/e40d2c212e5c800716c182173ade1185cdb836dd60a3ab04e2316d8a9375/WebOb-GraphQL-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:58 2020"}