{"info": {"author": "Justin Quick", "author_email": "justquick@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Utilities"], "description": "Django Cross Link Documentation\n===============================\n\n:Authors:\n   Justin Quick <justquick@gmail.com>\n:Version: 0.1\n\n::\n\n    pip install django-xlink==0.1.1\n\nDjango Cross Link takes in particular URLs on an external site and periodically\ncombs through those URLs searching for links back to your site. The cross\nsite links are stored in the database for future use and display\n\nRequirements\n--------------\n\nXLink requires `lxml <http://codespeak.net/lxml/>`_ for HTML parsing::\n\n    pip install lxml\n    \nSetup\n------\n\nAdd ``xlink`` to your ``INSTALLED_APPS`` and run ``./manage.py syncdb``\n\nAdd some queries in the admin so xlink knows which URLs to comb through and which\ndomain (usually your own site's) you want to search for cross linking.\n\nNext run the management command ``./manage.py xlink_search`` which will take the queries\nand populate them with results of cross site links.\n\nI recomend putting the management command in a cronjob every hour or so to make\nthe results appear in real time.\n\n\nTODO\n-----\n\nSpider pages starting at one URL looking for cross site links", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/justquick/django-xlink", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "django-xlink", "package_url": "https://pypi.org/project/django-xlink/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-xlink/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/justquick/django-xlink"}, "release_url": "https://pypi.org/project/django-xlink/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "Django cross link searches particular sites for links back to your site and stores them", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <table>\n<col>\n<col>\n<tbody>\n<tr><th>Authors:</th>\n<td>Justin Quick &lt;justquick@gmail.com&gt;</td></tr>\n<tr><th>Version:</th>\n<td>0.1</td></tr>\n</tbody>\n</table>\n<pre>pip install django-xlink==0.1.1\n</pre>\n<p>Django Cross Link takes in particular URLs on an external site and periodically\ncombs through those URLs searching for links back to your site. The cross\nsite links are stored in the database for future use and display</p>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>XLink requires <a href=\"http://codespeak.net/lxml/\" rel=\"nofollow\">lxml</a> for HTML parsing:</p>\n<pre>pip install lxml\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Add <tt>xlink</tt> to your <tt>INSTALLED_APPS</tt> and run <tt>./manage.py syncdb</tt></p>\n<p>Add some queries in the admin so xlink knows which URLs to comb through and which\ndomain (usually your own site\u2019s) you want to search for cross linking.</p>\n<p>Next run the management command <tt>./manage.py xlink_search</tt> which will take the queries\nand populate them with results of cross site links.</p>\n<p>I recomend putting the management command in a cronjob every hour or so to make\nthe results appear in real time.</p>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<p>Spider pages starting at one URL looking for cross site links</p>\n</div>\n\n          </div>"}, "last_serial": 791050, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "3548c5f95f6efed49a0f84469b58564c", "sha256": "3163d67de64b7ff68ad3e4560dd8e7341bd151676f6f8ef181c8deb877d2158a"}, "downloads": -1, "filename": "django-xlink-0.1.0.tar.gz", "has_sig": false, "md5_digest": "3548c5f95f6efed49a0f84469b58564c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2394, "upload_time": "2010-07-01T21:08:51", "upload_time_iso_8601": "2010-07-01T21:08:51.889083Z", "url": "https://files.pythonhosted.org/packages/bd/97/cbd2544c428bba87550cfe304fa42d43bb725cbe59db4998f4dc8effd904/django-xlink-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "a9a3427bc021b3dbc74e0bdfb04d460c", "sha256": "33d3c13484acdc08a01512b66fdbcf36b4bc8ca44b29a90564b09db4b0b8719e"}, "downloads": -1, "filename": "django-xlink-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9a3427bc021b3dbc74e0bdfb04d460c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2399, "upload_time": "2010-07-02T16:26:01", "upload_time_iso_8601": "2010-07-02T16:26:01.004643Z", "url": "https://files.pythonhosted.org/packages/cc/c8/26a454f1fa9b618b5ad1603f68d6347b6b9c61fd8bc7907caf273b16e27a/django-xlink-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9a3427bc021b3dbc74e0bdfb04d460c", "sha256": "33d3c13484acdc08a01512b66fdbcf36b4bc8ca44b29a90564b09db4b0b8719e"}, "downloads": -1, "filename": "django-xlink-0.1.1.tar.gz", "has_sig": false, "md5_digest": "a9a3427bc021b3dbc74e0bdfb04d460c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2399, "upload_time": "2010-07-02T16:26:01", "upload_time_iso_8601": "2010-07-02T16:26:01.004643Z", "url": "https://files.pythonhosted.org/packages/cc/c8/26a454f1fa9b618b5ad1603f68d6347b6b9c61fd8bc7907caf273b16e27a/django-xlink-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:51:48 2020"}