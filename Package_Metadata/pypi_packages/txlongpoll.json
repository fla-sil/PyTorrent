{"info": {"author": "UNKNOWN", "author_email": "UNKNOWN", "bugtrack_url": null, "classifiers": [], "description": "Generic long poll server used by Launchpad and Landscape.\n\n\nDependencies\n------------\n\nBy default txlongpoll attempts to build without going to the network;\ninstead it tries to find all dependencies from download-cache/dist,\nand you must download all the dependencies yourself.\n\nIf you prefer to use resources from the 'net, PyPI for example, then:\n\n- Remove the --setup-source and --download-base options in Makefile to\n  allow bootstrap.py to download setuptools.\n\n- Comment out the ``install-from-cache = true`` line in buildout.cfg\n  to allow bin/buildout to download dependencies.\n\nTo run the tests you may also need lp:rabbitfixture (bzr branch\nlp:rabbitfixture). Build an sdist tarball and drop it into\ndownload-cache/dist. You may also need to do the same for\ntestresources-0.2.4_r58 until it reaches PyPI.\n\ntxlongpoll needs a recent RabbitMQ with support for rejection. Maverick's\n1.8.0 is not sufficient, but 2.1.1 works fine, so >= Natty is OK.\n\n\nBuilding\n--------\n\n $ make build\n\nwill build only those parts needed to run txlongpoll. No support for\ntags or testing.\n\n\nTesting\n-------\n\n $ make check\n\nwill build all the test-related parts of txlongpoll and then do a full\ntest run, but\n\n $ make bin/test\n\nwill just do the first part.\n\nThere is testrepository <https://launchpad.net/testrepository>\nsupport, so you can also do the following:\n\n $ testr init\n $ testr run\n\nThis is probably the best way to develop txlongpoll.\n\n\nRunning\n-------\n\n $ bin/twistd txlongpoll\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "txlongpoll", "package_url": "https://pypi.org/project/txlongpoll/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/txlongpoll/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/txlongpoll/0.3.2/", "requires_dist": null, "requires_python": null, "summary": "Long polling HTTP frontend for AMQP", "version": "0.3.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Generic long poll server used by Launchpad and Landscape.</p>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>By default txlongpoll attempts to build without going to the network;\ninstead it tries to find all dependencies from download-cache/dist,\nand you must download all the dependencies yourself.</p>\n<p>If you prefer to use resources from the \u2018net, PyPI for example, then:</p>\n<ul>\n<li>Remove the \u2013setup-source and \u2013download-base options in Makefile to\nallow bootstrap.py to download setuptools.</li>\n<li>Comment out the <tt><span class=\"pre\">install-from-cache</span> = true</tt> line in buildout.cfg\nto allow bin/buildout to download dependencies.</li>\n</ul>\n<p>To run the tests you may also need lp:rabbitfixture (bzr branch\nlp:rabbitfixture). Build an sdist tarball and drop it into\ndownload-cache/dist. You may also need to do the same for\ntestresources-0.2.4_r58 until it reaches PyPI.</p>\n<p>txlongpoll needs a recent RabbitMQ with support for rejection. Maverick\u2019s\n1.8.0 is not sufficient, but 2.1.1 works fine, so &gt;= Natty is OK.</p>\n</div>\n<div id=\"building\">\n<h2>Building</h2>\n<blockquote>\n$ make build</blockquote>\n<p>will build only those parts needed to run txlongpoll. No support for\ntags or testing.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<blockquote>\n$ make check</blockquote>\n<p>will build all the test-related parts of txlongpoll and then do a full\ntest run, but</p>\n<blockquote>\n$ make bin/test</blockquote>\n<p>will just do the first part.</p>\n<p>There is testrepository &lt;<a href=\"https://launchpad.net/testrepository\" rel=\"nofollow\">https://launchpad.net/testrepository</a>&gt;\nsupport, so you can also do the following:</p>\n<blockquote>\n$ testr init\n$ testr run</blockquote>\n<p>This is probably the best way to develop txlongpoll.</p>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<blockquote>\n$ bin/twistd txlongpoll</blockquote>\n</div>\n\n          </div>"}, "last_serial": 741928, "releases": {"0.2.12": [{"comment_text": "", "digests": {"md5": "717a8dd425fd4c6c52f09343c3ecdcca", "sha256": "019dec8f3e3498de1e79a08430ae1ccb89d792354f2067655fa5ca0ec802093f"}, "downloads": -1, "filename": "txlongpoll-0.2.12.tar.gz", "has_sig": false, "md5_digest": "717a8dd425fd4c6c52f09343c3ecdcca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16844, "upload_time": "2011-12-09T17:42:39", "upload_time_iso_8601": "2011-12-09T17:42:39.975469Z", "url": "https://files.pythonhosted.org/packages/c1/4c/75abe300cc9384904a10b1494966ffa8a55765f0d88c45a49af30d2975e1/txlongpoll-0.2.12.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "8b49ffac97ed164a173b279a36d1ef7a", "sha256": "ae52b8e983d93b39447751abfd8aa96f4a3d3b486e4b2cb8ea8ed912e896ee89"}, "downloads": -1, "filename": "txlongpoll-0.3.tar.gz", "has_sig": true, "md5_digest": "8b49ffac97ed164a173b279a36d1ef7a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17851, "upload_time": "2012-03-14T11:50:15", "upload_time_iso_8601": "2012-03-14T11:50:15.690788Z", "url": "https://files.pythonhosted.org/packages/5a/60/362c3a95578f9611d08fbdb8a9f82b63728edba84fbeb96ece2023b702de/txlongpoll-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "842db27c826569df60b17891a2a4cbc2", "sha256": "eb101834920fcfa4a4d828f3fc29c195aa3c3f332a19306b09aba7f7dc2e88c6"}, "downloads": -1, "filename": "txlongpoll-0.3.1.tar.gz", "has_sig": true, "md5_digest": "842db27c826569df60b17891a2a4cbc2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18204, "upload_time": "2012-03-14T15:44:33", "upload_time_iso_8601": "2012-03-14T15:44:33.170250Z", "url": "https://files.pythonhosted.org/packages/cf/1c/c7995243bcdc96a42fcc6832c3a3dbff2a732c3bc87ac16be430cb66c8e5/txlongpoll-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "133cd2f9c26af0ea4efc9a4658d79ec0", "sha256": "e8f92c653163298ab69f935cb4d5a82be0207fbc41745759eab1166708676842"}, "downloads": -1, "filename": "txlongpoll-0.3.2.tar.gz", "has_sig": true, "md5_digest": "133cd2f9c26af0ea4efc9a4658d79ec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18191, "upload_time": "2013-06-04T10:13:17", "upload_time_iso_8601": "2013-06-04T10:13:17.523439Z", "url": "https://files.pythonhosted.org/packages/52/bb/2244441208faaf0c006f801a6c7f6a969e7b89febac3a672447e32d0efca/txlongpoll-0.3.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "133cd2f9c26af0ea4efc9a4658d79ec0", "sha256": "e8f92c653163298ab69f935cb4d5a82be0207fbc41745759eab1166708676842"}, "downloads": -1, "filename": "txlongpoll-0.3.2.tar.gz", "has_sig": true, "md5_digest": "133cd2f9c26af0ea4efc9a4658d79ec0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18191, "upload_time": "2013-06-04T10:13:17", "upload_time_iso_8601": "2013-06-04T10:13:17.523439Z", "url": "https://files.pythonhosted.org/packages/52/bb/2244441208faaf0c006f801a6c7f6a969e7b89febac3a672447e32d0efca/txlongpoll-0.3.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:43:12 2020"}