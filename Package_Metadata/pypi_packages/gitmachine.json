{"info": {"author": "Daniel Firth", "author_email": "locallycompact@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "GitMachine is a python library that aims to mimic git checkout processes to\nhandle url aliasing and cases where submodules may need to be overriden ad-hoc.\n\nThis is based on the submodule override schema in baserock, but can be used\nindependently of baserock build tooling.\n\nHere's how to use it\n\n    # Set some aliases, this is usually a dictionary of prefix mappings. Here\n    # we set a single prefix meaning, wherever we see 'upstream:', substitute\n    # it for 'git://git.baserock.org/delta'\n\n    aliases = { 'upstream:': 'git://git.baserock.org/delta/'}\n\n    # Make a GitMachine, specifying a 'gits' directory, a 'tmp' directory and\n    # the aliases. 'gits' is where the gits end up stored. GitMachine will name\n    # them in a standard way.\n\n    gitmachine = GitMachine('gits', 'tmp', aliases)\n\n    # We're going to check out ansible at the ref ebc8d48d34296fe010096f044e2b7591df37a622,\n    # using the upstream baserock repository. We need to make a submodule mask, which maps\n    # the path of the submodule in the main repository to an alternate url. It looks like\n    # this:\n\n    ansible = {'lib/ansible/modules/core': { 'url': 'upstream:ansible-modules-core.git' },\n               'v2/ansible/modules/core': { 'url': 'upstream:ansible-modules-core.git' },\n               'v2/ansible/modules/extras': { 'url': 'upstream:ansible-modules-extras.git' },\n               'lib/ansible/modules/extras': { 'url': 'upstream:ansible-modules-extras.git' }}\n\n    # Use the arrange_into_folder method to clone upstream:ansible from git.baserock.org,\n    # also passing in the ref, the submodule mask, and a folder, to clone into the folder\n    # using the overriden sources. Here it will evaluate upstream:ansible and clone it\n    # into the folder 'ansible.build', using the submodule override mask.\n\n    gitmachine.arrange_into_folder('upstream:ansible', 'ebc8d48d34296fe010096f044e2b7591df37a622', ansible, 'ansible.build')\n\n\n\nGitMachine also works recursively. An example of a recursive checkout of the qt5 master\nrepository can be found in 'quick-check.py'\n", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/baserock/gitmachine", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "gitmachine", "package_url": "https://pypi.org/project/gitmachine/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/gitmachine/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://gitlab.com/baserock/gitmachine"}, "release_url": "https://pypi.org/project/gitmachine/0.1.5/", "requires_dist": null, "requires_python": null, "summary": "Git Machine", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>GitMachine is a python library that aims to mimic git checkout processes to\nhandle url aliasing and cases where submodules may need to be overriden ad-hoc.</p>\n<p>This is based on the submodule override schema in baserock, but can be used\nindependently of baserock build tooling.</p>\n<p>Here\u2019s how to use it</p>\n<blockquote>\n<p># Set some aliases, this is usually a dictionary of prefix mappings. Here\n# we set a single prefix meaning, wherever we see \u2018upstream:\u2019, substitute\n# it for \u2018git://git.baserock.org/delta\u2019</p>\n<p>aliases = { \u2018upstream:\u2019: \u2018git://git.baserock.org/delta/\u2019}</p>\n<p># Make a GitMachine, specifying a \u2018gits\u2019 directory, a \u2018tmp\u2019 directory and\n# the aliases. \u2018gits\u2019 is where the gits end up stored. GitMachine will name\n# them in a standard way.</p>\n<p>gitmachine = GitMachine(\u2018gits\u2019, \u2018tmp\u2019, aliases)</p>\n<p># We\u2019re going to check out ansible at the ref ebc8d48d34296fe010096f044e2b7591df37a622,\n# using the upstream baserock repository. We need to make a submodule mask, which maps\n# the path of the submodule in the main repository to an alternate url. It looks like\n# this:</p>\n<dl>\n<dt>ansible = {\u2018lib/ansible/modules/core\u2019: { \u2018url\u2019: \u2018upstream:ansible-modules-core.git\u2019 },</dt>\n<dd>\u2018v2/ansible/modules/core\u2019: { \u2018url\u2019: \u2018upstream:ansible-modules-core.git\u2019 },\n\u2018v2/ansible/modules/extras\u2019: { \u2018url\u2019: \u2018upstream:ansible-modules-extras.git\u2019 },\n\u2018lib/ansible/modules/extras\u2019: { \u2018url\u2019: \u2018upstream:ansible-modules-extras.git\u2019 }}</dd>\n</dl>\n<p># Use the arrange_into_folder method to clone upstream:ansible from git.baserock.org,\n# also passing in the ref, the submodule mask, and a folder, to clone into the folder\n# using the overriden sources. Here it will evaluate upstream:ansible and clone it\n# into the folder \u2018ansible.build\u2019, using the submodule override mask.</p>\n<p>gitmachine.arrange_into_folder(\u2018upstream:ansible\u2019, \u2018ebc8d48d34296fe010096f044e2b7591df37a622\u2019, ansible, \u2018ansible.build\u2019)</p>\n</blockquote>\n<p>GitMachine also works recursively. An example of a recursive checkout of the qt5 master\nrepository can be found in \u2018quick-check.py\u2019</p>\n\n          </div>"}, "last_serial": 2480822, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e6d9023f7084f81b1fb9e83eeb419cda", "sha256": "6b07619fc82c5b148ff4027d4a55a337895e7994b4c7d3e5c4eb687535ef9e7e"}, "downloads": -1, "filename": "gitmachine-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e6d9023f7084f81b1fb9e83eeb419cda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2748, "upload_time": "2016-11-02T15:02:58", "upload_time_iso_8601": "2016-11-02T15:02:58.787326Z", "url": "https://files.pythonhosted.org/packages/6e/87/e732231194e6acb5c9432858f765b5707fa07d147fd018376bc782df48be/gitmachine-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "11fc457f89440f92727d734768ab5a4c", "sha256": "4cb9e551eec30cafb59e349dbac592de0572c806e0152c0a46fdf1f6d7d98546"}, "downloads": -1, "filename": "gitmachine-0.1.1.tar.gz", "has_sig": false, "md5_digest": "11fc457f89440f92727d734768ab5a4c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2798, "upload_time": "2016-11-02T15:14:32", "upload_time_iso_8601": "2016-11-02T15:14:32.557309Z", "url": "https://files.pythonhosted.org/packages/aa/60/3e8b52c8abb3d792561bef075656d9b3e3222bb517c5ce3d32f2ea36ccb8/gitmachine-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "fa49a936f978e3f50927464f931d3137", "sha256": "de9b0c3515383adba4502f87fcd2115fe702fe5bc47a2539f21717df6f4f59d4"}, "downloads": -1, "filename": "gitmachine-0.1.2.tar.gz", "has_sig": false, "md5_digest": "fa49a936f978e3f50927464f931d3137", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2984, "upload_time": "2016-11-15T16:45:15", "upload_time_iso_8601": "2016-11-15T16:45:15.410466Z", "url": "https://files.pythonhosted.org/packages/40/df/8f658cc3b516a6109991a4bb276d7ca5dcd8d61ba297dada4124cc101d17/gitmachine-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cc8a61be50d1c677f776401573fbc8b4", "sha256": "f6de4e9784fd7bcde4384156172d39f85544e56f68f0c4421f6137b70d2a917d"}, "downloads": -1, "filename": "gitmachine-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cc8a61be50d1c677f776401573fbc8b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2974, "upload_time": "2016-11-15T17:39:38", "upload_time_iso_8601": "2016-11-15T17:39:38.067327Z", "url": "https://files.pythonhosted.org/packages/58/50/f64b23c7c918a8eb0fe907b3d5c5206d32d5088030f0ae640d3d6835f1b8/gitmachine-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "1547df41933ce920b295ae03ff8b99bd", "sha256": "1d961604cf4658500e7899fe70d864e05838e2eac85973d10674fac0509a27c6"}, "downloads": -1, "filename": "gitmachine-0.1.4.tar.gz", "has_sig": false, "md5_digest": "1547df41933ce920b295ae03ff8b99bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3060, "upload_time": "2016-11-23T15:43:09", "upload_time_iso_8601": "2016-11-23T15:43:09.599074Z", "url": "https://files.pythonhosted.org/packages/24/45/0c0d7e8755c76baff307cb401436efb78bda0e06193cb113f555dcc9c494/gitmachine-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "583f07ebbd7ff69cc96e51ad03b0f8d3", "sha256": "d819550b3fbd237e51a7bf84b407db99d53f2ad937fe8938561a5a7c567d1c7c"}, "downloads": -1, "filename": "gitmachine-0.1.5.tar.gz", "has_sig": false, "md5_digest": "583f07ebbd7ff69cc96e51ad03b0f8d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3585, "upload_time": "2016-11-24T13:41:49", "upload_time_iso_8601": "2016-11-24T13:41:49.259319Z", "url": "https://files.pythonhosted.org/packages/b5/96/8d4394ecb8204a9b5edd30f21466b1bdcac665c5e7e1a60a3cf03e777f5a/gitmachine-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "583f07ebbd7ff69cc96e51ad03b0f8d3", "sha256": "d819550b3fbd237e51a7bf84b407db99d53f2ad937fe8938561a5a7c567d1c7c"}, "downloads": -1, "filename": "gitmachine-0.1.5.tar.gz", "has_sig": false, "md5_digest": "583f07ebbd7ff69cc96e51ad03b0f8d3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3585, "upload_time": "2016-11-24T13:41:49", "upload_time_iso_8601": "2016-11-24T13:41:49.259319Z", "url": "https://files.pythonhosted.org/packages/b5/96/8d4394ecb8204a9b5edd30f21466b1bdcac665c5e7e1a60a3cf03e777f5a/gitmachine-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:56:52 2020"}