{"info": {"author": "Chris Lewicki", "author_email": "chris@lewicki.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "![TruSat banner](https://trusat-assets.s3.amazonaws.com/readme-banner.jpg)\n\n# trusat-orbit\n\n## Convert satellite observations to orbit predictions\n\n<img align=\"right\" width=\"250\" height=\"250\" src=\"https://trusat-assets.s3.amazonaws.com/trusat-posat-animation-540x540.gif\">\n\nThis repo supports the analyses of [IOD/RDE/UK positional formatting formats](http://www.satobs.org/position/posn_formats.html) and generation of TLEs at [TruSat.org](https://TruSat.org/).\n\nTruSat is a citizen-powered open-source tool for space sustainability, crowdsourcing satellite observations to form an independent record of objects orbiting Earth.\n\n- Visit [TruSat.org](https://trusat.org) to see the live app\n- View the [docs](http://learn.trusat.org/) to learn more about the project\n- Join the [Discord](https://discord.gg/HfT62G) to follow the development discussion\n\nCurrently, this orbit propagation code is based on a Python port of [Scott Campbell's C++ satfit code base]( https://github.com/interplanetarychris/scottcampbell-satfit). After initial prototyping, it is an aim of this repo to include OREKit and related tools for more advanced processing of orbit-related calculations.\n\n# Getting started with TruSat-orbit\nFirst, we recommend setting up a [python virtual environment](https://realpython.com/python-virtual-environments-a-primer/)\n\nWe're still working on a clean environment setup following conversion of the project to a pip-installable packages.\nA quick start looks something like:\n```\npip3 install git+https://github.com/TruSat/trusat-backend@dev.chris.package#egg=trusat_backend-1.1.0\npip3 install trusat\npython -m trusat.satfit\n```\n\n## Contents\n\n* **iod.py** - Utilities for importing, validating, and operating on IOD/RDE/UK positional formatting formats \n* **tle_util.py** - Utilities to import, export, validate and operate on Two-Line Element sets\n* **satfit.py** - Suite of utilities based on and extending [Scott Campbell's C++ satfit code base]( https://github.com/interplanetarychris/scottcampbell-satfit) for reading visual observations and updating TLEs\n  * **satid.py** - Search TLE catalog for possible match to an UNIDentified satellite TLE\n  * **elfind.py** - Generate a provisional TLE from 2-3 IOD records\n\n### Tests - Unit tests for the above\n* tests_iod.py \n* tests_satfit.py\n* tests_TLE.py\n* tests_profile.py\n\nRun with python -m unittest discover tests/\n\n## Dependencies\n* Uses Brandon Rhodes [python-sgp4](https://github.com/brandon-rhodes/python-sgp4) with C++ accelerations\n* (Currently) requires Cython for the c-accelerated analyses module\n* (Currently) assumes a connection to a database, see [this PR] (https://github.com/TruSat/trusat-backend/pull/111) for setting up your own local copy\n* (Currently) requires pulling [trusat-backend](https://github.com/TruSat/trusat-backend) into the same parent directory as trusat-orbit\n\n## Coding Style\nFollow [PEP 8](https://www.python.org/dev/peps/pep-0008/) for any Python code and the style guide recommended for any other language.\n\nAdditionally see [Best of the Best Practices](https://gist.github.com/sloria/7001839)\n\n## Maintaining Repo\n[Style Guide](https://github.com/agis/git-style-guide)\nWith the addition of commits to the master branch are done through PRs (Pull Request).\n\n## Releasing Versions\n1. Checkout master\n2. pull from repo\n3. run the unittests\n4. create a tag with the new version number, starting with a 'v'. eg:\n\n```git tag v0.1.1 -m \"Version 0.1.1```\n[Version Numbering](semver.org)\n5. push changes to github `git push --follow-tags`\n7. check verification tools\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://trusat.org/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "trusat", "package_url": "https://pypi.org/project/trusat/", "platform": "", "project_url": "https://pypi.org/project/trusat/", "project_urls": {"Forums": "https://discuss.trusat.org/", "Homepage": "https://trusat.org/", "Learning Hub": "https://learn.trusat.org/docs/start-here", "Source": "https://github.com/TruSat/trusat-orbit", "Tracker": "https://github.com/TruSat/trusat-orbit/issues"}, "release_url": "https://pypi.org/project/trusat/0.9.0/", "requires_dist": ["cython", "numpy", "sgp4 (>=2.7)", "spacetrack", "trusat-backend (==1.1.0)"], "requires_python": ">=3.6", "summary": "TruSat satellite observation processing utilities", "version": "0.9.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"TruSat banner\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/941782b40389f1b7b95df314f81db6e292ba76a9/68747470733a2f2f7472757361742d6173736574732e73332e616d617a6f6e6177732e636f6d2f726561646d652d62616e6e65722e6a7067\"></p>\n<h1>trusat-orbit</h1>\n<h2>Convert satellite observations to orbit predictions</h2>\n<img align=\"right\" height=\"250\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cfdee73f8c2303d724764bf5c46735f38529dd3b/68747470733a2f2f7472757361742d6173736574732e73332e616d617a6f6e6177732e636f6d2f7472757361742d706f7361742d616e696d6174696f6e2d353430783534302e676966\" width=\"250\">\n<p>This repo supports the analyses of <a href=\"http://www.satobs.org/position/posn_formats.html\" rel=\"nofollow\">IOD/RDE/UK positional formatting formats</a> and generation of TLEs at <a href=\"https://TruSat.org/\" rel=\"nofollow\">TruSat.org</a>.</p>\n<p>TruSat is a citizen-powered open-source tool for space sustainability, crowdsourcing satellite observations to form an independent record of objects orbiting Earth.</p>\n<ul>\n<li>Visit <a href=\"https://trusat.org\" rel=\"nofollow\">TruSat.org</a> to see the live app</li>\n<li>View the <a href=\"http://learn.trusat.org/\" rel=\"nofollow\">docs</a> to learn more about the project</li>\n<li>Join the <a href=\"https://discord.gg/HfT62G\" rel=\"nofollow\">Discord</a> to follow the development discussion</li>\n</ul>\n<p>Currently, this orbit propagation code is based on a Python port of <a href=\"https://github.com/interplanetarychris/scottcampbell-satfit\" rel=\"nofollow\">Scott Campbell's C++ satfit code base</a>. After initial prototyping, it is an aim of this repo to include OREKit and related tools for more advanced processing of orbit-related calculations.</p>\n<h1>Getting started with TruSat-orbit</h1>\n<p>First, we recommend setting up a <a href=\"https://realpython.com/python-virtual-environments-a-primer/\" rel=\"nofollow\">python virtual environment</a></p>\n<p>We're still working on a clean environment setup following conversion of the project to a pip-installable packages.\nA quick start looks something like:</p>\n<pre><code>pip3 install git+https://github.com/TruSat/trusat-backend@dev.chris.package#egg=trusat_backend-1.1.0\npip3 install trusat\npython -m trusat.satfit\n</code></pre>\n<h2>Contents</h2>\n<ul>\n<li><strong>iod.py</strong> - Utilities for importing, validating, and operating on IOD/RDE/UK positional formatting formats</li>\n<li><strong>tle_util.py</strong> - Utilities to import, export, validate and operate on Two-Line Element sets</li>\n<li><strong>satfit.py</strong> - Suite of utilities based on and extending <a href=\"https://github.com/interplanetarychris/scottcampbell-satfit\" rel=\"nofollow\">Scott Campbell's C++ satfit code base</a> for reading visual observations and updating TLEs\n<ul>\n<li><strong>satid.py</strong> - Search TLE catalog for possible match to an UNIDentified satellite TLE</li>\n<li><strong>elfind.py</strong> - Generate a provisional TLE from 2-3 IOD records</li>\n</ul>\n</li>\n</ul>\n<h3>Tests - Unit tests for the above</h3>\n<ul>\n<li>tests_iod.py</li>\n<li>tests_satfit.py</li>\n<li>tests_TLE.py</li>\n<li>tests_profile.py</li>\n</ul>\n<p>Run with python -m unittest discover tests/</p>\n<h2>Dependencies</h2>\n<ul>\n<li>Uses Brandon Rhodes <a href=\"https://github.com/brandon-rhodes/python-sgp4\" rel=\"nofollow\">python-sgp4</a> with C++ accelerations</li>\n<li>(Currently) requires Cython for the c-accelerated analyses module</li>\n<li>(Currently) assumes a connection to a database, see [this PR] (<a href=\"https://github.com/TruSat/trusat-backend/pull/111\" rel=\"nofollow\">https://github.com/TruSat/trusat-backend/pull/111</a>) for setting up your own local copy</li>\n<li>(Currently) requires pulling <a href=\"https://github.com/TruSat/trusat-backend\" rel=\"nofollow\">trusat-backend</a> into the same parent directory as trusat-orbit</li>\n</ul>\n<h2>Coding Style</h2>\n<p>Follow <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP 8</a> for any Python code and the style guide recommended for any other language.</p>\n<p>Additionally see <a href=\"https://gist.github.com/sloria/7001839\" rel=\"nofollow\">Best of the Best Practices</a></p>\n<h2>Maintaining Repo</h2>\n<p><a href=\"https://github.com/agis/git-style-guide\" rel=\"nofollow\">Style Guide</a>\nWith the addition of commits to the master branch are done through PRs (Pull Request).</p>\n<h2>Releasing Versions</h2>\n<ol>\n<li>Checkout master</li>\n<li>pull from repo</li>\n<li>run the unittests</li>\n<li>create a tag with the new version number, starting with a 'v'. eg:</li>\n</ol>\n<p><code>git tag v0.1.1 -m \"Version 0.1.1</code>\n<a href=\"semver.org\" rel=\"nofollow\">Version Numbering</a>\n5. push changes to github <code>git push --follow-tags</code>\n7. check verification tools</p>\n\n          </div>"}, "last_serial": 7139107, "releases": {"0.9.0": [{"comment_text": "", "digests": {"md5": "591100fac7905a7b7f9635cda707eb27", "sha256": "72bafd03eefd89e6f3a1f38104f116a9a6cb168f43a13ec190843c2a13c5547f"}, "downloads": -1, "filename": "trusat-0.9.0-cp37-cp37m-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "591100fac7905a7b7f9635cda707eb27", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 832338, "upload_time": "2020-04-30T17:29:45", "upload_time_iso_8601": "2020-04-30T17:29:45.894444Z", "url": "https://files.pythonhosted.org/packages/31/86/c6f0a9ec259c5aac5888763d4bae864abc597a1c8e0eb73a27086c134b37/trusat-0.9.0-cp37-cp37m-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c5bea2df1291496da45e9cc2f1881a2", "sha256": "57da176efbc16dc3b83c9bfadac8eefe6d8ac31a4ccd87acd87ba37ce8897b5f"}, "downloads": -1, "filename": "trusat-0.9.0.tar.gz", "has_sig": false, "md5_digest": "5c5bea2df1291496da45e9cc2f1881a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 275146, "upload_time": "2020-04-30T17:29:48", "upload_time_iso_8601": "2020-04-30T17:29:48.270608Z", "url": "https://files.pythonhosted.org/packages/7a/31/d84ba0421d945cdd1efc4a222146dae24408583883726e09ec298cf7f4d9/trusat-0.9.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "591100fac7905a7b7f9635cda707eb27", "sha256": "72bafd03eefd89e6f3a1f38104f116a9a6cb168f43a13ec190843c2a13c5547f"}, "downloads": -1, "filename": "trusat-0.9.0-cp37-cp37m-macosx_10_15_x86_64.whl", "has_sig": false, "md5_digest": "591100fac7905a7b7f9635cda707eb27", "packagetype": "bdist_wheel", "python_version": "cp37", "requires_python": ">=3.6", "size": 832338, "upload_time": "2020-04-30T17:29:45", "upload_time_iso_8601": "2020-04-30T17:29:45.894444Z", "url": "https://files.pythonhosted.org/packages/31/86/c6f0a9ec259c5aac5888763d4bae864abc597a1c8e0eb73a27086c134b37/trusat-0.9.0-cp37-cp37m-macosx_10_15_x86_64.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5c5bea2df1291496da45e9cc2f1881a2", "sha256": "57da176efbc16dc3b83c9bfadac8eefe6d8ac31a4ccd87acd87ba37ce8897b5f"}, "downloads": -1, "filename": "trusat-0.9.0.tar.gz", "has_sig": false, "md5_digest": "5c5bea2df1291496da45e9cc2f1881a2", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 275146, "upload_time": "2020-04-30T17:29:48", "upload_time_iso_8601": "2020-04-30T17:29:48.270608Z", "url": "https://files.pythonhosted.org/packages/7a/31/d84ba0421d945cdd1efc4a222146dae24408583883726e09ec298cf7f4d9/trusat-0.9.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:46:35 2020"}