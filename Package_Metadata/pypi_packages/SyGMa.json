{"info": {"author": "Lars Ridder", "author_email": "lars.ridder@esciencecenter.nl>", "bugtrack_url": null, "classifiers": ["Environment :: Console", "Intended Audience :: Science/Research", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Topic :: Scientific/Engineering :: Chemistry"], "description": "SyGMa\n=====\nSyGMa is a python library for the **Sy**\\ stematic **G**\\ eneration of potential **M**\\ et\\ **a**\\ bolites.\nIt is a reimplementation of the metabolic rules outlined in\n`Ridder, L., & Wagener, M. (2008)\nSyGMa: combining expert knowledge and empirical scoring in the prediction of metabolites.\nChemMedChem, 3(5), 821-832\n<http://onlinelibrary.wiley.com/doi/10.1002/cmdc.200700312/full>`_.\n\n.. image:: https://travis-ci.org/3D-e-Chem/sygma.svg?branch=master\n    :target: https://travis-ci.org/3D-e-Chem/sygma\n.. image:: https://api.codacy.com/project/badge/Grade/7f18ab1d1a80437f8e28ac1676c70519\n    :target: https://www.codacy.com/app/3D-e-Chem/sygma?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=3D-e-Chem/sygma&amp;utm_campaign=Badge_Grade\n.. image:: https://api.codacy.com/project/badge/Coverage/7f18ab1d1a80437f8e28ac1676c70519\n    :target: https://www.codacy.com/app/3D-e-Chem/sygma?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=3D-e-Chem/sygma&amp;utm_campaign=Badge_Coverage\n.. image:: https://img.shields.io/badge/docker-ready-blue.svg\n    :target: https://hub.docker.com/r/3dechem/sygma\n.. image:: https://anaconda.org/3d-e-chem/sygma/badges/installer/conda.svg\n    :target: https://conda.anaconda.org/3d-e-chem\n\nRequirements\n------------\nSyGMa requires RDKit with INCHI support\n\nInstallation\n------------\n* Install with Anaconda: ``conda install -c 3d-e-Chem -c rdkit sygma``\n\nOR\n\n* Install RDKit following the instructions in http://www.rdkit.org/docs/Install.html\n\nAND\n\n* ``pip install sygma`` OR, after downloading sygma, ``python setup.py install``\n\nExample: generating metabolites of phenol\n-----------------------------------------\n.. code-block:: python\n\n    import sygma\n    from rdkit import Chem\n\n    # Each step in a scenario lists the ruleset and the number of reaction cycles to be applied\n    scenario = sygma.Scenario([\n        [sygma.ruleset['phase1'], 1],\n        [sygma.ruleset['phase2'], 1]])\n\n    # An rdkit molecule, optionally with 2D coordinates, is required as parent molecule\n    parent = Chem.MolFromSmiles(\"c1ccccc1O\")\n\n    metabolic_tree = scenario.run(parent)\n    metabolic_tree.calc_scores()\n\n    print metabolic_tree.to_smiles()\n\n\nDocker\n------\nSyGMa can be executed in a Docker (https://www.docker.com/) container as follows:\n\n.. code-block:: bash\n\n    docker run 3dechem/sygma c1ccccc1O", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ridderl/sygma", "keywords": null, "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "SyGMa", "package_url": "https://pypi.org/project/SyGMa/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/SyGMa/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ridderl/sygma"}, "release_url": "https://pypi.org/project/SyGMa/1.1.0/", "requires_dist": null, "requires_python": null, "summary": "Systematic Generation of potential MetAbolites", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>SyGMa is a python library for the <strong>Sy</strong>stematic <strong>G</strong>eneration of potential <strong>M</strong>et<strong>a</strong>bolites.\nIt is a reimplementation of the metabolic rules outlined in\n<a href=\"http://onlinelibrary.wiley.com/doi/10.1002/cmdc.200700312/full\" rel=\"nofollow\">Ridder, L., &amp; Wagener, M. (2008)\nSyGMa: combining expert knowledge and empirical scoring in the prediction of metabolites.\nChemMedChem, 3(5), 821-832</a>.</p>\n<a href=\"https://travis-ci.org/3D-e-Chem/sygma\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/3D-e-Chem/sygma.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d85b746daee24078843ccbfd573c73cadb230182/68747470733a2f2f7472617669732d63692e6f72672f33442d652d4368656d2f7379676d612e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.codacy.com/app/3D-e-Chem/sygma?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=3D-e-Chem/sygma&amp;amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Grade/7f18ab1d1a80437f8e28ac1676c70519\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1fe2f7b82b430efdcb6bcef2c56f86ba2d2aecbc/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3766313861623164316138303433376638653238616331363736633730353139\"></a>\n<a href=\"https://www.codacy.com/app/3D-e-Chem/sygma?utm_source=github.com&amp;amp;utm_medium=referral&amp;amp;utm_content=3D-e-Chem/sygma&amp;amp;utm_campaign=Badge_Coverage\" rel=\"nofollow\"><img alt=\"https://api.codacy.com/project/badge/Coverage/7f18ab1d1a80437f8e28ac1676c70519\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ea75adee1d526f23c03101961a9a5e74f375d82e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f436f7665726167652f3766313861623164316138303433376638653238616331363736633730353139\"></a>\n<a href=\"https://hub.docker.com/r/3dechem/sygma\" rel=\"nofollow\"><img alt=\"https://img.shields.io/badge/docker-ready-blue.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fdc924604fdfb2d7734e26e719c84d6732bf0e67/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f636b65722d72656164792d626c75652e737667\"></a>\n<a href=\"https://conda.anaconda.org/3d-e-chem\" rel=\"nofollow\"><img alt=\"https://anaconda.org/3d-e-chem/sygma/badges/installer/conda.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a150208602a73c72f0cac67742ef9136b438b828/68747470733a2f2f616e61636f6e64612e6f72672f33642d652d6368656d2f7379676d612f6261646765732f696e7374616c6c65722f636f6e64612e737667\"></a>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>SyGMa requires RDKit with INCHI support</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<ul>\n<li>Install with Anaconda: <tt>conda install <span class=\"pre\">-c</span> <span class=\"pre\">3d-e-Chem</span> <span class=\"pre\">-c</span> rdkit sygma</tt></li>\n</ul>\n<p>OR</p>\n<ul>\n<li>Install RDKit following the instructions in <a href=\"http://www.rdkit.org/docs/Install.html\" rel=\"nofollow\">http://www.rdkit.org/docs/Install.html</a></li>\n</ul>\n<p>AND</p>\n<ul>\n<li><tt>pip install sygma</tt> OR, after downloading sygma, <tt>python setup.py install</tt></li>\n</ul>\n</div>\n<div id=\"example-generating-metabolites-of-phenol\">\n<h2>Example: generating metabolites of phenol</h2>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sygma</span>\n<span class=\"kn\">from</span> <span class=\"nn\">rdkit</span> <span class=\"kn\">import</span> <span class=\"n\">Chem</span>\n\n<span class=\"c1\"># Each step in a scenario lists the ruleset and the number of reaction cycles to be applied</span>\n<span class=\"n\">scenario</span> <span class=\"o\">=</span> <span class=\"n\">sygma</span><span class=\"o\">.</span><span class=\"n\">Scenario</span><span class=\"p\">([</span>\n    <span class=\"p\">[</span><span class=\"n\">sygma</span><span class=\"o\">.</span><span class=\"n\">ruleset</span><span class=\"p\">[</span><span class=\"s1\">'phase1'</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">],</span>\n    <span class=\"p\">[</span><span class=\"n\">sygma</span><span class=\"o\">.</span><span class=\"n\">ruleset</span><span class=\"p\">[</span><span class=\"s1\">'phase2'</span><span class=\"p\">],</span> <span class=\"mi\">1</span><span class=\"p\">]])</span>\n\n<span class=\"c1\"># An rdkit molecule, optionally with 2D coordinates, is required as parent molecule</span>\n<span class=\"n\">parent</span> <span class=\"o\">=</span> <span class=\"n\">Chem</span><span class=\"o\">.</span><span class=\"n\">MolFromSmiles</span><span class=\"p\">(</span><span class=\"s2\">\"c1ccccc1O\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">metabolic_tree</span> <span class=\"o\">=</span> <span class=\"n\">scenario</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">parent</span><span class=\"p\">)</span>\n<span class=\"n\">metabolic_tree</span><span class=\"o\">.</span><span class=\"n\">calc_scores</span><span class=\"p\">()</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">metabolic_tree</span><span class=\"o\">.</span><span class=\"n\">to_smiles</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"docker\">\n<h2>Docker</h2>\n<p>SyGMa can be executed in a Docker (<a href=\"https://www.docker.com/\" rel=\"nofollow\">https://www.docker.com/</a>) container as follows:</p>\n<pre>docker run 3dechem/sygma c1ccccc1O\n</pre>\n</div>\n\n          </div>"}, "last_serial": 2626643, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "5474eea1393f7a6670b5ccfa82bb5d1f", "sha256": "d679119349a3ca18fca29586b914ba539fa5ec99f6b73477c4f67ff5101646af"}, "downloads": -1, "filename": "SyGMa-1.0.tar.gz", "has_sig": false, "md5_digest": "5474eea1393f7a6670b5ccfa82bb5d1f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13624, "upload_time": "2017-01-18T15:39:30", "upload_time_iso_8601": "2017-01-18T15:39:30.484644Z", "url": "https://files.pythonhosted.org/packages/ca/a9/f8ce3cc920fa5c0624734531ec487817453c831c25de54e2563f5fcd8103/SyGMa-1.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "a797d73abd2680e1b22222006693e540", "sha256": "de14e034a73f6739bef713c5cdd4318dd41e2df71083909cd6885a18b115d896"}, "downloads": -1, "filename": "SyGMa-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a797d73abd2680e1b22222006693e540", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13681, "upload_time": "2017-02-02T16:27:31", "upload_time_iso_8601": "2017-02-02T16:27:31.886595Z", "url": "https://files.pythonhosted.org/packages/62/9e/65b7fbb38f83e187d5af5db02ec7ae710b909644f6d7731ca5dd8ce13e2f/SyGMa-1.0.1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "0a398b1d2633e5153c8b588fd823232c", "sha256": "7daf933862c25851176086ee15ef9210bc1b73f7c0d9dc26e68be73c9c47b244"}, "downloads": -1, "filename": "SyGMa-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0a398b1d2633e5153c8b588fd823232c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13809, "upload_time": "2017-02-07T22:58:28", "upload_time_iso_8601": "2017-02-07T22:58:28.638091Z", "url": "https://files.pythonhosted.org/packages/01/0d/7960ca6076d00ff33bf2aa0ac925074a07820900b8b8ae1edae83d12e488/SyGMa-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0a398b1d2633e5153c8b588fd823232c", "sha256": "7daf933862c25851176086ee15ef9210bc1b73f7c0d9dc26e68be73c9c47b244"}, "downloads": -1, "filename": "SyGMa-1.1.0.tar.gz", "has_sig": false, "md5_digest": "0a398b1d2633e5153c8b588fd823232c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13809, "upload_time": "2017-02-07T22:58:28", "upload_time_iso_8601": "2017-02-07T22:58:28.638091Z", "url": "https://files.pythonhosted.org/packages/01/0d/7960ca6076d00ff33bf2aa0ac925074a07820900b8b8ae1edae83d12e488/SyGMa-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:15 2020"}