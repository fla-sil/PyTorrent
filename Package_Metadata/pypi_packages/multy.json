{"info": {"author": "hashimura suguru", "author_email": "sugurudesu515@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# multy\n\n<br>\n\nPackage that can be easily bulk inserted with MySQL / MariaDB of Python.\nYou can also perform inserts and updates based on primary and unique keys.\n\n<br>\n\n## Requirement\n\n- Python3\n- MySQL >= 5.5\n- MariaDB >= 5.5\n- Install [PyMySQL](https://github.com/PyMySQL/PyMySQL) or [mysqlclient](https://github.com/PyMySQL/mysqlclient-python)\n\n<br>\n\n## Installation\n\n```\npip install multy\n```\n\n<br>\n\n## Bulk Insert\n\nExample of inserting into the following table\n\n\nTable Name: **sample**\n\n|Field|Type|\n|:----|:----|\n|id|int|\n|age|int|\n|name|varchar|\n\n```python\nimport multy\nimport pymysql\n\n# pymysql or mysqlclient connection\ncon = pymysql.connect(user='', passwd='', host='localhost', db='')\n\n\n# step1 The second argument is the table name\nsample = multy.BulkQuery(con, 'sample')\n\n\nfor i in range(10):\n    # step2 {column name: value}\n    sample.add_record({\n        'id': 1,\n        'age': 28,\n        'name': 'test'\n    })\n\n\n# step3 Insert execution\nsample.insert().save()\n\n```\n\n<br>\n\n## Bulk Insert or Update\n- `insert_or_update()`\nIf the primary key or unique key already exists, it will be updated, and if it does not exist, it will be inserted.\n\n```python\nsample = multy.BulkQuery(con, 'sample')\n\nfor i in range(10):\n    sample.add_record({\n        'id': 1,\n        'age': 28,\n        'name': 'test'\n    })\n\nsample.insert_or_update().save()\n```\n\n<br>\n\n\n## If you have Django\n\n- `from django.db import connection`\nIf you are using mysqlclient or pymysql with Django, you can use the imported connection as is\n\n```python\nfrom django.db import connection\nimport multy\n\nsample = multy.BulkQuery(connection, 'sample')\n```\n\n\n<br>\n\n## License\n\n**multy** is under [MIT license](https://en.wikipedia.org/wiki/MIT_License).\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/hashimura-suguru/multy_py", "keywords": "MariaDB,MySQL,Bulk,Multiple,Query", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "multy", "package_url": "https://pypi.org/project/multy/", "platform": "", "project_url": "https://pypi.org/project/multy/", "project_urls": {"Homepage": "https://github.com/hashimura-suguru/multy_py"}, "release_url": "https://pypi.org/project/multy/1.0.1/", "requires_dist": null, "requires_python": "", "summary": "Easily implement bulk insert and ON DUPLICATE KEY UPDATEstatements with MySQL and MariaDB", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>multy</h1>\n<br>\n<p>Package that can be easily bulk inserted with MySQL / MariaDB of Python.\nYou can also perform inserts and updates based on primary and unique keys.</p>\n<br>\n<h2>Requirement</h2>\n<ul>\n<li>Python3</li>\n<li>MySQL &gt;= 5.5</li>\n<li>MariaDB &gt;= 5.5</li>\n<li>Install <a href=\"https://github.com/PyMySQL/PyMySQL\" rel=\"nofollow\">PyMySQL</a> or <a href=\"https://github.com/PyMySQL/mysqlclient-python\" rel=\"nofollow\">mysqlclient</a></li>\n</ul>\n<br>\n<h2>Installation</h2>\n<pre><code>pip install multy\n</code></pre>\n<br>\n<h2>Bulk Insert</h2>\n<p>Example of inserting into the following table</p>\n<p>Table Name: <strong>sample</strong></p>\n<table>\n<thead>\n<tr>\n<th align=\"left\">Field</th>\n<th align=\"left\">Type</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"left\">id</td>\n<td align=\"left\">int</td>\n</tr>\n<tr>\n<td align=\"left\">age</td>\n<td align=\"left\">int</td>\n</tr>\n<tr>\n<td align=\"left\">name</td>\n<td align=\"left\">varchar</td>\n</tr></tbody></table>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">multy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pymysql</span>\n\n<span class=\"c1\"># pymysql or mysqlclient connection</span>\n<span class=\"n\">con</span> <span class=\"o\">=</span> <span class=\"n\">pymysql</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">passwd</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">,</span> <span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">db</span><span class=\"o\">=</span><span class=\"s1\">''</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># step1 The second argument is the table name</span>\n<span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"n\">multy</span><span class=\"o\">.</span><span class=\"n\">BulkQuery</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"s1\">'sample'</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"c1\"># step2 {column name: value}</span>\n    <span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">add_record</span><span class=\"p\">({</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">28</span><span class=\"p\">,</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span>\n    <span class=\"p\">})</span>\n\n\n<span class=\"c1\"># step3 Insert execution</span>\n<span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">insert</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<br>\n<h2>Bulk Insert or Update</h2>\n<ul>\n<li><code>insert_or_update()</code>\nIf the primary key or unique key already exists, it will be updated, and if it does not exist, it will be inserted.</li>\n</ul>\n<pre><span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"n\">multy</span><span class=\"o\">.</span><span class=\"n\">BulkQuery</span><span class=\"p\">(</span><span class=\"n\">con</span><span class=\"p\">,</span> <span class=\"s1\">'sample'</span><span class=\"p\">)</span>\n\n<span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">):</span>\n    <span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">add_record</span><span class=\"p\">({</span>\n        <span class=\"s1\">'id'</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">,</span>\n        <span class=\"s1\">'age'</span><span class=\"p\">:</span> <span class=\"mi\">28</span><span class=\"p\">,</span>\n        <span class=\"s1\">'name'</span><span class=\"p\">:</span> <span class=\"s1\">'test'</span>\n    <span class=\"p\">})</span>\n\n<span class=\"n\">sample</span><span class=\"o\">.</span><span class=\"n\">insert_or_update</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n<br>\n<h2>If you have Django</h2>\n<ul>\n<li><code>from django.db import connection</code>\nIf you are using mysqlclient or pymysql with Django, you can use the imported connection as is</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">connection</span>\n<span class=\"kn\">import</span> <span class=\"nn\">multy</span>\n\n<span class=\"n\">sample</span> <span class=\"o\">=</span> <span class=\"n\">multy</span><span class=\"o\">.</span><span class=\"n\">BulkQuery</span><span class=\"p\">(</span><span class=\"n\">connection</span><span class=\"p\">,</span> <span class=\"s1\">'sample'</span><span class=\"p\">)</span>\n</pre>\n<br>\n<h2>License</h2>\n<p><strong>multy</strong> is under <a href=\"https://en.wikipedia.org/wiki/MIT_License\" rel=\"nofollow\">MIT license</a>.</p>\n\n          </div>"}, "last_serial": 6229688, "releases": {"1.0.1": [{"comment_text": "", "digests": {"md5": "acd7dc84cd88c3d33b50c6a0725a2e5f", "sha256": "49ec3d35d73c9c0054459d525c8fe7702f6976b81ec6d81723698b15bf5f1596"}, "downloads": -1, "filename": "multy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "acd7dc84cd88c3d33b50c6a0725a2e5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4032, "upload_time": "2019-12-02T16:22:26", "upload_time_iso_8601": "2019-12-02T16:22:26.613110Z", "url": "https://files.pythonhosted.org/packages/64/0e/58070bd52c01070a4390523febabfbbf16c211c3bf6f574412f83626c921/multy-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f18b2d5aa8e7a77585ec4c8f4eb36a1", "sha256": "ce8f20e37f7443bd49a146653d16bc238ee5de3bb38eafb25140f1a284710ac4"}, "downloads": -1, "filename": "multy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3f18b2d5aa8e7a77585ec4c8f4eb36a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3045, "upload_time": "2019-12-02T16:22:28", "upload_time_iso_8601": "2019-12-02T16:22:28.711432Z", "url": "https://files.pythonhosted.org/packages/6f/e8/758e5d18a033288ab210ba57744d18373a693ae7528b31b99f32ccc89f66/multy-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "acd7dc84cd88c3d33b50c6a0725a2e5f", "sha256": "49ec3d35d73c9c0054459d525c8fe7702f6976b81ec6d81723698b15bf5f1596"}, "downloads": -1, "filename": "multy-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "acd7dc84cd88c3d33b50c6a0725a2e5f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 4032, "upload_time": "2019-12-02T16:22:26", "upload_time_iso_8601": "2019-12-02T16:22:26.613110Z", "url": "https://files.pythonhosted.org/packages/64/0e/58070bd52c01070a4390523febabfbbf16c211c3bf6f574412f83626c921/multy-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f18b2d5aa8e7a77585ec4c8f4eb36a1", "sha256": "ce8f20e37f7443bd49a146653d16bc238ee5de3bb38eafb25140f1a284710ac4"}, "downloads": -1, "filename": "multy-1.0.1.tar.gz", "has_sig": false, "md5_digest": "3f18b2d5aa8e7a77585ec4c8f4eb36a1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3045, "upload_time": "2019-12-02T16:22:28", "upload_time_iso_8601": "2019-12-02T16:22:28.711432Z", "url": "https://files.pythonhosted.org/packages/6f/e8/758e5d18a033288ab210ba57744d18373a693ae7528b31b99f32ccc89f66/multy-1.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:17 2020"}