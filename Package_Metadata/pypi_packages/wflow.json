{"info": {"author": "J. Schellekens", "author_email": "wflow@deltares.nl", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering"], "description": "wflow\n=====\n\nwflow consists of a set of Python programs that can be run on the command line\nand perform hydrological simulations. The models are based on the PCRaster\nPython framework. In wflow this framework is extended (the wf_DynamicFramework)\nso that models build using the framework can be controlled using the API.\nLinks to BMI, OpenMI and OpenDAP have been made.\n\nA link to the latest version can always be found at https://github.com/openstreams/wflow\n\nReference documentation at:\n\n+ http://wflow.readthedocs.io/en/latest/\n\n\nObtaining wflow\n===============\n\nGo to https://github.com/openstreams/wflow. There you can download the source or a release.\nAlso make sure you get the required third party models first (see below).\n\n\nWhich version to use\n====================\nThe master branch can change rapidly (and break functionality without warning) so please\nuse one of the releases if possible. If you want to adjust things in the model(s) we\nassume you should be comfortable using the master branch.\n\n\nInstallation\n============\n\nThe main dependencies for wflow are an installation of Python 3.6, and PCRaster 4.2+.\nOnly 64 bit OS/Python is supported.\n\n*Installing Python*\n\nFor Python we recommend using the Anaconda Distribution for Python 3, which is available\nfor download from https://www.anaconda.com/download/. The installer gives the option to\nadd ``python`` to your ``PATH`` environment variable. We will assume in the instructions\nbelow that it is available in the path, such that ``python``, ``pip``, and ``conda`` are\nall available from the command line.\n\nNote that there is no hard requirement specifically for Anaconda's Python, but often it\nmakes installation of required dependencies easier using the conda package manager.\n\n*Installing pcraster*\n\n+ Download pcraster from http://pcraster.geo.uu.nl/ website (version 4.2+)\n+ Follow the installation instructions at http://pcraster.geo.uu.nl/quick-start-guide/\n\n\nInstall as a conda environment\n------------------------------\n\nThe easiest and most robust way to install wflow is by installing it in a separate\nconda environment. In the root repository directory there is an ``environment.yml`` file.\nThis file lists all dependencies, except PCRaster, which must be installed manually as\ndescribed above. Either use the ``environment.yml`` file from the master branch (please note\nthat the master branch can change rapidly and break functionality without warning) , or from\none of the releases {release}.\n\nRun this command to start installing all wflow dependencies:\n\n+ ``conda env create -f environment.yml``\n\nThis creates a new environment with the name ``wflow``. To activate this environment in\na session, run:\n\n+ ``activate wflow``\n\nFor the installation of wflow there are two options (from the Python Package Index (PyPI)\nor from Github). To install a release of wflow from the PyPI (available from release 2018.1):\n\n+ ``pip install wflow=={release}``\n\nTo install directly from GitHub (from the HEAD of the master branch):\n\n+ ``pip install git+https://github.com/openstreams/wflow.git``\n\nor from Github from a specific release:\n\n+ ``pip install git+https://github.com/openstreams/wflow.git@{release}``\n\nNow you should be able to start this environment's Python with ``python``, try\n``import wflow`` to see if the package is installed.\n\nMore details on how to work with conda environments can be found here:\nhttps://conda.io/docs/user-guide/tasks/manage-environments.html\n\nIf you are planning to make changes and contribute to the development of wflow, it is\nbest to make a git clone of the repository, and do a editable install in the location\nof you clone. This will not move a copy to your Python installation directory, but\ninstead create a link in your Python installation pointing to the folder you installed\nit from, such that any changes you make there are directly reflected in your install.\n\n+ ``git clone https://github.com/openstreams/wflow.git``\n+ ``cd wflow``\n+ ``activate wflow``\n+ ``pip install -e .``\n\nAlternatively, if you want to avoid using ``git`` and simply want to test the latest\nversion from the ``master`` branch, you can replace the first line with downloading\na zip archive from GitHub: https://github.com/openstreams/wflow/archive/master.zip\n\nInstall using pip\n-----------------\n\nBesides the recommended conda environment setup described above, you can also install\nwflow with ``pip``. For the more difficult to install Python dependencies, it is best to\nuse the conda package manager:\n\n+ ``conda install numpy scipy gdal netcdf4 cftime xarray pyproj numba python-dateutil``\n\nThen install a release {release} of wflow (available from release 2018.1) with pip:\n\n+ ``pip install wflow=={release}``\n\nCheck if the installation is successful\n---------------------------------------\n\nTo check it the install is successful, go to the examples directory and run the following command:\n\n+ ``python -m wflow.wflow_sbm -C wflow_rhine_sbm -R testing``\n\nThis should run without errors.\n\n\nLinux\n-----\n\nAlthough you can get everything with the python packages bundled with most linux distributions\n(CentOS, Ubuntu, etc) we have found that the easiest way is to install the linux version of Anaconda\nand use the conda tool to install all requirements apart from pcraster which has to be installed manually.\n\nSince version 4.2, compiled versions of PCRaster are no longer distributed, so it will\nneed to be built following the instructions given at http://pcraster.geo.uu.nl/getting-started/pcraster-on-linux/\n\n\nOSX\n---\nUnfortunately there is no pcraster build for osx yet. If anybody wants to pick this up please let\nthe guys at pcraster.eu know!\n\n\nCredits\n=======\n\n+ The stats.py script was made by Keith Cherkauer (https://engineering.purdue.edu/~cherkaue/software.htm)\n\n+ pcraster is developed and maintained by Utrecht University (http://www.pcraster.eu)\n\n+ netCDF4 is developed by unidata (http://unidata.github.io/netcdf4-python/)\n\n+ GDAL is released under an X/MIT style Open Source license by the Open Source Geospatial Foundation (http://www.gdal.org).\n\n\nCitation\n========\nSee doi of the release you use. If you use a snapshot of the development (without a DOI) cite as follows:\n\nJaap Schellekens, Willem van Verseveld, Martijn Visser, Hessel Winsemius, Tanja Euser, Laur\u00e8ne Bouaziz, Christophe Thiange, Sander de Vries,\nH\u00e9l\u00e8ne Boisgontier, Dirk Eilander, Daniel Tollenaar, Albrecht Weerts, Fedor Baart, Pieter Hazenberg, Arthur Lutz, Corine ten Velden,\nMischa Jansen, Imme Benedict, YEAR. openstreams/wflow: unstable-master. https://github.com/openstreams/wflow, obtained: DATE_OF_DOWNLOAD\n\n\nReleases\n--------\n\nTo check the doi of releases you use: https://doi.org/10.5281/zenodo.593510\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://wflow.readthedocs.io/", "keywords": "wflow hydrology modeling framework pcraster", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "wflow", "package_url": "https://pypi.org/project/wflow/", "platform": "", "project_url": "https://pypi.org/project/wflow/", "project_urls": {"Homepage": "http://wflow.readthedocs.io/"}, "release_url": "https://pypi.org/project/wflow/2019.1/", "requires_dist": ["numpy", "scipy", "gdal", "netCDF4", "xarray", "cftime", "numba", "pyproj", "python-dateutil", "sphinx ; extra == 'docs'", "sphinx-rtd-theme ; extra == 'docs'"], "requires_python": ">=3.6", "summary": "wflow hydrological modeling framework", "version": "2019.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"wflow\">\n<h2>wflow</h2>\n<p>wflow consists of a set of Python programs that can be run on the command line\nand perform hydrological simulations. The models are based on the PCRaster\nPython framework. In wflow this framework is extended (the wf_DynamicFramework)\nso that models build using the framework can be controlled using the API.\nLinks to BMI, OpenMI and OpenDAP have been made.</p>\n<p>A link to the latest version can always be found at <a href=\"https://github.com/openstreams/wflow\" rel=\"nofollow\">https://github.com/openstreams/wflow</a></p>\n<p>Reference documentation at:</p>\n<ul>\n<li><a href=\"http://wflow.readthedocs.io/en/latest/\" rel=\"nofollow\">http://wflow.readthedocs.io/en/latest/</a></li>\n</ul>\n</div>\n<div id=\"obtaining-wflow\">\n<h2>Obtaining wflow</h2>\n<p>Go to <a href=\"https://github.com/openstreams/wflow\" rel=\"nofollow\">https://github.com/openstreams/wflow</a>. There you can download the source or a release.\nAlso make sure you get the required third party models first (see below).</p>\n</div>\n<div id=\"which-version-to-use\">\n<h2>Which version to use</h2>\n<p>The master branch can change rapidly (and break functionality without warning) so please\nuse one of the releases if possible. If you want to adjust things in the model(s) we\nassume you should be comfortable using the master branch.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The main dependencies for wflow are an installation of Python 3.6, and PCRaster 4.2+.\nOnly 64 bit OS/Python is supported.</p>\n<p><em>Installing Python</em></p>\n<p>For Python we recommend using the Anaconda Distribution for Python 3, which is available\nfor download from <a href=\"https://www.anaconda.com/download/\" rel=\"nofollow\">https://www.anaconda.com/download/</a>. The installer gives the option to\nadd <tt>python</tt> to your <tt>PATH</tt> environment variable. We will assume in the instructions\nbelow that it is available in the path, such that <tt>python</tt>, <tt>pip</tt>, and <tt>conda</tt> are\nall available from the command line.</p>\n<p>Note that there is no hard requirement specifically for Anaconda\u2019s Python, but often it\nmakes installation of required dependencies easier using the conda package manager.</p>\n<p><em>Installing pcraster</em></p>\n<ul>\n<li>Download pcraster from <a href=\"http://pcraster.geo.uu.nl/\" rel=\"nofollow\">http://pcraster.geo.uu.nl/</a> website (version 4.2+)</li>\n<li>Follow the installation instructions at <a href=\"http://pcraster.geo.uu.nl/quick-start-guide/\" rel=\"nofollow\">http://pcraster.geo.uu.nl/quick-start-guide/</a></li>\n</ul>\n<div id=\"install-as-a-conda-environment\">\n<h3>Install as a conda environment</h3>\n<p>The easiest and most robust way to install wflow is by installing it in a separate\nconda environment. In the root repository directory there is an <tt>environment.yml</tt> file.\nThis file lists all dependencies, except PCRaster, which must be installed manually as\ndescribed above. Either use the <tt>environment.yml</tt> file from the master branch (please note\nthat the master branch can change rapidly and break functionality without warning) , or from\none of the releases {release}.</p>\n<p>Run this command to start installing all wflow dependencies:</p>\n<ul>\n<li><tt>conda env create <span class=\"pre\">-f</span> environment.yml</tt></li>\n</ul>\n<p>This creates a new environment with the name <tt>wflow</tt>. To activate this environment in\na session, run:</p>\n<ul>\n<li><tt>activate wflow</tt></li>\n</ul>\n<p>For the installation of wflow there are two options (from the Python Package Index (PyPI)\nor from Github). To install a release of wflow from the PyPI (available from release 2018.1):</p>\n<ul>\n<li><tt>pip install <span class=\"pre\">wflow=={release}</span></tt></li>\n</ul>\n<p>To install directly from GitHub (from the HEAD of the master branch):</p>\n<ul>\n<li><tt>pip install <span class=\"pre\">git+https://github.com/openstreams/wflow.git</span></tt></li>\n</ul>\n<p>or from Github from a specific release:</p>\n<ul>\n<li><tt>pip install <span class=\"pre\">git+https://github.com/openstreams/wflow.git@{release}</span></tt></li>\n</ul>\n<p>Now you should be able to start this environment\u2019s Python with <tt>python</tt>, try\n<tt>import wflow</tt> to see if the package is installed.</p>\n<p>More details on how to work with conda environments can be found here:\n<a href=\"https://conda.io/docs/user-guide/tasks/manage-environments.html\" rel=\"nofollow\">https://conda.io/docs/user-guide/tasks/manage-environments.html</a></p>\n<p>If you are planning to make changes and contribute to the development of wflow, it is\nbest to make a git clone of the repository, and do a editable install in the location\nof you clone. This will not move a copy to your Python installation directory, but\ninstead create a link in your Python installation pointing to the folder you installed\nit from, such that any changes you make there are directly reflected in your install.</p>\n<ul>\n<li><tt>git clone <span class=\"pre\">https://github.com/openstreams/wflow.git</span></tt></li>\n<li><tt>cd wflow</tt></li>\n<li><tt>activate wflow</tt></li>\n<li><tt>pip install <span class=\"pre\">-e</span> .</tt></li>\n</ul>\n<p>Alternatively, if you want to avoid using <tt>git</tt> and simply want to test the latest\nversion from the <tt>master</tt> branch, you can replace the first line with downloading\na zip archive from GitHub: <a href=\"https://github.com/openstreams/wflow/archive/master.zip\" rel=\"nofollow\">https://github.com/openstreams/wflow/archive/master.zip</a></p>\n</div>\n<div id=\"install-using-pip\">\n<h3>Install using pip</h3>\n<p>Besides the recommended conda environment setup described above, you can also install\nwflow with <tt>pip</tt>. For the more difficult to install Python dependencies, it is best to\nuse the conda package manager:</p>\n<ul>\n<li><tt>conda install numpy scipy gdal netcdf4 cftime xarray pyproj numba <span class=\"pre\">python-dateutil</span></tt></li>\n</ul>\n<p>Then install a release {release} of wflow (available from release 2018.1) with pip:</p>\n<ul>\n<li><tt>pip install <span class=\"pre\">wflow=={release}</span></tt></li>\n</ul>\n</div>\n<div id=\"check-if-the-installation-is-successful\">\n<h3>Check if the installation is successful</h3>\n<p>To check it the install is successful, go to the examples directory and run the following command:</p>\n<ul>\n<li><tt>python <span class=\"pre\">-m</span> wflow.wflow_sbm <span class=\"pre\">-C</span> wflow_rhine_sbm <span class=\"pre\">-R</span> testing</tt></li>\n</ul>\n<p>This should run without errors.</p>\n</div>\n<div id=\"linux\">\n<h3>Linux</h3>\n<p>Although you can get everything with the python packages bundled with most linux distributions\n(CentOS, Ubuntu, etc) we have found that the easiest way is to install the linux version of Anaconda\nand use the conda tool to install all requirements apart from pcraster which has to be installed manually.</p>\n<p>Since version 4.2, compiled versions of PCRaster are no longer distributed, so it will\nneed to be built following the instructions given at <a href=\"http://pcraster.geo.uu.nl/getting-started/pcraster-on-linux/\" rel=\"nofollow\">http://pcraster.geo.uu.nl/getting-started/pcraster-on-linux/</a></p>\n</div>\n<div id=\"osx\">\n<h3>OSX</h3>\n<p>Unfortunately there is no pcraster build for osx yet. If anybody wants to pick this up please let\nthe guys at pcraster.eu know!</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<ul>\n<li>The stats.py script was made by Keith Cherkauer (<a href=\"https://engineering.purdue.edu/~cherkaue/software.htm\" rel=\"nofollow\">https://engineering.purdue.edu/~cherkaue/software.htm</a>)</li>\n<li>pcraster is developed and maintained by Utrecht University (<a href=\"http://www.pcraster.eu\" rel=\"nofollow\">http://www.pcraster.eu</a>)</li>\n<li>netCDF4 is developed by unidata (<a href=\"http://unidata.github.io/netcdf4-python/\" rel=\"nofollow\">http://unidata.github.io/netcdf4-python/</a>)</li>\n<li>GDAL is released under an X/MIT style Open Source license by the Open Source Geospatial Foundation (<a href=\"http://www.gdal.org\" rel=\"nofollow\">http://www.gdal.org</a>).</li>\n</ul>\n</div>\n<div id=\"citation\">\n<h2>Citation</h2>\n<p>See doi of the release you use. If you use a snapshot of the development (without a DOI) cite as follows:</p>\n<p>Jaap Schellekens, Willem van Verseveld, Martijn Visser, Hessel Winsemius, Tanja Euser, Laur\u00e8ne Bouaziz, Christophe Thiange, Sander de Vries,\nH\u00e9l\u00e8ne Boisgontier, Dirk Eilander, Daniel Tollenaar, Albrecht Weerts, Fedor Baart, Pieter Hazenberg, Arthur Lutz, Corine ten Velden,\nMischa Jansen, Imme Benedict, YEAR. openstreams/wflow: unstable-master. <a href=\"https://github.com/openstreams/wflow\" rel=\"nofollow\">https://github.com/openstreams/wflow</a>, obtained: DATE_OF_DOWNLOAD</p>\n<div id=\"releases\">\n<h3>Releases</h3>\n<p>To check the doi of releases you use: <a href=\"https://doi.org/10.5281/zenodo.593510\" rel=\"nofollow\">https://doi.org/10.5281/zenodo.593510</a></p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6076451, "releases": {"2018.1": [{"comment_text": "", "digests": {"md5": "34c7566e1b19f1d0d54fce032bce4b37", "sha256": "743c38f4a48cece1a39f9ec499efb1fad1d3361f5ec665c9c253ae0331bc0366"}, "downloads": -1, "filename": "wflow-2018.1-py3-none-any.whl", "has_sig": false, "md5_digest": "34c7566e1b19f1d0d54fce032bce4b37", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 610209, "upload_time": "2018-11-07T16:20:00", "upload_time_iso_8601": "2018-11-07T16:20:00.777506Z", "url": "https://files.pythonhosted.org/packages/5d/3a/0bb574e637e1817a259d2ae44cf7cebba621448b8736cb6d02f8ea0478c0/wflow-2018.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e0cd70c1d8ad132dd927aa7583f10c6", "sha256": "71f99f7b7609e26a686e7115e4e23ef838adc4e381ae4af8a07c68e10847e57e"}, "downloads": -1, "filename": "wflow-2018.1.tar.gz", "has_sig": false, "md5_digest": "0e0cd70c1d8ad132dd927aa7583f10c6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 435961, "upload_time": "2018-11-07T16:20:03", "upload_time_iso_8601": "2018-11-07T16:20:03.395284Z", "url": "https://files.pythonhosted.org/packages/0c/d2/cba9dde4468468c4f6b112776e4da1a71e07f16a7c07ef4f7f10e5e392d5/wflow-2018.1.tar.gz", "yanked": false}], "2019.1": [{"comment_text": "", "digests": {"md5": "991e5c815861fd46c14f1047c226fcc5", "sha256": "86989765cce1d37c22fe2581813e32246bf15d876f4490c46d61b278e2c8c1d6"}, "downloads": -1, "filename": "wflow-2019.1-py3-none-any.whl", "has_sig": false, "md5_digest": "991e5c815861fd46c14f1047c226fcc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 682672, "upload_time": "2019-11-04T16:30:19", "upload_time_iso_8601": "2019-11-04T16:30:19.136833Z", "url": "https://files.pythonhosted.org/packages/40/ee/4bee3f43d8597b21e784b0e96500af305ab9736ba85a3a3d7e76a24f7d9f/wflow-2019.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "991e5c815861fd46c14f1047c226fcc5", "sha256": "86989765cce1d37c22fe2581813e32246bf15d876f4490c46d61b278e2c8c1d6"}, "downloads": -1, "filename": "wflow-2019.1-py3-none-any.whl", "has_sig": false, "md5_digest": "991e5c815861fd46c14f1047c226fcc5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 682672, "upload_time": "2019-11-04T16:30:19", "upload_time_iso_8601": "2019-11-04T16:30:19.136833Z", "url": "https://files.pythonhosted.org/packages/40/ee/4bee3f43d8597b21e784b0e96500af305ab9736ba85a3a3d7e76a24f7d9f/wflow-2019.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:30:06 2020"}