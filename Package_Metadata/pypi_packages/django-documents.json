{"info": {"author": "James Pic", "author_email": "jamespic@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "django-documents\n================\n\nThis simple app provides:\n\n- a Document model with:\n\n  - a generic many to many relation\n  - a file field that uploads to a private directory\n  - a method get_download_url()\n- a view to download a document which allows custom security checks through a\n  signal\n- a signal, document_pre_download, that is emited by the download view, and\n  which responds with 503 if emiting the signal raises a DownloadForbidden\n  exception\n- clean admin integration\n- south support\n\nInstall django-generic-m2m\n--------------------------\n\nRefer to `django-generic-m2m installation documentation\n<http://django-generic-m2m.readthedocs.org/en/latest/installation.html#installation>`_, do \"Installation\" and \"Adding to your Django Project\".\n\nInstall autocomplete_light\n--------------------------\n\nRefer to `django-autocomplete-light installation documentation\n<http://django-autocomplete-light.readthedocs.org/en/latest/quick.html#quick-install>`_, do \"Quick install\" and \"Quick admin integration\".\n\nInstall django-documents\n------------------------\n\nDownload the lastest release::\n\n    pip install django-documents\n\nOr install the development version::\n\n    pip install -e git+https://github.com/yourlabs/django-documents.git#egg=documents\n\nAdd to settings.INSTALLED_APPS::\n\n    'documents',\n\nIf using south, run::\n\n    ./manage.py migrate\n\nElse, run::\n\n    ./manage.py syncdb\n\nAdd to urls.py::\n\n    url(r'^documents/', include('documents.urls')),\n\n**Set settings.DOCUMENTS_UPLOAD_TO** to the absolute path where uploads should\nbe stored. This must be a private directory.\n\nPrepare the generic many to many autocomplete\n---------------------------------------------\n\nRegister a `generic autocomplete\n<http://django-autocomplete-light.readthedocs.org/en/latest/generic.html#autocompletegeneric>`_,\nwith name \"AutocompleteDocumentRelations\". There is an example in `test_project\n<https://github.com/yourlabs/django-documents/blob/master/test_project/test_project/autocomplete_light_registry.py>`_ which is imported in `urls.py\n<https://github.com/yourlabs/django-documents/blob/master/test_project/test_project/urls.py>`_.\nRefer the `django-autocomplete-light documentation about the registry\n<http://django-autocomplete-light.readthedocs.org/en/latest/forms.html#module-autocomplete_light.registry>`_\nfor alternative methods.\n\nIf the project already uses django-generic-m2m and django-autocomplete-light, a\ngood solution is to re-register the project's generic autocomplete with\nname='AutocompleteDocumentRelations', ie.::\n\n    # your project specific autocomplete\n    class AutocompleteProject(autocomplete_light.AutocompleteGenericBase):\n        # ....\n\n    # register for your project needs\n    autocomplete_light.register(AutocompleteProject)\n\n    # registery for documents relations\n    autocomplete_light.register(AutocompleteProject,\n        name='AutocompleteDocumentRelations')\n\nSecure your documents\n---------------------\n\nConnect to document_pre_import, for example::\n\n    # project specific document permissions\n    import documents\n    def document_security(sender, request, document, **kwargs):\n        if not request.user.is_staff:\n            raise documents.DownloadForbidden()\n    documents.document_pre_download.connect(document_security)\n\nDisplay documents related to a model\n------------------------------------\n\nUse get_related_documents() from Python::\n\n    from documents.models import get_related_documents\n\n    your_model = YourModel.objects.get(pk=XXX)\n\n    related_documents = get_related_documents(your_model)\n\nOr from a template::\n\n    {% load documents_tags %}\n\n    {% for document in your_model|get_related_documents %}\n        {{ document }}\n    {% endfor %}\n\nNote that get_related_documents() returns a QuerySet, ie. you can get a count::\n\n    get_related_documents(your_model).count()\n\nOr from a template::\n\n    {% with related_documents=your_model|get_related_documents %}\n        {{ related_documents.count }}\n    {% endwith %}", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/yourlabs/django-documents", "keywords": "django document", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "django-documents", "package_url": "https://pypi.org/project/django-documents/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-documents/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/yourlabs/django-documents"}, "release_url": "https://pypi.org/project/django-documents/0.0.3/", "requires_dist": null, "requires_python": null, "summary": "Attach documents to django models", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This simple app provides:</p>\n<ul>\n<li>a Document model with:<ul>\n<li>a generic many to many relation</li>\n<li>a file field that uploads to a private directory</li>\n<li>a method get_download_url()</li>\n</ul>\n</li>\n<li>a view to download a document which allows custom security checks through a\nsignal</li>\n<li>a signal, document_pre_download, that is emited by the download view, and\nwhich responds with 503 if emiting the signal raises a DownloadForbidden\nexception</li>\n<li>clean admin integration</li>\n<li>south support</li>\n</ul>\n<div id=\"install-django-generic-m2m\">\n<h2>Install django-generic-m2m</h2>\n<p>Refer to <a href=\"http://django-generic-m2m.readthedocs.org/en/latest/installation.html#installation\" rel=\"nofollow\">django-generic-m2m installation documentation</a>, do \u201cInstallation\u201d and \u201cAdding to your Django Project\u201d.</p>\n</div>\n<div id=\"install-autocomplete-light\">\n<h2>Install autocomplete_light</h2>\n<p>Refer to <a href=\"http://django-autocomplete-light.readthedocs.org/en/latest/quick.html#quick-install\" rel=\"nofollow\">django-autocomplete-light installation documentation</a>, do \u201cQuick install\u201d and \u201cQuick admin integration\u201d.</p>\n</div>\n<div id=\"install-django-documents\">\n<h2>Install django-documents</h2>\n<p>Download the lastest release:</p>\n<pre>pip install django-documents\n</pre>\n<p>Or install the development version:</p>\n<pre>pip install -e git+https://github.com/yourlabs/django-documents.git#egg=documents\n</pre>\n<p>Add to settings.INSTALLED_APPS:</p>\n<pre>'documents',\n</pre>\n<p>If using south, run:</p>\n<pre>./manage.py migrate\n</pre>\n<p>Else, run:</p>\n<pre>./manage.py syncdb\n</pre>\n<p>Add to urls.py:</p>\n<pre>url(r'^documents/', include('documents.urls')),\n</pre>\n<p><strong>Set settings.DOCUMENTS_UPLOAD_TO</strong> to the absolute path where uploads should\nbe stored. This must be a private directory.</p>\n</div>\n<div id=\"prepare-the-generic-many-to-many-autocomplete\">\n<h2>Prepare the generic many to many autocomplete</h2>\n<p>Register a <a href=\"http://django-autocomplete-light.readthedocs.org/en/latest/generic.html#autocompletegeneric\" rel=\"nofollow\">generic autocomplete</a>,\nwith name \u201cAutocompleteDocumentRelations\u201d. There is an example in <a href=\"https://github.com/yourlabs/django-documents/blob/master/test_project/test_project/autocomplete_light_registry.py\" rel=\"nofollow\">test_project</a> which is imported in <a href=\"https://github.com/yourlabs/django-documents/blob/master/test_project/test_project/urls.py\" rel=\"nofollow\">urls.py</a>.\nRefer the <a href=\"http://django-autocomplete-light.readthedocs.org/en/latest/forms.html#module-autocomplete_light.registry\" rel=\"nofollow\">django-autocomplete-light documentation about the registry</a>\nfor alternative methods.</p>\n<p>If the project already uses django-generic-m2m and django-autocomplete-light, a\ngood solution is to re-register the project\u2019s generic autocomplete with\nname=\u2019AutocompleteDocumentRelations\u2019, ie.:</p>\n<pre># your project specific autocomplete\nclass AutocompleteProject(autocomplete_light.AutocompleteGenericBase):\n    # ....\n\n# register for your project needs\nautocomplete_light.register(AutocompleteProject)\n\n# registery for documents relations\nautocomplete_light.register(AutocompleteProject,\n    name='AutocompleteDocumentRelations')\n</pre>\n</div>\n<div id=\"secure-your-documents\">\n<h2>Secure your documents</h2>\n<p>Connect to document_pre_import, for example:</p>\n<pre># project specific document permissions\nimport documents\ndef document_security(sender, request, document, **kwargs):\n    if not request.user.is_staff:\n        raise documents.DownloadForbidden()\ndocuments.document_pre_download.connect(document_security)\n</pre>\n</div>\n<div id=\"display-documents-related-to-a-model\">\n<h2>Display documents related to a model</h2>\n<p>Use get_related_documents() from Python:</p>\n<pre>from documents.models import get_related_documents\n\nyour_model = YourModel.objects.get(pk=XXX)\n\nrelated_documents = get_related_documents(your_model)\n</pre>\n<p>Or from a template:</p>\n<pre>{% load documents_tags %}\n\n{% for document in your_model|get_related_documents %}\n    {{ document }}\n{% endfor %}\n</pre>\n<p>Note that get_related_documents() returns a QuerySet, ie. you can get a count:</p>\n<pre>get_related_documents(your_model).count()\n</pre>\n<p>Or from a template:</p>\n<pre>{% with related_documents=your_model|get_related_documents %}\n    {{ related_documents.count }}\n{% endwith %}\n</pre>\n</div>\n\n          </div>"}, "last_serial": 789492, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0d6f5289dc15425ae879fe14a64cdfda", "sha256": "3f709f879bb6b280d6f787f53a60ae0edb4ce1cde89f5859a02991383ca3d823"}, "downloads": -1, "filename": "django-documents-0.0.1.tar.gz", "has_sig": false, "md5_digest": "0d6f5289dc15425ae879fe14a64cdfda", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5271, "upload_time": "2012-07-11T14:55:36", "upload_time_iso_8601": "2012-07-11T14:55:36.449479Z", "url": "https://files.pythonhosted.org/packages/51/28/6eee26fe76a8b35773defffd2a0a30473702e4d69022d366dade59b14b77/django-documents-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "d1c9e117032fac7c0b1089e9b4a493ea", "sha256": "383505743bd28480f827a7f9b7bc56d8fa7de64186acb28e9fa37b3e581e1f1f"}, "downloads": -1, "filename": "django-documents-0.0.2.tar.gz", "has_sig": false, "md5_digest": "d1c9e117032fac7c0b1089e9b4a493ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5317, "upload_time": "2012-07-11T15:23:35", "upload_time_iso_8601": "2012-07-11T15:23:35.098057Z", "url": "https://files.pythonhosted.org/packages/3d/c2/300d9db660d990b3c80ec847522f47337a0ab1f20fbfedbdb699b1e23e93/django-documents-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "5b927975824bece245a997a0b06ef225", "sha256": "3791bd53cf8866244f397fbf3dbd2a66cb2f67d05aa0bfb23565a7adb78e4804"}, "downloads": -1, "filename": "django-documents-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5b927975824bece245a997a0b06ef225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10200, "upload_time": "2012-07-12T13:43:40", "upload_time_iso_8601": "2012-07-12T13:43:40.665131Z", "url": "https://files.pythonhosted.org/packages/71/12/a893d363f87f9d21ff30626efc96be07ba2800a78ec9d91886dc1a9b3360/django-documents-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b927975824bece245a997a0b06ef225", "sha256": "3791bd53cf8866244f397fbf3dbd2a66cb2f67d05aa0bfb23565a7adb78e4804"}, "downloads": -1, "filename": "django-documents-0.0.3.tar.gz", "has_sig": false, "md5_digest": "5b927975824bece245a997a0b06ef225", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10200, "upload_time": "2012-07-12T13:43:40", "upload_time_iso_8601": "2012-07-12T13:43:40.665131Z", "url": "https://files.pythonhosted.org/packages/71/12/a893d363f87f9d21ff30626efc96be07ba2800a78ec9d91886dc1a9b3360/django-documents-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:32 2020"}