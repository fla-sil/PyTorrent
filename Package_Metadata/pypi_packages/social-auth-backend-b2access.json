{"info": {"author": "Hanne Moa", "author_email": "hanne.moa@uninett.no", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 1.11", "Framework :: Flask", "Framework :: Pyramid", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "social-auth-backend-b2access\n============================\n\nB2ACCESS_ is an easy-to-use and secure Authentication and\nAuthorization platform developed by EUDAT. B2ACCESS offers\nauthentication of users to applications using OAuth 2.0, OpenID\nConnect and SAML.\n\n``social-auth-backend-b2access`` is an OAuth2 client for B2ACCESS\nthat depends on social-auth-core_.\n\nThis is a Python 3 based project. No attempts\nhave been made to make it backwards compatible with Python 2.\n\n\nInstallation\n------------\n\nInstall with ``pip install social-auth-backend-b2access`` or by\ndownloading the source and running ``setup.py``.\n\n\nUsage\n-----\n\nSet up a service at B2ACCESS\n.............................\n\nThere needs to exist an entry for your site/app/service at\nB2ACCESS. Go to `B2ACCESS`_ but do not log in. Click on ``Register\na new account``. In the popup, click on ``OAuth 2.0 Client\nRegistration Form``. This will bring up a new popup, \"Registration\nForm\".\n\nThe ``username`` and ``password`` will be used later to change\ninformation about the app, but will also be used as the OAuth2\n``KEY`` and ``SECRET``. ``mail`` is the correct contact email\naddress for the person responsible for the service. ``OAuth client\nreturn URL`` is what B2ACCESS calls the endpoints to the service.\n``social-auth`` calls these ``redirect uris``, and there can be\nmore than one. ``Admin`` is the name of the person responsible for\nthe service. The ``usage``-field must be filled with at least\n30 characters.\n\nThe redirect uri is of the form ``<type>://<domainpath>/<suffix>/``,\nwhere ``<type>`` is one of ``http`` or ``https``, ``<domainpath>``\nis the domain name of your site and an optional path, and the\n``<suffix>`` is backend-dependent. See the examples under\n**Backends**.\n\nSet up your site\n................\n\nYou'll need to set the client id (username) and client secret\n(password) you chose for B2ACCESS in the settings of your\napp/site.\n\nBoth the name of the settings and the redirect uris depend on the\nbackends used. Add at least one of the backends below.\n\nSee `social's documentation`_ for more.\n\nDjango\n......\n\nIn your ``settings.py``:\n\n* Add ``'social_django'`` to ``INSTALLED_APPS``.\n* Add one or more of the backend names below to the start of\n  ``AUTHENTICATION_BACKENDS``. If you're also using user-models\n  \u00e0 la Django, ``'django.contrib.auth.backends.ModelBackend'``\n  must be in the same list, following the backends.\n* Set ``SOCIAL_AUTH_B2ACCESS_SSL_PROTOCOL`` to ``True`` to force\n  use of SSL.\n* ``SOCIAL_AUTH_LOGIN_REDIRECT_URL``,\n  ``SOCIAL_AUTH_NEW_USER_REDIRECT_URL`` and\n  ``SOCIAL_AUTH_REDIRECT_IS_HTTPS`` will have to be set depending\n  on the needs of your site.\n* If you use the Django admin, you might want to set\n  ``SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS``, for instance to\n  ``['username', 'email']``.\n\nIn your site's ``urls.py``, include:\n\n``url(PREFIX, include('social_django.urls', namespace='social')),``\n\n... where PREFIX is a string to start off the urls with. Empty\nstring, ``''``, is fine.\n\n\nGenerating usernames\n--------------------\n\nBy default, the username that is returned is B2ACCESS'\n\"name\"-field, which holds a full name of a person. Also, the name\nis cleaned via a regular expression, see the table of results below:\n\n+------------+---------+\n| Before     | After   |\n+------------+---------+\n| John Doe   | JohnDoe |\n+------------+---------+\n| Sch\u00fcltz    | Schltz  |\n+------------+---------+\n\nIf you don't want the username to be cleaned, set\n``SOCIAL_AUTH_CLEAN_USERNAMES`` to ``False`` in settings.\n\nIf you want to make the username very url-friendly, set\n``SOCIAL_AUTH_SLUGIFY_USERNAMES`` to ``True``. \"John Doe\" will\nthen be converted to \"john-doe\". This will also strip away\nnon-ASCII letters.\n\nIf you want to use email-addresses for the username, set\n``SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL`` to ``True`` in settings.\n\nIf there already is a user with that username registered, the\nusername will have a random alpahnumeric string appended in order\nto make it unique.\n\nYou might want to let users change this generated username. The\nbackend only cares that a username exists and is unique and won't\nchange the username back.\n\n\nBackends\n--------\n\nb2access.B2ACCESSOAuth2\n.......................\n\nThis is for services in production.\n\nRegister service at\n    `B2ACCESS`_\n\nBackend name\n    ``b2access.B2ACCESSOAuth2``\n\nSettings\n    Client id: ``SOCIAL_AUTH_B2ACCESS_KEY``\n\n    Client secret: ``SOCIAL_AUTH_B2ACCESS_SECRET``\n\nScopes needed\n    ``email`` and ``profile``\n\nRedirect-uri ends with\n    /complete/b2access/\n\nExample redirect uri:\n    http://127.0.0.1/complete/b2access/\n\nb2access.B2ACCESSIntegrationOAuth2\n..................................\n\nThis is for services not yet fully in production.\n\nRegister service at\n    https://b2access-integration.fz-juelich.de/home/\n\nBackend name\n    ``b2access.B2ACCESSIntegrationOAuth2``\n\nSettings\n    Client id: ``SOCIAL_AUTH_B2ACCESS_TEST_KEY``\n\n    Client secret: ``SOCIAL_AUTH_B2ACCESS_TEST_SECRET``\n\nScopes needed\n    ``email`` and ``profile``\n\nRedirect-uri ends with\n    /complete/b2access-test/\n\nExample redirect uri:\n    http://127.0.0.1/complete/b2access-test/\n\n.. _B2ACCESS: https://b2access.eudat.eu/\n.. _social-auth-core: https://python-social-auth.readthedocs.io/en/latest/\n.. _social's documentation: https://python-social-auth.readthedocs.io/en/latest/\n.. _python-social-auth: https://pypi.python.org/pypi/social-auth\n\n\n:Version: 1.0.0\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/UNINETT/python-b2access-auth", "keywords": "django,oauth2", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "social-auth-backend-b2access", "package_url": "https://pypi.org/project/social-auth-backend-b2access/", "platform": "any", "project_url": "https://pypi.org/project/social-auth-backend-b2access/", "project_urls": {"Homepage": "https://github.com/UNINETT/python-b2access-auth"}, "release_url": "https://pypi.org/project/social-auth-backend-b2access/1.0.0/", "requires_dist": ["social-auth-core"], "requires_python": "", "summary": "A plugin for social-auth to authenticate with b2access", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://b2access.eudat.eu/\" rel=\"nofollow\">B2ACCESS</a> is an easy-to-use and secure Authentication and\nAuthorization platform developed by EUDAT. B2ACCESS offers\nauthentication of users to applications using OAuth 2.0, OpenID\nConnect and SAML.</p>\n<p><tt><span class=\"pre\">social-auth-backend-b2access</span></tt> is an OAuth2 client for B2ACCESS\nthat depends on <a href=\"https://python-social-auth.readthedocs.io/en/latest/\" rel=\"nofollow\">social-auth-core</a>.</p>\n<p>This is a Python 3 based project. No attempts\nhave been made to make it backwards compatible with Python 2.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Install with <tt>pip install <span class=\"pre\">social-auth-backend-b2access</span></tt> or by\ndownloading the source and running <tt>setup.py</tt>.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"set-up-a-service-at-b2access\">\n<h3>Set up a service at B2ACCESS</h3>\n<p>There needs to exist an entry for your site/app/service at\nB2ACCESS. Go to <a href=\"https://b2access.eudat.eu/\" rel=\"nofollow\">B2ACCESS</a> but do not log in. Click on <tt>Register\na new account</tt>. In the popup, click on <tt>OAuth 2.0 Client\nRegistration Form</tt>. This will bring up a new popup, \u201cRegistration\nForm\u201d.</p>\n<p>The <tt>username</tt> and <tt>password</tt> will be used later to change\ninformation about the app, but will also be used as the OAuth2\n<tt>KEY</tt> and <tt>SECRET</tt>. <tt>mail</tt> is the correct contact email\naddress for the person responsible for the service. <tt>OAuth client\nreturn URL</tt> is what B2ACCESS calls the endpoints to the service.\n<tt><span class=\"pre\">social-auth</span></tt> calls these <tt>redirect uris</tt>, and there can be\nmore than one. <tt>Admin</tt> is the name of the person responsible for\nthe service. The <tt>usage</tt>-field must be filled with at least\n30 characters.</p>\n<p>The redirect uri is of the form <tt><span class=\"pre\">&lt;type&gt;://&lt;domainpath&gt;/&lt;suffix&gt;/</span></tt>,\nwhere <tt>&lt;type&gt;</tt> is one of <tt>http</tt> or <tt>https</tt>, <tt>&lt;domainpath&gt;</tt>\nis the domain name of your site and an optional path, and the\n<tt>&lt;suffix&gt;</tt> is backend-dependent. See the examples under\n<strong>Backends</strong>.</p>\n</div>\n<div id=\"set-up-your-site\">\n<h3>Set up your site</h3>\n<p>You\u2019ll need to set the client id (username) and client secret\n(password) you chose for B2ACCESS in the settings of your\napp/site.</p>\n<p>Both the name of the settings and the redirect uris depend on the\nbackends used. Add at least one of the backends below.</p>\n<p>See <a href=\"https://python-social-auth.readthedocs.io/en/latest/\" rel=\"nofollow\">social\u2019s documentation</a> for more.</p>\n</div>\n<div id=\"django\">\n<h3>Django</h3>\n<p>In your <tt>settings.py</tt>:</p>\n<ul>\n<li>Add <tt>'social_django'</tt> to <tt>INSTALLED_APPS</tt>.</li>\n<li>Add one or more of the backend names below to the start of\n<tt>AUTHENTICATION_BACKENDS</tt>. If you\u2019re also using user-models\n\u00e0 la Django, <tt>'django.contrib.auth.backends.ModelBackend'</tt>\nmust be in the same list, following the backends.</li>\n<li>Set <tt>SOCIAL_AUTH_B2ACCESS_SSL_PROTOCOL</tt> to <tt>True</tt> to force\nuse of SSL.</li>\n<li><tt>SOCIAL_AUTH_LOGIN_REDIRECT_URL</tt>,\n<tt>SOCIAL_AUTH_NEW_USER_REDIRECT_URL</tt> and\n<tt>SOCIAL_AUTH_REDIRECT_IS_HTTPS</tt> will have to be set depending\non the needs of your site.</li>\n<li>If you use the Django admin, you might want to set\n<tt>SOCIAL_AUTH_ADMIN_USER_SEARCH_FIELDS</tt>, for instance to\n<tt>['username', 'email']</tt>.</li>\n</ul>\n<p>In your site\u2019s <tt>urls.py</tt>, include:</p>\n<p><tt>url(PREFIX, <span class=\"pre\">include('social_django.urls',</span> <span class=\"pre\">namespace='social')),</span></tt></p>\n<p>\u2026 where PREFIX is a string to start off the urls with. Empty\nstring, <tt>''</tt>, is fine.</p>\n</div>\n</div>\n<div id=\"generating-usernames\">\n<h2>Generating usernames</h2>\n<p>By default, the username that is returned is B2ACCESS\u2019\n\u201cname\u201d-field, which holds a full name of a person. Also, the name\nis cleaned via a regular expression, see the table of results below:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Before</td>\n<td>After</td>\n</tr>\n<tr><td>John Doe</td>\n<td>JohnDoe</td>\n</tr>\n<tr><td>Sch\u00fcltz</td>\n<td>Schltz</td>\n</tr>\n</tbody>\n</table>\n<p>If you don\u2019t want the username to be cleaned, set\n<tt>SOCIAL_AUTH_CLEAN_USERNAMES</tt> to <tt>False</tt> in settings.</p>\n<p>If you want to make the username very url-friendly, set\n<tt>SOCIAL_AUTH_SLUGIFY_USERNAMES</tt> to <tt>True</tt>. \u201cJohn Doe\u201d will\nthen be converted to \u201cjohn-doe\u201d. This will also strip away\nnon-ASCII letters.</p>\n<p>If you want to use email-addresses for the username, set\n<tt>SOCIAL_AUTH_USERNAME_IS_FULL_EMAIL</tt> to <tt>True</tt> in settings.</p>\n<p>If there already is a user with that username registered, the\nusername will have a random alpahnumeric string appended in order\nto make it unique.</p>\n<p>You might want to let users change this generated username. The\nbackend only cares that a username exists and is unique and won\u2019t\nchange the username back.</p>\n</div>\n<div id=\"backends\">\n<h2>Backends</h2>\n<div id=\"b2access-b2accessoauth2\">\n<h3>b2access.B2ACCESSOAuth2</h3>\n<p>This is for services in production.</p>\n<dl>\n<dt>Register service at</dt>\n<dd><a href=\"https://b2access.eudat.eu/\" rel=\"nofollow\">B2ACCESS</a></dd>\n<dt>Backend name</dt>\n<dd><tt>b2access.B2ACCESSOAuth2</tt></dd>\n<dt>Settings</dt>\n<dd><p>Client id: <tt>SOCIAL_AUTH_B2ACCESS_KEY</tt></p>\n<p>Client secret: <tt>SOCIAL_AUTH_B2ACCESS_SECRET</tt></p>\n</dd>\n<dt>Scopes needed</dt>\n<dd><tt>email</tt> and <tt>profile</tt></dd>\n<dt>Redirect-uri ends with</dt>\n<dd>/complete/b2access/</dd>\n<dt>Example redirect uri:</dt>\n<dd><a href=\"http://127.0.0.1/complete/b2access/\" rel=\"nofollow\">http://127.0.0.1/complete/b2access/</a></dd>\n</dl>\n</div>\n<div id=\"b2access-b2accessintegrationoauth2\">\n<h3>b2access.B2ACCESSIntegrationOAuth2</h3>\n<p>This is for services not yet fully in production.</p>\n<dl>\n<dt>Register service at</dt>\n<dd><a href=\"https://b2access-integration.fz-juelich.de/home/\" rel=\"nofollow\">https://b2access-integration.fz-juelich.de/home/</a></dd>\n<dt>Backend name</dt>\n<dd><tt>b2access.B2ACCESSIntegrationOAuth2</tt></dd>\n<dt>Settings</dt>\n<dd><p>Client id: <tt>SOCIAL_AUTH_B2ACCESS_TEST_KEY</tt></p>\n<p>Client secret: <tt>SOCIAL_AUTH_B2ACCESS_TEST_SECRET</tt></p>\n</dd>\n<dt>Scopes needed</dt>\n<dd><tt>email</tt> and <tt>profile</tt></dd>\n<dt>Redirect-uri ends with</dt>\n<dd>/complete/b2access-test/</dd>\n<dt>Example redirect uri:</dt>\n<dd><a href=\"http://127.0.0.1/complete/b2access-test/\" rel=\"nofollow\">http://127.0.0.1/complete/b2access-test/</a></dd>\n</dl>\n<table>\n<col>\n<col>\n<tbody>\n<tr><th>Version:</th><td>1.0.0</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n\n          </div>"}, "last_serial": 3412694, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "cbc90c1c5aa35ebd98ae23813b8d96b8", "sha256": "1a8c56c8b7fe9743317ccfe2fae7efb095bcdcc78aa301c39e6a0cb6b4a4ddab"}, "downloads": -1, "filename": "social_auth_backend_b2access-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbc90c1c5aa35ebd98ae23813b8d96b8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7776, "upload_time": "2017-12-11T12:16:29", "upload_time_iso_8601": "2017-12-11T12:16:29.908615Z", "url": "https://files.pythonhosted.org/packages/e4/79/2e8d4dbcdf5ec8ede7d54aac989c3247e0146135d3f3786f47a6ce58b53c/social_auth_backend_b2access-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6798218095dac931aee6943970269073", "sha256": "f1b0eac475ea7793b3852cc92aa76981ce8be39ff1f6a23e11b4229f95c2134b"}, "downloads": -1, "filename": "social-auth-backend-b2access-0.1.0.tar.gz", "has_sig": false, "md5_digest": "6798218095dac931aee6943970269073", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5478, "upload_time": "2017-12-11T12:16:31", "upload_time_iso_8601": "2017-12-11T12:16:31.716770Z", "url": "https://files.pythonhosted.org/packages/e2/42/ee78521adbc280347b170b447147a1b2b177c34b670061922522696d3185/social-auth-backend-b2access-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "1fa02265904877c30d234febbe81974d", "sha256": "93a62adbc520866b7d1447b1ff26da52a6f9e69ad02bed4ced666dfd421f6539"}, "downloads": -1, "filename": "social_auth_backend_b2access-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1fa02265904877c30d234febbe81974d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7778, "upload_time": "2017-12-13T09:35:05", "upload_time_iso_8601": "2017-12-13T09:35:05.147688Z", "url": "https://files.pythonhosted.org/packages/5d/ec/770893fd1ec95de7cde33f1edd385b42ac1d544b7243db6d1137f03ee37a/social_auth_backend_b2access-1.0.0-py2.py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1fa02265904877c30d234febbe81974d", "sha256": "93a62adbc520866b7d1447b1ff26da52a6f9e69ad02bed4ced666dfd421f6539"}, "downloads": -1, "filename": "social_auth_backend_b2access-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1fa02265904877c30d234febbe81974d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7778, "upload_time": "2017-12-13T09:35:05", "upload_time_iso_8601": "2017-12-13T09:35:05.147688Z", "url": "https://files.pythonhosted.org/packages/5d/ec/770893fd1ec95de7cde33f1edd385b42ac1d544b7243db6d1137f03ee37a/social_auth_backend_b2access-1.0.0-py2.py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:07:06 2020"}