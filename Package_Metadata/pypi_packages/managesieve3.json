{"info": {"author": "Eric V. Smith", "author_email": "eric@trueblade.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "============\nmanagesieve3\n============\n\nOverview\n========\n\nA pure Python client implementation of \"A Protocol for Remotely\nManaging Sieve Scripts\", as defined in `RFC-5804\n<https://tools.ietf.org/html/rfc5804>`_.  It works with either Python\n2.7 or Python 3.3+.\n\nModule Contents\n===============\n\nclass Managesieve\n-----------------\n\nThe main class for interactive with sieve server.\n\nHere are the members of the *Managesive* class.  All of these methods\nmay raise a *ServerResponseNo* or *ServerResponseBye* exception.  See\nRFC-5804 for details on when *NO* or *BYE* is returned by the server.\n\n*Managesieve(host=None, port=None)*\n\n   If *host* is *None*, it defaults to 'localhost'.  If *port* is\n   None, it defaults to 4190.  The connection to the server is\n   immediately made.  This method may raise any exception raised by\n   the *socket* module.\n\n*cmd_authenticate(auth_type, options=None)*\n\n   Send an *AUTHENTICATION* request to the sieve server, along with\n   the speficied options, any.  On success, returns None.  If the\n   authentication fails, a *ServerResponseNo* exception is raised.\n\n*cmd_capability()*\n\n   Send a *CAPABILITY* request to the sieve server.  Returns a list of\n   tuples, one per capability returned by the server.\n\n*cmd_checkscript(contents)*\n\n   Send a *CHECKSCRIPT* request to the sieve server.  If the contents\n   of the script are valid, returns *None*.  Otherwise, a\n   *ServerResponseNo* exception is raised.\n\n*cmd_deletescript(name)*\n\n   Send a *DELETESCRIPT* request to the sieve server.  The script\n   *name* is deleted.  Returns *None* on success.  Raises a\n   *ServerResponseNo* if the script cannot be deleted (for example, if\n   it does not exist or is the currently active script).\n\n*cmd_getscript(name)*\n\n   Send a *GETSCRIPT* request to the sieve server.  On success, the\n   contents script named *name* is returned.  On error (for example,\n   if the script does not exist), a *ServerResponseNo* exception is\n   raised.\n\n*cmd_havespace(name, size)*\n\n   Send a *HAVESPACE* request to the sieve server.  *name* is the name\n   of a possibly non-existent script, and *size* a size, in bytes.  If\n   the server is willing to store a script named *name* of size\n   *size*, then *None* is returned.  Otherwise, a *ServerResponseNo*\n   exception is raised.\n\n*cmd_listscripts()*\n\n   Send a *LISTSCRIPT* request to the sieve server.  On success, a\n   2-tuple is returned.  The first element is a set containing the\n   names of all of the scripts on the server.  If a script is active,\n   its name is returned in the second element of the tuple.  If no\n   script is active, the second element is *None*.\n\n*cmd_logout()*\n\n   Send a *LOGOUT* request to the sieve server.  The user is logged\n   out, and on success *None* is returned.\n\n*cmd_noop()*\n\n   Send a *NOOP* request to the sieve server.  This is a protocol\n   no-op, and may be used to keep the connection alive.  *None* is\n   returned.\n\n*cmd_putscript(name, contents)*\n\n   Send a *PUTSCRIPT* request to the sieve server.  A script with name\n   *name* and contents specified by *contents* is stored on the\n   server.  On success, *None* is returned.  If an error occurs,\n   including the script contents being invalid, a *ServerResponseNo*\n   exception is raised.  Note that putting a script to the server does\n   not change the currently active script.\n\n*cmd_renamescript(oldname, newname)*\n\n   Send a *RENAMESCRIPT* request to the sieve server.  The script\n   named *oldname* is renamed to *newname*.  *None* is returned on\n   success.\n\n*cmd_setactive(name)*\n\n   Send a *SETACTIVE* request to the sieve server.  The script named\n   *name* is set as the active script.  Returns *None* on success.\n\n*cmd_starttls(keyfile=None, certfile=None, cert_reqs=_ssl.CERT_NONE, ssl_version=_ssl.PROTOCOL_SSLv23, ca_certs=None, ciphers=None)*\n\n   Send a *STARTTLS* request to the sieve server.  *keyfile* and\n   *certfile* are currently ignored.  On success, the conenction to\n   the sieve server is now encrypted.  The return value is the same as\n   *cmd_capabilities*, which may have changed since the connection was\n   first opened.\n\n   The *keyfile*, *certfile*, *cert_reqs*, *ssl_version*, *ca_certs*,\n   and *cipher* parameters have the same meaning as (and are passed\n   directly to) *ssl.wrap_socket*.\n\n*login_plain(username, authuser, password)*\n\n   Logs on to the sieve server, using the *PLAIN* authentication\n   scheme.  *username* is the user whose account will be accessed.\n   *authuser* is the name of the user being authenticated, and\n   *password* is that password for *authuser*.\n\nExceptions\n----------\n\nBaseException\n+++++++++++++\n\nThe base class for all exceptions raised by managesieve3.\n\nServerResponseNo\n++++++++++++++++\n\nThe sieve server sent an unexpected *NO* response.  See RFC-5804 for\ndetails.\n\nAvailable fields are:\n\n+-----------+------------------------------------------------------+\n| Name      | Description                                          |\n+-----------+------------------------------------------------------+\n| *name*    | The name of the RFC-5804 command that was being      |\n|           | executed when the server returned a NO response.     |\n+-----------+------------------------------------------------------+\n| *code*    | The code returned in the NO response.  This is a     |\n|           | list (possibly of length 1) of the heirarchical      |\n|           | response codes.                                      |\n+-----------+------------------------------------------------------+\n| *text*    | The human readable text error message, if any.       |\n+-----------+------------------------------------------------------+\n| *results* | The textual body of the response, if any.            |\n+-----------+------------------------------------------------------+\n\n\nServerResponseBye\n+++++++++++++++++\n\n\nThe sieve server sent a *BYE* response.  See RFC-5804 for details.\n\nAvailable fields are:\n\n+-----------+------------------------------------------------------+\n| Name      | Description                                          |\n+-----------+------------------------------------------------------+\n| *name*    | The name of the RFC-5804 command that was being      |\n|           | executed when the server returned a BYE response.    |\n+-----------+------------------------------------------------------+\n| *code*    | The code returned in the BYE response.  This is a    |\n|           | list (possibly of length 1) of the heirarchical      |\n|           | response codes.                                      |\n+-----------+------------------------------------------------------+\n| *text*    | The human readable text error message, if any.       |\n+-----------+------------------------------------------------------+\n| *results* | The textual body of the response, if any.            |\n+-----------+------------------------------------------------------+\n\nServerProtocolError\n+++++++++++++++++++\n\nThe client code detected a protocol error when talking to the sieve\nserver.\n\nChange log\n==========\n\n1.1 2016-10-27 Eric V. Smith\n----------------------------\n\n* Remove hack for setting RPM name (issue #4).\n\n* Always use setuptools (issue #3).\n\n* Add additional ssl.wrap_socket() parameters to starttls().\n\n\n1.0 2015-06-02 Eric V. Smith\n----------------------------\n\n* Initial release.\n\n* Implements all RFC-5804 commands.\n\n* Contains an extensive test suite for command parsing. I really need\n  to create a dummy server to test the socket handling and STARTTLS.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/ericvsmith/managesieve3", "keywords": "", "license": "Apache License Version 2.0", "maintainer": "", "maintainer_email": "", "name": "managesieve3", "package_url": "https://pypi.org/project/managesieve3/", "platform": "", "project_url": "https://pypi.org/project/managesieve3/", "project_urls": {"Homepage": "https://bitbucket.org/ericvsmith/managesieve3"}, "release_url": "https://pypi.org/project/managesieve3/1.1/", "requires_dist": null, "requires_python": "", "summary": "Implements an RFC-5804 Manage Sieve client.", "version": "1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>A pure Python client implementation of \u201cA Protocol for Remotely\nManaging Sieve Scripts\u201d, as defined in <a href=\"https://tools.ietf.org/html/rfc5804\" rel=\"nofollow\">RFC-5804</a>.  It works with either Python\n2.7 or Python 3.3+.</p>\n</div>\n<div id=\"module-contents\">\n<h2>Module Contents</h2>\n<div id=\"class-managesieve\">\n<h3>class Managesieve</h3>\n<p>The main class for interactive with sieve server.</p>\n<p>Here are the members of the <em>Managesive</em> class.  All of these methods\nmay raise a <em>ServerResponseNo</em> or <em>ServerResponseBye</em> exception.  See\nRFC-5804 for details on when <em>NO</em> or <em>BYE</em> is returned by the server.</p>\n<p><em>Managesieve(host=None, port=None)</em></p>\n<blockquote>\nIf <em>host</em> is <em>None</em>, it defaults to \u2018localhost\u2019.  If <em>port</em> is\nNone, it defaults to 4190.  The connection to the server is\nimmediately made.  This method may raise any exception raised by\nthe <em>socket</em> module.</blockquote>\n<p><em>cmd_authenticate(auth_type, options=None)</em></p>\n<blockquote>\nSend an <em>AUTHENTICATION</em> request to the sieve server, along with\nthe speficied options, any.  On success, returns None.  If the\nauthentication fails, a <em>ServerResponseNo</em> exception is raised.</blockquote>\n<p><em>cmd_capability()</em></p>\n<blockquote>\nSend a <em>CAPABILITY</em> request to the sieve server.  Returns a list of\ntuples, one per capability returned by the server.</blockquote>\n<p><em>cmd_checkscript(contents)</em></p>\n<blockquote>\nSend a <em>CHECKSCRIPT</em> request to the sieve server.  If the contents\nof the script are valid, returns <em>None</em>.  Otherwise, a\n<em>ServerResponseNo</em> exception is raised.</blockquote>\n<p><em>cmd_deletescript(name)</em></p>\n<blockquote>\nSend a <em>DELETESCRIPT</em> request to the sieve server.  The script\n<em>name</em> is deleted.  Returns <em>None</em> on success.  Raises a\n<em>ServerResponseNo</em> if the script cannot be deleted (for example, if\nit does not exist or is the currently active script).</blockquote>\n<p><em>cmd_getscript(name)</em></p>\n<blockquote>\nSend a <em>GETSCRIPT</em> request to the sieve server.  On success, the\ncontents script named <em>name</em> is returned.  On error (for example,\nif the script does not exist), a <em>ServerResponseNo</em> exception is\nraised.</blockquote>\n<p><em>cmd_havespace(name, size)</em></p>\n<blockquote>\nSend a <em>HAVESPACE</em> request to the sieve server.  <em>name</em> is the name\nof a possibly non-existent script, and <em>size</em> a size, in bytes.  If\nthe server is willing to store a script named <em>name</em> of size\n<em>size</em>, then <em>None</em> is returned.  Otherwise, a <em>ServerResponseNo</em>\nexception is raised.</blockquote>\n<p><em>cmd_listscripts()</em></p>\n<blockquote>\nSend a <em>LISTSCRIPT</em> request to the sieve server.  On success, a\n2-tuple is returned.  The first element is a set containing the\nnames of all of the scripts on the server.  If a script is active,\nits name is returned in the second element of the tuple.  If no\nscript is active, the second element is <em>None</em>.</blockquote>\n<p><em>cmd_logout()</em></p>\n<blockquote>\nSend a <em>LOGOUT</em> request to the sieve server.  The user is logged\nout, and on success <em>None</em> is returned.</blockquote>\n<p><em>cmd_noop()</em></p>\n<blockquote>\nSend a <em>NOOP</em> request to the sieve server.  This is a protocol\nno-op, and may be used to keep the connection alive.  <em>None</em> is\nreturned.</blockquote>\n<p><em>cmd_putscript(name, contents)</em></p>\n<blockquote>\nSend a <em>PUTSCRIPT</em> request to the sieve server.  A script with name\n<em>name</em> and contents specified by <em>contents</em> is stored on the\nserver.  On success, <em>None</em> is returned.  If an error occurs,\nincluding the script contents being invalid, a <em>ServerResponseNo</em>\nexception is raised.  Note that putting a script to the server does\nnot change the currently active script.</blockquote>\n<p><em>cmd_renamescript(oldname, newname)</em></p>\n<blockquote>\nSend a <em>RENAMESCRIPT</em> request to the sieve server.  The script\nnamed <em>oldname</em> is renamed to <em>newname</em>.  <em>None</em> is returned on\nsuccess.</blockquote>\n<p><em>cmd_setactive(name)</em></p>\n<blockquote>\nSend a <em>SETACTIVE</em> request to the sieve server.  The script named\n<em>name</em> is set as the active script.  Returns <em>None</em> on success.</blockquote>\n<p><em>cmd_starttls(keyfile=None, certfile=None, cert_reqs=_ssl.CERT_NONE, ssl_version=_ssl.PROTOCOL_SSLv23, ca_certs=None, ciphers=None)</em></p>\n<blockquote>\n<p>Send a <em>STARTTLS</em> request to the sieve server.  <em>keyfile</em> and\n<em>certfile</em> are currently ignored.  On success, the conenction to\nthe sieve server is now encrypted.  The return value is the same as\n<em>cmd_capabilities</em>, which may have changed since the connection was\nfirst opened.</p>\n<p>The <em>keyfile</em>, <em>certfile</em>, <em>cert_reqs</em>, <em>ssl_version</em>, <em>ca_certs</em>,\nand <em>cipher</em> parameters have the same meaning as (and are passed\ndirectly to) <em>ssl.wrap_socket</em>.</p>\n</blockquote>\n<p><em>login_plain(username, authuser, password)</em></p>\n<blockquote>\nLogs on to the sieve server, using the <em>PLAIN</em> authentication\nscheme.  <em>username</em> is the user whose account will be accessed.\n<em>authuser</em> is the name of the user being authenticated, and\n<em>password</em> is that password for <em>authuser</em>.</blockquote>\n</div>\n<div id=\"exceptions\">\n<h3>Exceptions</h3>\n<div id=\"baseexception\">\n<h4>BaseException</h4>\n<p>The base class for all exceptions raised by managesieve3.</p>\n</div>\n<div id=\"serverresponseno\">\n<h4>ServerResponseNo</h4>\n<p>The sieve server sent an unexpected <em>NO</em> response.  See RFC-5804 for\ndetails.</p>\n<p>Available fields are:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Name</td>\n<td>Description</td>\n</tr>\n<tr><td><em>name</em></td>\n<td>The name of the RFC-5804 command that was being\nexecuted when the server returned a NO response.</td>\n</tr>\n<tr><td><em>code</em></td>\n<td>The code returned in the NO response.  This is a\nlist (possibly of length 1) of the heirarchical\nresponse codes.</td>\n</tr>\n<tr><td><em>text</em></td>\n<td>The human readable text error message, if any.</td>\n</tr>\n<tr><td><em>results</em></td>\n<td>The textual body of the response, if any.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"serverresponsebye\">\n<h4>ServerResponseBye</h4>\n<p>The sieve server sent a <em>BYE</em> response.  See RFC-5804 for details.</p>\n<p>Available fields are:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>Name</td>\n<td>Description</td>\n</tr>\n<tr><td><em>name</em></td>\n<td>The name of the RFC-5804 command that was being\nexecuted when the server returned a BYE response.</td>\n</tr>\n<tr><td><em>code</em></td>\n<td>The code returned in the BYE response.  This is a\nlist (possibly of length 1) of the heirarchical\nresponse codes.</td>\n</tr>\n<tr><td><em>text</em></td>\n<td>The human readable text error message, if any.</td>\n</tr>\n<tr><td><em>results</em></td>\n<td>The textual body of the response, if any.</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"serverprotocolerror\">\n<h4>ServerProtocolError</h4>\n<p>The client code detected a protocol error when talking to the sieve\nserver.</p>\n</div>\n</div>\n</div>\n<div id=\"change-log\">\n<h2>Change log</h2>\n<div id=\"eric-v-smith\">\n<h3>1.1 2016-10-27 Eric V. Smith</h3>\n<ul>\n<li>Remove hack for setting RPM name (issue #4).</li>\n<li>Always use setuptools (issue #3).</li>\n<li>Add additional ssl.wrap_socket() parameters to starttls().</li>\n</ul>\n</div>\n<div id=\"id1\">\n<h3>1.0 2015-06-02 Eric V. Smith</h3>\n<ul>\n<li>Initial release.</li>\n<li>Implements all RFC-5804 commands.</li>\n<li>Contains an extensive test suite for command parsing. I really need\nto create a dummy server to test the socket handling and STARTTLS.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 2425845, "releases": {"0.1a5": [{"comment_text": "", "digests": {"md5": "1862819ba4098d01699802d9a5d3314f", "sha256": "b4da0d17161195821235d0a9496688c3bb03f393c0b45bed89e3602fc6e2adb7"}, "downloads": -1, "filename": "managesieve3-0.1a5.tar.gz", "has_sig": false, "md5_digest": "1862819ba4098d01699802d9a5d3314f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9976, "upload_time": "2015-06-01T10:37:23", "upload_time_iso_8601": "2015-06-01T10:37:23.064457Z", "url": "https://files.pythonhosted.org/packages/6a/38/632455f185d08809f58bfcc8bc60d00edc2b414f94f3bbb08fc33792eab6/managesieve3-0.1a5.tar.gz", "yanked": false}], "0.1a6": [{"comment_text": "", "digests": {"md5": "1ff881559af964d8e6066c6587e33a4f", "sha256": "8fe27dd56967a41994137c8273c3e851a4f04ebfeb8dbf19903c341b8ab7c9e3"}, "downloads": -1, "filename": "managesieve3-0.1a6.tar.gz", "has_sig": false, "md5_digest": "1ff881559af964d8e6066c6587e33a4f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13836, "upload_time": "2015-06-02T15:59:43", "upload_time_iso_8601": "2015-06-02T15:59:43.164905Z", "url": "https://files.pythonhosted.org/packages/c4/cb/6c78d91ac1c520bdc40fd0e16b0965344b81160efa40a849f9a530a16b69/managesieve3-0.1a6.tar.gz", "yanked": false}], "1.0": [{"comment_text": "", "digests": {"md5": "e16d1c321fbd9cde5fbdfa5dfdbbfe6a", "sha256": "60b25434367cbcaf554f5343b32d18f143bf53f811083a3aba0f47121b623d30"}, "downloads": -1, "filename": "managesieve3-1.0.tar.gz", "has_sig": false, "md5_digest": "e16d1c321fbd9cde5fbdfa5dfdbbfe6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14578, "upload_time": "2015-06-02T19:07:06", "upload_time_iso_8601": "2015-06-02T19:07:06.435107Z", "url": "https://files.pythonhosted.org/packages/9f/7f/a0a373ce5baf176fece2908b2e73b7594926aabac4727a0be49ed8376506/managesieve3-1.0.tar.gz", "yanked": false}], "1.1": [{"comment_text": "", "digests": {"md5": "bb150baf7bfcb2ad68232216a612f98f", "sha256": "1cc6241cb4217b7191820fa0554efb67702c4501db63ddec7e9271e5c58c9a78"}, "downloads": -1, "filename": "managesieve3-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bb150baf7bfcb2ad68232216a612f98f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11007, "upload_time": "2016-10-27T10:18:11", "upload_time_iso_8601": "2016-10-27T10:18:11.168325Z", "url": "https://files.pythonhosted.org/packages/24/c1/a09d4847a59e8ac3dc950b5b88b6d23ce789f431acbe3b1b4ed9a5fa3bd1/managesieve3-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "707cf4d7cec1620005b10992e2fec8a2", "sha256": "7c43f23d8d0c83b6aaae93a0f661cef9c4657bbc90cc7c9cf37e775150c021ab"}, "downloads": -1, "filename": "managesieve3-1.1.tar.gz", "has_sig": false, "md5_digest": "707cf4d7cec1620005b10992e2fec8a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15106, "upload_time": "2016-10-27T10:18:13", "upload_time_iso_8601": "2016-10-27T10:18:13.181678Z", "url": "https://files.pythonhosted.org/packages/a7/7c/f8f5ad82e73c6471048f10661b3abd0671bb15b62587c547eabbf477edeb/managesieve3-1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bb150baf7bfcb2ad68232216a612f98f", "sha256": "1cc6241cb4217b7191820fa0554efb67702c4501db63ddec7e9271e5c58c9a78"}, "downloads": -1, "filename": "managesieve3-1.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "bb150baf7bfcb2ad68232216a612f98f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 11007, "upload_time": "2016-10-27T10:18:11", "upload_time_iso_8601": "2016-10-27T10:18:11.168325Z", "url": "https://files.pythonhosted.org/packages/24/c1/a09d4847a59e8ac3dc950b5b88b6d23ce789f431acbe3b1b4ed9a5fa3bd1/managesieve3-1.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "707cf4d7cec1620005b10992e2fec8a2", "sha256": "7c43f23d8d0c83b6aaae93a0f661cef9c4657bbc90cc7c9cf37e775150c021ab"}, "downloads": -1, "filename": "managesieve3-1.1.tar.gz", "has_sig": false, "md5_digest": "707cf4d7cec1620005b10992e2fec8a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15106, "upload_time": "2016-10-27T10:18:13", "upload_time_iso_8601": "2016-10-27T10:18:13.181678Z", "url": "https://files.pythonhosted.org/packages/a7/7c/f8f5ad82e73c6471048f10661b3abd0671bb15b62587c547eabbf477edeb/managesieve3-1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:37 2020"}