{"info": {"author": "Parker Edwards", "author_email": "pedwards@ufl.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7"], "description": "tdasampling\n-------------\n\nCopyright (C) 2019 `Parker\nEdwards <https://people.clas.ufl.edu/pedwards>`__\n\nExternal requirements\n---------------------\n\n1. `Bertini <https://bertini.nd.edu/>`__\n2. `Libspatialindex <https://libspatialindex.github.io/>`__ (A\n   requirement of the Python package\n   `Rtree <https://pypi.python.org/pypi/Rtree/>`__)\n3. An mpiexec executable, like the one you can compile from source\n   `here <https://www.open-mpi.org/software/ompi/v3.0/>`__\n\nDescription\n-----------\n\nPython package for sampling real algebraic varieties from their\npolynomial systems. See the article https://arxiv.org/abs/1802.07716 for\ntheoretical details. It has been tested on Linux.\n\nThe package installs two command line scripts:\n\n1. **tdasampling** - Entry point to the main sampling algorithm.\n2. **sampling-setup** - Script for setting up a directory for sampling\n   computation from just a list of polynomials in the system.\n\nSee the included tutorial for detailed information about all the\ndifferent options.\n\nVersion 1.1.4\n-------------\n\nBasic usage for tdasampling\n---------------------------\n\n.. code:: shell\n\n    $ tdasampling [options] bounds density number_of_functions_in_system execution_directory\n\n-  Bounds is a list of a form like -1.0,1.0,-1.0,1.0, which indicates\n   the region in which to sample the polynomial system is box [-1.0,1.0]\n   x [-1.0,1.0] in Euclidean space\n-  execution\\_directory is a directory containing, at minimum:\n-  A *minimizer* directory which contains parameter homotopy files for\n   Bertini. Unless you have experience with Bertini, set these up with\n   ``sampling-setup``\n-  (*Recommended, not required*) A parameters file *parameters.json*.\n   See examples for format. If you include a *parameters.json* file and\n   use the option flag ``--parameters`` with ``tdasampling``, the\n   *parameters.json* file should include all the information except\n   ``execution_directory``, which can then be omitted from the command\n   line call.\n\nBasic usage for sampling-setup\n------------------------------\n\n.. code:: shell\n\n    $ sampling-setup [options] path_to_directory_to_setup\n\n-  The directory indicated at ``path_to_directory_to_setup`` should\n   contain a file named *polynomial\\_system*. The general format of that\n   file is text:\n\n::\n\n    list of variable names separated by commas\n    polynomial 1\n    polynomial 2 \n    ...\n    polynomial n\n\nFor example, if we were sampling from a circle of radius 1:\n\n::\n\n    x1,x2\n    x1^2 + x2^2 - 1\n\n-  ``--mpiexecutable /a/path/to/mpiexec`` option to indicate a path to\n   ``mpiexec``. Unnecesssary if your ``mpiexec`` can be called as\n   ``mpiexec``\n-  ``--bertini /a/path/to/bertini``: a path to your ``bertini``\n   executable if it cannot be called as ``bertini``\n-  ``--processors k``: the number of processes you would like to use for\n   the ``bertini`` solving run associated with setup\n-  ``--hosts name1,name2,...,namek``: list of ssh names for nodes to use\n   for the ``bertini`` computation. By default, the ``bertini`` run will\n   run only on your local machine\n\nLicense\n-------\n\ntdasampling is licensed under an MIT license.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/P-Edwards/tdasampling", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tdasampling", "package_url": "https://pypi.org/project/tdasampling/", "platform": "", "project_url": "https://pypi.org/project/tdasampling/", "project_urls": {"Homepage": "https://github.com/P-Edwards/tdasampling"}, "release_url": "https://pypi.org/project/tdasampling/1.1.4/", "requires_dist": null, "requires_python": "", "summary": "Compute dense samples of real algebraic varieties for use with topological data analysis tools.", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"tdasampling\">\n<h2>tdasampling</h2>\n<p>Copyright (C) 2019 <a href=\"https://people.clas.ufl.edu/pedwards\" rel=\"nofollow\">Parker\nEdwards</a></p>\n</div>\n<div id=\"external-requirements\">\n<h2>External requirements</h2>\n<ol>\n<li><a href=\"https://bertini.nd.edu/\" rel=\"nofollow\">Bertini</a></li>\n<li><a href=\"https://libspatialindex.github.io/\" rel=\"nofollow\">Libspatialindex</a> (A\nrequirement of the Python package\n<a href=\"https://pypi.python.org/pypi/Rtree/\" rel=\"nofollow\">Rtree</a>)</li>\n<li>An mpiexec executable, like the one you can compile from source\n<a href=\"https://www.open-mpi.org/software/ompi/v3.0/\" rel=\"nofollow\">here</a></li>\n</ol>\n</div>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Python package for sampling real algebraic varieties from their\npolynomial systems. See the article <a href=\"https://arxiv.org/abs/1802.07716\" rel=\"nofollow\">https://arxiv.org/abs/1802.07716</a> for\ntheoretical details. It has been tested on Linux.</p>\n<p>The package installs two command line scripts:</p>\n<ol>\n<li><strong>tdasampling</strong> - Entry point to the main sampling algorithm.</li>\n<li><strong>sampling-setup</strong> - Script for setting up a directory for sampling\ncomputation from just a list of polynomials in the system.</li>\n</ol>\n<p>See the included tutorial for detailed information about all the\ndifferent options.</p>\n</div>\n<div id=\"version-1-1-4\">\n<h2>Version 1.1.4</h2>\n</div>\n<div id=\"basic-usage-for-tdasampling\">\n<h2>Basic usage for tdasampling</h2>\n<pre>$ tdasampling <span class=\"o\">[</span>options<span class=\"o\">]</span> bounds density number_of_functions_in_system execution_directory\n</pre>\n<ul>\n<li>Bounds is a list of a form like -1.0,1.0,-1.0,1.0, which indicates\nthe region in which to sample the polynomial system is box [-1.0,1.0]\nx [-1.0,1.0] in Euclidean space</li>\n<li>execution_directory is a directory containing, at minimum:</li>\n<li>A <em>minimizer</em> directory which contains parameter homotopy files for\nBertini. Unless you have experience with Bertini, set these up with\n<tt><span class=\"pre\">sampling-setup</span></tt></li>\n<li>(<em>Recommended, not required</em>) A parameters file <em>parameters.json</em>.\nSee examples for format. If you include a <em>parameters.json</em> file and\nuse the option flag <tt><span class=\"pre\">--parameters</span></tt> with <tt>tdasampling</tt>, the\n<em>parameters.json</em> file should include all the information except\n<tt>execution_directory</tt>, which can then be omitted from the command\nline call.</li>\n</ul>\n</div>\n<div id=\"basic-usage-for-sampling-setup\">\n<h2>Basic usage for sampling-setup</h2>\n<pre>$ sampling-setup <span class=\"o\">[</span>options<span class=\"o\">]</span> path_to_directory_to_setup\n</pre>\n<ul>\n<li>The directory indicated at <tt>path_to_directory_to_setup</tt> should\ncontain a file named <em>polynomial_system</em>. The general format of that\nfile is text:</li>\n</ul>\n<pre>list of variable names separated by commas\npolynomial 1\npolynomial 2\n...\npolynomial n\n</pre>\n<p>For example, if we were sampling from a circle of radius 1:</p>\n<pre>x1,x2\nx1^2 + x2^2 - 1\n</pre>\n<ul>\n<li><tt><span class=\"pre\">--mpiexecutable</span> /a/path/to/mpiexec</tt> option to indicate a path to\n<tt>mpiexec</tt>. Unnecesssary if your <tt>mpiexec</tt> can be called as\n<tt>mpiexec</tt></li>\n<li><tt><span class=\"pre\">--bertini</span> /a/path/to/bertini</tt>: a path to your <tt>bertini</tt>\nexecutable if it cannot be called as <tt>bertini</tt></li>\n<li><tt><span class=\"pre\">--processors</span> k</tt>: the number of processes you would like to use for\nthe <tt>bertini</tt> solving run associated with setup</li>\n<li><tt><span class=\"pre\">--hosts</span> <span class=\"pre\">name1,name2,...,namek</span></tt>: list of ssh names for nodes to use\nfor the <tt>bertini</tt> computation. By default, the <tt>bertini</tt> run will\nrun only on your local machine</li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>tdasampling is licensed under an MIT license.</p>\n</div>\n\n          </div>"}, "last_serial": 5881525, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "0529b9427dbb83484264ac1f3bfdafbf", "sha256": "898ca952bec81a9f286bf9c4d4a7fb3a1be51530aab0bd67c2549f5294d8c358"}, "downloads": -1, "filename": "tdasampling-1.0.0-py2-none-any.whl", "has_sig": false, "md5_digest": "0529b9427dbb83484264ac1f3bfdafbf", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 13889, "upload_time": "2018-03-07T00:47:00", "upload_time_iso_8601": "2018-03-07T00:47:00.573632Z", "url": "https://files.pythonhosted.org/packages/55/65/b079f6b154eea5c715e3ddbb9db9c4555c8b87391f09d99052ce32c91f8e/tdasampling-1.0.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "52372d6d3ff143fe5fd6f149f0590cd6", "sha256": "9ab8b76a7d6ef121dc6a0ffb1cc1ec82d670d91a2ba11f2365b822270e5517fa"}, "downloads": -1, "filename": "tdasampling-1.0.0.tar.gz", "has_sig": false, "md5_digest": "52372d6d3ff143fe5fd6f149f0590cd6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10068, "upload_time": "2018-03-07T00:47:01", "upload_time_iso_8601": "2018-03-07T00:47:01.907039Z", "url": "https://files.pythonhosted.org/packages/c2/07/645f525837554074d6966dd93d1da740a3c91e61c1ae8bc7d12aff579564/tdasampling-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "3e3ca1d62012c403f916e99445bdbf43", "sha256": "ec322dbffda20d6bae63798460b26ac1c61f64f1b5ab8d1888fb95a1e0334f5f"}, "downloads": -1, "filename": "tdasampling-1.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "3e3ca1d62012c403f916e99445bdbf43", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18315, "upload_time": "2018-03-07T01:14:04", "upload_time_iso_8601": "2018-03-07T01:14:04.358293Z", "url": "https://files.pythonhosted.org/packages/54/4a/eb0b46297c5543ac778008620cc250851cb978556056e9e7a7af732913ee/tdasampling-1.0.1-py2-none-any.whl", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a034f7bbbdac42594852603b54222f7d", "sha256": "965aecf2c436b3eb8986a36b5992c65fdf477ef35b04a8a90b7eadd5babb4555"}, "downloads": -1, "filename": "tdasampling-1.0.2-py2-none-any.whl", "has_sig": false, "md5_digest": "a034f7bbbdac42594852603b54222f7d", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18328, "upload_time": "2018-03-07T23:12:02", "upload_time_iso_8601": "2018-03-07T23:12:02.417263Z", "url": "https://files.pythonhosted.org/packages/22/79/baa001f973495d70ef61e7ca77266924af394117b8e20ef91a1e3c8d5e68/tdasampling-1.0.2-py2-none-any.whl", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "890dc5721cd9f0e884fd12f89b48ffba", "sha256": "7a93d1d7821a0de2a07056689aa629882967af5cc6e3ea3d4e9d7a8b1e93163b"}, "downloads": -1, "filename": "tdasampling-1.0.3-py2-none-any.whl", "has_sig": false, "md5_digest": "890dc5721cd9f0e884fd12f89b48ffba", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 18385, "upload_time": "2018-03-08T22:45:01", "upload_time_iso_8601": "2018-03-08T22:45:01.789270Z", "url": "https://files.pythonhosted.org/packages/a7/0c/4e22da2e20714976bc9ade3e384f295cafa08998c20c2973b644509b9346/tdasampling-1.0.3-py2-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "03c539575deaa42ae7f2d277a726c157", "sha256": "dc29561e9855eadf068ba56ae07de140c6231b88f13f55cc67cac3a39c1fee31"}, "downloads": -1, "filename": "tdasampling-1.1.0.tar.gz", "has_sig": false, "md5_digest": "03c539575deaa42ae7f2d277a726c157", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 172557, "upload_time": "2018-10-09T04:38:41", "upload_time_iso_8601": "2018-10-09T04:38:41.628655Z", "url": "https://files.pythonhosted.org/packages/66/7c/c9a202d245eec5ac15024623b6345a9279197e46b93015d9bb15bc8108e4/tdasampling-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "4f05703ecebdfd0fd6c39def54941c17", "sha256": "b2cc90ebd95fb7dd995a2d8ba8d14619fc11ac0cb646b89473466c979a04fdd6"}, "downloads": -1, "filename": "tdasampling-1.1.1.tar.gz", "has_sig": false, "md5_digest": "4f05703ecebdfd0fd6c39def54941c17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173107, "upload_time": "2018-11-07T03:33:40", "upload_time_iso_8601": "2018-11-07T03:33:40.726005Z", "url": "https://files.pythonhosted.org/packages/1c/f2/1d949c309d60f1d13383879a0f447d25a94cd5bd9a2789d229a1d47cb4a2/tdasampling-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "f973c97de3b7390055752009e270413f", "sha256": "454943a7b42265b9ed1b49791a1a8d050af19d45f2e9086362129b9b3af79426"}, "downloads": -1, "filename": "tdasampling-1.1.2.tar.gz", "has_sig": false, "md5_digest": "f973c97de3b7390055752009e270413f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 172981, "upload_time": "2018-11-07T03:54:33", "upload_time_iso_8601": "2018-11-07T03:54:33.410610Z", "url": "https://files.pythonhosted.org/packages/bb/70/ddf01918e22ec20c4734d5a79e09fcef4ba00cb60dedc63d0734d168ba8b/tdasampling-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "7940dd69c13b4a5bec1972bf4cfc94ca", "sha256": "e5a36c83b415260190e948987f3336a775fbf6bb00bef2e9087b21c65db7c78f"}, "downloads": -1, "filename": "tdasampling-1.1.3.tar.gz", "has_sig": false, "md5_digest": "7940dd69c13b4a5bec1972bf4cfc94ca", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 172952, "upload_time": "2019-07-06T19:38:51", "upload_time_iso_8601": "2019-07-06T19:38:51.864595Z", "url": "https://files.pythonhosted.org/packages/91/c3/10b28fa279a561bdf2d27181cc52b33ffe3abdb2f826b7f23520e8f1d58d/tdasampling-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "e1aacbaddcb53a77ab9fdd7d625ea1a4", "sha256": "cfc74de9247f899d1cc0c286d20dc96ed2b86569cd6ea2ca0d6091dea5852e76"}, "downloads": -1, "filename": "tdasampling-1.1.4.tar.gz", "has_sig": false, "md5_digest": "e1aacbaddcb53a77ab9fdd7d625ea1a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173042, "upload_time": "2019-09-24T19:36:18", "upload_time_iso_8601": "2019-09-24T19:36:18.616151Z", "url": "https://files.pythonhosted.org/packages/fc/d9/e4c94ad12c009560b05a4839711a3851fc306401bbd6bfb374c40fbb7391/tdasampling-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e1aacbaddcb53a77ab9fdd7d625ea1a4", "sha256": "cfc74de9247f899d1cc0c286d20dc96ed2b86569cd6ea2ca0d6091dea5852e76"}, "downloads": -1, "filename": "tdasampling-1.1.4.tar.gz", "has_sig": false, "md5_digest": "e1aacbaddcb53a77ab9fdd7d625ea1a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 173042, "upload_time": "2019-09-24T19:36:18", "upload_time_iso_8601": "2019-09-24T19:36:18.616151Z", "url": "https://files.pythonhosted.org/packages/fc/d9/e4c94ad12c009560b05a4839711a3851fc306401bbd6bfb374c40fbb7391/tdasampling-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:57:15 2020"}