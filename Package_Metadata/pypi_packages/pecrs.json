{"info": {"author": "Solid Smoke Software", "author_email": "solid.smoke.software@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: GNU Lesser General Public License v3 (LGPLv3)", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "![logo](https://raw.githubusercontent.com/solidsmokesoftware/pecrs-py/master/logo.png)\n\n# Pythonic Entity Collision Resolution System\n\npecrs is a pure Python 2D physics system with a focus on top-down games and simple platformers. \n\nPure Python makes pecrs portable and easy to modify to suit your own needs.\n\nFocused use-case makes pecrs simple to learn and use.\n\n[Seamless integration](https://solidsmokesoftware.github.io/pecrs-py/pyglet.html) with [Pyglet](http://pyglet.org/)\n\n# Installation\n\nVia pip\n\n`python3 -m pip install pecrs`\n\n# Quickstart\n```python\n\nfrom pecrs import *\n\nspace = Space()\nrectA = Rect(0, 0, 32, 32)\nrectB = Rect(10, 0, 32, 32)\n\nspace.add(rectA)\nspace.add(rectB)\n\ncollision = space.check(rectA)\nprint(f\"Is something colliding with rectA? {collision}\")\n\ncollisions = space.collisions_with(rectB)\nprint(f\"Who is colliding with rectB? {collisions}\")\n\nspace.place(rectB, 100, 0)\n\ncollision = space.check_two(rectA, rectB)\nprint(f\"Are rectA and rectB still colliding? {collision}\")\n```\n\n# Structual Overview\n\nBase types of the system are Shapes and Bodies. \nShapes have a position and dimensions which describe its physical properties.\nBodies are Shapes with an id, direction, speed, and movement state.\n\nCore functionality is providied by the Collider, which detects collisions between Shapes or Shape-like Objects.\n\nThe Space handles positioning of Shapes and optimizes collision handling.\n\nThe Controller provides high-level object oriented control over Bodies in a Space.\n\n# Real-world Usage\n\n![demo](https://raw.githubusercontent.com/solidsmokesoftware/pecrs-py/master/pyglet_demo.gif)\n\n```python\n\nfrom pecrs import *\nimport pyglet\n\n\nclass World(Space):\n   def __init__(self):\n      super().__init__()\n      self.window = pyglet.window.Window(400, 300)\n      self.batch = pyglet.graphics.Batch()\n      \n      self.red_image = pyglet.resource.image(\"red_rect.png\")\n      self.blue_image = pyglet.resource.image(\"blue_rect.png\")\n\n      spriteA = pyglet.sprite.Sprite(self.blue_image, x=0, y=150, batch=self.batch)\n      spriteB = pyglet.sprite.Sprite(self.blue_image, x=300, y=150, batch=self.batch)\n\n      self.add(spriteA, moving=True)\n      self.turn(spriteA, (150, 0))\n\n      self.add(spriteB)\n      \n      pyglet.clock.schedule_interval(self.run, 1.0/60)\n      pyglet.app.run()\n\n   def on_collision(self, shape, collisions):\n      shape.image = self.red_image\n\n   def run(self, delta):\n      self.step(delta)\n      self.window.clear()\n      self.batch.draw()\n\nworld = World()\n```\n\n# Documentation\n\nhttps://solidsmokesoftware.github.io/pecrs-py/\n\n# Demonstration\n\nhttps://github.com/solidsmokesoftware/solconomy\n\n![solconomy](https://camo.githubusercontent.com/de20b3b2014d20a8746f7346e777e323586d5a35/68747470733a2f2f692e696d6775722e636f6d2f566277677664372e706e67)\n\n# Requirements\n\nTested with Python3.6.9\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/solidsmokesoftware/pecrs-py", "keywords": "", "license": "LGPL-3.0", "maintainer": "", "maintainer_email": "", "name": "pecrs", "package_url": "https://pypi.org/project/pecrs/", "platform": "", "project_url": "https://pypi.org/project/pecrs/", "project_urls": {"Homepage": "https://github.com/solidsmokesoftware/pecrs-py"}, "release_url": "https://pypi.org/project/pecrs/0.35/", "requires_dist": null, "requires_python": ">=3.6.9,<4.0.0", "summary": "Pythonic Entity Collision Resolution System", "version": "0.35", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><img alt=\"logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7029b18544e58ca72af5990a71b9a5acf3b65bc8/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736f6c6964736d6f6b65736f6674776172652f70656372732d70792f6d61737465722f6c6f676f2e706e67\"></p>\n<h1>Pythonic Entity Collision Resolution System</h1>\n<p>pecrs is a pure Python 2D physics system with a focus on top-down games and simple platformers.</p>\n<p>Pure Python makes pecrs portable and easy to modify to suit your own needs.</p>\n<p>Focused use-case makes pecrs simple to learn and use.</p>\n<p><a href=\"https://solidsmokesoftware.github.io/pecrs-py/pyglet.html\" rel=\"nofollow\">Seamless integration</a> with <a href=\"http://pyglet.org/\" rel=\"nofollow\">Pyglet</a></p>\n<h1>Installation</h1>\n<p>Via pip</p>\n<p><code>python3 -m pip install pecrs</code></p>\n<h1>Quickstart</h1>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pecrs</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n\n<span class=\"n\">space</span> <span class=\"o\">=</span> <span class=\"n\">Space</span><span class=\"p\">()</span>\n<span class=\"n\">rectA</span> <span class=\"o\">=</span> <span class=\"n\">Rect</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n<span class=\"n\">rectB</span> <span class=\"o\">=</span> <span class=\"n\">Rect</span><span class=\"p\">(</span><span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n\n<span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">rectA</span><span class=\"p\">)</span>\n<span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">rectB</span><span class=\"p\">)</span>\n\n<span class=\"n\">collision</span> <span class=\"o\">=</span> <span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">check</span><span class=\"p\">(</span><span class=\"n\">rectA</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Is something colliding with rectA? </span><span class=\"si\">{</span><span class=\"n\">collision</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">collisions</span> <span class=\"o\">=</span> <span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">collisions_with</span><span class=\"p\">(</span><span class=\"n\">rectB</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Who is colliding with rectB? </span><span class=\"si\">{</span><span class=\"n\">collisions</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">place</span><span class=\"p\">(</span><span class=\"n\">rectB</span><span class=\"p\">,</span> <span class=\"mi\">100</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">)</span>\n\n<span class=\"n\">collision</span> <span class=\"o\">=</span> <span class=\"n\">space</span><span class=\"o\">.</span><span class=\"n\">check_two</span><span class=\"p\">(</span><span class=\"n\">rectA</span><span class=\"p\">,</span> <span class=\"n\">rectB</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"sa\">f</span><span class=\"s2\">\"Are rectA and rectB still colliding? </span><span class=\"si\">{</span><span class=\"n\">collision</span><span class=\"si\">}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n</pre>\n<h1>Structual Overview</h1>\n<p>Base types of the system are Shapes and Bodies.\nShapes have a position and dimensions which describe its physical properties.\nBodies are Shapes with an id, direction, speed, and movement state.</p>\n<p>Core functionality is providied by the Collider, which detects collisions between Shapes or Shape-like Objects.</p>\n<p>The Space handles positioning of Shapes and optimizes collision handling.</p>\n<p>The Controller provides high-level object oriented control over Bodies in a Space.</p>\n<h1>Real-world Usage</h1>\n<p><img alt=\"demo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/3364506d9e76d028dd66a8f2985c5065fab4e686/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f736f6c6964736d6f6b65736f6674776172652f70656372732d70792f6d61737465722f7079676c65745f64656d6f2e676966\"></p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pecrs</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">import</span> <span class=\"nn\">pyglet</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">World</span><span class=\"p\">(</span><span class=\"n\">Space</span><span class=\"p\">):</span>\n   <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n      <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">()</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">Window</span><span class=\"p\">(</span><span class=\"mi\">400</span><span class=\"p\">,</span> <span class=\"mi\">300</span><span class=\"p\">)</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">batch</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">graphics</span><span class=\"o\">.</span><span class=\"n\">Batch</span><span class=\"p\">()</span>\n      \n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">red_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"p\">(</span><span class=\"s2\">\"red_rect.png\"</span><span class=\"p\">)</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blue_image</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">resource</span><span class=\"o\">.</span><span class=\"n\">image</span><span class=\"p\">(</span><span class=\"s2\">\"blue_rect.png\"</span><span class=\"p\">)</span>\n\n      <span class=\"n\">spriteA</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blue_image</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n      <span class=\"n\">spriteB</span> <span class=\"o\">=</span> <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">sprite</span><span class=\"o\">.</span><span class=\"n\">Sprite</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">blue_image</span><span class=\"p\">,</span> <span class=\"n\">x</span><span class=\"o\">=</span><span class=\"mi\">300</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"n\">batch</span><span class=\"o\">=</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"p\">)</span>\n\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">spriteA</span><span class=\"p\">,</span> <span class=\"n\">moving</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">turn</span><span class=\"p\">(</span><span class=\"n\">spriteA</span><span class=\"p\">,</span> <span class=\"p\">(</span><span class=\"mi\">150</span><span class=\"p\">,</span> <span class=\"mi\">0</span><span class=\"p\">))</span>\n\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">spriteB</span><span class=\"p\">)</span>\n      \n      <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">clock</span><span class=\"o\">.</span><span class=\"n\">schedule_interval</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">,</span> <span class=\"mf\">1.0</span><span class=\"o\">/</span><span class=\"mi\">60</span><span class=\"p\">)</span>\n      <span class=\"n\">pyglet</span><span class=\"o\">.</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n\n   <span class=\"k\">def</span> <span class=\"nf\">on_collision</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">shape</span><span class=\"p\">,</span> <span class=\"n\">collisions</span><span class=\"p\">):</span>\n      <span class=\"n\">shape</span><span class=\"o\">.</span><span class=\"n\">image</span> <span class=\"o\">=</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">red_image</span>\n\n   <span class=\"k\">def</span> <span class=\"nf\">run</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">delta</span><span class=\"p\">):</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">delta</span><span class=\"p\">)</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">window</span><span class=\"o\">.</span><span class=\"n\">clear</span><span class=\"p\">()</span>\n      <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">batch</span><span class=\"o\">.</span><span class=\"n\">draw</span><span class=\"p\">()</span>\n\n<span class=\"n\">world</span> <span class=\"o\">=</span> <span class=\"n\">World</span><span class=\"p\">()</span>\n</pre>\n<h1>Documentation</h1>\n<p><a href=\"https://solidsmokesoftware.github.io/pecrs-py/\" rel=\"nofollow\">https://solidsmokesoftware.github.io/pecrs-py/</a></p>\n<h1>Demonstration</h1>\n<p><a href=\"https://github.com/solidsmokesoftware/solconomy\" rel=\"nofollow\">https://github.com/solidsmokesoftware/solconomy</a></p>\n<p><img alt=\"solconomy\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f5e67e941ced94f926461c2ca587ef18f1a2fce6/68747470733a2f2f63616d6f2e67697468756275736572636f6e74656e742e636f6d2f646532306233623230313464323061383734366637333436653737376533323335383664356133352f3638373437343730373333613266326636393265363936643637373537323265363336663664326635363632373736373736363433373265373036653637\"></p>\n<h1>Requirements</h1>\n<p>Tested with Python3.6.9</p>\n\n          </div>"}, "last_serial": 7080224, "releases": {"0.12": [{"comment_text": "", "digests": {"md5": "cb0af4986bdb164b3e8f9de27edd39d7", "sha256": "fe92477a082b15e9636b8af95eeace7e2e755e3ce25eba8b5cca9e9e01fbc082"}, "downloads": -1, "filename": "pecrs-0.12-py3-none-any.whl", "has_sig": false, "md5_digest": "cb0af4986bdb164b3e8f9de27edd39d7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.9,<4.0.0", "size": 15724, "upload_time": "2020-03-06T23:40:01", "upload_time_iso_8601": "2020-03-06T23:40:01.447320Z", "url": "https://files.pythonhosted.org/packages/32/4e/f75e18c6609b212d53a559acd2f44ddf76673daddacbe3dedb340abe1e89/pecrs-0.12-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c2e64ad7e81ad1201889e387759b3975", "sha256": "b113f593d34b24f3cd332a5b6142ac6919f83c5a9f5772da4c02af4d8cfbf9a0"}, "downloads": -1, "filename": "pecrs-0.12.tar.gz", "has_sig": false, "md5_digest": "c2e64ad7e81ad1201889e387759b3975", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.9,<4.0.0", "size": 14528, "upload_time": "2020-03-06T23:40:03", "upload_time_iso_8601": "2020-03-06T23:40:03.831183Z", "url": "https://files.pythonhosted.org/packages/70/23/7f98895bba5d21932bb4e9cd840234db5807339707f0be049e29ce3a6ec0/pecrs-0.12.tar.gz", "yanked": false}], "0.35": [{"comment_text": "", "digests": {"md5": "363c724e7d02be7ce0d840b95aa776e1", "sha256": "0e8eca9884f0844ef2f03dc4f58c83d9945423c4f77797e3ea91da9bdde2b4f2"}, "downloads": -1, "filename": "pecrs-0.35-py3-none-any.whl", "has_sig": false, "md5_digest": "363c724e7d02be7ce0d840b95aa776e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.9,<4.0.0", "size": 12205, "upload_time": "2020-04-22T21:40:40", "upload_time_iso_8601": "2020-04-22T21:40:40.026774Z", "url": "https://files.pythonhosted.org/packages/01/09/e28792e2eb44e7927b8ea40589928702508367a9526a7fdb900822ee63c0/pecrs-0.35-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "805526d9bc7874b7d78d798a6360fe8b", "sha256": "083c69adae35f4f40c0ab78fcd643da9653221de8b2f992e3dec922948c10f5a"}, "downloads": -1, "filename": "pecrs-0.35.tar.gz", "has_sig": false, "md5_digest": "805526d9bc7874b7d78d798a6360fe8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.9,<4.0.0", "size": 11651, "upload_time": "2020-04-22T21:40:42", "upload_time_iso_8601": "2020-04-22T21:40:42.450682Z", "url": "https://files.pythonhosted.org/packages/63/0f/7c9878ba9a8c2b6e98b31f111d8a0b2e8344f48d024a8278a20d9a07aece/pecrs-0.35.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "363c724e7d02be7ce0d840b95aa776e1", "sha256": "0e8eca9884f0844ef2f03dc4f58c83d9945423c4f77797e3ea91da9bdde2b4f2"}, "downloads": -1, "filename": "pecrs-0.35-py3-none-any.whl", "has_sig": false, "md5_digest": "363c724e7d02be7ce0d840b95aa776e1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6.9,<4.0.0", "size": 12205, "upload_time": "2020-04-22T21:40:40", "upload_time_iso_8601": "2020-04-22T21:40:40.026774Z", "url": "https://files.pythonhosted.org/packages/01/09/e28792e2eb44e7927b8ea40589928702508367a9526a7fdb900822ee63c0/pecrs-0.35-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "805526d9bc7874b7d78d798a6360fe8b", "sha256": "083c69adae35f4f40c0ab78fcd643da9653221de8b2f992e3dec922948c10f5a"}, "downloads": -1, "filename": "pecrs-0.35.tar.gz", "has_sig": false, "md5_digest": "805526d9bc7874b7d78d798a6360fe8b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.9,<4.0.0", "size": 11651, "upload_time": "2020-04-22T21:40:42", "upload_time_iso_8601": "2020-04-22T21:40:42.450682Z", "url": "https://files.pythonhosted.org/packages/63/0f/7c9878ba9a8c2b6e98b31f111d8a0b2e8344f48d024a8278a20d9a07aece/pecrs-0.35.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:54 2020"}