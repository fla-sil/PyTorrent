{"info": {"author": "Lenz Furrer", "author_email": "lenz.furrer@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "\n``bconv``\\ : Python library for converting between BioNLP formats\n===================================================================\n\n``bconv`` offers format conversion and manipulation of documents with text and annotations.\nIt supports various popular formats used in natural-language processing for biomedical texts.\n\nSupported formats\n-----------------\n\nThe following formats are currently supported:\n\n.. list-table::\n   :header-rows: 1\n\n   * - Name\n     - I\n     - O\n     - T\n     - A\n     - Description\n   * - ``bioc_xml``\\ , ``bioc_json``\n     - \u2713\n     - \u2713\n     - \u2713\n     - \u2713\n     - BioC\n   * - ``bionlp``\n     - \n     - \u2713\n     - \n     - \u2713\n     - BioNLP stand-off\n   * - ``brat``\n     - \n     - \u2713\n     - \n     - \u2713\n     - brat stand-off\n   * - ``conll``\n     - \u2713\n     - \u2713\n     - \u2713\n     - \u2713\n     - CoNLL\n   * - ``europepmc``\\ , ``europepmc.zip``\n     - \n     - \u2713\n     - \n     - \u2713\n     - Europe-PMC JSON\n   * - ``pubtator``\\ , ``pubtator_fbk``\n     - \u2713\n     - \u2713\n     - \u2713\n     - \u2713\n     - PubTator\n   * - ``pubmed``\\ , ``pxml``\\ , ``pxml.gz``\n     - \u2713\n     - \n     - \u2713\n     - \n     - PubMed abstracts\n   * - ``pmc``\\ , ``nxml``\n     - \u2713\n     - \n     - \u2713\n     - \n     - PMC full-text\n   * - ``pubanno_json``\n     - \n     - \u2713\n     - \u2713\n     - \u2713\n     - PubAnnotation JSON\n   * - ``tsv``\\ , ``text_tsv``\n     - \n     - \u2713\n     - \u2713\n     - \u2713\n     - tab-separated values\n   * - ``txt``\n     - \u2713\n     - \u2713\n     - \u2713\n     - \n     - plain text\n   * - ``txt_json``\n     - \u2713\n     - \n     - \u2713\n     - \n     - collection of plain-text documents\n\n\nI: input format;\nO: output format;\nT: can represent text;\nA: can represent annotations (entities).\n\nInstallation\n------------\n\n``bconv`` is hosted on `PyPI <https://pypi.org/project/bconv/>`_\\ , so you can use ``pip`` to install it:\n\n.. code-block:: sh\n\n   $ pip install bconv\n\nBy default, ``pip`` attempts a system-level installation, which might require admin privileges.\nAlternatively, use ``pip``\\ 's ``--user`` flag for an installation owned by the current user.\n\nUsage\n-----\n\nLoad an annotated collection in BioC XML format:\n\n.. code-block:: pycon\n\n   >>> import bconv\n   >>> coll = bconv.load('bioc_xml', 'path/to/example.xml')\n   >>> coll\n   <Collection with 37 subelements at 0x7f1966e4b3c8>\n\nA Collection is a sequence of Document objects:\n\n.. code-block:: pycon\n\n   >>> coll[0]\n   <Document with 12 subelements at 0x7f1966e2f6d8>\n\nDocuments contain Sections, which contain Sentences:\n\n.. code-block:: pycon\n\n   >>> sent = coll[0][3][5]\n   >>> sent.text\n   'A Live cell imaging reveals that expression of GFP\u2010KSHV\u2010TK, but not GFP induces contraction of HeLa cells.'\n\nFind the first annotation for this sentence:\n\n.. code-block:: pycon\n\n   >>> e = next(sent.iter_entities())\n   >>> e.start, e.end, e.text\n   (571, 578, 'KSHV\u2010TK')\n   >>> e.info\n   {'type': 'gene/protein', 'ui': 'Uniprot:F5HB62'}\n\nWrite the whole collection to a new file in CoNLL format:\n\n.. code-block:: pycon\n\n   >>> with open('path/to/example.conll', 'w', encoding='utf8') as f:\n   ...     bconv.dump('conll', coll, f, tagset='IOBES', include_offsets=True)\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lfurrer/bconv", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "bconv", "package_url": "https://pypi.org/project/bconv/", "platform": "", "project_url": "https://pypi.org/project/bconv/", "project_urls": {"Homepage": "https://github.com/lfurrer/bconv"}, "release_url": "https://pypi.org/project/bconv/0.2.1/", "requires_dist": ["lxml", "nltk"], "requires_python": ">=3.6", "summary": "Convert between BioNLP formats", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt>bconv</tt> offers format conversion and manipulation of documents with text and annotations.\nIt supports various popular formats used in natural-language processing for biomedical texts.</p>\n<div id=\"supported-formats\">\n<h2>Supported formats</h2>\n<p>The following formats are currently supported:</p>\n<table>\n<colgroup>\n<col>\n<col>\n<col>\n<col>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Name</th>\n<th>I</th>\n<th>O</th>\n<th>T</th>\n<th>A</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><tt>bioc_xml</tt>, <tt>bioc_json</tt></td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>BioC</td>\n</tr>\n<tr><td><tt>bionlp</tt></td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>BioNLP stand-off</td>\n</tr>\n<tr><td><tt>brat</tt></td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>brat stand-off</td>\n</tr>\n<tr><td><tt>conll</tt></td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>CoNLL</td>\n</tr>\n<tr><td><tt>europepmc</tt>, <tt>europepmc.zip</tt></td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>Europe-PMC JSON</td>\n</tr>\n<tr><td><tt>pubtator</tt>, <tt>pubtator_fbk</tt></td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>PubTator</td>\n</tr>\n<tr><td><tt>pubmed</tt>, <tt>pxml</tt>, <tt>pxml.gz</tt></td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>PubMed abstracts</td>\n</tr>\n<tr><td><tt>pmc</tt>, <tt>nxml</tt></td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>PMC full-text</td>\n</tr>\n<tr><td><tt>pubanno_json</tt></td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>PubAnnotation JSON</td>\n</tr>\n<tr><td><tt>tsv</tt>, <tt>text_tsv</tt></td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>tab-separated values</td>\n</tr>\n<tr><td><tt>txt</tt></td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>plain text</td>\n</tr>\n<tr><td><tt>txt_json</tt></td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>\u2713</td>\n<td>\u00a0</td>\n<td>collection of plain-text documents</td>\n</tr>\n</tbody>\n</table>\n<p>I: input format;\nO: output format;\nT: can represent text;\nA: can represent annotations (entities).</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p><tt>bconv</tt> is hosted on <a href=\"https://pypi.org/project/bconv/\" rel=\"nofollow\">PyPI</a>, so you can use <tt>pip</tt> to install it:</p>\n<pre>$ pip install bconv\n</pre>\n<p>By default, <tt>pip</tt> attempts a system-level installation, which might require admin privileges.\nAlternatively, use <tt>pip</tt>\u2019s <tt><span class=\"pre\">--user</span></tt> flag for an installation owned by the current user.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Load an annotated collection in BioC XML format:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">bconv</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">coll</span> <span class=\"o\">=</span> <span class=\"n\">bconv</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"s1\">'bioc_xml'</span><span class=\"p\">,</span> <span class=\"s1\">'path/to/example.xml'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">coll</span>\n<span class=\"go\">&lt;Collection with 37 subelements at 0x7f1966e4b3c8&gt;</span>\n</pre>\n<p>A Collection is a sequence of Document objects:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">coll</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">]</span>\n<span class=\"go\">&lt;Document with 12 subelements at 0x7f1966e2f6d8&gt;</span>\n</pre>\n<p>Documents contain Sections, which contain Sentences:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sent</span> <span class=\"o\">=</span> <span class=\"n\">coll</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"mi\">3</span><span class=\"p\">][</span><span class=\"mi\">5</span><span class=\"p\">]</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"go\">'A Live cell imaging reveals that expression of GFP\u2010KSHV\u2010TK, but not GFP induces contraction of HeLa cells.'</span>\n</pre>\n<p>Find the first annotation for this sentence:</p>\n<pre><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">e</span> <span class=\"o\">=</span> <span class=\"nb\">next</span><span class=\"p\">(</span><span class=\"n\">sent</span><span class=\"o\">.</span><span class=\"n\">iter_entities</span><span class=\"p\">())</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">,</span> <span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">text</span>\n<span class=\"go\">(571, 578, 'KSHV\u2010TK')\n</span><span class=\"n\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">e</span><span class=\"o\">.</span><span class=\"n\">info</span>\n<span class=\"go\">{'type': 'gene/protein', 'ui': 'Uniprot:F5HB62'}</span>\n</pre>\n<p>Write the whole collection to a new file in CoNLL format:</p>\n<pre><span class=\"k\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"k\">with</span> <span class=\"nb\">open</span><span class=\"p\">(</span><span class=\"s1\">'path/to/example.conll'</span><span class=\"p\">,</span> <span class=\"s1\">'w'</span><span class=\"p\">,</span> <span class=\"n\">encoding</span><span class=\"o\">=</span><span class=\"s1\">'utf8'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">f</span><span class=\"p\">:</span>\n<span class=\"gp\">... </span>    <span class=\"n\">bconv</span><span class=\"o\">.</span><span class=\"n\">dump</span><span class=\"p\">(</span><span class=\"s1\">'conll'</span><span class=\"p\">,</span> <span class=\"n\">coll</span><span class=\"p\">,</span> <span class=\"n\">f</span><span class=\"p\">,</span> <span class=\"n\">tagset</span><span class=\"o\">=</span><span class=\"s1\">'IOBES'</span><span class=\"p\">,</span> <span class=\"n\">include_offsets</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 6906636, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "dda34fa7416e259c6226a59182e86000", "sha256": "8a06354da64c6d9b2f65536b215e7bae5685d52e79d88d346186cb4c2f4f6a20"}, "downloads": -1, "filename": "bconv-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "dda34fa7416e259c6226a59182e86000", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 32901, "upload_time": "2020-02-02T23:37:24", "upload_time_iso_8601": "2020-02-02T23:37:24.698641Z", "url": "https://files.pythonhosted.org/packages/ff/3d/d578702845e028d725da76877b5a1c34d7ce5362bfc83a1f76133ac79619/bconv-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4aee518c00da158b95263540c4c4a33a", "sha256": "f3bda8397d3ffbe8d8fe4e73f861396cc900a8c01e0fb990d0f349c18142b295"}, "downloads": -1, "filename": "bconv-0.1.tar.gz", "has_sig": false, "md5_digest": "4aee518c00da158b95263540c4c4a33a", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 23955, "upload_time": "2020-02-02T23:37:27", "upload_time_iso_8601": "2020-02-02T23:37:27.186788Z", "url": "https://files.pythonhosted.org/packages/01/ee/f7c27699a4c47b8321d43dbc505a72eaf9b2d0787d9ce60388d5e4f1d38b/bconv-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "c305fce4a29685d443ad993ec6ec00ae", "sha256": "f8adee88201971ab18185ebff80d4f8fa34e8ea29792e98769837f1b87b690b5"}, "downloads": -1, "filename": "bconv-0.2-py3-none-any.whl", "has_sig": false, "md5_digest": "c305fce4a29685d443ad993ec6ec00ae", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35547, "upload_time": "2020-02-23T21:01:36", "upload_time_iso_8601": "2020-02-23T21:01:36.426653Z", "url": "https://files.pythonhosted.org/packages/2c/a4/00a094eb05fda79e02eaf9040af404872436c28de4e3dce2f237c0c043bf/bconv-0.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "edd62ea9e5f2ae1c815a1bc295f91413", "sha256": "d4698ccc2f4bab13a951c3e1ad88dfa5ca21d84dcc2bf0168b4c8ab2cdaf5543"}, "downloads": -1, "filename": "bconv-0.2.tar.gz", "has_sig": false, "md5_digest": "edd62ea9e5f2ae1c815a1bc295f91413", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26886, "upload_time": "2020-02-23T21:01:37", "upload_time_iso_8601": "2020-02-23T21:01:37.984954Z", "url": "https://files.pythonhosted.org/packages/62/07/d8ada5990e0fa8fd814335d2f411e68ee4003ebc3a3cbdcfafdc0ef56067/bconv-0.2.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "d516c5fc8d19baad9547b3ec88c3781f", "sha256": "a396ff4a3cc5ae789b22efeebb978c7503f5b4db6c9b2dff78515ef3df65ccde"}, "downloads": -1, "filename": "bconv-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d516c5fc8d19baad9547b3ec88c3781f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35667, "upload_time": "2020-03-29T13:33:12", "upload_time_iso_8601": "2020-03-29T13:33:12.928004Z", "url": "https://files.pythonhosted.org/packages/f1/83/ab381700dde15920855c505095486658041e06fc0e74e4166ebc51655d2e/bconv-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "666434abfe503f3ddef6a79d0d94e668", "sha256": "7d6b6ead345a69724fd34cf542a7f5f52596856e4b180fc4f129fc568da76431"}, "downloads": -1, "filename": "bconv-0.2.1.tar.gz", "has_sig": false, "md5_digest": "666434abfe503f3ddef6a79d0d94e668", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26425, "upload_time": "2020-03-29T13:33:14", "upload_time_iso_8601": "2020-03-29T13:33:14.314431Z", "url": "https://files.pythonhosted.org/packages/e6/c7/43a0e53ba296e4535eade57a6cb0873a2a3e7fd5adfd7eeccbb8fcbf0990/bconv-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d516c5fc8d19baad9547b3ec88c3781f", "sha256": "a396ff4a3cc5ae789b22efeebb978c7503f5b4db6c9b2dff78515ef3df65ccde"}, "downloads": -1, "filename": "bconv-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d516c5fc8d19baad9547b3ec88c3781f", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 35667, "upload_time": "2020-03-29T13:33:12", "upload_time_iso_8601": "2020-03-29T13:33:12.928004Z", "url": "https://files.pythonhosted.org/packages/f1/83/ab381700dde15920855c505095486658041e06fc0e74e4166ebc51655d2e/bconv-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "666434abfe503f3ddef6a79d0d94e668", "sha256": "7d6b6ead345a69724fd34cf542a7f5f52596856e4b180fc4f129fc568da76431"}, "downloads": -1, "filename": "bconv-0.2.1.tar.gz", "has_sig": false, "md5_digest": "666434abfe503f3ddef6a79d0d94e668", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 26425, "upload_time": "2020-03-29T13:33:14", "upload_time_iso_8601": "2020-03-29T13:33:14.314431Z", "url": "https://files.pythonhosted.org/packages/e6/c7/43a0e53ba296e4535eade57a6cb0873a2a3e7fd5adfd7eeccbb8fcbf0990/bconv-0.2.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:14:36 2020"}