{"info": {"author": "Jesse Boyd", "author_email": "jessemarkboyd@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy"], "description": "\npypowerworld\n\n==== OVERVIEW ====\n\npypowerworld provides a class as a user-friendly wrapper for the PowerWorld COM object. It initializes a class object with a loadflow case. If the case fails to open, the program does not error out but prints an error and proceeds without a case. The \u2018open_case\u2019 method may be used to attempt to open the PowerWorld case again.\n\n==== REQUIREMENTS ====\n\npypowerworld requires COM which means it must be run on a Windows operating system. It also requires the user to have PowerWorld and SimAuto licenses. Any PowerWorld tools which require additional license are also necessary.\n\n==== INPUT ====\n\nThe inputs are labeled similarly to the PowerWorld Auxiliary File documentation. The inputs can either be method parameters or attributes used to set data or get data from the PowerWorld program.\n\n==== OUPUT ====\n\nData output is sent in dataframe format and set to the \u2018output\u2019 attribute. This is true only when the get data method is run. For all other operations, this attribute will be set to None.\n\n==== ERROR HANDLING ====\n\nIf an error occurs, the \u2018error\u2019 attribute is set to True and the \u2018error_message\u2019 attribute is set to an error string value explaining the error. If an error is not encountered, the \u2018error\u2019 attribute is set to False and the \u2018error_message\u2019 is set to an empty string.\n\n==== TYPICAL IMPLEMENTATION ====\n\nfrom pypowerworld import pypowerworld\ncase_path = r\u2018somepathsomecase.pwb\u2019\npw = pypowerworld(case_path)\npw.solve()\nif pw.error:\n    print(\u201cError encountered solving power flow: %s\u201d % pw.error_message)\nelse:\n    print(\u201cThe case was solved using the Newton-Raphson method.\u201d)", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/jessemarkboyd/pypowerworld/tarball/0.3.6", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jessemarkboyd/pypowerworld", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pypowerworld", "package_url": "https://pypi.org/project/pypowerworld/", "platform": "", "project_url": "https://pypi.org/project/pypowerworld/", "project_urls": {"Download": "https://github.com/jessemarkboyd/pypowerworld/tarball/0.3.6", "Homepage": "https://github.com/jessemarkboyd/pypowerworld"}, "release_url": "https://pypi.org/project/pypowerworld/0.3.6/", "requires_dist": null, "requires_python": "", "summary": "Powerworld COM wrapper for Python", "version": "0.3.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>pypowerworld<br><br>==== OVERVIEW ====<br><br>pypowerworld provides a class as a user-friendly wrapper for the PowerWorld COM object. It initializes a class object with a loadflow case. If the case fails to open, the program does not error out but prints an error and proceeds without a case. The \u2018open_case\u2019 method may be used to attempt to open the PowerWorld case again.<br><br>==== REQUIREMENTS ====<br><br>pypowerworld requires COM which means it must be run on a Windows operating system. It also requires the user to have PowerWorld and SimAuto licenses. Any PowerWorld tools which require additional license are also necessary.<br><br>==== INPUT ====<br><br>The inputs are labeled similarly to the PowerWorld Auxiliary File documentation. The inputs can either be method parameters or attributes used to set data or get data from the PowerWorld program.<br><br>==== OUPUT ====<br><br>Data output is sent in dataframe format and set to the \u2018output\u2019 attribute. This is true only when the get data method is run. For all other operations, this attribute will be set to None.<br><br>==== ERROR HANDLING ====<br><br>If an error occurs, the \u2018error\u2019 attribute is set to True and the \u2018error_message\u2019 attribute is set to an error string value explaining the error. If an error is not encountered, the \u2018error\u2019 attribute is set to False and the \u2018error_message\u2019 is set to an empty string.<br><br>==== TYPICAL IMPLEMENTATION ====<br><br>from pypowerworld import pypowerworld<br>case_path = r\u2018somepathsomecase.pwb\u2019<br>pw = pypowerworld(case_path)<br>pw.solve()<br>if pw.error:<br>    print(\u201cError encountered solving power flow: %s\u201d % pw.error_message)<br>else:<br>    print(\u201cThe case was solved using the Newton-Raphson method.\u201d)\n          </div>"}, "last_serial": 4067170, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "a1312a9adc58e2acf2e08e4afa1abb4b", "sha256": "366f7f6111e523ad54b145b7404f32502b21c5eb626f3c4e23ed173daf8c92be"}, "downloads": -1, "filename": "pypowerworld-0.1.tar.gz", "has_sig": false, "md5_digest": "a1312a9adc58e2acf2e08e4afa1abb4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3548, "upload_time": "2017-01-06T17:45:14", "upload_time_iso_8601": "2017-01-06T17:45:14.762343Z", "url": "https://files.pythonhosted.org/packages/44/4a/427accb35adca2351ee7e26d8dd32c6d562865dbfd6b70659eae56ea768f/pypowerworld-0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "66f3d6bfcdcdc7dcb0d7c4c804b2c501", "sha256": "772d9eb888171bc314912fe19fd32a4459df00c36923f17a0f8683189c281ebf"}, "downloads": -1, "filename": "pypowerworld-0.1.0.tar.gz", "has_sig": false, "md5_digest": "66f3d6bfcdcdc7dcb0d7c4c804b2c501", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3532, "upload_time": "2017-01-06T17:57:26", "upload_time_iso_8601": "2017-01-06T17:57:26.848752Z", "url": "https://files.pythonhosted.org/packages/53/3a/8308d945a0e1145d401a3bd210f8bf383cc3e80a77cdb8ecc53b7fa150dd/pypowerworld-0.1.0.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "e6a73a22c5a993e1a994493bb32b3220", "sha256": "d4b8995d9c611714725be3cfddea7d33a2d214c04648dbb6dd3dae5252314fbe"}, "downloads": -1, "filename": "pypowerworld-0.2.zip", "has_sig": false, "md5_digest": "e6a73a22c5a993e1a994493bb32b3220", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4973, "upload_time": "2017-01-06T20:39:40", "upload_time_iso_8601": "2017-01-06T20:39:40.438057Z", "url": "https://files.pythonhosted.org/packages/71/e4/7edc1c81ea941220f2e7a28fc5d13986ee4260963d8867b638fac5b990c1/pypowerworld-0.2.zip", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "2dc5445d12120089daae4853c26e5743", "sha256": "6bd9f3920ad47302aca61895792e3ec86b7562b228bf8187ae86c17e1f6fb386"}, "downloads": -1, "filename": "pypowerworld-0.2.1.zip", "has_sig": false, "md5_digest": "2dc5445d12120089daae4853c26e5743", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4991, "upload_time": "2017-01-06T20:42:52", "upload_time_iso_8601": "2017-01-06T20:42:52.766758Z", "url": "https://files.pythonhosted.org/packages/47/39/74fd04da6abfd315891972465559d7a2cb6c262f190afadaf8b7d4400330/pypowerworld-0.2.1.zip", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "560b99f9a9e91f8545c23fbe99ce19d9", "sha256": "17198ca28295b49b80e4898bdebf7b73de6b1b8703d4229f026c295978c29531"}, "downloads": -1, "filename": "pypowerworld-0.2.2.tar.gz", "has_sig": false, "md5_digest": "560b99f9a9e91f8545c23fbe99ce19d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3450, "upload_time": "2017-01-09T04:47:23", "upload_time_iso_8601": "2017-01-09T04:47:23.534556Z", "url": "https://files.pythonhosted.org/packages/73/a5/8b3eee9ab16c4ffffa6733e7b2e063a2188fdc240f73afbe9a345b43a405/pypowerworld-0.2.2.tar.gz", "yanked": false}], "0.2.3": [{"comment_text": "", "digests": {"md5": "e56dbd8d41f918b6c9ab8ca4f8cd7e45", "sha256": "e65e97a945006bdb3a997d00d0cf38b865d8214f6ef672404822935c51bfc56f"}, "downloads": -1, "filename": "pypowerworld-0.2.3.tar.gz", "has_sig": false, "md5_digest": "e56dbd8d41f918b6c9ab8ca4f8cd7e45", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3630, "upload_time": "2017-01-21T22:43:19", "upload_time_iso_8601": "2017-01-21T22:43:19.621444Z", "url": "https://files.pythonhosted.org/packages/55/69/3e45dc78bd51f02447e063d334f9652f357e474b1dc22869ce44cf4162d0/pypowerworld-0.2.3.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "76da94a8b817f08bafb30d297b5fdb17", "sha256": "f17796762aa224edfffeff11b792cebee0de67bf231db3581de0c81e40a79317"}, "downloads": -1, "filename": "pypowerworld-0.2.4.tar.gz", "has_sig": false, "md5_digest": "76da94a8b817f08bafb30d297b5fdb17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3757, "upload_time": "2017-01-21T22:59:47", "upload_time_iso_8601": "2017-01-21T22:59:47.703713Z", "url": "https://files.pythonhosted.org/packages/3b/f6/f05e5fa429dfdb9cb9571726fe476eb80a4945f7847b2ba821d0ca46f873/pypowerworld-0.2.4.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "6a19604dd9b3b21ce1046f6d7359ca4a", "sha256": "da85c0702ca3f9bb8541dd222bf4640124662c62ed0af426bfcfd71e121e418b"}, "downloads": -1, "filename": "pypowerworld-0.2.5.tar.gz", "has_sig": false, "md5_digest": "6a19604dd9b3b21ce1046f6d7359ca4a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3629, "upload_time": "2017-01-22T01:31:49", "upload_time_iso_8601": "2017-01-22T01:31:49.532095Z", "url": "https://files.pythonhosted.org/packages/da/98/3e4e4e08e1144bbb9d2b8a0320fc39a4027419b4f48adec0cacfa07622b4/pypowerworld-0.2.5.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "d959bbad5dcaaaa6f46428a9c03e31d8", "sha256": "e7e611e72869006cbed001bd5e1d07ae2103d67c7400c6503b60b0175d5137fb"}, "downloads": -1, "filename": "pypowerworld-0.2.7.tar.gz", "has_sig": false, "md5_digest": "d959bbad5dcaaaa6f46428a9c03e31d8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3627, "upload_time": "2017-01-22T21:40:56", "upload_time_iso_8601": "2017-01-22T21:40:56.376522Z", "url": "https://files.pythonhosted.org/packages/28/07/547dacd0685519f80ef9dd7176ab82675fdeb5571d5db8ae8945d28dbfb4/pypowerworld-0.2.7.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1e16d940bb2dc7c75619d1a9763b1e1b", "sha256": "12ebf8a0bef4c351255a3be1d30110b9c58915c73aa6dd322e125273549c3fbe"}, "downloads": -1, "filename": "pypowerworld-0.3.0.zip", "has_sig": false, "md5_digest": "1e16d940bb2dc7c75619d1a9763b1e1b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5173, "upload_time": "2017-11-09T19:21:41", "upload_time_iso_8601": "2017-11-09T19:21:41.859501Z", "url": "https://files.pythonhosted.org/packages/b9/7c/bd64659d1954f57d0b1f1bed8247fcee4a49377fdd035ba33aac548b6108/pypowerworld-0.3.0.zip", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "8032ae1b13d8c3aed2afa90d0bed4db1", "sha256": "ca5549851e53afff250d43e8dca02b938e7ea2e43a60646783cc02ca6624616a"}, "downloads": -1, "filename": "pypowerworld-0.3.4-py3-none-any.whl", "has_sig": false, "md5_digest": "8032ae1b13d8c3aed2afa90d0bed4db1", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5183, "upload_time": "2018-07-16T21:10:04", "upload_time_iso_8601": "2018-07-16T21:10:04.747366Z", "url": "https://files.pythonhosted.org/packages/07/9c/e3d43d9ae4c41a82b51d2ccd2e1471901c2f352a6093e395de28d47d390a/pypowerworld-0.3.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "41dda1008dfd47ae1f460c11929b2a05", "sha256": "dc60bce5d1c4f2c37df8e938e1c6f31690f1fa941b181ad440c25569274d8ad8"}, "downloads": -1, "filename": "pypowerworld-0.3.4.tar.gz", "has_sig": false, "md5_digest": "41dda1008dfd47ae1f460c11929b2a05", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5661, "upload_time": "2018-07-16T21:09:16", "upload_time_iso_8601": "2018-07-16T21:09:16.059355Z", "url": "https://files.pythonhosted.org/packages/db/23/b603abe6af564223bbcd34bd5d6c733eb632064cf13fd44a0ac47956e3e5/pypowerworld-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "aa431faceb025881c45d99e8dae33b07", "sha256": "c47eb80426cf475abefc58add331461cec2876b97eaaea268cfff2a7e87f43cf"}, "downloads": -1, "filename": "pypowerworld-0.3.5.tar.gz", "has_sig": false, "md5_digest": "aa431faceb025881c45d99e8dae33b07", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5453, "upload_time": "2018-01-05T01:35:11", "upload_time_iso_8601": "2018-01-05T01:35:11.360811Z", "url": "https://files.pythonhosted.org/packages/e1/9f/c11f12d7680c46af6702777ac274cdad0ce162ee8025886f48af65983e9a/pypowerworld-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "b43486c1797be4ba412bfd13d883cdac", "sha256": "033069952982a06e8eaf9fd21d08501c0e3d2a7e395ec31a3a2294c212c036a5"}, "downloads": -1, "filename": "pypowerworld-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b43486c1797be4ba412bfd13d883cdac", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5185, "upload_time": "2018-07-16T21:14:25", "upload_time_iso_8601": "2018-07-16T21:14:25.477463Z", "url": "https://files.pythonhosted.org/packages/92/07/f2730d1545ec7a449c22c09d4c8785aa7e4a73f62faa924ef07ef802ee6f/pypowerworld-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b578cc552de50282b66e54087a08f473", "sha256": "8ca9c2c99a11c52abd20cdd8c5e5f500acd5c5ade36d6e0ef2c113921afd3638"}, "downloads": -1, "filename": "pypowerworld-0.3.6.tar.gz", "has_sig": false, "md5_digest": "b578cc552de50282b66e54087a08f473", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5686, "upload_time": "2018-07-16T21:14:19", "upload_time_iso_8601": "2018-07-16T21:14:19.298501Z", "url": "https://files.pythonhosted.org/packages/17/01/971395c2b95a8803b3d8660ad34600542431c001e4317aaf5ad315ffe59e/pypowerworld-0.3.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b43486c1797be4ba412bfd13d883cdac", "sha256": "033069952982a06e8eaf9fd21d08501c0e3d2a7e395ec31a3a2294c212c036a5"}, "downloads": -1, "filename": "pypowerworld-0.3.6-py3-none-any.whl", "has_sig": false, "md5_digest": "b43486c1797be4ba412bfd13d883cdac", "packagetype": "bdist_wheel", "python_version": "3.6", "requires_python": null, "size": 5185, "upload_time": "2018-07-16T21:14:25", "upload_time_iso_8601": "2018-07-16T21:14:25.477463Z", "url": "https://files.pythonhosted.org/packages/92/07/f2730d1545ec7a449c22c09d4c8785aa7e4a73f62faa924ef07ef802ee6f/pypowerworld-0.3.6-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b578cc552de50282b66e54087a08f473", "sha256": "8ca9c2c99a11c52abd20cdd8c5e5f500acd5c5ade36d6e0ef2c113921afd3638"}, "downloads": -1, "filename": "pypowerworld-0.3.6.tar.gz", "has_sig": false, "md5_digest": "b578cc552de50282b66e54087a08f473", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5686, "upload_time": "2018-07-16T21:14:19", "upload_time_iso_8601": "2018-07-16T21:14:19.298501Z", "url": "https://files.pythonhosted.org/packages/17/01/971395c2b95a8803b3d8660ad34600542431c001e4317aaf5ad315ffe59e/pypowerworld-0.3.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:59:14 2020"}