{"info": {"author": "Antoine Millet", "author_email": "antoine@inaps.org", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Topic :: Software Development", "Topic :: Software Development :: Libraries", "Topic :: Text Processing"], "description": "=========\nConfiture\n=========\n\n.. image:: https://raw.githubusercontent.com/NaPs/Confiture/master/docs/_static/images/confiture_logo.png\n\nConfiture (formerly Dotconf) is an advanced configuration parser which allow\nnested sections to any level, typed values in syntax, file include and so more.\nConfiture is also shipped with a powerful schema validation system.\n\nThe full documentation can be found here: http://confiture.readthedocs.org\n\n.. image:: https://www.ohloh.net/p/python-confiture/widgets/project_thin_badge.gif\n   :target: https://www.ohloh.net/p/python-confiture?ref=sample\n\n.. image:: https://travis-ci.org/NaPs/Confiture.svg?branch=master\n   :target: https://travis-ci.org/NaPs/Confiture\n\n\nFeatures\n--------\n\n- Configuration format kept as simple as possible\n- Developer friendly APIs\n- Python 2 and 3 compatibility\n- Types are expressed in the syntax, so the parser can guess it without\n  validation\n- Four primitive types: string, number, boolean, or list\n- More complex composite types can be created using the schema validation\n  system\n- Nested section of any deep. Sections can take a special \"argument\" value\n  (look at the example)\n- Schema validation system, all schema can be defined using declarative or\n  imperative way\n- External file include with globbing\n- Integration with argparse\n- Tests (only parser is covered yet)\n- Released under MIT license\n\n\nExample\n-------\n\nThis is an example of configuration file for an imaginary web server::\n\n\n    daemon = yes\n    pidfile = '/var/run/myapp.pid'\n    interface = '0.0.0.0:80'\n    interface_ssl = '0.0.0.0:443'\n\n    host 'example.org' {\n        path '/' {\n            rate_limit = 30\n        }\n    }\n\n    host 'protected.example.org' {\n        enable_ssl = yes\n\n        path '/files' {\n            enable_auth = yes\n            user 'foo' {\n                password = 'bar'\n            }\n        }\n    }\n\nYou can access to each values using the developer friendly API::\n\n    >>> from confiture import Confiture\n    >>> parsed_conf = Confiture.from_filename('mywebserver.conf').parse()\n    >>> print parsed_conf.get('daemon', False)\n    True\n\n\nEven more exciting, you can create a validation schema to avoid you the\npainful chore of manual configuration file validation::\n\n    from confiture.schema.containers import many, once\n    from confiture.schema.containers import Section, Value\n    from confiture.schema.types import Boolean, Integer, Float, String\n\n    # Schema definition:\n\n    class UserSection(Section):\n        password = Value(String())\n        _meta = {'repeat': many, 'unique': True}\n\n    class PathSection(Section):\n        rate_limit = Value(Float(), default=0)\n        enable_auth = Value(Boolean(), default=False)\n        user = UserSection()\n\n    class VirtualHostSection(Section):\n        enable_ssl = Value(Boolean(), default=False)\n        path = PathSection()\n        _meta = {'repeat': many, 'unique': True}\n\n    class MyWebserverConfiguration(Section):\n        daemon = Value(Boolean(), default=False)\n        pidfile = Value(String(), default=None)\n        interface = Value(String(), default='127.0.0.1:80')\n        interface_ssl = Value(String(), default='127.0.0.1:443')\n        host = VirtualHostSection()\n\nThen you can use the API exactly as if it was not validated::\n\n    >>> conf = '''\n    ... daemon = yes\n    ... pidfile = '/var/run/myapp.pid'\n    ... interface = '0.0.0.0:80'\n    ... interface_ssl = '0.0.0.0:443'\n    ...\n    ... host 'example.org' {\n    ...     path '/' {\n    ...         rate_limit = 30\n    ...     }\n    ... }\n    ...\n    ... host 'protected.example.org' {\n    ...     enable_ssl = yes\n    ...\n    ...     path '/files' {\n    ...         enable_auth = yes\n    ...         user 'foo' {\n    ...             password = 'bar'\n    ...         }\n    ...     }\n    ... }\n    ... '''\n    >>> from confiture import Confiture\n    >>> from myconfschema import MyWebserverConfiguration\n    >>> parsed_conf = Confiture(conf, schema=MyWebserverConfiguration()).parse()\n    >>> print 'daemon:', parsed_conf.get('daemon')\n    daemon: True\n    >>> for vhost in parsed_conf.subsections('host'):\n    >>>     print vhost.args\n    >>>     if vhost.get('enable_ssl'):\n    >>>         print '  SSL enabled'\n    >>>     for path in vhost.subsections('path'):\n    >>>         print '  ' + path.args\n    >>>         if path.get('enable_auth'):\n    >>>             print '    Following users can access to this directory:'\n    >>>             for user in path.subsections('user'):\n    >>>                 print '     - ' + user.args\n    >>>\n    example.org\n      /\n    protected.example.org\n      SSL enabled\n      /files\n        Following users can access to this directory:\n          - foo\n\nSetup\n-----\n\nThe fastest and more common way to install Confiture is using pip::\n\n    pip install confiture\n\nDebian\n~~~~~~\n\nIf you use Debian, you can also use the Tecknet repositories. Add this lines\nin your ``/etc/apt/source.list`` file::\n\n    deb http://debian.tecknet.org/debian squeeze tecknet\n    deb-src http://debian.tecknet.org/debian squeeze tecknet\n\nAdd the Tecknet repositories key in your keyring:\n\n    # wget http://debian.tecknet.org/debian/public.key -O - | apt-key add -\n\nThen, update and install::\n\n    # aptitude update\n    # aptitude install python-confiture\n\nArchlinux\n~~~~~~~~~\n\nIf you use Archlinux, a Confiture package is available in Aur::\n\n    yaourt -S python2-confiture\n\n\nTODO\n----\n\n- More test.\n\n\nChangelog\n---------\n\nv2.1 - Strawberry mark II, released on 12/10/16\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis release only fix a small bug related to encoding and setuptools building\nprocess and adds the Path schema type contributed by Ana\u00ebl Beutot.\n\nChanges:\n\n- Added the Path schema type\n- Fixed encoding bug when building Python package on Python3/non-utf8 system\n\nv2.0 - Strawberry, released on 11/05/14\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nI finally decided to rename Dotconf as Confiture to avoid name conflict with\nanother (and similar) project which is already packaged in several distro.\nConfiture means jam in French and is also at one letter from Configure.\n\nObviously, this change has broken the API, so I incremented sur API compat\nversion number. Migrating from Dotconf to Confiture will be simple as\nsubstituting \"dotconf\" by \"confiture\" and \"Dotconf\" by \"Confiture\".\n\nChanges:\n\n- Renamed Dotconf as Confiture\n- Added a beautiful logo :-)\n- Fixed documentation build\n- Fixed Travis-CI execution\n- Fixed parser which now detects unexpected end of files\n- Now use universal newline flag when opening file in from_filename (ref #13)\n\nNew contributors:\n\n- Gr\u00e9goire Rocher (provided a fix for the parser)\n\nv1.8 released on 08/09/13\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis new release bring a lot of bugfixes all reported by Stefan Tschiggerl.\nThanks to him for its time and its help to enhance Confiture.\n\nChanges:\n\n- Fixed a bug where from_filename is not passing extra\n- Fixed examples in readme and docs\n- Fixed bad API usage in containers' argument validation\n- Handle the uniqueness validation of empty args\n- Added single subsection access method (eg: section.subsection('foo'))\n- Fixed optional section without occurrence not working\n- Fixed a bug when subsection method is used twice with the same name\n- Fixed traceback when a section is not in schema\n\nNew contributors:\n\n- Stefan Tschiggerl (bug report and fixes)\n\nv1.7 released on 31/07/13\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe major (and almost the only) change of this release is the compatibility with\nPython 3. This work has been done with the help of 2to3 with some thing fixed\nmanually. Enjoy!\n\n- Added compatibility with Python 3\n- Now use py.test instead of nosetests\n\nv1.6 released on 09/12/12\n~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis second stable release bring some bug fixes and features, the API has not\nbeen broken. I also registered the project on travis-ci and I will try to\nimprove the test coverage for the next release.\n\nChanges:\n\n- Added Choice container\n- Added a from_filename constructor the the Confiture class\n- Added encoding management (by default, files are parsed in UTF-8)\n- Added continuous integration with travis\n- Fixed bug with Float type validation\n- Fixed an error when a section is included by an external file (thanks to\n  DuanmuChun for its bug report and help to fix it)\n- Fixed other minor bugs\n\nNew contributors:\n\n- DuanmuChun (bug report and help to fix it)\n\nv1.5 released on 14/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nFirst stable release of Confiture has been released, development will now take\ncare of API compatibility. The project status has been changed to \"Beta\" on the\nPYPI, and should be \"Stable\" on the next release if no major bug is found.\nPackages will be updated for Debian and Archlinux, feel free to contact me if\nyou want to package it for your distro.\n\nChanges:\n\n- Added Eval, NamedRegex and RegexPattern types\n- Added TypedArray container\n- Fixed bug with scalar values from a singleton list in Value container\n- Fixed argument validation in Section container\n- Updated documentation (new tips and tricks section)\n\nNew contributors:\n\n- Ana\u00ebl Beutot (thanks for RegexPattern type and argument validation fix)\n\nv0.4 released on 07/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added debian package\n- Added IPSocketAddress type\n- Added Array container\n- Added release procedure\n- Fixed bug on IPAddress and IPNetwork types when ipaddr is missing\n- Fixed documentation build\n\nv0.3 released on 04/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added IPAddress, IPNetwork, Regex and Url types\n- Added min and max options on Integer type\n- Added units on number parsing (42k == 42000)\n- Fixed bug with validation of long numbers\n\nv0.2 released on 03/04/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Added argparse integration feature & documentation\n- Cleanup\n\nv0.1 released on 24/03/2012\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\n- Initial version.\n\n\nA note on versioning\n--------------------\n\nConfiture use a two numbers X.Y versioning. The Y part is incremented by one on\neach release. The X part is used as API compatibility indicator and will be\nincremented each time the API is broken.\n\n\nContribute\n----------\n\nYou can contribute to Confiture through these ways:\n\n- Github: https://github.com/NaPs/Confiture\n\nFeel free to contact me for any question/suggestion: <antoine@inaps.org>.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://idevelop.org/p/confiture/", "keywords": "configuration parser confiture conf dotconf", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "confiture", "package_url": "https://pypi.org/project/confiture/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/confiture/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://idevelop.org/p/confiture/"}, "release_url": "https://pypi.org/project/confiture/2.1/", "requires_dist": null, "requires_python": null, "summary": "Advanced configuration parser for Python", "version": "2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"https://raw.githubusercontent.com/NaPs/Confiture/master/docs/_static/images/confiture_logo.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/972aedff3fc873fc50a1b7cfa067e4d678b3b9be/68747470733a2f2f7261772e67697468756275736572636f6e74656e742e636f6d2f4e6150732f436f6e6669747572652f6d61737465722f646f63732f5f7374617469632f696d616765732f636f6e6669747572655f6c6f676f2e706e67\">\n<p>Confiture (formerly Dotconf) is an advanced configuration parser which allow\nnested sections to any level, typed values in syntax, file include and so more.\nConfiture is also shipped with a powerful schema validation system.</p>\n<p>The full documentation can be found here: <a href=\"http://confiture.readthedocs.org\" rel=\"nofollow\">http://confiture.readthedocs.org</a></p>\n<a href=\"https://www.ohloh.net/p/python-confiture?ref=sample\" rel=\"nofollow\"><img alt=\"https://www.ohloh.net/p/python-confiture/widgets/project_thin_badge.gif\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ea0a3f23985489ae18094b683d4b874980a51fe/68747470733a2f2f7777772e6f686c6f682e6e65742f702f707974686f6e2d636f6e6669747572652f776964676574732f70726f6a6563745f7468696e5f62616467652e676966\"></a>\n<a href=\"https://travis-ci.org/NaPs/Confiture\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/NaPs/Confiture.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/548f517d260dd108a451059e229768b35b50e314/68747470733a2f2f7472617669732d63692e6f72672f4e6150732f436f6e6669747572652e7376673f6272616e63683d6d6173746572\"></a>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>Configuration format kept as simple as possible</li>\n<li>Developer friendly APIs</li>\n<li>Python 2 and 3 compatibility</li>\n<li>Types are expressed in the syntax, so the parser can guess it without\nvalidation</li>\n<li>Four primitive types: string, number, boolean, or list</li>\n<li>More complex composite types can be created using the schema validation\nsystem</li>\n<li>Nested section of any deep. Sections can take a special \u201cargument\u201d value\n(look at the example)</li>\n<li>Schema validation system, all schema can be defined using declarative or\nimperative way</li>\n<li>External file include with globbing</li>\n<li>Integration with argparse</li>\n<li>Tests (only parser is covered yet)</li>\n<li>Released under MIT license</li>\n</ul>\n</div>\n<div id=\"example\">\n<h2>Example</h2>\n<p>This is an example of configuration file for an imaginary web server:</p>\n<pre>daemon = yes\npidfile = '/var/run/myapp.pid'\ninterface = '0.0.0.0:80'\ninterface_ssl = '0.0.0.0:443'\n\nhost 'example.org' {\n    path '/' {\n        rate_limit = 30\n    }\n}\n\nhost 'protected.example.org' {\n    enable_ssl = yes\n\n    path '/files' {\n        enable_auth = yes\n        user 'foo' {\n            password = 'bar'\n        }\n    }\n}\n</pre>\n<p>You can access to each values using the developer friendly API:</p>\n<pre>&gt;&gt;&gt; from confiture import Confiture\n&gt;&gt;&gt; parsed_conf = Confiture.from_filename('mywebserver.conf').parse()\n&gt;&gt;&gt; print parsed_conf.get('daemon', False)\nTrue\n</pre>\n<p>Even more exciting, you can create a validation schema to avoid you the\npainful chore of manual configuration file validation:</p>\n<pre>from confiture.schema.containers import many, once\nfrom confiture.schema.containers import Section, Value\nfrom confiture.schema.types import Boolean, Integer, Float, String\n\n# Schema definition:\n\nclass UserSection(Section):\n    password = Value(String())\n    _meta = {'repeat': many, 'unique': True}\n\nclass PathSection(Section):\n    rate_limit = Value(Float(), default=0)\n    enable_auth = Value(Boolean(), default=False)\n    user = UserSection()\n\nclass VirtualHostSection(Section):\n    enable_ssl = Value(Boolean(), default=False)\n    path = PathSection()\n    _meta = {'repeat': many, 'unique': True}\n\nclass MyWebserverConfiguration(Section):\n    daemon = Value(Boolean(), default=False)\n    pidfile = Value(String(), default=None)\n    interface = Value(String(), default='127.0.0.1:80')\n    interface_ssl = Value(String(), default='127.0.0.1:443')\n    host = VirtualHostSection()\n</pre>\n<p>Then you can use the API exactly as if it was not validated:</p>\n<pre>&gt;&gt;&gt; conf = '''\n... daemon = yes\n... pidfile = '/var/run/myapp.pid'\n... interface = '0.0.0.0:80'\n... interface_ssl = '0.0.0.0:443'\n...\n... host 'example.org' {\n...     path '/' {\n...         rate_limit = 30\n...     }\n... }\n...\n... host 'protected.example.org' {\n...     enable_ssl = yes\n...\n...     path '/files' {\n...         enable_auth = yes\n...         user 'foo' {\n...             password = 'bar'\n...         }\n...     }\n... }\n... '''\n&gt;&gt;&gt; from confiture import Confiture\n&gt;&gt;&gt; from myconfschema import MyWebserverConfiguration\n&gt;&gt;&gt; parsed_conf = Confiture(conf, schema=MyWebserverConfiguration()).parse()\n&gt;&gt;&gt; print 'daemon:', parsed_conf.get('daemon')\ndaemon: True\n&gt;&gt;&gt; for vhost in parsed_conf.subsections('host'):\n&gt;&gt;&gt;     print vhost.args\n&gt;&gt;&gt;     if vhost.get('enable_ssl'):\n&gt;&gt;&gt;         print '  SSL enabled'\n&gt;&gt;&gt;     for path in vhost.subsections('path'):\n&gt;&gt;&gt;         print '  ' + path.args\n&gt;&gt;&gt;         if path.get('enable_auth'):\n&gt;&gt;&gt;             print '    Following users can access to this directory:'\n&gt;&gt;&gt;             for user in path.subsections('user'):\n&gt;&gt;&gt;                 print '     - ' + user.args\n&gt;&gt;&gt;\nexample.org\n  /\nprotected.example.org\n  SSL enabled\n  /files\n    Following users can access to this directory:\n      - foo\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>The fastest and more common way to install Confiture is using pip:</p>\n<pre>pip install confiture\n</pre>\n<div id=\"debian\">\n<h3>Debian</h3>\n<p>If you use Debian, you can also use the Tecknet repositories. Add this lines\nin your <tt>/etc/apt/source.list</tt> file:</p>\n<pre>deb http://debian.tecknet.org/debian squeeze tecknet\ndeb-src http://debian.tecknet.org/debian squeeze tecknet\n</pre>\n<p>Add the Tecknet repositories key in your keyring:</p>\n<blockquote>\n# wget <a href=\"http://debian.tecknet.org/debian/public.key\" rel=\"nofollow\">http://debian.tecknet.org/debian/public.key</a> -O - | apt-key add -</blockquote>\n<p>Then, update and install:</p>\n<pre># aptitude update\n# aptitude install python-confiture\n</pre>\n</div>\n<div id=\"archlinux\">\n<h3>Archlinux</h3>\n<p>If you use Archlinux, a Confiture package is available in Aur:</p>\n<pre>yaourt -S python2-confiture\n</pre>\n</div>\n</div>\n<div id=\"todo\">\n<h2>TODO</h2>\n<ul>\n<li>More test.</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"v2-1-strawberry-mark-ii-released-on-12-10-16\">\n<h3>v2.1 - Strawberry mark II, released on 12/10/16</h3>\n<p>This release only fix a small bug related to encoding and setuptools building\nprocess and adds the Path schema type contributed by Ana\u00ebl Beutot.</p>\n<p>Changes:</p>\n<ul>\n<li>Added the Path schema type</li>\n<li>Fixed encoding bug when building Python package on Python3/non-utf8 system</li>\n</ul>\n</div>\n<div id=\"v2-0-strawberry-released-on-11-05-14\">\n<h3>v2.0 - Strawberry, released on 11/05/14</h3>\n<p>I finally decided to rename Dotconf as Confiture to avoid name conflict with\nanother (and similar) project which is already packaged in several distro.\nConfiture means jam in French and is also at one letter from Configure.</p>\n<p>Obviously, this change has broken the API, so I incremented sur API compat\nversion number. Migrating from Dotconf to Confiture will be simple as\nsubstituting \u201cdotconf\u201d by \u201cconfiture\u201d and \u201cDotconf\u201d by \u201cConfiture\u201d.</p>\n<p>Changes:</p>\n<ul>\n<li>Renamed Dotconf as Confiture</li>\n<li>Added a beautiful logo :-)</li>\n<li>Fixed documentation build</li>\n<li>Fixed Travis-CI execution</li>\n<li>Fixed parser which now detects unexpected end of files</li>\n<li>Now use universal newline flag when opening file in from_filename (ref #13)</li>\n</ul>\n<p>New contributors:</p>\n<ul>\n<li>Gr\u00e9goire Rocher (provided a fix for the parser)</li>\n</ul>\n</div>\n<div id=\"v1-8-released-on-08-09-13\">\n<h3>v1.8 released on 08/09/13</h3>\n<p>This new release bring a lot of bugfixes all reported by Stefan Tschiggerl.\nThanks to him for its time and its help to enhance Confiture.</p>\n<p>Changes:</p>\n<ul>\n<li>Fixed a bug where from_filename is not passing extra</li>\n<li>Fixed examples in readme and docs</li>\n<li>Fixed bad API usage in containers\u2019 argument validation</li>\n<li>Handle the uniqueness validation of empty args</li>\n<li>Added single subsection access method (eg: section.subsection(\u2018foo\u2019))</li>\n<li>Fixed optional section without occurrence not working</li>\n<li>Fixed a bug when subsection method is used twice with the same name</li>\n<li>Fixed traceback when a section is not in schema</li>\n</ul>\n<p>New contributors:</p>\n<ul>\n<li>Stefan Tschiggerl (bug report and fixes)</li>\n</ul>\n</div>\n<div id=\"v1-7-released-on-31-07-13\">\n<h3>v1.7 released on 31/07/13</h3>\n<p>The major (and almost the only) change of this release is the compatibility with\nPython 3. This work has been done with the help of 2to3 with some thing fixed\nmanually. Enjoy!</p>\n<ul>\n<li>Added compatibility with Python 3</li>\n<li>Now use py.test instead of nosetests</li>\n</ul>\n</div>\n<div id=\"v1-6-released-on-09-12-12\">\n<h3>v1.6 released on 09/12/12</h3>\n<p>This second stable release bring some bug fixes and features, the API has not\nbeen broken. I also registered the project on travis-ci and I will try to\nimprove the test coverage for the next release.</p>\n<p>Changes:</p>\n<ul>\n<li>Added Choice container</li>\n<li>Added a from_filename constructor the the Confiture class</li>\n<li>Added encoding management (by default, files are parsed in UTF-8)</li>\n<li>Added continuous integration with travis</li>\n<li>Fixed bug with Float type validation</li>\n<li>Fixed an error when a section is included by an external file (thanks to\nDuanmuChun for its bug report and help to fix it)</li>\n<li>Fixed other minor bugs</li>\n</ul>\n<p>New contributors:</p>\n<ul>\n<li>DuanmuChun (bug report and help to fix it)</li>\n</ul>\n</div>\n<div id=\"v1-5-released-on-14-04-2012\">\n<h3>v1.5 released on 14/04/2012</h3>\n<p>First stable release of Confiture has been released, development will now take\ncare of API compatibility. The project status has been changed to \u201cBeta\u201d on the\nPYPI, and should be \u201cStable\u201d on the next release if no major bug is found.\nPackages will be updated for Debian and Archlinux, feel free to contact me if\nyou want to package it for your distro.</p>\n<p>Changes:</p>\n<ul>\n<li>Added Eval, NamedRegex and RegexPattern types</li>\n<li>Added TypedArray container</li>\n<li>Fixed bug with scalar values from a singleton list in Value container</li>\n<li>Fixed argument validation in Section container</li>\n<li>Updated documentation (new tips and tricks section)</li>\n</ul>\n<p>New contributors:</p>\n<ul>\n<li>Ana\u00ebl Beutot (thanks for RegexPattern type and argument validation fix)</li>\n</ul>\n</div>\n<div id=\"v0-4-released-on-07-04-2012\">\n<h3>v0.4 released on 07/04/2012</h3>\n<ul>\n<li>Added debian package</li>\n<li>Added IPSocketAddress type</li>\n<li>Added Array container</li>\n<li>Added release procedure</li>\n<li>Fixed bug on IPAddress and IPNetwork types when ipaddr is missing</li>\n<li>Fixed documentation build</li>\n</ul>\n</div>\n<div id=\"v0-3-released-on-04-04-2012\">\n<h3>v0.3 released on 04/04/2012</h3>\n<ul>\n<li>Added IPAddress, IPNetwork, Regex and Url types</li>\n<li>Added min and max options on Integer type</li>\n<li>Added units on number parsing (42k == 42000)</li>\n<li>Fixed bug with validation of long numbers</li>\n</ul>\n</div>\n<div id=\"v0-2-released-on-03-04-2012\">\n<h3>v0.2 released on 03/04/2012</h3>\n<ul>\n<li>Added argparse integration feature &amp; documentation</li>\n<li>Cleanup</li>\n</ul>\n</div>\n<div id=\"v0-1-released-on-24-03-2012\">\n<h3>v0.1 released on 24/03/2012</h3>\n<ul>\n<li>Initial version.</li>\n</ul>\n</div>\n</div>\n<div id=\"a-note-on-versioning\">\n<h2>A note on versioning</h2>\n<p>Confiture use a two numbers X.Y versioning. The Y part is incremented by one on\neach release. The X part is used as API compatibility indicator and will be\nincremented each time the API is broken.</p>\n</div>\n<div id=\"contribute\">\n<h2>Contribute</h2>\n<p>You can contribute to Confiture through these ways:</p>\n<ul>\n<li>Github: <a href=\"https://github.com/NaPs/Confiture\" rel=\"nofollow\">https://github.com/NaPs/Confiture</a></li>\n</ul>\n<p>Feel free to contact me for any question/suggestion: &lt;<a href=\"mailto:antoine%40inaps.org\">antoine<span>@</span>inaps<span>.</span>org</a>&gt;.</p>\n</div>\n\n          </div>"}, "last_serial": 2402081, "releases": {"2.0": [{"comment_text": "", "digests": {"md5": "faebca82692f90de352b03bc5d659b02", "sha256": "a910a3d4074c54dbc1968e71b5208532ee08587a3b41690475c751e9e9a197ae"}, "downloads": -1, "filename": "confiture-2.0-py2.7.egg", "has_sig": false, "md5_digest": "faebca82692f90de352b03bc5d659b02", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 38669, "upload_time": "2014-05-11T10:12:23", "upload_time_iso_8601": "2014-05-11T10:12:23.587103Z", "url": "https://files.pythonhosted.org/packages/14/76/6098e130bf5359043953ef7e632fc3063a16293fed1111516c772bb7df75/confiture-2.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "5b8fed73d08d51e9ae8e600418e5a821", "sha256": "841d39a6ed4361b9f4761a5f8b8f51363e4445aa1002b3f9b5750292b88833ae"}, "downloads": -1, "filename": "confiture-2.0.tar.gz", "has_sig": false, "md5_digest": "5b8fed73d08d51e9ae8e600418e5a821", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46350, "upload_time": "2014-05-11T10:12:20", "upload_time_iso_8601": "2014-05-11T10:12:20.997806Z", "url": "https://files.pythonhosted.org/packages/26/80/187453c15b8ce2264dc0dba26b6647494219d787a383daf13600079841b8/confiture-2.0.tar.gz", "yanked": false}], "2.1": [{"comment_text": "", "digests": {"md5": "628fb7734374fcb1fd98108d769df32d", "sha256": "420634bc68351da8482f4e054cc6841fb7c86731f5bfc163e0aca049371b0d60"}, "downloads": -1, "filename": "confiture-2.1-py2.7.egg", "has_sig": false, "md5_digest": "628fb7734374fcb1fd98108d769df32d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 39157, "upload_time": "2016-10-12T19:53:05", "upload_time_iso_8601": "2016-10-12T19:53:05.717871Z", "url": "https://files.pythonhosted.org/packages/13/fb/9c8f90f10d446a2cbd0dc0c8507423da1ef0103a4f0b6c0555c4b223d864/confiture-2.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f1b8bc27f0b27a727ac59516097939e", "sha256": "38ef7bb57a98527522fb1b61355a250b7ef4cf26964197bb6696920afd624eef"}, "downloads": -1, "filename": "confiture-2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0f1b8bc27f0b27a727ac59516097939e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22659, "upload_time": "2016-10-16T09:07:28", "upload_time_iso_8601": "2016-10-16T09:07:28.085285Z", "url": "https://files.pythonhosted.org/packages/14/4e/ef90bb67f4ebb208e34da04ea9d08adb53732de9958dd91e886685681c15/confiture-2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5dd9af083ff51cd449c5485aeb8625d", "sha256": "7f80f624683be6825e2de51b299a04a2a8e0a1cf88a1d3a3c758ed250c771ed3"}, "downloads": -1, "filename": "confiture-2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a5dd9af083ff51cd449c5485aeb8625d", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 22661, "upload_time": "2016-10-16T09:07:35", "upload_time_iso_8601": "2016-10-16T09:07:35.224966Z", "url": "https://files.pythonhosted.org/packages/ca/ff/93cfc0da1a26b2e10bda055d1f12fe66b6935f0f041a29ad0e1e031015d1/confiture-2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b91d2a4785fb0689307963f7286890ab", "sha256": "38970d34bdc6ba8ba021cd56ead7cec23999a6c23c17ccfef7e3810b7184e8b9"}, "downloads": -1, "filename": "confiture-2.1.tar.gz", "has_sig": false, "md5_digest": "b91d2a4785fb0689307963f7286890ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46744, "upload_time": "2016-10-12T19:53:02", "upload_time_iso_8601": "2016-10-12T19:53:02.168982Z", "url": "https://files.pythonhosted.org/packages/14/ee/28a6fda6baa280b16dbc6bbac49a6392fef83c028022d52728c4db85c0b0/confiture-2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "628fb7734374fcb1fd98108d769df32d", "sha256": "420634bc68351da8482f4e054cc6841fb7c86731f5bfc163e0aca049371b0d60"}, "downloads": -1, "filename": "confiture-2.1-py2.7.egg", "has_sig": false, "md5_digest": "628fb7734374fcb1fd98108d769df32d", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 39157, "upload_time": "2016-10-12T19:53:05", "upload_time_iso_8601": "2016-10-12T19:53:05.717871Z", "url": "https://files.pythonhosted.org/packages/13/fb/9c8f90f10d446a2cbd0dc0c8507423da1ef0103a4f0b6c0555c4b223d864/confiture-2.1-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0f1b8bc27f0b27a727ac59516097939e", "sha256": "38ef7bb57a98527522fb1b61355a250b7ef4cf26964197bb6696920afd624eef"}, "downloads": -1, "filename": "confiture-2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0f1b8bc27f0b27a727ac59516097939e", "packagetype": "bdist_wheel", "python_version": "2.7", "requires_python": null, "size": 22659, "upload_time": "2016-10-16T09:07:28", "upload_time_iso_8601": "2016-10-16T09:07:28.085285Z", "url": "https://files.pythonhosted.org/packages/14/4e/ef90bb67f4ebb208e34da04ea9d08adb53732de9958dd91e886685681c15/confiture-2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a5dd9af083ff51cd449c5485aeb8625d", "sha256": "7f80f624683be6825e2de51b299a04a2a8e0a1cf88a1d3a3c758ed250c771ed3"}, "downloads": -1, "filename": "confiture-2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a5dd9af083ff51cd449c5485aeb8625d", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 22661, "upload_time": "2016-10-16T09:07:35", "upload_time_iso_8601": "2016-10-16T09:07:35.224966Z", "url": "https://files.pythonhosted.org/packages/ca/ff/93cfc0da1a26b2e10bda055d1f12fe66b6935f0f041a29ad0e1e031015d1/confiture-2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b91d2a4785fb0689307963f7286890ab", "sha256": "38970d34bdc6ba8ba021cd56ead7cec23999a6c23c17ccfef7e3810b7184e8b9"}, "downloads": -1, "filename": "confiture-2.1.tar.gz", "has_sig": false, "md5_digest": "b91d2a4785fb0689307963f7286890ab", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 46744, "upload_time": "2016-10-12T19:53:02", "upload_time_iso_8601": "2016-10-12T19:53:02.168982Z", "url": "https://files.pythonhosted.org/packages/14/ee/28a6fda6baa280b16dbc6bbac49a6392fef83c028022d52728c4db85c0b0/confiture-2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:50 2020"}