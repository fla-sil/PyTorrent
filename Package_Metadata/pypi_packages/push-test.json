{"info": {"author": "JR Conlin", "author_email": "jr+src@mozilla.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Topic :: Internet :: WWW/HTTP"], "description": "Autopush Smoke Test Application\n===============================\n\nThis app is designed to exercise the Autopush server.\nTests can be contained as a JSON file.\n\ne.g.\n\n.. code:: json\n\n    [[\"hello\", {}],\n     [\"register\", {}],\n     [\"push\", {\"data\": \"mary had a little lamb\"}],\n     [\"ack\", {}],\n    ]\n\nThe following commands are available:\n\n*hello* - begin session with autopush server.\n\n``args``\n - `uaid` either None if new session or a previous `uaid`\n\n*register* - register a new Channel\n\n``args``\n- `channelID` uuid of the channel to create (None if new)\n\n- `key` - VAPID public key base64 string (optional)\n\n*push* - push to an endpoint\n\n``args``\n\n- `pushEndpoint` - the push endpoint (defaults to registered)\n\n- `data` - Data to push\n\n- `headers` - Dictionary of headers to include in push\n\n*ack* - Acknowledge the last received message\n\n``Args``\n\n- `channelID` - ChannelID of the last message (defaults to last recv'd)\n\n- `version` - message version information (defaults to last recv'd)\n\n*done* - Close down connection\n\n``Args``\n\n- None\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "autopush test", "license": "MPL2", "maintainer": "", "maintainer_email": "", "name": "push-test", "package_url": "https://pypi.org/project/push-test/", "platform": "", "project_url": "https://pypi.org/project/push-test/", "project_urls": null, "release_url": "https://pypi.org/project/push-test/0.1.1/", "requires_dist": null, "requires_python": "", "summary": "Autopush Smoke Test", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This app is designed to exercise the Autopush server.\nTests can be contained as a JSON file.</p>\n<p>e.g.</p>\n<pre><span class=\"p\">[[</span><span class=\"s2\">\"hello\"</span><span class=\"p\">,</span> <span class=\"p\">{}],</span>\n <span class=\"p\">[</span><span class=\"s2\">\"register\"</span><span class=\"p\">,</span> <span class=\"p\">{}],</span>\n <span class=\"p\">[</span><span class=\"s2\">\"push\"</span><span class=\"p\">,</span> <span class=\"p\">{</span><span class=\"nt\">\"data\"</span><span class=\"p\">:</span> <span class=\"s2\">\"mary had a little lamb\"</span><span class=\"p\">}],</span>\n <span class=\"p\">[</span><span class=\"s2\">\"ack\"</span><span class=\"p\">,</span> <span class=\"p\">{}],</span>\n<span class=\"p\">]</span>\n</pre>\n<p>The following commands are available:</p>\n<p><em>hello</em> - begin session with autopush server.</p>\n<dl>\n<dt><tt>args</tt></dt>\n<dd><ul>\n<li><cite>uaid</cite> either None if new session or a previous <cite>uaid</cite></li>\n</ul>\n</dd>\n</dl>\n<p><em>register</em> - register a new Channel</p>\n<p><tt>args</tt>\n- <cite>channelID</cite> uuid of the channel to create (None if new)</p>\n<ul>\n<li><cite>key</cite> - VAPID public key base64 string (optional)</li>\n</ul>\n<p><em>push</em> - push to an endpoint</p>\n<p><tt>args</tt></p>\n<ul>\n<li><cite>pushEndpoint</cite> - the push endpoint (defaults to registered)</li>\n<li><cite>data</cite> - Data to push</li>\n<li><cite>headers</cite> - Dictionary of headers to include in push</li>\n</ul>\n<p><em>ack</em> - Acknowledge the last received message</p>\n<p><tt>Args</tt></p>\n<ul>\n<li><cite>channelID</cite> - ChannelID of the last message (defaults to last recv\u2019d)</li>\n<li><cite>version</cite> - message version information (defaults to last recv\u2019d)</li>\n</ul>\n<p><em>done</em> - Close down connection</p>\n<p><tt>Args</tt></p>\n<ul>\n<li>None</li>\n</ul>\n\n          </div>"}, "last_serial": 2950058, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f9d7d693cb61893dd3e8b731af3e00c7", "sha256": "155a0fc36c7c37a2b1eea3ee5362682da009c20d2b52b208340d8334eabe20c5"}, "downloads": -1, "filename": "push-test-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f9d7d693cb61893dd3e8b731af3e00c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7539, "upload_time": "2017-06-14T14:39:13", "upload_time_iso_8601": "2017-06-14T14:39:13.634497Z", "url": "https://files.pythonhosted.org/packages/b8/6c/70013294f825fc53fbafac131980dc7fc24858f7d55088a7d34cf99c3795/push-test-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "effe07d702a903cf11210cc6340a89f9", "sha256": "e4af2f4db889419170e664448591180a1895f122aa16388daa1bba2edbb945a5"}, "downloads": -1, "filename": "push-test-0.1.1.tar.gz", "has_sig": false, "md5_digest": "effe07d702a903cf11210cc6340a89f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8502, "upload_time": "2017-06-14T16:11:58", "upload_time_iso_8601": "2017-06-14T16:11:58.377249Z", "url": "https://files.pythonhosted.org/packages/c6/e6/f2a2d70f2887472d3639d97680f1a4f1f1d4a18dcdc363592bdc3debd71c/push-test-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "effe07d702a903cf11210cc6340a89f9", "sha256": "e4af2f4db889419170e664448591180a1895f122aa16388daa1bba2edbb945a5"}, "downloads": -1, "filename": "push-test-0.1.1.tar.gz", "has_sig": false, "md5_digest": "effe07d702a903cf11210cc6340a89f9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8502, "upload_time": "2017-06-14T16:11:58", "upload_time_iso_8601": "2017-06-14T16:11:58.377249Z", "url": "https://files.pythonhosted.org/packages/c6/e6/f2a2d70f2887472d3639d97680f1a4f1f1d4a18dcdc363592bdc3debd71c/push-test-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:13:07 2020"}