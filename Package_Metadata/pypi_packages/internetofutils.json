{"info": {"author": "matthyno", "author_email": "cjmatthy200@gmail.com", "bugtrack_url": null, "classifiers": ["Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Internet of Utilities\n\nInternet of Utilities (which will be shortented to IoU from now on) is a tool for a variety of utilities, including\nRoundbottom (or `Rndb`), a WIP flask extension and IDL, a very simple tool similar to `wget`.\n\n## Using Roundbottom\nTo make a simple roundbottom program, run the following code:\n```\nrndb = Rndb()\nRndb().run_app(torun=Rndb.helloworld)\n\n# or, for all the arguments\n\nrndb = Rndb()\n\nrndb.run_app(host=\"localhost\", port=8000, route=\"/\")\n\n```\n\ncompared to the longer\n```\nfrom flask import Flask\n\napp = Flask(__name__)\n\n\n\n@app.route('/')\n\ndef hello_world():\n\n    return 'Hello, World!'\n\t\n```\n\nThe `Rndb.helloworld` is an example program ran if no function to run was given, and is defined as:\n```\ndef helloworld():\n\n    return 'Hello, World!'\n\t\n```\n\nIf you want to use a custom function that *you* defined, use the following:\n```\n\ndef test123():\n\n    return 'Hello, other world!'\n\t\n\nrndb = Rndb()\n\nrndb.run_app(host=\"localhost\", port=8000, torun=test123, route=\"/\")\n\n```\n\nLet's step through the program.\n\n```\nrndb = Rndb()\nrndb.run_app(host=\"localhost\", port=8000, torun=Rndb.helloworld, route=\"/\")\n\n```\n\n\n`rndb = Rndb()` instantiates Roundbottom, for the use of `run_app`\n\n`rndb.run_app` runs an application with the following arguments:\n\n`host=\"localhost\"` is used to define the host. For a local webserver, use `localhost`. For a repl-like website, (e.g. [repl.it](https://repl.it/))\nuse something like `0.0.0.0`\n\n`port=8000` defines the port. You can have 8080, 8000, 6000, etc.\n\n`torun=Rndb.helloworld` defines which function to run. In this case, it runs the example program `Rndb.helloworld`, which just\ndoes `return \"Hello, World\"`.\n\n`route=\"/\"` simply puts @app.route(route) before the function you provided with `torun`.\n\n## Using IDL\n\nIDL is a simple function with one argument using one library; `urllib`.\nThe function is like `idl(url)`.\nReplace `url` with a URL, and you will get the text content for the URL's page.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/cjmatthy200/InternetOfUtilities/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "internetofutils", "package_url": "https://pypi.org/project/internetofutils/", "platform": "", "project_url": "https://pypi.org/project/internetofutils/", "project_urls": {"Homepage": "https://gitlab.com/cjmatthy200/InternetOfUtilities/"}, "release_url": "https://pypi.org/project/internetofutils/0.1.0/", "requires_dist": null, "requires_python": ">=3.6", "summary": "A utility package with various things in it.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Internet of Utilities</h1>\n<p>Internet of Utilities (which will be shortented to IoU from now on) is a tool for a variety of utilities, including\nRoundbottom (or <code>Rndb</code>), a WIP flask extension and IDL, a very simple tool similar to <code>wget</code>.</p>\n<h2>Using Roundbottom</h2>\n<p>To make a simple roundbottom program, run the following code:</p>\n<pre><code>rndb = Rndb()\nRndb().run_app(torun=Rndb.helloworld)\n\n# or, for all the arguments\n\nrndb = Rndb()\n\nrndb.run_app(host=\"localhost\", port=8000, route=\"/\")\n\n</code></pre>\n<p>compared to the longer</p>\n<pre><code>from flask import Flask\n\napp = Flask(__name__)\n\n\n\n@app.route('/')\n\ndef hello_world():\n\n    return 'Hello, World!'\n\t\n</code></pre>\n<p>The <code>Rndb.helloworld</code> is an example program ran if no function to run was given, and is defined as:</p>\n<pre><code>def helloworld():\n\n    return 'Hello, World!'\n\t\n</code></pre>\n<p>If you want to use a custom function that <em>you</em> defined, use the following:</p>\n<pre><code>\ndef test123():\n\n    return 'Hello, other world!'\n\t\n\nrndb = Rndb()\n\nrndb.run_app(host=\"localhost\", port=8000, torun=test123, route=\"/\")\n\n</code></pre>\n<p>Let's step through the program.</p>\n<pre><code>rndb = Rndb()\nrndb.run_app(host=\"localhost\", port=8000, torun=Rndb.helloworld, route=\"/\")\n\n</code></pre>\n<p><code>rndb = Rndb()</code> instantiates Roundbottom, for the use of <code>run_app</code></p>\n<p><code>rndb.run_app</code> runs an application with the following arguments:</p>\n<p><code>host=\"localhost\"</code> is used to define the host. For a local webserver, use <code>localhost</code>. For a repl-like website, (e.g. <a href=\"https://repl.it/\" rel=\"nofollow\">repl.it</a>)\nuse something like <code>0.0.0.0</code></p>\n<p><code>port=8000</code> defines the port. You can have 8080, 8000, 6000, etc.</p>\n<p><code>torun=Rndb.helloworld</code> defines which function to run. In this case, it runs the example program <code>Rndb.helloworld</code>, which just\ndoes <code>return \"Hello, World\"</code>.</p>\n<p><code>route=\"/\"</code> simply puts @app.route(route) before the function you provided with <code>torun</code>.</p>\n<h2>Using IDL</h2>\n<p>IDL is a simple function with one argument using one library; <code>urllib</code>.\nThe function is like <code>idl(url)</code>.\nReplace <code>url</code> with a URL, and you will get the text content for the URL's page.</p>\n\n          </div>"}, "last_serial": 7019130, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "15f7ab8c12f1055b4865882a9520f6aa", "sha256": "67ee0a875da0925d2bbdb1c8ced9c2bbd15f0da09ad41731cf88dfb184f1ccd2"}, "downloads": -1, "filename": "internetofutils-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "15f7ab8c12f1055b4865882a9520f6aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2938, "upload_time": "2020-04-14T18:21:49", "upload_time_iso_8601": "2020-04-14T18:21:49.392929Z", "url": "https://files.pythonhosted.org/packages/5e/4f/f2ad60e872b5913cd573bc17326a38352e22ef72b2596b7d71b6d48d2dd6/internetofutils-0.1.0-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "15f7ab8c12f1055b4865882a9520f6aa", "sha256": "67ee0a875da0925d2bbdb1c8ced9c2bbd15f0da09ad41731cf88dfb184f1ccd2"}, "downloads": -1, "filename": "internetofutils-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "15f7ab8c12f1055b4865882a9520f6aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 2938, "upload_time": "2020-04-14T18:21:49", "upload_time_iso_8601": "2020-04-14T18:21:49.392929Z", "url": "https://files.pythonhosted.org/packages/5e/4f/f2ad60e872b5913cd573bc17326a38352e22ef72b2596b7d71b6d48d2dd6/internetofutils-0.1.0-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 00:55:27 2020"}