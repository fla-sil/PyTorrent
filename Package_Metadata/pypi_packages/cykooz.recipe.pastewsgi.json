{"info": {"author": "Cykooz", "author_email": "saikuz@mail.ru", "bugtrack_url": null, "classifiers": ["Framework :: Buildout", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: GNU General Public License (GPL)", "Programming Language :: Python"], "description": "cykooz.recipe.pastewsgi\n=======================\n\nThis recipe creates a `paste.deploy`_ entry point for mod_wsgi_.\n\nThis project is a fork of recipe tranchitella.recipe.wsgi (https://pypi.python.org/pypi/tranchitella.recipe.wsgi)\noriginally created by Tranchitella Kft. Forked to add new options.\n\nUsage\n-----\n\nThis is a minimal ``buildout.cfg`` file which creates a WSGI script mod_wsgi\ncan use::\n\n    [buildout]\n    parts = wsgi\n\n    [wsgi]\n    recipe = cykooz.recipe.pastewsgi\n    eggs = myapplication\n    config-file = ${buildout:directory}/etc/deploy.ini\n    environ =\n        CHAMELEON_CACHE=true\n        CHAMELEON_STRICT=true\n    initialization =\n        import logging\n        logging.info('Run myapplication')\n\nThis will create a small python script in the bin directory called ``wsgi``\nwhich mod_wsgi can load. You can also use the optional ``extra-paths`` option\nto specify extra paths that are added to the python system path.\n\nYou may also use the ``script-name`` option to specify the name of the\ngenerated script file, if ``wsgi`` is unsuitable. Or you may use the ``target``\noption to specify a full path of the generated script file.\n\nThe apache configuration for this buildout looks like this:::\n\n    WSGIScriptAlias /mysite /path/to/buildout/bin/wsgi\n\n    <Directory /home/me/buildout>\n        Order deny,allow\n        Allow from all\n    </Directory>\n\nThis recipe does not fully install packages, which means that console scripts\nwill not be created. If you need console scripts you can add a second buildout\npart which uses `zc.recipe.egg`_ to do a full install.\n\n.. _zc.buildout: http://pypi.python.org/pypi/zc.buildout\n.. _paste.deploy: http://pythonpaste.org/deploy/\n.. _mod_wsgi: http://code.google.com/p/modwsgi/\n.. _zc.recipe.egg: http://pypi.python.org/pypi/zc.recipe.egg\n\n\nChanges\n=======\n\n0.6.1 (2015-06-25)\n------------------\n\n- Fixed a bug when using Python 3.x.\n- Added the initialization option ``target`` that can be used to specify a full path of generated script.\n\n0.5 (2014-05-20)\n----------------\n\n- Create fork of ``tranchitella.recipe.wsgi == 0.4``\n- Add an initialization option to specify code for additional initialization", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://bitbucket.org/cykooz/cykooz.recipe.pastewsgi", "keywords": null, "license": "GPL 2", "maintainer": null, "maintainer_email": null, "name": "cykooz.recipe.pastewsgi", "package_url": "https://pypi.org/project/cykooz.recipe.pastewsgi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/cykooz.recipe.pastewsgi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://bitbucket.org/cykooz/cykooz.recipe.pastewsgi"}, "release_url": "https://pypi.org/project/cykooz.recipe.pastewsgi/0.6.1/", "requires_dist": null, "requires_python": null, "summary": "Buildout recipe to create paste.deploy entry points for mod_wsgi or uwsgi", "version": "0.6.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"cykooz-recipe-pastewsgi\">\n<h2>cykooz.recipe.pastewsgi</h2>\n<p>This recipe creates a <a href=\"http://pythonpaste.org/deploy/\" rel=\"nofollow\">paste.deploy</a> entry point for <a href=\"http://code.google.com/p/modwsgi/\" rel=\"nofollow\">mod_wsgi</a>.</p>\n<p>This project is a fork of recipe tranchitella.recipe.wsgi (<a href=\"https://pypi.python.org/pypi/tranchitella.recipe.wsgi\" rel=\"nofollow\">https://pypi.python.org/pypi/tranchitella.recipe.wsgi</a>)\noriginally created by Tranchitella Kft. Forked to add new options.</p>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>This is a minimal <tt>buildout.cfg</tt> file which creates a WSGI script mod_wsgi\ncan use:</p>\n<pre>[buildout]\nparts = wsgi\n\n[wsgi]\nrecipe = cykooz.recipe.pastewsgi\neggs = myapplication\nconfig-file = ${buildout:directory}/etc/deploy.ini\nenviron =\n    CHAMELEON_CACHE=true\n    CHAMELEON_STRICT=true\ninitialization =\n    import logging\n    logging.info('Run myapplication')\n</pre>\n<p>This will create a small python script in the bin directory called <tt>wsgi</tt>\nwhich mod_wsgi can load. You can also use the optional <tt><span class=\"pre\">extra-paths</span></tt> option\nto specify extra paths that are added to the python system path.</p>\n<p>You may also use the <tt><span class=\"pre\">script-name</span></tt> option to specify the name of the\ngenerated script file, if <tt>wsgi</tt> is unsuitable. Or you may use the <tt>target</tt>\noption to specify a full path of the generated script file.</p>\n<p>The apache configuration for this buildout looks like this::</p>\n<pre>WSGIScriptAlias /mysite /path/to/buildout/bin/wsgi\n\n&lt;Directory /home/me/buildout&gt;\n    Order deny,allow\n    Allow from all\n&lt;/Directory&gt;\n</pre>\n<p>This recipe does not fully install packages, which means that console scripts\nwill not be created. If you need console scripts you can add a second buildout\npart which uses <a href=\"http://pypi.python.org/pypi/zc.recipe.egg\" rel=\"nofollow\">zc.recipe.egg</a> to do a full install.</p>\n</div>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>0.6.1 (2015-06-25)</h3>\n<ul>\n<li>Fixed a bug when using Python 3.x.</li>\n<li>Added the initialization option <tt>target</tt> that can be used to specify a full path of generated script.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.5 (2014-05-20)</h3>\n<ul>\n<li>Create fork of <tt>tranchitella.recipe.wsgi == 0.4</tt></li>\n<li>Add an initialization option to specify code for additional initialization</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1606069, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "af305c650a18a1d020026da00c2ba5b0", "sha256": "c1db8b18a35788fd1db38dfef7e3669c2f5f1f89f8fe3124813b45342de5f6e5"}, "downloads": -1, "filename": "cykooz.recipe.pastewsgi-0.5.tar.gz", "has_sig": false, "md5_digest": "af305c650a18a1d020026da00c2ba5b0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10919, "upload_time": "2014-05-20T21:56:56", "upload_time_iso_8601": "2014-05-20T21:56:56.706361Z", "url": "https://files.pythonhosted.org/packages/0f/4b/fe3befdb7335c446e5577668ea157406d51681bb1f99e35a5d0800fc7a72/cykooz.recipe.pastewsgi-0.5.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "3f026fef13a0fb8bfd4fe2656386c5d0", "sha256": "e576b12b2aba6335500a7d990cfde193a3368a5c9f311bc97a2e7833217e8177"}, "downloads": -1, "filename": "cykooz.recipe.pastewsgi-0.6.1.tar.gz", "has_sig": false, "md5_digest": "3f026fef13a0fb8bfd4fe2656386c5d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11681, "upload_time": "2015-06-25T10:00:44", "upload_time_iso_8601": "2015-06-25T10:00:44.177934Z", "url": "https://files.pythonhosted.org/packages/5c/d9/6208a1f808d3ac968916fa085ae6fae2895be40495f33fd7ce83c4017390/cykooz.recipe.pastewsgi-0.6.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3f026fef13a0fb8bfd4fe2656386c5d0", "sha256": "e576b12b2aba6335500a7d990cfde193a3368a5c9f311bc97a2e7833217e8177"}, "downloads": -1, "filename": "cykooz.recipe.pastewsgi-0.6.1.tar.gz", "has_sig": false, "md5_digest": "3f026fef13a0fb8bfd4fe2656386c5d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11681, "upload_time": "2015-06-25T10:00:44", "upload_time_iso_8601": "2015-06-25T10:00:44.177934Z", "url": "https://files.pythonhosted.org/packages/5c/d9/6208a1f808d3ac968916fa085ae6fae2895be40495f33fd7ce83c4017390/cykooz.recipe.pastewsgi-0.6.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:06 2020"}