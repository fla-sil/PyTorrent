{"info": {"author": "Daniel T. Andreasen", "author_email": "daniel.andreasen@astro.up.pt", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Topic :: Scientific/Engineering :: Astronomy", "Topic :: Scientific/Engineering :: Physics"], "description": "Install\n=======\n\nTry install many of the scripts with\n\n::\n\n    pip install astro-scripts\n\nThis is still under development though, but it does work!\n\nTo check the installation run ``plot_fits`` in the terminal.\n\nWARNING\n=======\n\nLook at the wiki instead:\nhttps://github.com/DanielAndreasen/astro\\_scripts/wiki It's not done,\nbut I will gradually move documentation to the wiki.\n\nSmall tools for an astronomer\n=============================\n\nSmall scripts to make my life easier.\n\nThe tools are mainly (if not exclusive) for spectroscopy. All the small\nscripts are fairly well documented, and the python scripts use the\nmodule ``argparse`` which means you can run them like\n\n::\n\n    python numpy2moog -h\n\nand get some fancy help information on how to use them. The shell\nscripts have a block comment in top of the file.\n\nI recommend putting this folder in your PATH so the scripts are easily\naccesible. To do so depends on your system. I am sure\n`google <http://www.google.com>`__ can help you ;)\n\nDependencies\n------------\n\n-  `Matplotlib <http://matplotlib.org/>`__\n-  `Astropy <http://astropy.org>`__\n-  `numpy <http://numpy.org>`__\n-  `argparse <https://docs.python.org/3/library/argparse.html>`__\n-  `PyAstronomy <http://www.hs.uni-hamburg.de/DE/Ins/Per/Czesla/PyA/PyA/index.html>`__\n\nplot\\_fits\n----------\n\nThis I find to be a very powerful and handy python script. It simply\nplot a fits file and leave you in pan mode (matplotlib). More over it\nhas the feature to plot a part of the solar spectrum and telluric lines,\nand finally redshift the spectrum.\n\nFor this script one needs to use the telluric and solar spectrum\nprovided here and change the path in ``plot_fits`` in line 46 and line\n57.\n\nThe wavelength vector is created from the fits (which should be 1D). It\nuses the keywords - CRVAL1: The beginning of the wavelength. - CDELT1:\nThe step in wavelength. - NAXIS: The length of the wavelength vector.\n\n.. figure:: figure1.png\n   :alt: An example of using plot_fits with matplotlib\n\n   Example\nnumpy2moog\n----------\n\nThis is a python script that converts ASCII arrays into the format for\n`MOOG <http://www.as.utexas.edu/~chris/moog.html]>`__. It can be a bit\ntricky, but I will provide examples in the future.\n\nVALDextraction\n--------------\n\nThis script is used to send emails to ``extract all`` from the VALD\ndatabase. A central wavelength should be inputted with the ``-h`` flag,\nand the half range should be given with the ``-s`` flag.\n\nExample\n^^^^^^^\n\n::\n\n    VALDextraction -w 6743 -s 3\n\nThis will open a new email (Thunderbird) with the syntax required for\nVALD (no reason to delete the signature) in a 6\u00c5 window centered on the\nwavelength 6743\u00c5.\n\nsplotCommenter.sh\n-----------------\n\nThis one-liner I have saved in a script put a ``#`` on all the lines\ncontaining a ``center`` from a IRAF files after using the ``splot``\nroutine. This allows to easy read the ``splot.log`` with python using\nsomething like ``np.loadtxt``. One probably need to remove date strings.\nThis should be easy to implement I guess.\n\nVALDprepare.sh\n--------------\n\nThis bash script unpack a linelist from\n`VALD <http://vald.astro.univie.ac.at/~vald3/php/vald.php>`__ when the\ndownload option is set to FTP. The downloadable file is ``.gz``. This\nfile is unpacked and saved in an optional ``output`` argument (see the\nblock comment in the script). The references is saved in a seperate\nfile, and the final file is relatively easy to read with ``np.loadtxt``.\n\nCONTRIBUTE\n----------\n\nFeel free to open an issue with suggestions or bugs.\n\nLICENCE\n-------\n\nRead the LICENCE file.", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DanielAndreasen/astro_scripts", "keywords": "astronomy,spectra,spectroscopy", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "astro-scripts", "package_url": "https://pypi.org/project/astro-scripts/", "platform": "", "project_url": "https://pypi.org/project/astro-scripts/", "project_urls": {"Homepage": "https://github.com/DanielAndreasen/astro_scripts"}, "release_url": "https://pypi.org/project/astro-scripts/0.4.0/", "requires_dist": null, "requires_python": "", "summary": "Small scripts for astronomy", "version": "0.4.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            Install<br>=======<br><br>Try install many of the scripts with<br><br>::<br><br>    pip install astro-scripts<br><br>This is still under development though, but it does work!<br><br>To check the installation run ``plot_fits`` in the terminal.<br><br>WARNING<br>=======<br><br>Look at the wiki instead:<br>https://github.com/DanielAndreasen/astro\\_scripts/wiki It's not done,<br>but I will gradually move documentation to the wiki.<br><br>Small tools for an astronomer<br>=============================<br><br>Small scripts to make my life easier.<br><br>The tools are mainly (if not exclusive) for spectroscopy. All the small<br>scripts are fairly well documented, and the python scripts use the<br>module ``argparse`` which means you can run them like<br><br>::<br><br>    python numpy2moog -h<br><br>and get some fancy help information on how to use them. The shell<br>scripts have a block comment in top of the file.<br><br>I recommend putting this folder in your PATH so the scripts are easily<br>accesible. To do so depends on your system. I am sure<br>`google &lt;http://www.google.com&gt;`__ can help you ;)<br><br>Dependencies<br>------------<br><br>-  `Matplotlib &lt;http://matplotlib.org/&gt;`__<br>-  `Astropy &lt;http://astropy.org&gt;`__<br>-  `numpy &lt;http://numpy.org&gt;`__<br>-  `argparse &lt;https://docs.python.org/3/library/argparse.html&gt;`__<br>-  `PyAstronomy &lt;http://www.hs.uni-hamburg.de/DE/Ins/Per/Czesla/PyA/PyA/index.html&gt;`__<br><br>plot\\_fits<br>----------<br><br>This I find to be a very powerful and handy python script. It simply<br>plot a fits file and leave you in pan mode (matplotlib). More over it<br>has the feature to plot a part of the solar spectrum and telluric lines,<br>and finally redshift the spectrum.<br><br>For this script one needs to use the telluric and solar spectrum<br>provided here and change the path in ``plot_fits`` in line 46 and line<br>57.<br><br>The wavelength vector is created from the fits (which should be 1D). It<br>uses the keywords - CRVAL1: The beginning of the wavelength. - CDELT1:<br>The step in wavelength. - NAXIS: The length of the wavelength vector.<br><br>.. figure:: figure1.png<br>   :alt: An example of using plot_fits with matplotlib<br><br>   Example<br>numpy2moog<br>----------<br><br>This is a python script that converts ASCII arrays into the format for<br>`MOOG &lt;http://www.as.utexas.edu/~chris/moog.html]&gt;`__. It can be a bit<br>tricky, but I will provide examples in the future.<br><br>VALDextraction<br>--------------<br><br>This script is used to send emails to ``extract all`` from the VALD<br>database. A central wavelength should be inputted with the ``-h`` flag,<br>and the half range should be given with the ``-s`` flag.<br><br>Example<br>^^^^^^^<br><br>::<br><br>    VALDextraction -w 6743 -s 3<br><br>This will open a new email (Thunderbird) with the syntax required for<br>VALD (no reason to delete the signature) in a 6\u00c5 window centered on the<br>wavelength 6743\u00c5.<br><br>splotCommenter.sh<br>-----------------<br><br>This one-liner I have saved in a script put a ``#`` on all the lines<br>containing a ``center`` from a IRAF files after using the ``splot``<br>routine. This allows to easy read the ``splot.log`` with python using<br>something like ``np.loadtxt``. One probably need to remove date strings.<br>This should be easy to implement I guess.<br><br>VALDprepare.sh<br>--------------<br><br>This bash script unpack a linelist from<br>`VALD &lt;http://vald.astro.univie.ac.at/~vald3/php/vald.php&gt;`__ when the<br>download option is set to FTP. The downloadable file is ``.gz``. This<br>file is unpacked and saved in an optional ``output`` argument (see the<br>block comment in the script). The references is saved in a seperate<br>file, and the final file is relatively easy to read with ``np.loadtxt``.<br><br>CONTRIBUTE<br>----------<br><br>Feel free to open an issue with suggestions or bugs.<br><br>LICENCE<br>-------<br><br>Read the LICENCE file.\n          </div>"}, "last_serial": 3222533, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "39d2741f438a60ea6861e6e4f910c189", "sha256": "b6845ee2a4b11825b0fa70199a677c8e3328d99f840d718d15832c10f573bcd7"}, "downloads": -1, "filename": "astro_scripts-0.1.0-py2.7.egg", "has_sig": false, "md5_digest": "39d2741f438a60ea6861e6e4f910c189", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 72082, "upload_time": "2017-05-21T23:34:45", "upload_time_iso_8601": "2017-05-21T23:34:45.757915Z", "url": "https://files.pythonhosted.org/packages/80/2a/a8ffed5322e90eae3be0dbbf5f939ba8093da3285487fa204028754a119e/astro_scripts-0.1.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "4be55d384b4084f368898ad8baa90e40", "sha256": "c7bfdf79413ed0db8dad5f761c422f042c7f67b576c20e11ad90ea5c28767121"}, "downloads": -1, "filename": "astro_scripts-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "4be55d384b4084f368898ad8baa90e40", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 35337, "upload_time": "2017-05-21T23:34:43", "upload_time_iso_8601": "2017-05-21T23:34:43.470262Z", "url": "https://files.pythonhosted.org/packages/12/5c/df36c9e1af13e616c45ac35fcc6cedaab70315a47067b95a8ee61b90815c/astro_scripts-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "baafa731f1909e3315868bfad1887b5e", "sha256": "3697a769686d9a9c501b7cdc525409c7f93fd4b1ee91a1bb7e329f8a707a5c19"}, "downloads": -1, "filename": "astro_scripts-0.1.0.tar.gz", "has_sig": false, "md5_digest": "baafa731f1909e3315868bfad1887b5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 23340, "upload_time": "2017-05-21T23:34:47", "upload_time_iso_8601": "2017-05-21T23:34:47.342564Z", "url": "https://files.pythonhosted.org/packages/f1/7d/e4d335e881963e068cac23d68c72a2b6847f7b0ac3eedf5b217598b883d7/astro_scripts-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "2656becbc1c29eef747a82dabb9b09e9", "sha256": "e4d61f9e5757be64fc0a2a775a69828519679edab4245a402fafcfa0d9af487f"}, "downloads": -1, "filename": "astro_scripts-0.2.0-py2.7.egg", "has_sig": false, "md5_digest": "2656becbc1c29eef747a82dabb9b09e9", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 71881, "upload_time": "2017-05-22T12:21:38", "upload_time_iso_8601": "2017-05-22T12:21:38.605226Z", "url": "https://files.pythonhosted.org/packages/64/7f/5cf94b20d199f0a0aee4cb98331733acf348be45b8597e056f80bd482d33/astro_scripts-0.2.0-py2.7.egg", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "3317f87ed54616aee18a3aac10742ecc", "sha256": "fc5988ebab4ab3edae61b2a8464175b34879da7e249f322ee2e4557480767f90"}, "downloads": -1, "filename": "astro_scripts-0.3.0-py2.7.egg", "has_sig": false, "md5_digest": "3317f87ed54616aee18a3aac10742ecc", "packagetype": "bdist_egg", "python_version": "2.7", "requires_python": null, "size": 57251, "upload_time": "2017-06-21T16:20:31", "upload_time_iso_8601": "2017-06-21T16:20:31.770734Z", "url": "https://files.pythonhosted.org/packages/43/dd/68413707e1116b69d909794631abff81c72dc83e5778ada9c6d009ef3134/astro_scripts-0.3.0-py2.7.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "0c658c23a5ca6574af9c388d20ff2a92", "sha256": "c6d6475aa879e0af69a2ebb4a93d12a632efc1c62733024ba000d4ac538b2781"}, "downloads": -1, "filename": "astro_scripts-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0c658c23a5ca6574af9c388d20ff2a92", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20602, "upload_time": "2017-06-21T16:20:33", "upload_time_iso_8601": "2017-06-21T16:20:33.790295Z", "url": "https://files.pythonhosted.org/packages/e2/06/b469e653f225a4afec000670ef4340628923adb39f0549da00807bb19a5e/astro_scripts-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "599523cf048687d60e572d9d8c5a97ed", "sha256": "a3c48aa007c9ba1876086e41543f2017c08ad30e7887954b0287a52dbb234fed"}, "downloads": -1, "filename": "astro_scripts-0.3.1.tar.gz", "has_sig": false, "md5_digest": "599523cf048687d60e572d9d8c5a97ed", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21219, "upload_time": "2017-06-21T17:06:46", "upload_time_iso_8601": "2017-06-21T17:06:46.437085Z", "url": "https://files.pythonhosted.org/packages/6a/f9/54cc38096db98b075b748d3427e169b2c710b8aa89576d2e9da569fc5d6a/astro_scripts-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "92899e9818c64d8ae351b65eb825f394", "sha256": "2f2dd5dac26f62348cd3ab40f9c27c481feba85236000fba43d85f59f77a50d5"}, "downloads": -1, "filename": "astro_scripts-0.3.2.tar.gz", "has_sig": false, "md5_digest": "92899e9818c64d8ae351b65eb825f394", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21148, "upload_time": "2017-06-21T17:12:03", "upload_time_iso_8601": "2017-06-21T17:12:03.736988Z", "url": "https://files.pythonhosted.org/packages/5b/84/43d8a330fe54f74ef9845250305fa80f650f8a501cebc21074798af91baf/astro_scripts-0.3.2.tar.gz", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "9e356de28f2b506822cde0b255f46034", "sha256": "91290a00835374ab5d114a81b74c6339357053ca4084c3b97d8981e4c696a8b4"}, "downloads": -1, "filename": "astro_scripts-0.3.3.tar.gz", "has_sig": false, "md5_digest": "9e356de28f2b506822cde0b255f46034", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21195, "upload_time": "2017-06-21T17:35:20", "upload_time_iso_8601": "2017-06-21T17:35:20.329489Z", "url": "https://files.pythonhosted.org/packages/41/8e/ccd016ddb8687066083343ac213ea5609e62b9a154851778fc4137b28c0c/astro_scripts-0.3.3.tar.gz", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "b5bfdb4c32392d619ef0ac70a1c5a1b2", "sha256": "cf82d4f26c0fa4c12f35cd8035a57a01e788416be8237cbf6553c5f5156afcd7"}, "downloads": -1, "filename": "astro_scripts-0.3.4.tar.gz", "has_sig": false, "md5_digest": "b5bfdb4c32392d619ef0ac70a1c5a1b2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21199, "upload_time": "2017-06-21T17:51:59", "upload_time_iso_8601": "2017-06-21T17:51:59.933061Z", "url": "https://files.pythonhosted.org/packages/48/d3/866674807096e0dcd5ba93fee4ba368128a4feaf94a6822a4120fb0d7f54/astro_scripts-0.3.4.tar.gz", "yanked": false}], "0.3.5": [{"comment_text": "", "digests": {"md5": "21939c43a43b213da1a4c804dd4b64f0", "sha256": "8533afb3fe36e780665137956df434ad14436f5a2703fc90aac993a9c31d8587"}, "downloads": -1, "filename": "astro_scripts-0.3.5.tar.gz", "has_sig": false, "md5_digest": "21939c43a43b213da1a4c804dd4b64f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21212, "upload_time": "2017-06-23T13:28:22", "upload_time_iso_8601": "2017-06-23T13:28:22.392792Z", "url": "https://files.pythonhosted.org/packages/5f/61/f12e3bbd3b5e098ee2fb11742a2c041a42937d158944a71a702eeb9b4e78/astro_scripts-0.3.5.tar.gz", "yanked": false}], "0.3.6": [{"comment_text": "", "digests": {"md5": "03625b93f0a2f7a1520f19a6b3c0dfa7", "sha256": "9949a04ac23bc21c9178ee6852fb92f7c35dbdc85dd306e3db04ca7bda70fbb2"}, "downloads": -1, "filename": "astro_scripts-0.3.6.tar.gz", "has_sig": false, "md5_digest": "03625b93f0a2f7a1520f19a6b3c0dfa7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21277, "upload_time": "2017-06-23T15:00:08", "upload_time_iso_8601": "2017-06-23T15:00:08.612111Z", "url": "https://files.pythonhosted.org/packages/6e/6d/9515418e742fc36c347694a5560ec64c5f8d4c290591c38c72bed4e62f79/astro_scripts-0.3.6.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "4ed5b23d9b482f0415f2e5b538303b84", "sha256": "e7f6c8200d41894132278c6843791a9b9428be1985b0a59d5958a2516dcd7dc9"}, "downloads": -1, "filename": "astro_scripts-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4ed5b23d9b482f0415f2e5b538303b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21074, "upload_time": "2017-10-03T15:46:21", "upload_time_iso_8601": "2017-10-03T15:46:21.437003Z", "url": "https://files.pythonhosted.org/packages/9e/fe/75b7818b8d6a47039b7468010dbcc917a89e4eb7f67f6c5d3df5a4aaea47/astro_scripts-0.4.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4ed5b23d9b482f0415f2e5b538303b84", "sha256": "e7f6c8200d41894132278c6843791a9b9428be1985b0a59d5958a2516dcd7dc9"}, "downloads": -1, "filename": "astro_scripts-0.4.0.tar.gz", "has_sig": false, "md5_digest": "4ed5b23d9b482f0415f2e5b538303b84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21074, "upload_time": "2017-10-03T15:46:21", "upload_time_iso_8601": "2017-10-03T15:46:21.437003Z", "url": "https://files.pythonhosted.org/packages/9e/fe/75b7818b8d6a47039b7468010dbcc917a89e4eb7f67f6c5d3df5a4aaea47/astro_scripts-0.4.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:48 2020"}