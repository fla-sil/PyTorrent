{"info": {"author": "GoCardless", "author_email": "engineering@gocardless.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: POSIX :: Linux", "Programming Language :: Python :: 3.7"], "description": "# airflow-dbt\n\nThis is a collection of [Airflow](https://airflow.apache.org/) operators to provide easy integration with [dbt](https://www.getdbt.com).\n\n```py\ndefault_args = {\n  dbt_dir = '/srv/app/dbt'\n}\n\nwith DAG(dag_id='dbt', default_args=default_args, schedule_interval='@daily') as dag:\n\n  dbt_run = DbtRunOperator(\n    task_id='dbt_run',\n  )\n\n  dbt_test = DbtTestOperator(\n    task_id='dbt_test',\n    retries=0,  # Failing tests would fail the task, and we don't want Airflow to try again\n  )\n\n  dbt_run >> dbt_test\n```\n\n## Installation\n\nInstall from PyPI:\n\n```sh\npip install airflow-dbt\n```\n\nIt will also need access to the `dbt` CLI, which should either be on your `PATH` or can be set with the `dbt_bin` argument in each operator.\n\n## Usage\n\nThere are two operators currently implemented:\n\n* `DbtRunOperator`\n  * Calls [`dbt run`](https://docs.getdbt.com/docs/run)\n* `DbtTestOperator`\n  * Calls [`dbt test`](https://docs.getdbt.com/docs/test)\n\nEach of the above operators accept the following arguments:\n\n* `profiles_dir`\n  * If set, passed as the `--profiles-dir` argument to the `dbt` command\n* `target`\n  * If set, passed as the `--target` argument to the `dbt` command\n* `dir`\n  * The directory to run the `dbt` command in\n* `vars`\n  * If set, passed as the `--vars` argument to the `dbt` command. Should be set as a Python dictionary, as will be passed to the `dbt` command as YAML\n* `models`\n  * If set, passed as the `--models` argument to the `dbt` command\n* `exclude`\n  * If set, passed as the `--exclude` argument to the `dbt` command\n* `dbt_bin`\n  * The `dbt` CLI. Defaults to `dbt`, so assumes it's on your `PATH`\n* `verbose`\n  * The operator will log verbosely to the Airflow logs\n\nTypically you will want to use the `DbtRunOperator`, followed by the `DbtTestOperator`, as shown earlier.\n\nYou can also use the hook directly. Typically this can be used for when you need to combine the `dbt` command with another task in the same operators, for example running `dbt docs` and uploading the docs to somewhere they can be served from.\n\n## Package management\n\nIf you use dbt's package manager you should include all dependencies before deploying your dbt project.\n\nFor Docker users, packages specified in `packages.yml` should be included as part your docker image by calling `dbt deps` in your `Dockerfile`.  \n\n## License & Contributing\n\n* This is available as open source under the terms of the [MIT License](http://opensource.org/licenses/MIT).\n* Bug reports and pull requests are welcome on GitHub at https://github.com/gocardless/airflow-dbt.\n\nGoCardless \u2665 open source. If you do too, come [join us](https://gocardless.com/about/jobs).\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gocardless/airflow-dbt", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "airflow-dbt", "package_url": "https://pypi.org/project/airflow-dbt/", "platform": "", "project_url": "https://pypi.org/project/airflow-dbt/", "project_urls": {"Homepage": "https://github.com/gocardless/airflow-dbt"}, "release_url": "https://pypi.org/project/airflow-dbt/0.1.0/", "requires_dist": ["apache-airflow (>=1.10.3)"], "requires_python": "", "summary": "Apache Airflow integration for dbt", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>airflow-dbt</h1>\n<p>This is a collection of <a href=\"https://airflow.apache.org/\" rel=\"nofollow\">Airflow</a> operators to provide easy integration with <a href=\"https://www.getdbt.com\" rel=\"nofollow\">dbt</a>.</p>\n<pre><span class=\"n\">default_args</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n  <span class=\"n\">dbt_dir</span> <span class=\"o\">=</span> <span class=\"s1\">'/srv/app/dbt'</span>\n<span class=\"p\">}</span>\n\n<span class=\"k\">with</span> <span class=\"n\">DAG</span><span class=\"p\">(</span><span class=\"n\">dag_id</span><span class=\"o\">=</span><span class=\"s1\">'dbt'</span><span class=\"p\">,</span> <span class=\"n\">default_args</span><span class=\"o\">=</span><span class=\"n\">default_args</span><span class=\"p\">,</span> <span class=\"n\">schedule_interval</span><span class=\"o\">=</span><span class=\"s1\">'@daily'</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">dag</span><span class=\"p\">:</span>\n\n  <span class=\"n\">dbt_run</span> <span class=\"o\">=</span> <span class=\"n\">DbtRunOperator</span><span class=\"p\">(</span>\n    <span class=\"n\">task_id</span><span class=\"o\">=</span><span class=\"s1\">'dbt_run'</span><span class=\"p\">,</span>\n  <span class=\"p\">)</span>\n\n  <span class=\"n\">dbt_test</span> <span class=\"o\">=</span> <span class=\"n\">DbtTestOperator</span><span class=\"p\">(</span>\n    <span class=\"n\">task_id</span><span class=\"o\">=</span><span class=\"s1\">'dbt_test'</span><span class=\"p\">,</span>\n    <span class=\"n\">retries</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span>  <span class=\"c1\"># Failing tests would fail the task, and we don't want Airflow to try again</span>\n  <span class=\"p\">)</span>\n\n  <span class=\"n\">dbt_run</span> <span class=\"o\">&gt;&gt;</span> <span class=\"n\">dbt_test</span>\n</pre>\n<h2>Installation</h2>\n<p>Install from PyPI:</p>\n<pre>pip install airflow-dbt\n</pre>\n<p>It will also need access to the <code>dbt</code> CLI, which should either be on your <code>PATH</code> or can be set with the <code>dbt_bin</code> argument in each operator.</p>\n<h2>Usage</h2>\n<p>There are two operators currently implemented:</p>\n<ul>\n<li><code>DbtRunOperator</code>\n<ul>\n<li>Calls <a href=\"https://docs.getdbt.com/docs/run\" rel=\"nofollow\"><code>dbt run</code></a></li>\n</ul>\n</li>\n<li><code>DbtTestOperator</code>\n<ul>\n<li>Calls <a href=\"https://docs.getdbt.com/docs/test\" rel=\"nofollow\"><code>dbt test</code></a></li>\n</ul>\n</li>\n</ul>\n<p>Each of the above operators accept the following arguments:</p>\n<ul>\n<li><code>profiles_dir</code>\n<ul>\n<li>If set, passed as the <code>--profiles-dir</code> argument to the <code>dbt</code> command</li>\n</ul>\n</li>\n<li><code>target</code>\n<ul>\n<li>If set, passed as the <code>--target</code> argument to the <code>dbt</code> command</li>\n</ul>\n</li>\n<li><code>dir</code>\n<ul>\n<li>The directory to run the <code>dbt</code> command in</li>\n</ul>\n</li>\n<li><code>vars</code>\n<ul>\n<li>If set, passed as the <code>--vars</code> argument to the <code>dbt</code> command. Should be set as a Python dictionary, as will be passed to the <code>dbt</code> command as YAML</li>\n</ul>\n</li>\n<li><code>models</code>\n<ul>\n<li>If set, passed as the <code>--models</code> argument to the <code>dbt</code> command</li>\n</ul>\n</li>\n<li><code>exclude</code>\n<ul>\n<li>If set, passed as the <code>--exclude</code> argument to the <code>dbt</code> command</li>\n</ul>\n</li>\n<li><code>dbt_bin</code>\n<ul>\n<li>The <code>dbt</code> CLI. Defaults to <code>dbt</code>, so assumes it's on your <code>PATH</code></li>\n</ul>\n</li>\n<li><code>verbose</code>\n<ul>\n<li>The operator will log verbosely to the Airflow logs</li>\n</ul>\n</li>\n</ul>\n<p>Typically you will want to use the <code>DbtRunOperator</code>, followed by the <code>DbtTestOperator</code>, as shown earlier.</p>\n<p>You can also use the hook directly. Typically this can be used for when you need to combine the <code>dbt</code> command with another task in the same operators, for example running <code>dbt docs</code> and uploading the docs to somewhere they can be served from.</p>\n<h2>Package management</h2>\n<p>If you use dbt's package manager you should include all dependencies before deploying your dbt project.</p>\n<p>For Docker users, packages specified in <code>packages.yml</code> should be included as part your docker image by calling <code>dbt deps</code> in your <code>Dockerfile</code>.</p>\n<h2>License &amp; Contributing</h2>\n<ul>\n<li>This is available as open source under the terms of the <a href=\"http://opensource.org/licenses/MIT\" rel=\"nofollow\">MIT License</a>.</li>\n<li>Bug reports and pull requests are welcome on GitHub at <a href=\"https://github.com/gocardless/airflow-dbt\" rel=\"nofollow\">https://github.com/gocardless/airflow-dbt</a>.</li>\n</ul>\n<p>GoCardless \u2665 open source. If you do too, come <a href=\"https://gocardless.com/about/jobs\" rel=\"nofollow\">join us</a>.</p>\n\n          </div>"}, "last_serial": 6733573, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "c5aced9bf4242dba2ec89e1fad4d356a", "sha256": "1473118a75e394fd0465b828ca454b03ef22930e3eeaef1dae9daa37d39be08c"}, "downloads": -1, "filename": "airflow_dbt-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c5aced9bf4242dba2ec89e1fad4d356a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6267, "upload_time": "2020-02-26T15:05:17", "upload_time_iso_8601": "2020-02-26T15:05:17.669864Z", "url": "https://files.pythonhosted.org/packages/f5/bd/99ba39c7075c2b4e1fc8cf046f62a02390fa7448357ac1e177f833806f27/airflow_dbt-0.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "235d18a0060b82f4c3a2bb5b8831724e", "sha256": "f9a7207e3bcf4101f2b331e3569fb8496fa79f8bdc2e75cc005ea50e71b80a61"}, "downloads": -1, "filename": "airflow_dbt-0.0.1.tar.gz", "has_sig": false, "md5_digest": "235d18a0060b82f4c3a2bb5b8831724e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4641, "upload_time": "2020-02-26T15:05:19", "upload_time_iso_8601": "2020-02-26T15:05:19.754646Z", "url": "https://files.pythonhosted.org/packages/a4/8d/d291157a9cadd278141566ad21128bfbd9c6a31714acf03d9dce11efd4fb/airflow_dbt-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "512b703d9a6515a653c57da2208dcbdc", "sha256": "524461cd122d633ab1fefeb12ea97327decec995d912d3e6c5966b259a2842fd"}, "downloads": -1, "filename": "airflow_dbt-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "512b703d9a6515a653c57da2208dcbdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6353, "upload_time": "2020-03-02T14:17:26", "upload_time_iso_8601": "2020-03-02T14:17:26.643171Z", "url": "https://files.pythonhosted.org/packages/45/f2/a9d459b3729cccaa4897d816ef71ee2fec374f199396d05aa54a14017bcb/airflow_dbt-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fb126130766d13de5ddf3f9d25ee552", "sha256": "519768e17eb8981ace0d69057d5acf660bcb9fbd9aea5edc4d9daa44c0c2a978"}, "downloads": -1, "filename": "airflow_dbt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8fb126130766d13de5ddf3f9d25ee552", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4726, "upload_time": "2020-03-02T14:17:28", "upload_time_iso_8601": "2020-03-02T14:17:28.146779Z", "url": "https://files.pythonhosted.org/packages/f1/02/c42639c5fc80cc1bfbead823bb135de82e28bddb605e89406cd5187b4bcf/airflow_dbt-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "512b703d9a6515a653c57da2208dcbdc", "sha256": "524461cd122d633ab1fefeb12ea97327decec995d912d3e6c5966b259a2842fd"}, "downloads": -1, "filename": "airflow_dbt-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "512b703d9a6515a653c57da2208dcbdc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6353, "upload_time": "2020-03-02T14:17:26", "upload_time_iso_8601": "2020-03-02T14:17:26.643171Z", "url": "https://files.pythonhosted.org/packages/45/f2/a9d459b3729cccaa4897d816ef71ee2fec374f199396d05aa54a14017bcb/airflow_dbt-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8fb126130766d13de5ddf3f9d25ee552", "sha256": "519768e17eb8981ace0d69057d5acf660bcb9fbd9aea5edc4d9daa44c0c2a978"}, "downloads": -1, "filename": "airflow_dbt-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8fb126130766d13de5ddf3f9d25ee552", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4726, "upload_time": "2020-03-02T14:17:28", "upload_time_iso_8601": "2020-03-02T14:17:28.146779Z", "url": "https://files.pythonhosted.org/packages/f1/02/c42639c5fc80cc1bfbead823bb135de82e28bddb605e89406cd5187b4bcf/airflow_dbt-0.1.0.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:20:32 2020"}