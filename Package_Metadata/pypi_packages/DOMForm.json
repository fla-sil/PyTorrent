{"info": {"author": "John J. Lee", "author_email": "jjl@pobox.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Development Status :: 7 - Inactive", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Browsers", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Internet :: WWW/HTTP :: Site Management", "Topic :: Internet :: WWW/HTTP :: Site Management :: Link Checking", "Topic :: Software Development :: Libraries", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Software Development :: Testing", "Topic :: Software Development :: Testing :: Traffic Generation", "Topic :: System :: Networking :: Monitoring", "Topic :: System :: Systems Administration", "Topic :: Text Processing :: Markup", "Topic :: Text Processing :: Markup :: HTML", "Topic :: Text Processing :: Markup :: XML"], "description": "This code is neither mature nor maintained, and should not be used.  It remains here only for the benefit of others who might want to do something similar.\r\n\r\nDOMForm is a Python module for web scraping and web testing.  It knows how\r\nto evaluate embedded JavaScript code in response to appropriate events.\r\nDOMForm supports both the ClientForm HTML form interface and the HTML DOM level\r\n2 interface (note that ATM the DOM is written to an out-of-date version of the\r\nspecification, and has some hacks to get it to work with 'DOM as deployed').\r\nThe ClientForm interface makes it easy to parse HTML forms, fill them in and\r\nreturn them to the server.  The DOM interface makes it easy to get at other\r\nparts of the document, and makes JavaScript support possible.  The ability to\r\nswitch back and forth between the two interfaces allows simpler code than would\r\nresult from using either interface alone.  DOMForm is partly derived from\r\nseveral third-party libraries.  JavaScript support currently depends on\r\nMozilla's GPLed spidermonkey JavaScript interpreter (which is available\r\nseparately from Mozilla itself) and python-spidermonkey.", "description_content_type": null, "docs_url": null, "download_url": "http://wwwsearch.sourceforge.net/DOMForm/src/DOMForm-0.0.1a.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://wwwsearch.sourceforge.net/DOMForm/", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "DOMForm", "package_url": "https://pypi.org/project/DOMForm/", "platform": "any", "project_url": "https://pypi.org/project/DOMForm/", "project_urls": {"Download": "http://wwwsearch.sourceforge.net/DOMForm/src/DOMForm-0.0.1a.tar.gz", "Homepage": "http://wwwsearch.sourceforge.net/DOMForm/"}, "release_url": "https://pypi.org/project/DOMForm/0.0.1a/", "requires_dist": null, "requires_python": null, "summary": "Client-side HTML processing with JavaScript support.", "version": "0.0.1a", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This code is neither mature nor maintained, and should not be used.  It remains here only for the benefit of others who might want to do something similar.</p>\n<p>DOMForm is a Python module for web scraping and web testing.  It knows how\nto evaluate embedded JavaScript code in response to appropriate events.\nDOMForm supports both the ClientForm HTML form interface and the HTML DOM level\n2 interface (note that ATM the DOM is written to an out-of-date version of the\nspecification, and has some hacks to get it to work with \u2018DOM as deployed\u2019).\nThe ClientForm interface makes it easy to parse HTML forms, fill them in and\nreturn them to the server.  The DOM interface makes it easy to get at other\nparts of the document, and makes JavaScript support possible.  The ability to\nswitch back and forth between the two interfaces allows simpler code than would\nresult from using either interface alone.  DOMForm is partly derived from\nseveral third-party libraries.  JavaScript support currently depends on\nMozilla\u2019s GPLed spidermonkey JavaScript interpreter (which is available\nseparately from Mozilla itself) and python-spidermonkey.</p>\n\n          </div>"}, "last_serial": 210636, "releases": {"0.0.1a": []}, "urls": [], "timestamp": "Fri May  8 00:50:25 2020"}