{"info": {"author": "Kevin Myers", "author_email": "kmyers2@wisc.edu", "bugtrack_url": null, "classifiers": ["Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.6", "Programming Language :: R", "Topic :: Scientific/Engineering :: Bio-Informatics"], "description": "\n# **COnTORT** \n\n## Purpose:\n\nCOnTROT (COmprehensive Transcriptomic ORganizational Tool) is a program that\nwill download and organize all expression data in GEO related to a search result,\ncommonly an organism. This will identify and download GEO GDS, GSE, GSM, and GPL\ndirectories and files from NCBI FTP when provided with a downloaded GDS result\nfrom NCBI. Then the series data will be organized to retain matches to the GenBank\nannotation. The data will be organized, mean centered, and then\njoined using the gene name and ORF as IDs into a single text file that can be\neasily manipulated or opened in applications such as Excel.\n\nTo generate the initial file, perform a search in NCIB for GEO DataSets. Then in the\nupper right hand corner of the search results, select 'Send to:' and choose\n'File' and then click 'Create File'. This will contain a summary of your search\nresults. This script will search this file for series indicators and download\nthe respective files and directories. You will also need the GenBank file for your organism.\n\nCOnTORT has been tested on Linux (Ubuntu and CentOS), MacOS (>10.13), and Windows 10.\n\n## Input : \n\n - A gds_result text file downloaded from NCBI.\n\n - The GenBank (.gbff) for your organism, downloaded from NCBI.\n\nYou are encouraged to create a new directory each time you run this script.\n## **THIS WILL FAIL IF RUN ON VERSION OF PYTHON BELOW 3**\n\n#### Required Parameters:\n\n\t-f gds_result.txt\n\t-gb genebank_file.gbff\n\n#### Usage:\n\n1. You can install using pip and then run:\n\n        pip install contort\n        contort -f gds_result.txt -gb genbank.gbff\n\n2. You can install using Anaconda (anaconda.org/):\n\n        conda install -c kevinmyers contort\n        contort -f gds_result.txt -gb genbank.gff\n\n3. You can download the git repository and run the original scripts:\n\n        git clone https://github.com/GLBRC/contort.git\n        python3.6 contort.py -f gds_result.txt -gb genbank.gbff\n\n#### Requirements:\n\n - python 3\n - Python modles argparse, ftplib, functools, glob, gzip, io, os, pandas, re, shutil, subprocess, sys, time\n\n## Output : \n\nCOnTORT_organized_transcriptomic_data.txt is the primary output.\n\nPrimary output is a single text file containing the gene annotations on the first five columns\n    and the mean centered expression data present in the remaining columns. The first row\n    contains the headers references the specific GEO IDs for each experiment. \n    Note that annotations no present in the GenBank file are listed with \"N/A\".\n\n    Locus_Tag    Old_Locus_Tag    Gene_Name    Gene_Synonyms    Product    GSM_ID_1    GSM_ID_2\n    RSP_0002     N/A              spbB         N/A              H-NS       12.0         4.0\n\nSubdirectories are created for all the files and to organize the directory:\n\n#### Directories created:\n\t- geo                     - the downloaded GDS, GSE, GSM and GPL directories\n\t- matrix_files            - the series_matrix.txt files downloaded from GEO\n\t- GEOquery_results        - the results of the GEOquery.r script\n\t- GFF_match_output        - the results of matching the GEOquery results to the gene IDs from the GFF\n\t- mean_centered_results   - the mean centered expression data for each experiment\n\t- FTP_files               - files used to download the data from GEO via FTP\n\t- log_files               - all log files from each step as well as other saved files\n\n## Outline of steps & commands used in pipeline:\n\n#### runFindGEOAddresses( GDSfile ):\n\n\tParse GEOfile\n\n    Opens and parses the GDSfile result txt file provided by the user (downloaded\n    from NCBI).\n\n    Creates new files:\n        - GEO_FTP_Addresses.txt     - all GDS, GSE, GSM, GPL addresses in the file\n        - GEO_FTP_directories.txt   - GDS, GSE, GSM, GPL directories that will be downloaded\n\n\n#### run_is_ftp_dir( ftp_handle, name, guess_by_extension=True ):\n\n    QC for FTP\n\n    Determines if an item listed on the FTP server is a directory or not by \n    looking for a \".\" in the fourth position. If it has that, it is nearly \n    always a file and not a directory.\n\n#### run_make_parent_dir( fpath ):\n\n    Make directories to match the FTP\n    Creates the directories in the local directory to match the FTP directories\n\n#### run_download_FTP_file( ftp_handle, name, dest, overwrite ):\n\n    Copy the FTP files to the local directory\n    Copy FTP files into the respective directories on the local directory\n\n#### run_mirror_ftp_dir( ftp_handle, name, overwrite, guess_by_extension ):\n\n    Replicate the directories\n    Replicates a direcotry from the FTP server onto the local drive recusively\n\n#### download_ftp_tree( ftp_handle, path, destination, overwrite=False, guess_by_extension=True ):\n\n    Performs the actions to download files from the NCBI FTP\n\n    Perform the actions\n    Downloads an entire directory tree from an ftp server to the local destination\n    Will NOT overwrite files if present in the local directory\n\n#### Default FTP Settings for NCBI GEO:\n\n\tserver = 'ftp.ncbi.nlm.nih.gov'\n\tuser = 'anonymous'\n\tpassword = ''\n\tdestination = user input\n\tsources of files = from the runFindGEOAddresses module\n\n#### GEOannotate( ):\n\n    Organize the GEO series files\n\n    This is a replacement for R and GEOquery. This will organize the GEO data available.\n\n    This first finds and copies all soft.gz files for all GSE (series) data in the \n    GEO download from the previous steps. Using GEOparse, the metadata for each gene is \n    collected and concatentated with the normalized data present for each series.\n\n    The new files are written for downstream steps and the copied soft.gz files are deleted.\n\n#### gffMatch( GBFF ):\n\n    Match the gene annotations from the GenBank file to the organized expression data\n\n    Using dictionaries created from the GenBank file for the orgainsm, this\n    script will search for matches to the gene annotation in the GenBank file and\n    retain only those data with matches. This will make new files for each GEOquery\n    output with columns representing gene annotations and then the log2 normalized data\n    from the GEO series files. The data are then mean centered and joined together\n    with the gene annotations annotation as the key. All blanks are retained for consistency.\n    This file is written and can be used in Excel or R for further analysis.\n\n#### cleanUp( cwd ):\n\n    Clean up the directory\n\n    Organize the files into folders for a cleaner directory\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/GLBRC/contort", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "contort", "package_url": "https://pypi.org/project/contort/", "platform": "", "project_url": "https://pypi.org/project/contort/", "project_urls": {"Homepage": "https://github.com/GLBRC/contort"}, "release_url": "https://pypi.org/project/contort/0.1.3/", "requires_dist": ["markdown (>=3.1.1)", "biopython (>=1.74)", "pandas (>=0.25.1)"], "requires_python": ">=3.6", "summary": "COnTROT (COmprehensive Transcriptomic ORganizational Tool) is a program that will download and organize all expression data in GEO related to a search result, commonly an organism.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1><strong>COnTORT</strong></h1>\n<h2>Purpose:</h2>\n<p>COnTROT (COmprehensive Transcriptomic ORganizational Tool) is a program that\nwill download and organize all expression data in GEO related to a search result,\ncommonly an organism. This will identify and download GEO GDS, GSE, GSM, and GPL\ndirectories and files from NCBI FTP when provided with a downloaded GDS result\nfrom NCBI. Then the series data will be organized to retain matches to the GenBank\nannotation. The data will be organized, mean centered, and then\njoined using the gene name and ORF as IDs into a single text file that can be\neasily manipulated or opened in applications such as Excel.</p>\n<p>To generate the initial file, perform a search in NCIB for GEO DataSets. Then in the\nupper right hand corner of the search results, select 'Send to:' and choose\n'File' and then click 'Create File'. This will contain a summary of your search\nresults. This script will search this file for series indicators and download\nthe respective files and directories. You will also need the GenBank file for your organism.</p>\n<p>COnTORT has been tested on Linux (Ubuntu and CentOS), MacOS (&gt;10.13), and Windows 10.</p>\n<h2>Input :</h2>\n<ul>\n<li>\n<p>A gds_result text file downloaded from NCBI.</p>\n</li>\n<li>\n<p>The GenBank (.gbff) for your organism, downloaded from NCBI.</p>\n</li>\n</ul>\n<p>You are encouraged to create a new directory each time you run this script.</p>\n<h2><strong>THIS WILL FAIL IF RUN ON VERSION OF PYTHON BELOW 3</strong></h2>\n<h4>Required Parameters:</h4>\n<pre><code>-f gds_result.txt\n-gb genebank_file.gbff\n</code></pre>\n<h4>Usage:</h4>\n<ol>\n<li>\n<p>You can install using pip and then run:</p>\n<pre><code> pip install contort\n contort -f gds_result.txt -gb genbank.gbff\n</code></pre>\n</li>\n<li>\n<p>You can install using Anaconda (anaconda.org/):</p>\n<pre><code> conda install -c kevinmyers contort\n contort -f gds_result.txt -gb genbank.gff\n</code></pre>\n</li>\n<li>\n<p>You can download the git repository and run the original scripts:</p>\n<pre><code> git clone https://github.com/GLBRC/contort.git\n python3.6 contort.py -f gds_result.txt -gb genbank.gbff\n</code></pre>\n</li>\n</ol>\n<h4>Requirements:</h4>\n<ul>\n<li>python 3</li>\n<li>Python modles argparse, ftplib, functools, glob, gzip, io, os, pandas, re, shutil, subprocess, sys, time</li>\n</ul>\n<h2>Output :</h2>\n<p>COnTORT_organized_transcriptomic_data.txt is the primary output.</p>\n<p>Primary output is a single text file containing the gene annotations on the first five columns\nand the mean centered expression data present in the remaining columns. The first row\ncontains the headers references the specific GEO IDs for each experiment.\nNote that annotations no present in the GenBank file are listed with \"N/A\".</p>\n<pre><code>Locus_Tag    Old_Locus_Tag    Gene_Name    Gene_Synonyms    Product    GSM_ID_1    GSM_ID_2\nRSP_0002     N/A              spbB         N/A              H-NS       12.0         4.0\n</code></pre>\n<p>Subdirectories are created for all the files and to organize the directory:</p>\n<h4>Directories created:</h4>\n<pre><code>- geo                     - the downloaded GDS, GSE, GSM and GPL directories\n- matrix_files            - the series_matrix.txt files downloaded from GEO\n- GEOquery_results        - the results of the GEOquery.r script\n- GFF_match_output        - the results of matching the GEOquery results to the gene IDs from the GFF\n- mean_centered_results   - the mean centered expression data for each experiment\n- FTP_files               - files used to download the data from GEO via FTP\n- log_files               - all log files from each step as well as other saved files\n</code></pre>\n<h2>Outline of steps &amp; commands used in pipeline:</h2>\n<h4>runFindGEOAddresses( GDSfile ):</h4>\n<pre><code>Parse GEOfile\n\nOpens and parses the GDSfile result txt file provided by the user (downloaded\nfrom NCBI).\n\nCreates new files:\n    - GEO_FTP_Addresses.txt     - all GDS, GSE, GSM, GPL addresses in the file\n    - GEO_FTP_directories.txt   - GDS, GSE, GSM, GPL directories that will be downloaded\n</code></pre>\n<h4>run_is_ftp_dir( ftp_handle, name, guess_by_extension=True ):</h4>\n<pre><code>QC for FTP\n\nDetermines if an item listed on the FTP server is a directory or not by \nlooking for a \".\" in the fourth position. If it has that, it is nearly \nalways a file and not a directory.\n</code></pre>\n<h4>run_make_parent_dir( fpath ):</h4>\n<pre><code>Make directories to match the FTP\nCreates the directories in the local directory to match the FTP directories\n</code></pre>\n<h4>run_download_FTP_file( ftp_handle, name, dest, overwrite ):</h4>\n<pre><code>Copy the FTP files to the local directory\nCopy FTP files into the respective directories on the local directory\n</code></pre>\n<h4>run_mirror_ftp_dir( ftp_handle, name, overwrite, guess_by_extension ):</h4>\n<pre><code>Replicate the directories\nReplicates a direcotry from the FTP server onto the local drive recusively\n</code></pre>\n<h4>download_ftp_tree( ftp_handle, path, destination, overwrite=False, guess_by_extension=True ):</h4>\n<pre><code>Performs the actions to download files from the NCBI FTP\n\nPerform the actions\nDownloads an entire directory tree from an ftp server to the local destination\nWill NOT overwrite files if present in the local directory\n</code></pre>\n<h4>Default FTP Settings for NCBI GEO:</h4>\n<pre><code>server = 'ftp.ncbi.nlm.nih.gov'\nuser = 'anonymous'\npassword = ''\ndestination = user input\nsources of files = from the runFindGEOAddresses module\n</code></pre>\n<h4>GEOannotate( ):</h4>\n<pre><code>Organize the GEO series files\n\nThis is a replacement for R and GEOquery. This will organize the GEO data available.\n\nThis first finds and copies all soft.gz files for all GSE (series) data in the \nGEO download from the previous steps. Using GEOparse, the metadata for each gene is \ncollected and concatentated with the normalized data present for each series.\n\nThe new files are written for downstream steps and the copied soft.gz files are deleted.\n</code></pre>\n<h4>gffMatch( GBFF ):</h4>\n<pre><code>Match the gene annotations from the GenBank file to the organized expression data\n\nUsing dictionaries created from the GenBank file for the orgainsm, this\nscript will search for matches to the gene annotation in the GenBank file and\nretain only those data with matches. This will make new files for each GEOquery\noutput with columns representing gene annotations and then the log2 normalized data\nfrom the GEO series files. The data are then mean centered and joined together\nwith the gene annotations annotation as the key. All blanks are retained for consistency.\nThis file is written and can be used in Excel or R for further analysis.\n</code></pre>\n<h4>cleanUp( cwd ):</h4>\n<pre><code>Clean up the directory\n\nOrganize the files into folders for a cleaner directory\n</code></pre>\n\n          </div>"}, "last_serial": 6792738, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "bd0930f024a18d9b3340d5a6e831b481", "sha256": "7f2b67365dfe9f82829a8377c4cb69af98028c390c8c544ce8dce6c8b9e4639c"}, "downloads": -1, "filename": "contort-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bd0930f024a18d9b3340d5a6e831b481", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15036, "upload_time": "2020-01-23T20:50:41", "upload_time_iso_8601": "2020-01-23T20:50:41.551529Z", "url": "https://files.pythonhosted.org/packages/7d/3e/4daba0cf6afee43e5f512d6589f87927f1f2db10f0be8be8adf9e42f617a/contort-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c091525f097dcc8593f63788f1a00482", "sha256": "fc73c14d5b21310958f0ec68ec5db2f09238217e8ce2f38cd3df7d340cad08a1"}, "downloads": -1, "filename": "contort-0.1.0.tar.gz", "has_sig": false, "md5_digest": "c091525f097dcc8593f63788f1a00482", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12308, "upload_time": "2020-01-23T20:50:43", "upload_time_iso_8601": "2020-01-23T20:50:43.174417Z", "url": "https://files.pythonhosted.org/packages/9c/06/99dd3ae2aff8f8c092e39a4eb4ebab95bcf91c4376c53148316da53798b5/contort-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "1740c13a816001b78545ed1c91d10692", "sha256": "ece0b0581d585b5a1d8e9f27c2a08d084ea128ad09e1bdc74310c05cb8030c69"}, "downloads": -1, "filename": "contort-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "1740c13a816001b78545ed1c91d10692", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15106, "upload_time": "2020-02-06T15:16:49", "upload_time_iso_8601": "2020-02-06T15:16:49.617540Z", "url": "https://files.pythonhosted.org/packages/ad/49/497a7e6ae8ae7eb8c8342fe669ed7610558746dca46ae7fad4d1107de690/contort-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f464040e26ca6023713469f015580984", "sha256": "71f910204bf7ede5947c39e4da4efdc81f44b638487f544c98c478f977cadc10"}, "downloads": -1, "filename": "contort-0.1.1.tar.gz", "has_sig": false, "md5_digest": "f464040e26ca6023713469f015580984", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12369, "upload_time": "2020-02-06T15:16:51", "upload_time_iso_8601": "2020-02-06T15:16:51.226857Z", "url": "https://files.pythonhosted.org/packages/d3/95/76a1353dd3ed5a0f64ed392b6307e98ff034c54c4c7acfe84cc8acf04bd7/contort-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "ce3cd8d3d6b6a315b440e2415d29a5d2", "sha256": "5291001f76ba335299f5900a3ef1206c5e23b0870e46c0a71aa44b678f2bdcc0"}, "downloads": -1, "filename": "contort-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "ce3cd8d3d6b6a315b440e2415d29a5d2", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15102, "upload_time": "2020-02-10T14:50:22", "upload_time_iso_8601": "2020-02-10T14:50:22.325681Z", "url": "https://files.pythonhosted.org/packages/8c/44/b93ab56a036a7ed45fe28de8d456696543f6eb2881add2b02ec65ca49449/contort-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "20f8cf6982ed668fc4b18d8114b131dc", "sha256": "5d9585ec7e552d412b54edb0018d3a18383a80216ba4f6480f60efea5f501b77"}, "downloads": -1, "filename": "contort-0.1.2.tar.gz", "has_sig": false, "md5_digest": "20f8cf6982ed668fc4b18d8114b131dc", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 12380, "upload_time": "2020-02-10T14:50:23", "upload_time_iso_8601": "2020-02-10T14:50:23.599194Z", "url": "https://files.pythonhosted.org/packages/34/71/a1975b67bb554fd622586041edbe02d5ff107050936767d24c3f27e9c759/contort-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "38aa644e3e0bd0da811086fe0fdaf9aa", "sha256": "2138c22cff7bdea6ceaa097519a9705926a5a6fc1b47cf639801725bdf5d18cc"}, "downloads": -1, "filename": "contort-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "38aa644e3e0bd0da811086fe0fdaf9aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15133, "upload_time": "2020-03-11T14:45:58", "upload_time_iso_8601": "2020-03-11T14:45:58.258826Z", "url": "https://files.pythonhosted.org/packages/0d/25/bf77b7968a7fbdfaf455e1248078ad651e67aca4421ffa7763dc9a52ee0e/contort-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "443a20a3821098ddb376385a0a6d5348", "sha256": "c77669ea26ee1943dd5999cea93024ba05d4ffd143b0f7845b1847773c5a000a"}, "downloads": -1, "filename": "contort-0.1.3.tar.gz", "has_sig": false, "md5_digest": "443a20a3821098ddb376385a0a6d5348", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10572, "upload_time": "2020-03-11T14:45:59", "upload_time_iso_8601": "2020-03-11T14:45:59.306097Z", "url": "https://files.pythonhosted.org/packages/2a/4e/2b70685af46c313f077db93843ed5507566283a3e5156d36c1df08181539/contort-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "38aa644e3e0bd0da811086fe0fdaf9aa", "sha256": "2138c22cff7bdea6ceaa097519a9705926a5a6fc1b47cf639801725bdf5d18cc"}, "downloads": -1, "filename": "contort-0.1.3-py3-none-any.whl", "has_sig": false, "md5_digest": "38aa644e3e0bd0da811086fe0fdaf9aa", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 15133, "upload_time": "2020-03-11T14:45:58", "upload_time_iso_8601": "2020-03-11T14:45:58.258826Z", "url": "https://files.pythonhosted.org/packages/0d/25/bf77b7968a7fbdfaf455e1248078ad651e67aca4421ffa7763dc9a52ee0e/contort-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "443a20a3821098ddb376385a0a6d5348", "sha256": "c77669ea26ee1943dd5999cea93024ba05d4ffd143b0f7845b1847773c5a000a"}, "downloads": -1, "filename": "contort-0.1.3.tar.gz", "has_sig": false, "md5_digest": "443a20a3821098ddb376385a0a6d5348", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10572, "upload_time": "2020-03-11T14:45:59", "upload_time_iso_8601": "2020-03-11T14:45:59.306097Z", "url": "https://files.pythonhosted.org/packages/2a/4e/2b70685af46c313f077db93843ed5507566283a3e5156d36c1df08181539/contort-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:31 2020"}