{"info": {"author": "S. Joshua Swamidass", "author_email": "swamidass@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: Science/Research", "License :: Free for non-commercial use", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Scientific/Engineering :: Bio-Informatics", "Topic :: Scientific/Engineering :: Chemistry", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Mathematics", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Scientific/Engineering :: Visualization"], "description": "================\nThe CROCpy3 Package (the original CROC package adapted for Python 3.7)\n================\n\nA package for calculating ROC curves and Concentrated ROC (CROC) curves written by `Dr. S. Joshua Swamidass <http://swami.wustl.edu>`_.\n\nCitation\n--------\n\n  | **A CROC Stronger than ROC: Measuring, Visualizing, and Optimizing Early Retrieval**\n  | S. Joshua Swamidass, Chloe-Agathe Azencott, Kenny Daily and Pierre Baldi\n  | *Bioinformatics*, April 2010, `doi:10.1093/bioinformatics/btq140 <http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btq140>`_\n\nDescription\n-----------\n\nThis pure-python package is designed to be a standardized implementation of performance curves\nand metrics for use either in python scripts or through a simple commandline interface. As a standardized implementation\nits output is robust enough to be using in publishable scientific work.\n\nWith this package, one can easily:\n\n#. Compute the coordinates of both Accumulation Curves and ROC curves.\n#. Handle ties appropriately using several methods.\n#. Compute the BEDROC metric.\n#. Vertically add and average the performance curves of several cross-validation folds.\n#. Focus on the early part of the ROC curve by using several x-axis transforms.\n\nThe docstrings in this module are fairly complete and the scripts provide simple access to\nthe most common functions. Further documentation can be found at http://swami.wustl.edu/CROC/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://swami.wustl.edu/CROC", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "CROCpy3", "package_url": "https://pypi.org/project/CROCpy3/", "platform": "", "project_url": "https://pypi.org/project/CROCpy3/", "project_urls": {"Homepage": "http://swami.wustl.edu/CROC"}, "release_url": "https://pypi.org/project/CROCpy3/1.1.26/", "requires_dist": null, "requires_python": "", "summary": "A package for calculating ROC curves and Concentrated ROC (CROC) curves.", "version": "1.1.26", "yanked": false, "html_description": "<div class=\"project-description\">\n            ================<br>The CROCpy3 Package (the original CROC package adapted for Python 3.7)<br>================<br><br>A package for calculating ROC curves and Concentrated ROC (CROC) curves written by `Dr. S. Joshua Swamidass &lt;http://swami.wustl.edu&gt;`_.<br><br>Citation<br>--------<br><br>  | **A CROC Stronger than ROC: Measuring, Visualizing, and Optimizing Early Retrieval**<br>  | S. Joshua Swamidass, Chloe-Agathe Azencott, Kenny Daily and Pierre Baldi<br>  | *Bioinformatics*, April 2010, `doi:10.1093/bioinformatics/btq140 &lt;http://bioinformatics.oxfordjournals.org/cgi/content/abstract/btq140&gt;`_<br><br>Description<br>-----------<br><br>This pure-python package is designed to be a standardized implementation of performance curves<br>and metrics for use either in python scripts or through a simple commandline interface. As a standardized implementation<br>its output is robust enough to be using in publishable scientific work.<br><br>With this package, one can easily:<br><br>#. Compute the coordinates of both Accumulation Curves and ROC curves.<br>#. Handle ties appropriately using several methods.<br>#. Compute the BEDROC metric.<br>#. Vertically add and average the performance curves of several cross-validation folds.<br>#. Focus on the early part of the ROC curve by using several x-axis transforms.<br><br>The docstrings in this module are fairly complete and the scripts provide simple access to<br>the most common functions. Further documentation can be found at http://swami.wustl.edu/CROC/\n          </div>"}, "last_serial": 5164498, "releases": {"1.1.26": [{"comment_text": "", "digests": {"md5": "b94fc4cb4d07138126235ab1d7d0ed6a", "sha256": "814ae3ffa18b0f3206d0ec4afc031760e49772d612ea8321c6658baa8423f1e5"}, "downloads": -1, "filename": "CROCpy3-1.1.26.tar.gz", "has_sig": false, "md5_digest": "b94fc4cb4d07138126235ab1d7d0ed6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10562, "upload_time": "2019-04-19T11:18:50", "upload_time_iso_8601": "2019-04-19T11:18:50.874364Z", "url": "https://files.pythonhosted.org/packages/47/94/96d75ecb355b6985c5ce0cfb902b18a624dd6627573daac4136d5cdc4a22/CROCpy3-1.1.26.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b94fc4cb4d07138126235ab1d7d0ed6a", "sha256": "814ae3ffa18b0f3206d0ec4afc031760e49772d612ea8321c6658baa8423f1e5"}, "downloads": -1, "filename": "CROCpy3-1.1.26.tar.gz", "has_sig": false, "md5_digest": "b94fc4cb4d07138126235ab1d7d0ed6a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10562, "upload_time": "2019-04-19T11:18:50", "upload_time_iso_8601": "2019-04-19T11:18:50.874364Z", "url": "https://files.pythonhosted.org/packages/47/94/96d75ecb355b6985c5ce0cfb902b18a624dd6627573daac4136d5cdc4a22/CROCpy3-1.1.26.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:15 2020"}