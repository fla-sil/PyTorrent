{"info": {"author": "Allan Namasaka Sifuna", "author_email": "allansifuna324@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Web Environment", "Framework :: Flask", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "[![Requirements Status](https://requires.io/github/allansifuna/Flask-Mpesa/requirements.svg?branch=master)](https://requires.io/github/allansifuna/Flask-Mpesa/requirements/?branch=master)\n[![Codacy Badge](https://api.codacy.com/project/badge/Grade/95668732c0014077abf06e7826c1becf)](https://www.codacy.com/manual/allansifuna/Flask-Mpesa?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=allansifuna/Flask-Mpesa&amp;utm_campaign=Badge_Grade)\n[![Coverage Status](https://coveralls.io/repos/github/allansifuna/Flask-Mpesa/badge.svg?branch=master)](https://coveralls.io/github/allansifuna/Flask-Mpesa?branch=master)\n\n# Flask-Mpesa\nFlask-Mpesa is a mpesa-py extension for flask Applications.\n\n## Installation\n\nUse the package manager [pip](https://pip.pypa.io/en/stable/) to install flask-mpesa.\n\n```bash\npip install Flask-Mpesa\n```\n\n## Usage\n\n```python\nfrom flask import Flask\nfrom flask_mpesa import MpesaAPI\n\napp=Flask(__name__)\n\n\nmpesaapi=MpesaAPI(app)\n```\n\n\n## if you are using blueprints\n```python\nfrom flask_mpesa import MpesaAPI\nmpesaapi=MpesaAPI()\n\nmpesaapi.init_app(app)\n```\n### Be sure to set the following variables in the app.config\n\n```python\napp.config[\"API_ENVIRONMENT\"] = \"sandbox\" #sandbox or live\napp.config[\"APP_KEY\"] = \"...\" # App_key from developers portal\napp.config[\"APP_SECRET\"] = \"...\" #App_Secret from developers portal\n```\n### B2C  Api\nThis returns a json response to your result_url.\n\n```python\n@app.route('/transact/b2c',methods=['GET'])\ndef b2c_transact():\n    data={\"initiator_name\": \"[InitiatorName]\",\n            \"security_credential\": \"[SecurityCredential]\",#from developers portal\n            \"amount\": \"1000\",\n            \"command_id\":\"[command_id]\",\n            \"party_a\": \"[PartyA]\",\n            \"party_b\": \"[PartyB]\",\n            \"remarks\": \"[Remarks]\",\n            \"queue_timeout_url\": \"YOUR_URL\" ,\n            \"result_url\": \"YOUR_URL\",\n            \"occassion\": \"[Occassion]\"\n    }\n    mpesaapi.B2C.transact(**data)  # ** unpacks the dictionary\n\n\n```\n\n### B2B  Api\nThis returns a json response to your result_url.\n\n```python\n@app.route('/transact/b2b')\ndef b2b_transact():\n    data={\"initiator\": \"[Initiator]\",\n            \"security_credential\": \"[SecurityCredential]\",#from developers portal\n            \"amount\": \"1000\",\n            \"command_id\":\"[command_id]\",\n            \"sender_identifier_type\":\"[SenderIdentifierType]\",\n            \"receiver_identifier_type\":\"[ReceiverIdentifierType]\",\n            \"party_a\": \"[PartyA]\",\n            \"party_b\": \"[PartyB]\",\n            \"remarks\": \"[Remarks]\",\n            \"queue_timeout_url\": \"YOUR_URL\" ,\n            \"result_url\": \"YOUR_URL\",\n            \"account_reference\": \"[AccountReference]\"\n    }\n    mpesaapi.B2B.transact(**data)  # ** unpacks the dictionary\n\n```\n\n### C2B  api\n\n```python\n@app.route('/transact/c2b')\ndef c2b_transact():\n    reg_data={\"shortcode\": \"600364\",\n          \"response_type\": \"Completed\",\n          \"confirmation_url\": \"https://50213252.ngrok.io/confirmation\",\n          \"validation_url\": \"https://50213252.ngrok.io/validation\"\n    }\n    v=mpesaapi.C2B.register(**reg_data)  # ** unpacks the dictionary\n    ##use v to capture the response\n\n\n    #This method allows you to test a mock payment and see the result so it can be avoided in production mode.\n    test_data={\"shortcode\": \"600364\",\n           \"command_id\": \"CustomerPayBillOnline\",\n           \"amount\": \"100\",\n           \"msisdn\": \"254708374149\",\n           \"bill_ref_number\": \"account\"\n    }\n    new_v = mpesaapi.C2B.simulate(**test_data)  # ** unpacks the dictionary\n    #use new_v to capture the response\n    return render_template('home.html')\n\n@app.route('/confirmation',methods=[\"POST\"])\ndef c2b_confirmation():\n    #save the data\n    request_data = request.data\n\n    #Perform your processing here e.g. print it out...\n    print(request_data)\n\n```\n\n### MpesaExpress  api\n\n```python\n@app.route('/transact/c2b')\ndef c2b_transact():\n    data = {\n        \"business_shortcode\": \"[BusinessShortcode]\", #from developers portal\n        \"passcode\": \"[Passcode]\",#from developers portal\n        \"amount\": \"[Amount]\", # choose amount preferrably KSH 1\n        \"phone_number\":\"[PhoneNumber]\", #phone number to be prompted to pay\n        \"reference_code\": \"[Reference Code]\",#Code to inform the user of services he/she is paying for.\n        \"callback_url\": \"[YOUR_URL]\", # cllback url should be exposes. for testing putposes you can route on host 0.0.0.0 and set the callback url to be https://youripaddress:yourport/endpoint\n        \"description\": \"[Description]\" #a description of the transaction its optional\n    }\n    v = mpesaapi.MpesaExpress.stk_push(**data)  # ** unpacks the dictionary\n    ##use v to capture the response\n    return render_template('home.html')\n\n@app.route('/callback-url',methods=[\"POST\"])\ndef callback_url():\n    #get json data set to this route\n    json_data = request.get_json()\n    #get result code and probably check for transaction success or failure\n    result_code=json_data[\"Body\"][\"stkCallback\"][\"ResultCode\"]\n    message={\n        \"ResultCode\":0,\n        \"ResultDesc\":\"success\",\n        \"ThirdPartyTransID\":\"h234k2h4krhk2\"\n    }\n    #if result code is 0 you can proceed and save the data else if its any other number you can track the transaction\n    return jsonify(message),200\n\n```\n### Balance  api\n\n```python\nbalance=mpesaapi.Balance\n\n```\n### Reversal  api\n\n```python\nreversal=mpesaapi.Reversal\n\n```\n### TransactionStatus  api\n\n```python\ntransaction_status=mpesaapi.TransactionStatus\n\n```\n## Contributing\nPull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.\n\nPlease make sure to update tests as appropriate.\n## Tests and Examples\n\nExamples are comming soon!.\n## License\n[MIT](https://github.com/allansifuna/Flask-Mpesa/blob/master/LICENSE)", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/allansifuna/flask-mpesa", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "Flask-Mpesa", "package_url": "https://pypi.org/project/Flask-Mpesa/", "platform": "any", "project_url": "https://pypi.org/project/Flask-Mpesa/", "project_urls": {"Homepage": "https://github.com/allansifuna/flask-mpesa"}, "release_url": "https://pypi.org/project/Flask-Mpesa/1.2.1/", "requires_dist": null, "requires_python": "", "summary": "An mpesa-py Extension for Flask Applications.", "version": "1.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://requires.io/github/allansifuna/Flask-Mpesa/requirements/?branch=master\" rel=\"nofollow\"><img alt=\"Requirements Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9848ece693bafea0860c1a367985ddbdd35824e8/68747470733a2f2f72657175697265732e696f2f6769746875622f616c6c616e736966756e612f466c61736b2d4d706573612f726571756972656d656e74732e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://www.codacy.com/manual/allansifuna/Flask-Mpesa?utm_source=github.com&amp;utm_medium=referral&amp;utm_content=allansifuna/Flask-Mpesa&amp;utm_campaign=Badge_Grade\" rel=\"nofollow\"><img alt=\"Codacy Badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8bebc6e9663fc47cd96953577b5e9b71257c1b5e/68747470733a2f2f6170692e636f646163792e636f6d2f70726f6a6563742f62616467652f47726164652f3935363638373332633030313430373761626630366537383236633162656366\"></a>\n<a href=\"https://coveralls.io/github/allansifuna/Flask-Mpesa?branch=master\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/081606ed3b9580d0941144cbbfd62b0d04389fe8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f616c6c616e736966756e612f466c61736b2d4d706573612f62616467652e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>Flask-Mpesa</h1>\n<p>Flask-Mpesa is a mpesa-py extension for flask Applications.</p>\n<h2>Installation</h2>\n<p>Use the package manager <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a> to install flask-mpesa.</p>\n<pre>pip install Flask-Mpesa\n</pre>\n<h2>Usage</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_mpesa</span> <span class=\"kn\">import</span> <span class=\"n\">MpesaAPI</span>\n\n<span class=\"n\">app</span><span class=\"o\">=</span><span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"n\">mpesaapi</span><span class=\"o\">=</span><span class=\"n\">MpesaAPI</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h2>if you are using blueprints</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_mpesa</span> <span class=\"kn\">import</span> <span class=\"n\">MpesaAPI</span>\n<span class=\"n\">mpesaapi</span><span class=\"o\">=</span><span class=\"n\">MpesaAPI</span><span class=\"p\">()</span>\n\n<span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n<h3>Be sure to set the following variables in the app.config</h3>\n<pre><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"API_ENVIRONMENT\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"sandbox\"</span> <span class=\"c1\">#sandbox or live</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"APP_KEY\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"...\"</span> <span class=\"c1\"># App_key from developers portal</span>\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"s2\">\"APP_SECRET\"</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s2\">\"...\"</span> <span class=\"c1\">#App_Secret from developers portal</span>\n</pre>\n<h3>B2C  Api</h3>\n<p>This returns a json response to your result_url.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/transact/b2c'</span><span class=\"p\">,</span><span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">b2c_transact</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"initiator_name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[InitiatorName]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"security_credential\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[SecurityCredential]\"</span><span class=\"p\">,</span><span class=\"c1\">#from developers portal</span>\n            <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1000\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"command_id\"</span><span class=\"p\">:</span><span class=\"s2\">\"[command_id]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"party_a\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[PartyA]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"party_b\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[PartyB]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"remarks\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Remarks]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"queue_timeout_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_URL\"</span> <span class=\"p\">,</span>\n            <span class=\"s2\">\"result_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_URL\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"occassion\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Occassion]\"</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">B2C</span><span class=\"o\">.</span><span class=\"n\">transact</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">)</span>  <span class=\"c1\"># ** unpacks the dictionary</span>\n</pre>\n<h3>B2B  Api</h3>\n<p>This returns a json response to your result_url.</p>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/transact/b2b'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">b2b_transact</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"initiator\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Initiator]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"security_credential\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[SecurityCredential]\"</span><span class=\"p\">,</span><span class=\"c1\">#from developers portal</span>\n            <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"s2\">\"1000\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"command_id\"</span><span class=\"p\">:</span><span class=\"s2\">\"[command_id]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"sender_identifier_type\"</span><span class=\"p\">:</span><span class=\"s2\">\"[SenderIdentifierType]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"receiver_identifier_type\"</span><span class=\"p\">:</span><span class=\"s2\">\"[ReceiverIdentifierType]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"party_a\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[PartyA]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"party_b\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[PartyB]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"remarks\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Remarks]\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"queue_timeout_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_URL\"</span> <span class=\"p\">,</span>\n            <span class=\"s2\">\"result_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"YOUR_URL\"</span><span class=\"p\">,</span>\n            <span class=\"s2\">\"account_reference\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[AccountReference]\"</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">B2B</span><span class=\"o\">.</span><span class=\"n\">transact</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">)</span>  <span class=\"c1\"># ** unpacks the dictionary</span>\n</pre>\n<h3>C2B  api</h3>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/transact/c2b'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">c2b_transact</span><span class=\"p\">():</span>\n    <span class=\"n\">reg_data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"shortcode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"600364\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"response_type\"</span><span class=\"p\">:</span> <span class=\"s2\">\"Completed\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"confirmation_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://50213252.ngrok.io/confirmation\"</span><span class=\"p\">,</span>\n          <span class=\"s2\">\"validation_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"https://50213252.ngrok.io/validation\"</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">v</span><span class=\"o\">=</span><span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">C2B</span><span class=\"o\">.</span><span class=\"n\">register</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">reg_data</span><span class=\"p\">)</span>  <span class=\"c1\"># ** unpacks the dictionary</span>\n    <span class=\"c1\">##use v to capture the response</span>\n\n\n    <span class=\"c1\">#This method allows you to test a mock payment and see the result so it can be avoided in production mode.</span>\n    <span class=\"n\">test_data</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s2\">\"shortcode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"600364\"</span><span class=\"p\">,</span>\n           <span class=\"s2\">\"command_id\"</span><span class=\"p\">:</span> <span class=\"s2\">\"CustomerPayBillOnline\"</span><span class=\"p\">,</span>\n           <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"s2\">\"100\"</span><span class=\"p\">,</span>\n           <span class=\"s2\">\"msisdn\"</span><span class=\"p\">:</span> <span class=\"s2\">\"254708374149\"</span><span class=\"p\">,</span>\n           <span class=\"s2\">\"bill_ref_number\"</span><span class=\"p\">:</span> <span class=\"s2\">\"account\"</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">new_v</span> <span class=\"o\">=</span> <span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">C2B</span><span class=\"o\">.</span><span class=\"n\">simulate</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">test_data</span><span class=\"p\">)</span>  <span class=\"c1\"># ** unpacks the dictionary</span>\n    <span class=\"c1\">#use new_v to capture the response</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'home.html'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/confirmation'</span><span class=\"p\">,</span><span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">c2b_confirmation</span><span class=\"p\">():</span>\n    <span class=\"c1\">#save the data</span>\n    <span class=\"n\">request_data</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">data</span>\n\n    <span class=\"c1\">#Perform your processing here e.g. print it out...</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">request_data</span><span class=\"p\">)</span>\n</pre>\n<h3>MpesaExpress  api</h3>\n<pre><span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/transact/c2b'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">c2b_transact</span><span class=\"p\">():</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n        <span class=\"s2\">\"business_shortcode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[BusinessShortcode]\"</span><span class=\"p\">,</span> <span class=\"c1\">#from developers portal</span>\n        <span class=\"s2\">\"passcode\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Passcode]\"</span><span class=\"p\">,</span><span class=\"c1\">#from developers portal</span>\n        <span class=\"s2\">\"amount\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Amount]\"</span><span class=\"p\">,</span> <span class=\"c1\"># choose amount preferrably KSH 1</span>\n        <span class=\"s2\">\"phone_number\"</span><span class=\"p\">:</span><span class=\"s2\">\"[PhoneNumber]\"</span><span class=\"p\">,</span> <span class=\"c1\">#phone number to be prompted to pay</span>\n        <span class=\"s2\">\"reference_code\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Reference Code]\"</span><span class=\"p\">,</span><span class=\"c1\">#Code to inform the user of services he/she is paying for.</span>\n        <span class=\"s2\">\"callback_url\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[YOUR_URL]\"</span><span class=\"p\">,</span> <span class=\"c1\"># cllback url should be exposes. for testing putposes you can route on host 0.0.0.0 and set the callback url to be https://youripaddress:yourport/endpoint</span>\n        <span class=\"s2\">\"description\"</span><span class=\"p\">:</span> <span class=\"s2\">\"[Description]\"</span> <span class=\"c1\">#a description of the transaction its optional</span>\n    <span class=\"p\">}</span>\n    <span class=\"n\">v</span> <span class=\"o\">=</span> <span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">MpesaExpress</span><span class=\"o\">.</span><span class=\"n\">stk_push</span><span class=\"p\">(</span><span class=\"o\">**</span><span class=\"n\">data</span><span class=\"p\">)</span>  <span class=\"c1\"># ** unpacks the dictionary</span>\n    <span class=\"c1\">##use v to capture the response</span>\n    <span class=\"k\">return</span> <span class=\"n\">render_template</span><span class=\"p\">(</span><span class=\"s1\">'home.html'</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/callback-url'</span><span class=\"p\">,</span><span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"POST\"</span><span class=\"p\">])</span>\n<span class=\"k\">def</span> <span class=\"nf\">callback_url</span><span class=\"p\">():</span>\n    <span class=\"c1\">#get json data set to this route</span>\n    <span class=\"n\">json_data</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">get_json</span><span class=\"p\">()</span>\n    <span class=\"c1\">#get result code and probably check for transaction success or failure</span>\n    <span class=\"n\">result_code</span><span class=\"o\">=</span><span class=\"n\">json_data</span><span class=\"p\">[</span><span class=\"s2\">\"Body\"</span><span class=\"p\">][</span><span class=\"s2\">\"stkCallback\"</span><span class=\"p\">][</span><span class=\"s2\">\"ResultCode\"</span><span class=\"p\">]</span>\n    <span class=\"n\">message</span><span class=\"o\">=</span><span class=\"p\">{</span>\n        <span class=\"s2\">\"ResultCode\"</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"ResultDesc\"</span><span class=\"p\">:</span><span class=\"s2\">\"success\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"ThirdPartyTransID\"</span><span class=\"p\">:</span><span class=\"s2\">\"h234k2h4krhk2\"</span>\n    <span class=\"p\">}</span>\n    <span class=\"c1\">#if result code is 0 you can proceed and save the data else if its any other number you can track the transaction</span>\n    <span class=\"k\">return</span> <span class=\"n\">jsonify</span><span class=\"p\">(</span><span class=\"n\">message</span><span class=\"p\">),</span><span class=\"mi\">200</span>\n</pre>\n<h3>Balance  api</h3>\n<pre><span class=\"n\">balance</span><span class=\"o\">=</span><span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">Balance</span>\n</pre>\n<h3>Reversal  api</h3>\n<pre><span class=\"n\">reversal</span><span class=\"o\">=</span><span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">Reversal</span>\n</pre>\n<h3>TransactionStatus  api</h3>\n<pre><span class=\"n\">transaction_status</span><span class=\"o\">=</span><span class=\"n\">mpesaapi</span><span class=\"o\">.</span><span class=\"n\">TransactionStatus</span>\n</pre>\n<h2>Contributing</h2>\n<p>Pull requests are welcome. For major changes, please open an issue first to discuss what you would like to change.</p>\n<p>Please make sure to update tests as appropriate.</p>\n<h2>Tests and Examples</h2>\n<p>Examples are comming soon!.</p>\n<h2>License</h2>\n<p><a href=\"https://github.com/allansifuna/Flask-Mpesa/blob/master/LICENSE\" rel=\"nofollow\">MIT</a></p>\n\n          </div>"}, "last_serial": 6525905, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "98a143063a3cc8174c0c49eae062201e", "sha256": "f173e56da2627f293cbfa871fd7da9e0c177244cbd9b55d31284ebc1cd98c1bc"}, "downloads": -1, "filename": "Flask-Mpesa-1.0.0.tar.gz", "has_sig": false, "md5_digest": "98a143063a3cc8174c0c49eae062201e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3070, "upload_time": "2019-11-29T08:44:21", "upload_time_iso_8601": "2019-11-29T08:44:21.047352Z", "url": "https://files.pythonhosted.org/packages/9e/19/669a56e80509d985ae606014400c735bdb1b5cbc388bd313de3aaeb2011c/Flask-Mpesa-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "1a7ea0fa0c2970c7238e92d0f24df123", "sha256": "c9b0cdd867eae18bbcd190927a9966e16dc3795921084be63389f1ee2fc2e3b9"}, "downloads": -1, "filename": "Flask-Mpesa-1.0.1.tar.gz", "has_sig": false, "md5_digest": "1a7ea0fa0c2970c7238e92d0f24df123", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3263, "upload_time": "2019-11-29T10:25:19", "upload_time_iso_8601": "2019-11-29T10:25:19.951887Z", "url": "https://files.pythonhosted.org/packages/18/5d/48668740e2012a3b786a28beb08d6e51fc8a96bee699487404530bde56cf/Flask-Mpesa-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "a2c8a0ea4b9f803e56a224abdf52747e", "sha256": "574738d6f69e08897738b3452715effc0763391097a4ffc616da15b6cc28e7b5"}, "downloads": -1, "filename": "Flask-Mpesa-1.0.2.tar.gz", "has_sig": false, "md5_digest": "a2c8a0ea4b9f803e56a224abdf52747e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4152, "upload_time": "2020-01-23T07:00:33", "upload_time_iso_8601": "2020-01-23T07:00:33.590753Z", "url": "https://files.pythonhosted.org/packages/f7/c9/99647b8af68617e5cda22790b93406034fd55abb78d0694c910ba2272536/Flask-Mpesa-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "5ae82be173427efc3aa816d8411942ef", "sha256": "4a8ed3f3196bb8cbbad747068c32df86e93bfae073ede9fc662898e327dae659"}, "downloads": -1, "filename": "Flask-Mpesa-1.0.3.tar.gz", "has_sig": false, "md5_digest": "5ae82be173427efc3aa816d8411942ef", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4628, "upload_time": "2020-01-23T08:55:31", "upload_time_iso_8601": "2020-01-23T08:55:31.510699Z", "url": "https://files.pythonhosted.org/packages/25/53/c508f26789596866caf4cb7883f7f7c619132cf18b7a2fb37dd39107a234/Flask-Mpesa-1.0.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "497939dc78fccd77a6ac1ca56297b642", "sha256": "16b0b1bc9ff6a666b5d0898fe0cbdb19720e801598553b207c094b752b58d0df"}, "downloads": -1, "filename": "Flask-Mpesa-1.2.0.tar.gz", "has_sig": false, "md5_digest": "497939dc78fccd77a6ac1ca56297b642", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8767, "upload_time": "2020-01-27T11:17:08", "upload_time_iso_8601": "2020-01-27T11:17:08.102487Z", "url": "https://files.pythonhosted.org/packages/da/90/e0a22f0cd933641baf7d6c0db535566b9fa3dbd2a91b564d3c3af80d0b58/Flask-Mpesa-1.2.0.tar.gz", "yanked": false}], "1.2.1": [{"comment_text": "", "digests": {"md5": "2e3fd06cf1a348a8e98d93fa4e5f9681", "sha256": "975171f340352ff6d052d8fe99bc9105156aa1c03cb1c02e85d48b969825272d"}, "downloads": -1, "filename": "Flask-Mpesa-1.2.1.tar.gz", "has_sig": false, "md5_digest": "2e3fd06cf1a348a8e98d93fa4e5f9681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8767, "upload_time": "2020-01-27T11:34:31", "upload_time_iso_8601": "2020-01-27T11:34:31.797593Z", "url": "https://files.pythonhosted.org/packages/ab/3c/e4ac8330c30a6815aa2d5397a016e6d65217d7064c27b597d8a208daf261/Flask-Mpesa-1.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2e3fd06cf1a348a8e98d93fa4e5f9681", "sha256": "975171f340352ff6d052d8fe99bc9105156aa1c03cb1c02e85d48b969825272d"}, "downloads": -1, "filename": "Flask-Mpesa-1.2.1.tar.gz", "has_sig": false, "md5_digest": "2e3fd06cf1a348a8e98d93fa4e5f9681", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8767, "upload_time": "2020-01-27T11:34:31", "upload_time_iso_8601": "2020-01-27T11:34:31.797593Z", "url": "https://files.pythonhosted.org/packages/ab/3c/e4ac8330c30a6815aa2d5397a016e6d65217d7064c27b597d8a208daf261/Flask-Mpesa-1.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:36 2020"}