{"info": {"author": "John Faucett", "author_email": "john.faucett@datadao.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "## Application Builder\n\nThe goal of application builder is to have a single object that connects `settings` and the current application `environment` in one place. This object can then be used throughout your python application,\nas a central spot for checking which environment the application is running under and for gettings settings accordingly. \n\n\n## Usage Example\n\n```python\nfrom application_builder.application import Application\n\n# our settings class must support 2 functions `load()` and `settings()`.\n\nclass MySettingsManager:\n\n    def __init__(self, env, app_root):\n        self._env = env\n        self._root = app_root\n\n    def load(self):\n        # json/yaml/python files could be loaded here\n        self._data = { \n            'test' : { 'db' : 'localhost' },\n            'dev' : { 'db' : 'some.server.com' }\n        }\n\n    def settings(self):\n        return self._data\n\ndef settings_init_fn(env: str, app_root: str):\n    sm = MySettingsManager(env, app_root)\n    return sm\n\n# Let's assume MYAPP_ENV='dev'\n\nmyapp = Application(\n    name = 'myapp',\n    app_env_varname: 'MYAPP_ENV',\n    app_root_dir: '/path/to/myapp',\n\n    # sometimes you might need to do a lot more\n    # than just instantiate a class, that's why you need to pass a function\n    settings_class_init_fn: settings_init_fn\n)\n\nmyapp.add_path('settings', 'config/settings')\nmyapp.add_path('data', 'data')\n\nmyapp.boot()\n\nmyapp.current_environment() # 'dev'\n\nmyapp.settings() # { 'db' : 'some.server.com' }\n\nmyapp.paths('root') # /path/to/myapp\nmyapp.paths('settings') # /path/to/myapp/config/settings\nmyapp.paths('data') # /path/to/myapp/data\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/DataDaoDe/py-application_builder", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "application-builder", "package_url": "https://pypi.org/project/application-builder/", "platform": "", "project_url": "https://pypi.org/project/application-builder/", "project_urls": {"Homepage": "https://github.com/DataDaoDe/py-application_builder"}, "release_url": "https://pypi.org/project/application-builder/0.1.2/", "requires_dist": null, "requires_python": ">= 3.8", "summary": "manage application data and functionality in one place", "version": "0.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h2>Application Builder</h2>\n<p>The goal of application builder is to have a single object that connects <code>settings</code> and the current application <code>environment</code> in one place. This object can then be used throughout your python application,\nas a central spot for checking which environment the application is running under and for gettings settings accordingly.</p>\n<h2>Usage Example</h2>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">application_builder.application</span> <span class=\"kn\">import</span> <span class=\"n\">Application</span>\n\n<span class=\"c1\"># our settings class must support 2 functions `load()` and `settings()`.</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">MySettingsManager</span><span class=\"p\">:</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">app_root</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_env</span> <span class=\"o\">=</span> <span class=\"n\">env</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_root</span> <span class=\"o\">=</span> <span class=\"n\">app_root</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">load</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"c1\"># json/yaml/python files could be loaded here</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_data</span> <span class=\"o\">=</span> <span class=\"p\">{</span> \n            <span class=\"s1\">'test'</span> <span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'db'</span> <span class=\"p\">:</span> <span class=\"s1\">'localhost'</span> <span class=\"p\">},</span>\n            <span class=\"s1\">'dev'</span> <span class=\"p\">:</span> <span class=\"p\">{</span> <span class=\"s1\">'db'</span> <span class=\"p\">:</span> <span class=\"s1\">'some.server.com'</span> <span class=\"p\">}</span>\n        <span class=\"p\">}</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">settings</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_data</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">settings_init_fn</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">app_root</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">):</span>\n    <span class=\"n\">sm</span> <span class=\"o\">=</span> <span class=\"n\">MySettingsManager</span><span class=\"p\">(</span><span class=\"n\">env</span><span class=\"p\">,</span> <span class=\"n\">app_root</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">sm</span>\n\n<span class=\"c1\"># Let's assume MYAPP_ENV='dev'</span>\n\n<span class=\"n\">myapp</span> <span class=\"o\">=</span> <span class=\"n\">Application</span><span class=\"p\">(</span>\n    <span class=\"n\">name</span> <span class=\"o\">=</span> <span class=\"s1\">'myapp'</span><span class=\"p\">,</span>\n    <span class=\"n\">app_env_varname</span><span class=\"p\">:</span> <span class=\"s1\">'MYAPP_ENV'</span><span class=\"p\">,</span>\n    <span class=\"n\">app_root_dir</span><span class=\"p\">:</span> <span class=\"s1\">'/path/to/myapp'</span><span class=\"p\">,</span>\n\n    <span class=\"c1\"># sometimes you might need to do a lot more</span>\n    <span class=\"c1\"># than just instantiate a class, that's why you need to pass a function</span>\n    <span class=\"n\">settings_class_init_fn</span><span class=\"p\">:</span> <span class=\"n\">settings_init_fn</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">add_path</span><span class=\"p\">(</span><span class=\"s1\">'settings'</span><span class=\"p\">,</span> <span class=\"s1\">'config/settings'</span><span class=\"p\">)</span>\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">add_path</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"s1\">'data'</span><span class=\"p\">)</span>\n\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">boot</span><span class=\"p\">()</span>\n\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">current_environment</span><span class=\"p\">()</span> <span class=\"c1\"># 'dev'</span>\n\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">settings</span><span class=\"p\">()</span> <span class=\"c1\"># { 'db' : 'some.server.com' }</span>\n\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"p\">(</span><span class=\"s1\">'root'</span><span class=\"p\">)</span> <span class=\"c1\"># /path/to/myapp</span>\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"p\">(</span><span class=\"s1\">'settings'</span><span class=\"p\">)</span> <span class=\"c1\"># /path/to/myapp/config/settings</span>\n<span class=\"n\">myapp</span><span class=\"o\">.</span><span class=\"n\">paths</span><span class=\"p\">(</span><span class=\"s1\">'data'</span><span class=\"p\">)</span> <span class=\"c1\"># /path/to/myapp/data</span>\n</pre>\n\n          </div>"}, "last_serial": 6805948, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "7e00509df17af4fb76ceefc175177242", "sha256": "7efd11a72aeae39b65f27afc74df53ceea59a531253d451a7199d3e6b1dddc13"}, "downloads": -1, "filename": "application_builder-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7e00509df17af4fb76ceefc175177242", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.8", "size": 2234, "upload_time": "2020-03-03T12:07:47", "upload_time_iso_8601": "2020-03-03T12:07:47.639076Z", "url": "https://files.pythonhosted.org/packages/fb/75/c8ddad7a676f0bdfed14c3b058bf17e6a8f6d503084b4c10aa46aba7c7e4/application_builder-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "72e7988783460ad93819424c43848795", "sha256": "9e1c105d83decb21e9dfabc8b35a961dcdec1f84093242592a77cd8438797df7"}, "downloads": -1, "filename": "application_builder-0.1.1.tar.gz", "has_sig": false, "md5_digest": "72e7988783460ad93819424c43848795", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.8", "size": 3043, "upload_time": "2020-03-09T09:56:58", "upload_time_iso_8601": "2020-03-09T09:56:58.819604Z", "url": "https://files.pythonhosted.org/packages/78/2e/79be478a111e776d32e1d5b46d1d8f2c355cbcbfb724030046c9e4ba0fdc/application_builder-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "b52ac717178f1c59adbc664af9859542", "sha256": "d11a06ac0a2ed38be3f3eb2660869e391c1a8d9c451ed68f4030ade0153889f3"}, "downloads": -1, "filename": "application_builder-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b52ac717178f1c59adbc664af9859542", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.8", "size": 3087, "upload_time": "2020-03-13T13:19:51", "upload_time_iso_8601": "2020-03-13T13:19:51.842336Z", "url": "https://files.pythonhosted.org/packages/99/89/efcc5c7d179b83fd30e92cec63f4b6c0d20690e41e0d6251282f2be8bdee/application_builder-0.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b52ac717178f1c59adbc664af9859542", "sha256": "d11a06ac0a2ed38be3f3eb2660869e391c1a8d9c451ed68f4030ade0153889f3"}, "downloads": -1, "filename": "application_builder-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b52ac717178f1c59adbc664af9859542", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.8", "size": 3087, "upload_time": "2020-03-13T13:19:51", "upload_time_iso_8601": "2020-03-13T13:19:51.842336Z", "url": "https://files.pythonhosted.org/packages/99/89/efcc5c7d179b83fd30e92cec63f4b6c0d20690e41e0d6251282f2be8bdee/application_builder-0.1.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:17:37 2020"}