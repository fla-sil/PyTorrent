{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: Apache Software License", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# ESPnet TTS Frontend\n![CI](https://github.com/espnet/espnet_tts_frontend/workflows/CI/badge.svg)\n\nA tools collection of text frontend for [ESPnet](https://github.com/espnet/espnet) tts recipes. \n\n## Install\n```bash\npip install espnet_tts_frontend\n```\n\n### Install with pyopenjtalk\n\n- Requires cmake and cython\n\n```bash\ngit clone https://github.com/espnet/espnet_tts_frontend\ncd espnet_tts_frontend/\npython setup.py pyopenjtalk\n# OR\n# pip install --global-option=pyopenjtalk -e espnet_tts_frontend\n```\n\nFIXME(kamo):  Support direct installation from git repo.\n\n## Usage\n\n### English:\n#### tacotron_cleaner\nDerived from https://github.com/keithito/tacotron\n\n```python\n>>> import tacotron_cleaner.cleaners\n>>> tacotron_cleaner.cleaners.custom_english_cleaners(\"(Hello-World);   &  jr. & dr.\")\n'HELLO WORLD, AND JUNIOR AND DOCTOR'\n```\n#### g2p_en\nhttps://github.com/Kyubyong/g2p\n\n```python\n>>> from g2p_en import G2p  # Automatically run downloading for the first time\n[nltk_data] Downloading package averaged_perceptron_tagger to\n...\n>>> g2p = G2p()\n>>> g2p(\"hello world\")\n['HH', 'AH0', 'L', 'OW1', ' ', 'W', 'ER1', 'L', 'D']\n```\n\n### Japanese\n#### jaconv\nhttps://github.com/ikegami-yukino/jaconv/\n\n```python\n>>> jaconv.normalize(\"\u201d\u3042\u3089\u3086\u308b\u201d\u3000\u73fe\u5b9f\u3092\u3000\u301c\u3000\u2019\u3059\u3079\u3066\u2019 \u81ea\u5206\u306e\u3000\u307b\u3046\u3078\u3000\u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002\")\n'\"\u3042\u3089\u3086\u308b\" \u73fe\u5b9f\u3092 \u30fc \\'\u3059\u3079\u3066\\' \u81ea\u5206\u306e \u307b\u3046\u3078 \u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002'\n```\n\n#### pyopenjtalk\nhttps://github.com/r9y9/pyopenjtalk\n\n```python\n# Automatically run downloading for the first time\n>>> pyopenjtalk.g2p(\"\u3042\u3089\u3086\u308b \u73fe\u5b9f\u3092 \u3059\u3079\u3066 \u81ea\u5206\u306e \u307b\u3046\u3078 \u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002\", kana=True)\n'\u30a2\u30e9\u30e6\u30eb\\u3000\u30b2\u30f3\u30b8\u30c4\u30f2\\u3000\u30b9\u30d9\u30c6\\u3000\u30b8\u30d6\u30f3\u30ce\\u3000\u30db\u30fc\u30a8\\u3000\u30cd\u30b8\u30de\u30b2\u30bf\u30ce\u30c0\u3002'\n>>> pyopenjtalk.g2p(\"\u3042\u3089\u3086\u308b \u73fe\u5b9f\u3092 \u3059\u3079\u3066 \u81ea\u5206\u306e \u307b\u3046\u3078 \u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002\", kana=False)\n'a r a y u r u pau g e N j i ts u o pau s u b e t e pau j i b u N n o pau h o o e pau n e j i m a g e t a n o d a'\n```\n\n### Vietnamese\n#### vietnamese_cleaner\n\n```python\n>>> import vietnamese_cleaner.vietnamese_cleaner\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/espnet/espnet_tts_frontend", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "espnet-tts-frontend", "package_url": "https://pypi.org/project/espnet-tts-frontend/", "platform": "", "project_url": "https://pypi.org/project/espnet-tts-frontend/", "project_urls": {"Homepage": "http://github.com/espnet/espnet_tts_frontend"}, "release_url": "https://pypi.org/project/espnet-tts-frontend/0.0.1/", "requires_dist": ["unidecode (>=1.0.22)", "inflect (>=1.0.0)", "underthesea", "jaconv", "g2p-en"], "requires_python": "", "summary": "", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>ESPnet TTS Frontend</h1>\n<p><img alt=\"CI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8a2a51ad215dec048d5acd69693abf03cb2ec8e3/68747470733a2f2f6769746875622e636f6d2f6573706e65742f6573706e65745f7474735f66726f6e74656e642f776f726b666c6f77732f43492f62616467652e737667\"></p>\n<p>A tools collection of text frontend for <a href=\"https://github.com/espnet/espnet\" rel=\"nofollow\">ESPnet</a> tts recipes.</p>\n<h2>Install</h2>\n<pre>pip install espnet_tts_frontend\n</pre>\n<h3>Install with pyopenjtalk</h3>\n<ul>\n<li>Requires cmake and cython</li>\n</ul>\n<pre>git clone https://github.com/espnet/espnet_tts_frontend\n<span class=\"nb\">cd</span> espnet_tts_frontend/\npython setup.py pyopenjtalk\n<span class=\"c1\"># OR</span>\n<span class=\"c1\"># pip install --global-option=pyopenjtalk -e espnet_tts_frontend</span>\n</pre>\n<p>FIXME(kamo):  Support direct installation from git repo.</p>\n<h2>Usage</h2>\n<h3>English:</h3>\n<h4>tacotron_cleaner</h4>\n<p>Derived from <a href=\"https://github.com/keithito/tacotron\" rel=\"nofollow\">https://github.com/keithito/tacotron</a></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">tacotron_cleaner.cleaners</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tacotron_cleaner</span><span class=\"o\">.</span><span class=\"n\">cleaners</span><span class=\"o\">.</span><span class=\"n\">custom_english_cleaners</span><span class=\"p\">(</span><span class=\"s2\">\"(Hello-World);   &amp;  jr. &amp; dr.\"</span><span class=\"p\">)</span>\n<span class=\"s1\">'HELLO WORLD, AND JUNIOR AND DOCTOR'</span>\n</pre>\n<h4>g2p_en</h4>\n<p><a href=\"https://github.com/Kyubyong/g2p\" rel=\"nofollow\">https://github.com/Kyubyong/g2p</a></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">g2p_en</span> <span class=\"kn\">import</span> <span class=\"n\">G2p</span>  <span class=\"c1\"># Automatically run downloading for the first time</span>\n<span class=\"p\">[</span><span class=\"n\">nltk_data</span><span class=\"p\">]</span> <span class=\"n\">Downloading</span> <span class=\"n\">package</span> <span class=\"n\">averaged_perceptron_tagger</span> <span class=\"n\">to</span>\n<span class=\"o\">...</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g2p</span> <span class=\"o\">=</span> <span class=\"n\">G2p</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">g2p</span><span class=\"p\">(</span><span class=\"s2\">\"hello world\"</span><span class=\"p\">)</span>\n<span class=\"p\">[</span><span class=\"s1\">'HH'</span><span class=\"p\">,</span> <span class=\"s1\">'AH0'</span><span class=\"p\">,</span> <span class=\"s1\">'L'</span><span class=\"p\">,</span> <span class=\"s1\">'OW1'</span><span class=\"p\">,</span> <span class=\"s1\">' '</span><span class=\"p\">,</span> <span class=\"s1\">'W'</span><span class=\"p\">,</span> <span class=\"s1\">'ER1'</span><span class=\"p\">,</span> <span class=\"s1\">'L'</span><span class=\"p\">,</span> <span class=\"s1\">'D'</span><span class=\"p\">]</span>\n</pre>\n<h3>Japanese</h3>\n<h4>jaconv</h4>\n<p><a href=\"https://github.com/ikegami-yukino/jaconv/\" rel=\"nofollow\">https://github.com/ikegami-yukino/jaconv/</a></p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">jaconv</span><span class=\"o\">.</span><span class=\"n\">normalize</span><span class=\"p\">(</span><span class=\"s2\">\"\u201d\u3042\u3089\u3086\u308b\u201d\u3000\u73fe\u5b9f\u3092\u3000\u301c\u3000\u2019\u3059\u3079\u3066\u2019 \u81ea\u5206\u306e\u3000\u307b\u3046\u3078\u3000\u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002\"</span><span class=\"p\">)</span>\n<span class=\"s1\">'\"\u3042\u3089\u3086\u308b\" \u73fe\u5b9f\u3092 \u30fc </span><span class=\"se\">\\'</span><span class=\"s1\">\u3059\u3079\u3066</span><span class=\"se\">\\'</span><span class=\"s1\"> \u81ea\u5206\u306e \u307b\u3046\u3078 \u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002'</span>\n</pre>\n<h4>pyopenjtalk</h4>\n<p><a href=\"https://github.com/r9y9/pyopenjtalk\" rel=\"nofollow\">https://github.com/r9y9/pyopenjtalk</a></p>\n<pre><span class=\"c1\"># Automatically run downloading for the first time</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pyopenjtalk</span><span class=\"o\">.</span><span class=\"n\">g2p</span><span class=\"p\">(</span><span class=\"s2\">\"\u3042\u3089\u3086\u308b \u73fe\u5b9f\u3092 \u3059\u3079\u3066 \u81ea\u5206\u306e \u307b\u3046\u3078 \u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002\"</span><span class=\"p\">,</span> <span class=\"n\">kana</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"s1\">'\u30a2\u30e9\u30e6\u30eb</span><span class=\"se\">\\u3000</span><span class=\"s1\">\u30b2\u30f3\u30b8\u30c4\u30f2</span><span class=\"se\">\\u3000</span><span class=\"s1\">\u30b9\u30d9\u30c6</span><span class=\"se\">\\u3000</span><span class=\"s1\">\u30b8\u30d6\u30f3\u30ce</span><span class=\"se\">\\u3000</span><span class=\"s1\">\u30db\u30fc\u30a8</span><span class=\"se\">\\u3000</span><span class=\"s1\">\u30cd\u30b8\u30de\u30b2\u30bf\u30ce\u30c0\u3002'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">pyopenjtalk</span><span class=\"o\">.</span><span class=\"n\">g2p</span><span class=\"p\">(</span><span class=\"s2\">\"\u3042\u3089\u3086\u308b \u73fe\u5b9f\u3092 \u3059\u3079\u3066 \u81ea\u5206\u306e \u307b\u3046\u3078 \u306d\u3058\u66f2\u3052\u305f\u306e\u3060\u3002\"</span><span class=\"p\">,</span> <span class=\"n\">kana</span><span class=\"o\">=</span><span class=\"kc\">False</span><span class=\"p\">)</span>\n<span class=\"s1\">'a r a y u r u pau g e N j i ts u o pau s u b e t e pau j i b u N n o pau h o o e pau n e j i m a g e t a n o d a'</span>\n</pre>\n<h3>Vietnamese</h3>\n<h4>vietnamese_cleaner</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">vietnamese_cleaner.vietnamese_cleaner</span>\n</pre>\n\n          </div>"}, "last_serial": 7153886, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "f40db64d84b6cd033c652c7514290f8b", "sha256": "a6d2b39bf992508e6e4234d42f3464e08c5b81d78a9046678f634035e5180969"}, "downloads": -1, "filename": "espnet_tts_frontend-0.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "f40db64d84b6cd033c652c7514290f8b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11536, "upload_time": "2020-05-02T09:05:41", "upload_time_iso_8601": "2020-05-02T09:05:41.689685Z", "url": "https://files.pythonhosted.org/packages/36/cc/a9d4115a7f93ebe65217508eb5d3ea71124822addb8dd2cfb8a168f90f54/espnet_tts_frontend-0.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a60f14bbaf24f71058b5928e1d1f7d9", "sha256": "6367086d25a8e9ac4573b41a3b83534e3f6451d46e2e661c2370891ed6ff6b0e"}, "downloads": -1, "filename": "espnet_tts_frontend-0.0.0.tar.gz", "has_sig": false, "md5_digest": "2a60f14bbaf24f71058b5928e1d1f7d9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9877, "upload_time": "2020-05-02T09:05:44", "upload_time_iso_8601": "2020-05-02T09:05:44.118781Z", "url": "https://files.pythonhosted.org/packages/da/35/cda9c2db94ebd2b4e24cce22c7e825be60301b668c8782557b4cf62c6619/espnet_tts_frontend-0.0.0.tar.gz", "yanked": false}], "0.0.1": [{"comment_text": "", "digests": {"md5": "c8e380f75dbb55e89e0e011535d378eb", "sha256": "920a147d3a3b4f80d74a088d3c00585687343716a811ed78cc3ea9b8d72c80af"}, "downloads": -1, "filename": "espnet_tts_frontend-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8e380f75dbb55e89e0e011535d378eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11535, "upload_time": "2020-05-02T09:17:05", "upload_time_iso_8601": "2020-05-02T09:17:05.156446Z", "url": "https://files.pythonhosted.org/packages/78/62/70a78120e5a2046071f63715b219bb0b5a7e2bc9483bf3c51941c199f9a8/espnet_tts_frontend-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97384adf1c1df1549a8432e2ab9d8878", "sha256": "3e0df9a895b7f751379a860a8d0688677b1d0f014abe0f553570abe6a565f295"}, "downloads": -1, "filename": "espnet_tts_frontend-0.0.1.tar.gz", "has_sig": false, "md5_digest": "97384adf1c1df1549a8432e2ab9d8878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10325, "upload_time": "2020-05-02T09:17:06", "upload_time_iso_8601": "2020-05-02T09:17:06.129897Z", "url": "https://files.pythonhosted.org/packages/3e/ac/8414b94ffea6d216fa1fe5a4a928ba3eee04202476ec8d74a5065ff35aed/espnet_tts_frontend-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c8e380f75dbb55e89e0e011535d378eb", "sha256": "920a147d3a3b4f80d74a088d3c00585687343716a811ed78cc3ea9b8d72c80af"}, "downloads": -1, "filename": "espnet_tts_frontend-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "c8e380f75dbb55e89e0e011535d378eb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11535, "upload_time": "2020-05-02T09:17:05", "upload_time_iso_8601": "2020-05-02T09:17:05.156446Z", "url": "https://files.pythonhosted.org/packages/78/62/70a78120e5a2046071f63715b219bb0b5a7e2bc9483bf3c51941c199f9a8/espnet_tts_frontend-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "97384adf1c1df1549a8432e2ab9d8878", "sha256": "3e0df9a895b7f751379a860a8d0688677b1d0f014abe0f553570abe6a565f295"}, "downloads": -1, "filename": "espnet_tts_frontend-0.0.1.tar.gz", "has_sig": false, "md5_digest": "97384adf1c1df1549a8432e2ab9d8878", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10325, "upload_time": "2020-05-02T09:17:06", "upload_time_iso_8601": "2020-05-02T09:17:06.129897Z", "url": "https://files.pythonhosted.org/packages/3e/ac/8414b94ffea6d216fa1fe5a4a928ba3eee04202476ec8d74a5065ff35aed/espnet_tts_frontend-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:45:37 2020"}