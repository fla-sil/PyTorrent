{"info": {"author": "Eron Hennessey", "author_email": "eron@abstrys.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "License :: OSI Approved :: BSD License", "Topic :: Utilities"], "description": "######\nsnipco\n######\n\nCopies the contents of a saved register, a file, or stdin to the clipboard, or\nmanipulates the registry.\n\nInstalling it\n=============\n\nTo install from pypi::\n\n    pip install snipco\n\nFrom source, there are two ways:\n\n* If you have ``make``, run::\n\n     make install\n\n* Otherwise, run::\n\n    ./setup.py install --user\n\n\nUsage\n=====\n\n::\n\n   snipco [-h] [-g [name_or_path]] [-s [name]] [-x [name]] [-l]\n          [-p [name]] [-f [path]] [-t [text]] [-v]\n\n\n::\n\n    snipco [-h] [-g [name_or_path]] [-s [name]] [-x [name]] [-l]\n           [-p [name]] [-f [path]] [-v]\n\n\nFor command-line help, just run::\n\n    snipco --help\n\n\nArguments\n---------\n\nAll arguments are optional; if no arguments are provided, then snipco will copy the contents of\nstdin to the clipboard. If --file or --text is the sole argument given, then the contents of the\nfile or quoted text, respectively, will be copied to the clipboard.\n\n+---------------------------+--------------------------------------------------------------------+\n| -h, --help                | show help and exit                                                 |\n+---------------------------+--------------------------------------------------------------------+\n| -g [name_or_path],        | Copy the contents of the saved register. The named                 |\n| --get [name_or_path]      | key must exist.                                                    |\n+---------------------------+--------------------------------------------------------------------+\n| -s [register_name],       | Save the input to a named register.                                |\n| --set [register_name]     | Uses stdin as input unless either --file or --text is              |\n|                           | specified.                                                         |\n+---------------------------+--------------------------------------------------------------------+\n| -f [path], --file [path]  | Specify a file to use instead of stdin for --set. If  no other     |\n|                           | arguments are supplied, copies the contents of the given file      |\n|                           | directly to the clipboard.                                         |\n+---------------------------+--------------------------------------------------------------------+\n| -t \"text to save\",        | Specify quote-delimited text on the command-line instead of stdin. |\n| --text \"text to save\"     | If no other arguments are supplied, copies the text directly to    |\n|                           | the clipboard.                                                     |\n+---------------------------+--------------------------------------------------------------------+\n| -l, --list                | List the existing registers                                        |\n+---------------------------+--------------------------------------------------------------------+\n| -p [name], --print [name] | Print the contents of the named register.  The registry key must   |\n|                           | exist.                                                             |\n+---------------------------+--------------------------------------------------------------------+\n| -x [register_name],       | Unset the named register.                                          |\n| --unset [register_name]   |                                                                    |\n+---------------------------+--------------------------------------------------------------------+\n| -v, --version             | show program's version number and exit                             |\n+---------------------------+--------------------------------------------------------------------+\n\nExamples\n--------\n\nSave text from a file dirctly to the clipboard::\n\n    snipco --file path/to/file.txt\n\nor::\n\n    cat path/to/file.txt | snipco\n\nSave text to a named register::\n\n    snipco --set myregister --text \"Hello, world!\"\n\nCopy text from the register to the clipboard::\n\n    snipco --get myregister\n\nPrint text in the register to stdout::\n\n    snipco --print myregister\n\nUnset the register::\n\n    snipco --unset myregister\n\nList the registers you've saved::\n\n    snipco --list", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Abstrys/snipco/", "keywords": "clipboard snip", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "snipco", "package_url": "https://pypi.org/project/snipco/", "platform": "", "project_url": "https://pypi.org/project/snipco/", "project_urls": {"Homepage": "https://github.com/Abstrys/snipco/"}, "release_url": "https://pypi.org/project/snipco/0.2.1/", "requires_dist": null, "requires_python": "", "summary": "A command-line clipboard utility and snippet catalog", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Copies the contents of a saved register, a file, or stdin to the clipboard, or\nmanipulates the registry.</p>\n<div id=\"installing-it\">\n<h2>Installing it</h2>\n<p>To install from pypi:</p>\n<pre>pip install snipco\n</pre>\n<p>From source, there are two ways:</p>\n<ul>\n<li><p>If you have <tt>make</tt>, run:</p>\n<pre>make install\n</pre>\n</li>\n<li><p>Otherwise, run:</p>\n<pre>./setup.py install --user\n</pre>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>snipco [-h] [-g [name_or_path]] [-s [name]] [-x [name]] [-l]\n       [-p [name]] [-f [path]] [-t [text]] [-v]\n</pre>\n<pre>snipco [-h] [-g [name_or_path]] [-s [name]] [-x [name]] [-l]\n       [-p [name]] [-f [path]] [-v]\n</pre>\n<p>For command-line help, just run:</p>\n<pre>snipco --help\n</pre>\n<div id=\"arguments\">\n<h3>Arguments</h3>\n<p>All arguments are optional; if no arguments are provided, then snipco will copy the contents of\nstdin to the clipboard. If \u2013file or \u2013text is the sole argument given, then the contents of the\nfile or quoted text, respectively, will be copied to the clipboard.</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<tbody>\n<tr><td>-h, \u2013help</td>\n<td>show help and exit</td>\n</tr>\n<tr><td>-g [name_or_path],\n\u2013get [name_or_path]</td>\n<td>Copy the contents of the saved register. The named\nkey must exist.</td>\n</tr>\n<tr><td>-s [register_name],\n\u2013set [register_name]</td>\n<td>Save the input to a named register.\nUses stdin as input unless either \u2013file or \u2013text is\nspecified.</td>\n</tr>\n<tr><td>-f [path], \u2013file [path]</td>\n<td>Specify a file to use instead of stdin for \u2013set. If  no other\narguments are supplied, copies the contents of the given file\ndirectly to the clipboard.</td>\n</tr>\n<tr><td>-t \u201ctext to save\u201d,\n\u2013text \u201ctext to save\u201d</td>\n<td>Specify quote-delimited text on the command-line instead of stdin.\nIf no other arguments are supplied, copies the text directly to\nthe clipboard.</td>\n</tr>\n<tr><td>-l, \u2013list</td>\n<td>List the existing registers</td>\n</tr>\n<tr><td>-p [name], \u2013print [name]</td>\n<td>Print the contents of the named register.  The registry key must\nexist.</td>\n</tr>\n<tr><td>-x [register_name],\n\u2013unset [register_name]</td>\n<td>Unset the named register.</td>\n</tr>\n<tr><td>-v, \u2013version</td>\n<td>show program\u2019s version number and exit</td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"examples\">\n<h3>Examples</h3>\n<p>Save text from a file dirctly to the clipboard:</p>\n<pre>snipco --file path/to/file.txt\n</pre>\n<p>or:</p>\n<pre>cat path/to/file.txt | snipco\n</pre>\n<p>Save text to a named register:</p>\n<pre>snipco --set myregister --text \"Hello, world!\"\n</pre>\n<p>Copy text from the register to the clipboard:</p>\n<pre>snipco --get myregister\n</pre>\n<p>Print text in the register to stdout:</p>\n<pre>snipco --print myregister\n</pre>\n<p>Unset the register:</p>\n<pre>snipco --unset myregister\n</pre>\n<p>List the registers you\u2019ve saved:</p>\n<pre>snipco --list\n</pre>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6304985, "releases": {"0.1a0": [{"comment_text": "", "digests": {"md5": "b6c35fe4d10d43ab112d2dd53ad1d957", "sha256": "4898aa9c7c00dc525d875c4ace8e7c36fccaf7a15a7130af309d8e42197e1664"}, "downloads": -1, "filename": "snipco-0.1a0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "b6c35fe4d10d43ab112d2dd53ad1d957", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3697, "upload_time": "2019-12-14T20:30:50", "upload_time_iso_8601": "2019-12-14T20:30:50.517636Z", "url": "https://files.pythonhosted.org/packages/03/46/2c552fe3343a705e6f2d88fae1f54d664ac45588e57742cadfb5520d6374/snipco-0.1a0.linux-x86_64.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "4899f68e68c386c128415780091d2c2c", "sha256": "87dad087a2e072ab483c22ab406ca25f798c0c661a86f67e1ec9a26f5e6c4557"}, "downloads": -1, "filename": "snipco-0.2.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "4899f68e68c386c128415780091d2c2c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3696, "upload_time": "2019-12-14T20:32:34", "upload_time_iso_8601": "2019-12-14T20:32:34.989201Z", "url": "https://files.pythonhosted.org/packages/66/43/bd6a173a0cccb2655d0fd508403896adc71f45f19e1d43f2102b57f9a2bc/snipco-0.2.linux-x86_64.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5410d25a13418b9e65d835124591cd4b", "sha256": "8fcb7b4672abdafb06a9da0085faf8fcc56de6803069c91527fd319086a114a7"}, "downloads": -1, "filename": "snipco-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5410d25a13418b9e65d835124591cd4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4094, "upload_time": "2019-12-14T23:32:47", "upload_time_iso_8601": "2019-12-14T23:32:47.643830Z", "url": "https://files.pythonhosted.org/packages/dc/9e/1740de2215e3061ea258886cfafe05d8b47a72ab8e3cfe42e4d93328e85c/snipco-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5410d25a13418b9e65d835124591cd4b", "sha256": "8fcb7b4672abdafb06a9da0085faf8fcc56de6803069c91527fd319086a114a7"}, "downloads": -1, "filename": "snipco-0.2.1.tar.gz", "has_sig": false, "md5_digest": "5410d25a13418b9e65d835124591cd4b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4094, "upload_time": "2019-12-14T23:32:47", "upload_time_iso_8601": "2019-12-14T23:32:47.643830Z", "url": "https://files.pythonhosted.org/packages/dc/9e/1740de2215e3061ea258886cfafe05d8b47a72ab8e3cfe42e4d93328e85c/snipco-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:07:28 2020"}