{"info": {"author": "naonder", "author_email": "nate.a.onder@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "CiscoConfBot\n=============\n\n\nCiscoConfBot is a Webex Teams bot written in Python3.\n\nSource Code\n-----------\n\nhttps://github.com/naonder/CiscoConfBot\n\nPyPI package\n------------\n\nhttps://pypi.org/project/ciscoconfbot/\n\nSetup\n-------------\n\n  pip install ciscoconfbot\n\nCreate bot at:\n    https://developer.webex.com/my-apps/new/bot\n\nSetup webhook via Webex Teams API or at:\n    https://developer.webex.com/docs/api/v1/webhooks/create-a-webhook\n\n| See sample creds and configuration files prior to starting bot.\n| Create 3 directories where the bot will store various configurations and/or device files.\n| Note that config and creds files need to be structured like the examples show.\n| Also, see sample .yml file for correct formatting\n\n    mkdir /path/to/dir\n\nRunning\n-------\n\nRun with\n\n    python -m ciscoconfbot path/to/config/file.ini\n\n\n| Alternatively, you can setup a system service to start on reboot/reload.\n| See example service file for a quick idea.\n| Once configured, you can enable it once with:\n\n    systemctl start nameofservice.service\n\n\n| Or you can enable the service to start after the server/device has been reloaded\n\n    systemctl enable nameofservice.service\n\nOperation\n---------\n\nOnce bot has been configured, add the bot to a space and invoke:\n\n    @nameofbot\n\nOperations are as follow:\n\n    | @nameofbot /serial ipaddressofdevice (returns serial number of device)\n    | @nameofbot /upload (requires zip folder of device configs in hostname.txt format)\n    | @nameofbot /config (requires .yml file of hostnames and serial numbers)\n\nAuthor\n------\n\nnaonder - nate.a.onder@gmail.com", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ciscoconfbot", "package_url": "https://pypi.org/project/ciscoconfbot/", "platform": "", "project_url": "https://pypi.org/project/ciscoconfbot/", "project_urls": null, "release_url": "https://pypi.org/project/ciscoconfbot/1.0.14/", "requires_dist": null, "requires_python": "", "summary": "Webex Teams bot for configuring Cisco devices", "version": "1.0.14", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>CiscoConfBot is a Webex Teams bot written in Python3.</p>\n<div id=\"source-code\">\n<h2>Source Code</h2>\n<p><a href=\"https://github.com/naonder/CiscoConfBot\" rel=\"nofollow\">https://github.com/naonder/CiscoConfBot</a></p>\n</div>\n<div id=\"pypi-package\">\n<h2>PyPI package</h2>\n<p><a href=\"https://pypi.org/project/ciscoconfbot/\" rel=\"nofollow\">https://pypi.org/project/ciscoconfbot/</a></p>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<blockquote>\npip install ciscoconfbot</blockquote>\n<dl>\n<dt>Create bot at:</dt>\n<dd><a href=\"https://developer.webex.com/my-apps/new/bot\" rel=\"nofollow\">https://developer.webex.com/my-apps/new/bot</a></dd>\n<dt>Setup webhook via Webex Teams API or at:</dt>\n<dd><a href=\"https://developer.webex.com/docs/api/v1/webhooks/create-a-webhook\" rel=\"nofollow\">https://developer.webex.com/docs/api/v1/webhooks/create-a-webhook</a></dd>\n</dl>\n<div>\n<div>See sample creds and configuration files prior to starting bot.</div>\n<div>Create 3 directories where the bot will store various configurations and/or device files.</div>\n<div>Note that config and creds files need to be structured like the examples show.</div>\n<div>Also, see sample .yml file for correct formatting</div>\n</div>\n<blockquote>\nmkdir /path/to/dir</blockquote>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>Run with</p>\n<blockquote>\npython -m ciscoconfbot path/to/config/file.ini</blockquote>\n<div>\n<div>Alternatively, you can setup a system service to start on reboot/reload.</div>\n<div>See example service file for a quick idea.</div>\n<div>Once configured, you can enable it once with:</div>\n</div>\n<blockquote>\nsystemctl start nameofservice.service</blockquote>\n<div>\n<div>Or you can enable the service to start after the server/device has been reloaded</div>\n</div>\n<blockquote>\nsystemctl enable nameofservice.service</blockquote>\n</div>\n<div id=\"operation\">\n<h2>Operation</h2>\n<p>Once bot has been configured, add the bot to a space and invoke:</p>\n<blockquote>\n@nameofbot</blockquote>\n<p>Operations are as follow:</p>\n<blockquote>\n<div>\n<div>@nameofbot /serial ipaddressofdevice (returns serial number of device)</div>\n<div>@nameofbot /upload (requires zip folder of device configs in hostname.txt format)</div>\n<div>@nameofbot /config (requires .yml file of hostnames and serial numbers)</div>\n</div>\n</blockquote>\n</div>\n<div id=\"author\">\n<h2>Author</h2>\n<p>naonder - <a href=\"mailto:nate.a.onder%40gmail.com\">nate<span>.</span>a<span>.</span>onder<span>@</span>gmail<span>.</span>com</a></p>\n</div>\n\n          </div>"}, "last_serial": 5367059, "releases": {"1.0.13": [{"comment_text": "", "digests": {"md5": "2ba7709475fa8ffec0eb15d935d8a415", "sha256": "ecb653036d2fd6dec9cf7bdeb667ffd021e62f4db84db6a829a9d43ce864a8c0"}, "downloads": -1, "filename": "ciscoconfbot-1.0.13.tar.gz", "has_sig": false, "md5_digest": "2ba7709475fa8ffec0eb15d935d8a415", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5758, "upload_time": "2019-06-05T21:12:26", "upload_time_iso_8601": "2019-06-05T21:12:26.339176Z", "url": "https://files.pythonhosted.org/packages/4e/5d/a9bf7b5b3327ba342fd57ca38846479b092d604addd95159dec04ce51f3a/ciscoconfbot-1.0.13.tar.gz", "yanked": false}], "1.0.14": [{"comment_text": "", "digests": {"md5": "049199096224d14ff811f1f8a8814738", "sha256": "b0cadd2b1445f3ab0944c2deb7d9c0c77b50322dcf58d2fefd1d5d472352e914"}, "downloads": -1, "filename": "ciscoconfbot-1.0.14.tar.gz", "has_sig": false, "md5_digest": "049199096224d14ff811f1f8a8814738", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5988, "upload_time": "2019-06-06T13:05:27", "upload_time_iso_8601": "2019-06-06T13:05:27.704496Z", "url": "https://files.pythonhosted.org/packages/d1/bc/8a2eb53314903903b411662972d668c6d06bfa0380ed84b46370ff3dfe82/ciscoconfbot-1.0.14.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "049199096224d14ff811f1f8a8814738", "sha256": "b0cadd2b1445f3ab0944c2deb7d9c0c77b50322dcf58d2fefd1d5d472352e914"}, "downloads": -1, "filename": "ciscoconfbot-1.0.14.tar.gz", "has_sig": false, "md5_digest": "049199096224d14ff811f1f8a8814738", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5988, "upload_time": "2019-06-06T13:05:27", "upload_time_iso_8601": "2019-06-06T13:05:27.704496Z", "url": "https://files.pythonhosted.org/packages/d1/bc/8a2eb53314903903b411662972d668c6d06bfa0380ed84b46370ff3dfe82/ciscoconfbot-1.0.14.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:19:18 2020"}