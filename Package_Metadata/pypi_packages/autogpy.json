{"info": {"author": "Alessandro Corbetta", "author_email": "a.corbetta@tue.nl", "bugtrack_url": null, "classifiers": [], "description": "<h1>autogpy - AutoGnuplot.py</h1>\n\n<h2>Automatic generation of gnuplot figures/scripts/data from python.</h2>\n\n\n**Author:** [Alessandro Corbetta](http://corbetta.phys.tue.nl/), 2019  \n**Documentation:** https://acorbe.github.io/autogpy/  \n\n![build status](https://travis-ci.org/acorbe/autogpy.svg?branch=master)\n\n\n### Which problem does it solve?\n\n`autogpy` eliminates annoying duplications of code/data when doing data analytics in python and publication figures in gnuplot. Using a syntax close to gnuplot, it automatically generates gnuplot scripts and dumps suitably the data.  \n\nIn the scientific community, [gnuplot](http://www.gnuplot.info/) is a gold standard for publication-quality plots. Python is quickly becoming a tool of choice for data analytics. While it comes with several options for plotting, often gnuplot is preferred in production.\n\n\n### Features\n+ anything that be obtained by the gnuplot command `plot` can be produced\n+ any gnuplot state modification can be achieved\n+ multiplots\n+ `plt.hist`-like gnuplot histogram figures generator\n+ jupyter notebook figure preview\n+ jupyter notebook gnuplot script inspection\n+ gnuplot terminals epslatex, tikz/pgfplot and jpg\n+ output figures are shipped in a folder that includes scripts, data and makefile\n+ easy scp-based synchronization between a machine in which the figures are generated (e.g. from even larger datasets) and the \"paper writing\" machine.\n\n**Works on**\n+ Linux/MacOs\n+ Python 3\n\n**KWONW ISSUES**\n+ Certain features require imagemagick and a working `gnuplot-tikz.lua`. Some versions of these might have bugs. Do `figure.display_fixes()` to show known fixes.\n\n\n\n## In a nutshell\n\n### Getting autogpy\n\nFrom `pip`\n\n```bash\npip install autogpy\n\n```\n\nFrom source\n\n```bash\ngit clone git@github.com:acorbe/autogpy.git\npip install ./autogpy\n```\n\n### Usage\n\n```python\nimport autogpy\nimport numpy as np\n\nxx = np.linspace(0,6,100)\nyy = np.sin(xx)\nzz = np.cos(xx)\n\nfigure = autogpy.AutogpyFigure(\"test_figure\",\"test1\")\n\nfigure.p_generic(r'u 1:2 with lines t \"sin\"',xx,yy)\nfigure.p_generic(r'u 1:2 with lines t \"cos\"',xx,zz)\nfigure.generate_gnuplot_file()\n\nfigure.jupyter_show_pdflatex() # only in jupyter\n\n```\n\n\nwill generate the following figure (also appearing in jupyter)\n\n<img src=\"https://github.com/acorbe/autogpy/raw/master/example_fig.jpeg\" alt=\"example figure\" width=\"500px\" >\n\n\n**Most importantly**, the following source and data will be created in the folder `test_figure` \n\n```bash\n$ ls test_figure\n\nMakefile\nsync_me.sh\ntest1__0__.dat\ntest1__1__.dat\ntest1__.core.gnu\ntest1__.jpg.gnu\ntest1__.pdflatex_compile.sh\ntest1__.pdflatex.gnu\ntest1__.tikz_compile.sh\ntest1__.tikz.gnu\n```\n\nWith `make` one can obtain jpg, epslatex, and tikz/pgfplot versions of the figure.\nNotice that the input data has been formatted automatically.\n\nInspecting `test1__.pdflatex.gnu`, responsible of the epslatex version of the figure, one gets:\n```gnuplot\nset terminal epslatex size 9.9cm,8.cm color colortext standalone      'phv,12 '  linewidth 2\nset output 'fig.latex.nice/plot_out.tex'\n\nload \"test1__.core.gnu\"; \n```\nwhile `test1__.core.gnu` reads:\n```gnuplot\np \"test1__0__.dat\" u 1:2 with lines t \"sin\",\\\n\"test1__1__.dat\" u 1:2 with lines t \"cos\"\n\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/acorbe/autogpy", "keywords": "", "license": "new BSD", "maintainer": "", "maintainer_email": "", "name": "autogpy", "package_url": "https://pypi.org/project/autogpy/", "platform": "", "project_url": "https://pypi.org/project/autogpy/", "project_urls": {"Homepage": "https://github.com/acorbe/autogpy"}, "release_url": "https://pypi.org/project/autogpy/0.1.4/", "requires_dist": null, "requires_python": "", "summary": "autogpy: AutoGnuplot.py - automatic generation of gnuplot figures (including script and data) from python", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>autogpy - AutoGnuplot.py</h1>\n<h2>Automatic generation of gnuplot figures/scripts/data from python.</h2>\n<p><strong>Author:</strong> <a href=\"http://corbetta.phys.tue.nl/\" rel=\"nofollow\">Alessandro Corbetta</a>, 2019<br>\n<strong>Documentation:</strong> <a href=\"https://acorbe.github.io/autogpy/\" rel=\"nofollow\">https://acorbe.github.io/autogpy/</a></p>\n<p><img alt=\"build status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02ed5adc1614d8284c195141c120257d206bc5e9/68747470733a2f2f7472617669732d63692e6f72672f61636f7262652f6175746f6770792e7376673f6272616e63683d6d6173746572\"></p>\n<h3>Which problem does it solve?</h3>\n<p><code>autogpy</code> eliminates annoying duplications of code/data when doing data analytics in python and publication figures in gnuplot. Using a syntax close to gnuplot, it automatically generates gnuplot scripts and dumps suitably the data.</p>\n<p>In the scientific community, <a href=\"http://www.gnuplot.info/\" rel=\"nofollow\">gnuplot</a> is a gold standard for publication-quality plots. Python is quickly becoming a tool of choice for data analytics. While it comes with several options for plotting, often gnuplot is preferred in production.</p>\n<h3>Features</h3>\n<ul>\n<li>anything that be obtained by the gnuplot command <code>plot</code> can be produced</li>\n<li>any gnuplot state modification can be achieved</li>\n<li>multiplots</li>\n<li><code>plt.hist</code>-like gnuplot histogram figures generator</li>\n<li>jupyter notebook figure preview</li>\n<li>jupyter notebook gnuplot script inspection</li>\n<li>gnuplot terminals epslatex, tikz/pgfplot and jpg</li>\n<li>output figures are shipped in a folder that includes scripts, data and makefile</li>\n<li>easy scp-based synchronization between a machine in which the figures are generated (e.g. from even larger datasets) and the \"paper writing\" machine.</li>\n</ul>\n<p><strong>Works on</strong></p>\n<ul>\n<li>Linux/MacOs</li>\n<li>Python 3</li>\n</ul>\n<p><strong>KWONW ISSUES</strong></p>\n<ul>\n<li>Certain features require imagemagick and a working <code>gnuplot-tikz.lua</code>. Some versions of these might have bugs. Do <code>figure.display_fixes()</code> to show known fixes.</li>\n</ul>\n<h2>In a nutshell</h2>\n<h3>Getting autogpy</h3>\n<p>From <code>pip</code></p>\n<pre>pip install autogpy\n</pre>\n<p>From source</p>\n<pre>git clone git@github.com:acorbe/autogpy.git\npip install ./autogpy\n</pre>\n<h3>Usage</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">autogpy</span>\n<span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n\n<span class=\"n\">xx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">,</span><span class=\"mi\">100</span><span class=\"p\">)</span>\n<span class=\"n\">yy</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">sin</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">)</span>\n<span class=\"n\">zz</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"n\">xx</span><span class=\"p\">)</span>\n\n<span class=\"n\">figure</span> <span class=\"o\">=</span> <span class=\"n\">autogpy</span><span class=\"o\">.</span><span class=\"n\">AutogpyFigure</span><span class=\"p\">(</span><span class=\"s2\">\"test_figure\"</span><span class=\"p\">,</span><span class=\"s2\">\"test1\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">p_generic</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'u 1:2 with lines t \"sin\"'</span><span class=\"p\">,</span><span class=\"n\">xx</span><span class=\"p\">,</span><span class=\"n\">yy</span><span class=\"p\">)</span>\n<span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">p_generic</span><span class=\"p\">(</span><span class=\"sa\">r</span><span class=\"s1\">'u 1:2 with lines t \"cos\"'</span><span class=\"p\">,</span><span class=\"n\">xx</span><span class=\"p\">,</span><span class=\"n\">zz</span><span class=\"p\">)</span>\n<span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">generate_gnuplot_file</span><span class=\"p\">()</span>\n\n<span class=\"n\">figure</span><span class=\"o\">.</span><span class=\"n\">jupyter_show_pdflatex</span><span class=\"p\">()</span> <span class=\"c1\"># only in jupyter</span>\n</pre>\n<p>will generate the following figure (also appearing in jupyter)</p>\n<img alt=\"example figure\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cd8bba768bb9a173ef4bf2a64c4280426091750a/68747470733a2f2f6769746875622e636f6d2f61636f7262652f6175746f6770792f7261772f6d61737465722f6578616d706c655f6669672e6a706567\" width=\"500px\">\n<p><strong>Most importantly</strong>, the following source and data will be created in the folder <code>test_figure</code></p>\n<pre>$ ls test_figure\n\nMakefile\nsync_me.sh\ntest1__0__.dat\ntest1__1__.dat\ntest1__.core.gnu\ntest1__.jpg.gnu\ntest1__.pdflatex_compile.sh\ntest1__.pdflatex.gnu\ntest1__.tikz_compile.sh\ntest1__.tikz.gnu\n</pre>\n<p>With <code>make</code> one can obtain jpg, epslatex, and tikz/pgfplot versions of the figure.\nNotice that the input data has been formatted automatically.</p>\n<p>Inspecting <code>test1__.pdflatex.gnu</code>, responsible of the epslatex version of the figure, one gets:</p>\n<pre><span class=\"k\">set</span> <span class=\"nb\">terminal</span> <span class=\"n\">epslatex</span> <span class=\"n\">size</span> <span class=\"mf\">9.9</span><span class=\"n\">cm</span><span class=\"o\">,</span><span class=\"mf\">8.</span><span class=\"n\">cm</span> <span class=\"n\">color</span> <span class=\"n\">colortext</span> <span class=\"n\">standalone</span>      <span class=\"s\">'phv,12 '</span>  <span class=\"n\">linewidth</span> <span class=\"mi\">2</span>\n<span class=\"k\">set</span> <span class=\"nb\">output</span> <span class=\"s\">'fig.latex.nice/plot_out.tex'</span>\n\n<span class=\"k\">load</span> <span class=\"s\">\"test1__.core.gnu\"</span><span class=\"p\">;</span> \n</pre>\n<p>while <code>test1__.core.gnu</code> reads:</p>\n<pre><span class=\"k\">p</span> <span class=\"s\">\"test1__0__.dat\"</span> <span class=\"nb\">u</span> <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">2</span> <span class=\"nb\">with</span> <span class=\"n\">lines</span> <span class=\"nb\">t</span> <span class=\"s\">\"sin\"</span><span class=\"o\">,</span>\\\n<span class=\"s\">\"test1__1__.dat\"</span> <span class=\"nb\">u</span> <span class=\"mi\">1</span><span class=\"o\">:</span><span class=\"mi\">2</span> <span class=\"nb\">with</span> <span class=\"n\">lines</span> <span class=\"nb\">t</span> <span class=\"s\">\"cos\"</span>\n</pre>\n\n          </div>"}, "last_serial": 5748813, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "5d7fa2fbef14e0bbf86675c3323622bd", "sha256": "733d75dda634793fbebd837c1086604e0a693c84c681f765937ba2951fe932b5"}, "downloads": -1, "filename": "autogpy-0.1.tar.gz", "has_sig": false, "md5_digest": "5d7fa2fbef14e0bbf86675c3323622bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6815, "upload_time": "2019-05-16T11:26:32", "upload_time_iso_8601": "2019-05-16T11:26:32.937533Z", "url": "https://files.pythonhosted.org/packages/de/34/acdb90b3556c2a832c32db39e15ae646d1897c2e6550e278c5e7d59d5aa2/autogpy-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "c0a87335cbde6810e9acfb43a73d50a8", "sha256": "1a36fb835ca53e4323ae2dba3fe51bafbff648c4829c0b46aab7bec9cd0cdea8"}, "downloads": -1, "filename": "autogpy-0.1.1.tar.gz", "has_sig": false, "md5_digest": "c0a87335cbde6810e9acfb43a73d50a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9222, "upload_time": "2019-05-16T11:38:22", "upload_time_iso_8601": "2019-05-16T11:38:22.852735Z", "url": "https://files.pythonhosted.org/packages/4a/5b/77c68749d88d1deb8f5542b4be953a2eaf49a6ca1a1e129fcd3aba66dd2f/autogpy-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "7a8d0af5db91a5e80b9bfb339e7ae711", "sha256": "425f0525165294b4e1a61508fe782a144683b62e08fb61e45e3fe2f08fe8692b"}, "downloads": -1, "filename": "autogpy-0.1.2.tar.gz", "has_sig": false, "md5_digest": "7a8d0af5db91a5e80b9bfb339e7ae711", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9219, "upload_time": "2019-05-16T11:43:32", "upload_time_iso_8601": "2019-05-16T11:43:32.243194Z", "url": "https://files.pythonhosted.org/packages/9a/54/bbf6dc75b18087f07382be83476ad9360511837dac4a2edbae371b5464d3/autogpy-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cc283f95526b76cd72eaa06ba4a3c1cc", "sha256": "793e3a1dc4db91681fbb25e9b404e481ebe5746ed9a0f7e2b9b3e04883852673"}, "downloads": -1, "filename": "autogpy-0.1.3.tar.gz", "has_sig": false, "md5_digest": "cc283f95526b76cd72eaa06ba4a3c1cc", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9232, "upload_time": "2019-05-16T11:47:51", "upload_time_iso_8601": "2019-05-16T11:47:51.615066Z", "url": "https://files.pythonhosted.org/packages/56/77/5ffeed7ea79e1c7ba0f6293a83b4230273c08c370313962e4793b548988c/autogpy-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "8aebd452a884ab969ca5cb84b3ea6ef5", "sha256": "1fa12364d53d6f9005d847edd881ef20287bd385189d89f218c31267a45aab51"}, "downloads": -1, "filename": "autogpy-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8aebd452a884ab969ca5cb84b3ea6ef5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13458, "upload_time": "2019-08-29T05:21:00", "upload_time_iso_8601": "2019-08-29T05:21:00.497986Z", "url": "https://files.pythonhosted.org/packages/d7/27/6c95e67fd118904276ad01b440c78ec5b68aa26719b5d6c29eae1cc2889e/autogpy-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8aebd452a884ab969ca5cb84b3ea6ef5", "sha256": "1fa12364d53d6f9005d847edd881ef20287bd385189d89f218c31267a45aab51"}, "downloads": -1, "filename": "autogpy-0.1.4.tar.gz", "has_sig": false, "md5_digest": "8aebd452a884ab969ca5cb84b3ea6ef5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13458, "upload_time": "2019-08-29T05:21:00", "upload_time_iso_8601": "2019-08-29T05:21:00.497986Z", "url": "https://files.pythonhosted.org/packages/d7/27/6c95e67fd118904276ad01b440c78ec5b68aa26719b5d6c29eae1cc2889e/autogpy-0.1.4.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:16:17 2020"}