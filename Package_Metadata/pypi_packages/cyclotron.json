{"info": {"author": "Romain Picard", "author_email": "romain.picard@oakbits.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3"], "description": "===========================\n|cyclotron-logo| Cyclotron\n===========================\n\n.. |cyclotron-logo| image:: docs/asset/cyclotron_logo.png\n\nA functional and reactive framework for `RxPY <https://github.com/ReactiveX/RxPY/>`_.\n\n.. image:: https://travis-ci.org/MainRo/cyclotron-py.svg?branch=master\n    :target: https://travis-ci.org/MainRo/cyclotron-py\n\n.. image:: https://badge.fury.io/py/cyclotron.svg\n    :target: https://badge.fury.io/py/cyclotron\n\n.. image:: https://readthedocs.org/projects/cyclotron-py/badge/?version=latest\n    :target: https://cyclotron-py.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n\n\n----------------------\n\nWith Cyclotron, you can structure your RxPY code as many reusable components.\nMoreover it naturally encourages to separate pure code and side effects. So a\nCyclotron application is easier to test, maintain, and extend.\n\nHere is the structure of a cyclotron application:\n\n.. figure:: https://github.com/mainro/cyclotron-py/raw/master/docs/asset/cycle.png\n    :width: 60%\n    :align: center\n\nHow to use it\n=============\n\nThe following example is an http echo server:\n\n.. code:: python\n\n    from collections import namedtuple\n\n    from cyclotron import Component\n    from cyclotron.asyncio.runner import run\n    import cyclotron_aiohttp.httpd as httpd\n    import rx\n    import rx.operators as ops\n\n    EchoSource = namedtuple('EchoSource', ['httpd'])\n    EchoSink = namedtuple('EchoSink', ['httpd'])\n    EchoDrivers = namedtuple('EchoDrivers', ['httpd'])\n\n    def echo_server(source):\n        init = rx.from_([\n            httpd.Initialize(),\n            httpd.AddRoute(methods=['GET'], path='/echo/{what}', id='echo'),\n            httpd.StartServer(host='localhost', port=8080),\n        ])\n\n        echo = source.httpd.route.pipe(\n            ops.filter(lambda i: i.id == 'echo'),\n            ops.flat_map(lambda i: i.request),\n            ops.map(lambda i: httpd.Response(\n                context=i.context,\n                data=i.match_info['what'].encode('utf-8')),\n            )\n        )\n\n        control = rx.merge(init, echo)\n        return EchoSink(httpd=httpd.Sink(control=control))\n\n\n    def main():\n        run(Component(call=echo_server, input=EchoSource),\n            EchoDrivers(httpd=httpd.make_driver()))\n\n\n    if __name__ == '__main__':\n        main()\n\nIn this application, the echo_server function is a pure function, while the http\nserver is implemented as a driver. \n\n.. code::\n\n    pip install cyclotron-aiohttp\n\nyou can then test it with an http client like curl:\n\n.. code::\n\n    $ curl http://localhost:8080/echo/hello\n    hello\n    \n\nInstall\n========\n\nCyclotron is available on PyPi and can be installed with pip:\n\n.. code:: console\n\n    pip install cyclotron\n\nThis project is composed of several python packages. Install also the ones that\nyou use in your application:\n\n====================================================================  =========================\nPackage                                                               Version\n====================================================================  =========================\n`cyclotron <https://github.com/mainro/cyclotron-py>`_                 |pypi-cyclotron|\n`cyclotron-std <https://github.com/mainro/cyclotron-std>`_            |pypi-cyclotron-std|\n`cyclotron-aiohttp <https://github.com/mainro/cyclotron-aiohttp>`_    |pypi-cyclotron-aiohttp|\n====================================================================  =========================\n\n.. |pypi-cyclotron| image:: https://badge.fury.io/py/cyclotron.svg\n    :target: https://badge.fury.io/py/cyclotron\n\n.. |pypi-cyclotron-aiohttp| image:: https://badge.fury.io/py/cyclotron-aiohttp.svg\n    :target: https://badge.fury.io/py/cyclotron-aiohttp\n\n.. |pypi-cyclotron-std| image:: https://badge.fury.io/py/cyclotron-std.svg\n    :target: https://badge.fury.io/py/cyclotron-std\n\n\n\nLicense\n=========\n\nThis project is licensed under the MIT License - see the `License\n<https://github.com/mainro/cyclotron-py/raw/master/LICENSE.txt>`_ file for\ndetails", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/MainRo/cyclotron-py.git", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "cyclotron", "package_url": "https://pypi.org/project/cyclotron/", "platform": "any", "project_url": "https://pypi.org/project/cyclotron/", "project_urls": {"Documentation": "https://cyclotron-py.readthedocs.io", "Homepage": "https://github.com/MainRo/cyclotron-py.git"}, "release_url": "https://pypi.org/project/cyclotron/1.1.0/", "requires_dist": null, "requires_python": "", "summary": "A reactive stream cycle implementation in python", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>A functional and reactive framework for <a href=\"https://github.com/ReactiveX/RxPY/\" rel=\"nofollow\">RxPY</a>.</p>\n<a href=\"https://travis-ci.org/MainRo/cyclotron-py\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/MainRo/cyclotron-py.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/af8fa6a4dc6b02593defde60fa9af4aeba5e8583/68747470733a2f2f7472617669732d63692e6f72672f4d61696e526f2f6379636c6f74726f6e2d70792e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://badge.fury.io/py/cyclotron\" rel=\"nofollow\"><img alt=\"https://badge.fury.io/py/cyclotron.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86abc88d972b6c477e0f46949befd2119f709e69/68747470733a2f2f62616467652e667572792e696f2f70792f6379636c6f74726f6e2e737667\"></a>\n<a href=\"https://cyclotron-py.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6a1dd84e63dde3f9dc6a3a54e344db77c2b287c6/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f6379636c6f74726f6e2d70792f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<hr class=\"docutils\">\n<p>With Cyclotron, you can structure your RxPY code as many reusable components.\nMoreover it naturally encourages to separate pure code and side effects. So a\nCyclotron application is easier to test, maintain, and extend.</p>\n<p>Here is the structure of a cyclotron application:</p>\n<div>\n<img alt=\"https://github.com/mainro/cyclotron-py/raw/master/docs/asset/cycle.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1fc8a144e3595202fbbbd4fc97dac0ffbb16039/68747470733a2f2f6769746875622e636f6d2f6d61696e726f2f6379636c6f74726f6e2d70792f7261772f6d61737465722f646f63732f61737365742f6379636c652e706e67\" width=\"60%\">\n</div>\n<div id=\"how-to-use-it\">\n<h2>How to use it</h2>\n<p>The following example is an http echo server:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">collections</span> <span class=\"kn\">import</span> <span class=\"n\">namedtuple</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">cyclotron</span> <span class=\"kn\">import</span> <span class=\"n\">Component</span>\n<span class=\"kn\">from</span> <span class=\"nn\">cyclotron.asyncio.runner</span> <span class=\"kn\">import</span> <span class=\"n\">run</span>\n<span class=\"kn\">import</span> <span class=\"nn\">cyclotron_aiohttp.httpd</span> <span class=\"k\">as</span> <span class=\"nn\">httpd</span>\n<span class=\"kn\">import</span> <span class=\"nn\">rx</span>\n<span class=\"kn\">import</span> <span class=\"nn\">rx.operators</span> <span class=\"k\">as</span> <span class=\"nn\">ops</span>\n\n<span class=\"n\">EchoSource</span> <span class=\"o\">=</span> <span class=\"n\">namedtuple</span><span class=\"p\">(</span><span class=\"s1\">'EchoSource'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'httpd'</span><span class=\"p\">])</span>\n<span class=\"n\">EchoSink</span> <span class=\"o\">=</span> <span class=\"n\">namedtuple</span><span class=\"p\">(</span><span class=\"s1\">'EchoSink'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'httpd'</span><span class=\"p\">])</span>\n<span class=\"n\">EchoDrivers</span> <span class=\"o\">=</span> <span class=\"n\">namedtuple</span><span class=\"p\">(</span><span class=\"s1\">'EchoDrivers'</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s1\">'httpd'</span><span class=\"p\">])</span>\n\n<span class=\"k\">def</span> <span class=\"nf\">echo_server</span><span class=\"p\">(</span><span class=\"n\">source</span><span class=\"p\">):</span>\n    <span class=\"n\">init</span> <span class=\"o\">=</span> <span class=\"n\">rx</span><span class=\"o\">.</span><span class=\"n\">from_</span><span class=\"p\">([</span>\n        <span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">Initialize</span><span class=\"p\">(),</span>\n        <span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">AddRoute</span><span class=\"p\">(</span><span class=\"n\">methods</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s1\">'GET'</span><span class=\"p\">],</span> <span class=\"n\">path</span><span class=\"o\">=</span><span class=\"s1\">'/echo/</span><span class=\"si\">{what}</span><span class=\"s1\">'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"s1\">'echo'</span><span class=\"p\">),</span>\n        <span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">StartServer</span><span class=\"p\">(</span><span class=\"n\">host</span><span class=\"o\">=</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">port</span><span class=\"o\">=</span><span class=\"mi\">8080</span><span class=\"p\">),</span>\n    <span class=\"p\">])</span>\n\n    <span class=\"n\">echo</span> <span class=\"o\">=</span> <span class=\"n\">source</span><span class=\"o\">.</span><span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"o\">.</span><span class=\"n\">pipe</span><span class=\"p\">(</span>\n        <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">filter</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">id</span> <span class=\"o\">==</span> <span class=\"s1\">'echo'</span><span class=\"p\">),</span>\n        <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">flat_map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">request</span><span class=\"p\">),</span>\n        <span class=\"n\">ops</span><span class=\"o\">.</span><span class=\"n\">map</span><span class=\"p\">(</span><span class=\"k\">lambda</span> <span class=\"n\">i</span><span class=\"p\">:</span> <span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">Response</span><span class=\"p\">(</span>\n            <span class=\"n\">context</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">context</span><span class=\"p\">,</span>\n            <span class=\"n\">data</span><span class=\"o\">=</span><span class=\"n\">i</span><span class=\"o\">.</span><span class=\"n\">match_info</span><span class=\"p\">[</span><span class=\"s1\">'what'</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">(</span><span class=\"s1\">'utf-8'</span><span class=\"p\">)),</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n\n    <span class=\"n\">control</span> <span class=\"o\">=</span> <span class=\"n\">rx</span><span class=\"o\">.</span><span class=\"n\">merge</span><span class=\"p\">(</span><span class=\"n\">init</span><span class=\"p\">,</span> <span class=\"n\">echo</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">EchoSink</span><span class=\"p\">(</span><span class=\"n\">httpd</span><span class=\"o\">=</span><span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">Sink</span><span class=\"p\">(</span><span class=\"n\">control</span><span class=\"o\">=</span><span class=\"n\">control</span><span class=\"p\">))</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">():</span>\n    <span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">Component</span><span class=\"p\">(</span><span class=\"n\">call</span><span class=\"o\">=</span><span class=\"n\">echo_server</span><span class=\"p\">,</span> <span class=\"nb\">input</span><span class=\"o\">=</span><span class=\"n\">EchoSource</span><span class=\"p\">),</span>\n        <span class=\"n\">EchoDrivers</span><span class=\"p\">(</span><span class=\"n\">httpd</span><span class=\"o\">=</span><span class=\"n\">httpd</span><span class=\"o\">.</span><span class=\"n\">make_driver</span><span class=\"p\">()))</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">main</span><span class=\"p\">()</span>\n</pre>\n<p>In this application, the echo_server function is a pure function, while the http\nserver is implemented as a driver.</p>\n<pre>pip install cyclotron-aiohttp\n</pre>\n<p>you can then test it with an http client like curl:</p>\n<pre>$ curl http://localhost:8080/echo/hello\nhello\n</pre>\n</div>\n<div id=\"install\">\n<h2>Install</h2>\n<p>Cyclotron is available on PyPi and can be installed with pip:</p>\n<pre><span class=\"go\">pip install cyclotron</span>\n</pre>\n<p>This project is composed of several python packages. Install also the ones that\nyou use in your application:</p>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Package</th>\n<th>Version</th>\n</tr>\n</thead>\n<tbody>\n<tr><td><a href=\"https://github.com/mainro/cyclotron-py\" rel=\"nofollow\">cyclotron</a></td>\n<td><a href=\"https://badge.fury.io/py/cyclotron\" rel=\"nofollow\"><img alt=\"pypi-cyclotron\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/86abc88d972b6c477e0f46949befd2119f709e69/68747470733a2f2f62616467652e667572792e696f2f70792f6379636c6f74726f6e2e737667\"></a></td>\n</tr>\n<tr><td><a href=\"https://github.com/mainro/cyclotron-std\" rel=\"nofollow\">cyclotron-std</a></td>\n<td><a href=\"https://badge.fury.io/py/cyclotron-std\" rel=\"nofollow\"><img alt=\"pypi-cyclotron-std\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a34adad12d4eade46e55aba45127f79321d14564/68747470733a2f2f62616467652e667572792e696f2f70792f6379636c6f74726f6e2d7374642e737667\"></a></td>\n</tr>\n<tr><td><a href=\"https://github.com/mainro/cyclotron-aiohttp\" rel=\"nofollow\">cyclotron-aiohttp</a></td>\n<td><a href=\"https://badge.fury.io/py/cyclotron-aiohttp\" rel=\"nofollow\"><img alt=\"pypi-cyclotron-aiohttp\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b1c2fe0bbba81786e1ccecc0503c12032c48d494/68747470733a2f2f62616467652e667572792e696f2f70792f6379636c6f74726f6e2d61696f687474702e737667\"></a></td>\n</tr>\n</tbody>\n</table>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>This project is licensed under the MIT License - see the <a href=\"https://github.com/mainro/cyclotron-py/raw/master/LICENSE.txt\" rel=\"nofollow\">License</a> file for\ndetails</p>\n</div>\n\n          </div>"}, "last_serial": 6520270, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "fe04d0ada8189824745011a8babdb0cf", "sha256": "80220fc20c937cdd208adf156a5f504781a0078f1bd58bfc70078a53d28ae17c"}, "downloads": -1, "filename": "cyclotron-0.1.0.zip", "has_sig": false, "md5_digest": "fe04d0ada8189824745011a8babdb0cf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4428, "upload_time": "2018-01-28T20:34:55", "upload_time_iso_8601": "2018-01-28T20:34:55.094338Z", "url": "https://files.pythonhosted.org/packages/48/94/a2ec801d9995793819f721e09c28fc21597cccde6c259b18efc76fc97a23/cyclotron-0.1.0.zip", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "539f9520f92b3663e68a013683e1398e", "sha256": "84df929cc45663990e1120812f0e9b00b3411fcedc0b0e4a85aec0db1310fb32"}, "downloads": -1, "filename": "cyclotron-0.2.0.zip", "has_sig": false, "md5_digest": "539f9520f92b3663e68a013683e1398e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5068, "upload_time": "2018-03-19T22:18:46", "upload_time_iso_8601": "2018-03-19T22:18:46.546190Z", "url": "https://files.pythonhosted.org/packages/de/54/61c07345a584a7c9a4da7cbc21e6a94fa0f9fcd56863f4ba40767f3111de/cyclotron-0.2.0.zip", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "4d6d0d2e4d115b7f79a91155b6db657a", "sha256": "2024a487655739aec3e2f43e991d6f6f0e99291098e4028c8b14e658f735a97e"}, "downloads": -1, "filename": "cyclotron-0.3.0.zip", "has_sig": false, "md5_digest": "4d6d0d2e4d115b7f79a91155b6db657a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5542, "upload_time": "2018-04-01T20:31:58", "upload_time_iso_8601": "2018-04-01T20:31:58.644085Z", "url": "https://files.pythonhosted.org/packages/1c/7d/0e38193cbea5e1e047fbc9d35e1e2c02e8e3c815d0a5873eb1de0d8a8e70/cyclotron-0.3.0.zip", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "69db8c9116d78d3739135fa1b513e150", "sha256": "ff84ecb7113f4e9328aa43e1197098ed2107947e0ac71c0dc855a3f668911632"}, "downloads": -1, "filename": "cyclotron-0.4.0.zip", "has_sig": false, "md5_digest": "69db8c9116d78d3739135fa1b513e150", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5682, "upload_time": "2018-04-16T21:34:21", "upload_time_iso_8601": "2018-04-16T21:34:21.337943Z", "url": "https://files.pythonhosted.org/packages/31/2d/db4412f9c41e5a70cbab006a5f418cea073823b65ef8447e8f3dc1796316/cyclotron-0.4.0.zip", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "e7feff79d4e04e1f475b67982adf4f7b", "sha256": "c1bef4226af4c53a9bbd01f68cde4170f251fd429c00a2cf1b52754df283f0a9"}, "downloads": -1, "filename": "cyclotron-0.5.0.tar.gz", "has_sig": false, "md5_digest": "e7feff79d4e04e1f475b67982adf4f7b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4940, "upload_time": "2018-08-26T21:52:25", "upload_time_iso_8601": "2018-08-26T21:52:25.134398Z", "url": "https://files.pythonhosted.org/packages/b6/79/1d22cc5d240682fcd56263de559bbeab68be2ae648013694a1a871430075/cyclotron-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "ff1aaf1e7534273c25a87e3e219481c8", "sha256": "feb6edb5966e738168fa04779f0e4db6bcc7754c42f58e718439f5c6a4fcc53d"}, "downloads": -1, "filename": "cyclotron-0.6.0.tar.gz", "has_sig": false, "md5_digest": "ff1aaf1e7534273c25a87e3e219481c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6176, "upload_time": "2019-03-13T22:35:51", "upload_time_iso_8601": "2019-03-13T22:35:51.958696Z", "url": "https://files.pythonhosted.org/packages/db/0b/c93bff29700f15f2157d39355e61324d0e7c23c704e4ec982d8cbe97d7bf/cyclotron-0.6.0.tar.gz", "yanked": false}], "0.6.1": [{"comment_text": "", "digests": {"md5": "37694abf5587de5c50536c87bb218419", "sha256": "1a1f056fdcb2c269cf5fa19d9db7080b53654e0c4b9e49da67b9b28402951c8f"}, "downloads": -1, "filename": "cyclotron-0.6.1.tar.gz", "has_sig": false, "md5_digest": "37694abf5587de5c50536c87bb218419", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6914, "upload_time": "2019-06-23T20:57:13", "upload_time_iso_8601": "2019-06-23T20:57:13.520925Z", "url": "https://files.pythonhosted.org/packages/33/69/69bd98a151a3e0fe3fe08645f6600c5e757167a2afb31ebd323225d059c0/cyclotron-0.6.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "0448653121193d1b4dbd776228970e17", "sha256": "31132f2b5d833fb9fe436593cba54f1fbbfeaf939bfdd9fa68f9b81e3cbebfae"}, "downloads": -1, "filename": "cyclotron-1.0.0.tar.gz", "has_sig": false, "md5_digest": "0448653121193d1b4dbd776228970e17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6105, "upload_time": "2019-09-14T20:13:14", "upload_time_iso_8601": "2019-09-14T20:13:14.943464Z", "url": "https://files.pythonhosted.org/packages/5c/86/86a2b02fe7fef04f19f6e1d44474879121684d6939d3e9179fcf80425b87/cyclotron-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "5945dd34d73cfbec93e899c2a6973d28", "sha256": "96f2537015ad2b61c735c2f0e330df91b7b3b7ccac9afde961a2d6f850cd039a"}, "downloads": -1, "filename": "cyclotron-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5945dd34d73cfbec93e899c2a6973d28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2020-01-25T22:42:57", "upload_time_iso_8601": "2020-01-25T22:42:57.489361Z", "url": "https://files.pythonhosted.org/packages/0d/90/1a883af75a79b3e16d5d3d6ff0007b18b33438b30c43438d1be25cbd1a71/cyclotron-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5945dd34d73cfbec93e899c2a6973d28", "sha256": "96f2537015ad2b61c735c2f0e330df91b7b3b7ccac9afde961a2d6f850cd039a"}, "downloads": -1, "filename": "cyclotron-1.1.0.tar.gz", "has_sig": false, "md5_digest": "5945dd34d73cfbec93e899c2a6973d28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7291, "upload_time": "2020-01-25T22:42:57", "upload_time_iso_8601": "2020-01-25T22:42:57.489361Z", "url": "https://files.pythonhosted.org/packages/0d/90/1a883af75a79b3e16d5d3d6ff0007b18b33438b30c43438d1be25cbd1a71/cyclotron-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:07 2020"}