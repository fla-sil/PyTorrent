{"info": {"author": "Grant T. Olson", "author_email": "kgo@grant-olson.net", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 3"], "description": "# GPIO One\n\nGPIO One is an unofficial user-created set of modules to allow you to\neasily use various input/output devices on your Raspberry Pi when the\ndefault library and GPIOzero don't have any useful code. It hopes to\nfill in some of the blanks that keep you from getting your projects up\nand running quickly and smoothly.\n\nIt currently provides interfaces to:\n\n* Three colored RGB Leds.\n* Seven Segement LED displays such as single-element 5161AS and 4-element SH5461AS\n* LCD Displays such as the 1602A\n* Shift registers such as 74HC595\n* Analog-to-Digital via the MCP3008/4 chip line. And built on top of the raw ADC, interfaces for:\n    * Analog Joysticks\n    * Thermistors\n\n## Examples\n\nThe example files use environment variables to set pins so that we\nwill not accidentally send something down the wrong pin and damage\nequipment. So for example, if you have a Common-cathode RGB LED set up\nwith the Cathode tied to ground, and the Red, Green, and Blue pins to\nGPIO 4, 5, and 6 (with a 220 Ohm Resistor in between each connection!)\nthen you can simply go to the examples directory,  run\n`RED=4 GREEN=5 BLUE=6 python3 rgb_led.py` and the LED should come to life.\n\nEach example can be run without environment variables for instructions and a description:\n\n```\npi@raspberrypi:~/src/gpioone/examples $ python3 rgb_led.py \nCouldn't find required environment setting fo RED pin.\n\nSimple examples with RGB LEDs.\n\nIt will first turn on the LEDs one by one, then enter a color cycle mode that uses software PWM to create a glowing light.\n\nThese are the required settings which should correspond to pins on devices:\n\n    RED - Red Pin\n    GREEN - Green Pin\n    BLUE - Blue Pin\n\nExample Usage:\n\n    RED=1 GREEN=2 BLUE=3 python3 /home/pi/src/gpioone/gpioone/example_help.py\n\npi@raspberrypi:~/src/gpioone $ \n\n```\n\n## Thanks\n\nGpioone was primarily written to help the author learn more about\ninterfacing various hardware with the Raspberry Pi. I have made\nattempts to write clear, easy-to-follow code that should be generally\nreusable. How useful this is to anyone else remains to be seen. Let me\nknow if you find it helpful!\n\n- Grant\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/grant-olson/gpioone", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "gpioone", "package_url": "https://pypi.org/project/gpioone/", "platform": "", "project_url": "https://pypi.org/project/gpioone/", "project_urls": {"Homepage": "https://github.com/grant-olson/gpioone"}, "release_url": "https://pypi.org/project/gpioone/0.1.0/", "requires_dist": null, "requires_python": "", "summary": "Interfaces for various GPIO devices on Raspberry PI", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>GPIO One</h1>\n<p>GPIO One is an unofficial user-created set of modules to allow you to\neasily use various input/output devices on your Raspberry Pi when the\ndefault library and GPIOzero don't have any useful code. It hopes to\nfill in some of the blanks that keep you from getting your projects up\nand running quickly and smoothly.</p>\n<p>It currently provides interfaces to:</p>\n<ul>\n<li>Three colored RGB Leds.</li>\n<li>Seven Segement LED displays such as single-element 5161AS and 4-element SH5461AS</li>\n<li>LCD Displays such as the 1602A</li>\n<li>Shift registers such as 74HC595</li>\n<li>Analog-to-Digital via the MCP3008/4 chip line. And built on top of the raw ADC, interfaces for:\n<ul>\n<li>Analog Joysticks</li>\n<li>Thermistors</li>\n</ul>\n</li>\n</ul>\n<h2>Examples</h2>\n<p>The example files use environment variables to set pins so that we\nwill not accidentally send something down the wrong pin and damage\nequipment. So for example, if you have a Common-cathode RGB LED set up\nwith the Cathode tied to ground, and the Red, Green, and Blue pins to\nGPIO 4, 5, and 6 (with a 220 Ohm Resistor in between each connection!)\nthen you can simply go to the examples directory,  run\n<code>RED=4 GREEN=5 BLUE=6 python3 rgb_led.py</code> and the LED should come to life.</p>\n<p>Each example can be run without environment variables for instructions and a description:</p>\n<pre><code>pi@raspberrypi:~/src/gpioone/examples $ python3 rgb_led.py \nCouldn't find required environment setting fo RED pin.\n\nSimple examples with RGB LEDs.\n\nIt will first turn on the LEDs one by one, then enter a color cycle mode that uses software PWM to create a glowing light.\n\nThese are the required settings which should correspond to pins on devices:\n\n    RED - Red Pin\n    GREEN - Green Pin\n    BLUE - Blue Pin\n\nExample Usage:\n\n    RED=1 GREEN=2 BLUE=3 python3 /home/pi/src/gpioone/gpioone/example_help.py\n\npi@raspberrypi:~/src/gpioone $ \n\n</code></pre>\n<h2>Thanks</h2>\n<p>Gpioone was primarily written to help the author learn more about\ninterfacing various hardware with the Raspberry Pi. I have made\nattempts to write clear, easy-to-follow code that should be generally\nreusable. How useful this is to anyone else remains to be seen. Let me\nknow if you find it helpful!</p>\n<ul>\n<li>Grant</li>\n</ul>\n\n          </div>"}, "last_serial": 5514762, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2d3d98dbd7e427e90b6f7cc8af992714", "sha256": "12f23b99ebc16546f06417fdb4a6a4c439233976e3ebbdbed55b2edcf4d19ec0"}, "downloads": -1, "filename": "gpioone-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2d3d98dbd7e427e90b6f7cc8af992714", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10729, "upload_time": "2019-07-11T01:58:01", "upload_time_iso_8601": "2019-07-11T01:58:01.569414Z", "url": "https://files.pythonhosted.org/packages/b1/97/e1d6195b096734740791a37036683d721dbc565956a75ffcf840278dbe93/gpioone-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47f5d5b1098bcacbcb41192342965351", "sha256": "125e261d9ef2e0bddbb7771fc5b2d6f82d591769ab52e1d85581b7b69b2f88b0"}, "downloads": -1, "filename": "gpioone-0.1.0.tar.gz", "has_sig": false, "md5_digest": "47f5d5b1098bcacbcb41192342965351", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8168, "upload_time": "2019-07-11T01:58:03", "upload_time_iso_8601": "2019-07-11T01:58:03.749191Z", "url": "https://files.pythonhosted.org/packages/e9/1a/2f3e0dea4e107d06f4046f13e28cb7d201b53c79999484632bb6c47e60fa/gpioone-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2d3d98dbd7e427e90b6f7cc8af992714", "sha256": "12f23b99ebc16546f06417fdb4a6a4c439233976e3ebbdbed55b2edcf4d19ec0"}, "downloads": -1, "filename": "gpioone-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2d3d98dbd7e427e90b6f7cc8af992714", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 10729, "upload_time": "2019-07-11T01:58:01", "upload_time_iso_8601": "2019-07-11T01:58:01.569414Z", "url": "https://files.pythonhosted.org/packages/b1/97/e1d6195b096734740791a37036683d721dbc565956a75ffcf840278dbe93/gpioone-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "47f5d5b1098bcacbcb41192342965351", "sha256": "125e261d9ef2e0bddbb7771fc5b2d6f82d591769ab52e1d85581b7b69b2f88b0"}, "downloads": -1, "filename": "gpioone-0.1.0.tar.gz", "has_sig": false, "md5_digest": "47f5d5b1098bcacbcb41192342965351", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8168, "upload_time": "2019-07-11T01:58:03", "upload_time_iso_8601": "2019-07-11T01:58:03.749191Z", "url": "https://files.pythonhosted.org/packages/e9/1a/2f3e0dea4e107d06f4046f13e28cb7d201b53c79999484632bb6c47e60fa/gpioone-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:17 2020"}