{"info": {"author": "Dan Michael O. Hegg\u00f8", "author_email": "d.m.heggo@ub.uio.no", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![PyPI](https://img.shields.io/pypi/v/slipsomat.svg)](https://pypi.org/project/slipsomat/)\n[![PyPI - Python Version](https://img.shields.io/pypi/pyversions/slipsomat.svg)](https://pypi.org/project/slipsomat/)\n[![PyPI - License](https://img.shields.io/pypi/l/slipsomat.svg)](https://github.com/scriptotek/alma-slipsomat/blob/master/LICENSE)\n\n`slipsomat` is a small tool for pulling and pushing letters to Alma using\nSelenium browser automation. It allows to you to keep an up-to-date local\ncopy of all the letters, so you can keep them under version control. And\nby storing checksums of all the letters, it can warn you if you're about\nto overwrite a letter that has been modified by someone else without pulling\nin their changes.\n\nThis tool exists because Alma doesn't provide a way to synchronize the letters,\nonly a web form to edit them. With over 100 different letters, editing them\nusing a web form (with no syntax highlighting) is very tedious. We have also\nbrought this up on Ideas Exchange \u2013 feel free to add your vote to\n[our idea there](http://ideas.exlibrisgroup.com/forums/308173-alma/suggestions/12471084-synchronizing-xsl-templates-with-external-systems).\n\n## Setup\n\nSlipsomat should work with Python 3.5 and later on most platforms.\nPlease use our\n[issue tracker](https://github.com/scriptotek/alma-slipsomat/issues)\nto report any problems.\n\nInstall with pip:\n\n    pip install -U slipsomat\n\nOnce installed, you can run `slipsomat` from any directory containing a\n`slipsomat.cfg` config file.\nTo get started, create an empty directory with a `slipsomat.cfg` file with the\nfollowing contents:\n\n```\n[login]\nauth_type=\ndomain=\ninstance=\ninstitution=\nusername=\npassword=\n\n[selenium]\nbrowser=firefox\ndefault_timeout=20\n\n[window]\nwidth=1300\nheight=700\n```\n\nwhere you fill in the blank values.\n\n* Set `auth_type=Feide` if you authenticate using Feide SAML. Set `auth_type=SAML`\n  for Shibboleth or other SAML providers (submit an issue if it doesn't work with\n  your provider!).\n  Set `auth_type=basic` to use the standard Alma login.\n* `domain` is your Feide domain, e.g. `uio.no`. If you don't use Feide as your\n  SAML provider, you can leave this empty.\n* `instance` is the Alma instance name, which is the first part of your ALMA URL.\n  If your Alma URL is `bibsys-k.alma.exlibrisgroup.com`, then `bibsys-k` is the\n  instance name.\n* `institution` the Alma institution name, e.g. `47BIBSYS_UBO`\n* `username` is your username.\n* `password` can be left blank if you want to be asked for it each time. This\n  is the recommended solution, since the password is stored in plain text.\n* `browser` can be set to `firefox`, `chrome` or `phantomjs`. The corresponding\n  driver must be installed (GeckoDriver for Firefox, ChromeDriver for Chrome).\n  I've had success with all three browsers, but from time to time a browser can\n  start crashing or freezing at some point. First thing to try then is to upgrade\n  both Selenium and the browser driver. If there's still problems, switch to\n  another browser for some time. If *that* doesn't help, there might be an issue\n  with slipsomat. Please file an issue.\n\n## Debugging\n\nIf you have `inquirer` installed (does not work on Windows), slipsomat will give\nyou some options for starting a debug session if the script crashes.\n\n## Getting started\n\nThe `slipsomat` command will give you an interactive shell where you can type various\ncommands. Type `help` for an overview.\n\nTo get started in an empty directory, type `pull` to pull in all the XSLT files from your Alma\ninstance and store them in a folder named `xsl` (will be created if not there already).\nOptionally, type `defaults` to pull in all default letters too. Note that a `status.json` file\nis also created. This holds the checksums for all the letters, allowing the script to easily keep\ntrack of which files have been modified (locally or in Alma).\n\nOnce you have a directory with all your files you're free to put them under version control\nif you like. Here's the repo we use for our files: https://github.com/scriptotek/alma-letters-ubo\n\n## Workflow\n\nIn a workspace directory (a directory having a `slipsomat.cfg` file):\n\n1. Start by doing `git pull` to pull in changes from other users.\n\n2. `slipsomat` to start the script\n\n3. Optional: the slipsomat command `pull` will check if any files have been updated\n  directly in Alma (without using `slipsomat`), fetch those and update `status.json`.\n  Comparison is done by comparing the update date in Alma with the update date in `status.json`.\n  Alma does not provide time granularity for updates, only date, so for files that have been\n  modified today, the script will open the letter in Alma to get the text and calculate a\n  checksum to compare with the checksum in `status.json`.\n  Note: If you skip this step, `slipsomat` will still warn you if you try to push a\n  letter that have been modified remotely (checksums not matching), but then you will\n  have to merge manually.\n\n4. After having made modifications to one or more letters, run the slipsomat command `push`\n  to push the updates to Alma. Comparison is done by comparing checksums of the local files\n  with the checksums in `status.json`. Before making any changes, the script will print a list\n  of files and confirm that you want to upload these.\n\n5. After having tested the modifications, do a `git commit` (remember to include the updated\n  `status.json`) and `git push`\n\nThe shell has a command history, and tab completion. For example `test Ful<tab><tab>`.\n\n### Updating default letters\n\n- Use the `slipsomat` command `defaults` to pull in all default letters.\n  Note that the command takes quite some time to run, since all letters have to\n  be checked as Alma provides no information whatsoever on when the default\n  letters were last updated.\n\n\n### Testing the output of a letter\n\nAlma lets you test the output on the Notification Template page, but doing this\nmanually each time is boring, so slipsomat provides you with the `test` command\nto automate that.\n\nCreate a folder called \"test-data\" in the same folder as the `slipsomat.cfg` file.\nAdd one or more XML files you want to test there.\n\nStart `slipsomat` and run the command\n\n    test filename.xml\n\nwhere `filename.xml` is a file in the \"test-data\" folder. This will upload the\nXML file to the Notification Template page and store the resulting HTML output\nand a screenshot in the \"test-data\" folder.\n\nTo test multiple files at the same time, you can use Unix style pathname pattern\nexpansion (\"globbing\"). E.g. to test all XML files in the \"test-data\" folder, use the\n`*` wildcard character:\n\n    test *.xml\n\nBy default, the command will use English as the letter language. To test\nanother language, just append `@` and the language code to the filename.\nExample:\n\n    test filename.xml@nn\n\nYou can even test multiple languages in one go by specifying multiple language\ncodes separated by comma like so:\n\n    test filename.xml@en,no,nn\n\nThis can also be used in combination with globbing. To test all XML files in the\n\"test-data\" folder in three languages:\n\n    test *.xml@en,no,nn\n\n## See also\n\n* [open issues](https://github.com/scriptotek/alma-slipsomat/issues)\n* the [alma-letters-ubo repo](https://github.com/scriptotek/alma-letters-ubo) for our XSLT files\n\n\n## Development\n\n### Editable install\n\nIf you want an *editable install* that you can hack on yourself:\n\n    git clone https://github.com/scriptotek/alma-slipsomat.git\n    cd alma-slipsomat\n    pip install -U -e .\n\n\n### Using slipsomat as a Python library\n\nGiven that you have created a `slipsomat.cfg` file, here's how to start\nexperimenting:\n\n```python\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support import expected_conditions as EC\nfrom slipsomat.worker import Worker\nfrom slipsomat.slipsomat import TemplateConfigurationTable\n\nworker = Worker('slipsomat.cfg')\n\n# Start the browser and log in using the credentials from slipsomat.cfg\nworker.connect()\n\n# Open and parse the letters table\ntable = TemplateConfigurationTable(worker)\n\n# Open the default version of the SmsFulCancelRequestLetter letter\ntable.open_default_letter('xsl/letters/sms/SmsFulCancelRequestLetter.xsl')\n\n# Use Selenium to click some element\nwait = worker.waiter()\nelement = wait.until(EC.element_to_be_clickable((By.XPATH, '//button[@aria-label=\"Open Alma configuration\"]')))\nelement.click()\n```\n\nNote: During development, it might be a good idea to set `default_timeout` in\n`slipsomat.cfg` to a small value (like 3 seconds) to avoid having to wait a\nlong time every time you write a wrong selector.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/scriptotek/alma-slipsomat", "keywords": "alma browser-automation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "slipsomat", "package_url": "https://pypi.org/project/slipsomat/", "platform": "", "project_url": "https://pypi.org/project/slipsomat/", "project_urls": {"Homepage": "https://github.com/scriptotek/alma-slipsomat"}, "release_url": "https://pypi.org/project/slipsomat/0.3.1/", "requires_dist": ["selenium", "colorama", "python-dateutil", "questionary"], "requires_python": "", "summary": "Sync Alma slips & letters", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.org/project/slipsomat/\" rel=\"nofollow\"><img alt=\"PyPI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/215e64f5042bb64e817e20dad118faa09a96f3d6/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f736c6970736f6d61742e737667\"></a>\n<a href=\"https://pypi.org/project/slipsomat/\" rel=\"nofollow\"><img alt=\"PyPI - Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e95774f0f6f55ff9670cec29442c05e6f1cee4d4/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f736c6970736f6d61742e737667\"></a>\n<a href=\"https://github.com/scriptotek/alma-slipsomat/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"PyPI - License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d93e1685e4428db8d9c32b0ce59efb09a4c75fab/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f736c6970736f6d61742e737667\"></a></p>\n<p><code>slipsomat</code> is a small tool for pulling and pushing letters to Alma using\nSelenium browser automation. It allows to you to keep an up-to-date local\ncopy of all the letters, so you can keep them under version control. And\nby storing checksums of all the letters, it can warn you if you're about\nto overwrite a letter that has been modified by someone else without pulling\nin their changes.</p>\n<p>This tool exists because Alma doesn't provide a way to synchronize the letters,\nonly a web form to edit them. With over 100 different letters, editing them\nusing a web form (with no syntax highlighting) is very tedious. We have also\nbrought this up on Ideas Exchange \u2013 feel free to add your vote to\n<a href=\"http://ideas.exlibrisgroup.com/forums/308173-alma/suggestions/12471084-synchronizing-xsl-templates-with-external-systems\" rel=\"nofollow\">our idea there</a>.</p>\n<h2>Setup</h2>\n<p>Slipsomat should work with Python 3.5 and later on most platforms.\nPlease use our\n<a href=\"https://github.com/scriptotek/alma-slipsomat/issues\" rel=\"nofollow\">issue tracker</a>\nto report any problems.</p>\n<p>Install with pip:</p>\n<pre><code>pip install -U slipsomat\n</code></pre>\n<p>Once installed, you can run <code>slipsomat</code> from any directory containing a\n<code>slipsomat.cfg</code> config file.\nTo get started, create an empty directory with a <code>slipsomat.cfg</code> file with the\nfollowing contents:</p>\n<pre><code>[login]\nauth_type=\ndomain=\ninstance=\ninstitution=\nusername=\npassword=\n\n[selenium]\nbrowser=firefox\ndefault_timeout=20\n\n[window]\nwidth=1300\nheight=700\n</code></pre>\n<p>where you fill in the blank values.</p>\n<ul>\n<li>Set <code>auth_type=Feide</code> if you authenticate using Feide SAML. Set <code>auth_type=SAML</code>\nfor Shibboleth or other SAML providers (submit an issue if it doesn't work with\nyour provider!).\nSet <code>auth_type=basic</code> to use the standard Alma login.</li>\n<li><code>domain</code> is your Feide domain, e.g. <code>uio.no</code>. If you don't use Feide as your\nSAML provider, you can leave this empty.</li>\n<li><code>instance</code> is the Alma instance name, which is the first part of your ALMA URL.\nIf your Alma URL is <code>bibsys-k.alma.exlibrisgroup.com</code>, then <code>bibsys-k</code> is the\ninstance name.</li>\n<li><code>institution</code> the Alma institution name, e.g. <code>47BIBSYS_UBO</code></li>\n<li><code>username</code> is your username.</li>\n<li><code>password</code> can be left blank if you want to be asked for it each time. This\nis the recommended solution, since the password is stored in plain text.</li>\n<li><code>browser</code> can be set to <code>firefox</code>, <code>chrome</code> or <code>phantomjs</code>. The corresponding\ndriver must be installed (GeckoDriver for Firefox, ChromeDriver for Chrome).\nI've had success with all three browsers, but from time to time a browser can\nstart crashing or freezing at some point. First thing to try then is to upgrade\nboth Selenium and the browser driver. If there's still problems, switch to\nanother browser for some time. If <em>that</em> doesn't help, there might be an issue\nwith slipsomat. Please file an issue.</li>\n</ul>\n<h2>Debugging</h2>\n<p>If you have <code>inquirer</code> installed (does not work on Windows), slipsomat will give\nyou some options for starting a debug session if the script crashes.</p>\n<h2>Getting started</h2>\n<p>The <code>slipsomat</code> command will give you an interactive shell where you can type various\ncommands. Type <code>help</code> for an overview.</p>\n<p>To get started in an empty directory, type <code>pull</code> to pull in all the XSLT files from your Alma\ninstance and store them in a folder named <code>xsl</code> (will be created if not there already).\nOptionally, type <code>defaults</code> to pull in all default letters too. Note that a <code>status.json</code> file\nis also created. This holds the checksums for all the letters, allowing the script to easily keep\ntrack of which files have been modified (locally or in Alma).</p>\n<p>Once you have a directory with all your files you're free to put them under version control\nif you like. Here's the repo we use for our files: <a href=\"https://github.com/scriptotek/alma-letters-ubo\" rel=\"nofollow\">https://github.com/scriptotek/alma-letters-ubo</a></p>\n<h2>Workflow</h2>\n<p>In a workspace directory (a directory having a <code>slipsomat.cfg</code> file):</p>\n<ol>\n<li>\n<p>Start by doing <code>git pull</code> to pull in changes from other users.</p>\n</li>\n<li>\n<p><code>slipsomat</code> to start the script</p>\n</li>\n<li>\n<p>Optional: the slipsomat command <code>pull</code> will check if any files have been updated\ndirectly in Alma (without using <code>slipsomat</code>), fetch those and update <code>status.json</code>.\nComparison is done by comparing the update date in Alma with the update date in <code>status.json</code>.\nAlma does not provide time granularity for updates, only date, so for files that have been\nmodified today, the script will open the letter in Alma to get the text and calculate a\nchecksum to compare with the checksum in <code>status.json</code>.\nNote: If you skip this step, <code>slipsomat</code> will still warn you if you try to push a\nletter that have been modified remotely (checksums not matching), but then you will\nhave to merge manually.</p>\n</li>\n<li>\n<p>After having made modifications to one or more letters, run the slipsomat command <code>push</code>\nto push the updates to Alma. Comparison is done by comparing checksums of the local files\nwith the checksums in <code>status.json</code>. Before making any changes, the script will print a list\nof files and confirm that you want to upload these.</p>\n</li>\n<li>\n<p>After having tested the modifications, do a <code>git commit</code> (remember to include the updated\n<code>status.json</code>) and <code>git push</code></p>\n</li>\n</ol>\n<p>The shell has a command history, and tab completion. For example <code>test Ful&lt;tab&gt;&lt;tab&gt;</code>.</p>\n<h3>Updating default letters</h3>\n<ul>\n<li>Use the <code>slipsomat</code> command <code>defaults</code> to pull in all default letters.\nNote that the command takes quite some time to run, since all letters have to\nbe checked as Alma provides no information whatsoever on when the default\nletters were last updated.</li>\n</ul>\n<h3>Testing the output of a letter</h3>\n<p>Alma lets you test the output on the Notification Template page, but doing this\nmanually each time is boring, so slipsomat provides you with the <code>test</code> command\nto automate that.</p>\n<p>Create a folder called \"test-data\" in the same folder as the <code>slipsomat.cfg</code> file.\nAdd one or more XML files you want to test there.</p>\n<p>Start <code>slipsomat</code> and run the command</p>\n<pre><code>test filename.xml\n</code></pre>\n<p>where <code>filename.xml</code> is a file in the \"test-data\" folder. This will upload the\nXML file to the Notification Template page and store the resulting HTML output\nand a screenshot in the \"test-data\" folder.</p>\n<p>To test multiple files at the same time, you can use Unix style pathname pattern\nexpansion (\"globbing\"). E.g. to test all XML files in the \"test-data\" folder, use the\n<code>*</code> wildcard character:</p>\n<pre><code>test *.xml\n</code></pre>\n<p>By default, the command will use English as the letter language. To test\nanother language, just append <code>@</code> and the language code to the filename.\nExample:</p>\n<pre><code>test filename.xml@nn\n</code></pre>\n<p>You can even test multiple languages in one go by specifying multiple language\ncodes separated by comma like so:</p>\n<pre><code>test filename.xml@en,no,nn\n</code></pre>\n<p>This can also be used in combination with globbing. To test all XML files in the\n\"test-data\" folder in three languages:</p>\n<pre><code>test *.xml@en,no,nn\n</code></pre>\n<h2>See also</h2>\n<ul>\n<li><a href=\"https://github.com/scriptotek/alma-slipsomat/issues\" rel=\"nofollow\">open issues</a></li>\n<li>the <a href=\"https://github.com/scriptotek/alma-letters-ubo\" rel=\"nofollow\">alma-letters-ubo repo</a> for our XSLT files</li>\n</ul>\n<h2>Development</h2>\n<h3>Editable install</h3>\n<p>If you want an <em>editable install</em> that you can hack on yourself:</p>\n<pre><code>git clone https://github.com/scriptotek/alma-slipsomat.git\ncd alma-slipsomat\npip install -U -e .\n</code></pre>\n<h3>Using slipsomat as a Python library</h3>\n<p>Given that you have created a <code>slipsomat.cfg</code> file, here's how to start\nexperimenting:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">selenium.webdriver.common.by</span> <span class=\"kn\">import</span> <span class=\"n\">By</span>\n<span class=\"kn\">from</span> <span class=\"nn\">selenium.webdriver.support</span> <span class=\"kn\">import</span> <span class=\"n\">expected_conditions</span> <span class=\"k\">as</span> <span class=\"n\">EC</span>\n<span class=\"kn\">from</span> <span class=\"nn\">slipsomat.worker</span> <span class=\"kn\">import</span> <span class=\"n\">Worker</span>\n<span class=\"kn\">from</span> <span class=\"nn\">slipsomat.slipsomat</span> <span class=\"kn\">import</span> <span class=\"n\">TemplateConfigurationTable</span>\n\n<span class=\"n\">worker</span> <span class=\"o\">=</span> <span class=\"n\">Worker</span><span class=\"p\">(</span><span class=\"s1\">'slipsomat.cfg'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Start the browser and log in using the credentials from slipsomat.cfg</span>\n<span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># Open and parse the letters table</span>\n<span class=\"n\">table</span> <span class=\"o\">=</span> <span class=\"n\">TemplateConfigurationTable</span><span class=\"p\">(</span><span class=\"n\">worker</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Open the default version of the SmsFulCancelRequestLetter letter</span>\n<span class=\"n\">table</span><span class=\"o\">.</span><span class=\"n\">open_default_letter</span><span class=\"p\">(</span><span class=\"s1\">'xsl/letters/sms/SmsFulCancelRequestLetter.xsl'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Use Selenium to click some element</span>\n<span class=\"n\">wait</span> <span class=\"o\">=</span> <span class=\"n\">worker</span><span class=\"o\">.</span><span class=\"n\">waiter</span><span class=\"p\">()</span>\n<span class=\"n\">element</span> <span class=\"o\">=</span> <span class=\"n\">wait</span><span class=\"o\">.</span><span class=\"n\">until</span><span class=\"p\">(</span><span class=\"n\">EC</span><span class=\"o\">.</span><span class=\"n\">element_to_be_clickable</span><span class=\"p\">((</span><span class=\"n\">By</span><span class=\"o\">.</span><span class=\"n\">XPATH</span><span class=\"p\">,</span> <span class=\"s1\">'//button[@aria-label=\"Open Alma configuration\"]'</span><span class=\"p\">)))</span>\n<span class=\"n\">element</span><span class=\"o\">.</span><span class=\"n\">click</span><span class=\"p\">()</span>\n</pre>\n<p>Note: During development, it might be a good idea to set <code>default_timeout</code> in\n<code>slipsomat.cfg</code> to a small value (like 3 seconds) to avoid having to wait a\nlong time every time you write a wrong selector.</p>\n\n          </div>"}, "last_serial": 5188555, "releases": {"0.2.1": [{"comment_text": "", "digests": {"md5": "d8e264d19a387ebab25c56d549d7bbed", "sha256": "92cab58a27206fb115e1028f90ae361f1b05b50dd916063f7b383b70289a557e"}, "downloads": -1, "filename": "slipsomat-0.2.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d8e264d19a387ebab25c56d549d7bbed", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17091, "upload_time": "2018-05-10T20:37:49", "upload_time_iso_8601": "2018-05-10T20:37:49.857730Z", "url": "https://files.pythonhosted.org/packages/83/3a/b297add2b55a14c74535f367cd182688d19406b3133927e4744ea6ceb06c/slipsomat-0.2.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "77688ef8c937c52a5f7b10d63799dda1", "sha256": "58f89a8434ec62498e86ca89ac393048100b07a15e6f72c4fa880fb90c001ecb"}, "downloads": -1, "filename": "slipsomat-0.2.1.tar.gz", "has_sig": false, "md5_digest": "77688ef8c937c52a5f7b10d63799dda1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15906, "upload_time": "2018-05-10T20:37:51", "upload_time_iso_8601": "2018-05-10T20:37:51.386851Z", "url": "https://files.pythonhosted.org/packages/db/6b/fa39ebfe1d6ad7bd3a7bf541631cfb8b247966bedb391f9e29bb78e58baf/slipsomat-0.2.1.tar.gz", "yanked": false}], "0.2.2": [{"comment_text": "", "digests": {"md5": "cf7c943852b31e20381ca1e3d40c5cb4", "sha256": "6fa31348f1a314b7d56ab99eb4ce377bdcdf6921ff7ae5202b24f4a6f40ade5b"}, "downloads": -1, "filename": "slipsomat-0.2.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf7c943852b31e20381ca1e3d40c5cb4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17112, "upload_time": "2018-05-10T21:26:50", "upload_time_iso_8601": "2018-05-10T21:26:50.889091Z", "url": "https://files.pythonhosted.org/packages/1b/13/34028a099aaca77a78a4611fefdf1647a9f7cf19ecd791407a463920c88b/slipsomat-0.2.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4dceeffb0e8c09b97b9030d45582ac6f", "sha256": "d4a0ad7d0742da8bd323d46b08616d36f8862c6297c1484c936d05f696a275fe"}, "downloads": -1, "filename": "slipsomat-0.2.2.tar.gz", "has_sig": false, "md5_digest": "4dceeffb0e8c09b97b9030d45582ac6f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16020, "upload_time": "2018-05-10T21:26:52", "upload_time_iso_8601": "2018-05-10T21:26:52.527007Z", "url": "https://files.pythonhosted.org/packages/38/78/307c2c0c4903768963a203890b57940ed39a512447e251a41758180b4f1d/slipsomat-0.2.2.tar.gz", "yanked": false}], "0.2.4": [{"comment_text": "", "digests": {"md5": "571b93c977bc48360090664605ec0e26", "sha256": "cb78614414ad06695d53ffb52b0dc62b88a71f2600a9f0f380aca6c9bb3be20b"}, "downloads": -1, "filename": "slipsomat-0.2.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "571b93c977bc48360090664605ec0e26", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17128, "upload_time": "2018-05-23T15:13:51", "upload_time_iso_8601": "2018-05-23T15:13:51.409138Z", "url": "https://files.pythonhosted.org/packages/ae/e2/9e65449779cd2fee97445588db908469f24c015afe3c95b453e3eb29cfa7/slipsomat-0.2.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3bcfb9739e8ec35c04b0842568958f46", "sha256": "63b47b4dd9d3830a2a1951081cada7b7204c34e797e564fc4fa14a27003f37e2"}, "downloads": -1, "filename": "slipsomat-0.2.4.tar.gz", "has_sig": false, "md5_digest": "3bcfb9739e8ec35c04b0842568958f46", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16050, "upload_time": "2018-05-23T15:13:53", "upload_time_iso_8601": "2018-05-23T15:13:53.267802Z", "url": "https://files.pythonhosted.org/packages/de/b4/42b7b8ad005616d438e6e46f7700c6faac25cece8a2af58ca31e26d5195b/slipsomat-0.2.4.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "440c6f5bb9479e267793c7fda5411712", "sha256": "cda0d75cdde8e2845c90097143445fc6c0756a165cc88de41c4eebb316aae75b"}, "downloads": -1, "filename": "slipsomat-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "440c6f5bb9479e267793c7fda5411712", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17140, "upload_time": "2018-09-25T12:15:18", "upload_time_iso_8601": "2018-09-25T12:15:18.415596Z", "url": "https://files.pythonhosted.org/packages/08/2f/58c03205c2dd906b36bf80fdf1988545d9cea66940fd67dc4c721a54654a/slipsomat-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0105a99e4df5123cee87bfe096132a76", "sha256": "7dbc078c902dba1eeee8639e5a6ad40f95086fb31cc10ccd5922826362d1983e"}, "downloads": -1, "filename": "slipsomat-0.2.6.tar.gz", "has_sig": false, "md5_digest": "0105a99e4df5123cee87bfe096132a76", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16065, "upload_time": "2018-09-25T12:15:20", "upload_time_iso_8601": "2018-09-25T12:15:20.841345Z", "url": "https://files.pythonhosted.org/packages/39/b8/0a66c57cd1a421e57acef9eba22934cccd0b8502b4c4a787c382d267bcf2/slipsomat-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "deb6781b2baf054d29edbc577c1277af", "sha256": "268ee0dab2f7cc00f623d89964e198b331dac25c330e6f9eb303de688e665f0d"}, "downloads": -1, "filename": "slipsomat-0.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "deb6781b2baf054d29edbc577c1277af", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17193, "upload_time": "2018-11-14T19:23:50", "upload_time_iso_8601": "2018-11-14T19:23:50.272678Z", "url": "https://files.pythonhosted.org/packages/de/b9/95a98c7391a3ec274fa6f94671e35ba01e5156478f3a355d4337274002b3/slipsomat-0.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8bf65314e9726d471c6a84bc38fb8c28", "sha256": "fd70498633ffa3551f1f4162065c0aa11f79be398e3e9bed10c7191d3f1e25e9"}, "downloads": -1, "filename": "slipsomat-0.2.7.tar.gz", "has_sig": false, "md5_digest": "8bf65314e9726d471c6a84bc38fb8c28", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 19679, "upload_time": "2018-11-14T19:23:52", "upload_time_iso_8601": "2018-11-14T19:23:52.235977Z", "url": "https://files.pythonhosted.org/packages/04/9b/cd2fab52141f2cd4696cf0554ee016e74814d5fba5149caa0e7bcbcc3890/slipsomat-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "58a4b8d1f5a9a50b5e6d7bff339dceb7", "sha256": "4c623aa6582b43056a40af531b783d56392f3b7f4646a49f379d3cd40895ee14"}, "downloads": -1, "filename": "slipsomat-0.2.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "58a4b8d1f5a9a50b5e6d7bff339dceb7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17245, "upload_time": "2019-01-08T16:05:25", "upload_time_iso_8601": "2019-01-08T16:05:25.944333Z", "url": "https://files.pythonhosted.org/packages/55/01/e64dc177b7defefd6eba97f9df28612e6776494b6ad5cff175ec149a4c82/slipsomat-0.2.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "8a1e553929a13181ce825a2867dd155e", "sha256": "dd942977ae170b72a550e35cfa76045b0d9afb412601e65e03f4be443193d3d9"}, "downloads": -1, "filename": "slipsomat-0.2.8.tar.gz", "has_sig": false, "md5_digest": "8a1e553929a13181ce825a2867dd155e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16157, "upload_time": "2019-01-08T16:05:27", "upload_time_iso_8601": "2019-01-08T16:05:27.904250Z", "url": "https://files.pythonhosted.org/packages/b1/bc/1956b55df401857096d0d16375c416a50dec007c71715de161bdff017c51/slipsomat-0.2.8.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "39b28e365e64da2c94a349eb6f76ca0a", "sha256": "f023b70dbe53127062fcbe9f35edefb734104dbef1803d9b6d823b6b8d6e9943"}, "downloads": -1, "filename": "slipsomat-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "39b28e365e64da2c94a349eb6f76ca0a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17339, "upload_time": "2019-02-05T10:23:03", "upload_time_iso_8601": "2019-02-05T10:23:03.640085Z", "url": "https://files.pythonhosted.org/packages/4c/19/44c84e4b3f1ab0d9294963b3ac08ba04f0da6a1831e96c12c8fd891409d7/slipsomat-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3d4ca102859591d6bb6f72b2af510a62", "sha256": "a4448ee1e1f84fdd9330ab74f2d1a73992876e992d4100342b16b6d582a77a47"}, "downloads": -1, "filename": "slipsomat-0.3.0.tar.gz", "has_sig": false, "md5_digest": "3d4ca102859591d6bb6f72b2af510a62", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16221, "upload_time": "2019-02-05T10:23:05", "upload_time_iso_8601": "2019-02-05T10:23:05.568341Z", "url": "https://files.pythonhosted.org/packages/94/27/26c90bfb8f79542ae531afa6a7f5bb02432b7db13e75ae6f22121749000b/slipsomat-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "61671771cec989e90bd05450bc11c294", "sha256": "eb0a598b3a35ed1289781d8816aae9845e101f3f837f5aaf4c65729bdbd47ec6"}, "downloads": -1, "filename": "slipsomat-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61671771cec989e90bd05450bc11c294", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17388, "upload_time": "2019-04-25T15:06:18", "upload_time_iso_8601": "2019-04-25T15:06:18.134782Z", "url": "https://files.pythonhosted.org/packages/d5/4b/a52e10c1e502d498be2a6efa9fde252163b8571c61308cf1239102be6bc5/slipsomat-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df0f75919ed417d940cc03432a9a9d2f", "sha256": "698e262dcb10322b1b4242f9aa77f954b27b149a7136630327d7aa9d8cc226cc"}, "downloads": -1, "filename": "slipsomat-0.3.1.tar.gz", "has_sig": false, "md5_digest": "df0f75919ed417d940cc03432a9a9d2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16301, "upload_time": "2019-04-25T15:06:21", "upload_time_iso_8601": "2019-04-25T15:06:21.882517Z", "url": "https://files.pythonhosted.org/packages/86/55/6bcf796caf9b5913c695c221ba0d7267fea4cdb3ebcf809cf98f0d98a2a8/slipsomat-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "61671771cec989e90bd05450bc11c294", "sha256": "eb0a598b3a35ed1289781d8816aae9845e101f3f837f5aaf4c65729bdbd47ec6"}, "downloads": -1, "filename": "slipsomat-0.3.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "61671771cec989e90bd05450bc11c294", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 17388, "upload_time": "2019-04-25T15:06:18", "upload_time_iso_8601": "2019-04-25T15:06:18.134782Z", "url": "https://files.pythonhosted.org/packages/d5/4b/a52e10c1e502d498be2a6efa9fde252163b8571c61308cf1239102be6bc5/slipsomat-0.3.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "df0f75919ed417d940cc03432a9a9d2f", "sha256": "698e262dcb10322b1b4242f9aa77f954b27b149a7136630327d7aa9d8cc226cc"}, "downloads": -1, "filename": "slipsomat-0.3.1.tar.gz", "has_sig": false, "md5_digest": "df0f75919ed417d940cc03432a9a9d2f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16301, "upload_time": "2019-04-25T15:06:21", "upload_time_iso_8601": "2019-04-25T15:06:21.882517Z", "url": "https://files.pythonhosted.org/packages/86/55/6bcf796caf9b5913c695c221ba0d7267fea4cdb3ebcf809cf98f0d98a2a8/slipsomat-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:08:20 2020"}