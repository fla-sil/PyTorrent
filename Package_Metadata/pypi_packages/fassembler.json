{"info": {"author": "Ian Bicking, Paul Winkler, Josh Bronson, Ethan Jucovy", "author_email": "opencore-dev@lists.coactivate.org", "bugtrack_url": null, "classifiers": [], "description": "This is fassembler, the build system for OpenCore\nHome page: http://www.coactivate.org/projects/fassembler/project-home\n\n\nOverview\n========\n\nThis could be general-purpose build software a la GNU Make, Buildit,\net al.  But it's developed specifically for the build and deployment\nneeds of the software that runs CoActivate.org.\n\n\nHow to Use Fassembler\n=====================\n\nSee http://www.coactivate.org/projects/fassembler/howto\n\nRequirements\n============\n\nPython >= 2.4\n\n... and?\n\n\nLicense\n========\n\nSee doc/license.txt\n\n\nHacking Fassembler\n===================\n\n\nTo add a project\n----------------\n\n* Create a subclass of fassembler.project:Project\n\n* Add an entry point to setup() in setup.py\n\n* Update doc/ports.txt and fassembler.topp:CheckBasePorts.port_range\n  if needed.\n\n\n\nChanges\n=======\n\n0.7\n===\n\nFassembler changes\n------------------\n\n* Added a new `tasks.InstallSpecIfPresent` which checks if the path\n  to the requirements spec is present on the filesystem, and does\n  nothing if the file does not exist.\n\n* `tasks.VirtualEnv(never_create_virtualenv=True)` no longer runs\n  any subtasks.\n\n* Added a new Task `fassembler.apache.CheckApache` which will check\n  the presence a list of required Apache modules.  It must be called\n  from a Project that subclasses `fassembler.apache.ApacheMixin`.\n\nProject changes\n---------------\n\n* fassembler:topp now installs requirements/fassembler-req.txt into \n  the fassembler virtualenv if that file is present.  This file can\n  specify add-on packages that provide additional fassembler projects\n  to be used in the rest of the build.\n\n  This action was previously done by the `rebuild-opencore-site` script\n  in `opencore-fassembler_boot` and is being moved here for better\n  encapsulation of builds.  (A build *should* be able to be run entirely\n  from fassembler; opencore-fassembler_boot should just be a convenience\n  package that wraps fassembler's more arcane knowledge.)\n\n* Various configuration changes in fassembler:buildmaster and buildslave.\n\n* fassembler:wordpress now checks for the presence of its required Apache\n  modules, including the Apache PHP module.\n\n* Bake in pinned requirements for opencore's i18ndude sub-project.\n\n0.6\n===\n\nFassembler changes\n------------------\n\n* Fassembler has hardcoded expectations that the user's $LANG is\n  English -- Maker._get_repo_url parses an error message from\n  Subversion with the assumption that it is in English. This manifests\n  when running fassembler:topp while it runs `svn info` on the etc\n  directory in a new build, which will exist as an unversioned\n  directory.\n\n  It now works if the user's $LANG is Spanish, as well.  But no other\n  languages!\n\n  Of course, this is extremely silly, and should be fixed more\n  properly immediately.\n\n* When installing a virtualenv, install setuptools 0.6c11 into the new\n  virtualenv, always.  This prevents problems on systems whose\n  virtualenv version installs the broken setuptools 0.6c8 by\n  default. Symptoms: errors like \"unrecognized format\" and \"global\n  name 'log' is not defined\".\n\n* Fix sporadic bug in projects where ``use_pip=True``: \"The expected\n  executable ['pip', '-E', ...] was not found.\"  When\n  ``use_pip=True``, Fassembler will now ``easy_install pip`` during\n  virtualenv creation, and will add the ``virtualenv_bin_path`` to $PATH\n  before trying to run ``pip``. This should guarantee that the\n  executable ``pip`` can be found.\n\nProject changes\n---------------\n\n* Add a boolean ``use_pip`` setting to fassembler:cabochon project. \n  Default fassembler:cabochon to use pip instead of easy_install,\n  because it seems to work better here.\n\n* Modify zeo skel's configuration to use {{env.var}}/zeo/zdsock (a\n  unix socket) instead of a port for connections.  Modify zope skels'\n  configuration to connect to zeo on {{env.var}}/zeo/zdsock as\n  well. See\n  http://www.coactivate.org/projects/opencore/lists/opencore-dev/archive/2010/07/1278617074321/forum_view\n\n* The RunZopeScriptsWithZeo task now looks for a\n  config.skip_zopectl_scripts setting.  If it is set to a True value,\n  the task does nothing.  This can be used to prevent the build from\n  hanging on this task if another ZEO instance is already running and\n  the user knows that the zopectl initialization scripts don't need to\n  be run, i.e. when building a code upgrade in parallel to a running\n  site.\n\n* The fassembler:maildrop and fassembler:zeo projects now include this\n  skip_zopectl_scripts setting, with default 0.\n\n* Add a setting ``supervisor_var`` to the supervisor project, which\n  defaults to ``{{env.var}}/supervisor``.  This is used to build the\n  paths to the Unix socket file and pidfile used by supervisor.  It\n  can be useful to set this to a value other than\n  ``{{env.var}}/supervisor`` if building an upgrade in parallel to a\n  running site, so that both the old and the new supervisor processes\n  can run simultaneously without interference.\n\n* The extrazope project now runs ``python setup.py zinstall`` in the\n  zcmlloader source directory to copy zcmlloader's zcml entrypoint\n  into each additional Zope's package-includes.  (At some point soon\n  opencore will stop using zcmlloader in favor of z3c.autoinclude, at\n  which point these zinstalls won't be needed anymore.) \n\n* The extrazope project now creates a separate var directory for each\n  instance and points to that directory in zope.conf for the\n  instance's pidfile, lock file, etc.\n\n0.5\n===\n\n* Add ``num_extra_zopes`` property to the environ object, which looks\n  for a ``num_extra_zopes`` setting in the [general] section of\n  build.ini and returns it as an integer or 0 if no such setting\n  exists. \n\n* This setting will then be used to fill in the value of\n  ``opencore_remote_uri`` in the Frontend configuration, allowing the\n  frontend to proxy to a load-balanced set of Zope instances. \n\n* A ``num_extra_zopes`` setting has also been added to the\n  fassembler:topp project, where it is saved to build.ini.\n\n0.4\n===\n\nThis is the first tag made for fassembler.  A lot happened before now \nbut releases were never cut.\n\nIn this release:\n\n* Added fassembler:extrazope project, which will build an additional\n  Zope instance connected to the same ZEO server. \n\n* In fassembler:opencore, made the ``debug`` setting actually work, to\n  control whether zope starts in debug mode when running\n  ``./opencore/bin/zopectl fg`` (where it previously always ran with\n  ``debug-mode=on``) or ``./bin/start-opencore`` (where it previously\n  always ran with ``debug-mode=off``) \n\n* Added a setting ``never_create_virtualenv`` for\n  fassembler.tasks.VirtualEnv, which, if set, makes that task act as\n  an assertion of the given virtualenv's existence, so that a build\n  can fail if the virtualenv hasn't already been created.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.coactivate.org/projects/fassembler", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "fassembler", "package_url": "https://pypi.org/project/fassembler/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/fassembler/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://www.coactivate.org/projects/fassembler"}, "release_url": "https://pypi.org/project/fassembler/0.7/", "requires_dist": null, "requires_python": null, "summary": "Builder for OpenCore", "version": "0.7", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>This is fassembler, the build system for OpenCore\nHome page: <a href=\"http://www.coactivate.org/projects/fassembler/project-home\" rel=\"nofollow\">http://www.coactivate.org/projects/fassembler/project-home</a></p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>This could be general-purpose build software a la GNU Make, Buildit,\net al.  But it\u2019s developed specifically for the build and deployment\nneeds of the software that runs CoActivate.org.</p>\n</div>\n<div id=\"how-to-use-fassembler\">\n<h2>How to Use Fassembler</h2>\n<p>See <a href=\"http://www.coactivate.org/projects/fassembler/howto\" rel=\"nofollow\">http://www.coactivate.org/projects/fassembler/howto</a></p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Python &gt;= 2.4</p>\n<p>\u2026 and?</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>See doc/license.txt</p>\n</div>\n<div id=\"hacking-fassembler\">\n<h2>Hacking Fassembler</h2>\n<h2 id=\"to-add-a-project\"><span class=\"section-subtitle\">To add a project</span></h2>\n<ul>\n<li>Create a subclass of fassembler.project:Project</li>\n<li>Add an entry point to setup() in setup.py</li>\n<li>Update doc/ports.txt and fassembler.topp:CheckBasePorts.port_range\nif needed.</li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n</div>\n<div id=\"id1\">\n<h2>0.7</h2>\n<div id=\"fassembler-changes\">\n<h3>Fassembler changes</h3>\n<ul>\n<li>Added a new <cite>tasks.InstallSpecIfPresent</cite> which checks if the path\nto the requirements spec is present on the filesystem, and does\nnothing if the file does not exist.</li>\n<li><cite>tasks.VirtualEnv(never_create_virtualenv=True)</cite> no longer runs\nany subtasks.</li>\n<li>Added a new Task <cite>fassembler.apache.CheckApache</cite> which will check\nthe presence a list of required Apache modules.  It must be called\nfrom a Project that subclasses <cite>fassembler.apache.ApacheMixin</cite>.</li>\n</ul>\n</div>\n<div id=\"project-changes\">\n<h3>Project changes</h3>\n<ul>\n<li><p>fassembler:topp now installs requirements/fassembler-req.txt into\nthe fassembler virtualenv if that file is present.  This file can\nspecify add-on packages that provide additional fassembler projects\nto be used in the rest of the build.</p>\n<p>This action was previously done by the <cite>rebuild-opencore-site</cite> script\nin <cite>opencore-fassembler_boot</cite> and is being moved here for better\nencapsulation of builds.  (A build <em>should</em> be able to be run entirely\nfrom fassembler; opencore-fassembler_boot should just be a convenience\npackage that wraps fassembler\u2019s more arcane knowledge.)</p>\n</li>\n<li><p>Various configuration changes in fassembler:buildmaster and buildslave.</p>\n</li>\n<li><p>fassembler:wordpress now checks for the presence of its required Apache\nmodules, including the Apache PHP module.</p>\n</li>\n<li><p>Bake in pinned requirements for opencore\u2019s i18ndude sub-project.</p>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"id2\">\n<h2>0.6</h2>\n<div id=\"id3\">\n<h3>Fassembler changes</h3>\n<ul>\n<li><p>Fassembler has hardcoded expectations that the user\u2019s $LANG is\nEnglish \u2013 Maker._get_repo_url parses an error message from\nSubversion with the assumption that it is in English. This manifests\nwhen running fassembler:topp while it runs <cite>svn info</cite> on the etc\ndirectory in a new build, which will exist as an unversioned\ndirectory.</p>\n<p>It now works if the user\u2019s $LANG is Spanish, as well.  But no other\nlanguages!</p>\n<p>Of course, this is extremely silly, and should be fixed more\nproperly immediately.</p>\n</li>\n<li><p>When installing a virtualenv, install setuptools 0.6c11 into the new\nvirtualenv, always.  This prevents problems on systems whose\nvirtualenv version installs the broken setuptools 0.6c8 by\ndefault. Symptoms: errors like \u201cunrecognized format\u201d and \u201cglobal\nname \u2018log\u2019 is not defined\u201d.</p>\n</li>\n<li><p>Fix sporadic bug in projects where <tt>use_pip=True</tt>: \u201cThe expected\nexecutable [\u2018pip\u2019, \u2018-E\u2019, \u2026] was not found.\u201d  When\n<tt>use_pip=True</tt>, Fassembler will now <tt>easy_install pip</tt> during\nvirtualenv creation, and will add the <tt>virtualenv_bin_path</tt> to $PATH\nbefore trying to run <tt>pip</tt>. This should guarantee that the\nexecutable <tt>pip</tt> can be found.</p>\n</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>Project changes</h3>\n<ul>\n<li>Add a boolean <tt>use_pip</tt> setting to fassembler:cabochon project.\nDefault fassembler:cabochon to use pip instead of easy_install,\nbecause it seems to work better here.</li>\n<li>Modify zeo skel\u2019s configuration to use {{env.var}}/zeo/zdsock (a\nunix socket) instead of a port for connections.  Modify zope skels\u2019\nconfiguration to connect to zeo on {{env.var}}/zeo/zdsock as\nwell. See\n<a href=\"http://www.coactivate.org/projects/opencore/lists/opencore-dev/archive/2010/07/1278617074321/forum_view\" rel=\"nofollow\">http://www.coactivate.org/projects/opencore/lists/opencore-dev/archive/2010/07/1278617074321/forum_view</a></li>\n<li>The RunZopeScriptsWithZeo task now looks for a\nconfig.skip_zopectl_scripts setting.  If it is set to a True value,\nthe task does nothing.  This can be used to prevent the build from\nhanging on this task if another ZEO instance is already running and\nthe user knows that the zopectl initialization scripts don\u2019t need to\nbe run, i.e. when building a code upgrade in parallel to a running\nsite.</li>\n<li>The fassembler:maildrop and fassembler:zeo projects now include this\nskip_zopectl_scripts setting, with default 0.</li>\n<li>Add a setting <tt>supervisor_var</tt> to the supervisor project, which\ndefaults to <tt><span class=\"pre\">{{env.var}}/supervisor</span></tt>.  This is used to build the\npaths to the Unix socket file and pidfile used by supervisor.  It\ncan be useful to set this to a value other than\n<tt><span class=\"pre\">{{env.var}}/supervisor</span></tt> if building an upgrade in parallel to a\nrunning site, so that both the old and the new supervisor processes\ncan run simultaneously without interference.</li>\n<li>The extrazope project now runs <tt>python setup.py zinstall</tt> in the\nzcmlloader source directory to copy zcmlloader\u2019s zcml entrypoint\ninto each additional Zope\u2019s package-includes.  (At some point soon\nopencore will stop using zcmlloader in favor of z3c.autoinclude, at\nwhich point these zinstalls won\u2019t be needed anymore.)</li>\n<li>The extrazope project now creates a separate var directory for each\ninstance and points to that directory in zope.conf for the\ninstance\u2019s pidfile, lock file, etc.</li>\n</ul>\n</div>\n</div>\n<div id=\"id5\">\n<h2>0.5</h2>\n<ul>\n<li>Add <tt>num_extra_zopes</tt> property to the environ object, which looks\nfor a <tt>num_extra_zopes</tt> setting in the [general] section of\nbuild.ini and returns it as an integer or 0 if no such setting\nexists.</li>\n<li>This setting will then be used to fill in the value of\n<tt>opencore_remote_uri</tt> in the Frontend configuration, allowing the\nfrontend to proxy to a load-balanced set of Zope instances.</li>\n<li>A <tt>num_extra_zopes</tt> setting has also been added to the\nfassembler:topp project, where it is saved to build.ini.</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h2>0.4</h2>\n<p>This is the first tag made for fassembler.  A lot happened before now\nbut releases were never cut.</p>\n<p>In this release:</p>\n<ul>\n<li>Added fassembler:extrazope project, which will build an additional\nZope instance connected to the same ZEO server.</li>\n<li>In fassembler:opencore, made the <tt>debug</tt> setting actually work, to\ncontrol whether zope starts in debug mode when running\n<tt>./opencore/bin/zopectl fg</tt> (where it previously always ran with\n<tt><span class=\"pre\">debug-mode=on</span></tt>) or <tt><span class=\"pre\">./bin/start-opencore</span></tt> (where it previously\nalways ran with <tt><span class=\"pre\">debug-mode=off</span></tt>)</li>\n<li>Added a setting <tt>never_create_virtualenv</tt> for\nfassembler.tasks.VirtualEnv, which, if set, makes that task act as\nan assertion of the given virtualenv\u2019s existence, so that a build\ncan fail if the virtualenv hasn\u2019t already been created.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 791891, "releases": {"0.4": [{"comment_text": "", "digests": {"md5": "9602bbec3382fd195067fc80e367b639", "sha256": "2c90be68602bb44c3ce67ff4b4c18807b6c39180c0aa21c3e8c538adb9dd82a8"}, "downloads": -1, "filename": "fassembler-0.4.tar.gz", "has_sig": false, "md5_digest": "9602bbec3382fd195067fc80e367b639", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 230083, "upload_time": "2010-08-13T17:34:37", "upload_time_iso_8601": "2010-08-13T17:34:37.608138Z", "url": "https://files.pythonhosted.org/packages/5d/c7/4a55bb73ec583180bc76d8086809c43623fa93f65a55cc80464de7c133ed/fassembler-0.4.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "f497cd46e8bfcab9d617e6bb12384f17", "sha256": "a3ae2bb6eb79de95e69e8953175d08946aac013a6672241c5b020367d35ac50a"}, "downloads": -1, "filename": "fassembler-0.5.tar.gz", "has_sig": false, "md5_digest": "f497cd46e8bfcab9d617e6bb12384f17", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 230725, "upload_time": "2010-08-15T19:35:12", "upload_time_iso_8601": "2010-08-15T19:35:12.904523Z", "url": "https://files.pythonhosted.org/packages/60/63/bf02f14f0b30ccfd80f0facd8a5b86e38d73a23a015e0836fe4b2c51e9b7/fassembler-0.5.tar.gz", "yanked": false}], "0.6": [{"comment_text": "", "digests": {"md5": "88b185ec588d1fbb2512f4b2557fd813", "sha256": "5ea8380b7885fb0a7d440d01e0fc050e19df403ebcaf6b628a53ed078f4bec82"}, "downloads": -1, "filename": "fassembler-0.6.tar.gz", "has_sig": false, "md5_digest": "88b185ec588d1fbb2512f4b2557fd813", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 234795, "upload_time": "2010-09-04T06:07:11", "upload_time_iso_8601": "2010-09-04T06:07:11.711216Z", "url": "https://files.pythonhosted.org/packages/23/b8/f4902607496d47ccadd2f183dda85f21da79ebb0c64c78178dc425589b21/fassembler-0.6.tar.gz", "yanked": false}], "0.7": [{"comment_text": "", "digests": {"md5": "c17a015eced741149de79f641ffb6bff", "sha256": "887d2256538aae82f2ae8b07f145220764606476652ed2c3236c5a0453a861d5"}, "downloads": -1, "filename": "fassembler-0.7.tar.gz", "has_sig": false, "md5_digest": "c17a015eced741149de79f641ffb6bff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78023, "upload_time": "2012-06-18T15:51:59", "upload_time_iso_8601": "2012-06-18T15:51:59.415646Z", "url": "https://files.pythonhosted.org/packages/15/c6/3f97ea0f4a6dabc2c70c1ebb25489d678dfd7ca9d099c7f32e1ebd63dd4d/fassembler-0.7.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c17a015eced741149de79f641ffb6bff", "sha256": "887d2256538aae82f2ae8b07f145220764606476652ed2c3236c5a0453a861d5"}, "downloads": -1, "filename": "fassembler-0.7.tar.gz", "has_sig": false, "md5_digest": "c17a015eced741149de79f641ffb6bff", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78023, "upload_time": "2012-06-18T15:51:59", "upload_time_iso_8601": "2012-06-18T15:51:59.415646Z", "url": "https://files.pythonhosted.org/packages/15/c6/3f97ea0f4a6dabc2c70c1ebb25489d678dfd7ca9d099c7f32e1ebd63dd4d/fassembler-0.7.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:42 2020"}