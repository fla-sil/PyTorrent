{"info": {"author": "adder46", "author_email": "dedmauz69@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# tktimer \n\n**tktimer** is a set of tkinter widgets which includes a Stopwatch widget and a Countdown widget.\n\n## installing tktimer\n\n**tktimer** is available on PyPI:\n\n```sh\n$ pip install tktimer\n```\n\n## using tktimer\n\nTimers have two methods: `start` and `pause`.\n\nHere is an example program:\n\n```python\nimport tkinter as tk\n\nfrom tktimer import Countdown\n\nroot = tk.Tk()\ntimer = Countdown(root)\ntimer.grid(row=0, column=0, columnspan=2, sticky=\"nswe\")\ntk.Button(root, text=\"Start\", command=timer.start).grid(row=1, column=0)\ntk.Button(root, text=\"Pause\", command=timer.pause).grid(row=1, column=1)\nroot.mainloop()\n```\n\n**Available options**:\n\n\n|     option      | description |  default  |\n| --------- |:------------------|----------|\n| `parent`  | set the parent widget                                                             |           |\n| `prefix`  | set text before timer value                                                       |    `\"\"`    |\n| `suffix`  | set text after timer value.                                                       |    `\"\"`    |\n| `unit`    | set the unit (available: `seconds`, `minutes`, `hours`, `days`, `weeks`, `years`) | `seconds` |\n| `beginning` | set starting point (in seconds). specific to `Countdown`.                         |    `10`    |\n| `update_every`| set updating time every X milliseconds.                                           |    `10`    |\n| `precision`   | set counting precision (number of digits after the decimal point).         |     `2`     |\n| `time_elapsed`| set time elapsed (in seconds). specific to `Stopwatch`.                           |    `10`    |\n\n## FAQ\n\n**How can I continue the timer after restarting my app?**\n\nYou can get the elapsed time (in seconds) with `timer.value.get()` on exit and set `time_elapsed` later on, which will make the timer start counting from `time_elapsed`. For `Countdown`, tweak `beginning` instead of `time_elapsed`.\n\n**I'm not happy with how my timer looks like. Can I change its appearance?**\n\nYes, timers are ultimately just tkinter labels, which means you can do anything you would to an ordinary `tkinter.Label`. For example, to change the font, you can do:\n\n```python\ntimer.label.configure(font=\"Helvetica 18 bold\")\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/adder46/tktimer", "keywords": "timer stopwatch countdown tkinter", "license": "", "maintainer": "", "maintainer_email": "", "name": "tktimer", "package_url": "https://pypi.org/project/tktimer/", "platform": "", "project_url": "https://pypi.org/project/tktimer/", "project_urls": {"Homepage": "https://github.com/adder46/tktimer"}, "release_url": "https://pypi.org/project/tktimer/0.0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Set of timer (stopwatch & countdown) widgets for tkinter", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>tktimer</h1>\n<p><strong>tktimer</strong> is a set of tkinter widgets which includes a Stopwatch widget and a Countdown widget.</p>\n<h2>installing tktimer</h2>\n<p><strong>tktimer</strong> is available on PyPI:</p>\n<pre>$ pip install tktimer\n</pre>\n<h2>using tktimer</h2>\n<p>Timers have two methods: <code>start</code> and <code>pause</code>.</p>\n<p>Here is an example program:</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">tkinter</span> <span class=\"k\">as</span> <span class=\"nn\">tk</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">tktimer</span> <span class=\"kn\">import</span> <span class=\"n\">Countdown</span>\n\n<span class=\"n\">root</span> <span class=\"o\">=</span> <span class=\"n\">tk</span><span class=\"o\">.</span><span class=\"n\">Tk</span><span class=\"p\">()</span>\n<span class=\"n\">timer</span> <span class=\"o\">=</span> <span class=\"n\">Countdown</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">)</span>\n<span class=\"n\">timer</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">columnspan</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">sticky</span><span class=\"o\">=</span><span class=\"s2\">\"nswe\"</span><span class=\"p\">)</span>\n<span class=\"n\">tk</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Start\"</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">timer</span><span class=\"o\">.</span><span class=\"n\">start</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)</span>\n<span class=\"n\">tk</span><span class=\"o\">.</span><span class=\"n\">Button</span><span class=\"p\">(</span><span class=\"n\">root</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"s2\">\"Pause\"</span><span class=\"p\">,</span> <span class=\"n\">command</span><span class=\"o\">=</span><span class=\"n\">timer</span><span class=\"o\">.</span><span class=\"n\">pause</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"p\">(</span><span class=\"n\">row</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">column</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n<span class=\"n\">root</span><span class=\"o\">.</span><span class=\"n\">mainloop</span><span class=\"p\">()</span>\n</pre>\n<p><strong>Available options</strong>:</p>\n<table>\n<thead>\n<tr>\n<th>option</th>\n<th align=\"left\">description</th>\n<th>default</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>parent</code></td>\n<td align=\"left\">set the parent widget</td>\n<td></td>\n</tr>\n<tr>\n<td><code>prefix</code></td>\n<td align=\"left\">set text before timer value</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>suffix</code></td>\n<td align=\"left\">set text after timer value.</td>\n<td><code>\"\"</code></td>\n</tr>\n<tr>\n<td><code>unit</code></td>\n<td align=\"left\">set the unit (available: <code>seconds</code>, <code>minutes</code>, <code>hours</code>, <code>days</code>, <code>weeks</code>, <code>years</code>)</td>\n<td><code>seconds</code></td>\n</tr>\n<tr>\n<td><code>beginning</code></td>\n<td align=\"left\">set starting point (in seconds). specific to <code>Countdown</code>.</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>update_every</code></td>\n<td align=\"left\">set updating time every X milliseconds.</td>\n<td><code>10</code></td>\n</tr>\n<tr>\n<td><code>precision</code></td>\n<td align=\"left\">set counting precision (number of digits after the decimal point).</td>\n<td><code>2</code></td>\n</tr>\n<tr>\n<td><code>time_elapsed</code></td>\n<td align=\"left\">set time elapsed (in seconds). specific to <code>Stopwatch</code>.</td>\n<td><code>10</code></td>\n</tr></tbody></table>\n<h2>FAQ</h2>\n<p><strong>How can I continue the timer after restarting my app?</strong></p>\n<p>You can get the elapsed time (in seconds) with <code>timer.value.get()</code> on exit and set <code>time_elapsed</code> later on, which will make the timer start counting from <code>time_elapsed</code>. For <code>Countdown</code>, tweak <code>beginning</code> instead of <code>time_elapsed</code>.</p>\n<p><strong>I'm not happy with how my timer looks like. Can I change its appearance?</strong></p>\n<p>Yes, timers are ultimately just tkinter labels, which means you can do anything you would to an ordinary <code>tkinter.Label</code>. For example, to change the font, you can do:</p>\n<pre><span class=\"n\">timer</span><span class=\"o\">.</span><span class=\"n\">label</span><span class=\"o\">.</span><span class=\"n\">configure</span><span class=\"p\">(</span><span class=\"n\">font</span><span class=\"o\">=</span><span class=\"s2\">\"Helvetica 18 bold\"</span><span class=\"p\">)</span>\n</pre>\n\n          </div>"}, "last_serial": 5228573, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "667c6973181769c4a37794c41e449399", "sha256": "766e8ae334baa4a438b63b10d519e4564f2d8d14e3d56aadd91d9f1957bfd3f8"}, "downloads": -1, "filename": "tktimer-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "667c6973181769c4a37794c41e449399", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7344, "upload_time": "2019-05-05T14:17:52", "upload_time_iso_8601": "2019-05-05T14:17:52.600998Z", "url": "https://files.pythonhosted.org/packages/fc/14/066a5ff550240fa97b5845a8d283f97b0dc0bfd481ef488a41d1094b3aed/tktimer-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d99e0fe99e12fcc0c637dae591a2f1f", "sha256": "435c8aae1e4cff356b8fefe4006d0c0546c8505bebda9a70909983b552c3aa47"}, "downloads": -1, "filename": "tktimer-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9d99e0fe99e12fcc0c637dae591a2f1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10009, "upload_time": "2019-05-05T14:17:59", "upload_time_iso_8601": "2019-05-05T14:17:59.396932Z", "url": "https://files.pythonhosted.org/packages/ca/18/9c8e0a2abf215c34d00bff8d663b96ee75be5b770b10df54e39a26405190/tktimer-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "667c6973181769c4a37794c41e449399", "sha256": "766e8ae334baa4a438b63b10d519e4564f2d8d14e3d56aadd91d9f1957bfd3f8"}, "downloads": -1, "filename": "tktimer-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "667c6973181769c4a37794c41e449399", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 7344, "upload_time": "2019-05-05T14:17:52", "upload_time_iso_8601": "2019-05-05T14:17:52.600998Z", "url": "https://files.pythonhosted.org/packages/fc/14/066a5ff550240fa97b5845a8d283f97b0dc0bfd481ef488a41d1094b3aed/tktimer-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9d99e0fe99e12fcc0c637dae591a2f1f", "sha256": "435c8aae1e4cff356b8fefe4006d0c0546c8505bebda9a70909983b552c3aa47"}, "downloads": -1, "filename": "tktimer-0.0.1.tar.gz", "has_sig": false, "md5_digest": "9d99e0fe99e12fcc0c637dae591a2f1f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 10009, "upload_time": "2019-05-05T14:17:59", "upload_time_iso_8601": "2019-05-05T14:17:59.396932Z", "url": "https://files.pythonhosted.org/packages/ca/18/9c8e0a2abf215c34d00bff8d663b96ee75be5b770b10df54e39a26405190/tktimer-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:52:31 2020"}