{"info": {"author": "Koen De Wit", "author_email": "koendewit@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Internet :: WWW/HTTP"], "description": "# django-client-side-image-cropping\nWidget for the Django ImageField that provides an interface for cropping the image client-side (Using the [Croppie](http://foliotek.github.io/Croppie) Javascript library) to a specific size. Compatible with any Django form, including django-admin sites.\n\nThis widget differs from [django-image-cropping](https://github.com/jonasundderwolf/django-image-cropping) because it performs the cropping operation in the browser instead of on the server.\n* Use **[django-image-cropping](https://github.com/jonasundderwolf/django-image-cropping)** if you want to save a copy of the original image on your server.\n* Use **django-client-side-image-cropping** (this widget) if you don't need the original image. It will save you storage space and bandwidth. \n\n## Installation and setup\n\nInstall django-client-side-image-cropping (DCSIC) using pip :\n\n    pip install django-client-side-image-cropping\n\nMake sure that `'django.contrib.staticfiles'` is [set up properly](https://docs.djangoproject.com/en/stable/howto/static-files/) and add `'client_side_image_cropping'` to your `INSTALLED_APPS` setting :\n\n    INSTALLED_APPS = [\n        # ...\n        'django.contrib.staticfiles',\n        # ...\n        'client_side_image_cropping',\n    ]\n    \n    STATIC_URL = '/static/'\n    \n## Including static JS and CSS files\n\nDCSIC needs a few Javascript and CSS files to function. If you use the widget in a django-admin site, you can use the first method to include these files. For all other sites, you should read the \"For generic forms\" section below.\n\n### For admin sites\n\nLet your Admin classes inherit from `DcsicAdminMixin`, which will instruct the admin interface to include the necessary files:\n\n    from client_side_image_cropping import DcsicAdminMixin\n    \n    class EbookAdmin(admin.ModelAdmin, DcsicAdminMixin):\n        form = EbookForm\n\n### For generic forms\n\nEvery page containing a form using the `ClientsideCroppingWidget` should include jQuery 1.9 (or newer) and two JS and CSS files in the `head` section:\n\n    {% load static %}\n    \n    <head>\n        <link rel=\"stylesheet\" href=\"{% static \"client_side_image_cropping/cropping.css\" %}\"></script>\n        <link rel=\"stylesheet\" href=\"{% static \"client_side_image_cropping/cropping_widget.css\" %}\"></script>\n        <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"></script>\n        <script src=\"{% static \"client_side_image_cropping/croppie.min.js\" %}\"></script>\n        <script src=\"{% static \"client_side_image_cropping/cropping_widget.js\" %}\"></script>\n    </head>\n    \n## Usage\n\nUse the `ClientsideCroppingWidget` for any `django.forms.ImageField` in a Form :\n\n    from client_side_image_cropping import ClientsideCroppingWidget\n\n    class EbookForm(forms.ModelForm):\n        class Meta:\n            model = Ebook\n            fields = ['title', 'cover_photo']\n            widgets = {\n                'cover_photo': ClientsideCroppingWidget(\n                    width: 400,\n                    height: 600,\n                    preview_width: 100,\n                    preview_height: 150,\n                )\n            }\n\nConstructor parameters for the `ClientsideCroppingWidget`:\n* `width` and `height` (int, required): Dimensions of the resulting image (after cropping)\n* `preview_width` and `preview_height` (int): Dimensions of the preview of the cropped image that will appear in the form. Defaults to the `width` and `height` paramters if omitted.\n* `clearable` (bool): Add a \"Delete image\" button to the widget. If omitted, the button will be visible only if the `required` parameter of the `ImageField` is set ot False.\n* `format` (str): The file format of the resulting image. Must be either `'jpeg'` (default), `'png'` or `'webp'`.\n* `quality` (int): The quality of the image as a percentage. Only applicable if `format` is set to `'jpeg'`. Set to a low value for high compression, or `100` for lossless compression.\n* `file_name` (str): File name of the cropped image. If omitted, a random file name will be generated to avoid name collisions.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/koendewit/django-client-side-image-cropping", "keywords": "", "license": "BSD-3-Clause", "maintainer": "", "maintainer_email": "", "name": "django-client-side-image-cropping", "package_url": "https://pypi.org/project/django-client-side-image-cropping/", "platform": "", "project_url": "https://pypi.org/project/django-client-side-image-cropping/", "project_urls": {"Homepage": "https://github.com/koendewit/django-client-side-image-cropping"}, "release_url": "https://pypi.org/project/django-client-side-image-cropping/0.1.4/", "requires_dist": null, "requires_python": ">=3.5", "summary": "Widget for the Django ImageField that provides an interface for cropping the image client-side to a specific size.", "version": "0.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>django-client-side-image-cropping</h1>\n<p>Widget for the Django ImageField that provides an interface for cropping the image client-side (Using the <a href=\"http://foliotek.github.io/Croppie\" rel=\"nofollow\">Croppie</a> Javascript library) to a specific size. Compatible with any Django form, including django-admin sites.</p>\n<p>This widget differs from <a href=\"https://github.com/jonasundderwolf/django-image-cropping\" rel=\"nofollow\">django-image-cropping</a> because it performs the cropping operation in the browser instead of on the server.</p>\n<ul>\n<li>Use <strong><a href=\"https://github.com/jonasundderwolf/django-image-cropping\" rel=\"nofollow\">django-image-cropping</a></strong> if you want to save a copy of the original image on your server.</li>\n<li>Use <strong>django-client-side-image-cropping</strong> (this widget) if you don't need the original image. It will save you storage space and bandwidth.</li>\n</ul>\n<h2>Installation and setup</h2>\n<p>Install django-client-side-image-cropping (DCSIC) using pip :</p>\n<pre><code>pip install django-client-side-image-cropping\n</code></pre>\n<p>Make sure that <code>'django.contrib.staticfiles'</code> is <a href=\"https://docs.djangoproject.com/en/stable/howto/static-files/\" rel=\"nofollow\">set up properly</a> and add <code>'client_side_image_cropping'</code> to your <code>INSTALLED_APPS</code> setting :</p>\n<pre><code>INSTALLED_APPS = [\n    # ...\n    'django.contrib.staticfiles',\n    # ...\n    'client_side_image_cropping',\n]\n\nSTATIC_URL = '/static/'\n</code></pre>\n<h2>Including static JS and CSS files</h2>\n<p>DCSIC needs a few Javascript and CSS files to function. If you use the widget in a django-admin site, you can use the first method to include these files. For all other sites, you should read the \"For generic forms\" section below.</p>\n<h3>For admin sites</h3>\n<p>Let your Admin classes inherit from <code>DcsicAdminMixin</code>, which will instruct the admin interface to include the necessary files:</p>\n<pre><code>from client_side_image_cropping import DcsicAdminMixin\n\nclass EbookAdmin(admin.ModelAdmin, DcsicAdminMixin):\n    form = EbookForm\n</code></pre>\n<h3>For generic forms</h3>\n<p>Every page containing a form using the <code>ClientsideCroppingWidget</code> should include jQuery 1.9 (or newer) and two JS and CSS files in the <code>head</code> section:</p>\n<pre><code>{% load static %}\n\n&lt;head&gt;\n    &lt;link rel=\"stylesheet\" href=\"{% static \"client_side_image_cropping/cropping.css\" %}\"&gt;&lt;/script&gt;\n    &lt;link rel=\"stylesheet\" href=\"{% static \"client_side_image_cropping/cropping_widget.css\" %}\"&gt;&lt;/script&gt;\n    &lt;script src=\"https://ajax.googleapis.com/ajax/libs/jquery/1.12.4/jquery.min.js\"&gt;&lt;/script&gt;\n    &lt;script src=\"{% static \"client_side_image_cropping/croppie.min.js\" %}\"&gt;&lt;/script&gt;\n    &lt;script src=\"{% static \"client_side_image_cropping/cropping_widget.js\" %}\"&gt;&lt;/script&gt;\n&lt;/head&gt;\n</code></pre>\n<h2>Usage</h2>\n<p>Use the <code>ClientsideCroppingWidget</code> for any <code>django.forms.ImageField</code> in a Form :</p>\n<pre><code>from client_side_image_cropping import ClientsideCroppingWidget\n\nclass EbookForm(forms.ModelForm):\n    class Meta:\n        model = Ebook\n        fields = ['title', 'cover_photo']\n        widgets = {\n            'cover_photo': ClientsideCroppingWidget(\n                width: 400,\n                height: 600,\n                preview_width: 100,\n                preview_height: 150,\n            )\n        }\n</code></pre>\n<p>Constructor parameters for the <code>ClientsideCroppingWidget</code>:</p>\n<ul>\n<li><code>width</code> and <code>height</code> (int, required): Dimensions of the resulting image (after cropping)</li>\n<li><code>preview_width</code> and <code>preview_height</code> (int): Dimensions of the preview of the cropped image that will appear in the form. Defaults to the <code>width</code> and <code>height</code> paramters if omitted.</li>\n<li><code>clearable</code> (bool): Add a \"Delete image\" button to the widget. If omitted, the button will be visible only if the <code>required</code> parameter of the <code>ImageField</code> is set ot False.</li>\n<li><code>format</code> (str): The file format of the resulting image. Must be either <code>'jpeg'</code> (default), <code>'png'</code> or <code>'webp'</code>.</li>\n<li><code>quality</code> (int): The quality of the image as a percentage. Only applicable if <code>format</code> is set to <code>'jpeg'</code>. Set to a low value for high compression, or <code>100</code> for lossless compression.</li>\n<li><code>file_name</code> (str): File name of the cropped image. If omitted, a random file name will be generated to avoid name collisions.</li>\n</ul>\n\n          </div>"}, "last_serial": 6942846, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "7ae0a163c11545d5df4756c95b6ab99d", "sha256": "56a4eb2c88d06cd53b5f0662a52af61521ad79c8cb23322743d9d089773ec093"}, "downloads": -1, "filename": "django_client_side_image_cropping-0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7ae0a163c11545d5df4756c95b6ab99d", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 20060, "upload_time": "2020-02-17T10:49:40", "upload_time_iso_8601": "2020-02-17T10:49:40.833315Z", "url": "https://files.pythonhosted.org/packages/58/58/2fd8ebb71f4256039509e9f44453f0dfda1edfcd3237fe3170eb16ede4c0/django_client_side_image_cropping-0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e91d4989c82129175f4540a810da5306", "sha256": "71492c8a6c610d198f7a0b594f3827ce35ed001c7bf4eaef1d9e419edbcc4b43"}, "downloads": -1, "filename": "django-client-side-image-cropping-0.1.tar.gz", "has_sig": false, "md5_digest": "e91d4989c82129175f4540a810da5306", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 18891, "upload_time": "2020-02-17T10:49:43", "upload_time_iso_8601": "2020-02-17T10:49:43.492456Z", "url": "https://files.pythonhosted.org/packages/66/11/9988e9be51b638da4b248c0f7f2100b5a5bda91423ef3f7647604339e6ce/django-client-side-image-cropping-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ecbcab5da93846634ee23afa8b346818", "sha256": "b2987921e023d75cce177bddc72072433862159a4b2c6ab3f56617894c005327"}, "downloads": -1, "filename": "django-client-side-image-cropping-0.1.1.tar.gz", "has_sig": false, "md5_digest": "ecbcab5da93846634ee23afa8b346818", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 9802, "upload_time": "2020-02-17T10:58:28", "upload_time_iso_8601": "2020-02-17T10:58:28.539952Z", "url": "https://files.pythonhosted.org/packages/cc/1b/90539eb769033729b4a03e741d2c83f9e4fb48ed25cee3bd12a7f7df9708/django-client-side-image-cropping-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "6bb10fc26533c0ff53d39ecfe28d2a36", "sha256": "ca3394dab33711d24fa5aab923284765a5e51e57227589a7e7701e26af17ec80"}, "downloads": -1, "filename": "django-client-side-image-cropping-0.1.2.tar.gz", "has_sig": false, "md5_digest": "6bb10fc26533c0ff53d39ecfe28d2a36", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19216, "upload_time": "2020-02-17T11:36:25", "upload_time_iso_8601": "2020-02-17T11:36:25.545897Z", "url": "https://files.pythonhosted.org/packages/bd/e4/aec07b1ff8e981afc90d66608665e03dad050915c0ee16b1f9f453dda5d0/django-client-side-image-cropping-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "c9eee02434422c0c5cef05ec23f55b24", "sha256": "080400b3bf82697f2f4fb3efaefd80dd416163baaa6d6245a2c8751dbe4728a3"}, "downloads": -1, "filename": "django-client-side-image-cropping-0.1.3.tar.gz", "has_sig": false, "md5_digest": "c9eee02434422c0c5cef05ec23f55b24", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 19919, "upload_time": "2020-02-19T16:56:36", "upload_time_iso_8601": "2020-02-19T16:56:36.939522Z", "url": "https://files.pythonhosted.org/packages/a0/31/111e889153b9829af43ac2a7e39134f235ed558ac108807736cf7bd15f53/django-client-side-image-cropping-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "60415155bde45de9d456ca3ed05b8277", "sha256": "39eabe45d72bb74f9a044f89a0341bd001d86290fb87189406049b7cbc485558"}, "downloads": -1, "filename": "django-client-side-image-cropping-0.1.4.tar.gz", "has_sig": false, "md5_digest": "60415155bde45de9d456ca3ed05b8277", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 20168, "upload_time": "2020-04-03T11:54:06", "upload_time_iso_8601": "2020-04-03T11:54:06.406592Z", "url": "https://files.pythonhosted.org/packages/d3/e7/97e913752c79004e681a74357bb764a66c194b63e05fc9d650a71617b42c/django-client-side-image-cropping-0.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "60415155bde45de9d456ca3ed05b8277", "sha256": "39eabe45d72bb74f9a044f89a0341bd001d86290fb87189406049b7cbc485558"}, "downloads": -1, "filename": "django-client-side-image-cropping-0.1.4.tar.gz", "has_sig": false, "md5_digest": "60415155bde45de9d456ca3ed05b8277", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 20168, "upload_time": "2020-04-03T11:54:06", "upload_time_iso_8601": "2020-04-03T11:54:06.406592Z", "url": "https://files.pythonhosted.org/packages/d3/e7/97e913752c79004e681a74357bb764a66c194b63e05fc9d650a71617b42c/django-client-side-image-cropping-0.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:07 2020"}