{"info": {"author": "Skander Ben Mahmoud", "author_email": "skander.bmahmoud@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Framework :: Django", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "[![PyPI version](https://badge.fury.io/py/django-ip-geolocation.svg)](https://badge.fury.io/py/django-ip-geolocation) [![Downloads](https://pepy.tech/badge/django-ip-geolocation)](https://pepy.tech/project/django-ip-geolocation) [![Build Status](https://travis-ci.org/rednaks/django-ip-geolocation.svg?branch=release)](https://travis-ci.org/rednaks/django-ip-geolocation)\n\n# Django Ip Geolocation\nDjango request/response hooks to geolocate visitors by their ip address.\n\n# Installing\n```\npython -m pip install django-ip-geolocation\n``` \n\n# Usage\n## Decorator\nUse decorators to decorate views:\n```python\nfrom django_ip_geolocation.decorators import with_ip_geolocation\n\n@with_ip_geolocation\ndef api_view(request):\n   location = request.geolocation\n   ...\n```\n\n## Middleware\n\nFirst you need to add the middleware into your `settings.py`.\n```python\nMIDDLEWARE = [\n    ...\n    'django_ip_geolocation.middleware.IpGeolocationMiddleware',\n    ...\n]\n```\n\nThen the location is available to all views in request and response:\n```python\ndef api_view(request):\n   location = request.geolocation\n   ...\n   \ndef other_view(request):\n  location = request.geolocation\n  ...\n```\n\n## Cookie\nGeolocation data stored in the Response cookie lacks the `raw_data` and is base64 encoded.\n\n\n## User consent\nDevelopers must implement a helper function to check if the user consented or not and configure it in the `settings.py`. \n\nBy default if the developer didn't provide a validation function, we consider it as implicit consent.\n\nHere is an example of the helper function:\n\n```python\n\ndef check_user_consent(request):\n  if request.user.is_consented: # this is only an example.\n    return True\n  return False\n\n```\n\n\n\n## Settings\nYou can configure settings for your hook in the `settings.py` as follow:\n```python\n\nIP_GEOLOCATION_SETTINGS = {\n    'BACKEND': 'django_ip_geolocation.backends.IPGeolocationAPI',\n    'BACKEND_API_KEY': '',\n    'BACKEND_EXTRA_PARAMS': {},\n    'BACKEND_USERNAME': '',\n    'RESPONSE_HEADER': 'X-IP-Geolocation',\n    'ENABLE_REQUEST_HOOK': True,\n    'ENABLE_RESPONSE_HOOK': True,\n    'ENABLE_COOKIE': False,\n    'FORCE_IP_ADDR': None,\n    'USER_CONSENT_VALIDATOR': None\n}\n\n```\n\nThose are the default settings, that will be overwritten by those set in `settings.py`\n\n\n| setting                | description                                     | default value (type)                                                  |\n|------------------------|-------------------------------------------------|-----------------------------------------------------------------------|\n| `BACKEND`              | Backend class used to detect the geolocation    | `django_ip_geolocation.backends.IPGeolocationAPI` (string class path) |\n| `BACKEND_API_KEY`      | Api key or token for the backend                | Empty (string)                                                        |\n| `BACKEND_EXTRA_PARAMS` | Extra parameters specific to the backend        | `{}` (dict)                                                           |\n| `BACKEND_USERNAME`     | username for the backend                        | Empty (string)                                                        |\n| `RESPONSE_HEADER`      | Custom response header to store the geolocation | `X-IP-Geolocation` (string)                                           |\n| `ENABLE_REQUEST_HOOK`  | Enable or disable hook on request               | `True` (bool)                                                         |\n| `ENABLE_RESPONSE_HOOK` | Enable or disable hook on request               | `True` (bool)                                                         |\n| `ENABLE_COOKIE`        | Enable or disable geolocation data in cookie    | `False` (bool)                                                        |\n| `FORCE_IP_ADDR`        | Force ip address, rather than using visitor ip  | `None` (string)                                                       |\n| `USER_CONSENT_VALIDATOR`| A function path to check if the current user gave his consent  | `None` (string, function path)                        |\n\n### Available Backends\n* `django_ip_geolocation.backends.IPGeolocationAPI` : (Default) Using https://ipgeolocationapi.com/\n* `django_ip_geolocation.backends.IPStack` : (Require `BACKEND_API_KEY`) Using https://ipstack.com/documentation\n* `django_ip_geolocation.backends.IP2LocationCom` : (Require `BACKEND_API_KEY`, Accepts `BACKEND_EXTRA_PARAMS`) Using https://www.ip2location.com/web-service/ip2location\n* `django_ip_geolocation.backends.IPDataCo` : (Require `BACKEND_API_KEY`) Using https://docs.ipdata.co/\n\n\n## Implementing your own backend\nIf you want to add a new backend, you need to inherit from `django_ip_geolocation.backends.base`, then you need to implement `geolocate()` and `_parse()`.\n### `geolocate()`\n Makes API calls and stores the API response in `self._raw_data`.\n\n### `_parse()`\nParse raw data stored in `self._raw_data` and assigns values to the class attribute, such as `self._continent`, `self._county`, `self._geo`.\n\n`self._country` is a dict with `code` and `name` keys.\n\n`self._geo` is a dict with `latitude` and `longitude` keys.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/rednaks/django-ip-geolocation", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "django-ip-geolocation", "package_url": "https://pypi.org/project/django-ip-geolocation/", "platform": "", "project_url": "https://pypi.org/project/django-ip-geolocation/", "project_urls": {"Homepage": "https://github.com/rednaks/django-ip-geolocation"}, "release_url": "https://pypi.org/project/django-ip-geolocation/1.6.0/", "requires_dist": null, "requires_python": "", "summary": "Django request/response hook (Middleware and Decorator) to geolocate visitors using their IP address", "version": "1.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://badge.fury.io/py/django-ip-geolocation\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ff4d70126e8682a5686402bb23dd226115f8657/68747470733a2f2f62616467652e667572792e696f2f70792f646a616e676f2d69702d67656f6c6f636174696f6e2e737667\"></a> <a href=\"https://pepy.tech/project/django-ip-geolocation\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fde7b52893f9d41104288de93bcd542aa2cadc43/68747470733a2f2f706570792e746563682f62616467652f646a616e676f2d69702d67656f6c6f636174696f6e\"></a> <a href=\"https://travis-ci.org/rednaks/django-ip-geolocation\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dbbfa62651d3c017e86990dd2f6277924610a84c/68747470733a2f2f7472617669732d63692e6f72672f7265646e616b732f646a616e676f2d69702d67656f6c6f636174696f6e2e7376673f6272616e63683d72656c65617365\"></a></p>\n<h1>Django Ip Geolocation</h1>\n<p>Django request/response hooks to geolocate visitors by their ip address.</p>\n<h1>Installing</h1>\n<pre><code>python -m pip install django-ip-geolocation\n</code></pre>\n<h1>Usage</h1>\n<h2>Decorator</h2>\n<p>Use decorators to decorate views:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django_ip_geolocation.decorators</span> <span class=\"kn\">import</span> <span class=\"n\">with_ip_geolocation</span>\n\n<span class=\"nd\">@with_ip_geolocation</span>\n<span class=\"k\">def</span> <span class=\"nf\">api_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">geolocation</span>\n   <span class=\"o\">...</span>\n</pre>\n<h2>Middleware</h2>\n<p>First you need to add the middleware into your <code>settings.py</code>.</p>\n<pre><span class=\"n\">MIDDLEWARE</span> <span class=\"o\">=</span> <span class=\"p\">[</span>\n    <span class=\"o\">...</span>\n    <span class=\"s1\">'django_ip_geolocation.middleware.IpGeolocationMiddleware'</span><span class=\"p\">,</span>\n    <span class=\"o\">...</span>\n<span class=\"p\">]</span>\n</pre>\n<p>Then the location is available to all views in request and response:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">api_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n   <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">geolocation</span>\n   <span class=\"o\">...</span>\n   \n<span class=\"k\">def</span> <span class=\"nf\">other_view</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n  <span class=\"n\">location</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">geolocation</span>\n  <span class=\"o\">...</span>\n</pre>\n<h2>Cookie</h2>\n<p>Geolocation data stored in the Response cookie lacks the <code>raw_data</code> and is base64 encoded.</p>\n<h2>User consent</h2>\n<p>Developers must implement a helper function to check if the user consented or not and configure it in the <code>settings.py</code>.</p>\n<p>By default if the developer didn't provide a validation function, we consider it as implicit consent.</p>\n<p>Here is an example of the helper function:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">check_user_consent</span><span class=\"p\">(</span><span class=\"n\">request</span><span class=\"p\">):</span>\n  <span class=\"k\">if</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">user</span><span class=\"o\">.</span><span class=\"n\">is_consented</span><span class=\"p\">:</span> <span class=\"c1\"># this is only an example.</span>\n    <span class=\"k\">return</span> <span class=\"kc\">True</span>\n  <span class=\"k\">return</span> <span class=\"kc\">False</span>\n</pre>\n<h2>Settings</h2>\n<p>You can configure settings for your hook in the <code>settings.py</code> as follow:</p>\n<pre><span class=\"n\">IP_GEOLOCATION_SETTINGS</span> <span class=\"o\">=</span> <span class=\"p\">{</span>\n    <span class=\"s1\">'BACKEND'</span><span class=\"p\">:</span> <span class=\"s1\">'django_ip_geolocation.backends.IPGeolocationAPI'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'BACKEND_API_KEY'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"s1\">'BACKEND_EXTRA_PARAMS'</span><span class=\"p\">:</span> <span class=\"p\">{},</span>\n    <span class=\"s1\">'BACKEND_USERNAME'</span><span class=\"p\">:</span> <span class=\"s1\">''</span><span class=\"p\">,</span>\n    <span class=\"s1\">'RESPONSE_HEADER'</span><span class=\"p\">:</span> <span class=\"s1\">'X-IP-Geolocation'</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ENABLE_REQUEST_HOOK'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ENABLE_RESPONSE_HOOK'</span><span class=\"p\">:</span> <span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"s1\">'ENABLE_COOKIE'</span><span class=\"p\">:</span> <span class=\"kc\">False</span><span class=\"p\">,</span>\n    <span class=\"s1\">'FORCE_IP_ADDR'</span><span class=\"p\">:</span> <span class=\"kc\">None</span><span class=\"p\">,</span>\n    <span class=\"s1\">'USER_CONSENT_VALIDATOR'</span><span class=\"p\">:</span> <span class=\"kc\">None</span>\n<span class=\"p\">}</span>\n</pre>\n<p>Those are the default settings, that will be overwritten by those set in <code>settings.py</code></p>\n<table>\n<thead>\n<tr>\n<th>setting</th>\n<th>description</th>\n<th>default value (type)</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code>BACKEND</code></td>\n<td>Backend class used to detect the geolocation</td>\n<td><code>django_ip_geolocation.backends.IPGeolocationAPI</code> (string class path)</td>\n</tr>\n<tr>\n<td><code>BACKEND_API_KEY</code></td>\n<td>Api key or token for the backend</td>\n<td>Empty (string)</td>\n</tr>\n<tr>\n<td><code>BACKEND_EXTRA_PARAMS</code></td>\n<td>Extra parameters specific to the backend</td>\n<td><code>{}</code> (dict)</td>\n</tr>\n<tr>\n<td><code>BACKEND_USERNAME</code></td>\n<td>username for the backend</td>\n<td>Empty (string)</td>\n</tr>\n<tr>\n<td><code>RESPONSE_HEADER</code></td>\n<td>Custom response header to store the geolocation</td>\n<td><code>X-IP-Geolocation</code> (string)</td>\n</tr>\n<tr>\n<td><code>ENABLE_REQUEST_HOOK</code></td>\n<td>Enable or disable hook on request</td>\n<td><code>True</code> (bool)</td>\n</tr>\n<tr>\n<td><code>ENABLE_RESPONSE_HOOK</code></td>\n<td>Enable or disable hook on request</td>\n<td><code>True</code> (bool)</td>\n</tr>\n<tr>\n<td><code>ENABLE_COOKIE</code></td>\n<td>Enable or disable geolocation data in cookie</td>\n<td><code>False</code> (bool)</td>\n</tr>\n<tr>\n<td><code>FORCE_IP_ADDR</code></td>\n<td>Force ip address, rather than using visitor ip</td>\n<td><code>None</code> (string)</td>\n</tr>\n<tr>\n<td><code>USER_CONSENT_VALIDATOR</code></td>\n<td>A function path to check if the current user gave his consent</td>\n<td><code>None</code> (string, function path)</td>\n</tr></tbody></table>\n<h3>Available Backends</h3>\n<ul>\n<li><code>django_ip_geolocation.backends.IPGeolocationAPI</code> : (Default) Using <a href=\"https://ipgeolocationapi.com/\" rel=\"nofollow\">https://ipgeolocationapi.com/</a></li>\n<li><code>django_ip_geolocation.backends.IPStack</code> : (Require <code>BACKEND_API_KEY</code>) Using <a href=\"https://ipstack.com/documentation\" rel=\"nofollow\">https://ipstack.com/documentation</a></li>\n<li><code>django_ip_geolocation.backends.IP2LocationCom</code> : (Require <code>BACKEND_API_KEY</code>, Accepts <code>BACKEND_EXTRA_PARAMS</code>) Using <a href=\"https://www.ip2location.com/web-service/ip2location\" rel=\"nofollow\">https://www.ip2location.com/web-service/ip2location</a></li>\n<li><code>django_ip_geolocation.backends.IPDataCo</code> : (Require <code>BACKEND_API_KEY</code>) Using <a href=\"https://docs.ipdata.co/\" rel=\"nofollow\">https://docs.ipdata.co/</a></li>\n</ul>\n<h2>Implementing your own backend</h2>\n<p>If you want to add a new backend, you need to inherit from <code>django_ip_geolocation.backends.base</code>, then you need to implement <code>geolocate()</code> and <code>_parse()</code>.</p>\n<h3><code>geolocate()</code></h3>\n<p>Makes API calls and stores the API response in <code>self._raw_data</code>.</p>\n<h3><code>_parse()</code></h3>\n<p>Parse raw data stored in <code>self._raw_data</code> and assigns values to the class attribute, such as <code>self._continent</code>, <code>self._county</code>, <code>self._geo</code>.</p>\n<p><code>self._country</code> is a dict with <code>code</code> and <code>name</code> keys.</p>\n<p><code>self._geo</code> is a dict with <code>latitude</code> and <code>longitude</code> keys.</p>\n\n          </div>"}, "last_serial": 6985213, "releases": {"0.0.6": [{"comment_text": "", "digests": {"md5": "2e25259f2c6bc2dd19b643cf79f55658", "sha256": "3cc23f7474b4eac9e0669403bb826b5a10373703a4af37655ae297b9c6197bd8"}, "downloads": -1, "filename": "django-ip-geolocation-0.0.6.tar.gz", "has_sig": false, "md5_digest": "2e25259f2c6bc2dd19b643cf79f55658", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2730, "upload_time": "2019-12-28T22:06:59", "upload_time_iso_8601": "2019-12-28T22:06:59.647498Z", "url": "https://files.pythonhosted.org/packages/7b/d0/85710b2d0dd1d901ea2bb410dc18f2ca998191611364bedd15787ba58eee/django-ip-geolocation-0.0.6.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "953d4e42b65f18ade1b0c5a37bf417c0", "sha256": "deafc085a690fb3def01bc8fb43dee3d04af738a434ad7a3cb6d7b4aaa43da09"}, "downloads": -1, "filename": "django-ip-geolocation-0.1.0.tar.gz", "has_sig": false, "md5_digest": "953d4e42b65f18ade1b0c5a37bf417c0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3324, "upload_time": "2019-12-29T09:41:16", "upload_time_iso_8601": "2019-12-29T09:41:16.308141Z", "url": "https://files.pythonhosted.org/packages/fa/6d/75cfa38b849918c8836f8d3c51a8c562348995c1b18816ac5bfb3c51a3e8/django-ip-geolocation-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "5f627dcfec79a77ff32361c35b5efe48", "sha256": "2ef6d0638de136978b49089d3afdaacf84362443cce44424770351cb3675c0d2"}, "downloads": -1, "filename": "django-ip-geolocation-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5f627dcfec79a77ff32361c35b5efe48", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4181, "upload_time": "2019-12-29T13:31:38", "upload_time_iso_8601": "2019-12-29T13:31:38.021948Z", "url": "https://files.pythonhosted.org/packages/80/d7/fc92944cf5224602d663d92b4a929b0ff1f0968ebd8d2fb52bdd51c4a7cc/django-ip-geolocation-0.2.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "4bbf82376b68175789e28484317bac5e", "sha256": "53157aa9bb64370c61ecc03446f1d815b5ad7fa14c7a6a6a7ccda95591eecb10"}, "downloads": -1, "filename": "django-ip-geolocation-1.0.0.tar.gz", "has_sig": false, "md5_digest": "4bbf82376b68175789e28484317bac5e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4223, "upload_time": "2019-12-29T21:24:20", "upload_time_iso_8601": "2019-12-29T21:24:20.746115Z", "url": "https://files.pythonhosted.org/packages/84/bc/aa1d814a17d066aa049e1fa86aaaacb672788407bc516e58228acaec8aba/django-ip-geolocation-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "eadf50fabe5a8f2b5e24ff5b265f0702", "sha256": "1cbf35ca151b3c5725ecdd9bebb5c0a0a2e2733dc329425d72174692b56c7ad4"}, "downloads": -1, "filename": "django-ip-geolocation-1.0.1.tar.gz", "has_sig": false, "md5_digest": "eadf50fabe5a8f2b5e24ff5b265f0702", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4183, "upload_time": "2020-01-09T19:46:33", "upload_time_iso_8601": "2020-01-09T19:46:33.520577Z", "url": "https://files.pythonhosted.org/packages/4b/26/c594e921c427e6fbf46c623d53eff9ea196af701ed46115538796a400d59/django-ip-geolocation-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "e83aec2ff4bf0eba4d713387f53fef60", "sha256": "e41c0da60493c26b69658e07c245b31614839d7d70e4526c4e7707d90c45b4bb"}, "downloads": -1, "filename": "django-ip-geolocation-1.0.2.tar.gz", "has_sig": false, "md5_digest": "e83aec2ff4bf0eba4d713387f53fef60", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4187, "upload_time": "2020-01-18T18:58:13", "upload_time_iso_8601": "2020-01-18T18:58:13.956366Z", "url": "https://files.pythonhosted.org/packages/d6/3f/2ddf2378325c65bba96e34dfef6db2dd045d2030b4d9c536a1c7405a6026/django-ip-geolocation-1.0.2.tar.gz", "yanked": false}], "1.0.3": [{"comment_text": "", "digests": {"md5": "e4a9fa729d82d03334dc510b3aeb7db8", "sha256": "dbf0f53896b03b94c15393990303043d2b2577ba5c2eae0adcc588477ba340a5"}, "downloads": -1, "filename": "django-ip-geolocation-1.0.3.tar.gz", "has_sig": false, "md5_digest": "e4a9fa729d82d03334dc510b3aeb7db8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4173, "upload_time": "2020-01-19T09:25:56", "upload_time_iso_8601": "2020-01-19T09:25:56.409536Z", "url": "https://files.pythonhosted.org/packages/b8/ab/8f04bee50823cba93cea96d98889381841492a433e20e6f2cb9140c45e11/django-ip-geolocation-1.0.3.tar.gz", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "6b9bf8f8c68815e3ae2a6b259dc7caaf", "sha256": "8424f0d9ddfbbc6d381a4cd3229fc8f6e03a46ed94849d5d6ee32f47a5dd9f1a"}, "downloads": -1, "filename": "django-ip-geolocation-1.2.0.tar.gz", "has_sig": false, "md5_digest": "6b9bf8f8c68815e3ae2a6b259dc7caaf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5159, "upload_time": "2020-01-26T12:44:13", "upload_time_iso_8601": "2020-01-26T12:44:13.185794Z", "url": "https://files.pythonhosted.org/packages/f8/bd/95d3deb49818b5b683075a9fef3c0ddf77dd5c4a58f82502e43d1062f59c/django-ip-geolocation-1.2.0.tar.gz", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "b500aa729998dead562bbfced357b27a", "sha256": "f2f1fd374f7de8ccae71e54e257f0777856b1736fd0f2bf32b158a7bfe7efaae"}, "downloads": -1, "filename": "django-ip-geolocation-1.3.0.tar.gz", "has_sig": false, "md5_digest": "b500aa729998dead562bbfced357b27a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5265, "upload_time": "2020-01-27T18:45:32", "upload_time_iso_8601": "2020-01-27T18:45:32.013470Z", "url": "https://files.pythonhosted.org/packages/4d/00/725bcf771fd265e262bf34b9647f1b50cf4066732856d244b6a70d0b9c2d/django-ip-geolocation-1.3.0.tar.gz", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "2853b99ddb1cca55a52fe31867e04b98", "sha256": "52cf34615188f0fee794997bd502c04363107c61f613a92717e481ca164212ea"}, "downloads": -1, "filename": "django-ip-geolocation-1.4.0.tar.gz", "has_sig": false, "md5_digest": "2853b99ddb1cca55a52fe31867e04b98", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5537, "upload_time": "2020-01-30T19:21:12", "upload_time_iso_8601": "2020-01-30T19:21:12.426780Z", "url": "https://files.pythonhosted.org/packages/79/71/01622e5ebbc55c08519acf5dc7235986369627d9c87cb0518ef9bde07915/django-ip-geolocation-1.4.0.tar.gz", "yanked": false}], "1.4.1": [{"comment_text": "", "digests": {"md5": "2fa290e53e53f4784b8d5618f30125ec", "sha256": "d5bed95f8e2560b668345ddacfdf31873f240bd8dbe01e1776e97242a103ac57"}, "downloads": -1, "filename": "django-ip-geolocation-1.4.1.tar.gz", "has_sig": false, "md5_digest": "2fa290e53e53f4784b8d5618f30125ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5595, "upload_time": "2020-01-30T19:25:11", "upload_time_iso_8601": "2020-01-30T19:25:11.812724Z", "url": "https://files.pythonhosted.org/packages/ba/8a/6d86916700a53c2915886abfdb4076044633da8f8a16bcea0818d4d178f9/django-ip-geolocation-1.4.1.tar.gz", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "7a207f75b92ebfc78c6f7c1040eefa0f", "sha256": "358900d644c01b5741c7d7633aafe811a6b3d1c15da6f8b2e132ba053cda17a1"}, "downloads": -1, "filename": "django-ip-geolocation-1.5.0.tar.gz", "has_sig": false, "md5_digest": "7a207f75b92ebfc78c6f7c1040eefa0f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6372, "upload_time": "2020-02-29T08:33:11", "upload_time_iso_8601": "2020-02-29T08:33:11.493927Z", "url": "https://files.pythonhosted.org/packages/67/46/1ea048ffc75c7d3b7058fd7a1b087a1cc943093406af8bb4bccbfe4e044f/django-ip-geolocation-1.5.0.tar.gz", "yanked": false}], "1.5.1": [{"comment_text": "", "digests": {"md5": "795a961a0cee2d71ba5fef60b9e4486c", "sha256": "3926753d76ce443ce15a8287acbbb8a1d3223fe87ad77bbd4c9620be603409f7"}, "downloads": -1, "filename": "django-ip-geolocation-1.5.1.tar.gz", "has_sig": false, "md5_digest": "795a961a0cee2d71ba5fef60b9e4486c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6359, "upload_time": "2020-03-07T07:51:13", "upload_time_iso_8601": "2020-03-07T07:51:13.285531Z", "url": "https://files.pythonhosted.org/packages/b7/52/e1500fcc8c07c67bfc3ef6bc2797f36623d25adddf77564749851114c956/django-ip-geolocation-1.5.1.tar.gz", "yanked": false}], "1.5.2": [{"comment_text": "", "digests": {"md5": "5b3591d71abbeb01867d8e72d9addbec", "sha256": "809209a5488848cea96364eb706c625707c69cb95fe35f21aef377d9cda0b3f2"}, "downloads": -1, "filename": "django-ip-geolocation-1.5.2.tar.gz", "has_sig": false, "md5_digest": "5b3591d71abbeb01867d8e72d9addbec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6364, "upload_time": "2020-03-08T11:28:43", "upload_time_iso_8601": "2020-03-08T11:28:43.724164Z", "url": "https://files.pythonhosted.org/packages/09/f7/a65c85aacb736fdc2348feeb0b20a0cc7ab9d83a5a468c229c58bc864181/django-ip-geolocation-1.5.2.tar.gz", "yanked": false}], "1.5.3": [{"comment_text": "", "digests": {"md5": "ba245d792bffc767a74b3ed16f4c801b", "sha256": "38d28050b479797a1e28bcf2a9f5f6f781e8b202266e8b19c7da32520515dc2d"}, "downloads": -1, "filename": "django-ip-geolocation-1.5.3.tar.gz", "has_sig": false, "md5_digest": "ba245d792bffc767a74b3ed16f4c801b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6409, "upload_time": "2020-03-08T11:55:17", "upload_time_iso_8601": "2020-03-08T11:55:17.164450Z", "url": "https://files.pythonhosted.org/packages/64/85/7a9a7ba625fd0e412aca3aebb00775501c408afdb29365095a7ffdbb3fa1/django-ip-geolocation-1.5.3.tar.gz", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "1ff7581f1029d5fa327e8c2e37a6efbf", "sha256": "8f798e097b1e29175798b04d535b5a79d8b957745c4a02a36bc455b95d9596b3"}, "downloads": -1, "filename": "django-ip-geolocation-1.6.0.tar.gz", "has_sig": false, "md5_digest": "1ff7581f1029d5fa327e8c2e37a6efbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2020-04-09T11:36:48", "upload_time_iso_8601": "2020-04-09T11:36:48.424900Z", "url": "https://files.pythonhosted.org/packages/13/31/588958a02d450010c527eb7af4281a15afddc51f385624c487a9ee815554/django-ip-geolocation-1.6.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1ff7581f1029d5fa327e8c2e37a6efbf", "sha256": "8f798e097b1e29175798b04d535b5a79d8b957745c4a02a36bc455b95d9596b3"}, "downloads": -1, "filename": "django-ip-geolocation-1.6.0.tar.gz", "has_sig": false, "md5_digest": "1ff7581f1029d5fa327e8c2e37a6efbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6947, "upload_time": "2020-04-09T11:36:48", "upload_time_iso_8601": "2020-04-09T11:36:48.424900Z", "url": "https://files.pythonhosted.org/packages/13/31/588958a02d450010c527eb7af4281a15afddc51f385624c487a9ee815554/django-ip-geolocation-1.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:35:33 2020"}