{"info": {"author": "Abraham Lee", "author_email": "tisimst@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Customer Service", "Intended Audience :: Developers", "Intended Audience :: Education", "Intended Audience :: End Users/Desktop", "Intended Audience :: Financial and Insurance Industry", "Intended Audience :: Healthcare Industry", "Intended Audience :: Information Technology", "Intended Audience :: Manufacturing", "Intended Audience :: Other Audience", "Intended Audience :: Science/Research", "Intended Audience :: System Administrators", "Intended Audience :: Telecommunications Industry", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: Microsoft :: Windows", "Operating System :: OS Independent", "Operating System :: POSIX :: Linux", "Operating System :: Unix", "Programming Language :: Python", "Topic :: Multimedia", "Topic :: Multimedia :: Graphics", "Topic :: Multimedia :: Graphics :: Presentation", "Topic :: Office/Business", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Information Analysis", "Topic :: Scientific/Engineering :: Visualization"], "description": "===========\nparetochart\n===========\n\n`Pareto chart`_ for python (similar to `Matlab`_, but much more flexible).\n\nFeatures\n--------\n\n- **Data labels** for the chart x-axis.\n- **Fully customizable** with unique ``arg`` and ``kwarg`` inputs:\n   - *Bar chart*: follows the inputs of the `matplotlib.pyplot.bar`_ \n     function (use ``bar_args=(...)`` and ``bar_kw={...}``).\n   - *Cumulative line*: follows the inputs of the `matplotlib.pyplot.plot`_ \n     function (use ``line_args=(...)`` and ``line_kw={...}``).\n   - *Limit line*: follows the inputs of the `matplotlib.axes.Axes.axhline`_ \n     function (use ``limit_kw={...}``).\n- Put the chart on **arbitrary axes**.\n\nExamples\n--------\nFirst, a simple import::\n     \n    from paretochart import pareto\n\nNow, let's create the numeric data (no pre-sorting necessary)::\n\n    data = [21, 2, 10, 4, 16]\n     \nWe can even assign x-axis labels (in the same order as the data)::\n\n    labels = ['tom', 'betty', 'alyson', 'john', 'bob']\n\nFor this example, we'll create 4 plots that show the customization \ncapabilities::\n\n    import matplotlib.pyplot as plt\n\n    # create a grid of subplots\n    fig, axes = plt.subplots(2, 2)\n    \nThe first plot will be the simplest usage, with just the data::\n    \n    pareto(data, axes=axes[0, 0])\n    plt.title('Basic chart without labels', fontsize=10)\n    \nIn the second plot, we'll add labels, put a cumulative limit at 0.75 (or 75%) \nand turn the cumulative line green::\n\n    pareto(data, labels, axes=axes[0, 1], limit=0.75, line_args=('g',))\n    plt.title('Data with labels, green cum. line, limit=0.75', fontsize=10)\n    \nIn the third plot, we'll remove the cumulative line and limit line, make the\nbars green and resize them to a width of 0.5::\n\n    pareto(data, labels, cumplot=False, axes=axes[1, 0], data_kw={'width': 0.5,\n        'color': 'g'})\n    plt.title('Data without cum. line, green bar width=0.5', fontsize=10)\n    \nIn the fourth plot, let's put the cumulative limit at 95% and make that line\nyellow::\n\n    pareto(data, labels, limit=0.95, axes=axes[1, 1], limit_kw={'color': 'y'})\n    plt.title('Data trimmed at 95%, yellow limit line', fontsize=10)\n\nAnd last, but not least, let's show the image::\n\n    fig.canvas.set_window_title('Pareto Plot Test Figure')\n    plt.show()\n\nThis should result in the following image (`click here`_ if the image doesn't \nshow up):\n\n.. image:: https://raw.github.com/tisimst/paretochart/master/pareto_plot_test_figure.png\n   :scale: 75%\n\nInstallation\n------------\n\nSince this is really a single python file, you can simply go to the \nGitHub_ page, simply download ``paretochart.py`` and put it in \na directory that python can find it.\n\nAlternatively, the file can be installed using::\n\n    $ pip install --upgrade paretochart\n\nor::\n    \n    $ easy_install --upgrade paretochart\n\nIf you are using Python3, download the compressed file from here, unzip and run::\n\n    $ 2to3 -w *.py\n    \nwhile in the unzipped directory, *then* run::\n\n    $ python3 setup.py install\n\n**NOTE:** *Administrative privileges may be required to perform any of \nthe above install methods.*\n\nContact\n-------\n\nPlease send **feature requests, bug reports, or feedback** to `Abraham Lee`_.\n\n.. _Pareto chart: http://en.wikipedia.org/wiki/Pareto_chart\n.. _Matlab: http://www.mathworks.com/help/matlab/ref/pareto.html\n.. _matplotlib.pyplot.bar: http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar\n.. _matplotlib.pyplot.plot: http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot\n.. _matplotlib.axes.Axes.axhline: http://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes.axhline\n.. _Abraham Lee: mailto:tisimst@gmail.com\n.. _GitHub: https://github.com/tisimst/paretochart\n.. _click here: https://github.com/tisimst/paretochart/master/pareto_plot_test_figure.png", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tisimst/paretochart", "keywords": "matplotlib,pareto,chart,plot,quality,economics,manufacturing", "license": "BSD License", "maintainer": null, "maintainer_email": null, "name": "paretochart", "package_url": "https://pypi.org/project/paretochart/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/paretochart/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tisimst/paretochart"}, "release_url": "https://pypi.org/project/paretochart/1.0/", "requires_dist": null, "requires_python": null, "summary": "Pareto chart for python (similar to Matlab's, but much more flexible)", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"http://en.wikipedia.org/wiki/Pareto_chart\" rel=\"nofollow\">Pareto chart</a> for python (similar to <a href=\"http://www.mathworks.com/help/matlab/ref/pareto.html\" rel=\"nofollow\">Matlab</a>, but much more flexible).</p>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li><strong>Data labels</strong> for the chart x-axis.</li>\n<li><dl>\n<dt><strong>Fully customizable</strong> with unique <tt>arg</tt> and <tt>kwarg</tt> inputs:</dt>\n<dd><ul>\n<li><em>Bar chart</em>: follows the inputs of the <a href=\"http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.bar\" rel=\"nofollow\">matplotlib.pyplot.bar</a>\nfunction (use <tt><span class=\"pre\">bar_args=(...)</span></tt> and <tt><span class=\"pre\">bar_kw={...}</span></tt>).</li>\n<li><em>Cumulative line</em>: follows the inputs of the <a href=\"http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot\" rel=\"nofollow\">matplotlib.pyplot.plot</a>\nfunction (use <tt><span class=\"pre\">line_args=(...)</span></tt> and <tt><span class=\"pre\">line_kw={...}</span></tt>).</li>\n<li><em>Limit line</em>: follows the inputs of the <a href=\"http://matplotlib.org/api/axes_api.html#matplotlib.axes.Axes.axhline\" rel=\"nofollow\">matplotlib.axes.Axes.axhline</a>\nfunction (use <tt><span class=\"pre\">limit_kw={...}</span></tt>).</li>\n</ul>\n</dd>\n</dl>\n</li>\n<li>Put the chart on <strong>arbitrary axes</strong>.</li>\n</ul>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>First, a simple import:</p>\n<pre>from paretochart import pareto\n</pre>\n<p>Now, let\u2019s create the numeric data (no pre-sorting necessary):</p>\n<pre>data = [21, 2, 10, 4, 16]\n</pre>\n<p>We can even assign x-axis labels (in the same order as the data):</p>\n<pre>labels = ['tom', 'betty', 'alyson', 'john', 'bob']\n</pre>\n<p>For this example, we\u2019ll create 4 plots that show the customization\ncapabilities:</p>\n<pre>import matplotlib.pyplot as plt\n\n# create a grid of subplots\nfig, axes = plt.subplots(2, 2)\n</pre>\n<p>The first plot will be the simplest usage, with just the data:</p>\n<pre>pareto(data, axes=axes[0, 0])\nplt.title('Basic chart without labels', fontsize=10)\n</pre>\n<p>In the second plot, we\u2019ll add labels, put a cumulative limit at 0.75 (or 75%)\nand turn the cumulative line green:</p>\n<pre>pareto(data, labels, axes=axes[0, 1], limit=0.75, line_args=('g',))\nplt.title('Data with labels, green cum. line, limit=0.75', fontsize=10)\n</pre>\n<p>In the third plot, we\u2019ll remove the cumulative line and limit line, make the\nbars green and resize them to a width of 0.5:</p>\n<pre>pareto(data, labels, cumplot=False, axes=axes[1, 0], data_kw={'width': 0.5,\n    'color': 'g'})\nplt.title('Data without cum. line, green bar width=0.5', fontsize=10)\n</pre>\n<p>In the fourth plot, let\u2019s put the cumulative limit at 95% and make that line\nyellow:</p>\n<pre>pareto(data, labels, limit=0.95, axes=axes[1, 1], limit_kw={'color': 'y'})\nplt.title('Data trimmed at 95%, yellow limit line', fontsize=10)\n</pre>\n<p>And last, but not least, let\u2019s show the image:</p>\n<pre>fig.canvas.set_window_title('Pareto Plot Test Figure')\nplt.show()\n</pre>\n<p>This should result in the following image (<a href=\"https://github.com/tisimst/paretochart/master/pareto_plot_test_figure.png\" rel=\"nofollow\">click here</a> if the image doesn\u2019t\nshow up):</p>\n<img alt=\"https://raw.github.com/tisimst/paretochart/master/pareto_plot_test_figure.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7ebb08b8cbe33eb0ce10390665adc5be1309ab0e/68747470733a2f2f7261772e6769746875622e636f6d2f746973696d73742f70617265746f63686172742f6d61737465722f70617265746f5f706c6f745f746573745f6669677572652e706e67\">\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Since this is really a single python file, you can simply go to the\n<a href=\"https://github.com/tisimst/paretochart\" rel=\"nofollow\">GitHub</a> page, simply download <tt>paretochart.py</tt> and put it in\na directory that python can find it.</p>\n<p>Alternatively, the file can be installed using:</p>\n<pre>$ pip install --upgrade paretochart\n</pre>\n<p>or:</p>\n<pre>$ easy_install --upgrade paretochart\n</pre>\n<p>If you are using Python3, download the compressed file from here, unzip and run:</p>\n<pre>$ 2to3 -w *.py\n</pre>\n<p>while in the unzipped directory, <em>then</em> run:</p>\n<pre>$ python3 setup.py install\n</pre>\n<p><strong>NOTE:</strong> <em>Administrative privileges may be required to perform any of\nthe above install methods.</em></p>\n</div>\n<div id=\"contact\">\n<h2>Contact</h2>\n<p>Please send <strong>feature requests, bug reports, or feedback</strong> to <a href=\"mailto:tisimst%40gmail.com\">Abraham Lee</a>.</p>\n</div>\n\n          </div>"}, "last_serial": 858152, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "222f3f33e38580e040c741db478004f0", "sha256": "124b6271282fd606f6ad85b129607ce6b4c7b5ac42211be34e773ddc71fab86f"}, "downloads": -1, "filename": "paretochart-1.0.tar.gz", "has_sig": false, "md5_digest": "222f3f33e38580e040c741db478004f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5738, "upload_time": "2013-09-05T20:14:22", "upload_time_iso_8601": "2013-09-05T20:14:22.449332Z", "url": "https://files.pythonhosted.org/packages/4a/d5/0e2bd5c3b8c4870e1704886ee9d74479633eff548c959767248796658a17/paretochart-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "222f3f33e38580e040c741db478004f0", "sha256": "124b6271282fd606f6ad85b129607ce6b4c7b5ac42211be34e773ddc71fab86f"}, "downloads": -1, "filename": "paretochart-1.0.tar.gz", "has_sig": false, "md5_digest": "222f3f33e38580e040c741db478004f0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5738, "upload_time": "2013-09-05T20:14:22", "upload_time_iso_8601": "2013-09-05T20:14:22.449332Z", "url": "https://files.pythonhosted.org/packages/4a/d5/0e2bd5c3b8c4870e1704886ee9d74479633eff548c959767248796658a17/paretochart-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:26 2020"}