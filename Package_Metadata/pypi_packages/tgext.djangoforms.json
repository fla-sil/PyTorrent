{"info": {"author": "Nick Holden", "author_email": "nickpholden@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: TurboGears", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "About Turbo Django Forms\n        -------------------------\n        \n        Turbo Django Forms is a basic package that allows you to use Django forms\n        in turbogears. You should be able to follow the django documentation to\n        deal with validation etc.\n        \n        Installing\n        -------------------------------\n        \n        tgext.djangoforms can be installed from pypi::\n        \n            pip install tgext.djangoforms\n        \n        should just work for most of the users\n        \n        Enabling Turbo Django Forms\n        ----------------------------------\n        \n        In your application *lib/app_globals.py* import **TDForms**::\n        \n            from tgext.djangoforms import TDForms\n        \n        And call it inside the **__init__**::\n        \n            class Globals(object):\n                def __init__(self):\n                    self.tdf = TDForms()\n        \n        Creating Forms\n        ----------------------------\n        \n        Creating forms works the same as with standard Django::\n        \n            from django import forms\n    \n            class ContactForm(forms.Form):\n                subject = forms.CharField(max_length=100)\n                message = forms.CharField()\n                sender = forms.EmailField()\n                cc_myself = forms.BooleanField(required=False)\n        \n        Controller\n        ----------------------------\n        \n        You can follow most of the django forms tutorial::\n        \n            @expose('mysite.templates.index')\n            def index(self, **kw):\n                \"\"\"Handle the front-page.\"\"\"\n                if kw:\n                    form = ContactForm(kw)\n                    \n                    if form.is_valid():\n                        print form.cleaned_data\n                        //do stuff\n                        tg.flash(\"Form OK\")\n                else:\n                    form = ContactForm()\n                    \n                return dict(page='Index', form=form)\n        \n        Rendering Forms\n        ----------------------------\n        \n        You can use the standard django style template notation in your Genshi template - but add a g.tdf(...)::\n        \n            <form>\n            ${g.tdf(form.as_p)}\n            <button>Submit</button>\n            </form>", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/nickpholden/tgext.djangoforms", "keywords": "turbogears2.extension pylons", "license": "LGPL", "maintainer": null, "maintainer_email": null, "name": "tgext.djangoforms", "package_url": "https://pypi.org/project/tgext.djangoforms/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/tgext.djangoforms/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/nickpholden/tgext.djangoforms"}, "release_url": "https://pypi.org/project/tgext.djangoforms/0.0.1/", "requires_dist": null, "requires_python": null, "summary": "Allows you to use django forms with turbogears", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            About Turbo Django Forms<br>        -------------------------<br>        <br>        Turbo Django Forms is a basic package that allows you to use Django forms<br>        in turbogears. You should be able to follow the django documentation to<br>        deal with validation etc.<br>        <br>        Installing<br>        -------------------------------<br>        <br>        tgext.djangoforms can be installed from pypi::<br>        <br>            pip install tgext.djangoforms<br>        <br>        should just work for most of the users<br>        <br>        Enabling Turbo Django Forms<br>        ----------------------------------<br>        <br>        In your application *lib/app_globals.py* import **TDForms**::<br>        <br>            from tgext.djangoforms import TDForms<br>        <br>        And call it inside the **__init__**::<br>        <br>            class Globals(object):<br>                def __init__(self):<br>                    self.tdf = TDForms()<br>        <br>        Creating Forms<br>        ----------------------------<br>        <br>        Creating forms works the same as with standard Django::<br>        <br>            from django import forms<br>    <br>            class ContactForm(forms.Form):<br>                subject = forms.CharField(max_length=100)<br>                message = forms.CharField()<br>                sender = forms.EmailField()<br>                cc_myself = forms.BooleanField(required=False)<br>        <br>        Controller<br>        ----------------------------<br>        <br>        You can follow most of the django forms tutorial::<br>        <br>            @expose('mysite.templates.index')<br>            def index(self, **kw):<br>                \"\"\"Handle the front-page.\"\"\"<br>                if kw:<br>                    form = ContactForm(kw)<br>                    <br>                    if form.is_valid():<br>                        print form.cleaned_data<br>                        //do stuff<br>                        tg.flash(\"Form OK\")<br>                else:<br>                    form = ContactForm()<br>                    <br>                return dict(page='Index', form=form)<br>        <br>        Rendering Forms<br>        ----------------------------<br>        <br>        You can use the standard django style template notation in your Genshi template - but add a g.tdf(...)::<br>        <br>            &lt;form&gt;<br>            ${g.tdf(form.as_p)}<br>            &lt;button&gt;Submit&lt;/button&gt;<br>            &lt;/form&gt;\n          </div>"}, "last_serial": 800527, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3cbd97122018cabe8f1d744952d7457e", "sha256": "da1096f38c1c4779f08bf641ebb749fb381bd0d89d978a666ab4e6029c88ffec"}, "downloads": -1, "filename": "tgext.djangoforms-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3cbd97122018cabe8f1d744952d7457e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1643, "upload_time": "2011-11-24T14:15:48", "upload_time_iso_8601": "2011-11-24T14:15:48.275667Z", "url": "https://files.pythonhosted.org/packages/dd/f7/0e5a005abbfcc44c01f13b9a7471c0ca8877bda57a1a9bfd736a9ae991bc/tgext.djangoforms-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3cbd97122018cabe8f1d744952d7457e", "sha256": "da1096f38c1c4779f08bf641ebb749fb381bd0d89d978a666ab4e6029c88ffec"}, "downloads": -1, "filename": "tgext.djangoforms-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3cbd97122018cabe8f1d744952d7457e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1643, "upload_time": "2011-11-24T14:15:48", "upload_time_iso_8601": "2011-11-24T14:15:48.275667Z", "url": "https://files.pythonhosted.org/packages/dd/f7/0e5a005abbfcc44c01f13b9a7471c0ca8877bda57a1a9bfd736a9ae991bc/tgext.djangoforms-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:54:15 2020"}