{"info": {"author": "Jesse Escobedo", "author_email": "jesse.escobedo@citygridmedia.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: System Administrators", "Programming Language :: Python", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "# zambi\nA single place to manage AWS boto connection objects for multiple accounts and services.\n\n# Summary\nZambi is used to manage multiple connection types leveraging the boto library. So that you\ncan quickly create a new connection object for a new account or a service.\n\n# Getting started\nTo get started install zambi\n```\npip install zambi\n```\n\nCreate a conf directory and a credential directory and set these system variables.\n```\nexport AWS_CONF_DIR=/path/to/conf\nexport AWS_CRED_DIR=/path/to/credntials\n```\n\nCreate account mapping file, $AWS_CONF_DIR/account_aliases_map.txt\n```\nopsqa:opsqa:111111111111\n```\n\nCreate credential files, $AWS_CRED_DIR/opsqa.ini\n```\n[Credentials]\naws_account_id=111111111111\naws_access_key_id=AXXXXXXXXXXX\naws_SECRET_ACCESS_KEY=yyyyyyyxxxxxxxzzzzzz\n```\n\n# Usage\nInitialize the Zambi within you.\n```\nfrom zambi import ZambiConn\ncmgr = ZambiConn()\n```\n\nTo get all accounts from mapping file.\n```\naccounts = cmgr.get_accounts()\n```\n\nTo get accounts that end in qa.\n```\naccounts = cmgr.get_accounts('.*qa')\n```\n\nTo get just the opsqa account.\n```\naccount = cmgr.get_accounts('opsqa')\n```\n\nCreaet an EC2 Connection to opsqa.\n```\nconn = cmgr.get_connection(account)\n```\n\nExample of other services like route53\n```\nconn = cmgr.get_connection(account, service='route53')\n```\n\n\nChangelog\n=========\nNext Release (TBD)\n------------------\n* Zambi: Manages boto connection objects for multiple AWS accounts and services.\n\n1.0\n~~~~~~~\n* feature: Initial revision", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "Zambi AWS devops", "license": "Apache", "maintainer": null, "maintainer_email": null, "name": "Zambi", "package_url": "https://pypi.org/project/Zambi/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/Zambi/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/Zambi/1.0.0/", "requires_dist": null, "requires_python": null, "summary": "Zambi Connection Manager", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># zambi\nA single place to manage AWS boto connection objects for multiple accounts and services.</p>\n<p># Summary\nZambi is used to manage multiple connection types leveraging the boto library. So that you\ncan quickly create a new connection object for a new account or a service.</p>\n<p># Getting started\nTo get started install zambi\n<tt>`\npip install zambi\n`</tt></p>\n<p>Create a conf directory and a credential directory and set these system variables.\n<tt>`\nexport <span class=\"pre\">AWS_CONF_DIR=/path/to/conf</span>\nexport <span class=\"pre\">AWS_CRED_DIR=/path/to/credntials</span>\n`</tt></p>\n<p>Create account mapping file, $AWS_CONF_DIR/account_aliases_map.txt\n<tt>`\nopsqa:opsqa:111111111111\n`</tt></p>\n<p>Create credential files, $AWS_CRED_DIR/opsqa.ini\n<tt>`\n[Credentials]\naws_account_id=111111111111\naws_access_key_id=AXXXXXXXXXXX\naws_SECRET_ACCESS_KEY=yyyyyyyxxxxxxxzzzzzz\n`</tt></p>\n<p># Usage\nInitialize the Zambi within you.\n<tt>`\nfrom zambi import ZambiConn\ncmgr = ZambiConn()\n`</tt></p>\n<p>To get all accounts from mapping file.\n<tt>`\naccounts = cmgr.get_accounts()\n`</tt></p>\n<p>To get accounts that end in qa.\n<tt>`\naccounts = <span class=\"pre\">cmgr.get_accounts('.*qa')</span>\n`</tt></p>\n<p>To get just the opsqa account.\n<tt>`\naccount = <span class=\"pre\">cmgr.get_accounts('opsqa')</span>\n`</tt></p>\n<p>Creaet an EC2 Connection to opsqa.\n<tt>`\nconn = cmgr.get_connection(account)\n`</tt></p>\n<p>Example of other services like route53\n<tt>`\nconn = cmgr.get_connection(account, <span class=\"pre\">service='route53')</span>\n`</tt></p>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"next-release-tbd\"><span class=\"section-subtitle\">Next Release (TBD)</span></h2>\n<ul>\n<li>Zambi: Manages boto connection objects for multiple AWS accounts and services.</li>\n</ul>\n<div id=\"id1\">\n<h3>1.0</h3>\n<ul>\n<li>feature: Initial revision</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 1676712, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "9e4efc2568bbba6949e31e66e73f40b5", "sha256": "99ca2fdeab313a2a95798b4d831941a52346c24f7ee376d8fb859ef2d8104610"}, "downloads": -1, "filename": "Zambi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9e4efc2568bbba6949e31e66e73f40b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3397, "upload_time": "2015-08-13T21:51:44", "upload_time_iso_8601": "2015-08-13T21:51:44.083199Z", "url": "https://files.pythonhosted.org/packages/0b/91/556bf60e4ffcadbf7b50d33f2433372d9dfe2f69f3798462efa78d3f5d2a/Zambi-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "9e4efc2568bbba6949e31e66e73f40b5", "sha256": "99ca2fdeab313a2a95798b4d831941a52346c24f7ee376d8fb859ef2d8104610"}, "downloads": -1, "filename": "Zambi-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9e4efc2568bbba6949e31e66e73f40b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3397, "upload_time": "2015-08-13T21:51:44", "upload_time_iso_8601": "2015-08-13T21:51:44.083199Z", "url": "https://files.pythonhosted.org/packages/0b/91/556bf60e4ffcadbf7b50d33f2433372d9dfe2f69f3798462efa78d3f5d2a/Zambi-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:55 2020"}