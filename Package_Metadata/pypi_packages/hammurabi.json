{"info": {"author": "G\u00e1bor Boros", "author_email": "gabor.brs@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: Apache Software License", "Natural Language :: English", "Operating System :: MacOS", "Operating System :: POSIX", "Operating System :: Unix", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development", "Topic :: Software Development :: Code Generators", "Topic :: Text Processing", "Topic :: Text Processing :: General"], "description": "Hammurabi\n*********\n\n.. image:: https://img.shields.io/pypi/v/hammurabi.svg\n    :target: https://pypi.python.org/pypi/hammurabi\n    :alt: PyPi Package\n\n.. image:: https://travis-ci.org/gabor-boros/hammurabi.svg?branch=master\n    :target: https://travis-ci.org/gabor-boros/hammurabi\n    :alt: Build Status\n\n.. image:: https://readthedocs.org/projects/hammurabi/badge/?version=latest\n    :target: https://hammurabi.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n\n.. image:: https://api.codeclimate.com/v1/badges/bcebab7105dfd82f358b/maintainability\n   :target: https://codeclimate.com/github/gabor-boros/hammurabi/maintainability\n   :alt: Maintainability\n\n.. image:: https://api.codeclimate.com/v1/badges/bcebab7105dfd82f358b/test_coverage\n    :target: https://codeclimate.com/github/gabor-boros/hammurabi/test_coverage\n    :alt: Test Coverage\n\n.. image:: https://img.shields.io/badge/code%20style-black-000000.svg\n    :target: https://github.com/ambv/black\n    :alt: Black Formatted\n\n.. image:: https://bestpractices.coreinfrastructure.org/projects/3587/badge\n    :target: https://bestpractices.coreinfrastructure.org/projects/3587\n    :alt: CII Best Practices\n\n\nMass changes made easy.\n\nHammurabi is an extensible CLI tool responsible for enforcing user-defined rules\non a git repository.\n\nFeatures\n========\n\nHammurabi integrates well with both git and Github to make sure that the\nexecution happens on a separate branch and the committed changes are pushed\nto the target repository. After pushing to the target repository, a pull\nrequest will be opened.\n\nHammurabi supports several operations (Rules) by default. These Rules can do\n\n* file and directory operations like copy, move, create or delete\n* manipulation of attributes like ownership or access permissions change\n* file and directory manipulations\n* piped rule execution (output of a rule is the input of the next rule)\n* children rule execution (output of a rule is the input of the upcoming rules)\n* creating files from Jinja2 templates\n\nSupported file formats:\n\n* ``plain text``\n* ``ini``\n* ``json``\n* ``yaml`` (basic, single document operations)\n\nUpcoming file format support:\n\n* ``toml``\n* ``hocon``\n\nInstallation\n============\n\nHammurabi can be installed by running ``pip install hammurabi`` and it requires\nPython 3.7.0+ to run. This is the preferred method to install Hammurabi, as it\nwill always install the most recent stable release. If you don't have `pip`_\ninstalled, this `Python installation guide`_ can guide\nyou through the process.\n\n.. _pip: https://pip.pypa.io\n.. _Python installation guide: http://docs.python-guide.org/en/latest/starting/installation/\n\nConfiguration\n=============\n\nFor configuration instructions, please visit the documentation_ site.\n\n.. _documentation: https://hammurabi.readthedocs.io/en/latest/config.html\n\nCommand line options\n====================\n\n.. code-block:: bash\n\n    hammurabi [OPTIONS] COMMAND [ARGS]...\n\n    Hammurabi is an extensible CLI tool responsible for enforcing user-defined\n    rules on a git repository.\n\n    Find more information at: https://hammurabi.readthedocs.io/latest/\n\n    Options:\n    -c, --config PATH               Set the configuration file.  [default:\n                                    pyproject.toml]\n    --repository TEXT               Set the remote repository. Required format:\n                                    owner/repository\n    --github-token TEXT             Set github access token\n    --log-level [DEBUG|INFO|WARNING|ERROR]\n                                    Set logging level.\n    --help                          Show this message and exit.\n\n    Commands:\n    describe  Show details of a specific resource or group of resources.\n    enforce   Execute all registered Law.\n    get       Show a specific resource or group of resources.\n    version   Print Hammurabi version.\n\nUsage examples\n==============\n\nIn every case, make sure that you clone the target repository prior using Hammurabi.\nAfter cloning the repository, always set the current working directory to the target's\npath. Hammurabi will not clone the target repository or change its execution directory.\n\nEnforce registered laws\n-----------------------\n\n.. code-block:: bash\n\n    $ hammurabi enforce\n    [INFO]  2020-14-07 16:31 - Checkout branch \"hammurabi\"\n    [INFO]  2020-14-07 16:31 - Executing law \"L001\"\n    [INFO]  2020-14-07 16:31 - Running task for \"configure file exists\"\n    [INFO]  2020-14-07 16:31 - Rule \"configure file exists\" finished successfully\n    [INFO]  2020-14-07 16:31 - Running task for \"Minimum clang version is set\"\n    [INFO]  2020-14-07 16:31 - Rule \"Minimum clang version is set\" finished successfully\n    [INFO]  2020-14-07 16:31 - Running task for \"Minimum icc version is set\"\n    [INFO]  2020-14-07 16:31 - Rule \"Minimum icc version is set\" finished successfully\n    [INFO]  2020-14-07 16:31 - Running task for \"Minimum lessc version is set\"\n    [INFO]  2020-14-07 16:31 - Rule \"Minimum lessc version is set\" finished successfully\n    [INFO]  2020-14-07 16:31 - Running task for \"Maximum lessc version is set\"\n    [INFO]  2020-14-07 16:31 - Rule \"Maximum lessc version is set\" finished successfully\n    [INFO]  2020-14-07 16:31 - Pushing changes\n    [INFO]  2020-14-07 16:35 - Checking for opened pull request\n    [INFO]  2020-14-07 16:35 - Opening pull request\n\nListing available laws\n----------------------\n\n.. code-block:: bash\n\n    $ hammurabi get laws\n    - Gunicorn config set up properly\n\nGet info about a law by its name\n--------------------------------\n\n.. code-block:: bash\n\n    $ hammurabi get law \"Gunicorn config set up properly\"\n    Gunicorn config set up properly\n\n    Change the gunicorn configuration based on our learnings\n    described at: https://google.com/?q=gunicorn.\n\n    If the gunicorn configuration does not exist, create a\n    new one configuration file.\n\nGet all registered (root) rules\n-------------------------------\n\n.. code-block:: bash\n\n    $ hammurabi get rules\n    - Rule 1\n    - Rule 5\n\nGet a rule by its name\n----------------------\n\n.. code-block:: bash\n\n    $ hammurabi get rule \"Rule 1\"\n    Rule 1\n\n    Ensure that a file exists. If the file does not exists,\n    this :class:`hammurabi.rules.base.Rule` will create it.\n\n    Due to the file is already created by :func:`pre_task_hook`\n    there is no need to do anything just return the input parameter.\n\nDescribe a law by its name\n--------------------------\n\n.. code-block:: bash\n\n    $ hammurabi describe law \"Gunicorn config set up properly\"\n    Gunicorn config set up properly\n\n    Change the gunicorn configuration based on our learnings\n    described at: http://docs.gunicorn.org/en/latest/configure.html.\n\n    If the gunicorn configuration does not exist, create a\n    new one configuration file.\n\n    Rules:\n    --> Rule 1\n    --> Rule 2\n    --> Rule 3\n    --> Rule 4\n    --> Rule 5\n\nDescribe a rule by its name\n---------------------------\n\n.. code-block:: bash\n\n    $ hammurabi describe rule \"Rule 1\"\n    Rule 1\n\n    Ensure that a file exists. If the file does not exists,\n    this :class:`hammurabi.rules.base.Rule` will create it.\n\n    Due to the file is already created by :func:`pre_task_hook`\n    there is no need to do anything just return the input parameter.\n\n    Chain:\n    --> Rule 1\n    --> Rule 2\n    --> Rule 3\n    --> Rule 4\n\nGetting the execution order of laws and rules\n---------------------------------------------\n\n.. code-block:: bash\n\n    $ hammurabi get order\n    - Gunicorn config set up properly\n    --> Rule 1\n    --> Rule 2\n    --> Rule 3\n    --> Rule 4\n    --> Rule 5\n\nCustom Rules\n============\n\nAlthough the project aims to support as many general operations as it can,\nthe need for adding custom rules may arise.\n\nTo extend Hammurabi with custom rules, you will need to inherit a class\nfrom ``Rule`` and define its abstract methods.\n\nThe following example will show you how to create and use a custom rule.\nFor more reference please check how the existing rules are implemented.\n\n.. code-block:: python\n\n    # custom.py\n    import shutil\n    import logging\n    from hammurabi.mixins import GitMixin\n    from hammurabi.rules.base import Rule\n\n\n    class CustomOwnerChanged(Rule, GitMixin):\n        \"\"\"\n        Change the ownership of a file or directory to <original user>:admin.\n        \"\"\"\n\n        def __init__(self, name: str, path: Optional[Path] = None, **kwargs):\n            super().__init__(name, path, **kwargs)\n\n        def post_task_hook(self):\n            self.git_add(self.param)\n\n        def task(self) -> Path:\n            # Since ``Rule`` is setting its 2nd parameter to ``self.param``,\n            # we can use ``self.param`` to access the target file's path.\n            logging.debug('Changing group of \"%s\" to admin', str(self.param))\n            shutil.chown(self.param, group=\"admin\")\n            return self.param\n\nCommunity\n=========\n\nIf you need help or you would like to be part of the Hammurabi community, join us on discord_.\n\n.. _discord: https://discord.gg/dj8Myk5\n\nContributing\n============\n\nHurray, You reached this section, which means you are ready\nto contribute.\n\nPlease read our contibuting guideline_. This guideline will\nwalk you through how can you successfully contribute to\nHammurabi.\n\n.. _guideline: https://github.com/gabor-boros/hammurabi/blob/master/CONTRIBUTING.rst\n\nInstallation\n------------\n\nFor development you will need poetry_ and pre-commit_. After poetry\ninstalled, simply run `poetry install`. This command will both create\nthe virtualenv and install development dependencies for you.\n\n.. _poetry: https://python-poetry.org/docs/#installation\n.. _pre-commit: https://pre-commit.com/#install\n\n\nUseful make Commands\n--------------------\n\n+------------------+-------------------------------------+\n| Command          | Description                         |\n+==================+=====================================+\n| help             | Print available make commands       |\n+------------------+-------------------------------------+\n| clean            | Remove all artifacts                |\n+------------------+-------------------------------------+\n| clean-build      | Remove build artifacts              |\n+------------------+-------------------------------------+\n| clean-mypy       | Remove mypy artifacts               |\n+------------------+-------------------------------------+\n| clean-pyc        | Remove Python artifacts             |\n+------------------+-------------------------------------+\n| clean-test       | Remove test artifacts               |\n+------------------+-------------------------------------+\n| docs             | Generate Sphinx documentation       |\n+------------------+-------------------------------------+\n| format           | Run several formatters              |\n+------------------+-------------------------------------+\n| lint             | Run several linters after format    |\n+------------------+-------------------------------------+\n| test             | Run all tests with coverage         |\n+------------------+-------------------------------------+\n| test-unit        | Run unit tests with coverage        |\n+------------------+-------------------------------------+\n| test-integration | Run integration tests with coverage |\n+------------------+-------------------------------------+\n\nWhy Hammurabi?\n==============\n\nHammurabi was the sixth king in the Babylonian dynasty,\nwhich ruled in central Mesopotamia from c. 1894 to 1595 B.C.\n\nThe Code of Hammurabi was one of the earliest and most\ncomplete written legal codes and was proclaimed by the\nBabylonian king Hammurabi, who reigned from 1792 to 1750 B.C.\nHammurabi expanded the city-state of Babylon along the Euphrates\nRiver to unite all of southern Mesopotamia. The Hammurabi code\nof laws, a collection of 282 rules, established standards for\ncommercial interactions and set fines and punishments to meet\nthe requirements of justice. Hammurabi\u2019s Code was carved onto\na massive, finger-shaped black stone stele (pillar) that was\nlooted by invaders and finally rediscovered in 1901.\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gabor-boros/hammurabi/", "keywords": "automation,project,manipulate,rules,config", "license": "Apache-2.0", "maintainer": "G\u00e1bor Boros", "maintainer_email": "gabor.brs@gmail.com", "name": "hammurabi", "package_url": "https://pypi.org/project/hammurabi/", "platform": "", "project_url": "https://pypi.org/project/hammurabi/", "project_urls": {"Bug Tracker": "https://github.com/gabor-boros/hammurabi/issues/", "Documentation": "https://readthedocs.org/projects/hammurabi/badge/", "Homepage": "https://github.com/gabor-boros/hammurabi/", "Repository": "https://github.com/gabor-boros/hammurabi/"}, "release_url": "https://pypi.org/project/hammurabi/0.7.0/", "requires_dist": ["github3.py (>=1.3.0,<2.0.0)", "ruamel.yaml (>=0.16.5,<0.17.0)", "click (>=7.0,<8.0)", "configupdater (>=1.0.1,<2.0.0)", "gitpython (>=3.0.5,<4.0.0)", "pyhocon (>=0.3.54,<0.4.0)", "toml (>=0.10.0,<0.11.0)", "ujson (>=1.35,<2.0)", "pydantic (>=1.4,<2.0)", "jinja2 (>=2.11.1,<3.0.0)"], "requires_python": ">=3.7,<4.0", "summary": "Hammurabi is an extensible CLI tool responsible for enforcing user-defined rules on a git repository.", "version": "0.7.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/hammurabi\" rel=\"nofollow\"><img alt=\"PyPi Package\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ddccd23c31e68cc91578dc581903895d04220ebf/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f68616d6d75726162692e737667\"></a>\n<a href=\"https://travis-ci.org/gabor-boros/hammurabi\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c33af08d626f667ba2760f357490173d635094bc/68747470733a2f2f7472617669732d63692e6f72672f6761626f722d626f726f732f68616d6d75726162692e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://hammurabi.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8c2fbf7b843b2df65de3a0c0a4553475ec4f1729/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f68616d6d75726162692f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://codeclimate.com/github/gabor-boros/hammurabi/maintainability\" rel=\"nofollow\"><img alt=\"Maintainability\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4753ce0cb67db8660cd9ca0ec5255705631e6ddd/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f62636562616237313035646664383266333538622f6d61696e7461696e6162696c697479\"></a>\n<a href=\"https://codeclimate.com/github/gabor-boros/hammurabi/test_coverage\" rel=\"nofollow\"><img alt=\"Test Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d50ff054600ad892fdde51fa6f8753d7747f60da/68747470733a2f2f6170692e636f6465636c696d6174652e636f6d2f76312f6261646765732f62636562616237313035646664383266333538622f746573745f636f766572616765\"></a>\n<a href=\"https://github.com/ambv/black\" rel=\"nofollow\"><img alt=\"Black Formatted\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/fbfdc7754183ecf079bc71ddeabaf88f6cbc5c00/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f636f64652532307374796c652d626c61636b2d3030303030302e737667\"></a>\n<a href=\"https://bestpractices.coreinfrastructure.org/projects/3587\" rel=\"nofollow\"><img alt=\"CII Best Practices\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b19f74daea9a56b9239c557b22d907b95973e02e/68747470733a2f2f626573747072616374696365732e636f7265696e6672617374727563747572652e6f72672f70726f6a656374732f333538372f6261646765\"></a>\n<p>Mass changes made easy.</p>\n<p>Hammurabi is an extensible CLI tool responsible for enforcing user-defined rules\non a git repository.</p>\n<div id=\"features\">\n<h2>Features</h2>\n<p>Hammurabi integrates well with both git and Github to make sure that the\nexecution happens on a separate branch and the committed changes are pushed\nto the target repository. After pushing to the target repository, a pull\nrequest will be opened.</p>\n<p>Hammurabi supports several operations (Rules) by default. These Rules can do</p>\n<ul>\n<li>file and directory operations like copy, move, create or delete</li>\n<li>manipulation of attributes like ownership or access permissions change</li>\n<li>file and directory manipulations</li>\n<li>piped rule execution (output of a rule is the input of the next rule)</li>\n<li>children rule execution (output of a rule is the input of the upcoming rules)</li>\n<li>creating files from Jinja2 templates</li>\n</ul>\n<p>Supported file formats:</p>\n<ul>\n<li><tt>plain text</tt></li>\n<li><tt>ini</tt></li>\n<li><tt>json</tt></li>\n<li><tt>yaml</tt> (basic, single document operations)</li>\n</ul>\n<p>Upcoming file format support:</p>\n<ul>\n<li><tt>toml</tt></li>\n<li><tt>hocon</tt></li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>Hammurabi can be installed by running <tt>pip install hammurabi</tt> and it requires\nPython 3.7.0+ to run. This is the preferred method to install Hammurabi, as it\nwill always install the most recent stable release. If you don\u2019t have <a href=\"https://pip.pypa.io\" rel=\"nofollow\">pip</a>\ninstalled, this <a href=\"http://docs.python-guide.org/en/latest/starting/installation/\" rel=\"nofollow\">Python installation guide</a> can guide\nyou through the process.</p>\n</div>\n<div id=\"configuration\">\n<h2>Configuration</h2>\n<p>For configuration instructions, please visit the <a href=\"https://hammurabi.readthedocs.io/en/latest/config.html\" rel=\"nofollow\">documentation</a> site.</p>\n</div>\n<div id=\"command-line-options\">\n<h2>Command line options</h2>\n<pre>hammurabi <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> COMMAND <span class=\"o\">[</span>ARGS<span class=\"o\">]</span>...\n\nHammurabi is an extensible CLI tool responsible <span class=\"k\">for</span> enforcing user-defined\nrules on a git repository.\n\nFind more information at: https://hammurabi.readthedocs.io/latest/\n\nOptions:\n-c, --config PATH               Set the configuration file.  <span class=\"o\">[</span>default:\n                                pyproject.toml<span class=\"o\">]</span>\n--repository TEXT               Set the remote repository. Required format:\n                                owner/repository\n--github-token TEXT             Set github access token\n--log-level <span class=\"o\">[</span>DEBUG<span class=\"p\">|</span>INFO<span class=\"p\">|</span>WARNING<span class=\"p\">|</span>ERROR<span class=\"o\">]</span>\n                                Set logging level.\n--help                          Show this message and exit.\n\nCommands:\ndescribe  Show details of a specific resource or group of resources.\nenforce   Execute all registered Law.\nget       Show a specific resource or group of resources.\nversion   Print Hammurabi version.\n</pre>\n</div>\n<div id=\"usage-examples\">\n<h2>Usage examples</h2>\n<p>In every case, make sure that you clone the target repository prior using Hammurabi.\nAfter cloning the repository, always set the current working directory to the target\u2019s\npath. Hammurabi will not clone the target repository or change its execution directory.</p>\n<div id=\"enforce-registered-laws\">\n<h3>Enforce registered laws</h3>\n<pre>$ hammurabi enforce\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Checkout branch <span class=\"s2\">\"hammurabi\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Executing law <span class=\"s2\">\"L001\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Running task <span class=\"k\">for</span> <span class=\"s2\">\"configure file exists\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Rule <span class=\"s2\">\"configure file exists\"</span> finished successfully\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Running task <span class=\"k\">for</span> <span class=\"s2\">\"Minimum clang version is set\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Rule <span class=\"s2\">\"Minimum clang version is set\"</span> finished successfully\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Running task <span class=\"k\">for</span> <span class=\"s2\">\"Minimum icc version is set\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Rule <span class=\"s2\">\"Minimum icc version is set\"</span> finished successfully\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Running task <span class=\"k\">for</span> <span class=\"s2\">\"Minimum lessc version is set\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Rule <span class=\"s2\">\"Minimum lessc version is set\"</span> finished successfully\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Running task <span class=\"k\">for</span> <span class=\"s2\">\"Maximum lessc version is set\"</span>\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Rule <span class=\"s2\">\"Maximum lessc version is set\"</span> finished successfully\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:31 - Pushing changes\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:35 - Checking <span class=\"k\">for</span> opened pull request\n<span class=\"o\">[</span>INFO<span class=\"o\">]</span>  <span class=\"m\">2020</span>-14-07 <span class=\"m\">16</span>:35 - Opening pull request\n</pre>\n</div>\n<div id=\"listing-available-laws\">\n<h3>Listing available laws</h3>\n<pre>$ hammurabi get laws\n- Gunicorn config <span class=\"nb\">set</span> up properly\n</pre>\n</div>\n<div id=\"get-info-about-a-law-by-its-name\">\n<h3>Get info about a law by its name</h3>\n<pre>$ hammurabi get law <span class=\"s2\">\"Gunicorn config set up properly\"</span>\nGunicorn config <span class=\"nb\">set</span> up properly\n\nChange the gunicorn configuration based on our learnings\ndescribed at: https://google.com/?q<span class=\"o\">=</span>gunicorn.\n\nIf the gunicorn configuration does not exist, create a\nnew one configuration file.\n</pre>\n</div>\n<div id=\"get-all-registered-root-rules\">\n<h3>Get all registered (root) rules</h3>\n<pre>$ hammurabi get rules\n- Rule <span class=\"m\">1</span>\n- Rule <span class=\"m\">5</span>\n</pre>\n</div>\n<div id=\"get-a-rule-by-its-name\">\n<h3>Get a rule by its name</h3>\n<pre>$ hammurabi get rule <span class=\"s2\">\"Rule 1\"</span>\nRule <span class=\"m\">1</span>\n\nEnsure that a file exists. If the file does not exists,\nthis :class:<span class=\"sb\">`</span>hammurabi.rules.base.Rule<span class=\"sb\">`</span> will create it.\n\nDue to the file is already created by :func:<span class=\"sb\">`</span>pre_task_hook<span class=\"sb\">`</span>\nthere is no need to <span class=\"k\">do</span> anything just <span class=\"k\">return</span> the input parameter.\n</pre>\n</div>\n<div id=\"describe-a-law-by-its-name\">\n<h3>Describe a law by its name</h3>\n<pre>$ hammurabi describe law <span class=\"s2\">\"Gunicorn config set up properly\"</span>\nGunicorn config <span class=\"nb\">set</span> up properly\n\nChange the gunicorn configuration based on our learnings\ndescribed at: http://docs.gunicorn.org/en/latest/configure.html.\n\nIf the gunicorn configuration does not exist, create a\nnew one configuration file.\n\nRules:\n--&gt; Rule <span class=\"m\">1</span>\n--&gt; Rule <span class=\"m\">2</span>\n--&gt; Rule <span class=\"m\">3</span>\n--&gt; Rule <span class=\"m\">4</span>\n--&gt; Rule <span class=\"m\">5</span>\n</pre>\n</div>\n<div id=\"describe-a-rule-by-its-name\">\n<h3>Describe a rule by its name</h3>\n<pre>$ hammurabi describe rule <span class=\"s2\">\"Rule 1\"</span>\nRule <span class=\"m\">1</span>\n\nEnsure that a file exists. If the file does not exists,\nthis :class:<span class=\"sb\">`</span>hammurabi.rules.base.Rule<span class=\"sb\">`</span> will create it.\n\nDue to the file is already created by :func:<span class=\"sb\">`</span>pre_task_hook<span class=\"sb\">`</span>\nthere is no need to <span class=\"k\">do</span> anything just <span class=\"k\">return</span> the input parameter.\n\nChain:\n--&gt; Rule <span class=\"m\">1</span>\n--&gt; Rule <span class=\"m\">2</span>\n--&gt; Rule <span class=\"m\">3</span>\n--&gt; Rule <span class=\"m\">4</span>\n</pre>\n</div>\n<div id=\"getting-the-execution-order-of-laws-and-rules\">\n<h3>Getting the execution order of laws and rules</h3>\n<pre>$ hammurabi get order\n- Gunicorn config <span class=\"nb\">set</span> up properly\n--&gt; Rule <span class=\"m\">1</span>\n--&gt; Rule <span class=\"m\">2</span>\n--&gt; Rule <span class=\"m\">3</span>\n--&gt; Rule <span class=\"m\">4</span>\n--&gt; Rule <span class=\"m\">5</span>\n</pre>\n</div>\n</div>\n<div id=\"custom-rules\">\n<h2>Custom Rules</h2>\n<p>Although the project aims to support as many general operations as it can,\nthe need for adding custom rules may arise.</p>\n<p>To extend Hammurabi with custom rules, you will need to inherit a class\nfrom <tt>Rule</tt> and define its abstract methods.</p>\n<p>The following example will show you how to create and use a custom rule.\nFor more reference please check how the existing rules are implemented.</p>\n<pre><span class=\"c1\"># custom.py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">shutil</span>\n<span class=\"kn\">import</span> <span class=\"nn\">logging</span>\n<span class=\"kn\">from</span> <span class=\"nn\">hammurabi.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">GitMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">hammurabi.rules.base</span> <span class=\"kn\">import</span> <span class=\"n\">Rule</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">CustomOwnerChanged</span><span class=\"p\">(</span><span class=\"n\">Rule</span><span class=\"p\">,</span> <span class=\"n\">GitMixin</span><span class=\"p\">):</span>\n    <span class=\"sd\">\"\"\"\n    Change the ownership of a file or directory to &lt;original user&gt;:admin.\n    \"\"\"</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"n\">Path</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"kc\">None</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">post_task_hook</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">git_add</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param</span><span class=\"p\">)</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">task</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Path</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Since ``Rule`` is setting its 2nd parameter to ``self.param``,</span>\n        <span class=\"c1\"># we can use ``self.param`` to access the target file's path.</span>\n        <span class=\"n\">logging</span><span class=\"o\">.</span><span class=\"n\">debug</span><span class=\"p\">(</span><span class=\"s1\">'Changing group of \"</span><span class=\"si\">%s</span><span class=\"s1\">\" to admin'</span><span class=\"p\">,</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param</span><span class=\"p\">))</span>\n        <span class=\"n\">shutil</span><span class=\"o\">.</span><span class=\"n\">chown</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param</span><span class=\"p\">,</span> <span class=\"n\">group</span><span class=\"o\">=</span><span class=\"s2\">\"admin\"</span><span class=\"p\">)</span>\n        <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">param</span>\n</pre>\n</div>\n<div id=\"community\">\n<h2>Community</h2>\n<p>If you need help or you would like to be part of the Hammurabi community, join us on <a href=\"https://discord.gg/dj8Myk5\" rel=\"nofollow\">discord</a>.</p>\n</div>\n<div id=\"contributing\">\n<h2>Contributing</h2>\n<p>Hurray, You reached this section, which means you are ready\nto contribute.</p>\n<p>Please read our contibuting <a href=\"https://github.com/gabor-boros/hammurabi/blob/master/CONTRIBUTING.rst\" rel=\"nofollow\">guideline</a>. This guideline will\nwalk you through how can you successfully contribute to\nHammurabi.</p>\n<div id=\"id1\">\n<h3>Installation</h3>\n<p>For development you will need <a href=\"https://python-poetry.org/docs/#installation\" rel=\"nofollow\">poetry</a> and <a href=\"https://pre-commit.com/#install\" rel=\"nofollow\">pre-commit</a>. After poetry\ninstalled, simply run <cite>poetry install</cite>. This command will both create\nthe virtualenv and install development dependencies for you.</p>\n</div>\n<div id=\"useful-make-commands\">\n<h3>Useful make Commands</h3>\n<table>\n<colgroup>\n<col>\n<col>\n</colgroup>\n<thead>\n<tr><th>Command</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr><td>help</td>\n<td>Print available make commands</td>\n</tr>\n<tr><td>clean</td>\n<td>Remove all artifacts</td>\n</tr>\n<tr><td>clean-build</td>\n<td>Remove build artifacts</td>\n</tr>\n<tr><td>clean-mypy</td>\n<td>Remove mypy artifacts</td>\n</tr>\n<tr><td>clean-pyc</td>\n<td>Remove Python artifacts</td>\n</tr>\n<tr><td>clean-test</td>\n<td>Remove test artifacts</td>\n</tr>\n<tr><td>docs</td>\n<td>Generate Sphinx documentation</td>\n</tr>\n<tr><td>format</td>\n<td>Run several formatters</td>\n</tr>\n<tr><td>lint</td>\n<td>Run several linters after format</td>\n</tr>\n<tr><td>test</td>\n<td>Run all tests with coverage</td>\n</tr>\n<tr><td>test-unit</td>\n<td>Run unit tests with coverage</td>\n</tr>\n<tr><td>test-integration</td>\n<td>Run integration tests with coverage</td>\n</tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"why-hammurabi\">\n<h2>Why Hammurabi?</h2>\n<p>Hammurabi was the sixth king in the Babylonian dynasty,\nwhich ruled in central Mesopotamia from c. 1894 to 1595 B.C.</p>\n<p>The Code of Hammurabi was one of the earliest and most\ncomplete written legal codes and was proclaimed by the\nBabylonian king Hammurabi, who reigned from 1792 to 1750 B.C.\nHammurabi expanded the city-state of Babylon along the Euphrates\nRiver to unite all of southern Mesopotamia. The Hammurabi code\nof laws, a collection of 282 rules, established standards for\ncommercial interactions and set fines and punishments to meet\nthe requirements of justice. Hammurabi\u2019s Code was carved onto\na massive, finger-shaped black stone stele (pillar) that was\nlooted by invaders and finally rediscovered in 1901.</p>\n</div>\n\n          </div>"}, "last_serial": 7120124, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "e0793205d4abffe9e33d5ec5fbb96ae3", "sha256": "57f4da3fa0d34cbdb57983987f66166b3edf777a8041bf20e97dd979ea6de02c"}, "downloads": -1, "filename": "hammurabi-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "e0793205d4abffe9e33d5ec5fbb96ae3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 31685, "upload_time": "2020-03-12T21:59:44", "upload_time_iso_8601": "2020-03-12T21:59:44.736506Z", "url": "https://files.pythonhosted.org/packages/3a/22/f3d23e697e93cf1f95224da444f1a2c4c22f429b1840cc7625dba892573f/hammurabi-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1c3589650c4bd0d4d940b35b10a6edab", "sha256": "1f2372230c9af288cd8475e23f73a9ed3c49515edca602abe56c3262b1040eb8"}, "downloads": -1, "filename": "hammurabi-0.1.0.tar.gz", "has_sig": false, "md5_digest": "1c3589650c4bd0d4d940b35b10a6edab", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 27491, "upload_time": "2020-03-12T21:59:47", "upload_time_iso_8601": "2020-03-12T21:59:47.056165Z", "url": "https://files.pythonhosted.org/packages/76/13/26910adb697d14c373b016ea3be55cba71a24d7cd7863b0bb4bb7450a32a/hammurabi-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "ae3ff2573dad3574f10e825f6e7ab996", "sha256": "a718f3e2fd9c9829d04b1649a0cc1a0ea82791b170897ac2b6a2e5d1465741e7"}, "downloads": -1, "filename": "hammurabi-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "ae3ff2573dad3574f10e825f6e7ab996", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 32633, "upload_time": "2020-03-17T18:02:52", "upload_time_iso_8601": "2020-03-17T18:02:52.500930Z", "url": "https://files.pythonhosted.org/packages/ea/73/5c6c7f3456d6b2b3f1b5e6afda89155e0b679d71cc83333ca83da394038e/hammurabi-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b3b9066d58874419aa078b0c7f2c13e6", "sha256": "ad2af68c34df65556e2dc3f8f44f4ce1fcf2924562d54fa3e7b2399745c54435"}, "downloads": -1, "filename": "hammurabi-0.1.1.tar.gz", "has_sig": false, "md5_digest": "b3b9066d58874419aa078b0c7f2c13e6", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 28548, "upload_time": "2020-03-17T18:02:53", "upload_time_iso_8601": "2020-03-17T18:02:53.768611Z", "url": "https://files.pythonhosted.org/packages/99/32/0b9547ffc644d2fe557bdf9c71728df27ab11153689e1dd48dd91fd34cf1/hammurabi-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "dc58fd82c239dd8607387bbb6475a05c", "sha256": "d30b550fc7c782c68eee5817a72604c366551a9ee3ac1389cba52caef8b3caa9"}, "downloads": -1, "filename": "hammurabi-0.1.2-py3-none-any.whl", "has_sig": false, "md5_digest": "dc58fd82c239dd8607387bbb6475a05c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 32661, "upload_time": "2020-03-18T08:48:45", "upload_time_iso_8601": "2020-03-18T08:48:45.565355Z", "url": "https://files.pythonhosted.org/packages/eb/17/efdd49b63eac227562fd0f4bca6a2c82d5de87a228d226093b695142a44d/hammurabi-0.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b71824f38cdddcd9e84971e7c52de850", "sha256": "aaa79f47550e63a36cb96a11d99065ae39ac0f810d3dfa912443a3f6e92bfd0a"}, "downloads": -1, "filename": "hammurabi-0.1.2.tar.gz", "has_sig": false, "md5_digest": "b71824f38cdddcd9e84971e7c52de850", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 28589, "upload_time": "2020-03-18T08:48:46", "upload_time_iso_8601": "2020-03-18T08:48:46.983507Z", "url": "https://files.pythonhosted.org/packages/39/92/09a23bcfe64fe7866259400fdb61b2fd5653eb62f5750171743bdaafbfac/hammurabi-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "cf87f6ac2829441b1c696f574f304ade", "sha256": "9634dc9a9cfa51d4e1e62bcb3439e7ae809c36454151787ead34ff1e4ed848a9"}, "downloads": -1, "filename": "hammurabi-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cf87f6ac2829441b1c696f574f304ade", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 37816, "upload_time": "2020-03-23T08:36:12", "upload_time_iso_8601": "2020-03-23T08:36:12.629473Z", "url": "https://files.pythonhosted.org/packages/b6/39/3681b1f2434c266f40125704d83db22dfcd657d8f6e2f116f08eeb41587e/hammurabi-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f44352609b7dde2a41bcbd210f62beb8", "sha256": "7caebf2f772caa4f1cba134733ea18b78a001568e30e02abe7b28bf8ad18e186"}, "downloads": -1, "filename": "hammurabi-0.2.0.tar.gz", "has_sig": false, "md5_digest": "f44352609b7dde2a41bcbd210f62beb8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 31032, "upload_time": "2020-03-23T08:36:14", "upload_time_iso_8601": "2020-03-23T08:36:14.624936Z", "url": "https://files.pythonhosted.org/packages/f8/03/90679aa1b3f12616d76fe8ff427789e598f1a80a4e24845a1aacaf5ee2c8/hammurabi-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "108a103ca6c5e7532f80483a7367cf52", "sha256": "a6f3c7d295fcf0cee4bfa2d29e9539b08dfede44c7ed69b4ac0ba2c55cb62b3e"}, "downloads": -1, "filename": "hammurabi-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "108a103ca6c5e7532f80483a7367cf52", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 42659, "upload_time": "2020-03-25T10:49:23", "upload_time_iso_8601": "2020-03-25T10:49:23.782811Z", "url": "https://files.pythonhosted.org/packages/a7/c7/b5216ba6ad6fd38bf27360f2ac7d807a73d2087c0d0d2ed203c1fc3a7e5c/hammurabi-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0e4eff0169a13bea83c703f4989e6d19", "sha256": "5e5f62b134dd4f7c12fbd0730b9f36ab7169738bbd26499cf0a5944fca754a9c"}, "downloads": -1, "filename": "hammurabi-0.3.0.tar.gz", "has_sig": false, "md5_digest": "0e4eff0169a13bea83c703f4989e6d19", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 34490, "upload_time": "2020-03-25T10:49:25", "upload_time_iso_8601": "2020-03-25T10:49:25.527214Z", "url": "https://files.pythonhosted.org/packages/ca/76/69c757ac03ad615cc0f229b0b5a5596e4821ffb4396deca7b588cd190512/hammurabi-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "3e3c2bb527794a60b824f38a6a1f29fd", "sha256": "708ea528e6c3a5105cff697084cfc28b638855faf1cae2dbd79f338222ab2a61"}, "downloads": -1, "filename": "hammurabi-0.3.1-py3-none-any.whl", "has_sig": false, "md5_digest": "3e3c2bb527794a60b824f38a6a1f29fd", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 42737, "upload_time": "2020-03-26T12:35:45", "upload_time_iso_8601": "2020-03-26T12:35:45.067440Z", "url": "https://files.pythonhosted.org/packages/0e/ed/b699a3d1e515ac53e4fc256dd1fa76444d2b19e8cd1b257b30d219f05cc2/hammurabi-0.3.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "211835b68bf71beebcd2de2ec9500f9c", "sha256": "8ac59f8f09992ef38e16737f80a4deada8245fe593e72d8f462abe8c809df202"}, "downloads": -1, "filename": "hammurabi-0.3.1.tar.gz", "has_sig": false, "md5_digest": "211835b68bf71beebcd2de2ec9500f9c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 34548, "upload_time": "2020-03-26T12:35:46", "upload_time_iso_8601": "2020-03-26T12:35:46.241746Z", "url": "https://files.pythonhosted.org/packages/b5/58/eebc525963729b2d76aa916fd2ed541d8e0e5ff81579577afa45bd9fa466/hammurabi-0.3.1.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "17f6709be0a1e7b317245663a32c11b7", "sha256": "72d7984964bc533ccc5c4de88ddf6753c207448472f8c1df2c4ff0248e94c610"}, "downloads": -1, "filename": "hammurabi-0.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "17f6709be0a1e7b317245663a32c11b7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 46702, "upload_time": "2020-03-30T15:13:15", "upload_time_iso_8601": "2020-03-30T15:13:15.632774Z", "url": "https://files.pythonhosted.org/packages/f1/f3/7b78a187216296a79f683e3d44ba6aa324fb56ab9298257da15c154dcaf9/hammurabi-0.4.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "09f4d06aa007905de23957de9daeb840", "sha256": "d47c54fc5875c7e7781bb23bd10b85f9e991e01ae46ac7559d2721fa50656c6c"}, "downloads": -1, "filename": "hammurabi-0.4.0.tar.gz", "has_sig": false, "md5_digest": "09f4d06aa007905de23957de9daeb840", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 37476, "upload_time": "2020-03-30T15:13:17", "upload_time_iso_8601": "2020-03-30T15:13:17.224656Z", "url": "https://files.pythonhosted.org/packages/f7/8a/9d0afc23f445bc4f0bf7000c4bbfff47df4b2e0827c6e5e8274cbf91f71c/hammurabi-0.4.0.tar.gz", "yanked": false}], "0.5.0": [{"comment_text": "", "digests": {"md5": "3915d95284d3cdd0eb83c1c5ea56904c", "sha256": "47297350c70a915952f5ceb0e105bb3cd64e49ab7222f1899f2833e4c5cbf064"}, "downloads": -1, "filename": "hammurabi-0.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "3915d95284d3cdd0eb83c1c5ea56904c", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 46440, "upload_time": "2020-03-31T10:36:00", "upload_time_iso_8601": "2020-03-31T10:36:00.649415Z", "url": "https://files.pythonhosted.org/packages/b7/2c/3d2b12dd8d2026c5e226cf200e13a216fc952ce7b7f5e478acd967e5b95d/hammurabi-0.5.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0017ea53228d5ec27e254e41ef9d43cf", "sha256": "af0141e6a8fd09763b0ca2c96470db1ce52731514898b2c87d58f59103899dac"}, "downloads": -1, "filename": "hammurabi-0.5.0.tar.gz", "has_sig": false, "md5_digest": "0017ea53228d5ec27e254e41ef9d43cf", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 37277, "upload_time": "2020-03-31T10:36:01", "upload_time_iso_8601": "2020-03-31T10:36:01.859779Z", "url": "https://files.pythonhosted.org/packages/c6/1a/ba8faf54eb6dc21f97fc861e7ccd7e0c47974195181be5f24f7428d2b1bf/hammurabi-0.5.0.tar.gz", "yanked": false}], "0.6.0": [{"comment_text": "", "digests": {"md5": "1bab2a4e3c05bcb4d499e6280f3bc59b", "sha256": "27fca1a91c0f9fa53b4c457d5029dc7eb48647b91df45ec13c55684b848ef4c5"}, "downloads": -1, "filename": "hammurabi-0.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "1bab2a4e3c05bcb4d499e6280f3bc59b", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 54078, "upload_time": "2020-04-06T06:55:55", "upload_time_iso_8601": "2020-04-06T06:55:55.826575Z", "url": "https://files.pythonhosted.org/packages/86/55/c6f9c4180f90fc874c36a13498eb66fc75c1b1201d95e2cf22ff7d5ab8dc/hammurabi-0.6.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2a7c38af84c5771ba9a3d68f8ab30ff1", "sha256": "9cb879f430425ae39a955f1ed6071c83e750c985ed0c42eef41fa5ba62474f52"}, "downloads": -1, "filename": "hammurabi-0.6.0.tar.gz", "has_sig": false, "md5_digest": "2a7c38af84c5771ba9a3d68f8ab30ff1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 41495, "upload_time": "2020-04-06T06:55:57", "upload_time_iso_8601": "2020-04-06T06:55:57.118512Z", "url": "https://files.pythonhosted.org/packages/e0/10/2f333c9f72d0450deb41fdba3c8d3a48e548302167fb3ea34ccc4e12926b/hammurabi-0.6.0.tar.gz", "yanked": false}], "0.7.0": [{"comment_text": "", "digests": {"md5": "cc1d905b441015dd4875101abbb015ea", "sha256": "9fd3c0d72751efcb7c9c07c5477eacd12897c327eece18bc51640ef26325fc6e"}, "downloads": -1, "filename": "hammurabi-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cc1d905b441015dd4875101abbb015ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 56901, "upload_time": "2020-04-28T12:43:17", "upload_time_iso_8601": "2020-04-28T12:43:17.762815Z", "url": "https://files.pythonhosted.org/packages/cc/0f/0ec6e7ef50acc683af95985cedfea55ff248419f782bd8f4d067764fda4d/hammurabi-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a73a3ef5d4e445299b293008262d96c", "sha256": "46ea1c3041222b55a269563c2aa0e0d69bb7d99073ca2782a1251a854d64691d"}, "downloads": -1, "filename": "hammurabi-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3a73a3ef5d4e445299b293008262d96c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 44057, "upload_time": "2020-04-28T12:43:19", "upload_time_iso_8601": "2020-04-28T12:43:19.269227Z", "url": "https://files.pythonhosted.org/packages/49/47/c87872d8c36c360da9ec1a5f175c42691d9382ba832f41e63e504b2d92e3/hammurabi-0.7.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cc1d905b441015dd4875101abbb015ea", "sha256": "9fd3c0d72751efcb7c9c07c5477eacd12897c327eece18bc51640ef26325fc6e"}, "downloads": -1, "filename": "hammurabi-0.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "cc1d905b441015dd4875101abbb015ea", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.7,<4.0", "size": 56901, "upload_time": "2020-04-28T12:43:17", "upload_time_iso_8601": "2020-04-28T12:43:17.762815Z", "url": "https://files.pythonhosted.org/packages/cc/0f/0ec6e7ef50acc683af95985cedfea55ff248419f782bd8f4d067764fda4d/hammurabi-0.7.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a73a3ef5d4e445299b293008262d96c", "sha256": "46ea1c3041222b55a269563c2aa0e0d69bb7d99073ca2782a1251a854d64691d"}, "downloads": -1, "filename": "hammurabi-0.7.0.tar.gz", "has_sig": false, "md5_digest": "3a73a3ef5d4e445299b293008262d96c", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.7,<4.0", "size": 44057, "upload_time": "2020-04-28T12:43:19", "upload_time_iso_8601": "2020-04-28T12:43:19.269227Z", "url": "https://files.pythonhosted.org/packages/49/47/c87872d8c36c360da9ec1a5f175c42691d9382ba832f41e63e504b2d92e3/hammurabi-0.7.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:52:39 2020"}