{"info": {"author": "Eric Carmichael", "author_email": "eric@ckcollab.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "polished\n========\n\n<p align=\"center\">\n    <a href=\"http://www.youtube.com/watch?v=Yi5fHkGqe38\">\n        <img src=\"http://img.youtube.com/vi/Yi5fHkGqe38/0.jpg\" alt=\"Polished Example Video\">\n    </a>\n</p>\n\nThe goal of polished is to show the awesome progression and amount of tweaks that go into any website. My <a href=\"http://www.ericcarmichael.com/pages/resume.html\">resume</a>\nis a good example, dozens of hours of work and tweaking to come up with this pretty basic final product. Showing that\nblood, sweat and hilarious tears in between should be pretty entertaining. Watch pages undulate, stretch, break,\ngrow, and shrink into place.\n\nMore explanation available [on my blog](http://www.ericcarmichael.com/polished.html).\n\n\n\n\n### How does polished work?\n\n1. Fires up selected backend *(for example, PelicanBackend if you use the [Pelican](https://github.com/getpelican/pelican) blog site generator)*\n2. Gets the git revision history\n3. Iterates through that history, prepares the page, screen caps it\n4. Converts images to video\n5. OPTIONALLY: If after reviewing the images/video you find bugs, inherit a backend and `@polish` out the kinks so it's a nice smooth video\n\n\nGetting started\n===============\n\n### Installing\n\n**Requirements**\n\n1. Mac/Linux\n1. NodeJS\n2. PhantomJS\n3. ffmpeg\n\nThen\n\n```\n> pip install polished\n```\n\n\n\n\n### Usage\n\nFor a static website with no .html generation needed and `index.html` is in the same dir:\n\n```\n> polished\n```\n\nFor a static website with `index.html` in another location\n\n```\n> polished \"some/path/to/index.html\"\n```\n\nFor a pelican blog:\n\n```\n> polished \"output/index.html\" --backend polished.backends.pelican.PelicanBackend\n```\n\n\n\n\n### Configuring behavior\n\nThe default backend is `SimpleBackend` which (with no path specified) looks for \"index.html\" in current directory and\nexpects static html without any steps needed to generate the page. This default setup probably doesn't work for most\nprojects.\n\nTo expand the behavior, call `polished my/output/index.html --backend my.backend.Backend`\n\n\n\n\n\n### Basic available backends\n\n**SimpleBackend**\n\nThe most basic backend, assumes no steps are needed to generate HTML.\n\n```python\npolished.backends.simple.SimpleBackend\n```\n\n\n**PelicanBackend**\n\nFor the Pelican blogging system, calls `make html` between screenshots.\n\n```python\npolished.backends.pelican.PelicanBackend\n```\n\n\n**DjangoBackend**\n\nFor the Django framework, calls `python manage.py syncdb --migrate`\n\n```python\npolished.backends.django.DjangoBackend\n```\n\n\n\n\n\n## Custom backend\n\nGenerally, on a simple website these backends will care of you, however you may have to\ninherit them and add custom behavior\n\n```python\nfrom polished.backends import PelicanBackend\n\nclass SomeWeirdBehaviorRequired(PelicanBackend):\n    def prepare(self):\n        '''\n        Prepare your general stuff here! Generate HTML, setup static files, etc.\n        '''\n        pass\n\n    def cleanup(self):\n        '''\n        Clean up after yourself, delete static files if you need to\n        '''\n        pass\n```\n\n\n\n\n## Polishing certain commits\n\nUse the `@polish` decorator:\n\n```python\nfrom selenium.webdriver.common.by import By\nfrom selenium.webdriver.support.ui import WebDriverWait\nfrom selenium.webdriver.support import expected_conditions as EC\n\nfrom polished.backends import PelicanBackend\nfrom polished.decorators import polish\n\nclass SomeWeirdBehaviorRequired(PelicanBackend):\n    def _patch_image_srcs(self):\n        wait = WebDriverWait(self.DRIVER, 10)\n        element = wait.until(EC.visibility_of_element_located((By.TAG_NAME, 'img')))\n\n        self.DRIVER.execute_script(\"\"\"\n            var img_array = document.getElementsByTagName('img');\n\n            for(var i=0; i<img_array.length; i++) {\n                var href_replaced = img_array[i].getAttribute('src').replace(\n                    /^\\/images/,\n                    \"../images\"\n                );\n                img_array[i].setAttribute(\"src\", href_replaced);\n            }\n        \"\"\")\n\n    @polish(urls=[\"output/pages/about.html\"], commit_indexes=range(112, 135))\n    def fix_about_me_broken_images(self):\n        self._patch_image_srcs()\n\n    @polish(urls=[\"output/pages/resume.html\"], commit_indexes=range(68,134))\n    def fix_resume_page_broken_images(self):\n        self._patch_image_srcs()\n```\n\n### @polish range of commit indexes\n\n```python\n@polish(commit_indexes=range(20,30))\ndef some_func():\n    # Polish commits 20 through 30\n```\n\n\n\n### @polish certain pages\n\n```python\n@polish(urls=[\"index.html\", \"about.html\"])\ndef some_func():\n    # Fix up something with \"index.html\" and \"about.html\"\n```\n\n\n\n### @polish certain pages of certain commits\n\n```python\n@polish(urls=[\"index.html\", \"about.html\"], commit_indexes=range(20,30))\ndef some_func():\n    # Fix up something with \"index.html\" and \"about.html\", but only in commits 20 through 30\n```\n\n\n\nKnown issues\n============\n\n* It leaves a ton of processes still running for some reason\n* Web fonts don't work right with PhantomJS\n\n\n\n\n\n\n\n\nAcknowledgements\n================\nCouldn't have done it without this [screenshot script](http://stackoverflow.com/a/18068097) by Aamir Adnan\n\nThanks [Levi Thomason](https://github.com/levithomason) for always listening to me, encouraging me to improve,\nand helping me out in all aspects of life", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ckcollab/polished", "keywords": "screen capture,video", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "polished", "package_url": "https://pypi.org/project/polished/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/polished/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ckcollab/polished"}, "release_url": "https://pypi.org/project/polished/0.0.15/", "requires_dist": null, "requires_python": null, "summary": "Generates screenshots of a website based on git history", "version": "0.0.15", "yanked": false, "html_description": "<div class=\"project-description\">\n            polished<br>========<br><br>&lt;p align=\"center\"&gt;<br>    &lt;a href=\"http://www.youtube.com/watch?v=Yi5fHkGqe38\"&gt;<br>        &lt;img src=\"http://img.youtube.com/vi/Yi5fHkGqe38/0.jpg\" alt=\"Polished Example Video\"&gt;<br>    &lt;/a&gt;<br>&lt;/p&gt;<br><br>The goal of polished is to show the awesome progression and amount of tweaks that go into any website. My &lt;a href=\"http://www.ericcarmichael.com/pages/resume.html\"&gt;resume&lt;/a&gt;<br>is a good example, dozens of hours of work and tweaking to come up with this pretty basic final product. Showing that<br>blood, sweat and hilarious tears in between should be pretty entertaining. Watch pages undulate, stretch, break,<br>grow, and shrink into place.<br><br>More explanation available [on my blog](http://www.ericcarmichael.com/polished.html).<br><br><br><br><br>### How does polished work?<br><br>1. Fires up selected backend *(for example, PelicanBackend if you use the [Pelican](https://github.com/getpelican/pelican) blog site generator)*<br>2. Gets the git revision history<br>3. Iterates through that history, prepares the page, screen caps it<br>4. Converts images to video<br>5. OPTIONALLY: If after reviewing the images/video you find bugs, inherit a backend and `@polish` out the kinks so it's a nice smooth video<br><br><br>Getting started<br>===============<br><br>### Installing<br><br>**Requirements**<br><br>1. Mac/Linux<br>1. NodeJS<br>2. PhantomJS<br>3. ffmpeg<br><br>Then<br><br>```<br>&gt; pip install polished<br>```<br><br><br><br><br>### Usage<br><br>For a static website with no .html generation needed and `index.html` is in the same dir:<br><br>```<br>&gt; polished<br>```<br><br>For a static website with `index.html` in another location<br><br>```<br>&gt; polished \"some/path/to/index.html\"<br>```<br><br>For a pelican blog:<br><br>```<br>&gt; polished \"output/index.html\" --backend polished.backends.pelican.PelicanBackend<br>```<br><br><br><br><br>### Configuring behavior<br><br>The default backend is `SimpleBackend` which (with no path specified) looks for \"index.html\" in current directory and<br>expects static html without any steps needed to generate the page. This default setup probably doesn't work for most<br>projects.<br><br>To expand the behavior, call `polished my/output/index.html --backend my.backend.Backend`<br><br><br><br><br><br>### Basic available backends<br><br>**SimpleBackend**<br><br>The most basic backend, assumes no steps are needed to generate HTML.<br><br>```python<br>polished.backends.simple.SimpleBackend<br>```<br><br><br>**PelicanBackend**<br><br>For the Pelican blogging system, calls `make html` between screenshots.<br><br>```python<br>polished.backends.pelican.PelicanBackend<br>```<br><br><br>**DjangoBackend**<br><br>For the Django framework, calls `python manage.py syncdb --migrate`<br><br>```python<br>polished.backends.django.DjangoBackend<br>```<br><br><br><br><br><br>## Custom backend<br><br>Generally, on a simple website these backends will care of you, however you may have to<br>inherit them and add custom behavior<br><br>```python<br>from polished.backends import PelicanBackend<br><br>class SomeWeirdBehaviorRequired(PelicanBackend):<br>    def prepare(self):<br>        '''<br>        Prepare your general stuff here! Generate HTML, setup static files, etc.<br>        '''<br>        pass<br><br>    def cleanup(self):<br>        '''<br>        Clean up after yourself, delete static files if you need to<br>        '''<br>        pass<br>```<br><br><br><br><br>## Polishing certain commits<br><br>Use the `@polish` decorator:<br><br>```python<br>from selenium.webdriver.common.by import By<br>from selenium.webdriver.support.ui import WebDriverWait<br>from selenium.webdriver.support import expected_conditions as EC<br><br>from polished.backends import PelicanBackend<br>from polished.decorators import polish<br><br>class SomeWeirdBehaviorRequired(PelicanBackend):<br>    def _patch_image_srcs(self):<br>        wait = WebDriverWait(self.DRIVER, 10)<br>        element = wait.until(EC.visibility_of_element_located((By.TAG_NAME, 'img')))<br><br>        self.DRIVER.execute_script(\"\"\"<br>            var img_array = document.getElementsByTagName('img');<br><br>            for(var i=0; i&lt;img_array.length; i++) {<br>                var href_replaced = img_array[i].getAttribute('src').replace(<br>                    /^\\/images/,<br>                    \"../images\"<br>                );<br>                img_array[i].setAttribute(\"src\", href_replaced);<br>            }<br>        \"\"\")<br><br>    @polish(urls=[\"output/pages/about.html\"], commit_indexes=range(112, 135))<br>    def fix_about_me_broken_images(self):<br>        self._patch_image_srcs()<br><br>    @polish(urls=[\"output/pages/resume.html\"], commit_indexes=range(68,134))<br>    def fix_resume_page_broken_images(self):<br>        self._patch_image_srcs()<br>```<br><br>### @polish range of commit indexes<br><br>```python<br>@polish(commit_indexes=range(20,30))<br>def some_func():<br>    # Polish commits 20 through 30<br>```<br><br><br><br>### @polish certain pages<br><br>```python<br>@polish(urls=[\"index.html\", \"about.html\"])<br>def some_func():<br>    # Fix up something with \"index.html\" and \"about.html\"<br>```<br><br><br><br>### @polish certain pages of certain commits<br><br>```python<br>@polish(urls=[\"index.html\", \"about.html\"], commit_indexes=range(20,30))<br>def some_func():<br>    # Fix up something with \"index.html\" and \"about.html\", but only in commits 20 through 30<br>```<br><br><br><br>Known issues<br>============<br><br>* It leaves a ton of processes still running for some reason<br>* Web fonts don't work right with PhantomJS<br><br><br><br><br><br><br><br><br>Acknowledgements<br>================<br>Couldn't have done it without this [screenshot script](http://stackoverflow.com/a/18068097) by Aamir Adnan<br><br>Thanks [Levi Thomason](https://github.com/levithomason) for always listening to me, encouraging me to improve,<br>and helping me out in all aspects of life\n          </div>"}, "last_serial": 1097494, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "3b97b51d3549d8542dd799315d51639e", "sha256": "70f2cf2fbe51f878ac6cefe8005e2aeaf5e4cd1450fca20a818c9930eb5077a4"}, "downloads": -1, "filename": "polished-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3b97b51d3549d8542dd799315d51639e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2936, "upload_time": "2014-04-18T03:30:37", "upload_time_iso_8601": "2014-04-18T03:30:37.440575Z", "url": "https://files.pythonhosted.org/packages/56/d5/7859775717865450500023a9a36a20435c6a5f6ae919720ead06ec19d2dd/polished-0.0.1.tar.gz", "yanked": false}], "0.0.10": [{"comment_text": "", "digests": {"md5": "204f34a3c832526698bcf3bc957c6fee", "sha256": "0bcbf732818d8dcfd797d9236cce34faf0261bfa350e9817109422fa8d4d63d7"}, "downloads": -1, "filename": "polished-0.0.10.zip", "has_sig": false, "md5_digest": "204f34a3c832526698bcf3bc957c6fee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15270, "upload_time": "2014-05-12T09:37:01", "upload_time_iso_8601": "2014-05-12T09:37:01.718156Z", "url": "https://files.pythonhosted.org/packages/ec/11/873e5f430cf6da129c1f866e96958cc695db51875c4f2243f20947b02d6a/polished-0.0.10.zip", "yanked": false}], "0.0.11": [{"comment_text": "", "digests": {"md5": "97aa7785692b4aa98c280ef1337e46b4", "sha256": "c079012916439b8f3c13bbe404f865b99299aaaceae61158b18c7acdeb95200b"}, "downloads": -1, "filename": "polished-0.0.11.zip", "has_sig": false, "md5_digest": "97aa7785692b4aa98c280ef1337e46b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15264, "upload_time": "2014-05-12T09:38:21", "upload_time_iso_8601": "2014-05-12T09:38:21.827858Z", "url": "https://files.pythonhosted.org/packages/18/6b/192ac868d39361ec45588d277eef70fae81ebfc0eece9ca8113a55c72b99/polished-0.0.11.zip", "yanked": false}], "0.0.12": [{"comment_text": "", "digests": {"md5": "a878232371546308ffdc27f0b7611ba6", "sha256": "cbc6076e0f72d6f20f8b4917ac36ff12c0d45f94491f6ae6ab66e61e820def7f"}, "downloads": -1, "filename": "polished-0.0.12.zip", "has_sig": false, "md5_digest": "a878232371546308ffdc27f0b7611ba6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15344, "upload_time": "2014-05-12T09:40:30", "upload_time_iso_8601": "2014-05-12T09:40:30.628244Z", "url": "https://files.pythonhosted.org/packages/e2/66/500ac31f0201af7d1cfde5f9d53e07a581592bb93fedf971f0ce41f09aff/polished-0.0.12.zip", "yanked": false}], "0.0.13": [{"comment_text": "", "digests": {"md5": "db6dbd15555fe1c9b12ae27d8039e01c", "sha256": "77665a85ea64d277db1bd6430b672871107451c055e1d76dc1435f37cf485aa7"}, "downloads": -1, "filename": "polished-0.0.13.zip", "has_sig": false, "md5_digest": "db6dbd15555fe1c9b12ae27d8039e01c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15344, "upload_time": "2014-05-12T09:43:58", "upload_time_iso_8601": "2014-05-12T09:43:58.147645Z", "url": "https://files.pythonhosted.org/packages/9c/7a/67fd5eb36ca89524bf9c38f48df40da5421eb4a02038b0f78160dcb5200b/polished-0.0.13.zip", "yanked": false}], "0.0.14": [{"comment_text": "", "digests": {"md5": "221de19c2fcc54c37aa4947a8310a2d7", "sha256": "acee84688933f7c0d0ee093eacaeceb22cd8b539c950f3d7f8cf136bec81cc18"}, "downloads": -1, "filename": "polished-0.0.14.tar.gz", "has_sig": false, "md5_digest": "221de19c2fcc54c37aa4947a8310a2d7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9845, "upload_time": "2014-05-19T18:37:49", "upload_time_iso_8601": "2014-05-19T18:37:49.018898Z", "url": "https://files.pythonhosted.org/packages/15/e0/87a6f7e04a18727735037358335c4d857106f8c1a680d34d63177d4fb9d7/polished-0.0.14.tar.gz", "yanked": false}], "0.0.15": [{"comment_text": "", "digests": {"md5": "3b136835ef771d2cf3d0532c4256ecc6", "sha256": "c120fee20ceddb4693dc8bb76b229a157e169592d8aa340c29d344e697ec12f2"}, "downloads": -1, "filename": "polished-0.0.15.tar.gz", "has_sig": false, "md5_digest": "3b136835ef771d2cf3d0532c4256ecc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9845, "upload_time": "2014-05-19T18:42:19", "upload_time_iso_8601": "2014-05-19T18:42:19.447290Z", "url": "https://files.pythonhosted.org/packages/b5/ff/79c0b2d62d5d9f72675b830757a049710737b9b7755645c6a523d52a94e0/polished-0.0.15.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "9066c4f9c74f566ecf99497c3cf8390a", "sha256": "51c83f92bfeb5db7cf83498b7157668ee30d5b3431f5c76fb5d30513318e0a7e"}, "downloads": -1, "filename": "polished-0.0.2.tar.gz", "has_sig": false, "md5_digest": "9066c4f9c74f566ecf99497c3cf8390a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5101, "upload_time": "2014-04-18T03:36:41", "upload_time_iso_8601": "2014-04-18T03:36:41.398858Z", "url": "https://files.pythonhosted.org/packages/22/d2/377808a282de1ce6326f5e220082896a314e39ff71404becb3b247afcc6b/polished-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "9f8699be6d6d2796e844f3f49388cd5a", "sha256": "78c904ae2b41a33884203afd4737eecf45df8ad58da2c638c2bab92f95b1a536"}, "downloads": -1, "filename": "polished-0.0.3.tar.gz", "has_sig": false, "md5_digest": "9f8699be6d6d2796e844f3f49388cd5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5452, "upload_time": "2014-04-18T04:24:18", "upload_time_iso_8601": "2014-04-18T04:24:18.595215Z", "url": "https://files.pythonhosted.org/packages/83/d8/d02b57ee6ebc6e1b0c2818dfa71c6270b5bb4ff51bb5a7f4e3037274f998/polished-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "d5bb7c589635a81127d9399bc320b2fa", "sha256": "fbff42699996029a32969d00d5a8ec6a44538ef0cef25eaadb4b9aea5eb12fd7"}, "downloads": -1, "filename": "polished-0.0.4.tar.gz", "has_sig": false, "md5_digest": "d5bb7c589635a81127d9399bc320b2fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8583, "upload_time": "2014-04-18T09:39:12", "upload_time_iso_8601": "2014-04-18T09:39:12.111932Z", "url": "https://files.pythonhosted.org/packages/f0/c4/86db1dcb103cf2f344cf1baa166ccc4565bfc4c8a9494a87323e8b17716f/polished-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "43b006b683f7eb11a5508b087956107b", "sha256": "c6cc2f1d204717ecefa1aa6b066658d53ae977fd2dd0c5f8412f81a2bb1641a5"}, "downloads": -1, "filename": "polished-0.0.5.tar.gz", "has_sig": false, "md5_digest": "43b006b683f7eb11a5508b087956107b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8579, "upload_time": "2014-04-18T09:40:39", "upload_time_iso_8601": "2014-04-18T09:40:39.395967Z", "url": "https://files.pythonhosted.org/packages/a8/ef/8e21af4853ea4490788e2ffd8a6536da50a7c269205c35dd96c458de9c05/polished-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "ba82067a16e2ce347811fa4192783c8c", "sha256": "07b2091b6584565495c3d3df6c53fc2b508ebe4491a5844ffc1a6c3d02f32caf"}, "downloads": -1, "filename": "polished-0.0.6.tar.gz", "has_sig": false, "md5_digest": "ba82067a16e2ce347811fa4192783c8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8718, "upload_time": "2014-04-18T11:19:29", "upload_time_iso_8601": "2014-04-18T11:19:29.284413Z", "url": "https://files.pythonhosted.org/packages/21/80/27639d017c17d898042e312994e63a2fefb7ff3d2ba511636a1605904d89/polished-0.0.6.tar.gz", "yanked": false}], "0.0.7": [{"comment_text": "", "digests": {"md5": "f80625256478e37acf9e6b45481657d6", "sha256": "5e750466a27c070673b5360f3b9c3eb7f52bcc6379dea0cc8d05bd3839391e9e"}, "downloads": -1, "filename": "polished-0.0.7.tar.gz", "has_sig": false, "md5_digest": "f80625256478e37acf9e6b45481657d6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8897, "upload_time": "2014-04-18T18:07:25", "upload_time_iso_8601": "2014-04-18T18:07:25.310743Z", "url": "https://files.pythonhosted.org/packages/8c/89/e234e46e1b3f6a9aa4a1ca8eae1b27a0fa681e9c52e90ae94a576a9c3d61/polished-0.0.7.tar.gz", "yanked": false}], "0.0.8": [{"comment_text": "", "digests": {"md5": "d597ba09fa3273561135c0f22cc4d205", "sha256": "f0117e7aecddee918fe9f17b4acdcb5698b2079a1d50865d999d975cf2f03e01"}, "downloads": -1, "filename": "polished-0.0.8.tar.gz", "has_sig": false, "md5_digest": "d597ba09fa3273561135c0f22cc4d205", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8962, "upload_time": "2014-04-18T19:35:04", "upload_time_iso_8601": "2014-04-18T19:35:04.207793Z", "url": "https://files.pythonhosted.org/packages/2d/b9/78fd8246225720f3d0ac688fac3623c3725d415c2c91ce08f844157517af/polished-0.0.8.tar.gz", "yanked": false}], "0.0.9": [{"comment_text": "", "digests": {"md5": "e214c48ea49a9920dcca58446c6e5fd8", "sha256": "25c939c490609a46ef20bccd878735a953919643898ae152d6aa29f3603e2d47"}, "downloads": -1, "filename": "polished-0.0.9.tar.gz", "has_sig": false, "md5_digest": "e214c48ea49a9920dcca58446c6e5fd8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9669, "upload_time": "2014-05-06T01:34:18", "upload_time_iso_8601": "2014-05-06T01:34:18.871791Z", "url": "https://files.pythonhosted.org/packages/4d/2f/6f09ee3849037c22fc0421d86a81dc6dff1fa9cb6859f2f12d0358f54ff4/polished-0.0.9.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "5e5b2ef5201732e9dd96ff24ca193d94", "sha256": "0fb7f5306a23a19248cc4b74df60647aca6480b0745f497da1f7f519894cc15f"}, "downloads": -1, "filename": "polished-0.0.9.zip", "has_sig": false, "md5_digest": "5e5b2ef5201732e9dd96ff24ca193d94", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15215, "upload_time": "2014-05-12T09:35:38", "upload_time_iso_8601": "2014-05-12T09:35:38.910671Z", "url": "https://files.pythonhosted.org/packages/8d/d7/5668395a67b101a7d4b4b19c21c401cc07d9ae66cd240ebefda9a0465bfe/polished-0.0.9.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3b136835ef771d2cf3d0532c4256ecc6", "sha256": "c120fee20ceddb4693dc8bb76b229a157e169592d8aa340c29d344e697ec12f2"}, "downloads": -1, "filename": "polished-0.0.15.tar.gz", "has_sig": false, "md5_digest": "3b136835ef771d2cf3d0532c4256ecc6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9845, "upload_time": "2014-05-19T18:42:19", "upload_time_iso_8601": "2014-05-19T18:42:19.447290Z", "url": "https://files.pythonhosted.org/packages/b5/ff/79c0b2d62d5d9f72675b830757a049710737b9b7755645c6a523d52a94e0/polished-0.0.15.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:51:54 2020"}