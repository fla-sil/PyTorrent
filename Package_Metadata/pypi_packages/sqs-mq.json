{"info": {"author": "Mardix", "author_email": "mcx2082@gmail.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "# SQS-MQ\n\nA message queue system using AWS SQS\n\n## Features\n\n- Automatically process messages\n- Created completed and failed buckets\n- Create bucket by pool name\n- Process messages by bucket\n\n---\n\n## Install\n\n```\npip install sqs-mq\n```\n\n## Create/Connect\n\n```python\n\nmq = SQSMQ(name, \n          aws_access_key_id, \n          aws_secret_access_key, \n          region, \n          visibility_timeout)\n\n```\n\nAlternatively, connect later\n\n```python\n\nmq = SQSMQ(name)\n\nmq.connect(aws_access_key_id, \n          aws_secret_access_key, \n          region)\n\n```\n\n\n**SQS-MQ** will create 3 buckets of messages:\n\n**QUEUED**: This bucket will contain all the messages to be processed\n\n**COMPLETED**: contains all messages that have have processed successfully\n\n**FAILED**: contains all messages that have failed to process properly, or due to an error.\n\n```python\n\nmq = SQSMQ(\"myQname\", **kwargs)\n\n```\n\nThree buckets will be created: \n`myQname-QUEUED`, `myQname-COMPLETED`, `myQname-FAILED`\n\n\n---\n## Usage \n\n### Add Task\n\n ```python\n\n mq.add(my_function_name, *args, **kwargs)\n\n ```\n\n### Add Task in different pool\n\nTo add a task in a different pool. it will be named: `myQname-QUEUED-FAST`\n\n```python\n\nmq.add(my_fn, *args, **kwargs, pool='FAST')\n\n```\n\n### Add delay\n\nTo add a delay\n\n```python\n\nmq.add(my_fn, delay=45)\n\n```\n\n## Run the tasks\n\n### Run all\n\n```python\n\nmq.run()\n\n```\n\n### Run by pool name\n\n```python\n\nmq.run(pool='FAST')\n\n```\n\n---\n\n## COMPLETED and FAILED\n\nOnce a tasks have been processed, it will be added in either `COMPLETED` or `FAILED` buckets.\n\n### Run all items in the COMPLETED bucket\n\n```python\n\ndef completed_callback(body:dict): \n  data = ...\n\nmq.run_completed(callback=completed_callback)\n\n```\n\n### Run all items in the FAILED bucket\n\n```python\n\ndef failed_callback(body:dict): \n  data = ...\n\nmq.run_failed(callback=failed_callback)\n\n```\n\n**Once captured, it will delete the message from the queue**\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/mardix/sqs-mq", "keywords": "aws,sqs,mq,queue,amazon mq,celery,active mq,apollo,beanstalkd,resque,rabbitmq,gearman,ironmq,message", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "sqs-mq", "package_url": "https://pypi.org/project/sqs-mq/", "platform": "any", "project_url": "https://pypi.org/project/sqs-mq/", "project_urls": {"Homepage": "https://github.com/mardix/sqs-mq"}, "release_url": "https://pypi.org/project/sqs-mq/0.2.1/", "requires_dist": ["boto", "python-slugify"], "requires_python": "", "summary": "A message queue system using AWS SQS", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>SQS-MQ</h1>\n<p>A message queue system using AWS SQS</p>\n<h2>Features</h2>\n<ul>\n<li>Automatically process messages</li>\n<li>Created completed and failed buckets</li>\n<li>Create bucket by pool name</li>\n<li>Process messages by bucket</li>\n</ul>\n<hr>\n<h2>Install</h2>\n<pre><code>pip install sqs-mq\n</code></pre>\n<h2>Create/Connect</h2>\n<pre><span class=\"n\">mq</span> <span class=\"o\">=</span> <span class=\"n\">SQSMQ</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">,</span> \n          <span class=\"n\">aws_access_key_id</span><span class=\"p\">,</span> \n          <span class=\"n\">aws_secret_access_key</span><span class=\"p\">,</span> \n          <span class=\"n\">region</span><span class=\"p\">,</span> \n          <span class=\"n\">visibility_timeout</span><span class=\"p\">)</span>\n</pre>\n<p>Alternatively, connect later</p>\n<pre><span class=\"n\">mq</span> <span class=\"o\">=</span> <span class=\"n\">SQSMQ</span><span class=\"p\">(</span><span class=\"n\">name</span><span class=\"p\">)</span>\n\n<span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"n\">aws_access_key_id</span><span class=\"p\">,</span> \n          <span class=\"n\">aws_secret_access_key</span><span class=\"p\">,</span> \n          <span class=\"n\">region</span><span class=\"p\">)</span>\n</pre>\n<p><strong>SQS-MQ</strong> will create 3 buckets of messages:</p>\n<p><strong>QUEUED</strong>: This bucket will contain all the messages to be processed</p>\n<p><strong>COMPLETED</strong>: contains all messages that have have processed successfully</p>\n<p><strong>FAILED</strong>: contains all messages that have failed to process properly, or due to an error.</p>\n<pre><span class=\"n\">mq</span> <span class=\"o\">=</span> <span class=\"n\">SQSMQ</span><span class=\"p\">(</span><span class=\"s2\">\"myQname\"</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<p>Three buckets will be created:\n<code>myQname-QUEUED</code>, <code>myQname-COMPLETED</code>, <code>myQname-FAILED</code></p>\n<hr>\n<h2>Usage</h2>\n<h3>Add Task</h3>\n<pre><span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">my_function_name</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">)</span>\n</pre>\n<h3>Add Task in different pool</h3>\n<p>To add a task in a different pool. it will be named: <code>myQname-QUEUED-FAST</code></p>\n<pre><span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">my_fn</span><span class=\"p\">,</span> <span class=\"o\">*</span><span class=\"n\">args</span><span class=\"p\">,</span> <span class=\"o\">**</span><span class=\"n\">kwargs</span><span class=\"p\">,</span> <span class=\"n\">pool</span><span class=\"o\">=</span><span class=\"s1\">'FAST'</span><span class=\"p\">)</span>\n</pre>\n<h3>Add delay</h3>\n<p>To add a delay</p>\n<pre><span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">add</span><span class=\"p\">(</span><span class=\"n\">my_fn</span><span class=\"p\">,</span> <span class=\"n\">delay</span><span class=\"o\">=</span><span class=\"mi\">45</span><span class=\"p\">)</span>\n</pre>\n<h2>Run the tasks</h2>\n<h3>Run all</h3>\n<pre><span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<h3>Run by pool name</h3>\n<pre><span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">(</span><span class=\"n\">pool</span><span class=\"o\">=</span><span class=\"s1\">'FAST'</span><span class=\"p\">)</span>\n</pre>\n<hr>\n<h2>COMPLETED and FAILED</h2>\n<p>Once a tasks have been processed, it will be added in either <code>COMPLETED</code> or <code>FAILED</code> buckets.</p>\n<h3>Run all items in the COMPLETED bucket</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">completed_callback</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">:</span><span class=\"nb\">dict</span><span class=\"p\">):</span> \n  <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n\n<span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">run_completed</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">completed_callback</span><span class=\"p\">)</span>\n</pre>\n<h3>Run all items in the FAILED bucket</h3>\n<pre><span class=\"k\">def</span> <span class=\"nf\">failed_callback</span><span class=\"p\">(</span><span class=\"n\">body</span><span class=\"p\">:</span><span class=\"nb\">dict</span><span class=\"p\">):</span> \n  <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"o\">...</span>\n\n<span class=\"n\">mq</span><span class=\"o\">.</span><span class=\"n\">run_failed</span><span class=\"p\">(</span><span class=\"n\">callback</span><span class=\"o\">=</span><span class=\"n\">failed_callback</span><span class=\"p\">)</span>\n</pre>\n<p><strong>Once captured, it will delete the message from the queue</strong></p>\n\n          </div>"}, "last_serial": 5812449, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "d1a046ffb5b9659a98e741f0fedbc2bd", "sha256": "ebafef3ca45a1aaede1e5d16cec93a756d3ad506c7d409e81583ed673ef17d52"}, "downloads": -1, "filename": "sqs_mq-0.1.0-py2-none-any.whl", "has_sig": false, "md5_digest": "d1a046ffb5b9659a98e741f0fedbc2bd", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4230, "upload_time": "2019-08-25T19:09:55", "upload_time_iso_8601": "2019-08-25T19:09:55.433535Z", "url": "https://files.pythonhosted.org/packages/c0/3b/f40b57801f9f7f2ac5b29c9b88ca5f1cb42afd233efacc1805edfa4cfea5/sqs_mq-0.1.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9a54c3af2f5c543aa96f9ca2f96db6b5", "sha256": "02fa50a7b654753ad66ce95371b7a280bd415ff2b7e3d1e2dd44d03023d73c18"}, "downloads": -1, "filename": "sqs-mq-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9a54c3af2f5c543aa96f9ca2f96db6b5", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4411, "upload_time": "2019-08-25T19:09:57", "upload_time_iso_8601": "2019-08-25T19:09:57.745587Z", "url": "https://files.pythonhosted.org/packages/80/1b/044bb783390bff5e10d221a25cfcacb8a1b190ed9b1107022f9168fe35a0/sqs-mq-0.1.0.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "9c8c3c0f4fcf9eff6e34d9386f152593", "sha256": "99adb15858c17c7ec2c47a0e948862a0a0d36cb0439b8c2b6d4fc56fd51528ec"}, "downloads": -1, "filename": "sqs_mq-0.2.0-py2-none-any.whl", "has_sig": false, "md5_digest": "9c8c3c0f4fcf9eff6e34d9386f152593", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4277, "upload_time": "2019-09-10T05:39:45", "upload_time_iso_8601": "2019-09-10T05:39:45.394404Z", "url": "https://files.pythonhosted.org/packages/df/1d/f90bea9ad4f9eb1795970e5118dfa528058539740dd109db33969c7a86ea/sqs_mq-0.2.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "fc2982b61bc0cc48a376791809e93577", "sha256": "660accac2cfc60298790b553312825d9128f0c7460f1067dc40fd1137718a854"}, "downloads": -1, "filename": "sqs-mq-0.2.0.tar.gz", "has_sig": false, "md5_digest": "fc2982b61bc0cc48a376791809e93577", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4458, "upload_time": "2019-09-10T05:39:47", "upload_time_iso_8601": "2019-09-10T05:39:47.914515Z", "url": "https://files.pythonhosted.org/packages/f8/f5/10fb7c6a65673275ab539d931f1e7d8bc242f4581d9bd5bc835900882eb1/sqs-mq-0.2.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "0894d50847bb03b83f14dfd50c5aad6a", "sha256": "067a4fb72ce653dd671b90b3a4b95e87046b02d97cf5ec0ec1e769275b3a29d7"}, "downloads": -1, "filename": "sqs_mq-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0894d50847bb03b83f14dfd50c5aad6a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4286, "upload_time": "2019-09-11T02:43:50", "upload_time_iso_8601": "2019-09-11T02:43:50.750864Z", "url": "https://files.pythonhosted.org/packages/5e/c6/374af7bb38f61b6f528a0ace34eaf5a6515d1993f12f48414c81895b1710/sqs_mq-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fde41c233e534e3a3dea0fb0e892369", "sha256": "b28e8b960457761b24ce38f9c58d0bd76e6ca57659285c021b85c1463accb5c1"}, "downloads": -1, "filename": "sqs-mq-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4fde41c233e534e3a3dea0fb0e892369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4460, "upload_time": "2019-09-11T02:43:54", "upload_time_iso_8601": "2019-09-11T02:43:54.598351Z", "url": "https://files.pythonhosted.org/packages/b1/8d/d373daf80b9dd865d1725d9e55f0364c83747544250ecaa562f449cf615d/sqs-mq-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0894d50847bb03b83f14dfd50c5aad6a", "sha256": "067a4fb72ce653dd671b90b3a4b95e87046b02d97cf5ec0ec1e769275b3a29d7"}, "downloads": -1, "filename": "sqs_mq-0.2.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0894d50847bb03b83f14dfd50c5aad6a", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4286, "upload_time": "2019-09-11T02:43:50", "upload_time_iso_8601": "2019-09-11T02:43:50.750864Z", "url": "https://files.pythonhosted.org/packages/5e/c6/374af7bb38f61b6f528a0ace34eaf5a6515d1993f12f48414c81895b1710/sqs_mq-0.2.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4fde41c233e534e3a3dea0fb0e892369", "sha256": "b28e8b960457761b24ce38f9c58d0bd76e6ca57659285c021b85c1463accb5c1"}, "downloads": -1, "filename": "sqs-mq-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4fde41c233e534e3a3dea0fb0e892369", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4460, "upload_time": "2019-09-11T02:43:54", "upload_time_iso_8601": "2019-09-11T02:43:54.598351Z", "url": "https://files.pythonhosted.org/packages/b1/8d/d373daf80b9dd865d1725d9e55f0364c83747544250ecaa562f449cf615d/sqs-mq-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:29 2020"}