{"info": {"author": "", "author_email": "", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "[![Build Status](https://travis-ci.com/alan-turing-institute/bluesky.svg?branch=master)](https://travis-ci.com/alan-turing-institute/bluesky)\n\n# BlueSky - The Open Air Traffic Simulator\n\nBlueSky is distributed under the GNU General Public License v3.\n\nBlueSky is meant as a tool to perform research on Air Traffic Management and Air Traffic Flows.\n\nThe goal of BlueSky is to provide everybody who wants to visualize, analyze or simulate air\ntraffic with a tool to do so without any restrictions, licenses or limitations. It can be copied,\nmodified, cited, etc. without any limitations.\n\nPlease send suggestions, proposed changes or contributions through GitHub, preferably after\ndebugging it and optimising it for run-time performance.\n\n## BlueSky Releases\nIf you are not (yet) interested in reading and editing the source of BlueSky, you can also download a release version of BlueSky, that you can install directly, without having to worry about python and library dependencies. You can find the latest release here:\nhttps://github.com/ProfHoekstra/bluesky/releases\n\n## BlueSky Wiki\nInstallation and user guides are accessible at:\nhttps://github.com/ProfHoekstra/bluesky/wiki\n\n## Some features of BlueSky:\n- Written in the freely available, ultra-simple-hence-easy-to-learn, multi-platform language\nPython (both 2 and 3) (using numpy and either pygame or Qt+OpenGL for visualisation) with source\n- Extensible by means of self-contained [plugins](https://github.com/ProfHoekstra/bluesky/wiki/plugin)\n- Contains open source data on navaids, performance data of aircraft and geography\n- Global coverage navaid and airport data\n- Contains simulations of aircraft performance, flight management system (LNAV, VNAV under construction),\nautopilot, conflict detection and resolution and airborne separation assurance systems\n- Compatible with BADA 3.x data\n- Compatible wth NLR Traffic Manager TMX as used by NLR and NASA LaRC\n- Traffic is controlled via user inputs in a console window or by playing scenario files (.SCN)\ncontaining the same commands with a time stamp before the command (\"HH:MM:SS.hh>\")\n- Mouse clicks in traffic window are use in console for lat/lon/heading and position inputs\n\n## Contributions\nBlueSky is still under heavy development. We would like to encourage anyone with a strong interest in\nATM and/or Python to join us. Please feel free to comment, criticise, and contribute to this project.\n\n## Installation on Linux/Mac\n\nRun the install script to create the required Python virtual environment (optionally with the `--headless` flag to omit GUI dependencies for a minimal installation):\n> ./install.sh [--headless]\n\nThen follow the instructions at the end of the script.\n\nIt may be necessary to first install pip, tkinter and virtualenv, e.g. on Ubuntu do:\n\n```\nsudo apt-get install python3-pip\nsudo apt-get install python3-tk\nsudo pip3 install virtualenv\n```\nthen re-run the install script.\n\n## Installation using pip\n\nNote that headless is now the default when installing using pip (in contrast to the `install.sh` method above).\nTo install a full GUI environment please do the following:\n\n```bash\n# NOTE: 'full' option attempts to pip install pyopengl-acclerate, which may have issues installing\npython3 -m pip install bluesky-simulator[full] || \\\n  python3 -m pip install bluesky-simulator[gui]\n```\n\nThe pip install approach above may fail due to permissions if using the system python3.\nEither append `--user` to the pip command above or prepend `sudo` if you are on a Linux/Mac machine.    \n\nIf installing in development mode from a locally cloned copy of bluesky (instead of via PyPI) change this to:\n> python3 -m pip install -e .\n\nNote that to install the GUI dependencies in development mode, this becomes:\n\n```bash\npython3 -m pip install -e .[full] || \\\n  python3 -m pip install -e .[gui]\n```\n\n## Docker support\n\nTo run in a Docker container:\n```\ndocker-compose build\ndocker-compose up\n```\n\n## Connecting to a remote BlueSky Simulation\n\nThis will skip discovery and attempt a connection to the specified host (using the default ports):\n\n```bash\n> python BlueSky.py --client --bluesky_host=1.2.3.4\n```\n\n## Development\n\n### Installation\n\nTo install development packages:\n\n```bash\n> pip install -r requirements-dev.txt\n```\n\n### Testing\n\nTo run the unit tests (excluding upstream legacy tests which fail): \n```\npytest --ignore bluesky/test/tcp/ --ignore bluesky/test/traffic -W ignore::DeprecationWarning\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ProfHoekstra/bluesky", "keywords": "atm transport simulation aviation aircraft", "license": "", "maintainer": "", "maintainer_email": "", "name": "bluesky-simulator", "package_url": "https://pypi.org/project/bluesky-simulator/", "platform": "", "project_url": "https://pypi.org/project/bluesky-simulator/", "project_urls": {"Homepage": "https://github.com/ProfHoekstra/bluesky", "Source": "https://github.com/ProfHoekstra/bluesky"}, "release_url": "https://pypi.org/project/bluesky-simulator/0.0.1.dev3/", "requires_dist": ["numpy", "scipy", "matplotlib", "msgpack", "zmq", "pandas", "semver (==2.8.*)", "check-manifest ; extra == 'dev'", "pyqt5 ; extra == 'full'", "PyQtWebEngine ; extra == 'full'", "pygame ; extra == 'full'", "pyopengl ; extra == 'full'", "pyopengl-accelerate ; extra == 'full'", "pyqt5 ; extra == 'gui'", "PyQtWebEngine ; extra == 'gui'", "pygame ; extra == 'gui'", "pyopengl ; extra == 'gui'", "coverage ; extra == 'test'", "flake8 ; extra == 'test'", "radon ; extra == 'test'", "nose ; extra == 'test'"], "requires_python": "", "summary": "The Open Air Traffic Simulator", "version": "0.0.1.dev3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.com/alan-turing-institute/bluesky\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ce2d0a158a333aedaf25dc58f1bb499e5c7109e3/68747470733a2f2f7472617669732d63692e636f6d2f616c616e2d747572696e672d696e737469747574652f626c7565736b792e7376673f6272616e63683d6d6173746572\"></a></p>\n<h1>BlueSky - The Open Air Traffic Simulator</h1>\n<p>BlueSky is distributed under the GNU General Public License v3.</p>\n<p>BlueSky is meant as a tool to perform research on Air Traffic Management and Air Traffic Flows.</p>\n<p>The goal of BlueSky is to provide everybody who wants to visualize, analyze or simulate air\ntraffic with a tool to do so without any restrictions, licenses or limitations. It can be copied,\nmodified, cited, etc. without any limitations.</p>\n<p>Please send suggestions, proposed changes or contributions through GitHub, preferably after\ndebugging it and optimising it for run-time performance.</p>\n<h2>BlueSky Releases</h2>\n<p>If you are not (yet) interested in reading and editing the source of BlueSky, you can also download a release version of BlueSky, that you can install directly, without having to worry about python and library dependencies. You can find the latest release here:\n<a href=\"https://github.com/ProfHoekstra/bluesky/releases\" rel=\"nofollow\">https://github.com/ProfHoekstra/bluesky/releases</a></p>\n<h2>BlueSky Wiki</h2>\n<p>Installation and user guides are accessible at:\n<a href=\"https://github.com/ProfHoekstra/bluesky/wiki\" rel=\"nofollow\">https://github.com/ProfHoekstra/bluesky/wiki</a></p>\n<h2>Some features of BlueSky:</h2>\n<ul>\n<li>Written in the freely available, ultra-simple-hence-easy-to-learn, multi-platform language\nPython (both 2 and 3) (using numpy and either pygame or Qt+OpenGL for visualisation) with source</li>\n<li>Extensible by means of self-contained <a href=\"https://github.com/ProfHoekstra/bluesky/wiki/plugin\" rel=\"nofollow\">plugins</a></li>\n<li>Contains open source data on navaids, performance data of aircraft and geography</li>\n<li>Global coverage navaid and airport data</li>\n<li>Contains simulations of aircraft performance, flight management system (LNAV, VNAV under construction),\nautopilot, conflict detection and resolution and airborne separation assurance systems</li>\n<li>Compatible with BADA 3.x data</li>\n<li>Compatible wth NLR Traffic Manager TMX as used by NLR and NASA LaRC</li>\n<li>Traffic is controlled via user inputs in a console window or by playing scenario files (.SCN)\ncontaining the same commands with a time stamp before the command (\"HH:MM:SS.hh&gt;\")</li>\n<li>Mouse clicks in traffic window are use in console for lat/lon/heading and position inputs</li>\n</ul>\n<h2>Contributions</h2>\n<p>BlueSky is still under heavy development. We would like to encourage anyone with a strong interest in\nATM and/or Python to join us. Please feel free to comment, criticise, and contribute to this project.</p>\n<h2>Installation on Linux/Mac</h2>\n<p>Run the install script to create the required Python virtual environment (optionally with the <code>--headless</code> flag to omit GUI dependencies for a minimal installation):</p>\n<blockquote>\n<p>./install.sh [--headless]</p>\n</blockquote>\n<p>Then follow the instructions at the end of the script.</p>\n<p>It may be necessary to first install pip, tkinter and virtualenv, e.g. on Ubuntu do:</p>\n<pre><code>sudo apt-get install python3-pip\nsudo apt-get install python3-tk\nsudo pip3 install virtualenv\n</code></pre>\n<p>then re-run the install script.</p>\n<h2>Installation using pip</h2>\n<p>Note that headless is now the default when installing using pip (in contrast to the <code>install.sh</code> method above).\nTo install a full GUI environment please do the following:</p>\n<pre><span class=\"c1\"># NOTE: 'full' option attempts to pip install pyopengl-acclerate, which may have issues installing</span>\npython3 -m pip install bluesky-simulator<span class=\"o\">[</span>full<span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"se\">\\</span>\n  python3 -m pip install bluesky-simulator<span class=\"o\">[</span>gui<span class=\"o\">]</span>\n</pre>\n<p>The pip install approach above may fail due to permissions if using the system python3.\nEither append <code>--user</code> to the pip command above or prepend <code>sudo</code> if you are on a Linux/Mac machine.</p>\n<p>If installing in development mode from a locally cloned copy of bluesky (instead of via PyPI) change this to:</p>\n<blockquote>\n<p>python3 -m pip install -e .</p>\n</blockquote>\n<p>Note that to install the GUI dependencies in development mode, this becomes:</p>\n<pre>python3 -m pip install -e .<span class=\"o\">[</span>full<span class=\"o\">]</span> <span class=\"o\">||</span> <span class=\"se\">\\</span>\n  python3 -m pip install -e .<span class=\"o\">[</span>gui<span class=\"o\">]</span>\n</pre>\n<h2>Docker support</h2>\n<p>To run in a Docker container:</p>\n<pre><code>docker-compose build\ndocker-compose up\n</code></pre>\n<h2>Connecting to a remote BlueSky Simulation</h2>\n<p>This will skip discovery and attempt a connection to the specified host (using the default ports):</p>\n<pre>&gt; python BlueSky.py --client --bluesky_host<span class=\"o\">=</span><span class=\"m\">1</span>.2.3.4\n</pre>\n<h2>Development</h2>\n<h3>Installation</h3>\n<p>To install development packages:</p>\n<pre>&gt; pip install -r requirements-dev.txt\n</pre>\n<h3>Testing</h3>\n<p>To run the unit tests (excluding upstream legacy tests which fail):</p>\n<pre><code>pytest --ignore bluesky/test/tcp/ --ignore bluesky/test/traffic -W ignore::DeprecationWarning\n</code></pre>\n\n          </div>"}, "last_serial": 6218500, "releases": {"0.0.1.dev2": [{"comment_text": "", "digests": {"md5": "dd392d522b108d16c0ac80f2558960da", "sha256": "e0090145af7cbd17599d86d5371cfc91dfd765c70ba6c0236cdff9064b901767"}, "downloads": -1, "filename": "bluesky_simulator-0.0.1.dev2-py3-none-any.whl", "has_sig": false, "md5_digest": "dd392d522b108d16c0ac80f2558960da", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49424953, "upload_time": "2018-11-28T17:10:27", "upload_time_iso_8601": "2018-11-28T17:10:27.968426Z", "url": "https://files.pythonhosted.org/packages/5b/e8/b81be727cdf3c3e5e562117b5926dda2bea7dd61d2c7feef73685723fb44/bluesky_simulator-0.0.1.dev2-py3-none-any.whl", "yanked": false}], "0.0.1.dev3": [{"comment_text": "", "digests": {"md5": "ec822fa7d6424f4592797949c57085cb", "sha256": "4b40e39d2679b128fb5a360105d157cdc6f4487b3684345e3e0a8c3950eeb554"}, "downloads": -1, "filename": "bluesky_simulator-0.0.1.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "ec822fa7d6424f4592797949c57085cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49450368, "upload_time": "2019-11-29T14:09:38", "upload_time_iso_8601": "2019-11-29T14:09:38.349916Z", "url": "https://files.pythonhosted.org/packages/2a/12/643dbfab474d2727eb8d91a415cca99e4ba4a0191b3b43c30712979478fa/bluesky_simulator-0.0.1.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f98ebb6d3f988709e448c8a519a00b4", "sha256": "ec326d0f0e56e28ec6cc19569c1e00a7e2ba33c7755e05c5318e505b793b8a9b"}, "downloads": -1, "filename": "bluesky-simulator-0.0.1.dev3.tar.gz", "has_sig": false, "md5_digest": "7f98ebb6d3f988709e448c8a519a00b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50224714, "upload_time": "2019-11-29T14:10:12", "upload_time_iso_8601": "2019-11-29T14:10:12.580693Z", "url": "https://files.pythonhosted.org/packages/49/7d/275ad69a2b9cf330886b605e4abad0479b3c8029977567c97845b528aa89/bluesky-simulator-0.0.1.dev3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ec822fa7d6424f4592797949c57085cb", "sha256": "4b40e39d2679b128fb5a360105d157cdc6f4487b3684345e3e0a8c3950eeb554"}, "downloads": -1, "filename": "bluesky_simulator-0.0.1.dev3-py3-none-any.whl", "has_sig": false, "md5_digest": "ec822fa7d6424f4592797949c57085cb", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 49450368, "upload_time": "2019-11-29T14:09:38", "upload_time_iso_8601": "2019-11-29T14:09:38.349916Z", "url": "https://files.pythonhosted.org/packages/2a/12/643dbfab474d2727eb8d91a415cca99e4ba4a0191b3b43c30712979478fa/bluesky_simulator-0.0.1.dev3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7f98ebb6d3f988709e448c8a519a00b4", "sha256": "ec326d0f0e56e28ec6cc19569c1e00a7e2ba33c7755e05c5318e505b793b8a9b"}, "downloads": -1, "filename": "bluesky-simulator-0.0.1.dev3.tar.gz", "has_sig": false, "md5_digest": "7f98ebb6d3f988709e448c8a519a00b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 50224714, "upload_time": "2019-11-29T14:10:12", "upload_time_iso_8601": "2019-11-29T14:10:12.580693Z", "url": "https://files.pythonhosted.org/packages/49/7d/275ad69a2b9cf330886b605e4abad0479b3c8029977567c97845b528aa89/bluesky-simulator-0.0.1.dev3.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:36:57 2020"}