{"info": {"author": "Izel Levy", "author_email": "izel93@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "# Embrion\n\nEmbrion is a project aimed at isolating development environments of repositories. It creates a docker container\nto jump start development. Currently environment has a Jupyterlab UI, Visual Studio Code UI and SSH access. You can also\ndevelop using PyCharm connecting through SSH to the docker.\n\n## Requirements\n\nYou need to have docker and docker-compose installed on your computer. \n\n## Limitations\n\nThis project only supports conda environment files (environment.yml) with a name. Support for requirements.txt\nmay be added later. For now you can list all your requirements as a pip dependency in your environment.yml file.\nSee https://stackoverflow.com/questions/35245401/combining-conda-environment-yml-with-pip-requirements-txt for more info.\n\n## Installation\n\nGo to your main project directory.\n\nRun:\n    \n    pip install embrion\n\n\nThen only if you do not have an environment.yml file in your directory run:\n\n    embrion init\n\nThen start the development server using:\n\n    embrion up\n\nThen open Jupyterlab UI using,\n\n    embrion jupyter\n\nor Visual Studio Code using,\n\n    embrion vscode\n    \n## Usage   \n\nTo remove everything run:\n   \n    embrion down\n\nTo refresh the environment run:\n\n    embrion refresh\n    \nTo temporarily stop run:\n\n    embrion stop\n\nTo start again run:\n\n    embrion start\n\nTo restart run:\n    \n    embrion restart\n\nTo open jupyter notebook run:\n\n    embrion jupyter\n\nTo open vs code run:\n\n    embrion vscode\n    \nTo open terminal run:\n\n    embrion shell\n    \nTo rebuild the image run:\n\n    embrion build\n\nTo show base command for docker-compose run:\n\n    embrion base\n\nTo show port mapping:\n\n    embrion port\n    \nTo run any docker-compose command run:\n\n    embrion eval --args '[\"..\", \"..\", ...]'\n\nTo create an environment.yml in an empty directory run:\n\n    embrion init\n    \nTo create an environment.yml in an empty directory with a specific python version run:\n\n    embrion init --version=3.X\n    \nTo connect through ssh run:\n    \n    embrion ssh-port\n\nThen take the ssh port and run:\n\n    ssh root@localhost -p SSH_PORT (Password is embrion)\n\n## About the scope\n\nThe directory that you run embrion is the project name for the docker-compose. That means that you can run many embrion\ninstances as long as the folder name that you run on is different. If the folder names are the same, then the previous\nsetup will be overridden.\n\n## Remote development (0.2.0 onwards)\n\nIf you would like to develop in a remote server first connect to the server and follow the steps above to start embrion.\nAfter starting embrion in the remote server switch back to your local terminal. Create an ssh config file which includes\nyour remote server as a host name.\n\nThen to create a tunnel between your computer and the remote server run:\n\n    embrion attach --server-name {your host name in ssh config} --project-name {the folder name you started embrion in remote server}\n    \nThen open Jupyterlab UI using,\n\n    embrion jupyter-remote --server-name {your host name in ssh config} --project-name {the folder name you started embrion in remote server}\n\nor Visual Studio Code using,\n\n    embrion jupyter-vscode --server-name {your host name in ssh config} --project-name {the folder name you started embrion in remote server}\n    \n## Usage\n\nTo stop the tunnel run:\n\n    embrion detach --server-name {...} --project-name {...}\n    \nTo show port mapping between docker in remote server and your local machine run:\n\n    embrion tunnel-port --server-name {...} --project-name {...}\n    \nTo show port mapping between docker in remote server and remote server run:\n\n    embrion remote-port --server-name {...} --project-name {...}", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/izel93/embrion", "keywords": "development,environment,docker", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "embrion", "package_url": "https://pypi.org/project/embrion/", "platform": "", "project_url": "https://pypi.org/project/embrion/", "project_urls": {"Homepage": "https://gitlab.com/izel93/embrion"}, "release_url": "https://pypi.org/project/embrion/0.2.0/", "requires_dist": null, "requires_python": "", "summary": "", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p># Embrion</p>\n<p>Embrion is a project aimed at isolating development environments of repositories. It creates a docker container\nto jump start development. Currently environment has a Jupyterlab UI, Visual Studio Code UI and SSH access. You can also\ndevelop using PyCharm connecting through SSH to the docker.</p>\n<p>## Requirements</p>\n<p>You need to have docker and docker-compose installed on your computer.</p>\n<p>## Limitations</p>\n<p>This project only supports conda environment files (environment.yml) with a name. Support for requirements.txt\nmay be added later. For now you can list all your requirements as a pip dependency in your environment.yml file.\nSee <a href=\"https://stackoverflow.com/questions/35245401/combining-conda-environment-yml-with-pip-requirements-txt\" rel=\"nofollow\">https://stackoverflow.com/questions/35245401/combining-conda-environment-yml-with-pip-requirements-txt</a> for more info.</p>\n<p>## Installation</p>\n<p>Go to your main project directory.</p>\n<p>Run:</p>\n<blockquote>\npip install embrion</blockquote>\n<p>Then only if you do not have an environment.yml file in your directory run:</p>\n<blockquote>\nembrion init</blockquote>\n<p>Then start the development server using:</p>\n<blockquote>\nembrion up</blockquote>\n<p>Then open Jupyterlab UI using,</p>\n<blockquote>\nembrion jupyter</blockquote>\n<p>or Visual Studio Code using,</p>\n<blockquote>\nembrion vscode</blockquote>\n<p>## Usage</p>\n<p>To remove everything run:</p>\n<blockquote>\nembrion down</blockquote>\n<p>To refresh the environment run:</p>\n<blockquote>\nembrion refresh</blockquote>\n<p>To temporarily stop run:</p>\n<blockquote>\nembrion stop</blockquote>\n<p>To start again run:</p>\n<blockquote>\nembrion start</blockquote>\n<p>To restart run:</p>\n<blockquote>\nembrion restart</blockquote>\n<p>To open jupyter notebook run:</p>\n<blockquote>\nembrion jupyter</blockquote>\n<p>To open vs code run:</p>\n<blockquote>\nembrion vscode</blockquote>\n<p>To open terminal run:</p>\n<blockquote>\nembrion shell</blockquote>\n<p>To rebuild the image run:</p>\n<blockquote>\nembrion build</blockquote>\n<p>To show base command for docker-compose run:</p>\n<blockquote>\nembrion base</blockquote>\n<p>To show port mapping:</p>\n<blockquote>\nembrion port</blockquote>\n<p>To run any docker-compose command run:</p>\n<blockquote>\nembrion eval \u2013args \u2018[\u201c..\u201d, \u201c..\u201d, \u2026]\u2019</blockquote>\n<p>To create an environment.yml in an empty directory run:</p>\n<blockquote>\nembrion init</blockquote>\n<p>To create an environment.yml in an empty directory with a specific python version run:</p>\n<blockquote>\nembrion init \u2013version=3.X</blockquote>\n<p>To connect through ssh run:</p>\n<blockquote>\nembrion ssh-port</blockquote>\n<p>Then take the ssh port and run:</p>\n<blockquote>\nssh <a href=\"mailto:root%40localhost\">root<span>@</span>localhost</a> -p SSH_PORT (Password is embrion)</blockquote>\n<p>## About the scope</p>\n<p>The directory that you run embrion is the project name for the docker-compose. That means that you can run many embrion\ninstances as long as the folder name that you run on is different. If the folder names are the same, then the previous\nsetup will be overridden.</p>\n<p>## Remote development (0.2.0 onwards)</p>\n<p>If you would like to develop in a remote server first connect to the server and follow the steps above to start embrion.\nAfter starting embrion in the remote server switch back to your local terminal. Create an ssh config file which includes\nyour remote server as a host name.</p>\n<p>Then to create a tunnel between your computer and the remote server run:</p>\n<blockquote>\nembrion attach \u2013server-name {your host name in ssh config} \u2013project-name {the folder name you started embrion in remote server}</blockquote>\n<p>Then open Jupyterlab UI using,</p>\n<blockquote>\nembrion jupyter-remote \u2013server-name {your host name in ssh config} \u2013project-name {the folder name you started embrion in remote server}</blockquote>\n<p>or Visual Studio Code using,</p>\n<blockquote>\nembrion jupyter-vscode \u2013server-name {your host name in ssh config} \u2013project-name {the folder name you started embrion in remote server}</blockquote>\n<p>## Usage</p>\n<p>To stop the tunnel run:</p>\n<blockquote>\nembrion detach \u2013server-name {\u2026} \u2013project-name {\u2026}</blockquote>\n<p>To show port mapping between docker in remote server and your local machine run:</p>\n<blockquote>\nembrion tunnel-port \u2013server-name {\u2026} \u2013project-name {\u2026}</blockquote>\n<p>To show port mapping between docker in remote server and remote server run:</p>\n<blockquote>\nembrion remote-port \u2013server-name {\u2026} \u2013project-name {\u2026}</blockquote>\n\n          </div>"}, "last_serial": 6482910, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "f744d7124855da56f0c4b5c179b9c015", "sha256": "c4514267c6b5b6ce9d5512c5fe4606adf71c1e06fef56b1e16e60903b8f58f47"}, "downloads": -1, "filename": "embrion-0.1.0.tar.gz", "has_sig": false, "md5_digest": "f744d7124855da56f0c4b5c179b9c015", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4586, "upload_time": "2019-12-26T10:37:11", "upload_time_iso_8601": "2019-12-26T10:37:11.938412Z", "url": "https://files.pythonhosted.org/packages/f1/04/da0283e5021a710db339772571b1fbe6147e2cd079d14da9985468429195/embrion-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "cf35ef2102a3cdbb66affb7d9842df95", "sha256": "dd9501b579883588480e06cf432e99925e6967e486cd81aeffe5e85fb98a88dd"}, "downloads": -1, "filename": "embrion-0.1.1.tar.gz", "has_sig": false, "md5_digest": "cf35ef2102a3cdbb66affb7d9842df95", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4623, "upload_time": "2019-12-26T12:19:48", "upload_time_iso_8601": "2019-12-26T12:19:48.084279Z", "url": "https://files.pythonhosted.org/packages/83/0b/54bc320081b708518fe23ad5e815c373bbebe12fd32695e30550b664eb70/embrion-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "957e34f2e423191ed7c08aa613452cbf", "sha256": "e808cbbd7eae1cbbc3f33f157bbed6e06cc3f48f783fa5a6d5e4b512e11d9eb4"}, "downloads": -1, "filename": "embrion-0.1.2.tar.gz", "has_sig": false, "md5_digest": "957e34f2e423191ed7c08aa613452cbf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4616, "upload_time": "2019-12-26T12:39:26", "upload_time_iso_8601": "2019-12-26T12:39:26.115888Z", "url": "https://files.pythonhosted.org/packages/5e/84/4b89823ef356c390aef9277f00bb82fc67c4733ea264d9065d90169d0e24/embrion-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "8c99b0798d0cdc49056ce23359beb75d", "sha256": "c153422ffb874e690bc16cd261499753f24017cccd146583afe2979245bda9a2"}, "downloads": -1, "filename": "embrion-0.1.3.tar.gz", "has_sig": false, "md5_digest": "8c99b0798d0cdc49056ce23359beb75d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4905, "upload_time": "2019-12-29T09:02:02", "upload_time_iso_8601": "2019-12-29T09:02:02.170637Z", "url": "https://files.pythonhosted.org/packages/73/66/c9e4d38fbbcf75b42a6a9ef91b7a83e0f08eaf6f0715ff5d514ddc86a995/embrion-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "fdbf796c2bd82b13bb29406017f799ea", "sha256": "6b33644236a4b9b774bf9f84d2b1fa7474c03efe5814d08e76080cdab1b3f710"}, "downloads": -1, "filename": "embrion-0.1.4.tar.gz", "has_sig": false, "md5_digest": "fdbf796c2bd82b13bb29406017f799ea", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5898, "upload_time": "2019-12-29T09:20:28", "upload_time_iso_8601": "2019-12-29T09:20:28.106139Z", "url": "https://files.pythonhosted.org/packages/d2/08/97c26d396d1cff33a1b3e287f66d9e18528352e5559a8fc05ded26690502/embrion-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "b3bff8a0d2d3e0c3eb1738cefe098c8c", "sha256": "ac9ea7fbe1082a6c7c31d941dd65e48e7b51eef535f4373508a37c16aec181a2"}, "downloads": -1, "filename": "embrion-0.1.5.tar.gz", "has_sig": false, "md5_digest": "b3bff8a0d2d3e0c3eb1738cefe098c8c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4859, "upload_time": "2020-01-04T00:43:01", "upload_time_iso_8601": "2020-01-04T00:43:01.126082Z", "url": "https://files.pythonhosted.org/packages/f4/98/8d0552a0cac6515bfaada046c5d54d279b8996c12058bcb843c2f14a1521/embrion-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "a62c334b376955073f017c00f0d354ba", "sha256": "c253f0bf014b307e9e96af3c7da713eeda8074b3cf2f37fa6add4015761c5690"}, "downloads": -1, "filename": "embrion-0.1.6.tar.gz", "has_sig": false, "md5_digest": "a62c334b376955073f017c00f0d354ba", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5910, "upload_time": "2020-01-08T16:40:36", "upload_time_iso_8601": "2020-01-08T16:40:36.435719Z", "url": "https://files.pythonhosted.org/packages/20/e5/3920f6d6510a5614490d88956b2a3d318a31c5b5092b3623b72588bbcd1d/embrion-0.1.6.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "e9e1a277c69897ec87601d039cd0708f", "sha256": "b8a3f38afd42e474a7bf9104e54477aaffe66b5492159dc968ece26d8fac436f"}, "downloads": -1, "filename": "embrion-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e9e1a277c69897ec87601d039cd0708f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9451, "upload_time": "2020-01-19T17:17:52", "upload_time_iso_8601": "2020-01-19T17:17:52.458559Z", "url": "https://files.pythonhosted.org/packages/b1/a9/cce9cd60a033b02cb433b73e3e47fa84b4e9fb08107c4207c9afae0ed646/embrion-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e9e1a277c69897ec87601d039cd0708f", "sha256": "b8a3f38afd42e474a7bf9104e54477aaffe66b5492159dc968ece26d8fac436f"}, "downloads": -1, "filename": "embrion-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e9e1a277c69897ec87601d039cd0708f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9451, "upload_time": "2020-01-19T17:17:52", "upload_time_iso_8601": "2020-01-19T17:17:52.458559Z", "url": "https://files.pythonhosted.org/packages/b1/a9/cce9cd60a033b02cb433b73e3e47fa84b4e9fb08107c4207c9afae0ed646/embrion-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:46:39 2020"}