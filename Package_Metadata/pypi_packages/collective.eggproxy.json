{"info": {"author": "Ingeniweb; current maintainer Reinout van Rees (The Health Agency)", "author_email": "reinout@vanrees.org", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "collective.eggproxy package\n===========================\n\n.. contents::\n\nWhat is collective.eggproxy ?\n-----------------------------\n\ncollective.eggproxy is a smart mirror for PyPI.\n\nIt will collect packages on PyPI only when a program like easy_install\nor zc.buildout asks for it. In other words, unlike some mirrors\nthat act like rsync and get the whole PyPI base (more than 5 gigas)\ncollective.eggproxy will only get what you need.\n\nAt first run collective.eggproxy downloads pypi index and builds a page of links.\nWhen a software asks for a specific package, version, etc.\ncollective.eggproxy downloads it if needed and store it locally.\n\nHow to use collective.eggproxy ?\n--------------------------------\n\nAfter it has been installed, you can just launch it as a standalone server\nlike this::\n\n    $ mkdir /tmp/eggs\n    $ eggproxy_run\n\nThe proxy will then be available on the localhost on the port 8888.\nAll package will be downloaded by default into /var/www. If this directory\ndoes not exists (or if you are under windows), you will need to configure it,\nas explained in the next section.\n\nFrom there you can use it in easy_install like this::\n\n    easy_install -i http://localhost:8888/ -H \"*localhost*\" iw.fss\n\nThe iw.fss package will be downloaded, stored locally and provided to easy_insall.\n\nIn zc.buildout, just define the index value in the buildout section::\n\n    [buildout]\n\n    index = http://localhost:8888/\n    allow-hosts = *localhost*\n\nThat's it !\n\nAdvanced configuration\n----------------------\n\ncollective.eggproxy can use a configuration file like this::\n\n    [eggproxy]\n    eggs_directory = /path/to/our/cache\n    index = http://pypi.python.org/simple\n\n    # Update information for files older than 24h\n    update_interval = 24\n    # Port number where proxy will run\n    port = 8888\n    # always_refresh is off by default. Setting it to 1 forces eggproxy to\n    # always attempt a pypi connection. Slower but fresher.\n    always_refresh = 0 \n    # timeout is only needed for always_refresh: it sets a socket timeout.\n    timeout = 3\n\nAll options apart from eggs_directory are optional.\n\ncollective.eggproxy looks in three locations:\n\n* An ``eggproxy.conf`` in your homedir. This can also be convenient on Windows\n  where ``/etc/`` doesn't exist.\n\n* ``../etc/eggproxy.conf`` as seen from the binary, which you can use for\n  buildout setups (see buildout documentation below).\n\n* ``/etc/eggproxy.conf``.\n\n\nRunning the proxy using Paste\n-----------------------------\n\nYou need a paste configuration file::\n\n  $ paster make-config collective.eggproxy myconfig.ini\n\nFeel free to edit the default configuration.\nThis configuration will override the ``eggproxy.conf`` file.\n\nThen use ``paster`` to serve the application::\n\n  $ paster serve configfile.ini\n\nAnd test it::\n\n  $ easy_install -i http://localhost:8888/ -H \"*localhost*\" iw.fss\n\n\nInstalling collective.eggproxy in a buildout\n--------------------------------------------\n\nA quick way to set up collective.eggproxy is by installing it in a\nbuildout.  The advantage is that it is all nicely contained in one\ndirectory.  You can use the following buildout config as an example::\n\n  [buildout]\n  parts = console_scripts configuration\n\n  [console_scripts]\n  recipe = zc.recipe.egg\n  eggs = collective.eggproxy\n\n  [configuration]\n  recipe = collective.recipe.template\n  input = etc/eggproxy.conf.in\n  output = etc/eggproxy.conf\n\n\nThis will put the eggproxy_run and eggproxy_update scripts in the ``bin/`` directory.\nAdd a subdirectory ``etc/`` inside the buildout with an ``eggproxy.conf.in``\nfile::\n\n  [eggproxy]\n  eggs_directory = ${buildout:directory}/var/cache\n  #update_interval = 24\n  #index = http://pypi.python.org/simple\n  #port = 8888\n\n`collective.recipe.template\n<http://pypi.python.org/pypi/collective.recipe.template>`_ will turn that into\nan etc/eggproxy.conf with the correct settings\n\n\nUsing the proxy behind Apache\n-----------------------------\n\nYou can also use collective.eggproxy with Apache. You will need for that\nmod_python 3.3 for apache. It will not work with previous versions.\n\nDebian Etch users: Etch provides 3.2, so users of Etch must get the source\npackage from \"Lenny\" (testing) and rebuild it with dpkg-buildpackage. Please have\na look at the related section in this document to get some help.\n\nAn Apache setup for http://servername/pypi can be::\n\n    Alias /pypi \"/path/to/pypi\"\n    <Directory \"/path/to/pypi\">\n        Order allow,deny\n        Allow from all\n        SetHandler mod_python\n        PythonFixupHandler collective.eggproxy.apache_handler::fixup_handler\n        PythonInterpreter main_interpreter\n        PythonOption URLPrefix /pypi\n        PythonPath \"sys.path+['/path/to/collective.eggproxy']\"\n    </Directory>\n\nApache must be able to write to \"/path/to/pypi\"! (usually Apache user is\n``www-data``). For updating proxied egg information you must add the script\n``eggproxy_update`` into the crontab of this user.\n\nmod_python update on Debian Etch\n::::::::::::::::::::::::::::::::\n\nQuick build instructions from debian \"lenny\" sources::\n\n    $ sudo apt-get build-dep libapache2-mod-python\n    $ sudo apt-get install fakeroot\n\nVisit http://packages.debian.org/sources/lenny/libapache2-mod-python and grab\nthe files with these extensions:\n\n- .dsc\n- .orig.tar.gz\n- .diff.gz\n\n::\n\n    $ wget http://ftp.de.debian.org/debian/pool/main/liba/libapache2-mod-python/libapache2-mod-python_3.3.1-3.dsc\n    $ wget http://ftp.de.debian.org/debian/pool/main/liba/libapache2-mod-python/libapache2-mod-python_3.3.1.orig.tar.gz\n    $ wget http://ftp.de.debian.org/debian/pool/main/liba/libapache2-mod-python/libapache2-mod-python_3.3.1-3.diff.gz\n    $ tar xpvzf libapache2-mod-python_3.3.1.orig.tar.gz\n    $ cd mod_python-3.3.1/\n    $ gzip -dc ../libapache2-mod-python_3.3.1-3.diff.gz |patch -p1\n    $ chmod +x debian/rules\n    $ dpkg-buildpackage -rfakeroot -b\n    $ cd ..\n\nyou should have the following files:\n\n- libapache2-mod-python_3.3.1-3_i386.deb\n- libapache2-mod-python-doc_3.3.1-3_all.deb\n\nThe last step is calling ``dpkg``::\n\n    $ sudo dpkg -i libapache2-mod-python_3.3.1-3_i386.deb\n\n\nDevelopment\n-----------\n\nThe svn repository is the plone collective:\nhttps://svn.plone.org/svn/collective/collective.eggproxy/trunk\n\n\n\nChangelog\n=========\n\n\n0.5.1 (2009-10-19)\n------------------\n\n- Added svn url to README.  [reinout]\n\n\n0.5 (2009-10-19)\n----------------\n\n- Release fixes (setup.cfg that resulted in a horrid \"0.4dev-r1234\" release).\n  No functional changes.\n\n\n0.4 (2009-10-19)\n----------------\n\n- Fix compatibility issue with Python 2.6 New python version disallow to use\n  config.add_section('DEFAULT') (see : http://bugs.python.org/issue1781 and\n  ConfigParser documentation).  Patch by Stephane Klein.\n\n- Updated maintainer email address.  [reinout]\n\n\n0.3.1 (2009-04-28)\n------------------\n\n- Fix for non-updating index pages despite ALWAYS_REFRESH setting. Cause:\n  already downloaded urls were not re-processed.  [reinout]\n\n\n0.3 (2009-03-16)\n----------------\n\n- Updated documentation for buildout change and always_refresh change.\n  [reinout]\n\n- Attempt ../etc/eggproxy.conf as config location to help buildout setups.\n  [reinout]\n\n- Added always_refresh (and timeout) option to always attempt a real pypi\n  connection to ensure freshness.  [reinout]\n\n- Added port option to configuration. [reinout]\n\n- don't lowercase package names\n\n- improve wsgi app\n\n- add tests\n\n\n0.2.0 (2008-09-22)\n------------------\n\n- initial version as collective.eggproxy. This package was formerly known as\n  iw.eggproxy (https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.eggproxy)\n\n- package index/download files: skip modules installed in local system (resulted\n  in copying a directory instead of downloading a file)\n\n- fixed Update script crashing with invalid/obsolete package name\n\n- Overriden PackageIndex so that we get eggs distributions for all versions, all\n  platforms\n\n- fixed malformed tag in generated indexes\n\n0.1.0 (2008-06-06)\n------------------\n\n- initial version created by IngeniSkel\n\n\nContributors\n============\n\nAuthor: Bertrand Mathieu while at Ingeniweb [b_mathieu]\n\nCurrent maintainer: `Reinout van Rees <http://reinout.vanrees.org>`_ at `The\nHealth Agency <http://www.thehealthagency.com>`_", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://pypi.python.org/pypi/collective.eggproxy", "keywords": "setuptools easy_install index proxy", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "collective.eggproxy", "package_url": "https://pypi.org/project/collective.eggproxy/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/collective.eggproxy/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://pypi.python.org/pypi/collective.eggproxy"}, "release_url": "https://pypi.org/project/collective.eggproxy/0.5.1/", "requires_dist": null, "requires_python": null, "summary": "An egg index proxy", "version": "0.5.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"collective-eggproxy-package\">\n<h2><a href=\"#id8\" rel=\"nofollow\">collective.eggproxy package</a></h2>\n<div id=\"contents\">\n<p>Contents</p>\n<ul>\n<li><a href=\"#collective-eggproxy-package\" id=\"id8\" rel=\"nofollow\">collective.eggproxy package</a><ul>\n<li><a href=\"#what-is-collective-eggproxy\" id=\"id9\" rel=\"nofollow\">What is collective.eggproxy ?</a></li>\n<li><a href=\"#how-to-use-collective-eggproxy\" id=\"id10\" rel=\"nofollow\">How to use collective.eggproxy ?</a></li>\n<li><a href=\"#advanced-configuration\" id=\"id11\" rel=\"nofollow\">Advanced configuration</a></li>\n<li><a href=\"#running-the-proxy-using-paste\" id=\"id12\" rel=\"nofollow\">Running the proxy using Paste</a></li>\n<li><a href=\"#installing-collective-eggproxy-in-a-buildout\" id=\"id13\" rel=\"nofollow\">Installing collective.eggproxy in a buildout</a></li>\n<li><a href=\"#using-the-proxy-behind-apache\" id=\"id14\" rel=\"nofollow\">Using the proxy behind Apache</a><ul>\n<li><a href=\"#mod-python-update-on-debian-etch\" id=\"id15\" rel=\"nofollow\">mod_python update on Debian Etch</a></li>\n</ul>\n</li>\n<li><a href=\"#development\" id=\"id16\" rel=\"nofollow\">Development</a></li>\n</ul>\n</li>\n<li><a href=\"#changelog\" id=\"id17\" rel=\"nofollow\">Changelog</a><ul>\n<li><a href=\"#id1\" id=\"id18\" rel=\"nofollow\">0.5.1 (2009-10-19)</a></li>\n<li><a href=\"#id2\" id=\"id19\" rel=\"nofollow\">0.5 (2009-10-19)</a></li>\n<li><a href=\"#id3\" id=\"id20\" rel=\"nofollow\">0.4 (2009-10-19)</a></li>\n<li><a href=\"#id4\" id=\"id21\" rel=\"nofollow\">0.3.1 (2009-04-28)</a></li>\n<li><a href=\"#id5\" id=\"id22\" rel=\"nofollow\">0.3 (2009-03-16)</a></li>\n<li><a href=\"#id6\" id=\"id23\" rel=\"nofollow\">0.2.0 (2008-09-22)</a></li>\n<li><a href=\"#id7\" id=\"id24\" rel=\"nofollow\">0.1.0 (2008-06-06)</a></li>\n</ul>\n</li>\n<li><a href=\"#contributors\" id=\"id25\" rel=\"nofollow\">Contributors</a></li>\n</ul>\n</div>\n<div id=\"what-is-collective-eggproxy\">\n<h3><a href=\"#id9\" rel=\"nofollow\">What is collective.eggproxy ?</a></h3>\n<p>collective.eggproxy is a smart mirror for PyPI.</p>\n<p>It will collect packages on PyPI only when a program like easy_install\nor zc.buildout asks for it. In other words, unlike some mirrors\nthat act like rsync and get the whole PyPI base (more than 5 gigas)\ncollective.eggproxy will only get what you need.</p>\n<p>At first run collective.eggproxy downloads pypi index and builds a page of links.\nWhen a software asks for a specific package, version, etc.\ncollective.eggproxy downloads it if needed and store it locally.</p>\n</div>\n<div id=\"how-to-use-collective-eggproxy\">\n<h3><a href=\"#id10\" rel=\"nofollow\">How to use collective.eggproxy ?</a></h3>\n<p>After it has been installed, you can just launch it as a standalone server\nlike this:</p>\n<pre>$ mkdir /tmp/eggs\n$ eggproxy_run\n</pre>\n<p>The proxy will then be available on the localhost on the port 8888.\nAll package will be downloaded by default into /var/www. If this directory\ndoes not exists (or if you are under windows), you will need to configure it,\nas explained in the next section.</p>\n<p>From there you can use it in easy_install like this:</p>\n<pre>easy_install -i http://localhost:8888/ -H \"*localhost*\" iw.fss\n</pre>\n<p>The iw.fss package will be downloaded, stored locally and provided to easy_insall.</p>\n<p>In zc.buildout, just define the index value in the buildout section:</p>\n<pre>[buildout]\n\nindex = http://localhost:8888/\nallow-hosts = *localhost*\n</pre>\n<p>That\u2019s it !</p>\n</div>\n<div id=\"advanced-configuration\">\n<h3><a href=\"#id11\" rel=\"nofollow\">Advanced configuration</a></h3>\n<p>collective.eggproxy can use a configuration file like this:</p>\n<pre>[eggproxy]\neggs_directory = /path/to/our/cache\nindex = http://pypi.python.org/simple\n\n# Update information for files older than 24h\nupdate_interval = 24\n# Port number where proxy will run\nport = 8888\n# always_refresh is off by default. Setting it to 1 forces eggproxy to\n# always attempt a pypi connection. Slower but fresher.\nalways_refresh = 0\n# timeout is only needed for always_refresh: it sets a socket timeout.\ntimeout = 3\n</pre>\n<p>All options apart from eggs_directory are optional.</p>\n<p>collective.eggproxy looks in three locations:</p>\n<ul>\n<li>An <tt>eggproxy.conf</tt> in your homedir. This can also be convenient on Windows\nwhere <tt>/etc/</tt> doesn\u2019t exist.</li>\n<li><tt><span class=\"pre\">../etc/eggproxy.conf</span></tt> as seen from the binary, which you can use for\nbuildout setups (see buildout documentation below).</li>\n<li><tt>/etc/eggproxy.conf</tt>.</li>\n</ul>\n</div>\n<div id=\"running-the-proxy-using-paste\">\n<h3><a href=\"#id12\" rel=\"nofollow\">Running the proxy using Paste</a></h3>\n<p>You need a paste configuration file:</p>\n<pre>$ paster make-config collective.eggproxy myconfig.ini\n</pre>\n<p>Feel free to edit the default configuration.\nThis configuration will override the <tt>eggproxy.conf</tt> file.</p>\n<p>Then use <tt>paster</tt> to serve the application:</p>\n<pre>$ paster serve configfile.ini\n</pre>\n<p>And test it:</p>\n<pre>$ easy_install -i http://localhost:8888/ -H \"*localhost*\" iw.fss\n</pre>\n</div>\n<div id=\"installing-collective-eggproxy-in-a-buildout\">\n<h3><a href=\"#id13\" rel=\"nofollow\">Installing collective.eggproxy in a buildout</a></h3>\n<p>A quick way to set up collective.eggproxy is by installing it in a\nbuildout.  The advantage is that it is all nicely contained in one\ndirectory.  You can use the following buildout config as an example:</p>\n<pre>[buildout]\nparts = console_scripts configuration\n\n[console_scripts]\nrecipe = zc.recipe.egg\neggs = collective.eggproxy\n\n[configuration]\nrecipe = collective.recipe.template\ninput = etc/eggproxy.conf.in\noutput = etc/eggproxy.conf\n</pre>\n<p>This will put the eggproxy_run and eggproxy_update scripts in the <tt>bin/</tt> directory.\nAdd a subdirectory <tt>etc/</tt> inside the buildout with an <tt>eggproxy.conf.in</tt>\nfile:</p>\n<pre>[eggproxy]\neggs_directory = ${buildout:directory}/var/cache\n#update_interval = 24\n#index = http://pypi.python.org/simple\n#port = 8888\n</pre>\n<p><a href=\"http://pypi.python.org/pypi/collective.recipe.template\" rel=\"nofollow\">collective.recipe.template</a> will turn that into\nan etc/eggproxy.conf with the correct settings</p>\n</div>\n<div id=\"using-the-proxy-behind-apache\">\n<h3><a href=\"#id14\" rel=\"nofollow\">Using the proxy behind Apache</a></h3>\n<p>You can also use collective.eggproxy with Apache. You will need for that\nmod_python 3.3 for apache. It will not work with previous versions.</p>\n<p>Debian Etch users: Etch provides 3.2, so users of Etch must get the source\npackage from \u201cLenny\u201d (testing) and rebuild it with dpkg-buildpackage. Please have\na look at the related section in this document to get some help.</p>\n<p>An Apache setup for <a href=\"http://servername/pypi\" rel=\"nofollow\">http://servername/pypi</a> can be:</p>\n<pre>Alias /pypi \"/path/to/pypi\"\n&lt;Directory \"/path/to/pypi\"&gt;\n    Order allow,deny\n    Allow from all\n    SetHandler mod_python\n    PythonFixupHandler collective.eggproxy.apache_handler::fixup_handler\n    PythonInterpreter main_interpreter\n    PythonOption URLPrefix /pypi\n    PythonPath \"sys.path+['/path/to/collective.eggproxy']\"\n&lt;/Directory&gt;\n</pre>\n<p>Apache must be able to write to \u201c/path/to/pypi\u201d! (usually Apache user is\n<tt><span class=\"pre\">www-data</span></tt>). For updating proxied egg information you must add the script\n<tt>eggproxy_update</tt> into the crontab of this user.</p>\n<div id=\"mod-python-update-on-debian-etch\">\n<h4><a href=\"#id15\" rel=\"nofollow\">mod_python update on Debian Etch</a></h4>\n<p>Quick build instructions from debian \u201clenny\u201d sources:</p>\n<pre>$ sudo apt-get build-dep libapache2-mod-python\n$ sudo apt-get install fakeroot\n</pre>\n<p>Visit <a href=\"http://packages.debian.org/sources/lenny/libapache2-mod-python\" rel=\"nofollow\">http://packages.debian.org/sources/lenny/libapache2-mod-python</a> and grab\nthe files with these extensions:</p>\n<ul>\n<li>.dsc</li>\n<li>.orig.tar.gz</li>\n<li>.diff.gz</li>\n</ul>\n<pre>$ wget http://ftp.de.debian.org/debian/pool/main/liba/libapache2-mod-python/libapache2-mod-python_3.3.1-3.dsc\n$ wget http://ftp.de.debian.org/debian/pool/main/liba/libapache2-mod-python/libapache2-mod-python_3.3.1.orig.tar.gz\n$ wget http://ftp.de.debian.org/debian/pool/main/liba/libapache2-mod-python/libapache2-mod-python_3.3.1-3.diff.gz\n$ tar xpvzf libapache2-mod-python_3.3.1.orig.tar.gz\n$ cd mod_python-3.3.1/\n$ gzip -dc ../libapache2-mod-python_3.3.1-3.diff.gz |patch -p1\n$ chmod +x debian/rules\n$ dpkg-buildpackage -rfakeroot -b\n$ cd ..\n</pre>\n<p>you should have the following files:</p>\n<ul>\n<li>libapache2-mod-python_3.3.1-3_i386.deb</li>\n<li>libapache2-mod-python-doc_3.3.1-3_all.deb</li>\n</ul>\n<p>The last step is calling <tt>dpkg</tt>:</p>\n<pre>$ sudo dpkg -i libapache2-mod-python_3.3.1-3_i386.deb\n</pre>\n</div>\n</div>\n<div id=\"development\">\n<h3><a href=\"#id16\" rel=\"nofollow\">Development</a></h3>\n<p>The svn repository is the plone collective:\n<a href=\"https://svn.plone.org/svn/collective/collective.eggproxy/trunk\" rel=\"nofollow\">https://svn.plone.org/svn/collective/collective.eggproxy/trunk</a></p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2><a href=\"#id17\" rel=\"nofollow\">Changelog</a></h2>\n<div id=\"id1\">\n<h3><a href=\"#id18\" rel=\"nofollow\">0.5.1 (2009-10-19)</a></h3>\n<ul>\n<li>Added svn url to README.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3><a href=\"#id19\" rel=\"nofollow\">0.5 (2009-10-19)</a></h3>\n<ul>\n<li>Release fixes (setup.cfg that resulted in a horrid \u201c0.4dev-r1234\u201d release).\nNo functional changes.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3><a href=\"#id20\" rel=\"nofollow\">0.4 (2009-10-19)</a></h3>\n<ul>\n<li>Fix compatibility issue with Python 2.6 New python version disallow to use\nconfig.add_section(\u2018DEFAULT\u2019) (see : <a href=\"http://bugs.python.org/issue1781\" rel=\"nofollow\">http://bugs.python.org/issue1781</a> and\nConfigParser documentation).  Patch by Stephane Klein.</li>\n<li>Updated maintainer email address.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3><a href=\"#id21\" rel=\"nofollow\">0.3.1 (2009-04-28)</a></h3>\n<ul>\n<li>Fix for non-updating index pages despite ALWAYS_REFRESH setting. Cause:\nalready downloaded urls were not re-processed.  [reinout]</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3><a href=\"#id22\" rel=\"nofollow\">0.3 (2009-03-16)</a></h3>\n<ul>\n<li>Updated documentation for buildout change and always_refresh change.\n[reinout]</li>\n<li>Attempt ../etc/eggproxy.conf as config location to help buildout setups.\n[reinout]</li>\n<li>Added always_refresh (and timeout) option to always attempt a real pypi\nconnection to ensure freshness.  [reinout]</li>\n<li>Added port option to configuration. [reinout]</li>\n<li>don\u2019t lowercase package names</li>\n<li>improve wsgi app</li>\n<li>add tests</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3><a href=\"#id23\" rel=\"nofollow\">0.2.0 (2008-09-22)</a></h3>\n<ul>\n<li>initial version as collective.eggproxy. This package was formerly known as\niw.eggproxy (<a href=\"https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.eggproxy\" rel=\"nofollow\">https://ingeniweb.svn.sourceforge.net/svnroot/ingeniweb/iw.eggproxy</a>)</li>\n<li>package index/download files: skip modules installed in local system (resulted\nin copying a directory instead of downloading a file)</li>\n<li>fixed Update script crashing with invalid/obsolete package name</li>\n<li>Overriden PackageIndex so that we get eggs distributions for all versions, all\nplatforms</li>\n<li>fixed malformed tag in generated indexes</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3><a href=\"#id24\" rel=\"nofollow\">0.1.0 (2008-06-06)</a></h3>\n<ul>\n<li>initial version created by IngeniSkel</li>\n</ul>\n</div>\n</div>\n<div id=\"contributors\">\n<h2><a href=\"#id25\" rel=\"nofollow\">Contributors</a></h2>\n<p>Author: Bertrand Mathieu while at Ingeniweb [b_mathieu]</p>\n<p>Current maintainer: <a href=\"http://reinout.vanrees.org\" rel=\"nofollow\">Reinout van Rees</a> at <a href=\"http://www.thehealthagency.com\" rel=\"nofollow\">The\nHealth Agency</a></p>\n</div>\n\n          </div>"}, "last_serial": 754953, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "714714639efe8a1493bca9e9b1211585", "sha256": "d462e32b7c6db3c4c8271660d11c89868862dff81389d61d0e2fad0d6734d8fc"}, "downloads": -1, "filename": "collective.eggproxy-0.2.0.tar.gz", "has_sig": false, "md5_digest": "714714639efe8a1493bca9e9b1211585", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 16043, "upload_time": "2008-09-24T08:34:18", "upload_time_iso_8601": "2008-09-24T08:34:18Z", "url": "https://files.pythonhosted.org/packages/37/9b/565eb3cc563d162b75a9d428773fa142654baa1666b72048204cedb693a0/collective.eggproxy-0.2.0.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "201d31b8104f0145088ee44b3d6ad2d1", "sha256": "25df52b3e9f5a3ac00c87f21651b480649ab73b8d4a0ec81c509fa6445eca186"}, "downloads": -1, "filename": "collective.eggproxy-0.3.tar.gz", "has_sig": false, "md5_digest": "201d31b8104f0145088ee44b3d6ad2d1", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20410, "upload_time": "2009-03-16T12:31:33", "upload_time_iso_8601": "2009-03-16T12:31:33.274765Z", "url": "https://files.pythonhosted.org/packages/61/d2/d659d64af9f1328a8d4aab8871109e3be307636278612ebcaf9f225e4664/collective.eggproxy-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "9bc61d95d5a40db3a1b10b024e1769bd", "sha256": "bb651fa8741e1b242776b3de3326b187ab2c57e1d164191d433075925b183bbc"}, "downloads": -1, "filename": "collective.eggproxy-0.3.1.tar.gz", "has_sig": false, "md5_digest": "9bc61d95d5a40db3a1b10b024e1769bd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20740, "upload_time": "2009-04-28T20:12:00", "upload_time_iso_8601": "2009-04-28T20:12:00.443648Z", "url": "https://files.pythonhosted.org/packages/5d/c6/f2f87982a20001e78b5ea61cdd280cab01898ccce3ef1137f9f1d4056e9a/collective.eggproxy-0.3.1.tar.gz", "yanked": false}], "0.5": [{"comment_text": "", "digests": {"md5": "20ff13f25b4eb690cffecca0dfa14400", "sha256": "c3a74d5e15f1ed703d43f564eb4de9777bfdbd79c8c3a21b77b8af38131f71a7"}, "downloads": -1, "filename": "collective.eggproxy-0.5.tar.gz", "has_sig": false, "md5_digest": "20ff13f25b4eb690cffecca0dfa14400", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21295, "upload_time": "2009-10-19T12:43:23", "upload_time_iso_8601": "2009-10-19T12:43:23.754796Z", "url": "https://files.pythonhosted.org/packages/cd/64/4bddc263cd97a8584a580226c342cc26254126ec2826f3de2a5a45a99abd/collective.eggproxy-0.5.tar.gz", "yanked": false}], "0.5.1": [{"comment_text": "", "digests": {"md5": "f63623eec7ba95d544968bbcf1e95805", "sha256": "f686b0f2ac5459157957c6fa409ccec8420928ea122a1787c35630aa34502665"}, "downloads": -1, "filename": "collective.eggproxy-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f63623eec7ba95d544968bbcf1e95805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21461, "upload_time": "2009-10-19T13:07:40", "upload_time_iso_8601": "2009-10-19T13:07:40.228105Z", "url": "https://files.pythonhosted.org/packages/64/2f/d8ba7e3cf8ba8152e4f47468b6670a7ebe4aba5a48de14da55ce1493af7c/collective.eggproxy-0.5.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f63623eec7ba95d544968bbcf1e95805", "sha256": "f686b0f2ac5459157957c6fa409ccec8420928ea122a1787c35630aa34502665"}, "downloads": -1, "filename": "collective.eggproxy-0.5.1.tar.gz", "has_sig": false, "md5_digest": "f63623eec7ba95d544968bbcf1e95805", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 21461, "upload_time": "2009-10-19T13:07:40", "upload_time_iso_8601": "2009-10-19T13:07:40.228105Z", "url": "https://files.pythonhosted.org/packages/64/2f/d8ba7e3cf8ba8152e4f47468b6670a7ebe4aba5a48de14da55ce1493af7c/collective.eggproxy-0.5.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:17:55 2020"}