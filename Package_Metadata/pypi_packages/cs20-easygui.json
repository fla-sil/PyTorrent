{"info": {"author": "Andr\u00e9 Roberge", "author_email": "andre.roberge@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Education", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4"], "description": "\n===============================\nEasyGUI_Qt\n===============================\n\n*Inspired by EasyGUI, designed for PyQt*\n\n.. image:: https://raw.githubusercontent.com/aroberge/easygui_qt/master/images/contribute.png\n\n\nEasyGUI_Qt is a module for simple and easy GUI programming in Python.\n\nEasyGUI_Qt was inspired by EasyGUI created by Stephen Ferg and\nis based on Tkinter.  By contrast, EasyGUI_Qt is based on PyQt\nwhich is not included in the standard Python distribution - but is\nincluded in some other distributions like Continuum Analytics' Anaconda.\n\n\n.. image:: https://badge.fury.io/py/easygui_qt.png\n    :target: http://badge.fury.io/py/easygui_qt\n\n.. image:: https://pypip.in/d/easygui_qt/badge.png\n        :target: https://pypi.python.org/pypi/easygui_qt\n\n.. image:: https://badge.waffle.io/aroberge/easygui_qt.png?label=ready&title=Ready\n :target: https://waffle.io/aroberge/easygui_qt\n :alt: 'Stories in Ready'\n\n\n* Free software: BSD license\n* Documentation: https://easygui_qt.readthedocs.org.\n\nPython version\n--------------\n\nOfficially, this is a project that targets only Python 3.  However, I have\nnow decided to attempt to provide some support for Python 2.  Other than\nsome unicode issues, all widgets should work with Python 2.\n\nDesign philosophy\n-----------------\n\nLike the original EasyGUI, EasyGUI_Qt seeks to provide simple GUI widgets\nthat can be called in a procedural program. EasyGUI_Qt is NOT event-driven: all GUI interactions are invoked\nby simple function calls.\n\nThe archetype is ``get_string(message)``\nwhich pops a box whose purpose is exactly the same as Python's ``input(prompt)``,\nthat is, present the user with a question/prompt, have the user enter an\nanswer, and return the provided answer as a string.  Thus\n``easygui_qt.get_string()`` can be used as a drop-in replacement for\n``input()``.\nSimilarly, instead of using a ``print()`` function to display a message,\n``show_message()`` is used which pops a message window; however, note that\nunlike ``print``, ``show_message`` interrupts the flow of the program\nand require some interaction from the user for the program to \ncontinue.\n\nUnlike the original EasyGUI, which sometimes used cryptic names like\n``msgbox`` or ``ynbox``, EasyGUI_Qt attempts to use descriptive names\nwhich follow PEP8 convention.  Thus, instead of ``msgbox``, it uses\n``show_message``; instead of ``ynbox``, it has ``get_yes_or_no``.\nMost function names start with either ``get_``, ``show_`` or ``set_``.\n\nEasyGUI_QT is based on PyQt; it leverages the available dialogs that\ncome with PyQt whenever possible.  This makes it possible to have\nautomatic translation of some GUI elements (such as text on standard buttons)\nprovided the locale is set correctly and that the local distribution of\nPyQt includes the appropriate translation: when EasyGUI_Qt runs, it scans\nthe standard PyQt location for translation files and note which ones are\npresent and can be used when the locale is set.\n\nAn attempt is made at avoiding duplication of essentially\nidentical functionality.  Thus, multiple selections from a list of choices\nis done only one way: by using a dialog where choices appear as labels\nin text and not labels on buttons.\n\nRoadmap\n-------\n\nSee https://github.com/aroberge/easygui_qt/issues/13 and feel free\nto add comments.\n\nSimilar projects\n----------------\n\nThe following is an incomplete lists of a few cross-platform projects\nthat share some similarity with EasyGUI_Qt, but use back-ends other than PyQt\n\n- `easygui <http://easygui.sourceforge.net/>`_: the original; tkinter back-end\n- `anygui <http://anygui.sourceforge.net/>`_: multiple back-ends; well known\n  but no longer supported\n- `psidialogs <https://github.com/ponty/psidialogs>`_: multiple back-ends supported -\n  possibly the most complete project from that point of view.\n- `python-dialog <http://pythondialog.sourceforge.net/>`_: dialog/Xdialog/gdialog back-end\n\nThere are quite a few lesser known projects but none that seem to be\nactively supported.  If you are aware of other projects that should\nbe mentioned, do not hesitate to contact me and let me know.\n\n\n\n\nHistory\n=======\n\n0.9.5\n-----\n\nChanges by Dan Schellenberg:\n- added a get_file_name function, so students do not need to worry about\n  extracting the path from a list when choosing a single file\n\n0.9.3\n-----\n\nChanges by Dan Schellenberg:\n- set PyQt5 as a dependency so pip autoinstalls it\n  This means that a student using an IDE such as Thonny can install a single package\n\n\n0.9.2\n-----\n\n(Some of the changes noted are addition or improvements submitted by David Hughes via email)\n\n- TextWindow now shows input either from a file or from a supplied string.\n- added show_code()\n- added show_text()\n- renamed show() to show_message() [reverting change from 0.9.1]\n- started creation of custom \"page format\" for more complex dialogs\n- changed get_date() so that it returns a datetime date instance\n\nNote: the documentation has NOT been updated to reflect these changes.\n\n0.9.1\n-----\n\n- removed verification from get_new_password\n- added find_help\n- created \"back end\" for wizard creator - will become show_story()\n- documented and changed naming convention\n- renamed select_language() : get_language()\n- renamed show_message() : show()\n- fixed a unicode bug for Python 2\n- changed the way show_file works\n- removed required_install PyQt4 from setup.py\n\n0.9.0a\n------\n\n- Simplified the way change_password was implemented by reusing one of\n  the new modules and fixed an unreported bug in the process\n- changed the formatting of this file so that it should not cause problems\n  with PyPI anymore.\n\n\n0.9.0\n-----\n\nMajor change in version number as almost all the desired widgets for\nversion 1.0 have been implemented.\n\nRelease notes:\n--------------\n\nSome unicode problems are likely present when using Python 2.7; the primary\ntarget is Python 3.3+ ... but we try to support earlier version as well.\n\nSome problems are present with Mac OSX and Python 2.7 (only?)\n\n\n- added show_abort\n- added get_many_strings\n- added handle_exception\n- added show_code\n- added show_file\n- added get_new_password\n- adressed an issue where some dialogs would appear below some windows\n  (e.g. terminal) when launched from some platforms (e.g. Mac OSX):\n  the goal should be that the dialogs always appear on top of other windows.\n- removed with_app decorator; this decorator had been introduced to reduce\n  the amount of repetitive code appearing in each function (and initially\n  inspected the function signature to add automatically some additional\n  keyword args) but it likely made it impossible to do unit testing with\n  QTest (still not done) and prevented ReadTheDocs from reading the correct\n  signatures for the decorated functions.\n- tooltips added to demos launcher\n- added get_username_password\n\n0.4.0\n-----\n\n- added get_password\n- added get_date\n- added get_color_hex\n- added get_color_rgb\n- added get_continue_or_cancel\n- added roadmap as a github issue https://github.com/aroberge/easygui_qt/issues/13\n- removed CONFIG as a global dict; using the configuration file instead.\n- remove set_default_font\n- rename set_locale to set_language\n- added configuration file to save locale and font size\n\n0.3.0\n-----\n\n- Decided to support (with lower priority) Python 2  (2.7.9 more specifically)\n- Should work reasonably well with Python 2.7.9 - other than potential\n  unicode related issues\n- made get_list_of_choices(), get_choice(), get_string(), and get_directory_name()\n  work properly with Python 2.7.9\n\n0.2.3a\n------\n\n- changed extension of some demos (from .pyw to .py) as they were not uploaded to pypi\n\n0.2.3\n-----\n\n- added demos dir to setup.py so that it can be included on pypi\n\n0.2.2a\n------\n\n- changing path on image in readme in attempt to help pypi display properly\n\n0.2.2\n-----\n\n- changed the syntax for calls to super() to be compatible with Python 2.\n  Note that the intention is to be a Python 3 project, but if simple changes\n  can make it compatible with Python 2, they will be incorporated.\n- changed name of set_save_file_name to get_save_file_name\n- changed name of yes_no_question to get_yes_or_no\n- added get_list_of_choices\n- added demo launcher\n\n0.2.1\n-----\n\n- Moved the demos directory to a more sensible location\n- added get_directory_name\n- added get_file_names\n- added set_save_file_name\n- attempt to fix bug for Python 3.2 where inspect.signature was not defined\n\n0.2.0\n------\n\nThe API has been changed since the initial release\nand the following widgets have been documented, with images inserted\nin the documentation.\n\n- get_choice\n- get_float\n- get_int\n- get_integer\n- get_string\n- set_font_size\n- set_default_font\n- select_language\n- set_locale\n- show_message\n- yes_no_question\n\n0.1.0\n---------------------\n\n* First release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/schellenberg/easygui_qt", "keywords": "easygui_qt", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "cs20-easygui", "package_url": "https://pypi.org/project/cs20-easygui/", "platform": "", "project_url": "https://pypi.org/project/cs20-easygui/", "project_urls": {"Homepage": "https://github.com/schellenberg/easygui_qt"}, "release_url": "https://pypi.org/project/cs20-easygui/0.9.5/", "requires_dist": ["sip", "PyQt5"], "requires_python": "", "summary": "\"Inspired by EasyGUI, designed for PyQt\"", "version": "0.9.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <br>===============================<br>EasyGUI_Qt<br>===============================<br><br>*Inspired by EasyGUI, designed for PyQt*<br><br>.. image:: https://raw.githubusercontent.com/aroberge/easygui_qt/master/images/contribute.png<br><br><br>EasyGUI_Qt is a module for simple and easy GUI programming in Python.<br><br>EasyGUI_Qt was inspired by EasyGUI created by Stephen Ferg and<br>is based on Tkinter.  By contrast, EasyGUI_Qt is based on PyQt<br>which is not included in the standard Python distribution - but is<br>included in some other distributions like Continuum Analytics' Anaconda.<br><br><br>.. image:: https://badge.fury.io/py/easygui_qt.png<br>    :target: http://badge.fury.io/py/easygui_qt<br><br>.. image:: https://pypip.in/d/easygui_qt/badge.png<br>        :target: https://pypi.python.org/pypi/easygui_qt<br><br>.. image:: https://badge.waffle.io/aroberge/easygui_qt.png?label=ready&amp;title=Ready<br> :target: https://waffle.io/aroberge/easygui_qt<br> :alt: 'Stories in Ready'<br><br><br>* Free software: BSD license<br>* Documentation: https://easygui_qt.readthedocs.org.<br><br>Python version<br>--------------<br><br>Officially, this is a project that targets only Python 3.  However, I have<br>now decided to attempt to provide some support for Python 2.  Other than<br>some unicode issues, all widgets should work with Python 2.<br><br>Design philosophy<br>-----------------<br><br>Like the original EasyGUI, EasyGUI_Qt seeks to provide simple GUI widgets<br>that can be called in a procedural program. EasyGUI_Qt is NOT event-driven: all GUI interactions are invoked<br>by simple function calls.<br><br>The archetype is ``get_string(message)``<br>which pops a box whose purpose is exactly the same as Python's ``input(prompt)``,<br>that is, present the user with a question/prompt, have the user enter an<br>answer, and return the provided answer as a string.  Thus<br>``easygui_qt.get_string()`` can be used as a drop-in replacement for<br>``input()``.<br>Similarly, instead of using a ``print()`` function to display a message,<br>``show_message()`` is used which pops a message window; however, note that<br>unlike ``print``, ``show_message`` interrupts the flow of the program<br>and require some interaction from the user for the program to <br>continue.<br><br>Unlike the original EasyGUI, which sometimes used cryptic names like<br>``msgbox`` or ``ynbox``, EasyGUI_Qt attempts to use descriptive names<br>which follow PEP8 convention.  Thus, instead of ``msgbox``, it uses<br>``show_message``; instead of ``ynbox``, it has ``get_yes_or_no``.<br>Most function names start with either ``get_``, ``show_`` or ``set_``.<br><br>EasyGUI_QT is based on PyQt; it leverages the available dialogs that<br>come with PyQt whenever possible.  This makes it possible to have<br>automatic translation of some GUI elements (such as text on standard buttons)<br>provided the locale is set correctly and that the local distribution of<br>PyQt includes the appropriate translation: when EasyGUI_Qt runs, it scans<br>the standard PyQt location for translation files and note which ones are<br>present and can be used when the locale is set.<br><br>An attempt is made at avoiding duplication of essentially<br>identical functionality.  Thus, multiple selections from a list of choices<br>is done only one way: by using a dialog where choices appear as labels<br>in text and not labels on buttons.<br><br>Roadmap<br>-------<br><br>See https://github.com/aroberge/easygui_qt/issues/13 and feel free<br>to add comments.<br><br>Similar projects<br>----------------<br><br>The following is an incomplete lists of a few cross-platform projects<br>that share some similarity with EasyGUI_Qt, but use back-ends other than PyQt<br><br>- `easygui &lt;http://easygui.sourceforge.net/&gt;`_: the original; tkinter back-end<br>- `anygui &lt;http://anygui.sourceforge.net/&gt;`_: multiple back-ends; well known<br>  but no longer supported<br>- `psidialogs &lt;https://github.com/ponty/psidialogs&gt;`_: multiple back-ends supported -<br>  possibly the most complete project from that point of view.<br>- `python-dialog &lt;http://pythondialog.sourceforge.net/&gt;`_: dialog/Xdialog/gdialog back-end<br><br>There are quite a few lesser known projects but none that seem to be<br>actively supported.  If you are aware of other projects that should<br>be mentioned, do not hesitate to contact me and let me know.<br><br><br><br><br>History<br>=======<br><br>0.9.5<br>-----<br><br>Changes by Dan Schellenberg:<br>- added a get_file_name function, so students do not need to worry about<br>  extracting the path from a list when choosing a single file<br><br>0.9.3<br>-----<br><br>Changes by Dan Schellenberg:<br>- set PyQt5 as a dependency so pip autoinstalls it<br>  This means that a student using an IDE such as Thonny can install a single package<br><br><br>0.9.2<br>-----<br><br>(Some of the changes noted are addition or improvements submitted by David Hughes via email)<br><br>- TextWindow now shows input either from a file or from a supplied string.<br>- added show_code()<br>- added show_text()<br>- renamed show() to show_message() [reverting change from 0.9.1]<br>- started creation of custom \"page format\" for more complex dialogs<br>- changed get_date() so that it returns a datetime date instance<br><br>Note: the documentation has NOT been updated to reflect these changes.<br><br>0.9.1<br>-----<br><br>- removed verification from get_new_password<br>- added find_help<br>- created \"back end\" for wizard creator - will become show_story()<br>- documented and changed naming convention<br>- renamed select_language() : get_language()<br>- renamed show_message() : show()<br>- fixed a unicode bug for Python 2<br>- changed the way show_file works<br>- removed required_install PyQt4 from setup.py<br><br>0.9.0a<br>------<br><br>- Simplified the way change_password was implemented by reusing one of<br>  the new modules and fixed an unreported bug in the process<br>- changed the formatting of this file so that it should not cause problems<br>  with PyPI anymore.<br><br><br>0.9.0<br>-----<br><br>Major change in version number as almost all the desired widgets for<br>version 1.0 have been implemented.<br><br>Release notes:<br>--------------<br><br>Some unicode problems are likely present when using Python 2.7; the primary<br>target is Python 3.3+ ... but we try to support earlier version as well.<br><br>Some problems are present with Mac OSX and Python 2.7 (only?)<br><br><br>- added show_abort<br>- added get_many_strings<br>- added handle_exception<br>- added show_code<br>- added show_file<br>- added get_new_password<br>- adressed an issue where some dialogs would appear below some windows<br>  (e.g. terminal) when launched from some platforms (e.g. Mac OSX):<br>  the goal should be that the dialogs always appear on top of other windows.<br>- removed with_app decorator; this decorator had been introduced to reduce<br>  the amount of repetitive code appearing in each function (and initially<br>  inspected the function signature to add automatically some additional<br>  keyword args) but it likely made it impossible to do unit testing with<br>  QTest (still not done) and prevented ReadTheDocs from reading the correct<br>  signatures for the decorated functions.<br>- tooltips added to demos launcher<br>- added get_username_password<br><br>0.4.0<br>-----<br><br>- added get_password<br>- added get_date<br>- added get_color_hex<br>- added get_color_rgb<br>- added get_continue_or_cancel<br>- added roadmap as a github issue https://github.com/aroberge/easygui_qt/issues/13<br>- removed CONFIG as a global dict; using the configuration file instead.<br>- remove set_default_font<br>- rename set_locale to set_language<br>- added configuration file to save locale and font size<br><br>0.3.0<br>-----<br><br>- Decided to support (with lower priority) Python 2  (2.7.9 more specifically)<br>- Should work reasonably well with Python 2.7.9 - other than potential<br>  unicode related issues<br>- made get_list_of_choices(), get_choice(), get_string(), and get_directory_name()<br>  work properly with Python 2.7.9<br><br>0.2.3a<br>------<br><br>- changed extension of some demos (from .pyw to .py) as they were not uploaded to pypi<br><br>0.2.3<br>-----<br><br>- added demos dir to setup.py so that it can be included on pypi<br><br>0.2.2a<br>------<br><br>- changing path on image in readme in attempt to help pypi display properly<br><br>0.2.2<br>-----<br><br>- changed the syntax for calls to super() to be compatible with Python 2.<br>  Note that the intention is to be a Python 3 project, but if simple changes<br>  can make it compatible with Python 2, they will be incorporated.<br>- changed name of set_save_file_name to get_save_file_name<br>- changed name of yes_no_question to get_yes_or_no<br>- added get_list_of_choices<br>- added demo launcher<br><br>0.2.1<br>-----<br><br>- Moved the demos directory to a more sensible location<br>- added get_directory_name<br>- added get_file_names<br>- added set_save_file_name<br>- attempt to fix bug for Python 3.2 where inspect.signature was not defined<br><br>0.2.0<br>------<br><br>The API has been changed since the initial release<br>and the following widgets have been documented, with images inserted<br>in the documentation.<br><br>- get_choice<br>- get_float<br>- get_int<br>- get_integer<br>- get_string<br>- set_font_size<br>- set_default_font<br>- select_language<br>- set_locale<br>- show_message<br>- yes_no_question<br><br>0.1.0<br>---------------------<br><br>* First release on PyPI.<br><br><br>\n          </div>"}, "last_serial": 3847786, "releases": {"0.9.4": [{"comment_text": "", "digests": {"md5": "d2c929cfc747c8c1d2c1445503f25822", "sha256": "0bc9f19af13d4bae5c401558987e38e71549d119503aa0df16a29dfd299ac241"}, "downloads": -1, "filename": "cs20_easygui-0.9.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "d2c929cfc747c8c1d2c1445503f25822", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 29887, "upload_time": "2017-12-21T21:37:03", "upload_time_iso_8601": "2017-12-21T21:37:03.244764Z", "url": "https://files.pythonhosted.org/packages/7c/54/36bea4423dedc7618adf0425f172bc14c9e8fdc1128618b297ce568f4a1a/cs20_easygui-0.9.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "162330395a1b5effcd35042d3d7ba5ec", "sha256": "d88ebb64df805ba661e935f851dfbb5a5a869e96d70b26ce659fd66fbf400476"}, "downloads": -1, "filename": "cs20-easygui-0.9.4.tar.gz", "has_sig": false, "md5_digest": "162330395a1b5effcd35042d3d7ba5ec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 36891, "upload_time": "2017-12-21T21:37:06", "upload_time_iso_8601": "2017-12-21T21:37:06.522523Z", "url": "https://files.pythonhosted.org/packages/3f/54/692a742edd6b3a525535accdf0440dd948b0a78dc806fb9c12db46d036cf/cs20-easygui-0.9.4.tar.gz", "yanked": false}], "0.9.5": [{"comment_text": "", "digests": {"md5": "83f4429de4986f76e076fa8de230ae3c", "sha256": "2d3b0d60d58498050d85a9190ff774182ea0ef14f767bb361d115167c3c1636a"}, "downloads": -1, "filename": "cs20_easygui-0.9.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83f4429de4986f76e076fa8de230ae3c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30236, "upload_time": "2018-05-09T14:56:17", "upload_time_iso_8601": "2018-05-09T14:56:17.544708Z", "url": "https://files.pythonhosted.org/packages/84/f7/968f2f009eed85823c1f4940be5920c37bcea57b597f20a1dae6b16673e2/cs20_easygui-0.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d22a547ebe9ec0354e689b4ffe3676", "sha256": "5044ea695d499ba64cabae6278856cb1edfc0302f2a982ea9322694108f144a4"}, "downloads": -1, "filename": "cs20-easygui-0.9.5.tar.gz", "has_sig": false, "md5_digest": "21d22a547ebe9ec0354e689b4ffe3676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37455, "upload_time": "2018-05-09T14:56:18", "upload_time_iso_8601": "2018-05-09T14:56:18.828139Z", "url": "https://files.pythonhosted.org/packages/25/8a/449c4813ebb17309dca9be47724e84099d65e9cea64ec028e008617e1157/cs20-easygui-0.9.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "83f4429de4986f76e076fa8de230ae3c", "sha256": "2d3b0d60d58498050d85a9190ff774182ea0ef14f767bb361d115167c3c1636a"}, "downloads": -1, "filename": "cs20_easygui-0.9.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "83f4429de4986f76e076fa8de230ae3c", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30236, "upload_time": "2018-05-09T14:56:17", "upload_time_iso_8601": "2018-05-09T14:56:17.544708Z", "url": "https://files.pythonhosted.org/packages/84/f7/968f2f009eed85823c1f4940be5920c37bcea57b597f20a1dae6b16673e2/cs20_easygui-0.9.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "21d22a547ebe9ec0354e689b4ffe3676", "sha256": "5044ea695d499ba64cabae6278856cb1edfc0302f2a982ea9322694108f144a4"}, "downloads": -1, "filename": "cs20-easygui-0.9.5.tar.gz", "has_sig": false, "md5_digest": "21d22a547ebe9ec0354e689b4ffe3676", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 37455, "upload_time": "2018-05-09T14:56:18", "upload_time_iso_8601": "2018-05-09T14:56:18.828139Z", "url": "https://files.pythonhosted.org/packages/25/8a/449c4813ebb17309dca9be47724e84099d65e9cea64ec028e008617e1157/cs20-easygui-0.9.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:41:54 2020"}