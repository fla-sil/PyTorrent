{"info": {"author": "Yang Luo", "author_email": "hsluoyz@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "# flask-authz\n\n[![Build Status](https://www.travis-ci.org/pycasbin/flask-authz.svg?branch=master)](https://www.travis-ci.org/pycasbin/flask-authz)\n[![Coverage Status](https://coveralls.io/repos/github/pycasbin/flask-authz/badge.svg)](https://coveralls.io/github/pycasbin/flask-authz)\n[![Version](https://img.shields.io/pypi/v/flask-authz.svg)](https://pypi.org/project/flask-authz/)\n[![PyPI - Wheel](https://img.shields.io/pypi/wheel/flask-authz.svg)](https://pypi.org/project/flask-authz/)\n[![Pyversions](https://img.shields.io/pypi/pyversions/flask-authz.svg)](https://pypi.org/project/flask-authz/)\n[![Download](https://img.shields.io/pypi/dm/flask-authz.svg)](https://pypi.org/project/flask-authz/)\n[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/casbin/lobby)\n\nflask-authz is an authorization middleware for [Flask](http://flask.pocoo.org/), it's based on [PyCasbin](https://github.com/casbin/pycasbin).\n\n## Installation\n\n```\npip install flask-authz\n```\n\n## Simple Example\n\nThis repo is just a working Flask app that shows the usage of flask-authz. To use it in your existing Flask app, you need:\n\n```python\nfrom authz.middleware import CasbinMiddleware\nimport casbin\nfrom flask import Flask\n\napp = Flask(__name__)\n\n# Initialize the Casbin enforcer, load the casbin model and policy from files.\n# Change the 2nd arg to use a database.\nenforcer = casbin.Enforcer(\"authz_model.conf\", \"authz_policy.csv\")\n\napp.wsgi_app = CasbinMiddleware(app.wsgi_app, enforcer)\n\n\n@app.route(\"/\")\ndef hello_world():\n    return \"Hello World!\"\n\n\nif __name__ == '__main__':\n    app.run()\n```\n\n- The default policy ``authz_policy.csv`` is:\n\n```csv\np, anonymous, /, GET\np, admin, *, *\ng, alice, admin\n```\n\nIt means ``anonymous`` user can only access homepage ``/``. Admin users like alice can access any pages. Currently all accesses are regarded as ``anonymous``. Add your authentication to let a user log in.\n\n## How are subject, object, action defined?\n\nIn ``middleware.py``:\n\n```python\ndef check_permission(self, request):\n    # change the user, path, method as you need.\n    user = request.remote_user # subject\n    if user is None:\n        user = 'anonymous'\n    path = request.path # object\n    method = request.method # action\n    return self.enforcer.enforce(user, path, method)\n```\n\nYou may need to copy the ``middleware.py`` code to your project and modify it directly if you have other definitions for subject, object, action.\n\n## Documentation\n\nThe authorization determines a request based on ``{subject, object, action}``, which means what ``subject`` can perform what ``action`` on what ``object``. In this plugin, the meanings are:\n\n1. ``subject``: the logged-in user name\n2. ``object``: the URL path for the web resource like \"dataset1/item1\"\n3. ``action``: HTTP method like GET, POST, PUT, DELETE, or the high-level actions you defined like \"read-file\", \"write-blog\"\n\nFor how to write authorization policy and other details, please refer to [the Casbin's documentation](https://casbin.org).\n\n## Getting Help\n\n- [Casbin](https://casbin.org)\n\n## License\n\nThis project is under Apache 2.0 License. See the [LICENSE](LICENSE) file for the full license text.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/pycasbin/flask-authz", "keywords": "flask,casbin,auth,authz,acl,rbac,abac,access control,authorization,permission", "license": "Apache 2.0", "maintainer": "", "maintainer_email": "", "name": "flask-authz", "package_url": "https://pypi.org/project/flask-authz/", "platform": "", "project_url": "https://pypi.org/project/flask-authz/", "project_urls": {"Homepage": "https://github.com/pycasbin/flask-authz"}, "release_url": "https://pypi.org/project/flask-authz/1.0.0/", "requires_dist": ["casbin", "flask", "werkzeug"], "requires_python": ">=3.5", "summary": "An authorization middleware for Flask that supports ACL, RBAC, ABAC, based on Casbin", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>flask-authz</h1>\n<p><a href=\"https://www.travis-ci.org/pycasbin/flask-authz\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/38cbe354f259391933a0caedc38b887c3bcf51e8/68747470733a2f2f7777772e7472617669732d63692e6f72672f707963617362696e2f666c61736b2d617574687a2e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/pycasbin/flask-authz\" rel=\"nofollow\"><img alt=\"Coverage Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a8db808c349762f27100e72d128867358d8f623c/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f707963617362696e2f666c61736b2d617574687a2f62616467652e737667\"></a>\n<a href=\"https://pypi.org/project/flask-authz/\" rel=\"nofollow\"><img alt=\"Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f6246e3a5d30eac2e1ca6c57e3067c127d7e89bc/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f666c61736b2d617574687a2e737667\"></a>\n<a href=\"https://pypi.org/project/flask-authz/\" rel=\"nofollow\"><img alt=\"PyPI - Wheel\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d59d42b776092d0ff86617f2ad5205f8b03e4cce/68747470733a2f2f696d672e736869656c64732e696f2f707970692f776865656c2f666c61736b2d617574687a2e737667\"></a>\n<a href=\"https://pypi.org/project/flask-authz/\" rel=\"nofollow\"><img alt=\"Pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5aff5dd0a53f60e035b9caadd3f76a10af0d3bd8/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f666c61736b2d617574687a2e737667\"></a>\n<a href=\"https://pypi.org/project/flask-authz/\" rel=\"nofollow\"><img alt=\"Download\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a2205a212d4440b127133194ecc047cfd02fe92f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f666c61736b2d617574687a2e737667\"></a>\n<a href=\"https://gitter.im/casbin/lobby\" rel=\"nofollow\"><img alt=\"Gitter\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/454be82554a06af0fd3393415ef17b59d8550498/68747470733a2f2f6261646765732e6769747465722e696d2f4a6f696e253230436861742e737667\"></a></p>\n<p>flask-authz is an authorization middleware for <a href=\"http://flask.pocoo.org/\" rel=\"nofollow\">Flask</a>, it's based on <a href=\"https://github.com/casbin/pycasbin\" rel=\"nofollow\">PyCasbin</a>.</p>\n<h2>Installation</h2>\n<pre><code>pip install flask-authz\n</code></pre>\n<h2>Simple Example</h2>\n<p>This repo is just a working Flask app that shows the usage of flask-authz. To use it in your existing Flask app, you need:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">authz.middleware</span> <span class=\"kn\">import</span> <span class=\"n\">CasbinMiddleware</span>\n<span class=\"kn\">import</span> <span class=\"nn\">casbin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># Initialize the Casbin enforcer, load the casbin model and policy from files.</span>\n<span class=\"c1\"># Change the 2nd arg to use a database.</span>\n<span class=\"n\">enforcer</span> <span class=\"o\">=</span> <span class=\"n\">casbin</span><span class=\"o\">.</span><span class=\"n\">Enforcer</span><span class=\"p\">(</span><span class=\"s2\">\"authz_model.conf\"</span><span class=\"p\">,</span> <span class=\"s2\">\"authz_policy.csv\"</span><span class=\"p\">)</span>\n\n<span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">wsgi_app</span> <span class=\"o\">=</span> <span class=\"n\">CasbinMiddleware</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">wsgi_app</span><span class=\"p\">,</span> <span class=\"n\">enforcer</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s2\">\"/\"</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">hello_world</span><span class=\"p\">():</span>\n    <span class=\"k\">return</span> <span class=\"s2\">\"Hello World!\"</span>\n\n\n<span class=\"k\">if</span> <span class=\"vm\">__name__</span> <span class=\"o\">==</span> <span class=\"s1\">'__main__'</span><span class=\"p\">:</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n</pre>\n<ul>\n<li>The default policy <code>authz_policy.csv</code> is:</li>\n</ul>\n<pre>p, anonymous, /, GET\np, admin, *, *\ng, alice, admin\n</pre>\n<p>It means <code>anonymous</code> user can only access homepage <code>/</code>. Admin users like alice can access any pages. Currently all accesses are regarded as <code>anonymous</code>. Add your authentication to let a user log in.</p>\n<h2>How are subject, object, action defined?</h2>\n<p>In <code>middleware.py</code>:</p>\n<pre><span class=\"k\">def</span> <span class=\"nf\">check_permission</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">request</span><span class=\"p\">):</span>\n    <span class=\"c1\"># change the user, path, method as you need.</span>\n    <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">remote_user</span> <span class=\"c1\"># subject</span>\n    <span class=\"k\">if</span> <span class=\"n\">user</span> <span class=\"ow\">is</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"s1\">'anonymous'</span>\n    <span class=\"n\">path</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">path</span> <span class=\"c1\"># object</span>\n    <span class=\"n\">method</span> <span class=\"o\">=</span> <span class=\"n\">request</span><span class=\"o\">.</span><span class=\"n\">method</span> <span class=\"c1\"># action</span>\n    <span class=\"k\">return</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">enforcer</span><span class=\"o\">.</span><span class=\"n\">enforce</span><span class=\"p\">(</span><span class=\"n\">user</span><span class=\"p\">,</span> <span class=\"n\">path</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"p\">)</span>\n</pre>\n<p>You may need to copy the <code>middleware.py</code> code to your project and modify it directly if you have other definitions for subject, object, action.</p>\n<h2>Documentation</h2>\n<p>The authorization determines a request based on <code>{subject, object, action}</code>, which means what <code>subject</code> can perform what <code>action</code> on what <code>object</code>. In this plugin, the meanings are:</p>\n<ol>\n<li><code>subject</code>: the logged-in user name</li>\n<li><code>object</code>: the URL path for the web resource like \"dataset1/item1\"</li>\n<li><code>action</code>: HTTP method like GET, POST, PUT, DELETE, or the high-level actions you defined like \"read-file\", \"write-blog\"</li>\n</ol>\n<p>For how to write authorization policy and other details, please refer to <a href=\"https://casbin.org\" rel=\"nofollow\">the Casbin's documentation</a>.</p>\n<h2>Getting Help</h2>\n<ul>\n<li><a href=\"https://casbin.org\" rel=\"nofollow\">Casbin</a></li>\n</ul>\n<h2>License</h2>\n<p>This project is under Apache 2.0 License. See the <a href=\"LICENSE\" rel=\"nofollow\">LICENSE</a> file for the full license text.</p>\n\n          </div>"}, "last_serial": 6521823, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "9f2e7d3e0a99f1bff098c041fb108788", "sha256": "d6d39d165cdfe81009c148250f9bde110850ddf86a6dc00a14e791028d4899c4"}, "downloads": -1, "filename": "flask_authz-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "9f2e7d3e0a99f1bff098c041fb108788", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.3", "size": 10011, "upload_time": "2019-06-23T08:32:49", "upload_time_iso_8601": "2019-06-23T08:32:49.233421Z", "url": "https://files.pythonhosted.org/packages/34/d8/f9364a03b99467ef0f1b6b7f86da3d2ab001326bf1598669038bba8842f7/flask_authz-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "10dba3526ce0adba566070f027900a83", "sha256": "0f181060e7214dad0db96d91ba19985c7a6d9f1e513b5de8c644d11ed0f4a0f0"}, "downloads": -1, "filename": "flask-authz-0.0.1.tar.gz", "has_sig": false, "md5_digest": "10dba3526ce0adba566070f027900a83", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.3", "size": 3458, "upload_time": "2019-06-23T08:32:51", "upload_time_iso_8601": "2019-06-23T08:32:51.924531Z", "url": "https://files.pythonhosted.org/packages/98/9c/57713744cbc6f5d9bda04356bc841780b9bb9325140b279595339cd2b92e/flask-authz-0.0.1.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "94cd426a746b28a62510197bb67a0101", "sha256": "779f7e7c64d04d9843ce32d327ddd75c5316c7b019e210f60d5682b1a3d756cd"}, "downloads": -1, "filename": "flask_authz-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "94cd426a746b28a62510197bb67a0101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11020, "upload_time": "2020-01-26T13:09:26", "upload_time_iso_8601": "2020-01-26T13:09:26.878113Z", "url": "https://files.pythonhosted.org/packages/6d/1d/73e9172999650d1d2832d9bdc3d58e48191d009676ee123864af6436c4c5/flask_authz-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d698874f3f8c6ee42e6423f53053a8af", "sha256": "024e2396f1f95dbe5c3c7220ce8c5b30728bbe431aaf679beafa57513ad21d8f"}, "downloads": -1, "filename": "flask-authz-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d698874f3f8c6ee42e6423f53053a8af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4382, "upload_time": "2020-01-26T13:09:29", "upload_time_iso_8601": "2020-01-26T13:09:29.670854Z", "url": "https://files.pythonhosted.org/packages/0f/6f/af4483025a3101bc0ee1fb43cabdbf218753a2e0f133b73114d8db461b20/flask-authz-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "94cd426a746b28a62510197bb67a0101", "sha256": "779f7e7c64d04d9843ce32d327ddd75c5316c7b019e210f60d5682b1a3d756cd"}, "downloads": -1, "filename": "flask_authz-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "94cd426a746b28a62510197bb67a0101", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 11020, "upload_time": "2020-01-26T13:09:26", "upload_time_iso_8601": "2020-01-26T13:09:26.878113Z", "url": "https://files.pythonhosted.org/packages/6d/1d/73e9172999650d1d2832d9bdc3d58e48191d009676ee123864af6436c4c5/flask_authz-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d698874f3f8c6ee42e6423f53053a8af", "sha256": "024e2396f1f95dbe5c3c7220ce8c5b30728bbe431aaf679beafa57513ad21d8f"}, "downloads": -1, "filename": "flask-authz-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d698874f3f8c6ee42e6423f53053a8af", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 4382, "upload_time": "2020-01-26T13:09:29", "upload_time_iso_8601": "2020-01-26T13:09:29.670854Z", "url": "https://files.pythonhosted.org/packages/0f/6f/af4483025a3101bc0ee1fb43cabdbf218753a2e0f133b73114d8db461b20/flask-authz-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:03:06 2020"}