{"info": {"author": "Jed Meier", "author_email": "fast_trade@jedm.dev", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.7"], "description": "# Fast Trade ![Python application](https://github.com/jrmeier/fast-trade/workflows/Python%20application/badge.svg)\n\nA library to do back-testing on currency data with generated strategies quickly and easily. The data comes from this project [crypto-data](https://github.com/jrmeier/crypto-data). \n\n## Data\n\nIf you're looking for some data, here is roughly every minute of 2018 of every pair from binance. Here is the each file [individually zipped](https://drive.google.com/file/d/16eoeNLTUVC9ydoMfVtjxxfLPKurGW05M/view?usp=sharing) and here is the [entire directory zipped, with each file as a zip](https://drive.google.com/file/d/16eoeNLTUVC9ydoMfVtjxxfLPKurGW05M/view?usp=sharing). If you have any questions, please email me at fast_trade (at) jedm.dev. I also have data every minute since December 2019 to now, shoot me an email if you'd like access.\n\n## Goals\n\n- run in less than 30s on average hardware\n- headless\n- extensible\n\n## Features\n\n- Extremely fast backtesting\n- ability to build complex strategies\n- ability to reproduce strategies since they are just a json file\n- can interface easily as an API, ex. put a web server in front and its an API\n\n## Install\n```bash\npip install fast-trade\n```\nOr\n\n```bash\npython -m venv .fast_trade\nsource .fast_trade/bin/activate\npip install -r requirements.txt\n```\n\n## Testing\n\n```bash\npython -m pytest\n```\n\nAvailable Indicators (graciously stolen from https://github.com/peerchemist/finta)\n\n## Output\n\nThe output its a tuple. The first object is a summary all the inputs and a summary of a performace of the model. It's all the information to run the simulation again. The second object is a Pandas Dataframe, which contains all of the data used in the simulation. This can be used to chart store.\n\nExample output:\n\n```python\n{\n  \"return_perc\": 3.935,\n  \"mean_trade_len\": \"0 days 01:13:07.368421\",\n  \"max_trade_held\": \"0 days 07:55:59\",\n  \"min_trade_len\": \"0 days 00:07:59\",\n  \"best_trade_perc\": 5.979,\n  \"min_trade_perc\": -3.144,\n  \"mean\": 0.074,\n  \"num_trades\": 58,\n  \"win_perc\": 63.793,\n  \"loss_perc\": 34.483,\n  \"equity_peak\": 1098.39686619,\n  \"equity_final\": 1044.52219673,\n  \"equity_peak_unit\": 1098.39686619,\n  \"first_tic\": \"2018-05-01 00:00:03\",\n  \"last_tic\": \"2018-05-03 23:57:03\",\n  \"total_tics\": 1081,\n  \"test_duration\": \"0:00:00.406570\"\n},\nDataFrame(...)\n)\n```\n\n## Strategy\n\nThe real goal of this project is to get to the point where these strategies can be generated and tested quickly and then be easily iterated on.\n\nBelow is an example of a very simple strategey. Basically, indicators are used to build a list of indicators to look at which must all be true to produce an enter or exit status for that tick.\n\n\n```python\n{\n   \"name\": \"example\",\n   \"chart_period\": \"4m\",\n   \"start\": \"2018-05-01 00:00:00\",\n   \"stop\": \"2018-05-04 00:00:00\",\n   \"enter\": [\n     [\n       \"close\",\n       \">\",\n       \"short\"\n     ],\n     [\n       \"rsi\",\n       \">\",\n       30\n     ]\n   ],\n   \"exit\": [\n     [\n       \"close\",\n       \"<\",\n       \"long\"\n     ],\n     [\n       \"rsi\",\n       \"<\",\n       70\n     ]\n   ],\n   \"indicators\": [\n     {\n       \"name\": \"short\",\n       \"func\": \"ta.zlema\",\n       \"args\": [\n         7\n       ],\n       \"df\": \"close\"\n     },\n     {\n       \"name\": \"long\",\n       \"func\": \"ta.zlema\",\n       \"args\": [\n         150\n       ],\n       \"df\": \"close\"\n     },\n     {\n       \"name\": \"rsi\",\n       \"func\": \"ta.rsi\",\n       \"args\": [\n         14\n       ],\n       \"df\": \"close\"\n     }\n   ]\n}\n```\n\n### Indicators\n\n```python\n      {\n         \"name\": \"short\", # indicator name\n         \"func\": \"ta.zlema\", # technical analysis function to be used\n         \"args\": [12], # arguments to pass to the function\n         \"df\": \"close\" # which column of the dataframe to look at\n      }\n```\n\n### Enter / Exit\n\n```python\n   \"enter\": [ # all must be true to enter or exit\n      [\n         \"close\", # column of the dataframe to compare to\n         \">\", # logic to use to compare\n         \"short\" # the name from the defined indicator\n      ]\n   ]\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/jrmeier/fast-trade", "keywords": "backtesting,currencyta,pandas,finance,numpy,analysis,technical analysis", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "fast-trade", "package_url": "https://pypi.org/project/fast-trade/", "platform": "", "project_url": "https://pypi.org/project/fast-trade/", "project_urls": {"Homepage": "https://github.com/jrmeier/fast-trade"}, "release_url": "https://pypi.org/project/fast-trade/0.1.1/", "requires_dist": ["finta (==0.4.1)", "numpy (==1.18.1)", "pandas (==1.0.1)", "python-dateutil (==2.8.1)", "pytz (==2019.3)", "six (==1.14.0)"], "requires_python": ">=3", "summary": "Automate and backtest on ohlcv data quickly", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Fast Trade <img alt=\"Python application\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f0da61b506a2e0e895a81092527f5298c2cf3c01/68747470733a2f2f6769746875622e636f6d2f6a726d656965722f666173742d74726164652f776f726b666c6f77732f507974686f6e2532306170706c69636174696f6e2f62616467652e737667\"></h1>\n<p>A library to do back-testing on currency data with generated strategies quickly and easily. The data comes from this project <a href=\"https://github.com/jrmeier/crypto-data\" rel=\"nofollow\">crypto-data</a>.</p>\n<h2>Data</h2>\n<p>If you're looking for some data, here is roughly every minute of 2018 of every pair from binance. Here is the each file <a href=\"https://drive.google.com/file/d/16eoeNLTUVC9ydoMfVtjxxfLPKurGW05M/view?usp=sharing\" rel=\"nofollow\">individually zipped</a> and here is the <a href=\"https://drive.google.com/file/d/16eoeNLTUVC9ydoMfVtjxxfLPKurGW05M/view?usp=sharing\" rel=\"nofollow\">entire directory zipped, with each file as a zip</a>. If you have any questions, please email me at fast_trade (at) jedm.dev. I also have data every minute since December 2019 to now, shoot me an email if you'd like access.</p>\n<h2>Goals</h2>\n<ul>\n<li>run in less than 30s on average hardware</li>\n<li>headless</li>\n<li>extensible</li>\n</ul>\n<h2>Features</h2>\n<ul>\n<li>Extremely fast backtesting</li>\n<li>ability to build complex strategies</li>\n<li>ability to reproduce strategies since they are just a json file</li>\n<li>can interface easily as an API, ex. put a web server in front and its an API</li>\n</ul>\n<h2>Install</h2>\n<pre>pip install fast-trade\n</pre>\n<p>Or</p>\n<pre>python -m venv .fast_trade\n<span class=\"nb\">source</span> .fast_trade/bin/activate\npip install -r requirements.txt\n</pre>\n<h2>Testing</h2>\n<pre>python -m pytest\n</pre>\n<p>Available Indicators (graciously stolen from <a href=\"https://github.com/peerchemist/finta\" rel=\"nofollow\">https://github.com/peerchemist/finta</a>)</p>\n<h2>Output</h2>\n<p>The output its a tuple. The first object is a summary all the inputs and a summary of a performace of the model. It's all the information to run the simulation again. The second object is a Pandas Dataframe, which contains all of the data used in the simulation. This can be used to chart store.</p>\n<p>Example output:</p>\n<pre><span class=\"p\">{</span>\n  <span class=\"s2\">\"return_perc\"</span><span class=\"p\">:</span> <span class=\"mf\">3.935</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"mean_trade_len\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0 days 01:13:07.368421\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"max_trade_held\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0 days 07:55:59\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"min_trade_len\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0 days 00:07:59\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"best_trade_perc\"</span><span class=\"p\">:</span> <span class=\"mf\">5.979</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"min_trade_perc\"</span><span class=\"p\">:</span> <span class=\"o\">-</span><span class=\"mf\">3.144</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"mean\"</span><span class=\"p\">:</span> <span class=\"mf\">0.074</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"num_trades\"</span><span class=\"p\">:</span> <span class=\"mi\">58</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"win_perc\"</span><span class=\"p\">:</span> <span class=\"mf\">63.793</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"loss_perc\"</span><span class=\"p\">:</span> <span class=\"mf\">34.483</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"equity_peak\"</span><span class=\"p\">:</span> <span class=\"mf\">1098.39686619</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"equity_final\"</span><span class=\"p\">:</span> <span class=\"mf\">1044.52219673</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"equity_peak_unit\"</span><span class=\"p\">:</span> <span class=\"mf\">1098.39686619</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"first_tic\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2018-05-01 00:00:03\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"last_tic\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2018-05-03 23:57:03\"</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"total_tics\"</span><span class=\"p\">:</span> <span class=\"mi\">1081</span><span class=\"p\">,</span>\n  <span class=\"s2\">\"test_duration\"</span><span class=\"p\">:</span> <span class=\"s2\">\"0:00:00.406570\"</span>\n<span class=\"p\">},</span>\n<span class=\"n\">DataFrame</span><span class=\"p\">(</span><span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Strategy</h2>\n<p>The real goal of this project is to get to the point where these strategies can be generated and tested quickly and then be easily iterated on.</p>\n<p>Below is an example of a very simple strategey. Basically, indicators are used to build a list of indicators to look at which must all be true to produce an enter or exit status for that tick.</p>\n<pre><span class=\"p\">{</span>\n   <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"example\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"chart_period\"</span><span class=\"p\">:</span> <span class=\"s2\">\"4m\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"start\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2018-05-01 00:00:00\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"stop\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2018-05-04 00:00:00\"</span><span class=\"p\">,</span>\n   <span class=\"s2\">\"enter\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n     <span class=\"p\">[</span>\n       <span class=\"s2\">\"close\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"&gt;\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"short\"</span>\n     <span class=\"p\">],</span>\n     <span class=\"p\">[</span>\n       <span class=\"s2\">\"rsi\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"&gt;\"</span><span class=\"p\">,</span>\n       <span class=\"mi\">30</span>\n     <span class=\"p\">]</span>\n   <span class=\"p\">],</span>\n   <span class=\"s2\">\"exit\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n     <span class=\"p\">[</span>\n       <span class=\"s2\">\"close\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"&lt;\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"long\"</span>\n     <span class=\"p\">],</span>\n     <span class=\"p\">[</span>\n       <span class=\"s2\">\"rsi\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"&lt;\"</span><span class=\"p\">,</span>\n       <span class=\"mi\">70</span>\n     <span class=\"p\">]</span>\n   <span class=\"p\">],</span>\n   <span class=\"s2\">\"indicators\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n     <span class=\"p\">{</span>\n       <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"short\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ta.zlema\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"mi\">7</span>\n       <span class=\"p\">],</span>\n       <span class=\"s2\">\"df\"</span><span class=\"p\">:</span> <span class=\"s2\">\"close\"</span>\n     <span class=\"p\">},</span>\n     <span class=\"p\">{</span>\n       <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"long\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ta.zlema\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"mi\">150</span>\n       <span class=\"p\">],</span>\n       <span class=\"s2\">\"df\"</span><span class=\"p\">:</span> <span class=\"s2\">\"close\"</span>\n     <span class=\"p\">},</span>\n     <span class=\"p\">{</span>\n       <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"rsi\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ta.rsi\"</span><span class=\"p\">,</span>\n       <span class=\"s2\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n         <span class=\"mi\">14</span>\n       <span class=\"p\">],</span>\n       <span class=\"s2\">\"df\"</span><span class=\"p\">:</span> <span class=\"s2\">\"close\"</span>\n     <span class=\"p\">}</span>\n   <span class=\"p\">]</span>\n<span class=\"p\">}</span>\n</pre>\n<h3>Indicators</h3>\n<pre>      <span class=\"p\">{</span>\n         <span class=\"s2\">\"name\"</span><span class=\"p\">:</span> <span class=\"s2\">\"short\"</span><span class=\"p\">,</span> <span class=\"c1\"># indicator name</span>\n         <span class=\"s2\">\"func\"</span><span class=\"p\">:</span> <span class=\"s2\">\"ta.zlema\"</span><span class=\"p\">,</span> <span class=\"c1\"># technical analysis function to be used</span>\n         <span class=\"s2\">\"args\"</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"mi\">12</span><span class=\"p\">],</span> <span class=\"c1\"># arguments to pass to the function</span>\n         <span class=\"s2\">\"df\"</span><span class=\"p\">:</span> <span class=\"s2\">\"close\"</span> <span class=\"c1\"># which column of the dataframe to look at</span>\n      <span class=\"p\">}</span>\n</pre>\n<h3>Enter / Exit</h3>\n<pre>   <span class=\"s2\">\"enter\"</span><span class=\"p\">:</span> <span class=\"p\">[</span> <span class=\"c1\"># all must be true to enter or exit</span>\n      <span class=\"p\">[</span>\n         <span class=\"s2\">\"close\"</span><span class=\"p\">,</span> <span class=\"c1\"># column of the dataframe to compare to</span>\n         <span class=\"s2\">\"&gt;\"</span><span class=\"p\">,</span> <span class=\"c1\"># logic to use to compare</span>\n         <span class=\"s2\">\"short\"</span> <span class=\"c1\"># the name from the defined indicator</span>\n      <span class=\"p\">]</span>\n   <span class=\"p\">]</span>\n</pre>\n\n          </div>"}, "last_serial": 7131090, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "a38b04935059dbd6c7f91844b9abf1d3", "sha256": "5bc006f3ac6ebd2e6c5f84ad9e5ab4cc5c926564fe191f84b99a6adba5a18e37"}, "downloads": -1, "filename": "fast_trade-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "a38b04935059dbd6c7f91844b9abf1d3", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 9532, "upload_time": "2020-02-17T01:31:46", "upload_time_iso_8601": "2020-02-17T01:31:46.125904Z", "url": "https://files.pythonhosted.org/packages/41/3f/3f7c066f00156240d36613e7ddd0009f9c1f4d9d75a21142e194d0558fd3/fast_trade-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e3e157aac2d3395f971d7f970d8753eb", "sha256": "a05bbbc33b1329a9d04e0988e6866103a8a4345fbe0851644558b5f651beba1e"}, "downloads": -1, "filename": "fast-trade-0.0.1.tar.gz", "has_sig": false, "md5_digest": "e3e157aac2d3395f971d7f970d8753eb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 9985, "upload_time": "2020-02-17T01:31:48", "upload_time_iso_8601": "2020-02-17T01:31:48.497488Z", "url": "https://files.pythonhosted.org/packages/f5/06/1f8d924c064041d98fa718870b37dc08f4fb0a4e8bba70250eb738e99d2b/fast-trade-0.0.1.tar.gz", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "ffb2e47212088a31ecd927455e510aad", "sha256": "b8d962543bcab5e7c78a3066738b3eb54674f12bdc24bb66db51bd6fcbae78a1"}, "downloads": -1, "filename": "fast_trade-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "ffb2e47212088a31ecd927455e510aad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 10388, "upload_time": "2020-03-07T06:50:36", "upload_time_iso_8601": "2020-03-07T06:50:36.518212Z", "url": "https://files.pythonhosted.org/packages/78/a4/35842007b031dad92f0186db9dc72647d8e7ac39c15233d7f7795162e332/fast_trade-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "af6b396728944c9d42dbb4c10011ab40", "sha256": "91fdb1cb3c976727139548521e70af2afb9414563b4f6eed44c461a99d61de16"}, "downloads": -1, "filename": "fast-trade-0.1.0.tar.gz", "has_sig": false, "md5_digest": "af6b396728944c9d42dbb4c10011ab40", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 11731, "upload_time": "2020-03-07T06:50:37", "upload_time_iso_8601": "2020-03-07T06:50:37.943999Z", "url": "https://files.pythonhosted.org/packages/53/af/8d291be001d7b9018f687c5828543afda9c147c7d4f7c1f9bc4e9115a00d/fast-trade-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "7747dc51676618114875f19386c94a42", "sha256": "da45af62cd0dd4080085f979ccad26111cf885a1c531e392172fedb9230d764f"}, "downloads": -1, "filename": "fast_trade-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7747dc51676618114875f19386c94a42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 9390, "upload_time": "2020-04-29T18:24:10", "upload_time_iso_8601": "2020-04-29T18:24:10.638741Z", "url": "https://files.pythonhosted.org/packages/03/ab/0911bfd01d227ce2c62fc258c24e837745fb9a719d83f17527e3390a4519/fast_trade-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "087dafa48d1589f1492e09d279c929a1", "sha256": "1cb3ac8dd4aca9b1c95d2911e94320c3f04f362027c79b6f9fbaa25748baea5d"}, "downloads": -1, "filename": "fast-trade-0.1.1.tar.gz", "has_sig": false, "md5_digest": "087dafa48d1589f1492e09d279c929a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10215, "upload_time": "2020-04-29T18:24:11", "upload_time_iso_8601": "2020-04-29T18:24:11.672976Z", "url": "https://files.pythonhosted.org/packages/bb/e0/1bcdd6aa1750e49db762ceabb0094eef3f6af4b2d58fe9f2423ab95e5a12/fast-trade-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7747dc51676618114875f19386c94a42", "sha256": "da45af62cd0dd4080085f979ccad26111cf885a1c531e392172fedb9230d764f"}, "downloads": -1, "filename": "fast_trade-0.1.1-py3-none-any.whl", "has_sig": false, "md5_digest": "7747dc51676618114875f19386c94a42", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3", "size": 9390, "upload_time": "2020-04-29T18:24:10", "upload_time_iso_8601": "2020-04-29T18:24:10.638741Z", "url": "https://files.pythonhosted.org/packages/03/ab/0911bfd01d227ce2c62fc258c24e837745fb9a719d83f17527e3390a4519/fast_trade-0.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "087dafa48d1589f1492e09d279c929a1", "sha256": "1cb3ac8dd4aca9b1c95d2911e94320c3f04f362027c79b6f9fbaa25748baea5d"}, "downloads": -1, "filename": "fast-trade-0.1.1.tar.gz", "has_sig": false, "md5_digest": "087dafa48d1589f1492e09d279c929a1", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3", "size": 10215, "upload_time": "2020-04-29T18:24:11", "upload_time_iso_8601": "2020-04-29T18:24:11.672976Z", "url": "https://files.pythonhosted.org/packages/bb/e0/1bcdd6aa1750e49db762ceabb0094eef3f6af4b2d58fe9f2423ab95e5a12/fast-trade-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:22 2020"}