{"info": {"author": "Clement Gehring", "author_email": "fax-dev@gehring.io", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: MacOS :: MacOS X", "Operating System :: Microsoft :: Windows", "Operating System :: POSIX", "Programming Language :: C++", "Programming Language :: Python :: 3", "Topic :: Scientific/Engineering :: Artificial Intelligence"], "description": "# fax: fixed-point jax \n\nImplicit and [competitive differentiation](https://optrl2019.github.io/assets/accepted_papers/70.pdf) in [JAX](https://github.com/google/jax).\n\nOur \"competitive differentiation\" approach uses [Competitive Gradient Descent](https://arxiv.org/abs/1905.12103) to solve the equality-constrained nonlinear program associated with the fixed-point problem. A standalone implementation of CGD is provided under [fax/competitive/cga.py](fax/competitive/cga.py) and the equality-constrained solver derived from it can be accessed via `fax.constrained.cga_lagrange_min` or `fax.constrained.cga_ecp`. An implementation of implicit differentiation based on [Christianson's](https://doi.org/10.1080/10556789408805572) two-phases reverse accumulation algorithm can also be obtained with the function `fax.implicit.two_phase_solver`.\n\nSee [fax/constrained/constrained_test.py](fax/constrained/constrained_test.py) for examples. Please note that the API is subject to change.\n\n## References\n\nCiting competitive differentiation:\n\n```\n@inproceedings{bacon2019optrl,\n  author={Pierre-Luc Bacon, Florian Schaefer, Clement Gehring, Animashree Anandkumar, Emma Brunskill},\n  title={A Lagrangian Method for Inverse Problems in Reinforcement Learning},\n  booktitle={NeurIPS Optimization Foundations for Reinforcement Learning Workshop},\n  year={2019},\n  url={http://lis.csail.mit.edu/pubs/bacon-optrl-2019.pdf},\n  keywords={Optimization, Reinforcement Learning, Lagrangian}\n}\n```\n\nCiting this repo:\n\n```\n@misc{gehring2019fax,\n  author = {Clement Gehring, Pierre-Luc Bacon, Florian Schaefer},\n  title = {{FAX: differentiating fixed point problems in JAX}},\n  note = {Available at: https://github.com/gehring/fax},\n  year = {2019}\n}\n```\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "jax-fixedpoint", "package_url": "https://pypi.org/project/jax-fixedpoint/", "platform": "", "project_url": "https://pypi.org/project/jax-fixedpoint/", "project_urls": null, "release_url": "https://pypi.org/project/jax-fixedpoint/0.0.4/", "requires_dist": ["numpy", "scipy", "absl-py", "jax", "jaxlib", "hypothesis"], "requires_python": ">=3.5", "summary": "Implicit and competitive differentiation in JAX.", "version": "0.0.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>fax: fixed-point jax</h1>\n<p>Implicit and <a href=\"https://optrl2019.github.io/assets/accepted_papers/70.pdf\" rel=\"nofollow\">competitive differentiation</a> in <a href=\"https://github.com/google/jax\" rel=\"nofollow\">JAX</a>.</p>\n<p>Our \"competitive differentiation\" approach uses <a href=\"https://arxiv.org/abs/1905.12103\" rel=\"nofollow\">Competitive Gradient Descent</a> to solve the equality-constrained nonlinear program associated with the fixed-point problem. A standalone implementation of CGD is provided under <a href=\"fax/competitive/cga.py\" rel=\"nofollow\">fax/competitive/cga.py</a> and the equality-constrained solver derived from it can be accessed via <code>fax.constrained.cga_lagrange_min</code> or <code>fax.constrained.cga_ecp</code>. An implementation of implicit differentiation based on <a href=\"https://doi.org/10.1080/10556789408805572\" rel=\"nofollow\">Christianson's</a> two-phases reverse accumulation algorithm can also be obtained with the function <code>fax.implicit.two_phase_solver</code>.</p>\n<p>See <a href=\"fax/constrained/constrained_test.py\" rel=\"nofollow\">fax/constrained/constrained_test.py</a> for examples. Please note that the API is subject to change.</p>\n<h2>References</h2>\n<p>Citing competitive differentiation:</p>\n<pre><code>@inproceedings{bacon2019optrl,\n  author={Pierre-Luc Bacon, Florian Schaefer, Clement Gehring, Animashree Anandkumar, Emma Brunskill},\n  title={A Lagrangian Method for Inverse Problems in Reinforcement Learning},\n  booktitle={NeurIPS Optimization Foundations for Reinforcement Learning Workshop},\n  year={2019},\n  url={http://lis.csail.mit.edu/pubs/bacon-optrl-2019.pdf},\n  keywords={Optimization, Reinforcement Learning, Lagrangian}\n}\n</code></pre>\n<p>Citing this repo:</p>\n<pre><code>@misc{gehring2019fax,\n  author = {Clement Gehring, Pierre-Luc Bacon, Florian Schaefer},\n  title = {{FAX: differentiating fixed point problems in JAX}},\n  note = {Available at: https://github.com/gehring/fax},\n  year = {2019}\n}\n</code></pre>\n\n          </div>"}, "last_serial": 6787024, "releases": {"0.0.4": [{"comment_text": "", "digests": {"md5": "c4e4a08a33fac4eebf47a3de199929cf", "sha256": "fea60907d928103b3bf470c90a56c1905e9e388e0094770f5b51f71b7ae4ce1c"}, "downloads": -1, "filename": "jax_fixedpoint-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c4e4a08a33fac4eebf47a3de199929cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 199681, "upload_time": "2020-03-10T17:33:14", "upload_time_iso_8601": "2020-03-10T17:33:14.560056Z", "url": "https://files.pythonhosted.org/packages/70/4b/0661345c8d8a8abf4b8e6ac088ca1cea29a7fb855482424feb0b98be565f/jax_fixedpoint-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f195dd8409cd576cd16532289444e182", "sha256": "231f62cc15001a880def06d743cb5139e9813992dff2fda269253e26214bf3ae"}, "downloads": -1, "filename": "jax-fixedpoint-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f195dd8409cd576cd16532289444e182", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25371, "upload_time": "2020-03-10T17:33:15", "upload_time_iso_8601": "2020-03-10T17:33:15.951050Z", "url": "https://files.pythonhosted.org/packages/65/6c/f00dcebe8bfad8650e39bbd4f89604d866b3661e02c8795663e2efe18924/jax-fixedpoint-0.0.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "c4e4a08a33fac4eebf47a3de199929cf", "sha256": "fea60907d928103b3bf470c90a56c1905e9e388e0094770f5b51f71b7ae4ce1c"}, "downloads": -1, "filename": "jax_fixedpoint-0.0.4-py3-none-any.whl", "has_sig": false, "md5_digest": "c4e4a08a33fac4eebf47a3de199929cf", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 199681, "upload_time": "2020-03-10T17:33:14", "upload_time_iso_8601": "2020-03-10T17:33:14.560056Z", "url": "https://files.pythonhosted.org/packages/70/4b/0661345c8d8a8abf4b8e6ac088ca1cea29a7fb855482424feb0b98be565f/jax_fixedpoint-0.0.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f195dd8409cd576cd16532289444e182", "sha256": "231f62cc15001a880def06d743cb5139e9813992dff2fda269253e26214bf3ae"}, "downloads": -1, "filename": "jax-fixedpoint-0.0.4.tar.gz", "has_sig": false, "md5_digest": "f195dd8409cd576cd16532289444e182", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 25371, "upload_time": "2020-03-10T17:33:15", "upload_time_iso_8601": "2020-03-10T17:33:15.951050Z", "url": "https://files.pythonhosted.org/packages/65/6c/f00dcebe8bfad8650e39bbd4f89604d866b3661e02c8795663e2efe18924/jax-fixedpoint-0.0.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:53:03 2020"}