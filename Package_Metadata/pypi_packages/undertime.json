{"info": {"author": "Antoine Beaupr\u00e9", "author_email": "anarcat@debian.org", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Environment :: Console", "Intended Audience :: End Users/Desktop", "License :: OSI Approved :: GNU Affero General Public License v3 or later (AGPLv3+)", "Natural Language :: English", "Operating System :: POSIX", "Operating System :: POSIX :: Linux", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Topic :: Office/Business :: Scheduling"], "description": "Undertime - pick a meeting time\n===============================\n\nThis program allows you to quickly pick a meeting time across multiple\ntimezones for conference calls or other coordinated events. It shows\nall times of a given day for all the timezones selected, in a table\nthat aligns the time so a line shows simultaneous times across all\ntimezones. This takes into account daylight savings and other\npeculiarities (provided that the local timezone database is up to\ndate) so you can also schedule meetings in the future as well.\n\n.. image:: https://gitlab.com/anarcat/undertime/-/raw/master/undertime.png\n   :alt: screenshot of undertime computing possible meeting time for\n         multiple timezones on a daylight savings switch in the\n         US/Pacific, US/Eastern, UTC and Europe/Paris timezones\n\n.. image:: https://img.shields.io/badge/Say%20Thanks-!-1EAEDB.svg \n   :alt: Say thanks to the author\n   :target: https://saythanks.io/to/anarcat\n\nUsage\n=====\n\nTimezones should be passed on the commandline and are matched against\nthe `list of known timezones`_, as defined by the `pytz`_\npackage. Exact matches are attempted at first, but if that fails,\nsubstring matches are allowed, which makes it possible to do this::\n\n  undertime.py New_York Los_Angeles\n\nThe complete list of timezones is also shown when the\n``--list-zones`` commandline option is provided.\n\nColors are used to highlight the \"work hours\" where possible meeting\ntimes could overlap. You can change those work hours with the\n``--start`` and ``--end`` flags. The number of zones matching those\nhours is listed in the last column.\n\nBecause daylight savings may actually change time, you can also use\nthe ``--date`` time to pick an arbitrary time for the meeting, using\nnatural language (as parsed by the `dateparser`_ or `parsedatetime`_\nmodules, if available). The current time is also shown, in bold. A\nconfiguration file can be used to set defaults.\n\nThe output format is controled by the `tabulate`_ program. See the\n`tabulate documentation <tabulate>`_ for more information about the\npossible outputs.\n\nSummary usage is available with the ``--help`` flag and full help in\nthe manpage. Instructions for how to contribute to the project are in\n``CONTRIBUTING.rst`` and there is a ``CODE_OF_CONDUCT.rst``.\n\n.. _list of known timezones: https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\n.. _pytz: https://pypi.python.org/pypi/pytz\n.. _dateparser: https://dateparser.readthedocs.io/\n.. _parsedatetime: https://pypi.python.org/pypi/parsedatetime/\n.. _overtime-cli: https://github.com/diit/overtime-cli\n.. _tabulate: https://github.com/cmck/python-tabulate\n\nKnown issues and limitations\n============================\n\nThere is no ``--version`` flag because of limitations in Python's\nperformance, see `issue #4`_ for a full discussion.\n\nUndertime was written using Python 3.5 and 3.7 and there is no\ngarantee it will work in older (or newer) Python releases.\n\nTimezones -- and time in general -- are hard problems: the math is\nhard, and the zones constantly. What may be applicable to your\nlocation at the current time may not be reflected by your operating\nsystem or the chain of software used by this program to determine\ntime. `According to this video <timezone-video>`_ from `Tom Scott\n<tomscott>`_, \"*you really should never, ever deal with timezones if\nyou can help it*\". This sounds a lot like what this program does, but\ndo note that:\n\n    \"What you learn, after dealing with timezones, is that what you\n    do, is you put away your code, you don't try and write anything to\n    deal with this. You look at the people who have been there before\n    you. You look at the first people, the people who've done this\n    before, the people who've built the spaghetti code, and you go to\n    them, and you thank them very much for making it open source, and\n    you give them credit, and you take what they've made, you put it\n    in your program. and you never ever look at it again. because that\n    way lies madness.\"\n\n    -- Tom Scott\n\nThat is what this program does. It reuses the `pytz`_ library based on\nthe `Olson tz database`_. See the Credits section for more information.\n\n.. _timezone-video: https://www.youtube.com/watch?v=-5wpm-gesOY\n.. _tomscott: https://twitter.com/tomscott\n.. _Olson tz database: https://en.wikipedia.org/wiki/Tz_database\n\nTime is an illusion we created to rationalize our unbearable\nephemerality and is bound to be imprecise, confusing and flawed. It's\nneither your fault or your computer's: accept and embrace its\nhumanity.\n\n.. _issue #3: https://gitlab.com/anarcat/undertime/issues/3\n.. _issue #4: https://gitlab.com/anarcat/undertime/issues/4\n\nInstalling\n==========\n\nThis program can be installed using ``pip`` from the `PyPI\nrepository`_, like so::\n\n  pip3 install undertime\n\nThe above assumes you're running a distribution that installs the\nPython 3 version of ``pip`` as ``pip3``, you might need to replace\nthat with just ``pip`` on some setups.\n\nThis program is also packaged in Debian (since Debian 10 \"buster\"), so\nyou can also install it with::\n\n  apt install undertime\n\nIf you downloaded this source code and want to install *that*\ndirectly, you can simply run::\n\n  pip3 install .\n\n.. _PyPI repository: https://pypi.org/project/undertime/\n\nCredits\n=======\n\nThis program was written by Antoine Beaupr\u00e9 and is licensed under the\nAGPLv3+. It was inspired by the `overtime-cli`_ program and the\n`timeanddate.com`_ site. Another similar tool is `worldchatclock.com`_\nand its beautiful round interface. I also found out about `tzdiff`_ a\nfew months after writing undertime.\n\nI rewrote `overtime-cli`_ in Python because I felt we shouldn't need a\nJavascript virtual machine to pick a time. I was also curious to see\nhow such a rewrite would look like and was tired of loading a web\nbrowser every time I needed to figure out what time it was elsewhere\nin the world or when I needed to coordinate international meetings.\n\nAll of this wouldn't have been possible without the `pytz`_ library\nwritten by Stuart Bishop, itself based on the `Olson tz database`_\nfounded by Arthur David Olson and currently maintained by Paul\nEggert. Those packages are shipped to your favorite Debian\ndistribution by package maintainers who struggle to keep up with those\nconstant changes so credits should also go to the `tzdata package\nmaintainers`_ (currently Adam Conrad, Aurelien Jarno, and Clint Adams)\nalong with everyone in the Debian project keeping all those packages\nup to date. Thank you for dealing with humanity's confusing,\nbeautiful and complex quirks for all of us.\n\n.. _timeanddate.com: https://www.timeanddate.com/\n.. _worldchatclock.com: http://worldchatclock.com/\n.. _tzdiff: https://github.com/belgianbeer/tzdiff\n.. _tzdata package maintainers: https://tracker.debian.org/pkg/tzdata\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/anarcat/undertime", "keywords": "", "license": "AGPLv3", "maintainer": "", "maintainer_email": "", "name": "undertime", "package_url": "https://pypi.org/project/undertime/", "platform": "", "project_url": "https://pypi.org/project/undertime/", "project_urls": {"Homepage": "https://gitlab.com/anarcat/undertime"}, "release_url": "https://pypi.org/project/undertime/2.2.1/", "requires_dist": ["dateparser", "pytz", "pyyaml", "tabulate", "termcolor", "pytest ; extra == 'test'", "pytest-cov ; extra == 'test'"], "requires_python": "", "summary": "pick a meeting time", "version": "2.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"undertime-pick-a-meeting-time\">\n<h2>Undertime - pick a meeting time</h2>\n<p>This program allows you to quickly pick a meeting time across multiple\ntimezones for conference calls or other coordinated events. It shows\nall times of a given day for all the timezones selected, in a table\nthat aligns the time so a line shows simultaneous times across all\ntimezones. This takes into account daylight savings and other\npeculiarities (provided that the local timezone database is up to\ndate) so you can also schedule meetings in the future as well.</p>\n<img alt=\"screenshot of undertime computing possible meeting time for multiple timezones on a daylight savings switch in the US/Pacific, US/Eastern, UTC and Europe/Paris timezones\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85f5125a3728f840394fe5ce24960141bc17926b/68747470733a2f2f6769746c61622e636f6d2f616e61726361742f756e64657274696d652f2d2f7261772f6d61737465722f756e64657274696d652e706e67\">\n<a href=\"https://saythanks.io/to/anarcat\" rel=\"nofollow\"><img alt=\"Say thanks to the author\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/51b7f145f134a99621f186ddcdb0af646a24c8aa/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f5361792532305468616e6b732d212d3145414544422e737667\"></a>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Timezones should be passed on the commandline and are matched against\nthe <a href=\"https://en.wikipedia.org/wiki/List_of_tz_database_time_zones\" rel=\"nofollow\">list of known timezones</a>, as defined by the <a href=\"https://pypi.python.org/pypi/pytz\" rel=\"nofollow\">pytz</a>\npackage. Exact matches are attempted at first, but if that fails,\nsubstring matches are allowed, which makes it possible to do this:</p>\n<pre>undertime.py New_York Los_Angeles\n</pre>\n<p>The complete list of timezones is also shown when the\n<tt><span class=\"pre\">--list-zones</span></tt> commandline option is provided.</p>\n<p>Colors are used to highlight the \u201cwork hours\u201d where possible meeting\ntimes could overlap. You can change those work hours with the\n<tt><span class=\"pre\">--start</span></tt> and <tt><span class=\"pre\">--end</span></tt> flags. The number of zones matching those\nhours is listed in the last column.</p>\n<p>Because daylight savings may actually change time, you can also use\nthe <tt><span class=\"pre\">--date</span></tt> time to pick an arbitrary time for the meeting, using\nnatural language (as parsed by the <a href=\"https://dateparser.readthedocs.io/\" rel=\"nofollow\">dateparser</a> or <a href=\"https://pypi.python.org/pypi/parsedatetime/\" rel=\"nofollow\">parsedatetime</a>\nmodules, if available). The current time is also shown, in bold. A\nconfiguration file can be used to set defaults.</p>\n<p>The output format is controled by the <a href=\"https://github.com/cmck/python-tabulate\" rel=\"nofollow\">tabulate</a> program. See the\n<a href=\"tabulate\" rel=\"nofollow\">tabulate documentation</a> for more information about the\npossible outputs.</p>\n<p>Summary usage is available with the <tt><span class=\"pre\">--help</span></tt> flag and full help in\nthe manpage. Instructions for how to contribute to the project are in\n<tt>CONTRIBUTING.rst</tt> and there is a <tt>CODE_OF_CONDUCT.rst</tt>.</p>\n</div>\n<div id=\"known-issues-and-limitations\">\n<h2>Known issues and limitations</h2>\n<p>There is no <tt><span class=\"pre\">--version</span></tt> flag because of limitations in Python\u2019s\nperformance, see <a href=\"https://gitlab.com/anarcat/undertime/issues/4\" rel=\"nofollow\">issue #4</a> for a full discussion.</p>\n<p>Undertime was written using Python 3.5 and 3.7 and there is no\ngarantee it will work in older (or newer) Python releases.</p>\n<p>Timezones \u2013 and time in general \u2013 are hard problems: the math is\nhard, and the zones constantly. What may be applicable to your\nlocation at the current time may not be reflected by your operating\nsystem or the chain of software used by this program to determine\ntime. <a href=\"timezone-video\" rel=\"nofollow\">According to this video</a> from <a href=\"tomscott\" rel=\"nofollow\">Tom Scott</a>, \u201c<em>you really should never, ever deal with timezones if\nyou can help it</em>\u201d. This sounds a lot like what this program does, but\ndo note that:</p>\n<blockquote>\n<p>\u201cWhat you learn, after dealing with timezones, is that what you\ndo, is you put away your code, you don\u2019t try and write anything to\ndeal with this. You look at the people who have been there before\nyou. You look at the first people, the people who\u2019ve done this\nbefore, the people who\u2019ve built the spaghetti code, and you go to\nthem, and you thank them very much for making it open source, and\nyou give them credit, and you take what they\u2019ve made, you put it\nin your program. and you never ever look at it again. because that\nway lies madness.\u201d</p>\n<p>\u2014Tom Scott</p>\n</blockquote>\n<p>That is what this program does. It reuses the <a href=\"https://pypi.python.org/pypi/pytz\" rel=\"nofollow\">pytz</a> library based on\nthe <a href=\"https://en.wikipedia.org/wiki/Tz_database\" rel=\"nofollow\">Olson tz database</a>. See the Credits section for more information.</p>\n<p>Time is an illusion we created to rationalize our unbearable\nephemerality and is bound to be imprecise, confusing and flawed. It\u2019s\nneither your fault or your computer\u2019s: accept and embrace its\nhumanity.</p>\n</div>\n<div id=\"installing\">\n<h2>Installing</h2>\n<p>This program can be installed using <tt>pip</tt> from the <a href=\"https://pypi.org/project/undertime/\" rel=\"nofollow\">PyPI\nrepository</a>, like so:</p>\n<pre>pip3 install undertime\n</pre>\n<p>The above assumes you\u2019re running a distribution that installs the\nPython 3 version of <tt>pip</tt> as <tt>pip3</tt>, you might need to replace\nthat with just <tt>pip</tt> on some setups.</p>\n<p>This program is also packaged in Debian (since Debian 10 \u201cbuster\u201d), so\nyou can also install it with:</p>\n<pre>apt install undertime\n</pre>\n<p>If you downloaded this source code and want to install <em>that</em>\ndirectly, you can simply run:</p>\n<pre>pip3 install .\n</pre>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>This program was written by Antoine Beaupr\u00e9 and is licensed under the\nAGPLv3+. It was inspired by the <a href=\"https://github.com/diit/overtime-cli\" rel=\"nofollow\">overtime-cli</a> program and the\n<a href=\"https://www.timeanddate.com/\" rel=\"nofollow\">timeanddate.com</a> site. Another similar tool is <a href=\"http://worldchatclock.com/\" rel=\"nofollow\">worldchatclock.com</a>\nand its beautiful round interface. I also found out about <a href=\"https://github.com/belgianbeer/tzdiff\" rel=\"nofollow\">tzdiff</a> a\nfew months after writing undertime.</p>\n<p>I rewrote <a href=\"https://github.com/diit/overtime-cli\" rel=\"nofollow\">overtime-cli</a> in Python because I felt we shouldn\u2019t need a\nJavascript virtual machine to pick a time. I was also curious to see\nhow such a rewrite would look like and was tired of loading a web\nbrowser every time I needed to figure out what time it was elsewhere\nin the world or when I needed to coordinate international meetings.</p>\n<p>All of this wouldn\u2019t have been possible without the <a href=\"https://pypi.python.org/pypi/pytz\" rel=\"nofollow\">pytz</a> library\nwritten by Stuart Bishop, itself based on the <a href=\"https://en.wikipedia.org/wiki/Tz_database\" rel=\"nofollow\">Olson tz database</a>\nfounded by Arthur David Olson and currently maintained by Paul\nEggert. Those packages are shipped to your favorite Debian\ndistribution by package maintainers who struggle to keep up with those\nconstant changes so credits should also go to the <a href=\"https://tracker.debian.org/pkg/tzdata\" rel=\"nofollow\">tzdata package\nmaintainers</a> (currently Adam Conrad, Aurelien Jarno, and Clint Adams)\nalong with everyone in the Debian project keeping all those packages\nup to date. Thank you for dealing with humanity\u2019s confusing,\nbeautiful and complex quirks for all of us.</p>\n</div>\n\n          </div>"}, "last_serial": 7182635, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "73d62d79eade57540c1c8ad8fcd42f97", "sha256": "076ede3461fe1de8f408bc352defd9b15f7ca8fe4ca3cd4dde1e44fc29297865"}, "downloads": -1, "filename": "undertime-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "73d62d79eade57540c1c8ad8fcd42f97", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8181, "upload_time": "2018-01-14T14:16:13", "upload_time_iso_8601": "2018-01-14T14:16:13.753978Z", "url": "https://files.pythonhosted.org/packages/a4/c4/3503602c4a1498a10728b7bfeab642738a406e5429dcb94a83017b29bd4c/undertime-1.0.0-py3-none-any.whl", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "d758bb3907d15a442213bd4a407bcd51", "sha256": "f85bed23696105fc31c248b5c29f7994270e7c9a582b1b39bf1eedcaf19dfd66"}, "downloads": -1, "filename": "undertime-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "d758bb3907d15a442213bd4a407bcd51", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8173, "upload_time": "2018-01-14T14:18:08", "upload_time_iso_8601": "2018-01-14T14:18:08.095479Z", "url": "https://files.pythonhosted.org/packages/65/f3/a8a32c0485945dd6b07335f1e06f98d86d065a67337af06a032927a69495/undertime-1.0.1-py3-none-any.whl", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "023d277ac1667e6afe3e3aec81b3c9de", "sha256": "0c95dc544a2a9f4695661101803f56fb56d7b1ab707bfb4dc4d6e848545d0bf6"}, "downloads": -1, "filename": "undertime-1.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "023d277ac1667e6afe3e3aec81b3c9de", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8290, "upload_time": "2018-02-23T21:35:56", "upload_time_iso_8601": "2018-02-23T21:35:56.257794Z", "url": "https://files.pythonhosted.org/packages/c1/3e/85ff789c176acd34f9c0c09e3329189495326afc83d3ea34ea5d633a184e/undertime-1.1.0-py3-none-any.whl", "yanked": false}], "1.2.0": [{"comment_text": "", "digests": {"md5": "64240bddb349f0ecd8b806ccd5b731c9", "sha256": "fe0e69c9e3b48bce6c70092164461d97c6bf302118238ea11f12a19e8edb89aa"}, "downloads": -1, "filename": "undertime-1.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "64240bddb349f0ecd8b806ccd5b731c9", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8496, "upload_time": "2018-02-26T15:40:29", "upload_time_iso_8601": "2018-02-26T15:40:29.201612Z", "url": "https://files.pythonhosted.org/packages/a6/6a/622c1ace227dd0d36a47226183229cd1fb9635ff01a2896aff9249f69cb0/undertime-1.2.0-py3-none-any.whl", "yanked": false}], "1.3.0": [{"comment_text": "", "digests": {"md5": "742b9920c3d6fbddd0d6a87f77064b7e", "sha256": "6da8577b9012cf67f56e6d2d7fafdb0dbe2ac3a35e606d6ffdf7b6379ebebe98"}, "downloads": -1, "filename": "undertime-1.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "742b9920c3d6fbddd0d6a87f77064b7e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9447, "upload_time": "2018-03-12T17:42:05", "upload_time_iso_8601": "2018-03-12T17:42:05.329377Z", "url": "https://files.pythonhosted.org/packages/cc/37/7c9d0fb4fea49e77b7f6355b59fd7ec39da13227a4c95147ef15cbf96d7a/undertime-1.3.0-py3-none-any.whl", "yanked": false}], "1.4.0": [{"comment_text": "", "digests": {"md5": "59ed43415c53ec430d31cb80470acb86", "sha256": "1e6a95204b2173b024ebb747b29dfbd606707708fcfffaec254c534d9edd70de"}, "downloads": -1, "filename": "undertime-1.4.0-py3-none-any.whl", "has_sig": false, "md5_digest": "59ed43415c53ec430d31cb80470acb86", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 9587, "upload_time": "2018-09-23T16:12:27", "upload_time_iso_8601": "2018-09-23T16:12:27.135863Z", "url": "https://files.pythonhosted.org/packages/6c/8d/f54054a90c3772937a8afbc20841706e5d2e5c8ec5d49f001838aa47c064/undertime-1.4.0-py3-none-any.whl", "yanked": false}], "1.5.0": [{"comment_text": "", "digests": {"md5": "da5ff7f782d14ab821ce3fe862821ca1", "sha256": "6b8e0c09519f16369c9a2ce31754f4d0617e9b376ba777441903bdb477ed75dc"}, "downloads": -1, "filename": "undertime-1.5.0-py3-none-any.whl", "has_sig": false, "md5_digest": "da5ff7f782d14ab821ce3fe862821ca1", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 11446, "upload_time": "2018-11-30T17:50:26", "upload_time_iso_8601": "2018-11-30T17:50:26.039127Z", "url": "https://files.pythonhosted.org/packages/4f/9b/1ee545b11203e7b60ba0fac0a5b475161be6c891fb4ba72390530547bd12/undertime-1.5.0-py3-none-any.whl", "yanked": false}], "1.6.0": [{"comment_text": "", "digests": {"md5": "051ce5f56ee508266aee1530ff6550ad", "sha256": "de305280bd165a52e65ef2e1a0b5658cefa17ab3d87825331a8684dd116c0221"}, "downloads": -1, "filename": "undertime-1.6.0-py3-none-any.whl", "has_sig": false, "md5_digest": "051ce5f56ee508266aee1530ff6550ad", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 12081, "upload_time": "2019-01-14T19:31:22", "upload_time_iso_8601": "2019-01-14T19:31:22.510706Z", "url": "https://files.pythonhosted.org/packages/85/38/348f18f359234d51e0e50eb51cfe3ff14bf7564b5e68e4b3614237b335fc/undertime-1.6.0-py3-none-any.whl", "yanked": false}], "1.7.0": [{"comment_text": "", "digests": {"md5": "91852ae3e5834dce3632e5474c312c95", "sha256": "a32d9015dc463bc545d7a1a27684343b0f28f38a78bb424256baa6994dc1ba01"}, "downloads": -1, "filename": "undertime-1.7.0-py3-none-any.whl", "has_sig": false, "md5_digest": "91852ae3e5834dce3632e5474c312c95", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 13453, "upload_time": "2019-01-15T22:43:51", "upload_time_iso_8601": "2019-01-15T22:43:51.088935Z", "url": "https://files.pythonhosted.org/packages/7e/8a/db4a168e016234d757d0f7456442dc95926c9361058d1590ed1719fc6deb/undertime-1.7.0-py3-none-any.whl", "yanked": false}], "1.8.0": [{"comment_text": "", "digests": {"md5": "388955f6bae01cc03a89e61aafc7615a", "sha256": "5b2524c672befddaddcbc90f1e9e77caa91c7a52cac54feb0ecb532f2889c7c2"}, "downloads": -1, "filename": "undertime-1.8.0-py3-none-any.whl", "has_sig": false, "md5_digest": "388955f6bae01cc03a89e61aafc7615a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 22643, "upload_time": "2019-11-21T18:37:23", "upload_time_iso_8601": "2019-11-21T18:37:23.745220Z", "url": "https://files.pythonhosted.org/packages/8f/81/3d6b5f0ccf22351c955c511f3f7436a4d0017bc659843286d62486ebbde7/undertime-1.8.0-py3-none-any.whl", "yanked": false}], "2.0.0": [{"comment_text": "", "digests": {"md5": "4ac09dd829169d427b004507b0a38fd6", "sha256": "0893d40f3369121cb05763a4764460e717c94441ae4dc4b6e2be6bb594e8a4e4"}, "downloads": -1, "filename": "undertime-2.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4ac09dd829169d427b004507b0a38fd6", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 24746, "upload_time": "2020-03-09T18:01:54", "upload_time_iso_8601": "2020-03-09T18:01:54.473874Z", "url": "https://files.pythonhosted.org/packages/28/22/83d26e460fc550764e8096d324a299eb9379da10b6e351292890c7aa92f2/undertime-2.0.0-py3-none-any.whl", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "4d377bcbd78ca036234d5221d15624a5", "sha256": "8afbbe673bb5d857cf4f89ae72e724c06de5a984d1a5dbebeb64522bcb2f8b93"}, "downloads": -1, "filename": "undertime-2.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "4d377bcbd78ca036234d5221d15624a5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25553, "upload_time": "2020-04-22T20:37:12", "upload_time_iso_8601": "2020-04-22T20:37:12.984294Z", "url": "https://files.pythonhosted.org/packages/71/0e/6a3329ce186428088aa29e7a38a4329872917b728a196e51219205d3e107/undertime-2.1.0-py3-none-any.whl", "yanked": false}], "2.2.0": [{"comment_text": "", "digests": {"md5": "caa38d062ff1e332804ccde058590825", "sha256": "26b39c7f91169e7a5f992f326a66de517e1c07a0ee6095466633f189f82cee10"}, "downloads": -1, "filename": "undertime-2.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "caa38d062ff1e332804ccde058590825", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 25641, "upload_time": "2020-04-24T21:12:27", "upload_time_iso_8601": "2020-04-24T21:12:27.500127Z", "url": "https://files.pythonhosted.org/packages/24/1a/f08f834f20089ecfb0d98e46e789dc6d8d0c4aa9bdce60b7b0cc730d6ca1/undertime-2.2.0-py3-none-any.whl", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "718a0df92338534924a41e2995810035", "sha256": "5c909306339ca4f0aaa3f94139f13ccee665ba46d9aee968ed1004f265e66e79"}, "downloads": -1, "filename": "undertime-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "718a0df92338534924a41e2995810035", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26198, "upload_time": "2020-05-06T19:38:20", "upload_time_iso_8601": "2020-05-06T19:38:20.538655Z", "url": "https://files.pythonhosted.org/packages/3f/d6/3bd3e57b42a84f217ccff28a454e6bdf9ba20a1c3e8974adef64f2ca72a1/undertime-2.2.1-py3-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "718a0df92338534924a41e2995810035", "sha256": "5c909306339ca4f0aaa3f94139f13ccee665ba46d9aee968ed1004f265e66e79"}, "downloads": -1, "filename": "undertime-2.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "718a0df92338534924a41e2995810035", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 26198, "upload_time": "2020-05-06T19:38:20", "upload_time_iso_8601": "2020-05-06T19:38:20.538655Z", "url": "https://files.pythonhosted.org/packages/3f/d6/3bd3e57b42a84f217ccff28a454e6bdf9ba20a1c3e8974adef64f2ca72a1/undertime-2.2.1-py3-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:40:50 2020"}