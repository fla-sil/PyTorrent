{"info": {"author": "Anthony Sottile", "author_email": "asottile@umich.edu", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only"], "description": "[![Build Status](https://dev.azure.com/asottile/asottile/_apis/build/status/asottile.re-assert?branchName=master)](https://dev.azure.com/asottile/asottile/_build/latest?definitionId=31&branchName=master)\n[![Azure DevOps coverage](https://img.shields.io/azure-devops/coverage/asottile/asottile/31/master.svg)](https://dev.azure.com/asottile/asottile/_build/latest?definitionId=31&branchName=master)\n\nre-assert\n=========\n\nshow where your regex match assertion failed!\n\n## installation\n\n`pip install re-assert`\n\n## usage\n\n`re-assert` provides a helper class to make assertions of regexes simpler.\n\n### `re_assert.Matches(pattern: str, *args, **kwargs)`\n\nconstruct a `Matches` object.\n\n_note_: under the hood, `re-assert` uses the [`regex`] library for matching,\nany `*args` / `**kwargs` that `regex.compile` supports will work.  in general,\n the `regex` library is 100% compatible with the `re` library (and will even\naccept its flags, etc.)\n\n[`regex`]: https://pypi.org/project/regex/\n\n### `re_assert.Matches.from_pattern(pattern: Pattern[str]) -> Matches`\n\nconstruct a `Matches` object from an already-compiled regex.\n\nthis is useful (for instance) if you're testing an existing compiled regex.\n\n```pycon\n>>> import re\n>>> reg = re.compile('foo')\n>>> Matches.from_pattern(reg) == 'fork'\nFalse\n>>> Matches.from_pattern(reg) == 'food'\nTrue\n```\n\n### `Matches.__eq__(other)` (`==`)\n\nthe equality operator is overridden for use with assertion frameworks such\nas pytest\n\n```pycon\n>>> pat = Matches('foo')\n>>> pat == 'bar'\nFalse\n>>> pat == 'food'\nTrue\n```\n\n### `Matches.__repr__()` (`repr(...)`)\n\na side-effect of an equality failure changes the `repr(...)` of a `Matches`\nobject.  this allows for useful pytest assertion messages:\n\n```pytest\n>       assert Matches('foo') == 'fork'\nE       AssertionError: assert Matches('foo'...ork\\n    #    ^ == 'fork'\nE         -Matches('foo')\\n\nE         -    # regex failed to match at:\\n\nE         -    #\\n\nE         -    #> fork\\n\nE         -    #    ^\nE         +'fork'\n```\n\n### `Matches.assert_matches(s: str)`\n\nif you're using some other test framework, this method is useful for producing\na readable traceback\n\n```pycon\n>>> Matches('foo').assert_matches('food')\n>>> Matches('foo').assert_matches('fork')\nTraceback (most recent call last):\n  File \"<stdin>\", line 1, in <module>\n  File \"/home/asottile/workspace/re-assert/re_assert.py\", line 63, in assert_matches\n    assert self == s, self._fail\nAssertionError:  regex failed to match at:\n\n> fork\n    ^\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/asottile/re-assert", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "re-assert", "package_url": "https://pypi.org/project/re-assert/", "platform": "", "project_url": "https://pypi.org/project/re-assert/", "project_urls": {"Homepage": "https://github.com/asottile/re-assert"}, "release_url": "https://pypi.org/project/re-assert/1.1.0/", "requires_dist": ["regex"], "requires_python": ">=3.6.1", "summary": "show where your regex match assertion failed!", "version": "1.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://dev.azure.com/asottile/asottile/_build/latest?definitionId=31&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6bf77fa4dde7833f673699799dd4d4e723c6e7b1/68747470733a2f2f6465762e617a7572652e636f6d2f61736f7474696c652f61736f7474696c652f5f617069732f6275696c642f7374617475732f61736f7474696c652e72652d6173736572743f6272616e63684e616d653d6d6173746572\"></a>\n<a href=\"https://dev.azure.com/asottile/asottile/_build/latest?definitionId=31&amp;branchName=master\" rel=\"nofollow\"><img alt=\"Azure DevOps coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a0ff7e2ca8ca44a05cfc27cd7d89eee8e711d983/68747470733a2f2f696d672e736869656c64732e696f2f617a7572652d6465766f70732f636f7665726167652f61736f7474696c652f61736f7474696c652f33312f6d61737465722e737667\"></a></p>\n<h1>re-assert</h1>\n<p>show where your regex match assertion failed!</p>\n<h2>installation</h2>\n<p><code>pip install re-assert</code></p>\n<h2>usage</h2>\n<p><code>re-assert</code> provides a helper class to make assertions of regexes simpler.</p>\n<h3><code>re_assert.Matches(pattern: str, *args, **kwargs)</code></h3>\n<p>construct a <code>Matches</code> object.</p>\n<p><em>note</em>: under the hood, <code>re-assert</code> uses the <a href=\"https://pypi.org/project/regex/\" rel=\"nofollow\"><code>regex</code></a> library for matching,\nany <code>*args</code> / <code>**kwargs</code> that <code>regex.compile</code> supports will work.  in general,\nthe <code>regex</code> library is 100% compatible with the <code>re</code> library (and will even\naccept its flags, etc.)</p>\n<h3><code>re_assert.Matches.from_pattern(pattern: Pattern[str]) -&gt; Matches</code></h3>\n<p>construct a <code>Matches</code> object from an already-compiled regex.</p>\n<p>this is useful (for instance) if you're testing an existing compiled regex.</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">import</span> <span class=\"nn\">re</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">reg</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"o\">.</span><span class=\"n\">compile</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Matches</span><span class=\"o\">.</span><span class=\"n\">from_pattern</span><span class=\"p\">(</span><span class=\"n\">reg</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'fork'</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Matches</span><span class=\"o\">.</span><span class=\"n\">from_pattern</span><span class=\"p\">(</span><span class=\"n\">reg</span><span class=\"p\">)</span> <span class=\"o\">==</span> <span class=\"s1\">'food'</span>\n<span class=\"go\">True</span>\n</pre>\n<h3><code>Matches.__eq__(other)</code> (<code>==</code>)</h3>\n<p>the equality operator is overridden for use with assertion frameworks such\nas pytest</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pat</span> <span class=\"o\">=</span> <span class=\"n\">Matches</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pat</span> <span class=\"o\">==</span> <span class=\"s1\">'bar'</span>\n<span class=\"go\">False</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">pat</span> <span class=\"o\">==</span> <span class=\"s1\">'food'</span>\n<span class=\"go\">True</span>\n</pre>\n<h3><code>Matches.__repr__()</code> (<code>repr(...)</code>)</h3>\n<p>a side-effect of an equality failure changes the <code>repr(...)</code> of a <code>Matches</code>\nobject.  this allows for useful pytest assertion messages:</p>\n<pre>&gt;       assert Matches('foo') == 'fork'\nE       AssertionError: assert Matches('foo'...ork\\n    #    ^ == 'fork'\nE         -Matches('foo')\\n\nE         -    # regex failed to match at:\\n\nE         -    #\\n\nE         -    #&gt; fork\\n\nE         -    #    ^\nE         +'fork'\n</pre>\n<h3><code>Matches.assert_matches(s: str)</code></h3>\n<p>if you're using some other test framework, this method is useful for producing\na readable traceback</p>\n<pre><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Matches</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">assert_matches</span><span class=\"p\">(</span><span class=\"s1\">'food'</span><span class=\"p\">)</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">Matches</span><span class=\"p\">(</span><span class=\"s1\">'foo'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">assert_matches</span><span class=\"p\">(</span><span class=\"s1\">'fork'</span><span class=\"p\">)</span>\n<span class=\"gt\">Traceback (most recent call last):</span>\n  File <span class=\"nb\">\"&lt;stdin&gt;\"</span>, line <span class=\"m\">1</span>, in <span class=\"n\">&lt;module&gt;</span>\n  File <span class=\"nb\">\"/home/asottile/workspace/re-assert/re_assert.py\"</span>, line <span class=\"m\">63</span>, in <span class=\"n\">assert_matches</span>\n    <span class=\"k\">assert</span> <span class=\"bp\">self</span> <span class=\"o\">==</span> <span class=\"n\">s</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">_fail</span>\n<span class=\"gr\">AssertionError</span>: <span class=\"n\"> regex failed to match at:</span>\n\n<span class=\"go\">&gt; fork</span>\n<span class=\"go\">    ^</span>\n</pre>\n\n          </div>"}, "last_serial": 6693483, "releases": {"0.0.0": [{"comment_text": "", "digests": {"md5": "2b7089d3bb1f1ae52fefdba44caaf4ce", "sha256": "ba946d5890a3ecc02f9c3e97ef7fb229b2ed1b2d5b2e9b3b2938f272aa555033"}, "downloads": -1, "filename": "re_assert-0.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2b7089d3bb1f1ae52fefdba44caaf4ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 4042, "upload_time": "2019-09-21T20:06:11", "upload_time_iso_8601": "2019-09-21T20:06:11.990778Z", "url": "https://files.pythonhosted.org/packages/6d/2e/77f408a2a4aea8fec0634e077aa3e0537f82482a87a7477be1bdfdc811d6/re_assert-0.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a9b477b56907e0e0cef1fa16a67e639", "sha256": "29826984bb79756cd0003a9573e76aebf3e5ee516e8553a4068e1bd3dedceac2"}, "downloads": -1, "filename": "re_assert-0.0.0.tar.gz", "has_sig": false, "md5_digest": "1a9b477b56907e0e0cef1fa16a67e639", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3888, "upload_time": "2019-09-21T20:06:14", "upload_time_iso_8601": "2019-09-21T20:06:14.279308Z", "url": "https://files.pythonhosted.org/packages/3a/eb/cfd74b656e6694f4e252300f4b3feb766423d313e33c13b0df7cd8766d6d/re_assert-0.0.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "71c40fd0943bbddd373fd975c388a15a", "sha256": "5be9d23ab05518699bf09ebdd477628c0340264190a51c75e6bf88067ea9f266"}, "downloads": -1, "filename": "re_assert-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "71c40fd0943bbddd373fd975c388a15a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 4044, "upload_time": "2019-09-21T20:06:55", "upload_time_iso_8601": "2019-09-21T20:06:55.116238Z", "url": "https://files.pythonhosted.org/packages/1d/06/f1fb87623b627ec66bc23457d1c47f45ec7a213e2a03fb16bad1aedc1383/re_assert-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9561a022964be9c25ac3e275de46c245", "sha256": "bc506382b1b9e77df7a6adfdd2a7d58871f7231113de0417e498dda61117c42d"}, "downloads": -1, "filename": "re_assert-1.0.0.tar.gz", "has_sig": false, "md5_digest": "9561a022964be9c25ac3e275de46c245", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 3888, "upload_time": "2019-09-21T20:06:56", "upload_time_iso_8601": "2019-09-21T20:06:56.454029Z", "url": "https://files.pythonhosted.org/packages/d0/16/98d954270f34ce61604528d1a114ce90fc35712b20de76d8cc9192671e78/re_assert-1.0.0.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "8b7babcb12d5654cebedb551f3a3885d", "sha256": "6b2902d5beac2a0e715eb0312fcb226ab4da21d1ea6953441734734b5b68cd48"}, "downloads": -1, "filename": "re_assert-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b7babcb12d5654cebedb551f3a3885d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.1", "size": 4050, "upload_time": "2020-02-25T00:05:32", "upload_time_iso_8601": "2020-02-25T00:05:32.593202Z", "url": "https://files.pythonhosted.org/packages/95/b0/e70a69ece48c3b6862a5ae6ca87e1e76ff2941447885550073eb280235fb/re_assert-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c948ac9a95285ab2b8048408fb70c978", "sha256": "5172dfbd2047a15dff2347735dea7e495479cc7e58841199a4a4973256b20464"}, "downloads": -1, "filename": "re_assert-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c948ac9a95285ab2b8048408fb70c978", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 3869, "upload_time": "2020-02-25T00:05:34", "upload_time_iso_8601": "2020-02-25T00:05:34.116515Z", "url": "https://files.pythonhosted.org/packages/72/89/5801de335fa7a9cd9f402f66680b14be076d2084dd8244e3a3136a743262/re_assert-1.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8b7babcb12d5654cebedb551f3a3885d", "sha256": "6b2902d5beac2a0e715eb0312fcb226ab4da21d1ea6953441734734b5b68cd48"}, "downloads": -1, "filename": "re_assert-1.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8b7babcb12d5654cebedb551f3a3885d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6.1", "size": 4050, "upload_time": "2020-02-25T00:05:32", "upload_time_iso_8601": "2020-02-25T00:05:32.593202Z", "url": "https://files.pythonhosted.org/packages/95/b0/e70a69ece48c3b6862a5ae6ca87e1e76ff2941447885550073eb280235fb/re_assert-1.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "c948ac9a95285ab2b8048408fb70c978", "sha256": "5172dfbd2047a15dff2347735dea7e495479cc7e58841199a4a4973256b20464"}, "downloads": -1, "filename": "re_assert-1.1.0.tar.gz", "has_sig": false, "md5_digest": "c948ac9a95285ab2b8048408fb70c978", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6.1", "size": 3869, "upload_time": "2020-02-25T00:05:34", "upload_time_iso_8601": "2020-02-25T00:05:34.116515Z", "url": "https://files.pythonhosted.org/packages/72/89/5801de335fa7a9cd9f402f66680b14be076d2084dd8244e3a3136a743262/re_assert-1.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:06:18 2020"}