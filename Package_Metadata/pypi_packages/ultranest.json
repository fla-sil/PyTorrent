{"info": {"author": "Johannes Buchner", "author_email": "johannes.buchner.acad@gmx.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "=========\nUltraNest\n=========\n\nFit and compare complex models reliably and rapidly with advanced sampling techniques.\n\n.. image:: https://img.shields.io/pypi/v/ultranest.svg\n        :target: https://pypi.python.org/pypi/ultranest\n\n.. image:: https://circleci.com/gh/JohannesBuchner/UltraNest/tree/master.svg?style=shield\n        :target: https://circleci.com/gh/JohannesBuchner/UltraNest\n\n.. image:: https://img.shields.io/badge/docs-published-ok.svg\n        :target: https://johannesbuchner.github.io/UltraNest/\n        :alt: Documentation Status\n\nCorrectness. Speed. Ease of use. \ud83e\udd94\n\nAbout\n-----\n\nWhen scientific models are compared to data, two tasks are important:\n1) contraining the model parameters and 2) comparing the model to other models.\nDifferent techniques have been developed to explore model parameter spaces.\nThis package implements a Monte Carlo technique called nested sampling.\n\n**Nested sampling** allows Bayesian inference on arbitrary user-defined likelihoods.\nIn particular, posterior probability distributions on model parameters\nare constructed, and the marginal likelihood (\"evidence\") Z is computed.\nThe former can be used to describe the parameter constraints of the data,\nthe latter can be used for model comparison (via `Bayes factors`) \nas a measure of the prediction parsimony of a model.\n\nIn the last decade, multiple variants of nested sampling have been \ndeveloped. These differ in how nested sampling finds better and\nbetter fits while respecting the priors \n(constrained likelihood prior sampling techniques), and whether it is \nallowed to go back to worse fits and explore the parameter space more.\n\nThis package develops novel, advanced techniques for both (See \n`How it works <https://johannesbuchner.github.io/UltraNest/method.html>`_).\nThey are especially remarkable for being free of tuning parameters \nand theoretically justified. Beyond that, UltraNest has support for \nBig Data sets and high-performance computing applications.\n\nUltraNest is intended for fitting complex physical models with slow\nlikelihood evaluations, with one to hundreds of parameters.\nUltraNest intends to replace heuristic methods like multi-ellipsoid\nnested sampling and dynamic nested sampling with more rigorous methods.\nUltraNest also attempts to provide feature parity compared to other packages\n(such as MultiNest).\n\nYou can help by testing UltraNest and reporting issues. Code contributions are welcome.\nSee the `Contributing page <https://johannesbuchner.github.io/UltraNest/contributing.html>`_.\n\nFeatures\n---------\n\n* Pythonic\n\n  * pip installable\n  * Easy to program for: Sanity checks with meaningful errors\n  * Can control the run programmatically and check status\n  * Reasonable defaults, but customizable\n  * Thoroughly tested with many unit and integration tests\n\n* Robust exploration easily handles:\n\n  * Degenerate parameter spaces such as bananas or tight correlations\n  * Multiple modes/solutions in the parameter space\n  * Robust, parameter-free MLFriends algorithm \n    (metric learning RadFriends, Buchner+14,+19), with new improvements\n    (region follows new live points, clustering improves metric iteratively).\n  * High-dimensional problems with slice sampling (or ellipsoidal sampling, FlatNUTS, etc.),\n    inside region.\n  * Wrapped/circular parameters, derived parameters\n  * Fast-slow parameters\n\n* strategic nested sampling\n\n  * can vary (increase) number of live points (akin to dynamic nested sampling, but with different targets)\n  * can sample clusters optimally (e.g., at least 50 points per cluster/mode/solution)\n  * can target minimizing parameter estimation uncertainties\n  * can target a desired evidence uncertainty threshold\n  * can target a desired number of effective samples\n  * or any combination of the above\n  * Robust ln(Z) uncertainties by bootstrapping live points.\n\n* Lightweight and fast\n\n  * some functions implemented in Cython\n  * vectorized likelihood function calls\n  * Use multiple cores, fully parallelizable from laptops to clusters\n  * MPI support\n\n* Advanced visualisation and crash recovery:\n\n  * Checkpointing and resuming, even with different number of live points\n  * Run-time visualisations and exploration information\n  * Corner plots, run and parameter exploration diagnostic plots\n\n\nTODO\n^^^^\n\n* Documentation:\n\n  * Example power law fit\n  * Example spectral line fit, white and GP\n  * Example low-d Bayesian GP emulator as pre-filter to model evaluation\n  * Example verifying integration with VB+IS\n\nUsage\n^^^^^\n\nRead the full documentation at:\n\nhttps://johannesbuchner.github.io/UltraNest/\n\n\nLicence\n^^^^^^^\n\nGPLv3 (see LICENCE file). If you require another license, please contact me.\n\nIcon made by `Freepik <https://www.flaticon.com/authors/freepik>`_.\n\n\n==============\nRelease Notes\n==============\n\n2.0.0 (2019-10-03)\n------------------\n\n* First release.\n\n1.0.0 (2014)\n------------------\n\n* A simpler version referenced in Buchner et al. (2014),\n  combining RadFriends with an optional Metropolis-Hastings proposal.", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/JohannesBuchner/ultranest", "keywords": "ultranest", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "ultranest", "package_url": "https://pypi.org/project/ultranest/", "platform": "", "project_url": "https://pypi.org/project/ultranest/", "project_urls": {"Homepage": "https://github.com/JohannesBuchner/ultranest"}, "release_url": "https://pypi.org/project/ultranest/2.1.2/", "requires_dist": null, "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "summary": "Fit and compare complex models reliably and rapidly. Advanced Nested Sampling.", "version": "2.1.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"ultranest\">\n<h2>UltraNest</h2>\n<p>Fit and compare complex models reliably and rapidly with advanced sampling techniques.</p>\n<a href=\"https://pypi.python.org/pypi/ultranest\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/ultranest.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d6252465afa768253972624af535655331540b0f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f756c7472616e6573742e737667\"></a>\n<a href=\"https://circleci.com/gh/JohannesBuchner/UltraNest\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/JohannesBuchner/UltraNest/tree/master.svg?style=shield\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/463d3e4fad226423def2262c8137d41bc70be8b6/68747470733a2f2f636972636c6563692e636f6d2f67682f4a6f68616e6e6573427563686e65722f556c7472614e6573742f747265652f6d61737465722e7376673f7374796c653d736869656c64\"></a>\n<a href=\"https://johannesbuchner.github.io/UltraNest/\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/08330da165179165b580e067e122ae8d26ab1880/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f646f63732d7075626c69736865642d6f6b2e737667\"></a>\n<p>Correctness. Speed. Ease of use. \ud83e\udd94</p>\n<div id=\"about\">\n<h3>About</h3>\n<p>When scientific models are compared to data, two tasks are important:\n1) contraining the model parameters and 2) comparing the model to other models.\nDifferent techniques have been developed to explore model parameter spaces.\nThis package implements a Monte Carlo technique called nested sampling.</p>\n<p><strong>Nested sampling</strong> allows Bayesian inference on arbitrary user-defined likelihoods.\nIn particular, posterior probability distributions on model parameters\nare constructed, and the marginal likelihood (\u201cevidence\u201d) Z is computed.\nThe former can be used to describe the parameter constraints of the data,\nthe latter can be used for model comparison (via <cite>Bayes factors</cite>)\nas a measure of the prediction parsimony of a model.</p>\n<p>In the last decade, multiple variants of nested sampling have been\ndeveloped. These differ in how nested sampling finds better and\nbetter fits while respecting the priors\n(constrained likelihood prior sampling techniques), and whether it is\nallowed to go back to worse fits and explore the parameter space more.</p>\n<p>This package develops novel, advanced techniques for both (See\n<a href=\"https://johannesbuchner.github.io/UltraNest/method.html\" rel=\"nofollow\">How it works</a>).\nThey are especially remarkable for being free of tuning parameters\nand theoretically justified. Beyond that, UltraNest has support for\nBig Data sets and high-performance computing applications.</p>\n<p>UltraNest is intended for fitting complex physical models with slow\nlikelihood evaluations, with one to hundreds of parameters.\nUltraNest intends to replace heuristic methods like multi-ellipsoid\nnested sampling and dynamic nested sampling with more rigorous methods.\nUltraNest also attempts to provide feature parity compared to other packages\n(such as MultiNest).</p>\n<p>You can help by testing UltraNest and reporting issues. Code contributions are welcome.\nSee the <a href=\"https://johannesbuchner.github.io/UltraNest/contributing.html\" rel=\"nofollow\">Contributing page</a>.</p>\n</div>\n<div id=\"features\">\n<h3>Features</h3>\n<ul>\n<li>Pythonic<ul>\n<li>pip installable</li>\n<li>Easy to program for: Sanity checks with meaningful errors</li>\n<li>Can control the run programmatically and check status</li>\n<li>Reasonable defaults, but customizable</li>\n<li>Thoroughly tested with many unit and integration tests</li>\n</ul>\n</li>\n<li>Robust exploration easily handles:<ul>\n<li>Degenerate parameter spaces such as bananas or tight correlations</li>\n<li>Multiple modes/solutions in the parameter space</li>\n<li>Robust, parameter-free MLFriends algorithm\n(metric learning RadFriends, Buchner+14,+19), with new improvements\n(region follows new live points, clustering improves metric iteratively).</li>\n<li>High-dimensional problems with slice sampling (or ellipsoidal sampling, FlatNUTS, etc.),\ninside region.</li>\n<li>Wrapped/circular parameters, derived parameters</li>\n<li>Fast-slow parameters</li>\n</ul>\n</li>\n<li>strategic nested sampling<ul>\n<li>can vary (increase) number of live points (akin to dynamic nested sampling, but with different targets)</li>\n<li>can sample clusters optimally (e.g., at least 50 points per cluster/mode/solution)</li>\n<li>can target minimizing parameter estimation uncertainties</li>\n<li>can target a desired evidence uncertainty threshold</li>\n<li>can target a desired number of effective samples</li>\n<li>or any combination of the above</li>\n<li>Robust ln(Z) uncertainties by bootstrapping live points.</li>\n</ul>\n</li>\n<li>Lightweight and fast<ul>\n<li>some functions implemented in Cython</li>\n<li>vectorized likelihood function calls</li>\n<li>Use multiple cores, fully parallelizable from laptops to clusters</li>\n<li>MPI support</li>\n</ul>\n</li>\n<li>Advanced visualisation and crash recovery:<ul>\n<li>Checkpointing and resuming, even with different number of live points</li>\n<li>Run-time visualisations and exploration information</li>\n<li>Corner plots, run and parameter exploration diagnostic plots</li>\n</ul>\n</li>\n</ul>\n<div id=\"todo\">\n<h4>TODO</h4>\n<ul>\n<li>Documentation:<ul>\n<li>Example power law fit</li>\n<li>Example spectral line fit, white and GP</li>\n<li>Example low-d Bayesian GP emulator as pre-filter to model evaluation</li>\n<li>Example verifying integration with VB+IS</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"usage\">\n<h4>Usage</h4>\n<p>Read the full documentation at:</p>\n<p><a href=\"https://johannesbuchner.github.io/UltraNest/\" rel=\"nofollow\">https://johannesbuchner.github.io/UltraNest/</a></p>\n</div>\n<div id=\"licence\">\n<h4>Licence</h4>\n<p>GPLv3 (see LICENCE file). If you require another license, please contact me.</p>\n<p>Icon made by <a href=\"https://www.flaticon.com/authors/freepik\" rel=\"nofollow\">Freepik</a>.</p>\n</div>\n</div>\n</div>\n<div id=\"release-notes\">\n<h2>Release Notes</h2>\n<div id=\"id1\">\n<h3>2.0.0 (2019-10-03)</h3>\n<ul>\n<li>First release.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.0 (2014)</h3>\n<ul>\n<li>A simpler version referenced in Buchner et al. (2014),\ncombining RadFriends with an optional Metropolis-Hastings proposal.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6990384, "releases": {"2.0.0": [{"comment_text": "", "digests": {"md5": "94dfed68d1b0be4f07c38bfdbb3599d6", "sha256": "ffa10ad7f066d1263ff6bdfaa170cc0370a2d6d61415c5ab35bd48555e77bff5"}, "downloads": -1, "filename": "ultranest-2.0.0-py3.6-linux-x86_64.egg", "has_sig": true, "md5_digest": "94dfed68d1b0be4f07c38bfdbb3599d6", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 681008, "upload_time": "2019-10-14T09:50:41", "upload_time_iso_8601": "2019-10-14T09:50:41.654848Z", "url": "https://files.pythonhosted.org/packages/4b/e6/136d316c39d9fedac37231b9fc5e1f97ea30115a593b31e4f8ea62da57d6/ultranest-2.0.0-py3.6-linux-x86_64.egg", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae80ad7b892c9776837ac151811295aa", "sha256": "aaad99491fe306bc30b946d6b0946ea39a27948ddc029356da6a81dd405ef034"}, "downloads": -1, "filename": "ultranest-2.0.0.tar.gz", "has_sig": true, "md5_digest": "ae80ad7b892c9776837ac151811295aa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 20769318, "upload_time": "2019-10-14T09:50:49", "upload_time_iso_8601": "2019-10-14T09:50:49.020006Z", "url": "https://files.pythonhosted.org/packages/43/5f/ee5ab50d1daa9450927642e856ae0972be3b6d71d4b73d290d25646cd029/ultranest-2.0.0.tar.gz", "yanked": false}], "2.0.2": [{"comment_text": "", "digests": {"md5": "51620e9ca10c01f11c5d7efd66c50cd5", "sha256": "ad8b526f8f6fed9e57aca46cd8b1469ce270e64aef631568458f91663abbb031"}, "downloads": -1, "filename": "ultranest-2.0.2.tar.gz", "has_sig": true, "md5_digest": "51620e9ca10c01f11c5d7efd66c50cd5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20769713, "upload_time": "2019-11-25T20:44:18", "upload_time_iso_8601": "2019-11-25T20:44:18.056840Z", "url": "https://files.pythonhosted.org/packages/c4/c4/b05c94b4b17656ceff6d11a3a870e948258e9b41b639d5ebd89604f61f1e/ultranest-2.0.2.tar.gz", "yanked": false}], "2.0.3": [{"comment_text": "", "digests": {"md5": "8ee8e8b6327958ce62a1b46b0ead6ae8", "sha256": "80034f105d7485f8900c3f90f0bcf4ab832c36945209b355aa4969cc60494962"}, "downloads": -1, "filename": "ultranest-2.0.3.tar.gz", "has_sig": true, "md5_digest": "8ee8e8b6327958ce62a1b46b0ead6ae8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20776068, "upload_time": "2020-01-01T08:08:10", "upload_time_iso_8601": "2020-01-01T08:08:10.974546Z", "url": "https://files.pythonhosted.org/packages/e2/cb/532374fbdf71527e31c56fa59eeae93d4a21f4b78d5b2a08524df0f29ef2/ultranest-2.0.3.tar.gz", "yanked": false}], "2.0.4": [{"comment_text": "", "digests": {"md5": "52550fc604c18abc2cf82bd9985023fb", "sha256": "ab90cb449699782cd8d9af19633c2b7627b508a54e16705862fc3e3615aee545"}, "downloads": -1, "filename": "ultranest-2.0.4.tar.gz", "has_sig": true, "md5_digest": "52550fc604c18abc2cf82bd9985023fb", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20732498, "upload_time": "2020-01-30T17:26:21", "upload_time_iso_8601": "2020-01-30T17:26:21.200844Z", "url": "https://files.pythonhosted.org/packages/9d/f0/2d6363208aab475113799aea24a93f82d5033eceed801c87c6178003c207/ultranest-2.0.4.tar.gz", "yanked": false}], "2.1.0": [{"comment_text": "", "digests": {"md5": "d46a62fb5c4f3afeb664b21f21adcd64", "sha256": "602fa94bf7e1ef48458780f0c5d6cbcd1cbefa518df230f47d9e70a6da05a1e3"}, "downloads": -1, "filename": "ultranest-2.1.0.tar.gz", "has_sig": true, "md5_digest": "d46a62fb5c4f3afeb664b21f21adcd64", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20746214, "upload_time": "2020-02-07T15:57:05", "upload_time_iso_8601": "2020-02-07T15:57:05.072869Z", "url": "https://files.pythonhosted.org/packages/55/54/e3cfd1f36e4c87789b7735781be915921439558b1e3133198e008f7fd1bb/ultranest-2.1.0.tar.gz", "yanked": false}], "2.1.1": [{"comment_text": "", "digests": {"md5": "a14e8aa752e8bc5832be48808843e177", "sha256": "3275155048ed0670d71cf3792519912a0cc956ea57f4f638229a1a6fab40fc4b"}, "downloads": -1, "filename": "ultranest-2.1.1.tar.gz", "has_sig": true, "md5_digest": "a14e8aa752e8bc5832be48808843e177", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20685708, "upload_time": "2020-03-29T17:32:23", "upload_time_iso_8601": "2020-03-29T17:32:23.978861Z", "url": "https://files.pythonhosted.org/packages/9a/63/3bc78139ccac152fd74c3152bb16f9aec6e14edf30790b6ebf8bdd667fa3/ultranest-2.1.1.tar.gz", "yanked": false}], "2.1.2": [{"comment_text": "", "digests": {"md5": "cb413831bbd5ebfc797bf0dcb23d290d", "sha256": "7509f18f88d9c097b431e5349166d2d49467da26ce701626b3c143ecd60bea5d"}, "downloads": -1, "filename": "ultranest-2.1.2.tar.gz", "has_sig": true, "md5_digest": "cb413831bbd5ebfc797bf0dcb23d290d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20697072, "upload_time": "2020-04-10T02:51:11", "upload_time_iso_8601": "2020-04-10T02:51:11.750049Z", "url": "https://files.pythonhosted.org/packages/d8/af/a2b8ab79d0efa267cf65ef934f7663818db034fddbe65b691a6aea70c06b/ultranest-2.1.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cb413831bbd5ebfc797bf0dcb23d290d", "sha256": "7509f18f88d9c097b431e5349166d2d49467da26ce701626b3c143ecd60bea5d"}, "downloads": -1, "filename": "ultranest-2.1.2.tar.gz", "has_sig": true, "md5_digest": "cb413831bbd5ebfc797bf0dcb23d290d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7, !=3.0.*, !=3.1.*, !=3.2.*, !=3.3.*, !=3.4.*", "size": 20697072, "upload_time": "2020-04-10T02:51:11", "upload_time_iso_8601": "2020-04-10T02:51:11.750049Z", "url": "https://files.pythonhosted.org/packages/d8/af/a2b8ab79d0efa267cf65ef934f7663818db034fddbe65b691a6aea70c06b/ultranest-2.1.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:41:07 2020"}