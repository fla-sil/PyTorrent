{"info": {"author": "Ellison Le\u00e3o", "author_email": "ellisonleao@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7"], "description": "pyzeef\n======\n\n[![Code Health](https://landscape.io/github/ellisonleao/pyzeef/master/landscape.svg?style=flat)](https://landscape.io/github/ellisonleao/pyzeef/master)\n[![Build Status](https://travis-ci.org/ellisonleao/pyzeef.svg?branch=master)](https://travis-ci.org/ellisonleao/pyzeef)\n\nWelcome to the Python Zeef API lib.\n\n# Table of contents\n\n- [Installing](#installing)\n- [Basic Usage](#basic-usage)\n- [The Zeef Class](#the-zeef-class)\n- [The Page Class](#the-page-class)\n- [The Block Class](#the-block-class)\n- [The Link Class](#the-link-class)\n\n\n## Installing\n\nUsing pip:\n\n```\npip install pyzeef\n```\n\nor cloning installing the current build\n```\n\tgit clone https://github.com/ellisonleao/pyzeef.git\n\tcd pyzeef\n\tpython setup.py develop\n```\nI strong recommend using a virtualenv before installing any of the methods above.\n\n## [Basic Usage](#basic-usage)\n\nBefore get things started, you will need a ZEEF Token in order to use the lib.\nTo generate a new token, please [go here](https://zeef.com/dashboard/user/profile/tokens)\n\nAfter generating your token:\n\nfrom pyzeef import Zeef\n\n```python\n\tz = Zeef('YOUR-TOKEN')\n\tprint z.pages\n\t# Output\n\t[\n\t\t<Page ID>,\n\t\t...\n\t]\n```\n\n### [The ZEEF Class](#zeef-class)\n\n## `Zeef(token, persist_pages=True, get_scratchpad=True)`\n\nWhen instantiating a new Zeef class all of your pages and the scratchpad will also be persisted by default. If you don't want to fetch the pages and/or the scratchpad you can pass `persist_pages` and `get_scratchpad` kwargs when creating the new class\n\n#### Methods\n\n#### `authorize(token=None, persist_pages=True)`\n\nThat method will be called on the object creation if `persist_pages=True`. It will authorize and persist your token through all the API requests and also fetch/persist your ZEEF pages. You can also pass a new\ntoken when instantiating the class. That token will be persisted to be used on the future requests.\n\n#### `get_page(page_id=int, alias=string, username=string)`\n\nYou can fetch a page by passing the `page_id` or passing both `alias` and `username`\nThis wil return a [Page](#page) class.\n\n\n### `get_block(block_id)`\n\nThis will return a [Block](#block) class object, if any block is found with the `block_id` provided.\n\n### `get_link(link_id)`\n\nThis will return a [Link](#link) class objects, if any link is found with the `link_id` provided.\n\n### `create_page(name, language='en', type=['SUBJECT', 'COMPANY', 'PERSONAL'])`\n\nQuick method to create a new page, given the name, language and the type. This will return a Page instance with the new page information.\n\n### Main properties\n\n- `page` - This will return the fetched pages list, as [Page](#page) objects.\n\n### [The Page Class](#page)\n\nWhen fetching the pages, there is a helper class which can help you make Zeef Page CRUD operations.\n\n#### Methods\n\n#### `update(type=['SUBJECT', 'COMPANY'], description='your description')`\n\nUpdates the current page. Both fields are optional.\n\n### `to_markdown()`\n\nThis will output your ZEEF page in a markdown format.\n\n### Main Properties\n\n- `blocks` - A page can contain multiple blocks. When retrieving a page, the blocks property will return a list of [Block](#block) objects to help on block API operations.\n- `title` - Page's title.\n\n### [The Block Class](#block-class)\n\n### Methods\n\n### `update(data)`\n\nUpdates the current block with given data dict. `data` keys can be:\n\n- `title` - String\n- `promoted` - Boolean\n- `publicly_visible` - Boolean\n\nFor `link` type blocks, we can add:\n\n- `description` - String\n\nFor `feed` type `blocks`, we can add:\n\n- `feed_url` - URL String\n- `max_links` - Integer\n- `refresh_minutes` - Integer\n\n\n### `delete()`\n\nDeletes the block from the Page\n\n### Main Properties\n\n- `links` - A list of [Link](#link) objects to help links API operations\n- `title` - Block's title\n- `type` - Block's type\n\n### [The Link Class](#link-class)\n\n### Methods\n\n### `update(link='http://mylink.com', description='text', title='title')`\n\nUpdates the current link with the provided kwargs.\n\n### `delete()`\n\nDeletes the link\n\n### Main Properties\n\n- `title` - Link's title\n- `url` - Link's URL", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/ellisonleao/pyzeef", "keywords": "pyzeef", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "pyzeef", "package_url": "https://pypi.org/project/pyzeef/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/pyzeef/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/ellisonleao/pyzeef"}, "release_url": "https://pypi.org/project/pyzeef/0.1.3/", "requires_dist": null, "requires_python": null, "summary": "Python ZEEF API handler", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            pyzeef<br>======<br><br>[![Code Health](https://landscape.io/github/ellisonleao/pyzeef/master/landscape.svg?style=flat)](https://landscape.io/github/ellisonleao/pyzeef/master)<br>[![Build Status](https://travis-ci.org/ellisonleao/pyzeef.svg?branch=master)](https://travis-ci.org/ellisonleao/pyzeef)<br><br>Welcome to the Python Zeef API lib.<br><br># Table of contents<br><br>- [Installing](#installing)<br>- [Basic Usage](#basic-usage)<br>- [The Zeef Class](#the-zeef-class)<br>- [The Page Class](#the-page-class)<br>- [The Block Class](#the-block-class)<br>- [The Link Class](#the-link-class)<br><br><br>## Installing<br><br>Using pip:<br><br>```<br>pip install pyzeef<br>```<br><br>or cloning installing the current build<br>```<br>\tgit clone https://github.com/ellisonleao/pyzeef.git<br>\tcd pyzeef<br>\tpython setup.py develop<br>```<br>I strong recommend using a virtualenv before installing any of the methods above.<br><br>## [Basic Usage](#basic-usage)<br><br>Before get things started, you will need a ZEEF Token in order to use the lib.<br>To generate a new token, please [go here](https://zeef.com/dashboard/user/profile/tokens)<br><br>After generating your token:<br><br>from pyzeef import Zeef<br><br>```python<br>\tz = Zeef('YOUR-TOKEN')<br>\tprint z.pages<br>\t# Output<br>\t[<br>\t\t&lt;Page ID&gt;,<br>\t\t...<br>\t]<br>```<br><br>### [The ZEEF Class](#zeef-class)<br><br>## `Zeef(token, persist_pages=True, get_scratchpad=True)`<br><br>When instantiating a new Zeef class all of your pages and the scratchpad will also be persisted by default. If you don't want to fetch the pages and/or the scratchpad you can pass `persist_pages` and `get_scratchpad` kwargs when creating the new class<br><br>#### Methods<br><br>#### `authorize(token=None, persist_pages=True)`<br><br>That method will be called on the object creation if `persist_pages=True`. It will authorize and persist your token through all the API requests and also fetch/persist your ZEEF pages. You can also pass a new<br>token when instantiating the class. That token will be persisted to be used on the future requests.<br><br>#### `get_page(page_id=int, alias=string, username=string)`<br><br>You can fetch a page by passing the `page_id` or passing both `alias` and `username`<br>This wil return a [Page](#page) class.<br><br><br>### `get_block(block_id)`<br><br>This will return a [Block](#block) class object, if any block is found with the `block_id` provided.<br><br>### `get_link(link_id)`<br><br>This will return a [Link](#link) class objects, if any link is found with the `link_id` provided.<br><br>### `create_page(name, language='en', type=['SUBJECT', 'COMPANY', 'PERSONAL'])`<br><br>Quick method to create a new page, given the name, language and the type. This will return a Page instance with the new page information.<br><br>### Main properties<br><br>- `page` - This will return the fetched pages list, as [Page](#page) objects.<br><br>### [The Page Class](#page)<br><br>When fetching the pages, there is a helper class which can help you make Zeef Page CRUD operations.<br><br>#### Methods<br><br>#### `update(type=['SUBJECT', 'COMPANY'], description='your description')`<br><br>Updates the current page. Both fields are optional.<br><br>### `to_markdown()`<br><br>This will output your ZEEF page in a markdown format.<br><br>### Main Properties<br><br>- `blocks` - A page can contain multiple blocks. When retrieving a page, the blocks property will return a list of [Block](#block) objects to help on block API operations.<br>- `title` - Page's title.<br><br>### [The Block Class](#block-class)<br><br>### Methods<br><br>### `update(data)`<br><br>Updates the current block with given data dict. `data` keys can be:<br><br>- `title` - String<br>- `promoted` - Boolean<br>- `publicly_visible` - Boolean<br><br>For `link` type blocks, we can add:<br><br>- `description` - String<br><br>For `feed` type `blocks`, we can add:<br><br>- `feed_url` - URL String<br>- `max_links` - Integer<br>- `refresh_minutes` - Integer<br><br><br>### `delete()`<br><br>Deletes the block from the Page<br><br>### Main Properties<br><br>- `links` - A list of [Link](#link) objects to help links API operations<br>- `title` - Block's title<br>- `type` - Block's type<br><br>### [The Link Class](#link-class)<br><br>### Methods<br><br>### `update(link='http://mylink.com', description='text', title='title')`<br><br>Updates the current link with the provided kwargs.<br><br>### `delete()`<br><br>Deletes the link<br><br>### Main Properties<br><br>- `title` - Link's title<br>- `url` - Link's URL\n          </div>"}, "last_serial": 1580517, "releases": {"0.1.1": [{"comment_text": "", "digests": {"md5": "fbfd8403adb9f7be5707808a4265a486", "sha256": "ac26425ac712e901ccf54fa5c6ba5342cdaf14322317ed616c0603d650133566"}, "downloads": -1, "filename": "pyzeef-0.1.1.zip", "has_sig": false, "md5_digest": "fbfd8403adb9f7be5707808a4265a486", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17306, "upload_time": "2015-06-05T02:25:01", "upload_time_iso_8601": "2015-06-05T02:25:01.643031Z", "url": "https://files.pythonhosted.org/packages/5e/02/5908374ae229de66a04287322e17af3e773b04003aa9ed03e1669e34d79a/pyzeef-0.1.1.zip", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "48ee4c950151d5fe74213abcedf29eee", "sha256": "465e7d41643aeb65865927b791f77976ec1221a4bcaef7ca90b5b1db7cc9be3b"}, "downloads": -1, "filename": "pyzeef-0.1.2.tar.gz", "has_sig": false, "md5_digest": "48ee4c950151d5fe74213abcedf29eee", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10761, "upload_time": "2015-06-05T17:41:34", "upload_time_iso_8601": "2015-06-05T17:41:34.154192Z", "url": "https://files.pythonhosted.org/packages/fe/e5/a2a31d6be94df3d21c104cfe98f7a91536f9da4a48e1e138156cb8b3e441/pyzeef-0.1.2.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "b723774500aeccd7e4defa79f4fcc7e9", "sha256": "6554b5d3348fc321094bfef6b19a47236a7e5ddf6f1b04adaba7e00a3e738c59"}, "downloads": -1, "filename": "pyzeef-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b723774500aeccd7e4defa79f4fcc7e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10989, "upload_time": "2015-06-05T21:31:06", "upload_time_iso_8601": "2015-06-05T21:31:06.615020Z", "url": "https://files.pythonhosted.org/packages/cf/2f/af0ff1cf2ea3a8db9317af7e5e21eddf61ac1800f6039580001380f08951/pyzeef-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b723774500aeccd7e4defa79f4fcc7e9", "sha256": "6554b5d3348fc321094bfef6b19a47236a7e5ddf6f1b04adaba7e00a3e738c59"}, "downloads": -1, "filename": "pyzeef-0.1.3.tar.gz", "has_sig": false, "md5_digest": "b723774500aeccd7e4defa79f4fcc7e9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10989, "upload_time": "2015-06-05T21:31:06", "upload_time_iso_8601": "2015-06-05T21:31:06.615020Z", "url": "https://files.pythonhosted.org/packages/cf/2f/af0ff1cf2ea3a8db9317af7e5e21eddf61ac1800f6039580001380f08951/pyzeef-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:10:40 2020"}