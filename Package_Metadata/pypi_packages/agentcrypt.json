{"info": {"author": "Dirk Heuvels", "author_email": "coding@heuvels.de", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "==========\nReadme\n==========\n\nAbstract\n========\n\nYet another implementation of the idea, to use the SSH agent for symmetric encryption.\nThis time for Python (2+3).\n\nLoad a key and make an SSH connection with agent-forwarding:\n\n.. code-block:: bash\n\n    local-machine ~ % ssh-add\n    local-machine ~ % ssh -A remote-machine\n\nCreate some `agentcrypt` enabled scripts on the remote host:\n\n.. code-block:: python\n\n    remote-machine ~ % cat << '_EOF_' > encryptor.py\n    import sys\n    from agentcrypt.io import Container\n    with Container.create(sys.stdout) as cntr:\n      for line in sys.stdin:\n        cntr.write(line)\n    _EOF_\n\n    remote-machine ~ % cat << '_EOF_' > decryptor.py\n    import sys\n    from agentcrypt.io import Container\n    with Container.load(sys.stdin) as cntr:\n        print(cntr.getvalue().decode())\n    _EOF_\n\nUse the newly created scripts with keys from the local `ssh-agent`:\n\n.. code-block:: bash\n\n    remote-machine ~ % echo \"secret data\" |python encryptor.py > hushhush.dat\n    remote-machine ~ % python decryptor.py < hushhush.dat\n    secret data\n\nOr via the ``main`` guard of the package:\n\n.. code-block:: bash\n\n    remote-machine ~ % echo \"secret data\" |python -magentcrypt.io enc > hushhush.dat\n    remote-machine ~ % python -magentcrypt.io dec < hushhush.dat\n    secret data\n\n\nMotivation\n==========\n\n- Provide a convenient (passwordless) way of encrypting sensitive data for Python.\n- Profit from the fact that agent-forwarding makes SSH keys available on remote servers.\n\nAlternatives\n============\n\n- https://github.com/edwardspeyer/sshovel - Python\n- https://github.com/is/sshcrypt - Go\n- https://github.com/jwhitham/safeu - C (not sure if it uses the signature as keys too)\n\nWhy another implementation?\n  The ones I found on GitHub are either not Python or they rely on calls to external programs.\n  I wanted a pure Python library, that runs with Versions 2.7 and 3.x.\n\nDocumentation\n=============\n\n`API Documentation`_\n\n.. _`API Documentation`: https://code.heuvels.de/agentcrypt\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/dheuvels/agentcrypt/archive/v0.5.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dheuvels/agentcrypt", "keywords": "agentcrypt", "license": "GNU General Public License v3", "maintainer": "", "maintainer_email": "", "name": "agentcrypt", "package_url": "https://pypi.org/project/agentcrypt/", "platform": "", "project_url": "https://pypi.org/project/agentcrypt/", "project_urls": {"Download": "https://github.com/dheuvels/agentcrypt/archive/v0.5.tar.gz", "Homepage": "https://github.com/dheuvels/agentcrypt"}, "release_url": "https://pypi.org/project/agentcrypt/0.5/", "requires_dist": ["PyYAML", "cryptography", "future", "future", "paramiko"], "requires_python": "", "summary": "Symmetric encryption using the ssh-agent", "version": "0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"abstract\">\n<h2>Abstract</h2>\n<p>Yet another implementation of the idea, to use the SSH agent for symmetric encryption.\nThis time for Python (2+3).</p>\n<p>Load a key and make an SSH connection with agent-forwarding:</p>\n<pre>local-machine ~ % ssh-add\nlocal-machine ~ % ssh -A remote-machine\n</pre>\n<p>Create some <cite>agentcrypt</cite> enabled scripts on the remote host:</p>\n<pre><span class=\"n\">remote</span><span class=\"o\">-</span><span class=\"n\">machine</span> <span class=\"o\">~</span> <span class=\"o\">%</span> <span class=\"n\">cat</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s1\">'_EOF_'</span> <span class=\"o\">&gt;</span> <span class=\"n\">encryptor</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">agentcrypt.io</span> <span class=\"kn\">import</span> <span class=\"n\">Container</span>\n<span class=\"k\">with</span> <span class=\"n\">Container</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdout</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">cntr</span><span class=\"p\">:</span>\n  <span class=\"k\">for</span> <span class=\"n\">line</span> <span class=\"ow\">in</span> <span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdin</span><span class=\"p\">:</span>\n    <span class=\"n\">cntr</span><span class=\"o\">.</span><span class=\"n\">write</span><span class=\"p\">(</span><span class=\"n\">line</span><span class=\"p\">)</span>\n<span class=\"n\">_EOF_</span>\n\n<span class=\"n\">remote</span><span class=\"o\">-</span><span class=\"n\">machine</span> <span class=\"o\">~</span> <span class=\"o\">%</span> <span class=\"n\">cat</span> <span class=\"o\">&lt;&lt;</span> <span class=\"s1\">'_EOF_'</span> <span class=\"o\">&gt;</span> <span class=\"n\">decryptor</span><span class=\"o\">.</span><span class=\"n\">py</span>\n<span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">agentcrypt.io</span> <span class=\"kn\">import</span> <span class=\"n\">Container</span>\n<span class=\"k\">with</span> <span class=\"n\">Container</span><span class=\"o\">.</span><span class=\"n\">load</span><span class=\"p\">(</span><span class=\"n\">sys</span><span class=\"o\">.</span><span class=\"n\">stdin</span><span class=\"p\">)</span> <span class=\"k\">as</span> <span class=\"n\">cntr</span><span class=\"p\">:</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">cntr</span><span class=\"o\">.</span><span class=\"n\">getvalue</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">decode</span><span class=\"p\">())</span>\n<span class=\"n\">_EOF_</span>\n</pre>\n<p>Use the newly created scripts with keys from the local <cite>ssh-agent</cite>:</p>\n<pre>remote-machine ~ % <span class=\"nb\">echo</span> <span class=\"s2\">\"secret data\"</span> <span class=\"p\">|</span>python encryptor.py &gt; hushhush.dat\nremote-machine ~ % python decryptor.py &lt; hushhush.dat\nsecret data\n</pre>\n<p>Or via the <tt>main</tt> guard of the package:</p>\n<pre>remote-machine ~ % <span class=\"nb\">echo</span> <span class=\"s2\">\"secret data\"</span> <span class=\"p\">|</span>python -magentcrypt.io enc &gt; hushhush.dat\nremote-machine ~ % python -magentcrypt.io dec &lt; hushhush.dat\nsecret data\n</pre>\n</div>\n<div id=\"motivation\">\n<h2>Motivation</h2>\n<ul>\n<li>Provide a convenient (passwordless) way of encrypting sensitive data for Python.</li>\n<li>Profit from the fact that agent-forwarding makes SSH keys available on remote servers.</li>\n</ul>\n</div>\n<div id=\"alternatives\">\n<h2>Alternatives</h2>\n<ul>\n<li><a href=\"https://github.com/edwardspeyer/sshovel\" rel=\"nofollow\">https://github.com/edwardspeyer/sshovel</a> - Python</li>\n<li><a href=\"https://github.com/is/sshcrypt\" rel=\"nofollow\">https://github.com/is/sshcrypt</a> - Go</li>\n<li><a href=\"https://github.com/jwhitham/safeu\" rel=\"nofollow\">https://github.com/jwhitham/safeu</a> - C (not sure if it uses the signature as keys too)</li>\n</ul>\n<dl>\n<dt>Why another implementation?</dt>\n<dd>The ones I found on GitHub are either not Python or they rely on calls to external programs.\nI wanted a pure Python library, that runs with Versions 2.7 and 3.x.</dd>\n</dl>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p><a href=\"https://code.heuvels.de/agentcrypt\" rel=\"nofollow\">API Documentation</a></p>\n</div>\n\n          </div>"}, "last_serial": 5800945, "releases": {"0.5": [{"comment_text": "", "digests": {"md5": "ce6d892280ccc2552067a70f2875bdbb", "sha256": "e6c4b53c3322ff799f9db0c832d8a3d805d23102f505e8b1f0508f7ad14a0354"}, "downloads": -1, "filename": "agentcrypt-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "ce6d892280ccc2552067a70f2875bdbb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12346, "upload_time": "2019-09-08T22:41:07", "upload_time_iso_8601": "2019-09-08T22:41:07.130785Z", "url": "https://files.pythonhosted.org/packages/67/9f/6128ce6729049a3990ad78ff5d31ca40f36b52bdd04804b316f152dfc122/agentcrypt-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da3b4501597bf0951cf2ed18213b72f7", "sha256": "abf06f2c77377b5aaadd38de845c5abd61241909d52dd02a5aae85bc953155c8"}, "downloads": -1, "filename": "agentcrypt-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "da3b4501597bf0951cf2ed18213b72f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15680, "upload_time": "2019-09-08T22:41:09", "upload_time_iso_8601": "2019-09-08T22:41:09.670386Z", "url": "https://files.pythonhosted.org/packages/e6/8e/679b31be0d21f05dfcd9e8d85858bb84b3512811abb383faaeba327fa11b/agentcrypt-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b5a75783f3b772ee0fa537f891d2926", "sha256": "e9000d95c169d71083112b0cd43b89345642c095d2ad03e0fa8ff7a9f27ff87f"}, "downloads": -1, "filename": "agentcrypt-0.5.tar.gz", "has_sig": false, "md5_digest": "9b5a75783f3b772ee0fa537f891d2926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13134, "upload_time": "2019-09-08T22:41:11", "upload_time_iso_8601": "2019-09-08T22:41:11.412100Z", "url": "https://files.pythonhosted.org/packages/1c/d1/ee380716f59738af96ba1e13f53dbb27bdd89a1cd2bdbd6de46891b2d848/agentcrypt-0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "ce6d892280ccc2552067a70f2875bdbb", "sha256": "e6c4b53c3322ff799f9db0c832d8a3d805d23102f505e8b1f0508f7ad14a0354"}, "downloads": -1, "filename": "agentcrypt-0.5-py2-none-any.whl", "has_sig": false, "md5_digest": "ce6d892280ccc2552067a70f2875bdbb", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 12346, "upload_time": "2019-09-08T22:41:07", "upload_time_iso_8601": "2019-09-08T22:41:07.130785Z", "url": "https://files.pythonhosted.org/packages/67/9f/6128ce6729049a3990ad78ff5d31ca40f36b52bdd04804b316f152dfc122/agentcrypt-0.5-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da3b4501597bf0951cf2ed18213b72f7", "sha256": "abf06f2c77377b5aaadd38de845c5abd61241909d52dd02a5aae85bc953155c8"}, "downloads": -1, "filename": "agentcrypt-0.5-py3-none-any.whl", "has_sig": false, "md5_digest": "da3b4501597bf0951cf2ed18213b72f7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 15680, "upload_time": "2019-09-08T22:41:09", "upload_time_iso_8601": "2019-09-08T22:41:09.670386Z", "url": "https://files.pythonhosted.org/packages/e6/8e/679b31be0d21f05dfcd9e8d85858bb84b3512811abb383faaeba327fa11b/agentcrypt-0.5-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9b5a75783f3b772ee0fa537f891d2926", "sha256": "e9000d95c169d71083112b0cd43b89345642c095d2ad03e0fa8ff7a9f27ff87f"}, "downloads": -1, "filename": "agentcrypt-0.5.tar.gz", "has_sig": false, "md5_digest": "9b5a75783f3b772ee0fa537f891d2926", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13134, "upload_time": "2019-09-08T22:41:11", "upload_time_iso_8601": "2019-09-08T22:41:11.412100Z", "url": "https://files.pythonhosted.org/packages/1c/d1/ee380716f59738af96ba1e13f53dbb27bdd89a1cd2bdbd6de46891b2d848/agentcrypt-0.5.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:22:34 2020"}