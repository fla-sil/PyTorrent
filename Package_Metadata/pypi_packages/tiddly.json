{"info": {"author": "Prahlad Yeri", "author_email": "prahladyeri14@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable"], "description": "`tiddly` is a minimal, prototype RESTful server app for basic CRUD transactions. It is database agnostic and uses `sqlalchemy` on the backend to talk to RDBMS. The database is `sqlite` by default, but you can switch to anything you want by making this small change in the `models.py` file:\r\n\r\n\t#TODO: Change as needed:\r\n\tengine = create_engine(\"sqlite:///tiddly.db\", echo=True)\r\n\tBase = declarative_base()\r\n\r\nYou can host this app and use it as your own replacement for any cloud based backend such as `firebase` or `CouchDB` as long as you follow the CRUD based I/O approach. The RESTful methods are versatile and compatible with the data needs of typical Single Page Apps developed in frameworks like `angular`, `backbone` or `ember`. For example:\r\n\r\n| Request | url | body | Action |\r\n| ----- | ----- | ----- | ----- |\r\n| GET  \t| /books | \t\t| Get all rows from the books table.| \r\n| GET  \t| /books/1 | \t\t| Fetch the book record where the `id` field equals `1`.| \r\n| POST \t| /books | {\"name\":\"Harry Potter and the order of the Phoenix.\"}\t\t| Insert record into books table from posted JSON data.| \r\n| PUT  \t| /books/1 | {\"name\":\"Some new title.\"}\t\t| Update the record where `id` equals `1` with posted JSON data.| \r\n| DELETE | /books/1 |\t| Delete the record where `id` equals `1`.|", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/prahladyeri/tiddly", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://prahladyeri.github.io/flask-tiddly", "keywords": "flask rest server sqlalchemy", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "tiddly", "package_url": "https://pypi.org/project/tiddly/", "platform": "Linux, Windows, Mac", "project_url": "https://pypi.org/project/tiddly/", "project_urls": {"Download": "https://github.com/prahladyeri/tiddly", "Homepage": "https://prahladyeri.github.io/flask-tiddly"}, "release_url": "https://pypi.org/project/tiddly/1.0.11/", "requires_dist": null, "requires_python": null, "summary": "Flask-Tiddly is a minimal, prototype RESTful server for basic CRUD transactions.", "version": "1.0.11", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><cite>tiddly</cite> is a minimal, prototype RESTful server app for basic CRUD transactions. It is database agnostic and uses <cite>sqlalchemy</cite> on the backend to talk to RDBMS. The database is <cite>sqlite</cite> by default, but you can switch to anything you want by making this small change in the <cite>models.py</cite> file:</p>\n<blockquote>\n#TODO: Change as needed:\nengine = create_engine(\u201csqlite:///tiddly.db\u201d, echo=True)\nBase = declarative_base()</blockquote>\n<p>You can host this app and use it as your own replacement for any cloud based backend such as <cite>firebase</cite> or <cite>CouchDB</cite> as long as you follow the CRUD based I/O approach. The RESTful methods are versatile and compatible with the data needs of typical Single Page Apps developed in frameworks like <cite>angular</cite>, <cite>backbone</cite> or <cite>ember</cite>. For example:</p>\n<div>\n<div>Request | url | body | Action |</div>\n<div>\u2014\u2013 | \u2014\u2013 | \u2014\u2013 | \u2014\u2013 |</div>\n<div>GET   | /books |              | Get all rows from the books table.|</div>\n<div>GET   | /books/1 |            | Fetch the book record where the <cite>id</cite> field equals <cite>1</cite>.|</div>\n<div>POST  | /books | {\u201cname\u201d:\u201dHarry Potter and the order of the Phoenix.\u201d}                | Insert record into books table from posted JSON data.|</div>\n<div>PUT   | /books/1 | {\u201cname\u201d:\u201dSome new title.\u201d}         | Update the record where <cite>id</cite> equals <cite>1</cite> with posted JSON data.|</div>\n<div>DELETE | /books/1 |   | Delete the record where <cite>id</cite> equals <cite>1</cite>.|</div>\n</div>\n\n          </div>"}, "last_serial": 2962159, "releases": {"1.0.11": [], "1.0.6": [{"comment_text": "", "digests": {"md5": "41f558d7904ecb6478e9d2f18d301f84", "sha256": "827e739d8619e68e70ab38847114958c83a5782ff71da032516bcfe73c3fb6a1"}, "downloads": -1, "filename": "tiddly-1.0.11.tar.gz", "has_sig": false, "md5_digest": "41f558d7904ecb6478e9d2f18d301f84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3818, "upload_time": "2017-06-20T13:08:41", "upload_time_iso_8601": "2017-06-20T13:08:41.197789Z", "url": "https://files.pythonhosted.org/packages/fa/b2/9566b81fade0dd0e8092f329f5caadba5ce685f618573cf8b56089a13579/tiddly-1.0.11.tar.gz", "yanked": false}]}, "urls": [], "timestamp": "Fri May  8 02:53:28 2020"}