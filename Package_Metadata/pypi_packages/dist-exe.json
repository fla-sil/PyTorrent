{"info": {"author": "Geoffrey Lentner", "author_email": "<glentner@purdue.edu>", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 3.7"], "description": "Distributed Executor\n====================\n\n[![GitHub License](http://img.shields.io/badge/license-Apache-blue.svg?style=flat)](https://www.apache.org/licenses/LICENSE-2.0)\n[![Python Version](http://img.shields.io/badge/python-3.7-orange.svg?style=flat)](https://docs.python.org/3.7)\n\nA cross-platform reference implementation for processing shell commands over\na distributed, asynchronous queue. `dist_exe` is a single producer\n(server) many consumer (client) system. It functions similar to *GNU Parallel*\nbut scales out to many servers and even across operating systems.\n\nThis tool uses only standard library methods so there are no dependencies.\nIt has been tested on Linux, macOS, and Windows 10 in Python 3.7 environments.\nThe server and clients don't even need to be using the same platform.\n\n\nInstallation\n------------\n\n```\npip install dist_exe [--upgrade] [--user]\n```\n\n\nUsage\n-----\n\nThe _server_ role reads from standard input and publishes to a queue. If you don't \nhave something actively creating work a good approach is to create a _MANIFEST_ file\nand use `tail -f` to wait for work to arrive.\n\n```\nuser@host-01: ~ $ touch MANIFEST\nuser@host-01: ~ $ tail -f MANIFEST | dist_exe server -H 0.0.0.0 -p 5050 -k SECRET\n```\n\nThe _client_ role connects to the remote queue and pulls items off, executing them using the local shell.\nYou can specify a template for the command line invocation, otherwise the items are take as being the entire\ninvocation.\n\n```\nuser@host-02: ~ $ dist_exe client -H host-01 -p 5050 -k SECRET -t 'echo {}'\n```", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/glentner/dist_exe", "keywords": "distributed asynchronous queue", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "dist-exe", "package_url": "https://pypi.org/project/dist-exe/", "platform": "", "project_url": "https://pypi.org/project/dist-exe/", "project_urls": {"Homepage": "https://github.com/glentner/dist_exe"}, "release_url": "https://pypi.org/project/dist-exe/0.0.6/", "requires_dist": null, "requires_python": "", "summary": "Distributed execution utility.", "version": "0.0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Distributed Executor</h1>\n<p><a href=\"https://www.apache.org/licenses/LICENSE-2.0\" rel=\"nofollow\"><img alt=\"GitHub License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/937dbe924489afde3df92029462dfd28769fff4e/687474703a2f2f696d672e736869656c64732e696f2f62616467652f6c6963656e73652d4170616368652d626c75652e7376673f7374796c653d666c6174\"></a>\n<a href=\"https://docs.python.org/3.7\" rel=\"nofollow\"><img alt=\"Python Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/42ac359ddeb6aa16ab05d0de5be575fb4c52f581/687474703a2f2f696d672e736869656c64732e696f2f62616467652f707974686f6e2d332e372d6f72616e67652e7376673f7374796c653d666c6174\"></a></p>\n<p>A cross-platform reference implementation for processing shell commands over\na distributed, asynchronous queue. <code>dist_exe</code> is a single producer\n(server) many consumer (client) system. It functions similar to <em>GNU Parallel</em>\nbut scales out to many servers and even across operating systems.</p>\n<p>This tool uses only standard library methods so there are no dependencies.\nIt has been tested on Linux, macOS, and Windows 10 in Python 3.7 environments.\nThe server and clients don't even need to be using the same platform.</p>\n<h2>Installation</h2>\n<pre><code>pip install dist_exe [--upgrade] [--user]\n</code></pre>\n<h2>Usage</h2>\n<p>The <em>server</em> role reads from standard input and publishes to a queue. If you don't\nhave something actively creating work a good approach is to create a <em>MANIFEST</em> file\nand use <code>tail -f</code> to wait for work to arrive.</p>\n<pre><code>user@host-01: ~ $ touch MANIFEST\nuser@host-01: ~ $ tail -f MANIFEST | dist_exe server -H 0.0.0.0 -p 5050 -k SECRET\n</code></pre>\n<p>The <em>client</em> role connects to the remote queue and pulls items off, executing them using the local shell.\nYou can specify a template for the command line invocation, otherwise the items are take as being the entire\ninvocation.</p>\n<pre><code>user@host-02: ~ $ dist_exe client -H host-01 -p 5050 -k SECRET -t 'echo {}'\n</code></pre>\n\n          </div>"}, "last_serial": 5797784, "releases": {"0.0.3": [{"comment_text": "", "digests": {"md5": "96987cccf0446f37d402c659bb85d427", "sha256": "4e7253b6d42a1b9f94f98c16a2e68d29672f1612ae90b0129353307482211d2f"}, "downloads": -1, "filename": "dist_exe-0.0.3.tar.gz", "has_sig": false, "md5_digest": "96987cccf0446f37d402c659bb85d427", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5261, "upload_time": "2019-08-30T18:50:19", "upload_time_iso_8601": "2019-08-30T18:50:19.776219Z", "url": "https://files.pythonhosted.org/packages/92/ea/c9e117224686624920decce714620f0b5e86baf33be1e772046bfae1ea26/dist_exe-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "eda9477a6f58d86266d4b7c3e57813e0", "sha256": "eca60ad88aca4ef1db38b5d959b75380997f5926f9963bdc34f20fa801bde03a"}, "downloads": -1, "filename": "dist_exe-0.0.4.tar.gz", "has_sig": false, "md5_digest": "eda9477a6f58d86266d4b7c3e57813e0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5256, "upload_time": "2019-08-30T19:01:46", "upload_time_iso_8601": "2019-08-30T19:01:46.614490Z", "url": "https://files.pythonhosted.org/packages/18/2d/0989e57899e424f5c0e909859697e1372dfc242da5c8aaf24f0924569948/dist_exe-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "6a9830c645793a21773e25efc6c7b459", "sha256": "52a8499a96806e94c461946e6492b85c6c9966310cd2a88266e105558d04817f"}, "downloads": -1, "filename": "dist_exe-0.0.5.tar.gz", "has_sig": false, "md5_digest": "6a9830c645793a21773e25efc6c7b459", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5247, "upload_time": "2019-09-07T02:44:50", "upload_time_iso_8601": "2019-09-07T02:44:50.498965Z", "url": "https://files.pythonhosted.org/packages/3f/2b/8c92d2127453a80dd1a32c7996d00c9d23ccccb572501e9253808fe7aadb/dist_exe-0.0.5.tar.gz", "yanked": false}], "0.0.6": [{"comment_text": "", "digests": {"md5": "b7f46db5ee58ee4e4b529fd528471387", "sha256": "9c12d43c89a60c359ccc3d8b3851cb302242d01d638fa32d64d15333bf8e3558"}, "downloads": -1, "filename": "dist_exe-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b7f46db5ee58ee4e4b529fd528471387", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5255, "upload_time": "2019-09-07T23:44:15", "upload_time_iso_8601": "2019-09-07T23:44:15.486614Z", "url": "https://files.pythonhosted.org/packages/ca/d3/c155aacb02eb4e4d3a174487a58963e6eaedb06ae085c5d0d92ad0d62747/dist_exe-0.0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b7f46db5ee58ee4e4b529fd528471387", "sha256": "9c12d43c89a60c359ccc3d8b3851cb302242d01d638fa32d64d15333bf8e3558"}, "downloads": -1, "filename": "dist_exe-0.0.6.tar.gz", "has_sig": false, "md5_digest": "b7f46db5ee58ee4e4b529fd528471387", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5255, "upload_time": "2019-09-07T23:44:15", "upload_time_iso_8601": "2019-09-07T23:44:15.486614Z", "url": "https://files.pythonhosted.org/packages/ca/d3/c155aacb02eb4e4d3a174487a58963e6eaedb06ae085c5d0d92ad0d62747/dist_exe-0.0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:38:04 2020"}