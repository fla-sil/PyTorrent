{"info": {"author": "Felix Soubelet", "author_email": "felix.soubelet@cern.ch", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Topic :: Scientific/Engineering", "Topic :: Scientific/Engineering :: Physics", "Topic :: Scientific/Engineering :: Visualization", "Topic :: Utilities"], "description": "# PyhDToolkit: An all-in-one toolkit package for Python work in my PhD.\n\nThis repository is a package gathering a number of Python utilities for my work.\n\n## Installation\n\nThis code is compatible with `Python 3.6+`.\nIf for some reason you have a need for it, you can simply install it in your virtual enrivonment with:\n```bash\npip install pyhdtoolkit\n```\n\nIf you intend to make some hotfix changes to the site-package, you can use pip's `--editable` flag and get the last released version (from master) with: \n```bash\npip install --editable git+https://github.com/fsoubelet/PyhDToolkit.git@master#egg=pyhdtoolkit\n```\n\nIf you intend on making actual changes, then you should clone this repository through VCS, and install it into a virtual environment.\nWith `git`, this would be:\n```bash\ngit clone https://github.com/fsoubelet/PyhDToolkit.git\ncd PyhDToolkit\nmake\n```\n\n## Testing\n\nTests are currently a work in progress, but testing builds are ensured after each commit through Travis-CI.\n\nYou can run tests locally with:\n```bash\nmake tests\n```\n\n## Standards, Tools and VCS\n\nThis repository respects the `reStructuredText` docstring format, uses [Black][black_formatter] as a code formatter with a default enforced line length of 120 characters, and [Pylint][pylint_ref] as a linter.\nYou can format the code with:\n```bash\nmake format \n```\n\nYou can lint the code with (which will format the code first):\n```bash\nmake lint\n```\n\nVCS is done through [git][git_ref] and follows the [Gitflow][gitflow_ref] workflow.\nAs a consequence, make sure to always install from `master`.\n\n## Miscellaneous\n\nFeel free to explore the `Makefile`.\nYou will get an idea of what functionality is available to you by running:\n```bash\nmake help\n```\n\n### Environment \n\nThis repository currently comes with an `environment.yml` file to reproduce a fully compatible conda environment.\nYou can install this environment and add it to your ipython kernel by running:\n```bash\nmake condaenv\n```\n\n### Container\n\nA Dockerfile is included if you want to build a container image from source.\nYou can do so, building with the name `simenv` (and tag `latest`), with the command:\n```bash\nmake docker-build\n```\n\nAlternatively, you can directly pull a pre-built image from Dockerhub with:\n```bash\nmake docker-pull\n```\n\nYou can then run your container in interactive mode, and use the already activated conda environment for your work.\nIt is highly advised to run with `--init` for zombie processes protection, see [Tini][tini_ref] for details.\nAssuming you pulled the provided image from Dockerhub, the command is then (remove the `--rm` flag if you wish to preserve it after running):\n```bash\ndocker run -it --rm --init fsoubelet/simenv\n```\n\nIf you want to do some exploration through a `jupyter` interface then you need to tell your container to install it first, as it is not bundled in the image, then add the custom environment kernelspec.\nThe following command will take care of all this:\n```bash\ndocker run -it --rm --init -p 8888:8888 fsoubelet/simenv /bin/bash -c \"/opt/conda/bin/conda install -c conda-forge jupyterlab -y --quiet > /dev/null && mkdir /opt/notebooks && /opt/conda/envs/PHD/bin/ipython kernel install --user --name=PHD && /opt/conda/bin/jupyter lab --notebook-dir=/opt/notebooks --ip='*' --port=8888 --no-browser --allow-root\"\n```\nYou can then copy the provided token and head to `localhost:8888` on your local machine.\nThere, you will have access to a kernel named `PHD` with all the goodies of this repository (and more).\n\nBeware though, none of your changes / work will be saved in the image, and re-launching it gets you a clean state everytime.\nTo save a file from the container (say a plot, or saved data), you can use the [`docker cp`][docker_cp_doc] command (while the container is active).\n\nA generic use case is:  `docker cp <ContainerID>:/path/to/container/file /path/to/local/copy` and an example would be : `docker cp fsoubelet/simenv:/some_plot_output.jpg .`\n\n## License\n\nCopyright &copy; 2019-2020 Felix Soubelet. [MIT License][license]\n\n[black_formatter]: https://github.com/psf/black\n[docker_cp_doc]: https://docs.docker.com/engine/reference/commandline/cp/\n[gitflow_ref]: https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow\n[git_ref]: https://git-scm.com/\n[license]: https://github.com/fsoubelet/PyhDToolkit/blob/master/LICENSE\n[oci_ref]: https://www.opencontainers.org/\n[pylint_ref]: https://www.pylint.org/\n[tini_ref]: https://github.com/krallin/tini\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/fsoubelet/PyhDToolkit", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "pyhdtoolkit", "package_url": "https://pypi.org/project/pyhdtoolkit/", "platform": "", "project_url": "https://pypi.org/project/pyhdtoolkit/", "project_urls": {"Homepage": "https://github.com/fsoubelet/PyhDToolkit"}, "release_url": "https://pypi.org/project/pyhdtoolkit/0.3.0/", "requires_dist": ["fsbox (>=0.1.0)", "numpy (>=1.14.1)", "pandas (<1.0,>=0.24.0)", "scipy (>=1.0.0)", "scikit-learn (>=0.20.3)", "tfs-pandas (>=1.0.3)", "generic-parser (>=1.0.6)", "sdds (>=0.1.3)", "pytz (>=2018.9)", "tqdm (>=4.41)"], "requires_python": ">=3.6", "summary": "An all-in-one toolkit package to easy my Python work in my PhD.", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>PyhDToolkit: An all-in-one toolkit package for Python work in my PhD.</h1>\n<p>This repository is a package gathering a number of Python utilities for my work.</p>\n<h2>Installation</h2>\n<p>This code is compatible with <code>Python 3.6+</code>.\nIf for some reason you have a need for it, you can simply install it in your virtual enrivonment with:</p>\n<pre>pip install pyhdtoolkit\n</pre>\n<p>If you intend to make some hotfix changes to the site-package, you can use pip's <code>--editable</code> flag and get the last released version (from master) with:</p>\n<pre>pip install --editable git+https://github.com/fsoubelet/PyhDToolkit.git@master#egg<span class=\"o\">=</span>pyhdtoolkit\n</pre>\n<p>If you intend on making actual changes, then you should clone this repository through VCS, and install it into a virtual environment.\nWith <code>git</code>, this would be:</p>\n<pre>git clone https://github.com/fsoubelet/PyhDToolkit.git\n<span class=\"nb\">cd</span> PyhDToolkit\nmake\n</pre>\n<h2>Testing</h2>\n<p>Tests are currently a work in progress, but testing builds are ensured after each commit through Travis-CI.</p>\n<p>You can run tests locally with:</p>\n<pre>make tests\n</pre>\n<h2>Standards, Tools and VCS</h2>\n<p>This repository respects the <code>reStructuredText</code> docstring format, uses <a href=\"https://github.com/psf/black\" rel=\"nofollow\">Black</a> as a code formatter with a default enforced line length of 120 characters, and <a href=\"https://www.pylint.org/\" rel=\"nofollow\">Pylint</a> as a linter.\nYou can format the code with:</p>\n<pre>make format \n</pre>\n<p>You can lint the code with (which will format the code first):</p>\n<pre>make lint\n</pre>\n<p>VCS is done through <a href=\"https://git-scm.com/\" rel=\"nofollow\">git</a> and follows the <a href=\"https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow\" rel=\"nofollow\">Gitflow</a> workflow.\nAs a consequence, make sure to always install from <code>master</code>.</p>\n<h2>Miscellaneous</h2>\n<p>Feel free to explore the <code>Makefile</code>.\nYou will get an idea of what functionality is available to you by running:</p>\n<pre>make <span class=\"nb\">help</span>\n</pre>\n<h3>Environment</h3>\n<p>This repository currently comes with an <code>environment.yml</code> file to reproduce a fully compatible conda environment.\nYou can install this environment and add it to your ipython kernel by running:</p>\n<pre>make condaenv\n</pre>\n<h3>Container</h3>\n<p>A Dockerfile is included if you want to build a container image from source.\nYou can do so, building with the name <code>simenv</code> (and tag <code>latest</code>), with the command:</p>\n<pre>make docker-build\n</pre>\n<p>Alternatively, you can directly pull a pre-built image from Dockerhub with:</p>\n<pre>make docker-pull\n</pre>\n<p>You can then run your container in interactive mode, and use the already activated conda environment for your work.\nIt is highly advised to run with <code>--init</code> for zombie processes protection, see <a href=\"https://github.com/krallin/tini\" rel=\"nofollow\">Tini</a> for details.\nAssuming you pulled the provided image from Dockerhub, the command is then (remove the <code>--rm</code> flag if you wish to preserve it after running):</p>\n<pre>docker run -it --rm --init fsoubelet/simenv\n</pre>\n<p>If you want to do some exploration through a <code>jupyter</code> interface then you need to tell your container to install it first, as it is not bundled in the image, then add the custom environment kernelspec.\nThe following command will take care of all this:</p>\n<pre>docker run -it --rm --init -p <span class=\"m\">8888</span>:8888 fsoubelet/simenv /bin/bash -c <span class=\"s2\">\"/opt/conda/bin/conda install -c conda-forge jupyterlab -y --quiet &gt; /dev/null &amp;&amp; mkdir /opt/notebooks &amp;&amp; /opt/conda/envs/PHD/bin/ipython kernel install --user --name=PHD &amp;&amp; /opt/conda/bin/jupyter lab --notebook-dir=/opt/notebooks --ip='*' --port=8888 --no-browser --allow-root\"</span>\n</pre>\n<p>You can then copy the provided token and head to <code>localhost:8888</code> on your local machine.\nThere, you will have access to a kernel named <code>PHD</code> with all the goodies of this repository (and more).</p>\n<p>Beware though, none of your changes / work will be saved in the image, and re-launching it gets you a clean state everytime.\nTo save a file from the container (say a plot, or saved data), you can use the <a href=\"https://docs.docker.com/engine/reference/commandline/cp/\" rel=\"nofollow\"><code>docker cp</code></a> command (while the container is active).</p>\n<p>A generic use case is:  <code>docker cp &lt;ContainerID&gt;:/path/to/container/file /path/to/local/copy</code> and an example would be : <code>docker cp fsoubelet/simenv:/some_plot_output.jpg .</code></p>\n<h2>License</h2>\n<p>Copyright \u00a9 2019-2020 Felix Soubelet. <a href=\"https://github.com/fsoubelet/PyhDToolkit/blob/master/LICENSE\" rel=\"nofollow\">MIT License</a></p>\n\n          </div>"}, "last_serial": 6978848, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "4eefeeffc1a25467bc0c1da19b9167a5", "sha256": "9559c20b2a96d1fd3cf3c20222c7242b13bf126bf1d4617b9045dc7b21027f77"}, "downloads": -1, "filename": "pyhdtoolkit-0.2.0.tar.gz", "has_sig": false, "md5_digest": "4eefeeffc1a25467bc0c1da19b9167a5", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 36052, "upload_time": "2020-02-27T13:11:43", "upload_time_iso_8601": "2020-02-27T13:11:43.119649Z", "url": "https://files.pythonhosted.org/packages/f3/48/651ff909ddf8733318b9a7912e8e4df8558636c4d8584b2843f0b6acc49d/pyhdtoolkit-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "bec1f889c2de6b993fb463ce5dd75179", "sha256": "ad6168b75ca87d17ed4da0784599e4ace105b28b2a365a96e1310f6e99d44e9d"}, "downloads": -1, "filename": "pyhdtoolkit-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bec1f889c2de6b993fb463ce5dd75179", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52672, "upload_time": "2020-04-08T16:04:53", "upload_time_iso_8601": "2020-04-08T16:04:53.492495Z", "url": "https://files.pythonhosted.org/packages/b6/07/b0041b04b0e81ab3ced5e220a1c11649ecfaf901207bb8b5eca04ce2c57d/pyhdtoolkit-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a18a735a7d1c3107e13399c04577033", "sha256": "7c37e4a85b8b2c168576b863a7391066f7a222b2859b544cf29474ca7822e022"}, "downloads": -1, "filename": "pyhdtoolkit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1a18a735a7d1c3107e13399c04577033", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 44206, "upload_time": "2020-04-08T16:04:54", "upload_time_iso_8601": "2020-04-08T16:04:54.841321Z", "url": "https://files.pythonhosted.org/packages/1d/2e/5fa048f1698758f5100b079e789e1b26e847db4d523673b9e7a9af9d9da8/pyhdtoolkit-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bec1f889c2de6b993fb463ce5dd75179", "sha256": "ad6168b75ca87d17ed4da0784599e4ace105b28b2a365a96e1310f6e99d44e9d"}, "downloads": -1, "filename": "pyhdtoolkit-0.3.0-py3-none-any.whl", "has_sig": false, "md5_digest": "bec1f889c2de6b993fb463ce5dd75179", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.6", "size": 52672, "upload_time": "2020-04-08T16:04:53", "upload_time_iso_8601": "2020-04-08T16:04:53.492495Z", "url": "https://files.pythonhosted.org/packages/b6/07/b0041b04b0e81ab3ced5e220a1c11649ecfaf901207bb8b5eca04ce2c57d/pyhdtoolkit-0.3.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1a18a735a7d1c3107e13399c04577033", "sha256": "7c37e4a85b8b2c168576b863a7391066f7a222b2859b544cf29474ca7822e022"}, "downloads": -1, "filename": "pyhdtoolkit-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1a18a735a7d1c3107e13399c04577033", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 44206, "upload_time": "2020-04-08T16:04:54", "upload_time_iso_8601": "2020-04-08T16:04:54.841321Z", "url": "https://files.pythonhosted.org/packages/1d/2e/5fa048f1698758f5100b079e789e1b26e847db4d523673b9e7a9af9d9da8/pyhdtoolkit-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:27 2020"}