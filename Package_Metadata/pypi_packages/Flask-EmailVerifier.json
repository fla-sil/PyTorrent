{"info": {"author": "Whois API, Inc.", "author_email": "support@whoisxmlapi.com", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Internet :: WWW/HTTP :: Dynamic Content", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Flask-EmailVerifier\n===================\n\nThe easiest way to verify emails in your Flask application.\n\n\nMeta\n----\n- Author: Whois API, Inc.\n- Email: support@whoisxmlapi.com\n- Site: https://emailverification.whoisxmlapi.com\n\n\nPrerequisites\n-------------\n\nTo use this library, you'll need to create a free Email Verification API\naccount: https://emailverification.whoisxmlapi.com/\n\nIf you haven't done this yet, please do so now.\n\n\nInstallation\n------------\n\nTo install ``Flask-EmailVerifier`` using `pypi <https://pypi.org/>`_, simply run:\n\n.. code-block:: console\n\n    $ pip install Flask-EmailVerifier\n\nIn the root of your project directory.\n\n\nUsage\n-----\n\nOnce you have `Flask-EmailVerifier` installed, you can use it to easily\nverify an email address.\n\nThis library gives you access to the Email Verification API that\nyou can use in your application in any number of ways.\n\nHere's a simple Flask app that makes use of the email address verification\nand returns an email address information:\n\n.. code-block:: python\n\n    from flask import Flask, make_response\n    from flask_email_verifier import EmailVerifier\n    from json import dumps, loads\n\n    app = Flask(__name__)\n    # Initialize the extension\n    verifier = EmailVerifier(app)\n\n    @app.route('/email/<email>')\n    def email(email):\n        # Retrieve an info for the given email address\n        email_address_info = verifier.verify(email)\n        if email_address_info is not None:\n            data = dumps(loads(email_address_info.json_string), indent=4)\n            resp = make_response(data, 200)\n            resp.headers['Content-Type'] = 'application/json'\n        else:\n            resp = make_response('None', 404)\n        return resp\n\nDon't forget to specify your API key:\n\n.. code-block:: bash\n\n    $ export EMAIL_VERIFIER_KEY='your-key'\n\n\nHere's the sort of data you might get back when performing a email\nverification request:\n\n.. code-block:: json\n\n    {\n        \"emailAddress\": \"test.email@gmail.com\",\n        \"formatCheck\": \"true\",\n        \"smtpCheck\": \"false\",\n        \"dnsCheck\": \"true\",\n        \"freeCheck\": \"true\",\n        \"disposableCheck\": \"false\",\n        \"catchAllCheck\": \"false\",\n        \"mxRecords\": [\n            \"alt3.gmail-smtp-in.l.google.com\",\n            \"alt1.gmail-smtp-in.l.google.com\",\n            \"alt2.gmail-smtp-in.l.google.com\",\n            \"alt4.gmail-smtp-in.l.google.com\",\n            \"gmail-smtp-in.l.google.com\"\n        ],\n        \"audit\": {\n            \"auditCreatedDate\": \"2018-11-14 13:05:09.000 UTC\",\n            \"auditUpdatedDate\": \"2018-11-14 13:05:09.000 UTC\"\n        }\n    }\n\n\nIn the event an email verification request can't finish successfully, the data\nreturned will be `None`. This library will *never* throw an exception.\nThis decision was made strategically: if you cannot verify user's email, it\ndoesn't mean that this user is bad.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/whois-api-llc/flask-email-verifier", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Flask-EmailVerifier", "package_url": "https://pypi.org/project/Flask-EmailVerifier/", "platform": "any", "project_url": "https://pypi.org/project/Flask-EmailVerifier/", "project_urls": {"Homepage": "https://github.com/whois-api-llc/flask-email-verifier"}, "release_url": "https://pypi.org/project/Flask-EmailVerifier/0.1.0/", "requires_dist": ["Flask", "email-verifier"], "requires_python": "", "summary": "The simplest library for email verification for Flask.", "version": "0.1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>The easiest way to verify emails in your Flask application.</p>\n<div id=\"meta\">\n<h2>Meta</h2>\n<ul>\n<li>Author: Whois API, Inc.</li>\n<li>Email: <a href=\"mailto:support%40whoisxmlapi.com\">support<span>@</span>whoisxmlapi<span>.</span>com</a></li>\n<li>Site: <a href=\"https://emailverification.whoisxmlapi.com\" rel=\"nofollow\">https://emailverification.whoisxmlapi.com</a></li>\n</ul>\n</div>\n<div id=\"prerequisites\">\n<h2>Prerequisites</h2>\n<p>To use this library, you\u2019ll need to create a free Email Verification API\naccount: <a href=\"https://emailverification.whoisxmlapi.com/\" rel=\"nofollow\">https://emailverification.whoisxmlapi.com/</a></p>\n<p>If you haven\u2019t done this yet, please do so now.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>To install <tt><span class=\"pre\">Flask-EmailVerifier</span></tt> using <a href=\"https://pypi.org/\" rel=\"nofollow\">pypi</a>, simply run:</p>\n<pre><span class=\"gp\">$</span> pip install Flask-EmailVerifier\n</pre>\n<p>In the root of your project directory.</p>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Once you have <cite>Flask-EmailVerifier</cite> installed, you can use it to easily\nverify an email address.</p>\n<p>This library gives you access to the Email Verification API that\nyou can use in your application in any number of ways.</p>\n<p>Here\u2019s a simple Flask app that makes use of the email address verification\nand returns an email address information:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask</span> <span class=\"kn\">import</span> <span class=\"n\">Flask</span><span class=\"p\">,</span> <span class=\"n\">make_response</span>\n<span class=\"kn\">from</span> <span class=\"nn\">flask_email_verifier</span> <span class=\"kn\">import</span> <span class=\"n\">EmailVerifier</span>\n<span class=\"kn\">from</span> <span class=\"nn\">json</span> <span class=\"kn\">import</span> <span class=\"n\">dumps</span><span class=\"p\">,</span> <span class=\"n\">loads</span>\n\n<span class=\"n\">app</span> <span class=\"o\">=</span> <span class=\"n\">Flask</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">)</span>\n<span class=\"c1\"># Initialize the extension</span>\n<span class=\"n\">verifier</span> <span class=\"o\">=</span> <span class=\"n\">EmailVerifier</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n<span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">route</span><span class=\"p\">(</span><span class=\"s1\">'/email/&lt;email&gt;'</span><span class=\"p\">)</span>\n<span class=\"k\">def</span> <span class=\"nf\">email</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">):</span>\n    <span class=\"c1\"># Retrieve an info for the given email address</span>\n    <span class=\"n\">email_address_info</span> <span class=\"o\">=</span> <span class=\"n\">verifier</span><span class=\"o\">.</span><span class=\"n\">verify</span><span class=\"p\">(</span><span class=\"n\">email</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"n\">email_address_info</span> <span class=\"ow\">is</span> <span class=\"ow\">not</span> <span class=\"kc\">None</span><span class=\"p\">:</span>\n        <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">dumps</span><span class=\"p\">(</span><span class=\"n\">loads</span><span class=\"p\">(</span><span class=\"n\">email_address_info</span><span class=\"o\">.</span><span class=\"n\">json_string</span><span class=\"p\">),</span> <span class=\"n\">indent</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">)</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">make_response</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n        <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">headers</span><span class=\"p\">[</span><span class=\"s1\">'Content-Type'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"s1\">'application/json'</span>\n    <span class=\"k\">else</span><span class=\"p\">:</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">make_response</span><span class=\"p\">(</span><span class=\"s1\">'None'</span><span class=\"p\">,</span> <span class=\"mi\">404</span><span class=\"p\">)</span>\n    <span class=\"k\">return</span> <span class=\"n\">resp</span>\n</pre>\n<p>Don\u2019t forget to specify your API key:</p>\n<pre>$ <span class=\"nb\">export</span> <span class=\"nv\">EMAIL_VERIFIER_KEY</span><span class=\"o\">=</span><span class=\"s1\">'your-key'</span>\n</pre>\n<p>Here\u2019s the sort of data you might get back when performing a email\nverification request:</p>\n<pre><span class=\"p\">{</span>\n    <span class=\"nt\">\"emailAddress\"</span><span class=\"p\">:</span> <span class=\"s2\">\"test.email@gmail.com\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"formatCheck\"</span><span class=\"p\">:</span> <span class=\"s2\">\"true\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"smtpCheck\"</span><span class=\"p\">:</span> <span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"dnsCheck\"</span><span class=\"p\">:</span> <span class=\"s2\">\"true\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"freeCheck\"</span><span class=\"p\">:</span> <span class=\"s2\">\"true\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"disposableCheck\"</span><span class=\"p\">:</span> <span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"catchAllCheck\"</span><span class=\"p\">:</span> <span class=\"s2\">\"false\"</span><span class=\"p\">,</span>\n    <span class=\"nt\">\"mxRecords\"</span><span class=\"p\">:</span> <span class=\"p\">[</span>\n        <span class=\"s2\">\"alt3.gmail-smtp-in.l.google.com\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"alt1.gmail-smtp-in.l.google.com\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"alt2.gmail-smtp-in.l.google.com\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"alt4.gmail-smtp-in.l.google.com\"</span><span class=\"p\">,</span>\n        <span class=\"s2\">\"gmail-smtp-in.l.google.com\"</span>\n    <span class=\"p\">],</span>\n    <span class=\"nt\">\"audit\"</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n        <span class=\"nt\">\"auditCreatedDate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2018-11-14 13:05:09.000 UTC\"</span><span class=\"p\">,</span>\n        <span class=\"nt\">\"auditUpdatedDate\"</span><span class=\"p\">:</span> <span class=\"s2\">\"2018-11-14 13:05:09.000 UTC\"</span>\n    <span class=\"p\">}</span>\n<span class=\"p\">}</span>\n</pre>\n<p>In the event an email verification request can\u2019t finish successfully, the data\nreturned will be <cite>None</cite>. This library will <em>never</em> throw an exception.\nThis decision was made strategically: if you cannot verify user\u2019s email, it\ndoesn\u2019t mean that this user is bad.</p>\n</div>\n\n          </div>"}, "last_serial": 4552929, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "2a925f5f52d511d6e35f8069c9e709a0", "sha256": "5d3f684503a50a40c230d8902446e49ac603f0a60eb84e24ce7701db799cb336"}, "downloads": -1, "filename": "Flask_EmailVerifier-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2a925f5f52d511d6e35f8069c9e709a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3867, "upload_time": "2018-12-02T18:06:36", "upload_time_iso_8601": "2018-12-02T18:06:36.055901Z", "url": "https://files.pythonhosted.org/packages/a9/e8/b27295a4a7c91a29bf47d6ea710432c8cbd880441c89128eac0fa36f0006/Flask_EmailVerifier-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ba13662b9461228452bc93d6295c671", "sha256": "73a66ff0737b8cbc70e244b4e686f4ba865586c21bcd5e0c7b0591497489b0fe"}, "downloads": -1, "filename": "Flask-EmailVerifier-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7ba13662b9461228452bc93d6295c671", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3075, "upload_time": "2018-12-02T18:06:38", "upload_time_iso_8601": "2018-12-02T18:06:38.158665Z", "url": "https://files.pythonhosted.org/packages/77/53/9759fd871c9bdcd90bd0425ef5c0159ba66c382e448b69e4489bc8409098/Flask-EmailVerifier-0.1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2a925f5f52d511d6e35f8069c9e709a0", "sha256": "5d3f684503a50a40c230d8902446e49ac603f0a60eb84e24ce7701db799cb336"}, "downloads": -1, "filename": "Flask_EmailVerifier-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "2a925f5f52d511d6e35f8069c9e709a0", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 3867, "upload_time": "2018-12-02T18:06:36", "upload_time_iso_8601": "2018-12-02T18:06:36.055901Z", "url": "https://files.pythonhosted.org/packages/a9/e8/b27295a4a7c91a29bf47d6ea710432c8cbd880441c89128eac0fa36f0006/Flask_EmailVerifier-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7ba13662b9461228452bc93d6295c671", "sha256": "73a66ff0737b8cbc70e244b4e686f4ba865586c21bcd5e0c7b0591497489b0fe"}, "downloads": -1, "filename": "Flask-EmailVerifier-0.1.0.tar.gz", "has_sig": false, "md5_digest": "7ba13662b9461228452bc93d6295c671", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3075, "upload_time": "2018-12-02T18:06:38", "upload_time_iso_8601": "2018-12-02T18:06:38.158665Z", "url": "https://files.pythonhosted.org/packages/77/53/9759fd871c9bdcd90bd0425ef5c0159ba66c382e448b69e4489bc8409098/Flask-EmailVerifier-0.1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 01:02:55 2020"}