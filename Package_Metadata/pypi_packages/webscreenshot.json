{"info": {"author": "Thomas D.", "author_email": "tdebize@mail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Information Technology", "License :: OSI Approved :: GNU Library or Lesser General Public License (LGPL)", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Topic :: Security"], "description": "webscreenshot\n=============\n\nDescription\n-----------\nA simple script to screenshot a list of websites, based on the [`url-to-image`](https://github.com/kimmobrunfeldt/url-to-image/) PhantomJS script.\n\nFeatures\n--------\n* Integrating url-to-image *'lazy-rendering'* for AJAX resources\n* Fully functional on Windows and Linux systems\n* Cookie and custom HTTP header definition support for the PhantomJS renderer\n* Multiprocessing and killing of unresponding processes after a user-definable timeout\n* Accepting several formats as input target\n* Customizing screenshot size (width, height), format and quality\n* Mapping useful options of PhantomJS such as ignoring ssl error, proxy definition and proxy authentication, HTTP Basic Authentication\n* Supports multiple renderers: \n  * **PhantomJS**, which is legacy and [abandoned](https://groups.google.com/forum/#!topic/phantomjs/9aI5d-LDuNE) but the one still producing the best results\n  * **Chrome and Chromium**, which will replace PhantomJS but currently have some limitations: screenshoting an HTTPS website not having a valid certificate, for instance a self-signed one, will produce an empty screenshot.  \n    The reason is that the [`--ignore-certificate-errors`](https://groups.google.com/a/chromium.org/forum/#!topic/headless-dev/eiudRsYdc3A) option doesn't work and will never work anymore: the solution is to use a [proper webdriver](https://bugs.chromium.org/p/chromium/issues/detail?id=697721), but to date `webscreenshot` doesn't aim to support this _rather complex_ method requiring some third-party tools.\n  * **Firefox** can also be used as a renderer but has some serious limitations (_so don't use it for the moment_):\n    * Impossibility to perform multiple screenshots at the time: no multi-instance of the firefox process\n    * No incognito mode, using webscreenshot will pollute your browsing history\n* Embedding screenshot URL in image (requires `ImageMagick`) \n\nUsage\n-----\nPut your targets in a text file and pass it with the `-i` option, or as a positional argument if you have just a single URL.  \nScreenshots will be available, by default, in your current ```./screenshots/``` directory.  \nAccepted input formats are the following:\n```\nhttp(s)://domain_or_ip:port(/resource)\ndomain_or_ip:port(/resource)\ndomain_or_ip(/resource)\n```\n\n### Options\n```\nwebscreenshot.py version 2.8\n\nusage: webscreenshot.py [-h] [-i INPUT_FILE] [-o OUTPUT_DIRECTORY]\n                        [-w WORKERS] [-v] [-p PORT] [-s] [-m]\n                        [-r {phantomjs,chrome,chromium,firefox}]\n                        [--renderer-binary RENDERER_BINARY] [--no-xserver]\n                        [--window-size WINDOW_SIZE]\n                        [-f {pdf,png,jpg,jpeg,bmp,ppm}] [-q [0-100]]\n                        [--ajax-max-timeouts AJAX_MAX_TIMEOUTS] [--crop CROP]\n                        [-l] [--label-size LABEL_SIZE]\n                        [--label-bg-color LABEL_BG_COLOR]\n                        [--imagemagick-binary IMAGEMAGICK_BINARY] [-c COOKIE]\n                        [-a HEADER] [-u HTTP_USERNAME] [-b HTTP_PASSWORD]\n                        [-P PROXY] [-A PROXY_AUTH] [-T PROXY_TYPE]\n                        [-t TIMEOUT]\n                        [URL]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nMain parameters:\n  URL                   Single URL target given as a positional argument\n  -i INPUT_FILE, --input-file INPUT_FILE\n                        <INPUT_FILE> text file containing the target list. Ex:\n                        list.txt\n  -o OUTPUT_DIRECTORY, --output-directory OUTPUT_DIRECTORY\n                        <OUTPUT_DIRECTORY> (optional): screenshots output\n                        directory (default './screenshots/')\n  -w WORKERS, --workers WORKERS\n                        <WORKERS> (optional): number of parallel execution\n                        workers (default 4)\n  -v, --verbosity       <VERBOSITY> (optional): verbosity level, repeat it to\n                        increase the level { -v INFO, -vv DEBUG } (default\n                        verbosity ERROR)\n\nInput processing parameters:\n  -p PORT, --port PORT  <PORT> (optional): use the specified port for each\n                        target in the input list. Ex: -p 80\n  -s, --ssl             <SSL> (optional): enforce ssl for every connection\n  -m, --multiprotocol   <MULTIPROTOCOL> (optional): perform screenshots over\n                        HTTP and HTTPS for each target\n\nScreenshot renderer parameters:\n  -r {phantomjs,chrome,chromium,firefox}, --renderer {phantomjs,chrome,chromium,firefox}\n                        <RENDERER> (optional): renderer to use among\n                        'phantomjs' (legacy but best results), 'chrome',\n                        'chromium', 'firefox' (version > 57) (default\n                        'phantomjs')\n  --renderer-binary RENDERER_BINARY\n                        <RENDERER_BINARY> (optional): path to the renderer\n                        executable if it cannot be found in $PATH\n  --no-xserver          <NO_X_SERVER> (optional): if you are running without\n                        an X server, will use xvfb-run to execute the renderer\n\nScreenshot image parameters:\n  --window-size WINDOW_SIZE\n                        <WINDOW_SIZE> (optional): width and height of the\n                        screen capture (default '1200,800')\n  -f {pdf,png,jpg,jpeg,bmp,ppm}, --format {pdf,png,jpg,jpeg,bmp,ppm}\n                        <FORMAT> (optional, phantomjs only): specify an output\n                        image file format, \"pdf\", \"png\", \"jpg\", \"jpeg\", \"bmp\"\n                        or \"ppm\" (default 'png')\n  -q [0-100], --quality [0-100]\n                        <QUALITY> (optional, phantomjs only): specify the\n                        output image quality, an integer between 0 and 100\n                        (default 75)\n  --ajax-max-timeouts AJAX_MAX_TIMEOUTS\n                        <AJAX_MAX_TIMEOUTS> (optional, phantomjs only): per\n                        AJAX request, and max URL timeout in milliseconds\n                        (default '1400,1800')\n  --crop CROP           <CROP> (optional, phantomjs only): rectangle <t,l,w,h>\n                        to crop the screen capture to (default to WINDOW_SIZE:\n                        '0,0,w,h'), only numbers, w(idth) and h(eight). Ex.\n                        \"10,20,w,h\"\n\nScreenshot label parameters:\n  -l, --label           <LABEL> (optional): for each screenshot, create\n                        another one displaying inside the target URL (requires\n                        imagemagick)\n  --label-size LABEL_SIZE\n                        <LABEL_SIZE> (optional): font size for the label\n                        (default 60)\n  --label-bg-color LABEL_BG_COLOR\n                        <LABEL_BACKGROUND_COLOR> (optional): label imagemagick\n                        background color (default NavajoWhite)\n  --imagemagick-binary IMAGEMAGICK_BINARY\n                        <LABEL_BINARY> (optional): path to the imagemagick\n                        binary (magick or convert) if it cannot be found in\n                        $PATH\n\nHTTP parameters:\n  -c COOKIE, --cookie COOKIE\n                        <COOKIE_STRING> (optional): cookie string to add. Ex:\n                        -c \"JSESSIONID=1234; YOLO=SWAG\"\n  -a HEADER, --header HEADER\n                        <HEADER> (optional): custom or additional header.\n                        Repeat this option for every header. Ex: -a \"Host:\n                        localhost\" -a \"Foo: bar\"\n  -u HTTP_USERNAME, --http-username HTTP_USERNAME\n                        <HTTP_USERNAME> (optional): specify a username for\n                        HTTP Basic Authentication.\n  -b HTTP_PASSWORD, --http-password HTTP_PASSWORD\n                        <HTTP_PASSWORD> (optional): specify a password for\n                        HTTP Basic Authentication.\n\nConnection parameters:\n  -P PROXY, --proxy PROXY\n                        <PROXY> (optional): specify a proxy. Ex: -P\n                        http://proxy.company.com:8080\n  -A PROXY_AUTH, --proxy-auth PROXY_AUTH\n                        <PROXY_AUTH> (optional): provides authentication\n                        information for the proxy. Ex: -A user:password\n  -T PROXY_TYPE, --proxy-type PROXY_TYPE\n                        <PROXY_TYPE> (optional): specifies the proxy type,\n                        \"http\" (default), \"none\" (disable completely), or\n                        \"socks5\". Ex: -T socks\n  -t TIMEOUT, --timeout TIMEOUT\n                        <TIMEOUT> (optional): renderer execution timeout in\n                        seconds (default 30 sec)\n```\n\n### Examples\n```\nlist.txt\n--------\nhttp://google.fr\nhttps://216.58.213.131\n216.58.213.131\nhttps://duckduckgo.com/robots.txt\n\n\nDefault execution with a list\n-----------------------------\n$ python webscreenshot.py -i list.txt\nwebscreenshot.py version 2.3\n\n[+] 4 URLs to be screenshot\n[+] 4 actual URLs screenshot\n[+] 0 error(s)\n\n\nDefault execution with a single URL\n-----------------------------------\n$ python webscreenshot.py -v google.fr\nwebscreenshot.py version 2.3\n\n[INFO][General] 'google.fr' has been formatted as 'http://google.fr:80' with supplied overriding options\n[+] 1 URLs to be screenshot\n[INFO][http://google.fr:80] Screenshot OK\n\n[+] 1 actual URLs screenshot\n[+] 0 error(s)\n\n\nIncreasing verbosity level execution\n-----------------------------------\n$ python webscreenshot.py -i list.txt -v\nwebscreenshot.py version 2.3\n\n[INFO][General] 'http://google.fr' has been formatted as 'http://google.fr:80' with supplied overriding options\n[INFO][General] 'https://216.58.213.131' has been formatted as 'https://216.58.213.131:443' with supplied overriding options\n[INFO][General] '216.58.213.131' has been formatted as 'http://216.58.213.131:80' with supplied overriding options\n[INFO][General] 'https://duckduckgo.com/robots.txt' has been formatted as 'https://duckduckgo.com:443/robots.txt' with supplied overriding options\n[+] 4 URLs to be screenshot\n[INFO][https://duckduckgo.com:443/robots.txt] Screenshot OK\n\n[INFO][http://216.58.213.131:80] Screenshot OK\n\n[INFO][https://216.58.213.131:443] Screenshot OK\n\n[INFO][http://google.fr:80] Screenshot OK\n\n[+] 4 actual URLs screenshot\n[+] 0 error(s)\n\n\nResults\n-------\n$ ls -l screenshots/\ntotal 187\n-rwxrwxrwx 1 root root 53805 May 19 16:04 http_216.58.213.131_80.png\n-rwxrwxrwx 1 root root 53805 May 19 16:05 http_google.fr_80.png\n-rwxrwxrwx 1 root root 53805 May 19 16:04 https_216.58.213.131_443.png\n-rwxrwxrwx 1 root root 27864 May 19 16:04 https_duckduckgo.com_443_robots.txt.png\n```\n  \n\n### Supported options by renderers\nOptions not listed here below are supported by every current renderer  \n\n| **Option category**   | **Option**                                                                   | **PhantomJS renderer** | **Chrome / Chromium renderer** | **Firefox renderer** |\n|:---------------------:|------------------------------------------------------------------------------|:----------------------:|:------------------------------:|:--------------------:|\n| **Screenshot parameters**   |                                                                              |                        |                                |                      |\n|                       | format (`-f`)                                                                  | [**Yes**](https://web.archive.org/web/20200111184123/https://phantomjs.org/api/webpage/method/render.html)                    | No                             | No                   |\n|                       | quality (`-q`)                                                                  | [**Yes**](https://web.archive.org/web/20200111184123/https://phantomjs.org/api/webpage/method/render.html)                    | No                             | No                   \n|                       | ajax and request timeouts (`--ajax-max-timeouts`)                                         | **Yes**                    | No                             | No                   \n|                       | crop (`--crop`)                                                                  | [**Yes**](https://web.archive.org/web/20200111184050/https://phantomjs.org/api/webpage/property/clip-rect.html)                    | No                             | No                   \n|                       |                                                                              |                        |                                |                      |\n| **HTTP parameters**   |                                                                              |                        |                                |                      |\n|                       | cookie (`-c`)                                                                  | **Yes**                    | No                             | No                   |\n|                       | header (`-a`)                                                                  | **Yes**                    | No                             | No                   |\n|                       | http_username (`-u`)                                                           | **Yes**                    | No                             | No                   |\n|                       | http_password (`-b`)                                                           | **Yes**                    | No                             | No                   |\n|                       |                                                                              |                        |                                |                      |\n| **Connection parameters** |                                                                              |                        |                                |                      |\n|                       | proxy (`-P`)                                                                   | **Yes**                    | **Yes**                            | No                   |\n|                       | proxy_auth (`-A`)                                                              | **Yes**                    | No                             | No                   |\n|                       | proxy_type (`-T`)                                                              | **Yes**                    | No                             | No                   |\n|                       |                                                                              |                        |                                |                      |\n|                       | Ability to screenshot a HTTPS website with a non-publicly-signed certificate | **Yes**                    | No                             | No                   |\n  \n  \nRequirements\n------------\n* A Python interpreter with version 2.7 or 3.X\n* The webscreenshot python script: \n  * The **easiest way** to setup it: `pip install webscreenshot` and then directly use `$ webscreenshot` \n  * Or git clone that repository and `pip install -r requirements.txt` and then `python webscreenshot.py`\n* The PhantomJS tool with at least version 2: follow the [installation guide](https://github.com/maaaaz/webscreenshot/wiki/Phantomjs-installation) and check the [FAQ](https://github.com/maaaaz/webscreenshot/wiki/FAQ) if necessary\n* Chrome, Chromium or Firefox > 57 if you want to use one of these renderers\n* `xvfb` if you want to run `webscreenshot` in an headless OS: use the `--no-xserver` webscreenshot option to ease everything\n* `ImageMagick` binary (`magick` or `convert`) if you want to embed URL in screenshots with the `--label` option: follow the [installation guide](https://github.com/maaaaz/webscreenshot/wiki/ImageMagick-installation)\n\nChangelog\n---------\n* version 2.9 - 01/26/2020: Few fixes\n* version 2.8 - 01/11/2020: Few fixes, ajax timeouts + crop + label size + label font options added, default values for ajaxTimeout and maxTimeout changed \n* version 2.7 - 01/04/2020: URL embedding in screenshot option added\n* version 2.6 - 12/27/2019: Few fixes\n* version 2.5 - 09/22/2019: Image quality and format options added, PhantomJS useragent updated, modern TLD support\n* version 2.4 - 05/30/2019: Few fixes for Windows support\n* version 2.3 - 05/19/2019: Python 3 compatibility, Firefox renderer added, no-xserver option added\n* version 2.2 - 08/13/2018: Chrome and Chromium renderers support and single URL support\n* version 2.1 - 01/14/2018: Multiprotocol option addition and PyPI packaging\n* version 2.0 - 03/08/2017: Adding proxy-type option\n* version 1.9 - 01/10/2017: Using ALL SSL/TLS ciphers\n* version 1.8 - 07/05/2015: Option groups definition\n* version 1.7 - 06/28/2015: HTTP basic authentication support + loglevel option changed to verbosity\n* version 1.6 - 04/23/2015: Transparent background fix\n* version 1.5 - 01/11/2015: Cookie and custom HTTP header support\n* version 1.4 - 10/12/2014: url-to-image PhantomJS script integration + few bugs corrected\n* version 1.3 - 08/05/2014: Windows support + few bugs corrected\n* version 1.2 - 04/27/2014: Few bugs corrected\n* version 1.1 - 04/21/2014: Changed the script to use PhantomJS instead of the buggy wkhtml binary \n* version 1.0 - 01/12/2014: Initial commit\n\nCopyright and license\n---------------------\nwebscreenshot is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.\n\nwebscreenshot is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  \n\nSee the GNU General Public License for more details.\n\nYou should have received a copy of the GNU General Public License along with webscreenshot. \nIf not, see http://www.gnu.org/licenses/.\n\nContact\n-------\n* Thomas Debize < tdebize at mail d0t com >", "description_content_type": "text/markdown; charset=UTF-8;", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/maaaaz/webscreenshot", "keywords": "webscreenshot web screenshot phantomjs chrome chromium firefox lazy rendering", "license": "LGPL", "maintainer": "", "maintainer_email": "", "name": "webscreenshot", "package_url": "https://pypi.org/project/webscreenshot/", "platform": "", "project_url": "https://pypi.org/project/webscreenshot/", "project_urls": {"Homepage": "https://github.com/maaaaz/webscreenshot"}, "release_url": "https://pypi.org/project/webscreenshot/2.9/", "requires_dist": null, "requires_python": ">=2.7", "summary": "A simple script to screenshot a list of websites", "version": "2.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>webscreenshot</h1>\n<h2>Description</h2>\n<p>A simple script to screenshot a list of websites, based on the <a href=\"https://github.com/kimmobrunfeldt/url-to-image/\" rel=\"nofollow\"><code>url-to-image</code></a> PhantomJS script.</p>\n<h2>Features</h2>\n<ul>\n<li>Integrating url-to-image <em>'lazy-rendering'</em> for AJAX resources</li>\n<li>Fully functional on Windows and Linux systems</li>\n<li>Cookie and custom HTTP header definition support for the PhantomJS renderer</li>\n<li>Multiprocessing and killing of unresponding processes after a user-definable timeout</li>\n<li>Accepting several formats as input target</li>\n<li>Customizing screenshot size (width, height), format and quality</li>\n<li>Mapping useful options of PhantomJS such as ignoring ssl error, proxy definition and proxy authentication, HTTP Basic Authentication</li>\n<li>Supports multiple renderers:\n<ul>\n<li><strong>PhantomJS</strong>, which is legacy and <a href=\"https://groups.google.com/forum/#!topic/phantomjs/9aI5d-LDuNE\" rel=\"nofollow\">abandoned</a> but the one still producing the best results</li>\n<li><strong>Chrome and Chromium</strong>, which will replace PhantomJS but currently have some limitations: screenshoting an HTTPS website not having a valid certificate, for instance a self-signed one, will produce an empty screenshot.<br>\nThe reason is that the <a href=\"https://groups.google.com/a/chromium.org/forum/#!topic/headless-dev/eiudRsYdc3A\" rel=\"nofollow\"><code>--ignore-certificate-errors</code></a> option doesn't work and will never work anymore: the solution is to use a <a href=\"https://bugs.chromium.org/p/chromium/issues/detail?id=697721\" rel=\"nofollow\">proper webdriver</a>, but to date <code>webscreenshot</code> doesn't aim to support this <em>rather complex</em> method requiring some third-party tools.</li>\n<li><strong>Firefox</strong> can also be used as a renderer but has some serious limitations (<em>so don't use it for the moment</em>):\n<ul>\n<li>Impossibility to perform multiple screenshots at the time: no multi-instance of the firefox process</li>\n<li>No incognito mode, using webscreenshot will pollute your browsing history</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>Embedding screenshot URL in image (requires <code>ImageMagick</code>)</li>\n</ul>\n<h2>Usage</h2>\n<p>Put your targets in a text file and pass it with the <code>-i</code> option, or as a positional argument if you have just a single URL.<br>\nScreenshots will be available, by default, in your current <code>./screenshots/</code> directory.<br>\nAccepted input formats are the following:</p>\n<pre><code>http(s)://domain_or_ip:port(/resource)\ndomain_or_ip:port(/resource)\ndomain_or_ip(/resource)\n</code></pre>\n<h3>Options</h3>\n<pre><code>webscreenshot.py version 2.8\n\nusage: webscreenshot.py [-h] [-i INPUT_FILE] [-o OUTPUT_DIRECTORY]\n                        [-w WORKERS] [-v] [-p PORT] [-s] [-m]\n                        [-r {phantomjs,chrome,chromium,firefox}]\n                        [--renderer-binary RENDERER_BINARY] [--no-xserver]\n                        [--window-size WINDOW_SIZE]\n                        [-f {pdf,png,jpg,jpeg,bmp,ppm}] [-q [0-100]]\n                        [--ajax-max-timeouts AJAX_MAX_TIMEOUTS] [--crop CROP]\n                        [-l] [--label-size LABEL_SIZE]\n                        [--label-bg-color LABEL_BG_COLOR]\n                        [--imagemagick-binary IMAGEMAGICK_BINARY] [-c COOKIE]\n                        [-a HEADER] [-u HTTP_USERNAME] [-b HTTP_PASSWORD]\n                        [-P PROXY] [-A PROXY_AUTH] [-T PROXY_TYPE]\n                        [-t TIMEOUT]\n                        [URL]\n\noptional arguments:\n  -h, --help            show this help message and exit\n\nMain parameters:\n  URL                   Single URL target given as a positional argument\n  -i INPUT_FILE, --input-file INPUT_FILE\n                        &lt;INPUT_FILE&gt; text file containing the target list. Ex:\n                        list.txt\n  -o OUTPUT_DIRECTORY, --output-directory OUTPUT_DIRECTORY\n                        &lt;OUTPUT_DIRECTORY&gt; (optional): screenshots output\n                        directory (default './screenshots/')\n  -w WORKERS, --workers WORKERS\n                        &lt;WORKERS&gt; (optional): number of parallel execution\n                        workers (default 4)\n  -v, --verbosity       &lt;VERBOSITY&gt; (optional): verbosity level, repeat it to\n                        increase the level { -v INFO, -vv DEBUG } (default\n                        verbosity ERROR)\n\nInput processing parameters:\n  -p PORT, --port PORT  &lt;PORT&gt; (optional): use the specified port for each\n                        target in the input list. Ex: -p 80\n  -s, --ssl             &lt;SSL&gt; (optional): enforce ssl for every connection\n  -m, --multiprotocol   &lt;MULTIPROTOCOL&gt; (optional): perform screenshots over\n                        HTTP and HTTPS for each target\n\nScreenshot renderer parameters:\n  -r {phantomjs,chrome,chromium,firefox}, --renderer {phantomjs,chrome,chromium,firefox}\n                        &lt;RENDERER&gt; (optional): renderer to use among\n                        'phantomjs' (legacy but best results), 'chrome',\n                        'chromium', 'firefox' (version &gt; 57) (default\n                        'phantomjs')\n  --renderer-binary RENDERER_BINARY\n                        &lt;RENDERER_BINARY&gt; (optional): path to the renderer\n                        executable if it cannot be found in $PATH\n  --no-xserver          &lt;NO_X_SERVER&gt; (optional): if you are running without\n                        an X server, will use xvfb-run to execute the renderer\n\nScreenshot image parameters:\n  --window-size WINDOW_SIZE\n                        &lt;WINDOW_SIZE&gt; (optional): width and height of the\n                        screen capture (default '1200,800')\n  -f {pdf,png,jpg,jpeg,bmp,ppm}, --format {pdf,png,jpg,jpeg,bmp,ppm}\n                        &lt;FORMAT&gt; (optional, phantomjs only): specify an output\n                        image file format, \"pdf\", \"png\", \"jpg\", \"jpeg\", \"bmp\"\n                        or \"ppm\" (default 'png')\n  -q [0-100], --quality [0-100]\n                        &lt;QUALITY&gt; (optional, phantomjs only): specify the\n                        output image quality, an integer between 0 and 100\n                        (default 75)\n  --ajax-max-timeouts AJAX_MAX_TIMEOUTS\n                        &lt;AJAX_MAX_TIMEOUTS&gt; (optional, phantomjs only): per\n                        AJAX request, and max URL timeout in milliseconds\n                        (default '1400,1800')\n  --crop CROP           &lt;CROP&gt; (optional, phantomjs only): rectangle &lt;t,l,w,h&gt;\n                        to crop the screen capture to (default to WINDOW_SIZE:\n                        '0,0,w,h'), only numbers, w(idth) and h(eight). Ex.\n                        \"10,20,w,h\"\n\nScreenshot label parameters:\n  -l, --label           &lt;LABEL&gt; (optional): for each screenshot, create\n                        another one displaying inside the target URL (requires\n                        imagemagick)\n  --label-size LABEL_SIZE\n                        &lt;LABEL_SIZE&gt; (optional): font size for the label\n                        (default 60)\n  --label-bg-color LABEL_BG_COLOR\n                        &lt;LABEL_BACKGROUND_COLOR&gt; (optional): label imagemagick\n                        background color (default NavajoWhite)\n  --imagemagick-binary IMAGEMAGICK_BINARY\n                        &lt;LABEL_BINARY&gt; (optional): path to the imagemagick\n                        binary (magick or convert) if it cannot be found in\n                        $PATH\n\nHTTP parameters:\n  -c COOKIE, --cookie COOKIE\n                        &lt;COOKIE_STRING&gt; (optional): cookie string to add. Ex:\n                        -c \"JSESSIONID=1234; YOLO=SWAG\"\n  -a HEADER, --header HEADER\n                        &lt;HEADER&gt; (optional): custom or additional header.\n                        Repeat this option for every header. Ex: -a \"Host:\n                        localhost\" -a \"Foo: bar\"\n  -u HTTP_USERNAME, --http-username HTTP_USERNAME\n                        &lt;HTTP_USERNAME&gt; (optional): specify a username for\n                        HTTP Basic Authentication.\n  -b HTTP_PASSWORD, --http-password HTTP_PASSWORD\n                        &lt;HTTP_PASSWORD&gt; (optional): specify a password for\n                        HTTP Basic Authentication.\n\nConnection parameters:\n  -P PROXY, --proxy PROXY\n                        &lt;PROXY&gt; (optional): specify a proxy. Ex: -P\n                        http://proxy.company.com:8080\n  -A PROXY_AUTH, --proxy-auth PROXY_AUTH\n                        &lt;PROXY_AUTH&gt; (optional): provides authentication\n                        information for the proxy. Ex: -A user:password\n  -T PROXY_TYPE, --proxy-type PROXY_TYPE\n                        &lt;PROXY_TYPE&gt; (optional): specifies the proxy type,\n                        \"http\" (default), \"none\" (disable completely), or\n                        \"socks5\". Ex: -T socks\n  -t TIMEOUT, --timeout TIMEOUT\n                        &lt;TIMEOUT&gt; (optional): renderer execution timeout in\n                        seconds (default 30 sec)\n</code></pre>\n<h3>Examples</h3>\n<pre><code>list.txt\n--------\nhttp://google.fr\nhttps://216.58.213.131\n216.58.213.131\nhttps://duckduckgo.com/robots.txt\n\n\nDefault execution with a list\n-----------------------------\n$ python webscreenshot.py -i list.txt\nwebscreenshot.py version 2.3\n\n[+] 4 URLs to be screenshot\n[+] 4 actual URLs screenshot\n[+] 0 error(s)\n\n\nDefault execution with a single URL\n-----------------------------------\n$ python webscreenshot.py -v google.fr\nwebscreenshot.py version 2.3\n\n[INFO][General] 'google.fr' has been formatted as 'http://google.fr:80' with supplied overriding options\n[+] 1 URLs to be screenshot\n[INFO][http://google.fr:80] Screenshot OK\n\n[+] 1 actual URLs screenshot\n[+] 0 error(s)\n\n\nIncreasing verbosity level execution\n-----------------------------------\n$ python webscreenshot.py -i list.txt -v\nwebscreenshot.py version 2.3\n\n[INFO][General] 'http://google.fr' has been formatted as 'http://google.fr:80' with supplied overriding options\n[INFO][General] 'https://216.58.213.131' has been formatted as 'https://216.58.213.131:443' with supplied overriding options\n[INFO][General] '216.58.213.131' has been formatted as 'http://216.58.213.131:80' with supplied overriding options\n[INFO][General] 'https://duckduckgo.com/robots.txt' has been formatted as 'https://duckduckgo.com:443/robots.txt' with supplied overriding options\n[+] 4 URLs to be screenshot\n[INFO][https://duckduckgo.com:443/robots.txt] Screenshot OK\n\n[INFO][http://216.58.213.131:80] Screenshot OK\n\n[INFO][https://216.58.213.131:443] Screenshot OK\n\n[INFO][http://google.fr:80] Screenshot OK\n\n[+] 4 actual URLs screenshot\n[+] 0 error(s)\n\n\nResults\n-------\n$ ls -l screenshots/\ntotal 187\n-rwxrwxrwx 1 root root 53805 May 19 16:04 http_216.58.213.131_80.png\n-rwxrwxrwx 1 root root 53805 May 19 16:05 http_google.fr_80.png\n-rwxrwxrwx 1 root root 53805 May 19 16:04 https_216.58.213.131_443.png\n-rwxrwxrwx 1 root root 27864 May 19 16:04 https_duckduckgo.com_443_robots.txt.png\n</code></pre>\n<h3>Supported options by renderers</h3>\n<p>Options not listed here below are supported by every current renderer</p>\n<table>\n<thead>\n<tr>\n<th align=\"center\"><strong>Option category</strong></th>\n<th><strong>Option</strong></th>\n<th align=\"center\"><strong>PhantomJS renderer</strong></th>\n<th align=\"center\"><strong>Chrome / Chromium renderer</strong></th>\n<th align=\"center\"><strong>Firefox renderer</strong></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><strong>Screenshot parameters</strong></td>\n<td></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>format (<code>-f</code>)</td>\n<td align=\"center\"><a href=\"https://web.archive.org/web/20200111184123/https://phantomjs.org/api/webpage/method/render.html\" rel=\"nofollow\"><strong>Yes</strong></a></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>quality (<code>-q</code>)</td>\n<td align=\"center\"><a href=\"https://web.archive.org/web/20200111184123/https://phantomjs.org/api/webpage/method/render.html\" rel=\"nofollow\"><strong>Yes</strong></a></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>ajax and request timeouts (<code>--ajax-max-timeouts</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>crop (<code>--crop</code>)</td>\n<td align=\"center\"><a href=\"https://web.archive.org/web/20200111184050/https://phantomjs.org/api/webpage/property/clip-rect.html\" rel=\"nofollow\"><strong>Yes</strong></a></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><strong>HTTP parameters</strong></td>\n<td></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>cookie (<code>-c</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>header (<code>-a</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>http_username (<code>-u</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>http_password (<code>-b</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"><strong>Connection parameters</strong></td>\n<td></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>proxy (<code>-P</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>proxy_auth (<code>-A</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>proxy_type (<code>-T</code>)</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n<td align=\"center\"></td>\n</tr>\n<tr>\n<td align=\"center\"></td>\n<td>Ability to screenshot a HTTPS website with a non-publicly-signed certificate</td>\n<td align=\"center\"><strong>Yes</strong></td>\n<td align=\"center\">No</td>\n<td align=\"center\">No</td>\n</tr></tbody></table>\n<h2>Requirements</h2>\n<ul>\n<li>A Python interpreter with version 2.7 or 3.X</li>\n<li>The webscreenshot python script:\n<ul>\n<li>The <strong>easiest way</strong> to setup it: <code>pip install webscreenshot</code> and then directly use <code>$ webscreenshot</code></li>\n<li>Or git clone that repository and <code>pip install -r requirements.txt</code> and then <code>python webscreenshot.py</code></li>\n</ul>\n</li>\n<li>The PhantomJS tool with at least version 2: follow the <a href=\"https://github.com/maaaaz/webscreenshot/wiki/Phantomjs-installation\" rel=\"nofollow\">installation guide</a> and check the <a href=\"https://github.com/maaaaz/webscreenshot/wiki/FAQ\" rel=\"nofollow\">FAQ</a> if necessary</li>\n<li>Chrome, Chromium or Firefox &gt; 57 if you want to use one of these renderers</li>\n<li><code>xvfb</code> if you want to run <code>webscreenshot</code> in an headless OS: use the <code>--no-xserver</code> webscreenshot option to ease everything</li>\n<li><code>ImageMagick</code> binary (<code>magick</code> or <code>convert</code>) if you want to embed URL in screenshots with the <code>--label</code> option: follow the <a href=\"https://github.com/maaaaz/webscreenshot/wiki/ImageMagick-installation\" rel=\"nofollow\">installation guide</a></li>\n</ul>\n<h2>Changelog</h2>\n<ul>\n<li>version 2.9 - 01/26/2020: Few fixes</li>\n<li>version 2.8 - 01/11/2020: Few fixes, ajax timeouts + crop + label size + label font options added, default values for ajaxTimeout and maxTimeout changed</li>\n<li>version 2.7 - 01/04/2020: URL embedding in screenshot option added</li>\n<li>version 2.6 - 12/27/2019: Few fixes</li>\n<li>version 2.5 - 09/22/2019: Image quality and format options added, PhantomJS useragent updated, modern TLD support</li>\n<li>version 2.4 - 05/30/2019: Few fixes for Windows support</li>\n<li>version 2.3 - 05/19/2019: Python 3 compatibility, Firefox renderer added, no-xserver option added</li>\n<li>version 2.2 - 08/13/2018: Chrome and Chromium renderers support and single URL support</li>\n<li>version 2.1 - 01/14/2018: Multiprotocol option addition and PyPI packaging</li>\n<li>version 2.0 - 03/08/2017: Adding proxy-type option</li>\n<li>version 1.9 - 01/10/2017: Using ALL SSL/TLS ciphers</li>\n<li>version 1.8 - 07/05/2015: Option groups definition</li>\n<li>version 1.7 - 06/28/2015: HTTP basic authentication support + loglevel option changed to verbosity</li>\n<li>version 1.6 - 04/23/2015: Transparent background fix</li>\n<li>version 1.5 - 01/11/2015: Cookie and custom HTTP header support</li>\n<li>version 1.4 - 10/12/2014: url-to-image PhantomJS script integration + few bugs corrected</li>\n<li>version 1.3 - 08/05/2014: Windows support + few bugs corrected</li>\n<li>version 1.2 - 04/27/2014: Few bugs corrected</li>\n<li>version 1.1 - 04/21/2014: Changed the script to use PhantomJS instead of the buggy wkhtml binary</li>\n<li>version 1.0 - 01/12/2014: Initial commit</li>\n</ul>\n<h2>Copyright and license</h2>\n<p>webscreenshot is free software: you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation, either version 3 of the License, or (at your option) any later version.</p>\n<p>webscreenshot is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.</p>\n<p>See the GNU General Public License for more details.</p>\n<p>You should have received a copy of the GNU General Public License along with webscreenshot.\nIf not, see <a href=\"http://www.gnu.org/licenses/\" rel=\"nofollow\">http://www.gnu.org/licenses/</a>.</p>\n<h2>Contact</h2>\n<ul>\n<li>Thomas Debize &lt; tdebize at mail d0t com &gt;</li>\n</ul>\n\n          </div>"}, "last_serial": 6522483, "releases": {"2.1": [{"comment_text": "", "digests": {"md5": "9efbc0c76dca31c3a325a18becf5ca53", "sha256": "3d5be0c5b3123c5cacd1ffa2f5a2488a84291e7f0ad2373d4337058410522d12"}, "downloads": -1, "filename": "webscreenshot-2.1.tar.gz", "has_sig": false, "md5_digest": "9efbc0c76dca31c3a325a18becf5ca53", "packagetype": "sdist", "python_version": "source", "requires_python": "<3", "size": 14812, "upload_time": "2018-01-14T13:32:12", "upload_time_iso_8601": "2018-01-14T13:32:12.776068Z", "url": "https://files.pythonhosted.org/packages/c6/16/27590da3c0e679d42222a9be450a8503e4e35f75856397b03b54f81894d6/webscreenshot-2.1.tar.gz", "yanked": false}], "2.2.1": [{"comment_text": "", "digests": {"md5": "a0166019fc3b87885d7703f1ff66a49c", "sha256": "301a21c17a12c213ca5acfb4da7b14cd2954f79b061ae8855648e5d0f669f579"}, "downloads": -1, "filename": "webscreenshot-2.2.1.tar.gz", "has_sig": false, "md5_digest": "a0166019fc3b87885d7703f1ff66a49c", "packagetype": "sdist", "python_version": "source", "requires_python": "<3", "size": 16752, "upload_time": "2018-08-13T16:50:20", "upload_time_iso_8601": "2018-08-13T16:50:20.989534Z", "url": "https://files.pythonhosted.org/packages/80/b3/7c626c375c3e1e00633857edaade1456fa5fce7fb43729201f335ca04499/webscreenshot-2.2.1.tar.gz", "yanked": false}], "2.3": [{"comment_text": "", "digests": {"md5": "35be1afd0d6b881fc516c8120fb0c074", "sha256": "5a4cbc255de4111d04bfacfd68cf95676323cb392727ce2591642c63569e2710"}, "downloads": -1, "filename": "webscreenshot-2.3.tar.gz", "has_sig": false, "md5_digest": "35be1afd0d6b881fc516c8120fb0c074", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 18389, "upload_time": "2019-05-19T14:33:12", "upload_time_iso_8601": "2019-05-19T14:33:12.480479Z", "url": "https://files.pythonhosted.org/packages/6a/db/64214c95bd25091329b202790bb1ba70ccb0277f80e9904cb78bb455b2a1/webscreenshot-2.3.tar.gz", "yanked": false}], "2.4": [{"comment_text": "", "digests": {"md5": "959b0e1b045a8d474cc1e20865c4a6c9", "sha256": "e77890157daaee0ecd7fc4bbac6c340015ca874baac7ab5b36d2d258f9667a78"}, "downloads": -1, "filename": "webscreenshot-2.4.tar.gz", "has_sig": false, "md5_digest": "959b0e1b045a8d474cc1e20865c4a6c9", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 18496, "upload_time": "2019-05-30T16:16:33", "upload_time_iso_8601": "2019-05-30T16:16:33.489838Z", "url": "https://files.pythonhosted.org/packages/86/e6/798fc366309010e432526bb3689fa2cab98ea50cbe6ea2444a6eb5d22cd5/webscreenshot-2.4.tar.gz", "yanked": false}], "2.5": [{"comment_text": "", "digests": {"md5": "c2478c2c291b520bf467b98bb6612e74", "sha256": "76156c6985583275b79f211b504330317cd70548238d94e7226582f3932b6e88"}, "downloads": -1, "filename": "webscreenshot-2.5.tar.gz", "has_sig": false, "md5_digest": "c2478c2c291b520bf467b98bb6612e74", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 19968, "upload_time": "2019-09-22T14:08:04", "upload_time_iso_8601": "2019-09-22T14:08:04.155124Z", "url": "https://files.pythonhosted.org/packages/90/b1/e06c979d23b8ac5ee992778d58918fd118479477ccd24f6987fa2c5e04fa/webscreenshot-2.5.tar.gz", "yanked": false}], "2.6": [{"comment_text": "", "digests": {"md5": "d5885ea7b116ce7203d513d2626b4e3f", "sha256": "deb7dbe8862e21461e2f5bffe6a0321032ee6eb76abed59d500ce2dc023027e5"}, "downloads": -1, "filename": "webscreenshot-2.6.tar.gz", "has_sig": false, "md5_digest": "d5885ea7b116ce7203d513d2626b4e3f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 20041, "upload_time": "2019-12-27T19:17:39", "upload_time_iso_8601": "2019-12-27T19:17:39.900824Z", "url": "https://files.pythonhosted.org/packages/91/2a/8b9209bf51d19970b25cb177b423bdbf689b07477437e02feafc9c1c648f/webscreenshot-2.6.tar.gz", "yanked": false}], "2.7": [{"comment_text": "", "digests": {"md5": "f82f286a249e6201496c9ad34b82531e", "sha256": "c18fb577758efce0aac437828de6adbdade3dd421c123bbd26a0efa3cf64eb73"}, "downloads": -1, "filename": "webscreenshot-2.7.tar.gz", "has_sig": false, "md5_digest": "f82f286a249e6201496c9ad34b82531e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 20696, "upload_time": "2020-01-04T18:52:35", "upload_time_iso_8601": "2020-01-04T18:52:35.469389Z", "url": "https://files.pythonhosted.org/packages/01/a3/9b976e7cb36801ad7de78b1c2844c9faf2716ae5ca3d561773558985c844/webscreenshot-2.7.tar.gz", "yanked": false}], "2.8": [{"comment_text": "", "digests": {"md5": "615bcf2d76470b39b906503868b9da4b", "sha256": "d39e695fb2b0090cb85499947fb3f1f3ba5204c74da56a0ac186b1fcbe064dc7"}, "downloads": -1, "filename": "webscreenshot-2.8.tar.gz", "has_sig": false, "md5_digest": "615bcf2d76470b39b906503868b9da4b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 23695, "upload_time": "2020-01-11T18:58:41", "upload_time_iso_8601": "2020-01-11T18:58:41.016156Z", "url": "https://files.pythonhosted.org/packages/ee/af/be9a8172154d81586ab59cc92eb5874832cb28074aff7da97c5bd360eece/webscreenshot-2.8.tar.gz", "yanked": false}], "2.9": [{"comment_text": "", "digests": {"md5": "d30466c6a453e20d652208f82eabf86e", "sha256": "98bd502760b45f2f0cbe60ea1e9804e9528cb31a9641a669faf03c59c57b7345"}, "downloads": -1, "filename": "webscreenshot-2.9.tar.gz", "has_sig": false, "md5_digest": "d30466c6a453e20d652208f82eabf86e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 23823, "upload_time": "2020-01-26T16:47:29", "upload_time_iso_8601": "2020-01-26T16:47:29.141185Z", "url": "https://files.pythonhosted.org/packages/88/f6/8a72b0bac28b3c8c68c773e2f659d4bc923c92f22c229f2ffe13b636a377/webscreenshot-2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "d30466c6a453e20d652208f82eabf86e", "sha256": "98bd502760b45f2f0cbe60ea1e9804e9528cb31a9641a669faf03c59c57b7345"}, "downloads": -1, "filename": "webscreenshot-2.9.tar.gz", "has_sig": false, "md5_digest": "d30466c6a453e20d652208f82eabf86e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=2.7", "size": 23823, "upload_time": "2020-01-26T16:47:29", "upload_time_iso_8601": "2020-01-26T16:47:29.141185Z", "url": "https://files.pythonhosted.org/packages/88/f6/8a72b0bac28b3c8c68c773e2f659d4bc923c92f22c229f2ffe13b636a377/webscreenshot-2.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:30:47 2020"}