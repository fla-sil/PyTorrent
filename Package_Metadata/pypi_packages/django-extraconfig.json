{"info": {"author": "Sever Banesiu", "author_email": "banesiu.sever@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "django-extraconfig\n==================\n\nWith ``django-extraconfig`` it's easy to extend a Django project\n``settings.py`` file. The only function provided by this module is\n``load_extraconfig(entry_point_name, module_name)``.\n\n``extraconfig.load(entry_point_name, module_name)``\n    Loads all uppercase values from the entry point modules\n    into the module with the name ``module_name`` overriding\n    any existing values.\n\nUsage\n=====\n\nAt the bottom of your ``settings.py`` file add::\n\n    try:\n        import extraconfig\n    except ImportError:\n        pass\n    else:\n        extraconfig.load(<entry_point_name>, __name__)\n\n``entry_point_name`` can be any string value but it's a good practice to\ninclude the projectname in order to avoid name collisions. For example to\nload the extra configuration showed below, ``entry_point_name`` should be\nset to *\"my_project.extraconfig\"*.\n\nCreating an extra configuration\n===============================\n\nIt's easy to create an extra configuration module. The minimal project\nlayout is composed of two files: ``setup.py`` and the module file. The module\nwill be installed using the ``setup.py`` file just like any other regular\nPython module. In order for ``django-extraconfig`` to know that this module\nshould be used to override your Django configuration in ``setup.py`` you must\nadd it in the entry point config.\n\nA minimal ``setup.py`` file can look like this::\n\n    from setuptools import setup\n\n    setup(\n        name='my_extra_config',\n        version='0.1',\n        py_modules=['my_extra_config'],\n        entry_points = {\n            'my_project.extraconfig': 'main = my_extra_config'\n        }\n    )\n\nNow you can add a ``my_extra_config.py`` file with the settings you want to\noverride::\n\n    DEBUG = True\n\nInstalling the extra configuration\n==================================\n\nOnce the extra configuration project is ready you can run::\n\n    python setup.py develop\n\nThis will install the extra configuration module in development mode, meaning\nyou can edit the extra settings and all the changes will be visible without\nreinstalling it.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/pbs/django-extraconfig/", "keywords": "Django settings", "license": "BSD", "maintainer": null, "maintainer_email": null, "name": "django-extraconfig", "package_url": "https://pypi.org/project/django-extraconfig/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/django-extraconfig/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://github.com/pbs/django-extraconfig/"}, "release_url": "https://pypi.org/project/django-extraconfig/0.1.1/", "requires_dist": null, "requires_python": null, "summary": "An entry-point based solution to extendthe Django configuration.", "version": "0.1.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"django-extraconfig\">\n<h2>django-extraconfig</h2>\n<p>With <tt><span class=\"pre\">django-extraconfig</span></tt> it\u2019s easy to extend a Django project\n<tt>settings.py</tt> file. The only function provided by this module is\n<tt>load_extraconfig(entry_point_name, module_name)</tt>.</p>\n<dl>\n<dt><tt>extraconfig.load(entry_point_name, module_name)</tt></dt>\n<dd>Loads all uppercase values from the entry point modules\ninto the module with the name <tt>module_name</tt> overriding\nany existing values.</dd>\n</dl>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>At the bottom of your <tt>settings.py</tt> file add:</p>\n<pre>try:\n    import extraconfig\nexcept ImportError:\n    pass\nelse:\n    extraconfig.load(&lt;entry_point_name&gt;, __name__)\n</pre>\n<p><tt>entry_point_name</tt> can be any string value but it\u2019s a good practice to\ninclude the projectname in order to avoid name collisions. For example to\nload the extra configuration showed below, <tt>entry_point_name</tt> should be\nset to <em>\u201cmy_project.extraconfig\u201d</em>.</p>\n</div>\n<div id=\"creating-an-extra-configuration\">\n<h2>Creating an extra configuration</h2>\n<p>It\u2019s easy to create an extra configuration module. The minimal project\nlayout is composed of two files: <tt>setup.py</tt> and the module file. The module\nwill be installed using the <tt>setup.py</tt> file just like any other regular\nPython module. In order for <tt><span class=\"pre\">django-extraconfig</span></tt> to know that this module\nshould be used to override your Django configuration in <tt>setup.py</tt> you must\nadd it in the entry point config.</p>\n<p>A minimal <tt>setup.py</tt> file can look like this:</p>\n<pre>from setuptools import setup\n\nsetup(\n    name='my_extra_config',\n    version='0.1',\n    py_modules=['my_extra_config'],\n    entry_points = {\n        'my_project.extraconfig': 'main = my_extra_config'\n    }\n)\n</pre>\n<p>Now you can add a <tt>my_extra_config.py</tt> file with the settings you want to\noverride:</p>\n<pre>DEBUG = True\n</pre>\n</div>\n<div id=\"installing-the-extra-configuration\">\n<h2>Installing the extra configuration</h2>\n<p>Once the extra configuration project is ready you can run:</p>\n<pre>python setup.py develop\n</pre>\n<p>This will install the extra configuration module in development mode, meaning\nyou can edit the extra settings and all the changes will be visible without\nreinstalling it.</p>\n</div>\n\n          </div>"}, "last_serial": 726992, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "ef2be7f5e2d4d0b84604a0937a633cd9", "sha256": "2a2f603034155cc4ac92a749052f7ba24d0a76df344214e8f8ed672c25c84107"}, "downloads": -1, "filename": "django-extraconfig-0.1.tar.gz", "has_sig": false, "md5_digest": "ef2be7f5e2d4d0b84604a0937a633cd9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 1876, "upload_time": "2011-09-27T09:29:39", "upload_time_iso_8601": "2011-09-27T09:29:39.976393Z", "url": "https://files.pythonhosted.org/packages/ca/50/322d7446c4ac49601a69825c6c7b6e4703edfa8a3aace4766934ba39330a/django-extraconfig-0.1.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "63899d76f9f7a6e18645af1baf4e6a24", "sha256": "45db7666494ed749022566b4053d5caf302ebe033dcce7ba350e1855e1229f37"}, "downloads": -1, "filename": "django-extraconfig-0.1.1.tar.gz", "has_sig": false, "md5_digest": "63899d76f9f7a6e18645af1baf4e6a24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2011-09-27T09:41:20", "upload_time_iso_8601": "2011-09-27T09:41:20.567528Z", "url": "https://files.pythonhosted.org/packages/13/db/909b9f86b9e1173fee96318efd532487399f4408b214a8531b7d7f624417/django-extraconfig-0.1.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "63899d76f9f7a6e18645af1baf4e6a24", "sha256": "45db7666494ed749022566b4053d5caf302ebe033dcce7ba350e1855e1229f37"}, "downloads": -1, "filename": "django-extraconfig-0.1.1.tar.gz", "has_sig": false, "md5_digest": "63899d76f9f7a6e18645af1baf4e6a24", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2136, "upload_time": "2011-09-27T09:41:20", "upload_time_iso_8601": "2011-09-27T09:41:20.567528Z", "url": "https://files.pythonhosted.org/packages/13/db/909b9f86b9e1173fee96318efd532487399f4408b214a8531b7d7f624417/django-extraconfig-0.1.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:36:15 2020"}