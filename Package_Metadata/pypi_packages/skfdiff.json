{"info": {"author": "N. Cellier", "author_email": "contact@nicolas-cellier.net", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "# Scikit-fdiff / skfdiff (formerly Triflow)\n\nThe full documentation is available on [read the doc.](https://scikit-fdiff.readthedocs.io/en/latest/)\n\n|                                                                       master                                                                       |                                                                     dev                                                                      |\n| :------------------------------------------------------------------------------------------------------------------------------------------------: | :------------------------------------------------------------------------------------------------------------------------------------------: |\n| [![pipeline status](https://gitlab.com/celliern/scikit-fdiff/badges/master/pipeline.svg)](https://gitlab.com/celliern/scikit-fdiff/commits/master) | [![pipeline status](https://gitlab.com/celliern/scikit-fdiff/badges/dev/pipeline.svg)](https://gitlab.com/celliern/scikit-fdiff/commits/dev) |\n\n- [Scikit-fdiff / skfdiff (formerly Triflow)](#scikit-fdiff--skfdiff-formerly-triflow)\n  - [Installation](#installation)\n    - [External requirements](#external-requirements)\n    - [via PyPI](#via-pypi)\n    - [via github](#via-github)\n  - [Introduction](#introduction)\n    - [Rational](#rational)\n  - [Model writing](#model-writing)\n    - [Toy examples (more ambitious one are in the doc)](#toy-examples-more-ambitious-one-are-in-the-doc)\n      - [1D advection / diffusion system, Dirichlet boundary](#1d-advection--diffusion-system-dirichlet-boundary)\n      - [2D advection / diffusion system, mixed robin / periodic boundary](#2d-advection--diffusion-system-mixed-robin--periodic-boundary)\n    - [Contributing](#contributing)\n    - [Code of Conduct](#code-of-conduct)\n\n## Installation\n\n### External requirements\n\nThis library is written for python &gt;= 3.6.\n\nOn v0.6.0, it is possible to choose between numpy and numba\n(which provide similar features). numpy will be slower but with\nno compilation time, which is handy for testing and prototyping.\nOn other hand, numba use a JIT compilation, and give access to\nfaster and parallized routines in the cost of an extra dependency\nand a warm-up time.\n\n### via PyPI\n\n```bash\npip install skfdiff[numba,interactive]\n```\n\nwill install the package and\n\n```bash\npip install skfdiff --upgrade\n```\n\nwill update an old version of the library.\n\n### via github\n\nYou can install the latest version of the library\nusing pip and the github repository:\n\n```bash\npip install git+git://github.com/locie/skfdiff.git\n```\n\n## Introduction\n\n### Rational\n\nThe aim of this library is to have a (relatively) easy way to write\ntransient dynamic systems finite difference discretization, with\nfast temporal solvers.\n\nThe main two parts of the library are:\n\n- symbolic tools defining the spatial discretization, with boundary\n    taking into account in a separated part\n- a fast temporal solver written in order to use the sparsity of the\n    finite difference method to reduce the memory and CPU usage during\n    the solving\n\nMoreover, extra tools are provided and the library is written in a\nmodular way, allowing an easy extension of these different parts (see\nthe plug-in module of the library.)\n\nThe library fits well with an interactive usage (in a jupyter notebook).\nThe dependency list is actually larger, but on-going work target a\nreduction of the stack complexity.\n\n## Model writing\n\nAll the models are written as function generating the F\nvector and the Jacobian matrix of the model defined as ``dtU = F(U)``.\n\nThe symbolic model is written as a simple mathematic equation. For\nexample, a diffusion advection model can be written as:\n\n```python\nfrom skfdiff import Model\n\nequation_diff = \"k * dxxU - c * dxU\"\ndependent_var = \"U\"\nphysical_parameters = [\"k\", \"c\"]\n\nmodel = Model(equation_diff, dependent_var,\n              physical_parameters)\n```\n\n### Toy examples (more ambitious one are in the doc)\n\n#### 1D advection / diffusion system, Dirichlet boundary\n\n```python\n>>> import pylab as pl\n>>> import numpy as np\n>>> from skfdiff import Model, Simulation\n\n>>> model = Model(\"k * dxxU - c * dxU\",\n...               \"U(x)\", [\"k\", \"c\"],\n...               boundary_conditions={(\"U\", \"x\"): (\"dirichlet\", \"dirichlet\")}\n...               )\n\n>>> x, dx = np.linspace(0, 1, 200, retstep=True)\n>>> U = np.cos(2 * np.pi * x * 5)\n\n# The fields are ``xarray.Dataset`` objects, and all the\n# tools / methods available in the ``xarray`` lib can be\n# applied to the skfdiff.Fields.\n>>> fields = model.Fields(x=x, U=U, k=0.001, c=0.3)\n\n# fix the boundary values for the dirichlet condition\n>>> fields[\"U\"][0] = 1\n>>> fields[\"U\"][-1] = 0\n\n>>> t = 0\n>>> dt = 5E-1\n>>> tmax = 2.5\n\n>>> simul = Simulation(model, fields, dt, tmax=tmax)\n\n# The containers are in-memory or persistant\n# xarray Dataset with all or some time-steps available.\n>>> container = simul.attach_container()\n>>> simul.run()\n(2.5, <xarray.Dataset>\n Dimensions:  (x: 200)\n Coordinates:\n   * x        (x) float64 0.0 ... 1.0\n Data variables:\n     U        (x) float64 ...\n     k        float64 0.001\n     c        float64 0.3)\n\n>>> for t in container.data.t:\n...     fig = pl.figure()\n...     plot = container.data[\"U\"].sel(t=t).plot()\n\n```\n\n#### 2D advection / diffusion system, mixed robin / periodic boundary\n\n```python\n>>> import pylab as pl\n>>> import numpy as np\n>>> from skfdiff import Model, Simulation\n\n# some specialized scheme as the upwind scheme as been implemented.\n# as the problem as a strong advective component, we can use it\n# to reduce the numerical instabilities.\n# the dirichlet condition mean that the boundary will stay fix,\n# keeping the initial value.\n>>> model = Model(\"k * (dxxU + dyyU) - (upwind(cx, U, x, 2) + upwind(cy, U, y, 2))\",\n...               \"U(x, y)\", [\"k\", \"cx\", \"cy\"],\n...               boundary_conditions={(\"U\", \"x\"): (\"dxU - (U - sin(y) * cos(t))\", \"dxU - 5\"),\n...                                    (\"U\", \"y\"):  \"periodic\"})\n\n>>> x = np.linspace(0, 10, 56)\n>>> y = np.linspace(-np.pi, np.pi, 32)\n\n>>> U = np.zeros((x.size, y.size))\n>>> fields = model.Fields(x=x, y=y, U=U, k=0.001, cx=0.8, cy=0.3)\n\n>>> dt = 1.\n>>> tmax = 15.\n\n>>> simul = Simulation(model, fields, dt, tmax=tmax, tol=5E-1)\n>>> container = simul.attach_container()\n\n>>> simul.run()\n(15.0, <xarray.Dataset>\n Dimensions:  (x: 56, y: 32)\n Coordinates:\n   * x        (x) float64 0.0 ... 10.0\n   * y        (y) float64 -3.142 ... 3.142\n Data variables:\n     U        (x, y) float64 ...\n     k        float64 0.001\n     cx       float64 0.8\n     cy       float64 0.3)\n\n>>> for t in np.linspace(0, tmax, 5):\n...     fig = pl.figure()\n...     plot = container.data[\"U\"].sel(t=t, method=\"nearest\").plot()\n\n```\n\n### Contributing\n\nSee [the contribute section of the doc](https://scikit-fdiff.readthedocs.io/en/latest/contribute.html).\n\n### Code of Conduct\n\nSee [the dedicated page](COC.md).", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://gitlab.com/celliern/scikit-fdiff/", "keywords": "PDE,finite-difference,physic,modelling,interactive", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "skfdiff", "package_url": "https://pypi.org/project/skfdiff/", "platform": "", "project_url": "https://pypi.org/project/skfdiff/", "project_urls": {"Homepage": "https://gitlab.com/celliern/scikit-fdiff/"}, "release_url": "https://pypi.org/project/skfdiff/0.6.0/", "requires_dist": null, "requires_python": ">= 3.6", "summary": "Automatic finite difference discretization for 1D PDE with fast temporal solvers.", "version": "0.6.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Scikit-fdiff / skfdiff (formerly Triflow)</h1>\n<p>The full documentation is available on <a href=\"https://scikit-fdiff.readthedocs.io/en/latest/\" rel=\"nofollow\">read the doc.</a></p>\n<table>\n<thead>\n<tr>\n<th align=\"center\">master</th>\n<th align=\"center\">dev</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td align=\"center\"><a href=\"https://gitlab.com/celliern/scikit-fdiff/commits/master\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/29e2fb9a7843b35ff8da5c8b947ab3cb6126a952/68747470733a2f2f6769746c61622e636f6d2f63656c6c6965726e2f7363696b69742d66646966662f6261646765732f6d61737465722f706970656c696e652e737667\"></a></td>\n<td align=\"center\"><a href=\"https://gitlab.com/celliern/scikit-fdiff/commits/dev\" rel=\"nofollow\"><img alt=\"pipeline status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a5c29da1721834b8b2403271ef819c0cfe15f22f/68747470733a2f2f6769746c61622e636f6d2f63656c6c6965726e2f7363696b69742d66646966662f6261646765732f6465762f706970656c696e652e737667\"></a></td>\n</tr></tbody></table>\n<ul>\n<li><a href=\"#scikit-fdiff--skfdiff-formerly-triflow\" rel=\"nofollow\">Scikit-fdiff / skfdiff (formerly Triflow)</a>\n<ul>\n<li><a href=\"#installation\" rel=\"nofollow\">Installation</a>\n<ul>\n<li><a href=\"#external-requirements\" rel=\"nofollow\">External requirements</a></li>\n<li><a href=\"#via-pypi\" rel=\"nofollow\">via PyPI</a></li>\n<li><a href=\"#via-github\" rel=\"nofollow\">via github</a></li>\n</ul>\n</li>\n<li><a href=\"#introduction\" rel=\"nofollow\">Introduction</a>\n<ul>\n<li><a href=\"#rational\" rel=\"nofollow\">Rational</a></li>\n</ul>\n</li>\n<li><a href=\"#model-writing\" rel=\"nofollow\">Model writing</a>\n<ul>\n<li><a href=\"#toy-examples-more-ambitious-one-are-in-the-doc\" rel=\"nofollow\">Toy examples (more ambitious one are in the doc)</a>\n<ul>\n<li><a href=\"#1d-advection--diffusion-system-dirichlet-boundary\" rel=\"nofollow\">1D advection / diffusion system, Dirichlet boundary</a></li>\n<li><a href=\"#2d-advection--diffusion-system-mixed-robin--periodic-boundary\" rel=\"nofollow\">2D advection / diffusion system, mixed robin / periodic boundary</a></li>\n</ul>\n</li>\n<li><a href=\"#contributing\" rel=\"nofollow\">Contributing</a></li>\n<li><a href=\"#code-of-conduct\" rel=\"nofollow\">Code of Conduct</a></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h2>Installation</h2>\n<h3>External requirements</h3>\n<p>This library is written for python &gt;= 3.6.</p>\n<p>On v0.6.0, it is possible to choose between numpy and numba\n(which provide similar features). numpy will be slower but with\nno compilation time, which is handy for testing and prototyping.\nOn other hand, numba use a JIT compilation, and give access to\nfaster and parallized routines in the cost of an extra dependency\nand a warm-up time.</p>\n<h3>via PyPI</h3>\n<pre>pip install skfdiff<span class=\"o\">[</span>numba,interactive<span class=\"o\">]</span>\n</pre>\n<p>will install the package and</p>\n<pre>pip install skfdiff --upgrade\n</pre>\n<p>will update an old version of the library.</p>\n<h3>via github</h3>\n<p>You can install the latest version of the library\nusing pip and the github repository:</p>\n<pre>pip install git+git://github.com/locie/skfdiff.git\n</pre>\n<h2>Introduction</h2>\n<h3>Rational</h3>\n<p>The aim of this library is to have a (relatively) easy way to write\ntransient dynamic systems finite difference discretization, with\nfast temporal solvers.</p>\n<p>The main two parts of the library are:</p>\n<ul>\n<li>symbolic tools defining the spatial discretization, with boundary\ntaking into account in a separated part</li>\n<li>a fast temporal solver written in order to use the sparsity of the\nfinite difference method to reduce the memory and CPU usage during\nthe solving</li>\n</ul>\n<p>Moreover, extra tools are provided and the library is written in a\nmodular way, allowing an easy extension of these different parts (see\nthe plug-in module of the library.)</p>\n<p>The library fits well with an interactive usage (in a jupyter notebook).\nThe dependency list is actually larger, but on-going work target a\nreduction of the stack complexity.</p>\n<h2>Model writing</h2>\n<p>All the models are written as function generating the F\nvector and the Jacobian matrix of the model defined as <code>dtU = F(U)</code>.</p>\n<p>The symbolic model is written as a simple mathematic equation. For\nexample, a diffusion advection model can be written as:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">skfdiff</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span>\n\n<span class=\"n\">equation_diff</span> <span class=\"o\">=</span> <span class=\"s2\">\"k * dxxU - c * dxU\"</span>\n<span class=\"n\">dependent_var</span> <span class=\"o\">=</span> <span class=\"s2\">\"U\"</span>\n<span class=\"n\">physical_parameters</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s2\">\"k\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">]</span>\n\n<span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"n\">equation_diff</span><span class=\"p\">,</span> <span class=\"n\">dependent_var</span><span class=\"p\">,</span>\n              <span class=\"n\">physical_parameters</span><span class=\"p\">)</span>\n</pre>\n<h3>Toy examples (more ambitious one are in the doc)</h3>\n<h4>1D advection / diffusion system, Dirichlet boundary</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pylab</span> <span class=\"k\">as</span> <span class=\"nn\">pl</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">skfdiff</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Simulation</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"s2\">\"k * dxxU - c * dxU\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>               <span class=\"s2\">\"U(x)\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"k\"</span><span class=\"p\">,</span> <span class=\"s2\">\"c\"</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>               <span class=\"n\">boundary_conditions</span><span class=\"o\">=</span><span class=\"p\">{(</span><span class=\"s2\">\"U\"</span><span class=\"p\">,</span> <span class=\"s2\">\"x\"</span><span class=\"p\">):</span> <span class=\"p\">(</span><span class=\"s2\">\"dirichlet\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dirichlet\"</span><span class=\"p\">)}</span>\n<span class=\"o\">...</span>               <span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">dx</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">retstep</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">U</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">cos</span><span class=\"p\">(</span><span class=\"mi\">2</span> <span class=\"o\">*</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span> <span class=\"o\">*</span> <span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"mi\">5</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The fields are ``xarray.Dataset`` objects, and all the</span>\n<span class=\"c1\"># tools / methods available in the ``xarray`` lib can be</span>\n<span class=\"c1\"># applied to the skfdiff.Fields.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">Fields</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"o\">=</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"n\">c</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># fix the boundary values for the dirichlet condition</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s2\">\"U\"</span><span class=\"p\">][</span><span class=\"mi\">0</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fields</span><span class=\"p\">[</span><span class=\"s2\">\"U\"</span><span class=\"p\">][</span><span class=\"o\">-</span><span class=\"mi\">1</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">t</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"mf\">5E-1</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tmax</span> <span class=\"o\">=</span> <span class=\"mf\">2.5</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">simul</span> <span class=\"o\">=</span> <span class=\"n\">Simulation</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">tmax</span><span class=\"o\">=</span><span class=\"n\">tmax</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># The containers are in-memory or persistant</span>\n<span class=\"c1\"># xarray Dataset with all or some time-steps available.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">simul</span><span class=\"o\">.</span><span class=\"n\">attach_container</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">simul</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"mf\">2.5</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"o\">&gt;</span>\n <span class=\"n\">Dimensions</span><span class=\"p\">:</span>  <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">200</span><span class=\"p\">)</span>\n <span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n   <span class=\"o\">*</span> <span class=\"n\">x</span>        <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"mf\">0.0</span> <span class=\"o\">...</span> <span class=\"mf\">1.0</span>\n <span class=\"n\">Data</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n     <span class=\"n\">U</span>        <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"o\">...</span>\n     <span class=\"n\">k</span>        <span class=\"n\">float64</span> <span class=\"mf\">0.001</span>\n     <span class=\"n\">c</span>        <span class=\"n\">float64</span> <span class=\"mf\">0.3</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"o\">.</span><span class=\"n\">t</span><span class=\"p\">:</span>\n<span class=\"o\">...</span>     <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"n\">plot</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"U\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<h4>2D advection / diffusion system, mixed robin / periodic boundary</h4>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">pylab</span> <span class=\"k\">as</span> <span class=\"nn\">pl</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">import</span> <span class=\"nn\">numpy</span> <span class=\"k\">as</span> <span class=\"nn\">np</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">skfdiff</span> <span class=\"kn\">import</span> <span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">Simulation</span>\n\n<span class=\"c1\"># some specialized scheme as the upwind scheme as been implemented.</span>\n<span class=\"c1\"># as the problem as a strong advective component, we can use it</span>\n<span class=\"c1\"># to reduce the numerical instabilities.</span>\n<span class=\"c1\"># the dirichlet condition mean that the boundary will stay fix,</span>\n<span class=\"c1\"># keeping the initial value.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">model</span> <span class=\"o\">=</span> <span class=\"n\">Model</span><span class=\"p\">(</span><span class=\"s2\">\"k * (dxxU + dyyU) - (upwind(cx, U, x, 2) + upwind(cy, U, y, 2))\"</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>               <span class=\"s2\">\"U(x, y)\"</span><span class=\"p\">,</span> <span class=\"p\">[</span><span class=\"s2\">\"k\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cx\"</span><span class=\"p\">,</span> <span class=\"s2\">\"cy\"</span><span class=\"p\">],</span>\n<span class=\"o\">...</span>               <span class=\"n\">boundary_conditions</span><span class=\"o\">=</span><span class=\"p\">{(</span><span class=\"s2\">\"U\"</span><span class=\"p\">,</span> <span class=\"s2\">\"x\"</span><span class=\"p\">):</span> <span class=\"p\">(</span><span class=\"s2\">\"dxU - (U - sin(y) * cos(t))\"</span><span class=\"p\">,</span> <span class=\"s2\">\"dxU - 5\"</span><span class=\"p\">),</span>\n<span class=\"o\">...</span>                                    <span class=\"p\">(</span><span class=\"s2\">\"U\"</span><span class=\"p\">,</span> <span class=\"s2\">\"y\"</span><span class=\"p\">):</span>  <span class=\"s2\">\"periodic\"</span><span class=\"p\">})</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"mi\">10</span><span class=\"p\">,</span> <span class=\"mi\">56</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"o\">-</span><span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">pi</span><span class=\"p\">,</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">U</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">zeros</span><span class=\"p\">((</span><span class=\"n\">x</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">.</span><span class=\"n\">size</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">fields</span> <span class=\"o\">=</span> <span class=\"n\">model</span><span class=\"o\">.</span><span class=\"n\">Fields</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"o\">=</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"o\">=</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">U</span><span class=\"o\">=</span><span class=\"n\">U</span><span class=\"p\">,</span> <span class=\"n\">k</span><span class=\"o\">=</span><span class=\"mf\">0.001</span><span class=\"p\">,</span> <span class=\"n\">cx</span><span class=\"o\">=</span><span class=\"mf\">0.8</span><span class=\"p\">,</span> <span class=\"n\">cy</span><span class=\"o\">=</span><span class=\"mf\">0.3</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">dt</span> <span class=\"o\">=</span> <span class=\"mf\">1.</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">tmax</span> <span class=\"o\">=</span> <span class=\"mf\">15.</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">simul</span> <span class=\"o\">=</span> <span class=\"n\">Simulation</span><span class=\"p\">(</span><span class=\"n\">model</span><span class=\"p\">,</span> <span class=\"n\">fields</span><span class=\"p\">,</span> <span class=\"n\">dt</span><span class=\"p\">,</span> <span class=\"n\">tmax</span><span class=\"o\">=</span><span class=\"n\">tmax</span><span class=\"p\">,</span> <span class=\"n\">tol</span><span class=\"o\">=</span><span class=\"mf\">5E-1</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">container</span> <span class=\"o\">=</span> <span class=\"n\">simul</span><span class=\"o\">.</span><span class=\"n\">attach_container</span><span class=\"p\">()</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">simul</span><span class=\"o\">.</span><span class=\"n\">run</span><span class=\"p\">()</span>\n<span class=\"p\">(</span><span class=\"mf\">15.0</span><span class=\"p\">,</span> <span class=\"o\">&lt;</span><span class=\"n\">xarray</span><span class=\"o\">.</span><span class=\"n\">Dataset</span><span class=\"o\">&gt;</span>\n <span class=\"n\">Dimensions</span><span class=\"p\">:</span>  <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">:</span> <span class=\"mi\">56</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">:</span> <span class=\"mi\">32</span><span class=\"p\">)</span>\n <span class=\"n\">Coordinates</span><span class=\"p\">:</span>\n   <span class=\"o\">*</span> <span class=\"n\">x</span>        <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"mf\">0.0</span> <span class=\"o\">...</span> <span class=\"mf\">10.0</span>\n   <span class=\"o\">*</span> <span class=\"n\">y</span>        <span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"o\">-</span><span class=\"mf\">3.142</span> <span class=\"o\">...</span> <span class=\"mf\">3.142</span>\n <span class=\"n\">Data</span> <span class=\"n\">variables</span><span class=\"p\">:</span>\n     <span class=\"n\">U</span>        <span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">,</span> <span class=\"n\">y</span><span class=\"p\">)</span> <span class=\"n\">float64</span> <span class=\"o\">...</span>\n     <span class=\"n\">k</span>        <span class=\"n\">float64</span> <span class=\"mf\">0.001</span>\n     <span class=\"n\">cx</span>       <span class=\"n\">float64</span> <span class=\"mf\">0.8</span>\n     <span class=\"n\">cy</span>       <span class=\"n\">float64</span> <span class=\"mf\">0.3</span><span class=\"p\">)</span>\n\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">t</span> <span class=\"ow\">in</span> <span class=\"n\">np</span><span class=\"o\">.</span><span class=\"n\">linspace</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">tmax</span><span class=\"p\">,</span> <span class=\"mi\">5</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">pl</span><span class=\"o\">.</span><span class=\"n\">figure</span><span class=\"p\">()</span>\n<span class=\"o\">...</span>     <span class=\"n\">plot</span> <span class=\"o\">=</span> <span class=\"n\">container</span><span class=\"o\">.</span><span class=\"n\">data</span><span class=\"p\">[</span><span class=\"s2\">\"U\"</span><span class=\"p\">]</span><span class=\"o\">.</span><span class=\"n\">sel</span><span class=\"p\">(</span><span class=\"n\">t</span><span class=\"o\">=</span><span class=\"n\">t</span><span class=\"p\">,</span> <span class=\"n\">method</span><span class=\"o\">=</span><span class=\"s2\">\"nearest\"</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<h3>Contributing</h3>\n<p>See <a href=\"https://scikit-fdiff.readthedocs.io/en/latest/contribute.html\" rel=\"nofollow\">the contribute section of the doc</a>.</p>\n<h3>Code of Conduct</h3>\n<p>See <a href=\"COC.md\" rel=\"nofollow\">the dedicated page</a>.</p>\n\n          </div>"}, "last_serial": 5323206, "releases": {"0.6.0": [{"comment_text": "", "digests": {"md5": "fee3df1270af4f6bc24afaaf35a38ddf", "sha256": "377c4278fa675740a2e87905738ba0bfd4cba606a7bd73be946efe14022182e2"}, "downloads": -1, "filename": "skfdiff-0.6.0.tar.gz", "has_sig": false, "md5_digest": "fee3df1270af4f6bc24afaaf35a38ddf", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 59220, "upload_time": "2019-05-27T17:26:54", "upload_time_iso_8601": "2019-05-27T17:26:54.964756Z", "url": "https://files.pythonhosted.org/packages/36/88/b8e87bbe581170a5e61118cd2efe76804ecef4521b386e1a6658595fa005/skfdiff-0.6.0.tar.gz", "yanked": false}], "0.6.0a2": [{"comment_text": "", "digests": {"md5": "60cebad3435751e0cab9da79f62dee2a", "sha256": "d18439dd50e27def93e4821de78e8c54dffdcfc4cb4e764871f2a49de12c0c1e"}, "downloads": -1, "filename": "skfdiff-0.6.0a2.tar.gz", "has_sig": false, "md5_digest": "60cebad3435751e0cab9da79f62dee2a", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 42718, "upload_time": "2019-02-07T10:58:26", "upload_time_iso_8601": "2019-02-07T10:58:26.157973Z", "url": "https://files.pythonhosted.org/packages/0e/1e/fb8331d44e409be58d8287de421582bc77d76e991ba98f8792f0775b0cfa/skfdiff-0.6.0a2.tar.gz", "yanked": false}], "0.6.0a3": [{"comment_text": "", "digests": {"md5": "b4859becd367f3efdc78315d3f14b4e9", "sha256": "05b96ef56109885b182e449cc8a7723439deceb3012df93f806870db939d2b04"}, "downloads": -1, "filename": "skfdiff-0.6.0a3.tar.gz", "has_sig": false, "md5_digest": "b4859becd367f3efdc78315d3f14b4e9", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.5", "size": 58121, "upload_time": "2019-02-07T13:46:17", "upload_time_iso_8601": "2019-02-07T13:46:17.314163Z", "url": "https://files.pythonhosted.org/packages/79/c7/79d510132323ea7da4e4a71e36599ba9e0905c1d84ead7d2092248288ec0/skfdiff-0.6.0a3.tar.gz", "yanked": false}], "0.6.0rc1": [{"comment_text": "", "digests": {"md5": "93ea514b65a7c37796baa21aff464787", "sha256": "6375d21294d67836cd6051c5865c560c2ef5f36be6456b5885bb9b4867db9255"}, "downloads": -1, "filename": "skfdiff-0.6.0rc1.tar.gz", "has_sig": false, "md5_digest": "93ea514b65a7c37796baa21aff464787", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 61170, "upload_time": "2019-03-18T22:16:55", "upload_time_iso_8601": "2019-03-18T22:16:55.577963Z", "url": "https://files.pythonhosted.org/packages/3a/1a/082e364f0d5b0a8254b0432b0cd395d0ac34e7eb861d9f06756ed894efa5/skfdiff-0.6.0rc1.tar.gz", "yanked": false}], "0.6.0rc2": [{"comment_text": "", "digests": {"md5": "a6ff172b3a9050256a84559ea0b2f246", "sha256": "3b989fc0d6de02ce24b256cdaadb937ff48272612a24db1ba8df3ad428a15989"}, "downloads": -1, "filename": "skfdiff-0.6.0rc2.tar.gz", "has_sig": false, "md5_digest": "a6ff172b3a9050256a84559ea0b2f246", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 59177, "upload_time": "2019-05-09T09:49:50", "upload_time_iso_8601": "2019-05-09T09:49:50.412353Z", "url": "https://files.pythonhosted.org/packages/be/64/69500a82dfa4b32c996cadd0174f8f6ccaee271d0f4d26579ab96c4e62f8/skfdiff-0.6.0rc2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fee3df1270af4f6bc24afaaf35a38ddf", "sha256": "377c4278fa675740a2e87905738ba0bfd4cba606a7bd73be946efe14022182e2"}, "downloads": -1, "filename": "skfdiff-0.6.0.tar.gz", "has_sig": false, "md5_digest": "fee3df1270af4f6bc24afaaf35a38ddf", "packagetype": "sdist", "python_version": "source", "requires_python": ">= 3.6", "size": 59220, "upload_time": "2019-05-27T17:26:54", "upload_time_iso_8601": "2019-05-27T17:26:54.964756Z", "url": "https://files.pythonhosted.org/packages/36/88/b8e87bbe581170a5e61118cd2efe76804ecef4521b386e1a6658595fa005/skfdiff-0.6.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:09:06 2020"}