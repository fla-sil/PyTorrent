{"info": {"author": "XLAB d.o.o.", "author_email": "pypi@xlab.si", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 2.7"], "description": "OpenFOAM Cloud Backend\n======================\n\nInstalling from GitHub\n----------------------\n\nClone the repository\n\n::\n\n    git clone https://github.com/mikelangelo-project/openfoam-cloud.git\n\nInstall required Python packages\n\n::\n\n    pip install -r requirements.txt\n\nInstalling via pip\n------------------\n\n::\n\n    pip install openfoam-cloud\n\nSetup\n-----\n\nInstall the following required packages\n\n-  `capstan <https://drive.google.com/drive/folders/0B4qi_kpom5ITZ0RCYUlFQUJhUVU>`__\n-  `snap <https://drive.google.com/drive/folders/0B4rwCneIeHMybmlENDNPYXJ3c3M>`__\n-  grafana: ``sudo apt-get install grafana``\n-  influxdb: ``sudo apt-get install influxdb``\n\nCopy local settings\n\n::\n\n    cp ofcloud/ofcloud/local_settings.py{.example,}\n\nEdit local settings to reflect your environment. Where you see\nos.environ['ENV\\_VARIABLE\\_NAME'] you have to export the desired value\nto your environment.\n\n::\n\n    OPENFOAM_BASENAME       = 'http://openfoam.example.com'\n    GRAFANA_BASENAME        = 'http://grafana.example.com'\n\n    S3_ACCESS_KEY_ID        = os.environ['S3_ACCESS_KEY_ID']\n    S3_SECRET_ACCESS_KEY    = os.environ['S3_SECRET_ACCESS_KEY']\n    S3_HOST                 = 's3-host'\n    S3_PORT                 = 8443\n\n    SNAP_SERVICE            = 'snap-api-root'\n    INFLUX_DB_HOST          = 'influxdb-host'\n    INFLUX_DB_PORT          = 8086\n    INFLUX_DB_NAME          = 'snap'\n    INFLUX_DB_USER          = 'root'\n    INFLUX_DB_PASS          = 'root'\n\n    # Dedicated openfoam network settings\n    OPENFOAM_NETWORK_PREFIX = 'openfoam'\n    OPENFOAM_NETWORK_CIDR = 'your desired network CIDR'\n    OPENFOAM_NETWORK_ALLOCATION_POOL_START = 'your IP allocation range start'\n    OPENFOAM_NETWORK_ALLOCATION_POOL_END = 'your IP allocation range end'\n    OPENFOAM_NETWORK_GATEWAY_IP = 'your gateway IP usually the first IP in CIDR range'\n\n    # Scheduler daemon settings\n    SCHEDULER_REFRESH_INTERVAL_SECONDS = 'desired scheduler daemon refresh interval in seconds'\n\n    # OpenFOAM simulations save their results on a NFS server as is evident from the NFS_IP setting. The\n    # LOCAL_NFS_MOUNT_LOCATION setting tells the scheduler daemon where to prepare simulation case files, capstan package etc.\n    # This folder should have the NFS location mounted (example /mnt/OpenFOAM_results) except when the scheduler runs on\n    # the NFS machine itself, then this can point directly to the exported directory (for instance '/export/OpenFOAM_results/')\n    LOCAL_NFS_MOUNT_LOCATION = 'path to folder with mounted NFS location'\n\n    # Network file storage server ip address\n    NFS_IP = 'nfs server ip'\n\n    # Location on the NFS server where OpenFOAM case files and results will be saved\n    NFS_SERVER_MOUNT_FOLDER = 'location on the nfs server, where simulation case files and results are saved'\n\n    # Maximum number of launch retries of one instance. When this limit is reached, the simulation instance enters the\n    # 'FAILED' state\n    OPENFOAM_SIMULATION_MAX_RETRIES = 3\n\n    # Overrides the number of maximum NOVA vcpu's used. Example: openstack allows use of maximum 24 vcpus. Our setting\n    # allows only 12. The scheduler_deamon will run new simulations until 12 vcpu's are used on nova.\n    # If this setting value is higher than nova's max VCPU quota, the latter will be respected.\n    OPENFOAM_MAX_CPU_USAGE = 18\n\n    # Overrides the number of maximum NOVA instances used. Example: openstack allows use of 10 instances. Our setting\n    # allows only 5. The scheduler_deamon will run new simulations until 5 oinstances are used on nova.\n    # If this setting value is higher than nova's max instance quota, the latter will be respected.\n    OPENFOAM_MAX_INSTANCE_USAGE = 8\n\nRunning\n-------\n\nEnsure snap, influxdb and grafana are running. Define a datasource for\ninfluxdb in grafana.\n\n-  snap: ``/opt/snap/bin/snapd -t 0 -a /opt/snap/plugin``\n-  influxdb: ``/etc/init.d/influxdb start``\n-  grafana: ``/etc/init.d/grafana-server start``\n\nThen launch the OpenFOAM backend\n\n::\n\n    python manage.py runserver 0.0.0.0:8008\n\nNext launch the OpenFOAM scheduler daemon\n\n::\n\n    python manage.py runscheduler\n\nAcknowledgements\n----------------\n\nThis project has been conducted within the RIA `MIKELANGELO\nproject <https://www.mikelangelo-project.eu>`__ (no. 645402), started in\nJanuary 2015, and co-funded by the European Commission under the\nH2020-ICT- 07-2014: Advanced Cloud Infrastructures and Services\nprogramme.\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.xlab.si/", "keywords": "", "license": "Apache Software License", "maintainer": "", "maintainer_email": "", "name": "openfoam-cloud", "package_url": "https://pypi.org/project/openfoam-cloud/", "platform": "", "project_url": "https://pypi.org/project/openfoam-cloud/", "project_urls": {"Homepage": "https://www.xlab.si/"}, "release_url": "https://pypi.org/project/openfoam-cloud/1.0/", "requires_dist": null, "requires_python": "", "summary": "OpenFOAM Cloud backend application", "version": "1.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"installing-from-github\">\n<h2>Installing from GitHub</h2>\n<p>Clone the repository</p>\n<pre>git clone https://github.com/mikelangelo-project/openfoam-cloud.git\n</pre>\n<p>Install required Python packages</p>\n<pre>pip install -r requirements.txt\n</pre>\n</div>\n<div id=\"installing-via-pip\">\n<h2>Installing via pip</h2>\n<pre>pip install openfoam-cloud\n</pre>\n</div>\n<div id=\"setup\">\n<h2>Setup</h2>\n<p>Install the following required packages</p>\n<ul>\n<li><a href=\"https://drive.google.com/drive/folders/0B4qi_kpom5ITZ0RCYUlFQUJhUVU\" rel=\"nofollow\">capstan</a></li>\n<li><a href=\"https://drive.google.com/drive/folders/0B4rwCneIeHMybmlENDNPYXJ3c3M\" rel=\"nofollow\">snap</a></li>\n<li>grafana: <tt>sudo <span class=\"pre\">apt-get</span> install grafana</tt></li>\n<li>influxdb: <tt>sudo <span class=\"pre\">apt-get</span> install influxdb</tt></li>\n</ul>\n<p>Copy local settings</p>\n<pre>cp ofcloud/ofcloud/local_settings.py{.example,}\n</pre>\n<p>Edit local settings to reflect your environment. Where you see\nos.environ[\u2018ENV_VARIABLE_NAME\u2019] you have to export the desired value\nto your environment.</p>\n<pre>OPENFOAM_BASENAME       = 'http://openfoam.example.com'\nGRAFANA_BASENAME        = 'http://grafana.example.com'\n\nS3_ACCESS_KEY_ID        = os.environ['S3_ACCESS_KEY_ID']\nS3_SECRET_ACCESS_KEY    = os.environ['S3_SECRET_ACCESS_KEY']\nS3_HOST                 = 's3-host'\nS3_PORT                 = 8443\n\nSNAP_SERVICE            = 'snap-api-root'\nINFLUX_DB_HOST          = 'influxdb-host'\nINFLUX_DB_PORT          = 8086\nINFLUX_DB_NAME          = 'snap'\nINFLUX_DB_USER          = 'root'\nINFLUX_DB_PASS          = 'root'\n\n# Dedicated openfoam network settings\nOPENFOAM_NETWORK_PREFIX = 'openfoam'\nOPENFOAM_NETWORK_CIDR = 'your desired network CIDR'\nOPENFOAM_NETWORK_ALLOCATION_POOL_START = 'your IP allocation range start'\nOPENFOAM_NETWORK_ALLOCATION_POOL_END = 'your IP allocation range end'\nOPENFOAM_NETWORK_GATEWAY_IP = 'your gateway IP usually the first IP in CIDR range'\n\n# Scheduler daemon settings\nSCHEDULER_REFRESH_INTERVAL_SECONDS = 'desired scheduler daemon refresh interval in seconds'\n\n# OpenFOAM simulations save their results on a NFS server as is evident from the NFS_IP setting. The\n# LOCAL_NFS_MOUNT_LOCATION setting tells the scheduler daemon where to prepare simulation case files, capstan package etc.\n# This folder should have the NFS location mounted (example /mnt/OpenFOAM_results) except when the scheduler runs on\n# the NFS machine itself, then this can point directly to the exported directory (for instance '/export/OpenFOAM_results/')\nLOCAL_NFS_MOUNT_LOCATION = 'path to folder with mounted NFS location'\n\n# Network file storage server ip address\nNFS_IP = 'nfs server ip'\n\n# Location on the NFS server where OpenFOAM case files and results will be saved\nNFS_SERVER_MOUNT_FOLDER = 'location on the nfs server, where simulation case files and results are saved'\n\n# Maximum number of launch retries of one instance. When this limit is reached, the simulation instance enters the\n# 'FAILED' state\nOPENFOAM_SIMULATION_MAX_RETRIES = 3\n\n# Overrides the number of maximum NOVA vcpu's used. Example: openstack allows use of maximum 24 vcpus. Our setting\n# allows only 12. The scheduler_deamon will run new simulations until 12 vcpu's are used on nova.\n# If this setting value is higher than nova's max VCPU quota, the latter will be respected.\nOPENFOAM_MAX_CPU_USAGE = 18\n\n# Overrides the number of maximum NOVA instances used. Example: openstack allows use of 10 instances. Our setting\n# allows only 5. The scheduler_deamon will run new simulations until 5 oinstances are used on nova.\n# If this setting value is higher than nova's max instance quota, the latter will be respected.\nOPENFOAM_MAX_INSTANCE_USAGE = 8\n</pre>\n</div>\n<div id=\"running\">\n<h2>Running</h2>\n<p>Ensure snap, influxdb and grafana are running. Define a datasource for\ninfluxdb in grafana.</p>\n<ul>\n<li>snap: <tt>/opt/snap/bin/snapd <span class=\"pre\">-t</span> 0 <span class=\"pre\">-a</span> /opt/snap/plugin</tt></li>\n<li>influxdb: <tt>/etc/init.d/influxdb start</tt></li>\n<li>grafana: <tt><span class=\"pre\">/etc/init.d/grafana-server</span> start</tt></li>\n</ul>\n<p>Then launch the OpenFOAM backend</p>\n<pre>python manage.py runserver 0.0.0.0:8008\n</pre>\n<p>Next launch the OpenFOAM scheduler daemon</p>\n<pre>python manage.py runscheduler\n</pre>\n</div>\n<div id=\"acknowledgements\">\n<h2>Acknowledgements</h2>\n<p>This project has been conducted within the RIA <a href=\"https://www.mikelangelo-project.eu\" rel=\"nofollow\">MIKELANGELO\nproject</a> (no. 645402), started in\nJanuary 2015, and co-funded by the European Commission under the\nH2020-ICT- 07-2014: Advanced Cloud Infrastructures and Services\nprogramme.</p>\n</div>\n\n          </div>"}, "last_serial": 3274682, "releases": {"1.0": [{"comment_text": "", "digests": {"md5": "b418c89eaeae89a0566ac0342b7e7f9f", "sha256": "2b9ec5e1c06edb34346989a6d35af21609332d17e1e61e033f28517822b78ae9"}, "downloads": -1, "filename": "openfoam-cloud-1.0.tar.gz", "has_sig": false, "md5_digest": "b418c89eaeae89a0566ac0342b7e7f9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41212, "upload_time": "2017-10-24T10:31:35", "upload_time_iso_8601": "2017-10-24T10:31:35.328676Z", "url": "https://files.pythonhosted.org/packages/cc/6b/e0fad19c16ce6aa36aa4befcbddb0ad34b380dfe561570e365e07b79f13f/openfoam-cloud-1.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "b418c89eaeae89a0566ac0342b7e7f9f", "sha256": "2b9ec5e1c06edb34346989a6d35af21609332d17e1e61e033f28517822b78ae9"}, "downloads": -1, "filename": "openfoam-cloud-1.0.tar.gz", "has_sig": false, "md5_digest": "b418c89eaeae89a0566ac0342b7e7f9f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 41212, "upload_time": "2017-10-24T10:31:35", "upload_time_iso_8601": "2017-10-24T10:31:35.328676Z", "url": "https://files.pythonhosted.org/packages/cc/6b/e0fad19c16ce6aa36aa4befcbddb0ad34b380dfe561570e365e07b79f13f/openfoam-cloud-1.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:02:57 2020"}