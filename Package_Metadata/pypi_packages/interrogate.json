{"info": {"author": "Lynn Root", "author_email": "lynn@lynnroot.com", "bugtrack_url": null, "classifiers": [], "description": ".. image:: https://interrogate.readthedocs.io/en/latest/_static/logo_pink.png\n    :alt: Pink Sloth Logo\n\n=================================\n``interrogate``: explain yourself\n=================================\n\n.. image:: https://interrogate.readthedocs.io/en/latest/_static/interrogate_badge.svg\n   :target: https://github.com/econchick/interrogate\n   :alt: Documentation Coverage\n\n.. image:: https://codecov.io/gh/econchick/interrogate/branch/master/graph/badge.svg\n   :target: https://codecov.io/gh/econchick/interrogate\n   :alt: Testing Coverage\n\n.. image:: https://readthedocs.org/projects/interrogate/badge/?version=latest&style=flat\n   :target: https://interrogate.readthedocs.io/en/latest/?badge=latest\n   :alt: Documentation Status\n\n.. image:: https://github.com/econchick/interrogate/workflows/CI/badge.svg?branch=master\n   :target: https://github.com/econchick/interrogate/actions?workflow=CI\n   :alt: CI Status\n\n.. start-readme\n\nInterrogate a codebase for docstring coverage.\n\nWhy Do I Need This?\n===================\n\n``interrogate`` checks your code base for missing docstrings.\n\nDocumentation should be as important as code itself. And it should live *within* code. Python `standardized <https://www.python.org/dev/peps/pep-0257/>`_ docstrings, allowing for developers to navigate libraries as simply as calling ``help()`` on objects, and with powerful tools like `Sphinx <https://www.sphinx-doc.org/en/master/>`_, `pydoc <https://docs.python.org/3/library/pydoc.html>`_, and `Docutils <https://docutils.sourceforge.io/>`_ to automatically generate HTML, LaTeX, PDFs, etc.\n\n*Enter:* ``interrogate``.\n\n``interrogate`` will tell you which methods, functions, classes, and modules have docstrings, and which do not. Use ``interrogate`` to:\n\n* Get an understanding of how well your code is documented;\n* Add it to CI/CD checks to enforce documentation on newly-added code;\n* Assess a new code base for (one aspect of) code quality and maintainability.\n\nLet's get started.\n\nRequirements\n============\n\n``interrogate`` supports Python 3.5 and above.\n\n\nInstallation\n============\n\n``interrogate`` available on `PyPI <https://pypi.org/project/interrogate/>`_ and `GitHub <https://github.com/econchick/interrogate>`_. The recommended installation method is `pip <https://pip.pypa.io/en/stable/>`_-installing into a `virtualenv <https://hynek.me/articles/virtualenv-lives/>`_:\n\n.. code-block:: console\n\n    $ pip install interrogate\n\nUsage\n=====\n\nTry it out on a Python project:\n\n.. code-block:: console\n\n    $ interrogate [PATH]\n    RESULT: PASSED (minimum: 80.0%, actual: 100.0%)\n\n\nAdd verbosity to see a summary:\n\n.. code-block:: console\n\n    $ interrogate -v [PATH]\n\n    ==================== Coverage for /Users/lynn/dev/interrogate/ ======================\n    -------------------------------------- Summary --------------------------------------\n    | Name                                      |   Total |   Miss |   Cover |   Cover% |\n    |-------------------------------------------|---------|--------|---------|----------|\n    | tests/unit/__init__.py                    |       1 |      0 |       1 |     100% |\n    | tests/unit/test_badge_gen.py              |       5 |      0 |       5 |     100% |\n    | tests/unit/test_config.py                 |       7 |      0 |       7 |     100% |\n    | tests/unit/test_utils.py                  |       5 |      0 |       5 |     100% |\n    | tests/functional/__init__.py              |       1 |      0 |       1 |     100% |\n    | tests/functional/test_cli.py              |       7 |      0 |       7 |     100% |\n    | tests/functional/test_coverage.py         |       4 |      0 |       4 |     100% |\n    | src/interrogate/__init__.py               |       1 |      0 |       1 |     100% |\n    | src/interrogate/badge_gen.py              |       5 |      0 |       5 |     100% |\n    | src/interrogate/cli.py                    |       2 |      0 |       2 |     100% |\n    | src/interrogate/config.py                 |       6 |      0 |       6 |     100% |\n    | src/interrogate/coverage.py               |      22 |      0 |      22 |     100% |\n    | src/interrogate/utils.py                  |       6 |      0 |       6 |     100% |\n    | src/interrogate/visit.py                  |      14 |      0 |      14 |     100% |\n    |-------------------------------------------|---------|--------|---------|----------|\n    | TOTAL                                     |      86 |      0 |      86 |   100.0% |\n    ------------------ RESULT: PASSED (minimum: 80.0%, actual: 100.0%) ------------------\n\n\nAdd even *more* verbosity:\n\n\n.. code-block:: console\n\n    $ interrogate -vv [PATH]\n\n    ==================== Coverage for /Users/lynn/dev/interrogate/ ======================\n    --------------------------------- Detailed Coverage ---------------------------------\n    | Name                                                                  |    Status |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/unit/__init__.py (module)                                       |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/unit/test_badge_gen.py (module)                                 |   COVERED |\n    |   test_save_badge (L14)                                               |   COVERED |\n    |   test_get_badge (L35)                                                |   COVERED |\n    |   test_get_color (L44)                                                |   COVERED |\n    |   test_create (L61)                                                   |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/unit/test_config.py (module)                                    |   COVERED |\n    |   test_find_project_root (L13)                                        |   COVERED |\n    |   test_find_pyproject_toml (L40)                                      |   COVERED |\n    |   test_parse_pyproject_toml (L52)                                     |   COVERED |\n    |   test_read_pyproject_toml_none (L68)                                 |   COVERED |\n    |   test_read_pyproject_toml (L76)                                      |   COVERED |\n    |   test_read_pyproject_toml_raises (L106)                              |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/unit/test_utils.py (module)                                     |   COVERED |\n    |   test_parse_regex (L12)                                              |   COVERED |\n    |   test_smart_open (L21)                                               |   COVERED |\n    |   test_get_common_base (L38)                                          |   COVERED |\n    |   test_interrogate_line_formatter (L52)                               |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/functional/__init__.py (module)                                 |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/functional/test_cli.py (module)                                 |   COVERED |\n    |   runner (L18)                                                        |   COVERED |\n    |   test_run_no_paths (L24)                                             |   COVERED |\n    |   test_run_shortflags (L34)                                           |   COVERED |\n    |   test_run_longflags (L69)                                            |   COVERED |\n    |   test_run_multiple_flags (L93)                                       |   COVERED |\n    |   test_generate_badge (L111)                                          |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | tests/functional/test_coverage.py (module)                            |   COVERED |\n    |   test_coverage_simple (L16)                                          |   COVERED |\n    |   test_coverage_errors (L37)                                          |   COVERED |\n    |   test_print_results (L57)                                            |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/__init__.py (module)                                  |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/badge_gen.py (module)                                 |   COVERED |\n    |   save_badge (L33)                                                    |   COVERED |\n    |   get_badge (L50)                                                     |   COVERED |\n    |   get_color (L66)                                                     |   COVERED |\n    |   create (L79)                                                        |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/cli.py (module)                                       |   COVERED |\n    |   main (L16)                                                          |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/config.py (module)                                    |   COVERED |\n    |   InterrogateConfig (L14)                                             |   COVERED |\n    |   find_project_root (L43)                                             |   COVERED |\n    |   find_pyproject_toml (L71)                                           |   COVERED |\n    |   parse_pyproject_toml (L78)                                          |   COVERED |\n    |   read_pyproject_toml (L94)                                           |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/coverage.py (module)                                  |   COVERED |\n    |   BaseInterrogateResult (L21)                                         |   COVERED |\n    |     BaseInterrogateResult.perc_covered (L37)                          |   COVERED |\n    |   InterrogateFileResult (L51)                                         |   COVERED |\n    |     InterrogateFileResult.combine (L65)                               |   COVERED |\n    |   InterrogateResults (L80)                                            |   COVERED |\n    |     InterrogateResults.combine (L93)                                  |   COVERED |\n    |   InterrogateCoverage (L102)                                          |   COVERED |\n    |     InterrogateCoverage._add_common_exclude (L120)                    |   COVERED |\n    |     InterrogateCoverage._filter_files (L127)                          |   COVERED |\n    |     InterrogateCoverage.get_filenames_from_paths (L144)               |   COVERED |\n    |     InterrogateCoverage._get_file_coverage (L171)                     |   COVERED |\n    |     InterrogateCoverage._get_coverage (L188)                          |   COVERED |\n    |     InterrogateCoverage.get_coverage (L203)                           |   COVERED |\n    |     InterrogateCoverage._get_detailed_row (L208)                      |   COVERED |\n    |     InterrogateCoverage._create_detailed_table (L222)                 |   COVERED |\n    |       InterrogateCoverage._create_detailed_table._sort_nodes (L229)   |   COVERED |\n    |     InterrogateCoverage._print_detailed_table (L251)                  |   COVERED |\n    |     InterrogateCoverage._create_summary_table (L263)                  |   COVERED |\n    |     InterrogateCoverage._print_summary_table (L297)                   |   COVERED |\n    |     InterrogateCoverage._sort_results (L308)                          |   COVERED |\n    |     InterrogateCoverage.print_results (L341)                          |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/utils.py (module)                                     |   COVERED |\n    |   parse_regex (L17)                                                   |   COVERED |\n    |   smart_open (L32)                                                    |   COVERED |\n    |   get_common_base (L53)                                               |   COVERED |\n    |     get_common_base.allnamesequal (L65)                               |   COVERED |\n    |   interrogate_line_formatter (L74)                                    |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n    | src/interrogate/visit.py (module)                                     |   COVERED |\n    |   CovNode (L11)                                                       |   COVERED |\n    |   CoverageVisitor (L34)                                               |   COVERED |\n    |     CoverageVisitor._has_doc (L48)                                    |   COVERED |\n    |     CoverageVisitor._visit_helper (L56)                               |   COVERED |\n    |     CoverageVisitor._is_private (L95)                                 |   COVERED |\n    |     CoverageVisitor._is_semiprivate (L103)                            |   COVERED |\n    |     CoverageVisitor._is_ignored_common (L113)                         |   COVERED |\n    |     CoverageVisitor._is_func_ignored (L129)                           |   COVERED |\n    |     CoverageVisitor._is_class_ignored (L146)                          |   COVERED |\n    |     CoverageVisitor.visit_Module (L150)                               |   COVERED |\n    |     CoverageVisitor.visit_ClassDef (L157)                             |   COVERED |\n    |     CoverageVisitor.visit_FunctionDef (L167)                          |   COVERED |\n    |     CoverageVisitor.visit_AsyncFunctionDef (L177)                     |   COVERED |\n    |-----------------------------------------------------------------------|-----------|\n\n    -------------------------------------- Summary --------------------------------------\n    | Name                                      |   Total |   Miss |   Cover |   Cover% |\n    |-------------------------------------------|---------|--------|---------|----------|\n    | tests/unit/__init__.py                    |       1 |      0 |       1 |     100% |\n    | tests/unit/test_badge_gen.py              |       5 |      0 |       5 |     100% |\n    | tests/unit/test_config.py                 |       7 |      0 |       7 |     100% |\n    | tests/unit/test_utils.py                  |       5 |      0 |       5 |     100% |\n    | tests/functional/__init__.py              |       1 |      0 |       1 |     100% |\n    | tests/functional/test_cli.py              |       7 |      0 |       7 |     100% |\n    | tests/functional/test_coverage.py         |       4 |      0 |       4 |     100% |\n    | src/interrogate/__init__.py               |       1 |      0 |       1 |     100% |\n    | src/interrogate/badge_gen.py              |       5 |      0 |       5 |     100% |\n    | src/interrogate/cli.py                    |       2 |      0 |       2 |     100% |\n    | src/interrogate/config.py                 |       6 |      0 |       6 |     100% |\n    | src/interrogate/coverage.py               |      22 |      0 |      22 |     100% |\n    | src/interrogate/utils.py                  |       6 |      0 |       6 |     100% |\n    | src/interrogate/visit.py                  |      14 |      0 |      14 |     100% |\n    |-------------------------------------------|---------|--------|---------|----------|\n    | TOTAL                                     |      86 |      0 |      86 |   100.0% |\n    ------------------ RESULT: PASSED (minimum: 80.0%, actual: 100.0%) ------------------\n\n\nOther Usage\n===========\n\nGenerate a `shields.io <https://shields.io/>`_ badge (like this one! |interrogate-badge| ):\n\n.. code-block:: console\n\n    $ interrogate --generate-badge PATH\n    RESULT: PASSED (minimum: 80.0%, actual: 100.0%)\n    Generated badge to /Users/lynn/dev/interrogate/docs/_static/interrogate_badge.svg\n\nAdd it to your ``tox.ini`` file to enforce a level of coverage:\n\n.. code-block:: ini\n\n    [testenv:doc]\n    deps = interrogate\n    skip_install = true\n    commands =\n        interrogate --quiet --fail-under 95 src tests\n\nOr use it with `pre-commit <https://pre-commit.com/>`_:\n\n.. code-block:: yaml\n\n    repos:\n      - repo: https://github.com/econchick/interrogate\n        rev: 1.1.4  # or master if you're bold\n        hooks:\n          - id: interrogate\n            args: [--quiet, --fail-under=95]\n\nUse it within your code directly:\n\n.. code-block:: pycon\n\n    >>> from interrogate import coverage\n    >>> cov = coverage.InterrogateCoverage(paths=[\"src\"])\n    >>> results = cov.get_coverage()\n    >>> results\n    InterrogateResults(total=51, covered=48, missing=3, skipped=0)\n\n\nConfigure within your ``pyproject.toml``:\n\n.. code-block:: console\n\n    $ interrogate -c pyproject.toml [OPTIONS] [PATHS]...\n\n.. code-block:: toml\n\n    [tool.interrogate]\n    ignore-init-method = true\n    ignore-init-module = false\n    ignore-magic = false\n    ignore-semiprivate = false\n    ignore-private = false\n    ignore-module = false\n    fail-under = 95\n    exclude = [\"setup.py\", \"docs\", \"build\"]\n    ignore-regex = [\"^get$\", \"^mock_.*\", \".*BaseClass.*\"]\n    verbose = 0\n    quiet = false\n    whitelist-regex = []\n\n\n.. end-readme\n\nTo view all options available, run ``interrogate --help``:\n\n.. code-block:: console\n\n    interrogate -h\n    Usage: interrogate [OPTIONS] [PATHS]...\n\n      Measure and report on documentation coverage in Python modules.\n\n    Options:\n      --version                     Show the version and exit.\n      -v, --verbose                 Level of verbosity  [default: 0]\n      -q, --quiet                   Do not print output  [default: False]\n      -f, --fail-under INT | FLOAT  Fail when coverage % is less than a given\n                                    amount.  [default: 80.0]\n\n      -e, --exclude PATH            Exclude PATHs of files and/or directories.\n                                    Multiple `-e/--exclude` invocations supported.\n\n      -i, --ignore-init-method      Ignore `__init__` method of classes.\n                                    [default: False]\n\n      -I, --ignore-init-module      Ignore `__init__.py` modules.  [default:\n                                    False]\n\n      -m, --ignore-magic            Ignore all magic methods of classes.\n                                    [default: False]\n\n                                    NOTE: This does not include the `__init__`\n                                    method. To ignore `__init__` methods, use\n                                    `--ignore-init-method`.\n\n      -M, --ignore-module           Ignore module-level docstrings.  [default:\n                                    False]\n\n      -p, --ignore-private          Ignore private classes, methods, and functions\n                                    starting with two underscores.\n                                    [default:False]\n\n                                    NOTE: This does not include magic methods; use\n                                    `--ignore-magic` and/or `--ignore-init-method`\n                                    instead.\n\n      -s, --ignore-semiprivate      Ignore semiprivate classes, methods, and\n                                    functions starting with a single underscore.\n                                    [default: False]\n\n      -r, --ignore-regex STR        Regex identifying class, method, and function\n                                    names to ignore. Multiple `-r/--ignore-regex`\n                                    invocations supported.\n\n      -w, --whitelist-regex STR     Regex identifying class, method, and function\n                                    names to include. Multiple `-w/--whitelist-\n                                    regex` invocations supported.\n\n      -o, --output FILE             Write output to a given FILE.  [default:\n                                    stdout]\n\n      -c, --config FILE             Read configuration from `pyproject.toml`.\n      -g, --generate-badge PATH     Generate a 'shields.io' status badge (an SVG\n                                    image) in at a given file or directory.\n      -h, --help                    Show this message and exit.\n\n\n.. start-credits\n\nCredits\n=======\n\n.. role:: smol\n\n``interrogate`` was inspired by |docstr-coverage|_, which was forked from Alexey \"DataGreed\" Strelkov's |docstring-coverage|_, which was inspired by a 2004 `recipe from James Harlow <http://code.activestate.com/recipes/355731/>`_ :smol:`(turtles...)`.\n\nThe cute |sloth| logo is by `JustineW <https://thenounproject.com/wojcik.justine/>`_ purchased via `the Noun Project <https://thenounproject.com/>`_ (but also available under the `Creative Commons License <https://creativecommons.org/licenses/by/3.0/us/legalcode>`_ with attribution).\n\n\n.. |interrogate-badge|  image:: https://interrogate.readthedocs.io/en/latest/_static/interrogate_badge.svg\n.. |sloth| image:: https://interrogate.readthedocs.io/en/latest/_static/logo_smol.png\n\n.. |docstr-coverage| replace:: ``docstr-coverage``\n.. _docstr-coverage: https://pypi.org/project/docstr-coverage\n.. |docstring-coverage| replace:: ``docstring-coverage``\n.. _docstring-coverage: https://bitbucket.org/DataGreed/docstring-coverage\n\n.. end-credits\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/econchick/interrogate", "keywords": "documentation,coverage,quality", "license": "", "maintainer": "Lynn Root", "maintainer_email": "lynn@lynnroot.com", "name": "interrogate", "package_url": "https://pypi.org/project/interrogate/", "platform": "", "project_url": "https://pypi.org/project/interrogate/", "project_urls": {"Homepage": "https://github.com/econchick/interrogate"}, "release_url": "https://pypi.org/project/interrogate/1.1.4/", "requires_dist": ["attrs", "click", "networkx", "py", "tabulate", "toml", "sphinx ; extra == 'dev'", "sphinx-autobuild ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "pytest-mock ; extra == 'dev'", "wheel ; extra == 'dev'", "sphinx ; extra == 'docs'", "sphinx-autobuild ; extra == 'docs'", "pytest ; extra == 'tests'", "pytest-cov ; extra == 'tests'", "pytest-mock ; extra == 'tests'"], "requires_python": ">=3.5", "summary": "Interrogate a codebase for docstring coverage.", "version": "1.1.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <img alt=\"Pink Sloth Logo\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/81cccce8f25411f634bce438edcf8bbcfc8d0c7b/68747470733a2f2f696e746572726f676174652e72656164746865646f63732e696f2f656e2f6c61746573742f5f7374617469632f6c6f676f5f70696e6b2e706e67\">\n<div id=\"interrogate-explain-yourself\">\n<h2><tt>interrogate</tt>: explain yourself</h2>\n<a href=\"https://github.com/econchick/interrogate\" rel=\"nofollow\"><img alt=\"Documentation Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61fd8646acedb25f8534db806651bb3ef480219c/68747470733a2f2f696e746572726f676174652e72656164746865646f63732e696f2f656e2f6c61746573742f5f7374617469632f696e746572726f676174655f62616467652e737667\"></a>\n<a href=\"https://codecov.io/gh/econchick/interrogate\" rel=\"nofollow\"><img alt=\"Testing Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/78cba68eeda02ff08d1973c93974fb619b258164/68747470733a2f2f636f6465636f762e696f2f67682f65636f6e636869636b2f696e746572726f676174652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://interrogate.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1a8bf304c84a5d7ce06d98febde9e546c685c65d/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f696e746572726f676174652f62616467652f3f76657273696f6e3d6c6174657374267374796c653d666c6174\"></a>\n<a href=\"https://github.com/econchick/interrogate/actions?workflow=CI\" rel=\"nofollow\"><img alt=\"CI Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/cc953be858ccc9bd5fa906c6063efec4e42f20c7/68747470733a2f2f6769746875622e636f6d2f65636f6e636869636b2f696e746572726f676174652f776f726b666c6f77732f43492f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Interrogate a codebase for docstring coverage.</p>\n<div id=\"why-do-i-need-this\">\n<h3>Why Do I Need This?</h3>\n<p><tt>interrogate</tt> checks your code base for missing docstrings.</p>\n<p>Documentation should be as important as code itself. And it should live <em>within</em> code. Python <a href=\"https://www.python.org/dev/peps/pep-0257/\" rel=\"nofollow\">standardized</a> docstrings, allowing for developers to navigate libraries as simply as calling <tt>help()</tt> on objects, and with powerful tools like <a href=\"https://www.sphinx-doc.org/en/master/\" rel=\"nofollow\">Sphinx</a>, <a href=\"https://docs.python.org/3/library/pydoc.html\" rel=\"nofollow\">pydoc</a>, and <a href=\"https://docutils.sourceforge.io/\" rel=\"nofollow\">Docutils</a> to automatically generate HTML, LaTeX, PDFs, etc.</p>\n<p><em>Enter:</em> <tt>interrogate</tt>.</p>\n<p><tt>interrogate</tt> will tell you which methods, functions, classes, and modules have docstrings, and which do not. Use <tt>interrogate</tt> to:</p>\n<ul>\n<li>Get an understanding of how well your code is documented;</li>\n<li>Add it to CI/CD checks to enforce documentation on newly-added code;</li>\n<li>Assess a new code base for (one aspect of) code quality and maintainability.</li>\n</ul>\n<p>Let\u2019s get started.</p>\n</div>\n<div id=\"requirements\">\n<h3>Requirements</h3>\n<p><tt>interrogate</tt> supports Python 3.5 and above.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p><tt>interrogate</tt> available on <a href=\"https://pypi.org/project/interrogate/\" rel=\"nofollow\">PyPI</a> and <a href=\"https://github.com/econchick/interrogate\" rel=\"nofollow\">GitHub</a>. The recommended installation method is <a href=\"https://pip.pypa.io/en/stable/\" rel=\"nofollow\">pip</a>-installing into a <a href=\"https://hynek.me/articles/virtualenv-lives/\" rel=\"nofollow\">virtualenv</a>:</p>\n<pre><span class=\"gp\">$</span> pip install interrogate\n</pre>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<p>Try it out on a Python project:</p>\n<pre><span class=\"gp\">$</span> interrogate <span class=\"o\">[</span>PATH<span class=\"o\">]</span>\n<span class=\"go\">RESULT: PASSED (minimum: 80.0%, actual: 100.0%)</span>\n</pre>\n<p>Add verbosity to see a summary:</p>\n<pre><span class=\"gp\">$</span> interrogate -v <span class=\"o\">[</span>PATH<span class=\"o\">]</span>\n<span class=\"go\">\n==================== Coverage for /Users/lynn/dev/interrogate/ ======================\n-------------------------------------- Summary --------------------------------------\n| Name                                      |   Total |   Miss |   Cover |   Cover% |\n|-------------------------------------------|---------|--------|---------|----------|\n| tests/unit/__init__.py                    |       1 |      0 |       1 |     100% |\n| tests/unit/test_badge_gen.py              |       5 |      0 |       5 |     100% |\n| tests/unit/test_config.py                 |       7 |      0 |       7 |     100% |\n| tests/unit/test_utils.py                  |       5 |      0 |       5 |     100% |\n| tests/functional/__init__.py              |       1 |      0 |       1 |     100% |\n| tests/functional/test_cli.py              |       7 |      0 |       7 |     100% |\n| tests/functional/test_coverage.py         |       4 |      0 |       4 |     100% |\n| src/interrogate/__init__.py               |       1 |      0 |       1 |     100% |\n| src/interrogate/badge_gen.py              |       5 |      0 |       5 |     100% |\n| src/interrogate/cli.py                    |       2 |      0 |       2 |     100% |\n| src/interrogate/config.py                 |       6 |      0 |       6 |     100% |\n| src/interrogate/coverage.py               |      22 |      0 |      22 |     100% |\n| src/interrogate/utils.py                  |       6 |      0 |       6 |     100% |\n| src/interrogate/visit.py                  |      14 |      0 |      14 |     100% |\n|-------------------------------------------|---------|--------|---------|----------|\n| TOTAL                                     |      86 |      0 |      86 |   100.0% |\n------------------ RESULT: PASSED (minimum: 80.0%, actual: 100.0%) ------------------</span>\n</pre>\n<p>Add even <em>more</em> verbosity:</p>\n<pre><span class=\"gp\">$</span> interrogate -vv <span class=\"o\">[</span>PATH<span class=\"o\">]</span>\n<span class=\"go\">\n==================== Coverage for /Users/lynn/dev/interrogate/ ======================\n--------------------------------- Detailed Coverage ---------------------------------\n| Name                                                                  |    Status |\n|-----------------------------------------------------------------------|-----------|\n| tests/unit/__init__.py (module)                                       |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| tests/unit/test_badge_gen.py (module)                                 |   COVERED |\n|   test_save_badge (L14)                                               |   COVERED |\n|   test_get_badge (L35)                                                |   COVERED |\n|   test_get_color (L44)                                                |   COVERED |\n|   test_create (L61)                                                   |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| tests/unit/test_config.py (module)                                    |   COVERED |\n|   test_find_project_root (L13)                                        |   COVERED |\n|   test_find_pyproject_toml (L40)                                      |   COVERED |\n|   test_parse_pyproject_toml (L52)                                     |   COVERED |\n|   test_read_pyproject_toml_none (L68)                                 |   COVERED |\n|   test_read_pyproject_toml (L76)                                      |   COVERED |\n|   test_read_pyproject_toml_raises (L106)                              |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| tests/unit/test_utils.py (module)                                     |   COVERED |\n|   test_parse_regex (L12)                                              |   COVERED |\n|   test_smart_open (L21)                                               |   COVERED |\n|   test_get_common_base (L38)                                          |   COVERED |\n|   test_interrogate_line_formatter (L52)                               |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| tests/functional/__init__.py (module)                                 |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| tests/functional/test_cli.py (module)                                 |   COVERED |\n|   runner (L18)                                                        |   COVERED |\n|   test_run_no_paths (L24)                                             |   COVERED |\n|   test_run_shortflags (L34)                                           |   COVERED |\n|   test_run_longflags (L69)                                            |   COVERED |\n|   test_run_multiple_flags (L93)                                       |   COVERED |\n|   test_generate_badge (L111)                                          |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| tests/functional/test_coverage.py (module)                            |   COVERED |\n|   test_coverage_simple (L16)                                          |   COVERED |\n|   test_coverage_errors (L37)                                          |   COVERED |\n|   test_print_results (L57)                                            |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/__init__.py (module)                                  |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/badge_gen.py (module)                                 |   COVERED |\n|   save_badge (L33)                                                    |   COVERED |\n|   get_badge (L50)                                                     |   COVERED |\n|   get_color (L66)                                                     |   COVERED |\n|   create (L79)                                                        |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/cli.py (module)                                       |   COVERED |\n|   main (L16)                                                          |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/config.py (module)                                    |   COVERED |\n|   InterrogateConfig (L14)                                             |   COVERED |\n|   find_project_root (L43)                                             |   COVERED |\n|   find_pyproject_toml (L71)                                           |   COVERED |\n|   parse_pyproject_toml (L78)                                          |   COVERED |\n|   read_pyproject_toml (L94)                                           |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/coverage.py (module)                                  |   COVERED |\n|   BaseInterrogateResult (L21)                                         |   COVERED |\n|     BaseInterrogateResult.perc_covered (L37)                          |   COVERED |\n|   InterrogateFileResult (L51)                                         |   COVERED |\n|     InterrogateFileResult.combine (L65)                               |   COVERED |\n|   InterrogateResults (L80)                                            |   COVERED |\n|     InterrogateResults.combine (L93)                                  |   COVERED |\n|   InterrogateCoverage (L102)                                          |   COVERED |\n|     InterrogateCoverage._add_common_exclude (L120)                    |   COVERED |\n|     InterrogateCoverage._filter_files (L127)                          |   COVERED |\n|     InterrogateCoverage.get_filenames_from_paths (L144)               |   COVERED |\n|     InterrogateCoverage._get_file_coverage (L171)                     |   COVERED |\n|     InterrogateCoverage._get_coverage (L188)                          |   COVERED |\n|     InterrogateCoverage.get_coverage (L203)                           |   COVERED |\n|     InterrogateCoverage._get_detailed_row (L208)                      |   COVERED |\n|     InterrogateCoverage._create_detailed_table (L222)                 |   COVERED |\n|       InterrogateCoverage._create_detailed_table._sort_nodes (L229)   |   COVERED |\n|     InterrogateCoverage._print_detailed_table (L251)                  |   COVERED |\n|     InterrogateCoverage._create_summary_table (L263)                  |   COVERED |\n|     InterrogateCoverage._print_summary_table (L297)                   |   COVERED |\n|     InterrogateCoverage._sort_results (L308)                          |   COVERED |\n|     InterrogateCoverage.print_results (L341)                          |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/utils.py (module)                                     |   COVERED |\n|   parse_regex (L17)                                                   |   COVERED |\n|   smart_open (L32)                                                    |   COVERED |\n|   get_common_base (L53)                                               |   COVERED |\n|     get_common_base.allnamesequal (L65)                               |   COVERED |\n|   interrogate_line_formatter (L74)                                    |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n| src/interrogate/visit.py (module)                                     |   COVERED |\n|   CovNode (L11)                                                       |   COVERED |\n|   CoverageVisitor (L34)                                               |   COVERED |\n|     CoverageVisitor._has_doc (L48)                                    |   COVERED |\n|     CoverageVisitor._visit_helper (L56)                               |   COVERED |\n|     CoverageVisitor._is_private (L95)                                 |   COVERED |\n|     CoverageVisitor._is_semiprivate (L103)                            |   COVERED |\n|     CoverageVisitor._is_ignored_common (L113)                         |   COVERED |\n|     CoverageVisitor._is_func_ignored (L129)                           |   COVERED |\n|     CoverageVisitor._is_class_ignored (L146)                          |   COVERED |\n|     CoverageVisitor.visit_Module (L150)                               |   COVERED |\n|     CoverageVisitor.visit_ClassDef (L157)                             |   COVERED |\n|     CoverageVisitor.visit_FunctionDef (L167)                          |   COVERED |\n|     CoverageVisitor.visit_AsyncFunctionDef (L177)                     |   COVERED |\n|-----------------------------------------------------------------------|-----------|\n\n-------------------------------------- Summary --------------------------------------\n| Name                                      |   Total |   Miss |   Cover |   Cover% |\n|-------------------------------------------|---------|--------|---------|----------|\n| tests/unit/__init__.py                    |       1 |      0 |       1 |     100% |\n| tests/unit/test_badge_gen.py              |       5 |      0 |       5 |     100% |\n| tests/unit/test_config.py                 |       7 |      0 |       7 |     100% |\n| tests/unit/test_utils.py                  |       5 |      0 |       5 |     100% |\n| tests/functional/__init__.py              |       1 |      0 |       1 |     100% |\n| tests/functional/test_cli.py              |       7 |      0 |       7 |     100% |\n| tests/functional/test_coverage.py         |       4 |      0 |       4 |     100% |\n| src/interrogate/__init__.py               |       1 |      0 |       1 |     100% |\n| src/interrogate/badge_gen.py              |       5 |      0 |       5 |     100% |\n| src/interrogate/cli.py                    |       2 |      0 |       2 |     100% |\n| src/interrogate/config.py                 |       6 |      0 |       6 |     100% |\n| src/interrogate/coverage.py               |      22 |      0 |      22 |     100% |\n| src/interrogate/utils.py                  |       6 |      0 |       6 |     100% |\n| src/interrogate/visit.py                  |      14 |      0 |      14 |     100% |\n|-------------------------------------------|---------|--------|---------|----------|\n| TOTAL                                     |      86 |      0 |      86 |   100.0% |\n------------------ RESULT: PASSED (minimum: 80.0%, actual: 100.0%) ------------------</span>\n</pre>\n</div>\n<div id=\"other-usage\">\n<h3>Other Usage</h3>\n<p>Generate a <a href=\"https://shields.io/\" rel=\"nofollow\">shields.io</a> badge (like this one! <img alt=\"interrogate-badge\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/61fd8646acedb25f8534db806651bb3ef480219c/68747470733a2f2f696e746572726f676174652e72656164746865646f63732e696f2f656e2f6c61746573742f5f7374617469632f696e746572726f676174655f62616467652e737667\"> ):</p>\n<pre><span class=\"gp\">$</span> interrogate --generate-badge PATH\n<span class=\"go\">RESULT: PASSED (minimum: 80.0%, actual: 100.0%)\nGenerated badge to /Users/lynn/dev/interrogate/docs/_static/interrogate_badge.svg</span>\n</pre>\n<p>Add it to your <tt>tox.ini</tt> file to enforce a level of coverage:</p>\n<pre><span class=\"k\">[testenv:doc]</span>\n<span class=\"na\">deps</span> <span class=\"o\">=</span> <span class=\"s\">interrogate</span>\n<span class=\"na\">skip_install</span> <span class=\"o\">=</span> <span class=\"s\">true</span>\n<span class=\"na\">commands</span> <span class=\"o\">=</span><span class=\"s\">\n    interrogate --quiet --fail-under 95 src tests</span>\n</pre>\n<p>Or use it with <a href=\"https://pre-commit.com/\" rel=\"nofollow\">pre-commit</a>:</p>\n<pre><span class=\"nt\">repos</span><span class=\"p\">:</span>\n  <span class=\"p-Indicator\">-</span> <span class=\"nt\">repo</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">https://github.com/econchick/interrogate</span>\n    <span class=\"nt\">rev</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">1.1.4</span>  <span class=\"c1\"># or master if you're bold</span>\n    <span class=\"nt\">hooks</span><span class=\"p\">:</span>\n      <span class=\"p-Indicator\">-</span> <span class=\"nt\">id</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">interrogate</span>\n        <span class=\"nt\">args</span><span class=\"p\">:</span> <span class=\"p-Indicator\">[</span><span class=\"nv\">--quiet</span><span class=\"p-Indicator\">,</span> <span class=\"nv\">--fail-under=95</span><span class=\"p-Indicator\">]</span>\n</pre>\n<p>Use it within your code directly:</p>\n<pre><span class=\"kn\"></span><span class=\"gp\">&gt;&gt;&gt; </span><span class=\"kn\">from</span> <span class=\"nn\">interrogate</span> <span class=\"kn\">import</span> <span class=\"n\">coverage</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">cov</span> <span class=\"o\">=</span> <span class=\"n\">coverage</span><span class=\"o\">.</span><span class=\"n\">InterrogateCoverage</span><span class=\"p\">(</span><span class=\"n\">paths</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"s2\">\"src\"</span><span class=\"p\">])</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results</span> <span class=\"o\">=</span> <span class=\"n\">cov</span><span class=\"o\">.</span><span class=\"n\">get_coverage</span><span class=\"p\">()</span>\n<span class=\"gp\">&gt;&gt;&gt; </span><span class=\"n\">results</span>\n<span class=\"go\">InterrogateResults(total=51, covered=48, missing=3, skipped=0)</span>\n</pre>\n<p>Configure within your <tt>pyproject.toml</tt>:</p>\n<pre><span class=\"gp\">$</span> interrogate -c pyproject.toml <span class=\"o\">[</span>OPTIONS<span class=\"o\">]</span> <span class=\"o\">[</span>PATHS<span class=\"o\">]</span>...\n</pre>\n<pre><span class=\"k\">[tool.interrogate]</span>\n<span class=\"n\">ignore-init-method</span> <span class=\"o\">=</span> <span class=\"kc\">true</span>\n<span class=\"n\">ignore-init-module</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">ignore-magic</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">ignore-semiprivate</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">ignore-private</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">ignore-module</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">fail-under</span> <span class=\"o\">=</span> <span class=\"mi\">95</span>\n<span class=\"n\">exclude</span> <span class=\"o\">=</span> <span class=\"k\">[\"setup.py\", \"docs\", \"build\"]</span>\n<span class=\"n\">ignore-regex</span> <span class=\"o\">=</span> <span class=\"k\">[\"^get$\", \"^mock_.*\", \".*BaseClass.*\"]</span>\n<span class=\"n\">verbose</span> <span class=\"o\">=</span> <span class=\"mi\">0</span>\n<span class=\"n\">quiet</span> <span class=\"o\">=</span> <span class=\"kc\">false</span>\n<span class=\"n\">whitelist-regex</span> <span class=\"o\">=</span> <span class=\"k\">[]</span>\n</pre>\n<p>To view all options available, run <tt>interrogate <span class=\"pre\">--help</span></tt>:</p>\n<pre><span class=\"go\">interrogate -h\nUsage: interrogate [OPTIONS] [PATHS]...\n\n  Measure and report on documentation coverage in Python modules.\n\nOptions:\n  --version                     Show the version and exit.\n  -v, --verbose                 Level of verbosity  [default: 0]\n  -q, --quiet                   Do not print output  [default: False]\n  -f, --fail-under INT | FLOAT  Fail when coverage % is less than a given\n                                amount.  [default: 80.0]\n\n  -e, --exclude PATH            Exclude PATHs of files and/or directories.\n                                Multiple `-e/--exclude` invocations supported.\n\n  -i, --ignore-init-method      Ignore `__init__` method of classes.\n                                [default: False]\n\n  -I, --ignore-init-module      Ignore `__init__.py` modules.  [default:\n                                False]\n\n  -m, --ignore-magic            Ignore all magic methods of classes.\n                                [default: False]\n\n                                NOTE: This does not include the `__init__`\n                                method. To ignore `__init__` methods, use\n                                `--ignore-init-method`.\n\n  -M, --ignore-module           Ignore module-level docstrings.  [default:\n                                False]\n\n  -p, --ignore-private          Ignore private classes, methods, and functions\n                                starting with two underscores.\n                                [default:False]\n\n                                NOTE: This does not include magic methods; use\n                                `--ignore-magic` and/or `--ignore-init-method`\n                                instead.\n\n  -s, --ignore-semiprivate      Ignore semiprivate classes, methods, and\n                                functions starting with a single underscore.\n                                [default: False]\n\n  -r, --ignore-regex STR        Regex identifying class, method, and function\n                                names to ignore. Multiple `-r/--ignore-regex`\n                                invocations supported.\n\n  -w, --whitelist-regex STR     Regex identifying class, method, and function\n                                names to include. Multiple `-w/--whitelist-\n                                regex` invocations supported.\n\n  -o, --output FILE             Write output to a given FILE.  [default:\n                                stdout]\n\n  -c, --config FILE             Read configuration from `pyproject.toml`.\n  -g, --generate-badge PATH     Generate a 'shields.io' status badge (an SVG\n                                image) in at a given file or directory.\n  -h, --help                    Show this message and exit.</span>\n</pre>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p><tt>interrogate</tt> was inspired by <a href=\"https://pypi.org/project/docstr-coverage\" rel=\"nofollow\"><tt><span class=\"pre\">docstr-coverage</span></tt></a>, which was forked from Alexey \u201cDataGreed\u201d Strelkov\u2019s <a href=\"https://bitbucket.org/DataGreed/docstring-coverage\" rel=\"nofollow\"><tt><span class=\"pre\">docstring-coverage</span></tt></a>, which was inspired by a 2004 <a href=\"http://code.activestate.com/recipes/355731/\" rel=\"nofollow\">recipe from James Harlow</a> <span class=\"smol\">(turtles\u2026)</span>.</p>\n<p>The cute <img alt=\"sloth\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6f21779961111f0440c1eadf58e5318a3ffd2c01/68747470733a2f2f696e746572726f676174652e72656164746865646f63732e696f2f656e2f6c61746573742f5f7374617469632f6c6f676f5f736d6f6c2e706e67\"> logo is by <a href=\"https://thenounproject.com/wojcik.justine/\" rel=\"nofollow\">JustineW</a> purchased via <a href=\"https://thenounproject.com/\" rel=\"nofollow\">the Noun Project</a> (but also available under the <a href=\"https://creativecommons.org/licenses/by/3.0/us/legalcode\" rel=\"nofollow\">Creative Commons License</a> with attribution).</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7175584, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "6bfe727b479480dc51a5b571b28a8bce", "sha256": "443570f27e675f2cadd046f7724b1d9819579f70fcdebfc36b92c7a6bc524914"}, "downloads": -1, "filename": "interrogate-1.0.0-py3-none-any.whl", "has_sig": true, "md5_digest": "6bfe727b479480dc51a5b571b28a8bce", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 10559, "upload_time": "2020-04-24T02:43:43", "upload_time_iso_8601": "2020-04-24T02:43:43.872586Z", "url": "https://files.pythonhosted.org/packages/9d/a1/b3fa4257ed07e3093b38ebce158ed6c74f5326197450b7fec0d27ea01eab/interrogate-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "98ef261ea2bf8fe94d1d675deb3aa54b", "sha256": "36bae3dfc32ca7ab02496e005eca68bc1cabd6be8025d75f404923d50133f744"}, "downloads": -1, "filename": "interrogate-1.0.0.tar.gz", "has_sig": true, "md5_digest": "98ef261ea2bf8fe94d1d675deb3aa54b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 33404, "upload_time": "2020-04-24T02:43:45", "upload_time_iso_8601": "2020-04-24T02:43:45.683696Z", "url": "https://files.pythonhosted.org/packages/7b/d0/1ad882c2e611fcb809cc2624454f2488f7758c2b4ce7ca8a8df1a6e796dd/interrogate-1.0.0.tar.gz", "yanked": false}], "1.0.0.post1": [{"comment_text": "", "digests": {"md5": "d7e35a34662c2213f44047b81be547d4", "sha256": "ac61d1ff0604f9032d103a036d0da9285d1d52f67c2243b0cc1bd9f720c7ddc2"}, "downloads": -1, "filename": "interrogate-1.0.0.post1-py3-none-any.whl", "has_sig": true, "md5_digest": "d7e35a34662c2213f44047b81be547d4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 12933, "upload_time": "2020-04-24T03:00:55", "upload_time_iso_8601": "2020-04-24T03:00:55.252406Z", "url": "https://files.pythonhosted.org/packages/9b/80/7f727ea7113735751f59bbb54bb6239c6d4981c90ef4603ddea175e7255e/interrogate-1.0.0.post1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "aef201722690e40cc1df10e632b239d8", "sha256": "a2961ac59f9f68db9c66a82b59807ebdcc1ba9f36648854ea2f981c8f1025238"}, "downloads": -1, "filename": "interrogate-1.0.0.post1.tar.gz", "has_sig": true, "md5_digest": "aef201722690e40cc1df10e632b239d8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 38252, "upload_time": "2020-04-24T03:00:56", "upload_time_iso_8601": "2020-04-24T03:00:56.951310Z", "url": "https://files.pythonhosted.org/packages/7e/d7/cd9899dcb6ca643fc209ccaa84a99ea95a52a897a8602c52e8c96d054800/interrogate-1.0.0.post1.tar.gz", "yanked": false}], "1.1.0": [{"comment_text": "", "digests": {"md5": "2e4995a9a2761143fcb3ef2913b89246", "sha256": "e32ea1fa4b8703c02eed787bbd24a8dadf791279aee1c241c1c87b07e48dae32"}, "downloads": -1, "filename": "interrogate-1.1.0-py3-none-any.whl", "has_sig": true, "md5_digest": "2e4995a9a2761143fcb3ef2913b89246", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 15348, "upload_time": "2020-04-25T01:02:45", "upload_time_iso_8601": "2020-04-25T01:02:45.929671Z", "url": "https://files.pythonhosted.org/packages/6d/e0/a5f64ec467ebb0bf3898c92b7b865cbfec1b6c489d008809141fb5c0f808/interrogate-1.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b330dbcfce0fc66ae4612546660fc42f", "sha256": "3400d66555791907ff387c1d872d1ec2379a94513216f5c0e31208f10e8ea031"}, "downloads": -1, "filename": "interrogate-1.1.0.tar.gz", "has_sig": true, "md5_digest": "b330dbcfce0fc66ae4612546660fc42f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 46301, "upload_time": "2020-04-25T01:02:47", "upload_time_iso_8601": "2020-04-25T01:02:47.467449Z", "url": "https://files.pythonhosted.org/packages/93/0d/4b015ad80a11a4611ae8a1e8697a550d8dec18064ec85ce4db41d51834e8/interrogate-1.1.0.tar.gz", "yanked": false}], "1.1.1": [{"comment_text": "", "digests": {"md5": "2f2c28056d5582bf49d4de58bb10677a", "sha256": "862c7fbbd71964c40e2e26f60228fea805b5d2422b1a3baa4f4718770b8cc56a"}, "downloads": -1, "filename": "interrogate-1.1.1-py3-none-any.whl", "has_sig": true, "md5_digest": "2f2c28056d5582bf49d4de58bb10677a", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17104, "upload_time": "2020-04-27T22:59:31", "upload_time_iso_8601": "2020-04-27T22:59:31.668031Z", "url": "https://files.pythonhosted.org/packages/a2/0d/b51e86cecaf5a3fba2ef548fdb40adb196ee43dc0f9307aca77d856de11b/interrogate-1.1.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5fffa268f07ef0141f5ea7a284e00027", "sha256": "b9fcdfe139d762449d8b0cf8042b6c582ccb3c50a26db82e9fe5aff4362860d7"}, "downloads": -1, "filename": "interrogate-1.1.1.tar.gz", "has_sig": true, "md5_digest": "5fffa268f07ef0141f5ea7a284e00027", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 48061, "upload_time": "2020-04-27T22:59:32", "upload_time_iso_8601": "2020-04-27T22:59:32.908833Z", "url": "https://files.pythonhosted.org/packages/9e/82/fdf66b0a407550dbaa242d8d00cf6ff0e94ff669bf5bcb41bd6f3badda82/interrogate-1.1.1.tar.gz", "yanked": false}], "1.1.2": [{"comment_text": "", "digests": {"md5": "10bab23ffaa03755cfe13f5872453867", "sha256": "8908e2d2f2abdb92869cec436a005a93f24b0255dc649e81e4280339266d3132"}, "downloads": -1, "filename": "interrogate-1.1.2-py3-none-any.whl", "has_sig": true, "md5_digest": "10bab23ffaa03755cfe13f5872453867", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 17832, "upload_time": "2020-04-29T14:19:30", "upload_time_iso_8601": "2020-04-29T14:19:30.679140Z", "url": "https://files.pythonhosted.org/packages/dc/f9/5b1a88175e42d89f2058d4ced139f00cd5c21ed189eb7463cf28825fc783/interrogate-1.1.2-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6b5e4dca17154b407332928070c61318", "sha256": "c716065c4e6d846d8a78cad2f7e4ed769b378910cfa4c53da15527ce016de095"}, "downloads": -1, "filename": "interrogate-1.1.2.tar.gz", "has_sig": true, "md5_digest": "6b5e4dca17154b407332928070c61318", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 54736, "upload_time": "2020-04-29T14:19:32", "upload_time_iso_8601": "2020-04-29T14:19:32.211584Z", "url": "https://files.pythonhosted.org/packages/9f/e9/5d4a6e59104e3c6fa5815cee5ea2c801a8fbef5e7650bf28aa5bda4f8ba6/interrogate-1.1.2.tar.gz", "yanked": false}], "1.1.3": [{"comment_text": "", "digests": {"md5": "003356a507d801975cc21eba5fcbae61", "sha256": "1106f41810976c7b3bb1dbb8fae035b7dc6d38b8d48a34f44b3e131762307c89"}, "downloads": -1, "filename": "interrogate-1.1.3-py3-none-any.whl", "has_sig": true, "md5_digest": "003356a507d801975cc21eba5fcbae61", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19318, "upload_time": "2020-05-02T21:04:42", "upload_time_iso_8601": "2020-05-02T21:04:42.088710Z", "url": "https://files.pythonhosted.org/packages/dc/e3/ee8a6c1d6e7051a791695f0cd29a0e33fb10636d08ab6b6373d972adb8ac/interrogate-1.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dced33927528666167b935a3be50dbc8", "sha256": "06b2ed6d13d27d43edf49b68db74e49661a71f36b2c81e37711932945b1e4107"}, "downloads": -1, "filename": "interrogate-1.1.3.tar.gz", "has_sig": true, "md5_digest": "dced33927528666167b935a3be50dbc8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 58919, "upload_time": "2020-05-02T21:04:43", "upload_time_iso_8601": "2020-05-02T21:04:43.777009Z", "url": "https://files.pythonhosted.org/packages/0b/f7/df02255266bf6b6f53e57820b53c9955bbec04f8b22b0529254c06efe015/interrogate-1.1.3.tar.gz", "yanked": false}], "1.1.4": [{"comment_text": "", "digests": {"md5": "77b7467228c3d0e6a700b9b1159780a7", "sha256": "0620dafdfdd89a15f8f36b4a2b41758ecd78d5a3a754f7880b86baa401691ea6"}, "downloads": -1, "filename": "interrogate-1.1.4-py3-none-any.whl", "has_sig": true, "md5_digest": "77b7467228c3d0e6a700b9b1159780a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19578, "upload_time": "2020-05-05T20:18:00", "upload_time_iso_8601": "2020-05-05T20:18:00.393570Z", "url": "https://files.pythonhosted.org/packages/6e/74/67ff8c3785c9511f3bfea261586c31ee0d530bde847a9178886d10ae07b2/interrogate-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6444a5c9902f02b1a704828ea90b5ff3", "sha256": "b75822896cfb13e0cf28ee864996d82018ef301cdd75719108f4088cc41cafff"}, "downloads": -1, "filename": "interrogate-1.1.4.tar.gz", "has_sig": true, "md5_digest": "6444a5c9902f02b1a704828ea90b5ff3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 59625, "upload_time": "2020-05-05T20:18:01", "upload_time_iso_8601": "2020-05-05T20:18:01.755195Z", "url": "https://files.pythonhosted.org/packages/2b/d4/ce87f04e6d20b02bbbc9265d2f86816046ca1bc09be7d47c521c94afcb8d/interrogate-1.1.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "77b7467228c3d0e6a700b9b1159780a7", "sha256": "0620dafdfdd89a15f8f36b4a2b41758ecd78d5a3a754f7880b86baa401691ea6"}, "downloads": -1, "filename": "interrogate-1.1.4-py3-none-any.whl", "has_sig": true, "md5_digest": "77b7467228c3d0e6a700b9b1159780a7", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 19578, "upload_time": "2020-05-05T20:18:00", "upload_time_iso_8601": "2020-05-05T20:18:00.393570Z", "url": "https://files.pythonhosted.org/packages/6e/74/67ff8c3785c9511f3bfea261586c31ee0d530bde847a9178886d10ae07b2/interrogate-1.1.4-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "6444a5c9902f02b1a704828ea90b5ff3", "sha256": "b75822896cfb13e0cf28ee864996d82018ef301cdd75719108f4088cc41cafff"}, "downloads": -1, "filename": "interrogate-1.1.4.tar.gz", "has_sig": true, "md5_digest": "6444a5c9902f02b1a704828ea90b5ff3", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 59625, "upload_time": "2020-05-05T20:18:01", "upload_time_iso_8601": "2020-05-05T20:18:01.755195Z", "url": "https://files.pythonhosted.org/packages/2b/d4/ce87f04e6d20b02bbbc9265d2f86816046ca1bc09be7d47c521c94afcb8d/interrogate-1.1.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:25 2020"}