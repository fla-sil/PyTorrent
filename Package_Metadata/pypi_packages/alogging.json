{"info": {"author": "Adrian Likins", "author_email": "adrian@likins.com", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.6", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.6"], "description": "========\nalogging\n========\n\n\n.. image:: https://img.shields.io/pypi/v/alogging.svg\n        :target: https://pypi.python.org/pypi/alogging\n\n.. image:: https://img.shields.io/travis/alikins/alogging.svg\n        :target: https://travis-ci.org/alikins/alogging\n\n.. image:: https://readthedocs.org/projects/alogging/badge/?version=latest\n        :target: https://alogging.readthedocs.io/en/latest/?badge=latest\n        :alt: Documentation Status\n\n.. image:: https://pyup.io/repos/github/alikins/alogging/shield.svg\n     :target: https://pyup.io/repos/github/alikins/alogging/\n     :alt: Updates\n\n\nPython logging tools and utils.\n\n\nUsage\n-----\n\nTo use alogging in a project::\n\n    import alogging\n\nExamples\n--------\n\nBasic use of alogging::\n\n    import alogging\n\n    # create a logging.Logger object, will use the __name__ of the\n    # module by default. Equilivent to 'log = logging.getLogger(__name__)'\n    log = alogging.get_logger()\n\n    log.debug('created a Logger object so use it for a debug msg')\n\n    if __name__ = '__main__':\n        main_log = alogging.app_setup(name='example.main')\n        main_log.debug('started main')\n\nMore advanced::\n\n    import alogging\n\n    # local alias for alogging.a()\n    a = alogging.a\n\n    log = alogging.get_logger()\n\n    class ThingToDo(object):\n        def __init__(self, requirement, priority=None, assigner=None):\n            # get a Logger named 'example.ThingToDo'\n            self.log = alogging.get_class_logger(self)\n\n            self.log.info('Task as assigned: req=%s, pri=%s, ass=%s', requirement, priority, assigner)\n\n            priority = priority or 'never'\n\n            self.log.info('Task reprioritized: req=%s, pri=%s, ass=%s', requirement, priority, assigner')\n\n\n    # alogging.t decorator will log when the decorated method is called,\n    # what args it was passed, and what it's return value was\n\n    @alogging.t\n    def space_out_for_while(duration=None):\n        # space out for 10 minutes by default\n        duration = duration or 600\n\n        # return the total amount of work accomplished\n        return 0\n\n    def find_coffee(coffee_places):\n        log.debug('looking for coffee')\n        return None\n\n    def do_startup_stuff():\n        coffee_places = ['piehole', 'mug_on_desk', 'coffee_machine', 'krankies']\n        # log the the args to find_coffee as it is called\n        has_coffee = a(find_coffee(coffee_places))\n\n        work_accomplished = space_out_for_while(duration=300)\n\n    def do_work():\n        next_task = TaskToDo('finish TODO list', assigner='Lumberg')\n        if not next_task:\n            return\n\n        # oh no, work...\n        log.error(\"I'm slammed at the moment, I can't do %s', next_task)\n        raise Exception()\n\n    if __name__ = '__main__':\n        # use some reasonable defaults for setting up logging.\n        # - log to stderr\n        # - use a default format:\n        #   \"\"\"%(asctime)s,%(msecs)03d %(levelname)-0.1s %(name)s %(processName)s:%(process)d %(funcName)s:%(lineno)d - %(message)s\"\"\"\n        main_log = alogging.app_setup(name='example.main')\n        main_log.debug('Log to logging \"example.main\"')\n\n        do_startup_stuff()\n\n        try:\n            do_work()\n        except Exception as exc:\n            # gruntle a bit and continue\n            log.exception(exc)\n\n        return 0\n\n\nLicense\n-------\n\n* Free software: MIT license\n\n\nFeatures\n--------\n\n* TODO\n\nAuthors\n-------\n\n* Adrian Likins\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/alikins/alogging", "keywords": "alogging", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "alogging", "package_url": "https://pypi.org/project/alogging/", "platform": "", "project_url": "https://pypi.org/project/alogging/", "project_urls": {"Homepage": "https://github.com/alikins/alogging"}, "release_url": "https://pypi.org/project/alogging/0.4.2/", "requires_dist": ["pygments", "sqlparse", "logging-tree"], "requires_python": "", "summary": "A collection of logging utilities", "version": "0.4.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://pypi.python.org/pypi/alogging\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/alogging.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/63570abe00ace3f5291684c6cadf8f482310e1a2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616c6f6767696e672e737667\"></a>\n<a href=\"https://travis-ci.org/alikins/alogging\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/alikins/alogging.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d5088ff695434e99ebb2150918dea7a4ac0f56a2/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f616c696b696e732f616c6f6767696e672e737667\"></a>\n<a href=\"https://alogging.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/17c93cc64df8e98303936e7e0c7f6a6257bef101/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f616c6f6767696e672f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://pyup.io/repos/github/alikins/alogging/\" rel=\"nofollow\"><img alt=\"Updates\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/118df6780fb57c38d9af9120272896e7135ab2f9/68747470733a2f2f707975702e696f2f7265706f732f6769746875622f616c696b696e732f616c6f6767696e672f736869656c642e737667\"></a>\n<p>Python logging tools and utils.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To use alogging in a project:</p>\n<pre>import alogging\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Basic use of alogging:</p>\n<pre>import alogging\n\n# create a logging.Logger object, will use the __name__ of the\n# module by default. Equilivent to 'log = logging.getLogger(__name__)'\nlog = alogging.get_logger()\n\nlog.debug('created a Logger object so use it for a debug msg')\n\nif __name__ = '__main__':\n    main_log = alogging.app_setup(name='example.main')\n    main_log.debug('started main')\n</pre>\n<p>More advanced:</p>\n<pre>import alogging\n\n# local alias for alogging.a()\na = alogging.a\n\nlog = alogging.get_logger()\n\nclass ThingToDo(object):\n    def __init__(self, requirement, priority=None, assigner=None):\n        # get a Logger named 'example.ThingToDo'\n        self.log = alogging.get_class_logger(self)\n\n        self.log.info('Task as assigned: req=%s, pri=%s, ass=%s', requirement, priority, assigner)\n\n        priority = priority or 'never'\n\n        self.log.info('Task reprioritized: req=%s, pri=%s, ass=%s', requirement, priority, assigner')\n\n\n# alogging.t decorator will log when the decorated method is called,\n# what args it was passed, and what it's return value was\n\n@alogging.t\ndef space_out_for_while(duration=None):\n    # space out for 10 minutes by default\n    duration = duration or 600\n\n    # return the total amount of work accomplished\n    return 0\n\ndef find_coffee(coffee_places):\n    log.debug('looking for coffee')\n    return None\n\ndef do_startup_stuff():\n    coffee_places = ['piehole', 'mug_on_desk', 'coffee_machine', 'krankies']\n    # log the the args to find_coffee as it is called\n    has_coffee = a(find_coffee(coffee_places))\n\n    work_accomplished = space_out_for_while(duration=300)\n\ndef do_work():\n    next_task = TaskToDo('finish TODO list', assigner='Lumberg')\n    if not next_task:\n        return\n\n    # oh no, work...\n    log.error(\"I'm slammed at the moment, I can't do %s', next_task)\n    raise Exception()\n\nif __name__ = '__main__':\n    # use some reasonable defaults for setting up logging.\n    # - log to stderr\n    # - use a default format:\n    #   \"\"\"%(asctime)s,%(msecs)03d %(levelname)-0.1s %(name)s %(processName)s:%(process)d %(funcName)s:%(lineno)d - %(message)s\"\"\"\n    main_log = alogging.app_setup(name='example.main')\n    main_log.debug('Log to logging \"example.main\"')\n\n    do_startup_stuff()\n\n    try:\n        do_work()\n    except Exception as exc:\n        # gruntle a bit and continue\n        log.exception(exc)\n\n    return 0\n</pre>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<ul>\n<li>Free software: MIT license</li>\n</ul>\n</div>\n<div id=\"features\">\n<h2>Features</h2>\n<ul>\n<li>TODO</li>\n</ul>\n</div>\n<div id=\"authors\">\n<h2>Authors</h2>\n<ul>\n<li>Adrian Likins</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 7102244, "releases": {"0.4.1": [{"comment_text": "", "digests": {"md5": "cbe5cef7b02e24c51c0c7c7a23ac1fba", "sha256": "e97858d5ad06a1887060b5fadac23b4072e0812b2605b76b2fb6972df300ae9f"}, "downloads": -1, "filename": "alogging-0.4.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cbe5cef7b02e24c51c0c7c7a23ac1fba", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12384, "upload_time": "2020-04-24T18:49:35", "upload_time_iso_8601": "2020-04-24T18:49:35.401418Z", "url": "https://files.pythonhosted.org/packages/4c/5b/94ef584b2862974895f1c38a570870b7235bbace7567cf4151b5652d58ca/alogging-0.4.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0a6d15b4a8c82aa38511124fe9388439", "sha256": "e22eee24e436e2bd4c9a5e13af55c7a216b83b4781bd0e70c3642eab3c87c06f"}, "downloads": -1, "filename": "alogging-0.4.1.tar.gz", "has_sig": false, "md5_digest": "0a6d15b4a8c82aa38511124fe9388439", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10137, "upload_time": "2020-04-24T18:49:37", "upload_time_iso_8601": "2020-04-24T18:49:37.143435Z", "url": "https://files.pythonhosted.org/packages/9f/90/7fa09053a9b8d8c9bba987b129b9ad558c405e72c256c44a71993d3211d1/alogging-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "f4b645c401ff90a4f049be7ae7b9cec5", "sha256": "f68aa795444cc153bc18dbad2df2ea17c051b74551102f54154f6deaffbb61df"}, "downloads": -1, "filename": "alogging-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4b645c401ff90a4f049be7ae7b9cec5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12840, "upload_time": "2020-04-26T02:04:39", "upload_time_iso_8601": "2020-04-26T02:04:39.787672Z", "url": "https://files.pythonhosted.org/packages/05/64/3aac8ed243eac45273c6c7c7dc19bf3521b08a561f7b38a2a88447ab3fbe/alogging-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3feb18d4d1dd5faddbe79a072ca5e4e3", "sha256": "c7a7182b9a959f2830e13722e8e834350652f0c930c0946e9339aa82e6b9dcb0"}, "downloads": -1, "filename": "alogging-0.4.2.tar.gz", "has_sig": false, "md5_digest": "3feb18d4d1dd5faddbe79a072ca5e4e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10615, "upload_time": "2020-04-26T02:04:40", "upload_time_iso_8601": "2020-04-26T02:04:40.574413Z", "url": "https://files.pythonhosted.org/packages/cb/e1/2b80a60c9250e8a12ae6db72218d514fd2e3eedc9acce65dcf7b507585cd/alogging-0.4.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f4b645c401ff90a4f049be7ae7b9cec5", "sha256": "f68aa795444cc153bc18dbad2df2ea17c051b74551102f54154f6deaffbb61df"}, "downloads": -1, "filename": "alogging-0.4.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f4b645c401ff90a4f049be7ae7b9cec5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12840, "upload_time": "2020-04-26T02:04:39", "upload_time_iso_8601": "2020-04-26T02:04:39.787672Z", "url": "https://files.pythonhosted.org/packages/05/64/3aac8ed243eac45273c6c7c7dc19bf3521b08a561f7b38a2a88447ab3fbe/alogging-0.4.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3feb18d4d1dd5faddbe79a072ca5e4e3", "sha256": "c7a7182b9a959f2830e13722e8e834350652f0c930c0946e9339aa82e6b9dcb0"}, "downloads": -1, "filename": "alogging-0.4.2.tar.gz", "has_sig": false, "md5_digest": "3feb18d4d1dd5faddbe79a072ca5e4e3", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10615, "upload_time": "2020-04-26T02:04:40", "upload_time_iso_8601": "2020-04-26T02:04:40.574413Z", "url": "https://files.pythonhosted.org/packages/cb/e1/2b80a60c9250e8a12ae6db72218d514fd2e3eedc9acce65dcf7b507585cd/alogging-0.4.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:20 2020"}