{"info": {"author": "David Young", "author_email": "davidrobertyoung@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 2.7", "Topic :: Utilities"], "description": "Queen's University Belfast Imitation Transient Surveys (QUBITS)\n===============================================================\n\nAbstract:\n---------\n\nQUBITS is a python package and command-line tool used to simulate\nvarious flavours of astronomical transient surveys. The simulations are\ndesigned to be easy to use and tailor without having to hack any code,\nand many of the simulation parameters can be found in one settings file.\n\nAlthough recoded from scratch, the `second chapter of my\nthesis <qubits/assets/dry_thesis_ch2.pdf>`__ describes most of the\ndetails used to build these transient survey simulations.\n\nInstallation and Setting Up Your Environment\n--------------------------------------------\n\nQUBITS relies heavily on\n```pysynphot`` <http://pysynphot.readthedocs.io/en/latest/index.html>`__\nwhich no longer supports a PyPI distribution. Therefore the easiest way\nto get QUBITS running is to install\n`Anaconda <https://docs.continuum.io/anaconda/install/>`__ and then use\nthe `STScI's AstroConda channel to install their Standard Software\nStack <https://astroconda.readthedocs.io/en/latest/installation.html#configure-conda-to-use-the-astroconda-channel>`__\n(which includes pysynphot). Once this stack is installed,\ncreate/activate a conda environment that includes the stack and run:\n\n::\n\n    pip install qubits\n\nThis should install the QUBITS code and all of its dependencies. If this\ndoesn't work, or you want to tinker with the code by installing QUBITS\nas a development package, then clone the project using this command:\n\n::\n\n    git clone git@github.com:thespacedoctor/qubits.git <folder_name>\n\nand then ``cd <folder_name>`` and:\n\n::\n\n    python setup.py install\n\nor\n\n::\n\n    python setup.py develop\n\n``PYSYN_CDBS`` The STScI Calibration Reference Data System\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nNote that the data files required by\u00a0\\ *pysynphot*, and hence QUBITS,\nare distributed separately by\u00a0\\ `STScI Calibration Reference Data\nSystem <http://www.stsci.edu/hst/observatory/crds/throughput.html>`__.\nBefore starting you will need to download of the calibration data from\nthe FTP area linked from the `STScI\nwebpage <http://www.stsci.edu/hst/observatory/crds/throughput.html>`__,\nunpack them somewhere appropriate and organise them into a single nested\nfolder structure like so:\n\n.. figure:: https://farm5.staticflickr.com/4374/36852357776_03eeaaf8a2_o.png%20title=%22PYSYN_CDBS%22%20width=600px\n   :alt: PYSYN\\_CDBS\n\n   PYSYN\\_CDBS\n\nFinally, you need to make sure the ``PYSYN_CDBS`` environment variable\nis set so *pysynphot* knows where these data live. Add the following to\nyour ``.bashrc`` file and don't forget to open a new terminal window\nbefore you begin to use QUBITS:\n\n``bash export PYSYN_CDBS=/path/to/cdbs/``\n\nI haven't tested this on many other machines so let me know what goes\nwrong with the installation!\n\nUsage\n-----\n\n::\n\n    Usage:\n        qubits init <pathToWorkspace>\n        qubits run -s <pathToSettingsFile> -o <pathToOutputDirectory> -d <pathToSpectralDatabase>\n\n        COMMANDS\n        --------\n        init            setup a qubits settings file and a test spectral database\n\n        ARGUMENTS\n        ---------\n        pathToSettingsFile    path to the yaml settings file\n        pathToWorkspace       path to a directory within which to setup an example qubit workspace\n\n        FLAGS\n        -----\n        -h, --help      show this help message\n        -s, --settings  provide a path to the settings file\n        -d, --database  provide the path to the root directory containing your nested-folders and files spectral database\n        -o, --output    provide a path to an output directory for the results of the simulations*\n\nQuick Start\n-----------\n\nIf you're using QUBITS for the first time, or have not used it in a\nwhile, the best way to start is to use the ``qubits init`` command to\ngenerate a template workspace for yourself. Running the command:\n\n``bash qubits init ~/Desktop/qubits_workspace``\n\ncreates a template workspace on your desktop with:\n\n#. a template spectral database ``qubits_spectral_database``,\n#. a default qubits settings file ``qubits_settings.yaml``,\n#. an empty output directory ``qubits_output``\n\n.. figure:: https://farm5.staticflickr.com/4403/36868827172_3eaec29a82_o.png%20title=%22qubits%20template%20workspace%22%20width=600px\n   :alt: qubits template workspace\n\n   qubits template workspace\n\nOnce you familiarise yourself with running QUBITS you can move this\nworkspace elsewhere and tailor the spectral database and settings file\nto your needs.\n\nBuilding a Spectral Database\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nWithin the folder you choose to place your spectral database, create\nappropriately named folders for each of the specific transient objects\nyou would like to include in the simulations. Note these are the names\nto be included in the settings file (see below) and that will appear in\nresults files, plots and logs. Your database might look like this:\n\n::\n\n    qubits_spectral_database/\n        SNIa/\n            t-021.00.spec\n            t-012.00.spec\n            t+003.00.spec\n            t+015.00.spec\n            t+024.00.spec\n            t+068.00.spec\n            t+098.00.spec\n            t+134.00.spec\n        SNIIp/\n            ...\n        SLSN/\n            ...\n\nName your spectral files with times relative to some epoch within the\ntransient's evolution (e.g. peak magnitude or explosion date). QUBITS\nwill determine the time of peak magnitude when generating the\nlightcurves from the spectra and recalibrate the time scale relative to\nthis point. The files should contain two space separated columns\ncontaining wavelength (\u00c5) and flux (ergs/s/cm^2/\u00c5). Have a look in the\ntemplate database supplied by the ``qubits init`` command.\n\nSettings File\n~~~~~~~~~~~~~\n\nA template simulation settings file is provided by the ``qubits init``\ncommand and should look something like this:\n\n::\n\n    version: 1\n\n    ##### PROGRAM EXECUTION SETTINGS #####\n    Program Settings:\n        # STAGE 1 - LIGHTCURVES\n        Extract Lightcurves from Spectra: True\n        # STAGE 2 - KCORRECTION DATABASE\n        Generate KCorrection Database: True\n        Generate KCorrection Plots: True  # ONLY SET TO TRUE IF ONLY A FEW KCORRECTIONS ARE TO BE CALCULATED\n        # STAGE 3 - RUNNING SIMULATION\n        Run the Simulation: True\n        Plot Simulation Helper Plots: True  #  ONLY PLOT IF DEBUGGING\n        # STAGE 4 - COMPILING RESULTS\n        Compile and Plot Results: True\n        Simulation Results File Used for Plots: simulation_results_20130919t131758.yaml\n\n    ###### SIMULATED SURVEY CONSTRAINTS ######\n    Extra Survey Constraints:\n        Faint-Limit of Peak Magnitude: 21.50 # The lower-limit of the apparent peak magnitude so that the transient can be distinguished from other flavours of transients. Set this to 99.9 for this setting to be disregarded.\n        Observable for at least ? number of days: 100 #\u00a0Set this to 1 for this setting to be distregarded\n    Lower Redshift Limit: 0.00 ## Usually set to 0.0\n    Upper Redshift Limit: 1.0\n    Redshift Resolution: 0.05 ## Higher resolution (lower number) means the simulations are more accuate but the code shall take long to run, especially for the k-correction database generation.\n    Sky Area of the Survey (square degrees): 70\n    Limiting Magnitudes:\n        g : 23.3\n        r : 23.3\n        i : 23.3\n        z : 21.7\n    Survey Cadence:\n        # YEAR MINUS FRACTION LOST DUE TO OBJECTS BEING LOCATED BEHIND THE SUN\n        Observable Fraction of Year: 0.5\n        Fraction of Year Lost to Weather etc: 0.4\n        Filters:\n            - band: g\n              day of year of first scheduled observation: 1\n              repeat every ? days: 3\n              Fraction of Lunar Month Lost to Moon: 0.27\n            - band: r\n              day of year of first scheduled observation: 1\n              repeat every ? days: 3\n              Fraction of Lunar Month Lost to Moon: 0.27\n            - band: i\n              day of year of first scheduled observation: 2\n              repeat every ? days: 3\n              Fraction of Lunar Month Lost to Moon: 0.27\n            - band: z\n              day of year of first scheduled observation: 3\n              repeat every ? days: 3\n              Fraction of Lunar Month Lost to Moon: 0.27\n\n    ###### K-CORRECTION GENERATION ######\n    Rest Frame Filter for K-corrections: g # This is the filter that the k-corrections are anchored to. The simulations will convert from this observed band magnitude to the rest frame magnitudes to calculate the k-correction.\n    K-correction temporal resolution (days): 1.0 # Only increase the resolution here if you have many spectra in your database and k-corrections are taking too long to generate.\n    Order of polynomial used to fits k-corrections: 18 # Check the k-correction polynomial plots and tweak this value as needed.\n    Minimum number of datapoints used to generate k-correction curve: 3 # If the are not enough spectra or too many spectra have been redshifted out of the range of the observed frame band-pass, then there are few points to generate a polynomial k-correction lightcurve. 3 is probably the barely-passable minimum.\n\n    ###### SIMULATED UNIVERSE CONSTRAINTS ######\n    CCSN Progenitor Population Fraction of IMF: 0.007\n    Transient to CCSN Ratio: 10e-5\n    Simulation Sample: 50 # Number of transients to include in simulations. More = more accurate but sims take longer to run. 100 good for testing & 10,000 good for science.\n    Extinctions:\n        constant or random: constant # Parameter not yet implemented - leave as `constant`\n        constant E(b-v): 0.023 # 0.023 is the mean for the PS1-MD fields\n        host: # Parameter not yet implemented\n        galactic: # Parameter not yet implemented\n    Relative Rate Set to Use: SLSNe\n    Relative SN Rates:\n        SLSNe:\n            SN2007bi: 0.5 # make sure transient names correspond to folder names containing thier spectral data-sets\n            SLSN: 0.5\n    SN Absolute Peak-Magnitude Distributions:\n        magnitude:\n            SN2007bi: -17.08\n            SLSN: -20.21\n        sigma:\n            SN2007bi: 0.001\n            SLSN: 0.001\n\n    ###### LIGHTCURVE GENERATION & CONSTRAINTS\n    Lightcurves:\n        SN2007bi:\n            End of lightcurve relative to peak: 300 # Constrain the end of the lightcurve so polynomial fits don't go awal\n        SLSN:\n            End of lightcurve relative to peak: 220\n    Order of polynomial used to fits lightcurves: 6 # Check the extracted lightcurve plots and tweak this value as needed.\n    # Often it is useful to set a an explosion day (relative to the timescale used in naming the files in the spectral database).\n    # This helps constrain the polynomials of the light- and K-correction- curves generated in the simulations.\n    # SET TO `None` TO DISREGARD THIS SETTING\n    Explosion Days:\n        SLSN: -70\n        SN2007bi: -70\n    # You can also extend the tail of the lightcurve to better constrain the polynomial. Set to `True` or `False`\n    Extend lightcurve tail?:\n        SLSN: True\n        SN2007bi: True\n\n    ###### LOGGING\n    Level of logging required: WARNING # DEBUG, INFO, WARNING, ERROR or CRITICAL\n\nThe QUBITS Simulation Stages\n----------------------------\n\nThe four stages of the simulation are:\n\n#. Extracting the Lightcurves from Spectra\n#. Generating a K-Correction Database\n#. Running the Simulation, and\n#. Compiling and Plotting Results\n\nAt the top of this settings file you turn the various stages of the\nsimulation build on and off:\n\n::\n\n    Program Settings:\n            # STAGE 1 - LIGHTCURVES\n            Extract Lightcurves from Spectra: True\n            # STAGE 2 - KCORRECTION DATABASE\n            Generate KCorrection Database: True\n            Generate KCorrection Plots: True  # ONLY SET TO TRUE IF ONLY A FEW KCORRECTIONS ARE TO BE CALCULATED\n            # STAGE 3 - RUNNING SIMULATION\n            Run the Simulation: True\n            Plot Simulation Helper Plots: True  #  ONLY PLOT IF DEBUGGING\n            # STAGE 4 - COMPILING RESULTS\n            Compile and Plot Results: True\n            Simulation Results File Used for Plots: simulation_results_20130919t131758.yaml\n\nWhen you first use the simulations it's best to set all stages of the\nsimulation to *False*, then incrementally run the code through each\nstage. You will always run the code with the ``qubits run`` command with\nthe following syntax:\n\n``bash qubits run -s <pathToSettingsFile> -o <pathToOutputDirectory> -d <pathToSpectralDatabase>``\n\nSo to run QUBITS with our template workspace we setup in the quick start\nworkspace above, we run:\n\n``bash qubits run -s ~/Desktop/qubits_workspace/qubits_settings.yaml -o ~/Desktop/qubits_workspace/qubits_output -d ~/Desktop/qubits_workspace/qubits_spectral_database``\n\nBelow you will find details of each build stage of the simulation - read\nthe settings file comments to determine which settings you need to\ntailor for the simulation you are trying to run.\n\n1. Extracting the Lightcurves from Spectra\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThis stage generates the ``z=0`` lightcurves. Lightcurve plots are\ncreated in the *plots* folder in the output directory. Please note\nQUBITS' ability to generate decent lightcurves relies heavily on the\nquality of your spectral database; it needs good wavelength coverage to\nbe able to synthesize the photometry and good temporal coverage to build\nan entire lightcurve. The extracted lightcurves are stored as python\nobjects in the a file\ncalled\u00a0\\ *transient\\_light\\_curves.yaml*\u00a0in\u00a0``<pathToOutputDirectory>``.\n\nOnce you've generated the lightcurves, have a look at the lightcurve\nplots (some may be blank if temporal/wavelength coverage was deemed too\npoor to create a lightcurve for the given band-pass at ``z=0``). You may\nwant to tweak some lightcurve parameters in the settings file and\nrebuild the lightcurve plots. Once you're happy move onto the next\nstage.\n\n.. figure:: qubits/assets/SNOne_-_i-band.png\n   :alt: example lightcurve\n\n   example lightcurve\n\nCurrent filters are the PS1 *g*, *r*, *i*, *z* filters.\n\nNote *pysynphot* can be very chatty and prints log messages straight to\nstdout which can't be turned off easily. Don't worry if you see\nsomething like this:\n\n    ... does not have a defined binset in the wavecat table. The waveset\n    of the spectrum will be used instead.\n\n2. Generate K-Correction Database\n~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nThe code will use the spectra to generate a database of K-corrections\nwith the given settings. They will be created in the ``k_corrections``\ndirectory of your output folder. For each redshift and k-correction\nfilter-set, a dataset is generated which is used to create a polynomial\nfor *rest frame epoch* vs *kcorrection*. Note the k-corrections also act\nas colour-transformations between filters at low-redshift.\n\nBy setting ``Generate K-Correction Plots`` to ``True`` a plot for each\nK-correction dataset will be generated. Set this to true if only a few\nk-corrections are to be calculated, i.e. when you are testing/debugging\nthe simulation - otherwise the k-correction generation will take\nforever!\n\n.. figure:: qubits/assets/k_ir_at_z_=_0.3.png\n   :alt: example k-correction polynomial\n\n   example k-correction polynomial\n\n3. Run the Simulation\n~~~~~~~~~~~~~~~~~~~~~\n\nHere the simulation is run using the settings found in the settings file\n(cadence of observation, limiting-magnitudes, survey volume, loss due to\nweather etc). This stage is a two part process:\n\n#. **Simulating the Universe** - placing SNe throughout the volume\n   requested at random redshifts, with the relative-rate supplied and\n   with the peak magnitude distributions given.\n#. **Simulating the Survey** - simulates the survey with the setup\n   supplied in the settings files with cadence of observation,\n   limiting-magnitudes, survey volume, loss due to weather etc.\n\nThe results of the simulation are place in a (large) date-time stamped\nyaml file in the output folder named something similar to\n``simulation_results_20130425t053500.yaml``. The date-time appended to\nthe filename will be the time the simulation was run so you can run many\nsimulations without worrying about overwriting previous outputs. The\nsettings used to run the simulation are also recorded in this file.\n\nThe ``Plot Simulation Helper Plots`` setting should only be set to\n*True* if you are trying to debug the code and work out how the input\ndata is being manipulated to create the simulations.\n\n4. Compile and Plot Results\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n\nUse the ``Simulation Results File Used for Plots`` setting to set the\nsimulation results file used to generate the result plots and log:\n\n::\n\n    Simulation Results File Used for Plots: simulation_results_20130425t053500.yaml\n\nThis compiles the results into a markdown file (plain text with minimal\nmarkup) and a styled HTML file into the\n``<pathToOutputDirectory>/results`` folder with names similar to:\n\n::\n\n    simulation_result_log_20130426t110856.md\n    simulation_result_log_20130426t110856.html\n\nHere is an example of the output log file:\n\n.. figure:: qubits/assets/example_results.png\n   :alt: example results file\n\n   example results file\n\nWARNINGS\n--------\n\nQUBITS can return many warnings, usually related the limitations of your\nspectral databases. Here are some:\n\n-  **'does not have a defined binset in the wavecat table. The waveset\n   of the spectrum will be used instead.'**: This is a pysynphot message\n   and not a QUBITS log. Don't worry.\n-  **' failed with this error: Spectrum and bandpass are disjoint'**:\n   This generally means the spectrum quoted doesn't cover the wavelength\n   range of the band-pass and therefore a magnitude can't be\n   synthesised.\n-  **'Spectrum and bandpass do not fully overlap. You may use\n   force=[extrap\\|taper] to force this Observation anyway.'**: As above\n   but the spectral wavelength range does partially cover the band-pass\n-  **'could not find the magnitude from spectrum /\\*\\*\\*/t+601.00.spec\n   using the filter sdss,g - failed with this error: Integrated flux is\n   <= 0'**: This generally means the spectrum quoted doesn't entirely\n   cover the wavelength range of the band-pass and therefore a magnitude\n   can't be synthesised.\n-  **'the k-correction file z0pt30.yaml contains less than 3 datapoints\n   to convert from g restframe to z observed frame for the SNOne model -\n   polynomial shall not be generated'**: The was not enough\n   temporal/wavelength coverage to generate k-corrections for the quoted\n   rest/observed frame filter-set at this redshift\n\nIssues\n------\n\nPlease report any issues\n`here <https://github.com/thespacedoctor/qubits/issues>`__.\n\n`Pull requests <https://github.com/thespacedoctor/qubits/pulls>`__ are\nwelcomed!\n\nLicense\n-------\n\nCopyright (c) 2016 David Young\n\nPermission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\"Software\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\n\nThe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "https://github.com/thespacedoctor/qubits/archive/v0.3.4.zip", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/thespacedoctor/qubits", "keywords": "transient, astronomy, simulation", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "qubits", "package_url": "https://pypi.org/project/qubits/", "platform": "", "project_url": "https://pypi.org/project/qubits/", "project_urls": {"Download": "https://github.com/thespacedoctor/qubits/archive/v0.3.4.zip", "Homepage": "https://github.com/thespacedoctor/qubits"}, "release_url": "https://pypi.org/project/qubits/0.3.4/", "requires_dist": ["astrocalc", "fundamentals", "pysynphot", "pyyaml", "qubits"], "requires_python": "", "summary": "The Queen's University Belfast Imitation Transient Surveys", "version": "0.3.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"abstract\">\n<h2>Abstract:</h2>\n<p>QUBITS is a python package and command-line tool used to simulate\nvarious flavours of astronomical transient surveys. The simulations are\ndesigned to be easy to use and tailor without having to hack any code,\nand many of the simulation parameters can be found in one settings file.</p>\n<p>Although recoded from scratch, the <a href=\"qubits/assets/dry_thesis_ch2.pdf\" rel=\"nofollow\">second chapter of my\nthesis</a> describes most of the\ndetails used to build these transient survey simulations.</p>\n</div>\n<div id=\"installation-and-setting-up-your-environment\">\n<h2>Installation and Setting Up Your Environment</h2>\n<p>QUBITS relies heavily on\n<tt>`pysynphot</tt> &lt;<a href=\"http://pysynphot.readthedocs.io/en/latest/index.html\" rel=\"nofollow\">http://pysynphot.readthedocs.io/en/latest/index.html</a>&gt;`__\nwhich no longer supports a PyPI distribution. Therefore the easiest way\nto get QUBITS running is to install\n<a href=\"https://docs.continuum.io/anaconda/install/\" rel=\"nofollow\">Anaconda</a> and then use\nthe <a href=\"https://astroconda.readthedocs.io/en/latest/installation.html#configure-conda-to-use-the-astroconda-channel\" rel=\"nofollow\">STScI\u2019s AstroConda channel to install their Standard Software\nStack</a>\n(which includes pysynphot). Once this stack is installed,\ncreate/activate a conda environment that includes the stack and run:</p>\n<pre>pip install qubits\n</pre>\n<p>This should install the QUBITS code and all of its dependencies. If this\ndoesn\u2019t work, or you want to tinker with the code by installing QUBITS\nas a development package, then clone the project using this command:</p>\n<pre>git clone git@github.com:thespacedoctor/qubits.git &lt;folder_name&gt;\n</pre>\n<p>and then <tt>cd &lt;folder_name&gt;</tt> and:</p>\n<pre>python setup.py install\n</pre>\n<p>or</p>\n<pre>python setup.py develop\n</pre>\n<div id=\"pysyn-cdbs-the-stsci-calibration-reference-data-system\">\n<h3><tt>PYSYN_CDBS</tt> The STScI Calibration Reference Data System</h3>\n<p>Note that the data files required by\u00a0<em>pysynphot</em>, and hence QUBITS,\nare distributed separately by\u00a0<a href=\"http://www.stsci.edu/hst/observatory/crds/throughput.html\" rel=\"nofollow\">STScI Calibration Reference Data\nSystem</a>.\nBefore starting you will need to download of the calibration data from\nthe FTP area linked from the <a href=\"http://www.stsci.edu/hst/observatory/crds/throughput.html\" rel=\"nofollow\">STScI\nwebpage</a>,\nunpack them somewhere appropriate and organise them into a single nested\nfolder structure like so:</p>\n<div>\n<img alt=\"PYSYN\\_CDBS\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/304910b0bedddd3ad94c30d99a291aefc7c6a63d/68747470733a2f2f6661726d352e737461746963666c69636b722e636f6d2f343337342f33363835323335373737365f303365656161663861325f6f2e706e672532307469746c653d253232505953594e5f4344425325323225323077696474683d3630307078\">\n<p>PYSYN_CDBS</p>\n</div>\n<p>Finally, you need to make sure the <tt>PYSYN_CDBS</tt> environment variable\nis set so <em>pysynphot</em> knows where these data live. Add the following to\nyour <tt>.bashrc</tt> file and don\u2019t forget to open a new terminal window\nbefore you begin to use QUBITS:</p>\n<p><tt>bash export <span class=\"pre\">PYSYN_CDBS=/path/to/cdbs/</span></tt></p>\n<p>I haven\u2019t tested this on many other machines so let me know what goes\nwrong with the installation!</p>\n</div>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<pre>Usage:\n    qubits init &lt;pathToWorkspace&gt;\n    qubits run -s &lt;pathToSettingsFile&gt; -o &lt;pathToOutputDirectory&gt; -d &lt;pathToSpectralDatabase&gt;\n\n    COMMANDS\n    --------\n    init            setup a qubits settings file and a test spectral database\n\n    ARGUMENTS\n    ---------\n    pathToSettingsFile    path to the yaml settings file\n    pathToWorkspace       path to a directory within which to setup an example qubit workspace\n\n    FLAGS\n    -----\n    -h, --help      show this help message\n    -s, --settings  provide a path to the settings file\n    -d, --database  provide the path to the root directory containing your nested-folders and files spectral database\n    -o, --output    provide a path to an output directory for the results of the simulations*\n</pre>\n</div>\n<div id=\"quick-start\">\n<h2>Quick Start</h2>\n<p>If you\u2019re using QUBITS for the first time, or have not used it in a\nwhile, the best way to start is to use the <tt>qubits init</tt> command to\ngenerate a template workspace for yourself. Running the command:</p>\n<p><tt>bash qubits init ~/Desktop/qubits_workspace</tt></p>\n<p>creates a template workspace on your desktop with:</p>\n<ol>\n<li>a template spectral database <tt>qubits_spectral_database</tt>,</li>\n<li>a default qubits settings file <tt>qubits_settings.yaml</tt>,</li>\n<li>an empty output directory <tt>qubits_output</tt></li>\n</ol>\n<div>\n<img alt=\"qubits template workspace\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/72289f3d3d9f73b00495152e303a0f62f844dd04/68747470733a2f2f6661726d352e737461746963666c69636b722e636f6d2f343430332f33363836383832373137325f336561656332396138325f6f2e706e672532307469746c653d25323271756269747325323074656d706c617465253230776f726b737061636525323225323077696474683d3630307078\">\n<p>qubits template workspace</p>\n</div>\n<p>Once you familiarise yourself with running QUBITS you can move this\nworkspace elsewhere and tailor the spectral database and settings file\nto your needs.</p>\n<div id=\"building-a-spectral-database\">\n<h3>Building a Spectral Database</h3>\n<p>Within the folder you choose to place your spectral database, create\nappropriately named folders for each of the specific transient objects\nyou would like to include in the simulations. Note these are the names\nto be included in the settings file (see below) and that will appear in\nresults files, plots and logs. Your database might look like this:</p>\n<pre>qubits_spectral_database/\n    SNIa/\n        t-021.00.spec\n        t-012.00.spec\n        t+003.00.spec\n        t+015.00.spec\n        t+024.00.spec\n        t+068.00.spec\n        t+098.00.spec\n        t+134.00.spec\n    SNIIp/\n        ...\n    SLSN/\n        ...\n</pre>\n<p>Name your spectral files with times relative to some epoch within the\ntransient\u2019s evolution (e.g. peak magnitude or explosion date). QUBITS\nwill determine the time of peak magnitude when generating the\nlightcurves from the spectra and recalibrate the time scale relative to\nthis point. The files should contain two space separated columns\ncontaining wavelength (\u00c5) and flux (ergs/s/cm^2/\u00c5). Have a look in the\ntemplate database supplied by the <tt>qubits init</tt> command.</p>\n</div>\n<div id=\"settings-file\">\n<h3>Settings File</h3>\n<p>A template simulation settings file is provided by the <tt>qubits init</tt>\ncommand and should look something like this:</p>\n<pre>version: 1\n\n##### PROGRAM EXECUTION SETTINGS #####\nProgram Settings:\n    # STAGE 1 - LIGHTCURVES\n    Extract Lightcurves from Spectra: True\n    # STAGE 2 - KCORRECTION DATABASE\n    Generate KCorrection Database: True\n    Generate KCorrection Plots: True  # ONLY SET TO TRUE IF ONLY A FEW KCORRECTIONS ARE TO BE CALCULATED\n    # STAGE 3 - RUNNING SIMULATION\n    Run the Simulation: True\n    Plot Simulation Helper Plots: True  #  ONLY PLOT IF DEBUGGING\n    # STAGE 4 - COMPILING RESULTS\n    Compile and Plot Results: True\n    Simulation Results File Used for Plots: simulation_results_20130919t131758.yaml\n\n###### SIMULATED SURVEY CONSTRAINTS ######\nExtra Survey Constraints:\n    Faint-Limit of Peak Magnitude: 21.50 # The lower-limit of the apparent peak magnitude so that the transient can be distinguished from other flavours of transients. Set this to 99.9 for this setting to be disregarded.\n    Observable for at least ? number of days: 100 #\u00a0Set this to 1 for this setting to be distregarded\nLower Redshift Limit: 0.00 ## Usually set to 0.0\nUpper Redshift Limit: 1.0\nRedshift Resolution: 0.05 ## Higher resolution (lower number) means the simulations are more accuate but the code shall take long to run, especially for the k-correction database generation.\nSky Area of the Survey (square degrees): 70\nLimiting Magnitudes:\n    g : 23.3\n    r : 23.3\n    i : 23.3\n    z : 21.7\nSurvey Cadence:\n    # YEAR MINUS FRACTION LOST DUE TO OBJECTS BEING LOCATED BEHIND THE SUN\n    Observable Fraction of Year: 0.5\n    Fraction of Year Lost to Weather etc: 0.4\n    Filters:\n        - band: g\n          day of year of first scheduled observation: 1\n          repeat every ? days: 3\n          Fraction of Lunar Month Lost to Moon: 0.27\n        - band: r\n          day of year of first scheduled observation: 1\n          repeat every ? days: 3\n          Fraction of Lunar Month Lost to Moon: 0.27\n        - band: i\n          day of year of first scheduled observation: 2\n          repeat every ? days: 3\n          Fraction of Lunar Month Lost to Moon: 0.27\n        - band: z\n          day of year of first scheduled observation: 3\n          repeat every ? days: 3\n          Fraction of Lunar Month Lost to Moon: 0.27\n\n###### K-CORRECTION GENERATION ######\nRest Frame Filter for K-corrections: g # This is the filter that the k-corrections are anchored to. The simulations will convert from this observed band magnitude to the rest frame magnitudes to calculate the k-correction.\nK-correction temporal resolution (days): 1.0 # Only increase the resolution here if you have many spectra in your database and k-corrections are taking too long to generate.\nOrder of polynomial used to fits k-corrections: 18 # Check the k-correction polynomial plots and tweak this value as needed.\nMinimum number of datapoints used to generate k-correction curve: 3 # If the are not enough spectra or too many spectra have been redshifted out of the range of the observed frame band-pass, then there are few points to generate a polynomial k-correction lightcurve. 3 is probably the barely-passable minimum.\n\n###### SIMULATED UNIVERSE CONSTRAINTS ######\nCCSN Progenitor Population Fraction of IMF: 0.007\nTransient to CCSN Ratio: 10e-5\nSimulation Sample: 50 # Number of transients to include in simulations. More = more accurate but sims take longer to run. 100 good for testing &amp; 10,000 good for science.\nExtinctions:\n    constant or random: constant # Parameter not yet implemented - leave as `constant`\n    constant E(b-v): 0.023 # 0.023 is the mean for the PS1-MD fields\n    host: # Parameter not yet implemented\n    galactic: # Parameter not yet implemented\nRelative Rate Set to Use: SLSNe\nRelative SN Rates:\n    SLSNe:\n        SN2007bi: 0.5 # make sure transient names correspond to folder names containing thier spectral data-sets\n        SLSN: 0.5\nSN Absolute Peak-Magnitude Distributions:\n    magnitude:\n        SN2007bi: -17.08\n        SLSN: -20.21\n    sigma:\n        SN2007bi: 0.001\n        SLSN: 0.001\n\n###### LIGHTCURVE GENERATION &amp; CONSTRAINTS\nLightcurves:\n    SN2007bi:\n        End of lightcurve relative to peak: 300 # Constrain the end of the lightcurve so polynomial fits don't go awal\n    SLSN:\n        End of lightcurve relative to peak: 220\nOrder of polynomial used to fits lightcurves: 6 # Check the extracted lightcurve plots and tweak this value as needed.\n# Often it is useful to set a an explosion day (relative to the timescale used in naming the files in the spectral database).\n# This helps constrain the polynomials of the light- and K-correction- curves generated in the simulations.\n# SET TO `None` TO DISREGARD THIS SETTING\nExplosion Days:\n    SLSN: -70\n    SN2007bi: -70\n# You can also extend the tail of the lightcurve to better constrain the polynomial. Set to `True` or `False`\nExtend lightcurve tail?:\n    SLSN: True\n    SN2007bi: True\n\n###### LOGGING\nLevel of logging required: WARNING # DEBUG, INFO, WARNING, ERROR or CRITICAL\n</pre>\n</div>\n</div>\n<div id=\"the-qubits-simulation-stages\">\n<h2>The QUBITS Simulation Stages</h2>\n<p>The four stages of the simulation are:</p>\n<ol>\n<li>Extracting the Lightcurves from Spectra</li>\n<li>Generating a K-Correction Database</li>\n<li>Running the Simulation, and</li>\n<li>Compiling and Plotting Results</li>\n</ol>\n<p>At the top of this settings file you turn the various stages of the\nsimulation build on and off:</p>\n<pre>Program Settings:\n        # STAGE 1 - LIGHTCURVES\n        Extract Lightcurves from Spectra: True\n        # STAGE 2 - KCORRECTION DATABASE\n        Generate KCorrection Database: True\n        Generate KCorrection Plots: True  # ONLY SET TO TRUE IF ONLY A FEW KCORRECTIONS ARE TO BE CALCULATED\n        # STAGE 3 - RUNNING SIMULATION\n        Run the Simulation: True\n        Plot Simulation Helper Plots: True  #  ONLY PLOT IF DEBUGGING\n        # STAGE 4 - COMPILING RESULTS\n        Compile and Plot Results: True\n        Simulation Results File Used for Plots: simulation_results_20130919t131758.yaml\n</pre>\n<p>When you first use the simulations it\u2019s best to set all stages of the\nsimulation to <em>False</em>, then incrementally run the code through each\nstage. You will always run the code with the <tt>qubits run</tt> command with\nthe following syntax:</p>\n<p><tt>bash qubits run <span class=\"pre\">-s</span> &lt;pathToSettingsFile&gt; <span class=\"pre\">-o</span> &lt;pathToOutputDirectory&gt; <span class=\"pre\">-d</span> &lt;pathToSpectralDatabase&gt;</tt></p>\n<p>So to run QUBITS with our template workspace we setup in the quick start\nworkspace above, we run:</p>\n<p><tt>bash qubits run <span class=\"pre\">-s</span> ~/Desktop/qubits_workspace/qubits_settings.yaml <span class=\"pre\">-o</span> ~/Desktop/qubits_workspace/qubits_output <span class=\"pre\">-d</span> ~/Desktop/qubits_workspace/qubits_spectral_database</tt></p>\n<p>Below you will find details of each build stage of the simulation - read\nthe settings file comments to determine which settings you need to\ntailor for the simulation you are trying to run.</p>\n<div id=\"extracting-the-lightcurves-from-spectra\">\n<h3>1. Extracting the Lightcurves from Spectra</h3>\n<p>This stage generates the <tt>z=0</tt> lightcurves. Lightcurve plots are\ncreated in the <em>plots</em> folder in the output directory. Please note\nQUBITS\u2019 ability to generate decent lightcurves relies heavily on the\nquality of your spectral database; it needs good wavelength coverage to\nbe able to synthesize the photometry and good temporal coverage to build\nan entire lightcurve. The extracted lightcurves are stored as python\nobjects in the a file\ncalled\u00a0<em>transient_light_curves.yaml</em>\u00a0in\u00a0<tt>&lt;pathToOutputDirectory&gt;</tt>.</p>\n<p>Once you\u2019ve generated the lightcurves, have a look at the lightcurve\nplots (some may be blank if temporal/wavelength coverage was deemed too\npoor to create a lightcurve for the given band-pass at <tt>z=0</tt>). You may\nwant to tweak some lightcurve parameters in the settings file and\nrebuild the lightcurve plots. Once you\u2019re happy move onto the next\nstage.</p>\n<div>\n<img alt=\"example lightcurve\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/70e52f67faffdaead46398fe6c68c9564d730890/7175626974732f6173736574732f534e4f6e655f2d5f692d62616e642e706e67\">\n<p>example lightcurve</p>\n</div>\n<p>Current filters are the PS1 <em>g</em>, <em>r</em>, <em>i</em>, <em>z</em> filters.</p>\n<p>Note <em>pysynphot</em> can be very chatty and prints log messages straight to\nstdout which can\u2019t be turned off easily. Don\u2019t worry if you see\nsomething like this:</p>\n<blockquote>\n\u2026 does not have a defined binset in the wavecat table. The waveset\nof the spectrum will be used instead.</blockquote>\n</div>\n<div id=\"generate-k-correction-database\">\n<h3>2. Generate K-Correction Database</h3>\n<p>The code will use the spectra to generate a database of K-corrections\nwith the given settings. They will be created in the <tt>k_corrections</tt>\ndirectory of your output folder. For each redshift and k-correction\nfilter-set, a dataset is generated which is used to create a polynomial\nfor <em>rest frame epoch</em> vs <em>kcorrection</em>. Note the k-corrections also act\nas colour-transformations between filters at low-redshift.</p>\n<p>By setting <tt>Generate <span class=\"pre\">K-Correction</span> Plots</tt> to <tt>True</tt> a plot for each\nK-correction dataset will be generated. Set this to true if only a few\nk-corrections are to be calculated, i.e. when you are testing/debugging\nthe simulation - otherwise the k-correction generation will take\nforever!</p>\n<div>\n<img alt=\"example k-correction polynomial\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/57c2a2d1860d69c8e582932511f41546f7f0e416/7175626974732f6173736574732f6b5f69725f61745f7a5f3d5f302e332e706e67\">\n<p>example k-correction polynomial</p>\n</div>\n</div>\n<div id=\"run-the-simulation\">\n<h3>3. Run the Simulation</h3>\n<p>Here the simulation is run using the settings found in the settings file\n(cadence of observation, limiting-magnitudes, survey volume, loss due to\nweather etc). This stage is a two part process:</p>\n<ol>\n<li><strong>Simulating the Universe</strong> - placing SNe throughout the volume\nrequested at random redshifts, with the relative-rate supplied and\nwith the peak magnitude distributions given.</li>\n<li><strong>Simulating the Survey</strong> - simulates the survey with the setup\nsupplied in the settings files with cadence of observation,\nlimiting-magnitudes, survey volume, loss due to weather etc.</li>\n</ol>\n<p>The results of the simulation are place in a (large) date-time stamped\nyaml file in the output folder named something similar to\n<tt>simulation_results_20130425t053500.yaml</tt>. The date-time appended to\nthe filename will be the time the simulation was run so you can run many\nsimulations without worrying about overwriting previous outputs. The\nsettings used to run the simulation are also recorded in this file.</p>\n<p>The <tt>Plot Simulation Helper Plots</tt> setting should only be set to\n<em>True</em> if you are trying to debug the code and work out how the input\ndata is being manipulated to create the simulations.</p>\n</div>\n<div id=\"compile-and-plot-results\">\n<h3>4. Compile and Plot Results</h3>\n<p>Use the <tt>Simulation Results File Used for Plots</tt> setting to set the\nsimulation results file used to generate the result plots and log:</p>\n<pre>Simulation Results File Used for Plots: simulation_results_20130425t053500.yaml\n</pre>\n<p>This compiles the results into a markdown file (plain text with minimal\nmarkup) and a styled HTML file into the\n<tt><span class=\"pre\">&lt;pathToOutputDirectory&gt;/results</span></tt> folder with names similar to:</p>\n<pre>simulation_result_log_20130426t110856.md\nsimulation_result_log_20130426t110856.html\n</pre>\n<p>Here is an example of the output log file:</p>\n<div>\n<img alt=\"example results file\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dd356504081596e9153039ae646d969a9cfc28e4/7175626974732f6173736574732f6578616d706c655f726573756c74732e706e67\">\n<p>example results file</p>\n</div>\n</div>\n</div>\n<div id=\"warnings\">\n<h2>WARNINGS</h2>\n<p>QUBITS can return many warnings, usually related the limitations of your\nspectral databases. Here are some:</p>\n<ul>\n<li><strong>\u2018does not have a defined binset in the wavecat table. The waveset\nof the spectrum will be used instead.\u2019</strong>: This is a pysynphot message\nand not a QUBITS log. Don\u2019t worry.</li>\n<li><strong>\u2018 failed with this error: Spectrum and bandpass are disjoint\u2019</strong>:\nThis generally means the spectrum quoted doesn\u2019t cover the wavelength\nrange of the band-pass and therefore a magnitude can\u2019t be\nsynthesised.</li>\n<li><strong>\u2018Spectrum and bandpass do not fully overlap. You may use\nforce=[extrap|taper] to force this Observation anyway.\u2019</strong>: As above\nbut the spectral wavelength range does partially cover the band-pass</li>\n<li><strong>\u2018could not find the magnitude from spectrum /***/t+601.00.spec\nusing the filter sdss,g - failed with this error: Integrated flux is\n&lt;= 0\u2019</strong>: This generally means the spectrum quoted doesn\u2019t entirely\ncover the wavelength range of the band-pass and therefore a magnitude\ncan\u2019t be synthesised.</li>\n<li><strong>\u2018the k-correction file z0pt30.yaml contains less than 3 datapoints\nto convert from g restframe to z observed frame for the SNOne model -\npolynomial shall not be generated\u2019</strong>: The was not enough\ntemporal/wavelength coverage to generate k-corrections for the quoted\nrest/observed frame filter-set at this redshift</li>\n</ul>\n</div>\n<div id=\"issues\">\n<h2>Issues</h2>\n<p>Please report any issues\n<a href=\"https://github.com/thespacedoctor/qubits/issues\" rel=\"nofollow\">here</a>.</p>\n<p><a href=\"https://github.com/thespacedoctor/qubits/pulls\" rel=\"nofollow\">Pull requests</a> are\nwelcomed!</p>\n</div>\n<div id=\"license\">\n<h2>License</h2>\n<p>Copyright (c) 2016 David Young</p>\n<p>Permission is hereby granted, free of charge, to any person obtaining a\ncopy of this software and associated documentation files (the\n\u201cSoftware\u201d), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:</p>\n<p>The above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.</p>\n<p>THE SOFTWARE IS PROVIDED \u201cAS IS\u201d, WITHOUT WARRANTY OF ANY KIND, EXPRESS\nOR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\nMERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\nIN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nCLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\nTORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\nSOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.</p>\n</div>\n\n          </div>"}, "last_serial": 3175920, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "6341b80cfbb92167491b34e87837647c", "sha256": "1818e8bcf4511297d31d46f1f3c274dec3150d3898567927f7cab1c6b6998591"}, "downloads": -1, "filename": "qubits-0.1.tar.gz", "has_sig": false, "md5_digest": "6341b80cfbb92167491b34e87837647c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29036, "upload_time": "2013-09-19T15:01:49", "upload_time_iso_8601": "2013-09-19T15:01:49.426089Z", "url": "https://files.pythonhosted.org/packages/91/a9/ae05dded716328ba875708d0d00e2c1fd5fd523f57e6e3d724509892d99f/qubits-0.1.tar.gz", "yanked": false}], "0.2": [{"comment_text": "", "digests": {"md5": "ab08320c7df05ad99bdfa4a56c382677", "sha256": "7e95dcb4115b0f83c2d889f430e2e871e52437adef73e5af2d9b45ec201a64dd"}, "downloads": -1, "filename": "qubits-0.2.tar.gz", "has_sig": false, "md5_digest": "ab08320c7df05ad99bdfa4a56c382677", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 29365, "upload_time": "2013-09-20T14:43:12", "upload_time_iso_8601": "2013-09-20T14:43:12.155904Z", "url": "https://files.pythonhosted.org/packages/a1/95/822b8d78c613d4809cce047c9e1a0ede87f505cc6569939936ad9a481906/qubits-0.2.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "06277a78e3cc5287c4eddedfea65555f", "sha256": "5ebe25fc1db0d2b4e33f6c301db7ec3375f5c3bf5fc5dac4ebd6dbfb0782a537"}, "downloads": -1, "filename": "qubits-0.3.0-py2-none-any.whl", "has_sig": false, "md5_digest": "06277a78e3cc5287c4eddedfea65555f", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7939731, "upload_time": "2017-09-06T09:37:26", "upload_time_iso_8601": "2017-09-06T09:37:26.819519Z", "url": "https://files.pythonhosted.org/packages/7c/9f/7a1be7b14319e83aae9c246e7b448b30d13b91e23dc10ba91a8f78d8f556/qubits-0.3.0-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7363b07baf83ef2f5336901a942d152e", "sha256": "76d910ab2ae771a4f66006c68ac07bdc69cb41c7b88cb8f05a17fcf38d57f27a"}, "downloads": -1, "filename": "qubits-0.3.0.tar.gz", "has_sig": false, "md5_digest": "7363b07baf83ef2f5336901a942d152e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 7834113, "upload_time": "2017-09-06T09:37:53", "upload_time_iso_8601": "2017-09-06T09:37:53.275707Z", "url": "https://files.pythonhosted.org/packages/4c/f2/d909f888ed3c991877c93d1b8c686732a1570b51de3db70a20359e101fa3/qubits-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7214b57c33e1279c38404c2200f4a6b7", "sha256": "e6bc60c8e42c2b92b14d93c53fd50edb30d0fe03003bc81e8613b4ad9bfa9328"}, "downloads": -1, "filename": "qubits-0.3.1-py2-none-any.whl", "has_sig": false, "md5_digest": "7214b57c33e1279c38404c2200f4a6b7", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7939828, "upload_time": "2017-09-11T10:00:54", "upload_time_iso_8601": "2017-09-11T10:00:54.838513Z", "url": "https://files.pythonhosted.org/packages/37/be/d52170e0c15a071b845ee4288a2adfac788763af4113e4bc9505816dffb3/qubits-0.3.1-py2-none-any.whl", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "532fed7b5f5d7bbb3e1810615dfee894", "sha256": "81b2d1421fc58e759d89c276ed22ea48b0ed69d8fd7510be8a80a647641695ab"}, "downloads": -1, "filename": "qubits-0.3.2-py2-none-any.whl", "has_sig": false, "md5_digest": "532fed7b5f5d7bbb3e1810615dfee894", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7941849, "upload_time": "2017-09-11T10:37:34", "upload_time_iso_8601": "2017-09-11T10:37:34.250589Z", "url": "https://files.pythonhosted.org/packages/21/2f/7743224de2449fe145de4f4d9225b750c514c298df6843b64460b412ed0a/qubits-0.3.2-py2-none-any.whl", "yanked": false}], "0.3.3": [{"comment_text": "", "digests": {"md5": "7bc0c5d235dfacfeaa164d99a27cab84", "sha256": "af4e2bde08cb719d62d8913266fdcf6e326771a4f586921deec877985cc911d9"}, "downloads": -1, "filename": "qubits-0.3.3-py2-none-any.whl", "has_sig": false, "md5_digest": "7bc0c5d235dfacfeaa164d99a27cab84", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7941860, "upload_time": "2017-09-13T14:43:10", "upload_time_iso_8601": "2017-09-13T14:43:10.946256Z", "url": "https://files.pythonhosted.org/packages/41/f7/441d20f23074367c2b5ed0ea89e1fd5c789e6b5fd28a26547a5234e23b94/qubits-0.3.3-py2-none-any.whl", "yanked": false}], "0.3.4": [{"comment_text": "", "digests": {"md5": "11df5db7f84e668ee5468d6915e81bb4", "sha256": "49d58bbf0c2bc106077cd39396f19e4a553c3bd32a92ebac5f8e11114c6d50e5"}, "downloads": -1, "filename": "qubits-0.3.4-py2-none-any.whl", "has_sig": false, "md5_digest": "11df5db7f84e668ee5468d6915e81bb4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7942327, "upload_time": "2017-09-15T11:02:22", "upload_time_iso_8601": "2017-09-15T11:02:22.179192Z", "url": "https://files.pythonhosted.org/packages/a2/71/7aab05905ab9d10415ebc876159d323f9f08eb0adf5c7c79a1a283020c5d/qubits-0.3.4-py2-none-any.whl", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "11df5db7f84e668ee5468d6915e81bb4", "sha256": "49d58bbf0c2bc106077cd39396f19e4a553c3bd32a92ebac5f8e11114c6d50e5"}, "downloads": -1, "filename": "qubits-0.3.4-py2-none-any.whl", "has_sig": false, "md5_digest": "11df5db7f84e668ee5468d6915e81bb4", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 7942327, "upload_time": "2017-09-15T11:02:22", "upload_time_iso_8601": "2017-09-15T11:02:22.179192Z", "url": "https://files.pythonhosted.org/packages/a2/71/7aab05905ab9d10415ebc876159d323f9f08eb0adf5c7c79a1a283020c5d/qubits-0.3.4-py2-none-any.whl", "yanked": false}], "timestamp": "Fri May  8 03:08:41 2020"}