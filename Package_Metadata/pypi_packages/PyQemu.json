{"info": {"author": "Bifferos", "author_email": "bifferos@yahoo.co.uk", "bugtrack_url": null, "classifiers": [], "description": "What is it?\r\n\r\n  PyQemu is a Python wrapper around... Qemu.\r\n\r\nWhy would I want that?\r\n\r\n  Because you might want to script operations involving qemu virtual\r\n  machines, perhaps for testing purposes.\r\n\r\nWhat is Qemu?\r\n\r\n  If you don't know, then you probably don't need this, but see\r\n  http://www.qemu.org/ for further details.\r\n\r\nWhy did you write PyQemu?\r\n\r\n  Because I liked Microsoft's Virtual Server, and to a lesser extent\r\n  VMWare and wanted something similar that could work in an entirely\r\n  open-source environment (open source OS, open source virtualisation,\r\n  not necessarily open source virtual machine), yet still give me a \r\n  good automation interface.\r\n\r\nHow do I use PyQemu?\r\n\r\n  Step 1) Create an XML file with the descriptions of the virtual machines \r\n  you want to manage (see qserver.xml for a commented example).\r\n\r\n  Step 2) Have a look at the simple example (client.py/server.py)\r\n\r\n  Step 3) Write some client code to control the virtual machines (see the\r\n  examples directory).\r\n\r\n\r\nRequirements\r\n\r\n  Python v2.4  (www.python.org)\r\n  Pyro, Python Remote Objects v3.5, (http://pyro.sourceforge.net)\r\n  PIL, Python Imaging Library v1.1.5  (http://www.pythonware.com/products/pil)\r\n  Qemu  v0.8.2  (http://www.qemu.org)\r\n  TightVNC v1.2.9.  (http://www.tightvnc.com). For viewing virtual machines.\r\n  USPP v1.0  (http://ibarona.googlepages.com/uspp).  For pyqemu-monitor.py.\r\n\r\nAdditionally the examples require:\r\n  Medusa v0.5.4  (http://www.amk.ca/python/code/medusa.html)\r\n  TightVNC Java Viewer v1.3.8  (http://www.tightvnc.com/download.html)", "description_content_type": null, "docs_url": null, "download_url": "http://www.biffer.talktalk.net/PyQemu/PyQemu-0.1.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.biffer.talktalk.net/PyQemu", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "PyQemu", "package_url": "https://pypi.org/project/PyQemu/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/PyQemu/", "project_urls": {"Download": "http://www.biffer.talktalk.net/PyQemu/PyQemu-0.1.tar.gz", "Homepage": "http://www.biffer.talktalk.net/PyQemu"}, "release_url": "https://pypi.org/project/PyQemu/0.1/", "requires_dist": null, "requires_python": null, "summary": "Python wrapper for Qemu", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>What is it?</p>\n<blockquote>\nPyQemu is a Python wrapper around\u2026 Qemu.</blockquote>\n<p>Why would I want that?</p>\n<blockquote>\nBecause you might want to script operations involving qemu virtual\nmachines, perhaps for testing purposes.</blockquote>\n<p>What is Qemu?</p>\n<blockquote>\nIf you don\u2019t know, then you probably don\u2019t need this, but see\n<a href=\"http://www.qemu.org/\" rel=\"nofollow\">http://www.qemu.org/</a> for further details.</blockquote>\n<p>Why did you write PyQemu?</p>\n<blockquote>\nBecause I liked Microsoft\u2019s Virtual Server, and to a lesser extent\nVMWare and wanted something similar that could work in an entirely\nopen-source environment (open source OS, open source virtualisation,\nnot necessarily open source virtual machine), yet still give me a\ngood automation interface.</blockquote>\n<p>How do I use PyQemu?</p>\n<blockquote>\n<p>Step 1) Create an XML file with the descriptions of the virtual machines\nyou want to manage (see qserver.xml for a commented example).</p>\n<p>Step 2) Have a look at the simple example (client.py/server.py)</p>\n<p>Step 3) Write some client code to control the virtual machines (see the\nexamples directory).</p>\n</blockquote>\n<p>Requirements</p>\n<blockquote>\nPython v2.4  (www.python.org)\nPyro, Python Remote Objects v3.5, (<a href=\"http://pyro.sourceforge.net\" rel=\"nofollow\">http://pyro.sourceforge.net</a>)\nPIL, Python Imaging Library v1.1.5  (<a href=\"http://www.pythonware.com/products/pil\" rel=\"nofollow\">http://www.pythonware.com/products/pil</a>)\nQemu  v0.8.2  (<a href=\"http://www.qemu.org\" rel=\"nofollow\">http://www.qemu.org</a>)\nTightVNC v1.2.9.  (<a href=\"http://www.tightvnc.com\" rel=\"nofollow\">http://www.tightvnc.com</a>). For viewing virtual machines.\nUSPP v1.0  (<a href=\"http://ibarona.googlepages.com/uspp\" rel=\"nofollow\">http://ibarona.googlepages.com/uspp</a>).  For pyqemu-monitor.py.</blockquote>\n<dl>\n<dt>Additionally the examples require:</dt>\n<dd>Medusa v0.5.4  (<a href=\"http://www.amk.ca/python/code/medusa.html\" rel=\"nofollow\">http://www.amk.ca/python/code/medusa.html</a>)\nTightVNC Java Viewer v1.3.8  (<a href=\"http://www.tightvnc.com/download.html\" rel=\"nofollow\">http://www.tightvnc.com/download.html</a>)</dd>\n</dl>\n\n          </div>"}, "last_serial": 16173, "releases": {"0.1": []}, "urls": [], "timestamp": "Fri May  8 02:58:52 2020"}