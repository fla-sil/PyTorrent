{"info": {"author": "Paul Butler", "author_email": "penkit@paulbutler.org", "bugtrack_url": null, "classifiers": [], "description": "``penkit-optimize`` is a command-line tool for optimizing and visualizing the drawing order of SVG graphics for pen plotting. For more information, `see this post <https://bitaesthetics.com/posts/optimizing-plots-with-a-tsp-solver.html>`_.\n\nInstallation\n~~~~~~~~~~~~\n\nThis package has a non-Python dependency, ``libspatialindex``. The easiest way to install it is by installing the ``rtree`` Python package via Conda::\n\n    conda install rtree\n\nOnce this is installed, ``penkit-optimize`` can be installed via ``pip``::\n\n    pip install penkit-optimize\n\nUsage\n~~~~~\n\nTo see CLI options::\n\n    penkit-optimize -h\n        usage: penkit-optimize [-h] [--greedy] [--noopt] [--runtime RUNTIME]\n                               [--merge-paths [MERGE_PATHS]] [--vis-output VIS_OUTPUT]\n                               input_file [output_file]\n\n        positional arguments:\n        input_file\n        output_file\n\n        optional arguments:\n        -h, --help            show this help message and exit\n        --greedy, -g          Run greedy optimization only.\n        --noopt, -n           Don't run any optimization.\n        --runtime RUNTIME, -t RUNTIME\n                              Maximum runtime (in seconds) of optimization stage.\n        --merge-paths [MERGE_PATHS], -m [MERGE_PATHS]\n                              Merge paths that start/end near each other. You may\n                              optionally specify a threshold distance (in document\n                              units) after this parameter.\n        --vis-output VIS_OUTPUT, -v VIS_OUTPUT\n                              If provided, save a visualization of the path to this\n                              SVG file.\n\nExamples\n~~~~~~~~\n\nGenerate optimized SVG with default options (up to 5 minute runtime), and save to ``input-optimized.svg``::\n\n    penkit-optimize input.svg\n\nDon't optimize anything, just visualize the transits::\n\n    penkit-optimize input.svg -n -v noopt-vis.svg\n\n``noopt-vis.svg``:\n\n.. image:: examples/noopt-vis.svg\n\nRun greedy optimization (only), save the file, and save a visualization of the result::\n\n    penkit-optimize input.svg output.svg -g -v greedy-vis.svg\n\n``greedy-vis.svg``:\n\n.. image:: examples/greedy-vis.svg\n\nRun the full optimization and write a visualization of the result::\n\n    penkit-optimize input.svg output.svg -v opt-vis.svg\n\n``opt-vis.svg``:\n\n.. image:: examples/opt-vis.svg\n\nRun the full optimization and merge paths that start/end within 1.5 units::\n\n    penkit-optimize input.svg -m 1.5", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/paulgb/penkit/optimizer", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "penkit-optimize", "package_url": "https://pypi.org/project/penkit-optimize/", "platform": "", "project_url": "https://pypi.org/project/penkit-optimize/", "project_urls": {"Homepage": "https://github.com/paulgb/penkit/optimizer"}, "release_url": "https://pypi.org/project/penkit-optimize/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "Experimental SVG optimizer using or-tools.", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><tt><span class=\"pre\">penkit-optimize</span></tt> is a command-line tool for optimizing and visualizing the drawing order of SVG graphics for pen plotting. For more information, <a href=\"https://bitaesthetics.com/posts/optimizing-plots-with-a-tsp-solver.html\" rel=\"nofollow\">see this post</a>.</p>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>This package has a non-Python dependency, <tt>libspatialindex</tt>. The easiest way to install it is by installing the <tt>rtree</tt> Python package via Conda:</p>\n<pre>conda install rtree\n</pre>\n<p>Once this is installed, <tt><span class=\"pre\">penkit-optimize</span></tt> can be installed via <tt>pip</tt>:</p>\n<pre>pip install penkit-optimize\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>To see CLI options:</p>\n<pre>penkit-optimize -h\n    usage: penkit-optimize [-h] [--greedy] [--noopt] [--runtime RUNTIME]\n                           [--merge-paths [MERGE_PATHS]] [--vis-output VIS_OUTPUT]\n                           input_file [output_file]\n\n    positional arguments:\n    input_file\n    output_file\n\n    optional arguments:\n    -h, --help            show this help message and exit\n    --greedy, -g          Run greedy optimization only.\n    --noopt, -n           Don't run any optimization.\n    --runtime RUNTIME, -t RUNTIME\n                          Maximum runtime (in seconds) of optimization stage.\n    --merge-paths [MERGE_PATHS], -m [MERGE_PATHS]\n                          Merge paths that start/end near each other. You may\n                          optionally specify a threshold distance (in document\n                          units) after this parameter.\n    --vis-output VIS_OUTPUT, -v VIS_OUTPUT\n                          If provided, save a visualization of the path to this\n                          SVG file.\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>Generate optimized SVG with default options (up to 5 minute runtime), and save to <tt><span class=\"pre\">input-optimized.svg</span></tt>:</p>\n<pre>penkit-optimize input.svg\n</pre>\n<p>Don\u2019t optimize anything, just visualize the transits:</p>\n<pre>penkit-optimize input.svg -n -v noopt-vis.svg\n</pre>\n<p><tt><span class=\"pre\">noopt-vis.svg</span></tt>:</p>\n<img alt=\"examples/noopt-vis.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b435f67f03bf808660920435c419b6b02086c1a0/6578616d706c65732f6e6f6f70742d7669732e737667\">\n<p>Run greedy optimization (only), save the file, and save a visualization of the result:</p>\n<pre>penkit-optimize input.svg output.svg -g -v greedy-vis.svg\n</pre>\n<p><tt><span class=\"pre\">greedy-vis.svg</span></tt>:</p>\n<img alt=\"examples/greedy-vis.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e985aec7303c7523be737a7d6c5b68206c61cd31/6578616d706c65732f6772656564792d7669732e737667\">\n<p>Run the full optimization and write a visualization of the result:</p>\n<pre>penkit-optimize input.svg output.svg -v opt-vis.svg\n</pre>\n<p><tt><span class=\"pre\">opt-vis.svg</span></tt>:</p>\n<img alt=\"examples/opt-vis.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/37c37db090721d178fbdbd313fd5bae2ebb2b3fd/6578616d706c65732f6f70742d7669732e737667\">\n<p>Run the full optimization and merge paths that start/end within 1.5 units:</p>\n<pre>penkit-optimize input.svg -m 1.5\n</pre>\n</div>\n\n          </div>"}, "last_serial": 3706284, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "edf95008d0888bc06d12672c240685fe", "sha256": "0e0ab945e5a54157b366bf951c4f0cafc75873ceaf7374cca2fcd50e46845266"}, "downloads": -1, "filename": "penkit-optimize-0.0.1.tar.gz", "has_sig": false, "md5_digest": "edf95008d0888bc06d12672c240685fe", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5629, "upload_time": "2018-03-26T11:51:50", "upload_time_iso_8601": "2018-03-26T11:51:50.845921Z", "url": "https://files.pythonhosted.org/packages/6e/e8/d55936122b58a7392b1e6d66149d9626db5ef5830e462c0d0cc7c7a85966/penkit-optimize-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "bc9ed2799897622c3a4af2f1bdc7a2a7", "sha256": "f48a954b13382d142f245763395f56a233958c130e7141dd0cc3292480e52494"}, "downloads": -1, "filename": "penkit-optimize-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bc9ed2799897622c3a4af2f1bdc7a2a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6671, "upload_time": "2018-03-26T12:23:48", "upload_time_iso_8601": "2018-03-26T12:23:48.465963Z", "url": "https://files.pythonhosted.org/packages/5e/37/f57a4d749f55e2e497a1af811f253d5963268fcac414b666c8e6f23129de/penkit-optimize-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "bc9ed2799897622c3a4af2f1bdc7a2a7", "sha256": "f48a954b13382d142f245763395f56a233958c130e7141dd0cc3292480e52494"}, "downloads": -1, "filename": "penkit-optimize-0.0.2.tar.gz", "has_sig": false, "md5_digest": "bc9ed2799897622c3a4af2f1bdc7a2a7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6671, "upload_time": "2018-03-26T12:23:48", "upload_time_iso_8601": "2018-03-26T12:23:48.465963Z", "url": "https://files.pythonhosted.org/packages/5e/37/f57a4d749f55e2e497a1af811f253d5963268fcac414b666c8e6f23129de/penkit-optimize-0.0.2.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:56:32 2020"}