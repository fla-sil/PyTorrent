{"info": {"author": "namuyan", "author_email": "", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8"], "description": "Secure Reliable UDP\n====\nThis repository provides **Secure Reliable Data Stream** that works like TCP.  \nMy purpose is enable users create P2P connection between clients in closed NAT.\n\nFeatures\n----\n* Pure Python\n* Usage like normal socket object\n* Protocol similar to RUDP\n* UDP hole punching\n* high performance (4Mbps/s Up&Down when 10mb)\n* ipv4/ipv6\n\nRequirement\n----\n* Python**3.5+**\n* [requirements.txt](requirements.txt)\n\nInstallation\n----\n```bash\npip3 install --user srudp\n```\n\nDemo\n----\nPrepare two independent PCs.\n```python\nfrom srudp import SecureReliableSocket\nfrom time import sleep, time\n \nsock = SecureReliableSocket()\nsock.connect((\"<remote host 1>\", 12345))\n \nwhile not sock.is_closed:\n    sock.sendall(b'hello ' + str(time()).encode())\n    sleep(3)\nprint(\"closed\", sock)\n```\nA side, send message hello once in a 3 sec.\n\n```python\nfrom srudp import SecureReliableSocket\nfrom time import time\n \nsock = SecureReliableSocket()\nsock.connect((\"<remote host 2>\", 12345))\n \nwhile not sock.is_closed:\n    data = sock.recv(1024)\n    if not data:\n        break\n    print(time(), data)\nprint(\"closed\", sock)\n```\nAnother side, receive the message and show immediately.\n\nNote: Why make this?\n----\nThese days, PC is located in a local environment protected by NAT.\nIt is difficult to transfer data between two outsides.\nIn order to solve this problem, connection is realized by **UDP hole punching**\nwithout using UPnP.\n\nUDP is a socket protocol with minimum functions for connecting applications.\nTherefore, there is no connection state, data may not be reachable,\nspoofing the source is easy. This is why, you cannot substitute it as TCP.\n\nWith this program, you can treat it just like TCP without worrying about the above problems.\nIn other words, it has a connection state, guarantees data reachability, and is difficult to forge.\n\nLinks\n----\n* [Winny -Port0 setting-](http://winny.4th.jp/lesson1/port.html)\n* [(24days) NAT Traversal](https://tech-blog.cerevo.com/adventcalendar2016/advent24/)\n* [Peer-to-Peer Communication Across Network Address Translators](https://bford.info/pub/net/p2pnat/)\n\nAuthor\n----\n[@namuyan](https://twitter.com/namuyan_mine)\n\nLicence\n----\nMIT", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/namuyan/srudp", "keywords": "RUDP UDP P2P hole-punching", "license": "MIT Licence", "maintainer": "", "maintainer_email": "", "name": "srudp", "package_url": "https://pypi.org/project/srudp/", "platform": "", "project_url": "https://pypi.org/project/srudp/", "project_urls": {"Homepage": "https://github.com/namuyan/srudp"}, "release_url": "https://pypi.org/project/srudp/0.3.1/", "requires_dist": null, "requires_python": "", "summary": "secure reliable udp socket implemented by PurePython", "version": "0.3.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Secure Reliable UDP</h1>\n<p>This repository provides <strong>Secure Reliable Data Stream</strong> that works like TCP.<br>\nMy purpose is enable users create P2P connection between clients in closed NAT.</p>\n<h2>Features</h2>\n<ul>\n<li>Pure Python</li>\n<li>Usage like normal socket object</li>\n<li>Protocol similar to RUDP</li>\n<li>UDP hole punching</li>\n<li>high performance (4Mbps/s Up&amp;Down when 10mb)</li>\n<li>ipv4/ipv6</li>\n</ul>\n<h2>Requirement</h2>\n<ul>\n<li>Python<strong>3.5+</strong></li>\n<li><a href=\"requirements.txt\" rel=\"nofollow\">requirements.txt</a></li>\n</ul>\n<h2>Installation</h2>\n<pre>pip3 install --user srudp\n</pre>\n<h2>Demo</h2>\n<p>Prepare two independent PCs.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srudp</span> <span class=\"kn\">import</span> <span class=\"n\">SecureReliableSocket</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">sleep</span><span class=\"p\">,</span> <span class=\"n\">time</span>\n \n<span class=\"n\">sock</span> <span class=\"o\">=</span> <span class=\"n\">SecureReliableSocket</span><span class=\"p\">()</span>\n<span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">((</span><span class=\"s2\">\"&lt;remote host 1&gt;\"</span><span class=\"p\">,</span> <span class=\"mi\">12345</span><span class=\"p\">))</span>\n \n<span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">is_closed</span><span class=\"p\">:</span>\n    <span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">sendall</span><span class=\"p\">(</span><span class=\"sa\">b</span><span class=\"s1\">'hello '</span> <span class=\"o\">+</span> <span class=\"nb\">str</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">())</span><span class=\"o\">.</span><span class=\"n\">encode</span><span class=\"p\">())</span>\n    <span class=\"n\">sleep</span><span class=\"p\">(</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"closed\"</span><span class=\"p\">,</span> <span class=\"n\">sock</span><span class=\"p\">)</span>\n</pre>\n<p>A side, send message hello once in a 3 sec.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">srudp</span> <span class=\"kn\">import</span> <span class=\"n\">SecureReliableSocket</span>\n<span class=\"kn\">from</span> <span class=\"nn\">time</span> <span class=\"kn\">import</span> <span class=\"n\">time</span>\n \n<span class=\"n\">sock</span> <span class=\"o\">=</span> <span class=\"n\">SecureReliableSocket</span><span class=\"p\">()</span>\n<span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">((</span><span class=\"s2\">\"&lt;remote host 2&gt;\"</span><span class=\"p\">,</span> <span class=\"mi\">12345</span><span class=\"p\">))</span>\n \n<span class=\"k\">while</span> <span class=\"ow\">not</span> <span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">is_closed</span><span class=\"p\">:</span>\n    <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">sock</span><span class=\"o\">.</span><span class=\"n\">recv</span><span class=\"p\">(</span><span class=\"mi\">1024</span><span class=\"p\">)</span>\n    <span class=\"k\">if</span> <span class=\"ow\">not</span> <span class=\"n\">data</span><span class=\"p\">:</span>\n        <span class=\"k\">break</span>\n    <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"p\">(),</span> <span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s2\">\"closed\"</span><span class=\"p\">,</span> <span class=\"n\">sock</span><span class=\"p\">)</span>\n</pre>\n<p>Another side, receive the message and show immediately.</p>\n<h2>Note: Why make this?</h2>\n<p>These days, PC is located in a local environment protected by NAT.\nIt is difficult to transfer data between two outsides.\nIn order to solve this problem, connection is realized by <strong>UDP hole punching</strong>\nwithout using UPnP.</p>\n<p>UDP is a socket protocol with minimum functions for connecting applications.\nTherefore, there is no connection state, data may not be reachable,\nspoofing the source is easy. This is why, you cannot substitute it as TCP.</p>\n<p>With this program, you can treat it just like TCP without worrying about the above problems.\nIn other words, it has a connection state, guarantees data reachability, and is difficult to forge.</p>\n<h2>Links</h2>\n<ul>\n<li><a href=\"http://winny.4th.jp/lesson1/port.html\" rel=\"nofollow\">Winny -Port0 setting-</a></li>\n<li><a href=\"https://tech-blog.cerevo.com/adventcalendar2016/advent24/\" rel=\"nofollow\">(24days) NAT Traversal</a></li>\n<li><a href=\"https://bford.info/pub/net/p2pnat/\" rel=\"nofollow\">Peer-to-Peer Communication Across Network Address Translators</a></li>\n</ul>\n<h2>Author</h2>\n<p><a href=\"https://twitter.com/namuyan_mine\" rel=\"nofollow\">@namuyan</a></p>\n<h2>Licence</h2>\n<p>MIT</p>\n\n          </div>"}, "last_serial": 6833033, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9de8f6be39effeb585ce44ea2b7d29de", "sha256": "bbbfd5117ae1103a9dfbd55f4de91ff7ff42447b51c35f1c3b0a0636d927191d"}, "downloads": -1, "filename": "srudp-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9de8f6be39effeb585ce44ea2b7d29de", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9931, "upload_time": "2020-01-19T13:22:58", "upload_time_iso_8601": "2020-01-19T13:22:58.710188Z", "url": "https://files.pythonhosted.org/packages/4e/0b/ae1dc8b32029397d44298d33d040f2ff771a36400aa131fc03aaef7cc10f/srudp-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "48229b7d665cfb22628d02a8e61ff811", "sha256": "68b37979ee8353423c03d2c487e024ea968886777c79bfa7509b4cbdfa3fe364"}, "downloads": -1, "filename": "srudp-0.1.1.tar.gz", "has_sig": false, "md5_digest": "48229b7d665cfb22628d02a8e61ff811", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9929, "upload_time": "2020-01-19T17:04:24", "upload_time_iso_8601": "2020-01-19T17:04:24.065048Z", "url": "https://files.pythonhosted.org/packages/7d/ec/958389e07b9d7e738d4d7663fa6c0ddfee902ec029706b179be9bca1fc6e/srudp-0.1.1.tar.gz", "yanked": false}], "0.1.2": [{"comment_text": "", "digests": {"md5": "5c8cb7287a4063a29c2580c9bddce48c", "sha256": "e09ee3fb47d725c9dd4c0ebc541b6511a831d0702e0afb43c2ca33e0b5e7cd91"}, "downloads": -1, "filename": "srudp-0.1.2.tar.gz", "has_sig": false, "md5_digest": "5c8cb7287a4063a29c2580c9bddce48c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10175, "upload_time": "2020-02-06T16:17:14", "upload_time_iso_8601": "2020-02-06T16:17:14.414019Z", "url": "https://files.pythonhosted.org/packages/65/66/9f642d71815f6898ca876d173f0567611a222e37279c04da842846ce89b5/srudp-0.1.2.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "967b6a38d403bc4f23c916c366bf0556", "sha256": "85f90a9838722f89de0f13dc269bea313aef5061604e0ee633ddd7052c9846cb"}, "downloads": -1, "filename": "srudp-0.2.0.tar.gz", "has_sig": false, "md5_digest": "967b6a38d403bc4f23c916c366bf0556", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10801, "upload_time": "2020-02-29T09:35:41", "upload_time_iso_8601": "2020-02-29T09:35:41.094465Z", "url": "https://files.pythonhosted.org/packages/f3/42/35eefd548227b75201a5b6d4dd3c11d4f0efaf1f1bdb902a5f9c0fc97d3b/srudp-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "1457002511fe33557fe5420d5241a56e", "sha256": "0af5189c3ff092e453891f114d3e2e98c153d722c21a980667a6f7fbc072677b"}, "downloads": -1, "filename": "srudp-0.3.0.tar.gz", "has_sig": false, "md5_digest": "1457002511fe33557fe5420d5241a56e", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10793, "upload_time": "2020-03-17T15:42:58", "upload_time_iso_8601": "2020-03-17T15:42:58.496871Z", "url": "https://files.pythonhosted.org/packages/51/fc/a2dba42b35b07f8e1780b4ad3b7e27690d065439e7852c38b7966aa7ad2e/srudp-0.3.0.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "0c5b7db9d1483e8ac4b70adca1ecd631", "sha256": "db8b8121b862eb46bfa7f741baf3fd5ccbf0d8469f24316fda2327953d9e3d15"}, "downloads": -1, "filename": "srudp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0c5b7db9d1483e8ac4b70adca1ecd631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10996, "upload_time": "2020-03-18T02:54:46", "upload_time_iso_8601": "2020-03-18T02:54:46.125302Z", "url": "https://files.pythonhosted.org/packages/6d/55/66bbd10d18f84b9853f8b8156a8645b6e0b57283003b7927f63f1c9fdcdf/srudp-0.3.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0c5b7db9d1483e8ac4b70adca1ecd631", "sha256": "db8b8121b862eb46bfa7f741baf3fd5ccbf0d8469f24316fda2327953d9e3d15"}, "downloads": -1, "filename": "srudp-0.3.1.tar.gz", "has_sig": false, "md5_digest": "0c5b7db9d1483e8ac4b70adca1ecd631", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10996, "upload_time": "2020-03-18T02:54:46", "upload_time_iso_8601": "2020-03-18T02:54:46.125302Z", "url": "https://files.pythonhosted.org/packages/6d/55/66bbd10d18f84b9853f8b8156a8645b6e0b57283003b7927f63f1c9fdcdf/srudp-0.3.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:03:16 2020"}