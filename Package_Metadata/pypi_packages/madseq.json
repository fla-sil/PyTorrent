{"info": {"author": "Thomas Gl\u00e4\u00dfle", "author_email": "t_glaessle@gmx.de", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Scientific/Engineering :: Medical Science Apps.", "Topic :: Scientific/Engineering :: Physics"], "description": "madseq\r\n------\r\n|Build Status| |Coverage| |Version| |Downloads| |License|\r\n\r\nDescription\r\n~~~~~~~~~~~\r\n\r\nScript to parse MAD-X_ sequences from a source file and perform simple\r\ntransformations on the elements.\r\n\r\n.. _MAD-X: http://madx.web.cern.ch/madx\r\n\r\nDependencies\r\n~~~~~~~~~~~~\r\n\r\n- docopt_ to parse command line options\r\n- pydicti_ to store and access element attributes\r\n- pyyaml_ to parse slicing definition and use YAML output format\r\n\r\n.. _docopt: http://docopt.org/\r\n.. _pydicti: https://github.com/coldfix/pydicti\r\n.. _pyyaml: https://pypi.python.org/pypi/PyYAML/\r\n\r\n\r\nInstallation\r\n~~~~~~~~~~~~\r\n\r\nThe setup is to be performed as follows\r\n\r\n.. code-block:: bash\r\n\r\n    python setup.py install\r\n\r\n\r\nUsage\r\n~~~~~\r\n\r\nThe command should be called as follows::\r\n\r\n    Usage:\r\n        madseq.py [-j|-y] [-s <slice>] [<input>] [<output>]\r\n        madseq.py (--help | --version)\r\n\r\n    Options:\r\n        -j, --json                      Use JSON as output format\r\n        -y, --yaml                      Use YAML as output format\r\n        -s <slice>, --slice=<slice>     Set slicing definition file\r\n        -h, --help                      Show this help\r\n        -v, --version                   Show version information\r\n\r\nIf ``<input>`` is not specified the standard input stream will be used to\r\nread the input file. Respectively, the standard output stream will be used\r\nif ``<output>`` is not specified.\r\n\r\nThe slicing definition defines a list of slicing instructions where each\r\nentry is a dictionary with the following groups of mutually exclusive keys::\r\n\r\n    str type: match only elements with the specified type\r\n    str name: match only elements with the specified name\r\n\r\n    bool use_at: use manually entered AT values, default is True\r\n\r\n    float density: slice element with the specified number of slices per meter\r\n    int slice: slice element using a fixed count, default=1\r\n\r\n    bool makethin: whether to convert the slices to MULTIPOLE\r\n\r\n    bool template: whether to put a template for the element in front\r\n\r\n    str style: slicing style, either 'uniform' or 'loop', defaults to 'uniform'\r\n\r\n\r\nExample file:\r\n\r\n.. code-block:: yaml\r\n\r\n    - type: drift\r\n      density: 10\r\n    - name: B1DK1\r\n      slice: 10\r\n      makethin: true\r\n      style: uniform\r\n\r\nNote, that even if an element is matched by multiple rules, only the first\r\none will be used.\r\n\r\n\r\nCaution\r\n~~~~~~~\r\n\r\n- Do not use multi line commands in the input sequences. At the moment\r\n  these are not parsed correctly!\r\n\r\n- Do not add any ``at=`` position arguments in the input sequences. The\r\n  madseq script takes care of this responsibility.\r\n\r\n\r\n.. |Build Status| image:: https://api.travis-ci.org/coldfix/madseq.png?branch=master\r\n   :target: https://travis-ci.org/coldfix/madseq\r\n   :alt: Build Status\r\n\r\n.. |Coverage| image:: https://coveralls.io/repos/coldfix/madseq/badge.png?branch=master\r\n   :target: https://coveralls.io/r/coldfix/madseq\r\n   :alt: Coverage\r\n\r\n.. |Version| image:: http://coldfix.de:8080/v/madseq/badge.png\r\n   :target: https://pypi.python.org/pypi/madseq/\r\n   :alt: Latest Version\r\n\r\n.. |Downloads| image:: http://coldfix.de:8080/d/madseq/badge.png\r\n   :target: https://pypi.python.org/pypi/madseq/\r\n   :alt: Downloads\r\n\r\n.. |License| image:: http://coldfix.de:8080/license/madseq/badge.png\r\n   :target: https://pypi.python.org/pypi/madseq/\r\n   :alt: License\r\n\r\n\r\nChangelog\r\n~~~~~~~~~\r\n\r\n0.4.4\r\n=====\r\n\r\n- fix check for filename extension\r\n\r\n\r\n0.4.3\r\n=====\r\n\r\n- fix some sliced multipole coefficients\r\n- handle QUADRUPOLE.K1S in makethin\r\n- fix a naming problem when slicing with template\r\n- fix python3 problems\r\n\r\n\r\n0.4.2\r\n=====\r\n\r\n- allow .json files to be passed as the -s parameter (extension is used to\r\n  distinguish .json from .yaml)\r\n\r\n\r\n0.4.1\r\n=====\r\n\r\n- use different names for slices\r\n- fix sequence name in comment before templates\r\n\r\n\r\n0.4.0\r\n=====\r\n\r\n- add 'use_at' slicing option that enables to use AT values\r\n\r\n\r\n0.3.2\r\n=====\r\n\r\n- internal: remove attribute access for Element properties\r\n- fix bugged Element.copy and .__contains__ regarding to base elements\r\n- fix JSON/YAML serialization errors\r\n- fix bugged implementation for predefined elements\r\n- fix bugged LOOP style\r\n- fix bugged makethin\r\n- fix bugged use_optics\r\n- rename 'use_optics' => 'template'. technically, this is a change in the\r\n  public interface, but  we are still in 0.X and furthermore the feature was\r\n  not working before anyway.\r\n\r\n\r\n0.3.1\r\n=====\r\n\r\n- use `semantic versioning <http://semver.org/>`\r\n- fix deep attribute lookup for elements\r\n\r\n\r\n0.3\r\n===\r\n\r\n- redesigned command line\r\n- fix erroneous parsing of MAD-X arrays, like KNL={...}\r\n- remove inline attributes for slicing\r\n- extended slicing via slicing configuration file\r\n- fix usability of template (predefined) elements", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/coldfix/madseq", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "madseq", "package_url": "https://pypi.org/project/madseq/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/madseq/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/coldfix/madseq"}, "release_url": "https://pypi.org/project/madseq/0.4.4/", "requires_dist": null, "requires_python": null, "summary": "Parser/transformator for MAD-X sequences", "version": "0.4.4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/coldfix/madseq\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/dc97bfbc26f4c4638249881bf225736d6638defd/68747470733a2f2f6170692e7472617669732d63692e6f72672f636f6c646669782f6d61647365712e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://coveralls.io/r/coldfix/madseq\" rel=\"nofollow\"><img alt=\"Coverage\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/52a68a44709aff9e981e61cb5b360a585e239ff8/68747470733a2f2f636f766572616c6c732e696f2f7265706f732f636f6c646669782f6d61647365712f62616467652e706e673f6272616e63683d6d6173746572\"></a> <a href=\"https://pypi.python.org/pypi/madseq/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b0fcb08f736a1f3a723ac10481aa14b808856338/687474703a2f2f636f6c646669782e64653a383038302f762f6d61647365712f62616467652e706e67\"></a> <a href=\"https://pypi.python.org/pypi/madseq/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/24891e457a636b74aed9373124fe7b196c7e4110/687474703a2f2f636f6c646669782e64653a383038302f642f6d61647365712f62616467652e706e67\"></a> <a href=\"https://pypi.python.org/pypi/madseq/\" rel=\"nofollow\"><img alt=\"License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7fbad1483796f027ea4e7777d227ad13addea419/687474703a2f2f636f6c646669782e64653a383038302f6c6963656e73652f6d61647365712f62616467652e706e67\"></a></p>\n<div id=\"description\">\n<h2>Description</h2>\n<p>Script to parse <a href=\"http://madx.web.cern.ch/madx\" rel=\"nofollow\">MAD-X</a> sequences from a source file and perform simple\ntransformations on the elements.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<ul>\n<li><a href=\"http://docopt.org/\" rel=\"nofollow\">docopt</a> to parse command line options</li>\n<li><a href=\"https://github.com/coldfix/pydicti\" rel=\"nofollow\">pydicti</a> to store and access element attributes</li>\n<li><a href=\"https://pypi.python.org/pypi/PyYAML/\" rel=\"nofollow\">pyyaml</a> to parse slicing definition and use YAML output format</li>\n</ul>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The setup is to be performed as follows</p>\n<pre>python setup.py install\n</pre>\n</div>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>The command should be called as follows:</p>\n<pre>Usage:\n    madseq.py [-j|-y] [-s &lt;slice&gt;] [&lt;input&gt;] [&lt;output&gt;]\n    madseq.py (--help | --version)\n\nOptions:\n    -j, --json                      Use JSON as output format\n    -y, --yaml                      Use YAML as output format\n    -s &lt;slice&gt;, --slice=&lt;slice&gt;     Set slicing definition file\n    -h, --help                      Show this help\n    -v, --version                   Show version information\n</pre>\n<p>If <tt>&lt;input&gt;</tt> is not specified the standard input stream will be used to\nread the input file. Respectively, the standard output stream will be used\nif <tt>&lt;output&gt;</tt> is not specified.</p>\n<p>The slicing definition defines a list of slicing instructions where each\nentry is a dictionary with the following groups of mutually exclusive keys:</p>\n<pre>str type: match only elements with the specified type\nstr name: match only elements with the specified name\n\nbool use_at: use manually entered AT values, default is True\n\nfloat density: slice element with the specified number of slices per meter\nint slice: slice element using a fixed count, default=1\n\nbool makethin: whether to convert the slices to MULTIPOLE\n\nbool template: whether to put a template for the element in front\n\nstr style: slicing style, either 'uniform' or 'loop', defaults to 'uniform'\n</pre>\n<p>Example file:</p>\n<pre><span class=\"p-Indicator\">-</span> <span class=\"nt\">type</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">drift</span>\n  <span class=\"nt\">density</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10</span>\n<span class=\"p-Indicator\">-</span> <span class=\"nt\">name</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">B1DK1</span>\n  <span class=\"nt\">slice</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">10</span>\n  <span class=\"nt\">makethin</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">true</span>\n  <span class=\"nt\">style</span><span class=\"p\">:</span> <span class=\"l-Scalar-Plain\">uniform</span>\n</pre>\n<p>Note, that even if an element is matched by multiple rules, only the first\none will be used.</p>\n</div>\n<div id=\"caution\">\n<h2>Caution</h2>\n<ul>\n<li>Do not use multi line commands in the input sequences. At the moment\nthese are not parsed correctly!</li>\n<li>Do not add any <tt>at=</tt> position arguments in the input sequences. The\nmadseq script takes care of this responsibility.</li>\n</ul>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.4.4</h3>\n<ul>\n<li>fix check for filename extension</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.4.3</h3>\n<ul>\n<li>fix some sliced multipole coefficients</li>\n<li>handle QUADRUPOLE.K1S in makethin</li>\n<li>fix a naming problem when slicing with template</li>\n<li>fix python3 problems</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.4.2</h3>\n<ul>\n<li>allow .json files to be passed as the -s parameter (extension is used to\ndistinguish .json from .yaml)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.4.1</h3>\n<ul>\n<li>use different names for slices</li>\n<li>fix sequence name in comment before templates</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.4.0</h3>\n<ul>\n<li>add \u2018use_at\u2019 slicing option that enables to use AT values</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.3.2</h3>\n<ul>\n<li>internal: remove attribute access for Element properties</li>\n<li>fix bugged Element.copy and .__contains__ regarding to base elements</li>\n<li>fix JSON/YAML serialization errors</li>\n<li>fix bugged implementation for predefined elements</li>\n<li>fix bugged LOOP style</li>\n<li>fix bugged makethin</li>\n<li>fix bugged use_optics</li>\n<li>rename \u2018use_optics\u2019 =&gt; \u2018template\u2019. technically, this is a change in the\npublic interface, but  we are still in 0.X and furthermore the feature was\nnot working before anyway.</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.3.1</h3>\n<ul>\n<li>use <cite>semantic versioning &lt;http://semver.org/&gt;</cite></li>\n<li>fix deep attribute lookup for elements</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.3</h3>\n<ul>\n<li>redesigned command line</li>\n<li>fix erroneous parsing of MAD-X arrays, like KNL={\u2026}</li>\n<li>remove inline attributes for slicing</li>\n<li>extended slicing via slicing configuration file</li>\n<li>fix usability of template (predefined) elements</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4329705, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "289652f1e4eb7bc3f2875f61d35fee84", "sha256": "9631cee95873c90be0522325b90e4c1ee8d332d824f4f7f84f4cd0406e6ad4bb"}, "downloads": -1, "filename": "madseq-0.1.tar.gz", "has_sig": false, "md5_digest": "289652f1e4eb7bc3f2875f61d35fee84", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8736, "upload_time": "2014-01-23T17:03:50", "upload_time_iso_8601": "2014-01-23T17:03:50.773973Z", "url": "https://files.pythonhosted.org/packages/e6/0a/e47dcd7c3fea2c001fe85ec6f240969cffd03593b299f553bbed42f7ff68/madseq-0.1.tar.gz", "yanked": false}], "0.3": [{"comment_text": "", "digests": {"md5": "c9adb63f81fa9277b383df267bca91e6", "sha256": "9d406dbbe1573adc4bb6c77450af1ea97d68f4a484afedb1dea12617604ac116"}, "downloads": -1, "filename": "madseq-0.3.tar.gz", "has_sig": false, "md5_digest": "c9adb63f81fa9277b383df267bca91e6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9823, "upload_time": "2014-05-03T09:26:34", "upload_time_iso_8601": "2014-05-03T09:26:34.832076Z", "url": "https://files.pythonhosted.org/packages/6c/c7/e9488d9a8df9bf6a5a137f783c57b80d89bb9ac20a57fb10123686c4dfaf/madseq-0.3.tar.gz", "yanked": false}], "0.3.1": [{"comment_text": "", "digests": {"md5": "7baae476dbcf6cb7e1b895bd72cc9b73", "sha256": "cfe7f66d0c1b37efe4afbf474cb9dd3b5076c7c2a498eaf657f599c2ea64fdc9"}, "downloads": -1, "filename": "madseq-0.3.1.tar.gz", "has_sig": false, "md5_digest": "7baae476dbcf6cb7e1b895bd72cc9b73", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9966, "upload_time": "2014-05-03T10:10:37", "upload_time_iso_8601": "2014-05-03T10:10:37.973566Z", "url": "https://files.pythonhosted.org/packages/bd/50/917af1a17f569900a1913943939fd698f675068045cb86afae7410a05d52/madseq-0.3.1.tar.gz", "yanked": false}], "0.3.2": [{"comment_text": "", "digests": {"md5": "b1d89f8bae8dab0ea8c6a2007e8b4a50", "sha256": "59b911207dec7bc9f5bc61fa8aa2470004008e9d86875907b889e3b2f7112973"}, "downloads": -1, "filename": "madseq-0.3.2.tar.gz", "has_sig": false, "md5_digest": "b1d89f8bae8dab0ea8c6a2007e8b4a50", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13434, "upload_time": "2014-05-03T15:39:43", "upload_time_iso_8601": "2014-05-03T15:39:43.726172Z", "url": "https://files.pythonhosted.org/packages/29/ae/f5c5d9d460fa88a8ded5cb857f0c3dae21240459a058aa79db8121a9b4a2/madseq-0.3.2.tar.gz", "yanked": false}], "0.4.0": [{"comment_text": "", "digests": {"md5": "a8c0e65102bf151a45f59d8dc2d84baf", "sha256": "42809761a04798a2087df660da3069fc6309981170374fca91b45680bc33b569"}, "downloads": -1, "filename": "madseq-0.4.0.tar.gz", "has_sig": false, "md5_digest": "a8c0e65102bf151a45f59d8dc2d84baf", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13651, "upload_time": "2014-05-03T16:03:35", "upload_time_iso_8601": "2014-05-03T16:03:35.591716Z", "url": "https://files.pythonhosted.org/packages/49/2c/0df8fba801a3b220dba318b817a78413b2e69f889f3eae722a27a677aa43/madseq-0.4.0.tar.gz", "yanked": false}], "0.4.1": [{"comment_text": "", "digests": {"md5": "7244a781268f7b9c2d5cb51200b98f16", "sha256": "bbe11c05274cc83702e189ebd6b00f09a9dd61625a488d2670688567ee1b1b53"}, "downloads": -1, "filename": "madseq-0.4.1.tar.gz", "has_sig": false, "md5_digest": "7244a781268f7b9c2d5cb51200b98f16", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13822, "upload_time": "2014-05-03T18:11:17", "upload_time_iso_8601": "2014-05-03T18:11:17.515341Z", "url": "https://files.pythonhosted.org/packages/99/dd/1966b2414e8a68344debeacc22db35f2a822a7df41c8761743b290a9ac97/madseq-0.4.1.tar.gz", "yanked": false}], "0.4.2": [{"comment_text": "", "digests": {"md5": "13ad175f1b26809b05f98a4883c02bb6", "sha256": "c7526a06055b0d079c098bb9542db012633128f494d06a12add5dc6608bedf92"}, "downloads": -1, "filename": "madseq-0.4.2.tar.gz", "has_sig": false, "md5_digest": "13ad175f1b26809b05f98a4883c02bb6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 13980, "upload_time": "2014-05-03T18:32:04", "upload_time_iso_8601": "2014-05-03T18:32:04.146660Z", "url": "https://files.pythonhosted.org/packages/00/7c/d45acb44729fc1c1658b27ed0ad3f8f9f46eb5bc407c9bbf9c3327ea4d03/madseq-0.4.2.tar.gz", "yanked": false}], "0.4.3": [{"comment_text": "", "digests": {"md5": "a10f9153900589d998a3ef5426951115", "sha256": "566448c81a2013b36da7a5af361c95f31a83df002b85cc66e246c76bf63872d6"}, "downloads": -1, "filename": "madseq-0.4.3.tar.gz", "has_sig": false, "md5_digest": "a10f9153900589d998a3ef5426951115", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18376, "upload_time": "2014-05-04T12:52:17", "upload_time_iso_8601": "2014-05-04T12:52:17.552085Z", "url": "https://files.pythonhosted.org/packages/b9/44/5fa44f93c5b969016e73f44fe61120f0c649e9e47b1eb795303829d1be39/madseq-0.4.3.tar.gz", "yanked": false}], "0.4.4": [{"comment_text": "", "digests": {"md5": "1308a64377f87f0419e1f0169bf4e467", "sha256": "e1538bdec2d55f4a7b4c0c3e412c7d00732d579948b9a7adcf42cd45b19c6148"}, "downloads": -1, "filename": "madseq-0.4.4.tar.gz", "has_sig": false, "md5_digest": "1308a64377f87f0419e1f0169bf4e467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18422, "upload_time": "2014-07-22T01:08:01", "upload_time_iso_8601": "2014-07-22T01:08:01.771936Z", "url": "https://files.pythonhosted.org/packages/0f/46/9e20a7c9635f5cd968834348bf90c22dabfbaaf18ce723bb89cd9888e1bf/madseq-0.4.4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1308a64377f87f0419e1f0169bf4e467", "sha256": "e1538bdec2d55f4a7b4c0c3e412c7d00732d579948b9a7adcf42cd45b19c6148"}, "downloads": -1, "filename": "madseq-0.4.4.tar.gz", "has_sig": false, "md5_digest": "1308a64377f87f0419e1f0169bf4e467", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18422, "upload_time": "2014-07-22T01:08:01", "upload_time_iso_8601": "2014-07-22T01:08:01.771936Z", "url": "https://files.pythonhosted.org/packages/0f/46/9e20a7c9635f5cd968834348bf90c22dabfbaaf18ce723bb89cd9888e1bf/madseq-0.4.4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:42:12 2020"}