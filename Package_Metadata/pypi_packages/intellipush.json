{"info": {"author": "Mats Lindh", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "# intellipush\n\nA client for communicating with the intellipush API service for sending SMSes.\n\n`pip install intellipush`\n\nSending an SMS:\n\n    from intellipush import client\n    intellipush = client.Intellipush(key=api_id, secret=api_secret)\n\n    result = intellipush.sms(\n        countrycode='0047',\n        phonenumber=phonenumber,\n        message='test from intellipush',\n    )    \n\nSee the tests for current examples of how to perform most tasks available through the API. \n\nRunning the tests\n=================\n\nThe tests are run with `pytest`, and accepts `--api-id` and `--api-secret` to set\nproper API access keys for testing against the live interface. Do not do this with accounts\nyou care about.\n\nIf not set, only the tests that do not depend on a live endpoint will be run.\n\n    pytest tests/test_client.py --api-id=apiid --api-secret=secret\n\nTests that depend on a live phone number\n----------------------------------------\n\nCertain tests against the live system actually do stuff that ends up with a live \nmessage going out to a phone. Since we don't want this to happen without proper\ncause, you'll have to provide two additional settings if you want live messages\nto be sent.\n\n    --live-phone-number <phonenumber> --live-country-code <countrycode>\n\nExample:\n\n    --live-phone-number 88888888 --live-country-code 0047\n\nThe methods do have mocked versions of their tests attached, but to make sure that\nthe tests actually work against the server side, this allows you to run those tests\nas well if necessary.\n\nReleasing a new version of the library\n======================================\n\nCreate the archives:\n\n    python setup.py sdist bdist_wheel\n\nUpload the packages to pypi:\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://www.intellipush.com/", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "intellipush", "package_url": "https://pypi.org/project/intellipush/", "platform": "", "project_url": "https://pypi.org/project/intellipush/", "project_urls": {"Homepage": "https://www.intellipush.com/"}, "release_url": "https://pypi.org/project/intellipush/0.2.0/", "requires_dist": ["requests"], "requires_python": "", "summary": "Client for accessing the intellipush message service.", "version": "0.2.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>intellipush</h1>\n<p>A client for communicating with the intellipush API service for sending SMSes.</p>\n<p><code>pip install intellipush</code></p>\n<p>Sending an SMS:</p>\n<pre><code>from intellipush import client\nintellipush = client.Intellipush(key=api_id, secret=api_secret)\n\nresult = intellipush.sms(\n    countrycode='0047',\n    phonenumber=phonenumber,\n    message='test from intellipush',\n)    \n</code></pre>\n<p>See the tests for current examples of how to perform most tasks available through the API.</p>\n<h1>Running the tests</h1>\n<p>The tests are run with <code>pytest</code>, and accepts <code>--api-id</code> and <code>--api-secret</code> to set\nproper API access keys for testing against the live interface. Do not do this with accounts\nyou care about.</p>\n<p>If not set, only the tests that do not depend on a live endpoint will be run.</p>\n<pre><code>pytest tests/test_client.py --api-id=apiid --api-secret=secret\n</code></pre>\n<h2>Tests that depend on a live phone number</h2>\n<p>Certain tests against the live system actually do stuff that ends up with a live\nmessage going out to a phone. Since we don't want this to happen without proper\ncause, you'll have to provide two additional settings if you want live messages\nto be sent.</p>\n<pre><code>--live-phone-number &lt;phonenumber&gt; --live-country-code &lt;countrycode&gt;\n</code></pre>\n<p>Example:</p>\n<pre><code>--live-phone-number 88888888 --live-country-code 0047\n</code></pre>\n<p>The methods do have mocked versions of their tests attached, but to make sure that\nthe tests actually work against the server side, this allows you to run those tests\nas well if necessary.</p>\n<h1>Releasing a new version of the library</h1>\n<p>Create the archives:</p>\n<pre><code>python setup.py sdist bdist_wheel\n</code></pre>\n<p>Upload the packages to pypi:</p>\n\n          </div>"}, "last_serial": 6499266, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "0b58e0d8d4cd6e040b1c9d21edc3195e", "sha256": "1a3bc84b9b35978b5122d10342d6de249232263d1ba2b27cfc49a1da8f00019a"}, "downloads": -1, "filename": "intellipush-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b58e0d8d4cd6e040b1c9d21edc3195e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8839, "upload_time": "2020-01-20T09:32:01", "upload_time_iso_8601": "2020-01-20T09:32:01.230172Z", "url": "https://files.pythonhosted.org/packages/1c/9f/7eb157512d524ab5a5e79035a889b6c07ea4fff359bd0ee997a103d8a819/intellipush-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e300deafa449e44e6fe91638204c0e30", "sha256": "189cef110d2df5c80bcf3b5332ba3a38ab9e577b24d5f26011f443e81eeba96a"}, "downloads": -1, "filename": "intellipush-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e300deafa449e44e6fe91638204c0e30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6759, "upload_time": "2020-01-20T09:32:04", "upload_time_iso_8601": "2020-01-20T09:32:04.668156Z", "url": "https://files.pythonhosted.org/packages/71/27/e56c0b56fae3804957399dfcecfd826005bfa39a347a943a455601d7633e/intellipush-0.2.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0b58e0d8d4cd6e040b1c9d21edc3195e", "sha256": "1a3bc84b9b35978b5122d10342d6de249232263d1ba2b27cfc49a1da8f00019a"}, "downloads": -1, "filename": "intellipush-0.2.0-py3-none-any.whl", "has_sig": false, "md5_digest": "0b58e0d8d4cd6e040b1c9d21edc3195e", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 8839, "upload_time": "2020-01-20T09:32:01", "upload_time_iso_8601": "2020-01-20T09:32:01.230172Z", "url": "https://files.pythonhosted.org/packages/1c/9f/7eb157512d524ab5a5e79035a889b6c07ea4fff359bd0ee997a103d8a819/intellipush-0.2.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e300deafa449e44e6fe91638204c0e30", "sha256": "189cef110d2df5c80bcf3b5332ba3a38ab9e577b24d5f26011f443e81eeba96a"}, "downloads": -1, "filename": "intellipush-0.2.0.tar.gz", "has_sig": false, "md5_digest": "e300deafa449e44e6fe91638204c0e30", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 6759, "upload_time": "2020-01-20T09:32:04", "upload_time_iso_8601": "2020-01-20T09:32:04.668156Z", "url": "https://files.pythonhosted.org/packages/71/27/e56c0b56fae3804957399dfcecfd826005bfa39a347a943a455601d7633e/intellipush-0.2.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:55:32 2020"}