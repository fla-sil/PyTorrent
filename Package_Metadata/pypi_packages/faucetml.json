{"info": {"author": "Edoardo Conti, Lionel Vital", "author_email": "edoardo.conti@gmail.com", "bugtrack_url": null, "classifiers": ["License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Faucet ML\n\nFaucet ML is a Python package that enables high speed mini-batch data reading & preprocessing from BigQuery for machine learning model training.\n\nFaucet ML is designed for cases where:\n* Datasets are too large to fit into memory\n* Model training requires mini-batches of data (SGD based algorithms)\n\nFeatures:\n* High speed batch data reading from BigQuery\n* Automatic feature identification and preprocessing via. PyTorch\n* Integration with [Feast](https://github.com/gojek/feast) feature store (coming soon)\n\n### Installation\n```\npip install faucetml\n```\n\n### More about Faucet\nMany training datasets are too large to fit in memory, but model training would benefit from using all of the training data. Naively issuing 1 query per mini-batch of data is unnecessarily expensive due round-trip network costs. Faucet is a library that solves these issues by:\n* Fetching large \"chunks\" of data in non-blocking background threads\n\t* where chunks are much larger than mini-batches, but still fit in memory\n* Caching  chunks locally\n* Returning mini-batches from cached chunks in O(1) time\n\n\n### Examples\nSee [examples](https://github.com/econti/faucetml/tree/master/examples) for detailed ipython notebook examples on how to use Faucet.\n\n```\n# initialize the client\nfml = get_client(\n    datastore=\"bigquery\",\n    credential_path=\"bq_creds.json\",\n    table_name=\"my_training_table\",\n    ds=\"2020-01-20\",\n    epochs=2,\n    batch_size=1024\n    chunk_size=1024 * 10000,\n    test_split_percent=20,\n)\n```\n\n```\n# train & test\nfor epoch in range(2):\n\n    # training loop\n    fml.prep_for_epoch()\n    batch = fml.get_batch()\n    while batch is not None:\n        train(batch)\n        batch = fml.get_batch()\n\n    # evaluation loop\n    fml.prep_for_eval()\n    batch = fml.get_batch(eval=True)\n    while batch is not None:\n        test(batch)\n        batch = fml.get_batch(eval=True)\n```\n\n### Future features\n- [ ] Support more data warehouses (redshift, hive, etc.)\n- [ ] Support reading features & preprocessing specs from [Feast](https://github.com/gojek/feast)\n\nSuggestions for other features? Open an issue and let us know.", "description_content_type": "text/markdown", "docs_url": null, "download_url": "https://github.com/econti/FaucetML/archive/v0.0.3.tar.gz", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/econti/FaucetML", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "faucetml", "package_url": "https://pypi.org/project/faucetml/", "platform": "", "project_url": "https://pypi.org/project/faucetml/", "project_urls": {"Download": "https://github.com/econti/FaucetML/archive/v0.0.3.tar.gz", "Homepage": "https://github.com/econti/FaucetML"}, "release_url": "https://pypi.org/project/faucetml/0.0.3/", "requires_dist": null, "requires_python": ">=3.6", "summary": "Simple, high-speed batch data reader & preprocessor for ML applications.", "version": "0.0.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Faucet ML</h1>\n<p>Faucet ML is a Python package that enables high speed mini-batch data reading &amp; preprocessing from BigQuery for machine learning model training.</p>\n<p>Faucet ML is designed for cases where:</p>\n<ul>\n<li>Datasets are too large to fit into memory</li>\n<li>Model training requires mini-batches of data (SGD based algorithms)</li>\n</ul>\n<p>Features:</p>\n<ul>\n<li>High speed batch data reading from BigQuery</li>\n<li>Automatic feature identification and preprocessing via. PyTorch</li>\n<li>Integration with <a href=\"https://github.com/gojek/feast\" rel=\"nofollow\">Feast</a> feature store (coming soon)</li>\n</ul>\n<h3>Installation</h3>\n<pre><code>pip install faucetml\n</code></pre>\n<h3>More about Faucet</h3>\n<p>Many training datasets are too large to fit in memory, but model training would benefit from using all of the training data. Naively issuing 1 query per mini-batch of data is unnecessarily expensive due round-trip network costs. Faucet is a library that solves these issues by:</p>\n<ul>\n<li>Fetching large \"chunks\" of data in non-blocking background threads\n<ul>\n<li>where chunks are much larger than mini-batches, but still fit in memory</li>\n</ul>\n</li>\n<li>Caching  chunks locally</li>\n<li>Returning mini-batches from cached chunks in O(1) time</li>\n</ul>\n<h3>Examples</h3>\n<p>See <a href=\"https://github.com/econti/faucetml/tree/master/examples\" rel=\"nofollow\">examples</a> for detailed ipython notebook examples on how to use Faucet.</p>\n<pre><code># initialize the client\nfml = get_client(\n    datastore=\"bigquery\",\n    credential_path=\"bq_creds.json\",\n    table_name=\"my_training_table\",\n    ds=\"2020-01-20\",\n    epochs=2,\n    batch_size=1024\n    chunk_size=1024 * 10000,\n    test_split_percent=20,\n)\n</code></pre>\n<pre><code># train &amp; test\nfor epoch in range(2):\n\n    # training loop\n    fml.prep_for_epoch()\n    batch = fml.get_batch()\n    while batch is not None:\n        train(batch)\n        batch = fml.get_batch()\n\n    # evaluation loop\n    fml.prep_for_eval()\n    batch = fml.get_batch(eval=True)\n    while batch is not None:\n        test(batch)\n        batch = fml.get_batch(eval=True)\n</code></pre>\n<h3>Future features</h3>\n<ul>\n<li>[ ] Support more data warehouses (redshift, hive, etc.)</li>\n<li>[ ] Support reading features &amp; preprocessing specs from <a href=\"https://github.com/gojek/feast\" rel=\"nofollow\">Feast</a></li>\n</ul>\n<p>Suggestions for other features? Open an issue and let us know.</p>\n\n          </div>"}, "last_serial": 6540468, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "f7ceeab4b752664b622fc9f340334c0d", "sha256": "8467b1516ad564a09c50e14829cd9b3ed99691280222195092d5b2dc84ea3b8c"}, "downloads": -1, "filename": "faucetml-0.0.1.tar.gz", "has_sig": false, "md5_digest": "f7ceeab4b752664b622fc9f340334c0d", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 6200, "upload_time": "2020-01-21T23:57:51", "upload_time_iso_8601": "2020-01-21T23:57:51.839377Z", "url": "https://files.pythonhosted.org/packages/6a/d2/5d2e06790f56d318cea4b63a43740c5c4297124e131d2c40bf38b50c1580/faucetml-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "62bfc41d8ec4daaf862d7da44542216e", "sha256": "4ad67875fe3c1960791a40bbd18d8a389ef125309832f9685ea608aa610660f5"}, "downloads": -1, "filename": "faucetml-0.0.2.tar.gz", "has_sig": false, "md5_digest": "62bfc41d8ec4daaf862d7da44542216e", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14690, "upload_time": "2020-01-29T01:23:42", "upload_time_iso_8601": "2020-01-29T01:23:42.194051Z", "url": "https://files.pythonhosted.org/packages/37/34/cd854b1fc916aad648ab34dfe76b97368cc1b4153a39de26242e40e52844/faucetml-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "0e90cf64ff067a2e54ab21251be480a0", "sha256": "cac9654cce7d1cb919fe3cef500b58de5bee9dd057047b2207e0b02a4df784da"}, "downloads": -1, "filename": "faucetml-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0e90cf64ff067a2e54ab21251be480a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14725, "upload_time": "2020-01-29T22:34:33", "upload_time_iso_8601": "2020-01-29T22:34:33.795988Z", "url": "https://files.pythonhosted.org/packages/75/7b/11baaa8b8f1c3199d6d7357d811e880626269f2df835413f83748d23be63/faucetml-0.0.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0e90cf64ff067a2e54ab21251be480a0", "sha256": "cac9654cce7d1cb919fe3cef500b58de5bee9dd057047b2207e0b02a4df784da"}, "downloads": -1, "filename": "faucetml-0.0.3.tar.gz", "has_sig": false, "md5_digest": "0e90cf64ff067a2e54ab21251be480a0", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 14725, "upload_time": "2020-01-29T22:34:33", "upload_time_iso_8601": "2020-01-29T22:34:33.795988Z", "url": "https://files.pythonhosted.org/packages/75/7b/11baaa8b8f1c3199d6d7357d811e880626269f2df835413f83748d23be63/faucetml-0.0.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:20 2020"}