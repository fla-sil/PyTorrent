{"info": {"author": "Randy Syring", "author_email": "randy.syring@level12.io", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: BSD License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "Keg Auth\u2019s Readme\n==========================================\n\n.. image:: https://circleci.com/gh/level12/keg-auth.svg?&style=shield&circle-token=b90c5336d179f28df73d404a26924bc373840257\n    :target: https://circleci.com/gh/level12/keg-auth\n\n.. image:: https://codecov.io/github/level12/keg-auth/coverage.svg?branch=master&token=hl15MQRPeF\n    :target: https://codecov.io/github/level12/keg-auth?branch=master\n\nDemo\n----\n\nTypical usage is demonstrated in\nhttps://github.com/level12/keg-app-cookiecutter\n\nUsage\n-----\n\n-  Installation\n\n   - bare functionality: `pip install keg-auth`\n   - mail (i.e. with a mail manager configured, see below): `pip install keg-auth[mail]`\n   - JWT (for using JWT tokens as authenticators): `pip install keg-auth[jwt]`\n   - LDAP (for using LDAP target for authentication): `pip install keg-auth[ldap]`\n\n-  Configuration\n\n   -  `SERVER_NAME = 'somehost'`: required for Keg Auth when generating URL in create-user CLI command\n      -  include a port number if needed (e.g. `localhost:5000`)\n   -  `PREFERRED_URL_SCHEME = 'https'`: this is important so that generated auth related URLS are\n       secure.  You could have an SSL redirect but by the time that would fire, the key would\n       have already been sent in the URL.\n   -  `KEGAUTH_TOKEN_EXPIRE_MINS`: integer, defaults to 240 minutes (4 hours)\n      -  if mail functions are enabled and tokens in the model, affects the time a verification token remains valid\n   -  `KEGAUTH_CLI_USER_ARGS`: list of strings, defaults to `['email']`\n      -  names arguments to be accepted by CLI user commands and passed to the model\n\n   -  Email settings\n\n      -  `KEGAUTH_EMAIL_SITE_NAME = 'Keg Application'`: used in email body if mail is enabled\n      -  `KEGAUTH_EMAIL_SITE_ABBR = 'Keg App'`: used in email subject if mail is enabled\n\n      - Example message:\n\n        - Subject: [Keg App] Password Reset Link\n        - Body: Somebody asked to reset your password on Keg Application. If this was not you...\n\n-  Extensions\n\n   -  set up an auth manager (in app setup or extensions)\n   -  the entity registry hooks up user, group, bundle, and permission entities. You will need to\n      create a registry to associate with the auth manager, and register your entities from the\n      model (see model notes)\n   -  note that the mail_manager is optional. If a mail_manager is not given, no mail will be sent\n   -  permissions may be passed as simple string tokens, or as tuples of `(token, description)`\n\n    .. code-block:: python\n\n          from flask_mail import Mail\n          from keg_auth import AuthManager, AuthMailManager, AuthEntityRegistry\n\n          mail_ext = Mail()\n          auth_mail_manager = AuthMailManager(mail_ext)\n          auth_entity_registry = AuthEntityRegistry()\n\n          _endpoints = {'after-login': 'public.home'}\n          permissions = (\n              ('auth-manage', 'manage users, groups, bundles, and view permissions'),\n              ('app-permission1', 'access view Foo'),\n              ('app-permission2', 'access the Bar area'),\n          )\n\n          auth_manager = AuthManager(mail_manager=auth_mail_manager, endpoints=_endpoints,\n                                     entity_registry=auth_entity_registry, permissions=permissions)\n          auth_manager.init_app(app)\n    ..\n\n-  Login Authenticators control validation of users\n\n   -  includes logic for verifying a user from a login route, and other view-layer operations\n      needed for user workflow (e.g. verifying email, password resets, etc.)\n   -  authenticator may be specified on the auth_manager:\n\n      -  'keg' is the default primary authenticator, and uses username/password\n      -  ``AuthManager(mail_ext, login_authenticator=LdapAuthenticator)``\n\n   -  LDAP authentication\n\n      -  ``from keg_auth import LdapAuthenticator``\n      -  uses pyldap, which needs to be installed: ``pip install keg-auth[ldap]``\n\n      -  additional config:\n\n         -  KEGAUTH_LDAP_TEST_MODE: when True, bypasses LDAP calls. Defaults to False\n         -  KEGAUTH_LDAP_SERVER_URL: target LDAP server or list of servers to use for queries.\n            If a list is given, authentication is attempted on each server in the given order\n            until a successful query is made.\n         -  KEGAUTH_LDAP_DN_FORMAT: format-able string to set up for the query\n            -  ex. ``uid={},dc=example,dc=org``\n\n-  Request Loaders run when a user is not in session, and identifying data is in the request\n\n   -  ``AuthManager(mail_ext, request_loaders=JwtRequestLoader)``\n   -  token authenticators, like JwtRequestLoader, have a `create_access_token` method\n      -  ``token = auth_manager.get_request_loader('jwt').create_access_token(user)``\n   -  JWT:\n      -  ``from keg_auth import JwtRequestLoader``\n      -  uses flask-jwt-extended, which needs to be installed: ``pip install keg-auth[jwt]``\n\n-  Blueprints\n\n   -  include an auth blueprint along with your app\u2019s blueprints, which includes the login views\n      and user/group/bundle management. Requires AuthManager instance:\n\n   .. code-block:: python\n\n             from keg_auth import make_blueprint\n             from my_app.extensions import auth_manager\n             auth_bp = make_blueprint(__name__, auth_manager)\n   ..\n\n-  CLI is rudimentary, with just one create-user command in the auth group. You can extend the\n   group by using the cli_group attribute on the app's auth_manager, but you need access to the\n   app during startup to do that. You can use an event signal to handle this - just be sure\n   your app's `visit_modules` has the location of the event.\n\n   .. code-block:: python\n\n          # in app definition\n          visit_modules = ['.events']\n\n\n          # in events module\n          from keg.signals import init_complete\n\n          from keg_auth_ta.cli import auth_cli_extensions\n\n\n          @init_complete.connect\n          def init_app_cli(app):\n              auth_cli_extensions(app)\n\n\n          # in cli\n          def auth_cli_extensions(app):\n              @app.auth_manager.cli_group.command('command-extension')\n              def command_extension():\n                  pass\n   ..\n\n-  CLI create-user command, by default, has one required argument (email). If you wish to have\n   additional arguments, put the list of arg names in `KEGAUTH_CLI_USER_ARGS` config\n\n- CLI set-password command allows you to set the password for a given username.\n\n-  Model\n\n   -  create entities using the existing mixins, and register them with\n      keg_auth\n   -  note: the User model assumes that the entity mixed with UserMixin\n      will have a PK id\n   -  email address and token verification by email are in `UserEmailMixin`\n      - i.e. if your app will not use email token verification for passwords, leave that mixin out\n\n   .. code-block:: python\n\n          from keg.db import db\n          from keg_elements.db.mixins import DefaultColsMixin, MethodsMixin\n          from keg_auth import UserMixin, UserEmailMixin, PermissionMixin, BundleMixin, GroupMixin\n\n          from my_app.extensions import auth_entity_registry\n\n\n          class EntityMixin(DefaultColsMixin, MethodsMixin):\n              pass\n\n\n          @auth_entity_registry.register_user\n          class User(db.Model, UserEmailMixin, UserMixin, EntityMixin):\n              __tablename__ = 'users'\n\n\n          @auth_entity_registry.register_permission\n          class Permission(db.Model, PermissionMixin, EntityMixin):\n              __tablename__ = 'permissions'\n\n              def __repr__(self):\n                  return '<Permission id={} token={}>'.format(self.id, self.token)\n\n\n          @auth_entity_registry.register_bundle\n          class Bundle(db.Model, BundleMixin, EntityMixin):\n              __tablename__ = 'bundles'\n\n\n          @auth_entity_registry.register_group\n          class Group(db.Model, GroupMixin, EntityMixin):\n              __tablename__ = 'groups'\n   ..\n-  Navigation Helpers\n\n   -  Keg-Auth provides navigation helpers to set up a menu tree, for which nodes on the tree are\n      restricted according to the authentication/authorization requirements of the target endpoint\n\n      - Note: requirements are any class-level permission requirements. If authorization is defined\n        by an instance-level ``check_auth`` method, that will not be used by the navigation helpers\n\n   -  Usage involves setting up a menu structure with NavItem/NavURL objects. Note that permissions on\n      a route may be overridden for navigation purposes\n   -  Menus may be tracked on the auth manager, which will reset their cached access on\n      login/logout\n   -  ``keg_auth/navigation.html`` template has a helper ``render_menu`` to render a given menu as a ul\n\n      -  ``{% import \"keg_auth/navigation.html\" as navigation %}``\n      -  ``render_menu(auth_manager.menus['main'])``\n      -  ``render_menu(auth_manager.menus['main'], expand_to_current=True)``\n\n        - Automatically expand/collapse menu groups for the currently-viewed item. Useful for vertical menus.\n\n   -  Collapsible groups can be added to navigation menus by nesting NavItems in the menu. The group item\n      will get a ``nav_group`` attribute, which can be referred to in CSS.\n\n      -  ``NavItem('Auth Menu', NavItem(...))`` will have a ``nav_group`` of ``#navgroup-auth-menu``\n      -  ``NavItem('Auth Menu', NavItem(...), nav_group='foo')`` will have a ``nav_group`` of ``#navgroup-foo``\n\n   -  NavItems can specify an icon to display in the menu item by passing an ``icon_class`` string to the\n      NavItem constructor. e.g., ``NavItem('Title', NavURL(...), icon_class='fas fa-shopping-cart')``.\n   -  Example:\n\n   .. code-block:: python\n\n          from keg.signals import init_complete\n\n          from keg_auth import NavItem, NavURL\n\n          @init_complete.connect\n          def init_navigation(app):\n              app.auth_manager.add_navigation_menu(\n                  'main',\n                  NavItem(\n                      NavItem('Home', NavURL('public.home')),\n                      NavItem(\n                          'Nesting',\n                          NavItem('Secret1', NavURL('private.secret1')),\n                          NavItem('Secret1 Class', NavURL('private.secret1-class')),\n                      ),\n                      NavItem('Permissions On Stock Methods', NavURL('private.secret2')),\n                      NavItem('Permissions On Methods', NavURL('private.someroute')),\n                      NavItem('Permissions On Class And Method', NavURL('private.secret4')),\n                      NavItem('Permissions On NavURL',\n                           NavURL(\n                               'private.secret3', requires_permissions='permission3'\n                           )),\n                      NavItem('User Manage', NavURL('auth.user:add')),\n                  )\n              )\n   ..\n\n\n-  Templates\n\n   -  templates are provided for the auth views, as well as base crud templates\n   -  base templates are referenced from settings. The first of these defined is used:\n\n      -  `BASE_TEMPLATE`\n      -  `KEGAUTH_BASE_TEMPLATE`\n\n   - Form selects are rendered with select2 in templates extending ``keg_auth/form-base.html``.\n     ``keg_auth/select2-scripts.html`` and ``keg_auth/select2-styles.html`` can be included\n     in templates to render select2s without extending form-base. Apps can opt out of select2\n     rendering with ``KEGAUTH_USE_SELECT2`` config.\n\n-  Views\n\n   -  views may be restricted for access using the requires\\* decorators\n   -  each decorator can be used as a class decorator or on individual\n      view methods\n   -  additionally, the decorator may be used on a Blueprint to apply the requirement to all\n      routes on the blueprint\n   -  ``requires_user``\n\n      -  require a user to be authenticated before proceeding\n         (authentication only)\n      -  usage: ``@requires_user`` or ``@requires_user()`` (both usage\n         patterns are identical if no secondary authenticators are needed)\n      -  note: this is similar to ``flask_login.login_required``, but\n         can be used as a class/blueprint decorator\n      -  you may pass a custom `on_authentication_failure` callable to the decorator, else it will\n         redirect to the login page\n      -  a decorated class/blueprint may have a custom `on_authentication_failure` instance method instead\n         of passing one to the decorator\n\n   -  ``requires_permissions``\n\n      -  require a user to be conditionally authorized before proceeding\n         (authentication + authorization)\n      -  ``has_any`` and ``has_all`` helpers can be used to construct\n         complex conditions, using string permission tokens, nested\n         helpers, and callable methods\n      -  you may pass a custom `on_authorization_failure` callable to the decorator, else it will\n         respond 403 Unauthorized\n      -  a decorated class/blueprint may have a custom `on_authorization_failure` instance method instead\n         of passing one to the decorator\n      -  usage:\n\n         -  ``@requires_permissions(('token1', 'token2'))``\n         -  ``@requires_permissions(has_any('token1', 'token2'))``\n         -  ``@requires_permissions(has_all('token1', 'token2'))``\n         -  ``@requires_permissions(has_all(has_any('token1', 'token2'), 'token3'))``\n         -  ``@requires_permissions(custom_authorization_callable that takes user arg)``\n\n   -  a standard CRUD view is provided which has add, edit, delete, and list \"actions\"\n\n      - ``from keg_auth import CrudView``\n      - because the standard action routes are predefined, you can assign specific permission(s) to\n        them in the view's `permissions` dictionary, keyed by action (e.g. `permissions['add'] = 'foo'`)\n\n-  Limiting login and password reset attempts\n\n   -  Login and password reset attempts can be limited by registering an Attempt entity.\n      The Attempt entity must be a subclass of `AttemptMixin`.\n   -  Login attempts are limited by counting failed attempts. A successful login attempt will\n      reset the limit counter.\n   -  Reset attempts are limited by counting all password reset attempts.\n   -  Attempt limiting can be configured with the following options:\n\n      -  `KEGAUTH_LOGIN_ATTEMPT_LIMIT`\n      -  `KEGAUTH_LOGIN_ATTEMPT_TIMESPAN`\n      -  `KEGAUTH_LOGIN_ATTEMPT_LOCKOUT`\n      -  `KEGAUTH_RESET_ATTEMPT_LIMIT`\n      -  `KEGAUTH_RESET_ATTEMPT_TIMESPAN`\n      -  `KEGAUTH_RESET_ATTEMPT_LOCKOUT`\n\n      | Limit: maximum number of attempts within the timespan.\n      | Timespan: timespan in seconds in which the limit can be reached.\n      | Lockout: timespan in seconds until a successful attempt can be made after the limit is reached.\n   -  CLI `purge-attempts` will delete attempts for a given username. Optionally accepts `--attempt-type`\n      argument to only delete attempts of a certain type.\n\nUser Login During Testing\n-------------------------\n\nThis library provides ``keg_auth.testing.AuthTestApp`` which is a\nsub-class of ``flask_webtest.TestApp`` to make it easy to set the\nlogged-in user during testing:\n\n.. code-block:: python\n\n    from keg_auth.testing import AuthTestApp\n\n    class TestViews(object):\n\n        def setup(self):\n            ents.User.delete_cascaded()\n\n        def test_authenticated_client(self):\n            \"\"\"\n                Demonstrate logging in at the client level.  The login will apply to all requests made\n                by this client.\n            \"\"\"\n            user = ents.User.testing_create()\n            client = AuthTestApp(flask.current_app, user=user)\n            resp = client.get('/secret2', status=200)\n            assert resp.text == 'secret2'\n\n        def test_authenticated_request(self):\n            \"\"\"\n                Demonstrate logging in at the request level.  The login will only apply to one request.\n            \"\"\"\n            user = ents.User.testing_create(permissions=('permission1', 'permission2'))\n            client = AuthTestApp(flask.current_app)\n\n            resp = client.get('/secret-page', status=200, user=user)\n            assert resp.text == 'secret-page'\n\n            # User should only stick around for a single request (and will get a 302 redirect to the)\n            # login view.\n            client.get('/secret-page', status=302)\n\nA helper class is also provided to set up a client and user, given the\npermissions specified on the class definition:\n\n.. code-block:: python\n\n    from keg_auth.testing import ViewTestBase\n\n    class TestMyView(ViewTestBase):\n        permissions = 'permission1', 'permission2', ...\n\n        def test_get(self):\n            self.client.get('/foo')\n\n\nUsing Without Email Functions\n-----------------------------\n\nKeg Auth is designed out of the box to use emailed tokens to:\n\n- verify the email addresses on user records\n- provide a method of initially setting passwords without the admin setting a known password\n\nWhile this provides good security in many scenarios, there may be times when the email methods\nare not desired (for example, if an app will run in an environment where the internet is not\naccessible). Only a few changes are necessary from the examples above to achieve this:\n\n- leave `UserEmailMixin` out of the `User` model\n- do not specify a mail_manager when setting up `AuthManager`\n\n\n\nEmail/Reset Password functionality\n------------------------------------\n\n* The JWT tokens in the email / reset password emails are salted with\n    * username/email (depends on which is enabled)\n    * password hash\n    * last login utc\n    * is_active (verified/enabled combination)\n\n    This allows for tokens to become invalidate anytime of the following happens:\n        * username/email changes\n        * password hash changes\n        * a user logs in (last login utc will be updated and invalidate the token)\n        * is active (depending on the model this is calculated from is_enabled/is_verified fields)\n\n\nChangelog\n=========\n\n0.2.22 released 2020-04-16\n--------------------------\n\n- Allow rate-limiting of login and password resets (d243b75_)\n- Add more config flexibility for OIDC (39beae0_)\n\n.. _d243b75: https://github.com/level12/keg-auth/commit/d243b75\n.. _39beae0: https://github.com/level12/keg-auth/commit/39beae0\n\n\n0.2.21 released 2020-04-02\n--------------------------\n\n- Resolve fuzzy/missing translations (a78de96_)\n- Add inactivation date for users (requires migration to add a field) (0020fbd_)\n- Support latest Flask-Login (ba59925_)\n- Allow unverified users to reset their passwords (8888386_)\n- Pin keg-elements requirement to support CRUD checkboxes (e59fcc1_)\n- Include an Allow header for 405 responses (a2a3091_)\n- Support multiple LDAP targets (b895aad_)\n- Handle HEAD requests (b16a7e4_)\n- Remove six dependency (477a415_)\n\n.. _a78de96: https://github.com/level12/keg-auth/commit/a78de96\n.. _0020fbd: https://github.com/level12/keg-auth/commit/0020fbd\n.. _ba59925: https://github.com/level12/keg-auth/commit/ba59925\n.. _8888386: https://github.com/level12/keg-auth/commit/8888386\n.. _e59fcc1: https://github.com/level12/keg-auth/commit/e59fcc1\n.. _a2a3091: https://github.com/level12/keg-auth/commit/a2a3091\n.. _b895aad: https://github.com/level12/keg-auth/commit/b895aad\n.. _b16a7e4: https://github.com/level12/keg-auth/commit/b16a7e4\n.. _477a415: https://github.com/level12/keg-auth/commit/477a415\n\n\n0.2.20 released 2020-03-24\n--------------------------\n\n- OIDC and related updates (fab68f5_)\n- Add OIDC authenticator and login/logout view responders\n- Fix missing page header for Permissions view\n- Allow passing blueprint kwargs to make_blueprint\n- Easier disabling of specific auth views\n- Allow view responder flash messages to be disabled\n- Drop bulk permission controls (better templating now in keg-elements)\n\n.. _fab68f5: https://github.com/level12/keg-auth/commit/fab68f5\n\n\n0.2.19 released 2020-02-21\n--------------------------\n\n- Improve Usability of Permission Dropdown (479e985_)\n- Pin Flask Login (00ea957_)\n\n.. _479e985: https://github.com/level12/keg-auth/commit/479e985\n.. _00ea957: https://github.com/level12/keg-auth/commit/00ea957\n\n\n0.2.18 released 2020-01-10\n--------------------------\n\n- add CLI command for dev to set password (d488bc9_)\n\n.. _d488bc9: https://github.com/level12/keg-auth/commit/d488bc9\n\n\n0.2.17 released 2019-12-12\n--------------------------\n\n- ensure token is present for resending verification email (01b566f_)\n\n.. _01b566f: https://github.com/level12/keg-auth/commit/01b566f\n\n\n0.2.16 released 2019-12-02\n--------------------------\n\n- fix CRUD edit form default values for relationships (01893f9_)\n\n.. _01893f9: https://github.com/level12/keg-auth/commit/01893f9\n\n\n0.2.15 released 2019-11-27\n--------------------------\n\n- fix bundle grid setup for CRUD view (b772f01_)\n\n.. _b772f01: https://github.com/level12/keg-auth/commit/b772f01\n\n\n0.2.14 released 2019-11-21\n--------------------------\n\n- fix template issue related to select2 updates (373739b_)\n- make auth testing helpers more generic (b90ee96_)\n\n.. _373739b: https://github.com/level12/keg-auth/commit/373739b\n.. _b90ee96: https://github.com/level12/keg-auth/commit/b90ee96\n\n\n0.2.13 released 2019-11-08\n--------------------------\n\n- use select2 to render selects on the user management views (30ff332_)\n- fix breakage with keg 0.8.1 (3f5668d_)\n- adjust CI environments to use (b9b4fb4_)\n- auth test helpers use endpoints to find correct url (76a1222_)\n\n.. _30ff332: https://github.com/level12/keg-auth/commit/30ff332\n.. _3f5668d: https://github.com/level12/keg-auth/commit/3f5668d\n.. _b9b4fb4: https://github.com/level12/keg-auth/commit/b9b4fb4\n.. _76a1222: https://github.com/level12/keg-auth/commit/76a1222\n\n\n0.2.12 released 2019-10-03\n--------------------------\n\n- support decorating flask class-based views (3d8a6cb_)\n- fix LDAP authenticator for missing user case (19d184e_)\n\n.. _3d8a6cb: https://github.com/level12/keg-auth/commit/3d8a6cb\n.. _19d184e: https://github.com/level12/keg-auth/commit/19d184e\n\n\n0.2.11 released 2019-09-27\n--------------------------\n\n- fix permission sync method and test hook (a56eda4_)\n- fix FontAwesome usage on CRUD list view template (64f759a_)\n- support lazy strings and icons in navigation helpers and templates (4473571_)\n- remove flask version pin (ab47362_)\n\n.. _a56eda4: https://github.com/level12/keg-auth/commit/a56eda4\n.. _64f759a: https://github.com/level12/keg-auth/commit/64f759a\n.. _4473571: https://github.com/level12/keg-auth/commit/4473571\n.. _ab47362: https://github.com/level12/keg-auth/commit/ab47362\n\n\n0.2.10 released 2019-09-18\n--------------------------\n\n- fix testing utils mock import to prevent needing mock dependency (da197df_)\n\n.. _da197df: https://github.com/level12/keg-auth/commit/da197df\n\n\n0.2.9 released 2019-07-27\n-------------------------\n\n- Provide a hook on the CRUD base class to allow overriding the default add url generation (#74) (7eea8bb_)\n\n.. _7eea8bb: https://github.com/level12/keg-auth/commit/7eea8bb\n\n\n0.2.8 released 2019-06-17\n-------------------------\n\n- resolve bug in testing permission existence check (feccb98_)\n\n.. _feccb98: https://github.com/level12/keg-auth/commit/feccb98\n\n\n0.2.7 released 2019-06-07\n-------------------------\n\n- make custom action access control easier (63921ee_)\n- enforce test permissions are specified to the auth manager (794f320_)\n- correct the MRO order in CRUD forms and testing models (2f4c451_)\n- add get_current_user helper method (cae02a2_)\n- make grid action column link CSS classes customizable (aa1bc21_)\n- ensure CRUD view passes in desired template args (aae3dad_)\n\n.. _63921ee: https://github.com/level12/keg-auth/commit/63921ee\n.. _794f320: https://github.com/level12/keg-auth/commit/794f320\n.. _2f4c451: https://github.com/level12/keg-auth/commit/2f4c451\n.. _cae02a2: https://github.com/level12/keg-auth/commit/cae02a2\n.. _aa1bc21: https://github.com/level12/keg-auth/commit/aa1bc21\n.. _aae3dad: https://github.com/level12/keg-auth/commit/aae3dad\n\n\n0.2.6 released 2019-02-12\n-------------------------\n\n- Merge pull request #60 from level12/move-sync-perms-to-entity (3181691_)\n- update readme to remove reference to view-scoped authenticators (514c202_)\n\n.. _3181691: https://github.com/level12/keg-auth/commit/3181691\n.. _514c202: https://github.com/level12/keg-auth/commit/514c202\n\n\n0.2.5 released 2018-11-14\n-------------------------\n\n- Allow make_blueprint to accept a custom blueprint class (fe635b2_)\n- Add a link to resend verification email (f7a6191_)\n- Add optional i18n support using morphi (790d3ab_)\n- Fix intermittent test failure resulting from login timestamp (cde083b_)\n- Refactor CRUD form/grid render to extract template args (34d4a20_)\n\n.. _fe635b2: https://github.com/level12/keg-auth/commit/fe635b2\n.. _f7a6191: https://github.com/level12/keg-auth/commit/f7a6191\n.. _790d3ab: https://github.com/level12/keg-auth/commit/790d3ab\n.. _cde083b: https://github.com/level12/keg-auth/commit/cde083b\n.. _34d4a20: https://github.com/level12/keg-auth/commit/34d4a20\n\n\n0.2.4\n------------------\n\n- Show verification URL on CLI even if mail flag is off\n\n0.2.3\n------------------\n\n- Fix requires_user decorator for usage with blueprints\n\n0.2.1\n------------------\n\n- Fix nav items to cache on per user basis\n- Fix token generated in CLI having an unknown timezone applied\n\n0.2.0\n------------------\n\n- Support permissions\n- Decorate blueprints, classes, methods for user/permission requirements\n- Support request loaders for tokens\n\n0.1.0\n------------------\n\n- Initial release\n\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/level12/keg-auth", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "Keg-Auth", "package_url": "https://pypi.org/project/Keg-Auth/", "platform": "", "project_url": "https://pypi.org/project/Keg-Auth/", "project_urls": {"Homepage": "https://github.com/level12/keg-auth"}, "release_url": "https://pypi.org/project/Keg-Auth/0.2.22/", "requires_dist": ["flask-jwt-extended; extra == 'test'", "bcrypt", "commonmark", "Flask-Login (>0.4.1)", "Keg (>=0.8.1)", "KegElements (>=0.5.24)", "inflect", "passlib", "shortuuid", "webgrid", "morphi; extra == 'i18n'", "webgrid[i18n]; extra == 'i18n'", "flask-jwt-extended; extra == 'jwt'", "pyldap; extra == 'ldap'", "Flask-Mail; extra == 'mail'", "flask-oidc; extra == 'oidc'", "flake8; extra == 'test'", "flask-bootstrap; extra == 'test'", "flask-mail; extra == 'test'", "flask-oidc; extra == 'test'", "flask-webtest; extra == 'test'", "freezegun; extra == 'test'", "mock; extra == 'test'", "psycopg2-binary; extra == 'test'", "pyldap; extra == 'test'", "pyquery; extra == 'test'", "pytest; extra == 'test'", "pytest-cov; extra == 'test'", "tox; extra == 'test'", "xlsxwriter; extra == 'test'"], "requires_python": "", "summary": "Authentication plugin for Keg", "version": "0.2.22", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"keg-auths-readme\">\n<h2>Keg Auth\u2019s Readme</h2>\n<a href=\"https://circleci.com/gh/level12/keg-auth\" rel=\"nofollow\"><img alt=\"https://circleci.com/gh/level12/keg-auth.svg?&amp;style=shield&amp;circle-token=b90c5336d179f28df73d404a26924bc373840257\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d8d20ebd674e5b0cf88dbb0febf41dc66cc17bab/68747470733a2f2f636972636c6563692e636f6d2f67682f6c6576656c31322f6b65672d617574682e7376673f267374796c653d736869656c6426636972636c652d746f6b656e3d62393063353333366431373966323864663733643430346132363932346263333733383430323537\"></a>\n<a href=\"https://codecov.io/github/level12/keg-auth?branch=master\" rel=\"nofollow\"><img alt=\"https://codecov.io/github/level12/keg-auth/coverage.svg?branch=master&amp;token=hl15MQRPeF\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/462034b85959809789cc4c12940df52494c9df02/68747470733a2f2f636f6465636f762e696f2f6769746875622f6c6576656c31322f6b65672d617574682f636f7665726167652e7376673f6272616e63683d6d617374657226746f6b656e3d686c31354d5152506546\"></a>\n<div id=\"demo\">\n<h3>Demo</h3>\n<p>Typical usage is demonstrated in\n<a href=\"https://github.com/level12/keg-app-cookiecutter\" rel=\"nofollow\">https://github.com/level12/keg-app-cookiecutter</a></p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<ul>\n<li><p>Installation</p>\n<ul>\n<li>bare functionality: <cite>pip install keg-auth</cite></li>\n<li>mail (i.e. with a mail manager configured, see below): <cite>pip install keg-auth[mail]</cite></li>\n<li>JWT (for using JWT tokens as authenticators): <cite>pip install keg-auth[jwt]</cite></li>\n<li>LDAP (for using LDAP target for authentication): <cite>pip install keg-auth[ldap]</cite></li>\n</ul>\n</li>\n<li><p>Configuration</p>\n<ul>\n<li><cite>SERVER_NAME = \u2018somehost\u2019</cite>: required for Keg Auth when generating URL in create-user CLI command\n-  include a port number if needed (e.g. <cite>localhost:5000</cite>)</li>\n<li><dl>\n<dt><cite>PREFERRED_URL_SCHEME = \u2018https\u2019</cite>: this is important so that generated auth related URLS are</dt>\n<dd>secure.  You could have an SSL redirect but by the time that would fire, the key would\nhave already been sent in the URL.</dd>\n</dl>\n</li>\n<li><cite>KEGAUTH_TOKEN_EXPIRE_MINS</cite>: integer, defaults to 240 minutes (4 hours)\n-  if mail functions are enabled and tokens in the model, affects the time a verification token remains valid</li>\n<li><cite>KEGAUTH_CLI_USER_ARGS</cite>: list of strings, defaults to <cite>[\u2018email\u2019]</cite>\n-  names arguments to be accepted by CLI user commands and passed to the model</li>\n<li>Email settings<ul>\n<li><cite>KEGAUTH_EMAIL_SITE_NAME = \u2018Keg Application\u2019</cite>: used in email body if mail is enabled</li>\n<li><cite>KEGAUTH_EMAIL_SITE_ABBR = \u2018Keg App\u2019</cite>: used in email subject if mail is enabled</li>\n<li>Example message:<ul>\n<li>Subject: [Keg App] Password Reset Link</li>\n<li>Body: Somebody asked to reset your password on Keg Application. If this was not you\u2026</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Extensions</p>\n<ul>\n<li>set up an auth manager (in app setup or extensions)</li>\n<li>the entity registry hooks up user, group, bundle, and permission entities. You will need to\ncreate a registry to associate with the auth manager, and register your entities from the\nmodel (see model notes)</li>\n<li>note that the mail_manager is optional. If a mail_manager is not given, no mail will be sent</li>\n<li>permissions may be passed as simple string tokens, or as tuples of <cite>(token, description)</cite></li>\n</ul>\n<blockquote>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">flask_mail</span> <span class=\"kn\">import</span> <span class=\"n\">Mail</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keg_auth</span> <span class=\"kn\">import</span> <span class=\"n\">AuthManager</span><span class=\"p\">,</span> <span class=\"n\">AuthMailManager</span><span class=\"p\">,</span> <span class=\"n\">AuthEntityRegistry</span>\n\n<span class=\"n\">mail_ext</span> <span class=\"o\">=</span> <span class=\"n\">Mail</span><span class=\"p\">()</span>\n<span class=\"n\">auth_mail_manager</span> <span class=\"o\">=</span> <span class=\"n\">AuthMailManager</span><span class=\"p\">(</span><span class=\"n\">mail_ext</span><span class=\"p\">)</span>\n<span class=\"n\">auth_entity_registry</span> <span class=\"o\">=</span> <span class=\"n\">AuthEntityRegistry</span><span class=\"p\">()</span>\n\n<span class=\"n\">_endpoints</span> <span class=\"o\">=</span> <span class=\"p\">{</span><span class=\"s1\">'after-login'</span><span class=\"p\">:</span> <span class=\"s1\">'public.home'</span><span class=\"p\">}</span>\n<span class=\"n\">permissions</span> <span class=\"o\">=</span> <span class=\"p\">(</span>\n    <span class=\"p\">(</span><span class=\"s1\">'auth-manage'</span><span class=\"p\">,</span> <span class=\"s1\">'manage users, groups, bundles, and view permissions'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'app-permission1'</span><span class=\"p\">,</span> <span class=\"s1\">'access view Foo'</span><span class=\"p\">),</span>\n    <span class=\"p\">(</span><span class=\"s1\">'app-permission2'</span><span class=\"p\">,</span> <span class=\"s1\">'access the Bar area'</span><span class=\"p\">),</span>\n<span class=\"p\">)</span>\n\n<span class=\"n\">auth_manager</span> <span class=\"o\">=</span> <span class=\"n\">AuthManager</span><span class=\"p\">(</span><span class=\"n\">mail_manager</span><span class=\"o\">=</span><span class=\"n\">auth_mail_manager</span><span class=\"p\">,</span> <span class=\"n\">endpoints</span><span class=\"o\">=</span><span class=\"n\">_endpoints</span><span class=\"p\">,</span>\n                           <span class=\"n\">entity_registry</span><span class=\"o\">=</span><span class=\"n\">auth_entity_registry</span><span class=\"p\">,</span> <span class=\"n\">permissions</span><span class=\"o\">=</span><span class=\"n\">permissions</span><span class=\"p\">)</span>\n<span class=\"n\">auth_manager</span><span class=\"o\">.</span><span class=\"n\">init_app</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n</pre>\n</blockquote>\n</li>\n<li><p>Login Authenticators control validation of users</p>\n<ul>\n<li>includes logic for verifying a user from a login route, and other view-layer operations\nneeded for user workflow (e.g. verifying email, password resets, etc.)</li>\n<li>authenticator may be specified on the auth_manager:<ul>\n<li>\u2018keg\u2019 is the default primary authenticator, and uses username/password</li>\n<li><tt>AuthManager(mail_ext, login_authenticator=LdapAuthenticator)</tt></li>\n</ul>\n</li>\n<li>LDAP authentication<ul>\n<li><tt>from keg_auth import LdapAuthenticator</tt></li>\n<li>uses pyldap, which needs to be installed: <tt>pip install <span class=\"pre\">keg-auth[ldap]</span></tt></li>\n<li>additional config:<ul>\n<li>KEGAUTH_LDAP_TEST_MODE: when True, bypasses LDAP calls. Defaults to False</li>\n<li>KEGAUTH_LDAP_SERVER_URL: target LDAP server or list of servers to use for queries.\nIf a list is given, authentication is attempted on each server in the given order\nuntil a successful query is made.</li>\n<li>KEGAUTH_LDAP_DN_FORMAT: format-able string to set up for the query\n-  ex. <tt><span class=\"pre\">uid={},dc=example,dc=org</span></tt></li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Request Loaders run when a user is not in session, and identifying data is in the request</p>\n<ul>\n<li><tt>AuthManager(mail_ext, request_loaders=JwtRequestLoader)</tt></li>\n<li>token authenticators, like JwtRequestLoader, have a <cite>create_access_token</cite> method\n-  <tt>token = <span class=\"pre\">auth_manager.get_request_loader('jwt').create_access_token(user)</span></tt></li>\n<li>JWT:\n-  <tt>from keg_auth import JwtRequestLoader</tt>\n-  uses flask-jwt-extended, which needs to be installed: <tt>pip install <span class=\"pre\">keg-auth[jwt]</span></tt></li>\n</ul>\n</li>\n<li><p>Blueprints</p>\n<ul>\n<li>include an auth blueprint along with your app\u2019s blueprints, which includes the login views\nand user/group/bundle management. Requires AuthManager instance:</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keg_auth</span> <span class=\"kn\">import</span> <span class=\"n\">make_blueprint</span>\n<span class=\"kn\">from</span> <span class=\"nn\">my_app.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">auth_manager</span>\n<span class=\"n\">auth_bp</span> <span class=\"o\">=</span> <span class=\"n\">make_blueprint</span><span class=\"p\">(</span><span class=\"vm\">__name__</span><span class=\"p\">,</span> <span class=\"n\">auth_manager</span><span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>CLI is rudimentary, with just one create-user command in the auth group. You can extend the\ngroup by using the cli_group attribute on the app\u2019s auth_manager, but you need access to the\napp during startup to do that. You can use an event signal to handle this - just be sure\nyour app\u2019s <cite>visit_modules</cite> has the location of the event.</p>\n<pre><span class=\"c1\"># in app definition</span>\n<span class=\"n\">visit_modules</span> <span class=\"o\">=</span> <span class=\"p\">[</span><span class=\"s1\">'.events'</span><span class=\"p\">]</span>\n\n\n<span class=\"c1\"># in events module</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keg.signals</span> <span class=\"kn\">import</span> <span class=\"n\">init_complete</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">keg_auth_ta.cli</span> <span class=\"kn\">import</span> <span class=\"n\">auth_cli_extensions</span>\n\n\n<span class=\"nd\">@init_complete</span><span class=\"o\">.</span><span class=\"n\">connect</span>\n<span class=\"k\">def</span> <span class=\"nf\">init_app_cli</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"n\">auth_cli_extensions</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">)</span>\n\n\n<span class=\"c1\"># in cli</span>\n<span class=\"k\">def</span> <span class=\"nf\">auth_cli_extensions</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"nd\">@app</span><span class=\"o\">.</span><span class=\"n\">auth_manager</span><span class=\"o\">.</span><span class=\"n\">cli_group</span><span class=\"o\">.</span><span class=\"n\">command</span><span class=\"p\">(</span><span class=\"s1\">'command-extension'</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">command_extension</span><span class=\"p\">():</span>\n        <span class=\"k\">pass</span>\n</pre>\n</li>\n<li><p>CLI create-user command, by default, has one required argument (email). If you wish to have\nadditional arguments, put the list of arg names in <cite>KEGAUTH_CLI_USER_ARGS</cite> config</p>\n</li>\n<li><p>CLI set-password command allows you to set the password for a given username.</p>\n</li>\n<li><p>Model</p>\n<ul>\n<li>create entities using the existing mixins, and register them with\nkeg_auth</li>\n<li>note: the User model assumes that the entity mixed with UserMixin\nwill have a PK id</li>\n<li>email address and token verification by email are in <cite>UserEmailMixin</cite>\n- i.e. if your app will not use email token verification for passwords, leave that mixin out</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keg.db</span> <span class=\"kn\">import</span> <span class=\"n\">db</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keg_elements.db.mixins</span> <span class=\"kn\">import</span> <span class=\"n\">DefaultColsMixin</span><span class=\"p\">,</span> <span class=\"n\">MethodsMixin</span>\n<span class=\"kn\">from</span> <span class=\"nn\">keg_auth</span> <span class=\"kn\">import</span> <span class=\"n\">UserMixin</span><span class=\"p\">,</span> <span class=\"n\">UserEmailMixin</span><span class=\"p\">,</span> <span class=\"n\">PermissionMixin</span><span class=\"p\">,</span> <span class=\"n\">BundleMixin</span><span class=\"p\">,</span> <span class=\"n\">GroupMixin</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">my_app.extensions</span> <span class=\"kn\">import</span> <span class=\"n\">auth_entity_registry</span>\n\n\n<span class=\"k\">class</span> <span class=\"nc\">EntityMixin</span><span class=\"p\">(</span><span class=\"n\">DefaultColsMixin</span><span class=\"p\">,</span> <span class=\"n\">MethodsMixin</span><span class=\"p\">):</span>\n    <span class=\"k\">pass</span>\n\n\n<span class=\"nd\">@auth_entity_registry</span><span class=\"o\">.</span><span class=\"n\">register_user</span>\n<span class=\"k\">class</span> <span class=\"nc\">User</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">UserEmailMixin</span><span class=\"p\">,</span> <span class=\"n\">UserMixin</span><span class=\"p\">,</span> <span class=\"n\">EntityMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'users'</span>\n\n\n<span class=\"nd\">@auth_entity_registry</span><span class=\"o\">.</span><span class=\"n\">register_permission</span>\n<span class=\"k\">class</span> <span class=\"nc\">Permission</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">PermissionMixin</span><span class=\"p\">,</span> <span class=\"n\">EntityMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'permissions'</span>\n\n    <span class=\"k\">def</span> <span class=\"fm\">__repr__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"k\">return</span> <span class=\"s1\">'&lt;Permission id=</span><span class=\"si\">{}</span><span class=\"s1\"> token=</span><span class=\"si\">{}</span><span class=\"s1\">&gt;'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">id</span><span class=\"p\">,</span> <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">token</span><span class=\"p\">)</span>\n\n\n<span class=\"nd\">@auth_entity_registry</span><span class=\"o\">.</span><span class=\"n\">register_bundle</span>\n<span class=\"k\">class</span> <span class=\"nc\">Bundle</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">BundleMixin</span><span class=\"p\">,</span> <span class=\"n\">EntityMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'bundles'</span>\n\n\n<span class=\"nd\">@auth_entity_registry</span><span class=\"o\">.</span><span class=\"n\">register_group</span>\n<span class=\"k\">class</span> <span class=\"nc\">Group</span><span class=\"p\">(</span><span class=\"n\">db</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">,</span> <span class=\"n\">GroupMixin</span><span class=\"p\">,</span> <span class=\"n\">EntityMixin</span><span class=\"p\">):</span>\n    <span class=\"n\">__tablename__</span> <span class=\"o\">=</span> <span class=\"s1\">'groups'</span>\n</pre>\n</li>\n<li><p>Navigation Helpers</p>\n<ul>\n<li><p>Keg-Auth provides navigation helpers to set up a menu tree, for which nodes on the tree are\nrestricted according to the authentication/authorization requirements of the target endpoint</p>\n<ul>\n<li>Note: requirements are any class-level permission requirements. If authorization is defined\nby an instance-level <tt>check_auth</tt> method, that will not be used by the navigation helpers</li>\n</ul>\n</li>\n<li><p>Usage involves setting up a menu structure with NavItem/NavURL objects. Note that permissions on\na route may be overridden for navigation purposes</p>\n</li>\n<li><p>Menus may be tracked on the auth manager, which will reset their cached access on\nlogin/logout</p>\n</li>\n<li><p><tt>keg_auth/navigation.html</tt> template has a helper <tt>render_menu</tt> to render a given menu as a ul</p>\n<ul>\n<li><tt>{% import \"keg_auth/navigation.html\" as navigation %}</tt></li>\n<li><tt><span class=\"pre\">render_menu(auth_manager.menus['main'])</span></tt></li>\n<li><tt><span class=\"pre\">render_menu(auth_manager.menus['main'],</span> expand_to_current=True)</tt></li>\n</ul>\n<blockquote>\n<ul>\n<li>Automatically expand/collapse menu groups for the currently-viewed item. Useful for vertical menus.</li>\n</ul>\n</blockquote>\n</li>\n<li><p>Collapsible groups can be added to navigation menus by nesting NavItems in the menu. The group item\nwill get a <tt>nav_group</tt> attribute, which can be referred to in CSS.</p>\n<ul>\n<li><tt><span class=\"pre\">NavItem('Auth</span> Menu', <span class=\"pre\">NavItem(...))</span></tt> will have a <tt>nav_group</tt> of <tt><span class=\"pre\">#navgroup-auth-menu</span></tt></li>\n<li><tt><span class=\"pre\">NavItem('Auth</span> Menu', <span class=\"pre\">NavItem(...),</span> <span class=\"pre\">nav_group='foo')</span></tt> will have a <tt>nav_group</tt> of <tt><span class=\"pre\">#navgroup-foo</span></tt></li>\n</ul>\n</li>\n<li><p>NavItems can specify an icon to display in the menu item by passing an <tt>icon_class</tt> string to the\nNavItem constructor. e.g., <tt><span class=\"pre\">NavItem('Title',</span> <span class=\"pre\">NavURL(...),</span> <span class=\"pre\">icon_class='fas</span> <span class=\"pre\">fa-shopping-cart')</span></tt>.</p>\n</li>\n<li><p>Example:</p>\n</li>\n</ul>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keg.signals</span> <span class=\"kn\">import</span> <span class=\"n\">init_complete</span>\n\n<span class=\"kn\">from</span> <span class=\"nn\">keg_auth</span> <span class=\"kn\">import</span> <span class=\"n\">NavItem</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span>\n\n<span class=\"nd\">@init_complete</span><span class=\"o\">.</span><span class=\"n\">connect</span>\n<span class=\"k\">def</span> <span class=\"nf\">init_navigation</span><span class=\"p\">(</span><span class=\"n\">app</span><span class=\"p\">):</span>\n    <span class=\"n\">app</span><span class=\"o\">.</span><span class=\"n\">auth_manager</span><span class=\"o\">.</span><span class=\"n\">add_navigation_menu</span><span class=\"p\">(</span>\n        <span class=\"s1\">'main'</span><span class=\"p\">,</span>\n        <span class=\"n\">NavItem</span><span class=\"p\">(</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Home'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'public.home'</span><span class=\"p\">)),</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span>\n                <span class=\"s1\">'Nesting'</span><span class=\"p\">,</span>\n                <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Secret1'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'private.secret1'</span><span class=\"p\">)),</span>\n                <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Secret1 Class'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'private.secret1-class'</span><span class=\"p\">)),</span>\n            <span class=\"p\">),</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Permissions On Stock Methods'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'private.secret2'</span><span class=\"p\">)),</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Permissions On Methods'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'private.someroute'</span><span class=\"p\">)),</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Permissions On Class And Method'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'private.secret4'</span><span class=\"p\">)),</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'Permissions On NavURL'</span><span class=\"p\">,</span>\n                 <span class=\"n\">NavURL</span><span class=\"p\">(</span>\n                     <span class=\"s1\">'private.secret3'</span><span class=\"p\">,</span> <span class=\"n\">requires_permissions</span><span class=\"o\">=</span><span class=\"s1\">'permission3'</span>\n                 <span class=\"p\">)),</span>\n            <span class=\"n\">NavItem</span><span class=\"p\">(</span><span class=\"s1\">'User Manage'</span><span class=\"p\">,</span> <span class=\"n\">NavURL</span><span class=\"p\">(</span><span class=\"s1\">'auth.user:add'</span><span class=\"p\">)),</span>\n        <span class=\"p\">)</span>\n    <span class=\"p\">)</span>\n</pre>\n</li>\n<li><p>Templates</p>\n<ul>\n<li>templates are provided for the auth views, as well as base crud templates</li>\n<li>base templates are referenced from settings. The first of these defined is used:<ul>\n<li><cite>BASE_TEMPLATE</cite></li>\n<li><cite>KEGAUTH_BASE_TEMPLATE</cite></li>\n</ul>\n</li>\n<li>Form selects are rendered with select2 in templates extending <tt><span class=\"pre\">keg_auth/form-base.html</span></tt>.\n<tt><span class=\"pre\">keg_auth/select2-scripts.html</span></tt> and <tt><span class=\"pre\">keg_auth/select2-styles.html</span></tt> can be included\nin templates to render select2s without extending form-base. Apps can opt out of select2\nrendering with <tt>KEGAUTH_USE_SELECT2</tt> config.</li>\n</ul>\n</li>\n<li><p>Views</p>\n<ul>\n<li>views may be restricted for access using the requires* decorators</li>\n<li>each decorator can be used as a class decorator or on individual\nview methods</li>\n<li>additionally, the decorator may be used on a Blueprint to apply the requirement to all\nroutes on the blueprint</li>\n<li><tt>requires_user</tt><ul>\n<li>require a user to be authenticated before proceeding\n(authentication only)</li>\n<li>usage: <tt>@requires_user</tt> or <tt>@requires_user()</tt> (both usage\npatterns are identical if no secondary authenticators are needed)</li>\n<li>note: this is similar to <tt>flask_login.login_required</tt>, but\ncan be used as a class/blueprint decorator</li>\n<li>you may pass a custom <cite>on_authentication_failure</cite> callable to the decorator, else it will\nredirect to the login page</li>\n<li>a decorated class/blueprint may have a custom <cite>on_authentication_failure</cite> instance method instead\nof passing one to the decorator</li>\n</ul>\n</li>\n<li><tt>requires_permissions</tt><ul>\n<li>require a user to be conditionally authorized before proceeding\n(authentication + authorization)</li>\n<li><tt>has_any</tt> and <tt>has_all</tt> helpers can be used to construct\ncomplex conditions, using string permission tokens, nested\nhelpers, and callable methods</li>\n<li>you may pass a custom <cite>on_authorization_failure</cite> callable to the decorator, else it will\nrespond 403 Unauthorized</li>\n<li>a decorated class/blueprint may have a custom <cite>on_authorization_failure</cite> instance method instead\nof passing one to the decorator</li>\n<li>usage:<ul>\n<li><tt><span class=\"pre\">@requires_permissions(('token1',</span> <span class=\"pre\">'token2'))</span></tt></li>\n<li><tt><span class=\"pre\">@requires_permissions(has_any('token1',</span> <span class=\"pre\">'token2'))</span></tt></li>\n<li><tt><span class=\"pre\">@requires_permissions(has_all('token1',</span> <span class=\"pre\">'token2'))</span></tt></li>\n<li><tt><span class=\"pre\">@requires_permissions(has_all(has_any('token1',</span> <span class=\"pre\">'token2'),</span> <span class=\"pre\">'token3'))</span></tt></li>\n<li><tt>@requires_permissions(custom_authorization_callable that takes user arg)</tt></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>a standard CRUD view is provided which has add, edit, delete, and list \u201cactions\u201d<ul>\n<li><tt>from keg_auth import CrudView</tt></li>\n<li>because the standard action routes are predefined, you can assign specific permission(s) to\nthem in the view\u2019s <cite>permissions</cite> dictionary, keyed by action (e.g. <cite>permissions[\u2018add\u2019] = \u2018foo\u2019</cite>)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li><p>Limiting login and password reset attempts</p>\n<ul>\n<li><p>Login and password reset attempts can be limited by registering an Attempt entity.\nThe Attempt entity must be a subclass of <cite>AttemptMixin</cite>.</p>\n</li>\n<li><p>Login attempts are limited by counting failed attempts. A successful login attempt will\nreset the limit counter.</p>\n</li>\n<li><p>Reset attempts are limited by counting all password reset attempts.</p>\n</li>\n<li><p>Attempt limiting can be configured with the following options:</p>\n<ul>\n<li><cite>KEGAUTH_LOGIN_ATTEMPT_LIMIT</cite></li>\n<li><cite>KEGAUTH_LOGIN_ATTEMPT_TIMESPAN</cite></li>\n<li><cite>KEGAUTH_LOGIN_ATTEMPT_LOCKOUT</cite></li>\n<li><cite>KEGAUTH_RESET_ATTEMPT_LIMIT</cite></li>\n<li><cite>KEGAUTH_RESET_ATTEMPT_TIMESPAN</cite></li>\n<li><cite>KEGAUTH_RESET_ATTEMPT_LOCKOUT</cite></li>\n</ul>\n<div>\n<div>Limit: maximum number of attempts within the timespan.</div>\n<div>Timespan: timespan in seconds in which the limit can be reached.</div>\n<div>Lockout: timespan in seconds until a successful attempt can be made after the limit is reached.</div>\n</div>\n</li>\n<li><p>CLI <cite>purge-attempts</cite> will delete attempts for a given username. Optionally accepts <cite>\u2013attempt-type</cite>\nargument to only delete attempts of a certain type.</p>\n</li>\n</ul>\n</li>\n</ul>\n</div>\n<div id=\"user-login-during-testing\">\n<h3>User Login During Testing</h3>\n<p>This library provides <tt>keg_auth.testing.AuthTestApp</tt> which is a\nsub-class of <tt>flask_webtest.TestApp</tt> to make it easy to set the\nlogged-in user during testing:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keg_auth.testing</span> <span class=\"kn\">import</span> <span class=\"n\">AuthTestApp</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestViews</span><span class=\"p\">(</span><span class=\"nb\">object</span><span class=\"p\">):</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">setup</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"n\">ents</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">delete_cascaded</span><span class=\"p\">()</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_authenticated_client</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n            Demonstrate logging in at the client level.  The login will apply to all requests made\n            by this client.\n        \"\"\"</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">ents</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">testing_create</span><span class=\"p\">()</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">AuthTestApp</span><span class=\"p\">(</span><span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">current_app</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/secret2'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">==</span> <span class=\"s1\">'secret2'</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_authenticated_request</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"sd\">\"\"\"\n            Demonstrate logging in at the request level.  The login will only apply to one request.\n        \"\"\"</span>\n        <span class=\"n\">user</span> <span class=\"o\">=</span> <span class=\"n\">ents</span><span class=\"o\">.</span><span class=\"n\">User</span><span class=\"o\">.</span><span class=\"n\">testing_create</span><span class=\"p\">(</span><span class=\"n\">permissions</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"s1\">'permission1'</span><span class=\"p\">,</span> <span class=\"s1\">'permission2'</span><span class=\"p\">))</span>\n        <span class=\"n\">client</span> <span class=\"o\">=</span> <span class=\"n\">AuthTestApp</span><span class=\"p\">(</span><span class=\"n\">flask</span><span class=\"o\">.</span><span class=\"n\">current_app</span><span class=\"p\">)</span>\n\n        <span class=\"n\">resp</span> <span class=\"o\">=</span> <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/secret-page'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">200</span><span class=\"p\">,</span> <span class=\"n\">user</span><span class=\"o\">=</span><span class=\"n\">user</span><span class=\"p\">)</span>\n        <span class=\"k\">assert</span> <span class=\"n\">resp</span><span class=\"o\">.</span><span class=\"n\">text</span> <span class=\"o\">==</span> <span class=\"s1\">'secret-page'</span>\n\n        <span class=\"c1\"># User should only stick around for a single request (and will get a 302 redirect to the)</span>\n        <span class=\"c1\"># login view.</span>\n        <span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/secret-page'</span><span class=\"p\">,</span> <span class=\"n\">status</span><span class=\"o\">=</span><span class=\"mi\">302</span><span class=\"p\">)</span>\n</pre>\n<p>A helper class is also provided to set up a client and user, given the\npermissions specified on the class definition:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">keg_auth.testing</span> <span class=\"kn\">import</span> <span class=\"n\">ViewTestBase</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">TestMyView</span><span class=\"p\">(</span><span class=\"n\">ViewTestBase</span><span class=\"p\">):</span>\n    <span class=\"n\">permissions</span> <span class=\"o\">=</span> <span class=\"s1\">'permission1'</span><span class=\"p\">,</span> <span class=\"s1\">'permission2'</span><span class=\"p\">,</span> <span class=\"o\">...</span>\n\n    <span class=\"k\">def</span> <span class=\"nf\">test_get</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"bp\">self</span><span class=\"o\">.</span><span class=\"n\">client</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"s1\">'/foo'</span><span class=\"p\">)</span>\n</pre>\n</div>\n<div id=\"using-without-email-functions\">\n<h3>Using Without Email Functions</h3>\n<p>Keg Auth is designed out of the box to use emailed tokens to:</p>\n<ul>\n<li>verify the email addresses on user records</li>\n<li>provide a method of initially setting passwords without the admin setting a known password</li>\n</ul>\n<p>While this provides good security in many scenarios, there may be times when the email methods\nare not desired (for example, if an app will run in an environment where the internet is not\naccessible). Only a few changes are necessary from the examples above to achieve this:</p>\n<ul>\n<li>leave <cite>UserEmailMixin</cite> out of the <cite>User</cite> model</li>\n<li>do not specify a mail_manager when setting up <cite>AuthManager</cite></li>\n</ul>\n</div>\n<div id=\"email-reset-password-functionality\">\n<h3>Email/Reset Password functionality</h3>\n<ul>\n<li><dl>\n<dt>The JWT tokens in the email / reset password emails are salted with</dt>\n<dd><ul>\n<li>username/email (depends on which is enabled)</li>\n<li>password hash</li>\n<li>last login utc</li>\n<li>is_active (verified/enabled combination)</li>\n</ul>\n<dl>\n<dt>This allows for tokens to become invalidate anytime of the following happens:</dt>\n<dd><ul>\n<li>username/email changes</li>\n<li>password hash changes</li>\n<li>a user logs in (last login utc will be updated and invalidate the token)</li>\n<li>is active (depending on the model this is calculated from is_enabled/is_verified fields)</li>\n</ul>\n</dd>\n</dl>\n</dd>\n</dl>\n</li>\n</ul>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"released-2020-04-16\">\n<h3>0.2.22 released 2020-04-16</h3>\n<ul>\n<li>Allow rate-limiting of login and password resets (<a href=\"https://github.com/level12/keg-auth/commit/d243b75\" rel=\"nofollow\">d243b75</a>)</li>\n<li>Add more config flexibility for OIDC (<a href=\"https://github.com/level12/keg-auth/commit/39beae0\" rel=\"nofollow\">39beae0</a>)</li>\n</ul>\n</div>\n<div id=\"released-2020-04-02\">\n<h3>0.2.21 released 2020-04-02</h3>\n<ul>\n<li>Resolve fuzzy/missing translations (<a href=\"https://github.com/level12/keg-auth/commit/a78de96\" rel=\"nofollow\">a78de96</a>)</li>\n<li>Add inactivation date for users (requires migration to add a field) (<a href=\"https://github.com/level12/keg-auth/commit/0020fbd\" rel=\"nofollow\">0020fbd</a>)</li>\n<li>Support latest Flask-Login (<a href=\"https://github.com/level12/keg-auth/commit/ba59925\" rel=\"nofollow\">ba59925</a>)</li>\n<li>Allow unverified users to reset their passwords (<a href=\"https://github.com/level12/keg-auth/commit/8888386\" rel=\"nofollow\">8888386</a>)</li>\n<li>Pin keg-elements requirement to support CRUD checkboxes (<a href=\"https://github.com/level12/keg-auth/commit/e59fcc1\" rel=\"nofollow\">e59fcc1</a>)</li>\n<li>Include an Allow header for 405 responses (<a href=\"https://github.com/level12/keg-auth/commit/a2a3091\" rel=\"nofollow\">a2a3091</a>)</li>\n<li>Support multiple LDAP targets (<a href=\"https://github.com/level12/keg-auth/commit/b895aad\" rel=\"nofollow\">b895aad</a>)</li>\n<li>Handle HEAD requests (<a href=\"https://github.com/level12/keg-auth/commit/b16a7e4\" rel=\"nofollow\">b16a7e4</a>)</li>\n<li>Remove six dependency (<a href=\"https://github.com/level12/keg-auth/commit/477a415\" rel=\"nofollow\">477a415</a>)</li>\n</ul>\n</div>\n<div id=\"released-2020-03-24\">\n<h3>0.2.20 released 2020-03-24</h3>\n<ul>\n<li>OIDC and related updates (<a href=\"https://github.com/level12/keg-auth/commit/fab68f5\" rel=\"nofollow\">fab68f5</a>)</li>\n<li>Add OIDC authenticator and login/logout view responders</li>\n<li>Fix missing page header for Permissions view</li>\n<li>Allow passing blueprint kwargs to make_blueprint</li>\n<li>Easier disabling of specific auth views</li>\n<li>Allow view responder flash messages to be disabled</li>\n<li>Drop bulk permission controls (better templating now in keg-elements)</li>\n</ul>\n</div>\n<div id=\"released-2020-02-21\">\n<h3>0.2.19 released 2020-02-21</h3>\n<ul>\n<li>Improve Usability of Permission Dropdown (<a href=\"https://github.com/level12/keg-auth/commit/479e985\" rel=\"nofollow\">479e985</a>)</li>\n<li>Pin Flask Login (<a href=\"https://github.com/level12/keg-auth/commit/00ea957\" rel=\"nofollow\">00ea957</a>)</li>\n</ul>\n</div>\n<div id=\"released-2020-01-10\">\n<h3>0.2.18 released 2020-01-10</h3>\n<ul>\n<li>add CLI command for dev to set password (<a href=\"https://github.com/level12/keg-auth/commit/d488bc9\" rel=\"nofollow\">d488bc9</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-12-12\">\n<h3>0.2.17 released 2019-12-12</h3>\n<ul>\n<li>ensure token is present for resending verification email (<a href=\"https://github.com/level12/keg-auth/commit/01b566f\" rel=\"nofollow\">01b566f</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-12-02\">\n<h3>0.2.16 released 2019-12-02</h3>\n<ul>\n<li>fix CRUD edit form default values for relationships (<a href=\"https://github.com/level12/keg-auth/commit/01893f9\" rel=\"nofollow\">01893f9</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-11-27\">\n<h3>0.2.15 released 2019-11-27</h3>\n<ul>\n<li>fix bundle grid setup for CRUD view (<a href=\"https://github.com/level12/keg-auth/commit/b772f01\" rel=\"nofollow\">b772f01</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-11-21\">\n<h3>0.2.14 released 2019-11-21</h3>\n<ul>\n<li>fix template issue related to select2 updates (<a href=\"https://github.com/level12/keg-auth/commit/373739b\" rel=\"nofollow\">373739b</a>)</li>\n<li>make auth testing helpers more generic (<a href=\"https://github.com/level12/keg-auth/commit/b90ee96\" rel=\"nofollow\">b90ee96</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-11-08\">\n<h3>0.2.13 released 2019-11-08</h3>\n<ul>\n<li>use select2 to render selects on the user management views (<a href=\"https://github.com/level12/keg-auth/commit/30ff332\" rel=\"nofollow\">30ff332</a>)</li>\n<li>fix breakage with keg 0.8.1 (<a href=\"https://github.com/level12/keg-auth/commit/3f5668d\" rel=\"nofollow\">3f5668d</a>)</li>\n<li>adjust CI environments to use (<a href=\"https://github.com/level12/keg-auth/commit/b9b4fb4\" rel=\"nofollow\">b9b4fb4</a>)</li>\n<li>auth test helpers use endpoints to find correct url (<a href=\"https://github.com/level12/keg-auth/commit/76a1222\" rel=\"nofollow\">76a1222</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-10-03\">\n<h3>0.2.12 released 2019-10-03</h3>\n<ul>\n<li>support decorating flask class-based views (<a href=\"https://github.com/level12/keg-auth/commit/3d8a6cb\" rel=\"nofollow\">3d8a6cb</a>)</li>\n<li>fix LDAP authenticator for missing user case (<a href=\"https://github.com/level12/keg-auth/commit/19d184e\" rel=\"nofollow\">19d184e</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-09-27\">\n<h3>0.2.11 released 2019-09-27</h3>\n<ul>\n<li>fix permission sync method and test hook (<a href=\"https://github.com/level12/keg-auth/commit/a56eda4\" rel=\"nofollow\">a56eda4</a>)</li>\n<li>fix FontAwesome usage on CRUD list view template (<a href=\"https://github.com/level12/keg-auth/commit/64f759a\" rel=\"nofollow\">64f759a</a>)</li>\n<li>support lazy strings and icons in navigation helpers and templates (<a href=\"https://github.com/level12/keg-auth/commit/4473571\" rel=\"nofollow\">4473571</a>)</li>\n<li>remove flask version pin (<a href=\"https://github.com/level12/keg-auth/commit/ab47362\" rel=\"nofollow\">ab47362</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-09-18\">\n<h3>0.2.10 released 2019-09-18</h3>\n<ul>\n<li>fix testing utils mock import to prevent needing mock dependency (<a href=\"https://github.com/level12/keg-auth/commit/da197df\" rel=\"nofollow\">da197df</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-07-27\">\n<h3>0.2.9 released 2019-07-27</h3>\n<ul>\n<li>Provide a hook on the CRUD base class to allow overriding the default add url generation (#74) (<a href=\"https://github.com/level12/keg-auth/commit/7eea8bb\" rel=\"nofollow\">7eea8bb</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-06-17\">\n<h3>0.2.8 released 2019-06-17</h3>\n<ul>\n<li>resolve bug in testing permission existence check (<a href=\"https://github.com/level12/keg-auth/commit/feccb98\" rel=\"nofollow\">feccb98</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-06-07\">\n<h3>0.2.7 released 2019-06-07</h3>\n<ul>\n<li>make custom action access control easier (<a href=\"https://github.com/level12/keg-auth/commit/63921ee\" rel=\"nofollow\">63921ee</a>)</li>\n<li>enforce test permissions are specified to the auth manager (<a href=\"https://github.com/level12/keg-auth/commit/794f320\" rel=\"nofollow\">794f320</a>)</li>\n<li>correct the MRO order in CRUD forms and testing models (<a href=\"https://github.com/level12/keg-auth/commit/2f4c451\" rel=\"nofollow\">2f4c451</a>)</li>\n<li>add get_current_user helper method (<a href=\"https://github.com/level12/keg-auth/commit/cae02a2\" rel=\"nofollow\">cae02a2</a>)</li>\n<li>make grid action column link CSS classes customizable (<a href=\"https://github.com/level12/keg-auth/commit/aa1bc21\" rel=\"nofollow\">aa1bc21</a>)</li>\n<li>ensure CRUD view passes in desired template args (<a href=\"https://github.com/level12/keg-auth/commit/aae3dad\" rel=\"nofollow\">aae3dad</a>)</li>\n</ul>\n</div>\n<div id=\"released-2019-02-12\">\n<h3>0.2.6 released 2019-02-12</h3>\n<ul>\n<li>Merge pull request #60 from level12/move-sync-perms-to-entity (<a href=\"https://github.com/level12/keg-auth/commit/3181691\" rel=\"nofollow\">3181691</a>)</li>\n<li>update readme to remove reference to view-scoped authenticators (<a href=\"https://github.com/level12/keg-auth/commit/514c202\" rel=\"nofollow\">514c202</a>)</li>\n</ul>\n</div>\n<div id=\"released-2018-11-14\">\n<h3>0.2.5 released 2018-11-14</h3>\n<ul>\n<li>Allow make_blueprint to accept a custom blueprint class (<a href=\"https://github.com/level12/keg-auth/commit/fe635b2\" rel=\"nofollow\">fe635b2</a>)</li>\n<li>Add a link to resend verification email (<a href=\"https://github.com/level12/keg-auth/commit/f7a6191\" rel=\"nofollow\">f7a6191</a>)</li>\n<li>Add optional i18n support using morphi (<a href=\"https://github.com/level12/keg-auth/commit/790d3ab\" rel=\"nofollow\">790d3ab</a>)</li>\n<li>Fix intermittent test failure resulting from login timestamp (<a href=\"https://github.com/level12/keg-auth/commit/cde083b\" rel=\"nofollow\">cde083b</a>)</li>\n<li>Refactor CRUD form/grid render to extract template args (<a href=\"https://github.com/level12/keg-auth/commit/34d4a20\" rel=\"nofollow\">34d4a20</a>)</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.2.4</h3>\n<ul>\n<li>Show verification URL on CLI even if mail flag is off</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.2.3</h3>\n<ul>\n<li>Fix requires_user decorator for usage with blueprints</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.2.1</h3>\n<ul>\n<li>Fix nav items to cache on per user basis</li>\n<li>Fix token generated in CLI having an unknown timezone applied</li>\n</ul>\n</div>\n<div id=\"id7\">\n<h3>0.2.0</h3>\n<ul>\n<li>Support permissions</li>\n<li>Decorate blueprints, classes, methods for user/permission requirements</li>\n<li>Support request loaders for tokens</li>\n</ul>\n</div>\n<div id=\"id8\">\n<h3>0.1.0</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 7035394, "releases": {"0.2.10": [{"comment_text": "", "digests": {"md5": "7030486a69cfeef992e5ab8b57b73d64", "sha256": "72a76c55db3974228e6e97997923a33d1eb22a3f3e150c4db3a0ebd2fcab7bd8"}, "downloads": -1, "filename": "Keg_Auth-0.2.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7030486a69cfeef992e5ab8b57b73d64", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86863, "upload_time": "2019-09-18T19:08:09", "upload_time_iso_8601": "2019-09-18T19:08:09.632467Z", "url": "https://files.pythonhosted.org/packages/4a/c4/ffb0cbfbc41308ba16ad2caa3c8bcbab0db38338669be15083266a26b467/Keg_Auth-0.2.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "dd7c1e6d577d92b91334e1fe23d9d9c7", "sha256": "ce0d4046bb453ed8991d3930ea36a5886787a3223cdf7fee3e93fc303d98be87"}, "downloads": -1, "filename": "Keg Auth-0.2.10.tar.gz", "has_sig": false, "md5_digest": "dd7c1e6d577d92b91334e1fe23d9d9c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78510, "upload_time": "2019-09-18T19:08:12", "upload_time_iso_8601": "2019-09-18T19:08:12.079955Z", "url": "https://files.pythonhosted.org/packages/3f/84/ed3fbca2b2764a9d47a2227d8a1515c6a41687fe00d604a3cd47bbef2efd/Keg%20Auth-0.2.10.tar.gz", "yanked": false}], "0.2.11": [{"comment_text": "", "digests": {"md5": "a167de9f1e3f7556cd0f21421f2f2fe6", "sha256": "73122ac1e2f046b5ea2c63632d3b25f627f9d77bc8c6d761a96494187c475b05"}, "downloads": -1, "filename": "Keg_Auth-0.2.11-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a167de9f1e3f7556cd0f21421f2f2fe6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 88738, "upload_time": "2019-09-27T16:28:11", "upload_time_iso_8601": "2019-09-27T16:28:11.334669Z", "url": "https://files.pythonhosted.org/packages/bf/c1/c594cc80e3e263d56043c5bae463812222aba0ddde2d56afcf09e624bfa3/Keg_Auth-0.2.11-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d56980be206d5fab43620acc27a57e9c", "sha256": "890f564717696d622ff88653730928130d1ad78dbe8d239ff66bfcdae5d6c81c"}, "downloads": -1, "filename": "Keg Auth-0.2.11.tar.gz", "has_sig": false, "md5_digest": "d56980be206d5fab43620acc27a57e9c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 81317, "upload_time": "2019-09-27T16:28:13", "upload_time_iso_8601": "2019-09-27T16:28:13.501126Z", "url": "https://files.pythonhosted.org/packages/7f/21/30489f10cad2f7d976307db4e0e78b9d2370771c399a70aee13018753218/Keg%20Auth-0.2.11.tar.gz", "yanked": false}], "0.2.12": [{"comment_text": "", "digests": {"md5": "9874d006daf5f45fa932d4abfcad12b1", "sha256": "eec38d656e99bf703cd79cb4e0af9deed7b9bf62ea7eacc9525acd6d7a651fa8"}, "downloads": -1, "filename": "Keg_Auth-0.2.12-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9874d006daf5f45fa932d4abfcad12b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 89257, "upload_time": "2019-10-03T14:30:24", "upload_time_iso_8601": "2019-10-03T14:30:24.257824Z", "url": "https://files.pythonhosted.org/packages/f0/71/b8663f62e2fad1aa2e56f067d5a4ed3ed055fd50ebc13f1e0f53e1202654/Keg_Auth-0.2.12-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1f34f75b00ed1a0224523162acd4a5a9", "sha256": "d137ef50b76f8138fdc6459ff8f445cc78f489ea5e289c38bef1626046b9198f"}, "downloads": -1, "filename": "Keg Auth-0.2.12.tar.gz", "has_sig": false, "md5_digest": "1f34f75b00ed1a0224523162acd4a5a9", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 82029, "upload_time": "2019-10-03T14:30:26", "upload_time_iso_8601": "2019-10-03T14:30:26.447867Z", "url": "https://files.pythonhosted.org/packages/49/63/db1c227de6ff8aa6e864566f2b34254d4925668f63d22f9a20f75ee7b131/Keg%20Auth-0.2.12.tar.gz", "yanked": false}], "0.2.13": [{"comment_text": "", "digests": {"md5": "ea303b5ede22aa6a91a801f30afb6249", "sha256": "fe3b2f216eb7f55262d7d6e0415b7a3a82831266cd6609815a533ebf087ea72d"}, "downloads": -1, "filename": "Keg_Auth-0.2.13-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea303b5ede22aa6a91a801f30afb6249", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 90612, "upload_time": "2019-11-08T15:36:12", "upload_time_iso_8601": "2019-11-08T15:36:12.889814Z", "url": "https://files.pythonhosted.org/packages/86/67/ddcd9744dc4a5a4f8508aa35f250f06a1facab81abc2c93f572c1a052f2a/Keg_Auth-0.2.13-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3ce104fb2f0fa1baadda0746c045ff97", "sha256": "8a8ee2b7ee98a4499b51dd88031e5067cc69cdeff877b87c193b4ae45ce0155d"}, "downloads": -1, "filename": "Keg Auth-0.2.13.tar.gz", "has_sig": false, "md5_digest": "3ce104fb2f0fa1baadda0746c045ff97", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83474, "upload_time": "2019-11-08T15:36:15", "upload_time_iso_8601": "2019-11-08T15:36:15.317168Z", "url": "https://files.pythonhosted.org/packages/dd/df/ab5bdbd775c7efb06173baa22cef4bb29ef58b259f7169e0b863febea8ca/Keg%20Auth-0.2.13.tar.gz", "yanked": false}], "0.2.14": [{"comment_text": "", "digests": {"md5": "8e6eeff31a7e423e4eeac3db420ec8e9", "sha256": "254f203e0fb337f7d3d9eaea8455c1444060267ffab0c3866fac06791bdb4df2"}, "downloads": -1, "filename": "Keg_Auth-0.2.14-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8e6eeff31a7e423e4eeac3db420ec8e9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 90638, "upload_time": "2019-11-21T21:48:16", "upload_time_iso_8601": "2019-11-21T21:48:16.480837Z", "url": "https://files.pythonhosted.org/packages/77/8c/8d3d4c052ae7db3c082342e3de5e63b5db249588d11afcd0705bb2c5f5f7/Keg_Auth-0.2.14-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3f26c109f23160c181779f0c2e05b2fa", "sha256": "b5126e87ce3e1a84f8d08e986543b75fcc2bf167276be7051103a2cfa906bf9f"}, "downloads": -1, "filename": "Keg Auth-0.2.14.tar.gz", "has_sig": false, "md5_digest": "3f26c109f23160c181779f0c2e05b2fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83735, "upload_time": "2019-11-21T21:48:18", "upload_time_iso_8601": "2019-11-21T21:48:18.946741Z", "url": "https://files.pythonhosted.org/packages/74/f5/261ddfa5b393731bb53fd1eafb535d6bc2d5fb61f30503172206489bc457/Keg%20Auth-0.2.14.tar.gz", "yanked": false}], "0.2.15": [{"comment_text": "", "digests": {"md5": "b8fe6070f10266986219e4be00327a4b", "sha256": "a1e6f68195444e890037b359edb5d9cddc0131915f959ed7273ca6f1d60e482e"}, "downloads": -1, "filename": "Keg_Auth-0.2.15-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b8fe6070f10266986219e4be00327a4b", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 90705, "upload_time": "2019-11-27T19:03:54", "upload_time_iso_8601": "2019-11-27T19:03:54.842891Z", "url": "https://files.pythonhosted.org/packages/c6/15/d8e108c4d2ac9c063a8df1ee8f1b207ed63c2d3e928fce2e935cf33825d8/Keg_Auth-0.2.15-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "88c6e8a41f83eeba50f0d3b99da3d024", "sha256": "4383670bebd10ed311112a12e4efb2b9f94d8f5d5e4234f2a0db554bd1337ed2"}, "downloads": -1, "filename": "Keg Auth-0.2.15.tar.gz", "has_sig": false, "md5_digest": "88c6e8a41f83eeba50f0d3b99da3d024", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 83801, "upload_time": "2019-11-27T19:03:57", "upload_time_iso_8601": "2019-11-27T19:03:57.327016Z", "url": "https://files.pythonhosted.org/packages/9d/1b/44689fb614ef83ff92a912117555cddac0ced1fdd5232ecce42ef1889e64/Keg%20Auth-0.2.15.tar.gz", "yanked": false}], "0.2.16": [{"comment_text": "", "digests": {"md5": "68c1f04fd4467e25d107685ba416e344", "sha256": "8af84319b898bacb80a023e7fd65308def856331d748f15676458a62cccb3c7d"}, "downloads": -1, "filename": "Keg_Auth-0.2.16-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "68c1f04fd4467e25d107685ba416e344", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 91053, "upload_time": "2019-12-02T16:29:21", "upload_time_iso_8601": "2019-12-02T16:29:21.126605Z", "url": "https://files.pythonhosted.org/packages/fd/d4/73037905bf209e51cc4f1e2269fbf8f5b7854f019eb8c9d5e0bd0c3827b5/Keg_Auth-0.2.16-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "322677aa3401447e2fa96cf1550982c7", "sha256": "c289a86bc0626dc6e606c3ea53cf5773f317131e2021f84b499fe85c51ea6cb9"}, "downloads": -1, "filename": "Keg Auth-0.2.16.tar.gz", "has_sig": false, "md5_digest": "322677aa3401447e2fa96cf1550982c7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84110, "upload_time": "2019-12-02T16:29:24", "upload_time_iso_8601": "2019-12-02T16:29:24.767479Z", "url": "https://files.pythonhosted.org/packages/24/4f/96dc36f08306fa4df8af23062fcaa79dd0b48ec4312709e426165124371d/Keg%20Auth-0.2.16.tar.gz", "yanked": false}], "0.2.17": [{"comment_text": "", "digests": {"md5": "cf4b70b7e337bd6701db2a1308b327d7", "sha256": "fa774795bd6221b0275502ab3b2e8aaa633bd747209a8a0392402ba9e10744e1"}, "downloads": -1, "filename": "Keg_Auth-0.2.17-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "cf4b70b7e337bd6701db2a1308b327d7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 91155, "upload_time": "2019-12-12T14:05:25", "upload_time_iso_8601": "2019-12-12T14:05:25.659276Z", "url": "https://files.pythonhosted.org/packages/a2/58/b76dadd89e67e58e58b5dff51143d6f6cd4c46ede705b34ead54f46e5680/Keg_Auth-0.2.17-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7344451a2a704ef37099b1da8b1468a8", "sha256": "b9db758631b59a31a59b1649db345d559a073af808c179aae05720ae9fb3be69"}, "downloads": -1, "filename": "Keg Auth-0.2.17.tar.gz", "has_sig": false, "md5_digest": "7344451a2a704ef37099b1da8b1468a8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84374, "upload_time": "2019-12-12T14:05:27", "upload_time_iso_8601": "2019-12-12T14:05:27.729776Z", "url": "https://files.pythonhosted.org/packages/da/5d/f017c0c4636bf6cd3e9bff657a1793a9a898af1f0a45a9ccdc6ab6af2485/Keg%20Auth-0.2.17.tar.gz", "yanked": false}], "0.2.18": [{"comment_text": "", "digests": {"md5": "b60d22828c9859f7f16dedbebb35ce79", "sha256": "f4fb0cd2052d6fb7e32ebd5def56ed952522e41cb854630e2058cccc162cf346"}, "downloads": -1, "filename": "Keg_Auth-0.2.18-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b60d22828c9859f7f16dedbebb35ce79", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 91554, "upload_time": "2020-01-10T17:35:41", "upload_time_iso_8601": "2020-01-10T17:35:41.267351Z", "url": "https://files.pythonhosted.org/packages/dc/40/5938726e47ddef1f43bbcc628468cb5cc7e36e40c64f11a959f6926a5fb7/Keg_Auth-0.2.18-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99ce7d9c2a2056e4ac137b8b7f352b06", "sha256": "c1171550a61bf35bb015ea5c83e45353e7bbce57461a77f2333b79028ee99c4e"}, "downloads": -1, "filename": "Keg Auth-0.2.18.tar.gz", "has_sig": false, "md5_digest": "99ce7d9c2a2056e4ac137b8b7f352b06", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 84731, "upload_time": "2020-01-10T17:35:43", "upload_time_iso_8601": "2020-01-10T17:35:43.489400Z", "url": "https://files.pythonhosted.org/packages/6e/67/adadae2fb30192a4883b603d142e727fa18ed4de0ed9feeadc10e6e0d7f6/Keg%20Auth-0.2.18.tar.gz", "yanked": false}], "0.2.19": [{"comment_text": "", "digests": {"md5": "0abc853c55c32dd3d20556d72134f68d", "sha256": "442821dbb63b1be00dafa2699d4b7f65e88a212c199e0950dd5b4e7d3d4a0816"}, "downloads": -1, "filename": "Keg_Auth-0.2.19-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0abc853c55c32dd3d20556d72134f68d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 92634, "upload_time": "2020-02-22T04:42:21", "upload_time_iso_8601": "2020-02-22T04:42:21.548246Z", "url": "https://files.pythonhosted.org/packages/05/eb/1d319d24364d975e55d4dae0fa2b19bf68d2fba5a0f3c8d75c94089934eb/Keg_Auth-0.2.19-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "be0c836f86074c5e0fd761ef186f1e11", "sha256": "731f549c9e228a5e2b4d6357f772415a0f16ea5431dfa94cae649235824331a4"}, "downloads": -1, "filename": "Keg Auth-0.2.19.tar.gz", "has_sig": false, "md5_digest": "be0c836f86074c5e0fd761ef186f1e11", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 86542, "upload_time": "2020-02-22T04:42:23", "upload_time_iso_8601": "2020-02-22T04:42:23.773340Z", "url": "https://files.pythonhosted.org/packages/c2/39/e5bcc547d222b1c62f1ee0783a17d23a459eb20995201a11baac613faa20/Keg%20Auth-0.2.19.tar.gz", "yanked": false}], "0.2.20": [{"comment_text": "", "digests": {"md5": "0f11e8f041d75df40662766799e15810", "sha256": "265d87be9c986f155299914f3b474af9fb97246a4b7f6b5b3411016d3b7f0f4d"}, "downloads": -1, "filename": "Keg_Auth-0.2.20-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0f11e8f041d75df40662766799e15810", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 94572, "upload_time": "2020-03-24T19:52:41", "upload_time_iso_8601": "2020-03-24T19:52:41.534542Z", "url": "https://files.pythonhosted.org/packages/21/8f/5c1701ac7d6a122b22f26d23ce93fb77316ba407edf8d736b14f67dcb3c3/Keg_Auth-0.2.20-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a3f0f33ffac0001cc4df38ccd28c6536", "sha256": "772364dd3f1c95e05d83af8a68e2b6a66874244a6cac7b6610740c4426e867cb"}, "downloads": -1, "filename": "Keg Auth-0.2.20.tar.gz", "has_sig": false, "md5_digest": "a3f0f33ffac0001cc4df38ccd28c6536", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 87826, "upload_time": "2020-03-24T19:52:43", "upload_time_iso_8601": "2020-03-24T19:52:43.774782Z", "url": "https://files.pythonhosted.org/packages/cb/aa/0beb10ba5e66987622d8b90c85648d1e59b29eb41f86118e23be7dfb8b94/Keg%20Auth-0.2.20.tar.gz", "yanked": false}], "0.2.21": [{"comment_text": "", "digests": {"md5": "b5c087e1c290837d7a19511640123771", "sha256": "466334124b454b1c7727fa83cad5b56ee8bb332b0142a7b003b7c8e55d530f2b"}, "downloads": -1, "filename": "Keg_Auth-0.2.21-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "b5c087e1c290837d7a19511640123771", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 96779, "upload_time": "2020-04-02T13:40:23", "upload_time_iso_8601": "2020-04-02T13:40:23.933843Z", "url": "https://files.pythonhosted.org/packages/b3/4c/5302651a2670a8d7f5f1cc66e5f99713bb4b5516204710a127126197219b/Keg_Auth-0.2.21-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "9f8680385772c72809883a11277abf02", "sha256": "d2384ce164a765fdb189efffb7bb37df6a61ace7d47c36b152f8be7ef2d9b97c"}, "downloads": -1, "filename": "Keg Auth-0.2.21.tar.gz", "has_sig": false, "md5_digest": "9f8680385772c72809883a11277abf02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 90527, "upload_time": "2020-04-02T13:40:26", "upload_time_iso_8601": "2020-04-02T13:40:26.396206Z", "url": "https://files.pythonhosted.org/packages/65/55/bb7f9bad7d585da75e7988dad51e99b0790901d722399bd18e1f8b874e34/Keg%20Auth-0.2.21.tar.gz", "yanked": false}], "0.2.22": [{"comment_text": "", "digests": {"md5": "a9964eb948b741d86b70905aab196fb1", "sha256": "4a546aeab3673a6453ad093362664f3d3f1629d08cbc6ab76218abf1910d74c2"}, "downloads": -1, "filename": "Keg_Auth-0.2.22-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9964eb948b741d86b70905aab196fb1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 104028, "upload_time": "2020-04-16T20:29:51", "upload_time_iso_8601": "2020-04-16T20:29:51.182425Z", "url": "https://files.pythonhosted.org/packages/35/f2/8c1650ad3db3e7007aba245dad243366ab7dd77cc49a3e75ab35b7d5acad/Keg_Auth-0.2.22-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b4a6fc6cf31bb70048370ae64114073", "sha256": "8228628f1e4e967b0997b8fb86a7ef6afa8dc43158b37b4b31589095311c6c5f"}, "downloads": -1, "filename": "Keg Auth-0.2.22.tar.gz", "has_sig": false, "md5_digest": "1b4a6fc6cf31bb70048370ae64114073", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98506, "upload_time": "2020-04-16T20:29:53", "upload_time_iso_8601": "2020-04-16T20:29:53.133311Z", "url": "https://files.pythonhosted.org/packages/15/12/000e88c145b61eb33167a80fd0a45ae6631aeef1480f75ce00a77959a57d/Keg%20Auth-0.2.22.tar.gz", "yanked": false}], "0.2.5": [{"comment_text": "", "digests": {"md5": "4c230b9857aa3a49114793ea3e1ce0ce", "sha256": "d0cf05803f3f9c362101ce9de2301183a7bc1880e39eb224454f884b2a0004e5"}, "downloads": -1, "filename": "Keg_Auth-0.2.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4c230b9857aa3a49114793ea3e1ce0ce", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 82338, "upload_time": "2018-11-14T19:04:49", "upload_time_iso_8601": "2018-11-14T19:04:49.117508Z", "url": "https://files.pythonhosted.org/packages/68/b1/2e3f6962a234eb206a7136fc87036a38109858adc66ff76aa28f5fa3cc49/Keg_Auth-0.2.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "87460dee094bc6c44acc79caa9937aac", "sha256": "abe3973c976aa1b643e4c5f197c84e853642b43eafbc2f40f3215b5de0e37cbe"}, "downloads": -1, "filename": "Keg Auth-0.2.5.tar.gz", "has_sig": false, "md5_digest": "87460dee094bc6c44acc79caa9937aac", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 73879, "upload_time": "2018-11-14T19:04:51", "upload_time_iso_8601": "2018-11-14T19:04:51.304302Z", "url": "https://files.pythonhosted.org/packages/a8/48/f5b975b8b5cd9cae47414fd8f0b2bc525b808c801ef6ec3065411b6b3b2c/Keg%20Auth-0.2.5.tar.gz", "yanked": false}], "0.2.6": [{"comment_text": "", "digests": {"md5": "f58afd537b6951ea174a57208091f0b1", "sha256": "77c8436b1d0755e7a249ad980cf8e7f8b1c3687b3535d411dbdac17465908664"}, "downloads": -1, "filename": "Keg_Auth-0.2.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "f58afd537b6951ea174a57208091f0b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 84278, "upload_time": "2019-02-12T12:50:55", "upload_time_iso_8601": "2019-02-12T12:50:55.080765Z", "url": "https://files.pythonhosted.org/packages/54/6b/73521373b10c7c9efb817e6a17b2904075eb26d1e2959896415f9487b46e/Keg_Auth-0.2.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "187fb1444b0fe760de07e011195370cd", "sha256": "0b2c3035f51d7c6cec17694de88bd10b6691be56e76d952bc1201c36067ea7cb"}, "downloads": -1, "filename": "Keg Auth-0.2.6.tar.gz", "has_sig": false, "md5_digest": "187fb1444b0fe760de07e011195370cd", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 68717, "upload_time": "2019-02-12T12:50:57", "upload_time_iso_8601": "2019-02-12T12:50:57.391844Z", "url": "https://files.pythonhosted.org/packages/f6/29/f76011fc429f799c0f6a9a3d10eeabd65b2fba51249652a77a23f40420ae/Keg%20Auth-0.2.6.tar.gz", "yanked": false}], "0.2.7": [{"comment_text": "", "digests": {"md5": "9b58e15f511d2c4b003e739829f01f81", "sha256": "c9be87b812aaa04cb003a21418231de88b809ce5d0748a2aa3c4390792947f54"}, "downloads": -1, "filename": "Keg_Auth-0.2.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "9b58e15f511d2c4b003e739829f01f81", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86417, "upload_time": "2019-06-07T16:37:23", "upload_time_iso_8601": "2019-06-07T16:37:23.982871Z", "url": "https://files.pythonhosted.org/packages/d9/96/ee8291b8e1f6c5f5af7217f1040279c233e66484a1bcd8c630c3ecfc47a7/Keg_Auth-0.2.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3060fbf01e53c8ffae4626ce407ee017", "sha256": "8c1d6b222af5a0beb948d0f5ec55a50dc903105112eb116213e6964ca7cf7d89"}, "downloads": -1, "filename": "Keg Auth-0.2.7.tar.gz", "has_sig": false, "md5_digest": "3060fbf01e53c8ffae4626ce407ee017", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 77791, "upload_time": "2019-06-07T16:37:26", "upload_time_iso_8601": "2019-06-07T16:37:26.303570Z", "url": "https://files.pythonhosted.org/packages/2f/6c/62f8cdfed0f7839b90a8c864ebc8d7838b20ec531a57f74bf65596bd950d/Keg%20Auth-0.2.7.tar.gz", "yanked": false}], "0.2.8": [{"comment_text": "", "digests": {"md5": "713e9f326dca004ce18894df72d8a3fc", "sha256": "458d186c9a526d440887ec3e055c5f8fe3aae1297a38adde05137a500e88890a"}, "downloads": -1, "filename": "Keg_Auth-0.2.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "713e9f326dca004ce18894df72d8a3fc", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86682, "upload_time": "2019-06-17T19:09:10", "upload_time_iso_8601": "2019-06-17T19:09:10.063887Z", "url": "https://files.pythonhosted.org/packages/a5/a4/e132e1833271aa5e094c4c4f2917f7c01c8e5f72e983cdb0cd164367d328/Keg_Auth-0.2.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "7370eea32dc1dcf91987150bb3192c35", "sha256": "05ba322b8e963d2df13623331f18f3eb22be7fb7e7df6e54b4cfce3afdc0edbf"}, "downloads": -1, "filename": "Keg Auth-0.2.8.tar.gz", "has_sig": false, "md5_digest": "7370eea32dc1dcf91987150bb3192c35", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 78131, "upload_time": "2019-06-17T19:09:12", "upload_time_iso_8601": "2019-06-17T19:09:12.914972Z", "url": "https://files.pythonhosted.org/packages/00/23/e24399515891169dcbf0024799ed8b55937078bb69201d63054333437511/Keg%20Auth-0.2.8.tar.gz", "yanked": false}], "0.2.9": [{"comment_text": "", "digests": {"md5": "0448c918585529131cd4e0d795f60a96", "sha256": "04b4ac4e33726ebbfa9d2e8a428a7ef569b9033756e9624795ac4273450ce5d0"}, "downloads": -1, "filename": "Keg_Auth-0.2.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "0448c918585529131cd4e0d795f60a96", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 86766, "upload_time": "2019-07-28T01:11:09", "upload_time_iso_8601": "2019-07-28T01:11:09.446725Z", "url": "https://files.pythonhosted.org/packages/31/f1/5b87cec6902202a232bb7e92040a04462c0da9c11520a611b5166572c51e/Keg_Auth-0.2.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "0fe0fc8476dffad3b2834ccef5ea05e8", "sha256": "7df20e36bdd69edac7bceae935ea6c79a22e7397acf4ffcca9002ee4dabc836f"}, "downloads": -1, "filename": "Keg Auth-0.2.9.tar.gz", "has_sig": false, "md5_digest": "0fe0fc8476dffad3b2834ccef5ea05e8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 70803, "upload_time": "2019-07-28T01:11:11", "upload_time_iso_8601": "2019-07-28T01:11:11.521520Z", "url": "https://files.pythonhosted.org/packages/23/21/28604735d28cedd7a954aa18f9da4292cd772ee0f9accee4645cb248bbc6/Keg%20Auth-0.2.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a9964eb948b741d86b70905aab196fb1", "sha256": "4a546aeab3673a6453ad093362664f3d3f1629d08cbc6ab76218abf1910d74c2"}, "downloads": -1, "filename": "Keg_Auth-0.2.22-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "a9964eb948b741d86b70905aab196fb1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 104028, "upload_time": "2020-04-16T20:29:51", "upload_time_iso_8601": "2020-04-16T20:29:51.182425Z", "url": "https://files.pythonhosted.org/packages/35/f2/8c1650ad3db3e7007aba245dad243366ab7dd77cc49a3e75ab35b7d5acad/Keg_Auth-0.2.22-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "1b4a6fc6cf31bb70048370ae64114073", "sha256": "8228628f1e4e967b0997b8fb86a7ef6afa8dc43158b37b4b31589095311c6c5f"}, "downloads": -1, "filename": "Keg Auth-0.2.22.tar.gz", "has_sig": false, "md5_digest": "1b4a6fc6cf31bb70048370ae64114073", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 98506, "upload_time": "2020-04-16T20:29:53", "upload_time_iso_8601": "2020-04-16T20:29:53.133311Z", "url": "https://files.pythonhosted.org/packages/15/12/000e88c145b61eb33167a80fd0a45ae6631aeef1480f75ce00a77959a57d/Keg%20Auth-0.2.22.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:19 2020"}