{"info": {"author": "Jon Crall", "author_email": "erotemic@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "|CircleCI| |Travis| |Appveyor| |Codecov| |Pypi| |Downloads| |ReadTheDocs|\n\nProgIter\n========\n\nProgIter lets you measure and print the progress of an iterative process. This\ncan be done either via an iterable interface or using the manual API. Using the\niterable inferface is most common.\n\nProgIter was originally developed independantly of ``tqdm``, but the newer\nversions of this library have been designed to be compatible with tqdm-API.\n``ProgIter`` is now a (mostly) drop-in alternative to tqdm_. The ``tqdm``\nlibrary may be more appropriate in some cases. *The main advantage of ``ProgIter``\nis that it does not use any python threading*, and therefore can be safer with\ncode that makes heavy use of multiprocessing. `The reason`_ for this is that\nthreading before forking may cause locks to be duplicated across processes,\nwhich may lead to deadlocks.\n\nProgIter is simpler than tqdm, which may be desirable for some applications.\nHowever, this also means ProgIter is not as extensible as tqdm.\nIf you want a pretty bar or need something fancy, use tqdm;\nif you want useful information  about your iteration by default, use progiter. \n\nPackage level documentation can be found at: https://progiter.readthedocs.io/en/latest/\n\nExample\n-------\n\nThe basic usage of ProgIter is simple and intuitive. Just wrap a python\niterable.  The following example wraps a ``range`` iterable and prints reported\nprogress to stdout as the iterable is consumed. The ``ProgIter`` object accepts\nvarious keyword arguments to modify the details of how progress is measured and\nreported. See API documentation of the ``ProgIter`` classs here:\nhttps://progiter.readthedocs.io/en/latest/progiter.progiter.html#progiter.progiter.ProgIter\n\nNote that by default ProgIter reports information about iteration-rate,\nfraction-complete, estimated time remaining, time taken so far, and the current\nwall time.\n\n.. code:: python\n\n    >>> from progiter import ProgIter\n    >>> def is_prime(n):\n    ...     return n >= 2 and not any(n % i == 0 for i in range(2, n))\n    >>> for n in ProgIter(range(1000), verbose=2):\n    >>>     # do some work\n    >>>     is_prime(n)\n       0/1000... rate=0 Hz, eta=?, total=0:00:00, wall=12:47 EST\n       1/1000... rate=58551.44 Hz, eta=0:00:00, total=0:00:00, wall=12:47 EST\n     257/1000... rate=317349.77 Hz, eta=0:00:00, total=0:00:00, wall=12:47 EST\n     642/1000... rate=191396.29 Hz, eta=0:00:00, total=0:00:00, wall=12:47 EST\n    1000/1000... rate=139756.95 Hz, eta=0:00:00, total=0:00:00, wall=12:47 EST\n\n\n\nFor more complex applications is may sometimes be desireable to manually use\nthe ProgIter API. This is done as follows:\n\n.. code:: python \n\n    >>> from progiter import ProgIter\n    >>> n = 3\n    >>> prog = ProgIter(desc='manual', total=n, verbose=3)\n    >>> prog.begin() # Manually begin progress iteration\n    >>> for _ in range(n):\n    ...     prog.step(inc=1)  # specify the number of steps to increment\n    >>> prog.end()  # Manually end progress iteration\n    manual 0/3... rate=0 Hz, eta=?, total=0:00:00, wall=12:46 EST\n    manual 1/3... rate=12036.01 Hz, eta=0:00:00, total=0:00:00, wall=12:46 EST\n    manual 2/3... rate=16510.10 Hz, eta=0:00:00, total=0:00:00, wall=12:46 EST\n    manual 3/3... rate=20067.43 Hz, eta=0:00:00, total=0:00:00, wall=12:46 EST\n\nWhen working with ProgIter in either iterable or manual mode you can use the\n``prog.ensure_newline`` method to guarantee that the next call you make to stdout\nwill start on a new line. You can also use the ``prog.set_extra`` method to\nupdate a dynamci \"extra\" message that is shown in the formatted output. The\nfollowing example demonstrates this.\n\n\n.. code:: python \n\n    >>> from progiter import ProgIter\n    >>> def is_prime(n):\n    ...     return n >= 2 and not any(n % i == 0 for i in range(2, n))\n    >>> _iter = range(1000)\n    >>> prog = ProgIter(_iter, desc='check primes', verbose=2)\n    >>> for n in prog:\n    >>>     if n == 97:\n    >>>         print('!!! Special print at n=97 !!!')\n    >>>     if is_prime(n):\n    >>>         prog.set_extra('Biggest prime so far: {}'.format(n))\n    >>>         prog.ensure_newline()\n    check primes    0/1000... rate=0 Hz, eta=?, total=0:00:00, wall=12:55 EST\n    check primes    1/1000... rate=98376.78 Hz, eta=0:00:00, total=0:00:00, wall=12:55 EST\n    !!! Special print at n=97 !!!\n    check primes  257/1000...Biggest prime so far: 251 rate=308037.13 Hz, eta=0:00:00, total=0:00:00, wall=12:55 EST\n    check primes  642/1000...Biggest prime so far: 641 rate=185166.01 Hz, eta=0:00:00, total=0:00:00, wall=12:55 EST\n    check primes 1000/1000...Biggest prime so far: 997 rate=120063.72 Hz, eta=0:00:00, total=0:00:00, wall=12:55 EST\n\n\nInstallation\n------------\n\nProgIter can be easilly installed via `pip`. \n\n.. code:: bash\n\n   pip install progiter\n\nAlternatively, the `ubelt`_ library ships with its own version of ProgIter.\nNote that the `ubelt` version of progiter is distinct (i.e. ubelt actually\ncontains a copy of this library), but the two libraries are generally kept in\nsync. \n\n\n.. _ubelt: https://github.com/Erotemic/ubelt\n.. _tqdm: https://pypi.python.org/pypi/tqdm\n.. _The reason: https://pybay.com/site_media/slides/raymond2017-keynote/combo.html\n\n\n.. |Travis| image:: https://img.shields.io/travis/Erotemic/progiter/master.svg?label=Travis%20CI\n   :target: https://travis-ci.org/Erotemic/progiter?branch=master\n.. |Codecov| image:: https://codecov.io/github/Erotemic/progiter/badge.svg?branch=master&service=github\n   :target: https://codecov.io/github/Erotemic/progiter?branch=master\n.. |Appveyor| image:: https://ci.appveyor.com/api/projects/status/github/Erotemic/progiter?branch=master&svg=True\n   :target: https://ci.appveyor.com/project/Erotemic/progiter/branch/master\n.. |Pypi| image:: https://img.shields.io/pypi/v/progiter.svg\n   :target: https://pypi.python.org/pypi/progiter\n.. |Downloads| image:: https://img.shields.io/pypi/dm/progiter.svg\n   :target: https://pypistats.org/packages/progiter\n.. |CircleCI| image:: https://circleci.com/gh/Erotemic/progiter.svg?style=svg\n    :target: https://circleci.com/gh/Erotemic/progiter\n.. |ReadTheDocs| image:: https://readthedocs.org/projects/progiter/badge/?version=latest\n    :target: http://progiter.readthedocs.io/en/latest/", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/Erotemic/progiter", "keywords": "", "license": "Apache 2", "maintainer": "", "maintainer_email": "", "name": "progiter", "package_url": "https://pypi.org/project/progiter/", "platform": "", "project_url": "https://pypi.org/project/progiter/", "project_urls": {"Homepage": "https://github.com/Erotemic/progiter"}, "release_url": "https://pypi.org/project/progiter/0.1.3/", "requires_dist": null, "requires_python": "", "summary": "A single-threaded alternative to tqdm.", "version": "0.1.3", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://circleci.com/gh/Erotemic/progiter\" rel=\"nofollow\"><img alt=\"CircleCI\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a16ecffae38da4b1011e069f7e7e4fb917633dd5/68747470733a2f2f636972636c6563692e636f6d2f67682f45726f74656d69632f70726f67697465722e7376673f7374796c653d737667\"></a> <a href=\"https://travis-ci.org/Erotemic/progiter?branch=master\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9ff21c1fb1be25ce61758850355c31493af1cb70/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f45726f74656d69632f70726f67697465722f6d61737465722e7376673f6c6162656c3d5472617669732532304349\"></a> <a href=\"https://ci.appveyor.com/project/Erotemic/progiter/branch/master\" rel=\"nofollow\"><img alt=\"Appveyor\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/34e8085e104be400b3c56e40cd9c221adc559320/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6769746875622f45726f74656d69632f70726f67697465723f6272616e63683d6d6173746572267376673d54727565\"></a> <a href=\"https://codecov.io/github/Erotemic/progiter?branch=master\" rel=\"nofollow\"><img alt=\"Codecov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/efc99e46de065071a42da0dddd61d043f068052d/68747470733a2f2f636f6465636f762e696f2f6769746875622f45726f74656d69632f70726f67697465722f62616467652e7376673f6272616e63683d6d617374657226736572766963653d676974687562\"></a> <a href=\"https://pypi.python.org/pypi/progiter\" rel=\"nofollow\"><img alt=\"Pypi\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a3fb4266bebd3984300117cca3f5e1ffea02a4a9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f70726f67697465722e737667\"></a> <a href=\"https://pypistats.org/packages/progiter\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/9b95789f5127986fe5edd18b4657a5a87266431a/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f70726f67697465722e737667\"></a> <a href=\"http://progiter.readthedocs.io/en/latest/\" rel=\"nofollow\"><img alt=\"ReadTheDocs\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/867bfcda784944257cba43964454c6ed0c66ab31/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f70726f67697465722f62616467652f3f76657273696f6e3d6c6174657374\"></a></p>\n<div id=\"progiter\">\n<h2>ProgIter</h2>\n<p>ProgIter lets you measure and print the progress of an iterative process. This\ncan be done either via an iterable interface or using the manual API. Using the\niterable inferface is most common.</p>\n<p>ProgIter was originally developed independantly of <tt>tqdm</tt>, but the newer\nversions of this library have been designed to be compatible with tqdm-API.\n<tt>ProgIter</tt> is now a (mostly) drop-in alternative to <a href=\"https://pypi.python.org/pypi/tqdm\" rel=\"nofollow\">tqdm</a>. The <tt>tqdm</tt>\nlibrary may be more appropriate in some cases. <em>The main advantage of ``ProgIter``\nis that it does not use any python threading</em>, and therefore can be safer with\ncode that makes heavy use of multiprocessing. <a href=\"https://pybay.com/site_media/slides/raymond2017-keynote/combo.html\" rel=\"nofollow\">The reason</a> for this is that\nthreading before forking may cause locks to be duplicated across processes,\nwhich may lead to deadlocks.</p>\n<p>ProgIter is simpler than tqdm, which may be desirable for some applications.\nHowever, this also means ProgIter is not as extensible as tqdm.\nIf you want a pretty bar or need something fancy, use tqdm;\nif you want useful information  about your iteration by default, use progiter.</p>\n<p>Package level documentation can be found at: <a href=\"https://progiter.readthedocs.io/en/latest/\" rel=\"nofollow\">https://progiter.readthedocs.io/en/latest/</a></p>\n<div id=\"example\">\n<h3>Example</h3>\n<p>The basic usage of ProgIter is simple and intuitive. Just wrap a python\niterable.  The following example wraps a <tt>range</tt> iterable and prints reported\nprogress to stdout as the iterable is consumed. The <tt>ProgIter</tt> object accepts\nvarious keyword arguments to modify the details of how progress is measured and\nreported. See API documentation of the <tt>ProgIter</tt> classs here:\n<a href=\"https://progiter.readthedocs.io/en/latest/progiter.progiter.html#progiter.progiter.ProgIter\" rel=\"nofollow\">https://progiter.readthedocs.io/en/latest/progiter.progiter.html#progiter.progiter.ProgIter</a></p>\n<p>Note that by default ProgIter reports information about iteration-rate,\nfraction-complete, estimated time remaining, time taken so far, and the current\nwall time.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">progiter</span> <span class=\"kn\">import</span> <span class=\"n\">ProgIter</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">is_prime</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">ProgIter</span><span class=\"p\">(</span><span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">),</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"c1\"># do some work</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"n\">is_prime</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">)</span>\n   <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">0</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"err\">?</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">47</span> <span class=\"n\">EST</span>\n   <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">58551.44</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">47</span> <span class=\"n\">EST</span>\n <span class=\"mi\">257</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">317349.77</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">47</span> <span class=\"n\">EST</span>\n <span class=\"mi\">642</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">191396.29</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">47</span> <span class=\"n\">EST</span>\n<span class=\"mi\">1000</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">139756.95</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">47</span> <span class=\"n\">EST</span>\n</pre>\n<p>For more complex applications is may sometimes be desireable to manually use\nthe ProgIter API. This is done as follows:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">progiter</span> <span class=\"kn\">import</span> <span class=\"n\">ProgIter</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">n</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">prog</span> <span class=\"o\">=</span> <span class=\"n\">ProgIter</span><span class=\"p\">(</span><span class=\"n\">desc</span><span class=\"o\">=</span><span class=\"s1\">'manual'</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"n\">n</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">3</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">prog</span><span class=\"o\">.</span><span class=\"n\">begin</span><span class=\"p\">()</span> <span class=\"c1\"># Manually begin progress iteration</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">_</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"n\">prog</span><span class=\"o\">.</span><span class=\"n\">step</span><span class=\"p\">(</span><span class=\"n\">inc</span><span class=\"o\">=</span><span class=\"mi\">1</span><span class=\"p\">)</span>  <span class=\"c1\"># specify the number of steps to increment</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">prog</span><span class=\"o\">.</span><span class=\"n\">end</span><span class=\"p\">()</span>  <span class=\"c1\"># Manually end progress iteration</span>\n<span class=\"n\">manual</span> <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mf\">3.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">0</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"err\">?</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">46</span> <span class=\"n\">EST</span>\n<span class=\"n\">manual</span> <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mf\">3.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">12036.01</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">46</span> <span class=\"n\">EST</span>\n<span class=\"n\">manual</span> <span class=\"mi\">2</span><span class=\"o\">/</span><span class=\"mf\">3.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">16510.10</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">46</span> <span class=\"n\">EST</span>\n<span class=\"n\">manual</span> <span class=\"mi\">3</span><span class=\"o\">/</span><span class=\"mf\">3.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">20067.43</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">46</span> <span class=\"n\">EST</span>\n</pre>\n<p>When working with ProgIter in either iterable or manual mode you can use the\n<tt>prog.ensure_newline</tt> method to guarantee that the next call you make to stdout\nwill start on a new line. You can also use the <tt>prog.set_extra</tt> method to\nupdate a dynamci \u201cextra\u201d message that is shown in the formatted output. The\nfollowing example demonstrates this.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">progiter</span> <span class=\"kn\">import</span> <span class=\"n\">ProgIter</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">def</span> <span class=\"nf\">is_prime</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"o\">...</span>     <span class=\"k\">return</span> <span class=\"n\">n</span> <span class=\"o\">&gt;=</span> <span class=\"mi\">2</span> <span class=\"ow\">and</span> <span class=\"ow\">not</span> <span class=\"nb\">any</span><span class=\"p\">(</span><span class=\"n\">n</span> <span class=\"o\">%</span> <span class=\"n\">i</span> <span class=\"o\">==</span> <span class=\"mi\">0</span> <span class=\"k\">for</span> <span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"n\">n</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">_iter</span> <span class=\"o\">=</span> <span class=\"nb\">range</span><span class=\"p\">(</span><span class=\"mi\">1000</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">prog</span> <span class=\"o\">=</span> <span class=\"n\">ProgIter</span><span class=\"p\">(</span><span class=\"n\">_iter</span><span class=\"p\">,</span> <span class=\"n\">desc</span><span class=\"o\">=</span><span class=\"s1\">'check primes'</span><span class=\"p\">,</span> <span class=\"n\">verbose</span><span class=\"o\">=</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"k\">for</span> <span class=\"n\">n</span> <span class=\"ow\">in</span> <span class=\"n\">prog</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">if</span> <span class=\"n\">n</span> <span class=\"o\">==</span> <span class=\"mi\">97</span><span class=\"p\">:</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"s1\">'!!! Special print at n=97 !!!'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span>     <span class=\"k\">if</span> <span class=\"n\">is_prime</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">):</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"n\">prog</span><span class=\"o\">.</span><span class=\"n\">set_extra</span><span class=\"p\">(</span><span class=\"s1\">'Biggest prime so far: </span><span class=\"si\">{}</span><span class=\"s1\">'</span><span class=\"o\">.</span><span class=\"n\">format</span><span class=\"p\">(</span><span class=\"n\">n</span><span class=\"p\">))</span>\n<span class=\"o\">&gt;&gt;&gt;</span>         <span class=\"n\">prog</span><span class=\"o\">.</span><span class=\"n\">ensure_newline</span><span class=\"p\">()</span>\n<span class=\"n\">check</span> <span class=\"n\">primes</span>    <span class=\"mi\">0</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mi\">0</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"err\">?</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">55</span> <span class=\"n\">EST</span>\n<span class=\"n\">check</span> <span class=\"n\">primes</span>    <span class=\"mi\">1</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">98376.78</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">55</span> <span class=\"n\">EST</span>\n<span class=\"err\">!!!</span> <span class=\"n\">Special</span> <span class=\"nb\">print</span> <span class=\"n\">at</span> <span class=\"n\">n</span><span class=\"o\">=</span><span class=\"mi\">97</span> <span class=\"err\">!!!</span>\n<span class=\"n\">check</span> <span class=\"n\">primes</span>  <span class=\"mi\">257</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span><span class=\"n\">Biggest</span> <span class=\"n\">prime</span> <span class=\"n\">so</span> <span class=\"n\">far</span><span class=\"p\">:</span> <span class=\"mi\">251</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">308037.13</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">55</span> <span class=\"n\">EST</span>\n<span class=\"n\">check</span> <span class=\"n\">primes</span>  <span class=\"mi\">642</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span><span class=\"n\">Biggest</span> <span class=\"n\">prime</span> <span class=\"n\">so</span> <span class=\"n\">far</span><span class=\"p\">:</span> <span class=\"mi\">641</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">185166.01</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">55</span> <span class=\"n\">EST</span>\n<span class=\"n\">check</span> <span class=\"n\">primes</span> <span class=\"mi\">1000</span><span class=\"o\">/</span><span class=\"mf\">1000.</span><span class=\"o\">..</span><span class=\"n\">Biggest</span> <span class=\"n\">prime</span> <span class=\"n\">so</span> <span class=\"n\">far</span><span class=\"p\">:</span> <span class=\"mi\">997</span> <span class=\"n\">rate</span><span class=\"o\">=</span><span class=\"mf\">120063.72</span> <span class=\"n\">Hz</span><span class=\"p\">,</span> <span class=\"n\">eta</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">total</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">:</span><span class=\"mi\">00</span><span class=\"p\">,</span> <span class=\"n\">wall</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">:</span><span class=\"mi\">55</span> <span class=\"n\">EST</span>\n</pre>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>ProgIter can be easilly installed via <cite>pip</cite>.</p>\n<pre>pip install progiter\n</pre>\n<p>Alternatively, the <a href=\"https://github.com/Erotemic/ubelt\" rel=\"nofollow\">ubelt</a> library ships with its own version of ProgIter.\nNote that the <cite>ubelt</cite> version of progiter is distinct (i.e. ubelt actually\ncontains a copy of this library), but the two libraries are generally kept in\nsync.</p>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6441196, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "7536f3cd7872cb6c9f5e22a6beb2b5ac", "sha256": "ee6afbbceeb607b5c0d47977cf84164b4f146d8d89b136f68b739df201e590be"}, "downloads": -1, "filename": "progiter-0.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7536f3cd7872cb6c9f5e22a6beb2b5ac", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8865, "upload_time": "2018-05-26T03:12:18", "upload_time_iso_8601": "2018-05-26T03:12:18.961291Z", "url": "https://files.pythonhosted.org/packages/90/f7/0ec22f2c143d0f9214bec183135c0d59aa1685c7bfa0b802743041aa7d10/progiter-0.0.1-py2.py3-none-any.whl", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "5bd9a67e3bc072590af8420cb6e93c88", "sha256": "df2b79cd22d34d48164fb8bfba90f802f020f3b0f874289425c57c72bd9a779e"}, "downloads": -1, "filename": "progiter-0.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5bd9a67e3bc072590af8420cb6e93c88", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 8955, "upload_time": "2018-07-15T05:25:59", "upload_time_iso_8601": "2018-07-15T05:25:59.335074Z", "url": "https://files.pythonhosted.org/packages/b1/d2/43b9a4b21a0f7c0dc1fe127c066f69a4e8d3ba21bd8996487da06deb97d6/progiter-0.0.2-py2.py3-none-any.whl", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "ea61c632ae2c93cf5fc180dc11837213", "sha256": "9f47a50be25e6dae4da50c8d913b249cb157f8e3bdb0897338354e7deb07648a"}, "downloads": -1, "filename": "progiter-0.0.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ea61c632ae2c93cf5fc180dc11837213", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9158, "upload_time": "2018-09-05T02:14:50", "upload_time_iso_8601": "2018-09-05T02:14:50.795670Z", "url": "https://files.pythonhosted.org/packages/31/27/ec5d61e99ea1fd602d2add1db1ac18d61a1e0eb043c6cc5a8cf682993cb0/progiter-0.0.3-py2.py3-none-any.whl", "yanked": false}], "0.1.0": [{"comment_text": "", "digests": {"md5": "1f28546ae3aab3304963e534b3a2435d", "sha256": "46e2d69810e15113a56e731bf4e630194add075fbc1b21e4a50c9105dcbaf83a"}, "downloads": -1, "filename": "progiter-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "1f28546ae3aab3304963e534b3a2435d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 9310, "upload_time": "2019-03-04T01:23:48", "upload_time_iso_8601": "2019-03-04T01:23:48.869402Z", "url": "https://files.pythonhosted.org/packages/cf/2c/b8fb74cde22942850d4a43518cb2c042764022682a1a1ecdb28fb5977b8a/progiter-0.1.0-py2.py3-none-any.whl", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "cba748621c97accf1be8de1b8c9852b1", "sha256": "da80f81372996e30d0fdeabd1ca8ccce29baf4be8d4a06ac2bede69fb99e96e0"}, "downloads": -1, "filename": "progiter-0.1.3-py2-none-any.whl", "has_sig": true, "md5_digest": "cba748621c97accf1be8de1b8c9852b1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16928, "upload_time": "2020-01-12T20:52:37", "upload_time_iso_8601": "2020-01-12T20:52:37.740666Z", "url": "https://files.pythonhosted.org/packages/ad/1c/0c886ce6c281594f581b300fcd10d1fe710f6d1546fb63f18355580011f0/progiter-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b658e9448a848663af5a45810b7ba0e4", "sha256": "8e21ec0531e689e4f7087c32806ac8cf682c20fb92346f612b78b2d8583ec5cc"}, "downloads": -1, "filename": "progiter-0.1.3-py3-none-any.whl", "has_sig": true, "md5_digest": "b658e9448a848663af5a45810b7ba0e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16928, "upload_time": "2020-01-12T20:52:41", "upload_time_iso_8601": "2020-01-12T20:52:41.047782Z", "url": "https://files.pythonhosted.org/packages/41/6e/31d7e7e7c0ee2f458c438dbfe945d1786f8b5720a03bade5bb1be7c8ee1f/progiter-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "146e43996189992de8f695317e10c38c", "sha256": "a89f9ffc9b972b6fafc927c3752ac1329a12d4caad5c88895c3ba562cc6d17a1"}, "downloads": -1, "filename": "progiter-0.1.3.tar.gz", "has_sig": true, "md5_digest": "146e43996189992de8f695317e10c38c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12817, "upload_time": "2020-01-12T20:52:35", "upload_time_iso_8601": "2020-01-12T20:52:35.537243Z", "url": "https://files.pythonhosted.org/packages/3f/05/9f86604af0209e50ff4f2c4814b0614123249e17cc4f712b26db898897b8/progiter-0.1.3.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cba748621c97accf1be8de1b8c9852b1", "sha256": "da80f81372996e30d0fdeabd1ca8ccce29baf4be8d4a06ac2bede69fb99e96e0"}, "downloads": -1, "filename": "progiter-0.1.3-py2-none-any.whl", "has_sig": true, "md5_digest": "cba748621c97accf1be8de1b8c9852b1", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 16928, "upload_time": "2020-01-12T20:52:37", "upload_time_iso_8601": "2020-01-12T20:52:37.740666Z", "url": "https://files.pythonhosted.org/packages/ad/1c/0c886ce6c281594f581b300fcd10d1fe710f6d1546fb63f18355580011f0/progiter-0.1.3-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "b658e9448a848663af5a45810b7ba0e4", "sha256": "8e21ec0531e689e4f7087c32806ac8cf682c20fb92346f612b78b2d8583ec5cc"}, "downloads": -1, "filename": "progiter-0.1.3-py3-none-any.whl", "has_sig": true, "md5_digest": "b658e9448a848663af5a45810b7ba0e4", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 16928, "upload_time": "2020-01-12T20:52:41", "upload_time_iso_8601": "2020-01-12T20:52:41.047782Z", "url": "https://files.pythonhosted.org/packages/41/6e/31d7e7e7c0ee2f458c438dbfe945d1786f8b5720a03bade5bb1be7c8ee1f/progiter-0.1.3-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "146e43996189992de8f695317e10c38c", "sha256": "a89f9ffc9b972b6fafc927c3752ac1329a12d4caad5c88895c3ba562cc6d17a1"}, "downloads": -1, "filename": "progiter-0.1.3.tar.gz", "has_sig": true, "md5_digest": "146e43996189992de8f695317e10c38c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12817, "upload_time": "2020-01-12T20:52:35", "upload_time_iso_8601": "2020-01-12T20:52:35.537243Z", "url": "https://files.pythonhosted.org/packages/3f/05/9f86604af0209e50ff4f2c4814b0614123249e17cc4f712b26db898897b8/progiter-0.1.3.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:17:27 2020"}