{"info": {"author": "A. Tikhonov", "author_email": "17@itishka.org", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Programming Language :: Python :: 3"], "description": "# Dataclass REST\n\n[![PyPI version](https://badge.fury.io/py/dataclass-rest.svg)](https://badge.fury.io/py/dataclass-rest)\n[![Build Status](https://travis-ci.org/Tishka17/dataclass_rest.svg?branch=master)](https://travis-ci.org/Tishka17/dataclass_rest)\n\nA modern and simple way to create clients for REST like APIs\n\n## Quickstart\n\n\nStep 1. Install\n```bash\npip install dataclass_rest requests\n```\n\n\nStep 2. Declare models\n\n```python\n@dataclass\nclass Todo:\n    id: int\n    user_id: int\n    title: str\n    completed: bool\n```\n\nStep 3. Create and configure client\n\n```python\n\nfrom requests import Session\nfrom dataclass_rest.sync_base import BaseClient\n\nclass RealClient(Client):\n    def __init__(self):\n        super().__init__(\"https://example.com/api\", Session())\n```\n\nStep 4. Declare methods using `get`/`post`/`delete`/`patch`/`put` decorators. \nType hints are required. Body of method is ignored.\n\nUse any method arguments to format URL.\n`body` argument is sent as request body with json. Other arguments, not used in URL are passed as query parameters.\n`get` and `delete` does not have body.\n\n```python\nfrom typing import Optional, List\nfrom requests import Session\nfrom dataclass_rest import get, post, delete\nfrom dataclass_rest.sync_base import Client\n\nclass RealClient(Client):\n    def __init__(self):\n        super().__init__(\"https://example.com/api\", Session())\n\n    @get(\"todos/{id}\")\n    def get_todo(self, id: str) -> Todo:\n        pass\n\n    @get(\"todos\")\n    def list_todos(self, user_id: Optional[int]) -> List[Todo]:\n        pass\n\n    @delete(\"todos/{id}\")\n    def delete_todo(self, id: int):\n        pass\n\n    @post(\"todos\")\n    def create_todo(self, body: Todo) -> Todo:\n        \"\"\"\u0421\u043e\u0437\u0430\u0434\u0435\u043c Todo\"\"\"\n```\n\n## Asyncio\n\nTo use async client insted of sync:\n\n1. Install `aiohttp` (instead of `reuests`)\n2. Change `dataclass_rest.sync_base.Client` to `dataclass_rest.async_base.AsyncClient`\n3. Add `async` keyword to your methods \n\n## Configuring\n\n* Override `_init_factory` or `_init_args_factory` to provide dataclass factory with required settings  \n    (see [datacass_factory](https://github.com/Tishka17/dataclass_factory)).\n* You can use different body argument name if you want. Just pass `body_name` to the decorator.\n* `args_factory` can be configured with scehmas for every argument type.  \n    They are awailable as `args_class` of original method. E.g `RealClient.get_todo.args_class`\n* Custom error handlers can be set adding them to `error_handlers` using `add_handler` method", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tishka17/dataclass_rest", "keywords": "", "license": "Apache2", "maintainer": "", "maintainer_email": "", "name": "dataclass-rest", "package_url": "https://pypi.org/project/dataclass-rest/", "platform": "", "project_url": "https://pypi.org/project/dataclass-rest/", "project_urls": {"Homepage": "https://github.com/tishka17/dataclass_rest"}, "release_url": "https://pypi.org/project/dataclass-rest/0.1/", "requires_dist": null, "requires_python": ">=3.6", "summary": "An utility for writing simple clients for REST like APIs", "version": "0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Dataclass REST</h1>\n<p><a href=\"https://badge.fury.io/py/dataclass-rest\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/5ad370889b4ae34b7997bee578acd55a0b6fa21c/68747470733a2f2f62616467652e667572792e696f2f70792f64617461636c6173732d726573742e737667\"></a>\n<a href=\"https://travis-ci.org/Tishka17/dataclass_rest\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e29c98cd16965abb2ede6b2c439ee0ab6cd3f6fd/68747470733a2f2f7472617669732d63692e6f72672f546973686b6131372f64617461636c6173735f726573742e7376673f6272616e63683d6d6173746572\"></a></p>\n<p>A modern and simple way to create clients for REST like APIs</p>\n<h2>Quickstart</h2>\n<p>Step 1. Install</p>\n<pre>pip install dataclass_rest requests\n</pre>\n<p>Step 2. Declare models</p>\n<pre><span class=\"nd\">@dataclass</span>\n<span class=\"k\">class</span> <span class=\"nc\">Todo</span><span class=\"p\">:</span>\n    <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"nb\">int</span>\n    <span class=\"n\">title</span><span class=\"p\">:</span> <span class=\"nb\">str</span>\n    <span class=\"n\">completed</span><span class=\"p\">:</span> <span class=\"nb\">bool</span>\n</pre>\n<p>Step 3. Create and configure client</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclass_rest.sync_base</span> <span class=\"kn\">import</span> <span class=\"n\">BaseClient</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RealClient</span><span class=\"p\">(</span><span class=\"n\">Client</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"s2\">\"https://example.com/api\"</span><span class=\"p\">,</span> <span class=\"n\">Session</span><span class=\"p\">())</span>\n</pre>\n<p>Step 4. Declare methods using <code>get</code>/<code>post</code>/<code>delete</code>/<code>patch</code>/<code>put</code> decorators.\nType hints are required. Body of method is ignored.</p>\n<p>Use any method arguments to format URL.\n<code>body</code> argument is sent as request body with json. Other arguments, not used in URL are passed as query parameters.\n<code>get</code> and <code>delete</code> does not have body.</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">typing</span> <span class=\"kn\">import</span> <span class=\"n\">Optional</span><span class=\"p\">,</span> <span class=\"n\">List</span>\n<span class=\"kn\">from</span> <span class=\"nn\">requests</span> <span class=\"kn\">import</span> <span class=\"n\">Session</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclass_rest</span> <span class=\"kn\">import</span> <span class=\"n\">get</span><span class=\"p\">,</span> <span class=\"n\">post</span><span class=\"p\">,</span> <span class=\"n\">delete</span>\n<span class=\"kn\">from</span> <span class=\"nn\">dataclass_rest.sync_base</span> <span class=\"kn\">import</span> <span class=\"n\">Client</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">RealClient</span><span class=\"p\">(</span><span class=\"n\">Client</span><span class=\"p\">):</span>\n    <span class=\"k\">def</span> <span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">):</span>\n        <span class=\"nb\">super</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"fm\">__init__</span><span class=\"p\">(</span><span class=\"s2\">\"https://example.com/api\"</span><span class=\"p\">,</span> <span class=\"n\">Session</span><span class=\"p\">())</span>\n\n    <span class=\"nd\">@get</span><span class=\"p\">(</span><span class=\"s2\">\"todos/</span><span class=\"si\">{id}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">get_todo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">str</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Todo</span><span class=\"p\">:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@get</span><span class=\"p\">(</span><span class=\"s2\">\"todos\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">list_todos</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">user_id</span><span class=\"p\">:</span> <span class=\"n\">Optional</span><span class=\"p\">[</span><span class=\"nb\">int</span><span class=\"p\">])</span> <span class=\"o\">-&gt;</span> <span class=\"n\">List</span><span class=\"p\">[</span><span class=\"n\">Todo</span><span class=\"p\">]:</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@delete</span><span class=\"p\">(</span><span class=\"s2\">\"todos/</span><span class=\"si\">{id}</span><span class=\"s2\">\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">delete_todo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"p\">:</span> <span class=\"nb\">int</span><span class=\"p\">):</span>\n        <span class=\"k\">pass</span>\n\n    <span class=\"nd\">@post</span><span class=\"p\">(</span><span class=\"s2\">\"todos\"</span><span class=\"p\">)</span>\n    <span class=\"k\">def</span> <span class=\"nf\">create_todo</span><span class=\"p\">(</span><span class=\"bp\">self</span><span class=\"p\">,</span> <span class=\"n\">body</span><span class=\"p\">:</span> <span class=\"n\">Todo</span><span class=\"p\">)</span> <span class=\"o\">-&gt;</span> <span class=\"n\">Todo</span><span class=\"p\">:</span>\n        <span class=\"sd\">\"\"\"\u0421\u043e\u0437\u0430\u0434\u0435\u043c Todo\"\"\"</span>\n</pre>\n<h2>Asyncio</h2>\n<p>To use async client insted of sync:</p>\n<ol>\n<li>Install <code>aiohttp</code> (instead of <code>reuests</code>)</li>\n<li>Change <code>dataclass_rest.sync_base.Client</code> to <code>dataclass_rest.async_base.AsyncClient</code></li>\n<li>Add <code>async</code> keyword to your methods</li>\n</ol>\n<h2>Configuring</h2>\n<ul>\n<li>Override <code>_init_factory</code> or <code>_init_args_factory</code> to provide dataclass factory with required settings<br>\n(see <a href=\"https://github.com/Tishka17/dataclass_factory\" rel=\"nofollow\">datacass_factory</a>).</li>\n<li>You can use different body argument name if you want. Just pass <code>body_name</code> to the decorator.</li>\n<li><code>args_factory</code> can be configured with scehmas for every argument type.<br>\nThey are awailable as <code>args_class</code> of original method. E.g <code>RealClient.get_todo.args_class</code></li>\n<li>Custom error handlers can be set adding them to <code>error_handlers</code> using <code>add_handler</code> method</li>\n</ul>\n\n          </div>"}, "last_serial": 6894915, "releases": {"0.1": [{"comment_text": "", "digests": {"md5": "fd60df66e9770ec54f0fa95d14ad22ed", "sha256": "3b52578973596649dcd64055b043120db5dee061b57bcac95bdbe10c757f50c1"}, "downloads": -1, "filename": "dataclass_rest-0.1.tar.gz", "has_sig": false, "md5_digest": "fd60df66e9770ec54f0fa95d14ad22ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4864, "upload_time": "2020-03-27T09:38:55", "upload_time_iso_8601": "2020-03-27T09:38:55.682878Z", "url": "https://files.pythonhosted.org/packages/1d/36/1b993ba294b7b43fb38e037aef21b3773ea97ce3ebaa881b85395a881cfc/dataclass_rest-0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "fd60df66e9770ec54f0fa95d14ad22ed", "sha256": "3b52578973596649dcd64055b043120db5dee061b57bcac95bdbe10c757f50c1"}, "downloads": -1, "filename": "dataclass_rest-0.1.tar.gz", "has_sig": false, "md5_digest": "fd60df66e9770ec54f0fa95d14ad22ed", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 4864, "upload_time": "2020-03-27T09:38:55", "upload_time_iso_8601": "2020-03-27T09:38:55.682878Z", "url": "https://files.pythonhosted.org/packages/1d/36/1b993ba294b7b43fb38e037aef21b3773ea97ce3ebaa881b85395a881cfc/dataclass_rest-0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:40:27 2020"}