{"info": {"author": "Kenneth E. Bellock", "author_email": "ken@bellock.net", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Topic :: Scientific/Engineering"], "description": "# Alpha Shape Toolbox\n\n[![PyPI version](https://img.shields.io/pypi/v/alphashape.svg)](https://pypi.python.org/pypi/alphashape/)\n[![PyPI pyversions](https://img.shields.io/pypi/pyversions/alphashape.svg)](https://pypi.python.org/pypi/alphashape/)\n[![Travis](https://api.travis-ci.org/bellockk/alphashape.svg?branch=master)](https://travis-ci.org/bellockk/alphashape/)\n[![CodeCov](https://codecov.io/gh/bellockk/alphashape/branch/master/graph/badge.svg)](https://codecov.io/gh/bellockk/alphashape)\n[![Binder](https://mybinder.org/badge_logo.svg)](https://mybinder.org/v2/gh/bellockk/alphashape/master)\n[![Documentation Status](https://readthedocs.org/projects/alphashape/badge/?version=latest)](http://alphashape.readthedocs.io/?badge=latest)\n[![MIT license](https://img.shields.io/badge/License-MIT-blue.svg)](https://lbesson.mit-license.org/)\n\nToolbox for generating alpha shapes.\n\nAlpha shapes are often used to generalize bounding polygons containing sets of points.  The alpha parameter is defined as the value `a`, such that an edge of a  disk of radius 1/`a` can be drawn between any two edge members of a set of points and still contain all the points. The convex hull, a shape resembling what you would see if you wrapped a rubber band around pegs at all the data points, is an alpha shape where the alpha parameter is equal to zero.  In this toolbox we will be generating alpha complexes, which are closely related to alpha shapes, but which consist of straight lines between the edge points instead of arcs of circles.\n\nhttps://en.wikipedia.org/wiki/Alpha_shape\n\nhttps://en.wikipedia.org/wiki/Convex_hull\n\nCreating alpha shapes around sets of points usually requires a visually interactive step where the alpha parameter for a concave hull is determined by iterating over or bisecting values to approach a best fit.  The alpha shape toolbox will provide workflows to shorten the development loop on this manual process, or to bypass it completely by solving for an alpha shape with particular characteristics.  A python API will be provided to aid in the scripted generation of alpha shapes.  A console application will also be provided as an example usage of the alpha shape toolbox, and to facilitate generation of alpha shapes from the command line.  In addition to the utility of being able to quickly iterate on alpha parameters to generate concave hulls, the framework of this tool set will provide a template for generating GIS tool sets accessible from python, the console, or graphical user interfaces without the licensing restrictions of proprietary tool sets and without having a python installation for the console and user interface.\n\n* Free software: MIT license\n* Documentation: https://alphashape.readthedocs.io.\n\n## Features\n\n### Import Dependencies\n\n\n```python\nimport sys\nfrom descartes import PolygonPatch\nimport matplotlib.pyplot as plt\nimport alphashape\n```\n\n### Define a set of points\n\n\n```python\npoints = [(0., 0.), (0., 1.), (1., 1.), (1., 0.),\n          (0.5, 0.25), (0.5, 0.75), (0.25, 0.5), (0.75, 0.5)]\n```\n\n### Plotting the input points\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(*zip(*points))\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_5_0.png)\n\n\n### Generate an Alpha Shape (Alpha=0.0) (Convex Hull)\nEvery convex hull is an alpha shape, but not every alpha shape is a convex hull.  When the `alphashape` function is called with an alpha parameter of 0, a convex hull will always be returned.\n\n#### Create the alpha shape\n\n\n```python\nalpha_shape = alphashape.alphashape(points, 0.)\n```\n\n#### Plotting the alpha shape over the input data\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(*zip(*points))\nax.add_patch(PolygonPatch(alpha_shape, alpha=0.2))\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_10_0.png)\n\n\n### Generate an Alpha Shape (Alpha=2.0) (Concave Hull)\nAs we increase the alpha parameter value, the bounding shape will begin to fit the sample data with a more tightly fitting bounding box.\n\n#### Create the alpha shape\n\n\n```python\nalpha_shape = alphashape.alphashape(points, 2.0)\n```\n\n#### Plotting the alpha shape over the input data\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(*zip(*points))\nax.add_patch(PolygonPatch(alpha_shape, alpha=0.2))\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_15_0.png)\n\n\n### Generate an Alpha Shape (Alpha=3.5)\nIf you go too high on the alpha parameter, you will start to lose points from the original data set.\n\n#### Create the alpha shape\n\n\n```python\nalpha_shape = alphashape.alphashape(points, 3.5)\n```\n\n#### Plotting the alpha shape over the input data\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(*zip(*points))\nax.add_patch(PolygonPatch(alpha_shape, alpha=0.2))\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_20_0.png)\n\n\n### Generate an Alpha Shape (Alpha=5.0)\nIf you go too far, you will lose everything.\n\n\n```python\nalpha_shape = alphashape.alphashape(points, 5.0)\nprint(alpha_shape)\n```\n\n    GEOMETRYCOLLECTION EMPTY\n\n\n### Generate an Alpha Shape by Solving for an Optimal Alpha Value\nThe alpha parameter can be solved for if it is not provided as an argument, but with large datasets this can take a long time to calculate.\n\n#### Create the alpha shape\n\n\n```python\nalpha_shape = alphashape.alphashape(points)\n```\n\n#### Plotting the alpha shape over the input data\n\n\n```python\nfig, ax = plt.subplots()\nax.scatter(*zip(*points))\nax.add_patch(PolygonPatch(alpha_shape, alpha=0.2))\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_27_0.png)\n\n### Alpha Shapes with GeoPandas\n\n#### Sample Data\n\nThe data used in this notebook can be obtained from the Alaska Department of Transportation and Public Facilities website at the link below.  It consists of a point collection for each of the public airports in Alaska.\n\n[http://www.dot.alaska.gov/stwdplng/mapping/shapefiles.shtml](http://www.dot.alaska.gov/stwdplng/mapping/shapefiles.shtml)\n\n#### Load the Shapefile\n\n\n```python\nimport os\nimport geopandas\ndata = os.path.join(os.getcwd(), 'data', 'Public_Airports_March2018.shp')\ngdf = geopandas.read_file(data)\n```\n\n\n```python\n%matplotlib inline\ngdf.plot()\n```\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_4_1.png)\n\n\n\n```python\ngdf.crs\n```\n\n\n\n\n    {'init': 'epsg:4269'}\n\n\n\n#### Generate Alpha Shape\nThe alpha shape will be generated in the coordinate frame the geodataframe is in.  In this example, we will project into an Albers Equal Area projection, construct our alpha shape in that coordinate system, and then convert back to the source projection.\n\n#### Project to Albers Equal Area Spatial Reference\n\n\n```python\nimport cartopy.crs as ccrs\ngdf_proj = gdf.to_crs(ccrs.AlbersEqualArea().proj4_init)\ngdf_proj.plot()\n```\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_8_1.png)\n\n\n#### Determine the Alpha Shape\n\n\n```python\nimport alphashape\nalpha_shape = alphashape.alphashape(gdf_proj)\nalpha_shape.plot()\n```\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_10_1.png)\n\n\n#### Plotting the Alpha Shape over the Data Points\n#### Plate Carree Projection\n\n\n```python\nimport matplotlib.pyplot as plt\nax = plt.axes(projection=ccrs.PlateCarree())\nax.scatter([p.x for p in gdf_proj['geometry']],\n           [p.y for p in gdf_proj['geometry']],\n           transform=ccrs.AlbersEqualArea())\nax.add_geometries(\n    alpha_shape['geometry'],\n    crs=ccrs.AlbersEqualArea(), alpha=.2)\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_12_0.png)\n\n\n#### Robinson Projection\n\n\n```python\nimport matplotlib.pyplot as plt\nax = plt.axes(projection=ccrs.Robinson())\nax.scatter([p.x for p in gdf_proj['geometry']],\n           [p.y for p in gdf_proj['geometry']],\n           transform=ccrs.AlbersEqualArea())\nax.add_geometries(\n    alpha_shape['geometry'],\n    crs=ccrs.AlbersEqualArea(), alpha=.2)\nplt.show()\n```\n\n\n![png](https://raw.github.com/bellockk/alphashape/master/media/output_14_0.png)\n\n\n## Credits\n\nThis package was created with [Cookiecutter](https://github.com/audreyr/cookiecutter) and the [audreyr/cookiecutter-pypackage](https://github.com/audreyr/cookiecutter-pypackage) project template.\n\n\n# History\n\n## 1.0.1 (2019-05-06)\n\n* Added gallery plot for optimized alpha function.\n* Documentation cleanup.\n\n## 1.0.0 (2019-05-06)\n\n* [#1 Update features in README.md](https://github.com/bellockk/alphashape/issues/1)\n* [#2 Create Application Utilizing the alphashape Toolbox](https://github.com/bellockk/alphashape/issues/2)\n\n## 0.1.10 (2019-05-05)\n\n* Correcting formatting on PyPi long description.\n\n## 0.1.9 (2019-05-05)\n\n* [#7 Include GeoPandas Integration](https://github.com/bellockk/alphashape/issues/7)\n\n## 0.1.8 (2019-05-05)\n\n* [#8 Include capability to optimize alpha parameter](https://github.com/bellockk/alphashape/issues/8)\n\n## 0.1.7 (2019-04-26)\n\n* Complete code coverage of existing capabilities.\n\n## 0.1.6 (2019-04-24)\n\n* [#6 Include Jupyter Notebook in Examples](https://github.com/bellockk/alphashape/issues/6)\n\n## 0.1.5 (2019-04-24)\n\n* [#5 Create an Example Gallery in the Documentation](https://github.com/bellockk/alphashape/issues/5)\n\n## 0.1.4 (2019-04-24)\n\n* Bug fixes.\n\n## 0.1.3 (2019-04-24)\n\n* Bug fixes.\n\n## 0.1.2 (2019-04-24)\n\n* Bug fixes.\n\n## 0.1.1 (2019-04-24)\n\n* Bug fixes.\n\n## 0.1.0 (2019-04-23)\n\n* First release on PyPI.\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/bellockk/alphashape", "keywords": "alphashape", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "alphashape", "package_url": "https://pypi.org/project/alphashape/", "platform": "", "project_url": "https://pypi.org/project/alphashape/", "project_urls": {"Homepage": "https://github.com/bellockk/alphashape"}, "release_url": "https://pypi.org/project/alphashape/1.0.2/", "requires_dist": ["Click (>=6.0)", "click-log (>=0.3.2)", "shapely (>=1.4.0)", "scipy (>=1.0.0)"], "requires_python": "", "summary": "Toolbox for generating alpha shapes.", "version": "1.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Alpha Shape Toolbox</h1>\n<p><a href=\"https://pypi.python.org/pypi/alphashape/\" rel=\"nofollow\"><img alt=\"PyPI version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/94770b406a53a9ae4356cad6a999ac59c6ce8f7f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f616c70686173686170652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/alphashape/\" rel=\"nofollow\"><img alt=\"PyPI pyversions\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c453c06e5b9e7f5dcd399f8ace71f6485f1913f1/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f616c70686173686170652e737667\"></a>\n<a href=\"https://travis-ci.org/bellockk/alphashape/\" rel=\"nofollow\"><img alt=\"Travis\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4f65723ddcb4298fc51792b31613cc781563d386/68747470733a2f2f6170692e7472617669732d63692e6f72672f62656c6c6f636b6b2f616c70686173686170652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://codecov.io/gh/bellockk/alphashape\" rel=\"nofollow\"><img alt=\"CodeCov\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/287bb0ce3e3a60bb092c80d219a4a688b65427f4/68747470733a2f2f636f6465636f762e696f2f67682f62656c6c6f636b6b2f616c70686173686170652f6272616e63682f6d61737465722f67726170682f62616467652e737667\"></a>\n<a href=\"https://mybinder.org/v2/gh/bellockk/alphashape/master\" rel=\"nofollow\"><img alt=\"Binder\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/85e91bbb928104e4ce317951541520c6b9c170e1/68747470733a2f2f6d7962696e6465722e6f72672f62616467655f6c6f676f2e737667\"></a>\n<a href=\"http://alphashape.readthedocs.io/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6990c681191fd2e5ba437702b16224e768d9d784/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f616c70686173686170652f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://lbesson.mit-license.org/\" rel=\"nofollow\"><img alt=\"MIT license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4150014b4dfdd7b565fa18de88e9bb1b8ccd7c08/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d626c75652e737667\"></a></p>\n<p>Toolbox for generating alpha shapes.</p>\n<p>Alpha shapes are often used to generalize bounding polygons containing sets of points.  The alpha parameter is defined as the value <code>a</code>, such that an edge of a  disk of radius 1/<code>a</code> can be drawn between any two edge members of a set of points and still contain all the points. The convex hull, a shape resembling what you would see if you wrapped a rubber band around pegs at all the data points, is an alpha shape where the alpha parameter is equal to zero.  In this toolbox we will be generating alpha complexes, which are closely related to alpha shapes, but which consist of straight lines between the edge points instead of arcs of circles.</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Alpha_shape\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Alpha_shape</a></p>\n<p><a href=\"https://en.wikipedia.org/wiki/Convex_hull\" rel=\"nofollow\">https://en.wikipedia.org/wiki/Convex_hull</a></p>\n<p>Creating alpha shapes around sets of points usually requires a visually interactive step where the alpha parameter for a concave hull is determined by iterating over or bisecting values to approach a best fit.  The alpha shape toolbox will provide workflows to shorten the development loop on this manual process, or to bypass it completely by solving for an alpha shape with particular characteristics.  A python API will be provided to aid in the scripted generation of alpha shapes.  A console application will also be provided as an example usage of the alpha shape toolbox, and to facilitate generation of alpha shapes from the command line.  In addition to the utility of being able to quickly iterate on alpha parameters to generate concave hulls, the framework of this tool set will provide a template for generating GIS tool sets accessible from python, the console, or graphical user interfaces without the licensing restrictions of proprietary tool sets and without having a python installation for the console and user interface.</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://alphashape.readthedocs.io\" rel=\"nofollow\">https://alphashape.readthedocs.io</a>.</li>\n</ul>\n<h2>Features</h2>\n<h3>Import Dependencies</h3>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">sys</span>\n<span class=\"kn\">from</span> <span class=\"nn\">descartes</span> <span class=\"kn\">import</span> <span class=\"n\">PolygonPatch</span>\n<span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"kn\">import</span> <span class=\"nn\">alphashape</span>\n</pre>\n<h3>Define a set of points</h3>\n<pre><span class=\"n\">points</span> <span class=\"o\">=</span> <span class=\"p\">[(</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">1.</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">1.</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">),</span>\n          <span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.25</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.5</span><span class=\"p\">,</span> <span class=\"mf\">0.75</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.25</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"mf\">0.75</span><span class=\"p\">,</span> <span class=\"mf\">0.5</span><span class=\"p\">)]</span>\n</pre>\n<h3>Plotting the input points</h3>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">points</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c04499def39c7b5f4f0efab605c19c0641bb90fa/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f355f302e706e67\"></p>\n<h3>Generate an Alpha Shape (Alpha=0.0) (Convex Hull)</h3>\n<p>Every convex hull is an alpha shape, but not every alpha shape is a convex hull.  When the <code>alphashape</code> function is called with an alpha parameter of 0, a convex hull will always be returned.</p>\n<h4>Create the alpha shape</h4>\n<pre><span class=\"n\">alpha_shape</span> <span class=\"o\">=</span> <span class=\"n\">alphashape</span><span class=\"o\">.</span><span class=\"n\">alphashape</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mf\">0.</span><span class=\"p\">)</span>\n</pre>\n<h4>Plotting the alpha shape over the input data</h4>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">points</span><span class=\"p\">))</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">PolygonPatch</span><span class=\"p\">(</span><span class=\"n\">alpha_shape</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e35c49d65bed8442517e780563eb0d7a958432f4/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f31305f302e706e67\"></p>\n<h3>Generate an Alpha Shape (Alpha=2.0) (Concave Hull)</h3>\n<p>As we increase the alpha parameter value, the bounding shape will begin to fit the sample data with a more tightly fitting bounding box.</p>\n<h4>Create the alpha shape</h4>\n<pre><span class=\"n\">alpha_shape</span> <span class=\"o\">=</span> <span class=\"n\">alphashape</span><span class=\"o\">.</span><span class=\"n\">alphashape</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mf\">2.0</span><span class=\"p\">)</span>\n</pre>\n<h4>Plotting the alpha shape over the input data</h4>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">points</span><span class=\"p\">))</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">PolygonPatch</span><span class=\"p\">(</span><span class=\"n\">alpha_shape</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1925982f711af570e747ae5a33bd9a19d7dc6114/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f31355f302e706e67\"></p>\n<h3>Generate an Alpha Shape (Alpha=3.5)</h3>\n<p>If you go too high on the alpha parameter, you will start to lose points from the original data set.</p>\n<h4>Create the alpha shape</h4>\n<pre><span class=\"n\">alpha_shape</span> <span class=\"o\">=</span> <span class=\"n\">alphashape</span><span class=\"o\">.</span><span class=\"n\">alphashape</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mf\">3.5</span><span class=\"p\">)</span>\n</pre>\n<h4>Plotting the alpha shape over the input data</h4>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">points</span><span class=\"p\">))</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">PolygonPatch</span><span class=\"p\">(</span><span class=\"n\">alpha_shape</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/337b98d4bb76df0b4c4ab6f160a4a9041726d7a6/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f32305f302e706e67\"></p>\n<h3>Generate an Alpha Shape (Alpha=5.0)</h3>\n<p>If you go too far, you will lose everything.</p>\n<pre><span class=\"n\">alpha_shape</span> <span class=\"o\">=</span> <span class=\"n\">alphashape</span><span class=\"o\">.</span><span class=\"n\">alphashape</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">,</span> <span class=\"mf\">5.0</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">alpha_shape</span><span class=\"p\">)</span>\n</pre>\n<pre><code>GEOMETRYCOLLECTION EMPTY\n</code></pre>\n<h3>Generate an Alpha Shape by Solving for an Optimal Alpha Value</h3>\n<p>The alpha parameter can be solved for if it is not provided as an argument, but with large datasets this can take a long time to calculate.</p>\n<h4>Create the alpha shape</h4>\n<pre><span class=\"n\">alpha_shape</span> <span class=\"o\">=</span> <span class=\"n\">alphashape</span><span class=\"o\">.</span><span class=\"n\">alphashape</span><span class=\"p\">(</span><span class=\"n\">points</span><span class=\"p\">)</span>\n</pre>\n<h4>Plotting the alpha shape over the input data</h4>\n<pre><span class=\"n\">fig</span><span class=\"p\">,</span> <span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">subplots</span><span class=\"p\">()</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"nb\">zip</span><span class=\"p\">(</span><span class=\"o\">*</span><span class=\"n\">points</span><span class=\"p\">))</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_patch</span><span class=\"p\">(</span><span class=\"n\">PolygonPatch</span><span class=\"p\">(</span><span class=\"n\">alpha_shape</span><span class=\"p\">,</span> <span class=\"n\">alpha</span><span class=\"o\">=</span><span class=\"mf\">0.2</span><span class=\"p\">))</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/40a505f0aa9bb19fa7f50106a8f48082761d891a/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f32375f302e706e67\"></p>\n<h3>Alpha Shapes with GeoPandas</h3>\n<h4>Sample Data</h4>\n<p>The data used in this notebook can be obtained from the Alaska Department of Transportation and Public Facilities website at the link below.  It consists of a point collection for each of the public airports in Alaska.</p>\n<p><a href=\"http://www.dot.alaska.gov/stwdplng/mapping/shapefiles.shtml\" rel=\"nofollow\">http://www.dot.alaska.gov/stwdplng/mapping/shapefiles.shtml</a></p>\n<h4>Load the Shapefile</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">os</span>\n<span class=\"kn\">import</span> <span class=\"nn\">geopandas</span>\n<span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">path</span><span class=\"o\">.</span><span class=\"n\">join</span><span class=\"p\">(</span><span class=\"n\">os</span><span class=\"o\">.</span><span class=\"n\">getcwd</span><span class=\"p\">(),</span> <span class=\"s1\">'data'</span><span class=\"p\">,</span> <span class=\"s1\">'Public_Airports_March2018.shp'</span><span class=\"p\">)</span>\n<span class=\"n\">gdf</span> <span class=\"o\">=</span> <span class=\"n\">geopandas</span><span class=\"o\">.</span><span class=\"n\">read_file</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n</pre>\n<pre><span class=\"o\">%</span><span class=\"n\">matplotlib</span> <span class=\"n\">inline</span>\n<span class=\"n\">gdf</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/59cecea7390421482416fbe39d289c1aae954e2b/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f345f312e706e67\"></p>\n<pre><span class=\"n\">gdf</span><span class=\"o\">.</span><span class=\"n\">crs</span>\n</pre>\n<pre><code>{'init': 'epsg:4269'}\n</code></pre>\n<h4>Generate Alpha Shape</h4>\n<p>The alpha shape will be generated in the coordinate frame the geodataframe is in.  In this example, we will project into an Albers Equal Area projection, construct our alpha shape in that coordinate system, and then convert back to the source projection.</p>\n<h4>Project to Albers Equal Area Spatial Reference</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">cartopy.crs</span> <span class=\"k\">as</span> <span class=\"nn\">ccrs</span>\n<span class=\"n\">gdf_proj</span> <span class=\"o\">=</span> <span class=\"n\">gdf</span><span class=\"o\">.</span><span class=\"n\">to_crs</span><span class=\"p\">(</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">AlbersEqualArea</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">proj4_init</span><span class=\"p\">)</span>\n<span class=\"n\">gdf_proj</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4048241ea4d4bfa35e9cfc22258cf719c7396fd3/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f385f312e706e67\"></p>\n<h4>Determine the Alpha Shape</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">alphashape</span>\n<span class=\"n\">alpha_shape</span> <span class=\"o\">=</span> <span class=\"n\">alphashape</span><span class=\"o\">.</span><span class=\"n\">alphashape</span><span class=\"p\">(</span><span class=\"n\">gdf_proj</span><span class=\"p\">)</span>\n<span class=\"n\">alpha_shape</span><span class=\"o\">.</span><span class=\"n\">plot</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/6fe2012992298f5f7eefc727e4a9d9ec0b9e9f95/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f31305f312e706e67\"></p>\n<h4>Plotting the Alpha Shape over the Data Points</h4>\n<h4>Plate Carree Projection</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axes</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">PlateCarree</span><span class=\"p\">())</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">([</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">gdf_proj</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">]],</span>\n           <span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">gdf_proj</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">]],</span>\n           <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">AlbersEqualArea</span><span class=\"p\">())</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_geometries</span><span class=\"p\">(</span>\n    <span class=\"n\">alpha_shape</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">],</span>\n    <span class=\"n\">crs</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">AlbersEqualArea</span><span class=\"p\">(),</span> <span class=\"n\">alpha</span><span class=\"o\">=.</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/21f106c366656312dfb735e05542adf8c7dacf8c/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f31325f302e706e67\"></p>\n<h4>Robinson Projection</h4>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"nn\">plt</span>\n<span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">axes</span><span class=\"p\">(</span><span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">Robinson</span><span class=\"p\">())</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">scatter</span><span class=\"p\">([</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">x</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">gdf_proj</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">]],</span>\n           <span class=\"p\">[</span><span class=\"n\">p</span><span class=\"o\">.</span><span class=\"n\">y</span> <span class=\"k\">for</span> <span class=\"n\">p</span> <span class=\"ow\">in</span> <span class=\"n\">gdf_proj</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">]],</span>\n           <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">AlbersEqualArea</span><span class=\"p\">())</span>\n<span class=\"n\">ax</span><span class=\"o\">.</span><span class=\"n\">add_geometries</span><span class=\"p\">(</span>\n    <span class=\"n\">alpha_shape</span><span class=\"p\">[</span><span class=\"s1\">'geometry'</span><span class=\"p\">],</span>\n    <span class=\"n\">crs</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"o\">.</span><span class=\"n\">AlbersEqualArea</span><span class=\"p\">(),</span> <span class=\"n\">alpha</span><span class=\"o\">=.</span><span class=\"mi\">2</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"o\">.</span><span class=\"n\">show</span><span class=\"p\">()</span>\n</pre>\n<p><img alt=\"png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/7a1a17132168192b02221841c67b38e64d5fdd4d/68747470733a2f2f7261772e6769746875622e636f6d2f62656c6c6f636b6b2f616c70686173686170652f6d61737465722f6d656469612f6f75747075745f31345f302e706e67\"></p>\n<h2>Credits</h2>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template.</p>\n<h1>History</h1>\n<h2>1.0.1 (2019-05-06)</h2>\n<ul>\n<li>Added gallery plot for optimized alpha function.</li>\n<li>Documentation cleanup.</li>\n</ul>\n<h2>1.0.0 (2019-05-06)</h2>\n<ul>\n<li><a href=\"https://github.com/bellockk/alphashape/issues/1\" rel=\"nofollow\">#1 Update features in README.md</a></li>\n<li><a href=\"https://github.com/bellockk/alphashape/issues/2\" rel=\"nofollow\">#2 Create Application Utilizing the alphashape Toolbox</a></li>\n</ul>\n<h2>0.1.10 (2019-05-05)</h2>\n<ul>\n<li>Correcting formatting on PyPi long description.</li>\n</ul>\n<h2>0.1.9 (2019-05-05)</h2>\n<ul>\n<li><a href=\"https://github.com/bellockk/alphashape/issues/7\" rel=\"nofollow\">#7 Include GeoPandas Integration</a></li>\n</ul>\n<h2>0.1.8 (2019-05-05)</h2>\n<ul>\n<li><a href=\"https://github.com/bellockk/alphashape/issues/8\" rel=\"nofollow\">#8 Include capability to optimize alpha parameter</a></li>\n</ul>\n<h2>0.1.7 (2019-04-26)</h2>\n<ul>\n<li>Complete code coverage of existing capabilities.</li>\n</ul>\n<h2>0.1.6 (2019-04-24)</h2>\n<ul>\n<li><a href=\"https://github.com/bellockk/alphashape/issues/6\" rel=\"nofollow\">#6 Include Jupyter Notebook in Examples</a></li>\n</ul>\n<h2>0.1.5 (2019-04-24)</h2>\n<ul>\n<li><a href=\"https://github.com/bellockk/alphashape/issues/5\" rel=\"nofollow\">#5 Create an Example Gallery in the Documentation</a></li>\n</ul>\n<h2>0.1.4 (2019-04-24)</h2>\n<ul>\n<li>Bug fixes.</li>\n</ul>\n<h2>0.1.3 (2019-04-24)</h2>\n<ul>\n<li>Bug fixes.</li>\n</ul>\n<h2>0.1.2 (2019-04-24)</h2>\n<ul>\n<li>Bug fixes.</li>\n</ul>\n<h2>0.1.1 (2019-04-24)</h2>\n<ul>\n<li>Bug fixes.</li>\n</ul>\n<h2>0.1.0 (2019-04-23)</h2>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n\n          </div>"}, "last_serial": 6282114, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9549d1948c7e7f829768dd1af3978b63", "sha256": "da3de8af3e4c2314537ec28917765e191adf94391fdf43f46daa58119b3db15e"}, "downloads": -1, "filename": "alphashape-0.1.0.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "9549d1948c7e7f829768dd1af3978b63", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4234, "upload_time": "2019-04-24T17:44:50", "upload_time_iso_8601": "2019-04-24T17:44:50.506325Z", "url": "https://files.pythonhosted.org/packages/49/f5/95a9f38ff4db18ee298d91f7ee1f59d4782ba93f2fc5c930f80e75a2c566/alphashape-0.1.0.linux-x86_64.tar.gz", "yanked": false}, {"comment_text": "", "digests": {"md5": "95dbc3ff5e2739d5d688581d0a7fee5a", "sha256": "c9d278d1eab1a0dce1a68677f148007830d8991be729f2a26987de948eb16145"}, "downloads": -1, "filename": "alphashape-0.1.0-py3.7.egg", "has_sig": false, "md5_digest": "95dbc3ff5e2739d5d688581d0a7fee5a", "packagetype": "bdist_egg", "python_version": "3.7", "requires_python": null, "size": 3945, "upload_time": "2019-04-24T17:44:52", "upload_time_iso_8601": "2019-04-24T17:44:52.319434Z", "url": "https://files.pythonhosted.org/packages/46/e2/48628f5c43a45f638082e2ddf28c823035ae3bdcdf85ffa9d20d5968b3e9/alphashape-0.1.0-py3.7.egg", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "847deb8ed98d2b72f1db8cbb351a6b19", "sha256": "eb7d6560351c0e848d95869e1e7210f0e6813084d3b9bf2e9d34d3f442adcad0"}, "downloads": -1, "filename": "alphashape-0.1.1.linux-x86_64.tar.gz", "has_sig": false, "md5_digest": "847deb8ed98d2b72f1db8cbb351a6b19", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4246, "upload_time": "2019-04-24T17:55:51", "upload_time_iso_8601": "2019-04-24T17:55:51.386096Z", "url": "https://files.pythonhosted.org/packages/4a/10/6977c976b2a66e32caabfdc3d1a1689046533e9460f996ac9b020e4baede/alphashape-0.1.1.linux-x86_64.tar.gz", "yanked": false}], "0.1.10": [{"comment_text": "", "digests": {"md5": "75b206b1e9f8b92710a7944c737a5f56", "sha256": "e565567c573da915e14957ff6b3dd191557bb7358c2df9b81f665d72628a55bc"}, "downloads": -1, "filename": "alphashape-0.1.10-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "75b206b1e9f8b92710a7944c737a5f56", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 7022, "upload_time": "2019-05-06T00:32:09", "upload_time_iso_8601": "2019-05-06T00:32:09.024845Z", "url": "https://files.pythonhosted.org/packages/c1/09/b8336e55e7aeb11a868e78cb08d7c84928d98f316a1633cb03f71d5c98c2/alphashape-0.1.10-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "bcad971f6fe93c6bb5ca84a2013f96a0", "sha256": "9a5f68a199646e7d28033ffea268a969fdb67be044d52fd9fd500a4dcbdd7f38"}, "downloads": -1, "filename": "alphashape-0.1.10.tar.gz", "has_sig": false, "md5_digest": "bcad971f6fe93c6bb5ca84a2013f96a0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12167, "upload_time": "2019-05-06T00:32:10", "upload_time_iso_8601": "2019-05-06T00:32:10.304914Z", "url": "https://files.pythonhosted.org/packages/c0/c4/408de818a05bff716daa06b751f5334b45fcf2ce872be54087725c5c4296/alphashape-0.1.10.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "e4d4b74cb26921fecde48423df39ab9a", "sha256": "5a694c914989709cf78f46c06c9d1526bc296395487c9382ecb9032b59068f84"}, "downloads": -1, "filename": "alphashape-0.1.3-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e4d4b74cb26921fecde48423df39ab9a", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4797, "upload_time": "2019-04-24T21:04:34", "upload_time_iso_8601": "2019-04-24T21:04:34.891487Z", "url": "https://files.pythonhosted.org/packages/ad/9f/0c21155aee5b7bf9d42dc3244c3aacbf74897be3c4f0a85b04654514be43/alphashape-0.1.3-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "f408d4ba0a1ab64c2544cf160a119bb4", "sha256": "6c09754bb91ed95a5ff6c5a0803c057cb75a96e2d423ae6f9b9d111f58856224"}, "downloads": -1, "filename": "alphashape-0.1.3.tar.gz", "has_sig": false, "md5_digest": "f408d4ba0a1ab64c2544cf160a119bb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9268, "upload_time": "2019-04-24T21:04:37", "upload_time_iso_8601": "2019-04-24T21:04:37.178779Z", "url": "https://files.pythonhosted.org/packages/d1/04/89582ea18cf5bd0ce2f8983b8035e496e9d2a220bccf7794ca2ef4f5825c/alphashape-0.1.3.tar.gz", "yanked": false}], "0.1.4": [{"comment_text": "", "digests": {"md5": "5d70269944bdff4ea766aba2ed430033", "sha256": "6d726f69034b2f5663665b7fd19310e8ad31cc2c0605d2176cb9d982739ab622"}, "downloads": -1, "filename": "alphashape-0.1.4-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "5d70269944bdff4ea766aba2ed430033", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 4817, "upload_time": "2019-04-25T16:09:56", "upload_time_iso_8601": "2019-04-25T16:09:56.350169Z", "url": "https://files.pythonhosted.org/packages/a7/f5/3700dd4add8405c4c6e2e5e0ba79c0a983f9714f77e8f1e97971a3792707/alphashape-0.1.4-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "045098d27993d0634ea43c68863ec549", "sha256": "499740366bf87f0410bca64e68dbcda785fbbefc59db35a8dbe22c8e058c1018"}, "downloads": -1, "filename": "alphashape-0.1.4.tar.gz", "has_sig": false, "md5_digest": "045098d27993d0634ea43c68863ec549", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9745, "upload_time": "2019-04-25T16:09:58", "upload_time_iso_8601": "2019-04-25T16:09:58.462782Z", "url": "https://files.pythonhosted.org/packages/9e/cd/1146a28002fae00a0b6e2a278d56082ea06895178d50e32a243e6e2b150e/alphashape-0.1.4.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "66e81a406637fedc64bea177316c10c7", "sha256": "e618a4650dec9aa972260fd8b3eb5c3378896fb8687dc60e588c190f015c736b"}, "downloads": -1, "filename": "alphashape-0.1.5-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "66e81a406637fedc64bea177316c10c7", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5019, "upload_time": "2019-04-25T18:41:21", "upload_time_iso_8601": "2019-04-25T18:41:21.434781Z", "url": "https://files.pythonhosted.org/packages/96/4d/646f57b84915f3dba5c6fb5e3cea5053ff7aee18976e344f163169a33ed4/alphashape-0.1.5-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2facec4ee1f746eededabff9556691d0", "sha256": "e4014cdf80b5fe6acf46a9f943f64568b3dde0adf1c4bd8844317d1433f62eb5"}, "downloads": -1, "filename": "alphashape-0.1.5.tar.gz", "has_sig": false, "md5_digest": "2facec4ee1f746eededabff9556691d0", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9735, "upload_time": "2019-04-25T18:41:23", "upload_time_iso_8601": "2019-04-25T18:41:23.618780Z", "url": "https://files.pythonhosted.org/packages/67/02/e607596cf78b7260752031aef32be2c3487978ff2a997e0854144a8a94d2/alphashape-0.1.5.tar.gz", "yanked": false}], "0.1.6": [{"comment_text": "", "digests": {"md5": "71ce0c9e2584e148fd5f26b698169eb2", "sha256": "b29712524437abe61b81b05adcdd40b0edb73209e94aad65ba6c3e23085f038d"}, "downloads": -1, "filename": "alphashape-0.1.6-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "71ce0c9e2584e148fd5f26b698169eb2", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5025, "upload_time": "2019-04-25T18:57:42", "upload_time_iso_8601": "2019-04-25T18:57:42.446783Z", "url": "https://files.pythonhosted.org/packages/e6/37/991be85da2c0515262692ed85a5917892f67f0d2bdbb97636b1b6ab772b1/alphashape-0.1.6-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3619f60a54a011a28acf63f3885b233f", "sha256": "70dd6c2fcf49d44be82853e6ff0ac8456442b60adf001c10b6a54b3cc423d7e0"}, "downloads": -1, "filename": "alphashape-0.1.6.tar.gz", "has_sig": false, "md5_digest": "3619f60a54a011a28acf63f3885b233f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 9911, "upload_time": "2019-04-25T18:57:44", "upload_time_iso_8601": "2019-04-25T18:57:44.727865Z", "url": "https://files.pythonhosted.org/packages/08/8a/a58d329d233de4341e5e6771640f6e7e88b5448562c731437f52767d604e/alphashape-0.1.6.tar.gz", "yanked": false}], "0.1.7": [{"comment_text": "", "digests": {"md5": "e38db55186f99ebf8c2de2a34fb48924", "sha256": "63e6b257b47d2ad70eff5855484230b51de81fb344679b15b2e060ef15f591a7"}, "downloads": -1, "filename": "alphashape-0.1.7-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e38db55186f99ebf8c2de2a34fb48924", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 5137, "upload_time": "2019-04-26T13:33:48", "upload_time_iso_8601": "2019-04-26T13:33:48.342786Z", "url": "https://files.pythonhosted.org/packages/2c/a1/62e7ea9ae4b31c106bae07bc29ab5c6491ac0cee6d6692237c80bc72bb7f/alphashape-0.1.7-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e852aa021a765828351e38d346125554", "sha256": "9598dc5bc6a298765ca5ea51c937393e6d790eb3bd9cf097a4bd0a3a83d3cc3c"}, "downloads": -1, "filename": "alphashape-0.1.7.tar.gz", "has_sig": false, "md5_digest": "e852aa021a765828351e38d346125554", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10165, "upload_time": "2019-04-26T13:33:50", "upload_time_iso_8601": "2019-04-26T13:33:50.910776Z", "url": "https://files.pythonhosted.org/packages/b3/e8/b746457147839236490e3cafbd7d25464b458b785db60a47d832dcba1f13/alphashape-0.1.7.tar.gz", "yanked": false}], "0.1.8": [{"comment_text": "", "digests": {"md5": "584b2a4a9cf99ba7483c7ef1c0906876", "sha256": "380c6c8c818addbd3ec8fcf54ec1a403c25c59b92fff0defcbee0f225ca9dd18"}, "downloads": -1, "filename": "alphashape-0.1.8-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "584b2a4a9cf99ba7483c7ef1c0906876", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6325, "upload_time": "2019-05-05T18:07:51", "upload_time_iso_8601": "2019-05-05T18:07:51.305744Z", "url": "https://files.pythonhosted.org/packages/66/d5/6e2b5724c0b70fb412b71c346aa13cd6d3f6297b6cd1dc3a68249b2206d0/alphashape-0.1.8-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "494100b92d3da33a8cc82868be421fec", "sha256": "779656e3569ca60ab6be8a69c91cfb74afd1147dae715ab7ad6334a14c300892"}, "downloads": -1, "filename": "alphashape-0.1.8.tar.gz", "has_sig": false, "md5_digest": "494100b92d3da33a8cc82868be421fec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11513, "upload_time": "2019-05-05T18:07:52", "upload_time_iso_8601": "2019-05-05T18:07:52.653245Z", "url": "https://files.pythonhosted.org/packages/01/8c/fd3f5a8215bc444c40e57909795daf7618ddd79b5e8510e6ce28d9ad77dd/alphashape-0.1.8.tar.gz", "yanked": false}], "0.1.9": [{"comment_text": "", "digests": {"md5": "c931c67148630e2cde1919bb0eba4e4d", "sha256": "6082e2f27824c4c222ce526723a86037b9d6a28b3ee886cb827fd451d78aac84"}, "downloads": -1, "filename": "alphashape-0.1.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "c931c67148630e2cde1919bb0eba4e4d", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 6921, "upload_time": "2019-05-05T22:18:14", "upload_time_iso_8601": "2019-05-05T22:18:14.283244Z", "url": "https://files.pythonhosted.org/packages/a3/85/ab91ebfa8aff9bb15659979fe61887dcaa2ed16895709abb758dce18e76e/alphashape-0.1.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d69f00e6f6dc5ec0b19f4cda033ffc87", "sha256": "dc17a6234fa8d55df1906c73a9e9c89f2e91c282ae03492da4fe3345d8f124f5"}, "downloads": -1, "filename": "alphashape-0.1.9.tar.gz", "has_sig": false, "md5_digest": "d69f00e6f6dc5ec0b19f4cda033ffc87", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 12073, "upload_time": "2019-05-05T22:18:15", "upload_time_iso_8601": "2019-05-05T22:18:15.512933Z", "url": "https://files.pythonhosted.org/packages/b7/30/8cd293bee6618c9eb630ddaa19e13f57b428ec2480af75b1c7cdc70d43d7/alphashape-0.1.9.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "ce3eda5f3ce4d619ab6ceef4129c41b1", "sha256": "cda41a71e4d71035788bd85a38f7776c322967f1cce5317d08b631351a5882c9"}, "downloads": -1, "filename": "alphashape-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "ce3eda5f3ce4d619ab6ceef4129c41b1", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10130, "upload_time": "2019-05-06T22:57:18", "upload_time_iso_8601": "2019-05-06T22:57:18.969634Z", "url": "https://files.pythonhosted.org/packages/19/d8/3ed0587d78a26dd364cdb82ac1aaef6b63a7201644a9e5fe65658f01a003/alphashape-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a9951d32e3f558384619c31ca8a56a5a", "sha256": "89b96f22cf8f29f338a687ecce0b72133e5a5e38b8b9f4776b57c188338490fa"}, "downloads": -1, "filename": "alphashape-1.0.0.tar.gz", "has_sig": false, "md5_digest": "a9951d32e3f558384619c31ca8a56a5a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17347, "upload_time": "2019-05-06T22:57:20", "upload_time_iso_8601": "2019-05-06T22:57:20.301280Z", "url": "https://files.pythonhosted.org/packages/b0/4a/831b10a469f613e03e147a6d6155edf49d6f02ac7717f1e3144ee269c42a/alphashape-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "2b97440cbc454065049c51d1579e1af3", "sha256": "30daf96e16d1f7a371bf5d580477dc70984024d7bebbfe18e43ef52cf925dde1"}, "downloads": -1, "filename": "alphashape-1.0.1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "2b97440cbc454065049c51d1579e1af3", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10190, "upload_time": "2019-05-07T02:29:29", "upload_time_iso_8601": "2019-05-07T02:29:29.114733Z", "url": "https://files.pythonhosted.org/packages/a5/6f/6baee0cd5fae79cc256dd32f089970cffd5498c30c86c85d0b2f47b42bea/alphashape-1.0.1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "96089d38c6f054df479c4315ef5d09a2", "sha256": "4f83279dfccc71c17908161ddfa64f3c56727c10022179f7edec70857c636088"}, "downloads": -1, "filename": "alphashape-1.0.1.tar.gz", "has_sig": false, "md5_digest": "96089d38c6f054df479c4315ef5d09a2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17596, "upload_time": "2019-05-07T02:29:30", "upload_time_iso_8601": "2019-05-07T02:29:30.540251Z", "url": "https://files.pythonhosted.org/packages/51/f9/219a075032fb208d09e7b47d71a9d3e4247771f48f8d6a601528e7aeb0a8/alphashape-1.0.1.tar.gz", "yanked": false}], "1.0.2": [{"comment_text": "", "digests": {"md5": "7ff064c12746f4aae1e4c84f8dde7bc8", "sha256": "2a3452297de37f5ab01b039658a0850f253744ec5b9a62733c6bdf6bad8ca826"}, "downloads": -1, "filename": "alphashape-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ff064c12746f4aae1e4c84f8dde7bc8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10261, "upload_time": "2019-12-12T02:26:33", "upload_time_iso_8601": "2019-12-12T02:26:33.813856Z", "url": "https://files.pythonhosted.org/packages/2b/40/24d47ec648d525051b30117c41708311daca4ca5d640ca0cca1fc2b9ca50/alphashape-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae753a2124fc9afa70b54534ece101b4", "sha256": "201657dfa147118c09ab231f1abafcac74247c0a4fccd431312541a71bc074d5"}, "downloads": -1, "filename": "alphashape-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ae753a2124fc9afa70b54534ece101b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15863, "upload_time": "2019-12-12T02:26:35", "upload_time_iso_8601": "2019-12-12T02:26:35.104745Z", "url": "https://files.pythonhosted.org/packages/aa/81/055e3ea8caaa212e3360870915a3b61bcfba8b9e72392e10f72cfe85f37e/alphashape-1.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7ff064c12746f4aae1e4c84f8dde7bc8", "sha256": "2a3452297de37f5ab01b039658a0850f253744ec5b9a62733c6bdf6bad8ca826"}, "downloads": -1, "filename": "alphashape-1.0.2-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7ff064c12746f4aae1e4c84f8dde7bc8", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 10261, "upload_time": "2019-12-12T02:26:33", "upload_time_iso_8601": "2019-12-12T02:26:33.813856Z", "url": "https://files.pythonhosted.org/packages/2b/40/24d47ec648d525051b30117c41708311daca4ca5d640ca0cca1fc2b9ca50/alphashape-1.0.2-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "ae753a2124fc9afa70b54534ece101b4", "sha256": "201657dfa147118c09ab231f1abafcac74247c0a4fccd431312541a71bc074d5"}, "downloads": -1, "filename": "alphashape-1.0.2.tar.gz", "has_sig": false, "md5_digest": "ae753a2124fc9afa70b54534ece101b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 15863, "upload_time": "2019-12-12T02:26:35", "upload_time_iso_8601": "2019-12-12T02:26:35.104745Z", "url": "https://files.pythonhosted.org/packages/aa/81/055e3ea8caaa212e3360870915a3b61bcfba8b9e72392e10f72cfe85f37e/alphashape-1.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 16:19:17 2020"}