{"info": {"author": "Grant Baillie", "author_email": "grant@osafoundation.org", "bugtrack_url": null, "classifiers": ["Development Status :: 3 - Alpha", "Environment :: Console", "Framework :: Chandler", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Overview\n========\n\nZanshin is a library for collaboration over HTTP, WebDAV and CalDAV. It was originally conceived by Lisa Dusseault, and is currently being developed and maintained by Grant Baillie. Its primary client is the Chandler `Sharing Project`_.\n\nGoals\n=====\n\n   * **High-level** API: Zanshin works at the level of resources and properties of resources, rather than HTTP requests and responses. This, coupled with careful thought about what data to persist, will hopefully lead to an easier-to-use and better performing API than what you get by making the obvious 1:1 mapping between Python method calls and HTTP requests.\n   * **Asynchronicity** via the `Twisted networking framework`_. For an excellent discussion of Chandler's use of Twisted, see TwistedHome_. \n\nDocumentation\n=============\n\nSee `Lisa's original design notes`_.\n\nThere are docstrings ranging from sparse to thorough in code itself. You\ncan generate epydoc strings by running::\n\n    python setup.py doc\n\ninside the project directory. (The ``zanshin.webdav`` module contains a\nfairly detailed doctest).\n\nInstallation\n============\n\nThe project uses setuptools_, and is therefore installable via the\n``setup.py`` script, or by using the standard `easy_install`_ script.\n\nSource code\n===========\n\nThe (read-only) subversion trunk is: `http://svn.osafoundation.org/zanshin/trunk`_\n\n.. _http://svn.osafoundation.org/zanshin/trunk: http://svn.osafoundation.org/zanshin/trunk#egg=zanshin-dev\n\nEr, What Does \"Zanshin\" Mean, Anyway?\n=====================================\nZanshin means both readiness and follow-through; it's the attitude of being\nready for what happens and complete in how you react to it. Lisa picked\n\"zanshin\" to sound cool (Japanese!) and to convey the first Goal above.\n\n.. _Sharing Project: http://chandlerproject.org/Projects/SharingProject\n.. _Twisted networking framework: http://twistedmatrix.com\n.. _TwistedHome: http://chandlerproject.org/Projects/TwistedHome\n.. _Lisa's original design notes: http://chandlerproject.org/Journal/LisaDusseault20050315\n.. _setuptools: http://peak.telecommunity.com/DevCenter/setuptools\n.. _easy_install: http://peak.telecommunity.com/DevCenter/EasyInstall", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://chandlerproject.org/Projects/ZanshinProject", "keywords": null, "license": "UNKNOWN", "maintainer": null, "maintainer_email": null, "name": "zanshin", "package_url": "https://pypi.org/project/zanshin/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/zanshin/", "project_urls": {"Download": "UNKNOWN", "Homepage": "http://chandlerproject.org/Projects/ZanshinProject"}, "release_url": "https://pypi.org/project/zanshin/0.6/", "requires_dist": null, "requires_python": null, "summary": "High-level library for HTTP, WebDAV and CalDAV operations", "version": "0.6", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"overview\">\n<h2>Overview</h2>\n<p>Zanshin is a library for collaboration over HTTP, WebDAV and CalDAV. It was originally conceived by Lisa Dusseault, and is currently being developed and maintained by Grant Baillie. Its primary client is the Chandler <a href=\"http://chandlerproject.org/Projects/SharingProject\" rel=\"nofollow\">Sharing Project</a>.</p>\n</div>\n<div id=\"goals\">\n<h2>Goals</h2>\n<blockquote>\n<ul>\n<li><strong>High-level</strong> API: Zanshin works at the level of resources and properties of resources, rather than HTTP requests and responses. This, coupled with careful thought about what data to persist, will hopefully lead to an easier-to-use and better performing API than what you get by making the obvious 1:1 mapping between Python method calls and HTTP requests.</li>\n<li><strong>Asynchronicity</strong> via the <a href=\"http://twistedmatrix.com\" rel=\"nofollow\">Twisted networking framework</a>. For an excellent discussion of Chandler\u2019s use of Twisted, see <a href=\"http://chandlerproject.org/Projects/TwistedHome\" rel=\"nofollow\">TwistedHome</a>.</li>\n</ul>\n</blockquote>\n</div>\n<div id=\"documentation\">\n<h2>Documentation</h2>\n<p>See <a href=\"http://chandlerproject.org/Journal/LisaDusseault20050315\" rel=\"nofollow\">Lisa\u2019s original design notes</a>.</p>\n<p>There are docstrings ranging from sparse to thorough in code itself. You\ncan generate epydoc strings by running:</p>\n<pre>python setup.py doc\n</pre>\n<p>inside the project directory. (The <tt>zanshin.webdav</tt> module contains a\nfairly detailed doctest).</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The project uses <a href=\"http://peak.telecommunity.com/DevCenter/setuptools\" rel=\"nofollow\">setuptools</a>, and is therefore installable via the\n<tt>setup.py</tt> script, or by using the standard <a href=\"http://peak.telecommunity.com/DevCenter/EasyInstall\" rel=\"nofollow\">easy_install</a> script.</p>\n</div>\n<div id=\"source-code\">\n<h2>Source code</h2>\n<p>The (read-only) subversion trunk is: <a href=\"http://svn.osafoundation.org/zanshin/trunk#egg=zanshin-dev\" rel=\"nofollow\">http://svn.osafoundation.org/zanshin/trunk</a></p>\n</div>\n<div id=\"er-what-does-zanshin-mean-anyway\">\n<h2>Er, What Does \u201cZanshin\u201d Mean, Anyway?</h2>\n<p>Zanshin means both readiness and follow-through; it\u2019s the attitude of being\nready for what happens and complete in how you react to it. Lisa picked\n\u201czanshin\u201d to sound cool (Japanese!) and to convey the first Goal above.</p>\n</div>\n\n          </div>"}, "last_serial": 803467, "releases": {"0.6": [{"comment_text": "", "digests": {"md5": "a189f27e26945741042b4172c89136b4", "sha256": "728b4a67f852894877cdbce3949c2b9ccee20e520f7ef93cd976726071c1c84f"}, "downloads": -1, "filename": "zanshin-0.6.tar.gz", "has_sig": false, "md5_digest": "a189f27e26945741042b4172c89136b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74620, "upload_time": "2009-02-04T09:11:22", "upload_time_iso_8601": "2009-02-04T09:11:22Z", "url": "https://files.pythonhosted.org/packages/49/6e/0ba47c03df1d5398a062df112ef2e31eefed446d1474d995d1182cf2ee27/zanshin-0.6.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a189f27e26945741042b4172c89136b4", "sha256": "728b4a67f852894877cdbce3949c2b9ccee20e520f7ef93cd976726071c1c84f"}, "downloads": -1, "filename": "zanshin-0.6.tar.gz", "has_sig": false, "md5_digest": "a189f27e26945741042b4172c89136b4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 74620, "upload_time": "2009-02-04T09:11:22", "upload_time_iso_8601": "2009-02-04T09:11:22Z", "url": "https://files.pythonhosted.org/packages/49/6e/0ba47c03df1d5398a062df112ef2e31eefed446d1474d995d1182cf2ee27/zanshin-0.6.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:19:53 2020"}