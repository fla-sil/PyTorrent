{"info": {"author": "Michael Goerz", "author_email": "mail@michaelgoerz.net", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Console", "Intended Audience :: Developers", "Intended Audience :: System Administrators", "License :: OSI Approved :: BSD License", "Natural Language :: English", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Topic :: Software Development :: Build Tools", "Topic :: System :: Archiving :: Compression", "Topic :: System :: Archiving :: Packaging", "Topic :: Utilities"], "description": "=========\nzip-files\n=========\n\n.. image:: https://img.shields.io/badge/github-goerz/zip__files-blue.svg\n   :alt: Source code on Github\n   :target: https://github.com/goerz/zip_files\n\n.. image:: https://img.shields.io/pypi/v/zip_files.svg\n   :alt: zip-files on the Python Package Index\n   :target: https://pypi.python.org/pypi/zip_files\n\n.. image:: https://img.shields.io/travis/goerz/zip_files.svg\n   :alt: Travis Continuous Integration\n   :target: https://travis-ci.org/goerz/zip_files\n\n.. image:: https://ci.appveyor.com/api/projects/status/k2lqxw97gv2m9gpm/branch/master?svg=true\n   :alt: AppVeyor Continuous Integration\n   :target: https://ci.appveyor.com/project/goerz/zip-files\n\n.. image:: https://img.shields.io/coveralls/github/goerz/zip_files/master.svg\n   :alt: Coveralls\n   :target: https://coveralls.io/github/goerz/zip_files?branch=master\n\n.. image:: https://img.shields.io/badge/License-BSD-green.svg\n   :alt: BSD License\n   :target: https://opensource.org/licenses/BSD-3-Clause\n\nCommand line utilities for creating zip files.\n\nProvides the ``zip-files`` and ``zip-folder`` command line utilities. These are\nintended as an easy platform-independent tool to create zip files with\nan arbitrary file name and an arbitrary root (the top-level folder after\nextracting a zip) from files and folders at arbitrary locations on the file\nsystem.\n\nTypical usage includes:\n\n*   Deploy zip archives of Sphinx-documentation while releasing Python packages:\n\n    .. code-block:: shell\n\n        zip-folder --auto-root --outfile docs/_build/artifacts/mypackage-v1.0.0.zip docs/_build/html\n\n    creates a file ``mypackage-v1.0.0.zip`` in ``docs/_build/artifacts`` that\n    unzips as a folder ``mypackage-v1.0.0`` containing the files originally in\n    ``docs/_build/html/``.\n\n*   Create zip files pulled together from different locations, for emailing:\n\n    .. code-block:: shell\n\n        zip-files -a -o report.zip ./report2020-01.tex /scratch/project/plots/*.pdf\n\n    creates a file ``report.zip`` that unzips as a folder\n    ``report`` containing the file ``report2020-01.tex`` and all the pdf files\n    originally in ``/scratch/project/plots/``.\n\n    .. code-block:: shell\n\n        zip-files -f report2020-01 -o report.zip ./report2020-01.tex /scratch/project/plots/*.pdf\n\n    does the same, but unzips as a folder ``report2020-01`` instead of ``report``.\n\n\n\nDevelopment of zip-files happens on `Github`_.\n\n\nInstallation\n------------\n\nTo install the latest released version of zip-files, run this command in your terminal:\n\n.. code-block:: shell\n\n    pip install zip_files\n\nThis is the preferred method to install zip-files, as it will always install\nthe most recent stable release.  It will result in the executable commands\n``zip-files`` and ``zip-folder`` being added to your environment's ``bin``\nfolder.\n\n.. _Github: https://github.com/goerz/zip_files\n\n\nUsage\n-----\n\nzip-files\n~~~~~~~~~\n\n.. code-block:: console\n\n    Usage: zip-files [OPTIONS] [FILES]...\n\n      Create a zip file containing FILES.\n\n    Options:\n      -h, --help                      Show this message and exit.\n      --version                       Show the version and exit.\n      --debug                         Activate debug logging.\n      -f, --root-folder ROOT_FOLDER   Folder name to prepend to FILES inside the\n                                      zip file.\n      -c, --compression [stored|deflated|bzip2|lzma]\n                                      Zip compression method. The following\n                                      methods are available: \"stored\": no\n                                      compression; \"deflated\": the standard zip\n                                      compression method; \"bzip2\": BZIP2\n                                      compression method (part of the zip standard\n                                      since 2001); \"lzma\": LZMA compression method\n                                      (part of the zip standard since 2006).\n                                      [default: deflated]\n      -a, --auto-root                 If given in combination with --outfile, use\n                                      the stem of the OUTFILE (without path and\n                                      extension) as the value for ROOT_FOLDER\n      -x, --exclude GLOB_PATTERN      Glob-pattern to exclude. This is matched\n                                      from the right against all paths in the zip\n                                      file, see Python pathlib's Path.match\n                                      method. This option can be given multiple\n                                      times.\n      --exclude-dotfiles / --include-dotfiles\n                                      Whether or not to include dotfiles in the\n                                      zip files. By default, dotfiles are\n                                      included.\n      -o, --outfile OUTFILE           The path of the zip file to be written. By\n                                      default, the file is written to stdout.\n\nzip-folder\n~~~~~~~~~~\n\n.. code-block:: console\n\n    Usage: zip-folder [OPTIONS] FOLDER\n\n      Create a zip file containing the FOLDER.\n\n    Options:\n      -h, --help                      Show this message and exit.\n      --version                       Show the version and exit.\n      --debug                         Activate debug logging.\n      -f, --root-folder ROOT_FOLDER   Folder name to use as the top level folder\n                                      inside the zip file (replacing FOLDER).\n      -c, --compression [stored|deflated|bzip2|lzma]\n                                      Zip compression method. The following\n                                      methods are available: \"stored\": no\n                                      compression; \"deflated\": the standard zip\n                                      compression method; \"bzip2\": BZIP2\n                                      compression method (part of the zip standard\n                                      since 2001); \"lzma\": LZMA compression method\n                                      (part of the zip standard since 2006).\n                                      [default: deflated]\n      -a, --auto-root                 If given in combination with --outfile, use\n                                      the stem of the OUTFILE (without path and\n                                      extension) as the value for ROOT_FOLDER\n      -x, --exclude GLOB_PATTERN      Glob-pattern to exclude. This is matched\n                                      from the right against all paths in the zip\n                                      file, see Python pathlib's Path.match\n                                      method. This option can be given multiple\n                                      times.\n      --exclude-dotfiles / --include-dotfiles\n                                      Whether or not to include dotfiles in the\n                                      zip files. By default, dotfiles are\n                                      included.\n      -o, --outfile OUTFILE           The path of the zip file to be written. By\n                                      default, the file is written to stdout.\n\n\n=======\nHistory\n=======\n\n\n0.3.0 (2020-01-19)\n------------------\n\n* Added: option ``--exclude``\n\n\n0.2.0 (2020-01-17)\n------------------\n\n* Added: option ``--auto-root``\n\n\n0.1.0 (2020-01-17)\n------------------\n\n* Initial release\n\n\n", "description_content_type": "text/x-rst", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/goerz/zip_files", "keywords": "zip", "license": "BSD license", "maintainer": "", "maintainer_email": "", "name": "zip-files", "package_url": "https://pypi.org/project/zip-files/", "platform": "", "project_url": "https://pypi.org/project/zip-files/", "project_urls": {"Homepage": "https://github.com/goerz/zip_files"}, "release_url": "https://pypi.org/project/zip-files/0.3.0/", "requires_dist": ["click", "coverage (<5.0) ; extra == 'dev'", "coveralls ; extra == 'dev'", "flake8 ; extra == 'dev'", "gitpython ; extra == 'dev'", "isort ; extra == 'dev'", "ipython ; extra == 'dev'", "pre-commit ; extra == 'dev'", "pdbpp ; extra == 'dev'", "pylint ; extra == 'dev'", "pytest ; extra == 'dev'", "pytest-cov ; extra == 'dev'", "pytest-xdist ; extra == 'dev'", "twine ; extra == 'dev'", "wheel ; extra == 'dev'", "black ; extra == 'dev'"], "requires_python": ">=3.6", "summary": "Command line utilities for creating zip files", "version": "0.3.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"zip-files\">\n<h2>zip-files</h2>\n<a href=\"https://github.com/goerz/zip_files\" rel=\"nofollow\"><img alt=\"Source code on Github\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/27354890be40cb4737b5924fa9411767277a5b47/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f6769746875622d676f65727a2f7a69705f5f66696c65732d626c75652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/zip_files\" rel=\"nofollow\"><img alt=\"zip-files on the Python Package Index\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/316d728926a7a22cd56b455d81869d054b0417d2/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7a69705f66696c65732e737667\"></a>\n<a href=\"https://travis-ci.org/goerz/zip_files\" rel=\"nofollow\"><img alt=\"Travis Continuous Integration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d4e863ad5a848f7cdaf68ba4f293173b1fe60e19/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f676f65727a2f7a69705f66696c65732e737667\"></a>\n<a href=\"https://ci.appveyor.com/project/goerz/zip-files\" rel=\"nofollow\"><img alt=\"AppVeyor Continuous Integration\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/635c8384231261f1dd67d42e7617c3f1452e80ca/68747470733a2f2f63692e6170707665796f722e636f6d2f6170692f70726f6a656374732f7374617475732f6b326c71787739376776326d3967706d2f6272616e63682f6d61737465723f7376673d74727565\"></a>\n<a href=\"https://coveralls.io/github/goerz/zip_files?branch=master\" rel=\"nofollow\"><img alt=\"Coveralls\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/a55bcf09b195c87febde2d8b94537f3e57974e3c/68747470733a2f2f696d672e736869656c64732e696f2f636f766572616c6c732f6769746875622f676f65727a2f7a69705f66696c65732f6d61737465722e737667\"></a>\n<a href=\"https://opensource.org/licenses/BSD-3-Clause\" rel=\"nofollow\"><img alt=\"BSD License\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/02dc33b86e3949bff79e2cb877dcca4dfdc47fdf/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4253442d677265656e2e737667\"></a>\n<p>Command line utilities for creating zip files.</p>\n<p>Provides the <tt><span class=\"pre\">zip-files</span></tt> and <tt><span class=\"pre\">zip-folder</span></tt> command line utilities. These are\nintended as an easy platform-independent tool to create zip files with\nan arbitrary file name and an arbitrary root (the top-level folder after\nextracting a zip) from files and folders at arbitrary locations on the file\nsystem.</p>\n<p>Typical usage includes:</p>\n<ul>\n<li><p>Deploy zip archives of Sphinx-documentation while releasing Python packages:</p>\n<pre>zip-folder --auto-root --outfile docs/_build/artifacts/mypackage-v1.0.0.zip docs/_build/html\n</pre>\n<p>creates a file <tt><span class=\"pre\">mypackage-v1.0.0.zip</span></tt> in <tt>docs/_build/artifacts</tt> that\nunzips as a folder <tt><span class=\"pre\">mypackage-v1.0.0</span></tt> containing the files originally in\n<tt>docs/_build/html/</tt>.</p>\n</li>\n<li><p>Create zip files pulled together from different locations, for emailing:</p>\n<pre>zip-files -a -o report.zip ./report2020-01.tex /scratch/project/plots/*.pdf\n</pre>\n<p>creates a file <tt>report.zip</tt> that unzips as a folder\n<tt>report</tt> containing the file <tt><span class=\"pre\">report2020-01.tex</span></tt> and all the pdf files\noriginally in <tt>/scratch/project/plots/</tt>.</p>\n<pre>zip-files -f report2020-01 -o report.zip ./report2020-01.tex /scratch/project/plots/*.pdf\n</pre>\n<p>does the same, but unzips as a folder <tt><span class=\"pre\">report2020-01</span></tt> instead of <tt>report</tt>.</p>\n</li>\n</ul>\n<p>Development of zip-files happens on <a href=\"https://github.com/goerz/zip_files\" rel=\"nofollow\">Github</a>.</p>\n<div id=\"installation\">\n<h3>Installation</h3>\n<p>To install the latest released version of zip-files, run this command in your terminal:</p>\n<pre>pip install zip_files\n</pre>\n<p>This is the preferred method to install zip-files, as it will always install\nthe most recent stable release.  It will result in the executable commands\n<tt><span class=\"pre\">zip-files</span></tt> and <tt><span class=\"pre\">zip-folder</span></tt> being added to your environment\u2019s <tt>bin</tt>\nfolder.</p>\n</div>\n<div id=\"usage\">\n<h3>Usage</h3>\n<div id=\"id1\">\n<h4>zip-files</h4>\n<pre><span class=\"go\">Usage: zip-files [OPTIONS] [FILES]...\n\n  Create a zip file containing FILES.\n\nOptions:\n  -h, --help                      Show this message and exit.\n  --version                       Show the version and exit.\n  --debug                         Activate debug logging.\n  -f, --root-folder ROOT_FOLDER   Folder name to prepend to FILES inside the\n                                  zip file.\n  -c, --compression [stored|deflated|bzip2|lzma]\n                                  Zip compression method. The following\n                                  methods are available: \"stored\": no\n                                  compression; \"deflated\": the standard zip\n                                  compression method; \"bzip2\": BZIP2\n                                  compression method (part of the zip standard\n                                  since 2001); \"lzma\": LZMA compression method\n                                  (part of the zip standard since 2006).\n                                  [default: deflated]\n  -a, --auto-root                 If given in combination with --outfile, use\n                                  the stem of the OUTFILE (without path and\n                                  extension) as the value for ROOT_FOLDER\n  -x, --exclude GLOB_PATTERN      Glob-pattern to exclude. This is matched\n                                  from the right against all paths in the zip\n                                  file, see Python pathlib's Path.match\n                                  method. This option can be given multiple\n                                  times.\n  --exclude-dotfiles / --include-dotfiles\n                                  Whether or not to include dotfiles in the\n                                  zip files. By default, dotfiles are\n                                  included.\n  -o, --outfile OUTFILE           The path of the zip file to be written. By\n                                  default, the file is written to stdout.</span>\n</pre>\n</div>\n<div id=\"zip-folder\">\n<h4>zip-folder</h4>\n<pre><span class=\"go\">Usage: zip-folder [OPTIONS] FOLDER\n\n  Create a zip file containing the FOLDER.\n\nOptions:\n  -h, --help                      Show this message and exit.\n  --version                       Show the version and exit.\n  --debug                         Activate debug logging.\n  -f, --root-folder ROOT_FOLDER   Folder name to use as the top level folder\n                                  inside the zip file (replacing FOLDER).\n  -c, --compression [stored|deflated|bzip2|lzma]\n                                  Zip compression method. The following\n                                  methods are available: \"stored\": no\n                                  compression; \"deflated\": the standard zip\n                                  compression method; \"bzip2\": BZIP2\n                                  compression method (part of the zip standard\n                                  since 2001); \"lzma\": LZMA compression method\n                                  (part of the zip standard since 2006).\n                                  [default: deflated]\n  -a, --auto-root                 If given in combination with --outfile, use\n                                  the stem of the OUTFILE (without path and\n                                  extension) as the value for ROOT_FOLDER\n  -x, --exclude GLOB_PATTERN      Glob-pattern to exclude. This is matched\n                                  from the right against all paths in the zip\n                                  file, see Python pathlib's Path.match\n                                  method. This option can be given multiple\n                                  times.\n  --exclude-dotfiles / --include-dotfiles\n                                  Whether or not to include dotfiles in the\n                                  zip files. By default, dotfiles are\n                                  included.\n  -o, --outfile OUTFILE           The path of the zip file to be written. By\n                                  default, the file is written to stdout.</span>\n</pre>\n</div>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id2\">\n<h3>0.3.0 (2020-01-19)</h3>\n<ul>\n<li>Added: option <tt><span class=\"pre\">--exclude</span></tt></li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.2.0 (2020-01-17)</h3>\n<ul>\n<li>Added: option <tt><span class=\"pre\">--auto-root</span></tt></li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.0 (2020-01-17)</h3>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 6484012, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8101e24f456414e4c5cf41a6f6a7ccb6", "sha256": "3424b0406199d90bfd1da893afc04e8ee447122a1fc210a4cb9864c1d83bc9db"}, "downloads": -1, "filename": "zip_files-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "8101e24f456414e4c5cf41a6f6a7ccb6", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 5582, "upload_time": "2020-01-17T07:08:14", "upload_time_iso_8601": "2020-01-17T07:08:14.221592Z", "url": "https://files.pythonhosted.org/packages/e0/dd/5722dc680fca5ac9dc3898ab6103221dbac62943708b14d9ef72588067bd/zip_files-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "282674a6c643efba60ccad490fdcab20", "sha256": "de9ee79e2edbf9a8d9bf7f15c19ee55e046b2270fce547d1b5e5f7a0b5c90c58"}, "downloads": -1, "filename": "zip_files-0.1.0.tar.gz", "has_sig": false, "md5_digest": "282674a6c643efba60ccad490fdcab20", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29933, "upload_time": "2020-01-17T07:08:15", "upload_time_iso_8601": "2020-01-17T07:08:15.977486Z", "url": "https://files.pythonhosted.org/packages/97/76/b665eca4bcabc55c0d001fcf34a16d0f8eeaa0c02906492cc6d2ddce2ee8/zip_files-0.1.0.tar.gz", "yanked": false}], "0.1.0rc1": [{"comment_text": "", "digests": {"md5": "770a4bc3c0fececf5edc26cc0488cba9", "sha256": "55d285afc3c46a1a01ace8d2d186464a0f8c7e6f52ad733f05f432a47604a495"}, "downloads": -1, "filename": "zip_files-0.1.0rc1-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "770a4bc3c0fececf5edc26cc0488cba9", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 5533, "upload_time": "2020-01-17T05:09:02", "upload_time_iso_8601": "2020-01-17T05:09:02.324909Z", "url": "https://files.pythonhosted.org/packages/ca/50/c4a04498c1d095c345188664a88f071a276d2f0ea17ccd248c8317b0b8b0/zip_files-0.1.0rc1-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "478b57ff9de5a855d38b0453acf7004f", "sha256": "767bb6ca0eb01035f351611437943ce6bb4de6b553511faa574bd20fcc8db5ac"}, "downloads": -1, "filename": "zip_files-0.1.0rc1.tar.gz", "has_sig": false, "md5_digest": "478b57ff9de5a855d38b0453acf7004f", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 29291, "upload_time": "2020-01-17T05:09:04", "upload_time_iso_8601": "2020-01-17T05:09:04.740196Z", "url": "https://files.pythonhosted.org/packages/6d/f1/cb2981852b6199d2d107ffc58e8e2a35a0257f2abe72b1c5d6909695c177/zip_files-0.1.0rc1.tar.gz", "yanked": false}], "0.2.0": [{"comment_text": "", "digests": {"md5": "3c043142750fb56ab993050818e9461f", "sha256": "f91afa0699864648bcfb51e7e83bdfeec98b959f0051ea780febe6fd7c0ee100"}, "downloads": -1, "filename": "zip_files-0.2.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "3c043142750fb56ab993050818e9461f", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 6711, "upload_time": "2020-01-17T23:46:48", "upload_time_iso_8601": "2020-01-17T23:46:48.041788Z", "url": "https://files.pythonhosted.org/packages/db/67/d88ae4e520341eed7d238f4337eedbbc18c20100d5e114fe5eaea446a879/zip_files-0.2.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "5ee609e66e5e2666d2eb0128feb7686b", "sha256": "04e87f841f1691a65676dd66c9dbd524f62030272175c15a1f1b56c0d0a6720c"}, "downloads": -1, "filename": "zip_files-0.2.0.tar.gz", "has_sig": false, "md5_digest": "5ee609e66e5e2666d2eb0128feb7686b", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 31745, "upload_time": "2020-01-17T23:46:49", "upload_time_iso_8601": "2020-01-17T23:46:49.646672Z", "url": "https://files.pythonhosted.org/packages/b8/17/11a18f22a1cb547492e8bd02804e2b514eb6b6161897806cb5372e96655d/zip_files-0.2.0.tar.gz", "yanked": false}], "0.3.0": [{"comment_text": "", "digests": {"md5": "e5758e062ddb4a6d6ae99689a72e10fe", "sha256": "95559d602bb13d1c2622887156838e92dc3b65b8fb42827742c8592d0fce4704"}, "downloads": -1, "filename": "zip_files-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e5758e062ddb4a6d6ae99689a72e10fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9343, "upload_time": "2020-01-19T22:35:13", "upload_time_iso_8601": "2020-01-19T22:35:13.091656Z", "url": "https://files.pythonhosted.org/packages/f3/99/fc7f65a052d30e62b946924ed6334f8f1ebf7c826646b9e17ab1dff2901c/zip_files-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eec437c628f54b468238d512915ca38", "sha256": "889c5a304aa5808ab380c2de42863193afdf27234d61198f393954809a862d79"}, "downloads": -1, "filename": "zip_files-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2eec437c628f54b468238d512915ca38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35072, "upload_time": "2020-01-19T22:35:14", "upload_time_iso_8601": "2020-01-19T22:35:14.820084Z", "url": "https://files.pythonhosted.org/packages/e5/5a/7e1e42a092b7ceae39d9abe3172363a0ad36370c92eab0d39a256e2a3b94/zip_files-0.3.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "e5758e062ddb4a6d6ae99689a72e10fe", "sha256": "95559d602bb13d1c2622887156838e92dc3b65b8fb42827742c8592d0fce4704"}, "downloads": -1, "filename": "zip_files-0.3.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "e5758e062ddb4a6d6ae99689a72e10fe", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": ">=3.6", "size": 9343, "upload_time": "2020-01-19T22:35:13", "upload_time_iso_8601": "2020-01-19T22:35:13.091656Z", "url": "https://files.pythonhosted.org/packages/f3/99/fc7f65a052d30e62b946924ed6334f8f1ebf7c826646b9e17ab1dff2901c/zip_files-0.3.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "2eec437c628f54b468238d512915ca38", "sha256": "889c5a304aa5808ab380c2de42863193afdf27234d61198f393954809a862d79"}, "downloads": -1, "filename": "zip_files-0.3.0.tar.gz", "has_sig": false, "md5_digest": "2eec437c628f54b468238d512915ca38", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.6", "size": 35072, "upload_time": "2020-01-19T22:35:14", "upload_time_iso_8601": "2020-01-19T22:35:14.820084Z", "url": "https://files.pythonhosted.org/packages/e5/5a/7e1e42a092b7ceae39d9abe3172363a0ad36370c92eab0d39a256e2a3b94/zip_files-0.3.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:16:02 2020"}