{"info": {"author": "Bearer Team", "author_email": "engineering+python@bearer.sh", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Environment :: Other Environment", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3 :: Only", "Programming Language :: Python :: Implementation :: CPython", "Programming Language :: Python :: Implementation :: PyPy", "Topic :: Internet", "Topic :: Internet :: WWW/HTTP", "Topic :: Software Development :: Libraries :: Python Modules", "Topic :: Utilities"], "description": "# Bearer Agent\n\n[![Build Status](https://build.bearer.tech/api/badges/Bearer/python-agent/status.svg)](https://build.bearer.tech/Bearer/python-agent)\n\nObserve, control and receive alerts on your third-party APIs by adding the\n[Bearer agent](https://www.bearer.sh) to your Python application.\n\n## Documentation\n\nThe documentation is hosted at https://python.docs.bearer.sh/\n\n## Installation\n\nThe Bearer agent requires **Python 3.x >= 3.5**.\n\nInstall from PyPI:\n\n```sh\n$ pip install bearer-agent\n```\n\nThen set up the Bearer agent with your Secret Key (available on the\n[Bearer dashboard](https://app.bearer.sh/keys)):\n\n```python\nimport bearer_agent\n\nbearer_agent.init(secret_key=\"YOUR_BEARER_SECRET_KEY\")\n```\n\n## Keeping your data protected\n\nWe recommend you sanitize your data before sending it to the Bearer dashboard.\nWe think it's best to  setup the sanitization level that best suits your needs.\nAn example using the default values is as follows:\n\n```python\nbearer_agent.init(\n    strip_sensitive_data=True,\n    strip_sensitive_keys=(\n        \"^authorization$|\"\n        \"^password$|\"\n        \"^secret$|\"\n        \"^passwd$|\"\n        \"^api.?key$|\"\n        \"^access.?token$|\"\n        \"^auth.?token$|\"\n        \"^credentials$|\"\n        \"^mysql_pwd$|\"\n        \"^stripetoken$|\"\n        \"^card.?number.?$|\"\n        \"^secret$|\"\n        \"^client.?id$|\"\n        \"^client.?secret$\"\n    ),\n    strip_sensitive_regex=(\n        r\"[a-zA-Z0-9]{1}[a-zA-Z0-9.!#$%&\u2019*+=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\\\.[a-zA-Z0-9-]+)*|\"\n        r\"(?:\\\\d[ -]*?){13,16}\"\n    )\n)\n```\n\n## Development\n\n### Running tests\n\nTo run a format check (black), the linter (flake8) and tests (pytest):\n\n```sh\n$ tox\n```\n\nTo only run the tests:\n\n```sh\n$ tox -e py37\n```\n\n### Git hooks\n\nThere are Git hooks to format the code and run the linter when committing.\n\nInstall https://pre-commit.com/ and then run:\n\n```sh\n$ pre-commit install\n```\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://www.bearer.sh", "keywords": "", "license": "Apache License 2.0", "maintainer": "", "maintainer_email": "", "name": "bearer-agent", "package_url": "https://pypi.org/project/bearer-agent/", "platform": "", "project_url": "https://pypi.org/project/bearer-agent/", "project_urls": {"Homepage": "http://www.bearer.sh"}, "release_url": "https://pypi.org/project/bearer-agent/1.0.1/", "requires_dist": ["setuptools (>=3.0)", "urllib3 (<2,>=1)", "wrapt (<2,>=1)", "black ; extra == 'tests'", "flake8 ; extra == 'tests'", "pytest ; extra == 'tests'", "requests ; extra == 'tests'", "httpx ; extra == 'tests'"], "requires_python": ">=3.5", "summary": "Bearer Agent", "version": "1.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <h1>Bearer Agent</h1>\n<p><a href=\"https://build.bearer.tech/Bearer/python-agent\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1db5ab279c60d0dd12b993b2ae60ef1e4b7c514a/68747470733a2f2f6275696c642e6265617265722e746563682f6170692f6261646765732f4265617265722f707974686f6e2d6167656e742f7374617475732e737667\"></a></p>\n<p>Observe, control and receive alerts on your third-party APIs by adding the\n<a href=\"https://www.bearer.sh\" rel=\"nofollow\">Bearer agent</a> to your Python application.</p>\n<h2>Documentation</h2>\n<p>The documentation is hosted at <a href=\"https://python.docs.bearer.sh/\" rel=\"nofollow\">https://python.docs.bearer.sh/</a></p>\n<h2>Installation</h2>\n<p>The Bearer agent requires <strong>Python 3.x &gt;= 3.5</strong>.</p>\n<p>Install from PyPI:</p>\n<pre>$ pip install bearer-agent\n</pre>\n<p>Then set up the Bearer agent with your Secret Key (available on the\n<a href=\"https://app.bearer.sh/keys\" rel=\"nofollow\">Bearer dashboard</a>):</p>\n<pre><span class=\"kn\">import</span> <span class=\"nn\">bearer_agent</span>\n\n<span class=\"n\">bearer_agent</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span><span class=\"n\">secret_key</span><span class=\"o\">=</span><span class=\"s2\">\"YOUR_BEARER_SECRET_KEY\"</span><span class=\"p\">)</span>\n</pre>\n<h2>Keeping your data protected</h2>\n<p>We recommend you sanitize your data before sending it to the Bearer dashboard.\nWe think it's best to  setup the sanitization level that best suits your needs.\nAn example using the default values is as follows:</p>\n<pre><span class=\"n\">bearer_agent</span><span class=\"o\">.</span><span class=\"n\">init</span><span class=\"p\">(</span>\n    <span class=\"n\">strip_sensitive_data</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">,</span>\n    <span class=\"n\">strip_sensitive_keys</span><span class=\"o\">=</span><span class=\"p\">(</span>\n        <span class=\"s2\">\"^authorization$|\"</span>\n        <span class=\"s2\">\"^password$|\"</span>\n        <span class=\"s2\">\"^secret$|\"</span>\n        <span class=\"s2\">\"^passwd$|\"</span>\n        <span class=\"s2\">\"^api.?key$|\"</span>\n        <span class=\"s2\">\"^access.?token$|\"</span>\n        <span class=\"s2\">\"^auth.?token$|\"</span>\n        <span class=\"s2\">\"^credentials$|\"</span>\n        <span class=\"s2\">\"^mysql_pwd$|\"</span>\n        <span class=\"s2\">\"^stripetoken$|\"</span>\n        <span class=\"s2\">\"^card.?number.?$|\"</span>\n        <span class=\"s2\">\"^secret$|\"</span>\n        <span class=\"s2\">\"^client.?id$|\"</span>\n        <span class=\"s2\">\"^client.?secret$\"</span>\n    <span class=\"p\">),</span>\n    <span class=\"n\">strip_sensitive_regex</span><span class=\"o\">=</span><span class=\"p\">(</span>\n        <span class=\"sa\">r</span><span class=\"s2\">\"[a-zA-Z0-9]</span><span class=\"si\">{1}</span><span class=\"s2\">[a-zA-Z0-9.!#$%&amp;\u2019*+=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:</span><span class=\"se\">\\\\</span><span class=\"s2\">.[a-zA-Z0-9-]+)*|\"</span>\n        <span class=\"sa\">r</span><span class=\"s2\">\"(?:</span><span class=\"se\">\\\\</span><span class=\"s2\">d[ -]*?){13,16}\"</span>\n    <span class=\"p\">)</span>\n<span class=\"p\">)</span>\n</pre>\n<h2>Development</h2>\n<h3>Running tests</h3>\n<p>To run a format check (black), the linter (flake8) and tests (pytest):</p>\n<pre>$ tox\n</pre>\n<p>To only run the tests:</p>\n<pre>$ tox -e py37\n</pre>\n<h3>Git hooks</h3>\n<p>There are Git hooks to format the code and run the linter when committing.</p>\n<p>Install <a href=\"https://pre-commit.com/\" rel=\"nofollow\">https://pre-commit.com/</a> and then run:</p>\n<pre>$ pre-commit install\n</pre>\n\n          </div>"}, "last_serial": 7130067, "releases": {"1.0.0": [{"comment_text": "", "digests": {"md5": "73985b66a8ce1ca11b767e745a16d9c5", "sha256": "2ea297bd86ae15ba60cf2833547f812bcf921d774937cc4476472065b2a26981"}, "downloads": -1, "filename": "bearer_agent-1.0.0-py3-none-any.whl", "has_sig": false, "md5_digest": "73985b66a8ce1ca11b767e745a16d9c5", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29467, "upload_time": "2020-04-29T13:00:59", "upload_time_iso_8601": "2020-04-29T13:00:59.432850Z", "url": "https://files.pythonhosted.org/packages/4b/13/7efd8d899da3651eb7c7d6dceed9ca33f31d434c28973313ac0bd818a461/bearer_agent-1.0.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "da30baef695feb458f3196af99361d31", "sha256": "81aefb9041a81c8b031613615074d26413576139ace27c28b84a2bdb89114aa6"}, "downloads": -1, "filename": "bearer-agent-1.0.0.tar.gz", "has_sig": false, "md5_digest": "da30baef695feb458f3196af99361d31", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 20270, "upload_time": "2020-04-29T13:01:01", "upload_time_iso_8601": "2020-04-29T13:01:01.473868Z", "url": "https://files.pythonhosted.org/packages/20/71/003027784c1d3d77d1381461dc2412f65f73cd4e5fe2816f0bbede68100a/bearer-agent-1.0.0.tar.gz", "yanked": false}], "1.0.1": [{"comment_text": "", "digests": {"md5": "674a5ebc6a52e36d1808455c65e8aaab", "sha256": "361dcc58ea69f7f851759f71b95001d32b4a04eb4d9b6b955f4a6c57ed92136f"}, "downloads": -1, "filename": "bearer_agent-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "674a5ebc6a52e36d1808455c65e8aaab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29841, "upload_time": "2020-04-29T16:14:38", "upload_time_iso_8601": "2020-04-29T16:14:38.139782Z", "url": "https://files.pythonhosted.org/packages/dc/82/ae8a5660db4d01becf6ceadf51b3210d3604a26300e35b55f24c3ea3005e/bearer_agent-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a56c781e0ca16d208a27bb8997c3fff8", "sha256": "e4e8d1d7ed76484fa86eded6ed1ff137135bf1e4241d904e02dde9cf94342e0e"}, "downloads": -1, "filename": "bearer-agent-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a56c781e0ca16d208a27bb8997c3fff8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 20773, "upload_time": "2020-04-29T16:14:39", "upload_time_iso_8601": "2020-04-29T16:14:39.042873Z", "url": "https://files.pythonhosted.org/packages/d9/22/caf7dd5d3c65e327730044bd0b4eefbf3d026b568ba1b769d7525d765a8c/bearer-agent-1.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "674a5ebc6a52e36d1808455c65e8aaab", "sha256": "361dcc58ea69f7f851759f71b95001d32b4a04eb4d9b6b955f4a6c57ed92136f"}, "downloads": -1, "filename": "bearer_agent-1.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "674a5ebc6a52e36d1808455c65e8aaab", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": ">=3.5", "size": 29841, "upload_time": "2020-04-29T16:14:38", "upload_time_iso_8601": "2020-04-29T16:14:38.139782Z", "url": "https://files.pythonhosted.org/packages/dc/82/ae8a5660db4d01becf6ceadf51b3210d3604a26300e35b55f24c3ea3005e/bearer_agent-1.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a56c781e0ca16d208a27bb8997c3fff8", "sha256": "e4e8d1d7ed76484fa86eded6ed1ff137135bf1e4241d904e02dde9cf94342e0e"}, "downloads": -1, "filename": "bearer-agent-1.0.1.tar.gz", "has_sig": false, "md5_digest": "a56c781e0ca16d208a27bb8997c3fff8", "packagetype": "sdist", "python_version": "source", "requires_python": ">=3.5", "size": 20773, "upload_time": "2020-04-29T16:14:39", "upload_time_iso_8601": "2020-04-29T16:14:39.042873Z", "url": "https://files.pythonhosted.org/packages/d9/22/caf7dd5d3c65e327730044bd0b4eefbf3d026b568ba1b769d7525d765a8c/bearer-agent-1.0.1.tar.gz", "yanked": false}], "timestamp": "Thu May  7 22:37:56 2020"}