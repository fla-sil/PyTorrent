{"info": {"author": "Sam et Max", "author_email": "lesametlemax@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 1 - Planning", "Intended Audience :: Developers", "Natural Language :: English", "Operating System :: OS Independent", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3.3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5"], "description": "Wonderful Wrappers: unobtrusive wrappers improving Python builtins and more\n=============================================================================\n\n.. image:: http://travis-ci.org/Tygs/ww.svg?branch=master\n    :target: https://travis-ci.org/Tygs/ww\n.. image:: http://coveralls.io/repos/github/Tygs/ww/badge.svg?branch=master\n    :target: https://coveralls.io/github/Tygs/ww?branch=master\n.. image:: https://readthedocs.org/projects/wonderful-wrappers/badge/?version=latest\n    :target: http://wonderful-wrappers.readthedocs.io/en/latest/?badge=latest\n    :alt: Documentation Status\n.. image:: https://badge.fury.io/py/ww.svg\n    :target: https://badge.fury.io/py/ww\n    :alt: Version published on the Python Package Index\n\n- **Compatibility:** CPython 2.7+/3.3+ and the last stable versions of pypy2.\n- **Platform:** Agnostic. But only tested on GNU/Linux for now.\n- **Version:** 0.2\n- `Documentation`_.\n\n**Install with**::\n\n  pip install ww\n\n\nEver wish you could...\n------------------------\n\nlazily slice generators?\n\n::\n\n    >>> from ww import g\n    >>> gen = g(x * x for x in range(100))\n    >>> gen\n    <IterableWrapper generator>\n    >>> for element in g(x * x for x in range(100))[3: 6]:\n    ...     print(element)\n    ...\n    9\n    16\n    25\n\nadd dictionaries?\n\n::\n\n    >>> from ww import d\n    >>> dic = d({'a': 1})\n    >>> dic\n    {'a': 1}\n    >>>  dic + {'b': 2}\n    {'b': 2, 'a': 1}\n\nhave a `len` attribute on lists?\n\n::\n\n    >>> from ww import l\n    >>> lst = l([1, 2, 3])\n    >>> lst\n    [1, 2, 3]\n    >>> lst.len\n    3\n\n`join()` from tuple?\n\n::\n\n    >>> from ww import t\n    >>> tpl = t((1, 2, 3))\n    >>> tpl\n    (1, 2, 3)\n    >>> tpl.join(',')  # oh, it also autocasts to string. And its configurable.\n    u'1,2,3'\n\n`replace()` multiple caracters at once in a string?\n\n::\n\n    >>> from ww import s\n    >>> string = s('fizz buzz')\n    >>> string  # strings try very hard to be consistent on Python 2 and 3\n    u'fizz buzz'\n    >>> string.replace(('i', 'u'), 'o')  # the original signature is ok too\n    u'fozz bozz'\n\nAnd there are many, many, more goodies.\n\n\nWARNING\n--------\n\nThe software is currently in early stage. Only s() and g() are considered\nwell documented and tested, and even them deserve some more love.\nYou'll also meet some empty files for future ideas.\n\nWe choose to make an early release under the pressing request of colleagues\neager to try it but it's not the final product. Quality is on the way.\n\nAlso, we WILL break the API until we reach 1.0, from which we'll switch\nto semver and secure the API.\n\n\nDevelopment\n------------\n\nYou can offer PR with your contributions to ww. They should include unit tests,\ndocstrings, type definitions and a new entry in the documentation. And\nfollow the style conventions:\n\n - Python: `PEP8`_\n - Docstrings: `Google style`_\n\nGet the full repository:\n\n    git clone https://github.com/Tygs/ww.git\n\nAnd move inside the ww directory.\n\nInstall ww and the dependancies for dev::\n\n    python setup.py develop\n    pip install -r dev-requirements.txt\n\nDeactivate dev mode:\n\n    python setup.py develop --uninstall\n\nRunning unit tests on your current Python::\n\n    python setup.py test\n\nRun tests coverage with your current Python::\n\n    # cmd only coverage\n    py.test --cov ww tests\n    # dump an HTML report in htmlcov dir\n    py.test  --cov-report html --cov ww tests\n\nWe have many test environements to build the doc, validate the code against\nvarious checkers and linters or run unit tests on several Python interpreters.\n\nYou can list them all with::\n\n     tox -l\n\nE.G::\n\n    $ tox -l\n    flake8\n    py35\n    py34\n    py33\n    py27\n    pypy2\n    doc\n    coverage\n    mypy\n    bandit\n\nYou can run them individually with::\n\n    tox -e env_name\n\nE.G:\n\n    tox -e doc # builds the documentation\n\nAll envs with a name starting with \"py\" requires that you have the matching\nPython interpreter installed on your system to be ran.\n\nE.G: py33 requires you to have CPython 3.3 installed on your machine, and pypy2\n supposes you have PyPy2 on your machine.\n\nThe mypy, bandit and doc env require you to have Python3.5 installed.\n\nRunning all the tests in all envs can be done with:\n\n    tox\n\nBefore you do a PR, it's better if you can do this, since it will run the\nthe most tests. But remember if you don't have the matching interpreters\nthey will be skipped.\n\nIn any case, running the checkers and linters is strongly advised, as any PR\nfailing them will be rejected.\n\nVersioning scheme\n------------------\n\nVersioning follow `SemVer`_, althoug we won't commit to stability before version 1.0.\n\nRelease with X.Y.Z will be of 2 kinds:\n\n- if Y is odd, the release will add features.\n- if Y is even or Z > 0, the release will be dedicated to bug fixing,\n  documentation, API improvment and performances.\n\nE.G.:\n\n- 0.2.1: 1 > 0 so no new features.\n- 1.4.1: 4 is even, so no new features.\n- 2.1.0: 1 is odd, you may see new feature in this release.\n\n\n.. _PEP8: https://www.python.org/dev/peps/pep-0008/\n.. _Google style: http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\n.. _Documentation: http://wonderful-wrappers.readthedocs.io/\n.. _SemVer: http://semver.org/", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tygs/ww/", "keywords": "ww", "license": "MIT", "maintainer": null, "maintainer_email": null, "name": "ww", "package_url": "https://pypi.org/project/ww/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/ww/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/tygs/ww/"}, "release_url": "https://pypi.org/project/ww/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Wrappers for Python builtins with higher-level APIs", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/Tygs/ww\" rel=\"nofollow\"><img alt=\"http://travis-ci.org/Tygs/ww.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d386d8b0b456a4d4cf4fece1b6d8748ef28bf261/687474703a2f2f7472617669732d63692e6f72672f547967732f77772e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://coveralls.io/github/Tygs/ww?branch=master\" rel=\"nofollow\"><img alt=\"http://coveralls.io/repos/github/Tygs/ww/badge.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ac797e6175f4f254cfb2a0916c3ffb9788204ff1/687474703a2f2f636f766572616c6c732e696f2f7265706f732f6769746875622f547967732f77772f62616467652e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"http://wonderful-wrappers.readthedocs.io/en/latest/?badge=latest\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/c3cd4a166998809f2d85413a2b5ff808a7f3361e/68747470733a2f2f72656164746865646f63732e6f72672f70726f6a656374732f776f6e64657266756c2d77726170706572732f62616467652f3f76657273696f6e3d6c6174657374\"></a>\n<a href=\"https://badge.fury.io/py/ww\" rel=\"nofollow\"><img alt=\"Version published on the Python Package Index\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/f8cfe4b865963eeb877b56ff73af192571e16f2c/68747470733a2f2f62616467652e667572792e696f2f70792f77772e737667\"></a>\n<ul>\n<li><strong>Compatibility:</strong> CPython 2.7+/3.3+ and the last stable versions of pypy2.</li>\n<li><strong>Platform:</strong> Agnostic. But only tested on GNU/Linux for now.</li>\n<li><strong>Version:</strong> 0.2</li>\n<li><a href=\"http://wonderful-wrappers.readthedocs.io/\" rel=\"nofollow\">Documentation</a>.</li>\n</ul>\n<p><strong>Install with</strong>:</p>\n<pre>pip install ww\n</pre>\n<div id=\"ever-wish-you-could\">\n<h2>Ever wish you could\u2026</h2>\n<p>lazily slice generators?</p>\n<pre>&gt;&gt;&gt; from ww import g\n&gt;&gt;&gt; gen = g(x * x for x in range(100))\n&gt;&gt;&gt; gen\n&lt;IterableWrapper generator&gt;\n&gt;&gt;&gt; for element in g(x * x for x in range(100))[3: 6]:\n...     print(element)\n...\n9\n16\n25\n</pre>\n<p>add dictionaries?</p>\n<pre>&gt;&gt;&gt; from ww import d\n&gt;&gt;&gt; dic = d({'a': 1})\n&gt;&gt;&gt; dic\n{'a': 1}\n&gt;&gt;&gt;  dic + {'b': 2}\n{'b': 2, 'a': 1}\n</pre>\n<p>have a <cite>len</cite> attribute on lists?</p>\n<pre>&gt;&gt;&gt; from ww import l\n&gt;&gt;&gt; lst = l([1, 2, 3])\n&gt;&gt;&gt; lst\n[1, 2, 3]\n&gt;&gt;&gt; lst.len\n3\n</pre>\n<p><cite>join()</cite> from tuple?</p>\n<pre>&gt;&gt;&gt; from ww import t\n&gt;&gt;&gt; tpl = t((1, 2, 3))\n&gt;&gt;&gt; tpl\n(1, 2, 3)\n&gt;&gt;&gt; tpl.join(',')  # oh, it also autocasts to string. And its configurable.\nu'1,2,3'\n</pre>\n<p><cite>replace()</cite> multiple caracters at once in a string?</p>\n<pre>&gt;&gt;&gt; from ww import s\n&gt;&gt;&gt; string = s('fizz buzz')\n&gt;&gt;&gt; string  # strings try very hard to be consistent on Python 2 and 3\nu'fizz buzz'\n&gt;&gt;&gt; string.replace(('i', 'u'), 'o')  # the original signature is ok too\nu'fozz bozz'\n</pre>\n<p>And there are many, many, more goodies.</p>\n</div>\n<div id=\"warning\">\n<h2>WARNING</h2>\n<p>The software is currently in early stage. Only s() and g() are considered\nwell documented and tested, and even them deserve some more love.\nYou\u2019ll also meet some empty files for future ideas.</p>\n<p>We choose to make an early release under the pressing request of colleagues\neager to try it but it\u2019s not the final product. Quality is on the way.</p>\n<p>Also, we WILL break the API until we reach 1.0, from which we\u2019ll switch\nto semver and secure the API.</p>\n</div>\n<div id=\"development\">\n<h2>Development</h2>\n<p>You can offer PR with your contributions to ww. They should include unit tests,\ndocstrings, type definitions and a new entry in the documentation. And\nfollow the style conventions:</p>\n<blockquote>\n<ul>\n<li>Python: <a href=\"https://www.python.org/dev/peps/pep-0008/\" rel=\"nofollow\">PEP8</a></li>\n<li>Docstrings: <a href=\"http://sphinxcontrib-napoleon.readthedocs.io/en/latest/example_google.html\" rel=\"nofollow\">Google style</a></li>\n</ul>\n</blockquote>\n<p>Get the full repository:</p>\n<blockquote>\ngit clone <a href=\"https://github.com/Tygs/ww.git\" rel=\"nofollow\">https://github.com/Tygs/ww.git</a></blockquote>\n<p>And move inside the ww directory.</p>\n<p>Install ww and the dependancies for dev:</p>\n<pre>python setup.py develop\npip install -r dev-requirements.txt\n</pre>\n<p>Deactivate dev mode:</p>\n<blockquote>\npython setup.py develop \u2013uninstall</blockquote>\n<p>Running unit tests on your current Python:</p>\n<pre>python setup.py test\n</pre>\n<p>Run tests coverage with your current Python:</p>\n<pre># cmd only coverage\npy.test --cov ww tests\n# dump an HTML report in htmlcov dir\npy.test  --cov-report html --cov ww tests\n</pre>\n<p>We have many test environements to build the doc, validate the code against\nvarious checkers and linters or run unit tests on several Python interpreters.</p>\n<p>You can list them all with:</p>\n<pre>tox -l\n</pre>\n<p>E.G:</p>\n<pre>$ tox -l\nflake8\npy35\npy34\npy33\npy27\npypy2\ndoc\ncoverage\nmypy\nbandit\n</pre>\n<p>You can run them individually with:</p>\n<pre>tox -e env_name\n</pre>\n<p>E.G:</p>\n<blockquote>\ntox -e doc # builds the documentation</blockquote>\n<p>All envs with a name starting with \u201cpy\u201d requires that you have the matching\nPython interpreter installed on your system to be ran.</p>\n<dl>\n<dt>E.G: py33 requires you to have CPython 3.3 installed on your machine, and pypy2</dt>\n<dd>supposes you have PyPy2 on your machine.</dd>\n</dl>\n<p>The mypy, bandit and doc env require you to have Python3.5 installed.</p>\n<p>Running all the tests in all envs can be done with:</p>\n<blockquote>\ntox</blockquote>\n<p>Before you do a PR, it\u2019s better if you can do this, since it will run the\nthe most tests. But remember if you don\u2019t have the matching interpreters\nthey will be skipped.</p>\n<p>In any case, running the checkers and linters is strongly advised, as any PR\nfailing them will be rejected.</p>\n</div>\n<div id=\"versioning-scheme\">\n<h2>Versioning scheme</h2>\n<p>Versioning follow <a href=\"http://semver.org/\" rel=\"nofollow\">SemVer</a>, althoug we won\u2019t commit to stability before version 1.0.</p>\n<p>Release with X.Y.Z will be of 2 kinds:</p>\n<ul>\n<li>if Y is odd, the release will add features.</li>\n<li>if Y is even or Z &gt; 0, the release will be dedicated to bug fixing,\ndocumentation, API improvment and performances.</li>\n</ul>\n<p>E.G.:</p>\n<ul>\n<li>0.2.1: 1 &gt; 0 so no new features.</li>\n<li>1.4.1: 4 is even, so no new features.</li>\n<li>2.1.0: 1 is odd, you may see new feature in this release.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 2452024, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "08e11a573dc961f583d5d4c28c1250a3", "sha256": "6185efa0d8e0d83f84c90cec4b880baf8230f4eb0d7b58b755c6d917ad348bf0"}, "downloads": -1, "filename": "ww-0.1.0-py3-none-any.whl", "has_sig": false, "md5_digest": "08e11a573dc961f583d5d4c28c1250a3", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 32486, "upload_time": "2016-10-16T18:42:30", "upload_time_iso_8601": "2016-10-16T18:42:30.156853Z", "url": "https://files.pythonhosted.org/packages/b0/3b/fe887083e358187cb3d84a1f82fd0ea2078aae972e188559690b4f5efde4/ww-0.1.0-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "a0f042bec488f838c53eab7db996576f", "sha256": "3cb82e18c3141d82f3d0ed185fa91adc2d6bd048d28dd2c36647e3248d87cbb4"}, "downloads": -1, "filename": "ww-0.1.0.tar.gz", "has_sig": false, "md5_digest": "a0f042bec488f838c53eab7db996576f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 17516, "upload_time": "2016-10-16T18:42:26", "upload_time_iso_8601": "2016-10-16T18:42:26.428458Z", "url": "https://files.pythonhosted.org/packages/02/cc/0b21c0c925f9f990b5b2dc71da013970f8073a06c3e7ca9c7f1f0039bcbc/ww-0.1.0.tar.gz", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "5b0b7722e6ad0e34023a45704117d70f", "sha256": "02d2b9ea134317901c889fc844958630f478b5d1a98d5938ce787cf92d02b8ed"}, "downloads": -1, "filename": "ww-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b0b7722e6ad0e34023a45704117d70f", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 44899, "upload_time": "2016-11-09T23:41:02", "upload_time_iso_8601": "2016-11-09T23:41:02.556987Z", "url": "https://files.pythonhosted.org/packages/54/f2/5a43036cb61ce29a49b99a53c7d0fb68a4274467064ff77c5feafca03177/ww-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a019ab51f503152372ecbec8fa4d81f", "sha256": "3664f1f91bf927fe597ab153e8df73c8954927258b3737220efd1cb9912ebd7e"}, "downloads": -1, "filename": "ww-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4a019ab51f503152372ecbec8fa4d81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28834, "upload_time": "2016-11-09T23:40:59", "upload_time_iso_8601": "2016-11-09T23:40:59.260187Z", "url": "https://files.pythonhosted.org/packages/aa/90/522658f7a9707395a00a98f82389fc006989c5ed68c72aa043b9289c447a/ww-0.2.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "5b0b7722e6ad0e34023a45704117d70f", "sha256": "02d2b9ea134317901c889fc844958630f478b5d1a98d5938ce787cf92d02b8ed"}, "downloads": -1, "filename": "ww-0.2.1-py3-none-any.whl", "has_sig": false, "md5_digest": "5b0b7722e6ad0e34023a45704117d70f", "packagetype": "bdist_wheel", "python_version": "3.5", "requires_python": null, "size": 44899, "upload_time": "2016-11-09T23:41:02", "upload_time_iso_8601": "2016-11-09T23:41:02.556987Z", "url": "https://files.pythonhosted.org/packages/54/f2/5a43036cb61ce29a49b99a53c7d0fb68a4274467064ff77c5feafca03177/ww-0.2.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "4a019ab51f503152372ecbec8fa4d81f", "sha256": "3664f1f91bf927fe597ab153e8df73c8954927258b3737220efd1cb9912ebd7e"}, "downloads": -1, "filename": "ww-0.2.1.tar.gz", "has_sig": false, "md5_digest": "4a019ab51f503152372ecbec8fa4d81f", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 28834, "upload_time": "2016-11-09T23:40:59", "upload_time_iso_8601": "2016-11-09T23:40:59.260187Z", "url": "https://files.pythonhosted.org/packages/aa/90/522658f7a9707395a00a98f82389fc006989c5ed68c72aa043b9289c447a/ww-0.2.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:26:42 2020"}