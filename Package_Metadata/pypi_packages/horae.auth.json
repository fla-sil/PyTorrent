{"info": {"author": "Simon Kaeser", "author_email": "skaeser@gmail.com", "bugtrack_url": null, "classifiers": ["Programming Language :: Python", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Introduction\n============\n\nThe ``horae.auth`` package provides a pluggable users and groups architecture for the Horae\nresource planning system and includes the following functionality:\n\n* Provides an authenticator and session credentials plugin using\n  `zope.pluggableauth <http://pypi.python.org/pypi/zope.pluggableauth>`_\n* Defines default roles and permissions for Horae\n* Defines generic interfaces for users and groups and hooks for additional packages to provide them\n* Provides basic login and logout views based on `horae.layout <http://pypi.python.org/pypi/horae.layout>`_\n* Sharing\n\nAuthenticator and session credentials plugin\n============================================\n\nBoth plugins are defined in ``horae.auth.auth`` and setup by the ``horae.auth.auth.setup_authentication``\nfunction. To use the plugins they have to be registered with the grok application which the following\nexample illustrates::\n\n    import grok\n    from zope.app.authentication.authentication import (\n        PluggableAuthentication)\n    from zope.app.security.interfaces import IAuthentication\n    \n    from horae.auth import auth\n    \n    class SampleApplication(grok.Application):\n        grok.local_utility(PluggableAuthentication,\n                           provides=IAuthentication,\n                           setup=auth.setup_authentication)\n\nRoles and permissions\n=====================\n\nThe following default permissions are defined by ``horae.auth``:\n\n**View**\n  Permission required to view an object\n**Edit**\n  Permission required to edit an object\n**Delete**\n  Permission required to delete an object\n**ViewHistory**\n  Permission required to view the history of an object\n**AddClient**\n  Permission required to add a client\n**AddProject**\n  Permission required to add a project\n**AddMilestone**\n  Permission required to add a milestone\n**AddTicket**\n  Permission required to add a ticket\n**ChangeTicket**\n  Permission required to change a ticket\n**ViewHiddenProperties**\n  Permission required to view hidden properties\n**Manage**\n  Management permission\n**ManageGroups**\n  Permission required to manage groups\n**ManageUsers**\n  Permission required to manage users\n**Sharing**\n  Permission required to share objects\n\nBased on those permissions the following roles are defined:\n\n**Manager**\n  View, Edit, Delete, ViewHistory, AddClient, AddProject, AddMilestone, AddTicket, ChangeTicket, ViewHiddenProperties, Manage, ManageGroups, ManageUsers, Sharing\n**Administrator**\n  View, Edit, Delete, ViewHistory, AddClient, AddProject, AddMilestone, AddTicket, ChangeTicket, ViewHiddenProperties, ManageUsers, Sharing\n**Owner**\n  View, Edit, Manage\n**Member**\n  Assigned to every user\n**Reader**\n  View, ViewHistory\n**Editor**\n  View, Edit, ViewHistory, ChangeTicket\n**Contributor**\n  View, Edit, Delete, AddClient, AddProject, AddMilestone, AddTicket, ViewHistory, ChangeTicket\n**TicketEditor**\n  View, AddTicket, ViewHistory, ChangeTicket\n**Responsible**\n  View, Edit, ViewHistory, ChangeTicket\n\nGeneric interfaces and hooks\n============================\n\nThe main interfaces defined by ``horae.auth`` are:\n\n* ``horae.auth.interfaces.IUser``\n* ``horae.auth.interfaces.IGroup``\n* ``horae.auth.interfaces.IUserProvider``\n* ``horae.auth.interfaces.IGroupProvider``\n\n``horae.auth`` does not provide any implementation of those interfaces which is done by\npackages like `horae.usersandgroups <http://pypi.python.org/pypi/horae.usersandgroups>`_.\nThis architecture makes it possible to quite easily plug in new user and group sources\nsuch as LDAP [#]_.\n\nAs mentioned above a sample implementation may be found in the package `horae.usersandgroups\n<http://pypi.python.org/pypi/horae.usersandgroups>`_ which provides persistent users\nand groups and basic CRUD [#]_ functionality.\n\nSharing\n=======\n\nMarking objects as shareable (implementing ``horae.auth.interfaces.IShareable``)\nmakes it possible to grant roles for users and groups on the specific object. The roles\nare inherited from parent objects by default making it possible to grant a role for an\nobject and all its childs. Role inheritance may be disabled individually for shareable\nobjects. The roles available to be granted are defined by named utilities implementing\n``horae.auth.interfaces.ISelectableRoleProvider``. The default implementation is located\nat ``horae.auth.auth`` and looks like this::\n\n    from horae.auth import interfaces\n    \n    class SelectableRoleProvider(grok.GlobalUtility):\n        \"\"\" Provider for selectable roles\n        \"\"\"\n        grok.implements(interfaces.ISelectableRoleProvider)\n        grok.provides(interfaces.ISelectableRoleProvider)\n        grok.name('horae.auth.selectableroles')\n    \n        def roles(self):\n            \"\"\" Returns a list of role names\n            \"\"\"\n            return ['horae.Reader', 'horae.Editor', 'horae.Contributor', 'horae.TicketEditor']\n\nand thus makes the roles ``Reader``, ``Editor``, ``Contributor`` and ``TicketEditor`` available\nto be granted for shareable objects. To make other roles available additional providers may be\nregistered::\n\n    class SampleSelectableRoleProvider(grok.GlobalUtility):\n        \"\"\" Provider for selectable roles\n        \"\"\"\n        grok.implements(interfaces.ISelectableRoleProvider)\n        grok.provides(interfaces.ISelectableRoleProvider)\n        grok.name('horae.sampleadditionalroles.selectableroles')\n    \n        def roles(self):\n            \"\"\" Returns a list of role names\n            \"\"\"\n            return ['horae.SampleRole1', 'horae.SampleRole2']\n\nEnabling the sharing functionality on an object is simply done by letting it implement the marker\ninterface ``horae.auth.interfaces.IShareable``. This may be done by having the class directly\nimplement the interface::\n\n    class MyShareableContent(grok.Model):\n        grok.implements(interfaces.IShareable)\n\nor by doing so from outside the class definition which is especially usable if the desired class\nis part of a module not related to ``horae.auth``::\n\n    from zope.interface import classImplements\n    \n    from some.other.unrelated.module import OtherContent\n    \n    classImplements(OtherContent, interfaces.IShareable)\n\nDependencies\n============\n\nHorae\n-----\n\n* `horae.cache <http://pypi.python.org/pypi/horae.cache>`_\n* `horae.core <http://pypi.python.org/pypi/horae.core>`_\n* `horae.layout <http://pypi.python.org/pypi/horae.layout>`_\n\nThird party\n-----------\n\n* `grok <http://pypi.python.org/pypi/grok>`_\n* `zope.pluggableauth <http://pypi.python.org/pypi/zope.pluggableauth>`_\n\n.. [#] `Lightweight Directory Access Protocol <http://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol>`_\n.. [#] **C**\\ reate **R**\\ ead **U**\\ pdate **D**\\ elete.\n\nChangelog\n=========\n\n1.0a1 (2012-01-16)\n------------------\n\n* Initial release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "UNKNOWN", "keywords": "", "license": "GPL", "maintainer": null, "maintainer_email": null, "name": "horae.auth", "package_url": "https://pypi.org/project/horae.auth/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/horae.auth/", "project_urls": {"Download": "UNKNOWN", "Homepage": "UNKNOWN"}, "release_url": "https://pypi.org/project/horae.auth/1.0a1/", "requires_dist": null, "requires_python": null, "summary": "Provides a pluggable users and groups architecture for the Horae resource planning system", "version": "1.0a1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"introduction\">\n<h2>Introduction</h2>\n<p>The <tt>horae.auth</tt> package provides a pluggable users and groups architecture for the Horae\nresource planning system and includes the following functionality:</p>\n<ul>\n<li>Provides an authenticator and session credentials plugin using\n<a href=\"http://pypi.python.org/pypi/zope.pluggableauth\" rel=\"nofollow\">zope.pluggableauth</a></li>\n<li>Defines default roles and permissions for Horae</li>\n<li>Defines generic interfaces for users and groups and hooks for additional packages to provide them</li>\n<li>Provides basic login and logout views based on <a href=\"http://pypi.python.org/pypi/horae.layout\" rel=\"nofollow\">horae.layout</a></li>\n<li>Sharing</li>\n</ul>\n</div>\n<div id=\"authenticator-and-session-credentials-plugin\">\n<h2>Authenticator and session credentials plugin</h2>\n<p>Both plugins are defined in <tt>horae.auth.auth</tt> and setup by the <tt>horae.auth.auth.setup_authentication</tt>\nfunction. To use the plugins they have to be registered with the grok application which the following\nexample illustrates:</p>\n<pre>import grok\nfrom zope.app.authentication.authentication import (\n    PluggableAuthentication)\nfrom zope.app.security.interfaces import IAuthentication\n\nfrom horae.auth import auth\n\nclass SampleApplication(grok.Application):\n    grok.local_utility(PluggableAuthentication,\n                       provides=IAuthentication,\n                       setup=auth.setup_authentication)\n</pre>\n</div>\n<div id=\"roles-and-permissions\">\n<h2>Roles and permissions</h2>\n<p>The following default permissions are defined by <tt>horae.auth</tt>:</p>\n<dl>\n<dt><strong>View</strong></dt>\n<dd>Permission required to view an object</dd>\n<dt><strong>Edit</strong></dt>\n<dd>Permission required to edit an object</dd>\n<dt><strong>Delete</strong></dt>\n<dd>Permission required to delete an object</dd>\n<dt><strong>ViewHistory</strong></dt>\n<dd>Permission required to view the history of an object</dd>\n<dt><strong>AddClient</strong></dt>\n<dd>Permission required to add a client</dd>\n<dt><strong>AddProject</strong></dt>\n<dd>Permission required to add a project</dd>\n<dt><strong>AddMilestone</strong></dt>\n<dd>Permission required to add a milestone</dd>\n<dt><strong>AddTicket</strong></dt>\n<dd>Permission required to add a ticket</dd>\n<dt><strong>ChangeTicket</strong></dt>\n<dd>Permission required to change a ticket</dd>\n<dt><strong>ViewHiddenProperties</strong></dt>\n<dd>Permission required to view hidden properties</dd>\n<dt><strong>Manage</strong></dt>\n<dd>Management permission</dd>\n<dt><strong>ManageGroups</strong></dt>\n<dd>Permission required to manage groups</dd>\n<dt><strong>ManageUsers</strong></dt>\n<dd>Permission required to manage users</dd>\n<dt><strong>Sharing</strong></dt>\n<dd>Permission required to share objects</dd>\n</dl>\n<p>Based on those permissions the following roles are defined:</p>\n<dl>\n<dt><strong>Manager</strong></dt>\n<dd>View, Edit, Delete, ViewHistory, AddClient, AddProject, AddMilestone, AddTicket, ChangeTicket, ViewHiddenProperties, Manage, ManageGroups, ManageUsers, Sharing</dd>\n<dt><strong>Administrator</strong></dt>\n<dd>View, Edit, Delete, ViewHistory, AddClient, AddProject, AddMilestone, AddTicket, ChangeTicket, ViewHiddenProperties, ManageUsers, Sharing</dd>\n<dt><strong>Owner</strong></dt>\n<dd>View, Edit, Manage</dd>\n<dt><strong>Member</strong></dt>\n<dd>Assigned to every user</dd>\n<dt><strong>Reader</strong></dt>\n<dd>View, ViewHistory</dd>\n<dt><strong>Editor</strong></dt>\n<dd>View, Edit, ViewHistory, ChangeTicket</dd>\n<dt><strong>Contributor</strong></dt>\n<dd>View, Edit, Delete, AddClient, AddProject, AddMilestone, AddTicket, ViewHistory, ChangeTicket</dd>\n<dt><strong>TicketEditor</strong></dt>\n<dd>View, AddTicket, ViewHistory, ChangeTicket</dd>\n<dt><strong>Responsible</strong></dt>\n<dd>View, Edit, ViewHistory, ChangeTicket</dd>\n</dl>\n</div>\n<div id=\"generic-interfaces-and-hooks\">\n<h2>Generic interfaces and hooks</h2>\n<p>The main interfaces defined by <tt>horae.auth</tt> are:</p>\n<ul>\n<li><tt>horae.auth.interfaces.IUser</tt></li>\n<li><tt>horae.auth.interfaces.IGroup</tt></li>\n<li><tt>horae.auth.interfaces.IUserProvider</tt></li>\n<li><tt>horae.auth.interfaces.IGroupProvider</tt></li>\n</ul>\n<p><tt>horae.auth</tt> does not provide any implementation of those interfaces which is done by\npackages like <a href=\"http://pypi.python.org/pypi/horae.usersandgroups\" rel=\"nofollow\">horae.usersandgroups</a>.\nThis architecture makes it possible to quite easily plug in new user and group sources\nsuch as LDAP <a href=\"#id6\" id=\"id1\" rel=\"nofollow\">[1]</a>.</p>\n<p>As mentioned above a sample implementation may be found in the package <a href=\"http://pypi.python.org/pypi/horae.usersandgroups\" rel=\"nofollow\">horae.usersandgroups</a> which provides persistent users\nand groups and basic CRUD <a href=\"#id7\" id=\"id3\" rel=\"nofollow\">[2]</a> functionality.</p>\n</div>\n<div id=\"sharing\">\n<h2>Sharing</h2>\n<p>Marking objects as shareable (implementing <tt>horae.auth.interfaces.IShareable</tt>)\nmakes it possible to grant roles for users and groups on the specific object. The roles\nare inherited from parent objects by default making it possible to grant a role for an\nobject and all its childs. Role inheritance may be disabled individually for shareable\nobjects. The roles available to be granted are defined by named utilities implementing\n<tt>horae.auth.interfaces.ISelectableRoleProvider</tt>. The default implementation is located\nat <tt>horae.auth.auth</tt> and looks like this:</p>\n<pre>from horae.auth import interfaces\n\nclass SelectableRoleProvider(grok.GlobalUtility):\n    \"\"\" Provider for selectable roles\n    \"\"\"\n    grok.implements(interfaces.ISelectableRoleProvider)\n    grok.provides(interfaces.ISelectableRoleProvider)\n    grok.name('horae.auth.selectableroles')\n\n    def roles(self):\n        \"\"\" Returns a list of role names\n        \"\"\"\n        return ['horae.Reader', 'horae.Editor', 'horae.Contributor', 'horae.TicketEditor']\n</pre>\n<p>and thus makes the roles <tt>Reader</tt>, <tt>Editor</tt>, <tt>Contributor</tt> and <tt>TicketEditor</tt> available\nto be granted for shareable objects. To make other roles available additional providers may be\nregistered:</p>\n<pre>class SampleSelectableRoleProvider(grok.GlobalUtility):\n    \"\"\" Provider for selectable roles\n    \"\"\"\n    grok.implements(interfaces.ISelectableRoleProvider)\n    grok.provides(interfaces.ISelectableRoleProvider)\n    grok.name('horae.sampleadditionalroles.selectableroles')\n\n    def roles(self):\n        \"\"\" Returns a list of role names\n        \"\"\"\n        return ['horae.SampleRole1', 'horae.SampleRole2']\n</pre>\n<p>Enabling the sharing functionality on an object is simply done by letting it implement the marker\ninterface <tt>horae.auth.interfaces.IShareable</tt>. This may be done by having the class directly\nimplement the interface:</p>\n<pre>class MyShareableContent(grok.Model):\n    grok.implements(interfaces.IShareable)\n</pre>\n<p>or by doing so from outside the class definition which is especially usable if the desired class\nis part of a module not related to <tt>horae.auth</tt>:</p>\n<pre>from zope.interface import classImplements\n\nfrom some.other.unrelated.module import OtherContent\n\nclassImplements(OtherContent, interfaces.IShareable)\n</pre>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<div id=\"horae\">\n<h3>Horae</h3>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/horae.cache\" rel=\"nofollow\">horae.cache</a></li>\n<li><a href=\"http://pypi.python.org/pypi/horae.core\" rel=\"nofollow\">horae.core</a></li>\n<li><a href=\"http://pypi.python.org/pypi/horae.layout\" rel=\"nofollow\">horae.layout</a></li>\n</ul>\n</div>\n<div id=\"third-party\">\n<h3>Third party</h3>\n<ul>\n<li><a href=\"http://pypi.python.org/pypi/grok\" rel=\"nofollow\">grok</a></li>\n<li><a href=\"http://pypi.python.org/pypi/zope.pluggableauth\" rel=\"nofollow\">zope.pluggableauth</a></li>\n</ul>\n<table id=\"id6\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id1\" rel=\"nofollow\">[1]</a></td><td><a href=\"http://en.wikipedia.org/wiki/Lightweight_Directory_Access_Protocol\" rel=\"nofollow\">Lightweight Directory Access Protocol</a></td></tr>\n</tbody>\n</table>\n<table id=\"id7\">\n<col><col>\n<tbody>\n<tr><td><a href=\"#id3\" rel=\"nofollow\">[2]</a></td><td><strong>C</strong>reate <strong>R</strong>ead <strong>U</strong>pdate <strong>D</strong>elete.</td></tr>\n</tbody>\n</table>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<h2 id=\"a1-2012-01-16\"><span class=\"section-subtitle\">1.0a1 (2012-01-16)</span></h2>\n<ul>\n<li>Initial release</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 792984, "releases": {"1.0a1": [{"comment_text": "", "digests": {"md5": "2b6fe9b9d445a7eb6c6600a61676c3c8", "sha256": "a157e991e6c1d20fecde0a1d56d81c07f694f50ee7d17eb44092ea9c4f93ff78"}, "downloads": -1, "filename": "horae.auth-1.0a1.tar.gz", "has_sig": false, "md5_digest": "2b6fe9b9d445a7eb6c6600a61676c3c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14886, "upload_time": "2012-01-16T12:02:42", "upload_time_iso_8601": "2012-01-16T12:02:42.188773Z", "url": "https://files.pythonhosted.org/packages/2b/82/962667f1ba957ed0f9497b52d5dd4a58a2dc856164acf3d61cc5de6c8249/horae.auth-1.0a1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "2b6fe9b9d445a7eb6c6600a61676c3c8", "sha256": "a157e991e6c1d20fecde0a1d56d81c07f694f50ee7d17eb44092ea9c4f93ff78"}, "downloads": -1, "filename": "horae.auth-1.0a1.tar.gz", "has_sig": false, "md5_digest": "2b6fe9b9d445a7eb6c6600a61676c3c8", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 14886, "upload_time": "2012-01-16T12:02:42", "upload_time_iso_8601": "2012-01-16T12:02:42.188773Z", "url": "https://files.pythonhosted.org/packages/2b/82/962667f1ba957ed0f9497b52d5dd4a58a2dc856164acf3d61cc5de6c8249/horae.auth-1.0a1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:37 2020"}