{"info": {"author": "Jing Wang", "author_email": "jing@dropbox.com", "bugtrack_url": null, "classifiers": ["Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Operating System :: OS Independent", "Topic :: Database :: Front-Ends"], "description": "======\nPyHive\n======\n\nPyHive is a collection of Python `DB-API <http://www.python.org/dev/peps/pep-0249/>`_ and\n`SQLAlchemy <http://www.sqlalchemy.org/>`_ interfaces for `Presto <http://prestodb.io/>`_ and\n`Hive <http://hive.apache.org/>`_.\n\nUsage\n=====\n\nDB-API\n------\n.. code-block:: python\n\n    from pyhive import presto\n    cursor = presto.connect('localhost').cursor()\n    cursor.execute('SELECT * FROM my_awesome_data LIMIT 10')\n    print cursor.fetchone()\n    print cursor.fetchall()\n\nDB-API (asynchronous)\n---------------------\n.. code-block:: python\n\n    from pyhive import hive\n    from TCLIService.ttypes import TOperationState\n    cursor = hive.connect('localhost').cursor()\n    cursor.execute('SELECT * FROM my_awesome_data LIMIT 10', async=True)\n\n    status = cursor.poll().operationState\n    while status in (TOperationState.INITIALIZED_STATE, TOperationState.RUNNING_STATE):\n        logs = cursor.fetch_logs()\n        for message in logs:\n            print message\n\n        # If needed, an asynchronous query can be cancelled at any time with:\n        # cursor.cancel()\n\n        status = cursor.poll().operationState\n\n    print cursor.fetchall()\n\nSQLAlchemy\n----------\nFirst install this package to register it with SQLAlchemy (see ``setup.py``).\n\n.. code-block:: python\n\n    from sqlalchemy import *\n    from sqlalchemy.engine import create_engine\n    from sqlalchemy.schema import *\n    engine = create_engine('presto://localhost:8080/hive/default')\n    logs = Table('my_awesome_data', MetaData(bind=engine), autoload=True)\n    print select([func.count('*')], from_obj=logs).scalar()\n\nNote: query generation functionality is not exhaustive or fully tested, but there should be no\nproblem with raw SQL.\n\nPassing session configuration\n-----------------------------\n\n.. code-block:: python\n\n    # DB-API\n    hive.connect('localhost', configuration={'hive.exec.reducers.max': '123'})\n    presto.connect('localhost', session_props={'query_max_run_time': '1234m'})\n    # SQLAlchemy\n    create_engine(\n        'hive://user@host:10000/database',\n        connect_args={'configuration': {'hive.exec.reducers.max': '123'}},\n    )\n\nRequirements\n============\n\nInstall using\n\n- ``pip install pyhive[hive]`` for the Hive interface and\n- ``pip install pyhive[presto]`` for the Presto interface.\n\n`PyHive` works with\n\n- Python 2.7\n- For Presto: Presto install\n- For Hive: `HiveServer2 <https://cwiki.apache.org/confluence/display/Hive/Setting+up+HiveServer2>`_ daemon\n\nThere's also a `third party Conda package <https://binstar.org/blaze/pyhive>`_.\n\nChangelog\n=========\nSee https://github.com/dropbox/PyHive/releases.\n\nTesting\n=======\n.. image:: https://travis-ci.org/dropbox/PyHive.svg\n    :target: https://travis-ci.org/dropbox/PyHive\n.. image:: http://codecov.io/github/dropbox/PyHive/coverage.svg?branch=master\n    :target: http://codecov.io/github/dropbox/PyHive?branch=master\n\nRun the following in an environment with Hive/Presto::\n\n    ./scripts/make_test_tables.sh\n    virtualenv --no-site-packages env\n    source env/bin/activate\n    pip install -e .\n    pip install -r dev_requirements.txt\n    py.test\n\nWARNING: This drops/creates tables named ``one_row``, ``one_row_complex``, and ``many_rows``, plus a\ndatabase called ``pyhive_test_database``.\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dropbox/PyHive", "keywords": "", "license": "Apache License, Version 2.0", "maintainer": "", "maintainer_email": "", "name": "PyHive-Hack", "package_url": "https://pypi.org/project/PyHive-Hack/", "platform": "", "project_url": "https://pypi.org/project/PyHive-Hack/", "project_urls": {"Homepage": "https://github.com/dropbox/PyHive"}, "release_url": "https://pypi.org/project/PyHive-Hack/0.2.1b1/", "requires_dist": null, "requires_python": "", "summary": "Python interface to Hive", "version": "0.2.1b1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>PyHive is a collection of Python <a href=\"http://www.python.org/dev/peps/pep-0249/\" rel=\"nofollow\">DB-API</a> and\n<a href=\"http://www.sqlalchemy.org/\" rel=\"nofollow\">SQLAlchemy</a> interfaces for <a href=\"http://prestodb.io/\" rel=\"nofollow\">Presto</a> and\n<a href=\"http://hive.apache.org/\" rel=\"nofollow\">Hive</a>.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<div id=\"id1\">\n<h3>DB-API</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyhive</span> <span class=\"kn\">import</span> <span class=\"n\">presto</span>\n<span class=\"n\">cursor</span> <span class=\"o\">=</span> <span class=\"n\">presto</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span>\n<span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">'SELECT * FROM my_awesome_data LIMIT 10'</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">fetchone</span><span class=\"p\">()</span>\n<span class=\"nb\">print</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"db-api-asynchronous\">\n<h3>DB-API (asynchronous)</h3>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">pyhive</span> <span class=\"kn\">import</span> <span class=\"n\">hive</span>\n<span class=\"kn\">from</span> <span class=\"nn\">TCLIService.ttypes</span> <span class=\"kn\">import</span> <span class=\"n\">TOperationState</span>\n<span class=\"n\">cursor</span> <span class=\"o\">=</span> <span class=\"n\">hive</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">cursor</span><span class=\"p\">()</span>\n<span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">execute</span><span class=\"p\">(</span><span class=\"s1\">'SELECT * FROM my_awesome_data LIMIT 10'</span><span class=\"p\">,</span> <span class=\"k\">async</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n\n<span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">operationState</span>\n<span class=\"k\">while</span> <span class=\"n\">status</span> <span class=\"ow\">in</span> <span class=\"p\">(</span><span class=\"n\">TOperationState</span><span class=\"o\">.</span><span class=\"n\">INITIALIZED_STATE</span><span class=\"p\">,</span> <span class=\"n\">TOperationState</span><span class=\"o\">.</span><span class=\"n\">RUNNING_STATE</span><span class=\"p\">):</span>\n    <span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">fetch_logs</span><span class=\"p\">()</span>\n    <span class=\"k\">for</span> <span class=\"n\">message</span> <span class=\"ow\">in</span> <span class=\"n\">logs</span><span class=\"p\">:</span>\n        <span class=\"nb\">print</span> <span class=\"n\">message</span>\n\n    <span class=\"c1\"># If needed, an asynchronous query can be cancelled at any time with:</span>\n    <span class=\"c1\"># cursor.cancel()</span>\n\n    <span class=\"n\">status</span> <span class=\"o\">=</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">poll</span><span class=\"p\">()</span><span class=\"o\">.</span><span class=\"n\">operationState</span>\n\n<span class=\"nb\">print</span> <span class=\"n\">cursor</span><span class=\"o\">.</span><span class=\"n\">fetchall</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"id2\">\n<h3>SQLAlchemy</h3>\n<p>First install this package to register it with SQLAlchemy (see <tt>setup.py</tt>).</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.engine</span> <span class=\"kn\">import</span> <span class=\"n\">create_engine</span>\n<span class=\"kn\">from</span> <span class=\"nn\">sqlalchemy.schema</span> <span class=\"kn\">import</span> <span class=\"o\">*</span>\n<span class=\"n\">engine</span> <span class=\"o\">=</span> <span class=\"n\">create_engine</span><span class=\"p\">(</span><span class=\"s1\">'presto://localhost:8080/hive/default'</span><span class=\"p\">)</span>\n<span class=\"n\">logs</span> <span class=\"o\">=</span> <span class=\"n\">Table</span><span class=\"p\">(</span><span class=\"s1\">'my_awesome_data'</span><span class=\"p\">,</span> <span class=\"n\">MetaData</span><span class=\"p\">(</span><span class=\"n\">bind</span><span class=\"o\">=</span><span class=\"n\">engine</span><span class=\"p\">),</span> <span class=\"n\">autoload</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span> <span class=\"n\">select</span><span class=\"p\">([</span><span class=\"n\">func</span><span class=\"o\">.</span><span class=\"n\">count</span><span class=\"p\">(</span><span class=\"s1\">'*'</span><span class=\"p\">)],</span> <span class=\"n\">from_obj</span><span class=\"o\">=</span><span class=\"n\">logs</span><span class=\"p\">)</span><span class=\"o\">.</span><span class=\"n\">scalar</span><span class=\"p\">()</span>\n</pre>\n<p>Note: query generation functionality is not exhaustive or fully tested, but there should be no\nproblem with raw SQL.</p>\n</div>\n<div id=\"passing-session-configuration\">\n<h3>Passing session configuration</h3>\n<pre><span class=\"c1\"># DB-API</span>\n<span class=\"n\">hive</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">configuration</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'hive.exec.reducers.max'</span><span class=\"p\">:</span> <span class=\"s1\">'123'</span><span class=\"p\">})</span>\n<span class=\"n\">presto</span><span class=\"o\">.</span><span class=\"n\">connect</span><span class=\"p\">(</span><span class=\"s1\">'localhost'</span><span class=\"p\">,</span> <span class=\"n\">session_props</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'query_max_run_time'</span><span class=\"p\">:</span> <span class=\"s1\">'1234m'</span><span class=\"p\">})</span>\n<span class=\"c1\"># SQLAlchemy</span>\n<span class=\"n\">create_engine</span><span class=\"p\">(</span>\n    <span class=\"s1\">'hive://user@host:10000/database'</span><span class=\"p\">,</span>\n    <span class=\"n\">connect_args</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'configuration'</span><span class=\"p\">:</span> <span class=\"p\">{</span><span class=\"s1\">'hive.exec.reducers.max'</span><span class=\"p\">:</span> <span class=\"s1\">'123'</span><span class=\"p\">}},</span>\n<span class=\"p\">)</span>\n</pre>\n</div>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<p>Install using</p>\n<ul>\n<li><tt>pip install pyhive[hive]</tt> for the Hive interface and</li>\n<li><tt>pip install pyhive[presto]</tt> for the Presto interface.</li>\n</ul>\n<p><cite>PyHive</cite> works with</p>\n<ul>\n<li>Python 2.7</li>\n<li>For Presto: Presto install</li>\n<li>For Hive: <a href=\"https://cwiki.apache.org/confluence/display/Hive/Setting+up+HiveServer2\" rel=\"nofollow\">HiveServer2</a> daemon</li>\n</ul>\n<p>There\u2019s also a <a href=\"https://binstar.org/blaze/pyhive\" rel=\"nofollow\">third party Conda package</a>.</p>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<p>See <a href=\"https://github.com/dropbox/PyHive/releases\" rel=\"nofollow\">https://github.com/dropbox/PyHive/releases</a>.</p>\n</div>\n<div id=\"testing\">\n<h2>Testing</h2>\n<a href=\"https://travis-ci.org/dropbox/PyHive\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/dropbox/PyHive.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/05765cc2e270419a386ab48d01dee1719b3ed7a4/68747470733a2f2f7472617669732d63692e6f72672f64726f70626f782f5079486976652e737667\"></a>\n<a href=\"http://codecov.io/github/dropbox/PyHive?branch=master\" rel=\"nofollow\"><img alt=\"http://codecov.io/github/dropbox/PyHive/coverage.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/df66378a2e718abcd157ebf8c8e65389feb01a70/687474703a2f2f636f6465636f762e696f2f6769746875622f64726f70626f782f5079486976652f636f7665726167652e7376673f6272616e63683d6d6173746572\"></a>\n<p>Run the following in an environment with Hive/Presto:</p>\n<pre>./scripts/make_test_tables.sh\nvirtualenv --no-site-packages env\nsource env/bin/activate\npip install -e .\npip install -r dev_requirements.txt\npy.test\n</pre>\n<p>WARNING: This drops/creates tables named <tt>one_row</tt>, <tt>one_row_complex</tt>, and <tt>many_rows</tt>, plus a\ndatabase called <tt>pyhive_test_database</tt>.</p>\n</div>\n\n          </div>"}, "last_serial": 6920786, "releases": {"0.2.1a1": [{"comment_text": "", "digests": {"md5": "ac39b17c4abd30202cc467d11247eaa2", "sha256": "8079b642cc9cf41c0661b72ab9671fec409553d2a6be84569802e18b5b7df5e8"}, "downloads": -1, "filename": "PyHive-Hack-0.2.1a1.tar.gz", "has_sig": false, "md5_digest": "ac39b17c4abd30202cc467d11247eaa2", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38456, "upload_time": "2020-01-11T19:34:32", "upload_time_iso_8601": "2020-01-11T19:34:32.931788Z", "url": "https://files.pythonhosted.org/packages/68/44/b042840d89ea6fd5224103c45ceba1baf36094a7baf51c6fbb983e036117/PyHive-Hack-0.2.1a1.tar.gz", "yanked": false}], "0.2.1a3.dev0": [{"comment_text": "", "digests": {"md5": "507f2f61e21e9520d7db4ddd98918f85", "sha256": "0bf84ec6c988a3e863f306e79fe206912978e635372353b8b5c925577e2a37b2"}, "downloads": -1, "filename": "PyHive-Hack-0.2.1a3.dev0.tar.gz", "has_sig": false, "md5_digest": "507f2f61e21e9520d7db4ddd98918f85", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38852, "upload_time": "2020-03-31T14:49:39", "upload_time_iso_8601": "2020-03-31T14:49:39.576921Z", "url": "https://files.pythonhosted.org/packages/b4/35/b5f827d5c2af5a6cecc49603bf6ea75abeadf5726b6703caf43f1fdc2855/PyHive-Hack-0.2.1a3.dev0.tar.gz", "yanked": false}], "0.2.1b1": [{"comment_text": "", "digests": {"md5": "f212d1ca8d5fc820d369aa3462fa641a", "sha256": "07210d1acf8ee35ecaa465c8fa89853675971b786b28645f966562b6464a0b5d"}, "downloads": -1, "filename": "PyHive-Hack-0.2.1b1.tar.gz", "has_sig": false, "md5_digest": "f212d1ca8d5fc820d369aa3462fa641a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38689, "upload_time": "2020-03-31T15:04:22", "upload_time_iso_8601": "2020-03-31T15:04:22.250758Z", "url": "https://files.pythonhosted.org/packages/7e/2e/457c3678b4d82d69b1bb257dbd722d06202b5e0ab5a1a7e1f5476a2c202d/PyHive-Hack-0.2.1b1.tar.gz", "yanked": false}], "0.2.1b1.dev0": [{"comment_text": "", "digests": {"md5": "da7fcd68d0e84ba6376796d36144a3ad", "sha256": "ecdea5a68c55c9fae6b2adae4ad8701983ca84bd38c9277a1d6e372e1dc59805"}, "downloads": -1, "filename": "PyHive-Hack-0.2.1b1.dev0.tar.gz", "has_sig": false, "md5_digest": "da7fcd68d0e84ba6376796d36144a3ad", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38860, "upload_time": "2020-03-31T15:03:36", "upload_time_iso_8601": "2020-03-31T15:03:36.633657Z", "url": "https://files.pythonhosted.org/packages/15/49/8b22a687e3ee79ff1cee0e2695242c0c0cef5d88ec438ac43acfaedd6fbf/PyHive-Hack-0.2.1b1.dev0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "f212d1ca8d5fc820d369aa3462fa641a", "sha256": "07210d1acf8ee35ecaa465c8fa89853675971b786b28645f966562b6464a0b5d"}, "downloads": -1, "filename": "PyHive-Hack-0.2.1b1.tar.gz", "has_sig": false, "md5_digest": "f212d1ca8d5fc820d369aa3462fa641a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 38689, "upload_time": "2020-03-31T15:04:22", "upload_time_iso_8601": "2020-03-31T15:04:22.250758Z", "url": "https://files.pythonhosted.org/packages/7e/2e/457c3678b4d82d69b1bb257dbd722d06202b5e0ab5a1a7e1f5476a2c202d/PyHive-Hack-0.2.1b1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:22 2020"}