{"info": {"author": "ArianX", "author_email": "", "bugtrack_url": null, "classifiers": [], "description": "![freesia](./images/logo.png)\n\n## Introduction\nFreesia is a concise and lightweight async web framework. Its api is inspired by Flask.\n\n## Installation\n```bash\npip3 install asyncfreesia\n```\n\n## Docs\nYou can find the project's detailed API documentation on [here](https://freesia.readthedocs.io/en/latest/?).\n\n## Example\n*hello world*\n```python\nfrom freesia import Freesia\n\napp = Freesia()\n\n@app.route('/hello/<name>')\nasync def hello(request, name):\n    return \"Hello, \" + name + \"!\"\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n*middleware*\n```python\nfrom freesia import Freesia\n\napp = Freesia()\n\n@app.route(\"/<name>\")\nasync def hello(request, name):\n    print(\"enter user handler\")\n    return \"hello, \" + name\n\n\nasync def middleware1(request, handler):\n    print(\"enter middleware1\")\n    res = await handler()\n    print(\"exit middleware1\")\n    return res + \" !\"\n\n\nasync def middleware2(request, handler):\n    print(\"enter middleware2\")\n    res = await handler()\n    print(\"exit middleware2\")\n    return res + \" :D\"\n\n\napp.use([middleware1, middleware2])\n\nif __name__ == \"__main__\":\n    app.run()\n```\n\n*session*\n```python\nfrom freesia import Freesia, set_up_session, get_session, Response\nfrom freesia.session import SimpleCookieSession\n\napp = Freesia()\n\n@app.route(\"/\")\nasync def hello(request):\n    s = await get_session(request)\n    if \"count\" not in s:\n        s[\"count\"] = 1\n        return Response(text=\"Hello, stranger!\")\n    else:\n        s[\"count\"] += 1\n        return Response(text=\"I've seen you %d times\" % s[\"count\"])\n\nif __name__ == \"__main__\":\n    set_up_session(app, SimpleCookieSession)\n    app.run()\n```\n\n## More\nYou can see more exmaple and usags in [docs](https://freesia.readthedocs.io/en/latest/?) and [examples](./examples).", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/AuraiProject/freesia", "keywords": "freesia,framework,backend", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "aysncfreesia", "package_url": "https://pypi.org/project/aysncfreesia/", "platform": "", "project_url": "https://pypi.org/project/aysncfreesia/", "project_urls": {"Homepage": "https://github.com/AuraiProject/freesia"}, "release_url": "https://pypi.org/project/aysncfreesia/0.0.2/", "requires_dist": null, "requires_python": "", "summary": "A concise and lightweight web framework.\u2728", "version": "0.0.2", "yanked": false, "html_description": "<div class=\"project-description\">\n            ![freesia](./images/logo.png)<br><br>## Introduction<br>Freesia is a concise and lightweight async web framework. Its api is inspired by Flask.<br><br>## Installation<br>```bash<br>pip3 install asyncfreesia<br>```<br><br>## Docs<br>You can find the project's detailed API documentation on [here](https://freesia.readthedocs.io/en/latest/?).<br><br>## Example<br>*hello world*<br>```python<br>from freesia import Freesia<br><br>app = Freesia()<br><br>@app.route('/hello/&lt;name&gt;')<br>async def hello(request, name):<br>    return \"Hello, \" + name + \"!\"<br><br>if __name__ == \"__main__\":<br>    app.run()<br>```<br><br>*middleware*<br>```python<br>from freesia import Freesia<br><br>app = Freesia()<br><br>@app.route(\"/&lt;name&gt;\")<br>async def hello(request, name):<br>    print(\"enter user handler\")<br>    return \"hello, \" + name<br><br><br>async def middleware1(request, handler):<br>    print(\"enter middleware1\")<br>    res = await handler()<br>    print(\"exit middleware1\")<br>    return res + \" !\"<br><br><br>async def middleware2(request, handler):<br>    print(\"enter middleware2\")<br>    res = await handler()<br>    print(\"exit middleware2\")<br>    return res + \" :D\"<br><br><br>app.use([middleware1, middleware2])<br><br>if __name__ == \"__main__\":<br>    app.run()<br>```<br><br>*session*<br>```python<br>from freesia import Freesia, set_up_session, get_session, Response<br>from freesia.session import SimpleCookieSession<br><br>app = Freesia()<br><br>@app.route(\"/\")<br>async def hello(request):<br>    s = await get_session(request)<br>    if \"count\" not in s:<br>        s[\"count\"] = 1<br>        return Response(text=\"Hello, stranger!\")<br>    else:<br>        s[\"count\"] += 1<br>        return Response(text=\"I've seen you %d times\" % s[\"count\"])<br><br>if __name__ == \"__main__\":<br>    set_up_session(app, SimpleCookieSession)<br>    app.run()<br>```<br><br>## More<br>You can see more exmaple and usags in [docs](https://freesia.readthedocs.io/en/latest/?) and [examples](./examples).\n          </div>"}, "last_serial": 4909429, "releases": {"0.0.2": [{"comment_text": "", "digests": {"md5": "1b7f340c77b077bbcff9c1956c037b7c", "sha256": "8c76b7603f295f19c673f66a970cfe3e0dd3110f65738902a5570ae9d7ecd527"}, "downloads": -1, "filename": "aysncfreesia-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1b7f340c77b077bbcff9c1956c037b7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18542, "upload_time": "2019-03-07T10:20:35", "upload_time_iso_8601": "2019-03-07T10:20:35.930269Z", "url": "https://files.pythonhosted.org/packages/91/85/9ef377169e81c490a79840e4d533a5c9e0a9e3107168e2007ec640f99870/aysncfreesia-0.0.2.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "1b7f340c77b077bbcff9c1956c037b7c", "sha256": "8c76b7603f295f19c673f66a970cfe3e0dd3110f65738902a5570ae9d7ecd527"}, "downloads": -1, "filename": "aysncfreesia-0.0.2.tar.gz", "has_sig": false, "md5_digest": "1b7f340c77b077bbcff9c1956c037b7c", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18542, "upload_time": "2019-03-07T10:20:35", "upload_time_iso_8601": "2019-03-07T10:20:35.930269Z", "url": "https://files.pythonhosted.org/packages/91/85/9ef377169e81c490a79840e4d533a5c9e0a9e3107168e2007ec640f99870/aysncfreesia-0.0.2.tar.gz", "yanked": false}], "timestamp": "Thu May  7 18:15:29 2020"}