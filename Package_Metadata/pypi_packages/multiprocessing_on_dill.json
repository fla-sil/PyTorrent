{"info": {"author": "Robert Smallshire", "author_email": "rob@sixty-north.com", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Python Software Foundation License", "Programming Language :: Python :: 3 :: Only", "Topic :: Software Development :: Libraries :: Python Modules"], "description": "Multiprocessing on Dill\n=======================\n\nThis project is a friendly fork \u2013 for Python 3 \u2013 of the Python Standard Library `multiprocessing\n<https://docs.python.org/3/library/multiprocessing.html>`_ module, which uses the third-party\n`dill <https://pypi.python.org/pypi/dill>`_ serializer instead of the standard ``pickle`` serializer.  This overcomes\nmany shortcomings of ``pickle`` which prevent multiprocessing being used with lambdas, closures and other useful Python\nobjects.\n\nThe easiest way to use ``multiprocessing_on_dill`` in place of ``multiprocessing`` is simply to replace any import\nstatements like this::\n\n    import multiprocessing\n\nwith::\n\n    import multiprocessing_on_dill as multiprocessing\n\nand import statements like this::\n\n    from multiprocessing import Pool\n\nwith::\n\n    from multiprocessing_on_dill import Pool\n\nWith such import changes in place, it will now be possible to use functions like ``Pool.map()`` with lambdas::\n\n    pool = Pool(12)\n    result = pool.map(lambda x: x*x, range(10000))\n\nEverything else should be identical to the Python version.\n\nYou can determine from which version of the Python Standard Library ``multiprocessing_on_dill`` has been forked, by\nexamining the ``multiprocessing_on_dill.__version__`` attribute.\n\n\nFuture\n======\n\nIt is our hope that one day the Python Standard Library ``pickle`` module will gain the additional capabilities of\n``dill`` and there will no longer be a need for ``multiprocessing_on_dill`` to exist.", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/sixty-north/multiprocessing_on_dill", "keywords": "multiprocessing parallel", "license": "PSFL", "maintainer": null, "maintainer_email": null, "name": "multiprocessing_on_dill", "package_url": "https://pypi.org/project/multiprocessing_on_dill/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/multiprocessing_on_dill/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/sixty-north/multiprocessing_on_dill"}, "release_url": "https://pypi.org/project/multiprocessing_on_dill/3.5.0a4/", "requires_dist": null, "requires_python": null, "summary": "A friendly fork of multiprocessing which uses dill instead of pickle", "version": "3.5.0a4", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"multiprocessing-on-dill\">\n<h2>Multiprocessing on Dill</h2>\n<p>This project is a friendly fork \u2013 for Python 3 \u2013 of the Python Standard Library <a href=\"https://docs.python.org/3/library/multiprocessing.html\" rel=\"nofollow\">multiprocessing</a> module, which uses the third-party\n<a href=\"https://pypi.python.org/pypi/dill\" rel=\"nofollow\">dill</a> serializer instead of the standard <tt>pickle</tt> serializer.  This overcomes\nmany shortcomings of <tt>pickle</tt> which prevent multiprocessing being used with lambdas, closures and other useful Python\nobjects.</p>\n<p>The easiest way to use <tt>multiprocessing_on_dill</tt> in place of <tt>multiprocessing</tt> is simply to replace any import\nstatements like this:</p>\n<pre>import multiprocessing\n</pre>\n<p>with:</p>\n<pre>import multiprocessing_on_dill as multiprocessing\n</pre>\n<p>and import statements like this:</p>\n<pre>from multiprocessing import Pool\n</pre>\n<p>with:</p>\n<pre>from multiprocessing_on_dill import Pool\n</pre>\n<p>With such import changes in place, it will now be possible to use functions like <tt>Pool.map()</tt> with lambdas:</p>\n<pre>pool = Pool(12)\nresult = pool.map(lambda x: x*x, range(10000))\n</pre>\n<p>Everything else should be identical to the Python version.</p>\n<p>You can determine from which version of the Python Standard Library <tt>multiprocessing_on_dill</tt> has been forked, by\nexamining the <tt>multiprocessing_on_dill.__version__</tt> attribute.</p>\n</div>\n<div id=\"future\">\n<h2>Future</h2>\n<p>It is our hope that one day the Python Standard Library <tt>pickle</tt> module will gain the additional capabilities of\n<tt>dill</tt> and there will no longer be a need for <tt>multiprocessing_on_dill</tt> to exist.</p>\n</div>\n\n          </div>"}, "last_serial": 1550373, "releases": {"3.5.0a4": [{"comment_text": "", "digests": {"md5": "cd9da5a57987eddb0040939296fe3c3d", "sha256": "d6d50c300ff4bd408bb71eb78725e60231039ee9b3d0d9bb7697b9d0e15045e7"}, "downloads": -1, "filename": "multiprocessing_on_dill-3.5.0a4.tar.gz", "has_sig": false, "md5_digest": "cd9da5a57987eddb0040939296fe3c3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53330, "upload_time": "2015-05-17T12:05:20", "upload_time_iso_8601": "2015-05-17T12:05:20.894454Z", "url": "https://files.pythonhosted.org/packages/86/4d/4b135e2e5cd0194eb29f2ed36e9a77a07596787a9a8ac2279bd4445398f2/multiprocessing_on_dill-3.5.0a4.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "cd9da5a57987eddb0040939296fe3c3d", "sha256": "d6d50c300ff4bd408bb71eb78725e60231039ee9b3d0d9bb7697b9d0e15045e7"}, "downloads": -1, "filename": "multiprocessing_on_dill-3.5.0a4.tar.gz", "has_sig": false, "md5_digest": "cd9da5a57987eddb0040939296fe3c3d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 53330, "upload_time": "2015-05-17T12:05:20", "upload_time_iso_8601": "2015-05-17T12:05:20.894454Z", "url": "https://files.pythonhosted.org/packages/86/4d/4b135e2e5cd0194eb29f2ed36e9a77a07596787a9a8ac2279bd4445398f2/multiprocessing_on_dill-3.5.0a4.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:50:21 2020"}