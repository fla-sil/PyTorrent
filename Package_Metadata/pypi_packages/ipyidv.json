{"info": {"author": "Drilsdown team", "author_email": "drilsdown@unidata.ucar.edu", "bugtrack_url": null, "classifiers": ["Development Status :: 2 - Pre-Alpha", "Framework :: IPython", "Programming Language :: Python", "Programming Language :: Python :: 2", "Programming Language :: Python :: 2.7", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.4", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.6", "Programming Language :: Python :: 3.7"], "description": "[![Build Status](https://travis-ci.org/Unidata/ipython_IDV.svg?branch=master)](https://travis-ci.org/piqueen314/ipython_IDV)\n[![License: MIT](https://img.shields.io/badge/License-MIT-yellow.svg)](https://opensource.org/licenses/MIT)\n# ipython_IDV\n### Part of the [EarthCube DRILSDOWN project](https://brianmapes.github.io/EarthCube-DRILSDOWN/)\n\nExtension for IPython Notebooks to provide line and cell magics to call out to Unidata's [Integrated Data Viewer](https://github.com/Unidata/IDV) \n\n### To set it up:\n\n1. After installing Jupyter/iPython notebook software [like this](https://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/), you will also need to install the [ipywidgets package](https://ipywidgets.readthedocs.io/en/latest/user_install.html)\n\n2. Once Jupyter/iPython is ready, copy [ipython_IDV.py](https://raw.githubusercontent.com/Unidata/drilsdown/master/projects/ipython_IDV/ipython_IDV.py) to your local extensions directory, _~/.ipython/extensions_\n\n3. To run IDV commands from the Notebook, you will need to have installed [IDV version 5.4 or later](http://www.unidata.ucar.edu/software/idv/nightly/). Also, you need to set your IDV_HOME environment variable to be the IDV install directory, so that python can execute the command ${IDV_HOME}/runIDV\n\n4. You also need to configure your IDV to accept connections from the ipython notebook. To do this set the following property in your local ~/.unidata/idv/DefaultIdv/idv.properties file:\n\n<pre>\nidv.monitorport = 8765\n</pre>\n\n\n--------\n### Now you've done the 4 steps above. \nWhen you launch _jupyter notebook_, and run an iPython notebook in your browser, do this in the notebook:\n\n<pre>\n%load_ext ipython_IDV\n</pre>\n\nThat will give you a dashboard-style view of many of the ways the Notebook can launch and interact with The IDV, and find resources such as existing bundles, data catalogs, and more, including a link to the help section.\n\n\nIf you plan on writing Python code in this notbeook (rather then merely capturing images and notes about a case study IDV session), you should import the Idv and Ramadda classes:\n\n<pre>\nfrom drilsdown import Idv\nfrom drilsdown import Ramadda\n</pre>\n\nWe welcome your use cases! Email mapes at miami dot edu. See examples [below](https://github.com/Unidata/ipython_IDV/blob/master/README.md#examples).\n\n---------\n#### Publishing to RAMADDA, using the IDV's capabilities\n\nIf you want to enable your IDV to publish to a RAMADDA server, get [ramaddaplugin.jar](https://github.com/Unidata/ipython_IDV/blob/master/ramaddaplugin.jar). Copy this file to your local IDV plugins directory (~/.unidata/idv/DefaultIdv/plugins). While it is not a plain text code file, it is included in this repo so all of the products that are required for running drilsdown can be found in \none place.\n\n---------\n#### Setting up your own RAMADDA to handle DRILSDOWN Case Study objects\n\nIf you operate a RAMADDA, and want it to host DRILSDOWN _Case Study_ digital objects, get [drilsdownplugin.jar](https://github.com/Unidata/ipython_IDV/blob/master/drilsdownplugin.jar), put it in your RAMADDA installation's _plugins_ area, and restart. It is produced from the code at [RAMADDA drilsdown repository](https://github.com/Unidata/drilsdown) but is included here so all of the products that are required for running drilsdown can be found in one place.\n\n\n\n<h2>Examples of Python notebooks calling DRILSDOWN and The IDV:</h2>\nHere is an example of how to use the API to load an IDV bundle with different bounding boxes and capture images\n\n<pre>\nfrom drilsdown import Idv\nIdv.fileUrl=\"http://geodesystems.com/repository/entry/get?entryid=d83e0924-008d-4025-9517-394e9f13712f\"\nbboxes = [[50,-130,40,-100],[50,-100,40,-75],[40,-130,20,-100],[40,-100,20,-75]]\nfor i in range(len(bboxes)):\n    bbox=bboxes[i];\n    Idv.loadBundle(Idv.fileUrl,bbox)\n    Idv.makeImage(caption=\"BBOX:\" + repr(bbox[0]) +\"/\" + repr(bbox[1]) +\"  \" + repr(bbox[2]) +\"/\" + repr(bbox[3]))\n</pre>\n\n\n<pre>\nfrom drilsdown import Idv\nIdv.fileUrl=\"http://geodesystems.com/repository/entry/get?entryid=d83e0924-008d-4025-9517-394e9f13712f\"\nbboxes = [[50,-130,40,-100],[50,-100,40,-75],[40,-130,20,-100],[40,-100,20,-75]]\nfor i in range(len(bboxes)):\n    bbox=bboxes[i];\n    Idv.loadBundle(Idv.fileUrl,bbox);\n    label = \"BBOX:\" + repr(bbox[0]) +\"/\" + repr(bbox[1]) +\"  \" + repr(bbox[2]) +\"/\" + repr(bbox[3]);\n    Idv.makeMovie(caption=label,display=True, publish={'parent':'9adf32b5-aad4-4a8d-997e-216b9757d240',\"name\":\"Image #\" + repr(i)})\n</pre>\n\n\n\n\nThe makeImage can take one of 2 forms of a publish argument. The first is a boolean and will result in the IDV popping up its RAMADDA publish dialog box where the image can be published.\n<pre>\n    Idv.makeImage(caption=label, publish=True);\n</pre>\n\nIn the second form the publish argument is a map. This directs the python to do the publishing directly to RAMADDA. The map can contain a parent member which is the entry id to publish to and a name member which is the entry name. \n\n<pre>\n    Idv.makeImage(caption=label, publish={'parent':'9adf32b5-aad4-4a8d-997e-216b9757d240',\"name\":\"Image #\" + repr(i)})\n</pre>\n\nTo enable direct publishing to RAMADDA you need to have your RAMADDA user name and password defined as environment variables:\n\n<pre>\nexport RAMADDA_USER=\nexport RAMADDA_PASSWORD=\n</pre>\n\n\n\n\n", "description_content_type": "text/markdown", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "", "keywords": "", "license": "", "maintainer": "", "maintainer_email": "", "name": "ipyidv", "package_url": "https://pypi.org/project/ipyidv/", "platform": "", "project_url": "https://pypi.org/project/ipyidv/", "project_urls": null, "release_url": "https://pypi.org/project/ipyidv/2.4.9/", "requires_dist": ["ipython", "ipywidgets", "requests", "netcdf4 ; extra == 'addons'", "xarray ; extra == 'addons'"], "requires_python": "", "summary": "This project allows users to use Unidata's IDV with jupyter notebooks", "version": "2.4.9", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://travis-ci.org/piqueen314/ipython_IDV\" rel=\"nofollow\"><img alt=\"Build Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/aa180d3b3a892f805bdbc506d0d1d2fc52d45586/68747470733a2f2f7472617669732d63692e6f72672f556e69646174612f69707974686f6e5f4944562e7376673f6272616e63683d6d6173746572\"></a>\n<a href=\"https://opensource.org/licenses/MIT\" rel=\"nofollow\"><img alt=\"License: MIT\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/8645b002dd7ec1b54275a80574942e7a318e03c6/68747470733a2f2f696d672e736869656c64732e696f2f62616467652f4c6963656e73652d4d49542d79656c6c6f772e737667\"></a></p>\n<h1>ipython_IDV</h1>\n<h3>Part of the <a href=\"https://brianmapes.github.io/EarthCube-DRILSDOWN/\" rel=\"nofollow\">EarthCube DRILSDOWN project</a></h3>\n<p>Extension for IPython Notebooks to provide line and cell magics to call out to Unidata's <a href=\"https://github.com/Unidata/IDV\" rel=\"nofollow\">Integrated Data Viewer</a></p>\n<h3>To set it up:</h3>\n<ol>\n<li>\n<p>After installing Jupyter/iPython notebook software <a href=\"https://jupyter-notebook-beginner-guide.readthedocs.io/en/latest/\" rel=\"nofollow\">like this</a>, you will also need to install the <a href=\"https://ipywidgets.readthedocs.io/en/latest/user_install.html\" rel=\"nofollow\">ipywidgets package</a></p>\n</li>\n<li>\n<p>Once Jupyter/iPython is ready, copy <a href=\"https://raw.githubusercontent.com/Unidata/drilsdown/master/projects/ipython_IDV/ipython_IDV.py\" rel=\"nofollow\">ipython_IDV.py</a> to your local extensions directory, <em>~/.ipython/extensions</em></p>\n</li>\n<li>\n<p>To run IDV commands from the Notebook, you will need to have installed <a href=\"http://www.unidata.ucar.edu/software/idv/nightly/\" rel=\"nofollow\">IDV version 5.4 or later</a>. Also, you need to set your IDV_HOME environment variable to be the IDV install directory, so that python can execute the command ${IDV_HOME}/runIDV</p>\n</li>\n<li>\n<p>You also need to configure your IDV to accept connections from the ipython notebook. To do this set the following property in your local ~/.unidata/idv/DefaultIdv/idv.properties file:</p>\n</li>\n</ol>\n<pre>idv.monitorport = 8765\n</pre>\n<hr>\n<h3>Now you've done the 4 steps above.</h3>\n<p>When you launch <em>jupyter notebook</em>, and run an iPython notebook in your browser, do this in the notebook:</p>\n<pre>%load_ext ipython_IDV\n</pre>\n<p>That will give you a dashboard-style view of many of the ways the Notebook can launch and interact with The IDV, and find resources such as existing bundles, data catalogs, and more, including a link to the help section.</p>\n<p>If you plan on writing Python code in this notbeook (rather then merely capturing images and notes about a case study IDV session), you should import the Idv and Ramadda classes:</p>\n<pre>from drilsdown import Idv\nfrom drilsdown import Ramadda\n</pre>\n<p>We welcome your use cases! Email mapes at miami dot edu. See examples <a href=\"https://github.com/Unidata/ipython_IDV/blob/master/README.md#examples\" rel=\"nofollow\">below</a>.</p>\n<hr>\n<h4>Publishing to RAMADDA, using the IDV's capabilities</h4>\n<p>If you want to enable your IDV to publish to a RAMADDA server, get <a href=\"https://github.com/Unidata/ipython_IDV/blob/master/ramaddaplugin.jar\" rel=\"nofollow\">ramaddaplugin.jar</a>. Copy this file to your local IDV plugins directory (~/.unidata/idv/DefaultIdv/plugins). While it is not a plain text code file, it is included in this repo so all of the products that are required for running drilsdown can be found in\none place.</p>\n<hr>\n<h4>Setting up your own RAMADDA to handle DRILSDOWN Case Study objects</h4>\n<p>If you operate a RAMADDA, and want it to host DRILSDOWN <em>Case Study</em> digital objects, get <a href=\"https://github.com/Unidata/ipython_IDV/blob/master/drilsdownplugin.jar\" rel=\"nofollow\">drilsdownplugin.jar</a>, put it in your RAMADDA installation's <em>plugins</em> area, and restart. It is produced from the code at <a href=\"https://github.com/Unidata/drilsdown\" rel=\"nofollow\">RAMADDA drilsdown repository</a> but is included here so all of the products that are required for running drilsdown can be found in one place.</p>\n<h2>Examples of Python notebooks calling DRILSDOWN and The IDV:</h2>\nHere is an example of how to use the API to load an IDV bundle with different bounding boxes and capture images\n<pre>from drilsdown import Idv\nIdv.fileUrl=\"http://geodesystems.com/repository/entry/get?entryid=d83e0924-008d-4025-9517-394e9f13712f\"\nbboxes = [[50,-130,40,-100],[50,-100,40,-75],[40,-130,20,-100],[40,-100,20,-75]]\nfor i in range(len(bboxes)):\n    bbox=bboxes[i];\n    Idv.loadBundle(Idv.fileUrl,bbox)\n    Idv.makeImage(caption=\"BBOX:\" + repr(bbox[0]) +\"/\" + repr(bbox[1]) +\"  \" + repr(bbox[2]) +\"/\" + repr(bbox[3]))\n</pre>\n<pre>from drilsdown import Idv\nIdv.fileUrl=\"http://geodesystems.com/repository/entry/get?entryid=d83e0924-008d-4025-9517-394e9f13712f\"\nbboxes = [[50,-130,40,-100],[50,-100,40,-75],[40,-130,20,-100],[40,-100,20,-75]]\nfor i in range(len(bboxes)):\n    bbox=bboxes[i];\n    Idv.loadBundle(Idv.fileUrl,bbox);\n    label = \"BBOX:\" + repr(bbox[0]) +\"/\" + repr(bbox[1]) +\"  \" + repr(bbox[2]) +\"/\" + repr(bbox[3]);\n    Idv.makeMovie(caption=label,display=True, publish={'parent':'9adf32b5-aad4-4a8d-997e-216b9757d240',\"name\":\"Image #\" + repr(i)})\n</pre>\n<p>The makeImage can take one of 2 forms of a publish argument. The first is a boolean and will result in the IDV popping up its RAMADDA publish dialog box where the image can be published.</p>\n<pre>    Idv.makeImage(caption=label, publish=True);\n</pre>\n<p>In the second form the publish argument is a map. This directs the python to do the publishing directly to RAMADDA. The map can contain a parent member which is the entry id to publish to and a name member which is the entry name.</p>\n<pre>    Idv.makeImage(caption=label, publish={'parent':'9adf32b5-aad4-4a8d-997e-216b9757d240',\"name\":\"Image #\" + repr(i)})\n</pre>\n<p>To enable direct publishing to RAMADDA you need to have your RAMADDA user name and password defined as environment variables:</p>\n<pre>export RAMADDA_USER=\nexport RAMADDA_PASSWORD=\n</pre>\n\n          </div>"}, "last_serial": 5952696, "releases": {"2.4.9": [{"comment_text": "", "digests": {"md5": "7dbe91e238b2a265b8b7efce68d3906e", "sha256": "af6abf077939bde49739d1d6f005da5d76a7c3f45e6423dc3c148a8136cca025"}, "downloads": -1, "filename": "ipyidv-2.4.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7dbe91e238b2a265b8b7efce68d3906e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30484, "upload_time": "2019-10-10T01:51:19", "upload_time_iso_8601": "2019-10-10T01:51:19.922498Z", "url": "https://files.pythonhosted.org/packages/59/bb/723739c4fb92077e69f82a44ef7b95ae2044b606f270ae0c28f0d288b692/ipyidv-2.4.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99beb31b64774d8543fd8c1449e9d373", "sha256": "0f8078bcdeb74e3ab8bc54859019d5d891d19639eb82ec721cef530cbdef1da9"}, "downloads": -1, "filename": "ipyidv-2.4.9.tar.gz", "has_sig": false, "md5_digest": "99beb31b64774d8543fd8c1449e9d373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18641, "upload_time": "2019-10-10T01:51:21", "upload_time_iso_8601": "2019-10-10T01:51:21.774487Z", "url": "https://files.pythonhosted.org/packages/b4/be/b854f0d4752bd29c8559c7a6889a7abff32035c2f39b27dae1658d1554f5/ipyidv-2.4.9.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "7dbe91e238b2a265b8b7efce68d3906e", "sha256": "af6abf077939bde49739d1d6f005da5d76a7c3f45e6423dc3c148a8136cca025"}, "downloads": -1, "filename": "ipyidv-2.4.9-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "7dbe91e238b2a265b8b7efce68d3906e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 30484, "upload_time": "2019-10-10T01:51:19", "upload_time_iso_8601": "2019-10-10T01:51:19.922498Z", "url": "https://files.pythonhosted.org/packages/59/bb/723739c4fb92077e69f82a44ef7b95ae2044b606f270ae0c28f0d288b692/ipyidv-2.4.9-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "99beb31b64774d8543fd8c1449e9d373", "sha256": "0f8078bcdeb74e3ab8bc54859019d5d891d19639eb82ec721cef530cbdef1da9"}, "downloads": -1, "filename": "ipyidv-2.4.9.tar.gz", "has_sig": false, "md5_digest": "99beb31b64774d8543fd8c1449e9d373", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 18641, "upload_time": "2019-10-10T01:51:21", "upload_time_iso_8601": "2019-10-10T01:51:21.774487Z", "url": "https://files.pythonhosted.org/packages/b4/be/b854f0d4752bd29c8559c7a6889a7abff32035c2f39b27dae1658d1554f5/ipyidv-2.4.9.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:29 2020"}