{"info": {"author": "Fabrice Salvaire", "author_email": "fabrice.salvaire@orange.fr", "bugtrack_url": null, "classifiers": ["Development Status :: 5 - Production/Stable", "Intended Audience :: Education", "License :: OSI Approved :: GNU General Public License v3 (GPLv3)", "Operating System :: OS Independent", "Programming Language :: Python :: 3.0", "Topic :: Scientific/Engineering"], "description": ".. -*- Mode: rst -*-\n\n.. -*- Mode: rst -*-\n\n..\n   |PyResistorColorCodeUrl|\n   |PyResistorColorCodeHomePage|_\n   |PyResistorColorCodeDoc|_\n   |PyResistorColorCode@github|_\n   |PyResistorColorCode@readthedocs|_\n   |PyResistorColorCode@readthedocs-badge|\n   |PyResistorColorCode@pypi|_\n\n.. |ohloh| image:: https://www.openhub.net/accounts/230426/widgets/account_tiny.gif\n   :target: https://www.openhub.net/accounts/fabricesalvaire\n   :alt: Fabrice Salvaire's Ohloh profile\n   :height: 15px\n   :width:  80px\n\n.. |PyResistorColorCodeUrl| replace:: https://fabricesalvaire.github.io/PyResistorColorCode\n\n.. |PyResistorColorCodeHomePage| replace:: PyResistorColorCode Home Page\n.. _PyResistorColorCodeHomePage: https://fabricesalvaire.github.io/PyResistorColorCode\n\n.. |PyResistorColorCode@readthedocs-badge| image:: https://readthedocs.org/projects/PyResistorColorCode/badge/?version=latest\n   :target: http://PyResistorColorCode.readthedocs.org/en/latest\n\n.. |PyResistorColorCode@github| replace:: https://github.com/FabriceSalvaire/PyResistorColorCode\n.. .. _PyResistorColorCode@github: https://github.com/FabriceSalvaire/PyResistorColorCode\n\n.. |PyResistorColorCode@pypi| replace:: https://pypi.python.org/pypi/PyResistorColorCode\n.. .. _PyResistorColorCode@pypi: https://pypi.python.org/pypi/PyResistorColorCode\n\n.. |Build Status| image:: https://travis-ci.org/FabriceSalvaire/PyResistorColorCode.svg?branch=master\n   :target: https://travis-ci.org/FabriceSalvaire/PyResistorColorCode\n   :alt: PyResistorColorCode build status @travis-ci.org\n\n.. |Pypi Version| image:: https://img.shields.io/pypi/v/PyResistorColorCode.svg\n   :target: https://pypi.python.org/pypi/PyResistorColorCode\n   :alt: PyResistorColorCode last version\n\n.. |Pypi License| image:: https://img.shields.io/pypi/l/PyResistorColorCode.svg\n   :target: https://pypi.python.org/pypi/PyResistorColorCode\n   :alt: PyResistorColorCode license\n\n.. |Pypi Python Version| image:: https://img.shields.io/pypi/pyversions/PyResistorColorCode.svg\n   :target: https://pypi.python.org/pypi/PyResistorColorCode\n   :alt: PyResistorColorCode python version\n\n..  coverage test\n..  https://img.shields.io/pypi/status/Django.svg\n..  https://img.shields.io/github/stars/badges/shields.svg?style=social&label=Star\n\n.. End\n.. -*- Mode: rst -*-\n\n.. |Python| replace:: Python\n.. _Python: http://python.org\n\n.. |PyPI| replace:: PyPI\n.. _PyPI: https://pypi.python.org/pypi\n\n.. |Sphinx| replace:: Sphinx\n.. _Sphinx: http://sphinx-doc.org\n\n=====================\n PyResistorColorCode\n=====================\n\n|Pypi License|\n|Pypi Python Version|\n\n|Pypi Version|\n\nOverview\n========\n\n.. -*- Mode: rst -*-\n\nPyResistorColorCode is a Python module that provides some tools to manage `IEC 60062\n<http://webstore.iec.ch/webstore/webstore.nsf/artnum/033377!openDocument>`_ marking codes for\nresistors.\n\n.. IEC 60062 is also for \"and capacitors\"\n\nThe associated program **resistor-decoder** provides a graphical user interface to help user to\ndecode a resistor colour-coding using an inference algorithm. This feature is an enhancement\ncompared to a program like **gresistor** which is only a colour-coding calculator.\n\nI started to develop this software a day where I had to sort a lot of unsorted resistors in a\njumble. Resistors colour-coding using no more than 3 bands (2 digits and a multiplier) are no too\ndifficult to decode when a person is experienced. But for more accurate resistors, it is more\ntricky. Another difficulty arises when it is difficult to recognise the colour of a band, due to an\ninappropriate colour contrast or tone. For strange colour-coding we can in last resort use an\nOhmmeter to measure the resistance value. But it doesn't respond to the question what is the\nspecification of this resistor: tolerance, temperature coefficient, etc. For all theses reasons, I\ndeveloped an inference algorithm coupled to an graphical user interface to help user to decode\nresistor colour-coding.\n\n.. The user and API documentation is hosted `here <http://fabricesalvaire.github.io/PyResistorColorCode>`_.\n\n.. image:: https://raw.github.com/FabriceSalvaire/PyResistorColorCode/master/doc/sphinx/source/images/resistor-decoder.png\n\nInference Algorithm\n-------------------\n\n.. -*- Mode: rst -*-\n\nThe inference algorithm works as follow:\n\n* code orientation (left-right or right-left) doesn't matter,\n* unset bands are not take into account,\n* at least 3 colours must be provided: 2 digits and the multiplier,\n* colour band are interpreted by priority as:\n\n #. resistance value,\n #. resistance tolerance,\n #. temperature coefficient,\n\n* the resistance value must exists in a IEC 60063 series: E6, E12, E48, E96, E192,\n* the resistance tolerance must be defined if there is a colour band assigned to it. \n\nWhen there is more than one hypothesis for the given input, the hypotheses are sorted by ascending\nprecision (series).\n\n.. End\n\nWhere is the Documentation ?\n----------------------------\n\nThe documentation is available on the |PyResistorColorCodeHomePage|_.\n\nHow to install it ?\n-------------------\n\nLook at the `installation <https://fabricesalvaire.github.io/PyResistorColorCode/installation.html>`_ section in the documentation.\n\nCredits\n=======\n\nAuthors: `Fabrice Salvaire <http://fabrice-salvaire.fr>`_\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/FabriceSalvaire/PyResistorColorCode", "keywords": "resistor color colour code IEC 6006", "license": "GPLv3", "maintainer": "", "maintainer_email": "", "name": "PyResistorColorCode", "package_url": "https://pypi.org/project/PyResistorColorCode/", "platform": "any", "project_url": "https://pypi.org/project/PyResistorColorCode/", "project_urls": {"Homepage": "https://github.com/FabriceSalvaire/PyResistorColorCode"}, "release_url": "https://pypi.org/project/PyResistorColorCode/1.0.0/", "requires_dist": ["PyQt5"], "requires_python": "", "summary": "Python module providing some tools to manage IEC 60062 marking codes for resistors.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p><a href=\"https://pypi.python.org/pypi/PyResistorColorCode\" rel=\"nofollow\"><img alt=\"PyResistorColorCode license\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/0785ec795fac58e51a0585924403539c335870e5/68747470733a2f2f696d672e736869656c64732e696f2f707970692f6c2f50795265736973746f72436f6c6f72436f64652e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/PyResistorColorCode\" rel=\"nofollow\"><img alt=\"PyResistorColorCode python version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/d0a21b0e6a27535496a34875c879247c2a427ff3/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f50795265736973746f72436f6c6f72436f64652e737667\"></a></p>\n<p><a href=\"https://pypi.python.org/pypi/PyResistorColorCode\" rel=\"nofollow\"><img alt=\"PyResistorColorCode last version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e8d96c240f63feead8a6f8d1f29cf728d13af11f/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f50795265736973746f72436f6c6f72436f64652e737667\"></a></p>\n<div id=\"overview\">\n<h2>Overview</h2>\n<p>PyResistorColorCode is a Python module that provides some tools to manage <a href=\"http://webstore.iec.ch/webstore/webstore.nsf/artnum/033377!openDocument\" rel=\"nofollow\">IEC 60062</a> marking codes for\nresistors.</p>\n<p>The associated program <strong>resistor-decoder</strong> provides a graphical user interface to help user to\ndecode a resistor colour-coding using an inference algorithm. This feature is an enhancement\ncompared to a program like <strong>gresistor</strong> which is only a colour-coding calculator.</p>\n<p>I started to develop this software a day where I had to sort a lot of unsorted resistors in a\njumble. Resistors colour-coding using no more than 3 bands (2 digits and a multiplier) are no too\ndifficult to decode when a person is experienced. But for more accurate resistors, it is more\ntricky. Another difficulty arises when it is difficult to recognise the colour of a band, due to an\ninappropriate colour contrast or tone. For strange colour-coding we can in last resort use an\nOhmmeter to measure the resistance value. But it doesn\u2019t respond to the question what is the\nspecification of this resistor: tolerance, temperature coefficient, etc. For all theses reasons, I\ndeveloped an inference algorithm coupled to an graphical user interface to help user to decode\nresistor colour-coding.</p>\n<img alt=\"https://raw.github.com/FabriceSalvaire/PyResistorColorCode/master/doc/sphinx/source/images/resistor-decoder.png\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/e237b220ab12b617fb4b73275b915d993422a0a6/68747470733a2f2f7261772e6769746875622e636f6d2f4661627269636553616c76616972652f50795265736973746f72436f6c6f72436f64652f6d61737465722f646f632f737068696e782f736f757263652f696d616765732f7265736973746f722d6465636f6465722e706e67\">\n<div id=\"inference-algorithm\">\n<h3>Inference Algorithm</h3>\n<p>The inference algorithm works as follow:</p>\n<ul>\n<li>code orientation (left-right or right-left) doesn\u2019t matter,</li>\n<li>unset bands are not take into account,</li>\n<li>at least 3 colours must be provided: 2 digits and the multiplier,</li>\n<li>colour band are interpreted by priority as:</li>\n</ul>\n<blockquote>\n<ol>\n<li>resistance value,</li>\n<li>resistance tolerance,</li>\n<li>temperature coefficient,</li>\n</ol>\n</blockquote>\n<ul>\n<li>the resistance value must exists in a IEC 60063 series: E6, E12, E48, E96, E192,</li>\n<li>the resistance tolerance must be defined if there is a colour band assigned to it.</li>\n</ul>\n<p>When there is more than one hypothesis for the given input, the hypotheses are sorted by ascending\nprecision (series).</p>\n</div>\n<div id=\"where-is-the-documentation\">\n<h3>Where is the Documentation ?</h3>\n<p>The documentation is available on the <a href=\"https://fabricesalvaire.github.io/PyResistorColorCode\" rel=\"nofollow\">PyResistorColorCode Home Page</a>.</p>\n</div>\n<div id=\"how-to-install-it\">\n<h3>How to install it ?</h3>\n<p>Look at the <a href=\"https://fabricesalvaire.github.io/PyResistorColorCode/installation.html\" rel=\"nofollow\">installation</a> section in the documentation.</p>\n</div>\n</div>\n<div id=\"credits\">\n<h2>Credits</h2>\n<p>Authors: <a href=\"http://fabrice-salvaire.fr\" rel=\"nofollow\">Fabrice Salvaire</a></p>\n</div>\n\n          </div>"}, "last_serial": 3352692, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "9e42dd6d8dbe2cb2dce804af2b31b64d", "sha256": "05f64e5fdd2f6823829337b7a4e09209434278649017d42c4d18904bb2029416"}, "downloads": -1, "filename": "PyResistorColorCode-0.1.0.tar.gz", "has_sig": false, "md5_digest": "9e42dd6d8dbe2cb2dce804af2b31b64d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 159993, "upload_time": "2014-04-08T15:53:02", "upload_time_iso_8601": "2014-04-08T15:53:02.215243Z", "url": "https://files.pythonhosted.org/packages/51/28/3ee29e47f4a921103475707ee2fb138f3510e8095afa65047bde5ad48b71/PyResistorColorCode-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "8123664d384cce044dbbbb68f74407e5", "sha256": "27ea9352d1fb3b33d76ef1163d969d742c28de65f55cdd7f70ade4d354e24e37"}, "downloads": -1, "filename": "PyResistorColorCode-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "8123664d384cce044dbbbb68f74407e5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24613, "upload_time": "2017-11-21T16:50:41", "upload_time_iso_8601": "2017-11-21T16:50:41.026329Z", "url": "https://files.pythonhosted.org/packages/62/6b/25e97b1d6af8142aab739efa8ced77ff3cab3f0c38ed0322c13f7b35a1a4/PyResistorColorCode-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48cc72f2332103c90b459e4d001419cd", "sha256": "28f7c4aeb006a9d157be0331b62f202eb57635cea13b97081492e4e7e6aa9dff"}, "downloads": -1, "filename": "PyResistorColorCode-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "48cc72f2332103c90b459e4d001419cd", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 40593, "upload_time": "2017-11-21T16:50:44", "upload_time_iso_8601": "2017-11-21T16:50:44.250308Z", "url": "https://files.pythonhosted.org/packages/2a/ed/aabf5340860b42f852b252e7671b4333b4ca433a390ef736cabd9d535bb0/PyResistorColorCode-1.0.0-py3.6.egg", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8123664d384cce044dbbbb68f74407e5", "sha256": "27ea9352d1fb3b33d76ef1163d969d742c28de65f55cdd7f70ade4d354e24e37"}, "downloads": -1, "filename": "PyResistorColorCode-1.0.0-py2.py3-none-any.whl", "has_sig": true, "md5_digest": "8123664d384cce044dbbbb68f74407e5", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 24613, "upload_time": "2017-11-21T16:50:41", "upload_time_iso_8601": "2017-11-21T16:50:41.026329Z", "url": "https://files.pythonhosted.org/packages/62/6b/25e97b1d6af8142aab739efa8ced77ff3cab3f0c38ed0322c13f7b35a1a4/PyResistorColorCode-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "48cc72f2332103c90b459e4d001419cd", "sha256": "28f7c4aeb006a9d157be0331b62f202eb57635cea13b97081492e4e7e6aa9dff"}, "downloads": -1, "filename": "PyResistorColorCode-1.0.0-py3.6.egg", "has_sig": false, "md5_digest": "48cc72f2332103c90b459e4d001419cd", "packagetype": "bdist_egg", "python_version": "3.6", "requires_python": null, "size": 40593, "upload_time": "2017-11-21T16:50:44", "upload_time_iso_8601": "2017-11-21T16:50:44.250308Z", "url": "https://files.pythonhosted.org/packages/2a/ed/aabf5340860b42f852b252e7671b4333b4ca433a390ef736cabd9d535bb0/PyResistorColorCode-1.0.0-py3.6.egg", "yanked": false}], "timestamp": "Fri May  8 02:57:52 2020"}