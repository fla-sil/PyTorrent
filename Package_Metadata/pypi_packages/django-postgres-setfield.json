{"info": {"author": "Peter Bex", "author_email": "peter@codeyellow.nl", "bugtrack_url": null, "classifiers": ["Environment :: Web Environment", "Framework :: Django", "Framework :: Django :: 2.1", "Framework :: Django :: 2.2", "Intended Audience :: Developers", "License :: OSI Approved :: MIT License", "Operating System :: OS Independent", "Programming Language :: Python", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.5", "Programming Language :: Python :: 3.7", "Topic :: Database", "Topic :: Internet :: WWW/HTTP", "Topic :: Internet :: WWW/HTTP :: Dynamic Content"], "description": "django-postgres-setfield\n========================\n\n.. image:: https://travis-ci.org/CodeYellowBV/django-postgres-setfield.svg?branch=master\n   :target: https://travis-ci.org/CodeYellowBV/django-postgres-setfield\n\nA Django field for storing `standard Python set <https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset>`_\nobjects.  It uses Postgres arrays as a backing store.\n\nUsage\n-----\n\nUsing the field is straightforward, and similar to how you'd use a\n`Django ArrayField <https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/fields/>`_.\nYou can add the field to your model like so:\n\n.. code:: python\n\n    from django.db import models\n    from setfield import SetField\n\n    class Person(models.Model):\n      LANGUAGES = (('NL', 'Dutch'), ('EN', 'English'), ('RU', 'Russian'))\n      speaks_languages=SetField(models.TextField(choices=LANGUAGES), default=list, blank=True)\n\nThen later, you can use it:\n\n.. code:: python\n\n    piet = Person(languages={'NL'})\n    piet.save()\n\n    john = Person(languages={'RU', 'EN'})\n    john.save()\n\n\nLookups\n-------\n\nAll the standard `Django ArrayField`_ lookups are supported.\n\n\nCaveats\n-------\n\n* Unlike ArrayFields, SetFields cannot be nested (because sets cannot\n  be nested in Python).\n* When upgrading an existing ArrayField to a SetField, make sure the\n  entries are sorted using the default sort order of Python for the\n  corresponding object type, if you want to use the ``__exact``\n  lookup.  Otherwise you'll get inconsistent results.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/CodeYellowBV/django-postgres-setfield", "keywords": "", "license": "MIT License", "maintainer": "", "maintainer_email": "", "name": "django-postgres-setfield", "package_url": "https://pypi.org/project/django-postgres-setfield/", "platform": "", "project_url": "https://pypi.org/project/django-postgres-setfield/", "project_urls": {"Homepage": "https://github.com/CodeYellowBV/django-postgres-setfield"}, "release_url": "https://pypi.org/project/django-postgres-setfield/0.0.1/", "requires_dist": ["Django (>=2.1)"], "requires_python": "", "summary": "Django field for storing sets, backed by Postgres arrays", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <a href=\"https://travis-ci.org/CodeYellowBV/django-postgres-setfield\" rel=\"nofollow\"><img alt=\"https://travis-ci.org/CodeYellowBV/django-postgres-setfield.svg?branch=master\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/2e169b61f8ac4d1ef07824208384a00cbde7ddd4/68747470733a2f2f7472617669732d63692e6f72672f436f646559656c6c6f7742562f646a616e676f2d706f7374677265732d7365746669656c642e7376673f6272616e63683d6d6173746572\"></a>\n<p>A Django field for storing <a href=\"https://docs.python.org/3/library/stdtypes.html#set-types-set-frozenset\" rel=\"nofollow\">standard Python set</a>\nobjects.  It uses Postgres arrays as a backing store.</p>\n<div id=\"usage\">\n<h2>Usage</h2>\n<p>Using the field is straightforward, and similar to how you\u2019d use a\n<a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/fields/\" rel=\"nofollow\">Django ArrayField</a>.\nYou can add the field to your model like so:</p>\n<pre><span class=\"kn\">from</span> <span class=\"nn\">django.db</span> <span class=\"kn\">import</span> <span class=\"n\">models</span>\n<span class=\"kn\">from</span> <span class=\"nn\">setfield</span> <span class=\"kn\">import</span> <span class=\"n\">SetField</span>\n\n<span class=\"k\">class</span> <span class=\"nc\">Person</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">Model</span><span class=\"p\">):</span>\n  <span class=\"n\">LANGUAGES</span> <span class=\"o\">=</span> <span class=\"p\">((</span><span class=\"s1\">'NL'</span><span class=\"p\">,</span> <span class=\"s1\">'Dutch'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'EN'</span><span class=\"p\">,</span> <span class=\"s1\">'English'</span><span class=\"p\">),</span> <span class=\"p\">(</span><span class=\"s1\">'RU'</span><span class=\"p\">,</span> <span class=\"s1\">'Russian'</span><span class=\"p\">))</span>\n  <span class=\"n\">speaks_languages</span><span class=\"o\">=</span><span class=\"n\">SetField</span><span class=\"p\">(</span><span class=\"n\">models</span><span class=\"o\">.</span><span class=\"n\">TextField</span><span class=\"p\">(</span><span class=\"n\">choices</span><span class=\"o\">=</span><span class=\"n\">LANGUAGES</span><span class=\"p\">),</span> <span class=\"n\">default</span><span class=\"o\">=</span><span class=\"nb\">list</span><span class=\"p\">,</span> <span class=\"n\">blank</span><span class=\"o\">=</span><span class=\"kc\">True</span><span class=\"p\">)</span>\n</pre>\n<p>Then later, you can use it:</p>\n<pre><span class=\"n\">piet</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">languages</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'NL'</span><span class=\"p\">})</span>\n<span class=\"n\">piet</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n\n<span class=\"n\">john</span> <span class=\"o\">=</span> <span class=\"n\">Person</span><span class=\"p\">(</span><span class=\"n\">languages</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"s1\">'RU'</span><span class=\"p\">,</span> <span class=\"s1\">'EN'</span><span class=\"p\">})</span>\n<span class=\"n\">john</span><span class=\"o\">.</span><span class=\"n\">save</span><span class=\"p\">()</span>\n</pre>\n</div>\n<div id=\"lookups\">\n<h2>Lookups</h2>\n<p>All the standard <a href=\"https://docs.djangoproject.com/en/2.1/ref/contrib/postgres/fields/\" rel=\"nofollow\">Django ArrayField</a> lookups are supported.</p>\n</div>\n<div id=\"caveats\">\n<h2>Caveats</h2>\n<ul>\n<li>Unlike ArrayFields, SetFields cannot be nested (because sets cannot\nbe nested in Python).</li>\n<li>When upgrading an existing ArrayField to a SetField, make sure the\nentries are sorted using the default sort order of Python for the\ncorresponding object type, if you want to use the <tt>__exact</tt>\nlookup.  Otherwise you\u2019ll get inconsistent results.</li>\n</ul>\n</div>\n\n          </div>"}, "last_serial": 6173905, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4cd0065861e2e500a8fe33dc6ff5ee87", "sha256": "e7d17ae5405933e65415baf6c4a2cf1f2d62ccf1281d807eed3b1e87d3c73740"}, "downloads": -1, "filename": "django_postgres_setfield-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4cd0065861e2e500a8fe33dc6ff5ee87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6780, "upload_time": "2019-11-21T09:20:28", "upload_time_iso_8601": "2019-11-21T09:20:28.091770Z", "url": "https://files.pythonhosted.org/packages/d6/ba/034bacda17cdae5af5f1f963bc95ab796e8340abd0c85c8da89d8606c733/django_postgres_setfield-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a70f7a151a669344917a10de9a5b0fa", "sha256": "99041c82ead927d0e28a5f154fcf99c4666600314780cd8c8adbe061f33eb923"}, "downloads": -1, "filename": "django-postgres-setfield-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a70f7a151a669344917a10de9a5b0fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5441, "upload_time": "2019-11-21T09:20:30", "upload_time_iso_8601": "2019-11-21T09:20:30.548677Z", "url": "https://files.pythonhosted.org/packages/21/6e/0cd82e751d29296c72da6e5fc690de84cff6bf6f1318cc086bc590335c2d/django-postgres-setfield-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "4cd0065861e2e500a8fe33dc6ff5ee87", "sha256": "e7d17ae5405933e65415baf6c4a2cf1f2d62ccf1281d807eed3b1e87d3c73740"}, "downloads": -1, "filename": "django_postgres_setfield-0.0.1-py3-none-any.whl", "has_sig": false, "md5_digest": "4cd0065861e2e500a8fe33dc6ff5ee87", "packagetype": "bdist_wheel", "python_version": "py3", "requires_python": null, "size": 6780, "upload_time": "2019-11-21T09:20:28", "upload_time_iso_8601": "2019-11-21T09:20:28.091770Z", "url": "https://files.pythonhosted.org/packages/d6/ba/034bacda17cdae5af5f1f963bc95ab796e8340abd0c85c8da89d8606c733/django_postgres_setfield-0.0.1-py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "3a70f7a151a669344917a10de9a5b0fa", "sha256": "99041c82ead927d0e28a5f154fcf99c4666600314780cd8c8adbe061f33eb923"}, "downloads": -1, "filename": "django-postgres-setfield-0.0.1.tar.gz", "has_sig": false, "md5_digest": "3a70f7a151a669344917a10de9a5b0fa", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5441, "upload_time": "2019-11-21T09:20:30", "upload_time_iso_8601": "2019-11-21T09:20:30.548677Z", "url": "https://files.pythonhosted.org/packages/21/6e/0cd82e751d29296c72da6e5fc690de84cff6bf6f1318cc086bc590335c2d/django-postgres-setfield-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:54:50 2020"}