{"info": {"author": "Thijs Vogels", "author_email": "t.vogels@me.com", "bugtrack_url": null, "classifiers": [], "description": "# Dixi - Deep Dictionaries for Python\n\n## Installation\n```bash\npip install dixi\n```\n\n## Examples\n```python\nfrom dixi import Dixi\n\ndata = Dixi({\n    'Chris': {\n        'age': 25,\n        'address': {\n            'city': 'Amsterdam',\n            'country': 'Netherlands',\n        },\n    },\n    'Anna': {\n        'age': 19,\n        'address': {\n            'city': 'Z\u00fcrich',\n            'country': 'Switzerland',\n        },\n    },\n    'John': {\n        'age': 44,\n        'address': {\n            'city': 'London',\n            'country': 'United Kingdom',\n        },\n    },\n})\n```\n\n### Deep indexing\n```python\ndata['John', 'age']\n# >> 44\n```\n\n### Partial indexing\n```python\ndata['Chris', 'address']\n# >> {'city': 'Amsterdam', 'country': 'Netherlands'}\n```\n\n### NumpPy style slicing\n```python\ndata[:, 'address', 'country']\n# >> Dixi({'Chris': 'Netherlands', 'Anna': 'Switzerland', 'John': 'United Kingdom'})\ndata[['Chris', 'Anna'], 'age']\n# >> {'Chris': 25, 'Anna': 19}\n```\n\n### Setting\n```python\ndata['Derek', 'hobbies'] = ['Sewing', 'Archery']\n```\n\n### Iteration\n```python\nfor key in data: # or key in data.leafkeys()\n    print(key)\n# >> ('Chris', 'age')\n# >> ('Anna', 'age')\n# >> ('Anna', 'address', 'city')\n# >> ('Anna', 'address', 'country')\n# >> ('John', 'age')\n# >> ('John', 'address', 'city')\n# >> ('John', 'address', 'country')\n# >> ('Derek', 'hobbies')\n```\n```python\nfor key in data.keys():\n    print(key)\n# >> Chris\n# >> Anna\n# >> John\n# >> Derek\n```\n```python\nfor key, value in data.items():\n    print(key, value)\n# >> Chris {'age': 25}\n# >> Anna {'age': 19, 'address': {'city': 'Z\u00fcrich', 'country': 'Switzerland'}}\n# >> John {'age': 44, 'address': {'city': 'London', 'country': 'United Kingdom'}}\n# >> Derek {'hobbies': ['Sewing', 'Archery']}\n```\n```python\ndata = Dixi({\n    0: {  0: 'a', 1: 'b' },\n    1: { 0: 'c', 1: 'd' },\n})\nfor keys, value in data.iterleaves():\n    print(keys, value)\n# >> (0, 0) a\n# >> (0, 1) b\n# >> (1, 0) c\n# >> (1, 1) d\n```\n\n### Deletion\n```python\ndel data['Chris', 'address']\n```\n\n## Todo\n* Allow indexing for arrays\n\n\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/tvogels/pyexr", "keywords": "dict,tree,numpy slicing", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "dixi", "package_url": "https://pypi.org/project/dixi/", "platform": "", "project_url": "https://pypi.org/project/dixi/", "project_urls": {"Homepage": "https://github.com/tvogels/pyexr"}, "release_url": "https://pypi.org/project/dixi/0.0.1/", "requires_dist": null, "requires_python": "", "summary": "Wrapper around Python dicts that makes it easy to deal with nested tree structures.", "version": "0.0.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            # Dixi - Deep Dictionaries for Python<br><br>## Installation<br>```bash<br>pip install dixi<br>```<br><br>## Examples<br>```python<br>from dixi import Dixi<br><br>data = Dixi({<br>    'Chris': {<br>        'age': 25,<br>        'address': {<br>            'city': 'Amsterdam',<br>            'country': 'Netherlands',<br>        },<br>    },<br>    'Anna': {<br>        'age': 19,<br>        'address': {<br>            'city': 'Z\u00fcrich',<br>            'country': 'Switzerland',<br>        },<br>    },<br>    'John': {<br>        'age': 44,<br>        'address': {<br>            'city': 'London',<br>            'country': 'United Kingdom',<br>        },<br>    },<br>})<br>```<br><br>### Deep indexing<br>```python<br>data['John', 'age']<br># &gt;&gt; 44<br>```<br><br>### Partial indexing<br>```python<br>data['Chris', 'address']<br># &gt;&gt; {'city': 'Amsterdam', 'country': 'Netherlands'}<br>```<br><br>### NumpPy style slicing<br>```python<br>data[:, 'address', 'country']<br># &gt;&gt; Dixi({'Chris': 'Netherlands', 'Anna': 'Switzerland', 'John': 'United Kingdom'})<br>data[['Chris', 'Anna'], 'age']<br># &gt;&gt; {'Chris': 25, 'Anna': 19}<br>```<br><br>### Setting<br>```python<br>data['Derek', 'hobbies'] = ['Sewing', 'Archery']<br>```<br><br>### Iteration<br>```python<br>for key in data: # or key in data.leafkeys()<br>    print(key)<br># &gt;&gt; ('Chris', 'age')<br># &gt;&gt; ('Anna', 'age')<br># &gt;&gt; ('Anna', 'address', 'city')<br># &gt;&gt; ('Anna', 'address', 'country')<br># &gt;&gt; ('John', 'age')<br># &gt;&gt; ('John', 'address', 'city')<br># &gt;&gt; ('John', 'address', 'country')<br># &gt;&gt; ('Derek', 'hobbies')<br>```<br>```python<br>for key in data.keys():<br>    print(key)<br># &gt;&gt; Chris<br># &gt;&gt; Anna<br># &gt;&gt; John<br># &gt;&gt; Derek<br>```<br>```python<br>for key, value in data.items():<br>    print(key, value)<br># &gt;&gt; Chris {'age': 25}<br># &gt;&gt; Anna {'age': 19, 'address': {'city': 'Z\u00fcrich', 'country': 'Switzerland'}}<br># &gt;&gt; John {'age': 44, 'address': {'city': 'London', 'country': 'United Kingdom'}}<br># &gt;&gt; Derek {'hobbies': ['Sewing', 'Archery']}<br>```<br>```python<br>data = Dixi({<br>    0: {  0: 'a', 1: 'b' },<br>    1: { 0: 'c', 1: 'd' },<br>})<br>for keys, value in data.iterleaves():<br>    print(keys, value)<br># &gt;&gt; (0, 0) a<br># &gt;&gt; (0, 1) b<br># &gt;&gt; (1, 0) c<br># &gt;&gt; (1, 1) d<br>```<br><br>### Deletion<br>```python<br>del data['Chris', 'address']<br>```<br><br>## Todo<br>* Allow indexing for arrays<br><br><br>\n          </div>"}, "last_serial": 3611799, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "0f64ab77749eb8701521cbf43041ca6b", "sha256": "5850e25109418a32a1a9550a8111b7d32ce0e0261708048ab1ff72da199ecf57"}, "downloads": -1, "filename": "dixi-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0f64ab77749eb8701521cbf43041ca6b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4310, "upload_time": "2018-02-24T10:55:35", "upload_time_iso_8601": "2018-02-24T10:55:35.607512Z", "url": "https://files.pythonhosted.org/packages/07/c2/907341c6a8796b2162026c0f663f93ab084d1c421f0e513b5e348e4e432a/dixi-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "541cd946c2402086d1dd1f4edc8c8e69", "sha256": "881743375ef2fe1edca6fb235f956a3502ea58a035370c874be1846ea5c12e8e"}, "downloads": -1, "filename": "dixi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "541cd946c2402086d1dd1f4edc8c8e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2610, "upload_time": "2018-02-24T10:55:37", "upload_time_iso_8601": "2018-02-24T10:55:37.009698Z", "url": "https://files.pythonhosted.org/packages/73/f5/b35d3e999a3409f9be6b7d17ba57edba4ef645f0140c463414411a4f668b/dixi-0.0.1.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "0f64ab77749eb8701521cbf43041ca6b", "sha256": "5850e25109418a32a1a9550a8111b7d32ce0e0261708048ab1ff72da199ecf57"}, "downloads": -1, "filename": "dixi-0.0.1-py2-none-any.whl", "has_sig": false, "md5_digest": "0f64ab77749eb8701521cbf43041ca6b", "packagetype": "bdist_wheel", "python_version": "py2", "requires_python": null, "size": 4310, "upload_time": "2018-02-24T10:55:35", "upload_time_iso_8601": "2018-02-24T10:55:35.607512Z", "url": "https://files.pythonhosted.org/packages/07/c2/907341c6a8796b2162026c0f663f93ab084d1c421f0e513b5e348e4e432a/dixi-0.0.1-py2-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "541cd946c2402086d1dd1f4edc8c8e69", "sha256": "881743375ef2fe1edca6fb235f956a3502ea58a035370c874be1846ea5c12e8e"}, "downloads": -1, "filename": "dixi-0.0.1.tar.gz", "has_sig": false, "md5_digest": "541cd946c2402086d1dd1f4edc8c8e69", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 2610, "upload_time": "2018-02-24T10:55:37", "upload_time_iso_8601": "2018-02-24T10:55:37.009698Z", "url": "https://files.pythonhosted.org/packages/73/f5/b35d3e999a3409f9be6b7d17ba57edba4ef645f0140c463414411a4f668b/dixi-0.0.1.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:37:57 2020"}