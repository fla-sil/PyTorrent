{"info": {"author": "Karim Bahgat", "author_email": "karim.bahgat.norway@gmail.com", "bugtrack_url": null, "classifiers": ["Development Status :: 4 - Beta", "Intended Audience :: Developers", "Intended Audience :: End Users/Desktop", "Intended Audience :: Science/Research", "License :: OSI Approved", "Programming Language :: Python", "Topic :: Scientific/Engineering :: GIS"], "description": "Pyqtree\n=======\n\nPyqtree is a pure Python spatial index for GIS or rendering usage. It\nstores and quickly retrieves items from a 2x2 rectangular grid area, and\ngrows in depth and detail as more items are added. The actual quad tree\nimplementation is adapted from `Matt Rasmussen's compbio\nlibrary <https://github.com/mdrasmus/compbio/blob/master/rasmus/quadtree.py>`__\nand extended for geospatial use.\n\nPlatforms\n---------\n\nPython 2 and 3.\n\nDependencies\n------------\n\nPyqtree is written in pure Python and has no dependencies.\n\nInstalling It\n-------------\n\nInstalling Pyqtree can be done by opening your terminal or commandline\nand typing:\n\n::\n\n    pip install pyqtree\n\nAlternatively, you can simply download the \"pyqtree.py\" file and place\nit anywhere Python can import it, such as the Python site-packages\nfolder.\n\nExample Usage\n-------------\n\nStart your script by importing the quad tree.\n\n::\n\n    from pyqtree import Index\n\nSetup the spatial index, giving it a bounding box area to keep track of.\nThe bounding box being in a four-tuple: (xmin, ymin, xmax, ymax).\n\n::\n\n    spindex = Index(bbox=(0, 0, 100, 100))\n\nPopulate the index with items that you want to be retrieved at a later\npoint, along with each item's geographic bbox.\n\n::\n\n    # this example assumes you have a list of items with bbox attribute\n    for item in items:\n        spindex.insert(item, item.bbox)\n\nThen when you have a region of interest and you wish to retrieve items\nfrom that region, just use the index's intersect method. This quickly\ngives you a list of the stored items whose bboxes intersects your region\nof interests.\n\n::\n\n    overlapbbox = (51, 51, 86, 86)\n    matches = spindex.intersect(overlapbbox)\n\nThere are other things that can be done as well, but that's it for the\nmain usage!\n\nMore Information:\n-----------------\n\n-  `Home Page <http://github.com/karimbahgat/Pyqtree>`__\n-  `API Documentation <https://karimbahgat.github.io/Pyqtree/>`__\n\nLicense:\n--------\n\nThis code is free to share, use, reuse, and modify according to the MIT\nlicense, see LICENSE.txt.\n\nCredits:\n--------\n\n-  Karim Bahgat\n-  Joschua Gandert\n\nChanges\n-------\n\n1.0.0 (2018-09-14)\n~~~~~~~~~~~~~~~~~~\n\n-  Bump to first major version\n-  Fix so returns list instead of set\n-  Support inserting hashable items\n\n0.25.0 (2016-06-22)\n~~~~~~~~~~~~~~~~~~~\n\n-  Misc user contributions and bug fixes\n\n0.24.0 (2015-06-18)\n~~~~~~~~~~~~~~~~~~~\n\n-  Previous stable PyPI version.\n", "description_content_type": "", "docs_url": "https://pythonhosted.org/Pyqtree/", "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "http://github.com/karimbahgat/Pyqtree", "keywords": "GIS spatial index quad tree", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "Pyqtree", "package_url": "https://pypi.org/project/Pyqtree/", "platform": "", "project_url": "https://pypi.org/project/Pyqtree/", "project_urls": {"Homepage": "http://github.com/karimbahgat/Pyqtree"}, "release_url": "https://pypi.org/project/Pyqtree/1.0.0/", "requires_dist": null, "requires_python": "", "summary": "A pure Python quad tree spatial index for GIS or rendering usage.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <p>Pyqtree is a pure Python spatial index for GIS or rendering usage. It\nstores and quickly retrieves items from a 2x2 rectangular grid area, and\ngrows in depth and detail as more items are added. The actual quad tree\nimplementation is adapted from <a href=\"https://github.com/mdrasmus/compbio/blob/master/rasmus/quadtree.py\" rel=\"nofollow\">Matt Rasmussen\u2019s compbio\nlibrary</a>\nand extended for geospatial use.</p>\n<div id=\"platforms\">\n<h2>Platforms</h2>\n<p>Python 2 and 3.</p>\n</div>\n<div id=\"dependencies\">\n<h2>Dependencies</h2>\n<p>Pyqtree is written in pure Python and has no dependencies.</p>\n</div>\n<div id=\"installing-it\">\n<h2>Installing It</h2>\n<p>Installing Pyqtree can be done by opening your terminal or commandline\nand typing:</p>\n<pre>pip install pyqtree\n</pre>\n<p>Alternatively, you can simply download the \u201cpyqtree.py\u201d file and place\nit anywhere Python can import it, such as the Python site-packages\nfolder.</p>\n</div>\n<div id=\"example-usage\">\n<h2>Example Usage</h2>\n<p>Start your script by importing the quad tree.</p>\n<pre>from pyqtree import Index\n</pre>\n<p>Setup the spatial index, giving it a bounding box area to keep track of.\nThe bounding box being in a four-tuple: (xmin, ymin, xmax, ymax).</p>\n<pre>spindex = Index(bbox=(0, 0, 100, 100))\n</pre>\n<p>Populate the index with items that you want to be retrieved at a later\npoint, along with each item\u2019s geographic bbox.</p>\n<pre># this example assumes you have a list of items with bbox attribute\nfor item in items:\n    spindex.insert(item, item.bbox)\n</pre>\n<p>Then when you have a region of interest and you wish to retrieve items\nfrom that region, just use the index\u2019s intersect method. This quickly\ngives you a list of the stored items whose bboxes intersects your region\nof interests.</p>\n<pre>overlapbbox = (51, 51, 86, 86)\nmatches = spindex.intersect(overlapbbox)\n</pre>\n<p>There are other things that can be done as well, but that\u2019s it for the\nmain usage!</p>\n</div>\n<div id=\"more-information\">\n<h2>More Information:</h2>\n<ul>\n<li><a href=\"http://github.com/karimbahgat/Pyqtree\" rel=\"nofollow\">Home Page</a></li>\n<li><a href=\"https://karimbahgat.github.io/Pyqtree/\" rel=\"nofollow\">API Documentation</a></li>\n</ul>\n</div>\n<div id=\"license\">\n<h2>License:</h2>\n<p>This code is free to share, use, reuse, and modify according to the MIT\nlicense, see LICENSE.txt.</p>\n</div>\n<div id=\"credits\">\n<h2>Credits:</h2>\n<ul>\n<li>Karim Bahgat</li>\n<li>Joschua Gandert</li>\n</ul>\n</div>\n<div id=\"changes\">\n<h2>Changes</h2>\n<div id=\"id1\">\n<h3>1.0.0 (2018-09-14)</h3>\n<ul>\n<li>Bump to first major version</li>\n<li>Fix so returns list instead of set</li>\n<li>Support inserting hashable items</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.25.0 (2016-06-22)</h3>\n<ul>\n<li>Misc user contributions and bug fixes</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.24.0 (2015-06-18)</h3>\n<ul>\n<li>Previous stable PyPI version.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4271139, "releases": {"0.23": [{"comment_text": "", "digests": {"md5": "5602de0e5530c31cb961cccf9f454b02", "sha256": "383e2b6131163236aebcd6d53c2fead0e478e522413acacfb0335397521f5337"}, "downloads": -1, "filename": "Pyqtree-0.23.zip", "has_sig": false, "md5_digest": "5602de0e5530c31cb961cccf9f454b02", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8819, "upload_time": "2015-06-03T08:34:48", "upload_time_iso_8601": "2015-06-03T08:34:48.466503Z", "url": "https://files.pythonhosted.org/packages/b8/f8/d75fe118199d7ae1a9de7a00486c58b337888e539ebd0591ff3f9d2f5083/Pyqtree-0.23.zip", "yanked": false}], "0.24": [{"comment_text": "", "digests": {"md5": "045c1d999a95379afcfd3eb9a18e754a", "sha256": "e20a8e53a2ce0db9c824eba3144a550a804bd57c28454f18f2948db9ce97b555"}, "downloads": -1, "filename": "Pyqtree-0.24.zip", "has_sig": false, "md5_digest": "045c1d999a95379afcfd3eb9a18e754a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 8824, "upload_time": "2015-06-18T22:07:36", "upload_time_iso_8601": "2015-06-18T22:07:36.035736Z", "url": "https://files.pythonhosted.org/packages/f0/9b/499dec5016cc156bf5850561e6fca44873f4530ddf7256fe7f79aa424e4a/Pyqtree-0.24.zip", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "3eb40f0080e2a484df8d85b6f98324be", "sha256": "4f36d5160ddf170d7245e9c7102a45211b85003383dd552b6cd109e50cc3af81"}, "downloads": -1, "filename": "Pyqtree-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3eb40f0080e2a484df8d85b6f98324be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5239, "upload_time": "2018-09-14T06:09:23", "upload_time_iso_8601": "2018-09-14T06:09:23.062553Z", "url": "https://files.pythonhosted.org/packages/df/90/2905247e80944d2ce6b36a69fb995709cef25c409018f7471fd88cc1122a/Pyqtree-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "3eb40f0080e2a484df8d85b6f98324be", "sha256": "4f36d5160ddf170d7245e9c7102a45211b85003383dd552b6cd109e50cc3af81"}, "downloads": -1, "filename": "Pyqtree-1.0.0.tar.gz", "has_sig": false, "md5_digest": "3eb40f0080e2a484df8d85b6f98324be", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 5239, "upload_time": "2018-09-14T06:09:23", "upload_time_iso_8601": "2018-09-14T06:09:23.062553Z", "url": "https://files.pythonhosted.org/packages/df/90/2905247e80944d2ce6b36a69fb995709cef25c409018f7471fd88cc1122a/Pyqtree-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 02:58:43 2020"}