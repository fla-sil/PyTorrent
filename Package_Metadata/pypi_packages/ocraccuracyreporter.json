{"info": {"author": "Lucid Programmer", "author_email": "lucidprogrammer@hotmail.com", "bugtrack_url": null, "classifiers": [], "description": "============\nOverview\n============\n\nYour OCR pipeline may have various stages and may use various tools.\nYou need a simple way to run sample/s as a whole or piece by piece and have a way to say that the OCR accuracy is say 98%.\n\n=========\nUsage\n=========\n\n>>> pip install ocraccuracyreporter\n>>> from ocraccuracyreporter.oar import oar\n\n.. topic:: initialising the reporter\n\n>>> oreport = oar(expected='john', given='joh', label='name')\n\n>>> print(oreport)\n>>> name,john,joh,86,100,86,86,94,1\n\nor you may have various ocr results for the same item, so you may want to initialise the expected alone\nwith or without a label\n\n>>> oreport = oar(expected='john', label='name')\n>>> oreport.given = 'joh'\n>>> repr(oreoprt)\nif you are creating a csv report with header info\n>>>label,expected,given,ratio,partial_ratio,token_sort_ratio,token_set_ratio,jaro_winkler,distance\n  name,john,joh,86,100,86,86,94,1\n\n  .. topic:: Items in the report\n\n\n  ratio - uses pure Levenshtein Distance based matching\n          (100 - means perfect match)\n\n  partial_ratio - matches based on best substrings\n\n  token_sort_ratio - tokenizes the strings and sorts them alphabetically\n\n  token_set_ratio - tokenizes the strings and compared the intersection\n\n  jaro_winkler - this algorithm giving more weight to common prefix\n                 (for example, some parts are good, missing others)\n\n  distance - this shows how many characters are really different in given\n             compared to expected\n\n\n\n\n=========\nClass variables\n=========\n\nlabel  - a meaningful name for the ocr string.\nexpected - expected result\ngiven - result you got out of ocr pipeline\n\ntotal_expected_char_count - calculated expected char count\ntotal_expected_word_count - calculated expected word count\n\ntotal_given_char_count - calculated given char count\ntotal_given_word_count - calculated given word count\n", "description_content_type": null, "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/lucidprogrammer/ocraccuracyreporter", "keywords": "", "license": "MIT", "maintainer": "", "maintainer_email": "", "name": "ocraccuracyreporter", "package_url": "https://pypi.org/project/ocraccuracyreporter/", "platform": "", "project_url": "https://pypi.org/project/ocraccuracyreporter/", "project_urls": {"Homepage": "https://github.com/lucidprogrammer/ocraccuracyreporter"}, "release_url": "https://pypi.org/project/ocraccuracyreporter/0.0.5/", "requires_dist": null, "requires_python": "", "summary": "OCR Accuracy Reporter", "version": "0.0.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            ============<br>Overview<br>============<br><br>Your OCR pipeline may have various stages and may use various tools.<br>You need a simple way to run sample/s as a whole or piece by piece and have a way to say that the OCR accuracy is say 98%.<br><br>=========<br>Usage<br>=========<br><br>&gt;&gt;&gt; pip install ocraccuracyreporter<br>&gt;&gt;&gt; from ocraccuracyreporter.oar import oar<br><br>.. topic:: initialising the reporter<br><br>&gt;&gt;&gt; oreport = oar(expected='john', given='joh', label='name')<br><br>&gt;&gt;&gt; print(oreport)<br>&gt;&gt;&gt; name,john,joh,86,100,86,86,94,1<br><br>or you may have various ocr results for the same item, so you may want to initialise the expected alone<br>with or without a label<br><br>&gt;&gt;&gt; oreport = oar(expected='john', label='name')<br>&gt;&gt;&gt; oreport.given = 'joh'<br>&gt;&gt;&gt; repr(oreoprt)<br>if you are creating a csv report with header info<br>&gt;&gt;&gt;label,expected,given,ratio,partial_ratio,token_sort_ratio,token_set_ratio,jaro_winkler,distance<br>  name,john,joh,86,100,86,86,94,1<br><br>  .. topic:: Items in the report<br><br><br>  ratio - uses pure Levenshtein Distance based matching<br>          (100 - means perfect match)<br><br>  partial_ratio - matches based on best substrings<br><br>  token_sort_ratio - tokenizes the strings and sorts them alphabetically<br><br>  token_set_ratio - tokenizes the strings and compared the intersection<br><br>  jaro_winkler - this algorithm giving more weight to common prefix<br>                 (for example, some parts are good, missing others)<br><br>  distance - this shows how many characters are really different in given<br>             compared to expected<br><br><br><br><br>=========<br>Class variables<br>=========<br><br>label  - a meaningful name for the ocr string.<br>expected - expected result<br>given - result you got out of ocr pipeline<br><br>total_expected_char_count - calculated expected char count<br>total_expected_word_count - calculated expected word count<br><br>total_given_char_count - calculated given char count<br>total_given_word_count - calculated given word count<br>\n          </div>"}, "last_serial": 3586102, "releases": {"0.0.1": [{"comment_text": "", "digests": {"md5": "4d0e1efb355acdf5d698e164e624746b", "sha256": "5c84dea729ef4c841ec1fe9517b46692a25dd5a7643ee2f0c9f47a066b9d92c5"}, "downloads": -1, "filename": "ocraccuracyreporter-0.0.1.tar.gz", "has_sig": false, "md5_digest": "4d0e1efb355acdf5d698e164e624746b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3370, "upload_time": "2018-02-13T12:52:00", "upload_time_iso_8601": "2018-02-13T12:52:00.948252Z", "url": "https://files.pythonhosted.org/packages/dc/15/0c35a10cbd4651f1b31466e28e7ff40ed6d4cbe935a064d4c30c043ac470/ocraccuracyreporter-0.0.1.tar.gz", "yanked": false}], "0.0.2": [{"comment_text": "", "digests": {"md5": "ed60ed83f9365df5f7a43a9ea982132b", "sha256": "891c0c1be55f8df305e9b9f99cd96a01ae9aa511e224bdbdaea0faa04956e3b4"}, "downloads": -1, "filename": "ocraccuracyreporter-0.0.2.tar.gz", "has_sig": false, "md5_digest": "ed60ed83f9365df5f7a43a9ea982132b", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3340, "upload_time": "2018-02-13T12:56:13", "upload_time_iso_8601": "2018-02-13T12:56:13.256009Z", "url": "https://files.pythonhosted.org/packages/5a/7a/35049511491e881e2ae37a0b9cdbec942039c5ac031fdfa64e0083b8a90b/ocraccuracyreporter-0.0.2.tar.gz", "yanked": false}], "0.0.3": [{"comment_text": "", "digests": {"md5": "2c3cc3efd75a67b6a567666d7737ebb4", "sha256": "a8991b60f32126b29372be139d585c1f9007e30ca61809a46c5cfcf6aa6736e1"}, "downloads": -1, "filename": "ocraccuracyreporter-0.0.3.tar.gz", "has_sig": false, "md5_digest": "2c3cc3efd75a67b6a567666d7737ebb4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3049, "upload_time": "2018-02-13T14:36:38", "upload_time_iso_8601": "2018-02-13T14:36:38.764996Z", "url": "https://files.pythonhosted.org/packages/c7/dd/bd6201f22a86c0afe2629ef8575e2e5b9258940aec162babc05d3a47a3f2/ocraccuracyreporter-0.0.3.tar.gz", "yanked": false}], "0.0.4": [{"comment_text": "", "digests": {"md5": "6d63c38ef06bb50628e837812ec96bec", "sha256": "8163291eddf141715cde92fbeceee5c7bc6a22eeeb4f214621a0790cb48ecf46"}, "downloads": -1, "filename": "ocraccuracyreporter-0.0.4.tar.gz", "has_sig": false, "md5_digest": "6d63c38ef06bb50628e837812ec96bec", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3074, "upload_time": "2018-02-13T15:01:03", "upload_time_iso_8601": "2018-02-13T15:01:03.458674Z", "url": "https://files.pythonhosted.org/packages/68/59/66f452d66be5a421a6047b7f3f94a3b4d908a62ccde4f11d58cad176650d/ocraccuracyreporter-0.0.4.tar.gz", "yanked": false}], "0.0.5": [{"comment_text": "", "digests": {"md5": "8fba8ae1fb617bd8d6bfd231d459f556", "sha256": "dff84d079f6abf75510345282e2b1b1f5666094afa506d4327ecf8936c088a13"}, "downloads": -1, "filename": "ocraccuracyreporter-0.0.5.tar.gz", "has_sig": false, "md5_digest": "8fba8ae1fb617bd8d6bfd231d459f556", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3107, "upload_time": "2018-02-16T02:24:48", "upload_time_iso_8601": "2018-02-16T02:24:48.490021Z", "url": "https://files.pythonhosted.org/packages/9f/5a/3cfabc321cd8e9fd0796af14dfbe9bb2efec2add0d35cafccfa83c929c1c/ocraccuracyreporter-0.0.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "8fba8ae1fb617bd8d6bfd231d459f556", "sha256": "dff84d079f6abf75510345282e2b1b1f5666094afa506d4327ecf8936c088a13"}, "downloads": -1, "filename": "ocraccuracyreporter-0.0.5.tar.gz", "has_sig": false, "md5_digest": "8fba8ae1fb617bd8d6bfd231d459f556", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 3107, "upload_time": "2018-02-16T02:24:48", "upload_time_iso_8601": "2018-02-16T02:24:48.490021Z", "url": "https://files.pythonhosted.org/packages/9f/5a/3cfabc321cd8e9fd0796af14dfbe9bb2efec2add0d35cafccfa83c929c1c/ocraccuracyreporter-0.0.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:43:40 2020"}