{"info": {"author": "Marin Atanasov Nikolov", "author_email": "dnaeon@gmail.com", "bugtrack_url": null, "classifiers": [], "description": "pyinfoblox - Infoblox WAPI module for Python\n============================================\n\n.. image:: https://img.shields.io/pypi/v/pyinfoblox.svg\n    :target: https://pypi.python.org/pypi/pyinfoblox/\n    :alt: Latest Version\n\n.. image:: https://img.shields.io/pypi/dm/pyinfoblox.svg\n    :target: https://pypi.python.org/pypi/pyinfoblox/\n    :alt: Downloads\n\npyinfoblox is a Python module for interfacing with the Infoblox WAPI.\n\nFor more information about the Infoblox WAPI, please refer to the\n`Infoblox WAPI documentation <https://ipam.illinois.edu/wapidoc/>`_.\n\npyinfoblox is Open Source and licensed under the\n`BSD License <http://opensource.org/licenses/BSD-2-Clause>`_.\n\nRequirements\n============\n\n* `Python 2.7.x or 3.x <https://www.python.org/>`_\n* `requests <https://pypi.python.org/pypi/requests>`_\n\nContributions\n=============\n\npyinfoblox is hosted on\n`Github <https://github.com/dnaeon/pyinfoblox>`_. Please contribute\nby reporting issues, suggesting features or by sending patches\nusing pull requests.\n\nInstallation\n============\n\nThe easiest way to install pyinfoblox is by using ``pip``:\n\n.. code-block:: bash\n\n   $ pip install pyinfoblox\n\nIn order to install the latest version of pyinfoblox from the\nGithub repository simply execute these commands instead:\n\n.. code-block:: bash\n\n   $ git clone https://github.com/dnaeon/pyinfoblox.git\n   $ cd pyinfoblox\n   $ python setup.py install\n\nExamples\n========\n\nThe first thing we do when using ``pyinfoblox`` is to instantiate a\nnew ``InfobloxWAPI`` object.\n\n.. code-block:: python\n\n   >>> from __future__ import print_function\n   >>> from pyinfoblox import InfobloxWAPI\n   >>> infoblox = InfobloxWAPI(\n   ...     username='admin',\n   ...     password='p4ssw0rd',\n   ...     wapi='https://localhost/wapi/v1.1/'\n   ... )\n\nGetting Infoblox networks is as easy as doing:\n\n.. code-block:: python\n\n   >>> networks = infoblox.network.get()\n   >>> print(networks)\n\nGetting a specific network in Infoblox is easy too:\n\n.. code-block:: python\n\n   >>> network = infoblox.network.get(network='192.168.1.0/24')\n   >>> print(network)\n\nAnother example that will get all Infoblox ``ipv4address`` objects.\n\n.. code-block:: python\n\n   >>> ipv4address = infoblox.ipv4address.get()\n   >>> print(ipv4address)\n\nHere is how to create a new Infoblox network:\n\n.. code-block:: python\n\n   >>> objref = infoblox.network.create(\n   ...     network='192.168.1.0/24',\n   ...     comment='This is my test network'\n   ... )\n   >>> print(objref)\n   u'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'\n\nCreating new objects returns a reference to the newly created\nobject in Infoblox.\n\nWe can also update objects. When we update objects in Infoblox we\nneed to pass the object reference as well. This is how we can\nupdate the ``network`` we created in the previous example\n\n.. code-block:: python\n\n   >>> infoblox.network.update(\n   ...     objref='network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default',\n   ...     comment='This is my updated network'\n   ... )\n   u'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'\n   >>> network = infoblox.network.get(network='192.168.1.0/24')\n   >>> print(network[0]['comment'])\n   This is my updated network\n\nWhen we no longer need an Infoblox object we can always remove it.\nJust make sure to pass the object reference when deleting objects.\n\n.. code-block:: python\n\n   >>> infoblox.network.delete(\n   ...     objref='network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'\n   ... )\n   u'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'\n\nAs a last example we will see how to call functions on\nInfoblox objects.\n\nHere is how to call the ``next_available_ip`` function on a\n``network`` object in order to get the next 3 available IP addresses:\n\n.. code-block:: python\n   \n   >>> infoblox.network.function(\n   ...     objref='network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default',\n   ...     _function='next_available_ip',\n   ...     num=3\n   ... )\n   {u'ips': [u'192.168.1.21', u'192.168.1.22', u'192.168.1.23']}\n\nThis example below calls the ``restartservices`` function on a\n``grid`` object:\n\n.. code-block:: python\n\n   >>> from __future__ import print_function\n   >>> from pyinfoblox import InfobloxWAPI\n   >>> infoblox = InfobloxWAPI(\n   ...     username='admin',\n   ...     password='p4ssw0rd',\n   ...     wapi='https://localhost/wapi/v1.1/'\n   ...)\n   >>> grids = infoblox.grid.get()\n   >>> print(grids)\n   [{'_ref': 'grid/b25lLmNsdXN0ZXIkMA:com'}]\n   >>> grid = grids[0]['_ref']\n   >>> infoblox.grid.function(\n   ...     objref=grid,\n   ...     _function='restartservices',\n   ...     member_order='SEQUENTIALLY',\n   ...     restart_option='RESTART_IF_NEEDED',\n   ...     sequential_delay=10,\n   ...     service_option='ALL'\n   ...)\n", "description_content_type": "", "docs_url": null, "download_url": "https://github.com/dnaeon/pyinfoblox/releases", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/dnaeon/pyinfoblox", "keywords": "", "license": "BSD", "maintainer": "", "maintainer_email": "", "name": "pyinfoblox", "package_url": "https://pypi.org/project/pyinfoblox/", "platform": "", "project_url": "https://pypi.org/project/pyinfoblox/", "project_urls": {"Download": "https://github.com/dnaeon/pyinfoblox/releases", "Homepage": "https://github.com/dnaeon/pyinfoblox"}, "release_url": "https://pypi.org/project/pyinfoblox/0.1.5/", "requires_dist": null, "requires_python": "", "summary": "Infoblox WAPI module for Python", "version": "0.1.5", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"pyinfoblox-infoblox-wapi-module-for-python\">\n<h2>pyinfoblox - Infoblox WAPI module for Python</h2>\n<a href=\"https://pypi.python.org/pypi/pyinfoblox/\" rel=\"nofollow\"><img alt=\"Latest Version\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1ca0ac6f2b1dfed17298c423c18af603166fb67d/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f7079696e666f626c6f782e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/pyinfoblox/\" rel=\"nofollow\"><img alt=\"Downloads\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/1bf8a2e956d0768849b0ba74f106f5f5874d0953/68747470733a2f2f696d672e736869656c64732e696f2f707970692f646d2f7079696e666f626c6f782e737667\"></a>\n<p>pyinfoblox is a Python module for interfacing with the Infoblox WAPI.</p>\n<p>For more information about the Infoblox WAPI, please refer to the\n<a href=\"https://ipam.illinois.edu/wapidoc/\" rel=\"nofollow\">Infoblox WAPI documentation</a>.</p>\n<p>pyinfoblox is Open Source and licensed under the\n<a href=\"http://opensource.org/licenses/BSD-2-Clause\" rel=\"nofollow\">BSD License</a>.</p>\n</div>\n<div id=\"requirements\">\n<h2>Requirements</h2>\n<ul>\n<li><a href=\"https://www.python.org/\" rel=\"nofollow\">Python 2.7.x or 3.x</a></li>\n<li><a href=\"https://pypi.python.org/pypi/requests\" rel=\"nofollow\">requests</a></li>\n</ul>\n</div>\n<div id=\"contributions\">\n<h2>Contributions</h2>\n<p>pyinfoblox is hosted on\n<a href=\"https://github.com/dnaeon/pyinfoblox\" rel=\"nofollow\">Github</a>. Please contribute\nby reporting issues, suggesting features or by sending patches\nusing pull requests.</p>\n</div>\n<div id=\"installation\">\n<h2>Installation</h2>\n<p>The easiest way to install pyinfoblox is by using <tt>pip</tt>:</p>\n<pre>$ pip install pyinfoblox\n</pre>\n<p>In order to install the latest version of pyinfoblox from the\nGithub repository simply execute these commands instead:</p>\n<pre>$ git clone https://github.com/dnaeon/pyinfoblox.git\n$ <span class=\"nb\">cd</span> pyinfoblox\n$ python setup.py install\n</pre>\n</div>\n<div id=\"examples\">\n<h2>Examples</h2>\n<p>The first thing we do when using <tt>pyinfoblox</tt> is to instantiate a\nnew <tt>InfobloxWAPI</tt> object.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyinfoblox</span> <span class=\"kn\">import</span> <span class=\"n\">InfobloxWAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">infoblox</span> <span class=\"o\">=</span> <span class=\"n\">InfobloxWAPI</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'p4ssw0rd'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">wapi</span><span class=\"o\">=</span><span class=\"s1\">'https://localhost/wapi/v1.1/'</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n</pre>\n<p>Getting Infoblox networks is as easy as doing:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">networks</span> <span class=\"o\">=</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">networks</span><span class=\"p\">)</span>\n</pre>\n<p>Getting a specific network in Infoblox is easy too:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">network</span> <span class=\"o\">=</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'192.168.1.0/24'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"p\">)</span>\n</pre>\n<p>Another example that will get all Infoblox <tt>ipv4address</tt> objects.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">ipv4address</span> <span class=\"o\">=</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">ipv4address</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">ipv4address</span><span class=\"p\">)</span>\n</pre>\n<p>Here is how to create a new Infoblox network:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">objref</span> <span class=\"o\">=</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">create</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'192.168.1.0/24'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"s1\">'This is my test network'</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">objref</span><span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'</span>\n</pre>\n<p>Creating new objects returns a reference to the newly created\nobject in Infoblox.</p>\n<p>We can also update objects. When we update objects in Infoblox we\nneed to pass the object reference as well. This is how we can\nupdate the <tt>network</tt> we created in the previous example</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">update</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">objref</span><span class=\"o\">=</span><span class=\"s1\">'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">comment</span><span class=\"o\">=</span><span class=\"s1\">'This is my updated network'</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">network</span> <span class=\"o\">=</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"o\">=</span><span class=\"s1\">'192.168.1.0/24'</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">network</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'comment'</span><span class=\"p\">])</span>\n<span class=\"n\">This</span> <span class=\"ow\">is</span> <span class=\"n\">my</span> <span class=\"n\">updated</span> <span class=\"n\">network</span>\n</pre>\n<p>When we no longer need an Infoblox object we can always remove it.\nJust make sure to pass the object reference when deleting objects.</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">delete</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">objref</span><span class=\"o\">=</span><span class=\"s1\">'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"sa\">u</span><span class=\"s1\">'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'</span>\n</pre>\n<p>As a last example we will see how to call functions on\nInfoblox objects.</p>\n<p>Here is how to call the <tt>next_available_ip</tt> function on a\n<tt>network</tt> object in order to get the next 3 available IP addresses:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">network</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">objref</span><span class=\"o\">=</span><span class=\"s1\">'network/ZG5zLm5ldHdvcmskMTkyLjE2OC4xLjAvMjQvMA:192.168.1.0/24/default'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">_function</span><span class=\"o\">=</span><span class=\"s1\">'next_available_ip'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">num</span><span class=\"o\">=</span><span class=\"mi\">3</span>\n<span class=\"o\">...</span> <span class=\"p\">)</span>\n<span class=\"p\">{</span><span class=\"sa\">u</span><span class=\"s1\">'ips'</span><span class=\"p\">:</span> <span class=\"p\">[</span><span class=\"sa\">u</span><span class=\"s1\">'192.168.1.21'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'192.168.1.22'</span><span class=\"p\">,</span> <span class=\"sa\">u</span><span class=\"s1\">'192.168.1.23'</span><span class=\"p\">]}</span>\n</pre>\n<p>This example below calls the <tt>restartservices</tt> function on a\n<tt>grid</tt> object:</p>\n<pre><span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">__future__</span> <span class=\"kn\">import</span> <span class=\"n\">print_function</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"kn\">from</span> <span class=\"nn\">pyinfoblox</span> <span class=\"kn\">import</span> <span class=\"n\">InfobloxWAPI</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">infoblox</span> <span class=\"o\">=</span> <span class=\"n\">InfobloxWAPI</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">username</span><span class=\"o\">=</span><span class=\"s1\">'admin'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">password</span><span class=\"o\">=</span><span class=\"s1\">'p4ssw0rd'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">wapi</span><span class=\"o\">=</span><span class=\"s1\">'https://localhost/wapi/v1.1/'</span>\n<span class=\"o\">...</span><span class=\"p\">)</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">grids</span> <span class=\"o\">=</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">get</span><span class=\"p\">()</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">grids</span><span class=\"p\">)</span>\n<span class=\"p\">[{</span><span class=\"s1\">'_ref'</span><span class=\"p\">:</span> <span class=\"s1\">'grid/b25lLmNsdXN0ZXIkMA:com'</span><span class=\"p\">}]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">grid</span> <span class=\"o\">=</span> <span class=\"n\">grids</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">][</span><span class=\"s1\">'_ref'</span><span class=\"p\">]</span>\n<span class=\"o\">&gt;&gt;&gt;</span> <span class=\"n\">infoblox</span><span class=\"o\">.</span><span class=\"n\">grid</span><span class=\"o\">.</span><span class=\"n\">function</span><span class=\"p\">(</span>\n<span class=\"o\">...</span>     <span class=\"n\">objref</span><span class=\"o\">=</span><span class=\"n\">grid</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">_function</span><span class=\"o\">=</span><span class=\"s1\">'restartservices'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">member_order</span><span class=\"o\">=</span><span class=\"s1\">'SEQUENTIALLY'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">restart_option</span><span class=\"o\">=</span><span class=\"s1\">'RESTART_IF_NEEDED'</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">sequential_delay</span><span class=\"o\">=</span><span class=\"mi\">10</span><span class=\"p\">,</span>\n<span class=\"o\">...</span>     <span class=\"n\">service_option</span><span class=\"o\">=</span><span class=\"s1\">'ALL'</span>\n<span class=\"o\">...</span><span class=\"p\">)</span>\n</pre>\n</div>\n\n          </div>"}, "last_serial": 4244789, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "8874c998fc781c8d3dda4b6e1c965d82", "sha256": "588e2e810f2967011cd310b34fc5cb80c4a57e75dcbf806dfb74b921c07cb86a"}, "downloads": -1, "filename": "pyinfoblox-0.1.0.tar.gz", "has_sig": false, "md5_digest": "8874c998fc781c8d3dda4b6e1c965d82", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4187, "upload_time": "2014-11-29T16:27:25", "upload_time_iso_8601": "2014-11-29T16:27:25.594068Z", "url": "https://files.pythonhosted.org/packages/66/17/f723e9371ca85a258979bdac435cba9232263e97959ebaf486af8187af2e/pyinfoblox-0.1.0.tar.gz", "yanked": false}], "0.1.1": [{"comment_text": "", "digests": {"md5": "dbdae6e5634eb0a843276686ec3bf51d", "sha256": "4b945062275f2f1e4ceb6c930e9e191fd444936a8f4ea1f46bfa95a3d6a66129"}, "downloads": -1, "filename": "pyinfoblox-0.1.1.tar.gz", "has_sig": false, "md5_digest": "dbdae6e5634eb0a843276686ec3bf51d", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4344, "upload_time": "2015-02-12T08:45:45", "upload_time_iso_8601": "2015-02-12T08:45:45.604739Z", "url": "https://files.pythonhosted.org/packages/6a/71/b92d4c7c293b857902e8228e4e3064fac4c59cfe3ae8810cf1878701419c/pyinfoblox-0.1.1.tar.gz", "yanked": false}], "0.1.3": [{"comment_text": "", "digests": {"md5": "2d776cc390fc1a6169247b9e47ef4ce6", "sha256": "eea151c9d25c96e1789432cf2c3d9e6dd3c3d7cdb8da74326aa56d1b41a0555c"}, "downloads": -1, "filename": "pyinfoblox-0.1.3.tar.gz", "has_sig": false, "md5_digest": "2d776cc390fc1a6169247b9e47ef4ce6", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4538, "upload_time": "2015-03-30T08:17:32", "upload_time_iso_8601": "2015-03-30T08:17:32.615588Z", "url": "https://files.pythonhosted.org/packages/1d/f2/435baa41bbba2afea77719b7d4b3899c3709aae0f7ad532b65dd61dc89e3/pyinfoblox-0.1.3.tar.gz", "yanked": false}], "0.1.5": [{"comment_text": "", "digests": {"md5": "a85b678588fa91a1851b9c78b8d21747", "sha256": "88b48a2eb482ddf5eedc850b014d9fc16f04e1b2133891f7e1118894e06bf226"}, "downloads": -1, "filename": "pyinfoblox-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a85b678588fa91a1851b9c78b8d21747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4768, "upload_time": "2018-09-06T13:27:29", "upload_time_iso_8601": "2018-09-06T13:27:29.835604Z", "url": "https://files.pythonhosted.org/packages/9d/b3/61bc73e7e1709ce0afb41af1e3d767d1407d1310162a8bfa4e770864a671/pyinfoblox-0.1.5.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "a85b678588fa91a1851b9c78b8d21747", "sha256": "88b48a2eb482ddf5eedc850b014d9fc16f04e1b2133891f7e1118894e06bf226"}, "downloads": -1, "filename": "pyinfoblox-0.1.5.tar.gz", "has_sig": false, "md5_digest": "a85b678588fa91a1851b9c78b8d21747", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 4768, "upload_time": "2018-09-06T13:27:29", "upload_time_iso_8601": "2018-09-06T13:27:29.835604Z", "url": "https://files.pythonhosted.org/packages/9d/b3/61bc73e7e1709ce0afb41af1e3d767d1407d1310162a8bfa4e770864a671/pyinfoblox-0.1.5.tar.gz", "yanked": false}], "timestamp": "Fri May  8 03:04:02 2020"}