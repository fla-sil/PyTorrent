{"info": {"author": "Veronika Kotova", "author_email": "kotova@in.tum.de", "bugtrack_url": null, "classifiers": ["Programming Language :: Python :: 3.5"], "description": "===============================\ngfeat\n===============================\n\n\n.. image:: https://img.shields.io/pypi/v/gfeat.svg\n        :target: https://pypi.python.org/pypi/gfeat\n\n.. image:: https://img.shields.io/travis/avsecz/gfeat.svg\n        :target: https://travis-ci.org/gagneurlab/gfeat\n\n.. image:: https://img.shields.io/pypi/pyversions/gfeat.svg\n        :target: https://pypi.python.org/pypi/gfeat\n\n.. image:: https://img.shields.io/github/license/mashape/apistatus.svg?maxAge=2592000\n        :target: https://github.com/fchollet/gfeat/blob/master/LICENSE\n        :alt: Documentation Status\n\nPython genomic features extractor from raw files (Fasta, GTF and VCF).\n\n*gfeat* is a convenient tool for extracting diverse DNA features for genomic modeling and analysis. It allows to get,\nfor example, transcript Kozak sequence and GC content, genome codon pair bias and etc. It is also possible to inject\nSNPs using a VCF file, get position-type variant matrices and investigate sequences with different combinations\nof heterozygous variants (when homozygous always stay injected in the sequence).\n\nYou can find several short usage examples in the Tutorial section of the documentation.\n\n* Free software: MIT license\n* Documentation: https://i12g-gagneurweb.in.tum.de/public/docs/gfeat\n\n\nFeatures\n--------\n\nGFGenome:\n\n* GFGenome.get_consensus_Kozak_seq(seq=False)\n    Consensus Kozak sequence\n\n* GFGenome.get_Kozak_matrix()\n    Kozak sequence matrix (rows - transcripts)\n\n* GFGenome.get_consensus_stop_codon_context(seq=False)\n    Consensus stop codon context sequence\n\n* GFGenome.get_stop_codon_context_matrix()\n    Stop codon context matrix (rows - transcripts)\n\n* GFGenome.get_codon_pair_bias()\n    Codon pair bias\n\n* GFGenome.get_nucleobase_mutation_table()\n    Nucleobase mutation matrix (table with positions of variants and their type in Kozak sequence and stop codon context)\n\nGFTranscript:\n\n* GFTranscript.codon_counts()\n    Coding sequence codon count\n\n* GFTranscript.utr5_motif_counts(pattern)\n    5'UTR motif count\n\n* GFTranscript.utr3_motif_counts(pattern)\n    3'UTR motif count\n\n* GFTranscript.codon_usage()\n    Coding sequence codon usage\n\n* GFTranscript.gc_content(region)\n    Coding sequence, 5'UTR or 3'UTR G and C content\n\n* GFTranscript.get_Kozak_seq()\n    Kozak sequence\n\n* GFTranscript.get_stop_codon_context()\n    Stop codon context\n\n* GFTranscript.get_codon_pairs_frequency()\n    Coding sequence codon pair frequency\n\nUpstream AUG:\n\n* UpstreamAUG.predict_on_sample(seq)\n    Predict on sample (get all AUGs with the information whether they are in-frame or not and whether they have a stop codon or not)\n\n* UpstreamAUG.predict_on_sample_with_pos(seq)\n    Predict on sample with position (predict on sample plus positions of AUGs)\n\n* UpstreamAUG.predict_on_sample_with_pos_pandas()\n    Predict on sample with position and appending to the passed dictionary\n\n* UpstreamAUG.predict_on_batch(seq_list)\n    Predict on batch\n\n5'UTR class:\n\n* FivePrimeUTRSeq(data, reverse_complement_bool, contig=None, strand=None)\n    An object contains list of all 5'UTR sequences, their positions, exons, positions of exons and corresponding transcripts\n\nAuxiliary functions:\n\n* VCFMutator.mutate_sequence(interval, fasta=None, seq_whole=None)\n    Mutate sequence\n\n* VCFMutator.mutate_codon_context(intervals, seqs, column_names)\n    Mutate codon context\n\n* reverse_complement(dna)\n    Reverse complement\n\n* PCA_with_standard_sample_deviation_scaling(df, n_comp=2)\n    Pca with scaling\n\nCredits\n---------\n\nThis package was created with Cookiecutter_ and the `audreyr/cookiecutter-pypackage`_ project template. *gfeat* is based\non pyensembl_ package and can be partially viewed as its extension.\n\n.. _Cookiecutter: https://github.com/audreyr/cookiecutter\n.. _`audreyr/cookiecutter-pypackage`: https://github.com/audreyr/cookiecutter-pypackage\n.. _pyensembl: https://github.com/openvax/pyensembl\n\n\n=======\nHistory\n=======\n\n0.1.0 (2018-09-27)\n------------------\n\n* First release on PyPI.\n\n\n1.0.0 (2018-09-28)\n------------------\n\n* First stable release on PyPI.\n\n\n", "description_content_type": "", "docs_url": null, "download_url": "", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/gagneurlab/gfeat", "keywords": "gfeat", "license": "MIT license", "maintainer": "", "maintainer_email": "", "name": "gfeat", "package_url": "https://pypi.org/project/gfeat/", "platform": "", "project_url": "https://pypi.org/project/gfeat/", "project_urls": {"Homepage": "https://github.com/gagneurlab/gfeat"}, "release_url": "https://pypi.org/project/gfeat/1.0.0/", "requires_dist": ["pyensembl (==1.1.0)", "gtfparse (==0.0.6)", "datacache (==0.4.20)", "simplejson (==3.12.0)", "typechecks (==0.0.2)", "pytest", "pysam", "pybedtools", "cyvcf2", "numpy", "scikit-learn", "pandas", "bumpversion; extra == 'develop'", "wheel; extra == 'develop'", "jedi; extra == 'develop'", "epc; extra == 'develop'", "pytest; extra == 'develop'", "pytest-pep8; extra == 'develop'", "pytest-cov; extra == 'develop'"], "requires_python": "", "summary": "Python genomic features extractor from raw files.", "version": "1.0.0", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"gfeat\">\n<h2>gfeat</h2>\n<a href=\"https://pypi.python.org/pypi/gfeat\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/v/gfeat.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/b5a691113472beed97a328d4a9f4e84876a4c3b9/68747470733a2f2f696d672e736869656c64732e696f2f707970692f762f67666561742e737667\"></a>\n<a href=\"https://travis-ci.org/gagneurlab/gfeat\" rel=\"nofollow\"><img alt=\"https://img.shields.io/travis/avsecz/gfeat.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/394b40df09eae79b6f391973b098be98e854a4b1/68747470733a2f2f696d672e736869656c64732e696f2f7472617669732f61767365637a2f67666561742e737667\"></a>\n<a href=\"https://pypi.python.org/pypi/gfeat\" rel=\"nofollow\"><img alt=\"https://img.shields.io/pypi/pyversions/gfeat.svg\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/4becc9828645ed18dcb51137db56e858f46e4df0/68747470733a2f2f696d672e736869656c64732e696f2f707970692f707976657273696f6e732f67666561742e737667\"></a>\n<a href=\"https://github.com/fchollet/gfeat/blob/master/LICENSE\" rel=\"nofollow\"><img alt=\"Documentation Status\" src=\"https://warehouse-camo.ingress.cmh1.psfhosted.org/ae646c9f8bcc796bfc74debf7ac2c93ee374c6ef/68747470733a2f2f696d672e736869656c64732e696f2f6769746875622f6c6963656e73652f6d6173686170652f6170697374617475732e7376673f6d61784167653d32353932303030\"></a>\n<p>Python genomic features extractor from raw files (Fasta, GTF and VCF).</p>\n<p><em>gfeat</em> is a convenient tool for extracting diverse DNA features for genomic modeling and analysis. It allows to get,\nfor example, transcript Kozak sequence and GC content, genome codon pair bias and etc. It is also possible to inject\nSNPs using a VCF file, get position-type variant matrices and investigate sequences with different combinations\nof heterozygous variants (when homozygous always stay injected in the sequence).</p>\n<p>You can find several short usage examples in the Tutorial section of the documentation.</p>\n<ul>\n<li>Free software: MIT license</li>\n<li>Documentation: <a href=\"https://i12g-gagneurweb.in.tum.de/public/docs/gfeat\" rel=\"nofollow\">https://i12g-gagneurweb.in.tum.de/public/docs/gfeat</a></li>\n</ul>\n<div id=\"features\">\n<h3>Features</h3>\n<p>GFGenome:</p>\n<ul>\n<li><dl>\n<dt>GFGenome.get_consensus_Kozak_seq(seq=False)</dt>\n<dd>Consensus Kozak sequence</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFGenome.get_Kozak_matrix()</dt>\n<dd>Kozak sequence matrix (rows - transcripts)</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFGenome.get_consensus_stop_codon_context(seq=False)</dt>\n<dd>Consensus stop codon context sequence</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFGenome.get_stop_codon_context_matrix()</dt>\n<dd>Stop codon context matrix (rows - transcripts)</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFGenome.get_codon_pair_bias()</dt>\n<dd>Codon pair bias</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFGenome.get_nucleobase_mutation_table()</dt>\n<dd>Nucleobase mutation matrix (table with positions of variants and their type in Kozak sequence and stop codon context)</dd>\n</dl>\n</li>\n</ul>\n<p>GFTranscript:</p>\n<ul>\n<li><dl>\n<dt>GFTranscript.codon_counts()</dt>\n<dd>Coding sequence codon count</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.utr5_motif_counts(pattern)</dt>\n<dd>5\u2019UTR motif count</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.utr3_motif_counts(pattern)</dt>\n<dd>3\u2019UTR motif count</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.codon_usage()</dt>\n<dd>Coding sequence codon usage</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.gc_content(region)</dt>\n<dd>Coding sequence, 5\u2019UTR or 3\u2019UTR G and C content</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.get_Kozak_seq()</dt>\n<dd>Kozak sequence</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.get_stop_codon_context()</dt>\n<dd>Stop codon context</dd>\n</dl>\n</li>\n<li><dl>\n<dt>GFTranscript.get_codon_pairs_frequency()</dt>\n<dd>Coding sequence codon pair frequency</dd>\n</dl>\n</li>\n</ul>\n<p>Upstream AUG:</p>\n<ul>\n<li><dl>\n<dt>UpstreamAUG.predict_on_sample(seq)</dt>\n<dd>Predict on sample (get all AUGs with the information whether they are in-frame or not and whether they have a stop codon or not)</dd>\n</dl>\n</li>\n<li><dl>\n<dt>UpstreamAUG.predict_on_sample_with_pos(seq)</dt>\n<dd>Predict on sample with position (predict on sample plus positions of AUGs)</dd>\n</dl>\n</li>\n<li><dl>\n<dt>UpstreamAUG.predict_on_sample_with_pos_pandas()</dt>\n<dd>Predict on sample with position and appending to the passed dictionary</dd>\n</dl>\n</li>\n<li><dl>\n<dt>UpstreamAUG.predict_on_batch(seq_list)</dt>\n<dd>Predict on batch</dd>\n</dl>\n</li>\n</ul>\n<p>5\u2019UTR class:</p>\n<ul>\n<li><dl>\n<dt>FivePrimeUTRSeq(data, reverse_complement_bool, contig=None, strand=None)</dt>\n<dd>An object contains list of all 5\u2019UTR sequences, their positions, exons, positions of exons and corresponding transcripts</dd>\n</dl>\n</li>\n</ul>\n<p>Auxiliary functions:</p>\n<ul>\n<li><dl>\n<dt>VCFMutator.mutate_sequence(interval, fasta=None, seq_whole=None)</dt>\n<dd>Mutate sequence</dd>\n</dl>\n</li>\n<li><dl>\n<dt>VCFMutator.mutate_codon_context(intervals, seqs, column_names)</dt>\n<dd>Mutate codon context</dd>\n</dl>\n</li>\n<li><dl>\n<dt>reverse_complement(dna)</dt>\n<dd>Reverse complement</dd>\n</dl>\n</li>\n<li><dl>\n<dt>PCA_with_standard_sample_deviation_scaling(df, n_comp=2)</dt>\n<dd>Pca with scaling</dd>\n</dl>\n</li>\n</ul>\n</div>\n<div id=\"credits\">\n<h3>Credits</h3>\n<p>This package was created with <a href=\"https://github.com/audreyr/cookiecutter\" rel=\"nofollow\">Cookiecutter</a> and the <a href=\"https://github.com/audreyr/cookiecutter-pypackage\" rel=\"nofollow\">audreyr/cookiecutter-pypackage</a> project template. <em>gfeat</em> is based\non <a href=\"https://github.com/openvax/pyensembl\" rel=\"nofollow\">pyensembl</a> package and can be partially viewed as its extension.</p>\n</div>\n</div>\n<div id=\"history\">\n<h2>History</h2>\n<div id=\"id1\">\n<h3>0.1.0 (2018-09-27)</h3>\n<ul>\n<li>First release on PyPI.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>1.0.0 (2018-09-28)</h3>\n<ul>\n<li>First stable release on PyPI.</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 4321312, "releases": {"0.1.0": [{"comment_text": "", "digests": {"md5": "4e8a2b4be32142eaae7a47e830ab734e", "sha256": "4acfb689d1dcf1c5f66a2a95a56fb02f078688430707c6dd86f1909644b46bad"}, "downloads": -1, "filename": "gfeat-0.1.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "4e8a2b4be32142eaae7a47e830ab734e", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12291940, "upload_time": "2018-09-28T09:29:33", "upload_time_iso_8601": "2018-09-28T09:29:33.336335Z", "url": "https://files.pythonhosted.org/packages/49/36/baa0b6a8f84842620e51406f0a715d1cbb101af448d6716251849e6e7cf1/gfeat-0.1.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "e6ca3aa01b61e0b6319465eb62f92cb7", "sha256": "06264348cc7bc80ece80f5f14b8620f73dbc14a6e60e00fcc23a4455f6fab164"}, "downloads": -1, "filename": "gfeat-0.1.0.tar.gz", "has_sig": false, "md5_digest": "e6ca3aa01b61e0b6319465eb62f92cb7", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 11679957, "upload_time": "2018-09-28T09:31:06", "upload_time_iso_8601": "2018-09-28T09:31:06.152704Z", "url": "https://files.pythonhosted.org/packages/5f/ae/ffac218d3af0760656dca602039152f86c14a3622d479077f4b11d1a571c/gfeat-0.1.0.tar.gz", "yanked": false}], "1.0.0": [{"comment_text": "", "digests": {"md5": "610e8478715b1452a29895de284222c4", "sha256": "88d5c2d64d908edca0129b8f840098ad02ecf87df6e44a43b8f77f56c7f41988"}, "downloads": -1, "filename": "gfeat-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "610e8478715b1452a29895de284222c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12291945, "upload_time": "2018-09-28T20:59:11", "upload_time_iso_8601": "2018-09-28T20:59:11.736735Z", "url": "https://files.pythonhosted.org/packages/82/4d/0ef512272bc724c63f117e4ec23bc22ef6dc55238512cc5db39f198e80de/gfeat-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d880fcc5f1038818e46015388120638a", "sha256": "f9ad304d7ffcf5931c2ac0ef1921ac99e2369ce54c78f7c5ae6c68194fcf9e4b"}, "downloads": -1, "filename": "gfeat-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d880fcc5f1038818e46015388120638a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10804484, "upload_time": "2018-09-28T21:02:39", "upload_time_iso_8601": "2018-09-28T21:02:39.013729Z", "url": "https://files.pythonhosted.org/packages/b6/09/ec4f2affaa26a08d21e8df06f02e4adae2ddb3eb5a85c6d55bb24473f218/gfeat-1.0.0.tar.gz", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "610e8478715b1452a29895de284222c4", "sha256": "88d5c2d64d908edca0129b8f840098ad02ecf87df6e44a43b8f77f56c7f41988"}, "downloads": -1, "filename": "gfeat-1.0.0-py2.py3-none-any.whl", "has_sig": false, "md5_digest": "610e8478715b1452a29895de284222c4", "packagetype": "bdist_wheel", "python_version": "py2.py3", "requires_python": null, "size": 12291945, "upload_time": "2018-09-28T20:59:11", "upload_time_iso_8601": "2018-09-28T20:59:11.736735Z", "url": "https://files.pythonhosted.org/packages/82/4d/0ef512272bc724c63f117e4ec23bc22ef6dc55238512cc5db39f198e80de/gfeat-1.0.0-py2.py3-none-any.whl", "yanked": false}, {"comment_text": "", "digests": {"md5": "d880fcc5f1038818e46015388120638a", "sha256": "f9ad304d7ffcf5931c2ac0ef1921ac99e2369ce54c78f7c5ae6c68194fcf9e4b"}, "downloads": -1, "filename": "gfeat-1.0.0.tar.gz", "has_sig": false, "md5_digest": "d880fcc5f1038818e46015388120638a", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 10804484, "upload_time": "2018-09-28T21:02:39", "upload_time_iso_8601": "2018-09-28T21:02:39.013729Z", "url": "https://files.pythonhosted.org/packages/b6/09/ec4f2affaa26a08d21e8df06f02e4adae2ddb3eb5a85c6d55bb24473f218/gfeat-1.0.0.tar.gz", "yanked": false}], "timestamp": "Fri May  8 00:57:37 2020"}