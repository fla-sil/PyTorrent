{"info": {"author": "Asko Soukka", "author_email": "asko.soukka@iki.fi", "bugtrack_url": null, "classifiers": ["Programming Language :: Python"], "description": "Robot Framework Accessibility Testing Libraries\r\n===============================================\r\n\r\nThis package bundles various Firefox-extensions for web site accessibility\r\nchecking with some glue and pre-baked `Robot Framework`_ keyword libraries to\r\nenable automated accessibility regression testing with Selenium_.\r\n\r\nThis package will not replace human made accessibility auditions. Nor will\r\npassing automated accessibility checks mean that your site is accessible.\r\n\r\nOnce your site has been audited on accessibility, however, these tools could\r\nhelp you to detect regression in accessibility with automated and continuously\r\nintegrated accessibility tests.\r\n\r\n(This package includes a Firefox profile with unmodified `WAVE Toolbar`_ and\r\nunmodified `WCAG Contrast checker`_ extensions pre-installed. WAVE toolbar, its\r\ninterface elements, design elements, functionality, and underlying code are (c)\r\nWebAIM.)\r\n\r\n.. _Robot Framework: http://robotframework.org/\r\n.. _Selenium: http://pypi.python.org/pypi/robotframework-selenium2library/\r\n.. _WAVE Toolbar: http://wave.webaim.org/toolbar/\r\n.. _WCAG Contrast checker: https://addons.mozilla.org/en-US/firefox/addon/wcag-contrast-checker/\r\n\r\n.. note::\r\n\r\n   WCAG Contrast checker is currently configured to run the check\r\n   always for WCAG 2.0 level AA. This could be made optional later.\r\n\r\n\r\nInstallation\r\n------------\r\n\r\n.. code:: robotframework\r\n\r\n   $ pip install robotframework-selenium2accessibility\r\n\r\n\r\nExample test\r\n------------\r\n\r\n.. code:: robotframework\r\n\r\n   *** Settings ***\r\n\r\n   Resource  Accessibility/wavetoolbar.robot\r\n   Resource  Accessibility/contrastchecker.robot\r\n\r\n   Suite setup  Run keywords\r\n   ...  Open accessibility test browser  Maximize Browser Window\r\n   Suite teardown  Close all browsers\r\n\r\n   *** Test Cases ***\r\n\r\n   Test single page\r\n        [Documentation]  Single page test could interact with the target\r\n        ...              app as much as required and end with triggering\r\n        ...              the accessibility scan.\r\n        Go to  http://www.plone.org/\r\n        Check WAVE accessibility errors\r\n\r\n   Test multiple pages\r\n       [Documentation]  Template based test can, for example, take a list\r\n       ...              of URLs and perform accessibility scan for all\r\n       ...              of them. While regular test would stop for the\r\n       ...              first failure, template based test will just jump\r\n       ...              to the next URL (but all failures will be reported).\r\n       [Template]  Check both WAVE and color contrast\r\n       http://www.plone.org/  wave=0  contrast=6\r\n       http://www.drupal.org/  wave=0  contrast=5\r\n       http://www.joomla.org/  wave=0  contrast=9\r\n       http://www.wordpress.org/  wave=1  contrast=5\r\n\r\n   *** Keywords ***\r\n\r\n   Check both WAVE and color contrast\r\n       [Arguments]  ${url}  ${wave}=0  ${contrast}=0\r\n       Should not exceed maximum WAVE errors  ${url}  ${wave}\r\n       Should not exceed maximum color contrast issues  ${url}  ${contrast}\r\n\r\n   Should not exceed maximum WAVE errors\r\n       [Arguments]  ${url}  ${max}\r\n       ${errors} =  Count WAVE accessibility errors  ${url}\r\n       Should be true  ${errors} <= ${max}\r\n       ...  WAVE Toolbar reported ${errors} errors for ${url}\r\n\r\n   Should not exceed maximum color contrast issues\r\n       [Arguments]  ${url}  ${max}\r\n       ${errors} =  Count color contrast issues  ${url}\r\n       Should be true  ${errors} <= ${max}\r\n       ...  WCAG Contrast checker reported ${errors} issue for ${url}\r\n\r\n\r\nRunning\r\n-------\r\n\r\n.. code:: bash\r\n\r\n    $ pybot demo.robot\r\n\r\n`Read the docs for more detailed information. <https://robotframework-selenium2accessibility.readthedocs.org/>`_\r\n\r\nChangelog\r\n=========\r\n\r\n0.2.1 (2013-09-28)\r\n------------------\r\n\r\n- Updated changelog.\r\n\r\n\r\n0.2.0 (2013-09-28)\r\n------------------\r\n\r\n- Renamed to robotframework-selenium2accessibility. Some WAVE-related\r\n  keywords were renamed to avoid future namespace collision in keyword\r\n  names. See docs for current keywords.\r\n\r\n- Added WCAG Contrast checker, integration and keywords.\r\n\r\n0.1.3 (2013-05-26)\r\n------------------\r\n\r\n- Fix to take page screenshot only when WAVE Toolbar reports errors\r\n\r\n0.1.2 (2013-05-26)\r\n------------------\r\n\r\n- Updated documentation.\r\n\r\n0.1.1 (2013-05-25)\r\n------------------\r\n\r\n- Fix packaging (removed non-ascii character from README)\r\n\r\n0.1.0 (2013-05-25)\r\n------------------\r\n\r\n- First pre-release", "description_content_type": null, "docs_url": null, "download_url": "UNKNOWN", "downloads": {"last_day": -1, "last_month": -1, "last_week": -1}, "home_page": "https://github.com/datakurre/robotframework-selenium2accessibility/", "keywords": "", "license": "GPL", "maintainer": "", "maintainer_email": "", "name": "robotframework-selenium2accessibility", "package_url": "https://pypi.org/project/robotframework-selenium2accessibility/", "platform": "UNKNOWN", "project_url": "https://pypi.org/project/robotframework-selenium2accessibility/", "project_urls": {"Download": "UNKNOWN", "Homepage": "https://github.com/datakurre/robotframework-selenium2accessibility/"}, "release_url": "https://pypi.org/project/robotframework-selenium2accessibility/0.2.1/", "requires_dist": null, "requires_python": null, "summary": "Robot Framework resources for automating accessibility tools", "version": "0.2.1", "yanked": false, "html_description": "<div class=\"project-description\">\n            <div id=\"robot-framework-accessibility-testing-libraries\">\n<h2>Robot Framework Accessibility Testing Libraries</h2>\n<p>This package bundles various Firefox-extensions for web site accessibility\nchecking with some glue and pre-baked <a href=\"http://robotframework.org/\" rel=\"nofollow\">Robot Framework</a> keyword libraries to\nenable automated accessibility regression testing with <a href=\"http://pypi.python.org/pypi/robotframework-selenium2library/\" rel=\"nofollow\">Selenium</a>.</p>\n<p>This package will not replace human made accessibility auditions. Nor will\npassing automated accessibility checks mean that your site is accessible.</p>\n<p>Once your site has been audited on accessibility, however, these tools could\nhelp you to detect regression in accessibility with automated and continuously\nintegrated accessibility tests.</p>\n<p>(This package includes a Firefox profile with unmodified <a href=\"http://wave.webaim.org/toolbar/\" rel=\"nofollow\">WAVE Toolbar</a> and\nunmodified <a href=\"https://addons.mozilla.org/en-US/firefox/addon/wcag-contrast-checker/\" rel=\"nofollow\">WCAG Contrast checker</a> extensions pre-installed. WAVE toolbar, its\ninterface elements, design elements, functionality, and underlying code are (c)\nWebAIM.)</p>\n<div>\n<p>Note</p>\n<p>WCAG Contrast checker is currently configured to run the check\nalways for WCAG 2.0 level AA. This could be made optional later.</p>\n</div>\n<div id=\"installation\">\n<h3>Installation</h3>\n<pre><span class=\"c\">$ pip install robotframework-selenium2accessibility</span>\n</pre>\n</div>\n<div id=\"example-test\">\n<h3>Example test</h3>\n<pre><span class=\"gh\">*** Settings ***</span><span class=\"p\">\n\n</span><span class=\"kn\">Resource</span><span class=\"p\">  </span><span class=\"nn\">Accessibility/wavetoolbar.robot</span><span class=\"p\">\n</span><span class=\"kn\">Resource</span><span class=\"p\">  </span><span class=\"nn\">Accessibility/contrastchecker.robot</span><span class=\"p\">\n\n</span><span class=\"kn\">Suite setup</span><span class=\"p\">  </span><span class=\"nf\">Run keywords</span><span class=\"p\">\n...  </span><span class=\"s\">Open accessibility test browser</span><span class=\"p\">  </span><span class=\"s\">Maximize Browser Window</span><span class=\"p\">\n</span><span class=\"kn\">Suite teardown</span><span class=\"p\">  </span><span class=\"nf\">Close all browsers</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Test Cases ***</span><span class=\"p\">\n\n</span><span class=\"gu\">Test single page</span><span class=\"p\">\n     [</span><span class=\"kn\">Documentation</span><span class=\"p\">]  </span><span class=\"s\">Single page test could interact with the target</span><span class=\"p\">\n     ...              </span><span class=\"s\">app as much as required and end with triggering</span><span class=\"p\">\n     ...              </span><span class=\"s\">the accessibility scan.</span><span class=\"p\">\n     </span><span class=\"nf\">Go to</span><span class=\"p\">  </span><span class=\"s\">http://www.plone.org/</span><span class=\"p\">\n     </span><span class=\"nf\">Check WAVE accessibility errors</span><span class=\"p\">\n\n</span><span class=\"gu\">Test multiple pages</span><span class=\"p\">\n    [</span><span class=\"kn\">Documentation</span><span class=\"p\">]  </span><span class=\"s\">Template based test can, for example, take a list</span><span class=\"p\">\n    ...              </span><span class=\"s\">of URLs and perform accessibility scan for all</span><span class=\"p\">\n    ...              </span><span class=\"s\">of them. While regular test would stop for the</span><span class=\"p\">\n    ...              </span><span class=\"s\">first failure, template based test will just jump</span><span class=\"p\">\n    ...              </span><span class=\"s\">to the next URL (but all failures will be reported).</span><span class=\"p\">\n    [</span><span class=\"kn\">Template</span><span class=\"p\">]  </span><span class=\"nf\">Check both WAVE and color contrast</span><span class=\"p\">\n    </span><span class=\"s\">http://www.plone.org/</span><span class=\"p\">  </span><span class=\"s\">wave=0</span><span class=\"p\">  </span><span class=\"s\">contrast=6</span><span class=\"p\">\n    </span><span class=\"s\">http://www.drupal.org/</span><span class=\"p\">  </span><span class=\"s\">wave=0</span><span class=\"p\">  </span><span class=\"s\">contrast=5</span><span class=\"p\">\n    </span><span class=\"s\">http://www.joomla.org/</span><span class=\"p\">  </span><span class=\"s\">wave=0</span><span class=\"p\">  </span><span class=\"s\">contrast=9</span><span class=\"p\">\n    </span><span class=\"s\">http://www.wordpress.org/</span><span class=\"p\">  </span><span class=\"s\">wave=1</span><span class=\"p\">  </span><span class=\"s\">contrast=5</span><span class=\"p\">\n\n</span><span class=\"gh\">*** Keywords ***</span><span class=\"p\">\n\n</span><span class=\"gu\">Check both WAVE and color contrast</span><span class=\"p\">\n    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]  ${</span><span class=\"nv\">url</span><span class=\"p\">}  ${</span><span class=\"nv\">wave</span><span class=\"p\">}</span><span class=\"s\">=0</span><span class=\"p\">  ${</span><span class=\"nv\">contrast</span><span class=\"p\">}</span><span class=\"s\">=0</span><span class=\"p\">\n    </span><span class=\"nf\">Should not exceed maximum WAVE errors</span><span class=\"p\">  ${</span><span class=\"nv\">url</span><span class=\"p\">}  ${</span><span class=\"nv\">wave</span><span class=\"p\">}\n    </span><span class=\"nf\">Should not exceed maximum color contrast issues</span><span class=\"p\">  ${</span><span class=\"nv\">url</span><span class=\"p\">}  ${</span><span class=\"nv\">contrast</span><span class=\"p\">}\n\n</span><span class=\"gu\">Should not exceed maximum WAVE errors</span><span class=\"p\">\n    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]  ${</span><span class=\"nv\">url</span><span class=\"p\">}  ${</span><span class=\"nv\">max</span><span class=\"p\">}\n    ${</span><span class=\"nv\">errors</span><span class=\"p\">} =  </span><span class=\"nf\">Count WAVE accessibility errors</span><span class=\"p\">  ${</span><span class=\"nv\">url</span><span class=\"p\">}\n    </span><span class=\"nf\">Should be true</span><span class=\"p\">  ${</span><span class=\"nv\">errors</span><span class=\"p\">}</span><span class=\"s\"> &lt;= </span><span class=\"p\">${</span><span class=\"nv\">max</span><span class=\"p\">}\n    ...  </span><span class=\"s\">WAVE Toolbar reported </span><span class=\"p\">${</span><span class=\"nv\">errors</span><span class=\"p\">}</span><span class=\"s\"> errors for </span><span class=\"p\">${</span><span class=\"nv\">url</span><span class=\"p\">}\n\n</span><span class=\"gu\">Should not exceed maximum color contrast issues</span><span class=\"p\">\n    [</span><span class=\"kn\">Arguments</span><span class=\"p\">]  ${</span><span class=\"nv\">url</span><span class=\"p\">}  ${</span><span class=\"nv\">max</span><span class=\"p\">}\n    ${</span><span class=\"nv\">errors</span><span class=\"p\">} =  </span><span class=\"nf\">Count color contrast issues</span><span class=\"p\">  ${</span><span class=\"nv\">url</span><span class=\"p\">}\n    </span><span class=\"nf\">Should be true</span><span class=\"p\">  ${</span><span class=\"nv\">errors</span><span class=\"p\">}</span><span class=\"s\"> &lt;= </span><span class=\"p\">${</span><span class=\"nv\">max</span><span class=\"p\">}\n    ...  </span><span class=\"s\">WCAG Contrast checker reported </span><span class=\"p\">${</span><span class=\"nv\">errors</span><span class=\"p\">}</span><span class=\"s\"> issue for </span><span class=\"p\">${</span><span class=\"nv\">url</span><span class=\"p\">}</span>\n</pre>\n</div>\n<div id=\"running\">\n<h3>Running</h3>\n<pre>$ pybot demo.robot\n</pre>\n<p><a href=\"https://robotframework-selenium2accessibility.readthedocs.org/\" rel=\"nofollow\">Read the docs for more detailed information.</a></p>\n</div>\n</div>\n<div id=\"changelog\">\n<h2>Changelog</h2>\n<div id=\"id1\">\n<h3>0.2.1 (2013-09-28)</h3>\n<ul>\n<li>Updated changelog.</li>\n</ul>\n</div>\n<div id=\"id2\">\n<h3>0.2.0 (2013-09-28)</h3>\n<ul>\n<li>Renamed to robotframework-selenium2accessibility. Some WAVE-related\nkeywords were renamed to avoid future namespace collision in keyword\nnames. See docs for current keywords.</li>\n<li>Added WCAG Contrast checker, integration and keywords.</li>\n</ul>\n</div>\n<div id=\"id3\">\n<h3>0.1.3 (2013-05-26)</h3>\n<ul>\n<li>Fix to take page screenshot only when WAVE Toolbar reports errors</li>\n</ul>\n</div>\n<div id=\"id4\">\n<h3>0.1.2 (2013-05-26)</h3>\n<ul>\n<li>Updated documentation.</li>\n</ul>\n</div>\n<div id=\"id5\">\n<h3>0.1.1 (2013-05-25)</h3>\n<ul>\n<li>Fix packaging (removed non-ascii character from README)</li>\n</ul>\n</div>\n<div id=\"id6\">\n<h3>0.1.0 (2013-05-25)</h3>\n<ul>\n<li>First pre-release</li>\n</ul>\n</div>\n</div>\n\n          </div>"}, "last_serial": 895519, "releases": {"0.2.0": [{"comment_text": "", "digests": {"md5": "1240c6d0084b965b398a575951df10a4", "sha256": "6016752433f52c02c55aed51db022b55a3083e386a62ffe6cd84fe545c0e491c"}, "downloads": -1, "filename": "robotframework-selenium2accessibility-0.2.0.zip", "has_sig": false, "md5_digest": "1240c6d0084b965b398a575951df10a4", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 387492, "upload_time": "2013-09-28T09:19:33", "upload_time_iso_8601": "2013-09-28T09:19:33.612594Z", "url": "https://files.pythonhosted.org/packages/25/6d/560b44a7721d9ba4a4af235b335c008cbc44d57ebec11ba826e028cda6d8/robotframework-selenium2accessibility-0.2.0.zip", "yanked": false}], "0.2.1": [{"comment_text": "", "digests": {"md5": "86110d89222bd779c56ece6ec7159428", "sha256": "6f453b7f3872ad44d4f45bc09b3959650e706a323948392a78a34297035f1448"}, "downloads": -1, "filename": "robotframework-selenium2accessibility-0.2.1.zip", "has_sig": false, "md5_digest": "86110d89222bd779c56ece6ec7159428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 387797, "upload_time": "2013-09-28T09:26:01", "upload_time_iso_8601": "2013-09-28T09:26:01.731465Z", "url": "https://files.pythonhosted.org/packages/b6/16/c3a77b2c2e48061f52b129db796feeebdb1dbe7db39c2882d6263c4ab4ca/robotframework-selenium2accessibility-0.2.1.zip", "yanked": false}]}, "urls": [{"comment_text": "", "digests": {"md5": "86110d89222bd779c56ece6ec7159428", "sha256": "6f453b7f3872ad44d4f45bc09b3959650e706a323948392a78a34297035f1448"}, "downloads": -1, "filename": "robotframework-selenium2accessibility-0.2.1.zip", "has_sig": false, "md5_digest": "86110d89222bd779c56ece6ec7159428", "packagetype": "sdist", "python_version": "source", "requires_python": null, "size": 387797, "upload_time": "2013-09-28T09:26:01", "upload_time_iso_8601": "2013-09-28T09:26:01.731465Z", "url": "https://files.pythonhosted.org/packages/b6/16/c3a77b2c2e48061f52b129db796feeebdb1dbe7db39c2882d6263c4ab4ca/robotframework-selenium2accessibility-0.2.1.zip", "yanked": false}], "timestamp": "Fri May  8 03:01:49 2020"}